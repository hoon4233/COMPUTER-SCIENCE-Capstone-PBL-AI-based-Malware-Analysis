mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
or
push
imul
inc
mov
inc
nop
inc
add
add
(bad)
jmp
pop
add
push
push
outs
je
adc
das
jo
fld
ins
scas
ins
add
cs
fistp
pop
dec
and
addr16
push
xor
mov
jns
mov
push
mov
das
push
dec
add
inc
js
cmp
add
jle
inc
popa
inc
int3
(bad)
add
out
ss
into
adc
add
or
out
mov
push
pusha
adc
ficomp
mov
dec
repz
outs
jne
add
push
gs
add
jg
inc
outs
ins
jo
(bad)
pop
(bad)
jne
jb
lock
jge
jns
nop
push
push
add
jb
call
push
iret
out
pop
fisub
jg
adc
dec
nop
and
movs
xor
movs
mov
mov
add
fild
and
or
or
popa
jg
push
jg
cld
or
push
popa
push
fld
pop
in
je
push
adc
or
and
ficomp
add
add
movs
inc
int
jns
mov
mov
lods
in
ds
sti
jg
aas
inc
pop
push
dec
bound
arpl
pop
sbb
inc
jns
xor
nop
pop
hlt
cmp
dec
adc
popa
arpl
add
loop
rcr
movs
rcr
cs
imul
push
or
mov
lock
or
imul
pop
xchg
cmp
mov
(bad)
idiv
int3
add
jmp
adc
jns
int3
sbb
xor
fiadd
pop
cmp
sbb
shr
in
push
add
or
sbb
cmp
xchg
ins
jo
jo
daa
adc
mov
(bad)
jle
xor
mov
pop
push
cld
or
push
push
inc
cmp
push
push
(bad)
ja
adc
or
xchg
popf
cmp
int
jo
mov
dec
add
push
inc
popa
push
push
imul
leave
leave
dec
mov
cwde
xchg
leave
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
mov
ins
push
mov
pusha
pop
leave
leave
leave
leave
pop
push
push
dec
leave
leave
leave
leave
dec
inc
inc
cmp
leave
leave
leave
cmp
lods
leave
leave
leave
leave
sub
and
leave
leave
leave
leave
sar
sbb
ror
leave
leave
leave
leave
adc
or
pop
cld
retf
leave
add
push
add
mov
mov
fwait
mov
sbb
sub
je
movzx
mov
ss
pop
ret
pushf
fadd
addr16
push
clc
pmuludq
pushf
pushf
pushf
pushf
in
call
(bad)
mov
mov
add
push
add
out
(bad)
mov
mov
test
jne
xor
pop
enter
mov
mov
ret
(bad)
inc
ror
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
inc
add
scas
mov
mov
xchg
push
xor
mov
mov
test
push
add
or
adc
add
mov
aaa
xor
mov
push
or
and
pop
lock
or
push
mov
mov
mov
mov
add
rol
(bad)
fistp
cmp
push
or
push
or
ret
and
mov
mov
push
or
inc
add
adc
ins
fistp
jne
aaa
sub
jne
(bad)
mov
sbb
add
pop
pop
pop
push
jg
push
je
sti
mov
xchg
cmp
jb
sbb
test
add
int
bound
jne
mov
push
(bad)
mov
dec
ret
jmp
add
mov
add
pop
repnz
sub
jl
mov
jnp
push
sub
mov
or
mov
aam
or
or
mov
or
jmp
sbb
sti
jne
sbb
imul
cld
adc
cmp
mov
ss
add
xchg
pop
jno
jle
push
push
jg
mov
mov
test
xchg
mov
mov
dec
or
call
push
and
push
mov
(bad)
fst
data16
dec
or
push
fisubr
jne
icebp
push
push
dec
push
or
mov
cmp
in
mov
or
pop
fucomip
mov
mov
or
cmp
pop
sbb
mov
sub
mov
jae
imul
es
ja
mov
add
cmp
ja
cmp
jbe
pop
jae
or
or
sbb
jo
sbb
push
or
or
add
jo
mov
mov
cmps
mov
jmp
sbb
jno
mov
or
push
adc
hlt
outs
ret
pop
sar
ror
lock
sbb
fld
fucom
sbb
sub
or
lds
mov
cmp
add
and
mov
push
sub
mov
test
ss
jbe
scas
add
sti
push
push
add
sbb
adc
sbb
mov
dec
or
push
jb
push
pop
sbb
add
xor
jmp
push
movs
cmp
out
sub
or
sbb
jae
mov
cmp
inc
shr
sbb
add
add
daa
lods
and
dec
je
dec
es
rcr
mov
mov
(bad)
aas
or
add
repnz
dec
mov
idiv
inc
xlat
mov
dec
(bad)
cli
movs
or
je
mov
inc
scas
jle
in
xor
push
(bad)
sti
push
pop
stc
pop
pop
aam
mov
jne
cmp
fs
jge
movs
and
push
and
mov
jp
js
ins
pop
mov
cli
jno
inc
pusha
jl
add
je
cmp
mov
or
jle
adc
mov
clc
call
add
xor
(bad)
call
or
mov
mov
pop
fcom
mov
fwait
lea
lea
inc
jne
mov
imul
jne
xchg
jge
ins
pusha
cmp
cmp
cmp
ds
popf
adc
adc
xchg
(bad)
ret
mov
mov
mov
mov
jecxz
add
adc
jae
loopne
loope
mov
out
ror
or
ds
jno
pop
push
test
je
imul
xchg
loopne
addr16
add
adc
adc
jmp
jecxz
xor
cmp
pop
inc
jmp
pop
sbb
mov
in
ss
push
push
mov
mov
(bad)
adc
jl
and
add
mov
cmp
clc
seta
or
sbb
sub
add
sbb
leave
jle
hlt
inc
mov
add
jne
mov
mov
cli
adc
add
pop
pop
push
adc
dec
add
and
mov
sub
in
pop
pop
xchg
pop
and
push
mov
test
shl
stos
(bad)
iret
add
add
clc
in
out
mov
test
fs
push
add
outs
push
pop
bound
mov
sub
push
loopne
adc
sub
pop
fcom
cmp
adc
adc
stc
pop
jg
add
pop
test
jns
add
sar
test
sti
mov
jmp
sub
hlt
mov
mov
adc
jmp
dec
fadd
jb
adc
out
add
or
mov
cmp
jmp
xchg
lea
jnp
inc
inc
mov
jb
enter
outs
aaa
es
or
or
mov
and
add
jmp
add
loop
ficom
jnp
loopne
adc
jbe
or
push
or
dec
mov
pop
(bad)
xchg
or
fistp
add
and
push
(bad)
xor
iret
or
or
or
fisubr
(bad)
sub
inc
cmp
test
je
mov
popa
jg
or
(bad)
cmp
cmp
test
add
push
cmp
mov
xor
add
jbe
or
fsub
test
jne
mov
(bad)
adc
mov
or
and
mov
pop
ins
(bad)
cmc
adc
add
dec
les
dec
xor
into
push
lea
sub
cld
jg
cmc
outs
or
sub
cmp
jge
mov
loop
fsub
or
jmp
daa
xlat
add
inc
add
mov
in
mov
push
aaa
jnp
aad
(bad)
(bad)
clc
add
dec
jae
lea
shl
in
rcl
and
mov
xchg
xlat
cmp
fisttp
call
call
aaa
push
movs
stc
pop
adc
enter
push
sbb
mov
jmp
hlt
inc
adc
push
pop
add
sub
out
out
cmp
or
fs
mov
sub
enter
sbb
inc
adc
or
sub
inc
sub
dec
mov
push
or
sub
mov
add
mov
dec
adc
push
adc
imul
mov
cmp
pusha
aas
xchg
loop
xchg
jo
pop
add
adc
repz
xchg
xor
sub
sub
xor
pop
mul
(bad)
out
sub
add
sbb
mov
cld
adc
into
es
xchg
or
(bad)
shl
sbb
adc
ins
push
lock
stos
pop
int3
(bad)
shr
pusha
or
xor
inc
sar
cmp
pop
push
adc
or
lods
data16
xor
mov
add
xor
mov
fild
cs
pop
mov
pop
je
je
adc
sub
cmp
sub
pop
push
adc
sub
cmp
lds
cwde
sbb
hlt
inc
add
xor
dec
(bad)
loope
sub
jmp
jmp
jmp
push
add
and
inc
aad
xchg
leave
jmp
repnz
jne
data16
mov
xor
jne
test
pop
xlat
test
add
jo
pop
movs
pusha
shr
int3
sti
clc
stos
jle
inc
inc
jmp
xor
push
push
mov
add
ret
pop
or
sti
mov
(bad)
sbb
test
jg
xor
pop
or
inc
sub
mov
pop
inc
scas
shl
push
loopne
add
mov
jmp
mov
jno
retf
cmp
mov
mov
call
rcl
jbe
jmp
rcr
sbb
cmp
sar
sub
mov
add
arpl
sbb
pop
mov
mov
arpl
inc
jb
and
ffree
test
pop
push
push
sbb
jmp
jne
pop
into
ds
out
add
jo
xor
push
lods
nop
xchg
ror
es
loope
in
mov
ret
add
test
ja
dec
movnti
add
lock
loope
push
or
not
(bad)
jge
cmp
cmp
lds
mov
pop
in
ret
js
pop
mov
and
jne
stos
add
mov
in
and
jecxz
fisttp
mov
test
add
je
inc
cli
idiv
or
jmp
mov
cmp
rol
dec
clc
push
adc
or
adc
sbb
and
sbb
pop
mov
std
lea
or
jg
add
retf
fsub
(bad)
mov
mov
test
(bad)
jge
loope
add
mov
inc
add
cmp
lock
sbb
pop
nop
sbb
not
loopne
loop
cli
add
hlt
jge
dec
das
fnstsw
xchg
mov
add
cmps
sbb
pop
mov
push
cwde
or
sbb
fcomp
push
fmul
ja
or
mov
outs
pop
jecxz
cmp
iret
adc
jmp
daa
add
inc
lahf
add
add
dec
or
mov
jo
sub
popa
dec
add
push
adc
mov
pop
mov
loop
in
loopne
jmp
xchg
or
sub
cmp
fadd
cmps
jmp
dec
pop
retf
and
fsub
push
xor
mov
push
xchg
in
inc
add
js
pop
lahf
sbb
ins
or
or
dec
cmc
adc
movs
nop
iret
cmp
jo
ins
sub
iret
push
sub
pop
cld
jmp
jmp
adc
add
gs
mov
bound
ss
adc
retf
xchg
dec
sbb
jbe
mov
pushf
mov
push
test
jle
call
pop
or
std
daa
mov
add
(bad)
dec
jae
dec
je
mov
test
mov
loopne
je
sbb
enter
or
dec
jnp
mov
ret
push
jmp
mov
jmp
add
shl
loopne
jo
arpl
push
mov
push
jle
or
dec
sbb
mov
rol
add
mov
push
inc
sbb
lock
xor
jg
js
fnstsw
mov
jo
popf
jecxz
sub
ins
fidivr
out
jne
rcr
test
jo
sti
mov
mov
mov
cmp
cmp
loopne
adc
mov
push
push
and
push
push
xor
rcr
xor
pop
mov
xchg
jp
mov
mov
sub
sbb
ret
loopne
mov
fdivr
sar
(bad)
mov
inc
rep
jmp
mov
fist
in
leave
jmp
mov
jmp
mov
cmp
xchg
add
jbe
push
rcl
sub
mov
pop
idiv
outs
add
or
add
push
push
imul
lea
jnp
or
(bad)
div
sub
adc
xchg
call
ret
fbstp
lock
cmp
ja
je
cmp
rep
jbe
fwait
inc
jo
loope
sahf
js
je
cld
lea
xor
mov
std
xor
cld
fucomi
shl
cmps
jmp
rol
adc
dec
je
cmp
jbe
cmp
xchg
add
fcmovnu
inc
jmp
xor
mov
jmp
cmp
xor
push
sub
add
ja
call
test
mov
aad
and
fdivrp
inc
mov
imul
push
outs
cmp
cmp
jbe
mov
mov
inc
inc
adc
cmc
shl
pop
xchg
push
into
test
bound
push
je
jno
out
addr16
xor
lock
fmul
xor
bound
adc
add
jmp
adc
jno
js
lea
sub
or
xchg
push
mov
or
xchg
jb
mov
pop
xchg
div
repz
add
enter
push
out
aas
sbb
push
std
cmp
pop
sub
daa
jmp
dec
mov
mov
push
mov
or
or
ins
xlat
fistp
add
popa
jb
cmp
ja
sti
mov
mov
fldcw
mov
add
cmp
pop
push
fcos
fnstsw
sahf
jp
fstp
fldz
in
mov
jmp
fsubr
(bad)
lock
faddp
fscale
fstp
dec
and
fsubrp
add
fnstcw
fwait
or
ins
fsubr
test
fldcw
dec
fsin
(bad)
int
inc
mov
ret
inc
or
fwait
aam
mov
pop
or
pop
mov
pop
inc
jl
push
or
jae
adc
xor
mov
cmp
mov
outs
or
cmp
pop
pop
and
(bad)
shl
and
dec
add
sbb
out
cmp
pop
mov
mov
sbb
sbb
mov
sbb
lock
push
mov
je
lock
inc
adc
or
lea
pusha
pop
stos
adc
push
adc
cmps
mov
adc
push
adc
cmp
jne
push
cwde
add
rol
push
das
inc
jae
bound
push
repnz
fwait
xor
xchg
pop
jp
mov
push
or
test
mov
int
rol
in
outs
push
sub
add
add
rcl
mov
dec
loopne
pop
fidiv
cs
xchg
mov
push
cld
mov
mov
daa
je
sbb
das
inc
add
push
sar
and
cmp
mov
push
mov
push
push
lea
push
sbb
xor
(bad)
cmp
add
(bad)
jbe
fild
dec
add
push
inc
push
inc
inc
out
xor
fild
jbe
xchg
push
aaa
test
icebp
mov
loop
ror
imul
mov
jae
cmp
push
mov
out
push
xchg
sub
ja
(bad)
fstp
jl
jne
jmp
lea
sbb
pop
sahf
and
adc
icebp
add
push
push
cmp
mov
bound
hlt
jmp
cmc
movs
pop
je
ins
cmp
mov
pop
mov
cmps
inc
shl
add
and
pop
sbb
xor
imul
push
ret
std
sbb
hlt
xor
mov
lea
mov
mov
adc
push
test
adc
sti
ret
push
cmovb
lea
pop
fwait
das
dec
test
add
out
push
dec
xor
(bad)
sub
sub
push
adc
sbb
call
loopne
xor
jmp
cmp
sti
and
and
(bad)
jmp
sbb
and
stos
imul
mul
movs
cdq
pop
mov
ja
and
sbb
leave
pusha
push
sub
sbb
lock
adc
and
sbb
jmp
cmp
jge
je
mov
(bad)
jmp
into
(bad)
xchg
mov
mov
xor
mov
inc
add
jb
cmp
ja
mov
mov
jg
cld
pop
mov
inc
add
fisttp
test
mov
inc
xchg
or
retf
fst
sbb
retf
mov
inc
inc
and
or
xor
dec
ja
add
push
shr
je
mov
mov
cmp
jne
dec
je
mov
pop
add
aaa
add
add
dec
jne
jmp
adc
sti
outs
(bad)
fild
and
je
mov
cmp
jne
push
adc
add
adc
in
xor
add
sbb
rcl
(bad)
outs
jbe
cmp
jne
shr
shr
sbb
repz
mov
shr
or
fwait
sub
dec
pop
cmp
sar
aaa
ret
and
mov
cmp
jne
dec
dec
fdiv
cmps
dec
and
xor
xor
cmp
jg
cmp
fdivrp
add
call
pushf
jle
mov
mov
pushf
jo
push
mov
pop
jmp
jo
test
inc
paddd
cwde
sti
repnz
mov
and
add
mov
pop
or
jle
sti
call
pop
and
dec
mov
pop
popf
adc
mov
mov
sbb
xor
xor
ins
adc
jae
xor
ror
test
sbb
test
cmp
adc
shl
mov
cmp
hlt
ror
sti
jle
je
fmul
por
in
ins
por
lahf
fwait
inc
and
jne
lea
add
sbb
jae
sbb
in
mov
shl
mov
xchg
std
(bad)
pop
mov
mov
shl
data16
mov
rep
adc
stos
pop
out
xor
imul
fs
adc
push
popf
sub
out
cmps
jmp
call
dec
fidivr
imul
push
push
loopne
sbb
push
add
cld
scas
cli
test
pop
je
cmp
cmp
jae
test
int3
(bad)
out
scas
adc
or
je
cmp
je
lock
ins
pop
push
aaa
ins
ret
push
call
das
cmp
jb
xchg
pop
enter
inc
add
jg
adc
int
mov
mov
bound
jo
out
mov
call
push
mov
adc
rol
push
adc
jl
mov
std
test
cmp
je
cmp
push
stos
dec
jg
jmp
into
inc
adc
int
bnd
cmp
jne
dec
sub
mov
sbb
mov
je
out
ss
outs
sub
icebp
ja
inc
aas
ins
pop
mov
test
gs
(bad)
in
jle
cmc
lea
sub
loop
(bad)
icebp
add
mov
sbb
sbb
jne
mov
add
cmp
inc
loope
add
cwde
pop
popa
je
add
test
aaa
xlat
mov
int3
mov
mov
jo
inc
shr
or
push
dec
bound
ret
push
aaa
cmp
sbb
in
daa
sub
or
idiv
push
cmp
push
(bad)
ins
fstp
mov
inc
cmp
je
mov
or
je
or
je
(bad)
int3
xchg
and
je
sbb
or
jne
je
sub
dec
and
push
and
add
(bad)
mov
xchg
sub
and
ja
cmp
ja
lea
mov
push
mov
dec
je
sar
jmp
inc
clc
div
sti
push
fdivr
js
pop
sub
jmp
inc
inc
jmp
mov
out
in
je
adc
mov
adc
or
or
stos
aad
cwde
pop
xor
mov
nop/reserved
mov
sbb
repnz
test
push
mov
call
(bad)
push
pop
movq
mov
xor
xor
js
mov
mov
retf
add
daa
mov
shl
movs
jmp
pop
pop
jmp
xchg
jmp
cmp
mov
dec
or
nop
inc
ins
jg
jo
cmp
stc
inc
jle
sub
fs
popf
jmp
aad
ret
and
loope
push
test
jg
jl
les
ss
mov
ds
or
jbe
pusha
and
xor
add
jmp
mov
pop
inc
mov
sub
push
cmp
mov
pushf
lock
mov
dec
jne
pop
sub
mov
push
or
clc
daa
into
fisttp
push
sub
popa
ret
jmp
rcl
rol
add
fnstenv
or
pop
xlat
sti
ror
fs
repz
retf
idiv
or
inc
dec
jne
xchg
not
inc
and
hlt
outs
mov
sbb
pushf
mov
jl
je
call
aam
inc
sti
dec
lea
fld
pop
call
lea
cmp
mov
je
inc
in
out
mov
jmp
xchg
xchg
jge
mov
xor
sbb
mov
push
fstp
fld
xchg
adc
les
(bad)
adc
mov
leave
daa
lahf
sbb
or
or
ret
bswap
inc
ds
adc
mov
pop
stc
sub
sbb
add
mov
icebp
adc
es
test
out
pop
stc
fnsave
test
mov
(bad)
(bad)
stc
cs
jbe
imul
cmp
mov
(bad)
mov
(bad)
fwait
jmp
(bad)
lods
inc
cmp
xlat
fadd
outs
xor
aaa
jmp
xchg
aas
push
push
int3
into
sbb
ror
mov
call
popa
push
pop
test
enter
movs
outs
movs
push
inc
cmp
and
daa
(bad)
retf
into
pop
(bad)
(bad)
(bad)
inc
or
pop
inc
in
mov
mov
addr16
leave
repnz
bound
(bad)
(bad)
jmp
add
inc
sahf
mov
sub
inc
aad
iret
dec
js
inc
mov
adc
lds
stos
mov
cmp
or
mov
pop
out
sub
imul
(bad)
cmp
inc
xor
cmp
call
mov
sti
jmp
stos
push
inc
(bad)
(bad)
(bad)
dec
sar
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
(bad)
(bad)
(bad)
(bad)
clc
scas
adc
(bad)
inc
pop
pushf
mov
pop
pushf
mov
fs
aam
imul
loope
jp
iret
inc
bound
(bad)
(bad)
(bad)
ds
push
cmps
scas
mov
pop
or
add
cmp
xor
mov
pop
cmp
sahf
xchg
pop
cmps
lock
mov
popa
mov
(bad)
(bad)
(bad)
jg
pop
mov
(bad)
repz
mov
sub
and
and
outs
bound
xor
jmp
add
sti
outs
fldcw
jne
push
pop
and
mov
or
out
sbb
hlt
movzx
pop
push
adc
sbb
push
js
aam
scas
hlt
movs
retf
dec
cmp
cmp
sub
mov
imul
test
test
sub
ja
or
and
mov
pop
aas
or
fs
movs
ret
adc
push
dec
inc
push
push
(bad)
(bad)
(bad)
inc
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
push
popa
jge
(bad)
les
fninit
fwait
int
div
sbb
(bad)
mov
jbe
mov
xor
mov
inc
aad
shl
es
outs
mov
or
dec
cld
jne
dec
mov
xor
and
jne
mov
push
das
cmp
inc
mov
inc
inc
fdiv
add
add
xchg
inc
shr
sbb
sbb
or
rcr
pop
pop
aaa
mov
sbb
add
outs
test
or
sub
xor
fidiv
jl
movups
fs
mov
shl
xor
and
clc
ins
xor
outs
loopne
mov
or
push
cld
loop
scas
ret
xlat
stos
mov
xor
push
shr
dec
rep
pop
scas
add
pop
mov
sub
pop
mov
fbld
sbb
in
cmp
je
pop
mov
add
jae
daa
push
mov
mov
push
sbb
cmp
jmp
lods
(bad)
mov
mov
mov
xor
mov
fmul
jmp
cmp
(bad)
jb
mov
mov
and
loope
push
pop
push
lods
sbb
rol
adc
pop
in
loop
jo
mov
mov
fldenv
clc
imul
mov
xor
std
xor
adc
clc
mov
fistp
mov
rol
push
mov
push
add
pop
(bad)
shl
(bad)
cmps
aam
mov
(bad)
dec
setne
mov
xchg
mov
int
xor
ret
(bad)
mov
sub
xor
call
jo
fmul
or
jne
or
(bad)
push
fcom
lds
jo
push
xor
add
leave
popf
(bad)
xor
sbb
ror
mov
leave
jne
mov
or
lock
add
jle
je
mov
sqrtps
scas
je
pop
std
neg
pop
add
sub
mov
pop
ficom
in
retf
test
push
mov
cli
jmp
pop
mov
aam
arpl
push
mov
xor
das
mov
sbb
mov
mov
pop
test
xor
cmp
data16
cmp
stos
fiadd
and
test
pop
cld
popa
lock
inc
mov
div
dec
mov
out
scas
pop
mov
dec
push
cmp
sbb
add
dec
jne
icebp
fucomi
sbb
hlt
call
add
sbb
jecxz
dec
cmp
out
push
mov
out
lahf
push
popf
enter
mov
js
call
pop
jmp
push
xor
call
mov
shl
jl
fs
jg
jo
xor
scas
adc
mov
mov
mov
arpl
or
pop
imul
mov
test
mov
push
ret
test
xchg
pop
scas
aaa
rcl
call
lahf
or
rcr
in
enter
cmp
popf
or
call
call
aas
add
cld
(bad)
in
push
call
xor
pusha
push
mov
dec
jae
cmp
dec
or
mov
repnz
add
add
rcr
sub
or
jae
addr16
pop
idiv
fst
and
sbb
jmp
call
mov
pop
add
sbb
sbb
jecxz
shl
inc
(bad)
fsub
nop
fst
push
aas
loop
fdivr
ror
pusha
adc
daa
(bad)
push
ds
inc
add
jne
call
inc
mov
xor
jne
std
cs
adc
test
lahf
loop
xor
inc
adc
xchg
clc
ja
fsub
cmp
je
aaa
lods
xor
dec
adc
jbe
test
xor
bound
clc
add
stos
jns
enter
(bad)
js
adc
adc
or
inc
cmp
pop
pop
xchg
push
sub
or
push
mov
and
mov
cmp
or
mov
mov
cmp
add
out
std
jge
pop
mov
mov
xor
icebp
das
push
mov
sbb
je
dec
or
add
cwde
test
jne
mov
pop
mov
or
and
add
aad
inc
cmps
lds
mov
out
sub
repnz
push
ret
clc
add
cmp
jne
movs
dec
das
xor
push
or
aam
sti
pop
and
push
xchg
dec
jne
bound
adc
faddp
sub
arpl
sbb
cmp
shl
mov
lahf
adc
push
adc
adc
adc
add
push
(bad)
pop
inc
pop
adc
aam
or
jmp
or
pop
maskmovq
test
inc
add
pushf
ret
or
sub
adc
inc
add
jg
(bad)
jno
loope
daa
dec
pusha
cmc
je
sbb
mov
or
add
out
out
and
sti
push
call
cli
imul
inc
mov
jecxz
fdiv
mov
loopne
push
or
jecxz
call
ds
xchg
mov
lea
pop
jmp
xchg
shr
movs
xchg
cmp
push
push
push
inc
pop
push
rcr
add
pop
dec
mov
dec
je
mov
or
pusha
add
test
pop
mov
in
div
hlt
shl
sub
lods
stos
adc
adc
pusha
mov
xchg
jae
pop
sub
jne
xchg
mov
push
sbb
xor
jmp
mov
add
mov
add
ja
jg
je
cmp
push
sub
dec
dec
je
jmp
add
call
xor
pop
jmp
out
push
cmp
sub
adc
jmp
push
sbb
es
mov
jmp
mov
jmp
mov
jmp
mov
sbb
push
sbb
into
jl
push
pop
icebp
mov
or
retf
inc
punpcklwd
imul
dec
mov
push
retf
psllw
mov
add
push
dec
pop
js
stos
push
xor
sub
inc
sbb
xor
fmul
ds
out
push
push
imul
sbb
add
cs
mov
cmps
mov
mov
cli
xchg
or
test
push
mov
fmul
jge
loop
adc
mov
mov
xlat
mov
ret
adc
enter
ror
stc
push
add
lods
add
cmps
pop
xchg
pop
mov
cmc
mov
pop
or
jo
ds
test
sti
fstp
dec
mov
inc
fiadd
call
and
adc
jmp
sub
cmp
add
and
sahf
loopne
and
dec
mov
ds
adc
js
sahf
cmp
jle
pop
neg
cmp
inc
mov
jg
mov
mov
sbb
inc
leave
outs
xchg
rcr
mov
xor
pop
out
out
or
cmp
cmp
popa
sub
es
cmp
sbb
adc
fadd
sahf
lods
pusha
xor
fidivr
push
in
mov
dec
jmp
dec
sub
sti
add
inc
or
inc
loopne
xchg
ds
js
pop
(bad)
lock
mov
ds
add
ret
cdq
idiv
add
push
es
sti
mov
dec
dec
(bad)
(bad)
stos
rcr
xchg
xchg
adc
mov
push
adc
push
push
push
inc
push
out
jl
jecxz
push
add
rol
xchg
cli
not
outs
adc
ja
add
mov
mov
mov
push
fimul
(bad)
ja
push
cmp
jnp
cmp
loop
add
mov
cmp
or
push
jne
pop
jbe
jle
xor
inc
pop
ret
mov
xor
push
push
ins
adc
je
jge
cmp
pop
or
or
dec
cmp
push
or
adc
rcl
mov
call
and
dec
and
icebp
dec
out
xor
sbb
inc
cmp
or
ds
enter
add
imul
aad
ds
sbb
pop
sbb
fld
cmp
or
push
ins
aam
int3
mov
add
jne
(bad)
adc
add
fsub
jne
cmp
fisttp
mov
mov
push
or
ret
pop
push
cmp
dec
or
popf
aas
cwde
dec
(bad)
test
push
cdq
mov
jne
mov
leave
push
fs
push
jb
nop
stos
sub
loope
pop
gs
push
xor
push
inc
cli
adc
lock
jno
push
xlat
pop
pop
mov
or
icebp
mov
pop
mov
add
or
mov
mov
loopne
xor
je
mov
or
push
mov
pushf
ss
xchg
push
xchg
push
movs
lods
sahf
push
cmp
stos
in
(bad)
dec
adc
dec
mul
loopne
push
lea
std
pop
scas
mov
push
adc
cmp
sbb
add
or
out
lods
mov
dec
jne
fimul
inc
inc
jg
test
inc
inc
in
mov
pop
push
scas
fld
mov
xchg
pop
in
mov
xchg
xchg
jle
ja
or
add
loopne
push
or
unpckhps
mov
push
and
mov
xor
dec
iret
mov
das
stc
mov
call
popf
add
mov
mov
sub
sbb
ror
sbb
pusha
mov
(bad)
cmp
cld
movs
xchg
ret
mov
or
(bad)
out
mov
jmp
lea
cmp
push
add
dec
mov
test
dec
mov
jo
cmp
sub
sub
cmps
fistp
imul
cmp
sbb
add
cmp
clc
add
lods
jmp
nop
pop
inc
loop
push
cmp
je
int
in
nop
out
add
fucomip
push
dec
cs
call
pop
sub
mov
pop
mov
sub
and
jmp
or
push
or
addr16
in
addr16
imul
add
add
mov
inc
xchg
push
jo
mov
scas
and
pop
add
pop
pop
xor
add
ficomp
lahf
sub
pop
cld
jmp
mov
inc
pop
or
pop
jle
ficomp
add
aas
xchg
je
and
mov
push
cld
dec
loopne
lock
cmp
pop
inc
shl
sbb
mov
and
and
add
sub
add
cmp
je
cmp
mov
mov
cmp
ror
sub
cld
add
(bad)
xchg
fmul
daa
aad
cli
lds
push
sbb
frstpm(287
fsubp
dec
clc
mov
mov
jmp
test
call
mov
sub
cmp
mov
pop
pop
mov
dec
jmp
sub
add
fcomp
cmp
fs
dec
jne
mov
loopne
fdiv
jge
mov
add
dec
jmp
and
inc
pushf
sbb
push
or
add
pop
dec
jne
jo
sub
add
popf
sar
scas
and
lea
jmp
iret
cmps
inc
ret
mov
cmp
add
push
dec
call
mov
mov
inc
cmp
cdq
pop
dec
and
adc
cmp
out
cmps
je
and
jo
ret
dec
push
and
jmp
aam
xlat
orps
push
clc
inc
dec
aam
sub
ret
add
hlt
push
mov
mov
(bad)
adc
add
and
pop
adc
dec
test
sbb
mov
outs
pop
adc
inc
or
jle
mov
(bad)
inc
es
jl
cmp
jge
sub
xchg
xchg
inc
xchg
add
push
adc
shr
in
jmp
and
cmc
and
ror
xchg
retf
jl
sub
rcr
mov
icebp
mov
add
stc
add
lea
inc
pop
xor
fmul
push
push
cli
mov
repz
mov
cld
std
clc
sub
inc
dec
jge
cmp
adc
imul
sbb
jbe
add
gs
cmp
mov
mov
lea
or
push
add
fistp
jmp
js
xchg
xor
mov
push
ins
lock
sbb
adc
adc
pop
mov
in
pop
ss
jno
sbb
rcr
bound
push
lock
and
sbb
push
mov
xlat
mov
sub
jo
(bad)
dec
jmp
pminub
fs
(bad)
arpl
cli
pop
cmp
add
aas
add
and
adc
jae
push
int
pop
in
(bad)
push
retf
add
jmp
mov
repnz
rol
cmps
pop
and
ret
out
pop
xor
push
ss
dec
dec
mov
fadd
fstp
outs
pop
pusha
arpl
les
cs
pop
cmps
push
es
jo
daa
scas
out
pop
movs
jge
adc
aaa
xchg
in
imul
pop
push
push
xor
push
sub
test
gs
push
cmp
int
mov
call
popf
jmp
push
stos
adc
push
fsub
mov
arpl
jmp
inc
adc
fsubr
pop
jmp
ins
jle
rol
test
add
jae
mov
test
cwde
adc
outs
push
add
pop
push
xchg
xor
(bad)
rcr
xor
adc
nop
mov
or
jl
add
push
mov
adc
das
(bad)
fsub
xor
dec
hlt
hlt
and
xchg
jmp
enter
js
jle
xlat
(bad)
pop
cmp
jg
mov
aad
mov
push
pop
cs
sbb
xchg
xor
(bad)
pop
lods
cmps
dec
jge
push
jle
lea
mov
push
test
inc
mul
pop
inc
fld
jbe
pop
adc
nop
ss
lahf
add
shr
jmp
popa
inc
fiadd
push
add
(bad)
int3
cmp
not
adc
push
aas
push
add
into
adc
add
mov
xlat
pop
int3
pop
movzx
out
retf
rcr
shr
adc
rcr
xlat
(bad)
dec
test
pop
popa
popa
movs
xor
(bad)
pop
mov
call
dec
jne
inc
ds
mov
dec
dec
adc
shl
xor
je
cs
push
push
jb
adc
mov
add
(bad)
outs
add
div
call
das
enter
or
adc
add
sub
inc
cld
cmp
jge
pop
dec
cmp
aam
out
pop
push
ds
or
ret
cmp
push
mov
jmp
or
clc
mov
call
ret
xchg
jl
cmp
jl
ss
dec
sbb
call
pop
call
and
mov
cmp
stos
pop
sub
pop
sbb
xor
inc
stc
jle
sub
sbb
cmp
jo
xor
inc
xchg
hlt
jo
ror
mov
pusha
cmp
out
out
cmp
jmp
call
xor
popa
inc
push
sub
push
and
imul
retf
mov
sbb
dec
cwde
imul
and
jmp
js
mov
test
lods
add
adc
loope
dec
cmps
push
jmp
mov
add
mov
xchg
js
pop
sbb
push
adc
loopne
jl
mov
cmp
sub
mov
sbb
xor
sub
dec
pop
dec
pushf
stc
test
pop
cmp
mov
xchg
push
pop
std
pop
lea
jl
push
lods
aam
ror
inc
mov
jg
pop
out
cs
and
fs
push
and
xchg
jg
jno
je
mov
cmp
je
cmp
je
cmp
mov
stos
dec
(bad)
ss
cwde
clc
jmp
adc
pop
icebp
dec
imul
out
jmp
push
mov
push
or
loopne
pop
cs
cs
adc
cmp
pop
jmp
popf
sub
sub
retf
das
push
jmp
add
cwde
fstp
dec
inc
(bad)
adc
ret
mov
inc
xor
push
jo
fcmovnbe
and
jns
pop
jbe
popf
mov
push
mov
dec
or
test
or
and
adc
push
cmp
outs
ja
outs
clc
push
test
outs
es
push
dec
sbb
repz
repnz
nop
inc
mov
inc
and
in
sub
out
test
cmp
pop
push
fistp
icebp
jmp
call
mov
nop
xchg
adc
popa
mov
adc
pop
jp
xchg
es
sub
cmp
outs
jp
in
daa
mov
xchg
outs
movs
jb
push
push
dec
hlt
sub
pop
pop
add
movs
push
dec
dec
xor
cmp
dec
sub
pusha
inc
pop
jo
stos
or
sbb
arpl
sbb
or
lea
outs
cld
pop
pop
mov
push
push
add
sar
add
add
push
push
pop
sbb
or
in
cmp
lods
out
dec
or
push
or
jo
jo
adc
xor
loop
pop
or
fild
lahf
jmp
and
daa
inc
push
inc
sbb
xor
push
pop
adc
push
ret
push
or
test
inc
push
fs
jmp
mov
add
jns
cwde
lea
xor
mov
in
ds
pop
push
xchg
inc
xchg
push
lea
jne
enter
bound
add
pop
jb
aas
(bad)
ins
and
mov
in
inc
and
jge
push
fimul
pushf
clc
jmp
out
es
sbb
out
sub
dec
add
jmp
mov
loop
shl
dec
jg
or
xor
add
es
ja
sti
add
add
vmaskmovdqu
shl
inc
jmp
aaa
call
add
je
cmp
ror
dec
cmp
or
adc
popa
test
ret
or
sub
pop
je
jl
mov
jne
push
ss
fcom
dec
sbb
push
aas
add
imul
in
mov
xchg
xchg
push
(bad)
stos
jo
pop
pop
ffreep
outs
arpl
dec
pop
std
rol
ins
mov
push
out
and
add
mov
ror
xor
push
mov
inc
js
sti
pushf
std
sub
jge
neg
adc
rcl
bound
mul
mov
idiv
and
add
dec
adc
pop
pop
ret
inc
sub
loopne
push
nop
inc
pop
push
stos
mov
leave
jne
je
push
jge
pop
or
je
push
jns
neg
mul
add
adc
sbb
neg
sbb
add
(bad)
push
not
loopne
rcl
(bad)
rcl
cmp
jb
cmp
jb
sub
sbb
inc
mov
push
clc
loop
pop
test
xchg
push
or
sub
repz
mov
and
dec
js
dec
or
rol
or
or
push
mov
ret
pop
mov
cmp
pusha
and
jl
xchg
cmp
add
pop
pop
jmp
cmp
and
imul
push
adc
mov
dec
bound
jl
or
add
jge
fcmovbe
loop
shld
loopne
pop
aas
retf
fwait
ret
or
lods
rcl
jmp
lock
inc
xor
mov
push
xchg
or
mov
sub
daa
inc
cmp
(bad)
fistp
mov
dec
add
dec
sbb
inc
jmp
cmp
jb
fld
jne
mov
inc
and
sub
xchg
call
cmp
je
daa
xor
outs
ins
fdiv
mov
push
xor
jo
popa
jl
ret
or
push
stc
scas
stos
xor
push
jb
out
mov
leave
sar
inc
mov
sbb
aaa
jmp
or
and
mov
lahf
or
jl
and
add
mov
jg
mov
cdq
xlat
mov
movs
mov
test
adc
ficom
add
(bad)
cmps
mov
xor
jmp
rcl
xchg
or
sar
push
sub
adc
xor
nop
xor
clc
loopne
das
sub
adc
int3
cs
jg
sbb
sub
adc
push
xor
nop
int3
push
add
sub
add
add
or
xchg
shr
setl
adc
jge
add
or
shl
popa
mov
pop
sbb
dec
rol
xchg
ror
inc
hlt
add
cdq
push
les
push
(bad)
loopne
(bad)
cli
sub
repnz
pop
add
pusha
aaa
(bad)
adc
(bad)
jg
inc
pop
mov
mov
inc
push
pusha
xchg
jmp
lock
cmp
sub
bound
(bad)
int3
push
add
pop
and
mov
mov
test
call
push
sbb
data16
inc
call
or
mov
jne
mov
cmp
jge
and
outs
sbb
scas
xchg
add
mov
jmp
pop
lea
mov
icebp
mov
aad
jmp
or
sbb
xchg
jge
or
push
in
test
out
dec
in
push
rcl
(bad)
add
stos
push
dec
push
dec
push
dec
rcl
fbstp
adc
fstp
mov
adc
push
or
add
cmps
cmp
jle
jno
ret
add
xchg
dec
jo
and
pop
sub
adc
xor
lea
test
pop
mov
jne
enter
mov
cmp
dec
jp
test
cmp
adc
fdivr
pop
and
adc
xchg
xchg
shr
sbb
xchg
inc
adc
outs
push
loop
imul
into
or
popf
jmp
je
mul
mov
(bad)
or
jl
cmp
jle
repnz
xor
jle
(bad)
mov
inc
or
dec
clc
add
test
push
pop
push
pop
mov
in
shr
test
hlt
jo
inc
add
xor
jge
add
push
push
lahf
inc
inc
xor
pop
addr16
push
xchg
retf
call
dec
rcl
js
or
(bad)
mov
rcl
stos
xchg
scas
xor
dec
jne
jp
or
aad
inc
data16
fiadd
inc
and
add
std
jge
add
neg
inc
adc
adc
ud0
push
mov
inc
movs
pop
pop
call
cli
pop
arpl
(bad)
(bad)
in
sbb
sar
xchg
mov
jo
push
hlt
and
dec
test
sbb
test
ins
ins
jnp
jne
addr16
pop
mov
add
mov
pop
enter
jp
xchg
xchg
xor
adc
bound
pop
(bad)
fsubr
inc
xchg
sbb
in
or
or
data16
je
jecxz
jmp
pushf
repz
int
mov
add
out
das
nop
mov
pop
pop
xor
push
or
rol
mov
push
and
ret
and
pop
xchg
les
test
rcl
mov
push
sub
cld
pop
ret
scas
jge
cmp
cmp
js
pop
jne
and
call
mov
es
in
in
jne
mov
mov
scas
sub
lea
mov
pop
mov
jno
(bad)
sub
cmp
dec
jg
gs
sbb
sbb
daa
pop
ja
out
and
je
sbb
shl
inc
fstp
jmp
push
add
push
mov
sbb
push
push
mov
inc
xor
lahf
test
or
mov
daa
cmp
jne
imul
gs
xor
cs
sar
jg
mov
push
popa
je
dec
popa
ins
gs
stc
ret
outs
loopne
ja
ja
sbb
push
xlat
(bad)
cmp
int3
push
and
mov
movs
cmp
and
cmp
sahf
test
es
xchg
pop
lea
mov
movs
pop
cmp
rol
stc
int
inc
pusha
cmps
fstp
iret
pusha
cmp
push
repnz
ror
fimul
das
rcr
sbb
lock
cmp
test
dec
jge
jle
out
cmps
mov
inc
and
lahf
cdq
jle
push
add
cmp
stos
pop
cmp
jne
mov
imul
rol
rcr
cmp
cmp
push
sub
push
es
in
icebp
je
das
outs
repz
mov
xor
cmc
add
(bad)
sbb
jb
cmps
outs
data16
popa
jb
xor
mov
jae
aaa
mov
cdq
loopne
adc
pop
jo
pop
nop
aas
cmp
inc
add
mov
das
mov
xor
push
enter
fstp
mov
mov
(bad)
fnsave
or
push
or
sbb
mov
mov
mov
dec
xchg
sbb
adc
fisubr
inc
xchg
cli
mov
cwde
pusha
xor
mov
jns
jbe
outs
and
call
cwde
or
cmp
fcom
mov
cmp
inc
xchg
mov
mov
les
mov
sbb
cs
repz
add
mov
pop
mov
xchg
mov
cmp
jne
fwait
shl
es
(bad)
fisttp
jo
pop
sub
cmp
jp
push
cmp
or
rol
dec
push
inc
adc
ss
in
push
inc
out
mov
xchg
push
push
test
mov
test
sbb
mov
pop
pop
ret
sbb
xor
movs
push
dec
inc
mov
int
popa
push
adc
cmps
jmp
call
sub
pop
(bad)
or
sub
lock
xor
add
add
push
mov
mov
mov
or
fisttp
or
ret
out
mov
jnp
ins
jns
or
and
adc
cmps
cvtps2pd
push
inc
xchg
pushf
pop
pusha
aad
outs
fidiv
leave
sbb
mov
inc
movzx
inc
cmp
ja
std
pop
add
mov
inc
jmp
cmp
pop
add
pop
cld
ja
neg
mov
jmp
or
mov
adc
sbb
mov
and
retf
add
xchg
mov
jmp
pusha
add
dec
pusha
rcr
xor
inc
add
dec
or
cmp
jb
or
adc
mov
and
sbb
call
pop
add
pop
add
inc
ret
test
sbb
mov
hlt
xor
mov
(bad)
inc
or
and
or
xor
outs
xchg
adc
inc
test
je
or
jae
and
loope
and
je
cmp
adc
sar
rol
cmp
inc
setbe
shl
or
mov
cs
retf
dec
dec
dec
cld
mov
in
xlat
lea
push
adc
inc
call
xor
adc
dec
scas
mov
inc
and
inc
inc
mov
xlat
xor
and
ins
push
inc
adc
in
xor
sbb
loope
ja
or
jb
inc
mov
sub
inc
fwait
sub
xchg
jno
pop
and
sbb
ror
je
adc
lea
sbb
adc
and
add
je
pop
dec
pusha
clc
sub
dec
outs
jmp
fbld
sbb
retf
xchg
xchg
ret
sbb
nop
pop
rcl
inc
addr16
jmp
dec
mov
or
ins
and
pop
inc
inc
mov
and
inc
popa
aam
in
fadd
inc
lods
inc
inc
sbb
hlt
cmp
nop
mov
inc
enter
arpl
stos
ss
xor
add
adc
xchg
ror
add
mov
popf
test
call
jns
mov
jle
add
xor
push
daa
pop
into
push
loope
jns
lock
outs
jne
pop
lea
push
push
mov
mov
div
mov
cld
inc
inc
fs
and
mov
lock
cmp
mov
daa
(bad)
jne
sub
ud0
xchg
xor
mov
call
mov
cmp
test
dec
je
cmps
sbb
mov
mov
push
xor
adc
and
rcr
mov
mov
iret
data16
adc
mov
and
mov
dec
dec
add
mov
outs
xchg
mov
int
and
cmp
push
add
pop
mov
cmp
jmp
mov
gs
sub
shrd
xor
test
test
push
(bad)
fist
loopne
push
push
pop
data16
or
add
and
xchg
icebp
lock
inc
cmp
loope
dec
loop
data16
frstor
mov
sub
jnp
movs
and
mov
std
mov
push
mov
add
arpl
jecxz
mov
ret
mov
and
dec
popf
jnp
cmp
data16
mov
mov
cmp
mov
sqrtps
mov
pop
jns
aaa
leave
shl
jle
fdiv
mov
cmp
add
rol
sub
aam
(bad)
jns
gs
js
add
jns
sbb
inc
pop
or
adc
add
enter
mov
jo
jmp
sbb
sbb
ins
mov
add
add
ret
push
add
pushf
mov
daa
add
add
pop
cld
push
fmulp
mov
daa
ss
or
in
push
jp
(bad)
pop
mov
jns
mov
mov
or
daa
pop
pop
andps
pop
invd
adc
add
popa
mov
dec
xacquire
movs
and
popa
sbb
adc
add
scas
sbb
or
outs
fisttp
scas
or
push
xor
pop
call
call
mov
cld
(bad)
imul
adc
mov
test
dec
push
or
dec
dec
hlt
daa
inc
inc
pop
sti
cmp
inc
cmp
jl
pop
inc
or
dec
mov
add
push
addr16
or
or
movs
mov
mov
iret
js
and
ss
jle
jle
sbb
jle
sti
xchg
cmp
mov
cld
ins
fistp
inc
or
movq
hlt
add
mov
jmp
jmp
repz
pop
add
loope
cld
add
or
pop
call
imul
ins
cmc
jg
leave
jnp
jg
and
sar
loopne
add
cs
sub
dec
push
or
and
outs
fs
gs
mov
sbb
or
retf
xor
cmp
sub
mov
xor
imul
outs
arpl
jb
sti
das
inc
gs
jne
je
dec
outs
je
imul
imul
imul
arpl
or
sti
imul
sbb
jb
xor
pop
mov
pop
xor
(bad)
outs
ins
bound
js
retf
(bad)
mov
lock
outs
ja
nop
jl
push
mov
push
mov
xor
or
or
add
dec
mov
(bad)
xor
dec
dec
sub
and
dec
dec
dec
dec
sbb
adc
in
dec
dec
or
add
adc
in
cld
push
clc
hlt
nop
xchg
daa
daa
lock
cmp
cmp
cmp
cmp
sbb
or
cmp
cmp
add
cld
push
pushf
pushf
pushf
mov
hlt
lock
pushf
pushf
pushf
pushf
call
leave
leave
test
aam
leave
leave
leave
leave
int3
enter
leave
leave
leave
mov
leave
leave
leave
lods
test
mov
pushf
cwde
xchg
nop
pop
enter
mov
jl
je
pushf
pushf
pushf
pushf
ins
push
pushf
pushf
pop
pop
push
push
pushf
pushf
pushf
pushf
dec
dec
inc
inc
leave
leave
test
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
fs
add
push
clc
hlt
in
in
lock
call
in
(bad)
aam
fsubr
in
int3
dec
enter
pushf
pushf
sar
mov
test
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
nop
mov
pushf
cmp
pushf
pushf
pushf
jo
push
pushf
pusha
pop
pop
push
pushf
pushf
pushf
pushf
push
dec
dec
inc
cmp
cmovl
or
cmp
push
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
push
leave
leave
leave
leave
push
dec
dec
inc
leave
leave
leave
leave
inc
cmp
xor
leave
leave
leave
xor
and
leave
leave
leave
and
adc
leave
leave
leave
adc
add
fs
add
push
clc
hlt
in
in
in
in
call
leave
leave
loopne
fcom
leave
leave
leave
leave
ror
enter
leave
leave
sar
mov
test
leave
leave
leave
leave
mov
leave
leave
leave
nop
mov
leave
cmp
leave
leave
leave
jo
push
leave
pusha
pop
pop
pop
fcmovne
leave
ins
addps
daa
pop
mov
inc
push
daa
daa
daa
daa
fs
cmp
and
pop
xor
jb
jb
sub
and
jb
jb
sbb
adc
daa
pop
jae
or
add
xchg
xchg
xchg
daa
cld
pop
clc
hlt
xchg
xchg
xchg
xchg
lock
call
xchg
loopne
fcom
daa
mov
xchg
ror
enter
daa
daa
daa
daa
mov
daa
daa
daa
lods
test
mov
pushf
cwde
xchg
nop
daa
daa
daa
daa
mov
daa
daa
jl
je
daa
daa
daa
daa
ins
push
daa
daa
pop
pop
push
push
daa
daa
daa
daa
dec
dec
inc
inc
daa
daa
daa
daa
cmp
xor
daa
daa
daa
daa
sub
and
daa
daa
daa
daa
sbb
adc
in
and
or
(bad)
jb
repnz
cld
push
clc
hlt
daa
daa
daa
pop
lock
call
daa
loopne
fcom
daa
daa
daa
daa
ror
enter
daa
daa
sar
mov
test
jb
and
mov
jb
xchg
nop
mov
test
jb
je
ins
push
fs
pop
pop
jb
jb
push
push
dec
dec
jb
jb
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
sbb
jb
add
push
clc
cmp
cmp
hlt
lock
call
in
(bad)
cmp
cmp
aam
int3
enter
cmp
sar
dec
push
mov
or
mov
ror
test
lods
data16
pop
std
or
inc
dec
mov
add
int3
pop
push
push
adc
les
mov
call
cmp
mov
add
cmp
push
mov
mov
lods
sar
inc
mov
test
cdq
or
adc
pop
dec
loopne
or
jae
cmp
inc
and
les
das
popf
popf
lea
mov
in
movs
fisttp
nop
xor
popf
push
inc
mov
jmp
mul
xchg
movs
loope
sbb
and
jge
loopne
and
pop
test
mov
clc
mov
push
adc
fisubr
mov
pop
outs
and
lods
cvttps2pi
or
stos
lea
cld
add
or
stos
aaa
cmps
movsx
adc
inc
add
jg
ds
fiadd
data16
inc
add
pop
cmp
inc
push
mov
mov
outs
mov
cld
pop
dec
lods
outs
in
pop
(bad)
sti
and
sub
cmp
repz
sbb
ret
repz
movs
mov
dec
loopne
cmp
out
mov
in
ret
add
xchg
and
push
mov
add
sbb
fmul
addr16
lods
push
fadd
push
repnz
clc
mov
and
sbb
cmp
sub
dec
adc
jmp
add
push
or
add
jne
loope
mov
sahf
dec
popa
gs
pusha
xlat
test
push
push
dec
inc
inc
dec
cmp
outs
ficomp
cli
jge
addr16
dec
push
inc
push
dec
pop
and
out
mov
push
push
pop
sub
push
inc
dec
pop
dec
dec
dec
and
fadd
das
pop
stc
mov
(bad)
js
adc
psllw
daa
daa
daa
repnz
cmc
daa
daa
daa
daa
div
clc
stc
daa
daa
daa
daa
cli
sti
cld
std
daa
daa
daa
daa
(bad)
jmp
loope
daa
daa
daa
loop
in
daa
daa
daa
daa
out
call
daa
jmp
daa
out
out
rcl
daa
daa
daa
daa
rcl
aam
daa
daa
daa
daa
(bad)
xlat
fcomp
daa
daa
daa
daa
fcmovu
(bad)
daa
daa
daa
daa
(bad)
rol
daa
daa
daa
ret
lds
daa
daa
daa
mov
leave
daa
daa
daa
daa
retf
int
daa
daa
daa
into
iret
mov
daa
daa
daa
daa
mov
mov
daa
daa
daa
daa
mov
mov
daa
mov
daa
daa
daa
mov
daa
daa
daa
mov
daa
daa
daa
cmps
cmps
test
daa
daa
daa
daa
stos
stos
lods
lods
daa
daa
daa
daa
scas
scas
nop
xchg
daa
daa
daa
daa
xchg
xchg
xchg
xchg
daa
daa
daa
daa
xchg
xchg
cwde
cdq
and
adc
cwde
or
push
inc
(bad)
fbld
loop
ins
gs
test
push
or
popa
jb
push
mov
add
xchg
and
adc
lods
adc
cmps
pop
daa
and
push
int
jl
push
arpl
inc
add
in
stc
dec
gs
imul
ins
int
or
jae
adc
or
sub
xchg
push
inc
inc
(bad)
mov
lock
aas
adc
fs
inc
push
inc
dec
mov
repnz
xchg
mov
mov
xchg
mov
inc
dec
jne
dec
dec
gs
push
adc
test
outs
out
pop
dec
dec
fisttp
inc
dec
outs
mov
fdiv
mov
scas
ds
pop
and
pushf
push
jb
(bad)
pop
scas
xor
xchg
adc
sbb
mov
pop
or
dec
push
outs
adc
push
leave
ins
xchg
or
imul
nop
push
scas
push
jl
popa
outs
shr
ret
adc
dec
and
cs
outs
ja
sbb
ds
inc
or
xchg
dec
pop
mov
int3
ins
gs
je
je
add
sahf
rcl
xor
dec
jo
int3
scas
int3
pop
sbb
(bad)
ins
mov
and
scas
loopne
inc
pusha
ds
(bad)
jb
cmp
rcl
scas
jl
mov
outs
fs
aam
adc
mov
ds
mov
pusha
mov
push
xor
lock
or
inc
popa
jae
enter
mov
cmc
or
scas
enter
test
ss
call
adc
inc
inc
jae
push
in
add
adc
jbe
call
push
jb
in
adc
lock
ret
scas
xchg
or
mov
push
add
je
add
fbstp
inc
adc
push
scas
ds
sbb
cwde
adc
inc
ficom
loop
pop
lods
mov
lock
mov
pushf
out
cs
ds
add
or
jb
out
or
fisubr
dec
outs
cmps
or
jo
enter
mov
(bad)
js
inc
push
stos
push
and
ds
adc
cmps
or
jecxz
gs
(bad)
cmp
ror
xor
push
or
push
jns
dec
data16
xor
xor
and
cdq
in
xor
push
andps
ins
push
push
gs
ret
mov
imul
jae
inc
or
(bad)
adc
dec
outs
unpcklps
sbb
out
fidivr
test
push
dec
push
fs
jns
test
adc
adc
xor
and
mov
inc
cmp
or
sbb
pop
mov
aas
inc
gs
jg
aaa
cld
ss
add
push
push
push
(bad)
das
push
in
je
mov
add
jmp
adc
inc
into
cvttps2pi
inc
das
and
aam
mov
fmulp
loope
jmp
cmc
ror
(bad)
jg
repz
(bad)
sbb
push
loopne
sbb
aas
add
push
sbb
add
call
ins
adc
pop
cmp
cmp
jg
ss
ins
jne
fsub
jo
scas
push
mov
lods
outs
arpl
jmp
aas
cmps
sub
shr
div
add
sbb
mov
add
xlat
movs
mov
mov
mov
rol
push
shl
test
mov
sahf
pop
mov
shl
out
fiadd
push
(bad)
pop
xchg
mov
lods
add
and
js
ja
cld
rcr
xor
ror
enter
inc
add
call
dec
psubsb
xchg
jno
lock
mov
lea
mov
sbb
aaa
dec
(bad)
hlt
ins
jecxz
add
aaa
enter
(bad)
cmp
lahf
dec
bound
repnz
movs
cmp
dec
hlt
inc
mov
pop
iret
pop
add
ins
imul
push
add
cmp
mov
cmp
call
sbb
push
add
int
jge
inc
adc
loopne
call
mov
cmp
cmp
jl
inc
loope
mov
rol
nop
xchg
add
push
imul
fstp
paddusb
and
lock
ins
cmp
popa
leave
xchg
call
lea
pop
mov
pop
cld
neg
popa
jb
or
add
ins
imul
push
mov
outs
div
mov
(bad)
ds
dec
pop
jne
mov
xlat
dec
sahf
retf
add
pop
inc
outs
call
sti
sar
inc
(bad)
or
jbe
(bad)
idiv
cmps
je
movzx
push
push
push
pop
xchg
shl
push
pop
mov
jne
inc
imul
sbb
inc
inc
ds
mov
sub
or
sub
xor
data16
(bad)
call
push
out
and
sti
je
loopne
add
in
out
fisubr
pop
call
inc
rol
clc
in
xchg
bound
mov
hlt
or
rcl
(bad)
ret
push
aas
sbb
jle
pop
ins
ret
inc
push
pop
push
je
test
cs
fnstsw
mov
sbb
ins
pop
dec
loope
inc
xchg
add
call
les
pop
and
mov
jge
mov
or
dec
dec
jns
push
cwde
sub
inc
rcr
lock
daa
add
xor
cmp
add
cmp
and
push
shl
jmp
jbe
sub
xchg
out
hlt
add
es
lock
push
and
inc
nop
sbb
fldcw
pop
ja
fimul
cmp
out
jle
dec
leave
daa
jmp
inc
out
jmp
call
rcl
add
outs
sub
add
inc
add
push
inc
daa
rol
xor
cwde
pusha
xchg
jmp
pop
lds
loopne
lods
cmp
test
jbe
sub
jnp
mov
pushf
cmps
adc
out
jne
in
jne
push
adc
xor
inc
mov
adc
(bad)
fcom
adc
adc
movs
mov
jmp
inc
in
mov
xchg
mov
add
popf
sub
cmp
aam
add
out
jne
or
xor
addr16
and
cwde
movs
and
fadd
or
es
cwde
fbld
dec
push
ins
inc
popf
cmps
pop
cmp
hlt
xchg
push
sti
and
test
push
mov
ds
lds
adc
ja
cmp
mov
cmp
xchg
popa
add
icebp
fdivr
cmp
imul
scas
call
xor
push
pop
xor
inc
pop
es
dec
dec
inc
sti
jne
jge
dec
pusha
test
jp
mov
or
imul
jns
and
outs
addr16
jne
prefetch
pop
or
lock
dec
jle
inc
es
add
or
shl
lock
cmps
in
cmp
test
arpl
add
inc
dec
xchg
or
inc
mov
xchg
ret
push
push
inc
lock
add
sbb
add
push
lods
pop
sbb
sbb
loope
lods
xchg
inc
in
lsl
add
and
jae
push
mov
aam
dec
je
sub
je
jmp
cmp
dec
push
jmp
adc
adc
mov
jmp
scas
test
and
sub
mov
prefetcht0
mov
adc
(bad)
lock
mov
jb
lea
jp
movs
adc
cs
iret
in
push
mov
aas
jne
shl
xchg
cmps
mov
pop
outs
xchg
jae
(bad)
jne
jmp
or
mov
loopne
(bad)
or
jb
mov
cmp
cmp
loopne
mov
loopne
loopne
or
jmp
mov
das
inc
sbb
jmp
nop
out
gs
lods
(bad)
push
xor
add
movs
pop
es
ins
or
mov
sub
fiadd
adc
inc
pop
sbb
xor
imul
loopne
lea
ss
add
mov
ret
or
xchg
jne
call
sahf
test
sar
dec
lods
mul
mov
inc
dec
mov
ret
mov
jg
push
xor
div
dec
into
cmp
jb
mov
jg
push
pop
mov
push
jne
pop
pop
sub
sub
jbe
add
mov
sub
into
jg
fdivrp
mov
dec
jne
push
sbb
mov
or
inc
inc
sbb
stos
add
pop
dec
scas
in
cdq
jns
shr
mov
scas
jp
add
fs
mov
mov
adc
xor
push
mov
mov
pop
inc
adc
xor
fcomip
dec
nop
dec
retf
push
and
loopne
sbb
or
jl
pop
or
test
(bad)
cmp
and
jae
push
scas
stos
add
fwait
and
bound
or
fs
mov
push
add
stc
xchg
fcom
in
movs
daa
and
outs
jg
fild
fistp
ret
or
add
sub
add
pusha
mov
pop
shr
stc
and
push
push
mov
add
add
fcom
push
jae
fnstcw
add
ret
ffree
ffree
sbb
loopne
rcr
sar
add
inc
adc
nop
(bad)
xor
or
inc
and
sub
inc
add
push
pusha
or
mov
mov
xor
add
scas
loope
int3
inc
dec
mov
jmp
movs
lds
jbe
stos
jno
pushf
in
nop
and
mov
cdq
fst
jbe
inc
push
push
mov
inc
call
clc
and
shr
(bad)
and
mov
mov
adc
pop
pop
adc
loopne
jmp
je
bound
cmp
cwde
movs
movs
test
hlt
mov
push
out
pop
inc
stos
loope
jg
gs
push
loopne
mov
push
jns
imul
call
in
dec
xchg
mov
sbb
xchg
dec
or
das
dec
loop
sub
ror
push
push
push
mov
sub
es
mov
(bad)
xchg
test
sahf
iret
push
hlt
es
mov
mov
mov
nop
retf
xor
call
mov
pop
mov
(bad)
push
xchg
inc
inc
in
dec
not
loop
xor
mov
scas
cmps
mov
or
add
int
(bad)
xchg
mov
aas
loope
cs
in
jne
pop
call
daa
call
dec
adc
ins
call
inc
clc
std
push
cmp
adc
mov
in
arpl
mov
rcr
inc
inc
mov
daa
push
mov
add
add
add
xor
xor
or
pop
not
aas
imul
je
adc
aas
ins
shr
mov
popf
jmp
mov
xchg
jl
mov
cdq
mov
clc
(bad)
ds
inc
sbb
jae
xor
in
movs
test
test
loopne
inc
adc
outs
ja
adc
mov
push
ret
in
les
add
das
shr
test
imul
imul
test
mov
adc
or
adc
sub
dec
and
push
mov
xor
xor
mov
xchg
dec
cmp
pop
outs
pop
mov
jb
inc
fsubr
(bad)
out
in
add
fwait
dec
xchg
in
hlt
aam
add
nop
stos
push
cld
push
push
int
xchg
rcl
push
add
adc
fbstp
ss
stos
ins
hlt
test
test
fsubrp
pushf
shl
adc
inc
(bad)
in
and
jge
addr16
adc
cld
pop
cdq
movs
xchg
and
mov
and
movs
(bad)
aam
imul
add
repnz
(bad)
(bad)
aam
push
push
cmp
loopne
or
ds
retf
xor
sub
inc
xchg
ror
ror
sub
push
pop
add
mov
lock
inc
out
xchg
and
dec
mov
ret
add
mov
mov
cmp
pop
clc
not
add
push
or
push
hlt
pushf
ficomp
es
data16
push
sbb
into
out
retf
adc
cmps
pushf
scas
mov
dec
mov
push
and
je
shl
in
push
ja
sub
mov
sub
sub
(bad)
xchg
loop
rol
xor
adc
and
cmp
cdq
add
cld
cmp
je
jg
inc
add
cmp
mov
test
add
xchg
push
mov
clc
push
dec
jg
loopne
mov
adc
sub
jne
mov
out
adc
ret
or
mov
pop
fadd
mov
cmp
movs
push
inc
fdiv
cs
xchg
cmp
jg
enter
or
sbb
ins
xchg
inc
dec
mov
rol
pop
cmp
push
mov
pusha
shr
sbb
jl
clc
outs
dec
jnp
jb
jle
pop
jne
pushf
dec
dec
add
jle
xchg
and
mov
xlat
addr16
push
sar
jne
in
shl
pop
xchg
cli
test
fs
arpl
(bad)
pusha
dec
push
inc
sbb
and
jge
ins
mov
cmp
push
sub
retf
xor
pop
xchg
dec
pop
inc
mov
pop
inc
out
mov
mov
dec
push
or
mov
iret
out
fs
lods
inc
imul
and
jne
sub
add
lock
add
push
push
aas
aad
enter
frstor
test
push
jg
lods
movs
jb
cmp
scas
test
or
or
fmul
cmps
lock
movs
or
int3
movs
pop
sbb
aam
rol
xchg
cdq
mov
mov
mov
(bad)
rcr
sub
or
xor
sbb
in
adc
js
push
adc
(bad)
pop
leave
stos
add
mov
je
sbb
(bad)
loope
xor
fild
ss
mov
das
inc
mov
jmp
ja
les
sbb
inc
pop
sbb
xlat
push
push
hlt
xor
mov
dec
retf
in
aas
sub
rep
mul
retf
inc
mov
dec
nop
cdq
adc
add
retf
pop
add
pop
fld
push
and
pop
pusha
icebp
or
jne
mov
pop
push
and
sbb
and
shl
pop
and
pop
jg
(bad)
push
sub
jg
xlat
ss
add
xor
repz
mov
mov
adc
sub
and
out
sti
pop
add
pop
cmp
cli
jmp
je
(bad)
test
adc
fxch
inc
es
and
nop
dec
das
rol
adc
inc
and
gs
mov
ins
sbb
mov
or
add
inc
jo
js
fimul
arpl
outs
(bad)
cs
pop
cld
(bad)
(bad)
imul
icebp
jbe
sbb
pop
push
(bad)
lods
mov
mov
push
(bad)
push
adc
dec
xor
or
outs
add
clc
xchg
push
mov
add
aaa
test
sub
jns
lods
data16
pushf
add
dec
dec
mov
sahf
xor
loopne
mov
jp
cmp
scas
xor
push
sub
fisttp
jnp
adc
or
test
das
mov
int
imul
jbe
rol
sbb
mov
lods
mov
add
in
(bad)
sub
cld
mov
sub
leave
push
jecxz
mov
lea
mov
and
cmp
push
retf
mov
fst
inc
cmp
adc
mov
mov
mov
adc
psubusb
xchg
pop
daa
mov
adc
std
pop
lock
or
xchg
clc
call
loope
pop
retf
pop
pop
xchg
loop
jnp
cmps
jo
mov
clc
adc
loopne
jb
pop
dec
cmp
je
stos
dec
jne
add
sub
or
aam
inc
sub
jmp
push
out
(bad)
jge
into
add
mov
cmp
jne
cs
and
mov
jmp
push
mov
lock
jne
pusha
mov
push
shl
ss
fild
sub
jae
add
icebp
mov
sti
sahf
movs
xchg
pop
mov
rep
sbb
neg
push
xchg
scas
mov
mov
mov
mov
outs
xor
cmp
cld
lahf
cli
cmp
imul
mov
add
and
je
mov
push
jmp
mov
out
jge
or
jl
xor
ret
je
or
pusha
or
rcr
sub
cmp
pop
jne
lea
mov
call
jmp
push
jne
pop
arpl
repz
push
sub
fmulp
repz
or
mov
adc
xor
mov
loopne
fsubr
shl
cld
stos
in
lea
fcom
sub
je
push
push
mov
add
loop
sti
xor
or
jmp
push
add
sub
pop
outs
adc
jmp
ret
or
sbb
mov
cmp
jne
mov
ret
sbb
bound
add
movs
ins
pop
pusha
clc
aad
or
inc
jle
add
inc
les
push
push
js
mov
cld
aas
and
mov
(bad)
pop
js
popa
stc
(bad)
mov
add
push
fdiv
xchg
xor
add
scas
jmp
js
jb
jecxz
dec
mov
jmp
dec
dec
push
push
leave
lods
add
mov
mov
clc
cmp
outs
mov
dec
inc
je
mov
ins
fwait
call
add
mov
or
je
stos
aas
in
hlt
dec
jl
mov
mov
ret
arpl
out
or
jne
xchg
adc
addr16
into
fdivr
jecxz
adc
mov
loopne
mov
inc
iret
dec
js
fstp
mov
xchg
ret
xor
and
ficomp
lahf
je
popf
loope
and
add
out
adc
mov
mov
inc
jns
enter
jle
jge
mov
or
pop
in
sub
test
ss
in
push
jae
(bad)
mov
sbb
das
pop
mov
fistp
cmp
in
enter
jmp
cmp
pop
jmp
nop
add
sub
cmp
adc
cmp
in
imul
inc
cwde
idiv
xchg
call
xor
test
fadd
mov
(bad)
mov
inc
add
xor
add
mov
mov
pop
test
jp
movs
mov
dec
and
or
mov
retf
and
aaa
movs
sti
adc
xor
dec
add
pop
jae
fst
mov
xchg
inc
imul
xor
js
test
and
pop
cmp
and
xor
jne
in
mov
adc
aam
outs
retf
in
dec
test
loope
(bad)
push
jmp
adc
pop
or
xchg
jmp
out
push
ss
inc
mov
fcomp
adc
jle
imul
xchg
xchg
mov
mov
pop
jb
inc
mov
or
xchg
adc
mov
pop
jmp
and
inc
or
xor
(bad)
mov
js
jmp
or
xor
xchg
stos
mov
sub
inc
adc
rol
dec
and
in
dec
jge
or
loop
sbb
retf
bound
adc
cmp
adc
popf
jo
pop
push
pop
mov
movs
and
sbb
outs
mov
lods
cmp
push
stos
dec
jne
or
mov
cmp
jecxz
pop
cld
mov
pop
xchg
push
sub
repz
mov
mov
mov
and
es
adc
and
xor
push
stos
pop
call
mov
jo
push
mov
movs
cs
sti
adc
mov
and
xor
fdivr
(bad)
icebp
out
sub
xor
jb
cmp
ja
and
loopne
mov
and
mov
add
fstp
ss
push
sub
icebp
stos
sub
retf
cmp
int3
push
or
push
jns
fcom
das
fcomi
sahf
xlat
pop
test
xor
push
jne
das
icebp
xor
mov
cmp
and
add
(bad)
js
mov
jne
sub
das
je
jmp
jns
shl
pop
sbb
mov
mov
jnp
loope
in
inc
mov
nop
add
(bad)
icebp
hlt
les
jmp
add
cmp
jae
sbb
and
sub
mov
inc
mov
mov
sbb
les
dec
mov
aas
or
xor
bound
pop
sbb
push
sbb
dec
loopne
loopne
add
addr16
push
jecxz
adc
mov
xor
push
stos
adc
popa
and
ins
inc
enter
loopne
adc
and
push
outs
sub
loope
lock
icebp
test
sti
adc
xlat
lods
or
imul
aaa
stc
xchg
jle
add
sbb
into
hlt
fistp
mov
pop
push
pop
fadd
sar
shl
adc
(bad)
mov
pop
outs
jne
jo
fbld
call
adc
xor
push
xor
stos
or
inc
or
push
mov
neg
jmp
or
je
mov
stos
xchg
push
mov
jmp
or
call
jg
dec
mov
stos
cmp
jne
pop
pop
daa
aam
mov
sahf
dec
shl
xchg
jb
jg
cli
mov
test
mov
jo
retf
loopne
jo
fdivr
mov
add
mov
mov
add
xchg
ret
jb
aaa
dec
or
mov
pop
xchg
jge
repnz
sub
clc
add
adc
shl
dec
pop
shl
ret
in
inc
push
ret
push
push
xchg
sub
sti
add
xchg
jle
add
or
aam
jle
push
ja
add
pop
pop
cmp
or
sar
jo
add
cld
push
sahf
ret
dec
enter
push
or
jb
dec
inc
dec
inc
dec
lods
or
ss
es
popa
jnp
les
jo
ret
std
mov
aam
xchg
push
cmp
jl
pop
sbb
ds
add
cmp
stos
neg
sbb
stos
jmp
sti
out
(bad)
mov
pop
stos
loop
movlps
pop
sub
lods
pop
inc
clc
dec
jbe
shr
loopne
mov
mov
pop
mov
cmp
mov
mov
sub
or
add
mov
das
clc
leave
mov
mov
mov
and
sbb
add
out
adc
mov
or
es
in
dec
enter
div
mov
inc
test
jne
mov
adc
sbb
stos
in
stos
xor
call
sub
sti
add
je
fld
stc
pop
lods
test
fdivr
cmp
and
sbb
mov
push
int3
cmp
mov
sahf
lea
aad
iret
mov
add
inc
je
push
push
cmp
(bad)
rol
jle
or
mov
ret
or
cmp
loop
ret
push
mov
test
scas
add
pop
ret
and
inc
add
and
outs
iret
test
and
sub
inc
sub
mov
sub
sbb
and
jnp
jnp
sub
sub
repz
fs
xor
sub
xor
dec
inc
jg
sub
test
sbb
loope
add
addr16
lods
xor
scas
retf
and
enter
inc
ds
xchg
or
aas
xor
enter
adc
and
jp
ficom
lds
loopne
aam
inc
xchg
sub
cmp
add
movs
nop
mov
adc
scas
or
push
dec
xchg
ins
scas
or
or
dec
push
inc
scas
lods
aam
call
adc
in
pop
clc
push
inc
cmps
sub
outs
es
cmp
inc
inc
pop
add
add
sbb
shr
jmp
xor
sub
or
es
scas
jmp
xor
dec
test
mov
inc
loopne
inc
fcmovnu
shl
rcr
cmp
xchg
adc
je
into
jne
adc
dec
cmp
pop
dec
punpckhdq
mov
(bad)
data16
std
cmp
mov
xor
int3
cmp
ja
out
repz
dec
fs
sbb
push
pop
or
and
adc
out
loop
fistp
push
add
inc
sbb
ret
mov
test
cmp
je
out
jmp
sub
ret
in
(bad)
xor
adc
sahf
and
xor
cs
out
je
cmp
je
mov
je
cmp
je
xchg
je
jo
test
mov
jmp
inc
jmp
sbb
mov
pop
pusha
in
mov
push
cdq
std
stos
or
jmp
mov
jmp
loope
fucomip
xor
sub
ss
add
cmp
fnsave
push
mov
enter
pop
fcomp
and
jge
push
mov
es
jmp
adc
add
inc
shr
dec
mov
or
jle
ror
call
outs
add
and
jne
repz
add
ret
repz
push
sbb
push
inc
add
add
dec
xchg
and
ins
mov
sub
hlt
mov
cmp
cld
or
pop
mov
add
inc
inc
cmp
stc
pop
sub
mov
sbb
js
pop
gs
jmp
add
mov
sbb
mov
dec
jne
das
adc
xchg
not
xchg
jle
jmp
cli
sti
lock
mov
inc
cmp
dec
and
jle
mov
cmp
and
push
cmc
mov
ret
add
sub
aas
test
ret
inc
daa
(bad)
sbb
outs
add
out
push
push
adc
add
aas
pop
pop
aaa
cmp
push
retf
test
adc
xor
out
adc
push
cmp
inc
push
mov
ror
cmp
add
mov
push
cmp
cs
sub
rcl
push
clc
adc
sbb
repz
jecxz
loope
and
xchg
pop
frndint
push
fld
lea
jge
fwait
mov
add
or
mov
std
(bad)
retf
fbstp
lea
mov
inc
sub
push
xor
or
shr
and
sbb
ret
push
xor
stos
mov
add
jns
call
pusha
cmp
test
cmp
jae
cmp
(bad)
aaa
shl
jb
add
or
ja
jmp
cmp
adc
xor
hlt
mov
cmp
inc
js
clc
in
and
shr
mov
mov
ret
add
cli
mov
aas
xchg
icebp
stos
jmp
or
mov
and
test
dec
sub
ins
or
or
in
lock
adc
jl
mov
in
(bad)
jl
sbb
jae
dec
add
mov
cmc
fild
cli
mov
inc
cmp
mov
inc
fld
setnp
loopne
or
sbb
sub
sti
(bad)
aas
jne
mov
and
jne
dec
jne
jmp
mov
add
stos
aas
hlt
mov
and
inc
jmp
adc
fmul
aas
(bad)
div
jo
add
mov
fdiv
jbe
adc
sub
sbb
cmps
mov
f2xm1
fwait
pop
pop
pop
fild
retf
fstp
call
add
mov
daa
neg
or
lock
inc
shl
lock
and
ffreep
(bad)
out
scas
je
or
retf
adc
ret
test
mov
rol
loope
push
mov
dec
push
adc
add
aas
jmp
fstp
inc
test
mov
mov
mov
cmp
rol
rcl
ins
and
push
lods
mov
mov
dec
ret
mov
sub
add
jae
fimul
cmp
jmp
and
pop
stc
es
push
test
ror
push
cmp
and
inc
add
ret
daa
sbb
or
sub
in
sbb
test
add
or
sub
daa
add
ret
jle
pop
rol
push
sbb
add
(bad)
pop
sub
and
inc
ja
mov
mov
adc
push
ins
mov
add
enter
add
add
mov
inc
dec
fadd
add
inc
or
shr
imul
jge
cmp
dec
popa
ror
jle
rcr
popa
test
add
inc
sbb
pop
pop
pop
xor
dec
cmp
xor
cmp
fwait
jg
call
mov
stos
nop
cmps
mov
loopne
out
xchg
popa
(bad)
call
push
inc
sahf
in
(bad)
mov
xor
xchg
adc
or
pop
neg
fstp
fwait
jb
xor
xlat
outs
fldenv
or
das
retf
or
fucom
xor
ins
fmul
jnp
add
adc
mov
xor
push
xor
xchg
or
xor
or
ja
xchg
cmp
cmps
jg
rcl
leave
jo
add
and
mov
ret
jbe
fs
sbb
je
shl
stos
fiadd
aas
loopne
cs
sbb
add
xor
add
mov
les
les
aaa
xchg
rol
sub
(bad)
ret
data16
or
pop
inc
outs
sahf
mov
jae
or
cmp
dec
cli
inc
cmp
clc
or
add
lock
add
add
fs
add
ds
or
fdivr
adc
fdiv
or
stc
mov
les
dec
push
push
jno
addr16
rcl
sub
in
fs
iret
fsubr
push
cdq
fld
sub
call
pop
fnstenv
add
pop
into
aam
call
dec
repnz
lods
add
jnp
pop
xor
cmp
lods
jp
repz
pop
lock
arpl
sub
push
jecxz
push
adc
push
and
adc
scas
nop
xor
push
je
xor
add
pop
push
rcr
fisttp
inc
mov
cld
scas
jg
add
add
in
inc
dec
add
lock
jb
ret
(bad)
out
hlt
daa
ja
cmps
into
xor
outs
adc
nop
aaa
ins
arpl
inc
xchg
cmp
mov
jle
dec
push
and
xor
inc
in
leave
inc
fadd
xor
push
add
in
jne
aas
js
sbb
idiv
mov
and
bound
neg
mov
enter
inc
sti
add
outs
push
xchg
loopne
cli
or
cmp
adc
pop
ja
scas
mov
rol
popf
or
jno
ret
(bad)
fdivr
or
in
fdivr
xchg
mov
sti
test
pmuludq
lods
les
lock
in
pop
inc
cmp
ja
lods
imul
add
loop
pusha
mov
sub
sub
jecxz
sbb
lods
mov
push
sbb
data16
ret
div
in
pop
in
xor
inc
jmp
mov
mov
pop
ins
jmp
ror
sub
add
dec
pop
add
pop
inc
repz
out
add
dec
pop
add
loopne
jge
cmp
mov
mov
sbb
inc
jmp
push
ja
adc
loope
call
xor
xchg
add
push
inc
adc
mov
mov
pop
or
dec
stos
(bad)
jo
hlt
inc
clc
fcmovne
push
push
xchg
push
(bad)
popa
cmps
jns
mov
pop
mov
enter
adc
in
fstp
(bad)
rcl
cmps
das
loopne
push
out
jmp
inc
loopne
mov
jo
sbb
out
out
jmp
or
fsubr
nop
cld
mov
imul
mov
loopne
clc
cmp
lea
ja
xor
add
cmc
pop
pop
xchg
jno
adc
hlt
cmps
fmul
mov
push
loope
fadd
sub
adc
dec
jl
stos
adc
out
cmp
or
xchg
(bad)
out
mov
push
adc
jmp
sti
dec
mov
pop
mov
call
cmp
jne
cmp
outs
jo
add
lea
or
ja
push
rol
mov
outs
mov
xor
push
jge
out
mov
pushf
jecxz
sbb
and
in
inc
popa
jmp
xchg
push
jns
adc
faddp
fnstsw
pop
les
cmp
loopne
or
es
int3
dec
test
movs
fnstsw
movs
lea
sbb
mov
mov
clc
xchg
mov
enter
pop
or
enter
sbb
and
faddp
pop
and
cmp
popa
sbb
mov
xor
pop
add
pusha
or
inc
mov
adc
or
test
pop
test
in
stos
sbb
and
xchg
leave
mov
in
jns
scas
fbld
push
pop
in
lds
sti
stos
sti
in
setae
pop
add
pop
inc
mov
mov
jmp
jmp
in
je
das
or
nop
sub
aam
jne
lods
enter
inc
data16
add
idiv
or
cmps
sbb
pop
add
clc
ss
mov
sbb
adc
out
lock
dec
gs
jmp
nop
add
sbb
and
xchg
lods
jbe
and
cmps
push
jecxz
popa
sbb
loopne
mov
je
movntps
mov
and
sub
add
cmps
cwde
loop
add
cld
adc
jmp
sbb
dec
inc
mov
dec
jne
jbe
dec
xor
movs
out
test
mov
adc
hlt
cmp
xchg
fcomp
push
jmp
jns
sbb
push
or
xchg
push
or
or
push
add
pop
add
or
or
or
add
call
in
popa
in
xchg
call
out
test
push
std
add
push
dec
mov
enter
je
or
hlt
and
push
repnz
mov
cmp
das
pop
mov
popf
dec
push
lea
imul
int3
js
cmp
xlat
cld
int3
hlt
dec
or
sbb
xor
fst
adc
inc
sub
inc
cmp
xor
leave
sbb
test
xchg
fdiv
ins
jmp
out
aad
test
pop
mov
adc
mov
dec
and
stc
cmp
daa
fst
cmp
dec
and
pop
rcr
mov
les
ja
fld
les
sbb
scas
inc
movzx
in
sub
and
add
hlt
in
div
bound
je
or
je
jmp
sahf
mov
jecxz
mov
jns
int
or
icebp
sub
push
dec
in
push
mov
lods
(bad)
cmps
scas
and
jmp
push
fbstp
(bad)
xor
jo
xor
lods
les
adc
(bad)
fsub
daa
lods
adc
add
ret
add
or
add
or
push
jle
cmp
mov
mov
(bad)
cmp
popa
call
cmp
adc
pop
dec
scas
in
movs
retf
and
add
in
add
mov
or
je
sub
or
pop
sbb
pop
aas
xchg
adc
jmp
push
or
add
add
add
push
rol
jmp
and
add
mov
iret
push
xchg
xor
push
cdq
(bad)
sbb
add
dec
retf
add
stos
lds
div
and
or
out
or
dec
add
or
imul
sbb
popf
in
add
cmp
pop
pusha
pop
push
imul
test
mov
outs
mov
push
and
test
add
loopne
or
retf
outs
mov
sub
jmp
push
pop
jmp
xor
add
mul
cmp
fcomip
lock
not
inc
and
inc
dec
das
push
dec
cmpxchg
adc
mov
or
outs
rcr
test
ret
push
cld
jecxz
mov
push
or
xchg
push
push
mov
xchg
add
iret
sbb
mov
sub
xchg
stos
nop
push
loope
xchg
or
repnz
pop
cmp
cmp
jge
nop
hlt
cmp
enter
test
in
pushf
and
sbb
cmc
dec
cmp
pop
adc
daa
xchg
leave
retf
sub
mov
in
ret
adc
xor
test
out
les
cli
pop
ja
out
mov
(bad)
popf
cld
ss
cmp
xchg
or
lock
loop
pop
adc
mov
popf
daa
pop
mov
pavgw
call
jns
in
int3
inc
xor
in
fisttp
mov
and
mov
push
push
loope
adc
je
pop
shl
jnp
call
fisttp
out
call
in
sbb
fistp
add
add
pop
enter
xor
test
cmp
xor
mov
(bad)
jmp
xchg
inc
(bad)
repnz
push
and
(bad)
adc
shr
xchg
push
sbb
jnp
and
add
lea
add
push
enter
sbb
sbb
test
out
test
add
push
adc
push
test
xchg
int3
add
lds
test
jbe
adc
jmp
das
sbb
add
cmp
xchg
push
sar
cdq
mov
push
add
mov
push
or
iret
mov
retf
div
push
sbb
sub
ja
cmps
or
add
add
xor
mov
push
and
mov
mov
in
and
push
(bad)
xor
adc
hlt
sub
lock
fnstenv
sub
cmp
pushf
push
sbb
lock
push
push
adc
and
pop
inc
aas
movs
dec
mov
aaa
mov
imul
sbb
dec
dec
clc
and
add
mov
push
inc
ja
add
add
or
mov
adc
or
mov
call
adc
dec
scas
imul
jmp
loop
adc
push
mov
and
mov
or
jmp
pop
add
clc
in
in
jl
and
ins
sub
jnp
(bad)
jmp
jge
mov
adc
ret
outs
adc
pusha
sub
adc
cmp
xchg
test
or
add
pop
push
ret
ja
and
popf
sbb
jne
dec
inc
add
stc
test
les
push
rcl
pop
add
outs
test
cmps
sti
or
movs
mov
inc
div
and
data16
pop
add
add
(bad)
ffreep
int
cmp
inc
je
dec
je
fucomip
dec
sub
je
sub
je
jmp
push
add
or
ins
jmp
xchg
cmp
or
jmp
and
aaa
pop
inc
adc
pusha
iret
jmp
sbb
adc
cmp
pusha
pop
(bad)
and
imul
in
pop
pop
lahf
scas
test
mov
inc
lods
dec
sub
out
pop
mov
add
pop
in
dec
addr16
mov
and
xor
mov
lods
int3
or
addr16
dec
out
cmp
adc
inc
arpl
out
movzx
adc
jg
adc
ret
sar
fldcw
das
imul
add
js
add
adc
loope
pop
popf
dec
add
imul
bound
add
mov
or
ss
outs
out
test
xor
in
push
cli
push
out
add
out
push
fsub
inc
xor
cmp
mov
aaa
push
popf
dec
or
cmp
sub
push
aam
xchg
inc
psllw
jmp
cwde
sbb
loope
dec
loope
mov
or
test
loope
in
mov
ret
sub
dec
and
or
xor
lock
or
jmp
add
call
xbegin
es
inc
jmp
fdiv
cmp
xor
imul
call
cmp
jmp
aas
jmp
fidivr
loope
loop
out
cmps
sub
jle
push
sbb
jb
pop
push
or
sbb
jge
add
xor
(bad)
pop
out
repnz
sbb
ss
out
int
out
dec
xor
add
lea
inc
jge
and
fs
out
jmp
and
sub
jmp
popf
rcl
xor
pop
aas
dec
cmp
int3
aam
push
cmp
jb
inc
mov
fisttp
dec
movs
aad
and
cli
sub
clc
add
into
hlt
jno
ret
test
fucom
push
pusha
cmp
xchg
dec
fsub
aad
movs
dec
int3
aaa
or
push
push
je
pop
enter
mov
movd
cmp
or
push
and
ror
and
jmp
cmp
lods
xchg
mov
pusha
xlat
arpl
cmps
scas
aas
fbld
fimul
dec
and
pushf
in
jae
outs
sbb
sub
es
pop
push
xlat
push
(bad)
or
je
in
jmp
in
mov
jns
inc
sar
jl
mov
and
fdivr
add
or
jo
mov
aam
sbb
fs
sbb
les
loopne
inc
es
mov
add
xchg
jge
pop
and
or
push
xor
arpl
adc
and
cs
adc
dec
shr
jmp
mov
scas
pop
retf
add
adc
push
dec
mov
pop
pop
dec
pop
(bad)
xchg
mov
mov
or
test
lock
out
test
leave
add
not
xchg
push
add
inc
loopne
sub
imul
adc
bound
xor
pop
and
push
inc
sar
dec
pusha
pop
push
sbb
cmc
xor
sub
les
add
push
sbb
mov
jmp
sbb
test
add
push
pop
pop
fld
daa
xor
outs
sub
cli
mov
test
jb
sub
je
push
inc
loopne
pop
(bad)
sbb
loopne
test
mov
dec
add
jle
pushf
sbb
or
or
outs
je
aad
(bad)
aas
ret
jmp
add
movs
imul
sub
jmp
push
test
inc
xor
loop
dec
sub
cwde
es
int3
fadd
sbb
add
cwde
sub
pop
xor
setno
mov
push
adc
add
mov
or
or
lods
dec
or
rol
xor
mov
stc
push
rcr
cmp
xchg
inc
in
aam
loop
outs
and
pop
add
fwait
sbb
imul
fs
mov
pop
in
bound
or
sub
in
mov
cmp
or
frstor
xor
adc
loopne
in
in
test
in
imul
dec
hlt
in
hlt
hlt
xchg
ins
js
test
bound
sbb
ins
cdq
call
addr16
push
arpl
loope
fmul
mov
xchg
push
dec
test
push
cdq
mov
sub
test
add
sub
sub
loopne
loop
cdq
cmps
inc
jmp
mov
je
pop
mov
jg
jmp
test
add
(bad)
hlt
stos
stc
cmc
jns
mov
dec
mov
pop
scas
ins
mov
pminub
xchg
inc
xlat
mov
cld
or
lds
pop
pop
mov
sub
test
sub
xchg
ret
loope
out
add
out
sbb
std
or
imul
aam
lock
add
cld
jmp
jge
mov
sub
mov
and
pusha
cwde
fadd
mov
mov
adc
mov
in
push
ret
adc
in
loopne
sub
lods
add
mov
sub
repz
fucomi
cmp
je
jmp
and
inc
je
sub
je
fwait
pop
add
call
popf
and
xchg
push
es
dec
and
jl
mov
and
add
dec
js
mov
add
inc
aam
loopne
sahf
xchg
xor
nop
mov
lods
sbb
lock
cs
(bad)
add
jae
sbb
ds
nop
mov
mov
push
cs
dec
sub
jbe
push
iret
adc
or
inc
sbb
jne
dec
push
cs
fdiv
and
fmul
lea
fstp
xchg
sbb
sbb
addr16
addr16
les
sbb
ins
stc
into
frstor
pop
sub
add
addr16
bound
sub
leave
sub
nop
sti
(bad)
sub
or
mov
cmp
sbb
(bad)
std
mov
sbb
test
aaa
imul
and
icebp
imul
or
sub
(bad)
popf
fstp
pop
mov
cmp
lods
mov
inc
push
fucomi
fbld
loopne
arpl
adc
shl
dec
int3
push
in
cdq
sbb
ins
adc
inc
dec
push
je
add
pop
test
in
jmp
sbb
mov
add
dec
jns
loopne
add
push
and
pop
xchg
gs
lea
or
or
test
in
mov
and
pushf
lock
pop
mov
movs
add
and
test
call
cmp
mov
or
(bad)
(bad)
pop
imul
or
mov
fisttp
lods
add
loop
mov
xor
xchg
mov
cmp
mov
mov
and
jnp
sbb
in
push
int
mov
je
push
and
cmp
outs
dec
dec
jno
or
push
xchg
or
shl
ss
mov
add
sbb
inc
scas
cmp
iret
lea
jbe
rcl
call
add
je
and
lods
push
xchg
push
mov
mov
inc
mov
jbe
push
das
pop
inc
ror
xchg
cld
adc
sbb
cmp
push
add
inc
iret
popa
fwait
(bad)
in
lods
popf
stc
adc
cmp
dec
ja
adc
mov
mov
add
inc
adc
adc
mov
pusha
add
lods
and
in
sub
movs
mov
inc
inc
retf
jmp
and
or
aad
add
jo
xchg
adc
lods
imul
mov
push
arpl
add
push
das
add
test
sbb
cs
or
fcom
or
or
ins
nop
sbb
jno
jg
and
lds
fsub
jne
sub
or
xor
add
ror
xchg
add
test
imul
or
push
push
inc
imul
lahf
sbb
push
add
xchg
lods
pop
mov
or
adc
push
jb
jmp
inc
add
cwde
adc
add
lea
ror
out
or
push
pop
dec
or
pop
pushf
xor
fsub
pop
loop
jle
ror
imul
sbb
dec
or
icebp
and
push
cmp
cdq
shl
or
fsub
out
mov
hlt
jecxz
aam
loope
outs
pusha
shl
mov
arpl
nop
outs
out
jmp
and
dec
and
push
xor
mov
xchg
or
xchg
xlat
jne
bound
jecxz
or
pop
shr
or
add
rcr
mov
and
or
retf
(bad)
in
jb
pop
push
dec
je
jmp
jb
stc
inc
cmp
inc
jmp
dec
cmp
lock
sbb
push
inc
cmp
inc
fs
loop
or
or
or
sahf
xor
mov
pop
jmp
or
and
jmp
or
or
adc
lahf
or
jmp
push
xlat
cmp
pusha
pop
into
int3
add
test
cs
retf
(bad)
test
movs
push
xchg
add
daa
iret
cmp
add
scas
clc
mov
adc
sbb
popf
dec
mov
not
loop
adc
sbb
and
cmps
inc
int
mov
test
fcmovne
dec
sub
inc
pop
fmul
mov
push
lods
(bad)
aam
mov
add
popa
aas
sub
ins
mov
mov
test
fild
aas
push
mov
shl
(bad)
enter
outs
int
mov
or
or
pop
or
nop
popa
cmp
retf
nop
xchg
cwde
movs
mov
add
popf
test
enter
lea
je
xor
dec
xlat
push
push
pusha
inc
sbb
movs
retf
stos
in
sbb
xchg
inc
repz
arpl
add
jae
and
aam
test
clc
jmp
scas
or
scas
cmc
push
add
call
mov
in
or
call
adc
xchg
push
sbb
xlat
ins
sbb
in
(bad)
xor
mov
mov
stos
mov
iret
adc
jbe
leave
add
adc
and
mov
xchg
in
fiadd
add
je
loopne
or
xchg
(bad)
ins
mov
mov
xor
sbb
inc
jle
aaa
sar
add
call
pushf
sbb
mov
add
ror
dec
addr16
fsub
inc
cwde
cmovo
cwde
adc
or
cmp
xor
pop
cmp
adc
lock
inc
mov
jge
mov
ficomp
call
adc
add
jl
mov
int3
xor
rol
daa
cmp
aas
sbb
cmp
es
xchg
jne
inc
and
mov
mov
test
daa
dec
mov
sbb
sbb
test
adc
jge
lea
cmp
loopne
hlt
aam
xchg
xchg
jo
xor
cmc
(bad)
fs
dec
mov
je
xor
xchg
ja
xchg
call
rcr
hlt
aam
and
xor
push
ja
push
xor
mov
inc
and
and
jg
push
push
nop
retf
hlt
pop
arpl
inc
das
lock
fisttp
add
shl
push
data16
add
pusha
push
into
pop
pavgb
jmp
pop
das
or
add
jp
mov
and
enter
sar
inc
push
push
mov
jmp
gs
test
inc
ret
popf
sbb
push
hlt
in
adc
add
sub
push
push
cdq
movs
aad
lods
pop
xchg
in
adc
jno
push
or
lock
xor
js
pushf
lahf
hlt
fimul
(bad)
cmp
lea
or
or
sar
ss
gs
ret
adc
or
add
das
imul
ins
fwait
in
aad
je
jmp
sbb
shr
jl
shr
adc
popa
dec
sub
mov
in
fnstsw
jne
das
daa
loope
mov
xchg
out
jno
jmp
call
push
cmps
ja
rcr
mov
dec
ret
ja
pop
loopne
inc
adc
lds
and
add
mov
pushf
or
push
or
push
addr16
cmc
stc
mov
xchg
or
not
inc
mov
shr
adc
adc
jmp
lds
push
test
pop
jno
shl
inc
cdq
pusha
or
mov
bound
inc
pop
mov
lahf
pop
das
inc
shl
movs
scas
mov
cdq
inc
and
xchg
sysexit
cld
pusha
mov
cmp
mov
lods
adc
jne
inc
movs
pop
jmp
xor
cwde
setne
(bad)
xor
mov
(bad)
and
rol
(bad)
mov
stos
test
lahf
ret
adc
jo
test
call
add
cmps
imul
adc
pop
cs
(bad)
sti
push
adc
push
dec
mov
js
dec
adc
jo
jmp
nop
push
inc
js
shl
pop
cmp
and
jle
jmp
lock
or
xchg
rcr
push
sub
idiv
test
sbb
loope
cs
cmps
sub
lahf
clc
xchg
inc
je
jbe
idiv
adc
adc
mov
push
adc
mov
ds
shl
add
clc
shr
pop
dec
in
inc
loopne
clc
inc
xor
dec
xchg
out
add
hlt
sar
(bad)
aam
dec
cmp
jae
sub
ret
int3
or
pop
cld
mov
adc
call
jbe
push
cmp
mov
push
sbb
sub
jmp
pop
hlt
mov
dec
in
xor
jb
in
ret
sub
mov
dec
fidivr
test
in
lea
ins
add
mov
pop
lds
sbb
dec
sub
mov
dec
cdq
xlat
fld
fisttp
xchg
je
(bad)
cmp
dec
cli
call
mov
or
repz
mov
or
(bad)
mov
push
aaa
stos
(bad)
sbb
dec
cli
jne
mov
sub
push
jg
cwde
mov
or
scas
push
xor
cli
inc
xor
pop
ja
fcomp
arpl
shl
enter
push
push
mov
inc
add
adc
scas
call
jbe
sbb
std
xlat
je
sbb
ret
add
test
jo
pop
and
call
add
push
mov
mov
jle
std
add
test
sbb
sbb
cdq
xchg
sbb
or
or
pop
or
sbb
cmp
int3
pop
mov
jnp
(bad)
mov
sub
loopne
mov
add
shl
imul
dec
mov
adc
jge
push
jne
lea
pop
sub
pop
sbb
pop
les
pop
fwait
push
hlt
add
mov
cwde
(bad)
mov
pop
fiadd
nop
xchg
jmp
fld
push
bnd
dec
pop
or
fld
and
scas
pop
and
sub
pop
repz
pop
(bad)
ret
push
jne
dec
jne
inc
xchg
push
push
or
xor
je
or
sub
jno
rcl
fwait
test
stos
and
jp
pop
sbb
mov
add
sub
in
nop
add
sbb
test
sahf
div
hlt
mov
push
cmp
loopne
loopne
inc
out
push
mov
mov
sub
fsubr
pop
jb
mov
dec
fdivr
dec
rcr
and
enter
pop
aam
nop
mov
mov
rcr
int3
adc
es
pusha
jnp
mov
push
shld
mov
add
or
(bad)
leave
add
add
imul
jle
and
xchg
ss
rol
add
or
hlt
mov
and
mov
push
in
push
push
hlt
mov
pop
cmp
movs
xor
nop
(bad)
and
movd
imul
add
sub
imul
clc
mov
sbb
fisubr
fs
rcr
scas
(bad)
ins
add
fs
pop
daa
pusha
fld
loop
pop
jmp
(bad)
pop
jo
push
je
adc
fstp
pop
sbb
repnz
int3
pop
push
cmp
es
scas
mov
or
(bad)
pop
inc
sbb
mov
fbstp
or
in
or
mov
mov
pushf
dec
push
inc
in
in
ins
scas
push
or
shl
call
gs
mov
dec
fcomp
pop
jb
fadd
dec
pop
mov
sub
dec
sub
nop
add
imul
push
jne
mul
xor
pop
test
and
int3
int3
adc
jle
xchg
in
lods
add
pop
fcmove
aaa
or
rol
retf
adc
xor
or
xchg
sbb
daa
sub
jle
and
inc
jne
mov
and
push
pop
(bad)
mov
mov
xor
inc
xor
adc
mov
push
in
cdq
sbb
pop
push
xchg
int3
cmp
popa
test
pop
arpl
xor
lea
push
pop
add
dec
push
xchg
inc
call
inc
ror
icebp
or
je
imul
jmp
clc
push
adc
xor
inc
sub
and
add
or
in
jecxz
jne
sbb
movs
adc
or
mov
hlt
rcr
dec
lds
lahf
inc
inc
pop
and
(bad)
dec
loope
pop
(bad)
or
test
mov
adc
add
jmp
lea
fist
jb
fld
cmp
loopne
inc
icebp
pusha
and
out
jecxz
cmp
mov
out
mov
cmp
nop
scas
mov
xor
add
sahf
sbb
call
jge
lock
xchg
clc
repnz
je
lock
js
enter
pop
pop
pop
mov
mov
sbb
leave
in
stc
in
pop
sbb
or
xchg
add
loopne
lea
adc
call
adc
xor
cmp
enter
xchg
cwde
test
jecxz
pop
adc
rol
pop
scas
in
das
fld
outs
inc
xchg
xor
loop
mov
xor
es
lock
mov
(bad)
or
cmp
mov
test
pop
adc
add
mov
or
ret
add
xor
iret
clc
jae
aad
push
jp
and
das
xchg
je
pop
jbe
sbb
dec
popa
xchg
arpl
pushf
mov
pusha
outs
push
cwde
inc
pop
jae
xchg
mov
leave
pop
add
fcomp
cmp
jmp
ins
add
out
sbb
mov
or
pop
jae
mov
fcomp
push
push
popa
pop
ja
sbb
adc
and
pop
clc
push
arpl
mov
(bad)
iret
add
jo
mov
xor
bound
imul
gs
jo
inc
js
jg
cld
pop
jg
lock
inc
ret
mov
xchg
fidiv
scas
popa
xchg
mov
lea
in
mul
inc
nop
add
fs
push
xchg
hlt
out
adc
adc
and
aas
adc
or
je
clc
in
add
movs
stos
data16
xor
popf
push
das
inc
es
aad
pop
int3
ja
outs
pushf
add
mov
xor
add
mov
setne
pusha
loop
in
jmp
push
je
arpl
movs
loope
or
cmp
sub
jbe
push
or
inc
add
jne
ret
idiv
push
test
ins
push
inc
mov
retf
xchg
sbb
iret
pop
std
inc
inc
hlt
mov
jp
popf
popa
ror
xor
and
or
add
or
mov
and
cmp
xor
or
jo
mov
pop
mov
and
add
scas
(bad)
or
test
add
dec
jns
and
and
adc
sbb
ja
imul
iret
and
(bad)
or
sub
push
sub
xchg
adc
cmp
stos
mov
sub
ja
pushf
aaa
and
mov
int3
adc
adc
sbb
jno
xchg
xor
or
clc
cs
and
jnp
jle
test
sub
inc
jb
mov
outs
or
jno
inc
repz
cs
cmp
jmp
sbb
cmp
lock
dec
mov
test
jne
jmp
movs
or
adc
fwait
pop
xor
pop
dec
or
or
inc
sbb
pusha
mov
daa
es
clc
cmp
pop
dec
dec
sbb
js
shr
mov
and
add
xadd
cmp
int3
jne
fwait
jo
and
xlat
clc
loope
js
and
add
mov
jle
je
and
inc
sub
cwde
adc
jno
rol
or
sbb
cmp
mov
in
pop
daa
mov
test
out
aas
or
cmovs
and
ds
jo
push
stos
jnp
or
sbb
mov
or
fmul
fild
test
outs
retf
lds
sub
inc
stos
dec
fwait
adc
ins
fmul
iret
jo
loope
pop
add
rol
cmp
aas
fstp
mov
mov
rol
push
adc
ds
les
adc
inc
jne
xlat
add
fmul
pusha
je
pop
lea
test
jbe
pop
xchg
mov
jo
push
in
sbb
push
rcl
sub
mov
push
and
div
xor
fsub
in
(bad)
in
cmp
inc
movs
dec
pusha
inc
add
dec
mov
sub
add
popf
fs
gs
imul
inc
mov
enter
imul
adc
ins
hlt
push
adc
sar
in
push
fdivr
int
stc
push
lods
nop
aam
cdq
int3
or
cmp
mov
stc
cmp
repz
mov
pushf
out
xchg
outs
pushf
mov
cmp
jns
test
out
ins
push
push
fs
sub
pop
lods
jnp
push
xchg
jle
jl
call
imul
xor
mov
sahf
je
sub
mov
jne
iret
enter
mov
inc
and
je
sbb
repnz
adc
xchg
adc
outs
in
xchg
or
pushf
pop
or
xor
popf
add
dec
fwait
add
sahf
lea
cld
popa
movs
fiadd
hlt
push
pushf
cmps
lock
cmp
in
xchg
out
cmp
test
mov
in
call
sbb
aam
fcomp
fwait
aam
sahf
mov
adc
cmps
stos
daa
int3
in
repnz
mov
mov
addr16
rcr
dec
xor
popf
mov
push
adc
fwait
pop
lods
push
mov
test
xchg
ja
outs
xchg
sbb
dec
sahf
pushf
inc
cwde
out
mov
repnz
cmp
push
sbb
inc
inc
jl
test
inc
pushf
adc
cwde
or
sub
push
and
pop
and
cmp
dec
mov
xor
pop
adc
popa
cdq
sub
sub
retf
ret
mov
mov
adc
mov
or
dec
fcmovne
push
cmps
jge
sub
iret
add
mov
xor
push
jb
cmp
mov
push
cmp
nop
mov
sbb
enter
les
sbb
ret
aam
xacquire
xchg
inc
prefetchwt1
sub
xchg
push
loop
sti
cmp
mov
cmp
jmp
lea
or
das
push
push
movs
ins
sbb
mov
movs
sub
into
and
ret
sub
in
mov
and
adc
cli
or
pop
add
jmp
data16
clc
inc
or
or
les
mov
adc
pop
inc
sbb
and
sub
or
cmp
push
pop
inc
adc
fld
fs
pop
retf
sbb
retf
(bad)
fst
mov
fs
inc
sahf
ret
popa
mov
in
out
pop
jmp
add
into
je
add
and
inc
inc
into
cmp
fs
inc
inc
mov
enter
mov
loopne
inc
iret
lods
cwde
mov
pop
pop
mov
in
test
adc
stc
jl
lea
mov
arpl
or
push
nop
cmp
mov
movs
jecxz
inc
mov
and
cmp
cmp
es
mov
push
aam
push
test
repnz
fs
nop
inc
je
inc
fwait
adc
nop
sub
and
out
fsubr
and
dec
or
inc
pop
or
xor
mov
add
mov
dec
repz
jbe
xchg
in
in
mov
pop
mov
push
fnstenv
bound
push
nop
dec
lods
add
mov
mov
sbb
shl
mov
fisubr
mov
xchg
dec
fsubr
and
lods
in
mov
and
dec
hlt
mov
xchg
inc
dec
xor
es
fs
adc
cdq
fs
les
and
sub
xchg
dec
sub
push
inc
inc
fcomp
push
dec
sahf
xchg
dec
fcom
fs
dec
sub
cmp
xchg
dec
sahf
inc
test
mov
rcl
inc
sub
mov
hlt
pop
(bad)
sub
hlt
jne
les
inc
push
mov
jl
bnd
add
outs
je
fs
jne
mov
mov
(bad)
ja
mov
cmovns
outs
fs
repnz
enter
(bad)
pop
outs
jb
inc
ins
jo
repnz
xor
jb
ins
push
je
pop
push
cmp
add
and
rol
mov
jns
(bad)
pushf
sbb
jae
pop
dec
add
test
int3
or
ret
xlat
jmp
jge
sub
sbb
loopne
push
sbb
fadd
retf
push
adc
dec
mov
push
and
sub
adc
sbb
push
add
sub
loopne
daa
repz
sbb
dec
jo
push
lods
push
loopne
rcr
mov
push
(bad)
push
mov
fsubr
inc
clc
repz
ss
adc
in
mov
pusha
push
push
dec
inc
nop
clc
test
pop
in
test
data16
fsub
jae
push
sub
lea
sub
popa
nop
dec
and
push
rol
sbb
test
inc
xchg
ret
sbb
sbb
pop
mov
pusha
int3
int3
test
xchg
jl
out
push
pushf
push
pop
imul
(bad)
call
push
pop
mov
retf
mov
jg
push
mov
or
imul
mov
add
mov
mov
pop
nop
inc
fcomp
jns
jge
les
loope
push
test
push
push
jge
ins
xor
clc
inc
in
add
shr
aas
or
or
push
inc
mov
dec
adc
dec
(bad)
loopne
int3
adc
(bad)
adc
lods
jnp
push
add
cs
lods
(bad)
lods
and
sbb
(bad)
adc
or
dec
ds
pop
mov
adc
je
sbb
add
fisub
in
stc
(bad)
fcomp
loope
adc
adc
shr
push
cmp
ds
mov
and
mov
push
movs
iret
loopne
xchg
mov
push
jae
iret
or
ds
adc
lahf
adc
leave
mov
push
ins
jo
(bad)
jo
(bad)
sbb
addr16
xchg
inc
mov
mov
adc
(bad)
cmp
stos
mov
fnsave
mov
(bad)
mov
cmp
ins
ins
movs
daa
inc
or
add
and
pusha
push
push
push
cld
mov
fwait
pop
jae
cld
retf
add
icebp
fisttp
mov
outs
lahf
in
push
mov
mov
add
cmp
adc
test
in
mov
cmps
mov
in
out
imul
imul
lock
daa
in
(bad)
inc
cmps
in
or
fbstp
pmulhuw
fcomp
add
xchg
test
dec
push
sbb
push
in
enter
jecxz
nop
pop
jb
loopne
pusha
dec
adc
pminsw
push
fild
jns
pop
pop
cwde
pop
push
call
cmp
mov
cmp
cli
add
cmp
add
sub
xor
clc
aaa
icebp
retf
clc
sub
add
dec
or
bound
jo
add
pop
call
jbe
add
inc
mov
mov
sub
sbb
mov
aaa
xchg
adc
cmp
retf
clc
inc
fiadd
pop
dec
hlt
mov
and
lock
inc
sahf
lock
mov
jae
lahf
in
rcl
dec
imul
call
dec
in
sbb
jae
loopne
in
in
cmp
or
sbb
fcmove
push
fwait
dec
pop
or
ret
add
les
lock
cmp
(bad)
fmul
cmp
enter
jo
and
and
xchg
pop
or
loopne
pop
inc
les
pop
mov
dec
mov
mov
sub
jmp
int3
and
jno
push
mov
adc
jne
mov
inc
push
jmp
aas
gs
xchg
cli
or
adc
data16
mov
pop
push
dec
mov
test
xchg
adc
xor
inc
xchg
inc
cdq
add
nop
loop
out
mov
sbb
(bad)
xlat
cmps
pop
lods
nop
push
enter
push
lods
pop
xor
pop
pushf
mov
dec
mov
cld
rcpps
sub
rol
sar
popa
xor
xchg
cmp
lahf
ret
mov
adc
jle
jecxz
push
pop
adc
aaa
repnz
mov
add
ja
test
call
jne
pushf
xchg
dec
sub
push
shr
sbb
jnp
test
ins
adc
and
in
pop
mov
repnz
shl
call
ret
cmps
or
inc
add
xchg
push
xchg
pop
xchg
sub
mov
push
movsx
or
and
mov
inc
fnstenv
add
sti
jmp
and
mov
lock
cmps
aam
sbb
imul
enter
lea
or
int
dec
mov
push
cld
fimul
lods
cmp
je
aaa
jnp
sub
xchg
inc
sub
inc
pop
imul
dec
inc
mov
dec
sbb
lea
cmp
data16
dec
repz
dec
jnp
shl
push
test
jnp
add
fst
xchg
daa
in
xor
jne
push
cld
xor
push
xchg
jmp
xor
push
aas
jmp
shl
dec
push
dec
add
data16
xchg
sub
sub
or
ret
mov
scas
mov
repnz
dec
dec
jmp
add
pop
addr16
inc
pop
js
push
inc
mov
pop
inc
test
mov
bound
daa
je
lahf
je
jg
call
loop
or
jo
inc
add
test
add
adc
and
sti
cmovb
mov
adc
mov
in
(bad)
hlt
(bad)
cmp
push
sub
data16
jecxz
and
jmp
sub
jne
cmp
mov
push
pusha
cmc
cmp
cmp
sub
jmp
sub
out
iret
pop
inc
push
retf
(bad)
aad
or
adc
sbb
push
sbb
outs
jle
jle
neg
jo
out
jmp
add
dec
xchg
std
je
and
lea
and
inc
add
xor
push
sbb
or
loopne
fs
scas
nop
in
in
loopne
push
inc
cs
jmp
or
xor
sbb
test
jnp
(bad)
mov
xor
adc
pop
cdq
dec
enter
fs
call
dec
cmp
push
retf
xchg
lds
outs
cmp
xchg
pop
(bad)
fcom
movs
(bad)
rcl
inc
rcl
push
cmps
push
add
push
cld
fidiv
push
sbb
ror
sbb
and
push
fisttp
jmp
adc
cmp
xor
inc
(bad)
xor
cmps
lock
inc
lock
(bad)
daa
arpl
outs
test
jmp
cmc
pop
outs
jl
and
cmp
je
pop
jne
or
adc
push
(bad)
cmps
ins
add
ret
add
or
sti
push
int3
rol
les
fidivr
fisubr
int
fincstp
xchg
ins
inc
xchg
adc
lock
push
movs
push
jo
add
push
push
fs
push
mov
mov
pop
out
in
inc
push
cmps
es
sub
add
out
cs
xchg
mul
(bad)
push
popa
jb
pop
movs
push
mov
sahf
int3
fucomp
call
cmps
cmp
sub
cwde
pop
pop
inc
push
pusha
call
jne
out
loopne
jg
or
mov
xchg
push
jmp
sbb
pop
fst
xchg
xchg
fstp
sub
cmp
xor
add
sub
fsub
push
ficomp
rol
arpl
data16
movsx
(bad)
jmp
and
add
add
xlat
ins
or
pop
dec
fwait
out
into
xchg
pushf
push
push
xchg
ins
jmp
inc
mov
jne
rcr
jl
sub
jmp
into
inc
scas
push
cld
add
pusha
sub
in
in
pusha
jne
cmp
xchg
jmp
add
push
jae
push
xor
mov
inc
lock
add
rol
sbb
push
add
mov
dec
fld
xor
dec
ret
mov
outs
nop
arpl
xor
push
jp
jne
sub
dec
mov
push
mov
ja
push
jmp
xchg
arpl
mov
enter
je
fisubr
dec
addr16
loope
out
jno
adc
fs
movs
aad
jb
jmp
pop
enter
xchg
test
pop
int3
mov
(bad)
fcomp
jmp
icebp
pusha
cmp
adc
sub
dec
inc
stc
push
mov
std
adc
push
push
mov
push
mov
cmps
js
add
xor
cmp
cmp
pop
adc
xor
or
mov
mov
neg
sub
inc
push
lds
push
sbb
and
xlat
sbb
fnstenv
aaa
fdiv
jmp
mov
and
pop
xchg
cmp
jne
add
cmp
mov
or
jp
pop
shr
loopne
add
std
gs
cmp
repz
push
jl
popf
mov
repz
out
out
sbb
jns
leave
leave
sub
jp
out
jbe
data16
test
mov
cmp
push
cwde
xor
dec
jb
rol
(bad)
xlat
pop
dec
lods
rcr
shl
pop
and
dec
sub
cmp
xchg
js
mov
int
mov
retf
and
pop
cwde
xor
clc
sti
pushf
in
fnstsw
sbb
xchg
or
jbe
xchg
adc
pop
repnz
shl
cmp
sub
jge
and
int3
jmp
and
div
push
push
and
(bad)
loopne
cmp
inc
call
cmp
jl
rol
lds
jo
dec
or
jmp
data16
popa
rol
sbb
dec
or
daa
iret
xchg
scas
and
xchg
rcr
popf
movs
push
cmp
jo
fild
imul
sti
(bad)
std
jg
sub
xor
push
push
cld
sub
sub
es
ror
dec
xor
or
pop
and
push
cld
push
jmp
mov
add
rcl
fidivr
add
fistp
shl
in
add
imul
fidiv
in
and
test
pusha
das
aaa
fsub
add
pop
cli
or
das
movs
push
retf
jne
dec
push
and
jmp
mov
lea
sbb
or
mov
or
push
inc
inc
add
mov
out
sahf
data16
or
out
sahf
imul
ins
repnz
daa
repz
popf
out
adc
and
shl
aad
je
(bad)
imul
lods
outs
aas
sub
mov
hlt
sbb
jmp
leave
sbb
movs
push
sar
cmp
pop
cs
inc
leave
mov
inc
fstp
push
loopne
mov
push
loopne
inc
fimul
test
es
add
pop
aaa
and
xor
mov
and
pop
call
inc
cwde
je
dec
je
jmp
outs
mov
shr
movs
jnp
clc
je
and
add
inc
mov
jae
sahf
ins
ins
pop
daa
ins
cmp
fidiv
ins
inc
jmp
daa
sti
or
push
sub
mov
mov
ret
mov
fldcw
dec
and
sub
shl
xchg
mov
mov
sbb
inc
fist
sub
sbb
jecxz
cmp
or
daa
add
mov
or
fistp
mov
cmp
out
and
dec
aam
jle
cmp
mov
addr16
jb
mov
push
adc
or
sub
fucomi
jge
adc
jle
mov
arpl
or
pop
rcpps
inc
loope
cli
test
hlt
sub
fadd
loopne
mov
out
and
adc
outs
push
mov
push
xchg
pop
sbb
retf
pop
push
dec
dec
add
dec
sbb
scas
sbb
adc
icebp
cmp
outs
inc
pop
or
add
(bad)
dec
inc
add
add
push
jg
repz
cdq
mov
enter
pusha
cmpxchg
jp
fadd
adc
mov
pop
mov
push
nop
retf
add
add
frstor
retf
sbb
out
adc
out
jo
inc
cwde
mov
add
add
mov
sub
push
ins
xchg
push
cmps
jg
adc
sbb
and
sbb
push
enter
add
loopne
sbb
iret
repz
dec
push
push
imul
sub
xchg
popa
rol
adc
mov
mov
cmps
sbb
mov
xlat
inc
ficom
dec
push
mov
pop
add
in
stos
jl
adc
lea
and
test
xor
sbb
cs
(bad)
cdq
sub
mov
daa
jl
push
push
adc
add
sub
retf
pop
aaa
popa
(bad)
adc
jne
stc
xor
aaa
dec
jbe
mov
inc
adc
sub
push
push
xchg
inc
mov
(bad)
sbb
mov
add
jmp
xchg
jl
jbe
hlt
xor
adc
bound
push
scas
mov
shl
lock
jno
int3
add
cdq
jbe
nop
pop
ror
call
pop
not
fnsave
mov
pusha
ss
adc
sbb
inc
out
xchg
out
and
jge
in
xchg
sub
call
fbstp
call
sub
cmps
add
loope
call
ins
ror
dec
mov
adc
sbb
clc
mov
test
adc
outs
xchg
mov
add
jae
cmp
push
fcmove
repz
add
sub
push
jo
cmps
stc
cmp
and
aaa
cdq
push
push
jbe
out
mov
push
shl
xchg
xchg
xchg
cli
clc
lock
sub
push
(bad)
pushf
pop
cmp
in
ins
and
add
add
xor
adc
mov
imul
sub
mov
sbb
js
daa
imul
xor
sbb
dec
dec
mov
nop
dec
jmp
adc
fdivr
add
adc
das
and
xchg
test
iret
repz
jmp
add
adc
inc
bound
sar
jp
inc
lea
add
icebp
jns
xor
out
ja
push
inc
mov
mov
ffree
push
arpl
loop
add
inc
inc
mov
or
movs
jmp
and
loop
fisub
push
adc
add
daa
mov
inc
out
sub
bound
push
arpl
push
nop
and
cmp
pop
adc
aam
add
movs
les
outs
idiv
push
arpl
dec
cmp
sbb
sub
mov
adc
inc
aam
cmp
loopne
pop
rol
push
jmp
arpl
xchg
pop
jg
add
mov
or
cmp
jns
nop
test
or
pop
mov
push
dec
xchg
dec
jno
xchg
cmp
pop
pop
out
loopne
out
ror
and
out
sub
out
sbb
into
pop
out
mov
dec
nop
test
push
test
jmp
and
xchg
add
xor
jge
push
jp
push
mov
repz
shl
in
add
sub
sahf
idiv
mov
cmp
shr
mov
mov
arpl
jns
ins
jbe
cmp
pop
jnp
xchg
sbb
push
adc
fcomp
fld
fdiv
inc
add
sub
pop
inc
mov
fild
sub
push
push
inc
sbb
cmp
inc
inc
rcl
fyl2x
imul
jl
jmp
das
pop
mov
pusha
pop
and
arpl
int
mov
sbb
pop
ins
iret
repz
push
jl
mov
mov
imul
dec
pop
add
adc
push
xchg
mov
mov
fld
adc
cmp
adc
dec
jmp
jnp
mov
adc
sbb
inc
sar
inc
adc
and
mov
xor
and
jmp
rcr
call
mov
sub
mov
dec
inc
neg
ret
andnps
adc
sub
mov
adc
sbb
in
push
inc
push
jno
mov
sbb
hlt
enter
fucomp
fwait
iret
loopne
rol
and
sbb
add
das
rcl
stos
das
cmc
jle
mov
popa
xchg
cld
jle
sbb
pop
pop
add
imul
sub
ins
jg
push
into
cmp
out
repnz
adc
out
fdivp
cmp
clc
pop
repz
xchg
xlat
pop
jno
pushf
pop
mov
iret
mov
xchg
xor
push
cmp
jb
add
inc
fistp
aam
fcmovnu
sbb
or
xchg
lock
jbe
xor
(bad)
jge
ins
mov
mov
pop
mov
imul
or
push
mov
daa
shl
cmps
(bad)
fild
inc
call
or
xchg
outs
ret
push
outs
push
not
pop
pushf
retf
test
je
mul
ret
mov
push
es
jns
mov
add
adc
add
(bad)
enter
loope
sbb
sub
and
sbb
inc
imul
inc
add
sar
jmp
daa
mov
inc
sub
imul
pop
ins
jmp
inc
stos
cmp
adc
pop
cmp
addr16
sub
xor
adc
jmp
push
or
mul
(bad)
mov
push
shl
dec
lods
adc
jmp
add
and
cmp
xchg
cmps
sub
aaa
retf
push
repz
test
dec
scas
xor
or
shl
sbb
xchg
inc
push
pop
mov
inc
sub
and
dec
mov
jnp
and
push
pop
fidivr
movs
sub
fild
dec
in
mov
xor
test
aaa
pop
sub
inc
es
adc
loope
mul
iret
loopne
cmp
xchg
mov
xor
adc
xchg
xor
or
cmp
xor
push
lea
cld
inc
mov
pop
pop
adc
jne
test
add
xchg
enter
mov
aaa
push
inc
inc
push
or
movs
ins
lock
pop
push
mov
lock
xchg
mov
xchg
jns
cs
xchg
sbb
cmp
rol
bound
mov
inc
mov
push
xor
dec
daa
rcl
in
add
sbb
mov
outs
and
pop
pusha
dec
fisttp
rcr
outs
mov
lahf
inc
je
xchg
mov
mov
lahf
push
mov
ins
rol
add
and
xchg
je
fisub
fld
in
loope
pop
idiv
or
pop
daa
cmp
fwait
dec
push
rol
bound
ret
lea
lds
pop
and
les
outs
sub
or
movs
or
add
ret
xchg
cmp
xchg
xchg
jbe
xor
cmp
bt
push
pusha
sub
xchg
mov
xchg
sub
lock
lods
in
out
sbb
push
push
ret
mov
fild
lea
push
push
or
push
add
add
sub
xchg
in
xchg
mov
xchg
add
jge
pusha
xor
mov
cmps
pusha
iret
push
mov
inc
mov
retf
daa
iret
fsubr
(bad)
adc
out
clc
xor
xlat
pop
lock
cmps
dec
data16
sbb
jg
push
test
fmul
and
push
les
frstpm(287
push
inc
fidivr
pop
out
push
pusha
enter
or
xor
mov
xor
sub
bound
add
mov
push
and
jecxz
inc
or
pop
je
pop
dec
add
pushf
jle
leave
jnp
and
mov
(bad)
cmp
inc
or
mov
repz
mov
es
pusha
jp
sbb
cdq
pop
fild
cmp
dec
push
lods
pop
or
jnp
and
sar
mov
xor
test
pop
dec
cmp
lds
lds
mov
xor
dec
or
mov
lea
jbe
mov
daa
xor
in
jno
mov
and
jb
outs
cwde
call
xchg
adc
add
sbb
or
in
mov
mov
pop
(bad)
cli
dec
je
dec
jl
cs
movs
clc
mov
stos
dec
mov
inc
aad
data16
inc
dec
inc
lock
xor
out
hlt
xchg
fdiv
dec
ret
lahf
and
push
lock
xchg
and
sbb
mov
xchg
adc
pop
push
push
dec
inc
inc
add
or
add
std
es
out
or
stc
dec
xor
add
sbb
xchg
fchs
pop
mov
out
test
push
or
addr16
or
sub
xor
or
leave
and
push
xchg
(bad)
(bad)
sub
enter
mov
sbb
rcl
push
add
mov
xor
mov
sbb
push
add
hlt
inc
xor
fisttp
cmp
aam
fsub
and
nop
xchg
sti
cmovne
out
jno
adc
pop
cmp
adc
jl
out
popf
mov
jnp
iret
shl
dec
aaa
xchg
push
jle
repz
fnsetpm(287
es
daa
cdq
mov
shl
adc
jmp
es
and
and
and
pusha
mov
dec
sub
jecxz
mov
nop
arpl
clc
mov
push
inc
push
cld
push
int3
pusha
leave
and
(bad)
cwde
push
jae
add
out
jmp
stc
cmp
leave
and
int
sub
xchg
xchg
or
loopne
loopne
pop
rcl
data16
imul
(bad)
test
mov
aam
es
mov
add
mov
and
inc
lea
pop
call
int3
enter
and
mov
mov
sti
int3
pusha
and
jmp
ss
dec
or
call
gs
jbe
mov
fucomip
(bad)
test
std
push
sbb
sahf
out
jl
mov
addr16
push
js
call
into
repz
aas
pop
and
jb
adc
xchg
mov
push
in
aaa
mov
stc
mov
pop
fnsave
push
pop
pop
jb
cmp
ffreep
pusha
cmp
pushf
cmp
popa
movs
neg
movs
mov
dec
aaa
and
sub
cwde
mov
xor
mov
xchg
stos
xchg
jno
inc
outs
push
lock
adc
jmp
pushf
mov
fmul
sbb
sub
adc
mov
sbb
cwde
mov
mov
and
or
push
or
fdivr
and
in
out
dec
push
and
jmp
add
mov
repnz
call
cwde
sar
in
and
inc
dec
and
add
test
leave
xor
and
ret
hlt
push
enter
xlat
cdq
shl
sbb
push
add
fmul
adc
ficomp
in
loopne
dec
dec
repnz
loopne
sahf
push
xchg
sub
push
push
lahf
xor
lods
call
dec
repz
sbb
cmp
cmps
stc
push
pushf
ins
call
mov
in
pop
push
and
movs
jns
mov
pop
dec
jo
ins
push
inc
rol
call
pop
push
xor
mov
fild
inc
ret
or
sbb
or
push
cmp
in
inc
inc
mov
jno
dec
or
loopne
ins
xor
dec
adc
(bad)
fsub
dec
in
call
adc
fwait
aam
aaa
shl
popa
adc
cdq
push
and
rol
int
inc
mov
enter
or
cmp
les
(bad)
into
jle
xor
lds
pop
sbb
ss
jne
mov
retf
fwait
not
popf
inc
out
xchg
pop
ret
sahf
add
ds
js
xchg
jns
rol
mov
aaa
mov
xor
mov
sub
ret
arpl
mov
imul
cmp
aaa
pusha
inc
test
es
sbb
test
movs
aaa
popf
nop
or
movs
aad
mov
test
cwde
es
add
aaa
cwde
mov
dec
out
jno
aaa
or
call
sbb
ss
popf
nop
xchg
xor
retf
ja
aaa
mov
mov
mov
pop
lahf
adc
add
xchg
add
xchg
cmp
push
test
inc
push
movs
lea
adc
outs
loopne
test
pop
into
lahf
popa
xor
and
test
or
adc
sbb
cld
gs
in
aad
and
sub
cmp
imul
dec
push
push
je
not
je
jmp
sub
aas
or
xchg
jmp
ins
pop
int3
jmp
xor
or
aaa
pop
ja
data16
aas
dec
shl
cmp
pusha
jmp
fld
mov
sbb
cwde
mov
xor
inc
or
dec
jp
dec
retf
ret
bnd
sub
push
pop
fnstsw
arpl
sub
outs
inc
push
jb
and
dec
and
enter
push
enter
mov
or
adc
test
dec
iret
push
inc
daa
rol
mov
call
mov
jmp
mov
ja
movs
push
sub
mov
inc
mov
nop
aas
stc
mov
leave
dec
mov
mov
xchg
inc
and
mov
adc
cs
adc
retf
fiadd
popf
push
out
or
fist
cdq
cs
dec
(bad)
fmul
dec
jne
mov
push
pusha
lahf
push
and
inc
push
push
pop
loopne
xchg
daa
or
sbb
inc
dec
or
inc
pop
xor
fstp
ror
or
inc
mov
sbb
js
scas
mov
lods
movs
jne
sub
jecxz
jle
pop
and
dec
push
outs
repnz
pop
movs
xchg
xchg
pop
mov
loope
retf
aam
push
dec
iret
les
add
idiv
not
and
and
sbb
mov
addr16
sub
jno
outs
push
or
push
sar
mov
xor
rol
movs
pop
inc
enter
mov
movs
sub
adc
shl
and
push
push
and
mov
out
xchg
mov
sti
cmp
mov
sub
cmp
mov
jl
gs
add
shl
and
push
pop
push
sub
xchg
fisubr
xchg
sub
inc
mov
inc
or
mov
xchg
or
sbb
mov
mov
and
push
xor
jl
jno
adc
jmp
dec
(bad)
jmp
mov
mov
and
mov
(bad)
mov
and
jae
das
imul
inc
and
inc
mov
cmp
mov
test
nop
cmps
enter
dec
(bad)
cmps
jne
push
js
shl
pop
pushf
jbe
dec
mov
pop
hlt
int
ja
xchg
adc
sbb
aaa
and
sub
push
hlt
mov
jo
out
clc
push
int3
ret
ficom
adc
inc
je
popa
push
dec
push
or
sbb
(bad)
(bad)
mov
mov
pop
jne
icebp
fwait
add
loope
cmp
daa
rcr
inc
fcmovnbe
ret
inc
je
xchg
fcomp
adc
and
test
dec
bnd
add
mov
inc
nop
popa
in
out
(bad)
add
mov
pop
jo
ins
not
xor
pop
dec
mov
push
or
cmps
hlt
movs
sbb
stos
sbb
sub
xor
cmp
enter
sub
or
shl
mov
lahf
test
lock
jge
cmps
xchg
aaa
(bad)
dec
(bad)
cld
shl
mov
movs
and
in
sar
add
pop
cmp
je
ja
lds
addr16
push
imul
lods
rcl
arpl
jo
rcr
and
pushf
inc
add
lock
adc
or
add
adc
sti
push
mov
fadd
dec
call
push
jo
adc
dec
mov
rcl
ds
icebp
movs
stos
ror
mov
adc
jb
cmp
pusha
pop
inc
aas
mov
repz
shr
mov
add
sub
xor
dec
mov
sub
sub
xchg
xchg
fs
dec
adc
adc
test
ret
outs
and
add
mov
mov
adc
jmp
sbb
fs
pop
daa
hlt
pop
jmp
mov
sub
or
xor
jmp
add
cmp
ds
pusha
data16
cmp
repz
mov
call
cmp
ins
and
pop
imul
pop
add
or
sub
div
or
jge
and
pop
jle
popa
cdq
dec
jnp
shl
and
scas
mov
or
ret
push
or
or
cld
pop
jecxz
xchg
outs
xchg
jbe
in
xchg
(bad)
sbb
lock
shl
jo
mov
(bad)
mov
in
sahf
out
ds
scas
and
push
sbb
mov
pop
mov
dec
je
xor
fiadd
(bad)
in
add
adc
jmp
daa
lods
std
nop
sub
pop
push
add
xor
mov
clc
hlt
sub
lahf
lea
pop
add
add
push
mov
pop
inc
add
pop
sbb
or
fldenv
mov
pop
jno
dec
cmps
sbb
pop
movs
sbb
and
jb
xor
sub
xchg
bound
xor
retf
pop
imul
adc
mov
sbb
(bad)
(bad)
push
or
push
in
add
div
pop
sub
dec
je
add
xor
cmc
imul
je
(bad)
jae
fucomi
cmp
push
dec
sbb
ror
jne
leave
in
xchg
and
adc
inc
sub
pusha
repnz
mov
add
adc
and
mov
xor
repnz
ins
sub
push
mov
rol
add
inc
fcom
mov
mov
(bad)
mov
xchg
dec
xor
sub
inc
das
add
fldcw
lock
ins
xor
aas
jne
lods
sbb
loope
or
mov
cld
add
dec
or
stc
add
popa
leave
fdiv
inc
adc
fmul
repnz
push
sbb
pop
popa
rcl
out
fmul
push
jmp
xor
ret
jmp
lahf
sbb
push
mov
mov
(bad)
gs
or
pushf
(bad)
jmp
or
clc
cld
rcr
sub
pop
pop
and
scas
jmp
test
or
cwde
dec
and
xor
and
or
or
mov
imul
add
add
mul
repnz
es
sahf
out
sahf
inc
xor
call
xchg
mov
add
push
movs
adc
mov
jb
mov
mov
jne
cmp
fisubr
jns
icebp
dec
push
out
imul
mov
sub
sti
test
jne
daa
cwde
xchg
or
cmp
jge
in
sub
or
pop
(bad)
jmp
fadd
cdq
jp
cwde
pop
add
nop
xlat
(bad)
pusha
pop
dec
jne
lods
int
add
(bad)
lahf
xchg
sbb
sub
sbb
inc
call
imul
into
pop
ret
push
aam
push
cmp
dec
sub
add
sbb
cmp
and
xor
test
inc
scas
rol
mov
push
loope
and
or
leave
cli
mov
push
mov
push
push
jmp
pop
cmp
mov
inc
cmp
mov
jecxz
call
ror
mov
push
xor
sbb
(bad)
sbb
popa
pop
push
mov
fild
xor
fmul
test
scas
pusha
jecxz
jne
int
push
dec
daa
fcom
mov
inc
or
and
adc
or
cli
or
jbe
ja
pusha
add
push
mov
cli
inc
jmp
mov
jmp
sbb
mov
jb
mov
scas
inc
div
or
retf
sub
cld
adc
hlt
out
mov
push
xchg
jbe
clc
dec
add
push
fcmove
movs
xor
jnp
call
or
pushf
jle
pop
nop
retf
pop
js
jne
pop
stc
inc
fidivr
js
adc
sub
sbb
or
jns
fdivr
push
sub
or
out
mov
xchg
pop
adc
cmp
jle
in
jge
add
es
ret
sahf
push
adc
push
or
dec
call
jae
xor
dec
lods
pop
mov
das
jbe
outs
fisttp
inc
fcomp
cmp
or
sbb
sbb
fild
add
fcompp
imul
and
nop
(bad)
das
retf
ficom
cmps
mov
ror
xchg
mov
inc
mov
pop
and
mov
sub
adc
scas
mov
lock
fisub
add
test
imul
cld
add
inc
gs
adc
shl
or
cmp
inc
dec
pop
xchg
fsubrp
mov
or
push
jns
sub
xor
adc
xor
cmps
sbb
pop
xchg
(bad)
sbb
push
add
outs
mov
loope
adc
mov
xchg
inc
sbb
int3
jbe
(bad)
fistp
dec
hlt
jmp
inc
out
call
test
sub
dec
jmp
and
add
rol
adc
inc
lds
inc
movs
push
pop
add
dec
jmp
daa
fmul
stc
lods
xor
sub
das
dec
data16
test
add
push
ins
pop
adc
cmp
push
(bad)
push
sahf
or
add
cld
push
adc
aam
and
mov
sbb
arpl
push
xchg
hlt
je
xchg
push
sub
dec
mov
out
pusha
dec
fs
arpl
(bad)
jp
ret
xor
xchg
adc
imul
xchg
in
retf
xor
sub
pop
mov
adc
fnsave
sub
or
add
ret
push
push
stos
sbb
cwde
mov
sar
jo
adc
outs
sbb
sti
xchg
sbb
or
lods
ja
pop
mov
add
mov
outs
(bad)
xor
or
push
cmp
cmp
jne
push
ss
(bad)
inc
push
outs
mov
and
lahf
and
mov
mov
mov
pmulhuw
or
and
nop
mov
push
jo
push
push
xor
fsub
into
dec
jne
cmp
test
sub
or
ins
jmp
and
mov
in
and
bound
lock
ins
out
add
stos
inc
nop
nop
pop
repnz
iret
xchg
mov
mov
cld
sbb
mov
xor
not
dec
and
addr16
jmp
adc
jb
pop
push
and
push
add
repnz
dec
xor
sbb
sbb
repz
enter
nop
out
pusha
jge
cmp
sub
xlat
push
sub
daa
jmp
adc
stos
push
adc
cwde
cs
adc
xor
imul
lock
rol
cwde
sbb
ret
dec
mov
daa
scas
into
js
add
les
fnsave
sbb
sbb
or
xchg
add
or
cmp
aad
mov
mov
ret
add
sbb
movs
outs
outs
jno
jl
jecxz
inc
xchg
movs
shl
ret
mov
ror
sbb
iret
outs
js
arpl
out
sahf
cmps
cmp
inc
dec
push
dec
shl
mov
imul
jns
dec
div
scas
pushf
adc
ret
es
neg
movs
inc
and
push
or
ja
sahf
ret
push
or
inc
mov
and
mov
mov
adc
data16
jmp
aad
mov
dec
dec
movs
mov
pop
out
dec
xor
ror
jns
pop
enter
inc
pop
push
jecxz
sahf
xlat
sub
mov
in
ret
xlat
ror
mov
add
xor
fldcw
pop
mov
lea
add
mov
test
adc
jg
add
aaa
jge
mov
loopne
sbb
xchg
adc
push
jmp
add
adc
mov
cmp
das
adc
sar
mov
(bad)
jg
or
jo
jns
nop
inc
adc
add
popa
mov
call
xchg
call
imul
fistp
adc
movs
or
stos
add
xchg
mov
jmp
add
ins
movs
test
shl
cmp
pop
cmps
pop
imul
pop
pop
retf
gs
ret
aas
push
outs
imul
lahf
in
outs
ja
arpl
imul
or
loope
into
mov
pop
pusha
pop
push
aaa
xchg
stos
dec
and
inc
sub
or
cmps
clc
add
and
repnz
mov
sti
pminsw
pusha
add
xlat
arpl
pop
xchg
in
mov
shl
int3
ins
das
cmp
rcr
push
fsubr
jno
adc
or
aaa
cmp
lea
xchg
cld
std
inc
or
add
xchg
pop
(bad)
fnsave
sub
adc
push
shl
or
clc
push
ret
lahf
test
push
push
scas
adc
dec
test
stc
xchg
push
and
or
and
cmp
dec
mov
mov
(bad)
fucomp
dec
imul
lahf
mov
ins
bound
inc
outs
loop
sub
inc
or
inc
loope
fcom
push
mov
jmp
sbb
cmp
test
add
cmp
or
test
mov
add
cs
movs
add
adc
inc
adc
push
sub
bound
mov
mov
or
jp
push
push
inc
and
add
and
xlat
mov
push
inc
scas
push
mov
and
or
dec
daa
jge
or
sti
add
inc
rcl
xor
dec
push
ins
dec
cld
add
lods
xchg
or
das
xor
shr
pop
sbb
or
pop
inc
fcom
clc
or
cmp
(bad)
xlat
mov
daa
or
aam
pop
xor
mov
xor
jl
neg
fsub
arpl
adc
or
mov
mov
cmp
dec
cmc
(bad)
stos
or
into
push
mov
add
mov
mov
inc
sbb
push
adc
imul
add
test
or
stos
les
(bad)
sbb
ja
mov
or
aaa
pop
mov
sbb
call
cs
adc
icebp
or
pop
or
(bad)
adc
jno
push
mov
pusha
lods
ins
pop
aaa
outs
dec
(bad)
(bad)
push
hlt
pop
adc
xchg
xor
jp
add
sar
lods
rol
pop
push
ins
dec
sahf
add
and
pop
jg
retf
mov
aas
add
jo
sub
inc
mov
pop
dec
jne
pop
mov
dec
loopne
fs
jnp
js
loopne
ss
in
lock
add
sub
add
pop
or
int3
ret
mov
pop
pcmpgtb
stc
or
shl
xor
cmp
mov
std
push
push
dec
mov
call
or
dec
mov
cmp
rol
out
jno
sub
add
test
loope
mov
or
push
push
pop
mov
mov
jmp
adc
fwait
mov
cmp
jne
aad
daa
add
ss
mov
pop
push
push
adc
push
ror
add
adc
rcl
out
ins
mov
out
div
pusha
push
mov
push
jo
shr
fbld
sbb
add
mov
in
retf
stc
mov
fisubr
or
sbb
(bad)
mov
inc
pop
push
pop
lock
mov
push
or
lea
inc
jle
push
aaa
sbb
mov
cli
push
adc
pushf
or
cmpps
adc
sbb
leave
out
xor
xor
xchg
sar
inc
or
or
sbb
cmp
sbb
cmp
or
rcr
mov
in
ins
js
jmp
int3
out
inc
pop
stos
adc
push
and
mov
and
fsubp
add
xor
add
fistp
inc
push
lea
mov
pusha
inc
push
adc
fadd
mov
push
aas
repz
dec
sbb
push
(bad)
imul
pushf
xchg
mov
aad
add
popf
push
clc
leave
jge
dec
jnp
and
push
sahf
push
push
inc
aad
fidivr
je
popf
cmc
mov
inc
cmp
jle
mov
adc
lods
(bad)
and
je
fimul
add
in
enter
leave
adc
sti
jbe
push
inc
loop
dec
dec
add
icebp
mov
adc
dec
loopne
mov
ret
es
push
imul
sub
inc
add
call
add
mov
push
sub
test
dec
or
call
lock
pop
jne
mov
cmps
int3
dec
rcr
sahf
inc
int3
xor
push
sbb
lds
in
sbb
adc
jl
inc
xor
cld
adc
add
fadd
pop
fld1
test
mov
test
jl
add
jl
push
jae
add
dec
jne
into
cmp
fild
mov
pop
xor
mov
mov
ins
adc
bound
sub
das
out
push
dec
pop
push
rol
mov
add
add
in
popa
adc
sbb
je
mov
sub
(bad)
sti
out
add
call
jl
pop
scas
add
pop
out
mov
adc
inc
scas
call
mov
ins
dec
shr
mov
add
or
adc
je
dec
jle
ffreep
dec
fnop
xor
aas
adc
push
mov
adc
xchg
shl
in
adc
arpl
sbb
js
ror
dec
jge
mov
sbb
adc
les
loopne
imul
pop
jle
aaa
(bad)
out
dec
push
pop
mov
add
jg
daa
mov
mov
hlt
mov
sar
mov
mov
jg
ficom
imul
imul
call
ror
push
outs
lock
add
retf
add
ror
add
adc
jg
sbb
pop
pop
test
test
iret
rcr
rcl
and
cmp
repz
push
pop
outs
jge
sub
in
mov
jg
push
call
cmps
sti
cwde
pop
jecxz
pop
add
shl
movaps
jmp
fnsave
push
push
or
pop
(bad)
movsx
(bad)
repnz
mov
cld
fld
and
xchg
push
fstp
sub
nop
mov
fstp
dec
mov
aad
dec
pop
mov
jns
shl
movs
xor
inc
ja
sbb
jnp
sbb
adc
inc
cmp
loopne
mov
jmp
push
shr
loopne
fdivr
inc
adc
bound
dec
or
and
psubusb
mov
add
out
pop
xchg
fwait
bound
aaa
adc
pop
popf
cmp
xor
out
inc
mov
mov
add
repnz
mov
cmps
lahf
add
add
jmp
ds
adc
pop
pop
xor
cmp
jne
hlt
pop
rol
hlt
adc
sub
ins
pusha
loop
aaa
arpl
push
pop
mov
sar
fucomi
dec
cmp
(bad)
scas
pop
cmc
mov
pop
push
xchg
mov
dec
push
stc
in
call
sub
mov
not
push
sub
push
sub
leave
or
adc
aam
add
shr
aad
jns
cmps
cmp
pop
outs
jle
xor
out
scas
mov
xor
enter
xlat
mov
fadd
inc
out
ret
xchg
popf
lock
ja
cwde
adc
pop
js
pop
sbb
jb
fstp
fwait
pop
fld
cmc
adc
cmp
cmps
sbb
sub
adc
push
inc
popf
mov
in
add
outs
pop
ins
and
dec
jg
imul
pop
(bad)
fsubr
dec
xor
imul
stos
mov
mov
pop
mov
or
or
adc
xor
in
aad
lods
cmp
jb
fucomp
pop
cwde
sbb
mov
push
xor
add
sahf
inc
or
hlt
dec
inc
pop
add
push
lea
cmp
push
mov
popa
inc
sub
jl
sbb
add
and
call
xchg
mov
cli
mov
or
in
jb
jo
out
and
mov
retf
add
cdq
jmp
ficom
pop
sub
sub
loope
mov
cld
icebp
retf
mov
add
aas
dec
xchg
jge
cmp
je
xor
adc
into
xchg
sbb
push
adc
pop
aas
sahf
test
cli
dec
call
push
sti
pop
dec
loopne
mov
add
adc
inc
add
pop
or
sub
push
or
adc
and
mov
pop
xchg
sti
gs
(bad)
nop
inc
sbb
add
xor
or
cwde
mov
mov
call
and
xor
stc
rol
jbe
inc
les
(bad)
call
sub
cli
add
clc
mov
enter
sbb
clc
mov
pop
xchg
mov
xlat
in
(bad)
adc
jg
scas
cmp
xchg
push
clc
shl
push
ret
sub
mov
cmp
adc
ret
push
mov
aas
lods
bound
dec
pop
sub
jl
neg
mov
mov
mov
inc
dec
jne
aas
call
stos
jne
repnz
mov
mov
xchg
jmp
inc
(bad)
enter
xor
jb
and
xchg
xor
std
xchg
loope
leave
add
loope
ret
mov
mov
jo
int
pop
xchg
leave
sbb
into
enter
push
les
xchg
adc
push
inc
cmp
cmp
fcom
rol
loopne
fadd
ja
scas
adc
fisubr
test
push
jl
jo
jge
jmp
cld
or
pushf
cs
xchg
jne
pop
xor
jge
cmp
sar
xchg
sahf
ret
mov
push
into
sbb
cmps
stc
dec
add
cmovns
xchg
jmp
inc
scas
cmp
lea
jo
push
lock
sbb
or
xor
inc
bound
mov
mov
cmp
xchg
movs
pop
(bad)
add
fidiv
jmp
mov
bound
outs
cmp
pop
fisubr
rcl
(bad)
mov
daa
mov
ret
daa
(bad)
push
or
gs
repz
inc
add
xchg
add
test
xor
fsub
(bad)
adc
add
pop
nop
fsubr
ret
mov
jl
ret
sub
mov
mov
adc
dec
cmp
lods
ret
add
push
cld
lea
jb
pop
into
mov
ss
pop
ret
dec
clc
lea
enter
sub
lock
push
cmp
dec
xor
test
ins
jae
leave
sbb
or
mov
mov
fld
add
clc
lahf
fwait
mov
mov
sti
add
push
das
pop
pop
fisttp
ror
sar
or
jo
push
pop
mov
retf
push
sbb
or
cmp
rcr
push
mov
mov
and
sbb
shl
aas
or
mov
js
mov
arpl
adc
pop
ret
inc
or
hlt
inc
sbb
sbb
lea
fsub
or
js
jns
adc
retf
cld
pop
push
inc
dec
inc
pop
ins
push
dec
je
push
dec
in
push
mov
jmp
mov
cmp
and
cwde
mov
or
add
ins
cdq
pop
outs
inc
aad
mov
or
call
or
sub
jno
add
das
cld
push
mov
call
and
loope
push
rcr
enter
push
push
or
mov
rol
dec
fcomp
mov
and
loope
xor
cmp
adc
(bad)
rcl
mov
sbb
pop
xchg
cmc
mov
add
hlt
xchg
ficom
sub
push
and
shr
push
xor
mov
add
sbb
xor
loopne
call
jmp
nop
pop
mov
jmp
jge
push
jge
ret
push
adc
mov
add
pop
push
mov
add
inc
pop
add
inc
repnz
test
pop
cmp
cmp
cmp
int
not
inc
scas
inc
sbb
push
pusha
mov
xlat
cmp
retf
dec
ds
add
outs
push
adc
int3
cld
xchg
or
fadd
or
and
add
les
sub
or
loope
cmp
movs
jnp
les
push
fdiv
xlat
psubb
lods
jecxz
mov
cld
inc
sbb
and
push
test
push
push
mov
sbb
mov
aam
sbb
cs
fnsave
or
pop
jbe
xor
and
(bad)
stc
xchg
sub
loop
aas
inc
add
movzx
mov
xchg
ret
jno
lsl
mov
mov
push
dec
retf
or
or
push
mov
sbb
lahf
in
jmp
jg
jecxz
or
shl
and
xchg
inc
mov
cs
or
sbb
xchg
cmp
pop
bound
inc
inc
or
inc
jb
sbb
(bad)
xor
fisub
xchg
push
mov
sbb
add
cmp
jecxz
push
xchg
clc
inc
mov
push
and
(bad)
fcom
push
shl
mov
xchg
add
pusha
lods
mov
add
jo
in
cs
adc
enter
daa
inc
in
and
jne
(bad)
xchg
mov
mov
ret
dec
adc
inc
cmp
jle
xchg
nop
adc
mov
sbb
cmp
mov
dec
in
icebp
sub
jae
jne
mov
jle
fimul
mov
mov
fiadd
jbe
sbb
lods
cmp
and
fwait
or
sbb
je
xor
jo
dec
in
call
inc
push
clc
movs
adc
retf
inc
call
in
popf
sahf
lahf
in
in
add
in
test
in
mov
in
lea
in
jno
jae
in
in
jne
ja
in
in
jns
jnp
in
in
jge
jg
out
in
popa
(bad)
xlat
sbb
out
out
jo
sbb
xor
cmp
dec
int3
add
push
lock
jnp
mov
out
jmp
pop
mov
lea
push
lahf
push
cmc
or
xchg
lods
adc
out
aaa
les
and
cmp
cmp
in
sub
push
jle
loop
out
addr16
push
push
dec
mov
scas
call
in
mov
ds
test
push
inc
push
jb
movs
jb
in
xchg
add
nop
sub
aaa
mov
cmp
ds
xor
or
and
stos
xchg
add
aas
(bad)
jb
arpl
nop
(bad)
loopne
fidivr
or
pusha
xchg
test
std
mov
add
xor
sbb
jb
sub
xchg
jp
rcr
sub
(bad)
jp
pop
dec
test
mov
hlt
mov
pop
jo
push
xor
repnz
dec
clc
test
test
je
stc
int3
mov
pop
jmp
jmp
daa
mov
daa
jmp
imul
sub
lock
mov
add
jnp
ss
sbb
dec
jecxz
bound
add
(bad)
add
fcmovbe
test
mov
inc
in
in
cmps
mov
jbe
leave
dec
in
mov
fist
pop
ja
in
in
cwde
addr16
inc
out
push
int
outs
dec
repz
mov
dec
repz
add
popa
sbb
cli
icebp
or
dec
dec
pop
enter
push
fsubr
ret
mov
repnz
hlt
cmp
xchg
hlt
nop
inc
imul
jecxz
retf
js
movs
add
dec
inc
sub
adc
loop
jecxz
push
adc
adc
(bad)
push
daa
pop
sbb
xchg
cmp
mov
imul
push
rcl
mov
fsubr
shl
aam
cld
lahf
push
out
pop
hlt
inc
jecxz
or
cmp
push
div
fsubrp
mov
lds
adc
(bad)
nop
in
(bad)
out
push
fsubr
ds
push
adc
ins
fincstp
xor
int
aaa
aas
daa
push
push
(bad)
jns
mov
movs
(bad)
mov
cmp
jge
push
sbb
jo
adc
mov
jne
dec
push
push
xor
jae
fadd
mov
sbb
mov
dec
jne
inc
mov
push
aam
xchg
inc
inc
je
cld
sub
mov
sub
push
xlat
push
adc
add
mov
adc
pop
push
fwait
movs
push
loopne
cmp
in
(bad)
adc
xor
ins
xchg
xchg
in
fdivr
jmp
test
jmp
sbb
nop
mov
cld
lock
jmp
mov
mov
dec
ror
out
rol
dec
icebp
xor
dec
xlat
ret
push
add
inc
ss
repnz
rcr
dec
fcomp
ret
idiv
nop
cmp
das
movs
xchg
movs
push
daa
xchg
nop
clc
adc
in
jl
pusha
hlt
mov
(bad)
clc
and
fs
xchg
dec
cmp
outs
cdq
je
scas
popa
mov
cmp
adc
pop
xchg
mov
sbb
or
into
xor
inc
adc
call
(bad)
in
lock
ins
xchg
sar
mov
jecxz
jnp
xor
pop
ss
hlt
mov
dec
ficom
pusha
js
sbb
mov
mov
ins
fsubr
inc
call
add
sbb
sub
mov
enter
xchg
adc
cs
(bad)
sbb
in
jno
or
mov
fwait
sbb
push
cmp
daa
ss
jo
in
xchg
cmp
lods
addr16
or
(bad)
adc
pop
mov
ret
(bad)
jg
dec
adc
sbb
test
jne
std
pop
pop
fs
jmp
cs
dec
xor
cmp
jle
or
dec
pop
and
jns
lahf
fsub
or
xor
pop
jae
nop
cmp
cmp
inc
add
xor
jbe
pop
jecxz
sbb
mov
jne
pop
and
cmps
push
push
in
adc
or
xchg
mov
inc
loopne
mov
add
jl
adc
sbb
push
xchg
pop
in
outs
sbb
push
mov
dec
and
in
mov
jmp
add
enter
or
je
jmp
cmp
sbb
test
inc
and
adc
pop
cmc
mov
shl
mov
and
dec
sbb
push
sub
push
ins
add
jb
das
adc
mov
cmps
sbb
sbb
lahf
out
das
pop
dec
push
or
stos
mov
push
dec
inc
push
mov
or
sbb
pop
sbb
call
or
bndstx
jmp
fistp
push
add
ss
xchg
push
mov
mov
xchg
push
pusha
clc
mov
cmp
movs
out
or
in
adc
dec
and
dec
sub
jmp
clc
int
lock
jmp
sub
aas
add
dec
push
add
add
and
es
or
lea
pop
(bad)
jle
add
call
or
add
ds
pop
in
push
push
adc
(bad)
inc
cmp
retf
or
(bad)
or
in
mov
call
(bad)
out
mov
dec
adc
or
gs
jo
out
adc
dec
mov
fist
cwde
push
push
xor
hlt
or
or
in
movs
nop
xchg
xchg
mul
push
mov
add
mov
jb
mov
mov
in
pop
add
push
loopne
pmulhuw
xchg
cmc
mov
dec
xor
mov
outs
pop
push
ins
shl
xor
xor
mov
jle
je
push
mov
or
jne
arpl
pop
aaa
(bad)
jge
jne
mov
sbb
pop
outs
sub
dec
inc
sub
push
bound
inc
inc
cmc
aas
xchg
dec
jnp
lahf
sub
pop
pop
pop
xchg
and
(bad)
ins
movs
add
xlat
add
mov
dec
mov
fist
jl
sub
jne
xchg
inc
(bad)
jg
pop
jno
out
push
out
jmp
nop
push
add
add
mov
loopne
loop
sbb
xchg
test
lods
pop
xor
mov
icebp
cmps
dec
xor
cmp
cmp
in
mov
jecxz
push
inc
cmp
call
xlat
ror
(bad)
xor
in
aaa
(bad)
fcomp
stos
ss
push
nop
dec
aam
(bad)
dec
loopne
jne
jmp
data16
loopne
inc
push
push
pop
loopne
pop
xor
jno
test
lds
cmps
out
je
adc
mov
adc
and
jp
shl
sub
nop
data16
add
adc
adc
mov
aad
std
lods
adc
adc
push
test
pop
dec
xor
adc
add
call
clc
sti
push
inc
cld
call
or
push
mov
into
ror
cmp
xchg
mov
pop
inc
pop
out
stos
mov
test
push
nop
hlt
outs
test
shl
pop
ins
inc
jo
test
loope
sbb
das
ja
sub
mov
ja
sub
(bad)
mov
push
rol
iret
push
iret
(bad)
pusha
idiv
or
mov
mov
mov
setnp
dec
clc
(bad)
jge
sub
dec
add
and
dec
cmps
out
mov
les
dec
(bad)
mov
mov
ins
mov
lds
sub
out
add
dec
loopne
push
mov
pop
pop
add
add
pop
call
retf
jmp
cmp
rol
call
mov
aaa
and
repnz
lahf
or
or
mov
imul
enter
das
or
cmp
mov
and
sbb
sbb
or
pop
push
mov
rol
jne
sti
dec
cmp
push
dec
in
ret
add
in
outs
shl
rol
add
cmp
push
adc
sbb
sub
xchg
outs
outs
xchg
sti
inc
or
repnz
pop
(bad)
and
xchg
cwde
test
mov
inc
cmp
or
scas
dec
push
push
adc
push
cmovs
ret
inc
pop
xchg
cld
push
ins
add
mul
movs
or
xchg
cmps
adc
in
aam
cmps
jge
mov
in
int3
add
push
paddb
jns
sbb
add
jge
sbb
sti
inc
shr
sbb
xchg
in
data16
xchg
aam
inc
push
fild
arpl
or
aam
sahf
daa
popa
and
adc
xor
cmp
jae
lahf
fdivr
out
xchg
les
lahf
loopne
dec
ret
and
stos
jmp
(bad)
arpl
jg
aad
cmp
rcr
adc
out
call
or
jl
add
sub
and
out
movs
inc
mov
inc
int3
jo
dec
mov
jge
cld
movs
ja
fcomp
enterw
je
popf
clc
call
pop
lock
fnstsw
inc
jnp
(bad)
adc
jnp
sub
mov
cmp
pusha
in
pop
fmul
daa
inc
(bad)
addr16
dec
inc
xchg
setno
cwde
cdq
xor
jge
add
out
sahf
out
push
sub
push
ins
push
in
add
shl
in
adc
cmc
sub
frstor
push
sahf
and
test
push
popf
rcl
jns
repz
mov
je
sbb
mov
aaa
das
dec
cmp
xor
das
sbb
dec
dec
add
jl
imul
lods
(bad)
(bad)
ror
xchg
sbb
xor
test
icebp
inc
(bad)
pop
or
adc
inc
jl
jno
push
rcr
add
call
mov
rol
and
shr
add
jb
and
jg
inc
inc
pop
in
cmp
jb
pusha
rol
sbb
enter
cmp
or
ret
mov
jle
pop
adc
xchg
hlt
jge
or
dec
add
daa
mov
pop
in
mov
and
addr16
add
pop
mov
lods
adc
mov
or
not
mov
pop
jge
ffree
and
inc
aas
in
mov
nop
ins
aas
inc
xchg
call
cs
or
dec
push
dec
push
dec
pop
push
dec
or
mov
les
adc
dec
or
jae
inc
push
mov
cdq
pushf
cmp
add
jo
jg
inc
push
(bad)
fld
or
gs
imul
pop
or
add
es
push
movs
gs
ins
hlt
xchg
out
imul
ins
sti
ja
adc
gs
outs
xor
jne
xor
mov
or
sub
adc
cmp
aas
cwde
outs
pop
dec
pop
pop
sbb
pushf
or
add
or
pop
inc
inc
push
cmp
and
inc
fcomp
mov
cld
add
sbb
aam
imul
lods
sbb
or
or
sbb
jb
lock
call
pusha
ret
addr16
gs
add
dec
outs
push
test
gs
je
cs
pop
add
push
adc
xchg
jae
pop
or
add
mov
in
out
mov
mov
mov
mov
xor
pop
arpl
inc
adc
jmp
and
and
jg
dec
sbb
scas
scas
sar
xchg
sub
(bad)
adc
outs
adc
mov
addr16
stos
shr
inc
cmp
in
icebp
pop
(bad)
es
nop
mov
jne
push
or
frndint
or
jnp
mov
stos
pop
push
and
pushf
pushf
pushf
fmul
adc
add
inc
sahf
pushf
add
pop
clc
hlt
dec
dec
dec
dec
lock
call
dec
loopne
fcom
fisttp
dec
ror
cmp
xor
cmp
mov
and
and
and
push
aam
nop
ja
into
adc
ret
inc
leave
(bad)
dec
imul
add
and
inc
jb
pop
dec
cmp
add
push
inc
ins
xlat
jmp
outs
ins
mov
ja
clc
stos
or
je
shr
pop
xor
push
mov
add
imul
xchg
or
inc
imul
gs
add
pop
jmp
fstp
nop
adc
dec
add
fadd
inc
fdivr
pop
sahf
cmps
dec
outs
ins
jns
xchg
scas
shr
ja
dec
hlt
and
ss
push
jae
aam
mov
inc
sahf
ins
or
ss
fidivr
imul
pop
pop
xchg
push
or
push
shr
(bad)
adc
shl
dec
or
mov
js
add
or
push
sahf
pop
nop
or
aaa
psrld
jmp
sbb
fimul
jns
fdiv
jae
mov
leave
outs
cmc
inc
jne
xor
(bad)
or
imul
push
push
fsub
xchg
jmp
adc
loope
int
inc
ds
jne
inc
mov
push
mov
stos
and
clc
pop
push
inc
or
stc
pop
and
add
ds
data16
xchg
pop
pop
mov
sti
sub
outs
mov
scas
cmps
pusha
mov
ds
or
pop
jb
or
ds
dec
and
or
in
jge
inc
fs
fs
or
pop
in
mov
mov
scas
mov
push
inc
and
inc
sub
mov
or
ds
or
mov
sar
out
mov
data16
iret
int3
jo
jb
scas
int3
inc
mov
jb
int3
jae
and
rcl
pusha
pop
push
inc
jnp
loopne
imul
mov
test
inc
int
add
adc
fsub
push
repnz
rcr
cmp
mov
shl
das
adc
sub
sbb
jle
mov
lods
adc
jl
mov
xor
dec
cmp
push
dec
inc
mov
jo
mov
add
verw
stos
jne
and
les
cmps
mov
bswap
fnstsw
outs
dec
dec
or
dec
mov
add
dec
mov
jae
test
cwde
add
add
fs
in
mov
in
fdivr
cmp
jb
cmp
xor
pop
fucomi
leave
ins
dec
cmp
pushf
(bad)
or
add
xchg
jl
(bad)
cmp
enter
(bad)
lock
mov
int
xlat
push
loope
dec
jns
out
push
pop
gs
jne
jns
out
test
jns
movs
lods
mov
(bad)
or
and
(bad)
std
test
push
cmp
add
je
adc
jl
adc
mov
mov
adc
ds
sub
mov
pop
cmps
test
fs
jb
rep
jecxz
add
push
les
cmp
dec
push
outs
js
popa
fsub
(bad)
shl
or
jo
or
iret
mov
mov
out
idiv
inc
cld
adc
int3
int3
test
test
cs
and
xlat
test
(bad)
pop
push
test
ja
or
xchg
xchg
adc
movs
sbb
loop
add
push
pop
add
pop
xchg
pop
adc
adc
add
cmp
nop
cld
inc
sub
aaa
in
inc
adc
sbb
sub
addr16
add
loop
ins
mov
push
rcl
lods
push
adc
test
outs
ins
mov
into
dec
ds
stos
pusha
push
sub
add
fcomp
adc
push
add
sbb
cmp
jbe
push
pop
push
push
js
mov
pop
push
pop
pop
in
add
call
sti
stos
mov
enter
pop
xor
pop
add
adc
out
pop
fwait
rcr
mov
mov
adc
push
daa
jl
pop
(bad)
jne
adc
dec
fs
push
inc
adc
push
mov
jns
or
mov
dec
mov
inc
fs
jo
mov
xor
pushf
jae
push
rcl
sahf
cmps
cmp
cs
cmp
sbb
adc
push
pop
in
lds
inc
pop
mov
jno
enter
inc
pop
adc
ds
je
xchg
pushf
push
pusha
ins
call
outs
cmps
jno
sbb
fdivp
jbe
push
loopne
pop
pop
xchg
pusha
xchg
and
je
push
push
(bad)
aaa
clc
out
sub
pop
push
mov
ins
aas
fdiv
add
adc
or
je
(bad)
sbb
ret
push
sbb
mul
(bad)
lods
aas
push
pop
pop
inc
cmp
xor
fisttp
shl
ja
inc
ja
lock
add
cmp
jl
push
jae
jae
je
cmp
sbb
in
xor
fwait
bound
js
hlt
xchg
jbe
daa
pushf
mov
sar
push
xor
rcr
push
ja
pop
mov
leave
xbeginw
inc
jge
jge
jle
cld
shl
jbe
pop
push
ja
das
icebp
jmp
sbb
call
or
xor
lock
cmps
push
dec
test
daa
mov
mov
dec
adc
leave
xchg
mov
mov
out
in
or
or
push
fiadd
movs
sub
inc
sbb
sbb
mov
call
sbb
pusha
test
test
inc
xor
int
test
loopne
fdivrp
jns
leave
mov
mov
imul
cmp
xor
sbb
daa
push
jns
ror
mov
out
inc
add
pushf
mov
sub
les
push
or
pop
dec
and
pop
ror
mov
push
call
pop
jb
xchg
in
or
or
and
jb
adc
jb
pop
jb
and
sub
pop
sub
inc
stos
mov
adc
mov
sbb
imul
sbb
or
out
push
sub
inc
push
popa
pop
pop
add
jg
jbe
mov
cs
es
sbb
and
test
sbb
imul
sub
push
ds
sar
jecxz
in
or
adc
loopne
lods
push
sbb
cmp
or
lock
xor
push
and
imul
add
nop
sbb
lods
pusha
data16
push
and
pop
or
sbb
inc
(bad)
int
dec
add
loopne
adc
vmread
ins
fprem1
stos
aas
sbb
dec
pop
lea
xlat
sbb
jo
aaa
push
fadd
add
mov
mov
fist
es
jl
pop
fimul
dec
xchg
enter
sahf
data16
nop
cdq
adc
and
fs
cmc
sub
adc
ins
push
and
cdq
jmp
rol
inc
xlat
js
or
rcr
mov
outs
fs
sbb
mov
pop
fisttp
add
mov
sub
test
sar
cmp
ds
or
xor
clc
and
dec
pusha
add
xchg
xor
mov
pop
call
ror
mov
movs
es
(bad)
fcom
sbb
les
hlt
inc
aam
fbld
pop
aam
hlt
int3
popa
or
sahf
out
push
jns
adc
call
test
or
out
test
mul
mov
lock
xor
sub
lahf
sbb
inc
int3
into
inc
sub
mov
ror
push
adc
sbb
jnp
push
jbe
push
les
js
int3
int
dec
mov
mov
aas
add
sar
jg
(bad)
stc
(bad)
clc
push
push
push
push
push
push
data16
push
jmp
mov
test
or
dec
in
push
fild
je
cwde
mov
mov
(bad)
push
cmp
push
nop
push
in
or
nop
xlat
pop
and
adc
mov
sbb
gs
(bad)
and
xor
pop
ja
pop
add
addr16
adc
(bad)
(bad)
and
xlat
adc
mov
jns
sar
dec
test
push
adc
(bad)
inc
push
arpl
jl
push
(bad)
sub
mov
pop
je
jl
push
sbb
nop
push
jb
mov
(bad)
ins
cmps
aam
push
cld
fld
into
repz
rcl
call
or
shl
pop
push
aaa
pop
sub
xor
jnp
xor
push
imul
lods
(bad)
and
pushf
or
cmps
mov
sbb
adc
jmp
pop
jmp
in
pop
xor
pop
call
xchg
mov
mov
jmp
cmp
or
ins
gs
pop
and
push
pop
bound
push
push
rcl
dec
ins
fs
dec
jb
enter
int3
or
push
inc
test
dec
outs
dec
inc
dec
dec
and
repz
or
lods
add
cwde
adc
fimul
bound
sub
jns
push
and
add
sub
push
scas
adc
push
push
dec
inc
sub
xor
push
rcr
nop
push
imul
adc
inc
pusha
wrmsr
and
pop
ds
popa
adc
inc
daa
xor
sub
scas
mov
and
add
sub
shl
dec
dec
jo
jmp
test
sub
mov
cmps
movs
mov
dec
inc
mov
inc
fwait
rol
pop
add
adc
xchg
icebp
adc
je
jge
mov
mov
push
dec
cli
rcl
cmps
adc
sbb
cmp
jnp
sub
mov
sub
jbe
cmps
xor
daa
call
add
mov
movntps
fwait
popa
dec
or
sbb
lds
cwde
lods
adc
mov
push
inc
add
mov
stc
and
or
inc
dec
movnti
in
scas
mov
mov
add
push
or
cmp
lds
mov
xor
add
push
sbb
aaa
mov
fsubr
cmp
jecxz
push
sub
lock
inc
or
cmp
int
in
daa
add
lds
or
lods
adc
or
adc
push
or
mov
sbb
shl
mov
pop
xchg
sub
push
mov
(bad)
sub
or
mov
scas
sub
mov
mov
xchg
sbb
sar
cs
popf
jg
sub
push
fcom
add
pop
scas
and
ret
stos
mov
cmps
mov
lock
sbb
sub
mov
cli
iret
cmp
mov
test
fidiv
adc
int
sti
cmp
inc
mov
dec
xchg
je
mov
and
jae
(bad)
pop
dec
adc
or
and
lock
hlt
pop
clc
sti
rcl
sbb
in
mov
push
outs
or
rcl
push
xchg
stos
dec
stc
loope
mov
xor
addr16
stos
inc
in
enter
jle
outs
xchg
add
hlt
mov
add
pop
enter
shr
loope
scas
or
imul
shl
call
sbb
je
cmp
rcr
push
inc
mov
pop
cwde
adc
cmp
pop
or
or
xchg
imul
shrd
scas
xor
sub
scas
inc
(bad)
and
clc
add
repnz
(bad)
mov
push
pusha
add
sbb
les
dec
stc
cmp
jnp
inc
rol
sbb
pop
push
sbb
mov
ret
ins
lock
adc
mov
sub
fsub
clc
mov
in
xor
xor
paddsb
je
ds
loopne
call
loopne
sbb
xor
lock
aad
sbb
sbb
xchg
int3
add
loopne
inc
stos
loop
daa
dec
fwait
in
cvtps2pi
fist
cmp
dec
das
adc
scas
xor
ret
fstp
jo
mov
pop
pop
inc
sub
lods
sbb
xchg
cdq
nop
ficom
lock
bound
add
popf
add
and
fistp
popa
push
arpl
fst
and
adc
loop
xchg
and
push
dec
imul
jae
sub
(bad)
sbb
push
or
(bad)
lock
pop
add
inc
mov
dec
aaa
jecxz
push
add
xor
inc
xor
pop
adc
inc
inc
xor
push
lock
icebp
mov
in
imul
add
dec
mov
cmps
xor
and
cmp
into
aas
mov
inc
mov
or
and
mov
add
movs
cmps
les
or
sbb
in
xor
aas
lock
std
je
loopne
pop
xchg
adc
in
int3
push
dec
and
shl
or
enter
adc
loopne
test
xor
and
mov
jo
and
movs
inc
push
lock
add
cmps
dec
jns
push
xor
mov
xor
cli
inc
pop
or
addr16
inc
test
and
add
xor
dec
scas
loopne
and
push
sbb
pushf
aam
shl
fmul
jb
inc
xlat
inc
dec
scas
cmc
sub
dec
test
test
movs
icebp
dec
js
mov
dec
push
jns
mov
xchg
lock
add
xor
push
mov
js
sub
xchg
lock
and
ret
mov
lahf
or
push
mov
adc
xlat
dec
jb
test
sbb
sbb
iret
add
dec
cmp
add
sbb
enter
cmp
add
ret
fwait
sbb
fxrstor
sub
push
je
cmp
adc
repz
or
adc
or
and
push
dec
mov
inc
and
xor
pop
ins
jmp
lods
je
enter
ss
mov
add
jo
adc
popa
ja
pop
sub
inc
cmps
shl
pop
ret
xor
cmp
or
add
sbb
neg
rol
pop
outs
and
push
add
cmp
test
lea
in
add
add
cmp
int
sar
mov
push
retf
fcom
push
cmp
cmp
scas
dec
sbb
dec
lods
fld
sbb
xchg
rol
popa
and
xchg
dec
inc
sub
xchg
xchg
jno
je
shl
adc
pop
or
fidiv
add
mov
out
in
add
sbb
adc
mov
xchg
sub
fsubr
push
sub
and
and
aad
in
sar
inc
pop
xor
push
mov
xlat
bound
push
icebp
mov
frstor
sbb
sbb
outs
sub
test
push
sbb
leave
mov
dec
arpl
xchg
push
inc
push
lds
add
data16
push
outs
nop
dec
sbb
pop
inc
pop
sbb
sub
inc
pop
push
push
mov
iret
shr
or
mov
mov
sub
std
mov
push
pushf
cld
and
call
pop
lea
dec
and
mov
sbb
pop
retf
adc
test
adc
or
sbb
ret
hlt
hlt
pop
cmp
ror
dec
and
popa
popa
clc
ins
ret
xor
setb
cmc
clc
fsubr
mov
dec
(bad)
xor
push
popa
pop
lods
or
mov
pop
mov
xchg
ret
test
or
(bad)
cmp
xor
pop
xor
fmul
nop
cmp
fnsave
xchg
sbb
and
sub
cmp
jp
add
aaa
add
cwde
enter
(bad)
push
mov
not
xchg
add
xor
xchg
das
dec
iret
aas
and
adc
movs
xchg
inc
or
stos
aad
dec
cmps
pop
or
fist
or
pop
pop
iret
mov
dec
loope
adc
cwde
push
or
add
push
out
mov
out
mov
add
pop
(bad)
add
mov
imul
clc
arpl
stos
jne
jmp
mov
lods
(bad)
mov
dec
or
sub
sub
sahf
and
clc
enter
pop
sahf
nop
addr16
fcomp
pop
pop
inc
cwde
or
or
rcl
add
push
cdq
scas
push
jmp
icebp
push
sub
xor
push
mov
div
aad
xchg
lods
xor
adc
sbb
dec
stc
shr
cmp
pop
push
dec
inc
or
sub
xchg
hlt
hlt
imul
and
cmp
gs
mov
mov
lds
clc
cmp
mov
push
mov
jno
shl
inc
jle
adc
adc
pop
in
jmp
cmp
jle
(bad)
mov
or
inc
add
add
adc
sbb
mov
gs
pop
loope
and
scas
jmp
ffreep
xor
jle
imul
nop
add
test
cwde
pop
ja
hlt
mov
iret
sbb
pusha
lods
or
mov
addr16
retf
outs
and
cmp
push
inc
test
std
xor
mov
sbb
cwde
dec
(bad)
ins
pop
xor
sbb
lock
lods
bound
or
mov
jg
shl
dec
or
ror
lods
xor
(bad)
out
push
mov
add
pop
mov
fwait
dec
or
test
sbb
jnp
add
or
mov
jg
lods
pop
xor
xlat
xchg
jp
retf
and
int
inc
dec
cld
sub
add
and
dec
jmp
or
mov
jg
dec
fwait
adc
pop
nop
cmp
jne
sub
xchg
jle
dec
aam
scas
add
call
sbb
pop
pop
xchg
mov
dec
cmp
inc
das
in
arpl
sar
jg
sbb
push
mov
shl
sbb
pop
and
je
test
outs
jle
xor
jge
jecxz
cld
adc
in
xor
cmp
pop
add
mov
inc
sub
and
sbb
add
pop
xor
mov
call
sbb
or
adc
dec
dec
jg
push
enter
add
rol
pushf
dec
lock
es
push
or
adc
out
mov
mov
pop
inc
in
inc
div
pusha
add
add
std
fcmove
inc
push
and
pop
jmp
shl
sahf
push
add
retf
fist
dec
enter
adc
or
xchg
mov
add
cmp
add
mov
inc
jb
pop
cmps
outs
jno
jmp
scas
(bad)
xor
loope
rol
jne
cmp
out
ror
jns
and
loope
pop
jbe
hlt
sbb
ret
clc
in
inc
loop
dec
stos
pop
jmp
jecxz
ja
enter
xchg
(bad)
ins
or
adc
jb
or
sbb
adc
mov
jg
sbb
in
out
(bad)
sbb
mov
scas
push
outs
dec
scas
mov
pop
lea
mov
push
and
scas
lock
mov
inc
sbb
pusha
inc
dec
push
cmp
inc
or
shr
sbb
mov
das
dec
nop
add
or
dec
mov
xchg
lock
xchg
sub
adc
fucomp
sbb
sar
cmp
adc
(bad)
test
ror
dec
in
popa
push
xor
jne
leave
test
and
das
xor
rcr
ror
movs
in
jo
push
enter
mov
scas
add
dec
int
inc
shr
arpl
dec
mov
enter
fadd
jb
loop
sbb
iret
push
jno
cmp
pop
cmp
xor
hlt
and
pop
cmp
leave
add
add
pop
(bad)
pusha
imul
sub
or
icebp
pop
pop
inc
sbb
(bad)
jno
adc
xchg
loopne
cmp
leave
or
nop
cmps
or
mov
lods
xor
or
or
dec
std
bound
push
jne
sub
inc
clc
and
dec
pop
pop
sar
pop
sub
xor
pushf
jae
arpl
or
es
xor
sbb
ins
daa
test
and
or
add
fadd
xchg
sbb
sbb
jns
add
cmp
loopne
push
add
cmovs
leave
je
adc
btr
cmp
jl
inc
int
sub
test
jmp
out
jo
fsubr
xor
ret
in
test
push
xor
nop
je
daa
(bad)
mov
xchg
sti
dec
push
dec
lock
addr16
or
add
loope
add
(bad)
jl
test
push
sbb
aaa
les
jne
shl
xchg
and
test
dec
adc
and
addr16
rol
or
jle
arpl
and
dec
mov
add
mov
cs
add
mov
or
call
or
pop
or
mov
dec
loopne
shl
dec
and
adc
outs
imul
in
bound
xchg
and
mov
push
inc
or
and
shl
cmp
movs
mov
xchg
push
(bad)
ja
jmp
inc
dec
add
mov
test
jp
mov
pavgb
add
pop
push
push
pop
add
inc
jno
cmp
adc
cdq
js
jns
lock
jne
add
pop
sub
addr16
inc
or
jmp
dec
aaa
or
xor
jbe
pop
or
cmp
rcr
ins
xchg
cmp
add
pop
movs
ret
push
fsubr
sbb
mov
inc
sbb
or
ja
movs
mov
mov
gs
test
je
jnp
push
inc
sti
add
sub
enter
shr
mov
aam
mov
add
loopne
or
mov
push
nop
ins
push
mov
ret
xchg
or
call
rol
mov
adc
mov
fs
or
inc
sub
out
and
addr16
stos
and
lds
mov
test
sub
jg
mov
dec
test
mov
clc
es
in
jp
mov
xchg
or
and
inc
retf
or
sbb
loope
mov
je
or
or
mov
xchg
sub
push
pop
jb
add
nop
retf
mov
scas
jg
sub
jae
and
sbb
xchg
(bad)
sub
inc
or
loopne
or
sbb
fwait
inc
sub
mov
imul
push
jne
cmps
mov
lods
mov
xchg
xchg
xor
or
pop
xchg
add
in
mov
mov
mov
or
inc
mov
xor
sub
add
sub
sub
inc
icebp
add
cmps
pop
call
sub
adc
mov
int3
shl
adc
push
and
dec
cmp
xchg
mov
cmp
push
inc
sub
jmp
xor
(bad)
inc
pusha
loop
pop
or
and
shl
mov
cmc
test
fidivr
or
push
xchg
lea
fst
adc
adc
cmps
cmp
jg
jo
or
xchg
push
dec
daa
ret
push
das
dec
or
aas
pop
int3
inc
bound
clc
sbb
aas
cmp
aaa
pop
test
popa
cmovge
call
mov
ret
arpl
lock
cmc
add
test
lock
mov
xor
dec
sbb
sbb
push
lock
cmp
je
lock
adc
pop
loopne
or
add
lea
adc
xchg
push
jecxz
sbb
xor
pusha
or
pop
sahf
mov
xchg
pop
in
leave
in
data16
cmp
movs
mov
(bad)
xor
pop
outs
mov
add
sbb
push
arpl
push
lock
retf
out
aad
loopne
add
fld
jne
das
xchg
jg
sub
adc
jno
and
pop
lods
pop
aaa
cmp
jbe
xor
xor
or
loope
ja
push
add
aad
mov
adc
sub
xchg
mov
sub
movs
aam
pop
stos
xchg
out
adc
or
and
sbb
adc
outs
or
mov
mov
(bad)
push
dec
add
lock
inc
xchg
pop
pop
adc
retf
pop
shr
push
aaa
push
xor
shl
sti
pop
add
pop
or
(bad)
cli
test
add
shl
je
jo
repz
iret
push
sub
ret
int3
les
in
or
les
xchg
adc
sub
sub
cmc
sbb
mov
mov
jmp
out
add
or
cmp
mov
lods
cmp
and
lock
pop
dec
inc
sub
cmp
cli
cmp
hlt
sub
jne
or
sbb
sbb
xor
mov
pop
cmp
aad
push
inc
loope
adc
cwde
cmp
push
add
mov
loopne
popf
adc
pop
rol
inc
xchg
imul
mov
push
jb
pop
ds
pop
pop
push
push
adc
add
xchg
movs
in
pop
mov
dec
adc
jg
or
mov
in
mov
and
outs
jecxz
dec
loopne
cmp
mov
das
push
and
or
xor
shr
stos
add
push
jecxz
cmps
lahf
pop
in
fadd
test
iret
sub
push
push
test
push
ds
fs
pop
cmp
pop
and
jp
call
add
adc
mov
mov
fdivr
xchg
stos
in
cmps
leave
clc
jmp
adc
add
sbb
mov
dec
out
fist
xchg
inc
arpl
mov
enter
or
loope
scas
jbe
pop
and
enter
fdiv
nop
push
xchg
lock
push
or
lea
mov
add
inc
cmc
push
push
sub
arpl
inc
clc
mov
add
push
mov
push
jbe
aaa
sbb
xor
xlat
mov
das
(bad)
jecxz
push
outs
xchg
lods
lahf
aaa
mov
pop
popa
jnp
ss
and
or
adc
add
mov
add
sub
popa
cmove
pop
inc
cmp
inc
xchg
push
or
adc
jmp
fld
in
bound
pop
dec
mov
mov
mov
nop
cmp
jo
repnz
dec
mov
xor
test
xchg
or
div
and
cmp
sahf
inc
push
aam
mov
mov
adc
and
sbb
addr16
add
jecxz
hlt
adc
enter
in
dec
rcr
hlt
mov
or
sbb
popa
jge
inc
sti
lock
mov
or
xchg
popa
frstor
daa
inc
daa
pusha
pushf
fadd
aas
dec
pop
xchg
sbb
adc
sub
push
or
dec
mov
and
or
xchg
pop
nop
xchg
add
fidiv
enter
fwait
movs
aaa
xor
mov
jne
cmc
xor
pop
or
or
int
add
lock
fcmovnu
xor
and
inc
movs
pop
mov
nop
test
add
mov
mov
sub
inc
mov
mov
rol
pushf
sub
scas
fld
inc
xchg
xchg
gs
aam
xchg
cmp
aam
fdivr
add
test
out
jb
cmp
shl
push
pop
ficom
fcom
fadd
fadd
hlt
loopne
mov
rcl
inc
push
cmp
mov
sbb
sbb
cmp
push
or
fld
inc
inc
scas
(bad)
mov
dec
fmul
add
mov
add
xchg
mov
add
lods
add
and
mov
pop
xor
in
or
and
imul
rcl
pop
xor
outs
fisttp
in
bswap
and
stos
loop
call
fadd
add
in
jbe
jecxz
bound
xchg
push
add
cmp
aas
push
enter
sbb
mov
in
sub
pop
or
mov
loopne
and
call
sbb
sbb
inc
movs
lods
daa
sub
xchg
xlat
stos
and
loope
xchg
jge
test
sbb
adc
dec
or
or
and
mov
xchg
sub
pop
imul
ins
sub
add
add
push
and
jne
imul
imul
xchg
sbb
add
test
sbb
aas
pop
cs
sub
sbb
fsubr
lock
call
lea
and
scas
adc
test
scas
nop
inc
xor
push
push
test
push
addr16
cmp
stc
cmp
(bad)
stos
xlat
pop
imul
add
xchg
imul
xlat
mov
mov
imul
test
jmp
cmp
inc
push
mov
std
jbe
int
sbb
loopne
or
push
leave
or
cmp
nop
xchg
imul
dec
js
pop
push
ins
movs
jge
add
sub
jg
ins
das
ror
lss
dec
mov
xchg
and
xor
jne
push
or
adc
int
mov
ret
or
test
in
or
push
dec
inc
push
adc
aaa
ins
and
add
stos
mov
ret
pop
add
mov
mov
outs
sub
sti
ins
dec
sbb
cwde
mov
pop
jmp
sbb
sub
xchg
sbb
call
lock
leave
fstp
jle
in
rep
cmp
jne
push
xchg
mov
or
adc
add
(bad)
test
rol
sbb
test
ror
retf
es
ins
mov
adc
add
in
or
shl
xor
jmp
popa
nop
xlat
(bad)
or
or
movs
in
in
outs
popa
xchg
pop
test
xlat
and
or
xlat
daa
sub
mov
shr
add
pop
sbb
enter
ja
push
iret
jo
cwde
cmp
(bad)
hlt
hlt
ja
sub
sbb
call
pusha
test
or
cmp
jne
adc
movs
cdq
or
cmp
and
jbe
add
add
mov
test
adc
or
push
popa
adc
test
ret
jo
xor
and
jo
not
test
cmps
int3
mov
sar
cmps
nop
je
push
push
(bad)
adc
add
xchg
cmp
pop
out
mov
add
push
xor
inc
(bad)
add
jo
inc
outs
add
pop
and
pop
or
enter
add
push
test
aas
leave
mov
mov
mov
sub
pop
icebp
xchg
jo
cmp
add
mov
leave
(bad)
ficom
and
pop
adc
fcom
cmp
jecxz
push
retf
jmp
adc
adc
outs
pop
dec
xor
dec
sub
mov
inc
cmp
xor
ret
cmp
sbb
addr16
mov
and
ins
mov
and
add
xor
popa
(bad)
(bad)
cmp
pop
lock
inc
aas
or
hlt
loope
call
pop
fnstenv
pusha
outs
mov
sbb
ret
movs
sub
aas
jo
mov
stc
lea
and
mov
mov
sbb
push
dec
push
adc
adc
in
arpl
les
dec
sbb
dec
or
inc
cmps
lea
imul
pop
rcl
lock
leave
pop
mov
add
or
aas
gs
add
sbb
pop
retf
hlt
sahf
push
jo
repz
ds
add
inc
ins
pop
or
xor
cmp
add
inc
sub
or
adc
call
nop
in
call
add
retf
fld
jmp
test
xchg
jp
adc
sbb
push
jle
loope
pop
pop
retf
mov
pop
nop
inc
enter
repz
retf
xor
lods
sbb
ror
sbb
adc
cs
inc
or
stos
mov
xchg
push
xchg
leave
mov
cmps
sbb
shl
pop
sbb
cdq
sbb
sub
pop
leave
adc
jno
push
in
sbb
hlt
jmp
pop
push
sbb
daa
push
icebp
add
add
out
je
sbb
repnz
enter
sbb
add
mov
fwait
aaa
push
jmp
mov
mov
sub
ror
dec
xchg
cmp
or
dec
lods
imul
mov
scas
or
mov
je
push
mov
mov
cmp
call
xor
(bad)
pusha
add
sub
xchg
shl
dec
pop
jmp
call
pop
cld
bnd
sub
in
sub
out
xor
bound
add
call
or
push
pop
in
jne
pop
push
add
test
jmp
inc
inc
es
push
push
imul
adc
add
sbb
inc
inc
or
sbb
sbb
or
aaa
loop
popa
fs
sbb
das
sbb
pop
or
mov
das
or
mov
mov
clc
popf
and
pop
scas
mov
ret
xchg
xchg
xchg
or
xor
add
sbb
sub
loop
jno
lds
sbb
xor
bound
push
cmp
sbb
inc
push
je
jge
adc
xor
mov
inc
mov
pop
xchg
xchg
sbb
aaa
and
sbb
fcomp
sub
call
pop
adc
add
xchg
call
xchg
mov
aas
jmp
shl
dec
jge
mov
pop
adc
inc
movs
test
(bad)
pop
adc
mov
ror
add
lods
xlat
push
add
add
inc
cmp
push
and
adc
sub
xchg
sbb
xlat
or
dec
sbb
sbb
jle
test
in
aam
pop
sub
jo
jnp
rol
cmp
push
hlt
loop
call
or
dec
imul
xor
mov
or
or
cdq
arpl
outs
add
sub
jae
pop
sbb
pop
adc
fwait
ror
(bad)
repnz
mov
sbb
pop
test
shr
inc
pop
push
pusha
push
mov
adc
cmp
or
movs
add
jbe
movs
dec
and
jmp
or
adc
mov
or
inc
inc
xor
add
add
jbe
add
mov
call
lods
popa
sbb
sub
retf
add
sbb
scas
clc
movs
jo
sub
or
aas
cmps
sbb
nop
sbb
or
xchg
mov
lods
jae
and
hlt
jmp
mov
daa
les
pop
adc
pop
nop
jbe
arpl
ret
outs
jmp
imul
stos
lods
xchg
inc
outs
adc
movs
or
shl
push
leave
mov
or
scas
lahf
push
mov
cmps
in
inc
inc
dec
fldcw
cmps
sub
sbb
xchg
xor
pop
popw
loope
adc
inc
sub
mov
xor
aam
jmp
ins
xor
std
les
cmp
outs
xchg
or
mov
jo
mov
jae
pop
jge
out
mov
ret
sbb
bound
shr
retf
popa
fwait
ins
pusha
fdiv
cmp
xchg
mov
into
and
jmp
sbb
adc
and
xchg
jge
(bad)
fcomp
jmp
pushf
dec
aam
int3
nop
cwde
mov
popa
retf
leave
add
aam
add
les
sbb
sub
inc
daa
lahf
mov
(bad)
mov
aam
or
or
or
push
fld
inc
retf
add
pop
and
and
mov
add
pusha
push
mov
add
sub
shl
(bad)
pop
data16
cwde
call
arpl
mov
dec
es
push
je
adc
call
sbb
add
retf
iret
xor
dec
and
and
outs
clc
push
jb
stos
test
adc
test
enter
jne
sub
cmp
and
mov
(bad)
ffreep
or
xlat
hlt
inc
sub
mov
aam
add
daa
outs
pop
or
or
adc
mov
daa
cmp
cwde
mov
sbb
push
inc
icebp
pop
and
xor
pop
leave
nop
xlat
div
or
test
push
mov
pop
rcl
xor
jle
popa
loopne
movs
inc
aaa
sbb
out
add
and
jnp
gs
push
adc
jne
(bad)
ffreep
mov
pop
shl
ficom
xor
aas
adc
jle
xlat
jp
gs
sbb
xor
in
inc
mov
in
das
mov
fisttp
inc
sbb
inc
push
inc
jp
inc
xchg
sbb
sub
cmps
loope
in
jg
cmp
cmps
add
add
outs
aas
or
jge
inc
sub
cmps
cmps
push
and
fwait
jge
pop
dec
pop
add
pop
pop
inc
js
pop
out
inc
mov
ins
add
mov
cmp
cmc
or
mov
imul
xor
scas
lea
mov
push
add
add
pop
adc
ret
sub
xor
and
mov
mov
adc
ins
inc
scas
or
add
lahf
push
sub
aas
inc
ins
inc
daa
mov
and
out
or
sbb
or
or
js
and
jno
mov
out
add
mov
lods
sbb
xchg
mov
add
pop
xor
hlt
mov
pusha
mov
out
hlt
jmp
inc
and
and
xchg
imul
push
cli
repnz
retf
in
xchg
or
adc
pop
mov
mov
arpl
add
or
mov
rcl
adc
push
inc
cmp
aaa
outs
mov
call
push
pop
lea
adc
(bad)
cmp
xor
push
push
dec
pop
popa
or
or
adc
pop
adc
test
fcomp
and
pop
daa
loop
and
(bad)
or
push
add
mov
inc
imul
jo
cmp
aas
and
ds
lea
iret
sbb
and
dec
iret
xor
xchg
adc
out
inc
add
and
or
pop
or
pop
inc
pop
sub
pop
daa
loopne
dec
mov
scas
add
and
xchg
in
sub
jne
sbb
and
adc
daa
inc
add
xchg
popf
jmp
pop
aam
adc
dec
mov
add
jecxz
dec
push
jo
fisttp
popf
sbb
lds
out
add
aaa
mov
pop
sub
clc
pop
mov
xchg
push
sub
fst
adc
int3
push
xchg
adc
bnd
cmp
adc
nop
inc
xor
inc
cmps
jnp
cs
mov
jg
push
fild
cdq
in
cdq
push
add
fild
lock
jae
fs
scas
xor
shl
call
jno
icebp
test
jnp
div
dec
xchg
push
ja
cmp
dec
fist
and
mov
sub
ds
and
sub
xchg
or
mov
mov
dec
and
lds
mov
outs
dec
test
lahf
and
sub
xlat
and
or
cmp
sub
jnp
in
retf
cmp
push
aad
call
adc
pop
retf
adc
push
mov
pusha
mov
pop
mov
bound
les
push
sbb
(bad)
clc
icebp
mov
dec
js
nop
cdq
iret
mov
inc
adc
hlt
outs
nop
fs
pop
xchg
adc
push
xor
je
adc
jg
pop
dec
pop
(bad)
in
inc
push
cwde
popa
sti
mov
mov
pop
leave
aas
loopne
jp
(bad)
cmps
jmp
inc
sub
rcr
stos
adc
rcl
or
idiv
loopne
dec
fsubr
aas
adc
sub
shr
and
pop
sar
fdiv
(bad)
and
or
push
push
cld
add
sub
cmp
push
and
inc
(bad)
cmp
sub
pushf
(bad)
xchg
sub
es
xor
mov
in
jg
std
jp
sub
cld
jne
popf
adc
xor
aad
ins
push
lock
or
adc
repnz
lea
add
jno
jle
movs
xor
imul
mov
ins
aas
add
push
fist
xor
(bad)
test
sub
sbb
retf
sub
and
add
scas
mov
push
aaa
mov
mov
mov
push
sub
daa
mov
push
sub
aam
push
mov
cdq
das
add
xor
movs
sar
sub
popf
dec
and
cmp
sub
arpl
outs
test
push
mov
and
adc
addr16
fs
pop
stc
jo
gs
ror
jmp
jno
test
test
sbb
movs
xchg
cdq
dec
xchg
add
xor
outs
sbb
jae
add
jle
xchg
cld
je
hlt
dec
rcl
mov
aas
arpl
pop
test
pop
mov
test
add
mov
mov
adc
sub
jno
ficomp
lea
pop
xchg
inc
push
out
xchg
lds
nop
pop
mov
and
xchg
and
in
jbe
pop
cmps
jmp
fsub
or
iret
and
outs
popa
cmp
and
xlat
hlt
cmp
or
xor
dec
scas
push
xor
mov
push
cwde
and
push
pusha
shr
xchg
jne
sbb
or
test
adc
enter
inc
mov
inc
or
ds
outs
jmp
nop
jmp
pop
xor
fmul
out
xor
in
cmp
mov
imul
les
dec
and
pop
inc
bound
loope
lds
add
xchg
daa
hlt
sbb
test
mov
cmp
xor
sub
call
call
outs
icebp
in
jne
sbb
cdq
pop
adc
inc
mov
aas
scas
hlt
lods
lds
sub
push
add
adc
xor
inc
fstp
cwde
movs
xor
jne
push
(bad)
popa
shl
outs
hlt
outs
retf
fnstenv
mov
adc
iret
xchg
js
pusha
stc
in
pop
and
sub
clc
xchg
and
popf
lods
add
xor
inc
stos
xor
in
inc
inc
add
push
(bad)
add
jns
and
mov
inc
xchg
loopne
ficomp
xchg
hlt
jo
lock
je
jmp
jecxz
or
xchg
es
or
aaa
sub
inc
add
adc
pop
inc
push
call
adc
test
and
test
inc
mov
xor
jbe
mov
jnp
jg
xchg
dec
adc
dec
adc
mov
pop
inc
loop
fnstcw
push
sub
adc
sti
sbb
dec
mov
cwde
add
dec
pop
cld
mov
popf
and
or
jne
pop
(bad)
mov
je
dec
lods
xor
adc
cld
push
cld
arpl
sub
shr
xchg
outs
add
adc
xchg
call
test
stc
push
shl
dec
jle
mov
nop
push
and
xchg
lods
or
in
popf
mul
push
inc
add
dec
lods
xor
jae
inc
dec
add
or
das
cmp
cwde
or
push
pop
mov
xchg
je
inc
sbb
stos
shl
xor
sub
and
and
and
mov
and
sbb
cwde
push
scas
hlt
stc
dec
mov
add
push
clc
or
es
pusha
mov
xor
les
dec
xlat
cld
mov
aad
sbb
sub
lea
call
je
jmp
push
and
push
adc
and
sbb
out
or
mov
push
adc
adc
mov
(bad)
xor
mov
inc
inc
imul
add
pop
or
test
push
(bad)
not
and
sub
xor
cdq
mov
or
sbb
shl
add
sbb
xchg
lods
call
and
cmp
stos
sub
xor
pop
cmc
ds
mov
neg
sub
adc
adc
jg
dec
out
test
sub
dec
pop
xchg
sub
mov
test
cmp
rol
in
sub
add
daa
pop
clc
imul
pushf
mov
push
ror
sub
pop
jbe
call
std
rcl
jae
sbb
sbb
adc
pusha
add
pmaxsw
pop
movs
addr16
or
mov
pusha
mov
arpl
xor
mov
nop
and
xor
ret
sub
and
mul
adc
clc
xchg
push
xlat
inc
pusha
je
sub
xchg
dec
pop
(bad)
cmp
cmc
or
or
cmp
in
nop
push
sbb
lahf
bound
fsubr
in
mov
xor
sti
cs
pop
add
sbb
or
cmp
sub
pushf
dec
sub
lods
mov
fincstp
add
out
and
sub
and
dec
sbb
in
push
imul
xchg
jge
jge
sbb
jne
test
add
mov
nop
loopne
jmp
cmp
sub
xor
call
push
fwait
(bad)
out
iret
icebp
push
fsub
mov
mov
mov
popf
jne
nop
inc
aaa
inc
test
sbb
das
aam
add
jb
int
jne
neg
in
add
dec
inc
pusha
sbb
push
jl
add
lods
inc
fisttp
test
fstp
adc
or
sub
xor
and
xor
adc
inc
sbb
xor
into
ret
push
scas
cmp
inc
call
pop
add
jo
jecxz
(bad)
jo
jae
iret
mov
in
ja
xor
xchg
jno
ror
xor
push
add
push
aas
xor
push
add
xor
or
movs
adc
push
xor
movs
pop
pushw
les
aas
push
and
hlt
lods
mov
aam
shr
movs
push
pop
repnz
ds
sub
pusha
pop
sbb
dec
adc
mov
jmp
popf
sub
or
icebp
adc
or
pop
adc
(bad)
cmps
pop
add
inc
dec
or
sbb
sbb
das
loop
shr
call
push
jmp
push
in
clc
loop
push
push
sbb
hlt
xchg
lock
mov
loopne
fxch
das
or
pop
sbb
jl
or
shr
dec
mov
add
xor
out
in
mov
push
popf
xchg
push
mov
adc
ja
mov
or
arpl
cmps
and
inc
or
iret
icebp
add
(bad)
xchg
jae
ret
das
clc
pop
test
dec
cmp
ins
xor
inc
push
and
retf
in
sbb
jb
inc
adc
js
(bad)
sbb
leave
jg
fadd
xlat
xor
pop
adc
or
jle
push
pop
push
xor
inc
scas
movsx
mov
xor
mov
add
pop
mov
pusha
dec
outs
or
in
iret
popa
cmp
jne
mul
jecxz
lahf
setno
push
and
mul
test
js
pop
mov
sub
lock
jne
add
sub
jmp
and
push
pop
test
push
inc
rcr
or
inc
sbb
mov
and
fs
test
retf
jno
loop
or
xor
loopne
or
stos
and
and
loope
rol
and
fs
jns
mov
xchg
xchg
sbb
push
leave
cli
sub
sub
or
inc
sahf
inc
das
mov
not
hlt
shl
mov
test
call
shr
test
lea
xor
mov
nop
cs
dec
movs
adc
rcl
mov
loope
(bad)
int
cmps
or
sub
cs
hlt
mov
push
dec
inc
push
xchg
adc
sbb
pop
pop
and
icebp
add
jo
add
cmc
mov
jne
scas
jo
or
das
pop
inc
dec
loopne
jge
mov
or
jg
scas
cdq
mov
inc
fist
clc
push
push
adc
cwde
into
jp
je
sub
jecxz
fs
outs
cmp
in
pusha
pop
shl
jo
xchg
mov
daa
xor
lock
push
xor
pop
push
fsub
cwde
out
jb
ins
pop
cmp
add
cmp
push
push
out
mov
or
ret
lods
dec
dec
test
inc
pop
call
pop
mov
movs
es
fisubr
outs
mov
test
dec
popa
xlat
cmp
rol
xchg
sbb
test
(bad)
inc
sub
and
ss
ja
test
fwait
lods
and
mov
clc
mov
shl
in
or
adc
mov
or
repnz
or
pop
lods
in
jge
in
jne
sbb
mov
or
push
jmp
ret
xlat
dec
mov
ror
jge
adc
cmp
lock
cmp
dec
popa
lods
mov
dec
test
call
and
scas
inc
shl
mov
shl
rol
cwde
cmp
xchg
cmp
xor
sub
xor
push
sahf
ja
les
mov
(bad)
out
xlat
jle
add
xchg
dec
push
mov
stos
out
sar
icebp
sub
inc
cmp
out
daa
movhps
pop
cmp
rol
and
dec
outs
xor
xchg
dec
in
movs
adc
pop
pop
mov
inc
cmp
(bad)
not
add
test
xchg
rol
cmp
xchg
xchg
mov
in
in
test
mov
cmp
sub
cmps
sub
repnz
fdiv
or
out
add
inc
mov
push
adc
call
popf
shr
mov
xchg
pop
repnz
dec
aam
add
or
add
dec
(bad)
gs
sar
je
and
xchg
or
iret
in
jge
les
daa
push
fisttp
jmp
inc
cs
lahf
sub
cmp
inc
mov
jge
mov
inc
mov
xchg
mov
push
dec
cmp
jmp
push
dec
adc
push
cmp
lea
inc
(bad)
in
jo
mov
loope
leave
jae
add
mov
jg
(bad)
and
xchg
mov
int3
rol
(bad)
cmp
inc
pop
or
pop
and
call
mov
mov
nop
sub
pusha
les
out
movs
inc
or
jnp
loopne
js
loopne
test
mov
call
daa
cmp
sbb
pop
aaa
je
jbe
aam
hlt
inc
or
loopne
xchg
xor
shl
and
inc
fiadd
or
pop
mov
xchg
push
add
push
das
(bad)
xchg
jne
(bad)
mov
nop
or
je
push
pusha
lea
xchg
push
pop
sub
sub
or
xor
adc
mov
ss
leave
movs
inc
shrd
sub
shl
lds
leave
adc
retf
movs
cmp
inc
xchg
nop
cmc
cmps
cdq
xor
pusha
imul
xchg
lock
xchg
outs
xor
in
pop
lea
jbe
xor
fistp
xchg
cmp
xor
in
in
sbb
mov
jo
repnz
(bad)
jmp
cwde
popa
popf
mov
jge
dec
nop
or
and
nop
cs
hlt
div
sub
xchg
cld
int3
mov
cmps
adc
inc
gs
test
pushf
or
int3
sar
or
and
xchg
out
(bad)
push
daa
test
add
loopne
add
mov
pop
or
mov
inc
mov
cmp
mov
dec
inc
es
or
mov
mov
and
leave
and
and
dec
add
unpckhpd
inc
xchg
jnp
pop
jae
cli
cmp
push
push
adc
and
and
pop
xchg
ins
pop
push
das
addr16
(bad)
adc
dec
hlt
inc
(bad)
daa
sub
dec
push
add
push
lea
mov
cmps
loop
push
push
jne
(bad)
fs
loopne
or
mov
in
push
dec
xor
inc
and
bound
dec
mov
add
orps
leave
imul
test
lock
outs
cmps
arpl
and
mov
inc
inc
bound
pop
sti
inc
scas
dec
xor
push
lods
pop
retf
push
out
lea
xchg
add
add
fbstp
scas
out
mov
mov
imul
pop
or
rcr
lods
sar
sar
push
jo
sbb
adc
inc
jp
je
idiv
sbb
mov
loope
clc
repnz
jns
add
push
sub
dec
dec
sahf
ja
loope
push
push
xor
iret
repz
mov
mov
test
pop
pop
xor
nop
shr
inc
and
inc
jb
inc
add
inc
mov
jmp
out
ror
jae
ins
das
pop
push
adc
sti
rcr
mov
xchg
and
xchg
sbb
jns
or
xchg
pop
ror
jg
mov
std
mov
push
add
or
cli
rcr
mov
sbb
lock
adc
or
cmp
fnstenv
lods
mov
popa
cmps
add
aaa
pop
in
mov
or
(bad)
clc
inc
sbb
sbb
mov
cwde
jmp
jp
mov
xchg
dec
mov
lock
push
loopne
arpl
js
sub
and
xor
xchg
push
test
jne
mov
test
pop
jnp
bound
clc
clc
ret
mov
int
mov
adc
scas
cmp
inc
fs
in
sbb
outs
pop
add
xlat
push
test
hlt
imul
dec
ret
dec
and
sbb
adc
and
popf
ficomp
call
inc
jmp
inc
clc
cmp
and
hlt
das
pop
jmp
inc
or
sub
idiv
enter
aaa
jmp
call
popa
idiv
pop
and
loopne
inc
test
dec
fidivr
popa
add
push
(bad)
push
mov
pop
std
pop
cmp
mov
push
adc
or
ins
(bad)
pop
aaa
xchg
inc
shl
lea
cmp
ror
push
xchg
shl
lods
adc
mov
test
mov
shr
add
xchg
jno
scas
in
mov
(bad)
data16
push
dec
mov
retf
loopne
mov
mov
(bad)
pop
ret
adc
add
nop
call
les
call
jmp
mov
sub
aas
sbb
xor
jns
(bad)
adc
or
push
fcmovbe
pop
cs
pop
push
xchg
push
enter
int
iret
jnp
push
jmp
xchg
outs
mov
addr16
push
sub
int3
cwde
cmp
inc
outs
mov
inc
popf
loopne
or
or
nop
xor
mov
shl
sbb
inc
add
mov
(bad)
xor
inc
push
jbe
xchg
or
xchg
push
cmp
movs
nop
clc
dec
jmp
xchg
jl
(bad)
mov
mov
lods
inc
pop
add
pop
cld
lds
cmp
pop
inc
jmp
push
mov
or
ins
jae
sub
daa
ss
test
arpl
pop
bound
inc
in
jns
mov
or
dec
cmc
mov
pop
sbb
sub
push
xor
mov
add
add
dec
add
pop
popf
movs
add
push
in
pop
adc
inc
push
out
cmp
inc
or
or
mov
push
add
or
test
or
sbb
add
pop
and
shr
sti
or
jmp
and
pop
add
xchg
or
add
mov
aaa
add
lods
adc
dec
cmp
dec
push
loop
mov
inc
dec
je
mov
push
mov
f2xm1
(bad)
loopne
ret
inc
adc
sbb
inc
xor
add
or
clc
pusha
leave
sub
pop
pop
ret
scas
ret
cmps
pop
das
mov
mov
add
ret
test
out
or
add
les
and
cmp
lock
sub
jecxz
jge
movs
shl
mov
mov
mov
xlat
gs
and
sbb
pop
and
push
in
adc
or
pop
or
pop
hlt
dec
push
dec
mov
adc
movs
sbb
fmul
fdivr
sub
jne
xor
add
sahf
xor
rcl
movs
xor
leave
or
add
loopne
pop
aaa
out
arpl
addr16
shl
sub
adc
push
add
adc
add
xlat
int3
cwde
imul
clc
(bad)
dec
fwait
jg
mov
and
push
fild
add
fdiv
ja
push
xor
mov
inc
cmps
outs
xor
mov
mov
js
rcr
(bad)
scas
call
jno
jae
jnp
(bad)
or
test
nop
pop
inc
add
pusha
ja
mov
pop
cli
xchg
inc
adc
scas
sbb
daa
push
idiv
clc
pushf
and
mov
jecxz
addr16
mov
jmp
or
cmp
ret
push
push
push
xchg
(bad)
dec
push
cmp
add
or
xchg
and
sbb
or
xor
(bad)
imul
cvttps2pi
xchg
lock
sbb
lea
push
pushw
lea
cwde
cmps
popa
mov
jecxz
jg
xor
pop
mov
(bad)
sti
(bad)
hlt
inc
add
sub
sub
or
test
retf
(bad)
xor
inc
xor
adc
push
lods
cmp
mov
push
ror
sub
(bad)
mov
aaa
adc
mov
fistp
xor
push
gs
rol
or
pop
xchg
(bad)
shr
add
inc
iret
xor
adc
sub
push
mov
or
cmp
and
xor
and
in
xchg
jl
and
or
pusha
mov
add
(bad)
xor
pop
sub
mov
and
mov
mov
add
scas
adc
test
push
push
cmp
jbe
mov
sbb
or
in
xchg
clc
in
retf
mov
cmp
js
xchg
mov
aaa
nop
ins
sbb
inc
add
pop
push
xchg
mov
xchg
pop
cmovne
or
ret
mov
pop
and
test
imul
nop
pusha
xor
inc
jg
test
xlat
xlat
pop
add
mov
mov
rol
mov
es
lock
jae
adc
adc
clc
jns
mov
cmp
fcomi
cmp
xor
and
mov
add
cmp
push
daa
fisttp
sbb
in
mov
fs
adc
dec
les
push
or
sbb
inc
jmp
retf
push
add
rol
out
retf
or
pop
add
fistp
inc
xchg
into
and
je
adc
dec
dec
mov
lea
adc
mov
jmp
add
mov
pop
pop
loopne
or
popa
ret
(bad)
mov
shl
jmp
mov
mov
inc
jmp
js
or
ret
add
jno
inc
in
push
add
loope
bound
dec
sbb
mov
cli
inc
pop
imul
in
and
and
inc
adc
push
idiv
rcr
sub
inc
push
add
and
add
mov
dec
xchg
pop
in
ja
jp
sahf
add
addr16
or
xchg
push
lods
lock
jp
int3
lea
adc
test
inc
push
cmc
jb
mov
cld
shr
inc
xor
nop
popf
or
jmp
jge
inc
mov
and
ss
sub
or
hlt
and
inc
icebp
int3
xlat
push
inc
fdivr
imul
or
sahf
rcr
xchg
xor
dec
or
test
int
jmp
(bad)
je
mov
cmp
test
pop
mov
pop
sbb
test
test
push
or
dec
add
stos
(bad)
clc
in
xchg
sub
cmps
adc
mov
or
dec
cs
and
mov
sbb
push
pusha
adc
add
rcl
pop
stc
popa
ins
lea
pop
adc
pop
adc
push
mov
daa
adc
rcr
push
pop
or
aas
mov
dec
ret
dec
or
sub
movs
sbb
adc
mov
sahf
xchg
sub
popa
arpl
and
cmps
jmp
out
mov
xor
(bad)
mov
sbb
nop
shl
movs
sub
inc
or
inc
pop
adc
xchg
cmp
pop
pop
mov
or
sub
pop
adc
jg
hlt
lea
std
dec
adc
xor
sub
mov
in
sub
pop
sub
cs
adc
adc
test
xlat
in
adc
xchg
ret
and
mov
sub
pop
ret
fld
or
das
and
movs
lock
jo
imul
push
jns
bound
jo
ret
xlat
(bad)
ds
mov
les
rcl
push
movs
pop
cld
inc
add
adc
data16
jl
repnz
xor
fs
rcl
in
jnp
pop
mov
aad
sahf
imul
xchg
xor
jno
mov
sub
sbb
in
cmp
add
(bad)
cmp
inc
cmps
pusha
sbb
pop
adc
dec
cmp
aaa
xor
push
dec
xchg
in
lods
(bad)
and
push
retf
dec
cmp
inc
outs
inc
jmp
xor
pop
cmp
test
push
daa
fsub
in
cmp
or
push
mov
add
adc
and
push
lods
out
hlt
pop
push
xor
(bad)
mov
pop
pop
inc
adc
jecxz
push
std
inc
or
or
(bad)
aad
mov
addr16
cmp
call
pushf
fs
push
pop
clc
nop
pusha
cmp
cdq
dec
cmp
pop
cdq
inc
cld
or
xor
adc
sbb
inc
or
pop
sub
sbb
ins
mov
mov
adc
xor
and
mov
or
cmc
push
dec
test
(bad)
xor
es
shl
call
push
xor
stc
jge
push
mov
or
je
dec
mov
and
add
mov
les
sub
or
adc
out
cs
xor
cmc
sub
and
add
es
in
loope
xor
pop
das
cmp
inc
cmp
xchg
cmc
(bad)
sub
sub
add
adc
sub
pop
inc
jmp
fild
test
inc
adc
xlat
cmp
cmp
shl
adc
addr16
adc
pop
jno
adc
jne
ret
fwait
sub
pop
imul
inc
loope
daa
in
pop
pop
adc
cmps
jne
inc
pop
test
push
fbstp
and
test
push
jno
or
dec
cmp
or
add
add
es
and
aad
push
sbb
mov
push
adc
and
add
push
test
inc
scas
aam
xor
or
inc
(bad)
pop
pop
mov
or
into
mov
push
inc
and
movs
cdq
pop
dec
dec
shr
xor
test
shl
sub
into
sbb
mov
fcomp
movs
(bad)
pop
aas
mov
adc
mov
aaa
dec
mov
push
sub
sub
rol
sar
dec
addr16
mov
inc
out
mov
(bad)
sub
or
ror
fist
and
test
pop
inc
sub
enter
pop
retf
mov
stc
adc
jmp
mov
inc
adc
bound
sbb
mov
out
dec
xor
fbld
icebp
inc
(bad)
repz
jmp
je
xlat
push
sub
xor
push
fwait
adc
push
xchg
sbb
in
(bad)
loopne
fiadd
mov
mov
mov
movs
cdq
js
lods
in
nop
pop
xor
push
inc
push
ds
xchg
into
adc
loop
xchg
mov
mov
xor
xchg
int
fild
out
je
aaa
mov
jmp
xlat
mov
outs
imul
rol
adc
or
pusha
add
int3
mov
or
push
or
idiv
or
inc
jge
fisttp
fsub
loopne
jo
jmp
mov
xor
push
js
shl
or
fadd
adc
pop
cmps
mov
cmp
xchg
adc
adc
inc
enter
dec
es
loopne
add
fild
or
jle
sub
dec
cmc
sub
or
loopne
add
push
or
mov
fs
sub
mov
adc
popf
push
adc
jp
sbb
jg
fidiv
push
adc
add
mov
add
add
sbb
fwait
shl
(bad)
pusha
inc
repz
cmps
pop
cmps
jecxz
stos
loopne
xor
ror
fcomp
ins
jp
pop
mov
jecxz
adc
adc
mov
rcr
adc
dec
mov
add
jne
rcr
pusha
not
adc
fmul
xor
in
sbb
sub
push
(bad)
mov
push
pop
sbb
mov
inc
and
lock
retf
cwde
jo
mov
sub
lock
mov
push
in
sar
cmps
ss
ror
sub
mov
mov
sbb
scas
daa
inc
mov
xchg
mov
jmp
push
rcr
sub
(bad)
mov
push
adc
cmp
scas
loope
push
adc
and
xchg
dec
mov
test
jbe
out
int3
xor
fcom
or
loopne
in
mov
nop
out
pop
xchg
scas
jecxz
ret
xor
sbb
leave
push
scas
or
dec
jnp
daa
pop
daa
sbb
jno
inc
(bad)
call
in
or
jns
ficom
mov
mov
push
or
jb
repnz
xchg
unpcklps
sbb
out
jb
and
sub
daa
fwait
sub
sub
std
mov
pop
xchg
stos
es
xor
test
cmp
icebp
cmp
inc
xor
outs
and
sbb
jo
ret
popf
adc
push
adc
fadd
lds
add
sub
xchg
xchg
clc
push
or
add
dec
daa
jo
add
mov
adc
jmp
pop
pop
lods
add
fwait
bound
push
cmp
lea
or
pop
cmp
xchg
push
fwait
xchg
jno
cmp
or
jns
(bad)
call
fwait
scas
repz
call
(bad)
push
jl
or
or
stos
cmps
pop
xor
mov
mov
and
adc
xor
dec
and
jnp
mov
out
xor
cmp
adc
mov
in
scas
inc
xor
mov
jno
inc
pop
xor
mov
bound
or
or
or
or
and
dec
sbb
test
dec
dec
aam
pop
jmp
adc
xchg
or
jnp
jmp
xor
les
xchg
dec
or
enter
sbb
cmp
pop
inc
lods
jmp
lods
cmp
ja
test
cmp
cmp
cmp
dec
dec
xor
and
inc
push
hlt
inc
shl
sbb
cwde
ret
loopne
pusha
in
mov
clc
mov
cmp
leave
mov
dec
and
call
or
nop
or
add
mov
test
jnp
jp
xlat
dec
gs
sub
jb
jp
popa
ins
push
data16
pop
push
push
mov
arpl
push
push
je
sbb
movs
add
in
add
xchg
rol
adc
xchg
dec
jae
mov
in
and
sbb
icebp
inc
popa
pop
ror
mov
sub
mov
fild
adc
stos
daa
movs
pop
and
mov
sbb
pop
les
(bad)
jl
sub
cmp
xchg
pop
cmp
ins
ffree
mov
inc
jb
pop
cmp
xor
inc
adc
dec
loop
xchg
and
add
pop
rol
adc
or
icebp
test
rol
and
xor
hlt
(bad)
mov
sub
mov
loopne
mov
or
mov
dec
ret
int3
mov
clc
inc
sub
fdiv
cmp
fwait
iret
sbb
mov
inc
icebp
std
ss
mov
(bad)
push
jae
inc
hlt
pop
idiv
mov
mov
mov
pusha
mov
and
mov
ja
mov
scas
in
sub
add
inc
mov
lea
adc
ja
fdivr
xchg
push
push
cmp
iret
add
inc
inc
pop
rcl
adc
clc
mov
rcl
mov
pop
and
dec
retf
jecxz
mov
test
pop
adc
or
ins
imul
push
mov
int
adc
push
mov
jbe
xchg
jl
mov
aad
call
shr
test
mov
aad
xchg
dec
fild
daa
pop
lock
clc
dec
and
sbb
jo
pop
jge
loop
adc
icebp
sbb
enter
movsx
push
loope
pop
lea
outs
or
xor
in
push
lods
mov
pop
push
outs
inc
sub
fs
rcl
ret
xchg
ja
outs
pop
jne
push
repnz
jae
cdq
sub
jae
mov
pusha
adc
inc
sub
test
push
fadd
mov
and
mov
movs
mov
mov
lock
fadd
xbegin
gs
inc
xor
hlt
inc
add
xchg
jge
popf
dec
mov
sahf
dec
dec
das
push
pop
ins
out
sahf
out
nop
mov
jns
fsubr
cld
push
xor
xor
repz
push
push
iret
repz
mov
iret
loope
jns
iret
repz
sahf
out
sahf
dec
pop
jno
xchg
mov
scas
rcl
div
cmp
repz
push
sub
dec
iret
repz
pop
jo
(bad)
mov
cmp
xlat
jmp
sahf
out
pop
xor
(bad)
out
sahf
out
xchg
jns
into
loopne
add
adc
cmp
repz
inc
push
data16
cmp
repz
ds
fcomip
add
jns
cmp
outs
adc
in
repz
out
adc
and
iret
pop
imul
mov
iret
repz
xlat
jmp
sahf
out
pop
xor
addr16
sahf
out
mov
jns
shl
test
iret
repz
push
arpl
repz
repz
stos
mov
call
cmp
pop
jno
xchg
cmps
jl
out
mov
cmp
cmp
rcl
and
repz
ins
jg
mov
repz
jmp
(bad)
and
out
xor
imul
lahf
mov
aad
sar
stc
or
repz
gs
fwait
repz
rep
mov
jns
out
cmp
sahf
out
sahf
popa
jae
xchg
test
jns
fcomip
add
adc
daa
cmp
outs
iret
repz
adc
in
call
aas
and
inc
pop
imul
jns
out
mov
xlat
jmp
sti
or
push
cmp
repz
jns
popf
scas
stc
cmp
repz
test
cmps
sbb
out
sahf
jne
cdq
stos
mov
jns
repz
cmp
repz
jno
iret
repz
xchg
cmps
mov
out
add
and
out
pop
ins
jg
mov
mov
fldpi
std
iret
repz
cmove
xor
imul
lahf
mov
imul
stc
or
out
sahf
out
inc
push
gs
out
sahf
mov
cmp
repz
pop
inc
sbb
cmp
dec
popa
jae
xchg
iret
repz
test
add
adc
jns
out
outs
adc
in
call
dec
iret
repz
and
cmp
repz
mov
call
pop
xor
jns
out
push
addr16
sahf
out
sahf
popf
scas
rcl
idiv
sar
sbb
iret
repz
cdq
stos
out
cmp
mov
dec
sahf
out
sahf
pop
sub
dec
pop
jno
sahf
out
adc
lahf
out
out
add
iret
repz
aaa
dec
pop
ins
jg
cmp
repz
mov
fldpi
jns
out
std
cmovge
xor
jns
out
imul
sahf
lods
mov
dec
dec
out
sahf
ja
and
out
sahf
ins
jp
sahf
mov
xor
out
aam
clc
or
repz
repz
push
fs
repz
mov
repz
dec
push
push
and
iret
dec
pop
ins
jg
mov
mov
fldpi
std
jge
cmps
stc
sqrtps
xor
push
out
sahf
out
push
push
push
push
push
popf
out
sahf
push
push
push
push
push
out
sahf
out
and
sahf
out
sahf
jg
mov
int
jns
repz
cmp
repz
jno
out
repz
xchg
cmps
mov
push
repz
cmp
push
and
inc
iret
repz
push
push
ds
repz
aam
clc
or
sahf
out
sbb
inc
push
fs
sahf
out
mov
jns
shl
hlt
push
push
sbb
cmp
repz
dec
pusha
jb
repz
repz
test
int3
fsubp
jns
iret
lock
cmp
pop
outs
adc
mov
(bad)
(bad)
repz
repz
xor
pop
iret
repz
push
mov
repz
call
jns
out
xor
data16
jns
out
pushf
scas
rcl
sar
test
sbb
cmp
repz
bound
repz
rep
mov
jns
out
pop
push
sub
dec
sahf
out
sahf
pop
jo
xchg
cmps
mov
retf
adc
iret
repz
adc
dec
pop
ins
cmp
repz
nop
mov
iret
repz
cld
push
pop
and
jns
out
inc
push
push
sahf
mov
cmp
repz
or
cs
repz
repz
fs
call
shl
hlt
push
sahf
out
call
jns
out
jb
xchg
test
sar
int3
fdivp
add
iret
repz
cmp
outs
cmp
cmp
movs
mov
fidivr
iret
repz
(bad)
adc
xor
jns
out
pop
push
mov
mov
(bad)
call
jl
bound
xor
repz
repz
pushf
scas
out
cmp
rcl
test
sahf
out
sahf
sbb
push
bound
out
xchg
xor
out
repnz
push
sub
repz
cmp
adc
retf
jns
cmps
stc
add
and
dec
out
sahf
out
ins
jle
mov
mov
fsubr
cld
push
data16
repz
xor
repz
repz
sahf
mov
cmps
stc
cmp
aam
clc
or
sahf
out
sahf
cs
push
fs
jns
out
call
int
hlt
push
push
repz
dec
pusha
jb
xchg
test
iret
repz
int3
fdivp
add
sahf
out
adc
cmp
out
sahf
out
adc
sahf
enter
adc
cmp
repz
inc
pop
push
repz
repz
imul
imul
sahf
out
sahf
inc
push
data16
pushf
jns
out
scas
rcl
div
cmp
repz
ds
iret
repz
bound
stos
mov
into
loopne
add
push
jns
out
sub
dec
pop
jo
jns
out
xchg
cmps
mov
sahf
fsubr
or
adc
cmp
repz
pop
ins
jle
repz
nop
mov
sahf
cmps
stc
cmp
push
outs
and
inc
jns
out
push
push
jns
out
ret
clc
iret
repz
or
cs
push
fs
repz
mov
iret
repz
hlt
push
jno
out
sahf
out
cmp
pusha
jb
out
sahf
test
cmp
repz
add
es
cmp
repz
pop
outs
adc
mov
(bad)
(bad)
sahf
out
adc
xor
pop
jns
out
push
mov
out
(bad)
call
repz
push
xor
data16
iret
repz
pushf
scas
rcl
call
sbb
jns
out
push
bound
out
sahf
cwde
stos
mov
iret
sar
push
sub
dec
repz
repz
jo
xchg
cmps
out
cmp
mov
ja
out
sahf
adc
dec
pop
ins
jns
out
jle
mov
sahf
out
jmp
cmp
xor
jp
cmp
repz
mov
aam
jns
out
clc
or
cs
out
sahf
out
fs
call
shl
hlt
push
jp
iret
repz
sub
pusha
repz
repz
xchg
test
cmps
stc
cmp
int3
fdivp
add
sahf
out
sahf
cmp
outs
cmp
jns
movs
mov
(bad)
xor
out
(bad)
adc
iret
repz
inc
pop
push
mov
mov
(bad)
call
stc
or
push
xor
out
sahf
out
js
pushf
scas
int
jns
rcl
test
sbb
repz
ds
bound
iret
xrelease
imul
jg
sub
dec
pop
jo
xchg
jns
out
cmps
mov
repz
add
adc
dec
cmp
repz
ins
jle
mov
mov
fsubr
cld
out
sahf
out
and
out
sahf
push
ret
out
aam
clc
or
repz
push
fs
repz
mov
sahf
cmps
stc
cmp
push
sbb
cmp
sahf
out
dec
pusha
jb
xchg
out
sahf
out
mov
repz
add
cmp
repz
adc
repz
adc
and
pop
push
out
sahf
jl
mov
int
jns
cli
or
push
xor
cmp
repz
push
data16
iret
repz
pushf
scas
rcl
neg
xchg
sub
push
jns
out
bound
stos
repz
out
into
loopne
add
iret
repz
push
sub
dec
pop
jo
iret
repz
xchg
cmps
mov
repz
add
sahf
out
dec
pop
ins
jle
out
sahf
nop
mov
cmp
repz
push
mov
xor
iret
repz
push
repz
mov
aam
clc
or
sbb
inc
push
fs
out
jbe
call
shl
hlt
push
mov
iret
repz
sub
pusha
jb
cmp
repz
test
int3
fidivr
out
lock
jns
out
pop
outs
adc
mov
(bad)
(bad)
cmp
sar
and
pop
repz
repz
mov
iret
(bad)
(bad)
call
out
sahf
push
xor
data16
sahf
out
mov
lahf
out
test
sbb
repz
ds
bound
cmp
repz
mov
imul
add
inc
cmps
push
push
sub
cmp
out
dec
pop
jo
xchg
out
sahf
out
mov
iret
ror
push
adc
dec
repz
repz
ins
jle
mov
mov
fsubr
cld
push
sahf
out
call
jns
out
jp
sahf
mov
sar
aam
clc
or
cs
push
fs
cmp
repz
lods
mov
out
hlt
push
xchg
sbb
cmp
jns
out
pusha
jb
xchg
lahf
out
sahf
test
int3
fdivp
add
adc
cmp
repz
rep
adc
iret
enter
adc
and
pop
push
jns
out
mov
xor
out
cli
or
push
xor
repz
inc
push
data16
pushf
cmp
repz
rcl
idiv
cmps
stc
or
out
sahf
out
je
cwde
stos
int
jns
mov
call
cmp
repz
repz
iret
fsubr
add
jns
ss
pop
ins
jle
jns
out
mov
repz
out
push
pushf
and
inc
iret
repz
push
push
ds
repz
aam
clc
or
sbb
inc
push
fs
sahf
out
mov
jns
shl
hlt
push
sahf
sbb
cmp
repz
dec
pusha
jb
repz
pause
lahf
scas
mov
iret
fucomi
test
adc
adc
pop
inc
ret
add
fadd
fcomp
mov
loop
das
sub
mov
nop
sub
add
push
adc
adc
pusha
jo
ss
(bad)
and
inc
pop
jmp
push
leave
nop
in
and
les
mov
jl
jnp
inc
bnd
cld
mov
inc
movs
and
and
mov
int3
loopne
and
jns
add
pop
and
cmp
push
leave
xchg
push
pusha
jns
inc
jb
call
(bad)
popa
sub
cmp
mov
cmp
push
push
sbb
add
pop
dec
sbb
dec
dec
mov
mov
shr
mul
imul
popa
pop
mov
sbb
sub
adc
leave
shl
mov
movs
rcr
stos
cmp
aad
ss
and
and
inc
stos
jbe
inc
dec
mov
leave
mov
adc
inc
adc
dec
inc
lods
(bad)
ror
and
enter
mov
xor
lods
inc
jb
push
imul
test
jb
cwde
lods
jb
inc
jb
aam
and
inc
cld
adc
and
dec
cmp
mov
cmp
and
xchg
(bad)
fsubr
sbb
nop
cmp
scas
adc
xchg
sbb
xchg
cmp
leave
xchg
sbb
jo
int3
sbb
xchg
sbb
call
xchg
add
in
xor
in
mov
dec
mov
dec
xchg
mov
dec
mov
(bad)
in
mov
jb
inc
xor
push
js
stos
mov
arpl
inc
mov
and
leave
xchg
sbb
cld
and
cmp
xchg
and
js
pushf
and
xchg
and
xchg
in
mov
sbb
xchg
sbb
mov
mov
int3
fdiv
mov
sbb
dec
pop
ins
in
mov
adc
shl
and
in
lock
jb
inc
xor
cmp
jb
inc
push
test
cmp
mov
or
daa
mov
xchg
sbb
mov
imul
mov
dec
mov
xor
add
jb
pop
jo
and
jb
mov
and
inc
hlt
or
sub
pusha
cmp
int3
and
xchg
and
hlt
leave
xchg
or
sbb
xor
sbb
xchg
sbb
je
xchg
sbb
xchg
mov
leave
in
add
adc
sub
mov
cdq
push
cmp
aam
inc
jb
js
jae
dec
mov
(bad)
cwde
test
mov
inc
mov
mov
inc
call
xchg
inc
sbb
xchg
cmp
cmp
and
push
and
stos
cwde
mov
(bad)
push
mov
cmp
loopne
xchg
or
and
mov
leave
xor
xor
fcmovbe
inc
pop
and
and
xchg
mov
cmp
fsubr
mov
cmp
adc
sbb
xor
and
xchg
and
xchg
and
xchg
js
pushf
cmp
aam
cmp
xchg
or
adc
xchg
sbb
pop
push
or
les
movs
call
jb
stos
loopne
hlt
or
ss
mov
mov
pop
jl
sub
dec
mov
fcmovbe
mov
inc
cld
and
xchg
sbb
nop
sbb
leave
xchg
sbb
cmp
je
leave
xchg
sbb
mov
xchg
sbb
xchg
fdivr
in
xchg
or
sub
in
mov
nop
dec
mov
dec
mov
push
adc
ret
ret
pushf
dec
ins
ret
fwait
jmp
mov
(bad)
in
and
in
rcr
in
test
cld
inc
adc
and
xchg
sbb
and
adc
add
js
mov
and
xor
arpl
fcomp
clc
mov
in
sbb
inc
inc
in
mov
and
test
(bad)
pushf
les
mov
push
rol
retf
in
ss
je
cmp
stos
lahf
call
mov
and
lds
xor
stos
xlat
in
inc
fwait
sbb
sub
xor
in
mov
jl
push
icebp
dec
mov
xchg
ror
inc
dec
mov
dec
jo
xor
in
or
sub
and
pop
js
dec
mov
push
dec
mov
aam
cld
stos
dec
and
inc
ror
mov
and
fisubr
mov
and
pushf
lods
mov
and
push
inc
adc
mov
mov
enter
adc
ss
sbb
dec
mov
inc
pop
in
mov
js
mov
mov
(bad)
ss
clc
test
mov
ret
xor
lea
mov
push
xor
xor
mov
mov
in
retf
ss
mov
inc
popa
push
js
mov
fs
lea
push
test
sar
jo
mov
jecxz
leave
shl
jns
loop
sbb
xchg
sub
pop
and
test
mov
int3
push
mov
int3
pop
ss
pop
test
sbb
and
lock
push
leave
mov
int
mov
pop
hlt
ja
sbb
mov
test
test
pop
inc
mov
pushf
and
xchg
and
hlt
leave
xchg
or
add
xor
push
and
js
movs
mov
in
dec
scas
movs
mov
leave
xchg
fdiv
into
xchg
jnp
mov
adc
and
and
sbb
pop
push
jbe
je
mov
imul
push
jb
sbb
shl
add
sbb
and
fwait
mov
push
imul
nop
lods
dec
mov
dec
les
ficom
fadd
and
test
shl
mov
and
and
je
rcl
jnp
or
and
jb
sub
in
inc
jb
mov
cmps
shl
pusha
and
xchg
and
xchg
fadd
dec
sbb
jo
and
xchg
mov
nop
cmp
fmul
aad
aad
add
test
add
ja
das
push
push
aad
pusha
aad
add
and
mov
cmps
shr
inc
jb
inc
fdiv
cld
xchg
and
and
dec
cmp
and
mov
inc
rol
test
shl
and
and
leave
xchg
or
fs
leave
shl
shl
push
fadd
ret
and
ficomp
and
fdiv
ror
mov
in
sbb
xchg
loopne
(bad)
jl
or
hlt
dec
cwde
fnstcw
mov
(bad)
jb
mov
and
and
mov
clc
xor
cmp
loopne
cmp
and
add
leave
xchg
sbb
and
dec
sbb
xchg
sbb
jl
dec
xchg
xchg
add
or
dec
mov
sbb
inc
mov
dec
mov
jo
mov
dec
adc
frstor
in
push
and
mov
jl
push
add
test
cmc
rcr
mov
push
movs
fadd
(bad)
sub
dec
sbb
cmp
sub
pop
cmps
or
in
push
and
test
adc
fistp
dec
xchg
push
xor
mov
cmc
push
loopne
jo
xchg
and
fiadd
xchg
and
movs
mov
loopne
sub
pop
in
pop
add
dec
mov
adc
leave
test
pusha
loope
in
mov
dec
scas
xchg
stos
mov
mov
add
and
and
cmp
and
inc
push
pusha
loop
pop
lds
test
and
jb
pushf
and
jb
in
and
xchg
inc
or
and
dec
pop
cmp
xchg
and
xchg
and
shr
cld
sbb
nop
cmp
in
xor
sbb
xchg
inc
pop
leave
xchg
sbb
push
xchg
sbb
mov
xchg
in
in
xchg
adc
and
mov
dec
mov
jo
mov
dec
sbb
lock
inc
cmp
adc
and
add
push
out
in
push
inc
xchg
and
xor
and
dec
lods
and
aam
inc
xor
jecxz
adc
jmp
dec
fild
mov
push
movs
xlat
mov
in
aam
push
lea
jmp
jo
pop
or
stos
ss
pushf
sbb
cmp
mov
jo
xchg
stos
in
test
push
mov
jmp
jmp
and
push
leave
push
jb
push
ins
jb
pop
and
leave
push
mov
pop
mov
in
(bad)
cld
push
ins
sub
in
sub
inc
jb
pop
and
leave
push
sbb
push
jno
jmp
in
outs
add
cmps
cmp
xor
and
and
je
xchg
call
cmps
stos
in
movs
inc
fsub
test
xchg
dec
and
scas
xchg
stos
pusha
je
mov
mov
and
cmp
xor
adc
out
stos
lods
xchg
and
inc
push
lds
out
push
leave
push
ror
pop
and
jns
test
inc
loop
xor
jge
mov
dec
inc
and
stos
jbe
jo
pop
test
mov
call
test
iret
pop
mov
in
icebp
cmp
icebp
scas
or
test
push
mov
xor
fdivr
sub
lock
cmp
sar
fwait
sub
inc
repnz
fs
jb
pop
add
sbb
and
push
jb
aam
call
push
or
sbb
and
inc
jb
inc
shr
add
sbb
cmp
mov
dec
push
jae
inc
lock
xchg
and
cmc
adc
and
xchg
and
xchg
and
xchg
push
and
cwde
movs
mov
cmp
and
xchg
fsubr
clc
sbb
nop
cmp
neg
xchg
sbb
xchg
inc
pop
jmp
aas
test
inc
hlt
imul
and
fimul
and
sub
in
cmp
lods
dec
mov
dec
int3
in
xor
in
or
xor
jb
inc
dec
pop
ins
xchg
sbb
and
clc
leave
ror
and
les
mov
sub
and
jns
inc
js
cli
leave
nop
cmp
mov
sti
test
in
sbb
ins
cld
clc
xchg
inc
repnz
js
add
or
and
mov
jmp
leave
xchg
cwde
mov
and
leave
enter
xor
jns
inc
cwde
add
xchg
and
xchg
sbb
cmp
push
jl
cwde
and
xchg
mov
loopne
ss
lahf
hlt
inc
and
dec
mov
cmp
repnz
mov
test
and
sbb
inc
mov
imul
rol
fcom
sbb
xchg
sbb
inc
ins
pushf
push
leave
xchg
sbb
call
fs
sub
out
mov
mov
xor
and
xor
and
jb
enter
push
jb
inc
xor
push
inc
jae
inc
cmp
clc
push
adc
inc
cs
cmp
dec
daa
mov
mov
mov
out
pushf
add
sti
and
add
ins
jmp
mov
sbb
lahf
and
inc
inc
pop
cmp
nop
mov
int3
in
loope
or
add
adc
mov
stos
arpl
pop
or
jbe
test
test
mov
dec
mov
loopne
inc
add
inc
and
cmp
mov
jo
nop
inc
jb
and
inc
jb
call
jns
or
inc
and
xchg
and
cmps
xor
dec
mov
mov
inc
enter
and
push
sub
cmp
and
xchg
jo
xchg
sbb
nop
cmp
unpcklps
sbb
xchg
xor
sbb
and
pop
rcl
inc
xlat
lods
inc
add
and
and
adc
inc
cmp
aam
xor
inc
and
test
adc
and
sub
add
adc
jb
inc
sub
dec
js
test
inc
ins
adc
fwait
jmp
and
in
add
sbb
jb
inc
xor
push
jb
jl
xlat
xchg
mov
inc
cmp
jl
cmp
xchg
inc
rol
adc
adc
and
test
xor
pop
(bad)
jbe
mov
and
cmps
push
rcl
addr16
sub
mov
adc
jb
xchg
inc
fs
push
push
cmp
xor
jbe
push
and
and
xchg
inc
add
adc
push
inc
cwde
and
inc
inc
sbb
ror
mov
int3
inc
xchg
and
call
cmp
les
sbb
sbb
push
pop
push
jl
mov
inc
jb
inc
cmp
and
fdiv
push
leave
and
xchg
sbb
xchg
or
inc
push
je
loop
sbb
pushf
mov
push
push
sar
shl
ins
hlt
xor
in
push
and
inc
mov
push
test
in
pushf
mov
mov
adc
inc
xor
jbe
and
nop
inc
jb
inc
lods
(bad)
fcom
or
inc
or
fs
add
push
sbb
push
and
add
inc
jbe
mov
push
and
adc
mov
xchg
and
(bad)
fsubr
xchg
or
and
mov
dec
and
mov
sbb
lock
or
xchg
pushf
or
js
and
addr16
jb
cmps
cmp
push
push
and
and
dec
mov
(bad)
fsubr
or
aas
or
iret
xchg
dec
mov
xor
(bad)
outs
push
inc
cmp
push
sub
mov
inc
jb
(bad)
in
xchg
inc
jb
adc
xor
cmp
and
xchg
je
mov
leave
nop
cmp
sub
xor
push
or
dec
push
pushf
sub
sub
mov
sti
dec
mov
push
xor
ror
mov
and
jb
inc
jb
add
inc
mov
jb
fsubr
cmp
and
and
xchg
and
xchg
and
xchg
mov
fdiv
or
xchg
sbb
nop
inc
jl
xchg
sbb
mov
lock
rcr
sbb
and
jb
inc
js
mov
movs
sbb
enter
adc
jmp
fadd
jbe
sub
cmp
imul
jmp
jns
sub
movs
rcl
pop
mov
pusha
or
sbb
adc
dec
jne
punpckhbw
lods
dec
jle
and
and
inc
mov
in
test
adc
add
test
popa
imul
xor
push
sbb
xor
mov
inc
ss
sub
dec
jne
jae
leave
sub
mov
dec
mov
xchg
push
data16
dec
jo
jb
jno
and
imul
(bad)
(bad)
push
and
jb
popa
push
data16
and
xor
xor
ja
ja
imul
std
jmp
imul
push
ins
jo
ja
fs
je
popa
and
mov
je
outs
and
je
cmps
and
addr16
std
(bad)
(bad)
(bad)
pusha
ja
and
ss
aaa
and
imul
bound
js
jae
shr
jle
add
outs
ins
inc
jb
cs
jg
fdivr
inc
outs
outs
and
imul
imul
jne
pusha
sti
outs
bound
fs
addr16
jno
gs
xor
outs
loopne
ins
fstp
xor
xor
jp
ins
ins
pop
outs
gs
int
cdq
(bad)
jmp
cmp
and
je
push
and
fsub
xor
fwait
inc
jmp
ret
(bad)
outs
fwait
mov
je
and
jp
cs
not
cmp
retf
jne
jb
push
jns
add
lock
data16
xor
into
push
jp
int
in
bound
cmp
addr16
adc
ins
js
jb
rcr
jb
push
push
out
xchg
jmp
inc
jo
arpl
dec
and
jp
jb
mov
test
cmp
outs
dec
imul
add
(bad)
pop
(bad)
fsub
push
arpl
adc
push
sbb
push
pop
push
push
mov
imul
mov
dec
lods
loopne
push
test
arpl
bound
push
or
push
xor
popa
ins
je
inc
jno
loop
inc
adc
outs
adc
loopne
push
and
push
jo
push
cwde
ins
sahf
bound
pop
lds
ja
jno
sahf
jae
lds
sbb
dec
and
ins
add
push
fs
imul
jae
out
jo
inc
ins
push
dec
icebp
mov
imul
cld
jno
lods
jecxz
cmps
jne
mov
and
pusha
jne
lods
cmp
lock
push
or
pusha
adc
jb
dec
addr16
push
cmp
sub
push
xor
popa
fadd
je
popa
outs
ja
push
jo
mov
xor
xor
and
gs
ret
repz
sub
jns
bound
push
mov
arpl
outs
imul
into
inc
jb
out
adc
jo
outs
push
stos
bound
fs
adc
dec
ins
mov
popa
and
outs
stos
mov
jo
arpl
jb
out
sub
pop
ja
jo
jb
jo
mov
adc
mov
push
push
ins
push
popa
popa
add
(bad)
jge
pop
test
js
or
cmps
shl
sub
ins
xor
jno
push
mov
and
dec
inc
outs
(bad)
arpl
popa
mov
cld
inc
xor
jle
push
imul
dec
popa
sub
jae
fs
xor
jmp
or
ins
mov
xor
jno
push
xor
and
ds
popa
mov
pop
add
cwde
rcr
test
sub
cs
repnz
inc
pusha
adc
inc
mov
adc
pop
adc
jns
xchg
jns
fs
test
js
and
int
adc
dec
sbb
pop
ret
imul
cmp
inc
jno
cmps
ins
shr
push
cmp
or
xor
xor
inc
and
test
scas
xchg
lock
sbb
(bad)
fsubr
push
dec
mov
mov
xchg
mov
sub
or
and
clc
test
sbb
mul
xchg
mov
jae
sub
outs
inc
adc
mov
pop
xor
add
out
sub
imul
adc
dec
pusha
or
imul
aam
test
es
popa
(bad)
push
dec
adc
outs
bound
inc
or
ins
or
xor
cmp
je
fs
js
loop
push
jne
jl
cmp
xchg
inc
pop
fidivr
in
push
add
arpl
jp
add
xor
mov
ret
or
jo
repnz
sub
pop
fs
xchg
add
loopne
push
mov
outs
sbb
dec
and
outs
hlt
div
add
jp
imul
mov
ficomp
je
or
ja
aad
push
sbb
out
gs
dec
push
jo
jbe
jae
and
pushf
ss
add
in
addr16
jmp
in
shl
sub
adc
sbb
pop
xchg
mov
cli
(bad)
push
sub
addr16
or
mov
outs
xor
cmps
call
pop
or
and
inc
das
cs
cmp
jns
xor
pop
gs
(bad)
ins
adc
jne
and
aas
pusha
daa
pop
or
or
pusha
dec
das
outs
or
in
(bad)
outs
adc
push
xchg
push
and
jno
sub
adc
pop
and
(bad)
(bad)
jmp
xor
imul
cmp
jp
xor
xor
push
dec
es
call
(bad)
xor
and
push
in
pop
mov
dec
ret
pop
test
(bad)
pop
movs
dec
rcr
movs
push
push
int
mov
leave
pop
mov
jle
rcr
mov
aas
(bad)
ficom
dec
iret
push
into
pop
mov
rcl
pop
cmps
dec
fcomp
jg
pop
outs
xor
push
jle
jl
jg
dec
nop
dec
xor
jl
and
je
cmp
ds
aas
jle
jo
push
pop
outs
ds
and
es
cmp
xor
xor
jg
cmp
push
cmp
jp
dec
and
aaa
cmp
jp
jg
xor
push
sub
fcomip
mov
js
ss
pop
das
and
cmp
cmp
(bad)
pusha
(bad)
jnp
jne
and
jge
xchg
xor
xor
jg
pop
jmp
push
push
and
push
dec
and
arpl
xor
gs
mov
scas
dec
push
pop
jg
adc
ret
xor
xor
sti
aas
push
push
sub
xor
and
sub
adc
xchg
(bad)
fidivr
jle
push
das
cmp
xor
shl
cs
sub
das
into
or
or
push
das
rcl
cmp
inc
das
mov
cmp
int3
push
das
sbb
pop
or
jbe
dec
and
ss
pop
icebp
int3
mov
push
push
jp
cmp
bound
xor
sub
sub
cmp
and
addr16
xor
push
pop
shr
fsub
dec
sub
inc
pusha
aaa
je
sub
jl
and
js
jge
das
dec
dec
xor
das
div
adc
cmp
add
add
inc
xor
jge
idiv
sbb
inc
and
jne
wrmsr
jbe
xor
mov
push
push
pop
xchg
mov
fs
es
add
outs
cmp
bound
jbe
fdiv
out
cmp
ss
xchg
or
shl
inc
sub
je
cs
clc
pop
or
push
dec
enter
add
arpl
jl
jmp
dec
push
je
sbb
cmp
out
jae
retf
gs
bound
and
jns
mov
jmp
push
xchg
ds
inc
aaa
jb
mov
inc
jle
push
and
(bad)
jg
jmp
fcomp
mov
cmps
push
mov
inc
mov
jbe
or
scas
mov
int3
pop
lods
mov
push
mov
fucomip
jmp
(bad)
push
push
mov
jg
or
jl
or
or
jl
or
sub
jno
xor
arpl
xor
jl
or
or
std
sbb
and
and
shl
lahf
cmp
sub
push
inc
push
sub
cmp
pop
not
popa
ret
cmp
je
push
es
fidiv
add
add
sub
xor
jl
pusha
mov
push
push
and
and
sub
jnp
cmp
push
jl
sub
jnp
jno
ss
inc
xchg
ins
fisubr
dec
or
(bad)
aas
inc
push
fs
test
sar
and
xchg
push
and
mov
outs
sbb
jae
je
scas
jmp
or
pop
sbb
xor
inc
pop
or
jg
jle
adc
pop
dec
add
ror
(bad)
and
xlat
scas
sar
outs
ds
sub
scas
daa
xor
in
push
dec
pop
aas
dec
push
cmp
push
xor
jbe
mov
pop
push
sub
cs
xlat
sub
popa
mov
push
pop
sbb
pop
clc
cmp
dec
pop
out
out
or
scas
shl
outs
push
push
mov
xor
ins
outs
stos
jmp
dec
setg
and
jle
sbb
add
(bad)
xchg
pop
inc
pop
ja
and
pop
mov
loopne
ja
xor
inc
push
inc
push
aaa
dec
daa
aaa
push
mov
xchg
pop
pop
or
cmps
push
inc
pop
(bad)
add
out
(bad)
cs
xor
inc
jg
jns
inc
and
push
and
and
jbe
jl
jle
or
dec
and
js
daa
inc
addr16
mov
ja
inc
jbe
mov
push
daa
inc
jbe
dec
and
or
out
sbb
jbe
or
push
and
fbstp
inc
xor
inc
push
idiv
jl
cmp
cmp
and
(bad)
jb
xchg
daa
iret
jno
xor
mov
mov
push
cmp
ja
inc
xor
jge
pop
add
dec
(bad)
aaa
xor
bound
and
cmps
inc
xchg
outs
or
outs
outs
sbb
(bad)
sbb
cmp
dec
aaa
and
es
out
hlt
ins
adc
jns
push
fs
fsub
and
jb
and
mov
and
dec
xchg
mov
outs
push
pop
add
das
push
xor
add
xor
leave
and
adc
leave
add
outs
bound
mov
lock
and
xor
loope
jns
or
(bad)
out
xchg
push
xor
jg
data16
sub
sbb
imul
xor
scas
arpl
in
or
xlat
adc
add
jl
or
cs
xchg
daa
stos
jmp
sub
jno
cs
daa
in
(bad)
(bad)
mov
adc
addr16
adc
addr16
daa
bound
and
addr16
idiv
jbe
and
adc
es
addr16
and
aaa
aas
fsubrp
push
ins
daa
jg
je
jg
xlat
out
xchg
out
push
lahf
pop
js
and
(bad)
out
jbe
es
inc
dec
das
sub
or
pop
add
push
out
mov
icebp
ret
push
and
scas
dec
daa
and
pop
or
retf
adc
jbe
jl
adc
sbb
jbe
sub
icebp
outs
leave
inc
aas
adc
jl
das
es
sbb
mov
xlat
sbb
ins
jo
mov
aas
sub
jg
sub
push
and
(bad)
bound
inc
scas
push
(bad)
cmp
sub
jno
push
jbe
call
dec
xor
jle
daa
inc
enter
adc
jne
xchg
push
push
ja
into
inc
(bad)
sbb
jmp
pop
xor
outs
xor
inc
cmp
pcmpgtb
es
das
rcr
xchg
sbb
aas
je
and
pop
(bad)
das
and
fs
and
js
ret
pop
xor
pop
push
cmp
sub
(bad)
mov
pop
xchg
cmp
jl
jnp
xlat
add
mov
and
dec
outs
push
es
push
and
cmp
push
and
fcom
test
pop
test
mov
gs
jae
jge
mov
push
jle
cmps
sbb
aas
pop
add
aaa
jle
push
bound
jae
jbe
adc
fisttp
and
fiadd
cmps
and
les
in
sub
daa
sub
push
das
and
inc
neg
add
jb
push
loope
xchg
es
mov
pop
pop
pop
adc
jbe
and
xor
push
fdivrp
pop
lods
cmps
dec
cs
and
xchg
xlat
jbe
adc
loope
mov
pusha
mov
add
in
sub
xor
adc
dec
data16
fidiv
or
inc
and
jae
es
ja
pop
push
inc
outs
add
jle
and
cld
push
(bad)
cmp
jmp
mov
or
jl
jg
jle
pusha
or
jl
push
stos
or
push
hlt
jl
or
push
loope
scas
or
inc
lock
push
lods
mov
call
rcl
push
push
cs
jno
sub
je
xor
sbb
faddp
cwde
add
pop
jg
xchg
ja
mov
lods
(bad)
data16
bound
mov
jo
aaa
bound
ret
pop
das
xor
push
sub
inc
(bad)
daa
add
out
xor
push
push
cmp
ja
arpl
add
cmps
xor
aas
push
inc
cs
jbe
inc
xor
fwait
pop
repnz
adc
aas
fidiv
push
test
out
and
jge
and
ds
outs
add
push
fnstcw
pop
div
inc
es
in
mov
xor
ds
add
outs
popf
inc
dec
(bad)
jno
sub
scas
mov
and
add
pop
jne
scas
sbb
arpl
mov
inc
add
das
pop
inc
sbb
adc
cmp
push
add
outs
pusha
add
sub
mov
pop
adc
scas
sbb
adc
out
cmp
(bad)
and
xor
scas
fidiv
call
jno
and
loopne
or
iret
pop
das
push
mul
call
dec
push
jb
and
fs
jae
or
push
xchg
xchg
dec
jbe
push
sub
and
jl
add
jb
ds
mov
pop
xchg
push
test
jg
xor
push
push
das
and
add
xor
push
es
push
arpl
int3
lods
adc
(bad)
or
xchg
or
and
gs
pop
add
or
pop
ja
cmp
push
and
imul
arpl
xor
or
(bad)
sbb
rcl
imul
es
push
cmp
out
lahf
push
outs
push
(bad)
mov
push
das
or
adc
popa
xorps
es
lods
cdq
mov
loopne
dec
cs
jle
push
mov
pop
sbb
jg
xor
pop
or
dec
aaa
pop
or
mov
jg
mov
jae
pop
and
pop
lods
sbb
lods
and
ficom
sbb
xor
arpl
aas
dec
xor
xchg
test
and
dec
xor
mov
pop
outs
pop
test
pop
ja
xchg
add
and
dec
pushw
sbb
and
fs
jle
inc
das
test
pop
xchg
push
cs
xlat
add
jle
(bad)
dec
xor
jne
xor
or
push
dec
ss
dec
aam
dec
out
sub
jne
pop
push
std
cmps
(bad)
push
pop
mov
sub
pop
ret
add
push
lahf
inc
xor
mov
push
xor
dec
sub
div
or
or
pusha
add
mov
in
cs
mov
arpl
pop
jbe
addr16
sbb
dec
or
shl
(bad)
or
int3
dec
push
pop
(bad)
sbb
pop
mov
push
xor
mul
dec
lds
dec
xor
dec
and
ja
and
mov
inc
outs
inc
cmovno
pop
adc
div
je
cmps
sub
dec
lock
hlt
fs
aas
or
jge
and
rcl
dec
and
outs
dec
inc
ret
push
pop
gs
arpl
nop
inc
je
jg
xchg
xchg
mul
aas
dec
and
xchg
syscall
(bad)
js
ins
ds
and
in
aaa
inc
xlat
scas
cmp
inc
push
test
jae
ja
lock
and
bound
pop
push
scas
sbb
dec
cs
jno
daa
(bad)
and
rol
xchg
adc
inc
add
ja
add
and
das
cmp
jl
adc
inc
in
test
and
adc
push
dec
mov
pop
cmc
daa
js
pop
outs
gs
cmovs
out
sub
sbb
pop
mov
push
inc
out
xor
pop
outs
cmps
push
hlt
inc
push
mov
push
push
ss
pop
or
(bad)
rol
dec
sub
jg
mov
mov
or
mov
jno
jo
retf
or
sbb
pop
(bad)
xor
add
and
ss
push
ss
add
jne
and
inc
or
add
push
inc
sub
gs
mov
cdq
rol
(bad)
jno
mov
rcl
lods
cmp
or
mov
push
add
xlat
pop
sahf
add
cmp
js
adc
pop
rcl
xor
ja
dec
jg
jo
jbe
out
je
xor
pusha
daa
jbe
dec
pop
sar
cmp
jne
lds
and
xchg
xchg
pop
add
(bad)
dec
loopne
sar
dec
punpcklwd
ja
cmp
arpl
cmps
jo
out
adc
xor
addr16
scas
ja
xor
sbb
fild
scas
sub
dec
das
pusha
jle
push
jg
scas
imul
or
sbb
jno
and
aam
mov
jno
add
sub
push
mov
xor
jo
pusha
push
sub
fisttp
jae
and
in
xchg
das
push
push
xor
shr
outs
das
xor
loop
imul
ds
xchg
movs
push
dec
xor
sbb
mov
stos
sbb
xchg
aaa
cmp
and
or
jmp
jle
daa
add
jle
push
cld
push
lahf
pop
push
es
and
jl
add
push
sub
cmp
shld
jle
add
pop
xchg
push
pop
nop
cmp
bound
scas
ss
inc
adc
outs
lahf
sbb
xchg
dec
add
xchg
cs
leave
scas
sbb
xor
jle
outs
jp
xchg
out
jp
es
test
cmps
nop
and
das
adc
(bad)
jmp
and
jo
pop
ret
add
jbe
and
ds
jns
cli
sbb
jnp
cmp
cmp
cmp
mov
push
sbb
and
fcmovne
cli
push
outs
inc
xor
sub
aas
in
shl
jp
aas
minps
sbb
add
inc
push
and
iret
mov
aas
out
jne
out
(bad)
push
frstor
push
(bad)
pop
jle
call
repnz
xor
xor
pop
push
addr16
jg
jbe
and
add
fnsave
ds
mov
(bad)
sbb
push
idiv
mov
and
xor
outs
sahf
fdivrp
mov
push
jno
inc
fnsave
xor
jg
test
(bad)
pop
add
jl
pop
xor
add
popf
xlat
jg
xor
aaa
das
das
or
add
addr16
fidivr
and
out
xchg
push
out
fisubr
jne
cmp
pusha
cmp
jle
fidiv
pop
fisubr
stos
push
push
fidivr
xor
(bad)
(bad)
jmp
inc
jno
and
jbe
or
jno
and
adc
and
jb
(bad)
aas
mov
and
inc
es
jno
cmp
mov
loopne
mov
mov
(bad)
(bad)
push
shl
mov
les
loope
mov
mov
dec
lods
mov
pop
(bad)
(bad)
std
fdiv
push
into
movs
mov
(bad)
mov
push
sar
jbe
ret
mov
add
add
and
addr16
adc
add
out
push
add
add
test
adc
loope
ds
adc
inc
and
pushf
fisub
push
and
fiadd
dec
xor
jl
ds
fisttp
mov
dec
mov
inc
pop
push
inc
and
mov
pop
(bad)
jl
out
pop
out
push
mov
jae
ds
scas
sbb
push
fisub
cmps
jb
pop
xor
jl
xor
jb
je
or
(bad)
cmps
or
adc
cld
popf
inc
push
or
pop
dec
xor
inc
xchg
shl
push
in
cmps
and
pop
pop
daa
add
daa
imul
inc
add
pushf
nop
adc
add
adc
test
push
push
cmp
fs
pop
inc
sub
push
xor
push
dec
jnp
cmp
inc
inc
inc
adc
arpl
sbb
data16
jae
lahf
mov
jmp
lock
xor
out
dec
push
inc
outs
inc
xlat
(bad)
out
and
dec
pop
outs
add
cmp
jo
out
push
jo
cmp
push
push
pop
inc
sub
sbb
das
and
aaa
or
out
fistp
das
out
pop
das
pop
dec
cmp
jg
xor
jno
sub
out
aaa
adc
and
cmp
mov
and
jge
push
mov
jmp
xor
dec
das
out
(bad)
pop
pop
mov
nop
je
or
mov
daa
outs
or
adc
(bad)
mov
and
push
pop
daa
das
inc
ja
cmps
add
ret
scas
or
and
push
dec
or
or
and
xchg
sysenter
jp
dec
and
adc
xlat
push
xor
jge
adc
cmp
es
sub
jg
dec
mov
inc
pop
or
pop
inc
add
sbb
adc
shr
fs
adc
test
unpckhps
or
or
cmp
push
xchg
sbb
or
and
and
aas
ja
lock
xor
ret
pop
outs
xor
leave
int3
or
aaa
das
dec
adc
mov
dec
add
cmp
inc
lahf
pusha
add
loope
pop
push
cld
ins
inc
mov
cmp
aas
fs
aad
dec
pop
add
xor
inc
push
loop
jmp
jno
xchg
push
xor
fs
xor
cdq
call
adc
sub
adc
pop
cs
iret
pop
and
mov
sub
mov
and
pop
sbb
and
push
loop
in
aas
aaa
das
das
mov
fisub
iret
addr16
jg
sub
pop
cmps
sub
jns
dec
xlat
push
add
inc
add
push
push
sbb
pusha
inc
xor
dec
or
ss
sbb
pop
push
xor
ss
or
addr16
cmp
cmps
inc
rcl
arpl
dec
xor
jl
push
(bad)
push
xor
jns
mov
push
push
lahf
push
cmp
push
jmp
or
xchg
inc
mov
enter
inc
(bad)
xor
out
frstor
pop
push
jle
sbb
and
and
jo
xor
out
ror
es
and
loopne
mov
outs
pop
add
cmp
cmp
data16
xadd
sub
dec
mov
add
mov
mov
push
ror
mov
mov
sub
jae
xchg
jg
mov
repnz
call
lock
lods
mov
movs
test
jbe
int
cmps
cli
ret
or
test
push
push
add
data16
mov
xchg
fld
xchg
repz
jns
pusha
mov
hlt
(bad)
cmps
push
xor
jg
dec
cmp
push
xor
(bad)
js
push
mov
into
es
push
arpl
inc
push
pop
add
into
push
es
imul
adc
iret
out
es
inc
shl
imul
xor
push
pop
sbb
pop
inc
push
adc
cmp
jl
jg
sbb
js
stos
adc
jne
push
push
fisub
aad
add
in
fwait
je
jbe
xor
push
daa
shufps
xor
and
pusha
dec
xor
cmps
dec
xchg
fisubr
ds
unpckhps
cmp
add
mov
jge
outs
cs
and
inc
xchg
sahf
jg
sbb
jae
and
push
bound
fs
xor
stos
(bad)
aas
or
and
sub
scas
(bad)
ja
inc
dec
pop
gs
adc
rol
imul
bound
pop
adc
adc
adc
sbb
daa
or
or
ss
sub
jo
outs
xchg
add
ss
pusha
push
sbb
(bad)
pop
adc
outs
mov
iret
repz
daa
and
adc
clc
test
xor
push
sub
jle
xor
out
fisub
cmp
push
pop
cmp
jbe
sahf
add
jne
cmps
aas
ror
pop
jle
jno
ins
jns
das
pop
test
jnp
jle
inc
ds
je
ss
(bad)
inc
sub
pop
addr16
push
bound
pop
push
imul
jae
lods
ficomp
adc
xchg
inc
clc
add
jge
jno
xor
push
push
push
and
aas
or
bound
inc
xchg
inc
paddb
dec
push
data16
iret
add
xor
pop
adc
je
sub
xchg
pop
pop
push
adc
inc
inc
cmp
jbe
shl
fsubr
push
or
scas
pop
push
sub
or
pusha
pop
scas
adc
pop
pop
popa
stos
mov
(bad)
scas
sub
pop
icebp
mov
inc
mov
cmp
(bad)
push
cmps
mov
and
pop
cmp
mov
lahf
ja
push
cmp
in
and
into
fistp
xor
and
outs
xor
cwde
pop
lock
cmp
cmp
xchg
cmp
popa
cwde
xor
dec
and
sub
into
out
mov
or
mov
cmp
ss
jnp
push
iret
loope
in
mov
push
(bad)
xchg
ret
mov
jg
das
lea
inc
cmps
push
cwde
or
jmp
lahf
js
or
(bad)
push
xor
mov
out
popa
ret
inc
imul
and
cmp
fcom
push
test
pusha
outs
and
mov
add
iret
push
sbb
jno
sub
out
push
adc
add
mov
sbb
sbb
cmp
test
aas
push
mul
add
pusha
fiadd
add
inc
adc
dec
daa
cmp
add
bound
adc
or
mov
sbb
pop
addr16
ins
iret
add
out
push
bound
xchg
mov
out
sbb
xlat
add
jg
popa
das
and
arpl
addr16
mov
sbb
dec
ds
sub
jne
add
push
xchg
add
imul
scas
pop
cmps
add
xchg
jl
dec
push
xchg
fdiv
push
mov
xor
jg
push
in
adc
(bad)
pusha
or
mov
sahf
xor
add
mov
ds
pushf
push
xor
dec
loope
push
pop
dec
addr16
mov
and
and
sub
cmp
out
push
sub
mov
outs
mov
cmps
arpl
xor
aas
adc
addr16
ds
jno
mov
test
das
mov
xchg
jbe
fist
mul
outs
adc
int3
fmul
and
aaa
cmovns
ja
(bad)
out
sbb
retf
pusha
push
push
xor
js
div
outs
out
add
cmp
and
mov
pop
push
daa
cmps
aas
sbb
inc
push
outs
daa
je
xor
scas
push
or
aaa
pusha
adc
int3
aas
inc
add
je
(bad)
mov
(bad)
push
es
xor
cmp
pop
fistp
(bad)
jbe
xchg
dec
ss
pop
xor
movs
add
pop
addr16
mov
aas
loope
(bad)
xor
xor
add
aaa
jl
and
xor
pusha
shl
add
scas
data16
call
dec
and
or
aaa
emms
popa
daa
or
add
sbb
es
jbe
adc
xor
mov
arpl
aaa
into
outs
jge
push
cmp
adc
fist
push
mov
out
scas
cmp
out
ins
jno
push
nop
int3
shl
out
addr16
(bad)
push
addr16
ss
adc
sub
jo
and
jae
addr16
(bad)
jmp
aaa
adc
fs
push
jno
push
push
add
adc
jno
sub
lds
cmp
inc
and
je
daa
fimul
addr16
lahf
jecxz
nop
or
add
sbb
push
adc
add
jg
aas
jae
and
pop
mov
push
mov
es
adc
(bad)
push
ss
out
lahf
js
cmps
scas
jo
jno
out
loope
nop
or
adc
xchg
test
jae
jl
push
sub
pop
repnz
xor
adc
and
cmps
xor
pop
aad
aaa
inc
outs
es
scas
fdiv
movs
push
das
add
jo
and
(bad)
push
add
adc
jbe
and
jb
cmp
push
add
adc
and
adc
je
pop
xchg
push
sbb
sub
data16
xchg
xchg
(bad)
ja
inc
es
inc
ins
pop
and
jnp
adc
movs
clc
sub
and
loop
pop
loop
ret
dec
and
xchg
mov
push
jecxz
out
push
pop
sbb
scas
xor
xor
inc
adc
xor
aaa
push
aas
stos
sbb
inc
cmpps
fistp
(bad)
outs
xor
das
daa
push
dec
xchg
ret
or
aam
push
cmp
mov
(bad)
jmp
and
dec
pop
mov
pusha
or
bound
xchg
dec
wbinvd
mov
imul
or
jg
(bad)
(bad)
inc
imul
fs
sub
push
je
aaa
jge
cmp
pusha
jns
xor
or
inc
dec
cld
idiv
imul
ja
adc
jge
cmps
pop
push
jge
sub
mov
jmp
ja
adc
and
outs
pop
mov
dec
pop
and
out
pop
or
daa
pop
xor
adc
inc
test
lahf
js
fs
cmp
das
test
mov
mov
xchg
cmovle
jbe
fidivr
jae
addr16
sbb
(bad)
pop
mov
mov
inc
sbb
adc
sar
dec
xor
je
mov
dec
fdivr
inc
sub
gs
cmp
stc
inc
js
test
add
xor
push
cmp
mov
dec
in
push
pop
inc
pop
mov
dec
mov
lods
jge
neg
addr16
and
imul
out
add
push
bound
aas
sar
nop
(bad)
adc
fs
das
hlt
xor
push
(bad)
cmp
pop
pop
add
rol
outs
push
xchg
push
inc
push
push
xchg
pop
imul
or
fisttp
jl
and
pop
push
jno
loope
fst
push
push
push
jg
sub
push
xchg
and
je
push
gs
push
dec
daa
mov
imul
das
push
aas
dec
sbb
(bad)
(bad)
sbb
fidivr
ins
test
sub
sub
arpl
scas
adc
inc
pop
push
or
enter
pop
mul
dec
(bad)
fsub
add
out
aas
imul
lock
loop
jmp
js
and
fidiv
movs
call
cmps
(bad)
push
adc
(bad)
pop
test
push
inc
inc
mov
(bad)
push
dec
ss
(bad)
idiv
sbb
add
xchg
add
hlt
xor
adc
adc
mov
pop
iret
ins
jae
and
gs
pop
aaa
or
loope
add
arpl
test
rol
and
push
xchg
push
inc
and
pusha
mov
call
cmps
mov
outs
sub
xor
sbb
inc
sbb
pop
push
pop
add
pop
ss
ss
push
push
xor
xchg
addr16
inc
mov
xchg
ja
mov
sub
outs
inc
sbb
pop
clc
add
xor
iret
and
nop
pusha
push
(bad)
fisubr
pusha
push
(bad)
xchg
push
jb
(bad)
stos
xor
into
cmp
outs
push
outs
xor
pop
outs
and
jo
aaa
sbb
imul
outs
push
out
daa
inc
jnp
add
aaa
imul
daa
inc
bound
sbb
push
xor
and
inc
xor
mov
outs
rcl
sbb
mov
ins
xor
nop
or
out
jg
xchg
cmovg
es
and
pusha
or
mov
cmovg
cmp
mov
scas
dec
ins
cmp
mov
fsub
cmp
push
sub
popa
push
and
adc
push
adc
jno
and
mov
dec
and
cmp
outs
daa
(bad)
sub
jnp
(bad)
daa
(bad)
das
sub
enter
aaa
(bad)
daa
mov
loopne
fbld
and
jne
ins
das
jge
adc
daa
scas
jnp
and
mov
outs
daa
loopne
stos
inc
mov
mul
pop
fcmovb
daa
jo
pop
bound
and
aas
and
add
fisttp
cmp
xchg
jp
adc
mov
aas
ja
mov
add
or
cs
xor
sub
pop
cmp
aas
ror
inc
dec
push
into
(bad)
das
sahf
ret
es
daa
adc
outs
fisttp
mov
nop
inc
js
cmp
mov
or
test
fidivr
sub
popa
aad
pop
arpl
cmps
fs
sbb
dec
aaa
inc
(bad)
js
fs
ja
fild
add
pop
(bad)
fisttp
clc
(bad)
js
inc
sub
jae
sub
cwde
push
fbstp
xor
jns
outs
ins
sub
outs
data16
test
xor
cs
jo
and
jne
popa
test
test
pop
inc
ss
jg
adc
push
ja
pop
jo
add
cli
pop
mov
pop
data16
out
sub
mov
les
xchg
push
jno
sbb
pop
push
push
jno
ins
xchg
push
sbb
outs
adc
pop
ins
adc
push
push
pop
pop
jbe
or
not
addr16
scas
xor
(bad)
hlt
shr
jno
mov
jae
sub
popw
push
data16
and
adc
or
push
mov
dec
jp
inc
not
sbb
xchg
pushf
xchg
nop
cmp
sub
ja
and
mov
push
xor
inc
ja
xor
push
je
jg
rcl
das
imul
xchg
fiadd
jg
inc
ja
push
test
mov
scas
add
mov
into
inc
pop
and
cmps
mov
lods
add
mov
xlat
xchg
add
push
pop
or
push
xor
dec
aaa
pop
out
xor
pop
sub
iret
sub
add
fisub
xor
or
inc
and
ja
mov
and
out
mov
xchg
adc
xchg
inc
adc
inc
out
and
dec
push
inc
pop
pop
or
cmp
push
(bad)
mov
outs
aaa
fild
(bad)
mov
fld
mov
dec
xchg
cmp
push
xor
or
(bad)
and
bndldx
sbb
push
push
bswap
repz
pop
or
fadd
and
das
aaa
das
sub
in
xor
cmp
dec
es
das
and
add
mov
and
xchg
dec
test
jbe
push
aas
push
push
cs
loopne
pop
fs
addr16
mov
sbb
jbe
inc
into
or
inc
cmpps
ret
push
jle
adc
sbb
xor
ja
and
jno
movs
xor
ins
mov
mov
mov
(bad)
xlat
mov
or
mov
into
push
pop
sahf
sub
sub
fidivr
out
mov
jno
adc
push
adc
push
mov
arpl
dec
xor
aaa
imul
fs
fwait
or
push
mov
cmp
jle
xchg
scas
mov
mov
loope
pop
xor
je
fs
xor
rol
pop
push
outs
push
movs
mov
xor
and
adc
movs
cmp
lea
mov
pop
bnd
fidiv
xor
inc
and
fs
jnp
inc
scas
mov
adc
(bad)
aaa
lods
sbb
adc
enter
dec
add
inc
xor
and
das
sbb
jg
xchg
ret
jmp
gs
sub
jne
pop
mov
push
jne
xor
jle
bound
mov
inc
inc
pop
daa
mov
mov
ja
pop
push
jg
push
jg
inc
dec
not
push
(bad)
je
sub
addr16
stos
or
jg
add
das
add
push
mov
dec
jb
adc
jl
stos
cmps
inc
es
add
mov
rcr
lahf
cmps
jge
imul
jo
inc
sub
scas
fist
(bad)
cmps
and
inc
dec
repnz
sbb
test
test
fs
outs
ja
mov
sbb
addr16
xor
cld
popf
push
mov
dec
and
jne
xor
jne
addr16
(bad)
adc
jl
and
mov
and
cmps
fimul
push
cmp
jle
adc
inc
out
ds
mov
add
push
and
sub
ja
stos
movs
mov
pop
and
lahf
adc
ja
push
pop
pop
add
mov
pop
or
es
push
imul
(bad)
(bad)
cmps
pop
cwde
ins
ja
adc
popa
test
es
inc
jle
fisub
mov
sub
mov
pusha
mov
inc
push
je
(bad)
xchg
adc
push
aaa
push
pop
aaa
sbb
ja
jbe
pop
add
(bad)
push
imul
pop
popa
in
add
out
inc
aaa
sbb
push
inc
test
fsub
aaa
stos
cmp
add
add
pop
push
neg
jb
outs
xor
push
add
or
loopne
push
add
jle
pop
scas
push
push
pop
jb
add
jno
rol
inc
ret
imul
mov
mov
inc
arpl
inc
cs
sub
inc
inc
jno
xchg
cmps
pusha
jo
push
dec
inc
push
test
pavgb
jne
out
xor
andps
(bad)
cmp
push
scas
add
xor
xor
inc
add
hlt
mov
and
push
or
push
das
mov
xor
pop
jns
in
test
cs
sub
jg
jb
(bad)
mov
cmps
loop
lods
mov
dec
mov
and
das
aam
dec
mov
inc
mov
mov
mov
lock
mov
aam
(bad)
jne
in
das
and
mov
xor
mov
test
cmc
shl
scas
mov
leave
mov
hlt
enter
ret
sbb
movs
mov
aas
repz
nop
test
mov
pop
mov
into
push
or
daa
clc
icebp
(bad)
cmps
jbe
ja
cmc
into
lods
test
lock
shr
test
mov
es
xor
data16
(bad)
out
and
(bad)
ror
int3
les
das
loopne
sub
mov
jmp
es
popa
(bad)
sub
daa
adc
or
jb
adc
push
sub
dec
push
jl
loopne
push
out
sbb
dec
jae
das
(bad)
or
inc
fisub
sbb
(bad)
pop
push
sbb
mov
inc
ins
adc
cmps
jbe
loop
dec
xchg
xor
lock
add
cs
adc
push
inc
sbb
sub
cli
ja
sbb
cmp
outs
cs
lock
pop
adc
mov
div
cwde
and
xchg
bound
jle
sbb
dec
adc
call
faddp
inc
out
push
and
xchg
xor
jl
xchg
mov
xor
xor
dec
push
or
add
sbb
out
xlat
jne
and
pop
ins
(bad)
pop
pmaddwd
cmp
cmp
shl
pop
or
(bad)
dec
jge
and
cmps
in
stos
js
sbb
ds
inc
jmp
pop
push
push
data16
dec
retf
jle
jb
das
cs
stos
pop
mov
add
xor
(bad)
aam
jae
inc
xchg
pop
scas
push
pop
stos
push
jle
mov
cs
ja
push
xor
and
add
inc
adc
push
jg
and
xor
(bad)
jne
stos
adc
sub
mov
outs
or
ds
mov
pop
je
test
cwde
aas
push
out
xchg
mov
ja
aas
(bad)
jno
ror
jno
dec
jmp
inc
pop
xchg
push
sbb
test
jge
or
and
ins
xor
sbb
fwait
jmp
pop
inc
add
adc
pusha
jne
push
ins
adc
adc
jbe
jmp
adc
push
add
push
push
jns
and
jo
and
js
jno
aam
ret
mov
mov
lahf
inc
lahf
add
sti
fwait
(bad)
and
adc
pop
js
add
adc
xchg
call
gs
add
push
adc
dec
cmps
or
mov
les
es
pusha
(bad)
bound
push
shl
pusha
out
lds
add
xchg
cmp
pusha
jbe
jo
cmp
dec
pop
xchg
add
aas
mov
pusha
push
push
pusha
push
or
mov
jne
xor
xchg
xor
mov
sar
dec
sub
pusha
cmp
inc
add
xlat
xor
jne
scas
add
sahf
mov
inc
jge
rol
and
and
inc
cmps
mov
pop
arpl
cmps
jae
xor
bound
jmp
push
punpcklbw
jg
out
sub
dec
nop
jg
mov
push
xor
adc
xor
and
and
cmps
jbe
(bad)
push
add
push
jg
xor
outs
and
push
and
xchg
daa
data16
cmps
cmp
test
jbe
and
push
cs
xor
fdiv
fdiv
push
push
jb
or
ss
jbe
into
or
sub
dec
add
mov
adc
dec
and
out
out
jp
jg
into
push
jg
add
pop
mov
pusha
cmps
aad
xor
rcr
(bad)
popa
sbb
sbb
lea
rol
and
push
adc
sahf
fidivr
sub
push
into
xor
push
and
inc
mov
jbe
and
or
inc
and
jo
mov
xlat
dec
(bad)
inc
(bad)
loope
dec
xchg
sahf
and
jbe
cmp
ins
mov
das
pop
sub
fsub
xor
out
adc
inc
and
sub
xchg
cmp
(bad)
cmp
in
mov
mov
stc
add
mov
shl
clc
into
scas
mov
(bad)
dec
cmps
xchg
ss
(bad)
clc
(bad)
stos
mov
inc
mov
call
les
mov
retf
mov
xor
scas
movs
loopne
mov
lock
pusha
mov
xor
jg
loop
movs
mov
sti
add
test
sti
fnsave
loop
add
out
add
test
mov
or
jbe
int
in
push
mov
out
in
adc
mov
stc
enter
pusha
mov
lock
pop
mov
loope
mov
repz
sub
in
xchg
nop
mov
mov
clc
outs
ss
repnz
in
mov
bnd
pusha
sub
out
mov
sar
inc
inc
dec
push
add
pop
mov
lock
mov
jmp
mov
in
push
mov
cld
data16
pop
popa
mov
mov
scas
(bad)
shr
fistp
cli
shl
mov
movs
mov
fild
or
or
loop
ss
test
(bad)
scas
data16
jbe
jg
bound
mov
loop
loopne
push
mov
outs
mov
(bad)
xor
clc
cs
mov
retf
xchg
push
mov
push
sbb
movs
jbe
shl
sub
push
mov
sub
loopne
bnd
das
ror
mov
daa
(bad)
jle
mov
in
sti
fdiv
mov
mov
mov
out
cmps
(bad)
(bad)
dec
cmps
jg
shl
jbe
(bad)
movs
xlat
das
scas
cmps
clc
into
lock
mov
mov
dec
in
mov
scas
(bad)
imul
dec
lock
int
pop
cmps
call
xchg
add
pextrw
sbb
retf
mov
mov
out
aaa
pop
icebp
loopne
scas
mov
ret
movs
mov
mov
(bad)
popf
out
ret
clc
mov
mov
mov
jbe
es
cmps
enter
popa
sub
cs
div
inc
cmc
or
pop
ds
(bad)
mov
repz
not
sub
xchg
xchg
std
retf
mov
sub
push
mov
pusha
shl
movs
(bad)
jbe
or
cs
cmp
sbb
sub
sub
and
sub
xchg
lock
lahf
xor
mov
dec
ja
les
ret
pop
xor
in
adc
add
jg
jg
or
inc
or
outs
addr16
and
adc
or
pop
inc
sub
imul
cli
mov
ja
and
sub
jns
sbb
lea
aas
scas
or
add
stos
into
sbb
imul
arpl
xor
test
xlat
push
sbb
jle
sbb
mov
(bad)
mov
jg
mov
mov
push
sbb
ret
cmps
lahf
add
adc
push
xchg
cs
ja
fadd
pop
dec
sbb
neg
ja
mov
pusha
mov
pushf
icebp
and
das
pop
jmp
ins
iret
mov
mov
out
push
sbb
imul
jg
cmp
add
xchg
call
jmp
sbb
daa
sub
adc
cs
push
add
sub
xchg
push
add
es
outs
add
xchg
pop
jbe
sbb
ret
call
sub
push
xor
(bad)
(bad)
xor
sub
ret
dec
mov
pop
lahf
mov
fisub
pop
adc
(bad)
xor
mov
xor
popa
cwde
outs
dec
xchg
int
push
enter
xor
jecxz
loopne
jg
pop
and
and
ror
outs
scas
jg
sub
jg
and
sbb
cmps
out
outs
or
or
add
adc
add
pop
xor
jbe
bound
je
pop
rdpmc
inc
punpckldq
pop
pop
xchg
iret
test
jbe
out
adc
and
xor
ja
cmp
mov
inc
pop
xor
scas
adc
and
(bad)
(bad)
call
jb
sub
outs
cmp
push
jns
push
adc
push
addr16
and
add
cmp
lods
inc
jb
xchg
and
mov
inc
or
outs
add
mov
fcomp
mov
dec
or
push
xor
push
mov
imul
mov
pop
rol
xchg
or
sbb
inc
ret
pusha
xchg
outs
shl
push
push
daa
adc
scas
ds
xchg
aas
jge
xchg
ret
jle
and
cmp
es
dec
enter
push
add
pop
push
rol
jbe
xchg
and
icebp
push
(bad)
jle
xchg
inc
add
inc
xor
xor
enter
pmulhuw
jno
cmp
out
cmp
add
jg
jge
and
jbe
mov
scas
xor
jne
pop
push
inc
aaa
dec
pusha
and
pop
imul
xchg
inc
mov
jo
adc
pusha
jo
jno
push
cmps
pop
daa
and
push
inc
icebp
push
xlat
and
arpl
pop
add
push
inc
and
push
fimul
stos
xor
xor
xor
pop
or
jo
out
or
mov
cmp
xor
sub
arpl
jecxz
xchg
sbb
ss
mov
icebp
fidivr
inc
mov
arpl
mov
mov
aas
addr16
mov
daa
and
aaa
(bad)
adc
pop
and
in
jne
ds
inc
adc
lea
add
adc
and
out
adc
cmp
aaa
push
inc
sbb
pop
jg
pop
sub
adc
inc
arpl
jg
sub
add
sub
aaa
outs
pop
push
pop
and
das
lahf
ins
out
dec
add
movs
mov
xchg
inc
sub
imul
push
pop
sub
push
out
xor
test
xchg
aam
jmp
and
xchg
cmps
push
das
loope
lock
sub
xor
push
mov
hlt
add
fsubrp
xchg
sbb
dec
(bad)
jl
cmpps
mov
push
movs
int3
inc
(bad)
je
aam
ret
jbe
daa
scas
jne
sub
jg
and
test
xor
pop
mov
cmp
pop
scas
adc
cmps
jl
pusha
mov
dec
push
add
jle
adc
mov
je
xchg
push
loope
xor
xor
cmp
outs
scas
ja
(bad)
xchg
cmp
or
push
mov
add
dec
ret
push
test
aaa
movzx
bound
shl
jle
adc
sbb
pop
adc
and
xor
or
bound
imul
ja
jns
jge
pop
inc
push
jg
adc
(bad)
pop
push
push
and
mov
or
xor
jns
add
jns
scas
icebp
ins
bound
mov
call
bound
pop
pop
icebp
push
push
push
and
jg
movs
mov
jns
ds
rcl
es
or
outs
or
pop
loope
inc
aas
push
dec
cmp
cmp
sbb
and
pop
adc
add
sbb
push
jg
dec
test
mov
inc
xchg
or
xchg
pop
adc
(bad)
dec
fdiv
dec
push
lahf
inc
or
mov
jo
sbb
dec
or
push
adc
jae
mov
adc
cmps
mov
or
add
ja
push
call
frstor
ss
pop
jae
sub
adc
bound
nop
(bad)
mul
js
adc
aaa
out
mov
jp
pop
push
jg
jns
jle
lea
jecxz
dec
das
inc
sbb
add
nop
mov
das
push
sub
sub
cs
xor
add
scas
fs
daa
ins
addr16
jne
daa
and
pop
xchg
dec
jno
adc
sbb
jb
addr16
pusha
nop
(bad)
pusha
mov
xchg
addr16
dec
(bad)
(bad)
jg
out
imul
gs
sbb
outs
and
addr16
push
sbb
call
jns
es
push
pusha
push
pop
and
pushaw
fwait
or
aaa
ins
pop
shl
and
xchg
add
push
xchg
inc
rcr
add
cmp
jle
pusha
jp
dec
je
fadd
push
cld
sbb
add
adc
cli
sbb
out
dec
outs
and
mov
inc
dec
cmp
adc
bound
jnp
sbb
and
mov
add
(bad)
out
lds
clc
jg
jo
push
popa
add
imul
jne
push
push
adc
push
add
daa
gs
and
sbb
pusha
ja
pop
sub
dec
rcr
pop
iret
dec
dec
cmps
sbb
inc
add
and
data16
cmps
jg
adc
pop
jb
and
jb
es
ret
sbb
and
jne
and
xor
xchg
push
mov
int
xchg
and
jbe
and
sub
jne
and
sbb
ficomp
sbb
and
inc
jno
xchg
add
jae
imul
aas
jne
or
push
les
jg
adc
xor
push
inc
daa
and
adc
push
jp
pop
dec
daa
into
daa
scas
rol
adc
jge
aas
push
gs
push
mov
ins
push
push
mov
xchg
and
data16
xchg
div
data16
xor
pop
jge
les
inc
and
and
lahf
addr16
fist
addr16
arpl
jne
jg
jnp
mov
dec
mov
mov
out
lock
ins
or
daa
or
mov
loope
movs
or
jg
adc
daa
es
cdq
pop
or
xor
pop
adc
push
mul
ds
mov
inc
cmp
pop
mov
ins
das
sbb
and
add
and
cmp
xor
pop
sbb
dec
rcl
pop
push
or
arpl
or
addr16
(bad)
jmp
mov
and
pop
mov
jmp
adc
pop
jle
icebp
lods
loope
add
scas
cmp
mov
(bad)
sub
mul
jnp
mov
adc
adc
inc
mov
sbb
and
jbe
fdiv
mov
adc
adc
and
nop
pop
add
addr16
add
push
or
add
packuswb
pop
sar
ins
ins
sbb
xor
in
pop
xchg
jl
jle
jg
xor
and
addr16
jae
pop
cmp
(bad)
(bad)
mov
test
outs
clc
push
cs
inc
sbb
cmps
xor
adc
ret
dec
ds
sbb
pop
scas
mov
sbb
jne
push
push
inc
and
in
cmp
test
inc
mov
aas
out
mov
aaa
(bad)
(bad)
cmp
sbb
and
jns
and
sbb
jb
and
mov
jae
xchg
dec
sub
data16
push
or
ins
xchg
xchg
xor
add
mov
add
sub
popf
neg
xchg
sbb
nop
clc
xchg
ficom
bswap
adc
push
jl
inc
and
cmp
or
push
inc
push
sbb
adc
add
pop
leave
outs
imul
aas
dec
std
shl
sahf
xchg
or
hlt
(bad)
ds
aas
sahf
dec
and
aas
push
xchg
outs
fs
xor
das
outs
(bad)
sbb
jbe
push
push
xor
stos
rcl
(bad)
sbb
ss
jge
mov
add
aas
push
sahf
gs
gs
cs
ins
add
pop
inc
mov
mov
cmp
sbb
ja
adc
loopne
arpl
push
gs
adc
jp
(bad)
jg
outs
mov
inc
sub
das
cmp
ss
shr
(bad)
mov
mov
das
test
jae
push
push
sub
js
xor
aaa
jl
daa
(bad)
and
adc
in
scas
mov
mov
dec
mov
clc
inc
mov
dec
jae
sub
scas
sbb
addr16
and
dec
test
ret
aaa
ja
out
adc
add
mov
scas
adc
cmps
mov
and
clc
(bad)
pusha
stos
loop
mov
cmps
lock
movs
movs
loopne
pusha
mov
inc
push
push
cs
mov
inc
push
shl
jbe
ret
mov
(bad)
(bad)
cdq
fimul
jbe
mov
cmps
loop
test
das
mov
sub
sub
(bad)
inc
es
js
push
or
jbe
mov
lahf
out
add
xor
and
push
push
or
push
xchg
inc
lahf
add
div
jae
sbb
and
mov
loope
mov
lock
push
mov
mov
xor
scas
pop
or
clc
mov
add
loop
div
(bad)
fcmovne
mov
loope
scas
inc
scas
jbe
jmp
mov
clc
add
in
sbb
jae
out
push
jmp
adc
ins
and
push
jnp
adc
cmp
ds
shl
(bad)
call
je
push
popa
add
push
adc
push
add
jg
lea
inc
adc
adc
sbb
mov
push
sbb
pop
or
sub
push
xor
cdq
sbb
inc
sub
mov
je
pop
jg
lods
mov
mov
test
push
loopne
inc
data16
data16
cmps
mov
inc
dec
pmaxub
fwait
or
or
aad
mov
jg
fs
cbw
pusha
jae
and
jg
cmp
push
add
sbb
sar
push
adc
push
push
jbe
dec
push
xor
(bad)
scas
sbb
popa
inc
jbe
pop
pop
dec
pop
aas
jl
xlat
scas
sub
or
jbe
dec
mov
add
xlat
shl
push
ds
adc
and
and
jbe
add
mov
mov
es
dec
test
cmps
push
mov
push
into
arpl
jae
pop
xor
dec
jno
fsub
test
int3
lods
es
(bad)
mov
or
data16
es
pop
xchg
pop
(bad)
push
add
add
add
and
sbb
imul
cmps
mov
loopne
pop
or
daa
out
xor
ds
xor
shl
aas
xchg
aas
sub
je
imul
lea
add
es
aas
mov
pop
push
cld
or
jb
push
gs
and
arpl
push
jns
and
pop
or
cmps
jbe
sub
push
mov
sub
cmps
and
or
aaa
sub
cmp
outs
xor
and
add
jbe
push
adc
mov
fild
xchg
mov
xor
xchg
test
test
test
push
push
xor
fs
cmp
add
arpl
lods
rcr
es
das
iret
xor
lods
add
jbe
xor
pop
xchg
sbb
or
imul
aas
sbb
pop
or
xor
es
sbb
nop
add
xor
test
mov
xor
jbe
inc
(bad)
out
sbb
in
outs
pop
dec
add
psrad
inc
aas
inc
pusha
cs
xor
add
out
cmps
cmc
adc
jne
js
daa
dec
fwait
push
xchg
jns
dec
cli
xchg
(bad)
push
mov
scas
mov
cmp
daa
fist
iret
daa
sub
enter
movs
arpl
das
xchg
dec
and
test
outs
(bad)
cmp
shl
das
pop
mov
ins
sbb
mov
dec
jb
add
push
outs
mov
push
out
and
jg
js
pop
push
punpckldq
push
aaa
movs
mov
jg
ror
or
(bad)
pusha
pop
cs
adc
les
adc
push
jns
mov
mov
jle
pop
ja
add
jge
arpl
addr16
xor
pop
fisttp
pusha
inc
and
pop
sub
imul
jbe
loopne
rcl
xor
or
pop
adc
(bad)
push
xor
ds
js
mov
imul
addr16
and
clc
mov
ja
push
push
dec
xor
push
cmps
xor
adc
pop
pop
add
mov
xor
push
inc
cmps
ficomp
daa
push
ins
xchg
mov
inc
mov
or
and
pop
dec
xor
dec
push
or
cmp
inc
pop
add
dec
sahf
dec
or
add
in
inc
add
pop
pusha
push
add
pop
adc
inc
jae
pop
dec
push
fs
ja
push
add
push
dec
enter
jbe
dec
xor
inc
pop
dec
test
adc
add
inc
xchg
aad
ds
push
cs
outs
pusha
(bad)
add
cmp
pusha
je
test
pop
imul
mov
xchg
jmp
out
jns
adc
push
jl
or
es
push
outs
adc
es
pusha
xor
add
pop
push
adc
add
dec
outs
call
jl
movntq
adc
test
sti
sbb
adc
jle
data16
xor
fld
push
fisttp
out
xlat
shl
adc
push
add
bound
adc
fcmovne
pop
mov
cs
sub
jae
inc
inc
pop
mov
adc
and
add
and
xchg
sahf
mov
xchg
or
xchg
fs
aas
jae
stc
fwait
(bad)
dec
das
jae
pop
inc
push
das
popa
pusha
or
add
fild
add
xor
or
icebp
mov
dec
aas
je
add
ja
sub
xchg
iret
ja
test
into
push
xlat
pop
dec
and
add
aaa
sbb
ror
xor
push
sbb
mov
inc
and
dec
inc
ss
jne
jg
js
nop
pop
into
xor
outs
add
sbb
cmp
arpl
jo
inc
xor
sub
xor
dec
rcl
jge
js
xor
add
or
daa
daa
pop
pusha
adc
inc
cmps
aaa
push
loope
mov
pusha
inc
mov
neg
js
call
cmps
xor
xor
aaa
lahf
dec
inc
dec
and
sahf
add
pusha
xor
dec
into
cs
jbe
loop
inc
rcpps
jle
adc
iret
or
or
sub
push
enter
addr16
pop
jbe
xchg
pop
add
sbb
sbb
pop
add
push
or
in
std
out
inc
push
and
cmp
test
(bad)
invd
push
fmul
adc
or
aaa
sbb
outs
ja
add
sbb
cmps
scas
adc
ins
loopne
jl
jbe
xor
sub
in
add
punpcklbw
pop
or
arpl
mov
dec
outs
mov
(bad)
or
jp
das
pop
dec
jo
mov
ja
xor
xchg
data16
add
out
aas
push
pop
ret
jp
fnsave
ss
pusha
dec
xor
jle
dec
into
scas
sub
pop
push
pop
mov
adc
stc
or
das
or
sbb
add
lsl
or
nop
scas
sahf
cmp
sbb
xor
sbb
dec
cmps
in
add
mov
inc
add
das
pop
pop
adc
out
xlat
jo
and
loope
push
(bad)
push
jle
sub
cmps
dec
das
pusha
add
sub
cmp
and
sbb
add
mov
pop
inc
mov
and
adc
sti
das
pop
outs
das
fwait
xor
sub
adc
test
js
cmp
push
sahf
jle
jmp
jle
addr16
pop
pusha
pop
push
xchg
adc
dec
cmp
or
pop
and
adc
test
or
or
sbb
ss
mov
cmp
aaa
and
inc
out
ins
pop
pusha
and
dec
jecxz
outs
out
sub
daa
adc
adc
inc
xchg
inc
fimul
aam
sar
and
out
push
pop
pop
ja
daa
add
das
pop
inc
nop
inc
outs
xchg
pop
dec
cmp
adc
cld
inc
xchg
cmp
pop
test
pop
sbb
dec
push
mov
pmaxub
or
or
mul
mov
pop
dec
pop
js
les
dec
repnz
loopne
pop
pop
loope
inc
adc
mov
inc
or
xor
and
mov
sbb
xchg
frstor
push
and
xchg
js
adc
or
sbb
push
inc
dec
fs
adc
stos
(bad)
push
jb
mov
mov
cmps
xor
push
dec
mov
ins
stos
outs
je
nop
cmp
mov
mov
inc
scas
fcmovu
test
inc
ins
outs
jae
pushf
shl
mov
add
movs
iret
xchg
adc
test
xchg
adc
sub
je
ficom
(bad)
push
iret
or
pop
das
dec
adc
sub
cmp
repnz
outs
outs
inc
imul
enter
popa
push
fimul
dec
nop
fadd
fsubr
cs
adc
mov
jg
inc
xor
gs
inc
inc
xor
shl
or
retf
push
push
mov
and
outs
lods
jae
jb
xlat
mov
fild
int
inc
enter
lahf
adc
adc
outs
sub
push
adc
stos
push
push
mov
xchg
mov
bound
loop
add
mov
adc
dec
sbb
add
add
xchg
cmps
mov
aaa
xchg
or
cwde
add
xor
and
mov
in
test
push
xor
pusha
push
push
push
aas
dec
and
cdq
pop
mov
mov
ins
mov
mov
lds
fadd
ds
xor
push
inc
jbe
push
sbb
sbb
mov
xor
adc
sar
adc
imul
movq
fcom
pop
pop
lock
add
je
dec
cwde
and
or
mov
pop
cmps
shl
push
out
adc
cwde
test
cmc
stc
add
or
or
scas
push
inc
cli
xchg
ss
xor
call
sbb
dec
or
or
loop
xlat
and
loop
add
stc
or
jmp
add
scas
add
ret
sbb
je
push
int3
fs
rcr
add
jge
mov
enter
imul
retf
fisubr
jo
es
js
xor
xchg
add
sub
ss
mov
inc
pushf
push
fld
push
mov
mov
in
cmps
adc
pusha
add
xor
sbb
daa
add
test
xchg
xor
push
es
or
sub
or
pop
xlat
jle
nop
dec
jbe
popf
aaa
mov
retf
nop
mov
out
out
or
rcr
add
(bad)
fs
and
adc
push
add
and
cmp
xchg
mov
sub
mov
fs
arpl
fs
fs
fs
push
push
push
fs
push
push
push
fs
pop
pop
pop
fs
pop
pop
pop
fs
inc
inc
inc
fs
inc
inc
inc
fs
dec
dec
dec
fs
dec
dec
dec
fs
xor
xor
xor
fs
cmp
cmp
cmp
fs
and
and
and
fs
cmp
sbb
cmp
push
mov
ds
push
adc
xor
bswap
int3
gs
and
lods
dec
nop
inc
add
and
push
add
retf
mov
xor
pop
or
sub
sbb
push
in
add
sub
call
pop
enter
dec
imul
add
jno
and
sub
jge
add
or
shr
mov
retf
test
adc
mul
test
fstp
test
xor
or
lods
pop
dec
mov
adc
or
mov
sub
clc
sub
movzx
push
push
fs
inc
lds
movs
retf
ins
rcl
in
cmp
cmp
scas
pop
jb
imul
jo
movs
ins
and
mov
jo
add
inc
nop
mov
xor
imul
aas
add
cdq
das
adc
ins
fdivr
sub
ja
shl
(bad)
cmp
inc
jecxz
lea
inc
sub
fldln2
mov
loopne
sbb
retf
movs
add
out
sub
add
jle
xchg
scas
jle
fs
pop
lods
inc
xlat
push
cmp
pop
pop
cmp
push
sbb
add
mov
inc
ins
outs
xor
xchg
dec
or
add
rcl
add
call
arpl
(bad)
mov
cli
xchg
jecxz
xor
retf
shl
cmp
xchg
nop
inc
ds
pop
fiadd
mov
mov
push
and
test
xor
mov
int3
ficom
push
lds
xlat
push
jmp
sub
jae
aas
adc
pop
dec
push
jbe
scas
enter
pushf
jae
into
xchg
iret
cwde
pop
test
inc
pop
shl
pusha
clc
rcl
je
adc
cmps
gs
outs
mov
loopne
adc
dec
popa
js
imul
pop
imul
ins
popa
out
pop
fdiv
ins
push
push
jo
je
cld
jg
ins
test
mov
push
fiadd
xor
xor
outs
xor
daa
push
pop
cmp
mov
mov
jae
xor
or
jmp
jle
je
out
adc
pop
or
lea
xor
rol
inc
cwde
lahf
or
imul
add
outs
loopne
test
(bad)
push
add
adc
xchg
pop
int3
jbe
sub
out
hlt
add
imul
inc
mov
mov
jb
fadd
or
sub
adc
mov
mov
mov
pusha
sbb
push
pop
dec
xchg
or
push
jno
adc
shl
mov
xor
adc
inc
rcl
out
push
mov
enter
popa
in
fmul
lock
add
pushf
fdiv
dec
daa
cmp
pusha
pushf
dec
dec
mov
xchg
mov
fiadd
mov
popa
outs
xchg
nop
mov
in
jbe
cmp
jo
aas
and
daa
sbb
imul
jl
adc
adc
pop
dec
loope
in
pushf
(bad)
inc
xor
setp
xchg
inc
call
repz
repz
lods
mov
vpmullw
jmp
out
jle
push
pop
pop
daa
das
aaa
cmp
repz
dec
push
popa
outs
xor
iret
repz
mov
dec
loope
or
mov
adc
mov
inc
sbb
push
add
adc
fadd
cmps
mov
enter
fsubr
adc
push
shl
retf
int3
rcr
push
pop
jo
retf
xchg
iret
clc
push
out
sahf
jbe
push
push
cmp
mov
push
rcl
cpuid
pusha
or
inc
inc
push
shld
stos
in
int3
aam
push
test
out
push
pushf
test
fcom
sub
pushf
dec
push
inc
aaa
pop
sub
inc
inc
xchg
dec
mov
and
mov
fadd
cmp
pop
and
lods
int3
sbb
pop
inc
pop
rcl
push
lock
neg
cmp
jl
sbb
mov
or
ss
imul
adc
cmp
pop
push
push
leave
xchg
inc
pusha
inc
mov
in
inc
aam
sbb
sbb
add
adc
ror
inc
ret
rol
inc
int
jns
mov
nop
push
aam
sub
jg
jne
aaa
dec
push
inc
inc
push
inc
dec
jb
mov
inc
jmp
repz
js
mov
(bad)
inc
pop
xor
cmp
fstp
xchg
push
aas
test
mov
dec
sbb
push
fstp
ret
jg
mov
jnp
ret
pusha
sahf
jae
xchg
data16
cmp
jne
cwde
sub
fild
mov
pop
lock
mov
add
jmp
adc
mov
pop
rcr
(bad)
hlt
int3
xchg
and
out
push
ins
adc
add
jb
mov
icebp
call
nop
movs
push
cmps
les
stos
jo
pop
inc
jecxz
dec
test
loopne
dec
imul
rol
or
xchg
jle
push
jle
(bad)
call
ja
push
mov
inc
adc
es
sbb
adc
xchg
pusha
adc
mov
push
jmp
neg
xchg
and
test
xchg
mov
inc
xor
in
push
cmp
(bad)
pop
jecxz
mov
xchg
pushf
cmp
or
loop
js
adc
jmp
test
pop
in
sub
dec
lahf
fsubr
imul
test
push
dec
test
imul
dec
xchg
push
add
jbe
dec
inc
fimul
ret
fst
xchg
inc
adc
into
vaddsd
cmpxchg
inc
rol
lock
inc
add
aas
sub
inc
mov
sbb
pop
adc
lock
pushf
sub
xchg
cmps
in
ror
cmp
push
add
lock
push
icebp
push
enter
popa
xor
js
cmp
lods
clc
push
xor
xchg
sub
fwait
sbb
or
arpl
arpl
inc
out
out
mov
jns
cld
xlat
lods
push
nop
out
jbe
aaa
cld
cld
mov
mov
mov
aas
cmc
aam
fwait
or
ret
mov
shl
loope
mov
ins
mov
xchg
xor
adc
inc
sub
push
or
test
leave
jne
adc
or
nop
aaa
cmp
mov
scas
aas
(bad)
outs
scas
xor
mov
in
xor
nop
cmp
xchg
pusha
pop
lahf
(bad)
push
and
xor
mov
xor
dec
or
lea
cmp
test
arpl
sub
jno
push
or
dec
mov
add
mov
hlt
inc
pop
cmp
cdq
test
outs
or
mov
mov
push
ret
aam
pop
dec
dec
inc
(bad)
xchg
test
jo
adc
mov
or
mov
loope
movs
and
cmp
test
and
add
pop
add
loop
xor
in
leave
mov
add
shl
and
not
sub
mov
daa
test
add
call
mov
pushf
test
mov
dec
ret
adc
loopne
inc
mov
icebp
pop
pop
jae
mov
cmp
or
and
dec
sbb
and
ror
cmp
add
mov
test
mov
push
add
rcr
imul
iret
call
or
retf
or
stc
fisubr
push
call
and
jnp
cmp
xor
push
repnz
inc
or
pop
pop
ja
jo
pop
pusha
xchg
je
cmp
and
imul
adc
cmp
nop
pop
pop
sub
aas
pop
je
dec
inc
cmp
out
sets
jne
add
mov
mov
or
fmul
add
dec
mov
call
dec
movs
test
xlat
push
(bad)
sub
inc
mov
add
int3
fcomi
xchg
inc
(bad)
dec
inc
hlt
pop
inc
jno
maxps
mov
in
push
inc
inc
xor
and
int3
clc
imul
mov
pop
cwde
xchg
aas
lahf
push
popf
mov
add
lods
(bad)
fimul
mov
xchg
pop
ja
jge
or
xchg
mov
or
inc
mov
lods
adc
add
or
shr
xor
test
rcl
outs
rcl
call
cmps
(bad)
retf
and
pop
inc
jp
or
xchg
and
mov
movs
sbb
mov
push
pop
cmp
(bad)
icebp
sub
cmp
fdivr
pop
adc
mov
shr
mov
mov
outs
or
fld1
sbb
add
push
test
sbb
lock
sahf
mov
and
cmp
imul
add
ret
cmp
pushf
or
push
xor
push
nop
xchg
sub
leave
jae
add
sbb
movs
jne
xchg
adc
pusha
inc
mov
aam
aaa
cld
fwait
dec
(bad)
jg
add
add
or
push
ja
add
out
mov
mov
dec
sahf
test
mov
xchg
and
pop
dec
sub
mov
pop
ret
add
and
sahf
movs
ret
cmps
inc
cmp
into
out
inc
or
push
xor
ror
mov
sbb
adc
pop
adc
or
lock
cmps
outs
or
push
jbe
pop
ja
push
stos
adc
sbb
out
jg
dec
push
popa
mov
dec
dec
or
enter
ror
jbe
inc
push
dec
mov
mov
cmp
das
movzx
cmp
ins
test
dec
push
cli
pop
sbb
jmp
sub
mov
sub
popa
retf
mov
adc
jmp
and
jmp
shl
into
jmp
mov
xor
xor
dec
add
push
inc
das
lock
loopne
dec
fadd
mov
mov
rdpmc
dec
movs
push
(bad)
mov
mov
gs
scas
xor
sbb
push
push
push
in
mov
fs
add
adc
bound
dec
rcr
es
int3
je
mov
push
or
cmp
xchg
push
das
dec
pop
and
inc
inc
xor
cs
push
leave
and
pop
out
in
dec
sub
and
leave
add
sub
cmp
in
jle
sub
enter
inc
inc
js
in
pop
and
test
repnz
pop
xor
xchg
dec
and
xor
pop
scas
cmp
inc
xor
mov
dec
push
test
cmp
in
fcomp
cmp
cmp
stos
inc
adc
push
xlat
xor
push
mov
(bad)
mov
outs
cmp
jb
push
and
jge
jne
dec
inc
push
call
push
mov
enter
cmp
into
(bad)
cmp
lods
mov
bound
mov
daa
push
pop
pop
pop
movhps
fild
sub
cwde
mov
push
icebp
and
shr
cs
cmove
movs
sbb
sbb
pop
jp
fst
xchg
xlat
or
add
hlt
jnp
xchg
fistp
imul
mov
lahf
clc
imul
adc
mov
idiv
dec
mov
cmp
pop
add
mov
neg
and
sti
and
and
add
add
pop
mov
(bad)
adc
xor
xchg
add
outs
rol
xor
mov
hlt
fldcw
sbb
pusha
push
and
sub
dec
das
lea
inc
mov
mov
mov
sbb
jo
nop
xor
push
out
push
out
inc
in
and
shl
cmp
or
inc
dec
jne
cmp
ret
dec
lea
or
sbb
call
xlat
mov
(bad)
ret
cmpps
cmp
mov
mov
or
mov
loopne
aam
jne
lock
inc
mov
jmp
sbb
icebp
push
pop
pop
js
sbb
ins
dec
(bad)
hlt
sub
adc
add
jmp
cmp
push
dec
test
cwde
test
xor
cmp
fcom
dec
or
jo
sti
dec
jmp
test
mov
(bad)
lods
mov
aam
push
or
add
or
inc
inc
inc
add
(bad)
(bad)
mov
sbb
cdq
(bad)
lock
fwait
mov
mov
loop
sbb
scas
pop
sbb
aaa
sbb
pop
leave
and
jmp
imul
dec
push
(bad)
mov
nop
imul
adc
or
(bad)
call
sub
out
mov
sbb
push
xor
dec
pop
jns
sbb
icebp
outs
shl
arpl
adc
cmps
mov
inc
push
xchg
mov
dec
xor
mov
loope
add
push
or
popa
pusha
pop
lods
(bad)
cmp
adc
(bad)
dec
add
and
pop
retf
xchg
add
ss
pop
sub
and
cwde
shl
mov
xor
fmul
je
sbb
xchg
out
or
call
mov
inc
pushf
push
pusha
test
or
andnps
add
sub
xchg
(bad)
xchg
adc
or
mov
pop
or
pop
ret
sbb
cmp
push
sub
ins
adc
dec
xlat
jge
adc
xor
dec
add
pop
sub
add
aaa
jbe
test
daa
xlat
lods
xchg
jno
hlt
clc
or
lea
int3
mov
xor
add
xchg
mov
pop
or
not
add
push
jbe
push
lods
mov
fcom
dec
cmp
out
add
sar
(bad)
sbb
or
movlps
jbe
xor
or
add
daa
ror
adc
(bad)
or
or
push
pusha
adc
add
leave
mov
shr
pop
cmp
dec
and
test
cdq
xor
call
inc
cmps
or
cmp
pop
pop
jmp
adc
push
inc
cmp
sbb
add
push
pop
dec
dec
repnz
push
mov
mov
adc
les
adc
mov
pop
pushf
inc
js
mov
sar
jnp
adc
inc
sub
retf
mov
shl
jmp
mov
mov
loopne
mov
sub
or
add
sub
clc
add
mov
jae
push
dec
daa
jp
xor
adc
jae
jmp
es
scas
push
mov
mov
jnp
ret
push
mov
imul
cmp
cmp
jmp
cmp
lea
repnz
lock
punpcklbw
sbb
loop
cs
add
mov
xor
mov
mov
or
cwde
mov
inc
iret
xor
jns
pop
mov
loopne
mov
cld
clc
push
push
lahf
nop
nop
movs
inc
add
cld
(bad)
or
dec
push
dec
jne
mov
adc
leave
adc
inc
aaa
cmp
adc
and
aas
lea
sub
push
in
ja
cmp
adc
mov
ja
sub
push
imul
cmp
cmp
jnp
or
inc
and
scas
jns
or
shl
mov
push
in
(bad)
fnsave
scas
jg
je
sub
je
add
push
or
in
lds
jbe
arpl
mov
out
push
pop
push
inc
sub
call
ins
jl
inc
xchg
mov
movs
cmp
clc
or
enter
xlat
jmp
stos
(bad)
cmp
inc
(bad)
ret
jp
or
test
xor
jne
jnp
and
push
(bad)
sub
les
hlt
or
jl
ds
inc
push
in
and
cmp
in
test
xor
pop
mov
dec
mov
adc
cs
scas
test
cmp
ds
dec
mov
(bad)
das
add
fcmovnb
lahf
mov
xlat
addr16
clc
(bad)
jb
dec
inc
popa
add
int3
sub
adc
or
push
hlt
jnp
sar
add
push
dec
push
mov
fiadd
sbb
dec
sub
xor
lahf
jnp
lock
dec
add
iret
pop
or
xor
sbb
mov
rep
mov
adc
mov
or
jle
dec
dec
or
push
(bad)
test
test
add
(bad)
cmp
pop
ins
sbb
mov
add
adc
and
ror
movs
push
xor
adc
mov
enter
pop
xchg
dec
or
retf
dec
rol
add
sbb
pop
sub
xor
nop
sbb
push
xor
rcr
out
mov
inc
and
dec
mov
pop
les
test
pushf
mov
adc
leave
or
inc
cmps
lea
adc
sub
inc
movs
scas
aam
hlt
add
mov
lea
lahf
adc
pavgb
xor
sub
loope
dec
aas
push
dec
mov
inc
pop
inc
jmp
jb
nop
xor
cdq
loopne
ret
ds
inc
mov
outs
(bad)
and
sahf
inc
in
(bad)
fdiv
and
add
add
add
mov
hlt
enter
cld
lock
outs
movs
arpl
popa
outs
icebp
clc
or
enter
cmp
int
sub
inc
sbb
test
out
inc
sbb
retf
test
adc
fimul
sub
and
add
jbe
(bad)
sbb
push
jle
sub
shl
inc
xchg
cmp
xchg
sbb
adc
push
sbb
movs
rol
sbb
test
inc
xchg
mov
push
cli
or
sub
cwde
cmp
jne
dec
jne
cmpxchg
pop
in
out
icebp
test
ds
cmp
aas
pop
xor
clc
les
sub
lods
sbb
iret
ins
std
dec
pop
pop
cmp
ja
movs
scas
test
inc
(bad)
rol
arpl
imul
adc
adc
aas
pusha
mov
push
push
pop
jb
push
sub
loope
push
add
jmp
push
lods
jne
mov
pop
or
mov
mov
and
or
push
pop
dec
lods
inc
ret
out
pop
daa
xchg
sbb
and
ret
test
aas
and
inc
inc
call
inc
(bad)
test
jecxz
pop
cmp
lahf
inc
pushf
xlat
jo
inc
xchg
sub
fadd
pop
mul
jmp
or
lock
sbb
adc
jbe
stos
lahf
push
mov
jl
into
and
xchg
(bad)
adc
call
and
loopne
cwde
adc
pop
jbe
xor
inc
cmp
inc
cmp
xchg
(bad)
xchg
in
add
push
iret
mul
hlt
idiv
aad
cmp
jg
add
aam
jb
sub
mov
dec
adc
or
movs
sub
int3
pop
in
movs
push
sub
pop
sub
nop
xchg
cld
pop
add
nop
cld
je
xchg
test
rcr
sar
loopne
enter
sar
nop
sub
retf
dec
fimul
into
sahf
jo
jmp
inc
les
dec
and
aad
adc
or
inc
mov
call
lods
cmps
or
cwde
aad
lea
in
xor
mov
xor
pop
xor
mov
pop
imul
adc
shl
adc
sbb
aam
ja
ret
test
inc
sahf
hlt
add
mov
movs
dec
adc
dec
repnz
push
jne
pop
dec
outs
push
jne
xchg
fs
jb
jb
(bad)
popa
je
popa
fsubr
sbb
mov
shr
stc
inc
jo
jns
pop
in
mov
ficom
ins
pop
jne
xlat
gs
adc
dec
outs
jbe
inc
loope
xchg
fdivr
ins
adc
mov
sub
mov
and
add
data16
sub
cmp
jns
sub
mov
adc
and
jnp
xor
mov
dec
test
repnz
fs
push
adc
dec
call
xor
movs
cmp
xor
cmp
call
xchg
out
cmp
and
push
push
sub
push
mov
js
mov
pushf
repnz
repnz
mov
push
and
ins
mov
je
nop
dec
xor
jp
mov
push
and
fist
adc
mov
sbb
nop
or
jb
cmp
outs
xchg
retf
loope
inc
movs
pop
xor
xchg
push
test
lods
dec
push
cdq
movs
je
mov
mov
sbb
pop
pop
lods
xor
inc
mov
or
jns
mov
sub
dec
and
inc
iret
adc
pusha
aas
mov
cwde
inc
movs
repnz
jl
or
daa
pop
aaa
aad
xor
cld
cmps
or
jb
xchg
ins
or
push
inc
imul
sbb
pop
ins
xchg
push
or
rol
call
into
jb
jmp
jg
mov
sub
daa
ins
or
push
addr16
shl
jae
jnp
in
and
jg
and
mov
(bad)
mov
cmp
(bad)
inc
jno
inc
pusha
mov
xor
ja
mov
pop
in
add
popf
inc
out
adc
inc
outs
repnz
sub
shl
adc
cmp
mov
add
or
xor
in
out
sbb
and
movlhps
(bad)
fild
jl
(bad)
das
xor
lea
lock
mov
push
sub
mov
and
mov
jnp
dec
mov
fcomp
ins
retf
dec
push
cli
or
sar
les
ja
xchg
pop
enter
cmp
add
mov
xchg
out
mov
jl
std
pop
and
cmp
outs
outs
pop
movs
add
or
mov
and
xor
and
pop
or
mov
xor
pop
add
add
sub
push
dec
outs
dec
call
mov
mov
push
ins
add
or
scas
movs
xor
add
push
jb
fs
xchg
inc
mov
out
jo
cmp
mov
les
pop
sbb
iret
xchg
push
add
icebp
jae
outs
call
and
adc
stos
imul
cmp
sub
sahf
dec
ins
and
pop
inc
pop
pop
cmp
inc
xchg
xchg
popf
dec
jae
or
adc
addr16
mov
adc
dec
xor
arpl
out
pop
mov
pop
sbb
jle
ss
aas
cmp
xor
sub
std
or
popf
mov
pop
cmpxchg
loop
sub
int
inc
xor
xor
xchg
xor
add
or
and
dec
imul
mov
inc
pop
bound
pop
and
pmaxub
or
fsub
add
outs
and
lea
scas
sahf
stos
mov
add
(bad)
(bad)
add
rcl
mov
sbb
adc
pop
sub
les
leave
(bad)
ror
bound
jo
mov
les
and
div
push
jb
add
jp
dec
xchg
hlt
sub
enter
lock
mov
or
push
and
xchg
and
mov
sbb
fiadd
je
cmp
and
pop
xchg
lahf
fadd
imul
movs
je
xchg
mov
shl
xchg
movs
repnz
enter
mov
pop
shl
sti
or
sbb
or
shl
pop
mov
adc
(bad)
jb
and
mov
pop
jge
adc
icebp
(bad)
pop
js
cmp
gs
mov
(bad)
aad
adc
or
in
inc
and
or
add
mov
xor
iret
retf
fs
push
test
xchg
adc
push
sbb
xchg
sar
dec
mov
mov
nop
inc
ja
aaa
enter
shr
lods
jmp
rol
stos
fcomp
or
(bad)
and
cdq
mov
lea
xor
inc
cs
mov
inc
xchg
hlt
jecxz
mov
sub
outs
or
fwait
lock
rcr
dec
nop
stos
push
addr16
pop
scas
or
dec
nop
pop
mov
adc
imul
mov
xor
add
adc
mov
jmp
lea
mov
xor
scas
maskmovq
test
mov
or
repz
mov
jl
or
or
pop
pop
push
inc
(bad)
popf
or
loopne
addr16
push
cmp
xlat
pop
sahf
xor
xchg
fwait
push
dec
mov
and
pop
nop
imul
aam
sub
xchg
retf
leave
dec
sub
clc
hlt
add
daa
xchg
xchg
hlt
lock
inc
sub
ret
enter
lock
inc
and
outs
add
xlat
lds
(bad)
jmp
xchg
repnz
sbb
jbe
pop
xchg
dec
rol
cmp
ss
outs
adc
push
lods
lock
scas
pop
xor
and
lock
lods
sub
xor
jo
adc
and
pop
les
or
jno
repnz
shr
and
mov
cmovae
and
ja
call
movs
push
lea
or
jmp
mov
popf
adc
cld
or
push
fcom
jmp
mov
lock
(bad)
and
cmp
or
loope
mov
and
inc
dec
fisubr
ret
out
mov
xchg
mov
or
(bad)
push
(bad)
outs
sub
scas
push
or
mov
imul
or
daa
add
pushf
sbb
and
ret
popa
mov
imul
xor
aaa
sub
(bad)
cmc
ror
pop
clc
sub
or
clc
cmp
nop
ret
mov
outs
inc
jmp
and
je
ja
lea
mov
fs
pop
cs
cmp
inc
pop
(bad)
shl
xchg
lods
pop
push
add
jecxz
dec
xchg
adc
mov
or
cmps
dec
imul
inc
pushf
xlat
mov
dec
inc
frstor
add
or
mov
sahf
mov
movs
je
sub
adc
data16
mov
stos
jge
movs
aas
cmp
test
aas
cmc
adc
or
add
push
xlat
adc
popa
fld
mov
and
mov
push
sub
repnz
neg
xor
jg
mov
rol
cmp
adc
cmp
mov
inc
or
dec
xor
cwde
adc
mov
sub
and
xchg
mov
mov
iret
mov
rol
cmp
and
or
pop
mov
clc
pop
mov
xchg
test
in
in
xchg
pop
lea
mov
push
adc
pop
xlat
lock
inc
call
xchg
adc
pop
ror
push
or
xor
jg
mov
push
cmp
push
push
or
je
aas
add
mov
scas
xchg
inc
pop
adc
gs
fistp
dec
push
lahf
sbb
sbb
jl
maxps
bound
pop
mov
add
mov
mov
je
jg
jge
jo
mov
jne
pusha
data16
jne
mov
xchg
or
sbb
inc
add
pop
cmps
push
jns
inc
(bad)
push
mov
mov
add
mov
mov
push
shr
pop
mov
enter
xor
stos
lea
xchg
int3
pop
sub
fbld
je
cmp
jae
mov
dec
add
sti
dec
mov
jno
das
gs
jmp
pop
add
fidivr
leave
mov
adc
add
fild
int
dec
or
inc
dec
push
dec
pop
pop
xor
xor
xor
cmp
imul
ss
neg
shl
(bad)
push
dec
pop
ss
cs
jbe
xor
xor
mov
add
loope
or
adc
sub
retf
jae
push
inc
dec
xor
aaa
jg
jo
mov
pop
jae
lahf
pslld
scas
and
xor
push
add
jmp
push
jno
adc
cmp
cmp
jb
data16
or
jg
push
dec
dec
fisubr
push
inc
push
dec
sbb
pop
ret
mov
shr
das
sar
xor
call
jo
and
inc
je
push
sub
scas
inc
push
cmps
xchg
pop
xor
xor
lahf
xor
xlat
inc
inc
add
out
imul
xor
outs
outs
fs
mov
test
ins
(bad)
dec
inc
push
popa
ficom
jb
inc
inc
(bad)
stc
sahf
jae
in
xchg
ja
or
inc
inc
jg
dec
in
movs
movs
push
jg
inc
test
cmp
shl
loopne
out
pop
push
inc
ins
imul
and
cmp
pop
inc
mov
js
mov
push
addr16
mov
push
ja
inc
rcl
mov
nop
fild
xor
or
cmp
jb
add
push
xor
or
xor
outs
cmps
loopne
dec
jae
dec
push
(bad)
pop
xor
inc
stos
xor
aaa
xor
cmp
ins
mov
leave
es
or
rcl
fisttp
int
pop
xor
or
xor
sub
fucom
outs
sub
daa
lahf
inc
push
inc
inc
cmp
fnstsw
dec
push
pop
bound
push
test
push
sub
fild
daa
cvtps2pi
push
(bad)
jecxz
div
dec
dec
inc
ss
fisubr
lahf
aaa
cmps
mov
adc
inc
loopne
mov
dec
push
outs
popa
pop
adc
push
ins
js
out
aaa
or
push
stos
xlat
movd
(bad)
jb
xchg
js
not
mov
add
xor
popf
ins
inc
lahf
ja
push
mov
shl
out
xor
dec
je
inc
xchg
push
adc
dec
scas
ss
aaa
xor
mul
gs
cmp
pop
dec
dec
aaa
aaa
push
jo
dec
lods
adc
daa
pop
mov
std
inc
pushf
imul
outs
ins
cmps
cmp
jmp
out
and
inc
pop
dec
pop
xchg
(bad)
or
xchg
xchg
sub
cmp
mov
jmp
addr16
dec
ss
xor
xor
fs
mov
or
ins
inc
mul
add
dec
inc
pop
pop
shl
sub
aaa
xor
iret
push
in
test
push
xor
adc
mov
dec
jo
add
aaa
mov
int3
push
ja
mov
xor
mov
leave
xor
push
inc
jns
adc
je
rol
enter
add
loope
mov
ss
push
gs
xchg
cs
int
and
mov
ss
jnp
or
xchg
and
shr
xor
sub
pop
ins
or
xchg
(bad)
loopne
adc
and
fisub
push
icebp
(bad)
pop
call
sub
xor
arpl
in
(bad)
cmp
xor
inc
pop
xor
jmp
inc
pop
jp
sub
pusha
and
aaa
arpl
pusha
popf
fldenv
jg
pushf
fwait
add
xor
xor
cmp
aaa
sub
data16
jae
jnp
xlat
add
adc
test
adc
xchg
xbegin
inc
gs
outs
jb
gs
xchg
ss
adc
xor
sub
xor
dec
add
xor
xor
les
add
iret
data16
sub
mov
fldenv
scas
and
or
jne
jo
xchg
aaa
rcr
call
movs
pop
push
jns
pop
add
cmp
shl
dec
cmp
fmul
xor
inc
dec
jg
cdq
or
xor
or
aaa
aaa
cmp
rcl
or
bound
outs
cmp
(bad)
popa
jb
das
cmp
sbb
add
jae
pop
daa
ja
aaa
add
cmp
test
lahf
mov
or
xor
rol
xor
(bad)
mov
lea
popa
(bad)
aam
(bad)
jae
mov
movs
mov
push
movs
lahf
push
and
adc
xor
int3
mov
xlat
or
outs
arpl
daa
dec
xchg
mov
xchg
aas
(bad)
bound
push
add
ja
sub
inc
mul
(bad)
xchg
xchg
xor
aas
test
call
mov
push
push
xlat
jmp
mov
xor
sub
dec
jb
xor
dec
(bad)
nop
out
sub
pop
daa
push
sbb
iret
xor
and
xlat
xor
inc
cmps
in
mov
pop
pop
dec
js
cmp
addr16
inc
(bad)
xchg
cmp
popa
inc
push
movs
fdiv
iret
test
xor
xor
stos
cmp
inc
push
inc
pop
push
xor
pop
stc
test
outs
jb
or
shl
pop
pop
daa
pusha
push
mov
pop
fidivr
data16
fist
scas
xor
push
in
(bad)
ins
xor
test
and
adc
inc
push
sbb
dec
scas
sub
inc
xor
nop
sub
or
mov
test
push
push
push
cs
inc
inc
je
xlat
pusha
iret
fsubp
push
and
jg
jbe
in
add
add
xor
jnp
and
xor
jb
push
xor
xor
push
xor
and
jb
push
or
mov
outs
sbb
inc
dec
inc
fcomip
mov
dec
dec
cmp
xchg
dec
sub
ins
push
loopne
xor
xor
arpl
mov
push
shufps
xlat
popa
clc
push
inc
scas
add
add
sahf
push
div
cs
(bad)
daa
div
xor
sub
rcr
xor
and
ja
pop
ja
and
xor
data16
ss
icebp
push
xor
or
sbb
adc
xor
test
mov
nop
cmp
push
add
and
leave
les
pop
pop
add
ss
xchg
or
pop
aaa
and
ss
shl
aaa
inc
dec
dec
push
pop
cmp
pop
mov
xchg
add
imul
pop
xor
xchg
inc
sti
xchg
jle
cmp
sbb
sub
xlat
pop
pop
xchg
xchg
push
pop
pop
jg
jb
push
cmp
push
xor
ja
push
sub
sbb
ja
dec
or
stos
fdiv
idiv
in
cs
cmp
cmp
nop
or
cmp
pop
loopne
test
fild
mov
pop
pop
add
push
push
pop
dec
cs
xor
xor
pop
and
pop
pop
iret
inc
cmp
push
pop
jns
out
mov
mov
push
cmp
(bad)
or
xor
dec
pop
call
(bad)
mov
aaa
pop
in
or
jg
cmp
dec
mov
pop
xor
xor
in
xor
inc
xor
adc
or
push
not
xor
clc
bound
ss
int3
push
ss
das
adc
ins
popa
mov
gs
outs
pop
xlat
aaa
outs
xchg
arpl
and
ja
or
mov
cdq
nop
test
jg
in
dec
xor
(bad)
push
data16
pop
jno
daa
ja
daa
adc
inc
dec
sub
dec
push
push
lahf
popa
mov
add
xor
or
xchg
add
jne
xchg
imul
cmps
imul
dec
inc
jg
pop
push
sbb
xor
mov
pop
xchg
push
push
cmc
pop
(bad)
aaa
xor
sub
push
lods
add
dec
mov
in
sahf
mov
xchg
xchg
pop
push
pop
xlat
pop
push
pop
ja
xor
ja
cmp
add
ss
bound
fcom
pop
sub
ss
or
xor
dec
inc
ret
out
jmp
add
call
cs
push
out
or
sbb
fcom
(bad)
cmp
add
mov
stos
aam
(bad)
pop
ja
cmp
cmp
and
mov
inc
inc
push
lods
pop
sar
push
pop
sbb
or
(bad)
imul
jo
out
or
xlat
cmp
jne
sub
mov
cmp
aas
imul
mov
cmps
addr16
pop
dec
popa
ins
data16
jne
sbb
shr
or
mov
inc
inc
sub
in
pop
pop
fs
cmp
ror
cmps
jo
ret
mov
inc
xchg
cmp
add
xchg
push
push
aas
ret
mov
pop
or
dec
je
jge
jmp
fwait
out
daa
daa
dec
inc
sub
(bad)
jmp
rol
imul
sub
das
inc
cmp
je
ins
and
xor
add
daa
aaa
cld
adc
inc
inc
dec
pushf
dec
dec
push
jp
dec
add
cmp
push
ja
aaa
xor
fs
or
xor
or
ror
dec
leave
xchg
dec
xor
dec
in
push
in
outs
xchg
and
enter
adc
xchg
das
int3
add
xor
inc
push
push
dec
cmp
stos
popf
jae
(bad)
idiv
xor
xchg
xor
xchg
xor
add
inc
or
(bad)
xor
or
or
xor
xchg
sbb
sub
xchg
xor
or
bound
sbb
jns
ins
push
pop
in
add
jno
sub
push
xor
push
das
enter
xor
sbb
sbb
popa
jb
push
xchg
and
es
xor
shr
adc
in
mov
xchg
and
es
inc
xchg
push
pop
sbb
sbb
cmps
aaa
push
inc
cmp
push
pop
shr
sub
cmps
aaa
nop
xor
dec
dec
and
test
aaa
push
sbb
aas
or
je
outs
outs
push
cmp
loopne
sbb
repnz
(bad)
sbb
or
mov
cwde
(bad)
xor
xchg
and
cmp
xor
xor
fild
push
cmp
xor
xor
ss
fadd
aaa
and
ss
sbb
mov
(bad)
jg
jg
loop
imul
xor
sub
push
scas
lahf
xor
sbb
sbb
lahf
adc
mov
add
nop
xor
xor
push
aad
xchg
pop
lds
neg
mov
xor
jb
ss
and
jb
add
xor
sbb
shr
sbb
lahf
scas
and
xchg
jmp
sbb
xchg
sahf
push
ins
xchg
test
or
xor
xor
xor
push
push
loop
xor
sbb
pinsrw
sbb
cmp
sbb
or
and
cmp
pop
pusha
addr16
and
sub
lea
addr16
jg
pop
jg
pop
mov
bound
push
je
xchg
cwde
jo
push
repnz
push
xchg
pop
mov
dec
and
adc
sub
inc
push
mov
dec
ja
ins
push
cmp
xor
push
rcl
add
out
pop
inc
jbe
pop
push
cs
ficomp
cs
ins
mov
inc
dec
pop
xor
push
lock
shl
pop
push
loop
pop
inc
dec
movs
mov
xor
push
pop
mov
pop
mov
ja
push
or
in
pop
leave
dec
push
dec
push
push
xchg
pushf
xchg
add
push
sbb
mov
daa
and
inc
push
outs
and
push
dec
sub
ror
sub
mov
das
dec
pusha
push
dec
sub
imul
mov
xor
iret
dec
inc
dec
dec
mov
xchg
scas
dec
outs
gs
jo
ins
imul
xor
sbb
mov
and
adc
ss
jo
and
push
mov
xor
bound
fld
and
inc
sub
mov
cmps
push
pop
mov
push
sub
arpl
movs
mov
into
cmc
(bad)
fisubr
sub
jmp
sub
and
in
imul
cmps
and
xchg
mov
aaa
push
cmps
or
add
xor
xor
daa
mov
js
xchg
add
push
pushf
and
xor
stos
ins
mov
fbld
nop
xor
xor
cmp
push
inc
add
cmp
sub
xor
imul
xor
nop
xor
add
ss
and
bound
inc
jb
dec
aaa
aaa
aaa
sub
aaa
or
add
cmp
cmp
xchg
cs
sub
shl
pop
(bad)
cmp
cmp
imul
test
push
add
sub
rol
push
mov
sbb
dec
push
pop
push
or
mov
in
lods
mov
scas
pop
xlat
add
xor
xlat
adc
fnsave
ss
push
xor
aas
aaa
xor
add
dec
mov
pop
pusha
fbstp
daa
xor
or
adc
cmp
out
fiadd
scas
sbb
aaa
out
adc
gs
ins
and
cmp
xor
pop
daa
pop
outs
cmp
jb
jg
fidivr
inc
pusha
jo
cmp
sbb
fmul
pop
xor
jmp
xlat
pop
inc
inc
dec
iret
je
cld
push
push
pop
dec
push
mov
push
adc
jae
scas
outs
jg
outs
xchg
pop
pop
mov
xor
xchg
pop
test
ret
test
outs
push
push
mov
ja
mov
pop
test
pop
rcr
ja
jno
pop
les
es
aam
push
push
and
lahf
mov
mov
imul
cmp
nop
add
sbb
das
sub
or
inc
aaa
dec
sub
(bad)
cmps
add
cmp
dec
scas
mov
inc
pusha
cmp
rol
dec
outs
or
mov
or
fsubr
rcl
lods
push
fs
fidiv
das
movs
pusha
mov
or
daa
pop
mov
pop
jae
ins
jo
adc
add
jbe
out
das
jne
and
lds
xor
xchg
xor
add
cs
dec
lods
mov
jg
jb
(bad)
cmp
ja
mov
pop
lods
retf
inc
outs
aam
pop
pop
lods
adc
or
mov
test
xor
mov
daa
xor
jnp
inc
pop
or
sbb
ss
dec
das
gs
das
not
les
xlat
xor
mov
pop
mov
or
(bad)
dec
gs
arpl
(bad)
daa
int3
mov
jo
ja
inc
test
mov
adc
enter
arpl
lahf
pop
enter
adc
imul
daa
bound
xchg
mov
loop
scas
fs
imul
sbb
retf
div
test
mov
push
jne
xlat
xchg
inc
or
and
jne
xor
xchg
sbb
jmp
sbb
add
sbb
ins
aas
outs
pop
xchg
jo
sbb
pop
imul
aas
jae
les
jb
xchg
mov
fcom
das
imul
in
test
sbb
es
mov
ja
mov
jecxz
and
addr16
pop
pusha
push
sub
popa
mov
mov
and
push
pop
pop
in
daa
movs
inc
push
mov
ret
mov
das
addr16
mov
inc
test
ss
pop
and
pop
enter
push
sbb
and
sub
push
adc
or
mov
mov
nop
sbb
movs
test
cmp
pop
scas
push
mov
pop
inc
in
aas
jae
and
loopne
aas
or
cmp
das
sbb
xchg
mov
not
mov
pop
(bad)
mov
pop
jmp
daa
popa
adc
xchg
test
cmp
cld
pop
pop
fwait
pop
inc
inc
xor
test
in
mov
push
push
outs
adc
xor
jb
and
daa
pop
or
and
push
push
sub
(bad)
sub
daa
mov
(bad)
pop
xchg
and
add
dec
push
dec
and
xchg
movs
sub
stos
push
call
inc
ins
dec
outs
aas
or
or
push
out
lea
ins
dec
mov
push
push
mov
adc
cdq
les
(bad)
sti
xchg
(bad)
ss
lahf
lds
xchg
and
sub
call
test
lahf
and
dec
push
das
adc
in
cdq
jo
mov
fiadd
nop
adc
adc
fisub
enter
ja
xchg
jge
add
inc
dec
inc
push
pusha
movaps
and
daa
movs
js
sbb
push
push
xor
xor
sub
cmp
mov
xor
rdmsr
inc
cmps
nop
fnstcw
xor
xor
xor
bound
hlt
add
fs
sbb
popa
lods
aas
xlat
outs
pop
rol
push
sub
cs
dec
or
pop
addr16
adc
loope
pop
call
test
das
inc
mov
jg
popf
dec
adc
(bad)
mov
mov
shr
inc
popa
mov
sub
(bad)
push
pushf
imul
dec
dec
push
cs
ins
mov
in
sub
dec
or
imul
sub
lahf
pop
pop
push
sub
adc
and
push
imul
and
fwait
loopne
pushf
mov
dec
mov
cmps
(bad)
movs
ins
dec
or
daa
or
xor
inc
dec
imul
jae
sub
addr16
adc
inc
inc
pop
mov
xor
sub
mov
jns
and
add
fisub
push
mov
push
ds
imul
jmp
push
scas
sbb
scas
push
mov
sbb
inc
pusha
sub
aas
sar
js
lds
rol
sbb
pop
jbe
das
pop
daa
and
inc
mov
mov
imul
adc
inc
aaa
sub
pop
inc
add
sub
adc
jno
push
inc
addr16
cmp
or
movs
adc
and
or
pop
jo
(bad)
ja
or
add
cs
xor
ss
rol
and
push
ins
mov
xor
fbstp
pop
(bad)
pop
js
ja
bound
inc
ins
and
loope
inc
adc
push
pop
jo
clc
jg
push
mov
jmp
inc
cwde
adc
push
es
add
and
add
cld
push
adc
retf
jge
test
int3
jne
and
lods
push
outs
jbe
fiadd
ret
mov
(bad)
mov
mov
fcomp
ins
add
or
jg
es
mov
cmp
adc
inc
stos
mov
or
mov
pushf
fsubr
inc
dec
jmp
bound
lods
inc
sysret
cmp
not
movs
cmovo
adc
pop
xor
nop
pop
inc
fsub
and
mov
and
push
sub
scas
shr
pop
xor
push
sbb
or
and
dec
adc
add
or
rol
adc
sub
nop
loopne
sub
pop
dec
inc
sub
int3
cwde
nop
xchg
sbb
out
ffree
push
fnsave
test
add
daa
(bad)
sbb
(bad)
sbb
mov
icebp
or
sbb
je
(bad)
xlat
shl
xchg
mov
cmp
inc
add
jge
cmp
adc
retf
ficom
xchg
frstor
loopne
xchg
mov
mov
sub
add
add
call
jmp
lods
xchg
test
pop
adc
dec
pop
and
adc
push
ret
sbb
movs
add
push
scas
fmul
push
pop
fld
add
(bad)
push
pop
or
test
pop
ins
inc
pop
push
fist
xor
mov
dec
dec
pop
retf
cmp
jmp
add
loope
fild
xor
shl
xor
ret
cmp
inc
iret
enter
xchg
adc
push
cs
bound
dec
popa
or
mov
adc
dec
ret
push
adc
clc
sub
push
sbb
push
das
push
rol
das
xor
test
xchg
cmp
dec
push
or
stc
mov
daa
or
mov
adc
add
push
pop
adc
ja
sahf
jle
sub
mov
cwde
mov
imul
xor
clc
adc
or
push
push
arpl
adc
inc
add
mov
sbb
mov
lahf
mov
call
lock
add
dec
cmp
pop
lock
and
loope
pop
sbb
test
cmps
add
or
push
scas
jne
cdq
xchg
sub
xchg
add
mov
dec
ret
lds
bound
cmp
mov
mov
adc
push
push
hlt
xor
int
push
test
xchg
aaa
or
xchg
adc
hlt
xor
pusha
retf
dec
add
dec
loop
je
inc
or
mov
jmp
sub
inc
mov
das
arpl
push
inc
test
test
mov
xlat
dec
xor
push
mov
jbe
cwde
addr16
out
loope
inc
dec
ja
and
nop
(bad)
inc
lahf
arpl
jg
mov
mov
cmp
es
or
jl
outs
and
daa
jae
icebp
ins
data16
mul
dec
es
nop
nop
dec
adc
jb
mov
xchg
sub
and
ins
pop
jb
adc
fbld
ins
push
addr16
gs
and
and
or
retf
mov
pop
cs
mov
mov
in
movs
pop
dec
enter
push
je
loopne
dec
adc
jno
outs
jae
bound
sbb
lods
lods
fsubr
pop
es
or
mov
fwait
mov
out
or
adc
xor
clc
mov
cmps
dec
xlat
aad
addr16
sbb
jb
aas
xor
mov
mov
and
aas
mov
outs
jae
rol
iret
adc
shl
jbe
xchg
(bad)
repnz
jo
sbb
inc
les
or
data16
and
loopne
inc
out
enter
xchg
enter
into
add
(bad)
and
int3
or
xchg
mov
fwait
nop
adc
xchg
and
rcr
(bad)
aam
enter
jae
inc
push
mov
not
jmp
jne
sbb
jg
add
aaa
fdivr
push
pusha
and
jg
or
xchg
or
loopne
pop
je
or
bound
fbld
pop
shl
jmp
add
pop
sbb
xor
nop
and
psubsb
fisttp
or
and
xor
in
or
push
mov
jb
in
mov
adc
call
lock
js
(bad)
hlt
dec
or
sub
iret
popa
pop
stos
xor
xor
fld
pusha
leave
test
or
xchg
cld
cld
adc
xor
aas
test
fbld
jg
xchg
or
outs
jb
xchg
inc
sbb
add
pop
cdq
in
or
add
and
mov
outs
push
or
cdq
in
adc
imul
jbe
ja
push
jg
or
jb
cs
adc
adc
or
fcom
mov
xor
adc
imul
xor
ins
ins
mov
in
adc
cmp
jmp
mov
jae
mov
bound
nop
mov
mov
out
rcr
fs
retf
sbb
push
push
inc
jle
mov
imul
sbb
push
add
pushf
mov
xchg
and
iret
cmp
pop
push
dec
jle
cld
scas
push
or
adc
and
sub
jl
sbb
cmp
jb
xlat
fwait
push
fsubr
fcomp
into
test
aaa
xor
xchg
or
adc
push
ror
les
xchg
ror
sbb
or
push
lds
mov
xchg
and
inc
cmp
jl
xor
sbb
test
adc
or
es
or
push
inc
mov
xchg
outs
sub
add
stc
xor
ja
xor
sbb
jbe
in
lock
not
sbb
jne
gs
call
xchg
in
es
pop
pop
adc
pusha
add
aam
cmp
icebp
inc
mov
and
pusha
pusha
adc
fs
loop
mov
xchg
push
imul
nop
outs
mov
cdq
nop
adc
adc
push
push
inc
xchg
mov
and
push
das
cmp
ins
ins
and
fwait
add
(bad)
adc
mov
push
ja
pop
ja
jle
xor
mov
and
gs
xchg
or
test
pop
push
dec
push
in
adc
cmp
mov
mov
das
xchg
and
movs
xchg
dec
enter
sub
and
jns
test
and
popf
add
ins
mov
xor
gs
scas
mov
add
inc
ret
test
fdiv
pop
push
sbb
mov
fdiv
add
ret
pop
xchg
cmc
lahf
or
push
int3
lahf
dec
or
add
ficom
ja
push
dec
enter
mov
cmps
xchg
and
or
or
xchg
and
mov
outs
and
lock
push
add
test
inc
mul
cmp
hlt
hlt
in
sbb
enter
cmp
es
addr16
es
fs
in
cld
fwait
nop
and
addr16
or
shl
push
outs
push
addr16
sub
adc
repnz
fdiv
ja
adc
xchg
mov
es
pop
sbb
ror
xor
adc
pop
ror
pop
clc
aas
sbb
xchg
sbb
sbb
or
sub
call
sbb
add
les
es
mov
or
loop
xor
div
lods
nop
fisttp
outs
inc
cmps
or
add
or
inc
inc
adc
push
pusha
inc
dec
test
inc
mov
mov
xor
ins
and
in
pop
cmps
cmp
in
cli
and
adc
add
and
and
dec
and
sbb
xor
mov
nop
pop
pop
or
add
add
mov
xor
xchg
lahf
rcr
jb
pop
ror
(bad)
les
lahf
int3
pop
adc
adc
jge
gs
cmps
lock
sbb
rcl
inc
cld
dec
aam
es
push
aam
cmps
cmp
enter
loopne
fild
in
xchg
lods
or
jg
dec
push
(bad)
js
outs
dec
push
push
and
enter
lods
inc
adc
xor
xchg
inc
sub
retf
cmp
inc
(bad)
jo
jbe
pop
mov
mov
and
xchg
dec
add
ja
jbe
add
in
push
(bad)
jbe
bound
(bad)
es
arpl
add
xor
inc
bound
test
pop
inc
and
mov
in
cdq
nop
cld
nop
nop
sbb
jno
dec
dec
add
or
dec
inc
outs
and
scas
add
dec
jb
adc
cmp
pop
pusha
add
enter
aas
js
sbb
lock
cmp
inc
out
mov
and
push
push
ins
xor
inc
jns
fs
test
mov
cwde
cwde
dec
jo
test
outs
hlt
xchg
sbb
test
push
add
sub
and
push
daa
inc
xor
or
adc
pop
loopne
and
or
sub
inc
jb
add
mov
cmps
movs
fimul
dec
xor
jcxz
or
add
or
mov
fstp
cmc
shl
mov
cmp
je
fldenv
sbb
in
sbb
jle
pop
cmp
add
mov
pop
repnz
xor
push
xor
mov
and
pusha
cmp
aas
cmp
loope
sbb
into
call
pusha
inc
sub
cmp
mov
or
outs
cld
jl
add
pop
enter
xchg
adc
enter
inc
dec
push
inc
mov
adc
lahf
pop
fs
fadd
test
(bad)
dec
out
dec
jae
lahf
cmp
adc
xchg
mov
sbb
push
dec
sbb
popa
outs
cmp
movs
scas
sub
ins
adc
nop
push
or
push
mov
pop
add
outs
in
(bad)
sbb
mov
cmp
mov
adc
pop
sahf
retf
jae
mov
xlat
dec
in
pushf
push
mov
jae
loopne
dec
sbb
lods
jns
iret
cmps
adc
dec
in
mov
rcr
mov
add
retf
jae
sub
dec
rcl
aam
fsubr
call
retf
push
imul
xchg
out
call
adc
frstpm(287
jae
ds
clc
clc
cmp
jp
scas
add
pushf
jns
lahf
neg
rcr
cmp
inc
aaa
jo
mov
cmp
sub
adc
jne
cmps
repnz
and
sbb
in
sub
add
jmp
stc
ds
dec
xor
cmp
js
push
mov
inc
jbe
stc
adc
xor
loop
dec
mov
out
dec
adc
cs
in
adc
pop
push
pop
dec
in
jns
jo
push
ja
cs
pusha
dec
call
jne
icebp
adc
ins
ror
cmps
repnz
jl
sbb
add
and
adc
jns
mov
cmp
add
xchg
push
ret
pusha
sbb
ja
mov
xchg
iret
in
dec
lods
clc
cld
mov
std
cs
repnz
mov
test
mov
retf
push
stc
es
jmp
xchg
out
repnz
rol
mov
sti
enter
cmp
int3
es
sar
mov
(bad)
in
aam
lock
add
hlt
adc
test
cmps
lods
pop
push
sbb
adc
add
cmp
in
sbb
jl
out
repnz
sub
(bad)
dec
(bad)
and
mov
hlt
sahf
retf
adc
clc
bound
enter
pop
cld
es
or
ins
jo
cmp
add
daa
fdivr
cmp
sbb
sbb
adc
sbb
adc
mul
cs
in
jl
int3
jl
pop
jns
pop
pop
push
enter
jo
repz
pop
adc
daa
sub
lds
inc
cmp
push
aaa
fbld
lods
add
fcomp
adc
loop
outs
lods
add
mov
not
and
test
and
dec
jge
loopne
xlat
pusha
ins
mov
jb
inc
adc
mov
jne
loopne
mov
sti
cli
pop
jmp
mov
sub
ret
jg
or
xor
outs
in
push
adc
cmp
mov
(bad)
mov
pop
outs
jnp
sub
jns
xor
cmp
push
mov
add
dec
or
fstp
dec
jg
or
add
xor
nop
dec
movs
shl
(bad)
(bad)
(bad)
push
adc
add
scas
nop
sub
std
adc
inc
mov
mov
sar
xor
and
paddsb
mov
mov
nop
fidiv
in
cmp
add
pop
or
add
push
enter
fimul
inc
shl
or
addr16
add
mov
cmps
sbb
arpl
mov
dec
xor
adc
lock
adc
jecxz
add
xchg
mov
enter
xor
shl
xchg
dec
ds
mov
mov
stc
movs
mov
fsub
dec
push
clc
lea
mov
xchg
or
cld
sub
push
cmp
dec
gs
sub
cmp
or
pop
fbld
cmc
pop
jno
sub
in
mov
or
xchg
mov
push
into
push
rol
fchs
out
mov
cld
inc
add
push
jnp
ins
pushf
adc
dec
mov
sti
xor
mov
sti
sbb
add
sub
mov
scas
and
jge
mov
clc
retf
test
or
jecxz
mov
popf
xor
xor
mov
icebp
add
add
stos
or
ins
xchg
xchg
xchg
xchg
jo
js
xchg
xchg
xchg
xchg
add
nop
xchg
pop
sbb
adc
xchg
inc
sbb
mov
imul
movs
inc
test
mov
push
or
sbb
(bad)
cmp
jne
sar
int
icebp
cmp
push
xor
mov
mov
push
or
sbb
lods
or
push
mov
adc
mov
cli
inc
push
mov
or
jmp
add
dec
sar
mov
push
ss
and
mov
push
pop
xchg
outs
adc
mov
(bad)
std
dec
mov
clc
mov
xor
data16
adc
xchg
ins
sub
add
loop
out
rol
cmps
push
mov
aaa
cmp
out
or
inc
adc
xchg
(bad)
adc
ficom
aas
(bad)
fisttp
cmp
jne
movsx
jle
xchg
xchg
mov
jle
jmp
mov
mov
push
neg
add
call
mov
call
out
std
and
rcl
mov
jo
mov
ins
outs
fidiv
adc
jmp
mov
xchg
sbb
or
mov
xchg
add
or
(bad)
call
enter
repz
sbb
test
fs
pusha
es
jnp
inc
dec
xor
inc
mov
xor
or
cmp
(bad)
pop
fidivr
sub
fcmovbe
pop
vmread
mov
(bad)
mov
call
sub
push
(bad)
stc
sbb
mov
xchg
and
xor
mov
imul
js
mov
retf
jp
or
loope
ja
mov
mov
out
and
push
sbb
adc
mov
fiadd
pop
sbb
fst
cmp
dec
dec
mov
cmp
pop
sbb
inc
inc
mov
jne
std
adc
inc
pop
and
and
ret
or
adc
pop
mov
push
push
mov
add
cld
adc
jecxz
mov
adc
sbb
mov
or
rol
jmp
xor
mov
or
imul
sti
daa
push
shl
mov
shl
or
and
imul
sub
pop
inc
or
xor
sbb
stc
fidiv
add
sti
add
adc
and
movs
mov
fcmovb
xlat
add
fdiv
pop
retf
pop
cmp
call
xlat
adc
div
push
in
fst
sub
xor
mov
fstp
in
jne
push
and
and
js
dec
sahf
cs
mov
cwde
sbb
test
neg
cmp
xchg
sbb
add
and
xor
outs
sbb
inc
sbb
int3
cmps
icebp
sbb
or
and
inc
inc
or
xor
cmp
mov
push
int3
mov
push
cmp
lock
cli
add
adc
ret
sub
lods
sub
fsub
je
rcpps
aam
inc
push
popa
add
lock
cmp
adc
ins
sub
or
test
pop
out
push
mov
mov
mov
push
lods
cmp
loopne
jle
xchg
push
lods
shl
add
xor
jmp
jne
in
add
sub
add
xor
inc
adc
(bad)
stos
push
pop
pop
sbb
jo
jno
fdiv
shl
movs
jbe
call
adc
daa
lahf
mov
add
sbb
or
mov
push
lds
fisub
rcl
jae
or
pop
and
push
ds
scas
dec
bnd
push
int
ins
push
jle
ja
aas
test
xchg
mov
xchg
push
xchg
pop
adc
dec
rol
push
push
or
cwde
adc
dec
jmp
mov
mov
pushf
jno
lea
push
inc
imul
mov
jle
int3
mov
cwde
push
pop
jnp
mov
sbb
mov
mov
pop
xchg
push
jb
mov
sbb
jae
sbb
hlt
add
jmp
cwde
mov
mov
pop
push
adc
sbb
adc
dec
enter
jp
add
lock
lahf
mov
xor
ret
pop
mov
je
ret
mov
cmp
movs
or
add
pop
inc
push
mov
jle
ds
aaa
sub
test
loopne
and
cli
lock
adc
xor
mov
movs
cmc
pop
cmp
sbb
xor
xor
push
sub
loopne
adc
scas
les
or
mov
sbb
pop
or
or
imul
add
inc
ret
mov
addr16
and
or
push
sbb
daa
mov
mov
mov
ins
sub
shr
or
inc
movs
jb
xchg
js
jl
enter
inc
(bad)
jl
test
je
sbb
test
cs
test
mov
push
mov
nop
cld
aas
loope
push
push
jmp
(bad)
and
mov
fnstcw
xor
pop
jecxz
es
sbb
push
lea
(bad)
imul
jge
shr
jo
mov
cmp
les
out
sub
pop
push
xor
nop
out
cld
push
push
inc
mov
and
add
sti
ja
jne
ins
mov
out
or
popf
push
mov
les
inc
sub
je
cmp
aas
ins
jo
lods
mov
scas
push
jne
jns
add
jne
jns
fidiv
das
data16
rcr
sbb
sahf
int3
and
fdiv
mov
int
pop
sub
imul
test
call
add
(bad)
mov
push
jge
xor
push
sbb
int3
or
and
or
les
mov
push
nop
pop
mov
ret
xor
jno
push
stos
(bad)
(bad)
mov
fnstsw
or
stc
shr
push
dec
ins
cmp
push
fiadd
push
adc
mov
sbb
jg
shl
test
loop
sub
nop
push
mov
jns
shl
and
aam
cdq
cdq
push
cmps
xchg
call
rol
push
dec
bound
or
sub
and
sub
inc
adc
fwait
jle
inc
outs
inc
dec
or
mov
pop
ins
sub
dec
hlt
xchg
xchg
pop
call
sbb
shl
xor
xlat
jbe
pop
push
ins
adc
out
outs
cmp
mov
pop
xchg
jo
ja
xchg
das
inc
or
(bad)
jmp
in
push
rcl
and
shl
push
mov
enter
inc
ds
in
pop
mov
add
xlat
pop
mov
cmp
add
inc
adc
or
rol
pop
inc
mov
and
dec
enter
arpl
and
fidivr
dec
movs
es
fs
cwde
addr16
repz
in
xor
dec
mov
push
shl
push
adc
or
adc
jg
sub
and
inc
cdq
push
and
adc
mov
dec
mov
in
mov
cmp
stc
js
inc
sbb
(bad)
mov
popa
enter
outs
dec
and
dec
and
and
inc
pop
mov
adc
and
rol
sub
stc
sbb
pop
jge
and
add
adc
les
xchg
pop
pushf
dec
sub
add
lock
dec
call
and
sub
add
mov
popw
iret
cmp
dec
mov
xor
fst
pusha
xor
add
leave
mov
jmp
adc
stos
dec
dec
movs
mov
add
adc
outs
out
int3
pop
or
fcom
repnz
ret
and
inc
or
or
or
jmp
adc
lods
fsub
mov
call
(bad)
(bad)
sbb
mov
cmp
sub
push
sar
loopne
add
mov
fs
fadd
jmp
dec
inc
xlat
mov
in
enter
(bad)
adc
cmp
js
xor
and
outs
bound
mov
(bad)
cmp
mov
clts
and
push
shr
inc
repz
cmp
fdiv
jp
mov
xchg
hlt
xchg
aam
lock
call
ret
push
pusha
push
adc
ret
cmp
or
mov
xchg
ins
mov
iret
mov
jle
into
inc
jecxz
test
icebp
push
int3
fadd
loop
daa
imul
sbb
mov
jg
lea
xchg
lods
xchg
adc
bound
sub
push
test
or
daa
int3
inc
sbb
sub
jne
mov
es
dec
jecxz
inc
xchg
and
push
loopne
fisttp
pop
scas
(bad)
push
xor
dec
push
push
or
jg
mov
or
out
cmps
lea
or
cmp
and
mov
pop
mov
add
add
add
mov
push
aaa
adc
mov
sub
or
add
fcmovnb
mov
mov
xlat
mov
inc
pop
pop
jg
push
dec
gs
(bad)
lahf
push
adc
fcom
imul
adc
adc
or
call
inc
fild
xor
push
mov
or
(bad)
stos
inc
jg
pop
inc
jmp
add
mov
nop
jne
and
adc
adc
sbb
inc
arpl
jns
div
sub
lock
sbb
call
mov
ins
in
mov
push
jl
pop
sub
retf
add
movs
sbb
push
pushw
(bad)
jge
xlat
cmps
inc
lods
cmp
sbb
int3
mov
cld
pop
cmps
enter
out
jne
mov
sub
push
loope
int3
add
test
push
test
pop
inc
push
inc
int3
pop
push
cwde
inc
clc
stc
fidivr
fwait
inc
hlt
inc
es
push
pushf
push
js
daa
movs
dec
mov
inc
lock
scas
ins
lea
cmp
pop
mov
mov
leave
retf
inc
sub
pop
les
fidivr
and
push
xor
add
sbb
data16
hlt
dec
push
inc
dec
les
sahf
xor
jge
mov
clc
aaa
cmp
cmp
cmp
imul
xor
pop
or
scas
cmp
sub
mov
dec
push
cmp
push
pop
hlt
cmps
jge
idiv
xor
clc
xor
mov
mov
repz
xchg
push
cmp
sub
aaa
or
or
rol
popa
inc
cmp
jge
rcr
xchg
xor
lock
out
movs
cmp
mov
dec
cmps
xchg
jne
daa
push
or
or
mov
or
push
adc
add
hlt
pop
fisub
loopne
cmps
imul
or
sub
clc
mov
fisub
sbb
sbb
jbe
retf
mov
bound
xchg
dec
enter
cld
cmovnp
mov
sbb
movs
clc
ss
xor
sbb
mov
lock
rol
dec
lods
xor
jbe
mov
xchg
adc
cmp
aas
add
jg
dec
outs
addr16
xchg
ds
push
mov
icebp
push
outs
rcl
xlat
ret
adc
clc
cld
imul
out
xor
test
jecxz
jmp
cmp
in
sub
ins
xchg
call
imul
lods
cmps
(bad)
(bad)
cmp
jae
sbb
and
and
jne
push
pusha
rcl
cs
xchg
mov
jnp
or
or
sbb
push
ret
jmp
and
add
in
adc
out
adc
dec
dec
lods
repz
pushf
push
shl
sahf
js
test
jle
xor
iret
sub
adc
je
sbb
inc
ss
adc
movs
push
(bad)
mov
shl
push
push
mov
cmp
push
inc
xor
mov
inc
add
adc
pushf
ins
fcomp
jmp
or
adc
xchg
or
jg
xor
sbb
in
or
xor
and
add
inc
adc
sbb
pushf
mov
es
mov
adc
or
jno
or
sbb
not
xor
xor
jmp
xor
or
or
cli
adc
into
dec
add
jnp
rcl
dec
cmp
inc
add
pop
add
and
neg
fnstcw
push
push
mov
mov
push
ret
arpl
xlat
add
les
sub
jb
push
jo
mov
rcr
and
cmp
push
pushf
jle
or
adc
loopne
xor
daa
adc
inc
and
push
test
adc
sbb
test
jnp
(bad)
mov
lahf
movs
lock
loopne
xchg
rcl
or
addr16
mov
pop
push
xchg
cmp
sub
cdq
imul
jne
sbb
test
sbb
ss
fiadd
and
cs
add
adc
pusha
dec
dec
mov
mov
icebp
ret
mov
stos
clc
imul
push
push
mov
xchg
or
adc
push
nop
lods
or
mov
sub
lock
fisttp
nop
mov
cmp
add
or
adc
mov
stos
leave
and
lahf
push
add
test
add
jns
xor
xchg
jmp
scas
idiv
retf
jb
js
sub
push
(bad)
or
pop
cmp
pop
and
jb
mov
outs
push
and
jmp
xchg
add
inc
pop
cmp
dec
xor
inc
cs
je
int3
push
in
nop
cdq
je
das
xor
in
jg
(bad)
(bad)
jmp
cmp
je
push
and
sub
push
sub
push
(bad)
shl
leave
adc
cmp
arpl
lods
push
dec
inc
inc
ds
mov
mov
int3
xor
xchg
scas
enter
xchg
fstp
and
iret
or
push
test
push
adc
dec
push
test
fsubr
imul
int3
test
jbe
inc
xor
mov
xor
jl
and
sub
das
mov
clc
mov
push
adc
sbb
mov
add
(bad)
jno
cmc
inc
push
mov
test
sub
xor
jns
lds
lock
les
sbb
jne
mov
pop
and
hlt
add
sbb
mov
cmp
retf
int3
xchg
and
add
cmp
mov
call
pop
and
mov
mov
mov
sbb
lock
mov
fwait
and
sub
in
es
lods
iret
lahf
cmp
xchg
or
add
add
xchg
or
loop
stos
dec
mov
ins
and
inc
retf
push
mov
es
push
add
xchg
or
in
in
aas
push
cmp
adc
sbb
cmp
cwde
mov
js
xchg
or
xor
outs
xchg
hlt
or
xor
mov
mov
adc
mov
mov
lock
clc
push
jo
adc
divps
mov
pop
add
jl
shr
shl
iret
shl
add
cmp
push
or
xchg
add
test
or
jmp
cdq
dec
push
mov
adc
mov
cs
add
sbb
cmp
in
inc
nop
sbb
cmp
add
fimul
cmp
sbb
dec
out
inc
rol
mov
push
mov
push
lea
and
and
call
int3
pop
stc
shr
jle
idiv
les
add
adc
cmp
push
fs
cmp
push
adc
outs
call
or
xor
ss
and
hlt
cmp
popf
xor
mov
test
test
pop
pop
adc
imul
leave
jnp
ror
lds
mov
mov
loopne
push
mov
push
add
dec
jo
dec
test
gs
pop
mul
sub
lods
addr16
sub
pop
jmp
aaa
(bad)
mov
lods
jp
out
pop
jmp
call
mov
dec
pop
call
dec
je
sub
imul
xor
jb
pop
aam
xor
inc
sbb
adc
sbb
and
mov
push
dec
(bad)
xor
and
lds
aaa
ja
cmp
and
cmp
cmp
sbb
jecxz
jns
in
xlat
lock
adc
repnz
add
in
test
pop
mov
jno
sub
sbb
and
sub
not
jmp
fistp
in
nop
mov
inc
cmp
add
fbstp
in
(bad)
inc
sbb
sub
jne
arpl
test
cli
cmp
add
or
loope
inc
or
inc
cld
push
cld
in
je
hlt
aas
inc
inc
cld
loopne
push
mov
je
jns
adc
cld
das
not
dec
jnp
enter
movs
mov
push
adc
mov
adc
xor
xlat
cli
mov
jp
cmpps
pop
jo
repnz
sahf
lods
into
les
popa
cld
dec
lea
lods
inc
lods
cmp
jne
mov
jle
cmovb
daa
shl
inc
dec
rcr
in
adc
pop
sub
pop
add
test
sar
shl
fidivr
clc
gs
aas
add
loopne
sbb
pop
or
xlat
push
loopne
and
pusha
sub
xor
xor
sbb
(bad)
push
mov
arpl
popa
inc
sbb
inc
(bad)
sub
aas
mov
xchg
std
and
dec
xor
or
ret
(bad)
cmovo
jo
and
add
sbb
and
shl
mov
jl
pop
sub
inc
inc
and
test
es
jb
push
mov
inc
pusha
(bad)
cmp
pop
and
adc
clc
or
sbb
out
das
scas
iret
test
dec
cmp
inc
mov
or
xchg
cmp
cmp
rcr
pop
cld
pop
add
bound
mov
pushf
add
adc
mov
mov
imul
cmp
es
fwait
das
sbb
in
dec
hlt
call
sti
icebp
int
add
pop
xchg
push
aad
or
push
pop
or
inc
cwde
or
jp
adc
sbb
leave
sar
out
mov
rcr
mov
add
or
and
fisttp
out
repz
rol
or
sti
sbb
xchg
or
popa
push
arpl
mov
pop
sub
adc
push
sar
push
sbb
or
gs
mov
jno
sbb
inc
cmp
es
push
adc
fwait
in
test
cmp
loop
mov
pop
fwait
jmp
mov
int
inc
or
jb
inc
aaa
fiadd
cmps
cld
jae
shl
gs
jne
push
lds
mov
ror
and
mov
or
sbb
sub
cld
call
or
imul
enter
push
pop
jmp
js
dec
mov
push
adc
dec
ret
adc
sub
ins
push
fidivr
frstor
fmul
mov
add
push
mov
mov
cmp
mov
das
out
sar
lods
nop
nop
(bad)
test
push
test
icebp
or
ss
and
push
lock
movs
popf
cmp
in
push
(bad)
or
test
push
(bad)
imul
pop
rcl
ficomp
xchg
and
xchg
and
test
sbb
neg
dec
fiadd
js
mov
jns
cmps
inc
or
jge
cmps
mov
lahf
xchg
or
sbb
cmps
mov
aaa
icebp
add
dec
mov
push
push
mov
mov
imul
neg
mov
mov
and
dec
shl
add
adc
or
jne
bound
fs
test
clc
sub
lahf
sbb
adc
xor
add
dec
(bad)
jge
fdiv
pop
lahf
xchg
inc
aam
push
add
clc
or
xchg
push
ror
xchg
jmp
pop
fwait
cmp
add
push
in
cwde
(bad)
lods
xor
add
mov
push
int
and
push
sbb
(bad)
xor
aas
into
sbb
add
dec
dec
and
das
jmp
cmp
or
dec
cld
retf
mov
cli
dec
aam
or
add
nop
cmps
aaa
jmp
jb
and
mov
xchg
jns
mov
in
cmp
repnz
mov
jmp
dec
sbb
fisttp
xchg
mov
sbb
rep
aad
inc
jmp
dec
ds
outs
and
xchg
les
mov
mov
(bad)
loopne
or
and
std
cmp
retf
inc
pop
je
rcl
leave
pop
ret
inc
sub
call
cwde
jl
inc
cmp
jne
lock
ss
add
jb
jns
dec
sub
mov
mov
adc
aad
or
daa
xor
fcomp
push
and
int3
mov
push
sar
xor
int3
gs
nop
ret
gs
(bad)
jl
pop
mov
ins
push
or
les
or
push
sub
fld
dec
xchg
fwait
pop
and
adc
ss
xchg
mov
call
dec
enter
dec
loop
adc
or
pop
mov
sbb
lds
dec
dec
xor
aam
call
aas
out
jmp
inc
sub
icebp
or
cmp
test
adc
(bad)
icebp
sbb
mov
jle
sbb
mov
movs
fst
cmps
das
pusha
addr16
fdiv
xchg
mov
and
pop
test
xor
dec
pop
or
adc
add
inc
cs
dec
add
jno
shl
add
cmp
and
push
ins
xor
lods
lods
push
push
adc
xchg
inc
test
add
xor
loopne
pusha
call
sbb
lds
push
mov
jmp
test
add
mov
fwait
adc
enter
test
jle
push
push
add
cwde
hlt
ret
sbb
xchg
fsubp
or
call
dec
push
mov
adc
call
sub
movs
jno
jge
mov
int3
push
sub
mov
shr
sbb
mov
mov
xchg
push
frstor
or
dec
jo
or
shr
cmps
push
call
push
push
mov
inc
sbb
inc
lods
mov
push
adc
inc
push
jmp
cmp
imul
adc
jl
push
sbb
das
popf
fist
test
mov
pop
mov
icebp
imul
adc
mov
dec
ret
ja
fstp
inc
sbb
aaa
jmp
pop
rcr
int3
inc
mov
sub
dec
mov
out
imul
xchg
imul
test
jae
imul
adc
push
inc
outs
lods
js
add
xchg
xchg
sbb
or
sbb
add
in
xchg
lods
ret
xchg
out
rcr
sub
das
pop
sbb
sbb
or
cmp
call
sbb
rcr
sub
xor
mov
imul
adc
xor
pop
sbb
cmps
push
call
add
adc
inc
call
adc
mov
dec
and
or
add
sub
and
imul
repnz
push
mov
jo
mov
cmp
cmp
mov
mov
lock
sub
mov
scas
imul
mov
sbb
sub
dec
bound
push
sbb
add
mov
sub
mov
push
cmps
lock
add
inc
cmp
ss
rcl
leave
rcl
cmp
or
push
ret
adc
sub
aaa
dec
nop
adc
inc
mov
pop
jle
push
loop
sahf
inc
nop
push
or
cwde
nop
pop
ror
xor
mov
outs
cwde
pusha
jg
je
cld
mov
mov
mov
mov
mov
das
and
push
inc
pop
(bad)
sub
push
(bad)
adc
cmp
arpl
imul
aaa
test
cmps
pusha
mov
push
test
outs
les
push
jg
fiadd
push
sbb
jno
cmps
or
div
and
push
enter
sub
push
pop
test
push
outs
(bad)
inc
ret
xchg
int3
sahf
mov
sub
data16
jmp
sbb
pop
xchg
lock
pop
sbb
inc
das
pop
rol
or
test
imul
rcr
push
js
out
js
add
push
rsm
adc
leave
outs
fdecstp
mov
ret
mov
sbb
ffree
retf
sub
imul
cmp
es
pusha
pop
pop
cmp
xchg
pop
and
push
mov
add
sbb
mov
jp
shr
test
rcr
into
or
sysret
cmp
or
and
js
ss
pop
sub
add
or
fstp
out
pop
inc
dec
in
shr
push
add
sub
and
dec
(bad)
rcl
inc
sbb
cmp
xor
rcr
inc
ins
xchg
xor
xchg
out
mov
add
sbb
sar
sbb
or
mov
fisttp
ins
and
rol
dec
and
push
and
jmp
les
or
test
xor
mov
aad
lods
movs
cmp
xchg
dec
sbb
pop
add
and
sub
sbb
adc
xor
ins
bound
test
dec
inc
popa
imul
mov
es
and
lds
movs
test
add
push
movs
push
(bad)
push
jo
push
ins
les
mov
fimul
cmp
ins
fcom
pop
inc
movs
mov
dec
imul
int3
lods
punpckhbw
push
outs
inc
push
pusha
rcl
or
push
lods
pop
in
jnp
rcr
jle
or
ins
jg
xor
dec
push
fisubr
test
js
sbb
push
push
movs
ror
popa
stos
pop
repnz
pop
loopne
xchg
sbb
dec
imul
dec
fist
(bad)
icebp
imul
jmp
mov
test
popa
push
xchg
je
cmovbe
sti
push
mov
mov
aaa
aas
sbb
adc
sub
fs
add
sbb
add
or
pop
adc
dec
inc
inc
dec
dec
rol
fldcw
mov
pop
or
xor
push
les
add
test
arpl
push
xor
cmp
adc
add
sub
mov
mov
push
fistp
out
fwait
adc
nop
aaa
pop
push
or
mov
lods
sub
jo
je
push
ret
sbb
outs
imul
mov
and
add
test
popf
add
cmp
popa
mov
sub
popa
add
daa
add
sbb
les
(bad)
ja
sar
popa
inc
cmps
int
rcl
ss
in
cmp
and
ins
jmp
fs
loop
sti
xor
mov
in
(bad)
scas
push
mov
inc
sub
adc
sbb
adc
xor
sub
mov
push
add
dec
adc
dec
and
sbb
xor
push
call
add
and
fdiv
adc
(bad)
push
addr16
adc
add
in
fmul
ja
fnstcw
push
icebp
data16
ins
mov
daa
pop
stos
aas
out
dec
rcr
dec
pop
into
push
loopne
repnz
out
ds
push
sub
dec
jns
out
pop
jo
xchg
cmps
out
jns
out
retf
add
adc
out
push
and
dec
pop
ins
out
sahf
out
mov
jns
(bad)
aad
add
es
push
in
and
xchg
and
fisub
rcr
sbb
jl
and
mov
push
pusha
xchg
inc
mov
xor
dec
xchg
mov
push
inc
pop
cwde
imul
and
lods
call
popf
clc
cmp
sbb
js
inc
in
xchg
and
ficom
xchg
sbb
inc
pushf
(bad)
push
sahf
imul
inc
jnp
cwde
xlat
pop
jmp
sbb
xor
addr16
pop
inc
sub
inc
mov
jl
pusha
nop
fstp
test
repnz
or
in
xchg
ret
xchg
(bad)
push
add
push
xchg
ret
pop
es
mov
lock
jae
and
dec
mov
xchg
push
push
and
(bad)
not
adc
and
push
test
jne
dec
xor
popa
xor
jne
mov
add
out
mov
cdq
lock
nop
inc
jne
inc
fwait
or
loopne
inc
pop
nop
int
dec
dec
lock
xchg
xchg
pop
pusha
test
and
or
out
jle
sbb
dec
jl
int
and
(bad)
call
fldenv
in
popa
pop
or
cli
dec
xchg
jmp
add
inc
addr16
cmps
xor
lock
(bad)
out
add
repz
lock
out
call
push
call
xchg
inc
rol
aam
outs
nop
push
mov
or
dec
and
add
imul
jg
or
ins
movs
and
aam
cmp
shr
clc
cmp
imul
push
mov
adc
add
not
push
daa
scas
xlat
pop
stos
add
mov
add
xchg
sbb
je
push
cwde
and
xchg
sub
mov
mov
jle
jno
lahf
mov
js
in
jbe
movs
ds
outs
add
mov
push
add
sub
nop
push
rol
sub
mov
fdiv
mov
cmp
sbb
and
xlat
inc
stos
popa
call
adc
xor
popa
sbb
aam
pop
or
fistp
or
cmp
inc
sbb
les
jns
retf
pop
mov
lock
xchg
cmp
mov
pop
adc
adc
or
add
cmp
add
dec
xchg
push
dec
inc
popa
sub
das
sub
fld
pushf
inc
xor
xchg
add
rcl
inc
mov
sub
test
clc
popfw
fisubr
push
ins
xlat
bound
scas
xchg
aam
cmps
hlt
jo
fwait
lods
pop
cmp
and
add
cmp
jl
neg
adc
push
ror
dec
mov
jne
sbb
jbe
fcmovnb
mov
out
sbb
jno
add
mov
mov
add
jae
push
popa
xchg
sub
jnp
cwde
adc
cs
leave
sbb
push
test
add
pop
or
sbb
scas
loopne
js
push
jl
outs
xchg
cli
repz
inc
mov
mov
imul
(bad)
and
pop
or
push
add
cmp
pusha
push
inc
add
or
add
or
lods
push
pop
pop
push
add
pop
gs
mov
movs
(bad)
iret
pop
xor
dec
adc
add
outs
push
xor
inc
lods
mov
and
push
mov
fnstcw
xchg
push
inc
sbb
cmps
cwde
stos
dec
gs
dec
adc
mov
leave
xor
mov
pop
push
in
in
jle
cld
mov
push
mov
or
inc
and
mov
push
mov
mov
daa
push
(bad)
call
push
adc
scas
and
inc
sbb
vmread
pop
je
adc
rol
dec
call
xchg
xchg
in
xchg
call
push
mov
imul
and
and
icebp
jg
push
popa
sbb
push
jb
add
xor
lea
mov
mov
pop
xchg
mov
mov
pusha
xor
inc
pusha
dec
out
pop
ret
(bad)
in
add
and
nop
jae
dec
mov
or
rol
stos
clc
pop
dec
clc
jo
je
fisttp
add
pop
add
pusha
fnsave
je
pop
in
inc
sub
fucomp
or
sub
test
jb
dec
test
jb
adc
sub
adc
les
scas
nop
adc
ds
mov
and
nop
and
xor
inc
xor
test
jne
sub
cmp
(bad)
and
add
cmp
(bad)
out
pushf
adc
imul
fdiv
sub
adc
push
call
add
test
mov
mov
xchg
or
cmps
mov
inc
sbb
iret
jno
les
mov
dec
cdq
js
dec
retf
cmps
push
sbb
dec
in
(bad)
je
or
repz
and
call
retf
clc
dec
ins
mov
test
in
mov
sub
mov
and
ss
aaa
in
bound
dec
cmps
gs
popa
xchg
nop
inc
mov
les
sbb
popa
in
add
mov
mov
outs
pop
adc
sbb
xor
or
mov
add
mov
in
dec
add
jp
mov
dec
or
push
add
out
inc
mov
(bad)
daa
in
in
lds
in
cmp
xor
les
adc
sub
xchg
outs
in
lods
in
das
mov
mov
inc
in
xor
jne
lock
pop
retf
js
inc
retf
in
in
jns
xor
in
pop
adc
dec
ret
add
or
mov
std
adc
gs
out
test
pop
xchg
mov
aaa
push
push
imul
aas
or
or
push
pop
jl
cmp
or
fisubr
pop
and
and
add
test
(bad)
jecxz
and
frstor
add
jmp
xchg
and
or
imul
inc
sbb
mov
jne
sti
or
dec
sar
xchg
popa
mov
cmps
aas
sub
imul
cmp
dec
enter
push
inc
jg
push
stc
push
test
das
sub
(bad)
jmp
cmp
stc
popa
adc
aaa
mov
xor
push
outs
pop
dec
aaa
popa
jle
xchg
test
sti
mov
fsubr
sbb
rdpmc
ret
fisttp
leave
test
dec
jmp
sbb
lock
add
test
test
(bad)
arpl
fistp
arpl
les
add
(bad)
mov
sbb
xor
aam
add
fs
mov
lods
sub
mov
je
push
xchg
js
jmp
and
and
stc
adc
in
jge
pop
inc
jb
push
or
xchg
dec
leave
xor
adc
jo
dec
mov
in
inc
add
in
lock
jg
(bad)
or
test
sub
add
sbb
jmp
ss
lock
inc
jecxz
or
(bad)
es
xor
mov
leave
xchg
movs
cmp
mov
xchg
or
in
sub
dec
imul
(bad)
jmp
int
mov
adc
mov
jmp
aaa
sbb
sbb
(bad)
mov
add
and
rcr
inc
ins
add
xor
push
inc
out
call
bts
and
xor
aaa
sub
adc
sub
xchg
and
enter
sar
repnz
sbb
pop
inc
bound
shl
call
jae
scas
movs
repz
enter
xor
cmps
popa
and
mov
test
or
inc
adc
push
jae
(bad)
dec
inc
das
jecxz
xchg
cmp
and
xlat
adc
xor
sbb
jno
jb
es
xor
js
out
rol
inc
add
xchg
fsub
inc
xchg
and
push
add
sbb
imul
mov
cwde
movs
pop
daa
sbb
sub
sbb
sbb
lods
in
daa
dec
or
jne
rcl
jl
push
sbb
fiadd
icebp
les
mov
test
test
fsubr
xor
int
or
jmp
or
int
push
cdq
shl
fdivr
in
lea
adc
(bad)
call
jmp
push
pop
mov
ficom
int3
lds
nop
out
sub
fsubr
lahf
pop
adc
sbb
shl
hlt
jae
test
adc
fadd
mov
jmp
scas
shl
bound
push
and
movs
add
push
push
enter
popa
test
test
test
ins
push
inc
jb
adc
or
mov
cmps
loop
test
add
sub
push
dec
mov
in
loopne
adc
mov
sub
in
xchg
xor
cmp
ss
add
xchg
xchg
loopne
or
(bad)
and
and
jmp
ret
jnp
inc
loopne
push
aaa
pop
scas
and
in
test
dec
add
add
adc
add
or
call
pop
rcl
enter
sti
arpl
xchg
lods
xor
sub
iret
adc
sub
(bad)
jns
sub
add
or
inc
call
inc
jmp
sbb
in
sub
sub
inc
mov
stc
inc
cmp
push
in
sbb
es
mov
pop
jne
fidivr
lea
xor
inc
ror
adc
je
dec
or
lock
add
xor
xor
push
or
fld
imul
jle
mov
cmc
sbb
inc
movs
dec
lods
sub
push
pop
pop
pop
inc
sub
add
cmp
fstp
cmp
cwde
call
sar
(bad)
fdivr
in
stos
fld
inc
and
in
addr16
pop
in
arpl
jb
sub
je
inc
pop
mov
inc
ins
inc
add
add
adc
rcr
push
enter
arpl
jp
popf
dec
call
call
xchg
imul
in
xchg
ins
movs
es
push
mov
and
sahf
ror
lea
mov
test
cli
push
test
fwait
adc
dec
cmp
fwait
stc
sub
dec
lods
shl
mov
test
pop
cmp
inc
adc
jnp
cmovl
push
xor
popf
or
mov
pushf
aad
push
pusha
addr16
push
stos
sbb
dec
push
adc
cmp
retf
and
and
ret
add
jns
inc
jmp
cmps
lahf
loope
xor
div
(bad)
aam
in
loope
mov
mov
mov
mov
mov
js
add
mov
adc
mov
add
lock
sub
sub
push
sub
sbb
mov
mov
mov
add
sbb
push
cmps
or
fsub
push
dec
xlat
daa
rcr
fdivr
mov
add
pop
xchg
mov
inc
mov
cmp
popa
stc
(bad)
lock
test
daa
add
push
push
ss
out
xchg
fmul
and
push
sbb
in
ret
add
cdq
call
mov
cmp
aas
cmp
sub
loopne
outs
lock
cmc
xchg
stos
leave
and
bound
test
lea
lahf
ins
shl
cmp
ficom
add
xor
out
pop
adc
retf
sbb
jecxz
add
dec
dec
pop
aaa
pusha
xor
xor
ds
add
pop
adc
jbe
add
jns
imul
inc
add
push
nop
sti
and
call
or
dec
scas
or
leave
mov
mov
sbb
or
sbb
jg
pop
and
xor
repz
nop
stos
outs
lahf
imul
lods
lock
cs
dec
lods
push
xchg
mov
scas
cmp
hlt
fdiv
xchg
mov
jns
mov
nop
test
das
cmp
rcl
or
push
or
inc
mov
test
(bad)
jle
ja
mov
push
adc
sbb
pop
mov
ret
sahf
pop
add
sub
aam
popa
sub
mov
scas
adc
sub
add
jmp
cmp
sahf
sbb
add
adc
add
mov
xchg
mov
mov
mov
gs
add
add
add
pusha
and
xchg
and
pop
add
xor
shl
add
mul
dec
call
clc
sub
ins
aam
call
add
js
or
jecxz
xor
xchg
popf
jmp
sub
movs
adc
xchg
jo
and
mov
mov
push
icebp
ins
pop
mov
push
mov
xor
add
cld
or
mov
test
out
mov
push
push
lock
mov
xor
lock
jmp
sahf
jb
iret
fs
add
or
dec
fcom
les
cmps
mov
bound
les
cmp
xchg
in
nop
lock
inc
add
pop
iret
xor
(bad)
add
das
and
inc
sbb
popf
imul
or
jmp
inc
add
ins
imul
cmp
mov
and
je
jo
add
xchg
push
int
add
and
mov
enter
aaa
dec
mov
sub
adc
sbb
and
dec
jmp
in
arpl
inc
repz
nop
sub
jl
lea
sti
out
or
mov
jmp
inc
cs
das
ret
add
inc
xor
pop
dec
adc
mov
test
rep
cdq
nop
dec
xor
loope
enter
in
(bad)
ret
lea
push
or
mov
movs
dec
fadd
lock
dec
ret
push
stos
jbe
push
aas
mov
sbb
je
and
lea
cmc
loopne
(bad)
fdiv
es
xor
rcl
mov
iret
mov
shl
sub
xor
fdiv
sub
fcom
jns
cmp
and
and
jae
cdq
mov
and
mov
das
in
pop
pop
adc
mov
clc
and
push
push
jne
out
sti
mov
push
or
mov
sub
mov
in
and
mov
jmp
lock
mov
lods
lds
adc
in
sub
or
daa
enter
push
(bad)
fwait
int
adc
jb
fs
xchg
int3
and
add
pop
rcl
hlt
xor
(bad)
dec
lock
loopne
lds
hlt
xor
enter
mov
inc
jle
mov
or
push
sbb
or
in
cmps
adc
xchg
fcom
adc
add
fdivr
stos
aam
cmp
outs
ret
(bad)
hlt
jl
hlt
cmp
rol
dec
add
mov
mov
adc
mov
push
mov
lock
dec
mov
or
in
sub
fadd
inc
sbb
enter
imul
jecxz
clc
mov
aaa
js
pop
jbe
mov
lock
xchg
movs
nop
push
js
out
out
pop
sub
xor
ror
adc
sbb
inc
jmp
push
add
int
push
adc
mov
adc
jmp
dec
and
or
add
xor
lods
and
mov
and
sub
xchg
lock
add
cmp
leave
mov
faddp
pop
mov
test
mov
inc
enter
cdq
(bad)
pop
(bad)
test
out
test
imul
dec
adc
sbb
repnz
in
call
lock
adc
cli
sbb
in
movups
(bad)
cmp
dec
sti
xor
pushf
dec
or
pop
ins
inc
or
push
mov
je
call
(bad)
mov
rol
popa
dec
mov
rcl
scas
add
call
xor
inc
sub
push
out
lahf
mov
in
lock
sbb
sbb
hlt
add
lock
push
mov
and
adc
stos
bound
pop
sbb
xchg
mov
iret
pop
sbb
popf
je
add
in
jecxz
ret
xor
inc
push
adc
popf
xchg
jo
es
int
rcl
sub
mov
push
call
inc
leave
or
jg
cmp
test
fldenv
jae
mov
and
jecxz
and
nop
call
test
lea
jbe
jns
sahf
in
mov
mov
sub
or
test
leave
jl
or
movs
sub
adc
xor
movs
adc
push
movs
inc
mov
movs
xchg
cmp
retf
jno
adc
movs
add
push
mov
sbb
daa
add
cmp
in
and
push
movs
call
cmp
or
movs
in
repnz
lods
out
sub
je
xchg
adc
pop
mov
mov
push
mov
movs
sbb
iret
loope
jno
ror
pop
in
jo
push
cmps
dec
pop
mov
cmp
mov
add
sbb
xchg
sbb
jns
sbb
sbb
xchg
xchg
aas
fdivr
and
or
cmp
dec
and
and
adc
nop
(bad)
jns
(bad)
repnz
adc
sub
cmps
mov
(bad)
cmps
sbb
mov
pushw
les
pop
push
rol
mov
lea
cmc
(bad)
cmp
test
shr
sub
push
mov
dec
addr16
(bad)
in
pop
fcom
out
push
fcom
neg
sbb
in
mov
add
loopne
in
mov
push
in
test
rcr
(bad)
mov
jmp
mov
sti
pushf
jl
loopne
test
test
imul
sbb
mov
leave
sub
sub
nop
adc
mov
and
dec
and
pop
stos
xchg
aaa
scas
lods
je
inc
dec
aas
in
in
(bad)
imul
inc
sbb
ror
sahf
jae
cmp
mov
cmp
and
sbb
stos
push
xor
mov
push
enter
lods
loopne
leave
or
pop
sub
lods
(bad)
xor
lods
dec
test
mov
inc
xchg
aam
pop
adc
inc
iret
loopne
add
cdq
add
aam
inc
jo
lds
aad
scas
inc
pushf
ss
mov
xchg
sbb
sbb
xor
shl
and
test
xlat
sub
imul
xor
mov
xor
jl
mov
push
pop
cmp
and
mov
xor
jne
adc
xor
jge
(bad)
ins
push
dec
jne
(bad)
mov
pop
inc
xchg
dec
fwait
int
mov
xchg
arpl
loopne
and
loope
add
call
call
enter
sub
dec
imul
push
pop
into
cs
cmp
mov
cmp
inc
call
loopne
shl
enter
leave
fs
enter
out
test
js
mov
test
add
sub
add
stc
and
pop
cmps
lods
mov
pop
rol
ret
fld
sbb
dec
das
scas
shl
adc
loop
daa
xchg
xchg
mov
jae
and
mov
sbb
push
xchg
vmwrite
mov
rcl
clc
pop
loope
cmc
and
test
mov
adc
je
jecxz
mov
inc
mov
mov
inc
dec
imul
sub
lods
and
xchg
call
cmp
and
in
lods
mov
sti
test
sbb
add
mov
movs
iret
xchg
mov
popa
fcom
xchg
and
xchg
adc
inc
xchg
jl
xchg
mov
push
cs
adc
ret
lahf
jge
fadd
dec
push
add
dec
dec
dec
sub
sub
dec
dec
dec
dec
cs
adc
dec
dec
dec
dec
adc
adc
dec
dec
dec
dec
push
pop
sbb
dec
dec
dec
dec
sbb
sbb
dec
dec
dec
dec
push
pop
add
dec
dec
dec
dec
add
add
dec
dec
dec
dec
push
pop
or
dec
dec
dec
dec
or
or
nop
dec
fidiv
in
lods
jb
nop
sbb
mov
push
jb
bnd
(bad)
(bad)
icebp
bnd
jb
repz
cmc
div
jb
idiv
stc
cli
jb
jb
sti
cld
std
(bad)
jb
jb
jmp
loope
xor
and
dec
int
mov
sbb
jmp
push
adc
ss
adc
xor
pop
fld
hlt
push
aaa
dec
daa
sub
xadd
aaa
add
ror
add
mov
add
aam
xchg
cmp
loop
movs
(bad)
in
enter
cmp
shr
mov
bound
xor
ficomp
pop
arpl
bound
stos
outs
mov
sbb
cmp
test
call
test
or
add
sbb
jo
cmc
add
jnp
add
mov
outs
mov
js
movs
jns
sub
or
jne
dec
xor
icebp
or
push
adc
pop
jecxz
std
mov
jle
jmp
imul
stos
lea
dec
mov
xchg
rol
cmps
pusha
and
loop
pop
lods
add
mov
imul
aad
(bad)
pop
push
sbb
int3
dec
imul
btc
and
pop
xchg
enter
and
jne
jmp
outs
out
fdivr
inc
jg
retf
push
add
or
test
jne
sbb
ja
outs
adc
xchg
cmps
test
push
xchg
fscale
ins
sbb
dec
stc
mov
adc
xor
sbb
lahf
nop
or
out
mov
xchg
or
and
xor
add
test
mov
rcr
xchg
add
das
push
xor
inc
js
fs
mov
ins
aas
imul
mov
inc
and
clc
dec
jne
push
cmp
in
sub
mov
fist
sub
mov
sar
add
jo
int
idiv
adc
inc
dec
ja
mov
and
movq
add
push
pmuludq
dec
xchg
jle
push
aas
push
nop
outs
ret
sbb
lods
ss
and
aaa
sbb
enter
rcr
mov
jmp
sbb
sbb
add
hlt
repnz
lock
in
pusha
xlat
inc
cs
add
fnstsw
dec
ret
cld
and
mov
mov
mov
sub
adc
iret
aad
cmp
(bad)
inc
mov
imul
mov
hlt
and
cmp
in
leave
in
jns
add
dec
enter
test
xchg
(bad)
sbb
popa
out
push
jge
add
sbb
and
in
repnz
dec
es
push
mov
xchg
cdq
sbb
push
out
xchg
dec
or
sahf
xchg
pop
add
out
add
in
in
dec
enter
in
pop
pop
nop
cs
mov
das
xchg
xor
and
dec
in
lock
fdiv
fisubr
fbstp
shl
retf
jae
xchg
and
loopne
mov
inc
ins
pop
add
push
xor
pop
jle
push
hlt
inc
jmp
fwait
pop
cmp
data16
dec
sub
xchg
lock
mov
sbb
jae
xor
loopne
mov
dec
out
ror
inc
sbb
ss
or
das
or
push
pop
dec
adc
cmp
shl
fcomp
jb
dec
sbb
call
cwde
mov
sbb
add
add
scas
js
dec
xchg
add
or
jmp
ins
jnp
add
clc
ins
sbb
data16
jbe
aas
mov
jns
adc
or
add
jne
mov
mov
in
dec
push
js
and
in
loopne
nop
int
or
ror
sbb
sbb
retf
adc
call
dec
jle
in
push
sub
and
(bad)
jbe
xor
inc
sbb
icebp
rol
push
xor
(bad)
std
mov
dec
lods
lock
or
loope
fnsave
lahf
enter
jnp
push
add
add
in
sub
sub
jmp
pop
movs
je
neg
mov
or
dec
sar
and
cmp
ins
ins
test
rol
xchg
mov
sub
jb
cmp
sub
fisub
sbb
fwait
push
jae
aaa
add
data16
movs
dec
add
inc
push
add
add
sbb
add
mov
or
inc
jg
dec
xor
mov
out
nop
dec
dec
mov
jmp
lods
mov
jecxz
inc
es
mov
ret
jle
inc
jb
fsubr
mov
xor
sbb
shl
cwde
mov
xchg
mov
test
inc
call
icebp
and
movs
push
mov
repnz
and
jb
jge
shr
addr16
jae
or
or
sub
inc
pop
(bad)
pop
or
ja
jns
fsub
mov
jno
mov
adc
retf
xor
dec
aas
punpckhbw
mov
add
movs
add
(bad)
in
and
mov
scas
pop
sub
mov
and
scas
mov
das
enter
or
and
pop
outs
test
outs
jl
push
jae
bound
in
cld
(bad)
das
pop
ja
add
sub
cmps
add
test
bound
enter
mov
(bad)
daa
mov
enter
bound
nop
lea
or
pop
add
jge
les
mov
inc
push
inc
jl
lock
into
popa
cmp
test
xor
push
cmp
(bad)
daa
add
das
add
pop
pop
in
push
fbld
popf
pop
pop
xor
aas
shl
(bad)
ror
hlt
mov
mov
xor
cmp
push
push
dec
and
mov
push
dec
arpl
inc
xor
enter
push
push
inc
push
inc
inc
dec
push
in
cmps
jge
push
dec
pop
dec
inc
repnz
sahf
inc
inc
inc
mov
push
push
mov
movs
pop
pop
ja
push
dec
repnz
pop
push
inc
xlat
inc
push
out
dec
inc
sahf
mov
push
xchg
cmp
jl
add
pop
mov
dec
pop
dec
pop
lahf
push
pop
in
mov
jle
dec
push
pop
dec
xlat
dec
push
mov
inc
inc
lock
inc
inc
push
dec
int3
nop
cmps
pop
pop
dec
cmps
adc
pop
xor
outs
push
inc
pop
mov
dec
inc
in
and
sub
push
inc
dec
dec
fcomp
fmul
leave
push
aaa
scas
loope
mov
push
push
inc
dec
dec
loope
mov
dec
fistp
dec
cmps
xlat
leave
mov
bound
aaa
addr16
inc
dec
test
xor
mov
ins
mov
dec
daa
pop
lea
xchg
mov
jne
inc
mov
xor
add
sbb
cmp
retf
scas
pop
int3
add
push
arpl
lds
mov
xchg
jmp
sub
cmps
rcr
cdq
pop
fstp
cmp
aas
push
xchg
or
cmp
jl
sub
je
inc
mul
jns
push
jg
inc
mov
mov
cmp
aaa
shr
int
xor
xor
sub
and
scas
aas
sbb
cmps
es
cmp
xchg
aas
ja
inc
push
in
xor
mov
test
inc
push
pop
jo
pop
inc
iret
ss
pop
push
pop
jb
push
xchg
inc
xor
push
in
aaa
inc
xor
xor
inc
sahf
pop
jb
inc
xor
jns
ss
enter
das
dec
xor
push
inc
inc
cmp
inc
dec
inc
fcmovb
sbb
push
outs
aaa
xchg
inc
mov
push
dec
sub
(bad)
push
xor
cs
dec
inc
inc
inc
mov
xchg
dec
push
push
mov
dec
pop
daa
dec
xor
fisttp
enter
dec
pop
dec
aas
xor
pop
repnz
sbb
dec
inc
dec
push
pop
push
dec
fwait
or
inc
dec
rcl
push
jbe
outs
xor
dec
sbb
pop
inc
push
jg
dec
lahf
pop
mov
imul
or
push
push
outs
cmp
(bad)
push
push
mov
mov
pop
push
push
jg
test
push
push
adc
leave
push
push
pop
pop
or
mov
jg
pop
add
mov
xchg
mov
add
adc
std
(bad)
icebp
adc
add
dec
jne
xchg
fadd
setle
rcr
push
lods
mov
lods
fidiv
test
outs
push
lods
and
rcr
jle
or
push
pop
sbb
aam
and
push
mov
cmp
or
and
add
inc
fld
add
xchg
sahf
xchg
mov
mov
stos
daa
mov
and
out
cs
jmp
movs
mov
in
or
add
call
jmp
add
pop
mov
movs
sbb
xor
inc
cmp
cmc
push
cld
fnstcw
pop
pop
fistp
add
sub
and
aaa
pop
xchg
(bad)
lock
xor
mov
fstp
or
stc
rcl
xor
fstp
iret
add
sub
dec
adc
xchg
iret
add
in
jbe
aad
clc
push
inc
jmp
nop
dec
ds
call
xchg
pop
imul
inc
mov
push
sbb
loope
inc
nop
jmp
add
out
adc
gs
dec
das
movs
mov
dec
cmp
and
push
movs
mov
(bad)
push
mov
push
inc
add
sbb
adc
xor
cmp
jg
jle
cmp
jl
cmc
outs
ret
mov
jg
sbb
loopne
xchg
push
fdivr
add
pop
mul
adc
add
call
aad
(bad)
xchg
jno
loopne
pusha
sbb
or
imul
lds
cmp
leave
sub
repnz
rcr
sub
sbb
push
mov
mov
add
add
aad
mov
(bad)
add
sub
sbb
push
mov
xchg
(bad)
dec
mov
pop
xchg
bound
fst
jle
cmp
and
leave
clc
cmp
inc
jmp
lods
imul
sbb
xor
xor
mov
and
xlat
retf
xchg
and
retf
and
lock
add
pop
jle
jmp
rcr
fst
out
inc
dec
and
mov
dec
dec
outs
adc
pop
les
or
jp
add
movs
and
popa
in
shl
adc
cmp
add
jl
mov
lods
retf
xchg
das
pop
int3
mov
aam
shr
std
repnz
mov
loopne
hlt
fcmove
pop
retf
(bad)
add
or
in
mov
pop
cmp
les
ret
inc
fdiv
pop
add
xor
in
test
xchg
and
in
adc
in
or
jae
xchg
nop
push
pop
or
pop
ret
das
es
movs
add
ins
cdq
fs
dec
popa
ins
push
xchg
dec
es
inc
rcr
cmps
dec
xchg
sbb
vunpcklps
pop
dec
xchg
jno
ja
fcom
add
enter
sbb
jne
pop
xchg
imul
ins
call
iret
mov
adc
adc
and
jmp
dec
add
jg
mov
hlt
ror
js
aaa
jge
dec
fsubr
fdiv
pop
gs
mov
and
inc
out
sub
(bad)
adc
enter
adc
xchg
(bad)
out
inc
out
xchg
cld
out
xor
pop
xor
in
pop
pop
cs
xchg
cmp
in
sub
add
loope
aam
jo
sbb
cmc
add
xor
aaa
push
push
out
scas
cmp
neg
push
mov
pop
adc
add
dec
je
dec
cmp
and
and
cmp
(bad)
mov
or
jb
add
pop
jmp
cmp
int3
retf
popf
mov
dec
shl
in
nop
(bad)
add
or
or
and
fidiv
lea
fwait
aam
sub
mov
sbb
xchg
enter
ja
ins
mov
stos
les
das
nop
sbb
jo
test
je
(bad)
rol
arpl
fdivr
(bad)
call
(bad)
and
and
and
and
es
sub
sub
sub
cs
cmp
add
ds
inc
pop
pop
pop
pop
pop
pusha
jnp
jge
xchg
sbb
sub
sbb
clc
xor
sub
mov
int3
push
mov
dec
sti
es
push
clc
pop
add
dec
clc
push
jmp
enter
repz
(bad)
in
pop
xor
fistp
mov
(bad)
outs
mov
mov
add
ror
add
bound
add
fs
jo
sub
lods
mov
add
jecxz
add
out
fwait
dec
ds
add
jg
je
pop
scas
push
inc
cmp
add
mov
dec
(bad)
outs
adc
mov
mov
movs
into
test
pop
or
cmp
xor
or
inc
movs
les
dec
mov
sbb
sbb
pop
mov
jl
sbb
fidivr
push
ret
jecxz
in
cmp
outs
mov
je
std
jno
fwait
inc
mov
test
aam
std
push
pop
sbb
push
adc
adc
adc
les
mov
dec
add
mov
sbb
es
xor
loopne
dec
push
jae
cmp
enter
sbb
dec
je
jecxz
test
test
cwde
xchg
shl
jmp
scas
cs
push
dec
fisttp
xchg
ror
inc
inc
sbb
cmc
add
retf
lods
cmps
jg
mov
mov
fimul
push
pop
cmp
sub
pop
das
xor
push
push
int3
push
push
dec
push
dec
add
jbe
or
loop
mov
mov
add
pop
rol
or
addr16
sbb
popf
fs
xchg
adc
inc
pop
es
add
jge
outs
sbb
pop
iret
or
dec
cld
daa
jg
or
cdq
(bad)
retf
je
or
sub
call
jns
mov
xchg
jecxz
xchg
xchg
jmp
addr16
ins
outs
outs
jo
jp
jne
ja
jns
inc
inc
cld
fild
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
inc
loope
cmp
push
push
push
adc
pop
jge
mov
cmp
lahf
fst
cwde
xor
dec
xchg
sbb
push
push
dec
xchg
xchg
inc
jmp
sbb
add
xor
ss
das
jmp
jb
cld
outs
or
inc
push
(bad)
cmp
je
cmp
and
not
shr
mov
ficom
xchg
sbb
add
loop
bound
dec
xchg
(bad)
and
or
mov
movs
iret
fsub
adc
mov
test
cmp
inc
loopne
and
mov
or
push
sbb
mov
fsubrp
dec
fstp
aam
jmp
dec
into
inc
and
mov
out
ins
ret
add
mul
loop
cmp
and
loop
jne
xor
pop
push
mov
and
xor
cmp
sar
je
gs
add
mov
(bad)
hlt
add
fldenv
dec
shr
test
or
sub
push
adc
(bad)
shl
cmp
js
push
aam
aaa
arpl
adc
das
pop
in
mov
ins
add
cwde
jae
pop
in
mov
sub
mov
and
add
loope
add
jge
inc
or
inc
xchg
xchg
add
pop
iret
das
mov
mov
cmp
call
xor
inc
adc
pop
sub
and
sbb
inc
sub
ret
or
pop
add
push
push
dec
push
mov
mov
lods
push
add
outs
pusha
mov
push
and
and
mov
mov
jmp
xor
jne
and
mov
mov
jle
iret
add
add
xor
add
push
movs
cmp
jns
jne
stos
fs
adc
out
test
xchg
jmp
inc
mov
ds
add
scas
popa
mov
push
cmp
call
pop
add
sub
pop
int
and
out
sub
cmp
pop
das
scas
add
add
lock
in
and
add
inc
leave
fstp
pop
dec
in
mov
rcr
push
icebp
push
mov
sbb
pop
test
jno
push
int
xchg
xor
adc
cmp
outs
cmp
jne
cmp
(bad)
jmp
cmp
jne
das
js
das
mov
push
dec
fmul
pop
mov
pop
add
fcomp
jo
sahf
mov
sbb
and
fcomp
ja
mov
mov
add
dec
push
shl
mov
in
jo
add
inc
aaa
mov
and
push
cmps
mov
jmp
shl
stc
adc
outs
add
add
inc
mov
sbb
pop
jo
fimul
or
dec
inc
sub
mov
cmp
outs
ss
jae
add
test
icebp
jge
xchg
pop
iret
(bad)
dec
aam
dec
or
sbb
fadd
mov
mov
aam
cwde
sbb
shl
frstor
mov
mov
and
add
and
jle
popa
or
dec
or
(bad)
adc
sub
cld
dec
push
dec
dec
pop
cdq
cmp
inc
add
mov
push
lds
lea
inc
push
movs
mov
imul
(bad)
(bad)
cmp
push
sub
cmp
inc
sub
cmp
retf
pop
enter
comiss
aas
cmp
adc
and
aas
cmps
leave
add
clc
add
mov
retf
(bad)
sub
fcom
sbb
retf
jne
cmc
cmp
jle
adc
cmp
jne
adc
psubsw
sub
mov
xchg
mov
mov
jge
mov
mov
xor
jae
xchg
dec
add
add
adc
pmovmskb
popf
push
icebp
jns
push
es
push
adc
mov
test
(bad)
xor
pop
std
mov
push
icebp
dec
jecxz
loop
jmp
sub
cmp
fwait
mov
loopne
cs
cwde
push
push
nop
xchg
fadd
adc
jns
fcom
sbb
push
pop
inc
rcl
jge
pop
fiadd
fst
jle
sub
(bad)
xor
push
push
cld
dec
mov
mov
iret
pop
pop
add
sub
mov
inc
or
rcl
pop
arpl
push
pop
jnp
jmp
and
cwde
rol
lds
int3
xchg
pop
mov
shl
jne
sub
out
scas
mov
pusha
pop
or
xchg
call
pop
jb
xor
add
add
lea
adc
or
(bad)
je
pop
mov
fild
repz
mov
push
push
xchg
sbb
popa
and
or
or
adc
cmp
rcr
leave
and
adc
sub
or
mov
les
xchg
adc
push
in
outs
push
push
xchg
lea
mov
pop
add
sub
pop
mov
mov
and
dec
cmp
repz
retf
jle
call
shl
imul
add
xchg
add
clc
add
je
mov
jno
call
inc
je
je
jno
leave
sbb
sbb
push
lds
and
int3
jns
inc
mov
fisub
nop
and
call
sub
test
jge
mov
mov
xchg
xchg
lock
pop
repz
shl
add
(bad)
jmp
sar
adc
pop
aam
xchg
jle
add
mov
dec
jmp
cmp
sbb
xor
mov
leave
and
ja
outs
xchg
loopne
push
ds
fbld
jmp
add
pop
adc
xor
xlat
fnstsw
pop
and
fs
cwde
mov
add
adc
aaa
add
fmul
xor
sub
int3
cmp
mov
loop
pop
inc
fcom
add
push
mov
mov
sbb
jo
cmc
add
imul
cmp
cmps
ret
mov
sar
arpl
jle
(bad)
cmp
test
xor
cmp
sub
std
ins
std
rol
mov
ds
sbb
add
xchg
jo
jnp
or
mov
in
ret
cwde
xor
pop
pushf
nop
(bad)
fs
lods
fild
and
loop
idiv
mov
loopne
(bad)
sbb
pop
retf
into
pop
add
and
sbb
adc
pop
xchg
mov
and
sub
sub
push
frstor
inc
rol
div
pop
aam
xchg
xor
adc
add
adc
pusha
or
test
push
cmp
out
scas
mov
or
cmp
adc
mov
mov
mov
jno
ror
iret
clc
in
test
inc
cld
or
or
dec
cdq
dec
add
cmp
inc
fstp
xchg
(bad)
mov
pop
inc
sbb
loopne
or
rol
add
(bad)
pop
xor
mov
cmp
ja
xchg
stc
add
or
push
fs
mov
dec
pop
cdq
jne
sub
repz
leave
sub
inc
ins
and
scas
sbb
or
cmp
xadd
call
fisttp
or
neg
and
or
lods
bound
ror
popa
movs
movs
mov
js
je
rcl
iret
pop
sbb
mov
xchg
sub
mov
js
out
adc
sbb
mov
out
aas
ret
sti
inc
mov
mov
dec
clc
test
add
sub
test
loopne
aam
out
xchg
out
sbb
and
pusha
sar
mov
inc
nop
out
nop
outs
mov
les
or
in
mov
mov
jl
dec
cld
sbb
mov
mov
test
mov
or
dec
loope
mov
push
fs
mov
inc
adc
pop
movs
inc
mov
inc
inc
dec
push
push
push
push
sbb
xor
pop
xlat
in
out
inc
push
xor
mov
push
repnz
add
sbb
inc
enter
sbb
or
xchg
inc
fwait
inc
pop
jl
sbb
inc
pop
xchg
or
pop
sbb
in
adc
iret
call
dec
or
push
jne
addr16
push
push
(bad)
fistp
test
ja
adc
inc
cmp
xlat
(bad)
ror
adc
pop
xor
(bad)
retf
pop
mov
mov
push
in
lahf
xor
mov
add
or
and
push
dec
not
shl
std
stos
mov
add
or
pop
adc
fisttp
xchg
jbe
sahf
mov
inc
mov
xchg
xchg
in
jne
fiadd
sub
add
fdiv
aad
repz
(bad)
popa
jne
jecxz
add
mov
out
push
call
jmp
add
call
push
ret
ins
cmp
push
bound
xchg
mov
aad
push
mov
shl
stos
mov
rol
test
jl
jecxz
or
les
sbb
or
fcomp
push
xor
sti
(bad)
jmp
cld
add
or
popf
add
aaa
and
jbe
mov
enter
add
or
jae
daa
pop
xor
fwait
xor
je
add
shl
jmp
push
push
xor
dec
(bad)
mov
add
xor
mov
ds
add
mov
pop
push
sub
js
jmp
retf
(bad)
and
in
inc
rcl
xrelease
cli
mov
mov
adc
fs
inc
out
fcomp
sti
mov
mov
jno
fdiv
aaa
push
outs
mov
fiadd
jmp
inc
mov
or
and
sub
sub
sahf
or
in
inc
or
pusha
das
sbb
add
adc
mov
and
lods
sahf
or
shl
mov
cmp
dec
adc
sbb
sbb
sub
adc
pushf
pushf
pushf
add
sbb
xchg
mov
mov
hlt
loopne
gs
mov
jmp
mov
pop
mov
arpl
xor
add
xor
jle
sahf
mov
jmp
fistp
sub
int3
sbb
jne
dec
jecxz
mov
sub
cmp
out
hlt
call
xor
cmp
popa
jb
fdivr
fwait
pop
or
cmp
xchg
push
shl
repnz
mov
jg
lock
cwde
in
and
lock
jp
adc
movs
mov
jp
and
or
or
in
cmp
rcl
fs
cs
xor
jecxz
push
out
rol
mov
test
cmps
add
and
loopne
loopne
add
lea
aaa
arpl
mov
or
rcl
ret
mov
mov
pop
push
clc
je
mov
sbb
xchg
sbb
fcomp
loope
and
and
(bad)
outs
retf
xchg
loope
test
pop
hlt
fdivr
xchg
aas
xchg
adc
push
or
outs
inc
das
add
or
pusha
test
inc
adc
icebp
add
mov
dec
shl
into
xor
xchg
mov
add
pop
je
inc
jb
push
dec
shl
jl
sub
(bad)
icebp
or
sbb
mov
loopne
clc
mov
pop
js
pop
mov
inc
sti
dec
mov
and
xchg
sahf
inc
test
rcr
mov
jmp
inc
jp
sbb
dec
test
mov
mov
sub
(bad)
das
shl
cmp
or
or
or
or
cmp
lea
cmc
sbb
sub
xchg
jne
or
in
inc
inc
ret
rcl
sbb
sub
and
stos
add
dec
sub
push
pop
ret
jge
test
iret
shr
fcom
leave
outs
jns
xor
add
dec
add
cdq
(bad)
hlt
xchg
sbb
jo
clc
sub
call
xchg
jp
and
dec
adc
mov
push
dec
xor
cmp
addr16
cmps
lock
outs
aaa
sbb
sub
ds
cmp
add
push
pop
stos
pop
jb
cmps
push
add
or
jmp
mov
popf
ret
inc
cwde
inc
and
or
rcl
test
pop
pushf
adc
pop
das
pushf
data16
xor
push
mov
push
(bad)
aas
pop
shr
mov
loopne
mov
mov
hlt
shl
xor
(bad)
and
or
jbe
call
fsubr
xor
cmp
add
cld
sub
ss
dec
cld
inc
daa
mov
mov
add
cmp
mov
and
mov
mov
(bad)
fldenv
movs
in
clc
mov
fdivr
and
add
mov
adc
mov
je
lea
cmp
nop
adc
ror
xchg
mov
adc
mov
push
hlt
mov
push
sbb
push
cmp
adc
addr16
bound
repnz
cmp
bound
xor
xchg
and
mov
mov
add
xor
dec
lock
nop
xchg
dec
cs
sub
sbb
cld
cmp
lds
fisubr
add
arpl
push
adc
fwait
cmp
mov
imul
dec
loop
add
hlt
push
(bad)
jo
add
fcmovu
adc
pop
les
jnp
es
fwait
fs
xchg
outs
adc
dec
sbb
xor
xchg
dec
lock
xor
hlt
mov
adc
in
aam
fadd
cmp
sub
xor
rdtsc
and
sub
and
(bad)
or
or
adc
jae
fbstp
or
push
cmp
add
sbb
push
nop
fild
or
(bad)
or
inc
mov
cli
push
push
inc
psubsb
paddsb
add
mov
xor
pop
inc
sbb
inc
not
mov
test
push
retf
dec
push
mov
in
je
sbb
add
add
fwait
out
sbb
push
add
mov
mov
or
jecxz
retf
adc
push
sbb
dec
xor
inc
aaa
movs
mov
push
pop
push
fidivr
lahf
cmp
das
sbb
jns
xor
xor
addr16
inc
inc
pop
mov
cmp
fcom
push
push
push
mov
inc
in
aad
int
aaa
pop
lahf
stc
push
outs
adc
data16
int3
inc
in
test
mov
xchg
jg
jbe
or
outs
add
outs
cmp
cmp
pop
daa
add
sbb
pop
mov
aas
xor
loopne
aaa
or
mov
or
push
push
add
adc
xlat
mov
jo
pop
and
hlt
adc
push
cld
add
xor
xchg
cmp
test
aad
cmp
mul
cld
pop
add
dec
enter
mov
aas
add
sti
ret
dec
mov
jnp
pop
pop
neg
dec
push
dec
jne
ja
dec
jle
push
fimul
and
adc
popa
or
movs
popf
sbb
mov
pusha
pop
push
pop
sbb
adc
ret
inc
pop
cmp
cmp
sbb
cmp
or
pop
clc
jg
(bad)
pop
outs
sbb
pop
push
jne
mov
iret
xchg
shr
rcl
pop
outs
(bad)
push
pop
je
xor
ficom
sbb
mov
jle
and
and
imul
sbb
ret
push
rol
sub
clc
ror
add
je
jl
sbb
sub
into
sub
retf
movs
loope
xor
hlt
jne
add
in
sub
mov
ror
ins
call
pusha
mov
in
push
(bad)
sub
adc
cmp
or
aas
cmp
jb
inc
sbb
ffree
pushf
add
fdiv
push
stc
fs
jmp
xchg
retf
xor
add
iret
adc
scas
repnz
push
aam
add
gs
pushf
pop
mov
push
ins
iret
js
enter
scas
iret
sub
inc
nop
cmp
js
push
sbb
ja
pop
add
xchg
(bad)
dec
aad
dec
adc
(bad)
xchg
sbb
adc
adc
mov
ja
rcl
sub
inc
add
addr16
inc
xchg
add
pop
ret
in
jne
stos
nop
lea
and
shl
sub
out
test
in
jmp
pop
add
and
or
iret
ror
cs
out
push
adc
shl
arpl
inc
mov
add
aad
push
nop
out
or
inc
dec
in
sub
pop
pop
imul
test
addr16
aam
sbb
adc
jb
jb
jmp
jb
jb
in
out
out
shl
jb
rcl
rcl
jb
jb
aad
xlat
fdiv
jb
(bad)
fcmovnu
jb
jb
fstp
ffreep
jb
jb
rol
les
jb
(bad)
enter
jb
retf
jb
jb
int
iret
mov
jb
jb
mov
mov
jb
jb
mov
mov
mov
jb
jb
mov
jb
mov
jb
jb
cmps
cmps
test
jb
jb
stos
stos
lods
jb
jb
lods
scas
scas
nop
jb
jb
xchg
xchg
xchg
xchg
jb
jb
xchg
xchg
xchg
cwde
jb
jb
cdq
call
popf
sahf
lahf
xor
jb
add
test
jb
mov
jb
lea
jb
jno
jae
jb
jb
jne
ja
dec
xlat
cli
jae
and
push
dec
(bad)
and
and
ficomp
and
jmp
dec
inc
dec
pop
out
sbb
pop
arpl
xchg
sbb
add
fdivr
mov
mov
ret
or
sbb
mov
(bad)
or
fidiv
fdivr
lock
add
scas
cmp
lea
or
arpl
and
ds
movs
mov
jb
idiv
pusha
adc
push
fdiv
ror
pop
fs
fild
in
lods
das
test
lods
jle
je
cmp
adc
mov
mov
xchg
inc
es
sub
fwait
addr16
sub
dec
push
and
(bad)
loopne
push
adc
dec
test
sub
repnz
in
cs
jae
sub
daa
push
ins
popa
add
push
dec
dec
xor
or
xchg
xchg
xchg
push
lods
sub
sbb
add
sub
icebp
cmp
or
test
cmps
data16
mov
sub
rol
xchg
inc
xchg
cdq
pop
or
jne
add
xor
mov
pop
ret
test
loop
push
out
add
ret
jl
int3
mov
nop
lea
mov
xchg
xor
and
sbb
es
enter
aas
rol
movs
pop
add
test
and
in
push
xchg
add
lock
hlt
fwait
xchg
xchg
lock
les
andps
shl
and
shl
cmps
mov
and
push
or
jmp
scas
and
es
adc
pop
pop
test
sub
iret
xor
cmp
aas
lods
imul
outs
scas
rcl
arpl
push
mov
sub
dec
cmps
xchg
and
shl
push
dec
pop
push
mov
inc
cmps
ja
or
emms
fcom
adc
dec
pop
push
rcr
(bad)
add
push
iret
or
and
lahf
add
fstp
mov
dec
push
arpl
sahf
mov
and
jo
jmp
inc
bound
inc
push
pop
iret
dec
mov
pop
rcr
or
pop
ror
xor
add
dec
or
lds
lods
mov
jp
mov
pop
inc
xchg
dec
pop
(bad)
(bad)
neg
cmps
lods
imul
and
pop
ret
jg
inc
add
int3
xchg
call
outs
push
add
shr
push
adc
cmovp
jmp
aas
pop
sbb
imul
sub
leave
xchg
aas
push
add
pop
xchg
in
mov
add
iret
lods
in
ss
xor
push
and
adc
jmp
(bad)
fild
leave
or
adc
pop
stos
push
add
mov
stos
add
cmp
cmps
cwde
sub
outs
jmp
imul
outs
addr16
push
inc
add
iret
mov
sub
add
pop
shl
push
push
pop
(bad)
adc
shl
mov
pop
(bad)
jmp
add
mov
mov
adc
mov
add
test
add
cmp
pop
sbb
and
or
cmp
sub
adc
fild
add
or
out
mov
dec
or
add
gs
add
add
pop
push
adc
stos
(bad)
jo
push
loopne
or
fild
jo
mov
inc
aaa
push
add
or
lods
inc
and
scas
or
sub
pop
sub
dec
dec
pop
fcom
xchg
or
add
pusha
add
mov
add
pop
xor
(bad)
ins
leave
pop
out
jae
sub
(bad)
jae
cmp
pop
mov
jae
xlat
cmp
or
pop
sub
pop
ja
adc
adc
imul
sub
and
xchg
add
fmul
(bad)
out
pop
popf
and
das
ffreep
and
inc
mov
dec
stos
push
add
pusha
iret
adc
aaa
push
daa
sbb
pop
inc
addr16
je
mov
outs
add
xor
rcl
inc
or
sbb
pop
inc
scas
cmp
rol
mov
jo
dec
out
add
pop
ja
or
(bad)
in
xlat
push
xchg
add
ja
div
lods
or
cmps
dec
or
pusha
add
outs
inc
jl
nop
dec
dec
pop
mov
add
add
xor
mov
jne
data16
sbb
gs
ficom
ja
test
adc
push
add
xor
mov
pop
or
daa
add
cmp
lock
push
lds
cdq
rol
ror
or
adc
push
jbe
push
xor
add
push
inc
and
pop
xor
mov
or
dec
or
xor
or
push
jb
xor
ins
std
pop
cs
xchg
push
dec
mov
aaa
or
sbb
inc
(bad)
imul
push
cmp
and
jno
hlt
pop
mov
addr16
lock
add
and
popa
jmp
xchg
dec
das
hlt
je
mov
cmp
mov
add
xchg
clc
pop
mov
mov
and
and
imul
gs
mov
cmp
cld
push
shl
sti
sub
mov
pop
leave
cmp
test
jp
(bad)
pushf
pushf
pushf
pushf
jge
jg
push
pushf
pushf
popa
bound
enter
adc
add
mov
jo
add
mov
push
sbb
pop
push
or
xor
ret
add
hlt
pop
or
inc
fbld
jnp
hlt
inc
inc
mov
dec
dec
rol
fnstcw
inc
jmp
cmps
test
aaa
nop
dec
das
sub
push
jmp
loopne
shl
mov
sub
rol
adc
enter
mov
dec
frstor
in
add
xor
add
sbb
sub
addr16
out
sahf
dec
jno
lea
jge
jmp
or
(bad)
push
sbb
mov
sub
rcr
sahf
cs
es
out
scas
ss
mov
inc
sbb
out
(bad)
add
and
xchg
and
cmp
push
adc
push
loope
push
out
inc
sub
or
jecxz
mov
les
dec
adc
cmp
inc
or
hlt
dec
lock
mov
daa
movs
adc
ja
push
cmps
pop
mov
mov
sahf
out
jg
jle
mov
enter
ins
and
pop
add
add
jge
mov
push
ja
push
movs
push
rcr
fiadd
(bad)
es
pop
sahf
out
push
add
push
or
xor
xchg
xchg
push
push
pop
dec
lahf
add
es
and
or
pop
ds
push
xor
or
jl
aas
adc
push
and
or
scas
push
jns
pop
or
xchg
iret
jae
mov
sbb
inc
adc
add
or
lahf
in
sub
or
adc
cmp
bound
test
stc
and
mov
arpl
lock
add
or
or
mov
ret
sbb
call
out
mov
das
cmp
push
or
inc
inc
bound
inc
sar
push
mov
scas
test
xlat
pop
adc
jns
mov
jb
call
pop
mov
jmp
pushf
mov
adc
int3
nop
shl
xchg
sub
push
ja
inc
jnp
or
cmps
pop
push
dec
dec
into
mov
mov
sbb
adc
jge
xor
dec
and
sti
and
test
pop
add
dec
fcom
aad
jmp
dec
mov
loope
sub
call
push
inc
add
jbe
loopne
movs
jmp
inc
imul
lds
cmpxchg
sub
inc
mov
adc
add
rcl
dec
and
push
aam
shl
cmps
adc
nop
adc
pop
mov
ret
and
fcom
fldcw
and
mov
js
call
and
jne
shl
xor
jmp
and
add
jle
mov
lods
jne
and
cmp
mov
sbb
mov
lods
inc
cmp
sbb
mov
cmp
aam
cmps
sub
cmp
jle
jle
jl
jnp
and
add
test
sti
nop
call
pop
sbb
inc
inc
ror
inc
out
sbb
mov
cdq
or
(bad)
push
cmp
paddsb
pop
adc
nop
inc
or
add
lds
inc
in
movntq
inc
inc
call
dec
xchg
data16
loopne
lock
shl
push
clc
xchg
fsub
and
fsubr
es
imul
lea
in
dec
inc
and
adc
xor
or
pusha
neg
fs
jnp
out
sbb
push
mov
mov
xor
cmp
or
mov
es
pop
add
pusha
rol
cmp
mov
jae
dec
sar
and
adc
jb
bound
inc
arpl
cmp
pop
mov
inc
inc
das
adc
xor
outs
push
sub
adc
dec
das
or
xchg
jmp
leave
jbe
jmp
jmp
push
xchg
nop
mov
jmp
push
push
cmovle
or
call
sub
mov
pop
inc
cdq
dec
cld
mov
jb
in
xchg
add
das
dec
shl
inc
xchg
jo
popf
lds
aaa
into
ret
add
into
or
mov
add
cmp
std
inc
jb
fild
push
pushf
jle
push
jg
push
xor
sbb
sbb
dec
(bad)
scas
test
pop
lea
and
push
adc
clc
mov
mov
dec
sub
jmp
dec
push
mov
mov
nop
inc
mov
mov
cmp
or
xchg
add
pop
push
pop
inc
add
push
invd
push
test
shl
daa
outs
pop
enter
rcr
push
ss
push
lods
dec
loopne
push
inc
outs
and
cld
push
adc
inc
aas
push
and
call
dec
sbb
mov
rol
cmp
cmp
or
bound
test
push
(bad)
add
call
sub
or
or
adc
add
fldcw
adc
or
inc
add
jmp
and
je
xchg
dec
gs
call
add
popa
cmp
jle
sbb
loopne
mov
fldenv
scas
ret
in
leave
push
push
adc
inc
ja
int
xor
hlt
pop
out
cmp
bndstx
mov
cmp
pop
data16
cmp
add
test
xchg
push
mov
or
jbe
xchg
mov
je
or
rcr
push
(bad)
sbb
imul
or
bound
push
cmp
rcr
add
push
hlt
ins
fadd
and
ins
fadd
mov
fdiv
and
int
add
pop
add
dec
add
int3
fs
ss
cmps
adc
(bad)
outs
pop
inc
ins
jae
fs
add
cmp
cmp
das
push
aas
mov
out
jecxz
xor
xchg
cld
out
push
daa
mov
push
sbb
fild
clc
pop
test
stc
or
sahf
jbe
ror
sub
mov
add
aam
fcom
cmp
retf
imul
sub
fisttp
or
sbb
push
retf
jp
ret
sbb
mov
xsavec
dec
dec
ja
jae
or
dec
call
rcl
xchg
push
mov
push
icebp
add
push
lahf
cmp
cmovp
cmp
or
sub
(bad)
je
push
mov
pop
mov
add
lock
xor
(bad)
mov
jno
add
or
imul
in
cmp
mov
xchg
sbb
inc
push
nop
or
fisub
add
retf
inc
or
(bad)
imul
mov
mov
and
sub
addr16
and
and
(bad)
cmp
aas
cmc
loopne
sbb
aas
adc
inc
sbb
minps
outs
sbb
and
jbe
daa
fadd
imul
rcl
fnstenv
sbb
adc
ins
and
and
jbe
fdivr
push
pop
fsubr
adc
loope
dec
sti
imul
test
(bad)
loop
xchg
jmp
or
sub
push
ret
and
outs
cdq
add
out
fcomp
cld
sub
push
pop
add
scas
sub
loopne
xchg
mov
inc
inc
mov
add
inc
dec
inc
inc
mov
inc
add
or
mov
int
or
add
mov
sbb
push
dec
xlat
sbb
jecxz
or
popf
xor
xor
pop
and
mov
inc
lock
inc
jg
dec
in
xlat
mov
imul
stc
push
call
pop
or
jae
and
and
shr
and
stos
rcr
add
sub
sub
xor
inc
sbb
popa
xor
jo
je
push
(bad)
rcr
pop
cmp
loopne
xchg
xchg
cdq
hlt
xchg
test
cmp
sar
sub
mov
popa
and
fdiv
mov
ficom
sub
adc
shr
test
add
pop
and
push
or
ror
cmp
pop
adc
pusha
inc
fs
in
pop
xor
pop
mov
dec
ins
in
daa
aam
imul
(bad)
sbb
add
push
lods
cmps
dec
jg
mov
mov
fcom
add
js
ret
daa
add
xchg
xor
pusha
adc
dec
retf
add
mov
cdq
xchg
fmul
mov
cld
mov
add
mov
push
and
push
sbb
shr
or
push
inc
sbb
nop
mov
loope
or
int
adc
jp
xchg
add
cmc
js
xchg
xchg
dec
xor
pusha
xchg
idiv
(bad)
shr
ror
jg
popf
mov
cmp
jno
nop
or
xchg
pop
jecxz
xor
push
jno
cmp
push
xor
cmc
cdq
pop
inc
gs
jmp
les
push
add
sub
adc
test
jecxz
jp
cmp
aaa
push
dec
fnsave
sub
jb
add
lds
adc
inc
test
cmp
push
mov
pop
movs
inc
mov
lea
es
cld
push
ins
pop
repnz
iret
dec
cld
enter
sbb
jne
pusha
xor
arpl
sahf
xchg
pop
mov
das
arpl
sub
mov
mov
loopne
add
push
push
fimul
push
dec
gs
pop
push
es
xor
sub
dec
add
shl
popf
fcom
pop
inc
outs
push
daa
mov
pop
loopne
add
(bad)
and
fimul
ja
xchg
pusha
ret
or
das
shl
cwde
or
mov
cs
jne
pop
test
xchg
add
pop
xadd
cs
jne
in
adc
adc
inc
add
movs
mov
and
push
aas
push
push
daa
sub
xchg
sbb
add
pop
daa
push
sbb
push
mov
jmp
push
aas
bound
jno
dec
mov
sbb
xchg
popf
push
mov
add
rcl
pop
mov
add
mov
mov
fistp
div
movzx
cmp
adc
clc
dec
push
ins
inc
cmc
inc
imul
mov
cmp
bound
not
lea
and
fild
push
dec
ret
das
add
and
add
cmp
adc
push
in
or
dec
dec
lahf
cmp
jl
aam
add
xchg
aad
ret
fadd
adc
jge
int3
push
nop
push
movs
adc
add
cmp
mov
add
inc
xchg
loop
mov
add
pop
mov
pop
(bad)
in
jmp
or
pop
pop
inc
mov
inc
or
in
xchg
inc
jge
or
add
cmps
xchg
mov
in
out
jne
inc
or
dec
imul
dec
in
or
loopne
ret
movs
loopne
addr16
into
push
adc
adc
pop
add
xchg
pop
adc
sub
in
or
movs
test
inc
cmp
jl
or
es
pop
jg
push
add
or
imul
push
das
sti
cmps
sbb
mov
loope
pop
adc
or
je
mov
mov
loope
xor
push
add
mov
popa
and
push
jbe
rol
or
add
dec
aam
je
adc
call
pop
or
leave
pushf
push
xor
mov
test
sub
or
xor
push
daa
and
lahf
(bad)
ror
mov
push
adc
fwait
inc
pop
dec
ret
hlt
fnsave
or
rol
push
mov
xor
xchg
test
and
aad
pop
jmp
jmp
pop
xchg
ss
or
mov
dec
lds
loopne
sahf
sbb
popf
add
push
out
dec
xlat
push
inc
mov
mul
jmp
push
shl
inc
out
sub
inc
(bad)
xchg
jo
xchg
stos
movs
mov
push
or
je
xchg
ss
scas
add
and
ds
ins
cmp
call
nop
aad
bound
cmps
out
movs
lea
push
fsub
test
lock
cmps
test
cmps
retf
sbb
sbb
add
idiv
pop
add
jle
ret
leave
enter
aad
add
ins
mov
cmp
ins
icebp
jne
push
ins
ficomp
add
and
ins
or
inc
xchg
div
les
dec
stos
cmp
jbe
and
cmp
mov
adc
xchg
xor
addr16
cmp
jge
add
and
dec
and
or
add
and
xor
add
dec
dec
sbb
pop
not
enter
lea
lods
xchg
stc
sar
dec
inc
aas
adc
cwde
lods
rcr
shl
(bad)
lods
pusha
cmp
test
push
add
clc
xor
sbb
or
inc
adc
rcl
jb
xor
in
and
rol
adc
mov
ins
fmul
mov
retf
jl
mov
adc
int
cmps
scas
dec
in
xchg
inc
xor
out
pop
loopne
lods
je
xor
out
mov
push
and
sub
ins
adc
sbb
add
lock
je
cmp
jb
cmp
ja
push
push
push
push
mov
int
dec
stos
push
or
or
jne
inc
fstp
mov
mov
mov
dec
jne
mov
mov
inc
cli
cld
add
cld
push
mov
sub
xor
cwde
js
sub
xor
add
cmp
or
sbb
push
fs
push
gs
imul
pop
or
cmps
mov
shr
inc
loope
cld
mov
clc
and
adc
sub
push
push
lea
repnz
dec
mov
cmp
popa
stos
call
cmp
dec
pop
inc
jae
xchg
neg
outs
fld
pop
fisttp
push
mov
ins
dec
cdq
push
mov
fwait
add
cs
inc
pusha
imul
sbb
daa
inc
cmp
ror
sbb
sub
inc
inc
push
mov
add
dec
(bad)
(bad)
sar
ds
test
daa
mov
das
shl
sahf
mov
or
loopne
xchg
pop
or
xlat
and
mov
loopne
movs
push
test
dec
test
inc
addr16
movs
ins
or
call
pop
mov
test
mov
mov
aaa
mov
adc
sbb
cmp
mov
lock
add
mov
jae
(bad)
xchg
dec
cmp
inc
pop
inc
jo
mov
aad
add
out
mov
out
dec
pop
das
or
sub
push
mov
or
pop
mov
daa
movs
aas
or
xchg
push
lea
and
je
push
out
mov
leave
shr
jmp
lods
movs
imul
dec
mov
sub
sbb
fidiv
cmp
rcr
sub
test
ss
add
mov
mov
and
push
pushf
cwde
pushf
pushf
pushf
pushf
xchg
nop
mov
out
jmp
sub
(bad)
xlat
pushf
fmul
outs
test
pushf
pushf
pushf
je
ins
push
fs
pop
pop
mov
pushf
pushf
push
push
dec
dec
push
cmp
repnz
enter
add
outs
add
in
dec
and
data16
mov
jmp
unpckhps
dec
loop
or
jmp
test
int3
imul
std
aas
sub
jmp
xor
or
push
jb
push
mov
je
xlat
cmps
mov
push
or
nop
iret
sub
ins
out
jb
(bad)
jo
in
sub
jb
add
sub
ret
jge
dec
push
push
outs
pop
and
out
push
lods
inc
das
push
push
addr16
sbb
dec
xor
nop
dec
outs
retf
xor
xor
xchg
and
nop
xor
fwait
and
aaa
add
xchg
mov
push
imul
scas
arpl
push
int3
mov
inc
xlat
and
jne
cmp
aaa
test
imul
push
pop
push
cdq
dec
sbb
dec
in
push
xor
and
pop
push
movs
jb
ins
pusha
jl
nop
retf
mov
sub
push
pushf
ins
lods
test
mov
xchg
or
jl
sbb
movs
in
cmp
inc
popa
dec
retf
push
xor
and
pop
mov
push
dec
push
outs
fcom
jo
push
outs
push
into
or
push
push
pusha
int
mov
inc
imul
or
aas
aaa
xor
fwait
shr
pop
retf
in
imul
jne
xchg
nop
mov
push
sbb
sbb
mov
jge
dec
mov
add
ins
pop
aas
push
cmp
test
sbb
test
add
cmp
test
add
lods
sub
pop
stos
nop
stos
nop
pusha
je
nop
stos
nop
js
add
ins
cmp
lods
or
pusha
ins
cmp
leave
sbb
pop
(bad)
or
movzx
enter
ins
mov
xchg
ins
pop
(bad)
sub
pop
cli
add
jmp
(bad)
sub
enter
push
popf
jo
adc
add
mov
inc
bound
add
je
mov
sub
retf
mov
dec
outs
les
je
das
cs
ror
fidivr
jmp
mov
push
sbb
pop
cmp
in
add
xchg
add
enter
je
jo
dec
les
loopne
fdiv
je
jg
adc
test
push
sbb
or
ss
mov
cmp
dec
cmp
mov
cdq
mov
lea
sbb
mov
jg
adc
int3
push
(bad)
mul
pop
loop
out
cmp
retf
sbb
or
lock
add
add
sti
lock
or
movs
clc
cmps
xor
movs
lods
mov
fbstp
inc
jbe
inc
sub
sub
aaa
cmp
jae
loope
je
push
and
and
jnp
adc
std
pop
es
adc
pop
or
jmp
push
push
repnz
adc
xor
shl
jmp
sbb
pop
(bad)
jecxz
popa
mov
xor
dec
adc
dec
mov
inc
jg
mov
cwde
or
test
adc
mov
and
pop
adc
mov
je
sub
pop
scas
or
jno
sub
mov
cmp
and
add
(bad)
(bad)
out
xlat
sbb
sahf
sti
movs
(bad)
fcomp
add
adc
mov
push
add
xchg
imul
fcomp
cmp
je
stos
adc
leavew
out
dec
loopne
add
inc
adc
cmp
in
sbb
push
setne
cwde
mov
inc
pop
or
pop
je
mov
sub
cmp
mov
ins
sub
shr
xor
xchg
add
push
cwde
push
or
xchg
adc
jb
lock
xor
call
jmp
dec
adc
pop
fs
in
dec
sbb
ja
inc
jns
cmps
jge
aaa
jae
inc
dec
pop
addr16
sahf
out
xchg
jns
enter
in
cmc
out
out
jns
pop
mov
push
sbb
cld
sar
sub
add
sbb
dec
dec
mov
pop
and
mov
xor
xchg
imul
adc
movs
mov
popa
call
dec
mov
mov
mov
and
mov
push
call
sub
rol
(bad)
sub
scas
cdq
hlt
rcl
jnp
addr16
mov
mov
out
mov
pop
sahf
dec
fmulp
sbb
lods
fs
(bad)
jae
push
hlt
cmp
sub
and
xchg
add
pop
in
xchg
sbb
fsubr
fldenv
xor
xor
inc
and
sbb
jl
lahf
pusha
inc
dec
cmps
repnz
sahf
pop
xchg
pop
cmp
and
pop
xchg
in
leave
jae
pop
cld
xchg
push
sub
pushf
cmp
lahf
call
rcr
sbb
clc
mov
push
les
test
iret
enter
loopne
dec
call
(bad)
and
inc
sahf
sub
add
clc
xchg
out
test
outs
(bad)
push
in
mov
fstp
add
test
cmps
xchg
lahf
(bad)
repnz
cwde
xchg
xor
ins
pushf
cdq
bnd
mov
sub
inc
fcomp
xor
(bad)
sbb
test
inc
dec
hlt
xchg
ins
not
loopne
test
mov
aaa
mov
movs
ins
not
mov
push
xchg
push
loopne
push
pop
fild
sbb
daa
iret
enter
mov
dec
xor
mov
fsubr
test
mov
push
in
repnz
cmps
mov
cwde
xchg
iret
enter
mov
and
jo
sub
push
jge
nop
call
mov
jmp
pushf
pop
in
xchg
cwde
fcomp
mov
les
mov
mov
in
addr16
mov
mov
sub
xchg
mov
repnz
and
xor
adc
nop
(bad)
mov
iret
call
pop
xor
fsubr
push
push
ja
cmp
test
hlt
mov
mov
xlat
dec
int3
lahf
xchg
out
in
xor
and
xchg
sbb
ficom
adc
in
leave
xor
les
inc
add
pop
cmp
xchg
pop
mov
or
and
xchg
out
daa
pop
cmp
inc
fs
cmc
cmp
hlt
sbb
les
adc
jmp
or
xchg
inc
inc
dec
movs
or
or
neg
dec
gs
push
jo
or
inc
sbb
jmp
pop
push
imul
outs
push
jo
xchg
cmp
and
xchg
or
or
bswap
sbb
push
adc
jmp
cmp
imul
dec
ret
sbb
sar
and
add
or
retf
xor
push
or
add
push
mov
mov
ret
adc
and
adc
test
sbb
sub
xchg
adc
shl
push
sbb
pop
mov
(bad)
and
inc
and
push
jne
je
ret
dec
or
aam
sub
inc
cwde
push
(bad)
adc
jne
sbb
gs
jne
ficom
xor
or
inc
clc
das
mov
and
push
and
inc
add
sbb
and
and
pop
sbb
mov
xor
add
xchg
adc
mov
jp
gs
pusha
mov
aad
sbb
fisub
cmp
mov
ret
fcomp
imul
and
jae
sub
push
sbb
lods
mov
xor
pushf
sbb
fidiv
jo
xor
pusha
mov
add
sbb
adc
addr16
cmp
or
push
push
push
gs
sbb
jl
jo
fs
sbb
push
nop
dec
push
div
adc
dec
dec
gs
jle
or
pop
fwait
jge
dec
imul
dec
ret
or
inc
pop
(bad)
push
imul
pusha
ja
adc
mov
nop
push
and
js
inc
mov
mov
cmps
ja
or
jns
push
or
sbb
sbb
outs
repnz
iret
adc
push
jb
popa
pop
push
shr
add
loopne
cwde
movs
jno
cmc
jmp
sbb
jbe
popa
xchg
inc
ins
call
and
dec
rol
mov
ins
gs
inc
push
gs
aad
add
xchg
inc
adc
retf
mov
je
icebp
fisub
and
xchg
retf
bound
jnp
fwait
mov
js
pop
shl
cs
or
push
popa
fs
push
adc
jp
ins
into
pop
sbb
mov
inc
xor
jl
in
fnstcw
nop
mov
add
jmp
ds
add
mov
cwde
jg
mov
xchg
xchg
add
mov
pop
mov
into
or
cmp
inc
inc
(bad)
sub
add
mov
and
add
out
adc
fcmovnb
inc
xor
or
fnsave
adc
mov
adc
aaa
inc
xchg
push
sub
jae
sbb
add
and
and
and
jo
or
xchg
mov
aam
shl
xchg
mul
dec
jae
push
adc
add
cmps
or
jo
mov
adc
out
mov
mov
daa
leave
pop
or
add
inc
sbb
xchg
mov
imul
adc
push
mov
fisubr
dec
outs
sbb
push
stc
(bad)
ret
test
popa
movs
cmps
xor
pop
inc
jbe
ins
fimul
les
or
jne
jne
ret
inc
data16
push
sub
mov
jns
xor
mov
pop
push
(bad)
cs
cmps
and
xor
xchg
or
ins
inc
jo
pop
dec
call
pop
push
or
and
aam
arpl
outs
rol
ja
cli
fcmovbe
xchg
add
outs
add
or
rcr
pop
mov
sbb
outs
push
je
mov
mov
mov
sub
shr
xchg
loope
outs
and
sub
addr16
test
mov
or
addr16
pop
push
sbb
mov
lods
setbe
shl
inc
outs
outs
xchg
pop
shl
jne
fs
or
inc
ja
aas
dec
push
hlt
mov
fistp
ins
sub
loopne
outs
cs
cmps
lea
mov
imul
iret
dec
inc
push
cld
mov
and
jne
pop
or
and
xchg
or
daa
(bad)
(bad)
push
mov
dec
mov
adc
pop
rol
aaa
sbb
mov
sub
cs
xchg
(bad)
dec
mov
adc
call
pop
or
gs
adc
jmp
sar
aaa
push
test
pop
sbb
sbb
add
call
das
loopne
mov
out
or
pop
scas
and
mov
add
(bad)
inc
popa
imul
mov
and
pop
lds
pop
jmp
test
daa
outs
mov
pop
and
xor
add
adc
outs
and
xlat
dec
mov
push
or
aad
sub
pop
lods
dec
lock
and
or
pop
test
fsubr
lahf
and
je
es
xlat
sbb
xor
out
sub
inc
sub
and
test
push
mov
pop
outs
js
xor
mov
inc
aas
stos
ds
xchg
add
or
jo
adc
xor
inc
rcl
push
ret
dec
mov
pop
cmp
(bad)
fistp
pop
inc
fld
inc
inc
sub
mov
inc
ins
jae
inc
pop
sub
enter
adc
cmp
and
inc
fdiv
arpl
pop
into
add
adc
out
add
adc
push
aam
push
pop
adc
pop
cmc
(bad)
popa
jg
in
xchg
pop
dec
dec
and
(bad)
mov
addr16
inc
inc
test
xor
mov
jae
sbb
sbb
mov
or
cli
push
or
sub
cmc
push
sbb
mov
out
sbb
pop
mov
xor
or
nop
mov
mov
(bad)
adc
or
dec
cmps
or
cmp
ret
jae
sbb
enter
popa
xchg
pop
cmp
mov
mov
rcr
cdq
sub
(bad)
popa
stos
mov
adc
xchg
jbe
iret
jae
and
call
imul
pop
fsubr
push
xchg
out
xor
jg
test
outs
mov
add
xor
jne
push
xchg
rol
ins
int3
pop
xchg
add
jecxz
push
xchg
mov
pop
xchg
jecxz
cmp
cmp
dec
fisubr
sbb
bound
push
lods
arpl
mov
adc
inc
xchg
xor
lea
je
sbb
(bad)
cmp
cwde
mov
push
test
adc
mov
push
sub
xchg
jbe
cwde
inc
lods
dec
das
pop
adc
jg
scas
aad
xchg
je
ud2
pop
jmp
or
gs
gs
je
imul
lods
adc
dec
call
movs
das
bound
sbb
and
mov
sbb
das
ja
mov
inc
push
mov
shl
sub
(bad)
ins
jmp
xor
setbe
lods
out
pushf
(bad)
outs
mov
pop
sbb
xchg
(bad)
cmova
frstor
jae
inc
mov
cmpxchg
adc
and
pop
dec
ins
fld
and
das
daa
and
mov
inc
jmp
ja
jmp
inc
jne
sbb
push
jo
sbb
out
sbb
inc
and
ins
pop
int
aaa
in
cwde
pop
ins
xchg
pop
pop
inc
addr16
lahf
js
retf
les
jl
cmp
mov
dec
scas
outs
mov
add
loop
xor
loopne
xlat
jns
outs
scas
inc
stc
mov
xchg
inc
sbb
(bad)
inc
or
pop
out
push
lods
mov
or
push
enter
inc
test
pop
call
dec
jae
push
mov
and
jne
add
scas
xor
sbb
jge
pop
mov
or
or
cmps
scas
test
scas
dec
rol
cmps
adc
adc
jne
xchg
and
push
push
das
inc
jbe
ja
add
aas
fidiv
xchg
mov
sbb
push
xor
popa
lea
push
push
popa
push
call
and
inc
push
(bad)
adc
or
jbe
fwait
call
and
inc
pop
jbe
push
pop
pop
pop
sar
inc
addr16
jmp
push
ins
jns
out
les
aam
cmps
cmps
fld
popa
xlat
sbb
jp
lods
sbb
jae
xchg
inc
mov
push
nop
add
ss
dec
jno
and
ja
pop
jne
dec
inc
retf
xor
loope
xchg
xor
aas
and
add
pop
xchg
sub
push
push
xlat
call
xor
xor
mov
cmc
scas
fs
and
stos
popa
inc
aas
mov
lods
adc
xchg
dec
(bad)
or
mov
inc
ins
outs
pop
shl
out
pop
enter
sbb
outs
push
mov
pop
adc
mov
adc
arpl
iret
nop
sub
adc
push
inc
and
sub
loop
inc
inc
outs
add
movs
add
mov
inc
in
loopne
push
out
pop
jb
mov
push
adc
mov
inc
sub
adc
xchg
inc
aaa
add
mov
mov
push
rcr
inc
adc
sbb
movs
xor
add
pop
or
jbe
xchg
or
cmc
cmps
scas
or
pop
pop
and
inc
cs
into
push
movntps
jge
jge
mov
pop
fs
or
cmp
loopne
jno
nop
nop
push
xchg
sbb
aaa
pop
or
mov
xor
xor
dec
enter
mov
inc
jg
jae
mov
or
les
xor
jb
or
xchg
add
push
pop
lahf
pop
and
add
mov
aaa
xor
sar
push
or
adc
xor
call
(bad)
cmp
sbb
push
xor
lods
(bad)
pop
add
cwde
ins
sub
shl
repz
and
lea
jge
mov
adc
pop
cmp
mov
je
and
xchg
loope
and
sbb
push
cmp
and
(bad)
mov
and
frstor
adc
call
adc
clc
cdq
jmp
outs
sbb
xor
sbb
mov
sub
movs
test
call
mov
cld
push
in
and
push
dec
cli
or
fs
imul
jg
test
lods
in
push
cli
push
mov
push
adc
cmps
jmp
or
and
nop
arpl
ins
retf
(bad)
out
push
mov
lods
pusha
mov
scas
call
mov
(bad)
xor
cwde
je
mov
push
cmp
fistp
fwait
mov
test
adc
cmp
or
jge
xor
push
gs
xchg
ja
sub
dec
xor
dec
push
cmp
aam
mov
nop
mov
jns
lahf
dec
add
add
pop
sub
fs
or
add
arpl
imul
nop
ja
pop
(bad)
fwait
jl
dec
repz
adc
(bad)
adc
adc
bound
and
or
shl
das
ins
pushf
(bad)
dec
mov
je
and
mov
aaa
pop
call
out
xchg
sbb
scas
pop
mov
in
mov
adc
xchg
and
and
pop
add
jg
push
or
daa
cmp
aaa
push
shr
arpl
push
sbb
mov
fld
bound
mov
sbb
rcl
jo
mov
fld
gs
dec
add
icebp
xchg
aaa
push
daa
inc
imul
dec
fadd
mov
mov
das
mov
nop
cmps
push
push
repz
(bad)
mov
add
imul
jbe
add
ja
ins
aam
call
outs
outs
inc
popf
sub
cld
loopne
daa
push
loopne
(bad)
rcl
jp
iret
test
movs
in
xor
adc
ins
cmp
cli
mov
add
movs
sbb
call
lahf
outs
call
xor
nop
or
lahf
shl
xchg
pop
iret
sbb
inc
enter
mov
cmp
enter
pop
add
xchg
inc
or
enter
mov
push
test
push
xlat
xchg
call
call
outs
pop
frstor
lods
not
int
(bad)
mov
pop
xor
cmp
inc
adc
cmp
std
or
movs
std
sti
je
adc
pop
mov
ficom
add
dec
std
push
daa
nop
inc
xchg
loop
inc
jl
add
cmp
in
push
ja
push
js
int3
cs
add
xchg
dec
(bad)
sub
cs
add
(bad)
or
xor
add
dec
or
cmps
sbb
add
js
test
imul
add
pop
pop
aas
mov
inc
cmps
add
add
or
jge
xchg
xchg
mov
xchg
pusha
shl
fmul
movs
mov
pcmpgtb
pop
push
rcl
or
pop
and
lods
xchg
fcom
ror
cmp
add
mov
sbb
cmp
gs
cs
dec
data16
inc
fiadd
aam
add
dec
enter
mov
ja
mov
sar
call
ds
add
aaa
dec
sub
add
cld
lock
jle
or
outs
into
or
push
imul
(bad)
pop
aas
les
inc
pop
pop
inc
mov
inc
push
push
into
push
dec
dec
push
inc
add
bound
or
dec
je
in
sub
push
add
push
push
add
mov
push
push
push
out
push
xchg
lock
push
nop
push
xchg
push
in
mov
sbb
push
push
fwait
push
xchg
and
mov
dec
jnp
test
dec
dec
inc
xchg
fnstsw
(bad)
mov
push
dec
push
inc
ss
sahf
mov
xchg
fist
or
push
jle
nop
arpl
xchg
out
pop
adc
push
pop
inc
dec
push
out
dec
inc
inc
pop
inc
inc
ins
mov
ja
jae
fsubrp
into
test
dec
cli
inc
cs
push
push
push
leave
or
or
adc
inc
dec
inc
add
pop
push
dec
cmp
in
loopne
inc
xchg
inc
(bad)
or
sbb
inc
or
fwait
cmp
sbb
inc
mov
or
sbb
push
push
fadd
xchg
pop
dec
dec
fimul
in
popa
int
mov
cmovnp
inc
jb
dec
lds
fs
inc
jg
push
xor
sbb
outs
add
mov
inc
std
add
nop
mov
xor
inc
mov
pop
aam
sbb
xchg
and
int3
xchg
setno
adc
imul
adc
xchg
push
pop
add
fmul
push
xor
add
ja
dec
shld
jns
iret
fsubrp
cld
or
cmp
push
push
xchg
inc
mov
jo
mov
nop
retf
test
cmp
sub
and
push
clc
sbb
sub
scas
or
ja
adc
push
stos
inc
pop
and
mov
sub
pop
daa
and
sbb
add
and
cmp
add
inc
(bad)
shl
popf
push
mov
jl
jmp
inc
add
mov
test
fs
lods
cwde
movs
sti
pop
cmps
inc
jb
stos
mov
mov
sbb
jb
(bad)
fcomp
int3
nop
je
jmp
dec
leave
cmps
cmp
fadd
jo
push
es
mov
fsub
sub
and
lahf
leave
inc
jb
sbb
cmps
push
adc
adc
in
std
aam
xchg
cmp
lods
lds
ret
jo
push
or
loopne
shl
and
aam
jecxz
ins
mov
inc
dec
xchg
les
inc
cmp
sar
je
sahf
or
shr
xchg
aas
push
mov
sub
jmp
xchg
sbb
adc
pop
pop
add
es
jne
add
lods
imul
aas
js
pop
cmp
outs
pop
add
add
retf
mov
ret
xchg
adc
int
ret
push
cwde
sub
cmp
stc
scas
inc
fmul
pop
fidiv
pop
out
or
sub
scas
ins
xor
sub
push
add
jne
je
(bad)
ins
cmp
mov
inc
fisttp
inc
xor
and
xchg
add
push
mov
test
shl
jne
leave
scas
(bad)
push
adc
and
leave
adc
or
lock
pop
pushf
test
jmp
sub
inc
ror
in
ret
cmp
add
mov
mov
or
mov
or
and
mov
adc
mov
inc
sar
adc
cld
push
or
repnz
pop
lods
xchg
add
xor
lds
dec
mov
addr16
or
xor
sbb
sbb
lea
sahf
xor
in
data16
in
mov
stos
xchg
fisubr
add
(bad)
dec
or
mov
(bad)
or
or
ret
sub
jae
and
outs
sub
and
and
mov
mov
mov
std
xchg
mov
je
scas
or
shl
(bad)
and
aam
jp
pop
fsubr
jmp
repnz
cmc
xor
or
lods
add
ds
leave
mov
test
add
daa
sub
or
xor
int3
lds
jp
lds
fwait
nop
jmp
nop
sahf
dec
xchg
add
outs
ja
enter
xchg
dec
les
dec
repnz
xor
sar
arpl
add
inc
xchg
inc
mov
jg
imul
out
push
shl
pop
sti
adc
push
hlt
mov
movs
add
push
rol
cmp
mov
xor
loopne
lahf
rcl
xchg
add
sbb
add
jl
ret
xchg
and
xor
xor
push
test
loop
push
and
sbb
jne
xchg
lods
mov
cmps
and
adc
or
or
push
enter
aam
pop
xchg
or
or
sub
and
enter
rol
pop
outs
jle
mov
jne
jmp
(bad)
adc
or
and
das
pop
loopne
loopne
or
push
arpl
dec
or
xor
sbb
in
mov
cmp
dec
xchg
gs
sub
and
repz
ja
inc
or
and
(bad)
aas
push
sbb
pop
enter
(bad)
movs
(bad)
xchg
shr
mov
push
add
push
mov
push
sbb
arpl
and
inc
xchg
mov
mov
xlat
cdq
in
in
add
movs
or
arpl
lods
stos
or
or
dec
xchg
out
push
xor
dec
add
push
sbb
pop
xchg
int
lock
rol
add
cmp
push
std
fild
push
and
push
movs
pop
jns
out
test
inc
inc
out
sahf
out
and
add
idiv
or
cld
mov
or
enter
cmp
(bad)
scas
mov
aam
push
clc
in
retf
sbb
(bad)
mov
mov
push
sbb
pop
(bad)
mov
mov
pop
daa
ds
clc
mov
and
add
lock
mov
mov
ins
fldenv
ret
mov
pop
push
adc
pop
mov
mov
sbb
scas
loopne
scas
cwde
inc
popa
push
or
frstor
aas
adc
push
leave
inc
push
nop
and
rol
clc
cmp
pop
aaa
cmp
je
rcr
jmp
sub
adc
push
push
jmp
xchg
movs
pop
xchg
imul
and
push
push
les
test
cli
and
xor
pushf
mov
cmc
dec
fisttp
sub
add
outs
and
and
test
dec
mov
add
xor
and
or
and
adc
mov
or
cmp
ret
and
test
xchg
add
or
adc
add
push
std
mov
xlat
in
aam
mov
push
push
add
sub
fcmove
ins
sbb
dec
cmovne
cmc
xor
outs
push
mov
aam
out
arpl
mov
push
cdq
xchg
ja
cwde
lods
movs
cs
lods
or
sbb
push
mov
ds
add
out
les
xlat
rcl
adc
sub
xchg
add
loopne
xchg
cwde
inc
push
adc
inc
lods
add
inc
(bad)
shl
icebp
gs
mov
cmp
jecxz
sub
jne
lock
mov
sbb
xchg
aam
leave
dec
shr
scas
fbstp
jge
cmp
dec
lock
cmps
ror
sub
sbb
fild
popa
mov
and
iret
push
sar
pop
add
mov
sti
js
les
sub
xadd
xchg
adc
inc
mov
mov
adc
adc
adc
fmul
daa
fist
jne
test
stc
inc
test
push
and
loopne
dec
push
xchg
mov
add
add
pop
popa
xor
(bad)
sub
iret
add
in
nop
fisub
xchg
jmp
inc
xor
pop
outs
and
and
fwait
jge
aaa
jo
dec
mov
cmp
sub
imul
cli
jno
icebp
adc
imul
push
imul
pop
inc
imul
add
fadd
cmp
sbb
adc
and
movs
loopne
fcom
pop
and
pop
es
dec
(bad)
inc
or
mov
sub
lock
inc
arpl
mov
dec
jmp
mov
outs
sar
sbb
push
jo
xor
and
ficom
xor
inc
test
jmp
(bad)
gs
dec
jb
and
mov
ret
ins
mov
or
xor
add
or
add
pop
sti
rcl
adc
test
mov
movs
daa
cmps
outs
sub
sbb
pop
mov
gs
mov
stos
data16
pop
aas
and
push
scas
and
inc
and
pop
push
sbb
and
out
push
add
nop
inc
xor
ja
lds
inc
(bad)
in
(bad)
add
and
add
dec
add
inc
xchg
lock
call
mov
adc
(bad)
adc
mov
int3
ins
popa
xor
dec
or
xor
mov
mov
dec
xor
popa
es
mov
jnp
adc
movs
dec
rcr
mov
enter
xchg
jo
mov
clc
push
xchg
leave
(bad)
movaps
xchg
test
add
lahf
mov
sbb
mov
ret
sub
test
mov
iret
push
or
popf
and
popf
hlt
repnz
pop
lds
jl
push
mov
movs
sbb
js
xor
push
mov
inc
inc
scas
dec
mov
sbb
add
xor
xchg
sub
nop
rcr
dec
sub
shr
test
inc
movs
call
push
mov
sbb
mov
ds
in
in
inc
jne
sbb
jmp
xchg
sub
xor
adc
push
imul
test
cs
jo
sti
push
pop
adc
jmp
mov
mov
aam
cmp
mov
inc
test
mov
test
push
in
int3
cmp
push
mov
push
mov
mov
pop
xor
jne
jns
inc
dec
mov
and
cmp
shl
dec
mov
test
mov
adc
and
jge
mov
test
dec
sbb
push
or
dec
in
lock
push
xchg
pushf
into
add
xor
xchg
pop
outs
sti
jne
cs
mov
sbb
adc
sbb
ja
inc
xor
pusha
test
and
test
jmp
popf
or
mov
xor
sbb
popf
movs
adc
ficom
fist
test
adc
push
push
or
inc
pop
sub
(bad)
jo
cmps
adc
fs
mov
adc
ins
adc
and
jecxz
sub
iret
xor
rcl
fisttp
mov
xor
jge
and
out
sbb
or
mov
dec
push
daa
push
leave
inc
mov
aam
fs
jne
in
ja
xor
clc
in
add
addr16
jbe
add
adc
aad
push
iret
add
scas
popa
ss
dec
fnsave
fcmovbe
lods
fisttp
pop
add
jnp
loopne
loopne
pop
pusha
jmp
push
mov
loopne
inc
fsubr
dec
mov
mov
fst
dec
mov
cld
loop
pusha
jecxz
dec
in
push
out
fnstcw
iret
mov
xor
cs
jmp
lods
pop
jg
test
bound
add
std
ds
pusha
retf
pop
sub
mov
or
das
mov
mov
pop
test
pop
or
and
inc
dec
or
neg
and
pop
hlt
push
rol
dec
mov
test
add
dec
ins
push
mov
sbb
sub
or
enter
jo
dec
dec
cmc
fdiv
jl
jnp
in
or
fadd
pop
repnz
(bad)
rcl
and
push
imul
xor
nop
mov
mov
pop
pop
xchg
icebp
adc
das
sub
adc
in
(bad)
call
dec
adc
shl
test
cmp
pop
jg
ja
fs
or
or
or
das
aam
or
clc
dec
sbb
or
lods
jb
inc
sahf
inc
sub
mov
sar
call
mov
fcmovnu
push
xchg
push
push
push
fbld
inc
ror
dec
retf
xlat
ret
push
imul
push
inc
or
out
ret
cmp
test
add
retf
enter
mov
add
ins
loopne
or
das
ret
mov
sub
je
push
mov
sar
ret
xchg
scas
outs
pop
mov
pop
ins
push
add
pop
mov
dec
lahf
xchg
push
xchg
es
sub
clc
je
xchg
(bad)
int
add
ret
push
in
dec
and
mov
in
sbb
loopne
lahf
jae
pop
pop
mov
adc
in
add
fcomp
dec
lock
and
sub
pop
in
adc
wbinvd
cmp
sub
inc
sbb
xchg
in
jns
cld
inc
js
and
mov
cmps
je
cli
das
add
fidiv
xor
add
fdiv
and
sub
adc
sbb
cli
push
ins
sbb
(bad)
mov
clc
sahf
out
seta
clc
ins
repz
aas
ret
push
xchg
push
scas
les
cmp
jmp
xor
arpl
sub
aaa
mov
add
or
sub
outs
sbb
pop
or
icebp
add
sub
and
inc
push
push
les
fldcw
sbb
jmp
push
xor
shr
movs
jge
mov
dec
push
ffree
cmp
int3
movs
sub
add
add
and
inc
add
sub
shl
jmp
shl
dec
or
mov
rcr
jne
call
pop
cmc
hlt
repnz
or
sbb
fistp
xchg
and
call
sbb
in
scas
aad
and
popf
imul
xlat
pop
inc
push
pop
jg
or
(bad)
pop
fisubr
xor
add
das
mov
call
add
adc
rcl
jo
leave
add
inc
inc
mov
test
jns
xlat
or
sub
adc
and
inc
add
cmp
ins
nop
add
inc
sbb
into
adc
push
and
add
add
or
add
mov
lock
sbb
imul
imul
mov
and
dec
xor
mov
call
enter
fldpi
inc
xchg
lahf
mov
sbb
les
ror
mov
bound
outs
xchg
dec
rol
ret
test
inc
(bad)
cmp
cwde
mov
mov
retf
mov
shl
(bad)
push
lods
inc
adc
movs
popa
jo
int3
mov
mov
dec
pop
fs
outs
cmp
sbb
and
fs
push
into
aam
or
jne
mov
push
or
imul
arpl
dec
outs
(bad)
inc
shr
and
leave
xchg
push
pusha
hlt
add
inc
push
mov
imul
inc
mov
cmps
fdiv
push
shr
mov
push
aas
jle
aas
or
fdiv
in
adc
push
xor
and
popa
add
push
pop
lds
pop
test
xor
mov
mov
add
or
xor
(bad)
dec
sbb
adc
ret
inc
and
aaa
out
fadd
aas
or
dec
out
xor
add
in
mov
test
inc
and
(bad)
or
inc
mov
mov
repnz
movs
call
mov
fsubr
movs
add
cmp
repnz
cld
pop
mov
push
iret
call
sub
pop
pop
and
push
and
fimul
inc
inc
push
das
mov
dec
add
mov
sbb
push
inc
cmp
sahf
xor
loopne
std
pop
and
add
push
loopne
test
push
scas
sbb
inc
and
popa
fucomip
or
xchg
sbb
fisttp
xchg
inc
and
xchg
aaa
xor
push
loopne
jbe
and
jmp
dec
xchg
xchg
adc
add
rcr
dec
or
stos
push
or
adc
inc
or
push
mov
xlat
ret
hlt
or
out
xor
es
adc
cmp
cmp
test
cmps
pop
jecxz
add
shr
loopne
sbb
cmp
movs
movs
aad
call
and
xor
aaa
add
adc
lea
jge
movs
add
out
imul
call
and
jnp
imul
mov
push
lea
test
xor
outs
pusha
xchg
cmp
pop
dec
push
lea
add
adc
popa
mov
xor
mov
loop
test
jns
cmc
mov
das
jge
add
fmul
fsubr
dec
push
push
loop
out
add
adc
add
les
add
mov
push
mov
adc
cmc
push
add
nop
sub
ror
ins
pop
aaa
(bad)
aad
out
mov
dec
push
cmp
aad
push
loop
sar
fs
inc
test
movs
(bad)
fsubr
and
daa
pop
leave
pop
retf
and
cmc
out
cmp
add
xor
jmp
fmul
test
and
loopne
or
push
data16
std
(bad)
push
test
or
sub
sbb
mov
add
mov
add
cmp
inc
pusha
add
dec
xchg
jb
lahf
into
cmovae
in
push
pusha
add
or
xchg
push
sbb
mov
aad
enter
pop
xor
fs
lock
cmp
inc
rcl
imul
add
add
mov
jae
ror
in
jae
lea
ja
jno
mov
sbb
iret
pop
jne
cmp
ret
in
shl
jo
test
inc
cmps
test
sub
scas
in
cmp
(bad)
mul
jmp
and
in
test
dec
inc
jae
mov
and
out
repnz
into
out
push
loope
jmp
daa
nop
push
xchg
inc
aas
jmp
inc
pop
test
jmp
fisttp
inc
cmp
add
sbb
clc
popf
arpl
mov
push
mov
shl
ret
and
fnstsw
push
mov
loopne
scas
sub
and
and
stc
mov
jmp
jns
mov
adc
dec
je
inc
pop
dec
aad
cmp
inc
les
jmp
sbb
cmp
mov
adc
sub
adc
aam
enter
xchg
push
pop
push
inc
pop
inc
popf
loop
dec
push
or
mov
pop
xor
rol
stos
lods
push
imul
jmp
jo
sbb
lods
cmps
in
bnd
sub
cmp
add
add
(bad)
and
inc
lea
or
inc
xor
inc
cmp
imul
adc
xor
adc
movs
lods
imul
pop
mov
mov
mov
(bad)
inc
shr
and
and
adc
cmps
pop
sub
dec
inc
in
inc
inc
inc
pop
inc
stos
(bad)
dec
in
or
and
jl
ret
xor
in
xlat
and
sub
pusha
repz
ret
pop
sub
pop
shl
nop
adc
or
push
loop
leave
loop
inc
std
jle
adc
sbb
sbb
arpl
jmp
push
in
sub
mov
icebp
or
nop
add
bound
dec
es
sub
adc
test
pop
call
or
inc
jmp
mov
push
and
aam
loope
push
inc
sub
dec
sbb
mov
inc
out
loopne
cmps
adc
add
sub
inc
ds
aad
lock
push
jne
jge
test
pop
loopne
test
and
clc
lods
pop
cmp
mov
(bad)
gs
dec
dec
sbb
js
cmps
jg
repnz
cs
in
lock
push
sub
(bad)
and
xchg
jo
inc
out
lock
mov
jecxz
(bad)
and
das
test
mov
xchg
fnsave
sub
push
mov
iret
adc
push
add
push
stos
push
pop
mov
xor
xlat
sbb
xchg
inc
sbb
fstp
call
fisub
mov
mov
xchg
(bad)
adc
adc
mov
iret
nop
test
and
inc
and
daa
mov
mov
adc
push
xchg
sub
call
push
adc
inc
mov
jnp
dec
cdq
and
mov
inc
aam
scas
neg
add
lods
add
mul
dec
xchg
inc
daa
daa
xchg
mov
repnz
push
(bad)
push
les
add
jp
test
pop
mov
dec
cwde
sbb
ja
leave
pop
out
add
cli
repnz
(bad)
and
mov
ret
arpl
add
mov
xchg
lock
stos
pop
adc
mov
pop
and
rcl
and
aad
dec
jnp
imul
dec
push
daa
add
test
nop
test
jbe
add
gs
mov
xor
or
dec
repz
inc
test
sbb
jb
mov
sbb
pop
dec
movs
jmp
xchg
lods
aam
push
idiv
xchg
cmps
push
or
add
sbb
inc
add
(bad)
jp
jmp
pusha
lds
jo
in
jne
aaa
jmp
repz
xor
pop
and
mov
je
call
ret
xlat
lock
jp
pop
cmp
xor
inc
das
push
adc
mov
sbb
fucomip
std
add
inc
fwait
sub
lahf
lea
and
add
(bad)
daa
out
cdq
xchg
push
xor
pop
lds
dec
sbb
mov
jl
popa
fstp
adc
inc
mov
xchg
and
(bad)
fmul
mov
mov
and
dec
pop
mov
pop
aad
mov
mov
inc
xor
sbb
clc
aam
lods
in
cmp
ret
dec
xchg
movs
retf
cmp
pop
stos
mov
mov
or
or
pop
lahf
inc
inc
fs
std
inc
push
pop
push
dec
pop
(bad)
fist
clc
dec
pop
inc
inc
pop
pop
jp
inc
add
imul
and
int3
pop
xor
in
imul
dec
inc
dec
pop
repnz
mov
inc
inc
dec
pop
pop
xor
jo
out
cmp
aaa
and
mov
sub
push
mov
xchg
xchg
jbe
or
test
push
push
xor
mov
ss
or
push
dec
pop
dec
xchg
sub
push
daa
xor
xchg
jno
add
push
add
ja
inc
push
cmp
ficomp
aas
push
inc
dec
inc
mov
inc
push
xor
adc
test
aaa
pop
pop
pushw
pusha
inc
fisttp
ins
rcl
and
xor
add
add
dec
outs
(bad)
loope
or
aas
inc
dec
dec
mov
ds
xor
aas
or
addr16
lods
xchg
pop
push
dec
lahf
scas
rol
push
ins
lea
sti
jbe
(bad)
pop
je
inc
dec
ins
gs
ins
jns
test
data16
jp
arpl
add
sub
inc
push
dec
aaa
daa
dec
ja
fdiv
out
push
outs
jne
ss
inc
or
call
lods
cmps
dec
push
add
addr16
imul
dec
mov
dec
xchg
ins
scas
retf
rol
push
jb
das
xor
out
push
push
dec
push
ds
popa
ins
push
dec
pop
jp
lods
jge
cmps
pop
inc
dec
xor
adc
add
jg
(bad)
pop
push
push
dec
aaa
jecxz
(bad)
in
dec
inc
mov
jb
ror
mov
ja
inc
add
ret
(bad)
xor
scas
imul
jg
ja
data16
call
inc
add
push
pusha
mov
sbb
add
inc
push
pop
inc
xor
mov
scas
daa
imul
mov
or
ss
inc
aaa
nop
ss
inc
shl
mov
jmp
mov
push
dec
out
pop
inc
dec
loope
or
mov
dec
mov
inc
mov
iret
and
scas
mov
(bad)
pop
push
pop
push
pop
test
add
inc
pop
push
push
dec
sub
jns
dec
push
dec
push
out
pop
(bad)
jbe
pop
ret
out
dec
aas
aam
fimul
test
out
pop
mov
mov
inc
dec
push
das
cwde
push
sub
pop
(bad)
jo
push
adc
push
xor
out
dec
push
xchg
push
xor
test
fs
(bad)
mov
xor
xchg
aad
pop
dec
das
add
xor
iret
cwde
pop
movs
pop
xor
and
push
pop
push
fs
mov
xor
sbb
outs
sahf
mov
sbb
or
inc
jb
xor
push
inc
popa
jo
jmp
jnp
dec
cmc
fild
ret
adc
in
push
fistp
inc
pop
stos
push
call
add
adc
(bad)
jo
jbe
cs
pop
jae
push
push
push
dec
xor
daa
or
mov
cmc
cs
(bad)
mov
jb
retf
pop
push
pop
or
das
jmp
inc
cld
inc
xor
dec
pop
push
or
pop
aaa
test
pop
pop
dec
push
or
inc
in
scas
mov
inc
push
cmp
add
add
pop
inc
scas
push
jl
mov
dec
inc
daa
inc
ja
push
add
jb
xor
sub
push
ja
loope
sub
jne
xlat
ins
jmp
(bad)
push
push
inc
sbb
dec
inc
mov
cld
sbb
xor
cs
in
adc
jo
sub
daa
dec
sbb
push
pop
jnp
cmp
daa
dec
mov
dec
add
out
shl
iret
mov
mov
jb
out
rol
fwait
pop
mov
mov
cmp
sub
jbe
and
sub
lock
add
iret
hlt
inc
push
push
mov
add
push
aam
adc
inc
sbb
push
push
sahf
xchg
sub
pop
adc
xor
bound
mov
lods
mov
mov
shrd
imul
add
es
inc
sahf
(bad)
movs
pop
and
pop
adc
arpl
inc
imul
inc
dec
ja
pop
mov
retf
mov
add
pop
sub
xchg
aas
pop
adc
add
(bad)
xchg
jmp
arpl
dec
and
fldcw
aaa
fldcw
jo
adc
inc
add
pop
(bad)
mov
ret
sub
enter
clc
mov
dec
aam
repz
mov
and
mov
mov
shr
ret
call
test
dec
inc
push
in
daa
inc
add
mov
es
add
inc
push
mov
lock
aaa
fild
sbb
add
push
and
rol
adc
arpl
add
pop
cmps
inc
pop
jb
add
add
or
ins
or
enter
xchg
pop
sub
inc
push
nop
pop
fild
shl
sub
pop
lahf
sbb
or
movs
(bad)
jns
retf
ror
push
in
add
adc
cmps
and
lods
iret
stos
or
and
or
or
test
or
int3
and
add
jge
test
and
dec
ret
jne
cmp
pop
jbe
sbb
or
push
test
add
push
call
dec
(bad)
stos
and
adc
leave
add
push
out
push
or
add
xchg
or
add
push
push
add
or
fadd
fnstsw
test
add
sbb
pusha
or
loope
add
or
push
and
pop
jecxz
adc
nop
add
scas
out
or
arpl
stc
xor
out
xor
call
or
stos
scas
xor
ins
pop
mov
xchg
sub
push
and
add
mov
(bad)
in
out
sbb
cmp
or
sub
pcmpgtb
add
sub
(bad)
enter
int3
push
add
enter
inc
ror
nop
and
push
inc
mov
sbb
fild
paddq
cdq
and
nop
or
fcmovne
cmp
adc
xor
or
icebp
adc
push
sub
aam
sub
jp
nop
dec
clc
adc
fs
adc
add
cmps
call
mov
pop
or
adc
sbb
or
daa
adc
pusha
and
fadd
(bad)
xchg
dec
fs
cmp
sub
(bad)
fwait
adc
fs
sbb
aas
dec
dec
add
cmps
dec
pop
adc
adc
push
add
cmp
xchg
add
sub
pop
pop
in
enter
mov
mov
pop
pusha
and
adc
adc
adc
fs
bound
adc
jmp
pop
xchg
mov
iret
jbe
lds
test
test
adc
inc
pop
dec
or
adc
js
comiss
mov
push
sbb
add
cld
pop
xor
adc
xor
and
jb
jle
xor
ss
push
test
test
or
push
ror
inc
cmp
mov
adc
and
rcl
pop
add
pusha
inc
xor
in
sbb
and
cmps
add
repnz
sbb
stos
stos
jb
add
mov
adc
daa
mov
pop
or
adc
fcom
or
into
iret
add
add
stos
pop
jecxz
ja
add
nop
pop
jo
fcom
jb
nop
fnstenv
push
and
or
rcl
aad
lods
inc
pop
and
sbb
cmovp
mov
push
stos
push
and
fs
fistp
sbb
mov
lods
inc
push
add
cmps
sbb
enter
in
sbb
cmp
push
les
aaa
add
mov
adc
pop
pop
jp
jb
imul
add
pop
jno
or
add
sbb
inc
shr
and
test
jne
jbe
test
and
mov
and
aas
in
test
xchg
pop
mov
(bad)
nop
adc
and
fimul
and
and
dec
scas
dec
(bad)
xchg
xchg
rcl
sqrtps
and
xchg
xchg
loopne
adc
mov
dec
push
fs
call
movs
pop
fwait
enter
pushf
stos
inc
push
in
inc
and
mov
daa
inc
and
and
outs
mov
pusha
cmps
cmovs
mov
in
push
and
inc
inc
es
push
(bad)
out
scas
add
ins
daa
out
adc
jae
xor
pop
sar
(bad)
enter
push
dec
xchg
xchg
retf
nop
pop
(bad)
pop
add
in
dec
xor
dec
scas
inc
scas
movs
sub
shl
sub
jb
and
push
das
sbb
add
outs
aaa
sub
xchg
push
and
mov
xor
(bad)
sub
sbb
add
mov
push
mov
nop
sub
ret
cmp
sbb
fs
sbb
sub
pop
xor
retf
add
or
js
jb
jg
sub
sub
pop
pop
and
and
dec
sub
xor
jo
pop
rcr
nop
inc
push
in
pop
push
cs
pop
xor
pop
jb
sub
cmp
jb
fcomp
dec
push
fs
cvtpi2ps
adc
pusha
das
in
push
leave
and
and
push
sub
inc
fsubr
push
xor
inc
fmul
(bad)
out
push
dec
mov
add
dec
xor
ins
gs
das
inc
inc
push
mov
xchg
mov
sbb
dec
or
fwait
sbb
pop
inc
rcl
mov
sub
mov
fs
sub
push
push
sub
inc
push
shl
jmp
daa
mov
fisttp
cmps
or
das
leave
sti
cmp
xor
xchg
xor
sbb
mov
test
jp
std
xchg
lods
cs
and
or
inc
adc
fchs
inc
or
js
sub
das
out
movs
fmul
shr
xchg
inc
xchg
iret
sbb
lahf
aad
cmp
mov
xor
and
xor
add
and
leave
nop
push
xchg
push
ja
xor
add
sub
xor
retf
push
xor
jecxz
push
nop
and
into
test
add
or
(bad)
rol
and
and
push
test
fcmovnu
nop
push
lea
xor
(bad)
sub
xor
push
xor
sysexit
cs
jg
out
and
dec
(bad)
xor
mov
(bad)
in
in
nop
adc
jbe
ja
push
leave
and
dec
jnp
and
xchg
pop
(bad)
clc
aam
and
cmp
push
add
ds
inc
add
xor
ins
jl
inc
ins
push
jns
rol
pushf
aaa
mov
cmovnp
or
mov
js
rol
adc
pop
cmp
dec
test
dec
outs
(bad)
xchg
nop
adc
rcr
add
sub
jb
jb
and
out
test
cmp
inc
lds
or
in
cmp
jmp
les
mov
cmp
and
add
adc
mov
adc
cmp
push
mov
iret
sbb
pop
adc
aam
push
jb
mov
adc
aam
jmp
dec
inc
(bad)
sbb
pusha
inc
dec
adc
pop
cmp
cmps
cmp
ret
adc
not
hlt
push
outs
out
cwde
mov
or
ficom
or
add
push
inc
ja
jg
in
jnp
cmp
pop
cmp
add
sbb
dec
pop
and
ins
inc
jo
xlat
pop
test
xlat
enter
mov
xchg
popf
scas
sub
jns
cmp
ror
nop
clc
dec
loop
outs
out
popa
ret
jle
fcomp
jbe
jns
sbb
push
xlat
cld
inc
inc
mov
xchg
mov
ds
test
sbb
cmp
xchg
sub
mov
adc
inc
sbb
popf
pop
xchg
fld
xlat
xor
ret
adc
sbb
fcmovu
dec
aad
cwde
xlat
pushf
xchg
inc
dec
cs
adc
mov
ja
cmps
xor
dec
add
jno
and
mov
fimul
ins
xlat
jo
mov
pop
inc
mov
mov
aam
and
and
fcom
dec
xor
sub
inc
test
inc
fimul
movs
xlat
test
inc
inc
cs
inc
shl
pop
inc
enter
inc
fistp
inc
add
dec
hlt
sbb
push
mov
arpl
pop
leave
int
out
mov
and
pop
and
jmp
nop
cld
out
inc
arpl
and
leave
mov
push
jne
or
inc
out
js
rol
push
in
xchg
shl
pop
call
push
(bad)
ins
popa
(bad)
push
inc
das
inc
sbb
pop
dec
jno
mov
mov
daa
scas
enter
rcr
xor
fxch
and
nop
xchg
inc
cld
or
xor
sub
cmp
add
push
sbb
addr16
xor
or
inc
xlat
stc
enter
loopne
inc
xor
push
add
addr16
or
inc
or
mov
dec
jmp
(bad)
loopne
xchg
pop
and
sub
outs
ror
(bad)
or
adc
sub
add
sahf
or
ins
sbb
xor
mov
add
enter
aam
mov
les
(bad)
cmp
aad
or
jno
sub
popf
cli
and
sbb
add
xchg
or
aaa
mov
dec
std
and
jae
push
dec
push
clc
(bad)
sti
cmp
pop
cmp
jmp
inc
inc
popa
adc
in
(bad)
pusha
test
and
inc
test
dec
or
mov
movs
sti
pushf
xor
out
dec
fsubr
or
pop
ss
push
mov
ja
retf
sbb
mov
cmc
adc
(bad)
jb
and
adc
nop
cmp
(bad)
addr16
dec
mov
fs
(bad)
mov
add
cmp
adc
(bad)
cmp
push
lock
cmp
cmps
adc
in
cmp
es
and
jg
rol
in
or
dec
out
pusha
xor
fs
repz
push
clc
fyl2x
pop
mov
cmps
lea
mov
neg
inc
xor
push
xor
cmp
push
xchg
mov
adc
dec
aam
inc
cmp
ret
std
out
enter
xlat
shl
dec
dec
add
(bad)
mov
std
lock
scas
icebp
dec
sub
and
lock
dec
push
es
add
inc
adc
leave
xor
(bad)
dec
cli
xor
mov
fcom
fistp
rol
add
popa
or
add
jae
fdivr
sub
sbb
jl
pusha
or
adc
mov
loopne
or
jg
shr
out
mov
mov
nop
lock
or
shl
test
dec
inc
jae
dec
stos
xchg
test
add
push
call
cmp
pop
add
dec
pop
and
js
sub
jp
xchg
pusha
jg
and
retf
jecxz
enter
and
add
rol
inc
outs
or
sbb
xchg
aaa
ret
jp
dec
inc
mov
cmp
in
mov
stos
sbb
adc
sub
(bad)
shl
add
retf
mov
fadd
fwait
dec
cwde
jb
shrd
jo
loop
iret
(bad)
dec
mov
ret
scas
add
popa
jge
sub
or
pop
es
mov
and
jl
cmc
or
lds
cmp
ja
adc
daa
sub
bnd
add
jo
mov
mov
or
ret
add
loopne
aam
iret
pusha
cld
xor
push
repz
cmc
add
or
cmp
adc
pop
movs
js
sub
sbb
adc
add
test
pop
mov
(bad)
ins
or
js
(bad)
call
mov
mov
ret
enter
inc
push
cld
push
sbb
cmp
pop
rcr
inc
imul
xor
add
aaa
sar
push
push
fisttp
dec
jmp
adc
jnp
adc
mov
test
mov
cmp
or
push
pusha
xlat
sub
adc
in
lods
push
rcr
das
pop
sar
jl
pop
jle
dec
pop
pusha
sar
adc
jmp
cld
gs
or
sbb
adc
or
pop
dec
or
or
adc
push
(bad)
adc
stc
lock
push
inc
or
daa
in
js
push
adc
add
xor
xor
pop
fmul
xor
xor
bound
sub
pop
or
or
sub
and
mov
je
test
ror
xchg
js
into
or
inc
icebp
adc
push
and
sbb
or
push
lods
xchg
ret
ja
push
scas
xchg
loopne
shr
mov
or
and
push
sub
dec
test
jle
(bad)
push
adc
mov
test
inc
dec
mov
jmp
dec
lods
mov
das
add
ret
xlat
and
xor
sub
push
(bad)
xor
movs
leave
xor
adc
sahf
in
sub
cmp
add
das
adc
pop
and
les
aas
mov
iret
aad
addr16
je
iret
aad
mov
mov
push
pop
adc
fild
adc
scas
or
int3
mov
jne
pop
and
and
test
sub
cmp
push
jns
and
int3
xor
jmp
or
fist
lods
xor
sysret
and
sub
dec
ja
jecxz
adc
or
mov
add
jecxz
and
cld
add
jmp
sub
add
shr
lods
das
popa
mov
out
imul
pop
cmp
bound
xchg
sbb
inc
call
sub
jmp
icebp
sub
push
jge
sub
adc
or
aaa
sbb
and
sbb
nop
mov
xchg
xor
sbb
in
mov
fwait
lds
mov
add
adc
cmps
daa
cmp
xor
push
push
mov
add
xchg
or
movs
push
test
push
cmp
dec
jmp
add
xor
clc
sub
xlat
mov
inc
movs
outs
xor
jne
in
cmps
inc
pushf
dec
cwde
pusha
mov
mov
outs
pop
pop
and
or
push
xor
push
ja
xor
mov
or
sbb
ror
ror
aam
sub
and
xor
popa
push
and
nop
stos
dec
int
xchg
xchg
int3
jo
jg
(bad)
cld
and
inc
loopne
fild
popa
(bad)
pop
das
shl
mov
retf
pop
clc
push
ss
push
ror
sub
cdq
inc
inc
xor
fld
and
add
xchg
or
pop
add
cs
or
add
nop
or
push
cmp
mov
lea
and
js
retf
xor
push
dec
dec
xor
das
pop
sub
ja
mov
add
or
push
scas
sub
dec
call
imul
enter
push
mov
mov
add
inc
ja
pop
jae
xor
xor
xor
in
sub
sub
xchg
push
adc
dec
call
add
mov
mov
xor
push
inc
call
dec
dec
ud0
mov
adc
inc
jmp
xchg
test
loope
jg
jno
lock
ret
cdq
inc
arpl
(bad)
sti
adc
popa
jo
les
addr16
inc
inc
rol
adc
dec
lea
push
leave
add
dec
movs
sub
ss
xlat
imul
adc
ins
bound
outs
jg
add
cwde
mov
fst
pop
cmp
loopne
lahf
clc
adc
xchg
pop
add
ret
push
or
bound
inc
push
loopne
mov
rcr
imul
push
shr
cmps
into
or
in
inc
adc
gs
push
mov
loope
pop
in
jge
pop
push
out
add
(bad)
add
xchg
ja
jns
add
add
or
mov
repz
xchg
icebp
jbe
xor
aaa
and
cmp
pop
xor
push
push
aaa
cmc
dec
inc
lock
add
and
mov
mov
add
pop
rcr
imul
add
add
popa
pop
ins
or
lds
faddp
inc
fiadd
mov
jne
or
daa
dec
dec
xchg
ins
add
fwait
js
lods
lock
mov
adc
call
xchg
sbb
add
(bad)
scas
add
inc
sahf
pop
clc
clc
je
repz
dec
(bad)
dec
pusha
outs
mov
sbb
pop
pop
popf
hlt
mov
jg
mov
xor
push
imul
and
test
add
dec
stos
mov
test
test
sar
js
lock
jle
push
mov
mov
mov
add
mul
cmc
lods
neg
cmp
and
ja
or
inc
xchg
(bad)
movs
xor
xor
or
jle
(bad)
and
jmp
pop
adc
adc
jecxz
test
shl
lods
test
dec
and
shr
loope
rcl
movs
imul
test
sub
mov
and
sti
adc
add
mov
xor
pop
xchg
call
sbb
push
popa
mov
rol
das
cmp
adc
cmp
shr
add
sub
xchg
mov
or
dec
dec
inc
nop
pop
pop
sub
mov
pop
sub
and
pop
push
popa
test
xchg
push
cmp
sbb
popa
push
cmp
lds
pop
pop
sub
movs
movs
pusha
pop
mov
and
xchg
inc
push
adc
mov
das
add
fmul
icebp
daa
jb
mov
cmp
arpl
rcr
je
mov
test
mov
mov
add
jb
jmp
or
add
add
fbstp
and
xor
cli
fld
arpl
int
push
cmps
cld
mov
mov
mov
outs
inc
arpl
pop
push
popf
cmp
enter
pop
mov
js
mov
mov
bound
call
xor
inc
imul
lods
ja
clc
addr16
ror
cmp
cmp
inc
push
aaa
sub
lods
aam
js
adc
imul
inc
xor
inc
sbb
inc
push
push
inc
ret
fadd
add
or
dec
push
push
retf
cld
push
xchg
push
js
jo
mov
mov
or
cmp
pusha
lods
add
test
cmps
cmps
adc
hlt
add
loope
or
push
or
adc
and
push
push
shl
in
ins
jnp
mov
jle
pop
ror
jo
outs
xor
dec
scas
jne
sbb
push
cmc
sbb
lock
cli
test
js
mov
sbb
cmp
or
sbb
or
ror
xor
fld
dec
lea
ins
adc
ja
mov
cmc
push
popa
ficom
mov
mov
daa
scas
push
and
xor
or
sub
push
cmp
inc
rol
sbb
add
fdiv
mov
lea
or
pop
xchg
push
jb
jns
popa
or
fiadd
call
cmp
(bad)
mov
sahf
gs
jbe
add
mov
or
xor
add
push
pop
cmp
add
pop
pushf
pop
and
push
jae
ins
loopne
test
mov
sub
(bad)
scas
dec
push
add
in
lahf
xchg
mov
lahf
mov
xchg
dec
pop
rcl
fadd
sub
push
je
in
cs
in
pop
adc
daa
call
movs
add
mov
inc
iret
mov
mov
pop
test
adc
iret
mov
dec
adc
aam
push
or
or
or
loopne
jne
je
cmp
cmp
xchg
outs
and
xor
add
dec
xor
xor
outs
aaa
mov
cmp
jg
sub
test
mov
mov
dec
inc
fimul
push
into
rcr
pop
bound
pop
mov
hlt
fld
cmp
test
es
and
xor
mov
sar
imul
mov
add
push
add
sbb
addr16
outs
adc
push
cmp
push
mov
sub
push
push
mov
xor
or
mov
(bad)
loop
mov
imul
jo
imul
push
mov
xor
js
mov
add
js
inc
nop
cs
push
int
test
pop
jo
push
add
jp
mov
fadd
movs
inc
jmpw
dec
jb
jb
dec
push
push
push
cwde
pop
xchg
inc
(bad)
shl
adc
pop
cmp
cmp
xor
adc
sar
dec
pop
and
cmp
or
xor
cmp
push
pop
pop
test
inc
adc
adc
movs
adc
ins
movs
nop
mov
dec
sbb
or
add
adc
mov
fist
sbb
sbb
les
and
pop
cs
push
jecxz
and
add
dec
mov
cwde
in
lock
push
push
sbb
add
dec
xor
into
and
test
mov
adc
push
sti
stos
movs
sub
push
add
inc
fiadd
ror
push
inc
and
jae
or
mov
imul
push
les
xchg
dec
in
mov
pop
dec
xchg
inc
sahf
neg
jae
adc
pop
pop
rol
push
shl
xor
cmp
jle
addr16
cmp
(bad)
cmp
mov
dec
jo
inc
cwde
or
outs
dec
aaa
mov
mov
jmp
add
push
jb
popa
inc
sub
in
adc
stos
xchg
shrd
pop
push
push
xchg
pop
cmp
out
xlat
aaa
hlt
sub
mov
(bad)
je
jno
mov
sub
add
pop
cmp
mov
icebp
xchg
call
js
les
push
or
mov
mov
mov
dec
hlt
mov
xor
scas
outs
loop
jecxz
icebp
popa
and
loopne
lock
in
inc
unpcklps
add
rcl
clc
pusha
mov
popf
(bad)
nop
xlat
pop
movs
popa
add
pop
cmp
out
add
adc
lock
jae
ins
scas
mov
xor
mov
retf
jne
lock
pushf
scas
js
pop
mov
push
call
pop
mov
cmps
dec
inc
push
push
and
or
push
cmp
push
sub
and
vmwrite
sysret
sub
rcl
add
xor
lea
outs
sbb
adc
mov
or
pop
push
int3
test
jne
pop
add
pop
jno
shl
(bad)
mov
xchg
mov
push
in
xchg
push
xor
pushf
fmul
dec
pushf
pushf
pushf
pushf
xchg
cwde
pushf
mov
movs
test
mov
aaa
sub
outs
and
gs
shl
sbb
sub
sbb
imul
cmps
cmp
inc
mov
out
cmp
ret
test
dec
cs
adc
pop
or
mov
cmp
sbb
pop
arpl
test
pushf
fisttp
int3
sbb
cmp
sbb
mov
cmps
fist
inc
movs
movs
test
test
add
test
sbb
cmp
pusha
inc
addr16
shr
push
add
mov
cwde
les
fst
inc
loop
and
dec
push
adc
push
mov
aas
and
mov
(bad)
les
xchg
nop
and
stos
xchg
nop
push
fcomp
pop
xor
push
movs
lahf
cmp
ss
xor
movs
push
push
push
and
adc
jmp
or
xor
xchg
and
pop
inc
lods
loope
popf
and
push
ins
cwde
push
xor
sub
adc
sub
bound
dec
outs
outs
cwde
les
in
cwde
pop
les
push
jge
bound
mov
call
cmps
mov
sbb
nop
nop
sbb
push
add
push
jo
movs
pop
push
lods
sub
push
pop
mov
daa
mov
mov
pop
xor
rol
pusha
and
cmp
es
adc
test
popa
das
call
and
arpl
ins
cmp
jns
dec
push
jb
add
push
push
sub
outs
pcmpgtd
mov
and
mov
jmp
lds
inc
xchg
xor
(bad)
iret
cmps
xor
mov
inc
sbb
and
and
aad
ins
pushf
xor
add
adc
adc
int
jae
sbb
and
rcr
push
dec
sti
fadd
xor
mov
or
xor
shl
xor
cmp
xor
sar
cmp
inc
inc
in
movs
imul
pop
sub
daa
dec
shl
pop
push
cmps
xor
jo
sbb
mov
das
xchg
inc
sbb
enter
dec
(bad)
movs
jns
jle
or
cmp
fs
xor
sub
gs
jle
ret
add
push
mov
pusha
push
imul
cmovo
jae
pop
mov
repnz
enter
loopne
push
test
add
mov
mov
and
dec
cs
pushf
push
xchg
dec
dec
jl
push
aam
retf
and
xchg
aam
leave
gs
xchg
shl
leave
leave
int3
int3
int3
and
call
(bad)
pop
je
inc
(bad)
lock
xor
les
mov
push
sub
add
add
push
popf
sbb
ds
jno
xchg
outs
cdq
ret
inc
and
shl
nop
xor
inc
cmp
ins
clc
in
sbb
add
add
int3
shr
adc
add
daa
fld
mov
xor
or
mov
ins
dec
and
sub
and
int
xor
add
add
push
je
ds
adc
(bad)
cld
cmp
pop
pop
fwait
jmp
fdivr
adc
mov
fs
mov
fidivr
or
pop
jno
jmp
mov
or
sbb
pop
fistp
rcr
test
rol
sbb
call
jmp
adc
xlat
cdq
jle
sub
xchg
packssdw
std
mov
jmp
add
pushf
cmp
mov
dec
mov
inc
mov
dec
dec
cs
mov
lods
mov
and
cmp
jg
mov
or
movs
sub
iret
cmps
fist
ja
shl
push
pop
cmps
ret
cs
adc
and
and
dec
popw
dec
ret
das
or
xchg
mov
sub
inc
xchg
adc
test
sbb
imul
test
mov
mov
dec
movs
std
push
inc
cs
(bad)
je
cs
mov
sbb
mov
adc
pusha
enter
push
adc
mov
mov
mov
pop
rcr
ss
xchg
aaa
pusha
stos
dec
push
sbb
nop
aaa
push
mov
sbb
aaa
and
in
and
mov
adc
mov
mov
push
imul
cmp
jnp
cmp
in
dec
and
push
add
xchg
(bad)
pusha
xchg
cld
mov
(bad)
and
fld
fcomp
and
pop
sub
xor
ins
mov
pusha
(bad)
or
fs
hlt
mov
mov
mov
shl
cmc
cmp
js
cmp
mov
cmp
adc
adc
jae
movs
push
add
loopne
fidivr
sbb
sbb
lock
sub
mov
add
push
push
sbb
xchg
add
push
test
push
inc
sub
push
or
adc
or
cmp
or
mov
mov
ja
enter
call
add
movs
cmp
out
mov
push
loop
cmc
mov
imul
sub
adc
inc
adc
add
test
cmp
push
inc
outs
mov
out
hlt
dec
add
sbb
sar
loopne
cmp
lock
cmps
xchg
sbb
cld
nop
inc
clc
fmul
add
and
xchg
sub
sbb
mov
sbb
mov
nop
mov
dec
sub
mov
nop
hlt
mul
inc
inc
dec
sbb
out
sub
sbb
pop
mov
jo
fs
popf
fwait
or
out
sub
test
mov
xor
sub
xor
jle
daa
inc
xor
mov
push
hlt
xor
or
jmp
sub
mov
pcmpeqw
dec
fnsave
std
dec
add
ja
adc
mov
mov
cld
outs
imul
cdq
je
or
jg
sbb
movs
adc
and
inc
inc
and
inc
sbb
push
fs
ret
or
mov
stos
push
mov
pusha
je
ror
lock
cmp
sub
xor
leave
ds
push
test
inc
fsubr
nop
lahf
xchg
fwait
and
or
mov
stos
out
add
movs
movsx
cmp
pop
mov
add
inc
lods
inc
popa
ja
popa
inc
xor
xor
test
pop
fwait
ret
cmp
sbb
mov
inc
call
push
cmp
jne
(bad)
jbe
retf
or
cmc
adc
xchg
xchg
xchg
sbb
sbb
mov
or
sub
sahf
mov
inc
mov
jae
adc
sbb
fs
mov
jb
push
jl
cmp
dec
add
int
cmps
fld
sbb
clc
or
popf
push
xlat
dec
pop
xchg
add
aas
or
jmp
(bad)
and
pusha
retf
xor
and
and
out
or
pop
ror
adc
inc
dec
addr16
or
mov
mov
inc
repnz
mov
cmp
mov
sub
sub
nop
xchg
into
and
test
hlt
xchg
sub
sbb
inc
jne
jmp
inc
cmps
mov
adc
inc
inc
inc
mov
(bad)
scas
movs
lock
sub
loope
mov
outs
out
sbb
mov
mov
test
push
jae
int3
jb
add
cmp
jns
sbb
jns
push
loop
mov
dec
test
adc
bound
fimul
addr16
xchg
sahf
mov
jecxz
xlat
or
(bad)
push
jns
lods
mov
mov
xchg
and
lahf
dec
call
cmp
or
xor
in
or
bound
inc
aas
push
xchg
mov
inc
push
rcl
jecxz
add
fld
jne
or
outs
sbb
add
lock
clc
or
mov
ror
mov
in
mov
xchg
test
add
pop
push
adc
sub
dec
inc
xchg
icebp
add
in
sbb
lock
fs
or
or
cdq
inc
or
aaa
push
test
jno
mov
inc
fwait
jecxz
shr
mov
mov
xlat
and
push
rcl
or
outs
pop
sbb
push
adc
jo
pop
das
cmp
imul
inc
int3
jno
add
popa
mov
push
inc
movs
sbb
pop
xchg
sub
cmp
bound
cmp
mov
addr16
adc
sbb
andps
dec
xchg
push
fdivr
jnp
ret
adc
cmp
xchg
xor
clc
mov
and
imul
lock
jae
adc
int
cmp
mov
mov
pop
repnz
mov
sbb
xchg
loopne
shl
test
jl
dec
fdivr
mov
test
shl
sub
sbb
(bad)
cmc
cmp
movs
and
inc
bound
inc
popw
push
sub
sub
packsswb
jne
push
movs
mov
add
pusha
adc
mov
test
in
aad
xchg
pop
js
pop
cdq
dec
lds
mov
repnz
sbb
(bad)
rcr
pop
xchg
arpl
mov
in
nop
nop
xchg
xchg
pop
es
and
dec
lods
mov
retf
movs
movs
test
jmp
cmp
movs
lea
add
xor
cmc
dec
mov
xchg
sub
repz
fst
(bad)
mov
or
outs
cmp
mov
mov
dec
das
push
popa
dec
pop
mov
js
cld
jl
pop
bound
push
cmp
xor
cmp
das
sub
cmp
(bad)
out
sub
xchg
push
inc
jo
or
push
movs
adc
stos
cmp
xchg
jo
test
push
jmp
xchg
xor
push
cdq
fdiv
push
movs
xor
mov
inc
mov
test
cdq
in
es
loopne
jb
xchg
or
adc
sub
test
xor
aas
adc
xchg
aaa
jo
sbb
jbe
push
jo
inc
out
mov
inc
mov
cmp
je
lahf
pop
adc
movs
cmp
pop
jnp
test
mov
iret
test
nop
and
adc
popa
ins
mov
pop
or
jns
or
into
add
aaa
fisttp
(bad)
lock
cs
dec
adc
mov
ror
or
adc
cmp
dec
inc
mov
cwde
test
inc
pushf
mov
imul
or
add
pushf
fsubr
das
inc
dec
leave
xchg
leave
test
dec
xchg
or
cdq
cwde
add
cmc
add
adc
cdq
movs
sbb
cmp
and
inc
call
cmp
in
add
pop
mov
or
(bad)
and
in
adc
ja
test
daa
push
sub
sub
xchg
outs
pop
cmp
or
stos
add
sub
das
mov
and
popa
leave
push
pop
or
pusha
jnp
jbe
adc
inc
inc
test
cmp
and
(bad)
fcmovu
dec
mov
pop
daa
or
fdiv
inc
cmp
push
xchg
or
and
daa
popa
ins
adc
dec
xor
fsubrp
ficom
push
(bad)
mov
imul
pop
xchg
fadd
sbb
loope
aam
push
push
dec
dec
cmps
ins
fadd
mov
sbb
clc
push
or
je
loopne
repnz
pushf
lea
cmp
mov
int3
adc
fmulp
mov
or
int3
sbb
arpl
pop
dec
test
aam
pop
sub
add
mov
add
adc
adc
or
movs
imul
sub
call
pop
cmp
ret
pop
mov
pop
dec
mov
and
aaa
add
lods
mov
sub
ret
xor
mov
pop
cs
mov
or
mov
or
mov
inc
push
inc
cmps
adc
cmp
sahf
mov
push
add
(bad)
cs
mov
fcomp
add
push
sbb
in
push
test
jl
dec
cwde
lahf
push
add
test
loopne
out
fbstp
mov
cmp
hlt
push
push
pop
add
out
mov
pop
xor
mov
pop
sbb
add
and
inc
mov
mov
pusha
les
add
lahf
(bad)
add
xor
and
outs
test
and
cmp
xchg
cmp
add
and
xchg
dec
dec
jo
bound
adc
add
not
adc
nop
mov
mov
adc
xchg
cmps
sbb
or
adc
data16
xor
sub
sbb
fild
in
mov
jae
push
pusha
xor
jl
add
lock
cmp
sbb
imul
sub
clc
mov
or
addr16
and
in
loop
and
or
nop
out
adc
sbb
sbb
and
jb
or
mov
scas
nop
or
inc
or
push
cmp
jne
dec
hlt
fstp
shl
loope
jmp
pop
(bad)
and
add
push
enter
sub
xchg
xor
test
xchg
ins
sub
xchg
sub
into
push
xor
(bad)
xchg
sub
xchg
inc
ds
lock
add
pop
add
jns
mov
cmps
jl
pop
xor
xor
sbb
add
das
outs
sbb
adc
sbb
jmpw
cdq
mov
xchg
mov
(bad)
sbb
add
inc
movs
add
dec
jnp
jl
movs
and
push
nop
mov
cmps
inc
pmuludq
mov
int
pop
add
mov
pop
and
xor
imul
inc
add
add
mov
cmp
fiadd
nop
lahf
nop
test
inc
ret
rol
movs
cmp
lods
mov
add
push
fwait
xchg
jo
push
mov
pop
pop
mov
xchg
add
add
sub
fs
xchg
cmp
sti
and
out
push
inc
es
xlat
fsub
cmps
out
movntps
jo
cmp
ins
(bad)
push
pop
or
test
sub
and
movs
mul
hlt
xor
aas
add
xor
lock
and
daa
mov
jmp
cwde
add
in
and
push
push
call
push
nop
pop
sub
push
loopne
dec
mov
das
or
pusha
inc
xor
sbb
dec
mov
in
pop
inc
int
pop
(bad)
loop
xor
inc
ret
inc
add
or
sbb
xchg
arpl
shl
ins
cmps
adc
stos
and
pop
movs
outs
hlt
xor
sbb
xor
inc
fisubr
mov
push
cmps
out
jg
inc
or
jno
cmp
and
enter
mov
and
inc
sbb
add
lock
or
sar
inc
lea
pop
ret
ins
or
jg
mov
cmp
(bad)
(bad)
sbb
push
les
ins
xchg
push
stc
ficom
add
mov
leave
xor
mov
pop
nop
sbb
test
out
add
pop
xchg
icebp
push
add
stos
inc
lahf
inc
or
push
stos
and
jmp
rcl
jp
lods
and
pop
xor
loopne
dec
pop
and
push
clc
xor
inc
lds
add
test
fdiv
rcl
daa
dec
cwde
push
jb
test
xchg
test
cli
or
ins
add
xor
inc
test
xchg
sbb
(bad)
and
fmul
nop
pop
jg
cmp
shl
adc
mov
je
jmp
outs
cs
fld
je
mov
add
inc
cmp
or
jne
adc
daa
cs
adc
or
mov
jno
pushf
fld
jns
mov
sbb
mov
inc
xor
push
xor
inc
adc
and
jno
rcl
xchg
xchg
xchg
adc
xchg
or
mov
push
xchg
leave
stos
mov
shr
cmp
xor
sbb
outs
xchg
outs
jne
push
in
dec
outs
inc
cmp
mov
xlat
cwde
cmp
adc
jne
rcl
add
ficom
add
neg
lods
inc
hlt
scas
out
pop
ins
out
add
mov
or
mov
xor
or
lods
xor
mov
jmp
(bad)
dec
xchg
aas
fiadd
cld
mov
dec
pop
ins
cmp
inc
scas
pop
in
or
scas
push
fsubr
fadd
dec
fisttp
push
pop
sti
sar
sub
mov
jp
sub
push
jle
xchg
out
push
mov
and
aaa
and
ret
fadd
mov
outs
fsubr
(bad)
mov
and
inc
sub
adc
pusha
inc
add
lock
dec
sub
adc
movs
inc
mov
ins
xlat
loop
movs
mov
add
sahf
je
mov
or
add
mov
jmp
mov
(bad)
dec
add
aad
(bad)
xlat
pop
pop
or
push
xlat
adc
or
pop
inc
sar
inc
pusha
rcr
rol
call
ucomiss
retf
pop
mov
lock
jne
jmp
shl
inc
add
pop
cmp
and
dec
jno
add
fcom
jge
popf
sbb
dec
pop
loope
cmp
bound
sub
mov
nop
add
cmp
pop
add
add
add
mov
jmp
xor
gs
mov
test
push
icebp
lock
and
push
cmp
add
inc
out
in
fsub
adc
mov
mov
pop
leave
mov
and
in
clc
aaa
dec
sbb
adc
shl
enter
dec
dec
add
and
xor
(bad)
mov
repnz
sbb
js
jo
mov
jge
and
xlat
jmp
(bad)
push
mov
sub
adc
inc
lock
inc
adc
leave
cmp
(bad)
shl
mov
(bad)
dec
pop
and
(bad)
loopne
dec
push
push
and
dec
add
scas
ins
xchg
shl
xor
dec
int3
ret
cmp
sub
adc
aad
pop
cmp
inc
fsubr
test
aaa
adc
or
and
push
mov
les
enter
pop
push
fsub
fcomp
mov
mov
or
sbb
and
shr
arpl
loopne
or
in
enter
sar
push
out
cmp
dec
fcom
fcom
push
dec
add
sub
or
enter
ficomp
xorps
add
mov
stos
or
inc
xchg
push
jno
xchg
icebp
cdq
jne
jge
call
add
sbb
js
leave
mov
cmp
push
push
daa
and
cmp
and
jae
jns
test
dec
push
mov
inc
sbb
cmp
loop
sub
adc
add
fcom
ret
sbb
xchg
adc
ror
xor
call
or
push
add
mov
cwde
add
pop
test
icebp
lock
push
mov
push
fimul
arpl
les
dec
out
popf
and
jne
xchg
loope
jae
jb
sub
jo
pop
jp
je
cmp
jae
add
imul
push
inc
push
arpl
add
jmp
hlt
mov
sub
ss
or
leave
arpl
and
inc
bound
mov
aad
jnp
mov
jb
neg
lds
stos
add
cmp
jl
adc
or
in
mov
mov
push
mov
pop
mov
mov
add
ret
sbb
je
popf
push
add
cmp
push
ss
and
adc
jbe
xor
xor
push
les
movhps
mov
aaa
push
pop
cmp
mov
inc
mov
je
cmp
aam
xchg
cmp
adc
add
fidiv
push
or
or
scas
fs
fld
or
inc
ja
xchg
jne
and
rcr
inc
jmp
add
nop
sar
pop
sbb
lods
add
or
imul
pusha
cs
ja
xor
or
js
add
sub
pushf
outs
or
xor
mov
mov
add
dec
(bad)
or
and
and
cs
pop
mov
cld
mov
mov
mov
popa
xchg
inc
mov
add
or
loopne
bound
jbe
add
pop
and
cmp
test
cmp
mov
mov
repnz
ins
push
or
push
xor
pop
pop
sub
dec
dec
lods
add
sub
cmps
push
dec
dec
pushf
ror
imul
sbb
and
jmp
jnp
dec
iret
inc
pop
(bad)
ins
xchg
or
xchg
cwde
mov
xchg
mov
add
cmp
(bad)
pop
or
ins
sub
add
add
add
mov
xor
pop
add
dec
test
inc
xor
push
xor
daa
mov
dec
ss
lock
sub
add
pop
loope
dec
mov
ret
paddd
push
scas
pop
xor
pop
adc
int
xor
imul
or
push
rol
add
jl
aaa
sti
mov
call
or
mov
push
push
lods
pop
or
ja
fsub
fsub
jb
inc
jl
lahf
enter
adc
push
dec
jo
add
jmp
(bad)
add
jmp
jg
pusha
add
aaa
add
adc
ins
adc
(bad)
push
(bad)
xor
mov
push
cmp
iret
inc
add
aam
mov
adc
sbb
sbb
xor
mov
out
mov
add
pop
dec
sub
rcl
jge
cmp
nop
rcl
ss
adc
aas
pop
int3
xchg
cmp
je
mov
pop
into
inc
xor
mov
lods
les
inc
stc
pop
and
test
xor
js
sbb
jge
inc
push
ja
push
shl
cwde
(bad)
leave
lods
js
bswap
(bad)
sar
cdq
int
stc
xor
mov
pusha
push
imul
sub
outs
jl
lock
or
sbb
sub
popa
mov
add
ins
popa
jb
(bad)
std
iretw
dec
xchg
or
push
inc
or
sbb
(bad)
mov
sbb
mov
mov
mov
add
(bad)
push
lock
int
and
jbe
xchg
inc
xor
(bad)
dec
loopne
pop
pop
js
inc
add
dec
clc
shl
rol
pop
xor
add
nop
das
pop
cmp
pusha
sar
rol
enter
sub
inc
mov
xor
dec
dec
mov
xor
outs
scas
dec
retf
ins
xlat
inc
(bad)
out
mov
mov
push
mov
shl
or
cmp
stos
pop
push
add
inc
adc
add
das
jl
or
push
xchg
aad
or
jns
push
(bad)
push
xor
jae
dec
inc
jo
or
add
cmp
pushf
push
adc
rcr
and
pushf
mov
sar
add
repnz
ret
(bad)
adc
xlat
jo
ss
jne
adc
pop
push
push
sahf
inc
add
add
in
mov
in
fadd
push
and
sbb
sbb
scas
test
es
xor
jno
add
icebp
sbb
aad
sub
aas
or
push
xor
add
cmp
xor
daa
mov
sub
dec
shr
lods
lods
rcr
ror
adc
ret
test
daa
adc
pusha
ror
mov
jmp
jb
es
jl
adc
jb
lds
std
mov
ffreep
ret
push
cld
ret
or
mov
aam
dec
pop
jno
or
mov
repnz
test
inc
(bad)
sub
shr
in
sub
push
inc
ja
push
rol
mov
dec
ds
je
push
mov
(bad)
out
enter
enter
xchg
lock
dec
fs
push
dec
jo
ins
mov
lock
(bad)
call
rcl
jl
cmp
push
enter
nop
(bad)
aam
pop
add
add
jecxz
mov
pop
xchg
push
and
shl
mov
ins
sar
push
jb
dec
aam
test
sub
cmp
pop
jmp
dec
dec
add
rol
push
add
inc
test
jg
aaa
add
(bad)
add
push
adc
dec
push
repnz
out
pop
pop
add
movs
add
test
or
jne
inc
or
pop
xchg
pop
bnd
inc
push
rol
adc
push
xor
add
xchg
les
xchg
out
mov
shl
dec
cmp
cmp
add
rcl
push
cmp
or
xchg
bound
outs
xchg
cmp
mov
ret
jmp
xor
dec
inc
nop
cmp
xor
pushf
push
stos
aam
pushf
and
mov
cmps
mov
mov
scas
retf
push
rcl
nop
cmc
adc
cmps
mov
push
add
call
fwait
movs
or
sub
bound
dec
cmp
or
push
outs
sub
add
adc
add
push
jmp
dec
(bad)
lds
mov
mov
daa
jno
aaa
push
and
leave
push
mov
lahf
repz
pop
and
rcl
(bad)
mov
xchg
jne
xor
enter
(bad)
ror
enter
nop
mov
xor
aad
mov
movs
pop
les
imul
and
jle
adc
loopne
xchg
adc
inc
loopne
das
fst
lods
nop
enter
lods
loope
jecxz
push
ret
jno
mov
addr16
loop
and
leave
mov
imul
add
popf
adc
or
add
or
inc
aam
shl
sbb
mov
(bad)
popa
add
add
mov
inc
sbb
and
inc
in
shl
(bad)
jmp
xchg
sbb
xor
pop
xchg
dec
mov
fcomi
je
cld
(bad)
mov
xor
leave
sti
sub
stos
loope
(bad)
and
stos
popa
adc
ret
and
xchg
ja
push
jb
(bad)
in
jb
(bad)
leave
retf
and
div
and
xor
cmp
test
je
add
mov
shr
xor
and
lahf
sbb
sbb
js
retf
dec
pushf
and
pushf
and
mul
enter
out
adc
add
sub
or
xchg
hlt
and
xchg
rcl
icebp
add
adc
push
imul
mov
dec
int
sub
nop
shl
pop
mov
add
xchg
lock
sub
xlat
out
in
inc
add
xor
cmp
cmp
int3
xor
mov
xor
shl
scas
int3
push
and
sub
es
xchg
retf
clc
or
or
xchg
repnz
jmp
bound
dec
aas
sub
xor
out
fadd
push
ins
daa
les
mov
inc
stos
add
movhps
cmp
(bad)
int
and
pop
int
test
dec
iret
jb
call
dec
push
mov
fdivr
es
cmp
clc
aam
sahf
rcl
inc
aam
jne
bound
lods
ins
adc
add
pop
push
and
hlt
nop
shr
outs
push
imul
cdq
or
sub
sub
cmp
jmp
inc
rcl
loopne
pop
sub
ret
jge
sbb
cmp
shr
(bad)
jmp
inc
dec
jne
push
jg
std
loopne
and
mov
sahf
xchg
mov
pop
shl
mov
(bad)
popa
adc
imul
aam
pop
cwde
movs
sbb
nop
in
pusha
add
add
inc
das
pop
enter
pushf
jecxz
inc
popf
jecxz
fs
cs
inc
jmp
std
and
pop
push
scas
lods
push
shr
and
outs
mov
pusha
xor
mov
shl
jecxz
jo
cmp
rol
aaa
jl
fbld
out
mov
test
clc
inc
cli
add
add
mov
pop
popf
pop
and
lea
mov
pushf
push
pop
push
out
daa
data16
jmp
mov
jo
out
mov
sub
push
xchg
ins
icebp
dec
adc
mov
mov
fdiv
arpl
cmp
imul
sub
fmul
adc
or
adc
fsubr
fsub
jge
pop
push
adc
repnz
dec
sahf
cld
mov
arpl
mov
test
clc
cmp
mov
mov
mov
call
test
lods
sbb
sub
xchg
loopne
pushf
mov
push
retf
cmp
ficom
mov
adc
ret
inc
or
dec
loop
inc
jle
cmp
jg
push
push
mov
adc
dec
cmp
and
xchg
sbb
add
add
(bad)
popa
std
adc
jecxz
sub
ret
ret
mov
xor
cmc
dec
sbb
sub
mov
fidiv
clc
push
jl
xor
mov
jb
sbb
push
ins
dec
loopne
into
adc
ja
ins
ror
jmp
inc
or
clc
into
addr16
push
repz
mov
test
sbb
sbb
out
cmp
or
inc
ret
pop
outs
into
loopne
aam
add
cmp
push
(bad)
and
and
scas
rol
mov
adc
add
jecxz
and
inc
lods
in
clc
xor
adc
jge
cmc
pop
mov
in
or
loopne
fisttp
dec
and
int
outs
xchg
fs
lods
cmp
pusha
leave
aaa
inc
mov
push
jns
cld
jl
pop
in
cmp
in
cmp
cmp
and
int
mov
je
repz
jg
es
not
call
add
and
xchg
int3
(bad)
cwde
xchg
pop
popa
jp
ficomp
rcl
mov
imul
mov
rol
push
outs
daa
xchg
pop
nop
call
and
lods
ja
mov
mov
adc
push
loope
push
jecxz
idiv
add
(bad)
sbb
or
inc
jmp
mov
jne
nop
push
inc
mov
je
aas
jb
in
mov
mov
inc
xlat
in
ins
ror
or
enter
mov
ins
sbb
jmp
inc
sbb
xchg
scas
push
fild
lods
cmp
mov
push
jno
ins
or
and
dec
daa
cmp
je
outs
sbb
sbb
je
(bad)
in
enter
cli
xchg
(bad)
shl
inc
sti
retf
jge
sti
jl
mov
aaa
jmp
in
push
lahf
add
lods
std
pop
mov
and
loop
and
aas
lea
mov
pop
dec
jmp
jecxz
fmul
mov
lahf
pop
fdivr
mov
pop
sbb
push
fisttp
mov
add
mov
inc
in
and
mov
add
xchg
add
or
or
enter
sub
lods
daa
xlat
and
aas
(bad)
or
inc
mov
jge
test
xchg
imul
shl
add
stc
sahf
pop
or
fsubr
and
pop
jne
addr16
inc
dec
(bad)
push
and
pop
and
mov
mov
or
stc
mov
sbb
in
mov
and
mov
pop
pop
xor
jp
shl
(bad)
adc
jg
inc
inc
jbe
ins
jg
push
xchg
cmp
mov
fld
test
jg
in
in
xor
outs
test
xchg
test
aam
ss
jecxz
mov
out
sub
test
cmp
shr
pop
int3
sbb
int
out
movs
push
or
aaa
and
dec
fnstenv
jmp
pushf
in
or
(bad)
call
or
and
(bad)
push
test
out
sub
sub
mov
push
into
xor
push
xor
sub
mov
mov
in
lods
outs
loop
sub
lods
or
dec
jle
mov
mov
stc
xchg
mov
xchg
pop
or
dec
test
dec
fdiv
add
test
dec
pop
aaa
and
nop
dec
inc
inc
lods
inc
fs
jg
mov
ret
push
inc
mov
(bad)
das
add
inc
mov
mov
mov
xor
popf
(bad)
jmp
dec
and
or
fnstsw
mov
jp
push
add
or
push
ins
inc
fsub
add
sbb
std
pop
jns
fidivr
cmp
push
inc
xor
cmp
in
mov
adc
aad
gs
mov
and
push
(bad)
in
inc
cmp
mov
movs
add
jnp
and
and
inc
xor
jno
shl
shl
in
das
cmp
pop
and
or
pusha
ja
adc
jno
add
jbe
test
retf
inc
xchg
or
ins
test
imul
mov
mov
jae
ror
jge
nop
mov
or
cvtpi2ps
dec
fist
jmp
scas
xor
xchg
test
rol
add
dec
add
jmp
jecxz
and
cli
scas
mov
lahf
mov
xchg
xchg
sbb
rol
cmp
fisubr
out
ror
fcmovb
out
call
xor
pop
jbe
and
and
(bad)
push
add
mov
in
loopne
dec
neg
inc
nop
mov
jg
jbe
leave
mov
shl
adc
jno
out
pop
push
mov
ror
rol
mov
stc
xchg
lock
adc
or
imul
bound
and
and
call
shr
add
and
call
aam
cmp
jno
or
leave
js
jns
cs
sub
or
dec
int3
jmp
push
fiadd
cmp
mov
xchg
jge
xor
add
fld
leave
and
loop
push
or
push
push
iret
or
lods
cmp
mov
in
clc
mov
(bad)
sub
gs
loop
jae
adc
mov
cmp
sbb
or
ret
leave
lea
and
cld
inc
adc
jae
jmp
jl
jo
fsub
mov
dec
jge
mov
push
add
and
adc
pop
add
stos
pop
lods
retf
scas
gs
imul
out
add
or
add
bound
cmp
inc
dec
mov
inc
mov
cli
sub
and
ins
jecxz
inc
push
popa
scas
leave
mov
pop
shl
cli
(bad)
outs
shr
inc
sub
xchg
dec
jno
xchg
js
loope
jb
add
cld
aaa
imul
lock
mov
push
and
lahf
ret
or
(bad)
mov
push
adc
add
push
repnz
cmps
add
push
hlt
sub
in
add
jae
js
inc
mov
xor
aam
je
inc
cmp
(bad)
jne
(bad)
mov
ins
adc
pop
xchg
std
sub
les
add
sub
in
test
jb
in
and
mov
test
lods
mov
adc
adc
mov
add
fucomip
xor
js
add
dec
and
xchg
test
jg
jge
dec
and
test
inc
add
ret
add
or
mov
push
pop
jae
(bad)
and
and
cmp
cmps
test
aas
sub
lock
dec
adc
or
cmp
and
(bad)
xchg
arpl
lock
mov
loopne
cld
mov
inc
or
mov
mov
fdivr
and
or
inc
cmps
(bad)
aam
clc
inc
or
or
(bad)
aaa
aaa
lahf
rcr
pop
fs
dec
sbb
push
daa
mov
mov
add
jb
xor
outs
add
adc
pop
add
pop
cdq
(bad)
jmp
(bad)
jp
jno
clc
cmp
push
dec
or
iret
xchg
push
adc
lock
sahf
mov
or
in
int3
(bad)
xlat
add
dec
push
adc
mov
mov
xlat
push
inc
push
test
test
mov
je
les
loop
inc
fild
ficom
fldenv
dec
(bad)
cdq
not
(bad)
mov
test
sbb
sar
and
in
jle
inc
add
xor
mov
es
arpl
inc
in
(bad)
imul
jne
ret
loopne
or
and
xor
aam
test
adc
stc
loopne
mov
or
test
movs
and
(bad)
loope
mov
fucomi
std
jle
xor
loopne
xchg
shr
sbb
or
retf
je
mov
dec
cmps
fs
add
lock
cmp
dec
adc
add
and
or
lods
adc
call
push
add
js
mov
mov
fisttp
cmps
and
mov
pop
sub
sti
and
sar
and
xor
inc
and
adc
xchg
cmp
xchg
scas
adc
popa
in
in
jle
mov
and
inc
mov
aad
popa
push
add
inc
rcl
or
jle
cmp
(bad)
outs
or
mov
and
add
dec
in
hlt
inc
and
or
inc
sub
inc
pushf
mov
dec
shl
sbb
cmp
jmp
inc
inc
cmp
pop
(bad)
cmp
in
ins
imul
adc
or
push
push
test
mov
(bad)
(bad)
dec
and
add
mov
cmp
push
pop
add
js
addr16
xchg
add
clc
inc
or
ins
pop
add
mov
in
movs
and
or
repnz
lds
fsubr
add
sbb
(bad)
mov
aaa
push
sbb
rcl
scas
(bad)
out
xor
mov
pop
xchg
and
add
hlt
cmp
scas
sub
xchg
mov
(bad)
ret
icebp
or
shl
nop
jle
sub
bnd
mov
pop
cs
ss
push
push
pusha
(bad)
push
xor
mov
jp
sbb
pop
xor
fucomip
repnz
ucomiss
out
leave
and
out
sbb
dec
pop
add
jl
add
fcmovu
pop
add
push
cmp
adc
stos
pop
repnz
mov
xchg
xchg
dec
test
push
add
jo
mov
lahf
xchg
sbb
sbb
and
shl
or
aam
in
add
xchg
xor
dec
sbb
sbb
cmc
mov
xor
jnp
mov
arpl
cmp
jle
inc
fs
cmp
add
jns
lahf
mov
imul
cmp
add
pop
cmp
pop
dec
push
adc
cs
stc
add
or
mov
dec
enter
cli
inc
push
push
and
push
ss
add
retf
adc
adc
pop
sub
repnz
loopne
or
clc
es
out
mov
ins
(bad)
push
cdq
rcl
dec
or
rol
adc
mov
dec
adc
xchg
sub
cmp
mov
push
repz
dec
or
ja
icebp
mov
jbe
or
gs
sbb
outs
pop
jg
sti
imul
and
dec
loopne
shl
sbb
push
cmp
daa
xchg
add
ins
or
or
push
shl
mov
enter
repnz
outs
mov
leave
pushf
xchg
xchg
in
and
hlt
and
push
retf
loope
imul
push
cmp
call
ror
imul
imul
push
aaa
xchg
or
rcl
sub
lods
mov
mov
(bad)
fidiv
stc
or
hlt
fs
fild
call
mov
dec
add
dec
add
inc
std
jno
or
or
inc
mov
shl
mov
xchg
test
xor
xchg
test
cmp
jbe
js
imul
adc
or
dec
popf
ins
xchg
cli
enter
in
pusha
xor
mov
xchg
jmp
in
sub
and
mov
cmp
push
or
mov
or
lods
sub
xchg
rcr
(bad)
fist
mov
push
push
rol
and
mov
or
sub
mov
sbb
push
fldln2
dec
cmp
mov
cli
aam
mov
and
inc
xchg
pop
jne
mov
jle
stos
dec
fsub
pop
pusha
xor
cmc
js
loopne
and
mov
stos
cld
or
scas
jnp
add
ins
stc
cli
pusha
xor
test
pop
jb
lods
fldenv
cmc
push
or
add
cmps
into
in
xchg
or
pop
mov
ss
inc
dec
adc
cmp
rol
push
(bad)
sub
jl
mov
sub
cld
inc
sbb
dec
and
mov
or
xor
not
(bad)
xchg
jne
or
aaa
or
cs
adc
lock
icebp
aam
push
xor
mov
sti
and
or
jno
fistp
pop
push
ret
push
jp
adc
sbb
xor
dec
sub
adc
ret
inc
scas
jp
repnz
xor
fimul
or
inc
inc
call
add
popf
and
sub
xchg
mov
dec
push
push
sub
xor
and
inc
and
and
sbb
cs
nop
jg
popf
pop
push
sub
dec
add
jl
inc
push
xor
sbb
mov
and
pop
dec
mov
or
xchg
loopne
sbb
jp
sbb
mov
jne
mov
nop
xor
mov
sbb
sub
data16
xchg
adc
mov
dec
mov
je
sar
and
ret
jne
mov
adc
mov
mov
dec
sub
push
sbb
push
sub
sbb
loope
mov
mov
movs
mov
pop
addr16
stos
xlat
or
mov
cs
adc
div
lock
inc
loopne
or
mov
adc
movs
outs
adc
les
dec
popf
int3
mov
add
arpl
xor
lds
inc
mov
adc
in
lock
je
add
add
and
(bad)
repnz
in
xchg
xor
rcr
push
popf
sbb
js
adc
(bad)
push
xor
push
push
inc
inc
dec
loopne
in
pop
div
cs
xor
jg
xchg
pop
cli
mov
shr
mov
pop
sar
imul
sti
fbstp
sti
push
(bad)
push
xor
push
inc
push
pop
shr
mov
cld
inc
inc
call
es
pushf
fst
dec
test
or
jle
(bad)
call
jo
sbb
add
and
int3
std
inc
outs
mov
add
sub
mov
call
mov
cmp
add
add
jns
add
sti
dec
add
dec
add
mov
ja
add
xchg
out
push
lds
adc
pop
rcl
pop
int
mov
lock
repnz
mov
xlat
rol
shl
cmps
jns
add
sbb
fnstcw
in
clc
jmp
das
inc
and
sub
xchg
stc
or
popa
(bad)
mov
das
les
jo
ffreep
std
jecxz
push
and
(bad)
ins
shl
int3
add
or
sub
ud0
aaa
xchg
imul
pop
dec
push
xchg
jo
xor
stos
pop
sbb
xor
movs
nop
call
add
and
loopne
mov
add
push
inc
mov
test
mov
mov
mov
(bad)
sbb
mov
outs
and
mov
inc
das
test
sbb
dec
test
xchg
add
fild
mov
in
or
jns
inc
daa
inc
dec
dec
inc
mov
dec
js
in
jmp
es
dec
dec
repz
clc
push
push
loopne
cwde
pop
movs
push
fmul
jmp
aam
or
dec
daa
fnstsw
jl
rcr
repnz
daa
ror
repz
cmp
push
enter
push
dec
pop
mov
add
fucomp
pusha
lock
cmps
ja
xor
sbb
push
and
inc
xor
mov
dec
sbb
and
(bad)
das
push
or
mov
das
mov
daa
ret
mov
dec
push
sub
pop
shr
or
(bad)
sub
adc
call
or
or
or
or
mov
sub
add
popf
sbb
inc
inc
in
fdivr
cmps
pop
xchg
mul
data16
loop
add
mov
lahf
ret
jge
(bad)
add
loope
rcl
adc
mov
inc
clc
aam
je
jmp
push
jo
add
(bad)
lods
aaa
sub
retf
mov
(bad)
pop
or
adc
adc
imul
inc
lods
sbb
inc
dec
adc
mov
mov
cs
xor
fwait
or
mov
or
js
loope
ret
imul
outs
mov
xchg
mov
movs
ret
sub
dec
adc
and
pushf
ds
or
xchg
mov
bound
call
arpl
pop
jno
push
and
xor
lahf
bound
pop
les
mov
das
in
in
rol
jmp
dec
xchg
xchg
cmp
cmp
pop
mov
add
xor
pop
adc
rol
push
sub
gs
cmp
call
dec
or
pop
ret
push
xor
out
sbb
dec
add
sbb
add
mov
rcr
or
call
sbb
test
push
out
rcr
inc
push
fdiv
mov
dec
cmp
call
push
push
mov
add
test
mov
sub
pop
push
das
dec
xor
call
in
out
ret
dec
adc
and
sbb
sbb
jge
movs
cmc
nop
stos
xchg
loope
(bad)
ins
inc
push
dec
add
ret
push
pop
sub
aam
loop
xor
mov
jno
mov
or
daa
add
sub
adc
cmp
ret
pop
add
cmp
mov
fcmovbe
or
lods
adc
movs
pop
pop
pop
shl
xor
xor
and
mov
je
ds
sbb
aaa
inc
and
cmp
mov
aaa
out
mov
sbb
cwde
and
pop
cmp
dec
test
mov
test
lods
aas
aaa
or
push
jns
xchg
ins
or
xor
int
jg
mov
mov
fsub
pop
jbe
add
fs
cmp
mov
mov
cmp
push
xor
imul
mov
push
and
xor
neg
inc
(bad)
dec
pop
test
sti
sahf
idiv
add
push
(bad)
in
mov
fstp
loope
push
pushf
inc
xor
push
scas
pop
sti
inc
push
mov
add
xor
retf
inc
xchg
mov
add
test
push
stos
nop
in
test
nop
bound
add
adc
add
mov
cmp
inc
out
sar
cmps
push
xchg
cwde
mov
jmp
clc
mov
test
pop
xchg
out
enter
mov
out
sbb
mov
pop
inc
pushf
ror
and
push
push
mov
add
dec
mul
inc
or
add
or
xchg
in
mov
cwde
or
xchg
mov
add
or
sti
fs
sar
mov
push
sub
and
fnstenv
(bad)
jmp
stos
mov
psrlq
xor
fbld
mov
mov
jg
add
cmp
dec
js
inc
cmc
pop
or
dec
test
dec
ret
shr
add
xchg
jne
push
dec
stos
imul
das
aad
jle
and
ror
lea
add
adc
in
sbb
js
das
add
call
and
adc
enter
add
mov
rol
or
xor
adc
je
xor
push
iret
mov
xor
nop
mov
adc
pop
loopne
push
imul
dec
xor
mov
aaa
lods
inc
or
cmp
cmp
je
jns
mov
cmps
sub
mov
lock
hlt
dec
es
(bad)
jl
cdq
dec
or
popa
xor
or
pop
adc
inc
dec
adc
movups
jne
jmp
clc
loopne
mov
mov
xchg
clc
pop
imul
ins
mov
mov
sub
mov
ds
adc
stos
clc
xchg
adc
in
loopne
or
xor
push
jmp
push
push
call
dec
push
and
cmovge
add
dec
mov
xor
xor
in
outs
and
adc
inc
xchg
sub
add
push
xchg
jo
inc
xchg
cmc
je
jle
js
fst
call
cmp
add
cmps
push
addr16
or
push
movs
and
retf
test
hlt
test
adc
add
das
adc
ins
aas
mov
(bad)
(bad)
mov
(bad)
div
jmp
pop
and
retf
and
jno
out
push
aas
test
sub
sub
add
mov
in
mov
adc
aaa
loopne
pop
inc
adc
aas
pusha
stos
add
stc
pushf
xor
cs
lods
adc
loopne
stos
fistp
or
jbe
and
xchg
sbb
cvtps2pi
lods
push
xchg
xchg
cmp
xor
test
sub
jno
pusha
push
push
cmp
adc
mov
sub
pop
rcr
imul
sbb
loopne
pushf
mov
or
shl
mov
outs
cmp
add
push
lods
adc
xchg
pop
movs
ja
adc
mov
in
push
sbb
into
data16
sbb
jo
inc
sbb
xchg
adc
cs
in
in
mov
rol
mov
mov
in
sub
push
dec
shl
pop
in
ret
push
lahf
js
or
or
ret
retf
inc
rcr
push
test
adc
pop
lock
adc
test
fild
sub
test
sbb
add
push
or
push
jo
xchg
pop
stos
dec
pop
pop
les
gs
push
push
mov
lods
cmp
pop
xchg
cmc
inc
jmp
mov
add
push
jge
inc
call
repnz
mov
enter
mov
fadd
inc
xchg
je
pop
add
adc
sbb
adc
dec
fadd
push
mov
xchg
xchg
cmp
adc
data16
inc
sahf
outs
enter
adc
ret
jno
data16
dec
sbb
es
nop
sbb
cs
and
mov
or
jns
mov
mov
adc
mov
sub
sub
pop
pop
lock
sbb
ror
cdq
je
call
lds
jne
and
inc
add
cmp
data16
push
push
pusha
in
lock
aaa
ss
mov
std
adc
xor
movs
cmps
or
sub
push
scas
sbb
add
sub
movs
dec
xchg
nop
fsubr
jbe
repnz
icebp
xchg
mov
sub
sbb
mov
fcom
xlat
lea
in
test
sbb
mov
xchg
data16
jl
xor
push
and
loop
ror
xchg
pushf
mov
(bad)
push
mov
jmp
sbb
int
dec
pop
mov
mov
hlt
in
mov
clc
lock
hlt
movs
mov
inc
push
add
mov
xchg
add
sbb
imul
xor
cmp
ins
pusha
add
shl
cli
ss
cmps
fwait
sbb
cmp
rcr
sbb
or
push
(bad)
daa
pop
test
fistp
push
idiv
cmp
mov
dec
lea
adc
mov
add
xchg
sbb
and
rcl
cld
js
sub
bound
push
mov
push
xchg
add
movs
cs
fild
xchg
scas
es
out
sub
fstp
shr
aaa
mov
mov
mov
mov
das
movs
sub
test
ins
and
sub
out
dec
sbb
dec
xchg
pop
cmps
mov
out
movs
shl
push
gs
push
jo
push
mov
mov
int3
jmp
pop
adc
dec
nop
lea
jne
inc
add
xchg
push
xor
ins
outs
clc
cld
lock
and
aad
or
mov
into
outs
clc
cld
sbb
xchg
lahf
(bad)
sub
xor
mov
cmp
xchg
fsubr
xchg
sbb
scas
jmp
xchg
lea
je
sub
jne
mov
sbb
xlat
jmp
sbb
xchg
arpl
scas
pop
ss
adc
adc
mov
adc
pop
cs
dec
hlt
in
clc
lock
in
imul
cdq
mov
movs
sub
mov
ds
sub
idiv
loopne
fistp
test
or
aas
xlat
dec
push
jns
sbb
inc
add
les
push
mov
add
mov
push
push
jbe
sbb
bound
jns
push
jnp
xchg
adc
nop
scas
add
ja
jo
xor
mov
aas
sti
cmp
adc
xor
adc
adc
fstp
loopne
pop
add
lods
adc
aas
and
adc
loope
fsubr
add
pop
in
movs
sub
lea
shr
xor
dec
loope
add
push
mov
mov
adc
sahf
ds
inc
push
add
ins
ins
xor
mov
ja
pop
pop
sub
inc
cld
test
sbb
or
test
add
xchg
xchg
add
push
xor
dec
cmp
pop
(bad)
cmp
push
(bad)
xchg
adc
pop
xlat
dec
loop
nop
jecxz
or
(bad)
mov
mov
popa
mov
nop
mov
xchg
test
movs
or
add
les
pop
jae
idiv
nop
mov
or
cmp
and
mov
(bad)
fxch
push
test
and
sbb
add
adc
add
push
jg
xchg
or
dec
sub
adc
fsub
ret
jg
pop
cmp
ret
jo
imul
add
and
mov
and
outs
jb
lock
test
ror
in
call
call
and
stos
xchg
inc
push
add
int
push
add
cdq
pop
inc
nop
xor
xchg
mov
sub
dec
xchg
push
and
daa
mov
je
sbb
and
cs
xchg
das
or
je
clc
jne
xchg
cld
mov
and
repz
or
sub
imul
adc
arpl
or
repnz
imul
addr16
hlt
mov
stc
add
inc
inc
dec
popf
das
jecxz
or
mov
inc
cmp
dec
dec
aas
xor
fwait
and
in
ucomiss
jmp
push
sub
cmp
retf
dec
push
mov
wrmsr
sbb
lock
add
rcr
xchg
mov
pop
bnd
dec
pusha
ins
and
mov
jno
(bad)
adc
push
pop
pop
hlt
push
pop
fwait
test
test
inc
push
lock
adc
jecxz
sbb
loope
mov
cmp
mov
add
jo
jne
cmp
fild
pop
push
out
or
lea
dec
rol
jl
or
scas
mov
and
add
push
add
mov
mov
push
pop
add
jo
cmp
nop
xchg
fld
adc
repz
(bad)
xor
mov
or
sub
push
loope
addr16
or
mov
imul
shr
shl
add
inc
inc
add
clc
aas
(bad)
pop
xchg
es
pop
sbb
push
rol
call
rol
xchg
cmp
retf
push
imul
mov
mov
push
dec
ins
retf
lods
inc
push
enter
xchg
in
inc
add
mov
dec
or
iret
and
in
les
mov
mov
push
pop
leave
cmp
(bad)
xchg
dec
fsub
mov
fsubr
inc
aam
xchg
xchg
jae
mov
cwde
inc
ror
out
sbb
mov
sbb
or
sbb
push
(bad)
sub
ror
pusha
inc
push
and
es
leave
dec
add
xchg
add
aaa
int
jmp
sub
cmp
pop
sub
jg
jmp
xchg
inc
push
enter
add
mov
inc
sub
and
ficom
add
loope
push
jge
cmp
imul
aas
mov
mov
dec
rcr
xchg
xchg
and
mov
pop
mov
mov
mov
xor
aad
dec
mov
nop
dec
push
lock
cmp
nop
dec
in
call
sbb
xor
inc
pop
es
lods
jmp
pop
add
movs
fs
xor
shr
and
dec
add
pop
add
fs
mov
sub
or
es
inc
stos
out
test
and
mov
cmps
sbb
pop
dec
sub
sub
fild
jmp
data16
add
pop
movs
adc
or
cli
sbb
xor
(bad)
mov
iret
scas
dec
sub
mov
jl
push
bound
and
add
xchg
mov
jb
sbb
ja
out
adc
push
stos
data16
aam
push
adc
mov
daa
mov
push
loope
mov
mov
sbb
add
into
retf
lock
pop
jb
add
and
mov
shl
mov
mov
fnstsw
push
repz
add
add
jne
cmp
jne
push
sbb
add
push
add
test
add
add
xor
hlt
mov
hlt
daa
adc
push
fs
pop
scas
repnz
add
jmp
push
adc
mov
mov
xor
imul
and
clc
xor
clc
movs
aas
mov
adc
popf
loopne
adc
cmp
jno
lds
dec
or
hlt
and
xchg
cs
fs
sub
dec
and
and
cmp
retf
jecxz
and
sbb
inc
lahf
fmul
mov
pop
xor
xor
mov
sub
add
sti
mov
in
daa
add
lock
jne
cwde
pop
lock
dec
xor
add
out
cwde
rol
jg
hlt
add
seta
xchg
sub
add
fsub
dec
into
and
sti
cs
push
xor
or
xor
sahf
out
jl
enter
xchg
sbb
inc
and
inc
xchg
call
rol
call
int3
inc
and
dec
enter
mov
les
add
pop
les
rcl
mov
and
or
mov
or
or
pop
enter
clc
hlt
out
js
or
adc
arpl
cmp
pop
and
xor
push
xor
add
rcl
mov
sub
mov
inc
cld
fwait
stos
shl
add
repz
sub
out
call
fwait
test
mov
mov
shl
int
iret
mov
out
jne
lods
loopne
pop
and
inc
or
mov
movs
in
nop
pop
push
ret
rol
daa
xchg
dec
xchg
inc
inc
cs
dec
push
xor
mov
dec
cmps
add
js
hlt
aas
mov
sbb
sub
jo
ror
icebp
ss
test
into
dec
sub
enter
push
pop
adc
inc
jp
(bad)
ss
ret
or
cmp
dec
and
psubsw
(bad)
fcom
xchg
push
test
sub
xor
les
jnp
retf
ss
or
push
iret
cmc
sbb
push
xchg
icebp
sub
xor
dec
mov
sub
outs
and
fmul
dec
push
scas
aam
aam
sar
ror
xor
enter
pop
enter
pop
xor
and
out
inc
push
bound
xchg
jmp
aaa
mov
stos
mov
push
test
daa
loope
clc
test
mov
mov
sub
dec
sahf
idiv
nop
xchg
clc
mov
mov
inc
mov
xchg
out
out
lea
(bad)
adc
popa
loopne
sbb
arpl
sub
mov
and
fimul
adc
sbb
or
jp
xchg
sub
retf
call
cmp
cmp
call
pop
das
daa
movs
pop
js
inc
mov
dec
dec
pop
sub
pop
mov
mov
xchg
mov
mov
dec
nop
das
push
sbb
out
in
les
int
mov
stc
frstor
cs
add
inc
pusha
mov
out
mov
jmp
inc
(bad)
or
cdq
movs
push
and
or
xchg
in
cmp
xchg
mov
jnp
sbb
cmp
push
out
sahf
out
cmp
imul
xlat
cmp
sub
stos
pop
ror
lods
mov
pop
mov
xchg
dec
ror
adc
adc
aaa
adc
adc
jmp
sbb
in
jno
cmp
cmp
ror
push
sub
inc
jg
adc
mov
mov
(bad)
daa
test
clc
ins
or
es
dec
cmp
pop
or
inc
in
cmp
inc
mov
mov
mov
mov
aas
mov
pop
js
cld
and
mov
xor
adc
dec
sbb
sub
add
and
loope
aas
jns
and
(bad)
pushf
jbe
dec
test
cmp
sub
and
xchg
or
fdiv
xor
adc
xchg
rol
inc
iret
pop
push
jo
add
sahf
adc
sub
jns
sbb
rol
add
adc
xor
enter
test
call
pop
xor
aas
push
dec
add
add
je
sar
push
mov
ss
aam
adc
pusha
rcr
inc
sbb
aad
pop
(bad)
and
dec
or
cmp
fmul
and
imul
and
dec
dec
pop
and
add
test
bound
jae
push
int
dec
sub
jmp
inc
test
arpl
shl
or
rcr
mov
inc
jle
fld
push
inc
ins
dec
das
add
pop
fldenv
inc
repz
mov
push
xor
cwde
add
test
inc
mov
daa
xchg
or
adc
or
jo
cmc
ins
lock
or
or
ss
cdq
nop
out
arpl
xchg
xchg
add
lock
cmp
or
add
inc
ds
dec
add
pop
or
push
ret
inc
pop
jno
add
inc
mov
and
lds
rcr
push
test
sbb
or
mov
ins
inc
lock
loopne
mov
mov
adc
hlt
and
mov
push
add
jecxz
leave
dec
sub
adc
dec
jne
or
js
jmp
test
push
bswap
test
or
pop
out
jo
adc
add
mov
sub
fild
adc
scas
jg
sbb
dec
xchg
add
and
push
or
adc
mov
clc
inc
xor
xchg
clc
cmps
mov
mov
jns
or
sbb
loop
add
sbb
fs
inc
sub
and
das
cmp
dec
idiv
enter
adc
and
xchg
xchg
(bad)
cs
add
inc
mov
inc
imul
inc
mov
lds
(bad)
mov
add
mov
mov
mov
pop
pop
leave
add
jge
mov
cmp
mov
xor
and
jmp
pop
xor
jle
adc
adc
pop
cmps
inc
or
push
sbb
or
leave
push
sbb
pop
test
out
movs
xchg
nop
push
push
or
fdiv
inc
xchg
rcr
xor
sub
movlps
and
pushf
push
mov
call
aad
adc
xor
enter
mov
jg
cmc
push
push
iret
mov
mov
outs
mov
outs
outs
xor
and
dec
aas
mov
mov
mov
inc
retf
jge
xchg
and
int
sbb
and
inc
retf
sar
sbb
sbb
std
repnz
ret
popf
sub
adc
push
xlat
enter
push
add
dec
sti
jge
inc
mov
jmp
cdq
outs
mov
out
int
adc
xor
push
dec
mov
pop
sbb
fcomp
sub
and
xchg
cmp
jmp
das
inc
repnz
lock
gs
xchg
cld
clc
loope
sub
bound
or
jo
(bad)
dec
movzx
inc
push
mov
xor
retf
and
jecxz
jno
mov
push
mov
inc
mov
imul
inc
lahf
arpl
jo
call
jnp
popf
sub
mov
pop
es
out
xchg
push
or
movs
arpl
adc
push
inc
xchg
adc
mov
sbb
push
jle
ror
sub
pop
fucomip
and
and
dec
mov
pop
adc
lock
sbb
adc
jg
dec
xor
jmp
test
dec
cmp
xchg
mov
ror
ja
test
shl
jecxz
ja
lods
pop
sub
fcomp
or
ret
sub
scas
adc
ja
hlt
call
cmp
sub
dec
pop
or
and
xor
out
clc
es
adc
or
mov
mov
sahf
call
cmovp
adc
ret
imul
xchg
pop
jp
dec
dec
add
and
icebp
lahf
cli
inc
sub
add
inc
outs
add
xchg
xchg
mov
or
ror
lock
popa
dec
pop
jle
out
nop
fst
add
shr
inc
mov
add
cmp
pop
mov
push
shufps
dec
clc
push
and
sub
pop
pop
mov
std
push
jne
push
nop
or
mov
fbld
push
jbe
push
add
or
jge
sub
sbb
jmp
daa
mov
xchg
cmp
stos
mov
ss
jae
test
push
sbb
daa
xor
jb
sub
add
(bad)
mov
jnp
(bad)
shr
pop
cmp
prefetch
or
mov
mov
inc
or
scas
jne
(bad)
movs
call
inc
add
retf
mov
dec
daa
hlt
inc
or
xchg
inc
cld
dec
je
xor
jae
or
daa
dec
pop
and
adc
cs
dec
int3
outs
dec
sbb
sbb
add
add
and
in
add
or
call
and
adc
push
dec
adc
and
outs
mov
inc
push
mov
add
jns
cwde
mov
and
mov
iret
mov
and
sub
test
les
lods
inc
add
adc
test
ss
adc
adc
push
xor
jbe
pop
pop
or
dec
adc
xor
jb
push
inc
or
lods
in
scas
jnp
ss
jnp
ss
inc
idiv
cdq
in
mov
enter
xchg
repz
inc
scas
xlat
sbb
mov
sbb
sub
aam
iret
pop
push
push
xlat
adc
inc
add
clc
pushf
sbb
mov
and
dec
sbb
inc
loopne
push
scas
jo
add
(bad)
mov
test
jnp
jno
inc
test
mov
fidivr
int
movs
push
femms
fadd
or
push
imul
pop
xor
dec
adc
xor
sub
push
outs
adc
sub
pop
adc
or
or
mov
sub
and
and
das
cmp
xchg
gs
in
add
pop
cmps
push
add
add
push
xchg
inc
inc
ins
push
push
pop
aaa
(bad)
sbb
cs
jecxz
jo
lahf
or
sbb
push
dec
inc
inc
mov
loop
pop
cmp
in
add
add
bound
int3
pop
lods
xor
scas
sub
xor
call
es
test
dec
mov
(bad)
outs
pop
inc
leave
and
add
dec
push
enter
push
call
xchg
fcom
(bad)
push
or
add
or
pop
aas
pop
dec
xchg
bound
pop
retf
mov
and
add
dec
sbb
sub
retf
nop
out
adc
push
mov
das
adc
push
xlat
adc
push
mov
aam
ds
sub
ins
adc
inc
adc
mov
xor
xor
imul
xchg
imul
xchg
cmp
cmc
pushf
div
pop
cmps
add
sbb
mov
push
dec
xchg
mov
sbb
push
mov
aas
pop
and
in
pop
or
cmps
or
mov
pop
jecxz
(bad)
enter
inc
fs
shl
pop
adc
mov
lds
sub
xchg
pop
paddsb
push
mov
push
int3
lds
mov
enter
push
dec
xchg
idiv
xlat
outs
stos
xlat
pop
dec
daa
jo
push
sub
ins
aas
inc
sbb
jb
pop
adc
cmp
sub
lods
in
adc
sbb
add
add
mov
or
add
add
popa
adc
and
adc
dec
mov
push
ret
adc
adc
jns
push
xor
popf
jge
cmp
jne
loop
clc
adc
(bad)
adc
ss
jns
cmp
jne
fstp
add
xor
scas
xchg
addr16
in
adc
add
and
loopne
jne
dec
add
mov
test
outs
sti
adc
xchg
mov
sar
(bad)
xchg
ds
mov
aaa
xor
add
(bad)
jne
or
les
daa
imul
xchg
push
sbb
xchg
mov
rol
mov
call
add
push
scas
ins
jge
or
xor
inc
pop
dec
add
add
data16
fimul
(bad)
jecxz
sbb
pop
pop
dec
sbb
lock
test
pop
lock
cmp
jo
inc
push
pop
mov
bound
dec
seto
push
int3
bound
arpl
fldcw
ds
push
cwde
jno
fs
mov
add
adc
mov
mov
xchg
pop
dec
inc
pop
inc
pop
in
adc
sbb
outs
mov
add
adc
inc
or
xlat
or
cmc
mov
sbb
shl
sbb
and
or
pop
lock
add
leave
inc
daa
je
dec
or
fsub
jnp
nop
fild
and
int3
adc
mov
bound
mov
mov
or
sahf
inc
adc
cmp
adc
sub
pop
ret
xor
push
mov
imul
cmp
out
pop
das
shl
outs
adc
pop
add
loop
pop
iret
in
mov
sub
push
rcr
mov
(bad)
adc
fs
mov
loope
or
xor
ja
xor
add
pop
sub
not
xor
mov
popa
cli
jns
sub
adc
iret
pop
inc
xor
mov
in
add
and
sar
out
pand
xlat
xor
sbb
dec
ret
ror
mov
pop
mov
or
lods
add
jp
clc
mov
dec
add
jge
ror
sbb
push
adc
mov
leave
xchg
push
and
or
popa
sub
pop
cmp
cwde
jo
jnp
xor
and
push
sub
and
xchg
sbb
cmp
or
xchg
mov
gs
adc
(bad)
sub
sub
mov
jp
neg
pop
xor
adc
xor
sub
mov
mov
cmps
adc
aas
xchg
je
add
sub
sbb
xor
out
xor
addr16
mov
(bad)
or
add
jne
inc
lock
push
sub
and
(bad)
add
daa
ret
adc
inc
sbb
movs
fwait
push
adc
and
imul
sub
imul
inc
xor
cmp
and
imul
aad
mov
sub
jo
mov
xor
es
rcl
sbb
xor
ja
xchg
arpl
stos
mov
adc
(bad)
adc
push
mov
inc
fistp
adc
punpcklwd
push
add
pop
and
or
pop
sub
and
stos
sub
mov
adc
pop
or
cmp
inc
xlat
adc
mov
push
sub
ds
cld
mov
pushf
shl
jl
and
pusha
add
inc
mov
cdq
daa
ret
push
mov
sbb
and
mov
je
mov
sub
cmp
test
add
stc
arpl
xlat
sar
fidiv
dec
ss
add
inc
dec
sub
(bad)
lock
or
or
int3
sbb
pop
mov
mov
or
mov
sar
jo
xchg
xchg
mov
cmp
mov
or
xchg
das
mov
sbb
fs
fmul
jne
sub
mov
leave
sub
lock
das
ja
in
mov
mov
mov
mov
ror
stos
xchg
xchg
iret
addr16
out
dec
test
inc
imul
ret
push
inc
push
push
xor
or
xchg
pusha
add
clc
cmp
or
ret
push
jle
inc
sbb
cmp
push
cs
ins
movs
fdiv
cwde
fwait
jmp
xor
adc
pop
fisub
push
mov
fwait
aam
sbb
aas
nop
dec
nop
push
test
xchg
push
inc
call
pop
int3
in
jns
sbb
lds
test
sbb
mov
out
add
rol
test
aaa
mov
xlat
loopne
pop
test
outs
in
aaa
movs
push
fsubr
in
mov
nop
imul
(bad)
addr16
pop
cmp
inc
cwde
sbb
call
xchg
pop
aad
lock
mov
sbb
jne
sbb
adc
cdq
mov
mov
mov
dec
mov
js
xchg
cld
mov
sti
mov
add
cmp
add
into
(bad)
cmp
cli
dec
or
adc
add
inc
push
pop
ins
inc
retf
add
daa
fistp
jnp
mov
or
pop
bound
ret
das
adc
sar
pop
push
dec
push
inc
push
cmp
sub
inc
fist
aam
or
dec
cmp
xchg
out
push
inc
push
dec
cmp
and
shr
or
dec
pop
inc
cmps
ret
rol
aas
hlt
mov
cmps
add
adc
(bad)
jmp
jb
cmp
xlat
xchg
and
data16
mov
cwde
mov
push
ret
dec
jecxz
and
and
ret
punpcklbw
mov
aam
adc
dec
add
loopne
or
outs
test
jnp
outs
cdq
jecxz
adc
arpl
push
in
pop
adc
enter
mov
mov
or
in
enter
mov
fisttp
sbb
mov
arpl
pop
inc
hlt
or
ror
and
pop
loopne
push
test
ror
xor
outs
fwait
push
je
inc
pop
mov
(bad)
dec
push
loopne
fcomp
cmp
xchg
inc
cld
push
mov
mov
mov
imul
sub
jno
push
test
out
cmp
and
and
pop
retf
stc
and
cmp
daa
ror
movs
rcl
pop
cmps
sbb
sub
xor
jge
mov
xchg
pop
rol
sbb
dec
sub
push
pop
ror
dec
and
jo
fild
lock
hlt
js
push
outs
not
add
fisub
pop
pop
and
inc
push
pop
xlat
fs
das
add
shr
das
or
push
sbb
fld
fcomp
xchg
shl
fmul
jmp
ret
push
dec
add
inc
loopne
mov
and
add
xor
dec
mov
adc
std
outs
adc
mov
inc
outs
or
dec
ret
shr
mov
and
push
mov
xlat
loop
lods
cmp
inc
les
xchg
cmp
pop
add
imul
push
jmp
add
add
adc
fnstcw
adc
or
and
adc
mov
test
enter
sub
jmp
nop
jecxz
sub
pusha
xchg
arpl
loopne
or
das
outs
push
pop
push
jo
neg
or
push
shl
in
push
test
popa
xlat
mov
cmp
push
sahf
xor
xor
xor
imul
or
icebp
dec
inc
dec
arpl
adc
(bad)
in
cmp
xchg
ret
mov
sbb
ret
xchg
aam
inc
sub
in
loope
call
jge
sbb
imul
fcom
test
loop
stc
pushf
jae
ds
and
pop
sti
sbb
push
test
aaa
inc
test
dec
sub
movs
loopne
jle
cmp
es
mov
es
es
(bad)
cld
sub
imul
adc
sub
outs
cmp
lahf
inc
enter
xor
pop
push
sub
sub
or
push
test
fs
and
lock
das
or
and
cmp
data16
mov
and
push
shr
push
add
(bad)
sub
pop
pop
xchg
shl
enter
pop
rol
sbb
mov
mov
lea
nop
xchg
adc
and
sub
xor
dec
xor
in
jg
nop
push
dec
(bad)
add
inc
mov
jo
push
inc
or
jo
inc
jae
inc
mov
inc
xlat
adc
neg
cmp
push
push
or
imul
pop
and
pop
imul
loope
and
shl
stos
and
push
cdq
adc
pop
sub
(bad)
sub
cmp
inc
call
xchg
ins
mov
in
jl
pop
js
addr16
pop
sti
lds
or
fdivr
mov
out
pop
nop
adc
adc
xor
adc
test
les
sub
jge
jge
callw
jmp
push
pop
iret
pop
inc
add
push
xchg
adc
pop
mov
in
dec
push
ins
push
sti
and
sti
dec
add
or
out
and
jo
iret
jbe
xchg
sbb
sbb
pop
lock
mov
cmp
sbb
jo
and
sub
mov
(bad)
ror
and
ja
or
add
popa
dec
add
cmp
sar
pop
or
inc
data16
adc
or
gs
(bad)
loope
outs
sub
sti
inc
pop
inc
or
adc
sub
xor
inc
dec
inc
or
xor
adc
adc
and
pop
aad
hlt
fdivr
cld
mov
in
or
push
dec
outs
xor
add
mov
test
inc
sbb
cli
mov
pop
push
lahf
gs
and
push
add
add
mov
push
jb
jns
adc
adc
and
dec
inc
add
jl
sub
ds
dec
or
mov
aas
or
jp
push
dec
inc
sbb
push
fmul
pop
add
jbe
push
in
loopne
ret
retf
mov
ds
pop
xor
dec
dec
ret
in
mov
add
inc
ss
cmp
stos
retf
sub
pusha
xor
(bad)
(bad)
aad
icebp
or
cmps
mov
ror
movs
inc
jp
outs
add
cmp
loop
jno
aad
cmp
aaa
jg
cmp
dec
push
cmp
popf
pop
or
clc
data16
jl
fistp
inc
jne
fld
fcomp
inc
mov
push
enter
dec
adc
fist
inc
pusha
push
dec
xor
cmps
pop
pop
jge
jge
mov
inc
shl
xor
adc
dec
inc
sub
adc
adc
adc
or
xor
mov
or
cmp
push
xor
and
push
jo
sbb
xor
and
mov
pop
cli
mov
mov
jle
mov
jmp
addr16
xor
cmp
xor
inc
inc
sbb
scas
mov
push
xor
lock
xor
popf
sub
mov
fistp
nop
push
add
mov
sbb
jl
in
ins
sbb
in
lods
loope
or
cmp
gs
or
bound
inc
inc
mov
aam
popa
aaa
add
daa
outs
and
jno
jl
inc
dec
aam
sub
adc
(bad)
adc
daa
xor
out
jle
pop
push
jb
clc
jge
mov
icebp
sub
jmp
jne
stos
adc
loopne
nop
nop
adc
and
das
cdq
arpl
jmp
add
and
pop
jno
loopne
or
sub
daa
mov
xchg
daa
xchg
ins
pusha
dec
xor
pop
xchg
adc
aad
sub
popa
xchg
addr16
fwait
out
dec
dec
aas
xor
pop
aaa
cmp
rol
adc
rcr
ret
fadd
sti
xchg
jg
sbb
push
and
cmp
je
add
mov
rcr
dec
test
pop
cwde
mov
mov
push
add
lahf
int3
fdiv
push
or
inc
in
loope
pop
xor
das
in
jg
and
cmp
hlt
jg
test
push
mov
lahf
sbb
push
mov
arpl
inc
xor
push
icebp
mov
les
inc
inc
jecxz
push
mov
cmp
sahf
push
xchg
adc
hlt
loopne
push
(bad)
jns
add
cld
sub
jb
movs
cmp
leave
or
icebp
jnp
les
(bad)
sub
rcr
jle
push
dec
mov
test
test
sahf
fcomp
mov
push
mov
push
(bad)
adc
dec
ror
fs
call
and
mov
aaa
lods
out
int3
push
or
rcl
mov
xlat
mov
pop
or
and
pop
sub
sbb
call
sbb
sbb
sbb
ret
inc
in
sbb
xchg
pop
pop
cmp
dec
ins
movs
xor
mov
sub
stc
out
add
pop
dec
pop
and
pop
sbb
jle
out
sbb
jne
inc
lds
push
enter
sub
(bad)
cmp
icebp
push
xor
dec
test
push
adc
xor
loopne
dec
pop
das
fnstenv
add
pop
pop
adc
mov
jge
pop
jp
rol
inc
sti
dec
pop
enter
ficomp
sub
add
mov
xchg
not
loopne
xchg
ja
add
xor
sar
jl
mov
test
sub
adc
and
sbb
xor
mov
add
or
addr16
adc
dec
inc
dec
push
push
add
dec
sub
rdmsr
leave
cmp
iret
aaa
ins
test
push
(bad)
push
clc
mov
add
je
in
mov
dec
or
int3
xor
adc
mov
int
cs
es
adc
ins
and
stos
sub
add
adc
jge
sub
jge
scas
xor
aas
mov
jbe
add
cmp
dec
mov
cli
rcr
jmp
cmp
mov
jl
add
xor
adc
jne
add
push
mov
fwait
sub
loop
test
or
test
cli
int3
(bad)
jb
mov
outs
mov
sub
in
xor
shr
and
cmp
jae
sub
push
jno
jmp
daa
add
fcom
add
(bad)
pusha
jbe
or
sub
cli
sbb
sbb
es
dec
jb
leave
and
jle
les
aad
sar
sbb
adc
jo
mov
pushf
jmp
jne
and
adc
nop
jbe
sub
add
je
or
jmp
and
jmp
inc
aas
cmps
cmp
sub
mov
enter
add
test
or
dec
mov
inc
push
(bad)
cmp
jae
jae
je
mov
adc
sub
out
ret
jl
and
pop
sub
out
add
add
sbb
jo
ins
add
add
jns
push
outs
sbb
add
mov
cdq
nop
sbb
push
cwde
rcl
data16
jle
xchg
and
das
adc
idiv
jne
cmp
cli
ja
adc
adc
jg
or
xor
jne
cmp
jb
or
call
pop
add
clc
xchg
xor
clc
shr
repz
movs
lods
dec
stos
sahf
dec
sbb
jl
outs
imul
test
popa
in
push
out
call
outs
push
add
mov
cmps
jecxz
sti
add
lea
sub
xchg
mov
and
mov
arpl
push
mov
mov
shr
mov
retf
and
test
mov
pop
fs
or
or
inc
repnz
inc
mov
adc
jl
fs
cld
push
pushf
mov
call
jb
pop
lahf
aaa
xchg
jmp
mov
pop
ret
ins
mov
pop
js
iret
movs
pusha
jecxz
cmc
mov
or
das
cmps
jo
xor
mov
(bad)
cdq
adc
addr16
cmp
(bad)
mov
pop
test
mov
das
sbb
pop
push
dec
test
aad
add
xchg
mov
add
lds
aas
or
pop
push
cmp
add
xchg
jmp
aad
loope
clc
fld
stos
mov
add
sbb
xlat
nop
sbb
in
lea
clc
mov
xlat
adc
leave
int
xlat
cmps
mov
sbb
jg
pop
jb
xlat
or
cmp
dec
outs
(bad)
cmp
cs
jl
lahf
in
outs
jl
sbb
jo
push
in
in
retf
shl
sbb
add
sbb
nop
bound
xchg
or
push
add
cmp
jns
ret
arpl
and
mov
fs
xchg
push
push
inc
push
adc
xor
adc
inc
cdq
in
dec
cmp
add
pop
sub
xor
or
(bad)
xchg
daa
daa
popf
pop
mov
gs
daa
daa
daa
addr16
daa
daa
imul
daa
daa
daa
outs
push
push
push
and
cmp
push
inc
ror
enter
push
enter
outs
sub
nop
sub
pop
nop
or
nop
rol
mov
jle
mov
jp
ins
pop
inc
clc
dec
loope
ja
retf
add
pop
clc
jp
pushf
nop
push
or
xchg
scas
sub
pop
inc
pop
and
or
dec
dec
xor
cmp
sub
cli
adc
adc
shr
test
xchg
xchg
rol
sub
mov
das
(bad)
sub
inc
pop
mov
fst
or
dec
mov
add
xor
out
cs
push
cmp
cmp
mov
push
cmp
nop
dec
dec
push
push
cmp
nop
inc
pop
pop
fs
inc
push
pusha
ins
push
je
js
xchg
out
pop
jl
add
mov
nop
xchg
cwde
xchg
enter
test
jb
and
in
nop
mov
adc
daa
call
push
cmp
jl
xchg
mov
adc
adc
pusha
xchg
fcom
inc
push
dec
retf
cs
mov
or
dec
ret
fisubr
pop
mov
addr16
in
xchg
rcl
sbb
push
ins
sub
xlat
or
add
test
xchg
stos
inc
loope
push
dec
gs
mov
dec
cmp
add
adc
adc
sub
mov
(bad)
sbb
movaps
xchg
or
les
outs
mov
push
sar
sbb
es
jmp
add
adc
xchg
xchg
adc
xor
data16
sub
inc
cs
xor
xor
xchg
or
xchg
cmp
cmp
cmp
xor
and
cmps
sub
xchg
xor
dec
int
push
mov
shr
pop
pusha
adc
pop
xchg
ret
ss
call
and
stc
ja
mov
lods
sbb
mov
daa
mov
inc
movs
adc
mov
sub
sub
adc
pop
pop
adc
mov
xor
clc
retf
and
fs
jle
test
push
push
pop
maxps
and
and
cmps
xlat
pop
dec
scas
out
xchg
xor
dec
lods
ret
xchg
aaa
inc
enter
xor
sub
dec
sub
or
and
sbb
add
test
sbb
(bad)
rcr
aas
push
lea
fs
and
mov
push
adc
jae
enter
inc
add
xchg
test
movs
pushf
add
lds
aas
imul
and
cdq
push
or
and
enter
stos
sbb
and
cmp
out
cld
pop
adc
out
add
sub
stc
mov
inc
pop
fiadd
push
mov
xor
inc
xchg
sub
cdq
add
and
mov
and
sbb
ins
sub
push
pop
mov
push
rcl
xchg
call
adc
mov
mov
inc
mov
shl
not
movs
sbb
psubusw
mov
dec
and
and
xor
shl
adc
inc
stos
add
nop
push
ds
in
int3
mov
test
mov
adc
idiv
mov
pop
pop
aam
adc
mov
jmp
popf
mov
and
sub
inc
jb
mov
lods
jmp
and
shl
sub
mov
push
cmc
xchg
(bad)
callw
or
sub
scas
or
push
add
or
popa
loop
cmps
(bad)
(bad)
daa
add
mov
push
or
jae
adc
fcom
jb
and
jmp
rol
cmp
xor
push
cwde
je
mov
ret
iret
lods
pop
and
add
and
mov
or
ins
js
sub
mov
xchg
sbb
pop
xor
inc
xlat
mov
sbb
call
cmps
movs
in
mov
jp
xchg
and
mov
jno
(bad)
je
pop
fwait
test
push
rol
sbb
add
jo
test
jo
int3
mov
int3
fnsetpm(287
push
xchg
mov
ret
ror
push
jbe
push
jg
sub
inc
je
pusha
xor
and
mov
(bad)
dec
and
inc
mov
fcomp
xchg
xchg
push
enter
lahf
or
ins
sahf
popa
add
test
push
pusha
push
imul
cmp
xor
enter
mov
clc
aaa
pop
dec
pusha
inc
inc
sbb
xor
ins
outs
shr
xor
pop
mov
mov
loope
push
inc
fidiv
push
adc
pusha
adc
mov
sub
bound
out
add
dec
daa
loopne
xchg
in
cwde
mov
enter
mov
mov
push
add
aad
aam
aam
sbb
shr
aad
in
add
nop
cld
loopne
push
loopne
jg
imul
ror
cmp
cdq
lods
and
inc
push
clc
mov
cmp
repnz
enter
add
and
sub
push
adc
or
push
inc
sbb
ss
and
mov
sbb
sbb
in
nop
in
in
or
and
sbb
and
dec
sub
xchg
inc
inc
ins
xor
xor
cmp
enter
cmp
retf
inc
sbb
jb
sbb
xor
and
sbb
ss
push
inc
ins
and
inc
mov
pop
test
nop
xchg
inc
fs
fsub
ins
enter
adc
jo
mov
jb
inc
js
enter
jl
sbb
enter
mov
and
sbb
in
nop
add
xchg
and
cmp
mov
fs
mov
sbb
lods
enter
enter
add
mov
and
and
arpl
sbb
jb
nop
int3
mov
arpl
xchg
shl
aam
jb
nop
in
fcom
fsub
and
xor
enter
xor
jo
bound
pop
push
xor
mov
and
fsubr
test
in
lock
hlt
(bad)
inc
data16
and
inc
inc
cld
jb
repnz
add
mov
sbb
mov
lock
fmul
mov
mov
rol
xor
ss
in
fs
push
push
sbb
ins
mov
retf
inc
call
mov
or
xor
cmp
enter
inc
pop
cs
dec
jo
xor
les
inc
enter
sbb
fs
shl
retf
aam
and
mov
rol
and
fs
xchg
fdivr
push
mov
xchg
dec
mov
xchg
inc
inc
push
push
cwde
push
cmp
lods
pop
rcr
sbb
pusha
call
fs
jl
sbb
push
xchg
dec
add
leave
mov
add
sub
jbe
ins
or
mov
nop
or
xor
and
cwde
jmp
mov
add
lods
cmp
and
push
mov
inc
push
sbb
cwde
fs
xchg
mov
push
sbb
(bad)
hlt
enter
cmp
adc
lods
stos
and
inc
arpl
sbb
inc
js
and
xchg
sar
xchg
sbb
fdivr
xchg
arpl
(bad)
gs
and
or
in
cld
int3
sbb
call
cmp
pop
xor
enter
cwde
and
ss
arpl
aam
mov
and
inc
add
add
sbb
jne
add
nop
out
cmp
fmul
and
mov
loop
fmul
nop
fst
and
mov
sbb
in
movs
call
inc
hlt
fsub
push
sbb
fs
xor
sbb
(bad)
xor
sbb
idiv
and
inc
inc
push
dec
fs
cmp
in
js
mov
enter
aaa
and
mov
sbb
jb
les
and
inc
mov
add
fs
ficomp
and
xor
and
dec
sub
and
inc
enter
xor
sbb
jb
mov
xchg
xchg
jo
xchg
sbb
and
xor
dec
and
jb
enter
js
pop
push
sbb
adc
ins
mov
adc
inc
push
sbb
sbb
jb
nop
xchg
sbb
and
and
sub
enter
xor
loope
xor
ss
inc
inc
pushf
push
and
pop
int3
dec
mov
fadd
in
push
jne
into
cmps
fnstsw
pop
sbb
pusha
gs
loop
out
test
stos
and
cdq
sbb
jl
add
xchg
and
nop
inc
inc
mov
test
mov
xor
adc
cwde
xor
and
(bad)
ss
inc
mov
enter
test
inc
push
sbb
lods
mov
xchg
inc
mov
mov
or
mov
and
cmp
and
pusha
xchg
enter
fs
enter
loopne
nop
xchg
inc
inc
and
cmp
pop
jl
xchg
inc
inc
push
sub
les
sbb
nop
sub
jb
enter
jo
xchg
jb
enter
lods
mov
sbb
and
and
jo
enter
(bad)
repnz
retf
arpl
mov
cmp
xchg
and
inc
mov
inc
mov
sub
xor
xchg
inc
xor
jecxz
xchg
inc
arpl
(bad)
retfw
inc
inc
inc
push
and
xchg
dec
pusha
dec
js
push
sbb
push
nop
push
movs
in
xchg
inc
pop
mov
fs
pusha
in
enter
cld
push
xor
ins
xor
into
and
xchg
jbe
adc
or
dec
and
add
nop
xchg
or
push
jb
in
nop
jl
and
mov
enter
mov
inc
push
cmp
add
mov
inc
mov
cmp
pop
enter
inc
je
mov
cmp
mov
inc
push
fmul
fdivr
fs
loopne
hlt
in
and
and
jb
enter
push
and
clc
test
enter
add
mov
enter
or
out
push
sbb
adc
adc
in
xchg
inc
sbb
push
sbb
fs
dec
mov
sbb
sbb
fs
and
inc
push
xor
xor
sbb
data16
cmp
cmp
xchg
inc
inc
xor
sbb
fs
fs
adc
push
cmp
mov
int3
pop
inc
inc
push
sbb
pop
cld
xor
enter
jmp
mov
pop
ins
je
enter
mov
push
xor
cmp
repnz
inc
push
ror
les
jo
and
popf
inc
and
enter
pop
shl
cmp
nop
fmul
jb
enter
enter
sbb
loopne
cld
inc
call
sbb
and
xor
jb
in
lock
push
hlt
push
clc
test
mov
add
inc
push
test
or
and
or
inc
push
sbb
adc
pop
in
xchg
inc
sbb
sbb
fs
and
les
fcomp
fs
hlt
xor
in
enter
xor
cmp
jb
inc
cmp
inc
and
xchg
enter
dec
shl
mov
loopne
cld
sbb
enter
out
pop
inc
inc
push
sbb
fs
xchg
sub
push
sbb
ins
mov
int3
in
xchg
inc
je
js
sbb
adc
lds
xor
pushf
or
inc
mov
nop
js
mov
inc
xchg
nop
test
leave
mov
shl
in
clc
test
fadd
sub
xor
jbe
inc
inc
and
mov
enter
sar
fmul
lock
nop
xchg
popa
pop
or
and
sub
cmp
push
fdiv
inc
push
fcomp
nop
xchg
arpl
in
call
cld
xchg
sbb
and
and
xor
enter
mov
xchg
jae
enter
cwde
pushf
movs
adc
repz
fldenv
sbb
test
lods
and
xchg
enter
mov
sbb
aam
lock
enter
hlt
enter
sbb
int3
inc
fs
xchg
shl
add
cmp
mov
xchg
inc
loopne
in
sbb
fs
call
enter
lock
mov
jb
js
nop
in
and
sbb
jb
rol
or
test
cmp
pusha
adc
xchg
inc
inc
push
sbb
nop
mov
inc
push
sbb
sub
div
jb
enter
dec
and
cmp
pushf
inc
xchg
dec
in
and
lock
or
inc
push
sbb
push
sub
dec
in
xchg
inc
pop
push
mov
fs
xchg
inc
inc
shr
cmp
clc
jo
stc
enter
je
js
xor
pusha
jl
and
xchg
enter
mov
xchg
inc
mov
adc
xchg
cmp
xor
push
sbb
test
xchg
movs
mov
sbb
lods
fdiv
inc
mov
sti
mov
inc
mov
and
test
movs
mov
jb
(bad)
int3
call
ror
aam
sbb
fs
dec
fcom
loopne
sbb
fs
pushf
call
push
in
in
sbb
xor
add
hlt
and
and
xchg
mov
add
jb
mov
in
arpl
mov
jb
adc
and
sub
and
xchg
sbb
jb
fs
and
and
dec
jo
enter
xor
mov
add
sub
xor
xor
ins
cmp
test
in
and
in
and
add
mov
inc
pop
arpl
add
xchg
cmp
fs
ret
adc
dec
or
sbb
xor
mov
xchg
inc
push
cdq
sbb
rcl
jmp
xlat
dec
fidivr
rcr
ins
jbe
(bad)
enter
inc
and
or
add
or
fs
xchg
adc
inc
inc
push
mov
hlt
js
nop
xchg
inc
clc
cwde
cld
xchg
pop
cmp
leave
and
mov
mov
add
enter
mov
xor
dec
(bad)
enter
je
mov
jmp
xor
movs
movs
test
and
rcl
sub
enter
mov
pop
enter
enter
aam
mov
jb
mov
sbb
sbb
int3
stos
aaa
and
enter
cld
mov
nop
dec
push
and
sub
inc
fnstenv
or
sub
(bad)
mov
xchg
pop
pop
mov
adc
pop
arpl
gs
aaa
push
movs
pop
add
or
xchg
mov
outs
gs
daa
frstor
push
xchg
or
mov
daa
sbb
xor
inc
and
aaa
scas
sbb
lahf
mov
push
or
pop
sub
arpl
ja
(bad)
jp
inc
aas
sbb
lds
enter
dec
arpl
shl
xchg
ins
mov
pop
inc
outs
and
aas
fldcw
xchg
adc
or
popa
ins
enter
mov
aam
dec
inc
je
cmps
cmps
movs
cli
inc
sbb
addr16
stc
mov
jbe
inc
pop
jae
jg
and
aam
add
addr16
bound
sbb
inc
lock
dec
push
mov
bound
rep
sti
xor
jb
pop
sbb
mov
lahf
lds
sti
pop
imul
pop
add
fs
or
adc
and
and
mov
into
adc
ja
mov
sbb
mov
ins
jmp
daa
ja
push
pop
in
and
jb
adc
mov
mov
call
jno
shr
or
mov
ins
xor
pop
popa
pop
das
adc
(bad)
fnclex
fsub
mov
add
aaa
lahf
xor
xor
mov
and
pop
leave
pop
inc
out
push
dec
push
jbe
das
adc
aaa
dec
pop
xchg
ss
aaa
mov
or
aas
push
mov
xor
cmp
and
xchg
scas
inc
add
inc
push
aas
scas
jmp
and
iret
aas
mov
push
aas
neg
imul
jb
cmp
js
mov
call
(bad)
and
dec
jae
mov
add
pop
ins
imul
xor
sbb
push
inc
or
call
ja
cmps
aas
jo
test
ja
mov
jl
rcr
das
push
add
jg
pcmpgtb
imul
dec
inc
(bad)
in
or
das
imul
jns
daa
pop
stos
gs
rcl
into
hlt
addr16
arpl
das
push
dec
data16
adc
imul
xchg
pop
pusha
adc
addr16
pushf
add
inc
aas
add
sar
dec
dec
dec
dec
push
push
dec
aas
in
and
adc
push
push
dec
push
inc
repnz
dec
mov
aaa
adc
aaa
sbb
jno
mov
js
(bad)
sbb
mov
sub
inc
jae
lods
fcom
dec
and
dec
pop
arpl
adc
ins
(bad)
fistp
or
inc
or
out
adc
ja
inc
push
inc
xor
jge
aaa
push
ret
push
in
bound
fcom
cmps
outs
das
xchg
or
and
das
pop
push
popa
or
mov
(bad)
and
sub
push
xor
fisttp
pop
ins
data16
sbb
das
add
xor
add
cld
jne
call
je
out
test
jbe
jg
aaa
jne
inc
nop
or
inc
lahf
inc
mov
inc
dec
inc
ficom
jae
daa
jo
jne
sbb
add
aas
aaa
or
(bad)
repz
lods
jg
fwait
daa
adc
or
aam
jmp
adc
inc
xor
push
or
outs
movs
(bad)
bound
xchg
mov
in
inc
daa
(bad)
bound
outs
arpl
cmp
mov
push
mov
iret
dec
mov
fimul
aaa
sub
xor
(bad)
mov
or
inc
inc
daa
sbb
dec
or
mov
xor
rol
enter
lods
add
scas
push
mov
xchg
or
das
fmul
add
push
pop
dec
push
dec
inc
push
movs
push
sbb
shr
aad
jo
dec
bound
aaa
mov
xlat
cmps
inc
inc
jb
inc
push
pop
push
dec
test
das
cmp
mov
xchg
xor
and
(bad)
mov
or
shl
cmps
arpl
cmp
mov
pusha
cmp
outs
das
in
push
mov
imul
dec
scas
jne
arpl
jb
adc
stos
mov
mov
aaa
test
dec
adc
aaa
adc
daa
pop
dec
(bad)
ja
data16
mov
aas
pop
(bad)
jae
imul
mov
or
pop
rcl
rol
sbb
sbb
bound
push
dec
test
fcmovnbe
xor
aas
xor
xchg
es
xor
xchg
pop
pop
pop
or
inc
mov
ror
rol
les
jae
outs
jo
push
in
shr
dec
and
daa
pushf
outs
push
sub
mov
outs
adc
das
lods
loopne
inc
xchg
pop
inc
jp
add
push
xchg
ret
adc
loopne
adc
mov
mov
dec
fcmovnu
dec
movs
lahf
push
inc
dec
aad
pop
push
inc
in
aas
or
xor
daa
push
xor
icebp
mov
daa
or
and
not
inc
cld
ins
test
loopne
fidiv
(bad)
cs
aaa
pusha
ins
mov
inc
add
cmps
cmps
mov
inc
or
out
daa
call
es
ins
lea
addr16
call
xchg
jno
or
mov
or
test
pop
shr
adc
or
in
daa
inc
mov
push
xor
pop
sbb
pusha
dec
daa
fwait
sbb
test
or
outs
aaa
daa
mov
daa
or
inc
aas
xlat
or
scas
aad
ins
push
das
pop
xchg
popf
pop
sbb
rcl
aaa
adc
pop
div
mov
pop
fadd
popa
enter
mov
cmp
stos
adc
ss
ins
das
sbb
inc
mov
add
push
aaa
in
pop
cmps
sbb
push
inc
dec
adc
movs
or
addr16
jmp
inc
jbe
xor
dec
or
in
stos
adc
mov
mov
mov
push
call
xlat
mov
das
cdq
fild
sahf
icebp
mov
je
rcr
ja
loope
js
int3
ja
jae
push
mov
inc
mov
push
dec
inc
jecxz
fistp
(bad)
je
mov
iret
call
cli
mov
das
sbb
sbb
fsubr
mov
imul
push
outs
push
clc
push
push
inc
xor
fsub
div
dec
daa
xlat
not
lods
inc
aaa
adc
push
add
sbb
sub
dec
fcomp
lods
test
aas
adc
add
(bad)
pop
dec
mov
sar
inc
inc
adc
adc
(bad)
div
loope
ins
or
aas
inc
shl
sbb
sbb
mov
pop
out
pusha
or
mov
pop
pop
inc
aas
and
or
add
enter
mov
out
mov
add
inc
push
pop
pop
add
inc
retf
adc
ins
shl
push
ss
mov
xor
daa
xor
xor
mov
dec
cmps
daa
xor
mov
add
pop
arpl
sbb
jae
addr16
addr16
cwde
fst
push
ins
arpl
in
sub
xor
push
mov
es
pop
jnp
imul
ja
imul
dec
mov
ins
adc
ins
daa
and
pop
sub
daa
or
or
mov
bound
das
xchg
xor
xchg
ss
or
inc
sahf
ja
das
cmp
adc
mov
jb
xor
or
mov
daa
pop
xor
ja
push
rcl
out
sbb
push
das
loope
cwde
dec
ins
pop
outs
cs
mov
or
xor
sbb
daa
outs
sub
das
push
das
or
cmp
js
daa
bound
daa
mov
or
movs
push
and
xor
lods
das
mov
punpckldq
mov
loop
out
cmp
das
cmp
xchg
das
scas
push
mov
aaa
mov
outs
jnp
adc
or
lahf
das
pop
xor
arpl
add
push
xchg
das
cmp
sub
push
shl
mul
and
aaa
mov
mov
das
mov
add
mov
or
(bad)
das
(bad)
fmul
and
(bad)
or
addr16
ins
pop
add
das
test
sbb
test
lods
pop
in
cmps
inc
daa
mov
int
fbld
adc
lods
inc
cmp
pop
dec
inc
fmul
lods
arpl
movs
inc
pop
xchg
(bad)
push
push
mov
jnp
call
or
xchg
fisubr
adc
cdq
ins
fnstenv
adc
xchg
pop
inc
gs
pop
add
in
sub
xlat
shl
adc
test
dec
or
imul
or
push
div
mul
jnp
dec
getsec
aad
adc
push
loopne
mov
test
cmp
fwait
add
aaa
outs
adc
mov
iret
sub
mov
aas
jnp
mov
mov
das
pop
int
mov
push
gs
das
or
vmaxss
push
fwait
sub
adc
mov
and
das
cwde
cmp
bound
xlat
sub
push
fwait
gs
das
(bad)
bound
gs
(bad)
das
mov
sub
outs
bound
movs
mov
aas
or
cwde
aaa
sbb
pop
pop
ins
les
in
dec
dec
sbb
(bad)
mov
leave
iret
xchg
dec
leave
not
pop
or
rcl
mov
lock
add
sti
adc
adc
cdq
ins
push
das
push
jb
sti
adc
repz
enter
pop
scas
adc
push
ins
in
inc
mov
push
test
ss
cmps
comiss
cli
in
cmps
addr16
inc
or
adc
sbb
pop
in
and
daa
sahf
(bad)
and
cld
daa
adc
xor
les
ins
cs
xor
or
and
mov
jl
adc
call
jbe
test
aas
adc
xchg
push
getsec
pop
adc
pop
cmc
pop
add
sbb
cmps
cmp
push
sbb
sbb
xor
push
mov
push
repnz
add
sbb
push
inc
inc
jae
(bad)
nop
xchg
adc
scas
xchg
fiadd
xor
xor
out
fist
fs
and
mov
ins
jne
ja
das
add
fisubr
xchg
add
adc
test
or
ror
aas
or
imul
daa
adc
xor
inc
pop
push
cmps
jae
mov
das
or
push
mov
pusha
sub
retf
xor
xor
addr16
mov
or
push
fwait
adc
add
addr16
fiadd
les
push
aas
addr16
sub
xlat
mov
mov
pop
aaa
das
adc
fisubr
out
outs
(bad)
fiadd
xlat
sbb
push
rcr
sbb
fs
fsub
inc
ins
lahf
fcmovu
pop
xchg
dec
(bad)
jae
jbe
push
xlat
ins
jo
popa
jne
ins
or
add
outs
or
push
sub
dec
int
xor
or
fnstcw
outs
push
pop
xchg
adc
inc
xor
inc
push
inc
aas
cmp
addr16
dec
fs
sbb
fbstp
rol
xor
add
dec
bound
cdq
mov
js
dec
inc
xor
adc
cmp
iret
aaa
jbe
mov
add
stc
out
or
loop
sub
pop
in
push
xchg
arpl
aad
cs
push
xor
das
or
mov
test
jmp
leave
repnz
xchg
aas
adc
aaa
jecxz
add
aaa
push
sbb
fld
or
adc
inc
retf
xor
bound
shl
dec
mov
int3
sub
aaa
push
sbb
lods
in
shl
mov
in
or
outs
aas
push
andnps
mov
cmp
ficom
test
push
aaa
fisttp
outs
out
pop
ins
inc
pop
aaa
pop
sub
dec
sbb
dec
pop
leave
adc
aaa
shr
cmp
fs
das
inc
mov
fwait
es
adc
add
dec
or
xchg
xchg
loope
adc
push
and
adc
fdivr
addr16
mov
adc
dec
aas
addr16
imul
sbb
movs
inc
jmp
xchg
push
push
aaa
or
aas
imul
aas
movq
popf
dec
push
jb
adc
xchg
xchg
dec
mov
dec
call
cmp
stos
ja
ja
and
outs
gs
jbe
outs
sbb
jnp
ss
pop
jb
inc
daa
push
mov
add
das
sub
sub
pop
aas
cmp
aaa
dec
sub
mov
push
rcl
cmp
aas
outs
sbb
xchg
pusha
aas
jge
push
lods
popa
mov
inc
das
inc
rol
xor
mov
push
enter
and
in
push
enter
sbb
xor
mov
xlat
push
movs
or
mov
sbb
pop
ins
les
and
das
fild
and
or
das
in
push
nop
or
sahf
adc
push
inc
dec
pop
outs
bound
ins
mov
push
xor
scas
daa
ror
ins
xor
jae
xlat
inc
sbb
dec
xor
push
inc
inc
ret
nop
dec
cmps
mov
aaa
addr16
adc
sub
dec
mov
es
push
inc
fisttp
aaa
dec
adc
push
(bad)
cwde
js
xor
push
xchg
inc
or
pop
xor
int
ucomiss
xchg
mov
push
lods
mov
xchg
push
push
jo
sub
and
adc
xchg
or
pop
mov
xor
out
aas
mov
jno
and
push
inc
dec
push
xor
push
(bad)
jae
mov
out
cmp
lgs
or
cmp
scas
sbb
not
add
retf
ficom
fistp
xlat
pop
daa
ins
xor
push
iret
pop
xor
xchg
aas
sub
or
or
push
outs
xchg
add
lods
inc
das
lock
adc
jns
xchg
or
clc
ins
in
fs
add
enter
adc
sbb
cdq
sbb
sub
sbb
sbb
xor
cmp
sbb
sbb
dec
sti
dec
xor
xor
push
push
pop
pop
xor
xor
fs
xor
jo
js
xor
xor
add
nop
xchg
cwde
pushf
xor
xor
mov
xor
xor
xor
xor
(bad)
enter
xor
rcl
fcomp
jb
xor
loopne
call
sub
in
sub
or
xchg
and
scas
add
push
and
and
and
and
push
mov
mov
fisttp
mov
pop
mov
push
mov
pusha
mov
fs
add
nop
xchg
mov
mov
mov
mov
js
mov
mov
call
in
lock
clc
mov
cld
add
mov
or
in
in
hlt
sub
xor
clc
cld
push
stos
cmps
or
adc
sbb
enter
or
sub
enter
xor
in
enter
dec
inc
lods
xchg
xchg
fxch
dec
and
sub
xchg
xchg
xchg
cmp
mov
retf
xchg
inc
push
mov
fs
and
fisttp
push
inc
inc
inc
adc
sbb
cdq
dec
or
dec
xor
mov
and
mov
mov
fwait
mov
fs
or
fs
jo
js
fs
test
mov
enter
mov
enter
mov
and
xchg
fild
sub
inc
sub
xor
inc
inc
inc
inc
cmp
dec
inc
enter
dec
or
enter
pusha
fs
push
enter
jl
test
enter
mov
enter
movs
enter
test
mov
enter
mov
enter
int3
rcl
enter
fcomp
loopne
enter
call
in
enter
mov
enter
or
adc
enter
sbb
and
mov
mov
inc
mov
push
mov
mov
je
pop
mov
ror
ror
fsub
mov
lock
add
push
add
sbb
sbb
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
jl
or
sbb
mov
sbb
pushf
mov
sbb
lods
mov
mov
mov
sbb
sbb
rcl
fcomp
sbb
sbb
loopne
call
in
lock
clc
sbb
mov
or
sbb
sbb
adc
sbb
sbb
sbb
and
sbb
sbb
sub
xor
sbb
sbb
cmp
inc
dec
sbb
sbb
dec
push
push
pop
sbb
sbb
pop
pusha
fs
ins
jo
js
sbb
sbb
mov
sbb
sbb
sbb
pushf
mov
sbb
lods
mov
mov
mov
sbb
sbb
rcl
fcomp
sbb
sbb
loopne
call
in
lock
clc
xchg
xchg
sbb
cld
add
or
mov
and
enter
retf
in
pop
adc
sbb
mov
sub
outs
fs
cmp
fs
inc
ror
enter
or
sub
test
mov
xchg
cwde
mov
test
mov
mov
rol
int3
mov
fmul
call
mov
sbb
push
and
cmps
inc
or
adc
hlt
or
enter
stos
or
sbb
sbb
les
int3
and
or
xor
enter
jb
xor
adc
sbb
sub
push
fs
sub
shl
inc
adc
pop
dec
enter
cmp
dec
cwde
jne
sub
sub
adc
and
pop
popf
and
sbb
ret
ds
lea
ins
sbb
adc
add
sub
pop
jmp
es
cmp
adc
adc
leave
fdiv
sbb
fst
mov
leave
sbb
hlt
mov
push
mov
inc
pop
fbld
jo
pop
pusha
gs
or
pop
adc
pusha
mov
scas
ss
inc
ficom
cmp
and
(bad)
(bad)
push
daa
adc
mov
movs
pusha
dec
push
pop
xor
data16
pop
test
adc
inc
adc
or
adc
fcom
mov
push
popa
bound
lock
or
retf
add
mov
mov
adc
mov
and
xchg
sub
xor
retf
movs
mov
fwait
jmp
nop
xchg
int3
mov
out
push
sbb
push
push
ja
jbe
add
loopne
adc
retf
dec
mov
cmp
mov
push
mov
pop
idiv
push
icebp
jnp
fld
jo
adc
xchg
dec
in
pushf
shl
lock
test
adc
xchg
adc
sub
popf
(bad)
adc
inc
pop
mov
adc
loopne
lods
je
ss
in
sub
retf
xor
xchg
jo
adc
pop
xchg
popa
mov
(bad)
fcomp
adc
sub
mov
xchg
pop
outs
loopne
sbb
inc
mov
in
add
xor
add
call
sbb
dec
push
in
cmp
inc
nop
dec
push
in
jno
sbb
test
clc
mov
cli
xchg
icebp
pop
shr
or
inc
pop
add
imul
adc
sub
dec
or
cmp
xor
cmc
out
xor
fiadd
push
stc
into
xor
jae
ror
shl
adc
dec
xor
cmps
ins
ret
mov
sbb
(bad)
gs
pushf
jmp
scas
adc
rcr
mov
fwait
mov
inc
mov
pop
and
dec
xchg
adc
and
in
mov
pop
adc
mov
sub
xchg
or
out
sub
or
inc
cmp
movs
add
push
add
sub
aaa
or
jecxz
adc
or
and
xchg
push
inc
arpl
dec
or
rol
jge
add
jmp
imul
je
fistp
add
add
push
inc
(bad)
out
pop
add
loopne
xchg
cwde
push
sysret
pusha
daa
movs
add
ret
out
test
jg
or
sub
nop
adc
das
not
xor
add
lods
add
adc
and
dec
xor
fs
sbb
add
or
test
loope
mul
xchg
xchg
aad
es
push
or
(bad)
pop
push
popf
pop
adc
into
xor
mov
nop
and
and
xor
mov
mov
push
sub
lock
jg
aas
dec
daa
push
pop
mov
and
push
sahf
and
call
push
pop
pop
and
dec
mov
xchg
cmps
mov
sbb
adc
jle
cwde
rcl
dec
lods
sbb
call
inc
rol
mov
dec
les
or
push
fwait
popa
div
inc
sar
push
dec
cdq
add
push
fimul
xchg
dec
sti
lods
sub
inc
adc
xlat
mov
cmp
push
inc
shr
add
aad
add
cwde
sub
pop
out
test
lods
outs
mov
pop
xor
jmp
imul
popa
cs
imul
dec
outs
sbb
pop
inc
xor
in
xor
out
dec
lahf
and
aaa
push
stos
lahf
inc
mov
pop
push
sub
ds
sbb
mov
loope
add
add
and
cwde
or
jl
mov
cmp
inc
and
pop
dec
push
ret
repz
fiadd
dec
and
push
imul
cmp
and
or
push
mov
adc
dec
mov
adc
(bad)
jnp
pop
sub
mov
inc
and
and
pop
into
push
push
inc
and
and
inc
dec
int3
not
aam
add
push
enter
cmp
mov
enter
push
add
rol
dec
pop
scas
fistp
daa
dec
mov
into
xor
sar
dec
int3
push
ror
dec
dec
push
mov
shl
es
push
and
popf
xor
cmp
pop
dec
push
int3
push
shr
and
lods
in
sbb
sub
or
fisttp
push
cwde
adc
sbb
and
jbe
adc
out
dec
fimul
pop
mov
adc
dec
pop
repnz
push
sahf
mov
inc
rcl
push
cmp
das
jb
fisub
mov
inc
xor
sub
sbb
inc
mov
xor
out
nop
cld
ss
sbb
and
jns
xchg
and
cmps
push
mov
ja
loopne
xor
and
sbb
sbb
and
push
jbe
add
push
add
mov
dec
popf
cwde
push
test
out
rol
inc
dec
dec
sti
aam
call
mov
ss
div
jo
inc
mov
add
aaa
xchg
mov
dec
sti
enter
or
or
or
add
xchg
mov
push
adc
add
aaa
call
push
inc
add
inc
xor
aaa
push
dec
mov
push
and
jg
pop
adc
xor
lods
inc
dec
sbb
stos
lods
scas
mov
or
scas
xchg
adc
xchg
adc
(bad)
xchg
push
or
mov
pusha
mov
inc
shl
push
jo
or
nop
pop
rcl
imul
mov
js
pop
sbb
push
mov
sbb
lds
daa
call
add
pusha
cmps
aaa
xchg
mov
daa
dec
xor
sbb
(bad)
fistp
dec
sar
popa
(bad)
or
fistp
adc
fcom
(bad)
sbb
sbb
adc
mov
mov
adc
mov
and
add
stc
fucomi
xlat
lock
jno
pop
xlat
inc
repnz
mov
pop
sub
sub
aam
and
add
(bad)
enter
test
iret
or
xchg
cmp
sub
sub
push
nop
pop
test
iret
cwde
sbb
(bad)
sub
add
sbb
jmp
xor
and
mov
adc
rcr
push
and
fisub
in
mov
add
(bad)
pop
nop
std
push
pop
push
pop
cmps
sar
sub
adc
iret
cmp
adc
icebp
ins
bound
setl
and
mov
xchg
or
cmp
nop
ss
mov
test
retf
aad
xchg
das
cmp
pop
cmp
xlat
sub
cwde
clc
cmp
adc
add
jmp
cmp
retf
pop
data16
inc
add
pop
ins
out
push
mov
dec
mov
xchg
ja
cwde
jge
xchg
popa
inc
inc
jp
mov
add
dec
addr16
inc
and
xchg
addr16
mov
enter
mov
lods
in
call
leave
push
jb
in
js
mov
ds
lods
loopne
sub
dec
in
jl
call
mov
leave
pop
dec
andnps
pushf
sbb
movs
cmp
les
push
mov
pushf
out
xchg
cmp
mov
dec
call
dec
push
push
and
cwde
sub
retf
inc
add
mov
stc
test
jno
adc
pop
mov
xor
and
xor
je
xor
scas
nop
cmp
and
scas
fdivr
mov
shr
or
outs
sbb
pop
lahf
ret
dec
inc
add
pop
ret
sbb
ds
mov
into
leave
aas
ins
and
leave
inc
shl
mov
sbb
popa
sbb
sub
push
sbb
jmp
stos
inc
loope
push
push
xor
sub
pop
cdq
inc
hlt
clc
xor
pusha
ins
inc
aam
fisttp
add
nop
iret
imul
cmp
inc
add
(bad)
icebp
jne
lea
sbb
push
sbb
retf
inc
cmp
jmp
lods
pop
adc
out
test
xor
and
xor
fadd
inc
push
mov
xchg
mov
dec
out
test
je
add
retf
adc
add
pop
movs
mov
jg
cld
inc
jbe
mov
sar
xor
sbb
nop
js
das
dec
enter
mul
mov
mov
mov
ins
js
and
jmp
add
sbb
mov
dec
adc
mov
push
fwait
clc
jo
xchg
call
das
add
add
sbb
xor
inc
dec
jne
inc
sahf
xlat
icebp
or
add
inc
pop
push
mov
mov
sub
xchg
mov
jnp
jmp
mov
sub
inc
or
push
mov
rcl
adc
xor
mov
pop
or
push
inc
adc
(bad)
lds
das
jg
loope
xor
imul
sbb
dec
test
adc
out
test
mov
jbe
or
or
and
imul
push
push
inc
cdq
inc
xchg
ds
aas
add
mov
into
je
jge
or
mov
add
mov
pushf
push
imul
aas
cs
cmp
mov
xchg
jne
cmp
inc
adc
inc
jo
sub
and
adc
fdiv
loop
clc
mov
pop
push
mov
ret
inc
or
bound
lods
call
ins
cwde
adc
je
mov
movs
stos
push
dec
nop
and
add
popf
aaa
dec
sti
mov
mov
in
fiadd
cmps
and
aaa
ja
jmp
adc
mov
bound
pushf
arpl
inc
dec
jae
fs
inc
shl
cmp
aas
and
test
fild
pushf
and
hlt
cmps
cmp
xor
or
nop
lea
inc
das
jno
add
enter
ss
add
jne
add
or
ins
adc
jns
in
stos
pop
enter
cmp
inc
push
xchg
cmp
call
push
cmp
ja
mov
cmp
loop
aas
cmps
daa
push
mov
xchg
rol
rol
or
inc
cmp
sbb
dec
pop
lods
dec
pushf
push
add
test
lods
mov
das
push
inc
xor
push
xor
and
mov
arpl
pop
outs
or
imul
dec
jne
mov
xchg
shr
xchg
ins
inc
(bad)
fist
mov
shld
push
mov
mov
adc
cmps
push
mov
adc
sbb
hlt
dec
and
mov
lahf
or
xor
adc
inc
imul
mov
mov
ret
mov
inc
or
and
scas
ret
xor
jl
add
add
xor
pop
cmp
jge
ja
push
sbb
rol
or
cmp
pusha
or
dec
jmp
pusha
mov
(bad)
loope
fmul
gs
dec
mov
and
pop
imul
imul
ins
dec
popa
mov
push
push
mov
dec
jne
mov
add
test
push
mov
hlt
cmp
pop
lods
arpl
pusha
jmp
sub
mov
ins
inc
nop
pop
or
mov
out
add
daa
mov
and
jo
dec
addr16
test
inc
test
pusha
and
sbb
leave
mov
dec
int
sub
mov
lahf
add
and
adc
xor
add
add
or
cmp
mov
xchg
out
shr
pop
mov
push
jno
adc
inc
pop
inc
xor
mov
jecxz
ds
xlat
mov
(bad)
xor
rcl
out
pop
nop
inc
icebp
scas
or
addr16
popa
icebp
cli
stc
pop
or
aam
setb
out
sbb
int3
stos
mov
jae
inc
mov
adc
adc
cmp
ja
sar
xchg
ins
cli
push
add
push
(bad)
cmp
sbb
sub
adc
ret
nop
inc
push
imul
ss
dec
dec
into
sbb
add
or
aaa
add
fdivr
or
ins
mov
mov
pop
sti
or
inc
adc
jmp
mov
push
cld
and
add
inc
mov
mov
xchg
add
neg
and
mov
in
adc
or
das
add
push
pop
fcomp
dec
pusha
pop
lods
xchg
inc
add
inc
sbb
push
pop
jl
rcl
push
adc
lods
loop
ins
cs
adc
push
inc
push
or
test
sbb
inc
sbb
sbb
push
adc
and
mov
push
out
loopne
sub
shl
nop
mov
nop
dec
mov
xor
aas
pop
jbe
outs
sahf
stos
xchg
mov
leave
xchg
lea
or
popf
push
in
xchg
repnz
nop
inc
or
adc
iret
jae
cmp
or
mov
and
and
sub
add
mov
jle
xor
jne
adc
adc
push
hlt
mov
sub
mov
push
add
xor
push
push
adc
cmps
adc
pop
test
mov
mov
and
inc
outs
add
xor
data16
jnp
(bad)
fwait
popa
mov
pop
nop
dec
and
add
sbb
mov
mov
enter
sbb
xchg
sbb
ds
test
push
pop
int
xchg
xchg
cmps
bound
or
call
fistp
mov
add
fisubr
frstor
pop
iret
cmps
stos
cdq
nop
retf
and
test
mov
adc
fmul
and
mov
add
sbb
popf
scas
pop
pop
fwait
mov
add
pop
and
dec
inc
call
adc
cmp
dec
cmp
or
push
mov
mov
movs
inc
icebp
outs
or
mov
sub
aad
call
nop
mov
js
dec
pop
sub
rol
sbb
xor
push
mov
sub
and
and
push
xor
rol
out
lock
push
push
or
xlat
je
add
or
adc
(bad)
sbb
fild
ja
sub
add
xchg
out
mov
cmp
movs
rcpps
adc
test
or
test
sub
cmp
add
inc
inc
or
rol
popf
adc
dec
push
and
dec
and
inc
or
pushf
add
jne
adc
and
or
cmp
inc
add
out
or
xchg
xlat
retf
push
(bad)
push
adc
ds
inc
dec
(bad)
hlt
mov
xor
push
sti
add
in
lock
add
movs
dec
push
add
movs
daa
or
sbb
cmp
dec
fldenv
cmp
fwait
sub
fnstenv
popf
xchg
mov
cwde
pop
lea
pusha
xchg
call
ss
js
jbe
sahf
jo
rcr
push
pop
imul
inc
retf
xchg
(bad)
loopne
and
inc
xchg
dec
sub
jb
loope
sahf
xchg
adc
loopne
add
pusha
or
cmp
movs
jmp
enter
sub
mov
movs
je
jnp
lea
ds
cs
test
sub
scas
in
retf
clc
sub
mov
mov
jo
push
xchg
mov
nop
ins
add
xor
or
mov
mov
add
sbb
leave
std
dec
jmp
push
mov
add
jle
mov
test
or
adc
xor
ret
xor
and
adc
and
mov
sbb
iret
cwde
and
mov
and
fsub
xor
cdq
loop
jns
and
sub
mov
aad
pop
ret
sbb
lock
cs
mov
add
les
popa
cdq
jbe
loope
add
xor
popa
movs
out
add
sub
pop
cmp
dec
pop
clc
push
inc
add
out
sbb
adc
mov
mov
mulps
lahf
mov
pop
mov
pusha
mov
xor
xlat
add
cmp
sub
das
adc
inc
sbb
clc
dec
movs
scas
dec
in
shr
adc
dec
xor
xor
dec
mov
push
add
or
into
push
dec
fist
and
dec
mov
bound
mov
test
lods
sub
inc
jmp
dec
push
stc
arpl
adc
mov
or
rol
jmp
adc
dec
sub
sub
mov
push
call
mov
mov
add
scas
dec
push
je
les
stos
mov
retf
scas
iret
dec
jae
cmp
daa
fisttp
inc
js
jge
or
pop
(bad)
fcomp
sub
mov
cdq
xchg
fwait
sub
mov
dec
jg
jne
psllw
mov
mov
inc
test
inc
loop
repz
jo
scas
das
dec
xchg
cmp
sbb
mov
loop
cmp
dec
nop
jg
or
and
xor
test
or
ror
xlat
and
aam
inc
cmp
mov
adc
sahf
out
mov
lahf
call
aam
xor
add
or
or
rol
jg
ror
adc
sbb
lea
push
sub
sub
mov
std
push
int
add
push
add
add
add
idiv
adc
test
mov
mov
push
js
push
push
clc
mov
mov
sub
inc
add
or
call
and
push
dec
push
daa
add
repnz
inc
and
jmp
test
mov
nop
fbld
fucomp
cdq
push
and
fistp
rcl
jno
push
and
stc
inc
fcom
cdq
push
jmp
or
dec
enter
daa
push
or
fimul
add
lock
push
nop
(bad)
sbb
adc
in
mov
rcr
sbb
push
adc
adc
pop
adc
stos
fdiv
jo
mov
call
xor
mov
jl
add
in
jecxz
lahf
adc
loop
jmp
push
pop
mov
cmp
cld
xchg
sbb
movs
mov
loope
sbb
loop
dec
sub
dec
outs
push
add
and
inc
xor
pushf
xchg
imul
sbb
push
add
in
sub
cmp
test
sbb
adc
adc
inc
dec
dec
cmp
popa
dec
push
xchg
(bad)
mov
push
inc
xor
inc
inc
inc
add
lahf
dec
aaa
cli
ror
pop
je
test
mov
push
ds
sbb
push
and
sub
movs
inc
inc
movs
xchg
push
xchg
call
sub
shl
pusha
jb
mov
aaa
lahf
sbb
xchg
add
sbb
lock
push
mov
call
jae
and
sahf
out
or
cld
std
sbb
jnp
mov
push
cs
mov
and
ins
and
movs
push
cwde
in
jne
jb
push
dec
cdq
add
fdivr
and
ins
xchg
cmc
or
or
xchg
imul
fstp
movs
pop
xchg
jnp
bound
movs
lds
je
iret
ins
mov
xor
jns
sbb
ror
sbb
lea
mov
lahf
inc
jno
inc
sahf
clc
int3
ins
shr
add
cmc
push
add
add
or
cmp
add
aas
or
lods
xchg
dec
add
mov
mov
add
xchg
jo
mov
mov
add
pop
inc
fiadd
push
adc
or
adc
in
sbb
xor
add
jno
xor
xchg
mov
lods
inc
push
and
daa
cs
sub
movs
in
pop
data16
cmp
sub
xor
push
nop
and
je
test
push
cmp
nop
inc
dec
and
ret
pop
push
jnp
push
aas
sub
jne
xchg
and
pop
or
(bad)
loopne
cmps
bound
push
adc
lea
aaa
outs
adc
inc
sahf
popa
push
and
dec
sub
add
(bad)
and
cmp
mov
js
adc
movs
xor
(bad)
xchg
and
sub
xchg
push
or
add
dec
xchg
pusha
push
mov
mov
push
pusha
dec
push
scas
xor
jae
fistp
ja
rcl
jns
stos
push
retf
iret
ret
(bad)
push
(bad)
jns
pusha
fs
inc
(bad)
add
je
inc
fs
add
call
pop
xchg
inc
push
inc
call
pop
cmp
loopne
bound
sbb
xor
ret
dec
ss
cmp
and
adc
aas
loop
jno
in
mov
push
pop
mov
int
in
mov
dec
in
and
mov
sub
cmp
and
enter
or
enter
aaa
xchg
sahf
cmps
aad
cdq
and
push
movs
push
int
add
push
push
test
clc
sub
add
dec
in
pop
loopne
loopne
xchg
and
mov
and
fdivr
mov
iret
sbb
or
fadd
and
(bad)
(bad)
inc
lods
pop
sub
pop
fcom
mov
inc
sub
adc
add
ja
xor
add
cmp
inc
ror
add
and
mov
mov
into
mov
cmp
cld
xor
not
repnz
sbb
cmps
not
clc
sub
xor
add
lock
or
push
in
in
or
cmp
test
leave
sub
sub
not
cmp
adc
outs
mov
in
pop
test
fldcw
adc
(bad)
sub
sbb
pop
das
jo
imul
add
xchg
fsubr
fdiv
mov
mov
fcomp
jns
call
das
aam
pop
cmps
push
movs
cs
hlt
ror
push
dec
aam
int
xor
sbb
pop
fld
push
arpl
aam
mov
dec
inc
mov
pop
(bad)
push
pop
or
push
and
je
push
push
push
inc
adc
pop
scas
stos
or
nop
mov
sub
add
ret
cmp
or
not
test
jmp
scas
push
cmp
jle
jl
jmp
add
scas
pop
rcl
lods
add
test
pop
test
adc
popf
push
pop
nop
test
scas
add
or
aaa
lahf
add
or
aas
pop
jno
inc
inc
sbb
ja
push
sub
and
inc
out
adc
pusha
and
dec
shl
and
pusha
lds
in
ins
or
icebp
cwde
push
stos
mov
(bad)
pushf
fmul
add
and
adc
loop
pop
dec
adc
bound
pop
or
xlat
inc
ret
dec
sti
lock
pop
std
shl
data16
and
clc
sahf
aam
push
dec
pop
scas
xchg
test
outs
sub
lods
ins
xor
addr16
imul
pop
mov
push
sbb
(bad)
fcomp
jp
cld
retf
and
mov
mov
call
inc
dec
test
inc
pop
add
and
or
jge
sti
mov
and
pop
dec
jl
cdq
inc
loopne
xchg
adc
xor
dec
and
and
sub
xlat
xchg
mov
cld
imul
xchg
imul
popa
sbb
add
push
movs
dec
cmp
outs
dec
adc
xchg
addr16
or
leave
and
push
ss
adc
test
inc
inc
pop
add
and
lds
jne
mov
pusha
xchg
test
pop
and
ja
sub
and
jbe
fs
sub
enter
imul
in
mov
into
mov
and
jae
cs
pop
push
cmp
(bad)
enter
popf
(bad)
or
jns
xlat
adc
cmp
ffree
add
add
test
mov
rol
push
xchg
in
and
jecxz
xor
jl
ret
hlt
push
aam
mov
push
or
and
ficomp
inc
inc
fistp
fwait
inc
pop
and
js
sbb
adc
test
cmps
inc
stc
push
or
xor
ins
pop
pop
xchg
sbb
cmp
adc
mov
push
jo
test
pop
inc
data16
or
pop
add
add
xchg
sbb
push
and
and
add
sbb
in
mov
sbb
enter
aaa
sub
in
dec
and
pop
outs
jb
movs
add
fs
add
or
mov
or
xor
jb
or
popa
pusha
pop
add
xchg
xchg
or
test
sbb
call
loopne
jns
nop
push
imul
dec
in
push
mov
and
imul
(bad)
lea
leave
movs
sub
out
pusha
and
rol
(bad)
push
loope
test
call
or
cmps
pop
pop
add
aam
mov
rol
mov
(bad)
jae
pop
pop
push
shl
in
fucomi
inc
push
lock
jl
pop
push
test
das
xor
jae
sub
lds
add
mov
mov
xchg
fstp
jmp
pop
sbb
jo
imul
test
adc
adc
xchg
scas
dec
mov
je
push
pop
mov
adc
movs
adc
dec
call
or
sub
pop
out
pop
icebp
or
call
daa
daa
cmp
push
das
fwait
add
add
xor
imul
adc
inc
sbb
add
mov
mov
test
mov
rcr
sub
daa
ds
sub
xchg
sub
pop
add
add
dec
inc
or
(bad)
clc
fst
sbb
leave
push
mov
jnp
push
inc
(bad)
imul
xor
in
outs
fsubr
adc
or
dec
test
dec
imul
mov
jno
jno
add
popf
call
and
cmp
or
aas
or
inc
pop
or
xor
sub
or
mov
in
js
inc
cmps
mov
pop
sbb
mov
cmp
shl
dec
push
adc
sbb
or
or
ret
adc
or
xor
lock
and
jnp
mov
in
cwde
push
icebp
loope
sub
add
xor
and
xor
mov
add
mov
out
into
ficomp
sbb
xor
push
add
mov
pop
xor
out
mov
dec
sub
and
add
xor
sub
fcmovnu
clc
popf
ret
and
push
add
xor
adc
sbb
js
adc
out
(bad)
fild
mov
or
and
or
repz
add
mov
cld
lods
add
add
jl
shl
xlat
imul
inc
ja
call
into
sub
push
nop
push
(bad)
pop
cdq
idiv
or
xchg
out
(bad)
xlat
and
(bad)
or
ret
popa
ror
or
aam
push
cli
xchg
cmp
xor
fldcw
mov
xchg
xchg
cmp
int3
or
ss
ret
ror
cmp
aas
fidiv
rcr
cmp
fmul
jmp
cmps
nop
and
mov
(bad)
in
cmp
mov
cmps
nop
and
shl
or
loopne
cmp
nop
fmul
call
mov
add
js
jo
push
xor
adc
shr
push
lock
sub
mov
sahf
or
test
cld
sti
add
icebp
jmp
xor
push
add
push
and
das
xchg
movs
sub
dec
lock
inc
jae
dec
int
push
sbb
scas
sbb
clc
cmp
xchg
enter
mov
out
or
add
sti
inc
jne
mov
sar
aaa
cmp
or
adc
jl
mov
shl
mov
addr16
daa
shrd
cmp
shr
les
add
imul
xchg
leave
jmp
ins
inc
xor
nop
push
pop
and
ret
or
mov
ret
pop
imul
mov
fwait
sub
xchg
push
jne
mov
sbb
add
push
mov
nop
and
add
add
add
cmp
add
xchg
xchg
or
sbb
mov
xor
adc
push
rcr
(bad)
adc
shl
movs
enter
shr
ror
mov
mov
ror
fdivr
fdivr
adc
int
ror
in
int3
push
call
mov
add
jns
sti
enter
fnstsw
(bad)
ja
or
xor
adc
nop
xor
dec
loopne
in
pop
dec
xor
call
jae
aam
call
hlt
mov
pop
sar
in
fwait
sub
mov
fstp
mov
out
xchg
leave
or
cmp
adc
imul
push
push
or
sbb
pop
es
adc
sbb
xor
xor
int3
test
dec
sub
sub
inc
dec
jae
xor
test
xor
aam
xor
in
test
dec
dec
mov
test
add
(bad)
cmp
int
mov
int3
push
or
xchg
mov
pop
test
ret
ds
stos
(bad)
cli
pop
adc
loopne
movs
sbb
mov
inc
call
sub
movs
sbb
js
jl
movs
mov
sbb
fadd
adc
sub
inc
pop
jb
adc
or
xor
push
add
xchg
movs
not
and
cmp
push
ret
iret
push
mov
jecxz
outs
jmp
je
lods
popf
sub
test
js
fild
xchg
inc
cwde
test
mov
movs
fdiv
mov
mov
out
les
or
push
push
add
shl
loop
push
mov
sbb
inc
or
mov
pop
add
int
add
add
jnp
xor
or
pop
hlt
sbb
mov
dec
add
ret
xor
add
push
test
push
fcmovu
add
xor
lea
in
push
sbb
inc
xlat
xlat
cmp
cwde
imul
sbb
ja
lods
sar
ror
sbb
(bad)
cmp
stos
dec
sbb
fcomp
pop
add
xchg
and
xor
in
xor
push
jge
les
(bad)
push
inc
mov
fisub
push
xor
pusha
dec
dec
mov
clc
inc
inc
push
cdq
dec
cmp
adc
xchg
fadd
mov
adc
inc
push
std
push
nop
aad
rcl
adc
cmp
or
adc
inc
sbb
mov
jo
jne
outs
adc
pop
add
pop
mov
push
stos
popa
dec
push
inc
imul
out
xor
movs
rcl
(bad)
aad
adc
iret
test
mov
push
lods
bound
sbb
ret
test
test
adc
div
xchg
add
pop
add
adc
add
data16
dec
mov
mov
ror
inc
loopne
lock
sti
dec
std
mov
lea
or
mov
ror
jo
mov
mov
sbb
repnz
xor
pop
(bad)
pop
xor
xor
mov
adc
jp
mov
jo
push
movs
push
lahf
xor
inc
pop
push
or
dec
ret
xor
fild
fucom
mov
jns
jg
ret
movs
adc
cmps
and
popa
or
(bad)
mov
mov
div
mov
or
pop
push
and
pop
dec
xor
in
dec
dec
jnp
test
(bad)
iret
xor
cmp
test
sub
ret
sbb
and
pop
(bad)
cmp
inc
add
mov
and
lods
mov
push
adc
outs
ret
or
mov
sbb
mov
add
sub
clc
cmps
add
dec
mov
and
neg
mov
sub
ins
sbb
adc
adc
adc
cmp
int
leave
sbb
sbb
pop
lock
jle
and
push
in
mov
retf
and
sbb
loopne
add
add
inc
leave
jae
lods
pop
aas
fadd
jne
ror
dec
dec
adc
or
inc
push
sub
scas
adc
xchg
jo
ins
pop
push
call
outs
and
xchg
dec
adc
lds
jae
xor
mov
mov
mov
int
nop
nop
loopne
hlt
mov
fcomp
data16
in
or
adc
dec
add
jbe
cmps
sub
lea
cmp
call
and
push
imul
imul
pop
cmp
outs
push
shr
sub
xor
mov
push
mov
cmp
or
rcr
cmp
adc
int
leave
adc
push
sbb
sar
cmp
sbb
and
xor
jae
and
sub
cmp
sub
cs
jae
xor
xor
daa
inc
daa
int
cmp
data16
sub
repnz
inc
lock
nop
or
out
or
loopne
mov
cs
fidiv
fadd
mov
nop
xchg
scas
in
or
cs
or
or
test
je
mov
xlat
add
adc
cmps
test
sub
xlat
(bad)
js
lock
sbb
cmps
jb
pop
sub
jg
mov
inc
cmp
lods
xchg
mov
jmp
inc
pop
repnz
pop
test
sub
daa
int
and
xor
test
or
mov
in
lahf
cmps
cmc
adc
sub
pop
daa
pop
dec
(bad)
jbe
or
push
je
or
dec
das
pop
fisttp
jmp
sbb
add
add
lea
add
or
out
imul
test
mov
mov
inc
adc
scas
call
lock
add
or
xor
stc
hlt
nop
add
and
pop
jns
ds
adc
sbb
or
mov
mov
rcl
pop
jge
adc
push
lods
aaa
pop
jne
or
inc
leave
cs
mov
(bad)
mov
xlat
mov
and
add
ins
xchg
add
test
xchg
push
sub
add
adc
or
xor
sbb
dec
imul
inc
mov
push
jo
sar
cmc
ja
jle
or
sub
sahf
ret
inc
mov
xor
inc
push
xor
sbb
mov
and
sbb
add
nop
lods
mov
mov
ss
cli
sub
mov
push
ins
shl
sbb
test
(bad)
fs
cmp
mov
or
cmp
add
repz
int3
jl
adc
lea
ret
imul
ror
sbb
imul
pop
stc
sbb
mov
xlat
cmp
xor
out
and
ss
mov
add
clc
js
in
mov
mov
(bad)
and
sub
or
dec
pop
(bad)
lods
mov
rcl
and
push
dec
dec
outs
and
push
push
pop
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pop
pop
pop
inc
dec
dec
dec
dec
inc
inc
inc
inc
dec
dec
dec
dec
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
dec
dec
xor
xor
dec
dec
dec
xor
dec
dec
dec
cmp
cmp
dec
dec
dec
cmp
dec
dec
dec
and
and
dec
dec
dec
and
dec
dec
dec
sub
sub
dec
dec
dec
sub
dec
dec
dec
adc
adc
dec
dec
dec
adc
dec
dec
dec
sbb
sbb
dec
dec
dec
sbb
movs
pop
dec
add
add
in
in
add
in
or
or
out
in
or
push
lidtd
mov
sub
and
nop
adc
idiv
gs
push
xor
in
sbb
ins
test
scas
fmul
sbb
dec
cmc
push
sbb
aas
out
jge
test
sub
call
ja
popf
or
pop
and
push
iret
nop
inc
mov
fisttp
add
cmp
imul
fiadd
mov
lock
repnz
lea
dec
push
movs
test
ret
jbe
(bad)
dec
ds
cmp
and
fs
out
xchg
pop
jnp
in
dec
cmp
(bad)
outs
or
xor
mov
(bad)
enter
push
or
cmps
xor
sub
xchg
jae
in
cmp
clc
mov
inc
movs
mov
mov
cmps
cwde
xlat
dec
push
sahf
mov
fs
mov
mov
(bad)
pop
xor
sbb
iret
mov
ds
dec
mov
push
dec
call
js
cmp
sbb
jl
cmp
scas
and
dec
xor
ds
and
adc
fdiv
in
sub
or
xchg
fist
ret
push
sbb
mov
and
scas
dec
sub
(bad)
lods
xchg
scas
mov
adc
in
in
lods
pop
adc
enter
aas
mov
pop
cmp
mov
aam
and
outs
cmp
jg
mov
call
idiv
aam
(bad)
cmp
xchg
cmp
sti
xchg
adc
dec
iret
repz
pop
ins
jnp
cdq
test
iret
repz
(bad)
aad
repz
enter
xchg
adc
cdq
pop
or
and
jp
mov
fmulp
repz
(bad)
repnz
add
adc
cs
jg
ss
out
fimul
push
mov
cmps
mov
shl
movs
repnz
push
mov
dec
(bad)
cld
loopne
xchg
dec
sbb
push
out
push
icebp
sahf
out
call
dec
jns
fwait
jge
cwde
out
imul
mov
cwde
inc
mov
ret
push
rcr
cmp
dec
test
ss
retf
sbb
add
jae
mov
mov
push
xchg
int
clc
rcr
mul
pusha
lods
or
adc
inc
pusha
jbe
push
imul
xchg
fmul
shl
lods
adc
cmp
adc
push
cmps
add
lods
test
and
mov
hlt
xchg
mov
pop
repnz
daa
aam
cmp
lahf
inc
fadd
cdq
nop
xchg
mov
enter
cdq
shl
cmp
mov
jo
ror
fwait
nop
pop
cmp
call
cmp
and
in
add
inc
mov
test
sbb
in
jne
popf
cmp
call
repnz
push
xchg
and
and
jbe
mov
lahf
inc
xchg
or
enter
loopne
sbb
in
dec
in
mov
adc
push
or
or
call
ror
add
ja
ror
rcr
and
sbb
pop
ror
add
mov
xchg
daa
in
push
movs
cwde
in
xchg
ror
xchg
enter
inc
push
in
mov
nop
mov
sub
fadd
push
xchg
mov
in
cmp
call
jns
je
add
pop
repnz
push
in
mov
cmp
lahf
dec
sub
cmovs
aam
sbb
popa
lods
dec
and
push
leave
xor
jp
out
mul
or
iret
inc
ins
add
jge
adc
push
inc
ret
inc
sbb
fmul
or
dec
adc
mov
sbb
mov
test
inc
and
aam
add
daa
xchg
shl
pop
daa
xlat
fwait
test
lea
call
dec
xor
sub
push
add
jl
ret
lods
std
scas
mov
adc
aam
inc
es
mov
fnstsw
jl
push
jge
sbb
sub
in
xchg
mov
jmp
(bad)
fstp
shl
lods
pushf
jno
popf
lods
outs
rol
inc
push
xor
ss
popa
push
fs
sbb
cmp
mov
sub
or
aam
sub
xchg
test
inc
sbb
add
gs
call
inc
cmp
imul
imul
cmps
imul
ror
test
daa
mov
leave
sub
xchg
cs
push
mov
mov
not
or
fs
push
adc
dec
and
movs
test
fbstp
or
pop
(bad)
out
push
adc
dec
fisub
or
mov
inc
dec
lahf
gs
inc
gs
xchg
inc
inc
daa
rol
fimul
sti
sub
pop
neg
mov
pusha
mov
pop
inc
mov
(bad)
fwait
push
push
add
add
dec
or
adc
xchg
pop
out
push
push
dec
xchg
sbb
leave
dec
add
pop
jb
rol
mov
mov
sar
pop
loope
cmps
sub
mov
sub
ss
add
sub
push
sbb
mov
add
cs
inc
pusha
ins
jnp
mov
adc
inc
js
pop
sub
xchg
and
movs
dec
adc
mov
mov
mov
cmp
adc
and
retf
cdq
and
mov
xchg
add
or
bound
pop
adc
enter
pusha
inc
mov
scas
movups
rcl
mov
add
mov
add
cmp
xchg
mov
mov
jb
inc
pusha
aas
sub
inc
adc
push
and
sub
lea
xchg
(bad)
loopne
cmp
adc
mov
mov
mov
mov
je
xchg
pop
daa
pop
cmps
nop
mov
push
sbb
enter
mov
mov
daa
and
inc
adc
enter
sub
sti
das
mov
lock
sub
pusha
xor
jne
adc
or
xchg
push
bound
icebp
inc
inc
add
nop
iret
or
add
sbb
movs
mov
mov
push
lock
or
inc
mov
sub
inc
cmp
std
inc
pop
adc
lahf
or
dec
mov
inc
push
sbb
mov
adc
shl
sbb
mov
mov
pop
addr16
pusha
lods
jbe
sbb
mov
ffreep
shl
idiv
and
icebp
mov
mov
gs
ffree
int
(bad)
push
outs
dec
ret
adc
fcom
bound
fcom
pusha
pusha
jmp
in
addr16
dec
loopne
fld
hlt
adc
mov
sbb
add
lea
mov
or
dec
(bad)
adc
inc
sub
xchg
or
(bad)
int
adc
mov
and
les
or
clc
ins
adc
sub
fidivr
jne
sbb
xchg
ficom
xor
adc
mov
mov
inc
or
dec
pop
mov
pop
(bad)
call
stc
jmp
retf
mov
ficom
push
or
add
push
or
rcr
xor
jle
or
dec
adc
push
out
daa
xchg
and
and
sub
lea
mov
icebp
sti
inc
pop
call
pop
push
push
bound
mov
jb
mov
repnz
mov
cmps
imul
push
cmp
add
add
xchg
jb
xchg
adc
xchg
mov
mov
inc
popa
inc
je
mov
or
xor
mov
jnp
in
mov
or
xor
adc
stc
jns
fdiv
dec
mov
pop
dec
enter
push
inc
jnp
in
jmp
cmp
xchg
inc
loope
inc
cwde
stos
loopne
mov
sub
aas
in
or
inc
test
xor
inc
mov
lea
aam
mov
and
inc
lock
sbb
enter
pushf
std
nop
popf
or
pop
xor
jge
push
adc
je
xchg
scas
xchg
fcmovb
in
adc
and
data16
cmp
push
xor
ja
loope
sub
push
jge
inc
xlat
xor
sub
lea
dec
aaa
dec
mov
aaa
jl
cmp
sub
test
push
fsubr
pushf
and
dec
es
add
xchg
or
fisttp
xchg
mov
or
in
mov
xchg
xor
xor
inc
cmp
cmp
and
lea
sub
cwde
mov
sub
dec
ret
mov
dec
popf
mov
push
pushf
retf
jp
bound
mov
ret
inc
pop
xchg
dec
mov
es
mov
add
add
adc
dec
add
adc
mov
pop
ret
vpcomd
(bad)
nop
sbb
add
int3
nop
cdq
add
das
xlat
movs
test
popa
iret
and
add
inc
cmp
inc
rcr
ret
mov
adc
adc
imul
cdq
fs
ret
test
and
mov
xor
clc
cmps
loop
faddp
mov
cdq
popf
clc
sbb
jns
xchg
pop
pop
dec
shr
or
adc
adc
sub
inc
pushf
daa
jmp
sbb
add
inc
xor
aas
cmp
ins
add
xchg
jnp
mov
mov
sbb
sbb
clc
(bad)
xor
shl
dec
mov
ror
xlat
lods
mov
adc
sbb
push
cmc
add
(bad)
clc
or
stos
or
mov
sbb
pop
adc
xor
mov
lock
mov
xlat
mov
fisubr
sbb
fs
addr16
jge
mov
daa
pop
(bad)
dec
call
imul
shr
dec
jge
adc
fcomp
or
fnsave
sbb
dec
xlat
lock
and
loopne
add
in
lods
jne
xor
loop
fld
push
adc
pushf
imul
jle
mov
popa
inc
push
movs
fcomp
mov
iret
pop
adc
rcl
mov
xchg
jne
in
sub
push
outs
lea
sahf
mov
pop
inc
test
jbe
(bad)
adc
pop
push
sbb
xchg
lahf
push
out
mov
inc
dec
dec
test
inc
shl
push
adc
xor
and
adc
imul
mov
fs
xor
sub
ret
adc
sahf
hlt
jns
or
xor
and
pusha
(bad)
ins
rcr
sub
inc
(bad)
out
jb
adc
pop
ret
push
and
cmp
xlat
scas
scas
sbb
stos
sub
daa
inc
mov
push
loop
pop
mov
rcl
jmp
scas
xor
les
mov
(bad)
(bad)
gs
fild
jae
inc
jns
push
lea
jl
jbe
sub
mov
outs
mov
xor
nop
dec
mov
xor
ds
sub
xlat
pop
mov
test
mov
xor
xchg
mov
jbe
push
xchg
lock
inc
not
mov
and
cmpxchg
rol
imul
dec
dec
or
push
sub
repnz
test
xor
cvttps2pi
or
xchg
xor
or
mov
sbb
pop
enter
pop
ss
or
lods
adc
mov
sub
(bad)
cmp
push
or
or
jp
dec
xchg
xor
daa
xlat
push
inc
sbb
xlat
nop
out
cld
cmp
mov
adc
add
sbb
add
jmp
cmp
mov
sti
nop
add
adc
lock
or
pop
push
loope
or
rol
mov
mov
inc
xchg
and
dec
dec
add
pop
inc
or
out
fcomp
or
or
movs
jo
fcomp
je
add
loopne
loopne
fsub
add
mov
jne
aad
sub
sahf
mov
(bad)
push
rcl
sub
ficomp
cmps
cmp
add
dec
sub
out
ret
and
(bad)
mov
in
not
sbb
adc
sbb
es
xchg
xor
push
or
sub
sub
rol
lock
es
clc
movs
jne
call
ins
mov
push
cmps
(bad)
loope
pop
adc
xchg
shr
push
js
test
sbb
in
sub
cs
psubusw
out
mov
inc
push
sar
add
in
lock
jb
repz
or
scas
loopne
enter
and
sbb
jae
sbb
sub
fisttp
pop
(bad)
mov
inc
adc
ja
cwde
(bad)
cs
sub
add
cmc
mov
popa
cli
ret
es
pop
es
add
adc
add
cmps
and
cmp
and
sub
popa
aaa
jmp
pop
mov
pushf
arpl
or
ins
sub
daa
lods
push
mov
sahf
ins
lahf
pop
jno
jo
cmp
outs
arpl
sbb
mov
mov
fstp
shl
or
popa
jno
aas
pop
aam
add
mov
push
jmp
leave
cmp
jl
and
pop
cmp
je
push
dec
sbb
dec
or
mov
jge
mov
repz
mov
pop
or
xchg
or
mov
and
ds
popf
mov
int3
adc
mov
jmp
pop
in
test
mov
inc
cmp
dec
adc
mov
adc
mov
mov
cmps
jnp
or
mov
dec
mov
mov
popf
rol
outs
nop
fdiv
cmp
cmps
push
and
sbb
jmp
sub
inc
adc
fld
push
int3
adc
enter
aam
loope
jg
mov
dec
jg
test
cmp
shl
add
shr
movs
adc
adc
mov
outs
jmp
mov
cdq
ret
pushf
add
mov
mov
and
sub
mov
or
cmp
ficomp
fdivr
mov
in
mov
sub
add
sbb
mov
ja
adc
or
ins
jmp
cmp
out
jge
cmps
jne
adc
jne
push
jns
adc
push
mov
fstp
adc
shr
cwde
inc
cmps
add
add
or
push
fstp
and
adc
and
movs
add
(bad)
out
(bad)
sub
mov
xchg
mov
sub
xchg
sub
nop
jmp
fs
imul
or
add
add
push
outs
add
out
int3
(bad)
mov
xor
fs
iret
outs
and
fisttp
mov
pop
imul
and
aam
frstor
outs
and
in
pop
pop
xchg
mov
lods
jg
loopne
outs
add
punpckhbw
iret
enter
adc
dec
gs
adc
mov
cwde
mov
inc
outs
inc
mov
push
scas
std
bndstx
dec
add
dec
ja
ss
mov
shl
sub
dec
sub
xor
add
sub
popa
les
imul
fwait
ins
jecxz
xor
imul
sbb
sti
jecxz
add
pop
not
mov
mov
imul
shr
and
xlat
jae
enter
lods
(bad)
in
add
mov
pop
add
push
inc
loop
jo
xor
xor
sub
mov
les
and
pusha
ret
add
aaa
push
inc
jae
add
mov
xor
icebp
sbb
pop
int
test
sub
imul
ror
cmp
adc
cmps
je
xor
inc
jbe
mov
fild
add
mov
inc
or
or
test
sub
iret
sti
loopne
pop
sbb
(bad)
sbb
push
dec
and
mov
pop
cmp
(bad)
push
addr16
loope
stos
sub
nop
dec
add
cdq
mov
push
push
clts
mov
enter
adc
icebp
rcr
or
xchg
and
rcr
scas
pop
jnp
pushf
pop
add
pop
dec
mov
dec
xchg
push
outs
add
icebp
mov
and
test
pusha
push
inc
sub
mov
xor
sar
fs
add
adc
into
fdiv
push
dec
dec
cmps
jae
fwait
int3
(bad)
fdivr
mov
adc
xchg
pusha
mov
pop
pop
sub
push
daa
sub
pavgb
sub
push
mov
les
add
ret
loopne
fdivr
pop
call
sub
loopne
dec
jns
jns
out
cmc
dec
in
or
sub
add
sti
dec
movs
or
out
out
adc
cs
push
movs
aam
clc
xor
sar
sbb
jmp
mov
movs
loop
add
or
dec
ins
ret
ja
les
add
push
and
ds
mov
adc
test
sbb
adc
lods
mov
mov
mov
push
adc
xchg
add
repz
enter
hlt
dec
mov
or
push
icebp
imul
pop
jbe
cdq
mov
jae
sub
sub
add
xchg
prefetchwt1
sahf
dec
pop
add
xor
push
cmps
jno
data16
push
imul
nop
outs
loop
clc
enter
bound
test
pusha
out
and
in
sbb
aad
sbb
fcmovne
cmp
pushaw
out
pop
(bad)
adc
imul
adc
mov
ror
inc
mov
push
rol
jp
test
jmp
mov
cs
cmps
pop
pusha
test
sbb
or
sub
pop
sbb
pop
movs
adc
dec
mov
push
scas
fwait
(bad)
aam
cmp
adc
fsub
pop
mov
mov
dec
add
or
sbb
mov
sbb
sub
push
push
inc
ret
nop
cwde
(bad)
movs
fistp
or
mov
adc
js
aad
cmp
bound
loopne
inc
ret
aaa
movs
sub
lock
jg
xor
pushf
add
getsec
cwde
mov
push
or
gs
outs
test
je
cmps
dec
mov
ins
push
mov
paddb
aad
scas
add
cmps
push
or
add
jmp
mov
inc
cwde
add
push
outs
xor
test
jg
dec
mov
leave
aaa
jl
lods
leave
or
inc
push
outs
ja
xor
and
ins
out
add
movs
daa
mov
mov
pusha
sub
sti
mov
adc
inc
jecxz
leave
lock
(bad)
das
es
sub
test
je
aad
adc
imul
inc
sub
mov
and
mov
cmp
inc
pop
ret
jmp
mov
mov
cli
shl
mov
inc
xchg
xlat
fidivr
sbb
std
or
add
sub
imul
test
cmp
mov
cs
adc
inc
gs
dec
outs
and
sbb
fldenv
outs
xor
add
jg
repz
popf
test
add
sbb
sbb
jb
add
add
hlt
clc
mov
rol
xchg
jl
jmp
mov
inc
push
xor
clc
dec
push
inc
mov
push
lods
into
xchg
lock
inc
inc
mov
add
inc
rol
or
not
mov
push
add
test
push
mov
push
pop
pop
add
clc
add
add
add
data16
cmp
je
imul
add
outs
lea
sub
jno
jae
cmp
add
ja
bound
inc
xor
mov
adc
fs
cmp
add
scas
pop
mov
(bad)
and
or
adc
pop
pop
push
add
xor
or
inc
xchg
or
pop
in
pop
xchg
or
jecxz
clc
popf
mov
inc
cmp
push
in
shl
(bad)
mov
push
sub
pop
lock
mov
and
add
sbb
sbb
not
pop
dec
push
loop
mov
movs
push
fadd
gs
or
sub
ins
adc
inc
xchg
xor
cmp
cmp
xor
adc
imul
cli
and
mov
dec
cmp
inc
push
mov
mov
cmp
aas
jno
in
cmc
and
jmp
or
mul
xchg
sbb
rol
lods
add
xor
lahf
int
xor
sub
sub
cmps
or
xor
sub
shr
iret
dec
adc
inc
xchg
add
pop
pusha
test
mov
mov
fadd
mov
adc
enter
add
adc
sub
mov
xchg
and
xchg
and
movs
call
out
and
add
push
lea
es
pop
fistp
mov
inc
jmp
push
xchg
xor
inc
mov
push
pop
(bad)
stc
hlt
xor
mov
xchg
js
inc
pop
pop
pushf
rol
lahf
dec
and
xor
mov
dec
sub
mov
cwde
xchg
push
rcl
adc
adc
or
mov
inc
sub
mov
shl
(bad)
xlat
dec
cmp
adc
call
(bad)
jl
inc
and
rcr
mov
jb
pop
dec
push
not
in
sbb
inc
cmp
jmp
cmp
mov
retf
pusha
inc
fadd
and
dec
jne
fadd
sbb
imul
stc
dec
ret
dec
and
aam
(bad)
mov
cld
rcr
mov
push
rcl
mul
ins
ret
jge
jae
lea
adc
ret
push
push
jmp
cmp
sbb
mov
mov
sub
loop
push
pusha
je
(bad)
cmps
push
add
sbb
sbb
repnz
inc
sbb
addr16
mov
adc
imul
clc
mov
scas
out
xor
sub
adc
adc
adc
test
lahf
and
xchg
lea
ins
and
aad
iret
int
jo
or
adc
jmp
jb
or
xor
loope
bound
mov
pushf
divps
scas
sub
clc
cmp
aaa
add
ret
sub
(bad)
adc
push
sbb
leave
leave
or
sub
or
xlat
div
add
mov
clc
xlat
xchg
pusha
jge
sbb
aad
outs
sbb
or
mov
or
popf
lds
sub
dec
jl
test
movs
xchg
sbb
fcmovnb
mov
call
add
fld
sbb
aas
mov
adc
and
sbb
add
push
rol
push
mov
mov
repz
imul
arpl
pop
test
(bad)
xchg
and
ficomp
jle
and
xchg
push
or
jo
adc
mov
loopne
ret
cmp
sbb
mov
ja
adc
sahf
or
pop
lahf
jge
adc
jae
ret
mov
jmp
imul
or
cmp
ret
and
jno
push
and
push
test
fnstenv
sbb
dec
lock
add
xor
dec
add
add
and
xchg
stos
nop
scas
sbb
inc
xchg
xchg
or
push
lds
pop
dec
and
mov
loopne
or
or
dec
adc
xor
sbb
dec
inc
lods
lock
cmps
and
dec
movs
adc
pop
pop
clc
movs
das
and
rol
dec
mov
mov
ja
inc
js
(bad)
push
push
cmp
pop
aam
add
outs
xchg
mov
jo
lock
sub
xchg
dec
mov
adc
call
js
and
ss
int3
test
pop
rol
fsubr
mov
xor
push
xor
lahf
mov
aad
out
push
adc
fwait
jge
je
sub
mov
and
aas
xlat
jmp
mov
je
(bad)
mov
pop
shr
or
sub
sbb
mov
cmp
mov
adc
fsubr
sub
sub
mov
iret
jg
add
xor
xchg
hlt
xchg
jl
pop
(bad)
sti
cwde
or
mov
mov
sub
sub
add
sbb
xchg
add
or
pusha
fnstenv
push
add
and
add
enter
lock
fisub
xchg
push
dec
and
scas
sub
mov
or
dec
pop
mov
mov
adc
(bad)
sbb
push
sub
sbb
test
pop
push
pusha
pop
dec
dec
js
call
mov
jp
(bad)
adc
mov
shl
bound
mov
xchg
jne
imul
pop
loope
pop
add
or
inc
test
and
out
or
cmps
pop
mov
rol
test
xchg
mov
push
xlat
push
xor
(bad)
pop
sbb
pop
cwde
ret
mov
mov
mov
loop
cmp
es
in
lods
xlat
mov
paddusw
call
(bad)
cwde
push
sub
mov
add
lock
movs
je
jmp
test
fs
and
jo
push
cmp
lock
jl
sub
test
lock
dec
or
int3
mov
rcr
xchg
imul
test
add
and
add
or
jle
adc
test
sbb
movq
xchg
lea
retf
or
pop
inc
pop
shl
adc
stos
pushf
adc
or
pop
xchg
adc
dec
sti
nop
nop
fimul
loope
pop
aaa
ucomiss
lods
adc
fnstsw
inc
jno
stos
rol
push
stc
inc
sub
out
sub
and
xlat
movs
and
lods
daa
inc
xlat
loopne
ja
mov
(bad)
sbb
dec
popf
clc
cmp
loope
pop
or
adc
test
add
adc
sbb
xchg
mov
jmp
ins
push
and
cmp
leave
inc
mov
loopne
imul
rol
scas
mov
mov
loope
fsub
sbb
mov
and
sbb
loopne
out
jle
or
push
loopne
mov
add
aas
push
clc
xor
or
out
mov
call
leave
jl
ror
mov
or
addps
mov
cmp
cmp
rol
ret
mov
cmps
mov
jno
mov
mov
add
xor
fsub
pop
inc
and
mov
pop
retf
cmp
push
push
or
loope
imul
mov
xchg
clc
sbb
pusha
arpl
sti
jns
push
(bad)
sbb
push
sar
inc
xchg
lock
and
in
je
in
jmp
cmps
mov
cwde
push
das
loopne
jmp
cmp
aad
push
pop
inc
fisub
or
fbstp
popf
call
popa
ror
xor
scas
push
mov
aam
rcl
(bad)
imul
scas
inc
pop
pusha
mov
outs
in
push
ins
fisub
popf
add
lds
hlt
pop
cmp
cmp
mov
retf
mov
sub
or
ins
inc
outs
add
sar
adc
xchg
fcmovne
mov
inc
inc
pop
dec
add
neg
pop
aaa
push
add
add
push
and
push
mov
sbb
or
push
or
mov
out
inc
dec
movs
hlt
xadd
hlt
mov
add
adc
add
xchg
mov
add
pop
mov
dec
push
test
enter
outs
adc
clc
jmp
call
je
shl
(bad)
mov
mov
inc
std
add
(bad)
cmp
cld
inc
clc
adc
hlt
pop
jge
push
dec
iret
jne
mov
add
fwait
mov
lods
add
inc
inc
push
(bad)
lods
or
xor
adc
push
ror
mov
adc
jnp
and
cmp
and
iret
sbb
add
dec
cmc
xchg
test
push
iret
cmp
ja
out
xor
in
push
jo
inc
gs
cld
in
or
jno
fbstp
icebp
add
xchg
push
jo
xchg
shl
xor
fild
and
and
xor
js
inc
dec
jne
mov
add
mov
les
lock
(bad)
ja
inc
adc
jl
ror
inc
call
sbb
leave
mov
call
js
jae
cs
jl
pushf
xor
mov
loopne
mov
lds
rcl
mov
or
mov
mov
add
bound
push
pop
cmp
or
outs
leave
sbb
hlt
pop
icebp
push
nop
xor
repz
sbb
rcl
in
aam
mov
cmp
es
mov
les
jae
aam
lahf
push
or
sbb
(bad)
or
mov
cmp
jne
inc
mov
int
mov
rcl
cld
out
or
popa
cmp
xchg
push
or
lahf
sar
fld
rol
psubsw
imul
push
ror
js
dec
enter
sbb
xchg
enter
lds
or
mov
add
add
les
test
pop
es
ret
test
dec
mov
or
(bad)
dec
push
pop
(bad)
xor
fsubr
adc
ret
xchg
ret
or
push
push
inc
inc
inc
das
pop
push
push
add
aam
lock
inc
mov
dec
add
inc
dec
daa
add
add
jae
rol
mov
ret
cwde
mov
jmp
adc
jmp
xor
ins
adc
retf
outs
or
mov
icebp
jg
xchg
push
daa
mov
pop
jno
fsubr
movs
adc
cmp
adc
aam
mov
out
jl
iret
ins
addr16
arpl
fdiv
rol
sub
enter
pop
sbb
sbb
or
movs
test
and
or
jns
cs
adc
jmp
xor
push
adc
lock
enter
sbb
in
mov
(bad)
dec
outs
pop
pop
push
mov
mov
loope
leave
hlt
jns
test
frstorw
loopne
mov
inc
push
lock
and
inc
in
mov
(bad)
xchg
ins
call
adc
jae
aad
ror
lahf
in
nop
cmp
in
push
es
cmps
fsub
jnp
gs
adc
adc
pop
stos
enter
sub
adc
fldcw
sub
mov
xor
aad
mov
inc
mov
les
cmp
test
mov
bswap
in
mov
jne
adc
sbb
inc
sbb
lds
inc
loopne
(bad)
xor
loopne
test
aaa
jns
dec
fsubr
ins
adc
mov
pop
je
mov
clc
retf
push
push
dec
mov
mov
mov
lds
(bad)
or
shl
push
inc
call
adc
pop
fwait
ror
sub
add
jecxz
or
out
add
test
mov
adc
test
mov
pop
imul
mov
inc
mov
jne
sub
loop
push
imul
jo
in
(bad)
pcmpeqb
pop
call
fdivrp
ss
adc
enter
push
hlt
and
sub
xchg
add
pop
inc
mov
mov
jnp
clc
cmps
int3
mov
(bad)
outs
mov
test
add
add
mov
push
test
adc
add
mov
in
inc
xor
dec
sub
add
pop
ret
(bad)
fld
stos
div
inc
mov
(bad)
or
fdivr
inc
leave
mov
ins
cmp
pop
fcom
jecxz
(bad)
push
sub
and
push
inc
dec
(bad)
stc
stos
nop
repz
inc
mov
(bad)
sbb
pop
lds
ret
or
cmp
jmp
sub
je
or
in
sbb
push
push
sbb
inc
hlt
adc
clc
add
mov
cmp
inc
addr16
dec
mov
sub
mov
rcl
test
mov
ds
mov
push
dec
jbe
sbb
and
aas
jmp
(bad)
in
sub
and
aas
(bad)
inc
(bad)
pop
cmc
jne
dec
or
(bad)
pusha
aaa
cwde
enter
mov
adc
cdq
inc
mov
test
loope
xor
ret
dec
sbb
mov
xchg
mov
xor
and
xchg
out
je
in
fmul
adc
enter
xchg
mov
leave
sub
in
or
and
xchg
xchg
hlt
gs
mov
out
dec
movs
call
and
loope
jo
push
inc
outs
out
dec
jns
mov
mov
js
xor
mov
mov
inc
push
fdiv
sub
adc
and
daa
adc
add
push
push
dec
or
jo
das
stos
jge
sbb
enter
or
les
(bad)
adc
adc
jne
and
sub
jo
js
or
xchg
cmp
repz
jl
cmps
scas
adc
mov
jne
adc
addr16
je
rcr
adc
add
mul
cli
dec
loop
not
scas
add
cmp
add
leave
dec
push
xchg
sbb
out
push
jmp
out
or
mov
test
int
jb
aas
nop
adc
outs
test
push
imul
inc
cmp
(bad)
jbe
scas
or
mov
xlat
push
sbb
test
inc
and
add
inc
cmp
cmps
adc
hlt
adc
test
add
lahf
dec
inc
inc
push
adc
and
sub
push
dec
dec
or
es
js
neg
and
jne
cmp
inc
pushf
jns
adc
mov
pop
cs
jo
shr
fld
push
mov
and
dec
and
xchg
inc
mov
add
mov
enter
outs
and
sbb
push
add
lahf
inc
es
sub
cmp
in
je
push
add
adc
(bad)
movs
sbb
and
sub
dec
or
and
adc
dec
ret
adc
adc
inc
add
je
stos
sbb
inc
sub
push
cmps
mov
popf
xchg
mov
mov
pop
dec
cmp
bound
loope
xchg
iret
mov
push
push
pop
mov
in
ins
mov
fwait
in
push
adc
add
repnz
mov
adc
arpl
mov
jbe
dec
sub
scas
pop
xchg
loope
mov
pop
mov
xchg
adc
outs
or
call
adc
xchg
and
ffreep
xchg
xchg
push
add
lods
movs
adc
rol
ret
(bad)
idiv
pushf
hlt
cmp
cmp
adc
cmp
mov
ins
int3
or
pop
xor
or
movs
lods
pusha
xor
sub
adc
mov
call
imul
fdiv
mov
leave
xor
stc
xchg
xor
(bad)
push
add
push
mov
sub
dec
jge
push
aam
adc
ror
aaa
xor
xchg
cmp
pop
(bad)
fs
adc
xchg
lea
jmp
mov
cmp
push
fmul
mov
inc
or
dec
dec
sbb
and
add
sar
inc
nop
inc
(bad)
leave
lock
add
leave
and
cli
call
jg
hlt
dec
jbe
je
int3
bound
lea
test
dec
gs
in
sti
jmp
adc
xchg
xchg
jb
dec
jp
jmp
dec
add
jge
dec
mov
imul
xchg
xchg
and
jmp
xchg
dec
pushf
(bad)
sti
adc
jbe
xchg
xchg
mov
shl
mov
in
iret
(bad)
je
or
cmp
xchg
inc
jae
or
dec
gs
or
inc
jae
push
imul
(bad)
popa
xchg
dec
sti
sti
(bad)
clc
lds
push
add
lock
sti
pop
push
push
scas
cdq
out
push
dec
aad
xor
pop
mov
rcl
into
xor
adc
(bad)
arpl
pop
rcr
movs
loop
add
rol
mov
mov
fdivrp
sbb
pop
sti
or
imul
mov
or
fsubr
imul
(bad)
fnstcw
inc
mov
sbb
add
es
nop
or
mov
pop
mov
pop
es
and
mov
xchg
cmc
xor
or
js
imul
je
pop
popa
adc
rol
cmp
xchg
pop
mov
mov
adc
(bad)
dec
lods
inc
jge
cs
or
mov
cmps
lods
dec
lea
sub
xchg
js
jge
add
xchg
cmp
or
div
xchg
and
sub
push
ja
out
in
ror
aam
(bad)
xchg
add
push
push
pop
jmp
add
xchg
bound
mov
sub
push
inc
lock
out
popa
mov
pop
mov
mov
push
mov
not
xor
jg
dec
jne
inc
cmp
mov
rcr
jmp
xchg
jl
push
cmp
and
leave
jmp
nop
hlt
hlt
mov
dec
and
lock
xchg
mov
ret
in
lods
add
adc
sbb
inc
dec
inc
push
sub
xor
dec
push
sub
push
push
dec
imul
and
sub
xor
jmp
adc
mov
imul
cmps
dec
sub
clc
xor
fisub
xor
in
test
sbb
aad
push
add
pop
push
aad
jns
mov
cs
add
mov
push
push
xor
lock
xchg
or
sbb
(bad)
fsub
mov
ss
fst
lahf
scas
or
adc
fcmovnbe
add
jae
lock
mov
loopne
(bad)
xor
push
mov
mov
add
push
add
mov
inc
call
sar
add
(bad)
xchg
dec
add
or
add
mov
add
out
sub
adc
(bad)
adc
cmc
shr
adc
inc
or
xchg
lahf
and
add
pusha
nop
adc
lds
xchg
test
mov
mov
sub
xor
sbb
pop
push
das
ss
mov
aaa
fld
nop
test
jo
push
imul
int3
in
daa
sbb
mov
arpl
xor
pop
xchg
cmp
adc
sub
push
lea
fst
fisub
jo
bound
cmp
add
mov
pop
adc
retf
and
push
sbb
rol
rcl
push
and
push
pop
mov
nop
repnz
pop
rol
repnz
add
and
ret
pop
dec
jo
es
and
mov
movs
pop
fbld
mov
repz
adc
and
add
mov
pop
cmp
movs
mov
adc
fstp
xchg
or
das
pop
mov
or
js
dec
leave
cmp
push
xchg
sti
lock
push
xchg
and
jge
push
dec
mov
push
cmp
sbb
xor
popa
mov
std
loop
xor
int
sbb
cmp
aas
dec
or
jle
jl
add
inc
imul
and
cmp
jne
add
jmp
or
fimul
adc
jmp
xor
cmp
ins
jl
aam
add
mov
lahf
(bad)
or
or
or
mov
jae
ret
jg
pop
jno
xchg
pop
jecxz
adc
(bad)
in
out
push
inc
mov
shl
imul
inc
and
(bad)
jb
cmps
xchg
dec
outs
rcl
jecxz
bound
(bad)
and
bound
aaa
xchg
clc
pop
fld
fild
fstp
shl
and
mov
lock
or
mov
pop
out
(bad)
pop
add
and
(bad)
rol
jg
xor
sub
jne
xor
push
mov
les
test
push
dec
cli
shr
hlt
fcomp
add
xor
or
(bad)
xchg
call
call
jbe
ja
add
ja
mov
cmp
fsub
aad
mov
jo
nop
ja
add
jge
pop
inc
jne
fs
jns
hlt
sahf
or
aaa
jae
jne
cs
popa
xchg
ds
and
xchg
loope
dec
js
pop
call
shr
cmp
mov
dec
jmp
and
daa
inc
cmc
or
nop
jecxz
fild
adc
mov
adc
rol
pop
lahf
push
adc
mov
xchg
cmp
sbb
push
aaa
or
adc
sbb
stc
jo
test
lods
and
pop
mov
outs
push
and
nop
or
shl
ret
lds
es
les
sbb
outs
or
outs
sub
or
mov
jmp
imul
fnstenv
popaw
adc
push
sbb
pop
arpl
add
lea
or
xor
std
push
sub
xchg
pop
in
jo
dec
jecxz
inc
push
aaa
dec
fsub
shl
inc
inc
jae
inc
push
and
imul
xor
or
inc
std
or
dec
jmp
je
mov
xor
or
sub
adc
fdivr
lds
dec
loopne
inc
cmp
jnp
pop
jbe
and
pop
jl
fdiv
(bad)
mov
adc
(bad)
out
add
pop
mov
adc
mov
rcl
fs
cld
ror
push
dec
ja
movs
pop
add
adc
cdq
int3
sbb
mov
scas
sti
xchg
xchg
(bad)
in
test
jmp
out
inc
or
push
aam
out
mov
or
loopne
outs
ror
mov
rcr
push
cmp
inc
mov
inc
jmp
add
jns
or
xor
push
call
jge
xor
sar
aad
mov
movs
push
pop
dec
adc
or
pop
pop
mov
movs
mov
adc
mov
xchg
fild
push
adc
xchg
sbb
inc
or
xor
rcr
add
imul
adc
aam
leave
adc
fldcw
rcl
xlat
cwde
sti
pop
xor
fstp
sub
or
(bad)
or
fwait
jbe
retf
push
movs
pop
push
add
mov
jo
push
xor
jae
cmp
dec
enter
lahf
in
and
lds
mov
jnp
repnz
xchg
mov
pop
cwde
jp
pop
add
xchg
pop
test
dec
mov
adc
stos
push
push
sbb
fcom
dec
int
pop
sbb
and
loop
push
lds
sbb
and
mov
adc
mov
push
adc
xor
popf
mov
jmp
fadd
es
cmps
outs
fsub
adc
xor
pop
cmp
dec
sub
mov
or
leave
xchg
pop
sub
dec
mov
xchg
outs
adc
(bad)
jne
add
(bad)
div
add
in
jle
rcr
push
adc
xor
inc
inc
popa
cmp
mov
push
inc
push
or
jl
mov
add
ja
cmp
xchg
das
inc
sbb
mov
and
xor
cmp
pop
and
push
cdq
pop
in
and
rol
daa
or
ss
and
jne
pop
mov
pusha
lahf
push
fdivr
shl
push
sbb
add
enter
pop
rcl
mov
and
inc
sar
and
int3
push
ins
mov
lock
sbb
shr
dec
and
ins
xor
pop
sub
cmp
popa
mov
add
mov
add
or
xor
sbb
js
dec
sub
fs
aam
and
retf
adc
cmp
scas
or
pop
mov
lock
int3
push
mov
sbb
out
jo
dec
rcr
test
in
in
int
mov
(bad)
es
fsubr
sbb
int3
int3
xlat
or
ins
loopne
rcr
lock
sub
dec
aas
call
pusha
sub
(bad)
pop
(bad)
stos
mov
push
aaa
sbb
mov
clc
clc
fdivrp
xchg
nop
cmp
movs
push
push
sub
aam
push
and
mov
xchg
mov
bound
jmp
sbb
cmp
jae
pop
outs
cmps
cmc
dec
rcl
aam
fwait
sar
mov
iret
rcr
add
adc
pop
sbb
inc
add
inc
sbb
add
jle
ret
adc
pop
push
int3
jnp
jnp
mov
jnp
xchg
out
jo
mov
adc
call
add
lock
ss
push
int
ret
(bad)
mov
xchg
xchg
pop
cwde
inc
cmp
pusha
inc
or
lock
fcmovu
pop
xchg
pop
add
sub
mov
inc
sbb
xor
xchg
add
adc
test
push
sub
dec
push
xor
pop
movs
mov
push
jae
aas
and
cmp
das
jne
dec
lods
ss
mov
add
pushf
in
into
fild
(bad)
clc
aas
adc
xor
lahf
lds
cwde
push
sti
push
movs
mov
cwde
adc
(bad)
push
cdq
fdivr
push
mov
nop
xchg
xchg
(bad)
mov
mov
mov
call
xchg
mov
push
pop
sub
dec
cmp
mov
push
(bad)
dec
adc
cli
and
jne
xchg
loopne
nop
test
call
cwde
pushf
adc
sbb
fcmovne
sub
shr
adc
sub
ss
cmp
fcom
add
fadd
in
(bad)
clc
gs
sub
add
(bad)
cwde
push
jb
cld
xchg
adc
jl
shl
js
adc
sbb
enter
in
fild
jmp
add
sti
mov
loopne
or
scas
rcl
add
sbb
dec
jno
sub
lds
jecxz
and
mov
add
xor
sub
sbb
rol
cmc
mov
lldt
dec
sbb
(bad)
mov
pop
xor
pop
les
stc
ret
push
imul
mov
xchg
adc
sub
xchg
mov
push
and
add
sub
cmp
mov
shl
movs
jbe
mov
add
cmp
ffree
sahf
sar
pop
les
pushf
pushf
cmp
cwde
es
mov
(bad)
mov
jae
out
mov
mov
inc
mov
push
and
nop
iret
or
and
push
xor
jle
out
cmp
xor
retf
in
xor
cmp
scas
mov
xchg
cmp
add
cmp
cmp
(bad)
mov
push
sub
arpl
add
adc
les
std
and
test
cwde
push
hlt
and
test
(bad)
mov
or
dec
(bad)
push
aaa
adc
retf
or
add
clc
xor
mov
lods
inc
lea
in
in
fwait
in
mov
mov
dec
pop
aaa
add
test
ds
cmp
add
cmp
add
in
nop
sbb
lock
push
add
adc
call
lock
mov
sar
sub
daa
add
jmp
(bad)
pop
xor
dec
xchg
inc
or
mov
push
and
fcomi
cmp
mov
test
pop
jmp
dec
pusha
and
and
sub
push
test
and
xor
out
lahf
cmps
jl
in
fisttp
lods
mov
or
test
mov
sbb
sbb
lds
pop
xchg
xor
sub
mov
dec
inc
ins
cmp
inc
jne
out
out
pop
xchg
and
outs
add
imul
and
ins
adc
sbb
mov
int
popa
ds
ins
xor
scas
fidiv
out
arpl
addr16
fs
je
and
imul
test
out
cmp
ins
aaa
js
sub
inc
push
faddp
ins
inc
and
jo
scas
lods
in
xor
xchg
or
daa
add
and
adc
and
lods
push
enter
(bad)
xchg
movs
and
scas
push
test
rcl
call
push
jp
das
dec
sbb
jns
sbb
sub
ret
mov
push
std
fiadd
neg
jne
xor
inc
or
mov
rol
lahf
sub
add
and
retf
cwde
push
add
pop
add
push
jp
es
xchg
lock
inc
cs
imul
imul
jl
add
or
adc
mov
fcmovbe
add
add
jns
test
je
das
fcom
add
mov
outs
pop
xor
pcmpgtd
and
or
pop
shl
btr
mov
mov
inc
mov
(bad)
pop
xchg
cmp
(bad)
mov
sub
hlt
xchg
sub
jno
xchg
adc
test
rcr
lock
jb
icebp
bnd
jb
hlt
cmc
div
mov
scas
fld
loopne
cmp
add
cmp
add
xchg
jle
push
daa
or
jb
cmps
sub
mov
sub
jo
ss
scas
lods
mov
mov
dec
dec
and
mov
and
xchg
loopne
pop
sub
xchg
sub
mov
push
cmp
cs
dec
adc
add
adc
adc
add
pop
ins
and
and
enter
inc
dec
leave
lar
push
sbb
xlat
jo
jne
and
pop
cwde
push
push
sub
inc
mov
outs
dec
sub
push
xchg
imul
lock
add
or
inc
jmp
add
nop
pop
or
outs
and
enter
xchg
add
fcom
in
(bad)
pushf
mov
mov
cmp
sbb
retf
hlt
push
dec
dec
xchg
sub
mov
mov
scas
ins
mov
(bad)
inc
loope
xchg
pop
xor
mov
and
scas
aas
dec
and
cmps
xchg
mov
xor
data16
out
int3
sbb
jne
lea
int3
adc
xchg
mov
dec
mov
popa
mov
scas
fs
push
inc
cmp
cmp
sub
dec
test
mov
movs
in
sub
sbb
adc
das
xchg
inc
inc
or
dec
cwde
jg
adc
shl
sub
ret
pop
mov
mov
addps
in
enter
das
arpl
sbb
dec
clc
cmp
add
add
lock
adc
mov
shl
retf
add
div
rcl
add
addr16
aad
aam
ds
push
in
xchg
aam
or
fmul
xor
and
or
out
push
xor
leave
sar
jb
xchg
in
sub
mov
ret
dec
leave
rcl
push
cmp
mov
pop
inc
pusha
inc
fsub
xchg
jo
mov
sub
push
inc
adc
imul
pop
push
xchg
inc
scas
lods
arpl
repnz
or
xor
mov
xchg
jge
xchg
mov
nop
ss
int
mov
sbb
jne
xchg
lods
lea
inc
int3
mov
sbb
mov
(bad)
imul
les
movs
push
lods
pop
and
or
movs
loop
ret
repnz
lock
mov
or
pop
leave
push
mov
dec
inc
add
and
test
cmp
movs
sub
popa
and
xchg
test
jmp
mov
aas
in
(bad)
imul
aaa
retf
or
pop
imul
retf
js
ret
pusha
out
jl
xor
lock
daa
mov
(bad)
call
ins
pxor
stos
mov
sbb
xor
sub
out
dec
leave
in
push
in
in
jmp
movs
in
test
aam
(bad)
das
fsub
xor
(bad)
cs
add
or
mov
or
cwde
out
push
lock
sbb
dec
(bad)
(bad)
rol
retf
dec
cmps
sub
retf
dec
mov
lods
add
inc
loopne
js
fdivr
ja
mov
xor
(bad)
add
jp
pop
and
xor
in
fwait
aad
in
adc
sar
in
cs
mov
fadd
bound
wbinvd
and
cmps
or
xchg
xlat
sub
(bad)
fimul
mov
sub
push
add
cmp
or
xchg
jmp
call
xchg
or
mov
add
jmp
xchg
pmaxsw
movs
xchg
push
sub
and
push
xchg
cs
jmp
pop
jns
or
mov
sbb
ss
dec
cs
cdq
jo
in
leave
mov
inc
mov
hlt
inc
add
mov
adc
lea
sub
outs
xchg
xchg
les
jl
mov
jge
cld
outs
adc
push
fwait
inc
iret
xchg
xor
mov
adc
add
cmps
push
mov
cmp
inc
pop
dec
cmp
mov
out
mov
mov
inc
inc
adc
and
and
fcmovnu
jmp
sbb
sub
test
rdmsr
cli
fucomp
xor
arpl
shl
mov
sbb
fmul
mov
pop
into
adc
or
adc
pop
enter
inc
pop
xor
sbb
xor
retf
adc
add
xor
cmp
mov
js
add
sub
and
adc
jmp
add
jb
cwde
js
pop
fwait
push
ins
shl
mov
ss
inc
cli
sub
dec
mov
aaa
int3
add
add
(bad)
sti
inc
aas
fs
inc
dec
add
in
mov
shl
or
in
jmp
sbb
sbb
push
mov
in
jg
mov
dec
add
sub
adc
mov
test
in
fdiv
inc
mov
adc
mov
mov
dec
int3
movs
sar
adc
and
rcr
dec
dec
jmp
hlt
adc
push
and
pop
push
inc
xchg
iret
jmp
sbb
push
xchg
rcl
ds
jle
ret
je
xor
cmps
leave
mov
mov
(bad)
push
and
(bad)
aad
arpl
and
ret
pop
xchg
push
jle
mov
sub
mov
inc
mov
movs
sbb
inc
or
adc
mov
lods
sub
aam
inc
xor
push
je
stos
cdq
ss
push
xlat
pop
adc
ja
sbb
fisubr
sbb
adc
ror
arpl
dec
sbb
shr
pop
cmp
lahf
outs
jb
adc
cmp
test
and
adc
xor
loopne
call
jl
mov
xchg
mov
ins
xor
and
js
inc
mov
sub
mov
fild
sub
mov
add
mov
xchg
dec
mov
movs
cdq
in
aam
rcr
sub
or
add
ja
out
jge
nop
inc
xchg
sbb
push
out
adc
and
out
or
sub
mov
jmp
add
lea
jbe
add
mov
fwait
xor
jmp
fcom
add
xor
add
data16
lods
or
cwde
push
push
lea
xor
(bad)
out
nop
mov
cmps
or
sub
cs
inc
ins
sbb
(bad)
cmp
out
cmp
and
in
fist
es
jnp
loopne
aam
clc
clc
sbb
and
cld
or
call
pop
sahf
fld1
sub
adc
mov
and
add
in
loope
aad
ins
xchg
enter
test
not
adc
or
fsubr
(bad)
push
mov
je
call
xor
call
pop
int
xor
dec
mov
iret
xchg
mov
es
push
js
and
xchg
test
jbe
dec
enter
(bad)
jne
add
adc
(bad)
leave
mov
popa
cmc
cmp
inc
sub
stos
das
ror
loope
and
inc
arpl
and
jnp
adc
cmp
and
aas
in
mov
mov
in
mov
push
xchg
call
jnp
call
fstp
popa
push
xor
call
cmp
add
(bad)
push
cmp
add
rcr
pop
pusha
call
pop
sub
loopne
mov
fcom
xor
sbb
imul
ror
adc
call
fsub
int3
jmp
(bad)
xor
fsub
call
mov
(bad)
daa
sub
shl
into
and
loope
clc
in
mov
and
push
push
mov
mov
adc
mov
add
cwde
sub
rol
dec
mov
dec
jo
fld1
push
mov
dec
ret
loopne
int3
aam
mov
sub
das
adc
add
inc
shl
dec
es
or
ins
sahf
aas
fs
fadd
fcomp
lahf
loopne
inc
and
mov
dec
mov
(bad)
mov
xchg
xchg
cmc
add
cmp
lea
daa
add
outs
in
and
sub
or
dec
cmp
add
and
push
les
les
(bad)
mov
dec
adc
add
loopne
fs
sub
mov
adc
lock
mov
fistp
cmps
jge
je
int
xlat
xor
mov
push
or
cmp
jae
mov
mov
mov
inc
xchg
(bad)
es
rcr
add
push
jo
(bad)
mov
aaa
test
nop
stos
clc
adc
pop
mul
popf
push
mov
aas
cld
mov
std
push
push
push
push
mov
mov
loopne
push
inc
add
fisubr
sub
mul
data16
(bad)
fld
shr
add
mov
jle
mov
add
xlat
(bad)
mov
pop
pop
pop
pop
mov
int3
add
pop
test
stc
cmp
mov
dec
pop
mov
or
imul
ret
ror
adc
pop
ror
les
cmps
mov
adc
mov
fiadd
mov
dec
shl
outs
daa
fs
outs
aam
imul
push
mov
pop
psubusb
nop
call
in
or
aas
scas
inc
sbb
pop
xor
xchg
hlt
jg
iret
jo
mov
in
jb
mov
loopne
and
int
lods
test
dec
call
mov
or
dec
xor
xor
popf
jbe
scas
mov
add
jne
movs
imul
enter
add
sbb
jle
test
jmp
xchg
mov
pop
shr
icebp
in
sub
rcl
das
pop
push
push
(bad)
push
es
movs
cs
push
mov
mov
mov
or
xchg
ror
and
lods
or
sbb
(bad)
mov
cmp
cmp
xchg
add
xchg
in
scas
xor
test
add
cmp
ja
mov
cmps
add
add
in
pop
leave
pop
rol
dec
(bad)
jne
sar
add
sub
add
and
adc
and
in
pusha
popf
sbb
ja
fiadd
pop
lock
clc
mov
mov
test
std
cmp
daa
bound
push
push
push
xor
in
or
andps
adc
pop
inc
cmp
(bad)
xor
inc
xor
or
call
inc
in
inc
adc
sub
rcl
sub
in
mov
adc
add
inc
(bad)
in
mov
fiadd
add
jmp
fcomp
mov
outs
mov
lea
or
adc
ja
pop
dec
int3
mov
jg
push
cmp
mov
mov
nop
out
call
push
iret
ret
pop
rol
jo
pop
fs
push
jb
fucom
vdivps
shl
jg
daa
aam
ins
in
sub
call
or
jmp
jg
pop
loopne
sbb
cld
xor
cmp
fsubr
aam
scas
sub
mov
mov
arpl
idiv
and
push
(bad)
cs
adc
nop
cmp
mov
inc
pushf
xchg
retf
in
data16
inc
out
pop
lods
test
inc
cmps
xor
jmp
cmp
mov
shl
mov
xor
mov
pop
add
pop
add
mov
pop
ret
jmp
mov
fdivr
xchg
jo
icebp
cmc
loopne
sbb
inc
out
sbb
xor
xor
mov
mov
dec
or
pop
nop
aam
(bad)
dec
aaa
ss
aam
out
pop
pushf
mov
data16
jae
xchg
mov
pop
or
sub
popa
shl
jne
ror
sub
mov
lock
icebp
sbb
in
int3
push
xor
push
out
cld
push
fisttp
ds
dec
sbb
sbb
add
pop
fmul
mov
icebp
sbb
jl
adc
in
or
outs
add
mov
sbb
mov
add
and
(bad)
mov
xor
pop
add
pop
mov
sbb
cmp
icebp
sub
jecxz
sbb
sub
je
sbb
or
adc
outs
push
cmp
clc
clc
adc
pop
in
lea
xlat
push
xchg
jecxz
push
fbstp
xor
push
or
pop
cwde
or
cmp
mov
sbb
or
mov
pop
pop
xchg
inc
sub
mov
push
xchg
pushf
das
je
ds
sub
into
mov
dec
retf
sbb
and
lods
(bad)
sub
pop
cmp
jne
or
inc
ficom
inc
sub
pop
dec
add
inc
nop
outs
jl
cmp
add
sbb
aaa
mov
dec
or
test
jg
pop
adc
cmp
jb
fst
push
mov
add
mov
ret
sub
jbe
outs
ror
cli
add
in
push
ret
cmp
jae
mov
add
adc
repnz
mov
fcomip
jg
xchg
shl
or
mov
stos
ss
outs
add
pop
icebp
mov
ds
jb
repz
push
push
pop
popf
inc
inc
call
in
jg
mov
cmp
ja
or
sbb
gs
or
or
stos
add
fistp
sets
fidivr
ins
adc
add
add
mov
cmp
add
sub
or
out
pop
test
push
adc
je
mov
mov
(bad)
jmp
sub
es
mov
jmp
or
xor
pusha
mov
adc
gs
sub
outs
and
mov
jbe
mov
mov
mov
adc
fdiv
sbb
xor
leave
and
(bad)
icebp
jbe
lods
cmp
je
sub
jb
shl
mov
stos
and
test
or
or
xchg
(bad)
add
cli
das
(bad)
bound
push
dec
mov
sbb
mov
inc
inc
adc
push
jnp
rcl
push
sbb
mov
inc
nop
mov
or
and
test
add
pop
popf
dec
jl
xlat
push
and
call
ins
or
mov
xchg
push
inc
sbb
jg
xor
lea
call
sub
test
ret
out
popa
xchg
dec
out
loopne
std
sub
push
(bad)
push
ret
push
mov
call
aas
jmp
imul
jb
and
add
pop
je
dec
mov
or
add
outs
mov
pop
push
add
pop
or
add
cmp
jne
(bad)
popf
mov
repz
btc
ffreep
xchg
hlt
sub
inc
jbe
cmp
or
add
call
and
xor
data16
jo
xchg
xchg
neg
jp
ss
sub
sbb
leave
adc
push
ret
sti
or
sub
retf
push
or
ficom
adc
pop
test
cmp
push
push
push
inc
jne
sbb
cld
sub
mov
jne
cli
sbb
mov
lods
push
sub
loopne
pop
pop
imul
(bad)
mov
add
adc
add
ins
add
jae
ficom
pop
push
add
aaa
inc
mov
stos
and
dec
mov
fldcw
pop
sub
jne
inc
data16
and
add
cmc
add
pusha
retf
out
or
shr
cmp
movs
cs
fsub
mov
sub
mov
clc
jb
and
mov
arpl
nop
retf
inc
adc
push
or
and
mov
or
cmps
dec
inc
or
xchg
setnp
dec
jne
fucomip
out
sbb
fimul
jecxz
shr
ffreep
out
add
out
pusha
mov
dec
repnz
and
or
scas
cld
sub
pop
dec
les
sti
jne
ja
mov
repnz
arpl
inc
add
jmp
mov
add
stos
je
jmp
dec
cmp
and
ins
jmp
or
push
mov
add
or
or
xor
jmp
in
jmp
pusha
jne
or
jp
ret
add
wrmsr
sbb
push
mov
xchg
mov
mov
or
in
ret
adc
adc
fsubr
pop
add
scas
dec
div
push
enter
xchg
call
and
in
adc
inc
in
add
fiadd
cs
les
pop
jecxz
out
idiv
stos
mov
or
jecxz
aam
movs
mov
xchg
cmp
add
xchg
push
adc
ret
push
push
mov
test
or
bound
or
and
pop
cmp
leave
ss
inc
dec
add
dec
dec
adc
rol
fwait
adc
fcom
xor
pop
cdq
fsubr
(bad)
and
mov
push
add
push
adc
out
(bad)
sub
cmc
call
xor
sti
jp
aam
out
cld
and
or
xchg
or
jge
pop
fdiv
sbb
xor
mov
hlt
test
push
push
inc
sti
adc
rol
inc
or
cs
hlt
lds
mov
sub
dec
sub
and
mov
mov
jle
xchg
cmp
add
ins
cmp
loope
(bad)
ds
or
and
call
aas
enter
dec
dec
and
xor
imul
dec
adc
ret
dec
inc
clc
lahf
lock
mov
retf
(bad)
bound
jns
dec
cld
ins
shl
int
xchg
xor
lock
add
sbb
add
sub
add
aaa
jbe
in
clc
lods
or
push
or
addr16
lods
and
inc
inc
add
or
push
out
ret
into
xor
sub
or
xor
lea
ficom
inc
cmp
cmp
or
mov
adc
das
xchg
inc
sbb
(bad)
out
(bad)
out
test
inc
jae
inc
cdq
into
sub
jg
adc
adc
in
sub
cmp
bound
sar
popf
fnstcw
cmp
jno
sub
cmp
dec
repnz
or
daa
pop
mov
add
scas
jp
fmul
cmp
je
mov
xchg
push
js
or
fiadd
call
jmp
mov
and
mov
enter
dec
in
inc
clc
clc
int3
gs
cmp
jle
dec
loope
test
inc
popf
scas
lods
add
ret
adc
leave
sub
cmps
psrlw
(bad)
je
ds
pop
dec
inc
push
ret
shl
neg
movs
rol
sar
clc
xchg
or
ss
jns
push
dec
mov
clc
mul
nop
movs
(bad)
pop
dec
pop
scas
dec
jmp
sbb
rcr
and
xchg
(bad)
std
lfs
icebp
movs
leave
pop
lock
sub
aaa
xor
mov
push
loope
pop
xor
test
popa
inc
push
mov
inc
jb
popa
lea
adc
ds
scas
jne
(bad)
or
sub
mov
cmp
inc
adc
push
push
xchg
sti
add
mov
dec
xchg
fidiv
adc
adc
pop
pop
clc
add
cmp
push
in
in
xchg
popa
test
adc
or
inc
sbb
inc
loopne
pop
hlt
pop
sbb
mov
jmp
and
xchg
add
mov
jae
inc
retf
inc
push
push
(bad)
pop
pop
jmp
jb
in
out
pop
dec
add
fwait
dec
push
neg
aad
xchg
cmps
jmp
sti
cmp
adc
mov
adc
mov
leave
mov
cmp
je
pop
adc
inc
add
xchg
sar
jb
mov
cmp
adc
pop
xchg
jb
mov
pop
and
sbb
sub
out
mov
add
sbb
test
pop
mov
add
sub
ds
bound
jle
cmp
and
jns
jmp
xchg
data16
in
dec
push
pop
and
dec
mov
int
daa
mov
add
pop
push
inc
lahf
jns
mov
mov
adc
or
test
cmp
inc
cmp
jle
jb
mov
and
jae
cs
out
dec
jmp
or
add
or
cld
repnz
inc
pushf
cmp
(bad)
pop
out
pop
push
ja
push
lods
sbb
jle
push
add
dec
daa
pusha
xchg
paddusb
mov
jle
rol
jns
cmp
mov
push
mov
sbb
mov
and
mov
cwde
ins
ffree
pop
mov
fisubr
pop
xor
lds
xor
jp
mov
cvtpi2ps
jne
into
pop
rol
and
sbb
and
aam
adc
out
pop
push
cmp
fdiv
dec
pop
pusha
add
xchg
pop
rol
push
inc
pop
pop
mov
jmp
xchg
paddd
mov
adc
xor
add
or
add
pop
jg
out
sbb
mov
aad
rcl
jbe
cmc
cmps
jmp
addr16
pop
mov
(bad)
cmp
inc
inc
xor
jbe
inc
cld
call
rol
or
inc
adc
loope
sub
sbb
cs
and
sar
fwait
dec
inc
and
sub
push
cmp
xor
sbb
xor
in
and
fcom
call
jne
mov
jl
das
ret
call
pop
xor
repnz
add
add
stos
and
out
test
mov
mov
push
ja
fild
fdiv
pop
test
jge
dec
dec
mov
dec
jne
ins
retf
shl
call
or
jns
neg
neg
sbb
dec
mov
dec
mov
or
je
mov
sub
push
sub
sti
es
fdiv
shr
lock
dec
mov
mov
loopne
inc
push
add
out
mov
mov
adc
cmps
mov
fisttp
std
inc
push
mov
dec
add
add
sgdtd
mov
mov
or
inc
cmp
jne
fstp
shl
fmul
pop
repz
jmp
inc
add
add
loopne
loopne
adc
rcr
jge
fldcw
fnstsw
not
and
mov
out
inc
lahf
mov
xchg
inc
jle
cs
dec
test
jo
movs
mov
or
aaa
pop
jg
jle
inc
lods
stos
(bad)
dec
mov
jne
leave
loope
add
hlt
pop
ja
mov
inc
imul
mov
test
mov
xor
sub
les
sbb
mov
aas
or
xchg
aad
(bad)
push
dec
mov
pop
add
cmp
hlt
jle
test
adc
daa
lods
inc
sub
bound
(bad)
stos
xor
outs
xchg
mov
outs
jb
push
dec
xchg
pop
or
es
loopne
pop
fnstenv
xor
mov
xchg
jmp
test
test
mov
adc
mov
dec
adc
push
aaa
lods
enter
sbb
jl
sub
les
adc
cmps
inc
pop
jb
sbb
jbe
xchg
xchg
adc
shl
movs
dec
or
inc
push
sub
jo
mov
nop
add
add
sbb
add
fmul
add
iret
shl
int3
mov
jle
adc
stos
xchg
cmp
jle
push
sbb
inc
add
cld
xchg
inc
or
(bad)
les
popa
inc
or
inc
xchg
dec
in
mov
mov
and
cmp
mov
ret
(bad)
jmp
aaa
ja
pop
or
xchg
btr
sub
mov
xor
and
push
inc
xchg
lea
inc
dec
enter
aas
cmp
mov
rol
pop
cmp
add
inc
sbb
adc
mov
popa
push
jle
and
js
call
sub
pop
fdivr
aaa
adc
add
or
outs
jle
jb
in
mov
mov
ret
dec
xchg
sbb
or
jp
xor
fistp
fldcw
jmp
or
jnp
cmp
jb
add
ret
mov
out
jmp
dec
mov
or
inc
jmp
cmp
out
lea
fwait
(bad)
fst
ins
icebp
sbb
adc
push
sbb
sub
push
jo
mov
dec
xchg
sub
daa
(bad)
push
push
dec
inc
pop
div
or
pushf
add
jb
push
hlt
mov
push
leave
sbb
test
or
(bad)
nop
xchg
push
mov
in
and
es
shl
mov
mov
xchg
imul
clc
gs
retf
lahf
aam
push
mov
dec
or
lahf
test
fld
add
mov
jl
not
js
pop
imul
mov
call
test
jb
jp
jnp
and
xchg
push
xlat
sub
shl
gs
ds
jmp
dec
sar
inc
pop
xor
ins
fsubr
call
add
add
adc
popw
repnz
xchg
xor
sbb
jae
push
sub
cmps
mov
mov
arpl
out
push
nop
inc
xchg
nop
fs
sub
pushf
sub
adc
(bad)
push
mov
cwde
(bad)
push
les
sub
gs
pop
push
fs
cli
psubq
leave
leave
leave
leave
std
(bad)
jmp
leave
leave
leave
leave
loope
jecxz
leave
leave
leave
leave
in
out
leave
leave
leave
leave
jmp
leave
leave
leave
in
out
out
ror
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aad
xlat
fmul
leave
leave
leave
(bad)
fcmovnu
leave
leave
leave
leave
fstp
ffreep
leave
leave
leave
leave
rol
(bad)
leave
leave
leave
leave
(bad)
enter
leave
leave
retf
leave
leave
leave
leave
int
iret
mov
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
mov
leave
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
mov
leave
leave
leave
movs
cmps
cmps
test
enter
test
enter
scas
scas
dec
push
jns
nop
add
pop
enter
add
sbb
add
add
(bad)
add
add
in
add
xchg
inc
les
dec
fimul
sbb
fdiv
fcomp
adc
add
jae
clc
push
or
or
push
outs
mov
hlt
xor
(bad)
les
fst
and
add
int3
adc
or
mov
mov
outs
xchg
or
retf
xlat
sbb
push
add
nop
dec
and
add
mov
addr16
jns
data16
cmp
aaa
xor
data16
enter
and
adc
or
daa
pushw
adc
mov
mov
mov
xchg
cs
es
jge
push
fisub
int
int3
cs
jo
nop
in
mov
push
or
add
sbb
or
or
add
inc
xchg
or
sbb
pop
retf
idiv
outs
into
or
daa
cli
int
xor
ins
inc
ins
sbb
mov
or
jo
and
adc
sbb
mov
adc
nop
and
add
sbb
adc
xor
retf
mov
push
aas
mov
xor
pop
outs
or
adc
jo
shl
jbe
jb
fisubr
bnd
dec
pop
lock
bound
add
sub
sbb
nop
iret
cmp
xor
pop
inc
scas
dec
nop
pop
outs
xchg
jae
adc
outs
mov
mov
push
int3
push
dec
add
pop
jo
pop
test
push
(bad)
es
aad
sbb
mov
or
inc
jo
mov
pop
into
or
jle
dec
jbe
jmp
ret
sahf
ins
imul
mov
cmps
inc
xchg
ins
jbe
xchg
je
outs
outs
add
push
mov
in
cmp
cmps
and
dec
imul
adc
pop
xor
icebp
iret
pop
adc
push
pusha
aad
adc
outs
ficom
jne
pop
fild
aas
sbb
add
pop
(bad)
fmul
add
shr
mov
add
or
inc
pusha
rol
cs
sub
push
inc
add
retf
retf
fs
jmp
int3
adc
mov
and
and
or
rcr
sbb
(bad)
int3
add
lea
lahf
sbb
adc
imul
je
add
ds
mov
sbb
lds
cmp
dec
adc
shl
xchg
add
cwde
in
xchg
add
add
add
shl
cmp
rol
xchg
push
rol
cdq
cli
push
cmp
call
inc
mov
or
adc
in
rcr
mov
call
xlat
push
cmp
(bad)
rcr
stc
add
add
push
ins
or
xor
adc
test
imul
jbe
dec
lds
xchg
addr16
inc
add
in
dec
inc
sub
test
add
lds
xchg
add
and
jae
pop
sbb
push
mov
sbb
cmovae
mov
clc
mov
jmp
imul
lods
mov
retf
mov
sbb
fsub
mov
(bad)
fst
adc
pop
add
in
mov
inc
sub
stos
jne
mov
push
ret
xchg
sahf
jne
mov
es
inc
loope
xlat
sbb
dec
pusha
mov
into
cs
scas
sbb
loop
add
push
js
mov
pop
mov
push
sub
add
sub
adc
int
not
pusha
push
cmp
out
pop
ja
movhps
mov
fnstcw
(bad)
enter
mov
dec
mov
shl
cld
or
in
inc
pop
and
test
nop
daa
pop
shl
in
or
mov
enter
std
xchg
or
fwait
pusha
clc
sahf
adc
cmps
and
push
out
sbb
sbb
push
xchg
mov
add
push
aam
sub
outs
lock
cmps
pushf
(bad)
inc
mov
mov
mov
aaa
sbb
popa
imul
out
retf
sbb
das
neg
out
pop
and
stos
popa
xor
das
push
js
mov
pop
push
push
daa
cmp
rcl
sbb
sbb
jmp
pop
sub
in
enter
push
(bad)
lock
add
adc
inc
ins
aaa
hlt
daa
or
outs
dec
aaa
sar
mov
leave
and
js
into
lods
mov
inc
lock
push
lods
ret
nop
mov
cmp
cdq
fsub
pop
adc
xor
mov
jns
scas
mov
mov
aad
dec
fistp
mov
fdivr
retf
fisttp
fiadd
aam
loopne
rcr
movs
fist
inc
push
lock
jg
push
pop
sbb
push
imul
and
idiv
lock
loope
je
shr
pushf
jmp
jl
ins
mul
popa
mov
jnp
mov
cmp
pushf
hlt
sbb
xchg
xchg
in
hlt
cld
mul
idiv
and
cld
mov
nop
(bad)
push
pop
add
xor
dec
aas
movs
adc
adc
mov
add
hlt
aas
mov
push
or
push
mov
sti
mov
sti
xchg
or
pop
push
popa
or
sbb
mov
fdivr
push
or
(bad)
or
ret
(bad)
es
inc
adc
xor
movs
push
or
xor
mov
je
jo
xchg
push
pop
push
sbb
push
adc
dec
mov
(bad)
xor
push
mov
cs
(bad)
dec
jle
les
xchg
sub
lods
call
add
es
pop
sbb
aaa
sub
sar
test
ss
xchg
ds
add
dec
adc
jbe
lahf
inc
std
jmp
ret
rol
xor
inc
dec
jne
sub
shr
sub
or
mov
pop
test
gs
gs
scas
inc
inc
mov
(bad)
in
loop
dec
or
pop
ret
ins
sbb
lahf
adc
jg
test
jge
mov
jne
popf
dec
push
cmp
popa
hlt
cmps
xchg
in
mov
nop
and
push
jne
cmp
lea
imul
ret
popf
repz
fs
mov
cdq
test
or
and
or
and
xor
ror
cdq
lock
imul
lods
xor
or
stos
inc
jge
xor
scas
in
dec
call
and
or
das
rol
cmps
sub
fisubr
add
jmp
pop
jns
out
fidiv
pop
ret
sbb
add
or
frstor
rcl
rol
push
adc
dec
sbb
jg
cmp
mov
jge
sbb
fld
or
into
sub
mov
std
aas
push
repnz
outs
or
pop
sbb
inc
add
adc
fs
mov
fisubr
imul
pop
xchg
jnp
cmp
cmp
mov
and
sbb
or
shl
mov
data16
xor
rcr
pop
inc
sbb
aaa
sub
or
adc
into
in
mov
jmp
xchg
ins
sbb
add
push
mov
fcomp
adc
cmp
and
and
or
and
dec
xchg
cmc
gs
pusha
xchg
test
call
xchg
mov
shl
(bad)
ins
mov
movs
call
fidiv
scas
pop
dec
outs
pop
dec
pop
cli
xchg
mov
popa
jbe
add
jb
ins
push
add
xchg
sub
cwde
mov
pop
out
add
add
xchg
popa
addr16
rol
xor
gs
setg
or
ss
in
inc
mov
ror
jno
popa
mov
add
add
imul
fwait
jmp
jns
ja
test
repnz
inc
dec
mov
dec
and
daa
push
adc
fldenv
sub
add
and
jo
outs
lds
and
loopne
loop
jb
das
dec
mov
outs
inc
push
xchg
enter
mov
fmul
and
fadd
ss
jg
and
mov
das
push
sbb
pop
xchg
fs
sub
sbb
(bad)
pusha
pop
dec
outs
popa
inc
pop
or
pop
rcr
push
and
movs
inc
xchg
jg
retf
ins
or
adc
pusha
adc
adc
add
out
sahf
inc
cmps
pusha
enter
or
lds
cmp
outs
jne
pop
xchg
add
adc
or
lahf
dec
in
xor
push
cld
cmp
add
imul
sbb
sub
cmp
popa
dec
daa
or
inc
das
or
enter
pop
push
adc
nop
test
add
sub
fxch
test
(bad)
xor
pop
test
sub
inc
sbb
xchg
stc
inc
pushf
add
dec
call
adc
pop
mov
(bad)
and
inc
mov
mov
dec
jle
or
mov
and
sbb
push
inc
or
and
or
adc
dec
aas
lds
nop
aas
ds
dec
cmp
dec
or
or
imul
inc
push
dec
push
xor
std
push
pop
dec
inc
dec
dec
arpl
pop
jae
popf
push
adc
inc
push
add
cmp
dec
inc
inc
push
xchg
push
dec
dec
and
mov
inc
popa
out
jmp
out
xchg
fidivr
add
xor
cld
inc
push
inc
inc
dec
not
dec
sub
mov
mov
(bad)
cmp
inc
mov
xor
test
das
mov
or
mov
and
or
pop
adc
and
sbb
dec
inc
dec
add
mov
fs
push
push
xor
mov
clc
mov
nop
inc
sbb
scas
and
cmp
and
mov
jbe
jge
mov
push
inc
and
aaa
xchg
call
inc
or
push
add
cmp
ror
fdivr
fwait
sub
cwde
jecxz
mov
and
sbb
aam
pop
xlat
and
and
or
or
and
into
jmp
adc
ret
aaa
aas
clc
push
pop
pop
daa
inc
in
sbb
mov
popa
mov
popa
xor
add
test
push
and
xor
pop
mov
scas
inc
mov
dec
jge
jge
add
mov
adc
sbb
lds
inc
mov
sbb
and
loopne
push
aaa
jo
and
lock
mov
inc
cmp
je
add
adc
fsubr
push
or
call
and
mov
aas
mov
pop
inc
xor
add
dec
scas
and
sar
push
das
or
fcomp
xchg
and
xlat
pop
retf
cmp
add
(bad)
or
and
add
fild
lods
add
je
fs
aaa
push
in
mov
dec
jne
or
test
fwait
shl
lock
imul
inc
or
add
inc
sbb
jnp
cmps
inc
int3
enter
nop
stos
pop
inc
add
xor
int
push
sub
adc
ret
jmp
dec
sub
sbb
pusha
pop
mov
cwde
inc
xor
add
push
jne
pop
jmp
ds
pop
shl
xor
mov
fnstcw
rol
rcl
leave
sbb
jnp
mov
jmp
sub
or
push
jp
rcl
mov
hlt
cwde
outs
or
or
mov
fld
xor
scas
xor
xchg
pop
addr16
pop
adc
jns
adc
ret
adc
xchg
jp
sbb
sbb
xchg
pop
int
test
xor
push
enter
int3
je
stos
ss
mov
xlat
mov
lea
jae
aaa
and
shl
or
mov
push
push
inc
jle
(bad)
neg
jae
shl
addr16
popa
lods
push
stos
mov
clc
neg
std
jne
xchg
mov
sbb
test
int3
sbb
lods
loopne
movs
cmp
push
es
cmps
and
add
dec
sbb
adc
xor
adc
push
mov
push
pusha
add
ret
xor
push
pop
addr16
dec
mov
mov
dec
jb
scas
stc
xchg
adc
sbb
xchg
pushf
sub
in
mov
out
cmps
movs
xchg
mov
xchg
sbb
sub
(bad)
xlat
jp
adc
or
mov
pop
pop
in
sub
js
xchg
add
dec
enter
cmp
push
inc
test
xchg
lock
dec
jno
sub
js
fs
mov
jb
add
jae
xchg
adc
adc
inc
iret
je
sbb
icebp
jg
or
call
push
hlt
aas
add
pop
sbb
mov
jl
fcomi
mov
xchg
and
sub
inc
enter
adc
pusha
jp
jae
jns
js
inc
cmps
in
pop
xchg
adc
or
ret
bound
xchg
mov
or
adc
and
xchg
outs
xor
call
jge
imul
das
xchg
inc
push
cdq
aas
test
cli
add
or
fimul
inc
and
lds
adc
sbb
mov
je
popf
or
mov
lods
ins
sbb
imul
xchg
popf
pusha
jmp
hlt
jp
or
in
(bad)
jmp
and
xchg
jmp
adc
bound
stc
in
call
and
(bad)
cmp
add
in
xchg
jl
xchg
sar
and
sub
imul
mov
jge
imul
ja
in
retf
ret
inc
adc
enter
sahf
data16
adc
daa
adc
adc
and
fdiv
pop
ss
xor
cli
mov
adc
and
jns
or
sub
jmp
adc
es
ins
mov
inc
sub
adc
cmc
sub
fld
cmc
mov
inc
inc
(bad)
xor
addr16
dec
into
in
xor
xchg
outs
push
jmp
popa
mov
clc
mov
imul
or
add
stc
or
push
lahf
mov
test
and
popa
sbb
sub
idiv
lahf
sub
mov
addr16
jae
js
xchg
inc
fcomp
retf
mov
jae
xor
dec
mov
shl
or
sbb
pcmpgtb
ror
or
hlt
addr16
scas
push
push
icebp
add
cmp
xlat
mov
nop
sub
push
xchg
push
cmc
or
adc
xor
xchg
mov
sub
jecxz
loope
jg
call
jbe
xchg
mov
or
int
idiv
sbb
ins
jmp
pop
add
jae
push
xor
lods
push
push
test
(bad)
nop
xchg
jbe
sub
push
loopne
xchg
sbb
ret
jo
jmp
push
shl
ins
push
xor
lahf
adc
mov
call
xchg
or
pop
xor
sub
outs
inc
pop
pop
or
mov
(bad)
and
sbb
hlt
mov
and
gs
(bad)
call
dec
sbb
and
cmps
push
das
movs
cmp
test
sub
inc
or
push
adc
ds
pusha
inc
test
in
imul
jbe
sbb
and
(bad)
div
sub
or
js
push
push
adc
rcr
add
add
mov
js
or
out
or
das
pop
dec
cmp
mov
xor
add
ds
lahf
mov
daa
fmul
hlt
xor
nop
cs
or
pop
push
sti
dec
pop
inc
pop
jo
addr16
or
mul
nop
fisubr
leave
inc
lahf
mov
mov
xchg
add
xchg
or
or
mov
lods
retf
(bad)
push
cmps
mov
mov
sub
fld
adc
xlat
mov
push
js
ins
or
(bad)
xor
dec
cmp
xchg
cmp
nop
jl
stos
adc
repz
mov
sbb
clc
fwait
sub
sub
mov
js
loop
in
or
jmp
imul
sub
mov
test
adc
rcr
mov
adc
lds
sub
lods
jmp
test
jo
mov
lea
movs
movs
mov
cmp
xor
mov
mov
jb
or
add
cmps
inc
sub
mov
cmp
jl
xchg
mov
jno
mov
sub
push
jmp
pusha
mov
shl
inc
or
leave
push
outs
std
or
mov
push
(bad)
gs
mov
or
aam
mov
out
add
push
xchg
or
daa
sub
adc
out
xchg
outs
xchg
and
xchg
adc
sbb
sbb
add
and
ret
push
push
push
or
sbb
jbe
or
push
pop
jo
mov
adc
je
test
je
ins
inc
pop
fsubr
sub
xchg
lock
jns
fist
or
xor
int3
mov
or
xchg
add
xor
and
fsub
aas
mov
pop
test
push
ret
pushf
movs
xchg
jl
jg
xor
fs
out
repnz
xchg
cmp
mov
pop
test
ret
push
ror
mov
fbstp
bound
daa
jae
push
mov
enter
std
pop
add
or
in
sti
push
addr16
push
fs
xchg
iret
stc
cmp
dec
sahf
xchg
imul
xchg
enter
adc
mov
or
outs
add
leave
push
dec
mov
cmps
dec
or
test
popf
inc
adc
xor
repz
fadd
xchg
mov
and
cli
mov
inc
pop
pop
pop
adc
push
xor
test
mov
sub
mov
test
jmp
mov
adc
test
xchg
sbb
shr
xchg
inc
div
ror
or
xchg
in
loopne
xchg
push
jo
lock
xor
xchg
or
mov
ret
add
jle
add
mov
bound
popf
es
adc
and
xchg
les
pop
fisttp
ror
pop
bound
js
fist
sbb
nop
sti
jge
lods
bswap
sub
loopne
pushw
or
fbstp
repz
pop
je
pop
movs
inc
dec
(bad)
lahf
and
retf
adc
push
mov
cmp
adc
or
xchg
push
xchg
enter
inc
test
add
adc
ins
popa
popa
out
shl
fcom
mov
jbe
jne
mov
adc
test
and
aas
ins
jecxz
jno
pop
lds
push
mov
xor
movs
sub
shl
add
test
lods
inc
pop
sub
scas
adc
adc
cmp
popa
popf
and
cmovg
mov
cwde
ins
arpl
and
xchg
dec
stos
mov
(bad)
mov
jnp
push
(bad)
ja
pop
(bad)
test
test
out
lods
xlat
push
inc
and
icebp
xor
or
inc
in
mov
lods
loopne
add
or
popa
and
mov
pop
add
arpl
sub
dec
jmp
jns
sub
xor
out
cmova
inc
test
xor
push
mov
jecxz
jle
push
loopne
lods
mov
jl
popa
shl
std
inc
bound
pop
cdq
inc
pusha
xor
add
mov
in
leave
jae
test
bswap
test
mov
fiadd
mov
call
xchg
imul
sbb
sbb
xchg
aad
inc
dec
in
jo
retf
addr16
add
add
out
int3
add
cs
sub
mov
pop
mov
inc
adc
in
or
cmps
mov
mov
jo
jl
jmp
xchg
dec
jae
pop
lock
loopne
pop
in
push
add
add
push
cmp
fidiv
loop
sub
adc
adc
sub
add
retf
push
clc
(bad)
dec
movs
fwait
lods
push
scas
rcl
div
out
pop
push
inc
dec
js
and
mov
in
adc
jg
push
inc
pusha
mov
dec
jns
jmp
push
xor
and
(bad)
mov
cmps
test
shl
mov
mov
jmp
add
sti
(bad)
(bad)
adc
out
mov
dec
shr
rol
add
hlt
add
scas
push
inc
jb
mov
data16
xchg
test
add
jmp
ds
cmp
mov
ds
bound
lahf
out
sti
xor
movzx
lea
int
pop
xchg
pop
jb
xor
in
jmp
ins
int3
out
scas
pop
enter
aad
hlt
lea
aaa
lock
js
dec
xchg
lahf
cmp
shl
add
xor
ret
add
mov
and
add
and
icebp
dec
add
mov
push
pusha
div
in
pop
sbb
mov
xchg
push
or
das
imul
pusha
mov
xor
(bad)
jb
mov
mov
es
sbb
jno
out
shl
jb
xchg
loope
jbe
ds
push
aaa
adc
push
and
xor
add
call
sbb
xchg
xor
sub
sub
adc
inc
pop
mov
sbb
movs
pop
fucompp
fisub
out
outs
pop
adc
pusha
nop
add
sub
iret
loopne
shr
(bad)
xchg
or
sti
pop
call
add
jb
cs
adc
cdq
xor
sbb
jmp
lods
dec
xchg
or
ret
inc
sbb
popf
fs
push
sub
call
mov
test
xor
leave
push
mov
xor
loope
mov
xor
out
test
mov
(bad)
rcr
or
mov
aas
cmc
add
aad
add
dec
push
aaa
add
jno
mov
hlt
xchg
sub
mov
cwde
mov
dec
or
call
ret
pop
test
clc
addr16
mov
rcl
loop
push
adc
mov
and
push
push
fwait
retf
cld
inc
dec
inc
add
inc
pop
jo
rcl
adc
clc
cmp
jg
popf
or
imul
in
xchg
and
inc
jg
scas
inc
xor
mov
add
das
in
outs
fmul
inc
shl
ss
mov
and
add
or
push
pop
cmp
push
pop
xor
adc
sbb
dec
mov
cmp
int
int3
imul
fcomp
jmp
scas
fdivr
pop
in
xor
jb
or
loopne
inc
out
arpl
xor
mov
sbb
mov
sub
aam
push
in
push
mov
nop
jo
cmp
dec
inc
ret
fcmovb
(bad)
gs
jl
dec
lea
adc
add
scas
jo
rcr
jge
ja
cmp
call
dec
jne
(bad)
pop
lods
nop
push
cld
push
sbb
js
pop
jl
sub
xor
or
enter
mov
ss
mov
sar
scas
pop
cli
xor
dec
out
pop
das
or
push
mov
push
push
mov
pusha
sbb
sub
jl
jle
repnz
fdiv
jmp
sbb
add
mov
lods
mov
inc
push
push
pop
mov
mov
or
mov
sbb
push
mov
jbe
adc
outs
push
daa
lock
push
pushf
mov
xchg
shl
cmp
mov
push
jns
mov
xchg
cmps
cmp
aaa
inc
jmp
es
push
add
cmps
clc
cli
or
mov
ds
add
mov
cmp
dec
mov
sar
add
push
sbb
push
maskmovq
idiv
pop
dec
jmp
sbb
pop
or
add
mov
or
mov
les
xchg
mov
sahf
mov
rcr
mov
add
hlt
loope
mov
push
jb
sub
push
jmp
mov
cmc
outs
adc
jmp
daa
or
sahf
scas
inc
lods
jecxz
ins
stos
inc
push
inc
or
inc
and
mov
add
cmp
dec
add
and
and
enter
sbb
clc
enter
or
xor
retf
sbb
(bad)
inc
bound
xor
out
cmps
cld
cmp
pop
in
jp
dec
(bad)
neg
je
fld
or
sub
scas
and
or
pop
ins
jae
popa
lods
lds
mov
pushf
xchg
xchg
and
(bad)
mov
test
loopne
inc
aaa
aas
imul
jge
call
dec
cmp
fs
ret
pop
fs
dec
or
stc
add
rcl
pushf
add
sbb
mov
inc
(bad)
aam
(bad)
movs
and
jnp
pushf
xor
jnp
mov
aam
pusha
out
add
daa
pushf
inc
add
jecxz
shl
push
dec
repnz
sbb
adc
jbe
mov
cs
mov
std
jo
(bad)
push
in
mov
scas
fadd
xchg
jae
ret
dec
add
loopne
dec
call
les
dec
jb
outs
dec
int
in
es
int3
and
adc
out
lahf
pop
add
retf
jmp
sub
xchg
and
cvttps2pi
mov
push
(bad)
clc
les
outs
dec
ret
imul
fild
enter
test
mov
mov
pushf
mov
add
and
rol
fdiv
loope
imul
movs
cdq
fsubr
loope
xor
pusha
aam
cmp
adc
cmp
jno
int3
xor
mov
out
add
sub
cmovne
test
jle
pop
inc
out
mov
cmps
test
sbb
call
cs
(bad)
hlt
inc
out
adc
inc
stc
adc
adc
jmp
clc
out
pop
sub
test
xor
xor
inc
push
retf
pop
fimul
lods
push
add
or
aaa
popa
inc
inc
sub
mov
movs
xor
xchg
cs
jo
push
mov
cmp
xor
cmp
cmps
mov
je
das
je
test
pusha
add
daa
adc
into
repnz
adc
mov
push
movs
loope
sbb
inc
adc
repnz
in
adc
add
cmp
cmp
and
cmp
inc
jmp
pop
mov
ret
and
fs
and
inc
inc
mov
addr16
and
and
xor
aaa
push
call
sbb
jg
dec
xor
ja
add
mov
mov
inc
jmp
xchg
test
sub
sbb
aaa
cmp
add
pop
pop
outs
cmp
sub
shl
rol
and
adc
xor
adc
dec
das
cld
ja
inc
mov
xchg
rcl
dec
pop
movs
add
in
push
ficomp
add
pop
jmp
adc
dec
pop
iret
lea
xchg
cdq
call
fisttp
fs
ja
jns
loop
mov
nop
dec
repnz
xchg
lock
or
jnp
mov
call
cmp
test
sub
call
cmp
fwait
ret
dec
mov
inc
pop
sub
ja
popw
gs
xor
sub
sbb
dec
sbb
inc
dec
adc
cld
or
ins
test
lds
xor
sub
pop
or
(bad)
ret
mov
sbb
in
rcl
adc
or
and
lock
fcomi
sub
or
fnstcw
lock
test
push
adc
dec
dec
repnz
jmp
shr
add
add
inc
or
push
ucomiss
lods
rol
xlat
and
xchg
test
xchg
dec
adc
add
push
aas
or
adc
out
sub
or
pop
pop
in
lods
add
mov
test
pop
mov
or
call
dec
adc
bound
arpl
ror
and
(bad)
or
imul
and
push
sub
inc
fidivr
or
les
xchg
mov
outs
or
mov
out
movs
xor
call
(bad)
dec
add
push
cli
stos
xchg
xlat
inc
sbb
sbb
push
pusha
mov
mov
sti
sbb
outs
ins
sbb
scas
sbb
add
push
sbb
leave
clc
ja
mov
jmp
iret
or
or
add
in
retf
push
cmp
and
push
hlt
les
dec
fimul
push
mov
mov
push
shr
cmps
sub
into
pop
sub
imul
adc
xor
mov
cmc
mov
xor
dec
test
jecxz
cmp
add
or
mov
mov
cmp
pop
jb
sbb
sbb
mov
adc
add
mov
fldenv
das
dec
call
cmps
les
sbb
and
ret
aaa
cmp
hlt
push
inc
add
add
hlt
in
shl
leave
ret
pop
mov
jmp
test
mov
and
in
popa
aas
pop
cli
lea
adc
mov
cmps
aad
jae
mov
mov
arpl
retf
or
movs
nop
cmp
jmp
jne
and
pop
push
das
aad
aaa
cmps
mov
jge
mov
jnp
mov
xchg
inc
mov
add
sbb
ja
and
int
add
jg
pop
enter
lods
xchg
pop
repnz
int3
mov
add
imul
rcl
sub
test
fild
push
mov
sub
pop
mov
mov
mov
dec
inc
test
aam
ror
mov
int3
cmps
xchg
lods
inc
xchg
or
and
fsub
sub
xchg
jb
cmp
movs
popa
xchg
jg
inc
cmp
xor
xchg
xchg
and
scas
xor
push
mov
sub
jmp
inc
jbe
les
add
adc
jbe
nop
nop
stos
iret
sub
xchg
or
das
push
and
mov
sub
sbb
xchg
daa
sbb
retf
sub
pop
and
push
and
adc
cld
ins
sbb
ins
mov
daa
aas
pushf
jmp
or
push
cdq
call
dec
hlt
les
xor
and
cmps
mov
mov
mov
aam
adc
or
sub
pop
xor
xor
jl
ror
pop
mov
arpl
mov
mov
arpl
fcom
fs
into
fs
push
xor
lods
cmp
push
jne
test
inc
and
jns
nop
push
or
push
xchg
sub
daa
or
loope
pop
sub
mov
sub
loop
adc
or
std
jae
in
es
push
push
lods
inc
or
test
aam
add
ror
adc
in
mov
xor
adc
adc
dec
inc
adc
mov
sti
jns
and
dec
enter
iret
hlt
inc
sub
sub
neg
int3
mov
sahf
push
inc
(bad)
loop
ss
sub
or
adc
sbb
aaa
loope
adc
movs
fmul
das
lods
add
aas
sub
adc
rol
gs
jae
adc
sub
repnz
sbb
aaa
test
shr
mov
adc
inc
sub
xchg
je
sbb
cwde
sub
add
xchg
xor
and
inc
xchg
test
adc
popa
jae
sub
xchg
test
pop
sub
aas
loopne
and
lods
movs
popa
and
hlt
add
ins
mov
add
stc
es
sbb
jge
mov
and
pop
sbb
pop
lds
inc
mov
int
dec
retf
or
rcl
ja
inc
mov
jle
movs
es
pop
or
dec
arpl
mov
cmp
push
xor
aaa
aas
pop
jge
jnp
jb
enter
sub
mov
movs
aaa
mov
or
or
int3
and
popf
sbb
addr16
push
movs
mov
sbb
xor
mov
or
dec
adc
push
iret
jecxz
fist
(bad)
xor
adc
call
sbb
sub
mov
aaa
push
shr
lods
scas
pop
push
(bad)
push
sub
into
lock
leave
movs
adc
mov
mov
dec
int
or
gs
call
inc
mov
nop
lock
sub
bnd
and
mov
dec
les
or
xchg
or
push
mov
loopne
test
sbb
fnop
pop
or
sbb
push
adc
xchg
jecxz
or
add
add
retf
fld
add
or
icebp
mov
inc
or
and
cmc
pcmpeqw
jnp
mov
adc
mov
arpl
mov
sub
push
mov
and
jp
ja
mov
inc
dec
inc
je
pusha
push
sub
adc
add
neg
or
icebp
test
xor
mul
push
push
in
mov
mov
sub
mov
lock
add
lods
sub
inc
nop
or
test
inc
movs
mov
mov
inc
bound
adc
pop
(bad)
or
lock
mov
xlat
int
call
out
movs
mov
cld
stc
sub
inc
or
mov
add
in
mov
add
xchg
fcomi
lahf
dec
inc
jns
and
cli
adc
push
xchg
movs
outs
pushf
pusha
mov
push
inc
or
cmp
fsubr
ret
cmp
ficom
mov
or
retf
ror
sub
pusha
and
push
mov
or
mov
and
movs
or
sbb
inc
add
inc
sub
or
imul
push
dec
fdivr
mov
sub
outs
stos
add
outs
lock
pusha
fmul
pop
adc
sbb
call
push
sub
push
fadd
and
in
and
movs
or
pop
xchg
hlt
push
rol
cmps
adc
test
sbb
xchg
adc
xor
stos
adc
fsub
mov
push
cmp
sub
jbe
imul
or
test
and
mov
lods
xor
scas
retf
or
mov
or
adc
nop
dec
push
mov
sbb
jmp
or
jp
clc
cli
rol
jge
push
or
or
pop
aas
das
clc
test
xor
stos
dec
or
push
ins
pop
out
test
in
nop
inc
cs
mov
or
adc
or
or
cmp
sbb
loopne
leave
inc
xor
push
mov
jns
push
cld
or
push
fs
leave
and
ficom
or
add
fistp
or
stos
jo
dec
sub
shl
ret
pop
jecxz
les
mov
repnz
sbb
jno
mov
sbb
lds
sbb
and
xor
int3
or
or
fnsave
or
les
mov
sbb
nop
cmp
jbe
xchg
icebp
sar
outs
dec
add
mov
or
lock
jp
lods
xchg
dec
mov
push
dec
push
push
fcmovbe
loope
add
inc
adc
int
popa
and
mov
dec
sbb
dec
aaa
popf
dec
adc
sbb
push
inc
outs
and
outs
or
or
mov
loopne
xor
push
(bad)
mov
xor
call
and
adc
ficomp
sbb
push
out
in
jns
dec
mov
jecxz
xor
jae
push
mov
sub
push
arpl
ret
mov
jae
cmp
test
inc
pop
xor
push
xchg
dec
cmp
jno
daa
mov
or
pop
in
push
inc
mov
cmp
(bad)
jp
inc
test
xchg
scas
in
dec
movs
out
mov
cmps
cmp
mov
adc
pop
sub
or
repz
xor
pop
push
and
stos
sub
pop
loop
ja
cmp
push
dec
or
or
fist
js
jbe
pop
enter
dec
jne
cwde
out
out
enter
or
jl
into
mov
xor
add
dec
addr16
aam
in
sti
nop
push
add
aas
pusha
sbb
(bad)
outs
dec
ja
xor
xor
rol
jge
sub
push
loopne
jmp
stos
dec
movs
sbb
imul
cmp
xchg
mov
test
xor
sbb
lea
and
je
das
call
movs
push
repnz
mov
xchg
mov
iret
imul
pusha
or
xchg
add
out
pop
mov
pop
aaa
ja
rcl
ss
adc
xor
pusha
cmp
int
xor
xchg
and
and
pop
adc
cmp
icebp
test
mov
out
cmp
jge
aad
aaa
repnz
pop
fwait
or
clc
dec
xchg
push
imul
rcr
jnp
sub
je
pop
imul
(bad)
sub
mov
sbb
or
adc
push
mov
nop
mov
push
imul
add
jns
imul
add
add
scas
dec
inc
add
dec
pop
pusha
aaa
xor
mov
gs
dec
fs
and
imul
clc
fbld
sbb
pop
pop
or
pusha
pop
movs
inc
or
call
loope
add
test
ja
dec
cld
(bad)
test
and
mov
jns
or
adc
dec
loop
jo
push
in
push
and
mov
(bad)
and
out
sbb
(bad)
push
pop
mov
iret
mul
xor
out
lock
inc
push
mov
fcmovu
cdq
adc
and
stc
adc
movs
adc
dec
pop
daa
fistp
add
jne
add
adc
ja
ss
pop
cmc
adc
ds
icebp
lock
xor
aaa
jns
inc
jne
sub
ja
jns
or
add
mov
icebp
sub
push
mov
pop
mov
movs
or
dec
or
and
mov
loopne
cs
pop
xor
jmp
jae
imul
or
inc
adc
test
or
in
mov
in
mov
sbb
and
push
mov
les
sub
dec
ss
adc
fadd
gs
pusha
xlat
xchg
push
aad
adc
cld
cmp
bound
push
out
out
or
sbb
or
jecxz
nop
adc
mov
cdq
imul
sbb
add
ins
inc
frstpm(287
and
lods
cwde
(bad)
fld
inc
rcr
sub
sbb
sbb
xor
sub
mov
mov
nop
pop
lock
rol
fcom
mov
fs
cmp
dec
mov
xor
and
aaa
dec
mov
cmp
and
ins
(bad)
fisttp
jnp
hlt
mov
jp
pop
jp
push
mov
ficomp
cs
inc
mov
iret
and
nop
fsub
sbb
cmp
inc
pop
scas
cmp
mov
sbb
js
mov
mov
mov
xor
scas
mov
loope
xor
dec
jge
sub
push
icebp
fst
pop
sbb
loop
mov
(bad)
jae
adc
in
xchg
fs
lock
mov
gs
iret
not
ins
loope
ss
dec
add
sub
jne
jno
ror
mov
dec
lods
pop
out
pusha
adc
push
mov
adc
(bad)
daa
hlt
rcr
xchg
mov
aas
je
and
dec
sub
inc
(bad)
push
aam
inc
push
cli
xchg
cmp
(bad)
or
sub
jecxz
xor
in
loope
les
fs
mov
adc
add
js
mov
xor
push
and
xchg
or
les
nop
pop
dec
inc
push
in
sbb
sahf
xor
ss
cmp
mov
pop
cmp
mov
retf
rol
sbb
test
shl
and
and
push
sbb
aam
test
inc
cmc
push
add
pop
mov
adc
cmp
aas
mov
sub
sub
ins
mov
sub
and
add
xchg
xor
inc
push
repnz
fsubr
in
adc
pop
test
in
nop
dec
test
push
pop
adc
pop
imul
push
aam
push
jne
push
imul
retf
call
leave
(bad)
repz
bound
mov
popa
inc
mov
cwde
clc
shl
add
and
test
sbb
mov
mov
in
jo
push
add
mov
ins
sub
sub
mov
jl
jge
popf
sbb
call
imul
adc
cwde
sub
cmp
sub
loop
push
mov
pop
or
inc
jp
imul
xor
ins
iret
mov
jge
or
jl
ret
and
xchg
sbb
sahf
outs
movs
movs
jp
lods
xchg
xchg
push
shl
mov
popf
dec
cmps
shr
lods
pusha
jno
and
das
xor
and
jb
inc
(bad)
dec
stos
movs
sbb
push
sbb
(bad)
xchg
shl
hlt
dec
mov
leave
add
add
call
movs
lea
push
mov
xlat
fnstenv
adc
idiv
adc
xor
js
and
mov
(bad)
outs
sbb
(bad)
lock
sub
jo
and
or
iret
push
call
push
add
popa
or
jmp
pusha
outs
jmp
push
adc
push
pusha
out
xor
xchg
test
mov
movs
addr16
push
sub
xchg
imul
call
int3
movs
retf
popf
mov
shl
dec
movs
stos
add
and
sbb
loopne
push
inc
adc
leave
mov
cmp
out
jp
jo
inc
xchg
sahf
push
xchg
aam
jecxz
mov
fs
add
push
arpl
and
mov
mov
or
mov
mov
push
or
sub
add
shl
jmp
out
mov
mov
out
jb
movs
fcomip
add
push
dec
jae
jmp
xchg
mov
push
ds
and
hlt
and
cli
xchg
dec
dec
dec
dec
sub
daa
or
aaa
xor
pushf
stos
ins
dec
mov
and
mov
lea
inc
jl
addr16
push
scas
mov
push
jmp
icebp
xchg
out
mov
ja
push
test
sub
jmp
hlt
clc
sbb
adc
cmps
ins
out
adc
stc
dec
cmp
push
ror
retf
pop
dec
scas
popa
mov
jnp
add
je
mov
inc
(bad)
fild
loope
xlat
dec
inc
and
xchg
add
inc
mov
or
pop
std
mov
es
imul
push
or
adc
es
in
pop
or
mov
in
jmp
sbb
xchg
cs
dec
sub
dec
ffree
sub
adc
push
fwait
adc
test
inc
sub
push
scas
sub
dec
lods
(bad)
xlat
(bad)
sub
cmp
fs
out
add
sub
pop
rol
push
adc
push
adc
xor
push
and
push
mov
and
sbb
push
cmc
out
sbb
outs
outs
iret
xchg
jl
jo
jne
jmp
adc
cdq
js
ret
pusha
push
clc
jp
or
add
mov
and
mov
and
xchg
or
(bad)
adc
adc
add
test
(bad)
adc
sar
pop
in
fwait
and
icebp
adc
(bad)
sub
lock
cmp
jg
test
jmp
loop
push
sbb
mov
sbb
pop
or
je
retf
lahf
scas
inc
jmp
dec
dec
(bad)
loopne
aaa
fadd
jmp
cmp
retf
mov
or
and
mov
js
jne
pop
add
ret
add
jne
pop
pop
push
add
lds
cmps
lock
add
mov
dec
lahf
aad
push
mov
out
out
test
jb
adc
ret
mov
sub
call
(bad)
push
jmp
add
cmp
ins
jmp
push
xor
dec
or
(bad)
(bad)
aam
xor
shl
dec
and
pop
push
xchg
jo
lods
and
clc
sbb
mov
scas
sbb
retf
in
aaa
xor
mov
sbb
push
pop
clc
mov
adc
cmp
adc
mov
mov
sub
or
push
push
jnp
lock
jo
out
mov
fist
imul
cmp
xlat
or
cmps
test
dec
js
and
mov
out
daa
mov
pop
shr
sar
out
add
nop
int
xchg
mov
outs
out
sbb
nop
dec
jno
jecxz
bnd
stc
rcl
cmp
dec
cmp
xchg
push
mov
push
ins
test
pop
add
mov
inc
or
mov
sbb
push
gs
dec
(bad)
daa
push
adc
rcl
nop
pusha
dec
mov
xor
loope
inc
push
call
xor
loop
mov
xlat
xor
adc
and
(bad)
cmp
jecxz
sub
or
test
mov
adc
pop
loopne
das
inc
test
test
jns
sbb
inc
clc
clc
popa
xor
or
sub
sbb
addr16
fidiv
add
push
xchg
imul
jle
mov
in
adc
(bad)
test
rcr
shl
retf
cmc
dec
ds
pop
sbb
rol
mov
adc
loope
cmp
jne
mov
mov
sbb
pop
inc
add
lahf
dec
pop
jno
jno
mov
retf
cld
out
clc
es
and
add
je
add
mov
loope
add
sub
mov
mov
adc
mov
cdq
push
add
mov
mov
xor
and
fcomip
jo
mov
and
scas
test
sti
push
or
cmp
enter
imul
mov
daa
push
add
movs
inc
inc
fisttp
(bad)
imul
and
fild
sub
xor
push
jp
imul
pop
or
loopne
in
or
fst
xor
push
adc
mov
pop
or
mov
sar
adc
bound
mov
cmps
retf
ja
(bad)
lds
jecxz
xchg
sahf
shl
int3
pusha
xor
or
aam
fsubr
fmul
fist
xchg
or
shl
fsubr
add
add
jae
add
sbb
or
ret
xor
push
outs
imul
sahf
or
and
mov
push
push
pop
push
mov
fst
loopne
dec
sbb
idiv
cmp
cmp
call
retf
rcl
jbe
adc
scas
sbb
mov
cmp
xor
add
std
and
movs
mov
clc
dec
shr
push
rcr
shl
xchg
xor
push
or
aaa
mov
jno
pushf
(bad)
inc
adc
xchg
push
jo
inc
test
mov
sbb
loopne
or
add
dec
sub
sub
shl
cld
pop
mov
div
icebp
pop
xchg
inc
mov
mov
ja
and
and
out
inc
pop
jmp
inc
mov
sbb
mov
test
(bad)
ds
fcom
fnstsw
jne
clc
or
mov
fmul
daa
adc
js
sub
xor
pop
add
popf
inc
jns
popa
lds
lds
jne
sbb
xor
jmp
xchg
out
jae
jns
or
lods
lock
jge
add
stos
sub
repz
dec
cmp
sbb
sar
sub
loopne
add
mov
int3
jo
or
test
or
cmp
cmp
jle
gs
aam
add
or
adc
jge
add
push
arpl
xchg
fcmovu
xchg
adc
enter
dec
adc
jno
jno
mov
xor
sub
shl
cmp
xchg
retf
enter
or
inc
(bad)
ror
and
or
aam
test
in
aam
or
cvtpi2ps
add
sbb
adc
imul
mov
fisttp
and
int
add
mov
sbb
and
inc
xchg
es
add
xor
adc
dec
inc
in
xchg
push
out
mov
lods
int3
mov
mov
push
loopne
stos
ja
inc
test
xchg
in
adc
mov
adc
rcr
sahf
fwait
jo
and
call
dec
movs
sbb
xchg
inc
xor
hlt
push
nop
and
ja
aaa
jecxz
sbb
lds
popa
lock
sbb
cmc
lock
or
mov
or
pop
ret
ror
mov
mov
mov
daa
cwde
(bad)
inc
or
cmp
mov
cmps
out
lea
movs
repz
jne
adc
sub
jne
pop
outs
adc
pushf
adc
sbb
add
push
retf
mov
mov
adc
or
inc
or
es
rcr
push
arpl
out
jnp
gs
adc
jno
popf
fcomi
and
dec
or
imul
in
adc
push
mov
lea
shl
in
inc
adc
or
pusha
sub
inc
call
dec
xchg
lods
pop
mov
sub
or
call
aaa
xchg
inc
or
(bad)
mov
ss
hlt
pop
sbb
inc
mov
pop
scas
xchg
sub
std
push
sub
div
pushf
js
outs
jge
mov
das
bound
fdivr
pushf
in
fidivr
ja
adc
mov
push
lods
adc
adc
adc
cld
fs
or
xor
adc
sbb
ret
(bad)
inc
or
pop
mov
call
retf
cmps
push
inc
jne
popa
sbb
pop
adc
bound
inc
push
or
mov
cwde
sbb
jnp
xlat
dec
mov
cdq
popa
adc
leave
dec
push
clc
jne
add
fdivr
in
xor
mov
add
add
cwde
ret
dec
in
push
mov
inc
sub
xor
cld
retf
jmp
mov
add
fwait
mov
imul
lods
lahf
sbb
test
hlt
sti
cmps
dec
pop
cmps
imul
and
adc
sub
push
cmp
mov
adc
into
ret
mov
mov
jbe
fild
clc
fist
or
mov
or
sbb
daa
fwait
push
imul
add
inc
or
pop
sti
push
sub
jmp
mov
pop
pop
mov
and
cdq
xor
gs
shl
(bad)
loope
jo
add
(bad)
hlt
cmp
jle
int
inc
test
pop
fst
out
push
leave
adc
es
sub
xor
cwde
sub
mov
mov
push
mov
pop
add
sub
dec
or
adc
and
pop
ins
shl
fs
inc
mov
fld
xchg
cmp
aaa
loopne
rcl
jbe
xchg
xor
push
jge
clc
cmp
call
and
adc
js
aaa
push
or
movs
out
pop
cmp
or
adc
push
adc
add
rol
(bad)
mov
outs
repnz
inc
iret
jo
dec
shl
jb
setae
ja
or
imul
in
lea
mov
jae
fld
adc
rcr
not
adc
xchg
dec
jl
mov
shr
or
adc
in
jbe
add
ins
lock
rcr
shl
push
fcomp
push
or
jae
rcl
mov
inc
nop
cmp
xor
(bad)
ja
loopne
dec
jo
mov
movd
dec
cs
sbb
enter
adc
loope
dec
add
push
int3
push
pop
shl
std
or
jmp
push
jmp
inc
ror
neg
or
and
inc
inc
add
pop
add
ficomp
dec
dec
jo
inc
aaa
push
xchg
mov
mov
sub
int
pusha
sub
dec
inc
daa
push
outs
mov
mov
push
les
dec
lahf
outs
sbb
mov
adc
int3
adc
push
inc
mov
cdq
cmc
sbb
xor
stos
mov
sub
mov
xchg
into
inc
push
fstp
dec
xor
aaa
or
xor
mov
sub
lock
call
(bad)
ss
pop
cmps
popa
lods
les
mov
ret
sbb
xor
fld
stos
xchg
dec
gs
add
mov
inc
jbe
out
pop
and
push
mov
adc
sub
enter
call
push
rcr
and
jnp
es
dec
or
push
xchg
jne
mov
cld
mov
dec
cmp
or
test
hlt
xor
dec
(bad)
in
xor
cmp
movs
aas
or
push
add
or
bound
or
mov
xor
pop
ins
or
scas
imul
dec
fist
and
fsubr
sub
mov
sbb
push
stos
mov
xchg
cmps
inc
add
adc
push
push
or
pop
sub
add
and
nop
sbb
push
sub
pop
lods
dec
jnp
add
pop
or
loope
sub
sub
idiv
push
test
sbb
mov
psrld
adc
adc
aas
lods
inc
add
sbb
push
clc
loopne
pop
sub
mov
in
hlt
loope
dec
or
fild
hlt
inc
and
jp
hlt
pop
mov
sbb
daa
or
pop
pop
outs
inc
add
iret
sbb
mov
push
popa
pop
add
or
pinsrw
movs
dec
sbb
or
inc
inc
movs
push
inc
adc
xchg
(bad)
mov
mov
stos
or
jge
push
sbb
or
es
fild
mov
sbb
mov
(bad)
push
add
pop
ror
mov
or
imul
xor
sahf
mov
mov
lods
sar
push
adc
xor
mov
iret
mov
and
lods
mov
lods
movsx
cmp
ins
sbb
inc
jo
dec
and
aas
dec
jmp
stc
adc
pop
jo
cmp
adc
jo
xor
push
push
fs
clc
jae
xor
sub
call
into
sub
or
xchg
mov
sub
sti
push
sub
adc
or
add
push
pusha
test
cli
dec
andps
add
push
movs
jg
loopne
mov
in
mov
add
adc
call
dec
cmp
sub
and
mov
add
add
add
out
or
fsub
movs
sbb
push
add
cdq
pop
mov
lock
or
xor
inc
adc
and
test
push
push
ins
das
inc
inc
popa
adc
(bad)
repnz
wbinvd
and
cmps
inc
and
mov
sbb
das
idiv
jge
in
xchg
inc
push
dec
xlat
je
add
sub
lea
rol
lock
jmp
dec
mov
sbb
pusha
and
lock
or
inc
ret
mov
inc
push
mov
xchg
mov
cld
cwde
adc
or
add
mov
adc
and
adc
jmp
mov
sbb
inc
cmp
inc
dec
sub
mov
mov
inc
movs
sub
or
push
inc
fdivr
inc
add
shl
ret
cmp
mov
cmp
and
imul
jns
cmp
adc
mov
aam
xor
in
arpl
pop
or
adc
popa
xor
mov
mov
xchg
bound
lock
mov
xor
and
and
add
push
mov
pusha
jecxz
(bad)
mov
shl
adc
pop
and
int3
push
pop
ror
sbb
add
ja
mov
xchg
fwait
mov
and
jl
nop
lock
push
mov
add
cmp
mov
push
mov
ret
push
sbb
lods
pop
fidiv
and
mov
push
and
es
dec
outs
sbb
inc
lahf
in
and
adc
inc
repnz
and
popa
pusha
add
dec
lods
mov
daa
cmp
cld
jmp
mov
pop
rcl
mov
dec
mov
inc
or
ret
mov
cmp
or
fnsave
jl
push
push
jo
adc
mov
and
fbld
mov
dec
shr
push
jnp
xor
mov
call
and
jnp
rol
xlat
sub
ins
nop
or
or
fs
mov
cmp
add
outs
add
movs
or
fbld
imul
ins
sub
daa
pop
daa
aam
or
idiv
xchg
andps
dec
aaa
daa
mov
cdq
xchg
and
ins
jb
push
xchg
adc
jbe
mov
je
and
in
xchg
and
clc
and
sub
loop
imul
out
loopne
dec
lods
push
push
pop
xor
iret
repz
inc
xchg
mov
iret
repz
jg
(bad)
jno
lds
iret
lds
xor
push
aaa
iret
sub
sbb
daa
nop
jl
sbb
iret
pop
add
adc
push
and
ss
xchg
adc
cmps
cmps
add
or
arpl
fnstenv
sbb
xchg
xchg
setae
xor
pslld
sub
mov
xor
pop
sbb
mov
ret
sbb
adc
ss
push
int
out
and
outs
inc
cwde
add
add
mov
and
pop
adc
clc
mov
adc
sbb
dec
inc
ins
aas
push
sbb
inc
push
xchg
add
xchg
sbb
adc
adc
push
outs
shl
mov
push
xor
lahf
test
add
imul
enter
xor
shl
lods
mov
sbb
and
cmps
rcl
sbb
cmc
and
sbb
outs
xor
scas
sub
push
sbb
imul
mov
xor
and
in
push
xchg
dec
xchg
sbb
jo
sub
sub
inc
adc
and
adc
cli
mov
mov
jg
sbb
movs
ins
bound
sub
xchg
jl
jnp
jg
push
sub
adc
and
add
pop
xchg
fwait
dec
les
dec
add
fdivr
shr
xor
cmp
push
loop
jne
adc
aaa
in
outs
mov
mov
pop
sbb
mov
xchg
sbb
jnp
cmp
push
test
xchg
xchg
test
mov
retf
sub
(bad)
sub
mov
xchg
hlt
sbb
je
hlt
push
inc
stc
and
call
(bad)
sub
in
xchg
mov
sbb
dec
jae
sbb
adc
jg
jmp
loope
inc
adc
retf
aam
dec
imul
xor
ret
loopne
mov
loopne
push
or
dec
mov
scas
call
pop
push
das
dec
push
push
lea
xchg
daa
sub
add
or
dec
cmp
and
mov
stos
dec
pop
fdivr
(bad)
sbb
mov
jmp
xchg
inc
scas
in
add
mov
ficom
mov
mov
add
call
shl
nop
pop
mov
pop
enter
pop
int3
xor
adc
adc
or
lods
sbb
ds
fnsave
or
dec
mov
les
adc
ins
adc
fs
jecxz
enter
popa
mov
mov
pusha
push
sbb
sub
and
inc
xor
imul
pusha
bound
push
rol
sub
add
cmp
inc
call
aam
xor
fcom
or
test
adc
jne
push
mov
out
rol
adc
nop
jl
scas
or
cs
enter
ins
and
and
enter
ins
xor
push
inc
and
adc
inc
pop
mov
dec
and
enter
push
daa
pop
fidiv
add
and
mov
and
or
mov
outs
push
jns
push
pop
ss
ror
cmp
inc
loopne
cmp
dec
sub
dec
xchg
pop
in
push
pusha
nop
stc
test
xchg
pusha
das
sbb
shl
outs
adc
in
cmp
inc
sbb
shl
(bad)
popa
xor
cmp
loope
arpl
adc
je
push
mov
sub
dec
push
or
inc
xor
sub
inc
ins
mov
loopne
scas
test
and
aaa
xor
xor
and
je
jl
lahf
lock
mov
icebp
adc
icebp
jmp
ret
cmp
push
or
dec
ds
or
fs
push
push
mov
dec
jno
(bad)
loopne
inc
sbb
(bad)
retf
leave
push
fist
xor
add
(bad)
adc
pop
mov
pop
ins
jge
adc
or
push
sbb
mov
push
jb
jbe
shl
or
loopne
mov
sbb
push
add
call
ss
inc
outs
push
sub
in
add
dec
jle
jne
arpl
pop
mov
inc
sub
aaa
mov
outs
jns
fcomp
lods
popf
das
inc
mov
inc
mov
ins
lea
sbb
xor
aam
add
jbe
sub
push
pop
xchg
mov
fs
add
mov
xchg
pop
cwde
cmp
les
sub
imul
mov
rcr
addr16
push
push
pop
add
xor
adc
add
or
nop
ja
test
dec
sbb
movs
repnz
cmp
pop
push
cmp
fadd
push
dec
inc
inc
enter
push
inc
pusha
inc
inc
adc
push
xchg
retf
dec
dec
into
dec
dec
pushf
pop
push
movs
mov
cs
push
test
cmp
and
pusha
outs
push
rcr
push
inc
push
push
sub
pop
fs
bound
xlat
in
inc
xchg
cld
push
das
push
jno
sbb
mov
cmp
sub
adc
mov
mov
jnp
test
jae
daa
stos
inc
mov
dec
cmps
add
leave
fnstsw
push
in
xbegin
mov
daa
and
mov
cmps
push
pop
loope
cmp
sub
popf
out
xor
jle
dec
cmp
aaa
sbb
xchg
ret
sbb
repnz
fsubr
fs
add
nop
xchg
fs
pushf
mov
fs
mov
fs
fs
fs
loopne
fs
jb
fs
cld
add
add
fs
adc
jno
sbb
fst
push
sub
adc
add
push
add
test
cmps
adc
bnd
aaa
push
sub
xchg
and
scas
push
retf
cs
je
add
or
cwde
movs
jb
xchg
test
cs
nop
or
nop
hlt
xchg
add
movs
jb
xchg
cwde
adc
sub
test
push
movs
pop
push
mov
lods
dec
in
sub
test
mov
movs
jb
mov
test
in
pop
push
mov
inc
movs
xor
rcr
nop
retf
sub
inc
sub
push
mov
pop
dec
in
in
call
mov
pushf
push
movs
jb
mov
sar
cld
movs
lods
push
push
fsubr
cs
inc
or
test
cmp
jb
xchg
adc
retf
sbb
nop
movs
and
xchg
inc
inc
or
(bad)
mov
cmc
outs
jne
push
gs
or
jle
and
popa
ret
and
(bad)
jnp
sbb
mov
stc
aad
mov
clc
inc
lods
das
xchg
or
arpl
jb
mov
sbb
add
test
je
or
mov
std
mov
fwait
popf
sbb
imul
inc
addr16
fs
pop
fwait
sbb
out
dec
arpl
jae
jnp
shl
int3
in
daa
lea
jle
adc
hlt
ins
jns
adc
sub
pop
pop
pop
xlat
jo
sub
aaa
outs
mov
out
mov
lea
xchg
inc
imul
popa
push
fcomp
sub
daa
add
pop
mov
and
push
mov
or
fst
xor
sbb
jnp
mov
iret
add
fiadd
cmps
mov
ret
inc
push
in
pop
cmp
jne
fstp
pop
cmp
in
pop
xchg
pop
sub
sub
jl
jecxz
dec
(bad)
xchg
ja
mov
fs
jg
and
inc
leave
jns
outs
ficom
xor
call
pop
fs
push
sub
fadd
ds
mov
mov
cmp
fadd
push
mov
and
inc
popa
loope
push
xchg
xor
cmps
lock
iret
stos
jbe
mov
(bad)
je
adc
test
add
dec
xor
les
and
push
test
in
xor
clc
sbb
inc
jne
retf
cmp
mov
jle
loopne
push
imul
sbb
lahf
mov
xchg
cmp
mov
outs
cmp
cmp
pop
jmp
dec
repnz
inc
xchg
or
cmp
outs
jb
add
inc
inc
aaa
in
shr
add
inc
pop
fdiv
mov
push
pop
daa
xchg
es
sbb
mov
mov
pop
sar
push
inc
retf
push
dec
dec
mov
adc
add
(bad)
out
(bad)
fdiv
or
xor
sub
(bad)
xor
imul
add
pop
sub
shl
popf
cld
push
push
xor
jae
mov
lods
add
sub
or
sub
inc
or
or
pop
pop
dec
rol
aaa
inc
iret
shl
inc
ss
inc
xor
pop
adc
or
inc
mov
loopne
xor
outs
data16
dec
add
sub
adc
(bad)
sahf
sub
xlat
out
pop
push
and
xor
mov
dec
pop
rcl
outs
test
xlat
sar
popa
mov
add
adc
cmp
neg
sub
xor
ins
jb
aad
add
js
sub
mov
pusha
cmp
jae
arpl
pushf
add
push
fs
inc
jo
jno
or
out
ins
gs
pop
inc
ja
adc
fiadd
sub
sub
sbb
adc
daa
inc
jne
je
sbb
les
shl
ins
fs
imul
inc
cmp
ins
and
enter
sub
sbb
popa
scas
sub
sub
pop
mov
inc
bound
rcr
and
ds
pop
inc
imul
cmp
push
push
dec
es
or
mov
sbb
sahf
sbb
or
cmps
clc
ss
sub
mov
jae
movs
movs
lahf
push
cmp
pop
inc
jo
(bad)
ror
rcl
pop
inc
xor
mov
and
ins
loop
inc
in
fwait
or
dec
je
sbb
add
add
dec
inc
aaa
pushf
adc
mov
dec
aad
dec
xchg
push
popf
sahf
out
mov
pop
cmps
add
adc
jbe
mov
cmps
adc
push
cwde
pop
dec
jb
cwde
or
or
jno
jo
scas
std
call
(bad)
in
(bad)
jmp
jmp
mov
fsubr
push
stos
cmp
nop
imul
pop
and
pop
pop
mov
or
xchg
pop
je
(bad)
xchg
inc
aaa
xor
adc
js
dec
fadd
dec
pop
repnz
sub
adc
mov
jo
mov
fisttp
lock
dec
push
jae
cmps
jo
add
test
jne
stos
pushf
dec
jne
push
mov
pop
dec
pop
xchg
sbb
mov
inc
mov
push
inc
sbb
std
aad
push
or
or
dec
fild
or
dec
and
cmovno
push
sub
push
or
pop
fnstsw
shl
sub
push
out
and
adc
or
inc
sbb
loopne
imul
pop
iret
adc
and
pop
and
mov
mov
add
pop
pop
adc
push
jmp
add
pusha
add
aaa
pop
and
or
adc
addr16
and
test
or
dec
adc
xor
jnp
mov
adc
push
(bad)
cmp
xchg
movs
es
adc
shl
test
xchg
push
cdq
or
sub
int
adc
add
dec
mov
xor
inc
jge
call
add
xchg
push
arpl
adc
imul
pop
adc
cmp
rcl
cmp
sbb
add
addr16
inc
push
cmp
inc
inc
and
xor
adc
pusha
cmp
jmp
adc
mov
sbb
cmps
inc
mov
ins
inc
add
or
add
sub
sub
sub
frstor
icebp
inc
adc
outs
inc
fwait
rcr
push
sbb
sub
push
mov
cmp
mov
sub
daa
fs
es
lods
das
test
fs
dec
cmp
xor
push
xchg
and
add
xor
add
aad
push
in
inc
pop
cld
sbb
dec
mov
inc
bound
add
test
call
lock
push
xchg
mov
inc
fimul
in
fstp
les
out
loopne
adc
pop
add
push
(bad)
mov
lock
pusha
je
cli
pop
add
pop
pop
sbb
push
sub
mov
fsubr
pop
lods
in
push
dec
xor
lock
inc
in
leave
dec
shr
xchg
jo
sbb
xchg
add
jecxz
mov
mov
inc
and
cwde
out
and
call
push
push
inc
xor
addr16
add
pop
jmp
sub
xchg
cmc
cmp
sbb
xchg
xor
and
inc
push
scas
or
and
dec
or
das
pop
jg
out
iret
add
inc
pop
mov
out
add
je
pop
fs
push
push
gs
add
sbb
ret
pop
xor
or
in
push
jl
or
ja
mov
dec
aam
sub
adc
xchg
xchg
lods
sub
fwait
ret
addr16
ror
adc
or
pop
cli
jo
mov
loopne
mov
add
movs
lock
pusha
ds
dec
jne
out
mov
data16
push
mov
push
push
push
lahf
push
push
pop
clc
pop
mov
not
jmp
outs
add
inc
call
imul
xor
cmp
mul
fild
jmp
sbb
outs
adc
dec
cs
int
add
sbb
inc
int3
dec
sub
dec
adc
stc
popa
jmp
es
lea
adc
enter
pop
rcr
ret
fld
lahf
or
mov
push
push
ins
push
ins
sbb
dec
mov
add
jns
bound
adc
mov
pop
jnp
lahf
push
xchg
nop
or
xor
cdq
pushf
cwde
adc
dec
ja
push
pop
push
jo
mov
xchg
jo
mov
out
and
(bad)
add
in
cdq
mov
cmp
pop
mov
adc
daa
pusha
nop
fisub
dec
sbb
inc
mov
sbb
icebp
nop
xchg
adc
dec
mov
mov
addr16
and
xor
mov
pusha
aaa
jne
daa
je
jne
aas
mov
or
xor
cmp
mov
outs
enter
pop
fsub
dec
pop
imul
sbb
push
or
(bad)
push
sbb
mov
adc
or
cmp
adc
or
mov
pusha
fadd
call
fist
ja
inc
adc
xchg
mov
out
(bad)
jl
push
inc
lods
add
xor
mov
jnp
repz
mov
shr
out
js
xchg
and
lods
xor
dec
pushf
sub
lods
call
korb
js
les
fimul
pop
int
jo
inc
and
and
sbb
inc
dec
pop
clc
mov
neg
retf
add
push
scas
or
pop
mov
aad
inc
cdq
push
add
or
jne
push
cmp
faddp
dec
inc
mov
loop
repnz
ja
in
sub
repnz
mov
xor
mov
bound
add
(bad)
out
dec
cmp
mov
icebp
cdq
test
loope
aam
jne
dec
stos
add
push
sbb
and
mov
pop
or
jne
mov
dec
dec
sar
(bad)
push
jae
or
mov
inc
push
dec
enter
mov
xchg
mov
int
mov
pop
pushf
ror
cmp
add
jp
movs
mov
dec
pop
xor
dec
pusha
mov
cmp
loopne
cmp
add
adc
retf
std
xor
fs
pop
mov
adc
shr
mov
dec
sub
jl
mov
aad
frstor
mov
in
inc
pop
inc
pop
xchg
stos
mov
lods
xchg
mov
cmp
sbb
cmps
push
repnz
rcr
pop
not
icebp
and
mov
xor
(bad)
mov
pusha
pop
mov
jns
pusha
push
pop
(bad)
mov
mov
add
and
rcl
adc
mov
push
mov
test
jge
ret
inc
inc
add
hlt
pop
mov
in
pop
sub
inc
sti
aas
and
add
or
or
pop
call
fist
adc
add
jmp
cmp
and
add
mov
dec
ins
imul
mov
add
aaa
or
fadd
(bad)
movs
js
(bad)
pop
and
shl
xchg
and
jmp
ret
(bad)
dec
(bad)
je
scas
out
push
sbb
push
xchg
add
and
or
xlat
pop
sbb
jmp
xor
xor
xlat
fnstsw
dec
(bad)
jno
cmp
xor
adc
cld
mov
jl
jns
cmp
sbb
add
jmp
push
dec
scas
pop
js
lock
push
inc
(bad)
add
add
pop
les
dec
bound
jge
sub
cs
loop
ret
(bad)
rol
(bad)
(bad)
dec
xchg
and
mov
inc
pop
pop
pop
and
imul
push
pop
xor
mov
nop
ja
nop
lahf
into
or
add
mov
push
or
push
lods
dec
mov
ret
pop
dec
add
mov
mov
pop
push
outs
pop
or
jmp
mov
cmp
xlat
inc
mov
mov
mov
iret
mov
sbb
mov
imul
das
outs
pushf
ins
add
sbb
clc
rcl
push
jecxz
rcr
test
ins
mov
in
fstp
pop
push
add
in
sbb
outs
inc
or
icebp
push
ret
mov
and
mov
mov
xchg
out
int3
leave
mov
adc
or
int3
mov
or
pushf
add
call
sahf
pushw
mov
clc
add
sbb
mov
shl
(bad)
mov
inc
mov
jl
cdq
scas
loop
inc
(bad)
mov
mov
sub
pop
xchg
xchg
lods
adc
push
mov
push
int3
mov
xor
dec
jmp
clc
outs
fwait
add
mov
sub
pop
add
jle
push
and
out
mov
adc
mov
pop
adc
popf
adc
test
push
outs
pop
in
pusha
mov
sbb
mov
repnz
pop
daa
push
fs
and
push
dec
jo
jnp
mov
sub
neg
movs
and
dec
inc
cmp
and
or
outs
scas
aas
fisttp
jne
dec
lahf
mov
xchg
jl
push
pusha
scas
cmp
test
mov
inc
in
xor
cdq
enter
xor
and
pushf
and
mov
ds
daa
shl
adc
retf
push
cld
test
xlat
(bad)
fsub
or
jle
mov
lock
mov
sub
xchg
and
and
arpl
dec
bound
push
xchg
push
push
or
sbb
dec
mov
adc
sbb
cmp
adc
lock
sbb
scas
sub
enter
and
leave
ja
arpl
mov
fs
movs
mov
movs
inc
cs
icebp
cmc
add
push
(bad)
les
fidivr
test
or
inc
dec
or
bound
sbb
or
(bad)
jae
xor
add
movs
mov
test
ins
cmp
inc
inc
daa
dec
or
jo
push
sub
sahf
rcr
shl
push
lds
jo
int3
dec
dec
les
dec
imul
pusha
data16
gs
and
push
fcom
and
idiv
jbe
nop
xchg
pushf
into
fsubr
ss
int
shr
add
push
sti
sahf
data16
push
push
jl
mov
push
imul
ins
data16
in
mov
test
pop
data16
push
test
mov
mov
jmp
or
pop
sub
sbb
cli
sub
xchg
and
push
inc
adc
pop
mov
ss
add
jne
popa
dec
mov
xchg
and
movs
data16
mov
mov
ins
sbb
adc
dec
shl
cmp
dec
fcmovnu
or
ins
mov
dec
adc
or
hlt
test
inc
test
or
mov
je
fwait
pop
scas
or
inc
pop
or
xchg
add
pop
enter
or
inc
adc
mov
out
int3
pop
(bad)
fs
hlt
sti
dec
movs
(bad)
pop
push
add
out
sub
fild
(bad)
je
out
gs
outs
test
dec
adc
dec
jae
mov
inc
jo
out
xor
sub
adc
dec
cmp
dec
push
int
mov
push
sbb
dec
jno
adc
dec
sub
cwde
or
fiadd
push
add
dec
jb
cmp
clc
inc
outs
push
in
iret
dec
pop
outs
jo
jo
int
dec
loop
push
outs
mov
push
ret
jo
fistp
sub
mov
mov
adc
sbb
je
lahf
cmps
shl
cdq
sbb
ss
push
sar
inc
inc
ja
push
and
repz
sub
pop
mov
or
inc
into
outs
clc
je
cs
and
test
xchg
ret
sbb
mov
xchg
and
bound
ins
xor
dec
clc
ja
lock
test
and
add
data16
ins
in
inc
xchg
sbb
fs
cmps
sub
sahf
imul
push
add
mov
loopne
pop
repnz
shl
add
inc
enter
out
frstor
sbb
xor
mov
addr16
or
dec
fcomp
adc
nop
or
or
lea
loopne
jge
sub
or
cmps
xchg
xchg
jb
lds
pop
xchg
sub
sbb
inc
mov
loopne
adc
adc
cld
mov
outs
jmp
mov
dec
(bad)
mov
or
or
mov
dec
sub
jle
adc
shl
or
pop
(bad)
fild
or
mov
mov
repz
cld
sbb
lea
mov
mov
and
jne
cwde
xor
jg
push
mov
(bad)
js
jmp
pusha
mov
and
adc
mov
call
add
pusha
rcl
or
mov
mov
aaa
mov
div
jp
(bad)
test
popa
or
sbb
cmp
cli
mov
push
jb
and
pop
imul
adc
jmp
loopne
fistp
bound
add
add
test
lock
scas
test
cmp
cmp
sub
cmp
dec
add
pop
jo
jl
sbb
inc
es
lock
jae
jae
jo
shl
or
mov
lods
push
adc
push
push
pop
dec
popf
popa
jl
inc
mov
lock
adc
jp
addr16
push
sbb
imul
adc
push
adc
pusha
mov
es
push
imul
or
popf
daa
push
dec
add
loopne
sub
sbb
fdivr
lahf
dec
push
xchg
add
adc
or
enter
add
and
mov
and
sbb
adc
adc
xchg
lock
loopne
xchg
nop
jge
shl
jge
jg
sbb
or
jle
stc
test
mov
adc
adc
xchg
pop
ret
add
pop
jae
add
bound
mov
push
pop
clc
lahf
sbb
jle
inc
xchg
add
jecxz
dec
clc
fst
pop
sbb
test
jg
push
adc
pop
fs
dec
sbb
mov
pop
outs
scas
xchg
mov
rcl
xchg
sbb
xor
scas
imul
cs
or
mov
je
push
sbb
test
mov
and
adc
inc
fisttp
jecxz
xor
push
add
xchg
imul
push
and
xor
adc
dec
iret
test
mov
movs
add
mov
es
out
xchg
pop
test
enter
push
dec
in
push
xor
xchg
idiv
test
xor
loopne
jo
push
aaa
sub
pop
mov
hlt
jbe
loopne
es
pop
ins
add
iret
jae
aas
ror
jmp
sub
ins
jnp
add
and
sbb
ret
mov
mov
fdiv
arpl
add
ins
cmp
push
je
fild
lods
loop
imul
ins
inc
outs
pop
js
mov
add
es
out
out
mov
popa
or
mov
dec
es
ins
bound
jbe
es
imul
gs
pop
jo
addr16
mov
addr16
add
lods
mov
mov
and
cmps
ins
daa
repz
mov
sub
fcomi
out
fisubr
loop
sbb
push
pop
loope
and
outs
clc
daa
(bad)
out
loope
cmp
pop
je
jo
ins
leave
sti
pop
jb
arpl
jns
or
dec
pushw
das
add
pop
mov
outs
or
outs
pop
fistp
ror
mov
xchg
mov
scas
mov
sub
push
cli
lahf
inc
cmp
cs
sub
icebp
add
data16
adc
add
pushf
cmp
cmc
stos
movs
out
cmp
sbb
ss
mov
adc
xor
mov
and
xchg
or
inc
rcl
push
adc
add
test
or
hlt
or
dec
jb
xchg
(bad)
jo
dec
pop
scas
add
sbb
je
pop
sub
or
sbb
or
(bad)
xchg
sbb
ss
and
icebp
lahf
sub
dec
xchg
mov
pop
add
icebp
lea
movs
add
ins
popa
adc
clc
push
jo
sub
in
xchg
gs
in
adc
xchg
in
or
cs
inc
push
or
push
addr16
cwde
or
mov
inc
fidiv
sub
pop
outs
adc
or
(bad)
mov
pop
mov
cmps
xchg
mov
sbb
ins
adc
pushf
xchg
test
inc
out
loope
cmps
ja
add
mov
add
jb
dec
and
das
pop
hlt
iret
enter
fwait
and
retf
scas
ret
dec
pop
js
cmp
dec
ss
iret
cmp
add
mov
push
in
inc
cmps
imul
jmp
xlat
xor
std
jbe
xor
add
push
xchg
push
imul
int3
js
cwde
xor
cmps
imul
stc
inc
pop
or
or
or
or
or
or
sahf
out
adc
adc
push
pop
sbb
sbb
sbb
push
pop
jl
imul
out
fmul
loopne
push
stc
(bad)
repz
shl
iret
repz
xchg
test
sahf
out
call
jns
out
test
out
out
or
pop
push
xor
out
je
call
rcl
or
out
sbb
or
or
xchg
or
cdq
add
cdq
nop
adc
adc
cdq
nop
xchg
or
or
cdq
nop
xchg
or
sbb
nop
xchg
or
sbb
push
xchg
or
cdq
or
cdq
nop
and
sub
cdq
nop
xchg
adc
xor
xor
nop
xchg
or
cmp
xchg
or
cdq
adc
cdq
nop
inc
pop
dec
sbb
sbb
nop
xchg
or
push
sbb
sbb
xchg
or
cdq
sbb
call
xor
cdq
and
gs
xor
gs
xor
push
inc
aad
data16
and
push
adc
iret
push
les
push
jecxz
iret
jmp
inc
loope
ds
cmp
jo
inc
cmp
cs
push
imul
ins
jle
add
scas
outs
xchg
lds
lock
out
je
add
jg
and
add
pop
add
in
push
add
rcr
js
js
cmp
push
cdq
inc
push
leave
sub
loope
or
mov
jmp
push
jns
push
ror
loopne
retf
movs
push
enter
addr16
dec
jb
rol
pusha
js
add
retf
add
lahf
lock
and
mov
xor
sub
or
push
clc
les
push
dec
and
fistp
adc
call
xchg
pop
xchg
out
iret
mov
jb
outs
retf
jns
dec
inc
add
add
(bad)
aaa
xor
jo
or
fist
ret
inc
test
inc
push
enter
adc
mov
fmul
outs
popf
rol
pop
std
push
mov
ss
dec
shl
adc
mov
call
inc
push
pop
out
xor
ins
dec
jl
push
pushf
(bad)
pop
aad
dec
retf
inc
or
inc
(bad)
fimul
outs
fsub
ror
mov
(bad)
mov
adc
adc
(bad)
(bad)
fsub
or
movs
push
sub
and
loope
push
lock
jbe
ror
inc
cmp
pop
add
jbe
pop
push
les
pop
push
jnp
je
xor
xchg
push
stc
nop
scas
xor
push
pop
pop
sbb
push
push
xor
rol
daa
push
cmp
inc
adc
mov
jo
and
or
cs
or
xchg
ins
pop
mov
femms
(bad)
pop
inc
iret
inc
xchg
rcr
push
add
(bad)
mov
xchg
dec
xor
mov
cld
sbb
and
test
repz
jo
and
push
popa
jmp
rcl
xor
xchg
enter
adc
cmp
adc
ret
adc
push
mov
je
test
shl
or
fs
cdq
rol
test
dec
xlat
jo
jp
pop
jge
scas
and
ins
mov
mov
fsubr
jmp
or
fld
sbb
adc
pop
cdq
popa
inc
ds
sbb
sbb
out
sbb
xchg
in
sbb
or
push
es
or
pop
std
mov
sbb
pop
pop
inc
inc
mov
jmp
mov
dec
cdq
push
outs
lock
mov
and
mov
and
in
inc
inc
outs
test
add
or
jo
or
sbb
mov
ins
mov
imul
jmp
ret
adc
fwait
in
mov
dec
cmps
xchg
stos
sub
sbb
sub
sub
dec
dec
inc
lahf
xchg
int3
cs
sbb
repnz
js
mov
mov
les
and
and
xor
push
inc
cmp
pop
test
sub
mov
test
xchg
pop
cmps
pop
cmps
stos
ret
dec
in
sbb
lods
inc
scas
jnp
sbb
test
mov
stc
fsubrp
push
mov
push
stos
cwde
or
jmp
ins
retf
pop
adc
mov
int3
adc
out
ficomp
push
fsub
and
jo
jb
cmp
mov
cmp
and
add
or
scas
inc
xchg
mov
por
pop
jns
mov
or
dec
jle
daa
test
enter
jae
popa
iret
xchg
push
or
pop
jno
or
pop
cmp
(bad)
dec
push
repnz
mov
or
loopne
push
sub
or
pop
pop
leave
pop
repnz
mov
xchg
mov
mov
mov
cmps
popf
add
mov
xchg
xor
or
retf
fisubr
push
rol
icebp
sahf
dec
call
xor
imul
push
in
mov
cmp
mov
cmp
pop
adc
jne
sbb
jl
inc
enter
add
inc
mov
dec
mov
and
push
jb
mov
xchg
mov
push
or
pop
sbb
inc
xchg
dec
sti
and
or
push
cmp
dec
dec
outs
nop
jb
xchg
gs
rcl
and
fs
popa
push
push
fist
xchg
stos
nop
rol
mov
adc
icebp
and
add
les
hlt
cmps
adc
sbb
adc
bound
rol
push
movs
in
push
pop
xor
fstp
xor
in
sbb
in
sbb
sbb
or
adc
sbb
push
clc
jns
les
ja
dec
test
dec
add
dec
ins
add
dec
sub
mov
repnz
mov
push
and
mov
lds
add
les
jo
inc
sahf
xchg
sti
inc
adc
clc
push
ss
inc
dec
mov
rcr
and
xchg
test
xor
and
cs
es
xchg
mov
mov
dec
enter
mov
sahf
mov
scas
and
and
sub
sub
mov
inc
in
sbb
sub
or
push
popa
sar
mov
dec
sub
adc
dec
test
push
and
lods
lods
mov
xor
add
push
sub
mov
mov
ss
xchg
test
aaa
and
xchg
jo
int3
or
nop
fdivr
popf
test
loopne
sub
rol
cmp
push
test
cmovle
dec
jl
cmp
add
add
aas
push
mov
adc
or
add
inc
inc
sbb
mov
push
cmc
push
mov
sub
sub
dec
mov
add
call
add
mov
mov
mov
mov
inc
add
in
jnp
pop
cwde
push
mov
loop
aam
pop
fistp
ss
push
nop
push
cmp
push
fcomi
sahf
test
push
pop
push
xor
inc
pop
push
fbld
pop
and
outs
xchg
mov
xchg
loopne
cli
push
or
push
shl
mov
ins
mov
mov
dec
test
outs
fs
out
pop
dec
cmps
pop
push
add
mov
fld
fcos
cld
sbb
aam
xor
push
xchg
ins
xchg
jg
outs
pop
call
mov
xor
jnp
test
cmp
push
and
out
cmp
ror
sahf
hlt
and
out
mov
push
add
xor
dec
cli
dec
call
push
push
xor
cmp
fmul
movs
push
je
lods
push
pop
icebp
xchg
pop
sbb
pop
or
xor
add
adc
js
xor
test
mov
out
or
jg
lock
adc
frstor
enter
cmpps
jne
jecxz
call
adc
adc
xchg
adc
or
inc
adc
jns
push
adc
adc
out
and
rsm
popa
ins
jge
in
adc
dec
neg
sbb
or
xchg
stos
addr16
push
sub
push
pop
or
inc
add
and
and
stos
inc
pop
shr
cdq
dec
scas
xchg
and
es
mov
sub
add
cmp
add
enter
das
xor
push
adc
push
popf
lahf
mov
mov
adc
adc
push
adc
push
scas
or
outs
adc
mov
into
test
outs
fs
test
push
push
scas
movs
push
and
clc
pop
push
adc
or
dec
mov
cmp
inc
sub
int
xchg
nop
ret
and
ror
pop
sub
inc
push
stos
lock
stos
(bad)
inc
push
pop
mov
sub
or
mov
imul
mov
sahf
(bad)
mov
adc
inc
jl
mov
mov
jne
ds
push
(bad)
ror
pusha
adc
fcom
popa
mov
jmp
(bad)
xor
add
retf
aaa
lea
mov
or
adc
jg
mov
add
dec
test
je
xor
ds
sbb
sbb
pop
or
jne
mov
inc
jne
lock
cwde
mov
int3
xor
lea
add
cmp
xchg
mov
dec
aaa
dec
cmp
adc
push
or
sbb
add
dec
popa
clc
xchg
push
imul
dec
ins
lahf
inc
jbe
sbb
stos
adc
xchg
jle
mov
jne
dec
scas
xchg
add
adc
add
mov
xlat
les
and
pop
xor
dec
bound
ret
and
jo
xchg
add
leave
xchg
adc
hlt
add
mov
inc
in
mov
outs
enter
daa
call
enter
sbb
xchg
ins
or
inc
xchg
clc
pop
outs
popa
lea
xchg
or
test
shr
aam
(bad)
pop
add
mov
ret
push
xchg
sbb
sbb
adc
imul
call
xchg
cli
data16
jno
in
hlt
ret
shl
push
fiadd
aad
pop
add
and
lds
shl
jecxz
mov
lock
js
or
leave
jg
xchg
mov
push
or
loope
(bad)
xchg
(bad)
lahf
cwde
jo
div
jbe
xchg
and
icebp
or
mov
sahf
mov
sub
add
nop
xor
mov
mov
mov
sar
xchg
outs
jb
scas
and
jl
xlat
es
out
imul
and
aaa
push
and
xchg
adc
or
mov
push
shl
mov
or
mov
cmp
xchg
movs
outs
inc
jg
mov
ins
fmul
clc
and
xchg
jmp
sub
and
movs
dec
mov
lahf
lahf
outs
jb
xchg
or
outs
and
add
push
inc
push
(bad)
or
adc
dec
or
or
pop
aam
xchg
lahf
mov
sub
jnp
or
in
push
mov
push
mov
aad
sti
mov
add
je
adc
xor
dec
push
(bad)
xchg
jno
div
jle
or
hlt
push
xor
mov
and
adc
inc
sub
sbb
popa
shl
pop
daa
push
mov
add
add
and
xchg
sbb
ret
pusha
push
fbstp
jp
sub
or
add
sub
bound
leave
push
or
loopne
daa
pop
jmp
xchg
out
push
or
sub
jns
jae
inc
xchg
sbb
push
jmp
ret
add
xchg
pop
in
adc
adc
push
pop
pop
neg
test
push
lahf
rol
add
lds
daa
mov
outs
and
xchg
addr16
sub
out
xor
lahf
adc
addr16
adc
lahf
pop
or
es
or
cmp
sbb
mov
fadd
nop
adc
or
loopne
int
inc
les
pop
mov
shl
aas
not
imul
mov
mov
in
jb
nop
pusha
pop
call
test
push
lea
inc
inc
pop
leave
(bad)
push
mov
pushf
xchg
mov
mov
mov
push
stos
or
xchg
sbb
lock
ret
lock
es
jnp
mov
cmps
or
psadbw
stos
dec
aas
jns
outs
pop
fcmovb
fild
bound
les
aas
jae
add
mov
xor
call
pop
jmp
rol
xor
mov
sub
xchg
stos
sub
xor
test
push
hlt
iret
cmp
or
jl
dec
xor
sbb
and
popa
ret
inc
out
mov
xchg
pop
in
inc
inc
pop
cmp
mov
inc
enterw
addr16
(bad)
hlt
pop
add
hlt
mov
inc
or
add
mov
js
movs
adc
mov
repnz
xlat
lods
or
aas
and
xchg
ror
and
xchg
sbb
ret
sub
in
out
dec
xor
lock
adc
adc
sub
and
popa
cmp
rol
sub
movs
add
or
call
and
ins
ror
push
ja
xor
call
dec
or
jns
push
push
or
pop
and
push
jbe
ret
add
mov
arpl
pop
jnp
add
add
mov
mov
and
movs
jo
outs
inc
jmp
xor
pop
loope
mov
and
jo
xor
and
mov
sub
ret
popa
cmp
(bad)
leave
push
cmps
adc
fwait
lods
mov
mov
test
or
add
nop
or
test
and
icebp
jo
shr
push
xor
cwde
dec
ror
sbb
dec
cli
jns
cwde
je
mov
inc
mov
movs
(bad)
movaps
sbb
js
les
rcl
test
test
jecxz
mov
ret
sub
repz
pushf
dec
hlt
xor
hlt
cmp
sub
mov
popa
and
inc
leave
cmp
cs
dec
or
mov
sbb
int
aaa
lock
imul
add
adc
repnz
dec
mov
or
add
mov
jne
inc
dec
xor
(bad)
ja
cmp
xor
xchg
mov
pop
cmp
ror
adc
adc
pushf
in
cld
test
pop
add
xchg
push
stos
cmp
mov
inc
por
cmp
cmp
push
jbe
pusha
mov
adc
or
test
push
rcl
dec
add
stos
icebp
cmp
mov
les
xor
repnz
or
push
push
cmc
xchg
aaa
adc
jo
push
ss
pop
rcl
add
mov
(bad)
lods
mov
push
pop
pop
inc
cmp
lea
fcomp
loope
dec
shl
mov
dec
sub
pop
xor
mov
fistp
inc
test
es
dec
pop
dec
sbb
jno
hlt
out
adc
rcr
xor
adc
pop
sub
daa
inc
cs
dec
pop
pop
or
push
add
add
mov
pop
dec
lock
out
sub
cmp
fwait
pop
ret
jmp
inc
in
call
inc
sub
mov
arpl
or
add
js
pusha
lds
or
popa
daa
shr
or
add
lds
add
sbb
mov
test
lds
cs
fbstp
mov
push
sbb
cmps
popa
add
jb
bound
and
mov
dec
fcomip
adc
adc
jmp
dec
xchg
push
imul
shr
jmp
aad
je
mov
nop
and
mov
dec
push
pop
shl
(bad)
mov
or
cmp
inc
mov
push
adc
dec
sub
add
adc
mov
pop
arpl
jno
nop
adc
cwde
imul
ror
(bad)
sbb
ret
ret
mov
int
imul
push
mov
sahf
lock
cmp
repnz
adc
or
mov
xchg
scas
dec
aas
or
pop
push
sbb
inc
adc
xchg
es
in
inc
cmp
or
adc
push
xchg
push
adc
push
or
daa
xchg
aam
mov
pop
or
mov
mov
fwait
loopne
int3
js
pusha
outs
test
outs
add
popa
xor
mov
mov
mov
(bad)
call
push
or
inc
not
and
or
or
or
jl
and
mov
sub
fist
imul
sub
pop
or
cmp
xor
adc
xchg
icebp
sub
inc
clc
out
lea
inc
mov
ret
or
mov
adc
ret
xchg
pusha
or
cmp
add
in
movs
fldenv
add
mov
repz
and
nop
pop
ins
cmp
cmp
add
and
lea
lock
mov
daa
add
pop
add
scas
fbld
dec
push
(bad)
fistp
stos
mov
movs
mov
cmps
dec
xchg
or
push
jbe
mov
in
and
je
cmp
es
jle
mov
or
xor
loop
or
mov
and
inc
scas
cmp
mov
xor
adc
(bad)
aas
or
(bad)
and
jbe
and
shl
iret
ret
or
mov
mov
fs
xor
pop
imul
mov
mov
(bad)
cmp
rcr
add
pop
mov
ret
adc
or
inc
jno
jmp
or
das
call
sub
inc
fild
(bad)
mov
ja
push
and
sahf
xchg
das
dec
das
inc
dec
sbb
sti
xchg
add
jmp
imul
leave
pop
add
xchg
dec
(bad)
adc
call
out
shr
sar
or
fs
push
and
add
pop
aad
arpl
and
aam
ds
das
add
sbb
or
(bad)
push
imul
(bad)
daa
and
adc
xor
and
nop
adc
das
inc
cmp
inc
stos
xor
das
push
inc
loop
(bad)
add
or
and
jns
aad
and
jne
xchg
pop
or
std
add
loop
or
or
sub
xchg
push
or
add
inc
imul
out
inc
adc
int3
ins
pop
mov
or
dec
sub
mov
add
rcl
cmc
xchg
popf
jb
push
clc
push
xchg
and
clc
and
loopne
es
(bad)
inc
sbb
adc
js
hlt
xchg
popf
adc
push
adc
scas
out
popf
daa
pop
loopne
mov
inc
and
mov
hlt
add
test
sar
inc
pop
call
std
push
clc
or
aaa
inc
push
push
push
dec
dec
jbe
fst
mov
push
xor
pop
dec
pop
out
jge
dec
add
jne
lods
mov
push
sub
jne
cld
or
xor
cmp
mov
dec
(bad)
cmp
jne
rcl
(bad)
sbb
pop
add
cs
enter
push
and
daa
fldenvw
ret
in
lahf
hlt
test
cs
bound
push
ins
adc
mov
sub
outs
xchg
rol
add
jmp
sub
imul
jne
mov
inc
add
or
mov
into
or
xor
fs
in
xchg
je
(bad)
add
pop
adc
xchg
test
inc
lahf
adc
fdivr
dec
call
fldenv
sbb
dec
scas
movs
or
xchg
test
mov
out
test
call
inc
loopne
pop
dec
inc
mov
sbb
aaa
pop
and
xlat
dec
fadd
and
xor
mov
mov
inc
dec
cld
mov
jb
test
add
ja
rol
pusha
clc
pop
xor
das
outs
sbb
dec
jbe
fld
(bad)
loopne
outs
adc
nop
les
sub
xchg
mov
pushf
btc
into
fisub
inc
mov
outs
mov
jb
mov
(bad)
ss
loopne
jae
aas
mov
add
sahf
out
iret
jns
and
jl
out
inc
dec
push
pop
std
(bad)
icebp
cmp
rol
pop
outs
jmp
test
push
push
js
or
xchg
and
dec
push
mov
nop
shl
fs
(bad)
adc
es
lods
inc
sub
sub
push
scas
push
add
xor
(bad)
adc
mov
pop
adc
sbb
add
sbb
mov
dec
jnp
dec
(bad)
and
mov
adc
in
jbe
nop
jo
ret
push
inc
loop
test
cmc
or
push
add
mov
add
pop
dec
sbb
rol
adc
and
adc
sbb
adc
or
xchg
sbb
fld
pop
mov
aaa
xchg
mov
jae
dec
stos
pop
add
dec
mov
add
dec
sub
adc
mov
sbb
xor
sub
adc
pop
nop
jo
adc
dec
mov
mov
or
clc
lock
pusha
adc
xchg
dec
ret
cmp
clc
jmp
dec
mov
adc
push
add
push
or
shl
jmp
add
hlt
or
(bad)
lds
fisub
or
adc
inc
int3
xchg
sub
scas
leave
scas
inc
add
fmul
mov
retf
adc
and
in
push
jae
pop
xchg
xchg
mov
inc
fadd
or
aam
ficom
mov
retf
add
dec
mov
cmp
pop
xchg
and
or
xchg
add
sbb
push
scas
out
sbb
retf
ret
in
fsubr
jecxz
pop
stc
inc
push
fbstp
sub
sub
div
jmp
sub
push
pop
sbb
cmp
sub
sub
and
ret
dec
dec
xor
sub
inc
mov
or
adc
mov
pop
add
test
push
jmp
fdiv
and
dec
mov
fsubr
xor
imul
cmp
xor
call
pop
test
test
int
jnp
sub
int
adc
sub
mov
hlt
add
push
sub
hlt
ins
rcr
cmp
push
call
loope
sub
hlt
xchg
ins
out
sbb
and
dec
cmp
call
mov
dec
inc
js
jle
(bad)
xchg
xchg
add
repz
scas
adc
loopne
mov
ins
adc
ds
ret
imul
lock
mov
inc
push
dec
mov
sbb
add
pusha
add
mov
loop
cmp
(bad)
adc
push
mov
dec
iret
dec
lods
imul
movs
jmp
syscall
and
or
outs
or
or
or
sbb
mov
or
jae
add
(bad)
repnz
repnz
rcl
bnd
pop
call
push
fwait
scas
ret
mov
dec
popf
pop
sbb
inc
(bad)
xor
push
add
push
add
push
gs
jmp
jge
mov
mov
ss
lods
loopne
and
lahf
or
mov
mov
xor
push
jns
lods
mov
pop
jl
inc
dec
add
mov
sar
(bad)
add
or
xor
aaa
aaa
xor
add
mov
xchg
stos
ror
jle
adc
lea
cmp
cmp
loopne
jnp
loope
sar
jbe
and
jge
jne
icebp
inc
add
xor
adc
add
push
sbb
ds
icebp
out
push
inc
aam
push
add
pop
retf
das
mov
xchg
lea
pop
inc
sbb
ds
scas
and
push
mov
inc
enter
rcl
add
adc
mov
adc
and
test
inc
mov
or
dec
cmp
out
clc
sub
xchg
cmp
push
clc
call
push
pop
or
and
ret
test
pop
xor
and
xchg
loopne
push
add
sti
lahf
or
or
mov
push
xchg
inc
add
rcl
inc
mov
imul
adc
lea
dec
repz
daa
imul
cmp
nop
ret
cmps
cmp
inc
pop
jns
sub
mov
jbe
ret
std
or
fisttp
sbb
mov
int
enter
jo
xchg
add
push
push
ja
mov
pop
push
pusha
push
loopne
inc
movhps
and
fcom
push
ret
sub
es
pop
pop
pop
cmps
mov
(bad)
out
push
push
inc
fidivr
clc
push
and
push
push
adc
hlt
nop
mov
sub
mov
cmps
add
inc
pop
or
inc
sar
movs
adc
xor
shl
aad
or
ja
je
inc
push
pop
push
push
pop
pop
fmul
in
fdiv
movsx
cwde
fisttp
std
(bad)
stc
push
push
cmps
fidivr
mov
xor
jmp
mov
and
adc
mov
inc
sbb
sub
cmps
or
jb
xor
daa
add
push
cmc
push
xor
add
inc
or
repnz
adc
imul
mov
loope
mov
scas
mov
pushf
pop
jp
in
jge
xlat
(bad)
pushf
rcl
cmp
popf
fmul
push
push
vmread
push
inc
pmaxsw
push
les
sbb
push
(bad)
or
ret
push
add
in
jl
cmove
mov
or
(bad)
ret
sbb
cs
push
pop
mov
mov
sub
xchg
into
repz
push
je
loopne
mov
adc
and
into
repz
inc
push
fs
rcr
xchg
scas
mov
push
ins
xchg
je
pop
add
and
adc
inc
scas
or
in
jg
inc
xor
shl
adc
inc
daa
cmp
or
int3
jge
pop
push
cdq
push
ret
mov
and
(bad)
cmps
mov
ins
call
adc
push
sub
mov
and
retf
and
aam
cmps
fs
in
and
dec
push
fidivr
stos
and
and
stos
nop
cmps
sbb
or
inc
loopne
pop
and
pop
fsub
xchg
sbb
mov
pop
je
sub
movs
jecxz
jcxz
add
imul
mov
test
sbb
mov
js
loopne
frstor
repz
pushf
adc
jmp
loop
dec
icebp
and
dec
int
push
push
test
mov
inc
mov
add
pop
inc
xlat
leave
and
dec
nop
test
rcl
or
je
and
xor
xor
push
xor
dec
pop
mov
and
pusha
and
imul
push
cmp
adc
adc
push
push
popa
jge
in
movs
jne
sbb
shl
ds
add
xchg
inc
dec
sub
jge
dec
int3
xchg
cmc
dec
xor
mov
inc
xor
dec
addr16
gs
pop
in
cmp
dec
xor
sbb
(bad)
cmp
je
mov
fstp
sbb
nop
or
mov
inc
(bad)
and
ficom
jne
xor
popa
call
add
into
pop
aaa
cmp
retf
inc
icebp
pop
stos
add
sbb
adc
xor
and
push
or
outs
or
arpl
fwait
cmp
pop
in
les
sub
arpl
push
xor
js
leave
int3
clc
and
cmp
ss
call
or
pop
adc
adc
in
data16
aam
add
loop
cmp
push
inc
leave
pop
je
inc
pusha
pop
xchg
scas
test
add
cmp
xor
ret
add
out
push
call
in
and
cwde
pop
pop
call
sar
adc
lock
je
and
(bad)
jo
jmp
xchg
add
xchg
ret
xchg
mul
rcl
movs
clc
iret
addr16
adc
push
push
pop
shr
sbb
cmps
inc
push
add
push
aaa
mov
pop
sub
and
adc
sbb
lahf
adc
sbb
add
rol
xor
add
jg
lods
push
dec
int3
and
and
call
loop
rcl
add
jns
ror
inc
xor
mov
das
fist
sub
ficom
sbb
or
push
sbb
(bad)
inc
push
je
dec
sbb
aaa
xlat
and
push
shr
xor
fld
cmps
mov
pop
xchg
mov
mov
or
inc
add
mov
and
dec
or
rcr
or
adc
mov
xlat
xchg
fs
adc
push
mov
pcmpgtw
cwde
or
xor
fs
mov
mov
add
jb
xchg
pop
sub
imul
xor
ins
jecxz
sti
fcomp
(bad)
adc
push
push
call
add
mov
cld
pusha
popa
xchg
jne
outs
and
iret
clc
test
int
xlat
push
lods
rdtsc
and
adc
push
mov
cld
xor
push
fcomp
inc
ins
cmp
gs
and
pop
add
sbb
push
add
icebp
outs
in
mul
xor
push
loope
test
shl
sbb
cdq
or
mov
jo
add
add
mov
mov
and
cmp
push
and
push
mov
mov
push
cmp
rol
mov
pusha
lock
js
mov
push
neg
je
pusha
xchg
add
xchg
sbb
out
pop
jb
enter
jo
or
add
arpl
sub
mov
fst
data16
add
(bad)
jecxz
inc
daa
add
push
cli
jo
xchg
popa
daa
leave
mov
xchg
mov
xchg
xor
cmp
cmps
inc
aas
push
sbb
adc
cmp
adc
or
jne
pop
fwait
jne
cmp
add
adc
retf
(bad)
adc
pop
mov
sbb
adc
dec
mov
adc
fs
and
gs
sub
popa
add
cmp
cmp
xlat
xchg
imul
bound
ret
adc
pop
adc
xor
mov
ror
hlt
inc
push
popa
adc
pop
add
pop
add
xchg
inc
mov
or
mov
or
arpl
pop
jmp
dec
or
enter
call
neg
dec
test
and
adc
sub
add
sub
mov
jno
adc
rcr
xchg
es
in
test
xchg
inc
fdiv
add
jo
int3
adc
popa
sti
shl
rcr
xchg
mov
lods
jle
or
dec
inc
dec
add
adc
and
enter
std
ss
sbb
les
nop
int3
and
aam
lahf
es
shl
push
adc
adc
inc
add
imul
add
js
pusha
adc
fcmovb
dec
pop
pop
lock
sbb
adc
pop
daa
xchg
mov
xor
and
adc
jle
adc
in
dec
pop
or
rcr
out
out
sub
sbb
xor
(bad)
ss
lea
sub
dec
sub
shl
mov
sbb
xchg
and
sbb
ja
cmp
enter
xchg
nop
(bad)
cdq
popa
leave
repz
test
enter
inc
sbb
jbe
or
cmp
inc
push
cmp
inc
rcr
pop
mov
pop
xor
clc
sbb
ins
rol
sbb
inc
fidiv
stos
cmp
pushf
daa
mov
in
or
push
sahf
pop
pop
sbb
pusha
mov
arpl
adc
pusha
sbb
clc
adc
pusha
out
daa
cwde
es
dec
pop
es
rcl
sub
ja
pop
fwait
retf
lahf
or
dec
inc
imul
and
jbe
daa
(bad)
pop
add
pop
mov
lock
cmps
movs
and
in
inc
xor
pop
sub
ret
das
hlt
(bad)
xor
mov
(bad)
sbb
xlat
lock
aam
push
shl
dec
ja
dec
push
adc
inc
jmp
and
sub
mov
in
mov
inc
xchg
stc
nop
xchg
add
or
pop
xor
sbb
sbb
rcr
(bad)
dec
inc
jp
dec
or
int3
test
or
jno
pop
loopne
xor
push
loopne
mov
(bad)
xor
or
outs
add
cmps
or
push
lock
es
imul
or
xchg
int
mov
and
cmp
jae
icebp
(bad)
add
es
(bad)
repnz
sbb
pop
jg
push
push
xlat
loopne
pop
inc
inc
idiv
outs
dec
movs
sbb
out
mov
das
mov
popa
inc
inc
test
jp
jno
outs
sub
or
ss
fisub
fadd
xchg
shl
repnz
fcmovne
rol
data16
dec
inc
sub
cmp
test
or
mov
add
dec
xchg
outs
jo
les
or
xchg
xor
jb
mov
pop
outs
jne
sbb
adc
retf
push
adc
xlat
fstp
sahf
push
or
add
pop
add
add
pop
cmp
xchg
sub
or
addr16
adc
(bad)
push
add
adc
xor
or
inc
and
sbb
push
dec
push
jge
inc
pop
or
loop
add
and
lea
imul
daa
add
fnsave
les
or
adc
clc
jns
adc
mov
mov
out
loope
sbb
outs
pusha
popa
dec
lock
or
fmul
(bad)
shr
scas
cmp
ds
and
icebp
dec
add
int3
pop
test
xchg
mov
lar
xchg
or
or
inc
adc
jnp
or
iret
lods
adc
or
add
movs
rcr
js
adc
xchg
sbb
xchg
push
dec
pop
test
xor
xchg
add
pop
mov
adc
or
pop
and
push
dec
push
out
mov
js
ja
clc
cmp
neg
outs
add
pop
inc
inc
dec
xchg
adc
add
adc
or
xor
pushf
dec
pop
xchg
rol
and
ss
or
loop
cmps
ins
push
lods
clc
pop
sub
lock
out
pop
add
dec
push
cs
stc
jb
jnp
and
cwde
lods
xor
add
xor
outs
sub
mov
push
je
dec
bswap
add
cmp
aaa
and
mov
jnp
add
dec
sbb
push
xchg
ins
fs
push
hlt
push
dec
pop
rcr
pop
jns
dec
call
push
stc
xor
cmp
imul
das
clc
movs
sub
inc
jl
pop
out
push
push
add
xchg
xor
pop
cmp
jns
or
test
cmp
cs
adc
pop
add
add
(bad)
or
jmp
add
add
adc
push
scas
stos
adc
mov
mov
dec
push
adc
mov
mov
mov
mov
pop
inc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
pop
ss
mov
scas
jmp
jmp
or
fbld
int3
jmp
gs
pop
dec
jl
in
repz
mov
push
call
in
imul
out
mov
add
sub
ins
mov
imul
and
dec
mov
push
shl
shr
push
jae
pusha
fmul
push
test
xor
iret
in
je
jp
dec
push
fdivrp
xor
lods
push
(bad)
arpl
jns
jnp
out
ss
inc
push
or
push
ins
fnstcw
int
dec
cmp
xchg
xchg
cmp
inc
fdivr
inc
sahf
test
ret
imul
cmp
jle
and
adc
sbb
cmp
pop
or
pop
jo
add
enter
in
nop
jne
xlat
outs
pop
sbb
pushf
xor
pop
push
cmc
mov
test
std
cld
jne
loopne
adc
jl
sub
leave
add
inc
mov
in
retf
loopne
mov
ret
rcl
add
ins
push
repz
loope
or
dec
mov
mov
inc
sbb
inc
adc
repz
adc
and
aaa
cmps
adc
test
inc
ins
test
call
in
adc
adc
adc
adc
sub
inc
loopne
lock
call
cmp
dec
cmp
je
cwde
add
pop
enter
push
sbb
xchg
inc
xchg
(bad)
add
xor
push
(bad)
sub
cmp
pusha
aaa
inc
sbb
ds
outs
fst
dec
aam
fdivr
test
xor
imul
mov
repnz
mov
xor
sbb
inc
dec
mov
mov
pop
adc
iret
js
call
push
arpl
sub
lock
xchg
xor
outs
sbb
pop
mov
push
and
sbb
test
lods
cmp
popf
push
inc
sub
inc
nop
mov
je
pop
movs
or
add
jne
in
pop
das
int3
test
sbb
xor
jp
mov
xor
jne
add
adc
inc
jns
mov
es
mov
call
jmp
mov
inc
pop
daa
shl
fwait
adc
int
sub
adc
mov
adc
stos
sbb
mov
nop
dec
ja
aaa
ins
sub
pop
jb
or
cs
repnz
push
test
ret
fwait
mov
or
sub
push
or
dec
imul
xor
xor
js
jae
jmp
xor
data16
inc
pusha
pusha
repz
xor
dec
xor
sbb
pop
sbb
push
ss
das
mov
and
xchg
outs
dec
xor
nop
sbb
fadd
adc
mov
aaa
test
out
or
sbb
dec
xchg
jmp
dec
jmp
sar
fbstp
mov
jne
fisttp
imul
add
jb
enter
adc
ror
and
ret
and
pop
cmp
adc
mov
daa
sbb
aaa
pop
xchg
sar
fisttp
push
jne
popa
ficomp
xchg
cmp
add
test
nop
fdivr
popa
pop
enter
lods
test
in
inc
cwde
cwde
nop
out
mov
xor
push
into
fwait
test
dec
adc
xor
inc
(bad)
xor
inc
sar
rol
add
pop
add
inc
and
inc
ror
adc
inc
add
nop
and
and
sbb
test
mov
or
ja
fild
inc
sahf
test
adc
out
loope
or
shl
mov
shl
sbb
xchg
imul
and
mov
or
jp
dec
and
push
push
dec
xchg
push
adc
inc
inc
add
dec
mov
inc
push
mov
dec
push
inc
loopne
stos
mov
sub
mov
test
sbb
mov
scas
add
xor
add
scas
(bad)
sbb
cmp
leave
push
adc
cmp
mov
push
push
pop
push
cbw
outs
xchg
and
pop
jae
xlat
cmp
xor
push
push
pop
mov
jno
dec
mov
ror
enter
in
nop
leave
xchg
inc
pushf
add
xor
or
mov
pop
sbb
push
or
fstp
clc
pop
pop
lods
push
in
or
or
push
and
enter
test
(bad)
jmp
repnz
inc
mov
mov
mov
(bad)
mov
div
lahf
repz
mov
inc
mov
ss
lods
ret
adc
or
out
pop
sub
pop
mov
cmp
push
nop
or
sub
in
sahf
nop
nop
or
xor
inc
sub
or
std
adc
cmps
hlt
inc
movs
xchg
jecxz
in
loopne
sahf
or
sub
mov
mov
nop
dec
adc
les
cmp
add
imul
sysret
sbb
jmp
or
enter
sub
nop
ror
add
scas
add
mov
push
int
inc
and
cmp
sub
push
daa
cmps
dec
mov
xchg
pusha
or
adc
and
outs
add
cmp
jbe
fwait
mov
mov
xchg
mov
pop
mov
sbb
hlt
or
adc
jne
push
mov
or
pop
sub
scas
push
lea
jle
xor
aaa
arpl
xor
sub
aam
sbb
cdq
js
add
sahf
mov
adc
pusha
loop
outs
adc
rcl
mov
add
xchg
pop
cmps
into
or
xor
ins
mov
fsubr
aas
inc
je
xchg
and
lods
xchg
xor
push
lock
xor
int
xchg
in
mov
shl
cmps
and
es
ret
dec
or
inc
fbld
bound
dec
stc
xor
mov
fisttp
sbb
and
loope
inc
arpl
add
dec
jnp
clc
hlt
or
xchg
stc
dec
cdq
aas
and
add
sub
mov
jmp
stc
pop
inc
cdq
or
lea
mov
rcr
ss
repz
jae
and
add
and
or
ficomp
cmps
sbb
mov
ins
jmp
and
or
pop
xlat
movq
xchg
fs
lods
test
shl
nop
or
fimul
mov
cmove
mov
dec
aas
call
adc
mov
(bad)
(bad)
pop
repz
jnp
rol
stc
add
push
dec
mov
inc
les
imul
mov
jb
cmps
lahf
add
sbb
xor
jno
and
inc
outs
std
cmp
inc
mov
popa
mov
outs
adc
ja
daa
loop
or
add
sub
cmp
nop
or
adc
test
xchg
out
sub
je
mov
mov
xor
jb
xchg
ins
sub
cmp
fst
ret
outs
sar
jne
ficom
adc
mov
std
idiv
out
outs
adc
je
or
adc
add
pop
sahf
retf
jae
add
adc
jle
push
data16
popa
call
pusha
xchg
xchg
adc
aaa
fadd
sti
add
pop
sar
and
mov
xlat
(bad)
hlt
imul
gs
out
adc
xchg
xchg
retf
enter
add
pop
inc
and
add
adc
dec
xlat
and
lahf
pusha
shl
pop
adc
xchg
sahf
nop
dec
or
adc
cwde
jmp
mov
and
mov
push
mov
push
retf
xor
cwde
add
pop
out
pusha
mov
or
or
fwait
out
or
or
mov
jne
inc
inc
jp
lds
and
ins
test
fnsave
scas
fld
mov
data16
dec
xchg
aad
and
or
adc
es
icebp
cld
nop
sbb
and
xor
jae
adc
pop
sbb
into
or
scas
pop
inc
add
pop
test
mov
inc
pop
pop
sbb
add
sub
fcom
sbb
or
(bad)
xchg
retf
or
(bad)
ror
imul
lods
aaa
xor
stos
and
sub
fmul
enter
mov
push
or
(bad)
(bad)
push
push
movs
mov
push
xchg
add
je
ss
and
and
inc
popa
sub
clc
aam
push
cmp
inc
je
add
icebp
add
or
push
xor
enter
cmp
les
dec
add
lea
adc
pusha
cs
mov
mov
inc
dec
sbb
leave
dec
das
add
mov
mov
and
cmp
hlt
aaa
mov
in
xor
pop
push
sbb
dec
add
in
mov
push
out
sahf
add
sbb
xor
shr
sbb
pop
or
jmp
pop
cmps
test
pop
mov
movups
and
adc
fdiv
lock
fisub
inc
jne
sbb
add
mov
xchg
scas
mov
clc
jp
(bad)
ss
xchg
std
sub
add
cwde
rcl
or
sub
(bad)
ror
enter
es
add
xchg
mov
leave
xor
mov
jmp
imul
add
nop
je
dec
rcl
mov
push
adc
mov
mov
or
mov
push
rol
addps
mov
inc
inc
jnp
dec
sub
adc
and
inc
movs
xchg
lahf
pop
cwde
add
arpl
mov
or
sbb
lahf
push
loopne
jnp
ds
rcl
clc
pop
out
mov
sub
scas
sbb
push
aaa
add
sub
cld
aam
inc
cmovbe
fisttp
adc
scas
push
pcmpeqb
or
sbb
or
aas
cmp
in
popf
dec
inc
lods
ror
inc
add
and
sub
cmove
pop
mov
dec
push
movs
mov
cmp
sub
fisttp
aas
ins
loopne
call
inc
cli
inc
jp
inc
sub
sbb
or
push
mov
test
loopne
unpckhps
(bad)
adc
fwait
mov
je
mov
out
or
jmp
ins
sub
in
xchg
(bad)
and
inc
mov
lods
push
add
cmps
cmp
out
fisttp
lock
movs
jb
xor
and
ins
inc
jmp
lock
rol
push
jp
add
and
out
inc
sbb
push
call
sbb
(bad)
(bad)
shl
and
sar
aaa
add
dec
mov
loop
add
inc
xor
sti
sar
js
inc
jle
push
sub
inc
pop
dec
or
push
xchg
or
push
push
pop
xlat
mov
sbb
popa
dec
sub
inc
xchg
or
adc
pop
or
push
inc
sbb
sbb
mov
jo
pop
or
(bad)
clc
mov
pop
mov
adc
ja
je
test
sbb
push
xlat
sub
test
add
xchg
push
mov
sub
stc
inc
sub
pushf
and
add
rcr
ror
mov
je
(bad)
and
imul
adc
lods
lds
fidiv
sbb
jne
mov
cmp
in
mov
add
add
nop
sbb
mov
pushf
imul
dec
shr
fwait
cs
outs
sbb
xchg
push
push
mov
inc
mov
je
jb
dec
aam
cmp
popf
lods
jno
jmp
daa
xchg
xor
mov
dec
cmps
cmps
mov
sub
sbb
mov
dec
sub
cmp
add
(bad)
push
mov
mov
add
jecxz
test
or
fwait
mov
push
iret
pop
mov
lahf
loope
cmc
inc
sar
jge
test
loope
hlt
xor
and
pop
sahf
push
adc
add
test
idiv
jmp
outs
xor
add
dec
mov
cmp
xor
mov
sub
and
cmps
jae
lods
xor
test
gs
and
add
push
sbb
stos
adc
pop
enter
mov
(bad)
push
scas
xlat
adc
adc
in
xor
pop
in
(bad)
popa
jmp
test
test
mov
jge
jge
cmps
ret
adc
push
and
(bad)
adc
inc
pop
test
nop
adc
sbb
adc
push
inc
rcr
test
inc
and
fucom
adc
popa
retf
inc
das
mov
pop
or
jmp
or
ret
imul
mov
gs
jg
pop
pusha
and
mov
xor
aaa
ret
adc
adc
(bad)
(bad)
and
pusha
jo
mov
and
mov
cdq
mov
sbb
(bad)
invd
add
enter
inc
ins
stos
(bad)
aaa
(bad)
mov
std
mov
gs
add
mov
sbb
push
or
daa
stc
test
loop
fidivr
stc
and
or
hlt
imul
add
jg
mov
cmp
pop
adc
push
pop
movs
pop
scas
cmp
call
adc
in
scas
mov
mov
mul
loopne
inc
adc
push
xor
mov
jne
sub
mov
dec
lock
aas
pop
fdivr
ins
fist
aas
inc
and
arpl
je
add
int
dec
in
pusha
jg
pop
mov
or
(bad)
jno
mov
push
cmp
les
mov
test
js
add
sbb
mov
or
or
mov
pop
sbb
outs
sbb
lods
fcmovnu
or
mov
cmovne
and
pop
add
add
push
push
or
adc
rcr
int3
inc
pop
and
pop
dec
nop
and
fisubr
or
xchg
dec
xor
mov
xchg
je
sbb
push
sub
es
pop
rcl
shl
or
xchg
shl
dec
xchg
rol
arpl
push
and
inc
pop
mov
inc
fcomp
outs
or
add
sbb
(bad)
pop
aas
in
fwait
movs
inc
loopne
pop
mov
test
add
and
mov
and
loop
loopne
stos
fimul
mov
jns
stos
rcl
pop
push
fbld
add
sbb
loopne
cmp
jge
imul
clc
scas
xchg
lock
mov
mov
adc
cmps
(bad)
shr
dec
cmp
call
and
test
imul
and
in
call
shr
in
xor
aas
mov
xor
sub
mov
jp
and
sbb
pop
imul
jmp
mov
stc
xor
mov
mov
add
push
inc
ffree
lds
jl
and
xor
in
push
add
add
cmp
push
lods
sbb
inc
fcom
sub
nop
scas
dec
jmp
pop
sub
and
pop
inc
push
cwde
add
test
jmp
sub
or
add
push
pop
movs
mov
mov
add
popf
stos
or
shr
cwde
daa
mov
lahf
sub
push
jne
inc
outs
popa
pop
fadd
inc
pop
aad
add
mov
mov
aas
loopne
adc
mov
dec
sbb
imul
ins
xchg
rol
inc
enter
sub
mov
fst
inc
aas
mov
ror
(bad)
and
in
neg
inc
sbb
mov
jne
clc
movs
add
add
pop
scas
test
fwait
and
mov
dec
cwde
push
add
jne
cmp
mov
cmp
shr
pop
push
or
ror
inc
inc
xchg
xchg
push
mov
ins
loope
xor
push
addr16
dec
xlat
dec
cmp
or
sub
mov
(bad)
xchg
stos
mov
les
shl
sub
push
lods
shl
xor
ret
cmp
pop
inc
xchg
inc
pop
sbb
loope
xor
add
sub
test
and
xchg
pop
dec
adc
retf
cmps
or
add
cs
clc
popa
dec
ins
sub
adc
enter
lock
int3
or
dec
dec
and
push
inc
xor
mov
xor
xor
mov
fdiv
pusha
ror
add
cmp
adc
cmp
push
ror
iret
pop
or
mov
cs
sub
adc
add
repnz
xor
inc
fsub
add
test
xor
jmp
and
js
test
in
popa
adc
int3
mov
push
dec
dec
push
inc
test
lods
mov
nop
bound
jmp
rcl
add
ins
cmps
mov
sbb
sub
nop
adc
add
das
shl
mov
pop
imul
nop
inc
adc
or
dec
sub
sbb
bound
jnp
mov
imul
inc
pop
icebp
sbb
lods
pop
test
fnstenv
inc
sbb
adc
cmps
mov
in
das
add
stos
pop
mov
int3
and
aam
fiadd
aad
scas
lods
jno
adc
cdq
popa
jmp
xchg
xchg
call
xor
cmp
(bad)
push
mov
pop
cmp
cmp
push
xor
pop
and
push
cmp
pop
xor
xchg
mov
(bad)
fs
dec
dec
lods
fwait
inc
and
xor
add
popf
loop
rol
pusha
and
adc
hlt
jecxz
in
adc
adc
xchg
mov
push
xchg
mov
fld
add
arpl
sbb
push
test
dec
adc
shr
cmp
jmp
or
adc
ins
pop
add
(bad)
jmp
pop
in
in
call
pop
xor
(bad)
pusha
xor
add
add
add
xchg
pop
xchg
mov
call
fwait
xor
push
adc
ret
cmc
jo
mov
xor
adc
lock
js
pop
pop
ja
lods
shl
rcr
jo
addr16
add
inc
arpl
push
cmp
je
daa
push
scas
call
xor
and
aaa
push
or
or
sub
cmp
sub
into
out
push
inc
js
cmp
xchg
shl
ret
jg
inc
inc
mov
mov
cmc
sbb
or
ins
ins
and
push
repnz
cli
add
scas
(bad)
(bad)
in
mov
jo
and
sbb
cmp
push
test
fld
cwde
and
add
lds
pop
arpl
test
mov
pop
mov
call
or
and
stos
pop
dec
int
xor
sbb
mov
mov
jl
gs
popf
and
push
js
test
xor
rcl
add
add
call
or
repnz
adc
sub
add
test
mov
mov
adc
push
pop
xchg
jg
mov
mov
repnz
sub
inc
ds
inc
cmp
mov
mov
push
xor
add
scas
push
mov
pop
in
xor
push
sbb
pop
sub
jae
popf
fdiv
jg
setp
pop
scas
and
jge
das
xchg
mov
push
mov
mov
ss
je
sbb
pop
mov
iret
sub
lock
pop
adc
add
sbb
es
dec
or
or
xchg
into
ret
fiadd
ins
mov
lds
ret
add
pop
xchg
nop
ret
enter
xchg
adc
ret
(bad)
retf
xchg
and
enter
mov
add
rol
in
push
push
push
test
and
dec
outs
mov
mov
inc
call
dec
call
push
and
xchg
rcr
dec
cwde
jg
and
ret
mov
in
dec
lock
mov
in
add
ror
xor
(bad)
call
mov
cs
adc
push
inc
jmp
adc
stos
out
ins
or
imul
call
iret
sbb
hlt
jne
inc
clc
jnp
pop
adc
or
mov
pop
pusha
and
adc
dec
jae
movs
push
add
sub
out
or
test
sub
mov
adc
sub
adc
mov
in
dec
sub
out
lahf
adc
sub
ins
js
or
dec
sbb
or
push
inc
push
jp
jne
inc
jmp
stc
lock
and
adc
push
js
outs
rcr
inc
jp
sub
pop
push
sub
sbb
jno
test
adc
lock
mov
rol
xchg
nop
jle
sbb
and
adc
mov
mov
sbb
mov
adc
mov
nop
pop
xor
es
sbb
add
fcomp
cmp
sub
push
and
mov
mov
clc
inc
jg
xchg
dec
and
sub
pop
inc
imul
and
test
int
pop
sub
outs
fcom
cmp
lods
lahf
xchg
rcr
add
pop
jne
adc
cli
mov
push
and
mov
pop
shl
sub
and
fld
imul
cmp
das
test
jmp
mov
or
mov
jp
mov
and
and
fucom
cmp
xchg
or
ror
mov
add
sub
jne
sub
enter
or
sbb
dec
sbb
push
sub
dec
inc
mov
push
ja
dec
xor
jae
fadd
xor
fdivr
adc
call
test
loop
cmp
imul
sar
or
ror
jae
cmp
mov
cmps
call
fild
and
inc
data16
dec
xor
shl
or
cdq
stos
cwde
dec
test
cmps
imul
test
add
pop
call
mov
xchg
pop
aam
outs
sbb
xor
fld
and
xchg
dec
fld
imul
xor
inc
pop
and
add
dec
aam
lds
and
mov
cmp
in
mov
or
in
cld
cdq
rcl
dec
in
jl
jp
mov
or
nop
xor
leave
or
push
push
sub
cmp
mov
ins
adc
test
push
sbb
dec
inc
out
add
(bad)
xchg
xchg
(bad)
out
cli
push
outs
leave
xor
xor
and
pushw
add
xchg
ret
and
cmp
fidiv
xor
stos
ins
scas
add
movs
call
xor
icebp
inc
xchg
add
push
cwde
xor
popa
mov
lea
jnp
scas
xchg
aam
xchg
or
ds
push
push
sub
or
and
rol
mov
mov
inc
call
ret
arpl
sub
jnp
ins
or
shr
jbe
adc
push
inc
jp
jl
pop
inc
xchg
inc
push
movs
call
nop
fist
add
add
neg
in
sbb
and
or
retf
(bad)
xor
push
push
movs
and
pop
pop
ret
jmp
outs
push
movs
loope
dec
mov
jno
pop
xchg
outs
in
or
and
mov
dec
or
je
push
inc
push
add
pop
and
aam
or
mov
test
int
jecxz
popa
jns
cmps
cmp
and
cli
dec
mov
sub
mov
dec
lock
not
push
test
cmp
dec
or
ds
inc
jo
ds
repz
ficom
add
outs
daa
jo
xor
xor
pop
inc
jmp
lods
test
and
lahf
inc
dec
sbb
add
sbb
dec
adc
add
push
(bad)
arpl
mov
sbb
mov
ret
gs
sub
mov
mov
xor
push
cmp
cdq
and
add
(bad)
shl
std
pop
dec
add
xchg
or
cdq
jne
add
and
cmps
adc
push
cmp
xor
aad
(bad)
or
daa
sub
mov
xlat
xor
stos
jg
sub
and
test
movs
jmp
pop
lock
inc
sbb
les
ja
xor
not
xor
inc
cmps
not
jb
mov
push
inc
cmp
dec
dec
jnp
les
xor
xlat
or
sub
jno
sbb
mov
out
sbb
push
inc
or
ret
and
rcl
add
loopne
or
mov
jecxz
cmp
in
push
jmp
xchg
cdq
push
dec
ret
add
sbb
cmp
mov
sub
xchg
mov
fadd
jl
adc
cmp
xchg
sbb
mov
lea
dec
cs
mov
adc
inc
inc
xchg
shr
stos
push
aas
mov
cmp
inc
jmp
sbb
imul
push
adc
sbb
jne
das
pop
mov
cmc
int
push
scas
xchg
sbb
dec
xor
leave
aas
cmp
fcmovu
xchg
int
popf
or
enter
add
add
movs
js
pop
repnz
mov
movs
sbb
(bad)
dec
out
pusha
daa
popf
cdq
pop
stos
mov
and
jb
mov
pop
xchg
pop
(bad)
mov
hlt
pop
xchg
cmp
add
movups
mov
xor
cmp
imul
push
sbb
xchg
addr16
add
cmps
or
inc
(bad)
sub
dec
and
into
xor
repz
mov
adc
dec
mov
sbb
inc
clc
inc
adc
adc
xchg
jno
in
cwde
sub
dec
pusha
xor
loope
dec
mov
sbb
xchg
in
call
shl
xchg
lock
xor
fldlg2
xor
mov
sbb
and
sbb
retf
ret
jno
adc
mov
and
mov
push
dec
mov
jecxz
jl
sbb
push
and
inc
inc
in
in
ret
ret
mov
daa
and
mov
pop
xchg
arpl
adc
push
sar
mov
adc
nop
dec
or
in
adc
or
pop
lea
or
push
or
and
hlt
pop
jno
test
ins
sbb
fbstp
and
xor
lds
lods
xchg
je
and
mov
xor
arpl
lods
mov
cmp
mov
mov
shl
or
cdq
adc
sub
mov
ficom
and
clc
aad
cmps
sbb
cmp
pop
xchg
add
sub
jmp
adc
daa
fnstsw
lahf
cmp
das
mov
mov
jbe
push
pop
mov
nop
pop
enter
bound
sub
sub
jno
pop
or
pushw
je
push
sar
rcr
push
addr16
inc
sbb
jp
mov
aas
dec
and
dec
fucom
jecxz
xor
dec
inc
add
or
rcr
pusha
movs
je
in
inc
jns
push
push
dec
xchg
add
aad
add
mov
stos
loopne
sub
retf
mov
fsubr
xchg
out
inc
in
hlt
test
add
mov
mov
pop
or
mov
fcom
inc
dec
ja
dec
push
ins
imul
sbb
arpl
les
adc
add
mov
shr
(bad)
sbb
inc
xor
clc
add
pusha
sub
mov
xor
mov
add
xor
pop
dec
retf
rcr
pop
lods
popa
sub
adc
push
sub
dec
sub
cmp
dec
retf
push
jmp
mov
enter
cmp
pop
imul
movs
and
not
lock
js
popa
and
pop
add
xchg
mov
add
pop
repz
ds
cld
mov
sbb
test
je
jg
es
mov
add
cmps
aaa
(bad)
mov
adc
hlt
adc
sbb
adc
pusha
dec
pop
test
dec
mov
fs
sbb
(bad)
and
cmp
adc
push
retf
or
xchg
mul
cwde
mov
mov
cld
mov
push
mov
imul
scas
or
add
add
jne
mov
jmp
mov
fisttp
pop
inc
or
repnz
outs
in
mov
add
out
mov
jecxz
push
push
cwde
sub
add
xchg
and
ins
stos
mov
xor
pop
ret
jae
xchg
push
iret
(bad)
lock
and
add
push
add
jl
and
arpl
or
inc
loopne
push
and
and
lea
add
or
mov
sbb
arpl
fwait
aas
call
es
sub
inc
sti
sub
mov
or
ret
aad
adc
inc
mov
icebp
and
or
cdq
push
xchg
or
enter
push
adc
mov
dec
in
push
push
ret
pushf
sub
adc
fldcw
mov
mov
cmp
xchg
stos
mov
out
mov
mov
sub
cld
cmp
je
jmp
inc
aas
jmp
push
pop
ret
jo
leave
inc
aas
and
dec
inc
dec
or
mov
inc
jo
and
(bad)
and
mov
addr16
push
in
adc
sbb
jne
cmp
das
fadd
(bad)
and
add
and
ds
(bad)
addr16
ja
inc
or
loopne
and
call
mov
adc
loope
(bad)
mov
mov
mov
dec
data16
adc
xor
dec
adc
test
out
pop
jbe
retf
dec
cmp
or
jg
push
popf
adc
pop
add
in
and
jmp
or
sub
cwd
add
jne
and
push
je
inc
aas
push
adc
stos
dec
and
test
sbb
pop
fsub
lods
jecxz
pop
mov
clc
ret
add
je
out
fisttp
push
fstp
int3
les
xor
(bad)
addr16
sbb
test
adc
push
sbb
xchg
test
mov
xchg
mov
adc
sub
mov
test
mov
daa
mov
lea
mov
imul
push
push
xchg
or
xchg
dec
lods
xor
xor
orps
mov
mov
fiadd
xor
add
xchg
sub
mov
loopne
mov
add
mov
mov
pop
xlat
xor
fs
data16
sub
jo
fs
and
das
jge
fimul
in
dec
jmp
daa
fidiv
or
aas
add
push
or
nop
add
push
xchg
and
push
mov
fwait
js
imul
sbb
ret
js
dec
push
pop
add
inc
inc
or
mov
mov
dec
js
pop
add
xchg
enter
scas
and
arpl
sbb
scas
jmp
daa
adc
sbb
sub
xlat
sbb
mov
je
jne
jge
pop
add
rcr
call
mov
cmp
in
in
and
pop
mov
xchg
and
jne
jg
das
shr
sub
mov
movs
out
fstp
dec
adc
aad
icebp
inc
push
push
leave
xchg
jl
and
lods
cld
jl
pop
pusha
es
sbb
in
ret
loop
call
scas
movs
or
push
pop
mov
cwde
mov
rcr
jmp
push
and
add
sub
add
dec
sbb
inc
sbb
adc
fcomp
dec
inc
jl
and
fdivr
les
ja
pusha
lods
sbb
jns
dec
sti
mov
jp
adc
fld
popf
jne
mov
add
jb
sbb
push
dec
and
and
inc
dec
enter
xor
cs
adc
add
and
sbb
fcom
adc
out
(bad)
loopne
dec
ja
cs
dec
or
pop
mov
pop
pop
lods
int
pop
sahf
sub
dec
lea
and
je
dec
xor
xor
daa
ret
mov
or
jbe
add
lock
popa
and
or
and
and
xchg
push
dec
pop
jno
imul
outs
fcom
and
(bad)
push
inc
int
enter
xor
dec
cld
cmp
inc
or
cwde
push
mov
and
mov
test
movs
cmp
sub
dec
in
mov
(bad)
shr
lock
or
sub
mov
outs
leave
das
pushf
mov
sbb
pop
loope
cmp
add
loope
aaa
sub
or
lods
loopne
(bad)
outs
jge
cmps
pushf
movs
pusha
inc
xchg
dec
add
inc
sub
pop
sub
push
dec
or
cli
add
std
adc
and
add
pop
daa
or
test
imul
push
xchg
inc
dec
and
jne
adc
cmp
into
sbb
sbb
xchg
mov
lds
dec
and
dec
std
ins
sbb
xor
addr16
loop
adc
aaa
mov
stos
test
xor
or
in
push
loop
(bad)
pop
cmp
daa
cs
inc
jmp
gs
rol
cmp
les
or
cmps
pusha
jl
call
push
push
pop
cmp
inc
stos
xchg
xor
mov
jns
inc
pop
add
clc
push
inc
loop
or
ret
pop
shr
jo
js
cmp
nop
es
and
outs
add
in
retf
neg
add
pop
xor
cmc
gs
xlat
rcr
popf
add
jb
xor
jns
enter
add
clc
push
pop
add
pop
lock
and
aas
mov
add
add
fs
adc
xchg
aas
xor
push
adc
fild
mov
jecxz
not
pop
outs
inc
or
push
stc
jno
push
fwait
add
leave
jo
mov
cmp
adc
dec
enter
cs
popf
mov
push
pop
out
pushf
or
xchg
pop
and
dec
and
adc
jns
out
or
shl
movs
xchg
mov
test
inc
and
or
or
mov
mov
outs
test
cs
dec
in
ds
pop
pop
mov
mov
pop
dec
mov
mov
add
js
push
ret
push
ja
adc
inc
pop
ret
adc
mov
adc
cmps
add
sub
shl
push
inc
push
adc
mov
and
scas
sti
ret
add
jmp
fdivr
mov
addr16
scas
cmp
adc
sbb
mov
inc
pop
sub
inc
pop
das
ret
mov
test
xor
pusha
pop
cmovb
and
shl
xor
bound
dec
pop
fisttp
push
ret
out
xor
xchg
iret
rol
adc
imul
push
mov
dec
imul
scas
inc
lea
cmp
sbb
pcmpeqb
or
cmp
mov
and
pop
adc
sbb
mov
pop
mov
movs
adc
mov
sbb
mov
outs
adc
lahf
cmp
cmp
push
jno
jecxz
rcl
inc
jge
xor
mov
inc
add
icebp
cdq
inc
mov
xor
call
or
xor
cmps
mov
or
add
pop
dec
sub
shl
or
add
dec
adc
pop
lds
dec
aaa
lock
aaa
inc
outs
mov
test
das
add
scas
inc
lahf
inc
lahf
mov
rcl
or
aam
add
ret
int3
cmps
push
inc
push
push
add
mov
or
mov
add
xchg
or
push
dec
sbb
loop
in
xchg
dec
std
mov
sbb
neg
sub
adc
add
jmp
mov
outs
cmp
lods
adc
imul
je
push
cmc
sbb
dec
leave
cmp
lea
sub
inc
fdiv
mov
sub
cmp
adc
(bad)
pop
mov
push
sub
test
add
outs
add
sub
pop
shl
nop
pop
cmp
or
(bad)
aam
(bad)
shr
sbb
inc
sub
xor
add
xor
push
push
push
jp
in
jecxz
mov
dec
cmp
sbb
inc
pop
cmp
(bad)
in
xor
lods
rcr
es
jmp
lock
ds
push
mov
clc
cmp
lahf
mov
xor
jl
cmps
clc
add
adc
and
or
popa
push
fidivr
inc
loopne
adc
outs
and
mov
popf
(bad)
jge
lock
jmp
and
mov
popa
psraw
push
mov
sub
js
dec
adc
loopne
adc
sar
lock
push
sar
mov
daa
adc
dec
adc
scas
arpl
pop
call
mov
jb
daa
or
or
sub
retf
xchg
pop
add
add
xchg
cmp
sbb
aas
mov
mov
mov
clc
sub
add
aam
adc
mov
jns
(bad)
std
adc
or
mov
inc
js
mov
or
test
and
ja
and
xchg
shr
add
pop
leave
xchg
ficom
dec
outs
imul
cmp
sbb
sub
lods
inc
jno
daa
push
(bad)
sub
add
int
mov
cmp
jae
ja
ins
mov
mov
add
or
jne
mov
ss
in
add
add
out
sbb
(bad)
mov
jl
adc
jno
ror
shl
cwde
dec
aad
mov
lods
daa
mov
add
loopne
add
and
les
push
xchg
fwait
push
push
inc
and
cmp
push
lods
dec
dec
jb
jns
sub
and
or
add
ret
mov
add
(bad)
and
cmps
pop
or
sub
sbb
dec
and
loope
push
sub
and
fcmovnb
add
and
retf
jne
cmps
jo
ins
dec
gs
xlat
adc
bound
mov
mov
push
jno
les
adc
or
hlt
mov
xchg
test
or
mov
daa
je
mov
dec
push
xchg
lock
cli
nop
outs
ins
and
clc
pop
in
sbb
jae
pop
mov
xor
mov
rol
xor
pop
sar
ss
popf
aaa
xchg
pop
aam
inc
adc
dec
nop
fld
nop
push
and
mov
popa
mov
lds
pushf
inc
scas
inc
pop
and
repnz
dec
stc
jmp
cmp
in
add
and
outs
pop
inc
inc
and
push
add
dec
sbb
adc
lahf
test
pop
mov
call
imul
js
and
mov
jnp
popf
push
add
or
loopne
xor
push
add
es
pop
push
mov
inc
pusha
pop
in
jne
or
sbb
and
and
add
adc
sub
push
movs
mov
ret
mov
je
loop
je
(bad)
and
or
cmp
in
add
push
sbb
mov
sub
clc
sbb
inc
lea
je
cmp
cvttps2pi
add
pop
test
js
ret
cwde
jg
pop
dec
sbb
nop
sub
push
ret
ror
inc
inc
push
pop
mov
in
stos
jmp
pop
daa
test
and
adc
sub
mov
dec
jge
daa
and
fs
or
mov
mov
addr16
add
push
add
add
sti
and
sti
inc
cmp
xchg
inc
pop
sub
dec
jmp
push
add
loopne
fnstsw
inc
or
adc
sbb
mov
sar
sub
daa
and
repz
xor
push
shr
mov
rol
pushf
push
dec
cwde
mov
cwde
inc
outs
push
sub
xlat
push
dec
ds
xor
(bad)
adc
nop
and
imul
or
pop
mov
mov
push
inc
les
pop
push
add
sbb
pushf
add
jne
mov
loope
mov
mov
sbb
imul
inc
pop
and
inc
pop
and
sbb
add
and
sbb
xor
sbb
jb
sbb
cdq
loopne
mov
adc
pop
sbb
in
jo
pop
pushf
sub
cmc
add
push
fimul
xchg
xchg
rcr
adc
and
mov
xchg
inc
push
adc
mov
gs
popa
jmp
je
xchg
ja
sub
(bad)
xor
mov
xchg
(bad)
lods
add
ds
add
(bad)
je
arpl
jmp
mov
shr
mov
retf
mov
jmp
popa
push
cmp
ins
xor
add
add
outs
cmp
adc
test
mov
nop
inc
sbb
mov
ins
aaa
sub
sbb
inc
sbb
stc
cmp
ror
test
bound
rcr
pusha
add
jo
or
jno
pop
cld
inc
ins
add
and
sbb
mov
cmps
retf
addr16
dec
jae
cmc
pop
lock
(bad)
adc
mov
adc
sbb
unpckhps
test
or
out
or
or
mov
sbb
(bad)
(bad)
mov
sub
jle
xor
in
and
cmp
or
sbb
ror
ds
and
inc
stc
rol
xor
cmc
es
and
rol
scas
test
and
add
jne
(bad)
mov
cmp
mov
xchg
mov
aas
fadd
mov
ja
adc
xor
jno
jo
mov
movs
mov
sbb
inc
jno
jb
pop
into
and
pop
pop
inc
sbb
adc
stos
cmps
cmc
mov
inc
sbb
lea
adc
inc
adc
cmp
or
push
inc
scas
xor
or
xchg
add
push
repnz
je
outs
or
sbb
xor
sbb
pop
imul
(bad)
sbb
stos
push
mov
dec
add
jo
or
mov
pop
mov
iret
fisttp
rol
loop
pop
ret
rol
stos
and
inc
scas
sub
adc
sbb
and
pop
pop
inc
je
or
push
adc
movs
xor
pop
xchg
(bad)
jne
or
dec
pop
lahf
imul
xor
jbe
mov
add
neg
and
pop
add
pop
fistp
mov
call
(bad)
push
and
mov
outs
xor
movs
jecxz
(bad)
inc
and
add
add
mov
loopne
push
shl
adc
pop
adc
or
fs
ror
lods
cs
daa
pop
ds
call
shr
pop
xor
and
adc
dec
sbb
push
sbb
add
js
outs
and
test
loopne
and
es
fwait
loope
loope
sbb
or
in
adc
fs
popf
in
iret
call
dec
aaa
sub
je
inc
js
adc
pop
add
les
add
rcr
sbb
sbb
fnstenv
jge
test
add
add
pop
xchg
movs
inc
aaa
sub
sub
adc
mov
fcmovb
cwde
cli
push
sub
dec
jne
add
and
and
dec
inc
cmp
ja
ins
nop
inc
mov
mov
sub
jb
(bad)
mov
shl
fcom
rol
sbb
mov
out
lea
shl
lods
cmp
and
cli
adc
sbb
test
xor
lock
in
push
jns
in
add
cmp
push
adc
sbb
lock
inc
(bad)
ins
pop
mov
inc
mov
mov
pop
cmp
loope
leave
sbb
dec
add
shl
adc
add
loop
daa
sysexit
xor
adc
adc
push
push
ret
call
or
add
xchg
loopne
sub
lods
pop
add
imul
push
sub
bound
adc
pop
pushf
push
test
call
cmp
xchg
jp
mov
sub
jmp
and
cs
jecxz
fcom
test
(bad)
lds
push
xor
dec
lea
lods
push
jmp
repz
jg
or
and
aad
rcl
mov
aas
mov
cmp
cmps
mov
stc
cdq
hlt
hlt
ret
je
push
hlt
push
lahf
hlt
nop
or
adc
adc
lock
repnz
pop
call
or
sub
out
mov
pop
(bad)
jle
hlt
mov
mov
and
xor
imul
adc
lds
nop
test
jle
stos
lods
pop
jp
fild
mov
add
in
dec
pop
jnp
dec
in
lock
push
xchg
push
add
shl
shr
add
xchg
sub
cld
push
inc
mov
inc
rol
stos
inc
xor
(bad)
ja
and
xor
in
mov
or
pop
cli
test
mov
push
in
adc
enter
rcr
into
mov
and
loop
sar
ficom
loop
add
and
push
push
pop
mov
jge
xor
shr
xor
call
xor
cmps
in
mov
sub
inc
add
mov
or
test
ret
addr16
enter
fs
aam
mov
iret
mov
jo
mov
test
xor
mov
adc
cdq
in
xor
inc
mov
nop
or
(bad)
fmul
test
enter
xchg
push
add
or
das
sub
add
mov
and
aas
add
dec
push
enter
dec
nop
dec
or
pop
pop
pop
not
push
lahf
jmp
jmp
fiadd
dec
mov
jg
leave
inc
repnz
push
push
push
pusha
push
pop
ret
xor
call
mov
sub
fs
mov
movs
aas
inc
adc
jbe
mov
and
sub
(bad)
in
(bad)
(bad)
mov
imul
and
push
sub
stos
ja
enter
sbb
arpl
push
jo
push
push
aas
loop
cmps
rol
ins
sub
aam
mov
(bad)
jmp
out
jl
or
jle
dec
add
int
push
rcl
ins
push
scas
fsubrp
imul
add
mov
sbb
xchg
outs
xor
fmul
adc
adc
jmp
test
sar
pop
jne
(bad)
or
push
imul
out
add
jge
aaa
adc
lea
mov
inc
inc
fwait
outs
and
arpl
dec
pop
pop
lock
retf
pop
pop
add
cwde
hlt
leave
mov
adc
out
mov
xchg
js
xor
jns
in
jno
or
popf
aaa
shl
sbb
and
xchg
jmp
cmp
xor
mov
out
push
test
test
jp
pop
sbb
out
sti
add
inc
mov
into
in
test
inc
lea
mov
fidivr
fisub
push
mov
mov
xchg
or
xor
sub
pushf
in
push
pop
inc
push
pop
jne
cmp
jecxz
add
cvttps2pi
push
sub
and
loope
jne
jne
pop
test
xchg
in
arpl
push
jo
jo
mov
push
out
xchg
dec
data16
imul
and
mov
pop
adc
mov
inc
movs
add
jmp
adc
pop
arpl
xor
stos
dec
clc
fst
fnstenv
or
fild
ins
sbb
push
xchg
xchg
dec
push
das
ss
jo
add
cwde
mov
jne
cmp
es
mov
test
pop
and
add
adc
dec
sbb
push
mov
imul
rcr
pop
in
ss
aaa
ror
inc
popa
xchg
stos
mov
add
lea
test
mov
int
aam
push
xlat
in
and
pushf
cmp
cmp
jno
ror
jge
xchg
dec
push
int
add
adc
aas
jmp
sbb
faddp
dec
or
cld
daa
je
and
aas
dec
pop
push
ret
push
aaa
push
and
add
dec
call
inc
inc
and
or
pop
mov
adc
ror
or
jmp
or
xor
xor
test
pop
lods
aad
pushf
pop
dec
sub
dec
add
inc
shl
or
add
mov
add
nop
mov
xchg
and
popa
cmp
push
movs
inc
mov
xchg
jle
dec
pop
inc
xor
xchg
(bad)
fist
adc
test
test
inc
lods
btr
cld
cmp
push
push
sbb
inc
jmp
pop
fistp
or
dec
jmp
and
retf
clc
into
movs
inc
and
xchg
imul
xor
inc
push
and
dec
inc
dec
mov
sub
inc
sbb
add
or
add
ds
or
aas
fisttp
or
cmp
pop
or
inc
loope
push
dec
sub
cs
xor
pop
and
jmp
cmp
mov
clc
mov
fadd
mov
sbb
cs
fdivr
aaa
jmp
inc
push
call
aas
sbb
push
or
mov
and
and
mov
sbb
push
lock
aas
and
dec
push
xchg
les
scas
or
js
inc
fs
and
or
cmp
repz
push
dec
adc
push
cmp
fdivr
out
and
fcmovne
mov
leave
movs
cmp
in
dec
mov
sub
add
cmp
out
and
cdq
pop
pop
sub
stos
pop
mov
les
jge
js
shr
dec
push
daa
mov
inc
pop
lea
pop
dec
and
and
fcmovnbe
into
cmp
push
imul
adc
add
inc
stos
mov
test
mov
xchg
loopne
sub
mov
adc
ins
adc
adc
retf
hlt
pop
mov
ja
loopne
and
sbb
jg
iret
and
dec
mov
retf
aas
pop
sub
inc
rol
rcl
aam
(bad)
or
sti
(bad)
pop
jg
fisttp
push
sub
jecxz
push
or
ret
xor
adc
adc
push
adc
or
scas
dec
or
mov
std
daa
repnz
push
push
lock
fimul
stos
addr16
movs
std
ds
mov
mov
add
add
nop
out
adc
mov
test
lods
in
sub
sbb
and
mov
mov
inc
call
pop
push
nop
mov
ja
jno
cdq
mov
ret
leave
jg
xchg
dec
sbb
sbb
test
xor
sbb
or
rcl
sub
or
shl
mov
or
add
nop
sub
lock
adc
shl
lahf
cmp
mov
mov
adc
inc
add
cs
fild
pop
clc
loopne
sti
ss
mov
mov
popf
popa
stc
pop
inc
les
mov
or
mov
mov
push
fidivr
cld
inc
ins
sub
test
clc
push
je
jnp
dec
cmp
adc
or
les
mov
sbb
pop
pop
jno
mov
sbb
mov
repnz
hlt
xor
shr
mov
lods
mov
inc
ja
je
jno
ss
mov
je
sbb
loop
stc
jo
daa
add
sbb
cmp
adc
mov
imul
les
cli
dec
pusha
test
outs
mov
sub
add
add
imul
sti
mov
xchg
mov
hlt
and
pop
dec
mov
cmp
xchg
sub
lock
out
outs
adc
jne
ret
add
push
sub
test
adc
mov
ins
repz
movs
popf
cmp
cmp
rcl
add
mov
das
add
xchg
rcr
loope
inc
pop
sbb
jmp
xchg
icebp
js
(bad)
jl
dec
sahf
mov
pop
jae
je
or
popf
add
sub
hlt
cmps
hlt
xchg
jo
mov
xor
popa
sti
pop
bound
push
or
push
or
in
enter
(bad)
or
jge
or
push
mov
fisttp
fisub
dec
mov
dec
stos
cld
cs
in
add
xor
xor
in
sbb
fisubr
xchg
add
pop
push
pop
mov
cwde
pop
push
pop
add
dec
pop
retf
push
sahf
rcr
test
loopne
mov
shr
dec
pop
bound
js
pop
repnz
lea
pop
inc
lock
jge
add
icebp
test
dec
xor
call
mul
outs
xor
dec
xchg
repz
leave
mov
pop
imul
sbb
sub
fiadd
lods
movs
hlt
cmc
les
mov
xchg
sti
adc
and
pop
jne
shl
movs
pop
dec
dec
daa
and
adc
sbb
das
repnz
xor
(bad)
jns
stos
sbb
test
sub
jo
test
dec
aad
push
mov
mov
cmp
mov
and
ins
jo
call
dec
scas
and
xor
es
mov
add
aam
loope
xor
pop
cmps
test
pusha
fstp
and
lods
nop
push
sbb
es
mov
xor
xchg
pop
push
daa
into
mov
xlat
pop
mov
les
jbe
popf
rcr
cli
xor
mov
fist
xor
jae
mov
adc
lahf
fwait
sub
bound
inc
and
push
adc
sub
and
repnz
enter
js
pusha
mov
push
add
les
jno
pop
push
adc
das
sbb
ds
add
inc
sub
xor
je
inc
rol
(bad)
cmps
or
popa
xchg
dec
test
fld
int3
xor
mov
jmp
xchg
add
sbb
adc
lahf
mov
xor
lds
mov
xchg
xchg
lock
push
push
div
jne
adc
jmp
dec
sbb
loopne
xchg
adc
imul
fisub
jmp
fs
xchg
lock
mov
imul
loop
sub
and
ja
cs
sub
mov
repnz
jle
inc
pop
jns
xor
jg
dec
enter
jmp
cmps
fwait
ret
shl
xchg
pop
daa
aaa
jmp
je
loope
call
rcr
arpl
clc
and
call
xor
add
rol
adc
lods
stc
xor
sbb
add
daa
(bad)
cli
les
adc
inc
(bad)
sbb
sub
adc
ds
pop
pusha
in
inc
repz
mov
pop
outs
jg
sub
mov
lahf
push
sub
scas
scas
inc
popa
mov
popa
cmp
sti
in
mov
lods
push
mov
retf
arpl
xchg
bound
add
add
push
aaa
xchg
sbb
cld
mov
lods
mov
daa
bound
lods
stc
push
test
stos
or
or
and
push
and
stc
cmps
test
xchg
and
pop
ret
mov
add
adc
or
and
jmp
cmps
add
int3
in
rcr
les
inc
push
jg
fstp
jge
add
jg
adc
sahf
push
fnop
adc
push
jmp
add
mov
mov
daa
mov
test
outs
push
mov
mov
outs
addr16
(bad)
sbb
call
xor
js
adc
cmps
sub
inc
add
xchg
add
cmps
jg
push
mov
rcr
sub
sub
mov
pop
jb
mov
dec
mov
push
add
mov
adc
pop
mov
push
imul
mov
shl
or
shr
sub
or
or
in
dec
sub
cmps
adc
call
out
xchg
cmc
sar
leave
cmp
cdq
jno
pop
mov
inc
mov
mov
sbb
cmp
mov
jbe
xor
pop
shl
in
dec
rcl
xchg
add
(bad)
and
icebp
sub
pop
mov
dec
cmp
enter
out
call
pop
or
or
push
mov
popf
mov
jne
retf
mov
in
mov
call
mov
mov
push
pop
xor
lds
dec
xor
add
pushf
jecxz
pop
cmp
push
fimul
test
(bad)
repnz
cmp
pusha
add
add
lea
or
push
add
inc
push
push
loope
push
pushf
ss
sbb
or
mov
pop
sbb
xchg
(bad)
in
hlt
sub
mov
jle
mov
scas
ret
mov
push
inc
jne
mov
imul
movs
adc
out
inc
push
inc
inc
sub
test
fild
push
pop
iret
sub
mov
xchg
adc
loope
jne
add
xchg
inc
jmp
inc
xchg
std
and
inc
jg
add
popa
add
shr
lea
add
enter
aas
or
pop
push
out
das
inc
rcr
inc
sub
das
and
inc
mov
lds
aaa
pop
out
fst
add
mov
pop
repz
add
inc
sub
xchg
jb
imul
das
movs
jno
jecxz
mov
imul
jmp
add
mov
dec
mov
movs
fs
xor
lea
lahf
and
push
aas
sbb
data16
adc
jbe
inc
and
pop
push
jp
out
std
adc
aad
cs
inc
or
pop
dec
stos
fdiv
(bad)
cmc
or
pfsub
ins
ins
adc
mov
and
ret
pop
je
adc
(bad)
jae
dec
cmc
mov
mov
je
int3
inc
sub
sbb
add
imul
adc
inc
out
xor
adc
push
sub
and
push
in
mov
loope
mov
pop
cmp
pop
lea
inc
shl
sbb
sbb
or
and
mov
push
icebp
out
nop
or
sbb
ret
push
dec
and
add
xor
dec
and
jne
xor
push
inc
imul
imul
inc
xchg
loope
xchg
or
(bad)
mov
mov
pop
xor
inc
inc
outs
inc
push
inc
les
fs
mov
or
push
sbb
mov
call
gs
xchg
or
sub
add
scas
ret
cmp
cmp
add
std
fsub
add
(bad)
retf
mov
cvtps2pi
push
sub
sbb
push
dec
xchg
dec
pop
rcr
mov
aaa
sub
sub
mov
lock
loop
pusha
call
sbb
pop
or
or
test
lods
or
in
sti
loopne
pop
push
sbb
mov
jae
jbe
imul
pop
dec
dec
sti
pop
cmp
or
stos
mov
ins
popa
sub
lock
ds
push
sub
in
movs
(bad)
jne
jg
mov
xchg
adc
and
add
fadd
mov
xchg
sub
int3
add
xor
cmp
add
xor
add
fs
sub
aaa
les
adc
nop
cmps
or
or
adc
daa
daa
das
ins
mov
neg
inc
sub
sub
sub
les
pop
cli
push
cmp
dec
sahf
(bad)
sahf
(bad)
sub
dec
sub
cmp
lods
pushf
jne
ds
mov
mov
xchg
addr16
cs
jnp
sub
sbb
jo
jo
jne
cmps
push
lea
inc
movs
jmp
cmp
hlt
gs
cmp
fwait
cmp
scas
fsub
adc
xor
es
in
ins
add
adc
pop
(bad)
retf
les
imul
mov
or
hlt
push
lock
dec
shr
or
dec
adc
scas
mov
cdq
and
and
sub
push
nop
mov
push
jae
ret
ss
nop
dec
pop
lahf
sahf
sar
(bad)
retf
popa
cmp
push
ds
cmc
lds
icebp
ins
ret
and
dec
ja
and
test
pop
adc
movs
or
addr16
cli
mov
rcl
xlat
mov
out
push
pop
adc
xor
xor
and
sbb
in
rol
test
sbb
or
push
bound
aaa
add
mov
mov
sbb
mov
test
xlat
je
dec
xchg
inc
mov
cs
push
xchg
in
xor
inc
jne
daa
rcr
inc
dec
jmp
idiv
and
and
in
jle
sub
adc
sub
sub
xchg
movs
popa
dec
imul
jo
mov
cmp
sub
fimul
je
and
fidivr
lea
and
xor
sbb
mov
popa
aas
shl
add
cmp
sub
call
mov
pusha
fild
xlat
sbb
xor
inc
icebp
push
push
mov
adc
xor
mov
dec
test
je
and
cmp
cmps
dec
dec
cmps
(bad)
in
fsub
pop
inc
or
fs
lock
jno
or
cmp
cmc
lock
fisubr
push
add
data16
adc
push
sbb
ja
ret
sbb
dec
mov
inc
mov
inc
sbb
cmp
repz
or
repz
lock
xlat
inc
add
and
xchg
sub
pop
add
jl
stos
add
bound
rcr
lods
mov
gs
jns
mov
push
add
cld
fild
mov
jae
push
cmp
xchg
cs
xor
dec
shl
scas
sbb
push
adc
add
inc
cmp
cmp
sbb
dec
imul
or
jns
(bad)
les
inc
cdq
push
mov
adc
cmp
dec
out
and
pop
aad
dec
arpl
sub
mov
mov
mov
push
lods
es
or
cmps
jbe
push
jge
das
pop
sbb
inc
cmps
and
bndldx
inc
nop
adc
pusha
adc
or
sbb
(bad)
mov
xor
shr
adc
and
in
rcr
clc
iret
push
dec
and
cmp
or
iret
sub
adc
push
mov
or
add
xor
test
pop
pop
and
add
and
inc
push
inc
pop
cmp
inc
imul
mov
lods
mov
sbb
xor
sbb
les
inc
call
push
xchg
adc
jmp
int3
ins
mov
loope
jno
dec
out
hlt
or
mov
dec
adc
aas
scas
adc
xor
cmp
adc
test
xchg
xchg
adc
jno
add
add
xchg
(bad)
enter
shl
jne
xlat
push
mov
sub
test
jge
imul
or
xchg
inc
jp
outs
add
add
lock
mov
in
pusha
xchg
lock
rcl
loopne
(bad)
xchg
enter
add
xor
sbb
sbb
add
loope
test
test
jg
enter
xor
jmp
xchg
adc
mov
push
daa
je
mov
arpl
ins
mov
inc
inc
sbb
push
xchg
push
popf
stos
and
lds
jne
push
gs
ret
mov
pusha
stc
dec
mov
add
hlt
and
movs
pop
sbb
or
pop
dec
xor
jle
cmp
mov
adc
das
or
movs
loopne
and
lods
rcr
jg
addr16
mov
push
mov
rcl
inc
mov
cld
and
jmp
jbe
jbe
movhps
mov
mov
cld
inc
sub
daa
shl
or
mov
addr16
and
dec
lahf
xor
test
aad
pusha
sti
(bad)
sbb
pop
out
cwde
mov
std
movs
push
sub
call
mov
sub
sar
mov
xchg
aas
sbb
out
sbb
rol
(bad)
leave
rcl
and
into
movs
pop
leave
or
push
or
inc
hlt
retf
xchg
fdivr
pusha
pop
(bad)
or
cdq
and
sub
adc
pop
pusha
jne
cdq
inc
and
scas
mov
lock
test
fdiv
xchg
pop
add
outs
mov
pop
pop
push
enter
shl
pusha
cmp
loopne
stos
jl
jmp
inc
lock
cs
test
pusha
sbb
mov
mov
and
into
add
addr16
daa
jnp
or
pop
dec
adc
inc
out
xchg
dec
pop
xchg
test
or
inc
fcmovu
call
aam
hlt
push
mov
push
mov
in
jns
inc
pop
retf
pop
and
inc
dec
dec
dec
xor
push
jae
scas
inc
and
adc
and
or
push
mov
xchg
mov
add
lahf
bound
scas
mov
mov
das
int3
push
in
arpl
jl
and
mov
xor
add
imul
xchg
loop
test
xchg
jns
push
inc
push
mov
ss
clc
mov
in
imul
gs
adc
cmp
mov
ret
cmp
jmp
fnstenv
xchg
in
imul
mov
lock
add
call
pop
lods
movs
push
push
mov
out
mov
daa
test
sub
add
fcom
shl
ins
push
mov
pop
mov
in
aam
sbb
test
sub
add
inc
pop
sub
sbb
fsub
mov
add
or
les
sbb
add
xchg
xor
das
cdq
sbb
dec
cmp
xchg
call
cdq
test
cmp
mov
or
and
adc
sbb
pop
movs
addps
mov
add
adc
and
mov
mov
jecxz
xchg
les
adc
xchg
mov
jbe
(bad)
or
pushf
cdq
dec
adc
jo
and
push
inc
cvtps2pi
push
or
fldcw
aam
mov
mov
mov
pop
or
cmp
push
or
fwait
adc
sbb
ja
pusha
idiv
cmc
test
mov
pop
add
mov
sub
leave
mov
mov
rcl
jge
mov
jbe
add
cdq
adc
sub
mov
dec
xor
mov
pop
in
addr16
int
ins
and
lock
ror
clc
push
cmp
ror
and
rcl
push
and
inc
call
jo
sub
test
sbb
adc
xchg
or
xchg
ins
sbb
test
leave
push
sbb
sti
data16
or
shl
cmp
xor
adc
out
dec
fdiv
push
shl
pop
(bad)
rcl
jecxz
das
dec
adc
pop
dec
push
push
dec
ret
popf
sub
int
xor
cmp
cmps
enter
stos
pop
enter
mov
dec
push
push
cmp
inc
adc
cdq
push
test
nop
inc
dec
mov
or
call
loope
ficomp
aam
mov
and
sub
pop
dec
xchg
xchg
(bad)
xchg
loope
adc
push
imul
push
mov
mov
xchg
push
jbe
push
dec
pushf
cmp
jle
xor
jmp
mov
nop
jno
sbb
adc
jno
movs
pop
and
dec
fisubr
push
and
push
xchg
or
lea
jp
(bad)
xchg
sbb
pop
dec
fwait
sysret
push
adc
push
ins
xor
mov
mov
dec
inc
jge
fsub
and
dec
ins
outs
in
pop
dec
cmp
sar
dec
jp
mov
jno
repz
inc
hlt
adc
hlt
xchg
movs
mov
test
mov
fist
ss
bnd
dec
push
or
pop
shl
in
and
enter
popa
ss
dec
mov
out
dec
and
push
sub
ret
enter
inc
imul
jmp
inc
pop
jo
inc
je
dec
fadd
inc
test
mov
lahf
das
mov
adc
lods
fisub
arpl
cmp
xor
xlat
dec
loopne
jecxz
xchg
add
mov
cmp
sub
or
cmp
mov
pop
mov
sub
jl
jae
mov
dec
or
sub
mov
or
add
(bad)
jae
bound
jne
pop
(bad)
out
pop
push
add
add
lahf
imul
cmp
repnz
inc
jmp
push
popf
xor
sar
and
imul
imul
in
pop
js
add
outs
push
lock
jmp
in
push
xor
data16
pop
add
push
sub
adc
movs
push
enter
jl
and
dec
or
fiadd
dec
ins
pop
dec
pop
xor
sti
mov
test
test
sbb
cwde
nop
std
jmp
add
in
mov
je
outs
test
pop
jmp
and
jns
fild
dec
inc
xlat
add
sti
cmp
mov
xor
scas
or
or
rcl
dec
and
or
lea
sub
les
push
mov
hlt
outs
push
add
push
jmp
push
(bad)
ficomp
mov
add
or
jge
ret
and
pop
aam
pop
cmp
cmp
fild
and
inc
dec
adc
lods
adc
popa
inc
ds
sub
inc
add
leave
push
fisttp
cmp
cmc
sub
int
adc
cmp
and
cmp
jne
push
sub
xor
rol
(bad)
popa
pop
xchg
ss
enter
and
cmp
hlt
sbb
xchg
test
mov
mov
mov
sub
adc
and
mov
push
aas
and
mov
mov
fsubr
dec
xchg
jmp
jnp
push
nop
mov
in
(bad)
out
xchg
pop
adc
aaa
sub
adc
or
mov
add
mov
out
scas
jae
dec
movs
stos
cmp
loope
pop
test
rcl
mov
mov
aad
jo
xlat
xor
pop
fwait
and
cli
inc
or
push
sbb
jnp
xor
and
es
pusha
ret
push
pop
movs
mov
pushf
call
fisubr
arpl
cmp
ret
jp
inc
xor
or
xor
xchg
ror
jg
xchg
add
daa
aad
cmp
pop
jae
shl
enter
fisubr
lods
sub
ja
or
mov
xor
and
ret
hlt
jge
loope
loopne
test
inc
mov
out
add
cmps
cmc
cmp
adc
and
push
dec
xchg
push
xlat
rcl
cdq
jne
ret
iret
mov
bound
loop
(bad)
test
lea
sub
sbb
add
mov
xchg
or
pop
inc
dec
repz
out
jmp
ret
test
loopne
imul
adc
and
or
dec
cmp
stc
push
cmp
inc
pop
loopne
mov
dec
rcr
pop
out
in
fcmove
mov
or
cmp
and
in
xchg
hlt
movs
clc
push
sub
fisub
mov
or
pop
xor
and
cwde
add
enter
push
movs
adc
jnp
push
pop
cmp
jmp
inc
dec
pop
sbb
jo
xchg
add
nop
popf
jl
call
jb
mov
popa
mov
sub
xor
pop
xchg
push
pop
and
call
inc
add
cmp
sbb
inc
fmul
retf
xchg
int3
add
push
mov
(bad)
jne
xor
sub
xor
mov
xchg
add
shr
dec
jns
inc
or
jno
adc
mov
ret
adc
dec
xchg
and
mov
dec
pop
lds
inc
or
sar
jo
adc
and
xchg
jo
inc
sbb
cmps
add
jmp
jo
into
or
jl
xchg
push
sahf
mov
sbb
xchg
or
loopne
pop
das
adc
pusha
push
xchg
cmp
int3
loope
in
and
and
arpl
in
sbb
inc
stos
inc
ror
clc
mov
xchg
add
xor
jo
add
scas
pop
pop
push
es
call
inc
xchg
in
push
mov
enter
leave
enter
fcomp
add
pop
into
cmp
and
nop
in
cmp
int3
ror
lahf
jo
xor
jne
loope
in
mov
jmp
ror
icebp
imul
jmp
(bad)
(bad)
scas
mov
add
xlat
mov
xor
pop
int
cmp
inc
pop
inc
jl
mov
inc
push
inc
fnstenv
inc
push
(bad)
mov
sub
or
scas
push
push
ja
xchg
pop
mov
das
popf
out
fiadd
adc
mov
sbb
pop
push
inc
mov
leave
cld
cs
retf
in
cld
hlt
cld
hlt
sbb
in
xor
mov
push
push
pop
hlt
aas
shl
xchg
pushf
dec
icebp
hlt
hlt
hlt
sbb
enter
hlt
cld
div
adc
and
add
cwde
push
adc
call
adc
inc
test
xchg
pop
pop
outs
pop
sub
loopne
ja
dec
loop
mov
mov
inc
imul
mov
push
loope
pop
inc
aaa
or
sub
out
inc
stos
add
std
addr16
or
add
add
dec
jns
push
mov
adc
mov
pop
add
movs
add
xchg
in
repz
(bad)
fwait
test
dec
ror
pop
sub
ror
add
aaa
lea
imul
sbb
ror
arpl
cdq
xchg
clc
cld
clc
cld
or
xor
loopne
push
dec
(bad)
and
adc
and
sbb
fcmove
cmp
das
pop
inc
test
inc
cmp
xchg
retf
cmp
in
js
pop
push
lods
in
mov
mov
sbb
(bad)
xor
mov
xchg
sar
fdiv
pop
and
push
fistp
mov
adc
or
sub
movups
aaa
inc
loop
pxor
mov
ret
les
add
adc
xor
add
jp
shl
push
das
popa
loope
popa
push
lods
imul
cmc
or
aam
xor
out
xor
sbb
rcr
call
cdq
mov
dec
push
stc
sbb
mov
inc
pusha
mov
sbb
movs
push
scas
std
in
mov
add
sbb
pop
add
nop
retf
sub
ret
and
lods
sbb
imul
mov
xchg
stos
add
ja
adc
sub
xor
push
in
mov
in
call
cs
aam
outs
and
test
mov
ror
dec
add
pop
pop
mov
xor
fldenv
out
sub
push
mov
inc
and
cli
sbb
jno
xchg
into
hlt
and
hlt
pop
call
xor
ss
xlat
stos
dec
js
cmps
sub
pop
add
out
dec
test
fstp
(bad)
sub
pop
sub
pusha
ins
add
mov
xor
jmp
outs
inc
dec
cmp
push
in
push
pop
daa
cli
in
or
xchg
adc
movs
vmwrite
lock
xchg
mov
mov
xchg
in
jne
das
xchg
test
outs
js
call
pop
push
xchg
inc
pop
les
sub
dec
hlt
cmp
jp
jmp
inc
jno
lea
dec
jne
lock
js
dec
adc
(bad)
sub
popa
fist
mov
cs
into
inc
mov
loopne
or
es
les
xchg
push
adc
sub
add
adc
icebp
popf
sub
dec
outs
dec
stos
arpl
les
(bad)
call
(bad)
xchg
xchg
mov
or
sub
adc
inc
add
in
icebp
adc
sub
adc
xchg
(bad)
js
push
inc
adc
ja
inc
ins
ja
jle
xor
xchg
popa
dec
pop
das
jo
or
and
xor
nop
cmp
fcom
das
lea
inc
mov
push
dec
add
sbb
outs
xor
cmp
add
sub
aaa
inc
adc
sar
or
pushfw
push
sar
and
add
xchg
jle
push
push
ins
bound
addr16
stos
pop
or
or
popa
jb
add
popa
sahf
jl
or
ds
add
xor
push
fcmovnbe
push
adc
or
cmps
mov
mov
inc
and
imul
add
scas
aam
jae
adc
popa
mov
test
add
inc
mov
and
adc
push
or
mov
sub
nop
inc
push
int
mov
inc
fs
arpl
inc
ret
fnop
add
pop
add
mov
push
mov
push
outs
cmp
xor
inc
gs
movs
xor
mov
imul
mov
sub
(bad)
movs
xchg
xor
adc
jl
sbb
in
or
in
inc
xchg
(bad)
lods
arpl
or
jmp
adc
ror
(bad)
in
jo
or
cmp
dec
fsubp
add
idiv
sbb
xchg
add
add
mov
or
or
cld
aam
lahf
idiv
dec
or
mov
push
shr
jns
inc
cmps
adc
mov
cld
dec
jbe
adc
jns
clc
and
ds
ja
test
cmps
jl
cmps
movs
push
cmp
mov
sub
les
push
mov
cmp
push
pop
push
neg
sbb
lock
sbb
pusha
push
mov
test
outs
push
adc
hlt
push
int
jnp
mov
mov
mov
aaa
fwait
aaa
inc
xor
xor
mov
dec
push
pop
outs
mov
in
mov
clc
mov
push
inc
xor
fdivr
pushf
lock
pop
adc
sbb
sub
push
inc
rcl
inc
jg
mov
cmp
ret
sbb
cwde
cmp
xchg
pop
xchg
shl
mov
dec
bound
sbb
push
or
dec
cmp
dec
cmps
mov
sahf
add
inc
jl
xor
xchg
sar
sbb
push
mov
add
and
das
inc
jnp
rol
xchg
ror
xor
cmp
ror
repz
dec
mov
inc
loopne
sbb
add
(bad)
test
adc
fdivr
aas
or
ret
sbb
jne
cmps
rol
cmp
cs
or
nop
ss
cmp
in
cmp
pushf
out
jb
pushf
inc
aas
cld
adc
add
lods
ins
or
adc
sbb
xchg
push
lods
leave
mov
arpl
dec
and
mov
int3
(bad)
inc
xor
inc
ins
int
xor
dec
loope
push
popa
cmp
js
lahf
mov
mov
or
iret
mov
mov
enter
mov
inc
lock
adc
and
push
lahf
and
add
rcl
or
push
popa
xor
loopne
test
push
aad
adc
fmul
mov
rcl
popa
and
mov
test
fdivr
iret
mov
shl
sbb
in
pop
sub
cmps
sub
dec
mov
sbb
push
push
inc
mov
dec
ins
inc
shr
pop
dec
pop
movs
(bad)
cmp
pop
stos
out
pop
es
inc
loopne
add
add
add
jl
add
or
add
xor
fild
pop
push
rol
add
pop
pop
enter
aaa
and
xor
pop
rcr
ins
loopne
outs
mov
pop
pop
and
js
inc
inc
push
or
xlat
jle
jo
push
je
add
stos
add
add
and
loopne
mov
adc
sbb
fs
or
xchg
pop
enter
int3
push
mov
and
dec
inc
push
fbstp
cmp
mov
xor
or
adc
inc
into
enter
pop
jb
js
sub
hlt
mov
dec
add
adc
shl
cmp
jo
xor
popa
pop
or
xchg
xchg
in
iret
push
mov
(bad)
fbstp
retf
movs
xor
je
cmp
or
xchg
sbb
cmc
adc
outs
imul
jae
add
sub
sbb
mov
adc
xchg
fst
and
ins
or
sub
sbb
int
push
dec
out
enter
push
add
dec
in
rol
call
clc
ds
inc
cmc
stos
mov
adc
jbe
add
xor
or
push
nop
pop
pop
and
loop
rcl
adc
dec
stos
es
mov
and
popa
pop
or
je
imul
inc
dec
xor
mov
in
inc
mov
test
push
xor
ins
or
imul
cwde
push
mov
mov
jne
mov
pushf
add
lods
sbb
push
xchg
fucom
popa
test
in
mov
jle
ins
add
adc
ja
scas
dec
push
xchg
enter
rcr
and
pop
test
ret
push
cmc
xchg
sub
mov
pusha
aas
imul
add
popf
xor
and
and
in
dec
add
adc
adc
dec
mov
dec
arpl
dec
cmp
push
sub
hlt
repnz
pop
push
call
xor
xor
(bad)
out
sbb
inc
xchg
xchg
mov
or
aas
cli
test
sub
mov
add
ins
nop
and
mov
or
sub
loopne
in
mov
adc
mov
cmp
mov
and
push
scas
dec
data16
aas
pushw
push
inc
rol
push
aaa
mov
dec
sub
jge
push
leave
ds
mov
sti
or
or
aad
push
inc
jge
shl
nop
cmps
cmp
in
or
sar
mov
mov
shl
retf
inc
add
(bad)
adc
adc
les
mov
push
and
ss
test
ret
and
add
in
mov
jno
or
jmp
in
jmp
sub
inc
push
adc
fs
cs
call
sub
fidivr
int3
fist
inc
jg
xchg
aam
sbb
test
pop
lods
mov
xchg
add
loopne
dec
dec
es
test
sbb
inc
sbb
popf
add
adc
adc
out
mov
sbb
mov
inc
adc
loope
ja
mov
xchg
(bad)
retf
pusha
mov
or
stos
das
sub
(bad)
xchg
sbb
test
inc
(bad)
push
sub
mov
or
dec
or
cmc
push
pop
test
dec
xor
jmp
enter
aaa
mov
jmp
ins
dec
inc
cmps
jbe
aaa
lods
in
fcmove
js
jmp
fwait
cmp
or
mov
or
or
mov
dec
push
das
or
jmp
in
call
add
shl
cs
mov
mov
adc
pop
push
mov
arpl
cmp
ins
(bad)
(bad)
mov
daa
jns
dec
nop
dec
pop
pop
jecxz
cmp
inc
dec
lahf
mov
or
inc
retf
(bad)
and
ret
aas
out
dec
in
sub
inc
sub
add
jnp
mov
imul
aaa
fcomp
push
dec
dec
mov
jnp
mov
popf
jg
jo
xchg
adc
ins
push
ss
clc
jp
loop
out
sub
in
push
fild
and
call
pop
ins
dec
xchg
xchg
cmp
ja
and
push
dec
movlhps
adc
repnz
adc
jbe
jbe
call
lock
in
fldcw
xchg
nop
sbb
jbe
aas
or
out
aas
xor
mov
cmp
or
popa
or
push
xor
ins
mov
sub
pop
adc
or
push
sub
test
mov
sub
mov
mov
push
test
pop
mov
pop
pop
inc
imul
stos
add
mov
push
fcomp
cmps
xchg
xchg
inc
push
jo
and
adc
or
icebp
xchg
addr16
sahf
push
cmp
ss
in
sahf
add
ins
mov
xchg
xchg
movs
sub
xchg
adc
or
fiadd
mov
dec
jnp
data16
shr
ror
pop
xchg
daa
and
nop
mov
xor
jbe
mov
cmp
lods
xchg
js
hlt
xchg
mov
loop
or
rcr
dec
jmp
scas
xchg
ror
and
mov
push
fsubr
int3
push
mov
and
xor
ret
fmul
push
inc
sahf
outs
adc
retf
dec
aad
leave
inc
or
fcom
(bad)
imul
or
sbb
xor
cmp
(bad)
sub
push
iret
add
xchg
and
das
mov
or
fild
jle
mov
test
adc
test
scas
sbb
push
push
or
les
dec
or
loope
dec
adc
pop
or
out
movs
adc
sub
add
jmp
test
add
fsubr
fdivr
shl
and
cdq
lods
jno
cdq
xchg
sub
pop
inc
push
js
sbb
mov
movs
add
test
add
dec
nop
inc
es
imul
adc
ds
loopne
add
cmp
aad
leave
xor
adc
mov
xlat
inc
enter
cli
push
je
xchg
fs
pop
jp
mov
daa
cmps
xchg
test
sub
lock
sub
and
jo
mov
and
rol
and
fs
outs
movs
jb
mov
sub
or
cmp
(bad)
xchg
or
mov
xor
jo
bound
ficomp
mov
push
out
jno
jae
pop
or
fucomip
popf
mov
cmp
lea
sbb
push
cmp
dec
xlat
xor
sbb
dec
or
ja
adc
sub
and
out
nop
sbb
cmp
sbb
pop
and
add
sub
or
sbb
fwait
mov
or
or
adc
jmp
and
clc
mov
cmp
sbb
ret
fldenv
cli
in
sub
mov
mov
push
adc
dec
and
xchg
pusha
mov
xor
fisttp
inc
dec
test
ror
scas
or
dec
sti
std
add
jne
mov
popa
std
inc
sub
sub
jo
je
ja
mov
push
xor
nop
(bad)
ret
loopne
popa
mov
(bad)
test
out
out
dec
in
and
sub
aam
test
mov
dec
inc
in
pop
inc
arpl
das
jmp
or
aaa
push
dec
jne
push
xchg
enter
sbb
cmp
sbb
lods
or
fidiv
cmp
test
pop
scas
adc
ret
stos
test
adc
rcl
stos
in
mov
aam
das
sub
add
mov
rcl
xor
push
mov
into
je
add
and
outs
push
popa
cmp
(bad)
dec
push
es
pusha
push
mov
ror
js
inc
add
cmps
mov
loope
retf
and
loopne
jne
imul
push
repnz
icebp
out
mov
mov
jmp
add
rol
push
out
inc
dec
dec
imul
sahf
push
mov
mov
hlt
out
(bad)
push
jbe
mov
push
lods
test
jae
and
pop
aas
shr
int3
xchg
ins
cs
xor
add
dec
cmps
in
sub
ins
add
fsubr
add
adc
sti
or
push
jg
xor
ror
sbb
(bad)
dec
in
adc
sub
sub
je
or
pop
ret
push
scas
pop
sbb
je
div
and
dec
adc
pop
sbb
pushf
out
push
data16
std
add
or
hlt
mov
js
add
and
adc
sbb
es
dec
sbb
sub
pop
xchg
sti
lock
inc
mov
in
push
xor
adc
mov
in
xor
pop
inc
mov
add
jp
cmp
adc
and
inc
mov
cmp
add
and
inc
add
adc
and
mov
sub
or
pcmpeqd
mov
rol
in
adc
and
push
int3
ror
or
ins
sub
pop
movq
and
pop
ror
xchg
call
add
(bad)
xchg
fild
and
pop
pop
fisttp
test
aaa
cmps
test
inc
pop
mov
add
sbb
push
ds
sbb
or
add
mov
push
xlat
fs
sbb
in
mov
push
loopne
xor
or
lahf
inc
mov
fst
scas
mov
lods
and
mov
inc
iret
jmp
pop
neg
xchg
icebp
das
loopne
lock
test
enter
retf
push
or
out
jle
add
mov
or
push
dec
cmp
pop
mov
inc
(bad)
jle
rcr
enter
add
push
pop
push
bound
mov
cmp
test
(bad)
mov
fiadd
mov
sbb
(bad)
ins
mov
int3
sub
sub
add
clc
loopne
mov
add
dec
cmp
sub
xor
push
push
not
sub
dec
sbb
fwait
xor
int3
sahf
popa
(bad)
in
mov
(bad)
cmp
push
fmul
jns
jns
cmps
add
inc
cmp
push
std
and
dec
sbb
(bad)
loope
xchg
lock
ins
aaa
xchg
imul
push
ins
clc
push
sbb
inc
lock
inc
nop
stos
cmp
dec
or
aaa
sbb
inc
fbstp
cmp
cmc
push
xchg
icebp
jecxz
fdivr
xor
or
cmp
retf
jbe
mov
mov
lea
sub
xor
int3
or
lods
popa
inc
in
sub
adc
or
adc
sub
sub
pop
jb
imul
add
inc
push
dec
sub
sbb
lock
rcr
sub
xor
or
call
cmps
inc
cs
clc
out
in
and
lea
lds
and
movs
adc
inc
pop
add
add
mov
jnp
adc
push
ins
iret
dec
into
pusha
push
xor
sub
ret
xchg
movs
sbb
aad
ss
imul
mov
xor
and
sbb
xor
sti
push
pusha
dec
leave
lock
rol
jle
dec
add
sub
xor
cdq
inc
fldenv
push
push
sbb
fadd
test
(bad)
shl
jecxz
loopne
xchg
subps
mov
sub
and
ja
outs
aaa
fbld
dec
push
sub
inc
fiadd
jmp
gs
add
add
push
xchg
jne
dec
dec
cs
ret
or
popa
ret
dec
call
add
cmp
add
sbb
sbb
cmps
mov
das
call
jp
dec
loopne
and
or
shl
mov
push
jo
cmp
xchg
jp
data16
pushf
int
push
and
cmps
xor
mov
mov
test
add
and
push
sbb
push
shl
sub
and
pop
push
cmp
sub
mov
pop
adc
call
or
lods
mov
sbb
xor
pop
adc
adc
vmread
ret
cwde
dec
imul
push
inc
add
mov
mov
popf
dec
inc
repnz
sub
push
dec
aaa
call
dec
clc
mov
xor
dec
pop
dec
adc
mov
clc
in
xchg
mov
nop
add
mov
je
adc
adc
jb
inc
fisub
dec
lock
clc
cmp
push
inc
push
out
fisub
repz
ret
add
shl
stos
bound
add
clc
lock
test
lock
and
dec
call
test
or
and
pop
and
inc
dec
sahf
sbb
test
mov
outs
dec
xchg
mov
dec
add
jno
shl
push
mov
loopne
pop
pop
and
or
nop
sub
push
je
push
fwait
add
xor
cmps
add
rcl
sbb
cs
xlat
ss
sbb
jg
add
jne
or
mov
sbb
add
add
(bad)
inc
aaa
pushf
mov
push
or
pop
adc
jne
push
(bad)
mov
inc
jo
mov
pop
mov
jb
push
nop
jo
ret
push
icebp
jo
inc
repz
pop
ret
fucomip
add
jmp
fist
ret
mov
or
adc
lods
ja
ins
aaa
or
loopne
adc
lahf
sub
add
rcr
sbb
and
dec
std
sub
mov
sbb
fdiv
jge
sbb
xor
dec
sbb
and
adc
shr
dec
repnz
cs
retf
or
clc
nop
scas
fldenv
sbb
add
daa
imul
cmp
adc
in
sbb
dec
ins
ins
mov
add
inc
ret
xor
jg
es
dec
pusha
movs
in
push
and
(bad)
imul
inc
popa
dec
jb
pop
outs
call
sar
outs
out
imul
stc
inc
push
je
dec
push
stos
sbb
or
movhps
add
adc
lahf
cdq
sbb
inc
add
sar
inc
add
or
je
inc
push
cmp
daa
and
mov
shl
pop
fcomp
dec
or
pop
jl
fs
jg
cld
pusha
shl
inc
push
and
push
add
or
pop
push
loopne
xchg
dec
and
icebp
add
inc
imul
sub
pop
xchg
sahf
ins
push
dec
pop
pusha
pop
and
jno
ret
loope
pop
fs
or
fldcw
enter
sub
inc
adc
jo
add
dec
sbb
xchg
dec
mov
lods
dec
push
inc
add
dec
or
and
ret
mov
sbb
and
push
xchg
stos
add
pop
inc
movs
and
fwait
add
cmp
jno
je
mov
cmp
mov
xor
pop
shr
aas
inc
hlt
adc
mov
adc
dec
idiv
mov
inc
xor
cmp
add
ror
scas
add
mov
and
jg
or
and
idiv
lods
clc
mov
fild
sub
sbb
adc
jge
xchg
jmp
gs
daa
xchg
lock
and
mov
aas
dec
mov
push
dec
and
xchg
js
dec
sti
pop
add
lea
add
adc
nop
dec
stos
shl
xchg
push
mov
sbb
movs
push
push
fimul
mov
sbb
add
and
dec
pop
nop
pop
pop
mov
push
or
je
sbb
pusha
movs
cmp
test
and
imul
fld
mov
pop
movs
add
or
mov
dec
enter
cmps
ins
jne
(bad)
aad
mov
mov
pushf
push
and
aas
jae
add
adc
push
lods
xchg
cmp
lahf
mov
push
and
(bad)
das
or
rcl
jns
dec
add
add
call
shr
ja
imul
cmc
daa
push
mov
push
xor
cmp
adc
(bad)
cmps
add
rcr
and
mov
pusha
mov
cwde
sub
cmp
xor
mov
sub
push
pop
dec
dec
js
xor
pop
popf
pop
push
shl
jno
fwait
push
add
push
aas
aad
pop
dec
dec
and
dec
aas
pop
jns
push
sub
adc
mov
enter
inc
pop
push
mov
mov
push
(bad)
sbb
and
fadd
mov
jl
and
inc
or
adc
movs
mov
mov
xchg
pop
push
sahf
punpckhwd
and
and
or
(bad)
xor
ins
and
xchg
sub
and
inc
dec
rcr
bound
push
fisub
ss
dec
cmps
pop
scas
sub
ret
or
xchg
jmp
push
sbb
aad
add
mov
mov
inc
and
outs
push
mov
inc
stc
adc
mov
sbb
ret
cmps
inc
movs
dec
pop
shl
xchg
(bad)
xchg
out
nop
adc
movs
mov
hlt
cmp
and
es
mov
cwde
sbb
sub
shr
mov
shl
nop
jnp
test
pop
add
adc
add
ret
or
sub
aas
push
ins
unpckhps
imul
and
or
add
dec
adc
int
stos
push
test
jno
bound
sub
adc
lods
xchg
adc
sub
pop
test
test
popf
adc
inc
fs
mov
adc
test
retf
inc
imul
or
push
shr
cmps
xchg
jmp
or
mov
or
hlt
sub
sbb
fs
and
call
and
cmp
shr
gs
jge
dec
and
mov
pop
pop
add
xchg
pop
adc
gs
mov
and
unpckhps
cmp
iret
xchg
cmp
sbb
and
mov
cmp
and
add
fild
push
add
xchg
rol
aaa
mov
jecxz
xor
inc
or
inc
add
xlat
fs
jp
mov
cmp
cmp
jb
sub
fdivr
add
sub
push
lods
push
fnstenv
je
xor
pop
xlat
xchg
ss
lods
or
sbb
mov
xor
fdivr
jle
ror
pcmpeqd
xchg
ins
or
repz
imul
adc
cmp
push
mov
add
add
push
adc
shl
xor
adc
adc
cs
mov
mov
enter
and
enter
cmp
push
enter
enter
inc
push
adc
or
je
add
add
cmp
sbb
clc
inc
push
add
sub
rol
cmc
ret
mov
mov
add
xor
daa
push
and
push
or
or
or
addr16
(bad)
xchg
push
stc
das
pop
jmp
push
test
jb
jl
jl
fwait
js
ret
inc
pop
fstp
push
daa
mov
addr16
add
aas
or
mov
and
pop
mov
ror
xchg
push
(bad)
or
inc
inc
out
arpl
test
pop
test
inc
sub
dec
mov
rol
pop
and
repnz
je
outs
das
adc
loop
imul
fwait
inc
stos
in
and
nop
addr16
aas
pop
bound
sbb
adc
cmp
int3
daa
call
aaa
pop
pop
int
add
xor
dec
js
adc
(bad)
pusha
mov
in
jmp
adc
add
(bad)
rcl
and
pop
add
dec
adc
add
lock
je
rcl
(bad)
loopne
jecxz
pop
push
add
pop
loopne
and
or
clc
push
cmps
test
test
xor
je
add
stos
mov
mov
jecxz
arpl
sub
and
push
adc
mov
xchg
jno
in
mov
sub
aaa
or
nop
add
enter
adc
mov
xor
nop
inc
loop
and
add
outs
in
outs
std
xchg
ins
adc
xor
pop
push
push
jb
and
xor
or
xchg
les
xor
test
add
push
dec
jle
fdivr
mov
adc
repnz
test
mov
adc
cmp
fs
adc
arpl
xchg
or
fidiv
dec
push
gs
xor
xchg
add
lahf
and
mov
je
push
sbb
sub
(bad)
jae
push
div
pop
les
and
xor
lods
lods
mov
adc
popa
aad
jmp
xchg
mov
lea
ins
inc
inc
add
mov
jae
fadd
sbb
and
ret
push
cmp
es
jp
shr
dec
jg
ror
xchg
push
push
or
mov
je
mov
adc
scas
and
jp
xor
adc
mov
mov
inc
adc
stc
mov
cmp
hlt
push
das
dec
dec
fcmovu
mov
jmp
inc
cmps
fwait
je
jge
push
sbb
mov
cmp
outs
stc
xor
pop
jecxz
add
inc
mov
sti
sti
jnp
adc
jae
out
icebp
in
inc
mov
dec
jo
jne
addr16
push
pop
aam
rcl
mov
ss
in
scas
add
pop
xor
jns
ret
popa
sbb
add
xchg
adc
repz
popf
push
sub
sbb
aam
imul
sbb
mov
or
jl
dec
sub
mov
std
movs
mov
or
jno
mov
pop
xchg
pop
lock
ins
pop
mov
sub
sub
fsubr
and
sbb
xor
ins
sbb
sar
popa
js
dec
mov
mov
fcom
sub
cmp
adc
add
and
xchg
and
lea
or
sahf
sti
xchg
push
movs
cld
inc
cmp
add
add
sbb
retf
push
fadd
ins
xchg
push
xor
retf
test
or
cmp
mov
add
pop
add
add
fistp
pop
sub
mov
mov
fistp
adc
out
push
int
icebp
inc
pop
or
mov
sbb
ss
and
push
dec
add
xor
xor
stos
jg
dec
(bad)
daa
sbb
inc
mov
outs
out
cmp
pop
dec
es
inc
cmp
xchg
shl
pop
push
or
jbe
xor
add
dec
xor
sbb
dec
dec
pushf
lahf
lahf
add
lods
nop
cmp
lahf
mov
pop
cld
in
enter
or
test
les
sub
jo
jo
dec
or
and
imul
mov
sbb
dec
inc
push
lock
sbb
push
(bad)
jmp
jne
call
and
mov
(bad)
push
sbb
popa
scas
push
sbb
stc
adc
outs
lods
cmova
sbb
push
mov
imul
cmps
lahf
jmp
sub
or
ja
ret
lods
(bad)
xor
mov
not
sub
xchg
xor
test
adc
(bad)
icebp
pusha
jp
xchg
jecxz
fs
and
jecxz
pop
sub
jle
or
loopne
lock
ret
cmp
nop
mov
aam
test
dec
call
cmp
mov
push
and
or
outs
rep
adc
sbb
and
sbb
lods
call
movs
inc
fistp
stc
add
sbb
icebp
push
test
movs
jg
xor
push
and
addr16
imul
pop
push
inc
shr
popf
retf
cwde
and
jns
sbb
adc
mov
js
push
add
mov
pop
add
xchg
push
mov
mov
(bad)
jbe
jmp
jno
jge
jae
(bad)
xchg
sbb
retf
mov
out
cmps
mov
xchg
jns
or
iret
push
push
push
fcom
add
loope
sub
call
div
ret
and
imul
mov
inc
(bad)
les
test
push
ins
ret
sbb
pop
test
add
adc
xor
loope
mov
fiadd
add
pop
cli
(bad)
outs
aaa
jno
mov
(bad)
scas
imul
add
add
inc
test
icebp
test
cmc
push
pop
push
dec
pop
daa
jg
ins
test
push
pop
push
clc
mov
out
cmp
repz
clc
fcom
sub
mov
jecxz
adc
pop
xchg
sub
je
loopne
cld
retf
add
popa
test
jg
cdq
mov
dec
out
dec
or
shr
mov
mov
jno
xor
gs
test
or
test
pop
pop
jmp
test
stos
inc
push
jmp
or
cmovae
je
add
fwait
nop
adc
ds
dec
push
ficom
cwde
into
push
into
test
fcomp
inc
addr16
(bad)
outs
adc
adc
push
adc
pop
and
push
repnz
push
mov
test
scas
inc
inc
loop
loope
(bad)
shl
jmp
lods
test
mov
push
enter
adc
jnp
push
and
(bad)
aam
xor
inc
call
jp
push
sbb
leave
cld
and
and
xor
inc
xor
call
inc
jnp
imul
ror
out
mov
in
test
cmp
pusha
sbb
adc
es
hlt
add
or
sti
sbb
shr
inc
inc
fstp
fs
psubusb
dec
sti
sbb
add
mov
mov
rol
mov
jmp
inc
cmovno
xchg
mov
xor
sbb
rcr
repnz
inc
dec
jge
lar
arpl
cmp
mov
sti
add
inc
pop
push
jno
or
dec
jle
mov
test
pop
add
bound
add
cmp
xchg
add
aas
cmp
mov
sub
push
call
arpl
and
or
push
pop
sub
lods
dec
jl
xchg
sahf
nop
outs
call
(bad)
fadd
mov
mov
aas
in
inc
pop
mov
sub
cmp
dec
loopne
shl
pop
nop
jp
in
mov
dec
adc
(bad)
lods
les
js
mov
sub
arpl
pushw
and
adc
mov
outs
or
sbb
push
mov
jne
add
push
jno
push
mov
sbb
add
dec
inc
and
push
movs
dec
dec
inc
pop
aaa
cmp
pusha
(bad)
dec
(bad)
xor
test
push
xor
xor
mov
add
push
mov
dec
call
adc
fsub
mov
loope
push
sbb
xchg
test
or
mov
ret
xchg
push
rcl
out
push
and
and
mov
jo
(bad)
and
or
mov
(bad)
call
int
pop
shl
xor
test
pop
sub
push
outs
jecxz
add
inc
push
icebp
dec
ins
mov
sub
jmp
xchg
mov
daa
in
mov
dec
(bad)
xchg
popa
and
cmp
loopne
in
add
push
cmpxchg
mov
call
rcl
not
(bad)
dec
fstp
in
xor
les
jmp
nop
push
imul
add
loop
adc
shl
das
mov
push
inc
adc
inc
rol
or
inc
js
lock
cmc
jmp
sbb
jno
jge
pop
popa
sbb
sbb
push
xor
pop
or
push
sbb
pop
xchg
std
scas
add
mov
jge
imul
fadd
lea
movs
inc
inc
mov
fist
popf
add
dec
fwait
add
clc
or
icebp
in
and
daa
cmp
jne
pop
cmp
sahf
scas
adc
push
in
inc
cwde
mov
or
mov
adc
jns
pop
aad
rol
adc
es
adc
rcl
ret
push
or
in
int3
movs
je
enter
add
adc
jge
sbb
(bad)
es
xchg
or
xor
xor
xor
das
or
les
cmovno
popa
pop
mov
stc
jg
adc
and
fsubr
imul
and
add
fild
inc
jno
or
(bad)
aad
pop
xor
cmp
lods
push
retf
xchg
outs
loopne
imul
add
xor
xchg
cmp
(bad)
and
pop
adc
mov
or
add
(bad)
gs
mov
nop
nop
jo
jo
test
jne
inc
or
and
scas
ins
push
mov
in
or
fcomp
mov
xor
jne
or
mov
push
inc
dec
xchg
push
pop
pop
test
jmp
cmp
fild
xor
test
mov
and
pop
or
loopne
jae
inc
xor
mov
push
push
mov
xchg
xlat
in
in
jo
pop
sub
cmp
add
ficomp
xor
or
dec
push
fcom
call
aad
ror
or
or
jge
dec
stos
adc
call
sbb
pop
dec
adc
inc
sbb
rcl
mov
call
sub
jg
je
cmp
test
pop
rcr
fild
jo
daa
jb
loopne
outs
sub
shl
mov
dec
or
adc
loope
out
xor
or
aam
hlt
dec
and
in
pop
addr16
push
test
pop
aam
(bad)
out
add
ds
xchg
fwait
add
stos
add
imul
stos
xchg
add
sub
call
adc
jmp
adc
dec
lods
pusha
adc
imul
std
mov
jge
pop
rcl
inc
add
rcr
fs
xchg
data16
mov
aaa
sbb
outs
dec
shl
mov
or
add
movs
dec
mov
and
jb
and
dec
cmp
mov
push
push
fld
sbb
mov
inc
aaa
adc
dec
arpl
push
push
fisttp
jp
imul
sbb
or
fldz
mov
ret
inc
mov
xor
daa
push
and
xchg
outs
(bad)
mov
push
int3
jnp
add
mov
ror
xlat
ret
mov
arpl
lock
mov
push
sbb
out
leave
lock
push
loopne
int3
xor
or
add
mov
outs
jne
fistp
nop
dec
or
das
mov
xor
jmp
fadd
or
fsub
dec
cmp
imul
enter
push
cmp
fs
fsubr
inc
sub
mov
push
inc
xchg
je
dec
sbb
sub
ds
aad
pop
lea
shl
push
test
dec
stos
push
imul
dec
pop
xchg
outs
add
add
jmp
jns
jne
sbb
adc
cmp
imul
rcl
mov
add
and
add
das
mov
iret
clc
sub
shl
test
add
mov
dec
adc
loope
cmp
pop
scas
push
es
loope
pop
pop
mov
xchg
inc
cmp
xchg
mov
pusha
cmp
cmp
scas
or
mov
(bad)
cmps
pop
add
cmp
jmp
or
add
mov
pusha
sbb
aam
mov
add
xlat
cmp
aaa
arpl
inc
icebp
gs
adc
push
add
nop
fwait
in
pop
jmp
jo
sbb
xor
hlt
push
or
sub
or
or
sub
aad
and
nop
and
inc
jae
pop
dec
add
mov
ins
cwde
test
mov
xor
push
addps
in
dec
cmp
cwde
mov
cmp
sbb
adc
mov
(bad)
adc
les
rcr
pop
inc
push
sbb
xor
adc
push
sar
loop
lock
mov
test
mov
nop
pop
cmp
test
or
test
jb
or
adc
xor
imul
dec
sbb
out
mov
movs
cmp
mov
daa
add
je
cmp
sub
cmps
mov
jmp
inc
mov
dec
dec
dec
pop
jle
je
add
pop
enter
inc
add
nop
pop
mov
aad
pop
sbb
mov
pop
pop
(bad)
push
cmps
jbe
sub
add
jmp
int
lea
es
pusha
or
sub
(bad)
jmp
inc
aas
(bad)
hlt
xlat
cs
sbb
xor
jb
imul
xchg
pop
mov
inc
movs
xor
ins
jns
mov
add
stos
mov
xlat
xor
sbb
xchg
sub
loopne
call
inc
ret
mov
lea
jle
pop
lock
sbb
pop
mov
(bad)
mov
cmp
pop
sbb
adc
aaa
ins
dec
gs
push
ja
in
popa
mov
or
jo
imul
add
pusha
into
in
test
mov
push
sub
fcomp
inc
xchg
fdivr
dec
push
xchg
aam
lahf
rcr
jp
out
int3
push
dec
cdq
enter
mov
pushf
les
push
shl
xchg
mov
mov
out
jl
adc
call
movs
mov
mov
push
stc
dec
addr16
ins
dec
adc
cmp
in
sub
sbb
sbb
mov
sbb
fbld
add
mov
push
pusha
pop
cmp
scas
in
or
mov
adc
cmp
cli
xor
mov
or
cmp
dec
shr
daa
or
push
or
stos
dec
(bad)
mov
xchg
outs
sbb
fld
hlt
aaa
pop
push
xchg
xchg
jge
test
sub
xor
add
or
jno
test
in
sub
xchg
popa
xchg
add
sub
sti
loopne
or
rol
out
gs
adc
ins
or
push
mov
add
adc
inc
aam
xor
mov
cdq
push
add
fistp
xchg
cmp
mov
mov
pushf
xchg
dec
(bad)
push
cld
or
adc
add
push
or
cmp
lock
iret
inc
dec
adc
or
mov
mov
ds
jl
push
test
cdq
cmp
push
xor
adc
push
push
cmp
sbb
pushf
fiadd
cmp
cmps
test
sbb
ds
mov
add
outs
xchg
leave
xchg
adc
fwait
xor
adc
pusha
sub
pop
shl
pusha
fwait
pushf
xchg
and
adc
js
fwait
dec
ds
jo
jo
fs
push
loopne
mov
xchg
pushf
sbb
movs
es
push
or
pusha
sub
mov
sahf
ds
(bad)
or
cmp
or
inc
mov
jb
jo
dec
leave
dec
xor
or
sbb
shl
cwde
mov
pop
lods
cmp
test
jl
dec
popa
ret
aaa
cmp
lods
jnp
pop
nop
mov
xor
leave
aaa
add
dec
pop
xor
mov
and
and
push
xchg
inc
loopne
push
mov
and
add
leave
xchg
dec
adc
add
and
shl
fidiv
fsub
or
aas
stc
xor
or
and
and
push
mov
inc
or
test
inc
add
or
xchg
test
or
scas
and
jae
inc
ja
add
or
ret
mov
xor
pop
imul
pop
fcom
nop
(bad)
sub
jl
jnp
in
mov
push
imul
push
nop
les
pop
or
enter
data16
or
or
dec
in
or
mov
mov
sar
add
add
adc
test
aad
mov
(bad)
jae
jns
dec
add
mov
rol
out
mov
add
pop
les
mov
xlat
adc
jmp
jb
adc
test
std
dec
mov
mov
les
mov
inc
sub
or
add
imul
loope
xor
inc
ret
dec
or
push
or
xchg
into
push
mov
cdq
out
test
dec
or
push
rol
or
or
jmp
fs
scas
mov
retf
aas
lods
push
ret
(bad)
xor
movs
test
adc
xadd
sub
jno
mov
sub
lds
out
mov
(bad)
pop
mov
loope
add
pusha
xor
loopne
jo
jno
xchg
stos
(bad)
xchg
ins
mov
or
and
or
add
xor
inc
paddb
dec
pop
fs
push
rcl
inc
pop
popf
shl
outs
or
dec
(bad)
push
pop
push
outs
or
adc
xchg
adc
add
retf
xor
into
in
cmps
icebp
and
iret
dec
or
js
les
inc
pop
popf
fst
mov
mov
nop
addr16
xchg
inc
rol
sbb
jns
mov
push
or
pop
cmp
or
stos
and
iret
adc
adc
or
jp
outs
mov
mov
xor
push
cvtpi2ps
int
ins
or
jne
shl
fadd
jne
fldlg2
jp
fmul
adc
xchg
cmp
adc
fmul
add
or
(bad)
cmps
lock
jne
clc
jp
adc
adc
jmp
sbb
or
test
rol
fild
push
mov
lock
mov
jl
les
loope
and
add
push
xchg
out
(bad)
xchg
test
xchg
out
push
mov
add
inc
rcl
retf
(bad)
push
loopne
add
scas
out
mov
pop
in
and
xchg
shl
sbb
add
xor
pop
adc
sbb
jns
add
or
add
pop
adc
or
dec
push
dec
dec
jge
push
push
jo
sbb
inc
loop
jo
push
mov
jmp
out
or
lahf
and
test
jbe
(bad)
shl
push
fadd
pop
or
pop
sub
or
dec
push
call
dec
pop
pop
mov
dec
push
push
(bad)
xchg
or
sbb
mov
add
add
push
add
inc
add
add
add
scas
adc
or
sub
xor
dec
mov
mov
mov
aas
sbb
cmp
jl
add
mov
(bad)
fist
pop
iret
call
clc
out
out
in
jecxz
loop
loope
loopne
call
(bad)
fdivr
(bad)
fiadd
call
push
fdivr
xlat
call
call
call
call
call
je
push
into
push
mov
dec
mov
adc
leave
outs
mov
mov
out
push
fs
cmp
cwde
xor
dec
sti
add
push
js
repnz
push
cmps
mov
inc
hlt
pop
cmc
push
test
sar
fsub
lock
sub
mov
jle
add
push
add
push
xor
mov
stc
(bad)
cld
test
xchg
inc
inc
cli
fidiv
fldenv
retf
in
out
pushf
mov
fisttp
fucom
add
out
sub
hlt
fidivr
inc
clc
(bad)
sbb
jns
and
push
mov
mov
(bad)
(bad)
(bad)
mov
in
fnstcw
adc
fsubr
mov
neg
out
push
push
push
push
adc
push
jmp
ja
js
(bad)
cs
ins
xlat
push
pushf
mov
ret
or
pop
pop
sbb
fwait
sub
mov
or
jno
push
clc
add
adc
cmp
aaa
adc
jmp
dec
cmp
or
cmc
push
sub
mov
cmc
ins
and
loopne
ins
mov
sar
sub
cmp
jl
xor
add
ss
mov
xlat
sub
icebp
fimul
pop
jl
pop
repnz
test
or
cmp
cmp
ds
call
pop
inc
add
nop
pop
sbb
adc
test
adc
ret
xchg
pop
add
inc
outs
inc
fbld
iret
fwait
sub
imul
pop
adc
push
push
js
add
xchg
inc
sub
adc
push
jno
mov
dec
jb
xor
push
dec
popa
je
xchg
nop
adc
pop
les
adc
sub
shr
add
adc
lods
and
ror
push
mov
pusha
add
cmps
ins
push
push
mov
cmps
rol
xor
mov
cwde
fcom
adc
pushf
adc
arpl
sub
rcl
test
push
xchg
or
gs
jnp
popf
fs
or
imul
push
or
jae
jns
ins
mov
push
sbb
or
retf
push
imul
push
daa
movs
sbb
out
mov
add
ret
(bad)
int3
ss
or
fwait
out
mov
xchg
cmp
mov
fwait
or
test
imul
mov
push
ficomp
jle
inc
inc
je
(bad)
fild
inc
js
adc
dec
outs
xchg
and
enter
or
add
test
adc
adc
xlat
cmp
add
ss
dec
add
or
push
add
add
sub
add
add
mov
add
mov
and
mov
jbe
adc
sbb
sbb
add
push
add
aaa
mov
mov
test
cmp
mov
mulps
add
and
dec
and
push
mov
mov
mov
mov
mov
add
push
adc
(bad)
mov
xor
cmp
repnz
push
(bad)
inc
inc
inc
jmp
movs
lods
rcl
into
std
dec
clc
or
(bad)
mov
add
stc
ret
mov
mov
mov
mov
cmp
sahf
rcr
lock
mov
iret
repz
jl
fadd
ins
push
inc
sbb
int
test
ins
inc
pusha
iret
repz
inc
adc
inc
mov
fwait
imul
jl
rcl
dec
je
cwde
jl
mov
(bad)
in
mov
inc
es
int3
stc
cmp
out
add
and
cmps
inc
fcom
push
ss
test
sub
push
loopne
clc
dec
out
repz
cmps
push
cld
sbb
push
aam
(bad)
dec
in
mov
push
mov
dec
(bad)
cs
and
sahf
push
cmp
fs
test
jnp
imul
data16
rcr
cmp
and
lds
add
cmp
push
and
xchg
jnp
repz
call
pop
push
cmp
mov
ds
inc
inc
data16
ds
pusha
mov
mov
jbe
push
sub
movs
adc
fcom
stc
adc
retf
into
nop
push
pusha
lods
inc
pop
and
js
or
mov
imul
push
mov
aad
mov
in
bound
dec
outs
dec
out
stos
sbb
add
or
push
test
xor
icebp
add
mov
pushf
nop
push
inc
mov
pop
push
dec
mov
push
sbb
adc
loopne
jl
cwde
test
mov
jge
dec
cs
mov
loopne
push
mov
xchg
xlat
mov
repnz
dec
adc
push
sbb
nop
inc
enter
cmp
(bad)
dec
jb
or
pop
je
jbe
cmp
es
adc
mov
push
movs
jae
adc
sar
fwait
pop
ror
xor
mov
sbb
dec
add
xor
pop
add
call
mov
push
js
mov
mov
paddsb
add
or
add
nop
sub
js
add
and
xchg
xor
sbb
mov
sbb
cmps
scas
push
mov
sub
cmp
pop
jl
out
push
(bad)
faddp
mov
inc
les
je
pusha
rcr
push
push
mov
js
ins
jbe
sahf
cmp
dec
dec
pop
les
mov
dec
xchg
xchg
cwde
cmp
jl
fwait
movs
movs
mov
out
fld
in
(bad)
adc
mov
mov
dec
mov
scas
push
cmp
dec
mov
dec
and
add
inc
mul
add
jl
cmp
shl
sbb
pop
cmps
push
jbe
pusha
mov
push
and
mov
add
and
pop
lea
push
sub
sub
and
adc
cmovne
add
shl
arpl
or
ja
and
sbb
mov
lea
(bad)
xlat
test
(bad)
mov
imul
jo
xor
xor
aam
cmp
or
add
cmps
adc
pop
rcr
sub
pop
cdq
ret
xor
mov
jmp
jb
xchg
div
out
sbb
fistp
imul
push
pop
(bad)
dec
inc
aas
or
adc
or
dec
sbb
xchg
daa
cld
mov
push
push
inc
push
and
retf
in
loopne
daa
push
jo
daa
or
sbb
dec
retf
popa
clts
rol
outs
mov
fistp
xchg
daa
dec
or
xchg
push
mov
arpl
rcpps
push
sub
ins
mov
add
cmps
inc
daa
shl
add
add
pop
sub
ds
mov
iret
cmps
pusha
out
popa
outs
cmovb
mov
mov
mov
test
push
outs
jmp
mov
ficom
xor
inc
shl
and
add
push
leave
mov
ins
xor
adc
mov
fwait
inc
add
jge
sub
inc
cmp
test
adc
rcr
pop
push
fs
and
daa
lods
dec
cmps
xchg
adc
mov
cmp
and
push
mov
cmp
icebp
mov
pop
cmps
(bad)
jne
xchg
ret
mov
aaa
jle
or
ins
fld
xchg
ds
adc
cmps
les
jo
push
add
jge
xchg
cmp
enter
(bad)
xor
cs
jecxz
ins
push
jno
adc
dec
jnp
shr
xor
popa
loop
adc
push
inc
fst
xchg
mov
pop
(bad)
and
add
lods
xor
adc
hlt
mov
test
add
add
test
add
push
adc
or
sbb
fistp
sbb
in
sub
mov
rcr
xor
push
aaa
sbb
adc
lods
xor
mov
clc
add
inc
push
add
and
cmps
mov
aad
add
xchg
inc
mov
push
cmp
loope
addr16
test
cmpxchg
sub
adc
in
pop
sbb
or
dec
or
adc
and
nop
cmps
imul
imul
sbb
sub
push
mov
inc
xchg
jecxz
je
data16
add
iret
mov
je
je
push
shl
push
sbb
dec
sub
addr16
je
inc
stos
mov
loop
imul
ds
lea
mov
sub
xchg
(bad)
in
mov
pop
into
adc
out
xor
jne
jo
add
inc
mov
and
mov
dec
adc
mov
fiadd
push
and
adc
or
xchg
rcr
pop
cmp
in
and
inc
inc
enter
pop
add
mov
fs
pop
pop
mov
dec
test
and
and
mov
sub
xor
pop
mov
lock
xor
popa
ja
lods
mov
mov
or
cmp
cmps
xchg
in
outs
imul
dec
or
mov
fistp
cmp
fnsave
fstp
popa
in
add
pop
pop
fist
mov
inc
mov
jmp
inc
jno
adc
xlat
mov
jb
adc
sbb
lods
sbb
bound
das
push
push
adc
es
scas
pushf
data16
mov
inc
inc
or
dec
mov
pop
dec
clc
fcmovbe
cmp
xchg
ror
daa
sbb
mov
inc
inc
cmps
arpl
adc
fld
clc
lahf
movs
and
call
aas
cmp
push
pop
pop
xchg
ret
rep
ret
into
(bad)
lahf
jns
jo
lea
add
pop
inc
add
in
ror
xchg
lea
adc
inc
test
aas
sbb
mov
clc
add
add
nop
out
in
out
imul
dec
mov
out
adc
jge
push
shr
push
adc
mov
pop
retf
sub
xor
lock
in
adc
jno
jo
push
push
add
mov
les
push
cmp
add
push
or
inc
sbb
mov
xor
outs
aas
fcmovb
sbb
adc
sub
test
inc
stos
movs
dec
repz
les
cmps
or
outs
add
daa
ins
hlt
cdq
sub
call
jmp
add
sub
inc
ss
or
add
and
xchg
and
in
es
mov
lock
push
test
fist
or
jmp
or
retf
adc
xor
cmp
sbb
push
call
or
mov
pop
push
dec
lahf
pop
mov
pusha
sbb
pop
sub
pop
push
out
mov
jmp
pop
arpl
add
adc
iret
scas
pusha
add
div
int
arpl
(bad)
push
test
inc
sahf
dec
dec
jmp
sub
mov
add
pop
cmp
imul
xor
xchg
jl
outs
adc
or
cs
js
into
call
dec
pop
xchg
and
jnp
arpl
jg
push
mov
ins
mov
sub
jmp
adc
in
and
lods
loopne
out
lea
inc
sub
icebp
daa
test
outs
push
xchg
add
div
cmp
pusha
call
mov
push
xchg
jmp
add
mul
add
sbb
inc
int
xor
inc
mov
in
or
sbb
ins
or
in
jno
pop
sbb
test
jp
aam
push
outs
add
nop
hlt
loopne
inc
repz
add
les
inc
inc
inc
(bad)
dec
add
sar
inc
mov
push
add
push
mov
movs
loopne
push
fcmovnb
aaa
push
fwait
hlt
pop
fsubrp
rcl
mov
call
or
or
adc
fwait
xor
or
sbb
sub
or
inc
dec
pop
rol
add
test
addr16
ret
leave
cld
adc
dec
(bad)
and
cmps
adc
sbb
mov
mov
sub
das
in
add
xchg
lea
mov
and
or
hlt
pop
inc
or
js
lods
adc
pop
test
das
(bad)
stos
fdiv
lock
add
nop
pop
dec
inc
mov
sbb
sbb
ins
(bad)
(bad)
nop
(bad)
jmp
adc
xlat
pushf
xchg
cmp
sub
add
call
adc
lods
inc
dec
imul
adc
fst
dec
stos
(bad)
shl
and
lods
outs
mov
cmp
ins
xor
fwait
or
dec
js
jmp
dec
jnp
mov
dec
(bad)
aad
dec
inc
jmp
xchg
adc
mov
adc
fistp
push
inc
fisubr
push
mov
cmps
mov
cmps
xchg
jne
and
hlt
cmps
xchg
pop
jmp
xchg
loope
pop
dec
jne
cmp
jb
xchg
adc
pop
lods
push
inc
inc
mov
js
popa
jmp
int3
pop
daa
daa
in
pop
adc
aad
jmp
sbb
pop
inc
cmp
and
(bad)
call
fadd
adc
stc
inc
and
push
mov
dec
sbb
cmp
jge
jmp
dec
adc
loopne
add
iret
jecxz
cmp
out
bound
shl
test
es
pop
scas
sbb
lock
scas
or
test
(bad)
jno
shr
pop
mov
jge
jmp
xchg
ss
das
add
mov
xor
inc
mov
movs
or
add
sub
sbb
push
pop
mov
dec
add
jns
shl
and
inc
jo
rol
push
push
add
in
jnp
imul
mov
xchg
push
or
sub
mov
pop
or
jle
or
adc
and
sub
movs
lea
adc
pop
cmps
je
fiadd
aaa
mov
(bad)
mov
imul
pop
jp
jmp
imul
xchg
pop
cmp
test
sub
js
inc
popa
es
gs
out
mov
jno
mov
mov
fist
pop
mov
adc
xchg
inc
pop
push
pop
fs
ss
or
pop
pop
xchg
fidiv
je
dec
dec
aaa
fnstsw
sbb
pop
dec
pop
das
jbe
mov
lods
or
pop
cmp
popf
and
and
or
enter
imul
mov
out
out
xchg
pop
popa
ja
out
adc
hlt
mov
aam
movs
xchg
mov
jecxz
out
cmps
jg
adc
push
add
imul
pop
cld
sbb
aaa
pop
(bad)
lods
lods
fild
ret
fdivrp
fadd
and
push
f2xm1
outs
inc
add
das
mov
gs
mov
popa
add
sub
fisttp
pop
jmp
and
in
push
pop
push
aas
or
pop
das
jecxz
retf
dec
xor
pop
and
fs
xchg
into
fs
jp
fdiv
adc
xchg
mov
xchg
stos
scas
fdiv
push
pop
adc
pop
lods
cmps
adc
popa
inc
and
inc
jle
xor
enter
rcr
mov
sbb
inc
add
xchg
data16
add
xchg
jecxz
sbb
and
mov
cmp
sbb
movs
ret
jmp
sub
jnp
xchg
cmp
add
push
cmp
add
iret
ss
dec
ins
call
sbb
repnz
add
mov
or
jae
in
or
inc
add
or
fisubr
inc
dec
je
imul
shl
ret
jecxz
adc
adc
or
(bad)
loopne
imul
pop
pop
jne
and
ja
sbb
sbb
xchg
(bad)
out
xor
xor
inc
outs
mov
add
jp
pop
xchg
lock
sub
jo
lea
mov
xor
js
(bad)
in
jno
dec
push
(bad)
sbb
xchg
scas
repnz
cmc
cmp
das
and
inc
and
push
mov
adc
inc
mov
sub
xor
sbb
xor
adc
xchg
mov
aam
retf
sbb
fbld
adc
cmc
pop
outs
aaa
bnd
and
and
pushf
and
or
xchg
lods
or
push
das
adc
dec
push
(bad)
xchg
xchg
lods
imul
push
cmps
add
daa
lods
pop
xchg
cmp
(bad)
daa
add
clc
sub
rcl
push
cmp
jmp
adc
inc
sbb
push
mov
fmul
daa
mov
push
stos
add
cmp
test
add
xor
adc
daa
cmp
push
sub
mov
int3
or
or
add
xor
and
hlt
ds
dec
or
mov
xor
cmp
adc
sub
fisubr
jmp
jo
out
sbb
daa
dec
popa
sbb
push
push
(bad)
fwait
ror
rol
cmc
fist
(bad)
ror
and
sbb
stos
movs
iret
push
and
pop
popa
and
arpl
hlt
cmc
xor
add
sbb
or
dec
mov
pop
sub
jle
cmp
push
adc
push
aas
add
cmps
fisubr
cmp
inc
movs
mov
sub
aas
fbstp
or
and
and
sub
or
jae
cmps
mov
mov
pop
mov
test
xor
fstp
xor
jge
aas
jnp
bound
(bad)
or
cwde
jne
jmp
jmp
mov
inc
dec
arpl
ins
adc
lahf
dec
aaa
dec
sbb
retf
cmp
inc
push
or
fdivr
mov
imul
xor
mov
shr
loop
dec
enter
dec
(bad)
pop
nop
jo
mov
xchg
in
and
adc
gs
pop
adc
and
jnp
dec
cmp
fadd
test
imul
inc
and
aam
nop
mov
jg
xor
outs
call
push
push
rol
repnz
popa
or
aas
pop
mov
jo
dec
adc
inc
push
dec
mov
leave
dec
cdq
in
inc
int
push
call
aad
daa
fs
pusha
shl
jne
push
sar
cmp
fcom
adc
pop
arpl
mov
test
push
daa
clc
adc
xchg
jp
pop
or
leave
movs
(bad)
ret
arpl
loopne
cli
adc
fldenv
sti
cmp
jae
xor
out
jge
mov
or
adc
cmp
je
je
push
sbb
or
cmp
je
je
or
sub
and
das
xor
push
mov
push
ins
add
or
xchg
fsubr
adc
mov
shl
sub
push
jno
adc
and
adc
or
arpl
fcom
or
dec
pop
jg
movs
xor
sub
or
xchg
sbb
and
cmp
fadd
popa
add
aaa
or
jle
jae
sub
sub
pop
dec
mov
xchg
test
cmp
rol
jmp
jns
mov
add
scas
sbb
loopne
fucom
xchg
test
sbb
and
pop
popa
fbld
or
xchg
dec
mov
dec
ja
inc
scas
sbb
push
and
adc
dec
and
push
sar
es
icebp
adc
adc
adc
xor
pop
mov
loopne
add
push
test
out
sub
pop
pop
jne
xchg
push
lock
cmp
cmps
jo
cmp
add
xor
aam
loop
push
push
movs
daa
add
(bad)
and
add
aaa
jl
dec
gs
cmp
adc
add
je
xchg
inc
adc
mov
or
mov
in
and
ror
das
std
cld
pusha
mov
jnp
jb
jle
or
je
leave
xchg
and
sbb
sbb
push
add
mov
xor
sbb
push
shr
pop
inc
add
js
hlt
call
push
dec
and
fwait
sbb
dec
rol
int3
jnp
int
and
sbb
pop
imul
sub
and
adc
sbb
push
test
jmp
imul
jl
mov
iret
ins
ins
and
fwait
adc
sub
xchg
mov
pop
mov
push
add
lahf
or
mov
add
add
jo
dec
sub
sbb
imul
mov
fwait
xlat
mov
pop
and
inc
mov
xor
out
jo
aad
hlt
cmps
popa
bound
gs
fcmovnb
fmul
adc
sahf
daa
jmp
add
and
bound
and
ins
pop
xchg
xchg
inc
push
popa
popa
mov
jne
adc
mov
sbb
push
push
jmp
push
sbb
gs
ss
dec
jp
ins
fldcw
cmp
ins
ins
js
out
and
pop
mov
sbb
inc
xlat
pop
rol
xchg
pop
push
sub
repnz
jmp
inc
aas
jecxz
add
aad
xchg
cmp
loope
imul
xchg
pusha
push
mul
cmp
jb
add
les
clc
aam
loope
lods
mov
add
jnp
push
test
scas
sub
gs
retf
pop
adc
jle
js
lds
xchg
nop
xchg
add
dec
test
jbe
mov
outs
mov
mov
dec
sub
loopne
inc
push
pop
out
fild
ret
xor
ss
je
mov
adc
daa
sub
mov
test
jmp
add
fwait
or
add
jno
iret
lea
es
push
out
or
or
dec
push
xchg
jne
adc
les
lock
int
or
dec
je
ret
mov
popf
or
test
cmc
jno
outs
jp
imul
repz
fldenv
mov
add
test
lods
iret
add
das
enter
jno
jno
or
popa
mov
dec
xor
pop
xchg
das
adc
mov
add
sub
in
out
adc
sub
xchg
inc
sbb
adc
daa
arpl
cmp
jb
dec
mov
add
dec
xchg
dec
cmp
popa
shr
int3
xor
jne
repz
ja
out
fiadd
xchg
shl
dec
pop
pop
inc
dec
and
ret
and
addr16
push
sbb
and
pop
sti
xchg
jl
add
dec
lahf
add
lods
nop
cdq
cmp
ins
sub
adc
test
jg
mov
jg
push
in
add
clc
jg
imul
push
test
aaa
bound
sub
sar
stos
or
inc
adc
lods
lock
and
(bad)
in
pop
cmp
cmps
xchg
cmp
movs
mov
(bad)
sub
jae
adc
jns
jae
in
mov
sbb
push
cmp
enter
pop
add
xchg
pop
rcr
cmps
dec
pusha
mov
hlt
mov
pusha
xor
std
cmp
jmp
es
and
inc
adc
sbb
cmp
sub
and
sbb
add
push
imul
jno
adc
jb
shr
xor
adc
test
pop
pop
and
sbb
or
inc
ret
retf
jmp
es
inc
and
mov
das
mov
imul
add
rcr
mov
add
dec
or
es
push
not
popa
lock
add
test
rcl
xor
dec
mov
pushf
and
mov
push
test
adc
outs
adc
or
test
xchg
movs
jno
sbb
sbb
inc
adc
sbb
sbb
push
xor
fidiv
arpl
out
add
pop
or
add
pusha
sbb
in
push
sub
jae
xor
sub
pop
mov
sbb
hlt
imul
pusha
pop
or
stos
das
fwait
dec
xor
les
mov
inc
mov
or
fwait
pop
and
callw
enter
call
xlat
and
or
jmp
and
and
mov
or
xchg
aad
xchg
test
mov
dec
jecxz
or
test
ret
sbb
sub
inc
ficom
and
jb
out
adc
add
ja
mov
dec
xchg
nop
scas
stc
dec
push
inc
mov
dec
loope
leave
jmp
test
mov
inc
cmp
ins
xlat
outs
mov
in
popf
pop
add
add
push
call
jae
les
add
push
xchg
js
sbb
and
nop
mov
jb
cdq
xchg
sbb
xchg
mov
mov
dec
push
jecxz
inc
pop
push
add
scas
daa
push
test
pop
xchg
and
mov
xor
test
xchg
lock
add
and
sub
inc
adc
jmp
jb
sub
xchg
mov
imul
jne
push
or
shr
xor
pop
(bad)
sbb
xchg
sbb
add
dec
add
inc
ins
imul
add
std
adc
sahf
dec
sahf
or
adc
sbb
fist
mov
sub
dec
adc
outs
push
xor
push
int
push
(bad)
mov
sub
pop
movs
pop
(bad)
sbb
sbb
movs
adc
push
test
xchg
out
std
pop
inc
sbb
pop
and
les
mov
push
scas
sbb
sysret
jb
pop
data16
dec
shl
jg
xchg
adc
ror
jmp
xor
sub
add
or
addr16
mov
pop
inc
pusha
inc
add
test
mov
dec
push
inc
dec
dec
hlt
and
fwait
ror
loop
xchg
xor
fild
rcl
mov
jb
or
pop
and
dec
sbb
xor
or
mov
dec
add
add
sub
je
mov
cdq
fdiv
push
rcl
aas
mov
push
push
add
cmps
aad
sbb
adc
mov
push
xor
ret
sbb
pop
jo
mov
fwait
push
add
or
inc
inc
cmps
xchg
pop
or
and
call
sub
hlt
pop
xor
mov
and
jo
pop
or
outs
pop
pop
and
or
cmps
or
pusha
adc
cwde
mov
ja
in
pop
js
js
dec
jmp
enter
mov
add
or
inc
inc
ret
shr
fs
adc
mov
adc
jp
(bad)
mov
cmp
inc
test
and
out
mov
dec
(bad)
dec
repz
fild
xchg
add
and
inc
xor
ss
test
dec
daa
dec
adc
mov
add
inc
add
(bad)
mov
adc
xor
(bad)
mov
xchg
pop
sub
sbb
jp
sub
scas
pop
xchg
adc
mov
test
sbb
call
inc
dec
sub
les
push
sbb
shl
pop
mov
xchg
les
jae
movs
shl
sub
hlt
push
rol
lods
adc
sti
push
jno
mov
push
adc
dec
mov
adc
push
cmp
movs
iret
cmps
inc
je
pop
ins
loop
mov
sbb
pop
ret
fild
jne
loop
nop
add
mov
movs
stos
or
push
jmp
add
fs
hlt
xor
add
in
jbe
mov
or
enter
aas
inc
test
div
addr16
mov
mov
mov
test
jno
cmps
mov
shl
cmps
(bad)
stc
push
hlt
mov
dec
mov
cmp
sbb
or
ficomp
mov
mov
xor
lods
jecxz
sub
daa
test
inc
rcl
xchg
adc
jg
jns
jb
shl
adc
pop
fld
mov
jne
imul
pop
scas
popa
dec
cmp
mov
fstp
fnstenv
mov
mov
inc
push
dec
clc
adc
mov
ss
mov
add
and
or
add
aaa
pop
rsqrtps
pop
pop
pop
add
add
or
lea
jb
arpl
arpl
scas
sbb
dec
or
mov
add
retf
inc
mov
std
and
ror
jno
mov
movs
je
retf
or
push
push
jnp
cwde
fwait
rcl
push
mov
das
cmc
cmp
or
add
mov
mov
pop
pop
xchg
mov
call
adc
jo
pop
retf
push
(bad)
cmp
jp
add
ins
adc
scas
push
add
mov
pop
nop
push
imul
mov
or
test
lods
out
dec
movs
outs
mov
pushf
pusha
ficomp
lods
out
sbb
pop
inc
sub
inc
fsubr
lea
push
inc
sub
fiadd
pop
and
outs
sbb
movs
(bad)
fmul
fild
(bad)
dec
xchg
test
cmps
sub
ss
in
adc
fwait
ret
pop
dec
sar
mov
rcr
sbb
jl
cli
mov
sbb
adc
push
jmp
sbb
cmp
inc
retf
sub
popa
imul
and
cmp
push
xchg
jnp
push
jns
cmp
xchg
pop
adc
pusha
adc
pop
inc
jmp
daa
xchg
sbb
adc
dec
cmp
jns
add
add
push
out
adc
iret
push
test
sub
mov
adc
and
push
imul
shl
mov
repnz
and
rcl
(bad)
pushf
inc
jmp
mov
mov
fisubr
add
xor
cwde
icebp
jo
in
push
in
jg
loope
scas
jge
xor
loopne
inc
cld
(bad)
clc
js
lea
mov
pop
and
in
out
int3
mov
push
mov
sub
repz
push
sub
iret
lahf
pop
mov
lds
xor
bound
in
and
pushf
and
outs
leave
test
sub
in
xchg
jbe
xchg
mov
and
mov
lea
lods
retf
into
and
dec
fsubr
xor
in
inc
adc
adc
inc
fisubr
push
inc
dec
loopne
fsub
mov
test
push
mov
int
aam
inc
dec
or
add
cwde
sub
dec
jns
lds
inc
sub
mov
leave
adc
inc
in
mov
jno
cdq
jmp
xor
push
cmp
adc
sbb
aas
cmp
movs
data16
jg
ror
test
mov
dec
push
xor
sbb
je
cmc
cmp
loopne
sar
int
or
pop
and
adc
les
ficom
jnp
out
jmp
mov
popf
mov
je
daa
push
xor
cmp
pop
rol
or
in
push
lods
push
inc
test
in
dec
and
cmp
sub
scas
push
jmp
cmp
cmp
inc
neg
or
test
test
mov
popf
enter
sbb
cmp
sbb
xor
mov
iret
mov
in
mov
fmul
data16
jmp
mov
xor
shl
mov
dec
jmp
sbb
in
adc
pusha
fdiv
nop
out
add
adc
inc
xchg
call
ss
adc
push
and
pop
lea
jne
iret
movs
je
mov
nop
outs
test
fsubr
bound
jns
cmp
or
ror
loope
loop
and
aam
iret
mov
xor
fbld
push
or
stos
in
popf
sbb
or
cmps
loop
mov
mov
cli
sbb
push
adc
int3
int3
adc
cmp
shl
fst
xchg
fcmove
aaa
or
push
dec
ficom
inc
and
mov
or
and
popa
lahf
xlat
ret
xchg
inc
test
or
pop
(bad)
inc
fdivr
pop
add
fimul
fild
sub
add
inc
fsubr
dec
fwait
or
das
aam
push
sbb
adc
test
push
mov
ja
add
sbb
jno
mov
xlat
sub
mov
retf
pop
shr
imul
out
mov
mov
outs
mov
inc
cdq
mov
pop
dec
popf
test
xchg
dec
in
dec
and
cmovge
push
cs
es
xor
xchg
in
pop
or
xor
push
pop
mov
add
adc
cmp
and
push
jne
or
xchg
cmp
and
and
sbb
lods
movs
mov
mov
mov
mov
jmp
mov
lahf
mov
sbb
imul
(bad)
in
push
test
in
sar
in
xor
arpl
ja
adc
push
pop
retf
(bad)
lods
add
inc
inc
dec
xchg
pop
mov
retf
loop
loopne
sti
(bad)
mov
(bad)
mov
sbb
cmc
jne
pop
mov
pop
push
adc
and
jns
imul
fwait
mov
add
imul
and
shl
ja
sub
dec
inc
sub
mov
aad
push
pop
push
retf
test
in
aam
xchg
pop
lods
aaa
cmp
inc
jmp
scas
push
and
sbb
push
or
cmp
in
inc
inc
or
jge
dec
(bad)
call
adc
pusha
ja
popf
jg
je
push
push
call
pop
fistp
or
jb
xchg
push
push
xor
dec
jmp
xor
xchg
std
mov
sub
fmul
xchg
cmps
pop
add
sbb
dec
out
mov
inc
fs
jo
lea
aam
loop
fst
add
in
xor
and
cwde
aam
dec
add
mov
and
ret
sbb
add
mul
rol
add
push
mov
jnp
pop
aaa
push
daa
xor
iret
cld
mov
add
not
ret
push
jmp
ret
in
sub
push
ret
dec
sub
call
fiadd
fcomp
mov
pop
(bad)
call
add
outs
and
(bad)
lea
push
mov
sub
(bad)
mov
fistp
adc
add
push
fisub
jne
xor
jmp
(bad)
dec
cmp
jecxz
mov
scas
mov
xchg
add
dec
add
mov
lds
retf
push
push
adc
pop
xchg
adc
add
test
in
aas
sbb
pop
nop
xchg
std
mov
imul
clc
xlat
cmp
loope
push
leave
xor
add
stc
scas
add
dec
push
dec
push
out
mov
setge
mov
xor
js
mov
dec
mov
adc
dec
jb
mov
adc
addr16
test
mov
push
jb
es
push
clc
xlat
rcr
adc
inc
xlat
pop
sub
add
iret
in
push
xchg
call
lods
jl
(bad)
mov
pop
dec
jle
loop
jae
cs
xor
sbb
push
adc
out
mov
in
inc
dec
shl
xchg
test
sti
push
sbb
or
aad
lock
addr16
(bad)
sub
pop
sub
xchg
push
add
in
and
adc
mov
or
push
push
sti
fidiv
(bad)
dec
pusha
add
pusha
sbb
jmp
push
popa
cmps
jmp
and
jl
les
iret
and
cli
push
mov
jmp
outs
sbb
push
shl
loopne
loopne
je
mov
nop
test
lock
pop
popa
clc
jno
sbb
and
sub
and
xchg
lock
push
popa
push
fmul
addr16
inc
jbe
fs
iret
add
icebp
cmps
arpl
test
push
fidiv
push
add
fstp
sbb
fbld
imul
hlt
push
xor
sar
jmp
dec
sub
or
dec
or
pop
push
xchg
test
push
dec
leave
xchg
hlt
sub
dec
push
shr
lods
push
or
iret
push
rol
stos
xchg
push
and
sbb
les
sub
sub
mov
loopne
add
sbb
loop
mov
sbb
out
dec
cmps
fmul
scas
sbb
adc
jne
adc
cwde
mov
ret
test
sub
pop
dec
add
or
pop
and
or
repnz
or
push
dec
mov
jmp
call
xlat
jmp
mov
pop
cmc
movs
pusha
sbb
jecxz
imul
mov
ror
or
push
sbb
and
sbb
pop
repnz
or
(bad)
jb
mov
push
data16
adc
(bad)
fld
mov
ror
push
add
cs
cmps
adc
add
lock
cmp
jo
jge
rcr
add
in
rol
leave
and
jp
push
dec
inc
jge
mov
xlat
jl
and
retf
fwait
dec
adc
cmp
push
jo
add
mov
lods
and
out
test
cmp
and
sub
lahf
dec
adc
push
push
and
xchg
sub
and
adc
pop
dec
popa
xchg
xchg
mov
inc
and
adc
js
cs
cmp
retf
nop
sbb
inc
or
dec
and
sbb
pop
out
inc
bound
fsubr
gs
in
sbb
push
or
lods
ins
push
add
push
pop
aas
outs
cmps
xor
jae
lds
pop
inc
mov
adc
es
sbb
xchg
mov
lock
call
sub
inc
fwait
xchg
mov
sar
dec
mov
adc
mov
or
push
int3
sub
mov
sub
xchg
dec
outs
aaa
adc
jmp
enter
movs
mov
push
pusha
sar
clc
xor
hlt
inc
pop
add
jnp
jecxz
jne
xor
sub
pop
retf
push
dec
add
arpl
call
pop
sub
or
lea
mov
push
xchg
(bad)
(bad)
cld
pop
sub
sub
arpl
add
lea
or
ss
jno
mov
and
push
dec
jmp
imul
fwait
sbb
iret
lods
xchg
arpl
add
mov
in
adc
imul
sbb
mov
shr
adc
sbb
ret
cmp
add
inc
and
sbb
and
cmp
rcr
add
add
stos
(bad)
xchg
imul
or
test
loop
add
pusha
stos
and
jb
inc
test
test
xchg
xor
add
cmp
inc
mov
fs
jo
das
ins
bound
nop
fwait
ja
or
add
jo
js
aas
dec
inc
bound
mov
aas
pop
and
mov
mov
stos
pop
jnp
adc
std
fst
dec
pop
test
push
ret
adc
(bad)
inc
xlat
clc
and
push
ret
xchg
jp
and
push
shl
out
retf
and
adc
icebp
std
nop
sub
lea
sub
shr
aas
(bad)
fld
fcmovnu
sbb
add
arpl
mov
xchg
adc
jne
iret
xchg
mov
stos
addr16
xor
jne
shl
lea
xchg
outs
and
loopne
and
jno
jmp
xor
sbb
jmp
push
mov
sub
cmps
mov
fist
fstp
fwait
or
enter
loopne
shl
hlt
mov
or
add
mov
sbb
jg
jbe
jmp
or
adc
jmp
xor
mov
pop
bound
shr
imul
sar
dec
or
jmp
add
popa
sbb
(bad)
jmp
fisttp
pop
inc
push
stos
mov
push
mov
sub
adc
and
jmp
and
daa
nop
test
push
or
test
xlat
sahf
add
cmps
push
or
add
xor
mov
shl
and
inc
sbb
and
pop
lahf
jnp
sbb
mov
outs
fmul
popf
clc
outs
icebp
(bad)
jne
mov
cmp
add
mov
rol
jmp
xchg
sti
dec
rol
shl
daa
loope
mov
out
mov
out
ds
es
(bad)
pop
add
mov
pop
inc
lods
xor
push
lea
and
fs
xor
sbb
enter
or
xchg
mov
ins
sbb
icebp
pop
mov
cwde
inc
call
sub
call
add
and
mov
jmp
add
xchg
push
xchg
jnp
xchg
fs
lods
rcl
fadd
dec
pop
xchg
shr
cmp
mov
push
fisub
in
mov
out
mov
in
dec
add
js
cmp
cmpps
jno
fmulp
cmp
mov
add
inc
add
dec
bound
out
nop
out
stc
xor
stc
fs
push
wrmsr
ins
or
cli
and
ja
or
mov
add
mov
mov
inc
xchg
mov
sbb
ret
sahf
iret
adc
add
test
fmul
add
les
stos
push
dec
sub
sti
add
imul
arpl
mov
add
jl
test
scas
rol
pushf
test
mov
or
ffree
and
add
iret
ret
test
clc
inc
lock
jb
dec
pop
sar
pop
mov
dec
mov
call
jbe
inc
dec
jae
in
popf
xor
jb
add
adc
pop
inc
pop
out
push
add
add
xchg
inc
jne
test
or
adc
call
cmp
mov
bound
jle
jg
cmc
adc
aam
mov
loope
lea
push
adc
xchg
(bad)
push
test
and
loop
dec
sahf
lahf
neg
ja
in
pusha
pop
push
in
not
pop
sub
mov
loopne
daa
dec
push
mov
imul
mov
retf
adc
pop
les
iret
xadd
sub
xor
rcl
adc
lods
push
test
sbb
movs
in
jg
rcl
adc
daa
aaa
loope
call
jno
pop
lea
dec
pop
enter
xchg
out
push
pop
out
loopne
dec
cmp
or
xchg
or
popa
add
fstp
adc
mov
sahf
sub
xor
or
mov
jmp
xor
aam
mov
ins
sbb
or
adc
in
push
or
inc
lock
add
mov
lock
mov
mov
or
add
mov
fs
push
jne
test
dec
or
add
push
cmps
in
js
nop
xchg
clc
clc
or
add
pusha
dec
cmc
clc
repnz
dec
pop
add
xchg
(bad)
in
pop
imul
rcr
jne
lock
scas
cmp
sub
add
ret
cs
fcomi
dec
push
daa
outs
jns
mov
push
int
sbb
mov
int
xor
fs
push
sub
mov
shl
arpl
cwde
sub
push
test
xchg
xchg
or
popf
in
out
sbb
sub
or
add
or
iret
repz
gs
jo
sub
xlat
sub
pop
jnp
jno
inc
pop
daa
add
dec
dec
in
dec
inc
rol
mov
and
fidivr
daa
rcl
hlt
loopne
push
xor
inc
dec
ins
jmp
dec
icebp
and
lock
inc
idiv
rol
add
pop
pop
loopne
adc
cmp
or
ins
retf
movs
movs
add
(bad)
add
jge
push
enter
jne
cmp
sub
daa
mov
ds
or
adc
fiadd
sbb
in
add
fs
hlt
or
cmps
in
inc
popf
je
adc
add
fcomp
je
add
stos
in
push
push
cmp
mov
clc
dec
jmp
scas
add
popa
adc
pop
add
add
push
lock
adc
push
popa
xor
xchg
retf
fiadd
add
dec
mov
push
sub
sub
cdq
mov
hlt
test
mov
push
jns
add
or
xchg
lahf
add
hlt
xchg
push
dec
push
sbb
adc
add
fs
inc
add
add
adc
add
stos
out
and
mov
add
and
leave
ja
add
sub
iret
pusha
les
test
mov
btr
test
nop
dec
pop
add
out
shr
cmps
inc
mov
fdivr
cmps
push
pushf
push
loopne
xor
je
or
movs
cwde
mov
dec
xor
enter
xchg
adc
sub
dec
pop
in
cmp
or
test
inc
or
lock
call
push
sbb
dec
popa
in
sbb
fbstp
popf
js
cmp
call
sub
or
mov
adc
or
sbb
inc
ja
push
or
pop
adc
xor
jg
shl
mov
add
xchg
nop
mov
add
adc
rol
jmp
pop
popa
sub
adc
pop
adc
(bad)
vpandn
mov
inc
packssdw
pop
cmp
xor
mov
adc
sbb
icebp
cld
jne
retf
inc
mov
and
xor
xchg
xor
rcl
cmp
rcl
add
dec
sub
hlt
movs
aaa
inc
mov
rcr
xchg
jmp
inc
cwde
ss
xchg
fwait
cwde
fistp
mov
test
or
mov
add
loopne
sub
popf
push
clc
and
sub
and
mov
enter
mov
jmp
sbb
cdq
loopne
loopne
cmp
add
inc
push
add
xadd
inc
sub
inc
sar
sbb
shl
scas
mov
pop
push
mov
mov
add
clc
retf
inc
mov
mov
sub
xchg
mov
adc
enter
add
cs
clc
addr16
(bad)
jae
xor
mov
lock
imul
inc
or
and
dec
aas
outs
dec
add
xlat
jmp
test
and
add
test
nop
pop
movs
lods
or
lods
dec
dec
xor
xor
mov
repnz
pop
mov
cmp
push
(bad)
and
add
movs
dec
(bad)
pop
pop
push
scas
mov
rol
xchg
fsubr
enter
jl
push
pop
retf
ror
push
adc
repz
sbb
mov
ja
adc
lahf
mov
call
and
or
xor
dec
push
xchg
xchg
or
pop
mov
lods
cmc
or
dec
and
mov
mov
or
imul
inc
adc
adc
call
jnp
inc
mov
dec
xchg
nop
enter
mov
sbb
and
loopne
add
dec
loope
sub
pop
xor
pop
and
inc
or
xor
push
pop
stos
add
in
scas
cld
add
ins
sbb
jo
push
mov
adc
in
out
aam
adc
stos
sbb
cli
mov
push
xchg
mov
movs
or
call
xor
je
mov
jbe
ret
sbb
lods
mov
sbb
cmps
mov
inc
inc
jmp
cmp
(bad)
sbb
or
imul
push
daa
dec
fmul
push
push
pop
xor
ins
xor
iret
push
xor
or
mov
test
je
and
cdq
fistp
inc
add
push
push
nop
push
(bad)
cmp
(bad)
xor
push
inc
das
outs
arpl
xchg
stc
push
push
adc
add
and
jge
push
das
mov
and
pop
jns
add
xor
test
ret
mov
adc
lods
sbb
cmc
mov
stos
fs
xchg
ror
dec
push
les
ror
sub
adc
add
pop
jno
xor
mov
cli
push
and
dec
sub
mov
or
push
add
lahf
xchg
sbb
add
dec
xchg
and
in
pop
xor
cmp
leave
clc
push
mov
arpl
pusha
mov
js
mov
sbb
aaa
and
je
push
push
mov
es
shl
inc
cmp
jne
sub
call
sbb
dec
enter
pushf
pushf
in
fstp
pushf
mov
xor
jno
adc
in
jg
mov
fdivr
(bad)
jle
jo
sbb
fsubr
push
or
js
in
adc
dec
and
popa
daa
call
stos
mov
jmp
lock
xchg
movs
jmp
sbb
or
pusha
loopne
mov
or
inc
mov
aaa
test
push
inc
push
mov
and
mov
push
add
ja
sub
and
outs
rcl
jg
mov
aam
repz
push
or
sar
adc
in
aad
jg
sub
mov
sub
pop
push
and
repnz
sti
mov
mov
ret
js
xor
sub
inc
imul
sub
mov
inc
fistp
hlt
test
push
dec
push
int
in
test
cmp
push
or
push
fs
sub
je
das
cmp
and
xor
loope
imul
add
pop
add
ror
das
sbb
push
mov
inc
leave
cmp
(bad)
sbb
mov
lods
pop
das
xchg
push
fist
inc
sub
loope
or
pop
pop
std
or
and
sbb
lock
ja
rcl
loop
xchg
push
adc
frstor
push
(bad)
and
and
xor
movs
movs
sbb
gs
sbb
push
dec
inc
mov
fsubr
xor
push
pop
dec
dec
sbb
sbb
shr
ret
or
lahf
or
mov
gs
mov
pop
mov
cmps
jae
push
ret
hlt
loope
xor
(bad)
sbb
cs
push
pop
rol
pop
xchg
daa
add
shl
inc
add
ret
xchg
and
sbb
imul
pop
fdivr
adc
push
cmp
stos
nop
outs
xchg
inc
add
shl
dec
jnp
aaa
pushf
inc
sub
or
test
and
cdq
push
add
mov
or
pop
jecxz
fsub
pop
dec
xchg
inc
xor
xchg
xchg
outs
xchg
mov
test
lods
hlt
xchg
scas
arpl
jnp
repz
pop
push
inc
pop
adc
iret
loopne
xchg
sbb
mov
rol
call
call
sub
cdq
call
js
push
pop
aas
push
jle
pop
xor
mov
sbb
push
pop
xchg
cwde
cwde
sub
mul
pop
call
les
jb
lea
inc
pop
or
daa
fs
jmp
push
sub
sbb
add
cmps
dec
sti
lock
lock
test
inc
xchg
fld1
pop
or
je
cmp
adc
popa
shl
adc
add
call
fistp
pop
and
push
das
mov
sub
aam
xor
dec
mov
ins
repz
mov
pop
jmp
je
pop
sti
add
push
add
das
sbb
add
loopne
out
aam
fld
in
out
in
aam
jmp
and
jl
xchg
mov
sbb
mov
jns
stos
clc
shr
push
test
cmp
add
adc
pop
fisubr
xor
mov
out
std
test
jnp
cmp
xor
aaa
int
das
dec
jp
or
jb
and
ret
in
add
dec
sbb
or
or
pop
or
dec
ret
push
adc
aas
lods
add
or
jmp
mov
xor
cmp
movs
shr
adc
mov
rcr
mov
aaa
movs
or
loopne
dec
mov
jle
loope
cmp
cmp
add
fwait
add
fmulp
push
mov
out
adc
test
or
pushf
jno
push
(bad)
outs
dec
dec
iret
adc
mov
xor
fisttp
test
lds
pop
inc
aaa
icebp
sub
(bad)
mul
dec
adc
cmc
or
inc
adc
cmp
outs
jmp
inc
dec
sub
fiadd
daa
jnp
in
adc
or
sbb
push
push
xchg
or
jne
mov
gs
jecxz
js
adc
inc
or
mov
scas
mov
lea
pushf
xchg
hlt
inc
test
mov
xorps
leave
add
test
dec
inc
shr
xchg
dec
jo
jmp
sub
fld
test
fucom
and
add
js
push
push
ins
dec
xchg
push
mov
(bad)
icebp
out
xchg
(bad)
sub
and
(bad)
mov
fs
dec
pop
push
push
jge
cdq
ret
data16
shl
pop
sub
mov
jmp
call
add
pop
cmp
lods
and
fwait
push
or
movntps
(bad)
add
push
dec
adc
push
ret
xor
dec
pop
jbe
mov
fcmovne
and
inc
leave
fwait
push
pop
sbb
movs
xchg
inc
sbb
in
call
fisttp
fadd
inc
lea
gs
and
inc
add
and
fdivr
fmul
jg
push
mov
cdq
inc
mov
push
inc
mov
sub
jmp
icebp
out
cmps
jno
and
(bad)
mov
xor
cld
fwait
xor
cld
pop
adc
mov
imul
stos
xor
adc
imul
inc
and
or
(bad)
mov
enter
mov
jmp
popf
jns
and
adc
fs
dec
dec
call
fcom
bswap
sub
sbb
and
pop
enter
pop
dec
xchg
push
and
add
int
cmp
adc
mov
nop
daa
and
icebp
loopne
ret
test
cld
adc
mov
mov
mov
jbe
hlt
nop
fst
inc
js
xor
lods
xchg
push
pop
mov
mov
pusha
stc
cwde
aas
movs
push
adc
nop
lahf
call
push
rol
lock
rol
inc
ds
xor
inc
sbb
pop
div
rol
xchg
shl
and
pop
or
pop
xchg
dec
dec
gs
stc
jne
or
or
aad
or
xchg
adc
call
xchg
scas
push
add
jmp
adc
or
pop
mov
arpl
push
push
inc
jb
jno
xchg
and
add
add
stc
inc
daa
neg
lds
add
add
adc
gs
and
loopne
aad
xor
sub
add
push
jecxz
lods
jmp
jl
call
nop
add
cdq
test
and
jp
sub
daa
or
ds
scas
add
sub
xchg
popa
or
lock
add
pop
xchg
push
dec
addr16
not
cmp
dec
add
retf
and
push
xor
in
les
dec
inc
mov
in
arpl
dec
sar
xchg
test
push
shl
jge
mov
xor
add
cmps
mov
mov
les
jmp
push
hlt
add
retf
sbb
add
ins
pop
mov
inc
ins
pusha
pop
fidiv
inc
addr16
int
adc
or
and
popa
push
cli
(bad)
pop
jnp
xchg
adc
add
adc
ret
sub
xchg
inc
adc
outs
pop
movs
movs
fistp
push
loopne
sar
sbb
sub
gs
add
(bad)
call
js
xchg
and
sub
not
shl
dec
or
sbb
or
cmp
nop
mov
outs
and
or
shl
xor
pop
call
xor
sub
dec
inc
sub
jns
push
es
add
xchg
test
dec
add
jge
shl
xchg
cmp
bound
pop
add
mov
xlat
fidiv
imul
pop
adc
nop
xor
pop
cmp
jnp
popf
pop
test
add
xchg
adc
xor
ret
xchg
mov
clc
(bad)
or
sbb
jge
mov
imul
jb
cmp
xchg
xchg
push
pop
clc
mov
mov
arpl
rcl
or
add
inc
out
or
pop
mov
dec
pop
stos
sbb
into
rcl
push
or
add
or
push
retf
mov
pop
enter
dec
push
sbb
or
sub
mov
dec
or
xchg
das
mov
and
mov
xchg
or
xor
iret
inc
push
jns
dec
ret
lea
stos
sub
jg
mov
ror
ret
shl
je
sbb
mov
gs
mov
imul
jg
mov
pop
push
(bad)
xor
pop
ins
mov
sbb
inc
adc
push
and
sahf
push
pop
inc
(bad)
xor
or
sub
or
sbb
pop
inc
pop
lds
cmp
loopne
adc
fistp
jle
and
dec
(bad)
mov
ret
dec
mov
fadd
add
cmps
and
mov
mov
dec
mov
sub
icebp
cld
add
fwait
cmp
out
mov
in
aad
in
and
lods
jne
add
inc
dec
dec
xor
adc
adc
cmp
and
fldenv
mov
jns
xor
hlt
sar
aaa
adc
je
jmp
pop
mov
pop
jmp
and
sbb
arpl
nop
push
mov
test
dec
dec
mov
mov
xor
stc
(bad)
adc
popa
and
rcl
add
or
cmp
and
add
das
or
and
pop
movs
test
imul
sub
ja
cwde
cmc
test
mov
mov
fwait
dec
and
out
inc
rcr
pop
mov
or
add
in
fild
mov
(bad)
push
or
push
cmp
jp
ds
or
dec
push
inc
or
and
mov
jmp
fcomp
mov
sub
push
loop
push
push
or
(bad)
fcomp
fmul
adc
push
loopne
add
shl
push
sbb
cmp
test
xchg
inc
pop
adc
rol
dec
idiv
pop
cld
add
call
mov
xor
adc
sub
mov
(bad)
pop
add
ja
sbb
mov
in
in
call
sbb
mov
ret
pop
shl
push
sbb
loopne
adc
loopne
push
stos
lods
and
loope
enter
loopne
jo
inc
sbb
iret
in
pop
sbb
ss
inc
daa
sahf
rcl
or
bound
push
arpl
adc
pop
inc
add
cmp
adc
lock
xor
add
push
(bad)
hlt
inc
cld
jp
or
inc
add
sbb
loope
and
cmp
and
adc
out
rcr
jmp
pop
mov
pop
xchg
addr16
ins
sub
sbb
xchg
xor
cmp
pop
lock
outs
push
mov
pop
sub
adc
mov
or
out
add
sub
push
cvtps2pi
push
movs
pop
test
iret
test
data16
test
addr16
or
add
pop
lods
inc
pop
dec
pop
xor
jmp
inc
je
inc
sub
inc
add
sub
jne
or
cmps
sti
add
pusha
int3
push
pop
jne
inc
inc
cmp
pop
stos
es
push
add
outs
test
out
dec
nop
mov
in
mov
xor
retf
cwde
push
cmp
inc
inc
inc
cmp
ret
pop
cmp
ja
jmp
xchg
dec
call
rol
and
test
add
arpl
pusha
xchg
rcr
adc
pop
xor
pop
push
mov
and
pop
add
sub
ss
sub
fdivr
push
dec
push
xchg
cld
nop
and
adc
mov
fisttp
adc
push
or
dec
inc
xchg
xlat
mov
aam
shr
mov
mov
push
in
setl
or
cmp
xchg
outs
or
sbb
adc
jg
stc
lods
and
inc
add
or
sub
loope
xchg
add
sbb
add
cmps
inc
xor
dec
daa
mov
int
xor
and
jmp
rol
dec
movs
xchg
test
test
xchg
ret
adc
add
pop
stc
sub
sbb
push
dec
sub
cmp
bndstx
add
sbb
push
(bad)
lds
adc
shr
jmp
add
cmp
rcr
arpl
push
inc
jne
add
xchg
ja
inc
test
lods
in
and
fidiv
lea
clc
mov
mov
adc
mov
pusha
jb
retf
sub
shl
ror
jo
push
jo
das
pop
and
sbb
add
push
and
add
and
lods
ret
rcl
push
fisttp
xchg
sub
in
in
es
clc
add
inc
and
jg
je
mov
sbb
xor
fld
push
push
scas
sbb
popf
fnstenv
pop
jmp
sub
dec
in
add
add
sub
fistp
xor
sbb
cmp
xchg
add
ja
add
ror
lea
lea
push
sbb
cmp
sub
sub
sub
(bad)
dec
or
test
xchg
push
adc
mov
push
jl
sbb
stc
inc
xchg
add
test
fiadd
and
push
adc
push
shl
lea
xchg
and
xchg
test
dec
fcomp
sub
push
test
inc
mov
popa
loope
mov
nop
xor
iret
inc
imul
ins
sub
in
mov
pop
jne
mov
push
cmp
xor
popa
jecxz
add
test
pusha
inc
stos
unpcklps
adc
inc
ficom
test
push
jmp
imul
push
push
xor
ret
out
push
mov
mov
inc
xchg
loope
sbb
cmps
lea
inc
fst
or
lods
je
fwait
push
sbb
sub
das
add
jmp
test
push
xchg
adc
sub
add
jno
or
xchg
adc
inc
div
movs
fild
pop
cmp
jne
sti
call
jns
dec
inc
add
add
sbb
add
mov
xor
mov
inc
and
pop
sbb
xchg
jge
shr
and
add
xchg
addr16
dec
ret
jl
cmp
cmp
push
xor
pushf
jo
movs
jmp
xchg
jg
push
mov
sti
ins
ret
xchg
add
imul
inc
dec
arpl
adc
cmp
and
cmp
imul
inc
mov
not
push
sbb
xor
adc
std
and
inc
shr
xor
daa
xor
mov
dec
pop
and
dec
rol
jbe
aas
dec
dec
sbb
xchg
call
or
sub
jb
push
xchg
in
int
nop
icebp
ins
lods
push
jno
xor
addr16
cld
test
sub
and
test
sbb
dec
retf
mov
push
sbb
sub
push
mov
nop
xchg
ja
or
iret
cmp
add
xor
adc
aaa
(bad)
and
mov
pop
dec
cwde
sub
ror
fistp
pop
xchg
adc
aas
lahf
add
pop
test
sbb
mov
add
adc
pop
mov
push
dec
cmp
add
cwde
mov
aas
push
jno
(bad)
jl
adc
in
dec
jne
inc
or
or
cmp
mov
in
ror
or
or
arpl
adc
mov
lock
dec
or
xchg
or
mov
inc
dec
fs
sub
std
aas
and
adc
sub
popa
push
ret
sub
push
sbb
xor
xor
push
dec
in
imul
jne
jle
mov
lock
xchg
mov
inc
jle
add
dec
mov
in
ds
outs
adc
mov
les
mov
xor
xchg
pop
xchg
mov
mov
sub
xchg
dec
jne
retf
sbb
icebp
xor
inc
int
push
xchg
iret
out
add
inc
sub
mov
test
and
pop
adc
or
outs
mov
dec
mov
retf
dec
push
push
xchg
lods
inc
or
iret
test
das
and
adc
gs
dec
xor
pop
xchg
nop
movs
test
mov
or
inc
dec
mov
dec
add
mov
daa
movs
inc
pop
iret
scas
and
scas
jge
and
or
js
cmp
push
lock
(bad)
and
sub
in
pusha
jae
jmp
fcomp
adc
push
icebp
mov
jmp
ret
daa
dec
inc
mov
xlat
adc
jne
and
gs
pop
or
inc
test
mov
lds
or
mov
pop
xchg
inc
xchg
mov
pop
nop
xchg
cmps
cmp
jae
loope
popa
cmp
cmp
adc
pop
test
test
jg
lds
repz
ds
je
lods
mov
and
fcom
jmp
cmp
and
and
push
sub
cs
cmp
adc
arpl
sbb
in
inc
lock
add
dec
shl
sub
out
cmps
mov
int
in
lods
dec
mov
aaa
imul
dec
pop
or
dec
mov
movs
or
out
retf
shr
inc
idiv
sub
mov
adc
inc
dec
or
pmulhuw
mov
or
jno
mov
push
xor
mov
add
sbb
sbb
pop
gs
and
rol
sar
push
xchg
js
test
stos
pop
repnz
mov
mov
jp
inc
jl
call
ror
cmps
pop
in
inc
gs
inc
ja
shr
push
mov
adc
cmp
test
outs
in
mov
push
lea
(bad)
mov
xor
mov
clc
sbb
retf
or
jle
sbb
xchg
ins
aad
test
inc
mov
pop
adc
jb
pop
adc
pop
out
inc
adc
arpl
inc
hlt
ins
add
and
or
or
and
or
ret
aas
mov
xchg
je
mov
sub
push
push
popa
imul
pop
adc
xchg
mov
xchg
sub
fadd
push
pushf
sub
rcl
add
or
shr
in
inc
call
inc
movd
push
call
or
movs
rcr
imul
mov
or
enter
test
rcr
push
mov
and
int
loopne
jb
mov
mov
lods
jmp
push
and
imul
nop
jo
cld
mov
mov
push
aas
adc
jmp
mov
adc
pop
or
popa
and
sub
push
ss
xchg
cmp
mov
sbb
shl
add
adc
or
xor
push
scas
add
stos
add
add
out
add
pop
jb
jmp
stos
mov
push
stos
mov
cwde
mov
mov
mov
jge
mov
jmp
add
repnz
fistp
push
xchg
cmps
(bad)
mov
and
xor
add
fdivr
lahf
jnp
or
mov
push
and
cmp
das
fidivr
adc
add
adc
out
mov
shld
mov
mov
sub
hlt
aam
push
pop
movs
jb
mov
push
mov
xor
out
ror
or
xchg
sar
mov
adc
xlat
xchg
fcom
mov
test
cmp
fdivr
mov
dec
scas
(bad)
dec
enter
aam
mov
cmp
hlt
sbb
pop
or
dec
ror
cmps
or
add
cwde
lahf
add
sub
(bad)
mov
add
sbb
push
cmp
dec
adc
rcr
nop
jl
pop
or
adc
cdq
pop
xchg
mov
mov
es
fbld
mov
mov
in
xor
mov
fdivr
xlat
out
push
push
fst
dec
inc
sbb
cmp
mov
cmp
int
mov
imul
jb
mov
xchg
inc
push
mov
scas
add
xchg
push
jle
loopne
pop
shr
fistp
outs
xchg
adc
xor
jbe
lahf
aas
call
rol
mov
or
add
mov
sub
mov
sbb
lea
push
sub
sub
pop
adc
adc
pop
sti
(bad)
into
mov
call
loope
and
jmp
not
xchg
dec
enter
inc
dec
push
add
xor
push
in
ret
(bad)
stos
out
and
dec
push
gs
and
sbb
cmps
jmp
pop
fs
fs
adc
xor
pop
or
out
add
ja
fldenv
and
push
aam
leave
imul
push
(bad)
retf
pop
mov
dec
lods
dec
adc
add
fs
stos
jmp
mov
fs
mul
inc
shl
or
daa
or
inc
ins
daa
sub
add
aaa
das
add
or
inc
ret
lds
pop
add
push
stc
or
hlt
cs
ins
fdivr
nop
adc
lods
retf
int3
jmp
add
push
fdiv
popa
ins
add
aas
sbb
adc
mov
jg
dec
fsubr
pop
(bad)
or
fs
pop
imul
mov
movs
mov
es
mov
cmp
add
add
inc
in
mov
pop
out
and
inc
xchg
mov
repz
sbb
es
or
adc
mov
leave
adc
loopne
adc
inc
outs
aas
adc
mov
nop
pop
add
fcom
(bad)
fisub
retf
add
nop
inc
cmp
pop
shl
dec
loope
dec
xor
or
xor
cwde
mov
push
int3
push
(bad)
adc
jno
cmps
dec
push
shl
dec
push
lds
mov
mov
cmps
add
ins
add
out
mov
jne
adc
pusha
xchg
jno
retf
dec
dec
cdq
push
jnp
pop
jne
sbb
and
sbb
xor
(bad)
dec
ud2
call
add
fisub
lahf
out
add
jp
jmp
push
push
(bad)
or
aas
add
ror
add
adc
adc
es
push
add
inc
cmp
arpl
call
retf
xor
mov
mov
adc
inc
and
and
and
xor
popf
mov
pusha
jb
ret
adc
test
xor
retf
mov
or
(bad)
out
daa
dec
arpl
pop
mov
pop
cwde
popa
or
les
ret
xchg
lock
xor
cmp
xchg
mov
sub
dec
sub
rcl
test
add
mov
adc
push
inc
push
lods
pop
and
add
bnd
sbb
rcl
cmp
lods
retf
push
push
scas
and
add
and
jno
ret
and
pop
call
or
sub
add
or
das
add
jecxz
fidivr
pop
adc
clc
cwde
sbb
imul
or
xchg
mov
mov
add
add
sti
adc
mov
sbb
movs
test
or
and
mov
xchg
dec
mov
(bad)
jno
call
loop
cmc
mov
dec
mov
in
test
or
or
das
mov
test
pop
add
lods
xor
pop
xor
adc
mov
cmps
or
adc
add
cmps
mov
mov
inc
dec
je
xchg
sbb
xchg
(bad)
push
mov
dec
inc
rcr
inc
or
ins
xor
sbb
loopne
loope
add
lods
push
div
test
lock
fsubr
jecxz
sub
icebp
or
fldenv
pusha
jbe
ror
mov
jecxz
aaa
mov
inc
xchg
add
add
test
call
movs
mov
fistp
pop
dec
jecxz
cmp
mov
int
add
add
ins
loop
popa
dec
out
push
or
fiadd
out
jecxz
mov
mov
(bad)
sbb
sbb
push
xchg
cmp
aam
xchg
mov
pop
lods
lock
inc
adc
mov
test
ja
imul
adc
adc
or
fst
(bad)
jle
add
lea
or
push
xor
or
cmc
adc
jnp
sbb
adc
add
or
xchg
and
addr16
mov
and
sub
add
das
out
sub
xchg
xor
mov
push
add
ins
ror
adc
and
mov
cdq
pop
push
or
mov
hlt
cmp
mov
push
or
cmp
mov
in
xchg
rol
fldenv
inc
nop
inc
dec
retf
jmp
jg
dec
loopne
inc
ins
or
sbb
dec
add
fcom
sub
xlat
inc
nop
mov
sbb
push
sub
lahf
fadd
call
lea
addr16
aad
fsubr
or
aaa
add
call
push
add
jo
push
nop
dec
adc
sahf
and
pushf
jg
js
movsx
popf
xor
jne
inc
sbb
push
in
push
add
scas
or
pop
sbb
call
add
push
js
jecxz
fdiv
sub
rcl
lock
and
int
jmp
aam
and
xlat
jo
inc
and
cdq
sub
adc
imul
push
nop
sbb
push
jnp
push
cmp
hlt
add
jne
int
cmp
pop
jo
xchg
fmul
retf
push
imul
sbb
push
pop
arpl
les
mov
xchg
in
ins
je
cdq
push
ins
ins
popa
sub
fimul
add
imul
mov
xor
clc
lock
sub
push
out
push
pop
sbb
inc
adc
pop
push
ins
bound
or
xchg
sub
shr
or
adc
nop
punpckhdq
popa
jo
aas
popf
and
ret
push
pop
cmp
xor
and
sub
loop
push
push
out
lds
in
xchg
or
push
jmp
adc
sbb
test
shl
mov
xchg
xchg
adc
dec
lahf
jne
pop
and
add
xor
test
cmp
xchg
jl
jge
or
jl
add
popf
stos
dec
(bad)
push
dec
mov
mov
shl
jge
or
pop
xor
or
or
cwde
js
adc
outs
pusha
in
aad
and
stos
imul
add
push
stos
pop
add
sbb
cdq
pop
out
hlt
stos
xor
(bad)
or
sbb
mov
xor
sbb
aas
out
outs
mov
ret
jbe
jae
and
ja
mov
adc
inc
or
jmp
sub
cmp
adc
cmp
push
sub
push
lea
fwait
xor
gs
pop
mov
cmps
adc
sub
add
and
sbb
out
shr
dec
xor
pop
dec
sbb
out
xor
call
pushf
inc
inc
push
and
xlat
loope
movs
sbb
pop
adc
xor
cmc
xor
stos
and
mov
adc
and
or
or
mov
mov
mov
test
arpl
inc
icebp
pop
daa
je
sbb
jo
dec
lea
sbb
mov
jne
daa
and
dec
sbb
lods
adc
jno
adc
add
ss
jbe
dec
loope
xchg
mov
adc
outs
xor
sub
or
and
adc
cmp
mov
or
jmp
sbb
pop
stos
mov
shr
mov
adc
jp
inc
mov
jmp
dec
mov
pop
dec
inc
or
sub
cwde
or
or
(bad)
jne
cmp
sbb
jne
jmp
mov
pop
sub
(bad)
dec
xchg
push
aam
sub
mov
xchg
popf
popf
xor
inc
pop
fisub
jecxz
xchg
in
and
xchg
in
scas
arpl
xlat
outs
xlat
mov
mov
or
mov
popa
mov
sub
imul
push
cmp
std
xor
adc
xor
add
hlt
add
scas
cmp
jne
add
and
pop
scas
and
clc
test
mov
jne
pop
(bad)
stos
xor
push
repz
daa
int
jae
mov
mov
xor
sbb
push
test
data16
adc
dec
mov
push
cmp
loope
test
mov
or
jecxz
or
or
loopne
fisttp
in
sbb
xchg
outs
arpl
lods
sub
imul
xor
sbb
fsubr
adc
dec
mov
sbb
jo
rol
adc
pop
(bad)
mov
push
add
push
add
and
fld
sbb
outs
push
cwde
pop
ins
dec
or
jno
sbb
mov
adc
ins
add
xlat
test
inc
or
inc
sbb
mov
add
push
cmp
cmp
hlt
hlt
push
push
adc
jns
xor
vpsubb
es
sub
xor
jle
pop
jno
lods
sbb
inc
mov
test
and
fst
outs
jne
repz
js
fwait
pop
xlat
cmp
sub
aas
sbb
sbb
scas
xor
push
test
or
popa
adc
ja
xor
or
mov
or
outs
adc
mov
cmp
inc
xchg
add
or
push
adc
sbb
sbb
jo
fcom
dec
mov
add
inc
inc
xor
adc
adc
loop
sbb
mov
addr16
int
cmps
or
push
cmps
pop
xchg
js
xor
mov
sub
shr
fistp
cmp
scas
or
mov
xchg
aam
pop
pop
xor
mov
gs
mov
cmp
mov
add
add
movs
ins
mov
fld
sub
mov
iret
or
jb
fxch
pop
(bad)
adc
fistp
in
mov
jmp
or
jg
shl
cwde
xor
inc
mov
add
aaa
or
clc
inc
leave
imul
mov
mov
sbb
xor
(bad)
pop
mov
jo
nop
fst
test
or
mov
or
or
js
jnp
mov
or
mov
(bad)
stos
ins
loopne
push
pop
push
and
pop
loopne
test
loopne
mov
adc
push
es
xor
mov
pop
mov
push
fiadd
xchg
mov
pusha
xchg
icebp
sub
xchg
or
or
add
and
xchg
pusha
es
rcl
movs
daa
mov
outs
adc
pop
xor
gs
outs
loope
call
inc
sub
movs
sbb
fwait
lahf
aad
or
inc
and
rol
adc
and
les
aaa
dec
fwait
jne
and
and
loopne
or
nop
dec
call
cmp
push
add
sahf
cmc
das
ret
sub
mov
aad
xchg
cmp
fs
add
call
fld
icebp
add
or
pop
push
pop
rcl
or
add
jmp
in
pusha
push
push
jbe
shl
mov
test
mov
je
inc
int3
or
(bad)
nop
(bad)
jno
add
push
fcmovnbe
jnp
cmp
jb
inc
ficom
adc
adc
xchg
jmp
sbb
push
pop
mov
or
pop
pusha
into
not
inc
xor
push
add
bound
jge
pop
push
push
les
add
jo
fild
push
das
sub
rol
push
lahf
or
add
mov
arpl
or
add
aas
pop
and
lea
pop
aas
or
pop
clc
dec
fwait
push
std
fs
sbb
shr
mov
jge
test
sub
pop
mov
adc
and
cmps
mov
adc
dec
pop
mov
fadd
sbb
pop
push
pusha
js
pop
xor
xor
inc
or
scas
fild
adc
sbb
sbb
or
xchg
fs
retf
in
or
or
push
dec
clc
sbb
int
jne
xchg
xchg
xor
push
mov
xchg
pop
lds
push
test
cmp
lock
and
cmp
pop
dec
je
adc
add
add
les
lea
push
cmp
jns
inc
(bad)
stos
xor
or
mov
inc
gs
frstor
sbb
(bad)
push
popa
daa
sub
aaa
pop
imul
sub
test
out
leave
ins
inc
(bad)
ins
sbb
dec
unpckhps
call
je
push
mov
dec
dec
popa
in
pop
fidivr
push
jl
and
gs
jg
pop
or
adc
or
lds
mov
xor
add
inc
pop
mov
add
adc
add
dec
(bad)
jmp
(bad)
cld
sbb
mov
dec
mov
pop
mov
add
or
sahf
mov
mov
push
pop
cmp
pop
hlt
cmc
ins
rcr
add
pop
or
jae
int3
and
or
or
and
mov
jl
sbb
lods
loope
mov
gs
jl
sbb
clc
jge
xor
arpl
sub
xor
rcl
jecxz
loop
jmp
out
or
neg
or
sbb
leave
movs
dec
fmul
xchg
and
inc
icebp
inc
push
sbb
shl
mov
rol
sub
cmp
and
jae
adc
push
test
inc
inc
and
lea
in
data16
or
cmp
add
std
inc
mov
cld
stos
sahf
pusha
push
lahf
push
rol
out
mov
mov
pop
adc
sbb
je
xchg
jmp
xor
pop
fs
ret
mov
loopne
sbb
sub
lock
pop
inc
push
and
xor
fwait
adc
ret
ret
aaa
pusha
popa
push
jb
mov
inc
loopne
mov
dec
shl
iret
mov
enter
clc
pop
ja
test
jl
cmp
mov
mov
mov
mov
push
arpl
sub
hlt
pop
or
add
imul
imul
inc
ds
sbb
ss
shl
mov
pop
inc
push
push
or
call
inc
rcl
pushf
je
sbb
pop
push
sbb
and
xchg
fist
mov
fbld
xchg
test
push
jb
and
jno
jmp
addr16
mov
in
daa
call
push
test
sub
adc
adc
rcr
sbb
jle
or
jns
and
xchg
(bad)
repnz
push
test
sbb
outs
or
aam
cmp
out
and
aam
pop
xchg
fsub
xchg
inc
movs
sub
adc
cmp
lea
push
cdq
and
iret
or
add
stc
adc
dec
push
pop
or
inc
loope
cmp
or
loopne
mov
or
adc
or
dec
fld
vpmacssdd
mov
fidiv
jle
sub
dec
lods
and
add
jb
cld
rcr
fadd
inc
sbb
xchg
or
cmp
add
fisttp
add
push
xchg
cld
or
fs
dec
push
jmp
mov
dec
fcomp
inc
std
icebp
jmp
sbb
sbb
pusha
mov
(bad)
stc
dec
mov
out
push
test
dec
or
sub
and
ret
adc
and
xchg
lock
sti
nop
mov
outs
adc
dec
fadd
mov
out
cmp
dec
or
gs
cmp
sbb
mov
pop
int
out
mov
and
je
or
sub
pop
fcomp
push
xor
inc
fsub
push
sti
mov
sbb
ss
push
adc
arpl
call
not
enter
(bad)
es
mov
xor
or
imul
(bad)
push
or
jle
jge
jnp
inc
rcl
xchg
inc
dec
mov
or
or
push
or
jmp
pop
inc
push
push
or
and
inc
fst
das
add
(bad)
leave
add
clc
jnp
out
shl
icebp
push
rcl
mov
pop
adc
mov
sub
mov
push
xor
and
das
jo
stos
call
scas
aas
in
adc
das
lock
pop
push
int
outs
sub
imul
jg
pop
pop
add
fdiv
in
(bad)
test
adc
clc
gs
and
dec
inc
and
gs
outs
pop
xor
das
or
push
add
rcr
jecxz
in
bound
imul
add
push
pop
fimul
ret
jns
gs
test
cmp
jmp
mov
(bad)
and
xchg
mov
mov
nop
jne
push
fs
add
xchg
aam
adc
mov
(bad)
stc
xor
frstor
xchg
loopne
mov
inc
push
fsub
les
or
daa
(bad)
jmp
scas
ficom
test
xchg
jo
cld
icebp
mov
(bad)
mov
xor
push
add
inc
fst
pop
cmp
dec
retf
xchg
sbb
idiv
lea
nop
in
lods
leave
hlt
inc
jmp
xchg
popf
cs
add
mov
xor
jecxz
movs
les
mov
pop
mov
test
daa
sub
cmps
mov
xchg
mov
cwde
xor
retf
mov
fs
outs
ins
or
pop
xor
jns
pop
mov
jge
stos
and
mov
mov
fild
cmp
inc
lock
push
mov
loope
ret
movs
stos
daa
pop
into
unpckhps
inc
mov
fimul
or
stos
add
xchg
popf
dec
and
movs
push
movs
or
les
xchg
dec
neg
lahf
add
adc
icebp
mov
push
and
movs
or
int3
rol
movs
adc
jmp
xor
add
inc
xor
sbb
push
jge
add
js
and
sbb
mov
test
call
clc
or
out
adc
dec
imul
pop
into
mov
adc
cmp
popf
ret
xchg
pop
popa
fadd
sti
xchg
fbstp
sbb
cmp
xor
fnstcw
cmp
adc
(bad)
out
in
fmul
jns
xchg
stos
iret
jmp
bound
pop
int
lods
xchg
lods
xor
dec
rcl
push
pop
adc
aas
adc
jle
adc
(bad)
mov
fcom
dec
fist
stos
dec
dec
dec
movs
fstp
jbe
mov
sub
and
push
call
or
test
scas
add
dec
or
or
sbb
inc
inc
movs
dec
into
movs
xor
movs
mov
jo
shl
adc
inc
jp
or
inc
fild
sbb
pop
pop
mov
inc
inc
sub
mov
jne
xchg
or
add
lods
int
mov
add
push
pop
lea
cwde
pop
push
aas
scas
adc
mov
inc
scas
test
fcom
sub
ror
jl
fiadd
ja
mov
sub
push
adc
xor
pop
dec
je
xor
ins
push
arpl
and
or
dec
bound
add
aas
pop
retf
mov
xchg
mov
rol
out
jne
cmp
outs
and
push
nop
addr16
mov
mov
scas
lahf
jo
sub
push
mov
push
rol
mov
call
sub
dec
xor
sub
pusha
ret
mov
ss
jl
xor
dec
pop
push
inc
inc
jmp
mov
add
jno
or
mov
push
mov
aas
cmps
add
ror
add
aad
adc
add
mov
cdq
ficomp
aas
push
cdq
cmp
jmp
mov
jp
pusha
sub
rol
and
gs
dec
enter
or
xchg
mov
or
jbe
rol
outs
pop
mov
xchg
push
add
push
lds
xor
dec
ja
fistp
lahf
pop
call
push
or
lock
popa
xchg
push
sbb
add
movzx
out
push
adc
cmp
mov
shl
jg
mov
dec
lahf
imul
jo
and
pushf
pop
jle
aaa
add
and
daa
sub
aam
sub
lea
fsub
scas
push
lods
mov
cmps
or
ins
in
push
or
nop
mov
lods
icebp
sbb
inc
or
dec
sub
movs
mov
pop
lahf
sbb
sbb
and
inc
inc
fwait
adc
out
xlat
jmp
pusha
inc
jmp
jg
repz
out
push
fistp
or
or
out
fucomip
fnstsw
sub
dec
cmp
jmp
fild
and
aaa
cs
lds
adc
xor
and
mov
adc
shl
loopne
xchg
sub
popa
push
adc
mov
mov
cmps
iret
mov
ficom
stos
loope
cmp
bound
push
out
je
loope
imul
cmp
inc
das
and
mov
pop
adc
cmp
scas
mov
jge
stos
es
inc
add
dec
sti
fistp
pop
and
pop
hlt
jge
dec
shl
imul
movntps
and
out
inc
imul
inc
inc
inc
icebp
xchg
sub
push
(bad)
xor
mov
dec
(bad)
sub
pop
fsub
imul
sahf
test
cdq
fsubr
jecxz
xor
pop
cmp
jmp
push
test
jp
inc
push
out
jno
inc
fsub
and
pop
pop
jne
movs
gs
push
or
dec
and
call
leave
mov
mov
sbb
add
and
push
les
adc
fldenv
call
adc
mov
jmp
rol
push
mov
addr16
adc
cli
stos
push
pop
fs
cli
or
xor
sbb
xchg
add
add
sar
sub
inc
daa
add
adc
enter
movs
and
scas
adc
xor
add
hlt
nop
imul
dec
js
test
cdq
icebp
test
dec
pop
xchg
or
push
in
mov
sti
or
js
or
push
sbb
popa
sbb
sub
ret
popa
imul
mov
sub
stos
push
pusha
test
pop
pop
xchg
mov
scas
and
cli
jnp
mov
add
gs
pop
int
inc
jmp
mov
sub
push
mov
mov
mov
sbb
sub
sbb
fsub
cmp
and
sbb
push
movs
ret
sub
jne
pop
or
inc
test
cmp
jmp
adc
mov
aam
mov
loope
adc
sbb
dec
mov
add
leave
int3
mov
jp
mov
jmp
push
ret
adc
inc
pop
mov
je
dec
and
lea
adc
adc
hlt
lahf
adc
movsx
mov
dec
fwait
sub
pop
ss
bound
mov
in
sub
nop
in
or
adc
add
dec
shl
jb
xor
xchg
adc
inc
aam
aam
fs
retf
fcomp
enter
fsubr
dec
ret
dec
sahf
movs
dec
or
das
cmp
xor
pop
dec
inc
and
mov
xrelease
ins
test
or
dec
add
jecxz
pop
jp
add
and
(bad)
cwde
and
or
jge
inc
push
sbb
jge
scas
(bad)
adc
inc
pop
push
add
lea
or
xor
push
push
add
jbe
ret
xor
(bad)
mov
lahf
push
js
ret
ins
nop
mov
cmp
or
inc
dec
in
push
xor
(bad)
xchg
hlt
call
jbe
call
inc
mov
push
shl
gs
test
cdq
push
xchg
sar
fcom
hlt
add
ret
or
shr
div
addr16
jmp
test
ror
and
xor
nop
or
mov
dec
lods
mov
jmp
adc
jecxz
ror
sbb
and
inc
inc
stos
sub
cs
test
repnz
pop
mov
jo
mov
push
jo
jno
ret
inc
sub
mov
cmp
pop
jo
sub
test
xor
not
and
sub
test
mov
jb
xchg
jl
and
test
hlt
mov
test
mov
jb
xchg
nop
inc
xchg
dec
scas
add
cwde
or
or
pop
sub
iret
fcom
pop
xor
pop
das
fisttp
push
loopne
popa
inc
in
dec
inc
add
ins
mov
sub
dec
push
mov
mov
cmps
loope
(bad)
adc
adc
daa
rol
fadd
inc
mov
push
push
adc
xchg
nop
gs
sahf
dec
mov
leave
and
shl
das
mov
into
ss
dec
jae
pop
dec
ins
pop
push
cdq
pop
add
cmp
iret
(bad)
je
push
pop
inc
dec
aad
nop
les
pop
sub
and
pop
outs
jnp
pop
push
push
fstp
adc
rol
outs
movntps
ret
test
test
in
js
out
xlat
iret
loope
adc
sahf
shl
mov
hlt
mov
add
lods
bnd
xchg
add
sbb
lea
ret
sti
leave
rcl
ret
sbb
adc
ror
int3
lock
push
dec
add
mov
pop
mov
push
sub
sub
pop
mov
sub
add
adc
xor
ds
and
and
arpl
or
outs
xor
cmc
add
sar
clc
dec
mov
or
test
push
and
ret
add
sub
push
and
(bad)
data16
dec
leave
js
or
movs
pop
xor
xor
lods
sbb
mov
xor
pop
add
dec
ins
adc
add
mov
cmp
fisub
pushf
or
outs
xchg
rcl
or
in
adc
xchg
lods
jns
cmp
xor
mov
or
mov
adc
cld
ins
mov
mov
mov
cmp
pop
or
add
inc
pop
push
dec
or
sbb
pop
mov
pop
and
add
data16
aaa
daa
add
push
adc
pop
mov
xor
and
fcmovbe
lahf
fmul
mov
test
fs
xchg
or
xor
jp
cmp
adc
add
sub
icebp
inc
xchg
xchg
add
rol
push
dec
mov
cmps
jg
pop
pop
ss
enter
pop
sbb
pushf
ss
scas
pop
mov
nop
push
inc
pop
inc
sahf
jmp
aam
and
daa
xchg
ror
out
imul
test
cli
add
test
sar
sub
push
push
jno
fwait
in
xchg
aam
xor
call
mov
or
adc
push
add
aaa
xor
dec
or
imul
js
inc
ins
jmp
xchg
dec
mov
push
push
repnz
mov
in
sbb
test
add
mov
push
xor
cmp
not
xchg
push
adc
push
js
ss
sti
fs
rol
jo
inc
push
popa
outs
xchg
sub
mov
retf
dec
jmp
pop
loope
adc
dec
rcl
push
sub
and
in
mul
jp
clc
pusha
or
jnp
jne
pop
sbb
cmps
je
inc
add
ins
dec
aaa
mov
(bad)
mov
popa
xchg
mov
(bad)
aad
adc
mov
fsubr
xchg
mov
pmulhuw
add
shr
pop
lods
test
in
dec
adc
movups
lea
pop
stc
repz
cdq
mov
sbb
cmp
pusha
shr
ja
sbb
repnz
add
mov
mov
or
fstp
sub
adc
movs
ss
pop
xchg
mov
punpckldq
inc
sbb
sub
sbb
dec
sbb
sbb
les
pop
or
sbb
push
or
push
add
add
fdiv
rol
push
or
fcomp
sbb
jo
nop
and
pop
and
sub
lahf
call
dec
and
in
pop
adc
push
pop
call
xor
push
lea
add
sbb
cmp
sub
xchg
sub
sub
cdq
sbb
ins
sbb
cmps
mov
or
or
sub
dec
xor
leave
push
xor
xor
stos
push
push
xor
ss
adc
adc
sub
push
ss
cmp
add
clc
fdivrp
add
sub
dec
aad
mov
add
or
or
loopne
xchg
inc
int
lock
jg
sbb
pop
add
mov
inc
ins
adc
sar
inc
sub
mov
push
fdiv
fdiv
sub
mov
nop
jae
out
cmp
or
iret
fstp
and
cmps
or
hlt
inc
jecxz
pop
pop
dec
xlat
or
daa
or
ins
sub
jle
out
or
add
or
mov
jo
emms
cmp
push
add
aaa
or
mov
xor
or
or
push
js
mov
mov
mov
dec
mov
inc
xchg
sar
inc
xchg
mov
push
fistp
xchg
pop
or
adc
inc
xchg
aas
mov
retf
mov
inc
add
and
xchg
mov
jno
hlt
scas
ins
mov
cmc
add
mov
and
nop
jno
imul
adc
or
and
jo
ror
mov
test
retf
and
xor
nop
lahf
test
(bad)
das
int3
int3
data16
adc
or
sbb
nop
icebp
or
sub
rcl
adc
mov
ficomp
adc
pusha
cmp
sbb
jno
push
sbb
push
mov
and
and
add
adc
add
sbb
inc
and
popf
mov
sub
je
ret
shr
or
inc
pop
add
ss
sbb
jl
les
nop
and
add
mov
or
imul
cmps
adc
and
adc
mov
push
push
cmps
inc
lods
push
out
xchg
mov
inc
cwde
iret
test
mov
cmp
push
sbb
aaa
inc
jl
mov
test
das
adc
sub
jns
adc
je
pusha
inc
push
add
call
mul
add
dec
in
call
or
dec
popa
or
lock
call
and
jb
int
iret
inc
or
cld
imul
pop
cs
pop
inc
jle
sub
xor
adc
xlat
aam
ffreep
inc
repz
mov
shr
xor
les
dec
xor
or
loopne
pop
mov
add
cld
pop
mov
inc
mov
fisubr
sbb
dec
jo
mov
cdq
jbe
retf
adc
scas
sbb
add
out
call
pop
pop
call
sti
das
xchg
test
adc
or
mov
sub
arpl
add
call
enter
movs
add
out
push
mov
dec
in
ins
fcom
outs
cmp
nop
das
ins
aam
cmp
cmps
ror
shl
push
xchg
inc
xchg
push
pop
stos
out
sbb
and
and
inc
fld
leave
push
(bad)
and
adc
adc
sbb
mov
adc
test
push
test
pop
clc
outs
loop
jno
jle
mov
ret
cmps
in
and
xchg
inc
pushf
stos
xlat
and
mov
xlat
cmp
mov
push
lea
add
jo
addr16
cmps
repz
xor
pmulhuw
aas
fsubr
xchg
gs
(bad)
fldcw
and
cmps
lahf
jmp
mov
rol
inc
mov
aaa
xor
fwait
enter
and
sbb
hlt
xchg
push
jne
xor
sub
cmp
sub
sbb
aad
loopne
aas
push
dec
sbb
push
add
adc
add
aaa
and
ror
aad
sub
ret
or
xchg
inc
add
add
xchg
xchg
xchg
fscale
seta
xchg
call
xchg
sahf
lahf
add
add
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
jb
je
xchg
xchg
xchg
xchg
jbe
js
xchg
xchg
xchg
xchg
jp
jl
xchg
xchg
xchg
xchg
jle
pusha
popa
sbb
das
ret
push
mov
out
cmp
(bad)
sahf
out
sahf
xchg
push
mov
jns
out
sbb
adc
or
jl
out
add
cld
rol
js
jo
push
fsub
pop
int3
repz
repz
les
inc
iret
repz
mov
lods
xor
pushf
and
repz
call
fs
out
sahf
call
dec
jns
out
rol
shl
sahf
out
mov
out
sahf
test
mov
lahf
out
nop
add
cld
mov
repz
js
jo
iret
repz
push
int3
jb
loopne
push
pop
sbb
xchg
sbb
adc
mov
xchg
frstor
jae
outs
or
mov
hlt
fisttp
retf
push
mov
mov
out
mov
mov
mov
ja
movdqa
in
addr16
dec
push
enter
fst
fbld
pop
adc
pop
cmp
xor
wbinvd
dec
ins
jno
mov
pop
sbb
add
test
xor
and
push
jne
jo
ror
or
into
mov
mov
or
sbb
shl
adc
and
fs
push
pop
or
out
int3
nop
arpl
dec
ror
rcl
and
cmp
hlt
cmp
or
lock
shl
pusha
adc
dec
das
push
cmp
mov
fld
adc
sbb
push
pop
sub
cmp
mov
inc
cs
aaa
cmp
sbb
ret
push
add
pop
mov
xor
adc
push
add
sub
(bad)
aam
lea
push
mov
jl
cwde
add
sbb
add
cs
nop
mov
sbb
push
add
push
or
jg
aad
mov
pushf
loopne
and
add
dec
push
jecxz
mov
out
dec
dec
xor
push
mov
push
xchg
cmp
or
pop
ret
pop
and
popa
inc
dec
loope
retf
or
push
mov
push
loop
lock
push
pop
inc
jo
lods
mov
push
ja
ins
dec
xchg
xchg
add
mov
not
dec
xor
movs
mov
daa
cmp
or
cmps
sub
mov
or
mov
pop
xor
cmps
mov
jb
dec
rol
or
lods
jnp
stos
mov
call
push
xchg
add
cs
pop
dec
sub
sbb
dec
cmp
xor
out
fistp
mul
fadd
call
retf
shr
jle
sub
add
fdivr
jl
inc
aas
call
add
push
adc
adc
in
hlt
sub
dec
sbb
test
int3
jmp
gs
mov
sbb
adc
loopne
pop
mov
pop
jl
mov
lock
mov
aas
jecxz
cmp
cmp
xor
in
loopne
adc
jns
jmp
inc
lods
xor
xor
push
pusha
mov
ret
pop
cld
out
push
and
repz
inc
sbb
dec
add
xor
nop
movs
retf
push
push
push
sbb
sub
pop
pop
inc
pop
mov
fidiv
push
push
int3
xchg
mov
mov
fadd
shl
cld
push
mov
cmp
rol
mov
add
push
mov
push
dec
or
push
sti
ror
fwait
aam
add
cmp
jno
stos
xlat
pop
push
pop
cmps
test
inc
cmp
adc
loop
les
jne
les
jb
enter
loope
cmp
(bad)
ret
push
inc
hlt
test
xchg
and
adc
neg
sub
mov
sti
fadd
adc
fsubr
int
into
push
sbb
adc
movs
out
aam
loop
push
push
std
aam
pop
imul
daa
stos
les
(bad)
mov
xor
sub
xchg
(bad)
rol
(bad)
xor
fnstsw
cdq
dec
add
and
aam
mov
cmp
(bad)
push
retf
mov
push
std
(bad)
and
jmp
adc
lahf
daa
daa
inc
stos
adc
dec
lahf
inc
push
cmc
movs
sti
cmp
jne
add
mov
cmp
sub
push
lods
inc
xor
out
push
xor
aaa
dec
cmp
xor
ss
test
and
cs
mov
sbb
push
fild
arpl
sub
repnz
lods
xor
lods
mov
mov
in
add
outs
call
(bad)
mov
sar
aaa
or
test
loop
dec
lahf
xchg
add
lahf
mov
fcomp
mov
out
in
sbb
daa
sub
and
push
cmp
fwait
mov
add
icebp
sub
adc
inc
movs
or
test
(bad)
mov
adc
cmp
add
addr16
jno
jg
loop
push
mov
adc
pop
mov
test
retf
jle
adc
xor
add
sbb
rol
or
and
adc
pop
add
xchg
shl
sbb
jle
push
pavgw
or
add
xor
add
sbb
fsub
sahf
out
cmp
out
jo
arpl
mov
push
rcl
mov
popa
xchg
pop
sub
and
xor
imul
neg
sbb
call
cs
push
add
xchg
lods
xlat
sub
pushf
aas
in
out
out
faddp
int3
inc
ds
push
pop
xor
sahf
outs
jns
arpl
or
repnz
xor
jns
inc
xchg
nop
out
enter
movs
out
call
sub
push
cwde
hlt
ret
sub
inc
cmp
js
movs
lahf
add
jmp
push
mov
push
es
adc
(bad)
es
mov
dec
int3
cmc
fwait
mov
(bad)
sbb
cmp
sbb
push
push
cli
mov
addr16
adc
sti
jbe
cmp
pushf
lahf
repz
mov
cld
xchg
push
call
dec
std
dec
mov
add
add
(bad)
fisub
push
or
and
aam
adc
inc
js
scas
adc
pop
pop
sbb
test
add
int
sbb
in
fsubr
jnp
inc
movs
add
outs
and
push
jle
and
out
nop
adc
or
pop
inc
sbb
ins
pushf
dec
hlt
aaa
mov
mov
fist
pop
push
lock
inc
sbb
mov
add
daa
fs
add
push
(bad)
sbb
pusha
and
scas
test
mov
xchg
or
mov
rcl
jg
rcr
bound
inc
scas
inc
and
add
inc
cmps
mov
push
xchg
stos
test
inc
or
or
mov
cmp
lahf
pushw
fs
fbld
clc
cdq
push
outs
adc
xor
call
mov
adc
xchg
sub
pop
push
jns
jmp
clc
adc
push
daa
push
aad
xchg
movs
shl
add
movs
sub
in
fbstp
mov
in
int
in
cdq
je
popa
ins
ins
pop
adc
cwde
push
or
popf
test
loopne
inc
aaa
ror
push
mov
add
xlat
test
dec
adc
inc
mov
ja
sub
and
sub
inc
pop
dec
jbe
and
fimul
jmp
mov
push
xor
popa
push
push
cmps
fisttp
or
jecxz
adc
pop
(bad)
sub
lods
fmul
xchg
(bad)
or
pop
loopne
(bad)
or
pushf
lock
or
inc
or
fdivr
jge
xchg
aad
sbb
lods
mov
sub
sbb
xor
add
sbb
sub
and
and
xor
loop
adc
inc
(bad)
clc
imul
sub
mov
add
jae
xchg
and
imul
pop
push
pop
cs
loope
sub
inc
inc
daa
mov
mov
popf
push
dec
mov
jmp
xor
fcom
adc
aas
arpl
loopne
mov
xchg
bound
(bad)
or
sbb
leave
sub
sbb
jle
sbb
add
test
fwait
push
dec
ja
sub
sbb
std
mov
mov
inc
mov
fmul
mov
nop
sbb
and
xor
add
and
xor
add
dec
xor
or
mov
mov
dec
push
fs
sub
sbb
inc
dec
ret
cmps
push
pushf
add
or
ds
inc
sahf
enter
test
nop
xchg
and
int3
rcl
add
inc
hlt
mov
pmuludq
xor
enter
test
jge
fild
out
sbb
loopne
add
push
seto
and
mov
push
push
push
jne
shl
shl
clc
adc
je
test
push
clc
js
out
xchg
sbb
cmp
aad
dec
aaa
jge
adc
daa
lock
das
add
sub
setno
cmp
or
dec
hlt
cld
adc
jns
mov
push
add
push
test
mov
cld
jmp
sti
push
cmc
xchg
aaa
lods
add
sub
enter
(bad)
dec
or
inc
(bad)
popf
aam
xor
imul
js
mov
sub
sbb
cwde
sbb
mov
pop
jp
mov
mov
imul
adc
nop
xchg
inc
gs
neg
xchg
push
pop
call
push
sar
mov
dec
mov
lods
xor
std
cmp
sbb
sub
test
jge
test
lock
cmp
mov
rcl
sub
or
mov
nop
xor
or
mov
or
mov
test
sub
dec
aam
inc
fdivr
cmp
lds
ror
dec
xor
mov
jb
push
aam
adc
jecxz
pop
add
xor
and
jecxz
push
leave
ret
adc
cmp
mov
sbb
test
ja
mov
jno
xor
stc
xchg
mov
lods
add
in
cmp
jmp
pop
xor
mov
pop
fs
xchg
fistp
dec
adc
sub
or
xor
in
xchg
xor
fsub
(bad)
dec
jmp
mov
jmp
jmp
jbe
sub
lock
test
mov
add
sbb
add
stos
adc
pop
ror
add
and
pop
lock
add
cld
out
clc
hlt
xor
inc
xor
paddusb
pop
leave
or
xchg
fdiv
pop
or
dec
and
dec
and
lods
adc
movs
dec
push
sub
push
test
pop
add
ror
rol
es
out
mov
sbb
or
inc
hlt
mov
add
adc
iret
sbb
test
jmp
gs
(bad)
bound
sti
sub
adc
iret
mov
leave
mov
mov
cmp
or
dec
mov
lds
pop
clc
and
mov
and
in
sbb
outs
push
sbb
dec
or
dec
mov
ja
out
sbb
mov
xor
ins
pop
imul
lods
lock
fwait
sub
jnp
in
fdivr
hlt
inc
fstp
add
adc
cld
test
add
ja
fs
cmps
loop
std
mov
lock
loop
ds
push
fcom
cs
push
xchg
mov
xchg
mov
mov
sub
fild
dec
sub
cmp
cmp
mov
sbb
push
sub
jb
ins
les
enter
movs
(bad)
fcom
adc
pop
inc
sub
dec
inc
fisubr
ins
dec
outs
add
cmp
sti
pop
xor
imul
add
push
push
or
jnp
sub
cwde
stos
pop
retf
add
js
rol
rcr
les
inc
mov
dec
pop
(bad)
xchg
mov
pop
sub
mov
adc
(bad)
cld
and
adc
inc
jbe
in
push
aas
leave
ret
mov
xchg
retf
or
aaa
lock
xor
hlt
dec
add
mov
inc
aas
movs
mov
imul
and
mov
(bad)
jbe
cli
push
arpl
shl
jns
mov
dec
int3
dec
ret
push
pop
and
aad
pushf
out
aas
inc
stos
xor
scas
sbb
push
test
add
inc
cmp
xor
jle
or
shl
and
rcr
imul
push
mov
xchg
movs
dec
mov
push
xor
movs
mov
pushf
or
sub
xchg
add
call
or
sar
leave
fldcw
sbb
xchg
test
pusha
add
mov
sbb
push
sbb
and
lea
sbb
and
and
inc
pop
xor
es
push
fs
push
mov
hlt
sub
nop
xlat
mov
adc
pop
xor
lea
sbb
mov
or
enter
nop
add
mov
fcomp
xchg
mov
or
dec
in
pushf
je
or
test
xchg
icebp
pushf
out
jmp
or
jns
repz
sub
jns
out
jbe
cli
pop
add
repz
mov
iret
fdiv
jns
into
xchg
mov
sahf
out
mov
cs
repz
cmp
ja
mov
pop
push
cs
repz
push
clts
sbb
ss
jnp
iret
repz
std
push
add
mov
fisubr
jecxz
out
fidivr
xchg
xchg
sub
inc
dec
pop
imul
add
sub
sbb
xchg
dec
ret
mov
dec
cmp
mov
push
leave
cmp
mov
retf
daa
outs
(bad)
les
push
out
pop
sbb
movs
jns
and
xchg
pop
ss
outs
add
xchg
mov
fadd
adc
mov
inc
pop
push
push
or
push
inc
push
push
add
adc
inc
push
jbe
push
xchg
dec
adc
dec
add
push
and
and
daa
jns
push
in
and
loopne
dec
enter
shl
and
push
xchg
or
dec
pushf
sub
pop
add
cmp
dec
mov
or
add
push
cmp
adc
outs
sar
in
out
cmp
sbb
test
adc
js
jns
lea
push
nop
xor
mov
push
sub
inc
ret
add
dec
repz
dec
sub
inc
cs
pusha
clc
imul
sub
cwde
or
dec
inc
outs
jmp
or
mov
push
loope
or
sub
daa
fimul
sbb
push
dec
sbb
(bad)
lock
mov
mov
mov
call
fcom
mov
add
jb
xor
cmp
pop
push
add
loopne
imul
jge
push
cmp
in
pop
mov
call
nop
mov
adc
lahf
cmp
push
ret
cmp
and
movs
and
dec
mov
pop
add
inc
sub
aaa
and
xchg
leave
push
dec
je
(bad)
sub
adc
inc
jl
adc
jg
add
mov
mov
pop
ja
adc
cmps
mov
pop
pop
in
dec
mov
adc
rol
les
inc
addr16
xor
test
inc
inc
and
add
xchg
inc
add
mov
sbb
add
cmp
dec
xchg
sbb
adc
add
adc
adc
or
xchg
nop
dec
push
inc
push
pop
jb
mov
inc
and
and
js
add
mov
in
out
jl
jl
jmp
jo
sbb
push
push
aaa
xchg
push
mov
pop
rcl
pop
fwait
test
aaa
push
cmp
sysexit
add
sbb
lock
mov
xchg
scas
push
sbb
jb
call
jmp
test
ret
ret
add
add
inc
inc
(bad)
out
add
sar
les
mov
pusha
inc
jge
and
ins
push
push
clc
sbb
add
mov
test
xchg
add
mov
inc
(bad)
and
repz
arpl
add
call
jno
cmp
(bad)
movhps
cmp
sbb
pusha
cmp
sbb
dec
push
in
sysret
fdiv
jae
adc
mov
leave
cmp
push
std
les
inc
mov
stos
xchg
dec
push
or
or
push
add
push
xchg
adc
and
cmp
sbb
inc
mov
neg
inc
pop
or
and
xchg
add
imul
and
popa
cmp
cmc
jmp
lea
xor
inc
pop
pop
cmp
push
jno
dec
push
mov
jae
sub
adc
and
aaa
xchg
dec
cmps
sub
inc
or
xor
push
mov
pop
cmp
cmp
push
adc
mov
push
cmp
add
sti
push
arpl
or
lods
sub
push
ja
out
nop
sub
or
std
add
add
or
add
push
int
inc
xor
dec
mov
popa
stos
mov
or
push
and
sub
arpl
pop
push
cmps
lock
xor
rcl
aam
xchg
lock
pop
mov
push
retf
mov
or
(bad)
int
pop
push
push
sub
mov
dec
xor
ror
and
or
xchg
push
xlat
pop
wrmsr
(bad)
not
inc
mov
add
sub
push
inc
inc
push
xchg
ins
lods
shl
test
or
add
pop
sbb
addr16
adc
jl
mov
sub
(bad)
xor
inc
and
push
mov
pop
adc
clc
push
xchg
jo
mov
test
test
imul
xchg
addr16
call
mov
mov
adc
sub
add
xor
imul
inc
dec
inc
and
loope
stos
jo
dec
inc
inc
pop
(bad)
lock
sar
sub
sub
or
inc
inc
daa
dec
imul
mov
imul
pop
push
or
mov
xor
mov
stc
adc
test
in
mov
adc
shl
mov
call
retf
and
pusha
sub
sbb
mov
push
daa
fs
adc
sub
xor
mov
fisttp
(bad)
nop
pop
mov
push
dec
jge
and
xchg
cdq
sbb
sub
rcr
mov
push
in
out
sbb
xor
mov
inc
sbb
fcomp
adc
dec
add
add
or
(bad)
pop
push
jle
inc
mov
sbb
pusha
pop
sti
aaa
add
lods
or
es
stos
mov
jbe
dec
ja
out
jl
xor
xchg
adc
mov
mov
aaa
mov
clc
das
and
add
xchg
dec
aaa
push
mov
(bad)
pop
xor
jp
mov
inc
test
jmp
push
mov
idiv
lock
(bad)
call
mov
xor
call
je
inc
cmp
jne
(bad)
inc
pop
bnd
push
cmp
mov
push
push
fsubr
sahf
adc
xchg
stos
fs
dec
cli
clc
je
add
mov
ret
pop
imul
adc
fld
add
or
pusha
pop
and
in
or
nop
das
cwde
dec
lods
dec
lahf
cmp
add
sbb
ror
loop
lods
mov
nop
sub
in
imul
adc
xor
inc
sbb
aaa
out
or
or
scas
adc
jecxz
adc
mov
inc
and
xor
out
lds
cmp
and
in
hlt
gs
and
test
add
addr16
add
loop
dec
inc
shr
mov
cmps
sti
adc
and
sbb
sub
mov
add
lock
dec
or
push
inc
add
push
inc
popa
or
cmc
sbb
outs
add
popa
adc
inc
pop
adc
pop
or
ja
lahf
push
xchg
and
pop
retf
les
nop
sbb
cmc
sub
mov
xchg
pop
leave
enter
mov
sub
sbb
xor
ins
sbb
xor
sbb
sbb
dec
dec
imul
push
fcmovne
hlt
jne
mov
in
push
call
xchg
les
lea
mov
cmp
cmc
add
ja
mov
add
xor
add
dec
jne
stos
sbb
push
or
mov
pop
cld
sub
add
cmp
sbb
je
lea
imul
shr
fimul
mov
dec
jle
ret
xor
lea
or
mov
int3
jg
adc
and
pop
or
ds
aam
test
sbb
ins
aam
aam
and
fstp
push
clc
or
jno
sahf
fadd
mov
(bad)
movs
and
in
test
add
inc
xchg
and
cmp
jl
sbb
imul
fsubr
and
mov
fisttp
push
inc
add
retf
xor
(bad)
cli
cmps
or
sbb
jmp
nop
outs
mov
pop
add
xchg
retf
pop
pop
or
jmp
outs
fadd
jmp
push
and
sub
mov
imul
loopne
pop
adc
or
aam
push
push
or
xor
sbb
and
adc
in
jle
add
jne
loopne
stos
and
mov
das
sbb
jae
(bad)
jne
test
adc
lock
iret
adc
ret
nop
mov
ds
sbb
push
(bad)
int
(bad)
pxor
and
add
lea
inc
fidivr
push
mov
pop
jnp
jle
inc
repnz
add
sub
push
data16
xchg
daa
test
jne
mov
inc
test
stos
ds
hlt
push
inc
ror
pop
je
push
mov
lock
cmp
and
pop
test
sbb
mov
or
ffreep
xor
sub
push
xchg
shr
pop
mov
loopne
adc
add
push
adc
sbb
cmp
xlat
cmp
stos
push
sub
lea
push
pop
enter
cmp
and
cwde
push
adc
inc
ror
cmp
mov
pop
dec
pop
mov
and
xchg
pop
adc
mov
movs
fwait
movs
movs
or
(bad)
retf
icebp
(bad)
push
jo
jae
sub
sub
daa
pop
mov
imul
and
adc
jl
mov
jno
jae
push
pop
sbb
and
(bad)
bound
mov
mov
ss
test
aas
inc
xchg
iret
(bad)
xchg
cdq
mov
mov
sbb
aas
js
xor
(bad)
adc
pop
mov
inc
pop
adc
add
sub
pop
push
cmp
add
imul
jne
aad
mov
les
imul
aam
cmc
add
inc
add
sbb
push
scas
cli
pop
sti
adc
ret
xor
or
xchg
fisubr
or
je
sbb
inc
jb
push
lea
add
pop
sbb
clc
xor
out
add
cmp
jo
(bad)
out
cld
push
mov
xchg
xchg
add
add
inc
xchg
das
and
sbb
ret
mov
add
inc
mov
pop
adc
sbb
ror
ss
imul
(bad)
adc
sbb
fisttp
ins
pop
add
sbb
add
inc
inc
shr
sbb
cmp
add
pop
inc
aad
sbb
or
call
inc
scas
test
and
cmp
cmp
call
mov
and
mov
xor
add
popa
retf
mov
adc
data16
in
jge
inc
mov
cmp
mov
or
mov
jne
cld
in
push
mov
movs
arpl
sbb
push
data16
and
or
pop
icebp
aas
fs
push
dec
inc
adc
cld
jge
inc
enter
and
jmp
shr
call
sub
and
xchg
mov
rcl
mov
mov
xchg
popf
lea
or
loopne
cwde
and
mov
pushf
in
mov
sub
das
retf
xor
fdivr
cmp
sub
push
push
stos
or
(bad)
fild
sbb
test
les
or
lock
pop
bound
mov
sub
and
das
adc
pop
mov
and
in
xor
mov
das
adc
daa
mov
pop
pop
inc
jnp
rcr
adc
pushf
push
mov
mov
mov
mov
push
inc
scas
call
add
add
and
dec
repnz
(bad)
and
into
xlat
push
jg
mov
pop
pop
imul
cmps
xor
adc
push
sub
fs
in
cmp
sbb
cvtpi2ps
(bad)
call
jo
sbb
das
aad
cs
ds
aam
addr16
sub
lods
das
push
call
xchg
and
fbld
jb
adc
ins
sub
movs
xor
add
bound
pop
outs
mov
xor
lock
xor
pushf
cmp
movs
std
icebp
loope
adc
cmp
dec
ret
cmp
push
div
hlt
mov
fcmovnb
or
inc
inc
jmp
je
outs
push
sub
cmp
inc
push
jge
ficom
inc
xchg
fnsave
pop
jmp
movs
outs
and
lods
dec
rol
sub
sbb
push
and
add
inc
lock
pushf
aas
pop
sbb
cld
add
adc
and
pop
add
ins
fwait
xlat
add
pop
loope
sub
pop
je
pop
xor
or
iret
pop
xor
leave
pop
movs
je
mov
adc
jnp
movs
scas
inc
lods
sbb
or
jg
leave
inc
(bad)
push
sub
push
add
push
cmp
xchg
dec
cmp
pop
ins
adc
cs
and
(bad)
adc
mov
adc
mov
and
call
dec
in
push
movs
and
dec
push
or
shr
jo
inc
(bad)
fld
and
adc
outs
mov
pop
cmp
sbb
pop
dec
pop
push
push
push
das
sbb
fild
leave
mov
in
es
xchg
xchg
dec
sbb
popa
and
cmp
add
push
push
pop
and
dec
daa
jb
cdq
jmp
bound
mov
stos
add
push
dec
js
dec
icebp
dec
sbb
and
test
clc
jo
cs
inc
loop
and
xlat
pop
ja
bound
arpl
lds
pop
stc
mov
inc
(bad)
scas
enter
popa
mov
shr
add
test
in
jae
add
or
jp
ins
cmp
push
mov
enter
jb
push
adc
cmp
mov
into
ins
shl
jo
pop
in
mov
adc
daa
aaa
push
add
hlt
dec
push
je
add
in
mov
dec
mov
hlt
add
jne
(bad)
cmp
sub
retf
cmp
popf
and
mov
pop
add
mov
dec
pop
pop
mov
mov
push
push
add
mov
mov
sub
mov
out
jnp
mov
lea
push
xor
test
jmp
jmp
or
dec
ins
pop
loope
clc
in
cmp
push
shl
sub
lock
or
in
in
pop
adc
stc
and
daa
add
or
add
mov
dec
sub
daa
or
test
imul
inc
push
xchg
and
adc
or
adc
sbb
movs
out
xchg
fwait
jmp
adc
inc
xor
xchg
push
xchg
xor
fs
inc
jbe
jg
loop
inc
add
or
rcl
call
cmp
push
ret
or
inc
cvttps2pi
dec
xor
pop
mov
imul
dec
xor
cmps
stos
adc
sbb
sbb
lods
stos
add
mov
pop
xor
adc
out
add
pop
ins
movs
imul
sub
sub
ret
pop
ror
popf
mov
js
adc
sub
mov
clc
sbb
jmp
or
sbb
add
fld
mov
sbb
dec
and
sub
mov
mov
xchg
pop
or
or
mov
push
mov
xor
stc
pop
cmpxchg
imul
fstp
test
lea
inc
xchg
pop
push
stos
and
daa
outs
mov
loopne
(bad)
or
test
daa
dec
das
ret
or
xor
push
pop
jp
add
shr
icebp
add
xor
shl
dec
call
or
test
es
dec
dec
popa
push
call
pusha
ss
push
ins
lahf
jmp
mov
add
adc
pop
adc
jg
fwait
(bad)
pusha
mov
push
add
add
adc
add
movs
or
jne
shr
and
adc
or
retf
fstp
inc
sbb
ja
iret
repz
out
xchg
push
scas
mov
repz
in
push
pop
dec
xor
fcompp
mov
cmps
dec
mov
outs
mov
and
arpl
je
idiv
inc
stc
dec
sbb
cmp
xor
mov
mov
add
xor
or
sub
dec
fwait
and
push
or
outs
and
jo
sub
ja
adc
pushf
mov
test
mov
repnz
leave
int3
je
pop
xor
popf
jmp
pop
mov
add
adc
jnp
adc
mov
mov
inc
out
test
fsub
cmp
sbb
mov
fidiv
mov
ja
retf
test
shl
xchg
jae
xchg
cmp
call
or
popa
pusha
xchg
xchg
nop
out
lahf
mov
xor
enter
hlt
(bad)
stos
or
inc
inc
xchg
data16
push
xor
(bad)
dec
cmps
test
movs
aaa
out
mov
or
sbb
dec
mov
pop
xchg
mov
addr16
add
mov
leave
dec
jne
shl
xchg
mov
or
fdivr
in
push
in
out
push
data16
repnz
(bad)
cmp
xchg
(bad)
mov
pop
aaa
daa
sbb
push
lods
leave
pop
jns
dec
add
and
fcmove
fiadd
or
or
adc
mov
dec
mov
dec
cdq
and
xchg
movs
push
jo
or
dec
add
clc
push
dec
dec
mov
stc
jg
sub
push
push
xor
xor
into
or
dec
push
inc
push
xchg
adc
or
(bad)
mov
imul
movs
cmps
xor
mov
je
ins
push
inc
addr16
sar
xor
inc
sub
retf
rcl
mov
jo
ja
mov
add
imul
dec
xlat
loopne
sub
mov
add
xlat
outs
rcl
sbb
or
js
int
call
xchg
and
paddsb
aas
in
dec
push
in
pop
outs
lock
pop
mov
add
cmp
sub
shl
xor
scas
dec
in
xor
mov
push
inc
inc
adc
push
je
(bad)
and
js
cmps
jne
mov
push
rol
or
dec
push
fsub
jnp
pusha
push
adc
(bad)
pusha
sbb
ret
sbb
inc
(bad)
aad
and
add
add
push
mov
jmp
pop
xor
and
add
sub
sbb
popa
iret
fisttp
push
lahf
xchg
ret
mov
test
sbb
pop
fisttp
mov
jmp
lock
mov
ins
popa
jle
mov
adc
cs
jno
xor
pop
xor
nop
cmp
push
dec
and
ja
inc
mov
lahf
mov
mov
ret
cmps
push
mov
sbb
jnp
push
hlt
pusha
add
cmp
neg
das
dec
pop
or
or
dec
adc
add
(bad)
sub
inc
sub
mov
into
mov
jp
mov
mov
jo
rcl
sub
aad
xlat
data16
dec
cmp
in
push
sub
mov
pop
aas
push
add
gs
pop
sub
pop
adc
adc
das
inc
ret
js
jp
xchg
or
mov
js
aas
xor
xor
wrmsr
mov
mov
ins
ret
mov
sbb
and
xor
mov
nop
inc
hlt
add
cmp
cmp
addr16
ret
cmps
dec
hlt
dec
fmul
push
inc
mov
xchg
cs
gs
cld
push
fadd
gs
shr
jmp
jmp
pop
scas
or
in
pop
pop
fcomp
ja
out
mov
xor
mov
add
xor
test
or
cld
out
pop
xor
scas
int
adc
xor
leave
loop
imul
hlt
data16
push
adc
xchg
jg
js
test
jb
data16
add
mov
shr
sti
mov
add
sahf
mov
leave
sbb
test
outs
fwait
add
mov
adc
mov
push
add
sub
je
(bad)
lods
sbb
jno
xlat
or
mov
pop
dec
stos
push
int3
cmps
mov
addr16
int
adc
adc
xor
inc
rcr
push
pop
inc
daa
and
and
aas
xchg
or
inc
rcl
sbb
push
call
xor
test
xor
mov
(bad)
fist
add
dec
(bad)
push
dec
adc
xor
add
aaa
pusha
daa
jecxz
cmp
sub
xor
je
cmp
sbb
push
or
mov
rcl
icebp
cwde
cmp
inc
lock
jo
loope
xchg
mov
adc
fxch
xor
stos
ins
les
xchg
sbb
stos
test
lds
js
adc
outs
cmp
movs
jae
ins
xchg
and
add
jle
xor
scas
inc
dec
push
push
popa
(bad)
xor
in
push
sub
or
xchg
inc
popa
and
fs
push
cdq
clc
nop
pop
fimul
cmp
mov
push
ins
cmp
or
cmp
lock
jbe
mov
add
push
jmp
pushf
push
dec
js
push
movs
aaa
mov
pusha
sbb
jg
and
ror
cmps
or
out
sub
mov
mov
test
xlat
push
nop
stos
mov
cmp
or
adc
sub
adc
adc
scas
push
or
ret
cdq
push
pop
add
sbb
cwde
sbb
lock
ret
xor
rcr
sbb
call
test
enter
jno
cld
sbb
and
ror
sbb
aad
cmp
sub
xchg
xchg
push
inc
dec
jmp
loope
es
pop
data16
mov
daa
sahf
inc
adc
icebp
leave
rol
and
adc
xor
cmp
fs
daa
and
adc
mov
or
imul
push
sbb
daa
dec
sub
loop
xor
dec
and
xor
xchg
inc
add
cmc
mov
sbb
or
es
movs
or
pop
jo
push
bound
adc
push
js
sub
push
movs
mov
pop
enter
sub
pop
pop
xchg
sbb
lods
adc
popa
loop
mov
ret
push
ficomp
jno
mov
sub
jb
pop
outs
push
dec
cwde
mov
sub
fdiv
test
call
mov
out
popf
test
mov
xchg
xor
cmp
jecxz
jg
lea
popf
retf
dec
mov
mov
and
bound
idiv
or
lea
call
xor
hlt
inc
rcl
test
xor
retf
in
cmp
inc
fcomp
xor
ja
push
cmp
out
sbb
pop
ror
push
sub
repnz
nop
cmps
loop
dec
mov
lock
sahf
mov
mov
xor
or
mov
and
data16
pop
add
or
xchg
sar
into
mov
das
lock
addr16
or
in
jg
xlat
inc
retfw
ret
in
in
dec
or
pusha
in
fdiv
adc
fmul
aam
gs
hlt
stc
ds
ins
and
adc
adc
adc
inc
inc
ins
shr
imul
imul
pop
dec
(bad)
adc
jmp
xlat
stos
es
enter
(bad)
add
mov
lock
push
adc
mov
mov
or
mov
push
loopne
test
xor
mov
xor
jno
xchg
leave
test
movs
retf
stos
and
inc
inc
mov
xchg
push
out
cld
cmp
sbb
xor
ja
xor
sub
clc
adc
(bad)
ins
and
sub
adc
out
popa
push
pop
push
push
pop
dec
jle
in
fist
out
imul
sbb
jp
clc
jle
push
add
push
aam
mov
mov
push
out
loop
push
stc
test
imul
mov
mov
rep
push
das
mov
cmp
pusha
add
fild
fsub
out
retf
aam
add
rcl
inc
int3
cmps
(bad)
push
scas
pop
mov
(bad)
or
sub
sub
push
les
mov
adc
mov
xor
add
jno
xor
xchg
sbb
dec
or
adc
mov
sti
cmp
sub
jne
jmp
in
movs
cs
aam
mov
mov
jmp
(bad)
jmp
call
inc
sahf
inc
enter
in
fstp
adc
adc
or
scas
xchg
out
mov
shr
icebp
lds
adc
into
add
push
into
jg
lods
mov
retf
stos
adc
shl
loop
lods
(bad)
out
add
aad
inc
gs
mov
jecxz
pusha
mov
add
mov
sbb
adc
xchg
scas
inc
inc
lahf
js
loop
cld
je
pop
mov
adc
and
jo
push
push
(bad)
jo
or
adc
loopne
jp
sbb
ret
iret
inc
xchg
lahf
jmp
push
or
(bad)
nop
sbb
lods
add
dec
pop
inc
lahf
lock
add
push
or
mov
mov
sbb
in
aad
nop
bound
adc
int
aaa
ds
rcr
lds
add
retf
mov
cmc
add
loopne
push
jns
scas
sbb
add
loope
fcom
repz
jbe
cmp
or
ins
scas
adc
sbb
lahf
mov
and
sub
inc
dec
or
mov
mov
mov
mov
shl
add
mov
inc
push
pextrw
scas
mov
dec
test
div
xchg
push
push
clc
cmc
sbb
cmc
inc
adc
and
xchg
jmp
adc
cmp
cbw
jno
adc
movs
lock
add
cwde
adc
mov
out
push
adc
mov
popa
jnp
push
lock
mov
(bad)
pop
mov
add
jo
(bad)
shr
(bad)
adc
adc
inc
dec
inc
sub
mov
sub
pop
in
mov
mov
sbb
inc
(bad)
js
or
adc
and
imul
dec
(bad)
scas
jp
dec
cmp
ror
fiadd
in
bound
xor
ds
jge
or
jbe
adc
outs
ficom
push
mov
xchg
icebp
sub
and
push
mov
cmp
xchg
pop
ret
addr16
sbb
push
ins
xchg
movs
or
mov
test
stc
sub
dec
xor
out
(bad)
mov
out
adc
cmps
lahf
in
push
dec
add
loopne
push
dec
rcl
clc
cld
adc
in
sti
push
xor
imul
lds
(bad)
and
mov
popa
(bad)
and
xlat
data16
pop
rcl
pop
std
cli
mov
adc
inc
pop
mov
or
sub
cmovp
arpl
push
adc
pop
out
les
popf
dec
sbb
scas
fsubr
enter
ja
iret
sbb
or
inc
js
push
lock
dec
push
add
push
popf
adc
ror
fdivp
lock
lock
lods
pop
sub
pusha
rol
pop
adc
mov
dec
mov
jmp
xchg
sbb
add
imul
sbb
xchg
push
lods
mov
call
in
out
in
adc
mov
or
push
test
nop
or
ins
or
cwde
xor
(bad)
jne
and
mov
clc
mov
sbb
inc
and
adc
bound
push
cwde
adc
shr
xchg
lahf
lahf
(bad)
push
clc
mov
hlt
vandps
call
jno
xor
fdiv
mov
nop
sbb
sbb
(bad)
pop
push
adc
scas
mov
test
xor
and
xor
ins
in
dec
mov
jno
push
xor
dec
and
xchg
pusha
je
sbb
adc
or
js
ret
cmp
sub
add
jge
out
push
pop
push
sub
ins
adc
mov
mov
add
add
adc
add
mov
rsqrtps
mov
test
mov
lea
sub
jbe
mov
add
popa
jge
dec
jg
clc
sub
jb
jb
inc
add
xor
jnp
lds
pop
adc
xchg
dec
pop
xor
popf
add
lahf
pushf
add
jns
cmp
mov
xor
mov
clc
lods
jbe
mov
mov
or
sub
xchg
push
dec
dec
test
ins
loop
dec
push
push
lods
ja
aas
or
bound
mov
movs
mov
or
or
sub
cwde
sti
std
jns
xchg
xchg
cmp
ss
pop
add
inc
adc
icebp
dec
pop
pop
xchg
xchg
jo
and
dec
sbb
pop
inc
or
jnp
fwait
cld
movs
test
mov
push
adc
sti
test
jb
je
aas
add
mov
add
sbb
or
leave
pop
mov
mov
mov
or
mov
ja
cmp
add
add
or
dec
sbb
sub
or
ins
or
mov
lock
push
cmp
jb
push
out
sbb
and
dec
inc
inc
push
or
jnp
push
cmp
nop
dec
leave
rol
shl
inc
inc
cmps
push
dec
repz
jne
cmp
lock
jnp
inc
leave
enter
jbe
xor
inc
iret
add
ins
ds
lea
popa
jo
sbb
pop
mov
pop
mov
lea
in
pusha
or
add
nop
loopne
pop
enter
jb
mul
jecxz
sbb
and
push
mov
popf
adc
and
pop
and
or
mov
mov
test
in
enter
mov
and
jo
rol
out
mov
cmp
aas
jbe
lock
leave
enter
in
call
ret
ins
shl
mov
sub
dec
lods
out
and
and
jae
and
stc
push
ins
ss
fmul
jmp
and
push
retf
sub
pop
dec
push
mov
icebp
mov
mov
out
shl
shl
lods
retf
and
cmc
movs
les
movs
shr
(bad)
add
sar
or
rcr
mov
pop
xchg
cmp
ja
pushf
or
mov
(bad)
test
mov
or
mov
mov
sub
(bad)
dec
xlat
and
mov
lods
call
sub
test
sbb
and
enter
clc
(bad)
xlat
ins
xchg
xchg
or
cwde
pushf
out
iret
js
add
sbb
mov
out
mov
jae
mov
adc
sub
fs
push
jge
or
fs
fs
push
dec
je
jl
add
mov
loopne
cmp
fnstenv
push
cmp
jnp
mov
scas
xchg
inc
adc
stos
mov
ror
or
or
cmc
add
rcl
out
or
pop
and
popf
and
add
push
or
cmp
xor
xor
xor
and
cmp
jnp
ret
enter
sub
mov
xchg
adc
mov
inc
and
out
push
adc
xchg
mov
adc
movs
or
sbb
add
aaa
mov
icebp
mov
pop
mov
or
mov
mov
(bad)
lock
scas
lods
in
in
movs
sub
in
popf
mov
popf
out
ins
loopne
in
(bad)
adc
sub
mov
lds
out
ins
js
fs
enter
pop
or
add
or
adc
(bad)
in
sbb
mov
in
jbe
jecxz
jmp
shl
inc
lods
jecxz
push
sbb
mov
les
push
clc
imul
rcl
ins
aas
push
inc
jb
xchg
push
aaa
push
sub
inc
add
sbb
enter
aad
add
push
adc
xchg
jns
lahf
aam
mov
xor
les
mov
lahf
xchg
adc
shl
xor
movs
mov
sbb
test
imul
imul
enter
(bad)
ret
mov
jae
movs
push
push
dec
jb
leave
push
popa
stos
test
inc
push
add
outs
clc
daa
xchg
add
pop
pop
jge
cld
mov
push
adc
pop
cmp
stos
cmp
dec
or
mov
lock
or
add
cmp
aad
xor
and
pop
ja
jbe
push
es
pusha
pusha
sub
mov
test
test
push
push
ror
push
leave
cmc
pop
or
lock
xchg
jo
lock
sub
das
sahf
or
cmp
xor
(bad)
shr
add
mov
lea
inc
xchg
ins
cwde
cmp
movntq
out
ins
sub
or
jbe
lods
pop
jo
das
out
dec
jb
and
imul
sbb
dec
bound
or
out
lods
push
or
push
sub
mov
movs
pusha
sub
push
and
ffreep
mov
ss
aam
and
test
fadd
retf
push
push
jl
pop
add
jecxz
(bad)
mov
xchg
mov
mov
aad
mov
pop
xor
cmp
inc
je
mov
xlat
ret
cmp
xor
test
jo
push
and
sbb
outs
sbb
stc
xchg
stos
push
xchg
jno
out
leave
imul
dec
or
dec
repnz
mov
popa
rcr
lods
in
xor
loope
leave
mov
sub
mov
mov
add
mov
mov
mov
test
out
outs
call
dec
jmp
lea
movs
push
dec
in
cmp
hlt
cmp
cmc
nop
dec
inc
inc
cmp
push
cmp
adc
daa
xchg
adc
popf
add
lods
and
pop
push
and
cmps
add
inc
daa
and
mov
stos
test
cmp
(bad)
inc
xchg
xlat
cmp
adc
mov
repz
mov
sbb
push
add
dec
adc
in
pop
cmp
push
or
or
jecxz
aad
ror
imul
add
cmp
push
popf
in
cmp
scas
add
pop
ffreep
stos
add
test
cmp
jo
imul
aad
mov
jns
xchg
dec
pop
or
mov
es
pop
aad
pop
and
push
(bad)
in
sbb
cmp
and
in
mov
in
and
mov
test
lods
jecxz
sub
dec
dec
sbb
test
cmp
in
inc
add
push
add
add
cdq
mov
push
rcl
push
rcl
push
mov
jmp
xor
add
sbb
jbe
test
call
ret
imul
cdq
ins
(bad)
pop
cld
fcomp
fs
mov
test
shr
and
sub
syscall
or
dec
add
imul
pop
inc
fwait
es
or
jo
unpcklps
pop
pop
mov
inc
js
push
int3
xor
jnp
adc
cmp
push
in
ins
stc
nop
mov
ror
sti
nop
and
adc
scas
and
ss
scas
jo
adc
(bad)
mov
adc
ret
jl
mov
pop
mov
adc
xchg
retf
fwait
xor
sbb
pop
inc
and
popf
lock
imul
mul
loope
or
inc
clc
add
mov
pop
jg
popf
ins
sub
cwde
enter
push
fidivr
sbb
je
or
add
push
jle
and
dec
and
(bad)
mov
sbb
and
add
loop
mov
add
ins
or
fdiv
or
xchg
fst
(bad)
and
stc
mov
or
or
push
xchg
xchg
or
mov
fs
push
icebp
outs
push
lahf
mov
dec
pop
in
xchg
or
pop
mov
call
mov
test
pop
sub
xlat
add
in
lock
in
jne
mov
jb
fnsave
cli
mov
mov
mov
and
dec
cdq
icebp
sahf
push
dec
retf
imul
cmp
mov
cdq
push
enter
pop
jmp
or
mov
and
add
cs
adc
add
sub
sub
adc
test
dec
xlat
les
or
adc
and
or
aaa
leave
adc
mov
sbb
push
aas
add
retf
mov
push
test
maskmovq
idiv
jmp
nop
or
push
sbb
les
loop
fwait
ror
mov
and
(bad)
ins
mov
sbb
sbb
push
mov
arpl
or
in
je
daa
ins
rcr
cwde
and
mul
pop
add
and
loopne
ins
call
inc
inc
je
push
cmp
cmps
add
sub
(bad)
js
add
enter
out
retf
in
inc
jo
mov
fsub
cmp
lock
ret
leave
shl
loope
sbb
add
enter
jns
and
jne
push
pop
gs
outs
shl
cmps
leave
or
xchg
inc
imul
pop
add
inc
sbb
shl
or
jge
and
adc
jmp
inc
lock
(bad)
cld
mov
xchg
push
mov
push
push
nop
clc
aaa
call
add
rcr
pusha
and
retf
cmp
mov
adc
cmp
fcomp
or
cli
call
cdq
inc
jne
sub
fist
cmc
dec
sbb
or
cmp
sar
sub
pop
inc
sbb
jnp
pop
sbb
pop
sbb
add
jnp
add
or
movs
sub
or
movq
jl
or
or
adc
or
jle
(bad)
mov
mov
mov
or
fidiv
push
dec
push
ret
test
imul
lock
adc
shl
dec
push
mov
(bad)
pop
add
push
dec
push
es
ret
inc
iret
and
xchg
inc
ds
arpl
adc
inc
inc
cmp
add
cmp
dec
jl
jbe
mov
sub
sbb
ds
pop
ins
cs
add
and
mov
push
or
test
mov
mov
scas
cmp
imul
outs
mov
ss
xor
call
loope
sub
mov
push
jmp
outs
adc
add
add
xchg
aad
sbb
xor
lea
or
mov
sbb
cmc
clc
mov
into
push
push
aam
rol
mov
fs
sti
call
mov
or
xchg
adc
sbb
mov
movs
pushf
or
jns
outs
pop
push
and
mov
loop
add
je
ss
cmp
dec
jae
js
mov
adc
and
(bad)
icebp
adc
aam
mov
jle
add
popa
ja
jmp
sub
jmp
fidiv
pop
or
cmp
sub
stc
shr
jbe
adc
push
sub
pushf
test
ins
pop
ficomp
push
je
dec
add
dec
or
mov
in
fdivr
cmp
cmp
add
popf
sbb
ja
das
xor
and
push
inc
jp
adc
out
fstp
jmp
pop
outs
dec
inc
loopne
fnstsw
dec
inc
cmps
cmp
mov
adc
adc
pop
(bad)
pop
dec
adc
ss
mov
xchg
sbb
and
adc
dec
xor
push
aas
ss
cmp
sub
dec
xchg
pop
add
pop
ins
dec
jne
les
daa
in
test
add
enter
pop
cmp
(bad)
mov
(bad)
es
pop
jp
das
mov
pop
ret
xor
loope
or
mov
sbb
mov
pusha
push
sbb
mov
add
repnz
push
push
mov
sbb
iret
xor
xchg
mov
fwait
nop
jns
jp
inc
shl
add
pop
mov
push
sbb
les
xor
or
adc
call
test
loopne
cdq
sbb
cdq
ds
lods
rcr
loopne
loope
jl
or
mov
sbb
pop
or
lea
dec
inc
xchg
adc
leave
inc
cld
call
xchg
and
mov
push
ins
cmp
push
sbb
loope
add
jns
pop
mov
mov
dec
add
data16
jo
jbe
mov
mov
lea
sub
enter
jle
je
fsubr
dec
outs
ret
icebp
mov
jp
(bad)
push
movs
(bad)
sbb
adc
inc
adc
loope
das
xchg
mov
jmp
pop
inc
xor
hlt
std
pusha
add
or
cmp
lea
lock
cmp
mov
scas
cmc
xchg
push
push
fild
jae
xchg
adc
jecxz
icebp
mov
inc
inc
sbb
jbe
xchg
or
pusha
fucomp
scas
mov
dec
scas
add
cmc
inc
mov
inc
adc
dec
sbb
xlat
cmp
adc
jecxz
test
fimul
push
in
out
pop
cmp
mov
loope
add
pop
push
jge
cmp
jge
adc
stos
cmp
inc
adc
sub
pop
rcl
push
call
das
ror
push
mov
xchg
cmp
or
pop
fmul
sti
ror
mov
mov
sbb
sbb
mov
pop
setne
mov
or
dec
push
xor
iret
shl
(bad)
adc
leave
jbe
into
add
addr16
dec
push
or
mov
mov
pop
clc
cdq
sub
ja
and
adc
mov
mov
dec
mov
pop
xchg
inc
push
fmul
push
cli
(bad)
xchg
xor
shr
aaa
inc
mov
cs
or
adc
sub
fwait
inc
je
adc
or
imul
stos
cmp
dec
push
punpckhwd
and
loopne
xchg
cmp
lds
sbb
fcom
scas
es
data16
aaa
fwait
aad
loopne
and
jecxz
shl
or
shr
daa
mov
pop
or
shl
cmp
rcr
iret
or
jne
pop
test
lock
dec
out
pop
and
mov
and
fs
rol
pop
ss
pop
mov
dec
add
mov
dec
cmp
test
mov
arpl
js
stos
add
pop
xor
bound
jmp
mov
enter
pop
mov
mov
loopne
inc
out
pop
and
ret
stos
rol
jns
xchg
cmc
ret
sub
jnp
cmps
cmp
inc
inc
js
push
add
xchg
pop
mov
pop
inc
xor
xchg
dec
enter
fisttp
or
or
js
cmc
inc
push
vprotb
dec
fadd
std
popf
cmp
clc
stos
push
mov
push
mov
in
ror
icebp
or
(bad)
jb
pop
push
ror
add
in
mov
and
sub
pop
lahf
push
xchg
movs
lock
or
test
or
mov
arpl
or
mov
sub
data16
mov
sub
mov
push
aas
pop
and
or
push
cmove
in
add
ja
dec
jne
adc
pop
sub
push
and
push
sbb
push
adc
inc
inc
jl
push
mov
push
adc
cmp
int3
add
pusha
and
test
push
jb
fwait
or
imul
inc
adc
fcmovne
dec
jle
jbe
rcl
cmps
retf
lds
and
pop
xor
inc
jle
mov
data16
xor
adc
pop
cmp
and
cmc
cmp
retf
inc
pop
jecxz
push
sub
mov
push
sbb
sub
adc
jae
daa
pusha
pop
sub
stos
jmp
cmp
xor
sub
out
pop
push
sub
sbb
inc
push
dec
xor
adc
aas
in
sbb
addr16
inc
jle
add
test
inc
data16
add
xor
pop
sahf
data16
mov
int
adc
add
jns
sti
sbb
add
sub
xor
push
add
dec
jnp
or
sub
mov
xor
jmp
ss
fdiv
mov
xor
in
sub
add
inc
push
cmp
sar
sub
cmp
clc
sub
shr
lods
(bad)
(bad)
mov
add
cmc
ret
or
inc
fadd
daa
aaa
pop
or
mov
sbb
inc
pop
jg
call
and
and
dec
pop
ret
jmp
call
ss
fsubr
pop
jne
mov
jmp
test
rol
inc
pop
xor
call
pop
push
inc
and
adc
sbb
sub
cs
mov
pop
adc
mov
in
or
push
loope
or
jae
call
popa
and
pop
test
sar
push
icebp
in
add
dec
stos
xor
or
jae
mov
mov
je
lea
pop
xchg
adc
dec
sar
add
mov
clc
pop
ins
mov
adc
jle
add
or
lds
pushf
mov
jnp
jl
test
cwde
push
mov
xor
dec
gs
cwde
push
push
dec
dec
jmp
cwde
or
mov
cmp
dec
outs
dec
pop
jbe
inc
addr16
dec
jo
cmp
add
push
bound
lahf
add
xor
fild
jb
leave
ins
addr16
shl
ror
mov
test
jl
jnp
scas
mov
inc
inc
or
xor
imul
pop
add
adc
(bad)
jmp
ja
data16
sbb
(bad)
shl
add
out
push
xor
popa
push
imul
mov
into
dec
mov
inc
xor
test
ins
adc
popf
ret
sub
inc
adc
xchg
imul
inc
rcr
cwde
mov
dec
mov
dec
adc
mov
sbb
cmps
pop
dec
add
dec
cmp
mov
add
and
xchg
cmp
call
adc
pop
or
add
xor
or
ins
adc
daa
push
sbb
mov
sti
xor
retf
outs
outs
xor
div
pop
addr16
or
mov
adc
pop
lds
ficomp
or
jle
jmp
jno
dec
lahf
ss
inc
loope
imul
jecxz
xor
dec
out
cmp
mov
pop
pop
mov
sub
ror
push
enter
call
scas
or
in
(bad)
mov
cmp
cmp
dec
xlat
dec
jb
call
daa
cmp
dec
mov
or
and
fiadd
sub
xchg
pop
dec
pop
add
xor
stos
mov
enter
sar
sbb
push
adc
push
loope
ins
popa
mov
add
add
pop
inc
loopne
push
jmp
inc
or
and
mov
or
(bad)
and
inc
loopne
dec
add
test
mov
cli
pop
jb
adc
punpckhwd
les
jecxz
in
xchg
xchg
scas
cmp
call
inc
das
xor
inc
push
std
jnp
xor
jae
sbb
dec
xchg
push
cmc
hlt
setl
(bad)
enter
call
inc
push
push
adc
add
mov
and
push
pop
push
jp
jbe
sub
jg
add
push
dec
push
and
push
mov
pushf
pusha
test
leave
dec
retf
dec
jne
push
int
push
add
or
outs
mov
push
adc
dec
inc
pop
or
mov
mov
sub
dec
imul
push
sub
js
popa
retf
mov
add
int3
rcr
mov
or
push
pop
pop
mov
syscall
dec
popa
clc
dec
or
mov
and
mov
stc
popa
enter
pop
add
test
ret
pop
push
jl
push
xor
pop
mov
and
push
lahf
je
push
xlat
jne
adc
out
movs
or
mov
sbb
int3
push
add
ret
lea
cmps
pop
pusha
ds
mov
dec
psllq
adc
or
and
xchg
pop
leave
mov
sbb
mov
pushf
adc
jl
rcl
or
mov
cmp
aam
mov
pop
mov
(bad)
xor
sub
out
cmp
lods
inc
movs
jne
adc
and
loope
not
neg
daa
(bad)
and
mov
vmread
inc
rcl
pop
fdivr
fld
test
enter
jno
cmp
lock
add
hlt
sbb
push
mov
or
sbb
imul
movs
xor
dec
mov
jne
add
aas
pusha
or
dec
lock
mov
fst
pop
lock
mov
add
or
inc
test
add
dec
mov
mov
jmp
ror
out
ds
je
xor
jge
cmps
stc
cmp
pextrw
xchg
cwde
loopne
pop
add
or
stos
je
dec
or
add
sahf
mov
call
mov
imul
lock
sub
inc
mov
and
cdq
inc
and
mov
sub
xchg
shl
xchg
add
pop
mov
adc
sub
add
cmps
adc
inc
mov
(bad)
adc
outs
sub
add
and
test
enter
xor
mov
sub
and
inc
cmp
or
mov
xchg
and
xchg
and
cs
mov
loop
or
inc
adc
add
xor
inc
or
mov
add
or
dec
cmp
outs
adc
hlt
add
sub
cmp
popa
xchg
add
xchg
test
cmps
push
fcmovnb
ins
dec
jmp
sbb
rcr
les
les
cld
scas
std
jne
xchg
mov
or
sbb
inc
add
add
rol
cmp
sbb
and
jb
lds
ror
out
enter
or
or
jae
fmul
push
das
pusha
frstor
loopne
loopne
(bad)
or
jecxz
daa
pop
jmp
adc
add
sbb
adc
adc
or
test
jmp
fs
nop
push
add
dec
cmp
xchg
rol
gs
cmp
dec
(bad)
adc
cmp
fcomp
mov
dec
(bad)
cmp
int
call
enter
hlt
ins
sahf
cld
jno
or
xor
aas
push
inc
hlt
test
cmp
sti
test
test
jb
mov
cmp
cmp
push
xor
data16
and
out
lahf
cmps
add
mov
pop
les
sub
xor
and
add
inc
arpl
pop
lea
mov
lds
fld
pop
lock
rcr
or
xchg
imul
retf
jo
pop
(bad)
mov
shl
mov
push
cld
add
adc
sbb
sub
push
ss
cld
ja
rcr
adc
xchg
xchg
inc
add
adc
pusha
out
mov
xor
movs
arpl
or
jle
mov
inc
xchg
cmp
adc
add
das
dec
sar
fs
mov
or
mov
or
call
jbe
ins
fld
sub
inc
(bad)
rol
xlat
sbb
loopne
std
pushf
xor
jmp
push
pop
pop
fcomi
push
cld
xlat
jmp
loopne
push
xor
jbe
sub
mov
in
and
mov
adc
xor
pushf
jbe
sbb
adc
test
ss
add
push
mov
add
test
fimul
not
gs
test
rcr
inc
fmul
push
adc
or
or
lea
lea
mov
pop
rcl
adc
mov
js
xchg
push
ficomp
aas
movs
jecxz
and
fisttp
pop
pop
ficomp
sbb
push
jo
cmpxchg
push
or
fistp
movs
and
add
cmp
jp
and
shl
push
or
shl
and
pop
mov
push
fisttp
jo
cwde
test
or
dec
fsubr
pop
mov
ja
push
push
(bad)
lock
mov
cmps
mov
jnp
fmul
fdivrp
mov
mov
aaa
dec
mov
mov
mov
aam
add
sub
add
mov
ret
imul
sbb
inc
mov
jbe
fisub
adc
inc
sub
add
mov
mov
es
xor
lock
cmp
imul
add
xchg
add
inc
icebp
mov
jb
std
mov
add
push
pop
sub
scas
add
js
sbb
xor
int
shl
int3
add
xor
int3
xchg
adc
rcr
pusha
hlt
and
sbb
sub
or
int3
mov
mov
dec
xor
mov
pop
add
call
ret
lods
sti
les
xor
adc
add
nop
lea
call
pop
mov
xor
test
mov
(bad)
(bad)
shr
mov
and
and
push
cmp
cli
(bad)
hlt
imul
pop
(bad)
enter
push
div
adc
add
scas
inc
pusha
xchg
daa
add
or
mov
test
pusha
sbb
or
imul
loopne
out
add
xchg
fsubr
or
xor
shr
rcl
loopne
sub
stos
jg
xor
jmp
jnp
sbb
jnp
shr
mov
mov
mov
jl
adc
cmp
call
adc
mov
icebp
and
push
jmp
sub
xchg
movs
and
mov
xchg
add
sub
jmp
push
mov
adc
in
mov
std
(bad)
dec
js
xchg
repnz
lds
and
sti
pop
push
push
mov
test
cmp
bound
das
push
shr
call
push
jmp
and
lods
into
cmp
enter
nop
imul
(bad)
jge
mov
fs
into
fmul
(bad)
or
push
pop
dec
cmp
cwde
add
xlat
push
imul
aad
repnz
nop
dec
or
add
xor
cs
push
aad
xor
cmp
add
mov
enter
and
and
sbb
and
loope
push
int
or
loopne
ret
in
adc
test
lods
into
cld
out
cmps
xor
out
out
sbb
xchg
dec
or
pop
push
pop
(bad)
daa
pop
ss
sar
xchg
dec
test
mov
add
js
add
lock
ja
and
add
fisubr
inc
push
mov
xor
iret
rcr
sbb
pop
out
sub
inc
call
je
shr
add
aas
add
jbe
push
lea
fmul
cld
xchg
shr
fmul
std
sub
jnp
rcr
push
jl
imul
sub
dec
movs
push
cwde
test
test
clc
push
add
mov
mov
dec
add
or
xor
cmp
mov
xchg
and
cld
push
or
inc
cmp
lods
push
enter
in
or
shl
adc
lea
adc
lods
stos
cmps
inc
sub
fistp
popa
jne
jle
es
mov
leave
cmp
call
mov
out
mov
call
test
adc
imul
outs
cmp
lea
sbb
and
int3
jmp
mov
mov
into
sbb
jo
or
adc
adc
adc
loopne
out
fmulp
sbb
fwait
mov
leave
mov
cmp
aam
aam
xor
fsub
push
sbb
aas
fst
lea
sub
sbb
fidiv
mov
xor
sbb
repnz
das
sub
adc
sub
mov
xchg
sub
xor
dec
push
pop
aaa
and
fnstsw
adc
stc
mov
lea
pop
shl
jge
adc
icebp
xor
loop
adc
pop
and
mov
xchg
xor
test
and
cmp
or
adc
cmp
add
stc
test
(bad)
sub
call
xchg
sub
pop
das
sbb
xchg
scas
mov
push
dec
inc
add
movd
dec
dec
shl
mov
cmps
jmp
inc
loope
das
leave
ror
add
mov
cmp
in
push
cmp
aaa
out
lods
dec
sub
jg
push
or
fidivr
imul
jae
pop
add
push
inc
sahf
mov
push
pop
lock
mov
pop
imul
xchg
ins
in
movs
push
out
mov
fcmove
push
(bad)
es
mov
ds
mov
stos
push
test
cmps
push
aam
add
inc
in
(bad)
js
push
mov
pop
ss
xor
lahf
push
jg
lods
scas
icebp
mov
xchg
mov
or
adc
xchg
ret
out
adc
je
jp
push
dec
in
iret
push
inc
outs
or
sub
pop
or
push
sub
sub
cmps
or
jl
add
cmp
fcom
movs
sub
add
or
sub
outs
in
call
pop
pop
xor
or
sbb
push
dec
or
cmp
adc
jae
dec
add
fisttp
pop
add
mov
js
pop
cmps
adc
test
dec
jl
lock
add
scas
xor
dec
ja
adc
jns
loop
int3
je
icebp
mov
cmp
sbb
cmp
lods
adc
sbb
xchg
or
adc
nop
fcmovu
aam
cmp
jb
xor
jle
retf
inc
mov
mov
ja
ficomp
jne
pop
test
pop
pop
mov
cmp
push
sbb
ja
push
or
mov
rol
fsubr
pop
xor
dec
cli
retf
mov
mov
push
ss
or
mov
and
jo
or
xchg
dec
ret
mov
fs
adc
data16
mov
and
hlt
and
mov
pop
mov
rol
mov
pop
push
sbb
xor
adc
or
add
sub
sub
or
in
ret
sti
aam
or
push
cmp
and
cmp
or
jne
jecxz
inc
adc
movs
mov
shl
inc
add
cmp
fwait
pop
mov
pusha
mov
dec
(bad)
lahf
or
adc
cmp
out
aam
mov
push
mov
out
xchg
dec
nop
add
adc
inc
mov
mov
dec
sub
sbb
adc
test
cmp
lahf
jb
xor
and
mov
jge
(bad)
aad
aam
test
inc
les
ret
xor
jl
rcr
adc
add
cmps
and
retf
xor
loope
and
and
pop
adc
jp
jmp
jmp
sbb
or
cmp
movs
add
mov
outs
sar
dec
stc
cmp
outs
ret
shr
push
popa
inc
je
push
sub
sbb
inc
(bad)
xchg
out
fwait
mov
xchg
mov
imul
lock
test
sbb
jmp
clc
sub
fstp
repnz
rcl
mov
leave
cmp
cs
dec
dec
icebp
sbb
sub
cld
push
pop
loope
js
sub
push
jg
in
mov
sub
mov
and
je
adc
sbb
sub
test
and
or
push
nop
mov
cmps
daa
js
out
fsub
jne
sbb
pop
test
add
add
ret
jl
mov
sub
mov
adc
mov
cmps
xchg
sbb
jp
mov
or
cmp
inc
adc
xchg
mov
add
sbb
mov
or
add
dec
ret
mov
(bad)
jg
je
inc
push
icebp
dec
and
mov
sbb
or
fisttp
inc
lods
xchg
and
(bad)
jb
loopne
add
dec
ret
mov
(bad)
and
add
(bad)
sub
(bad)
jp
mov
lock
xchg
pusha
or
repz
shl
pop
push
inc
in
inc
shl
mov
mov
dec
loopne
adc
sbb
and
loopne
movs
mov
dec
adc
arpl
enter
cmp
inc
gs
sub
jl
jmp
test
lods
xchg
lock
sbb
add
jo
xchg
es
and
lods
push
sub
pop
adc
into
and
jecxz
xchg
and
lahf
xchg
out
or
fsubr
xor
test
xchg
push
push
add
int
dec
mov
xchg
add
adc
mov
ret
in
and
xchg
scas
ins
aam
add
loop
mov
xor
pop
lods
cmps
pop
adc
mov
inc
inc
pop
dec
cmp
or
imul
adc
(bad)
test
jl
pop
in
outs
cmp
test
test
push
cmp
in
bswap
aaa
pop
mov
inc
adc
xor
and
and
mov
in
pop
add
add
xor
ss
(bad)
dec
dec
sub
call
bnd
pop
data16
adc
stos
push
mov
out
dec
sbb
in
loope
dec
imul
push
dec
jne
sub
ss
or
loop
push
inc
add
push
aaa
icebp
movs
retf
jg
mov
out
sbb
cmp
and
push
push
(bad)
mov
js
jge
jge
mov
out
and
mov
ret
sub
outs
xchg
jo
pop
mov
in
lods
push
jbe
call
jg
or
mov
and
mov
push
das
xlat
sbb
mov
sbb
cmp
xchg
adc
sub
add
mov
adc
out
or
push
(bad)
adc
add
in
ins
ins
cmp
inc
dec
push
mov
in
mov
js
sub
xor
adc
push
mov
lods
call
cmp
into
call
int3
jo
xor
cpuid
mov
popa
or
addr16
or
adc
aaa
mov
icebp
das
sbb
nop
inc
lea
loopne
mov
das
rol
cmp
sti
sar
cmp
(bad)
clc
pop
sub
mov
sub
sub
(bad)
bnd
dec
jmp
pop
bound
xor
inc
ror
mov
xor
jg
sbb
add
loop
arpl
mov
pop
in
sbb
push
adc
fsub
movs
push
jno
add
loopne
sub
xchg
mov
movs
add
push
in
fs
or
cmp
adc
imul
sub
and
and
imul
mov
sub
pop
xchg
lods
mov
sbb
(bad)
ficom
and
sub
clc
jno
jb
sub
dec
in
xor
fwait
jne
push
inc
ja
scas
add
xchg
xchg
jo
inc
xchg
fild
pop
pusha
or
lahf
mov
mov
sbb
in
rol
push
ror
add
pusha
in
test
popa
xchg
cdq
imul
mov
add
pop
dec
push
dec
fld
or
mov
dec
fistp
xlat
sbb
ins
loop
ror
inc
xchg
rcr
adc
test
dec
in
add
mov
push
add
inc
es
push
push
jb
pop
adc
pop
xor
lds
pop
pop
mov
test
pop
pop
jb
pop
and
or
inc
pop
pusha
pop
in
fs
pusha
pushf
cmc
fs
jo
dec
fs
adc
mov
adc
aaa
sbb
mov
pop
outs
jmp
int
push
push
in
mov
into
ins
hlt
lods
dec
jecxz
dec
sbb
jecxz
mov
or
mov
pop
xor
xor
push
inc
sahf
xor
and
and
outs
sbb
or
repnz
retf
dec
mov
rol
cli
adc
xchg
fisttp
retf
adc
pop
xchg
inc
loop
adc
popf
inc
mov
sbb
sbb
(bad)
das
pop
pop
dec
mov
jmp
cmp
loop
xor
adc
jns
mov
mov
adc
or
adc
inc
push
xchg
enter
cmp
in
sub
dec
dec
add
fsubr
pop
loop
dec
jmp
inc
dec
in
sbb
sahf
push
enter
loopne
cmp
ins
push
or
fs
and
mov
cs
sub
hlt
jmp
pop
sbb
fadd
mov
jb
cwde
and
cld
mov
fcomp
fcom
or
(bad)
push
sbb
sub
int3
and
push
inc
shl
mov
push
(bad)
pop
cmp
push
aam
cs
mov
adc
inc
shr
shl
fst
loope
in
jmp
xchg
cmp
in
pop
and
pop
mov
inc
rol
xchg
dec
xor
aam
inc
push
xor
jo
adc
movs
loope
sbb
mov
dec
fisubr
rol
inc
inc
dec
imul
aam
hlt
rol
fisubr
sub
in
lods
ud0
add
stos
mov
repnz
sbb
outs
xchg
call
lea
xor
icebp
sub
rcl
mov
rcr
clc
scas
pop
xor
pop
jo
dec
faddp
loope
add
add
(bad)
push
(bad)
mov
or
aaa
add
cs
dec
add
sub
sbb
xor
jns
cmp
dec
ror
cmp
and
cmp
call
dec
jo
cmps
out
jns
or
jmp
dec
outs
pop
inc
movs
adc
pop
sbb
push
adc
rcl
or
mov
inc
iret
or
pop
dec
in
pop
retf
jnp
push
jp
out
jl
mov
popf
scas
mov
or
fistp
xor
icebp
sbb
xchg
push
icebp
pushf
aas
jge
jmp
push
pop
add
out
adc
nop
or
adc
nop
retf
sbb
and
sbb
scas
nop
or
sub
ss
sbb
fcomp
imul
call
cld
xor
jle
cmp
sbb
xlat
out
sub
icebp
sar
ret
and
mov
nop
push
push
fmul
(bad)
les
or
stos
dec
shl
jmp
in
cmp
ja
mov
and
jecxz
ss
xor
ss
sbb
pop
movs
popa
frstor
sub
mov
nop
dec
aaa
in
cwde
mov
cmp
mov
(bad)
pop
inc
sub
out
or
lock
cmp
mov
or
xchg
test
pushf
add
rol
movs
adc
push
jecxz
add
and
xor
hlt
aas
cld
inc
inc
adc
inc
cld
std
mov
or
or
outs
rcl
fs
xchg
dec
dec
fist
sbb
mov
adc
out
rol
fsub
sbb
call
gs
xchg
loopne
pop
push
add
(bad)
jne
xor
imul
pop
ret
mov
or
add
xchg
rcr
mov
js
pop
test
or
pop
mov
outs
lock
mov
add
dec
jmp
inc
jmp
rcl
lods
add
into
popa
push
out
shl
sbb
ret
add
iret
not
pop
sub
jg
add
push
and
enter
mov
js
je
pushf
xor
push
scas
test
dec
pop
sbb
mov
add
xor
sbb
or
iret
sbb
jl
pushf
or
or
aad
fcmovnbe
jmp
in
shr
pop
jbe
sub
imul
xchg
pop
mov
je
or
mov
mov
dec
add
cli
retf
mov
mov
push
push
mov
ror
shl
pop
xchg
les
dec
xor
xchg
adc
and
cmp
jp
lea
nop
cmp
dec
and
and
push
xor
sub
aas
stos
xchg
cmps
nop
jae
inc
loope
mov
jg
mov
repz
jo
add
ret
push
add
sub
and
and
std
es
add
mov
pop
adc
int3
inc
pop
adc
xchg
add
inc
int3
cwde
inc
sbb
shl
lock
and
out
lock
cmp
lock
xor
stc
pop
xor
aam
mov
cmp
mov
push
cmp
lds
cmp
or
rcl
or
jo
or
sub
add
cmp
mov
xchg
dec
lods
xchg
xor
xor
cdq
cmp
dec
jo
push
adc
or
and
or
push
add
xlat
or
or
(bad)
sub
pusha
xor
pop
(bad)
out
dec
mov
lahf
dec
mov
dec
mov
enter
rol
add
pusha
add
pop
cs
(bad)
mov
pop
(bad)
push
mov
sub
push
adc
mov
xchg
ja
dec
pop
jp
or
rol
push
dec
cmp
fld
jl
adc
cdq
pop
cmp
movs
jmp
jge
add
fcomp
adc
add
jl
test
inc
iret
mov
add
call
jno
add
fnsave
mov
or
xlat
or
call
inc
push
mov
movs
ret
jo
cmp
adc
or
fsubp
or
sub
shl
test
jg
sub
in
(bad)
shr
outs
daa
call
mov
cmps
pop
mov
lods
aaa
(bad)
sbb
std
movs
fadd
mov
adc
xchg
push
or
jle
test
in
loopne
bound
ds
and
sbb
dec
or
leave
jle
cwde
or
dec
or
cli
dec
(bad)
retf
es
rcr
aam
call
call
mov
mov
hlt
repnz
add
inc
mov
not
out
xor
mov
movs
dec
outs
jmp
sub
fiadd
mov
xor
push
neg
sbb
mov
out
mov
mov
dec
sub
xchg
add
add
mov
jecxz
and
mov
xor
xor
call
push
push
dec
fdiv
retf
lods
adc
mov
lods
adc
enter
dec
daa
inc
sub
or
add
enter
push
pop
xor
and
enter
add
or
sub
add
push
nop
in
sub
or
sub
xor
pop
imul
aad
addr16
jne
mov
or
xor
add
ja
cmp
adc
ret
xchg
mov
or
pop
and
add
xchg
test
pop
push
jmp
add
add
and
jne
and
mov
and
loop
jne
jmp
rcl
adc
cmc
ret
pop
mov
xchg
and
or
xor
lods
and
and
add
call
add
test
add
fndisi(8087
outs
mov
mov
sub
test
mov
cmp
push
and
data16
es
test
out
xor
sbb
movs
add
dec
push
sbb
mov
xor
add
cmp
cmp
fs
dec
movs
movs
inc
or
sbb
and
pop
sbb
mov
push
sub
or
lock
ins
xchg
push
sub
or
add
add
fst
lea
push
add
data16
push
fadd
dec
or
shr
adc
mov
mov
int3
mov
sti
xor
nop
loope
add
pop
shl
leave
mov
sub
and
cmp
push
outs
and
mov
or
push
push
or
(bad)
call
ret
jle
shl
or
sbb
or
inc
fiadd
adc
shl
pop
out
sub
cli
shl
shr
sub
sub
mov
ror
inc
cmc
sub
cwde
adc
xlat
add
data16
jne
shl
inc
sub
mov
or
lea
mov
sbb
mov
loopne
xor
lods
jno
and
into
cwde
or
fld
push
lds
popa
mov
cld
gs
mov
and
xlat
sbb
pusha
dec
imul
xor
add
and
push
pop
test
or
pusha
add
add
fstp
add
pop
pop
adc
ror
push
shl
std
shl
sub
push
add
ins
ja
ret
not
shr
and
add
xchg
rol
int
jp
popa
mov
add
add
xchg
aad
push
sbb
jmp
jge
sbb
or
ja
out
hlt
enter
pop
(bad)
pop
and
cmp
pushf
inc
lds
add
jp
fild
pop
imul
and
or
and
movs
popf
sub
and
xor
fwait
cmp
test
and
mov
sub
dec
stos
cli
loope
(bad)
dec
mov
scas
and
xor
out
inc
jne
push
push
xor
fdiv
test
mov
fucom
inc
sub
jb
jns
sbb
dec
aaa
or
sbb
and
sbb
push
push
rol
mov
sbb
repz
mov
fcomp
rcr
sub
hlt
or
rcl
mov
or
adc
and
sub
out
pop
mov
in
js
cmps
fild
pop
sbb
pop
imul
stc
sbb
or
call
clc
sbb
sub
jno
dec
inc
sbb
das
mov
pop
fwait
or
loop
xor
rol
sbb
sbb
jae
sbb
rcr
and
adc
je
jmp
cmp
dec
push
push
call
pop
jp
or
mov
push
add
shl
je
je
lahf
or
(bad)
test
adc
sub
add
scas
mov
sub
inc
cwde
pop
push
in
inc
adc
xchg
add
jb
add
dec
cdq
adc
gs
in
fldenv
adc
popf
rol
dec
dec
cmp
loop
jp
jae
scas
sbb
ret
sub
xor
cmp
or
mov
sbb
ret
or
add
inc
int
push
fs
popa
xor
dec
dec
mov
loope
sbb
ja
ret
jae
mov
mov
mov
call
inc
cmps
sub
and
jmp
push
sub
xchg
push
call
mov
cmp
(bad)
mov
fisttp
es
data16
add
mov
xchg
loop
sbb
pushf
push
mov
push
and
mov
xchg
outs
jns
or
inc
inc
cmp
sub
mov
(bad)
retf
or
scas
add
arpl
add
shl
shl
or
add
enter
adc
mov
xchg
and
push
call
retf
sub
adc
pop
pusha
gs
in
cmp
rcr
shr
jmp
scas
pop
fild
shl
sub
xor
adc
dec
lods
icebp
or
push
dec
cmc
push
dec
ss
or
mov
push
jl
mov
ret
aam
push
sub
into
adc
addr16
and
out
mov
push
dec
jge
or
sbb
popf
jge
sub
cmps
sbb
push
fisub
add
jnp
push
mov
retf
in
adc
push
cmp
lods
cmc
pop
add
sbb
or
push
or
push
cmp
or
loope
or
add
clc
js
je
imul
(bad)
aam
xchg
mov
mov
(bad)
int3
add
scas
inc
movs
inc
cmp
inc
fnstenv
adc
into
or
cmp
mov
or
pop
jmp
pop
push
retf
movs
mov
adc
sub
inc
pop
fisub
xor
add
and
nop
sub
mov
jp
les
outs
sbb
ret
mov
in
fldenv
add
mov
push
add
mov
and
loope
jmp
aad
mov
dec
mov
mov
(bad)
sbb
cdq
test
jb
or
in
fisttp
inc
mov
adc
mov
push
xchg
add
and
dec
and
add
movs
mov
jmp
jp
repnz
movs
inc
rcl
xor
adc
sub
pop
stos
mov
mov
cld
sbb
fwait
int
push
add
push
push
sbb
dec
sbb
repz
sub
pop
mov
push
jb
adc
and
adc
addr16
shl
loopne
pop
rcl
push
jmp
fadd
and
xor
mov
push
push
xchg
add
shl
inc
mov
adc
in
push
out
xor
and
enter
sbb
pop
jb
sub
adc
xchg
sub
sub
jmp
push
repnz
sub
inc
loop
sbb
pop
fist
mov
mov
jbe
push
(bad)
fisub
inc
sub
daa
je
or
int
aam
mov
sbb
cmp
and
fsub
fs
and
adc
xor
sub
icebp
adc
sbb
xchg
and
aad
xchg
adc
jmp
push
loopne
cmp
and
push
inc
push
mov
sbb
gs
and
ret
outs
dec
pop
jl
dec
adc
fist
inc
js
inc
scas
arpl
inc
jne
xor
fnstcw
mov
sub
and
pop
jb
push
enter
inc
sbb
stc
add
fistp
nop
inc
push
and
and
bound
sub
pop
add
jb
or
(bad)
mov
cs
xchg
adc
sbb
mov
or
push
adc
inc
mov
push
xor
inc
xchg
add
inc
sub
(bad)
movs
or
or
fsub
inc
stos
push
xchg
out
sbb
or
and
rcl
mov
pop
cmovb
rcl
lahf
sbb
and
add
pop
mov
adc
sub
add
mov
das
test
cmps
ja
cdq
and
fcomp
or
test
or
or
xchg
sub
inc
and
or
js
cmps
push
and
rcl
pusha
test
push
dec
add
shl
mov
clc
xor
adc
sub
test
inc
add
sub
sub
dec
movs
adc
or
sbb
and
sbb
push
mov
xor
into
test
aad
fbstp
mov
jo
fisttp
mov
xchg
nop
jb
(bad)
movs
add
vmovddup
popa
les
add
adc
sbb
sub
sub
sub
add
cmp
adc
sub
sub
addr16
dec
movs
inc
mov
add
dec
jne
adc
dec
xchg
mov
pop
les
and
and
or
xor
mov
xor
mov
and
or
loope
add
test
inc
les
iret
cmps
pop
mov
sub
cmps
aaa
mov
popa
jmp
fild
cld
pop
cmp
ins
dec
adc
or
push
push
std
sti
jne
and
rol
sub
pop
cli
and
adc
inc
push
or
inc
cmp
or
sbb
and
mov
xchg
sbb
sub
sbb
pop
xlat
and
sbb
mov
cmps
jnp
inc
ror
sti
test
adc
ins
sub
adc
loopne
push
push
test
or
cwde
popa
popa
adc
test
sub
into
(bad)
movs
cmp
ja
dec
xchg
cmc
inc
add
movs
dec
loope
sub
lods
sbb
dec
(bad)
test
xor
push
dec
shl
xor
push
push
jbe
cmp
or
sbb
pop
sbb
xchg
cmp
cmp
mov
mov
cdq
push
nop
or
xchg
js
cmp
fild
push
xchg
add
lock
mov
nop
cmp
add
and
mov
xor
pusha
dec
add
icebp
aam
mov
not
pop
sub
push
test
verr
and
mov
(bad)
add
add
or
enter
shr
push
in
bound
(bad)
dec
cs
int3
adc
sti
add
sub
ins
inc
jae
and
(bad)
jo
sbb
xor
in
jb
mov
pop
adc
inc
enter
push
add
fsubr
test
jb
mov
xor
jo
out
push
rcl
sbb
scas
not
and
push
icebp
inc
dec
shl
mov
mov
enter
in
shr
lock
jle
lock
add
icebp
in
jne
push
and
cmp
inc
jne
xchg
xor
jo
add
aas
sub
div
retf
add
pop
sbb
add
shl
enter
inc
mov
shl
in
cmp
mov
mov
popf
cmp
sbb
sub
mov
sbb
xor
pop
fdiv
and
push
add
adc
imul
loopne
or
dec
add
test
cmp
add
aam
jb
test
jl
push
or
cmp
sti
in
add
dec
inc
adc
inc
and
mov
inc
dec
cmc
sub
cld
mov
das
cmp
mov
or
fld
fcomp
add
loopne
xor
mov
and
outs
inc
jmp
or
and
cmp
cmp
xchg
out
fwait
mov
cmp
inc
push
add
int
xor
add
xor
idiv
add
mov
add
cmp
adc
leave
mov
add
xor
sbb
or
ror
mov
cmp
into
ret
xor
or
faddp
fs
(bad)
add
shl
je
cmp
sub
pop
mov
test
loope
mov
or
sbb
or
inc
jb
cmp
scas
lock
push
dec
dec
dec
cdq
ret
loopne
xor
jmp
out
mov
dec
pop
add
and
test
adc
cmp
out
push
lahf
mov
xchg
ja
and
sbb
icebp
add
mov
mov
ret
add
mov
lahf
lea
xor
add
pop
jl
ja
imul
fs
add
lods
and
clc
xor
push
mov
or
je
mov
or
ds
sbb
or
fild
or
push
jge
inc
sbb
add
adc
xor
mov
into
push
and
test
test
fbstp
(bad)
mov
push
inc
lock
fdiv
idiv
pop
cmp
mov
inc
not
ss
sub
pop
(bad)
or
cwde
push
add
inc
jae
fnsave
xor
mov
jmp
(bad)
pop
jg
sahf
adc
push
adc
mov
dec
add
(bad)
(bad)
pop
jmp
adc
cmp
and
inc
rcr
mov
test
test
es
xchg
inc
xor
xor
movs
and
rcl
mov
mov
fisubr
adc
ins
movs
add
add
fmul
mov
popf
jl
stos
ret
xchg
out
inc
lods
mov
sbb
mov
adc
mov
xor
js
data16
fnsave
std
jle
nop
xchg
sub
lahf
fcomp
ret
sbb
outs
bound
xor
repnz
cmp
adc
add
mov
cwde
les
xchg
rcr
push
retf
sub
xor
cld
stc
cld
outs
xchg
pop
add
rol
add
xchg
sbb
mov
mov
ficom
out
xor
jns
pop
xor
add
xor
xor
repnz
icebp
xor
enter
pop
aaa
popa
jge
enter
and
and
jg
cmp
push
push
xor
mov
and
inc
xor
dec
or
sub
cmp
sub
cmp
inc
cld
and
push
imul
cmp
adc
inc
fistp
fwait
outs
call
add
and
mov
or
(bad)
fdivr
xchg
push
xor
pop
iret
push
inc
(bad)
mov
pop
add
pusha
or
sbb
inc
shl
std
and
sbb
test
mov
push
pop
inc
sbb
mul
or
inc
test
sub
jne
adc
mov
mov
jnp
scas
xchg
imul
jmp
and
nop
adc
push
lea
cmc
ins
inc
cmp
adc
cmp
sti
aas
into
mov
add
lea
mov
add
cs
xchg
inc
fs
add
cs
mov
sub
add
data16
or
or
add
aas
add
shl
jmp
pop
xor
pop
adc
in
mov
xchg
xchg
cmc
lea
cmp
ins
push
popa
inc
or
jae
popf
inc
imul
push
or
mov
add
jg
fild
(bad)
call
xor
and
xor
add
add
mov
lods
mov
sub
fcom
jmp
mov
shl
or
in
mov
icebp
mov
add
adc
mov
mov
icebp
xor
and
into
add
neg
imul
lock
jae
sub
fs
mov
or
mov
jno
mov
aad
ja
loop
adc
mov
(bad)
or
out
ret
iret
fnstcw
inc
cwde
dec
rcl
or
push
mov
pop
in
push
xchg
inc
les
sbb
ret
int
ds
(bad)
pop
scas
jmp
ror
sub
xor
mov
push
jnp
or
mov
or
adc
dec
sbb
aas
or
out
into
mov
or
inc
sti
mov
cmc
xlat
adc
sub
xchg
enter
add
sbb
jg
stc
add
and
pop
pusha
pop
sbb
or
inc
mov
sub
rcr
add
inc
repnz
xor
xor
xchg
jno
std
pop
enter
add
cmp
pop
sub
add
sub
push
not
test
inc
mov
rcl
pminub
push
pop
pop
es
push
test
(bad)
mov
aam
pop
fst
jo
aad
popa
mov
aad
push
adc
add
pop
lods
test
aad
enter
mov
shl
xlat
daa
out
loope
xlat
pop
stos
mov
aaa
ret
xlat
(bad)
xchg
aad
xlat
std
in
adc
inc
xlat
mov
add
mov
aas
push
jnp
mov
fld
outs
xlat
inc
or
mov
mov
xchg
retf
and
(bad)
add
inc
cmp
jno
pop
or
and
ins
(bad)
loope
imul
or
in
pop
fs
cmp
enter
movs
stos
mov
test
mov
in
pop
scas
pusha
dec
mov
mov
mov
xlat
xchg
jle
sub
pop
lods
test
aad
inc
stos
push
xchg
pusha
aam
jne
jg
test
cmp
aam
aad
push
mov
in
(bad)
xlat
or
sub
mov
push
lods
(bad)
xlat
xchg
mov
pop
ja
and
hlt
aam
and
lock
xchg
jmp
inc
aam
sar
fwait
xor
stos
aam
movs
std
lds
push
sti
cmp
push
sti
pop
mov
imul
mov
xchg
int3
or
xlat
and
lds
mov
stos
mov
xlat
aad
jle
outs
xlat
mov
cmp
xlat
jnp
aad
es
add
or
pop
in
aas
push
aad
jle
not
std
bound
cmp
xlat
sub
std
xchg
rol
mov
pop
cs
cs
dec
xor
or
add
adc
ret
sub
pop
xchg
dec
leave
dec
jle
and
jecxz
cmp
cmp
push
pop
fisttp
mov
mov
hlt
mov
jne
sub
test
jbe
sub
lock
inc
jae
adc
add
mov
les
mov
adc
out
nop
pushf
inc
sbb
nop
sbb
push
fist
inc
mov
inc
inc
cmp
add
fnstsw
or
inc
push
push
sub
pop
or
pusha
jmp
and
je
cmp
push
add
xor
inc
bound
xor
fs
jmp
scas
sbb
sysexit
or
mov
push
lea
inc
push
lea
cdq
and
dec
lock
call
clc
sub
inc
aas
cmp
xor
ret
nop
hlt
pop
mov
adc
mov
push
add
jge
int3
nop
ss
jecxz
or
repnz
clc
dec
call
mov
pop
xchg
xlat
movs
cmps
xchg
nop
test
es
(bad)
and
ficomp
fs
pop
pop
adc
fcomp
pop
push
sub
lea
enter
cmp
push
fsub
cwde
push
cs
je
sbb
es
jae
fs
inc
or
repnz
jbe
adc
mov
add
push
xor
mov
sbb
ja
fs
arpl
popa
or
inc
xchg
xor
dec
ret
stc
xlat
rol
leave
or
dec
es
les
adc
lock
call
lods
(bad)
pop
add
call
fsubr
rol
bound
xor
sub
je
add
(bad)
test
jge
or
ds
xchg
mov
std
or
test
push
or
mov
sbb
adc
mov
rol
push
and
call
mov
ss
sbb
add
inc
test
and
inc
add
push
jle
dec
inc
mov
push
leave
add
ret
retf
(bad)
aad
xor
movs
jne
xor
lods
mov
popa
mov
push
mov
adc
sub
and
xor
popa
fwait
cmp
cmps
jle
add
rcr
test
push
mov
inc
pusha
sub
mov
cmp
inc
lea
jl
ret
and
ds
sbb
mov
jno
or
addr16
add
mov
mov
pusha
call
mov
icebp
ror
pop
popa
pusha
imul
fld
xor
add
mov
in
imul
sbb
push
sub
inc
fisub
inc
in
in
and
rcr
vpand
(bad)
adc
fcom
dec
xchg
xchg
and
xchg
pushf
sbb
in
push
sub
adc
int3
(bad)
xchg
hlt
int3
mov
sbb
cmp
nop
sar
and
dec
lock
loope
fnstenv
inc
dec
aaa
daa
fsubr
or
iret
or
test
pusha
mov
or
(bad)
jmp
push
int3
dec
xor
retf
sub
cmp
push
mov
inc
lods
gs
in
stc
call
ds
dec
call
pop
jb
pop
in
ror
and
inc
mov
out
mov
or
xor
pop
call
mov
push
add
jg
xor
inc
mov
aaa
pop
test
adc
mov
add
add
push
inc
xor
pop
inc
sub
bound
enter
add
add
adc
pop
push
mov
loopne
ins
fsubr
xor
or
ja
sub
sti
fmulp
jmp
or
inc
jmp
dec
popa
jb
fcomp
and
sub
add
jmp
sbb
or
cmp
pusha
jo
int3
adc
or
inc
or
xor
push
(bad)
xlat
lahf
nop
cmp
sub
bound
je
cwde
and
jne
in
add
jmp
(bad)
dec
sbb
mov
sub
adc
mov
or
mov
xlat
xor
and
jle
jg
dec
push
adc
mov
and
xor
jg
cmp
lods
in
or
jmp
xor
cmp
mov
or
ror
dec
test
fild
mov
inc
xor
sub
cmp
xchg
add
adc
mov
into
push
ja
ret
jl
imul
movs
mov
cmp
and
or
test
(bad)
xchg
xchg
pop
cmp
pusha
sub
js
push
in
pusha
xchg
mov
loopne
dec
ret
repnz
ficom
mov
rcr
cmp
cmp
pop
ss
cmp
mov
pushf
lea
jl
fdiv
das
es
in
add
movs
ror
daa
popf
jo
ret
ss
jae
push
cdq
sbb
bound
fdivrp
addr16
mov
pusha
ins
add
inc
movs
push
jbe
test
push
cmp
mov
cmp
mov
mov
in
retf
cmp
adc
scas
add
ret
out
xor
jnp
xor
and
popa
add
cmp
or
or
inc
mov
ds
xchg
dec
push
clc
imul
fwait
inc
sbb
inc
aam
daa
dec
ret
sahf
call
add
pushw
retf
lods
inc
or
mov
inc
das
(bad)
push
cmp
cmp
sub
and
xor
mov
mov
adc
ror
jnp
or
or
mov
mov
pushf
test
add
xchg
loopne
mov
sub
cmp
lods
and
sub
scas
adc
and
jle
xchg
inc
test
and
dec
xor
ins
adc
push
enter
inc
push
inc
mov
dec
sbb
dec
lds
adc
dec
dec
xlat
add
jno
add
mov
and
inc
xchg
fmul
and
ja
imul
mov
add
adc
sar
popa
loope
add
or
jle
mov
xor
or
inc
imul
add
(bad)
call
push
push
push
pushf
xchg
xchg
js
inc
adc
xor
cmp
add
mov
jb
jbe
div
jne
xor
test
push
dec
push
test
daa
push
scas
push
sbb
imul
hlt
fcomp
fld
add
shl
add
jp
or
adc
add
mov
add
dec
icebp
mov
pop
lods
and
inc
or
mov
mov
sbb
lock
or
add
add
add
and
test
(bad)
mov
mov
sbb
imul
(bad)
xchg
xchg
arpl
hlt
adc
mov
lea
inc
call
mov
test
xor
cmp
pop
stos
adc
dec
mov
iret
pop
pop
cs
push
arpl
inc
xor
and
inc
dec
push
dec
inc
movs
push
(bad)
xchg
dec
clc
inc
retf
mov
jl
mov
adc
jbe
clc
jnp
push
adc
movs
inc
push
sub
adc
ss
xchg
retf
sbb
add
jne
mov
jbe
sbb
clc
loopne
mov
shr
add
call
inc
mov
sahf
or
enter
shl
not
add
dec
adc
imul
aas
js
push
add
add
push
frstor
mov
cdq
jmp
test
and
or
xchg
push
test
rcl
mul
add
mov
inc
pop
movs
gs
nop
jae
add
out
push
xor
dec
daa
test
sbb
sub
add
ret
and
jmp
or
mov
push
sub
jbe
sbb
jmp
js
inc
hlt
ss
lock
movs
hlt
mov
mov
inc
push
test
sub
jne
test
push
mov
shr
aaa
pop
pusha
stos
sub
add
sub
add
fdiv
add
test
in
outs
jl
cdq
push
mov
lods
adc
pop
pop
push
ds
cmp
mov
test
pop
lods
pop
push
enter
pop
cs
or
rcl
or
xor
nop
aas
or
cmp
mov
je
add
test
(bad)
icebp
fcomp
and
cmp
xor
pop
cli
and
stc
adc
xor
ds
mov
xor
xchg
inc
mov
cmp
sub
or
vunpckhps
jo
stos
dec
ja
movs
add
idiv
or
add
out
cmc
sbb
or
inc
add
or
push
movups
adc
adc
push
pop
sbb
sbb
dec
mov
sbb
aas
scas
push
retf
movs
imul
call
sahf
out
ja
mov
iret
repz
out
or
test
iret
repz
rcr
sbb
sahf
out
cmp
xchg
mov
neg
imul
push
inc
pop
xchg
jns
xchg
daa
sbb
jno
das
xchg
sub
pusha
popf
cmp
and
dec
push
add
xchg
and
push
pop
in
cmp
or
xchg
or
and
cmp
push
movups
adc
cmp
adc
xchg
and
push
pop
in
cmp
sbb
xchg
sbb
and
cmp
push
pop
jmp
xor
and
cmp
sbb
dec
push
and
pop
test
mov
add
push
mov
add
push
push
push
loope
add
push
push
nop
lea
and
aas
pop
jnp
scas
inc
push
add
mov
xchg
jnp
xchg
push
inc
shl
into
xchg
int3
inc
int3
sbb
test
xchg
jmp
retf
sub
pusha
or
mov
and
mov
jg
gs
outs
xor
jbe
cmp
test
push
rol
jmp
ins
popa
shl
rol
movs
aad
mov
push
mov
xchg
inc
jle
mov
mov
inc
adc
jae
push
mov
das
cmp
mov
xchg
push
cs
sub
sti
and
add
sub
adc
sub
push
and
sbb
cwde
pushf
add
push
fadd
pop
rol
ret
or
mov
pop
pop
outs
sbb
inc
cld
push
hlt
enter
jnp
and
dec
push
push
and
add
dec
mov
add
jmp
cmp
add
push
xor
xchg
icebp
test
mov
sub
add
sbb
mov
cmp
fs
movs
mov
in
sub
or
repz
nop
add
cmp
cmp
fmul
inc
je
push
test
adc
imul
mov
add
imul
adc
xchg
movs
add
add
dec
rcr
lods
add
call
push
mov
push
int3
mov
clc
loopne
pop
or
inc
sbb
adc
dec
pop
or
xor
and
add
test
mov
mov
mov
fs
or
movnti
jb
inc
pop
repnz
add
cwde
mov
leave
dec
pushf
pushf
sti
or
ins
mov
mov
pop
pop
xchg
push
dec
jne
push
sbb
movs
push
lods
cwde
adc
ret
lods
clc
rol
aam
shl
xor
mov
xchg
push
and
rol
dec
dec
and
mov
inc
push
push
push
mov
lock
arpl
or
or
add
aam
dec
es
ja
je
lea
dec
out
jnp
lock
sbb
adc
and
adc
popa
cmps
mov
jg
shr
dec
xchg
push
mov
in
and
adc
sti
mov
sub
pop
sahf
inc
cwde
sbb
jne
add
loopne
pusha
pop
mov
jnp
or
dec
mov
adc
mov
lods
sti
xchg
nop
(bad)
pop
pop
icebp
imul
mov
adc
mov
add
shr
xor
jmp
adc
call
aad
stos
jl
sti
mov
xchg
sub
mov
push
mov
retf
xor
test
ror
ss
xor
push
leave
fisttp
test
push
not
enter
mov
aam
or
cdq
ret
fst
xchg
outs
dec
popa
push
jbe
xor
gs
stc
sbb
mov
in
mov
dec
or
dec
add
or
jne
cmp
movs
rol
mov
or
pop
inc
mov
adc
jp
cmp
inc
cld
lods
inc
add
daa
xchg
dec
or
sbb
lock
mov
mov
(bad)
ins
add
fsub
or
sub
sub
ret
test
pop
fwait
adc
les
cmp
add
in
fldenv
pushf
xor
imul
sbb
fs
mov
das
lock
add
inc
mov
dec
in
ins
push
enter
and
test
dec
jnp
mov
data16
movs
cmp
xor
pop
xor
sbb
inc
adc
cwde
pop
and
mov
in
or
mov
and
(bad)
les
cmps
addr16
adc
lahf
(bad)
and
pop
push
in
in
and
jbe
mov
xchg
push
lock
add
fisttp
sbb
test
daa
js
dec
fs
stos
jle
ins
mov
add
mov
retf
add
pop
(bad)
push
pushf
arpl
cmp
mov
clc
out
push
sub
add
mov
xor
lea
mov
add
inc
add
jmp
pop
sbb
mov
mov
pop
and
sbb
sub
loopne
push
xor
mov
test
sub
jae
sbb
cmps
ins
push
popa
sahf
mov
lock
sbb
(bad)
jmp
mov
inc
add
rcr
popa
daa
or
sbb
cmp
cmp
add
xchg
inc
sti
pop
push
or
jne
mov
fidivr
loop
pop
aad
xchg
push
adc
and
mov
lock
inc
fs
test
mov
xchg
out
push
call
arpl
mov
xor
sub
xor
in
daa
fist
cmp
and
xchg
add
inc
jno
(bad)
adc
pop
dec
sub
gs
ret
xchg
lea
sub
dec
fisttp
xchg
stc
adc
pop
sub
or
or
pop
add
fs
(bad)
mov
imul
(bad)
push
xchg
fisttp
adc
jo
hlt
or
mov
test
dec
add
ins
dec
push
and
fistp
movs
cmp
push
inc
jl
sub
movs
add
xchg
pop
dec
test
pop
push
and
daa
or
arpl
int
fidiv
push
sub
xor
sbb
je
ins
enter
loope
xchg
jp
movs
jmp
ins
rol
imul
pop
retf
mov
mov
lods
jne
sbb
and
pop
mov
iret
jno
js
fdivr
or
adc
add
or
and
stc
ins
ss
mov
push
mov
jmp
in
cmp
test
popa
xchg
in
xchg
lock
hlt
idiv
add
in
adc
mov
sti
clc
pop
jle
or
mov
or
dec
ficomp
in
lock
in
pop
sub
je
imul
sub
mov
loop
fmul
out
(bad)
std
fwait
test
jnp
daa
ror
fsub
mov
lods
je
loopne
nop
dec
rol
xchg
dec
enter
loopne
pop
jnp
push
xor
adc
and
call
movs
sbb
push
or
mov
loopne
aas
hlt
pop
jnp
movs
pop
aas
cld
or
mov
mov
loope
adc
loope
fisubr
push
and
push
loope
pop
jg
test
mov
mov
push
adc
imul
mov
fwait
call
mov
push
add
arpl
xchg
fbld
and
sbb
xor
sub
ins
jno
sbb
push
mov
adc
jmp
ds
dec
cmp
not
nop
test
test
and
inc
push
hlt
pop
cmp
aam
movs
mov
imul
in
mov
jo
or
test
loope
mov
mov
rol
in
dec
mov
jnp
(bad)
div
cli
es
jl
clc
mov
xchg
xlat
pop
fstp
ror
or
inc
or
or
or
(bad)
mov
loopne
lock
and
adc
pop
nop
test
je
or
je
mov
aad
xchg
je
arpl
inc
das
ds
data16
add
push
stos
and
sbb
ret
dec
ror
(bad)
cwde
jno
mov
pop
lock
jmp
mov
push
fdiv
fist
inc
fisttp
in
push
scas
jmp
mov
sub
mov
push
push
or
jmp
add
in
add
clc
pop
jns
arpl
jecxz
dec
arpl
mov
aaa
or
call
aas
or
in
dec
xor
sub
or
aam
icebp
pop
push
mov
gs
enter
and
call
adc
cmp
mov
out
imul
mov
aaa
xor
idiv
ins
push
ret
int3
loope
ds
push
mov
xchg
pusha
xor
push
pop
push
out
gs
cli
inc
movs
sub
leave
push
outs
hlt
mov
inc
nop
sub
or
stos
and
sbb
adc
stc
cmp
dec
jne
fwait
sub
mov
lock
push
or
dec
(bad)
addr16
push
int3
arpl
sub
sbb
and
enter
(bad)
sti
cwde
dec
push
movs
xchg
sbb
push
enter
cmp
jne
add
or
in
mov
or
or
mov
pop
adc
pop
sbb
loopne
mov
loope
shr
pop
or
stos
inc
pop
hlt
dec
fist
aas
fsub
xchg
inc
dec
aam
jmp
add
pop
sbb
push
dec
mov
xchg
push
ja
leave
adc
lock
pop
in
jle
into
pop
push
fcompp
and
pop
fistp
call
adc
out
dec
ret
or
jmp
pop
push
dec
lea
adc
cmp
sub
test
mov
movs
aam
mov
test
add
idiv
ins
pop
inc
push
xor
inc
enter
push
xchg
les
xlat
(bad)
mov
sbb
outs
es
mov
inc
enter
cmps
push
ret
or
lods
(bad)
mov
mov
out
mov
xor
adc
rol
xchg
dec
shr
es
lods
sbb
icebp
pop
stc
popa
xchg
dec
cmp
inc
movs
repnz
push
xchg
add
and
ja
outs
jge
and
cs
dec
pop
lods
xor
xor
inc
mov
xchg
pusha
mov
cmp
add
push
sub
mov
das
or
adc
sbb
push
in
adc
lea
mov
sbb
gs
jmp
adc
jmp
or
mov
jbe
scas
nop
nop
ret
mov
and
test
adc
and
sub
(bad)
hlt
ror
add
pop
lods
inc
in
adc
retf
push
pop
adc
mov
nop
neg
lea
mov
std
jns
push
hlt
nop
je
test
and
and
test
test
dec
or
fmul
jnp
dec
fidiv
add
mov
fstp
nop
data16
aam
pushf
jl
mov
and
fs
dec
adc
push
inc
pop
jno
push
xchg
in
add
mov
sbb
adc
loope
cdq
mov
add
out
xchg
xor
cld
test
or
or
pushf
js
mov
outs
cdq
sti
mov
mov
(bad)
dec
dec
icebp
hlt
inc
mov
inc
loopne
sub
(bad)
mov
cs
dec
gs
xor
adc
setne
pop
popa
leave
jno
lods
fidivr
loope
push
mov
jmp
loopne
or
xor
add
add
and
mov
adc
loop
mov
mov
js
mov
shr
test
sbb
adc
test
imul
pusha
jmp
std
xor
xchg
sbb
xchg
ja
pop
mov
imul
adc
xlat
jns
push
adc
shr
push
test
mov
adc
dec
xchg
push
in
inc
and
inc
mov
add
or
inc
mov
outs
fdivr
test
xchg
rcl
jne
push
jae
add
test
or
or
rol
xor
jo
push
clc
enter
fadd
mov
push
mov
data16
or
scas
retf
push
int
ins
mov
sub
out
xchg
push
add
shr
mov
out
test
int
mov
call
daa
mov
mov
mov
inc
movs
gs
push
cdq
in
movs
mov
dec
and
cwde
shl
push
or
pop
out
ret
mov
ret
out
jns
add
mov
mov
rcl
mov
loopne
test
loopne
xchg
inc
dec
push
sbb
mov
push
sub
shl
dec
pop
shr
sub
(bad)
stos
add
or
(bad)
sbb
inc
add
nop
lock
xchg
add
test
pop
inc
mov
sbb
cmps
in
aad
(bad)
stos
push
jl
inc
stos
xor
mov
in
shr
and
sbb
and
imul
fiadd
push
sbb
mov
rol
cdq
in
clc
and
inc
cld
push
cmps
adc
cmp
js
dec
retf
mov
xor
cmp
push
mov
imul
xor
mov
mov
mov
add
ja
adc
push
cmp
sub
sbb
sysenter
xor
jae
jno
and
cmp
outs
jmp
push
push
pop
nop
xor
mov
cmps
test
xor
adc
lds
mov
fsubr
jb
add
xchg
mov
sub
adc
int3
movs
push
ror
pop
mov
arpl
cmp
mov
inc
std
les
push
mov
adc
outs
adc
movs
cmp
bound
outs
idiv
inc
iret
imul
fisubr
enter
push
cmp
loopne
push
sbb
and
or
in
cdq
adc
test
cmp
lea
adc
add
sbb
shl
jo
adc
sbb
das
or
pop
jo
xlat
jg
mov
fld
push
sbb
push
(bad)
int
retf
pop
xor
mov
mov
mov
or
sbb
adc
pusha
mov
test
xchg
movs
rcr
js
pop
mov
xor
pop
jo
in
mov
adc
jmp
jns
cmp
pop
jle
push
inc
aas
dec
pop
inc
sbb
mov
test
popf
xor
pop
xlat
dec
mov
adc
dec
add
imul
in
push
(bad)
leave
mov
or
jo
dec
mov
daa
add
(bad)
cmc
and
add
fdivr
vpmacssww
push
mov
adc
arpl
sbb
sbb
mov
inc
sub
add
das
popf
lea
xor
retf
mov
movs
mov
enter
or
inc
cmp
or
pop
pop
xchg
in
add
dec
test
ja
mov
dec
jne
jo
sbb
jmp
xor
inc
aad
out
or
out
mov
mov
or
scas
mov
and
mov
adc
repnz
jl
cmp
hlt
(bad)
aas
mov
ds
add
sub
or
test
rol
jo
sub
into
iret
jl
jno
mov
out
addr16
(bad)
in
and
je
add
xor
add
jp
inc
mov
mov
add
jnp
jle
sub
dec
repnz
(bad)
and
pushf
(bad)
in
cmp
mov
sbb
cmp
jbe
cmp
push
adc
sbb
inc
mov
cwde
and
adc
xchg
pop
pop
fadd
repz
sbb
and
repnz
adc
add
out
(bad)
lock
test
ss
pop
push
or
dec
outs
fs
in
loopne
les
repz
outs
outs
mov
add
arpl
sub
add
mov
outs
rol
dec
retf
rcr
fild
lds
enter
cmp
nop
repnz
retf
and
(bad)
mul
loop
xor
(bad)
fbstp
inc
cmp
jbe
data16
loopne
pop
das
adc
sub
xchg
test
pop
inc
xor
push
je
sub
sbb
pop
push
push
test
mov
dec
cdq
lea
sbb
mov
adc
rol
sbb
push
pop
stc
push
sub
and
sub
sub
xchg
(bad)
stc
pop
scas
cmp
lahf
adc
xchg
les
jecxz
rol
xchg
les
iret
and
or
add
test
add
push
push
xchg
stc
sub
movs
and
mov
pusha
and
test
lds
push
repnz
or
add
or
fcomp
adc
pop
and
pop
jmp
dec
mov
in
loop
add
inc
ds
dec
sbb
dec
xor
(bad)
int
mov
or
ins
test
fst
dec
ror
mov
dec
push
pop
jns
in
mov
push
test
inc
mov
popa
dec
ja
mov
mov
lods
mov
sbb
js
jns
mov
mov
add
mov
inc
push
fdiv
and
dec
sbb
stos
(bad)
mov
test
aam
adc
adc
movs
push
cmp
(bad)
push
and
stos
xor
push
jb
push
push
sbb
add
or
add
inc
aad
push
test
jmp
pushf
mov
mov
mov
hlt
xor
inc
mov
pop
add
je
(bad)
test
xchg
or
mov
pusha
or
leave
pusha
fist
loope
call
(bad)
add
inc
cwde
mov
jmp
inc
mov
cwde
cmp
adc
sbb
dec
jno
xchg
cli
xadd
inc
mov
adc
ror
stos
enter
jle
jns
adc
adc
adc
pop
mov
mov
shl
out
jne
mov
sub
adc
dec
retf
cmp
add
rcl
dec
add
mov
cld
or
out
cmc
xor
push
addr16
cmp
jg
cmp
and
les
add
in
pop
adc
cmp
mov
fsubrp
sbb
xchg
xchg
shl
mov
and
sub
pop
ret
movs
mov
xchg
dec
or
ins
lock
dec
or
xlat
add
inc
mov
cli
loope
push
push
inc
mov
jmp
push
pop
push
stos
out
sbb
mov
sbb
stos
or
jmp
sbb
inc
test
adc
and
cmp
and
ficomp
sub
jne
fdiv
nop
dec
test
(bad)
clc
sbb
push
in
js
(bad)
ret
pop
xchg
xor
fiadd
outs
push
and
stos
fstp
jns
outs
xchg
(bad)
jb
pop
xchg
ficom
pushf
sbb
xchg
and
dec
sub
data16
lds
fisub
test
xor
shl
jb
adc
inc
inc
jmp
mov
add
pop
mov
(bad)
pop
test
sub
lea
cld
imul
test
in
arpl
mov
dec
dec
mov
jge
mov
aad
adc
jne
loopne
js
fsubr
add
clc
loopne
movs
popf
mov
mov
test
xor
push
and
jb
pop
sub
pop
xor
mov
xchg
ret
add
mov
jl
ficomp
outs
or
and
mov
push
mov
xor
adc
and
sbb
add
scas
popf
in
daa
lods
(bad)
xor
mov
mov
test
mov
adc
sbb
dec
add
add
iret
out
in
adc
xor
out
sahf
test
ins
imul
dec
rcr
inc
or
imul
mov
test
jnp
cmp
cwde
into
cwde
out
pop
dec
sbb
jnp
pop
push
or
mov
outs
xchg
imul
mov
xor
daa
inc
or
and
cwde
and
ins
cdq
or
es
push
xchg
adc
adc
pop
cmps
nop
pop
xor
outs
dec
ss
inc
es
push
push
jle
sbb
xor
aaa
shl
cmp
add
imul
dec
and
pushf
push
or
mov
ins
nop
out
aam
and
inc
out
jle
push
out
fidivr
dec
mov
call
fidiv
push
les
cs
lods
popf
add
sahf
test
push
and
adc
dec
daa
arpl
ins
adc
xchg
inc
js
adc
xchg
xchg
inc
xchg
adc
adc
jg
sub
cmp
aaa
lock
add
or
(bad)
mov
stos
addr16
jecxz
adc
cwde
(bad)
outs
jg
pop
ret
xor
push
or
popa
in
or
(bad)
fs
inc
mov
add
push
shl
lock
dec
int
nop
fcom
icebp
mov
adc
movs
push
enter
mov
jl
mov
in
cmp
jmp
cmps
push
jle
cmps
xlat
cmp
jl
add
rcr
mov
pop
mov
adc
mov
ds
inc
push
pop
inc
adc
xchg
cdq
fadd
sub
pop
fwait
shr
add
out
cmp
popf
mov
cld
in
or
jae
dec
hlt
and
or
nop
xor
push
enter
and
popa
lea
sub
sbb
cmovo
adc
lock
sbb
les
lock
adc
inc
loopne
cmp
push
es
call
cmps
pop
iret
pushf
cmps
xor
add
xchg
jg
dec
and
jne
sbb
das
push
jg
std
xlat
rcr
xchg
mov
jecxz
imul
loope
xchg
jo
jae
in
pop
js
ds
or
inc
sub
and
add
fs
sub
or
and
adc
jns
fcom
adc
or
push
inc
push
(bad)
mov
add
mov
dec
pop
jl
or
int
push
xor
inc
xchg
aad
adc
(bad)
rol
sbb
pop
fbld
jb
fstp
fwait
inc
jno
sub
pop
jae
or
push
iret
dec
loopne
xor
dec
ja
or
and
sbb
test
push
add
xchg
and
fistp
das
pusha
cdq
push
pop
add
xchg
lahf
movs
dec
js
cdq
ins
ja
xor
cmps
inc
rcl
(bad)
or
(bad)
ja
adc
mov
call
push
lock
mov
or
shr
sbb
xchg
pusha
sub
pop
dec
data16
mov
sbb
fs
(bad)
mov
das
cmp
mov
and
cmps
xchg
or
jo
pop
and
js
ret
and
shr
sub
out
loope
push
cdq
jmp
or
add
add
mov
(bad)
fld
rcl
mov
push
or
in
imul
lock
add
imul
enter
xor
add
cmp
mov
sbb
xlat
inc
mov
pop
sti
xor
in
xor
sub
outs
push
lahf
mov
and
push
fdiv
cmc
fwait
inc
mov
adc
xor
sub
adc
add
xlat
dec
add
xlat
nop
(bad)
into
icebp
add
loope
pushf
test
sub
or
push
retf
fwait
and
fsubr
int3
sbb
add
inc
dec
test
mov
and
dec
and
fidiv
clc
mov
(bad)
jo
add
and
std
popa
adc
ficom
xor
push
add
adc
mov
call
sbb
jb
mov
stos
pop
inc
sbb
mov
or
or
push
push
pusha
and
and
outs
inc
outs
dec
pop
out
sahf
gs
nop
xlat
les
loope
popf
adc
dec
mov
xor
jmp
cmps
not
lahf
or
das
inc
inc
fsubr
sbb
sub
mov
(bad)
jecxz
xchg
pop
in
sbb
(bad)
jecxz
inc
imul
sbb
addr16
jnp
push
stos
adc
xor
adc
xor
mov
inc
and
jae
and
jmp
mov
cmc
adc
push
mov
idiv
mov
out
and
pop
or
cwde
adc
xchg
or
mov
add
and
add
ds
cmovns
inc
scas
dec
and
daa
add
pusha
xor
xchg
in
xchg
add
jne
or
nop
or
mov
mov
es
mov
pushf
rol
xor
fidivr
push
lods
inc
sub
push
add
xor
ficom
inc
adc
jmp
adc
adc
add
push
mov
push
xchg
push
adc
sub
mov
sub
mov
loop
or
push
clc
rol
sbb
mov
jnp
jge
fisub
adc
cmp
dec
ja
icebp
adc
adc
jb
xchg
mov
pop
mov
inc
cld
mov
adc
cmp
popa
push
inc
nop
cwde
bound
push
push
test
push
mov
mov
or
push
mov
sbb
hlt
fs
or
or
mov
mov
dec
pop
jno
xor
pop
xchg
lods
ins
push
add
adc
inc
or
inc
test
inc
movs
pop
jno
adc
sbb
sbb
dec
ror
mov
movs
inc
sub
pusha
jnp
or
dec
test
jle
aam
mov
dec
cmp
aad
mov
jnp
add
add
mov
pop
test
aad
nop
outs
push
movs
push
test
sub
pop
movs
outs
add
sti
outs
xor
cmp
movs
push
cmps
add
xlat
outs
pop
cmps
or
xchg
div
push
test
sbb
inc
cmps
cmps
xor
and
jb
gs
cmps
xchg
shl
mov
leave
mov
cmps
add
adc
push
push
jmp
test
ins
adc
into
sub
jmp
imul
mul
inc
clc
cmp
add
sbb
pop
hlt
mov
pop
ja
jg
add
jb
out
ds
in
xchg
les
mov
fisttp
lea
or
(bad)
xor
ss
hlt
les
gs
stc
test
inc
adc
out
mov
push
xor
mov
mov
outs
rol
xchg
mov
test
jg
add
jg
add
ret
add
test
add
movs
sub
inc
adc
sbb
neg
int3
nop
pop
lods
pop
inc
fstp
xchg
jnp
mov
sar
pop
repz
or
push
mov
and
call
test
or
repz
in
pop
or
dec
je
add
js
pop
mov
mov
or
pop
pop
push
ret
inc
pop
lea
movs
sub
jl
mov
jb
clc
mov
das
xchg
popa
add
fldcw
pusha
sti
cmp
jae
test
daa
inc
out
adc
shr
outs
jge
pop
and
and
cmp
mov
jle
sub
ins
pop
shl
jmp
inc
sbb
enter
daa
sub
pushf
fisubr
jno
dec
call
xchg
pop
fstp
xchg
sub
mov
and
sub
je
sub
sub
(bad)
cdq
add
inc
pop
push
repnz
jne
movs
pop
(bad)
imul
fnsave
daa
xor
adc
test
test
adc
es
std
cmp
and
cwde
scas
jmp
mov
sbb
or
jmp
pusha
sbb
jge
ret
xchg
pusha
scas
push
bound
lahf
bound
and
jb
adc
adc
mov
add
shr
mov
movs
jecxz
test
and
fsubr
jp
xchg
dec
add
mov
test
adc
push
mov
clc
inc
cld
push
xchg
mov
pusha
sub
or
mov
sub
pusha
xor
jnp
cmovs
dec
(bad)
jmp
in
pop
add
das
add
cmps
jmp
daa
push
loopne
jb
das
cmp
je
sub
push
mov
jmp
push
push
add
cdq
les
sub
dec
mul
dec
xor
mov
shl
and
jmp
adc
and
js
data16
test
dec
pop
xchg
xchg
mov
mov
test
dec
dec
js
push
xchg
push
ret
adc
pop
ret
push
lahf
jl
cmp
bound
or
xor
push
lea
inc
cmps
mov
dec
shr
lock
mov
push
mov
nop
into
sbb
out
pop
movs
mov
hlt
cmp
bound
mov
mov
sbb
sub
stos
and
adc
call
movs
int3
iret
into
or
add
test
mov
dec
aam
loope
or
aaa
mov
dec
push
mov
clc
cmp
pop
(bad)
mov
and
xchg
out
outs
rol
and
mov
or
sub
mov
stc
mov
sub
das
mov
xor
dec
push
pop
xor
fisub
lods
add
shl
and
push
push
xchg
or
mov
loopne
je
push
push
inc
fnstenv
movntps
imul
cmp
or
inc
jg
out
int3
fstp
fwait
cmp
pop
fwait
ss
movs
repnz
mov
movs
xor
pop
and
mov
pop
ret
rcr
inc
movs
fsub
adc
(bad)
jo
adc
adc
and
push
call
popa
or
mul
push
add
sub
adc
push
(bad)
clc
das
jg
je
fcom
push
cmp
fcomp
sbb
ins
sbb
je
xchg
cmps
popf
jbe
pop
test
add
add
sub
mov
enter
xchg
and
test
fsubr
pop
enter
add
nop
sbb
adc
mov
and
jo
fsubr
add
sbb
dec
xor
retf
test
adc
pop
sub
ror
add
jbe
je
mov
push
lock
xchg
sbb
pop
pop
xor
mov
cwde
adc
dec
out
cs
or
dec
or
pop
mov
or
loopne
push
test
test
sbb
loope
cmp
test
ret
xor
add
pop
inc
or
push
in
mov
adc
jge
sbb
mov
test
and
and
aad
out
adc
jo
jp
pop
mov
or
add
cmps
mov
pusha
cld
sbb
jecxz
and
into
sub
outs
scas
mov
mov
adc
ret
aaa
jno
jmp
mov
mov
in
mov
sbb
add
les
popa
add
mov
push
add
mov
sub
pop
int
loopne
mov
popf
ss
push
dec
xchg
and
sbb
sti
ret
push
mov
and
inc
or
loop
xchg
pop
pop
sete
shr
xor
cmp
xchg
sub
or
or
int3
or
ss
stos
in
ficomp
sbb
mov
or
test
adc
inc
add
lods
ret
movs
xor
or
mov
jecxz
push
(bad)
imul
jg
jns
inc
adc
call
data16
jl
call
or
xchg
mov
adc
les
mov
ret
add
stos
mov
shl
sbb
and
jg
sbb
xchg
mov
lds
jcxz
nop
push
loope
mov
sahf
jb
mov
push
imul
jnp
imul
enter
jge
and
call
add
fxam
jno
sub
mov
add
lahf
in
mov
xor
cmps
shr
push
add
inc
adc
outs
test
fld
nop
mov
mov
je
sub
xchg
(bad)
aam
and
xchg
push
and
test
sbb
mov
jmp
sub
imul
sub
jmp
les
push
push
lea
push
into
mov
mov
mov
push
jmp
movs
ror
xor
or
mov
fdiv
sbb
jmp
es
mov
cmps
leave
add
or
daa
jbe
pop
inc
lods
cld
pop
xor
xor
test
mov
ins
pop
pop
mov
xor
push
aas
inc
shr
xor
push
xor
imul
dec
push
or
adc
popf
nop
xor
push
mov
or
mov
pop
add
adc
mov
lods
push
mov
add
add
jg
and
sar
ja
pop
bound
or
test
stc
mov
jmp
inc
adc
clc
pop
pop
or
dec
push
dec
jne
stc
test
mov
push
ror
inc
int
cmp
ds
mov
ja
iret
xor
add
lods
sbb
ficomp
or
push
cmp
jl
daa
inc
mov
adc
xchg
je
add
jbe
push
ins
sbb
adc
push
push
(bad)
inc
outs
pop
cmp
dec
or
inc
or
add
add
pusha
lock
neg
inc
out
inc
dec
push
in
mul
and
mov
or
pop
ret
test
jb
mov
pop
(bad)
cmc
mov
xor
mov
pop
add
pop
shl
fsub
jp
and
rcl
(bad)
(bad)
hlt
ret
pop
and
xor
dec
adc
mul
movs
outs
stc
gs
test
outs
mov
jp
repnz
shr
inc
pop
loope
ret
stos
or
cwde
push
out
or
popa
or
and
xor
mov
xor
jne
cmp
or
dec
jnp
jbe
call
add
test
jb
push
mov
fadd
dec
push
pop
xor
dec
ror
shl
inc
call
add
mov
mov
sub
ss
sbb
cdq
cli
cwde
pop
cdq
es
aaa
cmp
dec
mov
add
push
adc
and
loopne
jb
sbb
add
jmp
iret
xchg
dec
push
ins
lods
mov
clc
mov
mov
mov
or
(bad)
mov
add
sbb
and
rcr
rcr
aam
mov
push
fcomp
ret
lods
(bad)
je
push
cmp
aam
add
inc
popa
cmp
or
out
mov
(bad)
jmp
sti
sub
and
xor
dec
lar
cdq
int
cmp
in
xchg
cld
mov
push
lds
es
addr16
js
mov
popf
sub
imul
jg
mov
mov
mov
sbb
mov
out
or
or
popf
aam
icebp
mov
mov
ret
mov
mov
les
mov
jge
inc
mov
or
adc
mov
sub
pusha
shl
movs
push
inc
sti
imul
lock
mov
dec
dec
lahf
dec
ret
sbb
cmp
fdiv
sbb
in
sti
mov
sub
xor
daa
in
push
(bad)
in
call
mov
pop
je
sub
xchg
xor
add
test
xor
inc
retf
loope
xor
add
or
or
add
cmp
push
lea
pop
ja
cmp
pop
mov
push
and
lahf
lds
bound
xchg
xlat
add
xchg
and
and
adc
xor
add
and
and
imul
nop
cs
loope
pop
enter
stc
mov
inc
add
cmp
das
loopne
and
adc
jp
sbb
pusha
add
sar
pop
shl
sub
mov
pop
pop
arpl
inc
xor
dec
and
push
inc
or
ficomp
jle
movs
ficomp
shr
mov
inc
dec
(bad)
inc
ret
cli
adc
imul
xchg
add
cmp
mov
xor
adc
inc
add
or
(bad)
int3
test
data16
and
jae
adc
or
fwait
arpl
ret
adc
or
movs
sbb
and
int
or
sbb
aaa
dec
or
sub
adc
arpl
ret
sub
jnp
jb
and
xor
push
mov
pop
xor
cmp
xor
inc
mov
xor
push
cmp
xor
out
add
xor
push
cmp
push
push
ret
mov
or
dec
(bad)
xor
ficom
pushf
out
inc
push
ror
sbb
lar
add
adc
add
dec
mov
xchg
sbb
and
mov
push
xor
inc
stos
nop
inc
push
aam
shr
mov
mov
in
add
sub
addr16
leave
xor
imul
stc
inc
aam
push
sub
or
xchg
push
pop
dec
enter
pop
pop
call
cmp
jne
sub
xor
je
mov
or
add
sub
push
ins
inc
das
cmp
mov
pop
and
sar
and
(bad)
adc
std
sub
pop
or
mov
xor
js
call
je
loopne
paddusb
call
fdivr
mov
cmp
test
scas
cli
repnz
push
jbe
pmuludq
shl
inc
xchg
shl
bound
test
nop
push
push
sti
stos
cwde
cmp
sbb
retf
jne
or
call
inc
mov
pop
pop
pop
pop
fstp
out
jbe
push
lods
sub
add
add
ret
inc
xchg
iret
or
arpl
dec
add
shl
dec
and
jns
(bad)
int3
inc
add
(bad)
add
pusha
xor
(bad)
pop
daa
cmps
dec
push
rcl
sub
and
jnp
scas
cmp
push
sub
shl
repz
iret
clc
pusha
aad
fsubr
test
aaa
push
mov
add
and
and
lods
push
adc
cmp
pop
push
ret
int
push
leave
das
push
shl
dec
imul
loopne
nop
sti
and
lods
push
add
in
rcr
js
lahf
test
mov
inc
les
jmp
cmps
(bad)
(bad)
jns
test
(bad)
es
dec
clc
mov
and
movs
inc
stc
retf
rcr
sbb
adc
dec
getsec
out
adc
std
into
icebp
jbe
and
sbb
rol
xchg
pop
fadd
or
mov
aam
inc
inc
outs
arpl
dec
and
lock
out
pop
mov
jl
mov
lea
or
(bad)
cmp
mov
push
sub
lds
push
pop
and
repz
dec
sbb
add
xchg
adc
mov
push
jb
ja
scas
mov
sub
frstor
pop
(bad)
stc
test
movs
or
adc
into
test
nop
leave
pop
adc
inc
ror
fwait
nop
push
out
inc
mov
xor
cmp
and
jnp
and
adc
mov
jnp
or
fs
push
lea
sbb
ds
and
repnz
pushw
sbb
in
sub
jo
pop
push
in
lods
loope
and
inc
adc
jg
push
cmp
dec
inc
inc
push
push
jecxz
adc
sub
inc
(bad)
es
push
inc
shl
(bad)
dec
call
jno
gs
sub
pop
int
nop
lds
shr
adc
pop
fs
xchg
add
fs
adc
push
inc
jecxz
fs
push
ror
and
movs
xchg
test
pop
inc
and
add
arpl
int
xor
jne
and
(bad)
and
add
shl
rcr
imul
daa
adc
shr
mov
aaa
or
inc
ja
test
add
mov
cmc
fcom
push
mov
loopne
sbb
or
push
sbb
outs
movs
xchg
je
adc
add
xor
xor
nop
out
add
pop
inc
pop
jmp
and
rol
pop
adc
(bad)
mov
aas
pop
xchg
inc
pop
xchg
and
dec
dec
inc
das
inc
inc
xor
or
push
add
ficom
adc
stos
fsub
push
push
inc
xchg
fwait
push
and
xor
and
ss
lss
gs
sti
add
sub
int
jp
mov
adc
rcl
inc
sbb
and
mov
mov
imul
mov
xor
(bad)
pop
jmp
mov
pusha
jne
nop
imul
adc
jmp
and
(bad)
push
stos
inc
dec
jg
and
je
mov
adc
ror
jge
addr16
dec
inc
adc
and
mov
outs
mov
pop
or
sbb
add
outs
add
and
adc
mov
out
add
push
adc
or
test
aaa
nop
mov
push
adc
mov
or
in
(bad)
and
pop
mov
(bad)
add
adc
dec
fmul
push
daa
add
add
and
adc
dec
push
in
lods
xlat
sub
rol
inc
xchg
inc
mov
imul
inc
lods
and
inc
les
lea
inc
int
in
rcr
les
adc
addr16
cmp
jo
push
inc
pop
fistp
pop
cmp
xlat
retf
test
add
push
pop
icebp
into
sub
jnp
jb
mov
mov
loopne
jl
dec
icebp
shl
push
adc
mov
std
out
mov
ret
sbb
mov
inc
adc
fld
jb
and
sbb
pop
retf
adc
or
pop
call
in
nop
lahf
inc
sbb
test
and
aas
push
vrcpps
pop
or
and
cmps
xor
mov
pop
sete
ds
and
jmp
fsubr
add
mov
adc
mov
mov
mov
leave
inc
dec
xor
push
jns
out
pop
push
call
movs
cmp
fsub
add
adc
mov
jle
shl
jmp
cmp
enter
int3
xor
inc
cmp
nop
inc
mov
xchg
cmp
in
je
cmp
(bad)
int3
movs
shr
sahf
out
jae
xchg
out
dec
push
pop
rcl
mov
mov
call
add
push
icebp
xchg
pop
je
xchg
es
mov
aas
inc
scas
adc
lahf
dec
data16
mov
mov
icebp
arpl
inc
mov
arpl
popa
sbb
push
cmp
repnz
cmps
adc
push
add
js
jnp
xlat
rol
add
mov
xchg
xor
mov
call
sbb
rcr
ins
adc
mov
add
sub
js
sub
loopne
jp
int3
push
dec
popf
mov
jmp
xor
pop
xor
gs
inc
push
cmp
or
and
imul
(bad)
(bad)
(bad)
loop
add
sbb
je
ret
rcl
stos
and
ins
loopne
inc
xor
stos
add
sbb
call
jne
add
cld
xor
push
or
fbld
adc
and
xchg
(bad)
or
or
or
add
add
xor
jmp
mov
sub
(bad)
lds
inc
jne
adc
xlat
sbb
das
bound
in
mov
inc
xor
sbb
and
test
imul
sub
inc
in
fs
outs
ret
inc
fld
jb
add
popa
mov
(bad)
sub
fst
pop
mov
add
or
fsubr
mov
push
loop
and
sar
loope
or
daa
and
add
or
add
jbe
adc
xchg
das
cmp
mov
dec
pop
add
mov
stos
dec
xchg
sbb
jno
jle
push
sub
or
xchg
xchg
add
je
stos
and
lea
jne
ret
inc
imul
adc
pop
sub
jp
jmp
pusha
in
adc
mov
mov
or
mov
and
add
loopne
or
(bad)
adc
ds
outs
fs
push
lea
(bad)
mov
cs
and
cmp
push
sub
iret
jle
cmp
mov
or
push
sub
js
pusha
call
mov
mov
push
ja
xor
add
add
push
add
add
es
iret
mov
pop
sbb
rcl
cmp
mov
push
inc
in
shl
test
push
dec
xor
sub
outs
aaa
popf
enter
fxch
adc
test
loopne
scas
sahf
inc
pop
or
sub
loopne
(bad)
loope
lods
inc
daa
(bad)
loope
pop
nop
rol
test
and
pop
and
ficom
lock
das
movs
nop
shl
lock
mov
cwde
or
sub
jg
and
out
cmp
cmp
in
add
mov
and
(bad)
leave
sbb
cld
push
pusha
mov
scas
xor
adc
pop
sbb
add
push
push
mov
inc
sub
mov
inc
cwde
xchg
push
test
dec
add
and
push
jbe
sbb
add
add
xlat
add
test
add
mov
loopne
leave
shl
test
or
mov
ror
sbb
daa
out
mov
aaa
rcl
retf
inc
int3
jg
ret
inc
in
mov
jle
shl
test
jg
cmp
mov
mov
das
add
mov
or
and
xor
mov
xor
pop
mov
ins
out
adc
push
add
jo
push
push
fstp
inc
xchg
add
enter
add
div
add
imul
mov
adc
(bad)
dec
add
fsubr
xor
bswap
rol
ror
rol
mov
out
xor
adc
fcom
daa
cmp
jne
cmp
ror
add
mov
fwait
cmp
call
dec
or
sub
jne
xchg
xor
push
or
jmp
dec
xchg
sub
xchg
sub
jb
inc
mov
mov
sub
mov
inc
popa
stos
push
(bad)
inc
dec
jne
xchg
ja
fsubr
and
push
inc
xchg
add
jo
dec
call
inc
stos
pop
pop
hlt
(bad)
test
mov
push
aas
mov
daa
mov
xor
add
daa
int3
movs
mov
add
cdq
das
sbb
rol
shl
jp
movs
test
dec
sub
popa
inc
and
call
pop
rcr
jle
rcl
jmp
gs
lock
sub
imul
push
adc
and
ret
mov
mov
mov
popa
ins
ret
add
and
les
fsub
or
or
test
adc
adc
retf
add
test
dec
or
pop
xor
lods
add
cmp
mov
and
inc
pop
in
add
sub
and
gs
rol
mov
cmp
pop
mov
outs
lea
iret
xchg
ficom
loope
xor
or
inc
sbb
push
cmp
or
mov
push
jno
mov
sub
push
add
adc
mov
and
inc
mov
pop
gs
xchg
and
loop
xchg
rcl
pop
lods
xor
imul
jb
jnp
shl
call
repz
and
inc
add
dec
sbb
push
outs
fldcw
push
call
push
je
movs
in
mov
movs
jne
mov
and
aaa
mov
(bad)
mov
or
mov
pop
jmp
xchg
inc
or
in
sahf
fcom
rcl
inc
ror
ins
xor
sbb
or
adc
add
pop
jp
psubusw
(bad)
loopne
mov
xchg
add
arpl
and
nop
not
retf
(bad)
ror
add
add
jp
jbe
test
cs
sbb
sub
add
clc
sti
xor
mov
xlat
inc
push
push
lea
inc
(bad)
loopne
stos
add
inc
pop
jl
test
xor
gs
add
sahf
mov
push
add
push
prefetch
fcmovnbe
sub
mov
ss
xchg
into
rol
push
sub
and
cs
pusha
mov
es
fs
xchg
pop
adc
aam
sub
fdiv
add
pushf
or
and
pop
or
push
inc
xor
and
cmps
push
test
sub
jl
es
cld
dec
mov
inc
and
addr16
xchg
sbb
mov
fs
mov
add
in
pusha
les
sbb
xlat
test
pop
pusha
call
mov
push
or
dec
ins
clc
push
pop
cli
sbb
push
int3
jle
xor
cld
push
mov
jl
add
push
add
add
lahf
out
data16
xor
cmp
pusha
mov
xchg
lock
pop
mov
out
and
ins
fisttp
daa
in
rol
rol
outs
ins
add
les
pusha
loop
hlt
xchg
or
jle
pop
and
mov
push
xchg
dec
push
btc
add
in
sbb
push
mov
repnz
adc
pop
aaa
pushf
push
int3
cmp
push
mov
data16
(bad)
cld
push
and
iret
add
les
jmp
cmp
rol
ret
jns
jbe
or
xor
push
inc
inc
scas
fimul
mov
or
push
jo
scas
xchg
push
call
push
sbb
push
scas
clc
push
xor
push
in
(bad)
lock
scas
clc
jle
or
add
mov
push
and
lods
sahf
pusha
fdiv
pop
hlt
sub
cmp
push
cmps
iret
pop
xor
sbb
xchg
inc
xchg
jp
adc
js
push
shl
push
(bad)
adc
fild
aas
pop
retf
loopne
jne
pusha
and
shl
mov
or
dec
inc
je
rcr
pop
mov
jo
push
or
sbb
dec
jmp
sbb
mov
fild
mov
dec
ficomp
loope
fcom
ret
lock
push
ins
je
jg
sbb
dec
push
scas
sub
mov
into
lds
xor
mov
fcomp
cdq
add
add
pop
mov
pop
mov
int3
sub
adc
les
push
les
sbb
cmp
inc
nop
(bad)
xor
jnp
div
sbb
addr16
xor
dec
call
sbb
adc
push
pop
push
inc
add
in
xor
add
nop
cmp
mov
xchg
or
cmp
cmps
mov
xchg
sbb
test
dec
xor
clc
popa
xor
(bad)
popa
adc
(bad)
cmp
jle
mov
repz
cmp
fbstp
pop
sbb
jnp
fcomp
shl
shr
sbb
clc
call
add
push
cld
ret
dec
jp
sti
clc
fisub
call
sbb
sbb
adc
adc
pop
pop
add
and
or
pop
xchg
xor
cld
sbb
xchg
jl
adc
inc
cmp
add
dec
and
sub
ds
les
imul
mov
cmp
jb
adc
jns
jnp
out
xor
test
mov
xchg
repz
cld
hlt
cld
repnz
xor
push
div
adc
inc
sbb
jmp
and
push
mov
xlat
or
mov
gs
inc
call
rcr
ret
ss
xor
xor
add
xchg
jb
test
in
sbb
aaa
inc
inc
push
loope
sub
lahf
add
and
test
sub
repz
or
cmps
sbb
jmp
mov
add
adc
cmp
cwde
loopne
cmp
and
je
mov
sti
out
jne
add
jae
push
sar
mov
lds
xchg
sbb
js
fcmovne
and
jmp
sbb
ret
sbb
or
icebp
mov
sub
add
or
xor
add
sbb
test
jg
and
stos
outs
pushf
or
mov
add
and
cmp
outs
ret
dec
and
sbb
(bad)
dec
inc
xor
mov
daa
add
dec
test
xchg
out
adc
fsubr
sub
or
inc
or
dec
call
xchg
shl
fs
inc
cmp
mov
(bad)
in
movs
adc
cmp
loop
push
and
js
fimul
or
mov
out
sub
pusha
mov
test
and
test
jg
ficom
pop
clc
dec
adc
out
inc
movs
mov
or
(bad)
rcr
adc
sub
push
inc
clc
aas
sub
push
cdq
pop
sbb
imul
adc
inc
mov
adc
clc
push
and
or
jnp
dec
xor
cmp
aas
fsub
cmps
add
jecxz
gs
ins
or
mov
xor
ror
stc
popf
icebp
fwait
inc
sub
cmp
xor
add
ret
jmp
jmp
(bad)
loopne
adc
push
in
aaa
out
push
adc
jge
das
fld
aam
test
or
pop
push
and
leave
mov
stc
hlt
loope
pop
aaa
(bad)
adc
adc
cmp
dec
rcl
adc
push
and
dec
adc
clc
adc
add
xor
add
loope
push
sub
xchg
pop
scas
loopne
in
aas
(bad)
hlt
cwde
xor
xor
mov
and
ret
add
gs
or
push
push
adc
push
rol
dec
pushf
dec
adc
jl
ror
xchg
cmp
push
pop
xchg
rcl
xchg
add
cld
rol
ja
pusha
arpl
xor
mov
loope
jnp
jge
loopne
xlat
add
or
rol
jns
jo
sti
sub
shl
xchg
sub
pop
imul
jmp
push
retf
retf
adc
push
pusha
cmp
scas
in
mov
cld
push
xor
or
xor
mov
dec
xor
and
cmp
jae
and
in
xchg
(bad)
sbb
clc
and
push
enter
cld
xchg
cld
mov
inc
adc
icebp
mov
jne
mov
and
add
cwde
clc
cld
loop
popa
lods
iret
mov
call
ret
adc
fisttp
adc
aaa
inc
or
arpl
push
and
(bad)
outs
add
(bad)
mov
xchg
push
pop
adc
lods
xchg
add
push
popa
push
mov
pop
and
loope
jb
and
sub
push
sahf
inc
push
or
scas
add
xchg
inc
jne
(bad)
lock
aaa
hlt
or
std
and
sbb
jnp
clc
push
mov
daa
adc
fmul
les
add
adc
push
xchg
add
sub
stos
dec
inc
push
pop
and
push
jecxz
inc
or
cmps
add
call
push
sbb
inc
mov
push
test
add
int3
ret
push
add
xchg
ror
inc
call
or
outs
fwait
jle
pusha
xor
pop
xchg
push
push
test
mov
imul
and
popa
mov
or
push
stos
push
cli
(bad)
(bad)
je
psrlq
add
les
(bad)
jno
mov
sub
xlat
icebp
js
add
or
in
(bad)
iret
mov
in
or
or
pop
cmp
mov
add
sahf
pusha
call
adc
inc
xor
xchg
xor
jbe
adc
loope
adc
xlat
pusha
stos
add
cdq
call
adc
cmp
adc
rcr
xchg
fnsave
(bad)
je
cmp
lods
in
cmp
(bad)
pop
shr
dec
push
sar
mov
mov
js
imul
dec
and
(bad)
(bad)
loope
test
mov
pop
pusha
fsub
adc
adc
xlat
cmp
or
daa
imul
add
int3
(bad)
or
ja
push
dec
pop
push
(bad)
push
dec
cmc
mov
cmc
or
lods
mov
and
inc
fiadd
push
retf
cmp
clc
sub
dec
aas
repnz
mov
loop
pop
xchg
sub
adc
test
adc
jmp
and
shl
mov
je
adc
mov
sahf
inc
cmp
jo
sub
ud1
add
mov
dec
jmp
mov
int
push
fild
inc
sbb
xlat
loope
ror
mov
test
popa
or
aaa
add
cmps
push
inc
scas
test
inc
jmp
mov
lahf
enter
mov
pusha
xchg
push
sub
add
mov
inc
dec
jge
mov
lds
jmp
cmp
and
inc
ins
xor
dec
imul
(bad)
and
and
clc
repz
sar
adc
or
(bad)
mov
ja
repnz
add
add
pop
jb
clc
sti
mov
mov
and
je
inc
inc
hlt
cmc
test
shl
je
pop
dec
xchg
(bad)
mov
sub
gs
dec
cld
sub
ror
sub
xor
nop
ret
adc
daa
out
adc
in
in
mov
repz
inc
clc
movs
push
push
or
pop
rol
jmp
scas
and
sbb
and
mov
dec
sbb
lods
dec
add
shr
js
out
adc
enter
sub
in
mov
adc
inc
dec
mov
inc
mov
xor
aaa
xchg
mov
jl
inc
das
and
or
or
inc
js
inc
add
xor
loopne
lock
cmp
jl
cld
mov
and
mov
xlat
aad
lea
and
sbb
jp
mov
out
xor
pop
imul
jbe
aad
pop
adc
or
movlps
pop
push
sbb
les
call
aam
push
cmp
outs
or
pop
cmps
and
(bad)
mov
dec
dec
in
mov
and
mov
mov
xchg
and
or
out
mov
add
adc
push
or
mov
pop
aaa
push
cs
or
and
xor
imul
repz
iret
in
jmp
and
sub
(bad)
adc
jne
jg
add
add
sub
cs
mov
jge
xchg
bnd
and
add
xchg
push
pop
psubsw
and
and
les
hlt
cdq
test
jle
loop
das
mov
or
ret
adc
mov
sbb
add
mov
rol
nop
or
sbb
ret
pop
mov
add
lock
mov
das
retf
clc
cdq
cmp
clc
inc
jle
dec
add
add
inc
adc
loope
inc
xchg
loopne
or
add
mov
pusha
aad
das
mov
pshufw
ret
mov
seta
cmp
dec
push
cmc
test
js
adc
mov
cld
jne
or
cwde
jecxz
dec
dec
ja
dec
jle
xlat
or
and
or
pop
xor
cmp
sub
mov
cli
test
scas
dec
out
xor
dec
push
repnz
jmp
ret
cmps
mov
(bad)
cwde
push
add
cmp
and
popa
nop
iret
adc
jmp
adc
mov
adc
das
adc
push
inc
popa
or
lea
and
fmul
xchg
xor
push
popa
jne
xchg
mov
and
adc
xchg
hlt
cdq
jmp
ins
ret
cmp
mov
mov
mov
hlt
inc
mov
dec
sar
cmps
hlt
jg
cs
and
cli
(bad)
jge
jle
test
jo
outs
or
aaa
inc
cwde
or
cmp
jns
stos
push
inc
jg
push
push
sub
xchg
sbb
icebp
cmp
jg
pop
xor
push
pop
retf
pop
mov
push
test
mov
sub
ret
jb
jle
adc
push
lods
ret
xor
jle
aaa
hlt
iret
xor
mov
enter
ins
dec
push
(bad)
xchg
adc
leave
inc
aaa
pop
ret
jbe
test
cmp
mov
pop
or
into
and
movs
pop
(bad)
dec
lea
std
and
sub
mov
cld
cmp
imul
iret
test
pop
dec
int
and
cdq
mov
push
add
pcmpeqd
pop
and
movs
and
shl
lock
lahf
movs
jmp
sar
and
and
ror
lods
or
push
jle
mov
les
jmp
adc
dec
cmp
outs
fwait
test
mov
(bad)
sbb
add
outs
pop
rcr
pushf
in
mov
jmp
pop
inc
jmp
and
pop
xor
xchg
cmp
outs
mov
mov
sub
sbb
and
mov
popf
mov
or
clc
(bad)
jl
hlt
push
push
push
xchg
rcl
call
clc
popf
dec
and
push
mov
and
adc
aas
or
aaa
(bad)
add
aad
test
ret
adc
sti
and
stos
inc
jmp
mov
or
xor
and
push
push
or
sub
aaa
call
daa
outs
out
xchg
sbb
popa
sbb
xor
das
repnz
mov
push
cmp
or
add
daa
push
js
bound
inc
(bad)
jmp
lock
repz
cmp
hlt
cmps
sbb
pop
push
add
add
int
add
add
add
sbb
sub
add
sbb
xor
inc
push
or
push
or
adc
sahf
(bad)
mov
cmp
shr
jb
lea
adc
pop
xlat
add
ror
push
repnz
dec
into
and
mov
shr
dec
pop
add
jbe
fnstsw
mov
cwde
push
dec
jo
jge
loopne
add
jmp
ret
adc
pop
mov
lock
add
in
xchg
in
or
fdivr
dec
adc
loope
xchg
sbb
test
das
imul
mov
mov
pop
je
and
jb
mov
test
xchg
test
(bad)
fistp
or
fs
int
or
adc
adc
cmp
popa
popf
mov
or
cmp
lods
xchg
mov
aad
jl
(bad)
scas
inc
fcomp
pushf
push
enter
adc
xor
cmp
sbb
pop
dec
jb
imul
push
popa
cmp
fstp
add
add
add
inc
add
fisub
inc
add
and
and
inc
push
lahf
push
aas
or
lock
mov
iret
repz
pop
mov
mov
jns
out
test
pushf
test
out
sahf
nop
movs
test
add
xchg
push
push
test
sbb
push
test
sub
adc
xlat
cwde
mov
aas
inc
mov
jae
mov
stos
shl
scas
les
sub
or
push
inc
inc
outs
pop
bound
dec
dec
and
push
inc
pop
sub
imul
pop
inc
dec
push
push
dec
push
lahf
popa
dec
gs
pop
lods
les
dec
dec
aaa
enter
sub
cwde
or
and
push
or
pop
retf
jne
es
adc
jo
push
retf
popa
and
stos
inc
cwde
add
adc
cmp
sahf
mov
pop
jo
push
sar
push
out
push
mov
mov
sbb
imul
and
mov
ficomp
pop
aad
icebp
dec
je
push
fwait
sub
fdivr
sub
or
out
or
pop
add
bound
mov
jmp
sub
pop
stc
mov
push
jne
mov
jmp
xchg
pop
adc
cmp
aas
and
sbb
or
cli
xchg
add
add
add
sbb
sbb
inc
out
bound
xor
mov
pop
out
addr16
jo
gs
retf
pop
inc
std
icebp
scas
mov
fdivr
xchg
lock
popa
pop
add
jge
loopne
and
or
aam
loope
cmp
pop
sub
loope
mov
in
sub
fwait
(bad)
aam
arpl
push
sub
mov
cli
mov
pop
push
mov
aad
mov
ja
lea
dec
les
dec
jne
xlat
rol
dec
adc
or
sar
xchg
dec
fdiv
pop
dec
add
xor
or
out
push
shl
jl
push
add
adc
lds
xchg
mov
and
mov
or
int3
inc
cli
add
cmc
push
pop
dec
fild
retf
sbb
mov
or
and
and
aad
add
ins
popf
jl
sbb
push
push
push
fs
cmp
mov
sbb
cmps
in
and
and
enter
sub
fs
mov
dec
push
pop
out
inc
inc
es
ins
xchg
sbb
and
js
xchg
in
sbb
sub
sbb
loope
(bad)
test
jle
push
nop
or
sbb
cld
aaa
fdiv
fcom
les
sbb
nop
movmskps
cld
adc
fcomp
push
int3
cld
sbb
in
hlt
or
cs
push
add
sar
sbb
add
fsubr
xor
test
ja
dec
fild
xchg
aaa
dec
pop
xchg
cmp
mov
inc
xchg
or
and
jmp
xor
test
and
loope
xor
pusha
mov
fsubr
mov
pop
(bad)
lahf
adc
stc
mov
in
arpl
push
shr
ss
add
dec
test
and
add
pop
int3
xor
and
fcom
std
fs
add
sbb
cs
and
dec
mov
add
push
push
push
inc
fdivr
and
clc
ss
jae
mov
aaa
ss
mov
outs
mov
cs
jg
or
dec
sbb
push
movs
mov
push
jg
and
repnz
pop
push
imul
ds
adc
and
sbb
inc
xor
and
sub
mov
dec
das
fsubr
inc
dec
scas
sti
cmp
dec
movs
and
test
push
pop
cwde
pop
push
mov
jle
mul
jecxz
loope
jne
jo
push
xor
(bad)
pop
ret
adc
test
mul
push
sub
cmp
shl
mov
pop
stos
push
pop
add
mov
pop
movs
leave
jl
int3
lea
mov
add
or
push
call
pop
push
add
xor
mov
pop
lahf
adc
fs
jmp
jb
test
dec
test
inc
test
add
mov
jl
add
inc
xchg
pop
js
aaa
lock
push
repz
and
sbb
les
pop
adc
mov
lds
fdiv
mov
cmp
int
(bad)
jmp
or
pop
or
inc
push
fmul
fild
mov
je
and
in
add
ss
les
outs
push
add
and
mov
add
adc
(bad)
sub
push
sbb
push
inc
pop
mov
mov
and
rcr
sbb
adc
inc
ret
and
push
imul
test
(bad)
fistp
test
cli
pop
push
and
outs
pop
sbb
mov
sub
ds
add
push
sbb
xor
push
sbb
nop
gs
nop
inc
dec
push
inc
in
inc
push
adc
nop
inc
push
sbb
inc
inc
push
sbb
adc
in
dec
sbb
sbb
push
and
adc
mov
or
int
mov
mov
outs
pop
adc
adc
inc
cmp
xor
dec
enter
push
popa
cmp
movs
scas
mov
xchg
cmp
retf
and
xor
or
push
fbstp
cmc
add
push
iret
adc
pop
jo
aam
dec
lods
or
aam
outs
add
cli
jo
add
push
out
jmp
in
push
push
not
pop
xor
or
fmul
add
ss
gs
ror
shl
dec
mov
out
jge
jge
xor
pusha
mov
pop
lock
mov
js
stc
xchg
ret
dec
cld
sbb
je
call
je
call
or
inc
jo
adc
in
add
jg
push
push
mov
js
mov
pop
xchg
inc
inc
fcmovb
imul
inc
cmp
push
mov
pusha
cmp
int3
add
nop
retf
lds
dec
push
sbb
pop
cs
and
push
push
and
into
dec
test
push
xlat
add
xchg
retf
inc
iret
inc
and
inc
cdq
movs
xor
cmp
cmp
lock
cs
jg
sbb
dec
sub
pop
cmp
push
daa
in
xor
mov
js
xor
push
rol
hlt
lahf
inc
(bad)
stc
in
imul
pop
sub
or
arpl
xor
outs
push
adc
mov
sub
ss
out
adc
sbb
and
imul
in
inc
and
jmp
loopne
rcr
cmp
aad
pop
stos
aaa
pop
test
add
xor
push
sbb
bound
mov
mov
daa
sbb
nop
push
jmp
mov
add
lea
shl
popa
xchg
mov
ret
adc
or
cmp
pop
pop
jnp
and
jmp
pop
je
xchg
pop
icebp
adc
inc
sti
push
test
rcr
push
add
push
sbb
add
pop
fisttp
(bad)
and
clc
cmc
(bad)
outs
enter
cld
cmc
adc
lds
add
push
hlt
cmc
leave
(bad)
shl
icebp
pop
enter
ja
adc
pop
pop
rol
mov
xchg
cmc
adc
mov
test
cli
in
mov
(bad)
repz
rcl
xchg
push
xchg
ja
sbb
arpl
push
in
in
mov
ret
push
push
jb
nop
xchg
add
xchg
dec
(bad)
push
xor
or
and
jp
aam
push
loopne
pop
cmps
rol
add
movs
fs
retf
enter
sub
and
and
shl
movs
shl
fbstp
mov
mov
and
lods
mov
push
call
xchg
dec
shl
pop
fs
mov
mov
mov
mov
(bad)
mov
ret
jno
rcl
ins
sub
pop
movs
mov
gs
retf
add
mov
inc
jo
js
js
je
or
xchg
fs
retf
and
cwde
cwde
add
mov
add
or
test
pop
sbb
sbb
add
jl
push
mov
lods
sbb
mov
call
shl
les
xor
and
or
and
cs
pop
div
sub
mov
mov
test
sub
lods
and
adc
push
jb
jmp
and
fisub
jl
inc
dec
mov
fld
in
pop
pop
push
hlt
and
in
or
xlat
pop
cmp
lods
sub
cmp
adc
out
push
das
adc
clc
mov
mov
mov
xor
ficom
add
push
test
mov
dec
ret
mov
jo
fsubp
cmp
push
ret
mov
cmp
xchg
jne
push
popf
adc
xchg
jbe
loopne
hlt
pop
inc
xchg
inc
sbb
mov
nop
inc
sbb
(bad)
push
or
ret
xchg
mov
jmp
pop
daa
and
jb
mov
add
inc
xor
mov
int3
mov
mov
pusha
sub
dec
popa
push
push
mov
xchg
cdq
push
(bad)
pop
loope
add
dec
jge
and
je
add
in
bound
sbb
or
test
es
push
in
inc
es
xor
loopne
in
cld
mov
sbb
xor
in
sbb
sbb
test
fsubr
jno
sbb
dec
cli
xor
adc
adc
add
or
add
jo
add
popf
or
in
add
mov
or
sub
test
mov
mov
lock
in
ins
movs
add
jmp
cmp
xor
inc
hlt
icebp
hlt
push
gs
pop
mov
sti
sbb
test
sub
call
xchg
push
pop
mov
repnz
and
cmp
popa
add
sub
es
hlt
test
addr16
bound
ins
je
rcl
nop
dec
sub
inc
jo
hlt
call
(bad)
repz
sbb
cmp
dec
ret
sub
les
es
aam
cmc
fmul
jecxz
pop
push
cmp
add
stos
inc
push
call
pop
inc
jo
pop
push
add
push
dec
fdiv
fcom
cmp
sar
rcr
(bad)
rol
ja
out
and
enter
mov
pop
es
enter
nop
and
push
sbb
mov
repz
xchg
or
cmp
cmc
lock
dec
aaa
std
sub
repz
add
fnstsw
add
in
je
add
mov
fcomp
add
fs
ret
cmp
jg
jae
pushf
outs
inc
mov
movs
pop
pop
adc
push
xchg
mov
not
pop
mov
stc
pop
push
adc
lea
mov
mov
sub
xor
out
or
mov
xor
or
jbe
xchg
or
(bad)
enter
hlt
hlt
test
or
loopne
mov
mov
dec
popa
or
sbb
test
xor
test
jae
push
sub
outs
enter
pop
movs
and
adc
lahf
repz
pushf
or
pop
mov
rol
clc
push
adc
pop
mov
cmp
fmulp
push
add
and
inc
mov
and
push
hlt
mov
in
mov
rcl
gs
pop
cli
iret
out
mov
sub
xlat
hlt
retf
fild
dec
push
xchg
cli
or
sbb
jp
mov
or
scas
(bad)
sbb
call
pop
push
xor
outs
push
lahf
or
ins
not
push
sbb
jecxz
sbb
in
arpl
(bad)
jge
mov
and
inc
mov
sbb
cmp
in
xor
adc
in
pop
and
add
xor
cmp
adc
lods
sub
adc
cmps
mov
jbe
push
addr16
or
ret
pop
test
test
and
xchg
cmp
dec
adc
nop
sbb
data16
and
mov
mov
pop
push
lock
dec
test
xchg
test
or
cmp
sahf
movs
retf
add
je
clc
aaa
xchg
and
and
xor
sub
scas
lea
mov
sub
(bad)
sar
push
(bad)
rcl
mov
add
mov
rol
push
mov
sbb
and
movs
adc
aad
mov
add
adc
aam
inc
bound
or
sbb
adc
inc
xor
sbb
push
cld
and
pop
mov
ds
hlt
(bad)
int
cs
push
push
clc
add
pop
push
sbb
mov
sbb
outs
jg
lock
and
pop
mov
call
mov
pop
out
loopne
cdq
pusha
test
scas
pop
test
or
mov
sub
popa
adc
inc
dec
scas
mov
lahf
adc
jae
enter
mov
(bad)
sbb
jns
addr16
nop
mov
sub
add
xchg
daa
jmp
sbb
lea
xor
inc
js
psrlq
xor
xchg
stos
popa
xor
in
fdivr
outs
out
mov
leave
xor
push
ret
(bad)
js
push
push
jne
gs
adc
adc
sbb
aaa
ins
aaa
xchg
sbb
daa
cmp
push
or
fdivr
mov
je
add
inc
popf
or
daa
pusha
arpl
fsubr
adc
inc
pushf
fsubr
clc
dec
pop
push
andps
pushf
pushf
pushf
pop
pusha
fs
ins
jo
js
pushf
pushf
pushf
jl
test
xchg
test
fisttp
loopne
adc
cmps
pop
and
or
mov
iret
sub
ins
inc
xchg
mov
jno
fisubr
lds
pop
xor
inc
inc
ror
fbstp
in
fadd
xor
xchg
hlt
mov
push
icebp
pusha
repnz
mul
inc
ins
xor
dec
and
mov
cld
or
mov
xlat
xchg
outs
sub
sub
mov
in
pop
inc
enter
push
call
dec
mov
or
outs
add
fisttp
inc
sub
add
rol
sbb
fisttp
xchg
sahf
int3
sub
mov
sub
addr16
iret
add
pop
xor
fild
aas
popf
pop
in
pop
adc
add
cmp
shl
sbb
les
jmp
dec
cmp
ret
inc
shr
sbb
inc
adc
hlt
mov
xor
add
sub
and
(bad)
fsub
xor
arpl
add
popa
jmp
push
or
pop
aam
mov
sbb
rol
loopne
sub
pop
inc
lahf
inc
nop
into
jle
data16
fsub
movs
test
je
leave
add
cdq
aad
movs
test
xor
cmp
mov
mov
xchg
or
xchg
ja
push
jp
pusha
call
nop
and
mov
arpl
xchg
jmp
enter
add
div
(bad)
add
adc
cmp
inc
mov
xor
cwde
or
sub
xchg
or
loop
nop
or
mov
aaa
add
popa
mov
inc
mov
sahf
jno
add
sub
mov
push
outs
sbb
into
add
packuswb
mov
xor
mov
ss
push
dec
ror
jmp
mov
movs
leave
pop
in
xchg
fld
xchg
inc
mov
pop
dec
jne
dec
mov
test
sahf
add
mov
clc
or
ss
jl
icebp
adc
adc
ret
outs
and
mov
getsec
xor
inc
fstp
mov
cmp
xor
sub
ds
add
ret
xor
outs
jmp
fiadd
sbb
push
xlat
out
jns
push
es
cmp
imul
jae
add
xchg
or
pop
repnz
leave
dec
push
(bad)
fs
xchg
dec
inc
call
ss
jb
dec
in
adc
add
jnp
adc
jb
repz
(bad)
mov
xor
adc
dec
push
and
lock
(bad)
xor
and
movntps
or
aad
bound
(bad)
std
mul
add
push
retf
jge
dec
mov
jnp
adc
icebp
aad
adc
nop
xor
adc
mov
push
jle
(bad)
adc
push
fbld
push
and
mov
arpl
ja
cdq
fsubr
or
mov
dec
ror
cwde
lock
cld
sub
inc
rcl
mov
cmps
retf
cmps
adc
hlt
jmp
adc
leave
and
leave
add
mov
push
jb
les
and
jmp
push
sar
rol
leave
mov
xor
int
mov
imul
cs
(bad)
mov
sbb
adc
and
mov
mov
es
xchg
jmp
ins
inc
ror
push
mov
push
lods
push
in
in
(bad)
imul
ins
test
jl
or
mul
jae
inc
popf
mov
cmps
test
mov
imul
imul
mov
and
xor
lea
cmp
sti
add
push
cmp
push
mov
nop
sub
mov
ins
xchg
test
inc
mov
inc
(bad)
jecxz
jmp
cmp
or
inc
and
mov
lea
mov
(bad)
pop
xchg
gs
ins
or
xchg
lock
adc
cdq
nop
dec
js
je
and
jmp
pop
pop
push
imul
jmp
dec
ins
scas
call
push
mov
push
enter
and
aam
or
sub
js
or
pop
rcl
xchg
dec
sahf
inc
jns
pop
pop
es
ficomp
xor
test
aaa
xchg
and
je
loope
and
hlt
(bad)
mov
and
xlat
jmp
test
cmps
pop
mov
jecxz
cwde
push
loopne
lods
sbb
push
imul
cmp
or
sub
test
jbe
cwde
xchg
js
push
pusha
les
jle
pextrw
xor
mov
xchg
mov
lock
(bad)
bound
stc
xor
dec
inc
(bad)
fadd
(bad)
sahf
retf
cs
sbb
add
add
sahf
pop
jns
add
fwait
je
push
jmp
xchg
icebp
push
out
into
retf
cld
add
or
out
test
sti
jl
and
dec
out
mov
(bad)
mov
(bad)
sbb
fld
push
add
jns
call
in
dec
pop
aas
add
or
out
aas
inc
or
mov
xlat
and
inc
jo
xor
dec
jb
shl
cmps
inc
es
sti
jb
add
mov
sbb
popf
mov
mov
pop
sbb
or
inc
test
xchg
out
test
mov
and
xor
shl
dec
shr
pop
push
and
popf
or
jmp
ret
test
jno
(bad)
cmps
push
loope
popf
mov
pusha
adc
pop
ins
inc
mov
mov
add
aam
imul
or
adc
and
mov
addr16
dec
ss
das
add
loopne
fld
add
sbb
jne
int
in
mov
add
adc
xchg
fldenv
and
lock
dec
sub
or
add
stos
cmp
psrlq
pop
or
dec
dec
call
cmp
jb
nop
jecxz
add
scas
add
outs
test
jne
push
inc
enter
mov
sbb
out
push
aam
mov
mov
sar
test
mov
mov
enter
jl
push
jb
mov
or
xchg
mov
mov
xchg
mov
shl
mov
mov
outs
(bad)
icebp
je
xchg
in
xor
ss
test
xchg
lods
mov
inc
or
iret
test
or
les
pop
xchg
xchg
jns
loope
push
xor
jae
pop
leave
inc
lods
push
icebp
sbb
pop
mov
mov
xor
icebp
inc
mov
sbb
cli
cli
inc
mov
lods
inc
mov
add
pushf
inc
add
jno
mov
push
scas
pop
xor
jb
or
nop
loope
inc
push
adc
cmps
pop
mov
mov
push
je
jge
dec
mov
test
test
xor
sbb
adc
or
iret
add
jp
movs
je
in
daa
fadd
es
xchg
add
sbb
sub
dec
gs
mov
bound
sub
hlt
fild
leave
and
push
and
rcr
push
cwde
mov
icebp
sub
sub
adc
clc
or
mov
repnz
xchg
scas
push
call
stos
fstp
mov
(bad)
bound
push
mov
add
add
inc
call
fistp
jecxz
inc
xor
cmp
test
cmps
sahf
popf
add
mov
out
(bad)
jne
outs
add
sub
inc
push
iret
adc
jp
pop
ret
fadd
push
inc
inc
pop
cmps
jl
shr
movs
call
mov
js
or
stc
cmps
inc
pop
push
(bad)
nop
xchg
mov
ret
daa
or
in
sub
add
push
xchg
jp
fisubr
scas
inc
fcom
add
call
dec
loopne
daa
cmc
fs
inc
inc
xor
cmp
or
daa
dec
(bad)
pop
(bad)
mov
fcomp
pop
(bad)
jo
or
mov
inc
dec
jne
adc
pop
add
sub
sub
mov
ror
dec
loopne
ror
sar
loopne
mov
adc
pushf
or
ror
or
inc
jb
enter
loope
lods
xchg
test
jmp
sbb
adc
xor
mov
adc
and
ret
ror
mov
mov
mov
ret
pop
mov
cdq
les
adc
sbb
movs
retf
clc
ret
adc
daa
jo
clc
adc
in
pop
push
(bad)
mov
xchg
inc
push
push
mov
sub
and
fidivr
repz
les
mov
cmp
fadd
pop
xchg
xchg
push
jmp
mov
xchg
fmul
pop
mov
mov
dec
jb
dec
int3
push
cmc
cmps
mov
inc
movs
adc
jmp
or
xor
lock
popa
enter
not
hlt
dec
ins
es
push
sbb
mov
xchg
daa
mov
add
add
push
or
adc
lahf
iret
adc
test
stos
inc
jmp
and
xchg
imul
inc
(bad)
jb
jb
cmp
jb
jb
sub
and
jo
jb
sbb
adc
inc
nop
xchg
aaa
arpl
les
sbb
or
xor
inc
int
rcr
cmp
mov
daa
pop
cmp
sbb
jnp
dec
push
push
pop
repnz
push
arpl
mov
inc
push
(bad)
jne
xor
sbb
adc
ins
ins
daa
daa
in
movs
imul
pushf
xor
pop
sbb
ror
mov
adc
aam
jb
adc
aam
adc
gs
mov
jle
ins
mov
and
addr16
push
imul
sbb
inc
clc
push
cdq
gs
push
cli
shr
adc
and
dec
sbb
dec
outs
dec
int
mov
pop
ds
xchg
js
sub
call
aaa
xchg
cmp
mov
adc
inc
test
ret
push
mov
leave
ret
add
popf
test
mov
es
popf
in
mov
retf
sub
mov
mov
mov
adc
jo
add
push
cmp
adc
fcmovnbe
test
fdivr
test
int
fsubr
xor
aad
pop
mov
pop
repnz
ror
enter
sbb
js
xchg
push
ins
adc
push
(bad)
jo
lahf
imul
fcom
cmp
cmp
pushf
nop
add
jmp
leave
cmp
les
rol
pop
dec
push
dec
add
(bad)
inc
mov
enter
mov
mov
dec
dec
xor
jns
jns
mov
inc
dec
call
push
mov
cmp
sub
pop
ret
mov
push
inc
inc
cmp
push
adc
cwde
sub
dec
lods
cmp
cmp
mov
int
pushf
pushf
mov
cmc
sbb
mov
mov
dec
adc
jmp
sbb
repnz
mov
nop
xchg
push
or
push
stc
jns
stc
ror
mov
inc
dec
call
mov
mov
ror
add
sub
leave
and
mov
ror
pushf
or
int3
aam
or
fmul
adc
push
rol
pop
push
xchg
mov
shl
or
fs
(bad)
pop
inc
jbe
and
jo
test
or
inc
es
movs
add
and
push
jmp
mov
ror
jnp
imul
fidivr
clc
add
sbb
mov
cmp
out
xor
xor
xchg
int3
ss
mov
xor
fsub
les
aad
xchg
or
cmps
push
and
imul
xor
or
push
ins
arpl
xor
or
xchg
std
mov
adc
outs
ins
xor
mov
cmps
cmp
push
jmp
call
test
dec
ja
fnstcw
imul
fsubr
and
or
in
retf
jo
fwait
mov
mov
or
je
es
out
xor
ds
push
pop
pop
dec
jl
sbb
inc
hlt
adc
jmp
les
les
and
mov
int3
mov
push
and
push
movs
nop
ficomp
iret
xor
sbb
outs
lock
nop
(bad)
nop
xor
jo
mov
je
ja
js
sub
jmp
pop
les
mov
seto
add
push
shl
dec
inc
or
pop
inc
push
fs
sbb
jmp
mov
jae
adc
scas
xor
push
adc
adc
push
test
test
cmps
xor
or
lods
xchg
push
mov
cmp
jo
data16
push
in
mov
rol
add
(bad)
retf
je
ret
imul
xor
rol
in
nop
xor
loope
ret
adc
mov
das
xchg
mov
mov
stos
lods
inc
addr16
fld
nop
adc
loop
in
inc
dec
xchg
fwait
mov
arpl
inc
adc
push
outs
sub
test
push
call
add
and
outs
test
outs
test
or
xor
push
movs
aaa
(bad)
jo
add
popf
sub
loope
xchg
inc
out
hlt
push
cmp
scas
adc
pusha
inc
and
jnp
cld
dec
and
mov
ja
adc
mov
daa
jno
and
jno
movs
add
ja
or
add
jbe
or
and
and
mov
fild
or
xlat
(bad)
dec
push
(bad)
sbb
pop
jmp
mov
clc
push
out
mov
dec
fld
(bad)
sbb
fadd
cmp
push
jl
lea
loopne
ins
mov
push
femms
or
cld
bsr
jo
es
or
adc
push
push
add
fucomip
fcmovbe
bound
dec
rcl
xchg
push
push
jmp
adc
inc
dec
repnz
bound
mov
push
dec
leave
les
outs
add
add
dec
ins
(bad)
jl
adc
jae
pop
xchg
sub
add
jns
inc
jg
inc
jbe
inc
mov
loopne
and
add
cld
in
adc
mov
dec
ds
loopne
dec
jae
cmp
or
sub
ror
cld
push
(bad)
hlt
pop
shl
cmp
je
imul
in
jb
ret
sbb
sub
sub
dec
sub
ins
push
call
test
into
shl
or
cmp
add
pop
clc
add
push
xor
pop
mov
inc
inc
dec
jne
cmps
mov
adc
xchg
push
clc
bound
les
sub
push
data16
pop
pop
dec
jmp
sub
je
call
rcl
les
or
(bad)
enter
xchg
jne
repnz
adc
sbb
dec
lea
mov
arpl
nop
jne
dec
jbe
pop
jb
mov
xlat
nop
push
or
mov
clc
popf
add
add
pop
push
dec
ds
jmp
and
dec
out
push
les
subps
clc
cmp
lods
xor
sbb
sbb
mov
test
imul
mov
mov
fwait
js
retf
mov
test
sub
nop
push
imul
jb
mov
fldenv
bound
sbb
jmp
retf
hlt
adc
fld
and
jnp
mov
mov
sar
dec
cmp
test
sbb
pop
mov
push
cmp
ins
outs
adc
aam
daa
or
ss
inc
push
pusha
call
add
add
ret
(bad)
retf
inc
add
cmp
mul
push
xchg
adc
(bad)
xchg
push
push
sub
lock
lods
movs
sub
out
iret
or
jecxz
jo
xchg
and
or
dec
arpl
hlt
(bad)
xchg
fimul
or
xor
push
and
mov
sub
sbb
ins
xchg
ins
sar
scas
add
ret
les
sub
arpl
(bad)
out
mov
pop
icebp
sub
test
xchg
mov
aas
rcr
pop
call
xchg
in
jge
jne
inc
cmp
shr
dec
ins
jmp
and
xor
mov
pop
dec
cmps
sbb
scas
in
cmp
cmp
inc
cmps
addr16
daa
pop
fsubr
jmp
add
loopne
repz
and
inc
cmps
mov
mov
pop
xor
test
mov
adc
iret
and
push
xor
push
ins
shr
jp
es
pop
push
sub
xor
xor
jne
mov
dec
sub
adc
out
cmp
mov
arpl
sbb
push
inc
mov
ja
inc
shl
add
cmc
nop
adc
adc
pop
nop
retf
pop
pusha
dec
adc
dec
sub
pop
lahf
test
(bad)
xor
pop
xor
mov
lock
mov
and
scas
push
pop
pushf
push
mov
or
add
rcl
es
xor
gs
push
push
push
leave
mov
jge
cmps
xchg
pop
jge
xor
and
and
dec
cmps
pop
sbb
xor
pop
push
xor
add
jo
inc
and
movs
mov
dec
pop
mov
adc
shl
jb
fcom
mov
(bad)
rcl
xchg
xchg
icebp
xor
hlt
xchg
pop
in
dec
or
or
imul
sub
and
add
inc
idiv
cmp
push
(bad)
jb
in
sbb
adc
ds
rcr
xchg
push
dec
pop
mov
pop
repnz
jg
dec
cli
xor
jnp
cmp
pop
or
in
push
adc
rcl
dec
out
mov
leave
test
pusha
call
popa
clc
mov
xchg
push
stc
popa
cmp
sub
jne
cli
std
std
lods
push
imul
and
adc
nop
mov
leave
jno
dec
xchg
fadd
adc
dec
xchg
(bad)
inc
sbb
xchg
sbb
and
stos
pop
movs
mov
and
sub
push
rcl
and
dec
and
dec
push
lea
inc
bound
xchg
xchg
fdivr
aad
xchg
sbb
pop
lock
mov
xchg
pop
test
fisub
cmp
xchg
pop
jo
outs
leave
clts
push
add
int3
mov
jge
test
mov
ret
mov
add
lods
inc
les
int
xchg
pushf
ror
shl
jge
leave
dec
dec
pop
xlat
pop
jmp
sub
add
or
push
add
std
test
or
cwde
nop
inc
and
add
imul
xor
adc
cmp
or
adc
cwde
mov
jb
or
dec
icebp
jo
inc
movs
inc
pop
push
cli
inc
das
mov
or
mov
or
outs
sbb
test
ins
or
loopne
(bad)
sbb
(bad)
and
inc
sub
and
fild
adc
test
les
cdq
push
sbb
clc
inc
push
push
cs
sub
push
sbb
nop
ins
jae
and
jb
adc
cmp
cmp
push
imul
xor
pop
pop
movs
dec
or
adc
push
sub
ss
adc
inc
and
dec
gs
pop
outs
pop
sub
in
mov
push
mov
inc
inc
mov
or
xchg
shl
add
cmps
(bad)
jbe
cmps
dec
iret
movs
int
test
mov
pop
inc
push
bound
inc
adc
shl
jb
push
fs
test
cmp
shr
sub
retf
mov
and
data16
pop
xor
pcmpgtw
push
xchg
pop
leave
test
ja
mov
add
xchg
sbb
cmp
imul
loop
mov
stos
ins
add
sub
(bad)
mov
pop
movs
sbb
cmps
and
and
cmp
(bad)
xor
test
sub
sub
nop
pop
and
jnp
fdiv
xor
pop
xor
cmp
pusha
dec
and
xchg
sub
jb
shl
dec
es
imul
mov
and
fs
jnp
sub
ja
mov
scas
jne
pusha
ror
jo
movs
xor
add
pop
(bad)
mov
push
inc
and
adc
push
jo
jno
das
adc
dec
retf
cmps
inc
mov
pop
dec
in
add
test
mov
mov
clc
inc
push
xchg
inc
repnz
mov
sbb
mov
mov
push
stos
mov
mov
add
sbb
nop
and
mov
mov
jle
pop
in
mov
ins
and
push
sbb
in
add
jecxz
add
retf
mov
bnd
ins
inc
and
inc
lahf
xchg
push
cmp
and
inc
pop
imul
inc
imul
pusha
sub
inc
sub
popa
adc
jp
pop
cld
or
mov
loop
clc
js
pop
mov
fiadd
les
xchg
and
jmp
retf
sub
fist
les
add
int3
enter
inc
or
mov
(bad)
neg
in
inc
js
adc
inc
cmp
ret
test
mov
cmp
sub
pop
inc
aad
enter
inc
and
mov
sub
movs
call
mov
add
adc
into
push
push
or
sbb
mov
cmp
jecxz
ins
in
cld
pop
dec
out
hlt
ins
loop
add
call
(bad)
int3
loopne
add
test
sub
loopne
rcr
sbb
hlt
pop
and
mov
clc
and
stos
fwait
call
pusha
cmp
sbb
adc
cmp
sbb
or
or
fs
dec
adc
xchg
sbb
or
xchg
xor
add
inc
mov
fdiv
sar
(bad)
jl
jg
sbb
push
add
cmp
sub
xor
imul
imul
push
xchg
pop
and
inc
psllq
xlat
xchg
xchg
or
pusha
and
bound
outs
jne
xchg
shl
mov
sbb
int3
fistp
or
fld
sti
dec
mov
inc
or
jae
xchg
out
dec
or
lea
sbb
inc
add
inc
adc
fsub
aam
test
jge
or
mov
push
cmps
adc
xchg
xor
les
cmp
loopne
mov
cmp
xchg
mov
and
mov
cmp
hlt
mov
imul
mov
pop
sbb
push
cmp
mov
aaa
inc
sub
or
movs
push
(bad)
call
and
(bad)
cmps
adc
sbb
mov
cmp
cwde
xchg
mov
fiadd
sub
and
sbb
mov
lea
mov
xchg
push
test
mov
push
sub
outs
js
in
dec
fisttp
pop
(bad)
call
aad
and
ins
ss
je
popa
sbb
imul
mov
jg
push
adc
lea
pop
xchg
jmp
js
mov
adc
cmp
test
and
popf
push
mov
mov
fsub
inc
cmps
int
in
out
xchg
adc
and
cdq
sbb
push
cmp
mov
cld
lea
add
(bad)
push
pop
fnstenv
xchg
loopne
sub
add
gs
add
out
clc
xor
sahf
pop
adc
pop
lea
push
cmp
mov
xor
ror
lock
pushf
xchg
ret
sub
push
aaa
mov
pop
push
mov
add
or
xchg
xchg
addr16
sbb
inc
out
les
sub
(bad)
cmp
fisubr
xor
stos
in
dec
imul
or
dec
aam
inc
sub
and
sub
or
and
xchg
hlt
rcr
adc
add
pop
pop
jae
or
out
sub
sub
fs
dec
mov
rol
pusha
pop
or
mov
cmp
inc
jl
ins
sar
or
(bad)
pop
adc
arpl
jge
mov
les
loop
ss
addr16
xchg
push
dec
pop
mov
pop
push
test
mov
test
add
sub
inc
iret
out
ret
sbb
out
adc
mov
sbb
mov
call
jb
ror
dec
push
pushf
ss
call
pop
das
in
push
enter
imul
xchg
rcr
dec
lahf
jecxz
test
and
jmp
xchg
or
popa
inc
cld
mov
ins
mov
sub
aas
cmp
adc
add
jae
push
and
jb
in
movs
inc
add
add
xchg
and
ret
cmp
add
adc
cdq
addr16
adc
adc
lock
cld
push
add
inc
int
inc
not
xchg
sub
test
(bad)
sar
xchg
or
dec
push
sub
cmp
fsub
cmc
loope
dec
es
mov
movs
stos
or
addr16
dec
aam
mov
mov
call
xchg
or
clc
mov
in
pop
lock
out
aaa
xor
add
pop
rcl
sbb
data16
inc
mov
mov
cmp
(bad)
rcr
mov
out
test
mov
pushf
movs
test
dec
(bad)
push
pusha
les
pusha
adc
push
add
adc
adc
jge
or
pop
dec
mov
fbstp
in
ins
jne
test
xchg
xor
add
aas
loopne
inc
and
je
es
push
fwait
xchg
call
loop
mov
nop
iret
(bad)
movs
adc
xor
fwait
mov
scas
fwait
repnz
shr
or
jp
adc
inc
(bad)
cmp
loope
loope
dec
(bad)
mov
dec
ja
cdq
and
mov
sbb
dec
sbb
xor
call
xor
enter
xchg
cs
mov
mov
retf
push
frstor
aas
cmp
add
mov
cmp
add
sub
pop
or
or
adc
jbe
test
ror
mov
es
and
push
ret
aas
in
inc
rol
inc
clc
inc
lods
sub
cmp
sub
loop
mov
inc
add
mov
sub
and
rcl
sub
mov
leave
cs
test
popf
add
retf
adc
inc
clc
xor
or
xchg
lods
jne
xchg
dec
nop
and
xor
mov
and
lods
dec
jmp
rcl
fstp
lea
push
add
inc
into
adc
cs
push
pop
sahf
mov
outs
fdiv
or
mov
ror
lods
adc
in
adc
sub
sahf
inc
clc
lods
mov
stc
mov
push
pop
es
dec
pop
add
iret
adc
adc
inc
or
push
inc
cmp
pop
(bad)
aad
mov
cmp
xor
test
ja
and
add
(bad)
cmps
js
sbb
jo
es
fadd
dec
pop
or
push
or
pop
add
mov
mov
(bad)
fimul
add
dec
cdq
addr16
je
add
sub
cmps
pop
inc
inc
or
or
loop
inc
add
add
xchg
nop
call
dec
or
xchg
push
or
mov
add
push
xor
xchg
sti
call
mov
mov
mov
mov
data16
in
cmp
je
ret
or
jge
dec
fcmovne
xchg
retf
mov
add
(bad)
out
mov
aas
pop
or
jo
jnp
movs
push
fisub
jl
add
mov
(bad)
or
and
xchg
cld
ja
ret
les
(bad)
adc
sti
aam
mov
xchg
addr16
pop
cmp
xchg
jg
jp
scas
or
(bad)
call
sub
dec
dec
sbb
mov
pop
push
add
xor
adc
mov
inc
or
pop
adc
adc
mov
mov
mov
mov
stc
dec
sahf
pop
mov
sub
add
(bad)
push
sti
inc
lahf
adc
daa
je
jb
and
cwde
xchg
mov
jb
fsub
cmp
adc
(bad)
mov
or
movs
adc
jb
xor
xchg
xchg
sub
xchg
push
in
sbb
hlt
adc
cmp
out
sbb
jnp
(bad)
iret
repz
cdq
mov
cmp
repz
fucomip
repz
iret
repz
push
jne
das
cmp
repz
dec
push
and
aas
mov
mov
xchg
cmp
call
jg
mov
imul
or
nop
nop
mov
and
add
movs
in
add
push
xchg
or
inc
aas
enter
jb
cmps
inc
fisttp
cmp
jl
sbb
inc
shl
stc
push
cwde
aaa
inc
xchg
test
push
ret
test
and
lods
or
mov
adc
loopne
std
retf
mov
loopne
call
fstp
inc
fcmovnb
pop
cwde
aaa
push
xchg
mov
(bad)
aas
cmp
je
jne
xor
mov
pop
push
or
jo
sub
mov
and
jo
repz
ins
add
sbb
mov
sbb
lea
and
and
leave
add
imul
pusha
xlat
ds
(bad)
lea
jg
inc
mov
add
pop
adc
adc
ret
add
mov
pop
je
addr16
mov
popa
mov
inc
adc
test
jo
xor
cmps
popf
rol
clc
cmps
pop
je
xchg
iret
addr16
je
add
cmps
cmp
add
ror
add
dec
xor
push
js
inc
loopne
pop
mov
sub
mov
loopne
pop
sbb
shl
adc
cmp
adc
sbb
scas
iret
inc
pop
jo
lahf
push
in
mov
in
cmps
xchg
test
inc
cs
and
clc
in
arpl
cmp
enter
cmps
xor
int3
and
enter
enter
in
in
fnsetpm(287
sbb
in
les
mov
xor
dec
mov
enter
(bad)
les
or
dec
fbld
dec
xchg
movs
mov
mov
adc
cmp
jns
out
fsub
ins
xor
inc
out
sahf
out
mov
(bad)
ja
out
sahf
or
xor
jnp
push
fild
in
out
cmp
cs
cmp
repz
gs
pop
add
fiadd
fiadd
ss
sbb
ss
dec
test
add
add
rol
inc
push
inc
or
add
pushf
in
dec
jg
sbb
iret
sub
xor
xchg
nop
stos
sbb
sbb
rcr
adc
pop
inc
adc
add
adc
sub
jnp
repz
stos
test
jg
popa
js
xor
sbb
mov
test
push
add
cwde
and
adc
add
in
or
mov
cmp
lods
scas
add
cld
adc
or
outs
adc
cmps
add
sub
(bad)
leave
pop
sub
ja
push
and
jo
cmp
ror
sub
cmc
or
dec
or
dec
das
and
mov
mov
fdiv
iret
cld
pop
outs
aam
lock
ss
nop
mov
dec
mov
in
movs
sub
sub
loopne
jp
test
rcl
cdq
lods
ins
sub
fwait
xchg
(bad)
mov
mov
xchg
sbb
dec
add
sbb
mov
inc
xchg
mov
pop
daa
sbb
fisub
adc
fsub
pop
sub
jno
fsubr
movs
sar
pusha
ror
fbld
xor
sbb
les
sub
dec
add
(bad)
inc
push
dec
fdivr
mov
pushf
and
push
scas
imul
mov
or
cmp
into
in
movs
adc
in
fcomp
in
test
cmp
out
sbb
xchg
dec
mov
mov
cmp
pop
out
fcom
sbb
pop
add
popa
dec
cmp
stos
add
test
push
and
ja
and
aas
jne
or
mov
xchg
retf
in
je
movs
inc
or
loopne
xchg
inc
push
loopne
ret
or
adc
pop
inc
push
movs
sbb
(bad)
add
int
cmp
dec
(bad)
jecxz
inc
sbb
repnz
xchg
clc
sub
mov
int
es
mov
mov
push
pop
in
cmp
and
cmp
mov
dec
fild
es
movs
fsub
loop
fcomp
shl
adc
rol
hlt
xor
lock
sub
or
icebp
or
(bad)
out
data16
and
pop
int3
cmps
sbb
sbb
inc
sbb
sub
push
xchg
add
pop
sbb
test
call
mov
int
add
test
adc
adc
imul
fisubr
and
sbb
sub
mov
daa
xor
cmc
add
xchg
add
sub
xor
mov
(bad)
jmp
xchg
popa
push
pusha
test
pop
or
mov
xchg
lods
push
xchg
push
sbb
cmp
pop
and
or
push
fistp
nop
sbb
stos
pop
sub
jmp
dec
sub
cmp
rcl
and
push
movs
fsubr
push
jmp
or
mov
xor
dec
jb
xchg
sbb
test
in
xor
or
mov
and
cdq
inc
adc
cs
mov
cs
jecxz
xor
xchg
adc
pusha
pop
mov
(bad)
or
lods
jge
dec
jo
sbb
inc
int3
sub
icebp
xor
dec
adc
sub
and
mov
(bad)
mov
int3
fdivr
add
loopne
inc
test
cmp
loopne
les
syscall
in
nop
movs
pop
movs
mov
into
mov
iret
hlt
rol
sub
daa
test
pusha
xor
mov
xchg
or
inc
lock
sbb
xor
add
push
mov
sub
add
xchg
je
jg
lock
mov
lea
lea
movs
add
loopne
fcomp
cmp
or
retfw
les
dec
dec
xchg
lods
lock
nop
add
outs
sbb
leave
push
femms
xor
lods
lds
scas
por
ss
int3
fcmovbe
mov
iret
mov
mov
dec
movs
test
enter
inc
xlat
icebp
inc
movs
xor
mov
mov
mov
(bad)
adc
jl
or
sbb
jmp
dec
inc
adc
jne
add
sbb
stos
enter
mov
rcl
cmp
bound
push
addr16
jmp
and
retf
xor
xchg
jecxz
xor
add
and
cmp
or
dec
mul
xor
pop
aad
pop
adc
test
aaa
cvtdq2ps
add
mov
dec
xor
imul
ret
dec
scas
arpl
pop
outs
stos
add
(bad)
movs
or
inc
adc
add
sbb
into
sbb
add
adc
ror
mov
call
adc
test
add
adc
sbb
div
jno
push
push
or
sub
pop
inc
add
mov
cmp
lock
push
enter
pusha
xor
sub
xor
test
mov
adc
in
popf
sbb
dec
jbe
dec
js
jl
xor
sti
add
add
xchg
mov
adc
inc
lock
mov
mov
xchg
(bad)
cmp
les
popa
in
and
add
lahf
adc
mov
and
push
add
mov
mov
adc
sbb
inc
adc
jns
or
mov
lods
loop
rcr
psubusb
ss
ret
ret
fist
dec
(bad)
and
dec
mov
jne
inc
mov
adc
jmp
or
mov
imul
out
leave
xor
adc
cmps
mov
push
dec
xor
mov
leave
mov
cld
sar
mov
movd
jb
outs
push
push
push
jb
jb
push
push
push
push
jb
jb
push
pop
pop
pop
jb
jb
pop
pop
pop
pop
jb
jb
pop
inc
inc
inc
jb
jb
inc
inc
inc
inc
jb
jb
inc
dec
dec
dec
jb
jb
dec
dec
dec
dec
jb
jb
dec
xor
xor
xchg
fistp
mov
leave
dec
inc
mov
mov
dec
pop
adc
dec
dec
mov
cwde
and
xor
(bad)
mov
rcl
mov
lock
pusha
add
ins
test
mov
cmp
adc
arpl
out
mov
and
add
ret
xor
popa
jo
jae
jl
or
mov
dec
mov
and
pop
push
ret
imul
addr16
outs
adc
and
(bad)
ja
or
mov
xchg
lds
imul
jb
es
mov
in
cs
add
add
repnz
jmp
inc
pop
sub
nop
push
or
cwde
xchg
adc
repz
fstp
lods
out
mov
rcl
mov
loopne
repnz
sub
int3
adc
mov
in
pop
outs
bound
xor
lahf
ror
cmps
dec
mov
imul
cdq
xor
adc
je
stos
je
jl
mov
adc
nop
inc
push
call
fadd
cmp
je
loopne
daa
nop
sbb
add
loop
(bad)
mov
adc
enter
loopne
loope
in
nop
arpl
cmp
and
cmp
mov
push
xchg
int3
pop
(bad)
ins
dec
add
add
mov
shl
cs
(bad)
ret
mov
jns
sar
mov
icebp
sti
add
out
sahf
sbb
sub
sahf
out
push
pop
imul
xchg
sahf
neg
push
mov
iret
repz
cs
push
sti
fild
cmp
sub
sub
rcl
(bad)
fild
(bad)
imul
or
test
call
cld
sub
sub
dec
sbb
xchg
xchg
out
mov
das
push
add
add
hlt
xchg
jns
push
repnz
push
add
adc
xchg
cmps
out
sbb
div
xor
adc
cwde
adc
inc
sbb
iret
lahf
out
jl
int3
mov
mov
shl
enter
(bad)
cs
push
xor
fistp
jmp
punpckhdq
mov
push
scas
push
mov
and
in
pop
mov
and
cmp
mov
pushf
and
and
out
adc
fistp
rcl
xlat
push
loope
out
sahf
out
xchg
fwait
movs
scas
pop
enter
ret
ret
out
ret
jae
mov
sbb
add
or
cmp
pop
call
adc
xchg
addr16
cwde
adc
inc
daa
xchg
enter
cmp
aam
or
arpl
daa
fmul
and
fsub
or
fcomp
or
fcomp
fcomp
fdiv
adc
enter
fcomp
xor
and
and
dec
push
mov
int3
repz
mov
in
push
push
stc
add
repz
or
cmp
repz
push
pop
outs
repz
repz
lea
iret
stos
mov
leave
rcr
sahf
out
ds
mov
(bad)
out
jecxz
test
scas
pop
push
(bad)
cld
sbb
push
add
sub
and
inc
leave
sbb
adc
retf
sbb
sbb
mov
cmp
imul
xchg
cmc
xor
test
stos
jmp
stc
cmp
cmp
dec
push
popa
jns
out
imul
xchg
out
sahf
out
cmps
mov
lds
(bad)
in
test
sahf
or
adc
push
and
das
cmp
addr16
xor
xor
ret
and
jno
xor
fadd
sti
sbb
adc
push
std
push
cmp
ins
neg
mov
and
iret
inc
push
sbb
call
clc
push
cmp
fdivr
les
adc
sub
enter
mov
add
loop
ror
push
aad
mov
out
sti
add
sahf
out
sbb
sub
jns
dec
push
pop
imul
xchg
out
out
cmp
pop
gs
out
outs
jns
lea
mov
xchg
pop
xor
ror
mov
loopne
mov
mov
mov
add
add
pop
xor
int3
stos
aam
fs
cdq
mov
mov
push
sbb
aam
inc
push
sbb
aam
sbb
aam
aam
fs
inc
aam
aam
nop
inc
push
aam
aam
pop
ss
cmp
nop
inc
push
mov
inc
push
sbb
aam
inc
fs
aam
mov
push
inc
int3
jns
iret
xor
push
push
pop
retf
imul
xchg
jns
scas
mov
neg
dec
mov
push
mov
daa
xor
(bad)
sbb
jns
out
and
enter
add
jbe
xor
jbe
push
pop
int
out
and
leave
push
je
aas
xor
lds
int3
mov
ret
popf
into
mov
iret
repz
mov
int
int
loope
iret
repz
cmc
dec
inc
adc
iret
repz
sbb
dec
cmp
repz
arpl
or
xchg
imul
iret
repz
fwait
movs
scas
int
cmp
mov
test
xor
cmps
xchg
push
and
int3
sbb
rcl
sbb
enter
shl
and
and
and
rol
rcl
rcr
enter
rcl
pusha
ins
fwait
cmp
ja
sbb
enter
shl
and
xchg
cmp
rcl
call
jb
push
cmp
jnp
adc
push
and
repz
repz
push
popa
imul
cmp
jg
xchg
popf
cmps
mov
iret
repz
(bad)
jecxz
call
aad
fistp
out
repz
pop
adc
ror
pop
enter
push
shl
scas
jns
ja
shr
(bad)
cs
xor
adc
adc
xchg
es
fsubr
xlat
inc
push
jb
add
adc
mov
jbe
add
jl
ins
fwait
ds
icebp
stos
dec
rcr
popa
imul
jae
xchg
out
scas
mov
jns
xlat
loope
cmc
dec
out
sahf
test
neg
push
inc
dec
push
in
int3
icebp
pop
rol
ret
pop
aam
in
push
pop
add
add
mov
(bad)
pop
ins
out
mov
add
cmp
scas
adc
mov
lods
aaa
sahf
or
push
xchg
cmp
sar
cmps
mov
(bad)
iret
repz
(bad)
in
idiv
repz
push
or
adc
cmp
repz
aas
hlt
cmp
outs
xchg
aam
jmp
das
cmp
mov
adc
inc
or
pop
cs
sbb
das
fadd
inc
clts
fadd
pusha
daa
icebp
add
xlat
out
ds
adc
cmps
scas
(bad)
mov
sahf
int
loope
cmc
jmp
jns
jnp
dec
adc
sbb
jns
cmp
pop
arpl
sahf
out
ja
mov
pop
xor
movs
(bad)
sub
mov
popa
and
xchg
fcom
push
add
nop
mov
or
loope
inc
pop
aaa
jmp
fsubrp
push
mov
cmp
popf
movs
fdiv
cmp
shr
fdivp
cmp
loope
cmc
dec
push
adc
cmp
repz
sbb
iret
repz
dec
pop
arpl
and
in
test
and
loopne
fiadd
push
add
iret
adc
mov
push
xchg
mov
sbb
push
push
(bad)
cld
sbb
iret
xchg
push
stos
mov
mov
sahf
rcr
in
stc
add
jns
test
xor
aas
dec
push
pop
addr16
sahf
out
jnp
(bad)
xchg
jle
push
adc
xor
mov
les
fcomp
sub
add
aaa
sbb
test
pusha
dec
sub
jb
clc
add
xlat
pop
int3
int3
cdq
fst
jl
dec
mov
mov
leave
rcr
out
sti
repz
cmp
sbb
sub
aaa
inc
dec
push
pop
imul
out
cmp
das
fs
mov
sub
scas
and
add
out
mov
mov
push
cmp
sub
adc
das
loopne
imul
outs
sbb
pop
sbb
cmp
xor
mov
ss
test
sbb
add
add
jnp
adc
sbb
fbstp
or
inc
sbb
jns
push
rcr
add
call
xchg
dec
rcr
shr
and
nop
inc
push
jb
jl
pop
in
push
mov
ja
sbb
adc
push
and
cdq
neg
adc
and
pop
cmp
mov
mov
and
cmp
loopne
add
sbb
adc
(bad)
lods
bound
jb
out
push
call
xor
fdiv
adc
sbb
dec
xchg
in
sbb
jmp
mov
jb
adc
adc
in
fadd
mov
adc
fs
ret
push
and
and
adc
adc
sbb
in
dec
or
and
jb
xor
or
int3
int3
int3
int3
or
repz
push
mov
sub
adc
push
sbb
int3
int3
int3
sbb
int3
int3
int3
dec
push
inc
push
int3
mov
jno
int3
repz
out
imul
push
lods
mov
ror
jns
repz
ds
cmp
repz
sbb
iret
repz
dec
push
popa
imul
cmp
jecxz
not
repz
mov
lahf
cmps
stc
cdq
loop
lods
mov
mov
leave
rcr
out
cmp
jnp
sti
add
and
aaa
inc
dec
push
pop
iret
repz
imul
cmp
jnp
or
adc
repz
cmp
outs
cmp
repz
or
rep
add
repnz
jo
mov
cmp
nop
loop
ja
jecxz
call
inc
jecxz
les
lock
add
or
lds
not
pop
adc
leave
(bad)
mov
add
push
inc
and
test
sbb
push
popa
lods
scas
mov
pop
inc
and
pop
test
pop
shl
add
or
movs
pop
les
or
pop
add
sbb
hlt
and
jns
cli
sub
call
inc
adc
push
movs
je
sub
in
adc
push
pop
vpshufb
scas
sub
push
stc
mov
adc
in
aam
mov
pusha
push
ins
inc
sub
lods
loopne
out
loope
and
dec
les
or
mov
std
jne
in
lds
test
bound
sub
imul
retf
adc
or
out
xchg
mov
adc
mov
arpl
and
adc
sub
pop
cmps
imul
mov
iret
and
ins
ret
pop
xor
xor
les
mov
imul
sub
addr16
aaa
sub
add
dec
aas
hlt
and
adc
push
lock
mov
shr
ret
sub
iret
xor
fs
adc
test
add
mov
mov
mov
je
ror
call
dec
cmps
ins
sub
mov
pop
mov
movs
push
or
jge
lock
clc
push
lahf
cld
dec
jns
xlat
movs
sub
call
pusha
inc
cmp
rcr
cmp
or
je
mov
inc
or
or
push
sbb
push
dec
movs
or
or
jecxz
jmp
std
mov
mov
test
cdq
jmp
call
sbb
int3
js
lods
pusha
push
pop
pop
sbb
popa
jmp
outs
and
and
pop
repz
jmp
adc
push
loopne
ret
lahf
pushf
pop
mov
test
sbb
stos
add
hlt
inc
xor
jmp
(bad)
imul
je
dec
xlat
or
dec
inc
pop
dec
lods
bnd
and
pusha
dec
iret
loopne
aam
je
out
xchg
adc
dec
push
jmp
mov
test
stos
and
setg
lods
mov
(bad)
mov
mov
lahf
dec
in
inc
add
add
repnz
jmp
cld
or
nop
ss
cmp
cwde
jnp
(bad)
ss
adc
jp
shl
push
pop
dec
(bad)
dec
in
xchg
inc
fnstcw
cmp
push
cmps
push
and
loopne
daa
pusha
cld
add
jnp
mov
ja
in
repnz
mov
or
inc
sbb
sub
or
aaa
push
mov
inc
mov
pop
sub
ds
cmp
(bad)
cmp
and
or
push
push
xchg
add
sub
mov
xchg
stos
sbb
inc
push
xor
sbb
adc
stos
pusha
test
das
or
out
mov
adc
fiadd
fs
adc
dec
xchg
or
cmp
ins
(bad)
enter
scas
ins
adc
or
and
xchg
add
pop
xor
add
dec
inc
popf
lock
pop
and
dec
enter
push
ja
mov
sub
add
cs
pop
leave
test
jo
mov
dec
sub
shr
jmp
mov
data16
enter
sbb
and
lea
xchg
cmp
or
data16
pop
xor
sbb
mov
leave
sub
mov
repnz
push
lock
xchg
scas
sub
cmp
movs
repz
sti
imul
jns
adc
hlt
mov
dec
cwde
cmp
mov
add
push
push
inc
xor
mov
dec
adc
and
jmp
loop
mov
cmp
call
enter
hlt
aam
popf
mov
pusha
jecxz
dec
outs
fmul
add
adc
cmc
dec
clc
leave
jne
sbb
clc
not
adc
pop
rol
sbb
dec
sub
sbb
sbb
push
add
xor
or
mov
adc
add
test
adc
jno
js
mov
jg
mov
cld
push
enter
add
xor
and
pop
test
addr16
and
aas
and
cmp
xlat
aad
or
xchg
sub
adc
or
jecxz
and
in
xor
push
pusha
stos
fs
scas
test
push
mov
cdq
(bad)
ins
cmp
mov
psubsb
bound
test
add
push
stc
test
sbb
mov
lahf
loope
pop
inc
sbb
sbb
dec
jmp
daa
or
call
adc
call
adc
test
call
pop
cmp
add
jae
push
xor
dec
movs
inc
and
cli
push
sbb
mov
sti
xchg
cs
and
sbb
lds
adc
jns
jb
sti
retf
or
daa
inc
cld
sub
nop
pop
mov
jo
das
push
std
ins
or
outs
xchg
leave
in
inc
adc
pop
pop
mov
jb
sbb
cli
and
or
leave
add
add
inc
push
repz
and
adc
adc
(bad)
sar
xor
outs
lods
xchg
in
or
add
or
mov
xor
shr
sbb
mov
mov
sub
add
or
(bad)
push
sub
nop
stos
and
adc
enter
retf
add
fmul
mov
cmp
pop
stos
in
mov
ret
outs
or
push
and
adc
iret
enter
add
mov
add
cs
shl
cmps
add
unpcklps
mov
scas
inc
out
test
(bad)
cmps
add
sbb
mov
add
sbb
mov
adc
popf
in
arpl
retf
push
xor
inc
jae
pop
leave
mov
mov
clc
fnsave
int3
pop
dec
gs
cmp
pop
adc
dec
sbb
in
stc
push
scas
test
xchg
std
in
push
dec
aad
push
xchg
into
sub
dec
jno
add
mov
das
fadd
xchg
push
mov
push
inc
repnz
push
adc
push
test
icebp
pop
ror
push
sbb
xlat
dec
mov
pop
push
mov
or
icebp
adc
and
in
das
xor
inc
or
lods
sbb
pop
rol
push
or
dec
xor
or
rcl
sbb
and
adc
mov
jmp
or
xchg
mov
sti
(bad)
add
in
jecxz
xchg
or
xor
push
or
mov
test
adc
push
lock
cmps
adc
and
jg
and
push
or
clc
rcl
lock
adc
retf
outs
cmp
shr
cmp
push
adc
sub
adc
push
ret
add
push
jg
inc
jns
popa
addr16
push
xchg
outs
imul
imul
cdq
or
xchg
adc
mov
adc
rcr
push
cmp
pushf
or
pop
or
or
adc
jno
add
dec
and
lahf
push
mov
inc
mov
dec
bound
nop
or
pushf
jp
dec
stc
xlat
xchg
(bad)
jge
mov
mov
pop
out
les
popa
push
pop
xchg
mov
sub
mov
mov
pop
add
mov
sub
hlt
shl
lds
push
movs
dec
cmp
daa
and
and
sub
adc
xchg
and
inc
out
xchg
mov
test
mov
adc
sar
rcl
cmpxchg
sub
push
or
and
xchg
ret
push
pop
mov
nop
and
or
test
xchg
jne
pop
inc
lods
xor
arpl
dec
add
adc
dec
mov
or
mov
dec
rcr
inc
xchg
int3
xchg
loop
xchg
int3
test
sub
dec
jno
shl
mov
or
and
cmp
inc
out
pusha
push
sub
xchg
sbb
test
and
xchg
stos
mov
or
lods
adc
scas
inc
adc
or
ds
les
loopne
add
pop
test
sub
inc
(bad)
scas
and
inc
mov
jg
adc
adc
pop
inc
pop
dec
adc
adc
ss
ins
jno
sbb
xchg
call
adc
sub
push
loop
enter
sub
adc
push
sub
xchg
iret
inc
push
dec
adc
adc
adc
or
mov
out
mov
jp
and
pushf
pusha
xlat
sbb
dec
test
lods
add
push
inc
or
adc
and
bound
push
int3
sbb
jb
popa
sbb
pop
sub
adc
add
fs
push
adc
mov
loopne
bnd
pop
call
test
out
adc
lods
in
pop
inc
sbb
pop
dec
cmp
or
sbb
mov
ins
cmp
inc
(bad)
push
daa
adc
add
jno
ja
push
dec
ds
inc
sbb
xchg
rcl
or
shl
sbb
pop
(bad)
jno
push
js
or
or
out
sbb
or
nop
adc
pop
aam
sub
in
cmp
(bad)
or
sbb
inc
inc
xchg
adc
loop
sti
adc
pop
inc
lea
mov
movs
sbb
(bad)
mov
outs
clc
mov
inc
int3
sar
das
enter
cmp
dec
xor
sbb
enter
add
call
or
push
in
pop
add
test
sub
pop
push
jmp
or
inc
mov
mov
push
test
jno
cmps
dec
stos
in
repnz
adc
adc
out
mov
nop
push
dec
and
xchg
and
xor
push
sub
call
aaa
adc
enter
adc
shr
fs
dec
dec
fcom
cmp
adc
xchg
and
les
out
xor
test
aam
mov
adc
das
leave
and
(bad)
mov
adc
or
and
nop
out
and
dec
enter
fdiv
pop
inc
and
jae
and
and
push
nop
mov
push
je
je
jns
xchg
and
xchg
iret
jns
shl
and
in
and
add
shr
mov
push
mov
in
call
js
mov
(bad)
add
shl
imul
into
pop
add
repz
dec
cmp
inc
pop
fsubr
mov
pop
jmp
cld
lock
sub
in
xor
into
lock
pop
loopne
in
push
fadd
inc
push
adc
xchg
jecxz
test
jbe
movs
inc
loope
iret
pop
lods
in
sub
inc
daa
adc
push
(bad)
les
(bad)
leave
fdivr
and
and
in
push
and
mov
loop
adc
outs
cld
sbb
leave
mov
out
enter
adc
in
cmp
add
push
and
pusha
add
add
and
adc
dec
test
mov
inc
in
jg
in
lods
das
push
sub
sbb
dec
push
pop
adc
mov
jns
mov
test
xchg
sub
push
sub
gs
push
adc
call
std
sbb
rol
push
jmp
lahf
aaa
inc
sub
repnz
mul
hlt
add
dec
popa
and
clc
dec
sub
movs
rcl
jnp
mov
ret
or
pop
pop
inc
sub
or
push
rol
unpcklps
xor
repnz
imul
inc
sub
xchg
xchg
push
add
or
pop
js
add
add
xlat
mov
fs
inc
es
or
pop
cwde
adc
or
adc
jno
nop
adc
xchg
and
sbb
adc
jo
aam
pop
xor
les
jbe
test
xchg
mov
stos
arpl
das
pop
cwde
add
aas
cmp
xchg
cmp
push
inc
dec
aad
mov
adc
push
adc
test
mov
fistp
test
test
sub
call
in
mov
and
in
mov
inc
add
mov
xor
adc
add
sub
and
or
and
adc
leave
inc
leave
inc
out
and
add
xchg
add
mov
aad
mov
lahf
pop
push
addr16
das
out
repz
or
mov
shr
cmp
ins
adc
mov
ja
sbb
xlat
imul
sbb
shl
jno
mov
cwde
(bad)
jg
cs
sub
jb
ds
or
dec
cmp
out
imul
fisttp
lods
inc
mov
pop
cwde
aaa
push
inc
fadd
dec
adc
sahf
movlps
sub
xchg
rol
inc
clc
mov
push
div
xchg
sar
mov
enter
dec
mov
outs
sbb
pop
or
pop
ret
pop
imul
adc
das
adc
popa
outs
jecxz
or
or
shld
push
pop
in
dec
in
add
enter
out
aaa
xor
lahf
call
outs
iret
lock
inc
cwde
pop
or
jge
fwait
sub
jecxz
dec
or
retf
ret
js
mov
nop
push
and
outs
fs
or
stc
push
(bad)
push
dec
add
mov
adc
jl
or
repz
adc
ja
pop
add
sbb
mov
or
push
mov
nop
lahf
pop
and
outs
mov
nop
and
mov
adc
sub
jmp
mov
cmp
pop
daa
adc
sbb
push
out
mov
push
or
daa
dec
jecxz
and
dec
mov
movs
setg
add
cmp
cmp
and
pushf
cmp
push
add
lahf
in
sub
test
or
icebp
imul
xor
rcl
dec
push
loope
push
cmp
pop
pop
adc
aaa
hlt
clc
call
iret
jnp
fdiv
outs
les
pop
xchg
or
test
xchg
ret
lods
push
outs
retf
sahf
pop
or
repz
es
loopne
pop
pop
inc
(bad)
cmp
sub
sub
push
or
scas
adc
push
add
arpl
or
xor
dec
inc
sub
or
or
mov
xor
pop
sbb
inc
inc
call
frndint
cld
ror
xor
movs
or
sbb
cmp
out
xchg
inc
xchg
sub
add
and
mov
cwde
mov
rcr
or
(bad)
(bad)
dec
cmp
jmp
mov
mov
sbb
das
sbb
(bad)
je
mov
das
sbb
movs
scas
lea
outs
add
es
and
mov
sub
xchg
jge
les
pop
fwait
fwait
pop
mov
adc
xchg
or
inc
scas
cmc
add
rcr
cmp
enter
add
ret
adc
mov
jno
mov
neg
int
adc
add
push
pop
pop
dec
lds
push
sbb
ds
push
and
sub
xor
in
fwait
in
pop
stos
fadd
sbb
inc
add
loop
test
je
movs
ficom
inc
mov
das
dec
mov
add
and
sub
icebp
add
adc
mov
lods
retf
sub
mov
(bad)
or
dec
mov
xchg
mov
and
push
ja
jo
sbb
not
out
and
cmp
xor
xor
daa
dec
inc
(bad)
in
stc
mov
xchg
sbb
push
xchg
imul
xor
loopne
push
mov
jns
cs
adc
adc
dec
inc
xchg
add
and
xor
push
stos
sub
fbstp
pop
sbb
ret
and
jnp
or
xchg
mov
test
nop
scas
push
add
sti
cld
add
xchg
dec
cmc
imul
add
mov
adc
inc
sub
nop
pop
or
daa
xchg
ja
leave
adc
mov
addr16
xor
mov
push
cmp
ins
xchg
pop
mov
sbb
movs
and
or
and
adc
aaa
into
sbb
sub
push
pop
pop
mov
in
pop
jle
cmp
sub
jb
scas
sbb
addr16
pusha
pop
cmps
je
icebp
sub
nop
sub
jo
adc
(bad)
mov
and
sbb
int3
mov
mov
and
pop
xchg
hlt
or
push
push
push
jne
nop
ins
(bad)
ins
pop
dec
lods
stc
mov
push
nop
and
inc
(bad)
hlt
inc
push
jae
icebp
call
or
jns
xor
push
add
jo
push
cvttps2pi
dec
gs
dec
mov
adc
sti
push
xor
dec
outs
outs
adc
push
sbb
sar
or
inc
rcl
push
or
mov
pop
mov
ret
cs
adc
sub
cmc
sub
jmp
mov
ror
das
ja
jb
and
adc
add
and
inc
rcl
ret
out
xchg
push
daa
sbb
or
jecxz
stc
outs
xchg
daa
pop
cdq
in
(bad)
clc
inc
sbb
mov
sbb
cs
dec
(bad)
pop
xchg
add
mov
push
xchg
faddp
addr16
push
and
adc
scas
dec
popa
cs
sbb
ins
xor
nop
data16
pop
addr16
xchg
popa
xchg
sbb
jb
or
sti
xchg
adc
jne
popa
xchg
ja
sbb
das
cmps
push
ins
mov
pop
dec
mov
xor
adc
pop
das
cmps
dec
rol
in
lahf
ss
addr16
inc
inc
cs
(bad)
sbb
add
push
mov
add
mov
pop
in
xlat
sbb
add
xchg
arpl
xchg
dec
and
sub
stos
mov
sbb
inc
push
dec
adc
and
cmp
ret
mov
pop
pop
mov
or
push
aas
lahf
je
imul
(bad)
cmp
pop
popa
aas
jne
addr16
js
pop
mov
jmp
inc
mov
sbb
pop
or
sbb
push
daa
dec
sbb
fldcw
inc
push
daa
push
daa
sbb
ins
push
inc
daa
add
sub
neg
pop
or
inc
into
imul
and
push
or
jnp
fdiv
xor
push
xor
rcl
and
(bad)
mov
outs
pop
pop
out
sti
lock
inc
ret
je
bound
mov
mov
pop
dec
retf
mov
jne
bound
outs
fisubr
pop
xchg
aas
mov
repnz
mov
popa
add
jo
inc
je
pop
sbb
ror
pop
push
mov
aas
stos
jmp
lahf
sbb
bound
push
mov
push
cli
data16
xor
push
push
cmps
inc
punpcklwd
mov
arpl
xlat
inc
adc
aas
jns
lds
lahf
jns
jo
mov
not
xor
and
or
(bad)
aaa
repnz
lods
dec
push
and
call
xor
mov
imul
mov
iret
repz
or
imul
test
mov
mov
pop
push
jl
out
pusha
add
loopne
pop
iret
repz
rcl
dec
repz
cmp
dec
jg
inc
sub
repz
inc
sbb
cmp
sahf
out
call
out
out
jns
sub
out
sahf
and
push
sbb
out
adc
adc
jl
add
in
inc
add
add
cld
xor
clc
test
out
hlt
je
pusha
in
out
sahf
out
call
repz
loopne
fsubr
inc
fcomp
cmp
repz
rcl
int3
repz
repz
iret
repz
rcr
cmp
iret
repz
and
adc
cmp
mov
dec
pop
jp
cwde
ror
push
sbb
pop
mov
pop
push
fs
pop
push
aas
sub
arpl
popa
fsub
cmp
dec
pusha
dec
pop
pop
jo
pop
lock
mov
xor
mov
and
dec
lahf
pusha
call
clc
iret
pop
arpl
repz
add
les
gs
sahf
out
dec
mov
out
sahf
ror
fabs
jmp
icebp
stc
add
push
adc
and
xor
inc
test
(bad)
jns
je
push
sar
mov
les
pop
add
mov
int
adc
clc
addr16
xchg
or
je
xchg
ja
add
je
adc
cwde
inc
push
push
icebp
(bad)
jno
push
mov
leave
(bad)
retf
mov
mov
jmp
pop
movs
adc
retf
or
fdiv
mov
pushf
xor
xchg
out
clc
push
add
test
mov
or
pop
mov
sahf
and
cmp
sbb
in
(bad)
sbb
add
sbb
inc
fistp
push
or
ret
adc
lea
mov
jns
jnp
jp
and
pop
jle
movs
fistp
popa
fcom
cmp
jb
enter
jbe
sbb
jnp
aas
jg
outs
mov
jle
and
dec
mov
addr16
ins
mov
mov
nop
cmp
dec
data16
js
xchg
jne
xchg
dec
dec
dec
dec
into
setb
fstp
xor
mov
jbe
xor
(bad)
outs
mov
ins
cmp
nop
in
loopne
jle
jb
ja
js
xchg
cmp
aas
ins
sub
rcr
mov
mov
aaa
pushf
pushf
fstp
mov
and
bound
clc
mov
adc
int3
dec
push
mov
push
pop
or
adc
and
xor
out
cmp
push
pop
out
sahf
out
imul
sahf
out
sahf
mov
jns
out
mov
out
jns
out
jmp
sti
add
jns
out
push
adc
and
xor
xor
out
inc
gs
ins
jne
repz
jge
xchg
sahf
cmps
scas
cmp
repz
mov
cmp
repz
out
idiv
fdivrp
jg
pop
aaa
nop
sub
xchg
mov
xchg
mov
(bad)
dec
pusha
mov
in
lds
into
mov
push
bound
xlat
lock
pop
cmp
cmp
dec
push
dec
lods
or
fidivr
stos
lock
lea
mov
sub
jg
das
sub
(bad)
enter
imul
sub
(bad)
xchg
and
test
adc
cwde
mul
(bad)
push
es
and
jbe
ficomp
adc
pop
add
and
add
or
or
add
inc
arpl
mov
push
cmp
add
mov
lods
xchg
ins
pushf
xchg
aad
mov
cmp
xor
fdiv
xchg
pop
pop
xor
arpl
push
jb
call
adc
jb
jl
mov
enter
cmp
cmp
and
js
add
add
xor
inc
push
cmp
sbb
adc
hlt
in
nop
inc
mov
cwde
and
adc
inc
push
cmp
(bad)
push
sbb
out
scas
mov
mov
jnp
mov
mov
cmps
sbb
cmps
add
in
inc
enter
mov
aam
sbb
mov
fld
or
nop
pusha
adc
xor
iret
repz
cmp
sub
push
repz
repz
push
add
jns
nop
sub
out
dec
push
pop
imul
xchg
jns
mov
enter
out
out
lock
add
push
push
sbb
sub
inc
dec
push
jns
out
pop
push
jns
out
call
sahf
iret
fld
mov
inc
mov
pop
mov
sti
dec
nop
imul
enter
mov
int3
cmc
push
and
out
push
ins
pop
add
aaa
add
push
shl
and
xlat
inc
test
sbb
xchg
lahf
pusha
dec
jle
cmps
push
js
and
test
dec
jnp
test
or
xor
ror
out
aaa
lahf
in
push
lods
xor
cs
int3
push
xchg
pop
call
sbb
sar
mov
push
js
les
add
cmps
add
xchg
dec
das
pop
and
jae
sub
das
sub
add
and
jo
ins
mov
movs
mov
inc
scas
shl
add
cmp
je
pop
sub
add
scas
lea
fisub
mov
or
jl
repnz
inc
movs
rcl
rol
sbb
gs
jl
inc
fdivr
mov
or
add
add
(bad)
int3
mov
push
fsubr
pusha
and
not
movs
mov
dec
adc
test
ins
in
or
inc
cwde
pop
xchg
das
in
cwde
or
or
mov
or
xchg
dec
js
mov
or
inc
xchg
pop
push
mov
add
sahf
ds
push
sbb
rcl
sub
jl
inc
nop
add
test
sub
retf
push
or
sbb
inc
mov
dec
inc
or
pop
nop
dec
pop
adc
push
dec
pop
and
mov
xchg
mov
ja
mov
cmp
push
mov
or
outs
test
pop
das
outs
push
xchg
pop
mov
sub
and
inc
xchg
jns
mov
js
ins
pop
sti
je
fnstsw
or
and
dec
movs
and
push
cmp
nop
stos
movs
dec
sub
ins
cmp
retf
add
or
mov
popa
leave
mov
test
cs
add
test
jle
dec
pop
clc
xchg
mov
and
ret
jno
pop
push
lock
sbb
mov
pop
or
adc
pop
add
cmp
add
mov
lock
xchg
sbb
pop
xchg
and
jecxz
push
inc
and
call
lea
or
ins
mov
sub
aam
scas
out
rcl
pop
fimul
adc
mov
pop
mov
push
xor
lea
addr16
mov
push
cmc
sub
ja
imul
dec
je
add
inc
ds
repz
mov
mov
xchg
mov
daa
or
jne
sbb
inc
inc
push
idiv
sbb
and
inc
add
add
sbb
sub
fadd
inc
and
pop
push
jbe
stc
add
ins
ds
(bad)
sti
dec
addr16
add
adc
pop
push
jns
fild
pop
(bad)
inc
lds
mov
(bad)
inc
nop
sbb
iret
(bad)
inc
add
cmp
aas
or
mov
or
repnz
aas
xor
iret
repz
or
xchg
adc
sbb
leave
cmp
ja
ins
pop
push
aaa
add
fidiv
pop
imul
and
lea
test
pop
inc
pushf
sbb
adc
xchg
add
in
xchg
imul
enter
mov
xchg
xchg
cmp
or
jae
or
push
mov
aas
mov
adc
add
push
inc
mov
or
dec
push
xor
sbb
add
dec
cdq
jmp
mov
dec
repz
stos
and
add
or
arpl
stos
xchg
or
or
or
nop
dec
adc
jnp
add
jnp
xor
dec
and
in
push
in
xor
ret
out
mov
pop
mov
push
in
scas
add
test
xchg
js
and
and
xchg
and
and
ja
xchg
add
leave
nop
dec
sbb
sub
push
ror
mov
inc
inc
inc
sbb
rcr
(bad)
or
or
or
sbb
loope
mov
fld
and
in
retf
punpckhwd
icebp
or
inc
push
rcl
cmp
lds
mov
arpl
pusha
mov
adc
xchg
add
call
or
bound
les
or
or
add
out
or
and
inc
xlat
mov
das
push
mov
add
sbb
pop
loop
mov
add
add
rcl
retf
mov
add
add
add
aaa
mov
cmps
movs
sbb
mov
cmp
jle
cmp
sbb
or
push
test
hlt
dec
cwde
out
sub
popa
inc
sub
add
sub
dec
push
fcom
add
and
add
pop
dec
add
xor
rcr
mov
push
add
or
jmp
mov
sahf
mov
xor
mov
imul
sub
add
dec
retf
push
mov
sbb
and
inc
addr16
wbinvd
xlat
imul
mov
xchg
pop
ss
add
inc
inc
or
test
fs
mov
jbe
(bad)
outs
sbb
adc
dec
ds
ffreep
adc
and
ror
push
call
daa
add
inc
test
add
or
cmp
jle
pop
adc
and
adc
int
imul
retf
mov
les
inc
inc
mov
and
inc
adc
sbb
fs
imul
mov
ret
ret
mov
add
mov
dec
pop
imul
adc
add
and
(bad)
or
fs
mov
(bad)
dec
dec
mov
inc
adc
jg
jmp
inc
jno
mov
jb
and
cwde
cli
cmp
add
mov
xchg
in
les
sub
int
or
repz
jmp
pop
fdiv
sub
fs
jg
mov
mov
fmul
dec
ror
inc
mov
test
ret
and
stos
pop
mov
rcr
mov
jp
adc
or
sti
inc
adc
xor
lahf
leave
mov
dec
shl
iret
add
sbb
cmp
dec
ror
ins
xor
or
dec
leave
fisub
fcom
inc
loope
std
ins
(bad)
pop
dec
pop
ins
ins
fsubr
loopne
sub
ret
adc
xchg
test
sub
pop
mov
fs
imul
repz
movs
dec
fstp
add
test
enter
inc
je
outs
ins
push
push
add
mov
sbb
xor
cwde
sub
inc
sbb
mov
inc
push
add
ins
mov
setge
aas
in
lahf
hlt
mov
sub
imul
dec
arpl
pop
xor
push
outs
mov
sub
or
fiadd
cmp
ja
xchg
cmp
pop
or
leave
inc
xchg
pop
jo
jnp
mov
pop
rcr
test
push
outs
add
adc
cmps
add
dec
shl
push
call
aad
(bad)
bound
mov
pop
push
outs
test
jo
iret
pop
(bad)
dec
ror
add
mov
pop
jmp
cmc
outs
gs
add
pop
test
jp
pusha
push
and
dec
inc
sub
js
jle
mov
fadd
cmp
and
ja
pop
xchg
xchg
aam
inc
imul
ja
or
mov
add
dec
jmp
shr
add
lods
and
or
push
fs
(bad)
xor
shr
xchg
jl
imul
jo
xor
fadd
push
inc
ds
push
jmp
pusha
scas
ret
rcl
jne
(bad)
push
mov
push
mov
arpl
imul
mov
stc
fdivr
loopne
mov
aam
add
icebp
aaa
movs
push
sub
pop
mov
mov
mov
dec
mov
jmp
cdq
sysexit
adc
inc
pop
mov
xchg
scas
mov
cmps
jne
lock
xor
pop
and
stc
add
ror
cmc
mov
sti
sbb
jb
sbb
nop
shl
mov
test
add
adc
pop
stc
jne
push
js
or
and
sub
add
imul
pop
mov
mov
cmp
jmp
ret
push
xchg
sti
push
adc
push
sub
adc
xchg
(bad)
fmul
jb
inc
or
nop
das
pop
push
mov
bound
nop
sub
loopne
inc
mov
nop
movs
sub
or
jecxz
sub
repz
mov
out
dec
dec
xchg
pushf
movs
jae
sbb
push
cmp
mov
in
sahf
mov
fadd
nop
ror
mov
nop
cdq
in
adc
pop
add
les
ds
fs
lock
sbb
frstor
mov
mov
je
mov
data16
xor
loope
jg
dec
mov
xchg
dec
add
ds
aaa
push
adc
pop
sbb
leave
and
outs
loope
cmp
mov
adc
or
inc
sub
sbb
(bad)
sub
sbb
jg
out
dec
sbb
xor
gs
add
les
fnstcw
adc
icebp
ins
movs
cmp
pop
jnp
xor
(bad)
and
sub
cmp
in
dec
out
fmul
pop
cmp
xchg
cdq
and
push
xchg
adc
lock
out
mov
sub
sub
bswap
push
ret
jbe
lock
xchg
xor
adc
out
xor
mov
pop
adc
push
xchg
ins
jmp
inc
sub
call
test
mov
jle
add
sbb
adc
or
in
sub
(bad)
ja
fs
mov
sub
rcl
push
retf
push
imul
add
dec
add
dec
cdq
mov
or
and
add
mov
repnz
add
(bad)
les
leave
aam
mov
lahf
jno
call
loope
ror
mov
mov
inc
pop
das
and
or
leave
jnp
push
ror
aam
popa
(bad)
rol
nop
sbb
or
cld
dec
cmps
push
push
fcom
and
inc
stos
or
cmps
inc
pop
add
cwde
dec
jle
inc
mov
lods
push
or
push
or
scas
inc
cmp
xchg
push
fcomp
arpl
push
dec
mov
inc
in
lock
hlt
shl
sub
add
jns
loopne
jmp
xlat
push
clc
xchg
in
leave
pusha
jp
adc
dec
loop
pop
and
imul
xor
jne
test
mov
xor
mov
addr16
cmps
adc
hlt
jne
add
cmp
add
pop
xlat
call
inc
ins
jnp
arpl
xor
or
push
addr16
fmul
sbb
push
pop
cmc
lock
cmp
es
imul
push
xor
lds
jae
(bad)
xchg
lods
cmp
sbb
pop
jl
mov
xchg
mov
call
call
in
sbb
in
adc
aad
repz
jl
or
mov
das
aaa
shl
push
dec
adc
(bad)
and
mov
(bad)
js
dec
push
adc
sub
gs
jno
pop
xor
dec
pop
adc
ret
nop
mov
sub
add
aaa
ins
mov
hlt
scas
jae
dec
loopne
push
xadd
inc
or
add
cli
psrlq
test
xchg
hlt
and
and
popa
lods
push
add
fisubr
add
pusha
das
jge
mov
add
inc
push
mov
mov
and
mov
addr16
mov
aas
fisttp
loope
sbb
or
jle
cdq
aam
push
fdivr
add
or
aas
pop
mov
pop
dec
jmp
(bad)
push
cmp
and
ret
jbe
arpl
sub
xor
dec
push
adc
pop
cmp
movs
in
push
sbb
mov
pop
hlt
rcr
adc
fmul
int
push
in
fcomp
push
mov
jo
scas
pop
inc
enter
rcl
sub
loopne
xchg
jmp
xchg
es
fwait
in
and
addr16
ins
in
sbb
add
xor
mov
mov
lds
mov
xchg
xlat
or
nop
pusha
jae
sbb
dec
jmp
cmp
sbb
mov
cmp
test
add
or
or
out
daa
dec
shl
out
xor
or
dec
js
(bad)
and
mov
dec
loopne
push
(bad)
in
pop
cdq
out
mov
sub
jno
(bad)
cmps
mov
jno
or
cdq
call
ret
idiv
pusha
sub
and
sbb
sbb
sub
inc
fdiv
sub
add
sbb
enter
dec
jae
(bad)
push
out
and
(bad)
sub
mov
je
xchg
cmp
aam
mov
xchg
ror
enter
imul
fld
inc
out
sbb
inc
(bad)
jb
test
in
retf
movs
pusha
adc
mov
adc
in
sbb
and
popa
mov
push
xor
pop
pushf
rol
inc
and
arpl
icebp
adc
add
xor
push
push
lea
les
pop
dec
(bad)
leave
enter
mov
in
inc
pop
scas
retf
xchg
mov
push
xor
cmps
xchg
nop
or
movs
and
push
retf
scas
inc
mov
pushfw
dec
push
add
push
and
add
xor
out
fstp
arpl
hlt
mov
das
clc
test
jb
xchg
mov
(bad)
sbb
inc
adc
cdq
mov
add
mov
push
add
out
stos
adc
push
imul
ficom
ret
mov
mov
sub
sub
inc
cmp
sbb
fsubr
test
dec
xlat
aad
pop
or
in
mov
mov
test
and
div
jbe
or
or
inc
cmp
push
mov
out
cmp
bound
cmp
and
xchg
sbb
push
stos
out
pop
outs
in
clc
in
in
dec
dec
and
inc
push
aaa
cmc
jg
in
jae
jl
adc
and
jo
rcl
mov
inc
pop
sub
sbb
or
test
dec
push
pop
mov
jmp
cwde
xchg
jo
aad
cmp
ds
cld
sub
pop
scas
test
scas
call
lds
sbb
push
jo
mov
fbld
lea
sub
scas
sbb
pop
(bad)
adc
add
xchg
adc
mov
shr
lods
sbb
inc
xor
xor
sbb
add
xchg
or
shl
cwde
pop
xchg
mov
mov
add
inc
xchg
stos
adc
scas
push
mov
push
pop
inc
movs
sbb
arpl
push
pop
sub
mov
inc
dec
jne
aad
push
inc
popf
dec
lea
jne
add
xchg
xchg
xchg
pop
inc
add
(bad)
push
inc
nop
dec
test
cmps
mov
gs
popa
int3
push
dec
addr16
push
rcl
das
sbb
pop
aam
lock
adc
cmp
ja
sbb
add
enter
fild
fadd
inc
enter
cmp
shr
mov
dec
mov
mov
jmp
nop
inc
sbb
mov
lods
lods
push
adc
ja
ror
stc
leave
movs
lea
(bad)
clc
jecxz
push
(bad)
shr
(bad)
rcr
(bad)
adc
inc
sbb
add
inc
add
stos
adc
mov
fdiv
loopne
adc
inc
push
jge
dec
xchg
and
pop
jl
and
push
push
pop
outs
in
mov
xchg
pusha
loopne
mov
inc
imul
and
mov
in
adc
add
add
or
xchg
xchg
inc
or
ins
test
gs
out
adc
rol
and
push
shl
sbb
mov
push
add
das
outs
pop
cmp
ret
pop
std
add
inc
aas
jle
jo
outs
fld
inc
mov
push
pop
and
ss
test
iret
and
pop
gs
loope
adc
xor
sub
(bad)
or
adc
adc
mov
arpl
adc
das
(bad)
in
mov
sub
in
dec
mov
int
dec
nop
cmp
or
or
mov
sub
dec
and
stos
dec
sub
dec
dec
and
adc
or
dec
(bad)
push
cmp
xor
ss
addr16
jb
dec
and
xchg
aam
loopne
pushf
jp
lock
fcom
cmp
fcmovnu
mov
xor
(bad)
xchg
mov
movs
movs
mov
dec
mov
xchg
dec
xchg
ss
stos
inc
xchg
mov
xchg
je
push
mov
and
pop
mov
das
aad
sbb
inc
sub
fwait
mov
shl
dec
ror
je
pop
pop
adc
push
and
stos
loope
fcmovne
aam
mov
aad
retf
pop
xor
mov
and
mov
imul
xchg
js
ins
inc
jle
nop
mov
cmc
xchg
mov
adc
int
repnz
loopne
adc
or
fistp
jecxz
enter
mov
dec
mov
sub
add
jl
jno
mov
shl
jns
mov
mov
sub
jne
push
lods
lods
pushf
xchg
inc
pusha
add
loopne
push
(bad)
rcr
ds
inc
mov
adc
pushf
cwde
loopne
pop
cmp
and
jno
cmp
xor
stos
aaa
das
loop
adc
or
and
inc
sbb
sub
aas
in
cmp
das
xor
aaa
or
xchg
mov
or
xchg
sbb
cli
and
iret
mov
jg
cmp
sbb
pop
rep
cs
sub
int
xchg
loopne
lods
dec
jmp
fidivr
iret
je
jo
das
add
sti
jge
out
xor
sub
add
add
sub
inc
push
and
push
mov
je
ja
push
xor
mov
cmp
fucomi
xor
jae
in
dec
adc
sbb
or
pop
dec
adc
enter
retf
or
xchg
or
iret
iret
or
inc
or
ret
or
ins
or
es
sub
rol
aam
inc
pop
jo
push
aaa
movs
xor
add
sub
popf
mov
mov
ror
dec
in
fimul
sbb
add
xor
adc
pop
add
push
imul
stos
add
ret
addr16
rcr
ret
cdq
jns
dec
inc
lds
add
js
adc
pop
shl
add
mov
jae
imul
sbb
adc
adc
mov
mov
xor
push
mov
inc
loopne
aad
pop
xchg
mov
jg
cdq
sbb
mov
aaa
adc
add
mov
xor
adc
cmp
xor
mov
or
cdq
or
(bad)
cwde
outs
xor
adc
xor
xor
mov
and
popa
inc
aad
add
mov
std
hlt
pop
repnz
sbb
call
dec
aaa
inc
shr
nop
mov
inc
xchg
sub
clc
mov
dec
add
in
mov
lds
in
gs
fwait
add
cdq
dec
xor
leave
mov
and
fnstsw
imul
das
sar
mov
pop
jo
shl
loope
adc
rcr
repz
popa
jmp
mov
sbb
push
xor
outs
stc
push
add
rcr
and
cdq
adc
cmp
jl
jg
pusha
push
loopne
or
adc
inc
inc
push
rcr
inc
adc
adc
(bad)
jne
sub
push
arpl
nop
push
add
mov
pop
or
push
es
movs
stos
test
fsubr
push
add
in
pop
push
stos
pusha
out
jmp
push
xchg
ins
push
pop
mov
fs
hlt
lock
imul
out
sbb
fnstenv
mov
and
sub
(bad)
mov
cmp
sub
xchg
test
push
cmp
arpl
sub
xchg
sbb
aaa
inc
lahf
or
popa
iret
mov
xchg
cmp
cdq
lea
test
add
adc
jle
repz
dec
enter
mov
iret
daa
into
push
lock
mov
aad
jno
push
mov
ss
test
inc
jne
or
leave
in
pop
(bad)
mov
ret
inc
les
cmp
aam
fs
repz
pop
sub
fadd
pop
jmp
movs
mov
add
fcom
inc
and
pop
mov
pop
pop
adc
and
ret
test
pop
mov
(bad)
mov
dec
mov
or
lds
lea
jmp
xor
cmp
test
and
hlt
sbb
pusha
mov
mov
nop
call
push
adc
les
repz
retf
inc
aaa
push
nop
sub
sbb
loopne
inc
pop
daa
movs
aas
mov
loopne
jle
(bad)
adc
and
hlt
bound
jno
dec
pop
or
jmp
inc
adc
lods
mov
jmp
mov
sbb
rol
mov
retf
hlt
adc
inc
pop
sbb
xchg
sub
and
scas
addr16
and
dec
jg
or
icebp
xchg
enter
or
xor
ficom
adc
sub
dec
pop
ins
jmp
(bad)
sbb
sub
imul
out
push
js
aas
(bad)
xchg
xchg
dec
mov
push
ins
pop
aaa
xor
xor
pop
mov
or
mov
pop
aam
pop
nop
xchg
mov
mov
nop
add
comiss
sbb
jg
imul
call
xor
cmp
xchg
or
es
cdq
mov
dec
int
mov
or
or
mov
scas
aaa
add
add
add
pop
cmps
movs
shl
scas
inc
push
test
cmps
adc
push
imul
xor
(bad)
push
adc
jle
cmp
test
xchg
mov
adc
xor
adc
cmps
gs
xor
lea
add
and
and
inc
inc
inc
xchg
adc
sbb
loope
adc
add
add
push
adc
xor
shl
shr
mov
mov
mov
arpl
sbb
adc
test
mov
daa
or
xchg
dec
push
cmp
imul
sub
push
add
loopne
mov
cmps
loope
movs
sub
adc
sbb
sbb
shl
push
arpl
cmp
(bad)
out
shl
dec
dec
stc
aad
outs
call
in
inc
jo
pop
(bad)
mov
je
dec
cwde
or
movs
gs
adc
jle
xor
loopne
adc
sbb
and
mov
(bad)
sbb
test
popf
mov
jns
stos
push
inc
jne
(bad)
leave
push
mov
stos
mov
pop
loope
and
in
stos
mov
sub
mov
cmp
or
xor
xor
ret
ja
xchg
cmp
ja
and
jno
add
nop
outs
xor
mov
aam
js
xor
adc
pop
sbb
xchg
adc
imul
shl
push
cli
mov
add
pop
test
das
jne
pop
cmp
push
imul
addr16
lahf
cmp
jp
mov
add
xchg
sbb
sbb
sti
xchg
dec
xchg
test
sbb
das
adc
sbb
pop
imul
gs
popf
stos
mov
and
test
in
outs
mov
jmp
add
push
popf
add
movs
shl
pop
xor
lds
jmp
inc
ds
cmc
repnz
sbb
and
fisubr
out
mov
and
sub
inc
mov
add
shl
mov
push
in
lods
dec
jns
stos
mov
pop
fwait
cmp
rcr
xor
lock
scas
jp
adc
inc
bound
inc
xchg
cmp
es
add
and
mov
cli
add
(bad)
ins
xlat
jp
xor
push
call
add
idiv
(bad)
jne
cmp
push
dec
pop
fcom
xchg
retf
fcomp
jmp
repz
retf
mov
add
xor
sbb
imul
add
ins
push
loope
cmp
fadd
sub
stos
add
adc
dec
test
enter
mov
int3
xchg
imul
xchg
or
les
cld
mov
mov
adc
inc
jle
cmps
int3
mov
ret
(bad)
scas
ror
shr
in
cmp
in
push
cwde
pushf
jbe
rcl
mov
loope
adc
push
and
leave
mov
jge
test
int
or
dec
mov
inc
es
dec
out
in
add
xor
push
dec
xor
nop
mov
and
mov
mov
cmp
adc
loopne
test
or
inc
popa
mov
mov
cmps
hlt
push
imul
sbb
push
mov
jo
push
cmc
cwde
icebp
or
shl
inc
ja
xor
and
pandn
out
test
adc
es
push
out
adc
and
sbb
sub
add
sbb
xor
push
jnp
pusha
cs
stos
add
test
sbb
(bad)
mov
sub
pop
push
sbb
pop
shl
dec
cmp
cmps
add
and
sbb
or
mov
dec
mov
(bad)
movs
jno
inc
or
xchg
xchg
ins
addr16
mov
cld
add
and
and
mov
jne
movs
and
pop
pop
adc
cmp
loope
in
jmp
mov
xor
cmp
(bad)
shr
pop
mov
mov
jne
aam
fwait
daa
call
xchg
dec
dec
or
pusha
pop
inc
cdq
mov
mov
loopne
in
mov
inc
dec
mov
ja
call
add
adc
pop
and
jl
js
ja
or
push
stos
je
mov
cli
push
out
js
jl
mov
into
lds
cmps
push
mov
pop
or
pop
dec
cmp
xor
dec
inc
or
fwait
pop
push
sub
push
and
dec
push
sar
es
adc
pop
nop
push
mov
icebp
dec
and
mov
popa
xor
loopne
jns
leave
(bad)
sub
dec
cmps
jg
and
jp
mov
das
push
stos
shl
add
mov
lea
dec
repnz
lock
dec
loope
and
jae
mov
scas
adc
add
cs
mov
cmps
pusha
adc
cwde
push
ror
fcom
loopne
xor
pop
jb
inc
push
fwait
in
aam
xor
xlat
cmp
xchg
mov
rcl
pop
cmp
rcl
aam
mov
sbb
jmp
mov
push
pop
mov
dec
sar
(bad)
loopne
cmp
inc
rcr
sbb
loope
mov
push
xchg
lods
mov
mov
sub
rcl
ret
cmp
push
rcl
and
(bad)
push
or
inc
cmp
push
or
inc
add
xchg
push
repz
push
dec
(bad)
xlat
add
and
xlat
aad
add
or
pop
and
push
lods
outs
in
cld
call
fwait
mov
addr16
mov
mov
call
inc
mov
inc
mov
or
mov
mov
je
or
push
and
test
call
mov
dec
scas
and
cmc
(bad)
mov
imul
add
adc
add
jne
inc
aad
ret
jmp
cmps
loopne
ror
mov
and
bound
xchg
mov
xchg
cs
xchg
jae
scas
test
enter
rcr
mov
stos
imul
pushf
and
mov
xor
test
clc
dec
and
sbb
hlt
or
dec
inc
and
push
push
mov
mov
sbb
mov
fdiv
mov
rcl
test
mov
loope
xor
loope
jne
or
mov
mov
stos
jae
aas
mov
xor
xlat
sbb
or
ds
aaa
test
jmp
inc
cs
mov
dec
jmp
jl
adc
out
mov
cmc
(bad)
nop
pop
movs
mov
mov
pop
mov
movs
add
pop
pop
cmovb
in
loope
cmc
aas
cmp
and
lock
retf
lock
in
mov
in
sub
call
(bad)
jge
or
xor
add
and
or
push
push
pusha
lock
jmp
aam
pop
in
and
pop
je
loopne
push
in
movs
push
mov
add
lods
add
aaa
add
enter
leave
mov
arpl
inc
mov
inc
ret
push
clc
popf
mov
inc
add
pop
dec
jecxz
cmps
pop
retf
xchg
adc
mov
jl
sbb
dec
mov
adc
daa
pop
adc
xchg
ja
les
push
test
dec
or
fmul
out
push
pusha
stc
ins
adc
leave
(bad)
pop
push
fmul
nop
int3
sub
(bad)
rol
sar
xchg
cmp
fsubr
jo
xor
inc
mov
or
push
ror
sub
daa
(bad)
in
add
or
pop
jne
mov
ret
arpl
or
xchg
out
in
sbb
aaa
rol
mov
ds
pusha
inc
add
xor
rcl
or
mov
xor
xchg
add
movs
ret
test
in
push
add
dec
mov
test
loope
xchg
movs
in
pop
cdq
xor
and
mov
mov
movs
cdq
in
enter
sub
fmul
add
sbb
jb
pop
enter
mov
(bad)
dec
adc
out
ss
or
test
ret
mov
mov
sbb
push
repnz
sbb
sub
popa
jne
mov
or
dec
push
lods
or
add
push
dec
stos
cmps
cwde
add
xchg
push
cmps
jmp
cli
addr16
sbb
dec
sub
mov
or
cmp
push
inc
lods
pop
push
mov
sub
push
adc
jmp
call
mov
iret
popf
movs
mov
test
(bad)
mov
mov
(bad)
push
(bad)
ret
jmp
sbb
adc
iret
sbb
inc
mov
jae
adc
rol
or
sub
xor
jo
dec
and
cmps
lods
add
imul
pop
sub
push
and
push
dec
dec
call
lea
cmp
mov
std
mov
call
dec
mov
je
repz
dec
outs
or
cmp
fcom
sub
mov
cmp
call
sbb
loopne
or
loop
inc
dec
arpl
inc
xchg
xor
lods
xchg
sbb
pop
js
or
xor
icebp
js
xor
mov
lods
adc
jo
cdq
push
dec
sub
jne
sub
pop
lds
popa
add
xchg
enter
lea
add
outs
sub
clc
add
xchg
ficom
adc
retf
je
test
and
adc
mov
mov
add
cmp
pop
jb
aas
cld
in
out
push
pop
and
test
int3
mov
in
int3
mov
cmps
mov
pop
nop
pop
push
push
sbb
sbb
test
push
xchg
lods
cmp
popf
add
mov
out
mov
fmul
adc
and
xchg
pop
mov
mov
ret
xchg
inc
cwde
out
cwde
xchg
inc
push
push
outs
aas
sbb
cs
sbb
ret
xchg
or
outs
and
test
push
sub
mov
loopne
call
rcr
mov
pop
push
push
mov
aaa
nop
push
xor
xchg
rol
pop
mov
inc
mov
out
xchg
nop
adc
adc
outs
adc
dec
pop
enter
pop
addr16
rcr
push
jae
sub
mov
adc
lds
xor
shld
pop
add
addr16
in
dec
mov
or
mov
push
xchg
xor
or
dec
int
retf
aam
imul
xor
push
push
loope
sbb
xor
dec
mov
arpl
lds
mov
mov
shl
push
adc
xlat
push
cld
icebp
bound
sbb
cld
pop
sar
into
and
xor
and
xor
mov
fild
sbb
aaa
push
cmp
xor
sub
cmps
outs
or
cmp
adc
jae
inc
xchg
imul
sub
pushf
pop
sbb
mov
jo
pop
sub
and
mov
(bad)
in
popa
inc
sub
sub
push
cmp
hlt
adc
arpl
push
xor
rol
add
aam
inc
push
imul
leave
addr16
add
enter
iret
enter
inc
jle
mov
sar
xchg
mov
xchg
lods
data16
mov
int
xchg
pushf
sub
je
aam
dec
xor
sbb
jg
imul
movs
xchg
fimul
fnsave
push
test
sub
(bad)
sar
and
fcom
in
jp
movs
movs
pop
xor
pop
lea
pop
call
jnp
xor
add
or
rol
test
rol
pop
je
lea
adc
jo
adc
inc
pusha
xor
cs
jae
clc
push
adc
mov
cs
mov
sub
shl
adc
bound
inc
outs
mov
rcr
mov
inc
add
lods
es
jno
pop
enter
aaa
mov
rol
adc
popf
mov
sub
shl
push
cmp
(bad)
les
cwde
dec
push
add
(bad)
int
and
test
movs
rol
cld
or
cmp
dec
push
int
ss
imul
call
sbb
ror
js
lea
adc
mov
sub
dec
rcr
test
vminsd
dec
xor
cs
sub
daa
add
nop
push
sysret
dec
sub
aam
bound
dec
leave
imul
inc
test
faddp
mov
dec
clc
ret
clc
mov
daa
ja
leave
ins
inc
ret
inc
fcomp
xor
sbb
aam
call
nop
mov
add
jg
or
sbb
cmp
cmp
pop
mov
mov
scas
(bad)
push
loopne
sub
movs
push
xchg
and
xor
xchg
jne
mov
imul
mov
sbb
loope
les
xor
adc
das
stc
in
in
popa
mov
mov
jns
dec
call
aad
int
pop
add
inc
out
call
out
inc
xor
leave
add
aad
popa
xor
xchg
add
mov
movs
mov
aaa
cmp
adc
sub
cmp
ret
cmp
cmps
fld
xor
jmp
pop
xchg
pop
inc
mov
imul
add
xlat
and
mov
ins
(bad)
nop
retf
movs
sub
xchg
xor
cmps
jo
xchg
and
adc
dec
cwde
pop
cs
dec
push
lea
adc
fbld
xor
outs
ficom
sub
jno
mov
in
dec
sbb
mov
push
jbe
retf
idiv
mov
je
sbb
mov
imul
neg
jecxz
or
sub
ss
pop
(bad)
(bad)
mov
xchg
add
xor
sub
mov
or
mov
lds
call
test
add
add
jge
push
sbb
data16
fldenv
push
pop
pop
adc
or
pushf
out
sahf
in
int3
add
dec
lods
push
clc
nop
push
hlt
js
out
in
lock
in
pop
loopne
leave
repz
fdiv
rcr
xor
int3
or
cmp
dec
in
les
xlat
sub
fld
xchg
mov
les
mov
ret
inc
lods
popa
lods
outs
test
inc
lods
adc
jg
movs
int
ins
outs
and
push
pop
add
or
adc
fnsave
movs
aad
fdiv
add
push
loope
dec
cdq
pop
add
sub
fwait
inc
fidivr
sub
push
sub
test
iret
out
rol
aad
pop
imul
dec
push
bound
pop
xor
sub
pusha
or
sub
nop
cmp
mov
popa
xchg
dec
shr
imul
push
mov
std
sysexit
jb
jb
ss
cmp
jb
jb
cmp
cmp
jp
jb
ds
and
std
mov
loope
xor
mov
xchg
sub
sub
sub
mov
dec
push
shr
mov
inc
and
pop
iret
clc
and
cs
pop
adc
jo
dec
xchg
(bad)
and
dec
adc
popa
popa
and
jo
retf
invd
inc
arpl
cmp
addr16
pushw
push
test
and
jne
jecxz
sbb
sbb
mov
lods
push
mov
push
mov
(bad)
mov
sbb
sub
add
je
clc
push
nop
xor
addr16
aaa
or
inc
and
shl
push
push
or
xchg
addr16
or
or
or
push
push
xchg
ss
cwde
in
inc
dec
push
call
fistp
push
and
out
inc
inc
inc
and
mov
bound
ja
push
shr
arpl
sub
dec
or
push
sub
add
(bad)
rcl
xchg
xchg
mov
and
imul
and
or
xchg
adc
xlat
cmp
mov
mov
xor
call
mov
and
xor
jp
aas
rcl
repnz
pop
repnz
add
lds
xor
ror
and
push
push
inc
daa
cmp
lock
mov
ror
mov
sar
mov
pop
push
add
lods
mov
imul
fld
ret
mov
add
ficomp
adc
add
cli
mov
call
push
clc
pushf
inc
or
inc
lahf
xor
mov
add
mov
retf
rcl
jecxz
inc
and
bound
inc
sub
add
fcmovnu
sbb
mov
push
jo
sub
and
adc
aad
xor
and
std
out
push
xchg
out
dec
xor
mov
inc
ins
loope
rol
add
out
sub
in
dec
shl
push
cld
add
rol
lock
int3
lea
pop
push
aam
xchg
jmp
and
es
hlt
daa
lods
push
mov
mov
(bad)
clc
cmps
push
push
imul
cmps
pop
mov
movs
sub
pushf
mov
and
pushf
push
xchg
mov
in
add
mov
jmp
mov
xor
sbb
fisttp
movs
shl
or
inc
xor
push
in
cwde
inc
outs
jns
lods
cmp
adc
lds
xor
adc
in
les
ret
(bad)
jecxz
jecxz
pop
mov
or
mov
jg
add
or
rol
pop
xor
xchg
in
push
popa
test
xlat
adc
mov
in
dec
pop
add
je
dec
jecxz
jecxz
dec
push
cwde
(bad)
sbb
xor
es
jbe
sbb
cmc
and
sbb
(bad)
shl
dec
push
inc
xchg
and
test
jne
test
std
inc
daa
sbb
bound
adc
adc
or
fadd
sti
xchg
pop
inc
popf
xor
call
xchg
mov
sub
adc
or
into
fisubr
es
test
or
xchg
aaa
and
push
je
dec
push
add
inc
inc
push
push
nop
adc
outs
imul
jns
loop
daa
mov
push
jno
(bad)
lahf
stos
out
dec
ret
add
rol
jge
push
pop
or
test
dec
popa
xchg
popf
rcl
xchg
xor
inc
fdiv
or
sub
in
sahf
sbb
shl
and
pop
aas
sbb
mov
adc
sbb
adc
lock
add
adc
pop
and
and
or
xchg
int3
inc
jno
cmp
cmp
sbb
inc
pop
mov
push
loopne
dec
movs
shl
stos
pop
nop
rcl
enter
mov
cwde
cwde
mov
or
in
jo
add
ret
enter
xor
xlat
mov
in
in
cmp
push
pop
call
lods
mov
jl
icebp
pop
leave
(bad)
adc
pandn
fwait
sbb
adc
xchg
jo
fsub
xchg
inc
cmc
sub
mov
mov
int3
and
add
xchg
xchg
cwde
addr16
and
and
mul
push
pop
nop
pop
and
ss
call
xor
into
and
add
fidivr
add
gs
mov
adc
bound
popa
stos
les
cmp
dec
repnz
mov
pop
outs
dec
imul
sbb
jb
fs
daa
or
or
das
jbe
mov
(bad)
ja
outs
test
cmps
das
gs
outs
loopne
les
(bad)
push
gs
adc
call
scas
enter
pop
outs
ret
inc
inc
add
pop
adc
and
data16
test
mov
aaa
outs
inc
pop
push
pop
ret
push
pop
push
fistp
ss
inc
pop
ins
mov
imul
movs
push
sbb
ja
fbld
mov
jae
pop
inc
test
mov
ins
xlat
push
lock
mov
(bad)
or
pop
ins
js
mov
nop
daa
pop
add
fdivrp
dec
fisttp
popw
out
outs
mov
push
or
and
push
mov
jae
addr16
or
jp
mov
ds
pop
jb
movs
imul
jb
test
sub
fsub
pop
push
scas
cwde
fsub
je
adc
test
ja
shl
icebp
jbe
out
movs
cmp
push
outs
xchg
aam
jne
fwait
dec
call
movs
imul
je
aas
mov
inc
add
push
cmp
(bad)
ja
test
ja
test
xchg
call
sti
xchg
fst
lods
add
inc
pusha
jb
or
daa
pop
xchg
push
mov
hlt
push
(bad)
xor
inc
nop
mov
xchg
in
jbe
xchg
arpl
dec
add
mov
lahf
movs
stos
add
push
in
jp
fs
push
mov
xor
mov
xor
daa
ins
test
or
cmps
test
sar
xlat
(bad)
mov
xchg
add
(bad)
bound
mov
ins
mov
jae
adc
arpl
or
pop
sbb
dec
xchg
xor
inc
outs
pop
cmp
mov
mov
pop
pop
sbb
mov
imul
popa
daa
or
lods
cmc
mov
gs
push
adc
xor
sbb
sub
fistp
jp
outs
outs
je
add
jne
jg
scas
xor
ret
mov
mov
inc
int
adc
xorps
outs
int
or
add
fbld
adc
sub
xchg
sub
mov
jo
ds
cmp
jb
in
ds
xchg
cmp
push
dec
jmp
fild
pop
frstor
aas
push
shl
outs
pop
pop
pushf
or
fisubr
test
or
add
dec
mov
mov
or
adc
xchg
pop
mov
lods
jnp
push
imul
or
jne
mov
sub
imul
(bad)
movs
rol
mov
and
jmp
daa
push
pop
imul
push
cmp
xor
or
cld
cmp
enter
das
movs
sub
aaa
(bad)
and
nop
inc
jmp
pop
cmps
cwde
(bad)
adc
repz
sbb
sbb
idiv
repz
mov
nop
push
add
fidiv
adc
nop
fmul
or
ds
fild
push
pusha
pusha
sub
sbb
rcr
push
shl
push
pop
push
pop
daa
pop
rcl
pop
sbb
adc
enter
or
jo
sbb
ficomp
push
push
pop
add
and
adc
inc
es
enter
adc
sbb
xlat
pop
sbb
adc
mov
hlt
sbb
push
cmc
inc
or
pushf
push
and
adc
aas
jl
ja
(bad)
xor
push
nop
sbb
xor
shl
push
and
push
jo
popf
add
rcl
dec
mov
dec
lods
shr
sub
sub
xchg
(bad)
fsubr
mov
jo
scas
shl
sbb
scas
or
push
loopne
add
inc
and
push
bound
ror
pop
dec
dec
inc
lock
outs
nop
sub
sub
sub
leave
jmp
sar
pop
and
add
cmps
and
add
cmps
push
retf
adc
dec
mov
push
inc
xor
dec
gs
scas
or
(bad)
(bad)
loopne
jb
cli
push
add
pop
repnz
sub
sub
dec
push
fmul
adc
pop
pop
and
add
mov
int
xchg
pop
sahf
clc
in
add
cmp
nop
sub
adc
jge
jnp
fild
and
pop
push
nop
and
das
movs
jae
sub
add
sbb
adc
cmp
add
mov
mov
xlat
mov
pop
in
add
adc
ins
cmp
push
scas
loopne
push
rcr
push
inc
in
iret
jnp
push
loopne
add
mov
ins
dec
sbb
adc
(bad)
jo
pop
cwde
cwde
adc
sub
popw
add
pop
or
pop
and
pop
sbb
sbb
adc
add
jb
idiv
lahf
sti
and
mov
sub
jmp
or
mov
sti
nop
jmp
neg
cld
adc
mov
arpl
xor
xor
iret
pop
aam
add
test
outs
cdq
stc
or
sub
add
sbb
sbb
loope
mov
stos
xchg
xchg
mov
adc
mov
push
pop
adc
jns
pop
push
std
push
lahf
adc
push
int3
pusha
and
cmc
loope
adc
mov
cld
in
sub
and
jecxz
outs
nop
std
div
adc
or
inc
ror
movs
sbb
cmp
and
pop
ret
test
sub
popf
ds
inc
lock
(bad)
jl
clc
movs
cwde
pop
mov
(bad)
sbb
retf
adc
and
push
or
inc
test
popa
aas
in
sbb
push
ins
adc
mov
mov
add
and
inc
rcr
xor
daa
xchg
daa
push
add
push
and
jb
cli
adc
call
cmp
into
cmps
or
punpcklwd
jb
adc
cmp
and
unpcklps
and
sub
mov
dec
adc
xchg
pop
pop
stos
pusha
or
sub
add
pop
fimul
leavew
movs
fisttp
int3
inc
test
push
movs
sub
pop
add
adc
ja
dec
js
pop
ja
mov
dec
rcr
es
mov
je
sbb
adc
cmp
lahf
hlt
add
add
lods
pop
sub
add
clc
inc
inc
mov
sub
inc
pop
ret
ja
xor
xor
sbb
xor
pop
or
mov
and
rol
add
adc
inc
sbb
or
and
or
cmp
outs
add
or
(bad)
popa
rol
imul
add
inc
mul
xchg
sbb
or
add
inc
loope
pop
mov
push
xchg
inc
sbb
sbb
xchg
inc
jne
cmp
mov
add
mov
mov
push
adc
movs
jge
jns
es
(bad)
rcl
cmp
xlat
xor
add
jge
add
into
add
gs
xchg
add
enter
imul
ins
add
ror
imul
es
or
sbb
ret
ror
add
in
jns
jns
icebp
sbb
sbb
pop
test
lock
dec
push
call
xlat
inc
xchg
dec
pop
sub
ret
jge
dec
sbb
lods
xchg
test
push
inc
ins
dec
add
and
cmp
pop
and
or
daa
lock
(bad)
and
mov
lea
cmp
mov
inc
jecxz
and
and
ror
rcr
jp
push
jnp
test
and
test
add
in
enter
addr16
test
shr
add
rol
cli
clc
and
test
xchg
or
inc
push
jns
mov
lock
fs
in
cli
sbb
test
ja
outs
push
mov
cmp
mov
jbe
jmp
mov
les
xchg
sbb
hlt
dec
pop
push
xor
pop
loop
xor
jne
xlat
push
pop
mov
test
es
mov
xchg
(bad)
cmp
or
sbb
or
add
pusha
and
call
sub
or
scas
cmp
adc
out
push
outs
or
lods
ret
mov
inc
in
neg
push
mov
es
or
pop
ins
jne
das
outs
push
adc
test
mov
addr16
lea
out
out
or
or
cmp
mov
and
sub
outs
loopne
imul
mov
lea
test
sub
lods
mov
cmp
in
sub
add
int3
outs
aam
sar
pop
jb
or
enter
or
adc
cdq
pusha
sbb
mov
cmp
and
test
repnz
lods
(bad)
les
pop
add
and
push
jb
mov
rcr
add
add
repnz
add
aad
jp
sbb
adc
and
data16
add
sub
cld
xchg
(bad)
popa
gs
call
loopne
mov
mov
pop
jno
mov
popa
jo
inc
dec
mov
test
mov
lods
mov
enter
add
jmp
cmp
arpl
pop
push
adc
shr
or
xor
add
dec
add
fwait
xor
fs
jg
int
pop
add
sbb
add
test
js
push
ins
or
add
cmp
add
clc
jo
dec
loope
pushf
sar
mov
pop
outs
inc
mov
cld
adc
mov
dec
test
jle
push
mov
inc
cmp
shr
ror
pop
mov
adc
dec
or
in
push
inc
mov
sbb
lds
retf
sbb
or
iret
jle
ret
out
sbb
push
jmp
inc
mov
dec
stc
inc
pop
adc
cmp
xchg
mov
xor
mov
and
pop
mov
icebp
pop
inc
mov
call
push
fmul
pop
(bad)
ins
arpl
aam
outs
xor
sub
pushf
cmp
adc
xchg
nop
adc
cmp
or
or
inc
add
adc
adc
pop
xchg
mov
ret
in
mov
mov
pop
sbb
unpcklps
inc
dec
cmc
sar
push
adc
inc
cmp
les
shl
pop
xor
and
mov
loop
add
dec
bound
outs
sub
es
sub
pop
adc
xchg
lods
xor
adc
add
adc
xchg
int3
or
and
pop
cmps
aad
test
sbb
aaa
not
or
leave
adc
mov
std
push
imul
dec
adc
push
or
cmp
and
mov
loopne
retf
pop
jp
cmps
inc
cmp
aad
add
std
xor
fiadd
jne
retf
xor
sub
push
add
sbb
pop
or
xchg
and
pop
mov
jmp
sbb
or
push
retf
sbb
xor
jmp
push
add
sbb
and
xchg
leave
mov
sbb
ret
dec
add
mov
pop
jg
add
add
xor
es
push
add
xor
jns
cmps
(bad)
rcl
mov
ret
ja
xor
fadd
pop
loop
xchg
test
test
mov
retf
or
jmp
out
mov
repnz
ja
pop
push
cmp
adc
and
in
sbb
dec
scas
mul
mov
pop
test
mov
ja
ror
outs
mov
ret
mov
add
mov
add
inc
fs
repz
call
xchg
mov
mov
xor
hlt
mov
adc
pusha
add
test
pusha
mov
and
xor
push
pop
das
aam
call
push
mov
push
adc
and
push
sub
adc
pop
fisttp
cmp
fistp
dec
jns
or
pop
add
outs
or
fiadd
sub
leave
retf
and
loope
jbe
add
cmp
lea
xor
jmp
sar
shl
pop
sbb
out
clc
loope
ror
cmp
push
rcr
mov
inc
pop
loope
shl
add
ins
ins
push
and
inc
shl
cmp
add
jp
sub
ds
popa
add
pop
mov
pop
pop
inc
pusha
add
xchg
xchg
popf
add
aam
push
sbb
dec
push
ret
sub
imul
mov
movs
inc
mov
in
inc
add
ins
add
push
jecxz
test
ins
or
adc
add
scas
cwde
aas
cld
idiv
inc
jb
hlt
not
xchg
mov
aaa
adc
icebp
imul
or
jge
sahf
dec
add
cmp
ficom
sar
out
pusha
push
and
outs
retf
fidiv
outs
hlt
mov
sbb
outs
ret
fisttp
sbb
jmp
pop
cmp
(bad)
sbb
and
pop
or
and
mov
loopne
dec
cld
rol
add
sbb
lds
hlt
sub
pop
xchg
xor
clc
(bad)
and
or
push
xchg
loope
ret
sbb
pop
sbb
popa
xor
shr
adc
sub
add
pushw
add
inc
jb
add
dec
inc
les
sub
add
clc
dec
pop
and
add
xor
lds
sub
nop
in
cmps
pop
or
add
dec
(bad)
cmp
add
ds
in
pushf
inc
mov
push
out
nop
or
jno
or
or
mov
lahf
xlat
adc
(bad)
jecxz
jbe
loopne
outs
push
out
cmp
aaa
xchg
add
mov
push
xchg
adc
or
sbb
push
(bad)
or
pushf
or
gs
movs
jae
test
xchg
sub
jg
sbb
addr16
inc
or
adc
mov
nop
aas
and
sub
or
in
jb
push
sub
push
nop
sub
les
dec
scas
retf
in
jb
fs
inc
pop
test
test
jns
pop
add
push
leave
add
out
out
cmovb
and
and
and
cmps
and
cmps
xchg
sbb
and
and
daa
inc
fs
and
push
jb
and
add
add
rcl
sti
and
cs
pop
sti
and
xchg
push
enter
and
sbb
mov
dec
mov
lock
nop
pushf
cmp
and
fsub
dec
scas
nop
and
ret
lods
pop
adc
inc
mov
push
stos
adc
sbb
and
and
mov
mov
push
sti
adc
jle
cmp
outs
cdq
jmp
int
or
je
daa
fcomp
and
or
or
dec
or
or
and
add
pop
popf
xor
pop
cmp
stos
push
and
adc
out
mov
out
div
inc
cmp
xchg
out
pop
sub
adc
mov
lods
sub
push
and
push
and
xchg
cwde
push
push
aam
call
dec
fbld
cmp
je
dec
xchg
nop
fistp
enter
cmps
lock
sbb
mov
call
cmps
inc
aam
mov
cld
into
inc
hlt
adc
imul
or
xor
sar
mov
dec
mov
stc
aas
lock
lods
fisubr
adc
pop
adc
out
adc
shr
xchg
fcom
and
xor
into
xchg
repz
add
inc
adc
nop
nop
dec
ja
add
in
sub
adc
pop
pushf
movs
pop
add
mov
cdq
jbe
pop
pop
xor
sti
jl
push
sbb
stos
dec
cs
jl
push
dec
inc
add
add
jae
es
ins
sbb
xor
push
test
test
push
aam
out
aaa
loope
xchg
retf
inc
mov
mov
adc
and
or
push
mov
inc
xchg
inc
xor
pop
cmp
outs
sub
push
or
test
sub
mov
scas
pop
cwde
add
dec
pop
(bad)
sub
movs
add
push
hlt
adc
add
inc
jns
pop
inc
mov
loopne
add
inc
cmp
(bad)
in
lods
mov
daa
repnz
add
adc
stc
add
shr
pushf
xchg
test
and
ins
cmp
sub
and
xchg
(bad)
sub
adc
xchg
push
xchg
inc
addr16
sub
movs
push
mov
push
sub
(bad)
and
popf
lock
nop
sub
ss
movs
es
adc
push
dec
jb
sub
not
jmp
pop
clc
xchg
mov
cs
inc
push
jb
hlt
xor
inc
cs
and
lock
in
leave
int
xchg
in
rcr
jb
pop
jb
call
pop
in
xor
nop
dec
push
test
loopne
leave
and
sub
cwde
fcomp
pop
fdivr
fsubr
aam
push
jb
aam
das
inc
dec
cs
call
or
gs
and
xlat
and
push
add
pop
mov
and
add
pop
les
sbb
adc
and
cwde
ja
push
mov
test
inc
pop
dec
add
sbb
or
pop
test
jno
add
dec
dec
push
add
adc
daa
das
mov
aas
cmp
xor
push
xchg
and
and
cmp
nop
test
mov
add
pushf
out
dec
mov
ins
push
xchg
xor
je
push
movs
and
nop
imul
inc
sbb
inc
mov
adc
dec
pusha
sbb
jbe
inc
push
(bad)
pusha
push
ja
out
xor
pop
xor
sbb
inc
sbb
pop
mov
and
add
jmp
adc
or
hlt
push
add
rcl
and
inc
dec
mov
add
neg
fnstenv
je
mov
dec
pop
loopne
xchg
sub
adc
ins
pop
or
xor
push
or
jne
cmp
jmp
inc
fild
xchg
adc
dec
mov
not
push
ficom
push
outs
push
dec
jge
hlt
out
inc
push
inc
dec
pop
or
sar
add
or
nop
jo
adc
jo
cmp
inc
push
out
bswap
ins
add
ins
add
xor
test
cmps
cmp
push
in
popa
jo
or
xchg
inc
xor
jns
dec
xor
out
cwde
loopne
je
mov
and
mov
and
mov
pop
ds
cmps
inc
sbb
fnsave
bound
jmp
dec
cmp
mov
sbb
movs
icebp
or
inc
les
cdq
shr
clc
jns
mov
inc
add
test
sbb
inc
sbb
pop
sbb
pop
aaa
adc
xchg
push
inc
call
sbb
icebp
push
and
mov
pop
inc
loope
test
cdq
dec
adc
outs
pop
mov
ror
or
cdq
adc
dec
mov
push
xchg
or
pop
sbb
sub
nop
mov
adc
or
jns
sub
aas
dec
cmp
push
push
pop
fist
in
and
pop
test
inc
shl
xor
mov
cmp
ds
pop
in
shl
addr16
mov
push
push
and
daa
push
sar
imul
fnstcw
cmp
cdq
sbb
sbb
adc
mov
enter
or
ds
sbb
sbb
test
psubusw
pop
dec
dec
(bad)
xlat
in
sub
mov
movs
add
dec
and
js
scas
pop
cmp
sbb
add
adc
sbb
mov
push
ds
or
test
iret
adc
adc
and
jo
adc
or
sbb
in
or
enter
fdiv
leave
push
push
or
ja
not
mov
cmp
inc
fisubr
nop
mov
dec
scas
sbb
cwde
and
pop
and
aas
xlat
sbb
cdq
pop
cs
pop
sub
jne
scas
inc
push
inc
jno
adc
mov
and
call
in
in
aad
push
inc
add
shr
xchg
inc
rol
stos
sbb
dec
xlat
mov
sub
mov
fld
inc
xlat
xlat
inc
or
pop
in
and
pop
cwde
fistp
push
mov
sub
dec
inc
popa
ds
adc
test
shr
or
mov
add
jb
mov
and
pop
ins
ins
leave
or
(bad)
push
inc
enter
fistp
and
jmp
mov
mov
dec
pop
pop
aas
and
push
adc
adc
push
sbb
popa
jnp
outs
fs
outs
mov
or
sbb
ss
jno
iret
sbb
and
mov
outs
inc
sub
sbb
cmps
jg
xchg
add
leave
adc
nop
mov
pop
fmul
jo
push
cwde
and
ds
leave
dec
xchg
sub
and
mov
bound
pop
mov
push
and
dec
xor
sub
jne
xchg
nop
and
dec
mov
and
fs
lock
cs
cmp
rcl
mov
inc
das
iret
or
fstp
test
and
cli
dec
dec
test
and
and
test
pop
in
cmps
test
mov
jno
dec
fst
jo
stc
imul
mov
pop
ds
fwait
loop
int
cwde
iret
dec
enter
push
jns
push
push
inc
dec
and
and
mov
cmp
push
ds
add
jo
jo
(bad)
adc
sub
fdivr
pop
or
dec
push
push
dec
push
dec
and
jg
dec
ds
adc
leave
xorps
pop
in
mov
mov
mov
jnp
mov
sub
dec
xchg
dec
fidiv
xchg
and
aas
(bad)
sub
and
inc
inc
in
add
pop
sub
nop
mov
dec
daa
push
in
or
cld
pusha
adc
mov
cmp
ins
dec
fistp
add
aaa
ficom
pop
loopne
loopne
sub
pop
push
dec
xor
pusha
ds
and
imul
dec
inc
lods
lds
and
imul
dec
aas
outs
nop
pusha
adc
sbb
int3
fisttp
in
jns
test
inc
es
and
cwde
loope
sbb
or
fild
push
rcl
and
repz
nop
das
or
scas
and
jne
popa
rol
push
xchg
pop
xchg
push
(bad)
push
sub
je
je
push
lds
push
sbb
out
inc
add
sub
ror
cmp
dec
sub
in
xlat
out
fs
ds
pop
adc
dec
inc
pop
mov
adc
dec
outs
icebp
call
sub
adc
mov
dec
and
fimul
ds
mov
pop
lods
arpl
les
push
and
ins
out
add
add
xlat
popf
push
add
xlat
ret
ins
jo
jb
push
and
test
test
push
jo
es
push
lods
pusha
daa
cmp
outs
sbb
adc
xchg
dec
ds
sub
(bad)
shl
xchg
jg
cmp
out
fisttp
sbb
int
cmovbe
push
and
hlt
inc
loopne
dec
es
jmp
in
push
xchg
pcmpeqd
and
(bad)
hlt
test
repz
xor
in
stc
(bad)
fadd
or
daa
rcl
pop
push
es
add
fsubr
test
xchg
mov
lea
ret
inc
add
fldenv
test
and
cdq
xor
mov
ins
sub
int3
test
das
xchg
add
and
sub
cmp
cdq
test
add
pop
or
std
(bad)
fist
or
mov
jo
(bad)
out
sub
cmp
ds
sub
xlat
sub
and
in
pusha
jmp
out
jbe
adc
inc
jge
mov
sub
xchg
dec
shl
sub
add
pop
ins
nop
out
nop
sbb
push
push
cld
popa
add
in
ret
(bad)
jge
jns
lods
and
fldenv
ds
fwait
mov
or
out
mov
les
dec
lahf
stc
out
inc
pop
sbb
mov
jns
pop
push
movaps
mov
xlat
adc
adc
push
aam
inc
sub
sub
xchg
movs
(bad)
out
loopne
push
dec
push
lods
pusha
add
adc
jne
repz
and
aam
aam
mov
add
dec
and
sbb
pop
add
adc
mov
cmp
jnp
pop
lahf
pop
mov
mov
repz
push
sahf
push
hlt
adc
js
lahf
out
or
mov
adc
enter
add
adc
cmp
adc
rcr
xor
add
js
outs
xor
xor
pop
daa
add
mov
pusha
stc
mov
jnp
mov
in
dec
push
cld
ins
dec
aam
loopne
pushf
or
mov
or
ror
push
shl
adc
sub
push
jle
mov
test
rcl
out
push
cld
push
pusha
dec
push
(bad)
call
push
adc
inc
adc
outs
mov
popa
pop
push
add
dec
jmp
rcl
(bad)
movs
mov
int3
popa
(bad)
and
mov
push
lock
pop
push
loopne
mov
xchg
push
push
push
inc
dec
push
jmp
cvttps2pi
ds
into
rcr
pop
pcmpeqb
xor
std
sbb
inc
push
outs
adc
shl
out
(bad)
add
push
(bad)
jbe
adc
mov
add
mov
push
jo
mov
ror
pop
or
and
mov
dec
mov
test
or
xchg
push
sahf
adc
push
fisttp
cmc
mov
outs
sub
ss
push
or
pop
dec
jne
push
popa
push
jne
fimul
push
inc
pop
pop
inc
mov
jb
(bad)
(bad)
arpl
pop
push
mov
xor
pusha
pop
mov
and
pop
push
mov
jl
out
push
sub
pop
mov
mov
je
and
pop
cs
cmp
test
push
movs
fcom
ins
ss
(bad)
loopne
and
fadd
push
jecxz
push
xchg
mov
add
xor
xchg
and
or
(bad)
mov
and
push
lods
push
sbb
push
pop
sbb
push
out
xor
and
push
(bad)
fs
adc
adc
mov
mov
push
nop
call
xor
dec
shl
push
jns
outs
push
jo
rcr
push
fwait
lock
pusha
xor
pop
push
push
imul
adc
adc
inc
jo
push
jno
push
fucom
cmp
fcom
enter
jecxz
pusha
leave
out
sub
push
adc
out
cmp
cwde
data16
test
cmp
cmp
call
stos
pop
repnz
push
adc
sub
or
dec
fcomp
scas
ja
sbb
push
add
mov
jns
push
xor
pop
cld
push
data16
jp
jnp
push
int
jl
jp
add
mov
push
pop
adc
jl
jg
sub
adc
neg
jle
nop
lods
in
jg
jbe
out
jns
add
loopne
push
xor
fldcw
jl
in
adc
mov
aas
dec
and
xor
fstp
xor
call
test
sbb
mov
gs
int3
add
ja
es
push
inc
inc
lahf
js
push
(bad)
repz
nop
out
push
fmul
xchg
repz
les
mov
jns
iret
mov
cld
ds
jnp
dec
call
es
mov
fstp
sbb
sti
xor
dec
hlt
cwde
mov
movs
outs
mov
imul
dec
pushf
mov
mov
push
jo
sahf
nop
mov
jge
fs
add
jecxz
and
sub
icebp
push
cmp
push
sbb
adc
fidivr
into
or
repz
and
push
inc
movs
enter
int3
js
lahf
loopne
scas
push
scas
out
scas
jg
and
adc
sub
xor
sbb
dec
jbe
loopne
not
cld
mov
adc
sub
pushf
mov
jo
movs
mov
leave
int
jge
inc
out
mov
(bad)
fdiv
call
ret
and
dec
push
scas
xchg
out
ins
inc
mov
xchg
push
xchg
shr
rcl
mov
loop
in
mov
daa
cmp
in
movs
rol
or
ss
in
inc
(bad)
aad
(bad)
sahf
in
shr
in
fldcw
fcmovu
cmp
cmp
mov
loopne
adc
jmp
ins
cmps
sub
jb
outs
shr
push
fst
hlt
mov
jge
add
nop
icebp
sbb
dec
push
xor
push
mov
push
pop
push
(bad)
outs
push
and
outs
test
not
or
mov
out
mov
jo
push
push
pop
sub
dec
mov
jnp
and
stc
mov
xchg
xchg
in
idiv
sbb
adc
add
jno
push
jb
inc
dec
jb
ins
enter
nop
cli
test
mov
pop
xchg
push
sub
push
lods
jb
(bad)
jo
jae
mov
stos
loope
pusha
cld
(bad)
hlt
(bad)
cmps
or
inc
sar
repz
sti
mov
inc
pop
jl
mov
sbb
iret
aam
sti
push
outs
add
ret
sysenter
cli
mov
cmc
stos
push
nop
call
pop
pop
outs
aas
arpl
enter
or
push
ja
inc
and
cmp
imul
mov
jne
add
leave
clc
jne
jbe
leave
adc
add
mov
out
xlat
dec
mov
xlat
(bad)
xlat
cwde
ds
int3
addr16
or
inc
addr16
ds
sub
clc
sub
inc
dec
ja
or
dec
nop
cmp
xchg
pushf
or
mov
inc
outs
lods
mov
cmp
push
aam
xchg
and
adc
push
xor
fwait
dec
mov
call
out
jmp
push
push
xchg
adc
movs
inc
ins
retf
xchg
pusha
(bad)
(bad)
fistp
jl
lock
inc
es
add
push
pushf
and
lods
adc
cmp
push
sbb
sbb
pop
xchg
pushf
nop
cs
mov
ins
mov
push
je
push
es
jge
sti
push
call
push
pop
and
and
imul
(bad)
push
jbe
int3
ds
push
push
test
or
xchg
cwde
aam
sub
out
xor
xchg
loopne
push
fnstcw
or
mov
and
pop
push
fcom
mov
add
dec
or
pop
dec
or
inc
xor
nop
pushf
jp
adc
and
in
ret
cld
out
cmp
cmp
mov
(bad)
loope
dec
das
add
cmps
and
sbb
push
jp
jl
sbb
call
data16
iret
les
cmp
pusha
cmp
ds
ret
out
mov
out
loopne
nop
pop
movs
jns
add
cmp
(bad)
push
nop
xchg
xor
out
dec
inc
out
inc
pop
inc
fld
jl
out
jno
in
jl
inc
mov
jo
data16
cmp
push
inc
out
pusha
inc
adc
imul
xchg
mov
loopne
pop
cli
es
add
nop
inc
fiadd
iret
sar
cld
sbb
test
fwait
dec
or
jo
mov
ss
test
fdivr
dec
xchg
dec
push
dec
outs
loopne
push
push
add
(bad)
fwait
jno
movs
arpl
mov
inc
daa
idiv
sub
loopne
xor
test
push
push
adc
dec
sti
add
pop
pop
push
xor
xchg
rol
mov
xor
mov
movs
jle
pop
jns
mov
js
push
rcr
adc
adc
sub
jg
js
add
outs
add
adc
pop
cmp
imul
xor
cmps
stc
cmp
jl
or
imul
in
xor
ins
push
sub
lods
push
hlt
gs
lock
pop
dec
out
nop
adc
leave
xchg
ror
call
jle
sub
je
add
cmps
xchg
imul
in
pop
jb
xor
int3
in
out
ds
sbb
jae
dec
je
push
add
inc
cmp
xor
and
sub
movs
cmp
add
outs
xchg
add
inc
and
add
aam
adc
dec
inc
cmps
pushf
loope
repnz
clc
add
xchg
cmp
xor
dec
mov
loopne
(bad)
scas
test
push
(bad)
ss
pop
add
add
pop
or
(bad)
mov
cmp
pop
cwde
test
push
and
push
test
cmps
pop
adc
ficom
mov
sahf
adc
xor
int
loop
test
test
iret
adc
inc
rol
pop
adc
cmp
mov
in
pop
mov
pop
mov
ins
ror
out
jnp
movs
mov
cs
(bad)
pusha
xchg
jns
enter
mov
or
push
test
aaa
ret
(bad)
cmps
rcr
pop
daa
cmps
nop
push
adc
jg
xchg
jnp
leave
sub
ins
sahf
sbb
add
unpcklps
push
imul
jb
mov
mov
and
rcr
je
or
xchg
or
mov
cmp
scas
sbb
and
and
mov
dec
and
or
or
test
xor
push
mov
(bad)
adc
gs
mov
ror
mov
cmps
pop
mov
arpl
push
adc
or
test
cmps
pop
sbb
xchg
mov
pop
and
jp
add
js
sbb
mov
and
xchg
stos
fiadd
sbb
test
adc
adc
out
repnz
xlat
mov
cmps
and
pusha
stos
scas
shr
jo
imul
enter
jns
test
push
cmp
pop
lds
dec
ins
je
sub
cmp
inc
xor
cmp
mov
leave
xor
inc
lods
or
pushf
sub
(bad)
and
lds
mov
ror
(bad)
mov
ficom
(bad)
cmp
add
data16
xchg
nop
(bad)
inc
mov
int
mov
mov
pop
adc
leave
adc
shr
xchg
shl
nop
les
es
mov
cmp
ins
ss
push
or
mov
stos
push
leave
mov
retf
jno
xor
xlat
icebp
mov
mov
sub
inc
add
and
xchg
cld
add
int
ror
mov
in
enter
test
call
jno
pop
xchg
ja
lahf
dec
dec
inc
xchg
(bad)
xchg
iret
adc
mov
cmp
jo
enter
test
loopne
pop
rcl
dec
hlt
xlat
add
adc
nop
push
scas
dec
pop
adc
into
xor
(bad)
rol
test
inc
loope
mov
cmovs
xor
rcl
and
mov
add
dec
adc
adc
lahf
mov
dec
xor
aaa
or
dec
(bad)
pop
adc
adc
cld
jg
xchg
push
xchg
mov
sbb
sbb
xchg
mov
xlat
mov
adc
push
fidiv
push
data16
mov
fld
push
pop
push
data16
aas
sbb
sbb
dec
adc
je
or
cmp
and
cmp
xchg
push
xchg
loopne
dec
add
shl
not
push
mov
and
ja
pusha
and
and
dec
inc
sub
test
mov
dec
inc
cmps
sub
(bad)
xchg
cmps
rol
or
or
adc
push
mov
cmp
out
adc
adc
ins
xchg
or
and
nop
fs
or
push
rol
inc
xor
dec
xor
jne
pop
pop
mov
or
mov
push
sbb
fistp
(bad)
loopne
pop
inc
inc
addr16
sysret
inc
add
cmps
ins
pop
lock
xchg
nop
add
inc
adc
xor
aaa
push
jo
mov
add
neg
fisub
(bad)
adc
fst
ins
outs
mov
push
pop
aas
ror
push
cmps
or
mov
xlat
xor
nop
movs
pusha
xlat
add
imul
stc
nop
push
call
sar
jb
inc
pop
in
retf
enter
or
adc
add
jns
aas
xor
je
jae
add
mov
cvtdq2ps
add
add
add
enter
add
push
add
sbb
inc
or
add
jo
add
jne
xor
add
xchg
aaa
je
pop
pop
shl
ins
xchg
pop
lods
or
jae
and
push
and
or
pop
cmps
and
sbb
pop
sub
inc
inc
punpckldq
xchg
rol
shl
arpl
or
mov
mov
test
ins
push
and
or
dec
jne
ins
je
add
adc
lea
test
adc
mov
das
xor
loop
mov
or
mov
test
push
vpmacswd
inc
mov
dec
mov
jmp
sub
pusha
mov
popa
push
ror
enter
mov
and
test
mov
iret
sbb
lds
in
(bad)
movs
test
sub
movs
mov
xor
or
enter
push
push
adc
adc
sbb
mov
or
lods
rcl
(bad)
and
mov
test
dec
rol
adc
and
mov
pop
aam
sub
mov
stos
or
push
aam
push
test
sbb
aad
add
pop
and
push
ins
inc
adc
jo
add
pop
cmp
sub
and
add
xchg
rcl
ret
out
push
or
add
push
cmp
pop
pop
inc
mov
sub
adc
push
sbb
push
xchg
mov
jne
cmps
cmp
pushf
movs
pusha
or
mov
inc
mov
cmp
outs
pop
dec
rol
repz
xchg
test
and
sub
pop
ret
inc
ror
push
add
sbb
not
or
pop
fs
ret
or
loopne
scas
and
test
or
adc
push
jo
dec
mov
repnz
lldt
test
mov
jne
mov
fist
retf
jo
ja
(bad)
ret
(bad)
adc
(bad)
xchg
mov
jae
inc
cmp
adc
dec
mov
sub
add
mov
jecxz
pop
or
cwde
das
in
adc
pusha
les
or
ins
ins
pop
push
mov
adc
pop
ins
sbb
sbb
pop
sbb
scas
cs
xchg
test
sbb
push
imul
push
outs
add
push
or
cmc
push
test
add
mov
mov
push
sbb
add
jns
addr16
jl
dec
cmp
add
xor
pusha
and
sbb
dec
inc
pop
push
pop
adc
hlt
sbb
push
mov
sbb
and
xor
pop
cld
pop
cmp
inc
js
sbb
mov
cld
in
and
or
repnz
rol
mov
test
cdq
fadd
mov
movs
or
sbb
das
dec
into
repz
enter
push
xor
dec
mov
dec
fdiv
push
pop
sbb
xor
push
sub
fmul
lahf
data16
mov
and
adc
cmp
rol
mov
xor
pop
push
add
cld
aam
mov
data16
and
call
cmp
test
je
pop
call
sbb
xchg
dec
jb
sbb
cmps
lock
sar
in
inc
cmp
pop
cmps
stc
xor
xor
xor
ds
xor
je
and
fadd
aas
int
js
adc
mov
add
(bad)
popa
mov
push
pop
pop
inc
outs
sbb
push
jnp
lods
jmp
retf
inc
les
lods
inc
add
es
add
add
push
sub
dec
call
jne
shl
aad
daa
pop
xor
xchg
sbb
push
add
or
mov
or
add
xor
adc
fimul
test
pop
enter
pop
xchg
cld
jp
add
push
xchg
xchg
cmp
cmp
mov
aaa
je
xchg
daa
ins
xchg
into
fidiv
addr16
inc
inc
ds
push
hlt
inc
ss
call
dec
cmps
dec
push
dec
dec
clc
push
bound
jge
pop
pop
mov
push
loope
xor
mov
enter
pop
sub
dec
xlat
push
dec
in
lods
sbb
mov
je
sub
mov
and
(bad)
pusha
into
xor
inc
das
movs
mov
sbb
das
(bad)
push
xchg
(bad)
je
push
test
ds
mov
pusha
push
fsub
popa
push
shr
movs
in
imul
sub
push
or
pusha
pop
cmp
push
mov
add
mov
cs
sbb
pop
mov
add
stos
pusha
pop
mov
push
int
jns
or
push
pushf
loopne
js
lahf
out
cmp
hlt
pop
jns
pop
jp
or
in
jge
jl
rcr
cmp
pop
cmp
ret
and
pop
or
xchg
jns
rol
lea
cwde
or
pusha
test
outs
jae
mov
and
inc
xor
jns
ja
(bad)
ror
xor
inc
pop
cmps
jnp
out
mov
push
out
test
dec
xlat
inc
ror
(bad)
cmp
je
pusha
(bad)
lods
push
(bad)
repz
out
hlt
or
and
iret
repz
dec
pusha
js
test
sahf
dec
jecxz
fcomp
inc
push
inc
nop
mov
fsub
fcmovbe
mov
xchg
pop
push
fisttp
nop
dec
mov
add
push
dec
mov
mov
mov
mov
movs
sbb
fidivr
mov
(bad)
lea
dec
mov
and
(bad)
dec
mov
xor
das
mov
cmp
push
test
adc
xor
out
dec
add
inc
adc
clc
int3
xchg
not
sub
das
imul
nop
aam
scas
jle
push
ss
data16
cmp
cmp
(bad)
mov
jl
pop
add
sbb
dec
adc
jo
push
dec
sar
leave
or
ins
clc
mov
mov
xchg
sbb
in
or
mov
(bad)
sub
xor
cwde
push
mov
int
ror
adc
leave
xor
mov
js
dec
mov
rcr
rol
xchg
into
cmp
ins
aad
(bad)
repz
pusha
push
ins
ds
fistp
mov
push
(bad)
push
xchg
hlt
aaa
adc
push
push
add
ja
addr16
pusha
stc
push
clc
cld
mov
(bad)
pop
fldcw
aam
pop
add
inc
add
or
or
int
mov
adc
adc
aam
adc
ins
push
ins
fs
mov
lock
repz
pop
movs
icebp
out
push
daa
loopne
rol
mov
pusha
adc
jg
adc
adc
es
es
mov
mov
adc
sub
out
ins
add
test
pop
das
call
xor
sub
fs
push
(bad)
adc
pop
pushf
and
and
clc
sbb
and
adc
mov
lahf
adc
aaa
jae
push
enter
cmp
hlt
cmp
jle
ss
dec
shr
inc
mov
mov
jo
jg
inc
and
aaa
clc
pop
push
inc
xor
bound
pop
clc
dec
push
sahf
mov
inc
(bad)
hlt
mov
fdivr
pop
dec
sti
push
inc
xor
sub
push
pusha
add
inc
rcr
or
sar
dec
pop
pop
sub
test
jne
das
add
pop
leave
stos
and
ja
inc
out
push
and
inc
pop
les
ds
int
jns
lock
dec
push
test
inc
les
push
push
dec
mov
dec
push
int3
fistp
sti
adc
ds
push
mov
sbb
cmps
(bad)
ja
push
or
push
push
push
sub
inc
icebp
or
add
pop
jecxz
outs
inc
jae
inc
push
add
pop
add
mov
fs
add
inc
pop
inc
cmp
adc
inc
add
nop
mov
or
and
dec
cmp
mov
push
sbb
adc
sbb
push
and
(bad)
fbstp
pop
push
leave
pop
mov
cmp
dec
jg
sub
sbb
xchg
push
shl
cmp
fstp
inc
push
add
cmp
dec
push
fcmovu
test
jl
jmp
cmps
fucomi
pop
fidivr
test
mov
in
sbb
ins
sub
data16
fidivr
inc
in
mov
jmp
seto
mov
ds
out
or
mov
pop
test
pop
sar
cmp
je
mov
int
out
popf
push
adc
js
test
jg
xor
sbb
out
jle
mov
ins
xor
call
cmp
fs
je
daa
call
push
or
mov
mov
pop
xor
pop
es
mov
mov
and
cwde
loope
mov
dec
test
ror
sbb
xor
fucomi
je
dec
rcl
repz
sbb
and
adc
retf
sub
call
inc
fiadd
xchg
sub
xchg
inc
dec
inc
push
fmul
mov
add
and
add
loopne
adc
sbb
seta
add
sub
pop
ror
rcr
or
sub
call
jmp
mov
sbb
cs
adc
cdq
inc
sbb
jnp
fcom
and
dec
or
xchg
sbb
jbe
or
push
add
mov
popf
int
mov
popa
cmp
xchg
bound
inc
or
iret
lock
inc
add
push
add
inc
push
mov
iret
lahf
cmp
cwde
aam
ret
push
or
movs
stc
mov
inc
sub
add
add
inc
call
sub
hlt
(bad)
dec
outs
inc
enter
fsubr
add
lea
daa
and
inc
and
daa
dec
push
cs
fdivr
enter
ficomp
and
sub
pusha
pop
cmc
and
mov
and
lods
pusha
jb
and
mov
les
push
xor
dec
and
add
pop
leave
jo
mov
es
sub
das
test
loopne
sub
leave
push
call
push
mov
jns
xchg
push
hlt
xor
fsubr
push
and
and
sbb
retf
push
dec
nop
pop
outs
in
jne
xchg
je
inc
xor
sbb
imul
jg
aad
push
pop
int3
xor
je
ja
inc
pop
cmp
sbb
and
loop
in
ffreep
mov
lea
in
adc
and
sbb
and
stos
std
mov
ret
and
and
pop
mov
xor
or
jne
and
ret
adc
cmp
sbb
jge
clc
mov
push
xor
add
ds
clc
inc
or
gs
fadd
in
xor
in
adc
popf
movs
gs
test
mov
mov
or
jne
add
or
cwde
pop
sbb
add
cmps
movs
loopne
add
push
adc
fcmovne
js
sub
or
sti
cmp
inc
or
test
mov
jne
mov
pop
xlat
dec
or
leave
mov
jne
and
mov
ret
cmps
add
mov
push
stos
lock
jne
pop
cmp
arpl
aaa
imul
xor
dec
leave
test
xor
into
movs
hlt
cmp
adc
or
cmp
scas
or
jmp
and
adc
or
jbe
jne
add
mov
xchg
sbb
xor
bound
lea
sub
pop
out
mov
mov
or
dec
add
mov
adc
movs
xchg
test
stos
fucom
xor
in
int3
aam
cdq
es
or
mov
push
pop
outs
shl
int
cmp
xchg
das
adc
(bad)
mul
mov
sbb
and
mov
xchg
sbb
jg
test
pop
in
imul
imul
add
add
shl
and
mov
dec
les
(bad)
lock
pop
aad
jae
gs
dec
mov
and
and
mov
mov
retf
and
test
pusha
sub
xchg
movs
movs
pop
and
scas
mov
sub
add
mov
movs
sbb
fwait
bndstx
aam
mov
and
mov
or
sbb
jmp
imul
push
dec
hlt
fdiv
nop
push
sbb
shl
fs
inc
push
add
pop
rol
jo
stos
daa
daa
push
ror
add
je
dec
dec
add
xchg
xchg
xchg
lods
das
sub
or
or
in
in
ror
pop
pusha
rcr
aaa
enter
inc
rcr
sbb
ins
xchg
ds
iret
jns
lea
adc
sub
aaa
iret
fdivr
mov
add
xchg
xor
or
mov
and
or
(bad)
dec
aam
call
aad
xchg
add
leave
mov
shl
int
xchg
and
enter
in
(bad)
enter
cs
sbb
out
xor
xor
xor
xor
and
xor
call
push
jp
mov
lods
call
hlt
in
mov
cmc
add
push
adc
lahf
sbb
nop
inc
(bad)
in
mov
pop
mov
movs
sbb
dec
movs
ror
mov
pop
mov
adc
or
outs
dec
or
ret
push
imul
and
push
sub
lea
imul
push
xchg
jns
daa
jnp
inc
loope
shl
cmp
pop
xor
dec
ror
inc
dec
sti
lock
xchg
clc
daa
jg
je
in
add
sub
push
or
cld
push
add
mov
not
sbb
push
or
xor
rol
add
in
in
dec
shl
add
sub
inc
mov
xor
and
adc
mov
push
mov
hlt
mov
dec
and
hlt
hlt
hlt
jl
rcl
or
cmc
or
and
test
sub
xor
loope
sub
pop
mov
push
imul
int
jno
push
scas
push
movs
adc
lds
adc
xor
sub
xor
es
dec
inc
add
loop
ja
aad
sbb
lock
fisttp
dec
sub
inc
popa
aaa
dec
pop
jne
cmp
add
mov
pop
je
and
lock
movs
xchg
ss
jg
stos
leave
mov
jge
aad
adc
sbb
or
pop
pop
call
pop
sub
adc
or
jnp
movs
and
or
push
in
cmps
add
add
adc
adc
cwde
mov
inc
xor
mov
enter
sbb
movs
rcr
stos
lods
jmp
jmp
call
dec
in
mov
and
fst
fstp
cld
mov
jne
inc
xchg
jmp
jle
fucomp
adc
mov
out
push
enter
lahf
xor
jl
push
bound
and
shl
pop
repz
or
jmp
jle
leave
or
and
test
ud1
jmp
ja
and
scas
adc
xor
in
and
lock
mov
sub
(bad)
and
mov
clc
mov
add
out
mov
int3
dec
jb
push
shr
mov
aam
mov
add
dec
in
inc
dec
enter
add
adc
dec
jmp
or
mov
hlt
sbb
addr16
fisttp
fsub
inc
xor
push
jge
pop
push
in
daa
inc
stos
push
fimul
xor
loope
dec
cs
xor
adc
sbb
push
pop
xor
xor
movs
fsubrp
dec
rcl
and
and
popa
and
mov
pop
push
fldcw
push
or
push
inc
rcl
shl
inc
push
push
push
push
and
jnp
adc
and
adc
push
mov
or
or
fsub
ja
movs
fadd
jns
(bad)
cmp
sub
les
sbb
add
mov
fimul
inc
in
test
lea
test
sbb
cli
xor
cmp
or
in
inc
and
movs
sbb
pop
mov
lods
and
jbe
cmp
sbb
lods
xchg
and
nop
sbb
das
mov
mov
or
cs
cwde
fiadd
mov
add
mov
cdq
ud2
je
les
or
push
iret
xor
(bad)
std
or
cmp
and
addr16
xor
ja
or
jne
mov
addr16
fisttp
inc
mov
mov
and
jmp
jle
pop
or
sub
push
add
lock
push
jge
cmp
in
inc
mov
cli
mov
mov
jl
sub
and
cdq
dec
push
cmp
shl
(bad)
dec
cmp
mov
pop
or
adc
mov
pop
inc
lods
push
xor
jae
fisub
add
cld
out
out
dec
push
sub
or
sub
pop
or
push
pop
dec
inc
fsub
cmps
push
push
jnp
or
js
add
fild
or
ins
adc
int3
or
imul
fdivr
cmp
lods
ret
sub
cdq
gs
jmp
cld
add
mov
add
int
je
add
lock
add
add
(bad)
sti
(bad)
or
inc
fimul
inc
adc
es
pop
mov
sti
and
inc
call
sub
xor
sbb
jecxz
or
cmp
mov
les
(bad)
or
and
and
rcr
push
mov
push
sbb
sti
shl
(bad)
jae
daa
aas
shl
push
push
fisubr
arpl
dec
(bad)
aad
sub
ret
test
and
inc
or
jle
sbb
leave
mov
fld
loop
xor
je
in
in
or
adc
mov
push
cmp
pop
sub
sub
pop
mov
(bad)
sbb
sahf
popf
add
int
mov
mov
adc
retf
(bad)
stos
sub
fmulp
and
push
ins
add
in
jnp
aaa
push
in
push
push
sub
das
dec
jnp
in
pop
mov
test
fmul
(bad)
xor
and
sti
mov
adc
retf
retf
cmc
shl
mov
(bad)
loope
mov
fnstsw
mov
jnp
dec
lock
cmp
xchg
xchg
cld
mov
sbb
jno
cmps
cli
push
jns
add
scas
adc
xchg
and
in
inc
inc
add
fcom
and
sti
hlt
imul
sysret
xor
in
js
hlt
jmp
push
xchg
adc
cdq
retf
and
fstp
ret
mov
push
pop
cld
icebp
retf
cmp
hlt
fisttp
fst
pop
std
das
je
popa
mov
jb
popa
cmp
xor
idiv
mov
xor
nop
imul
sub
out
or
xchg
cmp
add
add
jmp
(bad)
push
movs
shr
add
sub
sbb
or
iret
pusha
inc
pop
in
or
out
repz
mov
xor
mov
add
and
or
outs
jo
xchg
fs
and
mov
xor
and
sbb
(bad)
movs
xor
pusha
push
or
mov
xchg
mov
loope
cmp
repnz
and
popa
add
sub
mov
mov
pop
outs
mov
xor
xchg
add
jge
push
out
hlt
mov
lds
jl
ja
or
mov
inc
movs
ret
arpl
lods
test
ins
imul
mov
inc
xor
jp
pop
sbb
imul
or
cwde
jmp
shl
push
cmps
jmp
add
ffreep
xor
inc
inc
mov
pop
and
sub
add
xor
xlat
je
and
retf
inc
js
sar
daa
cmp
out
(bad)
and
inc
ds
mov
add
or
push
cld
add
push
xchg
add
sub
add
inc
xor
push
fnstenv
or
cmp
and
jno
lahf
cmps
push
push
scas
cmp
mov
add
call
mov
fs
dec
or
lock
bnd
sbb
imul
and
pop
jno
mov
pop
add
inc
test
mov
add
jmp
push
loop
mov
fbld
retf
mov
out
stc
leave
mov
inc
pop
add
xchg
mov
lahf
out
and
stc
push
sub
punpckhwd
pop
jge
pop
loopne
xor
inc
(bad)
mov
pop
adc
push
cmp
stos
pop
add
mov
jnp
(bad)
push
xchg
or
add
scas
test
add
ins
xchg
shl
add
fadd
add
mov
ds
cwde
cmp
jl
fmul
cmp
repnz
xor
jb
inc
jb
jae
jb
jmp
lock
in
gs
test
sub
jmp
cmp
inc
xor
add
xor
jle
jo
pop
sub
sub
mov
sbb
pop
cdq
ud0
jb
popa
sub
add
sub
mov
mov
sub
pop
xor
data16
jb
add
push
sub
inc
mov
pop
jmp
mov
push
jno
icebp
push
cmps
sbb
shr
push
pop
push
std
sub
sub
je
out
xor
adc
adc
adc
push
mov
cmp
scas
js
add
movs
movs
xchg
mov
mov
xchg
xor
loopne
cdq
inc
jl
or
cmp
test
pop
(bad)
mov
repnz
dec
push
stc
cmp
std
stc
jnp
jmp
cmp
jle
cmps
bnd
or
jns
add
mov
mov
daa
mov
xlat
dec
cmp
xor
test
rcl
nop
retf
retf
inc
neg
test
mov
(bad)
cs
jae
jge
cmc
jno
inc
int
(bad)
test
add
and
les
xchg
scas
das
fisub
add
out
out
jle
cmp
add
add
add
push
mov
rol
mov
sub
add
add
mov
sub
mov
jge
jbe
cmp
das
js
enter
xor
adc
mov
shl
lods
or
or
jle
inc
(bad)
sbb
xor
add
sbb
fisttp
rol
cmp
test
cmc
add
mov
add
sbb
or
sbb
xor
inc
dec
stos
jle
or
enter
xchg
cmp
jbe
dec
or
icebp
(bad)
sbb
cmp
xchg
(bad)
xchg
cmp
in
in
add
fcmovbe
adc
jle
adc
cli
ret
dec
cmp
inc
mov
icebp
mov
add
or
rol
dec
cmp
pop
lea
addr16
cmp
lods
jnp
movs
xchg
cmp
xchg
mov
mov
mov
cmp
test
sbb
shl
mov
ficom
ja
and
cmp
(bad)
xor
push
dec
loope
std
add
add
dec
je
mov
adc
cmp
je
dec
aas
pop
jb
loopne
fwait
and
add
jmp
sbb
in
add
fcom
cmp
call
mov
mov
inc
xor
fiadd
or
add
jmp
je
cmp
add
punpcklwd
lahf
pushf
pop
push
jmp
cwde
stos
and
jbe
or
mov
ss
leave
mov
in
cs
sub
leave
sbb
fist
cmp
push
mov
(bad)
(bad)
lods
cs
cmp
inc
sub
or
std
xchg
xor
xor
mov
sub
jmp
sub
rcl
(bad)
jecxz
dec
add
fsubr
xor
inc
sbb
sbb
xor
shr
add
out
or
adc
pop
je
cmp
mov
js
daa
int
rcl
popa
data16
fnsave
and
xchg
xchg
xchg
xchg
xor
test
fcom
je
sub
je
aaa
rcl
je
imul
je
cmp
je
aas
je
retf
push
cmp
je
sub
fs
and
and
fld
pop
fwait
test
int3
les
inc
or
fidiv
sub
and
test
push
ret
push
dec
adc
sbb
dec
pop
iret
stos
xlat
jp
cmp
and
pop
and
cmp
xor
imul
jl
add
aas
add
cwde
dec
pop
loop
in
add
sub
pop
(bad)
cmc
dec
mov
push
mov
fild
gs
mov
rol
mov
and
clc
mov
ror
in
outs
mov
inc
in
cld
cmps
xor
bound
fs
in
in
inc
xchg
call
and
jmp
fisttp
cmp
xor
(bad)
sbb
inc
dec
cld
mov
inc
and
repnz
mul
lahf
adc
mov
mov
add
mul
stc
xor
das
cmp
cwde
or
mov
(bad)
xor
jmp
sbb
pushf
pop
cmp
or
mov
xchg
dec
sub
adc
pop
(bad)
in
add
mov
repnz
or
popa
dec
cmp
data16
inc
inc
jbe
pop
xor
sbb
add
xor
inc
jo
test
push
dec
sbb
pop
add
pusha
add
xor
pop
inc
or
dec
push
inc
js
add
in
add
scas
mov
cli
stc
ins
cli
cwde
ss
mov
and
adc
jmp
pop
dec
dec
push
inc
cmps
lahf
movs
daa
mov
push
dec
jmp
sbb
and
push
xchg
(bad)
and
mov
sti
cmp
in
xor
adc
or
arpl
lods
(bad)
pop
add
sti
xchg
mov
and
and
fdivr
cmp
inc
add
bound
out
adc
sbb
add
mov
imul
scas
cmp
nop
add
add
mov
pop
or
rol
addr16
test
jne
xor
cwde
or
add
sub
dec
inc
scas
test
into
les
out
cmp
and
mov
dec
mov
sub
adc
add
lock
call
add
add
call
ror
es
sub
rcr
jmp
aaa
mov
movs
pusha
stos
xchg
inc
xor
or
fld
sbb
mov
jns
movs
xchg
arpl
mov
das
xchg
cmps
call
push
lock
adc
or
or
test
or
pushf
and
leave
or
test
sbb
pop
dec
test
stos
test
call
pop
xchg
add
push
inc
ret
xchg
mov
sbb
(bad)
or
push
fdiv
nop
sub
les
in
add
cmp
pushf
dec
in
adc
adc
adc
adc
xchg
pop
shl
repnz
adc
add
fst
mov
std
fs
not
push
pop
lea
mov
pop
adc
xchg
inc
xchg
leave
add
mov
add
leave
sbb
sbb
inc
jb
sbb
loopne
inc
and
and
ja
in
inc
cmps
xor
xchg
xchg
xor
out
loop
and
sub
push
add
inc
mov
enter
jge
ja
xor
scas
fldcw
shl
sar
repz
dec
mov
mov
fidiv
xchg
pop
jno
pop
add
dec
leave
mov
add
das
xchg
jmp
sti
movs
inc
cs
arpl
push
aas
sub
cmp
inc
push
mov
push
pushf
pop
mov
push
xor
icebp
aam
xchg
adc
sub
in
fistp
add
or
ins
jne
daa
add
mov
ins
jne
out
nop
test
ins
movs
inc
xlat
adc
jns
sti
clc
jp
sbb
jbe
pop
mov
cmp
pop
je
cs
pop
mov
or
inc
xchg
adc
idiv
imul
out
fisttp
in
clc
jne
sbb
ds
jp
enter
je
nop
add
and
cmp
fwait
sbb
adc
fs
movs
enter
out
mov
cdq
adc
aad
daa
inc
ja
imul
sbb
int3
dec
fdivr
lods
sbb
lock
add
movntps
or
and
or
fild
pop
xor
inc
or
gs
and
cmp
dec
add
and
cs
xor
xchg
sub
mov
daa
bound
push
add
pop
cmp
push
lods
or
fisub
sbb
and
test
jecxz
mov
xor
xchg
push
stos
or
iret
sub
lahf
shr
ins
stos
inc
mov
pop
push
mov
push
mov
stos
add
xlat
lods
int3
adc
test
mov
sub
sbb
jno
push
sbb
push
popa
mov
inc
ret
test
or
push
push
cmp
les
lahf
push
pop
lock
stos
loopne
aad
pop
xchg
fnsave
test
add
(bad)
cmp
inc
push
jne
js
inc
sahf
loopne
das
jns
sbb
jl
or
mov
mov
cmp
mov
pop
mov
or
add
dec
imul
push
adc
gs
imul
cmp
(bad)
clc
iret
in
xchg
or
add
mov
cmp
jae
xor
push
daa
and
push
add
lea
add
ins
pop
cmps
addr16
sub
sbb
sahf
dec
ret
xor
push
hlt
mov
repnz
cmp
adc
shr
out
pop
inc
sbb
sub
mov
mov
rol
gs
push
add
rcr
add
jo
push
sub
pop
jne
aam
pop
clc
mov
or
push
xchg
cmps
jge
or
cmp
jne
lods
push
mov
ret
fcom
lea
jecxz
stc
push
add
bswap
jnp
out
push
sbb
and
inc
push
mov
repz
addr16
adc
jb
mov
push
sahf
pop
test
mov
aad
loopne
jns
xlat
scas
das
not
add
or
pop
adc
fsub
and
sub
jb
jns
push
pop
pop
arpl
out
imul
jnp
dec
dec
fidiv
fwait
mov
stos
push
mov
nop
fisttp
add
adc
rcl
in
inc
sub
adc
xchg
dec
pop
fs
xchg
dec
es
add
xor
inc
push
ds
fs
pop
(bad)
popa
pop
xor
and
ins
gs
xchg
imul
add
push
es
fs
or
sbb
cdq
fs
dec
adc
fs
dec
es
pop
outs
xchg
dec
es
jo
push
shl
add
add
jns
pop
jno
xor
cmps
or
imul
push
adc
call
push
xor
cmps
shl
pop
sub
sub
test
fld
(bad)
xchg
push
aad
or
cmps
cmc
clc
cdq
stos
jmp
mov
jo
not
retf
je
int3
xchg
add
adc
sub
cmp
aas
leave
xchg
add
adc
lods
cmps
sbb
adc
adc
or
sbb
(bad)
hlt
cmps
and
sbb
sub
xlat
lahf
neg
imul
out
push
cli
and
xor
cmp
pop
repz
xrelease
repz
mov
adc
out
sahf
xor
mov
out
xchg
mov
out
out
add
or
adc
and
xor
add
cmp
cmp
adc
dec
cmps
dec
xor
push
and
add
dec
xor
daa
and
leave
and
pop
xor
jl
or
or
and
or
and
or
frstor
sbb
and
push
pop
addr16
push
and
and
add
dec
sti
jno
jl
repnz
mov
sbb
xor
cmp
popf
mov
push
cs
push
in
jns
mov
xchg
push
lahf
stos
repz
cmp
loope
ins
jns
in
test
aas
and
cmp
jns
repz
inc
dec
pop
mov
in
in
jo
jnp
xchg
push
xchg
push
sahf
cmps
fxrstor
mov
(bad)
into
(bad)
out
in
add
pop
out
out
and
test
or
adc
leave
push
sub
pusha
dec
xor
and
and
leave
and
jge
xchg
dec
jb
or
sub
and
and
or
adc
addr16
dec
xor
dec
jle
add
and
or
xor
and
push
sub
leave
and
dec
inc
dec
or
push
sbb
cdq
test
das
or
sbb
sub
inc
sbb
sbb
dec
aaa
jae
popa
inc
or
imul
sub
jb
sub
cs
je
out
jg
adc
sbb
movmskps
adc
push
push
pop
int3
pop
cmp
sbb
je
sub
gs
iret
xor
and
(bad)
jg
sub
sbb
xor
aaa
and
sbb
sti
adc
div
in
or
retf
add
sub
push
add
pop
ss
mov
add
cmp
cmps
or
push
jo
jbe
(bad)
std
jl
into
add
cmp
or
jmp
cmp
push
cmp
in
mov
xchg
dec
mov
fild
enter
jmp
sub
(bad)
dec
frstor
jmp
nop
push
add
lock
js
xor
es
push
add
inc
ror
jb
jmp
add
sbb
xor
push
dec
cld
add
je
ds
inc
cmps
loopne
in
or
jb
jb
jmp
out
enter
xlat
add
test
pop
and
loopne
in
sbb
aaa
js
sbb
cmp
xor
sub
sbb
outs
es
cmp
std
and
stos
xor
push
xor
pop
xor
popf
cwde
mov
aaa
cmc
add
repz
push
or
xor
cli
or
xchg
xor
and
sbb
and
(bad)
clc
sbb
ss
dec
daa
and
and
mov
cmps
jp
adc
sub
sub
shl
xor
xchg
pop
mov
ds
repz
repnz
or
jns
out
adc
sub
out
sahf
out
push
pusha
imul
jns
or
into
ftst
out
sahf
out
out
add
and
jns
out
xor
inc
dec
push
out
sahf
out
arpl
jnp
cmps
or
sets
xchg
and
sub
and
dec
cmp
and
dec
xor
jge
dec
xor
push
add
and
sub
xor
and
aaa
cmp
leave
and
dec
popa
addr16
leave
mov
push
sub
adc
nop
adc
and
sbb
sub
inc
inc
inc
dec
push
inc
inc
das
or
xchg
fwait
inc
inc
dec
imul
cmp
mov
push
jl
pop
in
jbe
dec
pop
push
pop
bound
in
inc
scas
movs
ins
js
pop
cmp
mov
movs
push
scas
mov
lds
es
icebp
jns
out
push
cld
push
pop
and
sbb
out
ds
and
and
fsubrp
jns
pop
push
push
jne
aaa
mov
xchg
imul
dec
mov
ja
ja
mov
out
push
stc
add
cmp
jnp
push
adc
and
repz
outs
cmp
inc
es
out
daa
iret
push
pop
fs
ins
je
mov
adc
mov
fadd
lea
(bad)
and
dec
fwait
sbb
clc
push
xchg
fld
cs
es
add
sbb
cdq
fs
adc
push
cdq
fs
dec
and
sub
cmp
xchg
dec
es
inc
dec
jb
es
fs
pop
push
cdq
fs
jnp
add
dec
add
sbb
adc
cdq
pop
and
aaa
xchg
xchg
xchg
xchg
sub
inc
xchg
xchg
xchg
xchg
inc
dec
jae
xchg
xchg
xchg
xchg
pop
imul
stos
and
jmp
jp
and
and
or
adc
adc
cmps
aam
xor
or
adc
test
cwde
rcl
rcl
sbb
or
jns
cmp
and
push
cmps
out
sahf
out
mov
out
jns
jmp
adc
sahf
out
ss
dec
push
sahf
out
sahf
pop
popa
imul
jnp
iret
push
cdq
mov
popf
mov
push
adc
fisttp
loop
or
cdq
ss
or
adc
xchg
dec
bnd
push
mov
xchg
dec
pop
cmp
and
ins
fisub
inc
inc
adc
retf
pop
dec
sbb
retf
retf
retf
retf
pusha
push
repz
test
test
xchg
retf
xchg
retf
popa
push
je
push
jbe
xchg
retf
xchg
jne
push
ja
dec
mov
mov
repz
cdq
pop
aaa
mov
jb
sbb
xor
cmp
repz
inc
dec
push
pop
bound
inc
cmp
and
cdq
adc
jge
push
js
sbb
push
js
rol
jg
pop
add
mov
cmp
scas
mov
sahf
out
cmp
sti
push
sub
sbb
sahf
out
daa
xor
sahf
out
imul
xchg
mov
jl
out
xlat
loop
clc
add
repz
ror
sbb
cmp
repz
inc
push
pop
data16
cmp
repz
xchg
popf
test
repz
repz
sahf
cmps
cdq
into
cmc
fs
or
and
out
sub
inc
dec
pop
out
sahf
out
outs
jns
(bad)
sahf
out
sahf
call
sahf
out
fsub
repnz
or
cmp
rcl
push
sub
iret
repz
dec
push
pusha
imul
iret
repz
xchg
mov
iret
repz
into
ftst
out
out
call
es
out
sahf
xor
push
pop
push
jae
xchg
out
cmps
scas
mov
sahf
out
sahf
(bad)
into
(bad)
fsubp
out
jmp
and
leave
and
es
adc
xchg
dec
xor
sbb
xchg
dec
xor
sub
cmp
dec
xor
and
mov
xchg
xchg
in
xchg
dec
xchg
and
mov
sbb
adc
cdq
fs
ins
xchg
and
jb
dec
not
push
xchg
inc
scas
dec
push
sub
xchg
dec
xor
adc
xor
and
pop
pop
xor
and
pop
pop
pop
xor
pop
pusha
leave
and
dec
popa
add
es
arpl
fs
addr16
fs
dec
push
ins
cmp
and
test
fs
dec
xor
xchg
dec
es
xor
cdq
fs
cmp
es
fs
cmp
cmp
cdq
fs
dec
ds
dec
fs
dec
es
inc
inc
xchg
dec
es
inc
xor
cdq
fs
dec
aaa
es
fs
dec
dec
dec
inc
cdq
fs
dec
dec
adc
adc
adc
dec
es
adc
cdq
fs
fs
sbb
sbb
popf
fs
dec
push
pop
das
add
in
pextrw
and
add
add
in
in
add
add
add
add
pop
push
sub
pop
sub
das
sub
add
add
and
dec
fisttp
inc
cmp
add
sub
jp
push
xor
repz
repz
push
pusha
imul
cmp
or
into
ftst
out
jns
out
cli
add
out
sahf
out
cmp
push
pop
lahf
out
sahf
push
gs
lahf
ss
mov
retf
jl
test
test
ror
push
cs
xchg
out
inc
dec
pop
push
jo
repz
jnp
xchg
pushf
cmps
mov
iret
repz
enter
jns
iret
repz
dec
xor
out
ss
dec
push
sahf
out
sahf
bound
or
movs
scas
mov
sahf
out
out
cld
pop
xor
repz
adc
cmp
repz
pop
push
xor
iret
repz
repz
ret
std
add
sahf
or
xor
cmp
shr
and
imul
fs
fsub
es
fs
loopne
in
cdq
fs
dec
in
jmp
call
es
in
in
out
dec
es
fs
icebp
repz
fs
repnz
div
cdq
fs
dec
cli
stc
sti
jb
dec
es
and
mov
and
dec
cmps
and
fist
and
push
cmp
and
pusha
and
fwait
fs
dec
fcomp
fs
out
push
movs
add
sub
add
xchg
stos
jne
in
test
xchg
es
xchg
dec
xor
clc
mov
fisub
lds
cmp
aad
and
fs
dec
outs
adc
cmps
dec
fwait
push
fist
adc
imul
push
sub
jb
retf
mov
ins
inc
movs
cmp
dec
push
cmp
adc
pop
ret
mov
inc
mov
dec
sub
xor
fs
dec
cmps
adc
dec
es
int
iret
inc
es
fs
rcl
add
push
sub
push
addr16
rcr
add
add
jb
fld
xor
add
push
and
cmp
adc
mov
pop
fld
fild
(bad)
mov
es
xor
push
nop
inc
pop
dec
popa
arpl
test
xor
out
ss
leave
loop
aaa
pop
hlt
ud0
or
fwait
jge
cmp
push
ss
inc
pushf
cmp
jns
push
bound
repz
repz
iret
leave
mov
out
sar
cld
pop
cmp
sbb
cmp
ds
push
pop
repz
repz
or
mov
fcomp
out
stc
add
vmwrite
xor
inc
out
sahf
out
pop
addr16
sahf
out
sahf
mov
jns
out
retf
jmp
repz
repz
or
and
cmp
pop
outs
cmp
repz
test
iret
repz
(bad)
rcr
cmps
stc
cmp
call
adc
out
sahf
pop
sub
sahf
out
popa
ins
ja
(bad)
out
sahf
out
popf
movs
lods
mov
out
sahf
mov
in
popf
out
in
cmc
std
or
and
xor
in
push
sub
and
and
dec
and
pusha
add
fs
jge
ins
sbb
and
add
adc
dec
xor
and
adc
fwait
fs
arpl
popa
cmp
xchg
dec
cmps
dec
gs
mov
jecxz
jle
add
pop
cmc
push
inc
fwait
fs
fcmovnb
sub
cmps
adc
cli
ins
test
and
lods
lods
and
and
scas
jnp
dec
jb
pop
adc
jnp
leave
inc
sbb
dec
mov
mov
add
inc
cmp
(bad)
ds
add
cdq
push
shl
xchg
fstp
les
cmp
movs
dec
push
adc
fs
dec
leave
sbb
fisttp
dec
sbb
inc
dec
fwait
fs
into
push
adc
xchg
inc
shr
cdq
in
sub
push
(bad)
xlat
ss
xchg
dec
pop
outs
adc
and
jo
inc
fnsave
ins
xchg
dec
(bad)
fild
push
xchg
fmul
dec
int3
inc
loop
fisub
sub
pop
adc
int3
sub
and
jmp
and
xor
pushf
ss
movups
enter
add
hlt
push
es
neg
push
dec
dec
les
inc
data16
out
retf
retf
xchg
push
mov
cld
add
add
dec
cmps
push
adc
xor
jno
adc
nop
scas
mov
cmp
and
loopne
and
and
sub
in
sbb
fs
add
inc
adc
push
retf
jns
aad
jmp
add
or
iret
repz
and
iret
repz
pop
outs
jp
repz
test
jnp
repz
repnz
or
adc
iret
repz
push
sub
dec
push
cmp
repz
imul
repz
repz
cdq
mov
cmp
mov
loope
cmp
cmp
xchg
add
std
adc
add
sub
outs
and
adc
xchg
and
lods
xor
rcr
and
dec
fwait
or
or
jb
and
push
add
dec
sbb
and
dec
xor
adc
loopne
inc
push
adc
xchg
and
or
sbb
sub
xchg
pop
pop
adc
adc
dec
xor
pop
or
add
js
add
pop
dec
movs
test
push
pop
inc
push
imul
shl
pop
push
cmp
pop
rcl
xor
test
inc
push
dec
imul
daa
sbb
sub
xor
iretw
imul
aad
loopne
inc
push
out
sahf
out
sub
inc
dec
sahf
out
sahf
pop
arpl
test
mov
es
repz
dec
push
iret
repz
pop
fs
je
movs
sbb
jnp
mov
push
rol
imul
adc
mov
dec
jb
inc
outs
cdq
xor
xchg
es
cmp
ret
sub
inc
jge
or
in
push
sub
xor
inc
pop
and
adc
imul
imul
push
adc
inc
or
jle
lods
add
xor
ss
pushf
and
js
loopne
cmp
paddsb
add
std
dec
mov
mov
mov
(bad)
and
adc
movs
and
cwde
rcl
pusha
push
cmp
scas
stos
add
and
fadd
xor
popa
adc
(bad)
jb
lods
rcl
and
lahf
sub
movs
cwde
lods
add
dec
and
sbb
and
or
leave
pop
enter
outs
push
hlt
mov
dec
inc
pop
push
test
xor
test
or
stc
aad
xor
sub
xor
or
xlat
dec
gs
cmp
and
xchg
or
and
xchg
cdq
add
adc
and
leave
inc
push
add
ret
jg
pop
sbb
push
jg
int
and
aam
mov
or
xchg
pop
scas
push
and
dec
outs
mov
jle
and
jmp
sbb
ss
call
cwde
cmp
mov
adc
sub
dec
xor
and
add
in
cmps
dec
dec
add
sbb
xchg
imul
pop
dec
and
pop
test
sub
(bad)
adc
push
mov
repnz
and
das
and
mov
cmp
mov
push
bound
and
mov
push
fmul
adc
mov
hlt
xor
xor
popf
ins
sahf
stc
sub
sub
add
and
aas
xor
push
cmp
dec
jmp
or
xlat
add
dec
les
(bad)
pop
pop
ror
and
aaa
in
addr16
dec
les
mov
sbb
or
pop
adc
mul
movs
dec
sar
popa
aaa
pop
pop
mov
push
and
cmps
(bad)
lods
sub
pop
dec
lsl
pusha
repnz
xchg
popa
and
daa
xlat
xor
ret
add
addr16
div
sub
(bad)
cli
pusha
jo
sbb
int3
arpl
xchg
lds
xor
jg
mov
add
xor
mov
inc
test
pop
hlt
imul
dec
pop
mov
inc
mov
out
push
xor
call
mov
cmp
xor
je
jge
in
test
or
test
cmp
cmp
rol
add
rcl
iret
mov
out
out
or
hlt
int
icebp
in
data16
add
xor
adc
lock
in
jle
or
inc
rcl
push
xchg
aas
adc
add
mov
adc
sub
not
add
sub
scas
sbb
adc
pop
and
push
cmp
pop
aam
ins
xlat
imul
dec
cmp
enter
adc
adc
rcr
movs
xchg
jns
push
adc
and
shr
add
aam
adc
add
push
xchg
and
test
(bad)
ins
enter
adc
fistp
fld
push
sub
jmp
or
dec
or
das
pop
sub
push
stc
das
add
or
inc
push
inc
pop
repnz
or
inc
call
push
mov
stos
rcr
adc
push
push
in
int
or
lock
cdq
lock
movs
mov
sub
add
push
lock
mov
cli
and
inc
inc
pop
push
add
fwait
or
arpl
jge
and
js
inc
inc
push
in
or
adc
loope
pop
push
and
adc
mov
mov
mov
ret
adc
xor
pop
repnz
pusha
dec
xchg
mov
lds
jae
test
push
sbb
xor
and
mov
dec
div
pop
push
fwait
xchg
mov
lock
aaa
lods
inc
sbb
push
pop
iret
fldcw
daa
and
dec
mov
mov
hlt
arpl
sti
imul
or
sti
sub
int
inc
mov
push
sbb
adc
pusha
dec
repz
or
inc
pop
in
add
call
xchg
jnp
ret
inc
inc
push
test
test
lea
mov
data16
dec
movs
adc
adc
test
fst
jl
or
je
inc
cmc
xor
lock
stos
shl
aam
loope
xor
rcl
push
or
aas
or
xchg
pushf
and
test
ins
cld
push
stos
push
pop
(bad)
mov
or
or
push
mov
inc
xlat
dec
cdq
mov
mov
rcl
daa
push
jmp
mov
nop
dec
xlat
mov
lock
or
lock
shr
cmp
push
dec
div
inc
cmp
push
or
movs
hlt
mov
lea
lock
lods
call
mov
pop
or
nop
ins
or
cmp
inc
aad
test
cmp
inc
div
sub
adc
mov
mov
sub
pop
adc
cmp
dec
clc
jg
popa
inc
add
fistp
out
push
pop
outs
push
push
movs
es
push
add
adc
fist
lock
dec
inc
ds
sub
(bad)
fbstp
adc
or
jle
push
adc
inc
retf
mov
sbb
mov
scas
and
inc
or
inc
push
xchg
das
mov
fdiv
inc
sahf
add
(bad)
add
cmp
jbe
aaa
fbstp
shr
std
mov
inc
inc
pop
push
stos
inc
(bad)
test
mov
rol
and
fstp
adc
jg
and
and
and
mov
ss
sbb
cs
sub
mov
or
adc
push
das
jp
xchg
mov
test
push
push
push
dec
cs
ds
adc
push
cmp
sbb
inc
sti
mov
xchg
inc
inc
xor
push
add
sbb
jno
inc
dec
sahf
in
mov
es
cmp
cmp
inc
xor
xor
xor
out
xor
sub
movs
movs
mov
mov
and
shl
leave
sub
fisub
and
dec
dec
mov
jmp
ss
in
push
lds
sbb
push
push
inc
add
nop
dec
cmps
inc
inc
inc
add
or
cdq
xchg
dec
dec
dec
nop
sub
dec
dec
cdq
fs
push
dec
dec
dec
mov
adc
int
and
shr
xchg
pop
pop
inc
dec
sahf
push
fsubr
mov
jge
xor
mov
and
hlt
(bad)
sub
cmp
add
inc
push
icebp
adc
or
loop
adc
jge
arpl
ins
push
daa
imul
data16
ret
in
pop
xor
dec
movs
pop
add
xchg
sub
dec
pop
xor
dec
outs
dec
push
pop
xchg
sbb
or
add
mov
and
aaa
int
inc
pop
enter
pop
dec
mov
cdq
dec
lea
out
push
xchg
dec
mov
pop
popf
push
push
push
dec
push
push
ror
adc
jmp
push
mul
pop
xor
jo
or
aaa
cmp
dec
xchg
inc
cmps
mov
outs
test
retf
and
popf
pusha
push
xchg
xchg
cs
cmc
not
push
jl
sub
xchg
hlt
call
pusha
cdq
test
cmp
or
inc
data16
inc
push
cdq
mov
in
xor
push
jle
loopne
mov
jl
mov
jne
jno
nop
add
push
fwait
add
pop
jmp
mov
cdq
sub
das
inc
ret
adc
shl
dec
bound
add
movs
mov
and
stos
das
xor
add
inc
push
push
fistp
inc
das
push
inc
cmp
inc
dec
dec
addr16
aam
out
(bad)
mov
sub
nop
test
pop
mov
jg
xor
outs
and
enter
or
push
inc
test
arpl
sub
mov
dec
mov
xlat
mov
inc
and
pushf
bound
ss
sbb
inc
xor
rol
jl
stmxcsr
lea
je
(bad)
clc
add
mov
xlat
xchg
sub
iret
cmp
mov
loopne
cmp
ret
or
xor
push
retf
rcr
dec
push
mov
(bad)
das
imul
iret
cli
mov
or
and
xor
test
ret
fs
push
xchg
or
enter
cld
fs
mov
lods
inc
cli
push
pop
inc
jo
or
mov
loop
int3
mov
fld
adc
and
popa
cmp
popf
and
xchg
loopne
ret
xchg
outs
cmp
and
pop
shl
cmp
inc
out
mov
pop
ror
add
mov
aad
jmp
mov
aaa
jg
loop
add
ret
mov
outs
push
and
add
dec
add
or
mov
adc
or
fcomp
push
cmp
add
dec
jmp
rcr
sbb
hlt
aad
xchg
aaa
xchg
out
and
sar
cld
iret
mov
jmp
adc
xchg
push
add
jg
and
je
fbld
mov
addr16
adc
aas
nop
cmp
add
call
add
sbb
ret
mov
in
dec
inc
or
mov
cmp
data16
sbb
je
xchg
and
sub
arpl
lea
es
and
or
gs
adc
and
mov
and
test
pop
cmp
push
cld
adc
xchg
xor
fild
ret
cwde
sbb
inc
imul
cmp
jne
adc
push
lock
test
mov
push
dec
in
loope
adc
loope
test
xchg
pop
icebp
adc
imul
mov
icebp
or
xor
movs
or
and
fist
mov
or
xchg
and
xchg
adc
rcl
adc
jg
inc
sub
or
test
or
das
leave
sbb
inc
pusha
xor
inc
push
inc
adc
or
addr16
sub
fs
or
leave
shr
(bad)
adc
cmp
adc
rcr
add
mov
and
add
fcomp
inc
movs
mov
lods
inc
stos
ins
adc
jo
inc
adc
adc
mov
mov
sbb
xchg
adc
or
xchg
inc
lods
jge
pop
setno
cmp
dec
and
push
xchg
xor
and
mov
ret
sbb
xor
or
and
lock
dec
call
pop
push
jbe
and
and
test
fist
mov
xlat
in
and
add
cmp
enter
mov
pop
imul
mov
cmps
in
iret
jmp
call
jmp
sub
mov
sub
xor
mov
lahf
call
cdq
jo
sahf
and
push
xchg
std
dec
xchg
xchg
sbb
adc
xchg
and
xor
or
dec
push
movs
jge
(bad)
adc
inc
jns
cmp
xchg
sub
adc
dec
pop
cwde
dec
inc
lock
clc
mov
ja
jl
mov
mov
fcmovnb
je
sbb
repnz
mov
fdivr
ins
push
cdq
mov
inc
sub
mov
add
mov
mov
mov
pop
cmp
xchg
push
cmp
mov
cmovg
jge
shr
ret
add
and
addr16
(bad)
sub
shl
call
dec
(bad)
hlt
jecxz
or
and
adc
rcl
xor
cmp
pop
mov
push
xchg
clc
pop
push
push
dec
fstp
add
fimul
sub
or
sbb
das
jmp
retf
test
shl
cmp
sub
mov
mov
outs
hlt
stc
icebp
jbe
or
lahf
cmp
push
mov
mov
rol
xchg
lock
adc
adc
jae
cld
loop
loope
adc
test
es
leave
loop
push
popa
or
add
dec
daa
push
and
sbb
push
adc
or
adc
cmp
sub
jbe
test
mov
ds
mov
in
mov
lock
aas
inc
inc
lock
xchg
inc
aaa
lods
xor
shl
adc
add
jg
arpl
xchg
add
(bad)
pop
es
push
inc
jne
xchg
imul
or
inc
(bad)
mov
popa
adc
xor
stos
dec
iret
adc
loope
das
pmaxub
inc
jl
mov
add
xchg
je
mov
leave
dec
movs
dec
not
sbb
xlat
bound
add
aaa
cmps
and
leave
xlat
push
shl
popa
test
sub
imul
movs
dec
xor
mov
call
mov
xchg
sahf
adc
push
mov
shl
adc
sub
pop
jg
sub
sbb
fild
ins
sub
inc
idiv
or
fild
lock
jo
dec
es
jge
xchg
test
jb
xchg
xchg
dec
mov
shl
adc
mov
or
hlt
mov
movs
adc
or
pop
in
sbb
dec
push
xchg
in
call
lock
call
sti
sub
xchg
ins
ins
and
mov
add
ins
mov
mov
sub
xor
in
xor
in
or
and
or
loopne
ret
pusha
and
sub
adc
sbb
mov
jp
enter
lock
cmp
nop
jp
stos
adc
mov
inc
push
and
jg
iret
pop
inc
push
cmp
into
or
or
xchg
imul
loope
jnp
dec
sub
or
mov
inc
dec
mov
iret
(bad)
xchg
pop
jb
xor
push
in
test
adc
or
and
push
cmp
sub
cmp
aad
push
xchg
dec
retf
xor
xchg
dec
push
and
adc
cmp
jge
mov
cmp
add
xchg
push
sbb
out
mov
test
push
jb
pop
rol
cmp
and
sbb
in
lock
xor
movs
cdq
fimul
pop
sub
ins
arpl
popa
mov
movs
mov
lea
jae
adc
push
or
cmp
inc
cmp
sbb
(bad)
adc
push
das
ret
add
adc
cmp
xlat
mov
lahf
or
and
fnstcw
adc
mov
jl
push
popa
sub
adc
jae
fadd
dec
add
sub
cmp
xchg
(bad)
adc
loope
mov
stos
add
sub
leave
add
add
adc
add
dec
and
nop
xchg
mov
js
call
stos
inc
out
mov
pop
cmps
popa
and
inc
clc
adc
dec
adc
inc
cmp
pop
adc
scas
mov
mov
push
xor
pop
xor
add
xchg
test
dec
fmul
pop
dec
mov
add
out
rol
dec
or
loopne
dec
outs
sub
cmp
in
aaa
fs
and
xor
aad
push
es
mov
outs
inc
xor
cmp
mul
gs
add
enter
mov
test
push
outs
fdiv
ins
cmp
jb
rcl
shr
aaa
push
inc
add
sub
push
repnz
test
sbb
dec
sub
add
adc
add
inc
adc
sub
xor
xlat
mov
mov
sbb
aas
fistp
xchg
push
or
pop
bound
add
and
and
hlt
dec
in
and
adc
adc
inc
lds
loope
xor
mov
jne
mov
adc
and
mov
adc
mov
int3
mov
mov
dec
xor
call
sub
rcl
cmp
add
mov
sub
inc
add
inc
push
nop
pop
mov
sub
pop
mov
fsubr
dec
add
mov
mov
jmp
mov
pop
mov
mov
or
je
inc
loopne
mov
das
mov
cmp
or
popa
sbb
sbb
clc
push
int
mov
movs
add
adc
out
lea
xlat
pop
enter
mov
test
mov
fcom
and
pop
jbe
xor
add
dec
sub
and
fs
mov
call
mov
inc
inc
leave
and
in
adc
push
dec
or
mov
dec
push
add
adc
mov
nop
aaa
adc
setno
in
je
add
add
pusha
inc
cmc
xor
aam
(bad)
ror
test
dec
loopne
movs
sub
or
add
sbb
inc
out
push
or
jg
js
push
inc
add
(bad)
jmp
fst
cmp
add
imul
mov
pop
xchg
push
ret
pop
cmp
jae
adc
xchg
imul
cdq
fs
dec
and
sub
jno
xor
movs
inc
mov
and
adc
mov
add
adc
mov
push
push
add
mov
xor
mov
xchg
mov
clc
sub
add
sub
loope
daa
push
adc
inc
fimul
and
sbb
arpl
jge
xor
ins
jecxz
jne
aas
cmp
push
nop
inc
inc
or
add
and
test
or
cmp
push
jmp
test
xor
lods
or
adc
add
xchg
and
je
clc
jb
xchg
jns
push
add
outs
aad
ret
gs
aaa
mov
mov
xchg
mov
popf
inc
cdq
xor
or
inc
adc
or
fstp
addr16
xchg
movs
test
retf
js
sbb
pop
mov
mov
jmp
mov
adc
arpl
and
adc
pop
dec
in
dec
push
xchg
push
in
out
xchg
pop
jae
adc
call
jae
xor
imul
sub
dec
(bad)
cmp
pop
cmps
ret
out
inc
pop
mov
es
jo
mov
mov
fcomip
lds
push
pop
pushf
and
cmps
mov
gs
dec
scas
or
call
xchg
lock
stos
lock
enter
inc
call
gs
adc
mov
fadd
add
imul
ss
mov
mov
fdiv
lods
jge
or
adc
and
or
leave
pop
pop
and
add
and
jno
push
pusha
push
xor
loopne
add
ds
out
aaa
push
aaa
jo
or
jecxz
inc
xchg
out
test
ret
loopne
adc
add
dec
in
and
mov
add
or
add
daa
outs
cdq
sub
push
sbb
mov
inc
sub
ret
in
out
add
push
loopne
je
arpl
ret
test
mov
inc
or
push
popa
adc
inc
xor
adc
xchg
xchg
out
pop
pop
add
shl
loop
pop
jecxz
push
jno
add
xor
(bad)
mov
cwde
add
sub
or
clc
loope
fsub
xor
ror
xchg
fdivr
and
fs
test
cdq
sbb
lea
hlt
nop
stos
adc
in
sub
jge
push
mov
(bad)
daa
jp
dec
and
sbb
mov
sbb
cwde
inc
or
and
int
pop
aam
mov
popa
adc
rol
pop
and
adc
js
gs
and
push
and
mov
addr16
mov
int
int
pop
cmp
sar
pop
dec
push
sub
pusha
pusha
inc
inc
xlat
push
mov
pop
xchg
pushf
mov
enter
push
mov
and
mov
inc
add
leave
(bad)
and
pushf
sub
ret
and
pop
push
add
gs
pop
adc
push
enter
popf
xchg
add
adc
xor
jb
or
cmc
shl
lock
mov
shr
pop
and
mov
adc
pusha
sub
cmps
sbb
or
adc
ins
sub
sbb
movlhps
cs
out
xor
add
push
sbb
sahf
or
dec
and
dec
mov
rcl
pop
inc
lahf
pop
pop
leave
mov
jmp
lahf
(bad)
sbb
adc
xchg
xor
stc
pop
loop
sub
pusha
lahf
push
aam
push
sbb
stc
mov
or
sub
and
mov
mov
jo
xchg
add
inc
dec
ds
sbb
adc
sub
dec
shl
add
loop
push
and
mov
pop
leave
cmp
or
stos
push
les
aaa
test
xorps
jg
jo
adc
popa
pop
inc
rol
and
or
popa
adc
ja
sbb
test
jmp
push
adc
scas
icebp
dec
pop
imul
sub
xchg
inc
sub
out
cmps
es
mov
and
lahf
inc
int
sub
dec
mov
sbb
mov
das
daa
lock
mov
stc
daa
xor
mov
and
arpl
adc
bound
in
add
pop
loopne
and
aas
nop
add
add
in
cmp
movs
enter
cmp
and
(bad)
movs
jg
pop
nop
pushf
and
movs
inc
add
mov
sub
out
cmps
inc
and
and
add
add
sub
test
jb
nop
cmp
test
dec
inc
jb
ror
push
lds
inc
jbe
ds
add
sub
dec
inc
push
test
ret
or
push
nop
jno
add
and
inc
mov
sub
dec
int
push
cmp
mov
mov
fistp
clc
test
xchg
cmps
adc
scas
out
nop
mov
mov
gs
jle
mov
xchg
push
xor
enter
push
xchg
push
push
push
dec
popf
dec
add
idiv
call
leave
adc
imul
xchg
dec
xor
and
push
or
cmc
cmp
dec
xchg
push
int3
lods
add
nop
cli
(bad)
rol
ror
aam
mov
adc
and
sbb
add
mov
add
neg
inc
pop
daa
test
or
out
call
fimul
lods
rcr
xchg
add
test
je
xchg
js
sub
aas
mov
add
scas
push
mov
push
mov
push
mov
jge
popf
ror
lods
lods
in
xor
push
sub
hlt
and
fldpi
pop
dec
adc
in
cmp
mov
adc
mov
int3
xchg
or
xchg
out
push
sub
xchg
jp
sbb
out
or
xchg
dec
or
cdq
scas
mov
shl
sub
add
addr16
bound
aas
or
and
loopne
add
xchg
push
scas
in
pop
add
jae
mov
retf
or
cmps
in
icebp
push
pushf
mov
push
adc
sub
mov
lea
and
in
mov
xchg
enter
lds
clc
add
mov
lock
cmp
pop
jo
adc
sbb
mov
sbb
cmp
lahf
push
and
pop
out
mov
and
mov
xor
xchg
je
es
or
dec
or
lods
sub
add
xor
test
cmp
xchg
cmc
ret
sub
test
jno
sbb
push
repnz
mov
cmp
xor
adc
adc
popa
jecxz
mov
jmp
push
pop
push
xor
aas
lods
mov
sbb
mov
jmp
ins
(bad)
fisttp
mov
pop
adc
sub
imul
in
and
daa
inc
cmp
lock
xor
or
inc
pop
loope
mov
add
adc
xchg
loop
dec
call
mov
or
push
adc
jne
sbb
clc
bound
jo
xchg
push
stos
push
into
cmp
xor
frstor
(bad)
inc
fs
test
push
jecxz
xchg
movs
dec
clc
(bad)
jb
cmp
mov
and
inc
xchg
push
sbb
xor
sbb
or
test
and
dec
call
jnp
mov
iret
inc
sub
mov
popa
add
ret
fst
fnstenv
jmp
and
and
or
dec
rcl
ret
dec
loopne
cmp
sub
pop
inc
jmp
mov
add
cmc
imul
jge
test
mov
or
les
and
js
pop
retf
mov
rol
sub
inc
cmp
sbb
mov
sub
adc
pusha
loopne
inc
xchg
inc
push
jo
fld
or
or
les
adc
sbb
rcl
rol
mov
imul
jmp
lods
sub
cmp
mov
enter
ret
fcom
push
push
mov
sbb
pusha
cmp
scas
lds
mov
int
sbb
jge
cwde
movs
add
and
lods
mov
enter
das
test
push
add
push
nop
pop
das
sbb
jo
push
pop
dec
adc
(bad)
sbb
inc
mov
daa
push
pop
aad
mov
out
retf
loopne
or
ja
pop
add
in
pop
lods
lods
mov
push
outs
xor
sub
rcl
xor
mov
xchg
sbb
mov
mov
sub
idiv
mov
cmp
das
jb
pop
test
pop
push
jecxz
cwde
imul
dec
lahf
pop
shr
test
addr16
cmp
push
hlt
mov
jbe
add
daa
das
xlat
cs
and
lahf
mov
out
pop
or
and
aaa
xchg
mov
push
cdq
lock
adc
or
(bad)
and
shr
dec
xor
call
pop
in
dec
dec
dec
sbb
fdivr
mov
cmc
(bad)
adc
xor
idiv
cmp
pop
cs
sub
dec
xchg
dec
jns
in
fidivr
stc
push
ror
fistp
in
add
adc
mov
pop
fcomp
das
dec
adc
pop
aaa
call
pusha
pusha
and
xor
or
stos
push
add
neg
(bad)
loope
mov
xlat
outs
xchg
mov
add
lfs
push
rol
mov
das
sbb
or
loopne
sbb
push
outs
pop
add
les
frstor
das
mov
enter
add
dec
xor
push
rcr
push
cmp
daa
dec
pop
push
jp
shl
dec
sbb
xchg
mov
adc
or
nop
xchg
inc
aam
mov
movs
loop
aam
xor
(bad)
push
add
or
dec
fcomp
shr
inc
adc
dec
int3
mov
mov
xchg
int3
sub
add
imul
retw
and
in
push
jno
mov
mov
inc
inc
push
mov
mov
jne
jmp
xchg
xchg
inc
mov
ror
imul
ret
test
inc
adc
test
sub
out
dec
inc
fwait
inc
mov
fsubr
pushf
cmp
ds
test
lods
shl
pop
lods
mov
out
inc
sar
int
sbb
sub
mov
and
sbb
pusha
add
add
shr
scas
mov
adc
pop
mov
rcl
cmp
test
cmp
xchg
in
les
sub
pusha
jo
mov
pusha
mov
sub
(bad)
cmps
or
and
push
inc
and
ror
(bad)
adc
sub
jns
push
pop
dec
sbb
aam
popa
mov
mov
sbb
mov
loopne
fwait
loop
pop
outs
arpl
ins
sub
push
sub
inc
rcl
movs
movs
inc
in
pop
test
sub
and
aas
push
cmp
jo
pop
xor
lock
push
cmp
mov
les
pop
sbb
inc
ins
xor
mov
out
and
push
mov
cmp
push
fdiv
imul
vandps
jg
add
dec
xchg
rol
ret
dec
pop
mov
fnstcw
test
lea
sub
mov
push
xor
push
int
pop
inc
and
mov
into
ins
aas
sub
xchg
mov
dec
push
xor
lods
mov
mov
pop
or
or
cmps
ror
mov
(bad)
jg
mov
push
(bad)
cmps
inc
icebp
cmp
in
dec
and
or
clc
inc
addr16
xchg
movq
mov
call
sbb
call
test
call
adc
sub
outs
enter
xchg
cmps
mov
mov
loop
or
xchg
fldl2t
inc
dec
jl
aam
and
stos
ror
push
mov
(bad)
aam
adc
sub
in
add
enter
jb
(bad)
les
and
or
loope
cdq
push
or
add
add
push
test
mov
mov
sub
or
mov
and
in
or
jno
and
in
adc
pop
rol
cmp
inc
add
dec
int3
jne
leave
xchg
mov
add
pop
test
push
mov
leave
mov
dec
pop
inc
or
cmp
inc
dec
out
cmp
and
es
fimul
pop
add
mov
push
pop
imul
sub
in
and
add
dec
push
or
mov
inc
loopne
xor
aam
in
mov
sub
sub
mov
and
dec
dec
pop
jne
sub
inc
rol
fsubr
sbb
dec
jmp
cdq
inc
rol
mov
or
sahf
or
in
dec
add
xor
xchg
lods
mov
shr
out
loope
stc
add
cmc
fistp
add
dec
scas
movs
jnp
gs
pushf
nop
inc
push
cdq
movs
and
jmp
pop
mov
adc
loopne
jno
or
fadd
dec
scas
call
inc
sbb
nop
loopne
int3
lds
or
add
out
inc
sub
dec
(bad)
and
fst
or
int
add
add
add
sbb
or
outs
pusha
pusha
or
shl
or
xor
or
cld
cmp
add
dec
or
dec
jns
aaa
mov
or
inc
push
or
ror
or
aaa
jo
sbb
ror
outs
pusha
mov
xor
sahf
in
ror
push
xchg
outs
xor
add
sub
or
sar
(bad)
leave
repnz
test
add
push
test
lahf
cmp
pop
leave
adc
ins
sbb
jns
and
xor
jmp
adc
adc
je
push
cwde
or
in
jb
mov
and
push
es
xchg
sbb
daa
jae
sub
lods
leave
sbb
pop
add
xlat
and
xchg
in
jne
push
add
imul
and
or
in
hlt
out
in
stos
lea
jnp
fldcw
pusha
loopne
ficomp
fbstp
fst
cs
pop
and
and
pusha
cmps
jo
mov
pop
sub
test
or
inc
enter
mov
js
jb
fsub
sbb
sub
xor
mov
out
in
mov
push
add
leave
push
ins
aam
ror
adc
and
dec
test
push
stc
push
lock
add
adc
mov
stc
inc
icebp
add
adc
aad
xor
(bad)
aad
arpl
test
lods
mov
bound
pop
or
retf
sbb
push
mov
mov
push
jno
iret
sbb
leave
and
jmp
xlat
outs
shr
call
hlt
movs
ja
pop
jmp
sub
or
mov
mov
icebp
push
push
fxch
mov
popa
pop
inc
pop
call
push
adc
in
lods
sub
and
cmps
xor
and
test
mov
pop
and
xchg
int3
push
fcomp
rol
add
add
cmc
daa
pop
fst
cdq
stos
add
test
dec
push
pop
lods
sub
pop
fst
sub
sbb
data16
cmc
mov
pop
popa
sub
aad
rcr
mov
cld
fst
sbb
or
dec
add
xchg
pop
or
js
es
pop
xchg
fcomp
push
movs
mov
fcomp
xchg
and
push
mov
stc
call
or
arpl
or
es
adc
or
fadd
in
push
adc
and
adc
dec
add
aaa
cdq
and
mov
xor
in
xchg
or
or
pop
add
ret
or
xchg
xor
mov
jb
push
les
add
lock
fld
or
lds
push
mov
loop
call
rcl
lahf
add
push
rcr
fstp
ja
or
add
lock
stc
ret
inc
aam
cld
fist
and
cmp
test
nop
loopne
add
mov
mov
fwait
add
test
pop
les
xor
add
ins
mov
imul
in
sti
shl
dec
pop
jmp
add
add
aad
xor
jb
mov
(bad)
sti
mov
mov
sbb
scas
pop
movs
adc
inc
leave
dec
enter
(bad)
mov
test
add
mov
mov
pop
pop
sbb
xor
movs
add
xchg
cmp
lock
mov
test
sub
and
nop
daa
push
into
adc
jne
inc
sbb
sbb
cmp
or
cwde
adc
and
loope
cmp
adc
not
jmp
push
mov
and
js
loope
test
inc
pop
xchg
dec
rol
mov
pop
shl
pushf
pop
mov
inc
loopne
xor
cmps
lock
out
inc
pusha
and
hlt
popf
or
movsx
xor
jbe
or
sar
shl
dec
nop
sbb
cmp
rcr
or
mov
pop
in
mov
xchg
add
mov
cmp
push
push
xor
out
xor
adc
mov
mov
out
add
test
add
and
push
ror
cmp
jmp
ds
ss
ss
jo
scas
ins
cmp
test
dec
mov
popa
jns
cmp
sbb
adc
pop
push
lea
jns
fadd
xchg
inc
test
fs
inc
mov
test
mov
push
adc
jne
retf
pop
lea
inc
sbb
sub
and
out
sub
imul
add
les
packuswb
out
or
jmp
ret
movs
cmp
aaa
dec
mov
xor
push
in
cs
and
mov
mov
xor
push
sbb
sbb
js
(bad)
aam
ins
pop
inc
or
enter
mov
mov
push
cmp
mov
mov
out
jo
xor
mov
mov
fdiv
or
mov
jo
jno
in
inc
mov
jne
jnp
or
push
mov
mov
mov
sar
outs
add
and
mov
sbb
push
sub
adc
pop
cld
call
and
call
and
push
sbb
or
mov
mov
mov
jae
in
mov
inc
loopne
sar
sbb
pusha
enter
add
ds
mov
loop
cmp
xchg
xchg
inc
pop
pop
pop
test
jmp
test
pop
and
and
cmp
loopne
dec
inc
rol
nop
and
int3
sahf
pop
icebp
push
call
adc
or
int3
jl
fs
jmp
inc
shr
popf
inc
jmp
push
sbb
dec
jmp
pushf
dec
mov
clc
out
pop
push
ins
jne
push
jb
fadd
xchg
adc
mov
jo
xchg
or
pop
xor
add
add
ficomp
lahf
add
sbb
sub
fimul
cwde
dec
xchg
mov
cmps
lock
iret
and
jo
xchg
inc
mov
xchg
push
jg
or
int3
and
out
inc
jp
dec
lods
sub
fcmovnbe
ja
jb
add
push
xor
scas
mov
add
add
pop
sar
inc
sbb
dec
movs
xor
sub
push
inc
inc
and
sar
or
sub
dec
daa
loopne
xchg
aam
push
or
push
or
fld
pop
xor
stos
add
(bad)
sub
push
push
out
inc
imul
lea
fsub
jno
push
loopne
arpl
push
adc
lea
loope
cmp
cmp
int3
pop
push
loopne
test
push
xchg
and
sbb
dec
mov
inc
loopne
int
mov
lods
and
mov
pop
fbld
sub
dec
int3
(bad)
or
daa
pop
and
fadd
mov
xchg
sub
lahf
cmp
mov
pop
fs
je
jb
fucomp
popa
cdq
jl
add
adc
jmp
in
js
in
lods
test
jae
push
push
push
ret
dec
xchg
xor
jmp
xchg
jne
push
rcr
xor
and
dec
add
push
and
pop
icebp
pop
adc
inc
jecxz
push
ins
mov
or
xchg
imul
loop
repnz
add
inc
mov
or
inc
mov
dec
and
lahf
push
jmp
lock
repz
add
int3
mov
es
sub
adc
pop
pop
jae
sbb
mul
enter
sub
shl
cmp
xchg
shr
xchg
(bad)
fs
and
mov
lea
sahf
add
push
sub
outs
push
lods
add
repz
sub
cmps
add
mov
pop
retf
sub
dec
cld
add
sub
rcl
jno
aaa
push
scas
adc
mov
addr16
push
inc
hlt
inc
cmps
jo
inc
out
mov
add
es
mov
stc
sub
mul
(bad)
mov
sahf
test
inc
adc
(bad)
jns
and
js
pop
jmp
push
mov
jne
mov
imul
push
call
xor
arpl
ja
sub
jl
sbb
cld
inc
mov
jl
imul
cmc
ins
push
push
scas
mov
or
not
or
pop
inc
push
adc
add
add
imul
imul
dec
and
jecxz
daa
mov
inc
inc
add
add
popa
and
cmp
add
pop
add
or
sbb
or
and
(bad)
dec
dec
nop
and
stos
ins
pop
push
sbb
jns
scas
sahf
idiv
cmps
rol
hlt
sbb
mov
ss
nop
ret
add
movs
mul
ror
and
cmp
stos
xchg
(bad)
pop
ds
mov
cmc
and
es
pop
or
test
add
or
dec
add
sub
add
test
sub
or
sbb
push
sbb
movs
pushf
mov
es
xor
pop
sbb
(bad)
mov
pop
test
daa
add
leave
jecxz
imul
or
adc
mov
jp
and
out
sbb
or
jb
lahf
in
cmps
(bad)
fisttp
sti
and
nop
adc
or
sti
adc
mov
pop
repz
push
dec
aaa
pop
es
out
adc
cdq
mov
pop
loope
xor
outs
bound
retf
xor
or
dec
inc
mov
sbb
cmp
pop
cld
shl
inc
sub
add
stc
dec
fild
mov
adc
lock
movq
xor
cwde
mov
lds
push
test
mov
push
xor
loopne
stos
push
retf
and
sbb
dec
and
xchg
(bad)
cmp
les
clc
fsubr
dec
(bad)
mov
and
or
adc
or
add
add
mov
mov
es
xor
rcl
sar
pop
outs
in
cmp
shl
cmp
lahf
xchg
paddsb
fist
adc
cmps
cmps
dec
clts
dec
adc
mov
dec
aad
lahf
dec
pushf
enter
movs
inc
sbb
fisttp
adc
push
xor
push
or
push
out
cdq
and
ja
sbb
sar
sub
adc
mov
push
(bad)
dec
mov
inc
lock
inc
mov
mov
addr16
xor
push
call
cmps
push
mov
sbb
dec
lahf
in
mov
push
dec
dec
shl
adc
push
adc
and
add
push
pusha
cmp
and
rcr
push
add
(bad)
mov
ja
mov
(bad)
jmp
or
xchg
dec
adc
add
jae
xchg
push
in
lods
xchg
dec
xchg
in
in
(bad)
retf
adc
xchg
div
retf
dec
jo
and
adc
sbb
push
push
movs
adc
xor
(bad)
jo
inc
xchg
adc
jnp
jne
add
pop
adc
xor
adc
push
fadd
pop
sbb
nop
mov
sbb
add
cmp
nop
cs
push
and
test
cwde
xor
cmp
sub
rcl
or
add
add
sub
xlat
inc
and
das
add
add
push
leave
push
push
ret
pop
push
push
or
pop
xchg
mov
mov
fcomi
dec
repnz
inc
sbb
test
adc
add
inc
fs
push
pop
iret
inc
pusha
adc
xor
sbb
dec
jge
pusha
aaa
mov
jno
(bad)
rcl
xor
cwde
xor
jns
mov
add
jae
or
sbb
sbb
test
ret
or
imul
in
add
or
ja
(bad)
add
add
or
pop
and
push
jmp
mov
es
(bad)
sti
and
ja
dec
sbb
add
es
lods
jne
fld
jnp
in
jnp
in
stos
inc
and
sbb
or
jmp
pop
leave
fbld
repz
mov
xor
sub
adc
xchg
cmp
sbb
js
mov
retf
mov
jo
in
cmc
and
(bad)
mov
or
cmp
sub
jne
shr
lods
ret
cmp
fwait
mov
jb
popf
push
inc
(bad)
das
in
push
pop
mov
sub
mov
nop
and
xchg
bnd
mov
fadd
lea
mov
or
pop
add
cmp
jge
adc
xchg
xchg
jmp
ja
mov
xchg
dec
inc
je
daa
or
call
in
cmp
adc
xor
(bad)
shl
push
or
mov
mov
push
call
outs
sbb
adc
add
push
(bad)
(bad)
mov
dec
loope
(bad)
sahf
add
es
js
dec
add
xor
xchg
xor
xchg
or
hlt
and
frstor
push
cmp
in
daa
cwde
or
ja
sbb
xchg
pop
adc
loopne
push
push
xchg
jg
or
adc
mov
push
lods
cmc
push
repnz
push
ret
add
fs
sub
ja
dec
adc
and
xor
mov
push
mov
jo
mov
(bad)
or
push
sub
xchg
mov
dec
pop
add
leave
pusha
jns
stos
xchg
outs
(bad)
movs
or
push
cmps
adc
push
sbb
imul
int
inc
(bad)
sbb
and
movlps
enter
or
stc
push
jmp
dec
lods
xchg
mov
aad
jnp
xchg
cmp
mov
nop
rcl
int3
push
xor
adc
(bad)
loopne
or
and
mov
out
mov
adc
cmp
cmp
push
add
push
loope
and
sti
aam
or
in
sbb
sub
cli
sub
dec
fstp
and
mov
rol
in
sar
dec
push
int3
int3
mov
push
inc
enter
dec
push
inc
scas
push
in
mov
adc
mov
sub
fxch
inc
pop
inc
xor
push
mov
xor
sbb
and
or
arpl
ins
jmp
nop
fwait
fwait
jae
cs
push
in
(bad)
in
adc
xor
push
dec
sub
fldenv
call
lea
jmpw
pop
fistp
out
in
lahf
ret
test
std
iret
adc
nop
add
test
pop
das
add
inc
sbb
pusha
pop
mov
pop
inc
dec
cmp
out
mov
pop
push
popa
mov
enter
out
push
adc
sbb
pop
push
adc
pop
retf
and
jnp
outs
adc
and
cmp
fwait
aam
aas
or
xlat
xor
adc
add
retf
lock
int3
or
test
inc
inc
jns
movs
in
les
xchg
xor
outs
loopne
push
inc
jg
int
mov
lods
fbld
retf
aaa
or
and
sbb
in
movs
test
inc
cmp
and
gs
test
push
jbe
ss
cmp
xor
pop
cwde
pop
sub
pop
in
es
mov
test
popa
inc
je
mov
cdq
daa
push
aas
and
sbb
jbe
mov
add
pop
pop
push
lock
in
sbb
mov
ret
xlat
adc
adc
xlat
cmp
jb
mov
sbb
sbb
push
sub
adc
in
(bad)
mov
mov
aas
sbb
pop
sbb
xor
addr16
xor
lods
jl
loop
xor
inc
int
je
and
inc
or
fidiv
add
dec
cmc
es
xor
test
aad
jne
xchg
adc
minps
dec
movs
inc
dec
mov
pop
mov
jge
xor
xor
adc
cmp
and
enter
xchg
dec
and
cmp
xor
push
inc
inc
les
xor
xor
lods
pop
or
and
jbe
shl
xor
and
jmp
xor
and
xchg
jl
imul
je
icebp
movs
push
add
jb
mov
adc
push
push
dec
or
sbb
cmps
jmp
and
clc
xchg
popf
mov
xlat
inc
(bad)
dec
js
push
out
push
fwait
test
push
fcmovnu
sti
xor
and
pop
push
xlat
sbb
dec
push
sbb
ret
push
leave
mov
push
xchg
adc
mov
mov
dec
adc
or
jmp
shl
movs
mov
adc
push
retf
lods
pop
movs
mov
es
lock
call
or
sbb
loopne
or
adc
add
pushf
push
pop
mov
mov
mov
leave
mov
add
fs
inc
push
lahf
stos
add
adc
dec
or
pusha
xchg
mov
and
(bad)
(bad)
lock
imul
or
mov
aas
ret
popa
or
or
jb
imul
loop
jmp
pop
inc
int3
in
push
xchg
push
bound
scas
pop
add
dec
sub
xchg
fild
mov
sub
push
or
std
xchg
in
push
or
out
push
test
adc
cmp
loopne
sidtd
adc
push
ss
test
xor
test
and
js
pop
add
and
imul
cmp
sub
push
fcomp
sbb
mov
sbb
(bad)
cmc
inc
dec
xchg
push
and
lgs
push
jmp
jg
retf
cmp
mov
and
scas
adc
push
mov
jecxz
or
movs
rol
enter
test
iret
pop
add
cmps
jnp
or
adc
int
pushf
pushf
jne
and
adc
xor
movs
and
iret
lea
xchg
outs
xchg
or
push
or
call
adc
cdq
add
rol
inc
dec
sub
aad
out
mov
or
mov
call
mov
pop
adc
push
xor
adc
and
add
test
adc
daa
icebp
push
pusha
mov
inc
or
add
popa
push
add
das
test
nop
push
add
ins
sub
aaa
xchg
sub
nop
test
ins
lock
or
inc
ins
sbb
test
pop
je
adc
mov
fcmovbe
pop
loopne
and
mov
and
push
lock
or
and
inc
xchg
mov
scas
pop
xlat
fs
sbb
sbb
and
cmp
push
jbe
mov
hlt
sub
retf
adc
dec
push
enter
push
fs
cmp
push
mov
les
inc
loop
jno
dec
adc
or
lods
in
xor
jne
out
cmp
pop
mov
pop
pop
pop
(bad)
stc
mov
adc
retf
dec
add
add
test
or
xchg
and
mov
xor
pop
or
add
pop
imul
sub
in
adc
scas
add
add
and
and
jns
pop
jp
mov
jecxz
lahf
jge
bound
imul
cmp
mov
ja
call
mov
inc
pop
gs
loope
or
cmp
mov
movs
mov
sbb
xchg
fild
out
sbb
and
loopne
jmp
jo
sbb
ret
or
xor
imul
stos
sbb
aam
lahf
add
pop
test
jecxz
ins
ins
pop
mov
dec
sub
imul
dec
(bad)
jmp
in
lods
pop
and
push
add
mov
mov
add
jne
adc
cmp
test
lods
inc
cmp
jbe
mov
fstp
jle
and
adc
inc
and
or
and
pop
pop
push
outs
pop
cmp
sub
dec
and
sub
lods
mov
movs
sub
(bad)
enter
in
mov
or
cmc
in
dec
push
mov
addr16
ins
sub
push
leave
retf
mov
sub
xor
jge
ror
adc
cdq
or
add
inc
enter
arpl
dec
enter
push
sub
add
cmp
adc
out
or
mov
mov
adc
inc
inc
test
inc
inc
mov
and
test
dec
dec
pop
pop
sub
call
and
aas
and
les
in
test
dec
movs
xchg
mov
in
cmovb
or
mov
cmp
stc
adc
je
adc
jnp
scas
(bad)
mov
call
lods
test
mov
pop
inc
out
mov
pop
mov
xchg
mov
sub
stos
es
jmp
in
and
jne
int3
in
xchg
cmp
in
loopne
adc
pop
int3
jge
dec
test
sub
sub
loopne
leave
jae
xor
loopne
and
outs
lods
stos
cmps
pop
mov
inc
push
mov
xor
shl
add
mov
ret
cmp
jb
stos
cmp
ins
popa
ins
loop
es
sahf
inc
aam
inc
and
clc
mov
sub
cmp
rol
or
enter
inc
je
mov
popa
sub
ficomp
push
repnz
push
(bad)
mov
add
add
mov
xchg
xor
adc
pop
test
ds
jle
push
add
pop
xor
out
push
pop
ins
xor
ja
mov
adc
(bad)
and
and
(bad)
cwde
lods
retf
idiv
dec
push
ss
mov
cmp
mov
stos
cmp
(bad)
cwde
mov
cmp
xchg
lock
pop
test
lds
daa
mov
retf
test
inc
pop
sub
or
push
push
xor
test
push
cmp
repz
scas
adc
neg
mov
pushf
mov
addr16
or
ret
ss
add
push
adc
mov
push
lods
mov
xchg
mov
jge
dec
pop
cmp
enter
lock
and
outs
aaa
mov
bound
add
in
fneni(8087
mov
or
jmp
lock
pusha
push
mul
jne
mov
or
add
adc
pop
pop
and
xchg
or
loope
pop
outs
push
cmps
and
sub
adc
(bad)
aaa
sub
or
push
bound
inc
fcmovnb
imul
adc
or
cmps
push
shl
test
dec
adc
adc
or
sub
and
adc
and
stos
and
mov
push
or
push
xchg
add
pop
xor
push
enter
xchg
adc
xor
and
rol
popa
cmp
mov
mov
pop
es
leave
dec
xchg
in
cmp
shr
fsub
int3
cmp
xor
pop
in
dec
adc
inc
dec
not
adc
cmp
and
mov
push
sub
push
or
cwde
in
mov
jmp
push
and
aas
mov
xor
and
and
push
bound
stos
inc
icebp
(bad)
sub
and
mov
pop
inc
or
pop
stos
inc
add
ret
dec
es
sbb
pop
nop
scas
in
in
and
xor
pop
jb
xor
mov
and
and
add
cwde
inc
push
add
nop
jo
fldenv
and
sub
xchg
mov
aas
sub
inc
cwde
jb
jge
sub
add
pop
rcr
les
enter
cmp
mov
adc
and
and
out
adc
rol
cmps
jne
mov
leave
add
or
inc
inc
mov
push
loopne
(bad)
es
fcomip
daa
adc
loope
adc
popf
adc
aaa
adc
dec
xor
dec
rol
and
cmp
loop
and
xchg
sbb
xor
les
adc
xor
inc
ja
test
push
out
mov
rol
xor
jle
cwde
pusha
das
dec
mov
gs
aaa
sbb
sbb
ja
dec
rol
inc
and
adc
cmovp
xor
add
xor
loop
mov
inc
push
das
inc
les
push
dec
(bad)
ret
dec
aas
push
pop
mov
xor
inc
movs
mov
sbb
sbb
add
mov
popa
push
and
xchg
outs
mov
adc
cdq
sbb
and
sub
out
inc
push
inc
or
sub
mov
adc
daa
loop
and
les
push
sub
cdq
loope
xchg
xchg
dec
xor
ins
cmp
and
pop
mov
sbb
xor
(bad)
fs
jmp
sbb
aaa
push
mov
pop
inc
adc
adc
add
rol
xchg
pushf
add
pop
dec
jl
call
mov
adc
or
es
les
push
dec
data16
ret
sub
mov
mov
mov
lar
cmps
bound
js
pusha
xchg
ror
inc
test
jno
and
iret
test
mov
pop
push
ins
jl
shr
mov
pop
and
inc
rcl
xchg
or
hlt
sub
sbb
dec
ret
sbb
shl
fucomi
xor
popf
scas
push
push
add
lahf
pop
and
xchg
mov
sub
les
dec
(bad)
dec
jecxz
sar
leave
push
and
and
sbb
pop
or
hlt
(bad)
xchg
and
cmp
(bad)
fs
xchg
and
adc
sub
sub
push
inc
cmp
inc
push
xchg
xlat
adc
dec
adc
mov
inc
or
test
cmp
fcomp
(bad)
mov
fidiv
es
or
lahf
jo
pop
mov
push
mov
pusha
add
out
js
bound
xor
add
inc
mov
loopne
loop
jno
mov
shl
sub
in
stos
mov
pusha
mov
push
arpl
adc
and
inc
loop
xlat
jg
adc
push
jg
inc
test
push
mov
push
popf
dec
jo
mov
push
jno
lahf
xchg
mov
push
and
and
inc
or
mov
push
inc
push
and
push
out
and
sub
push
push
dec
and
movs
push
jo
mov
lahf
lea
adc
rcl
cmp
and
(bad)
(bad)
leave
aam
outs
dec
popf
add
and
jg
sub
add
stos
in
add
pop
sub
mov
adc
pop
pop
out
aam
and
ror
in
add
adc
add
adc
inc
sbb
push
jno
mov
push
stos
dec
sbb
push
cmp
xor
cld
and
push
cwde
aam
sbb
sub
xchg
or
(bad)
xlat
xor
pop
out
sub
mov
icebp
lds
loopne
in
adc
xchg
and
add
es
sar
aam
out
adc
popf
inc
dec
jno
and
ins
pushf
jno
hlt
jg
inc
pop
push
ins
outs
je
(bad)
cmp
js
and
pop
nop
inc
jae
fucomip
in
pop
sbb
bswap
fistp
and
or
jg
mov
js
in
xor
adc
pop
xchg
or
or
add
adc
mov
xor
push
add
test
outs
fwait
in
in
add
inc
pop
push
inc
(bad)
dec
test
cmp
enter
inc
xchg
femms
test
(bad)
stos
cmp
clc
popa
push
in
or
dec
mov
inc
pop
adc
xor
mov
xlat
dec
(bad)
add
in
lea
xchg
pop
add
pushf
mov
dec
dec
enter
jp
adc
mov
add
out
inc
int3
push
sub
cdq
push
push
bound
lahf
cmps
mov
out
and
(bad)
mov
push
scas
les
add
push
inc
xor
imul
push
pop
es
xchg
jle
mov
or
lods
push
push
pop
adc
cmp
push
pop
or
cwde
cmp
and
cmp
add
fs
adc
imul
inc
adc
push
fdiv
xor
cmp
or
les
test
jnp
and
adc
rcl
cmp
add
xor
out
cwde
fmul
out
les
imul
stc
jb
cmc
rol
xor
ja
mov
test
pop
mov
js
jo
enter
sub
imul
retf
or
rcr
xor
and
xchg
scas
movs
push
ror
xchg
sbb
inc
jb
and
cmp
push
sub
nop
fist
adc
cmp
shl
rcl
xor
ret
jo
lods
xor
bnd
pop
pop
test
xchg
fcom
pop
xor
enter
aaa
(bad)
movs
std
jg
jnp
cmp
xlat
mov
dec
fstp
mov
dec
adc
mov
and
or
cwde
add
je
push
xchg
test
fldcw
fs
fwait
pop
dec
cmp
sbb
mov
or
mov
xchg
pop
or
loop
imul
dec
inc
jnp
push
xor
scas
cmp
loope
adc
test
add
cmovp
outs
in
dec
and
jl
add
inc
mov
ror
mov
push
fcom
je
std
cmp
adc
pop
mov
cmps
nop
jp
dec
addr16
xchg
dec
push
jmp
and
fsub
out
xchg
cld
(bad)
push
mov
dec
mov
scas
dec
pop
xor
push
dec
test
push
mov
sub
or
ja
inc
popf
shr
stos
ja
dec
inc
sub
or
push
arpl
cmp
adc
xchg
mov
repnz
xor
outs
test
sbb
push
mov
dec
pop
pop
movs
mov
sub
aam
sbb
mov
inc
inc
sbb
ror
pushf
sub
mov
and
pop
xchg
push
add
inc
xchg
nop
xor
inc
inc
inc
jmp
pop
push
mov
dec
adc
test
jb
inc
pop
ins
cmpxchg
xchg
push
aam
cmp
jno
(bad)
xor
and
adc
jno
inc
dec
and
bswap
or
pop
sbb
outs
mov
add
(bad)
push
sbb
movs
nop
sub
fsubr
jb
and
daa
inc
or
pop
leave
inc
push
push
int3
push
xor
xor
and
dec
sub
jno
xor
push
sbb
fst
das
and
repz
sub
and
mov
test
add
lock
sub
pop
loop
and
(bad)
lods
ins
and
pop
add
and
jb
inc
xor
xchg
(bad)
pop
push
in
in
push
inc
push
cmp
dec
xor
mov
dec
mov
xor
mov
shl
nop
jne
xchg
mov
in
xor
sbb
xchg
test
dec
push
dec
pusha
test
retf
mov
daa
push
leave
xchg
cs
out
leave
das
sub
xchg
or
pop
inc
enter
mov
sbb
test
or
pop
shl
lock
mov
or
retf
mov
xchg
test
pop
xor
push
pop
das
daa
mov
iret
xor
test
mov
clts
test
in
rol
sub
and
cmp
daa
sub
mov
imul
pop
mov
sar
mov
or
inc
in
mov
add
icebp
inc
dec
sbb
sbb
pop
add
and
sbb
xchg
jo
jo
add
sub
and
test
mov
or
inc
loop
rcl
movs
sti
or
les
int3
inc
fcomp
sub
add
in
jns
jb
jb
jb
nop
dec
movs
inc
xor
dec
add
sub
adc
adc
push
and
mov
xor
sysret
(bad)
daa
nop
dec
sbb
xchg
jmp
bound
addr16
les
(bad)
pop
xor
xor
je
add
mov
jo
adc
dec
mov
mov
rcr
ja
xor
cmp
cmp
fld
popa
enter
arpl
xor
dec
jae
inc
inc
mov
test
sar
dec
ror
mov
add
dec
pop
fld
add
pop
mov
popf
out
and
sub
imul
adc
or
cmp
enter
cmp
and
and
cmp
add
cmp
shl
sbb
jae
adc
xor
push
stc
pusha
add
enter
add
cdq
add
add
dec
scas
cmp
test
movs
jno
and
and
mov
jnp
or
aad
leave
imul
push
adc
fstp
sbb
dec
sub
jb
icebp
jb
pop
lea
cmp
cmc
lea
jne
and
imul
retf
dec
lods
pushf
jp
dec
fcom
or
sbb
jne
pop
std
jae
push
dec
ja
fwait
stos
pop
adc
pop
iret
mov
sub
mov
push
ror
cmp
push
mov
call
int3
xchg
sbb
add
les
js
faddp
dec
xchg
call
aad
mov
ja
push
pop
sbb
xor
pop
fistp
bound
loop
and
xchg
movs
inc
inc
mov
ins
in
lods
or
fidivr
xor
loopne
push
cmps
in
(bad)
fcomp
or
movs
pushf
fcomp
sbb
leave
inc
jle
xor
pop
xor
fwait
xchg
xchg
aas
rol
fwait
mov
mov
mov
stos
call
nop
inc
shl
nop
into
push
repnz
xchg
pop
sbb
repnz
call
(bad)
dec
and
(bad)
stc
push
sbb
scas
rcr
dec
sahf
ror
add
adc
push
inc
rol
and
jmp
push
(bad)
mov
je
jns
jno
in
mov
out
mov
push
xor
fstp
and
nop
pop
nop
jp
stc
imul
cmp
and
pusha
add
jp
sbb
push
pop
adc
push
cmps
xchg
push
push
mov
(bad)
in
cwde
mov
jmp
cmp
movs
xor
shl
and
shl
jmp
mov
leave
retf
jnp
adc
push
dec
popa
push
in
aaa
add
xor
call
mov
int3
(bad)
nop
pusha
xchg
xchg
mov
adc
inc
mov
shl
add
sbb
inc
pop
pop
adc
jns
fdivr
retf
push
fsubr
clc
add
pop
or
sar
ins
ins
push
fstp
push
inc
test
ins
and
cmp
pop
loopne
imul
push
jge
mov
pusha
dec
jp
inc
pop
jge
test
sub
retf
rcr
into
or
(bad)
jmp
push
jmp
dec
adc
enter
aad
aam
and
jb
pop
mov
add
add
add
jb
push
mov
leave
sbb
push
pop
pop
xor
or
addr16
dec
push
in
and
dec
dec
and
jb
inc
cmp
and
xor
add
inc
inc
movs
xor
mov
cmp
inc
mov
mov
jmp
popf
push
jae
xor
and
test
mov
pop
inc
movs
cdq
mov
mov
pop
js
loop
shl
add
and
in
out
add
int
imul
push
fisub
ins
add
mov
and
rcl
sub
outs
mov
aam
mov
xchg
lods
test
mov
adc
push
mov
lds
mov
enter
pop
movs
mov
add
xor
stos
add
popa
outs
lahf
and
pusha
or
rcl
(bad)
cmp
pusha
mov
push
test
(bad)
or
push
push
pop
pop
sbb
scas
sub
dec
or
shl
dec
sbb
addr16
or
repnz
lea
fisttp
xor
push
aaa
inc
inc
retfw
outs
das
test
cmp
addr16
cmp
scas
xchg
lods
mov
and
shr
add
ret
rcl
mov
push
js
inc
inc
mov
sub
push
inc
or
add
ja
mov
jne
sbb
int
cmp
nop
xchg
xchg
mov
cmp
cdq
pushf
pushf
mov
nop
jno
movs
pop
test
add
xchg
sbb
pop
or
jmp
mov
adc
rcr
aam
cmp
sbb
arpl
outs
nop
inc
popa
sbb
jnp
xchg
xchg
mov
ror
in
mov
or
xchg
ret
mov
mov
loop
stos
rol
cmps
inc
sub
and
add
popa
popa
and
mov
mov
and
or
test
daa
jne
shl
mov
or
push
add
and
or
mov
push
mov
nop
mov
push
or
pop
mov
xchg
rcr
push
jl
add
leave
xchg
mov
inc
xchg
rcr
push
pop
push
adc
aas
dec
push
add
cld
or
(bad)
ins
mov
push
ret
mov
jmp
mov
shl
pop
adc
cmp
sub
jmp
sub
ret
inc
data16
sub
mov
iret
pop
(bad)
jbe
sbb
pop
test
out
and
adc
push
test
add
mov
xchg
mov
or
and
or
arpl
es
xchg
ret
push
div
shl
ja
add
adc
add
mov
pop
ja
in
jbe
sub
leave
jae
and
and
sahf
add
test
test
mov
or
cmp
xchg
add
aad
or
inc
and
sub
mov
loopne
scas
adc
rcl
in
or
enter
adc
sar
cmps
xor
push
es
movs
jmp
inc
xchg
dec
imul
loop
aam
sahf
or
xchg
sub
or
(bad)
dec
cmp
mov
push
push
sbb
jmp
push
and
dec
inc
mov
and
xchg
in
mov
cmp
sbb
cs
and
fnsave
xchg
or
hlt
jns
sbb
nop
xchg
xor
or
push
pusha
popa
jmp
cmovl
out
jne
or
or
adc
mov
xor
mov
out
dec
sti
movs
dec
movs
in
push
imul
add
inc
dec
adc
add
dec
mov
scas
xor
adc
das
aad
mov
xchg
mov
xor
nop
sbb
icebp
mov
xchg
or
test
call
inc
mov
adc
lahf
or
adc
inc
shl
cmp
ror
mov
mov
cmp
aam
mov
ja
xchg
test
sbb
xchg
jl
cmp
xchg
inc
call
push
aam
sahf
sbb
in
in
in
sbb
leave
push
xchg
retf
adc
loopne
(bad)
mov
inc
or
les
ror
dec
pop
add
gs
inc
in
xchg
in
add
inc
and
inc
jmp
or
sbb
mov
mov
ss
leave
(bad)
aam
xchg
mov
fild
mov
pop
pop
inc
mov
push
cmps
mov
mov
rcl
and
add
add
or
sbb
enter
lods
inc
mov
jae
cmps
or
adc
or
xor
mov
xchg
popa
sub
sub
dec
dec
ret
inc
sub
cmps
or
mov
stc
test
jp
jl
and
jl
jb
mov
mov
or
lock
sbb
jg
xor
mov
and
push
daa
jge
sub
push
ficom
mov
xchg
and
and
dec
lods
(bad)
pop
and
push
mov
les
push
push
mov
or
cmp
inc
(bad)
loopne
adc
or
mov
xchg
in
add
test
inc
sub
inc
mov
sub
rol
test
or
sbb
xchg
lods
push
adc
ret
sar
add
loop
ss
aas
cvtpi2ps
rcr
add
jno
mov
or
pop
cmp
cwde
mov
les
and
rcl
in
and
adc
arpl
push
aaa
inc
xor
dec
lahf
ret
inc
loop
sub
push
dec
repz
(bad)
and
mov
sbb
lea
adc
mov
pop
xchg
mov
push
leave
adc
loopne
dec
pop
in
enter
sub
outs
sar
sar
jmp
ja
pop
outs
aaa
pop
ja
sbb
push
shl
push
aad
dec
or
setnp
lock
in
mov
adc
je
inc
cwde
xchg
or
or
jae
fdivr
mov
sub
outs
inc
stos
adc
clc
fs
stos
push
push
imul
push
xchg
push
jb
pushf
aas
popa
push
rcl
inc
popa
pop
push
in
add
sbb
add
pop
ja
inc
and
sub
ficom
push
ins
and
stos
das
aas
jbe
lods
push
dec
or
call
and
repz
jne
mov
add
dec
sub
or
nop
mov
movs
mov
test
ins
adc
pop
(bad)
imul
jmp
aaa
pop
das
rol
and
or
les
or
dec
or
call
xchg
(bad)
mov
std
(bad)
xchg
mov
adc
jb
in
dec
mov
xchg
xor
sbb
call
into
jmp
movs
mov
push
repnz
mov
jo
ror
push
and
pop
jb
sets
mov
adc
xor
repnz
rcr
cmps
imul
pop
scas
loopne
xor
sub
sub
pop
or
retf
mov
sub
fs
movs
jne
cdq
fst
bnd
enter
ss
lea
addr16
sbb
inc
cmps
xor
push
mov
push
push
and
leave
adc
jmp
lock
fs
stos
stos
loopne
pop
mov
data16
test
push
adc
shl
lea
mov
aas
sub
push
jo
jb
stos
stos
jae
cmps
les
inc
dec
enter
enter
push
fisub
in
adc
cmp
arpl
cmps
jmp
xchg
push
add
mov
dec
sub
loope
out
sub
and
push
(bad)
push
repnz
in
dec
movs
push
movs
add
inc
daa
rol
xchg
add
sbb
enter
inc
add
movs
push
sub
retf
lea
mov
int
lods
movs
fist
add
or
or
xor
xchg
cmps
cmps
dec
jb
inc
aad
or
gs
cmp
sbb
js
fstp
in
cmps
cdq
mov
les
sti
call
mov
in
js
call
mov
mov
cmp
cwde
dec
sbb
loopne
and
test
inc
or
test
out
or
sbb
outs
test
jmp
mov
adc
(bad)
les
pop
std
test
pop
das
mov
pop
xchg
call
dec
sub
push
xchg
dec
mov
and
pop
dec
movs
jb
xor
pop
adc
cmps
mov
aad
cmp
fsubr
popa
sub
xchg
in
pop
int
or
mov
add
retf
add
xchg
aas
in
aad
ret
lds
adc
xchg
dec
retf
mov
or
adc
inc
nop
xchg
stos
nop
stos
push
pop
stos
pop
push
ret
imul
stos
test
lock
pop
and
inc
sub
or
gs
lods
pop
cwde
lods
pop
test
sub
test
and
push
test
movs
push
cli
sub
mov
jns
sub
or
dec
gs
clc
clc
mov
ins
stos
lods
fs
sahf
and
add
add
mov
popa
aam
sbb
push
sbb
jb
ds
and
nop
add
popf
sub
outs
jg
and
push
loopne
es
xor
js
rcr
push
cs
test
sub
push
dec
ficom
fstp
dec
mov
adc
mov
pop
jnp
sub
mov
adc
fldenv
mov
jne
and
xor
xor
jbe
ins
adc
mov
das
mov
shl
cmp
sbb
mov
push
or
push
adc
mov
sbb
movs
xlat
push
lock
push
jno
stos
gs
cmp
xchg
xchg
jo
dec
adc
mov
xor
or
or
les
sub
fisttp
scas
xchg
rol
xlat
cmps
mov
pop
leave
pop
outs
adc
or
dec
sbb
or
mov
push
ret
cmp
es
adc
push
and
sub
sbb
sbb
mov
cmp
imul
fisttp
enter
cwde
dec
mov
retf
adc
fisttp
jmp
pop
retf
dec
enter
test
xchg
inc
or
sub
cmc
mov
pop
dec
and
adc
lods
add
sub
adc
les
push
jnp
add
add
inc
pop
xor
and
sub
xor
daa
sub
mov
push
fwait
add
sub
or
leave
push
xor
and
icebp
jnp
cmp
jmp
ret
fld
jmp
popa
dec
icebp
cmps
sub
adc
sbb
loope
gs
cmps
push
ins
mov
or
sbb
and
sub
sti
adc
mov
jmp
sbb
and
adc
or
cmc
pop
arpl
ins
inc
dec
jmp
outs
aas
cmp
push
movs
arpl
add
dec
xchg
and
rcl
add
xchg
addr16
push
lea
or
in
ror
scas
nop
int3
dec
test
cmp
jae
in
aam
mov
mov
cmps
add
loopne
inc
ja
cmp
inc
outs
lahf
pop
fwait
add
gs
sbb
inc
cmps
push
popa
mov
ret
cmp
enter
push
add
push
cli
verw
test
xchg
push
ret
lods
add
or
xchg
sub
mov
and
push
jns
mov
mov
pusha
dec
or
mov
xchg
inc
movs
add
mov
or
push
jae
ret
and
or
sub
test
push
fcom
jge
ja
adc
push
and
sub
inc
iret
sub
sub
out
mov
push
push
test
icebp
pop
mov
js
sbb
pusha
and
dec
xlat
fcomp
xchg
mov
inc
mov
es
add
(bad)
push
sbb
jns
dec
push
mov
daa
or
xchg
mov
jae
inc
add
xor
push
shr
es
pop
adc
arpl
and
push
out
aaa
inc
xchg
gs
xchg
inc
sub
mov
fistp
mov
mov
dec
add
pop
cld
mov
lahf
in
pop
sub
mov
les
xchg
xor
sbb
fist
jb
addr16
jns
mov
inc
push
imul
jo
jne
or
mov
rep
add
aam
mov
cli
xlat
loop
xchg
and
loopne
push
sub
jecxz
retf
cmp
add
and
xlat
push
mov
cmp
rcl
or
stc
fmul
adc
push
dec
xchg
scas
pop
or
and
push
lock
pushf
fcomp
jg
dec
stc
and
add
stc
xor
mov
lahf
cmp
pop
push
and
add
jne
sub
inc
cmps
imul
gs
push
fmul
imul
cmp
jo
sub
ror
xchg
add
xchg
call
popa
and
ret
inc
pop
test
push
test
pop
add
push
inc
cmps
inc
mov
je
loopne
frstor
and
adc
add
jbe
or
pop
dec
ret
push
push
lea
cmp
and
inc
sub
movs
ret
test
sub
in
mov
fnsave
and
push
adc
ins
cs
shr
mov
hlt
mov
adc
lahf
mov
adc
sar
push
cmp
jne
pusha
ja
scas
dec
pop
(bad)
loopne
fist
loope
add
sbb
inc
or
jne
pop
movs
outs
fist
cs
es
jne
loopne
in
xchg
adc
xchg
add
and
lds
and
outs
sub
push
adc
retf
outs
sub
mov
dec
ins
and
add
cs
adc
jae
sub
fs
scas
and
pop
mov
lds
es
jecxz
(bad)
aad
popa
sbb
daa
scas
and
jmp
(bad)
repnz
inc
inc
sub
dec
jl
imul
sbb
call
cmp
enter
and
lds
or
push
loopne
je
jge
mov
push
xor
cmp
add
hlt
mov
cmps
ror
outs
dec
hlt
out
out
pushf
push
outs
dec
loopne
sbb
or
add
sub
mov
retf
cmp
sub
mov
dec
loopne
jns
add
jmp
hlt
cmp
cmovno
dec
call
add
lds
mov
jb
je
or
push
iret
dec
outs
pop
call
mov
xchg
fadd
mov
cs
and
mov
jns
out
xor
cmp
retf
fwait
(bad)
clc
or
nop
into
mov
cmp
push
or
lahf
mov
test
pop
and
scas
in
not
and
repz
or
xchg
sbb
jns
enter
mov
clc
add
push
sbb
or
(bad)
cli
(bad)
adc
sub
adc
in
test
mov
add
and
sbb
retf
pop
rol
adc
add
inc
add
cmps
pop
and
jmp
adc
jns
dec
jmp
retf
adc
cmp
push
inc
xchg
jmp
pop
ret
mov
add
mov
std
dec
enter
(bad)
xor
or
repnz
or
adc
imul
pop
xor
stos
push
cmp
cmp
add
dec
or
adc
or
dec
or
fs
adc
and
dec
mov
ins
retf
dec
or
adc
mov
or
or
xor
cmp
test
fmul
sub
add
daa
sbb
mov
pop
ins
or
jo
ins
in
pop
retf
inc
jmp
mov
leave
jo
cmc
or
retf
fbld
cmp
lahf
xchg
add
mov
xchg
add
leave
(bad)
into
shl
dec
iret
cmp
popf
sub
jb
dec
in
push
movs
mov
dec
or
push
iret
xchg
dec
aam
out
rcl
and
cmp
sub
(bad)
rcl
xchg
cmp
repz
push
add
cmp
push
inc
int
jo
adc
popa
les
call
add
add
push
stos
or
xchg
add
cmp
lahf
jo
cmps
or
sbb
push
in
(bad)
xchg
ror
inc
dec
mov
movs
jl
inc
pop
aas
int3
aam
call
mov
outs
jmp
adc
xor
fsubr
push
inc
(bad)
lea
jns
into
in
xchg
pushw
cmc
sub
pop
sbb
push
sbb
or
sbb
cmp
push
inc
aaa
in
cmp
shr
rcl
sbb
fcomp
and
xchg
xor
pop
test
or
pop
jb
movs
scas
push
sbb
xchg
(bad)
or
mov
and
and
movs
outs
sbb
mov
adc
and
and
and
(bad)
lock
sti
shl
sub
push
and
sbb
cmp
repz
mov
dec
enter
jns
adc
mov
and
add
and
lds
(bad)
(bad)
cmp
inc
push
and
mov
test
lahf
pushf
xlat
retf
and
or
enter
mov
fsub
add
pushf
add
mov
mov
adc
jp
xchg
sbb
push
dec
lea
sbb
mov
add
push
pop
int3
and
push
fisubr
sub
pop
add
mov
dec
add
or
sbb
into
inc
stos
dec
inc
sbb
pop
dec
xchg
adc
sub
ja
mov
add
adc
jp
iret
and
lods
loope
inc
or
pop
inc
loopne
push
push
pop
test
es
imul
push
movhps
iret
mov
or
arpl
aas
scas
jecxz
mov
pop
cwde
jno
push
inc
sub
or
mov
mov
sti
rol
(bad)
push
outs
mov
cmp
jne
mov
bound
add
in
sbb
cmp
add
dec
and
inc
pop
add
mov
addr16
clc
jecxz
mov
xor
mov
out
xor
fild
je
call
cmp
pop
jne
xor
add
pop
mov
sub
cmps
adc
fadd
inc
bound
or
push
fdiv
aam
in
and
dec
mov
ss
das
xchg
cmp
mov
xor
dec
rol
int3
jb
and
mov
inc
fmul
and
les
sahf
in
sar
sahf
mov
sahf
fs
sahf
mov
mov
inc
pop
mov
mov
inc
lods
lods
mov
in
test
mov
dec
jb
movs
mov
cdq
test
cmp
mov
cwde
cmp
mov
nop
cmp
mov
mov
test
cdq
dec
scas
lea
arpl
pop
cmp
cmps
cwde
lea
push
js
es
sbb
pop
dec
in
in
pshufw
adc
adc
retf
ins
inc
ins
or
retf
dec
adc
xchg
sbb
fs
pop
jb
and
pusha
pusha
push
fs
sub
pop
add
push
adc
dec
sub
movs
jb
pop
js
jb
in
push
nop
add
cmp
xchg
cmp
test
add
lock
and
xchg
arpl
xchg
jbe
iret
and
and
in
adc
sub
push
xor
sub
inc
nop
out
and
jmp
and
add
inc
or
lds
daa
leave
xchg
(bad)
or
jno
inc
xor
fimul
adc
or
mov
ins
push
or
xchg
ror
rcl
push
fadd
inc
cmp
dec
add
outs
pusha
dec
inc
jb
xor
pop
inc
inc
inc
call
es
or
mov
pop
pop
mov
dec
pusha
call
xchg
xchg
stos
mov
dec
xor
dec
inc
cmp
inc
pop
adc
fs
les
inc
das
mov
adc
xchg
jmp
add
jmp
fdiv
sub
and
popa
out
jnp
cmp
out
sub
pop
cmp
or
xchg
inc
imul
pop
ds
retf
(bad)
nop
ins
and
inc
repnz
add
movs
jns
pop
dec
sub
movs
loopne
scas
stc
pop
push
movs
mov
fwait
sub
sbb
nop
mov
cmp
invd
add
push
jno
sti
jbe
nop
jmp
ins
pop
mov
test
add
add
adc
jmp
movs
outs
adc
cmp
and
fadd
mov
popa
(bad)
and
add
or
pushf
scas
mov
mov
push
mov
inc
and
or
test
jmp
xchg
rep
cmp
je
and
sub
mov
jge
test
mov
sbb
movs
jb
in
or
jl
test
or
or
xchg
dec
cdq
mov
sub
sub
or
jp
push
dec
jo
inc
sbb
xchg
mov
xchg
(bad)
imul
pop
xchg
mov
sbb
push
add
repz
push
sub
test
or
in
push
test
cdq
mov
mov
push
mov
out
push
sub
pushf
ret
int
call
sub
bnd
loopne
push
sbb
aas
xor
dec
mov
mov
stos
mov
adc
enter
add
add
add
adc
stc
sub
cs
adc
or
dec
sbb
sbb
adc
add
test
add
and
add
rol
xchg
adc
inc
mov
inc
xor
sub
add
ret
stc
push
xor
mov
xor
sub
pop
sbb
or
cmp
add
dec
ins
xchg
jecxz
adc
(bad)
mov
inc
sub
loop
jl
pop
sub
cmp
adc
xchg
add
jae
pop
mov
aaa
das
mov
and
js
je
adc
xor
jmp
xchg
call
ret
xor
scas
add
ins
in
bound
in
aam
or
push
jle
aas
xchg
test
clc
add
push
loope
jle
(bad)
and
sahf
add
and
dec
sbb
add
jno
cmc
push
fisttp
inc
ja
(bad)
sbb
jmp
xor
fnstsw
mov
ss
mov
imul
mov
sti
adc
call
and
sbb
rcl
sub
xchg
arpl
push
push
add
adc
mov
dec
aam
sbb
cld
movs
mov
xor
xchg
dec
or
and
xchg
rol
and
hlt
jbe
dec
pop
mov
in
adc
pop
mov
push
mov
pop
xchg
add
mov
xor
mov
(bad)
or
push
xchg
mov
mov
and
sub
sub
dec
inc
mov
mov
or
push
add
pop
out
test
nop
cli
push
repnz
or
(bad)
(bad)
dec
fstp
or
popa
leave
jmp
add
jg
xor
repnz
movs
fdivr
and
add
xor
dec
inc
xor
push
jno
bound
(bad)
repz
xchg
sbb
popf
xor
adc
(bad)
hlt
(bad)
stos
xor
sbb
sbb
in
nop
inc
bnd
cmc
add
add
pop
loop
mov
or
and
mov
and
mov
lods
ror
mov
ins
or
dec
aaa
pop
in
daa
rcr
mov
inc
fs
dec
push
aaa
nop
add
push
add
mov
les
dec
cmp
jmp
mul
lods
add
aad
hlt
push
jno
push
or
aam
addr16
and
inc
jmp
fadd
dec
jle
xor
sbb
nop
pop
add
and
adc
mov
mov
jb
mov
sbb
and
adc
rcr
jo
lahf
nop
mov
add
js
lds
jmp
addr16
call
ror
add
push
movs
jb
(bad)
mov
sbb
inc
sbb
and
xor
or
push
push
loop
jecxz
mov
imul
sub
xor
daa
ret
jno
loopne
out
fsubr
xor
push
adc
(bad)
adc
mov
adc
imul
fist
sub
nop
in
jmp
jp
sbb
xor
xchg
dec
rcr
dec
sbb
add
or
out
push
aam
int3
jmp
imul
mov
sbb
mov
rol
mov
call
add
xchg
cwde
mov
fwait
inc
pushf
mov
test
repnz
lods
mov
add
cmp
mov
mov
add
mov
dec
icebp
jecxz
add
enter
sub
dec
ins
add
and
nop
mov
dec
dec
enter
sub
test
pop
pop
jl
and
enter
and
push
dec
push
or
adc
pushf
mov
loopne
pop
dec
enter
pop
push
jl
adc
sbb
fadd
or
enter
inc
adc
or
in
or
in
or
jb
scas
and
inc
xor
mov
fdiv
jb
scas
in
or
or
enter
xor
sbb
xlat
or
nop
add
pushf
nop
add
sbb
in
scas
xchg
add
cdq
nop
add
adc
inc
or
or
add
and
dec
inc
es
push
nop
or
mov
clc
nop
push
jb
and
pusha
(bad)
add
pusha
mov
lods
lods
add
aam
jb
cdq
nop
cld
cld
sub
or
js
inc
push
nop
movs
enter
enter
pop
adc
inc
es
mov
inc
pop
leave
or
adc
adc
movs
aam
pop
jb
adc
cmp
push
nop
or
add
or
in
push
cmp
js
or
inc
test
pop
ins
bound
adc
xlat
adc
enter
sbb
sub
add
fs
pushf
xchg
adc
or
pop
add
cmp
sbb
adc
sbb
clc
repnz
push
and
push
sbb
xor
push
jl
repnz
dec
enter
pusha
sbb
jb
scas
in
sbb
sbb
dec
enter
pop
leave
add
sbb
pop
sbb
fild
xchg
int3
jmp
inc
daa
sbb
dec
push
cmp
mov
fs
cld
or
sub
push
dec
adc
test
mov
dec
inc
sar
nop
test
imul
inc
retf
ret
das
call
and
inc
dec
inc
and
push
push
jp
mov
and
pop
mov
push
push
jo
leave
mov
cmp
es
ins
cmp
fs
popa
imul
sbb
mov
addr16
or
data16
imul
mov
scas
sub
sub
sbb
pop
ja
fwait
pop
popf
mov
repnz
gs
mov
and
jne
pop
imul
dec
mov
mov
fcomp
xchg
mov
xlat
sbb
aad
fld
xor
dec
outs
push
shl
inc
ds
dec
es
sub
mov
test
cmps
bound
pusha
or
dec
adc
inc
or
fild
pusha
jnp
pop
es
or
or
push
push
(bad)
add
cmps
fwait
dec
mov
(bad)
or
sub
sub
pop
nop
call
push
mov
dec
popa
inc
jne
inc
pop
es
ins
aad
mov
adc
ja
jb
test
mov
lds
xchg
dec
xor
and
xchg
dec
mov
bound
adc
das
push
and
jo
inc
imul
inc
push
adc
test
sub
push
ds
shl
adc
adc
adc
adc
or
imul
es
(bad)
dec
xchg
inc
or
or
(bad)
sbb
inc
cmps
ins
mov
push
bound
adc
or
cmp
test
mov
movs
push
xchg
sbb
cmp
jecxz
lea
xchg
adc
adc
call
xlat
lods
(bad)
les
dec
sub
jp
jb
cmps
in
mov
outs
cdq
jge
rcl
mov
adc
rcl
push
jg
xchg
dec
movs
mov
xchg
iret
dec
mov
adc
adc
dec
out
xor
jne
imul
pop
jb
mov
jo
(bad)
xchg
push
adc
pop
or
push
shl
dec
push
mov
mov
push
outs
ins
outs
sub
test
and
int
sbb
add
cmp
or
pop
mov
lea
pop
jae
(bad)
loope
inc
es
add
and
add
outs
adc
xchg
sbb
add
or
push
outs
cmp
adc
retf
mov
les
add
arpl
mov
ins
adc
mov
push
inc
adc
div
loopne
adc
push
dec
push
inc
sub
int
daa
cmp
and
rcl
fs
adc
xor
test
rol
add
movs
outs
test
mov
inc
jecxz
sub
and
adc
and
inc
lea
push
pop
xor
mov
rcr
dec
fs
mov
inc
mov
xor
out
push
xor
mov
outs
jo
inc
imul
idiv
sub
dec
test
fadd
xchg
aam
add
or
mov
scas
dec
bound
push
mov
xchg
daa
jae
cmp
neg
push
jne
xor
adc
fs
cmps
xchg
xchg
pop
sbb
and
inc
add
(bad)
mul
outs
loope
out
inc
mov
add
adc
ins
push
movs
out
inc
or
sbb
dec
xchg
(bad)
adc
inc
xor
pop
pop
sbb
fldenv
jl
dec
cwde
add
mov
lahf
out
popa
adc
mov
pop
scas
sub
mov
adc
iret
cmp
push
sub
loopne
jb
int
pop
sar
sbb
gs
adc
or
or
daa
or
inc
int
pop
ret
ss
push
in
dec
add
hlt
jl
addr16
xor
imul
ins
out
stos
mov
jb
push
outs
jbe
into
mov
fbld
push
inc
fwait
in
rol
mov
mov
rcr
daa
xor
add
not
in
bound
ror
(bad)
cmp
dec
pop
test
cmps
mov
or
pop
push
and
xor
sub
leave
les
xchg
sub
pop
loopne
scas
stos
movs
add
dec
inc
mov
sub
movs
xchg
push
inc
jnp
ins
or
xchg
sub
retf
or
xor
out
jnp
dec
arpl
fstp
pushf
dec
pop
pop
sbb
jg
xor
mov
xchg
ret
popf
adc
cwde
fs
cmp
mov
xor
cmp
sub
dec
dec
push
dec
dec
fst
pushw
push
adc
(bad)
or
into
mov
cmc
push
push
and
sub
lds
xor
int
(bad)
mov
pop
fs
push
test
loop
dec
das
pop
fld
iret
aam
into
fs
iret
sub
lea
inc
mov
push
pop
std
xchg
xor
sbb
sbb
sbb
mov
dec
or
add
mov
and
xchg
dec
in
or
pop
sbb
pop
mov
mov
ds
rcl
sub
mov
addr16
les
inc
sub
cdq
sbb
adc
sbb
out
cmps
inc
and
mov
pop
pop
test
aam
scas
or
mov
push
mov
je
or
lods
mov
test
cmps
push
test
jbe
(bad)
sbb
sub
outs
(bad)
dec
push
jae
loop
pusha
xor
cwde
lea
add
js
(bad)
sbb
outs
aaa
adc
push
lods
pop
cmp
orps
jno
add
loopne
ja
push
inc
inc
inc
add
adc
pop
push
and
je
dec
xor
(bad)
cmps
push
add
adc
inc
dec
push
dec
adc
mov
dec
inc
add
inc
xchg
adc
dec
cmps
je
dec
xchg
xor
sub
icebp
dec
es
or
rol
sbb
add
arpl
fsubr
in
es
mov
jecxz
xor
dec
sub
outs
movs
jge
es
sbb
sbb
fwait
inc
jae
jecxz
mov
pop
push
jmp
loopne
sub
bound
loopne
and
aas
adc
cmp
das
adc
sub
inc
fild
sub
sub
and
in
sub
sub
push
and
stc
pcmpeqd
sub
sub
mov
jno
fild
push
jl
fisttp
and
adc
adc
in
sub
fucomip
add
pop
jb
and
sub
and
push
inc
jo
nop
add
aam
daa
fs
sbb
push
nop
add
cs
nop
add
fmul
in
pushf
add
xor
pop
nop
or
inc
js
add
sar
in
push
enter
xor
inc
mov
hlt
sbb
add
nop
push
cmp
sbb
and
add
cdq
nop
sub
xor
inc
es
sbb
hlt
sbb
nop
sub
cmp
dec
es
or
inc
in
sbb
add
inc
pop
inc
xor
add
adc
push
and
adc
rol
scas
in
or
xor
fs
xchg
mov
call
pop
leave
dec
aaa
pusha
mov
xor
add
enter
cmp
test
pop
pusha
nop
xor
add
mov
in
adc
cmp
or
adc
test
cld
sbb
sub
and
dec
cmp
xor
les
clc
cmp
cmp
nop
add
pusha
inc
js
daa
add
nop
add
push
cmp
add
enter
push
enter
cmp
es
call
sbb
pop
mov
cdq
nop
add
adc
xlat
xor
inc
test
adc
add
inc
mov
in
pop
leave
add
sbb
inc
mov
fsubr
dec
enter
inc
movs
rcl
sub
add
cmp
and
adc
addps
in
or
fmul
inc
add
scas
push
inc
test
test
enter
xchg
inc
pop
jb
and
jl
movs
pop
and
inc
loopne
fist
daa
das
sbb
cs
xchg
cmp
mov
push
leave
les
inc
mov
pop
and
and
and
adc
push
out
inc
bound
fisttp
inc
loop
les
aad
and
xchg
bound
arpl
fcom
imul
dec
add
test
push
ss
cmc
mov
fstp
es
gs
mov
and
cs
test
daa
inc
add
fild
sbb
add
or
inc
adc
adc
adc
daa
inc
add
outs
(bad)
loopne
pusha
sub
(bad)
dec
(bad)
jno
les
cmps
or
dec
or
(bad)
pop
mov
add
xor
data16
and
mov
dec
cwde
or
add
ss
and
stos
mov
xchg
adc
mov
sub
shl
and
outs
xor
and
adc
mov
xor
inc
inc
ja
scas
shl
push
jno
and
mov
and
push
inc
lea
inc
sub
and
push
mov
les
ror
and
or
dec
mov
and
ja
adc
dec
add
inc
mov
les
dec
push
pop
mov
or
sub
and
jmp
xor
(bad)
(bad)
addr16
add
mov
and
or
xchg
pop
int3
ds
inc
scas
push
imul
sbb
cmps
xchg
push
mov
xchg
test
cmps
stos
xor
mov
sbb
mov
push
jmp
lods
add
xor
scas
mov
shl
jbe
mov
imul
lock
cdq
mov
dec
cmp
sbb
icebp
mov
outs
data16
push
xchg
xor
cmps
and
and
inc
mov
popf
and
mov
xor
push
shr
pop
ins
sub
xor
and
sub
xlat
mov
cs
jmp
jo
mov
ins
mov
dec
or
jge
jg
add
(bad)
fist
mov
pop
xor
fild
in
dec
ret
jno
ins
and
(bad)
xchg
bound
sbb
xchg
mov
adc
jo
add
push
(bad)
fcmovnbe
xor
pop
add
repz
sbb
rol
sqrtps
xchg
dec
jg
push
dec
mov
dec
shl
cwde
jo
mov
cmp
lahf
sbb
and
inc
lahf
mov
push
ss
and
inc
pop
test
mov
pop
dec
sbb
lahf
gs
and
inc
xchg
and
dec
bound
ret
mov
mov
xchg
les
daa
xchg
inc
ins
in
add
mov
adc
cmp
repz
mov
fsub
mov
xlat
lahf
inc
sub
(bad)
outs
lahf
xchg
rol
popa
mov
adc
ins
mov
mov
ja
out
add
inc
and
xchg
push
jno
leave
fs
adc
dec
mov
nop
jno
dec
lea
inc
jno
pop
das
pop
sbb
dec
inc
jo
xchg
add
xlat
or
fsub
xchg
and
aas
jae
bound
adc
mov
inc
add
sti
lea
(bad)
fidivr
mov
cmp
je
push
sub
not
xchg
xchg
jmp
xor
aaa
les
xchg
mov
stos
and
and
dec
bound
(bad)
stos
and
mov
inc
movs
pop
adc
dec
jae
pop
pusha
test
xor
adc
push
nop
popa
test
bound
cmps
xor
or
sub
(bad)
mov
addr16
dec
and
xor
mov
push
cmps
sub
push
adc
dec
scas
sbb
stos
dec
adc
push
push
adc
add
inc
add
or
sbb
or
dec
sbb
xchg
push
adc
sub
add
adc
in
add
outs
ds
loopne
sar
gs
add
sbb
dec
test
int3
data16
addr16
xchg
dec
mov
std
les
and
push
xchg
ja
mov
jecxz
dec
ins
pop
mov
out
fistp
push
dec
push
sbb
add
inc
push
push
daa
(bad)
xchg
les
xor
inc
xor
pop
push
xchg
pop
push
sub
sbb
repnz
iret
les
pop
fwait
sub
inc
aas
push
push
jb
push
and
push
jl
stc
mov
push
push
and
rcl
jno
push
dec
pushf
sbb
adc
in
pop
cmp
push
or
cli
push
push
in
xchg
test
or
add
(bad)
push
push
inc
repz
push
nop
add
push
pusha
adc
pop
jb
cdq
call
or
add
mov
enter
pop
pop
or
inc
mov
add
sub
cdq
nop
sub
sbb
fs
shl
pop
leave
or
pop
and
cdq
nop
add
dec
mov
add
sbb
adc
xor
in
push
jo
add
sbb
add
push
sub
test
cld
xlat
pop
sbb
sub
pop
inc
test
test
lods
fcom
pop
cmp
or
mov
or
adc
sbb
adc
pusha
inc
es
inc
inc
inc
push
nop
or
jo
xchg
nop
add
mov
mov
sbb
or
sbb
add
and
xor
or
add
and
enter
fimul
sbb
push
nop
or
add
fadd
lahf
arpl
and
sbb
cmp
or
ins
or
adc
mov
enter
or
and
jb
fs
pusha
pusha
add
test
nop
ror
xor
shr
aam
dec
sbb
adc
mov
sbb
inc
inc
enter
jo
add
and
test
cmp
sbb
cmps
jbe
sbb
push
cdq
nop
add
mov
loopne
fiadd
sbb
push
nop
or
add
movs
es
or
inc
cld
sbb
add
ins
(bad)
les
push
sub
sub
fcomp
aas
or
nop
mov
cmp
adc
imul
dec
dec
cmovne
push
and
cmp
lods
push
dec
cld
add
inc
cs
fs
dec
mov
lods
xchg
pop
(bad)
iret
ja
pusha
push
dec
dec
xor
mov
and
mov
push
loope
mov
and
addr16
dec
mov
mov
mov
and
sahf
cmp
cmp
xor
add
jmp
fs
jmp
xor
ret
gs
daa
xchg
xor
or
rcl
jae
jge
cwde
lods
dec
int
stos
jbe
inc
mov
add
fs
cmp
imul
ret
sub
push
int3
push
sbb
mov
and
jg
gs
popf
xor
push
dec
and
cmp
pop
inc
dec
pop
sub
jno
sub
cmp
ja
pop
mov
and
xor
push
rcl
cs
dec
test
(bad)
push
jno
adc
inc
loope
into
mov
into
lahf
outs
sub
jmp
cmp
daa
call
and
mov
mov
sub
sub
dec
bound
je
push
xchg
inc
and
(bad)
mov
xlat
and
nop
mov
jae
shl
dec
iret
comiss
add
mov
inc
or
add
loopne
movs
mov
push
cmp
inc
cmp
pop
add
fwait
sbb
adc
pop
xlat
les
inc
xchg
xchg
fist
mov
xchg
sub
gs
xor
adc
into
sbb
push
or
mov
cmp
sub
icebp
sbb
dec
popa
jne
imul
fnstcw
dec
mov
cli
mov
int
jne
cmps
lods
xor
inc
dec
mov
call
or
mov
rol
call
pop
retf
iret
fld
add
scas
and
das
and
dec
test
dec
das
jno
ror
xchg
pop
sbb
int3
(bad)
cwde
mov
call
call
pop
pushf
(bad)
add
cmps
or
lods
add
pop
daa
xchg
(bad)
sub
mov
lods
push
pop
or
and
pop
scas
xchg
xchg
jmp
mov
jb
mov
lods
push
pop
mov
xor
inc
push
mov
rcr
imul
scas
adc
stos
retf
cwde
lods
push
push
pop
xlat
push
xor
sub
fs
ret
pop
push
dec
lahf
imul
out
adc
or
jg
lahf
stos
push
push
or
iret
pop
inc
popa
and
rcl
add
adc
(bad)
push
je
stos
mov
cmps
push
cmps
cdq
pop
push
dec
dec
adc
mov
fistp
xor
imul
test
dec
adc
int3
jbe
call
pop
cmp
or
and
adc
hlt
push
jb
pop
stc
pop
xchg
push
hlt
or
add
jno
fwait
imul
div
push
in
adc
mov
xchg
lods
lods
pop
jbe
ja
inc
ror
inc
push
add
in
ja
js
inc
dec
and
fs
nop
or
lods
aam
jb
push
clc
sbb
add
nop
jns
xchg
or
inc
es
leave
or
xor
add
repnz
rol
jnp
sub
adc
rcl
jl
enter
(bad)
in
xchg
cmp
add
jl
jl
or
mov
or
adc
hlt
jb
scas
in
jge
jge
or
pushf
or
adc
mov
in
sbb
jle
enter
cwde
mov
aam
jg
enter
jg
js
add
and
dec
add
test
xor
add
xlat
add
fadd
sbb
mov
leave
and
pop
add
or
pcmpeqd
xlat
xor
inc
test
adc
enter
test
test
adc
movs
enter
in
or
xor
pop
xor
add
and
push
js
add
and
or
test
mov
sbb
xor
js
inc
push
and
call
push
repnz
mov
add
adc
push
mov
aam
mov
cmp
mov
adc
sbb
mov
enter
mov
add
cmp
adc
sbb
add
cmp
sar
jb
pmulhuw
pop
pop
hlt
jb
scas
in
nop
jl
mov
dec
enter
xchg
or
pop
repnz
ins
shl
xchg
lahf
sub
shld
not
inc
xchg
inc
or
cmp
jl
mov
pop
mov
in
neg
xchg
ins
ins
add
xchg
jo
stc
sub
not
add
jbe
jnp
mov
mov
inc
ss
loope
inc
dec
or
and
sub
ins
int3
aam
cs
outs
push
inc
inc
enter
xor
add
inc
mov
not
push
adc
cmp
xchg
xchg
push
and
imul
inc
sub
dec
inc
pusha
lahf
jl
outs
pop
es
pop
inc
imul
mov
popa
out
xor
xor
pop
xchg
or
ins
jle
cmps
adc
push
sub
hlt
dec
sbb
fld
fistp
jb
adc
add
outs
gs
popa
in
pop
jge
data16
add
or
adc
lods
ret
fsubrp
sub
bound
mov
pop
sbb
xchg
xor
sub
lahf
push
mov
or
inc
addr16
(bad)
push
nop
out
inc
popa
cmp
addr16
ror
dec
jo
test
in
or
scas
and
js
sub
sbb
sbb
test
scas
jmp
sbb
int3
adc
xchg
jp
inc
sub
loopne
push
data16
push
ins
mov
jp
ja
cmps
leave
pop
sbb
mov
mov
ret
fwait
jmp
inc
sbb
lahf
inc
xor
out
aaa
and
add
fs
hlt
out
add
pop
and
add
loope
sub
dec
sbb
cmp
or
cmc
sbb
cmps
adc
inc
mov
and
inc
adc
adc
jg
push
or
jns
mov
popa
and
or
loop
and
ror
and
aaa
pusha
adc
or
shl
and
and
ds
outs
ins
stos
punpckhbw
sub
(bad)
(bad)
mov
push
adc
sub
inc
adc
stos
dec
push
add
scas
xchg
in
and
stc
scas
pusha
pop
xor
neg
scas
or
shl
or
call
scas
push
sbb
xor
add
lock
adc
test
push
cmp
je
inc
adc
mov
inc
dec
xchg
xchg
sub
jp
sbb
(bad)
jo
out
ret
ja
push
dec
cdq
cmps
sbb
add
lods
pop
(bad)
dec
scas
add
xor
cmp
data16
xor
mov
or
mov
nop
shr
ins
push
das
fdiv
fwait
(bad)
xchg
mov
or
dec
fistp
mov
and
outs
fcmovnu
call
loop
add
dec
test
test
shl
sbb
pop
sub
add
sbb
mov
push
push
gs
dec
sbb
pop
or
xchg
bound
push
and
fmul
outs
out
test
inc
dec
mov
jp
sbb
xchg
arpl
or
div
and
add
or
retf
push
ins
sub
mov
and
mov
sub
out
leave
popa
icebp
mov
mov
dec
inc
add
pop
dec
lods
add
mov
mov
xor
mov
es
lods
jbe
or
sub
bound
lods
popa
pop
mov
std
fs
or
inc
daa
push
push
imul
test
xchg
add
xlat
push
sbb
adc
xchg
pop
mov
fisub
mov
dec
dec
sbb
dec
mov
out
rcr
cmp
sub
mov
xchg
data16
adc
or
or
adc
sub
lods
pop
sbb
sbb
popa
stos
add
push
sub
xor
pop
rol
ret
add
sub
push
icebp
add
and
xchg
test
data16
push
push
inc
push
arpl
das
jae
push
jo
adc
and
sar
cld
bound
sub
call
jae
test
lds
inc
jp
ja
xchg
repz
jp
loopne
idiv
dec
lds
sqrtps
fdiv
mov
sbb
jo
push
addr16
sub
fdivr
bound
sbb
sub
xchg
daa
lods
adc
test
push
add
xchg
xchg
adc
in
adc
or
cmp
pop
xchg
sbb
pop
ss
adc
inc
jb
adc
sti
shl
add
dec
mov
mov
pop
jne
push
je
ss
jae
mov
sub
and
sbb
adc
pop
sbb
nop
fs
add
mov
push
inc
popf
imul
xor
sub
sbb
imul
fwait
pop
sub
(bad)
sub
adc
or
mov
pop
jmp
and
loopne
or
mov
outs
jb
add
sbb
mov
mov
xadd
(bad)
hlt
aaa
mov
xchg
je
dec
push
jne
(bad)
mov
ja
or
fbld
pop
test
test
retf
inc
add
sub
and
pop
add
sub
adc
out
push
imul
and
jb
pop
pop
push
mov
cmp
and
or
dec
je
or
push
(bad)
out
dec
pop
aaa
mov
div
cmp
movs
or
(bad)
adc
mov
sub
popa
ins
jecxz
push
add
pusha
jge
jne
and
add
mov
inc
inc
dec
mov
in
sbb
jno
cmp
dec
lea
push
jne
sbb
enter
add
jb
push
sub
cmp
or
and
(bad)
push
or
pop
(bad)
imul
fucomi
mov
pop
xchg
mov
enter
and
daa
xor
jbe
(bad)
mov
mov
mov
and
xor
dec
enter
js
xchg
adc
sbb
movs
add
cmp
aam
cmp
enter
dec
cmps
js
add
and
int3
lock
pmulhuw
inc
cmps
pusha
test
adc
enter
test
sbb
sub
test
or
adc
test
test
or
sub
dec
ins
and
xor
test
sbb
jb
pop
mov
xor
enter
stos
inc
stos
jo
xor
add
in
lods
xor
test
fcom
enter
mov
and
enter
dec
enter
lods
lods
and
xor
test
sbb
push
mov
inc
dec
enter
dec
jo
xor
enter
rol
cmp
add
sbb
inc
mov
pushf
inc
push
and
ror
mov
and
xor
pusha
nop
or
lock
leave
add
sub
add
test
cmp
mov
pushf
and
xor
inc
push
and
xor
mov
dec
cld
xor
enter
pop
mov
mov
or
dec
enter
mov
pop
leave
add
js
nop
add
mov
mov
enter
pop
leave
add
and
add
test
sub
inc
cmp
inc
mov
pop
xor
pop
mov
js
hlt
add
daa
sub
nop
shl
addr16
or
sub
pop
inc
dec
push
dec
fcomp
or
xor
mov
es
push
xchg
scas
maskmovq
div
icebp
sbb
je
dec
and
dec
add
leave
pop
pop
or
add
int
inc
cmp
out
sub
jne
inc
pop
xchg
outs
or
cmp
push
and
addr16
test
test
pusha
push
popa
loop
bound
scas
mov
outs
dec
je
sbb
mov
pop
and
or
push
fild
pop
aaa
jmp
adc
dec
cmp
mov
add
outs
out
sub
int3
pop
aas
lea
test
or
lods
inc
push
or
loope
pop
inc
jne
push
pop
xchg
loope
or
in
push
fisubr
adc
sub
add
xchg
ja
push
ret
(bad)
xlat
jns
dec
mov
ja
add
rcr
mov
das
sub
add
rcr
test
xor
(bad)
jno
adc
push
outs
rcr
pusha
loopne
(bad)
mov
adc
imul
add
call
mov
rol
mov
scas
and
imul
popa
nop
mov
data16
int
mov
loop
out
jb
outs
push
nop
add
ror
cmps
mov
inc
sbb
adc
jmp
les
sbb
shl
seta
and
lock
mov
add
and
jmp
xor
aam
cmps
push
sbb
xchg
xor
cmps
adc
mov
inc
jmp
shl
or
cmp
xor
cdq
daa
gs
add
xor
inc
pushf
inc
or
ja
push
add
test
mov
and
inc
inc
pop
cwde
imul
outs
or
sbb
and
xchg
push
adc
and
scas
ins
and
fbld
pop
push
popa
xor
mov
and
mov
out
cdq
xor
adc
popa
and
sub
jo
jae
mov
bound
xor
jbe
test
(bad)
lods
loopne
pop
ss
test
pop
inc
outs
call
mov
jo
cmp
mov
inc
sbb
out
hlt
add
daa
mov
xor
sar
sub
mov
sbb
sahf
push
pop
inc
dec
jp
aad
ficom
outs
xor
or
xchg
jmp
adc
popa
inc
push
popa
fisttp
dec
adc
cmp
jmp
push
and
cmps
call
adc
pusha
lds
push
std
pushf
fld
test
jge
ins
or
data16
jne
inc
call
sbb
sub
and
xchg
test
lods
pop
test
pop
rcl
arpl
push
push
xor
xchg
xchg
fsubr
test
loope
iret
inc
lods
ins
jmp
inc
iret
pop
sbb
push
and
sub
scas
sub
sbb
push
or
dec
add
or
mov
das
adc
inc
addr16
pop
ret
sbb
jbe
rol
mov
push
jo
dec
jbe
sbb
xor
lds
or
adc
rcl
pop
and
and
es
cwde
push
mov
xor
shl
ja
push
call
(bad)
dec
or
cmp
bound
xchg
imul
cmp
lock
outs
pop
inc
sub
je
cmps
rol
and
add
daa
pop
inc
pop
and
mov
lds
mov
sbb
dec
in
cmps
ins
loope
adc
cmp
ss
adc
push
test
fdiv
mov
and
xchg
add
in
xor
adc
xchg
mov
imul
push
cmp
ror
ins
ja
mov
and
cmps
and
dec
bound
scas
inc
and
and
mov
pop
jg
push
enter
adc
inc
mov
shr
sbb
xor
test
sbb
inc
adc
or
outs
rcl
push
into
cmp
or
imul
adc
or
push
pop
cmp
xor
mov
jnp
imul
ins
arpl
lds
cmp
push
inc
pop
add
inc
lock
xor
mov
call
je
sub
xor
push
xchg
inc
dec
add
fsub
add
aaa
fisttp
add
mov
sub
and
sbb
sbb
push
dec
lods
add
xchg
cmp
int3
retf
loopne
pop
and
in
retf
or
scas
sub
xchg
sbb
jb
int3
pop
jno
imul
push
and
mov
fstp
loopne
dec
int3
les
int3
adc
sbb
nop
add
test
push
int
inc
es
mov
pop
leave
or
in
or
sub
nop
add
inc
push
test
add
sbb
add
je
jb
cdq
nop
mov
mov
ins
fs
push
nop
nop
mov
add
and
sbb
in
shr
push
nop
or
clc
xor
push
rol
in
jl
pop
nop
or
enter
nop
sub
sub
pop
es
or
inc
lock
add
inc
pop
cmp
push
nop
shr
jns
daa
sbb
inc
aad
inc
push
nop
jo
enter
add
sbb
sbb
in
(bad)
ins
test
pop
nop
or
sbb
cdq
nop
sub
xlat
mov
clc
sbb
pop
ins
and
inc
and
enter
dec
enter
xchg
xchg
and
xor
test
sbb
cdq
fimul
xor
nop
or
pop
cdq
nop
test
mov
daa
fs
add
sbb
jns
fiadd
inc
push
nop
or
jb
(bad)
(bad)
add
sbb
and
jo
nop
add
inc
pushf
(bad)
les
cld
dec
(bad)
nop
or
test
fs
push
call
enter
fiadd
aam
inc
pop
leave
or
push
fild
enter
inc
push
in
loopne
mov
fsub
and
inc
pop
loope
pmulhuw
xor
and
dec
loop
adc
jo
scas
in
or
or
cmp
enter
fs
cmp
enter
push
in
mov
clc
sub
cmp
enter
enter
xor
fs
nop
mov
dec
fsubr
dec
sbb
or
pop
inc
out
add
and
out
pushf
inc
push
enter
shl
nop
cmps
nop
retf
push
sar
xchg
cld
dec
dec
pop
and
movs
inc
and
jno
cld
dec
push
push
push
pop
inc
scas
inc
dec
dec
cdq
lods
add
pop
(bad)
ja
add
xor
in
fs
mov
or
pop
xor
mov
add
jg
sbb
push
in
outs
ret
out
lock
jo
adc
imul
outs
popa
imul
std
pop
mov
jo
ins
imul
imul
and
xchg
mov
sbb
inc
movs
mov
bound
mov
sbb
arpl
cwde
add
or
jne
push
jno
(bad)
or
sar
push
outs
fs
push
sbb
or
inc
out
pushf
outs
jb
outs
dec
inc
dec
push
xchg
icebp
outs
pop
pop
or
lds
xchg
inc
retf
jg
popa
addr16
and
shr
pushf
xchg
leave
sub
xor
add
dec
jne
adc
mov
push
mov
in
sbb
add
je
pushf
out
or
aaa
lock
ja
jp
push
arpl
add
push
jl
mov
inc
outs
add
sahf
imul
or
int3
je
jno
lds
add
fbstp
xchg
les
inc
cmc
pop
mov
xchg
xor
(bad)
loopne
inc
stos
cmp
mov
inc
dec
jecxz
jne
ins
loope
hlt
daa
inc
push
out
and
stos
jne
jae
repz
xchg
pop
mov
pop
xchg
jb
cmp
dec
sbb
inc
push
or
lea
adc
or
sub
test
add
dec
pop
mov
arpl
jmp
sbb
iret
test
outs
movs
jno
xchg
lods
xor
outs
push
or
retf
sub
add
pop
scas
fwait
rcl
mov
sub
add
imul
add
es
fidiv
cmp
xor
mov
cmp
pop
fild
push
dec
inc
and
add
das
xchg
mov
sub
sub
add
inc
pop
dec
pop
or
cmps
pusha
sbb
imul
sbb
adc
dec
mov
mov
scas
cdq
sub
mov
daa
scas
adc
cmp
xchg
daa
push
push
add
push
pop
push
sub
lock
adc
pushw
jae
adc
imul
je
and
icebp
inc
arpl
loop
xchg
int
or
sub
inc
ja
dec
cmps
xchg
and
out
or
iret
clc
and
adc
pop
dec
push
scas
fwait
hlt
gs
sbb
jp
xchg
cmp
sbb
aaa
adc
cmp
push
gs
jae
stos
ds
sub
je
adc
rol
xlat
mov
jns
and
push
dec
sub
adc
das
pusha
add
adc
push
outs
add
sbb
pop
arpl
mov
adc
pop
(bad)
(bad)
stos
inc
pop
popf
test
adc
movaps
push
jns
out
rcl
sbb
cmps
daa
aaa
jne
jns
ret
sub
add
push
sbb
aad
push
dec
mov
dec
imul
iret
and
sbb
inc
arpl
int3
add
ror
inc
mul
push
and
jo
xor
(bad)
out
mov
and
adc
sub
ins
xchg
scas
mov
adc
stos
pusha
mov
and
add
sbb
xor
sub
lods
in
xchg
jne
add
push
and
imul
xor
imul
pop
jae
bound
push
pop
shr
push
inc
adc
and
and
mov
sbb
inc
mov
cwde
pop
dec
je
adc
ret
inc
outs
test
mov
ret
outs
ins
sbb
jno
adc
fdivr
and
lea
dec
(bad)
daa
out
sub
sub
xor
(bad)
das
sahf
lods
xchg
cmps
lahf
cmc
xchg
mov
sbb
jb
pop
hlt
xor
pop
or
das
outs
das
sub
loop
loopne
inc
pop
sub
int
push
dec
cmp
sub
push
xchg
mov
neg
sar
and
jno
nop
xchg
push
cmps
adc
stc
mov
int3
lahf
aaa
lea
xor
or
fiadd
inc
data16
jge
stos
jg
and
jns
popa
addr16
rcl
mov
ret
sar
sub
iret
or
cmp
outs
and
mov
retf
sbb
popa
mov
dec
push
pop
cmp
add
(bad)
ins
jns
ins
xor
or
sub
shr
dec
jg
les
mov
ins
jne
out
xor
adc
lea
adc
xor
outs
push
pop
mov
bound
sbb
dec
add
jae
sbb
sbb
and
aas
and
mov
dec
inc
and
movaps
mov
outs
vprotq
xchg
xor
inc
js
lea
aad
ins
(bad)
wrmsr
mov
(bad)
mov
lahf
lods
mov
mov
arpl
repz
mov
adc
cmps
sbb
sbb
popa
and
sbb
(bad)
cmps
pusha
xor
lahf
jb
fs
sbb
push
dec
unpcklps
in
cmp
xlat
sub
inc
cmc
repnz
and
push
cmc
fdivr
push
inc
push
nop
cmc
cwde
jno
ins
mov
push
les
ss
fild
xlat
and
dec
push
(bad)
adc
mov
xlat
cmp
push
popa
pop
xor
cmp
mul
mov
jns
outs
inc
add
sub
add
adc
inc
es
xlat
sbb
inc
clc
inc
add
test
mov
and
xor
adc
sbb
mov
fadd
cli
add
scas
sub
push
xor
enter
adc
adc
xor
push
repnz
push
add
xor
sbb
cmp
and
enter
dec
enter
enter
cmp
add
test
mov
add
and
or
adc
(bad)
fs
enter
shl
cmp
add
dec
push
or
enter
adc
sub
push
das
adc
sbb
pushf
int3
in
or
cld
sub
add
scas
jo
jo
or
mov
mov
enter
sbb
es
xor
push
nop
or
pop
pop
adc
es
sbb
enter
push
add
and
lods
loopne
and
dec
add
test
adc
in
add
dec
enter
pop
leave
add
sbb
dec
push
je
add
test
aaa
sbb
sub
nop
or
inc
test
push
jb
push
fadd
inc
add
nop
or
sbb
les
or
in
or
add
or
sbb
es
mov
in
dec
or
sub
pop
or
es
test
call
nop
add
inc
jo
pop
jb
cdq
hlt
cmp
pusha
nop
or
scas
in
push
clc
(bad)
sub
je
xchg
js
and
sbb
(bad)
adc
enter
adc
(bad)
adc
sbb
jbe
sbb
add
(bad)
sbb
sbb
in
jmp
inc
xchg
fwait
jge
inc
mov
inc
inc
push
leave
dec
sbb
dec
pop
fisttp
jg
and
push
mov
pop
fld
(bad)
sbb
adc
arpl
outs
sbb
fsubr
pop
nop
stos
pop
ds
jns
sbb
xor
pop
movs
pop
dec
push
sbb
bound
xlat
and
cmp
pop
imul
outs
call
outs
push
outs
or
push
push
xchg
nop
retf
add
test
addr16
mov
mov
fs
lahf
daa
adc
or
xchg
sub
movs
lds
aaa
ins
cmp
in
shl
lods
adc
pop
pop
sbb
dec
sbb
or
sub
inc
aas
popa
scas
mov
and
sub
dec
movs
and
fbld
jno
sbb
and
sub
imul
sbb
(bad)
fwait
rcl
fnstcw
xchg
mov
ss
ficomp
pop
repnz
bound
and
add
mov
mov
in
sbb
pop
test
scas
and
and
les
cmp
(bad)
fisubr
add
pusha
vunpcklps
inc
adc
and
fisttp
inc
loop
imul
imul
loop
imul
adc
sbb
scas
popf
outs
inc
ja
stos
sub
xor
fs
gs
push
jne
push
sub
inc
imul
xchg
iret
ficom
jbe
mov
add
pusha
xor
mov
xor
and
inc
bound
test
and
ror
pop
popa
inc
mov
push
pop
push
pop
test
cmps
push
and
or
sbb
daa
sbb
pushf
aaa
hlt
jae
mov
addr16
xor
sbb
inc
and
(bad)
cmp
add
push
popa
jo
outs
mov
adc
dec
and
lea
and
and
mov
jecxz
test
mov
or
sbb
(bad)
daa
jnp
retf
scas
fisub
jmp
or
jb
sub
and
(bad)
pop
and
sub
mov
sbb
mov
imul
adc
and
ins
add
fimul
and
and
sahf
xor
rcl
xchg
(bad)
and
mov
push
outs
es
mov
into
fidivr
jp
sub
(bad)
gs
push
and
xchg
ins
mov
xchg
and
movs
cdq
lods
pusha
test
pop
dec
mov
add
mov
mov
xor
inc
push
test
(bad)
pop
and
vcmpps
jns
cwde
inc
sbb
and
and
daa
leave
sub
and
cmp
mov
test
ret
shl
jne
mov
pop
push
mov
or
push
pop
jecxz
jge
lds
sahf
aas
pop
ins
stc
or
(bad)
lea
push
add
add
mov
popa
inc
call
pop
adc
daa
mov
and
lods
outs
rcr
add
imul
and
loop
jne
xchg
lds
or
add
xchg
cmp
(bad)
(bad)
lock
jae
jno
adc
enter
movs
bswap
and
sub
mov
or
add
sbb
ja
es
lods
int
fs
rol
or
inc
packsswb
jns
sub
mov
test
shr
add
outs
(bad)
js
in
and
sbb
data16
pop
and
mov
sbb
aas
mov
dec
or
adc
cmp
pop
outs
js
adc
idiv
hlt
inc
mov
std
repz
fbstp
scas
inc
scas
pusha
prefetchnta
int3
call
fs
mov
bound
sbb
ins
sub
add
not
ss
cmp
pop
(bad)
out
pop
addr16
ss
outs
pop
fwait
mov
pop
(bad)
sub
out
sub
mov
repz
mov
iret
imul
ss
repz
push
pop
push
inc
rcl
pop
pusha
jmp
sbb
repnz
jle
inc
jmp
xor
int3
jmp
aaa
in
and
test
jmp
pusha
jecxz
aam
pusha
iret
mov
jnp
xchg
hlt
mov
out
sbb
pop
or
scas
faddp
es
pop
data16
(bad)
add
pop
(bad)
js
xor
xchg
cwde
push
mov
mov
inc
retf
and
jmp
jb
(bad)
addr16
dec
push
mov
dec
add
inc
jge
or
jmp
xor
in
imul
inc
call
mov
push
sub
stos
cmps
repnz
mov
call
daa
daa
aaa
or
gs
or
adc
xor
xor
xor
test
sar
add
xchg
adc
nop
pushf
cmps
mov
xchg
and
mov
mov
add
es
jnp
add
lahf
jb
popa
or
inc
mov
rcr
xor
sub
add
adc
jns
xchg
push
cmp
jle
bound
popf
pop
add
or
or
or
adc
retf
mov
stc
jbe
jmp
add
or
cmps
and
dec
gs
test
repnz
mov
in
jno
sbb
sub
ins
popa
mov
and
adc
sbb
xor
push
sbb
aas
paddusb
mov
out
or
sub
cmp
mov
rol
xor
sbb
and
add
xchg
daa
push
ds
xor
pop
push
jle
inc
adc
xor
add
sti
pop
push
jg
inc
imul
clc
pop
call
pusha
call
push
xchg
xor
jmp
xor
mov
popa
hlt
in
add
repnz
leave
adc
aad
inc
movs
into
or
stos
sbb
or
mov
das
loope
xchg
mov
shl
push
mov
leave
mov
sbb
push
out
sbb
push
xor
and
add
pop
adc
lods
daa
or
inc
sub
js
cmps
push
mov
cs
cmp
jmp
adc
lods
sar
int3
inc
push
inc
xor
or
lods
test
fist
in
xor
xchg
out
adc
rcl
sub
out
inc
inc
xor
and
ja
fcom
add
push
mov
push
test
or
popa
adc
mov
or
adc
sbb
pop
adc
lea
mov
and
or
lods
push
add
dec
dec
leave
test
pop
inc
leave
push
rcr
int3
xchg
ins
sbb
dec
scas
xchg
dec
dec
dec
dec
or
js
add
dec
sbb
jg
xor
mov
push
push
adc
xchg
fs
or
sub
scas
dec
jno
ret
sbb
or
scas
mov
(bad)
ins
mov
sbb
push
push
fild
jb
popa
ins
xlat
outs
jb
jo
xor
jb
pop
je
xor
jo
dec
push
or
jns
jns
add
neg
pop
dec
call
repnz
mov
dec
inc
and
push
imul
test
jo
sbb
rcl
pop
jp
mov
push
mov
xchg
and
xchg
and
inc
mov
rol
jecxz
and
inc
and
and
pop
enter
xchg
cmp
es
or
sahf
and
leave
add
in
mov
inc
movs
and
cmp
gs
imul
add
loopne
stos
and
mov
(bad)
inc
jo
jb
adc
inc
sub
addr16
mov
add
and
mov
sbb
jns
ss
mov
add
add
das
mov
retf
mov
(bad)
or
add
sbb
int
and
test
pusha
inc
mov
(bad)
les
and
or
jl
xchg
pop
adc
and
inc
mov
rcl
lahf
enter
movs
cwde
lahf
and
xchg
lds
jno
cmp
add
test
shl
outs
jno
add
test
scas
test
inc
cs
enter
and
inc
cmps
mov
test
inc
cs
enter
and
inc
cmps
mov
sub
jmp
in
call
or
or
out
repnz
lock
xchg
and
and
fucomip
sub
jb
xor
cld
clc
adc
inc
xor
loopne
icebp
sub
nop
jns
mov
ja
sub
push
enter
mov
mov
sub
loope
sub
stos
or
shr
sub
or
addr16
or
push
adc
mov
add
mov
adc
ins
mov
lods
cmp
movs
add
call
adc
addr16
or
pop
adc
sbb
mov
ja
mov
or
xchg
ret
aaa
lods
pop
cmp
cmp
das
sub
sub
cdq
add
sub
movs
das
fcom
push
fsub
lea
je
add
dec
stos
clc
cmp
imul
sbb
jg
fistp
jne
xchg
and
in
or
pusha
sbb
adc
and
aam
and
loope
jmp
mov
jns
xchg
and
mov
rcl
das
mov
in
and
xor
stc
add
add
sahf
pop
gs
leave
dec
in
adc
dec
nop
xchg
xor
inc
xlat
mov
movs
add
or
and
inc
adc
adc
leave
push
dec
mov
or
adc
mov
cmp
in
push
lock
xor
dec
mov
push
add
loopne
rcl
aaa
and
and
and
adc
xor
cdq
in
or
hlt
mov
push
pavgb
adc
adc
inc
mov
lods
cmps
sub
cmc
mov
aaa
jb
in
pop
aaa
inc
aaa
xchg
sub
adc
fmul
in
fs
jecxz
and
xchg
test
inc
add
nop
inc
sahf
mov
repnz
aas
sub
and
inc
xor
adc
nop
stos
mov
xchg
or
pushf
loopne
aam
mov
in
cmp
mov
test
scas
push
or
or
sub
mov
in
(bad)
out
retf
pop
pop
out
add
inc
cmp
add
add
dec
add
cmp
pop
add
xchg
or
cmp
push
and
dec
loope
cmp
js
xor
mov
xchg
add
push
xor
or
pop
mov
shr
pop
jno
xor
bound
frstor
scas
pop
push
test
call
sub
mov
call
jno
adc
dec
mov
sbb
scas
or
outs
fwait
inc
call
and
pop
sbb
mov
sub
sub
fwait
adc
in
inc
push
imul
or
sahf
or
cmp
inc
enter
or
nop
adc
sub
ret
and
xor
jecxz
and
or
jecxz
or
out
mov
add
pop
(bad)
aas
and
in
fld
lds
inc
mov
bound
cmp
mov
call
test
or
and
push
repnz
pop
cld
add
mov
dec
sub
dec
xor
sbb
dec
adc
push
adc
sub
adc
inc
push
jb
sub
xchg
jecxz
adc
cmps
pop
sbb
ss
lods
sbb
jb
xchg
inc
adc
dec
adc
add
rol
inc
enter
inc
cmp
adc
and
pushf
adc
scas
push
adc
add
mov
adc
cdq
pop
mov
jne
(bad)
and
adc
pusha
sbb
mov
(bad)
lock
mov
jae
ror
pop
mov
retf
sbb
inc
mov
xchg
sub
and
ret
test
adc
pushf
xchg
xchg
in
sub
sbb
stos
and
jne
jmp
dec
and
std
xor
xor
mov
das
mov
dec
nop
enter
aaa
or
jb
inc
ins
cmp
jmp
xchg
les
pop
(bad)
sbb
in
inc
sbb
or
cmps
and
movs
nop
and
mov
dec
push
mov
cmp
adc
and
xchg
inc
xchg
or
inc
nop
mov
dec
and
push
xor
xor
popf
test
test
push
jns
pusha
adc
mov
aas
xchg
or
pop
mov
addr16
inc
or
imul
cmp
rol
adc
popa
xchg
mov
pop
out
sub
mov
test
inc
and
bound
pop
sub
xchg
or
or
int
inc
test
mov
and
pusha
or
push
bnd
adc
cmp
pop
aaa
call
mov
push
xlat
mov
sahf
sbb
loop
dec
loope
sub
dec
mov
and
pop
and
adc
and
imul
inc
test
aam
scas
push
fadd
mov
mov
dec
push
sub
sbb
(bad)
cmp
dec
or
pop
push
sbb
adc
jne
aam
div
aad
lods
jno
xchg
push
push
xchg
daa
and
lock
inc
fstp
cld
xor
frstor
dec
ds
das
mov
dec
cmp
mov
fadd
jns
test
mov
ret
ins
jmp
add
movs
cmc
and
push
icebp
jecxz
mov
sbb
push
and
xchg
dec
fiadd
nop
dec
shl
cmp
cs
push
clc
dec
in
xor
pop
outs
pop
jb
push
cmp
daa
adc
inc
push
cld
fimul
mov
sbb
inc
pusha
jns
or
enter
popf
add
push
movs
push
adc
and
dec
or
xchg
enterw
mov
xor
das
mov
dec
fcmovb
cwde
das
sbb
or
nop
retf
fcomp
aam
ret
aaa
aam
cmp
fisttp
inc
mov
into
pop
pop
push
jecxz
push
sub
ret
shr
or
or
cdq
adc
mov
mov
imul
cmp
push
aaa
mov
dec
xchg
sub
sbb
mov
mov
rol
(bad)
fadd
sbb
aam
icebp
je
jne
(bad)
inc
sbb
mov
sub
aam
ja
out
enter
xor
sbb
add
or
in
popf
and
rcr
lea
sub
dec
xor
mov
shl
inc
adc
jns
mov
pop
test
xchg
push
add
and
push
xlat
xor
push
outs
enter
and
push
outs
rol
jb
pop
rol
pop
and
test
hlt
and
adc
nop
mov
ret
in
int3
pop
in
add
sbb
popf
mov
inc
mov
xchg
cmp
lock
scas
rcr
dec
pop
inc
rol
adc
outs
int3
shr
xchg
and
pop
sbb
pushf
adc
lods
sub
inc
outs
js
jb
xor
sti
cmp
mov
mov
push
or
add
or
pushf
push
sbb
ror
push
ins
add
xor
imul
jmp
(bad)
mov
lods
or
mov
sbb
das
and
jo
push
pushf
mov
adc
int
enter
pop
rol
mov
dec
out
sbb
dec
or
and
cmps
push
push
inc
mov
dec
call
jae
sbb
stc
pavgb
mov
add
adc
and
inc
addr16
pop
push
jmp
sbb
dec
dec
clc
popa
pop
icebp
mov
mov
dec
outs
nop
and
pop
cmp
inc
add
cmp
dec
cdq
adc
push
xchg
inc
mov
inc
dec
sbb
cmp
push
dec
xor
mov
aam
inc
repnz
dec
adc
nop
std
mov
push
mov
or
mov
cmp
and
push
repnz
pop
leave
add
dec
test
add
add
ds
test
adc
outs
sbb
movs
pop
add
ja
jl
adc
arpl
pop
or
jecxz
xor
shr
mov
push
mov
cmps
in
mov
pop
icebp
fdivr
iret
xor
cld
pop
mov
icebp
popa
cmp
int
inc
add
jmp
dec
(bad)
mov
mov
mov
gs
inc
or
(bad)
loopne
jnp
mov
ins
mov
xor
and
fsubr
mov
shl
mov
outs
lods
enter
imul
enter
sub
fnstsw
push
or
or
jmp
sub
add
jecxz
in
add
fsub
mov
or
jge
inc
cmp
popa
xor
and
mov
(bad)
rcl
retf
(bad)
sub
call
shr
xor
push
push
jmp
popf
dec
inc
sbb
retf
pop
inc
call
in
pop
fmul
and
add
lods
aas
xchg
cmp
add
push
int3
push
das
ja
or
adc
mov
xor
and
call
pop
or
stos
es
ins
add
das
push
rol
push
scas
adc
xchg
pusha
push
scas
xor
iret
sbb
or
test
in
mov
inc
sub
stos
in
pusha
add
add
in
inc
lods
sbb
nop
ins
dec
movs
inc
call
jno
test
call
call
pop
jmp
sub
push
sti
rcr
jecxz
out
bound
out
jmp
repz
dec
inc
popf
add
push
mov
inc
test
rsqrtps
mov
mov
cmps
shl
sub
jae
add
(bad)
or
dec
mov
and
and
das
and
fs
fnstenv
inc
sub
cmp
push
arpl
in
test
adc
imul
adc
pop
pop
jo
sbb
sbb
add
push
pop
cli
cmp
xchg
gs
pop
repnz
pop
cmp
enter
(bad)
data16
push
data16
add
pop
push
jno
cmp
push
fs
jge
test
push
mov
enter
mov
fsub
and
add
push
leave
ds
sbb
push
in
inc
or
jns
arpl
pop
ja
push
pop
invd
fstp
call
imul
xchg
pop
call
push
or
jns
or
mov
out
sub
and
sub
mov
shl
popf
or
jne
inc
adc
mov
adc
nop
cmp
mov
cmp
or
mov
or
xor
stos
xor
mov
adc
adc
inc
or
sub
cwde
cmp
mov
jecxz
dec
adc
dec
sub
outs
push
es
lds
adc
es
outs
sub
test
or
dec
stc
shl
cs
(bad)
cmps
pop
leave
mov
or
js
cmps
popa
mov
jp
dec
pop
or
daa
inc
test
push
pop
jmp
shl
or
sbb
sub
xor
sahf
ret
cmp
pusha
xor
pop
mov
adc
sub
popf
pop
or
xchg
stos
or
test
aas
aaa
xor
or
push
adc
xchg
push
mov
and
dec
jbe
aam
rcl
sub
loopne
inc
in
loop
fimul
sub
mov
lods
push
nop
fstp
lahf
jne
push
sbb
pop
inc
mov
dec
and
ins
and
clc
xor
sar
or
add
sub
pop
xor
xchg
or
movs
lock
or
push
add
inc
add
adc
xchg
mov
sahf
dec
(bad)
adc
mov
push
inc
push
pop
add
add
neg
inc
sbb
into
je
aaa
xor
push
push
outs
mov
jo
jno
jb
mov
out
pop
jmp
ror
rcr
or
add
add
mov
mov
loopne
sbb
or
in
xchg
loopne
shl
shl
mov
fistp
test
pop
xor
inc
and
sub
mov
push
mov
and
jle
and
jb
mov
loopne
and
nop
push
add
xor
je
or
retf
push
les
and
dec
loop
jp
jmp
iret
test
jmp
int3
dec
repz
push
add
sub
(bad)
xchg
sbb
sbb
push
(bad)
push
or
hlt
lods
adc
rol
xchg
fcmovnu
(bad)
stc
push
imul
sbb
call
jnp
pop
dec
ret
pop
adc
ja
cmp
mov
xor
mov
mov
add
and
fiadd
loope
adc
iret
shl
xchg
cmp
cs
pop
pop
mov
add
outs
push
add
sbb
stos
lods
ret
xchg
test
push
push
mov
lods
adc
cmp
shl
and
sbb
pop
mov
push
in
sbb
jne
xor
movs
aam
ficom
jge
jle
mov
in
je
adc
add
dec
sahf
sub
pushf
cwde
dec
push
stc
nop
cwde
sbb
cmp
leave
and
in
xchg
jl
nop
jb
inc
jo
not
or
add
lods
int3
sub
xchg
push
cmps
xor
add
xor
push
jo
inc
mov
pop
sbb
out
pop
sub
repz
nop
push
xor
sub
leave
add
inc
xlat
test
push
pop
and
adc
and
mov
xor
fisubr
outs
adc
mov
jbe
inc
push
mov
test
or
xor
dec
nop
rol
mov
test
pop
sbb
adc
inc
mov
shr
retf
data16
jne
nop
psrld
inc
movs
pushf
shl
test
adc
fdiv
mov
inc
sbb
inc
or
ss
jmp
or
ja
pop
jne
and
jmp
(bad)
mov
popa
push
into
adc
inc
push
push
sub
lock
dec
mov
aas
cmp
pop
les
jne
sti
jb
mov
fldcw
cmp
(bad)
out
xchg
dec
add
retf
imul
adc
add
lods
js
add
add
jne
and
das
or
and
rcr
and
or
idiv
and
xchg
pusha
das
imul
dec
mov
pusha
mov
sub
loop
mov
lods
and
dec
adc
xchg
pop
inc
aaa
mov
out
jnp
jbe
push
cmps
dec
cld
lock
sbb
ret
jmp
add
pusha
aas
aaa
(bad)
sub
outs
add
xlat
iret
and
add
dec
push
add
adc
add
adc
and
(bad)
js
push
(bad)
fs
push
shl
or
sbb
and
mov
jo
mov
lods
inc
jb
pop
and
push
add
mov
jns
sub
inc
sbb
add
fdivr
pop
inc
add
jp
mov
neg
je
test
sbb
pop
and
pop
push
cmps
fs
dec
adc
sub
fwait
sub
and
mov
mov
xchg
test
push
in
cdq
push
pusha
push
jmp
adc
repz
pop
call
mov
xchg
or
gs
(bad)
sbb
(bad)
dec
push
adc
push
mov
das
push
scas
and
push
hlt
sbb
add
dec
sar
fcomp
adc
sub
jb
loopne
jl
fdiv
pop
xchg
rol
pop
xor
shl
mov
dec
loope
sub
mov
sub
or
xchg
pusha
jge
fstp
das
push
mov
lea
xor
sub
arpl
sbb
sub
jno
or
or
aam
pop
or
jmp
imul
ja
dec
gs
and
loope
cld
(bad)
outs
cdq
sbb
test
mov
push
and
int
ds
jecxz
gs
imul
(bad)
les
cmp
mov
arpl
xor
adc
(bad)
test
stos
dec
sub
mov
mov
jae
hlt
inc
(bad)
adc
cmpps
pop
cwde
sbb
inc
lea
inc
mov
or
dec
(bad)
test
and
mov
fs
or
jne
xchg
mov
rol
xchg
call
mov
call
nop
pop
dec
ja
dec
adc
xor
jge
xor
inc
add
fwait
movs
lock
cdq
movs
mov
lock
inc
movs
inc
fsubr
fadd
xor
dec
test
add
xor
enter
and
jmp
xchg
push
pop
imul
and
xor
call
jbe
inc
mov
dec
jb
mov
cmps
sbb
pop
lods
test
cdq
ss
dec
add
or
nop
dec
inc
adc
pusha
or
and
add
arpl
sbb
loopne
nop
and
mov
fwait
push
pusha
inc
pop
arpl
xor
or
or
imul
and
and
dec
inc
inc
loopne
add
or
lods
sbb
pop
mov
stos
xchg
or
push
mov
loop
mov
inc
mov
leave
add
jo
push
pusha
jo
sbb
and
hlt
and
sbb
dec
cmp
or
inc
js
in
jns
mov
and
jns
xchg
dec
imul
and
rcl
out
adc
fild
inc
xchg
xor
inc
or
scas
sbb
adc
and
popa
adc
adc
adc
or
xchg
loop
push
mov
outs
daa
adc
xor
adc
dec
inc
jo
xchg
nop
fist
sbb
pop
movups
scas
or
inc
adc
mov
mov
mov
cmp
pop
and
add
inc
shr
ja
inc
imul
push
push
dec
xor
adc
lea
mov
repz
call
dec
js
loopne
mov
loop
in
add
les
xchg
mov
in
sub
and
lock
push
push
sbb
nop
add
adc
(bad)
sti
sub
lea
ins
add
ins
sub
mov
in
dec
imul
xor
js
dec
push
dec
ror
scas
aas
push
jle
sar
add
stos
cld
and
mov
or
(bad)
fistp
push
add
rol
xor
mov
xchg
imul
mov
jp
mov
lds
cmp
mov
dec
outs
fcomp
das
inc
les
mov
sahf
fsubr
aam
test
adc
and
mov
movs
std
jo
or
pop
je
rcl
mov
fidivr
jmp
pop
push
aaa
lods
loopne
mov
jl
rol
push
and
jmp
xor
pop
cmp
pop
add
cmp
jmp
xchg
sub
fmul
rol
test
pop
xchg
adc
imul
mov
call
push
push
xor
fstp
int
test
cmp
cwde
inc
xchg
push
xchg
pushf
dec
leave
rcr
and
xchg
xchg
leave
mov
inc
xchg
mov
inc
test
test
and
adc
pop
jnp
jmp
mov
bound
sar
jno
js
aaa
ret
cdq
add
shr
or
sub
inc
fst
fwait
and
xor
inc
push
out
mov
das
pop
in
lea
popa
adc
out
sub
adc
mov
sbb
das
inc
and
rol
imul
push
adc
fbld
sub
mov
adc
aam
sbb
shl
js
ss
int3
dec
movs
xor
int3
enter
movs
xor
enter
add
push
or
mov
fcom
and
pop
mov
sar
std
(bad)
and
pop
adc
sbb
mov
les
push
and
bound
dec
xchg
add
add
cmp
lods
adc
inc
adc
pusha
xor
nop
lea
xlat
lea
adc
inc
add
pop
mov
ror
cmps
mov
mov
imul
adc
ins
xlat
mov
inc
and
repz
inc
or
push
push
in
cmp
mov
xor
jne
sub
aad
adc
inc
adc
fisttp
cli
cmp
inc
xchg
stos
loopne
sbb
out
dec
pop
and
or
cmp
scas
nop
xchg
jmp
and
nop
ret
call
jb
les
xchg
dec
xchg
nop
jge
lock
jns
nop
add
pop
clc
xchg
sbb
cwde
les
mov
dec
or
xor
dec
mov
ds
add
into
sahf
cdq
pop
fdivr
fnsave
lahf
dec
fsub
sub
xor
rcr
lock
loope
and
outs
fdivr
dec
retf
xor
popf
and
rcr
retf
adc
add
adc
cdq
and
les
je
add
and
dec
xor
and
or
retf
dec
ins
sysenter
sbb
xchg
movs
jb
retf
sar
fistp
and
mov
or
mov
aam
mov
call
ror
jb
adc
lahf
jns
mov
sub
(bad)
xor
add
add
add
es
sub
mov
or
gs
mov
sub
mov
ss
neg
cwde
push
mov
xor
sbb
inc
sub
aam
mov
cmp
push
repnz
jg
push
adc
cmp
xchg
dec
fisub
aaa
jle
enter
or
xor
and
adc
xchg
loopne
movs
xor
and
aam
cdq
movs
loopne
jmp
sub
ror
std
push
xchg
push
push
mov
aam
cmp
(bad)
sub
das
arpl
repnz
pop
stos
clc
das
arpl
enter
cld
das
arpl
mov
and
pop
leave
xor
aas
sbb
nop
(bad)
arpl
pop
add
mov
je
and
sub
push
aam
loop
xor
repnz
mov
inc
push
cmps
adc
rol
adc
jl
dec
cld
fild
mov
cmp
ja
inc
cmp
sbb
mov
inc
fidivr
aam
push
lds
push
je
dec
xor
add
imul
or
adc
push
push
pop
mov
mov
daa
test
aam
sbb
mov
loop
add
and
leave
cwde
dec
and
or
add
in
xor
mov
mov
mov
stc
jb
sbb
add
add
data16
nop
inc
xor
leave
and
mov
mov
out
sub
fcomp
and
mov
dec
mov
add
adc
cwde
xchg
aam
icebp
push
jb
xchg
in
cdq
fmul
xor
in
dec
xchg
js
dec
in
mov
lds
aas
xor
test
push
xor
bound
and
ja
sub
push
shl
xchg
fsub
add
inc
push
mov
add
icebp
jmp
adc
xor
popa
repnz
pop
push
call
inc
xchg
mov
bound
popa
mov
mov
scas
ret
fadd
repnz
cmp
and
dec
cmp
sub
and
sub
and
punpckldq
loop
pushf
add
and
lahf
jb
inc
add
test
or
loope
inc
js
jmp
push
jmp
test
adc
add
sbb
xor
dec
call
clc
call
inc
mov
sub
adc
jne
and
adc
sub
add
shl
(bad)
sub
imul
xchg
adc
fwait
push
and
push
je
cmp
xor
sub
sahf
adc
inc
mov
add
jg
sbb
mov
ss
test
jmp
cmps
test
aas
je
inc
sahf
add
cmp
je
and
mov
add
adc
jl
nop
dec
scas
imul
add
and
daa
lds
mov
gs
push
movlps
leave
jb
jmp
or
adc
push
lock
test
sbb
cmps
add
dec
cwde
lahf
cdq
inc
pop
jno
cmc
cmps
or
out
or
cmps
cli
inc
jb
or
aad
mov
push
xchg
addr16
mov
shl
and
aam
sub
mov
mov
mov
sbb
mov
in
dec
sbb
jl
pop
inc
dec
adc
adc
sub
lods
lds
xchg
out
ss
add
call
shl
or
lock
jbe
cmps
(bad)
shr
lock
movs
push
xlat
or
lock
call
or
adc
and
leave
and
cwde
ss
dec
mov
mov
sub
sar
jmp
dec
enter
sbb
mov
dec
in
imul
leave
in
test
xchg
shl
push
imul
int
jo
push
and
mov
cmp
jge
jge
or
pop
jo
and
iret
and
rol
add
mov
loopne
and
jne
mov
inc
lds
call
xchg
xchg
pop
stos
dec
dec
wbinvd
aas
and
adc
jno
lods
out
js
add
scas
aam
sbb
movs
mov
and
push
repnz
and
out
push
add
dec
std
shl
in
pop
sub
aad
xchg
aam
ror
xchg
pusha
test
and
dec
sub
ins
pop
inc
iret
add
or
cdq
mov
popa
and
jno
icebp
push
push
imul
adc
add
jne
pop
scas
pop
push
xor
or
or
pop
scas
pop
adc
cmp
and
sub
inc
aam
fild
mov
int3
movs
leave
pop
sbb
loopne
in
mov
xchg
aad
lods
pop
jge
xchg
hlt
test
mov
sbb
xlat
adc
aad
lahf
das
jno
mov
add
inc
push
and
mov
adc
and
xor
mov
add
push
xchg
jp
xchg
adc
pop
mov
inc
add
add
mov
test
movs
xor
jno
lock
aas
lahf
xchg
or
mov
fidiv
icebp
or
add
paddd
or
push
add
xor
(bad)
xlat
sar
(bad)
mov
push
jl
lods
jp
jne
in
pop
push
test
dec
add
and
or
and
mov
mov
test
and
lea
out
(bad)
push
inc
test
in
xor
sbb
push
pop
and
fidiv
inc
pop
arpl
add
add
mov
mov
call
fadd
sbb
fild
xchg
xchg
or
adc
or
sbb
push
sbb
fadd
or
and
adc
add
add
call
loopne
xor
mov
add
push
xor
pop
sub
add
dec
fiadd
stc
mov
add
jne
add
scas
xor
jns
inc
aam
rcl
pop
iret
aam
rol
or
lock
movs
mov
retf
out
jmp
cmp
cmp
jnp
pop
add
mov
adc
pop
mov
fldcw
in
pop
adc
add
popa
xchg
cmps
push
xor
enter
mov
xchg
pop
in
les
jmp
in
add
adc
and
ror
dec
lock
sti
cdq
fwait
xor
sbb
into
jle
mov
sbb
and
push
add
sbb
pop
dec
mov
sbb
arpl
daa
iret
add
mov
push
mov
mov
mov
mov
fs
xchg
rol
pusha
and
test
mov
arpl
sub
cmps
dec
bound
xchg
jbe
mov
xor
mov
in
mov
or
imul
mov
pop
into
cmp
inc
loop
(bad)
push
sbb
enter
mov
loopne
xor
jnp
mov
add
loop
test
add
inc
ret
jg
cmp
es
or
iret
xchg
adc
imul
loopne
ror
push
and
movs
outs
or
shr
stos
mov
xor
jmp
pop
xor
nop
stos
add
imul
int3
lods
dec
adc
jne
cmps
bound
mov
fucom
or
das
dec
aam
test
pop
test
mov
adc
(bad)
push
fbstp
push
icebp
jg
sbb
rcr
(bad)
push
mov
mov
add
stos
mov
sub
adc
cmp
inc
js
sub
sbb
fsub
ror
mov
cmp
dec
jne
sbb
cmp
movs
fnsave
ret
int3
mov
outs
je
lock
mov
xor
lock
or
in
add
and
int3
scas
inc
rol
bound
xor
mov
inc
lods
or
aad
push
outs
call
or
xchg
push
and
adc
add
sbb
inc
xchg
xor
mov
jno
rcr
cmp
mov
aad
shl
xlat
retf
mov
add
mov
jmp
test
in
pop
aaa
fidiv
xchg
xor
push
gs
cmp
xchg
cli
sbb
mov
repz
add
mov
retf
inc
retf
jo
and
inc
dec
in
jmp
push
mov
push
and
sbb
adc
aaa
xor
les
fdivr
or
or
add
jo
adc
or
add
jl
adc
outs
xchg
hlt
aam
mov
push
adc
dec
and
aaa
add
mov
mov
push
dec
pop
sbb
arpl
(bad)
addr16
scas
test
and
cmp
stos
leave
out
and
call
pop
mov
mov
movs
enter
in
or
lods
or
inc
das
and
mov
dec
adc
(bad)
leave
mov
(bad)
push
in
push
cmp
xchg
mov
pop
pop
rol
fcomi
fsub
jns
dec
iret
(bad)
push
(bad)
adc
mov
movs
ret
inc
mov
movs
fs
dec
and
or
fnsave
stos
push
sub
stos
bound
loopne
shl
xchg
outs
mov
mov
push
jns
pop
jecxz
xadd
cs
(bad)
clc
pop
sar
push
call
and
xor
sub
cmp
test
adc
jb
mov
mov
cs
add
dec
dec
dec
inc
cs
ins
in
dec
dec
jo
cmp
dec
push
adc
mov
xor
loopne
inc
inc
call
enter
xor
and
add
leave
cmp
cmp
je
test
enter
mov
das
ins
stos
int3
es
nop
sub
jbe
shl
movs
add
sbb
sahf
push
pop
jne
dec
push
jp
sub
and
daa
jp
jl
shr
cmp
jmp
idiv
(bad)
xor
pop
jne
sub
ja
cmovno
mov
cdq
arpl
fnsave
pop
in
xchg
xor
add
enter
add
mov
daa
pop
xchg
pop
sub
mov
je
adc
dec
jo
push
popa
jne
ret
push
push
pop
and
xchg
mov
mov
dec
push
fld
add
sub
mov
add
or
xchg
sub
fsubr
(bad)
test
ja
mov
dec
mov
and
or
shl
mov
stc
jb
adc
loopne
outs
test
mov
mov
or
jne
add
enter
lods
lods
aad
loopne
jmp
stos
jmp
sbb
arpl
jne
xor
dec
mov
shl
or
xchg
test
cmp
xchg
cmp
jnp
and
push
and
jle
sbb
add
test
out
xor
popa
movs
mov
or
mov
dec
sbb
sbb
cld
mov
cwde
sbb
test
loopne
ins
outs
xchg
xchg
in
sub
or
xor
or
cmps
add
imul
or
test
sbb
mov
les
pop
mov
mov
pop
es
inc
mov
or
in
loopne
leave
mov
and
mov
inc
cmps
inc
sub
addr16
or
add
mul
jp
and
dec
adc
xchg
push
inc
add
push
aaa
fdiv
mov
mov
adc
jae
pop
and
sbb
int3
pushf
push
mov
div
hlt
hlt
and
hlt
add
enter
and
leave
ret
mov
jbe
stc
daa
xor
inc
sahf
int3
fmul
inc
push
and
ja
and
dec
push
sub
sub
inc
push
xor
das
into
push
xchg
dec
or
fild
or
push
pop
inc
jg
in
xor
nop
es
ret
adc
adc
pop
pop
or
and
xchg
xor
or
mov
and
and
sub
ret
sbb
xor
dec
pop
mov
sub
or
rol
mov
jg
adc
adc
imul
ss
push
cmp
addr16
rcr
fcomip
lock
sub
aaa
add
xchg
repz
shr
rcl
nop
push
add
xchg
shl
aad
or
or
in
sbb
adc
repnz
and
retf
mov
add
sub
int
shl
sar
cmp
mov
nop
add
inc
inc
rcl
lock
cmp
mov
add
rcr
jl
mov
popf
push
cmps
push
jno
add
cmp
(bad)
fstp
inc
psrlq
jo
jmp
ins
xchg
mov
cmp
rol
(bad)
outs
dec
mov
fmul
xchg
test
lea
sbb
adc
or
lods
inc
inc
in
or
dec
mul
pusha
rcl
(bad)
mov
shl
inc
mov
les
dec
adc
aaa
dec
xchg
mov
std
in
fnsave
test
rol
mov
push
mov
shl
dec
adc
mov
inc
out
push
pop
add
movs
xchg
and
(bad)
push
and
lods
sbb
xchg
add
or
icebp
fdiv
ss
test
push
jb
or
js
xlat
and
shl
sbb
rcl
out
(bad)
fisttp
pop
ja
xlat
mov
mov
cdq
push
sub
test
into
dec
jo
arpl
mov
es
push
popa
stos
sub
push
push
or
mov
not
or
fcom
dec
mov
xor
cdq
bound
(bad)
mov
jns
cld
sbb
fcom
add
push
and
int3
xlat
dec
fsub
or
fs
inc
or
pop
push
fs
push
and
hlt
fld
test
sub
mov
fucomi
pop
lods
pop
loope
(bad)
cmp
js
mov
fnstenv
nop
inc
inc
je
or
pop
inc
cld
ret
add
sub
mov
xchg
mov
sub
sbb
ficomp
and
push
xchg
sub
sub
ja
xchg
rcl
or
lods
add
fidiv
jecxz
leave
xor
xchg
push
mov
lods
shl
rcl
push
jo
add
dec
icebp
mov
xchg
xchg
pop
adc
add
cmp
xor
add
inc
or
loopne
jecxz
sahf
ret
push
lock
adc
or
pop
dec
ret
out
mov
mov
aas
outs
loope
enter
add
mov
and
push
pusha
ret
or
add
dec
clc
shl
sbb
cli
loopne
inc
rol
pop
add
xor
adc
push
inc
push
sbb
call
push
mov
in
mov
sar
push
add
push
call
in
cmps
nop
mov
push
les
test
addr16
inc
es
cwde
(bad)
fcomp
jb
mov
fcomp
clc
jns
pop
xor
fdiv
cmp
icebp
loop
movs
inc
fdivrp
ret
mov
test
adc
dec
dec
pop
inc
dec
jb
cmp
or
pop
inc
imul
js
adc
je
cmp
movs
nop
rcl
or
sub
adc
cmp
cmp
adc
sbb
(bad)
stos
inc
pop
sbb
test
dec
dec
mov
xchg
push
and
cmp
inc
and
add
or
sub
je
dec
mov
xchg
add
adc
cmc
rcpps
imul
and
stos
dec
aaa
mov
dec
xor
outs
jle
adc
inc
ins
and
popa
push
(bad)
pusha
adc
push
ins
aaa
movs
sbb
push
aaa
pop
or
movs
imul
dec
add
jmp
xor
add
adc
cwde
sahf
add
and
nop
push
shl
arpl
inc
out
pop
je
mov
ret
inc
mov
sub
add
data16
mov
sub
adc
dec
lock
push
sub
shr
je
gs
push
leave
movlps
mov
les
sbb
mov
pop
daa
add
dec
mov
outs
push
dec
mov
lar
je
test
push
dec
mov
je
mov
fild
imul
sub
je
ds
and
stos
in
inc
or
xlat
add
pop
push
in
add
mov
push
jl
in
out
add
add
popa
jg
inc
adc
adc
addr16
push
ret
fsub
xchg
push
lea
je
fdiv
(bad)
sar
dec
xchg
jo
jp
adc
aad
cmp
call
jae
lds
mov
test
adc
adc
jmp
push
mov
aas
je
and
sub
jne
adc
mov
mov
mov
pop
(bad)
mov
mov
out
push
aaa
std
cli
mov
iret
psubsb
cmp
imul
push
push
pop
mov
mov
inc
shr
mov
shl
les
repz
xor
or
bound
jl
xchg
inc
jl
sub
data16
sub
pusha
adc
cwde
dec
xchg
cdq
ficomp
cmc
and
shr
and
adc
rcr
inc
sub
mov
dec
sahf
adc
pop
xchg
push
outs
xchg
and
mov
fsubr
nop
je
sbb
fadd
je
stos
rcr
inc
or
rol
or
sar
test
shl
test
and
or
or
or
lock
cwde
jbe
mov
cmps
jmp
or
or
rol
(bad)
xor
loopne
dec
loope
xchg
xor
push
push
pop
or
test
int
sahf
in
shl
cmc
enter
bound
xchg
sub
pop
dec
ror
sbb
mov
mov
pop
sar
mov
xchg
stos
(bad)
int
shl
fcomp
sbb
lahf
dec
lock
fdivr
jb
dec
inc
mov
jmp
push
inc
cmp
hlt
daa
dec
adc
or
mov
ss
inc
dec
mov
cvtdq2ps
push
popa
test
add
or
mov
inc
popa
dec
fmul
aam
inc
push
call
push
mov
les
cmp
aad
icebp
push
call
mov
dec
popa
mov
loope
xchg
test
inc
push
js
mov
push
xchg
xchg
sub
lea
mov
repz
test
retf
add
adc
pushf
push
push
jg
inc
leave
nop
cmp
fbld
and
rol
in
add
and
xor
add
add
loopne
inc
fldenv
lock
cwde
add
(bad)
adc
inc
cmp
add
loope
add
jmp
jmp
ins
fcom
leave
test
repz
push
mov
mov
sbb
popf
xchg
or
cmp
adc
or
std
xor
mov
jmp
adc
icebp
add
lods
pop
int
xlat
xor
jae
inc
sbb
or
lahf
inc
add
mov
add
and
ins
mul
sub
sbb
in
imul
test
clc
jl
mov
in
sub
repnz
dec
xchg
mov
les
sub
clc
mov
push
cmp
movs
mov
add
rcl
stc
jmp
mov
and
adc
or
(bad)
pusha
mov
popa
je
push
sbb
enter
stc
mov
je
adc
and
or
add
in
xlat
and
mov
js
add
inc
test
rcl
adc
or
sub
and
adc
test
push
sbb
jmp
mov
dec
xor
lods
mov
dec
mov
push
retf
(bad)
lock
ja
cli
inc
cmp
cmp
adc
mov
enter
popa
ss
or
push
popa
and
and
sbb
movs
xor
xchg
push
pusha
fwait
call
in
adc
mov
xchg
lock
cmps
mov
inc
call
test
cdq
adc
nop
xchg
xor
mov
sbb
mov
loope
xor
lea
add
or
dec
dec
pop
and
adc
sub
sbb
inc
inc
cmp
and
inc
push
jno
pop
out
lods
scas
xchg
pop
cmp
cwde
dec
imul
test
mov
(bad)
dec
push
iret
jns
nop
sub
dec
add
or
and
sbb
add
es
sub
pop
xor
inc
and
sbb
in
das
ret
in
mov
xor
push
inc
jnp
out
push
mov
sahf
(bad)
aas
loop
imul
mov
lods
aad
sbb
add
mov
add
retf
popa
lods
cdq
(bad)
sub
mov
xchg
xchg
lods
inc
sub
and
mov
ret
add
pop
sbb
or
push
add
out
call
mov
xor
dec
push
xor
int3
lock
cmp
or
daa
inc
sbb
neg
jae
xchg
pop
shl
mov
add
inc
les
or
add
xor
and
stos
dec
ins
add
aad
add
push
or
lods
in
and
add
mov
pop
adc
pop
scas
xchg
push
add
int3
pop
clc
pop
mov
and
inc
dec
mov
mov
lahf
xor
das
dec
not
dec
dec
lea
fprem1
adc
add
xor
add
in
cmp
push
(bad)
fbld
mov
cmp
les
loopne
dec
add
jns
dec
inc
addr16
inc
and
or
int
adc
fist
or
mov
outs
leave
and
repz
enter
pop
add
bound
mov
cmp
sbb
xchg
lea
xor
add
xor
and
cwde
mov
popa
adc
jecxz
(bad)
ja
dec
mov
or
add
popa
jmp
dec
sbb
lea
jae
ror
pop
dec
sar
push
push
lea
mov
or
dec
sub
fadd
sar
pop
neg
or
sbb
fcom
pop
imul
inc
adc
add
pop
push
mov
int3
add
and
xor
int3
cmp
stos
enter
or
sub
xchg
mov
mov
lahf
cmp
test
mov
pushf
sub
sbb
add
add
inc
xor
les
adc
sub
test
addr16
inc
test
(bad)
lods
test
push
popa
adc
mov
out
xor
ins
dec
xchg
or
push
cmp
pop
cdq
and
rol
xchg
in
adc
inc
or
mov
icebp
out
pop
fwait
enter
call
mov
pop
jb
sub
lea
or
dec
xchg
mov
or
aas
dec
call
ret
dec
(bad)
or
inc
and
sbb
and
adc
sub
or
add
adc
or
cmp
shrd
test
in
pop
cdq
or
xchg
xchg
out
(bad)
fist
xchg
push
fcmovnbe
xchg
ror
dec
and
inc
pop
popa
int3
and
pinsrw
jae
xchg
adc
sbb
sahf
add
repnz
loop
icebp
or
and
imul
test
adc
xor
int3
dec
retf
or
cdq
xchg
and
adc
add
xchg
fwait
cdq
ret
call
mov
gs
fsub
inc
cmps
jecxz
push
pop
enter
or
dec
xor
dec
fistp
cmps
add
movs
jae
mov
icebp
fs
adc
sub
mov
push
adc
mov
sub
pushf
mov
pop
imul
rol
stos
sub
add
pop
add
inc
imul
xor
jb
or
adc
adc
les
dec
and
xor
sbb
sar
mov
mov
cmp
jmp
test
sbb
adc
pop
push
imul
and
xchg
jp
jo
inc
add
sub
pop
int3
xor
push
sbb
inc
mov
and
hlt
sub
ins
sub
mov
add
sub
or
adc
add
inc
mov
in
adc
inc
mov
mov
jns
cmp
iret
movs
adc
adc
inc
or
rcr
mov
adc
cmp
or
inc
pop
adc
inc
iret
rcl
jmp
out
pop
(bad)
gs
sbb
in
rcl
mov
xor
pop
adc
lds
mov
(bad)
xor
jo
push
inc
mov
ins
cmps
mov
pop
cmp
test
xor
push
sbb
cmp
or
mov
mov
mov
mov
aam
mov
das
and
imul
pop
loopne
nop
xchg
pop
les
push
les
movs
xchg
aam
icebp
test
push
lahf
xchg
adc
push
and
div
xchg
inc
or
ret
jge
imul
xor
pop
sub
add
aam
xchg
mov
jne
shl
and
and
cmp
adc
push
add
jne
add
pop
add
push
movs
mov
fld
shr
and
push
mov
push
xor
push
or
stos
stos
mov
(bad)
push
stos
mov
adc
pop
inc
push
hlt
jns
add
sbb
pushf
sub
pop
add
push
movs
mov
pop
adc
shr
hlt
push
adc
jne
cmp
sub
push
test
mov
add
dec
shl
add
xor
push
inc
mul
adc
push
ss
shl
push
jnp
lods
add
inc
push
push
push
jmp
cmp
and
std
rol
sub
adc
inc
push
nop
cmp
and
out
sub
adc
jbe
mov
or
pop
mov
push
adc
pop
and
dec
adc
cvtps2pi
leave
mov
adc
push
imul
add
lods
dec
loop
arpl
adc
push
adc
cmp
add
cmp
or
daa
mov
lods
xchg
sub
cmps
dec
hlt
jne
push
pop
push
adc
mov
jno
les
dec
test
inc
sub
mov
dec
adc
push
jno
sub
retf
sbb
lods
test
mov
adc
cmps
mov
and
outs
rcr
add
pop
fwait
jo
sbb
fwait
sti
sbb
sbb
add
pusha
push
leave
xor
add
in
and
xchg
lock
(bad)
adc
sub
enter
outs
adc
daa
mov
mov
mov
mov
dec
sub
pusha
loop
cli
sub
sub
cdq
dec
test
sub
xchg
les
xrelease
dec
sub
loop
(bad)
in
rol
sub
in
in
inc
sub
and
sub
js
repz
push
call
rcl
adc
inc
push
add
dec
dec
and
add
jae
sub
sub
mov
ss
fsubr
nop
(bad)
les
push
mov
cmps
and
or
and
and
dec
sub
adc
adc
pusha
mov
rol
lods
add
inc
mov
xor
call
(bad)
retf
add
adc
push
jns
dec
jl
adc
js
and
sbb
pop
and
inc
mov
sub
cmp
xchg
mov
xor
mov
push
and
or
push
sbb
mov
mov
mov
pop
and
or
and
sub
or
cs
inc
inc
mov
pop
jne
imul
shl
add
jecxz
pop
xor
xchg
inc
xor
cmovp
dec
and
out
das
(bad)
xor
adc
fmul
sbb
and
and
inc
cmp
sbb
xchg
sbb
and
fisub
add
inc
lock
mov
sbb
and
inc
mov
fiadd
je
add
lock
xor
lahf
hlt
push
xor
inc
adc
xor
add
cmp
call
icebp
pop
or
xor
add
xor
cmovge
in
ret
xor
imul
xchg
inc
clc
adc
rcl
jno
mov
fstp
shl
pop
scas
adc
or
dec
cmps
xchg
lods
outs
mov
mov
xor
xchg
leave
iret
js
addr16
push
adc
imul
icebp
dec
lds
adc
out
xor
add
(bad)
xor
and
push
je
xor
jl
lds
mov
out
add
stos
pop
xchg
adc
cmp
test
mov
mov
push
add
dec
pop
stos
xchg
add
adc
test
cmp
mov
std
rol
enter
les
test
mov
adc
mov
hlt
repnz
aaa
xchg
jbe
mov
lods
and
push
or
(bad)
jl
and
lock
mov
pop
or
jmp
inc
and
push
out
repnz
aam
sub
pop
cmp
inc
inc
fisttp
sub
cmp
dec
mov
inc
xchg
xchg
pop
or
cmp
fstp
sbb
loop
or
jmp
fld
adc
mov
gs
or
sbb
je
in
push
fwait
adc
cdq
movs
pop
sbb
push
fimul
(bad)
or
das
in
pop
inc
stc
sar
lock
sub
pop
sbb
or
mov
inc
ret
cvtdq2ps
sub
test
lahf
in
dec
cmp
and
inc
test
outs
fs
add
inc
xchg
xor
or
cmp
push
push
bound
xchg
push
in
shl
inc
mov
pop
gs
xchg
gs
in
xchg
or
inc
std
cmp
loopne
(bad)
enter
stos
arpl
dec
in
gs
in
aaa
push
dec
sbb
cmp
sbb
mov
xchg
(bad)
lahf
inc
dec
mov
je
xchg
outs
or
push
add
rcl
cmps
dec
in
add
repnz
pop
adc
nop
and
mov
push
add
inc
sbb
jmp
cmps
mov
inc
in
test
or
add
or
lahf
hlt
sub
inc
pop
jb
add
test
push
and
mov
push
(bad)
cmc
xor
popa
inc
icebp
lods
mov
sbb
dec
nop
cdq
inc
test
pop
sbb
xor
mov
cmp
cs
xor
xor
xor
dec
adc
call
(bad)
jne
inc
inc
xchg
dec
jge
dec
scas
lods
adc
ins
mov
in
pusha
push
imul
push
cmp
jae
add
iret
call
popa
imul
or
inc
xor
cmp
into
add
or
jp
push
movs
aaa
lea
ss
mul
xlat
adc
and
pop
jl
push
dec
fwait
xlat
dec
and
mov
mov
pop
(bad)
rol
inc
sbb
dec
pop
scas
jl
or
xor
sbb
loopne
cs
add
hlt
mov
dec
push
inc
inc
imul
adc
daa
push
test
pop
adc
inc
rcr
inc
xor
dec
nop
rol
push
jg
add
jecxz
popa
push
imul
mov
add
xchg
ja
jmp
rcr
in
inc
and
or
pop
stos
enter
inc
mov
xbegin
fist
push
add
or
je
or
(bad)
cwde
test
lahf
je
add
inc
fist
sbb
rcr
and
js
je
test
dec
enter
lods
js
je
sbb
fimul
mov
out
add
int3
fdiv
jo
lods
mov
pushf
movs
push
(bad)
std
xor
dec
shl
les
add
and
jno
dec
jmp
adc
mov
adc
add
mov
adc
aam
jno
mov
or
pop
and
inc
add
adc
or
rcl
or
mov
or
nop
mov
in
push
dec
(bad)
adc
sub
jae
pop
movs
sbb
sbb
imul
sub
in
sbb
stos
icebp
inc
shr
or
ins
mov
bound
aas
push
xchg
jp
add
movs
sbb
inc
inc
add
jae
add
das
retf
sub
and
mov
loope
sbb
xchg
pop
dec
inc
xchg
sub
test
inc
jmp
mov
rol
(bad)
jo
movs
les
mov
out
inc
enter
inc
cmp
xchg
cwde
test
mov
xor
pusha
push
addr16
mov
xchg
lock
and
jb
xor
inc
popa
pop
test
pop
scas
adc
in
adc
sbb
push
jns
ret
sbb
push
mov
into
mov
sub
fucomi
out
test
inc
mov
add
mov
lock
add
pop
(bad)
xchg
cmp
dec
pop
adc
xlat
lock
es
in
rcl
dec
jb
cmp
(bad)
mov
push
mov
dec
fnsetpm(287
push
mov
sub
mov
sbb
inc
xchg
jb
dec
out
inc
dec
xor
pop
jl
and
test
sub
dec
or
add
dec
sub
dec
arpl
sbb
mov
inc
dec
xor
mov
inc
inc
popa
push
cdq
loop
mov
mov
add
cmps
dec
add
sbb
cwde
inc
(bad)
inc
push
cmp
inc
scas
push
stos
dec
push
enter
dec
addr16
mov
push
xor
add
mov
out
andps
sbb
and
dec
sbb
push
enter
pop
or
enter
dec
and
stos
dec
nop
stos
nop
pop
ror
arpl
mov
sbb
push
arpl
xchg
enter
inc
test
lds
or
scas
mov
test
pop
adc
adc
pop
scas
rcl
sbb
and
pop
cdq
push
push
mov
dec
test
and
or
xchg
push
sub
adc
cmps
nop
shr
push
add
pop
pop
aaa
add
in
xchg
jne
add
pop
in
lock
xchg
inc
test
push
mov
xor
rcr
and
add
mov
neg
push
pop
sub
pop
adc
out
mov
push
dec
xor
inc
cmp
(bad)
loope
in
push
push
dec
les
jecxz
add
pop
hlt
push
test
aaa
xor
add
clc
aaa
push
inc
and
ret
mov
xchg
enter
mov
mov
scas
push
pop
push
rol
call
pop
mov
gs
pop
test
push
and
fild
jmp
sbb
xor
movs
enter
cmp
inc
xchg
inc
pop
je
pusha
cmp
add
add
or
add
repz
sub
shl
(bad)
cmps
push
repnz
sti
pop
pop
es
jge
push
pop
pop
inc
mov
in
inc
mov
fs
dec
nop
inc
push
cmp
inc
push
cmp
cmp
push
cmp
nop
and
adc
in
inc
adc
cmp
and
and
and
les
mov
enter
and
enter
adc
enter
or
add
inc
push
jb
int3
cmp
inc
push
cmp
(bad)
sar
test
cmp
nop
inc
mov
inc
push
xchg
nop
mov
and
cmp
cmp
sub
or
movs
arpl
cmp
add
je
inc
or
cvttps2pi
cmp
pusha
repz
mov
das
push
inc
pusha
iret
repz
cmp
cmp
call
fsubr
jns
sbb
adc
jno
out
push
or
lahf
test
out
sahf
cmps
push
clc
nop
hlt
xor
out
sahf
jo
fs
sar
int3
ror
repz
repz
imul
pop
mov
lahf
pushf
lods
cmp
(bad)
and
cmp
push
adc
mul
lock
push
push
or
retf
imul
add
enter
ficomp
out
aas
nop
mov
enter
int
les
out
sahf
out
lods
mov
repz
test
(bad)
movs
add
lahf
cmps
xor
push
cwde
add
or
popa
ds
adc
inc
cmp
jmp
fcom
push
fsub
int3
mov
sub
scas
test
pop
adc
aas
and
or
add
pop
jb
pop
pop
jbe
sub
adc
sub
sub
mov
add
add
in
push
jp
cmp
adc
lods
jmp
into
repz
mov
add
sub
pop
sbb
pop
push
and
je
sub
cld
pop
pop
aam
and
ss
pop
jo
out
mov
loopne
cld
adc
and
dec
fmul
and
aam
push
inc
push
cmp
enter
lods
daa
lea
adc
sbb
mov
xchg
shl
jbe
popa
js
clc
cmp
mov
daa
sbb
add
add
mov
test
test
mov
jl
pusha
inc
jnp
cmp
xor
aad
mov
xor
ds
push
fcmovnu
jnp
out
in
stc
add
adc
sbb
out
and
cmp
out
sahf
out
pusha
push
jle
out
sahf
mov
out
jns
not
(bad)
loop
in
inc
add
jns
neg
dec
mov
pop
and
add
cmc
adc
push
mov
aaa
pusha
xchg
cld
outs
cli
push
push
xchg
pop
mov
cmp
loope
dec
xchg
pop
jmp
fs
sbb
and
jo
jmp
enter
pop
xor
movs
test
push
test
fcom
lahf
adc
test
push
sbb
inc
or
(bad)
in
mov
xchg
pop
adc
mov
mov
xlat
out
stos
pop
add
rcl
adc
add
shr
add
push
adc
(bad)
pusha
xchg
arpl
xchg
mov
in
or
push
push
sbb
mov
mov
push
leave
outs
jns
inc
sahf
xchg
lea
jecxz
sbb
adc
jo
dec
pusha
mov
mov
and
adc
xchg
dec
aas
aam
inc
adc
arpl
xchg
mov
arpl
push
fsub
cld
dec
and
push
cdq
add
aam
sbb
aam
aam
fs
inc
aam
aam
fwait
dec
push
aam
clc
cmp
and
pusha
pop
aam
sub
or
aam
aam
add
adc
aam
fadd
pop
jnp
push
jns
pop
and
shl
push
aam
cmp
repz
fucomip
repz
cmp
repz
cs
push
sub
cmp
cmp
repz
push
pop
outs
iret
repz
js
mov
idiv
test
out
cmp
lods
mov
retf
popa
iret
in
sbb
sub
fsub
aaa
les
ss
arpl
leave
sbb
lods
or
enter
cwde
xor
cdq
or
add
mov
jl
or
push
add
sub
fs
shl
iret
repz
push
jle
xchg
pushf
cmp
repz
mov
(bad)
into
idiv
repz
in
cli
add
jl
sar
push
add
daa
jns
jae
in
gs
and
mov
nop
or
xor
jbe
lock
call
pop
sahf
hlt
cmp
xchg
sahf
adc
pushf
pusha
mov
push
cmp
dec
mov
nop
fwait
jl
pushf
rcl
and
je
jnp
add
mov
push
out
call
idiv
out
add
or
sbb
sub
out
sahf
out
dec
push
pop
push
jb
xchg
out
mov
cmp
out
sahf
push
popa
imul
jns
out
xchg
popf
cmps
mov
test
(bad)
inc
out
inc
pop
in
addr16
push
adc
or
rcl
and
daa
ror
or
adc
rcl
or
enter
shl
enter
rcl
enter
rcl
shl
xchg
or
rcl
rol
rcl
shl
clc
cmp
fs
stos
cmp
rcl
or
sbb
pusha
inc
cmp
jnp
and
les
pop
push
push
jb
imul
xchg
fwait
movs
out
sahf
out
mov
out
jns
in
clc
add
push
push
out
sahf
out
sub
dec
jns
neg
push
aaa
inc
dec
jae
sahf
out
pop
imul
xor
jbe
scas
js
lock
popf
push
push
add
sbb
adc
dec
fistp
ins
(bad)
push
loopne
imul
xor
cmc
dec
adc
iret
repz
and
xor
dec
push
cmp
repz
data16
test
cmp
repz
iret
jnp
les
scas
mov
ret
int
imul
jno
lock
outs
xor
in
inc
jb
(bad)
jne
lock
adc
sbb
iret
enter
jg
iret
int3
and
int3
xchg
enter
int3
sbb
enter
int3
jb
and
enter
int3
int3
frstor
xchg
int3
movs
clc
or
daa
sbb
cdq
add
int3
int3
mov
nop
inc
int3
int3
das
rcl
les
mov
inc
outs
dec
repz
pop
push
pop
pop
outs
outs
cmp
repz
or
repz
mov
repz
loopne
hlt
dec
mov
idiv
repz
sbb
xor
or
cmp
repz
xor
repz
add
jmp
addr16
pusha
jo
add
ds
jo
inc
enter
xchg
mov
cmp
movs
push
mov
xchg
imul
jb
enter
xchg
and
enter
enter
enter
fwait
movs
clc
cmp
and
enter
jb
enter
fdiv
fidiv
pop
test
cmps
stc
cmp
push
push
mov
out
sahf
rcr
in
cld
push
out
sahf
idiv
adc
sbb
cmp
dec
push
pusha
push
jnp
out
jle
xchg
mov
jns
mov
xchg
lahf
test
jo
xor
leave
mov
mov
jb
push
add
push
add
jp
fisub
cmp
fdiv
push
mov
mov
push
xchg
add
xor
sbb
js
mov
es
cmp
add
sbb
push
dec
push
daa
adc
jbe
cwde
(bad)
push
add
dec
push
inc
sub
sbb
pop
jb
pop
test
inc
inc
cmps
push
test
cmps
inc
les
fdivr
jae
in
test
or
sbb
sub
inc
cmp
repz
push
pop
push
repz
nop
call
mov
pushf
es
jmp
pop
les
inc
mov
shl
add
and
dec
inc
inc
leave
out
loopne
cmp
jo
stos
xor
jmp
cmp
jnp
jne
adc
sbb
iret
repz
push
pop
iretw
repz
jo
test
repz
mov
into
mov
out
sahf
out
loope
push
cmc
jne
in
jl
repnz
or
sbb
ja
dec
dec
jno
clc
ja
shl
pop
mov
int3
int3
hlt
js
jns
sar
or
push
sbb
out
cmp
pop
sahf
out
sahf
data16
test
jns
lods
mov
retf
lahf
out
loop
js
in
nop
addr16
pop
adc
es
scas
jns
push
mov
test
adc
pop
add
jnp
push
cs
sar
cmp
push
repz
repz
outs
js
mov
repz
xchg
mov
cmp
repz
fsub
lock
scas
adc
adc
sbb
and
das
imul
cmp
jl
cmps
nop
sbb
jl
cmps
and
sbb
push
and
mov
adc
push
inc
inc
jl
sahf
out
dec
pop
arpl
out
sahf
out
mov
jns
mov
retf
call
repnz
push
sahf
adc
push
xchg
pop
xor
sub
out
dec
jge
sub
jle
jge
jle
add
add
arpl
inc
shl
push
cmp
mov
daa
ret
sbb
xor
(bad)
adc
rcl
mov
push
sar
mov
sbb
pusha
ja
iret
sub
ja
pushf
mov
sbb
mov
adc
test
in
movs
dec
hlt
ja
lock
mov
rcl
mov
cwde
add
cwde
mov
adc
nop
inc
push
mov
xchg
sbb
and
cwde
fsub
nop
inc
cwde
xchg
mov
adc
cmp
inc
daa
jl
sbb
scas
rcl
mov
lods
sbb
in
nop
fsubr
and
lods
js
jb
sub
arpl
mov
xor
lock
test
adc
fist
xchg
xchg
xchg
fwait
or
enter
movs
scas
shl
ss
cmp
xchg
sbb
xchg
xchg
xchg
mov
pop
push
xchg
sbb
jb
fist
mov
(bad)
(bad)
jns
push
test
push
cdq
dec
push
sahf
out
sahf
pop
addr16
jmp
jns
mov
jl
out
aad
imul
repz
jg
adc
and
cmp
inc
dec
push
popa
repz
repz
in
mov
popf
cmps
mov
(bad)
out
ds
and
mov
iret
jnp
repz
dec
dec
adc
sbb
cmp
repz
cmp
repz
repz
mov
neg
not
add
push
adc
sahf
out
cmp
out
sahf
outs
jns
lea
mov
js
mov
pop
jno
and
outs
(bad)
jmp
ss
icebp
cs
jns
and
or
jns
lock
ins
outs
loope
daa
pop
inc
sub
pushf
cmp
push
test
add
push
mov
mov
pop
pop
std
mov
sub
inc
outs
push
fcmove
out
sbb
fistp
and
or
add
and
pusha
shl
add
test
pop
test
retf
add
out
inc
and
xor
dec
in
cmps
add
mov
(bad)
shl
in
fidiv
push
xchg
sub
xor
fadd
inc
cld
mov
sub
sbb
movs
add
add
cmp
sbb
sbb
outs
and
clc
jl
fcom
iret
daa
xchg
push
dec
xchg
or
and
xchg
sar
adc
sbb
push
scas
xor
mov
push
in
mov
loop
fdiv
push
xor
sub
cmp
(bad)
rcr
movs
test
cdq
push
lea
add
and
or
sub
or
and
cmps
and
cmc
pusha
mov
jecxz
(bad)
push
nop/reserved
int
mov
mov
inc
or
mov
jp
jg
adc
mov
jmp
cwde
and
aaa
movs
cmovns
add
jmp
adc
es
inc
(bad)
mov
dec
push
pop
gs
xchg
pushf
in
jb
je
ins
je
and
out
adc
ficomp
daa
cs
cwde
outs
enter
out
clc
out
add
adc
test
sub
pushf
pop
or
adc
mov
dec
and
test
dec
xchg
xchg
pop
adc
add
sbb
xchg
leave
cmp
mov
aam
arpl
adc
inc
sub
sbb
outs
add
push
or
mov
shr
mov
les
pop
cwde
and
xchg
arpl
mov
and
jo
sbb
push
and
mov
movs
sub
test
inc
cdq
fwait
js
mov
xchg
and
fbld
lea
or
sbb
add
xchg
stos
push
and
mov
shl
and
and
lods
scas
cmp
mov
and
fstp
and
adc
out
and
pop
or
xrelease
mov
mov
aam
jecxz
int
mov
icebp
daa
pop
lods
movs
pop
sub
mov
mov
add
lods
cmps
test
scas
sub
mov
outs
neg
mov
xor
mov
adc
fst
push
and
inc
mov
sbb
cmp
dec
das
call
(bad)
data16
sbb
xchg
adc
retf
dec
imul
sbb
mov
adc
rcr
adc
cmp
dec
xchg
dec
dec
and
push
sar
pop
and
sub
ja
outs
add
cmp
pusha
pop
popa
fs
mov
ja
xor
adc
cmp
aaa
shl
sbb
daa
add
movs
xchg
sbb
out
add
inc
movs
mov
(bad)
in
jl
or
push
push
dec
dec
pusha
sub
push
sub
mov
mov
inc
add
movs
mov
and
sbb
jmp
rol
pop
and
enter
cmp
add
and
adc
cwde
fs
sbb
xor
add
pop
xor
movs
or
or
in
lahf
and
inc
xchg
xchg
nop
push
inc
or
push
adc
sub
and
and
fidivr
movs
(bad)
xor
push
add
inc
mov
fs
push
fs
add
push
push
or
pop
and
xor
xor
xor
pop
xor
imul
inc
sub
cmp
mov
push
aaa
fmul
pop
add
ja
cld
dec
push
lea
add
into
push
outs
inc
lea
and
pusha
sub
add
cmp
mov
or
int3
add
add
dec
outs
pop
imul
mov
dec
add
ror
add
das
mov
ja
sbb
add
add
(bad)
jge
add
xchg
outs
xchg
cmc
pop
sbb
push
lock
add
pop
mov
sub
out
in
inc
dec
push
dec
int
rol
xor
fst
fld
adc
pop
sbb
fidivr
xor
hlt
jbe
pusha
push
(bad)
jg
or
and
and
iret
add
push
sbb
and
add
hlt
adc
and
jns
pop
jo
dec
paddq
add
add
adc
cwde
ja
inc
sbb
inc
and
push
xor
add
in
mov
test
movs
loop
pushf
pusha
pop
stc
pop
pusha
scas
dec
xchg
shl
adc
mov
cmp
push
dec
adc
and
xchg
cmp
add
sbb
inc
cmc
push
add
adc
iret
ret
or
in
or
xchg
xor
lods
mov
and
xchg
jo
jo
xor
nop
add
push
push
xchg
pop
dec
scas
mov
inc
dec
adc
call
in
pusha
movs
into
add
xor
or
mov
ja
dec
cmps
test
cmp
add
dec
or
add
mov
push
jo
add
out
inc
es
ficom
scas
repnz
jmp
pop
xor
add
jns
add
movs
xchg
or
dec
call
mov
addr16
inc
mov
inc
adc
sbb
and
add
sbb
push
sbb
lahf
aam
aad
stos
fs
fwait
out
test
jl
dec
and
nop
cmp
cmps
arpl
das
(bad)
in
jno
and
rol
test
and
push
adc
push
cmps
mov
das
and
push
cmp
inc
adc
(bad)
outs
adc
pop
xor
add
stc
xchg
rol
dec
xchg
mov
leave
add
and
test
and
add
cmps
push
test
mov
mov
cmc
dec
fist
adc
xor
push
xor
ss
sahf
xchg
ins
push
mov
push
sahf
push
jb
or
shl
inc
loop
push
cmp
mov
fsub
sbb
pop
xor
lahf
dec
jb
inc
and
sub
cdq
ss
or
mov
arpl
xchg
add
aaa
aad
mov
xchg
mov
or
mov
inc
dec
adc
push
xchg
sbb
mov
out
mov
and
jno
or
hlt
outs
jae
cmp
add
(bad)
loopne
push
inc
or
loopne
aas
or
inc
inc
dec
inc
add
mov
or
retf
sbb
jbe
adc
adc
adc
inc
out
push
out
xchg
mov
mov
loopne
add
adc
adc
or
adc
jns
mov
jbe
popf
xor
push
push
push
dec
adc
or
xchg
(bad)
dec
cs
(bad)
push
mov
rcl
adc
push
lahf
add
pop
leave
inc
movs
cmp
nop
mov
inc
pop
inc
repnz
and
lods
adc
inc
(bad)
and
dec
aam
add
test
bound
lock
xchg
nop
addr16
and
stos
out
cmp
push
xchg
aam
and
les
xor
mov
push
push
arpl
rcl
nop
mov
nop
cmps
shl
mov
xchg
fdivr
push
adc
add
mov
outs
add
mov
adc
cld
push
dec
adc
push
push
jb
adc
push
inc
test
or
loope
adc
add
inc
xor
aaa
add
cmc
mov
popa
inc
sahf
lods
les
jecxz
push
or
xor
outs
aas
sbb
popa
mov
sub
inc
and
mov
mov
add
adc
mov
in
push
add
mov
stos
or
loope
push
mov
add
dec
loopne
scas
push
xor
sti
in
in
or
pop
stos
pusha
or
pop
lahf
inc
nop
xchg
adc
sbb
adc
fnsave
rol
mov
pop
pop
fbstp
imul
lods
in
xchg
pop
mov
cmp
lods
hlt
xor
inc
jb
or
fimul
push
test
add
add
scas
loopne
nop
aas
jecxz
push
cmp
and
sbb
pop
out
pop
xchg
mov
or
enter
scas
leave
and
xor
outs
xchg
sub
push
inc
mov
add
addr16
sahf
adc
mov
add
js
cmp
sbb
sub
adc
ret
sub
adc
xlat
call
aaa
mov
inc
sbb
xor
push
add
fadd
push
fwait
cmp
cmps
mov
(bad)
mov
cwde
hlt
inc
mov
adc
add
ret
std
aad
lods
inc
push
pop
mov
les
inc
and
fstp
test
push
mov
sub
jae
pusha
mov
leave
or
xlat
call
shr
jg
adc
outs
(bad)
sbb
or
mov
or
sub
lock
mov
xchg
adc
and
sub
test
sub
pop
imul
mov
inc
push
sbb
(bad)
mov
or
and
add
cwde
jno
xchg
scas
pop
nop
pop
or
dec
sub
cmp
xor
test
inc
xor
mov
add
add
fs
int
or
das
repnz
sub
mov
sub
add
add
mov
mov
pop
lods
repz
test
add
add
ret
sub
iret
push
je
xchg
xor
jno
pop
mov
pop
mov
js
test
jb
adc
(bad)
inc
pop
test
jnp
xchg
cmp
jns
nop
xchg
inc
xor
movs
mov
cdq
add
or
cmp
pusha
in
mov
loope
inc
xchg
dec
fucomip
add
add
ret
inc
and
pop
(bad)
nop
shl
lock
lock
adc
icebp
xor
mov
ins
cmp
ficom
lock
add
ror
or
adc
add
pop
sbb
mov
test
lahf
bound
or
inc
adc
das
in
test
js
mov
add
jbe
xchg
inc
daa
call
and
out
and
or
adc
mov
adc
push
add
xchg
ret
pop
mov
inc
sbb
sub
sub
xor
add
and
mov
xor
in
or
cmp
adc
jecxz
sub
rol
dec
cmp
add
xchg
push
pop
pop
mov
dec
ins
icebp
adc
nop
stos
sar
fild
or
shr
gs
scas
xchg
or
adc
int3
nop
repnz
(bad)
out
mov
or
ins
rcl
mov
das
xor
or
int
or
(bad)
sahf
pop
and
stos
nop
aas
mov
adc
and
pop
rcl
xchg
daa
scas
adc
mov
jb
rol
inc
xlat
add
ja
add
nop
clc
sub
jb
das
pop
sbb
ins
jb
push
enter
inc
xchg
ret
xor
mov
je
das
cs
dec
out
test
rcr
push
mov
add
test
add
add
ret
add
fiadd
nop
push
and
out
rcl
add
xchg
js
ins
or
xchg
add
push
adc
sbb
mov
jnp
fadd
leave
inc
pop
out
je
adc
ror
daa
push
inc
push
je
pop
cs
shl
push
daa
pop
inc
cmp
jp
test
cmp
ss
pop
inc
fimul
daa
sbb
dec
add
sub
inc
lds
and
outs
and
fbstp
jmp
sub
(bad)
mov
(bad)
arpl
or
(bad)
loope
fdiv
gs
sub
les
cmp
adc
pop
clc
daa
push
and
or
sbb
test
add
pop
enter
add
popa
(bad)
js
xor
sub
adc
clc
out
push
pop
daa
cmp
cmp
jae
pop
jmp
inc
es
or
in
rcr
lea
sub
sub
in
fs
sub
rcl
jno
movs
add
push
mov
sbb
sub
cmp
dec
sub
jecxz
dec
xor
loopne
mov
pop
xor
dec
adc
test
add
(bad)
jbe
daa
pop
movs
sub
outs
test
mov
mov
nop
xchg
in
add
nop
outs
(bad)
leave
movs
hlt
inc
sub
and
ret
jmp
movs
(bad)
or
js
lods
daa
inc
cs
add
cmp
jns
push
lea
mov
pop
ds
mov
inc
jb
xchg
sub
fchs
lds
push
mov
aas
push
xchg
shl
(bad)
in
retf
mov
add
rol
or
retf
cs
and
or
mov
xor
std
xchg
inc
dec
cmp
add
ins
in
or
lock
lods
mov
outs
cs
pop
fdivr
dec
outs
adc
pushf
jmp
cs
mov
retf
inc
push
sbb
(bad)
sbb
rcr
inc
arpl
add
(bad)
sbb
adc
inc
mov
cmc
inc
mov
stos
les
shl
mov
pop
enter
xchg
mov
scas
sbb
and
jmp
inc
sub
test
inc
jne
push
fcom
add
addr16
xor
mov
scas
bound
mov
pusha
fdiv
int3
ror
mov
in
xor
add
adc
and
inc
dec
push
imul
in
jo
push
add
xchg
mov
adc
ins
scas
adc
inc
jmp
sub
adc
ret
push
jmp
scas
aaa
mov
ret
out
shl
popa
gs
jns
sar
jne
dec
and
clc
clc
mov
movs
fs
add
and
jo
push
push
and
into
cmc
xchg
jbe
inc
sub
and
nop
mov
iret
jg
or
xchg
adc
nop
and
xchg
dec
jo
mov
cmp
fadd
jne
xchg
sub
and
jns
push
and
xor
clc
fdiv
ja
adc
sub
bound
add
pop
(bad)
mov
inc
call
or
xchg
and
mov
add
sub
lds
shr
pop
and
rcr
and
and
jmp
add
add
add
jne
nop
pop
jp
in
or
push
aaa
or
out
cmc
nop
pop
inc
sub
dec
fadd
movs
adc
test
lahf
jp
mov
sar
sbb
cmp
aaa
xor
jmp
rdpmc
fimul
xor
mov
and
scas
fnstenv
inc
icebp
xchg
out
push
mov
bt
jae
arpl
jb
loop
test
jae
test
clc
ja
dec
jo
jne
out
cwde
(bad)
js
mov
test
test
push
inc
mov
pop
push
pop
loop
mov
jae
sbb
imul
js
inc
or
pop
adc
es
mov
js
push
jmp
dec
out
inc
dec
aam
push
inc
clc
loope
add
push
and
aad
(bad)
push
mov
adc
inc
cs
mov
adc
cmp
cwde
daa
sar
push
sbb
es
(bad)
aam
xlat
movs
out
jmp
xor
(bad)
iret
mov
mov
xor
aas
xchg
add
pop
js
sbb
cmp
jne
loopne
test
(bad)
loope
in
dec
mov
cs
les
xchg
xor
sahf
out
sub
inc
add
jg
movs
dec
jb
fcom
mov
retf
and
and
mov
fprem
std
or
xchg
add
fs
inc
dec
fwait
pop
lods
xlat
or
mov
mov
push
mov
fcmovnbe
and
pop
rol
outs
push
inc
sub
mov
add
sub
aas
fld
push
and
imul
adc
daa
aas
cmp
scas
xor
and
adc
sbb
jmp
in
add
push
or
lds
inc
in
and
pop
xchg
add
dec
or
jns
push
or
jle
adc
(bad)
jle
push
or
mov
sbb
or
dec
and
rol
add
retf
xor
inc
push
add
rcr
ror
iret
es
rcl
xor
push
push
dec
stos
in
push
adc
jmp
gs
sub
pop
fistp
mov
inc
sbb
cld
push
sbb
nop
inc
xchg
push
push
imul
cld
inc
enter
push
mov
hlt
out
mov
loopne
in
and
idiv
call
ss
rcr
fsub
xchg
fmul
ror
mov
(bad)
pop
loope
stc
push
mov
jns
test
loope
nop
ficomp
and
fmul
xchg
mov
imul
aas
(bad)
in
push
das
mov
dec
mov
or
mov
fstp
mov
sub
sbb
out
mov
dec
pop
dec
pop
and
(bad)
and
pop
xor
push
lahf
cmp
cmp
add
mov
inc
shl
push
cmp
add
push
or
outs
cdq
jo
nop
mov
jbe
mov
add
(bad)
mov
sub
ins
popa
imul
add
add
push
popa
js
and
call
add
mov
push
or
jbe
fsubr
add
lods
mov
add
push
push
and
dec
adc
or
mov
adc
push
lahf
or
or
in
scas
iret
pop
and
adc
mov
add
inc
bound
in
sbb
add
sub
or
add
scas
or
xor
adc
pop
add
push
adc
and
inc
bnd
adc
sahf
inc
inc
push
and
xlat
pop
sub
pop
jecxz
add
mul
push
jo
adc
add
push
jl
or
outs
neg
jo
push
nop
lahf
xor
cmps
or
xor
dec
mov
mov
cmp
mov
loop
fild
lods
or
dec
rcl
lds
sbb
or
push
jo
lds
fild
jmp
int3
push
fiadd
inc
push
add
pop
enter
sub
pop
or
js
push
test
push
mov
int3
xchg
or
mov
outs
ins
jae
sub
fwait
aaa
inc
hlt
fild
loopne
loopne
add
or
(bad)
and
xor
call
or
jmp
or
xchg
jl
xchg
inc
adc
je
sbb
stos
dec
loope
push
push
and
add
les
xor
enter
(bad)
sub
fild
xor
xor
sahf
dec
add
cmc
nop
sub
mov
xor
ins
pop
add
jp
hlt
push
and
fcomp
scas
xor
daa
inc
pushf
add
mov
popf
mov
popa
je
test
inc
inc
xlat
push
push
cmp
add
push
jo
fwait
xor
sbb
push
and
sub
adc
mov
add
pop
in
jae
ds
fbstp
add
and
xchg
or
adc
jns
loop
mov
add
or
adc
stos
js
imul
sub
mov
lahf
lds
outs
mov
jecxz
xchg
nop
pop
xchg
popa
adc
pop
and
xor
push
xchg
cmps
pop
sar
popa
xor
or
enter
(bad)
mov
xchg
adc
in
push
mov
inc
and
sbb
add
jg
sbb
sbb
jb
nop
fild
mov
add
and
jnp
pop
jmp
inc
ins
push
sbb
ret
mov
adc
cmp
or
out
adc
repnz
shl
clc
jo
test
push
clc
in
not
or
iret
pop
and
adc
jg
rcl
aaa
or
adc
and
fiadd
dec
push
je
fbld
cmps
inc
dec
out
sbb
ja
add
push
mov
not
pop
mov
push
retf
add
lds
fwait
xchg
rcr
xlat
call
shr
dec
push
sub
push
mov
add
fld
into
mov
sub
ins
jnp
mov
adc
adc
popa
pop
add
lock
das
sub
out
fnstcw
inc
je
sbb
dec
xchg
sbb
cmp
jmp
push
adc
lods
cmp
add
pop
out
sbb
sbb
or
inc
xchg
loopne
push
adc
fisub
cmp
pop
nop
inc
jmp
jl
das
outs
push
leave
add
sub
shl
inc
pop
out
arpl
pop
sbb
add
pop
inc
or
stos
out
push
cld
movs
add
sub
gs
and
and
ins
mov
or
jo
out
or
pop
enter
jmp
outs
lock
adc
fild
in
or
push
inc
aam
fistp
jmp
or
mov
sbb
sbb
nop
mov
push
lods
push
aam
mov
or
mov
les
ja
mov
xchg
pop
sub
and
je
dec
nop
je
jmp
xchg
push
mov
sub
jb
jl
push
jbe
sbb
ds
frstor
aam
test
sar
ins
mov
arpl
imul
adc
inc
mov
out
adc
imul
add
mov
sbb
stos
hlt
(bad)
out
call
hlt
out
inc
jl
inc
dec
loop
lock
pop
ret
pop
aaa
or
jae
daa
push
out
iret
jmp
xor
jnp
push
imul
add
ja
push
fsubr
cmp
jns
lahf
(bad)
out
and
pop
test
pop
add
jp
lock
or
into
or
pop
sub
aam
das
aad
int
in
rol
adc
shr
ret
push
jl
push
(bad)
arpl
mov
or
ret
hlt
add
lock
nop
pop
fsubr
xor
cmp
push
icebp
mov
xchg
icebp
xor
in
and
push
cmp
cmp
and
xor
call
or
mov
and
push
in
xlat
into
repnz
daa
inc
adc
shl
sbb
pop
stc
xor
nop
xlat
pop
sub
push
jmp
mov
xchg
enter
mov
out
and
dec
les
sub
pop
and
adc
nop
push
hlt
scas
pop
jnp
call
movs
pop
add
stos
add
and
ror
add
sub
pop
push
push
lds
sub
das
pop
pop
sub
pop
jnp
sbb
adc
mov
mov
pop
jg
add
add
sbb
adc
shl
addr16
or
nop
or
invd
jb
and
push
or
push
sub
sub
mov
shr
cmps
sbb
and
inc
xor
stos
mov
popa
and
dec
and
sbb
clc
mov
dec
idiv
bound
inc
push
push
jmp
rcl
test
js
je
push
and
and
stos
dec
mov
jnp
xchg
(bad)
test
and
rcr
test
pop
ins
bound
adc
ja
pop
sbb
mov
add
jg
sbb
pusha
nop
pop
cmps
into
mov
xor
movs
sub
cld
pop
add
nop
mov
loope
mov
push
add
stc
cmp
jb
xchg
stc
mov
mov
and
jmp
or
pop
sub
inc
psubb
and
xlat
nop
pop
cli
add
jg
push
cwde
cli
(bad)
sbb
enter
adc
push
inc
add
out
pop
and
xor
outs
scas
adc
sar
push
es
push
pushf
dec
jb
or
ja
cli
jge
out
inc
movs
pop
add
add
push
daa
ret
es
pop
pop
fdiv
es
sub
or
dec
movs
xor
and
adc
adc
retf
nop
ins
cld
(bad)
hlt
movs
mov
push
movs
cld
(bad)
pusha
jae
in
cld
push
dec
or
push
fild
adc
mov
(bad)
es
pusha
pop
fild
and
add
popf
imul
daa
inc
and
mov
and
sub
mov
add
push
jno
add
cmp
jb
outs
sar
mov
and
jne
inc
sbb
or
out
pop
push
add
and
shl
mov
add
cwde
jmp
and
rcl
loopne
inc
mov
(bad)
call
dec
inc
repnz
repnz
inc
xor
daa
daa
pushf
inc
mov
iret
pop
and
adc
jle
(bad)
or
int
pusha
out
or
call
add
add
xor
fsub
add
addr16
and
aad
and
inc
jmp
imul
je
fdiv
data16
jb
jnp
mov
pop
push
add
push
int3
or
push
jo
xchg
lahf
js
aam
and
arpl
outs
push
inc
sub
shl
xlat
pop
sub
fcom
rcl
in
dec
rcl
and
jg
push
pop
pop
or
add
out
adc
sbb
sub
sub
xor
add
pop
and
cmps
in
add
sub
popa
adc
pop
js
jns
push
cmps
push
in
xchg
adc
ins
popa
call
push
jg
add
(bad)
(bad)
jl
and
rcl
push
cld
add
add
sbb
and
and
sbb
loop
outs
inc
mov
xchg
sub
jle
add
push
enter
scas
pop
add
cdq
or
fwait
sub
sub
push
adc
(bad)
(bad)
xor
lods
pop
and
sub
ret
adc
inc
in
bound
test
xchg
lock
fwait
cld
push
sub
mov
ins
pop
push
lahf
call
cmp
xor
cdq
jge
pusha
mov
nop
fild
and
push
in
or
inc
test
push
dec
movs
fwait
jbe
mov
add
mov
mov
icebp
push
sub
nop
rol
int3
adc
or
sub
aam
sub
pop
pop
ror
pusha
pop
mov
and
xor
inc
add
lods
and
mov
or
sub
adc
sub
call
push
call
and
sub
pop
retf
pmulhuw
jmp
out
xor
lods
pop
sub
mov
pop
ins
adc
adc
adc
jle
sbb
or
push
int3
or
mov
cwde
loop
cmp
sbb
adc
push
push
fist
pop
mov
or
lock
inc
or
or
mov
add
daa
xchg
push
hlt
or
or
and
in
cmp
adc
sbb
pop
xor
inc
push
aam
push
loope
pop
enter
mov
or
cmps
inc
dec
fimul
cs
and
adc
pop
sub
xor
call
out
lahf
shl
in
cs
add
push
sbb
lahf
leave
sub
fadd
add
mov
nop
out
sub
push
sub
in
adc
mov
(bad)
jl
push
jo
inc
das
or
out
pop
and
or
in
cdq
xlat
imul
emms
and
mov
cmp
jo
mov
push
and
aas
mov
add
adc
dec
call
mov
jmp
inc
or
outs
iret
pop
and
adc
cwde
mov
rcl
add
push
lock
repnz
lds
cmps
cdq
(bad)
mov
fild
and
push
mov
push
sub
lahf
lea
das
lock
push
cmp
lock
inc
jmp
adc
lds
dec
cs
and
mov
stos
je
mov
outs
or
sbb
mov
shr
and
mov
lds
jo
adc
bound
and
or
jnp
adc
mov
push
pop
dec
pmulhuw
(bad)
clc
adc
adc
adc
adc
or
xor
or
loopne
test
cmps
push
xor
nop
out
pop
and
xor
dec
add
push
data16
add
xchg
scas
popa
adc
mov
xor
jne
xor
inc
xor
retf
cli
(bad)
cmp
pop
loope
add
pop
add
xchg
mov
lods
or
mov
pop
fisttp
fwait
and
inc
frstor
add
and
fisub
popf
jnp
or
sbb
cld
xor
push
data16
mov
xchg
scas
push
xchg
inc
cmps
add
adc
leave
mov
aad
gs
fcomi
push
adc
push
(bad)
(bad)
lock
movs
popf
test
add
mov
xor
or
(bad)
test
lock
sub
and
pop
sub
sbb
repz
sub
mov
mov
movs
icebp
scas
adc
out
rol
mov
xor
sub
sbb
add
in
push
or
adc
sub
jo
add
or
pop
mov
sbb
sbb
xchg
(bad)
and
ret
sub
inc
adc
test
nop
lds
sub
fsubr
or
xchg
fwait
loopne
mov
mov
or
unpcklps
in
xor
sbb
in
xchg
or
or
sub
sbb
cmps
push
enter
jecxz
mov
enter
cmps
sub
sbb
or
in
mov
inc
or
cmps
push
pusha
or
test
nop
inc
shl
push
lahf
ins
jmp
adc
push
mov
xlat
in
(bad)
test
mov
enter
pop
sub
je
xchg
add
lock
and
add
hlt
mov
or
inc
enter
es
rol
and
push
adc
dec
test
bnd
or
or
and
pushf
and
dec
add
inc
jo
sti
(bad)
fs
loopne
add
mov
and
and
xchg
mov
adc
lds
push
jb
nop
(bad)
sub
add
sub
aaa
enter
sbb
add
nop
inc
adc
sbb
and
jns
inc
or
xor
and
mov
pop
dec
xor
inc
lods
add
sub
sub
pop
push
loope
sub
scas
add
call
enter
add
pop
add
pusha
adc
mov
hlt
test
adc
xor
outs
xor
pop
and
add
xor
dec
inc
icebp
test
fild
or
js
xchg
mov
xor
mov
add
and
out
pop
or
aas
xchg
cmp
mov
arpl
add
xor
and
xor
leave
mov
call
xor
dec
test
iret
mov
sub
movs
icebp
in
push
push
ins
nop
add
nop
pop
push
sbb
in
or
inc
mov
retf
xchg
enter
cmp
add
xor
leave
and
pop
inc
push
leave
inc
add
or
cmp
sub
or
dec
push
jns
or
sbb
shr
lock
push
jb
imul
mov
adc
inc
int3
dec
push
dec
inc
aaa
fs
jb
xchg
ins
js
jb
retf
and
std
cmp
sub
pop
hlt
inc
cmp
push
or
test
clc
js
inc
push
and
sbb
pushf
fbstp
push
add
and
pusha
pop
imul
inc
sub
cmp
clc
and
and
cmp
jecxz
mov
inc
pusha
inc
sub
push
push
add
jmp
imul
adc
clc
in
mov
push
and
out
sub
sub
test
mov
in
out
jno
inc
fnstsw
out
sub
inc
mov
push
inc
sub
or
loopne
sub
cmp
imul
and
sbb
jmp
xchg
cmp
cwde
jmp
lods
in
jmp
movs
imul
imul
push
lock
add
out
xchg
add
sbb
inc
jmp
fnsave
inc
out
in
cmp
jmp
lock
hlt
add
les
sar
mov
jmp
sub
xchg
sub
dec
shr
cmp
repz
ds
add
stos
push
dec
je
add
in
neg
loopne
test
jmp
add
mul
adc
sbb
loop
clc
cmp
enter
clc
pusha
imul
fadd
or
jmp
je
pop
cmp
mov
pop
sti
mov
adc
sub
lock
sub
clc
xlat
std
push
sbb
mov
aad
dec
push
and
(bad)
lock
jmp
fsubr
mov
push
sub
arpl
xchg
sbb
mov
add
pop
sub
fsubr
pmulhuw
clc
pop
add
cmp
add
add
ins
sub
lsl
nop
outs
pop
leave
movs
add
ins
and
imul
push
sete
ss
dec
cmp
mov
mov
sub
enter
dec
push
push
sub
fnsave
pop
iret
add
add
or
outs
pop
leave
xchg
or
jne
dec
push
mov
nop
ds
pop
add
or
psubsw
seto
movs
psllw
jb
fldenv
adc
adc
movs
fist
imul
or
inc
ds
fcom
sbb
push
push
outs
pop
or
sbb
mov
cmp
add
pop
cmp
xor
sbb
inc
mul
add
adc
sub
push
sbb
add
inc
sbb
or
mov
(bad)
push
jne
ror
push
jae
sbb
pop
xor
imul
and
sbb
jbe
push
jae
push
aas
(bad)
sbb
pusha
sub
aas
fimul
pop
es
xchg
mov
dec
ins
ja
inc
mov
(bad)
ss
retf
jg
mov
ins
push
out
dec
and
arpl
dec
sub
fisubr
mov
lahf
in
mov
adc
inc
or
push
xchg
pop
cmp
or
push
inc
xchg
cmp
jne
mov
scas
call
faddp
dec
enter
xchg
adc
mov
mov
aaa
inc
cs
movs
loopne
mov
dec
outs
add
mov
outs
pop
push
shl
sahf
fs
jb
mov
mov
jo
inc
push
push
ja
outs
dec
enter
pop
(bad)
jo
shl
jecxz
rcl
pop
pop
data16
cmp
out
push
je
scas
sub
push
xor
sub
cmp
cwde
addr16
inc
add
mov
in
mov
out
bound
mov
push
out
push
dec
or
cwde
out
inc
daa
pop
jno
popa
imul
outs
daa
jns
fsubr
jge
jb
xchg
pop
ins
xchg
fdivr
mov
jmp
pop
mov
xor
ins
or
call
(bad)
popa
scas
jb
shr
push
push
inc
aaa
sbb
mov
test
iret
adc
push
arpl
cs
jg
sahf
and
inc
cmp
iret
dec
inc
xor
je
jns
pop
and
add
inc
imul
icebp
fiadd
push
add
add
xor
mov
inc
mov
dec
push
sbb
dec
xor
and
jae
jmp
jno
dec
iret
outs
mov
cmp
sbb
inc
shl
pop
inc
inc
or
(bad)
pop
daa
pop
jb
or
popa
aam
pop
push
or
mov
and
ret
out
out
and
loopne
and
push
or
adc
jg
cmps
mov
pop
sar
bound
jae
inc
inc
pusha
sub
scas
push
fcomp
aas
inc
aas
add
mov
adc
sub
sub
ins
pop
outs
das
push
div
ficom
xchg
xlat
aaa
sbb
ja
dec
mov
scas
inc
sbb
ret
adc
lock
sub
xchg
push
add
add
add
mov
sub
ins
pop
and
add
dec
outs
jae
push
mov
dec
xchg
clc
(bad)
iret
aas
add
outs
je
jae
pop
shr
daa
xchg
cmp
inc
mov
and
dec
inc
add
movs
mov
imul
sub
movs
outs
nop
and
nop
test
test
and
and
sbb
inc
mov
mov
add
mov
xlat
sub
ja
dec
cld
jae
fnstsw
cmp
shl
cmps
mov
cmp
add
gs
xor
dec
pusha
nop
push
ror
and
push
jno
pop
mul
jl
cmps
pop
and
and
adc
add
(bad)
and
add
cs
loopne
add
adc
pop
or
pop
push
lea
or
pusha
mov
sub
jp
loopne
add
pop
nop
or
not
fcomp
add
push
xor
sbb
add
mov
data16
add
out
fucom
cmp
fsub
cmps
push
dec
push
movs
aad
pop
cmp
fsub
add
and
push
add
or
cmps
adc
imul
nop
int
jo
push
or
adc
and
inc
rol
and
mov
inc
push
xor
or
and
movs
push
jo
cs
mov
push
jne
xor
mov
cdq
push
sti
test
add
pop
out
mov
jmp
jns
add
mov
test
mov
call
(bad)
or
and
in
lds
js
or
or
cmps
adc
or
leave
push
push
ja
sbb
dec
ja
mov
push
push
lea
sahf
and
add
inc
jl
sub
sbb
inc
aaa
jo
das
add
data16
je
into
xchg
push
add
xchg
or
mov
popa
nop
call
mov
dec
xor
cmp
xor
sbb
inc
ds
push
lahf
pusha
cmps
in
sbb
dec
mov
and
dec
fwait
std
push
jmp
push
sbb
xor
aad
fidivr
enter
jne
xor
inc
pop
or
sub
mov
xor
add
lahf
addr16
inc
dec
aaa
xor
ss
or
push
dec
mov
mov
mov
shl
add
mov
out
push
push
lock
adc
cmp
adc
push
sti
sub
push
mov
(bad)
mov
sbb
push
mov
sbb
or
xor
mov
sbb
push
xlat
sbb
ret
outs
xor
push
daa
push
daa
pop
cmp
add
fsub
fdivp
mov
or
imul
inc
xor
jnp
push
add
jo
push
mov
test
sub
xor
sub
mov
dec
push
ror
(bad)
pop
pusha
xchg
or
xlat
or
xchg
xor
xchg
mov
xor
pusha
xchg
call
lea
inc
mov
xor
rcl
cs
or
out
add
jb
push
inc
jb
or
test
add
das
add
dec
pop
lods
lods
inc
xchg
test
bound
mov
push
sbb
add
sub
pop
xchg
sub
aam
adc
or
sub
mov
inc
movlps
cmp
dec
in
ins
lods
dec
or
fstp
retf
out
sub
pop
xchg
add
rol
xchg
loopne
and
sahf
inc
sbb
xlat
sar
lea
push
shr
jne
movs
add
sbb
(bad)
ds
and
sub
ror
xor
sub
xchg
scas
sub
cmp
push
adc
ret
pop
mov
outs
jl
fstp
sbb
and
fcom
cmp
ss
div
push
aam
lods
leave
lods
pop
ret
ror
and
int
lock
pop
and
test
jo
into
cmp
add
and
inc
add
pop
ja
loop
in
jl
arpl
popf
lods
nop
gs
xor
sbb
push
fld
mov
sbb
fsubr
add
add
loopne
data16
loopne
push
in
push
ret
in
fs
movs
pusha
mov
push
and
jge
add
jp
ins
jmp
pop
push
ss
add
jne
imul
lock
movs
add
adc
inc
and
pop
cwde
mov
fisub
or
data16
jne
fnop
sub
jb
cmp
xchg
arpl
or
mov
xor
dec
jb
or
rol
xor
(bad)
call
or
and
loope
push
imul
push
xchg
fist
div
pusha
ss
xor
mov
sub
out
int3
in
loop
xor
dec
cmc
push
sub
rol
repnz
inc
fstp
adc
or
jnp
pop
ror
dec
pop
sub
movs
imul
cs
les
push
xchg
popa
pop
fld
das
sub
shl
imul
loopne
inc
and
sub
outs
pop
nop
add
xor
shld
popw
push
retf
mov
nop
push
cmp
dec
dec
leave
rcl
int
outs
add
mov
mov
jnp
adc
xor
aad
xlat
sub
inc
sub
fistp
pop
sbb
loope
and
adc
push
push
and
or
rol
sub
call
sbb
xor
hlt
mov
xor
push
inc
adc
or
inc
mov
mov
inc
sbb
xor
dec
pushf
(bad)
shl
aaa
push
fld
sbb
stos
and
and
mov
pop
mov
lea
push
sub
cmp
xor
nop
xchg
pop
dec
dec
pop
mov
push
rcl
(bad)
mov
nop
sbb
or
xchg
sub
cmp
jmp
das
sbb
xchg
into
daa
or
dec
dec
fbstp
shr
out
add
xchg
dec
and
bound
or
call
xchg
pop
dec
or
and
sub
xchg
movs
jo
call
add
or
mov
push
daa
sbb
pop
and
rol
enter
loop
idiv
push
pushf
sub
cmps
sub
jne
and
or
aam
push
sub
adc
cmp
mov
xlat
sub
jmp
mov
xchg
pusha
aaa
sbb
pop
sbb
push
mov
and
inc
sbb
lea
adc
clc
das
mov
and
aam
mov
xor
sbb
push
push
add
out
mov
mov
dec
push
ja
and
xchg
inc
xchg
fs
test
cmp
loop
aad
dec
popf
add
sbb
xchg
inc
and
add
or
popa
sti
and
mov
shl
leave
adc
sbb
fist
add
sub
cmps
sub
mov
sub
or
push
jb
xchg
mov
and
lods
push
(bad)
or
xchg
sub
mov
loope
outs
sbb
dec
add
ret
sub
sub
jmp
or
jo
cs
adc
pop
mov
xchg
int3
mov
xor
or
or
in
nop
add
call
sar
(bad)
adc
jmp
lods
lock
push
int3
and
push
fcmovnbe
lods
mov
pop
shl
dec
ror
clc
cmp
push
bound
(bad)
and
daa
or
lock
xor
int
sub
and
test
dec
push
dec
jo
mov
push
aaa
imul
mov
(bad)
ror
sbb
and
xchg
add
cmp
stos
xor
in
ss
pusha
mov
push
dec
repz
fsubr
in
add
rcl
(bad)
mov
and
mov
ret
fwait
(bad)
and
sub
sub
sbb
or
clc
mov
sbb
add
fistp
bound
add
ror
cmc
call
xor
rol
fnsave
push
out
dec
jno
xchg
or
xor
add
cmp
jb
aam
pop
ins
adc
imul
xor
scas
out
fbld
cwde
and
inc
scas
mov
push
pushf
and
or
dec
sub
pop
aas
push
stc
push
popa
mov
lea
inc
or
cs
(bad)
add
ret
mov
xlat
jmp
aaa
outs
pop
jnp
movs
in
sbb
push
dec
mov
lods
pop
ss
sub
sbb
pop
ror
sbb
test
sub
fidiv
mov
dec
push
mov
in
pop
fmul
inc
rol
mov
mov
and
or
test
adc
fs
fst
or
pop
loopne
stos
xor
das
xlat
or
push
mov
and
xor
shr
or
arpl
or
push
mov
cmps
hlt
sbb
jge
fldenv
fbstp
cmp
icebp
outs
pop
xchg
jecxz
push
jecxz
jmp
pop
in
hlt
cmc
loopne
push
outs
imul
jo
jge
inc
dec
push
repz
jge
mov
xor
nop
mov
fcomp
dec
lahf
add
push
and
pop
xor
fsubr
ja
xor
ret
jns
pop
jne
jae
xor
push
inc
rcl
jb
leave
adc
cdq
adc
dec
mov
enter
clc
inc
mov
jmp
sbb
xor
outs
sub
aas
cmps
gs
or
ror
adc
mov
and
aaa
pop
lods
push
xchg
and
daa
mov
adc
and
push
mov
or
outs
pop
or
jg
cwde
push
test
popa
pop
pusha
outs
cdq
dec
stos
ret
jo
out
mov
xchg
push
(bad)
enter
and
dec
leave
mov
jg
les
test
push
sbb
adc
add
mov
xor
daa
adc
cmps
and
cmp
pop
lahf
shl
push
xchg
(bad)
in
cmp
inc
push
lea
aad
xchg
fild
je
sub
pop
dec
cmps
sti
les
dec
shr
mov
mov
ss
inc
mov
jbe
xor
jmp
or
out
or
and
sbb
lea
int3
adc
mov
aaa
cs
je
movs
pop
lds
adc
add
push
mov
jo
push
lock
mov
jge
sub
pop
pop
ins
push
adc
add
and
push
jo
or
ins
mov
sub
push
sbb
call
push
test
imul
not
sbb
mov
pop
sub
add
mov
push
cwde
(bad)
push
je
fisttp
adc
or
and
int3
int3
sbb
mov
enter
pop
jb
(bad)
les
rcl
inc
cmps
fs
mov
sub
mov
xchg
or
mov
shl
mov
push
lods
dec
scas
in
lods
clc
test
scas
in
test
jle
daa
push
jb
movs
and
mov
jb
pushf
dec
cwde
daa
push
jb
cwde
pop
xchg
daa
push
jb
xchg
js
daa
push
jb
nop
test
xchg
mov
push
jb
mov
and
and
or
and
arpl
js
xchg
pushf
dec
and
je
xchg
adc
je
jg
in
add
cdq
inc
cmps
ins
push
push
push
pop
dec
and
movs
bound
push
repnz
sub
pop
xor
and
push
popf
inc
cmps
fs
push
jo
repnz
sub
js
xchg
pushf
sbb
dec
dec
dec
dec
push
jns
adc
inc
les
add
cmp
mov
push
and
and
push
jnp
ror
aaa
sbb
fadd
arpl
adc
les
ins
stc
and
enter
and
enter
or
xor
inc
add
mov
add
cmp
adc
push
pop
sub
outs
sub
cmp
inc
dec
sahf
inc
xor
or
and
cwde
outs
push
frstor
rol
adc
mov
ss
mov
fcomp
xlat
mov
add
ret
pop
xchg
adc
push
fild
add
retf
or
add
pop
mov
aad
ffreep
ins
sbb
pop
sub
adc
mov
pusha
(bad)
fadd
or
rol
es
adc
push
jo
sub
ror
mov
adc
popa
add
inc
stos
adc
pop
or
imul
loop
mov
aas
les
sub
jae
mov
test
push
cs
ror
outs
jp
sbb
sub
inc
scas
das
mov
pop
outs
or
outs
bound
jae
mov
ins
dec
adc
jecxz
das
push
out
mov
out
push
mov
and
dec
cmps
(bad)
mov
and
xor
les
and
lea
push
mov
push
and
inc
sub
inc
sub
inc
mov
xchg
out
clc
xchg
mov
ja
push
ds
push
mov
mov
push
mov
popf
pop
pop
push
mov
mov
add
jbe
push
adc
dec
mov
ret
test
sbb
mov
xor
int3
aas
int3
test
pop
add
stc
cmp
ret
push
adc
enter
sahf
cmps
adc
adc
fdivr
iret
push
call
fstp
ror
js
push
dec
add
sti
aaa
enter
cmp
ja
sub
adc
in
sub
add
xchg
mov
mov
inc
push
stc
xchg
sbb
arpl
jl
mov
cs
xchg
aam
rol
fimul
test
or
xchg
icebp
xor
sbb
pop
pop
(bad)
fadd
push
sbb
jmp
lds
loop
xor
sti
neg
dec
xor
ror
jnp
sar
mov
xor
inc
push
outs
(bad)
mov
and
dec
movs
mov
enter
dec
aam
lock
mov
js
push
mov
outs
adc
jbe
inc
or
xchg
xchg
and
inc
adc
or
pop
pop
push
xchg
dec
lock
outs
xchg
pop
sub
ss
jo
jns
mov
mov
enter
ins
retf
adc
and
in
not
add
push
or
add
and
call
not
enter
add
inc
rol
push
pusha
outs
dec
fwait
ret
out
mov
test
mov
sub
mov
aaa
cdq
test
adc
addr16
inc
imul
das
emms
outs
pop
xchg
(bad)
int3
xchg
pop
das
fs
adc
ins
push
mov
inc
mov
dec
pop
je
ds
ds
xchg
imul
das
pushf
adc
cs
or
out
add
ins
dec
or
xor
ret
ret
mov
add
stc
and
pop
add
cmps
cmc
push
adc
mov
jge
adc
into
add
lock
adc
xchg
xchg
iret
fiadd
xor
push
sub
data16
loopne
inc
sub
mov
ror
je
mov
leave
push
jne
mov
(bad)
or
dec
aam
push
push
jmp
pop
push
dec
or
mov
push
in
push
cmps
jo
scas
lock
cmps
lea
xor
fdivr
or
fmul
mov
rcr
pop
setg
leave
ins
pusha
and
add
push
xchg
pusha
arpl
or
cmps
push
mov
mov
cmps
out
or
mov
cdq
int3
enter
adc
lods
cdq
inc
cmps
loopne
jae
enter
or
jmp
ins
mov
xchg
xchg
xchg
push
or
(bad)
and
adc
ins
ja
mov
lds
popa
jno
out
mov
pop
repnz
fadd
les
in
add
pop
adc
or
aam
and
dec
mov
inc
lds
add
xor
test
push
retf
or
push
add
push
inc
add
push
add
lods
call
fild
into
add
or
lods
add
in
push
daa
(bad)
mov
fcomp
and
mov
fs
scas
outs
loopne
loopne
mov
add
lahf
js
push
mov
mov
jle
call
push
dec
call
mov
lahf
fsub
lock
dec
sbb
dec
push
es
xchg
aam
pop
xchg
cdq
mov
ja
pop
adc
imul
fist
out
mov
pusha
dec
mov
xchg
add
add
or
call
xor
dec
call
inc
push
add
ins
or
adc
les
rol
xor
ins
dec
in
nop
xchg
inc
add
add
in
mov
lods
inc
fwait
mov
jmp
enter
xchg
sub
in
mov
or
enter
inc
push
add
push
add
inc
or
out
fiadd
push
push
gs
ins
inc
add
fld
and
pop
imul
xor
mov
push
xor
int
sbb
pop
or
inc
and
ins
inc
pusha
or
sbb
xchg
or
sbb
repnz
inc
add
dec
push
cdq
clc
test
or
les
and
aad
dec
dec
mov
inc
add
inc
test
inc
sub
cmp
cmp
cmc
pushf
adc
adc
mov
leave
xor
daa
push
sbb
in
mov
int
dec
mov
pop
ja
or
mov
in
or
les
cmp
sbb
enter
or
push
push
rcr
paddusw
outs
jl
push
jnp
imul
jmp
sbb
push
pop
inc
jo
enter
movs
addr16
xor
add
pop
aam
add
dec
aas
add
push
enter
or
or
or
sbb
push
push
sbb
dec
popa
sbb
adc
or
fistp
adc
or
sbb
adc
sbb
ss
sbb
add
rol
cmp
imul
pop
hlt
and
(bad)
mov
out
loop
fiadd
xor
in
inc
or
or
or
xchg
or
xor
cmc
sub
popa
dec
iret
jecxz
fist
pop
sub
movs
jle
aas
loopne
add
loope
lea
and
outs
(bad)
mov
popa
and
dec
test
scas
ins
dec
lea
pushf
xchg
mov
push
test
add
and
and
cmps
or
mov
rcl
add
sub
add
sbb
aad
call
in
test
pop
mov
in
pop
aad
test
lahf
sbb
add
(bad)
sub
and
mov
ds
adc
(bad)
lods
push
add
jecxz
mov
fwait
xchg
push
enter
push
push
inc
or
or
dec
aaa
call
jge
xor
leave
xor
scas
data16
and
push
xor
jae
cs
push
movs
cdq
xor
lods
test
and
mov
adc
and
and
xchg
inc
daa
xlat
push
and
and
mov
fidivr
sbb
data16
je
and
les
add
adc
je
fs
xor
fisub
sbb
pusha
es
adc
push
in
inc
das
pop
or
scas
inc
cmp
add
dec
pop
sbb
pop
leave
or
nop
cwde
adc
das
inc
xchg
imul
add
sbb
fcom
add
add
push
dec
pop
inc
xchg
ss
xor
dec
ds
test
cmps
pushf
pop
xchg
jb
bound
jae
cmp
sub
aam
mov
cmp
sub
sbb
adc
mov
cmp
imul
pop
jmp
xor
mov
popa
add
jns
mov
or
inc
aad
fcom
push
retf
adc
in
mov
test
lods
adc
test
movs
mov
pop
scas
adc
dec
and
xor
add
inc
pop
aad
ja
xor
je
or
add
xchg
jnp
push
ret
pop
ja
lods
jae
mov
push
cmp
les
xchg
out
inc
cmp
xor
fsub
fsubr
inc
cmp
clc
lea
push
mov
adc
dec
pop
cmps
pop
or
dec
lea
sub
hlt
sub
stc
inc
cdq
and
arpl
add
cvtps2pd
hlt
call
in
and
cli
push
dec
or
push
push
rcr
pop
(bad)
dec
mov
cli
mov
dec
jl
ins
xlat
arpl
mov
add
add
inc
nop
add
pop
fcomp
inc
ja
mov
push
or
(bad)
xchg
lea
sub
pop
mov
dec
inc
sub
lock
mov
retf
xchg
mov
jnp
movsx
xchg
add
ret
cwde
inc
push
sbb
or
(bad)
int3
adc
(bad)
into
movs
sub
je
je
enter
xchg
mov
ja
aas
add
aaa
inc
jb
add
xchg
inc
shr
add
sbb
hlt
mov
adc
inc
xchg
outs
mov
mov
in
add
xor
xchg
dec
push
sbb
dec
mov
mov
xchg
pop
xor
jo
mov
pop
(bad)
xchg
hlt
bound
mov
nop
inc
jbe
test
xchg
gs
cmp
and
je
sub
ret
adc
nop
xor
jmp
adc
rcl
nop
and
lods
sti
cs
add
mov
int
mov
cmp
bound
sub
add
sahf
push
adc
imul
pop
inc
pushf
bound
dec
loop
call
adc
daa
or
fcmovb
ja
sbb
ins
lods
inc
ret
or
shr
mov
mov
dec
invlpg
adc
shl
aam
mov
mov
inc
push
cs
adc
pop
bound
or
ret
push
mov
add
add
or
es
lahf
pop
fld
inc
jne
shl
add
and
xor
or
rol
jb
fsub
or
adc
mov
ins
pusha
imul
adc
in
fs
es
(bad)
sub
mov
add
mov
xor
push
dec
or
or
inc
out
push
cmp
(bad)
jl
adc
repnz
mov
ins
int
aas
add
aad
dec
cmps
cs
aam
(bad)
scas
das
mov
add
push
(bad)
fild
sub
test
das
adc
out
or
inc
pop
dec
movs
sub
das
pop
popf
popa
mov
or
xchg
xor
or
xchg
add
and
loop
mov
add
scas
rol
scas
inc
sub
push
loope
icebp
fcomp
in
mov
dec
jne
pop
daa
fwait
add
test
imul
add
xor
push
pop
add
stos
or
jnp
(bad)
bound
inc
mov
and
dec
loopne
dec
rol
stc
retf
push
inc
push
inc
cld
dec
nop
outs
nop
or
js
mov
adc
ss
xchg
enter
cmps
rcl
push
mov
dec
out
inc
push
enter
pop
and
inc
jge
xchg
xor
pop
ror
push
fdivr
or
xor
(bad)
xor
test
loopne
xchg
xchg
and
add
fld
das
test
inc
lods
in
enter
adc
lea
or
lods
cmp
fidiv
push
daa
xchg
xor
fstp
or
pop
push
ret
xor
and
fld
test
inc
sub
aaa
add
fs
outs
cld
or
stos
mov
icebp
pop
test
pop
popa
popf
rcr
fmul
in
sbb
inc
push
pop
out
inc
or
mov
pop
inc
fidiv
fs
cmp
and
jo
mov
test
sbb
leave
push
mov
pop
inc
xor
cmp
pushf
jle
movs
ins
sub
xchg
jbe
mov
jnp
or
(bad)
push
in
push
pop
cmps
pop
fwait
test
pop
mov
xchg
xor
sbb
or
pusha
daa
jmp
sbb
movs
(bad)
pop
inc
nop
push
lock
pop
mov
rol
montmul
and
sub
add
jecxz
push
dec
push
out
cld
dec
test
and
imul
pop
loope
or
jecxz
and
mov
cmp
push
ret
jns
sub
push
sar
mov
mov
icebp
add
inc
shl
cmp
mov
cmp
pop
leave
pop
jb
xchg
mov
popf
out
scas
adc
rol
call
retf
jp
adc
adc
push
sub
push
fs
aas
jne
add
pushf
push
pop
add
iret
mov
push
jmp
or
js
jmp
addr16
je
and
adc
jmp
or
mov
cmp
std
dec
push
fadd
and
or
rol
lock
mov
adc
and
movs
and
add
ins
icebp
ins
inc
fisttp
popf
mov
xchg
fcomp
mov
stos
ja
pminsw
ss
sub
int3
add
fcomp
push
adc
out
movs
scas
mov
cli
jbe
mov
dec
xchg
push
sub
or
pop
dec
int
lds
inc
mov
dec
push
mov
pop
xchg
aam
sbb
jo
inc
not
pop
xchg
and
rol
and
and
mov
test
sbb
or
aas
jb
shl
(bad)
adc
pop
bound
test
aas
add
or
fisttp
leave
add
pop
fidiv
lock
sar
call
inc
stos
ins
fisub
jnp
cdq
js
dec
scas
loope
lods
ins
push
mov
cmp
add
or
sub
(bad)
mov
nop
iret
push
sbb
add
sub
push
or
pop
fld1
(bad)
jae
mov
test
scas
add
outs
clc
xchg
add
xchg
jo
shl
mov
cld
call
cld
and
mov
cli
loope
add
ret
ins
mov
enter
xchg
sub
or
sbb
mov
or
and
add
enter
sbb
sbb
and
(bad)
bound
and
movs
outs
push
ficom
xchg
pop
daa
push
pop
das
xor
pop
mov
gs
fbstp
inc
imul
ja
(bad)
push
sub
nop
push
sbb
inc
jb
and
lock
xchg
inc
mov
(bad)
push
and
mov
add
daa
pushf
ds
mov
mov
and
mov
jp
and
inc
inc
mov
fnstcw
les
fisubr
mov
out
xchg
mov
nop
xor
rdpmc
xor
xor
push
fld
cmp
je
adc
inc
mul
adc
jnp
add
or
test
ins
out
adc
xor
adc
lods
fld
add
and
xor
xchg
pop
mov
and
dec
in
jp
and
push
or
pushf
add
mov
sbb
mov
sbb
mov
or
jnp
add
pop
sub
dec
aas
fcom
jmp
pop
or
dec
loop
test
dec
xchg
xchg
enter
out
jge
push
or
adc
adc
fs
pusha
js
inc
mov
jo
cwde
adc
jne
out
dec
cs
mov
adc
push
xchg
cmp
pop
in
cmp
arpl
sub
sbb
dec
inc
or
xchg
dec
mov
adc
mov
fst
mov
jb
add
pop
sub
or
sti
es
shl
stos
cmp
outs
xchg
pop
and
inc
mov
arpl
cs
outs
ret
loope
add
add
cmp
mov
cmp
or
jo
ret
adc
and
test
iret
mov
add
imul
outs
adc
mov
retf
pop
adc
xchg
push
ins
lock
pop
sbb
and
adc
and
xor
pusha
and
pop
push
sti
ror
int3
mov
ja
xor
cwde
or
jp
cmps
push
xchg
add
or
push
loop
neg
inc
call
xchg
add
add
or
push
xor
gs
jne
sub
test
(bad)
jmp
pop
pop
and
mov
inc
and
push
jne
mov
xchg
mov
xor
(bad)
or
scas
(bad)
xchg
imul
ret
sbb
add
data16
and
into
xlat
or
adc
imul
ret
inc
fxch
lds
prefetcht0
or
inc
sbb
retf
sti
cmp
xor
and
mov
test
mov
cmp
and
xor
mov
adc
iret
or
in
ja
inc
push
fcom
mov
sub
jle
test
mov
or
inc
mov
call
nop
push
add
ror
pop
and
or
xchg
out
jmp
and
pop
test
push
cmp
(bad)
mov
fs
add
(bad)
push
xor
in
fistp
and
jge
add
add
fild
push
adc
jmp
sub
nop
and
sbb
jle
mov
or
xchg
lahf
iret
jne
dec
dec
add
mov
and
adc
loopne
xchg
and
fs
push
ficom
das
jae
or
ja
adc
or
cmps
adc
test
stc
mov
cmp
add
jno
ins
pop
mov
ins
imul
adc
enter
sbb
jle
pop
sbb
iret
adc
mov
ror
and
sbb
test
ret
mov
push
dec
and
or
mov
fisttp
jno
dec
shl
or
fs
daa
jbe
cmp
mov
mov
push
push
pusha
or
popf
bound
mov
xor
loopne
push
inc
xchg
adc
xor
outs
lock
call
mov
rcl
out
loopne
push
mov
leave
call
lods
jns
sar
outs
les
in
pusha
mov
fiadd
test
ficom
push
retf
add
test
adc
pop
sub
mov
inc
imul
add
cld
sahf
or
cmp
dec
movs
adc
sar
xchg
int3
or
sti
or
and
cwde
test
or
and
sub
fs
sbb
mov
push
dec
sub
push
dec
xchg
stos
sbb
movs
or
fdiv
sti
aaa
inc
aas
mov
cmp
loop
es
mov
and
or
retf
outs
stc
arpl
(bad)
push
lods
pop
mov
sar
add
sub
dec
add
mov
jmp
jl
cwde
mov
outs
jmp
mov
(bad)
xor
pop
or
clc
(bad)
cmp
mov
test
test
out
sub
fwait
or
pusha
push
pop
sub
cmp
cmp
cmp
mov
es
aaa
test
adc
inc
push
das
or
inc
or
lea
dec
pop
ret
rcr
and
gs
and
pop
or
iret
clc
pusha
test
es
call
lock
mov
inc
adc
or
popa
dec
cmp
jge
add
push
ret
(bad)
in
or
clc
clc
add
add
test
lods
sar
mov
inc
sbb
dec
mov
sub
inc
dec
push
ret
cmp
stos
rcr
add
ret
pop
lods
or
neg
push
ja
mov
dec
je
jne
inc
jnp
push
inc
ja
ins
sub
or
stc
push
sbb
sbb
movs
es
inc
test
out
push
mov
lahf
cmp
pop
retf
add
rcr
ret
pusha
(bad)
jmp
or
pusha
sub
in
sbb
adc
adc
pusha
jb
cld
cld
cdq
movs
add
dec
ret
adc
outs
aaa
and
sub
ret
(bad)
push
xchg
push
popf
leave
inc
gs
xor
add
inc
add
add
and
cmp
push
repz
lods
ret
in
sbb
iret
loope
outs
and
cmp
call
xor
add
aas
dec
jo
push
test
push
pop
stos
fsub
loopne
mov
call
jnp
fwait
sbb
int3
or
dec
and
popa
inc
and
inc
sub
aam
fist
daa
mov
cmps
mov
sub
fisubr
shl
pop
ret
jmp
neg
sub
lods
dec
iret
aam
test
scas
(bad)
out
jg
daa
ja
dec
sti
aam
inc
jns
jo
sub
push
icebp
test
mov
pusha
pop
mov
das
retf
lods
pop
add
hlt
out
(bad)
sub
mov
add
dec
sub
ds
call
xchg
(bad)
xchg
add
es
data16
jb
(bad)
sub
sub
jb
sub
jb
adc
adc
jb
adc
jb
sbb
sbb
jb
sbb
jb
add
add
jb
add
jb
or
or
jb
or
jb
lock
icebp
repnz
cmp
repz
cmc
idiv
cmp
cmp
clc
stc
cli
cmp
cmp
sti
cld
std
(bad)
cmp
cmp
jmp
loope
cmp
cmp
jecxz
in
cmp
cmp
out
jmp
cmp
in
in
out
cmp
cmp
out
rcl
sar
cmp
cmp
aam
(bad)
cmp
cmp
xlat
fcomp
fidivr
cmp
cmp
(bad)
ficom
rol
xchg
xchg
xchg
ret
lds
(bad)
enter
xchg
xchg
retf
int
xchg
xchg
xchg
into
iret
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
xchg
xchg
xchg
mov
mov
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
cmps
cmps
test
xchg
xchg
xchg
xchg
stos
stos
lods
lods
xchg
xchg
xchg
xchg
scas
scas
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
xchg
xchg
xchg
xchg
call
xchg
sahf
lahf
add
add
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
jb
je
xchg
xchg
xchg
xchg
jbe
js
xchg
xchg
xchg
xchg
jp
jl
xchg
xchg
xchg
xchg
jle
pusha
popa
xchg
xchg
xchg
xchg
bound
gs
xchg
xchg
xchg
addr16
xchg
xchg
xchg
push
ins
ins
xchg
xchg
xchg
xchg
outs
outs
push
push
xchg
xchg
xchg
xchg
push
push
push
push
xchg
xchg
xchg
xchg
push
push
pop
pop
xchg
xchg
xchg
xchg
pop
pop
pop
pop
xchg
xchg
xchg
xchg
pop
pop
inc
inc
xchg
xchg
xchg
xchg
inc
inc
inc
inc
xchg
xchg
xchg
xchg
inc
inc
dec
dec
xchg
xchg
xchg
xchg
dec
dec
dec
dec
xchg
xchg
xchg
xchg
dec
dec
xor
xchg
xchg
xchg
xchg
xor
xor
xchg
xchg
xchg
xchg
ss
cmp
pushf
xchg
xchg
xchg
cmp
cmp
xchg
sbb
data16
into
xor
inc
test
out
xor
sub
jmp
ja
or
jmp
push
into
imul
cmp
add
dec
ret
or
dec
rcr
sbb
stos
lods
mov
xor
xor
adc
pop
sbb
xchg
xor
sbb
movsx
adc
add
pop
mov
dec
pop
cwde
pop
sub
sbb
jl
xchg
pop
test
pop
cmp
sub
sub
call
popa
sub
jmp
inc
imul
mov
add
lds
xor
xor
add
or
or
dec
xlat
bound
jae
or
pop
imul
fadd
jge
je
rol
addr16
push
dec
addr16
inc
adc
pop
daa
or
sbb
jno
dec
dec
jb
nop
pusha
shr
nop
pop
mov
(bad)
call
sbb
out
aam
js
mov
jnp
cld
push
fsubr
pop
das
adc
xchg
cmp
add
push
sbb
mov
xchg
inc
and
aas
sbb
ins
pop
clc
sbb
les
cmps
inc
sub
sub
cli
push
add
pop
movs
pop
add
xchg
retf
(bad)
jne
pop
lea
call
sbb
cmp
add
int3
mov
dec
int3
inc
sbb
je
mov
sub
jae
cmp
sbb
sbb
push
sub
jb
in
shl
scas
(bad)
xor
mov
pusha
dec
xchg
mov
push
inc
rol
cmp
test
imul
cmp
mov
xchg
je
scas
cmp
push
movs
(bad)
stc
out
or
add
push
fcom
test
pop
shr
lea
or
sbb
or
add
imul
adc
ds
sub
rcr
ss
ins
ret
inc
ins
sahf
and
call
outs
js
inc
cmp
xor
je
iret
(bad)
jmp
mov
hlt
jno
int
or
shr
je
mov
out
sbb
movsx
xchg
push
or
mul
xor
mov
add
inc
cli
fs
or
jb
mov
push
popa
xor
dec
retf
jge
sub
cmp
push
arpl
test
sbb
mov
imul
jle
call
aas
fsubr
xor
add
xor
or
cdq
div
inc
adc
imul
adc
leave
xor
cmps
rcl
push
out
sub
xor
std
inc
mov
lea
mov
out
mov
cmp
dec
packuswb
pop
cdq
loop
imul
sub
retf
cli
push
mov
(bad)
je
lea
pop
pop
mov
add
iret
sub
mov
lea
dec
ret
xor
shr
sbb
hlt
sbb
jge
call
fmul
icebp
inc
add
xchg
inc
or
xchg
xor
ret
push
jg
add
inc
or
scas
mov
mov
movs
jae
jmp
jge
imul
sar
neg
xchg
sbb
inc
add
mov
pop
loop
clc
jmp
adc
adc
push
cmp
sbb
and
rol
and
scas
xchg
adc
sbb
jns
mov
inc
lds
add
add
sub
adc
lods
in
or
push
aad
xor
jle
push
jns
dec
or
mov
retf
adc
sbb
(bad)
fldenv
sahf
neg
inc
ffreep
push
add
out
(bad)
jl
fisubr
mov
dec
leave
push
adc
int
test
adc
nop
cdq
ficomp
inc
mov
fimul
mov
ja
out
or
imul
pusha
sub
lds
push
loopne
cmps
inc
and
rcl
pusha
jmp
jl
pop
mov
push
inc
push
outs
or
sbb
scas
adc
fwait
(bad)
xor
movs
inc
in
movs
fisub
add
cmp
imul
xchg
add
adc
and
pop
mov
jnp
fld
sbb
xor
mov
sub
nop
adc
xchg
cmps
push
sbb
xor
or
add
inc
mov
test
mul
adc
cmps
(bad)
jp
sub
add
or
or
sbb
jne
xchg
sbb
and
jbe
add
outs
clc
stos
lock
sahf
idiv
push
repnz
add
xor
sysret
fcmovnu
sete
jmp
psubsb
daa
pop
add
mov
in
jmp
lock
lea
push
ret
jne
leave
sub
mov
ins
sbb
pop
dec
add
fidivr
(bad)
sub
lock
shl
inc
pop
xor
je
cmp
jmp
mov
pop
inc
les
shr
dec
adc
adc
mov
adc
inc
xor
xchg
das
sbb
fs
mov
imul
push
adc
mov
sbb
or
call
adc
adc
inc
adc
cmc
mov
dec
jne
mov
lea
ret
dec
sub
loop
movs
iret
add
mov
push
and
out
mov
push
sub
pusha
adc
es
jmp
mov
mul
add
lea
test
inc
test
xchg
mov
jp
add
add
out
mov
mov
out
jns
hlt
pusha
push
push
adc
xchg
xchg
jg
das
xor
in
shr
int
push
imul
enter
imul
mov
imul
add
jnp
jmp
push
mov
dec
dec
add
rcl
jge
sar
gs
ret
lods
mov
sub
int
mov
add
nop
test
mov
jno
dec
inc
lock
adc
dec
sbb
(bad)
js
sbb
inc
jb
xchg
aas
call
std
jne
and
add
adc
imul
pop
pop
jnp
mov
push
xor
dec
test
popa
adc
loop
es
jmp
xor
adc
push
icebp
mov
or
adc
fsub
cmp
pop
clc
pop
cmp
sub
call
push
pushf
js
cmp
pop
jl
je
scas
aad
and
pop
lods
mov
popa
daa
inc
mov
or
scas
xchg
rep
dec
imul
inc
cld
add
les
js
pop
sub
mov
ret
mov
xor
push
pop
test
dec
push
push
loopne
mov
sub
pushf
jp
out
mov
fistp
and
and
loopne
aaa
pop
and
pusha
cmps
push
push
pop
mov
mov
add
mov
or
(bad)
(bad)
(bad)
xchg
dec
(bad)
mov
jo
push
pop
retf
or
sub
ins
out
jbe
and
(bad)
jp
nop
mov
inc
jmp
pop
and
inc
add
nop
out
lahf
or
mov
adc
sbb
test
cwde
sbb
pop
pop
popf
repnz
mov
jne
inc
push
mov
aad
or
or
into
fwait
scas
inc
or
lea
jno
popa
xchg
test
xchg
cmp
pop
sub
test
mov
in
xchg
mov
pusha
fisub
in
xor
pop
or
mov
add
fucomi
pop
rol
les
jmp
in
xchg
out
mov
inc
sub
fwait
inc
mov
pusha
cmps
pop
push
mov
sbb
cli
pop
stc
outs
addr16
push
add
push
cmp
es
inc
dec
add
dec
loopne
xor
inc
shl
rcr
pop
in
jmp
inc
hlt
xor
cmp
adc
mov
dec
or
mov
call
aas
inc
or
and
inc
xchg
pop
mov
scas
sub
outs
adc
add
fmul
fistp
and
fiadd
addr16
rol
jne
mov
and
dec
adc
(bad)
repz
xor
and
push
push
pop
neg
sbb
sub
retf
push
pop
inc
sbb
sbb
dec
or
add
xchg
mov
jle
ficomp
int
pushf
sbb
inc
icebp
lds
ins
ss
sub
adc
jns
sbb
(bad)
pop
jae
(bad)
(bad)
loope
out
gs
dec
jo
fst
push
in
pusha
pop
push
inc
shr
pop
add
pop
or
xor
rcr
jb
adc
jmp
pop
or
inc
jnp
pop
push
loopne
cmp
lods
push
pop
adc
sub
mov
sbb
pop
xor
jmp
push
adc
push
sub
and
outs
inc
pop
in
mov
inc
pop
mov
jecxz
and
pop
cmps
nop
aas
pop
add
mov
or
jl
cmp
mov
jle
retf
jmp
aaa
shl
sub
push
movs
mov
icebp
adc
sub
cdq
jbe
push
push
sub
mov
(bad)
mov
add
mov
push
adc
sub
lea
out
sub
test
pusha
jno
mov
push
cmps
addr16
cs
nop
dec
scas
(bad)
hlt
hlt
nop
push
add
mov
rcr
sub
push
out
ror
sti
jnp
(bad)
(bad)
and
mov
xor
cs
mov
in
jns
movs
in
pop
add
stos
add
mov
hlt
jno
clc
popf
and
popf
retf
in
jmp
cmps
je
jecxz
push
adc
cmp
mov
lea
pop
push
push
repnz
xor
xchg
adc
in
xchg
pop
sub
pop
outs
adc
enter
jne
and
addr16
popa
stos
mov
xlat
(bad)
outs
icebp
mov
and
dec
add
cmp
bound
imul
mov
inc
cmp
add
lds
out
sbb
call
xchg
mov
mov
xor
cmp
ss
out
inc
stc
xor
cld
ds
or
ss
mov
xor
repnz
out
cmps
mov
adc
icebp
inc
lods
dec
push
mov
xchg
dec
push
aaa
push
add
mov
xor
and
xor
or
mov
jl
inc
ret
pop
add
es
mov
cli
pop
pushf
sti
push
int3
cld
push
adc
and
or
arpl
mov
mov
mov
ins
add
mov
mov
test
rcl
inc
mov
xlat
sub
jb
pop
shl
mov
nop
sbb
sub
test
and
pop
sub
xor
enter
retf
jmp
push
jno
dec
repnz
ds
add
push
test
or
icebp
jo
cli
push
inc
nop
mov
pop
test
clc
or
or
pop
(bad)
mov
popa
jae
in
sbb
inc
enter
push
mov
adc
repz
fmulp
add
mov
outs
add
js
in
pop
jb
outs
jo
sahf
fdivr
into
adc
pop
gs
leave
pop
cmps
inc
hlt
push
stos
xor
aaa
in
lahf
div
push
push
mov
add
repz
dec
push
or
popa
and
ins
idiv
inc
mov
add
iret
shr
add
in
fs
mov
enter
in
pop
push
ins
jmp
inc
cmps
xchg
mov
cpuid
and
ja
add
fadd
jns
sub
and
les
push
adc
ja
lods
push
or
jne
pop
and
adc
inc
cmps
fwait
mov
jp
and
test
add
or
mov
clc
xor
mov
aas
je
xchg
mov
push
movs
or
or
nop
je
mov
push
xor
add
and
rol
xchg
(bad)
mov
js
jb
mov
add
sub
dec
inc
pusha
mov
addr16
pop
mov
jmp
jbe
scas
and
pop
sbb
pop
or
xor
nop
sbb
ins
or
xchg
ins
in
or
jmp
xor
cmp
imul
dec
sbb
sbb
push
pop
xchg
out
rol
push
adc
rcr
add
dec
or
xchg
cs
adc
das
cwde
repnz
nop
ror
daa
enter
or
adc
ror
dec
addr16
xor
sahf
pop
clc
test
add
dec
shl
jnp
rol
pop
inc
dec
dec
cwde
xchg
sub
pop
movs
jp
cwde
in
shl
xchg
and
mov
mov
jne
test
xchg
mov
cmps
jmp
out
in
lods
inc
adc
jae
add
xchg
push
mov
dec
inc
scas
mov
xchg
cmp
lods
jle
xor
jbe
add
lea
jno
test
mov
sub
and
in
push
add
and
enter
push
test
xor
mov
and
arpl
adc
cdq
add
mov
sub
sbb
and
shl
sub
fisub
inc
pop
movs
inc
jne
jge
cli
sbb
xlat
lock
cli
call
test
push
sbb
pop
cmp
ja
jmp
ins
(bad)
dec
test
jmp
sbb
cmp
outs
rcl
mov
dec
ficom
xchg
mov
(bad)
cmp
pop
sbb
not
push
jmp
or
dec
or
sub
sbb
push
sbb
and
nop
test
lods
dec
mov
push
pop
jmp
cmps
add
sbb
add
and
adc
pop
cmc
pop
adc
mov
stos
push
add
call
and
call
inc
sub
imul
fsub
dec
sbb
out
ds
add
adc
into
adc
jp
and
xlat
sbb
mov
or
(bad)
or
sub
sbb
adc
inc
(bad)
maskmovq
not
adc
pop
mov
dec
dec
push
mov
aas
cld
mov
dec
adc
int
je
xor
or
or
fcmovbe
or
and
add
into
popf
jmp
adc
jmp
mov
fsubr
cdq
cmc
test
and
das
and
inc
sub
ds
mov
pop
ja
adc
or
sub
xor
pop
xchg
ins
pop
das
imul
shl
jmp
je
xor
adc
pop
inc
adc
or
inc
xchg
mov
adc
dec
inc
aaa
and
pop
ret
push
imul
ja
mov
inc
or
shl
(bad)
je
mov
sub
xchg
dec
ror
pop
mov
mov
and
dec
aas
(bad)
pop
xchg
inc
dec
push
jp
xor
dec
lahf
sub
(bad)
mov
cmp
add
fidivr
out
mov
add
inc
mov
xor
lods
(bad)
mov
mov
cmp
sar
inc
push
sub
push
mov
add
cmp
xor
jmp
lea
or
pop
adc
push
dec
push
mov
pop
lock
mov
stos
lds
ror
je
xchg
fs
push
inc
in
xor
xchg
adc
add
jl
push
jo
dec
add
push
inc
or
dec
cmp
add
das
repz
pusha
addr16
sbb
shr
mov
gs
scas
or
mov
sbb
ss
bound
push
(bad)
sysenter
test
inc
arpl
sub
fistp
mov
imul
inc
rol
dec
retf
nop
pusha
push
retf
cmp
push
push
push
cmp
loope
pushf
adc
sub
icebp
pop
mov
call
cmc
adc
lods
inc
mov
push
inc
pop
or
and
sbb
addr16
mov
shl
mov
mov
cmp
sbb
mov
inc
cmp
push
stc
cmp
cld
and
lods
or
mov
mov
aaa
cmp
clc
xchg
adc
inc
cdq
push
sbb
(bad)
clc
std
fs
mov
jb
test
dec
pop
lea
add
push
inc
or
sbb
adc
nop
inc
and
adc
mov
cmp
jne
or
jmp
add
test
and
outs
cmp
mov
push
jl
and
mov
popa
add
jno
loopne
test
xchg
xchg
in
popf
dec
dec
aad
ds
jge
inc
push
lock
test
push
mov
jge
rcl
push
push
mov
shl
in
adc
or
adc
popa
sbb
cmc
out
bound
pop
daa
test
das
rcl
retf
jb
jae
icebp
and
mov
or
xor
mov
outs
sub
sbb
xchg
aas
fnsave
pop
(bad)
mov
mov
add
inc
rcl
(bad)
sti
or
xor
or
jbe
jg
sbb
dec
xchg
mov
(bad)
adc
sub
out
or
adc
and
in
scas
cmp
clc
adc
test
outs
fcomp
ja
add
push
mov
rcl
mov
pushf
mov
mov
mov
xor
or
es
cmp
dec
add
loope
mov
push
inc
pop
jbe
push
jecxz
call
or
out
mov
jno
rcl
dec
or
push
mov
pop
ret
push
mov
lods
cmp
mov
movs
pop
sub
out
mov
or
fisttp
fcmovbe
mov
pop
outs
rcr
rcl
outs
call
add
pusha
int3
push
(bad)
or
(bad)
cwde
hlt
or
xor
or
clc
popa
(bad)
mov
mov
jl
add
pop
inc
dec
xor
fistp
cmp
mov
adc
das
pushf
xor
xor
test
jbe
lahf
mov
inc
inc
outs
pushf
xor
add
das
enter
enter
jae
int3
mov
add
add
push
mov
movs
inc
and
mov
mov
fadd
adc
test
pop
xchg
add
pop
push
call
jp
cmp
pop
std
sbb
mov
adc
mov
adc
or
add
add
xchg
je
or
adc
inc
push
or
or
xor
jecxz
jae
rcr
adc
or
adc
les
adc
test
scas
sbb
mov
arpl
fcmovb
ret
dec
lods
push
cmp
je
push
adc
adc
mul
mov
ret
mov
ret
and
iret
test
scas
inc
xchg
or
push
dec
sbb
lock
call
lods
mov
jae
jo
sbb
clc
out
xor
jne
test
mov
jne
inc
(bad)
jmp
loop
gs
xor
daa
dec
in
shl
enter
shr
add
retf
mov
sbb
aaa
push
sbb
inc
jo
xchg
fidivr
retf
mov
cmp
loope
push
add
inc
push
pusha
adc
stc
cmp
jmp
xor
and
mov
gs
pop
in
not
cmc
or
stos
test
xor
jns
js
sub
mov
lds
and
shl
xor
or
std
popa
push
inc
or
xchg
inc
pop
and
fwait
mov
sub
jg
dec
sub
cmps
out
pop
xlat
or
das
inc
or
mov
addr16
pop
mov
loop
(bad)
fcom
and
dec
add
fild
aas
or
ficom
movs
in
lea
sbb
or
xlat
leave
in
push
mov
ds
pop
mov
test
push
fcomp
dec
add
in
push
inc
es
inc
aaa
or
inc
xor
xchg
lock
(bad)
xchg
fs
mov
xchg
or
in
fldlg2
or
and
enter
mov
cmp
jno
mov
sub
dec
xchg
bound
loopne
outs
cmp
add
or
sub
add
sub
inc
add
or
das
les
jg
test
jae
pop
(bad)
mov
in
jns
pmaxub
pop
popf
or
clc
je
ret
jbe
sub
jge
and
xchg
or
ss
mov
or
in
shl
stos
jo
mov
test
fadd
rol
jb
jmp
or
and
loope
cmp
mov
sti
inc
retf
mov
adc
nop
js
out
mov
mov
add
mov
movs
mov
adc
fisubr
cwde
bound
(bad)
push
jo
xchg
push
test
cwde
jle
adc
xchg
ret
dec
test
xchg
or
imul
movs
jbe
aad
dec
sbb
xor
lods
test
ins
jmp
adc
adc
push
xor
outs
inc
or
icebp
inc
add
test
push
imul
je
sub
or
add
sub
jnp
je
or
pop
adc
cli
xchg
div
or
jne
xor
pop
rol
mov
push
aas
ret
adc
cmp
jbe
mov
mov
adc
je
sub
rol
dec
loope
add
in
jg
xchg
cld
pop
outs
dec
adc
inc
or
push
daa
ret
cmp
imul
pop
(bad)
pusha
xchg
sub
cmp
sub
push
push
add
and
add
jl
sub
xor
dec
sti
cmp
cmp
and
(bad)
mov
adc
pop
mov
jmp
or
mov
mov
xor
push
dec
mov
xor
ret
inc
sbb
adc
ins
(bad)
sub
sahf
and
cdq
mov
push
push
push
push
sbb
adc
jno
xchg
add
test
pop
sbb
pop
clc
add
pop
ds
stos
loop
arpl
dec
ins
repnz
mov
mov
jnp
push
test
adc
popa
xor
adc
xor
dec
retf
ret
inc
mov
and
push
jmp
add
push
xchg
inc
rcr
dec
jo
mov
and
jmp
test
stos
pop
ss
pop
test
rcl
add
out
nop
xchg
or
call
adc
pop
sbb
sub
loop
pop
cwde
aaa
movs
and
inc
cmps
add
lds
sub
retf
aam
fwait
jne
cs
xchg
cmp
out
push
mov
sbb
push
lods
mov
xor
sub
push
jmp
rcr
and
mov
test
pop
mov
imul
dec
push
push
cwde
aad
add
xchg
sbb
ror
inc
(bad)
and
clc
mov
dec
ds
sub
and
sbb
xor
(bad)
inc
add
sbb
inc
movs
sub
(bad)
push
inc
das
rcr
iret
sub
adc
add
mov
lock
push
cmp
add
daa
or
adc
or
xchg
add
lods
rol
inc
jmp
out
shr
(bad)
cmp
aaa
clc
movs
sub
sbb
mov
inc
xchg
mov
test
dec
pop
xchg
push
push
imul
in
inc
and
mov
jge
or
cmp
sbb
xchg
sbb
pop
dec
xor
popf
push
push
in
sahf
(bad)
fsubr
sbb
fsubr
jecxz
nop
cmp
mov
(bad)
push
fstp
hlt
mov
sbb
scas
clc
and
int3
nop
(bad)
cmp
out
jbe
inc
fsub
iret
test
rcr
xlat
add
mov
psubd
pop
call
dec
push
mov
jnp
jl
test
and
adc
dec
mov
adc
push
ins
ins
mov
dec
pop
push
call
inc
in
test
in
adc
outs
xor
out
push
add
adc
bound
adc
jne
xchg
add
lock
sbb
xlat
call
cmp
add
jl
int3
iret
cld
adc
fst
mov
das
sbb
push
mov
movntps
pushf
out
lock
jne
add
enter
and
call
imul
mov
(bad)
cmp
sbb
inc
add
xor
stos
ret
sbb
dec
inc
cmp
lods
pop
push
lods
dec
inc
jmp
sbb
mov
and
mov
pop
mov
sti
mov
inc
stos
sbb
mov
jae
mov
push
test
mov
ins
push
xor
push
cwde
pop
rol
ins
and
xchg
mov
sahf
and
sub
cdq
retf
into
mov
outs
popa
mov
add
adc
(bad)
sub
inc
pop
lds
test
addr16
daa
stc
dec
add
js
xor
ss
add
(bad)
sbb
jmp
lods
or
mov
int3
sub
and
sbb
(bad)
and
xchg
push
arpl
xchg
and
xor
cmc
jb
cmps
or
xor
sbb
inc
imul
mov
mov
push
xchg
ret
inc
dec
xor
adc
adc
in
leave
rcl
ins
ret
fimul
mov
sahf
sub
push
pop
xor
add
ins
adc
sub
and
sub
jmp
and
mov
es
add
sub
and
adc
dec
and
or
mov
jne
mov
in
dec
adc
jne
inc
loopne
sti
cmp
(bad)
out
inc
sbb
iret
pop
pop
outs
and
mov
or
hlt
inc
ja
aas
add
icebp
add
loop
xchg
cmp
or
or
xor
xchg
outs
pop
pusha
jecxz
xor
inc
ins
bound
mov
inc
inc
dec
cwde
inc
dec
adc
(bad)
add
jo
sbb
enter
add
enter
ret
daa
jb
dec
inc
push
les
loope
mov
or
or
ja
sbb
pop
cmps
add
adc
xchg
(bad)
fbstp
or
mov
push
mov
cmp
jp
adc
xchg
call
pop
and
scas
adc
add
test
jne
mov
movs
(bad)
nop
pushf
push
mov
or
mov
xchg
je
sbb
cmp
std
fld
and
cmp
mov
jbe
mov
push
psubb
scas
add
cmp
fs
sbb
call
js
pop
jl
test
add
(bad)
xchg
dec
mov
pop
jmp
dec
sub
push
mov
cmp
inc
xchg
js
pop
lods
retf
and
loopne
inc
popa
in
test
add
inc
xor
cmc
push
add
xor
pusha
xor
jge
sub
add
das
xor
xor
inc
jle
inc
retf
mov
mov
ret
and
retf
ret
lods
les
add
movs
push
outs
jne
in
sbb
out
jbe
adc
push
ret
jo
pop
cli
jmp
cmc
loopne
sar
aaa
push
in
push
repnz
pushf
mov
adc
sub
add
setb
xor
stos
mov
cmp
xchg
push
add
mov
(bad)
or
not
jg
dec
sub
out
ss
mov
or
jae
adc
mov
mov
sbb
je
dec
inc
sub
in
or
test
mov
cmp
and
pop
dec
xchg
mov
and
add
call
and
jge
movs
add
add
sub
mov
cdq
lock
dec
mov
bound
add
lds
rcl
cmp
mov
xor
push
inc
leave
enter
cmp
enter
shl
mov
xor
adc
cmp
sbb
xor
push
pop
es
and
in
bound
sub
lock
mov
scas
xchg
iret
cmp
xlat
and
lods
xlat
cmp
scas
or
mov
sbb
addr16
inc
fld
mov
jmp
mov
xor
jne
adc
and
shr
es
or
aam
xor
adc
or
lahf
add
dec
retf
retf
mov
lock
fwait
jle
add
pop
das
enter
(bad)
mov
sub
pop
xor
cwde
sbb
out
mov
adc
or
push
push
mov
push
sub
cmp
jno
cmc
inc
stc
jne
pop
pop
jge
mov
push
rol
sub
push
mov
jle
jmp
jae
mov
sbb
jne
inc
or
fst
stos
cs
in
adc
mov
outs
sub
dec
je
rol
clc
es
mov
retf
sub
lods
inc
or
or
imul
add
mov
or
ins
sbb
sub
jae
mov
sub
test
sbb
sbb
mov
xchg
sbb
mov
mov
mov
mov
cmp
inc
pushf
jmp
xchg
inc
sahf
inc
rcr
in
adc
push
sub
outs
test
sub
sub
mov
sub
push
js
push
and
pop
mov
int
imul
fstp
jbe
ret
adc
out
fadd
xchg
sub
out
(bad)
push
push
dec
cmp
mov
in
sub
sbb
addr16
aam
pop
add
cmp
jp
hlt
inc
ret
mov
sbb
mov
adc
xlat
popa
adc
pop
stc
movs
and
and
imul
mov
mov
inc
sub
bound
sub
pop
sub
sahf
add
cmp
ins
cwde
or
lods
cmp
push
pop
inc
popa
lock
shl
test
and
stc
adc
mov
sahf
mov
and
xchg
sub
shl
inc
or
test
adc
mov
or
int3
std
imul
dec
push
mov
ret
iret
cmp
xchg
xchg
sub
xor
cmp
push
lods
push
inc
inc
dec
retf
mov
push
or
adc
aas
inc
das
add
add
xor
(bad)
cmps
and
mov
imul
or
push
cmp
jne
or
push
cmp
sbb
and
enter
rol
lea
scas
xor
add
fistp
repz
mov
jmp
nop
inc
sbb
pusha
push
sub
mov
dec
push
outs
xor
fs
daa
and
ror
cld
dec
rol
pop
mov
mov
hlt
push
lods
lods
add
push
enter
jmp
push
pop
mov
sub
(bad)
lock
lods
push
adc
add
inc
js
mov
pop
(bad)
and
pop
sbb
idiv
(bad)
shr
or
jne
xor
iret
aaa
or
xchg
jae
jne
cmp
or
xchg
and
ins
scas
mov
in
or
sar
scas
add
add
xor
cld
adc
mov
dec
stos
and
movs
push
sbb
adc
scas
ret
cdq
(bad)
cmp
jle
lahf
imul
test
jl
lock
or
sbb
jg
add
adc
fidiv
mov
fist
cmp
jae
retf
inc
dec
jne
test
aaa
rcl
dec
or
and
sbb
sbb
push
push
pusha
lock
adc
push
jne
pop
sbb
sub
sub
les
aaa
outs
hlt
mov
dec
out
jl
sub
adc
xchg
inc
sub
or
frstor
movzx
imul
shl
sbb
or
aad
stc
int
or
cld
ret
ret
out
inc
inc
add
sub
test
pop
inc
std
cmc
inc
cld
sbb
inc
fadd
mov
mov
rol
xchg
mov
inc
mov
xor
das
xor
fs
add
std
ins
outs
xchg
pushf
inc
cmp
retf
lock
shr
pushf
popf
in
out
add
int3
add
aas
push
mov
ret
mov
fadd
xor
dec
pop
pop
nop
call
or
push
rcr
push
fiadd
das
adc
adc
xchg
pop
push
rcl
clc
fcomp
das
or
sbb
gs
pop
adc
adc
adc
adc
fs
inc
xchg
mov
fs
jl
xchg
and
into
aam
fistp
add
fild
rcl
pop
push
xor
lea
jne
push
or
test
(bad)
aaa
or
pusha
xlat
leave
inc
jb
(bad)
push
pop
sbb
add
nop
xor
dec
add
aaa
adc
cli
or
ror
in
or
xchg
aad
mov
ret
fimul
adc
pop
xor
adc
or
imul
loopne
aam
xor
test
adc
add
jle
outs
xchg
ins
dec
jnp
jg
sbb
in
jbe
push
jl
int
adc
ins
or
cmp
adc
add
scas
dec
cmp
dec
cmp
xor
jle
inc
add
jno
mov
das
dec
and
cmp
nop
jmp
pop
je
xchg
add
shr
xchg
sbb
xchg
push
pop
cmps
add
dec
leave
adc
push
outs
or
mov
adc
cmc
adc
push
add
loop
jg
or
push
dec
cmps
and
ror
xor
clc
or
lds
adc
sbb
repz
pop
cwde
or
mov
sub
and
adc
or
push
push
mov
enter
sbb
daa
mov
mov
mov
test
add
xor
call
or
sub
or
inc
xor
cwde
jno
das
sub
mov
ins
dec
retf
cwde
jno
aad
icebp
or
pushf
jmp
jae
mov
push
and
pop
cdq
mov
xlat
inc
das
or
inc
and
call
aam
inc
retf
stos
mov
or
add
in
test
pop
add
push
jmp
aaa
hlt
pushf
jo
and
jno
stos
or
inc
dec
retf
sub
pop
adc
addr16
add
sub
add
xor
jb
out
js
or
xchg
retf
in
mov
mov
adc
pop
push
xchg
cld
test
movs
xchg
mov
cmp
adc
inc
rol
mov
dec
jge
test
ret
fadd
lea
push
inc
jmp
movs
add
in
lds
mov
mov
ja
icebp
adc
mov
inc
sbb
push
fld
movs
loope
xor
xor
cmp
daa
leave
push
mov
and
and
mov
push
inc
push
mov
jge
push
fcmovnbe
push
dec
clc
iret
cli
mov
cmp
in
xchg
and
dec
adc
dec
gs
cld
and
mov
fcomp
pop
pop
pop
mov
outs
int
jmp
add
rol
(bad)
fidivr
cwde
and
sbb
dec
sbb
fwait
xchg
pop
pop
cmp
xor
out
add
idiv
dec
push
adc
jo
push
push
inc
and
aam
sbb
adc
lock
jle
test
pop
fisubr
xor
popa
repnz
cmps
inc
imul
cli
movs
sub
out
arpl
gs
and
mov
inc
clc
mov
shr
sbb
push
and
add
xchg
mov
mov
test
pop
js
add
xchg
rol
add
or
adc
mov
xor
ins
in
sub
xchg
dec
adc
and
movs
adc
add
inc
dec
movs
dec
fcmovb
nop
iret
cs
xor
push
out
stc
nop
pusha
add
or
and
movs
fs
gs
pop
enter
cmp
sub
pop
xor
xor
dec
ins
ret
das
pushf
je
and
sub
nop
and
les
(bad)
cs
imul
cmp
or
xchg
std
rol
dec
or
jmp
dec
and
add
outs
ret
adc
sub
shl
loop
ret
cld
sbb
add
add
mov
mov
or
adc
adc
std
movs
xchg
(bad)
or
ja
adc
jbe
lods
sub
jae
ret
(bad)
push
mov
setbe
jmp
sub
pop
add
add
or
pop
or
ins
pop
inc
or
ds
and
lods
mov
shl
xchg
dec
mov
add
inc
xchg
cs
mov
mov
cld
and
mov
push
jmp
bound
movs
(bad)
(bad)
cmp
jne
push
jmp
rol
push
add
dec
mov
dec
jmp
xlat
jb
and
inc
rol
push
dec
dec
(bad)
test
mov
lock
or
sub
ja
test
inc
push
sub
jbe
adc
mov
out
inc
jle
retf
mov
push
mov
enter
jo
or
rol
dec
jne
xchg
and
nop
nop
je
and
add
nop
jmp
dec
sub
fiadd
popf
cmp
dec
dec
pop
add
es
shl
adc
and
inc
add
mov
mov
inc
mov
xchg
sbb
cld
cmps
loope
mov
cld
ret
jg
or
sub
stc
add
neg
xor
inc
les
out
dec
sbb
jmp
jnp
jle
sub
jge
fdivr
push
inc
push
add
out
dec
xchg
adc
fcomp
data16
adc
add
popf
cmp
jge
push
out
inc
ins
inc
or
push
mov
scas
sbb
cld
adc
aad
pop
mov
daa
cld
adc
cli
dec
xor
inc
xor
lea
mov
mov
inc
ret
popf
(bad)
cmc
or
retf
and
js
pop
lods
or
iret
nop
push
cli
jmp
inc
sub
stos
inc
and
sete
sbb
mov
cmps
mov
call
jl
fiadd
and
or
inc
(bad)
popa
mov
fsubr
mov
mov
repnz
in
xor
mov
movzx
jmp
aas
inc
add
cmp
test
pop
or
jnp
sbb
jne
xor
out
jne
xor
mov
ja
adc
sbb
adc
(bad)
jl
inc
push
or
xor
sbb
aas
xor
adc
sub
fwait
mov
sub
xor
cmp
push
sbb
sub
cmp
cmp
je
sub
mov
jne
test
or
retf
add
or
pop
jl
loope
gs
push
mov
fisubr
gs
fnstcw
and
test
add
mov
(bad)
lods
call
daa
and
js
enter
ret
push
addr16
daa
xchg
inc
add
test
pop
cmp
add
rol
add
or
sbb
add
imul
out
and
adc
add
xor
jmp
mov
int3
jno
call
adc
mov
test
dec
lock
test
cmp
in
mov
je
add
repnz
lea
jmp
movsx
sub
leave
call
add
cmp
xor
pop
mov
dec
dec
mov
and
test
sub
jle
mov
mov
js
xlat
cmp
je
pop
movs
push
sub
adc
test
pop
dec
arpl
inc
jne
scas
xchg
mov
push
outs
sbb
pushf
push
xor
cmp
sbb
dec
jecxz
dec
cli
dec
gs
sbb
dec
pop
pop
fwait
jg
dec
je
mov
mov
sub
sbb
xor
add
int3
mov
jge
fcom
lock
add
ins
nop
inc
push
stos
cmp
je
je
adc
cmp
sub
xchg
or
and
rol
adc
adc
inc
sbb
retf
adc
mov
ret
jbe
ins
add
adc
pop
sub
les
mov
inc
add
add
nop
xchg
ror
test
add
pop
cld
cmp
repz
push
out
jmp
and
cmp
jae
sbb
mov
mov
pushw
ror
and
out
inc
pusha
mov
inc
jmp
adc
shl
mov
or
jae
sbb
adc
mov
enter
sbb
mov
mov
or
jb
add
addr16
sbb
imul
jns
push
cmps
fidivr
es
call
and
push
test
dec
sbb
push
dec
scas
cmovns
(bad)
or
lock
xor
xor
fisttp
cmp
add
(bad)
or
mov
mov
xor
ror
cmp
shl
(bad)
js
push
sbb
mov
sbb
push
mov
mov
push
cmp
adc
xor
and
dec
aaa
mov
popa
mov
sub
pusha
and
je
push
dec
daa
dec
adc
pushf
add
jae
movs
jne
sbb
jb
pop
fprem
adc
mov
mov
adc
jmp
or
into
push
jae
jl
mov
and
aaa
inc
dec
push
inc
loope
mov
inc
in
sbb
shl
sar
or
mov
dec
adc
jmp
xor
jae
jmp
sub
sub
hlt
les
push
jo
cmp
pop
adc
scas
mov
sbb
add
inc
jae
inc
data16
stos
add
nop
shl
imul
xchg
add
jns
cld
dec
and
sbb
sub
sub
sbb
mov
mov
add
scas
rcl
pop
add
repz
sub
bound
jmp
cmp
pop
fld
pop
enter
jecxz
or
and
xor
rcl
test
xor
pop
or
cmp
movs
int3
ror
ja
sub
call
xchg
ins
adc
pop
mov
rcl
das
cs
sbb
ins
pop
(bad)
jl
aas
jno
cmc
jbe
mov
push
(bad)
jns
mov
adc
push
dec
mov
inc
adc
inc
inc
inc
in
pop
adc
(bad)
cmp
mov
jmp
xlat
dec
cmp
add
dec
mov
xchg
out
nop
inc
inc
inc
or
jns
sub
or
inc
arpl
sbb
shl
mov
dec
pop
rcl
dec
rol
add
xor
and
xchg
or
arpl
jae
sbb
push
push
adc
in
adc
dec
and
cdq
mov
push
xor
nop
sbb
jecxz
in
ins
mov
inc
shl
mov
add
mov
add
add
push
and
or
push
pop
in
(bad)
mov
leave
adc
jge
shl
dec
daa
inc
mov
mov
rol
jno
aad
jp
mov
rcr
dec
imul
ins
or
rcr
dec
cmps
sub
inc
push
sub
arpl
adc
sar
or
pop
mov
push
sbb
jmp
and
xchg
fdivr
fwait
aam
shr
imul
adc
pop
enter
fwait
ss
out
sub
aam
les
xchg
or
push
mov
icebp
mov
les
mov
xor
ret
xor
mov
and
je
mov
addr16
xchg
ss
(bad)
shr
mov
ret
and
js
jecxz
push
cmp
dec
cmp
sahf
cmp
jne
xor
and
shr
mov
shl
push
mov
sub
add
leave
shl
mov
test
and
sub
pop
pop
ins
adc
sbb
mov
mov
ins
and
les
scas
adc
fmul
les
push
mov
fadd
dec
and
xor
xor
mov
cmp
inc
xor
pop
sbb
out
and
sub
and
xchg
dec
aad
sub
xlat
ret
adc
or
lock
ror
(bad)
push
retf
and
push
aas
push
inc
push
lds
cmps
xchg
in
push
pop
fst
fcmovu
mov
fs
test
call
dec
loopne
retf
int3
mov
aam
imul
(bad)
mov
sub
retf
xor
mov
pop
imul
inc
out
mov
pop
shl
int3
and
adc
sbb
pop
ja
stc
neg
in
hlt
pop
es
movs
mov
pop
mov
rcl
cmp
nop
inc
mov
inc
push
lods
test
aas
rol
adc
add
shr
push
push
frstor
pop
loop
or
mov
xchg
inc
mov
adc
lea
aas
add
loope
mov
(bad)
mov
mov
cmp
and
movs
cmp
ss
push
call
push
sbb
pop
or
int3
inc
pop
or
and
push
addr16
push
mov
cmp
mov
cwde
and
jbe
mov
or
inc
xor
sub
jae
lea
sahf
push
inc
or
pusha
xor
rcl
cvtdq2ps
aam
loop
sub
pop
es
or
add
adc
sub
add
mov
popa
push
xchg
lods
push
loope
pop
pop
sti
ds
push
push
xor
dec
xchg
popa
or
push
ins
and
adc
repnz
jg
add
adc
(bad)
or
push
and
dec
xchg
adc
ret
loopne
or
or
jbe
dec
mov
rol
inc
adc
push
inc
sub
add
pop
nop
int
div
push
adc
mov
add
and
or
xor
adc
pop
or
sar
stos
or
push
enter
shl
adc
mov
mov
push
jns
push
and
adc
push
sahf
sub
into
xchg
lahf
adc
fs
xchg
jbe
jne
cmp
ja
(bad)
adc
adc
jmp
(bad)
mov
outs
outs
push
or
cs
adc
jbe
(bad)
ins
or
and
lods
adc
xor
loope
ins
cmp
es
adc
add
adc
fistp
nop
mov
add
lea
pop
test
data16
(bad)
add
xchg
xor
xor
cmp
js
or
out
loopne
icebp
push
dec
adc
fdiv
loopne
ins
rcl
imul
push
adc
sub
jne
fs
or
add
cwde
push
mov
imul
xchg
or
jns
lahf
or
or
int3
cmp
mov
nop
fcomp
std
into
test
add
jmp
and
fsubrp
movs
cmp
or
fdiv
jno
adc
fwait
nop
hlt
xchg
adc
into
mov
jne
lock
ins
(bad)
mov
loope
ror
int3
ins
push
mov
adc
lock
test
movs
hlt
mul
inc
or
inc
sub
out
int
mov
adc
adc
inc
push
mov
fs
and
fst
or
(bad)
mov
push
je
pop
adc
data16
xor
adc
jbe
fs
les
mov
movs
mov
test
(bad)
out
stos
js
sbb
and
push
mov
add
xor
cmp
fcmovbe
sub
das
adc
das
xchg
outs
jl
(bad)
jmp
pop
or
bound
xor
cwde
jae
ins
mov
in
jecxz
pop
jae
jae
or
mov
sbb
xchg
lock
fisub
jo
mov
and
popf
fadd
add
mov
pop
xchg
push
(bad)
pusha
or
push
jb
xor
and
cmps
and
inc
jl
pop
add
xlat
js
addr16
addr16
enter
and
push
cmp
and
rol
inc
clc
dec
or
mov
jb
jb
sbb
adc
mov
div
sbb
aad
js
jae
inc
ins
add
pop
pusha
sbb
mov
mov
daa
and
loope
jne
jb
pop
xor
nop
fadd
outs
adc
adc
or
sbb
jo
xchg
push
inc
sti
mov
sub
(bad)
sbb
pushf
mov
test
jg
pushf
rcr
pop
or
fdivr
gs
sub
bndstx
pop
xchg
push
inc
dec
dec
jo
dec
mov
or
xlat
jb
adc
loop
add
and
(bad)
js
leave
mov
push
pop
pop
fst
lods
mov
out
int3
pop
aaa
push
js
dec
std
mov
or
cmp
pop
sub
or
and
je
mov
push
or
sub
cmp
pop
push
ss
xchg
cdq
xor
and
push
adc
sbb
sbb
pop
imul
inc
xchg
(bad)
dec
pop
js
shl
stos
adc
xlat
add
es
(bad)
(bad)
jo
pop
pushf
adc
mov
dec
icebp
mov
xchg
rcr
mov
shr
fs
pop
dec
inc
mov
in
jbe
inc
jae
mov
femms
dec
pop
jbe
inc
bound
cmps
mov
and
lock
mov
imul
and
cmp
cmp
jo
dec
and
inc
ror
xchg
push
popf
push
pop
popa
les
out
jno
and
sbb
test
push
pop
stos
sub
cmp
dec
daa
movs
cmps
int3
jp
fist
and
lock
adc
cwde
ret
xlat
cs
ss
in
les
int3
push
add
add
jns
adc
jl
ds
fsub
jnp
push
jb
mov
loop
popf
stos
inc
jmp
or
jbe
pop
xor
or
jg
mov
push
test
pop
popa
jl
mov
pop
add
pop
push
push
(bad)
xchg
ss
dec
aam
pop
scas
and
imul
jmp
or
jbe
pop
and
aaa
cmp
push
xchg
and
leave
shr
or
add
inc
add
daa
and
rol
nop
ja
ror
jne
sbb
mov
aam
sbb
out
push
xor
add
mov
in
sahf
and
add
cmp
or
call
loope
call
cmp
test
inc
fld
std
push
sub
jge
inc
add
push
fwait
sub
push
fistp
xlat
cwde
pop
pop
add
pop
adc
push
inc
sbb
and
pop
aaa
adc
and
adc
pop
nop
or
inc
icebp
mov
push
dec
add
loop
sbb
out
push
mov
inc
hlt
mov
adc
inc
add
ror
cmp
mov
pop
sub
mov
sub
and
mov
or
adc
cld
xchg
xchg
sbb
push
ret
and
xchg
add
div
pop
push
mov
xchg
pop
add
push
jmp
sub
xlat
push
sbb
jge
lock
test
mov
idiv
inc
mov
push
(bad)
movs
pand
push
cmps
jge
or
push
push
inc
sub
jg
hlt
repnz
test
cs
jb
adc
aas
push
movs
shr
lock
xchg
adc
out
jne
aam
outs
dec
mov
lock
sbb
jp
xchg
mov
sbb
ins
out
inc
mov
mov
push
stos
push
iret
in
rcr
gs
ins
push
mov
add
jno
jnp
dec
pop
cmp
dec
lock
or
retf
test
test
push
movs
mov
adc
lods
push
xchg
fs
dec
sbb
pop
pop
mov
xlat
and
push
or
ficomp
push
nop
bt
test
rcr
xlat
push
adc
adc
push
enter
cmp
fbstp
xchg
pop
add
mov
push
and
pop
adc
dec
jmp
mov
in
adc
dec
sbb
popa
ins
out
push
and
cmp
movs
and
cs
mov
dec
stos
mov
jp
push
cmovb
icebp
repnz
lds
mov
fild
in
adc
fs
in
sbb
sbb
and
mul
aam
ins
lds
or
jl
mov
in
fdivr
lahf
mov
or
in
dec
dec
je
adc
loop
dec
cmc
popf
dec
call
push
xor
jecxz
les
mov
sar
and
or
jnp
lds
push
rol
push
stos
sub
pop
jge
sbb
push
jl
aad
push
lods
aad
ror
mov
fdiv
test
push
inc
popf
or
mov
dec
cmp
dec
fcomp
pxor
xchg
test
push
movs
fcom
retf
pop
add
and
loopne
aad
lods
cmps
aas
or
mov
push
enter
fsub
xor
pop
lods
adc
cmp
test
adc
arpl
pop
aam
clc
jl
push
sub
sbb
test
dec
repnz
aaa
push
je
fadd
add
popf
adc
mov
pusha
imul
jmp
fidiv
pop
add
sbb
adc
dec
pop
mov
adc
mov
xor
sub
add
mov
xor
hlt
pop
and
js
(bad)
pop
test
or
and
pop
fs
dec
hlt
rcr
dec
cld
or
leave
out
fisttp
and
loopne
movs
icebp
scas
ins
adc
clc
push
mov
jmp
xchg
cmp
adc
fistp
cld
push
and
pop
lea
cmovle
mov
xchg
push
mov
cli
pop
or
call
dec
pop
inc
ss
loop
or
test
mov
add
adc
clc
cli
xor
clc
xor
jecxz
jecxz
or
sbb
popf
ins
jae
cld
dec
sub
mov
xchg
in
or
jnp
xor
cwde
push
les
adc
pop
push
out
mov
push
mov
hlt
cmc
pop
popf
int
lock
pusha
out
jmp
jo
out
or
or
ds
out
scas
pop
mov
or
and
aam
ret
add
inc
jmp
jo
fcom
pop
enter
or
xchg
int3
in
sub
gs
nop
in
xchg
xchg
xchg
mov
jnp
mov
pop
sbb
cmp
sub
dec
aad
outs
iret
ins
push
lods
outs
idiv
test
imul
cmp
sub
pusha
jmp
pslld
mov
in
jbe
pop
cmp
outs
cwde
imul
adc
(bad)
call
inc
addr16
cmp
(bad)
push
cmp
dec
data16
mov
jns
inc
inc
mov
out
sbb
jb
lods
dec
mov
pop
fwait
int3
pop
mov
jg
out
jb
xchg
jmp
push
adc
push
mov
pop
xor
call
test
add
sub
add
or
mov
into
stos
xor
mov
cs
xchg
xchg
dec
ss
shr
push
out
add
add
shr
es
(bad)
mov
lock
lock
mov
stos
add
sbb
sub
push
push
test
pop
rcr
es
cmp
dec
lock
push
add
jmp
repnz
mov
shl
cld
push
sub
cmp
sub
pop
adc
xchg
lods
hlt
mov
or
jmp
div
cwde
push
(bad)
repz
push
and
adc
push
mov
mov
lock
sbb
sbb
xor
fsub
cmp
or
outs
xchg
ins
inc
aam
xchg
jg
xor
daa
or
ins
out
cmp
push
pushf
dec
int
loope
lea
fisttp
xor
add
out
or
aaa
dec
cmps
or
jae
call
cmp
push
jo
jmp
fs
push
and
xchg
out
inc
xchg
nop
fs
mov
mul
jo
pop
pop
xor
jne
sub
fbld
and
push
in
mov
or
repz
xor
(bad)
not
jge
or
push
xor
and
pop
pop
rcl
xchg
and
fcom
loope
dec
cld
cmp
scas
adc
imul
jb
shl
inc
or
pop
repnz
dec
xchg
mov
or
inc
cmp
mov
inc
repnz
sti
add
call
hlt
cmp
cwde
cs
sbb
sahf
xor
shl
call
test
out
jns
xor
jnp
nop
push
mov
dec
fisttp
xor
cmp
add
sbb
arpl
outs
jbe
jl
jbe
inc
das
and
cmp
xor
in
mov
clc
test
mov
push
mov
or
push
add
sub
mov
inc
xchg
nop
ja
jbe
mov
pop
push
xlat
mov
nop
pop
aam
or
aaa
pop
aaa
sub
shr
icebp
pop
xchg
jl
push
add
add
cwde
dec
pop
mov
lods
or
sub
xor
adc
and
dec
or
inc
push
xchg
push
jbe
xchg
add
xchg
cmp
inc
add
cmp
ret
shr
push
pop
ins
loope
push
aaa
or
inc
adc
test
and
clc
pop
or
adc
ret
pop
sub
loope
adc
and
daa
xor
add
mov
dec
fs
mov
push
cmp
lahf
dec
push
js
and
pop
mov
push
mov
push
sub
sbb
cs
pusha
or
dec
xor
mov
xchg
xor
or
jae
or
xchg
cwde
push
fild
add
ret
xchg
gs
call
jge
xchg
mov
and
sbb
retf
enter
adc
repnz
sbb
sub
mov
sub
rcl
and
outs
imul
sbb
push
and
fcmovbe
add
adc
ds
sbb
cmp
ret
push
sbb
mov
pop
and
or
xchg
scas
pcmpeqb
mov
gs
add
idiv
les
mov
add
xchg
adc
add
outs
fiadd
or
jmp
mov
(bad)
sbb
pop
xchg
bound
cmp
stos
fwait
cmp
sbb
mov
es
or
add
pop
add
cmps
imul
inc
ror
bound
push
or
xor
ins
push
and
sub
lock
popa
pop
aas
mov
mov
call
adc
imul
imul
sbb
outs
push
sub
dec
imul
jl
je
cmps
sbb
dec
pop
jb
js
mov
dec
sub
mov
inc
sbb
pushf
sbb
ins
jbe
and
sub
mov
mov
dec
jne
shl
aaa
movs
dec
or
sub
push
push
jmp
adc
sub
pop
jmp
or
sti
inc
js
mov
in
(bad)
sub
daa
push
sub
xor
repz
or
sar
and
mov
sbb
xchg
push
scas
bound
rol
mov
or
lock
into
loope
imul
lea
addr16
adc
xchg
ins
clc
scas
add
and
cmp
push
fld
inc
add
pop
fldcw
mov
je
jmp
(bad)
bsr
mov
xor
je
jae
fs
mov
adc
jae
sub
or
push
push
or
xchg
mul
in
push
adc
jne
jbe
scas
and
gs
jbe
inc
sub
ja
xor
sbb
js
mov
add
cmp
mov
pop
movs
xchg
jo
sar
ror
dec
in
xor
adc
jp
clc
jns
cmp
jnp
and
jnp
das
xchg
movs
hlt
int3
inc
lock
movs
repnz
sub
das
pop
inc
scas
xchg
in
int
xor
jne
jne
sub
jge
jge
xchg
jl
dec
jle
jle
jle
rcl
or
add
ret
mov
push
mov
(bad)
sar
add
adc
pop
add
mov
retf
fcomp
push
or
mov
sub
fiadd
sub
sub
add
clc
sub
push
popf
ins
cmp
cmp
inc
(bad)
ja
js
inc
int3
mov
add
push
fnstcw
pusha
aas
movs
push
aam
sbb
add
adc
sbb
bound
stos
dec
icebp
and
test
inc
imul
pop
mov
icebp
or
jno
xor
rcr
jno
and
dec
aam
outs
jp
aaa
push
and
je
or
inc
retf
jmp
popa
fwait
pop
test
sar
pop
sbb
inc
cmp
mov
cmp
fwait
pop
add
lea
int
test
in
dec
jmp
pop
enter
push
or
and
adc
retf
sbb
push
cmps
push
jb
(bad)
mov
mov
imul
adc
xchg
mov
dec
aaa
and
xchg
push
pusha
add
mov
mov
pop
push
mov
pop
daa
cmps
add
dec
nop
and
dec
and
test
leave
push
test
and
enter
or
pop
xor
cmps
das
add
rcr
repz
or
push
ss
aaa
jmp
test
mov
xchg
sub
test
out
push
inc
iret
mov
aaa
in
test
push
inc
inc
add
sbb
pop
lahf
adc
test
mov
sahf
adc
cmp
adc
xchg
and
xchg
add
cwde
dec
push
xchg
das
sbb
scas
in
sbb
and
push
jb
xchg
and
jbe
das
leave
push
test
inc
add
nop
pop
inc
loop
enter
and
ja
mov
and
test
push
test
inc
xchg
lods
dec
pop
or
(bad)
js
mov
das
adc
sub
add
xchg
sbb
ins
dec
aaa
sbb
or
mov
and
and
and
enter
in
xchg
pop
sbb
mov
add
sub
movs
xor
push
jo
mov
add
popa
adc
pop
arpl
fild
and
sbb
adc
pop
leave
or
addr16
add
jp
dec
in
jns
mov
xor
pop
jb
adc
xchg
or
push
les
xor
pop
retf
jb
add
xor
push
jb
pop
and
js
sub
stos
in
pop
jl
jg
jb
and
inc
dec
pop
leave
add
lea
inc
cmps
in
cmp
test
lea
cs
sbb
lea
xor
or
push
jb
out
lea
add
inc
fild
aas
fld
add
add
jns
mov
and
sub
(bad)
pop
dec
in
sub
or
jp
sub
sub
jp
cmp
sbb
adc
nop
sbb
jns
ror
add
add
pusha
jo
dec
(bad)
adc
and
es
jae
and
jmp
dec
imul
and
xor
aam
and
mov
outs
cmp
aaa
adc
mov
or
mov
(bad)
fsubr
push
push
push
pop
push
ins
adc
push
sbb
call
jns
in
mov
test
mov
(bad)
pop
call
je
test
shl
div
sbb
sbb
sbb
pusha
mov
lods
xor
(bad)
jle
jl
sbb
xchg
mov
xchg
inc
sbb
or
inc
jl
sbb
mov
cs
jl
inc
cmp
lea
and
aaa
rcl
mov
and
aaa
jecxz
(bad)
jb
and
push
lock
test
shr
ret
or
cmps
xchg
popf
test
or
and
pusha
sbb
pop
xchg
xchg
hlt
cmps
call
cdq
mov
mov
mov
pop
push
jmp
add
fiadd
jo
(bad)
test
aas
adc
jle
emms
imul
lock
dec
mov
adc
or
pop
pushf
out
shr
fild
in
sti
hlt
xor
jne
icebp
push
jmp
mov
and
and
jle
push
adc
adc
pop
movs
loopne
xor
in
add
loopne
add
xor
add
mov
mov
imul
lahf
add
rol
pop
jb
cmp
pop
adc
daa
or
push
outs
push
jp
cmp
cli
sub
xchg
or
mov
dec
xchg
jns
repz
fs
push
pop
repz
test
mov
iret
out
inc
xchg
jle
push
xor
cmp
cmp
pop
mov
int3
rcl
fneni(8087
jmp
stc
inc
xchg
icebp
sahf
out
or
enter
push
call
dec
or
mov
adc
xor
pop
or
sub
push
jb
pop
int
xlat
inc
cli
retf
(bad)
data16
jl
pop
in
sbb
add
in
or
sbb
movlps
adc
jb
or
sub
movs
clc
jae
aam
cmp
add
pop
pop
add
rol
adc
jp
jmp
xor
por
adc
jmp
or
mov
jmp
jae
or
cmp
jmp
cmp
or
hlt
xor
(bad)
(bad)
or
jmp
sbb
sbb
jmp
(bad)
(bad)
sbb
push
sbb
or
(bad)
xor
or
pop
pusha
mov
dec
xor
cmp
gs
mov
test
xor
cmc
or
pop
das
inc
cwde
mov
cmp
push
sbb
jns
cmp
or
call
pop
sbb
sahf
out
cmp
es
imul
hlt
rcr
scas
and
dec
dec
lahf
out
jnp
push
sbb
cld
xchg
push
shl
xchg
mov
hlt
pop
and
jmp
dec
xchg
aam
add
and
xchg
pop
add
inc
xchg
fild
add
jnp
and
jo
icebp
jbe
xor
scas
adc
or
sbb
ret
sbb
(bad)
fstp
push
mov
xor
int
push
adc
mov
in
inc
(bad)
cmp
pop
sbb
jno
enter
xor
push
enter
cmp
sbb
js
xor
shl
sbb
sbb
push
push
inc
pop
add
sbb
sub
hlt
sub
add
jmp
sbb
cmp
and
call
push
daa
lds
mov
pop
imul
fsubr
jbe
cmp
lods
inc
or
push
push
mov
daa
movs
paddb
inc
in
adc
inc
cmps
push
mov
mov
jne
jae
cmp
xchg
daa
jnp
nop
jbe
sub
or
js
add
ja
cs
jne
ret
dec
jae
jnp
cs
fist
adc
and
fnstenv
loop
test
cmp
pop
and
fs
not
push
scas
mov
mov
(bad)
mov
cmp
ds
rcr
dec
mov
jne
jl
mov
cwde
lahf
cmps
lods
mov
iret
leave
repz
leave
rcl
in
ins
leave
repz
fsubp
mov
out
aam
cli
xchg
fcom
sbb
pop
stos
lea
aaa
sbb
xor
nop
add
adc
sbb
push
or
jae
movs
out
lock
test
pop
push
pop
xchg
div
pop
sub
test
inc
ss
jmp
pop
sub
(bad)
xchg
push
pop
ret
xor
imul
jle
sbb
pop
push
adc
or
loopne
inc
jmp
add
add
retf
nop
and
xor
movs
loopne
sar
pop
sub
or
jae
arpl
inc
pop
cmp
ror
mov
test
push
mov
test
mov
xchg
pop
ja
pusha
mov
adc
jecxz
xchg
mov
lahf
out
les
lahf
xchg
int
xor
add
fwait
call
jnp
cmp
out
ret
out
popf
das
push
stc
cmp
repz
(bad)
in
or
movs
sub
pop
xchg
dec
repnz
jmp
imul
add
je
sub
je
sub
je
push
or
cmps
pusha
sub
jl
mov
inc
(bad)
push
xor
daa
dec
imul
or
sbb
int3
pushf
dec
inc
add
push
leave
push
or
add
add
nop
dec
scas
or
push
out
or
cmp
fld
inc
fstp
fwait
push
xchg
pushf
push
aas
cmp
sub
addr16
push
pop
sub
gs
inc
dec
icebp
push
mov
pop
and
in
adc
pop
push
mov
and
enter
mov
loope
fs
pop
mov
mov
fcom
and
mov
adc
or
loope
lock
loopne
cmp
int
adc
leave
js
mov
test
adc
and
mov
or
xor
jo
hlt
mov
add
add
sbb
and
push
imul
push
and
cld
ror
push
or
dec
cmps
retf
or
mov
sub
fistp
mov
imul
add
shl
mov
sbb
daa
das
das
imul
mov
dec
cmp
add
inc
test
push
add
adc
jae
cmps
or
mov
mov
xor
not
cld
adc
mov
adc
jmp
sub
ins
cmp
mov
mov
fisubr
cs
mov
pop
inc
hlt
xor
push
imul
push
sub
push
jg
pop
into
adc
mov
xchg
lods
jns
ins
push
push
ret
add
push
add
out
je
shl
add
or
pop
add
xchg
rol
dec
cmp
jmp
pop
fstp
sbb
mov
imul
cmp
mov
out
fidivr
enter
daa
mov
dec
push
xchg
mov
pop
dec
jne
jmp
add
xchg
mov
and
lock
dec
add
mov
arpl
out
dec
lea
and
clc
cmp
sbb
mov
or
in
or
mov
fistp
dec
jb
inc
jl
out
cld
and
out
movs
sub
rol
adc
pusha
and
adc
jle
add
mov
mov
add
sbb
adc
push
clc
add
ins
loopne
ror
(bad)
or
dec
and
jmp
in
dec
add
pop
bound
inc
daa
popf
les
add
pop
cld
add
sbb
cdq
hlt
test
adc
xlat
mov
jmp
push
daa
mov
lods
les
clc
or
sti
mov
sub
sbb
and
and
push
aad
or
ss
int
jecxz
adc
inc
mov
mov
mov
push
mov
push
and
cld
fldcw
ret
mov
(bad)
fldcw
retf
enter
retf
retf
cmps
mov
aas
add
int3
mov
test
add
jo
imul
pop
test
in
sbb
out
mov
pop
lods
lahf
and
sbb
xchg
retf
jne
xor
sbb
mov
push
xor
inc
add
inc
or
jmp
sub
push
(bad)
repnz
mov
popw
pop
inc
pop
frstor
sahf
out
das
inc
push
push
xchg
mov
pop
mov
rol
inc
lea
cld
mov
and
pop
mov
cdq
or
jnp
push
or
jne
std
xchg
sbb
xchg
push
jecxz
mov
add
mov
xlat
mov
xchg
sbb
pop
add
gs
mov
xchg
pushf
in
pop
add
mul
dec
jno
test
cld
test
iret
(bad)
push
add
push
sub
cmp
repz
push
mov
push
xor
and
ins
lds
into
mov
lahf
or
mov
and
nop
adc
inc
fstp
cmp
or
sbb
inc
ins
test
jb
push
cmp
iret
and
xchg
dec
dec
ret
and
stos
jns
out
sub
clc
stos
push
adc
out
sahf
out
pop
outs
sbb
fwait
push
sub
mov
add
xchg
fadd
fst
pop
xchg
adc
push
pop
pop
and
ins
and
cmc
or
inc
push
sub
or
dec
dec
jb
and
and
jge
rol
or
lods
repz
fwait
pop
sub
inc
push
fs
repz
mov
adc
ins
fnstenv
pop
mov
inc
in
(bad)
jb
jecxz
fild
adc
mov
sbb
xchg
retf
cmp
add
dec
enter
push
call
dec
fcomp
cmp
and
in
not
pop
cmp
fwait
jge
scas
daa
sub
cmp
repnz
repz
cdq
stos
ret
in
and
fldcw
sbb
sbb
mov
dec
add
sub
sub
push
enter
or
mov
sub
bound
je
pushf
nop
stos
out
hlt
sbb
xchg
sbb
or
push
jmp
cld
cmpxchg
mov
jns
fwait
das
cmp
dec
push
pop
je
jne
jns
mov
test
test
movs
inc
adc
sub
and
rcl
mov
or
push
jo
mov
push
test
mov
(bad)
xchg
pushf
in
sbb
jns
in
cmp
inc
iret
repz
push
push
aaa
jl
mov
cmp
add
pop
pop
jno
arpl
shl
jmp
push
popa
es
mov
mov
mov
pop
push
inc
mov
fs
scas
xchg
pusha
or
add
and
xor
dec
dec
xchg
sbb
jnp
clc
fadd
dec
pop
data16
out
ins
jle
movs
mov
mov
cmp
repz
push
imul
rol
movs
jno
dec
and
leave
ins
push
push
es
fild
add
fnstsw
sub
sub
sbb
xchg
pop
inc
pop
cmp
mov
lea
sahf
mov
jns
mov
fsubr
sti
inc
or
sahf
out
push
push
xor
xchg
or
loopne
lds
pushf
sub
sub
ds
loopne
and
jo
or
add
ins
xchg
sbb
mov
js
inc
adc
out
and
inc
mov
sahf
out
xchg
popf
push
mov
jecxz
iret
rep
out
adc
es
aas
push
push
arpl
adc
call
mov
movs
mov
in
sub
adc
sub
inc
stos
retf
inc
jb
and
dec
and
das
xor
adc
rcr
dec
nop
and
(bad)
sub
mov
enter
adc
ficomp
mov
lds
fsub
jns
jns
or
and
cmp
in
mov
dec
jns
mov
enter
mov
jb
fnsave
or
dec
sbb
inc
or
push
pop
test
dec
pop
adc
sbb
in
pop
adc
mov
into
mov
push
out
out
out
adc
pop
jno
xchg
ja
adc
lods
adc
(bad)
adc
sub
test
mov
cdq
and
adc
and
gs
or
sub
js
jecxz
mov
cld
push
in
loop
and
test
out
faddp
push
loopne
std
sbb
cmp
out
jno
lods
(bad)
fadd
xor
rol
xor
xor
and
push
aaa
inc
or
das
pop
or
rol
sub
out
or
and
js
adc
pop
ins
and
dec
dec
repnz
lock
or
lds
rcl
ret
push
sahf
out
iret
add
popa
jns
out
je
cwde
test
in
push
mov
mov
xchg
mov
test
or
add
cdq
add
inc
nop
and
jbe
or
or
mov
sbb
addr16
test
and
mov
pop
push
push
push
xor
mov
pop
jnp
sub
gs
dec
cmp
loope
jmp
adc
(bad)
sub
adc
add
adc
fs
push
and
xchg
xor
fmul
addr16
aaa
rcl
cld
test
mov
add
jmp
sub
jo
sub
fadd
lea
xor
sub
ret
sbb
inc
stos
push
cli
or
sahf
fadd
fst
push
jmp
xchg
les
adc
cmp
jecxz
rcl
fdiv
mov
ret
sbb
scas
mov
stos
shl
and
adc
movups
add
daa
in
and
or
sbb
xchg
sub
cmp
add
clc
je
jmp
cmp
cmp
sub
addr16
inc
cmp
jb
mov
inc
pop
shl
or
shl
leave
dec
push
and
sbb
or
and
cmp
ror
dec
mov
add
adc
(bad)
lds
shr
pop
jo
cmp
stos
add
into
push
jns
sub
xor
add
push
push
xor
mov
or
or
and
sbb
or
cmp
adc
add
push
pop
lahf
int
arpl
je
jne
add
xchg
xor
pushf
dec
cs
add
and
pop
inc
or
or
push
sar
stc
dec
push
and
add
repnz
(bad)
jl
cmps
adc
jge
sub
add
sbb
test
add
cmps
adc
pop
xor
push
cmp
add
aaa
shl
icebp
jl
push
pop
jmp
adc
nop
dec
mov
mov
aaa
int3
add
jnp
nop
nop
add
das
sub
inc
mov
(bad)
call
imul
dec
retf
or
call
xchg
fist
dec
cmp
mov
adc
mov
add
pusha
fs
movs
cmp
push
inc
mov
and
xor
movs
sbb
js
or
test
mov
nop
xchg
add
cwde
pushf
push
sbb
add
pop
movs
mov
jns
or
dec
lods
jnp
pop
xor
mov
dec
push
imul
adc
xor
sti
jmp
icebp
mov
loope
adc
jmp
outs
and
inc
push
push
mov
lods
adc
mov
mov
xchg
dec
fs
enter
inc
sub
xor
leave
xchg
out
mov
mov
fs
or
sbb
ret
fisub
les
repnz
fadd
sbb
xor
sbb
push
(bad)
sbb
repnz
dec
mov
add
loopne
repnz
(bad)
dec
add
js
repnz
repnz
adc
js
cmp
sahf
or
leave
adc
leave
inc
daa
cmp
and
retf
adc
sub
jo
jp
imul
mov
retf
inc
jecxz
sbb
cmps
mov
pop
ins
mov
sbb
pop
mov
or
sbb
adc
add
xor
sbb
pop
fwait
cli
cmp
pop
push
js
addps
shl
pop
xor
enter
jmp
mov
aad
sub
fsubr
je
mov
or
xchg
mov
nop
and
add
shr
test
adc
or
sbb
dec
xchg
(bad)
retf
add
inc
sub
sbb
mov
jmp
push
dec
or
push
mov
jmp
push
push
test
add
loopne
rol
fnstsw
push
aas
xchg
rol
pop
repnz
mov
in
push
pop
or
xor
push
adc
fild
fcomp
sub
aaa
aam
xor
or
or
inc
fdiv
nop
xlat
cmp
aam
dec
movs
push
imul
jo
dec
add
sub
xchg
xchg
pop
add
pop
aam
(bad)
aam
cmp
cmp
pop
pop
and
lods
add
aad
mov
test
cmp
ss
bnd
sbb
push
rol
or
inc
lds
jns
scas
push
(bad)
lods
das
cmp
push
and
das
mov
(bad)
mov
sbb
hlt
push
adc
and
add
sub
inc
das
cmps
xchg
and
inc
pop
sub
das
lods
push
push
dec
dec
jo
sub
jne
sbb
xor
jg
xlat
pop
adc
push
(bad)
sub
loopne
mov
xlat
push
sub
ins
pusha
add
add
sbb
in
add
or
push
push
push
leave
adc
xor
xor
add
push
jmp
outs
fdiv
xchg
or
xor
retf
sbb
fmul
xor
das
or
sbb
shl
das
xor
mov
and
xchg
dec
xor
push
nop
sahf
or
cmp
dec
sub
das
movs
inc
movs
lds
(bad)
cmp
das
push
ins
(bad)
in
pop
or
push
jmp
(bad)
pop
pop
ret
inc
xor
fcomp
fisub
cmp
xor
repnz
and
into
xchg
or
add
cmp
sbb
aad
xchg
dec
in
cmp
ss
scas
out
in
or
cmp
push
movups
movs
ins
mov
mov
and
dec
mov
and
and
cs
dec
jmp
push
dec
xor
push
xor
cmp
fld
push
xor
movs
pushf
adc
out
(bad)
enter
arpl
int3
inc
sahf
mov
add
pusha
iret
xchg
inc
sahf
enter
pusha
or
rcl
in
xor
rcl
jns
enter
inc
rcl
(bad)
in
rcr
xor
push
hlt
rcr
nop
daa
dec
sahf
inc
clc
add
sub
sahf
daa
dec
sahf
xchg
or
push
(bad)
mov
add
in
xlat
mov
dec
push
and
inc
cmp
fdivr
xor
and
ss
je
jno
add
fmul
imul
jb
xor
or
daa
fmulp
jo
(bad)
mov
js
xchg
push
fild
fsubp
cmp
add
sbb
mov
and
jecxz
ficom
or
fs
push
jb
fsubp
cs
or
mov
pop
xor
inc
das
push
clc
pop
fbld
push
push
pop
add
xchg
add
(bad)
xchg
push
mov
push
and
or
clc
mov
jge
mov
mov
pop
enter
jno
pop
loop
push
loopne
dec
and
loopne
push
test
or
or
pop
iret
out
das
pusha
leave
nop
or
adc
adc
dec
das
cmc
adc
push
add
adc
xchg
and
cmps
(bad)
adc
cmps
(bad)
loope
pop
push
and
add
push
loop
and
das
sbb
cdq
shl
add
cs
add
nop
pop
inc
mov
pop
xchg
or
(bad)
sbb
loop
mov
sbb
je
sbb
cmp
cmps
xor
push
jecxz
or
or
aaa
mov
pop
jecxz
push
add
fdiv
and
and
cmps
or
aaa
out
or
pop
xor
and
shl
stos
pusha
aaa
add
rol
mov
adc
aaa
add
jle
dec
sub
in
and
and
add
xor
inc
xor
out
pop
sbb
jne
adc
sub
jg
and
jb
sbb
cmp
fdivr
add
inc
fwait
ins
les
mov
mov
adc
and
jbe
push
adc
pop
fmul
loop
pop
push
movs
mov
jg
sbb
test
shl
inc
xor
jno
test
arpl
loope
cmp
fwait
adc
inc
test
jno
nop
pop
pusha
lds
cmp
je
xchg
daa
mov
pop
adc
cwde
fstp
push
out
sbb
xor
(bad)
jmp
mov
xor
sti
not
and
push
mov
stc
inc
mov
outs
jg
out
or
or
and
movs
inc
movs
xor
sub
inc
or
push
out
cmp
cmp
dec
sub
(bad)
in
adc
sbb
out
add
or
xor
xchg
or
dec
out
fstp
mov
test
xor
test
add
lahf
and
call
sub
push
sub
xor
inc
jns
imul
test
or
xor
movs
(bad)
jmp
retf
xor
adc
mov
inc
fnstenv
cmp
rol
dec
push
xlat
dec
aaa
loopne
xor
mov
retf
test
jns
adc
and
and
dec
sti
cmp
in
cmp
inc
test
cmp
aaa
retf
or
ins
adc
push
inc
aaa
dec
shr
pop
inc
inc
adc
dec
inc
xor
fstp
cmp
and
xchg
cmp
pop
mov
add
lea
fsubrp
je
push
cs
sub
loope
retf
xchg
jns
jg
and
ins
or
and
je
add
fdivp
in
fstp
mov
xchg
fstp
clc
push
xchg
out
nop
or
enter
push
mov
in
loopne
inc
loopne
loope
(bad)
in
loope
shr
sahf
cmp
push
hlt
loop
add
nop
outs
xchg
enter
xor
cmp
scas
jecxz
xor
mov
out
sub
mov
nop
daa
iret
xchg
shr
sub
out
and
xor
add
jmp
test
out
(bad)
jmp
cs
in
pop
xchg
cs
xor
fistp
sbb
cmc
in
shl
cdq
xchg
cs
inc
adc
mov
or
(bad)
movs
mov
adc
sbb
and
jo
(bad)
out
nop
nop
and
push
test
add
pusha
pop
jb
or
jmp
stos
and
or
sub
pop
add
das
add
and
es
lock
call
push
sub
push
lock
push
dec
outs
pusha
adc
daa
mov
push
adc
adc
add
adc
icebp
push
sub
or
rcr
das
and
sub
inc
(bad)
inc
add
dec
sub
das
pop
xor
pop
sbb
push
add
and
sbb
sbb
sub
jmp
repnz
sbb
adc
and
repnz
call
nop
mov
out
and
push
or
sbb
loop
add
shr
inc
lea
cdq
das
repz
jmp
pop
jecxz
push
xor
push
aaa
and
pop
adc
es
mov
or
xor
enter
repnz
and
inc
sub
fs
por
push
sub
mov
mov
sbb
aaa
cmp
in
mov
clts
inc
sub
cs
dec
pop
add
inc
dec
add
xchg
and
jb
adc
test
sbb
enter
xor
es
adc
rcl
mul
sub
repnz
mov
add
sahf
push
inc
xchg
inc
push
and
sbb
sub
or
adc
dec
jmp
or
in
adc
(bad)
cmc
sub
in
div
or
add
fstp
and
mov
test
sub
cs
push
int
add
lahf
pop
clc
add
pushf
add
(bad)
cmp
ret
mov
rcr
clc
fadd
and
or
and
add
add
ret
mov
pop
cmps
(bad)
pop
xor
jp
xchg
sbb
dec
int
xor
xor
enter
stc
sbb
loope
sub
mov
sub
add
aaa
add
dec
inc
adc
scas
int
les
jmp
sub
sbb
dec
pop
test
fild
cli
push
or
enter
xor
add
movs
dec
pop
fist
pop
pop
push
push
dec
xor
fisubr
mov
push
add
push
out
or
leave
fstp
jns
in
cld
xchg
sub
imul
dec
repnz
dec
ds
inc
sbb
mov
mov
in
or
out
add
xor
xchg
retf
mov
clc
xor
in
jns
call
popf
out
sub
adc
shl
cmp
adc
in
lea
in
lock
and
leave
sbb
out
jo
sub
sbb
mov
add
shl
icebp
xor
mov
add
div
add
outs
xchg
lods
cld
aaa
adc
mov
sbb
or
adc
sub
pop
dec
push
xor
test
ja
mov
pop
push
std
inc
cmp
and
pop
std
push
sahf
push
test
pusha
or
(bad)
enter
or
cmp
dec
(bad)
dec
dec
add
or
or
sar
sub
add
pop
lods
dec
adc
int
or
xor
outs
imul
sbb
xchg
call
dec
gs
sub
and
or
xchg
mov
inc
mov
cmps
sub
jl
outs
or
sub
mov
adc
push
mov
rcr
push
leave
loopne
xor
ret
and
and
repnz
dec
add
adc
push
(bad)
dec
add
mov
xchg
or
inc
pop
leave
and
inc
sub
sbb
rol
outs
pop
leave
in
push
push
push
add
add
lods
hlt
ret
sub
add
xor
out
or
ins
or
daa
ret
sub
in
jmp
adc
sbb
or
aam
xchg
mov
sub
popa
and
addr16
fist
dec
add
mov
inc
jp
nop
push
clc
dec
movs
sub
out
xor
sti
xor
push
fadd
mov
lahf
and
or
retf
lock
push
xchg
dec
lock
sbb
dec
add
inc
in
std
inc
call
push
fmul
inc
fcom
push
or
and
adc
xlat
cmc
(bad)
lods
cmp
pop
cdq
pop
stos
nop
and
fwait
inc
pusha
or
scas
retf
pop
fcmovnb
pop
dec
mov
dec
inc
ja
mov
mov
inc
adc
inc
fmul
outs
push
adc
mov
bound
inc
sbb
in
popa
xor
add
add
inc
out
adc
ins
arpl
retf
mov
pop
mov
jmp
sahf
sub
test
mov
mov
and
rcr
jb
push
and
pop
cmp
jb
pop
jp
out
pusha
mov
jns
xchg
xchg
es
pop
mov
adc
shr
int
call
and
sbb
sbb
adc
sub
add
std
mov
mov
pop
mov
mov
sbb
cmps
xchg
cli
pop
push
add
add
jb
cmp
pop
add
cmps
push
sbb
cs
push
or
push
and
rcr
and
popa
mov
mov
adc
(bad)
jbe
cmps
jb
jnp
loope
adc
xchg
adc
sahf
jns
push
rcr
push
push
mov
sbb
dec
and
push
mov
inc
add
in
add
cmp
push
add
pushf
stos
inc
test
sbb
lods
movs
stos
adc
push
je
cmp
loop
push
or
jne
dec
dec
jae
jmp
or
popa
push
add
xlat
nop
inc
cmps
lock
call
(bad)
dec
int
jb
inc
or
mov
or
cmps
inc
push
dec
xor
cwde
cmp
push
pop
lods
push
sbb
adc
iret
repz
jo
xchg
pop
xor
sbb
pop
jne
pop
push
mov
mov
and
xchg
push
jl
nop
inc
push
cmp
jo
scas
ss
ins
inc
arpl
or
and
sub
arpl
jl
enter
lahf
add
or
push
pop
cmp
mov
fs
je
mov
out
fadd
dec
dec
or
push
and
clc
lea
sub
(bad)
retf
fld
pop
cmp
jo
stc
fisub
sub
or
mov
ins
mov
adc
(bad)
out
sbb
movs
mul
adc
inc
ins
aad
add
mov
and
or
xchg
dec
push
jo
(bad)
imul
dec
in
aad
push
or
xor
out
imul
jl
push
xor
or
outs
mov
push
sub
adc
mov
jne
xor
dec
sbb
and
or
imul
dec
pop
add
xchg
jo
fisub
es
dec
sbb
mov
pop
push
fsubr
enter
push
clc
daa
add
push
les
imul
sub
imul
fdivr
xor
sbb
xor
(bad)
push
and
xor
lods
xor
fnsave
or
outs
push
push
in
jge
mov
cmp
adc
push
cld
xchg
xchg
mov
push
nop
pop
jl
inc
adc
xor
cmp
cmp
ret
sub
call
mov
or
add
xchg
jns
cs
jno
dec
push
fucom
loopne
xor
adc
addr16
bound
fnstcw
dec
repz
jl
sar
gs
dec
sti
cmp
push
imul
jge
add
test
ins
inc
mov
cmp
ds
inc
push
hlt
adc
push
push
test
jo
push
fs
test
mov
sub
inc
imul
out
mov
pop
mov
mov
shl
jo
nop
dec
out
pushf
mov
push
add
sbb
pop
or
repnz
cld
fcmovnu
and
icebp
aad
or
pop
sub
sub
sbb
test
ss
adc
mov
aas
cld
imul
dec
fwait
lods
mov
or
jmp
popw
rcl
mov
push
popa
pop
(bad)
push
dec
clc
adc
cmp
sub
outs
cdq
xor
xchg
gs
inc
sbb
imul
clc
in
(bad)
push
adc
add
movs
mov
sub
leave
sbb
push
dec
xchg
gs
hlt
adc
and
mov
pop
add
mov
jo
mov
fldcw
push
or
popf
xchg
sbb
pop
je
mov
fld
mov
or
or
ins
js
add
mov
inc
or
and
aaa
push
or
sub
(bad)
adc
push
add
imul
pmuludq
es
and
pusha
movs
and
leave
pop
add
icebp
mov
jno
xlat
pop
bound
das
or
fdiv
pop
retf
mov
or
gs
sbb
test
aam
arpl
add
rol
dec
adc
mov
adc
(bad)
sub
scas
add
nop
mov
and
push
push
sbb
mov
mov
add
push
jne
bound
es
mov
mov
in
and
or
jmp
dec
push
ja
test
test
or
mov
shl
je
cmp
cmps
sbb
icebp
mov
pop
xchg
mov
jp
mov
xor
test
dec
inc
int3
arpl
pop
jl
and
pop
stos
add
or
add
pusha
xor
pusha
or
sbb
loope
lock
jg
dec
sub
push
jne
sahf
imul
push
adc
sbb
xor
and
jne
pushf
jo
mov
xchg
scas
or
add
es
sbb
xchg
push
mov
xchg
mov
lds
pop
xor
push
(bad)
sbb
mov
dec
sub
add
adc
cmps
popf
mov
sbb
sbb
add
rol
jnp
xchg
adc
sub
pop
nop
(bad)
or
ds
ins
adc
add
movs
cmps
fsubr
add
dec
repz
dec
in
pop
neg
in
loopne
and
push
pop
fs
xor
aas
jmp
jmp
mov
add
and
or
enter
jo
xchg
dec
stos
fs
rol
movs
cmp
pop
stos
ret
movs
aad
aas
sbb
or
sub
lahf
inc
iret
unpcklps
mov
inc
pop
bound
dec
mov
es
pusha
xor
push
cmps
add
pop
add
movs
popa
pop
test
mov
adc
fcmovnu
push
(bad)
mov
cmp
cld
sbb
xor
or
fld
js
popa
xchg
sub
and
aad
mov
and
xchg
or
pop
adc
push
int
mov
shl
or
test
xchg
test
sub
clc
int
std
and
and
push
inc
adc
aaa
and
ds
mov
add
or
cld
add
xor
not
in
adc
mov
push
push
adc
adc
push
mov
push
or
cmp
cld
pop
cld
clc
xchg
and
int
(bad)
cmp
outs
clc
sbb
rol
xlat
pushf
or
fnclex
ret
loope
mov
fld
aam
mov
ret
cs
sbb
xlat
lods
or
sub
or
inc
popa
ficomp
call
push
test
push
add
and
mov
push
add
js
push
cmps
mov
mov
mov
inc
sub
nop
xchg
add
inc
bound
push
xchg
push
cwde
pop
dec
or
sbb
sbb
add
cmps
add
add
enter
pop
or
add
pop
ins
adc
dec
fsub
jmp
lock
in
les
cmps
jns
ret
mov
aad
push
push
inc
xor
sub
adc
in
and
mov
bound
jmp
lea
inc
or
xor
add
xor
cld
cmp
jbe
inc
and
retf
ins
jg
inc
mov
lahf
or
sbb
imul
inc
adc
push
test
xchg
jo
adc
mov
xor
push
sbb
push
test
jns
nop
fcmovnbe
out
clc
jl
pop
sbb
push
push
clc
fwait
add
xchg
jg
adc
xlat
cmp
ja
popa
aaa
icebp
add
mov
aas
bound
out
add
inc
cs
jbe
sub
nop
mov
add
mov
xchg
xor
jge
sub
sub
jae
adc
mov
mov
add
pop
inc
inc
xchg
mov
pop
jb
sbb
or
xchg
xor
and
clc
cmp
in
or
pop
push
mov
push
jne
sbb
jmp
sbb
pop
xor
pop
sbb
aas
pusha
adc
sbb
mov
sub
(bad)
in
pop
or
mov
sbb
push
ja
jne
push
and
pop
jle
mov
and
shr
add
mov
cmp
inc
jae
mov
daa
inc
pop
movs
fnstsw
sbb
test
sub
adc
lds
xchg
mov
cs
push
mov
aas
fisttp
ret
nop
inc
xor
scas
(bad)
sbb
inc
(bad)
pop
adc
pop
mov
mov
in
sbb
adc
lds
in
out
lea
pop
jne
xor
xor
outs
sub
cmp
nop
pop
sbb
add
in
rol
rcr
pop
or
mov
pop
jne
push
sub
or
mov
mov
xchg
mov
push
ins
nop
js
or
movs
or
es
jmp
icebp
dec
das
lea
push
pushf
out
std
adc
cmp
xchg
sbb
and
pusha
push
and
inc
mov
xor
adc
add
in
adc
push
push
ret
inc
inc
ss
or
and
xchg
mov
xchg
mov
and
lods
je
ins
pop
aaa
push
or
(bad)
mov
cdq
and
inc
mov
and
add
ja
repnz
mov
inc
cmp
adc
jb
in
call
mov
push
mov
ret
jne
mov
leave
inc
add
out
dec
dec
arpl
in
or
imul
jnp
mov
inc
or
fistp
dec
fstp
shl
sahf
jne
retf
retf
push
add
and
push
mov
xchg
inc
lock
ret
sub
dec
sbb
sub
mov
jns
in
mov
test
jg
adc
pop
push
cmp
or
push
adc
pop
push
add
lds
mov
mov
and
imul
jnp
(bad)
xor
pop
clc
jle
movs
mov
inc
call
and
sbb
test
imul
mul
push
adc
clc
mov
pop
add
add
sbb
loopne
and
jnp
cld
cmps
mov
scas
dec
push
sbb
mov
enter
push
or
nop
xor
jl
dec
mov
cmp
test
fcmovne
jne
pop
mov
imul
imul
xchg
push
stos
fcom
aam
cwde
and
mov
or
inc
fsub
xor
mov
pop
hlt
popf
ror
sub
rcl
imul
push
pop
fwait
in
test
dec
ror
push
les
xchg
push
pop
cmp
pusha
cmp
movs
lea
mov
push
mov
push
or
push
or
lea
and
add
lods
shl
fadd
sbb
xor
or
push
xor
push
or
inc
add
in
arpl
shl
and
pop
push
ret
rcr
push
es
movs
rcl
and
cld
and
sub
retf
ins
dec
in
and
cmp
rcl
dec
call
ins
sbb
xor
pop
shl
fwait
inc
arpl
adc
adc
or
es
outs
push
es
ror
(bad)
mov
daa
or
inc
mov
and
push
or
mov
mov
cdq
in
shl
int3
adc
pop
add
sbb
fs
pop
xlat
and
xor
repnz
jle
add
fsub
cdq
inc
jae
shl
push
pop
add
or
test
or
mov
xor
xlat
(bad)
in
imul
enter
pop
push
retf
push
jne
shl
add
dec
xlat
rol
inc
je
adc
sub
pop
popf
ins
(bad)
bound
les
push
add
and
aad
push
and
mov
cmps
mov
out
sub
xor
push
or
add
cli
push
sub
sbb
xchg
ds
mov
mov
push
in
add
test
pop
cmp
mov
push
sahf
pop
mov
inc
mov
xor
cmps
mov
lock
inc
xchg
push
sbb
sub
pop
popf
and
mov
adc
inc
or
sub
add
mov
dec
or
cs
push
call
lods
push
mov
and
sbb
push
push
mov
clc
les
(bad)
(bad)
out
test
(bad)
adc
mov
dec
xchg
sub
sbb
inc
jecxz
sbb
inc
div
dec
ret
or
fs
push
push
in
push
scas
mov
xchg
ret
push
pop
sbb
xchg
jmp
inc
rol
loop
int3
or
dec
cwde
cmc
add
call
inc
jne
rol
in
adc
push
dec
in
nop
or
or
loopne
and
enter
sti
cmp
pop
(bad)
fdivr
nop
(bad)
fdivr
and
aam
jg
retf
mov
aam
sbb
hlt
adc
dec
jecxz
mov
and
cmp
mov
stos
cdq
pop
into
add
add
dec
and
sbb
sub
inc
inc
rcl
sahf
je
mov
ja
repnz
cmp
imul
and
stc
rol
xor
retf
add
and
ret
pusha
punpcklwd
sbb
cwde
arpl
inc
adc
adc
lods
adc
shr
sbb
in
aaa
sub
repnz
test
sbb
rol
ror
aad
inc
repnz
cmps
mov
inc
nop
add
daa
mov
adc
lea
test
les
sbb
sub
add
xor
xchg
xor
dec
sbb
mov
inc
mov
pop
inc
pop
add
(bad)
outs
test
and
jmp
shr
jne
sub
ret
cmp
das
mov
movs
mov
loopne
cmp
stc
jo
lea
pop
jb
pop
lods
retf
neg
or
sub
push
js
loope
aam
push
(bad)
mov
dec
shl
repz
mov
mov
loopne
dec
inc
mov
inc
movups
adc
lds
and
mov
sub
and
adc
sub
nop
imul
adc
call
or
fidiv
enter
mov
xor
pusha
adc
rcr
jns
or
aad
adc
dec
rdmsr
sbb
mov
add
mov
jg
call
and
sbb
xchg
in
and
push
imul
push
jmp
push
sub
cmp
hlt
hlt
jmp
fcmovnu
mov
rcl
outs
retf
out
push
xor
pusha
dec
mov
nop
pop
add
xor
(bad)
and
ins
jo
cwde
xor
add
lock
push
(bad)
add
cwde
cmps
aaa
jno
rcr
mov
add
and
jne
or
mov
cmp
fist
daa
int
lods
idiv
lock
xchg
or
and
lock
movs
mov
and
sbb
cmps
and
jge
lahf
aam
dec
shl
dec
or
sbb
out
inc
gs
lock
inc
push
or
adc
in
mov
loop
mov
push
sbb
dec
inc
cwde
or
jnp
and
pop
jae
daa
out
sbb
cwde
xchg
sub
lea
jbe
cmp
jbe
sahf
sbb
shl
out
clc
mov
mov
aaa
jno
adc
in
mov
cmp
jo
call
xlat
out
es
adc
mov
adc
test
ins
fs
push
jae
push
push
pop
ficom
pusha
js
xor
fabs
fld
movs
xchg
inc
ja
sub
push
ja
ror
shl
cmp
inc
add
lods
fsub
mov
fcomp
fsub
sar
pushf
or
addr16
out
icebp
cmp
xchg
test
xlat
nop
dec
push
adc
and
mov
test
xor
or
fwait
pop
cmp
xchg
in
lahf
jge
loopne
mov
inc
inc
mov
shr
pop
das
jge
movs
inc
push
test
inc
sbb
inc
jo
and
fiadd
pop
std
vmread
add
xor
push
sub
mov
and
or
jmp
push
inc
fucomip
jl
das
push
inc
mov
xchg
add
and
je
mov
sub
sub
je
add
loopne
sub
pop
(bad)
loopne
loop
push
in
sbb
adc
jae
jne
arpl
in
push
dec
or
aad
push
push
dec
xor
or
xchg
or
stos
and
clc
mov
cmp
fiadd
inc
iret
cld
mul
or
mov
mov
jne
rol
icebp
cld
mov
and
sar
xchg
sub
dec
sbb
pop
mov
mov
mov
sub
sti
cmovbe
cmp
fdivr
jns
adc
cmps
stc
cmp
xor
aas
imul
xor
les
inc
outs
ret
arpl
xchg
int
imul
in
inc
mov
movs
xchg
dec
retf
lfs
mov
cmp
push
enter
push
lock
sar
pop
mov
imul
in
out
bound
jne
push
or
push
imul
push
retf
mov
adc
mov
jae
and
mov
mov
cdq
jp
push
inc
ja
es
repz
ja
sub
push
inc
mov
enter
sub
jb
xchg
mov
mov
or
fdiv
xchg
push
mov
mov
dec
je
pop
dec
mov
mov
ins
adc
sahf
lods
movs
movs
pushf
movsx
call
jbe
es
nop
mov
fs
out
xchg
xchg
mov
jae
push
inc
test
test
enter
mov
inc
pop
xchg
retf
mov
xor
and
sbb
sbb
xchg
mov
pop
in
sbb
fs
retf
ins
jo
push
push
ins
fidiv
cwde
xchg
pusha
or
fs
imul
xchg
pop
pop
pop
push
pop
mov
push
fld
ins
lea
ret
cmp
imul
leave
mov
mov
inc
inc
inc
inc
fstp
dec
cmp
inc
jb
and
add
inc
data16
mov
xor
xor
sub
repz
pop
and
fs
retf
and
sub
inc
loopne
push
and
out
or
mov
cmps
test
inc
psubsb
(bad)
clc
dec
mov
add
dec
test
nop
idiv
sbb
scas
mov
add
iret
mov
(bad)
sub
aam
sub
(bad)
and
jge
gs
inc
(bad)
mov
aad
push
cs
xchg
rcr
or
mov
or
push
sbb
outs
push
adc
and
shr
fadd
mov
imul
fmul
jmp
xor
push
mov
dec
std
dec
adc
push
fild
sbb
inc
sub
dec
sub
push
dec
fdivr
sbb
pop
mov
mov
repnz
pop
or
inc
add
inc
mov
pop
inc
push
hlt
js
leave
mov
xchg
cmp
jg
je
push
popa
adc
mov
cld
and
mov
adc
jns
enter
cdq
enter
lods
adc
mov
xchg
ja
hlt
mov
or
pop
rcl
sub
inc
inc
aas
call
mov
nop
ds
repz
ds
popf
cld
imul
repz
mov
mov
inc
mov
add
lods
mov
add
xchg
adc
xor
test
cmp
leave
push
and
xor
cdq
pushf
or
inc
pushf
cwde
sub
and
add
std
and
xchg
xchg
outs
test
push
add
cmp
fs
dec
es
nop
sub
mov
pop
jnp
pusha
movs
sbb
push
(bad)
ins
and
retf
push
add
push
jmp
push
sub
fstp
fimul
out
in
bound
xchg
test
ja
cs
dec
cmp
mov
enter
sub
xchg
sub
xor
ja
mov
std
inc
leave
and
retf
aam
add
sbb
and
inc
adc
in
sbb
sbb
add
(bad)
mov
adc
jno
pop
pop
ret
mov
loope
ret
mov
ret
dec
push
imul
or
dec
mov
or
inc
mov
mov
pop
es
or
mov
inc
lock
repnz
lahf
aad
adc
or
fild
jmp
mov
mov
xor
rcl
xchg
cmc
push
mov
lea
nop
ror
inc
inc
outs
jecxz
call
add
cbw
push
mov
mov
mov
sbb
xor
xor
add
adc
mov
leave
sbb
jge
test
cwde
add
shl
inc
(bad)
xlat
nop
imul
aam
arpl
fsub
adc
inc
dec
and
sub
xor
cdq
in
es
dec
dec
cs
or
es
jo
pusha
add
ins
xchg
pop
dec
mov
mov
or
sbb
add
lods
xor
xchg
push
pusha
fs
xor
fsub
sub
inc
inc
or
sti
daa
adc
and
xor
jb
inc
push
dec
mov
mov
pop
or
push
add
nop
out
or
scas
or
ins
ficom
imul
pop
sbb
aam
xorps
pop
or
dec
das
inc
ss
xor
add
xlat
cmp
push
jbe
dec
xor
xchg
pandn
add
jmp
sub
adc
(bad)
in
imul
push
sub
xor
or
jbe
les
add
and
adc
rcr
push
dec
dec
mov
jb
pop
push
xor
shr
pop
push
js
mov
nop
add
shr
retf
sub
out
push
sub
adc
pop
inc
push
leave
inc
enter
(bad)
pop
pop
aas
adc
ss
(bad)
jae
sub
mov
call
dec
inc
movs
fwait
adc
jb
xchg
mov
test
nop
frstor
cmp
push
xor
loope
shr
iret
sbb
xchg
daa
adc
ins
mov
add
(bad)
jmp
or
and
push
sbb
ret
rcr
mov
inc
(bad)
int3
or
sub
les
loopne
or
inc
enter
sar
mov
imul
adc
or
loope
inc
mov
rol
test
out
fiadd
addr16
mov
out
sahf
movs
(bad)
loopne
sbb
daa
iret
repz
jle
(bad)
jmp
das
pop
or
push
push
cs
adc
dec
xor
je
lock
push
mov
sahf
push
jle
adc
rcl
mov
ins
xor
mov
aaa
mov
jno
ss
lods
cmp
es
mov
xchg
dec
mov
movs
in
dec
sbb
in
xor
xchg
sub
iret
fadd
dec
int
add
xchg
nop
nop
frstor
pcmpgtb
imul
cmp
fistp
test
mov
mov
pop
add
dec
jp
xchg
push
add
imul
mov
pop
mov
add
idiv
or
pop
cmp
test
inc
fiadd
ins
sbb
call
dec
(bad)
mov
rcl
aam
popf
movs
xor
(bad)
jmp
je
ss
sbb
aam
or
jecxz
fdiv
xor
bndstx
cmp
dec
mov
inc
mov
inc
xchg
sbb
push
dec
add
xchg
pushf
dec
push
dec
push
dec
or
or
dec
or
or
ins
xchg
or
or
xor
mov
cmp
mov
(bad)
push
add
in
jo
fwait
xor
cmp
ror
aas
test
cmp
jl
cld
inc
add
mov
xor
mov
scas
aas
and
dec
pop
cld
popa
dec
adc
mov
cwde
adc
mov
sahf
adc
push
pushw
pop
cmp
mov
dec
push
add
adc
dec
jns
add
sbb
sub
ror
sub
mov
xor
repz
or
xor
inc
or
leave
jae
cmp
or
xor
adc
add
sub
sahf
int3
into
or
test
add
or
sub
xchg
push
les
add
das
retf
sub
dec
pop
stc
rcr
xor
and
js
pop
in
mov
ss
pop
call
dec
xchg
ror
mov
and
sub
mov
mov
sub
scas
jns
ins
sar
and
mov
dec
sbb
adc
fmul
jae
mov
mov
push
adc
sbb
xchg
or
mov
push
ins
push
xchg
mov
nop
test
xchg
shr
popa
fistp
sbb
or
enter
fcom
push
call
call
test
push
dec
inc
mov
inc
or
loope
cmp
adc
lds
inc
adc
mov
sub
xchg
pop
add
add
xchg
ds
xchg
test
adc
dec
in
sub
sub
inc
test
out
adc
ss
shl
mov
and
fdiv
sbb
sbb
out
aas
mov
lods
mov
inc
add
or
xor
adc
imul
movs
fild
sbb
pop
dec
cwde
sub
(bad)
dec
sub
xor
cwde
add
mov
mov
sub
mov
mov
sub
sub
push
in
xchg
dec
jne
add
push
jb
lea
push
sbb
pop
cwde
mov
sbb
mul
push
lock
push
sbb
xor
adc
fucomi
das
push
xchg
add
cmp
pop
inc
mov
sub
(bad)
or
add
push
jne
add
call
das
(bad)
mov
push
pop
push
ror
sub
add
in
dec
mov
adc
mov
cmp
jmp
inc
icebp
jmp
or
add
jbe
xor
add
loope
add
pop
into
das
fnsave
shl
inc
fcom
pop
pop
(bad)
sahf
sahf
cmp
stos
test
and
mov
ins
in
hlt
dec
stos
add
les
inc
std
scas
cs
or
inc
test
dec
push
(bad)
shl
rcl
and
pusha
sub
outs
push
in
imul
sar
sbb
and
adc
and
in
mov
add
jp
(bad)
fdiv
xchg
add
cmp
adc
(bad)
add
imul
cmp
aaa
(bad)
imul
pop
(bad)
mov
mov
ror
rol
in
add
shr
inc
test
and
pop
aas
cs
jno
adc
xchg
ficom
push
jb
aam
ret
aas
dec
sbb
pop
aas
jmp
mov
or
imul
mov
hlt
sbb
xor
inc
sbb
cli
sbb
xor
leave
clc
mov
add
imul
push
add
cdq
popa
(bad)
cmp
pusha
sbb
loop
mov
fs
add
xchg
push
out
imul
mov
fadd
mov
dec
and
test
push
dec
dec
bound
or
pusha
ss
bound
jo
and
inc
popf
arpl
dec
movs
nop
xchg
and
call
mov
inc
push
pop
aad
bound
bound
popa
or
shl
ins
pop
(bad)
lds
push
xor
icebp
cwde
(bad)
lock
es
add
xor
je
movs
adc
loopne
out
add
mov
pop
xor
cmp
fadd
adc
test
test
xor
lods
dec
xchg
and
or
cmp
mul
in
rol
jmp
pop
addr16
rol
jno
hlt
jne
push
pusha
cmp
and
hlt
sbb
dec
and
shr
or
or
jmp
jge
inc
ins
sub
mov
loop
ins
ins
je
jne
dec
pop
hlt
add
iret
sbb
pop
je
xor
(bad)
mov
in
mov
inc
push
aaa
jecxz
xor
repnz
pop
out
hlt
sbb
and
int
in
std
gs
jo
ss
push
and
add
nop
xor
data16
call
xchg
mov
hlt
or
cld
in
icebp
cmp
fs
data16
ret
sub
adc
or
or
leave
sbb
data16
add
cmp
lock
stos
cmp
cdq
aad
add
or
dec
mov
pop
lock
daa
and
addr16
icebp
enter
dec
jne
inc
and
cli
mov
(bad)
or
mov
push
mov
popa
or
addr16
sub
popf
adc
sub
xchg
mov
inc
dec
lahf
adc
dec
push
mov
adc
mov
ja
xchg
adc
add
test
out
cmp
jge
jle
popf
clc
shr
inc
mov
adc
xor
sbb
clc
lea
mov
adc
in
dec
cs
jmp
loop
adc
adc
mov
fnsave
lods
push
mov
jle
add
cmp
popf
jmp
mov
scas
add
adc
inc
inc
and
add
cmp
out
xlat
je
xchg
je
aas
pop
ins
stos
xor
jno
pop
cmc
add
and
ins
cmp
(bad)
imul
push
mov
cmp
(bad)
iret
(bad)
leave
jnp
repz
push
pop
adc
sbb
repz
cdq
mov
mov
jns
push
xor
push
shr
test
cmp
cmp
add
mov
movs
data16
addr16
or
or
dec
aad
jno
pop
cmc
inc
xor
pop
and
adc
cmp
mov
add
enter
das
pop
push
(bad)
push
adc
push
push
pop
cmps
adc
call
dec
add
mov
sub
sbb
shr
jge
jmp
push
or
adc
sbb
adc
dec
movs
add
push
ds
movs
adc
xchg
aaa
add
xchg
mov
jb
push
dec
stos
mov
add
push
cmps
push
pop
test
cdq
mov
arpl
or
out
jl
push
and
aam
ins
pop
sbb
fild
fimul
jno
jae
add
sub
pop
cmp
push
and
fild
pop
sbb
mov
xchg
mov
adc
cmp
lods
nop
add
ds
pop
add
retf
push
adc
test
cmc
dec
stos
loopne
adc
(bad)
push
inc
enter
mov
je
xchg
movs
or
(bad)
fdivr
mov
cmp
mov
jmp
lock
adc
iret
fmul
jmp
sbb
fs
mov
add
out
cmp
jle
lods
dec
and
and
and
outs
(bad)
push
push
sbb
mov
jl
add
pop
das
pushf
sbb
sbb
lods
retf
adc
cwde
cmp
rcr
jb
jmp
pop
fsubr
clc
sbb
repnz
sbb
sbb
push
xchg
xor
imul
sub
fcomip
dec
dec
repz
cld
movs
add
xchg
xchg
pop
dec
dec
nop
or
adc
outs
mov
ss
jecxz
aas
arpl
adc
out
retf
xor
shr
jmp
mov
mov
jns
inc
aas
jmp
inc
sub
or
fstp
rcl
push
(bad)
pusha
and
retf
cld
xlat
sahf
adc
dec
sbb
xlat
xchg
xlat
hlt
je
ret
cli
pop
pop
jne
loopne
into
lock
shl
add
adc
adc
(bad)
inc
shl
push
stc
or
push
cmp
popa
test
add
inc
sbb
pop
jmp
retf
(bad)
and
scas
lds
ds
ret
shr
add
pop
sbb
stc
clc
stc
mov
jbe
xchg
cwde
pop
out
fisttp
cmp
cs
mov
repnz
sbb
inc
push
push
and
pop
pop
pop
inc
dec
dec
add
sub
xchg
cld
in
jmp
fisubr
or
adc
push
out
punpcklbw
jb
push
lock
mov
or
jo
push
add
out
ja
mov
mov
mov
fdivr
dec
pop
adc
cdq
rcr
fild
pusha
aas
adc
pop
ss
pop
jl
pop
mov
and
sbb
push
and
pushf
xchg
sbb
push
sbb
push
aaa
or
pop
repnz
pop
(bad)
clc
test
es
sbb
aas
int3
xchg
cbw
(bad)
cdq
repnz
ficomp
pop
push
aaa
inc
dec
add
adc
ins
fiadd
add
xor
xchg
stos
loopne
(bad)
xor
hlt
mov
inc
ss
or
lahf
push
je
fcomp
dec
sbb
adc
outs
adc
mov
jne
sbb
sub
sub
pop
pop
dec
jp
push
jecxz
fiadd
mov
cmps
or
cmc
mov
sbb
xchg
or
pusha
hlt
dec
jmp
cmp
cmp
stc
or
or
imul
fs
push
or
pop
add
or
and
cmp
call
dec
pop
xchg
out
sti
fidivr
mov
sar
shl
xor
mov
repnz
push
ja
inc
lock
adc
test
ja
xchg
inc
add
push
js
jbe
mov
or
lock
cmp
push
imul
sbb
ins
add
inc
test
test
xchg
sub
fdiv
push
sub
dec
in
add
add
sbb
adc
(bad)
mov
jl
add
and
aaa
push
push
mov
enter
in
cmc
add
iret
pop
sbb
xor
sbb
sbb
inc
and
add
sbb
adc
pushf
jo
mov
jg
(bad)
pop
or
(bad)
xchg
cmp
push
jge
test
xchg
mov
mov
pop
imul
mov
(bad)
out
sahf
out
clc
or
jns
out
jbe
enter
jl
jmp
cmp
int
push
test
popa
push
jb
adc
(bad)
fsubr
out
call
adc
lahf
dec
pusha
test
jns
test
xor
out
xlat
call
repz
repz
dec
pop
jo
sbb
iret
adc
mov
lds
out
or
sahf
sub
sahf
out
xchg
mov
adc
out
pop
idiv
or
push
sbb
cmp
cmp
cmp
nop
mov
mov
in
pop
mov
jns
cmps
sbb
cmp
and
sahf
ins
jle
mov
xchg
out
mov
ret
pmulhuw
repz
repz
push
mov
sub
dec
iret
repz
pop
mov
push
jge
mov
cmp
cmp
or
adc
and
sub
push
setne
in
rep
lods
xchg
add
pop
jg
sbb
mov
add
adc
repz
shl
push
hlt
add
sub
cmp
jp
es
dec
call
jbe
repz
and
nop
aas
popa
xor
inc
fsubr
add
push
xor
cmc
mov
mov
mov
in
fsubr
mov
aas
(bad)
ror
jns
add
adc
jle
repz
push
push
jnp
popf
scas
mov
inc
pop
add
cmp
or
call
cmps
stc
sahf
out
loope
push
add
sahf
and
es
loop
mov
jg
outs
or
push
push
je
lea
mov
mov
sub
add
pop
movs
jmp
and
pop
popa
mov
popf
pushf
mov
movs
pop
add
mov
add
adc
push
fs
mov
fwait
push
lods
mov
stc
shr
dec
add
sub
pop
pop
arpl
pop
lea
and
push
dec
repnz
xor
into
sbb
retf
cmp
fsub
lock
test
sub
push
fstp
adc
pop
cmp
js
call
xor
adc
dec
enter
add
mov
jnp
(bad)
loope
sysexit
arpl
ja
dec
add
dec
shl
xchg
bound
loope
push
jns
cli
push
out
adc
adc
aaa
mov
xchg
mov
cdq
push
stos
pop
nop
mov
cmps
or
int3
inc
test
add
mov
aaa
in
dec
repz
aam
pop
jg
or
cmp
adc
imul
push
sbb
cmp
cs
xchg
sti
inc
in
adc
ins
sub
fild
adc
daa
sub
movs
shr
movs
pop
inc
sbb
out
add
movs
sub
nop
fldlg2
inc
movs
dec
mov
jnp
xor
push
call
fidiv
ss
xchg
jl
ret
sub
ins
and
xchg
mov
in
xchg
inc
cdq
mov
xor
inc
cld
cs
cdq
sbb
pop
and
xchg
adc
mov
cdq
and
xchg
inc
pop
enter
xchg
and
cld
int3
popf
or
in
mov
or
xor
in
sbb
(bad)
xchg
push
xchg
(bad)
jb
ret
repnz
call
test
mov
out
loopne
mov
ror
sub
or
or
pushf
jb
das
in
sahf
mov
test
jbe
inc
sub
xchg
test
jns
jl
hlt
call
adc
adc
shr
add
fcom
jb
retf
jl
and
nop
pop
mov
popf
xchg
pushf
xchg
pop
repnz
in
mov
xchg
mov
sbb
xor
mov
mov
sub
or
pushf
les
leave
lds
shr
mov
sahf
aam
cmp
dec
cs
cwde
mov
ins
in
gs
xchg
inc
rcr
xchg
ins
inc
enter
mov
mov
hlt
lock
fsubr
in
xchg
in
xchg
retf
add
lds
ins
sub
hlt
xchg
test
dec
cs
mov
and
mov
pushf
dec
nop
pop
in
nop
push
inc
pop
in
adc
retf
je
les
add
cs
xchg
pop
in
and
and
and
loopne
xchg
in
das
in
mov
sbb
adc
pop
cld
cwde
rcr
test
and
nop
pop
cmp
sub
in
xor
jbe
call
pop
enter
add
mov
lahf
or
cwde
sahf
cmp
leave
test
popf
(bad)
sbb
xchg
js
or
mov
fwait
jb
or
pusha
call
inc
in
mov
pop
enter
xchg
sub
ins
dec
xchg
inc
gs
and
in
in
push
dec
cs
lods
and
fsub
sbb
retf
in
cmp
pop
enter
shl
lock
in
xchg
sub
sbb
in
adc
jns
jo
or
mov
sahf
fsub
sbb
test
xor
shl
add
dec
cs
fdivr
fisubr
inc
cmc
gs
or
inc
xchg
xchg
and
repnz
pop
enter
xchg
mov
pop
cmp
test
lahf
je
and
pop
pushf
loope
cdq
mov
jns
bound
push
pushf
nop
or
daa
in
xchg
clc
cdq
cld
pop
in
rol
sbb
in
nop
and
inc
or
mov
lahf
xchg
pop
repnz
pop
and
test
mov
nop
mov
test
sbb
mov
je
in
xchg
adc
dec
jo
jl
jne
xchg
jmp
and
pusha
push
pusha
mov
and
ss
out
nop
addr16
call
in
nop
lahf
or
test
push
arpl
adc
adc
mov
xlat
add
mov
cmc
test
mov
dec
fist
lea
xchg
aam
mov
sbb
push
js
(bad)
push
bound
ins
jmp
dec
dec
add
sub
ins
call
or
fsubr
sub
pop
sub
in
ret
or
pushf
scas
xor
push
sbb
frstor
ja
and
lock
lea
sub
dec
cs
sub
dec
add
mov
ret
stos
or
xchg
or
xchg
cmp
mov
sub
adc
dec
dec
cmp
dec
je
jmp
and
xor
and
mov
test
xor
inc
mov
test
pop
push
jo
dec
dec
pop
aaa
fdiv
dec
or
push
mov
xlat
sbb
inc
jmp
test
xor
sbb
and
jno
sbb
int3
sbb
sub
mov
dec
fld
xor
leave
push
imul
sbb
add
and
dec
xchg
mov
mov
pusha
xchg
inc
sbb
fld
aam
aas
or
add
test
xchg
scas
mov
cmp
frstor
mov
adc
and
loop
mov
sub
xor
jp
xor
pushf
(bad)
adc
adc
mov
outs
adc
or
sbb
pop
push
stos
inc
ret
and
or
mov
nop
mov
adc
sbb
xchg
fidiv
inc
push
shl
adc
sbb
and
or
shl
mov
push
push
mov
jnp
ss
rol
lds
(bad)
jae
in
jno
inc
daa
and
(bad)
cwde
in
cwde
in
and
cdq
adc
adc
and
dec
sbb
xchg
inc
sbb
cmp
scas
and
dec
and
arpl
cwde
pop
inc
sbb
or
es
mov
or
mov
pop
inc
cmps
pop
mov
pop
add
mov
movs
mov
jle
pop
mov
or
lods
std
adc
or
and
call
aaa
cmp
enter
sbb
gs
push
sbb
rcl
add
add
mov
test
popf
sbb
adc
test
nop
adc
pop
lods
outs
fstp
sahf
dec
or
sbb
push
xchg
das
mov
mov
ret
in
and
(bad)
and
mov
ss
add
add
cmps
movs
push
mov
test
or
inc
test
add
inc
adc
cs
push
and
xchg
sub
(bad)
fsub
jmp
sbb
xor
xchg
adc
ret
js
adc
push
lea
cmp
test
mov
add
ror
ror
ror
dec
add
cmp
mov
out
xchg
push
ret
mov
sub
js
jg
and
or
pop
push
sbb
or
cmp
sub
mov
mov
sbb
or
jo
movs
adc
fstp
jbe
mov
inc
sbb
dec
push
(bad)
inc
ret
cmps
inc
dec
retf
add
ret
xor
fisub
lods
add
mov
push
test
arpl
or
loopne
clc
enter
lea
xor
cmp
leave
jnp
into
jg
test
icebp
mov
test
rol
bound
xchg
mov
mov
xor
ret
lods
inc
ret
fmul
xchg
push
cmp
fidiv
pop
jns
jo
iret
nop
lahf
pop
jnp
in
xor
jmp
mov
sbb
jle
pop
test
inc
or
mov
inc
outs
add
pop
ficom
fnstcw
(bad)
gs
es
ror
repz
movs
or
sbb
xor
mov
arpl
nop
or
mov
imul
xor
jne
mov
shl
les
or
jo
ins
pop
sub
stc
inc
or
daa
dec
ds
test
mov
rcl
ret
mov
adc
adc
loop
dec
fs
push
das
and
adc
adc
mov
push
add
and
sub
out
adc
out
and
ins
or
push
push
jecxz
push
sub
cs
xor
push
pop
jecxz
xchg
fnstcw
mov
sbb
push
sar
icebp
pop
mov
pop
mov
fsub
ss
lea
xor
pop
lock
lods
or
mov
shl
mov
and
mov
ins
arpl
jne
add
bound
xor
dec
sub
adc
push
xchg
gs
cmp
sbb
or
sahf
movs
push
mov
nop
les
ret
add
push
or
pop
daa
(bad)
cmp
mov
mov
gs
xchg
push
push
iret
out
xor
add
scas
or
sbb
nop
inc
sbb
cmp
add
cmps
movs
in
and
jno
pop
enter
mov
les
sbb
scas
ret
adc
and
cmc
pusha
xchg
mov
aaa
or
xchg
pavgb
and
or
adc
xor
push
pop
sbb
scas
lock
mov
pop
inc
enter
pusha
mov
dec
or
pop
xor
add
jae
out
pop
and
xchg
or
jmp
dec
add
pop
loopne
mov
push
mov
inc
ds
fiadd
mov
inc
(bad)
fadd
mov
push
push
dec
mov
aaa
loopne
sbb
pop
jo
sbb
cmp
in
pop
sbb
hlt
mov
xor
cmp
xor
jmp
pop
inc
sbb
stc
aaa
or
test
dec
retf
add
push
sbb
pusha
jne
mov
cmovns
(bad)
fwait
adc
retf
cmp
xchg
jbe
movs
xor
int3
rcr
loope
pusha
or
pop
js
pop
mov
mov
add
call
inc
ret
jp
sub
retf
imul
rcl
mov
lods
inc
xor
or
inc
aas
popa
push
call
xor
bnd
jno
xchg
sbb
ret
cmp
fnstsw
or
push
mov
dec
and
cli
jmp
dec
inc
mov
out
pop
fwait
nop
cmps
test
ins
push
je
sub
dec
push
dec
(bad)
in
jbe
stos
mov
push
jl
loopne
(bad)
adc
jmp
mov
je
(bad)
out
pop
and
add
sub
and
sub
or
and
add
test
fwait
cmp
xchg
or
ja
ret
daa
add
ins
or
daa
xchg
test
mov
pop
push
push
imul
aas
push
add
inc
daa
aaa
add
inc
add
xor
dec
dec
sbb
add
adc
push
add
cs
mov
add
and
adc
mov
imul
nop
inc
push
sub
(bad)
nop
add
mov
adc
cmps
mov
das
pushf
das
(bad)
enter
ffree
repz
adc
pop
cmp
dec
scas
pop
js
lods
sbb
pop
dec
ins
pop
xor
or
mov
pop
pop
test
in
outs
ja
pop
shl
arpl
pop
dec
mov
test
mov
pop
and
or
inc
cmp
or
jb
je
jmp
push
je
fstp
jb
push
dec
adc
sar
daa
fisttp
fwait
mov
loopne
daa
daa
add
rol
inc
jmp
and
and
add
pop
shl
(bad)
xor
mov
mov
cwde
inc
pop
fwait
(bad)
call
sub
pop
cmps
ss
test
out
fild
xchg
mov
and
ror
cmp
mov
mov
push
and
inc
cdq
push
cmc
dec
adc
lock
jmp
lea
mov
mov
in
add
sub
add
ror
add
inc
push
xchg
inc
and
pusha
or
dec
mov
std
adc
jg
xor
outs
mov
leave
jmp
icebp
add
pop
fs
jo
and
xor
ret
imul
das
dec
add
retf
imul
add
scas
cmp
jb
mov
(bad)
and
ds
mov
push
dec
in
mov
mov
dec
push
mov
pop
jmp
push
repnz
cs
or
push
(bad)
dec
imul
mov
mov
cdq
movs
repnz
cmps
shl
sbb
test
jmp
bound
and
lahf
adc
or
out
jmp
sbb
(bad)
or
inc
jbe
imul
test
arpl
adc
adc
cmps
dec
sbb
test
call
add
test
and
jge
test
cmps
das
jns
das
ins
ins
das
fs
sbb
xchg
pop
jnp
and
daa
jge
imul
push
cmp
xchg
je
cmps
and
rcr
shl
add
idiv
jnp
and
lods
add
mov
es
sar
mov
pusha
fist
inc
ins
sub
fs
push
xchg
add
cmp
dec
mov
adc
mov
push
stc
xchg
add
pop
adc
test
mov
sar
add
dec
pop
sbb
push
xlat
(bad)
test
dec
fs
or
or
or
mov
movs
xchg
and
jmp
mov
ins
or
test
mov
mov
inc
sub
mov
push
xchg
mov
cs
int
mov
xor
adc
inc
scas
and
rcl
or
push
mov
or
retf
mov
mov
popa
jb
mov
loop
inc
inc
repnz
add
ins
xlat
shl
nop
lock
cmp
xchg
lods
ret
jl
jmp
popa
inc
lock
mov
adc
out
pop
es
imul
or
ds
rcr
xor
jecxz
outs
pop
ja
xchg
mov
and
or
add
sub
add
mov
mov
adc
mov
fst
jl
jmp
mov
loope
push
sub
xor
push
enter
mov
and
ss
lahf
xchg
jge
mov
in
movs
aas
pop
sub
add
test
iret
fsub
jo
mov
outs
sub
aas
mov
push
add
mov
ret
outs
xchg
xor
popa
les
test
mov
les
adc
out
mov
and
mov
enter
inc
add
jo
dec
mov
dec
das
push
xchg
lods
push
mov
dec
nop
mov
cld
(bad)
or
cmp
adc
movs
pop
loopne
pushf
mov
arpl
outs
push
fdiv
mov
mov
pop
mov
popa
in
jo
sbb
inc
and
add
imul
icebp
inc
dec
jne
sahf
mov
xchg
mov
stos
movs
test
das
xchg
xor
ret
mov
jecxz
test
inc
xor
mov
lods
cdq
ret
xor
add
pushf
lock
ins
or
shl
push
sbb
xchg
jle
xchg
cmp
dec
inc
sbb
nop
sbb
daa
mov
inc
mov
lock
cmp
add
lods
dec
jne
or
loopne
movs
outs
or
nop
movs
pop
out
or
add
dec
jae
cwde
push
test
ret
adc
xchg
inc
dec
xor
xor
inc
bound
adc
xchg
add
sub
push
add
sbb
xlat
xchg
movs
and
dec
add
std
add
push
sub
ja
fwait
dec
test
nop
sub
jb
sub
or
and
les
cmp
push
icebp
pop
lock
sbb
test
sbb
ret
adc
xchg
test
pop
inc
add
push
icebp
pop
das
cmp
je
aam
cmps
add
stos
xchg
(bad)
mov
push
jo
das
bound
call
adc
icebp
leave
inc
cmp
nop
mov
icebp
and
fwait
ss
(bad)
popf
nop
fcom
sub
or
jns
daa
(bad)
neg
mov
pop
push
or
inc
aas
test
sub
pop
lds
dec
adc
clc
inc
inc
adc
mov
cmp
pusha
sar
mov
mov
nop
ss
stos
je
fadd
push
outs
xchg
(bad)
aam
dec
dec
adc
inc
inc
mov
adc
pop
rol
adc
cs
call
enter
cdq
inc
jmp
and
pusha
xor
jmp
dec
push
call
clc
ret
mov
jle
mov
push
sbb
mov
cmp
add
ret
mov
stc
sub
clc
jle
clc
adc
or
lahf
xor
jbe
loopne
test
je
add
xor
cmp
mov
lods
jecxz
push
or
popa
add
test
xchg
retf
sbb
push
pusha
mov
xchg
rcl
mov
mov
mov
inc
xor
adc
jbe
idiv
or
loopne
adc
jnp
pop
mov
mov
push
(bad)
or
das
jbe
add
lea
add
(bad)
mov
ja
add
pop
jbe
jnp
or
jne
in
jmp
and
mov
dec
hlt
pop
inc
jmp
test
and
leave
pop
and
fisub
pop
or
or
dec
clc
pinsrw
cmp
nop
push
fcom
jno
adc
pop
sbb
mov
jg
imul
add
sub
jb
add
(bad)
cmp
push
add
inc
loop
inc
jecxz
sbb
lock
pop
jmp
es
loopne
xor
daa
pop
in
jl
aam
adc
push
test
fisttp
pop
jge
xchg
adc
add
xor
bound
cmps
daa
jmp
ja
ret
mov
jne
ficomp
aas
les
(bad)
cld
push
sbb
shr
add
or
cmp
mov
clc
and
cmp
inc
aaa
mov
xchg
pusha
loopne
rol
fwait
mov
(bad)
fmul
pop
mov
in
xchg
data16
adc
pop
sar
mov
push
or
icebp
clc
clc
adc
push
xchg
out
or
push
dec
push
das
loopne
pop
push
in
jg
(bad)
dec
ss
rcr
mov
cmp
jle
inc
adc
xchg
imul
cdq
inc
outs
dec
aaa
sub
xchg
push
pop
adc
push
je
das
mov
jg
mov
mov
push
jg
inc
sub
cmp
popa
inc
push
in
fwait
nop
(bad)
(bad)
jno
sti
je
push
lea
pushf
add
sub
jg
ins
sub
jl
inc
xchg
idiv
xor
and
mov
lea
mov
add
pop
sbb
(bad)
mov
or
inc
add
add
inc
cmp
je
add
sbb
jo
cld
push
xor
adc
add
ins
pusha
sub
jae
adc
xchg
inc
dec
neg
pop
sbb
pop
mov
dec
push
popf
mov
xchg
dec
dec
imul
sbb
test
out
ror
inc
cld
stos
push
add
add
inc
loopne
imul
adc
pop
cwde
or
fst
mov
jae
dec
sbb
hlt
mov
inc
push
add
push
cmp
xchg
mov
mov
dec
je
fdiv
ret
jno
inc
dec
inc
xchg
sub
cdq
ror
imul
adc
push
adc
mov
inc
sbb
das
or
or
inc
sbb
jmp
push
inc
mov
sbb
adc
popf
cwde
ret
mov
enter
dec
jecxz
js
jle
pop
adc
push
mov
push
aad
sbb
ret
dec
add
aam
push
xlat
add
sub
adc
loopne
or
inc
cmp
dec
out
adc
js
fwait
add
jne
sub
ror
adc
loopne
(bad)
cwde
jnp
mov
scas
mov
add
cmp
jle
mov
cdq
ins
lods
in
dec
sbb
pextrw
and
mov
fs
xor
rcl
mov
inc
dec
mov
ja
sbb
mov
dec
dec
adc
xchg
pop
das
mov
or
repz
out
push
(bad)
push
sahf
ret
in
jns
iret
stos
repnz
cs
cmp
and
test
aad
fcmovb
pop
inc
scas
mov
mov
outs
push
and
daa
pop
addr16
(bad)
in
push
enter
out
imul
dec
dec
mov
dec
mov
sbb
cmp
std
xchg
ins
sbb
xchg
cmps
fisub
pushf
and
pop
mov
jb
mov
repz
and
or
fiadd
or
mov
pop
xlat
add
cmp
and
add
les
test
add
jae
add
ret
xor
adc
shr
mov
ret
push
jne
sbb
loope
dec
pop
push
sbb
jmp
rcl
push
mov
mov
out
sub
adc
jp
or
dec
xor
sahf
adc
neg
xchg
mov
sar
fwait
mov
fsubr
add
ficom
mov
mov
mov
cmp
cmc
sbb
push
dec
and
ret
test
test
rol
adc
jecxz
cmp
call
scas
push
enter
cmp
push
enter
dec
cmp
fldenv
(bad)
sti
sub
fwait
push
jne
into
enter
mov
xor
popa
adc
pusha
and
ret
adc
and
push
cdq
jp
lods
clc
cmp
outs
repz
sti
cwde
push
retf
push
adc
cmps
jge
out
int
inc
mov
sar
clc
outs
int
jle
and
mov
pushf
inc
popa
push
inc
pop
stos
int
xor
(bad)
es
jle
mov
inc
xchg
push
ins
and
cmps
push
stos
imul
and
cmp
mov
call
jo
xor
push
sub
mov
jbe
jecxz
fadd
or
add
dec
call
pop
pop
dec
adc
mov
pop
je
dec
mov
mov
stos
ins
mov
shl
or
mov
fwait
inc
or
daa
nop
test
aam
push
add
fadd
sbb
xor
fwait
jp
int3
inc
(bad)
and
inc
jg
test
fcom
adc
cmc
call
or
add
mov
mov
adc
add
and
push
dec
sar
addr16
jmp
inc
iret
aam
jmp
and
sar
cmp
xchg
inc
and
(bad)
out
cmp
jne
(bad)
and
sub
add
pop
add
cwde
out
pop
cmp
sbb
ror
ror
dec
div
rcl
mov
xor
adc
dec
ret
ficomp
into
iret
rol
push
das
iret
sar
jae
es
rol
loopne
fistp
outs
in
es
push
adc
push
jge
fwait
mul
pop
ror
pop
dec
ins
fistp
scas
pop
scas
push
lods
xlat
pop
outs
loopne
xor
iret
push
push
cld
mov
lock
sbb
pop
jne
push
jle
inc
xor
sub
jmp
xor
aas
xor
rol
aas
mov
(bad)
xchg
jno
dec
daa
(bad)
push
call
movs
stc
xor
xchg
and
scas
gs
imul
or
mov
push
(bad)
jbe
inc
bound
jnp
or
je
and
and
mov
aam
push
das
ret
add
aad
lods
fisub
fs
or
pop
hlt
dec
(bad)
in
movs
and
std
xor
mov
stc
rol
ins
mov
movs
popa
loopne
dec
sbb
shr
clc
push
sahf
push
jae
(bad)
mov
xchg
aaa
fs
push
sub
or
out
sbb
mov
cmps
xchg
rcr
dec
or
mov
or
aam
dec
in
add
iret
adc
and
iret
xor
ds
into
mov
push
dec
xor
xor
mov
or
or
add
stos
cs
lds
xor
imul
pop
cmp
mov
fcom
adc
jne
lea
inc
add
adc
rol
or
stos
test
dec
jecxz
mov
outs
push
add
sub
jb
out
out
mov
clc
wbinvd
or
or
sbb
push
sub
jne
ret
and
test
sub
xor
scas
rol
enter
cmps
loope
push
jecxz
sbb
mov
sub
je
movs
call
or
pop
jne
dec
and
or
or
xor
sahf
mov
lods
je
push
loop
repz
sub
lea
dec
mov
(bad)
jmp
sbb
mov
xchg
pop
dec
test
or
imul
add
ret
add
sbb
push
push
push
movs
out
cld
jne
adc
test
sbb
or
(bad)
cmp
or
mov
imul
mov
loope
xchg
cwde
adc
mov
leave
push
or
sbb
sub
pop
inc
jno
loop
in
push
clc
sub
mov
or
adc
je
push
inc
clc
push
out
or
(bad)
inc
rcl
sahf
jns
ret
xor
add
dec
inc
or
jle
inc
adc
jno
pop
add
(bad)
sbb
rcr
push
arpl
jne
mov
or
push
test
ret
lahf
dec
or
pop
xchg
add
or
loopne
sahf
inc
pusha
cmc
xor
(bad)
gs
shr
sub
hlt
cmp
add
mov
cmp
add
ret
cmps
test
and
in
rcr
test
fisttp
es
cmp
ins
aas
ja
mov
mov
rol
test
sub
rol
stos
mov
mov
sub
repz
neg
ins
out
mov
mov
sbb
mov
cmp
adc
std
push
add
and
xor
(bad)
loopne
repnz
jecxz
add
xor
call
imul
test
cld
(bad)
adc
xor
xor
pusha
pop
sbb
shr
jbe
test
cmps
xchg
mov
mov
fidiv
pushf
test
or
stc
jbe
aas
mov
and
outs
(bad)
push
nop
add
adc
xchg
movs
dec
adc
enter
mov
aas
inc
jmp
in
mov
test
dec
cld
(bad)
pop
xchg
test
pop
jmp
frstor
add
popf
ins
nop
dec
inc
dec
xor
or
in
xor
into
fsub
pop
int3
test
inc
add
inc
scas
dec
sub
pop
jo
push
jmp
inc
and
push
cld
loopne
add
(bad)
jb
adc
adc
push
jp
and
pop
or
and
lock
xor
imul
aas
dec
xor
cmp
enter
das
mov
pop
add
rcr
cmp
dec
call
dec
push
jns
ds
cmp
and
mov
push
cmp
jne
in
mov
or
push
push
sub
xchg
sub
mov
je
cs
rol
add
pop
push
or
fidiv
gs
sbb
jne
iret
mov
mov
xchg
push
jmp
pop
inc
and
inc
pushf
pusha
dec
leave
adc
aaa
jno
inc
dec
aas
dec
call
ret
mov
push
or
adc
pop
add
sub
(bad)
loope
fstp
je
mov
mov
dec
repz
cmp
cmp
int3
pop
or
or
sbb
adc
sub
push
adc
rol
loope
popf
dec
popa
mov
popa
les
adc
es
aaa
aas
mov
arpl
jle
add
cs
adc
push
sub
inc
ja
dec
xor
(bad)
mov
cmp
repnz
add
(bad)
in
and
sbb
fimul
or
aaa
fsub
jo
push
inc
sub
rcr
jne
inc
and
pop
cmp
(bad)
mov
adc
cmp
xlat
daa
sub
mov
push
push
add
js
ret
and
dec
cmp
nop
fidiv
mov
xchg
rcl
and
daa
movs
mov
push
or
inc
sbb
sbb
call
mov
add
inc
adc
push
xchg
xchg
adc
nop
xchg
(bad)
lock
sub
dec
sbb
rcl
inc
ja
mov
cdq
or
or
mov
aaa
push
mov
ret
shl
imul
cmp
adc
mov
inc
mov
or
cs
(bad)
out
(bad)
sub
push
cmp
sbb
push
aas
cmc
dec
shr
mov
pop
inc
jmp
shr
fiadd
sbb
fiadd
pop
xlat
ins
pop
or
movs
sub
push
data16
dec
rol
or
push
dec
ret
ins
fild
imul
nop
mov
(bad)
push
and
cmp
fld
and
imul
inc
push
stc
xchg
push
push
pop
fild
push
cmp
xor
loope
dec
and
push
sbb
jb
and
mov
scas
mov
iret
imul
mov
xor
repnz
add
les
icebp
addr16
dec
xor
and
cwde
pop
jb
loop
nop
add
cli
dec
and
push
xor
or
sub
or
push
nop
and
mov
adc
xor
inc
adc
dec
add
xchg
fisttp
mov
dec
push
pop
add
test
fwait
outs
jecxz
or
inc
mov
(bad)
int3
add
leave
add
xor
sub
aaa
in
inc
adc
fs
pusha
mov
lahf
adc
jmp
stos
add
or
add
in
pop
sbb
push
enter
ins
push
in
adc
adc
retf
adc
jecxz
cmp
inc
test
cmc
outs
push
cmps
dec
dec
sbb
add
in
ja
arpl
out
sbb
adc
nop
xor
(bad)
mov
adc
sbb
add
stos
(bad)
fwait
jg
enter
or
and
push
je
aam
and
shl
inc
or
push
daa
or
aad
add
fbstp
out
in
pop
push
jl
cmp
mov
sbb
test
add
std
enter
pop
mov
pop
inc
ret
and
adc
out
push
push
and
mov
cmp
dec
pop
outs
mov
push
mov
jb
mov
imul
mov
test
imul
jmp
xchg
mov
out
jne
and
push
out
rcr
inc
jo
add
add
and
fwait
sub
stos
inc
or
leave
sbb
add
sbb
pop
push
scas
push
or
in
and
sub
mov
mov
inc
sbb
shr
loop
lahf
in
in
jae
mov
add
xor
sub
push
inc
sub
add
icebp
jle
pop
pop
jge
push
stos
pusha
pop
jmp
cmp
push
xor
rcl
les
mov
es
leave
xchg
rol
(bad)
outs
add
mov
test
adc
rcl
inc
cvtps2pd
aad
and
(bad)
dec
cmp
add
outs
loopne
hlt
(bad)
icebp
xor
pop
clc
pop
mov
movzx
cmp
ror
mov
loope
repz
jo
mov
in
jns
mul
rcl
jecxz
out
cmc
jmp
sti
pop
ss
je
mov
pop
dec
je
add
jmp
sbb
push
sbb
dec
mov
pop
jmp
push
ins
mov
adc
fcom
jmp
stc
mov
jmp
add
jb
pop
jmp
lock
push
jmp
pop
or
push
add
imul
inc
(bad)
jmp
dec
push
pop
add
xor
loope
sahf
popa
lock
shr
and
fistp
adc
push
adc
xchg
in
adc
clc
cs
push
cmp
jp
sbb
in
jg
and
sub
dec
jne
inc
sub
mov
xor
mov
jle
(bad)
push
or
sbb
xor
push
or
mov
cmp
nop
fmul
add
lds
movs
xor
sbb
and
xchg
add
fsub
nop
mov
add
dec
or
mov
cdq
cmp
sar
test
scas
cmp
ds
in
test
rol
inc
test
cmp
leave
pop
cmp
add
ins
dec
sub
add
push
mov
or
pop
cs
sub
cmp
or
repnz
adc
and
ss
fxch
imul
push
xchg
xchg
mov
xchg
fstp
xor
xchg
lea
test
mov
cmp
mov
jbe
push
cmp
pop
shl
pop
or
jmp
and
and
movs
nop
fdivp
out
pop
movs
stc
xor
int3
and
lods
or
adc
cmps
nop
adc
sti
push
pop
inc
aaa
or
sbb
push
pop
sub
sbb
sbb
outs
cmp
out
and
imul
push
sub
xchg
out
and
push
jb
imul
jb
and
or
loopne
jnp
or
mov
jmp
ins
sub
or
xchg
jns
or
push
add
je
retf
push
inc
xchg
lea
push
cmp
adc
cdq
push
jno
scas
xor
jnp
test
adc
add
xchg
jnp
push
sbb
popf
jae
sub
ret
adc
inc
xchg
add
sub
ficom
mov
ja
iret
sub
arpl
sbb
sub
cmp
mov
scas
test
inc
push
mov
push
push
mov
popa
jb
mov
mov
rcl
mov
pop
ins
jno
push
nop
clc
out
adc
adc
jmp
movs
push
(bad)
repnz
add
sar
adc
sub
or
inc
je
inc
outs
adc
test
outs
jbe
cmp
and
mov
repz
call
sbb
or
sbb
es
repz
in
sub
inc
pop
ror
cmp
push
adc
int3
inc
les
pop
dec
push
push
or
pop
pop
adc
pop
sub
sbb
inc
mov
or
pop
add
push
cmps
out
loopne
enter
repnz
dec
inc
jo
lods
and
and
mov
loopne
cmps
shl
mov
mov
cmp
push
adc
hlt
out
mov
jnp
mov
repz
nop
test
and
int3
pop
daa
fisub
int
adc
inc
repz
fsubr
or
sub
shl
adc
sahf
stos
xabort
and
or
xor
ds
mov
sbb
mov
cmc
pop
and
cmc
add
sub
vfrczps
jo
add
inc
sbb
fstp
sbb
sti
sahf
jbe
sbb
cwde
test
inc
sbb
cmp
dec
pop
xchg
inc
sub
fisttp
adc
pop
test
or
leave
out
dec
clc
and
pushf
dec
dec
and
sub
adc
ret
dec
scas
sbb
push
jo
mul
not
neg
sbb
xchg
adc
push
lock
les
clc
jg
and
jle
hlt
aam
xchg
ins
sahf
inc
cmp
jge
fs
dec
cmp
cmp
push
pushf
push
push
xor
pop
aas
je
cmp
xor
mov
adc
clc
or
xchg
and
adc
rcl
neg
sub
xor
or
sbb
add
push
fs
mov
mov
gs
sub
and
pop
sbb
mov
cmp
out
das
(bad)
clc
cdq
cmps
mov
repz
ror
out
add
push
push
inc
rol
cs
int3
and
jnp
jno
lahf
or
stos
or
pop
mov
or
push
cmp
iret
repz
pusha
clc
inc
mov
lods
js
out
fsubr
sbb
mov
and
mov
sub
adc
test
ret
and
cmps
add
daa
push
xchg
je
outs
adc
mov
daa
jno
pusha
and
nop
pushf
outs
push
push
mov
sub
addr16
push
shl
sti
xchg
in
sbb
les
push
jbe
push
in
mov
push
dec
add
dec
add
xor
jns
shl
sub
push
mov
cmp
cwde
cmp
dec
rcr
hlt
sbb
mov
push
add
xchg
cmps
adc
sbb
clc
and
call
push
and
mov
ds
xor
addr16
mov
rcl
jne
inc
nop
adc
mov
div
push
std
push
or
aad
aaa
mov
sbb
pop
push
pop
dec
dec
icebp
xor
pop
pcmpgtb
ja
jl
clc
pop
mov
pop
push
push
pop
pop
stos
popa
cs
and
(bad)
push
loopne
mov
cmp
push
test
pusha
pop
xchg
pop
xchg
or
test
imul
in
je
daa
xchg
push
xor
(bad)
clc
addr16
lock
call
movs
jle
(bad)
dec
mov
hlt
mov
adc
nop
add
jnp
outs
dec
pop
push
xchg
in
inc
jmp
pusha
jae
push
add
jnp
dec
enter
mov
pushf
loopne
test
imul
js
add
jb
cmps
imul
sbb
pop
movs
add
addr16
xor
sub
iret
aam
sub
cmp
add
iret
inc
es
ss
cmps
push
addr16
cwde
and
jb
xor
sbb
sub
leave
dec
jge
ss
add
movs
pop
pop
push
push
add
mov
inc
movs
adc
(bad)
lock
jns
xor
push
sub
and
test
or
(bad)
cdq
pushf
push
sub
mov
sbb
inc
bound
fild
jbe
mov
lds
jne
(bad)
cmp
xchg
and
sub
pop
mov
lods
rol
(bad)
cmovns
cwde
push
outs
dec
mov
imul
and
xchg
mov
xor
xchg
(bad)
xchg
pop
repnz
pop
pop
xchg
dec
cmp
push
push
inc
xchg
pop
jo
lods
mov
fidivr
or
cwde
push
movs
push
test
adc
rol
add
movs
sbb
dec
aam
inc
adc
stos
or
or
dec
or
ret
and
add
sbb
or
xchg
cmp
cmp
test
dec
jbe
jns
xchg
xchg
movs
cmp
enter
mov
inc
lock
push
fst
xchg
loopne
int3
push
add
xor
push
ds
push
gs
iret
repz
push
or
adc
and
jmp
dec
add
jo
lods
sub
in
je
push
test
xor
push
jl
out
and
or
loopne
xor
loop
push
xchg
fistp
out
xchg
js
clc
xchg
add
xlat
sub
dec
(bad)
xor
add
or
and
inc
cmp
xlat
ins
push
dec
stos
mov
test
add
jl
sub
push
sbb
sbb
pop
(bad)
jnp
rcr
scas
(bad)
outs
or
ja
push
sub
fwait
sub
pushf
lods
ja
(bad)
adc
cmp
inc
add
pop
inc
adc
cmps
mov
lahf
or
neg
lock
xchg
mov
xor
out
arpl
pushf
push
mov
mov
sub
sbb
cmps
adc
pop
and
or
pop
mov
retf
mov
sbb
inc
or
jns
mov
inc
ss
loopne
ins
mov
adc
xor
pop
push
xor
jl
adc
js
adc
add
jg
inc
ret
fwait
pop
ds
mov
pmulhuw
dec
outs
cld
mov
fwait
add
mov
push
(bad)
or
sbb
inc
enter
mov
mov
cld
mov
push
sar
adc
mov
pop
call
das
push
test
dec
mov
dec
ss
and
test
push
jl
aas
jbe
or
push
xchg
ds
or
push
scas
fidivr
push
jle
adc
jo
push
or
addr16
aas
or
mov
push
jo
aaa
and
cmp
jl
jle
xchg
mov
pop
push
and
push
pop
pop
aam
jl
xchg
pop
sahf
lods
cli
test
dec
push
mov
mov
or
jecxz
jbe
adc
adc
or
out
ror
add
mov
dec
or
xor
pop
adc
or
(bad)
in
pop
nop
xor
outs
mov
sub
sub
push
and
and
push
pop
ss
push
push
outs
ins
mov
jnp
mul
inc
(bad)
and
pop
cmp
pop
add
movs
ret
lea
sbb
push
or
mov
add
xchg
pop
xchg
inc
or
retf
bound
psubusb
pop
pop
clc
mov
imul
and
mov
call
xchg
mov
push
push
pop
aaa
iret
lods
dec
pop
aad
mov
mov
push
or
addr16
pop
xlat
jmp
push
call
loopne
push
add
jo
pusha
xchg
sbb
stos
repz
sub
pop
inc
cmp
adc
scas
and
arpl
aam
sub
mov
dec
adc
xlat
nop
mov
sbb
daa
out
repnz
jecxz
outs
push
push
shr
fldcw
cmp
sbb
push
xor
lods
fwait
fs
outs
cmp
push
aad
(bad)
out
jle
push
outs
daa
adc
xchg
jae
xor
and
xlat
xchg
lock
adc
ds
or
pop
adc
add
rcl
fcom
mov
leave
lock
push
and
mov
dec
les
add
push
pop
rcl
jbe
push
jmp
ds
push
pop
adc
test
cmp
nop
add
mov
mov
pop
add
and
jo
mov
add
pop
dec
es
pop
int
je
ins
jno
enter
pop
out
ficom
test
or
iret
or
jl
add
loopne
iret
clc
jle
jb
je
je
pop
cmp
and
xor
adc
add
xor
pop
stos
pusha
adc
add
pop
push
jg
stos
pop
js
sbb
div
ret
fcomip
cld
sbb
mov
and
push
xor
jne
loopne
sti
not
out
sbb
push
mov
add
mov
cmp
mov
enter
mov
pop
lods
jle
mov
push
adc
sub
sub
inc
ja
xchg
add
out
jl
rcl
ffree
mov
or
sbb
rol
mov
ret
cmps
movs
adc
add
daa
fbld
ret
popa
adc
test
mov
xchg
inc
or
ror
pop
clc
add
or
adc
mov
les
mov
xchg
test
adc
and
adc
or
sbb
dec
nop
hlt
mov
retf
outs
mov
data16
imul
xchg
or
sbb
ret
or
mov
hlt
(bad)
popa
cmp
dec
sbb
xor
ret
push
retf
aas
fstp
and
inc
jbe
aam
pop
fidiv
and
pop
mov
js
aas
cmp
cmp
cmp
add
sbb
ret
xlat
aam
jmp
nop
xchg
dec
and
add
pusha
or
popf
sub
ja
sbb
sbb
iret
fs
add
addr16
sbb
xor
aaa
aam
test
and
imul
shl
adc
and
retf
loope
test
loop
pusha
imul
xchg
fldenv
jg
pushf
sbb
ror
xchg
imul
and
dec
cmps
pop
add
clc
xchg
cmc
push
add
jmp
out
adc
add
push
add
dec
add
jbe
outs
movs
dec
adc
mov
out
push
rcl
mov
in
popa
pop
sbb
sbb
inc
dec
call
xchg
adc
es
sub
pop
add
add
add
out
sbb
jnp
dec
imul
pop
adc
mov
ja
lea
fld
mov
dec
es
sbb
outs
in
mov
dec
leave
(bad)
call
jns
push
xchg
mov
pop
mov
sub
fcom
add
sti
sbb
(bad)
mov
pop
sub
push
add
and
ss
and
cmovs
sbb
sbb
or
xor
adc
test
fcomp
imul
cmp
cmp
clc
sub
retf
les
leave
and
scas
pop
mov
aaa
test
cld
dec
retf
sbb
popf
xchg
or
aaa
push
and
js
xchg
add
das
iret
dec
outs
push
push
or
and
jg
add
lock
ret
jne
mov
lods
and
in
xchg
and
sub
std
pop
sti
add
pop
mov
jmp
pusha
mov
sub
or
nop
cmps
loopne
es
sbb
inc
dec
sbb
or
xor
lock
sar
adc
xchg
sbb
inc
cmps
and
(bad)
es
adc
aas
push
retf
cmps
sbb
mov
ret
and
shl
cs
(bad)
push
adc
adc
inc
ret
push
xchg
mov
cmc
adc
add
xor
or
and
add
ret
outs
inc
or
dec
fstp
cmps
(bad)
clc
loop
jnp
push
test
aad
pop
and
push
sub
mov
rcl
dec
mov
sub
cli
shl
aaa
sbb
inc
push
xchg
pop
call
fld
pop
fwait
sub
dec
jb
enter
add
adc
inc
dec
or
lock
pop
mov
push
aaa
pop
sbb
jle
mov
sbb
pushf
jge
mov
daa
or
out
mov
retf
and
dec
sbb
sbb
push
shl
lahf
mov
sub
mov
sbb
fstp
xor
inc
pop
lock
inc
push
lea
ds
jmp
out
fisttp
jmp
data16
adc
in
popa
jne
imul
retf
xor
xchg
push
jb
fcos
mov
pusha
fld
bound
mov
push
stos
movs
loope
leave
cmp
ret
add
imul
lock
cmps
loopne
jo
mov
xor
adc
sbb
aas
sbb
push
jmp
push
mov
push
sbb
dec
mov
push
lahf
and
push
mov
add
inc
mov
(bad)
cmp
test
pop
xchg
push
cmp
fisub
movs
lock
mov
jns
mov
fwait
shl
test
mov
add
popa
xchg
mov
std
push
adc
sbb
mov
jnp
adc
xchg
jmp
sub
daa
nop
sub
xlat
sbb
and
inc
pop
das
inc
dec
enter
test
not
push
arpl
add
xchg
retf
adc
xchg
pop
fsub
je
jo
sub
add
das
mov
dec
push
cld
mov
shl
jp
and
int3
test
or
pusha
in
aaa
ret
jmp
inc
fmul
jmp
xor
push
push
dec
mov
mov
or
out
ret
add
inc
inc
fst
xchg
inc
inc
retf
push
mov
jo
sbb
adc
and
pushf
and
sub
fwait
and
retf
xchg
les
sbb
imul
jnp
jae
test
sbb
ret
call
sub
fwait
mov
and
(bad)
cmps
and
xor
add
cmps
das
clc
bound
sbb
add
or
dec
jmp
cdq
repnz
popf
inc
pop
aaa
jne
jno
or
jmp
addr16
ret
mov
movs
or
in
mov
mov
icebp
js
into
pop
xor
push
aam
popf
mov
add
mov
pop
sub
add
add
fisubr
adc
mov
js
outs
dec
mov
in
adc
out
idiv
nop
cmp
sti
cmp
imul
in
push
jl
sbb
rol
out
call
inc
adc
lea
jp
mov
inc
add
inc
pushf
enter
sub
mov
and
xor
or
addr16
add
loope
push
pushf
sbb
leave
cmp
add
or
push
mov
add
test
fs
or
daa
pop
rcl
add
movs
ja
dec
fld
test
call
sub
sub
enter
ss
push
adc
pop
rol
push
mov
xor
pop
and
jmp
nop
add
mov
adc
pop
ror
xchg
push
popf
ror
sbb
push
fs
adc
shr
and
xchg
shl
arpl
rol
(bad)
mov
call
cmps
push
retf
sbb
xchg
jbe
add
jnp
mov
inc
movs
push
inc
mov
mov
je
or
push
pop
mov
das
loopne
inc
dec
popf
jmp
lods
add
mov
inc
mov
push
and
push
cmp
pusha
sub
ja
push
sub
and
cmp
cmp
jne
adc
sub
xor
mov
sub
rcr
jae
sub
add
pushf
sbb
push
and
mov
std
ss
or
sub
pusha
push
lea
adc
add
sbb
mov
sbb
fwait
scas
(bad)
dec
xchg
je
clc
pop
jecxz
mov
push
inc
xor
add
dec
adc
test
dec
and
sbb
jp
sub
pop
enter
mov
test
add
xchg
pop
data16
sbb
cmp
dec
add
sbb
mov
lods
pop
call
cmps
mov
imul
push
cwde
and
and
xor
cmp
xchg
cs
mov
sub
js
mov
cmp
rol
shl
and
add
lock
mov
mov
adc
xor
std
push
gs
push
dec
aad
sub
repz
gs
sbb
jl
cs
add
in
and
or
adc
push
movs
and
pop
(bad)
mov
push
add
dec
push
dec
pop
sahf
or
xchg
pop
dec
push
jo
xor
ret
fist
enter
xor
xchg
cwde
fcmovnb
mov
and
add
push
mov
mov
das
or
xchg
daa
or
aaa
cld
mov
adc
fst
push
ja
sbb
adc
dec
sbb
adc
and
mov
or
jno
cs
pusha
sub
sbb
mov
mov
pop
adc
sbb
loopne
aas
xchg
sub
push
inc
dec
pop
inc
fsubr
in
jne
dec
adc
dec
mov
pop
or
movs
in
loop
cmp
mov
(bad)
mov
cmp
xor
pop
cmp
lods
xor
add
push
rcr
add
mov
data16
adc
sub
or
mov
inc
add
push
neg
(bad)
jns
lahf
lods
icebp
sbb
ins
mov
or
js
push
dec
cld
pop
sar
xchg
sub
inc
sub
sub
xchg
inc
pop
jne
mov
sbb
imul
cmp
adc
mov
das
cmp
sbb
nop
inc
mov
or
xor
ror
push
push
push
call
pop
stos
pusha
pusha
shl
push
jae
ins
jo
jne
(bad)
adc
aam
xchg
mov
mov
dec
cmp
push
rcr
int3
pop
cmps
cmc
sbb
push
ds
fst
add
inc
movs
fldz
xor
test
or
pop
popa
dec
xchg
cmp
xor
dec
add
je
sbb
or
jp
inc
and
sbb
cmps
mov
das
inc
sub
fs
outs
jle
jns
jne
js
ror
sbb
or
test
add
add
cli
inc
not
sub
xor
pop
pop
add
gs
mov
jb
xor
mov
fild
xor
js
cs
shl
dec
fisub
das
test
sub
lea
mov
mov
call
in
push
stc
cmp
sar
or
cmp
repz
repz
cmp
addr16
test
movs
(bad)
xchg
stos
loope
sub
repz
adc
or
and
out
mov
xchg
daa
sub
aaa
dec
or
dec
push
fsub
or
(bad)
mov
xor
push
or
dec
and
or
je
fisub
adc
jmp
inc
mov
movs
xchg
xchg
popf
jmp
imul
adc
add
iret
push
(bad)
dec
cld
ffreep
adc
es
hlt
sbb
jo
push
sub
sbb
loopne
inc
adc
add
adc
ret
jmp
call
ja
ins
mov
mov
je
test
jne
pusha
sbb
inc
sub
mov
and
dec
add
dec
dec
push
sub
dec
inc
add
adc
adc
outs
addr16
inc
adc
add
(bad)
adc
sti
add
js
pop
(bad)
dec
dec
mov
sub
in
loopne
imul
inc
adc
push
cmp
add
inc
cmp
jne
pop
push
pop
sub
pop
xor
in
or
sub
rcr
or
mov
(bad)
push
xor
mov
adc
sbb
ficomp
je
push
inc
fistp
dec
xchg
cmova
outs
mov
pop
loop
push
inc
iret
dec
aaa
lods
adc
test
lock
mov
pop
cmp
dec
xor
ror
out
fld
mov
push
lea
xchg
push
sbb
inc
or
and
or
pusha
dec
or
jmp
inc
pop
add
fcom
inc
or
fwait
test
ss
sbb
cmp
mov
xchg
dec
sbb
sbb
push
aas
sbb
mov
push
jle
and
outs
leave
mov
xor
cmp
movs
push
popf
add
loopne
pop
retf
cmp
and
inc
inc
sub
adc
adc
lahf
jg
sub
push
jge
jmp
aas
xor
fcmovb
pusha
mov
mov
sub
or
sub
jmp
not
ja
(bad)
cmp
adc
push
push
cmp
retf
pop
in
inc
or
pop
adc
adc
cmp
or
inc
inc
jecxz
push
nop
shr
ret
jne
push
push
sbb
jp
ror
mov
lds
sub
mov
mov
cmp
jno
mov
sbb
mov
fadd
ret
sbb
lock
mov
clc
jbe
mov
push
jmp
xor
cmp
push
data16
xor
cmp
push
adc
adc
add
adc
adc
inc
retf
jbe
popa
les
or
imul
add
add
add
mov
add
sub
sbb
push
jo
fdivr
fist
mov
or
pop
push
enter
pop
sub
and
sbb
jo
cmp
pop
push
enter
add
adc
xchg
push
xchg
cmp
lahf
add
adc
or
mov
or
pop
loopne
fwait
loopne
mov
int3
mov
cwde
jno
cld
or
cmp
int3
xor
fisttp
add
sbb
cli
add
sub
mov
pop
inc
mov
add
fwait
std
cmp
jne
mov
add
jmp
push
daa
xchg
out
inc
push
outs
push
pop
push
jmp
test
xchg
out
add
outs
dec
pusha
dec
and
xor
dec
aaa
outs
(bad)
leave
mov
inc
add
add
fiadd
inc
fmul
or
add
fild
movs
mov
sbb
inc
ss
sbb
xchg
loop
std
add
push
jo
jne
mov
cmp
je
call
xchg
pusha
ins
add
aas
mov
(bad)
xor
inc
pusha
inc
jne
sbb
ror
or
dec
inc
inc
and
adc
std
sub
dec
push
jge
fisub
popa
mov
jg
or
cmp
cmps
fimul
or
mov
push
dec
jg
pop
xchg
ret
fistp
dec
dec
mov
push
mov
ret
hlt
sub
xor
mov
add
jmp
ret
inc
aas
push
dec
push
imul
jns
inc
(bad)
imul
dec
(bad)
imul
mov
xor
jmp
sub
imul
add
daa
enter
dec
out
sub
and
ret
outs
mov
xchg
or
add
inc
adc
les
xchg
sbb
add
aam
sub
test
mov
cmps
dec
fmul
in
fisubr
sub
pop
push
xchg
xchg
out
push
repnz
int3
mov
xor
js
pop
mov
sbb
sbb
dec
xchg
add
mov
mov
stos
aas
inc
inc
xchg
or
and
inc
ficom
mov
cmp
xor
imul
iret
dec
loopne
les
(bad)
sbb
dec
mov
cmp
mov
shl
in
jb
movs
adc
dec
int
push
rol
adc
mov
rcr
imul
mov
adc
mul
cs
or
pop
imul
aaa
add
movs
push
jne
inc
or
pop
lahf
or
push
jns
dec
hlt
int3
cmp
jmp
cmp
or
push
movs
shr
cmp
and
jecxz
fadd
ja
cmp
pop
cdq
xor
mov
pop
and
cmp
and
rcl
sub
mov
and
add
xor
push
bound
xor
(bad)
pop
or
mov
dec
xchg
imul
test
das
adc
mov
push
gs
je
jo
inc
movs
nop
shrd
jg
outs
pop
push
add
aas
inc
add
icebp
aaa
or
daa
adc
adc
pusha
adc
das
movs
dec
ret
nop
rdpmc
das
or
fmul
xor
xlat
fimul
adc
mov
adc
xor
das
adc
inc
pop
add
dec
enter
inc
sbb
mov
sub
pop
test
daa
int3
xor
mov
fist
inc
test
cwde
add
xor
mov
lock
imul
cs
je
or
pop
es
xor
(bad)
nop
adc
cld
xor
add
add
popf
(bad)
pop
jmp
inc
sbb
aaa
sbb
inc
mov
mov
(bad)
pop
and
and
rcl
xchg
dec
out
dec
imul
mov
xor
loopne
ret
add
sbb
psrld
fmul
mov
adc
cmp
je
inc
imul
hlt
hlt
xchg
mul
nop
out
hlt
or
jmp
or
les
cs
loopne
add
xchg
and
push
dec
pop
adc
pop
adc
jmp
cmp
enter
jne
jno
jp
cmp
sbb
push
pop
fadd
lods
loope
pop
mov
mov
repnz
inc
aad
popa
leave
ins
and
sub
les
sti
fiadd
add
cmovne
aas
adc
add
or
inc
out
push
add
mov
mov
mov
xor
xor
pushf
stos
in
mov
mov
dec
jl
lock
pop
xchg
frstor
pop
sub
sbb
hlt
push
dec
and
dec
xchg
daa
sbb
pushf
xchg
inc
(bad)
sbb
(bad)
bound
fcmovb
sahf
dec
mov
mov
jecxz
mov
mov
lock
add
ins
add
sbb
inc
jne
jg
pop
xchg
cmp
push
ins
(bad)
cmps
add
fstp
push
mov
and
cmps
inc
cs
test
mov
lods
add
in
pop
in
(bad)
push
retf
(bad)
push
cmp
inc
mov
retf
pop
adc
ins
(bad)
add
sub
dec
push
sub
aaa
rol
add
mov
xchg
inc
cmp
cmp
ins
lock
pop
adc
pop
jg
iret
jnp
sti
ss
push
jo
movs
lods
mov
idiv
mov
jmp
repnz
sub
das
daa
mov
fisubr
mov
div
out
sahf
or
and
rcl
push
movs
cld
pop
inc
xor
xchg
push
xchg
mov
sub
xor
or
jb
fld
sub
pop
inc
mov
inc
push
jne
fsub
cmp
inc
and
inc
add
adc
add
push
jmp
mov
add
pushf
cmp
adc
or
and
rol
retw
addr16
jo
mov
push
lahf
ins
mov
dec
pop
jg
pop
adc
xchg
aas
push
add
pop
outs
or
or
pop
addr16
rol
push
add
loope
hlt
dec
stos
cmp
and
dec
or
mov
pop
and
xchg
push
aas
cmp
push
rol
jne
mov
mov
int3
lea
xchg
mov
xor
in
lds
mov
sahf
push
push
add
dec
and
rcr
test
jo
ret
cmp
test
dec
sub
xchg
into
cmp
dec
or
xchg
and
clc
dec
mov
ins
dec
pusha
or
or
xor
add
or
popa
test
hlt
pop
sbb
jo
addr16
push
inc
test
sub
imul
sub
jae
popf
push
mov
jns
iret
jecxz
inc
sub
sbb
jmp
out
push
add
dec
adc
daa
and
jne
popa
push
in
ins
cmp
xor
pushf
sbb
push
pop
cmps
or
sbb
mov
pop
sar
add
dec
mov
mov
aaa
push
into
and
leave
(bad)
sar
inc
mov
shr
add
fbstp
mov
dec
dec
push
mov
xor
dec
adc
push
outs
sti
mov
leave
je
inc
xor
mov
jmp
mov
stos
xchg
inc
push
jbe
loope
inc
dec
scas
neg
and
inc
mov
(bad)
mov
jb
cmc
test
xchg
pop
rcr
les
sbb
sbb
enter
xor
fs
inc
adc
lods
js
test
inc
lock
jmp
call
sub
inc
jns
add
and
add
sbb
xchg
jp
xlat
inc
add
and
jp
out
imul
mov
push
jmp
and
cmp
ins
dec
sti
dec
inc
add
add
push
sbb
cld
icebp
out
cmp
je
mov
xor
inc
pop
aas
js
shr
and
fwait
repz
dec
adc
add
inc
push
das
imul
clc
mov
inc
std
or
or
cmp
popf
or
push
sub
add
and
hlt
inc
mov
das
cmp
mov
mov
das
jns
sub
das
(bad)
jnp
and
mov
test
add
mov
jle
(bad)
mov
mov
jne
stos
inc
stc
adc
inc
js
push
fild
xchg
or
call
xchg
cs
pop
inc
mov
xchg
and
or
pop
sub
push
test
fidiv
add
je
sbb
mov
xor
ss
or
dec
in
jmp
popa
mov
push
xabort
push
and
or
ins
xor
or
int3
push
fbld
or
inc
or
mov
repz
mov
push
pushf
pushf
mov
adc
fsub
call
xchg
cmp
push
jmp
xchg
inc
jae
sub
or
call
mov
bound
pushf
arpl
cld
in
std
lods
mov
mov
sbb
dec
cmps
push
enter
push
push
repz
mov
popa
inc
or
(bad)
mov
inc
daa
push
xchg
aas
mov
mov
mov
(bad)
pop
pop
sub
jecxz
push
mov
mov
call
test
aas
jmp
xchg
push
and
mov
sbb
imul
clc
push
lea
arpl
stc
cli
sbb
jno
and
cwde
push
pop
clc
dec
push
cmps
test
or
or
sbb
in
sar
push
aad
fisttp
cmc
pop
into
adc
cmp
ret
int3
xor
arpl
mov
xchg
cli
mov
inc
setle
jne
jo
dec
pop
add
call
aam
sets
inc
jg
jl
push
sub
inc
je
pusha
pop
push
lahf
fisttp
mov
sbb
fs
jne
inc
retf
jmp
test
call
jge
bound
lods
mov
dec
xchg
mov
(bad)
shl
call
dec
std
cmp
shr
jmp
or
sub
retf
leave
xor
or
push
add
sbb
dec
sbb
and
ror
into
sub
jns
cmp
mov
inc
pop
sbb
mov
mov
add
or
mov
adc
and
sbb
mov
shr
jp
popw
mov
mov
sbb
movs
inc
test
sbb
and
xchg
fst
jmp
and
jne
(bad)
sahf
ins
or
cdq
pop
push
idiv
daa
jle
repz
jg
add
and
pop
jo
dec
mov
sub
or
nop
sti
sbb
add
call
push
dec
mov
push
sub
mov
mov
dec
ins
mov
xchg
fiadd
xchg
mov
inc
aaa
nop
and
movzx
es
mov
or
add
adc
iret
ja
loopne
or
add
cmp
push
loop
and
push
(bad)
sbb
pop
cmp
and
sbb
or
xchg
hlt
inc
outs
pop
sbb
pop
sbb
jae
sbb
rcr
and
inc
in
add
ins
and
xchg
rol
adc
sti
xlat
and
inc
and
(bad)
add
mov
and
xlat
inc
inc
mov
les
dec
pusha
cmovae
mov
dec
adc
sahf
(bad)
mov
sbb
jno
adc
lods
aaa
pop
pop
inc
mov
cmp
(bad)
ins
enter
cmp
outs
sub
mov
in
xchg
fimul
adc
and
addr16
inc
leave
pop
lds
add
adc
mov
rcl
arpl
call
popf
shr
add
cmp
pop
mov
sti
mov
pop
mov
fmul
mov
push
gs
enter
sbb
inc
add
rol
les
sub
xor
mov
dec
add
and
mov
add
jns
daa
adc
and
xchg
sub
jnp
and
cmp
sub
sbb
adc
mov
push
pusha
es
push
enter
pop
sbb
xor
dec
sbb
inc
or
dec
jp
or
push
fdivr
pushf
sub
inc
or
inc
mov
dec
and
add
stos
push
add
mov
fidivr
xchg
mov
cmp
mov
dec
enter
push
xlat
in
push
cmc
adc
and
mov
and
sbb
sbb
pop
sbb
bound
daa
idiv
pop
cwde
and
sub
pop
mov
lock
inc
sbb
test
aaa
or
daa
retf
test
lods
or
mov
xor
jne
arpl
adc
xor
(bad)
mov
sub
inc
inc
jecxz
cs
mov
pop
movs
or
aam
mov
outs
ins
jno
xchg
xchg
in
aad
ja
push
fnsave
mov
add
and
sbb
inc
out
inc
loopne
add
mov
sub
or
sbb
dec
inc
add
fistp
ss
shl
js
fsubr
rol
xor
lods
adc
pop
mov
retf
pop
xchg
adc
pop
icebp
mov
mov
dec
cmp
pop
xor
or
xor
dec
mov
in
test
rol
add
adc
pop
add
sub
adc
rcr
rcl
mov
inc
pop
or
or
sub
mov
push
adc
outs
hlt
retf
jne
ins
push
call
push
hlt
xchg
xor
(bad)
sbb
mov
les
sbb
push
xor
es
dec
clc
cmp
adc
add
mov
or
icebp
ds
sub
mov
and
pop
lods
gs
pop
mov
fcmovne
dec
mov
mov
inc
adc
mov
loopne
add
pop
push
adc
lods
aaa
mov
xchg
jg
fs
call
out
cmp
je
fistp
or
rol
fild
mov
loope
push
sbb
or
ja
fcom
and
sub
sbb
popa
adc
or
mov
sbb
add
inc
adc
sbb
cmps
add
aam
call
adc
fwait
nop
test
inc
test
jp
push
dec
pop
xchg
dec
sbb
sbb
add
push
and
mov
pop
inc
inc
pop
push
inc
pop
pop
in
push
fldcw
mov
pop
xchg
push
push
cmps
enter
or
mov
loopne
inc
xchg
jmp
xchg
xlat
jne
mov
jns
in
or
mov
mov
popa
jmp
push
popa
cli
push
mov
add
sub
add
and
or
push
rol
jp
repz
pop
dec
daa
push
mov
mov
push
sub
aaa
cmp
and
mov
(bad)
fsub
ret
pop
and
hlt
add
lods
lock
mov
cmp
inc
pop
sub
dec
loop
add
fbld
ror
ja
add
ins
das
xor
popf
mov
or
push
cmp
mov
sub
arpl
std
and
or
(bad)
mov
pop
sub
inc
cmp
push
or
xor
xchg
dec
ja
mov
adc
inc
pop
push
int3
stos
pop
mov
mov
and
dec
(bad)
sub
adc
addr16
push
das
shl
dec
xchg
(bad)
sbb
addr16
daa
dec
test
data16
aaa
movs
fstp
fwait
shr
inc
call
test
sub
dec
ins
push
mov
jne
in
cmp
fadd
sbb
movs
psubsb
nop
es
add
aas
into
inc
(bad)
lds
dec
inc
push
dec
sub
arpl
fnstsw
(bad)
mov
clc
mov
inc
hlt
pop
push
cmp
adc
cmp
add
pop
(bad)
mov
push
or
lock
jnp
xor
inc
pop
mov
pop
or
push
out
push
pop
mov
cmp
inc
adc
mov
inc
push
inc
push
add
daa
adc
dec
xor
and
and
xor
mov
xor
cli
mov
int3
pop
loopne
scas
es
pop
inc
daa
je
(bad)
jmp
mov
outs
sbb
ror
inc
jne
out
ins
es
cmp
fisubr
push
or
cmp
(bad)
imul
pusha
es
rcl
pop
repnz
mov
dec
mov
sbb
dec
imul
inc
inc
call
push
ret
xchg
nop
call
dec
ins
loope
loop
ins
dec
or
sbb
push
fcom
push
cdq
jnp
pop
or
inc
add
inc
mov
in
ins
dec
dec
ss
xor
xchg
and
adc
mov
shl
sub
adc
pop
lahf
and
mov
ret
mov
les
xchg
sbb
pop
popa
pop
inc
and
pop
dec
loope
and
(bad)
test
jge
and
mov
xor
ret
int
aas
mov
push
mov
js
push
push
js
push
cmp
in
das
(bad)
cdq
xor
test
mov
test
add
sub
hlt
add
sbb
cmc
mov
hlt
cmp
je
inc
xor
ret
mov
xor
outs
xchg
dec
stos
adc
mov
cmp
rcr
into
or
jns
adc
or
pop
pop
adc
xchg
inc
popa
xchg
and
popa
fldenv
outs
pop
bound
shl
adc
xor
and
inc
rcr
adc
fcompp
pop
adc
push
je
sub
pop
jp
ja
cmp
xchg
pop
sbb
pop
loop
inc
add
ins
scas
stos
add
push
icebp
mov
and
movs
xor
imul
inc
es
fs
lock
cmp
outs
jno
add
xor
mov
lock
in
(bad)
mov
ins
dec
inc
sub
push
or
mov
sub
lock
add
hlt
imul
in
cmp
or
sbb
lds
add
es
xchg
out
lock
lock
add
test
lock
sub
adc
js
xchg
fistp
sub
xor
ja
xlat
aam
mov
jmp
adc
add
mov
dec
dec
mov
and
inc
inc
adc
dec
pop
pop
lods
movs
pop
pop
ins
xor
rol
sub
movs
mov
bound
xchg
jge
leave
movs
inc
mov
and
xchg
pop
outs
dec
push
adc
dec
sbb
jb
cmp
mov
jne
and
movs
fidivr
sbb
and
adc
add
rcl
shr
inc
xchg
dec
push
push
inc
cs
mov
fild
jbe
pop
adc
cdq
loope
lock
mov
aas
pop
fs
push
(bad)
sbb
rol
and
cmp
or
add
mov
(bad)
nop
sbb
or
cld
cmp
cmovp
sahf
xor
mov
fwait
retw
cmp
popa
aam
push
data16
add
jge
(bad)
jbe
xchg
jmp
test
cmp
xchg
push
push
xor
ficom
ja
adc
nop
pop
test
or
iret
add
inc
fnstsw
mov
and
addr16
sbb
xor
adc
pusha
cwde
cmp
cdq
add
add
add
ret
xor
and
mov
mov
jbe
mov
inc
jmp
jl
add
mov
mov
je
loop
pop
cdq
mov
je
pop
pop
je
arpl
jmp
and
fdiv
sub
jmp
fwait
sbb
inc
(bad)
lock
xchg
mov
jecxz
pop
add
push
dec
dec
and
(bad)
fst
imul
and
fld
adc
or
push
push
push
dec
and
mov
adc
rcl
hlt
dec
ret
sub
jae
adc
push
out
push
pop
push
test
out
push
push
inc
ins
adc
push
cmc
mov
cmp
jl
test
cmp
jne
jge
je
lds
fcomp
div
cmp
cmp
push
xchg
cmp
adc
mov
pop
das
es
adc
out
xchg
es
pop
cmp
mov
pop
pop
jnp
mov
loopne
neg
aaa
cmp
xchg
jl
dec
sbb
scas
aam
dec
jmp
cmp
mov
mov
inc
jne
in
popa
adc
jb
and
dec
dec
adc
test
push
dec
dec
jl
mov
loopne
mov
inc
sub
push
clc
push
cmps
push
stc
stc
les
hlt
int
and
loopne
jb
xchg
jp
sub
in
or
push
cmp
cmp
sub
adc
push
jnp
and
and
adc
and
test
movs
push
(bad)
pop
ficomp
push
adc
add
adc
or
xchg
outs
xchg
ret
mov
cwde
daa
stc
daa
mov
add
daa
scas
pusha
push
(bad)
xchg
or
dec
or
push
ret
rcl
ret
sti
inc
nop
pop
xor
or
xor
aaa
add
dec
jl
daa
test
cmp
js
lds
jl
imul
or
and
(bad)
fxch
test
out
in
jl
pop
test
push
ret
sbb
mov
loope
sbb
inc
cmps
ret
int
leave
jo
mov
int3
rcr
pop
and
lea
jle
enter
sahf
outs
inc
and
mov
inc
mov
inc
cdq
xor
or
bound
pushf
ins
xchg
push
sub
jns
add
and
neg
adc
jg
pop
add
pushf
je
dec
sbb
rol
sti
push
add
sbb
in
mov
add
ret
sub
pop
sub
ror
shl
sub
mov
mov
bswap
pop
js
outs
jns
jo
sub
mov
pop
nop
sahf
xchg
mov
adc
xor
pop
pop
mov
and
daa
popf
jg
inc
xchg
dec
add
mov
test
dec
sbb
sub
push
mov
jae
inc
inc
xor
inc
imul
adc
pop
xor
add
xchg
adc
icebp
or
sub
fidiv
push
push
and
mov
add
inc
sub
stos
movs
adc
popf
(bad)
dec
call
cmp
nop
xor
test
add
and
repz
push
jg
mov
and
mov
add
xchg
iret
or
adc
int
retf
and
sbb
rol
daa
mov
jne
cmp
and
mov
jl
and
and
mov
mov
jge
cmps
inc
jne
push
xlat
ja
loop
shr
or
arpl
shr
test
or
imul
cmp
mov
add
sbb
jae
jo
scas
ja
xchg
xor
add
lahf
inc
imul
cld
add
dec
pop
mov
adc
and
fstp
std
xchg
(bad)
pusha
adc
ds
sbb
push
mov
enter
push
adc
mov
pop
sbb
mov
jne
pop
jb
sub
cmp
fsub
push
es
xor
sbb
and
cmps
ss
ficomp
cmps
test
test
je
int3
dec
popf
fcmovu
pop
and
aam
ss
push
jmp
pop
ins
stos
in
loop
ja
xor
ficom
fisttp
push
adc
dec
sbb
js
ret
sbb
xchg
adc
pop
dec
fsub
imul
lahf
outs
movs
nop
or
ret
pop
sub
hlt
and
xor
(bad)
inc
inc
retf
adc
sbb
ins
pop
test
xor
xor
inc
scas
pop
and
xchg
push
xor
test
inc
cmp
dec
rcl
sub
push
cmp
push
xor
xor
pop
jmp
fwait
test
cmp
push
dec
(bad)
sbb
add
sbb
or
sbb
shr
ds
sub
push
repnz
xor
dec
xchg
pop
add
push
push
mov
inc
arpl
aas
and
bound
nop
dec
ret
sahf
pop
add
loop
movs
retf
stos
es
sti
jp
fcomi
and
pop
sbb
or
mov
sub
ds
ins
popf
mov
daa
mov
fwait
mov
je
mov
cmc
setbe
je
or
push
push
inc
arpl
or
mov
xchg
sub
inc
mov
int
inc
add
adc
dec
fiadd
je
push
mov
int3
adc
add
dec
rcr
push
test
xor
xor
add
and
dec
rcpps
mov
adc
jno
cmp
cmp
cwde
nop
mov
sbb
cmp
dec
push
in
xor
mov
enter
inc
(bad)
dec
mov
xor
inc
adc
not
xchg
pop
jnp
push
sar
mov
dec
add
mov
cmp
scas
xchg
sbb
or
inc
enter
jno
mov
sbb
push
lahf
push
inc
mov
in
mov
je
jmp
sbb
shl
add
movs
xchg
test
pop
scas
sub
repz
daa
shl
mov
shl
ins
enter
adc
movs
adc
lahf
fist
or
push
push
mov
aas
dec
sub
xchg
sbb
pop
sbb
inc
clc
add
ficomp
lods
out
ins
sbb
xor
lock
sbb
leave
in
dec
pushf
push
mov
in
sbb
call
sub
dec
push
cmp
dec
bound
xor
and
lods
in
inc
inc
jno
test
inc
ins
xchg
outs
aam
cwde
dec
adc
or
xor
shl
push
int3
lea
nop
imul
fistp
dec
lock
and
inc
dec
data16
push
sbb
inc
pop
adc
setl
rol
arpl
sbb
push
and
(bad)
mov
inc
fbstp
aas
cdq
or
push
or
dec
pop
fcmovbe
or
mov
sar
or
movs
xor
ss
jo
push
pusha
push
dec
or
in
loopne
xor
test
xchg
push
add
bound
push
test
inc
sub
or
lea
hlt
dec
inc
cmps
xor
mov
or
lock
xchg
add
cmps
popf
jno
or
add
inc
(bad)
jb
std
adc
cmp
cmps
inc
mov
push
adc
xchg
sbb
lods
ret
cmp
cmc
sub
mov
dec
dec
xchg
mov
dec
pop
inc
and
push
les
pop
or
test
pop
in
push
outs
mov
adc
inc
xchg
(bad)
fadd
sti
call
jo
adc
fcom
dec
arpl
cmp
adc
neg
mov
add
xor
push
retf
xchg
dec
pushw
pop
add
adc
pusha
xor
adc
and
sbb
lock
fmul
enter
lods
in
xchg
aam
xchg
ins
leave
and
xchg
movs
bound
jecxz
dec
in
adc
std
dec
push
xchg
mov
bound
sub
ins
push
dec
add
pop
ficom
sub
push
or
scas
add
pusha
cmp
push
in
or
xor
adc
push
sbb
sahf
cmc
and
pop
xlat
mov
mov
dec
xlat
or
aam
and
xor
add
or
retf
in
adc
cs
test
das
in
add
test
mov
mov
or
lds
(bad)
in
rol
mov
xor
test
dec
push
add
loop
and
mov
adc
dec
scas
pop
ffreep
push
mov
dec
jno
mov
push
ins
pop
pop
(bad)
cdq
jne
adc
loopne
cmp
sbb
shr
cld
adc
mov
xor
or
jg
jmp
and
inc
or
sub
pop
dec
pop
imul
inc
popa
inc
or
inc
call
or
dec
adc
xor
jns
or
sub
ffreep
jnp
lds
or
sbb
sbb
loope
(bad)
rcl
or
cmp
sbb
and
inc
push
test
pop
jno
lods
loopne
jg
push
xchg
mov
xchg
hlt
es
sbb
enter
jo
mov
adc
stc
sbb
and
adc
scas
cmp
ins
and
xchg
pusha
daa
xchg
dec
mov
in
push
aam
add
pop
mov
dec
sbb
call
push
push
data16
add
and
aam
mov
cmp
mov
mov
add
outs
jl
sbb
retf
test
or
sbb
adc
xor
add
sbb
pushf
stos
cmps
dec
mov
push
mov
fidiv
and
repnz
mov
mov
int3
(bad)
xchg
outs
inc
sub
dec
and
leave
sub
and
movs
mov
fwait
(bad)
in
mov
(bad)
in
pop
mov
rol
test
xor
popa
bound
sub
and
std
lock
and
les
mov
xchg
mov
out
mov
push
ret
and
nop
dec
mov
loopne
xchg
xchg
xchg
dec
mov
xchg
mov
fmul
lds
inc
test
in
mov
bound
add
jmp
xchg
inc
fild
sub
test
inc
mov
sub
or
add
inc
fdiv
adc
aas
inc
add
test
cmp
sub
push
push
(bad)
or
inc
adc
and
cwde
mov
push
sbb
(bad)
enter
xchg
jle
mov
leave
xchg
xchg
test
mov
bound
bound
or
mov
mov
shl
or
mov
rcr
in
das
mov
mov
(bad)
mov
pusha
ror
sar
sahf
add
ret
daa
lods
adc
sbb
daa
jmp
and
mov
mov
xchg
inc
outs
test
jbe
pop
(bad)
clc
fmulp
lods
sahf
mov
movs
jb
push
je
add
adc
repnz
shl
(bad)
lods
sub
test
inc
mov
or
or
inc
adc
xchg
add
(bad)
pop
inc
and
call
add
jne
(bad)
xor
std
data16
dec
cmp
push
push
inc
mov
xor
jle
push
sub
add
retf
clc
push
(bad)
jmp
clc
mov
pop
xchg
(bad)
retf
and
(bad)
dec
(bad)
jge
in
inc
add
sub
or
cmp
popa
push
ret
cld
add
hlt
pop
(bad)
call
inc
cmp
jl
jmp
in
mov
xchg
stos
mov
fucomi
add
jg
cmp
inc
std
mov
paddsb
xor
and
mov
xchg
lods
and
jge
fstp
test
pop
cmp
jg
cmp
sahf
loopne
dec
dec
sbb
dec
das
add
push
movs
inc
out
mov
das
cmovle
or
xchg
inc
adc
daa
sub
fadd
cmps
jne
jg
or
add
mov
and
or
addr16
mov
mov
inc
and
sub
sbb
inc
dec
xor
mov
test
movs
mov
push
mov
sbb
test
xchg
nop
inc
pop
jmp
cdq
in
sbb
movs
sbb
ficom
sbb
mov
shr
pop
(bad)
outs
nop
xor
push
addr16
fwait
or
sub
mov
mov
inc
push
mov
test
push
cmova
lea
test
sbb
add
inc
add
lahf
inc
shl
push
iret
int
jmp
(bad)
pop
jecxz
adc
loope
sbb
jbe
test
sbb
jns
push
and
sub
leave
xchg
add
sub
mov
and
jno
pop
mov
lock
adc
out
pop
pop
add
into
mov
push
hlt
dec
mov
xchg
sub
xchg
int
sub
xchg
add
or
and
mov
mov
mov
dec
hlt
xor
repz
jle
loop
xor
mov
cmp
push
test
sbb
loopne
mov
fbld
mov
sahf
pop
inc
cmp
packsswb
pusha
aas
xor
ins
jbe
pop
push
push
ret
xlat
enter
iret
mov
(bad)
adc
popa
addr16
pop
pop
or
lsl
push
mov
idiv
mov
adc
fcomp
std
mov
push
popa
imul
test
mov
sti
mov
inc
fmul
add
test
cdq
lock
mov
mov
out
dec
fdiv
mov
jecxz
ins
cmp
pop
dec
ins
rcr
ret
pop
stos
jp
xchg
retf
xor
test
cmps
and
lods
movs
jne
(bad)
jecxz
cmp
jl
sub
mov
rcl
sbb
mov
mov
add
cmp
cmp
movs
pop
hlt
xchg
push
push
imul
cmp
dec
inc
ficomp
inc
adc
xchg
dec
fisttp
inc
xchg
and
pop
and
retf
in
mov
and
cmp
push
push
and
cmp
lods
add
sub
mov
adc
mov
leave
xchg
(bad)
movs
(bad)
pushf
cmp
imul
in
xor
add
in
loopne
and
xchg
lods
adc
call
dec
cmps
shl
loopne
sbb
add
pushf
nop
adc
sub
xchg
and
pop
loopne
mov
sbb
xchg
inc
push
addr16
jmp
cs
xlat
inc
mov
or
inc
(bad)
xor
and
and
and
es
or
sbb
fsub
xchg
cmps
and
push
imul
adc
lahf
loop
jb
mov
(bad)
pop
mov
mov
mov
xor
or
cwde
push
xor
inc
les
add
xchg
mov
sbb
or
or
push
ins
pop
inc
gs
stos
lods
push
jmp
mov
pop
inc
sbb
int3
test
aad
(bad)
inc
(bad)
cmp
cmp
mov
(bad)
mov
dec
daa
sbb
and
xchg
test
or
sbb
lock
xor
jno
or
and
xor
hlt
xcrypt-ecb
cmps
or
cmps
cli
push
jne
sub
leave
pusha
fnstsw
test
lock
push
dec
leave
stc
test
or
sbb
push
mov
ret
pop
mov
mov
stos
pop
or
sub
div
add
cmp
sub
adc
sahf
add
pop
jp
dec
and
sbb
and
das
sti
imul
mov
xchg
sbb
and
push
sub
div
mov
mov
jp
pop
cmp
dec
push
sbb
fcom
adc
sbb
cdq
sbb
imul
daa
add
dec
inc
xchg
xor
add
mov
je
sbb
and
imul
sub
ret
mov
sub
sub
dec
pusha
xor
mov
fld
sbb
inc
mov
(bad)
fnstenv
mov
sub
cmps
es
jl
popa
ret
sahf
push
adc
push
sbb
xchg
inc
outs
bound
adc
xor
shl
js
jmp
leave
inc
sub
mov
sti
and
dec
mov
imul
je
push
push
je
mov
sub
ror
cwde
enter
xchg
or
test
(bad)
rcr
adc
jle
or
or
or
add
test
in
add
or
fldenv
jns
ror
xlat
fild
add
ins
inc
add
mov
sbb
dec
sub
lods
push
addr16
push
push
dec
push
mov
add
adc
adc
adc
jg
cmp
sbb
push
add
push
repnz
shl
jno
add
mov
cmp
je
mov
xor
sbb
sbb
mov
daa
inc
inc
sub
and
push
sub
dec
dec
movs
sub
cmps
outs
imul
(bad)
inc
add
stos
xchg
cmp
cld
loop
popa
pop
add
adc
das
sub
push
cmp
scas
add
(bad)
dec
loopne
dec
imul
push
nop
fnstenv
add
push
xor
pop
or
xor
repnz
sbb
and
mov
inc
or
and
push
out
mov
inc
push
jg
push
mov
dec
mov
push
nop
inc
xchg
gs
call
mov
cmps
adc
nop
sbb
sbb
xor
loopne
add
add
daa
(bad)
push
mov
ja
bound
add
sbb
or
sub
or
sbb
and
mov
je
sub
sbb
addr16
or
sbb
lea
mov
push
mov
and
out
and
jb
ss
jg
sub
pop
dec
adc
lahf
add
mov
icebp
add
xchg
jg
ins
inc
test
adc
or
sbb
popa
cmp
sbb
mov
rcl
inc
ins
sbb
fcomp
inc
aam
sub
pop
cdq
mov
xor
add
inc
movs
and
popa
ja
or
enter
sbb
lods
xchg
jmp
fistp
ret
aam
out
adc
or
adc
push
lods
mov
lea
xchg
not
and
test
add
nop
mov
sbb
add
movs
xchg
inc
pusha
aaa
je
and
push
mov
enter
add
stos
sub
dec
mov
add
rcl
leave
adc
cmp
add
cmp
jmp
jo
outs
hlt
or
pop
arpl
or
call
jne
cmp
push
popf
pop
inc
and
fdiv
mov
sbb
fwait
xor
sbb
call
mov
inc
inc
cmp
js
push
sub
push
dec
add
or
aaa
xor
fs
inc
sbb
add
out
or
dec
fneni(8087
sbb
inc
xor
xor
(bad)
mov
xchg
dec
add
out
or
xor
das
popa
lahf
arpl
jo
jle
js
jecxz
xchg
imul
mov
inc
dec
in
push
dec
clc
adc
aas
stos
push
xchg
xor
rcl
jb
pop
pop
cmp
cmp
loop
mov
or
mov
(bad)
xchg
ret
lds
ror
add
daa
in
mov
xchg
mov
in
ror
pop
mov
pushf
outs
and
mov
pop
pop
add
icebp
loopne
lahf
cmp
movs
leave
ss
mov
inc
dec
xchg
mov
mov
sub
sub
dec
jb
or
dec
lods
push
mov
dec
jo
lods
push
(bad)
pusha
lds
std
pop
push
imul
cmp
pop
int3
push
adc
adc
jne
add
or
jno
clc
mov
imul
cwde
mov
imul
pushf
jb
daa
jmp
add
sbb
push
dec
in
inc
cwde
adc
cmps
movs
pop
pop
and
pop
add
pop
pop
sbb
ins
test
mov
mov
es
inc
ja
pop
or
nop
mov
sbb
test
and
push
dec
xor
inc
mov
xor
mov
mov
add
mov
test
sub
lahf
and
and
adc
lods
jmp
and
loopne
push
fistp
jo
lods
mov
xor
add
and
add
enter
mov
xchg
lahf
push
add
or
pop
add
push
fcom
lahf
sub
and
xor
mov
(bad)
lahf
and
leave
and
or
or
rcl
add
xchg
add
and
sub
js
(bad)
pop
add
jmp
dec
rcl
cmp
add
xor
pop
or
adc
lock
clc
pop
leave
les
pop
mov
sbb
mov
mov
(bad)
les
add
mov
ror
adc
or
adc
mov
adc
pop
scas
lock
cld
add
or
sbb
dec
mov
pop
lock
pop
stos
mov
sbb
mov
and
add
std
cmp
je
es
or
lods
inc
ins
jecxz
mov
iret
loopne
mov
jno
scas
inc
je
mov
rcl
mov
add
mov
outs
(bad)
push
test
or
(bad)
mov
sbb
xchg
sti
cmp
or
pop
add
jle
xor
mov
cmc
lea
adc
imul
mov
adc
or
movs
jnp
mov
add
in
adc
push
mov
lds
xor
adc
and
cmp
or
xchg
xlat
adc
adc
or
sub
add
inc
inc
imul
pop
test
xchg
adc
dec
pop
jg
movs
sbb
cmc
aam
pop
xlat
loopne
ss
sub
in
mov
dec
adc
aad
jb
mov
jne
add
xor
mov
adc
push
xchg
sub
(bad)
or
shl
ins
mov
or
mov
adc
fdiv
mov
or
fdivr
scas
jmp
cmp
js
out
jnp
push
cmc
fwait
idiv
(bad)
sub
mov
cmp
adc
jle
jmp
imul
fmul
cmp
ss
pop
call
gs
adc
les
adc
imul
push
icebp
adc
inc
dec
add
add
pop
inc
pop
jae
adc
nop
xchg
inc
and
test
add
adc
fwait
mov
inc
xchg
pop
sbb
addr16
nop
nop
mov
call
dec
les
scas
sbb
or
or
les
add
push
mov
es
mov
add
jl
jge
pop
push
movs
jns
cli
push
xor
add
arpl
js
call
out
int
ficom
out
push
add
jbe
fisubr
push
cmp
pop
pop
mov
add
icebp
div
and
sub
hlt
(bad)
xor
loopne
jmp
and
ins
or
pop
sub
fstp
fwait
and
jmp
jmp
jmp
xchg
jge
enter
xlat
ss
fistp
nop
lea
jne
mov
lock
jne
jmp
mov
adc
xor
ins
push
les
jecxz
loope
js
push
and
pusha
add
in
mov
adc
je
pop
sbb
in
popa
jl
les
into
(bad)
adc
iret
ds
push
lods
inc
ds
(bad)
aad
movs
imul
push
xlat
lea
mov
jmp
dec
test
popa
(bad)
int3
sar
jnp
inc
(bad)
daa
retf
test
in
and
(bad)
push
push
arpl
adc
sbb
push
call
pusha
rcr
or
lea
jecxz
fcomp
nop
out
adc
ret
jns
outs
mov
imul
sar
xchg
pop
adc
add
lods
or
inc
or
pop
ins
and
adc
das
push
rcl
in
fdiv
sub
push
dec
and
out
pop
add
ins
in
mov
mov
loope
arpl
add
inc
fmulp
sbb
and
jl
mov
sbb
mov
cwde
mov
push
es
sub
in
ss
sub
or
inc
out
xchg
cs
(bad)
iret
dec
adc
pop
hlt
add
or
mov
pop
pop
and
mov
shl
mov
jb
sahf
xchg
or
mov
add
jge
(bad)
fcomp
in
retf
movs
adc
or
sub
push
imul
retf
in
rcr
(bad)
sbb
bound
ret
test
jmp
adc
iret
xchg
lods
shl
mov
push
cmp
mov
sbb
mov
sub
adc
add
and
and
in
inc
pusha
sbb
scas
jmp
mov
and
sub
xchg
nop
mov
and
in
mov
push
in
in
and
fisttp
mov
nop
sbb
and
in
add
jb
hlt
in
push
add
xchg
xchg
retf
and
push
push
fdiv
call
in
inc
mov
clc
hlt
mov
retf
push
jo
adc
cmovp
ret
out
pop
inc
pop
test
fstp
mov
and
stos
push
xchg
jg
adc
jae
pusha
adc
sbb
(bad)
retf
add
mov
ret
(bad)
mov
arpl
aad
aaa
xor
jo
js
ret
bound
adc
add
jo
inc
mov
pop
ja
and
sub
pop
sbb
xchg
popa
lds
and
or
or
cmp
xchg
add
fwait
loopne
out
fsub
outs
add
in
dec
or
mov
xor
scas
pop
fiadd
or
sbb
hlt
lahf
or
mov
out
dec
jmp
push
loope
call
sar
inc
cmp
xor
rol
loope
mov
mov
or
mov
int
and
lea
sbb
cmp
add
push
fld
loopne
add
pushf
inc
jmp
ftst
mov
sbb
daa
jb
pop
rcl
push
and
xor
arpl
and
adc
and
cmp
cwde
cld
test
adc
into
push
icebp
sub
jle
sbb
lea
dec
push
dec
xor
xchg
retf
push
in
or
mov
cmp
sub
retf
loope
xchg
out
adc
sti
into
in
and
cmp
or
inc
out
jae
add
ret
cdq
aad
dec
mov
test
das
xchg
pop
fstp
test
aad
fisttp
adc
jns
out
push
ss
test
out
cmp
repz
xor
test
jns
fsubr
add
popf
pop
shl
repz
mov
aam
int
aad
mov
pop
daa
aas
mov
inc
iret
jae
mov
test
or
sbb
vpsraw
sub
sbb
cmp
sar
dec
mov
inc
imul
dec
ins
ins
cdq
shl
sbb
dec
dec
dec
leave
add
dec
dec
call
add
cmp
jbe
jp
pop
add
fistp
nop
add
es
cmp
jbe
add
xchg
in
add
mov
jg
sbb
sbb
fld
fsub
fst
add
inc
fld
movs
add
clc
mov
fld
fsub
fstp
js
(bad)
fcom
jns
stos
ins
inc
adc
jns
sub
cs
push
hlt
nop
dec
add
test
fld
ins
mov
fild
fild
sub
push
jg
add
push
pop
mov
jns
into
dec
mov
xchg
hlt
and
push
movs
add
mov
jle
mov
mov
ins
fwait
cmp
jg
push
test
and
jg
cmps
or
leave
xchg
xchg
sar
shl
movs
lods
adc
bswap
mov
out
loopne
cdq
add
mov
sbb
outs
ins
and
sub
loopne
fnsave
jno
sub
fchs
sub
gs
les
mov
mov
or
pop
sti
mov
in
dec
add
dec
add
dec
iret
test
add
add
pop
enter
push
push
test
repnz
or
and
imul
dec
cmp
idiv
pop
push
or
jbe
fsub
ret
cmp
jae
call
int
xor
or
dec
jo
(bad)
(bad)
xor
or
cmps
sbb
inc
pop
loopne
js
addr16
or
xor
into
mov
mov
sbb
xchg
jns
leave
add
test
sbb
popa
fcmovnbe
adc
fld
mov
inc
inc
and
jns
inc
mov
inc
pop
fmul
ins
sbb
pop
or
std
sbb
push
cmp
or
adc
sub
push
clc
inc
add
les
add
mov
jae
add
mov
(bad)
fs
cmp
inc
lods
lds
(bad)
aaa
rcl
mov
inc
adc
loope
aas
and
add
add
imul
and
pusha
and
je
test
jne
pushf
sub
pusha
and
arpl
jne
sub
adc
or
ins
cmp
sbb
adc
test
mov
add
jl
(bad)
adc
(bad)
jecxz
nop
nop
not
dec
xchg
sub
test
fisubr
adc
sbb
int
sahf
push
adc
xchg
not
push
daa
push
jmp
cmp
clc
inc
xor
mov
cmp
ss
push
sbb
sbb
dec
gs
sbb
je
mov
les
or
adc
stc
leave
or
jo
xor
and
(bad)
cmps
mov
sti
jmp
cmp
dec
ins
cmps
xor
loopne
adc
add
and
pop
sub
fsubr
sbb
aam
add
inc
imul
or
mov
and
les
jns
imul
cli
into
call
sub
into
mov
call
daa
push
xor
imul
cmp
or
jp
adc
sbb
push
xor
fld
push
mov
fist
sub
and
push
and
add
outs
jne
sub
das
xchg
mov
mov
push
inc
and
jl
fisubr
shl
fisttp
mov
jmp
pop
push
mov
xchg
and
pop
sbb
xchg
repz
or
retf
inc
out
xchg
sub
and
lock
xchg
adc
mov
in
pusha
loop
jecxz
(bad)
sbb
mov
xchg
mov
or
mov
push
shl
sbb
adc
lods
adc
in
mov
(bad)
sbb
and
mov
pop
cmp
fstp
jno
rcl
push
jg
std
mov
add
sbb
mov
sbb
dec
pop
(bad)
(bad)
cmp
push
fdivp
or
popa
and
mov
or
je
loop
pop
pop
mov
xor
xchg
add
inc
pop
ficomp
aam
jmp
push
mov
mov
and
sub
sbb
and
sub
fild
mov
cmps
daa
movs
cmp
adc
lock
adc
sahf
pushf
retf
clc
xor
lds
ret
bound
pusha
mov
xor
inc
aas
ss
arpl
out
mov
pop
scas
add
es
inc
inc
inc
push
xchg
es
inc
scas
fild
test
adc
cmp
iret
adc
jmp
movs
iret
and
sub
xchg
rcr
cmp
xlat
cmps
pop
lea
push
jecxz
(bad)
sub
fld
or
test
fstp
inc
jecxz
mov
jp
fdiv
cmp
push
cmp
push
dec
fst
jno
repz
jge
fwait
test
repz
in
adc
xchg
out
sahf
es
push
lahf
out
retf
iret
pop
rcr
aaa
jmp
mov
xchg
mov
int
jnp
les
xor
pop
pop
or
xchg
push
pop
or
lea
push
fidiv
push
jmp
dec
xchg
pop
and
imul
inc
dec
sbb
add
mov
fst
adc
xlat
dec
fcomi
or
outs
imul
push
dec
stos
add
push
xor
imul
out
repz
jnp
test
out
cld
fs
add
xor
adc
pop
repnz
je
push
adc
push
add
or
ss
xchg
cmp
mov
adc
ror
xor
fisub
or
ds
shr
or
bound
add
jo
dec
retf
sti
imul
add
xor
iret
sbb
shr
inc
or
mov
mov
(bad)
jns
inc
sbb
add
jns
leave
and
jbe
test
xchg
dec
in
(bad)
push
adc
push
or
mov
push
jno
dec
mov
xchg
add
je
push
or
pusha
adc
jmp
loope
sub
and
sti
and
cld
adc
lods
jne
inc
add
adc
adc
int3
sar
add
cli
rol
jp
mov
idiv
lea
pop
jmp
es
into
or
cmp
ret
mov
loope
rol
pop
cdq
inc
mov
mov
hlt
or
add
jl
inc
jno
inc
adc
sbb
lods
fisttp
mov
push
mov
les
(bad)
push
mov
sbb
dec
in
rcl
cmp
test
mov
test
fsubr
inc
sub
enter
jmp
(bad)
loope
les
mov
and
mov
les
cld
cmc
sbb
sti
and
xor
cmc
jmp
adc
jnp
(bad)
iret
rcl
mov
ins
adc
pop
addr16
push
sub
pop
clc
or
(bad)
sub
dec
and
or
aaa
mov
inc
shl
lods
test
add
push
ins
or
mov
mov
lods
push
push
add
test
push
addr16
push
sub
and
adc
push
ficomp
les
jmp
adc
aam
clc
adc
and
in
popf
adc
call
bound
sbb
test
sti
cmp
shl
and
adc
aam
pop
mov
movs
and
add
pop
push
sbb
mov
pusha
cmps
jmp
les
inc
sub
arpl
pop
and
out
dec
adc
push
pop
cmp
pop
ins
rcl
and
je
call
lahf
cmps
adc
or
shl
xchg
sbb
popf
and
inc
dec
and
fistp
adc
aaa
xlat
add
xchg
or
xor
mov
add
inc
hlt
and
inc
loope
mov
jl
dec
sub
push
mov
dec
aad
pop
mov
sbb
mov
or
les
push
xor
fisub
loopne
sub
add
cmp
ror
dec
xchg
add
dec
or
adc
cmp
inc
xor
add
inc
add
push
stc
sub
sbb
scas
add
mov
and
stc
mov
mov
ds
loopne
loop
jmp
inc
call
cdq
in
cs
mov
out
xor
push
cmp
pop
ret
or
add
dec
and
dec
cmp
ja
sahf
idiv
push
outs
jne
jl
inc
fisttp
push
sar
jl
cmps
out
push
fistp
sub
idiv
enter
inc
ins
add
dec
adc
dec
or
push
scas
cmc
or
push
adc
and
call
cmp
xchg
imul
mov
pop
inc
scas
movs
repnz
sar
addr16
in
xor
add
push
or
adc
jmp
or
(bad)
xor
jmp
ja
sub
xchg
out
sahf
jbe
dec
gs
push
push
fucomp
cmp
cmps
pop
add
bound
add
sbb
xor
out
daa
or
mov
test
pusha
jmp
push
adc
mov
loopne
or
and
ret
aam
maskmovq
call
mov
jns
adc
xor
push
or
xor
pop
ja
jbe
inc
addr16
fiadd
push
dec
gs
(bad)
xor
iret
xchg
fidivr
adc
adc
xchg
add
test
ss
es
or
das
jb
into
daa
inc
aam
(bad)
sub
out
pop
sti
dec
mov
pop
jmp
js
lahf
out
sahf
mov
or
cmp
repz
xor
pop
push
iret
repz
jp
jmp
movs
arpl
jnp
ja
xchg
push
or
pop
pop
mov
psrld
lods
lock
or
(bad)
xor
xor
add
ins
sub
pop
sbb
add
(bad)
mov
shl
inc
leave
add
adc
push
ss
dec
call
in
cld
fld
and
or
fld
fist
dec
dec
(bad)
dec
or
out
(bad)
xchg
xchg
fcom
dec
pop
inc
jo
pop
(bad)
sbb
dec
adc
adc
jns
add
sbb
fisttp
hlt
fcmovne
or
adc
jp
xor
iret
cmp
add
jns
add
jo
fimul
sub
sub
sub
je
cdq
rcl
pop
ret
addr16
outs
ficomp
adc
adc
inc
xor
inc
shl
add
sbb
dec
push
push
sbb
vunpcklps
gs
sub
out
adc
fnsave
shl
popf
cmps
push
jne
sti
cmp
pop
push
std
jg
cs
test
xor
enter
dec
inc
and
ror
jecxz
jle
int3
mov
hlt
jmp
push
ds
repz
ins
fiadd
inc
cmp
push
dec
hlt
xor
add
adc
fs
adc
jecxz
fwait
push
imul
xchg
push
cmps
or
rol
sahf
and
pop
jae
xchg
push
dec
shr
stc
sbb
jne
cmp
ds
gs
movs
sbb
imul
shl
add
cmp
enter
add
push
pop
push
add
les
adc
adc
out
mov
mov
add
mov
dec
or
adc
add
(bad)
call
mov
add
xor
mov
jp
cmp
xchg
cmp
sbb
xor
add
(bad)
sub
cmp
adc
jne
jnp
xor
cmp
add
or
push
jbe
dec
je
and
add
dec
sbb
hlt
adc
in
sbb
adc
pop
stos
aaa
add
popa
fs
outs
jo
jl
pop
jge
icebp
int3
(bad)
jl
cmps
fld
push
repnz
pushf
loopne
repz
lock
jp
cmp
out
add
push
pushf
out
in
stc
mov
idiv
out
rol
clc
add
ficom
test
sti
rcl
cmp
push
loope
adc
rdpmc
add
xchg
xchg
xor
xchg
push
mov
nop
int
mov
jbe
add
retf
fs
fild
ret
adc
call
pop
inc
push
jb
in
inc
cmp
push
xor
ins
and
add
blcmsk
cmps
test
xchg
dec
inc
mov
or
push
shl
add
(bad)
push
call
aam
inc
jb
and
enter
add
in
add
mov
in
add
jb
(bad)
mov
push
adc
add
cwde
push
mov
outs
pop
ret
push
pop
sbb
pusha
push
movzx
push
loopne
iret
test
add
fadd
pushf
mov
and
das
jecxz
adc
cmp
add
dec
pop
jle
mov
mov
and
add
test
aad
mov
sbb
add
adc
movs
test
stc
ret
push
loope
pushf
mov
jb
sub
test
jns
adc
js
mov
cmp
mov
pusha
mov
jns
xor
inc
(bad)
jmp
cmp
(bad)
cs
mov
mov
popa
add
or
push
sub
cmps
popa
loop
out
(bad)
popa
sbb
arpl
mov
mov
cmp
es
adc
jl
or
cdq
add
pop
pop
inc
sub
out
push
jg
add
jns
enter
stos
inc
cmp
add
stos
and
je
mov
out
jae
or
add
movs
adc
sbb
dec
inc
test
push
or
add
push
push
cmps
stos
push
cmp
xchg
xchg
pop
out
jne
daa
ror
push
xchg
inc
pop
or
int3
sbb
or
adc
dec
stc
add
jmp
inc
aad
cmp
pusha
bound
call
mov
mov
adc
adc
and
outs
push
push
mov
and
lea
mov
push
stos
daa
arpl
push
daa
rcr
xor
or
jbe
mov
stos
push
adc
mov
rol
mov
adc
loope
xchg
cmp
or
shl
js
add
jbe
add
add
inc
test
enter
jo
cmp
ja
xor
add
jae
fsubr
movs
pop
in
adc
xor
fs
jae
int
xor
pop
jmp
inc
loop
mov
inc
(bad)
fnsave
stos
add
nop
sbb
in
pusha
pop
fadd
add
arpl
(bad)
pushf
xchg
movs
lock
rcr
ja
mov
loopne
aaa
es
sbb
add
push
xchg
sbb
jns
cmp
dec
bound
into
cmps
mov
daa
add
lods
add
dec
imul
mov
and
add
mov
jmp
dec
fist
add
imul
shld
fs
ss
push
jle
adc
imul
jno
pusha
ror
mov
push
je
xor
and
outs
or
je
jmp
cdq
cmp
sar
cmps
popa
cmp
or
and
rol
jno
xchg
hlt
push
or
aad
dec
pop
push
or
adc
inc
sub
lods
dec
mov
test
push
pop
xor
xchg
push
add
jne
aaa
or
xor
ret
mov
add
adc
movs
sbb
ins
clc
nop
add
inc
inc
cdq
daa
and
push
add
inc
ret
pop
adc
vmovdqu
mov
loopne
push
xor
xor
adc
jb
mov
enter
lahf
add
sbb
mov
add
jb
xor
and
mov
js
in
sbb
or
xor
shr
pop
je
std
es
or
mov
mov
xchg
pop
sahf
xchg
cmp
mov
adc
jl
test
jo
pop
mov
push
sbb
xchg
out
stos
inc
(bad)
lds
xchg
pop
(bad)
ins
xor
push
sar
sub
cmp
mov
cli
xlat
xchg
mov
and
push
mov
sbb
cld
sbb
push
lock
mov
push
rcl
sbb
stos
cmp
xor
mov
jecxz
mov
shl
icebp
cmp
ins
ss
iret
sub
outs
lahf
lock
xchg
fidivr
(bad)
and
sar
or
sbb
je
js
lock
adc
repnz
call
pop
addr16
cmps
sub
jp
xchg
or
ficomp
xor
jne
fmul
mov
adc
retf
push
pop
xchg
xor
imul
pusha
repz
movs
add
push
fmul
ja
mov
psadbw
push
prefetch
push
das
fcomp
je
mov
mov
add
pop
pop
adc
jmp
cmp
jne
push
das
ja
add
sar
jmp
jge
icebp
jmp
sbb
inc
dec
call
ret
mov
enter
cld
add
into
mov
pop
nop
shl
and
daa
fsubr
test
mov
jp
mov
repnz
push
std
pop
shufps
cmp
daa
mov
gs
jecxz
fadd
clc
xor
cld
and
jne
rcl
mov
imul
fdivr
push
push
or
fld
popf
push
jmp
sbb
fmul
pop
jmp
and
ja
pop
push
faddp
daa
sub
ret
push
or
shr
pop
and
inc
loopne
dec
psrad
push
add
xchg
push
inc
mov
sar
pop
xor
or
lea
sbb
mov
aas
pop
pop
pop
ror
cmp
cs
jge
data16
jbe
or
shr
rcr
stc
mov
push
jmp
out
jge
or
(bad)
cmp
idiv
and
or
mov
cmps
icebp
sbb
retf
sub
es
pop
cmps
xchg
adc
in
sbb
icebp
sub
sub
int
cdq
(bad)
ins
lock
cmp
stc
or
pop
pop
push
(bad)
retf
jae
add
mov
pop
imul
dec
mov
lock
dec
pop
jmp
cdq
(bad)
mov
xor
jg
inc
out
nop
inc
adc
xchg
push
ror
inc
mov
dec
xchg
and
and
jae
mov
inc
aam
rol
add
mov
dec
mov
xor
je
inc
mov
jnp
out
or
push
fiadd
add
sahf
out
sahf
sub
lods
xlat
(bad)
cmp
sar
pop
mov
neg
shr
or
rcr
ss
imul
or
xchg
add
push
push
data16
movs
mov
lahf
fsub
mov
data16
addr16
ficomp
sahf
adc
or
cmp
sub
push
dec
lahf
ss
leave
inc
add
out
test
xchg
push
into
adc
daa
and
inc
and
mov
sbb
ins
test
or
inc
outs
jae
sbb
outs
or
xor
and
mov
icebp
fisub
sub
(bad)
dec
and
inc
(bad)
icebp
fs
or
jle
mov
loope
dec
iret
out
hlt
js
adc
pop
mov
xor
inc
push
sbb
scas
push
pop
mov
inc
ss
push
test
push
test
mov
mov
xchg
popa
(bad)
rcr
mov
or
dec
(bad)
fs
cs
adc
fadd
cmp
movs
popa
es
adc
ds
cmps
ins
nop
and
lods
fbstp
add
lods
dec
inc
cmp
ret
call
adc
call
iret
pop
test
mov
ins
add
imul
lock
loopne
(bad)
xchg
push
les
and
test
cwde
sbb
cmps
addr16
pop
leave
adc
xor
pop
ret
mov
ja
jae
fadd
sub
or
sbb
add
sbb
loopne
cmp
xchg
push
movs
je
cmps
lea
fstp
cdq
push
fucomip
or
dec
mov
jo
add
fadd
div
icebp
and
loop
xlat
jmp
iret
(bad)
(bad)
in
(bad)
or
nop
adc
jge
cdq
xor
cmp
les
pop
dec
loop
lods
sub
(bad)
inc
or
and
push
loopne
or
cmp
pop
adc
mov
or
(bad)
ds
inc
and
mov
(bad)
iret
or
movs
cdq
inc
sbb
sbb
rcl
xchg
and
sub
xchg
add
pop
inc
push
mov
adc
add
or
test
sbb
test
test
dec
cmc
mov
cwde
or
cmp
pop
add
push
inc
sbb
mov
and
dec
sti
pop
js
adc
add
push
push
sub
repz
push
data16
repz
repz
ja
addr16
adc
push
pop
repnz
mov
mov
mov
pop
rol
push
test
xor
bnd
sub
test
and
dec
out
es
pusha
mov
adc
out
fwait
movs
ins
push
pusha
fwait
sahf
loopne
and
(bad)
fsub
fcomp
jmp
jns
and
(bad)
and
sub
jb
fstp
fwait
and
pop
shl
int3
fstp
rcr
mov
inc
shl
cmp
xchg
mov
ins
pusha
inc
xlat
(bad)
xor
fld
popa
add
xchg
stos
dec
jae
je
in
ins
int
mov
repnz
ds
(bad)
xchg
pop
enter
sbb
loopne
pop
adc
sbb
(bad)
and
jmp
mov
push
call
xchg
mov
fwait
mov
sbb
inc
and
addr16
xor
arpl
pop
popa
and
test
mov
mov
hlt
sub
xor
jl
cmp
add
test
inc
rcr
scas
inc
sbb
adc
fmul
test
test
int3
nop
ror
test
dec
scas
jae
inc
scas
mov
jmp
mov
mov
xor
inc
sbb
push
xchg
(bad)
and
jl
jne
adc
enter
and
cmp
xchg
popa
and
sbb
mov
movs
pop
jo
pop
mov
mov
cmp
es
dec
sub
inc
add
dec
pop
adc
dec
dec
mov
and
test
(bad)
xchg
xchg
sub
lock
and
dec
pop
xor
fistp
mov
push
mov
mov
std
pop
out
or
shl
add
or
or
sbb
and
(bad)
xlat
jle
mov
aam
mov
sbb
xor
call
dec
fld
cmps
mov
push
int
add
ret
call
sbb
sub
pop
xor
xchg
xor
shl
es
dec
jo
aas
sub
sub
xor
dec
movsx
mov
add
xor
add
fistp
mov
lea
and
aas
retf
dec
lea
or
int3
dec
jg
pop
pop
sub
gs
retf
ss
push
ja
clc
stos
sub
dec
adc
jo
sub
dec
jle
lods
push
in
fcom
imul
movs
es
call
jmp
adc
lods
clc
nop
sbb
xchg
add
jo
daa
sub
sbb
push
pop
xor
adc
test
push
xchg
adc
jmp
rol
ficomp
inc
xchg
xchg
or
jg
sbb
loope
adc
enter
pop
ror
sbb
xor
(bad)
push
and
add
ret
cmp
xor
cmp
mov
push
rcr
push
imul
in
adc
jle
rol
mov
or
pop
jne
add
jnp
push
push
cmp
xor
mov
lods
cmp
xchg
or
imul
adc
call
in
push
add
or
jmp
xchg
sbb
mov
loopne
bound
xchg
ja
sub
xchg
pop
daa
mov
or
sar
imul
jmp
loope
push
or
(bad)
sbb
xor
cmp
sbb
sbb
and
fs
(bad)
in
and
dec
or
pop
mov
fmul
sbb
jne
sbb
mov
add
cmp
add
sbb
jo
jecxz
or
shl
aaa
xor
pop
mov
xchg
add
or
xor
or
sub
adc
inc
jmp
ss
inc
or
pop
sbb
jo
sbb
xor
and
and
jle
and
pop
inc
push
mov
or
or
xchg
mov
fild
shr
push
mov
in
div
inc
sbb
add
push
pop
rcl
jp
enter
sbb
cmp
mov
(bad)
push
repz
leave
jmp
clc
fwait
jmp
jmp
push
push
nop
out
test
jmp
sbb
or
xchg
nop
ret
jmp
pop
add
pop
pop
inc
pop
sbb
jmp
pop
enter
sbb
out
mov
pop
jbe
cs
adc
ja
xor
(bad)
leave
stos
imul
sti
adc
mov
ds
push
ds
out
bound
out
sbb
push
test
push
aam
nop
loopne
hlt
sbb
sub
mov
mov
pop
mov
push
outs
sbb
ins
loopne
aaa
lds
imul
add
(bad)
js
sahf
jb
jbe
inc
mov
pop
and
mov
jmp
or
adc
iret
and
sbb
loopne
cdq
adc
mov
and
ins
aaa
shr
cmp
fs
pop
and
loop
rcr
and
iret
jo
rcl
fwait
inc
ror
out
mov
fucomip
shl
and
imul
imul
sbb
test
les
nop
mov
out
or
mov
push
ja
adc
(bad)
pop
dec
ds
add
sub
xor
fsubr
jp
aas
and
inc
loope
es
fmul
add
add
shr
add
loopne
lock
repz
adc
mov
mov
mul
push
imul
les
pop
int
nop
js
mov
jo
or
xor
inc
push
mov
adc
mov
or
out
push
mov
add
adc
ffree
jle
or
jns
pushf
inc
or
inc
dec
xchg
jmp
fucomip
adc
add
test
pop
pop
call
add
clc
das
or
sub
into
jo
adc
jbe
add
inc
sub
cs
jp
ret
or
sub
jnp
sub
dec
xchg
push
pop
or
and
jo
dec
sbb
sbb
xchg
lods
sub
test
dec
lods
xchg
push
jmp
push
sub
xor
repnz
pop
cmp
push
mov
and
pop
or
cmc
add
cmp
imul
inc
adc
(bad)
add
out
in
sub
xor
mov
gs
adc
imul
adc
pop
cmp
in
inc
loope
or
imul
mov
ret
mov
sbb
cdq
dec
adc
fwait
(bad)
ret
test
and
(bad)
cld
daa
dec
xor
es
popa
adc
popa
push
inc
or
ret
cmp
mov
push
push
mov
adc
sbb
int
mov
and
sbb
fst
sti
add
add
add
add
push
add
cmps
pop
mov
jg
push
xchg
sahf
mov
test
inc
adc
mov
outs
movs
retf
repz
push
inc
sbb
dec
shr
ins
pop
imul
das
pop
pop
mov
pop
push
adc
in
nop
add
das
mov
mov
ins
iret
or
imul
mov
adc
pop
push
pusha
and
enter
and
cmps
inc
aas
rol
stos
mov
mov
dec
loope
jmp
mov
and
out
xchg
aaa
xor
ja
out
cmp
push
inc
dec
dec
mov
and
stos
and
xor
or
add
jl
sub
mov
in
ja
gs
aam
adc
imul
push
cmps
stc
call
push
stc
clc
xor
inc
add
or
and
inc
or
pop
mov
gs
sbb
aas
lock
cmp
dec
in
adc
aaa
push
or
add
daa
call
(bad)
ror
nop
adc
add
sar
add
cmp
adc
dec
adc
adc
sbb
lods
pop
clc
ins
nop
mov
aaa
adc
pop
test
mov
dec
pop
test
jle
cmp
mov
imul
movs
adc
hlt
hlt
xchg
icebp
push
cld
inc
pop
add
sbb
add
mov
push
imul
ror
cmp
push
fdivr
fiadd
in
and
pusha
nop
jg
pushf
hlt
pop
test
and
sbb
and
inc
nop
cld
icebp
jl
cld
ja
cdq
enter
lods
popf
sar
mov
add
add
lods
or
pusha
cmp
out
add
pop
sub
jl
inc
jge
shl
inc
cwde
in
cmp
sbb
mov
add
lea
add
int3
lea
pushf
mov
add
adc
sbb
push
jo
sbb
sbb
cmc
mov
leave
mov
push
sbb
push
xor
les
and
jmp
ret
xchg
je
push
scas
adc
push
dec
jp
xchg
add
push
xor
sbb
push
pop
and
retf
adc
sub
mov
ja
sub
test
femms
xor
sub
call
jb
mov
test
fistp
imul
jae
adc
sub
sbb
mov
pop
and
mov
xchg
retf
sub
sbb
or
pop
fs
jmp
inc
mov
(bad)
out
in
aaa
fwait
xor
lods
push
or
shr
arpl
idiv
pop
sbb
push
popa
or
mov
enter
or
(bad)
xchg
cmp
mov
push
mov
(bad)
fisubr
lds
and
outs
mov
inc
mov
sbb
test
adc
nop
xor
sub
stos
xor
cmps
lahf
mov
(bad)
ss
sub
mov
pop
rcl
pusha
mov
jecxz
xchg
push
sti
mov
mov
xchg
mov
mov
cmp
add
aas
mov
lods
and
mov
retf
add
mov
dec
mov
pop
mov
and
mov
cmps
daa
dec
mov
mov
add
lock
mov
xor
sbb
or
xor
and
mov
and
and
cmp
rcr
js
add
xor
imul
mov
xchg
mov
ss
pop
cmp
or
jle
je
js
xchg
(bad)
neg
cmp
jg
add
clc
cmp
inc
cmp
or
pop
or
push
cmp
sub
clc
fs
test
or
push
add
inc
sbb
add
add
and
adc
fadd
cmp
popa
mov
sub
push
sbb
xor
add
int
xchg
adc
add
pop
or
adc
mov
jne
sar
je
dec
jle
sti
xor
shl
add
cdq
inc
inc
xor
sbb
loopne
imul
dec
sub
scas
cmp
mov
aaa
dec
xlat
lods
repnz
and
mov
push
xor
pusha
pop
and
sbb
gs
xor
dec
pop
xchg
add
test
mov
add
adc
xchg
and
cmp
fld
sub
aad
xchg
xor
test
sbb
icebp
mov
jbe
(bad)
cdq
and
jb
cmps
mov
add
adc
clc
add
in
pop
mov
pop
arpl
nop
adc
into
retf
shr
or
hlt
pop
xchg
shr
adc
shl
push
shl
repz
xor
cdq
nop
xchg
in
cmp
adc
push
push
xchg
das
inc
add
lods
add
and
into
xchg
fidiv
sub
fs
cmp
(bad)
inc
add
pop
mov
ss
test
ror
dec
sbb
adc
xchg
retf
mov
jae
push
stos
pop
sub
add
icebp
and
sub
adc
add
cmps
xchg
test
iret
adc
movs
pop
sbb
cmp
out
pop
daa
rcl
mov
adc
aas
dec
sbb
daa
lods
mov
inc
loopne
lea
les
inc
cmps
enter
push
jne
cmp
pop
push
add
(bad)
outs
sbb
nop
and
mov
sar
and
cmp
push
push
sbb
jns
dec
push
mov
xchg
jle
les
mov
fwait
popa
xchg
dec
int3
mov
(bad)
mov
jl
adc
enter
mov
push
test
jmp
jg
sub
fist
imul
jg
adc
sbb
mov
cmp
jne
stos
cmp
and
mov
mov
inc
fadd
inc
sbb
pop
js
xchg
popa
js
lods
popa
arpl
xchg
fwait
adc
retf
mov
or
sub
stos
(bad)
aas
je
aaa
add
pop
mov
xchg
jge
ins
xor
inc
sbb
ret
loopne
xor
adc
or
push
dec
in
pop
push
in
push
sbb
jo
cmc
fcomp
sbb
xchg
inc
adc
jecxz
les
sar
inc
inc
xlat
push
test
push
cwde
shl
pop
js
adc
xchg
(bad)
mov
pop
sub
adc
inc
mov
sub
xchg
sub
and
and
and
sahf
push
mov
popa
jo
call
ins
out
ja
test
inc
inc
je
cdq
and
mov
je
sub
xor
or
fmul
loopne
or
pop
pop
pop
hlt
push
push
inc
loop
sub
cmps
adc
pop
push
js
cmp
and
shl
xor
mov
xor
(bad)
in
(bad)
mov
pop
loope
stos
adc
or
out
mov
mov
add
popa
popa
adc
jg
jl
mov
ins
mov
inc
jmp
je
sub
outs
and
push
inc
xchg
jl
sub
shl
cdq
mov
fcomp
or
adc
sub
lods
cmp
shl
fadd
adc
(bad)
not
cmp
mov
pop
int
pusha
bound
inc
mov
cmp
mov
sbb
jp
inc
xor
shr
cli
push
push
sbb
jle
xchg
mov
fcomp
inc
and
push
(bad)
and
outs
aas
ins
das
rcl
jge
pop
xor
or
adc
push
fs
lock
mov
les
pop
push
mov
xor
xchg
jge
cmp
dec
sbb
cmp
lock
call
adc
test
repnz
clc
(bad)
mov
or
inc
adc
add
lahf
jno
jae
test
jecxz
mov
out
inc
cmp
mov
shr
pop
in
and
aaa
addr16
and
in
mov
or
add
push
sub
xchg
pop
clc
pop
cmp
in
dec
jns
(bad)
mov
in
dec
pop
cwde
pop
sub
and
add
sbb
and
or
cmps
mov
test
(bad)
imul
adc
ss
and
pop
imul
push
mov
pop
outs
push
push
pop
int
call
sub
xchg
push
sar
test
mov
fild
repz
ret
xchg
mov
or
push
adc
push
sbb
cmp
das
test
shl
and
nop
in
sbb
lods
cmp
test
dec
fisub
jmp
jg
push
jbe
xchg
pop
pop
xchg
xor
lea
push
ja
mov
shl
sub
sub
push
ror
mov
pusha
push
adc
fcmovbe
ret
rol
mov
pop
push
jl
mov
lock
pusha
jnp
icebp
das
xchg
push
mov
ret
sbb
cmps
dec
xor
jge
xor
nop
imul
mov
mov
cmp
sub
and
mov
popf
arpl
dec
inc
scas
imul
fcom
call
sbb
or
movhps
xor
xchg
pushf
mov
and
xor
xchg
pop
inc
mov
xor
and
rol
add
dec
fidiv
mov
sub
or
push
xor
shl
xchg
and
lock
popf
mov
adc
shl
jne
cmp
sbb
push
cmp
pop
xchg
dec
inc
or
xor
loopne
mov
inc
xor
mov
mov
mov
mov
sub
push
push
cmp
in
lahf
pop
pop
xchg
test
xor
push
daa
lahf
add
xchg
pop
scas
inc
(bad)
scas
mov
cwde
jge
loop
test
not
mov
inc
ins
add
xchg
je
adc
fsubr
add
sbb
and
xor
movs
out
dec
pop
cmp
push
in
imul
call
sbb
ss
mov
out
mov
fcom
dec
sbb
cmps
loop
leave
cmps
popf
stos
inc
je
adc
fdivr
gs
test
mov
(bad)
or
xor
fistp
cmp
hlt
lds
outs
pop
sub
mov
dec
mov
or
or
sbb
sub
xor
push
lds
inc
dec
cmps
in
or
les
sbb
xor
adc
xor
inc
fcomp
(bad)
and
mov
sbb
addr16
ins
sbb
jge
aas
or
clc
jl
inc
data16
in
lock
jbe
lock
dec
jne
adc
aas
jns
cmp
fisub
push
daa
mov
add
push
fldenv
aam
pop
or
cmp
jns
lods
retf
div
dec
bound
push
adc
adc
bound
add
mov
jecxz
cmp
or
add
fs
adc
jnp
ins
fcomp
xor
mov
dec
mov
sub
mov
cli
mov
jmp
xor
test
ret
and
in
push
push
xor
pop
and
add
imul
sar
xor
sub
add
shr
dec
jnp
shr
jg
adc
and
mov
pop
pop
inc
retf
mov
inc
mov
sub
sbb
cmp
jl
stos
call
jle
mov
sub
ds
sub
lock
add
cmp
sbb
dec
loope
out
jg
xchg
pushf
loop
pop
mov
cld
add
cmp
pop
js
sub
icebp
or
adc
sub
add
inc
ret
xlat
add
sub
add
push
inc
sub
add
inc
and
sub
icebp
in
pop
aam
sbb
jmp
adc
inc
loope
fstp
ins
xchg
cmp
hlt
jae
inc
cwde
push
add
stos
xor
or
sar
sbb
add
into
rol
outs
movs
xchg
mov
sbb
aad
and
cmps
add
xlat
fnstenv
pop
pop
retf
sub
xchg
test
mov
sub
cmps
sbb
iret
js
mov
push
dec
sbb
or
lahf
inc
sahf
push
xchg
sbb
in
xchg
add
push
cmp
fcomp
inc
sbb
fcom
adc
xchg
movs
fisttp
mov
(bad)
enter
dec
aam
dec
sub
ja
test
das
mov
pop
ja
dec
ret
mov
and
sub
mov
add
pop
stos
mov
movs
ret
mov
lods
stos
popa
xchg
cmps
adc
adc
push
test
mov
xchg
(bad)
test
and
(bad)
adc
cmp
cmp
jecxz
or
loopne
dec
sbb
aaa
ds
fcomi
or
test
loop
sbb
hlt
mov
ret
test
add
sbb
xchg
add
jne
hlt
aaa
stos
add
push
sbb
mov
jmp
imul
mov
sbb
xor
test
add
shl
adc
adc
inc
mov
sbb
int3
dec
push
and
je
or
pop
cmp
in
int3
outs
add
jg
mov
lods
jg
js
jb
aad
shl
and
pop
adc
sub
dec
shl
loopne
clc
add
nop
addr16
cld
push
sub
mov
or
jle
push
(bad)
mov
test
aas
xchg
push
add
or
or
inc
cmp
call
jo
fiadd
ret
mov
mov
aaa
adc
pop
cld
mov
pop
xor
ins
ins
and
shr
int
test
pusha
fist
mov
rcl
aas
xchg
mov
cmps
or
add
inc
dec
les
iret
test
mov
retf
mov
div
sub
add
pusha
das
jl
dec
xchg
and
pop
or
pop
sbb
and
push
cmp
jmp
ja
push
pop
xchg
bound
(bad)
cmp
push
movs
mov
dec
mov
unpckhps
inc
outs
sbb
inc
test
sub
or
lock
jmp
xor
or
dec
and
not
sub
inc
mov
add
ins
xchg
mov
mov
inc
xor
sub
jbe
pop
js
lods
pop
push
sub
inc
and
bnd
jge
popf
xchg
add
xchg
mov
mov
jl
xor
inc
cwde
add
sub
dec
aas
arpl
(bad)
rcr
sbb
mov
adc
mov
aas
push
add
or
or
xchg
mov
pop
xlat
xor
dec
fs
mov
test
fdivp
inc
pop
mov
fldenv
dec
mov
idiv
pop
or
aaa
xchg
into
adc
add
sbb
iret
sub
pop
add
xchg
push
mov
inc
or
mov
fldcw
and
pop
jle
inc
enter
inc
rcl
aas
xor
gs
push
out
enter
add
xor
inc
inc
adc
add
dec
add
test
push
sub
push
lods
mov
xchg
mov
ja
adc
fimul
fmul
sub
nop
sbb
js
test
push
data16
fsubrp
push
call
adc
ss
cdq
push
pop
clc
test
mov
dec
outs
aad
add
add
xor
cwde
inc
lods
mov
es
or
xchg
push
mov
xchg
cmp
clc
cli
cdq
or
xor
or
sbb
jmp
fld
or
inc
push
jno
popa
nop
adc
lods
(bad)
iret
sbb
cmp
fldenv
(bad)
mov
inc
xchg
call
lahf
xor
sbb
popa
push
lock
push
push
inc
push
jnp
sub
adc
iret
cmp
mov
std
adc
mov
lar
add
xchg
or
push
and
sar
sub
inc
dec
dec
pop
inc
xor
push
push
cmp
add
inc
inc
push
sbb
pop
in
sub
cmp
sbb
scas
adc
out
inc
ss
jmp
dec
add
dec
ss
repz
(bad)
fild
sbb
aam
add
jmp
(bad)
mov
addr16
sbb
sub
(bad)
in
and
jne
jl
pop
bound
in
add
pop
cmp
inc
pop
mov
dec
cmp
or
xor
pop
inc
fisttp
push
xor
enter
cmps
add
fist
sub
mov
mov
in
jg
and
sbb
sbb
pusha
inc
xor
mov
xchg
jae
and
rcr
mov
out
push
into
movs
pop
mov
into
stos
dec
(bad)
cmp
es
pop
fs
cmc
jl
push
outs
jne
mov
add
pusha
and
sbb
psadbw
add
and
push
sar
xor
or
sbb
xchg
pop
ins
pop
mov
iret
and
and
cmp
ds
test
lahf
add
pop
jmp
out
arpl
push
cwde
cmc
test
or
fwait
mov
mov
(bad)
dec
fidiv
mov
lods
inc
sbb
popa
inc
enter
pusha
pop
push
jnp
hlt
cmp
jg
add
sub
test
inc
push
xchg
add
push
ret
mov
dec
je
pop
adc
adc
mov
mov
add
shr
cmp
jo
sub
inc
cs
popa
xor
mov
inc
jmp
daa
js
jne
fmul
jne
ins
inc
adc
ror
inc
je
dec
push
or
jmp
push
lock
stos
inc
pop
bndldx
shl
jmp
je
xchg
push
add
jmp
pop
ret
or
add
nop
xchg
scas
mov
hlt
ror
pop
push
and
mov
jo
and
mov
js
std
sbb
xchg
sub
adc
dec
push
mov
aas
inc
or
jne
mov
sub
mov
push
test
xor
rol
and
je
cmp
loopne
mov
jmp
push
and
sbb
arpl
ret
int
sub
adc
ret
(bad)
jecxz
mov
fild
or
sbb
mov
sbb
lahf
jbe
cs
clc
jne
mov
fs
inc
mov
cdq
js
mov
out
cmp
inc
popa
popf
adc
adc
sbb
sbb
mov
xchg
sub
dec
mov
cs
pushf
inc
enter
fsubr
push
jg
cmps
std
retf
ret
(bad)
jmp
dec
or
or
mov
sbb
test
scas
leave
sbb
or
push
rcl
inc
sar
pop
rcl
and
dec
sub
test
push
call
aam
mov
sub
aad
sub
xchg
mov
xchg
jg
mov
cmp
pop
inc
dec
inc
sbb
addr16
adc
cmps
test
sbb
jle
mov
mov
and
cli
jg
add
in
bound
cmp
loopne
das
xor
or
js
add
cmp
mov
push
sub
push
cli
in
sbb
xchg
sbb
inc
push
loopne
add
repz
lods
adc
aas
sbb
and
mov
or
es
aam
jl
cmp
leave
mov
mov
adc
hlt
mov
sub
cmp
arpl
mov
or
lock
maskmovq
lahf
push
push
jno
sbb
jge
push
js
call
cli
out
and
mov
jg
stos
mov
mov
scas
and
call
or
cmp
loop
scas
pop
mov
cmp
test
pop
pop
rol
push
addr16
daa
out
dec
push
fdiv
inc
mov
dec
push
mov
and
push
rcr
rol
scas
sub
push
mov
and
xor
ret
pusha
adc
js
sub
fmul
and
push
stos
or
cs
test
pusha
xor
push
fistp
xchg
loopne
pop
sub
out
jne
aad
pop
sbb
mov
adc
or
sub
movs
pop
test
dec
push
fs
mov
mov
or
outs
jmp
add
mov
and
adc
or
pop
sub
and
dec
mov
lds
ins
jo
xchg
cmp
and
mov
retf
mov
mov
inc
pop
fs
les
xchg
push
outs
mov
xchg
fbld
mov
sub
dec
sub
out
xchg
or
dec
mov
test
arpl
mov
retf
mov
inc
scas
pusha
cdq
jne
adc
inc
add
pop
inc
call
or
or
pushf
xchg
xor
mov
dec
dec
iret
daa
movs
hlt
xchg
(bad)
(bad)
push
or
dec
mov
bound
aas
pop
or
inc
mov
sbb
ja
jbe
cmps
je
xor
adc
adc
xor
hlt
popa
fs
rcr
and
cli
xlat
push
leave
jmp
ret
shr
mov
ret
fbld
fcmove
pop
push
test
jo
mov
mov
pop
stos
inc
jo
adc
dec
inc
test
pop
cmp
pop
mov
mov
jb
call
call
mov
push
(bad)
aad
and
xor
call
retf
icebp
inc
repnz
repnz
(bad)
loopne
inc
xor
add
and
dec
and
inc
xor
adc
fisttp
jecxz
sbb
adc
aaa
and
jnp
mov
test
aas
sbb
test
std
test
sahf
mov
push
shl
add
sub
cmp
jo
imul
inc
call
enter
or
jl
add
sbb
leave
xor
dec
popa
adc
jge
out
fld
mov
add
sti
or
mov
fild
mov
rcl
inc
or
or
mov
inc
outs
pop
adc
clc
cmp
stos
lahf
imul
mov
mov
and
rol
lea
push
add
les
dec
mov
cmp
cmp
js
popaw
xor
or
call
sub
cmps
or
sub
xor
lahf
and
xor
jae
xchg
xor
add
aas
daa
movs
mov
dec
sbb
imul
mov
jg
in
jp
mov
jno
ret
xor
jne
adc
sbb
out
and
das
dec
push
pusha
sbb
ds
fwait
mov
sub
and
pop
mov
cld
jl
or
js
(bad)
sbb
aaa
push
adc
imul
mov
push
push
rol
pop
ins
sub
rol
sbb
dec
dec
or
or
sub
and
and
add
cwde
or
jg
dec
push
lds
rcl
mov
push
sbb
inc
adc
lock
pop
inc
test
movs
xor
push
add
je
dec
push
mov
and
xchg
sbb
cmp
nop
xlat
cmps
sbb
ret
push
sub
movs
test
add
rol
not
fcom
inc
push
das
not
lock
dec
pop
xchg
in
jg
mov
sub
inc
sbb
inc
sub
push
cmp
or
push
or
and
pop
and
inc
and
test
nop
or
mov
sbb
pop
(bad)
adc
push
and
cmp
xchg
or
push
inc
dec
mov
pop
test
sbb
enter
pop
mov
jle
stos
lds
xor
cmp
movups
mov
ins
cmp
xchg
sub
stos
push
or
in
add
fcmovbe
(bad)
aas
inc
pop
jae
add
cmp
int
retf
int
es
ds
(bad)
dec
aam
pop
xor
jo
xor
add
imul
ret
xor
push
sub
or
adc
mov
lock
(bad)
loop
xchg
popa
fist
mov
push
mov
(bad)
and
sub
rol
xchg
sub
mov
sbb
dec
pop
and
xchg
imul
jb
in
push
dec
(bad)
ins
ja
ret
push
movs
cmp
or
mov
and
les
mov
add
or
fimul
add
out
cmp
les
and
ins
inc
and
push
daa
test
adc
sbb
adc
mov
or
dec
adc
(bad)
sub
cmp
pop
inc
cwde
ins
add
mov
add
mov
push
in
fstp
retf
push
mov
push
cs
fstp
ja
imul
inc
dec
test
sbb
mov
mov
test
jmp
movs
mov
mov
adc
sbb
pop
sub
pop
mov
leave
or
jecxz
cmps
jge
sbb
rcr
add
cdq
jno
loop
xchg
mov
add
mov
xchg
and
dec
ror
xchg
mov
push
icebp
inc
popf
inc
pop
xor
shl
dec
retf
sahf
mov
ror
push
jmp
mov
push
(bad)
or
adc
scas
push
aam
outs
imul
xor
mov
mov
push
repz
inc
test
add
sbb
or
test
xor
aaa
push
or
mov
inc
or
mov
(bad)
sbb
adc
push
pusha
push
mov
xchg
push
sbb
ins
rcl
fidiv
sbb
and
mov
xchg
push
xchg
mov
int
cmc
and
cmp
push
jae
dec
add
sbb
lds
cmp
jae
fild
mov
cld
ss
add
in
inc
push
in
or
push
adc
mov
push
imul
adc
sbb
test
dec
jbe
push
dec
add
ja
push
cmp
sub
adc
xchg
test
scas
sbb
cmps
pop
fs
mov
sbb
je
test
pop
movs
dec
xchg
xchg
pop
cld
dec
lods
fld
mov
or
dec
shl
imul
shr
xchg
movs
xchg
cmps
std
mov
cmp
cmp
xchg
mov
adc
sbb
xor
add
test
fild
mov
test
pusha
leave
ins
sub
(bad)
adc
nop
push
and
dec
jne
mov
pop
push
push
xor
int
imul
inc
imul
imul
imul
mov
loopne
daa
sbb
shl
test
outs
dec
ss
sbb
jo
sub
iret
mov
lock
pop
adc
push
push
shl
ss
(bad)
les
push
repnz
(bad)
rol
ret
inc
mov
push
sub
lahf
out
pop
(bad)
push
(bad)
push
inc
sbb
or
push
mov
xor
mov
add
daa
sub
mov
and
add
pusha
ret
fild
xadd
add
sbb
fs
inc
mov
enter
icebp
nop
cmp
je
xor
and
xchg
add
push
and
adc
in
test
xchg
jle
inc
inc
add
out
pop
lahf
dec
adc
mov
or
push
add
or
mov
icebp
and
lods
test
push
ret
xor
lea
lock
or
add
imul
rol
mov
test
adc
repnz
sbb
or
or
add
sub
retw
mov
and
ret
(bad)
push
push
shl
xor
pop
in
xor
ins
dec
fld
test
test
cwde
movs
xchg
mov
jb
call
sbb
xchg
cs
mov
(bad)
mov
popf
rcl
sub
mov
cmp
adc
ins
pop
adc
popa
pop
repz
mov
dec
dec
mov
and
or
nop
xor
xchg
out
ret
nop
das
dec
mov
pop
ja
and
push
ins
enter
fwait
ror
mov
xchg
out
lods
mov
push
dec
or
sub
(bad)
fsubr
ins
jge
cmc
mov
sbb
xchg
push
xchg
dec
xchg
xor
push
call
mov
imul
push
mov
je
nop
sub
hlt
pop
repz
out
add
xchg
adc
xchg
adc
aaa
cli
xor
fimul
inc
jo
sbb
lea
rol
ja
xchg
mov
js
cmp
int
dec
daa
daa
enter
push
(bad)
test
inc
das
pop
clc
cmc
mov
xchg
test
mov
fs
shl
pushf
or
sar
mov
adc
push
scas
add
scas
pop
nop
xlat
fcmovbe
daa
cmp
stos
sbb
(bad)
jae
imul
push
loop
cmps
jmp
pop
sbb
adc
xchg
cmp
and
sub
sub
push
push
xor
cmp
or
mov
sub
sub
and
mov
adc
aad
enter
cs
mov
xlat
and
xor
inc
adc
sub
and
push
jmp
mov
daa
jg
xchg
gs
push
sub
mov
mov
cmp
dec
mov
sub
add
and
push
and
dec
mov
js
pop
push
inc
dec
jl
add
mov
xor
pop
mov
xor
and
push
jne
push
or
scas
inc
rcl
and
jge
aaa
add
push
movs
pop
lock
push
into
inc
pop
or
mov
jnp
xor
push
lds
mov
sub
sbb
adc
iret
and
cwde
and
cdq
sbb
imul
and
push
jp
icebp
shld
daa
push
adc
comiss
push
or
jl
repnz
aaa
xchg
and
(bad)
pop
sub
(bad)
(bad)
inc
mov
inc
(bad)
cmps
jno
mov
cmp
(bad)
aam
pop
pop
sahf
inc
adc
sub
push
daa
repz
icebp
xor
and
sbb
fs
sub
xor
pusha
add
clc
pop
stc
sub
cmp
mov
fs
mov
cmp
cmp
push
test
sub
and
iret
and
xor
xor
bnd
mov
repnz
rol
jl
cmp
imul
and
push
cmp
rcl
xor
sub
pushf
sbb
pop
and
shl
call
bswap
jno
cmp
repnz
call
push
addr16
mov
(bad)
ror
xchg
lock
dec
cmp
push
pop
and
stos
xor
inc
dec
fwait
loop
mov
jne
jg
adc
gs
dec
cld
xlat
push
push
adc
xor
dec
lods
pop
pop
stc
popa
inc
dec
std
inc
cmpxchg
or
jo
sbb
sub
add
xchg
sbb
mov
pop
pop
pop
aam
xor
out
scas
lods
loopne
adc
pop
retf
mov
not
sbb
sbb
popf
into
and
mov
std
fdiv
mov
and
inc
sub
inc
dec
push
mov
(bad)
daa
push
imul
pop
movs
mov
and
cwde
mov
adc
mov
out
sub
dec
push
les
imul
xor
pop
adc
aaa
(bad)
mov
cmp
or
popf
cmp
cmps
call
inc
fld
pop
shl
dec
jg
pop
adc
dec
add
dec
add
inc
pop
ins
bound
sub
ret
mov
mov
add
test
xchg
push
jae
lahf
xchg
lock
add
xor
or
xchg
push
(bad)
push
sub
dec
jae
push
push
sbb
mov
jge
xchg
inc
cmp
cmp
fdivr
inc
pop
test
(bad)
lods
sahf
xchg
mov
rol
jp
test
mov
mov
or
sub
ja
aaa
sub
xchg
xor
dec
mov
add
push
pop
adc
sbb
push
jle
je
call
sub
fs
pop
cmps
lods
sbb
or
adc
mov
or
add
sbb
adc
jnp
adc
sbb
add
movs
cdq
sub
neg
xor
popa
add
test
dec
rol
and
or
out
add
push
jmp
mov
inc
and
sub
dec
and
mov
push
loop
dec
sub
dec
and
lahf
nop
inc
xor
adc
jo
jg
xchg
jne
ret
aam
mov
sbb
mov
pop
mov
inc
pop
movs
std
mov
mov
sbb
les
clc
adc
adc
dec
adc
inc
or
sbb
mov
inc
push
pop
sbb
or
adc
push
cmp
rol
in
test
jne
sub
push
lea
mov
repnz
and
xchg
rcl
adc
push
sub
cmp
adc
xor
pop
dec
push
xchg
mov
ret
rcl
and
mov
daa
xor
nop
pop
jne
dec
js
add
and
mov
mov
out
call
push
dec
mov
rcr
mov
rol
xchg
and
xor
outs
addr16
je
push
mov
push
push
cmp
in
push
and
pop
popa
xchg
dec
or
push
inc
pop
or
retf
je
scas
test
xlat
arpl
inc
rol
xchg
add
leave
or
cmp
xor
or
out
push
dec
cld
(bad)
pop
jb
xchg
pop
mov
shl
ret
fwait
sbb
(bad)
lea
rcr
push
bound
aaa
cld
sar
rol
cmp
aaa
add
mov
add
fild
add
inc
jecxz
pop
xlat
inc
or
movs
jecxz
rol
push
inc
lahf
retf
mov
push
add
adc
adc
lods
jecxz
out
aaa
es
push
(bad)
cmps
sbb
bound
cmp
cmp
push
add
mov
or
mov
test
retf
xchg
pop
or
dec
pop
mov
sub
pop
adc
mov
mov
jle
pop
mov
xchg
jge
add
mov
xor
ds
and
inc
aas
out
inc
mov
xor
xchg
and
stc
or
push
(bad)
xor
sbb
in
sub
adc
cmp
pusha
lods
aas
sbb
call
lock
add
push
sbb
push
jbe
shr
sub
push
cmp
jne
push
imul
ds
aas
ins
jae
mov
es
sub
xor
or
mov
loope
add
mov
imul
(bad)
cmp
addr16
push
mov
xchg
inc
and
and
push
or
and
mov
daa
cmp
je
mov
rcl
nop
xor
int3
movs
or
pusha
and
add
sub
cmps
sbb
aam
pop
mov
sub
jnp
or
xor
and
sbb
jo
lea
imul
dec
test
sbb
fidivr
inc
fs
mov
test
sub
xor
je
cmc
xchg
xor
xchg
sbb
pop
arpl
addr16
pop
add
loop
cmp
fsub
adc
data16
inc
test
cmp
and
cmp
lea
add
das
or
cmp
imul
or
popf
nop
or
or
and
dec
cdq
mov
(bad)
xor
rcl
or
xchg
addr16
sbb
add
popa
sub
(bad)
mov
xor
popa
fsubr
popf
and
dec
cli
repz
test
inc
pusha
neg
call
jo
movs
rcl
push
enter
shl
mov
cld
test
mov
shr
sub
ret
mov
movs
ret
jno
sbb
push
inc
adc
leave
cmp
cli
xor
sub
adc
xor
cmp
mov
mov
add
push
pop
cmp
mov
in
aas
mov
and
or
mov
std
pop
sub
mov
les
xchg
cmps
inc
loop
xchg
retf
sbb
fs
adc
inc
add
ins
sub
mov
inc
repz
cmc
das
jns
dec
adc
js
int3
cli
xchg
mov
sbb
aam
das
cmp
mov
mov
movs
pop
xor
sbb
dec
pop
bnd
xor
in
add
and
xchg
push
fs
cmp
xchg
mov
or
xor
mov
push
sub
push
hlt
xchg
fldcw
mov
sbb
and
or
rol
scas
loope
push
jns
mov
(bad)
arpl
push
inc
mov
test
mov
adc
mov
pop
mov
push
imul
and
aam
adc
mov
mov
inc
cld
nop
or
pop
js
je
adc
push
or
inc
dec
nop
push
pop
call
(bad)
or
je
mov
sldt
pop
inc
mov
add
pop
mov
lea
cmps
add
and
pusha
js
mov
lahf
mov
xchg
jbe
inc
jb
iret
or
add
pusha
inc
rcr
mov
adc
or
add
movs
and
gs
sub
xchg
adc
nop
lock
adc
nop
add
jns
xor
imul
jbe
add
adc
popa
jns
xchg
mov
adc
mov
or
add
sub
pop
and
jb
unpcklps
hlt
add
add
cmp
mov
ja
xor
ret
aaa
jmp
dec
pop
test
stc
push
inc
inc
dec
inc
or
pop
repnz
push
push
push
ds
imul
call
xor
inc
pop
pop
and
aas
jbe
push
(bad)
push
inc
fnstsw
mov
test
pop
inc
push
inc
mov
xlat
ss
clc
fcom
dec
inc
push
(bad)
and
push
dec
inc
push
dec
and
add
lahf
pop
adc
adc
and
in
dec
dec
aaa
push
inc
dec
arpl
scas
ja
js
jae
xor
mov
adc
pop
push
add
adc
das
mov
dec
mov
mov
pop
sub
jmp
cmp
lahf
nop
dec
dec
sub
push
aaa
push
dec
stos
sub
mov
xchg
add
and
add
fidiv
aam
xchg
xchg
add
leave
add
syscall
imul
jae
lods
fwait
xchg
sub
add
dec
xchg
jle
sub
into
repz
xor
xor
jo
push
xchg
aaa
fcom
push
push
add
mov
jmp
add
out
hlt
stos
dec
test
push
movs
and
jnp
push
lock
pop
add
and
call
sbb
popf
pop
(bad)
push
pop
push
mov
xchg
outs
pop
add
in
add
dec
fsubr
inc
dec
aaa
inc
popa
push
or
pop
sti
dec
inc
lea
jns
xchg
fisubr
add
and
jl
lock
(bad)
and
repz
sub
adc
dec
jge
je
inc
sahf
loope
lea
ds
test
lahf
lods
test
loopne
aas
dec
push
adc
push
adc
adc
or
add
or
push
pop
rcr
sbb
fsubr
mov
mov
dec
std
cmps
push
repnz
dec
inc
lahf
xor
dec
lahf
pop
add
daa
dec
sub
popf
mov
add
xchg
xchg
ret
dec
inc
call
or
pop
sbb
sahf
retf
clc
pop
and
add
adc
jne
stos
ret
(bad)
pusha
aas
xlat
mov
and
xchg
fsub
imul
mov
mov
dec
sahf
sub
lods
push
mov
inc
mov
mov
jp
fwait
(bad)
xchg
and
movs
mov
call
inc
cmps
inc
in
mov
jo
imul
sbb
fmul
enter
inc
fsub
clc
fwait
add
inc
aam
adc
sub
add
inc
pop
imul
jo
(bad)
in
mov
in
inc
jle
mov
mov
enter
les
or
fsubr
xor
inc
rol
cmps
and
sub
cmps
mov
mov
data16
push
push
sub
push
lahf
sub
cmps
xlat
je
xor
xor
cs
popa
adc
and
mov
pop
push
lods
sti
push
push
fisttp
movs
icebp
popa
loop
sbb
movs
les
rcr
ret
das
test
jnp
hlt
mov
push
les
mov
es
and
mov
jno
mov
and
sub
cmp
and
dec
dec
dec
sub
xor
movs
push
and
inc
xchg
retf
add
xchg
push
add
and
adc
sbb
xchg
and
pop
rol
mov
and
pop
add
and
push
fimul
inc
pop
inc
popa
es
pop
or
jnp
movs
jg
pop
inc
sbb
mov
idiv
dec
cmps
icebp
inc
ins
popa
jmp
and
push
add
pop
jmp
in
xchg
add
dec
iret
xor
aaa
and
inc
and
xchg
movs
or
add
fsubr
aas
xchg
enter
dec
inc
push
pop
adc
adc
adc
or
sub
arpl
das
sub
jo
or
in
and
and
sub
inc
mov
jl
and
push
or
adc
daa
cdq
cmp
inc
add
and
sbb
xchg
in
pop
movlps
test
xor
add
cmp
imul
mov
mov
adc
fwait
mov
adc
jo
add
cmps
out
adc
adc
sbb
push
adc
sub
sbb
inc
rol
adc
loope
dec
push
add
cmp
adc
dec
in
mov
jbe
adc
push
dec
les
mov
or
daa
sbb
hlt
or
or
out
add
sbb
pop
or
fwait
test
and
lds
inc
enter
push
push
pop
fmul
add
push
jno
adc
mov
mov
jl
sub
jmp
or
xor
cmps
movs
sub
inc
mov
ja
or
inc
mov
call
pop
fiadd
ror
adc
popa
cmp
vprotq
cwde
(bad)
rcr
outs
mov
pop
jne
mov
pusha
xor
(bad)
pop
xchg
jmp
cmp
or
call
inc
adc
pop
shl
mov
pop
pusha
js
inc
cld
mov
jb
gs
and
dec
sub
pop
sub
jne
js
sub
lock
fild
setb
or
int3
sub
mov
cmps
lods
mov
cmps
cmps
inc
adc
(bad)
or
movs
sbb
lea
mov
xchg
cmps
adc
or
mov
rol
xlat
push
add
inc
sbb
fsub
or
int3
xchg
hlt
cmp
inc
(bad)
ss
outs
mov
and
cmps
loope
cli
push
push
or
and
sub
mov
inc
or
adc
cdq
nop
inc
xchg
fild
mov
xchg
and
imul
sti
div
test
inc
push
jo
shl
daa
call
and
mov
test
mov
and
ds
popf
push
mov
sbb
adc
xchg
je
jle
in
shl
jae
sbb
push
push
icebp
jne
or
jb
fs
pop
add
add
nop
cmp
pop
je
pushf
out
ins
call
ds
stos
xor
fst
out
sub
hlt
mov
dec
xchg
add
push
lods
imul
mov
mov
movs
pop
pmulhuw
in
je
lods
enter
in
movs
sbb
jo
jb
jb
test
cmp
jb
jb
loopne
cmps
sbb
cmp
cmp
je
and
sbb
js
inc
shl
enter
fmulp
clc
fild
in
rol
aaa
xlat
fadd
dec
inc
mov
dec
fsub
mov
loop
dec
outs
inc
xchg
loop
ror
and
cdq
cs
pop
bsf
adc
mov
sbb
adc
repz
sub
push
cmp
scas
rcr
ds
repz
jmp
jns
out
or
sbb
sub
jns
out
cmp
push
sahf
out
sahf
pop
popa
imul
jns
xchg
cdq
mov
out
mov
out
sahf
fucom
in
cmc
std
add
xor
adc
push
cs
imul
sbb
and
push
cmp
mov
add
mov
mov
outs
ds
mov
cwde
mov
out
add
js
pop
repz
iret
mov
xchg
sbb
push
cmp
movs
les
inc
dec
pop
push
ret
pop
fcmovb
repz
inc
ds
lock
add
dec
mul
add
sbb
ja
das
dec
pop
aad
test
jg
stos
mov
cs
push
mov
push
sub
dec
dec
es
mov
dec
sub
cld
aam
mov
push
loopne
inc
int
test
xchg
shl
shl
mov
sbb
mov
ja
lods
retf
mov
sbb
or
mov
or
mov
pusha
and
ins
sub
adc
es
das
pusha
adc
lock
nop
lahf
xlat
das
aaa
adc
movs
and
or
pop
mov
sbb
loopne
or
mov
push
xchg
(bad)
fs
movs
or
pushf
(bad)
adc
lds
aaa
fadd
jb
fs
and
adc
mov
mov
cmp
mov
mov
adc
call
add
sub
sbb
or
pop
dec
ror
cdq
cmp
push
jmp
dec
lock
jg
sbb
test
mov
jg
mov
fld
add
inc
and
xchg
mov
loopne
stos
push
dec
mov
sub
mov
mov
xchg
jbe
pushf
cmc
add
cmps
xor
pop
xchg
xchg
div
add
add
retf
push
(bad)
cmc
push
scas
shl
push
test
adc
mov
jge
jmp
add
not
(bad)
dec
inc
mov
and
or
push
add
int3
cmp
adc
add
or
mov
inc
rcr
nop
dec
xchg
add
leave
pusha
lock
les
loop
and
pop
cs
add
mov
inc
dec
mov
push
je
adc
dec
cmp
lea
retf
add
jo
ror
jno
dec
cmps
push
inc
xchg
retf
jne
add
leave
iret
pop
call
pop
pop
inc
sub
sub
mov
loopne
push
sti
mov
jno
mov
outs
ret
mov
icebp
mov
dec
aad
pop
rol
cmp
mov
sub
inc
push
xchg
or
mov
das
or
xlat
arpl
sbb
loopne
shl
xchg
mov
add
push
adc
dec
imul
pop
inc
sub
pop
int3
mov
call
jle
sub
mov
pop
and
mov
imul
retf
jmp
sbb
test
dec
mov
and
add
jbe
pusha
popa
pop
gs
pop
add
mov
gs
js
dec
outs
sbb
xor
lea
fsub
inc
mov
and
loop
das
dec
rcl
push
dec
nop
xchg
jno
adc
or
(bad)
gs
mov
imul
into
int3
aad
or
addr16
fwait
and
add
jl
int3
jl
xor
add
rol
push
push
fmul
mov
jp
xchg
add
adc
mov
outs
mov
mov
lea
or
js
mov
dec
pop
cmp
and
xor
mov
push
mov
outs
sbb
or
icebp
es
or
sub
scas
test
push
fcom
jg
xor
loope
mov
xchg
mov
sbb
jmp
pop
rcr
add
dec
jl
in
pop
add
xchg
mov
cmp
mov
mov
push
dec
mov
pop
dec
cwde
loopne
mov
cmp
shl
add
lods
jge
sbb
add
or
popa
lds
cmp
loopne
in
sub
pop
xor
push
je
pop
into
dec
and
jae
test
lock
jge
shl
les
push
mov
ficom
mov
pop
dec
cmp
cli
mov
mov
out
sub
test
or
shl
adc
sti
ret
pop
fsub
mov
mov
stos
mov
(bad)
out
fild
cmp
not
jne
xchg
movs
mov
jnp
add
int
inc
inc
and
adc
dec
mov
je
mov
mov
sbb
test
leave
add
pop
shl
ins
and
mov
lods
movs
loopne
mov
out
in
adc
icebp
mov
push
hlt
imul
cmc
mov
add
push
rcl
add
mov
mov
fdiv
in
in
lock
adc
or
sbb
push
mov
(bad)
sbb
sub
sbb
adc
sub
fnsave
xor
cmp
mov
cs
sbb
xor
and
out
sub
sbb
je
jb
adc
rcl
gs
jo
pusha
add
push
mov
sub
enter
adc
dec
pop
sbb
sti
adc
sub
es
jne
movs
hlt
cmps
pop
pop
mov
loopne
ss
je
jmp
repz
cmp
or
es
or
fucom
aam
adc
adc
scas
mov
adc
jns
and
jg
shl
dec
lods
xchg
add
ret
sub
aas
mov
mov
xchg
ret
push
jnp
xchg
or
mov
sub
push
hlt
xchg
pop
je
pop
not
push
shl
ret
stos
push
cmp
hlt
mov
imul
(bad)
xor
pop
or
clc
test
outs
mov
ins
sti
jge
arpl
test
ret
lock
mov
and
ror
and
and
or
or
dec
imul
dec
jecxz
ret
add
sbb
xor
fwait
ret
rcl
push
retf
(bad)
jo
movs
loopne
inc
cmps
cwde
xor
sbb
adc
and
cmp
movs
cmp
or
cld
rol
inc
mov
popf
retf
mov
mov
push
sub
sahf
cs
scas
lods
lock
out
mov
and
je
dec
mov
leave
ins
or
pop
mov
mov
lods
ja
jnp
xchg
cli
aas
push
test
mov
fiadd
test
mov
xchg
cwde
xor
jge
cdq
dec
sti
inc
arpl
test
push
hlt
leave
and
mov
mov
aaa
xchg
sbb
mov
adc
jno
cmp
sub
int3
addr16
cwde
add
ret
push
sbb
dec
pusha
xchg
push
enter
(bad)
adc
cmp
call
mov
retf
add
dec
dec
inc
pop
pop
dec
inc
push
adc
test
pop
mov
add
adc
inc
inc
adc
(bad)
clc
pop
ret
mov
sti
jne
sbb
jmp
test
sub
inc
iret
push
addr16
sbb
adc
xchg
add
sbb
fcom
retf
repnz
push
xchg
sar
stc
pop
xor
or
push
push
push
out
jl
sar
sub
and
and
cmp
or
ror
test
test
rol
add
dec
test
jmp
or
mov
xchg
add
push
adc
dec
sbb
(bad)
mov
adc
test
js
sbb
add
fbstp
test
ja
sbb
or
inc
push
in
imul
mov
sbb
sub
or
lea
pushf
push
xlat
sahf
add
sbb
fist
je
out
jne
cmp
adc
dec
repz
xor
jp
pop
call
fwait
and
dec
mov
push
xor
retf
sbb
add
dec
jnp
pusha
loop
add
out
sahf
neg
push
add
push
push
cmp
sub
add
xor
pop
adc
in
shr
daa
jmp
test
mov
call
and
lods
pop
dec
push
gs
inc
pop
and
sahf
lods
sbb
pusha
fild
mov
cmp
add
and
add
fs
cmp
inc
loope
outs
xor
loop
xchg
ror
inc
iret
(bad)
(bad)
pop
mov
push
sub
mov
inc
xchg
dec
pop
dec
push
xchg
imul
cs
push
int
mov
out
iret
loop
jecxz
pusha
call
add
xor
loop
fsubr
inc
jecxz
add
fdiv
and
cmp
cs
push
sbb
test
lahf
mov
pop
push
call
pop
fwait
or
(bad)
jmp
jecxz
jecxz
cmp
inc
add
sub
jae
jbe
imul
add
mov
inc
adc
pop
and
lds
mov
mov
and
mov
(bad)
shl
sub
mov
xor
iret
(bad)
add
inc
inc
enter
mov
add
sbb
or
push
scas
neg
add
ror
dec
adc
fwait
out
ja
jo
or
sbb
jmp
in
sbb
popa
and
pop
add
adc
sbb
mov
lods
and
jg
shl
jp
and
int3
dec
inc
sahf
sbb
in
sbb
ror
stos
fadd
add
and
adc
aam
mov
cmp
jg
mov
fisttp
dec
test
or
dec
int3
(bad)
cmp
jl
aaa
mov
push
je
dec
or
addr16
mov
dec
dec
xchg
mov
(bad)
je
ja
push
push
rol
shl
les
inc
xor
xor
inc
pop
adc
add
and
fdiv
xlat
rcl
daa
iret
or
jo
or
xor
dec
jno
cmps
sbb
and
cmp
(bad)
iret
inc
push
scas
jg
(bad)
clc
sti
mov
imul
repnz
fild
push
popaw
shr
arpl
mov
mov
in
fldenv
and
in
dec
mov
sbb
push
gs
xor
aaa
jmp
dec
in
mov
jmp
shl
adc
in
cmps
jne
jno
xchg
and
(bad)
pop
sbb
pop
jo
ja
mov
pop
mov
pop
adc
fsubr
not
lods
adc
sahf
aam
mov
adc
push
sbb
in
sub
pop
dec
xchg
and
aad
sahf
fmul
pop
lods
mov
rcr
js
pop
mov
jb
dec
and
sar
cmp
mov
mov
lods
mov
sub
push
adc
push
xchg
adc
popf
in
push
jo
movd
jns
inc
daa
sub
jo
sahf
mov
shl
jmp
js
and
and
xlat
shl
jmp
jmp
gs
das
enter
scas
das
pop
bound
call
test
jecxz
jno
adc
add
sub
xor
mov
dec
jp
(bad)
add
aam
jb
ja
jo
or
(bad)
adc
lock
add
pop
adc
retf
push
add
push
push
dec
in
fistp
test
ror
pop
sahf
pop
mov
push
sbb
or
jne
cmp
and
test
fadd
inc
(bad)
movs
movs
xchg
or
mov
ret
popf
mov
(bad)
cmp
nop
push
dec
pop
push
nop
mov
xchg
mov
push
or
ja
out
sbb
mov
in
pusha
mov
shl
xor
xchg
aam
push
test
in
xlat
add
loopne
and
lsl
cmp
retf
push
and
jg
add
add
pop
int
cmps
pop
push
add
in
cld
or
daa
sbb
data16
cmp
or
ret
push
pop
les
mov
pop
push
inc
and
std
rcr
inc
pop
pop
cmc
and
add
add
add
(bad)
shl
ror
in
push
add
mov
test
lahf
sahf
push
call
movs
adc
push
fmul
or
sbb
push
or
pop
out
and
das
test
repnz
sbb
push
push
add
sbb
in
or
push
push
add
or
popa
push
xlat
mov
repnz
int3
movs
sub
add
mov
rol
inc
sbb
pop
aaa
ins
(bad)
leave
adc
dec
dec
adc
mov
cdq
cmp
add
cmps
dec
and
es
dec
clc
sub
dec
adc
loop
inc
in
dec
mov
fs
push
gs
ret
xor
xor
in
pause
call
lods
and
mov
in
or
pushf
xor
leave
addr16
mov
dec
xlat
lods
or
shr
dec
mov
mov
loop
mov
es
test
xor
inc
or
xchg
pop
adc
sbb
popa
cmp
jnp
(bad)
in
ficom
adc
inc
pop
int3
mov
hlt
aaa
mov
fadd
int3
clc
es
dec
out
push
cmp
je
gs
ror
add
aam
cld
or
mov
lods
ret
popf
lahf
jle
and
push
pop
or
imul
xor
hlt
push
cmp
cld
or
fucomp
push
push
xchg
add
mov
repnz
popa
fs
les
fcmovnu
inc
or
push
scas
in
cmp
mov
add
jmp
cld
mov
mov
cmp
push
push
dec
mov
sbb
outs
sub
jns
pop
fisubr
push
xchg
cmp
bound
(bad)
loope
or
rol
mov
adc
(bad)
jge
sbb
push
pop
jg
fwait
shl
pop
inc
dec
dec
inc
sub
and
lods
aad
dec
inc
imul
enter
daa
xchg
daa
sub
xor
pop
push
mov
aaa
lock
scas
xchg
in
(bad)
and
jnp
adc
mov
and
iret
clc
hlt
inc
das
test
lock
shr
push
inc
sti
sub
hlt
ins
jmp
not
jmp
push
in
inc
cmp
in
fcomp
int3
aaa
(bad)
lock
dec
pop
mov
loope
pop
je
fst
xchg
pop
sub
and
cmc
test
stc
jno
cmps
or
add
stos
test
jg
add
and
xchg
dec
cmps
(bad)
push
and
ins
loop
movs
push
cmp
add
fsubp
xor
out
dec
add
enter
mov
adc
into
sbb
or
into
sbb
outs
(bad)
fmul
mov
push
(bad)
xchg
gs
fcom
xor
sub
add
mul
rcr
sub
int3
fdiv
sbb
push
mov
push
adc
xchg
int3
push
adc
rcl
cmp
ret
mov
adc
cmp
daa
lock
push
shr
shl
das
dec
mul
push
jecxz
and
outs
aaa
xor
jne
xor
push
sbb
sbb
jnp
stos
loopne
jmp
shl
sbb
pop
mov
leave
sbb
adc
mov
add
push
cmp
mov
fsubr
adc
mov
stos
xor
adc
jb
pop
dec
mov
adc
mov
sbb
in
(bad)
aad
jbe
sub
mov
add
cmp
out
rol
int
mov
cmp
mov
inc
push
daa
dec
dec
dec
je
test
fstp
cmp
sub
mov
and
adc
dec
xchg
out
cmps
mov
pushf
jmp
adc
inc
and
inc
xor
mov
xor
and
test
aam
inc
mov
outs
adc
add
adc
aaa
in
arpl
sbb
ror
push
das
push
push
adc
pop
add
push
jno
ror
int
je
inc
xor
dec
add
xchg
mov
fldpi
pop
inc
or
cdq
loope
sbb
rol
fcmovnbe
loope
out
mov
outs
dec
(bad)
(bad)
jno
loope
xchg
mov
sbb
dec
jl
rcr
arpl
mov
pop
mov
add
test
xor
es
lock
add
mov
mov
movs
in
cmp
dec
ucomiss
pop
jns
gs
or
das
inc
push
popa
xlat
movs
sbb
jmp
add
cmc
cmp
cmp
aam
mov
mov
push
add
dec
xlat
sbb
pop
lock
gs
ss
add
cmp
push
and
fsubr
add
call
mov
test
xor
mov
aam
aam
xchg
ret
add
xor
les
dec
lock
mov
mov
inc
or
mov
inc
mov
out
or
dec
lods
cmps
mov
and
aad
sub
push
inc
dec
push
inc
push
and
test
jmp
loop
out
fs
cmps
push
cmp
xor
mov
add
les
xlat
xor
and
call
push
leave
or
loopne
and
mov
and
xor
rol
in
cli
xchg
sub
scas
add
push
enter
call
sub
loopne
loopne
dec
call
sbb
lock
repnz
call
pop
imul
push
and
das
inc
daa
nop
out
call
mov
adc
cmp
xchg
cmp
inc
jmp
hlt
mov
je
inc
mov
pop
sub
jmp
mov
lock
in
call
fs
out
pop
jp
in
jmp
jne
mov
mov
or
inc
jo
inc
add
aas
aaa
xchg
or
adc
pop
adc
imul
xchg
xor
push
hlt
mov
and
mov
pop
in
inc
cmp
test
jg
add
jo
lods
or
cmps
icebp
mov
adc
cli
and
dec
dec
iret
xor
stos
ja
cmc
adc
inc
cmps
rol
aaa
pusha
xchg
cmp
fwait
nop
sbb
dec
adc
inc
xor
dec
and
aam
or
push
sub
push
push
push
dec
inc
stos
push
inc
inc
fisub
push
es
add
sub
adc
in
ret
sbb
ret
jnp
sub
inc
and
icebp
fnstcw
(bad)
mov
dec
cmp
or
fcom
mov
pop
repz
call
cwde
rcl
inc
fs
jmp
mov
popa
ss
jno
les
test
mov
mov
in
fwait
push
inc
jb
pmuludq
cmp
(bad)
inc
xchg
cmp
push
add
adc
inc
dec
aas
cdq
loop
dec
push
add
test
js
movs
icebp
push
test
rol
jbe
mov
test
addr16
loop
jmp
pop
lods
mov
movs
mov
dec
sti
adc
push
jns
outs
xchg
out
cwde
or
fadd
jbe
inc
dec
lods
push
or
call
xchg
mov
mov
mov
mov
push
hlt
out
or
and
fcomp
icebp
push
icebp
pop
add
fwait
aam
adc
and
jg
and
(bad)
gs
add
cmp
inc
adc
gs
bound
add
ja
and
sub
pop
sbb
push
cmp
and
fcom
aam
lahf
pop
leave
aam
pop
loope
or
jns
stc
xor
lock
sbb
xchg
add
loopne
pop
and
mov
(bad)
ror
int3
int3
cmp
frstor
dec
sbb
icebp
nop
enter
outs
push
or
stos
mov
loopne
loopne
dec
bound
(bad)
in
loop
push
jmp
and
or
fcom
mov
cmp
add
fist
jns
jne
and
icebp
ffree
ret
push
fcomp
xchg
daa
and
in
gs
sbb
xchg
xor
jno
clc
je
cwde
clc
add
je
or
jno
mov
sub
int
aad
or
(bad)
mov
repnz
movs
add
and
cmp
ins
repnz
push
adc
and
mov
sub
stos
dec
cmp
mov
repz
mov
aas
lods
push
sub
xchg
shl
push
aas
mov
dec
call
jle
and
adc
fcomp
lock
xor
imul
outs
adc
ins
add
push
movs
sti
sbb
push
xor
jg
arpl
cmp
pop
xchg
(bad)
fld
xor
les
dec
or
add
ror
push
xor
ins
dec
cmc
data16
pop
ret
push
stc
bound
pop
xchg
leave
pop
mov
xor
jbe
inc
stc
movs
rcr
in
push
mov
icebp
xchg
and
xchg
or
add
shl
xor
pop
cmp
xlat
(bad)
jmp
popf
xchg
cmp
pop
adc
push
lock
add
adc
xchg
xchg
xlat
sub
mov
jg
jb
push
jb
ss
addr16
push
nop
and
xchg
loopne
mov
or
mov
dec
(bad)
shl
or
(bad)
rcr
xor
rcr
adc
pop
pop
sbb
dec
push
mov
push
or
lahf
(bad)
inc
data16
stc
loope
add
xor
mov
inc
pop
cmp
pop
mov
or
dec
push
rol
dec
sbb
push
lock
(bad)
fs
sbb
(bad)
not
test
div
adc
outs
ja
dec
sar
xor
pop
xor
frstor
loopne
mov
ins
psrld
dec
xor
xor
lods
mov
and
inc
xchg
mov
popf
adc
jne
jbe
mov
sbb
movs
movs
jb
mov
cli
cwde
mov
ror
pushf
xchg
dec
enter
je
add
nop
nop
es
ret
pop
leave
and
dec
jae
mov
mov
jno
adc
push
mov
fadd
loope
mov
and
scas
adc
mov
pop
push
push
pop
pop
leave
ins
adc
pop
std
frstor
aas
cmp
push
push
inc
inc
dec
aaa
(bad)
fild
cmps
push
pop
(bad)
cmp
or
retf
or
stos
aas
retf
int
push
sub
rcl
jne
cli
sbb
add
in
shl
or
cmp
sub
out
fcmovb
shr
mov
fcom
push
push
nop
or
adc
rcr
retf
and
cmp
inc
sub
pop
xchg
out
int3
ret
loopne
dec
inc
dec
loopne
pop
pop
mov
loop
cmp
out
std
mov
xchg
jge
leave
movs
push
mov
cmps
cmp
lock
sbb
add
jo
aaa
cmp
jno
jp
dec
lods
clc
adc
ror
rcr
mov
popa
sub
or
adc
mov
scas
sbb
test
cmc
std
or
pop
pop
pop
daa
or
jne
adc
nop
and
sbb
gs
add
fst
jp
sbb
and
add
aaa
mov
retf
and
add
pop
(bad)
sub
nop
mov
xchg
sbb
xor
pop
ins
add
dec
and
push
loope
je
movs
push
ins
jl
fsub
int
jne
test
js
push
mov
and
add
out
dec
add
sub
js
xchg
repnz
sbb
add
adc
sbb
aas
ss
mov
or
dec
push
movs
jne
mov
ins
adc
cs
sub
nop
or
sbb
std
pushf
inc
sbb
cdq
add
xor
stos
imul
(bad)
dec
scas
imul
pop
test
push
outs
dec
or
leave
rcr
add
pop
outs
inc
add
pop
test
sbb
jg
add
sbb
or
cmps
outs
add
mov
and
xchg
ja
sub
mov
popf
idiv
xor
inc
fld
inc
lea
call
push
mov
jne
lea
retf
push
pop
and
sbb
mov
pop
pop
mov
inc
test
and
lods
inc
add
ins
dec
fist
pop
pop
shl
adc
sbb
add
dec
loop
sti
mov
je
xchg
lods
(bad)
jg
test
aam
xor
arpl
xor
popa
es
outs
cmp
xlat
sbb
dec
daa
retf
test
(bad)
fdiv
inc
jnp
push
in
dec
cld
mov
jge
cdq
or
je
push
inc
mov
push
push
fdiv
imul
int
push
push
fmul
mov
fwait
inc
arpl
enter
fcom
call
retf
in
push
mov
sbb
and
retf
movs
jno
mov
xchg
call
inc
pusha
movs
cmc
ret
and
push
push
cmps
adc
mov
int
xor
fdiv
mov
pop
and
mul
or
loopne
push
je
rcl
ins
and
mov
js
fs
xchg
retf
adc
add
or
jmp
adc
sbb
xor
cmc
enter
and
sbb
or
mov
test
es
sub
pop
and
add
popa
add
cmp
leave
add
pop
xor
xchg
adc
jg
ret
mov
sbb
rcr
or
test
jae
stos
inc
sub
inc
xchg
in
push
in
(bad)
std
mov
fwait
nop
int
fdivr
(bad)
clc
test
lea
fstp
mov
repz
in
int3
(bad)
movs
cmp
add
(bad)
lock
fadd
push
stc
pop
and
inc
jge
mov
imul
or
fcom
push
mov
sbb
loope
lods
sub
pop
enter
fcomp
fcom
or
int3
(bad)
pusha
pop
in
push
xchg
and
shl
xchg
js
xchg
push
mov
movs
mov
pop
dec
or
add
(bad)
cmp
out
jecxz
push
xor
nop
(bad)
enter
loop
fdiv
out
xchg
sbb
push
pusha
imul
pop
outs
mov
mov
adc
fcmovu
jnp
in
inc
sub
inc
dec
push
imul
jmp
test
(bad)
xlat
in
repz
leave
aam
cmp
hlt
jo
push
mov
or
lods
repz
cmp
rcl
out
dec
ret
jge
jle
jne
adc
fstp
fld
es
ins
push
pop
pop
pop
mov
mov
call
jmp
arpl
adc
clc
xor
xchg
lea
sbb
mov
inc
idiv
lea
int3
mov
add
mov
jecxz
and
add
xchg
lods
pusha
mov
gs
inc
call
aas
inc
rol
mov
push
inc
push
movs
std
or
cmp
sbb
loopne
in
sbb
mov
or
je
add
and
lock
cli
xchg
imul
jmp
(bad)
movs
rcl
jmp
dec
and
pop
dec
ret
adc
ins
fcom
and
cmp
pop
les
in
sub
jge
rol
or
jge
jl
(bad)
sbb
push
jne
data16
or
(bad)
jl
push
cmp
nop
adc
dec
pop
xchg
xor
push
or
xchg
mov
cmp
jb
lods
js
cmp
mov
mov
lods
push
bound
adc
nop
ficomp
fistp
les
mov
out
fsubp
dec
loopne
je
xchg
or
mov
lock
sbb
jo
and
je
xchg
xchg
push
rcl
jne
cmp
xor
das
fs
sti
(bad)
cwde
or
push
jb
ins
and
sbb
pop
jmp
lds
push
push
in
xchg
mov
pop
cmp
sub
test
add
ja
sti
mov
aam
ja
outs
pop
pop
sbb
push
push
fs
dec
push
sbb
xchg
xor
(bad)
xor
push
es
lahf
dec
rol
push
add
mov
in
mov
sub
push
fidiv
out
leave
adc
push
inc
shl
jo
inc
leave
cmp
sbb
add
jns
dec
rcr
sub
inc
inc
in
(bad)
test
cmp
cmp
mov
push
pop
hlt
mov
sar
cmp
sbb
ficomp
xor
cmp
push
pop
jbe
adc
repz
sar
or
xchg
dec
mov
test
push
loopne
xor
or
mov
pop
mov
adc
adc
xchg
jo
or
inc
pop
mov
push
add
cmp
mov
pop
inc
pop
and
or
cmp
jns
add
pop
and
pop
inc
pop
add
fst
add
add
(bad)
daa
mov
pop
mov
dec
push
sub
dec
add
fs
push
jnp
shl
mov
mov
sub
or
adc
pop
(bad)
or
mov
mov
ret
push
inc
push
fdivr
mov
sub
xor
nop
jns
mov
dec
bsf
ss
dec
xchg
and
push
rcl
das
das
sub
and
or
inc
pop
hlt
iret
push
push
jmp
data16
add
xchg
inc
bound
jne
push
sub
lahf
pop
sbb
adc
test
dec
add
or
mov
pop
pop
mov
inc
mov
mov
add
movs
popf
cmp
popf
adc
sub
cmps
adc
or
pop
call
xor
jae
xor
xor
mov
mov
fs
popa
and
in
imul
cmp
jne
mov
cwde
test
adc
push
and
jmp
dec
test
inc
test
xchg
and
loope
nop
iret
jmp
(bad)
dec
dec
and
or
or
dec
das
push
scas
dec
add
das
rol
lods
add
fbstp
test
push
fistp
adc
push
add
loope
add
adc
fwait
cmp
add
dec
mov
aas
ds
hlt
test
sbb
sub
mov
pop
push
push
lock
imul
adc
adc
or
xchg
xor
push
sbb
rol
add
or
and
(bad)
adc
or
push
retf
adc
pop
mov
jp
add
push
mov
lock
test
fwait
add
rcl
add
pop
cwde
test
imul
jne
call
dec
cmps
pusha
mov
or
xor
ins
and
cmp
add
and
cmp
inc
bound
xlat
(bad)
or
mov
fs
jecxz
push
xor
js
hlt
aad
and
popf
inc
scas
movs
adc
push
lods
lods
mov
mov
jnp
inc
push
push
lock
xor
jecxz
shufps
xchg
cmc
or
mov
push
mov
dec
shr
mov
test
ins
sub
imul
mov
push
mov
and
cmc
mov
sar
mov
mov
dec
mov
popf
std
push
imul
pop
js
dec
cli
popa
jmp
and
fwait
push
ror
ins
and
dec
or
(bad)
popa
xchg
sbb
fisub
and
adc
das
dec
pusha
retf
das
adc
rcl
mov
je
sub
dec
loop
lds
inc
imul
push
or
pop
adc
add
in
mov
xor
lea
out
or
or
or
or
inc
xchg
or
iret
mov
(bad)
xor
sbb
push
pop
loope
int3
lods
sub
sbb
shl
outs
in
cmp
push
xchg
mov
or
fsubr
or
mov
fcmovnbe
inc
cmp
nop
sbb
lods
iret
inc
movs
sbb
aam
cdq
add
xchg
fdivr
mov
cmp
repz
sbb
rcr
les
clc
or
dec
mov
fild
xor
dec
dec
cmp
and
sub
sar
xchg
mov
mov
and
pop
stos
je
and
sbb
adc
cmp
or
dec
cmp
mov
pop
fs
movs
dec
fcom
push
bound
jo
mov
dec
inc
dec
xlat
pop
adc
out
inc
push
inc
push
jmp
push
dec
pop
lahf
(bad)
call
add
enter
ins
add
ret
sbb
repnz
imul
stos
in
cmp
push
adc
push
adc
call
cdq
and
xor
xor
and
hlt
mov
rcr
mov
add
push
jo
nop
inc
or
add
or
pop
dec
fs
sbb
ret
(bad)
mov
pop
mov
xchg
scas
out
xchg
jl
adc
clc
or
push
xor
mov
sub
xchg
fwait
mov
and
(bad)
mov
into
sbb
xor
push
dec
mov
loopne
scas
rol
imul
fcom
pop
xchg
xchg
inc
pop
iret
retf
sbb
in
leave
xchg
es
jnp
push
call
and
dec
mov
movs
add
xlat
jno
xchg
inc
sbb
les
and
aas
pop
add
or
xor
test
pop
(bad)
outs
les
aad
rcr
inc
pop
or
and
inc
add
out
jp
add
push
retf
add
add
cmp
sub
push
mov
inc
dec
lods
or
jne
sar
int
sbb
out
add
or
shl
hlt
cld
or
test
dec
cmp
inc
ja
push
cmp
out
out
add
inc
mov
enter
call
test
and
mov
jle
sbb
jmp
and
sar
mov
in
push
push
mov
or
inc
repnz
xor
mov
add
adc
inc
add
imul
push
and
adc
sbb
sbb
pop
call
aam
shl
sub
dec
scas
jge
in
cwde
ror
cmp
nop
add
and
je
dec
push
cmp
or
enter
test
les
imul
pop
mov
pop
mov
aas
icebp
mov
jp
sar
ins
mov
dec
sub
sbb
mov
mov
mov
ins
movs
lds
dec
mov
adc
lods
lods
inc
call
in
cmp
mov
or
cwde
xchg
retf
and
xchg
xchg
nop
add
fs
inc
or
stos
(bad)
call
gs
nop
fld
or
or
push
xchg
xor
push
dec
jno
cmp
add
aas
sub
dec
dec
dec
or
fst
ins
xlat
jl
mov
in
push
inc
and
arpl
jmp
inc
out
shld
and
dec
push
push
pushf
xchg
das
adc
or
xor
push
mov
retf
push
adc
jns
xchg
(bad)
dec
mov
push
inc
push
add
and
dec
add
mov
adc
popf
ror
or
nop
mov
mov
jmp
ja
test
ins
add
lock
and
es
dec
adc
dec
outs
add
mov
lea
ret
cmp
sbb
fild
or
daa
jnp
dec
adc
mov
popa
push
sti
cmp
daa
test
adc
add
xor
mov
add
sbb
adc
push
movs
or
pop
es
inc
icebp
dec
add
jle
ss
int3
mov
and
sub
push
xchg
or
mov
mov
das
aaa
sti
and
outs
and
xor
mov
test
xchg
push
aaa
mov
jnp
cmps
lods
ss
mov
jge
push
lea
retf
xor
cmp
js
mov
ss
sbb
mov
fist
and
adc
add
xchg
and
fucomp
adc
je
movs
psrld
fs
icebp
and
push
push
mov
xchg
adc
cmp
lea
in
dec
int3
sbb
mov
push
and
push
in
into
stos
sbb
movs
cmp
fmul
iret
sub
mov
stos
sbb
mov
push
push
xchg
pop
or
arpl
hlt
sub
sar
cmp
sub
jmp
and
mov
or
sbb
mov
lahf
sti
stos
adc
or
and
push
sub
ss
sbb
inc
pop
add
sub
sub
ja
mov
loopne
push
lock
mov
mov
mov
inc
mov
xor
fcmovb
dec
jae
inc
nop
cs
jo
pop
push
push
repnz
push
xchg
mov
pop
cmps
fs
ror
aas
test
ret
inc
retf
je
push
leave
cmp
stos
or
jl
push
inc
dec
repnz
xor
sub
cmp
cmp
dec
hlt
jns
call
int3
pop
adc
add
push
xor
adc
cmps
inc
test
dec
mov
pop
(bad)
clc
rol
retf
or
dec
push
shl
or
xchg
xor
mov
addr16
loope
cwde
shl
cs
movs
pushf
(bad)
or
(bad)
push
mov
inc
pop
xor
mov
add
sbb
lea
xchg
lds
fadd
je
push
add
jecxz
daa
movs
ror
jmp
(bad)
outs
add
push
icebp
sub
sbb
adc
ins
rcl
adc
push
pop
fstp
add
rcr
fadd
xchg
ja
push
mov
pop
jg
sahf
sub
nop
or
or
mov
sbb
xor
xchg
mov
arpl
add
hlt
das
sub
(bad)
adc
and
xor
cmp
sub
test
xchg
fisttp
(bad)
les
mov
repz
add
and
hlt
sbb
cdq
sbb
or
push
iret
pop
xor
and
in
ins
adc
test
lods
mov
push
add
(bad)
sub
xchg
jbe
rcr
out
push
push
push
mov
aas
mov
cmp
inc
mov
outs
(bad)
pop
cs
test
rol
movnti
fsub
std
push
mov
mov
xor
mov
sub
int3
or
rcr
and
daa
inc
mov
sub
push
xor
sub
loope
fcomp
in
js
(bad)
xchg
cmp
push
jno
lds
jmp
lds
add
inc
push
mov
imul
js
adc
jo
xchg
jmp
cmp
ds
cmp
push
jbe
pop
and
into
lea
push
loop
add
push
mov
inc
jne
fiadd
mov
mov
xchg
push
mov
add
xchg
add
adc
sar
sub
inc
xor
xor
(bad)
out
mov
pop
cli
mov
jge
(bad)
jmp
aaa
jne
mov
mov
cmp
jno
mov
sub
inc
lock
dec
push
rol
and
cmp
movs
pop
cmp
mov
dec
mov
sbb
add
xchg
in
jns
arpl
pop
add
add
lea
mov
aas
jbe
xor
outs
mov
mov
push
dec
dec
in
das
push
sub
in
sub
push
mov
sbb
(bad)
leave
rol
mov
pop
cmp
inc
jmp
mov
imul
push
sub
mov
iret
mov
retf
les
dec
sub
mov
fidiv
push
call
dec
retf
push
push
jg
sub
mov
(bad)
and
or
fistp
or
inc
lods
jnp
into
clc
cmp
jne
pop
and
rol
inc
fimul
dec
test
add
push
aaa
(bad)
or
xchg
outs
and
jno
es
adc
or
test
xor
je
aas
lea
push
imul
popa
cmp
jnp
aam
inc
and
fcmovnbe
das
adc
test
sub
adc
push
push
and
adc
pop
daa
loopne
or
mov
fisub
inc
inc
in
(bad)
popa
loope
inc
sbb
adc
pop
repnz
enter
mov
pop
pop
test
cmp
inc
dec
shr
and
pop
sbb
js
sub
xchg
(bad)
push
pop
jle
jge
pop
ins
pop
push
adc
and
rcr
push
dec
das
ins
push
fstp
int
ins
mov
cdq
sbb
inc
mov
out
sbb
jecxz
ins
push
lock
ins
xor
adc
add
retf
push
xor
test
inc
push
rol
shr
xor
and
adc
sbb
add
cmp
cmp
dec
xor
cmp
(bad)
jmp
jmp
stos
xor
xor
xor
addr16
loopne
rcl
test
xor
add
cmp
adc
pop
dec
ja
call
and
adc
xor
ins
add
push
push
ins
loopne
pop
xor
sbb
jo
mov
movs
xor
in
in
jl
xor
xor
call
or
addr16
jge
cmp
sub
adc
scas
sub
daa
fsub
sbb
adc
cmp
jo
cmps
fistp
frstor
fild
hlt
push
icebp
mov
(bad)
add
add
les
out
outs
into
out
in
xor
and
icebp
add
adc
sub
fwait
xor
je
pop
pop
jg
les
sbb
or
adc
and
mov
add
pop
cmps
push
mov
ja
adc
or
adc
fstp
sub
cmp
sbb
adc
in
mov
lods
mov
adc
dec
nop
lea
clc
and
call
scas
test
stos
push
bound
fsubp
dec
add
jo
out
call
call
mov
pop
(bad)
push
push
xchg
mov
mov
or
repnz
or
mov
adc
rol
bound
or
(bad)
lock
add
pusha
push
daa
fnstcw
les
fisub
and
mov
lea
test
mov
test
jns
inc
and
adc
mov
push
cs
adc
pop
xor
add
gs
imul
and
cmp
inc
lock
in
or
shr
pop
jbe
push
cmp
cli
pop
adc
out
nop
fnsave
adc
and
cdq
cs
movs
cmp
fsubr
and
and
jmp
and
ds
jl
fistp
inc
stc
addr16
or
and
ss
mov
add
and
sub
loopne
xlat
add
and
adc
mov
and
xor
and
push
call
and
push
call
sbb
scas
xchg
movlhps
adc
sbb
(bad)
test
or
inc
xor
pop
mov
mov
mov
inc
mov
adc
test
inc
push
dec
add
ins
dec
daa
add
movs
jo
add
and
cmp
shl
dec
stos
lds
movs
mov
mov
xchg
add
cmp
retf
mov
loopne
ret
leave
fisttp
aaa
adc
jmp
in
sub
pop
xchg
enter
pop
add
les
jb
aam
jb
xchg
sbb
shl
sbb
pop
push
mov
and
pop
jb
xchg
sbb
mov
(bad)
jne
gs
pushf
xchg
sbb
jmp
mul
or
dec
inc
out
cld
cmps
mov
lods
out
cmp
mov
add
jae
jl
and
mov
pop
jge
or
(bad)
bound
and
add
xchg
adc
mov
int
add
dec
inc
sub
mov
pop
daa
inc
sbb
mov
push
or
fst
xchg
push
and
push
adc
mov
pop
and
inc
sub
cmp
cwde
movs
rcl
push
vpshld
push
daa
rcr
add
jmp
adc
data16
or
fldcw
loopne
popf
sub
xchg
add
test
sbb
xchg
test
xchg
or
xchg
xor
lds
sub
and
test
and
pop
sub
loope
and
mov
push
or
add
or
or
push
ret
mov
shl
sahf
sub
or
or
ds
sub
(bad)
test
repz
inc
mov
jl
and
add
ret
mov
and
push
sub
aam
rcr
mov
or
and
pop
adc
das
cmp
icebp
pop
pop
mov
inc
je
jmp
sbb
add
and
xor
mov
mov
nop
cmps
push
sub
sub
test
cmp
nop
popf
jno
inc
test
cld
mov
xchg
mov
dec
out
test
dec
nop
ja
cmp
jbe
jmp
out
imul
adc
or
mov
loopne
sti
sbb
fst
or
dec
cmps
adc
and
mov
call
cwde
xor
inc
inc
adc
rcr
adc
push
fldcw
add
pop
dec
inc
pop
dec
push
pusha
inc
sub
mov
(bad)
movs
cmp
add
or
dec
iret
popa
lods
adc
loopne
popa
das
mov
sub
push
aaa
adc
add
daa
inc
adc
jns
add
and
outs
xor
inc
dec
or
dec
sbb
dec
imul
test
pop
add
icebp
inc
jne
fst
mov
mov
xchg
push
and
dec
mov
sub
call
mov
add
cwde
mov
popa
adc
arpl
sub
lock
movs
pop
(bad)
cmp
jbe
je
fimul
mov
add
mov
fld
scas
push
pop
pop
fld
in
popf
push
pop
leave
daa
or
dec
scas
mov
dec
mov
jge
call
cmp
adc
sbb
lea
iret
test
pop
xor
shl
pop
dec
dec
add
cs
cld
inc
ins
out
sub
push
xchg
test
outs
add
push
mov
int3
and
test
adc
daa
lahf
inc
sahf
jns
jp
or
pop
std
cmp
mov
div
jmp
retf
in
xchg
mov
test
inc
test
mov
outs
bound
and
xor
aaa
mov
bound
adc
fwait
adc
es
test
sbb
push
je
add
sti
ret
shl
jne
repz
jmp
xor
or
jl
cmc
popf
js
dec
imul
stc
add
int
push
cdq
ins
pop
aad
jne
mov
jne
pop
pop
add
lock
mov
cmps
add
and
aaa
mov
repz
imul
js
add
push
nop
inc
push
cmp
push
dec
inc
mov
sub
jne
adc
add
je
add
add
and
inc
js
xor
or
and
xor
das
fnstcw
test
pop
leave
xor
cmp
out
jl
sbb
mul
les
mov
sub
inc
and
jne
jecxz
pop
js
push
or
add
xchg
xchg
and
xor
lea
or
or
sbb
add
fiadd
addr16
sub
loopne
dec
(bad)
push
lock
scas
or
jmp
adc
lldt
jns
stos
popa
push
dec
in
add
loopne
loope
add
repnz
lock
or
fwait
add
inc
xor
aam
add
inc
push
fs
cld
or
sub
fs
inc
push
inc
xor
das
pop
jp
fdiv
jb
inc
add
std
add
rcr
xchg
adc
add
add
add
mov
out
stos
add
pop
add
fwait
sahf
mov
jbe
push
ins
es
cld
sbb
sbb
stc
pop
or
or
cs
fisttp
loop
and
hlt
push
mov
and
stos
loope
lds
outs
jo
js
push
in
sbb
sub
les
xor
dec
fidiv
add
add
imul
and
dec
add
and
inc
mov
cwde
inc
aaa
aam
or
outs
jns
ss
pop
dec
inc
in
dec
push
push
push
mov
push
dec
sti
jle
or
cmp
das
jp
xchg
mov
pusha
add
pop
repnz
add
xor
in
sub
jge
add
mov
push
or
ss
shr
mov
ins
add
jnp
add
lock
add
xchg
xchg
rol
and
xor
fwait
jnp
add
mov
xchg
sbb
ss
rol
in
das
jns
add
add
add
xchg
mov
push
sbb
in
xor
rol
inc
sub
add
in
adc
or
out
jne
call
fist
and
mov
inc
push
add
frstor
jnp
jg
jne
push
mov
pop
fs
xchg
mov
adc
xor
add
shr
push
inc
adc
ss
adc
(bad)
adc
or
lock
xchg
addr16
pop
outs
cmp
pop
add
aaa
vunpcklps
pop
add
mov
icebp
add
inc
sbb
push
push
or
orps
pop
das
inc
sbb
fist
es
retf
lea
imul
or
fs
xor
push
or
dec
mov
aas
jecxz
mov
mov
xchg
cld
aas
pop
mov
fmul
adc
shld
ficom
inc
sub
loopne
sub
push
mov
xlat
cmp
aam
push
inc
add
push
mov
js
mov
or
adc
push
sub
ss
iret
pop
add
pop
or
scas
setbe
sysexit
inc
lahf
fcom
mov
mov
fimul
cmp
add
cmp
xor
cmp
cmp
imul
add
cmps
dec
dec
add
je
aad
mov
cmps
jne
inc
pop
in
stos
pop
inc
ja
push
inc
test
jae
add
ss
mov
adc
or
lds
xlat
push
xor
call
sbb
mov
clc
into
data16
and
pop
xchg
xchg
sbb
test
xor
sbb
jp
push
xchg
xor
mov
pusha
mov
jae
and
jle
fisttp
fst
and
mov
clc
clc
sub
(bad)
out
push
inc
ror
mov
sbb
pminub
imul
xchg
xchg
jmp
add
inc
pop
add
clc
cmp
jmp
sub
fdivr
add
test
push
fs
push
cli
pop
cwde
test
popa
lods
dec
cmp
sub
adc
sbb
xchg
out
clc
or
mul
push
movs
cdq
cmp
fldcw
and
cmps
loope
outs
scas
or
call
pop
sub
call
dec
mov
push
repnz
push
inc
outs
or
jb
add
inc
xor
test
adc
mov
fisttp
or
in
pop
test
pop
pushf
out
push
lods
and
sbb
test
mov
(bad)
or
nop
and
aaa
mov
iret
add
and
mov
test
mov
add
adc
js
nop
sub
xchg
scas
test
adc
fwait
sub
lods
xchg
dec
lock
sub
pop
inc
pop
rcl
in
test
mov
jne
mov
add
scas
and
add
and
shl
sbb
sub
add
pop
clc
jns
inc
lds
mov
cmps
add
sahf
popa
cmp
pop
outs
retf
clc
xchg
mov
sbb
es
mov
push
enter
xor
in
and
pop
pop
add
mov
icebp
adc
fisub
pop
mov
pop
repnz
movs
add
add
mov
jbe
add
mov
and
xchg
jmp
sbb
add
mov
test
cmps
retf
xor
outs
loopne
loopne
push
sbb
mov
ret
cmp
aaa
sbb
sbb
dec
jnp
cmp
jne
push
mov
xor
and
cwde
sbb
mov
pop
sbb
inc
mov
arpl
mov
lds
add
mov
cmp
mov
es
mov
jnp
sbb
sbb
xor
loope
ja
jne
dec
cld
pop
jns
push
dec
pop
or
dec
mov
jnp
inc
ror
daa
enter
movs
xchg
xchg
dec
adc
outs
dec
dec
test
jns
push
mov
test
xor
xchg
sub
mov
out
or
jmp
fwait
add
fs
cli
xchg
dec
push
push
ins
cmp
das
and
push
pop
pop
jmp
dec
jne
fiadd
pop
pop
lods
add
sub
dec
add
mov
je
inc
fsub
jne
cmp
jp
arpl
dec
fist
inc
add
xor
jmp
in
jnp
mov
ja
push
and
inc
(bad)
xor
and
xlat
sub
sub
ss
xchg
fimul
adc
xchg
mov
inc
push
and
ins
sahf
jbe
sub
jmp
outs
in
pop
cmps
and
mov
dec
mov
adc
ins
dec
adc
cmp
and
inc
adc
xchg
call
sar
mov
ret
clc
mov
add
scas
in
fwait
sub
pop
(bad)
fsub
push
add
dec
repnz
pop
jnp
pushf
sbb
sub
fisub
test
xchg
lock
nop
iret
push
dec
movs
aam
data16
retf
aam
aam
xchg
les
clc
aam
sub
push
jmp
or
mov
lea
cdq
add
or
xchg
dec
jmp
mov
sbb
aad
fs
add
cwde
sub
movs
mov
stos
adc
call
add
xchg
out
pop
adc
sub
and
or
pop
or
jno
or
ret
cs
mov
xor
sar
jmp
push
xor
jne
inc
sbb
sbb
inc
aad
pop
mov
add
xor
or
and
xor
adc
add
and
sbb
and
add
and
sub
and
xor
xor
add
and
cmp
dec
and
xor
dec
push
xor
add
push
pop
pop
add
and
pusha
fs
ins
jo
push
out
xchg
pop
movs
rol
ret
je
nop
or
mov
pop
jb
pop
nop
xchg
cwde
cmp
and
nop
(bad)
dec
add
mov
xchg
push
in
inc
push
ss
mov
in
cwde
and
in
pop
in
cs
mov
cs
cs
in
enter
cs
aam
and
cs
call
in
(bad)
mov
sub
ins
data16
cmp
imul
push
mov
sub
stc
push
sahf
out
call
jns
out
push
popa
outs
jnp
out
sahf
out
mov
out
sahf
(bad)
jecxz
std
or
cmp
repz
xor
dec
pop
repz
repz
iret
repz
scas
mov
sahf
out
punpckhdq
daa
das
aaa
jns
out
aas
inc
push
fs
out
sahf
out
test
sahf
(bad)
aam
hlt
add
adc
iret
repz
xor
push
fs
gs
and
cs
xchg
lea
aaa
mov
jne
sub
mov
outs
push
ret
js
push
es
ja
out
push
dec
fs
mov
cmp
mov
add
and
cmp
cmp
repz
pushf
mov
cmp
dec
test
sbb
lods
jp
push
fidivr
out
mov
dec
push
pusha
cmps
jge
jns
lock
movs
push
xor
pop
test
jns
add
lock
or
dec
sti
es
push
mov
les
out
faddp
pop
mov
leave
push
push
in
shl
hlt
int3
mov
int
lods
cmp
mov
add
adc
push
push
fnstcw
je
aam
jl
or
shl
cmps
mov
lahf
pop
out
les
call
sbb
and
mov
jns
cmc
sub
mov
mov
or
fisubr
mov
adc
xor
inc
and
mov
out
mov
pop
lods
sbb
test
call
sbb
sahf
ret
and
xor
mov
pop
scas
and
daa
or
pop
dec
scas
inc
mov
test
xor
and
clc
xchg
and
adc
loope
cs
pop
inc
inc
push
dec
dec
push
push
inc
sub
inc
repz
sub
inc
inc
push
inc
fld
dec
jbe
imul
dec
inc
sub
dec
pop
push
and
data16
push
add
push
push
xor
add
dec
and
aas
sti
dec
push
dec
pop
inc
and
sub
inc
inc
dec
adc
dec
push
pop
pop
dec
pop
jae
inc
mov
inc
nop
popf
cmp
cmove
sbb
test
push
or
call
xor
inc
inc
dec
or
jl
data16
(bad)
push
push
dec
or
mov
xchg
cmovno
imul
mov
adc
xlat
dec
nop
push
xchg
imul
inc
or
jae
or
push
popa
and
push
or
in
out
bound
sub
pop
inc
xor
lods
xchg
dec
sbb
inc
dec
push
and
or
sbb
outs
or
inc
xor
pop
sub
data16
and
dec
xor
fisttp
js
pop
adc
fucomi
adc
outs
jno
jbe
pop
cmp
or
mov
dec
inc
inc
dec
push
mov
lock
push
sub
adc
or
push
lods
mov
push
mov
sub
inc
pop
and
sub
out
pop
or
mov
push
or
dec
jp
adc
lahf
pop
adc
inc
push
mov
dec
lock
cmp
aaa
mov
inc
dec
ds
popf
jno
pop
andnps
push
push
(bad)
call
inc
pushf
inc
dec
add
or
mov
push
push
push
push
inc
push
and
xchg
dec
inc
mov
sub
out
push
data16
or
or
lock
mov
and
push
xchg
fsub
cmp
push
add
push
pop
push
and
pop
in
dec
stos
shl
enter
and
int3
mov
or
inc
mov
mov
push
clc
lock
cwde
mov
popf
push
inc
sbb
jbe
sub
add
dec
push
mov
adc
pop
push
xchg
sbb
inc
push
dec
or
cmp
sahf
or
ins
adc
pop
cmp
popf
dec
loop
dec
add
mov
push
test
dec
inc
or
push
cdq
sub
pop
fsub
fmul
bound
or
sbb
lods
xor
add
cmp
pop
daa
push
push
xchg
push
dec
sbb
push
lds
push
retf
fisttp
jle
adc
setge
push
cwde
push
adc
mov
jle
mov
sahf
sbb
adc
sbb
mov
aam
cmp
mov
leave
mov
mov
dec
mov
inc
dec
sbb
jnp
fcmove
push
push
adc
ins
(bad)
fsubr
pop
sub
sub
sahf
or
inc
aas
or
sbb
(bad)
sbb
mov
rcr
dec
sbb
cmp
or
pop
out
jne
aad
xor
adc
ja
push
and
adc
push
adc
pop
mov
es
push
lea
pop
pop
test
ja
mov
pop
adc
pop
rol
lock
mov
mov
fistp
pop
aaa
adc
jl
rcr
loopne
int3
ja
push
adc
push
sbb
or
and
ss
jnp
adc
or
repz
or
mov
loopne
mulps
dec
inc
push
sub
jl
sub
loope
mov
adc
loopne
mov
pop
inc
push
cmp
pop
ss
(bad)
sbb
or
enter
daa
or
(bad)
and
lods
dec
call
dec
mov
pop
and
rcr
addr16
add
test
sub
mov
nop
inc
dec
pop
jbe
sub
add
sbb
adc
inc
or
jno
adc
xchg
jbe
addr16
fnstsw
sub
or
fnstenv
sub
pop
or
jne
sbb
dec
imul
sub
call
push
xchg
cli
out
shl
aaa
sbb
and
stos
xchg
adc
add
in
popa
and
mov
xchg
cmp
xor
or
mov
pop
xchg
cld
mov
in
add
pop
not
fadd
adc
cmp
and
fdiv
jno
aas
add
imul
mov
mov
out
adc
add
pop
mov
sub
nop
pusha
cwde
call
les
loopne
or
xchg
and
nop
sub
lods
movs
dec
fst
cmp
jp
sbb
mov
and
mov
or
xlat
add
jno
andnps
sub
(bad)
jl
inc
gs
leave
inc
xchg
mov
ja
adc
iret
xor
sbb
pop
int
in
mov
test
cmc
dec
hlt
jnp
fsub
inc
push
lock
pop
jge
push
jmp
mov
jbe
das
mov
(bad)
mov
mov
push
dec
imul
push
mov
and
and
lock
xchg
and
lods
pop
or
push
xor
inc
das
push
fs
cs
fadd
sbb
lock
lods
outs
inc
inc
aaa
sbb
mov
xchg
mov
les
leave
push
ins
hlt
hlt
pop
lds
adc
xor
pop
pop
jp
xchg
nop
push
and
add
shl
mov
imul
add
xor
and
and
inc
out
push
jbe
mov
pop
or
mov
and
inc
and
pushf
xor
push
or
movs
test
or
retf
inc
mov
dec
xchg
and
mov
push
pop
lahf
and
mov
sbb
loope
mov
jno
jb
and
dec
or
jmp
adc
sbb
stos
inc
loop
in
je
in
sub
push
mov
or
and
arpl
dec
or
cmp
mov
call
mov
imul
nop
add
pop
stos
mov
enter
aam
stos
xchg
out
aam
dec
push
mov
xchg
mov
out
pop
shl
inc
pop
aas
ja
inc
push
enter
int3
int3
je
push
push
jo
mov
add
retf
(bad)
xchg
ror
adc
or
ror
in
or
xor
and
mov
cmps
push
inc
pop
ror
or
or
xchg
mov
inc
inc
xlat
and
push
ficom
sub
cmc
xchg
clc
pop
aas
sub
inc
sti
add
jo
pop
sbb
push
shr
add
add
cmp
cdq
in
mov
jmp
adc
mov
adc
xchg
dec
in
or
mov
jmp
inc
dec
shl
jmp
es
xor
sbb
pop
inc
test
shr
push
sub
mov
push
xchg
sbb
xchg
fucomip
sbb
xor
push
mov
pusha
cmovno
out
sbb
daa
inc
shl
int
rol
xor
test
nop
test
push
or
adc
mov
mov
adc
daa
stos
jmp
xlat
mov
rol
iret
xor
add
adc
pushf
jb
es
mov
add
sti
inc
push
fstp
push
sub
cmp
push
add
rcl
scas
inc
pop
sar
data16
outs
cmp
cmp
das
ret
add
out
rcl
xor
iret
cmp
adc
fcmovu
and
shr
xor
sbb
xchg
inc
btr
dec
xor
stos
outs
mov
or
push
dec
mov
sub
fld
and
popa
push
push
aad
jecxz
add
sbb
loopne
shl
fistp
(bad)
add
sbb
popa
dec
ror
dec
add
test
jno
pop
into
jmp
push
push
xchg
and
mov
xchg
pop
mov
je
ds
dec
pop
fld
jne
xchg
jne
lea
pop
xchg
dec
pop
xchg
(bad)
mov
jnp
jecxz
lods
sub
pop
dec
loopne
xchg
xor
cs
mov
ret
repz
sahf
(bad)
push
sub
hlt
cmp
pop
and
or
dec
xchg
ja
adc
shl
or
pop
inc
and
adc
or
mov
cmp
add
iret
inc
dec
xor
mov
sar
mov
cmc
pop
mov
loopne
pop
ret
push
or
and
hlt
dec
stos
and
sub
std
push
add
sbb
adc
iret
(bad)
push
or
dec
out
mov
adc
or
and
xchg
xchg
xchg
push
lea
jp
adc
movs
lea
or
call
push
mov
bnd
in
mov
retf
in
loopne
mov
push
loopne
sub
or
pop
adc
inc
call
fcomp
aaa
fcom
cmp
jb
cdq
in
aam
ror
fwait
in
sar
adc
test
mov
or
scas
test
jmp
or
rol
xor
dec
lds
push
sub
je
push
int3
int3
leave
nop
adc
pop
mov
and
xor
push
mov
xchg
popa
popa
pop
jns
and
sub
adc
sub
mov
test
(bad)
xor
addr16
or
jp
arpl
movs
push
arpl
xchg
fimul
sbb
fcom
sub
neg
enter
in
or
leave
sbb
or
sbb
or
fcomp
xor
test
jns
add
stc
je
or
or
(bad)
sbb
xchg
mov
sbb
or
je
sub
push
xchg
jg
mov
sbb
lea
es
or
adc
adc
adc
sar
ins
xchg
jne
lea
push
loopne
xor
dec
inc
or
pusha
xchg
or
faddp
imul
arpl
pushf
push
mov
sti
dec
sbb
fdiv
sti
lea
cmp
cmp
scas
adc
and
mov
jns
add
loopne
loopne
jbe
and
sub
in
call
add
test
ins
rcr
ficom
fsubr
loopne
in
mov
rol
in
cmps
pop
xchg
xchg
jl
and
add
or
pop
push
sar
enter
pop
enter
cmp
cmps
add
cmp
push
xor
shl
cld
fs
imul
mov
xor
dec
mov
xor
adc
test
fwait
or
xor
nop
fwait
add
lea
dec
ret
add
and
outs
add
pop
xchg
cmps
in
scas
and
nop
xor
mov
inc
push
xor
mov
add
das
hlt
adc
sub
sub
jmp
or
js
add
jne
sub
xchg
xor
sbb
(bad)
lahf
inc
out
enter
movs
adc
xchg
mov
and
adc
mov
xchg
in
fnsave
or
test
(bad)
and
xor
inc
add
xor
add
mov
xor
sub
xor
pop
xor
dec
pop
repnz
into
push
pusha
adc
and
fs
push
mov
push
fs
push
adc
fs
mov
fs
sbb
push
fs
push
sbb
sbb
add
or
xor
sbb
pop
xor
pop
sbb
xor
dec
pop
xor
pop
xor
pop
xor
pop
and
pop
xor
mov
pushf
lods
pop
xor
pop
daa
mov
and
sub
and
xor
sub
pop
xor
pop
sub
sub
add
and
cwde
add
nop
add
adc
and
sbb
add
nop
pop
cmp
sbb
pop
add
nop
add
push
or
sbb
xchg
and
stos
add
mov
cwde
fs
push
jbe
push
sub
es
lock
or
ja
xor
pop
sbb
and
xor
and
xor
push
xor
and
xor
pop
xor
pop
xor
xor
xchg
aaa
xor
pop
xor
pop
cmp
cmp
pop
xor
fdivr
cmp
pop
xor
cmp
call
nop
add
nop
sub
sbb
dec
jecxz
jp
or
imul
call
scas
inc
das
jo
sub
push
push
movs
add
inc
lock
sub
jge
int
jo
xor
add
ret
xor
and
and
ret
dec
dec
test
push
(bad)
jle
pop
dec
mov
in
aas
push
jo
mov
jno
jecxz
jg
lock
test
push
adc
mov
sbb
pop
ffreep
xlat
inc
ficomp
punpckldq
sub
aaa
ret
add
shr
sub
lahf
or
lods
xchg
pop
inc
inc
idiv
dec
push
or
push
shl
add
mov
pop
in
adc
vandps
shl
pop
frstpm(287
rcl
xlat
sub
adc
aaa
or
mov
test
sbb
iret
or
adc
push
pop
or
fcmovb
das
out
pop
push
sbb
mov
add
cwde
xor
into
add
adc
fbld
xor
adc
push
jmp
xchg
or
mov
dec
mov
dec
and
out
cmps
shr
pop
test
and
or
les
add
popa
mov
pop
dec
add
push
inc
bound
(bad)
pop
sbb
imul
mov
jbe
shl
push
les
(bad)
dec
stos
xchg
idiv
add
inc
aas
jbe
jbe
lea
test
and
mov
inc
rcr
test
sbb
cmp
outs
mov
dec
dec
lods
scas
xor
pop
leave
mov
inc
jmp
jnp
dec
or
push
add
rol
pop
and
adc
daa
add
aaa
mov
adc
add
adc
test
or
sub
outs
movs
mov
or
mov
fisubr
sbb
pushf
push
mov
sub
xchg
icebp
jns
pop
push
cwde
hlt
jle
pop
cmc
jns
pop
sahf
push
mov
push
loopne
push
or
adc
push
jmp
je
dec
test
dec
dec
jb
clc
add
mov
and
add
leave
add
cld
mov
mov
mov
or
fs
add
mov
inc
push
mov
adc
xchg
inc
mov
adc
dec
es
mov
push
push
xchg
clts
jle
adc
and
js
push
lods
push
sub
and
mov
add
xchg
sub
xor
push
mov
xchg
mov
mov
sti
repz
fmul
out
lahf
jl
sbb
pushf
hlt
push
ins
pop
loope
adc
or
outs
jmp
xchg
add
xor
pop
inc
dec
jmp
mov
sbb
xor
push
mov
cld
add
jmp
arpl
cmp
pop
rol
sbb
loopne
outs
inc
jne
test
dec
cmp
cmp
or
lea
dec
adc
rol
push
fimul
jno
push
cmp
popa
bound
inc
cmp
ret
fidiv
adc
(bad)
jmp
inc
jne
adc
xchg
xor
push
lahf
mov
pop
sbb
xor
add
add
dec
dec
lea
movs
cmps
adc
pop
mov
or
adc
push
mov
xor
sbb
ins
mov
cmp
jne
cmp
pusha
inc
adc
enter
push
mov
and
xchg
xor
add
sbb
pop
xor
or
cwde
or
add
nop
ss
in
push
movs
push
cmp
addr16
or
sub
jb
xchg
aaa
sbb
pop
(bad)
stos
sbb
xor
pop
adc
pop
(bad)
mov
arpl
ror
daa
xor
outs
mov
(bad)
aas
pop
pop
popa
mov
inc
inc
pop
movs
jecxz
arpl
in
ror
ins
out
aad
lea
rcr
push
ror
sub
mov
sbb
div
or
dec
inc
or
dec
or
xchg
mov
aam
stos
and
pop
bound
mov
inc
jo
leave
sbb
test
mov
inc
inc
or
adc
xor
dec
inc
push
in
add
inc
jb
(bad)
and
dec
and
in
mov
mov
and
iret
cs
sub
jmp
pop
add
and
scas
mov
test
jbe
bound
fs
mov
dec
add
and
neg
pop
add
movs
inc
cmps
mov
sub
or
pop
xchg
sbb
leave
nop
cmps
cmp
mov
pop
xchg
push
mov
pop
add
mov
xsha256
cmps
adc
repnz
cmps
jg
dec
push
dec
and
dec
fdiv
add
test
ret
rcr
js
ds
push
sbb
pop
cmps
fisttp
mov
scas
inc
outs
fisttp
xchg
jge
fs
mov
ins
mov
mov
or
sub
ret
add
movs
dec
add
xlat
inc
lods
stos
sub
mov
stos
mov
mov
xor
and
pop
or
out
mov
fadd
sti
sbb
out
ja
mov
jge
neg
push
inc
arpl
inc
and
stos
adc
mov
mov
jns
aam
cmp
stos
xchg
mov
and
and
sbb
movs
jmp
cmp
dec
mov
mov
nop
and
fcomp
inc
adc
inc
lock
xor
xor
add
inc
dec
or
pop
and
test
cmp
and
psubw
push
pop
or
dec
inc
dec
inc
dec
mov
xor
sbb
push
das
jb
add
adc
pop
fist
imul
addr16
or
sub
lahf
or
cwde
pop
jnp
push
(bad)
dec
inc
push
inc
pop
out
fs
or
adc
sub
adc
sub
int
or
neg
sbb
sbb
cld
push
add
push
sbb
and
or
pop
pop
or
imul
adc
inc
pusha
out
push
jmp
jge
mov
mov
adc
gs
sbb
mov
retf
and
sbb
clc
or
inc
sbb
jae
or
xor
pushf
add
and
xlat
icebp
aad
(bad)
ds
mov
adc
mov
lods
pop
xchg
add
ror
por
call
mov
xor
push
shl
add
mov
pop
and
push
sti
xor
loopne
mov
and
or
cmp
mov
imul
aad
fcmovbe
xchg
gs
nop
push
or
inc
fdiv
mov
pop
and
enter
pusha
dec
mov
ins
dec
mov
inc
xor
pushf
ja
shl
in
xchg
push
cmp
pop
lds
cmp
mov
inc
mov
and
sbb
or
inc
xor
adc
ss
cld
adc
lds
mov
mov
cmp
or
je
mov
mov
mov
fadd
pop
rol
sub
les
sub
sub
cmps
add
dec
inc
dec
dec
outs
or
cmp
add
adc
sbb
and
retf
sub
sub
pushf
shl
sub
inc
fidiv
or
mov
(bad)
mov
pop
daa
(bad)
adc
pusha
dec
pop
loopne
push
push
inc
imul
sub
les
aaa
adc
mov
test
cmps
les
push
jmp
mov
mov
daa
daa
and
push
pop
mov
enter
inc
dec
rcl
adc
mov
aaa
push
aaa
psubw
sub
xchg
in
es
push
dec
(bad)
and
mul
mov
cmp
lods
outs
(bad)
or
repz
or
ins
mov
aam
jb
iret
dec
pop
xchg
xchg
test
xchg
daa
or
es
out
mov
pushf
rcr
sahf
push
dec
loope
ss
sub
ins
inc
arpl
push
daa
or
pop
clc
push
xor
pop
daa
mov
mov
sub
inc
aaa
xor
pop
das
sub
inc
inc
and
aam
cmps
comiss
lds
shl
std
adc
test
jmp
cmps
mov
or
adc
xchg
movs
sub
lods
push
popf
movs
sti
rol
inc
adc
adc
popa
jl
fwait
mov
xor
and
pop
and
imul
inc
inc
mov
pop
mov
xchg
icebp
loope
mov
xchg
push
dec
ficomp
mov
dec
mov
jo
adc
adc
push
daa
je
pop
ins
inc
add
jo
fs
sbb
clc
pusha
arpl
adc
xchg
sbb
popa
mov
ins
adc
aam
fneni(8087
cwde
out
push
adc
push
mov
xchg
sub
or
sub
xchg
imul
fs
fcomp
enter
das
add
inc
sbb
sbb
dec
sub
pop
jno
pop
in
in
mov
sub
xor
int
sbb
sbb
das
sahf
jl
cmp
sub
test
ror
cld
ss
adc
imul
aaa
or
and
test
fist
scas
adc
and
call
jmp
jge
adc
jmp
dec
inc
pop
movs
pop
mov
outs
and
sub
mov
adc
jbe
inc
inc
mov
push
pop
sub
push
in
nop
push
xor
and
push
out
nop
mov
imul
popf
lahf
mov
and
inc
inc
inc
das
pop
dec
les
inc
outs
mov
lods
call
mov
cmp
dec
push
in
(bad)
and
jne
or
inc
enter
mov
mov
mov
pop
call
inc
push
aaa
outs
xchg
xchg
and
jns
dec
dec
js
dec
lods
jne
push
nop
sub
dec
inc
cmp
mov
add
xor
pop
inc
aas
arpl
fs
nop
movs
pop
add
leave
iret
pop
xor
fcomp
lods
xor
popf
xchg
ins
sub
or
push
movs
in
mov
fcomp
cmp
lds
add
daa
sub
shr
xlat
or
or
(bad)
add
push
adc
jno
mov
pop
jmp
pop
cmp
ins
fld
hlt
sub
mov
cld
push
pop
dec
in
xor
adc
in
adc
lea
ror
pop
adc
jno
popf
jmp
add
and
cmp
or
xor
mov
mov
mov
sbb
ins
jo
rol
popa
jecxz
(bad)
daa
pop
fild
xor
or
or
ins
lods
adc
pusha
inc
jmp
icebp
mov
ret
scas
ins
adc
call
xor
fbld
in
popa
das
or
popa
adc
and
pop
and
mov
and
sub
sbb
cdq
push
gs
inc
pop
ret
cdq
fild
mov
lods
dec
or
aam
and
and
aam
das
or
into
ja
nop
add
cmc
jae
jo
sbb
mov
dec
adc
lods
call
rol
call
aam
rcr
adc
cmp
pop
(bad)
mov
mov
sbb
(bad)
out
or
mov
arpl
and
add
xchg
xor
adc
push
iret
pop
out
mov
movs
and
outs
add
jmp
cmps
and
pusha
int3
add
lea
sub
add
cwde
mov
pop
cmp
inc
cli
ror
test
shr
shl
mov
iret
sub
fdivr
(bad)
ror
or
dec
sub
sti
fdiv
xchg
and
inc
sub
push
jle
in
mov
or
aam
retf
shr
sub
stos
fsub
xchg
jbe
xor
xchg
mov
(bad)
test
push
dec
sbb
xlat
inc
cs
push
mov
loop
mov
test
push
jb
in
lds
push
leave
push
add
cmp
adc
xorps
mov
xchg
scas
cmp
mov
add
dec
push
inc
adc
dec
gs
adc
xor
dec
sub
push
and
mov
pop
test
and
or
dec
pop
and
pop
dec
scas
loope
or
or
rol
add
xchg
daa
push
jecxz
idiv
enter
and
cmps
or
adc
or
inc
dec
jmp
mov
inc
and
or
lds
inc
xchg
popa
(bad)
pop
retf
sbb
fucomi
je
mov
or
in
repnz
mov
mov
push
and
inc
pop
repnz
fmul
or
aaa
mov
aas
or
mov
xchg
sti
sar
pop
leave
push
ja
add
push
not
daa
push
and
cmp
cmps
outs
mov
shl
add
nop
and
jecxz
imul
in
jbe
out
daa
pop
push
mov
mov
ins
aam
sub
movs
shl
cmovle
(bad)
aam
push
pushf
or
(bad)
int3
sbb
sbb
dec
in
leave
jl
aam
mov
ret
mov
mov
and
add
sbb
or
cs
aaa
jno
pop
sbb
(bad)
cmp
imul
and
cs
adc
push
jno
mov
je
pop
xor
or
inc
or
nop
push
xor
call
add
hlt
lahf
fld
xchg
sbb
aam
or
mov
sbb
sbb
inc
cmps
mov
jmp
or
sub
mov
pop
add
inc
xchg
stos
add
mov
mov
xchg
adc
cmps
cli
lods
adc
mov
sysexit
pop
mov
addr16
aad
iret
add
cli
mov
jnp
sub
jne
shl
fld
ror
sbb
shl
in
or
cmp
clc
jb
loopne
not
sbb
mov
dec
cs
mov
or
in
dec
jb
or
or
ins
push
scas
arpl
fld
mov
sti
les
sbb
scas
pusha
mov
inc
inc
jmp
imul
xchg
mov
pushf
fnsave
(bad)
pop
stc
adc
fisttp
repnz
cmp
loopne
nop
cmp
aaa
push
loope
es
xchg
xchg
scas
dec
les
loop
sub
hlt
cmp
in
xchg
out
push
int3
lock
cmp
sbb
or
in
pop
call
sbb
shl
sub
ja
enter
ror
leave
leave
leave
cli
fs
mov
(bad)
mov
shl
iret
repz
push
mov
iret
repz
xchg
popf
xor
cmp
inc
ret
push
retf
push
rcr
mov
jmp
sti
add
out
sahf
out
adc
and
jns
out
sahf
or
cs
jno
int
push
jne
push
popf
pop
enter
add
out
sbb
ss
add
sub
inc
loopne
inc
movs
fild
or
cld
rcr
pop
shl
xchg
shr
sar
sbb
sbb
xor
gs
xor
mov
mov
xor
adc
(bad)
or
jb
sbb
mov
adc
and
or
dec
jbe
int3
paddd
inc
das
fdivr
push
dec
loopne
aaa
or
cdq
inc
push
pop
dec
and
mov
int3
lsl
add
add
mov
add
jg
and
pop
jmp
or
mov
push
or
push
and
arpl
ins
push
ja
inc
dec
sar
push
cmc
dec
aam
sahf
out
fimul
lods
mov
cmp
repz
vpmullw
sahf
idiv
in
cmp
dec
adc
out
sbb
sub
add
mov
pop
xor
daa
mov
add
jno
mov
scas
popf
jl
push
fcomp
pop
pushf
add
sub
mov
jg
int
pop
ror
clc
or
pop
push
les
mov
or
sub
cmps
lods
jmp
xor
adc
adc
addps
cmp
ficom
push
call
mov
sbb
shl
repz
cld
push
xor
cmp
lods
adc
inc
ins
xchg
pop
sbb
pop
rcl
das
pusha
adc
outs
pop
sub
push
movs
test
push
cmps
(bad)
cmp
jo
inc
call
push
inc
call
add
int3
daa
cmp
scas
dec
outs
dec
cmp
lods
dec
or
or
rcr
cmps
mov
push
sbb
and
fwait
xor
pop
add
inc
inc
sbb
scas
lods
xor
or
test
pop
movq
mov
pop
cmp
add
and
xchg
outs
leave
or
pop
nop
outs
test
loopne
cmp
xchg
push
test
hlt
arpl
adc
int3
or
lock
cmp
add
xor
fdivr
push
inc
push
add
call
aaa
pop
cmp
scas
and
pop
and
push
dec
xchg
rol
and
sbb
aaa
lods
add
cmp
or
cmp
pushf
movs
mov
mov
mov
add
sbb
and
push
sar
xchg
dec
mov
or
ret
ret
dec
inc
add
(bad)
pop
pop
mov
mov
test
pop
iret
repz
ss
shl
cmp
cmp
loope
add
mov
fmul
add
xchg
rol
mov
mov
sub
rol
add
(bad)
cwde
(bad)
sbb
and
adc
cli
int3
add
adc
sbb
es
inc
push
xor
xor
in
pop
aaa
and
cmp
imul
inc
jle
adc
or
push
cmp
xor
cmp
or
jb
ret
mov
mov
fsub
or
aaa
arpl
inc
mov
jnp
in
in
dec
arpl
mov
and
mov
and
dec
and
in
nop
and
out
xor
and
xor
enter
dec
dec
in
dec
ret
inc
push
pusha
push
dec
add
or
fs
sbb
ins
push
sub
sbb
add
push
and
rcr
imul
adc
dec
dec
sbb
and
and
dec
jl
and
shl
loop
sbb
clc
adc
sbb
inc
push
movs
fstp
dec
dec
bound
fs
int3
add
repz
(bad)
mov
stc
cmp
repz
cmc
dec
(bad)
jns
cmps
adc
out
sahf
dec
pop
arpl
cmp
lahf
test
out
(bad)
rcr
in
sar
stc
add
or
repz
xor
cmp
repz
addr16
mov
repz
xchg
sahf
fsubrp
clc
aam
out
ds
fld
vmwrite
sub
sahf
out
pop
push
sbb
test
aam
mov
lods
ins
and
es
push
mov
or
adc
outs
(bad)
push
xchg
hlt
ficomp
loopne
scas
es
cmp
cs
bound
sub
push
sub
fwait
shr
in
push
push
(bad)
enter
mov
jno
cmp
xor
out
rol
pop
test
pop
cmp
mov
fidiv
mov
adc
cwde
xor
mov
shr
or
add
push
mov
stc
sbb
sub
je
mul
jb
popa
pop
push
invd
dec
pop
call
xor
jg
arpl
ins
fcmovu
adc
mov
mov
dec
dec
mov
(bad)
imul
mov
sub
sub
xchg
xchg
pusha
or
mov
jle
das
add
jo
jne
sbb
adc
dec
or
xchg
in
mul
cmp
push
add
in
pop
pop
call
test
lock
ins
sub
je
movs
xchg
sbb
add
jns
add
push
push
ffree
mov
loope
cwde
out
out
push
test
pop
es
sbb
sub
iret
repz
cmp
dec
push
repz
repz
fs
je
iret
repz
stos
mov
mov
sar
add
cmps
enter
iret
repz
bnd
push
push
add
fnsave
add
mov
adc
add
cs
cmp
rcr
repnz
in
out
aaa
in
jecxz
jecxz
in
aad
cmps
inc
es
aaa
sbb
push
jge
mov
cwde
push
mov
int
imul
mov
mov
cmp
mov
enter
call
out
leave
xor
pushw
js
in
mov
dec
jmp
push
xor
ins
mov
(bad)
pop
add
in
ret
jp
fs
pop
pop
js
or
in
push
push
or
mov
pop
outs
mov
xor
or
dec
shr
fwait
(bad)
adc
pop
ins
push
add
and
xor
sub
outs
adc
sbb
fnstenv
add
jb
out
repz
dec
ins
daa
in
outs
jo
scas
in
jb
(bad)
lock
jbe
in
push
xor
das
pop
jmp
pop
xchg
loopne
jl
cmp
cmps
pop
and
jb
mov
les
add
jb
pusha
mov
jo
das
push
jnp
sar
add
rcl
xchg
rol
test
pop
cdq
and
sub
out
sahf
out
pop
gs
jne
out
sahf
jge
mov
mov
jns
add
fstp
jmp
cmpxchg
xor
mov
pop
out
cdq
cmp
loopne
add
mov
mov
add
into
mov
inc
and
lods
pop
mov
enter
mov
push
and
rol
out
sub
shr
test
pusha
ins
test
xchg
and
inc
jne
aaa
pop
sub
aaa
mov
test
mov
jmp
cvtdq2ps
imul
(bad)
ins
adc
mov
movs
adc
jo
mov
pop
xchg
shr
cmp
test
nop
int3
imul
pushf
enter
cmp
mov
cmp
xchg
mov
daa
mov
arpl
stos
fdiv
push
cmp
mov
daa
mov
lock
scas
or
fsub
mov
in
lahf
stos
nop
dec
mov
and
fadd
push
cmp
hlt
mov
fs
ins
push
cmp
xor
sbb
adc
or
in
add
stos
scas
cmp
adc
arpl
(bad)
mov
or
mov
sbb
mov
adc
mov
scas
sbb
mov
inc
push
jb
jo
mov
mov
cmp
(bad)
inc
adc
and
and
rcl
fwait
je
test
ins
and
adc
push
in
sbb
add
sbb
xor
test
dec
call
adc
jmp
mov
adc
mov
dec
and
movs
mov
dec
mov
inc
jb
dec
sbb
lock
call
fldl2t
jecxz
repz
out
add
or
iret
sub
cmp
iret
repz
outs
jns
(bad)
repz
repz
mov
repz
into
fsub
in
test
cmp
jae
push
adc
sub
iret
repz
cmp
push
pop
outs
cmp
repz
or
stos
mov
enter
ds
fsub
mov
xchg
popf
lahf
out
sahf
cmps
mov
(bad)
in
cmp
repz
cmp
jp
repz
repz
dec
push
pop
iretw
repz
jo
in
mov
cmp
enter
mov
(bad)
in
aaa
or
popf
fwait
adc
pop
(bad)
in
and
pushf
xchg
cmp
push
push
jp
inc
cmp
ss
adc
nop
pusha
out
sbb
rcl
adc
add
js
or
push
mov
add
lods
ins
pop
ss
xchg
push
enter
imul
push
push
retf
out
pop
shr
inc
(bad)
and
xsha1
cmps
dec
adc
fbstp
nop
push
stos
xchg
dec
mov
pusha
push
xor
inc
call
scas
dec
test
sbb
lock
neg
xor
mov
sbb
adc
or
jae
fsub
lock
xchg
push
dec
mov
cdq
and
and
mov
movs
test
in
xor
ja
scas
int3
adc
inc
add
adc
sbb
push
pop
add
loopne
push
xor
add
and
rol
ds
xor
xchg
pop
sub
call
icebp
and
leave
xchg
call
stc
jge
jmp
push
inc
stc
aad
retf
ror
pop
push
lds
scas
(bad)
sar
add
fs
cmps
push
or
pause
xchg
ss
sbb
outs
sbb
loop
jb
repz
sbb
scas
push
hlt
out
mov
out
xor
retf
ss
xor
icebp
fnstenv
aad
cmp
sbb
shl
cmp
add
cs
pop
popa
sub
jne
push
aam
and
cmps
cmp
shl
dec
xor
sbb
adc
scas
push
sub
mov
mov
les
inc
inc
outs
mov
hlt
pop
add
push
rol
pusha
(bad)
jmp
or
in
test
adc
or
aaa
lock
out
push
pop
inc
mul
dec
sar
aam
fild
dec
adc
and
movs
mov
sub
fs
sub
add
dec
imul
push
adc
add
sbb
leave
cli
mov
stos
rcl
aas
push
sbb
sar
addr16
pop
sub
rcr
add
out
mov
add
sub
neg
inc
push
stc
scas
dec
pop
daa
xor
in
cmovno
jmp
not
fild
jnp
pusha
leave
out
rol
icebp
repnz
div
nop
xor
sub
imul
pop
test
and
and
mov
mov
mov
icebp
lahf
pushf
add
dec
je
jecxz
mov
mov
call
push
cmp
jns
fbstp
nop
es
mov
enter
sbb
in
xlat
arpl
in
idiv
add
fwait
enter
push
call
dec
inc
aaa
mov
cmp
add
xchg
mov
popa
sub
cmp
lods
iret
pop
jne
xor
inc
daa
cdq
icebp
and
dec
or
and
dec
add
push
dec
icebp
add
popa
retf
xchg
cld
popa
mov
mov
push
outs
dec
mov
sti
inc
cmp
out
out
pop
inc
outs
xchg
movs
ja
inc
leave
popf
add
sub
xchg
jb
leave
xor
nop
add
mov
mov
test
dec
sub
inc
sub
fdivr
dec
enter
jb
xchg
popf
call
in
pcmpeqb
add
and
and
dec
enter
sbb
mov
cmp
mov
adc
pop
enter
aaa
(bad)
jecxz
sbb
dec
adc
test
enter
mov
jnp
jne
ins
enter
lods
(bad)
sbb
or
daa
add
int3
gs
rol
push
js
jae
outs
ficom
pusha
pop
jl
rol
out
shl
push
and
fsubr
shl
adc
ins
ror
adc
inc
out
add
pusha
sub
and
lods
mov
push
add
push
inc
or
inc
ror
pusha
mov
imul
call
dec
aam
rol
push
imul
std
add
in
movq
jmp
ret
adc
movs
adc
(bad)
outs
jmp
in
sbb
js
pop
fcom
sub
dec
lods
jb
adc
dec
add
xchg
cli
fadd
test
pop
sub
add
rcr
fsub
lahf
xor
or
dec
or
cmp
movs
test
mov
lods
dec
jecxz
push
xor
sbb
out
in
call
mov
jbe
mov
fist
nop
pop
sbb
out
and
and
adc
xor
enter
jb
loopne
call
sbb
adc
cld
or
mov
or
add
(bad)
and
imul
or
or
(bad)
loopne
lea
fmul
dec
and
xchg
jle
inc
shl
cmp
test
in
push
push
jbe
add
mov
stc
jmp
pop
aam
sub
xchg
push
add
test
xchg
inc
test
dec
add
call
std
mov
sbb
push
daa
pop
mov
mov
xor
push
jmp
and
bound
and
clc
mov
dec
cs
jmp
pusha
in
(bad)
out
xchg
add
push
mov
(bad)
nop
rcr
lods
pop
add
loopne
(bad)
adc
int
std
push
xor
sbb
arpl
dec
mov
cmp
ds
in
and
in
inc
push
mov
imul
push
ret
data16
in
xchg
jo
sar
or
call
jecxz
imul
lods
mov
ja
movs
(bad)
jl
sbb
loopne
loope
add
xor
add
arpl
jmp
pop
rol
jge
test
add
ucomiss
and
jno
cmp
add
jne
dec
and
or
or
ins
mov
pop
ins
or
mov
jmp
inc
lds
in
fdiv
jmp
lea
xor
and
adc
outs
sbb
in
out
or
add
sbb
mov
or
xchg
xchg
jl
clc
add
arpl
and
add
inc
test
dec
push
cld
and
aam
pop
or
inc
mov
add
sub
jno
add
js
call
movs
mov
inc
pusha
or
or
sbb
add
mov
xor
mov
sub
dec
jno
sub
add
mov
push
test
add
pusha
int
ins
dec
pusha
xor
adc
add
mov
push
lock
add
jno
aaa
mov
out
fwait
movs
or
xor
fidiv
mov
sbb
loopne
bound
fcom
xchg
in
inc
jmp
push
rcl
mov
aam
xor
fucompp
or
jne
fcmovbe
push
test
aaa
mov
and
call
sub
and
xchg
and
call
les
and
mov
pop
push
pop
cmps
sbb
sbb
repz
xor
dec
mov
and
cmp
jo
mov
cmp
and
pop
ds
nop
or
(bad)
jmp
test
xor
stos
or
cmp
sbb
hlt
mov
push
in
pusha
push
or
mov
sub
sub
cld
iret
pop
adc
pop
sub
sar
shl
push
or
and
xlat
xchg
inc
sub
xor
aas
or
nop
and
xor
pop
mov
in
or
or
cmp
cmps
in
xchg
dec
call
fild
dec
aaa
mov
test
imul
imul
or
push
sub
ror
sub
(bad)
adc
clc
push
jp
pop
js
sbb
add
stc
adc
dec
mov
mov
fucom
mov
push
aaa
in
test
pop
or
and
idiv
mov
pop
and
inc
jp
jmp
pop
loop
add
movs
test
xchg
dec
pop
mov
push
das
push
popa
push
pop
add
xchg
movs
movs
mov
das
add
xchg
pop
(bad)
sbb
pop
xor
or
adc
out
ror
fisttp
sub
icebp
cmps
dec
sbb
fcmovbe
or
fidivr
adc
call
gs
push
sbb
ins
sbb
shl
adc
inc
jl
sub
popf
cli
mov
inc
pop
loopne
ror
adc
jo
xchg
push
call
lea
jb
xchg
sti
(bad)
xchg
daa
pusha
loope
neg
push
sbb
jbe
inc
push
or
inc
xor
pop
mov
pop
add
adc
mov
mov
dec
and
push
mov
and
fld
or
adc
and
rcl
add
shl
or
sub
and
out
adc
imul
add
lahf
lds
aaa
dec
retf
sbb
cmp
or
or
push
mov
sub
hlt
add
push
mov
add
mov
cdq
aam
bound
daa
pop
jb
pop
lock
ror
ror
cmp
fimul
movs
add
mov
fld
js
cmp
jno
add
lea
inc
lods
jnp
and
xchg
adc
lock
div
popa
and
jge
or
add
nop
(bad)
jo
dec
cmp
mov
enter
jo
add
mov
jbe
adc
pop
sar
retf
jg
xchg
lods
or
mov
fcom
or
push
enter
mov
imul
outs
xchg
movs
xor
dec
xor
ss
rcr
jne
dec
mov
mov
sub
pop
mov
add
out
test
ins
and
call
or
pusha
adc
pop
add
imul
movs
sub
call
sub
inc
sub
dec
fucomp
adc
pop
dec
aad
add
clc
sbb
xor
mov
dec
dec
dec
xchg
mov
or
push
jo
ins
mov
add
enter
call
imul
mov
in
shl
jg
lods
mov
int3
add
and
pop
and
rcl
aaa
test
retf
dec
sub
les
adc
and
je
xchg
mov
dec
jne
inc
sbb
add
mov
jb
adc
xlat
lods
pop
inc
scas
pushf
(bad)
call
stc
sbb
rcl
sbb
adc
rol
push
adc
pushf
sub
pop
adc
mov
fld
xor
cmp
or
adc
out
cmp
sbb
adc
imul
sar
(bad)
and
push
imul
sub
mov
mov
cdq
les
mov
mov
hlt
inc
pop
xchg
push
adc
adc
jnp
mov
je
push
cmp
les
adc
mov
sub
int3
mov
dec
ror
mov
sbb
sbb
(bad)
lods
inc
repz
inc
aad
adc
cmp
aad
xchg
push
add
push
adc
or
add
std
mov
retf
xor
dec
or
lods
cmp
add
nop
sub
mov
jo
or
inc
mov
enter
sbb
sbb
mov
inc
adc
shl
lahf
push
jo
jns
or
movs
fmul
inc
xchg
cmp
imul
xchg
pop
dec
xor
mov
mov
ins
mov
jns
push
inc
mov
shr
mov
test
sbb
fimul
push
xlat
mov
xor
fs
or
jno
movs
dec
or
mov
fistp
daa
gs
sub
es
in
imul
xor
adc
and
jns
adc
xchg
out
push
add
mov
or
inc
test
add
jmp
or
xchg
cmp
ins
dec
xor
and
sub
jmp
dec
pop
fdivr
frstor
sbb
fwait
je
sub
stc
fdivr
test
xor
xchg
push
cmp
sbb
and
out
inc
push
mov
pop
adc
inc
inc
dec
add
jg
popa
and
pop
iret
add
outs
pop
out
or
scas
sub
(bad)
movs
cmp
or
sub
adc
jecxz
nop
stos
push
and
inc
pop
dec
(bad)
adc
dec
pop
and
inc
mov
data16
adc
add
inc
retf
and
shr
div
movs
jmp
and
clc
sbb
fstp
sub
aas
ss
sar
jmp
lea
add
mov
push
(bad)
sbb
push
or
push
pop
je
cs
ins
mov
sub
or
and
cmp
(bad)
dec
jmp
and
dec
outs
push
and
inc
es
test
sbb
cmp
pop
adc
xchg
mov
xchg
xchg
push
aad
ja
scas
mov
pop
mov
xor
push
arpl
jno
xor
jo
jmp
shl
jmp
adc
fadd
or
inc
dec
aaa
push
add
scas
es
in
or
mov
cmp
pop
jo
dec
add
inc
jge
adc
add
adc
jb
jne
xchg
iret
repz
clc
outs
adc
xchg
adc
mov
add
sub
mov
mov
xchg
xchg
aaa
cmp
test
das
nop
pop
xlat
mov
and
xor
sub
mov
push
imul
push
jecxz
cmp
je
add
lock
ins
pop
sbb
inc
dec
inc
rcl
dec
xor
imul
push
ss
adc
mov
mov
pop
mov
mov
adc
daa
mov
add
push
mov
jne
inc
mov
or
mov
jnp
adc
sbb
add
mov
dec
not
jb
in
call
jns
push
mov
mov
cli
inc
aaa
push
add
add
pusha
shl
stos
mov
lock
lods
fsub
loopne
nop
dec
popf
loopne
add
mov
aad
test
add
jmp
fst
cmp
mov
fiadd
xor
inc
jmp
adc
adc
xor
cld
push
ins
mov
movs
xor
(bad)
dec
sahf
mov
test
pop
mov
add
inc
retf
xchg
mov
cmc
adc
xchg
rol
lods
mov
aas
inc
sub
dec
ret
cmp
mov
dec
and
adc
test
pop
mov
inc
pop
repz
xor
or
jne
xor
and
jge
clc
mov
xchg
inc
add
adc
(bad)
mov
fwait
sbb
movs
pop
test
pop
jne
mov
mov
xor
push
ret
add
shl
les
lods
mov
mov
push
mov
test
add
mov
mov
or
dec
inc
rcl
icebp
add
inc
push
adc
jp
es
adc
fcom
xlat
jne
pusha
and
push
cs
and
or
loopne
jmp
mov
add
and
xor
add
jnp
adc
jo
push
inc
leave
lahf
push
ss
adc
nop
daa
je
add
ror
shl
xchg
mov
push
jnp
sub
fdiv
xor
jmp
pop
jne
mov
push
xchg
call
sub
inc
movs
jbe
sbb
xlat
mov
pop
or
mov
pusha
dec
mov
sub
xchg
jge
push
jne
inc
mov
out
arpl
out
adc
scas
sbb
adc
inc
inc
shr
inc
stos
inc
ja
imul
imul
nop
mov
dec
les
jl
pop
aaa
mov
mov
movs
inc
add
popf
xchg
pshufw
les
xor
sub
xor
mov
nop
nop
loopne
push
inc
cmp
dec
fild
test
mov
imul
cmp
sub
and
les
sub
push
mov
mov
dec
add
jmp
mov
cmp
pop
sbb
js
test
daa
bound
xor
fbld
xor
inc
ret
mov
retf
std
inc
inc
add
xchg
sub
add
clc
rol
inc
shl
xchg
dec
popa
push
add
mov
pop
add
mov
jne
push
std
cs
ffree
xchg
in
imul
fst
cmp
scas
hlt
sub
xchg
mov
sub
sbb
aas
mov
in
mov
or
adc
and
outs
lahf
lock
ins
(bad)
and
and
or
test
jno
pop
pop
es
dec
push
and
inc
adc
or
add
xor
mov
jo
or
or
mov
nop
nop
xchg
or
mov
adc
adc
pop
pop
adc
pop
das
test
repnz
pop
jnp
adc
or
sbb
je
js
push
loop
jl
movs
cdq
mov
xor
fs
sbb
adc
ins
jae
fsub
xor
mov
mov
xchg
ret
xor
ret
and
push
add
add
or
das
ret
cmps
push
mov
iret
pop
loopne
or
sti
add
sbb
ins
sbb
xor
ins
cmps
xor
ins
sub
add
aas
mov
mov
dec
enter
or
test
sbb
popf
fmul
dec
imul
nop
and
dec
dec
pop
sub
pop
inc
xchg
fnstsw
movs
sbb
lea
(bad)
push
cmp
xor
ret
adc
mov
fs
addr16
and
lea
dec
sbb
jmp
repz
cmp
xchg
add
mov
shr
pop
cmps
adc
push
in
pop
and
inc
fs
test
lods
xor
call
cmps
push
adc
jmp
xlat
cmp
das
daa
mov
pop
int
mov
xchg
mov
push
or
sar
lock
sub
call
inc
dec
fstp
fsub
adc
cmc
cld
mov
sub
pop
mov
aad
pop
and
inc
jecxz
es
repnz
and
daa
outs
aas
xchg
ret
int
add
shl
jbe
jne
xor
adc
fstp
(bad)
push
out
loop
nop
mov
push
or
adc
pop
or
and
mov
out
ret
pop
popa
push
or
mov
inc
jns
cs
pop
and
sbb
add
dec
out
and
idiv
cli
aad
xor
in
je
ins
cmp
fs
rcl
rol
iret
add
mov
adc
xor
lods
sbb
dec
inc
jecxz
in
ret
mov
mov
inc
cs
adc
aaa
int
xchg
or
and
mov
xor
adc
mov
xchg
bound
xchg
cwde
or
(bad)
dec
das
dec
cmp
sub
xor
adc
push
nop
in
mov
shr
call
adc
pusha
push
sbb
pop
pusha
jge
cmp
jmp
xchg
outs
or
stos
rcl
inc
xor
mov
aam
or
mov
or
arpl
push
stos
cdq
add
add
dec
dec
or
sub
aas
adc
in
imul
hlt
jno
and
lock
popf
push
mov
add
dec
ret
fwait
push
test
nop
ja
popf
outs
or
cwde
ss
mov
xchg
xchg
out
rcr
sub
push
fs
adc
out
push
xlat
or
mov
pop
adc
sub
jg
mov
leave
xor
dec
stos
sbb
mov
pusha
push
movs
mov
cmps
enter
sahf
sbb
aaa
cld
mov
push
add
push
ret
iret
aaa
iret
add
push
adc
leave
js
arpl
mov
mov
in
icebp
sub
push
pop
adc
and
lock
xchg
sbb
push
cmp
adc
cmp
adc
sbb
fld
lods
push
and
dec
push
jne
rcr
push
push
cmps
ins
arpl
and
xor
movs
mov
inc
xchg
(bad)
(bad)
out
sbb
xchg
jle
push
pop
pop
test
jl
daa
sub
imul
imul
adc
rcr
(bad)
dec
xchg
mov
mov
test
sbb
xchg
sub
adc
shl
outs
and
stos
bound
or
ret
xchg
nop
scas
lea
or
and
add
cmps
mov
inc
(bad)
mov
pop
pop
or
cmp
retf
aam
imul
mov
lgs
xlat
test
sbb
jnp
or
jno
adc
or
fld
retf
and
jge
dec
sbb
xor
and
push
xchg
loopne
shl
push
mov
push
push
test
mov
xchg
sbb
clc
sub
loope
rol
jo
mov
or
cmp
shr
aas
jle
jge
rcr
cmp
cmp
rcl
test
fs
movs
xchg
sbb
xor
cwde
arpl
fnstenv
ins
and
mov
jb
in
adc
and
xchg
repz
scas
arpl
and
hlt
add
movs
cdq
inc
pushf
pop
and
stos
ins
fist
jbe
push
ja
enter
pop
ds
or
sub
ds
dec
les
cmps
push
push
das
pusha
xchg
xor
mov
or
les
or
sub
aas
(bad)
fdiv
jns
mov
adc
adc
fsqrt
inc
dec
inc
sahf
ds
sahf
or
(bad)
or
pop
sbb
or
inc
xchg
add
inc
scas
xchg
push
lods
adc
xacquire
push
sbb
or
out
cmps
add
sub
mov
dec
call
sub
mov
mov
imul
sbb
fstp
es
fmul
test
xor
or
dec
pop
aaa
je
lea
add
add
ret
nop
mov
adc
xchg
mov
inc
push
je
inc
add
xor
mov
push
nop
mov
jb
and
inc
and
inc
push
inc
or
sbb
sub
push
mov
das
aas
inc
mov
xchg
jg
mov
lock
(bad)
lea
inc
mov
cmp
jns
sub
bound
inc
enter
cwde
inc
imul
and
loopne
dec
(bad)
push
leave
and
inc
add
cmp
inc
mov
test
inc
inc
dec
dec
jo
mov
and
xor
pop
xchg
jne
cmc
push
pop
add
arpl
sbb
nop
ins
sub
jne
pop
push
push
pusha
sub
in
mov
sub
pop
aaa
jge
stos
ret
pop
pop
je
cmp
lea
add
or
in
and
aam
mov
es
jg
mov
adc
add
inc
fstp
or
sub
or
out
sbb
sbb
cdq
nop
xor
xor
test
push
xor
(bad)
push
ss
ror
lods
adc
pop
lods
dec
(bad)
mov
enter
je
cs
jb
cmp
xor
cs
lock
mov
std
add
aaa
mov
push
push
lahf
enter
mov
push
in
inc
jo
adc
fs
mov
adc
sbb
ret
adc
inc
mul
pop
leave
adc
sub
dec
pop
or
movaps
enter
inc
inc
sub
imul
bound
fcomip
shr
fdiv
pop
push
iret
and
sub
adc
jmp
dec
adc
pop
and
jb
dec
out
xchg
add
dec
jne
mov
inc
add
inc
cmp
pushf
or
sbb
(bad)
into
dec
mov
xchg
clc
mov
add
aad
or
jbe
lds
hlt
retf
mov
wrmsr
mov
push
pop
enter
sub
imul
or
jecxz
xor
inc
cmp
bound
punpckldq
int3
push
cmp
sahf
scas
or
adc
inc
fld
mov
xchg
cmp
jecxz
dec
or
sub
sbb
or
fiadd
sbb
sub
inc
in
mov
add
gs
cmp
or
inc
(bad)
sub
adc
das
xor
loop
movs
and
in
nop
inc
mov
lahf
das
cmp
mov
dec
cmp
inc
or
inc
or
pop
inc
mov
inc
pop
sbb
lock
xor
mov
pop
push
adc
jns
sub
add
or
mov
jge
imul
out
jns
mov
xchg
icebp
and
push
out
pusha
ja
xchg
mov
in
dec
std
rol
push
pop
or
int3
in
inc
pusha
and
add
or
add
inc
dec
aaa
push
fwait
rol
popa
lahf
or
clc
pop
aam
pusha
fild
aad
add
add
push
adc
mov
or
and
scas
sbb
in
rcr
sbb
sbb
lods
and
adc
aam
daa
scas
gs
(bad)
lods
dec
jg
xor
mov
dec
mov
loope
dec
leave
rol
cmp
jmp
call
add
mov
xlat
inc
add
dec
and
mov
add
push
push
es
ss
ins
or
fs
add
nop
add
les
or
sbb
push
or
or
adc
dec
or
push
mov
jo
add
jle
in
nop
sub
add
enter
or
jo
jl
movs
loopne
mov
dec
jns
icebp
jae
int
push
in
nop
push
mov
scas
out
pop
les
cmp
push
inc
or
and
adc
xchg
push
(bad)
adc
imul
mov
and
dec
dec
sbb
or
stos
adc
cwde
push
mov
adc
jmp
pop
out
sub
cmp
gs
shr
loope
je
push
pop
lea
add
add
push
push
movs
ins
mov
pop
cmp
adc
nop
mov
cmp
cmp
mov
ds
sbb
inc
popa
je
add
dec
shr
or
xchg
pop
(bad)
in
lods
cmps
dec
pop
das
pop
sub
or
jns
test
idiv
mov
jnp
imul
sbb
mov
push
or
add
mov
rcl
add
and
pop
paddsb
pop
xor
sti
add
arpl
popf
push
push
push
mov
mov
xchg
in
scas
push
inc
add
rol
jo
cmps
add
dec
xchg
arpl
inc
fist
inc
dec
jbe
inc
ficom
sbb
jnp
shl
jae
fs
xchg
add
add
inc
fdivp
inc
test
jne
push
stos
icebp
and
push
inc
push
ret
and
pop
mov
or
add
in
stc
loope
(bad)
cmp
cmova
lock
or
or
pop
addr16
push
add
out
inc
inc
dec
or
je
cmc
inc
sub
inc
test
popa
es
add
xchg
frstor
out
mov
or
pop
jne
int3
pop
push
jno
sub
loope
je
sbb
push
mov
mov
mov
xchg
mul
xor
sbb
jmp
and
add
adc
mov
add
cs
xor
and
pop
push
sub
cmp
aam
call
or
sbb
or
push
jo
lea
cmp
and
shl
inc
fmul
(bad)
push
and
push
stos
sbb
dec
or
mov
pop
cmps
add
and
arpl
and
xchg
pop
adc
inc
mov
inc
dec
gs
and
sbb
stc
pop
retf
mov
inc
cwde
dec
arpl
enter
sub
dec
mov
add
jge
dec
xor
jo
inc
or
mov
xchg
das
add
jecxz
xchg
pushf
xchg
pop
dec
cmp
pop
adc
or
push
jo
(bad)
addr16
rcr
sub
pop
xchg
xor
push
or
ins
sbb
mov
adc
adc
shl
in
ret
mov
out
sbb
add
pop
daa
mov
pop
das
stos
inc
pop
pop
inc
pop
push
and
pop
pop
jmp
test
mov
mov
mov
pop
or
jecxz
mov
(bad)
sbb
rcl
cmp
sbb
xor
mov
cs
pop
stos
test
loop
cmp
dec
mov
popf
add
nop
ret
pop
jge
add
ret
mov
xchg
add
sbb
and
ins
fist
push
push
xor
dec
in
sbb
push
fld
xor
and
sbb
sbb
or
xor
and
mov
je
pop
xor
pop
and
pop
in
mov
scas
add
dec
popa
ss
fiadd
imul
retf
mov
and
not
adc
add
pop
add
sub
xor
xchg
push
and
ror
sub
mov
icebp
loop
push
mov
bswap
(bad)
or
ret
and
ficom
(bad)
mov
les
sbb
dec
cwde
movs
mov
and
xchg
loope
cld
adc
pop
daa
in
dec
aaa
mov
add
scas
dec
sbb
adc
jl
dec
and
ret
xchg
jb
or
jecxz
pusha
push
cmp
pop
or
pop
les
inc
xor
int3
mov
adc
repz
pop
push
mov
sbb
pop
hlt
in
sbb
mov
call
cmp
or
xor
(bad)
push
sub
(bad)
jmp
or
mov
push
push
jecxz
pusha
data16
add
xchg
adc
mov
in
loop
or
add
pusha
adc
mov
or
xchg
das
push
push
das
in
je
jne
ss
icebp
loopne
js
mov
push
repz
ss
and
xchg
push
lahf
push
bound
pusha
xlat
mov
pusha
pop
loopne
push
or
shl
pop
mov
cld
mov
in
out
lea
popa
ins
movs
or
stos
sbb
adc
fsubr
add
les
adc
xor
adc
jae
fwait
(bad)
lods
mov
push
add
jle
and
sbb
ret
in
leave
sahf
xchg
add
adc
dec
jg
mov
movs
test
and
retf
xor
sbb
int3
in
pop
or
push
fwait
sbb
mov
ret
pusha
push
sbb
loopne
sti
sub
xor
popa
push
adc
or
out
cmps
or
and
push
shl
movntps
inc
or
bound
and
sub
lods
dec
dec
add
adc
add
loope
mov
rol
mov
scas
mov
sub
arpl
xor
push
fs
cdq
les
adc
xchg
sbb
and
movs
sbb
and
mov
call
test
add
xchg
add
add
and
lods
xor
and
popa
fs
scas
or
inc
push
xor
and
push
leave
and
out
pop
add
in
inc
mov
in
gs
and
push
(bad)
pop
ja
cdq
inc
add
adc
sbb
mov
push
xor
mov
sbb
rcr
mov
sub
mov
mov
and
add
and
imul
pop
and
scas
dec
sub
mov
inc
or
xchg
cmp
xchg
mov
cmp
lods
retf
adc
mov
imul
sub
pop
int
rcr
test
clc
addr16
dec
mov
push
dec
loope
add
mov
push
jmp
out
lds
adc
das
push
sub
daa
and
adc
bswap
inc
dec
rcl
dec
imul
push
imul
mov
and
int3
xchg
jmp
xchg
(bad)
sub
into
outs
mov
jo
xor
mov
cmp
xchg
cwde
xlat
xchg
add
jo
push
lods
push
and
xor
push
or
rol
add
add
adc
mov
outs
and
mov
aas
sub
or
cmps
inc
hlt
sti
lods
jmp
or
cmp
cwde
push
mov
lods
inc
lahf
xor
popa
lods
sub
pop
mov
pop
movs
fistp
bound
push
sbb
cmovp
mov
outs
dec
rol
pop
xchg
inc
ret
sbb
or
sub
aam
mov
and
mov
jl
in
xchg
mov
dec
ret
or
bound
imul
lea
or
sbb
icebp
sub
adc
daa
cmp
or
mov
push
inc
lods
and
mov
es
mov
sub
int3
pop
inc
retf
or
daa
dec
fld
mov
mov
(bad)
(bad)
xor
or
add
add
mov
(bad)
sbb
mov
scas
dec
jmp
inc
add
lods
sbb
dec
push
popa
imul
enter
les
ins
xor
sbb
xlat
sti
or
inc
pop
sub
mov
sbb
sbb
add
push
loope
je
add
jle
dec
add
and
outs
scas
xchg
sub
adc
cs
ror
hlt
mov
dec
jl
arpl
jns
fcomi
popf
push
outs
ret
xor
jne
xchg
and
and
ins
xchg
loopne
popa
mov
call
bound
jno
inc
outs
push
add
rcl
push
cmp
and
dec
imul
movs
add
icebp
add
jns
aad
les
cmp
popf
clc
add
out
bound
add
mov
adc
cwde
fwait
imul
aas
les
int
push
dec
and
jo
xor
and
or
jo
ja
pop
sbb
adc
ja
xchg
adc
lea
mov
and
inc
xchg
fcomp
imul
je
outs
jp
inc
push
adc
inc
push
outs
sti
push
add
sub
inc
cmp
xlat
test
xchg
mov
daa
lds
sbb
mov
jns
pop
xchg
mov
adc
nop
test
cmp
jb
clc
or
push
push
push
xlat
pop
in
sbb
dec
dec
loope
test
dec
sub
and
xor
and
daa
cmp
aam
cmps
addr16
fidivr
les
ins
addr16
out
jb
mov
add
scas
mov
sub
push
mov
pop
jnp
mov
lock
xlat
cmc
aam
fldenv
cmps
cmp
inc
adc
pop
fldcw
movs
jecxz
and
push
cmps
add
imul
imul
cld
cld
call
xor
outs
cmp
out
sbb
adc
add
sub
xchg
xchg
or
mov
or
add
inc
dec
mov
outs
add
clc
pinsrw
pop
shr
mov
mov
inc
push
or
and
fld
or
cmps
jp
xor
aam
push
jle
cmp
cmp
mov
ins
fld
aas
loop
je
push
mov
inc
ret
loopne
ja
xchg
or
mov
inc
xor
mov
std
sbb
mov
in
inc
dec
fsubrp
mov
xchg
movs
mov
les
push
fiadd
push
nop
js
je
xchg
pop
shr
xchg
arpl
push
and
push
test
pop
vmread
push
cmp
jbe
ins
ja
push
inc
push
test
mov
imul
sub
pop
inc
add
or
shl
add
dec
dec
js
push
and
lahf
inc
push
or
add
mov
inc
pop
pop
add
cli
add
push
(bad)
xor
xor
sub
sub
or
lahf
mov
std
push
outs
jns
pop
xor
fbld
cmp
test
dec
lds
or
push
xor
(bad)
inc
push
repnz
(bad)
mov
jno
and
jae
aad
add
adc
and
shl
or
js
loopne
push
cmc
xor
rol
add
push
aaa
xor
sti
xor
pop
push
jns
ins
pop
or
mov
inc
rcl
cmps
loopne
pusha
je
(bad)
ins
popa
adc
retf
(bad)
push
inc
jmp
xor
inc
mov
mov
ret
mov
adc
and
push
push
add
adc
(bad)
xor
pop
adc
dec
movs
aad
jne
sbb
dec
and
sub
nop
dec
push
xor
push
addr16
or
and
lea
shr
ins
cmp
lahf
ins
pusha
addr16
and
inc
adc
cmp
mov
adc
jmp
and
pop
dec
imul
into
add
cmp
jb
sbb
xor
pop
pusha
dec
and
sub
push
sbb
or
cmps
lods
add
jle
sbb
aam
dec
das
cmp
mov
adc
adc
xchg
push
push
and
mov
in
xchg
nop
push
push
stos
ja
sbb
sub
sub
outs
rcl
adc
add
sbb
sbb
les
or
les
push
scas
iret
ret
in
adc
inc
fstp
jo
test
movs
rcl
cmp
jge
adc
div
sbb
jb
cmp
jmp
jmp
arpl
(bad)
(bad)
xor
cmp
inc
jge
and
clc
imul
inc
sub
addr16
pop
ret
lods
ror
pop
cmc
mov
push
jle
mov
add
xor
pop
fldcw
and
mov
sbb
pop
cld
stos
fadd
in
dec
bound
sbb
rcl
jb
je
jnp
jle
aad
dec
(bad)
repz
inc
mov
loopne
push
movlps
ret
cmps
and
inc
push
xchg
les
inc
ret
xor
pop
and
or
inc
inc
xor
ror
mov
aaa
xor
cs
ins
push
fwait
mov
loope
inc
cwde
sub
movs
mov
mov
push
test
cdq
and
aas
push
out
mov
add
sub
inc
cmp
and
jo
aaa
push
mov
test
xchg
mov
xchg
rol
lea
mov
shl
mov
inc
cmp
popa
cmp
cmp
mov
cmps
shl
outs
imul
fwait
jb
rcr
pop
mov
mov
je
jnp
xor
lods
mov
ins
sbb
cwde
pop
stos
pop
ds
mov
xchg
out
jle
push
popf
call
push
add
iret
pop
dec
cmps
pop
pop
mov
mov
dec
js
sbb
imul
aam
cwde
nop
jbe
inc
mov
gs
nop
out
test
in
adc
mov
and
or
push
xchg
adc
sub
inc
fwait
ja
xchg
out
loopne
add
sbb
f2xm1
les
div
adc
xchg
xor
xchg
or
xchg
or
mov
xor
(bad)
push
dec
cmp
daa
sbb
test
daa
mov
ret
(bad)
push
push
sbb
shl
adc
popa
or
lock
adc
mov
retf
push
movs
sub
ins
jo
mov
loopne
rol
add
or
dec
inc
nop/reserved
pusha
outs
hlt
and
es
out
xchg
sub
push
gs
nop
out
jb
pop
gs
inc
adc
inc
scas
pop
xchg
sub
jp
ins
sbb
test
fwait
cmp
push
sub
rol
popa
xor
adc
mov
xchg
xor
clc
test
aas
jo
lea
xchg
fcom
xchg
dec
add
pop
cmp
and
imul
test
xor
ins
adc
aas
inc
stc
pop
push
outs
cmp
and
and
dec
out
pusha
push
cmp
add
imul
das
mov
xor
xor
push
jle
out
mov
adc
jecxz
sbb
test
ror
sub
lds
cmp
in
ror
or
lock
xchg
shl
mov
cmp
shr
push
or
fucomp
nop
or
lds
jge
arpl
ins
lock
push
jns
arpl
push
jne
rcl
push
sbb
or
(bad)
adc
mov
movs
inc
enter
sub
test
xchg
adc
(bad)
push
cwde
or
es
in
add
test
mov
int3
stos
shl
bound
jmp
js
add
add
daa
popa
ja
mov
sbb
jb
jb
mov
push
sar
cwde
out
mov
and
or
push
sbb
ret
mov
xor
leave
repnz
cmc
mov
stc
cmp
lods
inc
push
push
imul
or
aam
xchg
push
fbld
xor
scas
enter
hlt
mov
adc
jne
push
shl
add
xor
push
xor
dec
loope
rol
mov
aad
mov
shr
add
les
mov
lds
enter
clc
clc
mov
mov
popf
lahf
stos
ret
xchg
and
fdivr
pusha
push
or
dec
dec
add
fdiv
pop
dec
movs
loopne
mov
sbb
test
sbb
inc
sbb
fnsave
add
loope
jmp
lock
cs
ret
ds
or
sbb
leave
adc
dec
shl
or
std
mov
add
xor
ret
or
pusha
ret
xor
mov
icebp
cmps
and
call
cmps
je
push
jbe
mov
xor
push
enter
(bad)
jnp
imul
enter
sahf
cmp
mov
add
adc
sub
dec
and
sbb
pop
add
(bad)
(bad)
out
nop
inc
enter
xchg
sbb
xor
stos
and
clts
movs
enter
xchg
and
xchg
and
jg
add
xchg
xchg
push
enter
or
xchg
add
arpl
and
sbb
and
and
in
dec
xchg
repz
(bad)
xchg
push
add
xchg
and
or
xchg
fild
xchg
cmp
nop
xchg
daa
xor
cmp
sbb
mov
jmp
repnz
adc
mov
clc
sbb
or
pop
out
jnp
xchg
ss
ret
jle
pop
sbb
movs
push
sbb
hlt
pop
out
jb
xchg
hlt
hlt
shl
dec
mov
push
pop
add
sti
inc
push
cli
aam
ins
(bad)
hlt
fisubr
xor
aas
cmp
xor
pusha
inc
push
call
xchg
loopne
xchg
mov
sbb
test
and
movs
xchg
cmp
pop
xor
aad
pop
rcr
inc
inc
imul
sbb
fwait
xchg
sbb
sub
pop
jbe
and
and
or
sbb
and
mov
dec
aas
mov
or
xchg
mov
dec
push
cdq
and
and
nop
sub
mov
test
and
addr16
and
add
and
cwde
sub
in
cmp
xchg
inc
xchg
add
cdq
adc
test
add
push
pusha
cmp
ins
cmp
test
inc
dec
or
and
inc
xor
xchg
call
mov
out
push
jmp
mov
loope
stc
leave
jmp
cmovns
push
push
cwde
and
dec
in
lods
ins
mov
push
xchg
xchg
dec
jns
pop
pusha
push
sahf
test
pop
and
popa
mov
into
mov
add
test
adc
sbb
cmp
mov
xor
popf
inc
and
dec
addr16
cdq
xchg
(bad)
sbb
cmp
push
add
dec
ss
push
jl
js
mov
mov
(bad)
and
sbb
xor
jg
mov
(bad)
xor
jl
or
or
mov
dec
pop
sub
mov
mov
subps
pop
pop
push
not
xor
inc
in
xlat
outs
and
inc
push
sbb
(bad)
repz
cmps
nop
sub
inc
shl
or
add
inc
popf
mov
(bad)
leave
shl
out
iret
or
jl
or
cmps
ins
mov
retf
sti
mov
je
int
dec
mov
popa
sub
cmp
stos
adc
dec
pmulhuw
dec
mov
sar
ror
iret
sbb
mov
sub
and
inc
sub
and
push
add
pop
cmps
jg
sahf
mov
xchg
dec
sbb
outs
daa
inc
sub
dec
retf
and
dec
call
or
dec
(bad)
fstp
stos
pop
ss
mov
pop
int3
ret
or
fsubr
and
xor
push
mov
dec
lds
mov
in
mov
test
sbb
pop
add
(bad)
and
neg
push
or
repz
xor
lock
mov
jmp
ror
and
nop
dec
add
mov
inc
pop
xchg
add
fcomp
sub
sbb
shl
xchg
(bad)
pop
and
aam
aam
xor
ss
popf
cmp
mov
push
ret
push
or
aaa
xchg
nop
pavgb
inc
or
push
ret
cmp
jmp
add
aaa
and
push
xor
jp
jno
and
cmps
(bad)
mov
vmwrite
adc
or
mov
test
sub
mov
push
and
adc
fisttp
jo
(bad)
outs
nop
pop
mov
in
scas
jb
xchg
inc
or
sub
outs
mov
push
add
add
or
jo
push
mov
pop
imul
aaa
icebp
or
mov
push
sbb
dec
movs
test
and
add
(bad)
movs
or
lahf
push
push
(bad)
sbb
adc
cmp
pusha
movs
js
push
and
stos
mov
daa
push
xor
scas
cmc
add
pop
loopne
cmps
add
pop
pusha
push
cmp
mov
mov
xor
push
enter
cmps
xchg
push
aas
or
(bad)
cmps
shl
cmps
dec
adc
test
cmps
out
loopne
or
push
adc
or
popa
ins
test
pushf
sub
xlat
clc
or
sbb
and
sbb
int
cmps
push
adc
mov
test
xchg
pusha
mov
jns
adc
or
dec
pop
inc
cmp
test
pop
mov
pop
data16
je
jmp
inc
test
nop
lock
add
sar
mov
adc
cdq
add
inc
ja
add
popa
leave
push
repz
and
or
test
jmp
add
mov
and
pop
mov
iret
sbb
mov
loop
nop
dec
ret
test
pop
adc
pusha
add
inc
sbb
push
shr
loopne
adc
sub
jns
daa
adc
mov
jge
jbe
push
imul
ror
(bad)
cld
stos
push
adc
dec
and
loop
push
(bad)
dec
mov
cmovp
xchg
or
jb
xchg
mov
dec
push
enter
stos
or
sub
dec
and
add
add
nop
push
shl
push
pop
daa
inc
fld
lods
xchg
xlat
push
inc
mov
pop
out
setns
xor
sbb
or
add
movs
lods
mov
xchg
xor
cmp
dec
push
lock
shr
call
mov
(bad)
out
icebp
add
jns
ror
xor
fsubr
mov
dec
scas
test
adc
ins
mov
push
sbb
out
adc
push
pusha
test
add
inc
push
(bad)
dec
scas
and
xor
jge
pop
pop
push
fst
in
sub
jg
pop
add
daa
adc
clc
add
mov
add
in
scas
dec
imul
sbb
adc
sub
daa
repz
xor
les
add
xlat
test
gs
jmp
mov
xchg
jl
jl
push
jmp
xchg
inc
push
inc
aam
jp
fld
cmps
push
pop
dec
xchg
mov
or
(bad)
in
icebp
cli
mov
sub
add
test
js
lods
pop
daa
shr
inc
xor
enter
pop
add
mov
lods
ja
add
inc
sub
mov
ret
add
mov
cdq
pop
pop
inc
fdiv
add
mov
adc
cmp
jl
adc
lea
jmp
mov
pop
cmp
xchg
push
xor
jg
pop
add
cmp
mov
mov
xchg
enter
nop
test
adc
push
lea
sub
in
movs
inc
mov
mov
and
mov
test
neg
push
scas
adc
xchg
cdq
push
adc
and
sub
pop
mov
push
dec
fild
sbb
sub
movs
xor
push
mov
mov
dec
push
gs
mov
movs
adc
and
call
(bad)
or
fs
mov
mov
(bad)
sbb
mov
xor
xor
mov
add
cmc
cdq
movs
lea
jbe
cmp
pop
fwait
movs
lock
xor
xchg
out
add
mov
call
in
jbe
mov
div
dec
(bad)
mov
mov
xor
dec
ja
out
mov
jb
dec
jl
jge
mov
push
push
int
mov
pushf
cmp
lock
cmp
stc
mov
xchg
xchg
push
fisubr
dec
retf
xor
xchg
pop
test
or
sub
pop
cmp
sbb
mov
sbb
lahf
sti
jl
sti
push
cs
fs
cmp
iret
repz
popf
leave
add
jns
xchg
xor
push
and
movs
sti
and
fmul
sbb
loopne
pop
xor
pop
enter
push
adc
fmul
enter
sub
push
jbe
xor
pop
jo
push
sbb
pop
aam
sbb
jo
shl
jb
xor
int3
xor
or
movs
enter
or
shr
in
push
les
aam
nop
inc
inc
rol
pop
xchg
or
shr
mov
cmp
sub
or
in
mov
fbld
or
mov
(bad)
fistp
stc
and
das
outs
lods
mov
lahf
je
xchg
lea
daa
push
hlt
nop
mov
dec
and
jmp
lods
inc
jne
dec
das
adc
adc
cmp
(bad)
mov
jl
jo
das
adc
addr16
inc
imul
xchg
mov
jg
mov
popa
pop
call
mov
push
sbb
aaa
das
mov
xor
cs
not
ja
gs
out
inc
loope
jl
and
pop
mov
sub
sbb
gs
fwait
inc
add
ret
and
ins
inc
repz
test
ror
lahf
cmps
outs
or
dec
cmp
and
jl
push
xchg
pop
call
shl
xor
sbb
or
sbb
dec
ds
sbb
ins
iret
in
sub
cmp
adc
in
das
stos
xor
adc
adc
sbb
push
mov
aam
das
or
cdq
js
(bad)
push
inc
cmp
mov
cdq
sbb
js
mov
xor
push
cdq
sbb
inc
cmp
jae
outs
adc
and
xchg
xchg
add
imul
xchg
shl
or
xchg
aam
bound
cmps
xor
lods
nop
rol
(bad)
rcl
not
fbld
inc
adc
sbb
jo
sbb
dec
mov
ins
shl
loope
das
outs
bound
xchg
pop
dec
inc
push
adc
pop
sub
xchg
daa
lahf
inc
xchg
xor
cmps
mov
fs
fidivr
adc
and
sbb
or
and
mov
test
mov
add
and
xchg
nop
out
sbb
xor
push
adc
xor
les
sbb
jecxz
int
leave
(bad)
or
sub
test
add
sbb
loope
dec
or
cmp
or
inc
sub
ret
dec
push
xor
fwait
sub
push
inc
pop
lahf
jg
ret
dec
pop
sbb
xor
inc
hlt
rol
push
je
sti
inc
shl
ret
sub
xchg
dec
cmps
push
or
adc
rcr
scas
adc
sbb
xchg
adc
adc
xchg
bound
popa
sub
mov
pop
xor
adc
xor
daa
cmps
inc
call
dec
mov
lahf
mov
or
dec
pop
pushf
cmp
and
jnp
inc
xchg
add
call
mov
xchg
push
je
(bad)
sbb
mov
or
inc
push
ret
sub
push
pop
or
addr16
inc
gs
inc
jb
lods
arpl
push
mov
jnp
xchg
and
add
jl
adc
hlt
lds
mov
(bad)
(bad)
jo
and
sbb
add
jmp
loopne
jne
inc
loopne
xor
cmp
int3
inc
xor
shl
addr16
leave
loope
sbb
(bad)
test
sub
inc
rcl
cmps
pusha
mov
movs
jmp
xor
cmc
scas
mov
test
mov
xor
loope
pop
add
inc
shl
xor
inc
push
or
xor
pop
out
mov
push
or
and
adc
mov
ins
inc
fist
jno
sub
jle
or
bound
xchg
daa
adc
fbstp
movs
pop
fwait
loope
mov
jmp
mov
pop
mov
inc
inc
daa
loope
sbb
push
iret
jnp
sbb
or
call
lods
popf
mov
pushf
or
lea
sbb
and
mov
xor
cdq
jbe
mov
test
mov
outs
sub
push
dec
dec
(bad)
xchg
inc
sub
leave
mov
sub
dec
pop
mov
sub
in
dec
mov
xchg
jo
mov
nop
outs
(bad)
in
lock
or
xchg
inc
xchg
xor
inc
or
ins
inc
bound
sbb
sti
add
packuswb
add
pop
das
add
dec
mov
adc
add
adc
bound
sbb
sub
stos
retf
mov
nop
out
dec
xlat
cmp
mov
jne
cmp
add
loop
sbb
push
test
inc
ds
sub
xor
dec
icebp
mov
add
or
fadd
retf
mov
ss
fs
bound
mov
add
or
cmp
sub
pop
call
mov
mov
pop
adc
cmp
rcl
mov
fdiv
mov
test
cmp
mov
fmul
cmp
sub
adc
test
sti
stos
xor
mov
xlat
jecxz
sub
popa
lds
stos
add
nop
outs
fistp
push
push
dec
pop
inc
sbb
push
inc
xchg
mov
xor
(bad)
icebp
popf
or
xor
in
inc
div
mov
adc
adc
adc
or
cmps
movs
sti
jcxz
aas
and
and
inc
and
add
add
mov
inc
dec
scas
or
hlt
inc
dec
sbb
dec
adc
test
pop
jb
mov
test
loopne
sub
push
pop
adc
(bad)
push
inc
xchg
jnp
dec
xlat
nop
adc
call
add
pop
ret
mov
cs
mov
xor
adc
add
test
shl
mov
test
nop
jl
movs
pop
enter
aaa
iret
push
je
ret
xor
cmp
sub
or
das
movs
add
and
ins
inc
popf
and
sbb
mov
test
sbb
mov
mov
ret
push
sub
add
or
and
das
(bad)
and
das
xor
cmp
or
movs
test
(bad)
pusha
jns
push
cmps
xor
popf
sbb
sub
sub
dec
mov
pop
aam
and
inc
mov
sar
xlat
dec
adc
aam
dec
ret
or
and
pop
sbb
shl
enter
fist
lods
in
mov
inc
sti
sub
call
mov
pop
push
pop
xchg
rcl
adc
je
mov
sbb
jl
mov
push
inc
jmp
dec
mov
popa
add
aad
or
inc
rcr
mov
pop
popa
push
xchg
add
repnz
push
inc
ror
add
and
adc
sub
push
dec
bound
shl
or
add
addr16
inc
dec
xlat
call
fistp
(bad)
and
(bad)
scas
nop
push
loope
and
shr
jnp
fcomp
pop
stos
push
icebp
xchg
adc
push
xor
adc
(bad)
lods
lea
lds
gs
push
cmp
cmp
xor
pop
mov
cmc
lods
push
imul
movsx
mov
sub
scas
push
or
or
sbb
lods
dec
ficom
aam
dec
adc
push
and
and
hlt
sub
push
movs
and
gs
pop
inc
cmp
fsub
aam
cmp
or
dec
fisubr
out
outs
mov
pop
add
or
popa
ins
jle
dec
xor
dec
mov
dec
sbb
sti
sbb
test
inc
rol
shl
xor
dec
jecxz
push
inc
push
stos
xchg
icebp
sbb
fmul
jg
rcl
(bad)
xor
popf
add
sbb
mov
sub
sub
push
enter
sub
mov
iret
movs
aad
or
add
das
int
stos
hlt
sub
jg
enter
cs
inc
adc
scas
push
loop
pop
(bad)
pop
(bad)
in
add
mov
(bad)
out
loopne
mov
inc
jo
add
(bad)
cld
(bad)
and
add
adc
lock
ins
sub
dec
outs
xchg
or
test
sbb
gs
mov
xchg
xor
and
fdiv
xchg
push
les
or
adc
ja
and
pop
xor
xchg
sub
cmp
sbb
sbb
pop
test
loopne
inc
lds
sti
add
cmc
fmul
cmp
pop
enter
outs
cmp
and
scas
mov
ins
loop
nop
cmp
xchg
mov
and
adc
jne
fild
add
cld
fdiv
sti
movs
sar
(bad)
and
and
test
sub
mov
les
icebp
xchg
mov
fistp
hlt
mov
cdq
add
jno
cdq
test
push
cmps
pushf
jmp
rol
xchg
popa
mov
(bad)
adc
push
fsub
dec
or
ins
mov
and
in
repz
retf
fidivr
add
or
test
pop
adc
movs
mov
pop
adc
jne
ret
fisttp
add
or
je
enter
sub
stos
push
xchg
aam
shl
adc
or
jmp
or
fcmovnb
jl
test
inc
mov
dec
sub
(bad)
xor
loop
cmp
jmp
icebp
jmp
push
imul
(bad)
std
inc
mov
cdq
and
mov
adc
jmp
xchg
or
xchg
fadd
enter
lods
in
inc
ret
cmp
lock
jb
out
jge
sub
push
xor
ins
push
hlt
mov
xchg
sbb
pop
jmp
or
frndint
int
imul
or
pusha
push
in
nop
outs
adc
ins
ror
dec
es
mov
xor
adc
mov
sbb
xchg
dec
mov
addr16
mov
cmp
mov
arpl
adc
and
nop
xor
adc
movzx
arpl
sbb
iret
dec
enter
or
or
mov
pop
nop
movs
inc
pop
sub
mov
push
call
aam
sub
push
pop
or
int3
iret
pop
push
and
fwait
dec
das
dec
das
push
dec
dec
jl
and
push
inc
add
aad
loope
push
fild
dec
cmp
push
jmp
lods
cmps
lods
mov
icebp
add
cmp
movs
jmp
push
shr
jnp
xchg
dec
and
inc
push
fisttp
bound
out
outs
rcr
sbb
wbinvd
add
push
pop
iret
pop
add
cli
xor
nop
pop
jmp
aad
and
push
or
cld
adc
xchg
or
push
xor
pop
jnp
mov
push
pop
aaa
add
sub
stos
leave
jbe
sbb
push
jle
jae
add
pop
movs
pusha
js
sbb
inc
fbld
dec
jecxz
pop
lods
loopne
and
jle
dec
mov
cmp
or
push
pop
dec
lahf
sub
pop
pop
aam
pop
lock
pop
or
pop
loope
test
push
mov
clc
je
add
sub
mov
inc
sub
push
mov
fisub
inc
(bad)
das
pop
jnp
fist
cli
daa
jmp
dec
pop
data16
test
and
xchg
std
adc
cld
or
cmps
cmp
push
sub
push
inc
sahf
out
sahf
pop
test
pshufw
sar
push
mov
ss
pop
mov
test
xchg
mov
scas
jmp
jns
add
pop
push
push
cmp
mov
dec
enter
xor
inc
aaa
(bad)
in
jecxz
jecxz
jecxz
shl
push
jge
ja
push
push
inc
lahf
jns
sbb
xchg
xor
push
in
xor
sbb
nop
in
shr
pusha
and
out
dec
xor
call
jnp
rcl
nop
out
add
rol
pop
cmps
dec
or
fisub
jno
pop
in
inc
mov
fld
sti
inc
mov
or
mov
imul
fadd
dec
outs
mov
lds
fcom
mov
imul
shl
nop
dec
lods
xchg
retf
lods
nop
scas
inc
jb
mov
pop
shl
xor
mov
fnstenv
shr
cdq
mov
nop
xchg
jo
jb
add
adc
dec
or
das
sar
outs
loopne
imul
dec
mov
jecxz
add
mov
pop
sbb
sub
dec
data16
xor
or
(bad)
das
les
data16
jne
mov
dec
test
mov
add
stc
stc
shl
ins
data16
je
and
pop
jnp
xor
xlat
test
xor
and
cdq
inc
nop
call
test
sahf
movs
pop
inc
bound
or
pop
sahf
imul
adc
push
mov
or
push
and
and
dec
inc
sbb
add
sti
fnstcw
in
mov
inc
arpl
push
inc
(bad)
call
ss
(bad)
mov
inc
inc
pop
in
mov
and
jmp
lods
push
test
cmp
test
push
lahf
xchg
jmp
adc
jp
ins
fcom
repnz
ror
push
xor
lds
pop
ror
mov
push
lds
dec
push
or
clc
sahf
jmp
or
inc
pop
mov
inc
fnstenv
sub
sbb
int3
in
sbb
jo
sti
adc
sbb
scas
loope
jge
push
inc
add
popf
sbb
or
call
pusha
sub
fcom
push
push
and
adc
mov
inc
pop
ret
icebp
sbb
jbe
data16
jp
mov
iret
mov
jecxz
sbb
(bad)
lea
sbb
cmps
mov
sub
push
add
cdq
pusha
mov
rol
es
test
xchg
sbb
xchg
lea
push
aas
ja
jne
lock
imul
sbb
xor
gs
and
mov
stos
sbb
dec
cmp
es
xchg
adc
xor
rcl
adc
xor
leave
fisttp
dec
aad
cmp
jp
mov
ficom
and
lahf
add
or
pusha
push
sub
adc
ss
xchg
jne
cmp
aas
cmp
cmp
mov
in
jle
shl
lods
lods
test
test
mov
es
sub
push
or
iret
sub
cwde
into
cmc
jb
add
in
test
inc
mov
lea
sub
fnstcw
pop
sbb
and
or
xor
xchg
imul
xchg
sbb
in
(bad)
dec
lods
int3
in
push
xor
enter
popf
popa
shl
ret
ins
dec
rcl
mov
shl
mov
and
pusha
cmp
sub
xchg
mov
xor
mov
xor
sub
xor
mov
gs
adc
aad
mov
adc
arpl
ja
pop
int3
sub
lds
or
outs
aam
pop
mov
sbb
ret
pusha
frstor
loop
pop
push
test
xchg
and
jmp
dec
sub
fist
fiadd
shl
add
mov
adc
adc
movs
ja
dec
jl
fs
shr
jne
sub
jmp
mov
xchg
ss
ins
and
sub
sub
or
(bad)
adc
mov
jns
neg
inc
dec
fnsave
adc
push
mov
sub
out
sbb
dec
in
push
imul
xor
mov
imul
dec
pusha
cs
xor
push
pop
je
je
test
cs
inc
ror
inc
pop
push
mov
pop
pop
mov
xchg
nop
xchg
pop
mov
test
cmp
pop
cmp
loop
xor
dec
dec
inc
(bad)
dec
enter
repz
push
and
dec
push
fdiv
push
aaa
push
(bad)
shl
call
cld
repz
in
ins
pop
leave
(bad)
adc
pop
mov
and
aas
push
jb
cmc
mov
sbb
inc
(bad)
mov
pop
fs
test
aas
push
(bad)
mov
mov
lods
lods
rol
call
xchg
retf
fisub
mov
mov
nop
adc
adc
inc
cwde
sbb
mov
jge
loop
iret
shr
mov
or
adc
mov
xchg
hlt
add
inc
inc
mov
pop
stos
adc
enter
inc
lea
push
iret
or
adc
das
cld
or
push
mov
pop
mov
jmp
inc
or
retf
enter
mov
push
stc
or
dec
inc
or
xor
loope
jmp
outs
mov
sub
inc
nop
dec
xor
ja
pop
test
aas
loope
cmps
repz
ja
add
dec
add
and
pop
pop
and
mov
push
sub
(bad)
loopne
push
retf
(bad)
(bad)
jne
inc
in
sbb
enter
cmp
enter
jo
or
mov
rcl
(bad)
inc
push
loopne
pop
mov
adc
imul
or
cdq
aam
add
cmps
add
mov
sub
adc
retf
or
add
adc
imul
cmp
push
cwde
mov
or
pop
cmp
inc
daa
dec
stc
loopne
lea
mov
adc
dec
jmp
sbb
xlat
or
test
iret
xor
cwde
add
add
rcl
cs
(bad)
cwde
ins
dec
cmp
les
mov
pop
adc
cmps
mov
push
xchg
cmps
cmp
push
jo
xchg
xchg
(bad)
add
(bad)
mov
leave
pop
cmp
mov
cmp
stc
pop
inc
imul
pusha
pop
inc
aam
pusha
adc
push
xchg
push
movs
cmp
nop
push
and
mov
sbb
fimul
sub
xchg
mov
mov
lock
rcl
dec
and
sub
lods
jge
add
xchg
push
jmp
and
inc
mov
mov
fstp
ret
adc
jl
pop
adc
push
xor
scas
imul
lea
dec
mov
fcmovbe
pop
push
lods
and
dec
lods
sub
cmps
cmps
sub
jle
fsubr
adc
xchg
mov
ja
add
cmps
ins
(bad)
mov
movs
pushf
inc
or
inc
sub
fadd
adc
ret
ficom
push
xor
sbb
xor
jnp
icebp
cmp
arpl
ins
fmul
mov
test
sbb
push
mov
gs
pop
sub
push
xchg
sbb
movs
jnp
ror
mov
nop
and
sub
mov
or
das
aad
into
dec
xchg
fwait
pusha
push
push
lea
add
push
outs
mov
mov
add
mov
or
inc
dec
and
dec
shr
mov
add
xchg
xchg
inc
pop
inc
pusha
adc
addr16
adc
xor
adc
test
(bad)
adc
cli
js
mov
dec
pop
ror
and
mov
dec
in
popf
mov
lahf
mov
bound
or
aad
pop
fucomp
pop
cmp
xor
push
mov
cmp
sub
out
adc
or
or
ins
and
mov
sub
fiadd
mov
mov
xchg
outs
ror
pop
dec
push
dec
pop
and
push
fs
mov
sbb
pcmpeqd
add
sbb
movs
loope
ins
push
and
and
push
mov
inc
ins
aam
add
fs
xchg
je
stos
popa
jmp
retf
cmp
ret
shl
mov
or
mov
movs
sbb
xor
pop
test
jae
movs
xor
inc
or
cmc
jg
and
adc
fsub
push
mov
pop
mov
pop
sbb
shl
mov
mov
or
(bad)
mov
push
mov
fwait
loope
add
loopne
xlat
shl
mov
bound
movs
imul
inc
test
rol
add
inc
add
out
inc
push
test
dec
and
pop
mov
mov
jnp
adc
adc
in
xor
or
mov
in
inc
push
xor
and
das
or
es
or
adc
dec
in
daa
mov
pop
pop
jo
push
pusha
xor
add
lods
imul
ret
mov
jb
add
sbb
adc
hlt
gs
sub
cdq
jmp
cmps
rcr
shl
pop
and
or
int3
cmp
dec
push
inc
sub
xchg
add
sbb
sbb
xchg
adc
mov
mov
dec
mov
add
je
adc
sbb
jle
sub
pusha
cdq
or
add
cmps
sub
add
add
add
neg
cmp
inc
push
push
push
or
(bad)
push
cmps
xchg
cdq
movs
std
add
icebp
mov
ins
pop
xchg
cmc
and
dec
adc
mov
mov
cmp
jne
sbb
ins
mov
lea
cld
add
dec
sbb
jmp
pop
and
mov
pop
inc
rol
out
ret
xlat
out
ret
push
adc
jbe
cmp
mov
push
sbb
cmps
bnd
enter
arpl
add
scas
push
push
not
add
pop
pop
xor
imul
xor
neg
inc
mov
mov
arpl
test
mov
jmp
and
cmp
cs
inc
add
push
lock
test
mov
inc
sbb
mov
mov
addr16
and
jl
cdq
(bad)
jmp
repz
jge
sub
enter
push
cmp
xor
push
ret
sbb
(bad)
pop
cli
mov
je
mov
and
xor
mov
pushf
out
ins
das
or
mov
dec
jl
imul
shl
xchg
jmp
cmp
mov
push
inc
or
jns
or
xchg
cmp
jp
lods
cmp
mov
inc
push
cdq
mov
jmp
loopne
neg
and
and
xchg
add
sub
mov
and
inc
dec
inc
and
enter
test
movs
ins
jno
inc
and
call
loopne
push
sub
in
test
inc
gs
cwde
rcl
or
xchg
add
je
cmps
nop
dec
in
mov
fwait
xchg
pusha
dec
lods
retf
xor
cld
xchg
xor
xchg
cld
mov
scas
in
pop
or
dec
rol
mov
xchg
pop
sbb
mov
jo
inc
xchg
inc
sti
or
cmps
dec
cwde
int
adc
jnp
push
std
and
add
je
mov
rcl
push
xor
and
les
push
or
(bad)
jb
(bad)
mov
sbb
cmp
ror
ins
xor
dec
movs
push
repz
jne
or
xor
sbb
jge
xlat
push
xchg
adc
cmps
or
inc
cmps
jnp
stos
mov
mov
xor
or
test
push
adc
test
outs
cwde
pop
mov
push
lods
pop
pop
cwde
xor
das
dec
mov
mov
dec
ret
sbb
test
push
rol
gs
adc
scas
pop
daa
pop
cs
add
movs
mov
inc
mov
lods
outs
es
clc
cs
jns
data16
cmp
adc
stos
add
aam
inc
xchg
mov
ins
es
shr
xchg
xor
xor
jno
retf
xchg
pusha
aam
dec
xchg
cmps
lock
cmp
enter
shl
imul
jmp
fld
and
or
adc
aaa
gs
jmp
cmp
lock
nop
faddp
enter
ins
xlat
ror
add
ins
fwait
mov
call
cmp
imul
sub
push
and
ins
mov
sub
fistp
rcl
adc
inc
or
xchg
in
repnz
loop
sbb
or
inc
enter
push
or
or
lahf
in
movs
lods
sub
pop
mov
add
jbe
add
xor
data16
retf
dec
mov
call
mov
nop
pop
sub
xchg
(bad)
fisubr
dec
sub
xchg
cs
adc
or
cli
hlt
mov
or
dec
jp
dec
inc
fsubr
fmul
or
loopne
lock
adc
(bad)
and
fdiv
sub
or
inc
adc
shl
jmp
jb
in
push
cld
push
or
or
cmp
rsqrtps
les
stos
popa
adc
push
adc
xor
cld
idiv
or
push
dec
pop
les
mov
xchg
jecxz
jae
xchg
sub
retf
paddd
push
adc
and
fiadd
(bad)
sbb
pushf
push
sbb
push
push
out
push
cmps
xchg
and
adc
and
adc
mov
mov
inc
dec
or
add
imul
dec
jnp
and
ins
cmp
push
es
mov
mov
inc
fdiv
or
push
pop
hlt
cdq
adc
sub
das
push
lods
pop
jns
jo
dec
sbb
mov
je
jge
pop
mov
dec
add
repnz
push
and
push
je
mov
and
clc
sub
aam
hlt
mov
dec
or
and
mov
pop
sbb
das
add
xchg
add
int
mov
movs
clc
jns
or
add
test
add
je
rol
jecxz
idiv
lock
dec
loope
pop
adc
push
push
shl
sbb
xor
push
xchg
jecxz
push
inc
cdq
lea
adc
lea
push
cmp
(bad)
das
mov
jl
sbb
out
xor
aaa
daa
data16
jb
sub
adc
and
jecxz
repz
data16
adc
dec
sbb
xchg
dec
mov
mov
add
fmul
and
add
or
sbb
cmp
arpl
push
das
js
fmul
and
pop
pop
xchg
data16
add
add
test
cmp
sub
sbb
scas
xor
outs
mov
dec
and
and
sub
push
inc
cmps
mov
adc
test
cmps
mov
cmp
shl
mov
(bad)
jg
test
cmp
pop
pop
movs
xor
fs
pop
(bad)
call
mov
push
(bad)
out
push
xchg
push
cmp
fs
push
lock
repz
sar
adc
add
and
mov
xor
fisttp
ds
repnz
loop
jnp
movs
clc
into
add
jnp
or
and
mov
in
push
jne
cmp
cmp
imul
and
sar
sub
retf
cmps
fst
cwde
inc
jmp
adc
(bad)
jmp
jae
fisubr
pop
repnz
push
xchg
les
test
pop
jmp
nop
outs
in
or
popw
pusha
mov
mov
xor
nop
lods
push
add
fild
sub
add
inc
jb
sar
sub
add
cmc
sub
inc
jo
jae
mov
mov
and
mov
imul
cmp
adc
in
nop
and
rcr
std
test
mov
in
jae
cmc
and
xor
and
jp
(bad)
mov
pop
stc
daa
pop
dec
cmp
sar
ret
jo
push
mov
add
xchg
stos
call
mov
sub
jnp
sbb
hlt
(bad)
jmp
js
sub
or
jbe
cdq
push
push
das
arpl
rol
add
aaa
mov
stc
mov
jge
adc
call
std
jno
aas
add
ds
mov
popa
ret
arpl
xchg
int
daa
or
mov
cmp
sbb
out
jg
fist
inc
mov
fsubr
and
clc
clc
movs
xchg
inc
rol
inc
xor
and
iret
imul
aam
loopne
loope
sbb
push
ins
inc
fimul
or
sahf
test
cmp
test
pop
cdq
mov
into
sbb
rcr
xchg
pop
enter
aad
fadd
xchg
dec
jmp
rol
ret
xchg
mov
or
jne
or
or
jnp
in
lds
jno
jg
je
leave
mov
mov
and
push
jns
sbb
rol
add
pop
xchg
inc
ficomp
sbb
aas
inc
js
popa
retf
mov
out
aas
rcl
adc
test
sbb
in
pop
enter
pop
xor
ror
adc
jle
push
push
xchg
in
push
push
sbb
shl
sbb
sub
sbb
aad
sbb
inc
sbb
retf
push
adc
fmul
loope
mov
add
mov
dec
pop
mov
iret
jge
pushf
add
add
add
mov
lock
iret
pop
and
clc
inc
icebp
push
add
sbb
addr16
nop
sub
loopne
and
sbb
pop
and
scas
jge
jg
push
jnp
push
push
push
pushf
push
push
pop
or
ins
arpl
inc
call
lods
add
mov
mov
or
push
ins
xchg
push
aad
sbb
xor
sub
imul
dec
rol
sti
cmp
rcl
add
cmp
or
retf
loope
imul
mov
inc
xlat
stos
mov
inc
dec
jne
popf
mov
adc
adc
mov
jp
ret
(bad)
add
sbb
xor
out
mov
into
xor
icebp
(bad)
and
inc
pop
add
push
sub
xchg
push
mul
cmps
and
push
and
and
ss
adc
adc
push
loopne
or
test
loope
je
imul
fincstp
mov
pushf
in
mov
ins
in
and
adc
fadd
int3
push
fld
xchg
aad
and
cmps
ds
adc
movs
or
ds
int3
sti
add
test
add
add
and
out
mov
mov
cmp
popa
xchg
push
add
imul
(bad)
mov
mov
cmps
imul
inc
repz
stc
and
cwde
(bad)
pusha
push
stc
jo
lock
add
pushf
adc
and
cwde
cwde
xchg
xchg
add
mov
mov
mov
jl
dec
cmp
xor
xor
aad
and
popa
fs
mov
daa
daa
ss
and
ficomp
sub
arpl
addr16
pop
imul
test
repnz
loop
cwde
or
xchg
bound
ja
inc
ror
push
mov
or
and
or
mov
(bad)
aaa
pushf
dec
dec
stos
out
cmc
hlt
adc
in
mov
or
adc
ret
test
in
and
jns
and
xchg
popa
rcl
sub
add
stc
mov
xor
mov
imul
or
movs
pop
aaa
out
add
and
dec
adc
jmp
inc
sar
ficom
push
xor
adc
pusha
sub
mov
push
mov
pop
jmp
sbb
ret
pop
pusha
in
and
movs
xchg
mov
jo
xchg
or
test
rcr
cs
retf
(bad)
cmp
test
add
mov
pop
pop
sub
jle
and
adc
jmp
push
mov
inc
pop
jo
in
outs
mov
push
mov
cld
adc
dec
jg
inc
pop
sub
sub
inc
pop
ret
hlt
ins
(bad)
loopne
and
or
mov
loope
jl
and
dec
push
add
movs
jne
in
ret
adc
(bad)
aas
push
add
or
jmp
sub
dec
push
dec
push
outs
add
cdq
(bad)
or
mov
jmp
enter
sub
pop
(bad)
rcr
ror
sub
adc
out
mov
leave
inc
dec
aam
mov
cmp
dec
mov
mov
out
movs
retf
xor
mov
out
outs
cmp
xchg
push
mov
test
and
sub
and
push
mov
push
cmps
push
push
lock
jb
sbb
int3
sbb
jmp
mov
cmp
out
xchg
mov
add
and
xor
push
sbb
add
inc
inc
pusha
add
and
das
les
test
leave
mov
mov
repz
repnz
sub
push
dec
sbb
sbb
cmc
sbb
jne
loope
and
mov
test
aas
cmc
ds
ret
sub
fadd
dec
inc
and
test
dec
ja
lds
push
push
fisubr
ret
fcom
sub
pop
add
and
push
pop
xor
sbb
sahf
inc
test
arpl
dec
and
add
loope
pop
shl
in
push
aam
pusha
pop
sbb
lea
xor
jae
gs
mov
pop
xor
enter
je
sub
clc
jge
sbb
cmp
mov
dec
je
mov
and
adc
or
pop
rcr
add
fisub
ins
add
add
xor
and
mov
cmp
dec
mov
jbe
inc
sub
xchg
fadd
lock
jmp
addr16
add
xor
add
xchg
or
or
inc
pop
and
mov
sbb
adc
pusha
test
push
push
stos
inc
test
inc
ds
push
sub
push
add
mov
add
xor
hlt
pop
lea
(bad)
or
push
mov
imul
add
pop
mov
das
pushf
cs
mov
sbb
rol
xchg
push
rsm
sbb
std
enter
xor
neg
inc
es
mov
push
mov
enter
popf
das
pop
enter
cmps
sbb
xor
and
inc
fld
add
in
xor
or
inc
popa
js
push
mov
outs
mov
push
aaa
sub
inc
or
xor
cmp
push
sar
inc
aam
sbb
lahf
xor
push
or
inc
adc
xor
sub
dec
fsub
jecxz
dec
or
xor
pop
hlt
and
(bad)
jl
jnp
jmp
mov
fistp
ins
adc
dec
arpl
bound
jo
dec
ds
outs
xor
xor
mov
inc
push
lea
jle
pop
mov
cs
in
jge
cmps
in
xchg
fs
cmp
adc
mov
fmul
xchg
lea
adc
sti
mov
sub
xor
push
add
outs
sub
or
loopne
pusha
aas
xor
icebp
adc
loopne
mov
outs
lock
jmp
imul
push
aaa
or
cwde
cmp
xchg
mov
cmps
scas
mov
jbe
and
push
dec
sub
and
sbb
jbe
adc
rol
cs
mov
in
mov
call
or
xlat
sbb
xlat
fnsave
lods
mov
mov
fsub
xor
mov
cmp
xor
adc
ins
sub
aam
ins
call
outs
xchg
sbb
xor
adc
call
mov
push
xchg
fwait
xor
push
xor
call
aaa
inc
pop
call
mov
call
hlt
test
mov
ins
dec
popf
stos
or
xlat
jo
add
mov
imul
fist
cmps
and
pop
cmp
xchg
xchg
popa
mov
aam
les
mov
xchg
fld
scas
jo
cmps
dec
int
sub
shr
adc
cmps
inc
lahf
inc
inc
cmp
pop
and
add
or
add
lea
nop
and
inc
lock
xchg
ret
sbb
mov
pusha
jb
xor
sub
not
je
adc
adc
inc
sbb
stos
jnp
sub
add
jne
outs
shl
je
xor
jne
sub
sub
pop
add
add
out
adc
and
ins
jg
push
xor
and
jne
pusha
je
sbb
je
cdq
test
adc
je
shl
(bad)
adc
adc
outs
arpl
add
mov
mov
add
xchg
cmps
or
mov
(bad)
xor
dec
pop
int
or
inc
fild
daa
inc
es
push
adc
push
adc
in
push
xchg
ins
lahf
dec
cmp
jns
mov
std
aaa
xor
cmp
cmp
xchg
or
inc
mov
push
data16
pop
jae
nop
je
and
adc
js
sub
inc
nop
push
xchg
and
pop
test
jno
or
into
int3
les
xchg
mov
aaa
jecxz
aaa
scas
adc
fidivr
and
int3
mov
loopne
mov
das
mov
xchg
dec
adc
push
enter
shr
loope
cmc
mov
jne
in
mov
mov
add
pusha
mov
pop
js
inc
push
fcmovnbe
sahf
xchg
sahf
add
mov
push
or
addr16
sar
push
mov
adc
xchg
rcr
inc
ret
dec
mov
push
dec
cs
mov
in
sbb
adc
cmp
jne
sub
aad
or
or
and
(bad)
xchg
adc
add
xchg
test
jmp
lds
jnp
sub
mov
xor
jecxz
test
adc
cmp
mov
lea
aam
push
cmp
add
mov
imul
movs
jne
mov
inc
pushf
loop
pop
call
out
lahf
das
xchg
cwde
ss
inc
sahf
int3
push
enter
in
mov
test
mov
jmp
mov
mov
adc
jae
push
mov
pop
push
icebp
or
jl
enter
sbb
and
inc
inc
call
xchg
or
in
pop
shl
sar
outs
add
aaa
adc
fsubr
cmc
test
rol
in
and
add
scas
adc
or
sub
sbb
sbb
pusha
pop
daa
jb
or
call
pop
in
cmp
push
push
pusha
fs
push
je
ins
retf
add
loopne
enter
jbe
add
sbb
inc
scas
or
mov
pop
daa
push
jo
jae
xor
jl
adc
add
jno
pop
sub
dec
and
xor
add
leave
mov
out
cwde
stos
sub
sub
and
call
sbb
mov
add
mov
push
ja
aas
sub
les
adc
out
test
add
nop
jo
push
and
rol
or
dec
or
nop
(bad)
jbe
sub
or
xchg
pop
outs
add
or
stc
frstor
add
or
push
bound
add
or
pop
adc
test
pop
hlt
imul
pop
scas
sub
inc
jge
inc
mov
and
pop
add
add
add
scas
inc
loop
xchg
nop
cmp
mov
scas
inc
and
inc
inc
xchg
pop
or
inc
push
inc
xchg
sub
dec
aas
fld
inc
imul
push
push
test
push
pusha
popa
adc
sub
movntps
pusha
and
outs
mov
iret
xor
xor
rcl
das
and
inc
sbb
das
arpl
push
in
adc
adc
dec
shl
cwde
sub
lds
fs
xchg
out
aas
cmp
cmp
push
loopne
imul
cmp
repnz
xor
inc
inc
shl
fst
dec
ins
or
das
xchg
call
or
fist
lahf
mov
outs
inc
inc
push
ins
xchg
or
pop
retf
inc
inc
fld
push
ins
rcr
adc
lods
jbe
ss
adc
add
mov
xor
ficom
outs
arpl
push
ins
and
push
outs
nop
sbb
xor
jae
push
pop
adc
or
nop
sub
pop
jnp
mov
push
hlt
lods
bound
push
add
js
xchg
sbb
dec
daa
lahf
pop
or
push
inc
push
stos
aaa
outs
sub
dec
or
bound
je
ins
push
fild
pop
or
or
adc
xor
out
xchg
mov
pop
mov
inc
cmp
cmps
nop
push
adc
inc
adc
test
dec
mov
out
pop
xchg
cs
int3
outs
or
aad
cmps
xchg
pop
loopne
adc
dec
fdivr
test
xchg
scas
cmps
push
inc
xchg
push
popa
inc
arpl
pop
inc
aaa
cmp
ds
and
cmp
adc
(bad)
xchg
xchg
jl
push
sbb
mov
or
leave
ins
dec
sub
out
push
popa
pop
mov
mov
inc
fmul
jbe
scas
(bad)
ins
jnp
imul
das
and
in
mov
aas
dec
jnp
cs
daa
or
daa
and
jp
jmp
add
and
nop
add
mov
fisttp
shr
es
push
jo
vxorps
outs
and
ret
aam
dec
add
jo
inc
xchg
mov
dec
outs
mov
adc
push
adc
mov
push
outs
or
nop
or
push
xchg
sub
in
mov
add
push
iret
push
add
xchg
pop
push
(bad)
adc
movs
lds
lods
or
cdq
cs
icebp
popf
fisttp
inc
and
sub
das
lea
mov
xchg
sub
jg
push
add
pop
or
cmp
and
sub
(bad)
jnp
add
lds
(bad)
outs
sub
add
adc
add
cmp
add
and
adc
inc
adc
shr
lahf
and
mov
push
das
add
movs
add
add
or
ffree
test
sbb
adc
ins
jo
je
outs
adc
jmp
(bad)
mov
xchg
sub
xlat
dec
push
xor
jae
push
sub
lahf
fs
rcr
or
dec
sahf
adc
sub
sub
test
iret
test
adc
sub
xor
test
(bad)
aaa
add
pop
lock
xor
imul
pop
adc
and
mov
push
fldcw
xlat
xchg
push
ficom
or
imul
pusha
jg
xchg
pusha
jo
mov
addr16
xor
scas
popa
pop
jg
imul
cmps
hlt
mov
enter
pop
int3
add
add
cs
or
mov
pop
test
inc
mov
mov
mov
xchg
scas
jmp
(bad)
push
stc
add
add
je
add
sub
or
push
enter
retf
in
inc
dec
(bad)
cmp
popa
and
pop
and
dec
sbb
ror
push
xchg
or
inc
lods
push
sahf
add
or
pusha
aam
ret
rcr
addr16
inc
ins
dec
push
adc
add
nop
push
(bad)
dec
push
mov
and
shl
into
inc
add
or
inc
jb
or
jmp
daa
addr16
jne
repz
dec
sbb
test
and
sahf
cmp
out
mov
push
mov
cli
aam
inc
or
bound
inc
dec
(bad)
mov
imul
jne
jns
push
or
xor
xchg
in
inc
loop
lock
xor
clc
retf
xchg
push
and
pop
add
xor
or
retf
inc
adc
push
adc
sbb
sbb
and
sub
and
outs
add
jle
and
sbb
lods
cmp
xchg
shl
leave
leave
nop
pushf
cmp
or
inc
cwde
nop
pushf
or
inc
pushf
dec
pushf
or
leave
mov
leave
leave
nop
test
lods
leave
leave
nop
pushf
pop
mov
leave
nop
pushf
or
pusha
mov
fs
leave
shr
leave
leave
nop
enter
leave
nop
pushf
js
jl
nop
pushf
or
sbb
pushf
or
test
mov
in
xchg
je
call
leave
ror
xchg
lock
xor
mov
xchg
movs
cld
test
or
enter
add
inc
sbb
adc
or
mov
or
xor
les
mov
adc
arpl
nop
pushf
or
shl
enter
leave
and
and
or
leave
nop
sub
sub
xor
fadd
xor
xor
inc
xor
cmp
dec
xchg
xor
xchg
cmp
fcmove
inc
in
xor
xchg
xchg
and
dec
xchg
xchg
and
clc
push
cld
leave
test
push
add
nop
pushf
or
add
or
adc
leave
nop
push
push
jo
xchg
xchg
mov
xor
cmp
xchg
and
sub
sbb
xor
xchg
xchg
and
and
cmp
sbb
or
inc
arpl
xchg
mov
xchg
xchg
and
and
pop
mov
xchg
and
sbb
xchg
fs
xchg
shr
xchg
xchg
and
je
xchg
xchg
and
js
jl
and
sbb
sbb
cmp
xchg
test
mov
xchg
fs
in
xchg
fs
call
dec
dec
cwde
lock
fs
dec
xchg
mov
in
cld
test
inc
xor
add
mov
arpl
mov
or
fs
dec
mov
dec
xchg
sbb
xchg
les
dec
xchg
fs
and
xchg
fs
sub
sub
fs
dec
fdiv
fsub
xchg
cmp
xchg
in
call
inc
in
inc
lock
fs
dec
hlt
loop
adc
and
nop
sub
cmps
or
ret
cmp
call
adc
movs
mov
into
push
adc
push
imul
pop
data16
dec
mov
out
inc
pusha
dec
call
or
shr
dec
fs
and
push
hlt
inc
inc
sldt
ret
push
mov
xor
lea
sub
xchg
and
outs
in
loope
and
push
adc
test
or
xchg
fcomp
inc
mov
repz
in
mov
(bad)
and
xor
push
test
dec
ror
test
add
lods
adc
inc
(bad)
and
mov
dec
inc
inc
jnp
xchg
cmp
pop
test
rcr
jg
jns
dec
fdiv
xor
test
push
shl
push
jno
cmp
or
nop
mov
sub
jo
lods
adc
ja
movs
ss
inc
movs
jnp
xchg
inc
sahf
dec
in
fsub
loop
lock
sbb
xchg
(bad)
mov
shl
push
fcmovnb
add
and
and
push
test
sub
inc
mov
adc
jl
push
and
cmp
jne
lods
aam
fimul
aam
push
out
cmps
add
dec
mov
stc
xchg
loopne
cmps
inc
xchg
(bad)
(bad)
dec
jo
sbb
cmp
mov
adc
mov
jno
dec
stos
push
inc
or
les
xchg
xchg
aam
mov
sub
ja
lock
clc
(bad)
das
mov
mov
aas
push
xor
test
or
add
xchg
and
dec
scas
mov
das
das
das
das
lods
leave
mov
gs
shl
xchg
les
cmp
test
retf
push
imul
push
or
shr
mov
addr16
std
sbb
jge
test
mov
push
sub
inc
repz
test
push
mov
xchg
add
cli
dec
mov
fbld
dec
neg
inc
push
add
add
pop
cmp
cmp
pop
or
rol
scas
pop
or
fs
mov
mov
inc
jb
les
cmp
jns
test
fmul
enter
pusha
and
int3
call
loopne
sub
ds
xor
pop
push
rol
add
inc
add
ss
inc
xchg
(bad)
jg
push
gs
inc
pop
mov
adc
jp
jne
pop
aam
cmp
sti
sar
aas
lahf
mov
jo
adc
mov
sbb
dec
mov
data16
popa
fs
add
add
sbb
out
addr16
sub
sub
outs
pop
mov
sbb
or
inc
lock
push
and
cmps
push
push
shr
out
add
jmp
or
mov
mov
in
push
gs
sbb
add
dec
lock
test
aam
ja
loopne
xor
call
cmp
mov
aad
inc
mov
pop
add
in
enter
push
push
push
push
xor
bswap
and
jo
pop
push
or
test
mov
movs
lock
or
or
or
sub
movshdup
add
xchg
mov
inc
ror
daa
inc
cmps
jl
call
jmp
rcr
loopne
ss
xchg
sbb
imul
jle
test
cdq
nop
retf
ror
test
fsub
popa
cmp
ret
xor
adc
and
pusha
mov
lea
sub
or
(bad)
jg
aad
dec
mov
sahf
in
adc
das
inc
es
dec
inc
inc
inc
xchg
je
adc
push
lea
lea
lods
and
adc
adc
push
psraw
push
push
sbb
cs
mov
dec
add
cmp
jbe
jne
nop
jo
push
imul
pop
iret
add
enter
lock
push
push
sub
ds
(bad)
call
add
popa
popa
adc
fimul
xchg
or
inc
cmps
cmp
daa
inc
jmp
outs
push
lock
and
and
std
push
sub
idiv
add
cld
or
pop
lock
mov
and
fwait
mov
outs
and
hlt
mov
push
ins
std
inc
xchg
pop
mov
dec
ins
mov
cmp
ss
outs
mov
stos
adc
pop
or
stos
push
push
shr
lahf
sub
lods
push
je
sub
jmp
repz
xlat
sbb
dec
adc
dec
cmp
out
std
and
loopne
mov
xor
retf
movs
push
je
sub
cmp
or
fst
push
jns
mov
out
or
les
cmp
adc
push
popa
inc
scas
push
fs
jb
add
push
fmul
fdivr
mov
fnstsw
mov
sti
adc
pop
sar
mov
push
outs
jp
pusha
rcr
jno
push
mov
xor
push
or
cmp
mov
cmps
clc
mov
popf
inc
(bad)
lock
or
and
or
add
push
adc
aaa
dec
pusha
push
lds
icebp
rcr
dec
dec
pop
xchg
add
fmul
dec
shl
pop
out
inc
jmp
mov
xchg
or
adc
sub
es
mov
adc
jae
mov
jae
and
movs
or
jo
xor
outs
dec
popa
loopne
mov
mov
lock
jl
mov
inc
push
sbb
scas
(bad)
or
and
test
and
xchg
mov
rol
sbb
ret
pop
sahf
xchg
fiadd
shl
loope
xchg
adc
ja
xchg
scas
mov
pop
and
sub
xchg
lea
ins
mov
sub
mov
add
cmp
ficomp
inc
inc
sahf
inc
adc
xchg
in
jmp
stos
sub
and
es
add
mov
ins
cld
add
mov
adc
mov
pop
adc
cmp
add
sbb
pop
mov
dec
or
dec
xor
or
sbb
sti
ins
add
adc
pop
sbb
leave
jb
loopne
push
add
ins
sar
push
lods
mov
rcl
or
jb
dec
cmp
sbb
shl
push
jmp
pop
dec
and
cs
je
sbb
outs
mov
(bad)
in
jb
cmp
daa
adc
xchg
add
and
ja
dec
add
add
jno
sub
fiadd
sbb
fs
sbb
jmp
inc
aaa
pop
sbb
loopne
leave
popf
popa
dec
inc
nop
je
sub
aas
jmp
and
into
cld
adc
jb
add
movs
xor
cmps
xlat
imul
ss
in
jge
int
and
add
fist
jne
xor
jo
outs
sub
popf
cmp
or
push
enter
xchg
adc
lar
mov
cmp
xor
and
sub
or
inc
dec
push
shl
ret
fwait
inc
and
inc
gs
inc
test
xchg
dec
jecxz
inc
pop
sub
push
inc
jo
arpl
mov
data16
outs
push
xor
or
imul
aas
add
sub
fdiv
add
xchg
jge
enter
aas
xor
cmp
adc
sub
xor
sub
pusha
sbb
xchg
lock
xchg
add
adc
test
xor
mov
xchg
adc
pusha
jbe
js
add
inc
out
in
cwde
xor
aaa
dec
dec
mov
inc
and
ja
xchg
xchg
sti
add
push
les
jae
mov
mov
or
in
dec
out
pop
or
lds
or
add
lahf
ins
stc
xor
dec
ds
add
lds
jo
ja
xchg
cld
mov
rcl
xchg
mov
dec
aam
cld
dec
xor
push
pop
sbb
cwde
or
aam
add
out
or
xchg
xchg
imul
adc
leave
xchg
push
mov
mov
les
xor
dec
add
nop
xchg
dec
out
imul
inc
dec
lahf
fdivr
push
mov
jmp
jmp
fsubr
xchg
int
test
scas
xor
inc
cmp
mov
mov
push
dec
add
rol
cmp
lock
and
or
out
jne
ds
jo
mov
aad
ret
adc
jns
dec
push
cmp
jl
jl
sub
pop
ds
add
packssdw
pop
adc
inc
dec
imul
inc
loopne
add
imul
push
test
sbb
ror
jno
repz
or
pop
test
dec
and
or
mov
daa
ror
sub
and
jg
sbb
sub
(bad)
xor
or
and
test
pop
xchg
(bad)
adc
jnp
sub
sbb
call
je
aas
out
mov
in
repnz
hlt
jnp
xchg
add
pusha
jno
outs
call
jmp
mov
pop
dec
mov
add
enter
sub
loopne
nop
iret
and
jo
pop
sub
sub
jno
data16
sub
lods
fsubr
pop
xchg
pop
xchg
jne
sbb
fwait
stc
nop
push
std
sub
cmp
sbb
xor
xchg
nop
call
(bad)
mov
inc
rol
frndint
ins
cmp
and
pop
and
xchg
jle
dec
dec
and
sbb
out
sti
mov
push
fdivr
xor
push
sbb
hlt
pop
jb
mov
or
sbb
out
pop
icebp
mov
loope
add
cmp
mov
and
dec
pop
mov
jg
cmp
add
mov
sti
jns
mov
sbb
mov
and
dec
mov
aaa
fnstcw
xlat
lds
jb
mov
xchg
fs
sbb
push
sub
jae
sbb
jb
mov
sbb
int3
(bad)
and
mov
push
popa
addr16
add
add
add
add
and
inc
test
cmps
lds
xor
shl
pusha
add
cmp
test
xor
repnz
dec
pop
and
add
mov
inc
mov
push
mov
test
adc
mov
mov
push
jb
movs
xor
and
or
inc
inc
or
mov
dec
test
pop
xor
sbb
add
bound
or
inc
add
test
sub
mov
pop
mov
push
in
and
mov
mov
and
jmp
adc
popa
adc
or
call
test
test
je
jno
dec
mov
lahf
sbb
daa
hlt
test
or
mov
daa
mov
int3
and
sub
adc
jne
pop
inc
test
sbb
test
xchg
ins
xchg
dec
adc
adc
pop
dec
stc
scas
es
jae
ins
add
mov
sub
adc
adc
push
leave
pop
xchg
or
inc
or
push
cmp
js
daa
mov
add
jbe
and
adc
jo
and
add
sub
sbb
(bad)
inc
sbb
aad
mov
mov
lds
mov
mov
cmp
(bad)
mov
adc
fcom
add
push
ret
push
jg
mov
aad
and
xor
pop
pop
dec
pop
jg
adc
inc
ins
fs
rcr
movs
add
dec
jecxz
loop
scas
rcl
imul
outs
push
cpuid
outs
or
js
aas
mov
ret
aas
or
mov
mov
inc
es
fisttp
adc
lods
xchg
xor
repnz
dec
(bad)
data16
call
pop
outs
sub
gs
call
dec
cmps
not
adc
test
into
xor
pop
test
xchg
enter
inc
or
sti
pop
pop
or
out
xor
push
mov
stc
adc
pushf
shr
mov
loope
fsubr
push
pop
(bad)
mov
fwait
pop
pop
push
cmp
push
in
sub
nop
jnp
sbb
push
jb
fcom
cmp
dec
outs
fisttp
gs
and
sbb
jbe
adc
dec
inc
sbb
ret
adc
cmp
add
pop
xchg
ret
mov
or
jmp
mov
test
mov
jp
add
shr
or
pop
loopne
or
inc
push
cdq
daa
test
xchg
pusha
push
mov
je
xchg
(bad)
arpl
mov
jp
ficom
push
add
push
fimul
mov
int3
lea
loopne
and
jae
in
add
fadd
cdq
lea
adc
or
xchg
push
mov
dec
xor
test
ja
cli
xor
adc
sbb
fcomp
lods
jae
xor
sub
mov
mov
or
call
inc
add
clc
mov
movs
add
test
sub
pusha
adc
fisttp
sar
(bad)
xchg
cmp
pop
mov
les
lock
pop
pushf
pop
push
pop
push
adc
push
push
sahf
xor
fild
xor
dec
jno
mov
jne
inc
in
cmp
dec
movs
add
aad
xor
sti
lea
or
shl
sub
lock
nop
jmp
xchg
std
(bad)
dec
(bad)
or
push
pop
or
push
push
add
or
or
push
or
push
jg
sbb
jnp
cmps
stc
cmp
sbb
push
adc
push
xchg
in
xor
pop
xchg
in
xchg
test
inc
xchg
cdq
dec
int
mov
shl
loopne
xchg
les
cdq
mov
add
cmp
int3
add
mov
push
and
xchg
push
sbb
nop
ret
and
test
inc
mov
adc
jge
pusha
fmul
(bad)
lock
fnstsw
in
(bad)
js
imul
add
mov
inc
data16
cmp
in
fadd
xor
add
sbb
nop
and
rol
jge
add
fs
loop
mov
push
inc
sbb
loope
mov
mov
rcl
lea
pusha
adc
fimul
pop
or
in
inc
fadd
ins
enter
inc
or
inc
mov
dec
repnz
mov
mov
push
xor
and
push
cdq
push
mov
inc
cmp
jo
push
sub
repz
dec
nop
push
test
movs
dec
and
daa
adc
pusha
add
shl
sahf
or
std
or
rcr
pop
xor
xor
xchg
add
xchg
jno
in
jbe
fstp
and
xor
pop
sysexit
add
xor
inc
sbb
loope
test
jne
jle
adc
and
or
cmp
xlat
sub
rol
sub
je
fld
stos
hlt
mov
mov
ror
pop
daa
mov
push
hlt
adc
pop
inc
push
mov
imul
push
test
test
addr16
xor
cs
jmp
jge
mov
push
cmps
ja
or
iret
inc
(bad)
xchg
adc
add
sbb
sbb
nop
mov
mov
adc
cmps
xor
dec
daa
cmp
adc
adc
push
clc
fs
mov
sub
add
add
or
out
dec
sub
test
jl
iret
stos
les
mov
add
adc
xchg
xchg
call
out
mov
js
jle
aas
fwait
push
xchg
retf
repz
out
pushf
ins
movs
fst
popf
scas
stc
cmp
push
mov
jp
cmp
mov
push
and
mov
and
fwait
add
lods
sub
enter
xor
aaa
in
and
and
pop
(bad)
adc
jae
fild
fld
mov
mov
in
shl
xchg
les
mov
cmp
adc
xchg
data16
jo
jno
xchg
nop
fimul
sub
in
pop
sub
outs
cwde
jp
or
jbe
out
push
or
pop
jo
or
inc
and
movs
movs
ins
or
adc
aad
or
sub
popf
pusha
test
inc
hlt
daa
and
mov
inc
sub
sahf
xchg
mov
inc
mov
dec
dec
cmp
sbb
dec
push
icebp
mov
jge
adc
mov
sub
gs
add
lock
mov
cmp
xor
nop
mov
pop
icebp
jmp
aaa
mov
rol
pop
xchg
mov
mov
cmp
repz
cmp
adc
retf
jns
cmps
stc
add
out
sahf
out
ins
jle
mov
mov
fsubr
cld
or
sbb
push
jnp
into
jae
inc
scas
test
sar
xchg
jnp
rol
inc
shl
lock
and
add
and
inc
and
xchg
and
and
xchg
je
cwde
cmp
enter
and
in
leave
xchg
or
add
xchg
sbb
dec
fs
inc
mov
jl
mov
nop
retf
mov
dec
mov
les
push
call
je
adc
push
cmp
addr16
mov
or
movs
xor
sbb
or
mov
ins
dec
or
sub
xchg
sub
and
add
in
rcl
imul
pop
dec
dec
aas
inc
cmp
inc
or
dec
popa
dec
popa
or
fbld
cmp
mov
inc
push
int
cmps
sub
call
mov
push
adc
and
cmp
push
inc
push
ins
fist
xor
mov
repnz
add
inc
dec
cdq
add
and
or
mov
arpl
push
movs
ret
shl
or
jl
pop
inc
dec
pop
daa
or
loop
xchg
jo
test
or
push
call
mov
dec
test
ret
mov
dec
dec
inc
(bad)
push
in
jmp
push
sub
mov
mov
cmp
dec
je
imul
mov
pop
repz
jns
sub
data16
fwait
or
add
or
adc
add
or
add
or
jb
add
inc
lea
scas
ins
pop
imul
push
sub
iret
jnp
ret
test
out
jns
inc
jae
pop
callw
xchg
test
je
add
sbb
and
xor
jl
or
xchg
push
dec
push
xor
loopne
packssdw
gs
pop
int3
pop
xchg
adc
pop
mov
nop
xor
ins
dec
loopne
loopne
cmp
cld
xor
(bad)
mov
fcomp
aam
mov
dec
aam
sub
pop
out
pushf
sar
cmp
or
mov
lods
movs
int3
scas
and
dec
pop
pop
enter
and
add
adc
inc
mov
or
shr
jl
xchg
push
ins
jno
imul
mov
or
sar
cdq
rcl
push
call
fsubr
call
jmp
push
mov
fmul
inc
mov
imul
loopne
push
mov
jmp
imul
popf
stos
mov
mov
pop
pop
and
(bad)
stos
pop
stos
cmps
lea
push
int
or
jns
sbb
push
ins
ja
sub
dec
add
or
and
dec
cwde
xor
xor
and
and
add
sub
je
mov
adc
xor
xor
or
xchg
fnstsw
mov
add
add
dec
sbb
adc
and
add
xor
pop
add
lods
inc
call
jne
lahf
iret
xchg
pop
xor
fild
retf
adc
sub
in
mov
adc
cmps
hlt
xchg
dec
cmp
add
out
out
mov
mov
jg
jmp
popa
leave
iret
mov
adc
aaa
xor
or
ins
leave
pop
xchg
sbb
and
push
jns
jle
scas
cmp
inc
fmul
jbe
mov
sub
xor
xor
xor
mov
xchg
and
pop
or
mov
daa
es
mov
mov
pop
sub
or
inc
cs
or
add
or
mov
inc
aad
lock
pop
and
or
pop
and
enter
and
and
stos
inc
in
cs
in
imul
(bad)
not
pop
dec
aaa
mov
xchg
jns
fadd
ret
sbb
test
sbb
dec
xor
add
jno
xor
sub
push
mov
int
push
dec
inc
popf
outs
inc
ret
mov
dec
mov
adc
mov
fcomip
mov
sub
adc
mov
and
in
xor
cmp
pop
jae
mov
sub
(bad)
pop
and
push
pop
and
shufps
and
add
loopne
pop
pushf
push
es
cmps
pop
aas
fwait
out
stc
mov
mov
mov
and
and
mov
push
inc
mov
xchg
sbb
ret
sti
push
dec
test
cmp
xchg
inc
dec
std
and
mov
dec
jl
leave
in
(bad)
push
adc
xor
test
cmp
push
mov
das
sbb
bound
mov
add
xor
push
mov
jns
loopne
push
enter
xchg
adc
xchg
mov
inc
jb
cmp
mov
add
mov
push
rcl
in
mov
inc
(bad)
and
retf
or
repnz
dec
mov
jo
mov
js
xor
mov
mov
mov
mov
mov
out
push
(bad)
pusha
or
adc
jno
int
adc
outs
test
dec
in
add
movs
push
inc
jp
sub
repnz
jl
mov
in
movs
mov
stos
or
ja
(bad)
leave
add
hlt
cmp
cmp
sub
mov
retf
dec
and
pop
addr16
mov
mov
add
mov
pushf
inc
xchg
or
nop
push
xor
push
mov
mov
xchg
dec
and
dec
and
or
or
sub
call
aas
xor
lahf
jns
adc
test
push
inc
mov
sub
cmps
clc
or
and
cld
mov
aas
or
push
outs
mov
cmp
cmp
(bad)
adc
cwde
shl
or
sub
xor
and
jge
mov
js
pop
stos
loopne
or
and
mov
adc
or
mov
cmps
aam
ret
or
and
xlat
mov
or
or
sbb
cmc
aas
lods
lahf
mov
jmp
dec
cli
pop
and
jbe
or
inc
loop
sti
nop
inc
int
out
cmp
lahf
movs
test
xchg
fwait
aas
push
xchg
mov
mov
xor
mov
test
push
pop
sbb
mov
cmps
movs
test
ja
push
mov
xchg
mov
pop
jmp
movs
test
or
pop
int
icebp
add
rcl
imul
mov
jnp
call
js
mov
repnz
das
xchg
mov
xor
ins
aaa
jns
aad
lods
add
sbb
test
or
les
inc
movs
sub
ret
xchg
and
mov
xor
mov
sbb
les
adc
in
mov
popa
sbb
sbb
aad
mov
jbe
out
and
add
aad
inc
add
and
push
jge
pop
push
(bad)
push
jb
dec
movs
sbb
cmps
nop
mov
add
push
jno
jns
dec
lods
inc
inc
add
xchg
push
pusha
mov
mov
push
nop
cld
dec
inc
sbb
jns
mov
stos
pop
pop
scas
mov
xor
or
cmps
in
push
pusha
ret
mov
outs
outs
lods
aaa
and
ins
and
add
and
push
shl
xlat
cmps
xchg
xchg
or
in
adc
shl
fistp
shl
sub
repnz
cli
movs
xor
enter
xor
fstp
pop
ror
cmps
ins
add
sar
nop
adc
push
popa
jecxz
addr16
shr
popa
add
movs
sbb
mov
sub
xlat
sbb
mov
rcr
mov
shld
aas
shr
xchg
mov
imul
dec
fcomp
mov
dec
fucomp
or
cmp
dec
fs
jb
cld
or
ret
or
adc
push
inc
es
(bad)
shl
test
enter
js
loopne
xchg
push
mov
cmp
(bad)
in
enter
cmp
push
and
and
mov
or
xchg
inc
inc
cdq
es
push
loope
adc
jmp
xor
movs
shrd
adc
dec
call
push
adc
loopne
pop
sub
xor
or
adc
sbb
(bad)
aaa
cld
retf
gs
pusha
(bad)
test
dec
or
nop
inc
push
cmp
inc
push
cmp
pusha
pop
pop
push
cmp
nop
push
push
dec
dec
cmp
nop
inc
inc
inc
cmp
nop
inc
push
cmp
nop
inc
push
cmp
and
push
cmp
and
push
cmp
nop
adc
or
cmp
nop
inc
add
cld
dec
jb
and
and
and
fadd
ror
enter
and
sar
mov
and
and
cwde
xchg
enter
mov
enter
jl
enter
je
enter
ins
push
jb
pop
pop
xchg
enter
dec
sbb
enter
cmp
enter
xor
enter
sub
and
xchg
and
xchg
enter
or
jb
and
cld
dec
cmp
nop
inc
clc
hlt
lock
nop
inc
push
in
call
frstor
push
js
xchg
ins
adc
call
and
(bad)
jb
and
and
and
mov
sbb
enter
movs
sbb
enter
cwde
jb
and
and
xor
sbb
jl
cdq
xchg
xchg
add
pusha
les
push
push
and
mov
inc
pop
or
and
push
or
shr
mov
mov
or
loop
add
pusha
sbb
push
add
out
ror
dec
out
adc
ds
mov
enter
pushf
push
xor
ss
push
pop
jo
hlt
ss
in
rcr
and
out
out
or
mov
push
out
push
loopne
fwait
jle
mov
loopne
out
jl
adc
cmp
aam
aad
test
mov
fadd
push
int
pop
clc
push
mov
mov
pop
and
dec
(bad)
fbstp
adc
out
push
pop
loopne
push
or
and
(bad)
repz
je
fcomi
scas
pop
mov
push
push
ins
loop
sti
inc
imul
push
and
sbb
data16
dec
lods
or
push
cmp
ror
jge
loopne
inc
mov
mov
and
or
xor
addr16
xor
xor
pop
loop
adc
les
add
mov
sbb
inc
adc
or
sbb
and
inc
and
(bad)
dec
add
mov
push
or
add
adc
inc
fdiv
xchg
cmp
jne
push
add
dec
test
pop
or
add
push
mov
xchg
dec
adc
data16
repz
add
mov
inc
mov
sbb
test
cmp
dec
inc
push
or
arpl
rcr
adc
jmp
mov
add
push
or
sbb
add
push
and
movs
and
or
sub
inc
out
mov
enter
aaa
and
push
cmp
xor
mov
movs
xchg
xor
cli
jge
jmp
push
and
adc
stos
xor
push
pop
std
pop
adc
or
or
xchg
dec
inc
push
dec
sub
xor
dec
push
pop
aaa
clts
jg
stos
dec
loope
inc
add
or
and
or
jb
das
mov
mov
or
movs
and
mov
mov
pop
push
xchg
adc
push
sub
sar
aaa
shr
sbb
jecxz
scas
mov
cmp
adc
cmp
or
sub
pop
es
sub
and
test
push
and
adc
mov
and
aam
inc
enter
paddq
sbb
or
push
pushf
nop
add
mov
dec
push
inc
mov
sbb
sub
test
aad
inc
aad
ret
sub
sahf
mov
push
inc
inc
ja
xor
xor
cmps
mov
jo
les
aaa
push
add
daa
cdq
enter
dec
jl
and
mov
ss
sti
mul
push
imul
xor
movs
jns
push
or
adc
adc
sbb
ss
scas
mov
in
cmp
(bad)
outs
or
imul
or
add
adc
add
or
or
jns
loopne
or
les
out
or
dec
push
stos
xor
ret
div
out
fldenv
data16
sub
inc
stos
inc
add
enter
in
test
lahf
and
(bad)
out
push
xchg
fist
aam
xchg
jbe
aam
or
xchg
xchg
and
sbb
add
and
adc
sar
sbb
or
pop
(bad)
fist
mov
fsub
add
xor
or
fld
and
mov
and
rcl
or
enter
push
fcmovne
mov
outs
add
fstp
call
in
or
mov
mov
sbb
mov
push
jne
nop
or
mov
xchg
sbb
aaa
and
enter
test
cmp
fsub
mov
call
jo
(bad)
pop
movs
nop
or
pushf
pushf
and
pop
jmp
in
clc
cmp
mov
cmp
sbb
and
or
je
add
cmp
xchg
ret
icebp
fdivr
xor
mov
fnstenv
out
mov
jbe
mov
imul
jl
out
push
sbb
jmp
xchg
xchg
out
loope
pusha
cwde
cwde
call
call
lea
in
or
(bad)
jo
and
sbb
bound
ins
enter
pop
nop
mov
xor
add
es
dec
dec
push
jle
inc
xchg
inc
sub
xor
add
test
add
retf
mov
das
ror
shl
outs
or
push
cmps
test
cdq
push
dec
pop
push
jb
test
scas
sub
cmps
push
outs
lahf
or
sub
xor
sub
sub
daa
ret
mov
in
retf
daa
and
sub
cmp
mov
and
jo
test
and
pop
je
jle
sub
(bad)
(bad)
sub
add
repnz
mov
rol
jne
inc
push
popf
into
shl
sbb
in
test
mov
adc
fldcw
push
mov
push
xor
dec
(bad)
cmp
inc
inc
push
rdpmc
(bad)
mov
pushf
add
sbb
in
pusha
inc
cs
add
jo
sahf
or
iret
or
shl
fwait
ror
xor
ret
gs
add
add
xchg
inc
adc
and
movs
adc
movs
fwait
or
push
pop
jp
jb
dec
int3
enter
adc
mov
jmp
xor
jns
push
pop
push
popa
cmp
and
call
mov
sub
inc
daa
lods
retf
push
div
push
movs
jne
aas
pop
pop
fistp
fiadd
push
add
dec
pop
or
xor
sbb
inc
pop
sub
and
pop
nop
test
loopne
or
and
or
mov
sub
pop
inc
fmul
bound
leave
or
jo
imul
loopne
mov
repnz
xchg
(bad)
jle
sbb
lods
mov
data16
push
xor
sub
sub
push
rol
shl
add
or
shl
int
jbe
aas
push
pop
or
mov
push
fcom
push
push
pusha
mov
call
xor
xchg
cmps
in
xchg
and
loop
and
in
rcr
loop
pop
cdq
dec
push
push
xchg
loope
outs
adc
inc
sub
sub
inc
cs
mov
jmp
pop
inc
cdq
daa
popa
cwde
and
cmp
jo
xchg
sub
lds
add
ja
test
(bad)
in
sub
ret
call
in
xchg
jmp
pop
add
in
pop
mov
mov
cmps
test
fistp
or
and
rol
mov
imul
mov
or
cmp
sbb
dec
xlat
fld
push
(bad)
dec
test
(bad)
fadd
movs
test
rol
adc
(bad)
shl
call
arpl
aaa
mov
adc
mov
ins
xchg
sub
sub
mov
xor
popa
dec
int
or
adc
mov
mov
aaa
sub
xchg
cwde
pop
pop
adc
xchg
mov
cmps
inc
xchg
shl
and
enter
in
xchg
les
mov
and
pop
gs
frstor
enter
inc
and
and
adc
adc
mov
stos
mov
rcr
and
out
dec
and
in
lds
or
fadd
mov
dec
(bad)
rcr
mov
mov
xor
pop
inc
(bad)
mov
xor
adc
adc
adc
push
(bad)
jmp
adc
jo
jmp
xor
ss
daa
inc
(bad)
cwde
pop
es
cmp
repnz
pop
dec
in
mov
cmp
gs
call
int3
jnp
in
lods
xchg
inc
cs
mov
push
mov
fsubr
fdivr
or
and
in
add
jl
out
push
clc
repnz
cdq
loopne
dec
adc
sar
and
bswap
in
mov
loopne
push
enter
jb
mov
dec
sbb
xor
les
push
ins
iret
push
cmp
mov
enter
mov
mov
mov
sbb
mov
cmp
repnz
dec
mov
out
lods
mov
lods
sub
dec
inc
dec
push
cmp
cmp
xchg
inc
movs
mov
enter
mov
pop
repnz
mov
(bad)
sbb
and
jl
enter
out
nop
mov
xchg
nop
and
cmp
mov
sbb
scas
inc
repnz
push
and
test
or
or
push
mov
sbb
daa
and
das
adc
movs
dec
add
daa
adc
mov
dec
dec
adc
mov
mov
mov
adc
lea
prefetcht2
push
push
mov
les
and
cmp
cmp
sbb
ss
inc
cmp
xor
add
mov
addr16
inc
add
stos
test
add
iret
fbstp
sub
sub
dec
sub
sub
pop
push
stos
sub
xor
pop
add
adc
das
or
cmp
cmp
mov
mov
aas
push
shl
push
adc
pop
lea
(bad)
pop
adc
push
fs
jae
sub
ins
xor
pop
fstp
mov
imul
and
or
xchg
sub
jmp
pop
aaa
mov
ins
sub
daa
adc
aas
out
in
test
les
adc
cmp
add
sub
outs
or
cwde
iret
cmp
mul
movs
inc
pop
push
out
lea
enter
hlt
pusha
add
outs
pop
gs
(bad)
mov
fiadd
mov
repnz
and
repnz
pop
mov
mov
dec
mov
in
data16
in
mov
dec
xor
mov
pop
sahf
sbb
call
fs
test
xor
loopne
fld
loopne
repz
fs
and
fdiv
cmp
(bad)
es
iret
pushf
aam
sbb
and
mov
in
nop
or
aas
jl
(bad)
leave
int3
xchg
hlt
das
enter
(bad)
hlt
pop
adc
push
outs
sar
sti
push
jge
out
or
cmp
hlt
addr16
int
movs
mov
nop
lods
les
push
pop
dec
xor
dec
clc
push
pop
ror
popf
shr
data16
(bad)
or
mov
ret
dec
add
adc
loope
jo
ror
addr16
inc
js
sub
scas
and
add
test
adc
sbb
add
or
adc
push
push
and
push
pop
mov
push
test
scas
add
or
cmps
ret
and
pop
sbb
adc
sub
pop
pusha
clc
call
daa
daa
cmp
call
adc
mov
ret
sbb
inc
mov
add
or
mov
lahf
mov
push
fnstsw
cmc
inc
test
push
xchg
add
imul
push
add
cmp
test
xchg
adc
cmps
inc
ss
ret
setge
xor
aaa
push
adc
mov
fild
cmp
movs
mov
xchg
sbb
sub
inc
into
lock
neg
addr16
push
and
in
cmp
adc
xor
adc
xor
mov
clc
adc
dec
outs
xor
jl
mov
loopne
stc
pop
test
sbb
push
stc
das
sbb
fs
mov
jp
stc
es
inc
add
pusha
imul
xor
out
pop
add
mov
in
xchg
ja
mov
mov
add
out
cmp
mov
cmp
fsubr
mov
dec
in
in
mov
out
jecxz
(bad)
sti
sub
test
adc
add
dec
mov
loopne
jle
and
sbb
xor
or
inc
xor
xchg
or
daa
xor
lods
add
sahf
push
or
or
xor
ins
and
xchg
dec
bound
push
mov
ins
lahf
repz
std
push
cmp
retf
fwait
ins
ret
add
mov
add
add
add
ss
pop
or
pop
and
cwde
or
cwde
push
popa
inc
jg
sahf
dec
or
jmp
jl
(bad)
push
shr
or
jge
mov
pop
xchg
xchg
xor
movs
add
and
in
(bad)
mov
mov
(bad)
jmp
dec
out
mov
mov
add
sub
or
xchg
in
clc
stos
mov
test
mov
cmps
xchg
push
mov
xchg
loop
movs
fwait
mov
sub
(bad)
mul
in
inc
lock
clc
cmp
add
jmp
or
pop
inc
and
adc
cmp
out
daa
xor
mov
inc
sahf
and
sub
dec
cmp
adc
xchg
iret
add
ins
xor
aaa
sar
jge
sbb
sub
in
test
fdiv
inc
pop
test
add
sbb
jno
add
sub
ins
dec
sub
push
adc
int
or
mov
sbb
lods
xor
push
shl
xadd
pop
sbb
dec
mov
loopne
add
cmp
mov
add
mov
sub
sbb
(bad)
or
mov
or
jle
lods
push
inc
xor
scas
test
fmul
adc
nop
pop
jb
or
add
in
add
xchg
sub
in
lahf
and
movs
mov
mov
inc
or
pushf
stc
dec
push
mov
mov
adc
adc
fild
(bad)
loopne
xchg
sbb
xchg
(bad)
adc
ss
sbb
inc
adc
in
push
aas
nop
nop
mov
push
adc
add
cmps
fidivr
jnp
pusha
adc
adc
mov
dec
gs
test
je
push
sub
or
loopne
push
out
push
pop
and
push
ret
pandn
test
mov
pop
scas
adc
fldpi
xchg
outs
cmp
add
xor
rcl
xor
repnz
mov
aaa
and
jo
ret
adc
sub
sub
push
daa
fild
push
or
cmp
pop
add
jb
fcom
pusha
and
je
mov
add
adc
mov
(bad)
jo
es
push
sti
push
repz
dec
int
push
push
and
stc
out
push
aas
push
jmp
cmp
cmp
mov
push
mov
pop
fs
and
jb
rol
push
repnz
add
add
inc
enter
pop
jns
pushf
jmp
add
out
fcomp
ds
in
add
sub
xor
inc
sub
dec
inc
inc
pop
leave
xor
stos
sbb
hlt
sbb
jne
xlat
mov
push
cmps
adc
(bad)
inc
inc
push
and
and
and
in
loop
fcmovb
sbb
test
pop
inc
sbb
inc
sbb
push
sbb
sbb
dec
dec
inc
mov
pusha
or
xor
sub
add
enter
lock
div
xchg
(bad)
ror
imul
push
xchg
lods
push
sub
sbb
fwait
icebp
dec
leave
scas
jne
fs
push
das
inc
cmp
int3
push
fiadd
pop
or
pop
jecxz
mov
stos
movs
pop
xor
sbb
mov
cmp
sbb
fcomp
shl
sub
cmp
and
pop
add
sar
sub
ins
shr
loope
cdq
je
daa
inc
sbb
and
test
and
push
add
xchg
push
fcomp
push
rcr
sub
and
out
ret
or
mov
jbe
mov
out
mov
push
lock
stos
jo
inc
sub
mov
and
and
push
mov
mov
movs
movs
sbb
push
mov
sbb
pop
and
and
sbb
xchg
sbb
adc
out
and
adc
aad
adc
adc
xor
sbb
ins
add
dec
push
xchg
mov
pop
pmullw
adc
add
and
daa
sbb
xor
inc
(bad)
dec
pop
jae
cmp
es
adc
xor
pushf
or
sbb
jl
or
mov
shr
pop
add
dec
inc
test
mov
xchg
test
daa
xlat
mov
pusha
leave
add
mov
lea
or
push
ret
jmp
jmp
push
xchg
lods
mov
xor
push
sub
and
dec
in
and
add
jmp
and
inc
movs
adc
outs
(bad)
stos
adc
call
push
sbb
jg
dec
jle
or
lock
jae
pop
xchg
adc
sub
or
stos
das
and
idiv
cmp
cmp
adc
cmp
adc
xchg
jbe
jl
(bad)
daa
xchg
mov
outs
inc
ret
and
jns
pop
and
adc
scas
mov
and
and
mov
add
adc
pop
ins
inc
cmp
fist
and
mov
das
mov
pop
jecxz
(bad)
fmul
int
mov
and
cmp
jno
or
out
movs
add
or
adc
cmp
arpl
cwde
neg
push
fld
xor
pop
or
pop
aaa
je
add
or
lahf
adc
dec
lods
add
mov
push
push
pushf
lahf
fstp
and
test
ret
push
xor
or
dec
fwait
add
jns
or
inc
sahf
mov
push
fucomi
xor
pop
int
cmp
or
jo
fbld
mov
adc
(bad)
adc
das
push
sub
cmp
inc
add
daa
hlt
and
mov
js
sub
lds
ja
sub
dec
and
sub
mov
jg
push
pop
ret
dec
ret
and
cmovb
xor
xchg
push
lahf
xchg
and
adc
ins
sub
and
mov
add
adc
jo
mov
or
pop
sub
rcl
xor
add
adc
or
sub
inc
fistp
stos
mov
cmp
adc
cmp
dec
pop
cmps
stos
(bad)
aaa
scas
add
movs
push
or
inc
mov
test
and
xor
jo
das
rcr
inc
stos
xchg
pop
out
pop
pop
add
mov
repz
xchg
icebp
sbb
xor
daa
inc
daa
adc
mov
dec
xchg
pop
aas
pop
or
jecxz
inc
dec
iret
cmp
or
(bad)
in
(bad)
pop
jns
test
int
xlat
push
(bad)
inc
dec
loope
inc
and
inc
pop
(bad)
sub
sub
inc
imul
adc
push
imul
adc
(bad)
xor
and
xor
and
add
inc
lds
push
sbb
out
mov
pop
inc
int3
ret
shl
xchg
sub
lock
aas
leave
ja
xor
sbb
inc
ds
lea
scas
mov
sti
xor
cld
mov
xor
and
mov
mov
dec
movs
push
mov
sbb
cmps
pusha
inc
cs
push
dec
rcl
xor
add
dec
xlat
loope
scas
adc
pop
imul
dec
out
stos
mov
sbb
xchg
mov
xchg
sbb
lahf
add
das
adc
bound
movs
jl
pop
and
cmp
dec
cmp
loop
pop
push
xchg
xor
cmp
aam
add
inc
push
xor
je
mov
xor
rep
push
sbb
push
xlat
mov
or
fidivr
xchg
jge
sub
nop
fld
movs
and
pop
jne
cmp
mov
das
loop
jecxz
mov
das
inc
movs
ss
or
jnp
ins
stos
sbb
jg
and
jge
add
fnstenv
inc
stc
push
adc
aas
pusha
add
dec
loope
xor
mov
imul
enter
sub
test
dec
rol
les
xchg
add
in
mov
pop
movs
xor
sub
inc
sub
xchg
stos
or
xchg
iret
sub
cmps
sub
xor
add
dec
add
xchg
mov
inc
test
xchg
sub
mov
push
cmps
(bad)
in
sub
(bad)
mov
and
scas
or
daa
cmp
pop
mov
les
or
adc
ret
inc
add
or
add
push
es
dec
add
push
xchg
push
lahf
call
pop
mov
sahf
cli
outs
std
pop
or
pusha
popf
add
out
(bad)
lods
mov
(bad)
movs
(bad)
in
iret
pop
pop
mov
fwait
push
(bad)
gs
aad
push
aaa
cwde
mov
packuswb
enter
inc
fisubr
add
jns
sbb
or
or
sub
pop
mov
fcom
xchg
xchg
sub
fbld
inc
ret
push
pushf
js
push
push
sub
ds
add
in
add
mov
jl
mov
pushf
daa
sub
lods
pop
xor
repnz
movs
push
lahf
or
add
mov
push
or
xchg
or
in
or
mov
lock
lahf
movs
shl
inc
push
push
leave
cmp
cmp
pushf
mov
fstp
rcr
push
in
jp
push
jb
aas
cmp
in
push
jb
je
aaa
mov
mov
test
mov
sbb
(bad)
mov
in
xchg
test
xor
and
jecxz
mov
cmp
add
es
or
jns
push
xor
xchg
mov
xchg
aas
es
repnz
xchg
mov
mov
mov
xchg
test
and
or
jno
cmp
jl
adc
inc
inc
icebp
push
xor
jb
loope
pop
pop
les
out
movs
sub
in
lds
jno
in
imul
std
ret
or
rol
push
loop
ins
out
enter
fmul
fs
fs
fs
aaa
jb
sete
outs
or
imul
xchg
icebp
loope
daa
iret
or
inc
xchg
xchg
add
dec
dec
dec
and
dec
inc
and
xchg
inc
jmp
leave
inc
jb
dec
jb
cmp
cwde
jb
in
xor
add
retf
cmp
or
or
sbb
pushf
push
or
adc
fdiv
or
fstp
mov
ret
lods
fisubr
xchg
hlt
push
xor
jo
mov
aad
scas
jge
pop
and
popa
mov
enter
push
jecxz
or
aaa
pop
or
sub
mov
cmp
ja
xor
(bad)
or
pop
popf
inc
cmp
inc
clc
or
popa
xor
or
mov
or
js
dec
inc
push
dec
inc
or
add
xor
cmp
pushf
sbb
popa
jno
mov
dec
adc
push
or
and
xchg
cmp
cdq
imul
xchg
or
scas
inc
sbb
daa
mov
add
push
jl
adc
rol
mov
pushf
cs
and
push
mov
(bad)
movs
cs
call
and
inc
out
or
ins
add
mov
mov
xlat
adc
push
xor
pop
and
movs
or
enter
sub
loop
pop
sub
cmp
add
mov
and
fs
add
or
sub
or
(bad)
sbb
iret
jmp
pop
add
add
add
pop
cwde
je
inc
popa
rol
inc
aaa
and
xchg
jo
push
test
push
je
(bad)
rcl
sbb
sbb
sbb
(bad)
mov
stos
sub
add
rcr
test
mov
or
pop
pop
mov
dec
add
lea
ss
int
call
xor
adc
inc
into
xor
imul
dec
sub
push
adc
movs
mov
mov
je
lea
push
mov
fdivr
test
mov
pushf
clc
push
dec
pushw
mov
jae
mov
jp
aam
in
push
loopne
xor
rcr
push
and
jnp
sti
je
ss
push
add
je
sti
mov
sub
mov
fadd
div
ffree
movs
jl
imul
sub
ins
push
xchg
sub
pop
add
sub
xor
jecxz
cld
call
add
popa
jo
xchg
sub
pop
dec
mov
fsubr
ins
xchg
mov
js
adc
test
iret
mov
int3
pop
daa
out
and
pop
dec
out
call
das
mov
test
je
fisub
mov
adc
out
xlat
mov
push
mov
add
loop
xchg
push
mov
jmp
dec
push
xor
sub
jbe
or
xor
push
inc
xlat
out
pop
ja
xor
sbb
inc
mov
add
push
add
fadd
push
dec
fdiv
cmp
jl
and
(bad)
inc
or
rcl
sti
xor
clc
xchg
ss
xchg
push
lock
inc
hlt
cld
enter
les
dec
mov
xchg
jne
adc
ins
sbb
mov
or
cmp
adc
pop
(bad)
repz
dec
push
jno
ins
pop
sub
inc
cmovge
inc
inc
das
pop
add
add
scas
fcomp
adc
or
inc
outs
adc
xchg
lock
xchg
cvttps2pi
and
cmp
mov
and
add
pop
fwait
imul
je
or
enter
outs
mov
mov
xchg
sub
lock
dec
sub
or
int
and
dec
cs
and
add
adc
pushf
cmp
das
js
test
xor
and
sti
sub
mov
sub
mov
push
dec
movs
sbb
test
(bad)
push
or
xlat
inc
dec
test
and
fiadd
add
fcomp
pop
push
clc
test
lods
jne
ja
sub
jne
inc
jne
adc
xor
xchg
(bad)
cdq
jne
imul
dec
sbb
xchg
mov
iret
dec
add
fdivr
sbb
rcr
jno
into
inc
popa
sub
pop
test
mov
call
cmp
movs
fwait
aas
adc
push
repnz
repz
adc
mov
add
push
sbb
arpl
mov
mov
push
cmp
mov
clc
inc
pop
fs
pop
sti
sbb
or
cmp
or
ret
pop
xor
inc
adc
add
inc
scas
outs
and
jae
inc
or
sbb
add
cmp
pop
push
jle
adc
shl
pusha
sbb
cmp
sbb
mov
in
push
enter
mov
jb
sub
repz
jns
lods
aam
cmps
pop
dec
or
dec
add
aaa
xor
xor
retf
xlat
cmp
pop
aam
and
inc
dec
xchg
cmp
jns
jb
push
sub
cmp
outs
cmp
push
aaa
mov
frstor
dec
add
mov
loope
mov
cmp
jmp
enter
(bad)
int3
movs
in
fucomi
icebp
out
movd
sbb
popa
ds
add
popa
cmc
outs
push
mov
push
clc
push
adc
push
daa
sbb
adc
pop
repz
adc
mov
jno
and
fwait
push
sbb
ror
dec
pop
js
add
icebp
push
cmp
inc
and
repnz
push
js
cmp
inc
or
inc
enter
ins
push
test
sbb
jns
inc
ins
inc
push
push
xor
mov
inc
daa
adc
push
sub
dec
adc
jle
test
pop
pop
mov
push
inc
jecxz
mov
or
out
push
das
push
adc
push
pop
xor
mov
sbb
nop
inc
fs
dec
push
movs
add
mov
cmp
pusha
push
in
jl
mov
pop
mov
std
jmp
aam
mov
add
cdq
adc
sub
adc
cmps
mov
das
pop
dec
add
popa
mov
xor
outs
loope
cmp
ja
mov
add
mov
ja
mov
xor
cmp
and
xor
dec
sub
push
aaa
sub
inc
or
push
test
shl
mov
pop
adc
add
cwde
(bad)
jo
pop
add
xor
(bad)
inc
loop
inc
ja
xor
rcr
inc
dec
mov
adc
test
call
call
sub
push
add
xchg
push
dec
adc
and
adc
sub
loope
fdivr
add
sbb
inc
or
mov
cs
xor
sbb
movs
add
add
out
das
push
mov
aad
fld
add
xor
sbb
and
rol
inc
call
xor
or
inc
repz
js
pop
pop
call
test
mov
pop
cmp
or
pop
add
mov
lds
push
xor
(bad)
data16
cld
push
jmp
inc
mov
in
scas
mov
cmp
jae
adc
rol
push
dec
xor
jmp
ficom
xor
rcr
enter
pop
mov
je
jnp
fdiv
xchg
mov
add
or
iret
scas
call
pop
push
cmp
repz
inc
ss
inc
dec
push
pop
neg
mov
push
mov
add
adc
lahf
jl
ins
jmp
hlt
jmp
cmp
adc
xchg
or
lods
push
inc
push
push
loope
mov
mov
xchg
xor
or
rol
in
jbe
dec
xchg
test
lea
xor
or
mov
or
jb
jae
test
adc
push
cli
fdivr
or
add
les
cmp
imul
imul
cmp
push
mov
data16
rol
inc
and
sub
xor
add
and
add
and
cdq
push
imul
inc
xchg
mov
mov
xchg
ret
mov
mov
inc
scas
mov
cmp
pop
sbb
sbb
mov
shl
mov
cmp
mov
outs
sub
cmp
sub
dec
mov
cdq
and
fidiv
or
pushf
xlat
pushf
loop
adc
pusha
loope
out
and
shl
inc
and
push
sti
cmp
or
sub
and
add
popa
daa
hlt
in
popf
cmp
mov
xchg
lods
daa
jle
push
fwait
ret
aad
jno
(bad)
push
pop
mov
pop
xor
dec
adc
cmps
xor
hlt
loop
pop
mov
mov
sub
pop
ret
and
push
fadd
jo
scas
call
adc
sub
dec
repz
inc
dec
bound
repz
call
cmp
int3
sbb
sbb
xchg
jo
test
sbb
jmp
mov
and
or
aad
or
push
loope
sar
mov
je
inc
cmp
adc
and
add
cwde
popa
jg
cmp
sbb
sbb
enter
lock
push
or
mov
cmp
out
in
ja
xchg
add
cmp
and
push
push
imul
nop
push
cmp
pop
dec
inc
cs
push
dec
mov
in
es
sbb
sub
mov
cmp
push
in
add
int3
cmp
pop
add
push
xor
and
inc
jmp
aaa
cmp
mov
ins
ss
adc
inc
sbb
mov
push
mov
mov
push
push
ret
adc
push
push
inc
inc
cmp
je
add
sub
sbb
ret
pop
pop
int
mov
aaa
sbb
dec
add
in
dec
cwde
inc
inc
xchg
cmp
mov
movs
or
or
mov
outs
pop
push
inc
push
push
push
pop
cmp
or
dec
push
push
add
mov
or
or
fld
out
xor
movs
outs
cmp
or
lods
mov
pop
add
pop
jg
adc
or
jns
cmp
adc
pop
or
(bad)
call
pop
push
cs
aam
xchg
sbb
sub
pop
inc
or
test
push
push
imul
add
push
daa
or
add
xor
xchg
test
les
(bad)
pop
sbb
pop
mov
xchg
pop
sub
lahf
pop
push
xchg
popf
nop
push
rol
push
or
push
mov
sub
jmp
add
lods
sar
cs
js
sub
or
not
std
mov
shr
fs
adc
mov
and
xchg
leave
xchg
xor
ins
xor
xor
mov
or
inc
mov
pusha
sbb
dec
sti
mov
cmp
mov
pusha
pusha
outs
cmp
nop
fild
xor
outs
push
mov
mov
xor
pop
sbb
cs
addr16
pop
ins
scas
inc
inc
fsubr
iret
cmps
and
mov
adc
test
jo
adc
sbb
mov
xor
or
cmp
out
or
loopne
ffreep
aaa
mov
and
adc
inc
jno
jb
in
outs
jno
push
push
sbb
inc
mov
in
test
pop
test
adc
aaa
pop
add
aaa
push
retf
es
jge
dec
push
or
ja
dec
sub
fidiv
add
and
aaa
pop
add
pop
pop
cmp
xor
mov
inc
rcl
jb
in
fcom
lock
ins
fdiv
lock
mov
sbb
clc
out
psubw
cmp
push
or
push
pop
or
jno
mov
shl
je
daa
cmp
xor
xchg
push
imul
ficom
add
pop
aaa
test
add
xchg
sub
ret
inc
outs
add
call
dec
mov
xor
mov
push
xchg
jmp
add
inc
sub
imul
jmp
psrld
repz
dec
inc
mov
xchg
sub
sub
xor
add
ret
mov
nop
idiv
pushf
dec
xchg
add
outs
jne
mov
fucom
je
adc
mov
adc
push
pop
mov
mov
sbb
hlt
jp
inc
stos
sub
xor
movs
shl
push
mov
jl
adc
imul
iret
adc
repnz
call
(bad)
(bad)
mov
movs
pop
out
jns
push
jno
jmp
bound
xchg
movs
push
es
ret
ds
xchg
pop
jmp
imul
mov
addr16
fadd
lods
mov
add
scas
mov
xlat
lods
ins
push
nop
out
pop
jmp
mov
adc
mov
mov
(bad)
mov
inc
fcom
fsubr
or
sub
inc
lea
push
mov
and
pop
pop
and
ret
add
xchg
push
dec
pop
cmp
test
pop
sub
and
cmp
sub
adc
andnps
loope
addr16
pop
ja
mov
cmp
hlt
mov
xchg
sbb
xchg
lea
ficomp
call
sbb
add
push
mov
push
jp
pusha
aas
or
adc
mov
and
pop
inc
xor
test
pop
mov
and
or
fs
das
daa
mov
mov
jp
pop
push
sub
outs
fs
cwde
lods
lods
xor
xchg
pop
loopne
mov
xor
and
(bad)
mov
aam
shl
in
out
pop
nop
sbb
call
call
clc
mov
pop
sub
mov
cmp
or
sbb
pop
mov
test
or
jno
adc
adc
out
or
fild
call
ficom
adc
ins
repz
xchg
or
ror
pop
pop
pop
or
push
pop
adc
and
out
dec
imul
sbb
sub
iret
push
xchg
mov
xchg
push
aas
loopne
xchg
jl
(bad)
shl
adc
mov
mov
cmc
mov
std
push
mov
jl
dec
adc
ror
or
int3
rcl
dec
adc
dec
dec
push
sbb
mov
mov
fs
cld
sub
push
pop
jae
pop
stos
mov
in
arpl
cmp
jo
call
pop
cmp
adc
mov
lds
adc
rcl
push
or
ret
lods
lods
inc
jg
push
leave
xor
add
pop
mov
jb
sub
fwait
gs
sub
adc
movs
adc
iret
dec
cmp
aam
in
push
in
mov
and
jl
imul
outs
aas
ins
scas
ins
pusha
mov
add
daa
mov
cwde
cmp
lock
mov
dec
pop
xchg
rol
fcomp
ds
stc
dec
inc
fsubr
into
push
xchg
mov
in
shl
dec
fs
inc
and
adc
popa
pop
aad
xchg
jbe
mov
and
vmovntps
cdq
adc
mov
in
jne
dec
push
dec
pop
repz
repnz
test
daa
out
ret
ds
ror
ror
scas
push
push
push
test
mov
and
jmp
jne
test
imul
push
lahf
dec
cwde
or
dec
repnz
adc
jns
fcom
jno
dec
xchg
cs
mov
fild
dec
sbb
and
cmp
popa
jecxz
scas
leave
push
or
and
rcl
xchg
pop
call
dec
add
imul
lahf
push
add
retf
push
push
push
sbb
invd
push
cmp
dec
sbb
xchg
jo
rcr
sub
call
dec
(bad)
jmp
sub
ret
dec
lods
mov
scas
or
aaa
jg
in
jno
push
gs
test
cmp
les
das
stos
xor
cmp
sub
cmps
out
and
sub
push
inc
mov
and
out
or
dec
cld
push
jp
pop
mov
pop
or
cmps
sbb
adc
or
jo
ja
push
add
(bad)
ror
stos
std
je
mov
test
xor
mov
sbb
dec
sub
ret
pop
sub
xchg
shl
dec
sgdtd
and
ins
fwait
(bad)
sti
pop
out
jmp
lods
jae
mov
lods
or
fs
xchg
outs
pop
add
push
sbb
xchg
movs
loope
or
sub
push
test
jne
adc
fcmovne
or
xor
pusha
xchg
(bad)
in
add
(bad)
sub
add
sahf
sub
fs
adc
paddsw
dec
gs
imul
adc
hlt
push
mov
mov
adc
lahf
rcl
push
xor
xor
dec
loope
sbb
push
push
push
mov
cmovae
push
push
sbb
mov
data16
push
fistp
inc
jae
cs
inc
or
adc
or
xlat
pop
in
dec
pop
idiv
aaa
mov
inc
mov
ins
iret
adc
cmp
sbb
xor
call
ror
sub
xor
sub
add
(bad)
or
aas
dec
dec
sub
(bad)
icebp
inc
sub
xor
xor
pop
enter
xchg
cmp
sub
push
mov
mov
dec
jmp
imul
adc
sub
and
jecxz
cld
out
dec
add
popf
inc
jle
or
and
pop
sub
and
cmp
je
and
(bad)
outs
dec
(bad)
mov
dec
adc
xchg
fbld
and
out
push
xor
nop
pop
mov
dec
adc
ins
jmp
sti
mov
dec
fwait
ins
adc
mov
sbb
inc
int3
aaa
adc
adc
mov
mul
je
sbb
mul
sub
sbb
xlat
adc
cwde
ins
stos
xchg
cmp
push
jo
out
outs
inc
lods
xchg
mov
cmp
mov
sbb
and
cmps
js
es
pop
xchg
add
leave
xchg
loopne
ret
add
or
cmps
pop
stos
or
movs
add
lods
outs
xor
loope
sbb
mov
movs
xchg
les
sti
daa
sbb
fcomp
movs
das
inc
push
inc
jecxz
mov
and
jl
sbb
jno
stc
fldlg2
xor
pusha
shr
pop
rcl
(bad)
cmp
loop
jne
mov
xchg
pop
mov
jmp
lea
dec
dec
xor
and
pop
outs
xor
sub
loope
push
ds
psraw
fist
mov
xor
in
arpl
add
sub
add
popf
pop
lgs
ins
inc
push
mov
xchg
push
pusha
pop
add
add
and
dec
jbe
inc
jmp
push
dec
jo
xchg
xchg
pop
dec
cwde
dec
mov
inc
or
xchg
inc
call
adc
mov
adc
sahf
mov
je
popa
pop
daa
sbb
jnp
test
dec
jne
adc
aam
push
push
and
bnd
mov
clc
mov
ficom
es
adc
mov
dec
pop
add
movups
sbb
inc
sub
pop
sbb
int3
dec
sbb
or
sub
inc
dec
jo
xor
add
ja
xor
mov
xor
(bad)
lock
xor
lahf
leave
fwait
add
(bad)
adc
push
pop
and
fld
push
dec
or
jl
lds
push
jecxz
sbb
sbb
bound
adc
in
xchg
daa
cmps
movs
enter
je
cmp
push
sbb
push
sbb
sbb
lahf
das
sbb
push
jecxz
add
jl
and
add
push
adc
dec
xor
retf
call
push
ror
cmps
ret
in
rol
in
jne
mov
cmp
sub
int3
movs
mov
je
jne
lods
push
adc
ror
aaa
jnp
cwde
test
push
ja
inc
test
call
xchg
lods
test
and
xor
sbb
loope
xor
or
retf
in
aas
cmps
test
jo
jmp
inc
cwde
pop
test
adc
xchg
or
push
test
push
ins
stos
dec
loopne
dec
add
push
inc
dec
inc
push
push
push
and
inc
pop
add
jne
rol
in
pop
mov
dec
hlt
ss
shl
push
lods
xor
or
push
sub
and
out
sbb
mov
cdq
(bad)
nop
call
mov
mov
mov
or
daa
add
mov
mov
mov
pop
push
sub
mov
mov
cmps
xchg
inc
call
movs
mov
das
ins
jnp
call
mov
jbe
cmp
outs
enter
inc
xchg
or
adc
call
sub
mov
ja
push
mov
pop
jmp
cmp
or
dec
push
cs
cmp
mov
mov
(bad)
push
inc
and
mov
mov
add
push
mov
dec
jno
rol
sbb
mov
dec
jo
mov
mov
mov
or
clc
add
daa
push
pop
sbb
xchg
out
inc
sub
rcl
xchg
pop
xchg
push
pusha
repnz
add
xchg
sub
jbe
ins
and
mov
inc
inc
and
jbe
loope
cmp
je
adc
sub
jbe
fwait
jg
jno
push
cmp
push
out
and
outs
inc
sbb
lods
jbe
mov
dec
mov
sbb
ins
and
add
xchg
and
loope
out
sub
fld
inc
cmp
jnp
xor
stos
mov
cmp
pop
xchg
dec
mov
inc
sub
sub
cmp
mov
sub
xchg
or
xlat
pop
or
sahf
add
daa
shr
nop
inc
loope
dec
aad
test
dec
push
mov
cld
es
add
dec
xor
jae
ds
popa
add
jne
adc
push
xchg
ja
jnp
imul
cmps
cmp
and
push
add
inc
adc
or
scas
addr16
cmp
dec
adc
loope
aam
pop
clc
xchg
popf
and
mov
aaa
fsubr
adc
mov
test
dec
xor
les
add
pop
cmc
or
mov
data16
xchg
inc
dec
or
inc
retf
push
mov
xchg
rol
stos
adc
sub
sbb
mov
pop
sub
or
push
test
lahf
inc
test
cmp
out
mov
push
mov
rol
xor
mov
inc
outs
dec
and
xor
rol
loope
test
outs
mov
das
loope
or
inc
or
push
test
adc
jmp
mov
push
loopne
stos
add
test
adc
mov
or
loopne
mov
or
cdq
shl
pop
jl
sbb
popa
xchg
and
jb
test
add
inc
daa
mov
jo
test
or
je
or
sub
xchg
fldcw
and
inc
or
or
mov
popa
push
lea
xchg
ins
jno
in
js
pushf
in
ja
repz
sbb
xchg
lods
dec
scas
push
jns
sti
cwde
or
add
test
ja
jmp
dec
movs
inc
push
sbb
inc
push
in
and
inc
dec
fwait
loopne
sbb
lahf
mov
xor
cmps
inc
(bad)
in
sbb
and
pop
inc
inc
adc
in
dec
mov
push
pop
or
leave
fisub
outs
jb
cmps
sbb
rcl
push
ret
test
fmul
cwde
mov
inc
cdq
jmp
or
cmps
push
leave
ret
sub
adc
mov
push
jg
es
sub
aas
test
ret
ret
dec
adc
mov
pop
sbb
cwde
call
dec
sub
mov
es
xor
dec
(bad)
sub
pop
sbb
dec
movs
jo
add
inc
xchg
pop
xor
pusha
inc
(bad)
pop
push
push
push
mov
lea
sbb
retf
sbb
dec
jmp
imul
inc
mov
jl
cmp
dec
sbb
sub
inc
fadd
loopne
pop
and
rol
lods
loope
test
xchg
add
sbb
xchg
or
add
mov
ror
or
cdq
dec
jae
inc
jmp
cmc
add
jmp
cmc
es
pop
dec
imul
enter
imul
nop
imul
rol
movs
sbb
and
mov
cmp
retf
test
imul
pusha
mov
test
das
and
add
add
xor
cli
push
es
add
dec
inc
nop
mov
clc
sub
push
cwde
mov
icebp
or
jmp
sub
fwait
das
in
iret
pop
pop
and
sbb
test
int
mov
ret
xor
adc
cmp
mov
imul
or
cmp
scas
lea
jb
outs
lods
stc
test
and
adc
inc
loop
push
pop
mov
loopne
addr16
clc
fnstenv
xchg
pop
mov
pop
xchg
xor
or
adc
je
fistp
add
or
or
or
or
adc
push
jns
out
test
(bad)
int3
aam
jns
out
in
hlt
cld
jns
out
add
or
adc
and
fninit
cdq
(bad)
hlt
or
jbe
adc
loopne
jle
adc
xor
cmps
shr
data16
dec
movs
test
add
inc
sbb
adc
repz
push
add
or
push
push
push
add
test
inc
call
dec
out
xor
sub
sti
out
or
enter
adc
and
lock
or
div
ror
xor
add
adc
(bad)
jg
or
xchg
push
push
or
push
add
adc
add
pop
pop
add
add
or
or
shl
mov
cmp
(bad)
xchg
das
cmp
cmp
test
sahf
out
sahf
data16
in
dec
dec
sbb
xchg
fiadd
sbb
xor
aaa
aaa
cmps
sar
or
add
adc
outs
mov
aas
or
push
and
cmp
(bad)
xchg
arpl
cmp
jl
sbb
in
ss
push
jnp
xlat
push
fadd
jns
ins
icebp
sub
pop
sub
pop
push
dec
rcl
jmp
add
jae
imul
or
iret
sub
mov
push
mov
fs
add
repnz
and
scas
out
lods
add
jl
in
or
cmps
(bad)
ja
cmp
adc
adc
adc
add
sbb
sbb
adc
shl
and
sbb
dec
adc
rol
(bad)
enter
and
xchg
das
sbb
inc
dec
enter
cmp
or
add
add
cmp
popa
cmp
(bad)
(bad)
arpl
cld
out
jbe
and
jmp
adc
push
imul
jb
fld
xchg
outs
sbb
int3
ins
fisub
outs
xchg
adc
adc
call
jo
add
in
push
lea
test
ds
dec
xor
add
fs
adc
sub
int3
clc
cmovb
lahf
add
push
mov
gs
(bad)
aas
adc
adc
adc
jae
es
xor
mov
fs
pop
bound
lods
cmp
and
add
rcr
mov
mov
fldcw
fistp
mov
jmp
cmp
jg
dec
push
not
jo
shl
mov
outs
dec
inc
xchg
in
loopne
jmp
push
test
mul
mov
cmp
outs
push
adc
retf
cmp
add
or
sub
xor
rcl
add
xchg
cmp
loope
(bad)
jo
fild
shr
fs
jbe
mov
add
popf
lea
mov
lea
push
neg
outs
push
(bad)
stos
or
push
js
and
and
fidiv
mov
xchg
retf
dec
daa
jno
fdiv
cmp
inc
fild
scas
stc
clc
push
lock
cmps
inc
xor
mov
rol
inc
loopne
js
adc
pop
or
aam
and
adc
fmul
dec
cmp
data16
push
mov
and
or
int3
jmp
fistp
nop
xchg
int3
rcl
movs
add
mov
jae
mov
mov
jno
mov
or
lar
sbb
or
xchg
movs
pushf
adc
or
or
enter
push
je
fwait
lock
dec
outs
mov
outs
xchg
or
loopne
adc
xchg
out
sub
sar
xlat
sub
mov
fcmovnbe
rcr
inc
dec
rcr
lock
and
lea
enter
and
adc
pop
fcomi
or
inc
fsub
pop
xor
stc
(bad)
dec
fstp
adc
cmps
push
mov
cmp
push
or
inc
dec
pop
pop
cwde
arpl
add
and
and
push
test
je
adc
call
add
xor
call
(bad)
clc
adc
cmc
and
mov
ss
and
or
ret
mov
dec
in
(bad)
ret
push
pop
or
jge
leave
mov
push
cs
in
arpl
sub
push
mov
push
ins
in
mov
pop
inc
fisub
sbb
call
test
add
dec
imul
xchg
and
add
andnps
mov
add
scas
dec
test
fsub
and
xchg
fcom
inc
pop
les
shl
pop
clc
ret
les
nop
jo
mov
inc
scas
xor
jmp
cmp
loopne
adc
pusha
add
xchg
push
je
adc
dec
sub
jbe
addr16
add
sub
add
sub
jg
loopne
pusha
test
inc
sahf
ret
add
jecxz
and
mov
jno
xchg
xchg
cmps
in
jns
dec
inc
inc
leave
mov
mov
aas
or
loope
pusha
or
mov
push
ja
outs
sbb
mov
test
add
hlt
sysenter
mov
pop
push
pop
sub
pusha
push
inc
je
pusha
in
lahf
cmp
fs
sahf
and
xor
mov
adc
add
xor
daa
add
fdivr
jne
test
and
fs
fcomp
in
sbb
xor
pusha
(bad)
adc
mov
std
push
pop
mov
dec
mov
movs
(bad)
mov
pop
lods
xlat
jo
test
lods
push
retf
shr
pop
movs
push
and
and
add
adc
fcomp
or
jo
inc
or
sub
or
pusha
out
stos
loopne
loope
shl
sbb
nop
adc
lds
int3
pop
sbb
sub
and
imul
pop
sbb
pop
sub
or
xor
cmp
rcl
cmp
and
sbb
hlt
mov
mov
xor
dec
and
sbb
jb
inc
and
je
add
adc
jle
loope
loopne
xlat
popa
lods
cmp
jle
dec
cmp
call
movs
pop
ins
add
adc
add
jno
inc
movs
sub
push
call
sbb
sbb
add
xchg
in
mov
xchg
inc
add
cmp
je
jo
sbb
and
inc
sub
xchg
add
sahf
add
jle
dec
adc
mov
sbb
or
mov
push
mov
or
iret
jmp
xchg
jne
sti
xchg
xor
movs
outs
leave
lods
rol
arpl
or
popa
jno
inc
or
cs
ret
add
inc
mov
and
fnsave
pusha
imul
pusha
jmp
sub
stos
push
ret
inc
inc
push
lock
inc
sti
pop
inc
and
ss
test
mov
add
ret
sub
cmp
mov
in
jne
xchg
aam
mov
outs
daa
inc
pusha
iret
retf
or
pop
bound
inc
sbb
dec
sbb
(bad)
sbb
sub
mov
push
fiadd
into
imul
xor
add
in
mov
jge
cmp
inc
push
test
dec
dec
mov
mov
adc
xor
imul
add
popa
inc
sbb
(bad)
mov
rcr
or
pop
pop
pop
and
push
inc
and
push
mov
ficomp
inc
out
loope
sbb
rol
cmp
inc
lods
xchg
push
xchg
aam
mov
ds
ret
jmp
mov
mov
and
mov
and
sbb
xor
cmp
cwde
add
adc
retf
inc
mov
dec
cmp
sbb
(bad)
jecxz
popf
mov
bound
mov
repnz
pushf
aam
mov
push
(bad)
imul
sub
push
mov
lock
xchg
inc
jecxz
popf
das
or
mov
in
adc
sub
mov
inc
ret
cmp
inc
adc
push
inc
xchg
scas
lods
sub
cwde
cdq
and
cwde
push
xor
rcl
xchg
aad
push
out
pop
rcr
pusha
adc
gs
cmp
inc
push
test
adc
lahf
mov
sub
rcl
sbb
push
mov
aam
into
adc
adc
pop
pop
inc
nop
cs
out
xor
lds
nop
or
cmp
and
add
or
or
cmp
jo
lods
push
in
mov
add
dec
xchg
stc
or
in
movs
cmp
or
or
test
dec
mov
or
inc
fsubr
xchg
pop
imul
jle
push
dec
add
popf
push
fwait
sbb
dec
popf
or
and
sub
cmp
fstp
icebp
sbb
sub
sbb
cmp
adc
inc
lea
dec
push
push
addr16
pop
sbb
es
and
xlat
sub
fcomp
or
enter
xor
pop
rcl
add
sar
in
lds
jb
cld
mov
xor
cmp
movs
sbb
mov
inc
es
sub
cmp
pop
add
add
je
or
inc
test
push
mov
sbb
test
push
popf
cmp
xchg
pop
ret
dec
shl
aas
push
and
and
dec
xchg
mov
cmps
movs
cmovns
inc
xchg
ja
iret
dec
add
bound
dec
sbb
jmp
xor
sub
add
or
shr
dec
aas
dec
dec
and
pop
mov
rcr
daa
scas
add
movs
adc
xlat
test
imul
daa
pop
add
push
daa
adc
sbb
dec
mov
aaa
mov
fist
lea
test
stos
not
xlat
fist
xchg
test
dec
pop
xchg
mov
sub
push
cmp
mov
scas
dec
and
out
in
adc
jnp
popa
jg
add
add
ret
xor
or
mov
std
sbb
fistp
fdiv
shr
popf
xchg
sahf
xchg
sbb
pop
sbb
rol
leave
pushf
sar
sub
xor
enter
add
dec
mov
lock
adc
push
stc
adc
lahf
ret
popa
mov
sub
xchg
clc
mov
out
sbb
cmps
jo
js
ins
lahf
fisttp
bnd
push
add
ins
mov
mov
mov
cmp
push
fs
push
cwde
sar
pop
jecxz
lea
scas
inc
add
or
pop
enter
add
test
cmp
clc
cmps
movs
cmp
sub
js
mul
shl
pushf
push
mov
mov
pop
fcomp
and
mov
cmp
add
mov
push
dec
mov
test
test
and
add
fmul
aam
sbb
test
push
pusha
mov
and
mov
sbb
neg
sbb
jmp
mov
xchg
add
aas
mov
mov
mov
jb
loope
es
fld
mov
ret
and
jnp
retf
ins
inc
sub
sub
imul
add
add
mov
sub
xchg
push
xor
mov
push
and
add
push
mov
jl
cmp
inc
dec
adc
or
and
jmp
mov
(bad)
sub
add
mov
shl
dec
std
mov
mov
or
push
adc
mov
or
add
inc
adc
loopne
xchg
sbb
and
imul
jle
mov
enter
mov
xchg
dec
and
cmp
neg
cmp
add
call
sub
and
or
xor
enter
fwait
xchg
cmp
push
les
mov
push
push
push
out
call
add
mov
icebp
adc
int3
fmul
(bad)
mov
and
dec
in
lea
sbb
jno
xchg
enter
rcl
or
and
pushf
jl
mov
cwde
or
icebp
adc
xor
add
not
test
push
push
xchg
fs
cdq
mov
add
and
rol
add
mov
fsub
ficom
mov
cmp
sbb
test
push
inc
(bad)
or
sbb
fiadd
ja
test
fsub
push
add
sbb
jmp
pop
pusha
leave
and
sbb
test
sbb
stos
movs
or
retf
fmul
fnstsw
pop
pop
fadd
adc
push
fmul
aaa
or
add
xchg
or
test
(bad)
adc
enter
sub
adc
pop
pop
push
add
adc
gs
add
adc
pop
jb
xor
add
repnz
dec
adc
loop
cs
add
jae
or
adc
outs
enter
fcomp
adc
jecxz
je
les
dec
jb
(bad)
aam
mov
retf
sbb
push
inc
movs
pushf
jecxz
mov
jb
inc
cs
adc
pushw
lea
add
inc
mov
cs
sbb
xchg
ja
js
mov
lea
scas
in
pop
push
sbb
add
and
push
jmp
push
sub
adc
ss
dec
push
aaa
stos
adc
ficom
or
and
xchg
sub
or
lock
mov
pop
test
es
test
movs
enter
mov
sahf
push
push
or
fs
cmp
call
nop
retf
movs
lea
push
daa
xchg
sbb
push
push
adc
cmp
dec
mov
cmp
cs
int3
ficom
or
retf
and
and
cmps
and
sbb
cmc
inc
add
sbb
leave
xchg
imul
jo
fisubr
pop
add
stc
cs
mov
in
cld
xchg
jl
or
or
and
enter
fistp
jecxz
mov
mov
les
and
fild
mov
cmp
or
xor
inc
jb
push
dec
mov
or
cmp
add
add
ror
and
sbb
inc
adc
inc
add
cld
clc
mov
inc
and
mov
mov
inc
inc
sub
dec
repz
fs
shr
cmp
xchg
pop
and
and
and
or
dec
repnz
add
pop
enter
or
or
movs
inc
dec
out
sti
sti
cli
xchg
pop
jb
xchg
add
nop
psubq
adc
pop
xchg
fcom
adc
push
push
mov
sbb
dec
not
and
ds
cmp
add
stos
sbb
movs
dec
sub
je
and
and
add
xchg
or
and
movs
jp
enter
cld
mov
adc
out
dec
pop
jp
sti
mov
(bad)
shr
fcom
mov
jb
mov
dec
inc
mov
mov
add
jnp
pop
cmp
add
and
and
xchg
in
fs
dec
jb
cmps
jnp
fild
dec
inc
es
sub
in
cmp
adc
jmp
add
cmp
xchg
cld
jb
sbb
pop
and
cmp
pusha
jecxz
aas
xor
ja
jmp
push
pushf
and
inc
dec
adc
adc
cs
or
and
push
add
inc
mov
push
or
sbb
inc
lds
and
mov
cli
sub
add
enter
add
jb
in
jp
add
and
pop
fsubr
cli
adc
rcr
mov
cmp
add
rol
add
inc
push
mov
jo
mov
mov
cwde
jo
cs
mov
push
cli
push
adc
push
and
mov
cli
adc
and
sbb
lea
sbb
mov
cli
mov
and
inc
cs
mov
cmc
je
pop
dec
gs
fs
adc
fisub
movnti
adc
jmp
jno
xor
cmp
dec
xlat
dec
inc
inc
es
jmp
and
in
loopne
cmp
sbb
mov
sub
dec
loope
clc
ret
popf
jl
pop
scas
dec
jne
adc
mov
aas
shl
cmp
shl
cmps
add
lock
and
mov
dec
sbb
loopne
adc
mov
and
out
xchg
or
nop
retf
add
or
sbb
dec
jbe
adc
adc
mov
hlt
stc
and
push
xchg
pop
shl
stc
and
xor
aam
and
or
pusha
add
(bad)
stc
push
out
inc
push
dec
or
pushf
nop
push
push
je
sbb
fistp
sub
bound
pop
(bad)
and
mov
cmp
and
and
inc
add
cmc
fs
arpl
xor
fs
addr16
dec
es
call
lock
and
mov
or
and
dec
cmps
or
popa
dec
dec
xor
mov
sub
je
leave
and
js
mov
and
dec
pushf
mov
xor
leave
fdiv
out
xchg
test
add
fiadd
pusha
cld
xlat
call
cdq
pop
pusha
jo
cmps
dec
mov
mov
pushf
dec
xor
and
mov
xor
and
(bad)
enter
xchg
dec
fsubr
lock
jmp
mov
dec
jb
rcl
cmp
inc
jo
mov
shl
fs
dec
push
xchg
cwde
test
in
fldcw
ror
mov
dec
cmps
dec
les
pushf
fs
sub
add
mov
or
dec
xor
and
cmp
jecxz
xchg
dec
push
(bad)
pop
add
inc
jne
(bad)
xchg
mov
xlat
xor
mov
(bad)
cld
push
jmp
adc
leave
and
jmp
sub
cwde
jmp
mov
xchg
test
sub
data16
and
sbb
iret
fsub
jg
push
pop
mov
loopne
or
retf
daa
pop
and
shr
mov
xor
push
dec
repz
mov
push
cmp
imul
sub
sbb
ds
loope
ror
(bad)
push
(bad)
mov
jp
adc
and
sub
mov
imul
mov
shl
sbb
ficom
mov
dec
add
mov
mov
je
mov
test
lea
imul
sbb
inc
or
rcl
inc
sti
shl
pop
push
push
jno
jg
pop
add
nop
cmp
xor
cwde
movs
cmp
fdiv
push
push
dec
and
adc
movs
xchg
retf
or
sbb
repnz
xchg
xlat
push
imul
and
push
add
pop
in
push
in
popf
outs
imul
shl
call
cs
das
inc
sbb
jmp
fwait
ror
aam
pusha
push
cdq
inc
xor
push
inc
clc
(bad)
xor
sub
nop
hlt
cs
ins
(bad)
pop
mov
call
mov
dec
pop
adc
adc
xor
sbb
xchg
fbld
fcomp
ror
sub
int3
es
sbb
mov
in
int3
sbb
retf
nop
loopne
int
fidiv
push
push
push
sub
les
rol
sbb
add
or
(bad)
movs
dec
xlat
pop
and
rol
call
cmps
hlt
and
je
rcl
or
xchg
xor
or
xor
cdq
sahf
movs
add
adc
dec
mov
pop
add
mov
cli
not
add
(bad)
iret
xlat
push
into
in
xchg
jno
pop
xor
add
mov
dec
enter
sbb
push
mov
outs
xor
pop
cmp
fiadd
lahf
mov
jo
jns
sti
dec
ds
call
movs
push
jnp
out
jmp
add
fs
shr
dec
jp
scas
push
rol
xor
nop
(bad)
fcomp
add
data16
mov
adc
fcom
add
inc
xor
xchg
adc
sahf
adc
rcr
inc
add
push
mov
shl
xchg
out
and
push
mov
mov
scas
in
loope
xchg
mov
inc
inc
psubb
paddb
daa
sbb
ss
inc
adc
movs
jge
jecxz
mov
jbe
and
call
je
cmp
inc
dec
aas
cld
dec
lods
movs
cmp
jmp
jae
inc
cs
mov
iret
icebp
and
mov
xor
sub
fs
das
js
jne
add
ret
pusha
inc
cmps
push
add
movs
(bad)
les
add
pushf
push
bound
je
sub
test
add
jo
test
jb
pop
push
(bad)
fdiv
test
add
rcl
and
mov
gs
push
mov
les
and
push
cdq
lahf
jns
out
movs
stos
mov
leave
repz
mov
cmp
or
xor
jmp
dec
imul
mov
and
or
xchg
or
cwde
or
mov
inc
(bad)
mov
and
push
ret
imul
xchg
sbb
fsub
cmp
shl
xor
push
pop
push
adc
and
adc
and
repnz
cdq
aaa
or
loope
xchg
fmul
pop
pop
aam
stos
add
push
adc
sbb
push
in
push
or
and
test
cmp
jo
cs
retf
enter
(bad)
mov
mov
xor
in
and
jmp
xor
add
pop
add
or
dec
popf
mov
ret
ds
gs
sbb
add
push
add
and
sti
xchg
movs
(bad)
dec
inc
push
outs
and
add
fsub
jg
lods
jg
(bad)
pop
lods
mov
and
mov
cmp
xor
xor
or
xchg
sbb
lods
fst
cmps
pusha
dec
iret
add
jg
setg
sbb
loope
pop
sbb
pop
push
jmp
xor
jne
adc
lock
xor
bound
cs
bnd
es
dec
push
dec
jo
movs
pop
cmp
xor
jmp
adc
dec
push
jmp
scas
cwde
cmp
add
setge
loope
cmps
adc
sbb
or
sbb
mov
pop
jge
je
enter
mov
or
dec
pusha
cmp
shr
push
adc
inc
and
pop
ja
das
pusha
int3
fbld
mov
xor
das
bound
dec
dec
xor
clc
cs
shl
add
loopne
psrad
mov
(bad)
push
pop
ins
add
ret
nop
popf
ret
push
add
mov
mov
sbb
adc
sub
daa
or
cld
ret
movs
dec
jmp
dec
jne
cmps
mov
add
jnp
add
sbb
lds
inc
js
lds
outs
xor
aam
xlat
push
rol
hlt
addr16
nop
mov
(bad)
ret
cmp
dec
hlt
(bad)
adc
dec
loopne
mov
pop
pusha
or
das
pop
adc
inc
call
and
sbb
or
lock
or
in
popa
ret
adc
lock
lea
cmp
loopne
enter
sub
rcl
gs
mov
adc
les
outs
ins
or
xchg
test
or
fistp
mov
jno
jb
enter
(bad)
fcom
ror
lods
add
or
nop
push
jle
push
and
xchg
or
mov
push
ss
je
push
adc
(bad)
rol
add
cmp
loopne
and
mov
add
pusha
arpl
mov
movs
cmp
xor
pop
test
mov
fmul
sbb
ins
addr16
mov
cmovns
xchg
and
or
inc
imul
jns
icebp
ficomp
fstp
lods
push
lock
pushf
jo
fld
ficomp
mov
(bad)
adc
adc
popa
cmp
cmp
pusha
hlt
add
add
les
adc
cwde
cmps
or
push
xor
fcomp
adc
jmp
pop
mov
add
inc
bound
jae
adc
dec
adc
or
mov
dec
adc
test
and
sbb
fcomip
push
in
or
sbb
mov
out
add
jecxz
pop
pushf
int3
ins
cmp
jl
push
fisubr
inc
leave
inc
outs
xchg
aaa
sbb
jecxz
dec
ins
loope
pop
shl
adc
mov
add
or
sub
adc
inc
xor
inc
in
xchg
shl
jmp
enter
mov
sahf
push
push
mov
push
dec
push
add
add
inc
or
popf
push
lea
lea
inc
call
gs
jae
xor
pop
lds
push
mov
mov
dec
outs
lods
push
repnz
inc
gs
or
dec
mov
ins
repz
nop
je
pop
fsubr
jns
out
push
js
xchg
out
mov
or
push
in
in
test
mov
add
jno
mov
cs
sub
mov
pop
test
shl
lock
pushf
and
sub
nop
add
imul
aad
add
out
popa
or
xchg
movs
mov
mov
jnp
and
pusha
sub
mov
(bad)
sub
cli
push
xchg
aam
mov
daa
test
jo
push
ins
mov
or
add
inc
or
xor
mov
add
pusha
sbb
inc
and
xor
sbb
repz
pop
jo
jge
jnp
add
cmp
mov
and
dec
ss
add
cmp
daa
push
dec
jecxz
inc
lods
dec
or
push
(bad)
pop
jbe
je
dec
dec
sar
add
cmp
ja
adc
or
and
dec
je
and
mov
xor
xor
cld
inc
and
inc
push
call
or
mov
pop
jo
dec
cmp
mov
mov
cmp
es
fcom
inc
outs
add
sbb
ds
jne
loope
sar
cmps
push
add
adc
retf
adc
adc
and
and
sbb
clts
mov
js
add
mov
pop
ret
pop
in
rcl
cmp
push
nop
lock
sbb
cmp
jo
and
in
jmp
outs
mov
jae
pop
(bad)
ja
in
shr
dec
adc
adc
les
ror
pop
and
and
loopne
add
loope
in
pop
jmp
push
out
sub
cmp
sbb
mov
js
sub
mov
dec
mov
push
and
mov
mov
and
fadd
inc
outs
add
test
mov
or
cmp
adc
inc
push
push
dec
add
pop
ret
add
push
push
ins
adc
ror
cmp
pop
mov
call
sbb
and
movs
mov
sub
sbb
adc
cmp
cmps
and
and
lea
das
or
nop
mov
push
lock
push
cld
outs
inc
pusha
test
fsub
xor
cmp
sub
push
sub
fwait
xor
addr16
sub
push
inc
pusha
push
int3
inc
in
ins
and
pushf
(bad)
and
or
sub
fucom
mov
add
dec
adc
push
or
xchg
stos
push
adc
jg
cmp
add
xchg
fidiv
inc
mov
or
daa
push
pop
pop
cmp
mov
in
inc
jmp
scas
inc
test
add
(bad)
dec
jno
add
mov
or
aaa
and
iret
pushf
add
add
loope
or
push
sbb
pusha
sbb
mov
jmp
repnz
xchg
pop
mulps
popa
in
or
imul
rol
nop
fwait
or
das
rcl
add
jae
sbb
(bad)
jne
push
and
or
call
add
jo
add
in
ror
push
sub
and
clc
pushf
fdiv
inc
xchg
push
or
rol
xchg
scas
or
mov
push
xor
(bad)
mov
dec
sub
out
sbb
(bad)
iret
int
aad
xor
sbb
sub
iret
cmp
aad
ins
xchg
mov
xchg
add
and
fwait
xchg
xor
aam
jns
fwait
ret
sbb
sbb
nop
push
inc
adc
or
push
xchg
int3
pusha
or
pusha
mov
and
xlat
les
push
cmp
mov
in
dec
test
rcl
push
out
loop
inc
lods
fwait
xor
inc
lock
and
sub
(bad)
jb
xlat
or
pop
lods
js
dec
fcmovbe
xchg
pop
outs
sbb
sbb
sbb
in
sbb
cwde
out
push
xchg
popa
shl
loopne
in
add
jmp
(bad)
push
dec
in
shl
xchg
push
jmp
out
xor
dec
mov
sub
adc
sub
scas
cld
test
jb
scas
add
jb
es
add
push
les
shl
jo
inc
ret
xchg
sbb
jo
add
rcl
mov
bound
sub
in
fs
mov
adc
fadd
and
sahf
add
sub
pop
cs
shl
fdivr
add
cmps
and
cs
pop
adc
call
and
enter
dec
loope
ds
pop
imul
lock
jno
inc
xchg
aam
les
mov
pop
sar
mov
pop
cmp
pop
inc
pop
adc
mov
xor
xor
in
or
push
call
dec
add
fistp
inc
sbb
addr16
jmp
xchg
ja
push
or
mov
jmp
pop
add
push
call
aas
dec
push
(bad)
xchg
aam
hlt
jmp
in
out
rcl
bound
sub
int3
int3
add
mov
xchg
movs
push
adc
aas
les
mov
mov
push
mov
movs
cmp
xchg
test
imul
and
dec
ja
adc
xchg
pop
add
mov
fistp
sbb
in
gs
pushf
in
xchg
and
in
(bad)
jne
fist
pop
je
or
sahf
push
add
jmp
jmp
nop
mov
ja
xchg
mov
pop
pop
push
mov
mov
sbb
inc
xchg
pop
and
add
pop
xchg
xor
ja
leave
js
jg
in
daa
js
mov
push
sub
xchg
adc
fdivr
xor
xchg
adc
(bad)
or
add
dec
push
push
outs
sub
loope
push
psubsw
add
or
add
fstp
rcl
jbe
push
add
jl
adc
mov
add
or
sbb
or
test
lods
mov
movups
adc
or
cwde
pusha
dec
mov
add
add
xchg
(bad)
pop
pop
inc
push
inc
js
xor
cs
clc
or
into
push
inc
sub
cwde
xchg
rol
popa
test
push
push
push
or
jb
add
popa
or
cmp
loop
jo
out
inc
imul
push
jne
imul
cmp
scas
jbe
pop
xor
or
pusha
inc
movs
sbb
test
daa
inc
fbld
push
fbstp
cmc
xchg
fnstsw
cli
movs
mov
imul
retf
and
jo
ficomp
jecxz
xor
dec
pop
jae
daa
imul
and
mov
mov
dec
mov
inc
pop
inc
pop
lea
xor
adc
dec
add
or
dec
nop
sub
loopne
popa
mov
outs
and
mov
add
xor
pop
push
lahf
and
out
icebp
rcr
dec
cmp
outs
add
jmp
out
movs
mov
jae
hlt
or
ret
dec
inc
add
pop
ins
movs
sub
add
movs
ins
shl
shl
cmps
or
or
adc
mul
in
add
add
inc
nop
in
repz
lock
or
sti
hlt
or
inc
stos
mov
es
jmp
add
lds
mov
lock
push
add
pop
xchg
or
jo
rcl
call
mov
xor
adc
ja
add
pop
pop
inc
cmp
(bad)
jno
adc
ret
xchg
and
out
sbb
bound
ret
fst
mov
call
fst
adc
mov
pop
pop
inc
inc
mov
mov
adc
nop
pop
leave
bound
nop
dec
daa
xor
sbb
sub
cmp
std
scas
ss
sbb
lds
imul
add
movs
mov
dec
mov
aam
add
xor
cmovl
(bad)
sti
sar
and
imul
mov
xchg
pop
aas
push
fsubr
xor
mov
push
jmp
inc
push
pop
pop
jle
and
ror
and
jo
or
push
dec
pop
lock
or
pop
inc
cdq
mul
sub
xor
add
and
sub
push
push
div
push
push
xchg
into
xor
aad
jp
cmps
and
adc
mov
inc
inc
pushf
mov
jp
arpl
pusha
push
xchg
adc
fdivr
xchg
add
pop
mov
jmp
loop
push
dec
test
cwde
div
cmp
jg
jmp
cmp
mov
add
sub
pop
es
daa
pop
stos
test
in
nop
stos
pop
cld
call
mov
cmp
sbb
inc
in
mov
sub
pop
adc
sub
fadd
sar
inc
mov
mov
push
in
fldl2e
inc
ss
push
mov
(bad)
(bad)
push
sbb
or
inc
fiadd
inc
fadd
adc
stos
sub
push
push
jp
lock
dec
dec
push
lods
inc
mov
iret
xor
sub
imul
sbb
cmp
je
or
aaa
push
aam
pop
add
in
mov
nop
or
jmp
add
or
daa
xchg
sbb
mov
loopne
push
fs
push
jmp
std
gs
push
mov
cmp
add
push
mov
sub
jmp
mov
ss
inc
mov
cmp
jl
mov
push
add
movs
push
push
popf
dec
scas
push
jb
stc
push
clc
test
and
adc
std
add
push
push
push
jo
out
(bad)
sbb
test
push
push
adc
pop
cmps
adc
dec
dec
sub
(bad)
out
lods
and
mov
lods
movzx
sbb
aam
in
and
(bad)
add
or
jmp
push
mov
in
dec
sbb
leave
push
clc
sub
fbstp
cld
sub
xchg
pusha
inc
popa
dec
mov
sbb
and
push
dec
rol
jo
imul
imul
xchg
jmp
sbb
xchg
pop
push
sbb
mov
push
sub
and
jle
jmp
push
or
bound
lea
(bad)
out
mov
mov
and
sar
jo
cmp
test
test
das
pop
adc
jmp
cmp
add
mov
pusha
adc
movs
add
cs
sbb
pop
xor
xchg
pop
jl
mov
mov
or
sbb
pop
jge
jae
das
rol
jecxz
mov
dec
pop
xchg
mov
loopne
or
inc
(bad)
cmp
jbe
cmp
jne
inc
inc
adc
(bad)
push
adc
inc
(bad)
cmc
push
neg
imul
add
adc
adc
je
dec
push
lahf
add
loopne
mov
inc
adc
add
addr16
mov
add
dec
test
jb
dec
adc
jmp
arpl
or
or
pop
sti
loope
push
and
and
adc
enter
inc
push
sbb
(bad)
daa
js
mov
and
dec
fmul
sub
mov
or
cmp
push
mov
mov
push
add
and
test
sub
adc
mov
xor
ins
push
daa
or
inc
and
shl
jp
test
mov
ins
into
sub
pop
pop
lock
shr
int3
pop
pop
(bad)
daa
sub
xlat
ret
jbe
sti
outs
aad
(bad)
and
test
jle
or
not
xor
rcr
(bad)
test
pop
int
jne
sbb
xchg
popa
pusha
in
inc
rcr
adc
into
mov
mov
jo
add
push
jnp
jno
retf
sahf
gs
push
rcl
add
mov
daa
mov
jbe
add
push
sar
sbb
shl
adc
test
sbb
sbb
out
fcom
add
test
mov
xor
add
sub
adc
popa
pop
pop
xor
test
mov
aam
sub
adc
pop
sbb
xchg
into
mov
fsub
nop
(bad)
and
lea
pop
push
or
aam
call
(bad)
cld
mov
cmp
out
mov
mov
shl
push
xchg
leave
inc
in
(bad)
call
int
js
xchg
sub
shl
sbb
mov
add
pop
add
sbb
sbb
adc
int3
clc
jmp
dec
in
push
call
cmps
or
in
test
push
cmc
add
jb
mov
mov
es
push
pop
inc
xchg
pop
jo
les
inc
mov
and
sbb
or
ficomp
ss
cmp
and
dec
mov
sub
add
push
pop
(bad)
mov
dec
js
mov
inc
sub
jle
repnz
ret
ror
cmp
repz
push
je
mov
jmp
pop
pop
xor
pop
xor
push
ret
adc
fsub
lahf
add
ss
sub
adc
lahf
fwait
push
imul
scas
push
or
popf
pop
jb
push
inc
bound
sub
(bad)
cmp
and
pusha
popf
and
add
pusha
cld
inc
sub
cmp
clc
inc
hlt
adc
adc
mov
add
push
inc
jnp
xor
add
aaa
icebp
dec
jo
xchg
adc
aaa
push
enter
gs
sub
or
aaa
push
out
xor
sbb
xlat
or
dec
rcl
aas
add
ins
or
jne
out
xchg
add
sub
cmp
jb
push
xchg
inc
push
je
dec
cs
lods
dec
fcomip
cmp
jmp
sub
(bad)
sbb
std
xor
sub
loop
inc
bound
mov
scas
and
mov
xchg
and
mov
ret
jmp
movs
jmp
inc
add
sbb
mov
test
(bad)
xchg
(bad)
lods
inc
dec
push
(bad)
adc
and
fwait
dec
bound
add
imul
xlat
in
xchg
or
adc
std
cs
ffreep
in
sub
enter
loopne
scas
or
xor
xlat
neg
inc
xchg
mov
cli
mov
ins
add
inc
xchg
jg
sbb
(bad)
mov
call
test
push
pop
jmp
repz
push
jbe
fdiv
jb
cmp
jbe
fs
push
sbb
into
int3
aad
cmp
or
enter
push
adc
or
add
sub
rcr
adc
sub
xor
adc
jp
push
cmp
cmp
jp
inc
jns
mov
pop
ja
add
retf
jae
(bad)
std
pushf
sub
sti
sub
test
push
js
sbb
push
shl
mov
retf
add
adc
xchg
or
or
(bad)
rol
ret
ret
mov
add
out
fst
push
xor
out
ins
test
push
icebp
and
mov
(bad)
sub
rol
adc
popa
mov
xor
inc
ins
mov
sub
cmp
hlt
std
xchg
test
push
inc
xor
fcmovnb
scas
push
push
or
sub
add
sub
xor
inc
cmp
add
xor
mov
cmp
ja
sub
mov
dec
loop
and
add
icebp
inc
add
in
add
jle
cmp
movs
or
jo
add
mov
jnp
sbb
inc
fs
mov
adc
loopne
sbb
jg
lods
hlt
add
cmp
jb
inc
mov
add
xor
inc
sbb
dec
add
lea
push
pusha
or
mulss
add
mov
arpl
je
push
rcr
push
jle
pop
push
mov
sar
pop
mov
add
pop
xor
push
imul
adc
cs
pop
pop
adc
inc
and
push
jno
je
arpl
das
jecxz
cmp
or
adc
add
pop
push
idiv
mov
movs
cmp
and
or
xchg
int
sbb
retf
xchg
fbstp
enter
jg
nop
cmp
add
icebp
arpl
stc
mov
cld
test
sub
fucomip
test
mov
ds
fisttp
and
in
mov
sub
lds
push
add
jnp
mov
cmp
cdq
cmp
mov
(bad)
out
jle
(bad)
sub
inc
mov
mov
mov
stos
xor
jmp
jmp
add
sar
pop
sbb
cmp
cmc
push
dec
fwait
ret
add
or
adc
and
pop
xor
cmp
pop
(bad)
gs
mov
ret
add
cmc
mov
fidivr
sub
add
inc
data16
push
push
gs
(bad)
mov
stos
ficomp
push
inc
cmp
jge
shr
jp
mov
xchg
lock
xor
push
push
adc
mov
test
lods
and
cmp
jo
mov
sub
ds
popf
add
data16
pop
dec
mul
sbb
add
imul
add
mov
out
fdiv
add
dec
inc
rcl
jns
add
fnsave
sbb
adc
cmp
dec
jmp
dec
cmp
cmp
add
and
ret
sub
jg
push
adc
lea
(bad)
into
iret
push
in
xor
dec
aaa
pop
jno
inc
cmp
jg
cmp
lock
inc
inc
fisubr
or
sbb
jne
and
mov
dec
mov
adc
aas
outs
or
xor
and
push
fisttp
retf
xchg
mov
fisttp
rcl
add
adc
rcl
pop
jge
jp
xor
into
push
sbb
xor
jo
fild
(bad)
fwait
jmp
add
inc
sub
clc
adc
mov
cmp
push
push
add
dec
arpl
and
mov
or
(bad)
jl
xor
call
pop
stos
inc
pop
add
and
clc
cmp
xor
in
xor
gs
or
pusha
pop
mov
inc
les
jno
or
pushf
add
xor
jb
add
and
cmp
rcr
adc
push
aam
shl
push
mov
or
ret
imul
into
dec
and
(bad)
sti
in
out
or
jbe
pop
(bad)
mov
adc
sub
xor
into
add
mov
fstp
outs
cli
dec
cmp
pop
jle
mov
lahf
xor
push
mov
sbb
fldcw
adc
test
sbb
mov
pop
add
into
or
sub
cmp
loop
push
add
adc
call
jl
push
mov
(bad)
ret
pop
dec
push
cmc
mov
or
mov
scas
mov
pop
sti
dec
ins
jns
or
mov
cmp
out
xor
bound
sub
pop
lods
xor
mov
or
out
mov
fild
adc
test
adc
adc
lea
sbb
out
stc
sbb
iret
lock
or
js
out
test
xor
push
les
or
xor
jne
add
push
push
out
in
inc
dec
mov
into
sbb
repz
cmp
jle
mov
mov
jno
push
add
retf
ds
test
sbb
shl
idiv
adc
dec
jg
pop
out
jno
retf
adc
test
por
aam
push
jle
add
lahf
loop
dec
or
xor
xlat
pop
pusha
sar
loope
xchg
lods
cmp
fs
jl
sbb
adc
dec
jmp
sub
sbb
and
cli
dec
mov
add
add
in
and
rol
loop
ret
jmp
adc
daa
loopne
aas
rcr
fld
push
mov
adc
mov
loopne
ins
sub
mov
aas
out
cmp
inc
or
lahf
sub
in
jle
lock
and
add
cmp
xor
jp
mov
push
jl
bound
mov
cs
xor
cmps
fst
int3
out
add
repz
mov
call
inc
inc
ror
push
jg
push
(bad)
loopne
or
scas
cli
test
and
movs
fdivr
or
fnsave
mov
mov
adc
lock
outs
push
xor
pop
jmp
inc
add
mov
add
jmp
dec
pop
outs
and
mov
test
pop
jnp
xchg
xchg
cmp
add
mov
rcr
shl
jno
add
mov
out
adc
add
imul
xor
add
test
aaa
(bad)
imul
jo
fs
pop
push
test
mov
and
stos
mov
push
sbb
fistp
mov
xchg
add
inc
cmp
add
les
adc
cld
sub
adc
outs
pop
enter
rcr
push
sub
or
scas
jnp
xlat
or
sub
jo
jns
jne
retf
push
(bad)
cmp
and
cmps
jg
ss
or
adc
adc
mov
movnti
xor
fwait
mov
mov
and
daa
ror
mov
xchg
data16
enter
pop
call
call
and
xor
mov
into
xchg
jb
add
adc
pop
xchg
and
sub
call
ret
test
and
(bad)
in
mov
aam
(bad)
in
jmp
add
or
adc
fwait
mov
les
xchg
iret
dec
ret
push
jle
jno
adc
adc
sbb
jge
push
shl
and
and
fs
mov
jp
jg
push
adc
iret
sbb
dec
adc
pop
aas
ror
add
and
and
and
lock
movs
call
push
idiv
xchg
and
or
hlt
inc
pop
or
or
in
lock
mov
adc
dec
repz
push
jg
jle
xor
jge
or
pop
(bad)
mov
mul
clc
dec
pop
pop
jecxz
out
sahf
add
add
dec
in
inc
mov
call
xchg
(bad)
mov
inc
xor
jnp
loopne
push
dec
lea
fsub
add
and
cmps
jo
fstp
int
and
loopne
shl
mov
jae
je
xchg
pusha
and
push
mov
jne
mov
sbb
aaa
mov
dec
jne
sub
mov
jb
ja
adc
sub
dec
clc
mov
sahf
vmread
dec
rol
aas
pop
or
sbb
jne
add
pusha
jb
adc
xchg
not
lods
test
fs
test
push
js
add
mov
xchg
shr
sub
js
ret
pop
outs
xor
ret
mov
fistp
add
lea
cmp
jb
cmp
mov
ret
into
jb
sti
add
jmp
push
jne
scas
adc
mov
cld
fdivr
cld
out
ror
aas
dec
add
add
inc
pop
inc
cmp
ins
inc
pop
add
out
ins
test
lea
xor
sbb
loop
pushf
jne
iret
push
push
(bad)
clc
stos
mov
cwde
dec
xor
jecxz
add
ret
stos
jnp
mul
push
push
lea
mov
repz
pop
xor
push
pop
and
shl
mov
push
push
enter
add
shr
cmp
jae
lahf
inc
xchg
add
pop
call
pop
paddb
retf
sbb
pop
lods
mov
data16
cwde
add
into
add
or
xlat
loopne
jne
cmp
ja
mov
mov
ja
jbe
and
out
ins
pop
test
cmps
es
sbb
sbb
inc
nop
pop
pop
mov
add
cmp
jae
sub
lock
add
adc
ffree
mov
retf
fs
fwait
bound
jmp
fs
stos
inc
inc
add
clc
and
or
add
sub
rcl
push
push
pop
adc
xor
test
push
xor
mov
int
bound
dec
push
xor
imul
inc
jae
jmp
add
bound
rol
imul
outs
jb
adc
dec
movs
dec
or
mov
jb
les
movzx
xor
inc
or
cmp
jns
adc
lods
mov
push
imul
icebp
mov
mov
sbb
(bad)
clc
mov
ror
inc
or
adc
or
jnp
dec
fild
fild
adc
cmp
sbb
xchg
jp
test
pushf
leave
retf
shr
xchg
les
push
dec
fisttp
xchg
xor
jg
or
jecxz
cmp
or
or
mov
les
sar
xor
xor
jg
sub
cmp
jns
sub
adc
push
shr
aaa
sti
mov
hlt
sub
and
jmp
dec
sub
jmp
dec
or
cmp
dec
stos
sub
jl
pop
bound
dec
or
push
and
xchg
inc
mov
retf
shl
or
pop
fs
inc
push
mov
pop
rcl
xor
pop
adc
adc
mov
add
(bad)
mov
sub
sbb
in
popa
and
and
jge
pop
xor
sub
popa
add
loopne
loopne
xchg
xor
cmps
and
icebp
inc
and
sub
jl
pop
sti
inc
in
ror
in
pop
mov
dec
dec
ins
je
sbb
clc
xchg
test
mov
sub
call
sbb
push
aaa
xor
dec
adc
loopne
test
pop
add
push
pop
ror
jne
lods
or
aad
or
clc
add
adc
push
lods
daa
(bad)
add
and
or
push
jmp
jmp
inc
pop
jno
or
jg
cmp
loope
(bad)
pushf
retf
pop
js
inc
xchg
fwait
out
sbb
add
mov
pop
push
es
cmp
ja
add
inc
jb
(bad)
sub
ret
mov
or
and
(bad)
pop
sbb
inc
je
or
mov
mov
or
or
pop
ss
adc
dec
cmp
ltr
outs
xor
fwait
xchg
dec
dec
and
jo
cmp
sti
or
sbb
mov
push
icebp
mov
add
shl
fs
ss
nop
retf
pop
ss
adc
pop
push
inc
cmp
loopne
popa
add
push
inc
imul
mov
test
dec
pause
xchg
test
mov
mov
jno
lock
adc
scas
push
mov
or
shl
jo
pusha
or
sbb
xchg
and
mov
adc
pushf
fnstenv
mov
dec
push
lock
lahf
dec
sbb
fsub
and
(bad)
xor
cs
inc
jge
and
fisttp
pop
adc
dec
pop
jb
fdivr
(bad)
jge
mov
sub
xor
sub
inc
adc
mov
pop
sbb
push
and
sbb
xor
and
mov
ins
cld
xor
das
cld
test
jge
movs
(bad)
adc
ins
sbb
xchg
mov
dec
jl
or
cld
cld
lods
icebp
mov
add
not
add
hlt
mov
(bad)
mov
loope
cmp
jb
dec
dec
cld
mov
and
inc
call
or
jnp
push
and
push
imul
inc
and
je
dec
outs
and
mov
cmps
outs
inc
pop
cmps
bswap
and
or
nop
data16
jmp
lods
cdq
pop
imul
inc
and
xchg
sub
loop
into
adc
sub
fisubr
data16
jnp
retf
cwde
add
sub
loopne
movs
cdq
and
lock
shr
inc
cmp
cs
mov
mov
pop
int
add
xchg
hlt
rcl
dec
clc
sbb
sub
sbb
xlat
fcmovnb
push
adc
xor
mov
xor
xor
xor
nop
inc
data16
cmp
or
pop
sub
shl
mov
mov
dec
lar
pop
jge
fstp
enter
or
dec
sub
sbb
mov
shl
sub
enter
dec
das
and
adc
inc
mov
fs
jl
pop
xor
adc
daa
sahf
jmp
gs
test
pop
mov
lods
es
sbb
xchg
out
cmp
sbb
and
push
pop
enter
or
adc
or
mov
mov
and
pop
adc
add
or
push
or
and
pushf
and
push
xchg
fst
ins
cmp
pop
ss
cmp
ret
add
jb
push
mov
movs
fstp
lds
adc
cmp
push
and
add
cmp
hlt
dec
lock
mov
call
and
adc
jl
pop
xchg
cmp
jl
pop
outs
and
loopne
ror
and
inc
das
pop
sbb
xchg
jle
dec
out
(bad)
adc
cmp
or
add
clc
add
push
je
cmp
mov
mov
lea
stc
lea
dec
(bad)
je
jmp
dec
jne
test
fistp
movs
mov
clc
jae
jb
push
int3
xchg
xor
std
movs
loope
ret
cmp
jae
push
loop
push
cmp
push
test
sub
push
mov
lds
ror
jle
cli
sub
push
pop
jge
dec
xor
jbe
pop
mov
aaa
imul
mov
mov
mov
jo
cld
les
add
or
cs
cmp
fwait
(bad)
fiadd
iret
outs
imul
retf
pop
das
or
(bad)
daa
jmp
pop
mov
jo
(bad)
jmp
xchg
mov
push
pop
in
call
pop
inc
test
dec
rol
repnz
inc
pop
pusha
neg
ud0
repz
xor
or
push
xchg
out
xor
das
mov
adc
retf
adc
inc
retf
cmp
sar
xlat
inc
pusha
add
add
dec
hlt
mov
push
fild
push
(bad)
and
mov
ins
cmp
adc
mov
push
inc
pop
mov
(bad)
and
and
hlt
add
xor
cmps
add
fisub
sub
cmp
mov
jbe
(bad)
mov
aam
adc
inc
sti
and
and
mov
or
or
aam
xor
push
push
jbe
mov
cmp
test
fsubrp
lods
inc
push
add
sub
inc
js
or
(bad)
and
dec
pop
call
or
cs
add
data16
sbb
mov
push
adc
sbb
push
xchg
inc
adc
add
jmp
sub
jp
in
cwde
int3
sti
and
adc
or
sbb
add
and
mov
aas
rcr
push
out
inc
aas
or
inc
rol
jmp
cdq
push
retf
fdiv
push
pop
jne
lock
and
out
sbb
sub
inc
pop
xchg
xchg
cmp
inc
jo
sub
pop
pop
push
test
mov
xor
inc
js
js
cmp
inc
das
jno
inc
jno
xchg
or
sbb
inc
mov
or
ja
dec
add
xor
adc
push
mov
xchg
pop
adc
ret
xchg
je
jge
sbb
js
fadd
jae
sub
in
sub
sub
ffreep
pop
dec
sub
in
inc
jo
imul
xchg
cmp
sar
dec
xchg
jnp
data16
rcl
movs
push
pop
mov
hlt
xor
out
fld
pop
stos
aaa
sbb
ins
fxch
stc
in
ja
lock
int3
in
std
mov
test
pusha
mov
ins
sbb
xchg
mov
dec
inc
ss
jl
or
or
mov
jno
inc
xor
jmp
xchg
sub
mov
push
dec
push
mov
xchg
sub
jno
adc
sub
call
mov
push
mov
mov
cmp
sbb
aam
mov
mov
and
cmp
xor
nop
xor
xchg
mov
cmp
fdivr
mov
inc
and
add
add
or
dec
mov
or
sbb
or
adc
cmp
lahf
add
call
sbb
mov
or
and
push
jb
lods
lods
sub
sub
sub
pop
jle
out
xor
xor
adc
je
cmp
sub
neg
xor
inc
inc
cmp
mov
adc
(bad)
push
push
outs
pop
cmp
das
fisttp
pusha
xor
add
cmp
add
mov
outs
xor
mov
pop
int3
cmp
mov
lmsw
dec
jns
mov
mov
inc
inc
xchg
fstp
add
cmp
jne
cmp
adc
inc
clc
mov
mov
push
sbb
test
jne
inc
push
pushf
daa
push
repnz
cmc
push
nop
cwde
ss
outs
out
out
inc
cmp
retf
xchg
dec
push
cld
and
sub
into
pop
lock
sub
scas
xor
push
pushf
out
dec
cmp
add
pop
mov
dec
xchg
mov
addr16
push
addr16
enter
cmps
jl
fimul
mov
inc
inc
mov
sbb
dec
sub
cmp
inc
jge
leave
jo
sub
add
push
pop
adc
ss
cs
pop
loope
adc
push
cld
xor
add
outs
outs
adc
mov
sar
cmps
or
and
dec
adc
pop
jns
out
xor
sbb
retf
jae
adc
adc
das
sbb
push
aaa
fs
and
dec
loopne
mov
adc
imul
pop
dec
or
pusha
daa
add
fcom
jbe
bound
addr16
data16
inc
fisubr
push
arpl
jns
sub
mov
cmp
xchg
cmps
shl
push
jne
rcr
pop
and
adc
inc
and
arpl
into
and
setns
push
push
imul
lahf
and
or
scas
adc
push
sbb
add
and
mov
pusha
pop
and
sub
xor
mov
lods
and
sbb
sub
jmp
sbb
xor
sbb
and
push
jmp
arpl
and
sysret
or
mov
adc
ret
rol
fmul
dec
test
jnp
jl
jge
neg
out
or
js
lock
jmp
lahf
(bad)
inc
pop
ret
jo
ins
add
test
add
test
mov
mov
loope
retf
push
sahf
push
(bad)
enter
add
cmp
outs
or
es
div
add
jb
mov
ins
xchg
jbe
push
shl
add
adc
and
or
add
pop
sbb
jne
add
or
xchg
mov
and
and
add
cmp
ja
aas
mov
push
add
adc
dec
and
shl
nop
aaa
push
inc
clc
jbe
xor
cmp
and
xor
mov
mov
imul
cmc
sub
xor
mov
bnd
push
mov
sub
push
add
cmp
pop
inc
pop
pop
jg
or
sub
div
addr16
leave
push
pop
(bad)
push
fsubr
sub
sub
repnz
ror
fidiv
fwait
and
add
inc
ret
xlat
add
in
repz
sub
cmp
(bad)
jmp
adc
shl
jno
pop
mov
pop
xchg
shl
movs
ja
fcmovb
cdq
jge
lock
and
adc
mov
sbb
pop
sbb
mov
ss
push
fsubr
jle
(bad)
fld
shr
sub
mov
mov
mov
push
adc
jne
jge
sbb
xchg
(bad)
les
cmps
or
mov
push
mul
sar
lock
jns
popa
pushf
mov
dec
jo
add
or
jp
out
ins
or
xchg
pop
cmp
mov
xor
rcl
add
sbb
cli
push
push
loopne
and
loop
(bad)
mov
movsx
outs
push
xchg
jbe
push
jmp
dec
jne
jle
in
rol
or
inc
mov
adc
sub
add
movs
add
xchg
adc
out
data16
cmp
inc
jmp
inc
push
leave
mov
push
and
xchg
or
sbb
xchg
retf
mov
sub
mov
in
xchg
xchg
outs
and
sbb
in
into
(bad)
cmp
in
in
mov
mov
loopne
jb
sub
test
add
int3
out
jle
xor
xchg
adc
je
jecxz
dec
inc
xor
cmp
daa
inc
sbb
mov
add
fst
add
in
pusha
xchg
and
push
inc
and
inc
jmp
dec
jmp
sub
call
into
push
fwait
test
jecxz
mov
mov
ret
jmp
daa
rcr
mov
sub
stos
mov
shl
sub
xchg
mov
shl
jo
cmp
lock
mov
ins
jne
mov
add
mov
inc
shr
inc
jl
fcomp
mov
xor
rcr
adc
mov
jb
jbe
push
leave
aas
mov
sub
leave
jb
add
push
mov
ins
or
or
popf
inc
retf
jo
jge
jg
out
dec
mov
mov
rcr
call
or
adc
sub
sbb
sbb
pop
jns
and
push
inc
pop
dec
sub
jmp
jmp
js
ret
cli
test
dec
std
adc
mov
outs
test
jne
loope
add
ror
fiadd
fadd
push
sub
les
jl
pusha
sbb
jne
jno
fimul
push
or
xor
push
pop
pop
mov
jns
and
pop
sbb
dec
call
ins
mov
dec
add
sub
jmp
mov
sub
mov
daa
cmp
jb
dec
movs
sbb
push
add
mov
cmc
sbb
ror
pop
sub
dec
nop
add
sub
rcl
lods
fdiv
add
push
cmp
mov
or
inc
xchg
and
jmp
sbb
fsubr
push
aaa
mov
(bad)
(bad)
pop
in
ret
shr
push
ret
push
add
jne
push
test
test
lock
mov
xchg
mov
rol
inc
mov
and
mov
shr
sub
cmp
inc
mul
or
mov
adc
cmp
mov
add
pop
retf
or
mov
mov
adc
repnz
push
inc
add
or
push
fwait
xchg
inc
cmc
or
mov
adc
inc
adc
or
add
cs
cmp
sub
sub
sub
in
inc
sub
or
clc
popf
out
stc
sub
adc
push
lods
ret
and
dec
dec
push
mov
fdivr
cs
(bad)
mov
dec
sub
movzx
sub
mov
(bad)
or
and
pop
fisub
lds
pop
mov
cmp
add
pop
pop
xor
pop
cmp
or
mov
or
ds
in
xlat
cli
pop
mov
test
sahf
jl
call
sub
adc
cmp
jbe
jecxz
cmp
lds
clc
(bad)
es
xor
repnz
add
add
pusha
lock
inc
cmp
cs
fld
add
add
fcmovnu
pop
not
inc
movlps
ss
fsub
and
sbb
mov
jbe
inc
sbb
add
dec
add
sub
inc
and
aam
mov
test
cmp
sbb
jmp
imul
rol
out
(bad)
sub
mov
cmps
call
or
jbe
mov
mov
jle
mov
jmp
fcmovu
mov
retf
ret
mov
sahf
bound
add
sub
cdq
dec
sar
ja
repnz
add
cmp
sub
adc
sbb
int
push
and
inc
xchg
inc
jne
jne
loop
mov
or
jmp
mov
sub
or
scas
mov
out
adc
jne
jmp
(bad)
add
mov
mov
je
movs
add
mov
leave
addr16
sub
or
loop
jae
stc
adc
add
in
sub
shl
sub
and
call
arpl
add
jmp
sbb
cdq
adc
scas
dec
rol
cmp
jne
adc
test
lahf
out
xchg
rcr
jmp
add
adc
sub
mov
fisttp
jo
(bad)
xor
xor
les
(bad)
sar
pop
lods
sub
popa
jb
xor
or
aas
inc
mov
dec
mul
shr
cmp
cld
inc
daa
enter
mov
enter
mov
ficom
pop
adc
in
push
retf
sub
fcomp
lahf
xchg
add
add
cmc
xor
jmp
inc
dec
aas
pop
inc
rol
leave
add
xor
mov
jns
adc
sbb
loopne
add
and
push
jb
adc
sar
xor
push
push
and
fs
pop
mov
adc
loop
iret
in
out
jbe
jnp
aad
or
inc
imul
ja
fadd
mov
add
retf
ja
sbb
and
je
jmp
and
imul
cmp
jae
nop
mov
xchg
mov
xor
in
xor
inc
xor
pop
and
cmp
or
fwait
inc
hlt
or
add
shl
and
sti
test
and
dec
jbe
pop
mov
push
fcom
aad
iret
add
pop
jg
add
sbb
cmp
and
iret
call
add
in
push
clc
add
adc
loopne
and
(bad)
adc
push
repz
and
jns
cld
enter
add
add
add
add
pushf
or
inc
jle
adc
loop
nop
retf
push
or
adc
inc
cs
or
mov
aaa
and
pushf
pop
sbb
push
mov
add
add
or
push
sysret
jmp
mov
add
mov
ins
aam
inc
mov
jge
sbb
inc
mov
adc
fs
push
(bad)
cmp
push
jne
pop
cmp
mov
adc
adc
int
out
or
sbb
cs
and
jnp
inc
jne
iret
imul
xlat
push
add
sbb
add
sub
scas
xlat
adc
test
jns
add
mov
add
jne
pop
xchg
out
fcom
pusha
push
jge
mov
add
pop
xchg
pop
(bad)
push
imul
(bad)
xlat
push
movs
or
pop
movs
movs
and
push
je
enter
or
push
and
mov
jns
ss
ins
inc
icebp
add
in
cmp
jb
sti
mov
call
xchg
inc
push
enter
lods
cmc
std
cmp
jb
adc
nop
fst
adc
sub
dec
outs
pop
lds
push
push
mov
out
out
ins
mov
cmp
loopne
call
sbb
pusha
fmul
or
clc
push
or
add
test
ins
scas
inc
push
ins
push
dec
imul
lock
push
and
in
jbe
iret
jp
in
add
sbb
pop
and
push
mov
sub
mov
call
jae
ret
js
sbb
movs
cmp
call
cmp
cmp
jl
push
mov
sbb
inc
push
es
mov
mov
push
hlt
xchg
(bad)
ins
and
imul
jne
pusha
inc
push
gs
stos
cmp
lods
add
xor
adc
jne
sub
push
icebp
add
sub
nop
or
pop
mov
pop
enter
test
pop
add
pop
dec
xchg
shl
pop
es
xor
jmp
or
jns
movs
leave
mov
add
dec
push
adc
in
cmp
xchg
adc
xchg
sub
pop
adc
sahf
in
call
push
call
jmp
xor
xchg
pusha
enter
push
push
push
mov
add
pusha
mov
fwait
sub
lock
or
shl
adc
pop
xlat
inc
sbb
fwait
adc
jne
pop
sub
sub
sar
xchg
inc
mov
push
enter
ret
adc
xor
xor
lea
lock
adc
bound
inc
xor
inc
xor
aad
mov
test
xor
call
clc
cmp
inc
retf
cmp
fisubr
mov
arpl
jno
je
mov
and
inc
jbe
shl
aaa
mov
xchg
jg
inc
cdq
or
jne
push
push
push
dec
or
dec
movs
cmp
test
add
xchg
rcr
inc
add
xchg
cs
shl
or
and
nop
add
lds
mov
and
add
jb
in
hlt
add
dec
repz
jbe
xchg
or
or
adc
das
pop
leave
add
add
cmc
rol
les
push
or
and
mov
or
cmps
add
ds
in
fwait
je
je
outs
lahf
std
jb
jae
test
sbb
jbe
mov
sub
dec
and
into
add
ror
fucomp
or
sub
inc
cmp
add
ror
push
cli
bound
jg
int
hlt
dec
sub
lock
pop
xor
inc
into
sbb
mov
pop
jl
and
das
pop
ds
mov
cmp
add
or
ins
adc
retf
lods
and
lock
mov
and
push
sbb
adc
jl
mov
cmp
push
lea
js
into
push
sbb
cmp
aaa
push
int3
jl
fwait
js
add
mov
cmp
je
mov
mov
adc
(bad)
aaa
repz
jne
sbb
gs
xor
sbb
mov
sub
xor
daa
fild
pusha
push
add
loope
adc
push
add
and
imul
adc
dec
cmp
lods
mov
jo
fadd
sbb
or
mov
jle
popf
cmp
or
dec
fwait
dec
cdq
sbb
xchg
inc
jno
sub
add
test
add
push
inc
push
pop
adc
and
sbb
je
inc
adc
cs
into
xchg
imul
shl
test
xlat
jb
rcl
and
push
nop
push
or
aad
lahf
inc
test
sbb
xchg
mov
inc
arpl
test
sbb
lock
push
add
sbb
xor
jae
das
pop
enter
retf
push
and
adc
jp
jmp
test
xor
or
dec
xlat
ja
(bad)
push
inc
repz
in
(bad)
aad
sub
fcom
mov
sub
dec
pop
sub
mov
(bad)
enter
xor
cmp
fsub
sub
adc
adc
aas
push
sbb
inc
sub
inc
cmp
es
lock
xchg
or
nop
fidiv
and
jg
movs
pop
jo
clc
cs
jle
arpl
scas
adc
sub
or
out
xchg
push
jo
js
adc
dec
lahf
mov
enter
add
mov
aaa
call
stc
frstpm(287
mov
adc
cmp
test
sti
inc
pusha
and
xchg
icebp
fisttp
fwait
inc
imul
jnp
ins
inc
push
nop
xor
xor
scas
lods
and
push
adc
test
add
add
mov
lods
stos
xor
addr16
or
and
fsub
mov
sub
dec
sub
mov
daa
mov
inc
out
jne
or
dec
add
loop
fs
data16
add
leave
lea
cmp
jle
outs
jmp
sub
or
sub
sub
icebp
pushf
dec
imul
mov
loope
ins
inc
inc
test
jg
and
or
(bad)
pop
ja
pop
scas
push
rol
sbb
inc
mov
adc
leave
push
or
pop
sub
inc
mov
jle
jo
xor
retf
cmp
lea
dec
add
ret
or
inc
ror
mov
pop
imul
add
jg
adc
or
int
hlt
test
cmp
mov
or
bound
cmp
bound
dec
xchg
outs
push
mov
daa
lea
mov
dec
sti
fwait
test
mov
sbb
jecxz
adc
je
cdq
push
pusha
inc
ficomp
add
pop
sahf
ficomp
sub
dec
push
cli
or
dec
mov
scas
jo
xchg
lock
cld
out
jl
(bad)
mov
sti
cmp
jle
jl
pop
mov
add
add
push
fimul
adc
mov
add
mov
test
outs
int
adc
add
add
cmp
xchg
xor
or
cmp
jb
pusha
add
xchg
aam
inc
dec
and
pusha
fisttp
dec
mov
(bad)
or
cmc
leave
xchg
push
lods
pop
push
mov
dec
cmps
aaa
mov
popa
add
sub
dec
pop
pop
mov
or
jno
inc
push
adc
jl
xchg
ret
cmp
push
push
ds
jns
jmp
push
sbb
fchs
pcmpeqd
or
in
(bad)
fwait
cmp
and
adc
push
lods
ins
bound
repz
or
jnp
dec
pop
ror
add
out
add
cmp
sbb
sub
cmp
cli
add
std
adc
adc
mov
out
mov
and
adc
sub
aam
out
cmp
xchg
mov
in
push
add
out
(bad)
loop
pop
out
pushw
ret
mov
es
int3
inc
jmp
out
xor
lds
sbb
stos
in
push
rol
sub
shl
push
jb
push
call
test
adc
push
mov
add
jl
mov
daa
push
loopne
je
adc
push
and
pop
mov
fld
jmp
rcr
int3
(bad)
into
push
pop
jbe
inc
shl
adc
cmp
jae
xchg
outs
push
add
in
xchg
dec
adc
shl
test
pop
push
enter
fist
jbe
cmp
pop
das
sbb
mov
sar
push
xor
retf
and
inc
scas
(bad)
sbb
cmps
dec
pop
push
push
push
and
or
fistp
xor
cmp
dec
test
jbe
mov
lods
adc
into
loopne
pop
or
inc
mov
mov
jg
dec
sub
test
add
xor
sub
push
js
adc
cmp
popf
xor
jne
cwde
or
adc
sbb
leave
sub
sbb
into
xchg
sbb
scas
mov
mov
pushw
pop
pop
sbb
inc
sbb
add
push
adc
or
ficom
add
dec
jb
rol
xchg
add
popa
fdiv
loop
jle
fsub
dec
or
in
add
dec
pop
iret
jmp
test
inc
mov
push
out
jmp
sbb
test
loope
mov
sbb
jbe
and
icebp
jmp
inc
test
mov
enter
add
call
(bad)
and
(bad)
xor
xchg
sbb
lahf
sbb
xchg
add
outs
or
enter
push
add
test
in
sbb
(bad)
fadd
ret
or
ret
inc
xchg
pusha
pusha
inc
in
xchg
mov
popa
rcl
stc
jo
sbb
test
and
fimul
add
pop
pop
xor
ret
mov
nop
iret
mov
push
mov
and
fcomp
sub
enter
pop
pop
or
or
cdq
outs
out
inc
loope
mov
(bad)
cld
cmp
pop
xlat
sahf
jle
ds
add
adc
dec
dec
loopne
inc
fnstcw
ss
scas
push
xlat
xor
xlat
xlat
or
sbb
fwait
cld
xchg
mov
cwde
ret
scas
imul
mov
lea
clc
loope
xchg
or
neg
push
in
or
call
ins
ja
iret
scas
mov
add
inc
push
fs
and
fistp
retf
clc
retf
sub
xchg
jne
daa
pop
dec
fcomp
retf
xchg
fsubr
and
mov
nop
xor
push
clc
xor
je
jg
add
mov
outs
add
mov
sbb
adc
popf
sbb
loopne
xor
push
(bad)
(bad)
adc
enter
mov
pop
cmp
xor
pop
adc
(bad)
lahf
outs
xchg
loopne
or
adc
das
and
jb
repnz
fidiv
pop
cmps
sub
pop
outs
rol
xor
inc
fwait
or
fdiv
in
outs
push
push
mov
nop
sub
rcl
xchg
xchg
mov
(bad)
ds
xchg
xor
out
call
mov
inc
les
sbb
test
xchg
add
out
movs
ficomp
sbb
mov
call
sahf
lock
in
lea
popa
lea
sub
imul
out
mov
call
jae
xchg
dec
sub
sbb
and
jl
jo
loopne
inc
xor
hlt
sub
lahf
int
in
repnz
in
call
lahf
mov
pop
pop
enter
adc
xor
mov
xor
enter
xor
inc
xor
xchg
cmp
mov
ret
leave
mov
jnp
rcl
and
push
add
in
or
shr
push
cmp
add
pop
dec
mov
add
dec
push
or
push
or
(bad)
add
lock
fld
sub
add
pushf
jp
ins
or
mov
loope
add
inc
push
mov
xchg
or
add
xchg
mov
add
in
adc
push
push
xlat
sbb
cld
and
add
rol
add
movhps
and
cmp
push
sahf
hlt
out
xor
xor
or
xor
add
shl
outs
or
(bad)
je
das
or
inc
xchg
push
push
out
cmp
das
in
dec
push
nop
movsx
repnz
jbe
das
inc
ins
push
daa
inc
js
xchg
and
pop
int
dec
sub
mov
ins
das
push
jo
and
mov
das
mov
mov
ret
aam
xlat
das
in
lods
and
xchg
das
mov
fldcw
mov
or
xor
xor
in
call
push
shl
dec
sub
adc
in
popa
add
pop
push
bound
shr
test
ss
jmp
cmp
push
jmp
or
push
adc
sub
ret
(bad)
and
xor
inc
or
loope
cmp
sub
or
jmp
sbb
dec
mov
cmps
imul
ins
sub
add
jne
sbb
dec
je
add
jmp
add
aaa
cmp
xor
fwait
mov
xchg
sbb
mov
fcom
je
sbb
ror
inc
cmp
xchg
push
clc
and
daa
pop
pop
and
add
inc
ffree
fadd
mov
cmp
imul
cmp
inc
dec
cmp
jg
xor
jne
add
call
inc
or
push
inc
dec
lods
push
mov
arpl
pop
repnz
inc
clc
arpl
add
xor
lods
int
pop
xlat
outs
scas
sbb
add
xor
or
push
xor
(bad)
mov
push
ds
dec
add
pop
sets
aam
popa
cmp
mov
aas
out
jl
push
inc
mov
test
mov
mov
inc
pop
shr
pop
test
and
add
enter
push
sbb
jbe
sub
or
adc
mov
das
or
sbb
jo
sbb
cmp
ret
fdivr
rcl
push
or
add
add
cwde
xor
sub
jbe
sub
cmp
xor
cmp
imul
push
jle
or
cmp
mov
or
or
sbb
arpl
inc
cmp
sbb
cld
je
mov
mov
sbb
adc
clts
test
ret
cmp
pop
mov
sar
popa
js
outs
adc
and
nop
mov
add
xchg
(bad)
sbb
je
test
push
retf
sbb
push
rol
ds
pusha
or
pop
jno
and
adc
or
mov
mov
or
es
fld
adc
mov
jne
or
add
cmp
push
jae
add
(bad)
fild
add
or
add
or
cdq
jge
and
or
daa
ret
jne
or
or
jne
push
inc
push
sbb
cmp
xchg
sbb
idiv
scas
scas
jmp
jns
jae
and
mov
pop
pop
mov
push
and
nop
add
xor
sbb
inc
mov
push
sub
inc
call
aaa
xor
sbb
fdiv
sub
cmp
je
or
sahf
or
sub
or
add
xor
adc
and
push
scas
pop
mov
push
fdivr
or
je
aaa
in
sbb
jne
cli
sub
idiv
or
push
xor
lahf
(bad)
cmc
add
mov
ins
in
inc
dec
push
adc
sub
jne
imul
jb
inc
imul
fsub
fs
adc
inc
fadd
lahf
and
int3
add
ret
push
test
in
cmps
mov
xor
mov
faddp
adc
add
stos
push
aam
or
inc
outs
push
dec
inc
push
adc
sti
xchg
inc
jle
aas
or
retf
cmp
adc
inc
pop
and
test
fdiv
dec
inc
push
and
lock
lods
test
ret
ins
aaa
ror
adc
fs
xchg
rcr
adc
or
or
ins
cmp
mov
lock
fwait
inc
ret
jo
mov
adc
sbb
fimul
outs
sysenter
bound
cmp
adc
push
dec
js
and
add
aas
and
dec
dec
and
and
dec
dec
dec
and
dec
dec
dec
sub
sub
pop
jo
sub
nop
sbb
dec
xor
mov
add
push
sub
push
mov
ret
movs
ins
ja
das
mov
add
mov
add
ja
push
xchg
ins
jp
imul
test
xor
es
inc
jo
sti
mov
das
adc
or
shr
xchg
sar
mov
push
out
sbb
add
cmp
dec
or
adc
add
inc
test
test
outs
bound
dec
xchg
add
sub
sub
sbb
pop
nop
push
sbb
add
mov
xadd
test
sub
lds
sub
cld
push
sahf
es
dec
and
mov
xor
sub
sbb
mov
and
adc
adc
movs
call
(bad)
push
push
xor
or
sar
jnp
test
(bad)
test
imul
lock
movs
mov
xor
les
shl
cmps
sub
scas
imul
inc
inc
adc
inc
stc
adc
jmp
xchg
loopne
and
cmps
mov
and
sahf
add
pop
adc
pop
mov
fadd
or
adc
mov
sbb
movzx
adc
fadd
mov
adc
pop
and
popa
test
data16
fdivp
or
push
(bad)
mov
fcmovb
dec
lods
dec
cmp
mov
dec
adc
push
cwde
jno
cdq
add
pop
mov
or
mov
push
scas
inc
loope
adc
sti
push
loopne
js
cmp
mov
push
fwait
ins
jo
jne
das
sbb
(bad)
fcomp
les
xchg
mov
cmp
(bad)
jno
loopne
jno
cmp
popa
mov
clc
jb
sub
call
dec
shr
cwde
sbb
mov
loopne
shl
mov
mov
mov
xchg
mov
inc
pusha
add
mov
push
add
or
pop
push
stos
les
popa
shr
aaa
in
push
add
sub
fimul
pop
xor
add
adc
xlat
lea
xor
sub
dec
rcl
shl
push
aam
xchg
jp
sub
sbb
inc
sbb
into
push
sbb
pop
adc
stc
nop
fdiv
push
xchg
pop
div
push
sar
je
cmps
mov
sbb
xchg
jl
pop
mov
jno
loopne
cs
add
in
add
xchg
add
pusha
sub
mov
mov
ds
or
dec
and
lock
mov
sub
clc
ror
xchg
mov
sub
imul
lahf
sbb
xor
cmp
movs
ret
pusha
fcomp
xor
jne
in
jecxz
xor
loopne
out
jge
int
les
mov
fst
cs
je
cli
xchg
call
xor
jp
mov
sbb
inc
mov
xchg
sahf
dec
pop
mov
inc
push
dec
aas
and
inc
daa
push
not
sbb
push
lea
repnz
xor
mov
jmp
jb
ins
adc
in
in
cs
in
das
sub
hlt
shr
sbb
dec
or
mov
lahf
dec
lock
add
xor
push
test
or
loopne
sbb
in
adc
dec
dec
xchg
adc
xchg
pop
push
repz
adc
ds
dec
sar
sbb
icebp
js
inc
dec
cld
push
or
sbb
mov
sub
mov
int3
add
mov
es
add
sub
add
dec
sbb
mov
push
add
xor
cs
sbb
sbb
les
pushf
mov
xchg
add
rcl
adc
fs
bound
push
js
leave
add
xlat
add
leave
xor
add
dec
adc
mov
sub
or
dec
add
add
leave
addr16
adc
cmp
dec
and
and
push
sub
mov
ret
addr16
or
cmps
sbb
adc
fadd
mov
and
add
(bad)
push
add
adc
inc
adc
outs
pop
xor
xchg
ret
dec
clc
shl
js
or
or
movs
shr
stc
pop
fisttp
sar
push
in
mov
mov
and
and
add
jmp
nop
pop
movs
repz
retf
sbb
mov
inc
jns
dec
jns
mov
cs
and
mov
mov
jb
mov
int3
popa
sbb
push
dec
pusha
mov
push
add
lods
sub
(bad)
mov
mov
les
or
or
sbb
add
or
and
pop
scas
xor
dec
jno
mov
fcom
or
dec
add
inc
ins
out
xchg
sbb
push
add
and
pop
pop
sub
stos
lods
add
xchg
cs
and
sbb
push
das
lods
add
mov
cs
add
enter
sub
test
loop
add
ins
and
push
xor
lock
cmp
mov
cmps
rol
adc
sub
in
cmp
sub
dec
sbb
or
sbb
retf
mov
popf
mov
nop
and
mov
ror
ss
rol
add
push
es
mov
dec
out
shl
movups
mov
les
bound
xor
jns
and
or
add
xor
sbb
gs
sar
loopne
sbb
and
and
ror
out
daa
nop
add
pop
pop
je
push
pop
mov
popa
lods
arpl
add
add
mov
or
imul
pop
imul
jo
and
add
sub
xchg
or
push
pop
sbb
pop
pushf
cs
pop
lods
jmp
add
pushf
jmp
jle
ins
jg
jne
sahf
inc
js
pop
sub
pop
mov
or
inc
pop
fisubr
sbb
dec
fs
lahf
and
add
and
inc
mov
jae
cmp
and
lods
or
inc
cs
add
dec
jne
retf
cmp
scas
xchg
inc
fild
jno
jmp
push
out
mov
je
pop
xor
or
xor
or
xor
mov
and
mov
mov
cmp
adc
shl
add
hlt
cmp
pop
inc
push
xor
xor
xor
adc
cmp
fbld
ins
adc
shl
loope
out
jnp
js
data16
push
mov
pop
xor
cmps
pop
xchg
add
jne
lock
js
cmp
sub
ss
inc
xor
adc
adc
nop
sub
and
or
aas
push
daa
sbb
jge
aam
sub
cmps
(bad)
and
fs
(bad)
hlt
mov
outs
jne
pop
les
and
jl
pop
dec
jl
out
outs
outs
(bad)
retf
in
loop
daa
xor
mov
mov
data16
loope
repz
pop
and
dec
push
sub
pusha
outs
pop
inc
xor
xchg
fs
or
iret
out
inc
pop
push
test
add
pop
push
dec
inc
push
jp
(bad)
test
cmps
or
or
outs
push
pop
dec
dec
push
mov
mov
or
test
push
inc
aaa
push
inc
mov
lods
nop
push
call
mov
pop
push
dec
inc
fmul
pop
mov
mov
nop
sub
dec
or
sub
inc
repnz
mov
cmp
jne
mov
mov
iret
adc
xchg
add
nop
ins
mov
sub
push
mov
xor
int
xor
inc
inc
les
ins
jae
ins
addr16
adc
inc
mov
mov
ins
mov
and
fidivr
mov
mov
push
mov
push
fcom
sub
pop
or
push
(bad)
stos
adc
dec
mov
mov
and
pop
and
mov
jmp
jne
adc
add
adc
cmp
xor
xchg
mov
repnz
xor
xchg
jmp
leave
and
dec
sbb
inc
ins
jne
sub
pop
add
add
(bad)
adc
adc
adc
pop
fwait
mov
fwait
cwde
xchg
and
(bad)
mov
js
pop
mov
xchg
add
push
clc
addr16
call
push
lds
add
push
xchg
dec
adc
sbb
jae
sub
or
jmp
inc
push
movs
pop
pop
cs
scas
(bad)
xor
xor
inc
sub
pop
daa
inc
movs
cmp
jle
add
cmp
imul
clc
and
call
xor
cmp
sub
inc
mov
mov
push
cmp
jo
inc
cdq
push
inc
xor
das
add
add
mov
fimul
cwde
or
adc
xchg
push
jp
or
in
and
xor
sbb
imul
xor
ror
mov
lods
or
sub
or
es
ja
js
mov
pop
es
ret
ja
cmp
mov
dec
and
sub
test
lods
loopne
xor
mov
mov
cs
mov
in
xlat
pusha
xor
pop
jne
jae
les
mov
add
sub
jmp
es
mov
push
push
cmp
sub
or
cmp
xor
mov
xchg
and
dec
jle
rol
shl
push
xor
std
iret
add
inc
jle
xor
inc
or
sub
idiv
add
(bad)
dec
adc
push
ins
sub
sbb
mov
aaa
test
lock
xchg
sub
ss
test
xchg
in
dec
fwait
push
push
or
orps
add
or
push
aas
and
xor
pop
hlt
mov
xchg
mov
mov
ret
retf
lea
fcomp
xor
inc
sbb
sub
cmp
cmp
push
xchg
js
aas
push
sbb
add
push
push
push
inc
sub
ret
xlat
pop
add
daa
add
adc
push
or
pop
push
xor
dec
add
movs
or
popf
(bad)
push
jg
les
and
adc
mov
enter
out
mov
mov
data16
xchg
and
xchg
clc
enter
add
in
jle
or
sahf
push
push
and
inc
popa
or
or
sub
dec
or
add
dec
adc
lods
out
shr
mov
nop
pop
or
ds
dec
js
test
into
mov
call
push
repnz
inc
js
mov
or
cmp
test
icebp
add
sbb
jge
call
pop
adc
icebp
sbb
add
dec
dec
shl
add
int3
pop
add
dec
les
pop
adc
push
fs
mov
in
in
mov
xchg
inc
in
push
dec
inc
sar
sbb
and
mov
inc
and
dec
mov
xor
pop
mov
xchg
int
addr16
cmp
dec
inc
adc
sahf
stc
xlat
in
arpl
imul
outs
mov
push
mov
or
lods
call
mov
ffree
fnstenv
jge
dec
shr
leave
in
jnp
(bad)
cmc
(bad)
repz
mov
fadd
fdiv
jns
pop
iret
adc
ret
mov
adc
es
(bad)
dec
nop
xchg
and
popa
mov
rcl
mov
dec
lea
out
enter
dec
out
push
fs
ins
leave
out
pushf
arpl
xchg
dec
enter
ins
sbb
test
xchg
pop
icebp
movs
mov
movs
mov
add
dec
dec
sbb
imul
add
nop
(bad)
scas
sbb
add
dec
fadd
rcr
inc
adc
syscall
rcr
jmp
adc
or
cmp
mov
adc
into
sub
pop
mov
loope
jmp
(bad)
or
sub
jo
stos
xor
lods
popf
jg
jmp
out
into
adc
xor
out
out
or
inc
iret
addr16
cdq
movs
je
ror
ffree
clc
ins
mov
call
mov
or
jo
in
mov
mov
mov
std
xor
jae
add
ficomp
mov
mov
sub
int3
push
sub
push
cmp
pop
mov
loopne
pop
cmps
push
jl
pop
adc
test
movs
test
adc
cmps
adc
and
xor
and
push
je
add
inc
jno
hlt
aad
cmp
rcr
sub
hlt
paddsw
jb
add
xchg
push
ret
mov
add
sbb
mov
adc
inc
rol
cmc
adc
enter
mov
out
adc
xor
push
call
shl
aam
inc
or
mov
lea
mov
aam
mov
retf
clc
mov
ins
add
or
adc
aam
xor
ds
adc
push
dec
ja
add
(bad)
icebp
nop
dec
inc
dec
loopne
pusha
inc
add
dec
or
add
and
cmps
add
(bad)
xor
or
and
push
adc
out
push
dec
adc
xor
push
pusha
mov
mov
call
lods
mov
test
mov
cwde
adc
fild
movs
inc
jo
inc
jo
push
dec
jae
je
push
mov
or
push
mov
inc
(bad)
movs
inc
stos
xor
fmul
test
inc
jge
adc
jle
pop
push
dec
stos
retf
add
fcomp
inc
inc
push
or
push
in
add
push
(bad)
inc
push
das
adc
xchg
add
loopne
js
mov
adc
pop
xor
xchg
iret
pop
(bad)
xor
xlat
inc
mov
ja
cmp
imul
(bad)
dec
jno
iret
dec
add
dec
in
arpl
add
push
arpl
dec
jo
cdq
dec
or
ss
sti
push
imul
adc
or
mov
xchg
frstor
xor
xchg
jbe
and
sbb
lock
mov
adc
add
add
dec
repnz
xor
in
je
pop
dec
lods
ss
inc
or
push
mov
add
imul
scas
or
iret
mov
shl
mov
sub
fwait
mov
in
aaa
pop
call
cld
mov
push
pop
inc
add
aad
inc
sti
or
pop
add
mov
movs
pop
(bad)
loope
sub
or
das
pop
push
movs
aam
mov
push
or
cmps
ss
cmp
loop
pop
data16
pusha
pop
xor
ror
xchg
and
es
dec
xchg
xchg
hlt
xchg
push
retf
add
or
jmp
ins
out
xchg
bound
bound
push
iret
repz
iret
and
out
neg
jnp
cld
push
(bad)
push
repnz
add
or
dec
out
test
ret
push
xchg
mov
shr
push
adc
mov
or
add
cs
jo
adc
add
aam
add
imul
add
inc
inc
in
or
or
in
add
dec
add
stc
or
(bad)
fisubr
fcom
and
pop
iret
jmp
aaa
mov
and
xchg
or
push
inc
add
xor
imul
enter
push
jmp
mov
push
call
sbb
sbb
stc
push
xor
dec
jle
push
movs
cmp
and
movs
cmc
mov
ret
lods
das
data16
sahf
sbb
shr
rcl
test
inc
mov
sbb
daa
cli
call
sbb
push
nop
add
mov
mov
sub
mov
add
jae
ins
push
push
cmp
sbb
xchg
push
mov
ret
imul
jne
fidiv
adc
jg
ins
and
jnp
aam
and
lods
mov
push
cld
cmovbe
inc
popa
adc
adc
mov
and
pop
adc
or
daa
xchg
push
xchg
adc
mov
das
mov
add
cmp
sub
sub
adc
je
mov
or
sbb
popa
and
inc
data16
mov
sbb
add
mov
stos
js
xlat
inc
in
sub
jmp
ret
cli
xor
xchg
les
mov
mov
or
sub
xchg
sbb
xchg
enter
cmp
adc
adc
arpl
dec
jb
mov
xor
inc
xor
sub
cdq
xchg
dec
test
popa
and
sbb
ret
icebp
ja
adc
jmp
test
mov
or
pusha
xchg
test
push
push
test
and
pop
ror
int3
in
push
sub
push
jl
clc
sbb
xlat
adc
clc
imul
movs
mov
add
pop
xchg
(bad)
sbb
xlat
popf
xchg
out
xchg
ret
or
daa
pop
jp
and
lahf
loopne
mov
in
and
lods
jns
push
mov
mov
mov
pop
push
loopne
or
mov
push
scas
inc
dec
pop
push
push
sbb
sbb
mov
sti
movs
and
sub
mov
xlat
mov
mov
add
sahf
mov
pop
scas
sub
sub
cmp
xchg
jb
ds
mov
or
or
stc
xchg
adc
push
std
push
mov
add
dec
fidivr
movs
xchg
sbb
push
push
jne
cmp
jno
outs
push
xor
mov
inc
nop
xchg
add
mov
or
cdq
push
add
and
fadd
mov
addr16
icebp
push
sti
add
sahf
std
loopne
jne
aaa
mov
pop
add
outs
clc
xor
out
test
jne
and
mov
cmc
cdq
nop
cdq
mul
adc
loopne
clc
inc
in
clc
mov
ins
call
jo
mov
imul
mov
push
(bad)
repz
mov
ins
popa
enter
cmp
mov
out
in
or
sub
retf
hlt
enter
xor
imul
sbb
cwde
(bad)
lea
lock
add
jle
and
fadd
mov
je
sub
ins
jg
or
arpl
fdiv
inc
loopne
and
data16
sub
mov
out
mov
mov
jae
adc
shl
mov
adc
jne
add
push
add
push
jge
xor
arpl
rep
shl
xor
dec
cld
shl
fsubr
outs
jmp
push
mov
pop
ret
mov
or
out
adc
adc
jecxz
jmp
pop
dec
lods
xor
hlt
popf
ins
loop
ror
mov
ret
aam
aam
sub
or
adc
adc
dec
dec
dec
ds
mov
scas
fcmovne
outs
dec
ror
fwait
or
mov
adc
xchg
pop
or
sub
leave
jae
enter
jae
leave
sar
add
xchg
enter
xchg
mov
cmpxchg
enter
mov
xor
cmp
mov
nop
sbb
cmp
jmp
mov
and
loop
push
mov
xchg
je
pop
nop
shr
scas
adc
push
mov
scas
sbb
xchg
inc
and
aam
push
and
or
inc
cmc
sar
mov
adc
fmul
aad
adc
mov
stc
or
cdq
cmps
dec
scas
pusha
das
cmp
inc
sbb
mov
sbb
dec
loopne
push
dec
push
push
hlt
jae
std
adc
push
push
call
cmp
arpl
loopne
hlt
hlt
mov
ja
mov
lock
popa
mov
xlat
mov
imul
push
(bad)
dec
sub
mov
mov
dec
movs
lods
jo
add
push
and
add
clc
out
hlt
test
mov
and
push
sti
push
or
popa
jmp
or
xor
lock
push
out
add
mov
mov
adc
mov
xchg
fld
retf
push
push
add
fisttp
adc
call
mov
mov
dec
test
jl
inc
and
call
das
dec
data16
pop
pop
mov
adc
mov
adc
xor
mov
add
dec
jne
mov
je
push
retf
or
dec
aaa
and
les
xchg
xchg
or
iret
add
inc
adc
xchg
call
enter
dec
pop
adc
ins
fsubr
xor
shr
dec
push
fldcw
int3
in
mov
xchg
sbb
xchg
dec
pop
add
push
pop
add
ficom
iret
or
cmps
bound
pop
xor
out
test
cmc
push
cmps
sub
cmps
into
repz
pop
dec
inc
mov
clc
xchg
xor
rol
dec
pop
inc
lock
push
pop
sub
int3
fstp
mov
mov
pop
retf
mov
inc
xor
dec
push
fdiv
inc
rcl
data16
fidiv
movs
out
pusha
in
xchg
in
adc
cmps
mov
jmp
jmp
inc
lea
dec
push
and
add
ds
xlat
loope
pop
and
xor
and
dec
addr16
repz
(bad)
mov
aas
xor
pushf
out
pop
int3
push
add
push
imul
popa
loopne
(bad)
ja
lods
pop
clc
add
adc
sbb
scas
add
sbb
push
pop
inc
mov
outs
lods
adc
inc
js
adc
stos
gs
call
or
adc
add
int
jp
shr
arpl
fld
ret
in
dec
push
psubusb
imul
jmp
adc
xor
cwde
jmp
ret
jl
cli
mov
mov
das
adc
lods
sbb
mov
inc
ins
loopne
add
call
cmp
add
mov
add
imul
lods
test
aaa
stos
push
sahf
shl
stos
out
jmp
add
in
mov
ss
adc
mov
cmp
ret
ins
sar
push
xlat
mul
jl
adc
pop
mov
and
add
adc
or
sar
(bad)
int
je
cli
jne
xchg
fild
(bad)
dec
std
and
pop
ss
jb
das
push
pop
and
hlt
inc
sub
jns
imul
out
fucomp
jbe
(bad)
aad
jge
push
ror
xchg
popa
inc
mov
mov
cmps
mov
aam
lahf
mov
jmp
mov
sbb
xchg
pop
rol
fist
inc
outs
arpl
xor
lods
add
adc
xchg
pop
push
and
lea
mov
pop
les
xchg
idiv
test
mov
mov
mov
pop
nop
push
pop
dec
stos
mov
push
xor
add
shr
jmp
add
call
add
test
test
icebp
and
fcom
mov
sbb
lods
push
mov
mov
xchg
jno
mov
dec
or
leave
sbb
or
jecxz
adc
mov
sub
ret
scas
lea
inc
dec
fwait
out
call
ret
pusha
or
or
sbb
and
pushf
jmp
jg
je
lea
ja
mov
rcr
sahf
idiv
push
fcomip
mov
push
jmp
sahf
cld
and
cmps
daa
shl
mov
xor
or
push
add
push
pop
adc
or
xchg
cwde
inc
sbb
iret
cld
cmp
sbb
cmp
mov
inc
scas
pop
(bad)
pop
push
mov
es
and
das
add
jnp
push
out
xchg
sub
cs
outs
xor
and
cs
test
sbb
mov
cmp
adc
ds
jo
push
aam
mov
lods
push
sbb
mov
mov
scas
mov
jo
pop
call
mov
mov
or
lock
retf
mov
or
add
fdivr
jle
xchg
mov
ss
fs
xor
add
int
es
jg
leave
sbb
push
mov
call
pop
sbb
mov
or
xor
loopne
outs
out
das
sub
pusha
mov
fdivr
mov
scas
mov
(bad)
mov
push
aaa
mov
add
jg
adc
adc
push
fcom
gs
or
in
adc
mov
fcom
push
add
lods
xor
les
mov
adc
jbe
jecxz
ret
jmp
jmp
sub
pop
sub
cmp
lds
dec
jne
adc
xchg
mov
loopne
xor
aaa
ret
std
push
xchg
push
es
add
pop
jge
add
push
sub
add
clc
mov
test
addr16
push
(bad)
hlt
daa
mov
xor
mov
pop
jecxz
jmp
push
mov
push
sub
or
pop
scas
(bad)
xchg
sbb
hlt
aaa
fdiv
jecxz
push
xor
dec
fimul
pop
or
xchg
dec
pop
mov
sbb
int
adc
scas
(bad)
push
pop
(bad)
fnsave
leave
push
xor
das
xchg
mov
mov
dec
cmp
cs
jb
mov
sub
inc
popa
popa
xchg
lea
cmp
sbb
mov
les
shl
xchg
fisubr
xor
popa
xor
pop
mov
xlat
jbe
test
add
add
push
push
xor
dec
pop
dec
add
adc
cmp
and
repz
ds
push
sub
lods
xor
mov
fistp
adc
push
adc
or
into
aam
mov
fmul
dec
imul
sbb
pop
xor
adc
sbb
inc
adc
dec
pop
pop
pop
pop
(bad)
jl
fistp
test
call
jmp
ror
leave
enter
aam
xchg
shl
jnp
lods
lods
(bad)
pop
jl
mov
add
shl
ins
or
and
cmp
aas
sub
inc
dec
out
and
sbb
ret
jo
js
mov
xchg
ret
and
mov
add
(bad)
rol
push
or
lahf
loop
push
imul
mov
and
shr
dec
jbe
or
and
or
mov
and
jne
lea
dec
xchg
xchg
mov
jmp
pop
xchg
movs
cs
pop
aas
mov
fisttp
lds
mov
and
push
pop
xchg
arpl
mov
dec
inc
loope
pop
pop
pop
stos
sar
mov
push
dec
mov
(bad)
sub
adc
imul
das
int
dec
mov
mov
mov
add
or
repnz
dec
or
imul
adc
adc
rol
(bad)
into
cmps
fdiv
add
mov
jnp
outs
sbb
or
xor
dec
jae
mov
(bad)
dec
xchg
xchg
jns
sbb
jmp
add
xchg
in
rcl
jmp
pushf
cld
xchg
inc
sar
or
(bad)
lea
sbb
push
mov
adc
(bad)
and
aaa
jmp
jmp
or
push
les
scas
ins
cwde
nop
mov
(bad)
sub
ret
mov
inc
(bad)
pop
push
pop
ins
xchg
inc
inc
pop
jmp
mov
and
rol
cld
push
push
mov
gs
test
mov
inc
out
and
add
mov
and
jnp
mov
call
push
pop
std
adc
lock
out
jecxz
(bad)
mov
cmp
jp
jne
xor
arpl
mov
mov
sbb
inc
and
xchg
imul
cmp
mov
lods
ret
bound
ja
adc
pop
inc
enter
out
add
mov
mov
xor
and
popf
clc
or
in
fs
pop
xchg
(bad)
push
(bad)
push
or
mov
mov
es
mov
cld
mov
scas
(bad)
adc
arpl
push
fnstcw
adc
prefetch
fdivr
mov
sub
and
push
inc
push
inc
push
test
add
xor
(bad)
sbb
cld
jns
mov
pushf
sbb
and
sub
pop
pop
mov
xor
sbb
xchg
sub
inc
xor
xchg
unpckhps
mov
jnp
sub
outs
xor
sub
test
mov
addr16
repnz
loope
mov
push
pop
clc
into
add
das
adc
cmp
dec
retf
push
ds
cmp
je
inc
mov
jne
push
cwde
pop
sbb
(bad)
mov
adc
out
xchg
xchg
add
jns
push
in
in
adc
and
mov
les
or
xchg
sbb
je
or
mov
mov
sbb
dec
dec
inc
pop
mov
mov
adc
or
mov
lods
add
cmp
xor
xchg
pop
ror
ds
adc
adc
cwde
(bad)
add
mov
test
sub
jle
iret
jae
sbb
mov
sar
ja
adc
iret
sbb
dec
enter
cmp
adc
xor
mov
inc
ret
mov
xchg
mov
ficom
test
test
pop
dec
sub
dec
gs
test
lahf
ss
adc
mov
adc
xchg
ror
pop
ret
push
test
push
iret
lahf
fimul
mov
rcr
or
adc
lds
cmp
jmp
loopne
arpl
mov
arpl
push
jb
das
mov
push
sbb
push
cmps
ins
mov
push
or
fs
scas
imul
enter
clc
dec
dec
shr
ds
rcr
and
pop
js
sbb
xor
sub
pop
shr
or
cmps
outs
pop
sub
dec
or
jge
sub
lds
aam
ja
mov
add
aad
and
push
(bad)
aam
aam
dec
repz
add
or
dec
push
(bad)
mov
(bad)
fild
out
and
mov
mov
dec
nop
out
enter
mov
and
ins
fistp
push
rcr
mov
or
(bad)
xlat
(bad)
sub
pop
ds
enter
mov
jo
arpl
jo
pop
jae
loope
repnz
scas
popf
or
into
test
push
ja
sbb
inc
dec
inc
dec
adc
cmp
or
pusha
push
imul
push
test
and
dec
out
mov
je
cmps
loopne
and
dec
pmulhuw
inc
hlt
pop
and
out
cwde
and
gs
push
or
pop
inc
outs
fs
je
mov
rcl
into
pop
leave
lea
out
xlat
pop
mov
push
lock
add
iret
or
push
cmp
shl
(bad)
(bad)
out
outs
in
nop
fidiv
add
pop
rcl
sbb
add
rol
test
and
push
xchg
pusha
fsub
fldenv
push
pop
pop
mov
xchg
test
or
cmpps
add
mov
or
push
sub
add
mov
ins
or
call
push
in
retf
jp
mov
xchg
imul
cmp
loopne
push
retf
dec
ja
int3
push
and
xchg
(bad)
data16
xlat
push
or
in
push
lock
adc
pop
xlat
adc
clc
or
push
jae
adc
pop
push
aaa
dec
in
dec
or
cld
fisubr
jb
xlat
ja
xor
jno
or
inc
mov
dec
push
fmul
jbe
and
pop
inc
sbb
and
or
in
loopne
ins
fisttp
pop
cmp
xor
or
addr16
sahf
xor
mov
push
loop
cdq
fadd
jge
jge
stc
jmp
aam
add
mov
sbb
cmp
and
and
dec
ret
sbb
retf
mov
sub
xlat
enter
mov
sub
loope
pop
mov
push
shr
nop
sbb
push
xchg
push
mov
sbb
xchg
mov
fwait
push
pop
add
or
add
or
jl
cmp
jl
pop
jo
mov
cmp
jl
nop
jl
rcr
mov
and
push
shr
(bad)
and
clc
add
lock
fmulp
(bad)
push
push
into
popf
fstp
pop
into
pop
es
pop
cmp
test
fadd
imul
rol
mov
xor
push
add
sub
ins
sub
sub
inc
jmp
sbb
xchg
add
sub
es
cmp
and
xor
mov
pop
movs
push
mov
or
je
xor
mov
sub
sbb
xchg
test
pushf
call
std
rcl
mov
push
mov
push
cmp
pushf
enter
or
fdiv
adc
popa
dec
outs
push
loope
retf
sub
xlat
popa
add
and
loopne
cmp
or
dec
test
add
push
jb
sbb
push
rol
lods
adc
adc
pop
(bad)
push
pop
push
adc
push
push
sbb
jno
and
jne
dec
cmp
or
inc
inc
enter
cdq
or
and
rcl
adc
adc
(bad)
cwde
sub
ds
arpl
jnp
inc
push
adc
loop
and
fsub
popa
jbe
das
daa
or
daa
mov
add
or
xchg
xor
ss
lods
imul
std
jb
or
mov
mov
mov
mov
ret
xchg
push
fsubr
add
mov
aaa
pusha
xlat
add
icebp
add
xchg
cli
or
or
mov
add
xchg
push
cmp
xchg
xchg
pusha
sti
sub
jae
pop
jmp
je
sbb
rcr
dec
nop
push
cmp
ret
inc
and
sbb
add
shr
mov
lea
add
add
fidiv
push
push
fisttp
adc
cmp
iret
mov
retf
iret
dec
mov
cmp
rcl
cmp
pop
dec
(bad)
add
adc
pop
pop
sar
push
add
inc
sti
mov
shl
mov
shl
fisub
jbe
push
mov
mov
sub
or
xor
or
ja
sub
js
leave
pop
lds
add
jne
adc
in
shr
mov
das
mov
mov
or
dec
mov
cmp
jge
loopne
outs
or
or
sub
and
pop
clc
adc
xor
inc
jg
jne
rcl
ret
xchg
adc
mov
sbb
inc
(bad)
or
jp
add
push
mov
sbb
pushf
sbb
pushf
inc
inc
aam
nop
js
inc
add
cmp
ja
adc
ja
sub
push
and
hlt
jle
stos
push
xchg
xchg
xor
in
jne
or
and
mov
push
mov
(bad)
popa
mov
dec
mov
jo
sbb
outs
in
dec
shl
daa
push
mov
ficom
ins
rol
pop
mov
lahf
mov
movs
xor
sbb
xchg
jne
push
loop
nop
test
data16
mov
cmps
test
jnp
imul
xchg
inc
xor
sar
std
pop
cs
or
sbb
xor
adc
add
shr
call
inc
adc
fistp
dec
mov
std
sub
lods
scas
cmps
sub
and
sbb
(bad)
scas
mov
js
push
add
mov
mov
test
inc
fadd
push
lea
pop
icebp
test
push
or
lea
test
in
xchg
push
pop
clc
shrd
mov
in
jp
cmps
(bad)
push
adc
lahf
or
enter
push
les
test
jecxz
pop
dec
add
mov
mov
stos
mov
dec
or
inc
(bad)
je
inc
mov
imul
xchg
mov
test
sub
das
pop
pusha
xchg
cdq
adc
retf
push
test
push
dec
xor
call
adc
std
add
dec
and
xchg
lods
push
inc
adc
adc
add
clc
push
adc
dec
in
dec
jle
adc
pop
mov
sbb
xchg
push
sbb
(bad)
(bad)
pop
adc
adc
pop
push
mov
shl
sbb
sbb
push
jg
mov
mov
pop
imul
jp
loop
int3
call
add
rcr
sbb
and
add
sbb
(bad)
call
clc
sbb
dec
fst
lock
cmp
mov
xor
mov
sub
xchg
js
push
add
and
sub
or
xor
out
add
xor
push
sbb
sbb
jne
imul
or
out
dec
sub
sub
push
pusha
pop
push
imul
mov
ror
stos
not
cdq
xor
or
andnps
fisttp
les
or
add
mov
sbb
sbb
mov
inc
mov
inc
cmp
mov
pop
and
dec
sub
xor
rol
movs
call
rcl
cmc
mov
lods
push
mov
movs
sub
add
lods
std
add
mov
sbb
je
movs
cmp
pop
ffree
xor
jmp
jno
jl
xchg
add
outs
or
out
adc
or
stc
jbe
test
(bad)
jne
xchg
lods
cmp
mov
daa
popf
sbb
add
inc
imul
mov
mov
fsub
mov
inc
push
repz
ss
and
lahf
inc
fld
sub
add
hlt
xchg
add
int
pop
sbb
sbb
cmp
test
sbb
and
push
inc
pop
dec
mov
aas
pop
int
xor
xor
movs
lock
scas
mov
sar
dec
lea
dec
lea
jg
inc
je
ror
mov
mov
jmp
or
in
and
dec
dec
xchg
cli
ja
lea
dec
cmps
adc
loope
shl
jmp
push
popa
nop
in
inc
cmp
xchg
ja
cld
(bad)
mov
sbb
push
inc
pop
and
xchg
sbb
mov
and
xor
and
dec
sub
test
add
push
getsec
inc
test
pop
in
pop
movs
adc
push
dec
out
mov
push
xchg
or
pusha
xchg
out
jns
pop
(bad)
pop
test
(bad)
jg
aas
xchg
add
adc
(bad)
clc
test
xor
and
add
sbb
das
nop
xor
popa
aaa
and
sbb
pusha
popa
push
ja
push
lea
ja
xlat
ret
xlat
adc
jmp
adc
or
jns
movs
push
pop
jbe
fcomip
mov
lds
outs
sub
push
rcr
dec
je
mov
daa
push
out
inc
mov
repnz
pop
in
mov
ret
sti
adc
mov
or
icebp
cmc
pop
xor
pusha
call
jecxz
rol
pusha
push
sbb
adc
retf
mov
jae
js
lock
jnp
mov
mov
xor
lea
dec
xchg
and
sub
xchg
sbb
shl
test
mov
push
add
ret
mov
add
pushf
pop
or
cs
retf
inc
add
mov
dec
cmc
ss
xor
cmp
es
push
push
and
test
test
cmp
hlt
(bad)
cmp
add
or
fld
adc
mov
push
leave
sbb
push
or
xchg
mov
jno
scas
imul
test
cli
dec
xchg
dec
mov
or
retf
lahf
dec
jbe
in
xchg
inc
lea
scas
pop
iret
and
mov
add
(bad)
iret
add
mov
(bad)
or
rol
adc
add
inc
mov
inc
adc
push
inc
adc
pop
dec
rol
sub
xor
stos
cld
and
sub
sbb
ret
mov
jno
jge
test
adc
not
clc
ins
mov
ds
adc
jo
jmp
mov
add
jns
dec
push
pop
outs
push
rol
aad
mov
ret
and
stc
adc
adc
pop
push
or
inc
dec
add
pop
loopne
ins
fprem
xor
mov
imul
mov
shr
adc
inc
add
cmp
je
xchg
jae
sar
mov
cli
cmps
or
mov
ins
retf
repz
cmp
stos
scas
nop
jg
xchg
mov
in
rcl
dec
jge
test
inc
add
sub
dec
inc
push
and
mov
mov
jno
push
inc
ret
or
test
dec
nop
pop
pop
mov
sub
sub
mov
adc
sbb
add
jl
push
inc
imul
mov
adc
fs
call
lods
and
std
inc
lods
cmps
sbb
fcomp
push
jnp
xchg
add
sbb
ins
jo
bsf
shr
ret
(bad)
adc
inc
adc
inc
cmp
jge
mov
cmc
repnz
fdiv
and
int
lods
push
nop
cdq
mov
mov
cmp
ror
dec
mov
add
push
pop
hlt
sbb
fnstsw
jmp
fisttp
pop
xor
cmps
fld
stos
push
xchg
add
add
enter
shr
mov
cmp
inc
xchg
xor
jg
in
test
lock
or
call
xchg
sub
mov
cmp
pop
jmp
pop
inc
add
sbb
and
xchg
rcr
jno
push
add
add
mov
push
les
or
or
inc
std
xor
or
xor
add
(bad)
mov
fmul
or
out
movs
jg
sub
aad
lds
dec
mov
adc
push
cmps
adc
dec
push
arpl
mov
mov
mov
rcr
jo
addr16
or
into
and
pusha
push
xchg
or
retf
and
jle
inc
clc
nop
pop
adc
inc
rcr
inc
xchg
cs
inc
and
push
jne
or
and
ins
jmp
or
mov
leave
or
inc
xor
dec
mov
inc
pop
mov
test
cdq
pop
js
xor
add
jo
mov
test
mov
das
sbb
mov
push
xor
mov
add
xor
or
ds
sbb
inc
xor
push
cmp
je
fisubr
inc
ret
or
push
neg
xchg
cmp
push
push
mov
jno
pop
or
lods
sub
lods
jmp
sbb
xchg
add
test
retf
test
mov
cmps
mov
int3
fcmovbe
inc
mov
push
fst
add
pop
mov
adc
mov
jmp
cwde
dec
ins
xor
sbb
add
jge
mov
in
shld
sub
and
or
jo
or
push
stos
lock
and
sub
xor
sbb
sub
ja
sbb
jno
(bad)
sub
sbb
neg
popa
and
sahf
pop
mov
xor
mov
or
sbb
push
mov
es
mov
lods
sub
retf
add
in
nop
data16
add
loopne
pop
clc
loope
or
pop
adc
inc
or
xor
call
mov
and
or
or
fisttp
fdivr
xchg
mov
nop
test
fdiv
inc
cmp
sbb
inc
imul
inc
sub
fiadd
pop
xchg
push
and
or
pushf
sbb
lock
in
mul
idiv
pusha
out
(bad)
add
add
add
xchg
cmps
nop
push
cmps
add
adc
cmp
and
xor
mov
and
mov
imul
push
push
inc
enter
stc
mov
test
inc
pop
clc
outs
dec
mov
and
push
repnz
push
xchg
clc
inc
sub
shl
jo
sbb
dec
or
jnp
adc
lock
push
cmp
fs
or
and
shr
(bad)
cmp
adc
pop
mov
outs
mov
mov
sub
inc
and
into
(bad)
xchg
add
and
out
mov
pop
xor
or
add
add
pop
jp
test
sub
push
add
pop
shl
dec
jb
push
or
mov
pop
inc
and
out
js
add
cmp
(bad)
mov
mov
jmp
add
ret
fmul
repz
sbb
or
xchg
fucom
jecxz
data16
int
xor
pop
add
pop
pop
or
sbb
push
add
pop
cmp
add
aaa
add
std
out
sbb
or
aaa
push
and
xchg
jne
cmp
lea
test
push
int
mov
dec
push
or
mov
sbb
mov
inc
xor
pop
loop
out
sub
and
mov
scas
(bad)
mov
xchg
sub
mov
jle
inc
or
aam
test
sbb
cli
push
es
sbb
daa
ret
lea
out
inc
and
adc
pop
call
xlat
add
or
adc
rcr
xchg
(bad)
test
es
es
sbb
pop
hlt
(bad)
xchg
cmps
test
out
int
scas
push
retf
cdq
call
jmp
cmp
push
iret
movs
jmp
mov
and
jmp
dec
hlt
test
sub
nop
in
es
iret
fst
aaa
xor
or
mov
lods
test
or
(bad)
fdiv
aam
mov
xor
inc
ret
pop
sub
ror
add
dec
jo
mov
mov
rol
enter
or
rol
mov
add
and
and
sahf
ss
xor
sbb
add
outs
dec
sbb
sub
pusha
mov
add
and
mov
sbb
sbb
mov
cmc
dec
bnd
jmp
mov
ins
sti
sbb
push
dec
jnp
dec
mov
xor
mov
xlat
cmp
adc
or
jp
dec
add
jg
in
push
loopne
mov
push
add
scas
push
or
xchg
inc
shr
cli
imul
clc
lahf
and
jl
(bad)
xlat
push
es
sbb
pop
(bad)
lea
sahf
shl
and
dec
aas
push
xchg
mov
or
inc
sub
add
sbb
and
add
add
jne
(bad)
movs
movs
repnz
imul
xchg
xchg
xchg
loopne
rcr
shl
sub
add
imul
or
mov
inc
and
and
pusha
fimul
mov
inc
movs
aad
adc
push
dec
jge
sbb
cld
shr
mov
mov
shr
xor
ret
mov
inc
test
lock
add
dec
and
or
adc
and
sar
jg
or
dec
jne
pop
loopne
fsub
jle
js
mov
and
push
push
fiadd
jo
xchg
pop
rcr
rcr
and
sub
jne
outs
xor
mov
in
push
push
add
add
or
jg
cli
push
es
cmovb
push
inc
inc
xor
retf
cs
adc
cwde
je
dec
or
in
out
cmps
movs
sbb
xor
pause
push
and
sub
jae
pop
cld
pop
rcr
sub
shl
or
in
jl
mov
pusha
lock
mov
jns
loopne
mov
stc
mov
jl
jmp
(bad)
repz
rcr
test
icebp
hlt
jnp
push
jmp
pop
sbb
or
pop
pushf
push
dec
pop
movs
xor
shr
sbb
sub
cmp
or
mov
mov
jmp
retf
add
jne
add
sbb
and
inc
jmp
in
add
or
push
add
clc
call
add
sub
mov
mov
xchg
push
movs
(bad)
pop
out
fadd
test
push
pop
xor
out
jae
popf
rol
inc
and
dec
and
add
ins
mov
and
dec
js
mov
xchg
add
fiadd
add
pop
test
cmp
xor
push
rcr
mov
xchg
js
lea
dec
push
enter
jmp
or
mov
nop
pop
mov
fs
jmp
sbb
retf
ja
cs
dec
mov
lds
sub
add
and
sbb
aam
or
in
ja
in
jnp
(bad)
dec
cmp
out
and
adc
inc
push
dec
and
adc
cmp
mov
and
push
add
sbb
mov
rol
jo
pop
sbb
mov
sub
pusha
out
xchg
jmp
cmp
pop
sub
arpl
lahf
ret
add
or
add
pop
daa
fild
cs
lea
std
sbb
popa
rcr
inc
mov
ss
aam
dec
sbb
dec
mov
dec
mov
loopne
lea
add
jns
and
or
mov
rcl
and
fsubr
adc
in
fld
mov
lahf
sbb
loopne
aad
mov
ret
inc
push
xchg
outs
mov
sbb
cmps
lods
adc
push
clc
xchg
jne
cmp
fidiv
nop
sub
in
popa
jmp
or
push
sub
add
or
push
enter
scas
jl
xor
push
sub
psadbw
test
xchg
int3
sbb
add
or
sub
sbb
xor
or
mov
sub
cmp
jl
xchg
dec
adc
pop
mov
ins
jbe
movq
je
mov
sub
mov
mov
int
mov
inc
adc
pusha
xchg
xor
ffreep
and
cmps
dec
inc
mov
test
popf
adc
aam
loopne
fidiv
cli
dec
xor
sub
call
sbb
jg
pop
inc
call
mov
jge
adc
loopne
dec
jne
das
add
add
ret
mov
add
mov
das
icebp
xor
mov
adc
sub
adc
jge
test
test
popf
jb
cmp
or
mov
ror
in
repnz
daa
and
lods
sbb
jg
loop
or
push
and
repnz
cmps
inc
xor
test
xchg
mov
ret
push
push
inc
lods
dec
les
xor
js
xlat
int
mov
icebp
sahf
sbb
mov
or
ret
jo
mov
xor
adc
adc
push
jmp
mov
test
cmp
add
arpl
inc
jl
sbb
int
jl
sbb
cwde
pop
out
pop
shl
(bad)
push
in
pop
pop
mov
fcmovne
(bad)
scas
sub
inc
and
mov
ins
dec
je
push
and
sub
stos
or
or
jmp
sbb
pop
fist
dec
cld
cmp
xchg
out
push
sti
sub
aas
inc
sbb
or
or
sti
in
adc
add
add
out
pop
inc
jno
cmp
dec
sub
sub
and
mov
sub
sub
repnz
mov
xchg
lock
lods
push
test
cmp
sub
rcr
cmps
adc
cwde
rol
add
call
fnstenv
sbb
imul
add
mov
sub
gs
arpl
out
in
lods
ins
out
and
lods
lods
(bad)
add
and
sbb
cli
lods
aam
or
sbb
cld
xor
sub
fwait
stos
dec
push
mov
gs
ins
inc
pop
or
push
adc
imul
inc
sub
fdivr
xchg
and
ret
or
shr
icebp
add
xchg
add
cmp
jae
sbb
xchg
add
movs
pop
mov
xor
stos
xor
movs
add
adc
sbb
xchg
fsubr
mov
mov
outs
or
fwait
sbb
test
dec
stos
or
inc
jo
loopne
fmul
sub
sbb
or
push
or
jl
jne
add
iret
scas
add
add
pop
mov
add
frstor
add
fstp
and
mov
pop
bound
adc
iret
mov
loopne
add
xchg
or
xchg
add
out
jo
mov
jmp
outs
pop
inc
add
sbb
sti
rcr
xor
mov
es
cmps
add
and
imul
sub
fiadd
ret
push
xor
clc
jb
pushf
jmp
int
sahf
ret
sbb
push
rcl
call
push
cmp
arpl
lods
xor
inc
sbb
mov
sbb
dec
push
sbb
sar
ret
lods
sbb
cdq
movlps
lds
lea
retf
push
sbb
test
adc
rol
sbb
or
inc
fcomp
jbe
imul
mov
sub
xor
add
test
add
test
cmp
mov
loopne
pop
mov
dec
xor
mov
adc
idiv
ror
(bad)
and
xchg
pop
rol
std
ror
or
inc
rcr
(bad)
pop
cmp
xor
xor
xor
and
fdiv
in
adc
or
jmp
(bad)
sbb
out
test
std
push
sub
add
jb
mov
jmp
call
push
xor
push
jb
pop
les
dec
xchg
lock
sub
or
sti
mov
call
sub
xor
adc
mov
mov
dec
or
or
in
add
or
sub
mov
fidivr
mov
ror
dec
mov
fnstsw
scas
and
or
inc
hlt
pop
inc
adc
and
sbb
sbb
jne
jo
ds
ja
sbb
pop
and
pop
pop
bt
jb
xchg
test
mov
loop
test
lods
outs
adc
cmp
add
fnstsw
and
pop
mov
xor
arpl
lahf
xor
add
cmp
add
add
mov
retf
ja
cmp
jbe
mov
adc
pop
hlt
ins
adc
and
sub
and
lahf
dec
xchg
xchg
test
stc
sbb
push
arpl
cmp
in
in
mov
push
fmul
int3
ret
adc
test
clc
nop
dec
inc
add
pop
push
mov
or
in
mov
(bad)
in
sti
popf
adc
(bad)
cdq
push
xor
xchg
xchg
cmp
jne
sub
jns
sub
lea
les
sbb
xor
aaa
mov
lock
and
inc
or
mov
les
arpl
fwait
jle
jge
add
sbb
pop
add
pop
add
test
inc
clc
pop
rol
push
(bad)
pusha
mov
call
inc
inc
ret
nop
cs
xor
retf
arpl
mov
xlat
and
mov
push
push
sub
xor
pop
clc
(bad)
int3
les
add
sub
jmp
and
fwait
ja
aaa
mov
pop
xor
and
icebp
lea
lea
or
add
(bad)
or
inc
or
rol
outs
loop
or
add
adc
adc
stos
int
adc
mov
add
call
outs
mov
or
(bad)
mov
rol
or
and
and
cmp
js
cmp
xchg
add
stc
les
sub
je
jg
mov
inc
aas
mov
(bad)
mov
inc
pusha
or
inc
or
daa
(bad)
les
and
jg
pop
inc
push
cmps
fld
fcomp
popa
add
lds
add
push
and
mov
inc
inc
adc
(bad)
shl
push
pop
push
push
data16
aas
sub
fxch
fyl2x
dec
mov
pop
push
mov
or
lods
dec
sub
in
or
shl
test
mov
lods
add
loopne
xor
loope
add
or
imul
fld
imul
dec
cdq
ds
and
cmp
pop
pop
cmp
test
aas
xchg
mov
inc
mov
inc
int
add
cmp
gs
and
inc
sub
xor
pop
mov
jle
inc
xor
xor
push
rcr
mov
les
and
push
xor
das
jbe
mov
sbb
inc
mov
jp
pop
adc
call
sub
lea
psubb
xchg
xor
mov
daa
lock
adc
outs
or
cmp
mov
or
lock
call
hlt
test
pop
ins
stos
xor
mov
stos
or
inc
xchg
cmp
push
in
fs
(bad)
cwde
and
dec
cmp
cwde
sub
fs
sbb
and
jmp
push
and
cmp
loope
and
sbb
push
sbb
mov
push
pop
sub
mov
pop
add
inc
mov
mov
push
int3
les
in
sub
cmp
clc
leave
gs
add
ror
pop
push
ret
push
inc
outs
loop
mov
nop
(bad)
add
sub
xchg
add
mov
or
push
pop
fild
inc
addr16
pop
popf
inc
iret
adc
ins
or
ud2
inc
out
sub
imul
into
arpl
inc
aaa
aaa
add
scas
push
jo
popa
and
jno
cmp
dec
mov
sub
add
arpl
jp
loopne
cmp
add
xchg
retf
push
xor
rol
mov
adc
xor
sbb
(bad)
xor
sbb
(bad)
lea
pop
push
sbb
sbb
ret
lods
in
push
adc
or
les
add
sbb
or
and
dec
adc
cmp
jmp
ins
movs
daa
nop
adc
mov
out
rcl
xor
cmp
bound
mov
jmp
dec
xor
js
out
(bad)
loop
ins
mov
scas
lods
pop
(bad)
and
sub
push
sbb
sbb
test
cli
mov
pop
cmp
adc
pop
sbb
or
add
and
clc
lods
das
sbb
and
cmp
jbe
dec
xor
fdivrp
inc
cs
or
push
jne
or
aas
or
inc
xchg
out
nop
nop
xchg
xor
loopne
aas
in
test
mov
add
out
fsub
or
xchg
ja
or
pop
les
pop
pop
add
arpl
mov
xchg
ins
adc
and
fs
jnp
adc
scas
cmp
test
dec
movs
mov
sub
jmp
in
mov
jno
popf
cmp
fdivr
clc
push
test
adc
inc
les
mov
xor
and
or
inc
mov
xchg
or
push
test
cmp
lds
dec
fsub
fadd
jl
xchg
add
movs
mov
or
add
in
inc
mov
adc
add
sbb
xor
mov
mov
xlat
cwde
cmc
dec
mov
xor
dec
xchg
jge
inc
inc
es
jno
ret
retf
dec
or
cwde
out
inc
fwait
xor
test
cdq
mov
push
xor
sbb
adc
pushf
or
jnp
(bad)
add
mov
mov
ret
mov
mov
sbb
pop
push
mov
sub
inc
cmps
mov
and
jge
shr
push
push
ret
and
nop
adc
add
add
je
into
inc
mov
add
add
sub
dec
test
pusha
and
mov
jno
ss
cmp
xor
or
ins
ins
test
cmp
std
sub
test
imul
add
or
cmp
mov
adc
(bad)
outs
dec
xchg
data16
mov
int3
add
nop
nop
mov
enter
into
movs
int3
cmp
or
sub
add
mov
mov
dec
nop
dec
jp
int
cmp
neg
add
add
cmp
inc
rcr
mov
adc
sub
dec
or
out
sbb
inc
sub
dec
sbb
retf
dec
inc
sbb
stc
add
adc
add
aam
aad
sbb
push
enter
mov
sub
int3
cld
xor
out
les
in
add
pop
es
mov
add
xor
push
sub
daa
jmp
inc
and
push
sbb
sti
rcl
call
shl
add
pop
sbb
retf
xor
out
invd
sbb
add
mov
nop
mov
adc
fdivr
inc
sbb
nop
lds
inc
(bad)
adc
mov
jge
dec
add
mov
jo
or
pop
xor
add
iret
push
or
push
outs
push
cli
add
push
test
push
arpl
les
leave
or
sar
dec
push
mov
add
rol
dec
xor
pop
hlt
xor
adc
mov
popf
in
adc
inc
pop
or
fs
sbb
jmp
movs
movs
dec
xchg
xchg
ret
mov
mov
or
pushf
cmp
add
jl
cmps
pop
inc
and
lds
inc
loop
mov
jmp
ror
jge
inc
and
inc
dec
neg
add
dec
and
mov
add
mov
sbb
inc
add
adc
mov
xchg
sbb
and
ins
js
fstp
push
push
push
mov
or
pop
ja
adc
call
or
sbb
dec
popa
adc
xchg
cmc
jae
add
cmp
sub
and
bnd
sub
sub
or
les
psubd
or
jnp
and
push
lock
(bad)
call
movs
cs
push
stos
sub
push
dec
pop
inc
mov
fwait
loopne
mov
and
jmp
std
and
retf
xchg
cmps
xchg
rcr
out
and
xor
bound
sub
mov
in
mov
xor
fsub
push
mov
fmul
pusha
dec
inc
pop
pop
pop
test
(bad)
fst
ss
cmp
repnz
mov
cld
es
mov
add
pop
pop
adc
imul
xchg
jo
mov
add
jne
test
imul
popa
push
add
push
add
cmp
xchg
adc
cmp
adc
nop
sub
mov
or
jne
push
dec
xchg
les
les
scas
in
xchg
or
test
sbb
and
mov
(bad)
sub
dec
aas
inc
or
stc
arpl
dec
sbb
or
call
ret
mov
loopne
aad
cdq
in
mov
and
xor
xchg
add
inc
js
imul
cmp
rol
test
xor
lds
push
out
(bad)
rol
test
jo
jno
std
xchg
ror
nop
xor
iret
pop
sti
(bad)
and
mov
push
ss
sbb
or
xorps
push
lahf
inc
leave
and
inc
(bad)
xor
movs
push
sbb
stc
xchg
sub
pop
iret
push
push
mov
cmp
jb
or
inc
data16
mov
sbb
pusha
call
adc
dec
aas
(bad)
in
pop
and
inc
adc
jmp
and
in
adc
sub
or
xchg
shr
inc
mov
movs
push
mov
push
(bad)
inc
jl
adc
push
nop
fdivr
xor
test
(bad)
inc
add
mov
out
mov
pop
cmp
dec
sub
fs
push
je
xchg
rcr
shl
push
std
pop
sbb
ins
or
mov
mov
je
adc
or
mov
push
jg
sti
sbb
(bad)
lahf
ss
push
pop
iret
test
pusha
mov
xchg
cdq
dec
sbb
or
sbb
out
inc
gs
jae
xor
add
enter
mov
push
cmp
jne
xor
jge
sbb
cmc
mov
sbb
jp
add
faddp
or
popa
cmp
cs
cmp
je
test
inc
inc
loopne
push
xchg
inc
add
stos
mov
pop
mov
lods
mov
pop
loopne
add
mov
xchg
jp
mov
(bad)
int
mov
js
arpl
xor
aad
add
ja
xor
sar
in
dec
jmp
xchg
scas
shl
(bad)
or
xlat
mov
pop
fisub
pop
dec
ins
adc
aam
arpl
jmp
loop
adc
jb
cli
push
imul
out
test
es
mov
and
outs
fmul
mov
dec
add
fs
rcl
loopne
jge
and
push
inc
loopne
fbld
ror
mov
mov
mov
adc
xor
adc
das
imul
sub
xor
sbb
aas
pop
ds
mov
pop
mov
inc
movs
push
xor
js
mov
iret
retf
(bad)
addr16
imul
shr
adc
pop
nop
nop
clc
inc
dec
jne
dec
imul
out
cli
ins
push
push
mov
lods
repz
jecxz
mov
shr
sar
mov
mov
adc
cmp
rcl
mov
cwde
push
inc
cmp
push
aaa
retf
xchg
mov
inc
cmp
pusha
shr
aaa
sti
mov
cmc
push
or
icebp
or
jbe
sahf
push
add
dec
mov
push
or
sbb
add
mov
cs
inc
pop
add
(bad)
cmc
fs
cmc
adc
or
outs
pusha
shl
add
movs
sbb
rcr
in
mov
jmp
cmps
out
xor
je
pop
jnp
mov
sbb
or
and
adc
sub
out
and
inc
adc
stos
dec
adc
xchg
pop
mov
inc
aaa
(bad)
xchg
inc
and
or
addr16
pusha
call
test
lods
xor
test
outs
sbb
lea
arpl
or
movs
repnz
xchg
out
imul
or
into
and
jmp
pop
imul
sub
mov
pop
jnp
jmp
aam
inc
ss
mov
shl
inc
imul
cmp
cmp
push
xor
ja
sub
add
pop
and
and
int3
and
out
cmp
out
out
jmp
adc
aas
lock
and
inc
aaa
cmp
adc
mov
fcom
lea
jp
or
or
inc
mov
xchg
mov
xchg
jne
aaa
mov
add
inc
mov
xchg
cmc
lds
fdiv
jae
in
add
add
shr
or
enter
hlt
sbb
cmp
pop
(bad)
or
rcl
fs
stos
sub
mov
popa
jle
(bad)
outs
jno
mov
fwait
int3
sub
clc
add
adc
sub
or
lgs
add
xor
pop
inc
push
mov
(bad)
jmp
loopne
mov
imul
push
lea
add
scas
loope
pop
dec
ror
nop
test
fcom
add
sbb
push
imul
call
sub
inc
inc
dec
in
inc
ss
xor
lods
mov
adc
sub
push
scas
jne
xchg
sub
movs
jmp
je
pop
add
fwait
clc
cmp
test
mov
bound
ror
dec
inc
inc
outs
dec
cld
iret
inc
dec
pusha
ins
mov
add
(bad)
pop
jo
in
retf
test
and
xchg
call
imul
clc
pop
cs
retf
in
hlt
pop
fcom
mov
sbb
loopne
rcr
and
mov
add
test
inc
and
scas
mov
adc
sbb
mov
ja
jno
and
jl
out
dec
add
dec
(bad)
and
and
jg
jae
add
xor
add
inc
jne
dec
push
loopne
adc
push
addr16
and
jo
dec
jb
(bad)
and
aad
sbb
inc
inc
aas
push
movs
adc
lods
sbb
loop
repz
jo
xor
dec
arpl
icebp
push
je
cmp
gs
imul
cs
dec
(bad)
and
cmp
jecxz
xchg
push
push
mov
push
sub
pop
add
(bad)
(bad)
adc
adc
push
ret
popf
test
inc
sbb
pop
mov
nop
movs
mov
cmc
add
jne
mov
xchg
movs
and
mov
fwait
cdq
(bad)
fisttp
popf
dec
inc
push
popa
push
(bad)
mov
sub
pop
mov
dec
sub
ficomp
cmp
sbb
sbb
mov
sub
mov
sub
sbb
and
rol
outs
mov
aam
xor
popa
xor
aaa
xor
pusha
sub
fucomp
jle
ins
add
mov
mul
or
xchg
ret
imul
cmp
pop
in
adc
imul
retf
cmp
dec
add
xchg
sbb
fild
add
fild
adc
push
pop
xor
xchg
mov
mov
and
popf
jmp
bndldx
mov
and
adc
push
fadd
or
sbb
adc
sti
fsub
(bad)
call
int3
and
and
nop
scas
inc
test
inc
or
push
dec
xor
lea
xor
cmp
cmps
xchg
les
dec
sub
imul
cmp
leave
rol
ror
sbb
inc
lds
scas
rol
and
pop
sub
add
nop
sbb
jmp
mov
outs
add
mov
adc
mov
push
inc
mov
and
aam
push
sbb
call
and
and
bound
cwde
inc
xor
mov
jg
ss
ss
push
inc
jg
mov
sbb
xor
sub
jno
dec
xchg
adc
mov
std
dec
mov
jo
sbb
fild
inc
inc
adc
lods
add
push
cmp
xor
or
mov
push
and
adc
outs
popa
mov
fmul
ins
sbb
sub
aas
xchg
call
scas
cmc
call
dec
ja
xchg
(bad)
cmps
test
cmp
and
mov
or
nop
cmp
arpl
out
or
xor
push
push
jne
xor
mov
es
push
and
test
jmp
sbb
in
scas
push
(bad)
add
not
(bad)
je
pusha
mov
cwde
(bad)
loopne
and
mov
push
push
jmp
movs
xchg
adc
adc
jmp
pop
add
fdivr
inc
mov
pop
mov
inc
xor
xchg
mov
nop
bound
sbb
xchg
mov
mov
mov
xor
enter
and
or
xchg
je
sti
pop
inc
cmp
and
ret
popa
inc
pop
call
xor
enter
inc
or
fild
scas
add
or
sbb
call
add
jae
cmp
push
sbb
outs
jg
xchg
inc
mov
adc
pop
sbb
mov
std
dec
xor
daa
mov
jmp
adc
cwde
adc
mov
std
sub
adc
xchg
dec
cdq
jle
cld
(bad)
inc
inc
cmp
je
fs
lock
inc
in
adc
lods
shl
add
aaa
cli
cmp
mov
mov
adc
push
mov
sub
into
push
mov
push
sbb
or
aad
cwde
rcr
outs
cmp
cmp
push
das
sub
lahf
sub
add
mov
xor
push
or
adc
enter
push
push
mov
test
mov
and
cmp
adc
cwde
mov
icebp
jne
(bad)
xor
jo
mov
imul
mov
add
adc
jns
cwde
add
pop
push
adc
sbb
loopne
popa
sub
add
and
std
das
inc
shr
pop
enter
sub
sub
inc
xor
inc
cmps
push
rcr
pop
add
clc
inc
(bad)
adc
sub
dec
push
and
pop
mov
shl
lea
test
pusha
mov
sbb
jo
shr
cmp
mov
ins
mov
ss
push
repz
mov
in
aaa
inc
add
mov
or
lock
hlt
add
or
or
jmp
push
or
sbb
clc
(bad)
in
cs
mov
mov
fwait
arpl
stc
sbb
pop
xchg
jno
xchg
add
movs
jbe
sbb
or
(bad)
loopne
xor
inc
add
dec
cwde
and
adc
or
aad
ret
(bad)
fmul
pop
push
pop
sbb
and
push
or
mov
enter
jns
add
jmp
adc
test
or
and
inc
inc
xchg
arpl
pusha
add
cwde
mov
add
and
xchg
pop
ins
sti
loope
cmp
mov
push
pop
or
xchg
in
adc
out
or
adc
sbb
pop
fist
je
inc
xchg
or
not
sub
(bad)
inc
sbb
inc
(bad)
lahf
adc
sbb
enter
inc
int3
push
call
xor
pop
(bad)
and
add
rol
pop
add
fisttp
sbb
pop
xor
pop
out
dec
lock
push
sbb
push
aas
cld
mov
lea
pop
push
test
or
lahf
rcl
sbb
sbb
pop
or
cwde
sar
push
and
jns
jo
inc
mov
out
je
jle
add
xor
mov
arpl
push
test
cld
jae
jge
test
cmp
and
pop
adc
jge
sbb
pop
and
push
ss
push
rcr
sub
sbb
jmp
ins
imul
jp
aam
loopne
imul
and
mov
add
in
inc
lahf
mov
cmp
lods
cs
pop
rol
xor
push
into
push
pop
jnp
xor
pop
xor
pushf
inc
fadd
daa
adc
jp
xor
add
add
pop
sbb
push
test
rol
sbb
and
xor
nop
in
add
add
dec
sbb
aas
arpl
or
test
cdq
xchg
es
bnd
sbb
add
cs
xchg
cmp
jmp
push
jecxz
sti
add
addr16
and
repz
(bad)
jmp
test
dec
in
dec
and
dec
je
pop
jbe
jns
repnz
push
and
add
dec
or
mov
sub
xor
dec
gs
add
dec
or
mov
rol
iret
sbb
adc
ins
mov
outs
or
push
or
push
and
ins
daa
inc
jmp
sbb
mov
fsubr
mov
jnp
rcl
jae
mov
(bad)
mov
mov
pop
ret
sbb
xchg
cmp
push
add
es
adc
repnz
mov
inc
push
sbb
or
jmp
mov
pop
lock
sub
and
jbe
push
das
adc
cmp
sbb
jmp
cmp
ds
jns
fs
mov
push
pop
or
adc
mov
and
add
xor
aaa
adc
nop
push
sbb
test
push
sbb
or
fbld
das
sbb
in
arpl
xchg
and
and
and
and
das
and
mov
cmp
dec
sbb
mov
imul
mov
enter
adc
fmul
dec
rol
and
loopne
dec
sbb
push
mov
mov
cld
jns
lods
inc
sbb
scas
ja
je
or
jle
add
adc
xor
xchg
push
jne
or
mov
mov
push
jp
sbb
arpl
fcom
push
sahf
mov
jle
jb
mov
xor
fs
rcl
sbb
and
gs
shl
and
and
mov
out
or
xor
xor
cmps
or
and
mov
and
sbb
rol
nop
xchg
xchg
aad
sub
cmp
jle
mov
inc
mov
inc
add
mov
mov
cmp
adc
dec
inc
ret
aad
push
and
dec
mov
mov
push
xor
nop
sub
push
push
nop
(bad)
iret
mov
mov
lock
mov
hlt
adc
hlt
test
pop
mov
adc
ror
in
ins
xor
test
in
sbb
xor
xor
mov
movs
lea
inc
es
push
lds
iret
xor
sub
push
add
push
neg
xchg
add
in
push
push
aas
dec
cmp
jno
pop
stos
in
and
mov
lock
test
dec
jne
add
push
(bad)
xchg
sub
das
push
or
add
sub
xlat
inc
pop
inc
sub
mov
and
adc
and
sahf
ss
xor
add
(bad)
rcl
xor
in
dec
pop
pop
dec
les
mov
fincstp
or
push
das
sbb
jo
out
dec
sub
in
mov
and
repnz
push
sub
or
jo
imul
dec
jle
push
jb
and
dec
sti
jge
xor
fbstp
ror
in
mov
jmp
mov
out
cmp
and
adc
imul
mov
pop
jnp
ss
push
mov
test
push
pop
push
into
int3
in
das
adc
adc
sbb
mov
mov
adc
clc
rcl
les
dec
mov
cmps
push
adc
adc
rcl
cs
push
or
in
xor
div
and
or
rcl
outs
pop
rol
add
(bad)
aam
dec
push
movs
add
mov
or
sub
xor
and
fdiv
mov
adc
dec
movs
fild
jge
or
mov
pop
je
movs
fdiv
sbb
mov
or
fsubr
adc
inc
dec
cmp
push
or
(bad)
mov
(bad)
jmp
inc
cs
xor
and
outs
(bad)
or
inc
or
and
xchg
mov
inc
fs
inc
push
popa
add
push
dec
pop
inc
ror
and
lock
pop
add
in
out
(bad)
fadd
adc
sub
sbb
add
adc
add
and
test
xor
cmp
xor
add
mov
xor
inc
fsubr
mov
jecxz
inc
dec
xchg
in
mov
push
sbb
add
xchg
inc
in
cmp
adc
pushf
and
xor
adc
inc
and
add
push
sbb
mov
mov
and
inc
and
adc
mov
ja
xchg
or
pusha
mov
lea
adc
adc
dec
inc
xchg
lods
fst
das
inc
enter
sub
pop
es
jge
mov
xor
and
sub
xchg
frstor
retf
pop
xor
enter
cmp
out
fsub
xchg
fcom
cs
xor
inc
loope
ds
loope
punpcklwd
push
dec
mov
push
push
cmps
pusha
mov
lods
add
js
or
ret
outs
mov
pop
mov
div
add
push
test
bound
data16
mov
movs
rol
xchg
adc
mov
and
xor
(bad)
push
add
lds
fs
push
dec
jmp
push
sub
sar
push
cld
push
inc
push
repz
push
les
push
rcr
or
sub
push
jbe
push
dec
test
mov
adc
ja
cmp
hlt
lea
scas
pop
mov
cs
and
movs
xchg
in
inc
sbb
outs
and
sbb
cdq
fadd
inc
lahf
mov
rcr
sbb
xor
leave
jg
nop
gs
aam
mov
sbb
pushf
mov
push
sbb
into
adc
popa
pop
or
in
cmp
add
jne
jle
or
mov
inc
rol
jno
cmp
out
inc
push
pop
aam
inc
pop
rcr
add
mov
mov
jnp
add
inc
add
aad
and
cmps
nop
mov
add
loope
pusha
and
xlat
icebp
lods
pop
and
jle
or
stos
retf
xor
add
or
movs
mov
cmps
sub
adc
mov
out
or
add
add
or
ret
inc
sub
fwait
and
inc
or
adc
xor
push
xchg
jle
sbb
ror
xor
test
or
push
bound
jne
jmp
and
and
je
dec
add
leave
stos
stos
sbb
pop
xlat
add
popa
adc
frstor
adc
ins
push
inc
test
mov
das
iret
add
push
add
or
mov
xor
mov
fst
mov
mov
push
mov
hlt
push
sbb
inc
xor
repnz
das
mov
out
aaa
pop
inc
stos
hlt
sub
jmp
addr16
jmp
cmp
and
push
push
lahf
mov
xchg
push
pop
aam
xor
ret
sar
sbb
sub
add
inc
push
pusha
push
out
out
ss
push
mov
add
add
std
int3
lock
test
cld
loopne
add
dec
mov
into
movs
inc
adc
loopne
(bad)
shr
in
inc
jne
nop
adc
mov
add
mov
or
dec
shl
jmp
or
sub
fidiv
popa
cmp
(bad)
or
mov
sub
outs
(bad)
cli
nop
add
mov
mov
out
push
das
push
loop
enter
test
cmp
loopne
mov
adc
push
push
ret
mov
cmc
xor
inc
mov
fldenv
push
or
cmp
pop
repnz
fadd
mov
fistp
and
push
add
pusha
repnz
gs
xchg
xor
mov
push
div
dec
in
push
ret
pop
dec
dec
sbb
push
pop
xchg
lds
or
ins
es
sub
xchg
movs
xor
pop
sti
mov
sar
add
xchg
dec
or
inc
or
or
and
xlat
mov
xlat
and
or
jmp
xor
or
adc
aas
or
adc
(bad)
in
dec
add
push
or
add
popf
adc
adc
xor
je
iret
hlt
sub
dec
inc
adc
add
sub
xchg
hlt
pop
loopne
mov
es
sbb
test
push
sub
and
es
retf
cmp
icebp
add
push
push
aam
add
inc
imul
xor
je
sbb
or
je
sub
movs
or
inc
cmp
out
(bad)
push
(bad)
push
or
outs
adc
ins
and
jp
push
in
adc
rcr
add
or
stos
add
push
imul
sar
ret
mov
xchg
or
test
test
test
inc
and
loop
adc
shr
jne
mov
nop
add
add
push
sbb
xchg
xchg
add
rol
add
jmp
stos
sahf
and
jbe
imul
repz
add
loop
xor
add
gs
or
rcl
push
sub
jecxz
cli
xchg
adc
(bad)
xchg
adc
js
adc
dec
loope
leave
inc
and
xor
adc
aaa
sbb
push
inc
(bad)
pop
mov
xchg
daa
push
sbb
imul
stos
push
add
js
daa
dec
jecxz
aas
ficom
xor
xor
mov
rcl
enter
popa
inc
dec
mov
add
mov
jne
adc
pop
iret
dec
sbb
inc
inc
shl
bound
mov
xchg
out
mov
inc
xor
in
or
adc
test
adc
fld
pop
push
xchg
aaa
xor
clc
jecxz
adc
sbb
pusha
mov
test
clc
loope
dec
xor
add
aam
jmp
inc
mov
lea
nop
and
xlat
mov
sub
pop
pop
fisubr
inc
fild
leave
je
dec
imul
pop
inc
cs
jo
dec
js
inc
pmulhuw
dec
sub
cmc
sub
imul
inc
xor
and
sbb
movs
mov
sbb
dec
dec
cs
add
pop
xchg
retf
or
ins
pop
out
(bad)
xadd
push
repnz
jns
arpl
arpl
pop
jmp
retf
xor
out
icebp
nop
cmp
xchg
push
add
mov
inc
cmps
inc
leave
push
pop
sub
mov
or
mov
mov
sbb
push
jmp
outs
call
dec
mov
adc
adc
push
mov
js
dec
sub
xor
push
jnp
add
retf
addr16
ins
out
dec
psllw
pop
push
jno
xchg
hlt
out
or
pop
test
pop
out
fs
ror
jns
jo
jg
imul
add
push
xchg
ret
(bad)
pop
mov
or
and
mov
xchg
les
lahf
pop
push
mov
or
jbe
pop
add
push
pop
fimul
stc
xor
arpl
ds
ror
push
xor
popa
arpl
adc
pop
push
push
xor
add
xor
push
pop
mov
add
shl
and
mov
or
inc
mov
out
mul
pop
pop
ins
push
and
and
jo
mov
arpl
pop
clc
fdivp
xor
hlt
cld
or
push
mov
add
xchg
es
mov
mov
push
add
or
sbb
dec
add
or
add
inc
xchg
mov
clc
xchg
mov
inc
jge
ja
mov
dec
ret
adc
pop
mov
iret
repz
sub
jl
dec
pop
fs
sbb
sub
jae
lods
loop
adc
dec
adc
sub
loopne
and
and
leave
mov
inc
mov
scas
add
ja
jbe
add
aad
in
and
mov
dec
loope
lods
push
push
add
cmp
push
(bad)
cli
outs
sar
loopne
xor
ret
out
inc
lods
add
inc
push
push
idiv
push
add
std
or
adc
aad
pop
mov
int3
ror
into
jmp
cdq
inc
pusha
and
icebp
sub
sbb
mov
stos
and
sbb
add
cmp
mov
push
sub
and
fnstsw
sub
sub
(bad)
push
hlt
pusha
(bad)
cmps
xor
or
fmul
push
loopne
cmps
push
movs
adc
scas
or
popa
add
ja
lods
or
jo
hlt
mov
adc
in
dec
mov
ret
cmps
inc
das
sub
nop
dec
inc
adc
mov
xchg
mov
fbstp
sub
mov
test
into
addr16
scas
movs
hlt
and
pusha
dec
test
dec
test
shr
movs
in
pusha
scas
(bad)
push
adc
push
adc
sbb
adc
iret
call
or
pop
mov
mov
shl
int
inc
add
dec
clc
adc
jae
xchg
sbb
push
(bad)
mov
and
and
(bad)
das
outs
push
(bad)
pop
pop
mov
add
jnp
inc
dec
push
add
icebp
dec
mov
sub
sbb
push
addr16
fnstenv
sub
fimul
sbb
dec
dec
mov
pop
mov
mov
aam
icebp
nop
nop
rol
dec
push
sar
imul
les
pushf
cmps
leave
fst
mov
adc
jle
shr
add
dec
push
add
mov
add
test
rol
mov
dec
enter
cmps
lock
and
test
add
int3
or
mov
dec
cmp
popf
xor
outs
imul
ret
and
mov
cmps
pop
cmp
pop
mov
outs
inc
add
xchg
xchg
call
fs
ret
daa
push
cmp
aaa
rol
addr16
and
rcl
push
sbb
mov
add
sub
push
xchg
movs
out
ds
push
push
sahf
sub
add
rcr
sub
mov
aaa
into
add
sbb
in
adc
and
and
push
into
out
add
pop
jg
or
sub
movs
add
add
ret
xor
loopne
sbb
xor
cmps
(bad)
mov
xor
and
fld
push
(bad)
pop
add
add
fs
pop
push
aas
sub
sbb
mov
add
adc
add
add
push
out
cli
call
retf
setbe
push
pop
mov
loope
sbb
push
movs
add
dec
xchg
in
out
cmp
stos
call
or
ja
or
popa
sahf
and
call
jns
adc
int
gs
and
js
fwait
add
adc
lock
pop
pop
jb
and
dec
rcl
adc
adc
pop
pop
addr16
cmp
cld
and
and
inc
push
xchg
and
and
push
push
sbb
inc
imul
movs
in
js
xor
mov
jecxz
ss
push
ss
fimul
push
dec
in
jmp
pop
scas
add
add
adc
push
lds
(bad)
retf
xor
in
xlat
or
inc
push
and
das
mov
inc
push
adc
test
fmul
or
mov
sti
xor
xor
loope
cmps
sbb
out
or
and
mov
mov
fwait
jo
ss
test
adc
and
ins
loop
(bad)
and
jnp
mul
sbb
int3
int3
(bad)
sahf
fadd
in
ja
fwait
cmp
hlt
mov
mov
ds
push
pop
cld
inc
imul
out
push
sub
nop
(bad)
call
(bad)
outs
dec
mov
push
shr
sub
mov
push
ins
(bad)
ins
and
int3
jnp
imul
jbe
push
mov
xor
adc
cmp
dec
and
fwait
push
outs
ror
mov
imul
xor
add
ins
jnp
inc
xor
push
pop
pop
xor
imul
push
add
pusha
or
rol
xor
add
movs
gs
mov
test
sbb
pusha
mov
pop
mov
ror
outs
add
and
pusha
add
mov
jp
and
pop
mov
push
pop
pop
dec
(bad)
adc
test
retf
sbb
sbb
pop
add
adc
xor
cdq
or
inc
push
add
out
mov
push
(bad)
or
sub
gs
test
jmp
sahf
sub
sub
or
mov
sahf
inc
jmp
add
push
push
or
data16
cmp
and
sbb
loop
cmps
mov
movs
inc
pop
mov
adc
mov
stos
adc
xchg
xor
jmp
sbb
ins
mov
jo
cs
es
ja
and
mov
ja
or
add
add
(bad)
fdivr
cmps
mov
clc
ins
cmps
add
sar
push
and
ins
inc
scas
dec
cmps
cs
scas
js
add
cmps
sbb
in
cmp
inc
outs
js
or
addr16
xor
or
or
nop
xchg
cs
and
data16
or
xchg
or
cwde
cdq
fs
addr16
js
mov
imul
dec
js
cmp
es
and
addr16
push
and
ins
daa
ins
jb
or
sub
or
jno
aam
jo
test
outs
xchg
and
nop
fmul
outs
bound
jbe
add
pop
in
ds
in
mov
ds
ds
loop
jbe
jbe
xchg
ja
fidivr
sbb
sub
enter
jnp
sar
test
aas
imul
pop
nop
outs
adc
jg
pop
add
jecxz
jae
(bad)
shl
xchg
test
and
retf
ret
lea
out
ds
dec
inc
pop
mov
arpl
dec
(bad)
xor
add
and
cmps
pop
rol
xchg
xor
mov
pop
mov
mov
inc
fs
jns
add
lock
mov
repz
mov
push
jp
sub
push
lock
iret
jnp
push
hlt
and
loopne
lds
xor
sbb
imul
cld
add
outs
adc
cmc
pop
mov
xlat
and
mov
xchg
pop
ret
push
sbb
push
frstor
icebp
dec
cwde
pop
xor
sahf
mov
jae
dec
movs
je
aad
clc
adc
sbb
in
arpl
or
add
inc
or
and
shl
xchg
or
dec
lds
(bad)
pusha
inc
add
push
sub
sbb
test
add
inc
inc
dec
dec
mov
xchg
dec
test
xchg
sbb
jecxz
mov
mov
inc
push
test
ret
hlt
sar
push
xor
lds
mov
test
or
fdivr
sbb
mov
out
sbb
sbb
push
and
and
inc
pop
retf
cwde
push
pop
xchg
sbb
push
aam
mov
adc
mov
int
inc
mov
adc
adc
jge
pop
sbb
mov
dec
aam
cmps
and
add
das
push
add
xor
mov
cmp
icebp
imul
dec
pop
push
and
add
fstp
enter
shr
clc
xchg
cdq
xchg
inc
call
sub
enter
imul
fsubr
jne
imul
or
pusha
adc
add
loopne
shl
push
sub
xor
mov
push
mov
xor
dec
ret
cmp
(bad)
div
cmp
cmp
adc
popa
or
cs
ret
cmps
adc
xor
lahf
adc
iret
movs
test
cli
push
dec
adc
and
jmp
cmps
repnz
jmp
jmp
inc
pop
call
add
es
aaa
or
mov
push
and
repnz
and
push
shl
in
pop
rcr
add
mov
sub
push
clc
push
add
add
mov
sub
sbb
jns
fadd
movups
jmp
or
jmp
add
outs
or
jmp
inc
jmp
les
sbb
sbb
add
inc
push
xlat
push
adc
adc
xchg
in
push
aaa
dec
(bad)
push
and
cdq
es
xor
test
inc
call
js
(bad)
fnstcw
xchg
dec
xchg
add
mov
cmp
lock
inc
mov
add
cmp
mov
(bad)
call
leave
pop
mov
jge
xchg
cdq
jg
jb
stos
cmp
jbe
das
sbb
inc
data16
outs
add
(bad)
push
imul
mov
add
retf
xor
inc
inc
fnsave
int3
pop
jb
sub
pop
add
jmp
xchg
jb
sahf
mov
mov
in
push
dec
adc
pop
pop
ins
mov
push
stos
and
mov
push
adc
sub
pop
(bad)
mov
dec
sub
adc
icebp
jae
dec
pop
inc
ficomp
or
or
fdivr
dec
sub
aam
sbb
push
xchg
adc
sbb
inc
cmp
push
sub
or
mov
or
mov
shr
mov
mov
ficom
lods
mov
push
test
push
or
push
rcl
xchg
(bad)
je
xor
jb
or
(bad)
test
nop
xchg
mov
fcomp
xchg
(bad)
das
cmps
mov
test
test
jno
adc
test
test
idiv
movs
pop
and
inc
and
ss
dec
(bad)
arpl
sbb
mov
das
pop
sti
or
lds
add
test
fs
and
test
loopne
arpl
cmp
jne
or
jge
add
mov
mov
push
je
xlat
jge
gs
pop
adc
nop
add
dec
add
xchg
je
pop
add
sbb
xor
mov
fdivr
cmps
popf
cmp
sbb
es
xchg
cmp
add
nop
fistp
add
nop
pushf
mov
push
dec
xchg
jnp
repz
sbb
push
lods
les
into
repz
in
xchg
push
pop
mov
adc
movs
adc
retf
or
sbb
pop
and
aaa
int
retf
pop
adc
push
test
test
aam
dec
mov
jmp
mov
rol
pop
test
xchg
fadd
mov
test
ins
sub
dec
pop
je
and
mov
jmp
loopne
out
sbb
adc
movs
sub
add
adc
mov
aam
or
inc
je
add
cmps
inc
jo
aaa
sbb
ror
xor
push
(bad)
lock
jo
sub
cmp
jge
add
mov
or
out
pop
mov
repnz
es
inc
jnp
outs
mov
adc
xchg
cli
test
mov
mov
pop
ror
push
fstp
xchg
pop
das
fnstcw
push
or
rcl
xchg
lods
bound
pop
xor
fadd
add
or
lods
inc
push
sub
or
or
neg
sub
sub
mov
add
(bad)
popf
dec
in
pop
xor
and
icebp
xchg
shr
or
mov
pop
mov
scas
jmp
sar
jb
pop
retf
inc
adc
loopne
jb
inc
add
call
dec
fldenv
and
push
sar
and
push
mul
jle
adc
and
xor
pusha
add
adc
cmp
pusha
pusha
add
cmp
xlat
push
adc
mov
adc
dec
xor
fsubr
inc
jle
add
xor
jno
in
jmp
stc
jo
jnp
inc
dec
ds
or
daa
inc
ja
pop
mov
inc
or
pop
int3
not
inc
aam
pop
mov
and
xor
popa
jae
xchg
rcr
push
pop
xor
sti
jmp
or
inc
or
push
inc
sbb
xor
mov
shl
inc
mov
and
or
sub
mov
lock
mov
imul
je
out
xchg
add
dec
cwde
mov
xor
pop
in
mov
xchg
leave
adc
out
dec
pusha
push
push
lods
mov
jo
je
stc
test
sbb
stos
mov
push
sbb
test
outs
inc
inc
inc
mov
das
push
add
ror
mov
dec
(bad)
and
std
or
mov
aam
mov
jnp
jl
push
jle
aaa
sub
div
in
xor
and
cmp
inc
test
ror
mov
or
adc
ss
data16
push
cmc
push
jo
sub
mov
icebp
and
mov
test
jb
and
data16
scas
fidiv
fs
repz
shl
ins
ins
push
push
dec
and
fisubr
jle
pop
test
rol
push
and
and
add
imul
add
inc
add
popf
mov
mov
cmp
push
sub
rcl
imul
add
(bad)
cld
jle
in
mov
dec
xchg
in
xor
clc
and
gs
xor
cmp
push
fadd
in
sbb
mov
(bad)
xor
and
and
arpl
fdivr
pop
xchg
loope
cmp
fld
sbb
or
add
sub
cmps
cdq
jo
mov
push
add
shl
ret
retf
lods
push
sub
cdq
adc
sbb
mov
add
xchg
or
jo
xor
shr
and
pop
das
pop
push
and
add
dec
jmp
mov
and
xlat
lods
push
cmp
cmp
aad
test
pop
inc
mov
inc
and
mov
sub
js
sub
pop
leave
mov
jmp
inc
mov
and
mov
jnp
setb
jno
adc
lods
and
pop
push
mov
add
sbb
shl
mov
add
add
shl
add
call
and
mov
ins
rol
add
ins
adc
repnz
push
cmp
add
push
xchg
xchg
pop
lock
mov
loope
adc
jns
mov
fist
and
xchg
add
lahf
pop
jns
pop
dec
mov
loopne
fmul
fsubr
movs
stos
div
jmp
mov
add
and
cmp
adc
ret
lock
jno
lock
sbb
loope
or
inc
js
cmp
cwde
push
sbb
or
push
nop
sub
push
(bad)
xor
int
or
jnp
push
stos
jo
xor
pop
daa
inc
ret
jne
daa
in
adc
or
jmp
adc
(bad)
jge
adc
and
mov
adc
mov
dec
mov
push
test
(bad)
push
dec
push
dec
inc
push
cmp
out
stos
mov
inc
pusha
scas
pushf
or
cs
adc
push
clc
xor
lods
add
xchg
jge
xor
jno
outs
push
sub
or
pop
(bad)
ins
sbb
add
jae
into
loopne
cli
into
fisttp
xchg
aaa
mov
lea
mov
or
(bad)
(bad)
dec
xlat
lods
clc
iret
ss
add
pop
push
sub
cwde
mov
adc
lock
or
and
xchg
cmp
xchg
lock
mov
and
add
jo
sbb
fldcw
mov
(bad)
int
gs
push
nop
not
lock
adc
mov
pop
adc
adc
jmp
and
mov
add
pop
je
cmp
nop
loope
add
sbb
pop
nop
not
shr
sbb
test
adc
rcl
push
ins
adc
test
shl
imul
jge
arpl
sub
dec
push
cmp
jge
inc
push
mov
pop
and
cmps
xchg
add
clc
xchg
sbb
sbb
iret
inc
aam
sbb
das
or
pop
mov
jbe
add
inc
popa
mov
pop
cmc
and
popa
in
adc
jle
xchg
nop
jbe
add
push
and
ficom
adc
(bad)
test
inc
jp
adc
ins
mov
sti
pop
or
adc
jg
dec
pop
add
nop
jl
or
and
add
pop
iret
push
cmp
inc
xor
pop
cwde
cmp
sbb
cs
pop
loopne
js
push
add
xchg
push
or
mov
xchg
pop
and
xor
pusha
sbb
cwde
adc
sbb
add
mov
adc
jnp
loopne
int
ret
add
mov
rcl
out
add
adc
fld
nop
aam
sahf
mov
pop
sbb
pop
sub
adc
mov
or
loopne
daa
pop
sub
pop
and
or
push
mov
push
xchg
scas
mov
test
dec
and
je
and
(bad)
fadd
sbb
and
cmovno
adc
loopne
getsec
xor
sbb
adc
mov
aas
fdiv
shl
stc
cmp
iret
test
shr
addr16
xchg
mov
pop
and
ins
mov
jg
add
mov
(bad)
loop
in
pop
push
adc
and
mov
push
jge
mov
mov
test
adc
dec
aas
nop
dec
ficom
enter
rcr
mov
pop
pusha
cdq
jmp
fstp
movs
pushf
sbb
jb
pushf
rcl
push
adc
inc
push
les
adc
out
pop
xor
or
jle
or
xchg
or
adc
add
adc
mov
ret
or
or
pop
mov
or
bound
mov
xor
dec
shl
nop
daa
pop
sub
imul
or
mov
add
ret
or
or
sbb
cmps
sub
dec
xor
or
cmps
inc
test
fwait
inc
xor
xchg
int
(bad)
addr16
mov
imul
sub
in
ss
shr
cmp
pop
js
daa
pusha
push
cwde
push
or
or
pop
pop
test
push
push
push
and
push
leave
xor
pop
gs
scas
call
ins
popf
call
add
movs
in
xor
pop
or
push
dec
aaa
or
sub
xor
mov
pop
push
pop
les
push
in
mov
push
sbb
out
jmp
test
sub
and
sysret
sub
pusha
pusha
jnp
pop
sub
and
(bad)
rol
push
xor
cmc
xor
push
or
popa
lods
lock
pop
and
sub
lahf
call
orps
cmps
ins
jmp
retf
cmps
adc
ss
daa
inc
dec
bound
cmp
call
lahf
xor
and
cmp
sti
jmp
lods
or
add
sar
sbb
inc
clc
inc
rol
mov
adc
cmp
pop
imul
mov
cmp
rcr
pop
or
out
pop
imul
adc
mov
hlt
inc
ret
xor
push
inc
add
das
push
sahf
jno
or
and
add
not
adc
popw
mov
cmp
sti
and
jl
call
jns
iret
(bad)
mov
pop
adc
clc
jne
xchg
mov
xchg
push
sbb
push
pop
add
fs
pop
pop
add
mov
and
xchg
jo
pop
cmp
stc
adc
pushf
cli
sub
push
push
sub
cs
or
pusha
inc
push
xor
jb
test
sar
nop
cmps
pop
cmp
mov
mov
or
je
pop
(bad)
stos
inc
sbb
and
push
imul
jge
dec
pop
push
push
(bad)
dec
push
inc
outs
mov
mov
(bad)
push
dec
sar
cmp
adc
mov
jl
loop
adc
xchg
popf
xchg
sbb
fidivr
pop
and
xor
xor
push
pop
add
and
sub
sar
adc
push
repnz
push
push
or
xlat
pop
sub
and
xor
sub
out
and
(bad)
stos
add
sbb
and
add
lods
xchg
and
dec
and
pushf
or
xchg
in
or
push
dec
fadd
retf
or
mov
push
dec
inc
ins
ins
push
jo
jbe
je
mov
jmp
and
aaa
pop
jmp
mov
jmp
or
setno
xchg
mov
rcr
inc
xor
add
or
pop
sbb
pusha
xchg
xor
retf
inc
test
sub
add
cs
pushf
mov
mov
fstp
aam
pop
outs
int
push
hlt
dec
pop
js
adc
test
movs
jo
outs
xchg
jb
in
add
push
hlt
sub
or
cmp
(bad)
jno
outs
movs
xchg
inc
mov
mov
dec
cmp
xchg
or
mov
add
or
pop
mov
adc
loopne
aaa
xchg
push
push
adc
pusha
das
ins
stos
test
and
xchg
add
mov
inc
fmul
fnstenv
mov
cmp
cmp
push
out
and
push
add
sub
lods
and
add
jmp
add
mov
ss
and
rol
and
call
push
jmp
call
aas
mov
daa
mov
add
xor
fisubr
inc
sub
push
fldlg2
fsub
or
aad
call
adc
or
out
inc
sbb
in
mov
jne
dec
xor
push
popa
inc
mov
test
sbb
xchg
xchg
add
dec
pusha
xor
cmp
and
dec
ror
dec
or
jne
xor
mov
sbb
enter
push
push
dec
and
mov
inc
fwait
add
xchg
or
addr16
dec
and
pop
mov
jo
pop
adc
les
sbb
addr16
ja
pop
mov
out
sub
jae
cdq
aam
int
and
pusha
lods
cs
iret
xor
xchg
clc
test
es
clc
test
pop
pop
and
xor
add
test
mov
adc
lods
push
push
ror
mov
inc
add
out
cmp
movs
test
stc
or
add
test
das
in
sub
fld
inc
inc
ja
and
cs
sub
push
dec
cs
sub
add
xor
cmp
xchg
mov
mov
loop
push
lahf
and
sub
mov
sub
fs
enter
scas
add
mov
fucomip
jns
sti
xor
std
sbb
jns
jb
dec
and
sub
in
mov
cmp
inc
jb
fcmovb
xor
pushf
and
in
and
je
sub
mov
je
push
mov
pop
and
call
jmp
mov
jmp
pop
stc
push
test
je
retf
lods
and
gs
pop
pop
adc
add
mov
sbb
push
adc
loopne
and
push
and
out
pop
sbb
pop
pop
mov
mov
xor
inc
xchg
add
xchg
nop
retf
push
test
mov
mov
dec
shl
pop
sbb
sbb
getsec
adc
xor
mov
push
adc
or
mov
lahf
push
cwde
pop
push
(bad)
or
push
test
imul
or
pop
mov
add
cmp
pop
lods
nop
adc
jbe
fisttp
jmp
pop
ins
or
mov
in
cmp
inc
retf
and
pop
push
in
pop
sbb
popa
pushf
sub
ins
iret
mov
cmp
nop
adc
into
pushf
add
lods
loopne
ret
sbb
mov
pop
add
push
pop
dec
loopne
fld
inc
push
test
lahf
movs
test
add
dec
push
daa
sbb
jo
loope
add
jmp
adc
shr
sbb
xchg
les
cmp
shl
dec
fld
mov
or
xor
imul
adc
inc
or
js
sub
pushf
mov
in
sbb
cmp
clc
and
enter
clc
xchg
call
cmp
jno
push
fst
cli
ins
dec
or
inc
and
out
fistp
xor
popa
hlt
leave
in
pop
pop
pop
add
data16
cmp
ja
adc
push
cmp
and
loope
add
add
lock
imul
jmp
mov
cmps
pushw
dec
jae
clc
inc
enter
ret
xchg
add
jae
sar
or
and
fild
jnp
push
sahf
inc
adc
mov
jb
movs
pcmpeqw
les
xchg
push
jne
ins
push
cs
adc
jnp
fadd
out
and
inc
sbb
data16
in
push
retf
iret
fist
cld
jbe
test
outs
and
mov
and
and
bound
lock
or
sbb
and
daa
xor
mov
loopne
lfs
ret
xlat
pop
sub
and
push
and
inc
inc
imul
retf
cmp
sbb
and
add
jbe
mov
and
dec
hlt
rcl
fisub
jo
xor
lods
mov
dec
pop
jo
mov
ins
inc
xor
lods
adc
pop
sub
jns
add
(bad)
push
mov
cmps
add
dec
aaa
add
(bad)
pop
push
nop
mov
sub
(bad)
mov
bound
lock
(bad)
out
mov
xchg
xchg
add
add
inc
mov
out
loopne
ret
test
inc
mov
enter
inc
pop
mov
and
sub
mov
iret
sti
push
push
mov
repz
mov
xchg
mov
mov
ins
daa
pop
xor
push
jge
in
test
or
or
mov
mov
mov
pop
test
push
les
push
push
xchg
ret
aad
and
adc
scas
jbe
pop
xchg
popa
sbb
dec
push
pop
push
adc
sbb
cs
mov
inc
cmp
mov
sahf
out
sbb
sbb
mov
add
push
and
rol
sbb
adc
nop
push
out
adc
sbb
push
shr
sbb
pop
test
xor
(bad)
mov
aam
cs
daa
sub
xchg
imul
daa
jg
ror
call
fadd
nop
push
ror
arpl
mov
sbb
sbb
sub
dec
outs
xchg
popa
icebp
sbb
push
adc
push
scas
test
xor
sbb
ror
xchg
pop
cmp
adc
adc
retf
popf
stos
cmps
add
and
adc
dec
sub
adc
dec
dec
(bad)
mov
imul
jns
jae
arpl
in
leave
jo
push
loopne
push
in
(bad)
push
jnp
push
call
es
mov
daa
test
mov
loop
push
push
inc
mov
add
sub
outs
arpl
(bad)
xor
sbb
xchg
popa
(bad)
fstp
lods
xchg
gs
pop
inc
(bad)
ins
cmps
jne
aas
or
stos
adc
or
pop
sub
mov
or
or
arpl
pusha
sbb
or
nop
xor
xchg
mov
loope
and
clc
jle
and
jp
fidivr
mov
les
call
movs
cmp
and
aad
and
sbb
loop
dec
adc
sub
jno
movs
movs
in
int
call
xchg
sub
test
fild
les
ins
jl
cli
sti
fadd
jmp
xlat
mov
xsaves
dec
inc
lock
push
xchg
sub
pop
sbb
add
mov
pushw
cmps
loopne
test
test
sbb
shl
dec
pop
pop
jnp
mov
fucom
ficomp
mov
mov
push
push
test
and
je
pause
retf
add
inc
js
mov
jne
add
out
sbb
outs
je
mov
cmp
neg
push
daa
adc
xchg
cvtpi2ps
jg
mov
hlt
mov
xor
sahf
push
push
iret
push
mov
sbb
adc
xchg
das
mov
in
popf
jl
pop
add
cs
xchg
adc
pop
les
cmp
cmp
xchg
inc
inc
inc
inc
dec
jne
cmp
xor
adc
idiv
(bad)
mov
mov
and
nop
pop
ins
pop
(bad)
mov
pop
or
aaa
push
ret
jp
mov
das
pusha
cmp
fild
(bad)
in
ins
ja
mov
inc
or
sub
push
mov
ja
in
mov
and
or
fidivr
mov
or
jl
add
cmps
and
ret
jnp
xchg
mov
aas
add
rcl
test
or
cmp
les
dec
mov
fdiv
mov
add
jo
inc
xor
(bad)
clc
inc
push
inc
or
push
xor
test
xlat
lea
xchg
or
call
pop
lahf
clc
call
xchg
xor
jo
lock
ret
or
cmps
and
outs
bound
push
enter
xchg
xor
aaa
or
pop
pop
repnz
ret
mov
je
xchg
sbb
hlt
xor
rol
push
ins
sar
push
mov
inc
in
add
xor
popa
loopne
mov
call
cmps
or
dec
outs
pop
jle
ins
in
scas
xchg
lea
ror
jnp
fist
ret
sar
popa
and
enter
or
mov
mov
mov
xor
push
inc
mov
enter
call
adc
add
pop
xor
sbb
pop
xchg
outs
or
jmp
test
jg
mov
adc
pop
jbe
jp
xor
loopne
mov
fwait
cli
cmp
mov
mov
mov
and
pop
xchg
sub
iret
iret
sbb
ins
stc
popf
jmp
clc
icebp
cwde
sbb
add
pusha
fild
adc
and
in
fidivr
mov
xchg
and
jge
test
clc
add
lods
inc
sti
add
mov
push
xor
loopne
xchg
daa
dec
in
dec
loopne
inc
sbb
xchg
xchg
dec
adc
mov
mov
adc
cmps
rol
or
rcl
call
sbb
jmp
add
sar
mov
lock
inc
pusha
dec
sbb
mov
xor
or
movs
push
dec
xor
dec
fwait
loopne
xchg
or
cmp
mov
xchg
dec
and
mov
push
inc
inc
inc
fist
pushf
(bad)
dec
leave
add
cwde
and
pop
sbb
and
dec
push
cmps
leave
std
add
loope
dec
mov
inc
push
add
pop
jecxz
mov
sbb
push
fisubr
dec
fld
mov
nop
adc
in
or
aaa
cmp
sbb
cmp
jl
clc
ins
mov
pop
in
mov
scas
cld
lods
pop
dec
ss
jnp
ficomp
xchg
gs
add
ins
sbb
movs
xchg
dec
test
dec
add
sub
pop
sub
jb
enter
outs
dec
dec
fbstp
retf
and
ss
jmp
cmp
mov
or
cmp
jo
pusha
sbb
sub
pusha
mov
or
xchg
mov
push
add
xchg
add
loopne
hlt
hlt
sub
out
out
sbb
pop
pop
shl
jmp
mov
dec
xor
fsub
inc
sbb
xchg
and
rcl
(bad)
movs
adc
outs
cmp
in
ins
fimul
call
xor
jb
push
push
or
adc
sbb
in
push
xchg
fcmovnu
push
popa
sub
or
pusha
loope
scas
loopne
ds
lods
ins
xor
lea
out
add
mov
xchg
dec
pop
or
xchg
je
cmp
or
xchg
inc
aam
das
jecxz
pop
ret
add
fdivr
jmp
test
rol
lock
int
sub
dec
dec
(bad)
sbb
adc
or
nop
cmp
shl
xchg
frstor
sub
pop
dec
mov
pop
or
fisttp
add
cmc
mov
in
std
lds
fld
and
push
sub
jae
(bad)
idiv
aas
pop
int3
das
inc
pusha
mov
mov
push
rol
xchg
sub
adc
xor
mov
dec
fs
or
mov
enter
push
xor
loope
imul
jae
jecxz
dec
out
and
pop
inc
pop
jmp
mov
push
add
xchg
and
cs
popf
xor
test
sbb
loop
adc
ds
mov
pop
fistp
cmp
jnp
and
and
mov
ins
add
inc
inc
inc
inc
test
xchg
add
sub
adc
and
jp
or
(bad)
rcr
dec
int
inc
sub
stc
out
call
leave
adc
xchg
xchg
sar
imul
aaa
add
sbb
lahf
sbb
pop
pop
pop
retf
and
xchg
push
iret
test
adc
inc
mov
mov
and
mov
adc
push
(bad)
scas
cmps
call
xchg
imul
leave
sbb
fs
push
and
sbb
shl
inc
xchg
outs
call
sbb
lea
loop
dec
icebp
xchg
adc
adc
push
idiv
jg
dec
arpl
dec
cdq
jne
sbb
sub
out
xor
adc
push
mov
or
pop
and
in
sbb
jae
and
mov
mov
out
add
sub
push
retf
pusha
retf
sbb
retf
(bad)
out
pop
enter
sub
inc
jb
cmp
outs
adc
int3
aas
int3
out
nop
(bad)
jmp
repz
ficom
cmc
dec
xchg
leave
pop
cmp
add
mov
enter
push
sub
dec
xchg
xchg
mov
das
push
stos
jmp
push
and
xor
add
cmp
int
xchg
inc
sbb
fwait
out
enter
into
sbb
(bad)
push
fwait
inc
mov
sbb
adc
push
inc
shl
sbb
out
and
mov
ins
pop
adc
adc
add
cmc
sub
movs
pop
call
sub
sbb
jmp
add
fisttp
cmps
repz
add
xchg
push
das
sbb
arpl
daa
movs
nop
into
scas
cmc
jbe
sub
mov
inc
push
loop
mov
adc
or
scas
ins
popa
add
sbb
push
mov
or
pusha
cmp
inc
mov
push
mov
mov
rcr
sbb
repz
push
test
sbb
push
add
ret
push
ins
adc
cmps
test
sub
pop
lea
cmc
jecxz
stc
lea
cli
mov
enter
rol
push
mov
enter
mov
inc
inc
(bad)
mov
dec
jne
jge
call
or
push
jg
jb
add
adc
add
mov
in
mov
xchg
add
push
sbb
in
sbb
enter
pushf
mov
cmp
adc
inc
push
cmp
adc
add
xchg
sub
mov
cmp
aaa
push
call
xchg
imul
int3
inc
jbe
add
cmp
pop
nop
shl
add
or
xchg
or
imul
fs
and
and
iret
js
fistp
cmps
cs
mov
or
add
(bad)
push
in
popa
inc
sbb
mov
ja
fcom
or
jo
push
jo
jp
arpl
mov
ja
push
pusha
xlat
push
jl
pop
mov
cmp
sbb
mov
pop
or
adc
and
imul
je
adc
ss
je
retf
popa
loopne
sub
movs
rcl
sbb
nop
xchg
and
cmp
push
test
and
xchg
sbb
hlt
clc
cld
inc
xor
stos
and
mov
fcom
pop
jb
pop
or
pmuludq
xchg
and
xchg
pop
pop
pusha
cmp
ins
xor
xchg
and
sbb
add
adc
leave
lods
mov
push
cmp
mov
das
xchg
loopne
call
shl
add
jl
sbb
xchg
mov
dec
retf
xor
jns
out
addr16
popf
scas
out
cmp
xchg
movs
in
test
repz
jnp
sbb
sub
push
(bad)
out
jns
iret
je
aad
xor
out
push
(bad)
jecxz
cmps
outs
mov
add
adc
xor
call
and
out
cmp
repnz
mov
rcl
cld
inc
adc
jle
pushf
test
cld
nop
jmp
xlat
ror
pop
push
mov
jge
dec
or
mov
imul
xchg
inc
std
push
mov
arpl
test
mov
pop
(bad)
enter
es
loopne
lock
xor
outs
es
push
sar
inc
pop
pop
push
daa
xor
cmp
repz
push
je
pushf
test
cmp
repz
ror
cmp
jnp
fadd
cmps
and
xchg
cmp
jns
div
lods
(bad)
call
into
sub
push
enter
rcr
iret
shr
out
fild
cmp
aam
sbb
and
(bad)
jg
adc
mov
mov
mov
add
or
and
or
pop
sahf
add
and
rcl
addr16
cmp
sbb
fsub
add
push
cmp
fist
(bad)
idiv
fisub
dec
js
idiv
shl
push
pop
pushf
in
in
mov
push
test
sub
aam
mov
adc
out
xor
aas
or
ret
cmp
ffree
pop
(bad)
jnp
mov
rcr
mov
and
sti
ss
add
or
(bad)
adc
sar
or
inc
pop
mov
movs
jnp
inc
movs
rcl
push
inc
or
jmp
jno
add
push
add
xlat
push
shl
rcl
das
retf
mov
loop
(bad)
scas
das
mov
nop
js
sub
dec
or
pandn
mov
ret
nop
cs
mov
sub
sar
sub
dec
nop
pop
adc
xor
setp
enter
adc
ja
nop
jo
mov
or
jbe
mov
push
sub
jno
and
aaa
jo
rol
pop
das
and
cmp
or
aas
push
loope
jb
fnstenv
fiadd
inc
or
js
add
mov
mov
mov
mov
dec
std
add
adc
pop
or
pop
scas
mov
fadd
cmp
mov
dec
or
pop
mov
push
xor
xor
cmp
cmp
inc
and
dec
nop
movs
adc
xchg
push
sti
sbb
sti
repz
jb
retf
mov
pop
jmp
sub
mov
add
bound
and
data16
adc
mov
adc
push
inc
cmp
nop
xor
push
lods
cld
jmp
sbb
jge
cwde
mov
(bad)
jg
inc
das
hlt
jl
or
add
push
fiadd
ret
jbe
mov
mov
pop
stos
add
stc
mov
and
jg
int3
add
popa
ins
mov
jmp
mov
mov
test
cmp
ins
enter
mov
daa
nop
dec
mov
jp
sub
jo
push
mov
jns
adc
xor
fstp
jo
add
enter
icebp
pop
adc
or
std
(bad)
cmp
mov
inc
add
dec
mov
push
push
sbb
fcomp
pop
pop
das
add
pop
ret
push
pop
adc
cmp
xor
fldenv
sub
pop
js
pop
add
inc
pop
mov
dec
bound
cmp
js
adc
adc
add
and
mov
mov
push
pop
pop
sub
enter
ret
je
or
iret
dec
inc
dec
add
out
dec
jmp
arpl
test
inc
dec
adc
mov
shl
fwait
outs
or
or
loopne
test
ret
add
(bad)
jo
xor
adc
pop
jnp
ja
mov
cmp
sbb
ja
sbb
sahf
inc
data16
sbb
sub
lea
add
lods
mov
pop
xor
arpl
or
pop
in
and
addr16
in
mov
aam
or
or
(bad)
mov
or
lock
ret
pop
cmp
sub
je
test
or
mov
add
pop
jne
add
mov
inc
daa
test
cld
inc
push
push
pop
rol
out
push
das
sti
es
or
stos
shl
jl
clc
mov
jne
ffree
in
push
enter
mov
rcr
sti
mov
enter
push
push
jnp
movs
inc
sbb
ficom
push
pop
pop
popa
sub
adc
cld
sbb
cdq
cmp
rcl
ss
call
or
ror
sti
or
pop
shr
xchg
fcom
cli
loopne
in
jne
mov
mov
outs
rol
arpl
jae
out
inc
jle
lock
pop
js
call
lods
repz
daa
mov
mov
mov
loope
(bad)
fwait
adc
dec
fwait
pop
or
or
fcomp
inc
mov
retf
loope
ret
xor
cwde
adc
add
loope
bound
sbb
ja
(bad)
les
daa
adc
ss
push
ret
adc
ss
xlat
push
outs
ret
sub
ror
adc
sbb
jp
dec
mul
cmps
xor
xor
cmp
lods
or
rcr
add
movs
push
fisub
pop
fcmove
pop
pop
loopne
add
mov
mov
pop
xchg
mov
cmc
dec
sub
ret
mov
sub
adc
cmp
pop
mov
rcr
xor
imul
push
lahf
pop
xor
sub
(bad)
retf
rol
mov
mov
in
call
pop
xchg
repnz
js
and
mov
(bad)
call
sar
lods
adc
ror
aam
scas
movs
mov
cs
mov
mov
cmp
aam
fwait
adc
retf
cmp
pusha
hlt
cmps
sub
xor
out
xchg
jg
popf
rcl
push
dec
clc
inc
push
rcl
iret
in
stos
pusha
add
hlt
push
pop
cmp
push
or
sbb
pop
inc
cmp
jge
inc
cmp
mul
jno
test
pushf
neg
rol
xor
and
lock
cmp
jne
inc
shl
fsub
loopne
hlt
in
add
and
sahf
ins
call
adc
mov
inc
push
rcl
arpl
add
aam
outs
xchg
add
shl
inc
sub
test
sahf
ret
cmp
dec
xchg
rcr
nop
rcl
cld
lock
dec
push
push
xor
out
adc
dec
ds
cs
sub
loopne
ja
adc
and
cmp
and
arpl
aad
and
test
dec
pop
(bad)
or
ror
lods
mov
push
and
adc
ss
inc
xchg
test
push
test
pop
sbb
push
cwde
adc
and
adc
inc
(bad)
adc
cli
outs
mov
or
add
sbb
mov
nop
data16
and
mov
test
mov
mov
nop
div
sbb
dec
push
scas
inc
jl
test
xor
cmp
add
popfw
test
and
shr
cmps
mov
in
rol
movs
cs
int
mov
test
push
(bad)
jns
daa
push
xchg
mov
push
jmp
out
cmp
movs
test
cmps
(bad)
mov
retf
push
jmp
pop
sub
and
pop
adc
(bad)
and
mov
adc
mov
sub
or
mov
mov
sbb
nop
jge
xchg
xor
and
ret
lock
mov
and
sahf
push
sub
ret
pop
mov
inc
ret
fldenv
pop
ins
nop
das
je
stc
out
loope
sbb
rol
pop
ret
(bad)
lahf
pop
inc
std
stos
push
ds
ss
dec
fisubr
imul
sub
rcr
mov
xor
pop
aas
addr16
or
cs
cld
or
cwde
aam
push
push
jecxz
sahf
xchg
add
push
stos
ja
test
(bad)
pusha
pop
pop
adc
push
and
(bad)
push
mov
mov
call
mov
mov
dec
add
popf
inc
cmp
push
outs
cmp
and
fild
stos
dec
mul
inc
or
cmp
xchg
je
mov
mov
and
pop
dec
dec
dec
cmc
stos
cmp
dec
sar
dec
mov
je
and
jns
pop
cmp
js
add
fsubr
pop
inc
std
mov
or
or
out
push
sub
sbb
xchg
and
push
dec
cmp
popa
push
push
ins
nop
aaa
add
ja
in
mov
pusha
in
cmp
inc
or
push
out
mov
fidivr
xor
ds
mov
adc
scas
cmp
(bad)
adc
mov
pop
int3
icebp
enter
lock
or
js
nop
inc
je
data16
ficomp
and
(bad)
(bad)
outs
pop
test
cmps
pop
sub
or
push
dec
(bad)
xlat
iret
adc
mov
mov
bswap
into
pusha
dec
pop
xor
or
(bad)
push
and
sahf
pushf
dec
ss
not
mov
adc
ja
fisub
dec
retf
enter
sub
sar
inc
xchg
pop
mov
jle
fsub
jge
push
inc
mov
outs
dec
je
pop
inc
dec
push
add
fs
mov
inc
xchg
xchg
and
inc
push
mov
mov
xor
adc
push
add
push
add
sar
adc
icebp
inc
dec
adc
or
add
mov
cmps
mov
les
adc
or
jmp
dec
push
jb
add
ret
sub
ins
mov
fwait
jnp
loopne
fbstp
lods
mov
fbld
push
inc
mov
add
xchg
inc
inc
mov
sbb
and
pop
adc
div
cmp
jne
movs
mov
mov
les
pop
repnz
jno
fsubr
xlat
nop
ins
inc
sbb
retf
mov
and
cmp
and
in
dec
inc
jmp
push
push
push
sbb
push
pop
sbb
pop
popf
mov
sahf
mov
in
pop
add
mov
and
push
movs
cld
jge
pop
inc
inc
push
mov
xor
fisub
ror
shr
or
call
dec
fcmovnu
(bad)
das
cmp
mov
push
and
bnd
js
nop
hlt
cmp
bound
cwde
push
ins
pop
and
xchg
in
inc
sti
in
lock
inc
inc
enter
lahf
push
in
mov
or
push
test
cmp
mov
cmp
and
pmulhuw
mov
add
pop
and
adc
mov
mov
lods
test
lock
adc
sub
icebp
nop
out
mov
cmp
cmp
movs
sub
sbb
in
mov
mov
add
ret
or
xor
mov
jp
test
pop
inc
add
and
and
aam
shl
xor
mov
add
in
add
ins
cmp
das
fld1
clc
push
dec
pop
push
or
mov
inc
bound
push
sbb
mov
retf
pop
nop
inc
xchg
mov
pop
in
dec
xchg
mov
jne
rcl
xlat
adc
(bad)
loope
mov
inc
sbb
or
pop
add
imul
or
adc
out
scas
xlat
sub
icebp
js
test
pop
inc
adc
lods
cmps
mov
sub
sbb
xchg
fmul
jo
push
mov
inc
xchg
jmp
add
adc
bound
adc
sub
xor
test
and
sub
sbb
xchg
mov
sub
test
rol
lea
dec
jb
inc
sbb
(bad)
push
or
mov
sbb
dec
jge
aad
xchg
addr16
fdiv
js
dec
dec
cmps
cmp
push
aam
mov
cmp
push
sti
and
rcr
push
sub
(bad)
loop
shr
imul
retf
push
cmp
xchg
and
pusha
fs
push
mov
adc
sbb
mov
jmp
fwait
add
fiadd
inc
fimul
jecxz
aam
adc
cld
push
sbb
les
in
xchg
cmc
xlat
popa
or
pop
adc
push
add
in
push
and
add
or
leave
cdq
add
jmp
mov
cwde
mov
jo
addr16
push
out
xor
cmp
aaa
retf
push
vcvtss2sd
inc
inc
inc
cmp
jg
imul
mov
cmp
mov
jne
lods
push
fisub
mov
mov
in
jp
xchg
enter
xchg
imul
pop
prefetchnta
add
inc
adc
push
dec
adc
les
xchg
inc
and
xchg
adc
sar
jmp
mov
inc
mov
jmp
mov
mov
stos
pop
cmp
sub
out
(bad)
xchg
and
data16
stc
xchg
inc
shl
add
aaa
sti
(bad)
sar
dec
mov
adc
sbb
sbb
xchg
push
dec
add
cmp
imul
sub
sbb
sub
ret
adc
cmp
int3
jo
push
out
enter
inc
pop
sbb
mov
shl
push
lods
das
movd
out
lea
mov
shl
inc
pop
jb
mov
sub
push
inc
inc
dec
or
lods
ss
push
aas
jns
push
sub
and
sub
ss
sub
mov
xor
sub
push
jo
mov
xchg
push
sub
and
pop
xchg
das
fdivr
fisub
adc
das
(bad)
push
push
bound
and
icebp
push
mov
je
xor
xor
adc
inc
inc
add
lahf
daa
push
push
cs
fs
ins
and
das
or
sub
sub
(bad)
loopne
push
push
mov
push
movs
cmp
cmps
mov
test
pop
xor
lahf
dec
or
cmp
xor
aas
mov
sub
cmp
mov
lds
push
nop
test
(bad)
jecxz
dec
lods
pop
sub
js
dec
push
mov
mov
cmp
inc
or
mov
add
fdiv
inc
push
ds
xchg
aaa
mov
movups
mov
mov
or
add
out
lods
or
mov
and
pop
push
jecxz
fstp
pop
fild
push
sub
test
adc
rol
out
or
dec
dec
push
stos
xchg
ins
test
pop
sbb
and
add
sbb
sbb
jns
dec
mov
pop
popa
sbb
mov
push
cmp
or
adc
nop
out
mov
inc
adc
sub
and
aad
out
dec
inc
das
test
dec
pop
cmps
sbb
fisttp
rol
pop
push
movs
sbb
es
mov
daa
fistp
fmul
push
sub
sub
sub
jb
sub
cs
xor
xor
je
mov
add
pop
mov
mov
inc
js
fcom
xor
push
in
push
add
lods
pop
push
cmps
or
cs
xchg
adc
mov
jnp
add
gs
inc
aaa
cmp
cmp
push
jb
cmp
xor
and
leave
push
inc
inc
or
inc
xchg
or
or
inc
or
pop
xor
inc
jle
nop
add
xchg
or
sti
lahf
and
or
adc
leave
je
push
and
inc
clc
fcom
mov
dec
adc
inc
es
adc
xor
ins
add
push
mov
imul
push
sbb
daa
mov
mov
sub
and
push
(bad)
lock
cmp
and
dec
inc
sbb
push
(bad)
mov
jmp
xor
sbb
leave
out
pop
mov
dec
jbe
fdivr
or
xchg
add
or
das
or
adc
pop
fist
inc
or
dec
sbb
xor
pop
add
popf
call
push
fidivr
repz
or
push
jae
cmp
rep
pop
push
sar
sbb
sbb
inc
adc
cmp
mov
cmp
push
repnz
(bad)
ss
mov
ss
out
jmp
mov
aaa
outs
adc
test
cdq
mov
push
bound
cmp
pop
or
cmp
inc
add
and
xor
and
cmp
cs
adc
imul
or
push
popf
mov
jne
outs
mov
dec
add
cmp
xor
mov
jmp
sub
in
movs
mov
sub
push
rcr
add
xor
pop
hlt
adc
cwde
jle
lock
test
sbb
mov
(bad)
cmp
sbb
add
scas
dec
cmp
mov
cwde
push
das
mov
(bad)
gs
xor
pop
add
iret
and
fcomp
sub
pop
fnstcw
and
fdivr
pop
inc
mov
mov
jbe
mov
mov
or
(bad)
xchg
add
(bad)
test
add
xor
add
mov
jl
cmp
pushf
xchg
sbb
sbb
and
add
lods
loopne
add
xchg
add
or
jecxz
inc
fistp
xchg
add
into
ret
mov
rol
call
les
adc
adc
adc
fcom
std
add
cmp
cwde
mov
dec
fadd
dec
push
jmp
xchg
xlat
rcr
mov
add
jae
cmp
dec
mov
sub
xlat
sahf
in
push
leave
test
je
mov
or
mov
popa
jle
imul
add
pusha
in
cmp
sbb
cmps
mov
call
neg
adc
(bad)
push
xchg
(bad)
lock
push
inc
dec
lods
clc
and
fisub
add
lds
movs
fld
jne
push
enter
stc
fsubr
and
dec
inc
add
sbb
imul
xchg
cmp
test
or
push
sar
lock
jg
sub
add
in
and
and
(bad)
push
xchg
in
pop
movs
jge
mov
push
repz
hlt
inc
push
mov
or
ret
adc
sub
or
jge
or
xchg
add
mov
xchg
add
movs
add
test
or
push
push
xchg
mov
ficomp
sbb
(bad)
pop
test
rcr
(bad)
add
or
add
add
call
push
cmp
push
and
mov
fisub
nop
cli
jns
pop
enter
sbb
pop
out
icebp
inc
inc
out
jmp
leave
popf
sub
add
cmp
push
add
pop
cdq
sar
and
or
ds
sbb
jo
enter
mov
(bad)
mov
or
popf
test
lods
inc
and
ror
sbb
xchg
sub
mov
xchg
cmp
pusha
add
push
int3
daa
(bad)
daa
sub
push
cmps
enter
(bad)
loope
adc
cmp
xchg
in
psllq
repnz
cmps
imul
iret
jle
aas
js
outs
cmp
ss
pop
movs
jne
mov
popf
popf
daa
lods
lods
push
cs
sub
xchg
cmp
xor
dec
shr
pop
mov
jbe
jb
out
lock
push
adc
daa
mov
sbb
or
sub
jno
inc
jmp
setns
adc
movs
movs
push
je
fdivr
fcom
xchg
lahf
xor
rcr
or
rcl
(bad)
loop
mov
sbb
push
aas
fld
push
and
ds
or
sbb
mov
xor
and
addr16
jae
pop
pop
or
and
clc
adc
inc
inc
lahf
jmp
popf
sub
sbb
gs
dec
adc
inc
dec
cs
sbb
dec
inc
or
mov
pop
push
and
xor
add
rol
mov
and
mov
inc
adc
lahf
sbb
in
pop
(bad)
imul
lods
ins
pop
xchg
add
or
mov
dec
jae
inc
call
sub
test
fstp
and
jno
cli
and
jp
jmp
outs
sti
ss
retf
xor
cmp
adc
fild
dec
aad
add
push
js
test
or
xor
mov
jp
jmp
push
or
adc
dec
adc
icebp
ret
sub
xor
inc
ds
cld
push
inc
add
loopne
xchg
or
test
dec
mov
ror
pop
repz
xchg
sahf
add
dec
sbb
cdq
jge
clc
pop
inc
in
add
adc
push
test
ss
or
and
or
pop
xor
mov
pop
pop
add
popa
push
inc
xchg
dec
xchg
add
push
enter
xor
add
aam
jnp
popa
pop
(bad)
mov
adc
add
xchg
pusha
mov
pop
out
inc
jns
(bad)
mov
stos
(bad)
mov
add
xor
cmps
add
xchg
out
(bad)
xor
fadd
push
sbb
outs
pop
scas
pop
sub
js
pusha
xchg
inc
jns
out
push
add
dec
cmp
enter
fisttp
mov
clc
jp
pusha
ror
fs
sbb
xchg
mov
xchg
movs
movs
sbb
inc
xchg
sub
data16
or
push
and
mov
adc
enter
push
jge
cmp
rcr
and
lock
xchg
idiv
jne
dec
dec
pop
pusha
or
je
mov
cmp
or
adc
and
rcl
les
enter
cmps
stos
or
repz
push
dec
sub
loope
cli
push
and
xchg
mov
mov
cmp
xchg
and
xchg
mov
ss
lods
mov
sub
push
and
out
sub
dec
cld
xchg
retf
movs
mov
push
pop
pop
or
cmp
lahf
imul
and
fs
test
mov
mov
sbb
dec
push
cmp
and
mov
xchg
mov
xchg
and
mov
cmp
movs
xor
jbe
or
pop
int3
mov
stc
add
sbb
std
cmp
lea
xchg
mov
ss
xor
es
lea
xor
pop
lods
and
push
retf
mov
adc
mov
pop
sub
xor
dec
loope
lea
fwait
xor
mov
jne
push
xchg
mov
sti
lea
pop
rcr
pop
cld
pop
add
or
inc
jne
scas
cmp
and
mov
mov
loop
mov
rcr
sub
pop
inc
inc
rcl
cwde
push
mov
fsub
sbb
call
mov
(bad)
daa
add
push
add
jb
hlt
add
inc
push
sub
mov
xchg
movs
ror
dec
loopne
push
cwde
movs
stos
push
sahf
jle
rcr
mov
cmp
jge
push
ins
or
ss
test
xor
inc
mov
jo
adc
movs
test
add
jno
inc
mov
(bad)
mov
adc
adc
imul
lahf
dec
xor
xchg
xchg
or
dec
jae
cmp
mov
fistp
aas
or
add
ds
cmp
mov
push
inc
outs
and
scas
sar
cmps
push
and
inc
imul
sub
ds
ins
cmp
mov
lods
cmp
addr16
dec
and
cmps
jbe
retf
rcl
mov
pop
jns
test
mov
mov
outs
and
test
cmp
neg
inc
push
push
sub
dec
or
jnp
pop
xor
ins
fidiv
mov
and
push
or
dec
adc
cmc
lea
xchg
xchg
popa
(bad)
and
add
ja
test
mov
test
jg
jo
jmp
iret
and
adc
dec
pop
mov
adc
pop
add
sub
int
add
repnz
daa
inc
add
imul
out
xchg
out
cmp
call
call
imul
(bad)
loopne
ins
adc
mov
bound
(bad)
dec
pop
movs
or
add
fst
fmul
nop
fcmovnbe
mov
jle
cmp
or
xchg
jae
mov
push
adc
clc
pop
inc
dec
cmp
sbb
int3
xchg
shl
clc
mov
jle
and
adc
mov
pop
mov
push
mov
push
dec
mov
pop
add
pop
fidivr
push
sbb
cdq
or
cmp
jns
call
psraw
mov
add
lahf
ret
sbb
inc
cmp
adc
inc
inc
inc
xchg
mov
(bad)
xchg
add
dec
push
or
call
mov
popf
pushf
gs
mov
dec
and
rol
sbb
cmp
jl
jb
xchg
mov
jge
mov
push
mov
add
sbb
and
ins
(bad)
adc
lea
mov
and
mov
cmp
xchg
pushf
pop
push
add
xor
xchg
sub
push
mov
mov
pop
and
mov
jne
push
das
ins
outs
sbb
mov
in
and
add
popf
ret
or
aas
inc
cmp
sub
and
add
mov
pop
imul
jecxz
int3
pop
sub
push
fnstenv
push
add
jo
inc
int3
mov
(bad)
cmp
sub
add
cwde
(bad)
loope
dec
adc
jecxz
mov
sub
pop
call
std
out
int3
push
sub
and
and
adc
int3
mov
mov
jl
sbb
and
sub
lods
es
pop
outs
imul
sub
add
mov
or
xor
mov
jnp
mov
cs
add
inc
jo
push
inc
dec
add
push
inc
pop
cmp
movs
push
stos
mov
sbb
int
push
or
shl
dec
pop
push
hlt
jp
outs
leave
das
sub
ds
add
je
push
rol
inc
fwait
mov
call
xor
push
add
mov
and
sar
and
jnp
mov
inc
ja
push
push
jb
xchg
or
div
push
xlat
fs
and
pop
js
sbb
pop
pop
push
sbb
adc
bnd
cwde
dec
inc
fist
or
mov
push
jns
les
push
loop
adc
bound
mov
mov
xor
or
into
jb
loopne
imul
out
adc
jae
fisub
mov
fnstsw
(bad)
test
data16
or
rcr
cmp
add
pop
or
mov
lock
and
movs
add
pop
scas
inc
mov
shl
xor
push
sbb
imul
ret
mul
xor
sbb
add
test
pop
fistp
lds
pusha
push
retf
push
xor
and
add
xor
and
add
and
adc
aaa
or
add
cmp
lgdtd
cmp
add
daa
mov
test
cmps
mov
iret
jnp
xchg
sbb
sub
push
pop
adc
iret
repz
and
lock
add
pushf
je
(bad)
out
pcmpeqb
xor
jl
cmps
xor
cmp
or
lods
ds
cmp
popf
mov
push
test
out
and
cld
sub
stc
and
or
arpl
pop
in
jbe
or
or
xchg
test
dec
movs
jb
rol
shl
add
mov
or
mov
xor
and
sbb
push
or
das
adc
cmp
loopne
hlt
mov
jae
inc
fcom
lds
push
push
nop
adc
dec
icebp
push
adc
sti
fmul
xchg
or
and
rcl
test
or
push
jne
mov
pop
dec
enter
dec
sub
jmp
fistp
ins
mov
mov
push
repnz
or
mov
bound
ins
xor
pop
sbb
and
(bad)
dec
call
add
inc
dec
sbb
xchg
pop
pop
ror
mov
rcl
xor
outs
dec
call
mov
dec
int3
rol
movs
imul
call
mov
xchg
or
and
adc
push
jl
cmps
jge
sub
test
call
lods
mov
mov
call
mov
dec
pushf
nop
nop
call
mov
mov
add
nop
add
fnstenv
push
cmp
retf
or
or
jl
xchg
mov
inc
sbb
sbb
int
xchg
xlat
fistp
sub
pop
outs
retf
push
lods
fs
cs
pusha
or
inc
mov
dec
dec
call
adc
pop
pop
enter
push
inc
in
leave
and
movs
jb
dec
dec
and
sub
jb
inc
dec
jmp
popa
int
and
add
jb
leave
dec
rcl
hlt
xor
pusha
mov
jp
nop
retf
xor
test
xchg
enter
cmp
cld
cmp
dec
and
or
hlt
push
shl
inc
call
popa
cmp
aad
mov
je
lahf
fimul
pop
sub
sub
mov
pop
(bad)
and
pop
test
sbb
movs
jb
in
and
leave
cmp
sbb
nop
or
pop
and
cs
pop
jb
and
retf
and
dec
adc
cmps
add
nop
or
add
xchg
push
add
add
jb
or
adc
xchg
pop
leave
adc
(bad)
adc
nop
seta
clc
(bad)
(bad)
push
adc
adc
ins
leave
cmp
sbb
dec
xor
or
(bad)
fs
mov
add
loope
sbb
xor
and
sahf
fcom
pop
lahf
fsub
adc
cli
in
je
pop
sbb
or
sub
out
shr
sub
dec
or
lock
shl
outs
sbb
sub
sbb
pop
jnp
inc
xor
aam
sub
movs
xor
cmovno
daa
fbstp
mov
pop
inc
fs
imul
mov
movs
jecxz
out
or
arpl
pop
jnp
or
out
(bad)
adc
inc
or
ss
ins
imul
sub
xchg
ja
sub
and
mov
mov
ja
gs
outs
jnp
movq
out
arpl
jo
test
fs
jbe
dec
arpl
cmp
mov
fs
imul
fstp
push
dec
int
movs
cmp
cld
or
cmps
mov
cs
daa
mov
mov
bswap
aam
xchg
daa
daa
daa
call
imul
outs
dec
jnp
sub
cmp
inc
pushf
pushf
pushf
pushf
dec
push
pop
dec
mov
add
push
dec
nop
pushf
movs
mov
leave
in
inc
mov
popa
cmp
xor
add
dec
outs
push
mov
jne
psubsb
cmp
dec
or
clc
adc
ret
adc
jb
cmp
add
jb
jb
and
sub
inc
fwait
xchg
jb
pop
cmp
adc
pop
pop
xchg
sbb
add
movs
jmp
inc
dec
xchg
sbb
xchg
push
sbb
fdivr
cs
daa
jb
popf
rcr
popa
movs
inc
mov
loop
or
dec
mov
mov
mov
jae
and
mov
push
movq
es
push
in
xchg
(bad)
jae
int3
mov
aas
popa
add
aad
pop
ins
mov
ja
in
dec
pop
scas
fs
(bad)
je
xchg
(bad)
sti
fidiv
dec
push
push
outs
xor
out
cmp
push
gs
je
jne
mov
pop
outs
pop
js
pop
out
data16
in
es
lahf
or
mov
pop
adc
or
xor
outs
pop
pop
pop
aas
adc
mov
inc
add
and
jl
ja
and
shl
add
pop
push
push
dec
mov
clc
mov
loop
enter
adc
jb
pop
cmp
mov
or
and
pop
or
bound
dec
pop
(bad)
(bad)
lods
ss
cmps
shl
inc
or
ins
mov
dec
inc
add
and
sbb
imul
add
cmps
jge
data16
daa
sbb
das
xchg
leave
and
sub
sub
mov
mov
inc
adc
in
xor
call
pushf
mov
dec
sbb
inc
inc
dec
les
pop
push
pop
dec
xor
mov
ja
push
push
es
inc
xor
iret
test
imul
in
mov
div
pop
mov
aam
push
mov
(bad)
xlat
or
jnp
into
sub
(bad)
imul
xor
sub
push
(bad)
jnp
and
and
pop
aas
xchg
and
add
in
sub
mov
fmul
popf
adc
mov
cld
or
inc
outs
jo
pop
in
adc
rcl
sub
pusha
inc
(bad)
mov
push
retf
ret
lea
jmp
xor
add
mov
lahf
add
mov
in
inc
mov
sub
ror
push
sar
daa
pop
cdq
fisubr
mov
cmp
adc
pop
mov
pop
and
adc
jne
push
popa
cld
xor
push
pop
sub
test
mov
rcr
mov
xchg
lods
dec
jmp
popa
sub
pop
push
retf
popa
dec
test
add
ins
push
ins
inc
loopne
xchg
xor
lea
dec
ret
ds
pop
mov
iret
lahf
fcom
and
rol
cmp
xor
add
push
sbb
adc
in
scas
mov
pop
mov
adc
jmp
mov
sbb
push
call
push
add
dec
div
push
jne
out
add
pop
jmp
loopne
aaa
and
add
shl
pop
add
xor
fisub
add
sbb
neg
inc
xor
out
test
xchg
test
xchg
push
shl
out
hlt
and
mov
pusha
pop
push
lock
cmp
add
cmp
sbb
or
les
dec
xor
lods
shl
jns
outs
sbb
or
sub
sub
in
push
retf
cmc
inc
mov
icebp
es
or
mov
cmps
scas
daa
xchg
add
lods
pusha
int
push
pop
ja
sbb
loopne
movs
fs
mov
sbb
xchg
js
adc
sbb
cld
adc
hlt
stc
sbb
and
cmp
add
je
and
std
push
cmp
lea
ret
cmp
popf
xor
push
cmovb
inc
and
fdiv
ret
cld
add
bound
add
and
xor
test
pop
sar
xchg
sub
imul
or
std
mov
jns
sub
add
cmp
aaa
call
sbb
sbb
mov
lods
add
cmp
or
xor
mov
xor
add
mov
xor
lar
mov
sub
mov
ret
inc
shl
out
sub
cmp
pop
add
bound
add
or
xor
ror
mov
pop
xor
add
inc
add
leave
ret
inc
dec
ret
add
xor
jmp
clc
inc
sub
and
and
add
mov
cmp
repz
aaa
inc
add
hlt
hlt
imul
call
mov
mov
icebp
inc
imul
rcl
(bad)
mov
les
xor
adc
bound
push
pusha
add
loop
popf
js
inc
push
retf
and
mov
push
enter
dec
jno
test
add
add
xchg
in
shr
inc
or
dec
fistp
or
or
imul
xchg
es
sub
push
dec
in
mov
xchg
pop
sub
push
lods
mov
mov
das
mov
shl
xchg
push
inc
dec
mov
(bad)
mov
xchg
outs
imul
add
(bad)
push
push
cld
push
cdq
aaa
das
cmp
mov
and
js
sub
jae
inc
add
inc
mov
cmp
or
rcr
inc
dec
cmp
rcr
jne
sub
inc
sbb
lea
adc
push
sub
jp
jge
loopne
loopne
add
adc
nop
and
lea
jns
adc
add
adc
outs
cmp
add
adc
dec
call
fsub
or
ret
dec
out
mov
lods
ds
push
add
jmp
push
stos
and
ja
dec
pusha
dec
pop
sbb
xor
add
mov
je
out
in
adc
ret
push
or
cwde
mov
or
(bad)
pop
pusha
aad
xchg
xor
imul
inc
rcr
call
popa
loopne
and
jle
in
and
pop
inc
sub
aaa
daa
test
jl
adc
pop
cmp
popa
xlat
lods
and
gs
test
cld
dec
call
xor
mov
in
arpl
adc
xchg
(bad)
ficom
cmp
ss
pusha
sub
push
clc
pop
mov
add
pop
and
or
movs
cmp
cmp
lahf
or
jno
test
sbb
cmps
in
loope
seto
jbe
add
mov
fs
sbb
pop
push
loopne
dec
rcl
xor
mov
ja
xchg
dec
and
xchg
pop
and
or
retf
adc
or
fadd
je
dec
adc
xor
loop
mov
js
mov
scas
inc
or
and
xchg
adc
xchg
stos
shl
push
xchg
int3
xor
jmp
jecxz
inc
imul
retf
xchg
nop
pop
add
scas
cmp
jecxz
ret
add
dec
cmp
fs
stos
adc
mov
pop
jno
cmp
dec
nop
dec
pop
mov
and
sbb
mov
lock
dec
mov
adc
jecxz
xor
lock
sbb
jbe
icebp
loope
movs
and
sbb
call
push
inc
inc
push
cwde
repnz
lahf
mov
or
retf
add
nop
pop
test
jns
dec
jbe
jl
lods
fcmovu
add
ins
fstp
pop
xchg
add
push
and
push
retf
and
mov
ins
je
sub
push
inc
dec
adc
dec
and
(bad)
sti
adc
dec
jle
pop
sbb
sub
push
push
outs
push
push
sbb
pop
mov
and
push
mov
cmp
sbb
fild
test
fisubr
or
sub
hlt
retf
sbb
adc
or
fs
mov
sahf
or
stos
movs
push
rol
mov
and
add
cmp
adc
xchg
icebp
inc
adc
loope
or
aam
xor
test
or
and
out
xor
or
dec
xchg
out
adc
push
cli
cli
nop
and
or
jecxz
push
pop
test
or
fild
push
inc
pop
inc
pop
add
ret
push
and
ins
sbb
sbb
(bad)
fs
test
gs
xchg
pop
mov
push
add
scas
sub
jns
clc
dec
sbb
inc
loopne
mov
daa
jbe
xor
xor
xor
inc
jne
pop
loope
xchg
clc
(bad)
jle
fstp
push
dec
and
enter
enter
shr
or
push
adc
add
or
or
mov
push
add
out
cmps
mov
sub
xor
and
aas
mov
pop
mov
jmp
in
sbb
lahf
add
sbb
adc
and
mov
mov
or
mov
dec
dec
push
lods
add
add
or
add
cs
sti
fcom
jp
lds
aad
movs
mov
sbb
push
jg
clc
and
jne
or
ins
test
xchg
push
push
xlat
adc
pop
data16
push
and
fidivr
xor
in
lock
sbb
movs
or
aas
and
test
inc
cmp
xchg
mov
cmc
std
push
xchg
fcomp
fsubr
sub
pusha
lea
stos
xor
jp
gs
jg
fisub
inc
outs
aaa
movs
sbb
stos
or
bnd
shl
ret
xor
push
mov
call
push
test
mov
jo
pop
push
fcomip
fisub
sbb
xchg
(bad)
es
xlat
push
xor
add
cmp
int
mov
and
ficomp
or
xchg
imul
movs
pop
add
push
and
xor
inc
xchg
add
ficom
arpl
addr16
and
xchg
xor
ins
daa
push
jl
pop
dec
and
xchg
pop
cmp
or
enter
mov
mov
fwait
iret
cmp
push
pop
ins
aas
pop
mov
mov
inc
and
inc
ret
jle
push
test
mov
cld
or
sbb
mov
mov
xlat
pop
ins
mov
pop
cmp
dec
andps
and
cmp
lsl
push
mov
nop
pushf
cmps
fs
cs
mov
mov
pop
cwde
add
rol
push
lock
int3
pop
fdivr
in
sahf
fadd
adc
leave
ror
push
add
ins
bound
xchg
pop
out
pop
imul
neg
pop
mov
pop
adc
sbb
mov
and
rcl
repnz
fwait
jp
nop
nop
dec
or
push
xchg
mov
sub
add
and
imul
push
out
sbb
aaa
pop
jne
xchg
or
pop
shr
popa
jnp
mov
imul
ret
dec
jo
je
call
sub
inc
dec
add
and
ja
pop
dec
dec
shl
imul
jo
arpl
jae
loop
(bad)
mov
arpl
ja
das
sbb
jbe
les
ins
ins
aaa
push
mov
inc
or
and
dec
sub
cld
fbld
bound
sar
jno
pop
fst
fidivr
or
push
retf
push
fcmovnu
popf
push
xor
jbe
mov
and
xchg
fwait
add
mov
push
xchg
jb
in
cmps
or
dec
test
in
xchg
xchg
add
pusha
jae
cmc
pop
das
(bad)
fisubr
sbb
xchg
dec
clc
mov
add
add
xor
mov
inc
mov
(bad)
in
xor
mov
mov
ret
dec
movs
std
sbb
cmp
pushf
dec
loopne
in
loope
push
fadd
dec
daa
daa
fsubr
out
sti
cs
rcr
xor
push
xor
cmp
inc
nop
mov
and
(bad)
retf
inc
push
das
mov
adc
add
fs
div
add
jl
movs
stc
fadd
les
movs
les
jnp
mov
in
rol
dec
mov
add
jb
dec
mov
mov
jl
mov
sub
xchg
pop
jmp
xor
add
scas
sub
and
jp
cmp
fbld
mov
movs
push
stc
or
das
xchg
pop
cld
sbb
cmp
and
add
inc
push
sbb
sbb
mov
test
nop
jnp
xor
cmps
in
mov
sbb
cmp
and
xor
test
icebp
stos
or
stos
or
push
dec
mov
jns
sbb
loopne
inc
arpl
sub
xor
pusha
pushf
pushf
pushf
pushf
ins
js
nop
dec
les
arpl
adc
cmc
xor
mov
out
and
push
mov
(bad)
daa
daa
daa
daa
in
cld
or
xor
xchg
fs
adc
scas
les
lods
and
dec
dec
dec
data16
push
pop
test
push
outs
inc
lock
inc
jg
pop
in
or
mov
fs
pop
add
lds
xor
jmp
adc
push
jne
push
in
adc
dec
dec
and
add
and
adc
pop
sub
xor
inc
movs
cmp
jmp
outs
add
inc
sub
pop
(bad)
inc
dec
inc
arpl
adc
out
jo
dec
ins
jo
xor
adc
scas
or
ins
pop
and
push
push
add
adc
fs
dec
mov
mov
sub
(bad)
push
push
sub
inc
pop
gs
xor
leave
and
inc
arpl
jbe
ins
nop
xchg
daa
dec
outs
outs
pop
shl
inc
frstor
inc
cdq
xchg
inc
mov
ja
(bad)
jecxz
pop
cmp
inc
js
dec
push
repnz
push
imul
leave
jo
mov
fs
sub
add
dec
ss
test
mov
jg
ds
and
push
jmp
xchg
mov
or
push
adc
add
mov
jo
jbe
jno
mov
call
xchg
fldcw
mov
mov
add
cmp
add
sbb
push
pop
es
cmovo
jo
mov
push
jo
push
add
push
jo
add
adc
cmp
mov
sub
inc
xchg
leave
inc
push
mov
lds
add
addr16
and
or
sar
push
push
dec
xor
ror
add
mov
push
jb
loopne
pusha
push
ins
jno
pop
xor
daa
jnp
gs
add
mov
mov
sahf
mov
aam
sub
aas
mov
inc
addr16
data16
pop
push
pop
xor
shl
add
xor
inc
and
jae
xchg
cmp
xchg
sbb
mov
mov
push
and
dec
add
push
jl
and
adc
daa
add
mov
inc
push
adc
jbe
sub
aaa
push
xor
in
pop
sub
cmp
or
push
mov
adc
push
inc
mov
xchg
add
outs
push
into
push
out
ins
add
inc
addr16
ret
fmul
clc
add
inc
cmp
or
push
out
(bad)
jmp
mov
rol
inc
ins
pop
jo
adc
pushf
les
int3
push
clc
add
ja
mov
in
cld
add
pop
mov
add
in
dec
mov
push
xchg
xor
pop
out
sbb
dec
popa
bound
popa
add
sbb
or
je
push
shr
(bad)
enter
xor
and
mov
(bad)
out
pop
iret
xor
add
sub
xor
pop
nop
and
sbb
or
pop
push
jmp
and
andps
int
pop
or
popa
or
sub
add
xchg
xor
adc
or
mov
mov
repz
add
xor
mov
or
xor
or
shr
xchg
rol
sbb
jae
dec
ss
aam
gs
or
xor
nop
fwait
and
push
xor
pop
sub
mov
or
adc
aad
xor
pop
adc
jle
movs
mov
adc
movs
nop
hlt
ss
and
cdq
dec
sbb
push
adc
jl
and
pop
leave
fcmovb
and
or
and
add
pop
ins
sbb
scas
imul
mov
sbb
in
add
xor
inc
adc
test
mov
pusha
jno
sbb
xor
push
adc
je
outs
test
sbb
or
sbb
(bad)
cwde
stos
push
rcl
inc
shl
and
cld
(bad)
adc
sbb
push
xor
sbb
fild
and
sub
in
mov
movs
xor
aaa
dec
push
add
rol
sbb
mov
add
leave
loopne
dec
push
mov
fcomi
mov
cli
pushf
mov
push
movs
mov
cmp
pusha
or
fsub
jo
mov
lods
shr
popa
pop
add
jge
shl
inc
mov
daa
rol
add
and
daa
sahf
xchg
sub
inc
push
and
es
jmp
jns
cmp
push
loopne
inc
sbb
int3
inc
mov
cmps
cvtps2pi
jg
aas
cmp
daa
iret
and
xor
mov
pop
inc
es
xor
aas
push
or
nop
cmova
ss
push
enter
sub
iret
aaa
mov
inc
push
xchg
inc
sub
ss
pop
ja
push
push
mov
iret
fisttp
inc
or
cmp
adc
add
sbb
enter
mov
fmul
(bad)
aas
pop
cmp
pop
adc
dec
or
xor
ret
or
in
adc
cmp
and
xor
push
cmp
cmp
jno
xor
popa
or
pop
cwde
xchg
pop
pusha
cs
xor
pop
dec
jmp
test
cmp
pop
jae
push
movs
push
cwde
adc
sub
xchg
dec
lods
fs
push
xchg
mov
pop
rcr
(bad)
add
and
inc
or
in
mov
shl
adc
or
je
movs
leave
adc
inc
shr
ins
jae
sub
jmp
xor
jl
inc
mov
std
mov
or
pop
mov
sbb
xchg
in
les
and
sbb
push
mov
push
dec
lock
sbb
cdq
sbb
jns
imul
inc
fnstcw
cmp
clc
xor
xor
push
jmp
stos
pop
xor
in
pop
lea
jge
inc
xor
test
in
pop
dec
jbe
pop
xor
daa
fs
adc
test
add
je
xlat
and
not
sub
jne
push
cwde
cmps
ins
stos
pop
out
ret
push
sub
dec
or
and
cmp
es
sar
adc
pop
cmps
out
and
jnp
push
add
stc
jne
pop
loop
outs
add
out
mov
jne
push
push
rol
loopne
jbe
ret
push
and
push
test
sbb
inc
inc
inc
inc
ins
push
pop
or
dec
sub
inc
js
sbb
push
pop
xchg
pusha
test
mov
pshufw
shl
sub
or
shl
xchg
popa
daa
jecxz
out
in
jb
(bad)
sub
dec
xlat
xchg
pop
ja
jnp
add
mov
sub
xchg
jle
sub
ror
test
dec
test
inc
sub
test
sar
sbb
ficom
cmp
scas
mov
inc
jecxz
pop
mov
pop
and
add
push
sar
jb
test
icebp
mov
xchg
or
das
ins
push
dec
sub
mov
popa
js
jmp
pop
xor
adc
add
inc
pusha
mov
ss
sbb
jle
popa
add
cmp
adc
hlt
and
pusha
mov
xchg
and
push
push
ret
adc
js
xor
test
retf
push
and
test
enter
cs
push
(bad)
lahf
arpl
adc
mov
pusha
xor
rol
popf
mov
outs
pop
dec
cmp
jno
sub
xchg
adc
in
push
sbb
nop
loopne
sub
jne
mov
inc
adc
xchg
xchg
adc
mov
adc
stos
jg
add
sbb
pop
fdiv
cli
lods
adc
add
sbb
cmp
aam
sbb
jo
xchg
add
cmp
jno
cmp
nop
xchg
enter
dec
adc
je
push
and
add
stos
sbb
mov
or
fs
nop
add
add
sbb
sbb
nop
in
or
pop
sub
jne
xchg
and
sbb
cmp
add
mov
(bad)
sub
daa
add
pushf
xor
push
mov
jo
rcr
xchg
xor
jne
cmp
nop
mov
sub
add
jae
mov
je
mov
and
mov
adc
outs
sbb
add
sbb
add
inc
and
adc
xor
xor
xor
sbb
adc
sbb
or
sub
idiv
sbb
rcl
add
in
add
daa
mov
dec
mov
outs
rcl
pop
mov
or
push
inc
dec
cmps
fdiv
(bad)
jg
cwde
inc
push
mov
mov
fild
mov
mov
mov
jo
cmp
(bad)
arpl
fidivr
pop
jo
mov
push
cs
(bad)
adc
xchg
dec
hlt
popf
mov
dec
bound
or
aam
jbe
mov
mov
pop
pop
and
sti
or
xor
mov
or
inc
enter
lock
out
push
adc
adc
ds
jo
mov
ins
sbb
and
sub
imul
cmp
jl
aam
add
jb
and
xchg
fidivr
inc
lock
outs
lock
idiv
and
add
and
or
setl
stos
cmp
xor
mov
or
xlat
add
xchg
inc
sbb
mov
retf
inc
mov
inc
pop
(bad)
retf
or
enter
dec
loope
cmps
xor
daa
cmp
adc
dec
push
push
fiadd
and
pop
sub
ins
jae
mov
sbb
test
adc
mov
dec
call
jb
les
cwde
inc
imul
mov
jmp
mov
ds
sbb
push
mov
inc
dec
outs
test
das
std
inc
ret
int3
inc
outs
push
imul
mov
and
shr
popa
inc
test
sar
adc
jbe
ja
xor
lods
lods
js
stos
and
daa
test
outs
jp
push
xor
out
xchg
cmp
or
sbb
jb
movs
xor
mov
dec
cmp
fiadd
ins
cmp
jne
enter
sub
popw
inc
fnstcw
adc
pop
mov
ja
xchg
js
rol
xor
inc
push
pop
cmp
rcl
mov
pop
inc
and
xor
jo
mov
imul
sbb
dec
push
sbb
sbb
cwde
xchg
pop
nop
outs
imul
add
bnd
adc
cld
cdq
sub
xor
lock
pusha
fs
inc
sar
and
xchg
push
mov
test
xor
sub
ja
and
and
sub
xor
movs
sub
add
loopne
add
jnp
addr16
jp
icebp
lock
push
sbb
fnstenv
popa
lods
sub
add
sar
rcr
inc
(bad)
enter
js
retf
inc
adc
pusha
push
ins
mov
ret
jno
and
iret
sub
sub
loopne
pusha
into
ins
mov
scas
add
dec
push
nop
pop
xchg
push
nop
fs
es
push
sub
fdiv
push
movs
jmp
adc
bound
je
imul
pusha
cmps
inc
push
adc
outs
das
inc
push
mov
pop
test
push
loop
arpl
xchg
in
mov
adc
shl
push
xor
or
sti
pop
repnz
call
or
jmp
pop
pop
add
inc
add
in
xor
adc
mov
dec
test
in
sub
std
pop
add
mov
xchg
popf
test
movs
jb
movs
js
and
in
mov
sbb
adc
mov
or
add
mov
lods
adc
pushf
sub
mov
dec
or
jge
add
stos
icebp
push
in
jmp
cs
push
or
aaa
add
stos
dec
adc
inc
push
hlt
(bad)
adc
mov
lock
xor
sub
js
and
sub
sub
sub
dec
lea
cmp
inc
push
jge
xchg
outs
test
in
aas
loopne
sbb
es
sbb
jmp
adc
repnz
xchg
inc
es
adc
xor
call
out
push
add
push
and
enter
adc
xor
int3
jo
leave
and
add
and
inc
push
push
jecxz
jecxz
push
sub
movs
call
outs
mov
imul
sbb
cmc
or
lock
dec
les
enter
sar
mov
adc
and
mov
lods
mov
mov
sub
test
dec
push
nop
test
movs
mov
pushf
pushf
cs
add
mov
mov
mov
jnp
sub
or
lea
cmp
inc
rcl
cmp
cmps
adc
push
add
xchg
xchg
rcr
inc
dec
adc
fstp
adc
aas
sbb
mov
mov
aam
and
push
pop
mov
or
rol
xor
mov
sti
lahf
jmp
push
lahf
arpl
xchg
dec
push
or
add
xchg
cmps
(bad)
sub
or
or
sbb
(bad)
fcom
mov
and
jg
sub
adc
fdiv
xor
push
push
mov
shr
pop
les
push
loopne
pop
mov
int
popa
xchg
add
sbb
iret
das
dec
daa
push
aad
mov
rcl
xor
les
add
sbb
xor
sbb
push
xchg
inc
pop
add
loopne
rcr
push
cmp
pusha
cmps
add
xchg
add
popa
push
out
xchg
mov
adc
stos
inc
jbe
xchg
mov
or
dec
add
add
jp
imul
cld
loop
push
leave
pop
mov
js
lea
push
daa
xor
dec
popf
cmp
lods
ds
mov
or
sbb
aad
jae
fxtract
pushf
sbb
jmp
inc
dec
enter
dec
add
outs
leave
les
xor
outs
jnp
das
inc
xchg
lock
push
sub
xchg
lods
xor
daa
dec
add
aad
and
call
ss
push
outs
sub
add
enter
lock
adc
cmp
cmp
nop
and
sub
movs
or
adc
and
xchg
push
pop
mov
fcom
mov
xchg
test
dec
les
push
mov
jmp
add
sbb
cmc
adc
xchg
dec
sbb
je
pop
mov
in
sub
sbb
sbb
and
mov
adc
jae
popf
mov
setl
sbb
es
cmp
jle
mov
mov
jge
pop
sub
fnstcw
jno
dec
mov
pop
xchg
mov
dec
or
sub
add
add
jne
lods
movs
sbb
arpl
in
nop
push
je
pop
pop
jge
ins
inc
daa
mov
mov
ror
stos
push
pop
test
and
aam
lods
fcomi
dec
es
cmp
mov
jmp
rcl
adc
clc
dec
adc
xlat
push
les
or
cwde
pop
adc
jb
and
inc
or
dec
pop
or
cmp
add
loope
cmp
lea
and
cmp
lock
xor
in
dec
jg
sbb
cmp
cmc
jge
das
loop
xchg
scas
loope
inc
popa
jle
mov
sbb
cmp
or
stos
xchg
xor
dec
outs
xor
mov
xor
cdq
in
inc
xor
add
xlat
xchg
lds
or
mov
lds
inc
sub
xor
or
sbb
xor
xchg
aam
aas
and
mov
(bad)
cmp
lds
imul
call
test
xchg
enter
xchg
outs
adc
les
data16
cmps
stos
(bad)
les
js
push
xor
inc
lea
and
les
int
inc
mov
pop
xchg
mov
sbb
cmp
push
and
and
adc
inc
int3
fdivr
mov
add
lds
outs
adc
imul
and
inc
cmps
bound
adc
add
es
or
test
mov
push
sti
inc
jbe
xor
mov
xchg
add
pushf
mov
mov
mov
xchg
or
test
and
nop
or
shl
cmp
mov
icebp
nop
sub
add
and
fs
sbb
pop
adc
adc
fs
test
inc
lds
fnsave
inc
inc
inc
jg
push
cmp
add
push
mov
popa
dec
popa
in
add
cmp
test
dec
(bad)
lods
loope
std
xor
inc
jl
mov
das
adc
leave
dec
daa
jmp
mov
clc
lods
add
or
stc
add
add
dec
xchg
mov
or
retf
movs
lods
in
push
push
lock
adc
pop
xchg
shl
add
call
sbb
add
push
add
jno
adc
mov
pop
mov
or
sub
adc
mov
(bad)
fnsave
jns
mov
pop
sub
mov
jnp
mov
mov
ss
shr
(bad)
aam
inc
cs
(bad)
loopne
in
sbb
rcl
fadd
mov
mov
mov
or
loope
mov
ret
mov
add
push
aam
add
cwde
repz
pusha
mov
adc
mov
push
sub
addr16
dec
push
retf
jge
inc
lea
cmc
inc
ins
dec
fs
repz
dec
mov
enter
lods
lods
cmps
call
ins
cmp
les
popf
fcmovnb
or
pop
ffreep
and
sub
adc
jb
ret
and
push
inc
push
add
adc
je
js
xchg
add
(bad)
fiadd
xchg
addr16
inc
mov
xor
push
sahf
nop
pop
das
loop
jp
fimul
push
rol
adc
shl
cmp
push
les
arpl
inc
movs
push
dec
sub
shl
and
dec
popf
movs
or
add
xchg
cmp
sbb
push
xor
push
pop
gs
and
(bad)
in
mov
popa
add
pop
loope
and
xchg
je
add
loopne
popf
xor
xchg
jae
loop
popa
add
add
dec
fcomp
test
js
xlat
inc
lods
and
inc
rol
push
sbb
daa
cwde
in
push
movs
adc
lods
add
inc
dec
js
test
out
fwait
mov
or
mov
adc
and
das
(bad)
xor
mov
enter
and
loop
ins
push
invd
les
or
xchg
mov
cld
dec
ins
adc
mov
in
jecxz
fistp
or
call
sbb
push
push
rcl
mov
mov
mov
cdq
repz
out
dec
cmp
es
dec
cmps
fst
nop
(bad)
rol
sbb
popf
cmc
add
and
jge
dec
ds
bswap
les
push
mov
pushf
xor
mov
mov
mov
pushf
xchg
rol
dec
call
dec
dec
movs
pop
xlat
pushf
and
imul
adc
movs
cmp
nop
nop
xchg
push
inc
and
jnp
add
or
or
call
fcom
pop
mov
xor
(bad)
popa
adc
and
push
pop
push
push
sti
mov
add
xchg
sbb
pop
push
xchg
dec
ins
fs
loopne
pop
adc
mov
mov
dec
xchg
fs
retf
pop
pop
pop
ins
add
sti
and
dec
sahf
dec
dec
push
xor
add
xchg
in
add
inc
and
pop
fwait
sti
inc
inc
add
in
add
xor
pop
pop
xchg
out
cmp
nop
xor
retf
and
or
sub
in
fs
sub
and
or
cdq
and
pushf
dec
pop
pop
inc
add
mov
or
nop
int3
cmp
xchg
adc
adc
in
cdq
in
or
cdq
in
mov
add
nop
dec
jb
or
dec
or
cdq
mov
call
cmps
push
push
and
jg
push
sbb
cmp
push
mov
sub
jg
lock
sub
or
mov
push
jne
loopne
es
fsub
xchg
cmc
dec
fwait
mov
dec
sbb
arpl
and
xchg
imul
fadd
in
dec
mov
lock
xchg
xor
sbb
push
xchg
sbb
cmps
jnp
inc
dec
jb
xchg
dec
push
push
inc
and
test
add
add
out
mov
rcl
sti
sub
dec
dec
sub
mov
pushf
pop
rcl
and
mov
push
mov
lock
icebp
and
mov
push
lods
sub
pop
xchg
add
mov
and
and
into
fisubr
sbb
push
clc
in
push
mov
add
or
cdq
leave
and
inc
fidivr
push
xchg
mov
and
pop
test
stos
test
dec
hlt
cdq
xor
sbb
xor
cmp
xchg
jbe
or
dec
sbb
ror
mov
pop
pop
or
mov
rcl
adc
cwde
dec
jle
xor
rol
inc
sub
dec
fiadd
repz
mov
push
sub
push
adc
fldcw
jle
cdq
dec
sub
stos
sub
shl
popa
push
add
aas
add
xor
stos
test
call
or
movs
mov
mov
dec
lea
xchg
nop
add
fcomp
mov
inc
adc
mov
cmp
in
or
push
and
das
jmp
sar
and
dec
xor
(bad)
and
jle
(bad)
out
push
dec
or
enter
push
jmp
lea
inc
in
push
mov
test
xor
loop
popf
popf
sub
xchg
dec
and
jae
stos
adc
iret
inc
add
push
xor
or
jmp
rcr
mov
scas
cmovbe
(bad)
(bad)
mov
or
sub
cmp
jae
test
jecxz
dec
addr16
mov
push
(bad)
jno
inc
(bad)
and
pop
dec
por
push
in
mov
cmp
or
add
ret
or
(bad)
fisub
pop
dec
adc
int3
mov
movs
pop
push
je
call
jne
xor
pop
pop
cmp
shl
dec
mov
push
rcr
jbe
mov
mov
or
test
add
inc
cld
pop
mov
dec
pusha
sub
xor
dec
inc
and
lods
jecxz
shl
jmp
ss
aas
dec
jle
pop
enter
add
cmp
jge
jo
or
mov
enter
and
and
sub
inc
push
out
data16
scas
and
mov
mov
cwde
hlt
cmp
mov
sbb
and
mov
mov
fldenv
lods
lods
xlat
pusha
addr16
mov
mov
or
dec
(bad)
push
pop
movs
sub
mov
push
push
or
in
inc
cmp
js
or
xor
lds
pop
pop
aad
mov
inc
mov
movs
xchg
sub
and
in
cs
in
pop
jo
test
inc
cs
or
mov
loop
or
push
jmp
leave
dec
inc
mov
mov
test
adc
lods
test
mov
dec
fisttp
enter
sbb
leave
adc
pop
mov
cld
mov
pop
icebp
outs
or
mov
dec
lea
jns
je
dec
in
and
sbb
cdq
jo
jge
and
xor
and
ins
add
push
das
push
popa
push
daa
int3
mov
hlt
adc
and
or
sub
and
or
loopne
test
inc
cmps
and
adc
or
xlat
sbb
mov
lds
mov
(bad)
fild
(bad)
push
sbb
xlat
push
mov
or
and
adc
sub
mov
(bad)
sub
cdq
(bad)
xor
adc
and
xor
into
and
and
mov
xchg
or
cld
cmp
mov
test
sbb
sub
dec
arpl
xor
and
and
mov
jne
pop
pushf
mov
jmp
mov
xor
or
and
cmp
ret
mov
sbb
inc
mov
test
gs
push
cmp
loop
mov
push
jo
(bad)
sub
out
(bad)
push
enter
in
add
or
and
bound
call
mov
mov
and
mov
pop
inc
push
push
sub
mov
iret
ror
sub
mov
retf
add
push
mov
push
push
mov
sub
cmps
int3
xchg
out
sbb
and
xor
aam
lods
cwde
rcl
call
cld
adc
push
sti
and
sbb
pop
adc
adc
sub
ret
pushf
mov
mov
xor
enter
movs
xchg
lea
cmps
sub
sub
push
add
je
sbb
or
jl
cwde
ror
xchg
dec
push
add
adc
push
mov
or
cwde
or
bswap
(bad)
pop
lahf
and
scas
test
add
xor
push
inc
call
push
mov
repz
stos
jo
inc
outs
(bad)
daa
pushf
call
and
call
mov
cmp
and
test
pop
pusha
inc
dec
dec
fwait
pop
mov
push
inc
jecxz
and
jo
bound
push
cmp
inc
push
into
jecxz
and
cmp
xchg
retf
in
xor
and
sub
sub
xchg
mov
pop
test
inc
mov
and
daa
dec
xor
adc
add
sbb
nop
movs
arpl
js
outs
xor
add
push
pop
daa
pushf
and
adc
addr16
inc
xor
adc
xchg
mov
repz
fidivr
sahf
mov
sub
jns
xchg
adc
dec
inc
adc
mov
pop
nop
xlat
aas
and
stc
leave
dec
jns
js
pusha
mov
sub
(bad)
mov
xchg
fs
sbb
cs
mov
pop
or
jne
pusha
pop
push
mov
movhps
and
leave
and
lock
mov
cs
inc
xor
sbb
cdq
in
in
jb
pop
xor
in
xor
jnp
sub
push
cdq
fdivr
lods
lock
xchg
test
in
cmp
stos
pop
push
or
fsub
jno
jmp
mov
sbb
stos
cmp
js
and
xchg
rcl
outs
dec
outs
loope
adc
(bad)
in
enter
test
enter
ins
enter
jl
mov
es
or
push
inc
xchg
or
js
sub
stos
pop
leave
add
sub
sbb
enter
sub
cmp
test
mov
pop
mov
aam
movs
in
mov
dec
aam
imul
in
sbb
js
sbb
and
add
adc
sbb
or
adc
stc
je
inc
mov
sbb
jae
inc
mov
loopne
inc
sub
int
ret
lock
adc
fild
xor
sub
xchg
pop
es
mov
dec
mov
sub
outs
xchg
nop
pushf
or
jle
xor
inc
fcmovnbe
mov
push
inc
call
inc
adc
(bad)
sahf
rol
fwait
sbb
or
xor
arpl
dec
xor
cmp
cmp
call
inc
push
inc
fwait
int3
nop
fldenv
cdq
int3
ja
and
or
les
mov
cmps
or
mov
in
mov
add
sahf
mov
arpl
xor
mov
mov
cmovle
dec
push
push
mov
test
lods
fadd
mov
fld
cdq
mov
inc
pop
cmp
sbb
sbb
cmp
nop
nop
xchg
or
add
xchg
movs
mov
mov
add
test
js
jl
push
dec
es
dec
jb
fs
je
xchg
sbb
push
push
jns
imul
cdq
pusha
fs
test
es
pop
pop
leave
or
stos
stos
dec
or
push
adc
enter
inc
sbb
or
mov
mov
cmp
add
add
clc
adc
sbb
std
xchg
or
std
sbb
pusha
sub
cdq
fs
fs
je
jl
dec
xor
add
nop
xor
pop
cmp
sub
movs
test
fs
xor
xchg
dec
es
rol
shl
jecxz
arpl
frstor
and
pop
call
enter
mov
and
mov
add
dec
(bad)
xlat
jg
inc
xchg
xchg
dec
xor
clc
xor
sub
popa
stos
or
mov
pop
ja
call
shl
imul
dec
push
sub
mov
sub
mov
ror
cmps
sbb
adc
mov
cwde
pop
sbb
or
or
inc
shl
jnp
inc
or
push
aam
daa
ins
push
jg
mov
pop
fcmovb
push
push
add
xor
inc
pop
repnz
mov
pop
outs
add
ret
mov
or
movups
inc
add
inc
or
frstor
mov
jns
or
jge
and
ret
cmp
gs
das
adc
mov
test
rcl
add
pop
mov
aad
ficomp
sahf
xor
mov
inc
push
aam
in
jmp
xchg
popf
cmp
or
aas
movs
test
loope
jne
rol
dec
shr
jmp
add
xlat
mov
loopne
fcom
mov
mov
dec
outs
or
mov
cmp
mov
push
xor
and
aaa
pop
add
or
(bad)
aad
push
mov
adc
loope
jae
pop
dec
sub
sub
shl
and
mov
sbb
push
adc
dec
dec
mov
inc
xchg
sbb
ror
mov
inc
inc
retf
add
adc
sub
jl
inc
call
and
jbe
das
xchg
mov
and
pushf
and
add
add
scas
and
leave
xor
lock
xchg
enter
push
pop
add
fcmovb
adc
ret
mov
aas
cdq
inc
and
mov
loop
pusha
adc
shl
mov
cs
inc
sub
inc
xchg
adc
mov
lea
push
cmp
sbb
add
test
inc
push
add
inc
add
mov
repnz
jae
mov
shr
mov
vaddsubpd
ins
push
adc
or
adc
aad
adc
addr16
push
or
or
xchg
and
add
or
adc
add
push
jge
icebp
and
or
icebp
lods
add
sbb
inc
scas
mov
loopne
cmp
mov
sar
in
inc
or
mov
fnsave
cmc
sub
inc
loope
and
daa
cwde
jecxz
or
ret
or
dec
or
pop
ror
das
lds
adc
dec
cmp
sub
in
inc
or
adc
mov
sub
inc
jne
sbb
push
push
sub
xor
outs
popa
push
mov
in
and
les
in
or
xchg
sbb
xchg
mov
in
xchg
push
sti
mov
and
pop
bnd
or
add
mov
and
cwde
pop
into
xchg
xor
or
pop
add
xor
or
or
mov
push
addr16
imul
xor
push
inc
mov
mov
xor
pop
lock
xchg
jb
inc
movs
cmp
daa
mov
add
xor
sbb
les
int3
mov
lods
and
aam
push
test
scas
jne
dec
xor
les
das
test
mov
sbb
mov
sub
pusha
sub
push
fmul
push
adc
and
cdq
mov
xchg
cdq
pop
jb
and
xchg
mov
add
inc
inc
test
mov
adc
lahf
inc
push
ja
out
loopne
enter
add
xchg
fldl2e
sbb
sub
mov
sbb
cmp
and
mov
xor
xor
shr
pop
lahf
push
inc
push
or
loope
or
cmps
or
add
lock
rol
xor
mov
and
inc
ss
and
xchg
xor
add
and
push
and
ret
les
ret
mov
mov
mov
xor
test
xchg
mov
in
(bad)
sub
aaa
jmp
daa
adc
and
mov
mov
sbb
mov
(bad)
dec
or
pusha
dec
sub
xchg
or
out
pop
lods
dec
or
pop
loope
enter
add
push
push
inc
outs
pop
clc
mov
repz
je
loopne
xchg
xchg
pop
call
cmps
jne
mov
inc
test
inc
xchg
jg
ja
sbb
xchg
inc
aad
gs
jecxz
push
cmp
leave
sbb
jne
add
les
adc
shl
retf
add
imul
das
push
nop
push
xor
mov
or
int3
iret
xor
call
cdq
in
xchg
sub
daa
add
into
add
and
shl
fs
sub
iret
xchg
fwait
add
gs
add
nop
jo
jp
leave
or
daa
vpcmpgtb
xchg
test
push
dec
out
sub
push
pusha
adc
mov
bound
and
test
ret
mov
aaa
aam
xchg
hlt
test
xchg
xor
adc
sub
xor
adc
test
xchg
mov
and
enter
sub
xor
cdq
sbb
and
adc
xor
jo
push
add
fbstp
mov
xchg
dec
mov
inc
push
mov
xor
jecxz
fs
mov
xor
mov
lahf
and
push
retf
add
add
shl
adc
adc
ror
test
add
pop
sbb
add
xchg
add
(bad)
push
fadd
mov
adc
call
xchg
and
(bad)
das
push
enter
andnps
(bad)
jo
popf
xor
pop
mov
or
mov
add
jecxz
inc
leave
lahf
mov
push
gs
sbb
and
outs
cld
lods
mov
mov
daa
mov
test
les
jecxz
add
call
iret
dec
enter
jecxz
shl
bts
and
ret
stos
pop
iret
and
and
lea
and
test
mov
add
pusha
cmp
add
add
inc
mov
sbb
cmps
xor
dec
outs
outs
cmp
or
dec
push
shl
and
jecxz
jp
test
or
xchg
ret
xchg
aaa
add
or
or
sbb
sub
pop
fldcw
call
cld
mov
add
xchg
aam
sbb
or
fwait
push
fcomi
mov
aaa
cmps
lods
or
fadd
rcr
xor
rcr
adc
inc
pushf
or
xor
cwde
retf
sub
lods
fild
cmp
sbb
test
ret
popf
xor
loope
movs
repz
popa
push
fst
and
cwde
repz
push
push
repz
shl
rcl
inc
je
push
inc
mov
mov
or
arpl
cmp
mov
add
push
dec
sbb
jne
imul
sti
gs
sub
cmp
mov
or
repz
lock
std
xchg
sbb
lods
jg
cmp
or
mov
xor
inc
jmp
cmp
inc
dec
xor
xor
dec
jg
ins
lods
leave
rcl
inc
loope
arpl
dec
and
dec
inc
inc
dec
jle
(bad)
push
adc
push
push
mov
push
mov
iret
jp
fadd
add
daa
xor
out
push
loopne
lods
sbb
test
leave
int3
int3
mov
adc
xor
gs
cs
xchg
xchg
xchg
das
test
jmp
sbb
jmp
outs
je
add
xchg
cmp
fcmovnbe
mov
(bad)
push
push
outs
jnp
jns
mov
sub
cmps
call
iret
sti
sbb
jg
popf
cmovno
test
out
jle
cmp
sbb
lea
dec
or
push
sbb
and
pop
cmc
adc
iret
jbe
ret
push
xchg
frstor
or
mov
cmp
clc
sub
or
add
inc
popf
fsubr
mov
nop
lea
scas
dec
lods
sub
pop
or
cmc
xor
adc
or
sbb
mov
sti
mov
fs
sub
inc
cmp
sub
and
outs
ret
add
mov
imul
mov
push
ins
stos
call
movs
add
sbb
into
push
aas
inc
mov
retf
fidiv
cmp
lods
mov
call
out
sbb
mov
mov
push
ds
pop
xor
scas
icebp
xchg
and
shl
jmp
adc
add
adc
push
push
xchg
or
fild
dec
outs
sub
mov
inc
mov
fcom
xchg
add
push
mov
test
out
in
xchg
(bad)
mov
ficomp
adc
lahf
inc
or
iret
adc
xlat
and
loop
cmps
xor
sub
and
push
mov
inc
mov
test
jecxz
or
(bad)
rol
add
ret
mov
jno
add
dec
ret
pop
ret
loopne
loopne
inc
adc
(bad)
neg
mov
xor
lock
arpl
inc
jnp
movs
(bad)
enter
aam
(bad)
adc
jo
(bad)
push
fld
or
dec
xchg
es
scas
fcom
adc
mov
loopne
ss
in
mov
mov
fbstp
add
dec
imul
inc
adc
xchg
xor
and
aad
sar
or
sub
(bad)
nop
xor
add
js
rcr
mov
push
fdiv
sub
not
mov
xchg
adc
mov
and
and
hlt
inc
xchg
inc
pop
fwait
xchg
iret
adc
and
mov
inc
cmps
sub
adc
mov
jb
(bad)
inc
xor
(bad)
popf
test
cmp
and
data16
jne
xchg
and
pop
push
pop
or
gs
sub
invd
pop
xor
dec
cdq
sar
(bad)
js
mov
pop
mov
movups
into
jle
ret
inc
push
jge
adc
lds
pusha
mov
jnp
popf
into
jmp
clc
fiadd
rcr
push
jno
or
add
leave
sbb
jbe
adc
adc
xchg
sti
int
and
and
pop
inc
xor
dec
int3
ins
pop
lock
jae
sahf
shl
icebp
add
sub
mov
gs
or
lock
inc
mov
lods
test
popa
push
inc
xchg
or
mov
adc
adc
or
ds
ror
mov
xor
ret
dec
xor
test
jne
add
loopne
sbb
sub
xor
and
inc
ins
xchg
cmps
cmp
test
jbe
cmp
in
add
inc
or
cdq
add
dec
pusha
rol
shr
pop
mov
jge
or
lea
add
or
pop
sub
mov
or
mov
ins
daa
push
aam
add
fnsave
and
push
pop
mov
lds
mov
fidivr
(bad)
pop
pop
into
es
sub
lea
lock
dec
mov
movs
dec
xchg
test
xchg
sbb
sbb
loope
sbb
inc
inc
xchg
push
adc
push
dec
add
stos
push
inc
xor
rcr
cmovb
rcr
jge
(bad)
adc
jne
int
xor
(bad)
adc
and
dec
adc
push
rcl
lea
retf
sbb
push
xchg
adc
pop
loopne
sbb
(bad)
(bad)
loopne
and
ret
add
ja
js
fsubr
(bad)
aam
sbb
rcr
or
inc
adc
adc
fstp
and
cmp
repnz
cmp
nop
mov
push
or
push
and
xor
sbb
mov
xchg
xchg
sahf
(bad)
in
(bad)
les
inc
rcl
add
xchg
mov
sar
sbb
push
mov
jnp
jg
dec
dec
jnp
mov
jno
add
sahf
cmp
mov
xchg
pushf
or
lods
lods
add
jge
and
add
xchg
dec
pop
pop
xchg
sbb
or
mov
jecxz
and
int
xchg
pop
push
dec
fldenv
and
icebp
sub
xchg
arpl
stos
fst
push
mov
test
rol
hlt
sbb
jne
push
xchg
sbb
or
ficom
adc
xchg
xor
dec
ins
repnz
cmp
fnstcw
rcr
pusha
(bad)
imul
int3
aam
and
in
loope
xor
aaa
xchg
dec
sub
stc
sbb
outs
inc
(bad)
out
or
dec
hlt
fmul
add
sahf
dec
push
add
nop
dec
dec
push
enter
sbb
cmps
mov
pop
fdiv
push
inc
loop
pop
push
inc
cs
and
or
sbb
pop
sar
dec
or
sub
xchg
sbb
xor
and
xchg
xor
data16
push
sbb
adc
sub
push
add
or
push
into
cwde
rcr
fmul
add
adc
pop
inc
adc
push
pop
adc
test
inc
inc
fucom
xor
sbb
nop
into
dec
xor
test
adc
push
xor
adc
sub
mov
mov
adc
mov
dec
mov
sub
ret
idiv
sub
ret
mov
lock
in
sub
ret
and
push
or
or
or
xchg
add
xor
fwait
aam
inc
xchg
test
sbb
xchg
js
adc
adc
aaa
out
loope
jecxz
stos
stos
icebp
sub
adc
call
jle
lea
sub
fwait
sub
xor
adc
lea
repnz
add
and
retf
jo
mov
arpl
enter
sbb
call
in
call
pop
pop
dec
shr
or
sahf
pop
scas
mov
or
fcom
add
pop
enter
pop
mov
ins
adc
fadd
retf
jmp
sti
adc
cmp
jl
inc
test
les
mov
outs
rcr
mov
mov
or
add
and
ins
xor
xor
mov
push
mov
cmp
dec
leave
xor
or
test
add
xor
pop
sar
fcmovbe
mov
leave
adc
nop
jl
inc
jo
inc
add
test
loopne
rcr
aam
adc
scas
nop
aad
data16
dec
aam
enter
daa
(bad)
shr
xchg
sbb
aam
add
and
xlat
mov
cmp
dec
leave
in
int3
mov
sbb
int3
in
add
xchg
adc
sub
dec
sub
ss
push
test
daa
adc
nop
mov
rol
ret
into
mov
or
xchg
xor
push
add
cmp
jno
push
push
mov
add
or
mov
ret
(bad)
pop
xchg
push
add
dec
loope
test
nop
inc
cmps
or
es
xor
pop
adc
sar
adc
and
jbe
das
adc
or
jne
stos
or
pop
xchg
ret
jmp
inc
rol
ja
pop
inc
fst
call
cs
or
mov
sub
inc
jns
and
loopne
jmp
lahf
fdiv
push
dec
adc
lods
sbb
xchg
xchg
lock
jmp
pop
rcl
xor
ins
out
bound
popa
inc
push
xchg
lock
js
push
stos
pop
mov
inc
adc
mov
pusha
and
fwait
adc
fisubr
or
and
jge
push
rcl
int3
xchg
in
adc
adc
nop
sbb
inc
inc
lods
lods
push
push
sub
pop
out
arpl
lods
das
dec
daa
sbb
(bad)
dec
mov
test
pop
aaa
push
dec
aaa
stc
idiv
or
imul
sub
push
ret
outs
mov
sti
push
push
sbb
sbb
ja
nop
imul
sub
adc
sub
adc
inc
or
movs
lods
dec
sub
inc
adc
mov
and
leave
movs
movs
and
and
jle
fidiv
dec
xor
xor
les
in
push
pop
or
sub
dec
dec
and
daa
ins
mov
adc
jmp
cli
fcomp
in
ret
xchg
movs
sbb
pushf
leave
dec
stc
movs
xor
outs
or
ss
and
gs
loopne
sbb
outs
cmp
or
add
pop
enter
add
leave
xor
dec
iret
adc
xor
pop
lock
inc
data16
or
mov
push
retf
cdq
inc
loop
iret
xchg
adc
test
fadd
ret
int3
cmp
and
pavgw
jnp
add
jno
jne
lds
fsub
in
dec
adc
test
cmp
cwde
popfw
popa
sub
inc
and
lods
pop
xor
enter
or
push
enter
and
sub
pop
xchg
mov
adc
pop
inc
imul
xor
sub
(bad)
dec
add
pmullw
push
inc
in
shl
in
inc
call
bnd
(bad)
or
(bad)
das
mov
rcl
add
fdiv
fwait
xor
adc
push
adc
ins
pop
adc
adc
cmps
and
mov
mov
jns
sub
sar
pop
sub
call
pop
or
fs
mov
dec
pop
adc
lock
rcl
nop
sub
sbb
sbb
sbb
adc
and
pop
xor
add
add
push
and
aaa
in
fdiv
out
cld
(bad)
adc
cmp
xlat
push
adc
xlat
push
fadd
xlat
mov
out
(bad)
mov
sub
ret
dec
leave
mov
mov
ins
iret
sbb
pop
js
add
sbb
clc
or
cmp
jnp
in
and
out
loopne
leave
add
fst
(bad)
clc
jo
movs
dec
fdiv
adc
inc
popa
sbb
adc
mov
inc
mov
sub
aaa
sub
jo
push
rcl
enter
scas
dec
scas
xchg
sbb
int3
stos
or
xchg
adc
push
inc
cmps
xchg
sbb
mov
sub
inc
mov
daa
or
in
sub
add
mov
mov
push
movs
and
and
leave
hlt
repz
and
aaa
push
adc
and
and
mov
add
push
out
cmp
and
test
mov
push
mov
or
in
cmps
sub
inc
imul
jo
push
cdq
sbb
test
push
inc
sub
and
cmp
(bad)
fild
in
xchg
and
mul
adc
dec
adc
mov
jecxz
xchg
test
das
mov
inc
push
sbb
cmp
mov
ins
xchg
add
retf
xor
adc
inc
cld
xchg
out
xchg
sbb
push
fs
jbe
cld
ret
sbb
aam
dec
adc
push
xchg
mov
jb
and
xor
scas
stc
adc
repnz
mov
add
xchg
push
mov
push
fwait
cs
(bad)
sub
jl
xchg
in
or
xchg
add
stc
popa
fwait
xor
fprem
std
adc
adc
and
xchg
nop
add
pop
mov
in
adc
lock
and
adc
xchg
and
sub
inc
cmp
sub
int
inc
(bad)
and
or
cld
shr
cs
fcom
add
push
adc
xor
das
inc
or
xlat
clc
xor
jl
adc
lea
mov
inc
adc
add
pop
adc
dec
cwde
rep
cli
xor
std
mov
loopne
push
mov
ror
ftst
les
mov
sub
sub
and
inc
sar
cmp
shl
push
jae
xchg
and
xchg
inc
inc
popf
push
mov
cmps
inc
add
xor
ret
add
add
ins
pop
fldenv
sub
fidiv
adc
(bad)
nop
ss
lods
call
sar
enter
sbb
mov
push
mov
test
xor
in
and
or
mov
mov
or
sub
push
pop
(bad)
sub
push
ror
popa
add
leave
adc
cmp
xchg
arpl
push
sub
dec
leave
nop
nop
and
cmp
arpl
iret
inc
or
inc
xor
ds
arpl
aad
leave
xchg
add
dec
dec
ret
aaa
inc
popa
(bad)
addr16
scas
nop
push
leave
add
pop
adc
ret
mov
adc
or
mov
add
pop
icebp
xor
jo
mov
je
pop
pop
rol
lods
and
pop
adc
ret
add
and
lock
or
pop
ret
pop
push
or
fst
call
or
inc
shl
add
and
fcom
inc
pop
add
(bad)
xchg
imul
jb
jo
clc
iret
add
add
sub
and
clc
mov
sub
scas
inc
js
cmp
hlt
sub
les
push
popf
xor
pop
test
or
popa
and
xchg
inc
add
or
fisub
inc
xchg
add
mov
jbe
push
ret
sub
mov
lods
mov
ret
int3
cmp
cmp
jne
xchg
rol
jo
mov
adc
adc
lds
sbb
sub
inc
fsubr
in
xchg
ss
outs
pop
cs
mov
jo
sub
lea
nop
mov
push
or
cmp
dec
retf
pusha
pop
or
xchg
les
inc
dec
cmps
lock
daa
xchg
mov
xchg
jne
xor
xchg
call
inc
popf
ins
or
and
or
cdq
stos
and
inc
lods
jge
or
dec
test
xor
cmps
push
pop
dec
and
xchg
sub
pmulhuw
push
dec
arpl
test
mov
jne
jne
adc
inc
adc
xchg
pop
sbb
xchg
push
aas
add
dec
adc
jns
mov
ror
out
push
and
and
dec
add
iret
add
rcl
jl
inc
jmp
mov
aad
pusha
shr
mov
pushf
inc
fimul
sbb
popa
jmp
fyl2x
dec
xchg
inc
js
fistp
sub
dec
xor
fs
out
inc
xor
push
cmps
mov
je
pop
enter
nop
imul
mov
fs
or
lock
mov
dec
dec
jbe
ror
(bad)
(bad)
(bad)
pop
enter
cmp
sub
dec
cs
cmp
in
mov
dec
pop
enter
adc
adc
or
movs
or
ret
lahf
popa
xor
in
call
imul
cmps
mov
int3
dec
clc
call
jle
pop
leave
xor
push
mov
sub
pop
jmp
jp
adc
inc
ja
mov
(bad)
sub
loop
fcom
fadd
outs
fcom
imul
adc
pop
lea
jg
adc
and
sbb
dec
ret
dec
xor
mov
outs
and
pop
push
jl
push
xor
sub
cmc
add
mov
mov
xor
lock
push
dec
loope
enter
popa
xchg
les
pop
or
jno
cwde
mov
xchg
lahf
aam
mov
push
mov
gs
sbb
mov
lock
add
in
jae
rcl
in
cli
mov
shl
out
shr
rcr
test
inc
movs
push
test
(bad)
(bad)
jg
adc
ins
xor
mov
aam
sbb
int
adc
imul
cwde
mov
(bad)
(bad)
jecxz
push
mov
fs
pop
sbb
or
call
pop
pop
(bad)
rol
shr
inc
nop
lds
adc
ss
pushf
outs
mov
ds
lock
std
pop
cmp
or
stos
movs
add
add
or
xchg
into
pop
dec
push
adc
pop
inc
push
jo
dec
push
and
dec
and
imul
or
ins
popa
repnz
ror
xor
fsub
aad
cmp
inc
mov
retf
cmp
ret
add
inc
jmp
pop
jo
repz
add
daa
imul
add
push
adc
repz
xchg
lods
push
push
push
test
xor
mov
inc
call
mov
and
xchg
adc
dec
movs
adc
(bad)
sbb
test
and
push
retf
add
hlt
imul
add
xor
fdiv
or
add
sbb
arpl
add
(bad)
push
out
popa
loope
fsub
mov
xchg
shl
dec
gs
ins
adc
mov
push
or
and
push
movs
nop
sub
fdivr
add
inc
stos
adc
cmp
mov
sub
stc
sub
pop
lds
retf
mov
retf
mov
lods
xor
mov
add
or
outs
test
sbb
ins
rcr
imul
xor
iret
es
imul
lock
mov
adc
in
mov
xchg
mov
or
jne
sbb
mov
xor
adc
test
pop
retf
and
fcmovne
or
pop
clc
retf
or
stos
dec
mov
dec
push
ins
jle
pop
dec
and
sbb
jno
lods
add
inc
add
dec
jecxz
dec
and
adc
add
(bad)
and
push
aam
add
push
pop
add
mov
dec
(bad)
aad
and
sbb
aad
je
pop
xchg
and
js
sbb
jmp
cmp
sbb
inc
(bad)
(bad)
cli
sub
cwde
out
nop
stos
shr
les
add
xlat
add
imul
pop
sub
add
ins
ss
push
in
push
std
fld
xchg
add
sub
or
and
movs
add
jo
pop
enter
inc
push
mov
push
dec
mov
rol
lock
mov
pop
dec
rcl
out
mov
jecxz
add
popa
(bad)
std
add
cmps
cmp
adc
adc
pop
fs
or
jecxz
xchg
icebp
shl
mov
call
xor
or
mov
and
dec
gs
add
shr
pop
jae
(bad)
jns
cmp
xor
mov
call
bswap
jns
inc
or
aaa
mov
and
pop
cmp
xor
dec
rcr
xor
loopne
add
push
ins
movs
pop
pop
add
add
das
jne
or
aas
rol
push
rol
push
jmp
pop
pop
test
xor
xor
pop
es
and
(bad)
add
dec
fwait
jmp
jge
sub
jno
lea
xor
or
lock
(bad)
mov
pop
ret
nop
xor
ins
adc
shl
jne
or
dec
shl
enter
and
sub
pop
stc
inc
fisub
bound
sbb
clc
or
lea
and
sbb
push
jno
fbld
sub
or
popa
inc
sub
blsic
mov
test
fs
inc
scas
nop
outs
push
lock
or
push
xor
adc
jno
xchg
adc
(bad)
mov
data16
xchg
cmovno
pop
ins
stos
pop
inc
cdq
sub
mov
ins
inc
push
cmps
in
xor
jo
xchg
and
ins
dec
cmp
add
and
or
pop
push
and
or
dec
inc
and
pop
and
loope
dec
cwde
jp
inc
ds
xor
adc
mov
sbb
xchg
fadd
mov
xor
dec
jb
fcomp
dec
pop
popa
xor
push
fld
inc
sbb
sbb
add
mov
mov
test
iret
add
inc
mov
sbb
adc
mov
inc
stos
stc
lods
test
aas
adc
xor
pusha
mov
push
add
xchg
pop
scas
mov
jae
xor
gs
xor
cmp
lock
add
inc
xchg
and
dec
push
push
xchg
push
and
xor
mov
inc
ror
or
aas
call
xchg
or
or
fs
add
stos
ret
arpl
cmps
imul
and
mov
mov
mov
or
push
fild
mov
(bad)
inc
mov
fidivr
rol
adc
or
out
lahf
cmp
add
push
push
or
shl
(bad)
in
out
adc
push
outs
jg
fadd
and
push
jne
shl
movs
mov
js
and
ss
cmp
(bad)
and
jge
lea
and
inc
mov
xor
cld
xor
loop
xchg
mov
sbb
or
sub
imul
push
in
dec
jge
out
add
jge
neg
adc
das
pop
xor
jge
fisttp
and
pop
or
add
pop
out
shl
cmp
jmp
mov
inc
cmp
scas
leave
gs
bsf
sbb
fwait
or
in
aad
sbb
(bad)
loopne
ins
pop
mov
sbb
pushf
pop
or
lea
jecxz
imul
nop
les
movs
adc
sbb
or
push
fcmovnu
mov
mov
icebp
push
inc
lods
cmp
jne
xor
mov
aam
enter
add
lods
mov
mov
icebp
fs
push
or
test
xchg
hlt
ror
pusha
fwait
rol
or
sbb
cdq
in
sub
xchg
xor
pop
(bad)
mov
and
push
jno
pusha
mov
int
adc
loopne
xchg
outs
mov
inc
pusha
jg
mov
add
jmp
inc
imul
shl
adc
mov
xor
jne
mov
push
mov
dec
stos
imul
jle
je
mov
add
mov
inc
and
aaa
(bad)
cmp
(bad)
in
and
sub
inc
jmp
push
sub
and
cmp
jg
xchg
xlat
adc
ins
add
inc
in
mov
push
pop
push
mov
jmp
and
outs
mov
(bad)
ja
lds
xchg
fsub
or
xchg
movs
adc
push
push
mov
in
lods
and
sti
and
cld
sbb
add
xor
adc
mov
add
or
and
or
adc
add
mov
push
add
add
adc
add
pop
and
sub
mov
push
repz
js
sub
xor
cmps
dec
mov
retf
and
in
call
cmp
jb
popa
adc
in
xchg
xchg
pop
sbb
mov
movs
leave
sbb
enter
fadd
and
adc
pop
jne
or
xchg
shr
jb
rol
enter
dec
enter
fs
mov
in
leave
mov
mov
jb
xchg
pop
mov
and
lods
lods
and
xchg
adc
cmp
add
test
xchg
or
xchg
movs
and
or
enter
xchg
cwde
cwde
dec
xor
xchg
and
jmp
inc
jb
imul
test
add
jl
add
imul
js
add
jo
adc
leave
sbb
xor
mov
js
sbb
xor
leave
fild
mov
push
clc
cwde
dec
jb
and
rol
mov
sub
retf
and
pusha
sbb
push
fisubr
adc
cdq
stos
iret
and
sub
or
sub
xchg
(bad)
or
adc
mov
sbb
jne
loope
dec
add
retf
and
push
push
sar
dec
ret
shl
pop
dec
inc
dec
jbe
sub
cmps
cmp
in
leave
rol
cmp
shr
imul
cmp
popa
bound
adc
xchg
adc
dec
add
jnp
mov
clc
add
inc
adc
and
sbb
loopne
push
jnp
pop
jo
imul
and
mov
cmp
xor
add
xor
add
add
xchg
arpl
and
mov
pop
and
xor
aad
and
(bad)
add
push
mov
jns
xchg
ffreep
add
dec
dec
sahf
inc
inc
stc
xchg
test
and
mov
and
push
imul
xchg
test
xor
loopne
je
pop
ins
and
(bad)
mov
sbb
movs
adc
imul
imul
or
retf
gs
int3
mov
hlt
inc
pop
retf
int3
dec
add
push
pop
adc
test
daa
hlt
add
jb
add
pop
sbb
and
(bad)
ror
cmps
out
xchg
or
stc
push
hlt
adc
clc
movs
fcmovu
xchg
std
sbb
xchg
xchg
mov
out
xchg
pop
in
adc
push
pop
ins
mov
aad
mov
pop
sbb
pop
sub
leave
mov
jmp
pop
mov
mov
bound
xchg
dec
jmp
push
push
fsubr
mov
pushf
sbb
jno
cmp
imul
or
cwde
xor
addr16
pop
ins
cmp
rol
cdq
mov
inc
sbb
nop
cs
mov
adc
inc
enter
xor
fs
shr
mov
test
sub
xchg
test
mov
xchg
test
movs
mov
nop
xchg
icebp
xor
je
xor
sbb
mov
add
mov
inc
sbb
adc
(bad)
cli
sub
aam
dec
mov
push
mov
fld
pop
jae
pop
call
dec
xchg
jecxz
push
ret
cs
push
mov
pushf
xchg
and
adc
inc
rcr
adc
or
mov
cmps
xchg
mov
add
xor
xchg
in
sbb
loopne
retf
and
scas
aaa
add
and
sbb
mov
test
jnp
and
nop
retf
or
jo
fs
enter
mov
push
push
sbb
mov
ret
sub
inc
pusha
mov
daa
sbb
mov
mov
cmp
dec
ins
ror
mov
jbe
rcl
sbb
pop
push
dec
or
jo
xchg
mov
jge
mov
jecxz
sbb
push
jb
push
sbb
mov
test
mov
push
pop
jbe
test
jne
scas
push
fidivr
popa
adc
movs
inc
push
test
jo
jmp
(bad)
adc
(bad)
push
inc
push
pop
lds
xchg
dec
push
in
cmp
cmp
sbb
and
xchg
cmp
adc
test
sbb
test
ret
push
push
mov
xor
add
inc
es
popa
add
cmp
les
je
mov
jb
cmps
movs
dec
fstp
leave
cmovs
sub
ins
xchg
xchg
mov
sti
nop
jne
lock
cmp
enter
mov
dec
rcl
xor
push
push
leave
rol
sti
xchg
push
cs
aas
push
jbe
xor
mov
xchg
pop
test
ins
out
inc
or
jne
dec
mov
(bad)
mov
sub
fwait
or
in
mov
test
inc
loop
or
out
out
sub
push
adc
cmps
mov
xchg
jne
add
fidiv
mov
pop
je
xor
cmp
sub
push
mov
mov
inc
add
in
std
add
push
bound
rcr
loopne
push
jns
cmc
loopne
adc
shl
sub
cmp
mov
sbb
inc
mov
jo
adc
pop
xor
add
lock
sub
mov
add
mov
push
sub
xchg
sbb
lea
movs
adc
das
(bad)
ins
add
add
loope
mov
or
aad
add
push
xchg
cs
gs
inc
and
pop
call
and
mov
(bad)
and
cmp
loopne
and
aad
cmp
mov
sar
jl
movs
push
adc
sub
adc
xchg
aaa
shl
loope
mov
add
push
xchg
jl
loop
pushf
shr
mov
inc
call
add
and
or
retf
shr
mov
outs
xchg
aad
or
imul
ret
test
imul
add
retf
push
add
xor
mov
add
adc
or
mov
jmp
rol
hlt
pop
dec
push
fs
xchg
dec
adc
and
inc
iret
loope
mov
add
sub
add
nop
xchg
popa
dec
movs
adc
das
inc
inc
ret
inc
gs
dec
inc
xchg
adc
mov
das
cmp
arpl
sbb
mov
(bad)
and
jge
jne
cmp
or
imul
test
add
mov
inc
imul
dec
inc
dec
retf
inc
adc
addr16
(bad)
fldcw
adc
sub
lds
nop
push
cdq
(bad)
and
add
ror
lock
popa
nop
adc
movs
fwait
inc
imul
fistp
xchg
adc
or
mov
daa
xchg
push
shl
imul
xor
lods
xchg
popa
or
add
inc
fwait
pushf
nop
inc
and
sub
(bad)
movs
cld
shr
add
fucomp
push
and
jmp
je
adc
test
push
sbb
and
retf
nop
lods
cmp
add
adc
push
loope
dec
stos
adc
imul
xor
leave
fcom
and
add
sub
mov
cmp
pop
das
pop
or
dec
xor
inc
not
cdq
(bad)
xor
mov
dec
dec
fwait
movs
in
or
pop
rcl
dec
cmc
int3
in
dec
cwde
mov
test
sahf
jp
push
add
adc
dec
fdivr
shr
pop
inc
pop
js
jmp
pop
add
push
add
or
fadd
dec
addr16
and
pop
dec
add
or
test
pushf
mov
or
inc
mov
mov
fistp
or
sbb
and
add
push
jl
lods
les
and
jo
rcl
push
adc
mov
cmp
push
xchg
lods
ret
and
cmp
fs
test
inc
push
cmc
cwde
mov
shl
mov
push
sbb
nop
pop
cdq
stos
add
push
mov
(bad)
cs
nop
pop
pushf
pop
xchg
mov
sbb
pop
jge
shl
or
xchg
mov
push
and
add
push
dec
adc
pusha
and
fimul
movs
popa
dec
add
xchg
loopne
xor
pop
nop
xchg
xchg
rcl
cmp
or
pop
push
sbb
cmp
sbb
jo
repz
cmp
xor
and
test
inc
mov
and
or
push
cdq
pushf
fs
add
dec
and
pop
mov
jns
loopne
and
mov
or
sbb
mov
sbb
and
adc
mov
add
in
add
ins
mov
in
xor
mov
push
jne
add
add
js
pop
(bad)
or
fldpi
add
imul
mov
fdiv
sbb
adc
add
pop
xchg
inc
adc
mov
sbb
xchg
ins
or
push
add
cld
std
data16
mov
pop
or
sub
stc
pop
push
or
nop
sub
or
lea
adc
cmps
cmps
jl
jns
cdq
in
pop
push
jns
call
jb
daa
mov
push
jo
xchg
fwait
loopne
lods
pop
leave
gs
in
mov
adc
loopne
in
add
push
add
imul
nop
rcr
imul
imul
rcr
sete
fnstcw
sub
outs
mov
or
inc
and
movs
int3
in
xchg
sub
retf
fmul
mov
xchg
xchg
mov
mov
dec
(bad)
stc
(bad)
mov
sbb
and
add
dec
or
pop
sbb
xor
mov
and
adc
lea
mov
xor
jae
iret
xchg
in
adc
fsub
mov
mov
leave
add
add
sub
dec
add
lods
lods
adc
xchg
in
dec
test
dec
push
push
scas
(bad)
inc
addr16
dec
cmp
movs
mov
cli
mov
add
mov
and
xchg
add
rol
add
and
mov
push
add
sbb
xchg
push
nop
cmp
mov
cmp
mov
mov
jb
mov
adc
dec
adc
sbb
cld
mov
jb
pop
pmullw
and
ja
jl
add
sub
push
dec
fdiv
cs
js
js
mov
dec
mov
sbb
push
enter
jbe
xchg
mov
push
xchg
adc
dec
or
icebp
mov
rol
lds
inc
les
jb
pop
inc
pop
pop
pop
xor
xchg
or
lds
jb
inc
push
lds
mov
or
or
stos
dec
aaa
in
sbb
in
or
add
addr16
push
cmp
adc
and
xor
cmp
adc
sti
pop
es
jo
retf
adc
sbb
and
push
scas
ss
sub
retf
xor
mov
fldenv
xchg
sub
sub
xchg
stos
push
mov
sbb
inc
and
loopne
jmp
sbb
add
ss
adc
jb
or
ror
leave
and
add
es
xor
or
imul
cld
cld
adc
retf
hlt
cld
ret
clc
cld
in
outs
adc
or
fsub
add
adc
or
xchg
mov
and
in
clc
adc
repnz
sbb
adc
call
add
fwait
test
das
adc
adc
dec
or
ins
mov
xchg
(bad)
xchg
leave
jecxz
xor
ror
add
fcomp
leave
aam
(bad)
xchg
add
xchg
pop
xor
enter
sub
test
xor
adc
rol
or
sbb
xchg
mov
jno
fnstenv
pusha
mov
mov
sub
mov
dec
or
fs
ret
pop
test
leave
or
movs
sbb
adc
movs
xchg
mov
stc
mov
sbb
gs
pushf
pushf
mov
nop
xchg
(bad)
fistp
xchg
xchg
pop
sub
mov
mov
mov
in
push
pop
xor
fild
mov
mov
adc
sbb
dec
es
inc
sbb
mov
jo
stc
xor
add
sub
xchg
add
test
rcr
iret
cmp
adc
bsf
lea
pop
movs
loop
dec
mov
shl
scas
(bad)
adc
push
leave
and
pop
pop
clc
(bad)
pop
rdtsc
xchg
add
enter
jbe
mov
or
add
and
mov
inc
shl
adc
dec
pop
dec
jmp
mov
cmp
in
mov
mov
dec
pusha
inc
shl
mov
mov
sbb
or
mov
sub
fimul
add
pop
push
pop
enter
xor
rol
cld
cmp
sub
enter
sbb
out
pop
nop
or
retf
add
and
mov
sbb
mov
fstp
dec
push
in
sbb
sbb
shl
and
mov
sbb
and
test
sbb
adc
push
xchg
xor
or
or
and
lahf
ss
add
in
push
loopne
test
mov
cld
sti
adc
fcom
popf
retf
pop
clc
sti
mov
test
jbe
loopne
cli
mov
jb
(bad)
hlt
sti
and
adc
sbb
nop
imul
retf
aaa
add
mov
push
mov
jle
sti
loop
stc
push
call
and
jae
sub
(bad)
sbb
dec
adc
rol
sbb
sti
jne
push
mov
inc
nop
sbb
int3
enter
fs
mov
mov
add
mov
mov
rol
in
mov
les
adc
bound
or
pop
ins
or
lods
stc
lods
fldenv
movs
test
inc
scas
xchg
dec
lods
dec
dec
jb
fs
pushf
mov
xchg
cs
cwde
add
xchg
stc
cdq
or
xchg
(bad)
jb
nop
xchg
dec
xor
push
xor
jae
adc
push
add
fnstenv
xlat
jl
inc
cs
jo
xlat
je
shl
in
jl
adc
call
js
adc
and
and
add
pop
nop
dec
cmp
out
adc
ins
xor
dec
sbb
inc
inc
push
mov
daa
or
and
add
and
pusha
nop
dec
jb
pusha
stos
popa
mov
inc
rcr
mov
pop
and
mov
pop
mov
add
jmp
xlat
push
test
leave
add
push
push
xchg
mov
mov
mov
or
dec
push
inc
fst
dec
dec
push
and
inc
sub
dec
inc
xchg
xchg
xor
(bad)
add
or
or
jmp
or
xor
add
jnp
das
jl
sub
or
pusha
ror
inc
js
adc
pop
dec
push
loopne
xor
loope
and
pop
add
jmp
pop
fcom
sub
and
mov
test
adc
jnp
or
stos
mov
and
xchg
cmps
push
or
xor
pop
mov
pop
push
add
adc
mov
inc
push
scas
push
icebp
retf
push
imul
or
pop
aam
sub
add
popa
imul
mov
mov
sbb
push
(bad)
mov
ja
and
inc
sar
sti
cmp
xchg
sti
xor
push
push
je
imul
ror
push
or
(bad)
cmp
or
adc
push
adc
adc
ins
mov
mov
mov
movs
int3
cld
cli
shl
xchg
sbb
add
jno
loopne
in
cld
and
sub
adc
gs
ja
xchg
in
leave
in
nop
push
aaa
in
cli
adc
hlt
cli
mov
cmp
sbb
mov
je
xchg
and
aam
pop
nop
lods
push
fldcw
mov
dec
xchg
icebp
cmp
clc
loop
xchg
mov
sub
xor
mov
pop
adc
xor
in
(bad)
mov
dec
xor
mov
jbe
sub
out
mov
add
xor
or
in
sub
cmp
adc
and
dec
addr16
ficom
xchg
sbb
mov
add
dec
ror
adc
adc
xchg
movs
inc
jmp
retf
add
imul
aam
or
or
lea
xchg
jo
shl
push
mov
outs
enter
push
and
xor
or
xor
add
push
xchg
or
sti
mov
xchg
shr
jns
sbb
fimul
lds
or
shl
xchg
imul
js
xor
add
fs
test
sar
and
les
clc
cld
push
inc
push
(bad)
fld
add
xlat
and
dec
xor
cmp
rol
fs
xor
popa
movs
or
xor
aam
add
aad
(bad)
push
daa
pop
and
xchg
popf
push
mov
mov
sub
lods
sub
cmps
adc
add
cmp
jne
repnz
push
cmps
sub
adc
call
cs
push
adc
jo
mov
inc
dec
add
pop
pop
add
mov
mov
iret
imul
jmp
int
or
jmp
add
jo
imul
bound
imul
daa
cmp
sbb
cmp
dec
adc
mov
test
push
mov
cmp
les
mov
mov
shl
xchg
dec
sub
pop
inc
das
xor
nop
adc
(bad)
movs
pop
popf
scas
(bad)
adc
pop
dec
ror
xchg
add
lods
mov
(bad)
fwait
push
lods
inc
adc
neg
je
or
mov
push
mov
inc
inc
and
pop
inc
mov
xchg
sub
imul
jns
std
xchg
cld
mov
sti
imul
inc
add
enter
push
cmp
cmp
les
sbb
nop
imul
loopne
cmp
add
add
pop
push
(bad)
cmp
pop
and
rol
ror
dec
mov
add
xchg
add
(bad)
mov
ret
add
loop
or
adc
(bad)
lds
push
push
frstor
add
call
push
in
lock
dec
push
loopne
pop
cdq
nop
or
fcom
mov
fmul
add
and
unpckhps
add
shr
adc
pop
leave
in
xchg
mov
inc
dec
push
(bad)
les
aaa
inc
dec
push
rol
adc
pushf
dec
xor
enter
and
mov
pop
and
jb
lods
adc
enter
movs
movs
pushf
or
test
mov
test
and
cwde
cwde
nop
xchg
add
sub
sub
lea
xchg
dec
add
mov
and
mov
add
jge
adc
and
and
ror
cmp
xor
mov
inc
imul
and
cs
dec
xor
add
inc
pop
push
mov
imul
inc
pop
pop
dec
sbb
bound
jo
add
adc
inc
inc
imul
inc
dec
dec
xchg
or
and
inc
inc
and
xor
add
inc
imul
inc
cmp
or
xor
adc
xor
adc
imul
nop
sub
ss
add
aaa
add
dec
add
inc
imul
fs
cmp
mov
shr
add
push
adc
imul
inc
or
fs
add
cmp
pushf
xchg
dec
add
add
adc
push
or
popa
inc
sub
das
clc
(bad)
sbb
add
xor
cmp
test
cmp
adc
or
call
call
leave
and
aas
add
inc
adc
imul
mov
fadd
fs
add
aam
and
pop
lds
pop
imul
sbb
dec
push
fs
rol
push
mov
imul
leave
or
dec
xor
push
inc
mov
xor
add
add
jnp
inc
pop
inc
dec
xor
and
leave
jmp
lahf
test
mov
cwde
jmp
jle
add
xchg
xor
inc
mov
add
dec
pop
jb
pop
mov
and
pop
add
sar
and
rol
pop
jb
pop
je
movs
sub
dec
adc
or
test
enter
or
xchg
dec
fs
adc
dec
cmp
rol
pop
jb
pop
or
push
push
pop
push
or
add
cmp
mov
dec
dec
mov
cmp
xor
inc
mov
dec
loop
mov
mov
push
inc
add
fs
pop
push
mov
test
add
inc
mov
icebp
push
mov
dec
sub
call
lods
loopne
push
lea
stos
shl
or
test
pop
popa
sbb
or
mov
inc
pop
jne
test
call
das
retf
add
or
repnz
fisttp
rol
xor
sbb
inc
in
mov
aad
retf
cmp
jge
leave
cmps
daa
lods
leave
and
jg
test
add
lods
pop
push
and
xchg
inc
call
mov
jne
call
fcmovne
xor
mov
cdq
in
mov
lods
mov
es
add
cmp
test
scas
jb
sbb
mov
dec
movs
push
and
xchg
mov
pop
add
dec
and
js
mov
enter
jne
aad
xor
add
test
ficomp
dec
call
mov
leave
mov
pop
or
dec
fimul
ficom
dec
jne
cmp
int3
aam
xchg
ret
enter
cmp
int3
add
add
cmp
lock
sbb
leave
pop
loopne
mov
or
mov
dec
in
dec
loopne
mov
add
popf
pop
xor
inc
imul
int3
xchg
retf
jmp
nop
in
and
popa
pop
push
in
add
test
fadd
fbstp
adc
inc
fdivp
xchg
pop
repnz
js
pushf
pop
inc
fadd
cmp
or
sbb
cwde
push
int3
sub
mov
add
or
sub
push
(bad)
dec
xor
xchg
pop
and
sub
push
fiadd
and
leave
dec
fstp
clc
loope
fwait
sbb
retf
sbb
aas
mov
push
and
adc
dec
or
and
aaa
xor
or
retf
repz
div
(bad)
mov
mov
iret
jle
jmp
pop
je
(bad)
xor
pop
and
in
dec
push
call
xchg
inc
jge
cdq
or
mov
cmp
and
jg
jno
ror
and
xchg
out
dec
imul
jae
add
gs
or
adc
xchg
pop
clc
sub
pop
xor
adc
mov
or
and
shl
xchg
mov
dec
jne
ins
lock
sub
fld
push
scas
or
inc
sub
and
(bad)
cmp
ja
inc
or
push
push
rcl
mov
add
in
(bad)
call
sub
cli
aam
jg
lods
dec
sbb
popf
mov
push
inc
sbb
inc
push
arpl
sti
push
sub
inc
hlt
sar
or
or
(bad)
fsub
inc
xchg
push
mov
pop
xchg
fisubr
mov
dec
jg
jne
movs
xchg
out
js
(bad)
mov
stc
sbb
enter
cmps
mov
fs
adc
push
mul
aam
cmc
fiadd
mov
ret
pop
push
adc
or
fcomip
gs
inc
xchg
dec
popa
popa
xor
pusha
ins
add
mov
enter
ffreep
dec
pop
push
pop
or
jp
mov
jl
jmp
mov
retf
pop
pop
adc
jae
or
dec
aad
(bad)
test
inc
hlt
out
dec
add
push
retf
(bad)
fdivrp
xchg
int3
xor
(bad)
xchg
fdivr
rcr
add
xor
ins
jae
sub
rcl
fdiv
jne
inc
push
sub
add
mov
mov
ret
inc
xchg
sub
(bad)
(bad)
or
push
push
ret
cld
(bad)
add
xchg
and
lea
add
mov
and
enter
inc
add
adc
xchg
inc
xchg
and
add
xchg
sub
daa
sbb
dec
sbb
ret
xchg
mov
ins
iret
xchg
imul
or
xchg
inc
pop
xor
movs
fist
sar
mov
sub
xor
or
xor
dec
test
mov
leave
dec
or
xor
and
add
dec
ss
push
adc
popf
mov
push
dec
xchg
in
cmps
dec
pop
leave
mov
adc
jmp
mov
xor
jp
adc
cmp
pop
cmp
push
mov
add
inc
mov
pop
lds
rol
mov
jb
imul
cmp
cli
jnp
xor
jl
cmp
mov
or
bound
ret
imul
inc
rcl
jmp
adc
pusha
push
mov
push
cmc
cmp
jne
dec
and
and
cmp
jae
test
or
and
or
cmp
sub
js
enter
enter
loope
pusha
dec
and
add
cli
daa
sbb
adc
or
daa
cmp
dec
sub
sub
js
dec
dec
or
mov
daa
sbb
jne
int
and
je
dec
jne
inc
je
cmp
mov
lock
clc
push
and
or
dec
xor
dec
inc
ret
adc
imul
inc
or
(bad)
xor
push
aam
add
leave
sbb
gs
fadd
in
test
shr
cmps
nop
dec
dec
(bad)
enter
fs
rol
xchg
jl
ins
jp
mov
shrd
popf
jmp
mov
cld
sub
fiadd
lea
push
xor
xlat
add
adc
mov
mov
sub
in
dec
lods
jge
and
sti
sbb
call
pop
jp
pusha
nop
(bad)
mov
add
sub
pop
cmp
mov
hlt
adc
in
daa
ins
nop
dec
outs
sbb
push
lods
lods
xor
push
add
mov
cmc
test
pop
jecxz
xchg
or
push
test
aad
mov
mov
adc
sbb
jo
adc
cmp
sub
leave
leave
mov
test
and
mov
dec
ret
pop
xchg
add
inc
ret
push
mov
aas
dec
repnz
xchg
adc
cdq
ins
ins
imul
sbb
adc
rcl
pop
cmp
test
icebp
xchg
and
movmskps
mov
cmp
popa
loopne
xor
inc
ret
mov
pop
sbb
or
or
dec
add
adc
inc
inc
inc
inc
adc
push
jp
fcom
mov
push
fld
mov
sub
cdq
jo
sbb
stos
jmp
inc
adc
std
add
sub
pop
sub
or
enter
retf
fadd
int
add
addr16
or
in
in
fs
xor
mov
inc
and
push
jg
pop
add
loopne
pop
push
sub
and
mov
inc
jnp
adc
std
add
inc
out
sbb
add
xor
sbb
push
nop
(bad)
mov
shl
push
hlt
lea
bound
leave
ret
cmp
ss
mov
aam
push
js
push
pop
and
xchg
mov
mov
fnstsw
mov
mov
dec
sbb
out
cmp
sub
mov
mov
add
mov
mov
out
pushf
mov
inc
outs
mov
cwde
add
dec
cwde
pop
pop
push
leave
xchg
mov
jmp
or
xchg
xchg
mov
xor
pop
je
fstcw
mov
jo
dec
xor
pop
inc
mov
icebp
popa
sbb
cwde
pop
adc
les
je
or
movs
lea
lahf
leave
and
mov
and
sub
int
lods
xchg
(bad)
sbb
sbb
ins
sbb
cmp
fsubr
pop
add
pusha
lahf
je
(bad)
xlat
adc
sub
(bad)
push
imul
cmp
imul
cmp
mov
or
inc
aas
ins
sbb
lds
add
pop
sbb
xor
imul
mov
repz
and
push
and
repz
or
pop
inc
inc
sar
sub
scas
ds
fwait
mov
gs
sub
fstp
outs
xchg
lea
push
push
mov
add
cwde
sub
hlt
movs
dec
enter
mov
stc
adc
mov
cmp
lds
dec
mov
xlat
cs
cmps
pop
aas
jmp
aad
popa
add
add
add
dec
dec
fldenv
dec
mov
or
xor
mov
cmps
or
movs
sbb
xor
and
adc
mov
aaa
call
sbb
mov
sar
sub
out
stos
pop
inc
(bad)
adc
and
add
pop
ror
push
pushf
ins
movs
lea
das
sbb
dec
mov
leave
xchg
ret
adc
or
das
jne
mov
nop
ss
jne
add
sbb
xchg
lahf
cmp
mov
and
sub
jmp
cs
jno
mov
leave
cmp
sbb
and
shr
test
imul
outs
pop
test
sub
in
push
gs
xor
cmps
mov
and
push
mov
(bad)
sub
xor
xor
mov
push
inc
sbb
and
sbb
outs
and
movs
sbb
add
aam
mov
in
pusha
push
rol
lahf
push
hlt
xchg
xchg
push
nop
xchg
ja
jge
nop
mov
or
xchg
jns
jns
mov
cmps
fs
xchg
mov
mov
sbb
das
lea
mov
fdiv
in
out
and
test
dec
inc
jo
lock
inc
es
push
push
in
fs
pusha
add
inc
or
xchg
enter
adc
pop
enter
push
xchg
sbb
and
and
pusha
and
mov
fisub
das
dec
dec
push
add
jne
stos
cdq
dec
inc
pop
push
mov
and
mov
push
lea
inc
cs
das
mov
dec
sbb
aad
scas
sub
add
jmp
or
pop
mov
in
sub
xor
shl
lods
aaa
test
jbe
lods
add
mov
or
test
mov
dec
(bad)
lods
mov
mov
sub
pop
and
jecxz
pusha
movs
frstpm(287
fidiv
iret
mov
mov
dec
bound
inc
outs
and
addr16
or
mov
lea
test
add
adc
icebp
xlat
mov
movs
fcmovnu
out
jmp
mov
es
add
dec
pop
ss
ds
inc
cmps
nop
inc
in
sbb
mov
sub
mov
cmp
mov
xchg
adc
aam
sub
dec
pop
les
push
or
jbe
or
dec
add
pop
or
mov
and
int
movs
mov
jb
out
loop
pop
popa
push
sbb
add
sbb
jmp
jnp
xor
pop
mov
test
rol
mov
jno
push
es
retf
add
mov
pop
and
or
add
mov
or
ret
push
sbb
push
dec
ins
test
and
jmp
or
das
shr
call
and
sub
repnz
sahf
aas
and
es
cmp
push
ret
sub
xchg
pop
mov
ret
push
adc
rcl
inc
mov
or
pop
icebp
test
mov
push
add
aam
inc
imul
push
fisttp
out
and
repnz
pop
and
push
adc
arpl
lods
dec
adc
push
push
je
jg
or
dec
ins
lods
fbstp
aad
sbb
dec
stc
repnz
rcl
inc
add
fmul
iret
or
(bad)
push
push
pop
inc
pop
fcomp
mov
das
mov
aam
cmps
lock
aaa
aam
jg
sub
mov
fld
add
(bad)
xchg
xchg
adc
inc
jmp
push
adc
xchg
push
xor
shr
enter
and
ss
jle
ds
fwait
rol
xchg
add
adc
movs
mov
pop
pop
push
sbb
in
add
arpl
dec
mov
or
xor
pop
mov
or
push
cmp
mov
sbb
dec
xlat
stc
lea
push
jno
fnstenv
mov
stos
loopne
mov
adc
cmp
or
dec
test
dec
adc
xchg
push
push
lods
pop
push
mov
loope
xor
xchg
cli
outs
cld
mov
cs
xchg
imul
cwde
dec
fdivr
fmul
adc
or
push
xchg
cmp
jmp
lods
mov
adc
packuswb
pop
add
xlat
adc
movs
mov
adc
test
test
test
mov
lods
pop
add
add
test
mov
leave
loopne
aad
cld
mov
dec
add
mov
cmp
jecxz
test
cli
sbb
imul
jecxz
and
repnz
xor
inc
jns
mov
or
dec
stos
jmp
xor
sub
into
or
inc
cmp
cmp
(bad)
mov
push
mov
loop
nop
jb
ret
push
icebp
add
ror
jmp
sbb
gs
pusha
cld
add
inc
popa
adc
sub
mov
add
and
xchg
or
cmp
jg
mov
arpl
or
hlt
or
in
push
popa
jecxz
test
inc
popa
imul
xchg
mov
inc
or
jle
mov
sub
sbb
lods
sub
fcmovb
int
pop
les
and
pop
inc
dec
and
xchg
add
cmps
push
or
cs
in
shl
sbb
sub
jg
sbb
imul
lds
add
and
inc
loope
mov
call
sbb
inc
mov
(bad)
int3
movs
nop
inc
xlat
or
(bad)
fbstp
aas
cmp
scas
add
jle
or
add
retf
fdivr
mov
nop
add
movs
fnstsw
frstor
sbb
mov
dec
adc
mov
adc
mov
xchg
fcomi
add
xor
dec
test
lock
dec
add
jle
or
dec
test
lods
pop
pop
repnz
adc
popa
push
push
movs
jmp
sub
into
fist
inc
sbb
fldenv
and
into
sbb
xchg
sbb
and
push
cmp
loope
movs
cmc
push
or
jb
stos
mov
or
add
pop
stc
sub
retf
mov
cs
xor
mov
(bad)
push
adc
es
push
das
add
dec
push
loope
xchg
adc
xor
outs
jb
std
fcom
mov
jmp
sbb
mov
data16
jle
and
jno
xor
pop
shl
mov
sbb
popa
rol
fsub
in
dec
xchg
mov
fcomp
dec
pop
xor
lods
imul
xor
push
add
add
jns
pushf
ss
pop
scas
add
test
mulps
xor
inc
or
push
push
mov
ds
fadd
adc
push
test
in
test
lahf
fs
and
(bad)
shl
sub
xor
jmp
xchg
mov
xor
add
mov
jmp
or
ins
imul
pusha
scas
in
add
enter
dec
push
push
add
add
and
adc
jbe
mov
aas
nop
inc
scas
pusha
push
cmp
nop
add
mov
(bad)
cmp
inc
test
movs
mov
add
loope
pop
and
dec
sbb
ja
popa
inc
push
xchg
push
mov
push
sub
pop
add
jmp
or
pusha
mov
popf
cmps
mov
das
ja
dec
clc
sub
adc
add
cmp
fnstcw
imul
xor
xchg
dec
cld
add
xchg
dec
cld
and
addr16
jns
add
or
jno
cmps
push
das
sti
jbe
jle
cmp
mov
add
xor
loope
movs
test
and
stc
adc
test
imul
jp
adc
jge
add
adc
cdq
pop
push
cmp
fs
mov
jle
dec
fisubr
sbb
leave
fs
and
jge
std
adc
ins
adc
or
mov
je
inc
add
sub
pop
sbb
cmp
inc
mov
cld
mov
shr
push
xchg
jno
and
cdq
or
sub
jne
repz
cmps
jnp
adc
imul
sbb
add
adc
loopne
cmp
or
push
jge
sub
mov
add
add
push
ret
jmp
and
mov
cmps
cdq
push
test
imul
jo
add
push
sub
(bad)
pop
mov
popa
ror
add
rol
pop
lock
call
dec
in
enter
push
test
mov
ins
in
shl
sub
mov
xchg
xchg
mov
mov
bound
jp
movs
js
mov
xchg
mov
add
imul
(bad)
loope
add
loope
pop
push
fild
and
enter
dec
sbb
shl
mov
pop
push
xchg
and
adc
sbb
sbb
mov
imul
push
push
imul
shl
sub
push
jge
xchg
cs
mov
adc
mov
sbb
adc
stc
movs
xchg
inc
mov
shl
cmc
nop
fld
sbb
add
stc
pop
in
fsubr
cdq
sti
add
and
lea
xor
ins
inc
add
inc
mov
sbb
data16
sub
sbb
inc
in
or
add
fisubr
ret
push
shl
aam
adc
push
xchg
mov
call
and
or
mov
nop
adc
js
aaa
aam
lods
adc
aam
sub
xchg
bound
push
sbb
cmp
ja
sbb
or
sub
xchg
xchg
gs
mov
aad
outs
pop
cmps
xchg
test
cmp
test
rol
cwde
xchg
out
(bad)
les
sbb
xchg
sub
sbb
sbb
inc
mov
in
sbb
mov
es
pop
jmp
mov
adc
mov
ror
dec
dec
pop
jo
xor
mov
jmp
clc
dec
push
jmp
push
loope
or
mov
les
fadd
imul
rcl
pop
dec
sub
or
push
dec
jne
fwait
pop
lock
mov
ret
cmp
cmc
jno
in
cmp
leave
pop
mov
xchg
add
add
fidiv
test
jo
sbb
lods
nop
xor
inc
inc
dec
aad
jmp
call
rcl
mov
or
mov
push
fdiv
in
mov
test
movs
adc
dec
xchg
dec
scas
mov
js
outs
fdiv
push
and
push
leave
cmp
lods
push
ins
push
pop
and
jmp
and
repz
rcl
mov
jecxz
add
adc
push
or
xor
leave
movs
add
dec
push
stos
and
js
test
pop
je
xchg
adc
xchg
dec
int
les
sbb
jno
clc
sub
inc
dec
inc
repnz
add
scas
sbb
fwait
inc
xchg
popa
sub
outs
adc
addr16
lea
or
scas
sbb
xchg
jge
push
push
mov
addr16
jl
repnz
stc
pop
add
(bad)
daa
and
adc
int3
push
push
gs
loope
mov
es
xchg
pop
mov
in
adc
inc
daa
lahf
in
push
xor
sub
cmp
push
mov
xchg
or
sub
dec
or
jmp
int
push
fs
jmp
inc
pop
adc
cs
test
xchg
sub
rol
pop
cmp
jmp
ret
sar
xchg
ja
inc
or
ret
or
mov
push
push
or
sub
or
add
inc
mov
mov
mov
add
les
push
add
fmul
jecxz
xor
or
ins
mov
add
sub
cmp
clc
push
pushf
rcl
jge
cmp
pop
pop
ficom
jg
imul
push
or
call
jge
fwait
ins
rol
or
mov
fwait
jle
inc
pop
xor
pop
test
rcl
push
mov
push
inc
or
das
sar
dec
sbb
in
adc
sbb
pop
ins
add
sbb
mov
xchg
and
lods
push
add
fmulp
popa
or
scas
push
mov
add
or
ror
leave
sbb
xor
test
popf
push
pop
or
or
inc
xchg
rcl
or
add
sbb
std
pushf
inc
xchg
dec
add
pop
xor
mov
sbb
xchg
add
mov
(bad)
cs
and
dec
pop
inc
outs
push
add
xchg
cmp
imul
cmps
(bad)
jp
xchg
or
pop
adc
sbb
dec
inc
nop
icebp
imul
inc
or
pushf
jns
inc
xchg
sbb
pcmpgtd
xor
add
or
push
or
add
or
adc
inc
fwait
mov
ds
into
push
lock
repz
adc
scas
and
cmp
sti
hlt
sbb
bound
pop
cmp
scas
jmp
ss
loopne
sbb
lods
xchg
loopne
xchg
jne
test
sbb
push
leave
or
push
push
rol
cs
(bad)
je
adc
adc
adc
mov
and
(bad)
cmp
xcrypt-ecb
cmps
dec
cs
lea
pop
fdivr
xchg
fcom
ins
lods
mov
shl
test
iret
jae
nop
xchg
(bad)
les
dec
rol
mov
sbb
cmp
(bad)
std
ss
or
and
and
push
xchg
pop
mov
imul
stos
and
aas
(bad)
movs
dec
js
add
adc
or
shl
retf
aam
add
js
mov
or
push
push
xor
dec
adc
inc
or
or
dec
movs
daa
pop
test
mov
ins
ret
loop
movs
jle
ror
imul
xor
add
or
lock
inc
in
xchg
test
ret
xor
aaa
test
inc
(bad)
movups
das
sub
push
pop
or
cmp
aam
pop
sbb
and
inc
mov
ins
mov
mov
ret
adc
test
add
ret
pop
bndldx
(bad)
call
push
ret
ins
les
inc
hlt
inc
push
dec
pusha
inc
dec
aad
aam
lods
fwait
hlt
dec
mov
rol
xor
mov
sbb
mov
(bad)
sbb
mov
sub
xchg
mov
mov
mov
(bad)
push
int
clc
out
mov
js
cmp
jne
adc
ror
cmp
jae
aam
(bad)
xchg
mov
add
aas
sar
add
dec
pop
imul
cmps
pop
xor
push
and
inc
and
rcr
push
inc
push
ror
pop
xor
mov
pop
mov
dec
xchg
mov
xor
adc
add
arpl
ror
sbb
xor
xlat
push
add
js
xor
and
sbb
sub
mov
imul
push
dec
sbb
aam
xor
cld
jne
pop
fld
cmp
ficomp
ss
(bad)
hlt
and
out
hlt
push
push
inc
or
enter
loop
or
(bad)
in
dec
loop
scas
push
dec
daa
xor
sar
outs
xor
xor
cmps
sub
ud2
mov
and
inc
add
repz
pop
fwait
enter
xor
or
hlt
hlt
ret
push
or
clts
stc
ret
push
cs
xor
aam
add
shl
jmp
adc
dec
add
add
fwait
and
imul
inc
push
imul
sbb
fs
nop
fild
fcomp
les
and
fsub
inc
dec
adc
xor
jns
sub
inc
xor
xchg
push
stc
mov
mov
add
fisubr
jmp
jno
xor
(bad)
ja
push
xchg
les
or
aas
xor
xlat
push
jmp
cld
test
inc
adc
fs
mov
pop
cmp
xchg
add
pop
dec
add
call
xchg
fmul
outs
inc
cmp
sub
jb
or
jb
dec
jb
add
outs
pop
jb
lods
sub
aas
sbb
fcomp
push
mov
popf
xlat
and
ja
out
adc
inc
add
pop
call
push
mov
mov
(bad)
pusha
and
inc
push
add
or
or
inc
jb
xor
pop
clc
jb
in
jb
rcl
out
sub
add
pushf
cmps
(bad)
mov
or
ins
movs
adc
sub
sub
cmps
(bad)
dec
js
and
adc
(bad)
adc
pop
inc
adc
xor
pop
sbb
add
sbb
movs
imul
push
cmp
es
int3
jmp
add
cmps
xor
xor
ret
jbe
(bad)
fsub
sbb
and
ja
cmps
popf
(bad)
inc
pop
xlat
add
xchg
int
cmp
cmp
fcom
sub
sar
imul
jb
cmp
aam
pop
inc
aas
adc
xchg
sub
jb
pop
jb
clc
inc
out
clc
adc
push
jge
add
imul
xchg
sub
and
pop
and
test
pop
or
jo
enter
int3
fnstenv
or
sub
xor
pop
and
cs
shl
sub
dec
sub
push
call
jb
jp
add
adc
mov
pop
push
cdq
xor
sbb
mov
mov
sub
jo
add
or
imul
loope
ins
adc
xor
push
sbb
adc
or
test
push
(bad)
out
nop
add
sub
push
movs
add
sbb
in
shl
pushf
adc
popf
or
ror
jle
cmps
mov
dec
sub
jecxz
gs
daa
cmp
xor
xchg
or
xlat
imul
xchg
pop
dec
js
daa
fwait
mov
ja
pop
jge
rcl
outs
ss
mov
xchg
dec
je
nop
dec
jae
mov
retf
or
pusha
aam
stos
popa
loope
and
xor
pop
jne
cmp
loopne
push
adc
mov
jne
or
loopne
jb
add
sbb
ins
pop
jmp
(bad)
test
cmp
inc
in
out
xor
add
xor
retf
(bad)
adc
loopne
sub
aad
sub
adc
cmp
repnz
fist
loope
or
inc
or
push
mov
dec
pop
push
daa
call
cmp
nop
ror
(bad)
repnz
sbb
and
pop
add
call
xchg
push
xchg
inc
adc
sub
xchg
adc
jmp
xchg
mov
movs
inc
call
jmp
mov
mov
push
sub
sub
sbb
test
arpl
or
arpl
es
mov
cmps
sbb
xor
push
push
xor
cdq
mov
cmps
repnz
daa
push
add
push
add
push
push
jb
push
adc
pusha
add
cmp
xor
repz
push
mov
jne
movs
push
xchg
dec
xor
and
imul
push
push
leave
pop
rol
test
movs
add
fadd
xor
outs
ins
mov
lods
and
pop
add
es
jns
lock
shl
pop
retf
add
arpl
push
lods
cmp
rol
push
dec
cmp
adc
xchg
inc
sub
cmp
push
jae
fiadd
xchg
adc
mov
dec
mov
push
sbb
xor
or
cmps
lahf
sbb
xchg
retf
and
adc
push
pushf
dec
ins
movs
movs
xchg
sbb
fidiv
mov
aaa
and
ds
sub
pop
dec
push
dec
mov
sbb
mov
and
push
jno
test
imul
cmp
movs
push
sbb
nop
xchg
sub
jo
add
cwde
push
push
push
pavgb
movs
ret
or
jo
fcom
xor
arpl
push
add
inc
call
rcr
and
cmp
cmp
push
ror
and
mov
pop
and
jb
pop
inc
cmp
or
jbe
pop
call
adc
(bad)
movs
inc
lods
movs
mov
and
xor
add
cdq
xchg
daa
iret
repz
mov
cdq
ins
adc
adc
cmps
jb
or
push
sbb
mov
or
pop
mov
xchg
dec
add
push
call
xor
adc
das
mov
fnstenv
les
movs
push
imul
lods
xchg
sub
movs
sub
gs
or
sub
push
rcl
icebp
xchg
jp
movs
inc
ja
stos
dec
sar
movs
mov
imul
cmps
lds
(bad)
mov
and
movs
mov
mov
mov
dec
xlat
xor
adc
frstor
mov
and
pop
aam
sub
inc
retf
pcmpgtd
and
or
aad
add
sbb
sub
adc
dec
push
test
mov
cmp
and
popa
push
push
xor
std
jg
xchg
push
sub
xor
movs
pop
mov
mov
adc
xor
jg
and
add
bound
int
cli
adc
sti
xor
inc
sbb
or
(bad)
enter
mov
jns
adc
or
pusha
mov
adc
mov
cmp
inc
lds
or
jecxz
push
push
cmp
adc
enter
push
out
xchg
call
dec
xchg
bound
popf
shl
out
daa
jle
cmp
adc
mov
sbb
or
imul
pop
cmp
stos
pop
(bad)
pop
jnp
call
les
mov
inc
jle
sar
mov
xor
dec
cmp
add
sub
sti
aas
popf
push
fst
push
sub
pop
inc
icebp
or
sbb
inc
repz
hlt
xor
daa
pop
sub
imul
inc
pusha
int3
shl
cmc
dec
mov
sbb
adc
pop
call
mov
pushf
sbb
test
jno
loop
and
and
add
psubsb
iret
repz
or
xchg
xor
and
ror
sub
leave
dec
sbb
and
jb
push
lods
mov
dec
or
les
pop
call
iret
push
push
pop
pop
rol
sub
mov
sahf
sbb
and
push
and
add
jp
xor
and
push
add
adc
and
add
test
nop
and
cmp
loop
retf
push
arpl
add
pop
and
mov
inc
in
movs
add
or
sub
shr
fild
jmp
retf
cmps
rcr
mov
outs
rcl
push
inc
push
push
fmul
retf
mov
sbb
xor
mov
loopne
cmp
inc
or
aad
mov
sbb
leave
dec
in
pop
or
inc
stos
dec
xchg
push
dec
movs
push
test
lea
fstp
nop
out
pop
aaa
jp
adc
mov
sbb
cwde
fwait
jbe
icebp
push
test
and
cmp
dec
pop
fimul
rcl
stos
outs
ins
and
push
cmc
pop
adc
adc
sbb
retf
sbb
pop
adc
adc
add
bndstx
sbb
movs
jmp
mov
js
fimul
adc
dec
cmps
popf
xor
addr16
push
loopne
push
cmp
je
mov
repnz
xor
push
repnz
inc
add
push
push
jmp
push
adc
mov
and
add
inc
mov
cmc
cmp
dec
popa
xchg
imul
mov
xchg
adc
inc
sbb
and
or
inc
xlat
sub
push
add
repz
adc
es
add
shl
adc
in
push
mov
mov
mov
push
or
ror
add
add
mov
push
scas
jno
test
call
add
sahf
push
sub
das
push
leave
out
enter
adc
loopne
add
pop
jne
xchg
sbb
pop
je
jb
enter
add
add
add
push
rcl
sbb
out
test
addr16
lods
sbb
xor
(bad)
nop
out
mov
push
imul
push
enter
inc
popa
icebp
inc
xor
dec
mov
mov
mov
aas
mov
push
and
mov
push
pusha
jb
or
mov
cmp
or
sar
push
jno
push
sbb
add
sub
sub
sub
test
mov
mov
and
or
sub
dec
aas
push
pop
push
push
mov
jne
mov
mov
mov
pop
inc
fadd
aas
sub
push
int
cmps
xchg
and
movs
push
test
pushf
sbb
cmp
pop
mov
jno
mov
test
sti
mov
test
jns
dec
cs
cmp
lds
sub
and
aaa
jo
xor
sbb
and
sbb
loope
jno
out
and
inc
push
push
cdq
(bad)
jb
xchg
sbb
inc
sahf
and
jno
or
xor
add
pop
test
pop
aad
je
test
jge
xchg
adc
jge
add
pop
mov
retf
xchg
xchg
aas
mov
and
je
dec
sbb
ror
cmp
jae
in
leave
jae
push
ins
push
push
push
and
loopne
jno
imul
add
xlat
rep
sub
sub
xchg
and
adc
and
xchg
mov
adc
or
cmp
ret
ror
adc
jno
adc
cmp
or
mov
dec
mov
cmc
stc
add
jne
fild
lock
xor
xor
std
adc
push
xlat
cmp
adc
or
bound
sub
loopne
add
adc
popf
lods
jae
push
into
repz
lea
ret
mov
xchg
in
inc
fisub
lods
dec
repz
mov
push
inc
fimul
inc
inc
push
loope
dec
je
call
fninit
nop
addr16
out
sbb
adc
mov
movs
shr
inc
sti
and
inc
push
repz
and
cmp
xor
mov
pushf
ret
cmp
adc
sbb
shl
mov
cmp
iret
xor
adc
inc
push
mov
mov
aaa
jne
pop
or
and
dec
add
ucomiss
or
clc
cmp
dec
or
xor
add
push
mov
stc
sbb
and
add
nop
out
add
mov
cmp
adc
icebp
pop
push
mov
cs
ror
rol
iret
cmp
mov
jne
sbb
icebp
std
push
mov
ret
sub
and
add
or
xchg
out
inc
js
and
dec
xchg
sar
pop
fisttp
or
adc
test
ins
movs
jge
or
call
dec
fsub
jnp
aas
xchg
jo
cs
fild
mov
jmp
scas
add
jecxz
jbe
pop
cmp
test
and
sbb
jno
xchg
xlat
or
jnp
inc
add
fsubr
add
jb
dec
test
adc
xchg
fs
test
gs
push
xor
adc
add
pop
add
test
mov
das
mov
jmp
arpl
inc
add
nop
out
add
sub
xlat
retf
xchg
out
and
fwait
dec
inc
bound
iret
aas
or
push
adc
push
retf
(bad)
push
dec
fs
jg
push
test
ja
ror
mov
xor
dec
and
loopne
mov
push
test
sahf
and
xchg
sbb
stc
imul
bnd
adc
bound
push
push
daa
imul
sbb
mov
sbb
sahf
scas
cmp
adc
sbb
sub
sbb
inc
sbb
shr
cwde
mov
sti
aad
adc
add
cmp
lea
add
sub
cdq
arpl
imul
dec
adc
test
pop
push
xor
push
or
xor
imul
jl
popa
sub
add
arpl
sub
adc
ror
add
in
cmovs
adc
ror
adc
fsub
add
adc
repz
fwait
or
cs
iret
sub
jmp
daa
sbb
pop
sbb
and
mov
xchg
dec
movs
(bad)
pop
or
add
es
fcmove
and
push
adc
test
and
push
cmps
popa
push
inc
sbb
jae
cmp
adc
int
and
cmps
push
leave
cmp
sub
push
popa
jne
mov
add
adc
iret
pop
mov
lock
pushf
jnp
fild
push
cmp
and
loopne
fs
xlat
pop
pushf
pop
cmp
fld
sub
or
mov
sahf
out
sub
jl
and
jge
movs
mov
mov
dec
push
popf
mov
mov
pop
sub
xchg
(bad)
fbstp
adc
push
pop
pop
retf
push
dec
dec
cmp
imul
adc
mov
mov
adc
sub
add
jb
icebp
adc
and
mov
out
add
lods
je
scas
call
dec
sub
arpl
cmp
and
aam
retf
or
mov
xchg
adc
sahf
or
push
cmp
adc
cmp
sbb
leave
clc
sub
ins
movs
mov
sbb
xor
clc
mov
cmc
dec
jb
je
pushw
inc
cmps
ins
mov
and
adc
pop
xor
mov
adc
mov
cmp
lds
sahf
inc
sahf
out
and
imul
or
cmp
enter
cmp
adc
sbb
mov
mov
jo
xchg
sub
(bad)
ficomp
and
jno
test
add
mov
xchg
adc
jns
mov
add
repz
xor
pop
or
retf
movs
xor
sub
hlt
sbb
and
push
pop
cs
adc
test
dec
pop
sbb
movs
test
mov
add
imul
pop
js
sete
sub
xchg
sbb
sbb
inc
push
add
daa
xor
push
mov
cwde
movs
jnp
inc
cmp
add
add
jno
mov
bound
shl
xchg
jp
dec
sub
cmp
and
add
push
add
inc
ins
sub
sar
and
jbe
pop
adc
push
sub
adc
adc
push
mov
popa
sbb
wbinvd
adc
adc
adc
xchg
dec
mov
retf
or
jb
inc
add
jmp
pop
mov
retf
pop
add
mov
cwde
mov
mov
gs
xchg
retf
pop
inc
pop
ret
int3
push
cmp
xor
push
jecxz
inc
test
(bad)
mov
cdq
retf
push
sub
push
xchg
xor
and
inc
push
test
dec
in
sbb
add
and
scas
inc
and
daa
xor
imul
add
sbb
push
mov
not
shl
int
push
inc
cmps
dec
arpl
lds
fstp
mov
xor
add
das
jb
aam
jg
sbb
xlat
shr
xchg
sbb
lods
inc
jo
(bad)
loop
inc
cmp
ins
movs
test
adc
fdiv
and
or
rol
adc
push
bnd
push
ror
or
ins
movs
lds
ds
jns
jo
push
push
ror
sbb
test
inc
or
mov
push
mov
inc
or
es
cmp
aam
addr16
call
dec
rol
sub
xchg
adc
ret
popa
mov
(bad)
outs
fcom
sub
push
or
push
shr
mov
push
dec
jmp
mov
jb
(bad)
leave
push
mov
or
in
es
gs
sbb
nop
cs
adc
mov
mov
arpl
mov
fwait
dec
add
hlt
es
xchg
gs
adc
inc
xchg
cmps
push
and
mov
push
test
sbb
or
imul
xchg
push
mov
inc
add
jae
inc
or
repz
adc
inc
mov
cmp
in
or
mov
add
cdq
sub
sti
or
dec
push
test
adc
and
and
mov
mov
test
xlat
push
sbb
in
cmps
or
xchg
mov
(bad)
mov
push
add
mov
inc
add
dec
add
fstp
xor
int
rcr
sahf
sbb
test
push
push
ret
add
push
je
or
stos
push
jmp
jecxz
ret
push
loopne
pop
push
test
mov
or
xor
push
or
js
jns
jnp
add
stos
inc
push
xor
test
inc
and
cmp
push
jg
sub
add
adc
sbb
retf
push
jge
jg
pop
pop
repnz
cdq
and
push
rol
lds
aad
in
push
adc
je
mov
sbb
cmp
out
sbb
bound
es
sbb
sbb
mov
mov
mov
mov
aam
xchg
inc
and
push
sub
popf
bound
mov
xor
xor
mov
popf
add
enter
and
sub
movs
aad
movs
sub
jns
or
or
in
mov
xor
cmp
sbb
loope
pushf
adc
ja
and
inc
push
and
jns
or
mov
cmp
sbb
ss
test
jns
xor
or
lea
or
add
dec
inc
mov
loope
cmc
add
inc
xchg
out
nop
or
xchg
retf
and
add
jno
xor
lods
or
outs
sbb
jns
add
push
sub
out
mov
cmps
shl
cdq
add
add
inc
mov
scas
adc
or
dec
mov
sbb
or
and
xchg
loope
or
shl
or
iret
enter
jg
xor
jecxz
repnz
inc
mov
es
push
mov
dec
mov
add
xchg
sbb
push
lds
mov
sbb
cmp
mov
add
sub
push
adc
add
jg
aam
dec
adc
sub
xchg
js
mov
sub
xor
or
or
push
inc
adc
xchg
dec
popa
pushaw
daa
loopne
addr16
je
rcr
mov
test
mov
add
in
sbb
add
movs
mov
fnstcw
adc
xchg
imul
movs
jmp
add
(bad)
rol
and
xor
aad
mov
das
arpl
das
jne
cmp
xor
and
das
fist
out
pushf
cmp
inc
and
push
(bad)
mov
xchg
(bad)
les
cmp
rol
or
adc
mov
aad
dec
sbb
mov
jge
lods
add
sar
daa
inc
arpl
push
lods
cmp
hlt
sbb
mov
push
mov
xor
push
jecxz
dec
(bad)
ret
add
or
mov
movs
aad
inc
dec
fild
sbb
js
or
and
fild
cmp
xor
imul
xchg
out
or
or
loopne
dec
jge
cwde
mov
cmp
add
cmp
push
or
and
push
dec
enter
push
cmps
cmps
xor
das
mov
ins
movs
or
pop
fstp
repz
xor
push
cmp
push
movs
add
inc
mov
sub
or
xchg
adc
sahf
inc
sahf
pop
sbb
xchg
mov
daa
aaa
push
inc
pop
dec
mov
add
sbb
mov
rol
je
sbb
dec
daa
in
and
stc
shr
xlat
cmps
cli
pop
mov
jae
cmp
dec
inc
add
mov
cli
cmp
div
cmp
stos
and
xchg
test
add
add
shr
imul
mov
inc
add
or
push
cwde
inc
lea
cmp
and
cmps
ret
outs
shl
jmp
cmp
cmp
mov
adc
sbb
pop
cwde
push
stos
jne
inc
loop
mov
call
dec
rol
inc
add
daa
add
fldenv
and
jns
ss
adc
outs
ja
(bad)
js
add
cmp
dec
mov
push
(bad)
bswap
call
push
push
xor
add
aaa
or
jge
mov
stos
ret
and
cmps
or
jns
das
push
shl
inc
dec
mov
inc
sbb
push
add
imul
sub
dec
(bad)
mov
and
cdq
inc
ficomp
pop
add
in
jmp
jne
xchg
fadd
mov
nop
retf
leave
jae
pop
pop
iret
push
dec
in
loop
test
and
cmp
jno
mov
and
aas
imul
sbb
jnp
jp
mov
add
mov
cmp
loope
mov
xor
retf
loope
ror
adc
mov
mov
sar
sbb
ds
cmp
aas
addr16
movs
inc
add
inc
add
sbb
das
pop
xlat
adc
lods
outs
je
nop
jbe
leave
xchg
into
repz
cmp
das
mov
dec
aam
jae
jno
inc
imul
mov
fbld
adc
retf
and
jnp
inc
call
test
es
xchg
cmp
sbb
or
mov
stc
adc
outs
mov
sbb
or
imul
sbb
pop
pop
add
or
xor
sbb
pop
hlt
adc
mov
cmp
fwait
sub
pop
or
out
sub
xor
out
sahf
pop
add
mov
cmp
inc
adc
or
xchg
arpl
stc
jns
addr16
sub
inc
mov
mov
jecxz
stos
ss
daa
pop
mov
loopne
push
push
daa
sub
jo
mov
push
cld
push
(bad)
xchg
jmp
loope
sbb
or
mov
ret
mov
jmp
cmp
or
xor
xor
inc
adc
xor
add
push
cmp
add
mov
xchg
xchg
cmp
lds
jno
std
add
mov
add
call
add
jo
add
pop
pop
fwait
jl
pop
imul
sub
jne
loope
aam
push
dec
jecxz
imul
add
inc
pop
push
inc
sahf
outs
popa
loopne
cmp
cmp
sbb
add
loope
and
nop
imul
in
jne
mov
fs
test
dec
dec
sahf
je
add
push
push
add
inc
mov
jne
test
repz
add
jae
mov
fwait
cs
sub
adc
add
adc
mov
or
jge
sub
jno
call
add
mov
jle
mov
nop
cs
mov
sub
pusha
jns
call
push
dec
(bad)
jb
je
sub
cmps
pop
pop
mov
jno
mov
jecxz
sbb
retf
mov
repz
sahf
pop
adc
adc
dec
push
fwait
lock
sub
data16
cmp
inc
xchg
xlat
ins
sbb
or
mov
sbb
adc
push
repz
lea
push
data16
jns
or
sbb
push
stos
xchg
retf
sub
cmp
pusha
push
xchg
xchg
or
push
cmp
inc
scas
pop
add
inc
jl
jo
or
inc
sahf
cmps
jb
adc
adc
inc
dec
sub
inc
inc
cmp
adc
loop
aad
mov
mov
add
cmp
ins
das
and
xchg
mov
sbb
stos
nop
adc
mov
cmp
out
xchg
and
adc
repnz
sbb
inc
sub
repz
mov
and
mov
loopne
push
in
or
adc
mov
and
adc
push
push
lea
ja
sar
fld
idiv
aaa
in
out
add
dec
cwde
gs
add
call
stc
add
call
sub
mov
jmp
pop
daa
mov
mov
imul
sub
(bad)
(bad)
shl
cs
test
mov
or
shl
enter
and
adc
add
imul
and
je
pop
enter
cmp
cmp
sbb
dec
inc
sub
pop
jns
sub
sbb
lods
push
in
fldenv
xchg
cmp
or
add
arpl
fbstp
xchg
bound
adc
cmp
leave
mov
es
add
outs
adc
les
call
cs
mov
or
jns
loop
movs
pop
sbb
add
imul
out
inc
and
sub
inc
daa
add
or
push
push
add
es
rcl
popf
mov
pop
inc
mov
jo
or
ja
add
inc
adc
mov
imul
imul
or
inc
cli
pusha
mov
iret
(bad)
(bad)
push
inc
pop
js
enter
ficom
dec
in
pop
push
pop
and
pop
add
cmps
stos
inc
or
sbb
jmp
je
movs
test
enter
stc
adc
dec
adc
adc
imul
jae
inc
or
adc
xchg
movs
adc
cmova
xor
cwde
pushf
or
push
mov
or
cmp
or
push
cwde
cmovle
sbb
or
mov
xchg
movs
push
test
inc
je
xor
xchg
aaa
or
add
adc
nop
push
cmp
xor
data16
daa
add
call
sbb
add
mov
add
push
inc
mov
or
push
sbb
ins
xlat
int
jbe
dec
xchg
imul
pop
dec
xor
arpl
dec
cmp
cwde
aaa
add
push
sub
push
or
dec
push
gs
push
xlat
retf
popa
push
cmp
pop
xchg
adc
scas
in
inc
inc
ins
sub
xchg
imul
push
jno
pop
add
cmps
adc
or
cmp
lods
xchg
add
leave
push
retf
call
mov
retf
adc
add
dec
ins
pusha
jnp
lock
gs
pop
jne
add
cmc
pop
push
add
and
out
push
ja
push
sbb
adc
add
lea
cmp
cmp
sahf
adc
out
xchg
cmps
jb
xlat
inc
push
add
push
and
push
mov
scas
out
ret
inc
add
lea
push
sbb
push
jb
push
inc
sub
pusha
and
dec
stos
test
mov
loope
pop
je
push
and
(bad)
mov
push
adc
push
stc
fs
dec
jno
sub
lds
sub
sbb
test
shl
movs
or
xchg
sbb
add
out
push
test
cmp
mov
retf
inc
xor
imul
test
jp
xchg
sbb
movups
fcom
repnz
out
sub
adc
shl
xor
push
sti
or
pop
push
imul
or
daa
iret
sbb
push
push
popa
scas
sbb
jns
add
add
and
leave
dec
out
push
dec
xchg
jns
sbb
mov
ja
outs
cmps
mov
gs
jl
push
pusha
popa
adc
test
and
adc
and
pop
xor
or
dec
popa
cmp
test
xor
and
pop
add
lock
cmp
xor
mov
arpl
cmps
mov
fld
or
inc
int3
mov
or
mov
sbb
cmp
add
mov
ret
data16
mov
and
or
mov
cmc
pop
sbb
inc
movs
pop
je
inc
mov
mov
sbb
daa
cmp
adc
mov
xchg
dec
push
and
mov
pop
mov
dec
pop
jecxz
add
jo
xchg
push
sti
and
or
xor
adc
or
push
fs
add
lea
sbb
cmp
ds
aam
out
xlat
add
add
sub
push
jle
cmp
imul
jns
pop
pop
push
pop
inc
push
inc
fnstcw
inc
les
test
lds
cmp
or
iret
shr
nop
int3
sub
xor
test
add
loop
nop
ins
push
test
sbb
and
push
add
sbb
and
pop
pop
push
add
les
int
or
pusha
add
nop
dec
inc
cli
adc
fcom
pushf
cmp
adc
push
push
push
test
cmp
sub
lods
ins
movs
es
adc
adc
repz
pop
ds
imul
sbb
je
rcl
xchg
fwait
sub
or
cwde
or
jo
aaa
adc
mov
xor
mov
mov
dec
imul
sbb
jns
int
out
cwde
and
mov
rol
jecxz
sbb
add
inc
sbb
dec
call
ins
push
dec
add
sbb
sub
out
inc
dec
and
and
fs
dec
movs
adc
adc
jmp
cmp
xchg
cmp
dec
sbb
and
xor
rcl
aas
push
and
add
out
mov
mov
add
pop
popa
cmps
pop
daa
pop
mov
mov
and
xor
rcl
inc
mov
test
jb
add
test
cmp
lds
(bad)
add
push
adc
nop
fcmovb
cmp
mov
xor
or
pop
xchg
push
shr
adc
lea
or
or
sub
mov
outs
mov
and
adc
push
push
sbb
pusha
cmp
xchg
and
adc
inc
and
xlat
leave
cmp
sub
adc
sti
add
jne
cmp
add
rcl
and
sahf
xor
and
or
test
and
xor
or
jne
dec
inc
lahf
test
das
fnsave
or
subps
sub
imul
sbb
sbb
xchg
pop
mov
pop
xor
or
inc
mov
xchg
shl
mov
retf
inc
cmp
ss
push
adc
adc
in
icebp
(bad)
pop
adc
shr
cmp
mov
push
fwait
add
xchg
pop
imul
pushf
mov
call
cmovnp
pop
inc
dec
mov
(bad)
mov
sahf
out
stos
push
sbb
sbb
es
fs
scas
cmp
repnz
pop
push
push
sub
mov
imul
push
mov
jno
adc
sbb
sbb
inc
mov
cs
in
add
push
enter
add
inc
jge
cmp
cmp
mov
add
cdq
rcl
adc
xor
in
jo
lahf
js
and
nop
push
add
cmc
lods
pop
nop
int3
xor
xchg
dec
or
add
into
add
das
inc
outs
icebp
or
out
mov
mov
or
(bad)
aaa
adc
add
enter
and
and
shr
sbb
add
mov
inc
xor
or
mov
stos
retf
rol
popa
add
cwde
dec
outs
fnstcw
je
fld
sbb
add
dec
ror
xchg
test
adc
adc
dec
and
xchg
es
xor
inc
sahf
arpl
sbb
jbe
rol
or
adc
cmp
iret
xor
or
sub
popf
nop
(bad)
jge
retf
inc
popa
mov
jo
add
test
cmp
jns
push
inc
xor
pop
mov
jecxz
leave
jae
or
and
xchg
fwait
add
xchg
retf
pop
or
adc
push
aaa
repnz
cwde
push
jle
pop
adc
mov
sub
xor
mov
jecxz
or
mov
scas
movs
lock
popf
add
(bad)
dec
iret
xor
xor
push
mov
je
dec
sub
inc
aas
sbb
cwde
inc
leave
or
cmp
push
sub
jnp
adc
call
adc
jb
adc
aam
in
xor
test
pop
iret
dec
loop
scas
jg
cmp
cmp
cmp
cmp
dec
sub
call
xor
sub
into
mov
das
rol
or
ret
or
xor
ins
dec
fs
push
cmp
adc
and
fild
or
(bad)
xor
jle
popf
ficom
jmp
xchg
push
iret
sahf
jge
xor
sub
pop
add
pop
pop
cmp
mov
mov
xor
add
repnz
inc
dec
or
fldcw
cmp
push
fbstp
add
inc
icebp
xchg
sub
adc
pushf
pop
scas
repz
popa
loopne
mov
aas
and
xor
iret
pop
and
jne
jno
or
or
dec
iret
add
shl
dec
and
repz
sbb
or
xor
jo
fld
and
test
add
rol
repz
test
and
push
mov
pop
fild
aaa
jne
imul
(bad)
sub
jnp
mov
ins
xchg
mov
enter
retf
pushf
sbb
aas
ret
and
and
add
add
in
mov
or
sub
and
mov
adc
jb
add
movs
mov
sbb
xchg
inc
sub
inc
sub
sbb
stos
push
pushf
ror
test
loopne
scas
push
dec
pshufw
push
aaa
and
stos
in
div
nop
out
dec
add
sub
and
add
ss
shl
add
push
sbb
cmp
or
mov
pop
std
jns
daa
pusha
adc
les
popf
jne
or
sbb
popf
sub
or
adc
and
sbb
jb
xchg
adc
cmp
push
adc
imul
or
mov
jo
nop
out
or
jnp
inc
adc
daa
mov
add
or
mov
rcr
lahf
cmp
push
sbb
add
(bad)
inc
retf
cwde
add
pop
add
or
retf
sub
sbb
aam
add
cmp
repz
mov
sbb
outs
xor
sbb
or
jb
xor
pop
and
push
sub
sahf
cmp
sbb
in
pop
mov
xchg
and
cmp
cwde
sbb
retf
cmp
push
sub
pusha
mov
or
lahf
sub
sub
dec
push
popf
rol
dec
jns
cmps
test
and
push
(bad)
(bad)
and
mov
sbb
in
in
dec
and
stos
add
add
mov
sub
cmp
add
dec
jmp
daa
loope
sbb
test
or
mov
mov
cmp
dec
xor
pop
sub
push
ja
push
push
xor
add
jecxz
sbb
or
mov
inc
sahf
das
jmp
push
or
mov
cmp
cdq
push
pop
sub
loop
and
add
test
inc
loop
addr16
adc
inc
movs
push
repnz
add
addr16
sub
cmp
mov
iret
push
bound
dec
push
sbb
pushf
and
and
aaa
add
or
adc
test
xchg
(bad)
(bad)
sqrtps
jae
jb
add
mov
(bad)
or
xchg
push
mov
adc
push
pop
adc
push
add
pop
dec
fldcw
lahf
push
xchg
sbb
jg
and
mov
and
es
pop
dec
xor
or
cmp
(bad)
call
xor
ret
adc
(bad)
and
sub
mov
out
inc
mov
xchg
cmp
out
out
jns
out
mov
or
and
jmp
pop
ds
and
xor
push
ss
ss
add
xor
shl
jmp
jns
xor
xor
pop
mov
sub
mov
dec
dec
sub
sub
inc
aam
dec
add
and
aas
push
or
les
aaa
cmc
imul
dec
je
dec
sahf
cmps
xor
aaa
adc
or
adc
sub
adc
imul
retf
or
aaa
xor
push
daa
xor
mov
daa
sbb
xchg
pop
shl
je
jg
ins
push
or
test
xlat
rcr
cmp
or
and
add
in
stc
inc
mov
daa
pusha
inc
nop
jmp
sbb
sbb
lods
test
xor
mov
inc
add
mov
push
sbb
mov
push
test
add
push
dec
cmp
cmpxchg
leave
push
lock
popf
adc
outs
clc
adc
sbb
add
in
cmp
and
push
popa
push
and
xchg
jmp
jb
add
add
aaa
mov
cmps
mov
mov
pop
sbb
xor
push
add
daa
dec
imul
sub
in
pop
jge
sar
push
or
shl
xchg
push
adc
inc
sbb
and
das
dec
add
inc
mov
xchg
add
push
test
or
inc
inc
mov
adc
or
inc
dec
cmps
jmp
inc
mov
xchg
add
into
and
xor
or
add
add
inc
out
sub
add
test
xchg
adc
shr
sbb
jo
mov
inc
rcr
jo
inc
hlt
sar
cmp
jns
or
mov
mov
mov
imul
adc
inc
(bad)
popa
mov
aaa
inc
pop
add
daa
add
ja
fmul
(bad)
aas
sub
mov
mov
and
xor
pop
jmp
sbb
jmp
sahf
pop
inc
add
aas
aas
push
or
cmp
push
sub
and
pusha
pop
rcr
ins
sbb
imul
inc
aaa
push
mov
and
daa
mov
(bad)
mov
ins
or
or
repnz
add
in
pusha
dec
pop
push
pop
add
add
rcl
xor
add
xor
adc
or
imul
push
or
inc
sahf
or
sbb
cwde
cmp
repz
add
push
sub
sub
adc
ret
sahf
retf
adc
xor
pop
and
push
arpl
cmp
mov
pop
xchg
rol
rcl
and
mov
arpl
ret
rcl
ds
cmp
pop
daa
mov
mov
add
mov
aad
cdq
rcl
nop
cmps
xor
mov
dec
mov
adc
mov
into
ja
push
cmp
xor
out
sbb
mov
xchg
push
gs
loop
sahf
out
and
push
(bad)
add
push
aam
out
cmp
jg
pop
add
iret
loope
xor
inc
and
push
fistp
or
(bad)
jp
cmp
jb
pop
push
imul
push
inc
sbb
sub
push
xor
xchg
repz
adc
and
cmps
jb
into
sub
repnz
sbb
les
inc
fucomp
mov
dec
lds
and
repz
add
and
iret
jbe
xor
fld
jmp
xchg
xchg
jns
xchg
mov
sahf
sub
test
dec
pusha
inc
nop
out
inc
add
xchg
xchg
jo
add
push
xor
js
movs
xchg
xor
pusha
cmps
add
jns
pop
pusha
dec
sbb
in
or
dec
mov
push
push
push
xchg
adc
mov
or
aad
lahf
mov
inc
daa
iret
cmp
pusha
sbb
outs
xor
adc
adc
mov
adc
and
sahf
repz
or
jg
add
push
and
adc
repnz
add
shr
sar
cmps
sbb
test
dec
cmp
cmp
shl
ins
push
or
in
movs
jo
lea
inc
pop
mov
xchg
je
pop
je
(bad)
pop
inc
leave
aas
and
inc
popa
push
mov
adc
add
cmp
fst
inc
jns
sub
pop
dec
push
or
js
ror
dec
and
add
or
fld
mov
or
arpl
ja
xchg
es
or
xchg
or
in
addr16
fld
pop
cmp
mov
enter
add
and
daa
inc
push
xor
and
fwait
and
or
sub
cmp
adc
mov
(bad)
cmp
bound
cdq
pusha
sbb
or
jae
(bad)
cmp
cmp
push
adc
mov
add
sub
xor
xor
and
push
or
cmps
and
push
and
dec
sahf
add
mov
je
xchg
lock
aaa
in
cmp
and
mov
cmp
add
hlt
add
int3
or
push
sti
movs
add
or
int
cmp
rol
fld
test
lods
adc
adc
in
imul
in
nop
(bad)
mov
xchg
adc
enter
add
test
mov
add
dec
les
dec
and
repz
or
psrlq
or
repz
sahf
jp
and
mov
xor
sbb
pop
or
push
and
pop
sub
loope
lahf
xor
pushf
add
sub
sahf
sub
sbb
push
and
pop
push
xchg
mov
sub
lods
sbb
push
add
sub
daa
iret
repz
or
ret
and
add
cmp
sbb
and
and
sbb
fstp
fwait
cmps
and
add
sub
push
pop
sbb
(bad)
pop
rol
dec
dec
arpl
pop
add
rcl
in
sub
adc
inc
(bad)
les
daa
sub
jmp
aas
or
ds
xor
loop
sbb
cmp
push
adc
adc
shr
out
mov
ficomp
dec
loope
nop
xor
add
add
inc
adc
lods
xchg
(bad)
cmp
inc
pop
inc
add
adc
mov
aaa
aad
inc
jmp
mov
mov
popa
sbb
out
sbb
xor
mov
inc
mov
xchg
retf
jae
es
push
cmp
sbb
add
dec
and
pop
or
sub
pcmpgtb
mov
and
adc
jb
test
adc
or
inc
add
mov
addr16
repz
bound
adc
add
test
add
push
iret
sub
outs
cmp
aam
mov
es
repz
pop
and
fsubr
sub
aas
xchg
push
and
sub
pusha
pop
or
repnz
dec
or
mov
mov
jp
jl
call
push
and
repnz
mov
push
pop
les
in
cmp
xchg
add
xor
push
movs
jo
pop
repnz
mov
cmps
mov
xchg
or
fiadd
pop
sbb
mov
das
mov
out
pop
pop
push
cmp
fisttp
mov
mov
adc
or
inc
bound
sub
pop
ss
test
inc
or
inc
xchg
adc
fwait
or
loope
push
push
xchg
adc
sar
xor
cmp
or
push
xchg
push
adc
jo
or
repz
js
and
pop
sbb
xchg
adc
xchg
adc
ret
mov
sbb
test
imul
ret
fs
or
rcl
adc
cmps
cmp
cmp
adc
xor
sbb
daa
ja
(bad)
jmp
das
aad
ss
mov
les
dec
pop
and
in
sahf
adc
sub
dec
lods
ss
or
mov
popa
inc
cmps
adc
adc
sbb
enter
pop
call
sub
adc
inc
pop
popa
add
inc
jmp
daa
iret
repz
rcr
pop
add
inc
inc
push
mov
sbb
mov
jl
inc
adc
outs
and
xchg
or
pop
add
mov
jne
daa
xchg
cmp
mov
pop
repnz
pop
add
adc
add
inc
cmp
mov
xchg
ret
inc
or
dec
test
repnz
cmp
jns
xor
push
ds
and
push
add
adc
cmp
sbb
sub
lahf
cs
pop
popa
sbb
push
add
mov
rcl
cdq
push
pop
mov
fst
adc
pop
push
xchg
xor
lds
sub
outs
push
ss
addr16
leave
mov
call
or
adc
jmp
pop
popa
inc
sahf
out
add
push
inc
and
sbb
xchg
cs
or
les
push
push
dec
iret
jb
aaa
hlt
push
ds
dec
sbb
cmps
mov
xor
js
loop
scas
out
or
add
or
cs
add
add
xor
sbb
into
mov
pusha
dec
pop
loopne
jge
pop
arpl
adc
inc
add
jno
dec
rcl
pusha
ds
xchg
out
or
ins
sbb
mov
loopne
sub
push
pop
sahf
cmovbe
test
scas
inc
mov
test
add
and
jmp
push
push
jns
xor
sbb
das
les
and
jns
and
mov
mov
inc
cwde
in
add
cmp
add
add
cmp
xor
shl
daa
call
std
adc
add
mov
dec
test
rcl
sub
call
xchg
sbb
aad
call
sub
dec
add
pop
push
xchg
add
cwde
lods
in
fwait
sahf
daa
(bad)
adc
mov
sub
jns
or
and
sbb
and
daa
xor
imul
mov
nop
adc
inc
and
je
xor
and
or
jo
ins
popa
(bad)
dec
outs
adc
and
add
add
push
mov
dec
movs
repnz
add
pop
(bad)
and
es
cmp
sbb
call
ror
sahf
cmps
push
inc
or
sub
jo
sbb
shr
test
and
adc
cmp
add
retf
xor
pop
cmp
add
or
daa
jg
sub
add
adc
ins
lods
inc
add
sbb
out
add
movs
cmp
xor
or
sbb
mov
push
or
cmp
das
enter
adc
or
jle
rol
rol
sbb
pop
pushf
and
add
sbb
mov
jmp
lds
push
sbb
leave
sbb
lahf
sbb
sbb
dec
sub
or
lods
and
jns
das
sbb
sub
or
lock
or
push
jns
iret
mov
sbb
sbb
outs
call
jno
pop
or
daa
nop
pop
aam
stos
push
mov
call
call
or
mov
fistp
cmp
pop
sbb
pop
pusha
je
dec
int
movs
add
add
pusha
jecxz
jge
(bad)
(bad)
in
scas
and
sub
add
(bad)
cmc
lds
push
fwait
cdq
xor
push
test
ror
sbb
add
push
ret
sub
push
mov
add
repz
add
sub
and
and
mov
or
pop
xchg
adc
add
dec
adc
imul
cmp
adc
sar
jbe
mov
inc
pop
ficomp
cmp
ds
add
inc
xor
test
xchg
adc
xor
add
add
in
add
sub
nop
mov
xor
leave
jo
cmp
sbb
hlt
sbb
call
cmp
pop
xor
call
or
cmp
inc
hlt
in
xor
dec
jnp
adc
aaa
and
aaa
adc
add
ficomp
ss
add
dec
ins
push
daa
loope
test
repz
push
loop
cmps
loope
dec
adc
ror
adc
or
inc
push
repnz
adc
pop
sbb
or
imul
clc
mov
sub
jo
dec
xor
ret
mov
xor
xchg
mov
fadd
add
in
jns
cmp
repz
pop
or
loopne
movs
add
push
inc
jmp
push
xor
add
aam
cmps
test
and
xor
stos
add
das
mov
add
cwde
push
inc
xor
in
and
push
movs
mov
(bad)
push
mov
cmp
and
mov
and
adc
add
pop
sahf
repz
inc
les
jbe
fwait
push
mov
mov
and
push
inc
push
sbb
mov
mov
adc
fmul
sbb
daa
adc
ss
sub
add
popw
repnz
call
and
inc
dec
pop
or
cmp
and
das
and
jo
leave
adc
retf
pop
cmp
or
add
push
into
pop
je
nop
addr16
dec
sub
loop
or
inc
add
repz
adc
pop
pop
rol
xchg
out
add
or
scas
add
dec
xchg
mov
xor
jp
xchg
push
cwde
imul
or
inc
scas
dec
sbb
retf
dec
fstp
aad
cmp
pop
inc
mov
push
push
in
push
es
and
pushf
sub
xchg
stos
mov
xchg
addr16
sahf
xchg
inc
add
adc
test
xchg
push
jmp
mov
push
test
xchg
inc
movs
mov
adc
add
cmp
and
sub
or
cmp
jns
sub
sub
retf
int3
pop
push
nop
adc
jns
sub
jmp
mov
mov
repnz
add
outs
inc
pop
loop
pop
outs
adc
stos
mov
test
xchg
push
sar
or
xor
dec
add
xor
xor
inc
mov
sbb
popa
rol
(bad)
and
adc
xchg
daa
popa
fs
out
adc
adc
iret
adc
pop
jae
and
pop
adc
std
arpl
xchg
push
and
sbb
in
jmp
jb
sub
inc
and
add
lds
sahf
stos
ss
addr16
sub
adc
xchg
xchg
les
out
add
enter
lds
adc
cmp
or
adc
sbb
nop
outs
js
cmp
loop
ret
push
inc
and
push
inc
pop
and
idiv
out
adc
sub
inc
sbb
repnz
push
sub
inc
sahf
or
pop
pop
sub
and
jne
sahf
or
xchg
and
adc
sbb
pop
dec
jmp
jo
mul
xchg
pop
mov
fmul
movs
inc
inc
fwait
push
cmp
jno
imul
xchg
sbb
aaa
sbb
adc
shl
push
adc
add
and
or
in
cmps
stos
or
test
mov
lock
push
stos
je
mov
aaa
adc
pop
ret
fstp
fstp
in
or
xchg
dec
in
out
je
adc
dec
adc
push
push
inc
and
cmp
int3
int
pop
dec
scas
mov
mov
mov
add
adc
cmp
or
push
jg
cli
test
adc
sti
imul
inc
test
add
dec
dec
jb
rcr
sbb
add
cs
dec
call
mov
mov
push
imul
in
cmp
adc
adc
sub
ins
movs
xor
xchg
stos
scas
xor
pop
push
iret
jns
xchg
ror
xor
jns
adc
sub
push
push
pop
ror
outs
push
(bad)
sub
add
and
aam
pop
and
arpl
(bad)
aaa
mov
fwait
or
inc
and
popa
ins
pop
shl
sbb
sub
adc
xchg
push
push
sub
cmp
cmp
mov
inc
jae
je
lock
mov
call
aaa
mov
xchg
mov
sub
or
sbb
dec
or
(bad)
push
dec
cmp
or
mov
rcl
(bad)
or
push
push
dec
xor
cmp
add
adc
or
sbb
sbb
mov
and
adc
jmp
or
dec
or
dec
ret
js
sahf
out
(bad)
or
and
and
and
push
mov
and
add
push
cmps
or
push
jns
push
or
(bad)
mov
sahf
retf
inc
sub
adc
xchg
adc
ins
pop
repnz
jecxz
sahf
retf
mov
adc
pop
sbb
mov
cmps
push
test
add
mov
(bad)
shl
cmps
dec
sbb
retf
xor
(bad)
(bad)
inc
adc
add
sbb
add
sbb
bound
sbb
ret
add
mov
pop
cwde
add
xor
bound
mov
or
cmps
arpl
inc
cmp
dec
sbb
mov
mov
popa
mov
push
sub
or
sbb
cdq
mov
outs
ds
rcl
pop
dec
fcomp
imul
adc
cmp
push
mov
lds
test
mov
inc
sbb
xchg
jno
leave
pop
mov
cmp
or
inc
or
add
inc
mov
cwde
cmp
adc
add
and
pop
cmp
adc
je
push
inc
add
imul
or
mov
inc
ja
mov
popf
mov
sahf
sbb
and
sbb
jnp
in
les
sbb
xchg
pop
aam
call
mov
xor
inc
or
cmp
jns
enter
and
and
mov
inc
and
adc
push
mov
inc
push
jb
mov
push
daa
add
arpl
push
sub
dec
xchg
add
mov
lea
out
adc
sbb
sahf
out
push
outs
out
push
xor
inc
xchg
xor
jo
dec
pop
movs
xchg
pop
iret
mov
dec
jae
ret
jns
cs
pop
xchg
push
xchg
push
sbb
push
test
jns
repz
ret
sub
mov
cmp
retf
adc
or
jns
out
add
push
in
cmps
dec
sbb
jae
or
pop
leave
xchg
dec
sahf
or
dec
push
dec
rol
fwait
add
cdq
and
repz
movs
jge
lar
aas
or
loop
sbb
mov
or
jae
sbb
cmp
adc
in
ins
inc
mov
adc
pop
shl
pop
and
popa
push
test
mov
xor
mov
cmp
push
jns
inc
sbb
or
and
and
mov
repnz
and
add
add
dec
dec
jnp
or
push
daa
je
into
and
jle
inc
pop
imul
test
jmp
fwait
retf
dec
xchg
sub
mov
dec
movs
mov
ret
call
xchg
rol
sbb
cmp
pop
mov
cld
or
xor
jb
xor
cmp
inc
or
lea
jae
fist
add
add
or
sub
dec
and
mov
inc
dec
add
sub
je
in
aad
or
test
mov
dec
scas
dec
ret
jne
leave
xchg
and
(bad)
dec
xor
fmul
aad
ins
nop
fwait
and
xchg
addr16
pop
add
imul
xor
jae
js
pop
iret
add
pop
sbb
add
cdq
je
dec
xor
sbb
adc
cs
pop
push
or
and
and
jnp
repz
xchg
sbb
add
and
xchg
push
and
in
and
and
add
jns
stos
mov
ret
lods
out
add
cmp
jo
add
pop
enter
push
into
ins
cmp
mov
lfs
mov
push
or
jmp
les
(bad)
std
icebp
sbb
add
repnz
or
and
adc
mov
or
xor
add
and
or
inc
dec
lods
push
cdq
sbb
cmp
aad
adc
mov
xchg
xchg
pop
je
lods
arpl
push
push
dec
inc
or
sahf
out
cdq
mov
add
lds
push
sbb
popa
pop
or
add
cmps
cmp
dec
loope
adc
push
xchg
pop
jb
pop
pop
scas
add
or
jb
push
push
cs
out
es
pop
sub
shl
jns
test
adc
push
arpl
adc
and
sub
push
pop
cdq
xchg
xor
and
adc
popa
loop
inc
dec
fwait
inc
xlat
imul
add
push
ins
out
sahf
cmp
jbe
adc
or
test
sub
add
fwait
adc
adc
mov
cmp
pushf
inc
pushf
test
popf
jne
out
shl
or
aas
mov
add
lds
and
test
mov
sahf
mov
push
or
xchg
mov
sbb
jl
or
and
mov
lods
adc
enter
scas
into
jae
stos
xchg
adc
pop
xor
sbb
add
inc
or
xor
sub
es
jne
adc
inc
mov
ds
mov
add
cmp
jecxz
stos
add
stos
add
mov
cmp
jns
and
addr16
icebp
cmp
xchg
pop
ins
sbb
mov
fst
and
mov
pop
sbb
or
das
rdmsr
xchg
cmp
sub
adc
mov
mov
retf
or
inc
dec
sahf
out
pop
or
and
pop
and
cmp
xchg
push
mov
push
dec
push
push
aam
sbb
push
mov
jae
xchg
iret
or
(bad)
scas
jns
(bad)
adc
push
push
cmp
repnz
out
or
sar
push
sbb
dec
add
and
arpl
ins
and
pop
add
(bad)
or
imul
pop
and
ins
cwde
fstp
jnp
push
add
in
jno
pop
and
mov
or
repz
mov
or
push
ret
sahf
fcomp
push
leave
rcr
sbb
test
mov
push
xor
std
jae
xchg
out
jge
ins
adc
test
xchg
loopne
xchg
sar
add
or
and
adc
call
or
fcmovb
pushf
inc
cmp
in
dec
or
mov
(bad)
out
push
and
cmps
int
adc
xor
xor
adc
popf
or
push
inc
sahf
(bad)
or
movs
int3
push
push
jae
mov
outs
imul
inc
dec
add
mov
sub
cmp
mov
jae
push
adc
xor
fistp
(bad)
bndstx
cmp
fisttp
or
sub
inc
cmp
mov
mov
scas
mov
cmp
maxps
or
lds
out
push
xor
loope
cmp
jno
pusha
add
mov
xor
sub
pusha
pop
inc
iret
les
cs
pop
push
inc
sbb
repnz
sbb
or
or
enter
push
dec
mov
adc
cmp
sbb
and
dec
dec
dec
aad
xchg
and
and
push
pushf
inc
adc
repnz
pop
jo
mov
jns
out
aam
es
mov
or
dec
bound
and
adc
stos
sahf
mov
add
dec
add
mov
fwait
cmc
into
movs
lea
add
out
call
test
or
and
mul
gs
xchg
xchg
sbb
pop
sub
xchg
aas
dec
and
adc
or
and
push
pop
inc
jne
in
push
loope
sbb
inc
push
pop
push
jns
add
daa
dec
ja
add
sbb
pop
mov
or
push
jo
push
xchg
add
add
inc
loop
or
das
dec
or
mov
sbb
(bad)
xchg
or
ins
xchg
push
push
fimul
adc
pop
push
jo
dec
adc
add
push
push
test
jne
data16
sbb
pop
add
mov
retf
adc
cdq
sbb
cmps
sahf
mov
jmp
push
mov
push
adc
xchg
icebp
cmp
mov
sub
fiadd
or
lds
sbb
sub
sahf
out
or
or
or
inc
dec
dec
rcl
fmul
xchg
add
ret
out
add
pop
cmp
sahf
out
(bad)
pop
adc
or
int
jmp
nop
addr16
adc
adc
push
or
jmp
(bad)
adc
movs
add
sbb
adc
ds
inc
sub
ins
movs
pop
repz
lea
dec
sbb
add
stos
test
adc
push
inc
imul
add
sub
add
push
push
iret
repz
dec
dec
lar
mov
and
nop
in
neg
add
sbb
or
cmps
shr
jle
or
inc
jmp
in
xor
mov
fist
imul
dec
push
dec
add
iret
adc
adc
sub
jo
sbb
add
push
cmp
add
dec
add
inc
cmp
loope
dec
xor
out
push
mov
cmp
mov
retf
and
cmp
inc
aaa
xor
jns
add
imul
and
fld
jns
out
xchg
jg
aaa
sbb
add
in
jb
inc
cs
sbb
daa
xor
in
shr
jno
loopne
loope
push
stc
xor
push
or
and
inc
jnp
pop
add
and
sbb
sub
ins
push
sbb
push
and
mov
adc
jb
leave
leave
xor
dec
and
or
test
dec
shr
sbb
and
pop
es
adc
sbb
pusha
adc
sub
adc
mov
or
xchg
inc
scas
push
pop
sbb
or
aaa
or
or
add
adc
jge
mov
and
in
mov
repz
dec
adc
and
cmp
sbb
push
adc
pop
sub
cmp
test
ret
push
call
and
xor
or
dec
sbb
fst
pop
pop
add
dec
sbb
xor
cmp
sbb
add
wbinvd
pushf
jno
mov
push
jne
invd
push
push
pop
xchg
cmp
repz
xor
and
adc
jb
cmp
sub
(bad)
sbb
test
pop
aam
inc
xor
imul
stos
or
test
or
test
or
ror
jb
movs
adc
in
push
or
out
and
xlat
jno
leave
repz
inc
shl
xor
sbb
inc
and
mov
mov
mov
mov
mov
dec
js
xchg
push
leave
mov
(bad)
xchg
xor
mov
and
mov
aam
sub
mov
cs
mov
bound
inc
int
pop
or
loope
or
add
pusha
and
jb
add
ins
mov
xor
inc
cmp
adc
and
add
or
mov
sub
cmp
mov
inc
xchg
sbb
dec
push
or
mov
sub
shl
cmps
pop
clc
mov
add
pop
sbb
xchg
jge
rcr
dec
or
mov
add
enter
dec
sahf
dec
popa
xor
inc
dec
les
sub
xor
(bad)
out
sub
push
pop
xor
xor
add
imul
lods
xor
inc
dec
and
cmps
adc
ret
or
adc
test
adc
pop
movs
ret
and
int
test
pop
push
xor
rcr
pop
jne
(bad)
leave
repz
add
mov
and
cwde
in
jns
cmc
cmp
add
cmp
sub
in
iret
repz
adc
xchg
out
sar
ss
push
dec
nop
cmp
outs
or
es
push
cwde
lods
in
in
inc
mov
jl
cs
arpl
nop
sub
adc
rcl
(bad)
dec
shl
jge
setb
(bad)
hlt
dec
or
push
in
sbb
sbb
pop
bound
(bad)
(bad)
iret
and
add
out
add
adc
xchg
pop
mov
adc
iret
les
dec
leave
jns
adc
sub
nop
lock
shl
data16
cld
adc
pop
dec
mov
fidiv
ret
mov
jb
cwde
inc
fcomp
or
adc
sbb
cs
add
pop
sub
xchg
nop
adc
mov
scas
in
hlt
pusha
jb
dec
sbb
xor
mov
int3
ret
sbb
es
xor
jns
xor
shl
clc
cs
daa
dec
test
test
(bad)
mov
and
xchg
cs
push
out
adc
loopne
adc
push
or
pop
test
push
js
test
scas
dec
movs
(bad)
mov
or
xor
add
cmp
mov
scas
cmp
add
or
in
pop
cmp
pop
inc
mov
xor
xchg
adc
pushf
scas
dec
je
je
or
or
popa
mov
push
stos
add
xor
pop
adc
jg
push
add
in
push
fcom
pop
arpl
cmps
popa
sub
sbb
push
and
dec
sub
adc
or
xor
dec
inc
sti
sbb
nop
out
adc
push
adc
adc
inc
push
dec
inc
or
ss
mov
jno
loop
adc
or
popf
lods
cmp
add
out
adc
or
test
or
jns
xlat
or
and
int
xor
push
add
pop
repnz
call
shr
rcl
fisttp
xchg
xchg
xchg
push
js
aas
adc
sub
or
jmp
add
or
mov
push
sar
mov
push
scas
jo
xor
mov
es
sbb
xor
cmp
jmp
jae
inc
fsub
leave
add
ret
and
loope
fs
and
pop
mov
mov
iret
cmp
mov
or
xchg
cmps
mov
jns
sbb
add
adc
in
cmp
sbb
pop
push
pop
nop
mov
xor
or
add
popa
mov
ja
and
sbb
xor
adc
sahf
pop
mov
inc
sahf
out
xor
(bad)
pop
sbb
test
mov
pop
lds
xchg
sbb
xchg
shl
pop
mov
cmp
pop
and
mov
jns
pop
repnz
in
sbb
test
mov
into
mov
sbb
mov
loope
out
jmp
cmp
mov
sbb
inc
adc
jns
adc
add
in
sub
mov
cmp
dec
cmp
or
mov
push
push
jg
imul
sbb
loop
into
pop
and
xor
lds
outs
or
add
inc
sti
push
push
adc
push
popa
add
add
and
mov
add
test
push
rcr
add
popa
psrlq
pop
movs
or
cmps
push
popa
daa
sub
cmp
mov
sub
or
sub
test
lahf
dec
sbb
and
movs
inc
dec
or
xchg
mov
jns
xor
fild
repnz
adc
in
into
and
rcr
add
in
jns
sub
sbb
repnz
and
sub
xchg
mov
or
scas
jp
daa
pop
jmp
mov
test
xchg
jns
pop
inc
dec
or
mov
shr
outs
sbb
into
repz
adc
adc
stos
imul
imul
mov
pop
sbb
xchg
cmp
sbb
in
rcl
inc
sbb
cmps
xor
imul
lods
jmp
sub
cs
or
test
xor
jae
les
add
fcomp
mov
jno
aaa
add
xor
add
cmp
and
and
popa
lods
push
clc
dec
rol
je
test
dec
aad
pop
adc
lahf
push
push
push
or
mov
or
inc
jl
sbb
stos
out
xor
imul
test
mov
nop
out
or
xlat
jns
loop
xor
push
sub
push
mov
pop
mov
push
iret
fisttp
dec
pop
sub
add
cmp
add
daa
add
fwait
mov
fldlg2
cmp
out
sbb
jl
or
jne
and
pop
mov
cs
ins
mov
jns
mov
adc
and
xchg
adc
test
adc
shr
test
add
pop
ins
mov
test
xor
mov
mov
pop
stos
adc
xor
add
daa
xchg
retf
gs
jg
push
mov
sub
add
aaa
pop
data16
sbb
pop
call
mov
ror
gs
adc
test
sub
icebp
mov
add
cdq
outs
aas
addr16
and
dec
je
pop
adc
jne
push
inc
sbb
add
scas
xor
adc
adc
cs
lods
dec
sbb
mov
inc
fsubr
inc
enter
pop
dec
imul
jno
sub
dec
outs
dec
and
xchg
dec
movs
add
sbb
shl
mov
sbb
ret
xlat
pop
fbstp
adc
mov
sbb
imul
iret
or
test
or
cmp
push
or
lock
inc
out
sahf
push
mov
xor
jne
adc
aas
sbb
(bad)
ss
cs
bound
xor
fs
cmc
bound
mov
mov
sub
xor
add
add
push
inc
add
xlat
imul
loopne
or
enter
xchg
lsl
mov
shl
fld
les
add
out
push
mov
adc
(bad)
scas
push
adc
mov
xlat
xor
mov
and
add
adc
push
pop
cmp
popf
xchg
adc
inc
add
ss
aaa
push
inc
xor
in
mov
inc
sahf
retf
je
sub
outs
inc
mov
add
mov
push
mov
je
xchg
jp
jb
adc
lds
xchg
or
stos
movs
cmps
inc
sbb
xor
mov
xchg
pushf
les
push
repz
xchg
mov
test
mov
dec
dec
or
jle
adc
cmp
add
mov
jbe
or
mov
jns
and
add
test
adc
mov
test
xor
add
inc
add
pop
push
add
xor
mov
or
sbb
imul
adc
and
mov
cmps
jb
sub
or
adc
or
add
es
dec
(bad)
mov
sbb
push
test
bound
xor
loop
dec
jmp
adc
dec
jns
out
sbb
xchg
out
add
in
rcl
or
xchg
(bad)
mov
or
sub
xchg
mov
xchg
inc
leave
repz
xor
pop
add
or
sub
or
mov
xor
inc
pop
(bad)
and
pop
test
jo
and
sub
or
xor
adc
imul
fmulp
pusha
xor
adc
or
inc
sub
inc
mov
push
test
or
leave
mov
pop
clc
rcr
and
mov
cmps
or
mov
je
and
cs
sbb
cmp
inc
int3
test
mov
ja
ror
push
sbb
pop
test
movs
cmpxchg
inc
imul
adc
add
sub
push
pop
ficomp
dec
dec
and
mov
push
(bad)
mov
inc
movs
pop
xor
lsl
imul
or
es
push
dec
xchg
xchg
xor
call
push
push
push
mov
or
nop
retf
leave
repz
dec
test
es
in
in
inc
test
mov
out
shl
inc
pop
or
(bad)
in
push
pop
sbb
adc
xor
adc
lods
pop
mov
cmps
pop
mov
cmp
mov
adc
dec
xchg
sbb
push
mov
icebp
cwde
mov
and
nop
mov
clc
ret
cmc
pop
lea
sub
adc
ins
mov
push
test
pop
retf
mov
je
(bad)
xchg
dec
sahf
retf
or
lods
call
and
pop
and
in
sahf
ror
sar
mov
pushf
out
pop
nop
and
std
das
les
test
inc
or
or
and
repz
add
and
jb
dec
add
imul
nop
out
pop
or
outs
inc
and
repz
xor
or
adc
and
jg
lods
inc
or
fisub
push
and
add
mov
cli
ins
pushf
push
(bad)
pop
pop
arpl
adc
leave
jle
xchg
mov
sbb
ss
inc
popf
add
dec
xor
xchg
add
xchg
push
dec
jae
inc
cmp
out
daa
or
mov
je
sbb
popf
cmps
jae
pop
out
pop
jge
add
dec
fild
push
shr
(bad)
cmps
jmp
and
and
lea
and
or
dec
sbb
or
pushf
sbb
dec
cmp
xor
sub
rcl
push
sub
je
stc
adc
shr
fidivr
adc
push
adc
push
inc
rcl
scas
dec
(bad)
das
adc
and
test
inc
sbb
enter
addr16
xchg
dec
push
push
call
sbb
add
dec
xchg
adc
dec
xchg
mov
add
adc
mov
or
add
aas
pop
shl
xor
jb
add
dec
add
dec
xor
rcl
aas
pop
add
add
add
sahf
addr16
cmp
(bad)
enter
mov
mov
sbb
into
add
and
xor
push
mov
cmp
mov
cwde
jge
push
jmp
pop
out
adc
sti
and
sub
out
add
push
out
(bad)
push
xchg
shl
inc
sahf
out
sbb
or
add
pop
enter
mov
ja
mov
sub
in
push
ins
or
or
jmp
je
fsub
add
and
pop
push
xor
xchg
out
push
cmp
push
push
pop
out
(bad)
in
mov
dec
dec
and
es
push
xor
cmp
dec
and
test
icebp
popa
jae
shl
jae
inc
dec
mov
aaa
add
inc
xchg
lock
and
iret
xor
aas
adc
shl
fidiv
and
movs
xor
sbb
mov
xchg
or
pop
fs
jo
mov
aas
mov
bound
jbe
push
test
adc
or
and
xchg
jae
fidiv
je
mov
aaa
cmp
cwde
stos
les
cmp
add
push
pop
jp
cwde
dec
mov
xchg
pop
inc
lods
ret
shl
push
mov
mov
movs
repnz
dec
dec
mov
adc
jns
das
add
sbb
or
in
push
je
sub
shl
sbb
mov
sbb
es
pop
movs
push
popf
jecxz
leave
daa
pop
pop
push
repnz
mov
sbb
xchg
(bad)
cmp
mov
sub
test
pop
and
movs
inc
and
sbb
push
push
or
iret
xor
sbb
inc
cs
mov
push
and
js
or
xor
dec
push
push
cs
mov
pushf
sbb
push
mov
jno
mov
bound
cwde
inc
jbe
fisub
pop
pop
repnz
adc
nop
out
mov
jo
imul
jns
xor
pop
push
or
mov
lods
xor
inc
pop
cmps
cmp
imul
ret
cwde
movs
cdq
inc
pusha
nop
imul
add
inc
mov
push
in
pop
mov
dec
and
mov
adc
out
aaa
jne
or
adc
cmp
sbb
jae
xor
test
inc
and
and
push
xor
and
mov
out
test
add
psubb
sbb
sub
cs
dec
dec
fiadd
add
add
xor
inc
pop
movs
inc
add
jns
xor
and
and
das
xchg
dec
and
enter
and
push
adc
stc
mov
xchg
or
mov
enter
pop
and
or
pop
and
push
les
fidivr
add
pop
enter
or
xor
inc
sub
mov
call
cmps
add
jns
sbb
and
adc
and
mov
cmc
lock
pop
rcr
dec
out
mov
and
add
ss
repnz
adc
add
retf
rol
lock
pop
cmpxchg
cmps
add
test
mov
xchg
out
pusha
inc
adc
test
mov
vmwrite
iret
cwde
cmp
xor
(bad)
add
or
push
movs
lea
loopne
add
mov
(bad)
stos
dec
dec
daa
and
out
aaa
dec
pop
or
xor
rcr
mov
mov
mov
xchg
fcom
add
adc
inc
and
cdq
popf
inc
xchg
ret
loope
addr16
dec
and
icebp
test
ret
cmp
cdq
or
add
cmp
ss
dec
cdq
push
add
adc
xchg
jns
inc
adc
inc
dec
sbb
dec
inc
adc
rol
xlat
dec
imul
push
rcl
fwait
push
sbb
repnz
test
add
cmp
repz
pop
add
pop
lahf
add
jns
or
es
xor
cwde
inc
mov
aas
or
add
sub
sbb
rol
loopne
mov
sub
and
xor
aam
lods
lahf
rol
or
adc
inc
sahf
or
outs
das
xchg
mov
into
add
iret
or
pushf
fwait
cmp
aaa
(bad)
repz
pop
and
in
xchg
rcr
test
and
adc
jecxz
repz
pop
sbb
add
aaa
lods
pop
push
and
push
mov
sbb
std
pop
cwde
stos
mov
sub
or
or
or
mov
nop
add
pop
inc
jmp
stos
pop
adc
and
add
cmp
pop
add
pop
mov
inc
rol
xor
xchg
ret
xor
ins
jp
hlt
dec
xchg
mov
sub
jecxz
shl
loopne
or
and
dec
or
sub
(bad)
mov
addr16
repnz
leave
xchg
add
pop
pop
mov
fldenv
cwde
fwait
movs
xor
sbb
retf
sbb
and
mov
push
(bad)
adc
cmc
bound
ss
or
mov
adc
or
adc
fnsave
dec
dec
dec
push
push
and
cmp
xchg
rcl
out
mov
xchg
cmp
push
cs
shr
sub
gs
sbb
mov
in
or
scas
sbb
ins
loopne
adc
dec
dec
dec
out
sahf
mov
sbb
into
mov
iret
jns
dec
outs
push
push
xor
add
push
or
and
test
in
pop
mov
and
sbb
dec
fiadd
and
add
scas
ror
out
pop
add
mov
neg
data16
jns
sbb
int3
or
and
pusha
mov
int
xor
inc
add
movs
jno
pop
adc
mov
repz
mov
cs
inc
push
in
dec
dec
(bad)
add
and
push
push
push
pop
cmc
add
push
push
dec
ss
dec
dec
pop
adc
sub
das
dec
mov
movs
xchg
xor
or
ret
(bad)
gs
adc
and
xor
shr
fwait
or
pop
imul
lea
xchg
add
add
add
fs
rol
jae
sbb
inc
dec
sub
data16
inc
cdq
cmp
dec
sub
enter
mov
jp
iret
mov
ror
rol
leave
mov
lea
and
xor
xchg
and
jns
int
jl
mov
sub
xor
cmp
or
add
mov
repz
shl
cmps
jno
mov
daa
xchg
sub
ins
pusha
and
and
jb
and
iret
jns
or
je
push
aaa
mov
push
sbb
push
mov
jb
rol
sub
popa
bndldx
test
retf
(bad)
xchg
push
out
add
mov
mov
push
inc
sub
pmullw
and
dec
xor
and
cmp
imul
jmp
jnp
cmp
sub
je
dec
retf
jmp
cmp
push
fdiv
inc
add
pop
xor
cmp
jae
push
pop
or
mov
retf
sahf
add
es
push
lds
inc
mov
fsub
cdq
mov
dec
sahf
and
(bad)
adc
xor
or
adc
xchg
sbb
test
inc
add
and
and
push
fisttp
jmp
inc
add
lea
mov
jl
push
sbb
sbb
push
leave
stos
xchg
push
ficomp
shl
test
scas
jae
pop
xor
cmp
sbb
add
or
ret
jge
add
nop
nop
sbb
rol
adc
sub
sub
ja
and
push
fcmovne
stc
or
ret
add
adc
retf
movs
sub
ror
sub
xchg
cmp
push
(bad)
sbb
aas
cs
mov
mov
arpl
pop
pop
pop
fwait
inc
lods
mov
lods
sti
xchg
jns
xor
adc
cs
mov
sbb
lods
dec
mov
or
inc
inc
jmp
repz
push
adc
sub
adc
jo
frstor
cmps
das
inc
mov
add
in
aam
cmp
rcl
cmp
push
daa
daa
iret
xor
pop
pop
mov
or
or
sub
lahf
sbb
daa
cmp
xchg
jns
jne
jae
(bad)
push
sub
iret
imul
mov
inc
pop
or
bound
sbb
add
add
sbb
xor
enter
mov
test
stos
sbb
push
mov
xor
adc
dec
or
sbb
and
push
jae
mov
aad
sub
stc
add
mov
ins
sbb
sub
dec
and
(bad)
xor
aas
cmp
xor
pop
mov
or
pop
mov
mov
inc
or
add
or
out
xchg
aam
test
pop
jb
or
pop
inc
cmp
sub
or
add
jl
xor
mov
inc
les
retf
test
iret
jae
test
sub
test
cmp
outs
jmp
aaa
sbb
rol
add
mov
popa
inc
sbb
cvttps2pi
imul
popf
and
sub
push
or
es
push
mov
aam
dec
sbb
xchg
dec
(bad)
sahf
ss
out
pop
xchg
sub
inc
and
enter
repz
sub
add
retf
iret
push
pop
int3
jle
retf
sub
xor
pop
push
or
add
inc
and
into
repz
adc
fmul
jns
pop
cmp
add
adc
add
dec
pop
lea
shr
enter
and
sub
add
add
adc
add
jns
push
add
lods
fld
test
jno
movs
jb
or
add
and
cmps
adc
pop
data16
and
push
jg
push
xchg
or
adc
add
je
push
ror
addr16
adc
or
or
enter
or
inc
repnz
in
sub
add
inc
jl
repnz
scas
(bad)
punpcklwd
and
add
jns
add
in
rcr
movs
xchg
or
je
push
sbb
mov
out
adc
mov
jae
movs
aaa
mov
sbb
(bad)
or
repnz
test
sbb
xor
pop
adc
sub
and
es
out
adc
push
sub
lock
inc
call
and
pop
fst
jecxz
loope
test
dec
sbb
dec
inc
shl
jl
cmp
sbb
retf
inc
push
lods
cs
xchg
push
xchg
jo
push
cmps
icebp
dec
or
mov
inc
cmp
add
rcr
or
adc
inc
sahf
cmps
repnz
sub
or
mov
or
rcr
loop
sahf
and
cdq
jno
jae
adc
sub
sub
inc
push
add
mov
mov
push
ss
xor
mov
dec
xchg
cdq
test
sub
xchg
mov
jl
sub
mov
dec
jo
push
inc
aad
jge
not
test
dec
mov
mov
sbb
xor
rcr
xor
cmps
repnz
push
adc
lods
xor
cmp
daa
inc
pop
repnz
adc
sbb
sub
xor
add
inc
jl
sahf
and
add
add
push
lods
add
mov
sbb
adc
sbb
adc
pop
inc
add
in
sbb
sbb
and
adc
push
test
push
in
loope
xchg
retf
push
pop
inc
push
aam
inc
lods
cmps
xor
cvtps2pi
add
in
inc
shl
mov
jbe
sub
aad
jno
mov
fld
push
call
pop
call
sub
push
add
or
push
stos
or
iret
xchg
(bad)
adc
xchg
pop
and
jno
dec
xchg
ins
mov
jae
(bad)
sahf
and
in
sub
or
adc
aad
loopne
cmp
out
dec
push
push
adc
inc
repnz
sbb
or
daa
pop
sub
or
adc
test
mov
push
jbe
repnz
dec
es
push
dec
push
add
rol
push
fs
inc
adc
cmp
(bad)
arpl
or
(bad)
leave
fadd
pop
sub
movs
repnz
sub
pop
loope
sbb
cmps
or
jno
outs
add
xor
xor
aam
adc
nop
dec
pop
add
test
inc
addr16
and
sbb
adc
sub
dec
push
push
cmp
xchg
inc
xor
push
fwait
cmp
sbb
adc
daa
cmp
ror
mov
sahf
cwde
out
ds
cmps
xor
pop
sti
lods
add
and
and
and
pusha
push
cmp
dec
push
stos
inc
pop
sub
(bad)
loop
adc
mov
cld
cmp
popa
lods
inc
sub
jb
lds
aas
mov
in
(bad)
cmc
rcl
es
xchg
mov
lea
mov
lea
retf
add
cdq
rol
pop
pop
ds
sbb
and
mov
adc
jb
or
inc
xor
fucomip
adc
sbb
add
xchg
arpl
sbb
add
mov
cs
xor
xor
sub
pop
aam
adc
das
dec
arpl
ins
dec
xchg
out
mov
outs
or
das
pop
shr
movs
ins
push
cmp
es
inc
sub
adc
add
addr16
pop
leave
repz
jge
adc
out
add
leave
mov
daa
xchg
dec
pop
sub
and
addr16
inc
push
adc
mov
and
sbb
cmps
cpuid
push
cs
iret
xor
pop
pop
dec
sahf
retf
cmp
mov
and
imul
cmp
pop
sub
or
mov
mov
jb
adc
add
push
adc
cmp
outs
pop
scas
cmp
jns
ins
add
or
lods
add
mov
xor
dec
dec
sahf
retf
inc
adc
cwde
or
add
or
call
repz
push
or
aam
mov
add
pop
sbb
and
adc
repnz
dec
add
add
push
and
xor
dec
or
adc
cmp
or
inc
adc
pop
mov
mov
push
push
sub
or
pushf
sbb
sbb
or
sub
pop
call
inc
sbb
add
enter
sbb
repnz
pop
mov
xor
inc
xchg
lods
push
mov
or
cmp
cmp
jo
sbb
sub
dec
sbb
jb
es
scas
mov
sbb
mov
aaa
adc
cs
and
repnz
bound
inc
fadd
push
dec
add
sub
sub
xchg
dec
and
data16
out
nop
add
pop
or
jmp
cmp
nop
inc
pop
rol
add
cmp
dec
ins
jl
bound
(bad)
daa
gs
pusha
xchg
out
or
and
and
sbb
xchg
pop
sbb
mov
jno
je
mov
movs
xor
xor
cdq
cmp
aas
daa
cs
dec
add
and
push
adc
test
add
shr
jge
ret
cs
addr16
rol
mov
rcl
dec
scas
rcr
or
sub
data16
rcl
adc
addr16
std
ret
in
shr
push
pop
push
add
inc
inc
imul
mov
sbb
inc
and
adc
adc
adc
out
or
stos
xor
add
sahf
out
mov
push
sub
xor
xchg
dec
shl
mov
adc
add
arpl
aam
dec
or
xor
sbb
dec
aas
sub
sub
out
mov
jno
push
gs
and
lods
popa
pusha
(bad)
in
js
sahf
cmps
bnd
pop
sub
out
cmp
movs
add
push
or
sub
adc
xchg
jmp
or
test
mov
mov
jle
not
mov
ret
js
jae
mov
jnp
inc
push
adc
adc
or
cmp
sbb
or
daa
push
jge
add
jns
dec
sbb
push
and
repz
inc
mov
iret
or
xor
add
adc
sbb
imul
dec
gs
mov
push
cmp
and
pop
dec
xor
cmp
retf
fild
jmp
or
jo
xchg
and
or
test
jns
push
jbe
sbb
ss
and
dec
mov
out
or
dec
and
aad
sbb
popa
push
or
adc
mov
add
ss
dec
xchg
inc
pop
inc
pop
sub
scas
push
invd
push
aas
push
lds
sub
rcr
or
dec
mov
mov
sub
stos
add
and
add
(bad)
nop
hlt
and
sub
cwde
adc
push
push
add
in
sbb
fisttp
push
pop
cwde
xchg
dec
push
or
fbld
es
or
pop
dec
add
sbb
nop
add
inc
sub
add
and
cmp
inc
sbb
out
or
(bad)
mov
jo
pop
and
or
imul
xor
psllq
xor
sub
and
add
popa
arpl
sahf
inc
bound
mov
mov
jmp
add
pop
inc
or
add
xchg
or
and
jo
and
aaa
movs
dec
sahf
repz
iret
adc
jns
and
xchg
test
or
inc
or
mov
push
pop
repnz
test
inc
mov
aaa
call
aas
test
add
add
adc
and
add
add
cmp
das
cmp
ins
add
aad
mov
push
xchg
sub
outs
add
dec
pusha
adc
or
push
daa
jo
and
dec
test
push
pop
mov
adc
in
pusha
mov
sub
lods
leave
dec
add
or
dec
lods
in
jle
loopne
jns
or
sub
jmp
repnz
out
inc
inc
xor
stos
out
or
outs
and
mov
in
and
push
jns
adc
xor
or
add
add
in
inc
xchg
test
movs
shl
sbb
fistp
stos
adc
dec
or
movs
adc
adc
push
jmp
and
xchg
or
or
fsub
dec
cmp
pop
dec
gs
add
xchg
mov
sub
jbe
and
cdq
or
jne
mov
sahf
out
push
adc
in
pop
rdmsr
push
sbb
rcl
cwde
xor
inc
or
cmp
mov
dec
add
test
loop
sbb
dec
loopne
or
dec
stos
add
aaa
stos
add
inc
adc
test
pop
sbb
pop
dec
ds
push
imul
jb
adc
test
fwait
inc
dec
jno
push
add
push
xor
inc
add
xor
inc
sub
sub
cmove
je
or
add
sub
mov
sub
in
xchg
xor
adc
rcl
xor
sahf
out
fcom
sub
or
repnz
push
xor
jmp
mov
sbb
xor
mov
aas
inc
leave
add
stos
rol
and
iret
jae
adc
dec
adc
mov
inc
and
adc
pop
jae
inc
les
or
es
aaa
movs
stos
test
cmp
retf
jns
stos
cdq
aas
or
xor
cmps
cmps
in
inc
aas
push
dec
dec
pop
int
or
add
daa
cmps
inc
mov
mov
jmp
add
test
inc
dec
pop
mov
mov
inc
pop
and
mov
pop
adc
push
repnz
es
and
and
or
stc
call
push
adc
inc
mov
inc
xchg
adc
jbe
daa
popf
int
cs
push
add
sbb
into
mov
ss
pop
or
xchg
xchg
pop
jo
popa
repnz
xor
pop
imul
add
pop
retf
jle
cdq
add
mov
sub
lahf
outs
cmp
rcr
out
sub
loope
imul
mov
aaa
dec
cmp
daa
das
xor
add
xchg
cmp
cmp
ror
and
dec
imul
jne
bound
or
push
sub
sahf
xor
xor
xchg
mov
push
sub
ins
cmps
test
sbb
jo
das
and
(bad)
cmp
sub
pop
cmp
dec
sbb
cmps
cmp
aaa
test
adc
or
fisttp
xchg
pop
les
pop
sbb
shl
repz
inc
daa
adc
sbb
imul
je
or
dec
adc
dec
enter
push
das
iret
shl
adc
and
or
inc
sbb
xor
jg
sahf
out
fimul
add
sbb
add
jecxz
cmp
in
inc
pop
movs
inc
xchg
xchg
and
sub
push
pop
adc
push
pop
(bad)
ds
cmp
dec
in
inc
adc
dec
sbb
or
mov
bnd
sub
sbb
rol
bound
mov
dec
dec
cmp
push
mov
xchg
dec
or
lar
daa
cmp
push
es
ret
je
and
inc
fisttp
daa
fwait
adc
jbe
daa
cwde
jmp
add
in
dec
push
fnstcw
outs
jmp
push
xor
cmp
add
add
inc
and
sub
popa
nop
out
or
push
or
in
add
jg
xor
add
stos
xchg
je
jmp
lea
adc
or
adc
add
stc
and
push
test
mov
sub
call
les
pinsrw
dec
and
push
pop
mov
sbb
push
mov
dec
mov
add
(bad)
or
sar
test
pusha
aad
cmp
std
cmp
and
sbb
add
xor
and
stos
mov
mov
enter
imul
rcr
xchg
adc
fstp
fstp
xchg
add
sbb
iret
popf
out
pop
out
or
push
xchg
jbe
mov
cmp
retf
xor
mov
daa
push
cmps
stos
add
and
cmp
xor
adc
mov
dec
pop
push
push
or
dec
ret
jecxz
fcmovnb
dec
mov
addr16
mov
push
mov
dec
pop
or
es
sbb
mov
add
dec
retf
jmp
rcl
cmps
adc
mov
(bad)
inc
xor
or
mov
push
sub
adc
aas
repz
aam
ins
les
pop
xchg
add
mov
test
or
push
dec
pop
shr
sub
daa
jge
mov
adc
mov
imul
jns
add
loope
dec
pop
sub
add
nop
xor
or
dec
test
imul
sub
push
sbb
xor
adc
dec
push
push
jecxz
rcl
gs
loop
adc
xor
mov
arpl
iret
or
inc
retf
add
push
fs
add
push
fsub
mov
sbb
add
add
stc
sub
cld
add
add
iret
dec
rol
and
adc
or
into
leave
aad
cmp
leave
out
in
shl
adc
push
sahf
(bad)
sbb
dec
and
dec
dec
aad
adc
(bad)
lods
sub
mov
add
push
dec
ds
mov
push
enter
test
mov
aam
pop
out
jle
adc
xor
fnstcw
adc
jb
or
add
xor
enter
fs
cwde
cwde
cmp
inc
test
shr
dec
sti
movs
jb
mov
inc
push
shl
dec
add
adc
aaa
nop
retf
sub
rcl
test
cmp
xor
mov
sbb
arpl
mov
adc
retf
or
(bad)
es
inc
dec
into
mov
int
lds
(bad)
adc
adc
and
daa
push
push
sbb
mov
push
mov
cmp
adc
mov
push
and
imul
ret
adc
add
adc
(bad)
cmp
adc
cmp
xor
test
shr
add
adc
hlt
or
aaa
adc
add
add
outs
sub
sbb
jo
adc
push
add
push
add
lahf
sbb
jp
cmp
enter
or
push
ret
and
and
mov
enter
iret
enter
cmp
add
shl
push
popa
sub
ret
push
bound
add
ret
and
and
or
push
rcr
lods
add
and
outs
sub
stos
xor
sub
shl
add
iret
repz
or
push
or
dec
xor
or
xor
ins
loope
jmp
cmp
setl
out
and
stos
(bad)
xchg
mov
jge
push
sub
pop
add
jno
mov
stos
push
dec
sbb
jns
push
in
sub
xor
mov
add
shr
aaa
xor
xrstor
test
xor
and
daa
ja
sub
test
pop
pop
sub
push
push
sbb
mov
test
fstp
dec
sahf
inc
push
add
ret
test
pusha
outs
rcr
fs
les
adc
arpl
and
add
push
push
fstp
ret
pop
retf
leave
repz
adc
(bad)
and
and
add
cmp
xor
popa
add
sub
shl
movs
sub
push
and
mov
or
add
add
iret
aas
sbb
ror
and
sbb
test
and
sbb
sbb
push
mov
fcmovnbe
mov
push
pop
pop
pop
inc
mov
sbb
popa
push
mov
xchg
pop
sbb
test
imul
dec
daa
adc
push
and
add
adc
and
xchg
push
cmp
pop
repnz
cmp
cmp
xchg
inc
mov
pop
cwde
xchg
push
inc
pop
adc
pop
xchg
pop
adc
in
out
cmp
jecxz
xchg
xchg
and
mov
push
shr
scas
cmp
je
mov
xor
sbb
(bad)
mov
pop
ins
inc
mov
xchg
add
repz
sub
ficomp
adc
cmp
push
or
adc
add
add
adc
adc
push
add
out
adc
xchg
mov
lds
add
mov
add
iret
and
push
jno
ret
sbb
xchg
(bad)
add
adc
add
pop
xchg
pusha
fisub
adc
ins
movs
push
inc
or
mov
adc
xor
sahf
jl
int
xor
cmp
adc
inc
cmp
addr16
cmp
mov
or
and
js
pop
movs
mov
das
pop
or
dec
xor
mov
push
dec
mov
or
iret
repz
add
xchg
mov
xor
dec
adc
movs
xchg
and
adc
cmp
lea
inc
adc
cwde
nop
sbb
or
cmc
pop
sbb
xchg
xor
pusha
add
out
sub
sbb
in
pop
adc
xor
fcom
shr
shr
(bad)
iret
jns
and
push
(bad)
(bad)
adc
cmp
ins
sbb
movs
and
cmp
repz
adc
cmp
sbb
pop
pop
sub
shl
test
sbb
cdq
rcr
mov
xor
lea
pop
iret
push
movs
mov
(bad)
push
and
xor
sub
int
cmp
xor
add
pop
mov
push
sub
sub
and
cmps
inc
adc
mov
or
or
call
test
add
xchg
push
out
inc
adc
xor
inc
data16
sbb
adc
jo
dec
test
push
movs
inc
and
push
mov
pop
add
jns
fwait
leave
sub
jl
stos
call
pop
mov
popa
cwde
or
xor
sbb
sbb
lds
cmp
mov
movs
cmp
sbb
mov
sub
or
(bad)
shr
sbb
add
test
sub
push
add
cdq
jne
loopne
add
scas
in
sahf
cdq
add
push
repnz
es
clts
pop
inc
test
inc
and
rol
push
adc
imul
repnz
inc
in
shl
jb
pusha
sbb
sub
adc
movs
repnz
add
in
test
repz
cmp
adc
mov
xchg
sub
xor
test
call
mul
in
mov
or
(bad)
stos
xchg
addr16
aaa
push
cmp
push
or
and
leave
cdq
jmp
or
and
call
inc
stos
adc
adc
nop
inc
adc
cdq
adc
xchg
xchg
pop
gs
sahf
out
adc
jns
and
dec
xor
or
mov
jge
mov
pop
(bad)
pop
adc
or
enter
test
adc
push
cmp
js
lea
or
add
mov
int3
movs
add
or
or
jp
mov
test
mov
or
loope
pop
pop
add
sbb
adc
mov
in
sbb
cmps
mov
les
jnp
loopne
xchg
ins
add
sub
pop
or
into
sub
add
inc
inc
call
loope
pusha
inc
test
xchg
inc
popa
inc
dec
hlt
cmp
and
inc
and
cs
aaa
add
cdq
adc
or
cmp
sub
cwde
and
mov
imul
lock
je
dec
imul
push
push
cmps
pop
lods
int3
shr
sub
(bad)
mov
adc
daa
add
jnp
sub
sbb
in
sbb
sahf
or
push
adc
ja
inc
mov
sti
xchg
dec
in
mov
(bad)
adc
xor
retf
add
xor
xchg
dec
sahf
sbb
adc
ds
sbb
add
sub
pop
es
push
aad
cmp
test
push
xchg
and
push
xor
rcl
xchg
adc
repnz
fcom
(bad)
push
test
add
cs
xchg
je
add
jne
dec
push
dec
pushf
ret
imul
cmp
sbb
out
sahf
out
dec
or
nop
cmp
dec
xor
sub
inc
adc
dec
inc
sub
mov
push
aaa
pop
cmps
adc
or
inc
sub
nop
or
fwait
adc
adc
adc
test
or
xchg
out
sbb
dec
ja
addr16
and
pop
loopne
imul
test
(bad)
xor
sbb
and
add
adc
or
sub
pop
mov
jmp
clc
retf
jg
sbb
add
mov
add
sar
(bad)
call
sub
add
iret
repz
sbb
push
add
dec
icebp
scas
adc
movs
test
xor
adc
fs
bound
retf
inc
or
outs
dec
push
cmp
xchg
cmp
js
mov
jns
mov
outs
and
add
adc
mov
adc
and
and
jmp
hlt
dec
cmp
push
leave
add
sub
xchg
adc
pushf
or
pusha
pop
adc
rcr
fild
dec
inc
and
push
jo
mov
sbb
jmp
sbb
adc
ffreep
mov
inc
retf
xlat
mov
data16
mov
(bad)
imul
xchg
mov
vunpckhpd
push
icebp
pop
sahf
movs
cmp
dec
sbb
lods
adc
jo
ret
or
xchg
les
xchg
add
adc
movs
mov
popf
sbb
aam
xchg
adc
retf
ds
or
in
loop
jnp
push
and
jne
mov
aam
rcr
stos
rdpmc
loopne
adc
imul
lods
adc
adc
pop
stos
ds
dec
imul
in
sahf
sbb
adc
pop
xor
and
dec
fnstenv
mov
fadd
adc
imul
or
ret
in
sub
pop
jnp
add
mov
push
xor
sahf
add
mov
repnz
adc
adc
and
sbb
mov
jns
or
cmp
adc
and
xor
xchg
pop
sub
cmp
adc
and
xchg
cmc
xor
fist
dec
cmp
or
les
sbb
and
push
push
push
sbb
bound
or
or
mov
or
movs
push
add
push
leave
xor
dec
or
jns
push
sahf
inc
sahf
out
adc
outs
movs
xor
aaa
pop
xchg
or
adc
sub
ds
or
inc
shl
xchg
jmp
pop
add
mov
dec
dec
sbb
dec
adc
sbb
int
cwde
adc
cmps
test
mov
nop
out
add
mov
dec
cmps
repnz
test
dec
pusha
inc
and
jno
pop
dec
jp
cmp
xchg
pusha
pop
add
push
push
call
test
arpl
add
or
and
push
or
jb
rol
xchg
test
je
aam
jns
adc
push
dec
dec
outs
xor
jb
icebp
or
jmp
or
push
add
push
and
inc
test
pop
cmp
mov
xchg
les
in
push
push
lods
push
inc
ss
popa
test
inc
push
pop
repnz
or
xor
and
xchg
push
or
jns
and
pop
xchg
pop
pop
daa
xor
lods
mov
cmp
cwde
xchg
inc
dec
ins
sbb
inc
call
out
ret
add
inc
or
pop
sar
addr16
ja
mov
mov
xor
sbb
mov
add
or
repz
lea
jmp
adc
inc
jbe
xor
fnstenv
cmp
and
pop
adc
and
add
xlat
dec
ss
and
(bad)
push
pop
push
(bad)
es
es
adc
push
inc
xchg
adc
ss
sbb
or
mov
dec
scas
or
dec
and
repz
dec
push
jl
nop
xor
iret
and
mov
push
add
xchg
xchg
or
adc
push
or
adc
pop
repnz
jns
sahf
js
add
test
mov
inc
add
or
push
ret
mov
hlt
and
mov
je
push
and
daa
adc
add
pop
test
jae
sbb
xor
mov
add
cmps
sahf
jl
jp
add
test
and
add
jge
iret
sub
iret
repz
mov
mov
fwait
or
or
xor
adc
push
add
iret
push
or
dec
dec
pop
add
adc
jg
adc
push
clc
mov
inc
shr
arpl
test
sub
ror
aam
dec
cmp
push
dec
loopne
mov
adc
pop
jl
add
ja
push
jne
adc
pop
out
and
cs
es
xchg
xor
adc
pminsw
pusha
and
xlat
pop
dec
or
xchg
sbb
repz
or
sbb
rsm
pop
xchg
imul
adc
pusha
test
push
adc
and
cdq
add
sub
out
push
push
das
sbb
or
sbb
cmp
in
and
adc
xchg
xor
fcomp
or
adc
inc
and
dec
cdq
sbb
xor
fld
mov
(bad)
pop
mov
movs
dec
pop
or
outs
dec
mov
test
dec
ret
or
jmp
cmp
mov
and
pop
push
stos
scas
aad
sub
inc
ja
push
push
mov
lds
add
je
inc
pop
or
enter
pop
mov
sub
cmp
pop
and
leave
test
cmp
inc
nop
inc
jo
fwait
sub
or
adc
pusha
adc
idiv
and
neg
inc
add
dec
xor
cmp
repz
adc
and
test
test
xor
arpl
sub
add
mov
test
xor
xor
lahf
sbb
add
pop
test
fldenv
or
leave
jl
inc
add
cmp
xor
cmp
sbb
inc
pop
add
jno
iret
or
mov
or
inc
shl
out
inc
adc
adc
(bad)
sahf
out
in
test
or
sbb
jno
jae
xor
mov
add
daa
push
add
xor
pop
xor
in
or
daa
js
jns
adc
add
aas
in
push
nop
out
arpl
pop
mov
iret
dec
aaa
nop
inc
add
inc
fimul
push
mov
xor
loopne
addr16
es
nop
dec
ds
dec
xchg
and
mov
jns
outs
sub
sbb
adc
in
mov
push
and
add
iret
rep
add
mov
xchg
sbb
outs
sub
jle
sahf
cmps
xor
add
sub
dec
test
sub
sub
mov
scas
push
movs
adc
hlt
or
add
in
xor
(bad)
sbb
pop
ror
add
loope
inc
pop
(bad)
push
adc
pop
sub
mov
inc
xor
dec
aaa
push
push
mov
push
outs
pop
adc
pop
pop
or
ins
push
aas
lock
leave
xchg
and
xor
adc
ja
or
inc
push
es
pop
mov
cdq
pop
jo
and
add
mov
int3
or
and
daa
iret
repz
mov
sub
inc
lea
inc
cs
add
ror
mov
imul
(bad)
scas
push
or
scas
inc
cmp
sbb
adc
or
cmc
repz
sub
fwait
sbb
cmp
cmp
sbb
mov
cmp
xchg
pop
std
test
mov
pop
push
or
iret
xor
xor
sbb
test
jnp
adc
pop
cmc
pop
adc
xor
out
xchg
dec
sub
sbb
pop
ret
xchg
lds
push
into
aaa
je
iret
pop
aaa
adc
jp
cmps
adc
pop
cmp
out
push
sbb
and
mov
lahf
sbb
mov
cld
adc
xchg
sbb
sbb
es
std
fst
test
repnz
adc
inc
add
cmp
sar
push
jnp
and
cmp
add
mov
adc
sub
pop
sbb
xchg
mov
cmp
jns
and
adc
aaa
jecxz
scas
sbb
or
div
clc
and
add
iret
repz
dec
xor
rol
dec
sahf
inc
pop
or
mov
inc
ins
aas
aaa
or
das
sbb
xor
mov
sbb
(bad)
add
pop
or
iret
push
jns
or
or
and
or
add
xor
and
or
lahf
mov
aam
or
mov
pop
fbstp
test
out
mov
cmp
cmp
adc
jo
test
dec
pop
popf
lock
xor
adc
and
sub
cmp
repz
xchg
inc
adc
cmp
inc
repnz
sub
mov
and
jns
out
xchg
xor
push
in
rcr
add
test
jns
push
add
and
lods
jns
addr16
cmp
es
sar
fwait
cmps
jne
push
ror
xchg
lods
add
adc
jno
loop
or
xor
sar
sbb
sub
and
sti
in
cwde
or
es
ds
sbb
adc
mov
mov
ss
pop
push
nop
ret
cmp
sbb
cmp
pop
test
popf
add
cwde
retf
add
cmovae
pop
adc
adc
or
xor
or
sbb
push
dec
(bad)
shr
cmp
add
popa
pop
mov
stos
or
sahf
test
setae
psllw
mov
dec
push
mov
push
test
xchg
test
inc
sti
or
arpl
jecxz
sti
fbld
pop
or
or
cmc
sbb
cmp
xor
dec
push
add
xor
mov
push
popf
or
adc
or
jb
aas
pop
sbb
aaa
sahf
or
mov
rcl
mov
or
sbb
push
sub
xchg
fwait
adc
push
add
xchg
out
xor
mov
add
and
ror
and
add
or
in
adc
sub
inc
dec
pop
inc
push
ret
jns
and
sbb
in
or
mov
add
pusha
ja
js
and
push
add
mov
ja
jo
sub
dec
addr16
pop
xchg
sbb
push
push
aam
stos
cmp
cmove
test
push
cmps
mov
mov
fsubr
inc
mov
aaa
inc
inc
and
imul
jmp
lods
pop
repz
xchg
and
adc
inc
dec
enter
sub
cmc
adc
enter
sbb
or
dec
xor
adc
test
jb
imul
outs
sub
mov
push
jae
adc
test
or
xor
adc
pmulhw
and
cs
mov
adc
popf
mov
xor
nop
adc
push
sub
xlat
leave
or
sub
cmps
jb
sub
or
inc
add
adc
out
iret
rol
sbb
cwde
nop
int3
push
jp
and
xor
adc
add
or
jno
add
add
pop
das
and
inc
push
stc
sub
jle
fsubr
xchg
add
adc
sbb
dec
popa
sub
push
jns
push
mov
test
cmp
dec
or
dec
aad
pop
pop
les
hlt
inc
lds
push
arpl
or
ss
and
inc
or
xor
adc
or
das
out
or
mov
xor
pop
dec
sahf
cmps
repnz
pop
and
adc
and
mov
repnz
xor
add
adc
add
mov
imul
cmp
pop
and
add
xchg
xchg
int3
xchg
or
inc
and
lock
cmps
pop
sbb
adc
rol
pop
rcl
xchg
popa
pop
lds
mov
and
rcl
push
fs
sahf
out
sbb
adc
ins
test
mov
jo
and
add
pop
retf
hlt
rol
iret
jmp
push
(bad)
sub
jns
sbb
adc
mov
jae
or
rol
mov
adc
aaa
sub
sbb
sub
adc
imul
pop
ja
outs
jmp
(bad)
repnz
push
dec
adc
fs
in
xor
es
adc
test
cs
inc
popa
jnp
nop
add
pusha
pop
lahf
adc
jmp
(bad)
or
or
shr
stos
inc
pusha
jge
loop
adc
adc
add
lock
or
aas
adc
dec
stos
test
loop
dec
popa
push
push
fcom
jae
sahf
out
dec
push
adc
pop
xor
stc
arpl
cmp
mov
shl
inc
mov
jmp
push
or
inc
sbb
in
mov
inc
add
inc
pop
ja
aas
mov
inc
les
xchg
pop
cmp
and
nop
(bad)
arpl
add
add
mov
imul
pop
sahf
or
or
pop
jns
lods
push
mov
xor
in
and
bound
jl
sbb
inc
pop
shl
inc
inc
and
jns
out
pop
push
sub
dec
inc
cs
or
or
sub
jne
ret
sbb
or
aaa
inc
push
mov
fs
and
test
push
and
add
jge
adc
or
push
lea
adc
sub
inc
jb
sbb
xchg
and
sbb
outs
and
mov
mov
add
mov
or
mov
mov
xor
sbb
and
bound
xlat
dec
xor
dec
mov
rcr
or
add
ja
and
fs
and
push
mov
into
jo
dec
add
mov
popa
and
mov
aam
sbb
inc
es
push
jmp
sub
dec
loop
add
sbb
push
push
dec
out
adc
movs
push
cmp
sbb
sub
add
or
pop
add
inc
aaa
push
push
adc
sahf
bound
xor
inc
and
jns
test
adc
xchg
or
inc
rol
add
push
jg
cmp
mov
jl
xor
adc
jmp
dec
dec
xchg
inc
js
pop
ret
mov
les
mov
sbb
or
add
ds
xor
(bad)
adc
mov
pop
hlt
push
ins
adc
sub
jo
fidivr
xor
lods
int3
inc
fwait
int
sbb
add
jns
sub
pop
data16
xor
or
xchg
ret
pop
jmp
dec
fcomp
in
sub
pop
push
or
jg
mov
xor
pop
nop
(bad)
mov
jg
outs
rcr
cmp
mov
push
repz
xor
addr16
test
daa
sub
mov
icebp
mov
add
aas
cwde
or
das
test
push
push
cmp
adc
sahf
imul
(bad)
dec
sbb
push
add
test
sub
mov
push
adc
cmps
mov
push
jg
out
jmp
adc
xor
inc
inc
or
jns
mov
movs
or
sub
sbb
lds
or
sbb
imul
adc
push
push
dec
out
xor
push
stos
add
push
adc
sbb
sbb
cwde
push
jo
cs
push
shl
inc
or
test
dec
aaa
sbb
aas
inc
popf
push
mov
adc
add
popa
cmp
invlpg
sahf
cmps
repnz
imul
movs
xchg
xor
dec
adc
lea
or
cs
mov
pop
jnp
inc
pop
sbb
repnz
adc
sub
adc
xor
adc
enter
xchg
sbb
test
xchg
mov
cwde
sub
sbb
or
das
xor
sbb
and
iret
repz
cmp
or
cmps
sbb
mov
push
inc
and
add
push
ret
and
push
inc
mov
xchg
mov
pop
xor
mov
and
adc
xchg
inc
mov
xor
pop
cld
movs
cmp
adc
cli
push
je
pop
mov
call
sbb
add
adc
adc
sub
xor
inc
add
xchg
pop
or
popa
jmp
retf
pop
or
shr
add
sahf
xchg
mov
adc
push
push
in
cdq
xor
ret
add
or
je
rol
inc
inc
or
ins
ret
ja
pop
ret
or
push
inc
dec
add
add
sbb
or
cmps
mov
sbb
adc
add
xor
ss
push
inc
and
aam
sahf
out
push
daa
or
lods
inc
push
sbb
aaa
jmp
push
cmc
inc
pushf
mov
or
mov
daa
push
sbb
sbb
or
das
sub
or
add
add
sub
push
push
and
adc
out
fisubr
and
sbb
or
mov
jl
cmp
cmp
dec
or
dec
sbb
and
lea
xchg
jmp
cmp
jp
and
sbb
add
mov
cwde
add
pop
sub
sub
or
lahf
ins
pop
xor
xchg
pop
stos
mov
add
jns
and
inc
test
xor
inc
les
jns
outs
ret
aaa
xchg
and
jns
aas
popa
jns
or
xchg
xchg
pop
or
mov
and
xchg
mov
push
adc
in
dec
sub
lea
push
adc
fwait
ret
adc
push
ret
inc
loope
enter
pop
add
cmp
lea
cmps
add
adc
add
xchg
je
das
icebp
add
add
fwait
dec
and
fist
adc
cmp
adc
nop
mov
sub
stc
sub
jb
add
les
gs
and
dec
or
inc
xchg
cmps
jb
(bad)
pop
dec
sbb
adc
inc
sub
call
cmp
pop
fild
adc
jno
add
in
cld
push
mov
push
or
adc
jns
cmp
test
sbb
push
jmp
jae
call
or
xor
mov
sbb
enter
or
popf
xor
sbb
inc
xor
sub
sahf
out
push
cmp
xor
sbb
xchg
mov
sahf
retf
add
mov
mov
pop
lahf
cmp
out
add
jnp
push
cmp
or
jns
sbb
jno
add
add
(bad)
xchg
call
cmp
pop
scas
and
xchg
pop
and
fxch
int
mov
or
mov
daa
add
jo
mov
cmp
mov
sti
push
push
scas
or
adc
pop
sub
ins
call
and
inc
and
xchg
pop
jbe
mov
test
fwait
dec
psubsw
xor
push
repnz
add
popa
xor
popa
add
dec
out
mov
push
daa
xor
nop
add
add
mov
add
inc
mov
cmc
sbb
test
inc
sahf
out
sub
jae
mov
or
in
sub
sbb
mov
retf
rol
push
mov
(bad)
(bad)
fs
and
push
add
push
xor
xchg
out
add
in
movs
outs
mov
(bad)
stos
mov
popf
and
sbb
and
nop
mov
sahf
dec
shl
mov
test
adc
adc
mul
pop
mov
add
pop
add
pop
push
or
bound
xchg
sbb
pop
xchg
xchg
out
push
dec
pop
(bad)
cmp
sbb
daa
ror
les
and
push
lahf
dec
popa
test
loope
mov
pop
shr
rcr
bound
xchg
mov
cmp
cld
and
loope
jnp
test
dec
popa
jns
add
stos
shr
scas
in
push
mov
xor
movs
or
jg
or
xor
adc
pop
or
movs
push
add
dec
pop
cs
xor
or
nop
dec
lds
adc
or
mov
inc
pushf
cmp
adc
or
add
cwde
scas
les
cmp
stos
adc
mov
adc
and
test
sub
jno
mov
pop
das
add
daa
icebp
(bad)
movs
movs
jne
dec
or
adc
pop
or
mov
or
or
jns
mov
and
dec
pop
and
cmp
pushf
add
scas
arpl
mov
adc
or
inc
and
pop
out
iret
ror
out
call
pop
mov
nop
cmp
lahf
lods
call
xchg
repz
mov
cmp
pop
jl
cmp
mov
rol
dec
outs
bound
inc
out
out
sahf
pop
pop
sbb
es
daa
test
mov
sbb
test
std
push
pop
xor
jp
push
push
add
pop
xor
pop
shl
iret
sbb
sub
repz
mov
clc
xchg
push
loop
cdq
jne
inc
mov
es
inc
in
add
stc
xor
int
dec
in
xchg
mov
sbb
push
cmp
adc
dec
cmp
(bad)
adc
push
xor
jns
or
scas
out
xchg
cmp
push
or
nop
cmp
push
or
xchg
inc
xor
jns
bound
push
xor
sub
xchg
test
nop
inc
xor
shl
iret
jae
dec
or
add
adc
inc
sahf
cmps
repnz
adc
sub
adc
sti
xchg
and
shl
icebp
je
and
dec
push
repnz
xchg
(bad)
popa
adc
adc
and
repnz
xor
xchg
sub
pop
jb
rcr
adc
fadd
popa
out
cmp
test
pop
mov
test
cmp
in
add
or
inc
pop
cmp
loop
rcl
cli
ret
inc
xor
adc
jp
mov
xor
and
xor
adc
je
lds
jo
jg
or
sbb
adc
lea
cmp
and
xor
sub
or
ror
pop
adc
ss
sar
fnstcw
mov
fisttp
loope
xchg
out
les
ror
fisttp
push
arpl
mov
xchg
adc
push
out
enter
pop
push
movlps
ins
int
or
aas
or
xchg
xchg
fsub
inc
or
aad
cmp
or
and
adc
js
mov
mov
or
sub
jge
enter
and
xor
add
xchg
sbb
cmp
shr
add
jae
fwait
les
xor
enter
pop
mov
add
jns
(bad)
mov
sbb
sar
jns
cmps
sub
ss
retf
jb
push
dec
mov
xchg
pop
adc
or
into
cmp
enter
and
dec
test
or
mov
cmps
repnz
aaa
add
or
add
icebp
cmps
jns
out
jae
mov
adc
cmps
je
inc
jne
gs
in
mov
push
test
xor
or
lahf
jns
loope
iret
and
push
and
adc
add
inc
aad
xchg
adc
and
ja
sbb
loop
sbb
mov
sub
imul
xchg
inc
or
jb
sbb
and
nop
out
mov
lea
repnz
sbb
je
pop
adc
and
add
or
mov
push
push
repnz
pop
test
iret
jae
mov
xor
add
test
pop
sub
push
ja
rcr
ret
cld
aam
xor
pusha
add
das
adc
(bad)
fadd
in
daa
inc
and
and
or
mov
or
into
adc
lahf
mov
push
xor
mov
xor
pop
pop
push
fisub
add
mov
rcl
add
sbb
and
inc
dec
sbb
add
add
inc
fs
outs
sbb
daa
xchg
popa
sub
sub
retf
sbb
and
inc
repnz
shl
mov
pop
add
and
mov
repz
dec
inc
or
repz
adc
xor
in
dec
enter
or
adc
push
or
add
push
aaa
addr16
repz
add
pop
pop
add
jo
xor
pop
in
sbb
sub
ret
or
and
sub
repz
add
test
in
cld
cmps
in
push
inc
adc
inc
sbb
rol
xor
adc
mov
mov
xor
or
add
repz
aad
or
imul
pop
aaa
or
icebp
int3
dec
lods
xlat
push
jno
sbb
sbb
push
dec
and
add
inc
cmp
and
les
xchg
push
xchg
push
cdq
shr
mov
scas
ds
add
outs
pop
mov
stos
dec
mov
dec
sbb
ret
xchg
cmp
cmp
mov
test
lods
sub
or
jno
sub
ja
ret
jae
add
mov
retf
das
imul
or
pop
test
adc
pop
and
icebp
jb
cwde
push
inc
cmp
xchg
inc
imul
pop
jno
outs
test
jo
mov
ror
xor
dec
adc
inc
dec
cmp
mov
movs
and
mov
adc
pop
dec
xlat
cmp
inc
sub
rol
and
xchg
cld
xchg
xchg
lods
or
daa
pop
mov
cmp
adc
cmc
mov
into
repz
pop
iret
inc
cmps
repnz
cmps
push
pop
xor
add
sbb
stos
jno
aam
inc
imul
repnz
sub
jae
push
push
and
add
iret
or
or
repz
cmp
gs
test
and
loop
dec
sbb
push
dec
sub
iret
mov
inc
mov
sub
adc
cmp
daa
jb
stos
add
ror
popa
nop
push
push
sbb
jmp
iret
repz
mov
or
cwde
pop
dec
enter
pop
lock
pusha
inc
call
fwait
adc
and
jae
cmp
xor
and
xchg
sbb
loope
pop
xor
xor
clts
cmp
or
inc
sbb
xchg
sub
mov
pop
les
sbb
lds
jns
outs
push
daa
and
sub
test
adc
mov
popa
in
call
out
mov
sub
das
pop
sbb
mov
and
iret
repz
jmp
and
and
(bad)
dec
xchg
sbb
push
xor
mov
xor
pop
sub
jb
or
push
aam
push
sub
dec
cmp
sub
add
sbb
retf
punpckhbw
push
fistp
imul
ror
add
stos
test
jae
adc
dec
adc
fnstenv
push
pop
ret
inc
add
add
adc
es
pop
or
les
test
xchg
jl
scas
or
and
and
or
ins
sbb
mov
mov
add
dec
jge
jmp
dec
imul
add
dec
rol
daa
inc
cmp
mov
jbe
mov
ins
add
into
lds
xor
call
add
add
jno
push
sbb
test
int
add
repz
or
adc
cmp
and
inc
mov
pop
push
or
cmp
or
and
adc
push
movs
push
add
or
arpl
xchg
repz
add
mov
mov
daa
iret
push
sub
ins
and
pop
aaa
sti
sbb
adc
xor
sub
mov
aas
mov
int3
sbb
aad
or
imul
movs
fwait
adc
or
aas
lea
test
movs
xor
psrlq
mov
imul
push
lods
sbb
cmp
imul
mov
pop
fwait
cwde
sbb
push
cmp
xchg
into
dec
pop
cmp
xor
repz
cmps
push
push
adc
ror
enter
mov
add
adc
push
popa
xchg
pushf
adc
adc
pcmpeqw
loop
or
les
sub
inc
and
repnz
dec
ss
pop
sbb
test
call
add
sbb
and
sbb
adc
out
dec
rcr
inc
sub
cmp
pop
xor
(bad)
mov
pop
les
sahf
cmp
pop
and
push
pop
repnz
adc
or
push
or
je
jno
out
ret
add
jae
inc
sahf
sub
test
or
adc
cwde
adc
jmp
jae
out
push
sbb
xor
mov
repnz
dec
and
or
adc
sub
pushf
cmp
rcr
push
cvttps2pi
push
push
xchg
xchg
daa
and
add
and
js
mov
push
xor
and
or
dec
enter
push
cdq
adc
xor
retf
leave
pshufw
xor
xor
lock
or
add
jmp
add
cmp
sub
sbb
movs
add
jns
add
popa
and
jae
xchg
push
aaa
sbb
adc
or
sbb
jl
and
xchg
je
dec
and
jne
jbe
imul
sbb
jo
mov
popf
sub
xor
out
and
data16
pop
or
sbb
cs
pop
repnz
arpl
pop
and
xchg
cmps
adc
add
xchg
add
mov
xchg
sbb
mov
xor
add
add
add
mov
test
push
xchg
icebp
dec
adc
sub
ret
jno
xor
loopne
pop
jb
dec
pop
or
inc
add
jns
cmps
and
das
push
adc
sbb
and
lea
mov
dec
in
outs
dec
mov
jo
cmp
cmp
sub
inc
adc
cmp
test
pop
adc
in
adc
dec
push
frstor
jae
or
sbb
adc
or
outs
add
jg
loope
add
test
cwde
push
push
and
or
mov
in
ror
imul
mov
aaa
add
cmp
fistp
daa
arpl
add
mov
adc
test
dec
xor
cmp
adc
lahf
push
push
jb
or
dec
sbb
mov
jno
push
cmp
jns
addr16
jno
push
jb
outs
lea
in
rcl
call
repnz
add
adc
xchg
(bad)
or
cmc
and
mov
jp
inc
adc
or
dec
mov
adc
leave
xor
mov
add
iret
inc
jmp
mov
shl
xor
jns
out
dec
gs
push
mov
push
or
ins
add
(bad)
sub
and
rcr
mov
dec
sahf
adc
jmp
into
dec
xchg
out
iret
and
rol
and
sar
fst
adc
dec
and
push
(bad)
lds
add
dec
movs
cs
pop
adc
push
mov
pop
in
es
and
gs
or
inc
push
popf
dec
inc
cmps
sahf
add
inc
dec
jns
inc
jge
rcl
cmp
or
add
push
aad
sbb
sbb
(bad)
sahf
jmp
mov
add
cmp
jns
sub
das
cmp
or
adc
adc
mov
sti
or
or
add
dec
pop
leave
sbb
sbb
out
sbb
(bad)
mov
sahf
cmps
dec
add
test
jns
jg
adc
xor
and
sbb
ins
cmp
mov
rol
sub
sbb
adc
dec
imul
cmp
repz
or
mov
lods
(bad)
mov
jae
cmps
or
stos
xchg
icebp
call
adc
rol
push
les
push
aaa
adc
pop
sub
ret
or
mov
sbb
aas
push
and
(bad)
movs
pop
pop
ss
cwde
adc
fbstp
out
cs
add
dec
add
sbb
xchg
fwait
inc
daa
dec
xchg
out
fiadd
push
add
adc
iret
xchg
mov
imul
xor
mov
fs
pop
iret
dec
or
adc
aaa
jmp
pop
add
or
cwde
in
add
inc
xchg
push
pop
stos
pop
xor
or
hlt
or
inc
add
outs
arpl
movs
push
test
add
nop
add
mov
dec
or
retf
xor
movs
sub
xor
xchg
or
sub
xchg
adc
dec
push
dec
mov
cmc
nop
dec
in
mov
pop
ret
add
sahf
repz
and
and
dec
push
jno
dec
inc
sub
ja
sub
xor
shl
mov
push
dec
xor
test
and
jl
push
cmp
iret
push
(bad)
mov
inc
adc
sub
push
ss
sub
dec
pop
xchg
pop
push
cmps
dec
movs
xchg
out
inc
std
jno
push
dec
rcr
sbb
outs
sub
cmps
sub
arpl
repz
push
push
jo
cdq
les
das
mov
addr16
push
xor
mov
inc
cmp
(bad)
mov
jno
mov
sbb
cmps
xchg
cmps
dec
repz
stos
add
and
mov
jns
stc
and
push
or
popa
nop
out
add
add
mov
dec
mov
dec
add
xor
movs
imul
or
pushf
out
add
sub
mov
push
sbb
jecxz
push
add
xor
pop
jl
dec
pop
mov
bound
xchg
cmp
pop
xor
sub
sbb
add
add
mov
dec
xor
mov
pop
mov
out
cs
sbb
cmp
jge
daa
or
adc
inc
add
gs
push
test
pop
add
mov
imul
dec
push
mov
retf
jne
out
dec
addr16
add
ret
in
test
loope
xchg
adc
pop
push
cmp
dec
and
adc
adc
sbb
add
jo
push
mov
stos
mov
imul
push
cmp
sbb
cmps
je
stos
out
je
cmp
movs
sbb
push
imul
iret
xchg
sahf
add
xchg
and
add
cmp
inc
fdiv
add
xor
pop
pop
and
test
sub
mov
and
pop
dec
pop
ret
leave
leave
and
pop
sub
jno
scas
add
aas
bound
daa
cmp
adc
or
push
or
in
out
sbb
pop
pop
push
inc
scas
xor
cmps
and
mov
retf
mov
xchg
cmp
scas
dec
add
outs
cmp
or
inc
mov
sbb
adc
add
cmp
jbe
imul
and
xlat
and
bswap
mov
nop
adc
sbb
loope
sub
dec
add
pusha
cmps
mov
dec
dec
sub
jmp
adc
and
and
or
stos
adc
cmp
xor
mov
xor
and
(bad)
mov
sub
jnp
test
adc
xchg
cmp
into
adc
inc
enter
movs
push
dec
xchg
daa
adc
or
or
mov
(bad)
arpl
fisub
inc
add
inc
xor
cmc
jns
retf
sbb
adc
movs
mov
add
fisub
add
movs
jmp
push
push
xor
iret
sub
push
ins
cwde
inc
adc
or
lds
loop
mov
jns
mov
add
adc
xlat
xor
les
adc
or
or
mov
es
xor
push
or
mov
pop
xchg
aam
pop
xchg
popa
and
cmp
sub
jae
push
in
add
xor
pop
daa
or
pop
sub
iret
and
inc
add
inc
adc
lea
cmps
or
adc
movs
pop
jno
mov
jbe
fs
add
mov
pop
inc
xchg
mov
mov
pop
retf
call
pop
dec
add
jne
rol
inc
imul
pop
sbb
stc
inc
loop
xchg
rcr
or
and
inc
mov
and
or
pop
outs
ret
push
adc
jbe
dec
arpl
and
mov
lods
inc
dec
pop
aaa
xor
inc
cmps
ja
jns
inc
sub
or
jns
test
inc
and
push
inc
or
xor
lods
sub
pop
sbb
(bad)
cs
xchg
add
push
inc
in
sahf
xchg
std
cmp
adc
adc
sbb
mov
ror
mov
adc
stos
and
pop
xor
mov
push
xor
xchg
pushf
cmp
es
sahf
add
adc
adc
push
ror
movs
jb
pusha
inc
mov
or
pop
jmp
pop
push
das
cmps
mov
in
stc
and
pushf
fsubr
adc
sub
nop
ss
jmp
or
retf
dec
(bad)
adc
arpl
add
cli
pop
sub
add
repnz
sbb
dec
sbb
mov
aaa
and
sub
sub
push
adc
jns
cmps
nop
jno
inc
pop
in
pushf
out
and
push
dec
in
dec
femms
cmp
and
cmp
imul
or
add
jns
mov
xchg
push
mov
mov
stc
sar
xor
sti
ja
scas
sub
sub
cmp
loopne
(bad)
test
es
cdq
cwde
nop
push
sbb
pop
or
cmp
daa
lahf
pop
xor
sbb
mov
mov
mov
sub
adc
mov
pshufw
imul
test
cli
cs
jge
xchg
mov
stos
inc
bound
ja
sar
dec
cli
mov
pop
shl
pusha
or
and
cld
ror
sub
push
sbb
push
int3
sub
cs
ins
inc
dec
ror
sub
pop
pusha
dec
xor
cmp
jae
add
adc
adc
scas
pop
and
shl
jo
sbb
or
pop
mov
or
pop
inc
mov
jne
xor
sub
or
or
push
dec
js
push
cmp
push
push
rol
or
adc
ret
mov
cmp
and
pop
repnz
sbb
repnz
lods
inc
ror
mov
xor
mov
mov
test
je
or
xor
sbb
adc
cmps
arpl
dec
or
and
inc
push
test
jb
cdq
push
aam
add
mov
xchg
bound
and
mov
push
add
out
sahf
addr16
pop
aas
add
cwde
mov
sbb
xor
push
jae
or
inc
add
sub
inc
or
inc
sahf
repz
mov
mov
mov
daa
adc
dec
and
sahf
push
sbb
lock
cs
(bad)
sbb
or
sub
or
jno
or
mov
xchg
inc
mov
int
inc
sub
dec
add
or
and
adc
lea
sbb
mov
aaa
imul
and
cdq
mov
add
mov
rol
sub
and
pop
xchg
iret
jae
imul
mov
fs
add
outs
sbb
nop
dec
mov
and
test
lods
sub
and
dec
loope
add
dec
call
int
and
mov
inc
in
and
mov
jle
sbb
mov
push
loopne
mov
adc
cmp
push
je
pop
nop
sahf
fs
jns
cs
xchg
sbb
add
inc
mov
das
adc
pop
mov
push
leave
sbb
aas
push
and
add
add
pop
push
inc
sar
adc
imul
xchg
or
and
mov
and
dec
in
jecxz
or
enter
sahf
retf
pop
and
mov
dec
stc
je
adc
cmc
sbb
xor
popf
lock
repnz
dec
push
or
adc
inc
push
xor
cmp
cwde
cmp
sbb
push
loopne
add
int3
cmc
lods
push
jge
xchg
stos
or
xor
jmp
push
push
xchg
sub
cmp
enter
pop
add
lods
sbb
out
leave
ror
add
adc
adc
in
add
inc
add
add
adc
repz
ds
and
repnz
adc
or
sub
xchg
sub
gs
dec
arpl
imul
cmp
les
scas
add
add
shl
(bad)
les
inc
xor
push
iret
repz
out
movups
(bad)
enter
cdq
rcr
(bad)
push
xchg
jnp
sbb
xchg
retf
addr16
or
mov
mov
sahf
out
pop
cmp
and
arpl
push
sub
inc
xor
imul
shr
lea
add
repnz
fcom
es
add
inc
pop
icebp
dec
aam
lea
loope
sahf
out
push
sbb
mov
dec
add
mov
sub
and
or
mov
mov
adc
jge
ret
push
adc
sbb
iret
imul
dec
bound
mov
or
mov
inc
or
in
mov
scas
xchg
retf
arpl
add
sub
inc
jmp
dec
arpl
cmp
enter
push
adc
jmp
push
(bad)
adc
pop
xor
enter
or
push
add
xchg
pop
adc
sbb
aam
pop
popa
sbb
sbb
dec
or
mov
jno
add
sub
cmp
push
xor
sti
or
sbb
sub
movs
push
jb
ss
adc
in
sub
xor
movs
cmp
add
or
ins
jnp
pop
popa
or
out
add
add
sub
adc
dec
dec
sahf
sbb
cmp
fadd
gs
push
inc
or
call
push
mov
sbb
adc
xchg
out
pop
bound
dec
repnz
dec
mov
rol
adc
cmp
dec
or
inc
dec
and
repz
or
inc
outs
adc
dec
dec
aad
add
dec
add
mov
pop
add
bound
cmp
push
(bad)
and
inc
scas
sbb
push
adc
add
movs
inc
add
add
and
push
gs
gs
or
cmp
(bad)
fcmovnb
fimul
fimul
adc
pop
sbb
xchg
inc
(bad)
outs
adc
add
or
sub
ret
pop
outs
mov
sbb
out
xchg
es
inc
daa
mov
pop
addr16
add
ss
pop
or
or
not
jo
xchg
add
jnp
pop
repnz
pop
(bad)
test
adc
pop
cmp
fadd
pop
add
pop
and
(bad)
xor
outs
xor
leave
repz
pop
ror
pop
sub
sub
outs
mov
jecxz
add
jle
mov
dec
push
cmp
jo
pop
or
cmp
or
or
lahf
cmp
and
jl
sub
dec
sub
and
inc
jae
rol
push
push
repz
xchg
xchg
test
test
add
xchg
jge
push
mov
fdivr
mov
test
sub
xchg
push
inc
dec
das
sbb
inc
sub
pop
mul
mov
out
sbb
add
or
popf
sub
jae
add
xor
popa
test
xor
enter
lds
inc
sub
adc
inc
inc
sbb
(bad)
adc
sahf
and
ins
jl
call
mov
dec
and
movs
aad
lods
sub
inc
sub
add
cmp
cmp
(bad)
leave
enter
jmp
ret
adc
fadd
dec
dec
sahf
out
inc
pop
adc
inc
add
pop
retf
push
cmp
and
inc
mov
xor
test
out
(bad)
jge
popa
mov
lods
in
adc
or
sub
lock
xchg
adc
push
sbb
pop
add
sbb
or
xor
push
movs
mov
dec
push
adc
xor
cmc
cmp
cmp
test
jno
add
rol
sub
sbb
push
adc
add
test
dec
sbb
das
les
push
stos
jmp
mov
repz
and
mov
arpl
xchg
arpl
cmps
or
pop
xor
and
mov
in
dec
stos
shr
adc
mov
nop
adc
jmp
mov
adc
add
jns
dec
repnz
add
in
push
pop
and
inc
and
dec
jno
dec
adc
aas
jg
les
pop
fiadd
rcl
stos
adc
adc
mov
daa
jb
mov
push
rol
cmp
ds
sbb
fnsave
adc
cmovns
add
or
daa
add
unpcklps
es
or
or
jmp
mov
adc
and
ror
xor
or
dec
and
test
adc
lahf
sbb
xchg
sbb
add
inc
fist
or
mov
aam
sub
sub
lds
pop
and
test
sub
fs
lock
mov
and
pop
and
pop
ror
aaa
adc
jns
sub
or
inc
pop
and
sbb
mov
cmps
repz
add
cmp
enter
push
pop
ins
mov
enter
sub
jecxz
or
mov
sbb
iret
repz
adc
fldenv
jecxz
or
inc
retf
cmp
adc
cmps
push
repz
sbb
fisttp
lods
adc
and
add
mov
mov
add
or
test
or
push
jl
test
add
adc
pushf
jecxz
push
jns
add
add
inc
test
xchg
fs
(bad)
mov
shl
sub
or
add
popa
or
iret
jae
cmp
add
dec
xor
dec
and
rcr
inc
ins
mov
add
pop
lds
dec
xchg
lea
jl
int
jae
repnz
dec
dec
or
fwait
jns
rol
jns
out
inc
adc
imul
sub
jns
add
mov
adc
xor
pop
out
aam
pop
push
sahf
adc
mov
pop
hlt
xchg
test
dec
test
pop
adc
adc
inc
dec
add
xchg
sbb
or
and
repnz
sbb
mov
sahf
and
push
or
dec
adc
sbb
jmp
xor
push
cmp
mov
or
or
popf
jo
iret
push
pushf
outs
sbb
into
fwait
jne
xchg
pop
dec
xchg
mov
xor
add
adc
dec
sahf
out
mov
sbb
sbb
rcl
cmp
int3
cmp
sub
pusha
bound
in
sbb
xchg
ror
pusha
lds
rcl
int3
(bad)
add
repnz
sar
cmp
ret
or
ret
mov
jne
cmp
pop
mov
aaa
mov
test
jns
add
sbb
ins
or
outs
addr16
and
inc
push
or
cmp
minps
dec
push
(bad)
mov
xor
inc
out
xchg
sub
xor
dec
xchg
xchg
out
or
push
cmp
push
sub
add
add
or
cld
and
lahf
call
ret
inc
inc
and
popa
and
repz
sbb
sahf
jae
adc
repz
sahf
bound
pop
sbb
mov
fld
repnz
sbb
sbb
addr16
push
pop
mov
sbb
xchg
pop
dec
je
nop
sbb
shl
inc
test
dec
arpl
iret
repz
in
or
daa
fst
push
and
push
or
xor
dec
dec
adc
add
jns
or
or
cmp
adc
stos
mov
adc
and
push
push
and
mov
mov
pushf
add
mov
gs
daa
imul
pop
fdivr
add
xchg
das
or
rol
cwde
inc
push
inc
ret
sbb
jns
cmps
shl
cmp
dec
bound
mov
pop
or
mov
cmp
xor
popa
add
xchg
adc
sbb
stos
and
movs
daa
inc
xor
sbb
sbb
retf
xor
sbb
and
movs
push
mov
cmp
cmp
cmps
adc
adc
or
test
pop
shr
iret
repz
jne
es
nop
rol
xor
pop
and
xchg
dec
shl
sbb
or
movs
push
rcr
iret
push
sbb
sub
(bad)
fld
bound
sub
add
mov
dec
add
fs
adc
jb
pop
pushf
sbb
cmp
sbb
xor
adc
pop
push
icebp
xlat
sbb
loopne
mov
sahf
sub
pop
push
inc
pop
and
(bad)
or
sbb
and
push
jno
rol
ja
call
imul
sbb
and
xchg
push
inc
or
jmp
and
add
outs
clc
popf
xor
fild
stos
jg
js
jbe
adc
mov
mov
es
mov
test
jns
imul
sbb
adc
push
sub
iret
(bad)
cmp
mov
add
adc
mov
cmp
jns
push
addr16
dec
sub
mov
inc
pusha
mov
cwde
pop
sub
or
aaa
xchg
stc
adc
test
mov
dec
add
and
add
(bad)
pavgb
hlt
mov
out
inc
adc
cmp
xchg
imul
inc
lock
jo
lods
inc
dec
cmovp
es
push
adc
lea
mov
andnps
ds
daa
clc
push
icebp
fstp
add
dec
add
or
mov
jmp
repnz
cmp
pop
call
adc
jmp
push
or
push
adc
xchg
iret
and
rol
jo
jne
jg
sub
test
cwde
mov
adc
or
or
sahf
pop
adc
nop
push
or
xchg
or
or
sub
push
retf
jo
sub
cmp
push
aas
adc
stc
nop
pusha
dec
mov
jns
adc
cmps
xchg
xchg
out
sbb
scas
movs
sbb
mov
lds
mov
popa
dec
push
add
ret
xchg
cmp
push
sbb
mov
dec
imul
imul
or
push
and
in
sbb
movs
jb
push
or
push
or
out
and
or
les
nop
das
cmp
mov
push
push
push
and
sbb
inc
cs
dec
cmp
mov
out
(bad)
dec
or
xchg
adc
enter
pop
mov
in
push
imul
mov
addr16
add
pop
inc
adc
and
adc
xchg
or
into
push
data16
or
test
mov
xchg
xlat
xchg
movs
call
push
sbb
ret
packuswb
fcomp
cmp
or
mov
fdivrp
and
enter
pop
mov
push
mov
or
in
das
bswap
repz
or
sbb
rol
inc
dec
test
(bad)
adc
mov
shl
neg
cmps
push
xor
dec
cs
jns
lds
imul
adc
imul
cmps
nop
xor
add
cs
sub
cmps
fild
nop
xor
cmp
dec
mov
mov
adc
repz
adc
dec
arpl
leave
add
stc
ins
or
and
push
add
inc
jo
xchg
adc
sbb
repnz
pop
call
push
sub
sbb
add
cs
cmp
adc
mov
adc
xchg
add
xor
aad
cmp
sub
push
sbb
mov
enter
push
add
ret
adc
rol
sbb
pop
mov
enter
sahf
adc
bound
mov
fbstp
movs
jb
(bad)
pop
and
and
outs
sbb
adc
adc
adc
enter
mov
push
outs
sbb
lds
nop
adc
daa
add
push
add
pusha
repz
sub
ror
xchg
add
jae
pusha
pusha
mov
dec
mov
test
or
push
sbb
xor
jb
stos
or
ds
mov
add
mov
sbb
sub
inc
mov
push
or
jbe
sbb
int3
fdivr
or
xchg
icebp
or
adc
push
mov
push
sbb
repz
and
add
pop
sbb
movs
xor
jbe
or
jnp
sbb
mov
cmp
adc
pusha
and
or
repz
fidiv
sub
dec
sub
leave
dec
es
add
adc
add
sub
inc
sbb
movs
xor
adc
nop
and
or
push
dec
push
jno
adc
sub
mov
repnz
xchg
retf
mov
pop
ret
ret
sub
aad
add
dec
stos
inc
pop
cmp
xchg
dec
(bad)
dec
or
or
dec
sbb
dec
ja
les
aas
cmp
push
push
ror
and
adc
xchg
retf
jp
pop
jmp
sbb
xchg
or
test
adc
xchg
sbb
push
sub
sbb
pop
imul
outs
pop
pop
pop
inc
mov
xchg
adc
ins
add
xor
jge
pushf
int
jo
lods
inc
stc
loop
dec
ror
and
gs
pop
sbb
scas
inc
adc
push
repnz
add
inc
inc
imul
sahf
out
sbb
or
in
cmp
xchg
nop
push
push
ins
imul
xor
mov
aas
repnz
adc
adc
dec
sbb
mov
imul
push
push
test
push
shl
fld
(bad)
call
mov
cmp
pop
adc
arpl
imul
in
retf
xor
int3
adc
cmp
adc
(bad)
iret
repz
add
mov
pushf
cmp
xchg
rol
aaa
shl
inc
lock
dec
dec
mov
inc
mov
out
push
sbb
mov
loope
nop
push
xchg
mov
dec
pop
ins
pusha
or
or
addr16
jns
jmp
or
sbb
cdq
xor
or
mov
pop
cmps
popf
or
add
daa
sub
jns
repz
lods
lahf
je
mov
push
fisttp
arpl
enter
or
mov
xor
add
adc
cmp
add
rcl
scas
cmp
xchg
mov
or
and
sub
cmp
shr
sub
jecxz
or
out
mov
in
rol
inc
cmps
cli
xor
mov
fwait
sbb
add
lods
xchg
out
sbb
jb
sbb
and
and
pop
push
sub
stc
movs
cs
add
mov
nop
out
xor
leave
daa
add
inc
sbb
loopne
fst
dec
sbb
mov
xchg
gs
or
lods
imul
mov
stc
push
outs
pop
cs
enter
rcl
and
imul
out
and
add
loopne
inc
fld
fst
jbe
sbb
test
jbe
mov
test
push
rol
sbb
call
dec
in
inc
add
push
cwde
pop
aaa
nop
cmps
mov
xchg
ja
mov
xor
inc
sahf
jae
or
adc
push
repnz
add
sub
adc
inc
dec
dec
or
aaa
jns
cmps
pop
adc
imul
iret
int
xor
adc
(bad)
mov
or
stc
push
mov
mov
push
push
adc
add
pop
adc
out
lods
das
and
or
mov
xor
push
cmp
hlt
in
sub
push
inc
sbb
or
imul
jecxz
loope
mov
inc
mov
xor
into
push
mov
test
add
xchg
lock
shl
loopne
adc
push
sub
adc
add
cwde
mov
jae
add
adc
inc
adc
mov
adc
jo
mov
adc
cmp
or
fs
push
inc
sub
push
adc
adc
xor
mov
jns
lahf
add
popa
xchg
cwde
ins
pop
and
test
aaa
xor
and
xchg
nop
inc
pop
pop
add
mov
jae
cmp
jecxz
pusha
test
test
inc
xchg
add
and
mov
fnstcw
dec
sahf
retf
add
sub
enter
ror
sub
repnz
dec
cs
or
adc
or
in
mov
and
daa
xor
sbb
loope
leave
leave
repz
sbb
out
add
imul
xchg
mov
and
cmp
push
repnz
and
jns
add
xor
nop
daa
jnp
retf
mov
pop
sub
jns
push
add
add
mov
xchg
push
or
setb
in
inc
xchg
and
call
mov
cmp
sbb
cmp
or
add
mov
and
push
inc
jmp
add
nop
std
mov
push
mov
push
outs
imul
pop
and
shl
mov
jmp
pop
jb
pop
das
sub
or
push
ret
or
dec
xor
enter
das
mov
push
imul
imul
push
adc
fbld
add
or
jb
cmp
sbb
xchg
cs
and
sub
cs
sub
jns
adc
or
or
inc
fwait
data16
les
pop
pop
or
add
jns
mov
sub
add
xchg
scas
xchg
push
push
cmps
cs
xlat
dec
adc
push
pop
shr
les
inc
mov
jl
les
fstp
add
sbb
movs
mov
dec
mov
sbb
jne
ret
cmp
push
mov
repnz
and
or
dec
nop
cs
dec
daa
mov
jns
push
sbb
xor
repnz
aaa
xor
mov
xchg
pop
sbb
adc
xchg
xor
cmp
or
sub
repz
call
or
jb
inc
loopne
ds
sbb
xchg
cmps
adc
dec
and
xor
mov
lods
into
sbb
dec
loopne
out
adc
stos
and
inc
mov
push
sbb
cmp
push
sub
push
add
cmp
and
xor
xor
dec
sbb
and
mov
xchg
rcl
sbb
iret
mov
dec
sahf
movs
rcr
cmp
push
and
mov
or
xchg
cmps
dec
dec
sahf
out
or
sbb
mov
mov
pop
add
add
push
push
pop
aaa
and
sub
mov
sub
jno
imul
fild
jge
inc
test
push
adc
(bad)
fisttp
aaa
cmps
addr16
pop
dec
out
mov
jb
jle
icebp
inc
add
xor
inc
xor
add
and
test
or
jae
dec
movs
sbb
mov
dec
dec
pop
jne
rol
push
sbb
push
add
dec
add
test
popa
pop
movlps
mov
outs
xchg
jno
jne
jo
rol
movs
pop
lds
add
lds
data16
or
in
pushf
out
pop
aad
sbb
dec
cmp
add
sbb
adc
xor
cmps
or
xor
cmp
out
dec
call
or
jo
inc
daa
push
xor
sar
xor
add
pop
add
dec
add
sbb
dec
inc
xchg
adc
mov
or
jns
loopne
or
pop
xchg
mov
dec
cmp
add
inc
adc
xor
inc
iret
repz
add
add
xor
dec
in
pop
or
test
push
cmp
mov
cmp
cmc
mov
sub
imul
lds
pop
test
ins
inc
mov
push
ret
sub
les
dec
and
add
call
sub
mov
popf
mov
aaa
popa
mov
adc
jg
xor
call
push
inc
inc
or
push
adc
and
add
aam
sub
in
mov
add
mov
pop
mov
fcmovbe
sub
add
mov
ins
sub
outs
(bad)
or
dec
inc
push
push
es
dec
inc
jp
je
and
dec
enter
rcl
add
sub
dec
repnz
sub
es
and
repz
add
and
inc
push
jns
cs
jl
and
or
sub
aas
dec
push
sete
sub
or
or
adc
sbb
or
ret
and
cmp
pop
test
pusha
rcr
test
aas
push
adc
ins
dec
aaa
pushf
sbb
pop
psubusb
(bad)
jae
sbb
adc
call
or
cmps
dec
call
ret
or
fidivr
movs
movs
mov
push
push
inc
dec
fs
inc
in
xor
inc
aam
push
ret
xor
push
jns
movs
pop
sub
or
inc
enter
add
sahf
mov
adc
cmp
adc
push
pop
in
lods
sub
or
xor
cmp
xor
mov
dec
sub
or
dec
movs
and
jo
les
add
repnz
sbb
ins
add
in
in
add
xor
stos
push
adc
push
pop
movs
pop
xor
or
sahf
ds
nop
inc
dec
xor
xor
aaa
rcr
adc
push
push
pop
pop
(bad)
loope
push
aam
xor
mov
pop
sbb
cmp
dec
outs
add
ret
dec
adc
rol
sub
push
adc
retf
icebp
jp
or
dec
add
rsm
dec
popa
inc
add
fstp
push
mov
in
cmp
cwde
mov
es
aaa
es
mov
jns
xchg
and
mov
sub
xchg
xor
sti
sbb
inc
sub
add
iret
pop
cmp
adc
inc
ret
test
add
or
outs
repz
add
cdq
cmp
cmp
jecxz
push
dec
cmp
cmps
xchg
or
jns
add
out
inc
int3
(bad)
add
ret
sub
cmp
adc
scas
or
(bad)
leave
mov
adc
pop
push
inc
movs
push
loopne
enter
stos
xor
push
loopne
or
in
in
cmp
xchg
adc
into
leave
dec
add
sub
or
mov
dec
movs
jb
sbb
dec
mov
and
ret
or
fimul
or
(bad)
fstp
mov
adc
out
rol
inc
pop
mov
or
shr
cmp
mov
cmp
test
adc
sub
movs
out
iret
xor
sbb
xchg
and
nop
dec
sahf
push
ins
sbb
movs
push
add
aas
add
mov
stos
mov
sub
push
retf
rcl
dec
cmps
mov
shr
test
adc
sbb
sub
inc
inc
(bad)
xlat
leave
sub
mov
pushf
sbb
jo
adc
push
pop
dec
xor
test
nop
inc
sahf
pushf
push
sub
shr
inc
adc
mov
inc
(bad)
bound
dec
shl
xchg
cmps
xor
pop
or
push
test
push
inc
sbb
ins
pop
push
clc
and
stos
sub
or
mov
dec
les
scas
sub
(bad)
push
rcl
push
outs
leave
push
mov
add
sbb
mov
mov
inc
mov
mov
lods
sahf
sub
mov
movs
push
lds
push
pop
adc
xor
lahf
push
daa
or
sbb
(bad)
push
fcom
lods
or
push
mov
add
test
xor
and
test
jmp
ret
jns
xor
xchg
add
jmp
jb
add
pop
daa
mov
(bad)
fild
imul
sbb
dec
imul
cs
push
sbb
adc
adc
xchg
mov
jno
push
push
test
add
clc
mov
xchg
xchg
sub
push
sub
or
add
mov
adc
es
dec
push
movs
inc
or
jecxz
sub
pop
xchg
cmp
test
or
cwde
or
and
or
gs
jns
xchg
cmp
movs
in
cmp
adc
sub
push
fsub
push
adc
pushf
cmp
jae
sbb
add
stos
adc
dec
xor
push
sar
sbb
out
sbb
push
dec
dec
mov
test
(bad)
bound
mov
mov
outs
sbb
cmp
mov
es
or
sbb
test
test
imul
in
je
mov
mov
daa
pop
cmp
xor
aas
sbb
lds
dec
jo
jns
rol
pop
(bad)
add
dec
inc
sub
sbb
inc
lds
ret
out
add
jns
or
and
inc
add
push
xchg
mov
adc
xor
xor
sub
es
add
push
pop
test
cmp
jo
in
jl
adc
push
dec
xor
xchg
push
cmp
cmps
mov
mov
(bad)
or
nop
and
or
int3
xor
rcr
std
xchg
dec
inc
jle
inc
xor
outs
pop
and
test
adc
inc
dec
std
cmp
jge
add
mov
cmps
mov
xchg
imul
aaa
jg
mov
cmp
imul
mov
iret
repz
retf
or
push
add
aad
xchg
and
adc
or
and
push
mov
out
add
sbb
or
xor
aam
arpl
sbb
add
mov
push
icebp
sahf
out
fiadd
push
adc
add
sbb
add
add
add
(bad)
jbe
inc
mov
leave
pop
jo
sbb
mov
cmp
inc
ja
xor
xchg
cmp
pop
and
nop
xor
jae
inc
mov
repnz
repz
sbb
sbb
inc
les
mov
dec
dec
push
jo
xchg
aaa
push
pop
push
ins
add
sahf
outs
rcr
or
sbb
inc
dec
pusha
or
push
pop
outs
mov
test
les
jnp
push
and
or
adc
and
daa
pop
and
sub
shr
or
mov
pop
push
sub
push
push
mov
mov
push
cmp
jno
mov
pop
cmp
pop
mov
add
mov
adc
lahf
sub
shl
or
xchg
rcr
dec
mov
xor
adc
mov
fbld
add
add
sbb
xchg
je
les
and
adc
lea
movs
mov
jae
out
es
jb
jl
add
cmps
cmp
rcl
cs
in
mov
push
and
inc
lods
nop
shl
rol
jecxz
mov
adc
xchg
adc
pop
rol
cdq
jns
add
ja
sbb
adc
adc
mov
aaa
movs
test
iret
dec
daa
pusha
aam
push
sub
jb
cmp
sbb
daa
dec
xor
adc
lds
test
or
add
sub
adc
and
or
mov
dec
xchg
pusha
stos
inc
ret
sbb
movs
rol
and
add
and
and
dec
push
add
push
jge
ret
adc
repz
sahf
adc
dec
or
cmp
pop
sahf
jae
mov
and
push
or
push
add
push
leave
mov
out
enter
pop
add
cmp
xor
or
mov
sbb
pop
push
jo
inc
add
sbb
sbb
pop
aas
das
xor
jbe
nop
adc
outs
sub
adc
sahf
jl
adc
adc
mov
jns
and
ins
sbb
or
nop
addr16
test
shl
mov
inc
rcl
dec
add
sub
iret
imul
iret
sbb
pop
xadd
cs
adc
dec
pop
push
shr
dec
nop
out
ds
or
add
mov
pop
dec
add
and
push
cmp
or
movs
repz
enter
cmp
out
pop
sahf
shr
adc
in
cmp
prefetcht0
out
mov
cmp
das
xor
iret
jns
mov
dec
loopne
xchg
and
inc
and
or
sub
inc
add
mov
add
ds
mov
sub
cmp
jecxz
pop
push
mov
pop
dec
fxch
movs
adc
pop
add
fnstenv
ins
add
cs
and
aaa
cmp
shr
sub
or
dec
rcl
lods
sub
adc
mov
in
dec
arpl
and
adc
push
nop
and
add
dec
lods
sub
cmp
inc
test
daa
fmulp
sub
add
std
push
or
jo
icebp
and
lods
inc
das
iret
repz
dec
mov
mov
mov
in
and
push
or
ret
and
les
sbb
cmp
or
out
xor
xor
test
mov
data16
sbb
add
and
repz
add
add
out
ja
xor
aas
outs
aad
or
or
xor
and
xor
cs
rcr
add
add
repnz
mov
mov
xchg
sub
cmp
add
cmp
and
adc
and
add
sbb
popa
sub
cs
sahf
adc
ds
les
dec
sub
cmp
xchg
push
push
(bad)
sub
pusha
rcr
test
push
rol
sahf
cmps
mov
sbb
add
cmps
ins
sub
mov
ret
dec
dec
xchg
movs
xchg
gs
mov
dec
mov
jae
add
mov
cmp
and
xor
pop
pop
in
shl
adc
mov
test
rcr
ret
add
sub
jae
xor
cwde
dec
cmp
or
xchg
inc
adc
pop
pop
inc
or
push
jns
and
cmc
and
out
add
sbb
mov
lahf
movs
fnop
dec
dec
xchg
pop
dec
icebp
add
retf
ror
add
push
nop
pop
jb
fldenv
dec
sbb
mov
(bad)
xchg
push
scas
or
add
repnz
adc
and
add
mov
sub
arpl
inc
mov
push
lods
call
cdq
mov
adc
aam
sub
addr16
add
cmps
in
inc
pop
push
inc
xchg
mov
sbb
adc
adc
inc
add
cdq
dec
sbb
adc
cmp
mov
cmp
inc
adc
or
jg
mov
repz
mov
xor
mov
movs
jb
sbb
sub
sbb
cmp
popf
sbb
shl
pop
fild
or
test
mov
and
nop
out
sbb
dec
dec
aad
or
push
push
pop
loopne
out
adc
jae
jae
dec
jp
sub
or
or
test
jge
enter
popa
push
jns
mov
cli
push
stos
jae
mov
sbb
or
pop
push
sub
cs
add
mov
or
push
lods
fucom
sub
test
adc
ss
cmp
mov
aas
and
shl
cmp
inc
push
shl
dec
push
mov
sbb
adc
xchg
xor
movaps
dec
shl
adc
mov
cmp
cld
sbb
sar
scas
dec
and
daa
sbb
inc
aam
test
xchg
mov
or
or
mov
add
sbb
mov
dec
push
xor
loop
add
add
or
mov
pop
ins
xchg
jmp
je
adc
adc
dec
(bad)
cmp
inc
daa
lea
mov
cwde
and
lds
mov
or
xor
add
sbb
adc
sbb
repz
push
daa
or
test
ins
dec
sub
pop
sti
or
jl
outs
aas
mov
adc
fprem
outs
dec
and
cs
sub
push
lods
pop
pop
sub
es
shr
push
inc
jecxz
fwait
les
xchg
out
and
push
mov
or
xchg
mov
jb
add
push
cmp
cmp
inc
sub
add
xor
inc
xchg
jno
jmp
rol
jnp
and
dec
sbb
jecxz
test
test
push
sbb
in
xor
iret
jmp
pop
xor
sar
jne
sahf
dec
adc
daa
xor
or
mov
sahf
retf
and
dec
and
push
sub
popa
add
push
adc
nop
or
dec
leave
in
rol
nop
cmps
add
jmp
or
or
add
leave
mov
sub
cmps
sbb
mov
xchg
cdq
xchg
or
je
inc
sbb
cmp
dec
or
xchg
xchg
xchg
pop
loope
pop
or
ret
add
loop
inc
scas
or
out
push
add
xor
push
cmps
in
pushf
jp
das
and
inc
push
cmc
push
or
mov
or
xor
mov
adc
push
xor
or
jbe
das
mov
pop
xchg
nop
xor
aam
jge
lock
sbb
push
push
arpl
sub
mov
test
outs
test
cmp
xor
adc
sub
dec
nop
and
and
dec
pusha
adc
test
mov
adc
pop
sub
push
mov
fisttp
mov
sbb
data16
inc
push
jae
or
inc
sub
aaa
jmp
pop
je
dec
js
xor
ror
xchg
mov
daa
adc
cwde
fmul
sub
rcr
mov
ret
xor
dec
loop
call
cmp
sub
bound
mov
push
adc
inc
sahf
repz
push
push
jns
test
add
es
push
and
int
stc
cmps
xor
xor
and
mov
xchg
xchg
mov
or
gs
sbb
mov
jne
std
inc
mov
ret
sbb
or
out
lock
imul
je
sbb
push
cwde
pop
loope
cmp
call
(bad)
sbb
data16
add
ret
and
adc
xor
mov
sbb
fdiv
mov
and
sub
push
cmp
jg
cs
cs
add
adc
sbb
and
out
inc
mov
lds
pop
sahf
or
inc
mov
or
push
dec
adc
xchg
add
adc
mov
xor
sbb
arpl
or
adc
xchg
stos
test
or
and
daa
sbb
pop
cmp
sub
ret
add
movs
fild
adc
pop
jnp
dec
or
inc
les
aaa
and
dec
xor
jne
mov
add
mov
scas
ins
loope
jle
adc
add
adc
or
aaa
sahf
add
xchg
inc
and
jns
xchg
inc
fst
data16
movs
push
(bad)
jns
(bad)
rcr
inc
pop
sub
mov
dec
sub
ror
push
adc
je
dec
iret
adc
outs
or
mov
ins
movs
xchg
fbstp
sahf
fsub
mov
or
int3
cmp
test
repz
jno
mov
scas
xchg
and
cwde
sbb
outs
push
mov
and
add
xchg
in
cmps
sub
xor
and
leave
sub
and
scas
add
adc
aaa
adc
daa
dec
mov
push
add
dec
outs
ret
or
sbb
retf
dec
dec
pusha
mov
cmp
repz
mov
jbe
sbb
aaa
rol
and
sbb
adc
aam
and
sahf
sbb
and
lds
inc
cmps
inc
pop
push
add
push
cdq
rcl
and
arpl
and
sub
inc
lahf
and
add
push
mov
xor
in
mov
test
or
adc
ss
xor
fnstcw
and
pop
sbb
inc
xchg
das
dec
pop
ror
xor
mov
lods
daa
push
ror
and
adc
(bad)
cmp
ins
push
es
cmp
cmp
dec
sahf
out
mov
and
pop
retf
pushf
js
dec
aas
add
sub
jo
dec
shl
push
pop
ret
cmp
add
shl
iret
pop
(bad)
adc
addr16
xor
adc
and
inc
or
pop
or
stc
xor
or
xlat
sbb
push
pop
pop
mov
daa
push
xchg
add
dec
repz
add
add
adc
xor
pop
shl
and
inc
cmp
ret
dec
adc
jne
outs
(bad)
sti
ds
sub
out
sub
add
pop
inc
and
nop
cmps
or
and
mov
push
mov
mov
push
add
adc
and
xchg
adc
inc
push
mov
sub
push
xchg
push
add
pop
add
ja
ss
inc
shl
and
adc
imul
sbb
in
sub
xchg
pop
ds
dec
jmp
jmp
xor
loope
and
jae
and
add
mov
sub
ror
push
ror
adc
sub
movs
out
imul
popa
inc
daa
aad
or
or
cmp
sbb
inc
pop
sub
mov
pop
dec
leave
dec
and
stos
pop
pusha
mov
and
jge
push
add
ins
inc
das
movs
sbb
fld
sbb
dec
jno
sbb
mov
or
loop
mov
lds
addr16
ins
mov
or
dec
cs
lds
clc
jo
push
ror
ror
push
daa
loopne
sub
or
leave
mov
iret
xor
or
sbb
or
push
push
loopne
push
popa
imul
and
nop
mov
add
mov
jge
movs
pop
jmp
jge
sets
pop
cmp
mov
xor
mov
sbb
popa
add
mov
adc
cwde
xchg
mov
leave
adc
add
xor
popa
or
sbb
repz
or
xchg
mov
sbb
mov
ror
push
sar
inc
mov
data16
inc
push
inc
rcr
jb
adc
add
pop
and
mov
ror
cs
cmp
xchg
lea
add
inc
xor
mov
cmp
enter
sbb
cmps
ret
xor
shl
iret
shl
sub
adc
jns
mov
dec
jns
xchg
sub
mov
mov
dec
or
xchg
add
xor
cmp
and
rol
and
into
repz
xor
pop
icebp
das
dec
add
sbb
mov
or
cmp
or
ret
je
pop
or
and
loopne
adc
cmps
add
or
jg
jmp
scas
sbb
es
adc
inc
and
cmp
and
push
sbb
xor
sub
test
push
or
ficom
adc
add
inc
daa
aas
mov
test
lea
jge
mov
cmps
jne
imul
rol
ins
xor
and
cdq
ins
pop
and
adc
les
or
and
xor
(bad)
ins
imul
xor
in
pop
(bad)
mov
jno
dec
inc
pop
sub
or
mov
xchg
sub
jns
or
loopne
xor
shrd
jecxz
retf
pop
push
dec
sub
shr
test
mov
das
das
xlat
inc
jmp
rol
or
repnz
xchg
js
inc
and
add
repz
add
or
test
sbb
add
fbld
and
mov
outs
adc
or
add
xchg
sbb
or
push
sbb
pop
movs
dec
mov
scas
arpl
add
sub
sub
imul
inc
or
inc
xchg
sbb
push
add
mov
sbb
and
inc
xchg
dec
lea
push
div
inc
jmp
add
and
ja
inc
sbb
fnsave
mov
sbb
and
cmp
(bad)
ins
inc
pop
sahf
imul
and
or
imul
cld
rcl
push
cmps
retf
xor
or
xchg
inc
and
fild
repnz
mov
xor
push
push
sbb
inc
mov
sbb
cwde
push
push
sub
add
xchg
int
jb
mov
out
add
xor
inc
ins
call
xchg
and
mov
lds
rol
cmp
jns
jo
movs
sbb
mov
sub
adc
int
es
lods
xchg
ja
sahf
out
xchg
pop
inc
adc
shr
hlt
popa
sbb
dec
jge
js
and
and
dec
ret
pop
rcl
xor
neg
and
xor
sbb
push
mov
dec
test
push
cmp
pop
sbb
cmp
sbb
daa
out
adc
ja
sbb
dec
inc
mov
jmp
or
nop
cs
(bad)
mov
sub
push
and
mov
or
adc
pop
stos
and
sub
xor
pop
and
adc
cwde
daa
dec
jo
xor
dec
dec
sub
sub
stos
dec
mov
test
mov
xor
sub
push
sbb
je
int3
dec
mov
pop
and
pop
mov
or
inc
add
push
sbb
xchg
test
mov
xor
lock
add
xor
sbb
adc
aam
xor
loope
cmp
sbb
cmp
cmp
or
push
leave
push
jns
adc
(bad)
movhps
or
repz
adc
xor
adc
enter
and
mov
pop
cdq
rcl
inc
jns
in
push
sahf
out
and
inc
sub
xor
(bad)
xchg
sbb
movs
push
stos
cmp
jnp
daa
mov
xor
pusha
add
sahf
retf
sbb
xchg
or
or
sub
adc
xchg
adc
pop
jae
push
bnd
inc
and
inc
cmps
jmp
or
sub
std
pop
push
je
sbb
imul
xor
lds
dec
in
or
add
pop
add
dec
add
fcomp
sub
xor
sub
adc
ins
pop
jb
push
test
imul
sub
mov
imul
ins
pop
push
repnz
mov
adc
xor
sub
lea
dec
rcl
xchg
nop
out
sbb
and
mov
adc
or
and
test
xor
or
push
adc
(bad)
mov
ret
sbb
adc
or
lea
test
dec
push
les
aaa
pop
push
mov
out
dec
or
xor
in
inc
mov
add
cmp
inc
je
push
iret
adc
dec
popa
adc
aas
lods
push
cmp
push
add
mov
sbb
and
cmp
sbb
cmp
push
pop
sbb
lock
movs
dec
test
mov
or
sub
ss
adc
daa
cdq
xchg
sbb
add
gs
add
mov
dec
cs
fld
xchg
lahf
lods
int
push
mov
out
mov
outs
loope
movsx
adc
inc
(bad)
leave
fs
sbb
mov
sti
pushf
(bad)
pop
les
pop
push
add
popa
lods
sbb
or
ret
add
sbb
and
repnz
rcl
push
addr16
add
inc
fisttp
add
adc
jns
das
lock
pop
adc
mov
or
and
push
rcr
push
rol
sbb
scas
test
rcl
mov
das
jmp
add
pushf
aam
mov
mov
sub
or
stos
dec
sbb
ret
or
push
mov
pop
imul
mov
sub
add
sbb
or
mov
dec
add
xor
pop
push
ret
dec
cmp
add
out
xchg
(bad)
and
outs
dec
test
push
fld
mov
cmps
inc
and
add
ret
cmp
inc
arpl
mov
push
sahf
inc
or
sub
and
lds
inc
mov
or
test
inc
sub
inc
pop
arpl
fimul
inc
pop
sub
cmp
pop
mov
ds
sbb
add
mov
adc
sub
das
and
enter
or
xor
xor
movs
or
adc
dec
enter
cmp
mov
ss
add
xchg
push
push
xor
addr16
das
add
jns
dec
or
mov
and
adc
xchg
adc
out
add
pop
dec
(bad)
and
mov
and
xchg
js
in
movs
xor
push
nop
test
or
outs
adc
jl
cmp
inc
and
leave
jo
pop
push
popf
out
bound
push
mov
add
jns
pop
add
dec
lds
jb
and
and
adc
clc
sub
adc
mov
nop
cmp
and
inc
nop
adc
int
sub
mov
mov
xor
mov
test
aaa
xor
inc
cmp
add
dec
or
mov
push
repnz
sub
push
(bad)
push
jmp
add
aaa
fwait
xchg
cmc
push
add
cwde
push
pop
inc
sbb
jns
push
pop
pop
dec
or
aaa
mov
(bad)
leave
inc
add
sbb
sbb
jo
jno
iret
repz
sub
adc
leave
in
fwait
jb
sbb
push
repz
adc
jge
sub
(bad)
in
or
inc
add
cmp
adc
jmp
(bad)
and
and
push
scas
enter
cmp
mov
add
sub
mov
ror
aaa
mov
cdq
sbb
push
aad
push
iret
repz
sbb
leave
add
pop
or
xchg
retf
ins
or
pop
inc
xchg
movs
sbb
daa
iret
repz
rcr
or
adc
and
or
sub
pop
das
cmp
add
inc
mov
push
add
mov
movs
xchg
dec
xchg
inc
sub
push
jns
sub
fs
or
adc
sbb
push
and
mov
add
jnp
mov
dec
popa
inc
sahf
pop
xor
inc
dec
push
push
repnz
sahf
push
das
adc
cmps
sbb
sub
push
xor
movs
xchg
sub
dec
rcl
xchg
sbb
enter
push
adc
iret
jns
dec
or
push
adc
mov
inc
arpl
sub
mov
mov
mov
daa
adc
mov
leave
sbb
push
inc
dec
es
jns
cmps
inc
dec
pusha
sbb
push
sbb
mov
cwde
retf
adc
xchg
add
push
sbb
pusha
fwait
pop
in
mov
das
jbe
pop
mov
mov
jmp
cmc
sub
adc
lea
push
jp
mov
inc
lods
lea
pop
mov
push
sti
cmovno
add
inc
enter
pop
inc
add
aam
adc
xor
or
mov
adc
jno
pop
and
add
sbb
or
dec
pop
push
or
das
add
cmps
xchg
push
pop
repnz
xchg
pop
hlt
sbb
dec
xor
xchg
test
add
and
test
push
data16
inc
and
xchg
xor
dec
das
ins
sub
sbb
xor
iret
xor
adc
test
and
adc
sub
pop
inc
dec
ror
jae
jl
push
and
dec
rol
and
or
adc
sub
es
add
push
cli
add
pop
pushf
pop
cs
es
cmp
fs
cmp
add
(bad)
out
sbb
sbb
push
repz
cmp
nop
add
cmps
jb
into
and
cmps
repnz
or
add
sub
dec
movs
pop
and
inc
dec
mov
sbb
add
push
push
add
fstp
sub
adc
sbb
adc
adc
xor
inc
and
mov
test
pop
mov
ficomp
inc
stos
inc
bsf
mov
mov
scas
es
or
add
sahf
out
adc
add
xchg
cmp
inc
xchg
and
loopne
inc
std
mov
and
ret
bound
(bad)
call
lahf
lea
lahf
shl
push
inc
sahf
inc
mov
sbb
adc
or
fmul
cmps
shl
xor
pop
jo
adc
mov
in
mov
xchg
sbb
xchg
push
in
jmp
cwde
pop
out
add
dec
shl
adc
add
sub
sbb
adc
push
(bad)
and
pop
add
loope
rol
add
movs
lds
into
adc
add
outs
push
or
mov
push
adc
and
xchg
pop
(bad)
jb
inc
inc
and
and
add
and
scas
push
fsubr
jb
dec
push
add
sbb
jne
xchg
test
in
mov
push
ds
mov
sub
inc
or
inc
stos
add
adc
add
repz
adc
bound
mov
sub
xor
push
loopne
mov
js
test
inc
ret
das
inc
xchg
popa
add
adc
dec
xor
or
call
arpl
jmp
cmps
adc
out
or
mov
out
adc
mov
pop
mov
shl
inc
inc
or
movs
and
pop
adc
xchg
daa
adc
add
sub
outs
das
pop
push
shl
sbb
adc
push
adc
cmp
sbb
retf
push
push
mov
or
add
iret
int3
cwde
sbb
enter
push
pop
jns
rcr
fiadd
pop
jb
add
sbb
sbb
ret
imul
or
cdq
xchg
xchg
out
or
outs
push
loope
mov
repnz
or
jns
popf
and
loopne
stos
push
mov
test
or
lea
add
and
mov
inc
inc
fcomp
das
clc
add
nop
aas
cmp
sbb
adc
lods
cmp
jns
rcl
in
add
mov
inc
dec
dec
xor
jl
sbb
inc
jno
and
cmc
pusha
xchg
push
leave
push
jns
or
test
mov
and
data16
cmp
fst
and
inc
fisub
stos
icebp
(bad)
mov
cmp
pop
or
repz
aaa
movs
dec
dec
and
repnz
les
fstp
or
and
and
and
in
mov
sub
iret
mov
adc
cmp
or
pop
nop
in
test
inc
or
adc
pop
pusha
adc
nop
add
cmp
xlat
xor
inc
enter
add
xchg
sub
and
add
sbb
jbe
in
fwait
cmp
aaa
out
push
gs
int
inc
add
in
js
int3
das
cmps
test
push
loop
jecxz
scas
sub
sysenter
cmp
dec
sbb
inc
mov
or
jb
cmp
xor
add
push
aaa
and
outs
mov
adc
and
sbb
add
pop
pop
les
jl
cmc
jg
mov
push
cs
pop
or
jno
out
push
xor
xor
sahf
sbb
nop
cmp
test
and
sbb
jmp
test
dec
fstp
aam
sbb
nop
bound
mov
imul
and
test
mov
mov
pop
jns
adc
add
push
inc
xchg
sbb
clc
and
clc
and
mov
pop
add
add
add
cwde
ret
mov
and
ret
sbb
inc
or
cmp
xor
xor
inc
sbb
xor
repnz
sub
mov
pop
shr
add
push
mov
mov
jno
xchg
rol
add
(bad)
lea
or
movs
add
and
mov
bound
rcl
jne
mov
es
sub
jg
cmp
repz
cwde
imul
and
or
arpl
je
inc
enter
or
call
cdq
mov
sbb
pop
xchg
dec
sbb
xchg
jo
and
rol
push
xor
pop
xor
add
nop
out
out
or
pop
sbb
sub
ss
inc
sbb
adc
adc
adc
push
sbb
inc
dec
addr16
frstor
lds
dec
push
add
jmp
xor
sub
es
pop
push
retf
xor
ret
push
add
mov
inc
pop
cwde
or
add
sbb
xor
daa
cmp
push
or
shl
fnsave
or
and
mov
inc
cmp
and
or
and
jbe
or
sbb
sbb
and
call
daa
inc
dec
sahf
daa
fidivr
add
cvtpi2ps
jl
rol
test
dec
mov
xchg
dec
sahf
add
xor
mov
sub
cmp
push
sub
jmp
add
mov
es
pushf
or
mov
popf
adc
jb
cmp
pop
push
jecxz
cdq
cmps
mov
(bad)
shl
xchg
ins
push
adc
pop
out
or
inc
dec
add
cmp
jns
rol
push
repz
push
arpl
cmovbe
enter
scas
test
sub
pop
lds
int
bnd
jb
or
cmp
cmp
and
add
pushf
pop
enter
add
inc
ret
or
inc
ins
xchg
adc
fisub
xor
mov
dec
adc
(bad)
aad
add
or
inc
xchg
mov
sbb
xor
sbb
retf
xor
inc
stos
cmp
lahf
mov
out
cmp
nop
les
dec
or
or
cwde
xchg
dec
call
xchg
add
dec
mov
nop
out
cld
inc
push
cmp
and
xchg
fistp
out
add
and
add
cwde
adc
adc
les
lea
and
adc
ret
lods
pop
bound
nop
in
add
ret
test
adc
nop
mov
push
imul
ins
iret
loope
cmp
sub
add
and
dec
cmp
pop
xor
and
adc
adc
cwde
out
pop
and
add
rol
ror
dec
dec
push
in
and
add
fsub
rcl
push
aam
or
adc
into
sub
sbb
mov
(bad)
jns
es
aas
and
or
and
xchg
jb
or
or
aad
gs
(bad)
test
ficomp
scas
mov
in
add
or
xchg
and
imul
cmp
sub
test
dec
(bad)
mov
mov
dec
add
and
jae
and
sub
inc
or
sbb
mov
xor
or
(bad)
cmp
rol
add
out
sub
add
and
leave
jae
add
push
push
and
xor
dec
test
add
popa
in
inc
leave
leave
or
xchg
inc
pop
or
or
xor
mov
xor
jnp
iret
xor
or
or
repnz
sahf
pusha
and
pop
push
inc
sub
xchg
push
adc
fwait
je
inc
sar
sub
dec
inc
scas
xor
or
sub
and
(bad)
add
cdq
cs
xchg
sbb
inc
inc
pop
test
push
xchg
push
stos
dec
push
(bad)
ror
add
adc
pop
rcr
push
sub
lods
test
push
mov
sub
jb
dec
sti
xor
push
mov
inc
adc
jne
aaa
mov
pop
or
arpl
and
add
in
sahf
cmps
scas
ja
sbb
pusha
dec
add
mov
or
enter
inc
imul
sub
pop
sar
xor
pop
dec
lahf
dec
mov
sub
or
cmp
pop
mov
test
inc
inc
or
pop
sbb
and
xlat
push
mov
loop
mov
push
(bad)
bound
xor
rcl
test
mov
cmps
or
mov
mov
inc
xchg
loope
pop
and
mov
pop
inc
xchg
or
pop
push
mov
xor
imul
lea
stc
ret
push
adc
adc
movs
and
int
fldcw
rcr
nop
mov
jns
xchg
cli
adc
add
jns
adc
add
test
and
iret
adc
adc
push
repnz
pop
add
cmps
mov
sbb
jnp
sub
adc
jecxz
mov
sbb
and
cdq
inc
xchg
cld
xor
stc
jnp
sub
popf
jl
adc
add
xchg
and
or
popf
out
out
cmp
sbb
cwde
nop
or
sahf
inc
and
sub
sbb
dec
cmp
mov
cmps
or
inc
hlt
(bad)
nop
cmp
adc
xchg
(bad)
jecxz
and
push
inc
les
test
dec
lods
leave
and
test
or
inc
push
add
inc
sbb
adc
push
or
stos
add
movs
arpl
jae
(bad)
jae
sbb
cmp
mov
enter
jns
retf
push
and
xor
pop
pusha
adc
push
mov
jae
loop
shr
(bad)
fs
dec
inc
leave
push
cdq
pop
or
or
sub
inc
lods
mov
test
sar
push
cmp
pop
inc
enter
push
mov
and
sbb
inc
or
loop
adc
and
adc
jg
leave
dec
and
sbb
add
and
pop
enter
add
inc
daa
sbb
sbb
in
call
rcl
enter
sub
and
add
gs
pop
test
test
ret
repnz
sub
lods
iret
cmp
xor
add
dec
sbb
inc
adc
adc
add
and
ins
arpl
bound
in
push
push
and
or
add
jecxz
xor
sahf
cmps
ret
push
fstp
imul
jmp
and
mov
shr
or
add
dec
in
push
and
or
push
and
cmp
cmp
lds
mov
sahf
repz
cmps
jno
retf
jecxz
and
add
xchg
dec
fwait
test
xor
and
add
add
xor
push
stc
shr
mov
lds
inc
or
jb
jns
xor
aaa
int3
push
retf
pop
or
xchg
or
jns
lods
add
xchg
sahf
out
clc
and
sub
jmp
or
inc
add
pop
inc
mov
push
adc
push
xchg
mov
mov
xor
and
rol
mov
jns
addr16
sub
cmp
movs
jb
mov
rcr
add
sub
add
add
leave
sahf
out
cdq
out
cmps
and
inc
add
xchg
retf
jae
pop
cmp
and
and
shl
xchg
cmps
sub
or
and
adc
es
sahf
jae
mov
dec
adc
pop
and
iret
xor
and
rol
ins
and
adc
inc
pushf
and
loope
test
ds
sbb
dec
push
or
add
pop
xchg
or
pusha
repnz
fiadd
mov
aaa
mov
pop
arpl
(bad)
xchg
mov
dec
xor
or
add
xor
dec
mov
jae
lahf
fistp
or
dec
pop
jb
sub
movs
or
dec
jle
in
xchg
jmp
mov
popf
and
add
in
or
or
popa
cwde
add
adc
pusha
push
popa
jns
xor
sub
or
inc
sub
xor
mov
ins
movs
out
pop
lea
sbb
sahf
and
adc
xor
pop
add
jns
adc
adc
cmp
cmps
aaa
dec
add
pop
repnz
shl
add
sub
movs
in
xchg
xchg
test
rol
(bad)
add
jb
add
cmp
mov
mov
dec
aas
xchg
lods
inc
enter
add
push
ss
rep
(bad)
pop
sbb
xchg
sub
fdivr
ret
movs
xchg
xor
sub
cmp
daa
jbe
clts
sbb
iret
jle
stos
inc
nop
mov
xor
xchg
mov
iret
xor
lods
adc
rol
cmps
repnz
rcl
popa
cmp
adc
sbb
sbb
sbb
xchg
call
(bad)
shr
push
add
xor
add
push
pop
xor
adc
loop
iret
stos
push
into
and
and
(bad)
aam
xchg
mov
mov
repz
ror
mov
xchg
nop
xchg
out
cmp
or
pop
jb
jecxz
mov
aam
mov
cmp
add
dec
cmp
xor
rcl
cmp
inc
lods
dec
sahf
pop
inc
es
dec
inc
or
xchg
push
nop
out
and
xor
cmp
pop
and
xor
in
push
adc
mov
add
or
push
mov
or
adc
dec
add
pop
lods
jmp
xchg
test
aaa
xor
dec
adc
pop
adc
imul
push
repnz
sbb
sbb
enter
adc
inc
adc
sahf
out
add
sub
inc
pop
push
sbb
mov
xor
and
iret
jns
addr16
xor
scas
xchg
pushf
push
cs
sbb
leave
jae
adc
dec
adc
ret
repz
das
je
adc
xor
imul
cmp
(bad)
xor
xor
ja
dec
pop
mov
pop
es
push
sbb
adc
and
and
ret
fst
cmp
enter
scas
add
mov
(bad)
and
xchg
jbe
sbb
aam
dec
sub
xchg
mov
adc
add
mov
jns
add
xor
popa
sbb
dec
enter
add
sbb
or
or
shl
repz
xor
or
add
cmp
dec
imul
adc
adc
adc
out
xor
in
cwde
(bad)
out
sbb
fidivr
dec
test
or
les
out
cdq
add
lods
add
scas
adc
nop
imul
sbb
or
test
jne
xor
ret
in
data16
mov
push
pop
xchg
pushf
or
out
jmp
mov
sub
and
mov
xchg
sbb
das
adc
sbb
mov
xor
inc
pop
pop
lea
cmps
cmp
push
and
or
scas
sbb
or
sahf
pop
add
lods
call
mov
inc
pop
outs
dec
sahf
out
pop
push
push
aas
or
les
and
dec
shl
and
adc
sahf
dec
sbb
pop
stos
sahf
xchg
jl
std
push
stc
movs
lea
lods
inc
bound
inc
mov
rol
sbb
push
pop
mov
xchg
pop
dec
sbb
cmp
nop
push
sbb
es
push
or
xchg
movs
dec
cmp
adc
popa
add
nop
or
and
pop
pop
pop
mov
nop
out
and
bound
retf
in
dec
call
es
imul
int3
das
inc
mov
movs
daa
sub
pop
push
or
mov
push
inc
jmp
inc
push
test
(bad)
jb
das
sbb
(bad)
or
jae
or
or
or
inc
shl
repz
sbb
scas
sbb
daa
add
inc
mov
mov
jo
sbb
fwait
adc
jns
sub
or
xor
addr16
and
sub
(bad)
cdq
inc
xor
adc
enter
cmp
sub
push
inc
dec
adc
xchg
lea
sbb
xor
or
adc
inc
jo
mov
jb
mov
je
sbb
jne
pop
and
xchg
out
or
pop
sbb
cmp
leave
pop
xchg
mov
sub
xor
cmp
and
add
pop
les
and
mov
sub
popa
sub
or
jo
add
mov
jns
or
loopne
stc
add
iret
pop
xchg
sub
lods
push
dec
(bad)
cdq
pop
iret
adc
aad
push
cmp
dec
pop
repnz
sbb
add
dec
test
and
pusha
mov
mov
adc
(bad)
enter
push
retf
stos
cmp
push
stos
(bad)
mov
lods
xor
xor
cmp
inc
push
xchg
xor
adc
daa
adc
xchg
sbb
iret
mov
sub
and
movs
inc
and
and
ins
or
inc
imul
and
test
and
imul
mov
cmp
add
cmp
inc
jl
enter
xchg
clc
push
sub
in
or
push
xchg
mov
int3
inc
shl
nop
cmp
xor
sub
movlps
push
xor
inc
sub
adc
cmp
xor
mov
adc
je
sub
xor
add
add
add
mov
movs
add
adc
jl
xchg
pop
gs
xchg
adc
cmps
xor
or
out
nop
je
pop
pop
aaa
out
xchg
xchg
or
sub
xchg
pop
pop
add
and
and
mov
cmp
inc
or
(bad)
adc
ret
jne
cmc
push
daa
add
or
inc
adc
sbb
repz
and
or
mov
and
cwde
cmp
inc
push
rol
mov
iret
jns
imul
inc
xchg
es
cs
fmul
or
cdq
push
cmc
push
and
jmp
outs
add
or
dec
movs
dec
sbb
outs
or
push
stos
imul
xlat
jns
dec
in
scas
adc
inc
inc
retf
es
and
cwde
nop
add
and
lds
jno
sub
jmp
fst
add
mov
lods
js
inc
add
push
imul
adc
test
xchg
mov
lea
daa
fistp
shufps
cmp
neg
out
adc
xlat
or
mov
push
push
mov
cmp
adc
dec
leave
add
rcr
or
mov
add
repnz
inc
inc
call
dec
and
or
leave
out
mov
mov
nop
imul
or
push
jo
cwde
cmp
or
rdpmc
jno
xor
(bad)
mov
pop
mov
dec
or
xor
ret
je
out
imul
xor
dec
or
push
js
mov
sub
pop
pop
add
add
lods
popa
xchg
fs
cmp
cmp
data16
cmp
xchg
lahf
cmp
retf
imul
push
jmp
add
mov
or
fs
rcl
imul
int
fcom
leave
dec
push
cmps
and
sbb
sub
dec
xchg
push
xchg
leave
mov
sbb
aad
push
movs
inc
or
lea
adc
call
sub
adc
ss
adc
inc
cmp
inc
pushf
sbb
sbb
add
jo
jae
or
xor
inc
movs
and
push
xor
mov
jnp
mov
push
and
pop
adc
xchg
arpl
stos
xchg
adc
sub
jge
sub
retf
retf
daa
inc
or
pusha
jae
pop
or
mov
xor
add
fistp
xor
jmp
aad
push
add
addr16
sti
cmps
xor
cmp
pop
add
inc
test
outs
ror
int3
add
and
adc
mov
and
nop
mov
push
add
(bad)
adc
dec
cmp
mov
pop
push
cmp
cmp
add
mov
add
repnz
enter
adc
daa
dec
in
jecxz
es
dec
mov
or
test
or
pop
mov
ds
add
loope
in
cmp
inc
xor
or
pop
inc
les
jae
or
aam
cmp
(bad)
loop
outs
loopne
sub
nop
xchg
jp
pop
shl
jae
nop
out
stc
push
or
(bad)
mov
sar
pop
dec
test
push
and
cwde
mov
call
or
inc
xchg
mov
jecxz
sti
jne
push
cwde
shl
ja
lock
xor
xor
push
iret
or
adc
sub
xor
inc
and
dec
push
pusha
sbb
stc
jns
add
add
mov
aas
int3
out
and
xchg
push
or
pop
cmp
xor
ret
out
xchg
pop
and
add
mov
movs
shl
sahf
and
xchg
retf
inc
call
pusha
or
pop
(bad)
cs
inc
dec
sbb
pop
aas
pop
adc
sub
inc
sbb
rcl
pop
add
inc
mov
add
cmp
cli
lea
pop
aaa
add
xchg
xchg
sub
cs
dec
and
sub
and
dec
inc
bound
dec
and
or
inc
popaw
movs
push
jl
in
fcom
push
popa
bound
or
adc
pusha
adc
mov
sahf
add
pop
and
enter
pop
imul
cmp
or
das
adc
cmc
and
bound
add
mov
test
mov
sbb
rcl
(bad)
enter
outs
add
imul
xchg
arpl
push
push
ds
dec
nop
cmp
cmps
push
jo
push
dec
sbb
sub
loop
xlat
je
add
cdq
sbb
jle
cmp
and
dec
inc
or
inc
daa
xchg
pop
imul
inc
(bad)
in
jbe
or
xor
and
sbb
pop
and
(bad)
int3
push
add
lods
adc
lods
or
inc
add
aam
add
sbb
rol
cmp
fnsave
(bad)
leave
je
shr
aaa
cmc
mov
adc
push
popf
xchg
fdiv
xchg
stos
sti
jno
adc
add
xor
shr
cmp
stos
imul
push
dec
and
sbb
push
je
retf
pop
mov
loop
pop
js
and
xor
push
test
adc
add
nop
dec
add
dec
(bad)
jmp
movs
mov
push
add
inc
xor
push
cmp
sub
mov
imul
out
inc
sbb
adc
dec
daa
add
pop
sbb
in
fwait
ja
xor
xchg
push
bound
adc
ds
push
pop
push
inc
mov
add
shl
jmp
out
cmp
or
out
adc
or
add
jo
cmp
lea
adc
ret
adc
adc
es
add
inc
sub
test
pop
ret
push
cmc
jmp
(bad)
jno
cmp
dec
cmp
sub
dec
test
inc
push
imul
mov
pop
sbb
popf
or
add
and
sub
cld
sbb
sub
repz
and
adc
push
cs
repz
push
dec
and
or
dec
pop
sub
jne
cmp
xor
aas
pop
add
test
pop
jns
iret
jns
sbb
add
add
xor
inc
sahf
out
and
popf
cmp
inc
xor
pushf
retf
or
mov
add
sbb
test
lods
aad
sbb
cwde
push
sub
mov
daa
xor
and
rcl
jmp
dec
mov
sub
inc
cmp
adc
inc
es
repz
jmp
add
and
sbb
add
sbb
cmp
pop
aaa
adc
jb
push
sbb
adc
adc
addr16
adc
ror
add
sbb
sbb
jb
fs
and
cmp
bound
ret
lea
mov
adc
inc
mov
push
xchg
adc
push
dec
mov
movs
sti
sbb
sub
cmc
popf
fisttp
push
outs
and
push
or
push
call
sbb
inc
fild
repz
stc
jb
sub
or
sbb
pop
(bad)
pop
sub
popf
add
sub
and
and
dec
sub
xor
add
add
icebp
mov
add
ss
sub
xchg
xor
sub
dec
popf
and
xchg
aaa
or
jp
mov
popa
dec
mov
add
dec
pop
push
or
aam
or
xchg
mov
sbb
jb
adc
and
xor
or
rol
pop
lds
enter
push
lea
push
imul
add
sbb
inc
push
ret
jae
leave
repz
inc
imul
push
jb
into
inc
shl
das
in
inc
add
push
push
adc
pop
or
inc
popa
pop
sub
cmp
push
sbb
push
dec
daa
cmp
gs
leave
pop
push
and
mov
pop
or
dec
jns
pop
jb
int
sub
inc
cmp
mov
xchg
ss
ret
add
push
pop
sbb
sub
cmps
xchg
sbb
sbb
dec
jnp
in
sahf
or
push
aas
add
es
add
cmp
sub
bound
test
enter
pop
xor
push
pusha
and
repz
pop
ret
mov
ret
pop
and
sub
cmp
les
popf
xor
ins
leave
pop
daa
add
add
ins
xchg
sub
scas
sbb
in
pop
sbb
stos
xchg
sub
and
xor
test
(bad)
push
imul
inc
dec
push
add
jns
mov
movs
add
adc
arpl
inc
jmp
popf
dec
and
and
retf
add
add
ja
cmp
mov
adc
ror
test
adc
rcl
daa
iret
add
shl
xchg
cmp
lea
and
or
push
adc
inc
sti
jnp
out
xchg
mov
sbb
pop
push
sbb
and
xchg
aas
xor
inc
call
adc
pop
enter
es
arpl
xor
or
mov
or
sub
cmp
inc
adc
xor
ds
cmp
sbb
es
sahf
out
or
push
data16
inc
repnz
or
inc
and
scas
dec
sti
pop
cs
je
inc
dec
sahf
jno
cmp
push
(bad)
mov
pop
sub
push
pusha
or
cmp
sbb
mov
add
repz
or
mov
mov
and
ja
shl
movs
inc
addr16
mov
repz
cmc
ins
adc
and
(bad)
xor
pop
and
push
movs
and
inc
pop
movs
pop
and
scas
pop
add
add
ja
adc
add
mov
jecxz
leave
sub
jmp
mov
adc
icebp
pavgb
and
pop
jns
es
xchg
or
scas
sbb
ret
in
sub
push
adc
ins
test
push
lds
je
iret
repz
adc
xor
inc
or
aas
adc
push
jle
jle
sub
inc
add
or
shl
mov
inc
pop
or
nop
jo
rol
sub
bound
dec
adc
inc
ret
sbb
inc
dec
fwait
add
push
stc
push
int
inc
out
inc
pop
fwait
dec
add
or
lods
pop
and
add
push
sbb
mov
add
cmp
cmp
push
es
adc
sbb
popa
adc
(bad)
and
pop
pushf
xor
cld
test
sub
or
in
and
and
pop
fwait
(bad)
jo
fnstsw
sbb
and
test
nop
xor
outs
push
xor
cwde
nop
push
sub
add
adc
push
sub
pop
push
sub
add
jo
add
repnz
xchg
loope
pop
adc
xor
pop
stos
xor
add
cmp
sbb
push
pop
leave
and
push
mov
push
dec
je
mov
cmp
jnp
ret
or
push
cmp
ror
sub
aam
outs
sub
and
sub
cmp
xchg
dec
and
xor
xor
mov
or
pusha
xor
ss
lea
add
out
inc
dec
test
sbb
sub
ja
out
cmp
jo
iret
sub
xchg
mov
xchg
movs
pop
and
movs
repz
daa
pop
out
mov
adc
dec
retf
push
push
dec
outs
and
enter
aam
repnz
xor
inc
test
add
iret
pop
xchg
nop
mov
pop
jns
shl
inc
sbb
into
pop
push
test
add
pop
push
push
adc
xor
and
pop
and
or
xor
clc
inc
mov
mov
ins
adc
imul
scas
push
mov
(bad)
sbb
and
es
mul
xchg
mov
pop
sbb
or
out
adc
ss
adc
dec
and
cmp
sub
pop
cwde
les
test
fstp
rcl
add
inc
add
pop
xchg
out
sub
xlat
cdq
add
pop
cmp
xchg
xchg
out
or
jns
cmp
add
sub
mov
push
sub
mov
sub
push
sub
cmp
mov
sub
cmps
inc
xchg
rcr
sbb
mov
adc
bound
outs
popa
sub
bnd
shl
sub
add
pop
xor
xor
nop
out
movntps
pop
push
movs
mov
dec
test
ja
arpl
xchg
push
mov
pushf
add
addr16
add
sub
imul
inc
sahf
daa
lods
adc
mov
adc
sbb
add
test
push
pop
ror
add
or
xor
and
jae
mov
mov
test
repnz
push
cvtpi2ps
inc
imul
lods
push
test
dec
popa
sbb
xor
ror
xchg
adc
jmp
and
or
cdq
push
inc
add
dec
imul
and
inc
inc
movs
das
jno
add
leave
dec
pop
add
sbb
je
and
sbb
sahf
retf
and
or
and
dec
inc
and
inc
jnp
repz
dec
push
push
pop
push
out
jp
pop
aaa
in
push
movs
xchg
cmp
jns
adc
test
mov
dec
movs
sub
push
xor
out
dec
in
fistp
cmp
or
adc
xor
push
jns
ud2
repnz
or
sbb
sbb
leave
hlt
es
sub
pop
dec
into
inc
rcr
push
sbb
enter
add
add
pop
inc
inc
or
mov
dec
or
xchg
sub
dec
loope
add
inc
jl
stc
outs
gs
dec
mov
dec
cmp
iret
and
aad
xchg
pop
sub
xchg
rol
addr16
or
push
test
jns
push
or
ins
cs
add
pop
dec
and
and
dec
sub
xor
in
sbb
jno
pop
cmp
jmp
cmp
pop
or
mov
sbb
add
inc
pop
pop
aam
xor
xchg
ins
cmovle
stos
ins
movs
push
xor
fs
imul
sbb
je
lods
add
and
(bad)
cmps
nop
pop
adc
adc
and
sub
adc
dec
sbb
jecxz
mov
ss
faddp
in
mov
pusha
rol
or
and
pop
movs
ja
adc
or
ret
cdq
xchg
sahf
sub
push
mov
(bad)
ror
sbb
pop
js
bound
add
sbb
sti
fwait
inc
loopne
mov
inc
call
pushf
cmp
inc
sbb
adc
mov
sbb
aad
enter
pop
and
dec
or
movs
add
inc
push
scas
in
mov
xchg
mov
adc
cmp
mov
rcl
adc
dec
push
stos
loop
sahf
outs
lods
adc
inc
push
inc
or
add
push
repnz
xor
sub
xchg
mov
sbb
xor
fistp
fwait
sub
fld
mov
xchg
mov
ror
sbb
or
sar
repz
not
ja
repnz
aaa
repz
inc
xchg
pop
jb
dec
push
push
add
es
push
push
retf
mov
cmps
push
mov
add
jecxz
and
movs
arpl
add
xchg
in
or
xor
movs
pop
add
or
cmp
or
ror
(bad)
or
or
sub
push
mov
push
push
and
inc
movs
pop
mov
sub
sub
imul
inc
test
adc
iret
repz
add
or
sbb
rol
jl
inc
add
imul
or
mov
jns
xor
jge
or
mov
vorpd
in
ficomp
fnstenv
pop
shr
daa
and
jmp
push
pop
and
adc
mov
or
jo
lds
enter
push
add
inc
adc
test
enter
rcl
call
inc
push
adc
add
mov
or
sbb
ss
nop
test
mov
or
test
(bad)
add
xchg
leave
jae
addr16
add
or
in
fild
movd
inc
and
loope
movs
jns
or
mov
or
sub
js
retf
or
inc
sahf
add
test
ja
mov
mov
pop
enter
rol
test
inc
adc
dec
add
jns
xchg
or
add
add
sub
out
sahf
out
es
les
xchg
dec
retf
jo
rol
and
call
fisttp
xor
or
add
stos
cmp
or
sbb
cmc
shr
inc
and
mov
sar
adc
shl
not
adc
add
cmp
dec
gs
xor
rcr
sbb
xor
pop
sbb
es
es
xchg
in
mov
adc
popa
in
lods
push
test
xchg
add
rcl
adc
jnp
retf
btc
inc
push
cmp
rdtsc
sahf
addr16
loopne
and
or
pop
xchg
in
or
xchg
jmp
pop
int
mov
aam
mov
out
js
xor
push
call
test
nop
add
push
xchg
adc
test
mov
pop
and
pusha
cmp
mov
inc
inc
test
dec
and
adc
or
cmp
jns
sbb
push
jp
mov
adc
or
sub
push
mov
xor
aam
pop
ins
loope
ins
or
inc
xchg
lods
inc
loope
xchg
pop
pop
sub
retf
inc
sahf
out
pop
or
sbb
call
inc
scas
pusha
idiv
dec
or
gs
out
cdq
inc
test
jle
adc
hlt
pop
xor
or
dec
adc
push
ret
iret
rol
daa
or
inc
xor
popa
loope
jge
outs
or
add
mov
cmp
xor
lods
sbb
ja
enter
fldcw
add
int
sbb
adc
dec
sahf
bound
hlt
ds
push
push
or
and
test
mov
add
mov
or
push
add
xchg
inc
adc
xchg
das
or
cmp
repz
add
sahf
retf
or
push
xchg
dec
sahf
adc
inc
and
add
int3
and
and
xor
sub
xchg
sub
jb
or
imul
push
cmps
push
xor
(bad)
in
adc
scas
cmp
add
mov
sub
add
sub
addr16
sub
shl
inc
stos
in
jge
and
jno
adc
mov
fldcw
pop
add
mov
mov
sub
movs
add
add
sbb
jb
cs
pop
dec
or
cmp
nop
pop
imul
jns
adc
lea
xchg
inc
inc
add
sub
(bad)
shr
push
or
or
pop
lods
push
or
push
movs
pop
xor
adc
and
and
or
sbb
and
popa
pop
test
shr
push
mov
dec
in
imul
daa
push
test
out
outs
nop
lahf
xor
adc
jmp
pop
and
adc
xor
shr
push
pop
and
sub
jb
add
shl
and
and
xor
mov
cmp
sbb
mov
add
adc
xor
pop
adc
sbb
int
and
push
in
cs
mov
pop
test
inc
jmp
pop
out
push
xor
test
mov
aaa
xor
mov
popa
push
mov
push
or
inc
xchg
and
and
sahf
add
push
daa
sub
inc
adc
enter
call
js
xor
hlt
and
sub
ja
or
arpl
xchg
push
mov
pop
sub
test
scas
ins
fstp
addr16
and
xchg
cs
mov
inc
dec
add
mov
lods
aam
cmps
and
push
push
mov
fst
rol
mov
in
dec
cmps
pop
sub
xor
outs
dec
cmp
out
pop
add
cmp
and
sbb
sub
mov
push
sbb
les
daa
sbb
add
pop
mov
test
pop
and
inc
aaa
or
mov
fild
adc
or
cmp
push
adc
pushf
arpl
add
scas
and
and
mov
inc
mov
sub
aas
and
lods
retf
nop
iret
pop
push
mov
push
cmp
adc
and
adc
fnsave
sub
xchg
outs
inc
rol
add
mov
mov
mov
repz
lods
add
and
add
and
push
add
jne
inc
adc
or
loop
mov
(bad)
int
adc
sub
inc
pop
mov
xor
les
xor
pop
sub
dec
xor
sub
mov
mov
mov
push
inc
test
iret
xor
sbb
or
fcmovbe
adc
sub
enter
xor
inc
int3
xor
addr16
add
pop
adc
xchg
cdq
add
sub
dec
xchg
cmps
repnz
inc
pop
or
inc
movs
sub
or
mov
(bad)
pminub
outs
inc
xchg
sub
addr16
int3
sub
xchg
retf
xor
sbb
add
loopne
xchg
stos
daa
push
push
add
sub
pop
ret
pop
in
add
pop
enter
mov
adc
das
dec
adc
inc
les
mov
fcomi
or
push
sub
add
mov
push
loopne
fwait
sub
(bad)
jmp
xchg
js
fldcw
push
popa
cmp
aam
in
ret
xor
js
popa
inc
add
(bad)
add
shr
les
add
cmp
sub
sub
add
icebp
inc
jmp
fisub
movs
jb
outs
adc
sub
les
sbb
or
xor
rcr
data16
and
push
aad
sbb
cmps
sub
ins
and
and
or
and
sub
add
imul
dec
and
sub
punpcklbw
sub
pop
inc
dec
mov
add
add
sbb
test
pushaw
inc
popf
shl
sar
mov
leave
add
and
sbb
push
adc
or
popa
sbb
sbb
mov
leave
pop
push
es
and
and
rol
inc
pop
push
das
and
ror
pop
add
movs
sub
fwait
stc
sbb
movs
add
dec
or
bound
push
add
pushf
int
cmps
adc
adc
and
dec
or
ja
xchg
push
das
and
lea
add
inc
dec
pop
aas
mov
(bad)
mov
mov
adc
int
xlat
inc
shl
dec
rol
iret
adc
and
mov
xchg
aaa
loop
add
jb
pop
and
aaa
adc
pop
push
mov
add
add
push
bound
mov
cmp
and
dec
cmp
out
jb
pop
push
dec
mov
or
jne
jns
out
repnz
push
and
add
imul
jo
push
and
inc
xor
jns
dec
add
cld
add
scas
inc
jae
mov
ret
adc
int
mov
push
adc
jl
aam
call
or
or
add
push
(bad)
mov
int
pop
and
out
sbb
sar
das
(bad)
popa
loope
sbb
or
inc
adc
test
mov
ret
sbb
adc
dec
mov
jl
or
mov
or
test
add
aaa
push
or
sbb
mov
xor
add
or
call
and
call
jns
sub
adc
xor
test
or
mov
push
xchg
jg
scas
daa
iret
repz
adc
pop
jmp
pop
push
scas
sbb
icebp
push
add
dec
push
pushf
or
add
call
sub
js
or
add
inc
cmps
sub
cmps
sub
bndldx
pushf
int3
and
mov
xor
inc
and
rol
ss
sbb
cdq
push
jns
and
push
and
ins
inc
jo
add
enter
leave
mov
add
cmc
ret
fs
test
fsub
mov
mov
or
inc
lea
pop
or
shl
icebp
fcom
adc
nop
or
sbb
push
arpl
xor
pop
dec
push
inc
popa
aad
out
aad
push
mov
inc
pop
call
mov
dec
stos
leave
stc
or
dec
pop
movs
pop
lds
iret
jae
sub
push
xor
mov
add
xchg
add
inc
mov
xor
pop
mov
adc
add
ror
xchg
mov
sbb
jecxz
pop
jp
jbe
xor
inc
and
inc
sbb
push
dec
cmp
and
xor
sub
adc
out
dec
ret
daa
dec
repz
ja
test
and
sub
scas
retf
sub
sub
(bad)
or
popf
mov
out
inc
fsubr
sub
cdq
pusha
add
add
adc
push
fnstsw
sahf
dec
xor
movs
push
jns
in
adc
cmp
push
bound
or
and
and
and
test
mov
push
cdq
dec
dec
sub
dec
push
adc
dec
push
or
repz
cs
scas
pop
and
push
test
push
or
or
pop
call
scas
mov
mov
ret
jae
dec
dec
lahf
push
adc
jno
add
jl
ror
inc
ds
pop
add
movs
sahf
dec
dec
(bad)
addr16
call
add
jns
or
and
xchg
add
test
pop
inc
cmp
cs
or
pop
push
mov
call
repnz
sbb
mov
push
inc
iret
rep
add
jne
iret
mov
sbb
pop
nop
xor
sbb
inc
add
popf
adc
(bad)
xor
sbb
sbb
push
or
dec
mov
loop
repz
dec
scas
mov
or
test
push
adc
xor
adc
inc
add
adc
adc
rcr
push
or
or
xchg
sub
xchg
arpl
and
mov
jns
pusha
push
dec
imul
mov
popa
imul
pop
xor
and
pop
mov
test
jo
mov
inc
(bad)
fwait
rcl
aas
pop
and
jno
sub
cmps
push
jmp
mov
push
lds
inc
lods
adc
push
inc
bound
add
es
sub
mov
or
or
add
xchg
ret
jns
cmps
mov
or
shl
iret
stos
sub
xor
sbb
add
dec
sbb
mov
mov
sub
repnz
(bad)
sub
cmp
push
pop
or
adc
add
add
add
sbb
fist
mov
int
and
push
xlat
xor
loop
repnz
rcr
test
iret
movs
imul
in
shl
adc
mov
loop
js
movs
push
in
sub
mov
mov
inc
adc
pop
or
or
push
push
movs
shr
add
xor
add
ss
test
add
jne
daa
das
popa
cwde
jbe
push
ins
dec
pop
pop
dec
icebp
and
movs
and
iret
xor
adc
dec
les
out
mov
lds
pop
push
rcr
test
loope
add
je
add
iret
enter
cmp
repnz
jl
adc
add
imul
movs
test
cdq
nop
out
sub
push
add
adc
imul
test
sbb
and
mov
add
test
cwde
aam
movs
push
add
sbb
test
sub
inc
cwde
dec
adc
enter
sbb
sbb
call
or
inc
enter
or
pusha
add
leave
sbb
pop
inc
sahf
repz
push
add
dec
sahf
adc
sub
call
rcl
sub
adc
ja
lods
dec
mov
rol
and
adc
jo
dec
ror
push
or
rol
jbe
jbe
adc
add
add
inc
xchg
fwait
pusha
loope
enter
pop
movs
xchg
push
std
and
call
pop
adc
add
jns
addr16
adc
adc
cmp
add
adc
daa
or
mov
or
push
sub
jns
push
adc
or
in
cmp
sbb
sub
cmp
repnz
add
and
xchg
mov
push
or
and
jge
cmp
push
call
fcmove
(bad)
mov
inc
or
nop
out
cmc
es
and
daa
or
or
add
or
out
and
stos
out
dec
and
or
enter
xor
adc
adc
mov
mov
adc
sbb
test
test
or
daa
pop
mov
mov
imul
in
adc
mov
sbb
xchg
out
add
push
xor
enter
mov
aaa
sub
mov
aam
adc
shl
push
xor
pop
add
addr16
add
test
repnz
push
xor
ror
dec
ret
or
cmps
test
xchg
mov
aaa
xor
sahf
retf
je
add
jb
jmp
inc
adc
push
aam
push
push
outs
mov
iret
inc
and
cs
gs
ja
xor
fisub
ss
and
or
shr
mov
and
adc
sahf
and
daa
xchg
dec
bound
add
aam
add
mov
popa
inc
sahf
inc
add
ss
mov
nop
push
dec
sahf
rcr
imul
adc
inc
sbb
cmp
repz
add
push
jne
inc
pop
(bad)
and
jns
retf
in
add
inc
sub
jns
add
pushf
mov
cmp
xor
popa
arpl
jns
sub
jmp
mov
ret
sub
or
pushw
ret
rcl
pop
loop
pop
rcl
cmp
or
add
or
sbb
inc
sbb
dec
push
out
dec
or
and
xor
stos
mov
inc
mov
add
sub
or
pop
inc
ret
sub
push
inc
das
test
inc
push
adc
push
push
and
or
add
repz
ss
and
push
pop
sub
add
sub
push
sahf
addr16
or
pusha
add
add
sahf
mov
xchg
dec
add
pop
and
add
sub
dec
sbb
mov
sbb
add
mov
sbb
add
sbb
xchg
iret
int3
or
mov
retf
cmp
inc
(bad)
cmps
push
retf
mov
adc
adc
and
outs
or
and
leave
in
jns
sub
fs
test
fmul
not
test
test
mov
enter
cmp
mov
mov
add
rol
push
inc
add
mov
pop
add
push
cmps
adc
push
or
mov
retf
lea
in
dec
add
jge
xor
pop
push
and
iret
add
and
push
xchg
cmp
pop
scas
enter
cmp
dec
push
push
push
add
or
pop
pop
add
enter
mov
mov
aaa
jne
imul
adc
push
aad
inc
fadd
add
pop
retf
call
dec
sbb
sahf
add
adc
pop
add
pusha
add
mov
fmul
or
popa
bound
in
pop
enter
xor
scas
pop
adc
ret
inc
ins
scas
dec
les
dec
ins
ss
sub
sbb
or
adc
inc
sub
xor
xchg
pushf
cmp
adc
add
pcmpgtw
imul
dec
pop
adc
cmps
and
sbb
cmp
adc
aam
jno
dec
and
cmp
and
xchg
cmp
adc
xchg
cmps
adc
mov
lock
push
mov
or
sbb
test
xor
push
bnd
cmps
lods
push
xor
cmp
in
jns
mov
inc
and
ret
add
push
xor
jo
mov
jmp
push
aad
and
mov
(bad)
adc
and
(bad)
(bad)
inc
jg
mov
sub
ds
xor
aaa
je
arpl
stc
or
xlat
mov
sub
sahf
out
mov
push
sbb
or
sub
je
(bad)
call
test
sbb
mov
add
daa
cmp
cmp
sub
xor
jns
in
xchg
adc
add
xchg
xor
sbb
movs
or
and
imul
(bad)
loop
adc
adc
sbb
xor
push
lods
pop
dec
sahf
push
xchg
lds
pop
push
test
xchg
mov
inc
pop
add
enter
push
adc
sub
push
mov
sub
push
sbb
dec
push
clc
push
stos
call
inc
mov
dec
and
or
xchg
test
push
and
jmp
xlat
sbb
xor
cmp
add
push
adc
dec
in
pusha
mov
sbb
adc
es
sbb
je
ins
pop
xor
repz
push
adc
push
dec
cmc
test
inc
ja
setl
dec
pop
add
jp
inc
and
jns
pop
pop
pop
xchg
out
inc
mov
pusha
xor
sub
add
fwait
icebp
addr16
pop
pop
mov
dec
sahf
dec
sub
mov
adc
xchg
aaa
and
sub
pop
dec
(bad)
xchg
pop
pop
or
adc
adc
or
shr
imul
dec
adc
sbb
adc
ret
stos
adc
push
cdq
jns
fwait
push
cmps
push
xor
add
test
cmovno
cmp
jnp
nop
xchg
and
stos
mov
(bad)
(bad)
in
xchg
loope
xor
sbb
(bad)
shl
sub
xchg
add
adc
jns
cmc
push
movs
cmp
popa
adc
ret
lahf
or
data16
rcl
int3
add
push
pop
ret
inc
(bad)
add
jae
sbb
sub
adc
pop
jb
inc
mov
and
sub
dec
leave
sub
cdq
rcr
or
outs
inc
add
popa
popf
xor
mov
mov
out
pop
clc
and
sbb
xchg
push
xchg
cmp
adc
adc
xor
and
pop
cmp
(bad)
pop
sahf
add
xchg
fsubr
and
or
inc
cmp
cmp
jge
jmp
cmp
add
test
pop
inc
mov
sbb
xchg
add
adc
push
je
ret
bnd
aam
mov
or
lahf
lods
add
xchg
cmp
test
cmp
lods
mov
ins
push
and
mov
dec
and
xor
sub
test
or
xor
inc
fmul
xchg
test
mov
(bad)
fld
mov
jp
pop
imul
jo
shr
daa
mov
pop
bound
rol
(bad)
stos
cmp
cmp
or
xor
xchg
out
retf
sub
add
and
mov
repnz
cmp
or
jl
sbb
loope
xor
fstp
mov
add
or
xchg
mov
sub
inc
test
adc
or
test
pop
rcr
inc
sbb
add
lods
sbb
xor
dec
inc
bound
adc
adc
mov
add
adc
mov
es
mov
add
and
push
cmps
imul
xor
ret
push
cmp
dec
test
xor
cmp
idiv
add
(bad)
repz
gs
push
sub
sar
cmp
leave
inc
fcomp
cmp
or
dec
add
xor
pop
add
and
inc
pop
bound
adc
add
xchg
mov
or
pop
jecxz
inc
fisttp
push
adc
sub
lea
inc
outs
mov
xchg
(bad)
and
popa
push
retf
and
adc
inc
mov
ret
add
mov
add
add
addr16
pop
adc
movs
xlat
and
jecxz
sbb
pop
shr
sbb
inc
add
sar
movs
shl
mov
sbb
xor
icebp
sbb
xor
dec
and
add
and
pop
addr16
jle
mov
add
and
jb
dec
and
(bad)
mov
leave
push
and
lods
jp
and
or
xchg
lods
adc
retf
retf
cmp
push
cdq
jp
packsswb
call
sbb
sbb
sub
dec
or
xchg
fstp
sbb
pusha
mov
sti
rcl
add
sbb
bnd
into
or
push
adc
or
dec
push
test
add
adc
cmp
mov
daa
push
cmp
cmp
adc
mov
and
sub
mov
inc
addr16
mov
cs
stos
rol
dec
(bad)
dec
sub
dec
rcl
ss
adc
outs
push
mov
xor
or
or
fistp
dec
cmp
inc
adc
adc
push
mov
sub
pop
jecxz
es
fldenv
xchg
cmp
shl
leave
es
dec
or
inc
adc
mov
jne
out
push
fwait
dec
and
ror
push
outs
jmp
push
or
leave
xchg
mov
rcr
and
pop
push
dec
pusha
xchg
adc
test
or
mov
repnz
jge
movs
and
push
call
popa
xchg
pushf
push
sub
mov
push
add
leave
leave
cmp
sbb
outs
cmovo
add
mov
arpl
mov
sub
dec
jbe
mov
fldenv
repnz
or
and
inc
fcom
add
dec
sbb
iret
enter
pushf
sbb
or
repnz
dec
or
xchg
mov
leave
jae
push
add
pop
add
fidivr
jns
rol
stos
mov
data16
jae
movs
xor
or
(bad)
pop
adc
push
dec
adc
push
fucomip
fistp
sbb
fmul
and
add
nop
adc
call
push
test
sbb
push
jb
mov
xor
and
sbb
aaa
or
sub
imul
cwde
or
adc
or
popf
je
repz
inc
inc
adc
cmc
out
test
push
test
jns
adc
jne
cwde
(bad)
inc
jb
xor
mov
push
sub
repz
sbb
adc
inc
jbe
and
rcl
loope
out
iret
xor
or
sub
leave
or
test
cwde
push
dec
sbb
xor
adc
mov
add
mov
jb
and
adc
pop
sub
movs
retf
mov
jae
lock
xor
loope
cmp
xchg
dec
push
inc
add
dec
mov
mov
sar
jae
leave
xor
adc
bound
mov
jecxz
out
or
mov
or
mov
xor
cmp
adc
outs
adc
enter
mov
mov
pop
add
xchg
sbb
jo
pop
pop
xor
loop
or
repnz
jb
adc
test
mov
call
push
add
cmp
lods
shl
(bad)
fst
outs
adc
inc
retf
adc
mov
and
dec
or
test
dec
mov
iret
repz
iret
or
imul
and
xor
aaa
movs
stos
aas
stc
pop
push
sbb
inc
xor
repz
sbb
or
and
inc
push
aaa
gs
popa
sub
cmp
or
push
pop
cmps
xor
das
push
in
leave
push
fcom
mov
mov
sbb
das
mov
xor
or
pusha
pop
adc
inc
or
dec
xchg
xchg
or
push
sahf
outs
mov
push
cs
jns
jmp
push
repnz
sahf
repz
mov
sbb
test
into
and
push
and
repz
sub
or
dec
sahf
retf
pinsrw
sub
imul
xchg
jbe
fcom
test
cmp
scas
xchg
out
jns
jae
fistp
jg
outs
push
cmp
push
and
inc
jmp
cmp
xor
or
jecxz
ins
cmp
sub
mov
(bad)
ins
call
mov
or
inc
sbb
daa
pop
addr16
add
push
inc
or
or
test
lods
shr
mov
xor
and
push
pushf
and
test
nop
out
mov
sbb
inc
mov
or
cmp
cmp
dec
movs
cmp
pusha
movs
popa
cmps
fsub
jge
adc
cmp
repz
arpl
test
xchg
adc
mov
inc
sbb
cmps
sbb
xor
sbb
mov
and
xchg
cmp
addr16
pop
comiss
sub
add
xor
mov
push
movs
adc
aad
jmp
ja
retf
std
pop
daa
in
adc
or
mov
loope
aad
sub
dec
test
push
add
or
jne
or
adc
rol
repz
fnstenv
xor
inc
push
push
jb
fimul
and
dec
test
inc
or
xchg
add
nop
pop
mov
rol
inc
lds
fwait
jmp
and
or
in
iret
repz
dec
pop
xchg
or
pusha
cmp
imul
or
mov
pop
repz
adc
push
and
sub
cwde
ss
add
ins
add
inc
pop
mov
or
in
imul
push
sub
mov
ss
sti
and
sub
inc
mov
mov
dec
shr
and
or
dec
sbb
movs
test
inc
inc
sub
pop
movs
leave
push
add
push
cmp
outs
push
inc
xor
dec
inc
or
rol
test
enter
push
xor
repz
dec
mov
xchg
enter
mov
inc
adc
arpl
or
inc
and
push
mov
cmp
push
inc
xor
xchg
add
cmp
add
add
inc
push
and
loope
or
xchg
xchg
sbb
adc
push
imul
mov
jns
addr16
or
add
xchg
or
sbb
adc
dec
mov
add
popf
xor
inc
cdq
rol
mov
lea
inc
test
daa
inc
sub
add
mov
add
sbb
push
(bad)
jmp
sbb
cmp
jb
dec
push
xlat
and
arpl
xor
add
mov
enter
inc
jmp
jo
in
inc
dec
sub
and
adc
sub
jno
sub
jge
out
push
xor
and
sahf
adc
and
fisttp
test
cwde
cwde
or
push
addr16
subps
and
inc
scas
and
or
ret
adc
xchg
imul
push
sub
aas
jno
inc
cmp
sbb
loopne
ss
in
les
xchg
in
or
xor
inc
adc
and
jae
pop
and
push
dec
inc
rcr
inc
xchg
add
mov
sbb
lahf
ror
inc
icebp
pusha
inc
sahf
es
adc
xchg
out
jle
jae
sbb
into
dec
in
xor
adc
stos
push
rol
cmp
dec
and
gs
repnz
int3
sbb
sbb
or
fs
add
add
outs
cmp
sahf
adc
adc
ret
stos
and
stos
sbb
imul
sbb
sub
cmp
adc
add
iret
repz
and
psllw
ror
xchg
sbb
cmps
adc
dec
adc
inc
popa
add
inc
mov
sub
cmp
mov
sub
adc
mov
data16
pop
xchg
sbb
sub
inc
cmp
cmp
fisttp
test
adc
(bad)
sub
int
sub
push
sub
add
push
inc
ds
das
movs
pushf
ret
ror
les
add
push
dec
mov
mov
out
add
adc
fs
mov
aaa
sub
mov
push
mov
int
fs
jge
out
sahf
jg
and
pop
test
xchg
mov
or
loopne
push
mov
sbb
jo
adc
mov
nop
out
mov
pop
xor
mov
cmp
in
addr16
push
or
repnz
sbb
xchg
out
add
or
xchg
or
je
push
pusha
iret
jae
sbb
or
nop
add
mov
fwait
cmp
pop
add
dec
imul
jns
bound
xchg
test
jmp
es
pop
xor
mov
nop
das
push
daa
pop
repnz
(bad)
xor
in
jl
ss
adc
inc
and
test
test
adc
inc
xor
fld
movs
inc
and
cs
cmp
sub
xor
(bad)
movs
mov
xor
inc
add
scas
lea
cmp
sub
mov
rol
bound
jns
(bad)
pop
pop
popf
mov
cmp
retw
movs
repnz
out
test
loope
add
sbb
fst
repnz
add
adc
mov
sbb
jl
and
xchg
int
or
out
sbb
sbb
cmps
in
jecxz
sbb
outs
pop
and
retf
or
cmp
mov
xor
adc
enter
mov
lods
and
sbb
xchg
loope
aam
popa
inc
dec
mov
xor
inc
or
push
or
cmp
xor
hlt
or
add
movs
packuswb
push
add
and
inc
dec
leave
repz
cmps
and
or
cmp
xor
sub
xor
xor
pop
push
xor
ins
cmp
je
test
dec
pop
shl
or
xor
sbb
and
sahf
or
pop
mov
and
aaa
inc
les
pop
stc
rol
ja
out
es
push
nop
push
push
loopne
mov
cmp
or
inc
push
pop
push
add
xor
mov
jb
mov
pop
mov
xor
cmp
mov
push
pop
and
(bad)
sti
and
add
arpl
add
mov
pop
sahf
cmps
dec
and
pop
pushf
cmovnp
dec
cmp
xor
add
push
mov
mov
inc
cs
jb
dec
gs
and
xchg
in
stos
dec
fst
sbb
and
push
sahf
(bad)
adc
push
movs
jb
push
clc
adc
xchg
in
les
adc
repz
inc
add
or
test
aad
mov
pop
mov
outs
adc
mov
(bad)
sahf
xchg
rcr
cmp
and
adc
lds
or
or
out
aas
sub
setns
xor
xchg
cmps
shl
es
movs
push
xor
inc
rcr
in
dec
imul
prefetchwt1
push
repnz
adc
cmp
out
mov
sub
nop
inc
push
cmp
or
xchg
sub
sbb
mov
and
dec
adc
in
sbb
xchg
inc
or
or
add
in
ror
inc
popa
adc
add
aam
fist
in
or
pop
dec
adc
and
or
scas
mov
imul
push
mov
adc
and
sub
add
adc
xchg
cmp
add
lea
xor
or
pop
fstp
push
jns
addr16
xchg
aaa
and
add
or
nop
aam
imul
pop
popf
xchg
xor
pop
pop
add
inc
in
dec
enter
sbb
loope
daa
adc
test
mov
mov
jns
or
add
push
xlat
xchg
inc
add
popf
xor
movs
push
add
sub
jo
ins
cmp
push
jno
cwde
cmp
mov
rol
inc
inc
sbb
retf
or
sub
push
adc
ins
push
dec
sbb
sub
xor
jecxz
xchg
pop
and
lea
xor
ds
dec
or
stos
or
and
scas
add
popa
stos
popf
sbb
dec
xchg
cmp
and
push
movs
inc
imul
add
pop
pop
aad
pop
sahf
pop
mov
cmp
inc
inc
xchg
add
xchg
push
stos
adc
mov
repz
cmp
sbb
sub
or
stc
add
test
adc
sub
sahf
out
sub
call
and
sbb
jno
cmp
adc
add
sbb
push
rcl
sbb
sub
add
add
(bad)
sbb
movs
xor
xchg
hlt
jne
out
sti
rcl
stc
dec
jp
stc
and
daa
push
push
jp
push
sub
pop
push
je
(bad)
pusha
add
aaa
or
pop
repnz
ds
fcomp
add
cmp
adc
lods
sbb
pop
or
dec
dec
loopne
sbb
in
shl
push
sahf
sbb
xor
dec
ror
(bad)
inc
sbb
inc
jae
push
mov
inc
cmp
and
retf
(bad)
rcl
add
or
jo
adc
push
jmp
xor
dec
or
or
xor
les
jnp
std
loope
dec
ret
std
jmp
inc
jno
test
sub
xor
adc
add
sub
push
jo
cmp
or
xor
inc
ret
add
enter
adc
or
jle
shl
ja
mov
xor
or
loopne
cmp
ret
dec
jle
inc
dec
xor
dec
jle
add
or
pop
and
mov
call
cmp
cs
fmul
push
dec
test
lea
and
loop
jmp
pop
aas
adc
sub
iret
repz
add
sar
in
mov
add
sub
outs
pop
mov
gs
add
rcr
push
adc
ret
aad
add
(bad)
cs
inc
mov
jno
mov
add
jo
xlat
add
xchg
and
xchg
out
adc
and
imul
push
jo
pop
fisttp
test
or
sub
sbb
and
or
pop
push
sub
dec
jmp
inc
sub
test
or
jns
(bad)
push
sub
add
xor
leave
mov
and
ss
repz
mov
xor
dec
sbb
add
sbb
ret
sahf
inc
push
cwde
arpl
sub
inc
or
inc
and
push
jb
sahf
ss
add
aaa
add
xchg
jo
mov
cmp
cwde
xchg
test
and
add
sbb
xor
adc
xchg
imul
mov
repz
std
xor
add
test
repnz
dec
push
push
cmp
mov
push
retf
shr
cmps
xchg
xchg
retf
(bad)
adc
adc
pop
jno
aad
inc
(bad)
ins
loopne
or
or
mov
sar
test
outs
add
dec
and
xor
in
mov
or
push
or
adc
xchg
cmp
sbb
jmp
sub
fld
add
jno
sbb
cs
sbb
icebp
arpl
daa
pop
mov
adc
add
iret
sub
rcl
aam
inc
leave
aas
adc
mov
mov
fcmovbe
pop
sbb
out
sbb
pusha
jecxz
pop
xchg
pop
push
pop
push
rcr
push
repnz
xchg
cmps
mov
jae
sbb
add
cmp
or
pop
or
xor
cmp
and
or
inc
pop
cmps
or
sub
pop
mov
push
sub
pop
shr
dec
dec
sahf
out
pop
add
dec
cs
test
(bad)
and
xor
adc
aad
jns
cmps
sbb
adc
and
scas
jg
and
add
inc
xchg
sbb
push
add
and
adc
and
adc
or
call
dec
or
(bad)
out
aam
bound
or
inc
sahf
push
ins
pusha
mov
test
adc
and
rcr
adc
xor
or
inc
das
outs
push
cdq
dec
ror
cwde
test
add
sub
xor
push
sub
mov
xor
or
add
mov
add
inc
adc
add
test
push
pop
imul
test
jmp
pop
dec
sub
sub
bound
mov
xchg
ret
lods
pusha
sar
stc
cmps
movs
or
add
xchg
adc
pop
arpl
and
xchg
retf
mov
add
fbstp
lds
sub
sub
sbb
les
push
cs
sahf
out
movs
and
les
push
sub
pop
test
push
and
or
jmp
or
add
ds
adc
pop
or
pop
xor
shl
add
pop
push
retf
cmp
xor
int
add
push
dec
sahf
retf
adc
popa
inc
xchg
inc
sar
mov
xchg
fwait
pop
test
aas
xor
xchg
retf
gs
adc
add
stos
bound
fwait
repz
inc
inc
popa
sbb
in
iret
sub
jo
xor
add
sahf
push
lea
add
sub
mov
xor
iret
xor
adc
(bad)
xor
mov
ins
sub
je
ror
pop
fs
dec
cs
or
test
shl
inc
xor
push
add
dec
sbb
adc
movs
shl
test
xor
cdq
xor
mov
test
cmp
inc
fs
adc
xor
push
xchg
jnp
xchg
mov
sbb
in
or
ins
add
inc
cli
mov
jmp
jg
in
or
or
das
pop
mov
fnstsw
jns
dec
jle
aas
out
pop
repnz
in
sbb
daa
cmp
adc
or
stc
jns
addr16
adc
add
movs
jb
cmps
or
lods
pop
lahf
adc
inc
and
out
(bad)
jge
jmp
and
cmp
sbb
aam
cmp
push
add
bnd
xor
jmp
cmp
mov
dec
jmp
mov
jge
test
inc
and
sbb
popf
sbb
jno
sahf
inc
xchg
inc
jecxz
cmps
adc
dec
ss
inc
adc
jb
aad
daa
cmp
jnp
mov
sbb
nop
out
or
xor
in
mov
or
stc
adc
sti
push
(bad)
pop
push
call
adc
es
cmovo
inc
repnz
sbb
add
jnp
xchg
retf
xor
in
rcr
dec
sbb
jnp
mov
push
add
inc
add
cmp
or
pop
cs
sahf
and
push
add
xor
mov
or
adc
jae
imul
movs
xchg
add
push
pop
sar
sbb
pop
outs
adc
mov
jns
test
call
or
and
repz
jl
inc
mov
pop
lods
and
adc
lahf
xchg
shl
or
sub
out
xor
or
sub
push
iret
mov
cmp
add
adc
fcmovne
adc
data16
sbb
je
cmps
sub
jns
adc
cmp
xchg
add
sbb
cmp
mov
push
sar
shr
mov
fisubr
jns
add
push
sbb
stos
dec
imul
add
pop
fwait
jmp
pushf
lods
inc
hlt
xor
in
iret
repz
sbb
cmp
mov
in
cld
or
push
adc
push
and
and
mov
je
cmp
loopne
mov
mov
push
cmp
or
jne
iret
add
sub
and
and
in
pop
sub
sbb
dec
and
repz
xchg
je
dec
and
mov
xchg
xchg
add
icebp
inc
mov
push
xor
outs
mov
ror
jno
add
call
movs
xchg
dec
sbb
adc
mov
or
lahf
adc
mov
and
adc
xor
mov
xor
fcom
adc
sbb
cmp
and
sbb
add
sbb
(bad)
das
inc
enter
push
or
out
and
sti
sub
call
dec
sbb
sub
mov
cmp
mov
dec
out
inc
pop
sbb
xchg
add
and
add
pushf
sbb
repnz
sub
pusha
add
jae
or
mov
mov
loop
and
push
inc
sub
fcmovb
and
xchg
inc
inc
ss
aaa
mov
lods
mov
sub
push
orps
jne
sbb
and
es
cwde
and
outs
inc
xchg
pop
adc
pop
and
in
popf
xor
jae
pop
(bad)
pop
fwait
test
cmp
adc
push
push
cmp
dec
or
xchg
mov
inc
sbb
popf
or
mov
push
cwde
and
or
dec
mov
outs
dec
imul
dec
icebp
or
pusha
add
cmp
repz
sub
sbb
inc
inc
sahf
mov
xor
sbb
fs
test
dec
das
test
inc
and
sbb
sub
push
push
push
sub
mov
nop
adc
fxch
imul
push
xor
repz
out
daa
dec
in
and
sbb
nop
xor
adc
push
dec
scas
mov
nop
xor
call
enter
push
sub
jl
add
adc
cmp
mov
nop
add
jg
add
mov
adc
in
pop
shl
mov
cmp
and
add
mov
adc
add
imul
jo
inc
stc
push
and
sub
and
add
or
pop
or
jno
jae
adc
fcomp
and
push
adc
int
pop
and
leave
dec
cmp
gs
xchg
adc
lds
xlat
aaa
mov
(bad)
int
movs
push
cmps
add
add
mov
jb
pop
push
iret
repz
outs
adc
push
pop
or
xor
adc
add
stc
cmp
add
shufps
outs
jo
mov
adc
xchg
out
mov
ds
adc
xlat
and
sbb
mov
push
xor
lds
adc
sbb
push
add
mov
jecxz
add
adc
loop
fist
pop
aaa
and
pop
scas
mov
jmp
push
jns
aad
fisttp
imul
or
or
cmp
xor
adc
stos
and
xchg
jecxz
inc
sub
add
push
jmp
add
push
cmp
sbb
sbb
push
adc
jns
push
add
jmp
out
pop
pop
sub
and
lods
stos
inc
inc
sbb
sub
inc
push
or
outs
and
mov
cmp
push
or
pop
xchg
fadd
or
test
popa
les
(bad)
aad
ss
mov
jno
mov
cmps
ja
push
test
or
mov
movs
rol
dec
and
or
inc
pop
(bad)
xor
adc
push
enter
dec
shr
inc
dec
add
jae
fs
and
push
cmps
movs
xor
xor
or
addr16
mov
add
add
(bad)
adc
pop
inc
add
and
and
xchg
push
popa
dec
addr16
sbb
inc
jo
or
(bad)
jmp
shr
cs
pop
xchg
or
xor
or
xor
xchg
lods
inc
add
rcl
sub
or
push
aaa
or
jg
sahf
popa
ret
add
call
add
xchg
dec
xor
mov
in
xor
or
add
xchg
retf
sbb
aam
and
inc
push
mov
dec
sbb
lds
adc
leave
adc
xchg
and
push
or
lods
test
fcmovne
and
mov
add
cmp
adc
aas
test
push
push
and
and
adc
add
lods
jecxz
xor
mov
xchg
nop
sub
outs
fst
call
xor
dec
push
cmp
inc
adc
and
push
inc
xor
push
rcr
add
cmps
repnz
loope
add
or
adc
add
ss
fcmovu
cld
adc
test
fwait
outs
or
ret
and
sub
scas
addr16
add
push
mov
scas
adc
sbb
cmp
test
das
popa
add
stos
fst
outs
mov
shl
push
add
lea
jb
mov
xor
cmp
inc
push
sub
sub
add
adc
add
mov
sub
sub
pop
arpl
in
sahf
or
adc
push
movs
imul
add
sub
mov
out
xor
sub
retf
xor
and
test
or
and
pop
and
iret
repz
inc
ret
jno
(bad)
push
cmc
sbb
mov
inc
pushf
mov
dec
sahf
out
(bad)
data16
sbb
push
inc
and
cmps
repnz
or
lds
push
or
cli
adc
imul
rol
scas
mov
es
sub
inc
or
jns
cmps
xchg
sub
adc
or
pop
sbb
push
sahf
adc
movs
and
imul
dec
cmp
sbb
test
adc
or
sub
cmp
movs
adc
adc
adc
loop
mov
inc
sahf
out
adc
sub
sub
ja
ret
cmp
out
cmp
push
lds
xchg
inc
dec
jne
sbb
jle
or
and
adc
nop
out
add
mov
dec
call
test
ror
dec
mov
pop
pop
add
aam
sbb
jl
pop
mov
aaa
mov
sbb
xor
dec
movs
push
adc
mov
pop
out
mov
cmp
sbb
leave
push
cdq
nop
push
cmp
adc
sub
sub
or
sbb
pop
or
and
movs
or
jp
push
test
test
and
out
mov
mov
dec
mov
inc
int
or
cmp
adc
push
adc
je
push
mov
inc
adc
and
(bad)
cmp
xor
push
shl
xchg
push
fistp
xchg
adc
push
or
vcvtsi2ss
and
or
sub
pusha
cmp
inc
and
mov
mov
adc
sub
jmp
jg
adc
cld
nop
and
iret
add
into
dec
adc
test
or
inc
cld
push
sub
push
or
dec
pop
jecxz
push
mov
mov
fs
dec
add
aad
pop
(bad)
push
cs
cwde
and
in
push
inc
jne
(bad)
out
sti
jae
sar
mov
or
add
push
jne
jo
mov
cs
add
ss
stos
ins
jmp
xor
out
inc
sahf
xor
xchg
and
xchg
out
cli
sbb
mov
push
push
(bad)
cdq
movs
mov
add
pop
jbe
and
or
(bad)
and
or
push
jne
push
sbb
jns
inc
cmps
push
pop
jns
mov
in
add
mov
add
dec
dec
xor
ins
movs
cmp
and
repz
push
sahf
jae
les
push
push
add
push
repnz
sbb
ret
push
pop
sub
cmp
jns
and
sub
lea
repz
cmp
punpckhbw
daa
mov
test
add
or
push
nop
inc
sbb
in
nop
mov
or
jo
add
test
and
xchg
mov
jne
pusha
xchg
ins
and
sahf
cmp
dec
or
sub
leave
pusha
adc
in
mov
rcr
push
add
push
and
inc
add
pop
test
add
inc
adc
popa
dec
enter
repnz
sahf
mov
das
sbb
sub
adc
shr
add
sahf
push
cmp
push
adc
xor
mov
pop
sbb
out
xchg
adc
sbb
sub
inc
sub
outs
rcr
inc
and
and
jge
call
mov
xchg
stos
cmp
out
and
mov
mov
xor
mov
dec
pop
cwde
ins
add
pop
mov
pusha
add
add
push
or
outs
(bad)
and
cmp
mov
push
dec
cmp
inc
adc
jmp
push
test
ins
cmp
addr16
add
sbb
add
mov
inc
sub
mov
sbb
jns
(bad)
adc
bswap
cmp
jne
xor
inc
xor
ret
mov
inc
and
jl
ret
imul
retf
in
dec
enter
sbb
jns
push
sub
ret
push
(bad)
inc
xor
nop
out
or
push
cli
and
dec
out
adc
push
mov
les
imul
push
jno
(bad)
and
in
push
add
dec
xor
xor
bound
dec
rol
xor
jmp
mov
and
shl
sbb
ds
sbb
pop
sub
xchg
leave
scas
or
aas
mov
jb
adc
jnp
xchg
xor
shl
lods
arpl
dec
setb
mov
jns
je
jae
mov
xchg
retf
xor
pop
adc
sub
movs
xor
cmp
cmp
movs
push
or
add
test
jns
jno
adc
es
stos
popa
sub
retf
sub
or
inc
iret
xchg
sbb
mov
repnz
jo
pop
sbb
xor
jns
pop
xchg
rcl
and
and
lea
adc
movs
je
and
pop
repnz
pop
cmp
popa
or
dec
pop
cmp
sub
push
pop
adc
sahf
out
ret
movs
push
sub
and
leave
jae
push
int
sbb
push
add
rcr
add
cmp
adc
inc
add
out
es
sbb
and
xor
sahf
jge
inc
cmp
and
lea
bound
fnstcw
movs
or
mov
xor
dec
and
add
inc
mov
sub
add
cmp
xchg
fild
shl
jb
inc
and
pusha
loopne
mov
mov
sub
iret
or
test
ins
or
or
sbb
add
std
iret
xor
sbb
rcl
jl
or
push
sub
xchg
or
pop
add
push
(bad)
dec
popa
movs
jg
add
adc
jae
ins
push
ror
sbb
les
pop
popa
in
and
sbb
xlat
nop
mov
and
pinsrw
pcmpeqb
pop
fwait
cmp
sbb
fwait
aam
xor
push
dec
adc
xor
in
call
inc
popf
cmps
adc
push
xor
sub
in
push
jmp
pusha
sub
mov
sbb
repz
add
cmp
adc
cmp
fwait
add
or
jmp
std
push
stc
adc
cmp
add
jnp
adc
dec
test
push
pop
xchg
sub
mov
scas
cmp
push
inc
mov
sub
xchg
addr16
and
bound
mov
jmp
xor
ficomp
pop
pop
or
sbb
and
mov
push
aad
xlat
xchg
test
pushf
xchg
fmul
stos
adc
or
sub
repz
sbb
and
sub
and
ret
je
push
and
adc
xchg
out
cli
and
test
or
test
mov
cmp
xchg
pushf
pushf
push
adc
and
mov
leave
add
movs
retf
xchg
cwde
rcr
cmp
adc
adc
inc
or
cli
and
stos
in
fstp
jb
pusha
cmps
mov
loope
adc
arpl
fsub
sbb
gs
movs
jbe
pop
jb
cmp
dec
add
gs
gs
mov
popf
inc
scas
xchg
add
and
sub
or
add
mov
fldenv
jno
cmps
outs
gs
push
in
pop
push
dec
sbb
adc
mov
sub
pop
lods
rcl
inc
dec
leave
and
mov
ss
sbb
dec
sub
sbb
dec
inc
stos
cdq
adc
out
sbb
aas
push
adc
dec
xchg
xchg
pop
mov
sahf
retf
lahf
ja
adc
or
and
mov
and
outs
xor
dec
or
inc
aaa
and
test
sbb
les
dec
adc
leave
sub
or
lea
shl
jb
sub
test
adc
cmp
push
(bad)
cmps
repnz
mov
cmp
add
pop
shl
mov
mov
add
fcom
sub
xor
cmp
mov
adc
sub
mov
nop
adc
test
mov
int
push
push
inc
sub
test
push
adc
rcr
loope
xor
nop
out
je
inc
aas
jl
inc
rcl
jmp
inc
or
lods
and
push
adc
mov
jns
cmp
sahf
retf
pusha
and
xchg
adc
or
sub
dec
sbb
xor
es
or
dec
sbb
push
(bad)
inc
add
mov
repz
pop
or
adc
and
dec
xchg
push
add
movs
push
adc
inc
adc
add
and
pop
sub
test
and
rcl
test
and
xor
movs
mov
xor
pop
pop
cmp
leave
addr16
add
call
or
xor
nop
add
and
imul
mov
arpl
mov
jecxz
pop
ror
push
mov
add
dec
push
sahf
arpl
mov
pop
xor
dec
int3
and
loopne
aas
xor
or
rol
adc
xor
repz
dec
adc
jae
imul
and
add
push
sub
jb
pop
enter
sbb
leave
sbb
cmp
push
inc
or
xchg
out
sub
js
cmp
fwait
cdq
movs
es
sub
or
iret
xor
adc
dec
sub
mov
jns
adc
sub
or
sub
or
or
adc
pop
sbb
dec
adc
cmp
and
push
push
jle
pop
shl
push
add
add
pusha
and
sbb
ror
nop
sub
xor
(bad)
fdivr
and
fld
nop
jge
xchg
imul
and
jae
mov
nop
ret
sbb
xchg
dec
cmp
add
popf
sbb
sub
mov
push
push
aad
add
inc
or
stos
adc
jns
nop
add
pusha
dec
add
jae
and
lods
push
jns
enter
pop
test
dec
sbb
mov
and
pop
not
xchg
jl
add
ret
pop
nop
jb
les
xchg
sub
test
mov
(bad)
aaa
mov
cmp
xor
pop
adc
mov
cmp
and
add
jo
dec
mov
cmp
repz
add
cmp
or
shl
adc
and
and
pop
add
rol
xchg
retf
jae
inc
xor
xchg
out
xor
inc
add
dec
lods
adc
add
or
jmp
add
pusha
daa
adc
test
push
fwait
dec
loope
loope
aas
cmp
in
xor
push
or
into
and
push
xor
cmp
cmp
mov
add
jg
out
mov
popf
inc
cs
sub
sub
dec
xchg
imul
or
nop
adc
or
imul
mul
or
retf
pop
loop
xchg
fsubr
or
(bad)
in
xchg
or
add
mov
add
repnz
adc
xadd
add
and
mov
jb
rol
cmps
xor
xchg
arpl
xor
ror
sub
sub
dec
loop
mov
aad
iret
jns
addr16
cs
(bad)
and
adc
in
das
popa
adc
push
jg
cmp
sbb
(bad)
jmp
adc
mov
bound
adc
shl
cmps
sahf
inc
dec
and
sub
xor
call
jmp
and
inc
add
inc
xor
inc
les
push
mov
rcl
sahf
or
enter
xchg
add
sahf
pop
sub
inc
daa
int
mov
sbb
and
xor
push
mov
or
sub
iret
pop
mov
sbb
enter
dec
or
adc
push
and
and
add
sbb
and
mov
add
ror
jae
sbb
and
jno
xor
cmps
out
dec
in
push
xor
ins
or
sub
inc
imul
ins
add
out
jb
xor
in
pop
adc
pop
in
adc
xchg
cmp
add
test
push
stos
inc
mov
jb
pusha
ins
sbb
and
cs
repnz
inc
aam
jnp
stos
inc
movs
xchg
cs
ror
sub
ficomp
pop
enter
add
add
inc
cmps
adc
push
pop
add
ss
xor
cwde
inc
and
push
or
or
xchg
in
sub
sahf
imul
inc
and
xchg
jb
add
sbb
dec
cwde
add
nop
or
mov
prefetchnta
add
inc
dec
push
mov
cmp
or
pop
cmp
inc
add
or
or
dec
push
inc
adc
pop
adc
lods
and
es
add
push
in
enter
dec
fcom
mov
sub
adc
fmul
push
cdq
push
or
into
push
xor
shl
add
cs
push
jae
fnstcw
test
mov
push
pusha
sahf
add
or
xchg
out
je
add
cmp
sbb
sub
mov
(bad)
add
cmp
mov
repnz
xchg
bound
mov
inc
ss
cdq
sbb
add
test
mov
test
cmp
xchg
cmp
mov
shl
mov
mov
xchg
jns
es
xor
mov
stc
dec
add
and
sbb
add
inc
cmp
push
sbb
fild
es
pop
xchg
stos
jge
iret
pushf
mov
cs
psraw
mov
push
dec
xor
push
adc
xchg
jb
loopne
xchg
xchg
push
iret
pop
dec
pop
add
es
and
lods
test
adc
test
scas
dec
adc
es
or
and
outs
ffree
cs
and
in
and
repz
rcl
out
and
jns
cmps
add
sub
push
pop
xor
inc
mov
push
je
test
jg
add
adc
cmps
std
sbb
mov
pop
and
dec
pop
xchg
icebp
movs
cmps
ror
dec
cmps
fdivr
and
enter
lea
or
xor
xor
cmp
sbb
push
jl
and
pop
dec
daa
mov
cmp
and
pop
adc
sbb
adc
push
je
xor
xchg
pop
push
xchg
inc
repz
test
cmp
and
inc
movs
adc
jae
sub
and
mov
mov
or
scas
inc
pop
imul
push
pop
dec
iret
int3
call
adc
cmp
fsub
cmp
adc
nop
xor
loope
pop
push
test
jmp
es
xor
jle
xchg
pusha
add
pop
dec
or
dec
inc
sbb
push
je
jnp
ins
sbb
retf
wbinvd
dec
push
jb
and
or
fsub
pusha
adc
inc
jle
sub
and
imul
arpl
out
and
inc
sahf
or
loopne
popa
stos
or
out
adc
push
mov
cmp
ret
test
out
data16
addr16
sub
push
push
out
dec
or
scas
sbb
and
movs
fwait
or
ret
adc
pop
add
push
test
push
jmp
push
ins
xor
sbb
inc
adc
cmps
sbb
cmp
nop
cs
mov
lods
sub
movs
xchg
cmps
adc
lds
pop
cmp
(bad)
sub
cmp
pop
dec
leave
repz
xchg
adc
push
lsl
jge
fcomip
adc
stc
add
inc
pop
and
dec
sahf
out
add
mov
movs
aaa
nop
xchg
xchg
retf
sub
shl
add
add
mov
leave
pushf
sub
call
add
add
pop
push
imul
inc
pop
adc
sbb
add
add
out
das
adc
adc
fdiv
dec
out
nop
addr16
dec
cmps
das
push
push
push
inc
or
xor
call
mov
or
outs
fdivr
(bad)
mov
movs
lea
jnp
enter
pop
shr
mov
pop
into
pop
or
adc
cdq
les
repz
cmp
inc
or
enter
nop
mov
inc
std
add
add
lods
out
or
mul
rcr
inc
sub
xchg
sub
xor
jae
out
push
ss
add
nop
arpl
inc
cmp
sbb
pop
adc
or
dec
xor
loop
or
iret
add
test
xchg
sbb
in
lahf
add
inc
push
mov
call
mov
xchg
in
xchg
out
add
sbb
or
cmp
push
add
xor
(bad)
sahf
adc
retf
leave
xor
pop
add
sub
add
sub
jns
add
add
pushf
inc
pop
add
jo
or
sbb
pusha
pop
sahf
dec
pusha
stos
test
xchg
cs
or
pop
mov
jnp
sub
ins
arpl
cdq
loopne
sbb
jne
or
inc
sbb
gs
add
xchg
hlt
xor
jmp
push
and
dec
sub
inc
(bad)
inc
daa
inc
or
lods
and
xchg
inc
mov
and
aas
aam
add
xchg
sbb
stc
or
sbb
call
adc
or
inc
sub
jno
pop
dec
minps
pop
lods
adc
sub
fld
dec
jge
repnz
xor
movnti
fild
and
or
es
xor
shl
ins
sbb
sbb
jb
mov
sbb
or
sub
inc
or
xor
mov
sub
jo
leave
jae
sbb
add
inc
daa
xchg
retf
jb
push
pop
and
ins
pop
daa
sbb
sub
arpl
xor
adc
adc
lods
dec
sahf
dec
push
or
ret
and
push
(bad)
or
or
push
pop
pop
sub
or
mov
es
jne
pop
pop
sbb
push
xchg
arpl
or
shl
jnp
test
rcr
ins
push
and
jb
int3
jmp
and
jns
mov
push
inc
jne
cmps
and
adc
push
test
out
out
fld
sbb
adc
pushf
adc
or
add
repnz
mov
cmp
xor
xor
jo
add
pop
and
inc
or
nop
pop
xchg
bound
movs
jns
lods
xchg
xchg
xchg
out
adc
xchg
jae
or
or
sbb
sbb
sub
pusha
sub
dec
and
mov
push
les
fstp
add
jns
and
iret
repz
or
arpl
je
and
push
stc
sub
xor
and
push
xor
mov
or
xchg
out
js
push
repnz
xor
push
lods
call
cs
out
fist
pop
or
in
pop
dec
out
dec
add
fcom
nop
in
sbb
test
and
add
sbb
cmp
jp
in
xchg
adc
push
arpl
enter
fisubr
inc
and
xor
xchg
inc
imul
lds
sbb
jg
and
mov
adc
les
xchg
fbld
adc
add
sub
sbb
push
add
add
adc
jo
call
push
(bad)
daa
std
cmp
or
sbb
pop
xor
cmp
int
adc
mov
movs
add
pushf
cmp
add
mov
ins
add
add
adc
gs
cmp
add
sbb
mov
and
xchg
out
jp
adc
add
and
push
push
xor
inc
sbb
inc
inc
adc
lds
jns
xchg
add
sub
jb
or
sbb
push
or
push
inc
pusha
xor
pushf
sbb
pop
pop
pop
cs
adc
movs
clc
and
sbb
cmp
pop
and
(bad)
mov
test
ins
mov
cmp
imul
cmp
mov
js
fcomi
and
mov
out
cmp
je
jae
sub
cmp
sbb
add
mov
mov
cmps
dec
imul
and
sbb
(bad)
popa
add
fwait
scas
sub
sbb
aad
lods
jb
and
and
cmp
sub
adc
stc
and
adc
(bad)
repnz
iret
and
sbb
push
push
or
mov
cli
movs
jb
or
adc
or
cmp
push
mov
xor
nop
out
es
mov
jne
xor
pop
push
pop
xchg
cmp
cmps
adc
jmp
and
repz
(bad)
xchg
cmp
xor
and
xchg
sbb
cmps
dec
add
popa
or
ss
call
cmp
xchg
ja
in
add
ret
cmp
aam
sub
sub
add
lds
mov
je
outs
mov
lds
add
xor
mov
icebp
inc
add
push
mov
fwait
popa
xchg
sbb
jnp
mov
dec
push
movs
bnd
bound
repnz
rcl
add
xor
repz
je
cmp
test
sub
jne
adc
push
sub
mov
mov
dec
pop
movs
ror
adc
xchg
xchg
cmps
jb
aas
push
ud2
sub
dec
dec
sub
inc
or
pop
inc
push
sbb
cs
add
jae
fist
dec
add
pop
xchg
bound
imul
lock
int
fs
and
jmp
adc
cmp
scas
add
imul
or
add
xor
push
inc
imul
add
add
in
rcr
fsubr
dec
sub
push
adc
or
adc
sub
cmp
cmp
push
fistp
out
shl
or
daa
add
fsubr
adc
jns
loope
sub
add
jecxz
sbb
ja
mov
xchg
sbb
inc
pop
outs
xchg
dec
add
cmp
dec
fistp
inc
mov
and
outs
dec
inc
and
test
cwde
add
adc
xor
mov
dec
sub
and
or
retf
dec
add
xchg
cmp
mov
xchg
mov
adc
mov
dec
and
(bad)
shl
mov
dec
sub
push
movs
sub
xchg
retf
pop
in
popa
or
adc
inc
pusha
and
sbb
lea
pop
pop
push
or
cmp
pop
inc
test
cmp
scas
adc
add
or
and
cmps
mov
test
cmp
mov
mov
sub
test
jnp
mov
inc
push
ja
add
leave
test
jne
sahf
out
shl
or
or
ret
loopne
or
and
mov
inc
gs
mov
pop
cli
dec
adc
or
jns
or
sbb
shl
or
ret
leave
repz
popa
pusha
neg
sub
or
pop
pop
mov
adc
dec
and
mov
cmc
inc
gs
push
je
neg
pop
sbb
push
and
je
mov
sbb
cdq
scas
stos
in
sbb
dec
inc
gs
pop
cmp
enter
or
dec
jns
adc
pop
sbb
mov
mov
(bad)
icebp
ret
dec
add
inc
cmps
cdq
or
cmp
repz
jl
popf
inc
dec
leave
pop
sub
sbb
sub
mov
or
adc
jns
pop
add
repnz
lock
push
cmp
xchg
mov
adc
test
xchg
out
mov
adc
adc
add
das
mov
dec
sbb
add
add
cmp
test
or
test
adc
push
push
iret
push
test
retf
xor
or
stos
fwait
xchg
mov
xchg
inc
push
pop
dec
xor
or
xchg
out
or
aas
xor
or
push
pop
or
mov
inc
ins
sbb
dec
cmp
adc
adc
test
and
loopne
dec
loop
mov
jl
sahf
cmp
and
add
add
sub
or
inc
call
in
pop
push
mov
ror
pop
nop
es
dec
retf
ins
add
or
add
jo
pop
xor
inc
sahf
dec
or
leave
cmps
inc
dec
or
push
jnp
addr16
add
ja
pop
mov
imul
xor
retf
push
sub
mov
pop
dec
movs
outs
mov
cmp
adc
punpcklbw
adc
or
lea
ror
xor
sahf
add
or
or
mov
cmp
lods
xor
sub
push
dec
sbb
sbb
inc
adc
sahf
cmps
mov
sub
push
in
pop
add
out
test
add
pop
and
xor
adc
rol
or
sbb
add
int
pop
jbe
dec
pop
jb
shl
mov
and
out
cmp
inc
jnp
clts
push
repnz
call
pop
push
mov
sbb
or
jae
dec
add
xor
pop
pop
iret
(bad)
and
dec
js
je
jecxz
sub
jmp
rdpmc
mov
stc
jmp
mov
dec
pop
lds
dec
sbb
sub
(bad)
sbb
stos
sub
xlat
add
dec
scas
inc
cmp
and
ror
or
and
xchg
adc
jo
cmp
dec
mov
cmp
enter
push
or
repnz
or
cmp
push
cmp
(bad)
and
inc
adc
add
rol
add
xor
jbe
dec
adc
or
xchg
xor
pop
mov
out
arpl
add
popf
mov
in
cmp
sub
push
inc
fs
pop
jb
and
in
ret
adc
cmp
adc
cdq
inc
and
xchg
ins
mov
call
(bad)
(bad)
jne
xchg
cmp
push
jo
add
shl
sub
jecxz
in
dec
popa
dec
or
iret
push
mov
mov
and
dec
and
dec
popa
inc
xchg
and
inc
in
pop
rcl
push
cmp
sbb
or
les
inc
dec
cmp
adc
lds
xchg
add
cmps
or
jge
stc
add
sub
int3
daa
mov
add
and
fcom
js
sbb
adc
aam
adc
mov
pop
aam
sub
jo
pop
cs
cmps
aaa
inc
or
(bad)
pusha
add
dec
pop
outs
sub
push
sbb
fld
mov
pusha
pop
push
fisttp
cmp
jae
add
adc
mov
sbb
je
xor
aam
and
cdq
adc
push
das
cmp
dec
gs
add
xchg
fs
test
xchg
mov
inc
cmp
in
jns
adc
push
icebp
jo
ffree
xchg
or
add
ja
aaa
or
lods
loopne
test
jl
inc
sub
leave
leave
repz
scas
sub
cmps
outs
and
mov
inc
push
sahf
out
aam
sub
adc
fmul
pop
xor
mov
cmp
les
fistp
xchg
pop
gs
sub
movs
jo
adc
mov
es
pop
mov
push
es
sbb
iret
ror
jp
adc
inc
pop
push
repnz
adc
mov
push
add
adc
jae
sahf
sub
inc
jbe
cs
or
mov
dec
push
in
jmp
popf
daa
cmp
cmp
nop
mov
cmc
rol
enter
cmp
or
and
cmp
sbb
and
fadd
cmp
(bad)
and
adc
add
and
pop
mov
retf
neg
call
int3
sbb
xor
push
mov
out
push
pop
or
out
adc
shl
push
dec
sub
es
dec
(bad)
pusha
rol
addr16
sbb
mov
test
push
rcl
push
xchg
sub
pop
xor
or
jo
push
loop
add
push
pop
push
sub
sub
sqrtps
dec
call
scas
push
and
or
push
inc
in
xchg
call
call
push
enter
mov
mov
jmp
iret
xor
mov
lock
cmp
sbb
nop
dec
and
cmps
or
je
mov
retf
aaa
mov
xor
cmp
sbb
sub
out
sbb
adc
sbb
add
adc
and
push
inc
sahf
out
push
or
push
or
inc
add
jmp
fist
retf
nop
push
xchg
mov
mov
push
sbb
mov
sbb
xor
dec
add
(bad)
outs
lods
mov
fcom
jmp
push
or
cmps
cmp
sub
add
adc
test
pop
or
add
adc
cmp
push
fwait
dec
add
fild
mov
cmp
inc
push
cdq
mov
fldenv
and
dec
inc
stos
jge
and
mov
ins
js
xor
sbb
maskmovq
div
lea
movs
mov
sub
add
adc
repnz
adc
dec
pop
add
xchg
sub
push
and
dec
xor
inc
stos
dec
fwait
sub
mov
or
enter
ret
jo
bound
add
bound
sub
and
push
cmps
test
adc
sbb
inc
retf
jns
sbb
or
add
fs
inc
and
das
popa
lods
in
and
or
test
dec
xor
inc
and
clc
dec
pop
adc
imul
cmp
push
adc
arpl
or
cmp
repz
loopne
add
inc
push
dec
or
and
and
outs
ret
add
xchg
les
pusha
dec
inc
mov
sub
adc
out
or
xor
push
jae
inc
inc
xor
or
add
inc
xchg
repz
mov
repnz
or
push
rol
imul
or
add
jne
inc
rcr
imul
dec
mov
scas
inc
inc
sbb
sar
inc
lods
or
sbb
jmp
cmp
loop
or
cdq
pop
cmps
scas
mov
sahf
out
inc
or
or
(bad)
(bad)
mov
push
dec
cmp
add
lahf
sbb
dec
dec
enter
dec
je
add
in
add
mov
adc
push
or
out
(bad)
aas
cmps
and
dec
shr
inc
dec
daa
rol
das
and
xchg
es
cmp
push
adc
sbb
pop
pop
test
jne
mov
dec
daa
push
jb
pusha
sbb
movs
sub
xchg
fs
repnz
cmps
cmps
adc
mov
sbb
push
dec
sub
(bad)
je
and
push
inc
cmps
imul
sub
xchg
pop
lahf
pop
or
push
adc
test
push
or
pop
stos
add
dec
popa
add
and
cmp
sub
xchg
dec
retf
jb
pop
sbb
jge
repnz
sub
adc
scas
out
inc
es
dec
rcr
push
pusha
add
aad
add
xchg
mov
jge
enter
and
cmp
enter
adc
add
or
iret
repz
sbb
or
jae
jne
add
xchg
movd
leave
cmps
xchg
inc
sbb
dec
jne
xchg
iret
repz
and
push
push
sub
leave
rcr
and
pop
bound
inc
lods
cmp
fwait
mul
push
xor
add
sbb
test
arpl
adc
dec
sahf
mov
test
push
dec
sbb
scas
ds
jmp
add
dec
mov
adc
gs
xchg
rol
xor
(bad)
jnp
push
add
or
retf
sbb
adc
and
and
mov
inc
sub
lods
sub
or
inc
data16
jp
sar
mov
jecxz
stc
and
push
push
mov
iret
cmp
inc
pop
xor
and
and
sub
ins
sub
retf
add
jns
out
or
xor
and
daa
repz
and
in
push
and
mov
add
dec
add
and
or
or
es
pushf
push
fwait
nop
outs
test
cmp
mov
jns
gs
je
or
xor
pushf
out
adc
mov
test
add
test
mov
stc
adc
dec
shr
push
ficom
adc
mov
xor
xchg
mov
dec
adc
sbb
inc
repz
adc
or
push
mov
mov
ss
mov
adc
and
adc
mov
xor
xchg
inc
cs
and
das
sbb
push
sbb
xor
push
cmp
imul
inc
sahf
out
cld
sub
and
sbb
shr
lea
adc
dec
cmp
mov
xor
add
or
mov
and
adc
lods
cs
and
cmp
xchg
and
or
mov
sub
lock
add
mov
popf
and
rol
pop
xor
mov
add
mov
mov
imul
cmp
xor
cmp
xor
pop
add
int
daa
popa
mov
cmps
dec
pushf
and
and
or
prefetchwt1
ja
push
mov
aad
test
push
or
or
int
xlat
ret
in
or
sbb
out
aas
mov
ret
popa
out
and
pop
call
imul
aam
push
mov
test
mov
xor
jns
adc
push
repnz
sbb
pop
test
mov
mov
jns
add
nop
out
sbb
popa
sti
xchg
adc
jns
jo
mov
push
xchg
adc
cmp
jb
add
(bad)
or
dec
mov
and
or
shl
lods
fisubr
xchg
xor
ret
adc
movs
jno
add
inc
and
outs
pop
mov
sub
leave
or
jmp
pushf
addr16
loop
aas
inc
cmps
sub
add
or
jnp
and
pop
add
mov
jns
cmp
dec
repnz
sahf
add
adc
ins
jmp
add
or
lea
lods
in
adc
jo
push
push
mov
je
add
mov
leave
test
pusha
lea
scas
repnz
xor
adc
push
ss
cmp
mov
cs
test
imul
adc
cmp
inc
sahf
out
sub
xchg
mov
rol
les
xchg
movs
inc
popf
imul
inc
add
mov
sbb
adc
or
pop
mov
das
add
add
movs
add
sbb
stc
pop
sahf
out
push
inc
sub
push
sub
mov
nop
mov
jmp
das
and
repz
add
pop
xor
and
fst
adc
ror
into
repz
arpl
xor
jns
cmp
and
add
add
mov
sbb
pusha
push
ja
inc
retf
out
pop
adc
or
nop
movq
adc
loop
mov
sub
inc
dec
push
test
adc
sbb
outs
adc
inc
cmc
jns
or
movs
scas
in
jne
adc
test
movs
test
jae
gs
inc
xchg
imul
sahf
inc
sub
or
and
mov
sahf
retf
adc
ss
xor
add
imul
dec
adc
in
test
adc
in
or
mov
jp
sbb
dec
inc
das
enter
mov
daa
lahf
mov
cmp
and
dec
pusha
adc
adc
xor
or
inc
sahf
repz
pop
ret
loopne
cmp
test
cmp
test
dec
fldenv
sti
and
xor
jle
movs
stos
xor
lods
sti
adc
mov
push
pusha
add
add
mov
outs
sbb
fcom
sub
test
fwait
and
or
push
icebp
xchg
mov
mov
push
sbb
aam
cmp
xchg
ret
test
rcr
add
aad
inc
adc
dec
xchg
xor
outs
or
pop
inc
adc
cmp
rcl
daa
or
jae
repz
stos
add
cmp
lea
and
adc
push
and
popa
pop
xchg
test
cmp
mov
jns
orps
rol
xchg
test
je
push
mov
imul
popf
xchg
sahf
xchg
push
mov
in
push
popa
pop
or
or
cmp
inc
fldenv
xor
xor
(bad)
cmp
xchg
and
mov
mov
xchg
inc
adc
xchg
aad
mov
or
jne
or
dec
xchg
or
xchg
sbb
pop
sbb
sbb
mov
jne
xor
cmp
xor
mov
dec
adc
lea
les
inc
xor
or
cmps
sbb
pop
and
adc
ret
mov
push
and
sbb
sub
xchg
test
jae
mov
repnz
push
or
inc
inc
lahf
popf
cmp
fcom
(bad)
xor
dec
jge
stos
gs
xchg
jp
je
push
and
and
or
xchg
stos
ret
(bad)
cmp
mov
jno
add
enter
jns
leave
(bad)
jno
adc
sub
adc
lahf
xchg
jo
(bad)
adc
and
and
and
cmp
push
sbb
and
push
sbb
cs
cmp
jg
add
or
and
add
add
add
pop
and
mov
and
out
adc
dec
sahf
cmp
movs
outs
adc
shl
movs
add
adc
in
jae
out
jge
push
or
jns
jno
mov
(bad)
adc
cmp
add
call
cmps
es
leave
sar
outs
add
repnz
jmp
dec
or
dec
cmc
mov
cmp
sahf
xchg
cmps
xor
add
cs
pop
add
leave
inc
adc
sbb
aaa
sub
shl
push
dec
mov
sahf
sbb
push
mov
push
adc
inc
and
xchg
and
push
inc
mov
sbb
pop
push
or
(bad)
inc
push
sahf
repz
mov
push
or
ror
add
xchg
push
mov
mov
mov
pop
enter
ins
adc
add
call
xchg
inc
xchg
addr16
inc
adc
dec
pop
shl
and
xor
or
ret
xor
in
xchg
adc
mov
cdq
dec
test
inc
inc
add
bound
movs
add
xchg
and
or
jns
add
inc
int
les
sub
mov
jno
or
enter
adc
imul
das
dec
pop
mov
and
(bad)
popf
pop
xchg
pop
add
test
mov
stos
stc
fwait
data16
arpl
inc
rcl
out
and
xor
push
cmp
add
adc
test
pushf
and
jo
adc
std
sbb
inc
add
cmc
je
dec
enter
adc
sbb
ror
cmps
pop
and
pop
push
inc
mov
mov
adc
mov
mov
nop
out
xor
jbe
mov
shl
add
stos
aaa
add
rol
and
inc
add
or
ins
sub
push
nop
mov
add
cmp
daa
mov
xchg
adc
push
jmp
inc
mov
or
jmp
mov
add
iret
movs
retf
push
mov
xor
ins
adc
cmp
aaa
xor
dec
sbb
shl
add
add
out
jb
ja
add
test
adc
sub
mov
ss
push
lea
cmp
mov
jl
pusha
mov
and
mov
and
adc
inc
dec
addr16
sub
imul
and
sub
sbb
and
add
sub
push
sbb
mov
cdq
and
push
dec
inc
je
inc
das
cmp
mov
inc
outs
or
and
mov
je
rol
add
sbb
sbb
xchg
jl
add
inc
mov
mov
add
test
inc
inc
xor
mov
inc
adc
push
popa
sub
pop
and
sub
mov
popa
ds
push
add
mov
iret
rol
inc
dec
leave
repz
and
mov
and
push
push
repnz
loope
and
lods
push
and
adc
adc
push
jns
jb
add
xor
pop
js
jmp
add
rol
pop
and
pop
jno
mov
cdq
imul
push
stc
xor
cs
jmp
cmp
mov
stos
pop
and
inc
pop
dec
pop
xor
in
add
add
or
repz
pop
inc
add
movs
nop
aam
out
sbb
enter
imul
and
inc
imul
daa
sahf
ss
popa
inc
pop
mov
jmp
and
dec
push
cmp
pop
add
or
inc
add
mov
pop
repnz
pop
and
or
add
mov
adc
cmps
adc
aad
popa
call
add
xchg
xor
(bad)
mov
mov
test
mov
stc
iret
jae
adc
push
sub
xor
sub
adc
or
inc
and
pop
test
cmp
add
and
push
repnz
push
adc
lea
inc
sub
sub
add
scas
aad
xor
jb
ret
xchg
inc
loopne
xor
sub
push
or
aam
pop
dec
aas
sub
push
retf
stos
jns
and
add
mov
and
xchg
push
leave
push
jns
mov
inc
add
test
movs
mov
mov
shl
add
or
inc
sub
mov
and
outs
jg
push
shl
mov
push
inc
adc
test
cmp
push
adc
cmp
push
sbb
stos
and
nop
adc
and
push
jns
jge
and
adc
or
add
iret
add
or
mov
pushf
cmp
retf
fcmovne
pop
sub
and
or
sahf
retf
add
loopne
add
or
and
fcom
aam
cmp
xchg
je
pop
test
xchg
imul
sbb
(bad)
retf
in
and
add
aas
and
push
call
push
or
push
stos
ins
popa
add
aad
dec
sub
outs
cli
adc
repnz
jmp
or
sbb
xor
or
cmp
and
repz
add
adc
adc
and
inc
pop
sub
cmp
xor
pop
pop
pop
xchg
test
pop
or
dec
in
invd
mov
and
xchg
xor
sub
push
repnz
push
stos
in
add
and
or
mov
add
sahf
repz
push
sub
add
xchg
cmps
dec
xor
sahf
(bad)
retf
add
and
in
iret
repz
sub
or
push
pop
repnz
or
aas
mov
lods
dec
jnp
sbb
pusha
adc
popa
add
add
mov
mov
mov
jae
push
inc
add
jecxz
test
push
and
sub
shr
add
adc
pop
pop
in
or
and
add
movs
and
mov
repnz
adc
aaa
ja
adc
(bad)
adc
enter
push
sub
or
daa
aas
pushf
sub
cwde
dec
arpl
iret
xor
sub
push
adc
bound
mov
pop
je
shr
jno
fnstenv
add
push
out
or
out
test
lea
out
ds
add
xchg
xor
sbb
xor
push
inc
int3
punpckldq
sub
mov
inc
cmp
mov
rcl
cmps
fisttp
sub
pop
cmps
outs
into
test
int
test
femms
addr16
test
std
jp
push
jnp
dec
and
cmp
adc
or
add
dec
sbb
xchg
mov
(bad)
pop
dec
pop
test
cmp
add
or
sub
sub
rol
inc
loopne
and
xor
dec
ss
add
adc
inc
clc
gs
push
sahf
repz
cs
adc
dec
sbb
mov
xchg
or
ror
and
sbb
aaa
adc
aam
das
and
mov
or
add
add
mov
daa
xor
sbb
movs
addr16
add
arpl
inc
xlat
repz
sar
sub
push
xchg
and
dec
inc
add
add
sbb
test
pop
enter
xchg
jp
dec
jne
add
xor
xor
add
or
pusha
sbb
and
sbb
adc
push
pop
sbb
cdq
cmp
xor
dec
push
inc
pop
retf
sub
and
xchg
push
and
push
imul
mov
nop
rol
mov
add
xchg
lock
cmp
add
fwait
dec
nop
pop
stos
enter
in
sahf
lods
sbb
and
sbb
dec
mov
fwait
dec
dec
and
sub
or
add
push
sbb
stc
nop
sub
dec
cs
int
xor
in
and
jo
inc
imul
pop
test
mov
cmp
sbb
or
pusha
ret
pop
enter
push
xchg
pop
cmp
dec
cmp
and
inc
or
je
xchg
dec
pop
cmp
int
xchg
push
push
fld
add
dec
sub
or
arpl
sahf
repz
add
xor
mov
inc
movs
inc
sub
pop
rcl
xchg
add
test
inc
and
adc
add
fwait
xchg
add
cmp
pop
and
or
dec
leave
fld
jo
retf
sbb
ror
push
es
and
sbb
and
xor
in
fimul
ret
jns
pop
add
inc
jns
pop
jb
push
adc
in
mov
test
cmp
retf
les
lds
jae
sub
push
push
pop
push
jb
rcl
inc
and
add
mov
cli
bound
dec
cwde
jae
inc
dec
loope
xor
cdq
and
dec
rol
rol
or
mov
dec
movs
xor
sar
add
add
xor
arpl
pop
add
inc
adc
das
arpl
in
push
cdq
mov
neg
or
xor
iret
aas
sbb
and
outs
or
dec
fmul
cdq
mov
adc
sbb
or
and
call
or
jne
adc
rcl
daa
lea
movs
inc
sub
jae
and
inc
lods
call
pusha
es
pop
mov
aad
lea
jecxz
daa
fbld
add
xor
and
sbb
mov
push
repnz
retf
inc
push
adc
mov
pop
sbb
lods
and
cmp
adc
aam
mov
add
add
adc
test
leave
test
sbb
sbb
fld
movs
xchg
and
add
xor
mov
add
sbb
push
setp
push
xchg
xor
xchg
cmp
xchg
pop
bound
and
dec
rcr
mov
in
data16
push
push
push
dec
pop
add
fiadd
xchg
jne
inc
rcl
arpl
xor
sub
ds
or
popf
es
and
jne
or
add
and
test
inc
add
adc
add
mov
mov
mov
pushf
sti
or
xchg
mov
dec
pop
imul
dec
push
aas
and
inc
jo
dec
adc
add
push
and
xchg
inc
inc
adc
pop
stc
inc
inc
bnd
in
xor
push
and
popa
and
dec
stos
cs
push
pop
and
ret
xor
adc
add
or
push
xchg
dec
add
sahf
mov
cmp
inc
inc
add
mov
shr
add
inc
push
push
adc
daa
xchg
retf
xchg
xor
pop
cmp
and
test
xor
xor
iret
or
xchg
movs
ins
sbb
repnz
ror
ja
mov
jge
in
iret
repz
inc
or
repnz
sahf
xor
add
jne
jne
pop
pop
inc
out
loop
mov
inc
sub
add
or
test
sahf
and
xchg
mov
ja
jns
ror
inc
fwait
mov
ret
inc
or
and
jno
and
iret
stc
(bad)
sub
and
sbb
mov
xchg
shl
push
mov
pop
xchg
test
pop
sub
pop
mov
mov
sub
and
rcl
sub
iret
dec
cmp
call
(bad)
adc
add
adc
xchg
inc
xlat
xchg
in
sub
test
or
add
cs
pop
daa
cmp
dec
les
dec
sahf
repz
fwait
xor
mov
xor
push
(bad)
call
mov
push
int
ins
add
add
sbb
or
add
dec
repnz
popa
mov
je
cmps
add
adc
fild
pusha
inc
aas
xor
and
sub
inc
adc
pop
aaa
push
int
or
xor
sub
lock
adc
inc
adc
scas
mov
movs
or
in
pop
inc
and
add
les
jne
xlat
cmp
call
test
push
inc
stc
imul
add
out
inc
rcr
xlat
push
dec
or
inc
data16
and
shl
jge
sbb
(bad)
(bad)
enter
mov
fadd
and
cmp
sub
mov
dec
xor
mov
jne
adc
pop
cmp
inc
or
call
cs
sbb
sahf
arpl
push
sbb
push
inc
add
xchg
xchg
and
cmps
cmps
dec
aaa
add
inc
movs
movs
adc
jae
and
inc
arpl
push
adc
into
sbb
sbb
and
push
mov
and
sbb
add
pavgb
jo
and
dec
pop
ss
ja
(bad)
fwait
and
movs
inc
and
sub
cmp
loope
cmp
movs
repnz
inc
add
push
sub
push
mov
cmc
xor
and
cmp
dec
pusha
and
mov
sub
push
and
inc
loope
mov
add
into
add
pop
jle
and
mov
mov
push
adc
daa
push
inc
cmp
pusha
adc
sub
repnz
sahf
jae
sbb
and
rol
call
mov
jle
pop
out
sbb
cwde
ror
stc
inc
adc
push
inc
mov
adc
out
imul
sub
and
jecxz
test
test
xchg
mov
test
in
or
mov
sub
outs
or
mov
inc
sbb
adc
add
pop
jns
mov
sbb
loope
loopne
mov
daa
dec
out
dec
call
or
outs
pop
adc
push
xchg
fwait
push
dec
sahf
out
mov
or
push
mov
scas
test
adc
jae
push
cmovno
shr
cdq
dec
pusha
push
jecxz
ja
daa
and
push
cmp
popf
(bad)
and
stos
fmul
fst
add
xor
leave
repz
add
push
fmul
ins
xchg
daa
inc
sbb
and
inc
mov
movs
dec
xor
fs
pop
xor
(bad)
mov
call
push
adc
push
cmp
or
repz
sbb
jecxz
push
mov
retf
test
int
mov
sub
btr
enter
push
add
inc
push
daa
aaa
xchg
add
add
sub
push
sub
push
sbb
add
data16
jno
jbe
and
test
push
dec
mov
dec
sub
sub
leave
repz
sbb
cmp
jne
mov
sub
sub
add
pop
add
sbb
cmp
dec
xor
cmp
sbb
mov
and
adc
xor
inc
pop
jb
or
call
and
inc
xor
adc
add
mov
jecxz
jno
or
test
push
adc
mov
scas
ret
les
add
or
test
or
jnp
inc
or
repnz
add
mov
sbb
cmps
test
fiadd
cmp
xchg
push
mov
pop
add
dec
in
es
adc
xor
adc
daa
sahf
push
inc
rol
push
push
popa
mov
movs
add
sbb
push
nop
dec
sub
mov
cmp
dec
sub
add
adc
sbb
push
jno
jns
jae
mov
add
nop
dec
inc
loopne
push
mov
push
loope
or
aaa
pop
and
popf
inc
sahf
pop
jmp
jle
push
cmp
xchg
pushf
push
push
or
cmp
and
or
bound
movs
ret
dec
cmc
jbe
add
ret
mov
sub
pop
add
dec
xchg
sub
repz
or
inc
imul
xor
and
adc
push
inc
sub
xor
sbb
out
add
ja
adc
and
or
ret
dec
adc
inc
and
inc
xor
cmp
adc
and
dec
mov
mov
and
call
dec
add
nop
push
pop
icebp
test
sub
pop
dec
not
je
add
stos
std
scas
aad
out
fist
movs
xor
dec
pop
shr
xor
cmp
adc
scas
push
mov
add
push
nop
adc
xor
mov
xchg
push
ins
bound
push
sar
mov
push
cwde
cmp
rcl
cs
inc
add
inc
shr
push
inc
ror
mov
xchg
sbb
and
and
cs
mov
mov
or
adc
iret
push
ss
and
inc
and
and
sbb
js
or
and
lea
xor
and
in
bound
sbb
add
inc
sub
sub
(bad)
pop
inc
and
scas
cwde
cwde
cmp
and
in
test
xchg
loopne
sub
xchg
sahf
out
inc
or
xor
add
adc
and
adc
lods
push
adc
inc
xchg
cmp
and
or
jae
mov
mov
aaa
dec
lds
fwait
inc
sub
mov
inc
add
jae
sub
pop
(bad)
dec
dec
sbb
sahf
mov
add
pop
sbb
jb
pop
dec
and
add
icebp
sub
test
jmp
fild
es
aaa
push
ds
cmp
lea
push
leave
sbb
pusha
add
jmp
popa
rol
or
adc
and
adc
add
in
pushf
cmps
push
cmc
dec
mov
cmp
pop
aas
inc
mov
and
xchg
retf
ret
add
dec
call
sbb
mul
or
sub
sbb
sbb
or
sbb
test
and
or
bound
mov
enter
or
sbb
xor
or
sbb
cmp
rcl
jmp
cmp
adc
push
jb
into
aas
mov
test
daa
dec
fldenv
imul
add
add
pop
dec
cmp
sub
je
(bad)
and
sbb
mov
and
(bad)
inc
mov
cmp
int3
add
or
or
loopne
cs
imul
aaa
push
daa
inc
cmp
fnsave
push
push
enter
mov
lea
and
adc
cmps
daa
mov
and
retf
push
push
sub
sbb
aaa
xor
inc
fisubr
cdq
cmp
xchg
addr16
sbb
push
or
push
jmp
int3
(bad)
adc
jno
mul
dec
popa
add
and
and
adc
xor
lea
sbb
jno
aas
retf
repnz
mov
cmp
push
add
cmp
cmp
shl
push
sub
pop
call
mov
add
xor
sub
adc
repz
add
and
je
iret
or
and
sub
lahf
or
xchg
add
inc
call
pop
jb
and
ins
or
or
sbb
add
jmp
mov
out
ret
shr
popf
inc
ja
les
daa
sbb
ins
mov
and
outs
ds
sbb
jns
add
stos
xchg
jnp
pop
cmp
or
sbb
dec
and
lea
cmp
xor
les
add
adc
and
xlat
shl
sub
dec
gs
movs
or
mov
or
pop
test
es
and
shl
xchg
sub
adc
repz
icebp
adc
or
and
inc
add
neg
pop
and
mov
lahf
ss
sub
or
or
mov
mov
dec
inc
das
or
cmp
and
adc
lods
sbb
push
and
gs
inc
add
pop
adc
rol
jmp
sub
or
mov
mov
repnz
or
inc
or
xor
leave
dec
xchg
mov
jb
mov
dec
call
test
sub
iret
xor
retf
add
sub
repnz
scas
arpl
and
adc
jb
lea
cmp
rcl
mov
movs
jb
sub
in
adc
add
enter
test
add
add
or
es
pop
adc
rcr
jo
test
xor
movs
leave
adc
jmp
mov
sub
inc
jo
sbb
lds
rol
gs
repz
dec
push
add
xor
sub
xchg
in
rcl
frstor
mov
cmp
dec
push
cmps
inc
add
test
push
pop
enter
dec
or
lea
cmp
rcl
inc
dec
sub
sbb
mov
sbb
pop
pop
add
xor
xchg
mov
pop
adc
aad
push
leave
add
push
and
out
ret
push
sub
add
or
xor
nop
cmps
adc
mov
ror
or
xchg
retf
adc
xor
cwde
in
cwde
or
cwde
xchg
add
nop
arpl
push
push
adc
add
push
push
pop
stos
push
inc
retf
arpl
and
sahf
or
inc
adc
arpl
icebp
test
xor
rol
push
dec
mov
push
push
xor
cmp
cmp
or
pop
jb
aas
sbb
cmovl
sub
je
cs
iret
sbb
add
aam
rol
push
inc
inc
and
popf
inc
lods
std
jns
add
mov
mov
inc
or
loop
pop
add
and
pop
pop
enter
fistp
repnz
sgdtd
jge
or
or
fnstenv
mov
or
outs
jmp
inc
push
and
or
les
lds
add
and
sub
adc
and
push
sub
adc
add
and
pop
test
cmp
inc
adc
cs
cmc
sub
bound
nop
mov
iret
repz
or
adc
inc
or
push
and
rcr
add
push
fist
cs
pop
pop
sub
or
in
outs
repnz
sahf
xrelease
sbb
and
adc
inc
ins
or
jne
push
mov
push
and
ja
cmps
(bad)
sub
xchg
cmp
jmp
sti
shl
ss
adc
jmp
xor
cmp
int
fwait
jmp
or
sbb
adc
or
add
cmp
push
cmps
(bad)
dec
ins
mov
and
xor
mov
and
ja
add
fisub
add
push
mov
jge
add
xor
add
pop
sti
mov
inc
inc
add
hlt
dec
shr
les
fsub
je
inc
jl
stc
ficomp
push
jl
int3
out
shl
add
movs
ss
cmp
lahf
out
or
inc
mov
pop
jge
cmps
stc
test
js
cmp
cld
pop
mov
lahf
data16
mov
push
frstor
or
repz
dec
sbb
mov
sub
fcomp
movs
pushf
push
push
int
fwait
int
push
imul
aam
movs
mov
imul
mov
rol
out
jl
mov
xor
fldcw
sub
call
mov
push
out
mov
or
mov
mov
push
fcomp
push
mov
pop
ds
repz
and
dec
js
dec
or
out
fsubr
(bad)
cld
push
xchg
push
fdivr
test
inc
push
push
pop
xor
int
loopne
fcmovu
ins
fimul
jl
jnp
or
mov
push
cli
push
les
lea
out
adc
mov
mov
push
lock
pop
test
jl
inc
pusha
adc
or
mov
mov
or
push
mov
adc
call
push
push
mov
test
ds
fbstp
push
clc
jg
mov
mov
pop
dec
sub
push
cmp
mov
pop
push
xor
mov
ds
stc
dec
push
sbb
pop
lods
sbb
mov
pusha
(bad)
xchg
dec
pop
imul
out
jp
jns
mov
lahf
out
mov
mov
sahf
addr16
fsubr
bound
scas
jge
mov
aam
push
int3
pushf
dec
adc
jns
jnp
add
data16
pushf
ins
sar
inc
sbb
push
cld
push
or
iret
jnp
fdivr
push
mov
popa
imul
inc
mov
mov
mov
clc
push
adc
adc
addr16
push
mov
std
in
cld
add
push
and
inc
dec
sub
rcl
sahf
out
inc
adc
fsub
clc
fidivr
movs
pop
data16
in
push
mov
stc
(bad)
mov
sbb
dec
push
mov
pop
fwait
out
ds
and
and
push
or
imul
push
cmp
call
fild
cmp
lock
rcr
ins
outs
fsubr
jl
iret
repz
sbb
addr16
ds
cs
pop
mov
xchg
xor
dec
mov
out
mov
(bad)
les
fcomp
adc
and
mov
mov
push
clc
mov
mov
sahf
imul
int
and
jle
push
sar
dec
call
cmps
fnstenv
mov
push
sbb
push
fsub
in
repz
ins
mov
ins
in
int3
and
and
add
les
or
pop
mov
imul
dec
es
push
dec
ins
dec
push
ins
push
inc
inc
neg
inc
push
cmp
push
cwde
push
jnp
jnp
nop
pusha
inc
jle
push
test
cmp
cs
push
sbb
pusha
mov
push
fsub
xor
out
movs
popa
jnp
repz
push
push
mov
lods
pusha
xor
xor
in
push
cld
out
call
mov
shr
enter
sahf
sar
push
mov
(bad)
push
repz
test
in
push
push
push
dec
cmp
mov
stc
xor
clc
call
ds
cmp
outs
push
call
xor
neg
movs
ds
je
fmul
lods
sub
cld
sti
xor
repz
inc
inc
or
call
cdq
push
out
lahf
out
ins
push
cld
xor
cmp
or
ds
mov
aas
push
push
test
js
nop
dec
mov
call
pop
aam
ins
out
sar
arpl
cmp
imul
into
test
test
test
mov
in
je
xor
jnp
inc
sbb
mov
ss
mov
sar
enter
xor
push
in
test
adc
out
stos
sar
in
sbb
push
inc
out
int
imul
fdivr
push
mov
ja
mov
mov
loop
sahf
push
dec
mov
lahf
cwde
sub
push
cmps
jge
cmps
shr
push
clc
aam
push
movs
int
sar
adc
mov
imul
push
add
inc
ins
ds
mov
test
sti
xor
fist
push
fld
in
fdivr
push
adc
into
data16
out
repnz
call
neg
jnp
pop
dec
pop
mov
mov
add
push
fs
repz
imul
xor
int3
xor
fs
ficomp
push
call
out
cmp
in
push
mov
jnp
idiv
fdiv
push
js
push
push
xor
adc
xor
sahf
sar
lods
push
and
out
pop
sti
push
xor
cmps
add
in
xor
mov
out
jns
test
mov
pop
adc
cmps
fnstcw
adc
in
test
mov
mov
mov
jbe
scas
daa
push
sub
push
cmp
or
je
int3
iret
repz
jl
pop
push
push
dec
sbb
mov
inc
mov
ret
(bad)
xchg
lds
push
pop
sahf
push
mov
cld
fimul
rol
pop
pop
push
push
push
add
sti
fisub
jb
into
sbb
ins
mov
out
mov
cmp
inc
out
outs
fwait
pop
push
adc
sti
push
xchg
inc
jle
out
xor
mov
ss
push
jl
dec
lock
and
sar
addr16
pusha
mov
addr16
xchg
lds
popa
out
int
xor
sbb
push
in
retf
push
mov
call
push
test
push
lahf
es
push
rol
push
mov
sub
cmps
stc
xor
cmp
or
(bad)
inc
mov
push
push
mov
in
push
dec
push
pop
into
sub
cs
sar
loopne
test
pusha
cli
adc
(bad)
rcr
add
push
push
mov
push
rcl
arpl
(bad)
aam
js
out
jl
imul
xor
add
inc
push
jge
jl
imul
dec
jns
sti
xor
out
ins
add
scas
sub
out
mov
push
inc
dec
arpl
push
mov
out
pop
xor
add
pop
nop
cmp
test
jo
call
into
mov
fsubr
pop
cmp
imul
int
popf
inc
les
neg
cmp
adc
jl
push
jle
push
test
repz
idiv
jbe
into
test
pusha
mov
jge
dec
xor
push
fisub
lods
mov
leave
push
hlt
loopne
iret
jnp
push
mov
adc
loopne
shr
sar
out
jl
in
pushw
ins
repnz
sti
sbb
push
sahf
je
mov
out
pop
jl
sub
sub
cmps
stc
(bad)
inc
int3
ss
push
je
inc
in
jnp
loop
xor
mov
push
enter
add
jecxz
add
dec
dec
mov
aam
stc
lea
pop
and
fmul
ret
mov
adc
out
jmp
(bad)
adc
inc
jp
mov
mov
cmp
xchg
ins
jmp
sub
aaa
stos
or
aam
pop
xor
inc
cmp
mov
in
jne
std
mov
jmp
je
clc
inc
cmp
(bad)
fsub
pusha
mov
jle
clc
(bad)
mov
cmp
jne
mov
add
mov
push
or
and
jbe
jmp
sub
adc
and
pop
push
xor
sub
sub
mul
add
cpuid
mov
mov
jge
mov
push
fs
pop
shl
push
push
dec
push
xor
and
push
mov
std
dec
fs
and
push
pusha
adc
dec
xor
leave
test
in
fs
push
test
xor
or
mov
or
lahf
gs
out
xchg
and
mov
lds
mov
sub
add
fdivr
mov
adc
fbstp
out
clc
dec
sbb
cmp
shl
xor
bound
rol
cmp
lods
pop
in
add
dec
std
pop
cmps
xor
std
ss
mov
fdivp
fistp
loope
add
mov
rcr
lea
and
jbe
(bad)
neg
push
and
js
inc
stos
pop
ss
sub
pop
cli
pusha
push
push
aas
mov
sbb
jne
mov
mov
inc
inc
(bad)
lock
push
adc
add
and
pop
mov
sub
fs
je
scas
or
out
inc
push
or
pop
pop
pop
cmp
xchg
push
popf
nop
cmps
or
ret
push
pop
repnz
outs
add
fs
dec
add
jb
gs
nop
test
pop
ins
xor
inc
push
xchg
das
adc
add
dec
add
push
xor
sahf
in
mov
imul
aas
pop
add
and
cmp
(bad)
aas
fwait
and
enter
enter
fcomp
fxch
(bad)
(bad)
loopne
and
sti
loope
add
in
xchg
mov
push
mov
and
add
and
push
sub
add
ss
cmp
inc
inc
inc
inc
inc
inc
xlat
or
add
push
push
adc
push
or
sahf
adc
test
mov
pop
enter
mov
lods
rcr
and
xor
push
inc
jbe
fdivr
clc
imul
cmp
or
fwait
cmps
out
in
jle
shl
xchg
push
xor
cmp
iret
repz
dec
push
pop
fs
rep
je
test
pushf
movs
lods
mov
cmp
repz
int3
aam
in
ds
repz
hlt
cld
add
or
jns
out
sbb
sub
adc
jns
cmp
dec
push
xchg
fnstcw
xchg
xchg
xchg
xchg
add
leave
leave
in
xchg
inc
push
xor
fs
and
jl
cdq
pushf
mov
call
dec
es
sahf
push
fwait
mov
xchg
clc
enter
pushf
and
repnz
lods
mov
pop
add
push
jb
pop
add
shl
mov
xlat
shr
ja
inc
or
push
jae
add
pop
jg
mov
lods
inc
or
push
add
sub
mov
nop
(bad)
add
pop
ror
aas
add
add
mov
or
adc
(bad)
stc
or
add
adc
lds
imul
mov
sub
add
add
add
add
sub
add
add
pop
out
jge
add
add
add
or
sub
add
inc
adc
out
add
repz
hlt
cmp
inc
sahf
push
pop
ins
jl
repz
mov
cmps
stc
cmp
add
adc
xor
sahf
out
inc
push
fs
mov
add
cwde
xlat
fisub
ss
sbb
push
inc
xor
add
add
xor
test
or
dec
rdmsr
add
imul
mov
fidiv
pop
jmp
or
(bad)
in
inc
xchg
add
inc
inc
nop
jne
pop
push
sahf
out
sahf
test
ror
in
int
jns
cld
or
and
cmp
repz
inc
push
pop
jmp
push
into
push
cmp
mov
pop
push
cmp
pusha
repz
rep
jl
pushf
mov
stc
cmp
int3
call
sahf
out
sahf
cmp
xchg
movs
jl
out
mov
xchg
repz
rcl
cmp
push
adc
imul
cmp
out
pusha
ins
test
(bad)
shl
or
iret
xor
pop
jo
cwde
cmp
repz
mov
sahf
cmps
stc
adc
jns
out
cwde
test
loopne
repz
hlt
add
cmp
repz
jl
pushf
mov
ds
repz
fsubr
add
out
inc
pop
jo
lahf
out
sahf
mov
add
sbb
inc
pop
je
cmp
xrelease
imul
out
je
cwde
lods
mov
rcr
xor
sahf
out
pop
js
movs
mov
shl
lock
sbb
repz
xor
adc
aam
add
jns
out
sbb
push
push
jl
pushf
mov
out
call
xor
out
sahf
push
pop
jo
pushf
mov
lahf
out
(bad)
fsub
add
jns
sub
push
ins
jl
jge
out
test
shl
hlt
popf
sahf
out
out
sahf
push
xor
jnp
out
xchg
mov
fdiv
dec
sahf
out
out
lahf
push
inc
pop
jl
push
pushf
out
lods
shl
push
iret
repz
adc
push
ins
and
int3
fdiv
mov
cmp
push
cmp
je
cmp
repz
mov
shl
jns
out
lock
sbb
inc
out
sahf
out
push
out
sahf
mov
fsubr
add
out
sub
pop
ins
jl
out
sahf
mov
cmp
jno
push
or
cmp
repz
dec
pop
jl
lods
rcr
clc
adc
sub
out
cmp
push
sahf
out
int3
in
movs
mov
jns
out
push
xor
pusha
js
idiv
out
mov
mov
sahf
out
cmps
push
cmp
fs
jns
out
pushf
mov
fmul
repz
lock
cmp
repz
mov
iret
repz
or
mov
iret
repz
je
pushf
mov
ds
repz
stos
and
jns
out
dec
pusha
je
lahf
out
sahf
movs
rcl
cld
sbb
sub
pop
jo
repz
repz
mov
int3
loopne
jns
iret
hlt
or
jns
pusha
je
mov
out
in
adc
sub
iret
repz
jo
pushf
mov
sti
cmp
enter
scas
pop
push
xor
cmp
repz
push
push
cmp
pushf
mov
fdivr
or
sbb
push
pusha
jns
out
jo
nop
movs
mov
jns
out
loopne
scas
outs
mov
and
sahf
out
cmp
jl
jns
out
pushf
mov
sar
ja
call
xor
jns
out
js
pushf
lods
popf
out
sahf
rcl
mov
mov
out
sahf
out
sub
push
pusha
js
out
sahf
nop
movs
mov
fdiv
fidivr
push
sub
sahf
out
sahf
fs
pushf
lods
mov
aam
clc
or
xor
push
ins
or
cmp
nop
mov
sahf
out
stos
mov
mov
sub
push
jns
out
fs
pushf
mov
jns
out
rcr
clc
or
jns
xor
ins
jl
jns
out
movs
mov
fmul
sar
cld
or
iret
repz
pop
ins
jl
repz
repz
lods
mov
cmp
cmp
mov
mov
cmp
repz
pop
ins
jl
iret
repz
cwde
mov
aam
hlt
sahf
out
ds
adc
cmp
sahf
out
push
push
jns
out
mov
repz
cld
or
sbb
cmp
cmp
repz
je
mov
repz
cld
or
out
sahf
cmps
and
dec
pop
ins
sahf
out
sahf
jl
mov
repz
jns
lock
repz
repz
fs
out
repz
cwde
lods
(bad)
fdiv
mov
iret
cmp
cmp
ins
test
repz
pushf
mov
in
adc
cmp
mov
dec
pusha
je
repz
mov
out
add
jns
out
ins
adc
(bad)
fsubr
clc
or
iret
repz
sbb
cmp
pusha
test
repz
lods
mov
cmps
stc
add
adc
push
out
sahf
out
adc
aam
add
mov
jns
out
je
cwde
mov
repz
enter
ret
sbb
cmp
repz
pop
jo
xchg
stc
cmp
repz
fsubr
adc
out
sahf
cmps
and
dec
fs
out
sahf
mov
cmp
repz
or
sub
repz
repz
test
cmps
stc
cmp
int3
loopne
add
adc
out
sahf
and
dec
push
out
cwde
movs
mov
fdiv
cmp
out
add
sbb
iret
repz
push
fs
mov
iret
mov
cmp
fs
repz
je
test
fdiv
sahf
out
ds
sbb
push
push
jl
leave
push
leave
leave
leave
sahf
out
out
retf
inc
pop
jns
out
push
repz
out
clc
or
and
iret
repz
inc
pop
push
iret
repz
int3
loopne
or
iret
repz
mov
dec
ins
cwde
mov
fdivr
and
cmp
sahf
out
je
mov
in
out
test
pop
js
cmp
out
enter
inc
fs
repz
mov
lock
repz
add
jle
cmp
je
repz
rep
mov
jns
out
rcr
dec
pop
sahf
out
sahf
je
cwde
lods
mov
jns
add
and
push
repz
repz
cmp
repz
add
cmps
push
cmp
js
stc
cmp
rep
mov
out
sahf
cmps
inc
and
add
adc
dec
push
mov
iret
repz
sub
fs
repz
mov
(bad)
call
sub
sahf
out
sahf
ins
sbb
idiv
lock
mov
out
sahf
cmp
jo
xchg
jns
out
test
aam
lock
repz
adc
inc
pop
iret
repz
jo
mov
pop
cli
cmp
or
jle
dec
add
mov
rcr
in
retf
sub
inc
sub
add
in
add
inc
xchg
rol
outs
mov
mov
sar
add
shl
fiadd
add
xor
xchg
jbe
outs
add
(bad)
xchg
add
in
rcl
dec
mov
add
mov
add
and
(bad)
xchg
lods
pushf
adc
and
fldenv
xor
jbe
in
inc
cmp
add
inc
dec
(bad)
(bad)
push
xor
in
mov
hlt
pop
add
push
fwait
push
push
mov
xchg
dec
cs
arpl
add
bound
add
data16
xchg
add
mov
test
add
push
sbb
cmp
push
add
pop
add
je
jne
in
in
ja
jns
shl
in
jnp
jge
out
in
or
and
loope
push
adc
std
mov
inc
mov
mov
movs
add
les
(bad)
in
fistp
pop
add
imul
add
push
add
adc
adc
adc
daa
sbb
call
daa
sbb
and
daa
sub
daa
bound
and
dec
and
dec
and
and
dec
dec
mov
dec
sub
push
aad
and
jno
(bad)
loopne
stos
fisubr
jmp
scas
fidiv
fidiv
push
add
idiv
sub
retf
mov
sbb
retf
repnz
sti
(bad)
repz
mov
mov
cmc
(bad)
test
stc
(bad)
jle
sub
inc
push
es
xor
add
call
lahf
push
xchg
mov
enter
std
call
loop
jecxz
in
in
out
out
call
add
rol
loope
icebp
jge
(bad)
(bad)
push
mov
retf
iret
adc
dec
mov
and
mov
jbe
mov
adc
in
inc
(bad)
(bad)
fidivr
xchg
mov
out
rcl
pop
(bad)
(bad)
call
popf
push
adc
push
(bad)
sbb
fs
xchg
cs
(bad)
(bad)
inc
jb
xor
enter
pop
outs
imul
in
jecxz
ret
and
out
movs
dec
jne
inc
test
clc
out
inc
iret
pusha
ins
and
xor
cdq
and
inc
scas
adc
dec
inc
or
dec
mov
pmuludq
ja
ins
movs
js
iret
sar
hlt
add
iret
repz
cmp
push
pusha
repz
rep
js
nop
pushf
fucomi
cmp
test
rol
leave
scas
fmul
repz
repz
leave
retf
into
repz
and
cmp
push
mov
aaa
rol
ss
inc
mov
mov
test
mov
cmp
push
int3
fsubr
push
mov
sar
push
adc
xor
aas
shl
push
retf
mov
jns
ins
push
js
pop
xchg
push
movs
outs
add
jns
mov
shl
fsub
call
das
jbe
inc
add
pop
mov
repz
enter
sahf
out
hlt
add
adc
xor
jns
out
push
fs
sahf
out
sahf
nop
mov
jge
idiv
cld
int
or
mov
and
mov
wrmsr
push
inc
into
dec
push
punpcklbw
mov
ins
dec
psubusb
mov
cmp
repz
movs
mov
int3
mov
mov
(bad)
setae
mov
mov
and
cmp
mov
sbb
push
fs
lahf
jo
pop
jl
mov
call
push
rcr
int3
fsub
push
clc
or
xor
rcr
dec
sub
outs
mov
lahf
cmp
inc
ror
pop
ds
js
ds
repz
pushf
push
adc
jns
fstp
mov
les
outs
in
mov
lock
(bad)
ds
adc
out
out
int
and
sub
cmp
clc
dec
clc
fiadd
push
ror
jo
jl
mov
retf
or
data16
shr
or
aam
rcr
daa
jb
sar
ror
ins
div
jb
sar
cmovs
pop
push
aas
cmp
shl
push
jl
out
ds
int
dec
loopne
push
lock
mov
and
iret
repz
inc
push
fs
add
out
pop
adc
sahf
xlat
imul
inc
out
sbb
add
(bad)
ja
mov
sbb
into
repz
adc
add
ds
mov
shl
xor
iret
jmp
jbe
push
inc
dec
pusha
and
das
lock
call
push
adc
dec
dec
dec
call
dec
dec
dec
jl
test
daa
iret
dec
mov
ror
fsubr
pop
dec
mov
repnz
add
or
mov
sbb
leave
leave
leave
xor
aas
int
leave
jl
or
movs
push
add
dec
call
outs
fsubr
jb
xor
sbb
jae
jb
dec
pop
sub
popf
jo
push
mov
call
shl
daa
and
lock
sbb
daa
daa
daa
daa
inc
pop
ins
js
imul
mov
daa
dec
mov
call
adc
dec
sub
int
jns
inc
adc
pop
bound
jecxz
call
outs
nop
lods
dec
dec
dec
dec
rcl
add
cmp
imul
sub
repz
cmp
push
pop
imul
test
push
pushf
int
clc
cmp
push
mov
test
add
fimul
mov
clc
cmp
cmp
push
cmp
cmp
pusha
je
mov
push
daa
mov
push
int3
add
imul
push
(bad)
xchg
add
in
stc
mov
outs
sub
in
push
push
out
test
adc
pushf
pushf
xor
call
cmp
les
nop
outs
imul
lahf
push
and
xor
cmp
jmp
jbe
mov
cmp
das
nop/reserved
xor
cmp
ds
push
jne
imul
push
int
ds
dec
lods
enter
xchg
jnp
(bad)
cmp
jl
cmp
cld
jnp
cmp
js
push
repnz
movs
add
stc
cmp
test
rol
hlt
cmps
cmps
frndint
cmc
(bad)
mov
and
popa
push
inc
data16
push
test
sahf
mov
jns
ds
sahf
test
push
push
push
stc
(bad)
push
in
stc
sbb
push
add
hlt
push
test
imul
push
and
iret
loopne
lahf
push
pop
add
rcr
sbb
les
stos
fiadd
fmul
mov
in
push
mov
jp
mov
add
push
mov
and
scas
adc
push
mov
and
lods
ds
push
lods
dec
pushf
fmul
mov
scas
je
nop
enter
pushf
fsubr
sub
cs
iret
xor
add
sub
imul
scas
setae
mov
add
jb
xor
adc
cvttps2pi
jb
jb
pusha
je
movs
out
mov
retf
fdiv
(bad)
in
enter
add
push
adc
push
sub
leave
leave
leave
leave
push
fs
mov
iret
leave
pushf
lods
mov
aam
daa
daa
daa
call
dec
in
stc
xor
mov
sub
cmp
in
dec
pop
ins
pop
mov
add
sub
pushf
int3
pop
add
fmul
mov
in
xchg
lock
sbb
int
in
inc
push
pusha
popa
daa
js
repnz
sbb
movd
nop
sub
cmpxchg
jns
sahf
pushf
in
or
and
out
in
xor
ins
mov
daa
mov
lahf
ficomp
daa
daa
daa
in
cld
or
xchg
sahf
xchg
xchg
sub
jmp
cs
add
mov
outs
into
shrd
sbb
jb
cld
adc
and
repz
xor
daa
push
mov
out
loopne
jg
mov
das
int3
adc
or
(bad)
dec
cmp
push
xchg
outs
sahf
paddb
(bad)
cmp
cmp
shl
sub
xchg
outs
xor
mov
(bad)
mov
xchg
xchg
xor
out
cmp
jnp
lods
push
mov
repz
fs
repz
cmp
fsub
in
hlt
or
push
sub
add
dec
js
cmps
les
mov
popf
cwde
ins
sbb
iret
jnp
push
mov
int3
addr16
movs
ins
je
out
outs
push
mov
push
mov
mov
inc
mov
and
mov
fwait
adc
pop
les
add
int3
add
fst
add
repnz
int
add
es
adc
or
addr16
ss
add
dec
cld
inc
mov
mov
sahf
or
repz
sub
lahf
adc
push
imul
and
jae
and
push
jmp
push
jns
mov
loope
daa
xor
or
sub
inc
repnz
dec
lock
mov
dec
xor
scas
loopne
adc
cmp
jns
fdivp
es
dec
push
cmp
jns
cmp
(bad)
ins
cmp
dec
stos
mov
ja
dec
ds
(bad)
xor
test
mov
cmps
popa
jns
inc
cmps
xchg
mov
outs
fisub
pushf
sahf
inc
daa
movs
repnz
push
jns
add
inc
pusha
jns
movs
or
cmps
pop
mov
(bad)
repnz
add
int3
jbe
add
retf
adc
dec
sbb
dec
pop
(bad)
sahf
dec
dec
in
mov
fwait
movs
xor
es
inc
lahf
jp
daa
iret
hlt
dec
sbb
cld
dec
xchg
mov
jmp
pop
push
es
iret
jae
jmp
or
push
adc
pop
xchg
cmps
out
bound
jmp
push
(bad)
outs
push
iret
mov
pop
daa
jp
dec
sahf
xor
add
adc
out
mov
aas
jns
dec
fimul
adc
sbb
pop
pusha
jbe
ins
aad
das
fs
mov
iret
ins
fbstp
push
and
xchg
jg
xchg
out
daa
test
mov
dec
sahf
jb
xchg
jae
jne
push
cs
jle
or
loope
js
out
lods
jns
in
call
es
daa
outs
xchg
retf
jnp
les
sub
imul
jbe
das
mov
enter
cmp
jns
inc
nop
cmp
add
ins
daa
hlt
out
test
ins
jns
(bad)
out
test
add
test
or
xchg
xor
mov
and
cmp
ins
js
jno
dec
and
es
xchg
jge
jbe
add
xor
lahf
cmp
mov
push
inc
es
ds
add
push
adc
addr16
pop
rol
xchg
fs
push
jns
ror
ins
(bad)
imul
xlat
daa
cmp
push
sahf
jl
adc
push
or
mov
or
loop
es
fidivr
cmp
daa
adc
cdq
lods
in
mov
xchg
aaa
dec
scas
jmp
dec
sub
and
in
pusha
jns
add
aam
icebp
out
sahf
or
jmp
out
jo
add
or
push
call
repz
clc
xor
or
xor
test
or
mov
push
scas
push
pusha
mov
mul
push
push
js
push
outs
push
pushf
push
jo
cmps
into
repz
fdivrp
jo
xor
push
lock
xor
repz
or
nop
jmp
jmp
xlat
loop
inc
xor
pop
out
iret
repz
das
push
push
jg
cmp
rcr
cmp
push
aas
push
mov
mov
or
lods
ja
je
ror
shr
push
rcr
jmp
inc
in
or
clc
mov
push
inc
or
aaa
mov
jmp
sub
dec
or
cmp
dec
inc
dec
das
push
push
pop
das
jo
mov
ins
das
movhps
js
out
fdivrp
xchg
lahf
push
mov
mov
imul
cmp
push
lahf
push
aam
fnstcw
lock
adc
add
cmp
repz
lahf
push
xor
inc
dec
loopne
pop
push
push
push
and
fs
pop
je
fdivr
jns
test
ja
test
sahf
ss
push
test
mov
push
fst
or
push
hlt
push
iret
cmp
rcl
sbb
popa
cmp
jns
cmp
push
sbb
inc
push
and
push
das
sbb
push
idiv
jl
call
repz
push
mov
sar
les
cs
dec
mov
push
mov
jnp
xor
and
inc
push
push
push
push
out
retf
pop
pop
push
js
xchg
nop
jns
out
push
jo
lods
mov
out
rcr
in
pop
and
push
sbb
push
push
(bad)
ds
repz
nop
call
and
pusha
pop
and
adc
repz
sbb
inc
pop
mov
pusha
adc
inc
sahf
cmps
jge
and
push
sbb
mov
push
sahf
test
fiadd
ins
push
shr
sahf
out
xor
mov
mov
pop
sub
push
in
mov
mov
sub
push
push
fnstsw
fnstsw
sub
push
jns
test
test
push
aaa
adc
les
(bad)
out
out
push
aam
xor
inc
push
iret
repz
fild
loopne
and
xchg
cmps
fidivr
push
xor
jne
in
pusha
das
das
pop
push
adc
fidivr
je
call
les
inc
xor
fidiv
les
cld
inc
xor
mov
xor
out
(bad)
and
lahf
dec
out
sahf
out
mov
out
sahf
je
dec
call
push
push
inc
movs
jns
fcom
xor
dec
hlt
dec
xchg
xchg
out
iret
dec
mov
lahf
inc
mov
out
movs
push
pusha
nop
push
iret
push
js
xor
idiv
mov
push
aas
cmps
pushf
iret
repz
push
test
inc
jns
sbb
cmps
inc
push
aam
and
cmps
jge
out
hlt
das
test
push
adc
sahf
aas
sub
dec
cmp
jns
pusha
loopne
je
jns
jnp
jbe
push
nop
ja
pop
movs
mov
jg
ja
fild
aam
sahf
jnp
pop
stos
inc
push
call
clc
inc
out
popf
idiv
lea
shl
cmp
inc
das
lods
push
scas
xlat
pop
mov
mov
push
js
fmul
xlat
mov
push
mov
fcom
fucomip
pop
cmp
call
cli
out
jnp
(bad)
mov
push
xor
push
sti
cs
test
push
jl
sahf
out
sahf
adc
cwde
and
mov
mov
shl
outs
icebp
cmp
lahf
lock
(bad)
dec
out
push
push
xor
lock
out
daa
sub
ins
push
cmp
repz
je
aas
push
movs
push
inc
iret
repz
(bad)
mov
jge
idiv
hlt
ja
lahf
push
or
scas
je
cmps
push
mov
out
sahf
test
inc
adc
out
lahf
push
pop
push
fild
fs
add
iret
cmp
push
push
jg
pop
push
scas
or
mov
or
push
test
pop
push
imul
or
push
loopne
jne
repz
and
hlt
das
or
add
ja
out
push
pusha
jg
xchg
es
iret
cmp
push
inc
pop
inc
inc
push
jg
fisub
or
push
test
push
out
jmp
push
cwde
das
adc
push
mov
jmp
iret
enter
jmp
fsub
ins
fnstsw
push
in
pop
xor
das
xor
jnp
imul
mov
push
push
pop
jnp
jnp
rol
ins
pop
rol
nop
pop
aaa
call
push
test
ror
cmp
push
pusha
jg
pop
aam
sahf
test
lock
cmp
xor
push
mov
push
sar
pop
repnz
mov
repz
sub
cmc
fdiv
out
push
or
repz
imul
push
inc
push
mov
fisub
fbld
aas
mov
movs
jge
mov
pop
mov
cli
int
in
imul
push
jbe
adc
into
nop
jnp
and
push
push
dec
pop
jns
imul
push
je
cwde
push
mov
out
enter
fwait
jbe
pushf
out
push
test
push
pushf
push
push
sbb
cmp
cwde
mov
jns
loope
popf
dec
push
cmp
pop
popf
das
out
mov
in
adc
sub
je
mov
mov
sub
mov
(bad)
mov
mov
shl
push
inc
bound
aaa
pop
mov
jns
jo
mov
pcmpeqb
mov
cmps
daa
add
ins
daa
iret
leave
jae
mov
clc
add
in
jne
cmps
pop
add
jbe
shl
and
cmp
test
test
test
outs
xchg
pushf
cwde
test
pop
ror
fadd
ins
aad
sahf
in
daa
test
inc
pop
mov
aaa
into
repz
setle
jns
mov
add
jbe
push
(bad)
mov
(bad)
in
cmp
cmp
xchg
pushf
mov
lahf
sar
addr16
mov
add
push
and
aaa
push
push
mov
lahf
invlpg
mov
shl
clc
or
repz
rcr
inc
pop
ins
iret
repz
adc
out
cmp
cld
or
adc
jns
out
cmp
pop
jo
out
sahf
out
pushf
lods
mov
sahf
aam
clc
or
sbb
cmp
repz
inc
push
fs
cmp
repz
daa
cmp
loopne
add
push
sub
jns
out
push
fs
lahf
out
sahf
mov
add
out
sahf
ja
push
and
push
sahf
out
sahf
fs
pushf
lods
mov
int3
fsubr
cld
jbe
(bad)
sahf
out
fiadd
xor
push
pusha
jo
sahf
out
jl
mov
sahf
out
in
or
sbb
jnp
iret
sub
call
push
pop
push
ins
cmp
cmp
test
enter
mov
in
add
push
sub
iret
repz
pop
jo
xchg
repz
rep
mov
shl
out
call
cmp
pusha
je
cwde
test
sahf
out
mov
fsubr
out
sahf
out
add
sub
push
or
js
popa
inc
sbb
leave
js
mov
push
jo
(bad)
(bad)
out
add
and
push
and
and
and
and
sub
(bad)
(bad)
and
addr16
and
sub
sub
and
jmp
cmp
aas
and
dec
and
(bad)
and
dec
and
push
and
pop
and
jmp
bound
push
and
ins
and
and
sbb
mov
(bad)
fild
sub
cs
xor
ss
and
inc
and
inc
and
(bad)
push
and
pop
and
inc
daa
sub
sub
aaa
cmp
cmp
lahf
test
inc
dec
dec
dec
push
push
push
push
pop
pop
pop
add
add
arpl
add
jmp
imul
jae
ja
jnp
add
and
call
and
push
mov
loopne
inc
das
fadd
mov
outs
mov
add
add
cmp
cmp
cmp
add
lods
aas
sbb
inc
mov
dec
xlat
cmp
add
enter
add
add
rcl
dec
bound
push
sub
push
aam
cmps
mov
add
pop
mov
shl
add
cmc
adc
mov
add
imul
add
mov
jno
pop
and
xchg
jbe
ja
and
jns
jp
jnp
jge
jle
(bad)
call
add
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
xor
add
cmp
cmp
stos
(bad)
(bad)
(bad)
cmp
cmp
cmp
add
inc
add
inc
add
add
add
jmp
add
dec
add
dec
add
dec
add
push
add
push
add
add
jg
(bad)
call
pop
add
pop
add
pop
add
pop
add
sahf
popa
add
arpl
fs
(bad)
(bad)
inc
add
add
imul
ins
add
outs
add
jo
jno
jb
jae
(bad)
(bad)
jmp
add
js
jns
jp
jnp
jl
jge
jle
imul
cmp
sahf
out
push
push
jne
lods
dec
add
or
xchg
shl
mov
add
es
xor
pop
int3
sahf
adc
adc
outs
add
or
inc
inc
add
ret
xor
mov
cmp
push
adc
sbb
dec
add
adc
add
ret
xor
inc
js
sub
and
ficom
or
add
sbb
or
pop
inc
xor
inc
push
or
(bad)
adc
xor
addr16
add
push
cmp
adc
adc
mov
or
sbb
test
push
loope
add
sub
xor
add
and
inc
mov
jb
or
adc
test
ret
mov
add
pop
inc
pop
inc
xor
and
add
or
mov
cmps
test
add
jp
ret
dec
test
loope
sbb
inc
xor
ret
and
or
xchg
and
inc
ss
or
test
pop
mov
rol
dec
push
dec
dec
push
push
push
add
push
and
push
out
das
aam
and
add
push
sub
loope
(bad)
sahf
mov
fild
pop
(bad)
jmp
mov
arpl
je
(bad)
int
daa
or
fcomp
out
mov
adc
not
mov
pop
and
sbb
mov
and
cmp
add
je
repnz
outs
add
push
test
xchg
push
or
and
dec
and
lahf
pusha
push
repnz
and
cmp
sbb
inc
jnp
ds
cmp
cmp
arpl
addr16
loopne
push
ins
ins
outs
outs
jo
jb
jae
jne
ja
jns
mul
imul
in
aas
in
dec
dec
dec
dec
dec
push
push
push
inc
push
push
push
push
push
pop
pop
pop
sbb
fldcw
out
or
jns
push
mov
mov
(bad)
xchg
jg
call
inc
sbb
int
push
xor
push
enter
dec
mov
add
or
push
and
aad
dec
or
test
add
lods
cmps
xor
scas
mov
push
fs
and
mov
aas
push
cwde
aas
push
test
xor
add
adc
jns
fidiv
push
in
jg
sbb
adc
and
push
xor
jle
inc
in
cmps
push
(bad)
cmps
retf
pop
sti
push
jo
mov
daa
loope
sub
push
add
les
fmul
hlt
sahf
cmps
stc
cmp
or
out
xor
dec
sahf
jnp
test
scas
push
adc
out
mov
sar
sbb
or
iret
sub
inc
sbb
iret
repz
add
push
pushf
cld
adc
repz
iret
jmp
pop
fistp
fmul
and
push
adc
call
dec
popf
out
inc
or
int
jns
xchg
add
add
dec
cmp
repz
cmp
push
repz
repz
iret
repz
pushf
mov
jns
idiv
mov
mov
mov
out
xor
dec
out
xchg
sar
pusha
(bad)
jl
jl
fstp
mov
pop
mov
and
xor
fdivr
or
punpckldq
or
or
fcmovnb
add
add
adc
sbb
nop
mov
outs
fist
xchg
or
adc
jecxz
not
or
retf
jmp
push
mov
inc
or
dec
dec
add
cmp
add
and
jne
stos
ins
stc
inc
cmp
adc
iret
imul
nop
imul
push
mov
pop
cmps
pop
dec
add
repz
out
clc
or
and
iret
jnp
cmp
enter
sahf
mul
cmps
call
sahf
out
xchg
rcr
push
and
cmp
xor
out
inc
pop
push
dec
pusha
mov
pop
clc
inc
arpl
push
push
int
in
out
imul
into
jb
push
and
cmp
repz
push
pop
je
repz
repz
movs
mov
shl
imul
je
and
inc
push
fs
xchg
jns
sbb
mov
inc
add
xchg
fstp
sbb
leave
aaa
add
inc
mov
add
dec
cmps
ins
push
mov
xor
aas
mov
mov
pop
fist
es
inc
inc
outs
out
mov
ror
fdiv
add
jnp
addr16
pop
add
outs
xchg
stc
mov
mov
sti
cld
std
(bad)
jns
out
inc
add
adc
(bad)
test
jg
cmp
cmp
mov
mov
sbb
xchg
adc
call
test
add
add
add
pop
sbb
and
adc
adc
push
jo
mov
daa
shl
add
lock
fld
mov
mov
or
ds
and
dec
pop
lock
std
add
cld
adc
and
out
sahf
out
clc
dec
neg
jns
div
test
cwde
jns
out
repz
mov
out
lock
clc
iret
repz
out
or
in
sbb
xor
iret
repz
inc
jmp
add
mov
mov
imul
sub
push
and
addr16
outs
movs
jmp
or
add
(bad)
cs
test
and
xor
shl
push
adc
push
push
inc
jg
out
test
mov
mov
xchg
or
(bad)
add
daa
daa
daa
daa
adc
adc
fld
es
xchg
xchg
xchg
xchg
push
or
adc
pop
add
outs
add
or
adc
dec
dec
add
sub
push
mov
push
mov
ret
cmp
jns
adc
pushw
ins
imul
jno
cli
sti
in
sbb
(bad)
call
dec
(bad)
fisttp
push
popa
stc
push
mov
xor
adc
mov
mov
gs
xchg
pop
scas
(bad)
lods
dec
adc
movs
ins
xor
(bad)
dec
and
bound
ins
shr
and
(bad)
faddp
movs
push
cmp
xor
dec
gs
outs
sub
and
push
popa
pop
push
jns
fst
fcomi
mov
mov
aad
mov
add
nop
or
push
add
add
cld
mov
pop
inc
sar
add
adc
sbb
out
fiadd
adc
adc
xor
pop
adc
mov
stos
or
fiadd
or
ins
test
xor
jle
and
ins
mov
adc
pop
jns
out
dec
push
or
or
out
adc
sbb
sahf
out
sahf
and
xor
inc
push
js
out
arpl
mov
mov
nop
or
mov
or
fcomi
daa
pop
lahf
inc
jns
add
sbb
and
dec
rcl
inc
into
popa
add
push
inc
push
add
repz
repz
sbb
pop
push
cmp
xor
(bad)
mov
xchg
daa
daa
mov
pop
pop
or
or
daa
daa
daa
or
add
(bad)
cmps
dec
inc
nop
arpl
fwait
sbb
push
sub
in
sbb
in
and
add
dec
add
bound
xchg
push
and
adc
push
inc
jmp
lds
adc
or
or
or
or
push
jge
mov
call
add
sub
add
fstp
movs
pop
fsubr
(bad)
adc
mov
fwait
mov
or
mov
or
dec
pop
adc
xor
ja
cmp
xchg
xor
push
adc
mov
data16
jmp
sbb
mov
sar
sbb
(bad)
or
pop
aas
mov
loope
les
repz
dec
mov
arpl
dec
sub
das
cmp
push
pop
cmps
jmp
jle
xor
ss
cmp
cmp
sub
rol
inc
add
enter
femms
(bad)
punpckhwd
adc
push
pop
and
(bad)
sbb
sbb
out
sahf
out
sbb
jns
and
and
and
jns
out
es
sub
sub
jns
out
sub
cs
mov
jns
xor
xor
pop
sbb
outs
out
mov
(bad)
punpckhwd
sbb
sub
ja
cwde
add
jmp
scas
imul
mov
cmp
pushf
ins
mov
jmp
scas
stos
repz
xchg
and
dec
stos
loope
jbe
and
jg
sub
popf
test
lea
mov
dec
dec
pop
in
test
cld
test
std
dec
test
add
mov
lahf
test
pop
in
cld
dec
jp
or
mov
mov
sbb
mov
ficom
sbb
daa
int
ror
xor
fnstsw
fnstcw
in
adc
cwde
pop
xchg
adc
(bad)
cmp
sub
mov
(bad)
outs
mov
out
daa
ins
mov
jmp
cmp
lods
fiadd
mov
outs
neg
out
sahf
jmp
es
or
data16
rcl
push
adc
retf
and
mov
xor
cld
push
das
les
push
inc
cmp
in
jle
sub
mov
dec
adc
scas
das
test
mov
jmp
jns
pop
(bad)
fimul
pushf
jg
scas
dec
lea
xchg
sbb
cmps
inc
pop
add
push
cdq
dec
test
push
fistp
cmps
or
pop
popa
pop
or
pop
idiv
call
ds
stos
enter
dec
push
pop
adc
scas
sub
bound
adc
ins
xchg
out
or
push
sti
dec
scas
and
int3
inc
mov
(bad)
(bad)
call
outs
adc
call
ins
call
xchg
je
adc
sub
jmp
sbb
and
mov
cmps
xor
sub
daa
adc
jge
push
mov
(bad)
call
loopne
cmps
std
iret
scas
(bad)
mov
imul
adc
data16
or
(bad)
(bad)
clc
cmps
xor
sahf
sub
push
sar
cli
mov
test
jmp
retf
sub
push
pop
dec
xor
xor
aas
xchg
nop
cmp
xchg
inc
push
sbb
in
inc
in
xor
xchg
or
sub
xacquire
cmp
loope
arpl
(bad)
(bad)
jg
outs
mov
jbe
(bad)
and
call
pop
jmp
push
xchg
inc
inc
pusha
(bad)
(bad)
(bad)
dec
jmp
and
pop
aad
cmps
cmp
mov
xor
jle
jmp
clc
dec
ins
sub
push
push
dec
stos
popf
out
add
sub
adc
and
je
(bad)
inc
cld
mov
xchg
out
add
je
outs
sub
and
not
lods
iret
(bad)
outs
imul
jmp
mov
ss
call
mov
mov
imul
cmp
mov
in
or
sbb
test
scas
lods
pop
mov
mov
outs
jmp
sub
push
scas
sti
out
retf
das
fld
lods
(bad)
(bad)
(bad)
(bad)
cmp
cli
and
inc
cmps
stos
iret
adc
or
je
into
mov
pop
retf
pop
(bad)
(bad)
(bad)
push
div
ss
cs
or
cli
inc
outs
pop
nop
pop
mov
add
xlat
mov
or
(bad)
(bad)
(bad)
jmp
pop
mov
dec
xchg
iret
sub
imul
vxorpd
inc
addr16
adc
(bad)
(bad)
call
(bad)
pop
push
aam
adc
std
dec
stos
sti
(bad)
out
adc
pop
in
call
scas
in
int3
retf
pop
push
cmp
sbb
mov
sub
ficom
call
(bad)
loop
movs
stos
cmp
cmp
jg
jge
push
ja
(bad)
(bad)
jl
loope
lods
in
sbb
aad
jo
inc
sbb
xchg
mov
(bad)
call
mov
jnp
dec
xchg
dec
stos
pop
jmp
jne
adc
(bad)
jns
sub
mov
jmp
push
or
adc
dec
pop
cmp
mov
inc
sub
dec
pop
xchg
sbb
cli
daa
sub
(bad)
(bad)
(bad)
call
push
push
popa
mov
sub
adc
pop
and
sub
mov
fucomi
jg
mov
(bad)
call
pop
adc
loopne
pop
movs
mov
nop
fcom
in
(bad)
(bad)
call
retf
fcom
addr16
jmp
push
add
iret
xor
fnstcw
(bad)
jmp
mov
lds
pop
in
in
call
dec
fisttp
in
imul
(bad)
jmp
sti
movs
dec
push
cmps
int
jae
push
push
xor
xor
xor
dec
jl
mov
(bad)
fldenv
sub
movs
shl
push
adc
xchg
and
xchg
mov
xchg
jl
inc
sar
mov
mov
mov
push
jl
mov
inc
retf
mov
stos
(bad)
(bad)
jmp
mov
and
push
out
stos
(bad)
icebp
fst
mov
(bad)
(bad)
(bad)
call
stos
rol
mov
sub
bound
js
int
(bad)
js
jge
and
scas
(bad)
and
(bad)
jge
(bad)
test
int3
jb
xlat
jge
xchg
inc
stos
in
pop
movs
dec
fidivr
iret
sbb
or
and
data16
stos
es
pop
dec
adc
inc
pop
cdq
in
sbb
jmp
call
xchg
imul
pop
jecxz
jb
sub
dec
push
mov
jmp
mov
arpl
push
dec
pop
sbb
mov
jg
push
adc
xchg
cmp
inc
or
add
stos
dec
jns
popa
std
jmp
push
aad
aad
cwde
push
mov
(bad)
mov
nop
mov
mov
(bad)
(bad)
(bad)
dec
xchg
push
jbe
xchg
jg
mov
push
and
pop
adc
loopne
(bad)
jmp
scas
dec
sbb
jmp
jo
jp
and
dec
pop
xchg
call
adc
popa
sub
scas
jge
cdq
div
(bad)
mov
lahf
daa
jecxz
sahf
xor
fwait
cmc
push
(bad)
jg
mov
(bad)
gs
and
adc
movs
push
cmps
sbb
xchg
(bad)
daa
repnz
and
jb
and
mov
es
scas
lods
fisttp
lock
or
mov
or
inc
mov
(bad)
inc
into
mov
std
and
sbb
mov
cmp
(bad)
jg
aas
dec
scas
xchg
movs
inc
xor
and
push
(bad)
push
lods
(bad)
xor
fdivrp
jo
aad
sbb
call
push
adc
cld
arpl
adc
cdq
jbe
dec
adc
jg
das
xchg
adc
(bad)
(bad)
(bad)
(bad)
mov
or
data16
ins
add
sub
call
xor
loope
(bad)
(bad)
jmp
bound
loope
inc
or
stos
scas
mov
cmps
scas
scas
jne
aad
(bad)
(bad)
(bad)
(bad)
mov
cdq
push
mov
lds
pusha
es
loop
jecxz
scas
jb
dec
pop
call
(bad)
(bad)
(bad)
call
call
pusha
jns
mov
push
sub
pop
adc
sbb
(bad)
inc
push
inc
xor
sbb
iret
jmp
inc
jp
(bad)
(bad)
(bad)
dec
or
mov
sbb
xor
and
test
fisub
loope
enter
inc
gs
and
push
mov
mov
stos
mov
dec
int
cmc
inc
je
push
stos
sbb
stos
scas
or
xchg
cmp
(bad)
call
dec
or
dec
mov
pop
mov
jae
dec
mov
fs
outs
fst
bound
mov
xchg
sub
sub
movs
(bad)
(bad)
(bad)
dec
mov
sbb
in
movs
mov
or
dec
xlat
push
and
cmc
es
outs
cli
pop
hlt
(bad)
(bad)
jmp
adc
cld
xchg
mov
call
mov
gs
adc
call
mov
mov
pop
test
adc
dec
jg
mov
shr
and
sub
(bad)
inc
fcom
sub
xchg
fmul
mov
push
cmc
(bad)
(bad)
(bad)
jmp
out
cmp
dec
and
lock
adc
pop
mov
scas
mov
rol
(bad)
(bad)
jmp
mov
mov
inc
retf
test
xor
shr
movs
fcmovu
(bad)
retf
or
cli
(bad)
jmp
mov
dec
daa
rcr
sub
xchg
sub
sub
cdq
xor
(bad)
(bad)
(bad)
mov
lods
pop
mov
push
push
outs
add
and
jmp
mov
mov
adc
xor
lods
pop
sub
mov
mov
xor
add
sub
ficomp
(bad)
(bad)
dec
data16
lods
lods
call
dec
leave
outs
cmp
pop
call
push
out
(bad)
(bad)
(bad)
call
sbb
and
das
popf
repnz
ret
jns
or
in
cs
lods
scas
nop
movs
mov
mov
jmp
jp
enter
inc
push
jg
pop
mov
mov
mov
sti
push
push
inc
(bad)
(bad)
mov
inc
cmp
sbb
in
(bad)
loopne
xor
sbb
(bad)
(bad)
(bad)
inc
(bad)
sub
mov
in
xchg
mov
loop
(bad)
mov
sbb
(bad)
sti
popa
aam
sub
push
sbb
movs
lods
sbb
loop
dec
inc
pusha
jo
pop
ins
stos
jno
cli
sub
sar
jg
(bad)
mov
mov
mov
jmp
push
or
aaa
shl
jg
stos
lock
sar
cdq
ss
aam
repz
cwde
pop
adc
dec
push
(bad)
(bad)
(bad)
(bad)
dec
sub
lods
xchg
cwde
push
stos
xchg
dec
pop
jno
je
mov
mov
out
clc
(bad)
call
adc
pop
sbb
leave
in
mov
pushf
jmp
call
(bad)
pusha
pop
fisubr
sbb
pop
stos
outs
lea
sub
hlt
cmps
sub
js
icebp
(bad)
call
bound
rcl
sahf
mov
push
pop
es
mov
shl
(bad)
(bad)
jmp
mov
add
sbb
pop
jmp
dec
movs
sub
retf
sub
mov
stos
or
jge
(bad)
(bad)
call
ins
lahf
mov
iret
push
mov
ret
xor
inc
or
or
test
adc
(bad)
dec
movs
int3
sbb
add
les
cmps
iret
jmp
push
cmp
(bad)
(bad)
dec
cmp
cmp
stos
in
inc
push
mov
enter
adc
jb
stos
add
scas
loop
std
(bad)
(bad)
(bad)
push
icebp
sbb
push
or
add
loop
std
lds
outs
test
sub
mov
jmp
cld
lods
jg
xchg
cmp
mov
pop
pop
(bad)
(bad)
(bad)
(bad)
cli
pop
stos
or
pop
jg
jmp
rcr
loopne
xor
adc
pop
push
sbb
xchg
(bad)
lods
(bad)
(bad)
fcomip
xor
stos
cmc
scas
or
mov
inc
mov
inc
pop
sub
push
sar
push
mov
sbb
sbb
lods
sub
push
cli
jmp
mov
dec
and
mov
or
mov
(bad)
movs
pop
and
in
jl
mov
das
out
lahf
mov
sbb
mov
push
imul
or
sbb
push
push
dec
or
adc
fs
mov
std
sub
shl
jae
not
sub
fsubr
pop
icebp
jmp
cmp
loopne
or
push
pop
cs
movs
popf
scas
js
push
dec
or
or
rcr
mov
retf
imul
cmc
mov
and
stc
ret
imul
(bad)
(bad)
std
fs
push
jmp
push
lods
loop
test
and
xlat
retf
daa
dec
out
repnz
cmps
sub
(bad)
(bad)
dec
push
rcr
fwait
test
arpl
aam
cmp
pop
loop
xlat
(bad)
(bad)
push
sbb
jae
bound
in
retf
sub
mov
test
(bad)
jg
mov
dec
cmp
dec
cli
push
imul
mov
mov
and
(bad)
(bad)
call
sub
sub
adc
clc
in
pop
adc
xchg
js
mov
(bad)
(bad)
(bad)
jp
mov
mov
sbb
(bad)
sub
xlat
sbb
sub
dec
stos
retf
loopne
jns
out
adc
sub
not
xchg
pop
cdq
or
mov
cli
sub
jae
inc
jae
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
sti
loope
(bad)
jmp
lods
sbb
dec
out
mov
pop
mov
sbb
jl
(bad)
(bad)
call
mov
pop
mov
mov
jmp
ss
and
mov
dec
jb
popf
gs
(bad)
(bad)
(bad)
jmp
(bad)
call
xor
(bad)
pop
call
inc
jb
(bad)
(bad)
(bad)
(bad)
cmp
jl
and
cmp
ror
xchg
in
cld
jns
sub
jg
std
push
sub
scas
push
dec
(bad)
(bad)
(bad)
(bad)
js
ja
cs
mov
fild
and
addr16
stos
pop
fcmovnbe
nop
ret
outs
(bad)
(bad)
(bad)
jge
gs
push
jge
and
(bad)
pop
out
imul
clc
dec
dec
lahf
jp
push
sti
dec
hlt
or
loope
mov
loop
out
movs
mov
inc
jne
xchg
lods
sbb
or
sub
(bad)
dec
mov
nop
in
push
mov
cdq
cmps
sbb
pop
mov
(bad)
dec
stos
xor
ret
pusha
xor
xor
xor
into
(bad)
(bad)
(bad)
jg
sub
jge
neg
or
jge
dec
scas
xchg
mov
mov
cmp
push
cs
stos
mov
cmp
outs
lock
in
jl
xchg
pop
sub
cmp
mov
cmp
nop
sub
mov
mov
mov
jo
sub
cdq
mov
inc
sbb
push
dec
(bad)
(bad)
dec
adc
mov
xor
out
mov
out
mov
into
call
cmp
jmp
stos
fcom
push
(bad)
test
fisttp
repnz
inc
aam
ret
lea
xchg
add
test
ins
sub
jle
lods
icebp
cmp
mov
pop
sbb
ret
out
dec
(bad)
(bad)
(bad)
in
add
pop
loop
lods
ja
cld
push
call
pop
lods
aam
pop
sub
jmp
mov
xlat
adc
xor
sti
jmp
xor
sub
dec
dec
pop
jo
sbb
jmp
xchg
mov
(bad)
(bad)
jmp
and
stos
or
sub
test
dec
shr
push
push
mov
(bad)
(bad)
call
dec
test
sub
push
addr16
mov
inc
icebp
imul
push
scas
fdiv
jno
test
(bad)
jmp
lods
xchg
aaa
xchg
sub
sub
(bad)
xor
jmp
and
cld
(bad)
dec
jbe
mov
loop
sub
stos
ror
iret
arpl
(bad)
(bad)
push
je
call
jle
xor
xchg
cli
or
or
mov
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
or
imul
nop
imul
dec
(bad)
push
mov
pop
inc
ret
sbb
push
push
mov
(bad)
(bad)
jmp
repz
xor
out
bound
cmp
fisub
sti
or
push
lahf
mov
dec
retf
xor
ficom
pop
xor
jb
sbb
stos
bound
sbb
(bad)
(bad)
mov
clc
cmps
cmp
jmp
fs
jae
adc
push
icebp
ins
inc
(bad)
(bad)
jmp
aam
sahf
pop
inc
sub
xchg
jmp
adc
loopne
push
jae
add
popf
sub
sbb
(bad)
(bad)
(bad)
neg
dec
xlat
in
fnstenv
stos
pop
cli
int3
xor
cmp
jmp
ss
scas
jmp
pop
loope
fcom
adc
jmp
sub
outs
cmp
outs
xor
fwait
add
sub
rcl
dec
call
out
fucom
imul
js
into
jmp
mov
(bad)
(bad)
(bad)
dec
shr
(bad)
push
dec
(bad)
sti
outs
sub
add
adc
movs
iret
rcr
sahf
inc
scas
add
pop
call
push
push
dec
jmp
dec
fmul
push
scas
aas
test
pop
pop
bound
aaa
cld
jmp
add
cmps
sbb
sbb
xor
pop
push
xor
inc
inc
(bad)
(bad)
(bad)
call
and
mov
sahf
lods
jmp
sbb
dec
arpl
fwait
(bad)
(bad)
dec
inc
add
and
scas
aad
int
(bad)
jmp
inc
iret
xchg
movs
sub
(bad)
(bad)
(bad)
(bad)
call
out
push
lods
sub
cmp
or
or
out
push
or
loopne
mov
(bad)
(bad)
jmp
cdq
push
cmp
std
push
sub
jp
pushf
sti
ss
div
dec
adc
dec
std
pop
lock
xlat
mov
retf
popa
daa
out
mov
aam
(bad)
(bad)
call
or
push
scas
push
pop
dec
jg
push
ins
adc
sub
call
(bad)
(bad)
push
jp
jns
bound
adc
cwde
imul
outs
sbb
jmp
jmp
push
sub
xchg
int3
jns
in
xlat
mov
ret
cmp
lahf
(bad)
(bad)
(bad)
dec
sub
mov
jns
mov
cmp
xor
movs
xor
(bad)
out
clc
(bad)
test
(bad)
stc
lods
mov
push
mov
sub
sub
mov
jnp
push
mov
jmp
jmp
(bad)
(bad)
dec
push
xchg
sbb
pop
sub
call
inc
push
fsub
xchg
out
mov
jne
call
sub
loop
pop
iret
imul
call
popf
pop
fisub
and
into
(bad)
inc
xchg
mov
mov
test
outs
(bad)
popa
mov
jecxz
(bad)
dec
fmul
xlat
in
sub
ds
push
cli
inc
into
out
jp
adc
mov
stos
jge
lods
jmp
xchg
sub
sbb
push
mov
out
or
imul
pop
mov
call
out
mov
sar
(bad)
inc
sub
(bad)
(bad)
push
retf
or
cmp
dec
lods
nop
sti
sbb
lds
stos
popa
clc
push
(bad)
(bad)
(bad)
fild
loop
push
bound
lds
retf
icebp
test
and
mov
pop
std
jbe
pop
(bad)
dec
or
in
jo
dec
push
mov
lahf
push
jp
cmp
(bad)
mov
fild
pop
dec
(bad)
mov
and
mov
imul
sub
pop
movs
adc
push
les
dec
xor
(bad)
and
add
(bad)
(bad)
jmp
sbb
pop
or
jmp
(bad)
pop
adc
pop
mov
mov
sub
cdq
call
cmp
test
xchg
fmul
push
push
cwde
and
das
clc
(bad)
dec
xchg
sub
sbb
loopne
loop
add
mov
dec
addr16
(bad)
dec
and
call
dec
push
inc
arpl
sbb
sub
in
(bad)
jmp
add
pusha
adc
pop
paddd
dec
ja
pop
sub
push
retf
iret
(bad)
jg
jmp
(bad)
lahf
push
mov
sbb
xchg
call
pushf
pop
push
sub
adc
adc
push
std
jp
and
fstp
scas
push
nop
sbb
(bad)
dec
test
cmp
leave
mov
in
cdq
mov
or
movs
(bad)
stc
mov
popf
fwait
mov
xchg
jae
stos
lock
sar
jne
pop
cwde
mov
pop
test
cmp
mov
(bad)
(bad)
(bad)
call
sbb
lahf
sub
out
mov
pop
mov
out
push
add
adc
push
mov
stos
dec
(bad)
sbb
stos
in
mov
data16
push
sub
(bad)
(bad)
fld
lods
ss
jmp
jmp
fcomp
clc
outs
xchg
ret
xchg
jg
adc
test
sbb
call
loopne
push
inc
mov
pop
cmc
or
int3
xchg
pop
retf
pushf
jmp
cli
jg
je
jmp
mov
add
sbb
repnz
pop
mov
lods
(bad)
(bad)
(bad)
(bad)
fisubr
inc
scas
es
pop
retf
call
add
je
sub
adc
mov
(bad)
fdiv
jmp
add
call
jmp
xlat
jmp
pop
push
xor
aad
push
and
je
mov
jmp
pop
dec
movs
int3
sub
(bad)
fdivrp
aaa
std
jmp
jmp
jb
and
cmp
(bad)
(bad)
mov
or
mov
dec
and
and
or
and
mov
(bad)
(bad)
(bad)
(bad)
jmp
sub
ficom
mov
jnp
dec
rol
ins
test
cmps
(bad)
(bad)
jmp
sbb
add
push
adc
lods
and
iret
and
(bad)
dec
pop
dec
or
mov
daa
fwait
pop
shr
mov
push
cdq
je
dec
std
fimul
(bad)
mov
sahf
fwait
pop
cmp
cli
pop
add
mov
(bad)
(bad)
push
jo
imul
or
stos
cmp
int3
jge
test
sub
jmp
jae
sahf
and
in
test
or
sbb
inc
push
out
icebp
stos
mov
ins
add
(bad)
(bad)
(bad)
call
jp
sbb
or
mov
stos
dec
xchg
adc
adc
stos
(bad)
(bad)
(bad)
push
fs
jle
mov
sbb
jno
mov
adc
test
pop
xor
(bad)
(bad)
(bad)
jmp
fs
repz
gs
movs
imul
leave
stos
call
mov
(bad)
(bad)
in
pop
(bad)
fcomp
loop
outs
inc
sub
lods
sub
sub
lea
sbb
cld
mov
int3
(bad)
push
es
mov
or
imul
out
pop
sahf
into
push
mov
add
sahf
call
cmp
lock
stos
cmp
mov
mov
dec
loop
daa
push
inc
push
sub
les
ja
(bad)
jmp
sbb
xchg
cmp
jge
mov
cwde
pop
mov
ds
movs
sbb
(bad)
push
cmp
xchg
lock
dec
pop
lds
pop
mov
dec
test
dec
aad
(bad)
mov
pushf
mov
pop
call
mov
dec
push
sbb
(bad)
(bad)
call
inc
xchg
mov
loop
cmp
fwait
test
aad
mov
rcr
cli
cdq
add
movs
test
call
xchg
addr16
cmp
icebp
or
(bad)
test
gs
push
mov
ja
push
jb
jno
sbb
jo
(bad)
(bad)
popa
add
(bad)
inc
mov
pushf
cld
(bad)
(bad)
inc
dec
repz
call
pop
sbb
adc
call
call
push
int3
pop
adc
inc
lods
push
pop
cmps
jmp
mov
jmp
(bad)
dec
push
ins
test
push
lods
test
(bad)
cmp
push
cmp
in
stos
xor
mov
(bad)
(bad)
jmp
and
adc
xchg
(bad)
push
push
fnclex
ja
sbb
in
sbb
mov
hlt
(bad)
fcmovnb
push
xchg
call
mov
add
adc
inc
and
(bad)
(bad)
(bad)
(bad)
dec
aad
call
shl
mov
stos
pop
call
(bad)
jmp
retf
jmp
retf
pop
jge
cmp
call
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
xor
fidivr
xchg
cmp
mov
sbb
movs
(bad)
ins
fiadd
(bad)
(bad)
(bad)
jmp
pop
sub
movs
sub
push
push
push
scas
rcl
push
aam
call
mov
(bad)
mov
mov
addr16
pop
test
in
fucomp
cli
pop
pop
(bad)
(bad)
(bad)
inc
nop
mov
and
xchg
sub
mov
sbb
jle
xor
and
and
(bad)
inc
adc
aad
jb
neg
call
mov
sbb
(bad)
call
pop
xor
jle
sbb
adc
sbb
push
pop
jp
(bad)
(bad)
(bad)
jmp
aam
push
and
sbb
adc
dec
retf
(bad)
std
retf
test
std
cs
iret
shr
call
loopne
lds
mov
dec
push
sub
jmp
mov
sbb
(bad)
faddp
cdq
pop
scas
sbb
arpl
call
cmp
mov
mov
sahf
out
sub
mov
sbb
(bad)
(bad)
mov
test
sub
ret
mov
les
xchg
ficomp
pop
(bad)
(bad)
call
jle
inc
or
aad
pop
jg
xchg
shl
mov
add
or
imul
call
xchg
sub
(bad)
test
and
lds
pop
jmp
add
mov
push
in
int3
xor
add
int3
and
mov
cld
adc
(bad)
(bad)
fstp
mov
push
mov
fld
fnstcw
popa
call
inc
stos
jmp
dec
sub
lock
push
sbb
sub
lock
(bad)
(bad)
inc
retf
adc
mov
imul
and
mov
cli
out
mov
mov
sbb
dec
mov
xchg
push
cmp
pop
out
shr
adc
jecxz
pop
retf
(bad)
(bad)
call
fs
mov
xor
(bad)
sub
jmp
mov
nop
test
sub
rol
xor
xchg
pushf
mov
xchg
dec
mov
lods
pushf
mov
call
xchg
stc
push
mov
cmps
dec
xor
mov
dec
add
(bad)
(bad)
(bad)
call
pop
arpl
xor
dec
(bad)
dec
std
pop
repz
xor
mov
cmp
cld
ds
xor
(bad)
in
cld
ins
int3
or
mov
in
sub
lods
jmp
push
addr16
cmp
jmp
pushf
mov
(bad)
(bad)
(bad)
call
je
sub
mov
fist
retf
dec
aaa
enter
hlt
mov
xchg
rcl
(bad)
(bad)
jge
or
and
cli
lds
imul
adc
xchg
lock
pop
shl
mov
sbb
xchg
push
jmp
movs
dec
leave
xor
(bad)
(bad)
jmp
aam
push
sar
push
sub
push
adc
push
sub
(bad)
(bad)
jmp
gs
mov
stos
stos
shr
sbb
cmc
fcom
lods
cs
dec
mov
(bad)
(bad)
(bad)
jmp
dec
lods
lock
xchg
pop
(bad)
imul
cmps
xchg
movs
retf
retf
ja
fcomip
(bad)
inc
int
mov
hlt
jne
mov
into
out
les
push
aam
stos
xor
pushf
repnz
(bad)
(bad)
dec
or
ins
push
dec
add
fsubp
pop
call
mov
(bad)
(bad)
jmp
dec
(bad)
sub
cmp
(bad)
scas
in
sbb
call
(bad)
jno
icebp
xchg
(bad)
push
jmp
dec
daa
inc
adc
sbb
sbb
loopne
push
retf
fcom
cmp
dec
cmps
cmp
xchg
dec
xchg
into
mov
cli
dec
sbb
pop
sub
int3
pop
or
xchg
push
xchg
pop
(bad)
(bad)
(bad)
jmp
je
push
aaa
inc
icebp
mov
xor
dec
pop
rcr
or
dec
fcomp
push
pop
and
jg
push
mov
xchg
xor
adc
hlt
xchg
fs
xor
(bad)
(bad)
(bad)
call
(bad)
jmp
inc
int
mov
fisubr
les
push
and
(bad)
(bad)
(bad)
push
mov
xchg
xor
sub
jnp
xor
xchg
xor
jnp
and
push
cdq
(bad)
(bad)
(bad)
call
xchg
rcl
ds
inc
jns
xor
gs
xchg
mov
mov
in
jmp
(bad)
(bad)
inc
sub
add
shr
adc
mov
sti
mov
jmp
in
sub
es
(bad)
(bad)
(bad)
(bad)
mov
(bad)
into
jmp
jbe
push
inc
add
push
out
mov
stos
sub
(bad)
mov
ds
stos
loope
cmps
adc
call
adc
cmp
movs
mov
outs
cmp
(bad)
jmp
inc
scas
mov
sub
push
fwait
stos
add
cmp
adc
(bad)
(bad)
push
fld
das
test
jbe
inc
scas
scas
push
sbb
je
in
cwde
push
cdq
inc
call
sub
int
mov
mov
jne
test
mov
adc
cdq
mov
adc
cdq
neg
(bad)
or
in
inc
mov
fadd
jecxz
(bad)
dec
cdq
mov
xchg
cwde
test
leave
pop
jg
div
or
mov
lods
inc
scas
cld
pop
mov
ins
adc
mov
sbb
sbb
pop
cwde
adc
retf
(bad)
call
lods
das
push
scas
shl
ja
stos
fwait
pop
ja
in
cli
inc
sub
pop
cdq
inc
mov
fwait
cwde
(bad)
(bad)
dec
lea
sbb
mov
scas
imul
inc
cdq
push
sar
call
int3
(bad)
dec
sbb
jl
stos
div
and
(bad)
(bad)
inc
cs
mov
dec
xor
cmp
dec
test
(bad)
mov
ss
sub
cdq
test
xchg
mov
(bad)
(bad)
(bad)
(bad)
jmp
fwait
push
cdq
add
sub
sub
inc
cmp
mov
test
pop
cmp
sub
(bad)
(bad)
(bad)
in
mov
inc
xchg
xchg
ja
mov
fcomp
daa
mov
push
scas
push
rcl
jns
in
(bad)
(bad)
(bad)
sti
fcomp
xchg
cli
ret
xor
dec
inc
out
dec
fbld
dec
jbe
fwait
pop
cmp
fsubr
fild
imul
imul
sub
cdq
add
cwde
ud0
inc
jle
pop
leave
inc
imul
dec
dec
xor
dec
sub
(bad)
(bad)
push
gs
outs
loope
cwde
jne
call
xor
out
(bad)
or
push
inc
and
(bad)
call
mov
neg
xchg
scas
adc
jb
mov
cmp
adc
ins
pop
movs
out
cwde
xlat
sbb
(bad)
jmp
out
jb
or
cli
mov
data16
pop
out
stos
fmul
inc
aad
call
cmp
push
cld
push
pop
imul
push
(bad)
(bad)
(bad)
jg
push
test
pop
mov
adc
push
sbb
test
jp
pop
outs
inc
arpl
xchg
pop
xchg
add
(bad)
push
push
icebp
sbb
lods
mov
jmp
add
mov
adc
(bad)
(bad)
(bad)
(bad)
jg
scas
mov
inc
(bad)
jp
les
mov
push
and
inc
xor
ds
xor
dec
mov
adc
sub
outs
dec
ret
retf
mov
xchg
or
jmp
(bad)
(bad)
call
jp
xlat
aaa
inc
or
movs
or
inc
push
sbb
mov
dec
(bad)
xor
cs
push
ss
jae
outs
test
rcr
dec
je
clc
jg
dec
push
mov
fcom
dec
fsubr
add
dec
fld
(bad)
(bad)
jmp
mov
pop
sbb
pop
adc
inc
adc
test
call
(bad)
dec
cmp
dec
xchg
fsubr
mov
adc
xchg
adc
lea
sbb
lds
test
clc
(bad)
call
mov
popa
fyl2xp1
xchg
fsubr
xchg
sbb
(bad)
(bad)
dec
xchg
add
test
mov
leave
scas
or
and
inc
cdq
push
xchg
add
push
fsubr
cmp
fnstcw
leave
cmp
(bad)
(bad)
dec
jbe
ret
mov
sub
mov
cmp
mov
dec
and
(bad)
in
stos
or
lods
pop
repnz
push
push
and
pushf
xor
push
retf
jmp
fdiv
mov
sbb
popf
call
(bad)
mov
jnp
ss
(bad)
mov
xor
mov
pop
push
repnz
inc
popf
mov
sub
dec
or
(bad)
call
jo
dec
das
pop
(bad)
(bad)
(bad)
dec
mov
adc
jb
sub
or
cmp
test
(bad)
jmp
call
imul
sahf
mov
std
jg
push
xchg
adc
repnz
int
lahf
sbb
retf
int
(bad)
(bad)
mov
xchg
(bad)
sub
xor
(bad)
(bad)
(bad)
call
xor
scas
mov
push
mov
(bad)
(bad)
jmp
sahf
xchg
call
call
fcom
push
dec
or
cmp
sub
ds
jg
call
mov
iret
into
cmp
ins
fidivr
aaa
pop
xchg
jne
pop
mov
(bad)
(bad)
(bad)
jmp
dec
dec
fistp
pop
pop
xchg
pop
xchg
sti
retf
into
stos
retf
dec
fcmovne
inc
xchg
inc
das
sub
dec
(bad)
ficom
in
sbb
pop
inc
jmp
push
cmps
retf
mov
and
(bad)
jmp
mov
inc
and
cmp
sub
mov
push
jno
push
dec
test
rol
jo
or
cli
inc
(bad)
adc
mov
in
sbb
fsub
dec
outs
out
inc
sub
mov
mov
daa
jmp
aaa
cld
scas
push
or
(bad)
sub
fisubr
call
sar
pop
ds
and
pop
sub
loop
es
out
in
cmps
pop
loop
imul
stos
fisubr
imul
push
mov
retf
mov
push
idiv
jle
fidivr
push
push
adc
pop
mov
(bad)
(bad)
mov
sub
mov
ficom
dec
jmp
cmp
mov
cwde
or
rcl
and
add
push
push
arpl
stos
mov
mov
lods
test
xor
mov
(bad)
call
mov
inc
inc
jno
adc
inc
xchg
(bad)
(bad)
(bad)
dec
test
push
pop
ins
cmc
jmp
lea
pop
or
rcr
sub
icebp
cli
dec
test
repz
sar
(bad)
push
mov
mov
xor
adc
in
outs
test
(bad)
jge
inc
xlat
outs
xor
test
jmp
xchg
mov
(bad)
call
int3
push
mov
imul
inc
mov
dec
lds
(bad)
(bad)
mov
pop
lds
mov
scas
cmps
mov
push
jge
cmp
cmovg
fcomip
(bad)
(bad)
cmp
and
dec
out
add
shl
push
int3
int
push
jmp
jg
(bad)
(bad)
(bad)
call
sub
jmp
mov
outs
mov
mov
mov
mov
cwde
push
mov
push
std
jg
jbe
mov
fst
ins
sar
in
jmp
(bad)
jg
(bad)
dec
cli
xor
xor
fsubr
in
and
aaa
mov
xchg
es
fsubr
pop
lock
or
cmp
jmp
inc
mov
add
and
push
jp
es
mov
or
pop
push
rcl
int3
mov
ret
dec
(bad)
mov
lock
stos
in
shr
jne
pop
test
and
rcr
out
add
cmp
(bad)
(bad)
jmp
rcl
inc
push
imul
mov
sub
call
(bad)
jmp
dec
mov
fdiv
repnz
jnp
jmp
dec
inc
cmp
hlt
xor
les
and
mov
sub
iret
pusha
out
loope
xchg
mov
jmp
pop
inc
sbb
cmps
retf
cmp
xchg
(bad)
(bad)
(bad)
dec
rcl
sahf
pusha
push
add
xchg
retf
inc
push
rcr
daa
fldenv
sbb
mov
mov
mov
aaa
and
popa
inc
jg
sbb
sti
xchg
push
xchg
aas
(bad)
(bad)
(bad)
call
cld
(bad)
xor
pushw
sub
hlt
fistp
push
push
jmp
repz
dec
std
jg
mul
pop
imul
inc
sub
repz
mov
sub
repz
jg
inc
or
push
or
adc
inc
call
(bad)
call
mov
cld
scas
adc
inc
xchg
pop
sbb
sub
sub
inc
(bad)
(bad)
jmp
sti
push
outs
imul
push
aad
xchg
or
call
add
inc
out
push
mov
test
ja
nop
sub
loop
sar
(bad)
mov
stos
shr
cs
(bad)
mov
mov
push
(bad)
(bad)
call
xchg
jle
ror
out
scas
iret
jbe
adc
xchg
fwait
mov
call
jg
(bad)
(bad)
inc
ins
jb
fld
push
inc
xchg
inc
cld
int3
test
lods
sub
or
call
int3
mov
(bad)
(bad)
jmp
icebp
mov
add
adc
sysenter
sub
jecxz
fild
(bad)
call
pop
(bad)
(bad)
(bad)
(bad)
sti
dec
jno
sub
push
and
jb
adc
push
out
adc
xor
sbb
(bad)
lock
jg
mov
mov
js
sub
mov
xchg
sti
inc
(bad)
fs
(bad)
popf
(bad)
dec
sbb
cmps
movs
or
add
icebp
or
add
(bad)
(bad)
jmp
xor
push
pop
imul
and
mov
shl
dec
mov
and
jge
scas
call
pop
sbb
cmp
out
jo
cdq
xchg
cwde
xchg
inc
mov
loope
push
sub
pop
in
inc
stc
push
mov
or
(bad)
(bad)
(bad)
call
test
cs
adc
push
retf
jp
sub
mov
dec
pop
jbe
(bad)
(bad)
(bad)
jmp
(bad)
scas
cmp
add
ja
inc
cdq
aaa
fcomp
add
cmp
and
sbb
xor
mov
or
(bad)
(bad)
jmp
sbb
mov
sbb
scas
sub
sub
shl
inc
add
(bad)
(bad)
jmp
push
rcr
sub
scas
scas
mov
lods
int
ins
xor
(bad)
(bad)
jle
cmps
xor
in
xchg
test
mov
xor
cdq
jne
add
cli
add
outs
sub
rcl
ret
(bad)
(bad)
dec
ins
cmc
sub
add
arpl
aad
jne
inc
stos
push
jl
mov
adc
ja
lock
ret
mov
mov
xchg
or
cwde
pop
cdq
test
push
push
scas
lods
in
lods
sub
cwde
outs
sbb
aad
call
call
add
and
pushf
and
arpl
fisubr
test
and
rep
cli
(bad)
call
pusha
inc
popf
or
adc
jae
xchg
cli
or
sbb
(bad)
(bad)
dec
mov
mov
lea
dec
pop
fldcw
cmp
inc
and
inc
neg
dec
sub
mov
int
sbb
cmps
inc
sbb
mov
push
dec
call
cdq
mov
jg
loop
ins
mov
lds
cmc
imul
(bad)
push
(bad)
(bad)
(bad)
jmp
cwde
mov
cmp
test
movs
jnp
fdivr
dec
push
das
dec
ret
(bad)
(bad)
(bad)
push
jne
das
mov
mov
lds
bound
jmp
ins
test
xchg
test
(bad)
das
clc
call
adc
aad
imul
push
cmp
(bad)
(bad)
(bad)
mov
adc
jmp
popa
aam
fldpi
scas
out
fwait
inc
jno
mov
inc
dec
mov
sbb
aad
test
push
dec
mov
dec
xor
fisubr
imul
xchg
outs
cs
(bad)
mov
imul
call
je
fstp
fisub
imul
movs
movs
cmps
ret
pop
dec
test
adc
mov
xchg
jecxz
(bad)
push
test
hlt
outs
mov
mov
lahf
and
jmp
fdiv
xor
cli
(bad)
jmp
add
mov
mov
or
daa
xor
dec
xchg
cmp
mov
(bad)
(bad)
(bad)
jmp
push
push
mov
adc
cdq
add
sbb
sti
popf
movs
movs
mov
jmp
(bad)
out
icebp
xlat
jns
push
div
mul
inc
mov
test
fbstp
(bad)
jmp
aas
mov
cld
and
jecxz
rcl
push
outs
test
dec
adc
sbb
call
out
adc
retf
jns
ins
fimul
in
test
test
dec
(bad)
jmp
call
sbb
imul
mov
enter
fldcw
pop
adc
outs
or
out
inc
xchg
cmp
lock
(bad)
sti
cmps
xchg
push
scas
test
adc
aam
je
inc
pop
loope
sbb
enter
arpl
jbe
lahf
cli
fs
jno
jl
pop
push
mov
dec
stos
std
stos
(bad)
push
movs
adc
call
push
imul
test
and
add
and
(bad)
jmp
adc
adc
adc
xchg
aaa
imul
xchg
aaa
adc
(bad)
call
push
inc
inc
sub
enter
leave
ret
adc
and
xlat
scas
cli
(bad)
adc
fucom
inc
push
in
jecxz
mov
test
xchg
(bad)
(bad)
mov
adc
sub
inc
in
fstp
dec
movs
push
adc
das
(bad)
ins
retf
cmp
xchg
push
(bad)
in
inc
loop
jmp
lods
mov
je
or
cld
stos
push
jg
add
or
(bad)
(bad)
(bad)
inc
adc
js
out
ret
inc
sbb
adc
inc
push
test
fstp
(bad)
jmp
(bad)
mov
cmp
cld
repnz
dec
pop
retf
lods
mov
cwde
cmps
fst
mov
cmp
pushf
pop
sub
cwde
xor
xchg
jne
stos
dec
test
rcl
mov
(bad)
dec
push
xchg
dec
pop
retf
mov
lock
mov
loope
lods
pusha
xchg
addr16
(bad)
(bad)
inc
adc
outs
in
xchg
imul
enter
mov
test
ins
jg
std
mov
sub
push
sbb
mov
push
sbb
std
call
in
jmp
ds
mov
push
and
test
fcomip
(bad)
call
jp
xor
sub
xor
mov
lods
push
js
jno
scas
(bad)
jmp
jbe
addr16
iret
and
xor
in
ror
psllq
cmc
jmp
lds
test
shl
jge
popa
jle
push
imul
mov
(bad)
push
ins
mov
jmp
dec
cli
into
ins
push
adc
cmps
adc
(bad)
(bad)
(bad)
mov
adc
fisubr
dec
aaa
jbe
out
icebp
mov
dec
ds
mov
mov
(bad)
cwde
dec
lods
cs
and
sub
call
jmp
jge
out
pop
aaa
or
push
(bad)
call
or
cmps
(bad)
(bad)
jmp
call
sar
call
cmp
inc
ds
repnz
jmp
jmp
add
push
mov
inc
mov
adc
stos
fidiv
mov
arpl
mov
adc
or
mov
cwde
inc
(bad)
mov
test
hlt
jmp
je
ins
orps
pop
push
inc
xor
mov
ins
jecxz
jl
inc
(bad)
aaa
fdiv
jmp
stos
jb
jl
outs
cwde
outs
repnz
inc
sar
pop
icebp
jmp
into
sub
out
test
into
cmc
mov
fdivr
in
(bad)
(bad)
(bad)
jp
bnd
test
cwde
in
push
inc
inc
xchg
or
jb
xor
in
xchg
mov
cmp
fild
test
push
pop
test
out
test
(bad)
jmp
sbb
xchg
cs
sub
sbb
aas
clc
sar
inc
lahf
pushf
jmp
cli
(bad)
cmp
push
scas
pop
imul
imul
repz
cwde
cmp
mov
jmp
mov
shl
nop
inc
push
inc
(bad)
mov
push
sbb
lods
xchg
mov
pop
or
fsincos
inc
jmp
lea
jbe
(bad)
call
mov
ret
outs
xchg
nop
jbe
cld
mov
addr16
(bad)
(bad)
dec
es
movs
sub
add
ror
push
fiadd
mov
outs
dec
cld
(bad)
(bad)
dec
lods
and
push
xlat
dec
retf
push
jae
cmp
xor
cmp
and
std
inc
ins
push
cdq
test
(bad)
fdiv
mov
(bad)
repnz
mov
sub
and
inc
aam
jae
xchg
(bad)
test
call
call
xchg
ds
push
test
mov
sub
xchg
push
inc
fwait
dec
or
inc
xchg
in
in
(bad)
(bad)
(bad)
(bad)
jmp
sub
xchg
adc
es
pusha
sbb
ins
lods
sub
dec
xchg
(bad)
push
imul
mov
lds
outs
imul
shr
bnd
adc
mov
jmp
call
cs
pop
(bad)
popf
addr16
mov
sub
rcl
add
fld
mov
dec
xchg
pop
sbb
icebp
(bad)
(bad)
fistp
lea
sub
scas
adc
sub
shr
fucomip
sub
cli
stos
inc
das
je
(bad)
cmc
aam
add
(bad)
(bad)
jmp
(bad)
retf
std
jns
aad
dec
dec
xchg
(bad)
xchg
or
cmps
test
push
std
and
ins
outs
xor
(bad)
call
inc
add
dec
sbb
cmp
inc
pop
rol
mov
leave
adc
push
nop
test
(bad)
(bad)
call
fcmovnb
dec
xchg
test
inc
pop
mov
cdq
mov
repnz
and
imul
(bad)
mov
movs
movs
stos
das
sub
mov
fimul
sub
jmp
shl
xchg
sub
sub
test
adc
scas
(bad)
pop
cmp
clc
dec
lahf
jnp
out
xchg
push
jmp
ins
push
test
sub
dec
or
out
(bad)
clc
shr
mov
bound
mov
push
stos
in
outs
jb
imul
mov
add
(bad)
ins
xchg
outs
retf
lods
loop
sti
jmp
jmp
mov
cmp
(bad)
jg
sub
add
jns
lds
outs
scas
ficomp
fidiv
push
jle
and
call
scas
retf
jno
pop
pop
mov
loop
es
(bad)
(bad)
(bad)
cmp
retf
or
sub
push
loop
pusha
sub
cmps
push
stc
stos
cmp
retf
sub
(bad)
in
jmp
xchg
jo
fcom
loope
lods
jecxz
sahf
add
mov
fimul
(bad)
(bad)
(bad)
dec
popa
lods
lods
mov
mov
push
and
ss
dec
sub
cmp
or
cmp
daa
inc
adc
inc
jne
rcr
(bad)
jmp
(bad)
test
aad
mov
cmps
jmp
das
sub
rcl
in
imul
add
inc
ins
imul
push
pop
push
sbb
cmp
fcomip
(bad)
inc
adc
push
dec
imul
(bad)
mov
cdq
cmp
outs
cli
adc
xchg
pop
cmp
test
inc
or
push
test
xor
rol
(bad)
(bad)
mov
test
ss
lea
sub
das
mov
and
stos
cmp
dec
push
sub
(bad)
scas
mov
sub
sub
push
adc
jb
sub
jmp
das
clc
sbb
push
push
and
push
iret
fsub
(bad)
enter
xchg
test
fimul
fisub
pop
ss
cwde
ficomp
int
jmp
mov
stos
fisttp
inc
push
pop
push
dec
push
out
pop
fistp
(bad)
(bad)
(bad)
fistp
xchg
and
sbb
pop
test
push
int
pop
dec
push
push
xor
pop
ret
std
(bad)
(bad)
(bad)
jmp
mov
adc
jmp
ins
fidiv
xor
ins
sbb
std
in
(bad)
call
inc
pop
stos
enter
mov
mov
xor
adc
mov
imul
dec
push
mov
mov
jmp
mov
int
sbb
hlt
sbb
jmp
dec
and
cmp
sub
jbe
mov
dec
cmps
jge
lods
loope
(bad)
(bad)
(bad)
jmp
and
xor
enter
ja
ins
and
jecxz
loop
pop
js
push
loopne
pop
push
fmul
out
push
mov
cmps
mov
(bad)
mov
mov
mov
push
inc
call
xor
jmp
mov
data16
push
inc
mov
mov
sub
xchg
pop
popa
mov
pop
push
cmps
cmps
jns
pop
dec
sbb
mov
pop
(bad)
(bad)
(bad)
mov
fld
dec
cs
test
sahf
retf
jo
fwait
mov
cmp
out
clc
jmp
push
mov
(bad)
stos
adc
push
or
ins
popf
sub
push
or
add
nop
push
btc
cmps
dec
and
fs
sti
push
jbe
ss
jmp
cdq
fdiv
push
les
sahf
xchg
ror
loope
test
dec
(bad)
(bad)
jmp
cmp
push
push
scas
imul
cmps
out
cs
mov
cmps
int
out
call
std
or
fbstp
xchg
pop
sub
popa
xchg
pop
aam
pop
cmp
loop
cli
(bad)
idiv
dec
sbb
mov
aam
jnp
jae
mov
les
xor
(bad)
in
in
dec
pop
ins
cmp
ficomp
inc
sbb
mov
sahf
jmp
pop
scas
out
clc
(bad)
jmp
inc
ds
cwde
sti
out
scas
lods
mov
adc
jno
std
adc
dec
out
pop
pusha
movs
dec
adc
sub
lahf
xchg
sub
stos
mov
(bad)
mov
ret
scas
mov
movs
popa
sub
mov
ins
adc
jg
loop
dec
mov
(bad)
(bad)
jmp
or
mov
pop
or
sar
inc
cs
cmp
(bad)
(bad)
push
add
outs
int
dec
cwde
ror
std
outs
cs
cs
inc
inc
jg
ss
call
mov
imul
mov
jmp
inc
call
jmp
pop
loop
or
jle
(bad)
jmp
xchg
(bad)
stos
jb
xchg
inc
dec
in
movs
add
adc
(bad)
jmp
inc
cwde
sub
pop
(bad)
pop
sub
sub
pop
cli
sbb
mov
mov
retf
scas
push
gs
int
inc
scas
dec
(bad)
(bad)
jg
stos
sub
or
mov
fwait
scas
inc
retf
add
clc
(bad)
cli
cdq
pop
mov
mov
push
jns
or
and
(bad)
(bad)
mov
push
loopne
lods
mov
jb
mov
out
xchg
int
cmp
(bad)
(bad)
call
push
rcr
sbb
es
sub
iret
stos
xor
sub
mov
(bad)
jmp
mov
cmp
mov
sub
inc
rcl
into
scas
nop
adc
cmp
xchg
xor
test
or
inc
push
inc
addr16
or
mov
jae
xor
jmp
adc
push
adc
mov
mov
jmp
daa
(bad)
(bad)
(bad)
inc
jnp
mov
stos
(bad)
pop
mov
(bad)
out
imul
cmps
dec
xchg
push
(bad)
(bad)
(bad)
(bad)
dec
scas
jno
repz
or
mov
adc
add
aad
lahf
adc
call
(bad)
(bad)
push
mov
dec
lea
xchg
popf
sub
stos
mov
mov
mov
(bad)
(bad)
push
adc
adc
adc
(bad)
push
or
mov
(bad)
inc
pop
ror
sti
aad
out
imul
mov
iret
(bad)
(bad)
(bad)
(bad)
mov
adc
icebp
mov
push
xor
push
jge
fidivr
push
xchg
aam
(bad)
(bad)
call
sbb
pop
retf
mov
pop
xor
in
add
cs
mov
lods
dec
mov
daa
push
movs
and
test
cmp
pop
out
mov
jmp
cdq
dec
mov
(bad)
dec
cmp
sub
das
aam
gs
or
sub
cmp
cmp
cwde
(bad)
(bad)
(bad)
call
mov
clc
(bad)
imul
retf
stc
add
aad
add
imul
inc
aad
(bad)
movs
(bad)
sbb
mov
retf
dec
push
fsubr
push
test
(bad)
(bad)
fisttp
scas
movs
(bad)
mov
lds
xor
pushf
lods
lods
ins
fwait
push
adc
outs
jmp
sub
stos
scas
or
push
jle
jmp
pop
es
push
pop
ss
push
xor
call
inc
jmp
mov
inc
cmp
inc
push
sub
into
adc
add
imul
fld
(bad)
fst
xor
test
jmp
dec
movs
cmp
(bad)
(bad)
(bad)
(bad)
cli
sbb
jg
jle
dec
inc
xor
adc
fild
jne
mov
je
push
in
(bad)
(bad)
dec
or
inc
sbb
jne
add
imul
mov
imul
call
sti
jne
xchg
push
pop
mov
mov
pop
jp
xor
(bad)
(bad)
jmp
pop
add
mov
mov
jne
fild
xor
mul
mov
(bad)
(bad)
mov
cli
ja
cmps
xor
push
mov
and
and
scas
loopne
jmp
mov
call
call
or
mov
outs
jg
gs
adc
mov
sub
fbld
sar
test
mov
(bad)
cmp
std
fs
xchg
xor
mov
dec
ud0
(bad)
call
cmp
ret
ja
popa
dec
inc
xor
xor
mov
or
test
dec
rcl
mov
cmps
push
icebp
mov
inc
lods
(bad)
jmp
mov
(bad)
bound
movs
jl
neg
scas
cli
jg
mov
(bad)
mov
mov
mov
js
mov
(bad)
(bad)
mov
push
test
loope
(bad)
cmp
std
push
stos
mov
out
sub
(bad)
(bad)
inc
sub
das
sub
jmp
dec
fcmovu
mov
mov
jle
mov
and
xor
jbe
into
int3
in
daa
mov
imul
(bad)
mov
lods
and
jg
ret
into
sub
test
mov
or
pop
or
leave
jmp
popf
jnp
mov
or
xor
mov
neg
mov
pop
jmp
mov
js
pushf
test
loopne
sub
enter
cmp
sbb
stos
xor
sub
jnp
cs
sub
cld
cs
call
std
sub
push
xchg
imul
es
lods
fisttp
mov
push
test
out
cs
js
sub
push
loopne
jmp
imul
ins
shr
jg
arpl
push
js
or
pop
pop
jmp
fwait
loopne
arpl
sub
rcl
ss
lods
mov
dec
xchg
jl
imul
sar
dec
mul
retf
(bad)
add
sub
inc
inc
and
stos
shr
out
or
lods
jg
cmp
mov
cmp
movs
call
dec
mov
or
jne
aad
shr
inc
jmp
jmp
call
(bad)
out
test
mov
mov
mov
ja
xlat
jmp
fisubr
jmp
adc
jbe
arpl
xor
into
or
idiv
outs
test
jmp
adc
ins
sub
shr
push
jmp
outs
test
xchg
mov
dec
xor
loopne
sbb
lea
cmp
lahf
mov
pop
jo
mov
jp
inc
lock
lock
lea
inc
push
and
mov
loope
outs
inc
je
gs
push
jmp
scas
cmp
sub
sub
mov
cmp
dec
imul
mov
je
mov
mov
push
xchg
adc
push
pop
clc
add
lds
mov
lds
xchg
test
xchg
cld
mov
jmp
jae
jg
sub
cmps
out
mov
push
sub
sar
inc
xchg
imul
enter
pop
sub
xor
jge
(bad)
call
sub
clc
loop
jmp
sti
mov
jmp
xchg
mov
push
cli
cwde
enter
rol
push
mov
jge
sar
lods
cmp
mov
es
and
(bad)
call
or
(bad)
add
stc
mov
inc
jnp
cmc
aaa
cld
dec
mov
or
jge
call
(bad)
sub
(bad)
call
push
jle
xor
xchg
je
adc
xor
xor
dec
xor
xor
(bad)
jmp
(bad)
inc
outs
mov
mov
fcom
cld
jg
jo
jnp
pop
jge
stos
push
push
fdivr
stos
jle
(bad)
(bad)
jmp
aad
iret
out
in
push
les
mov
pop
sub
jmp
(bad)
push
stos
jecxz
adc
test
retf
popa
call
push
stc
mov
pushf
test
clc
scas
pusha
lds
call
imul
(bad)
inc
inc
inc
xchg
pop
aam
jnp
cmps
sub
jmp
out
out
add
cmp
outs
js
jmp
lea
inc
inc
(bad)
retf
adc
pop
mov
mov
lods
repz
cdq
lds
add
rol
call
dec
or
sub
xchg
dec
cmps
ja
inc
cmps
cli
dec
adc
cmp
(bad)
jmp
push
movs
loope
aad
test
sub
xor
imul
ja
inc
sbb
aaa
rcl
call
and
in
or
fcmovb
(bad)
(bad)
(bad)
call
jne
push
and
xchg
mov
pop
mov
inc
mov
inc
mov
(bad)
les
enter
inc
aad
(bad)
fcomip
mov
inc
sbb
push
aam
sub
pop
dec
adc
cld
(bad)
dec
xor
sub
mov
out
scas
mov
int
push
dec
inc
(bad)
(bad)
(bad)
(bad)
mov
sbb
sbb
movs
stos
adc
mov
fcmovbe
push
push
mov
xor
inc
jbe
scas
das
push
out
or
pop
out
cmps
ret
cmp
cli
or
mov
cmp
(bad)
jmp
test
mov
dec
popf
scas
push
imul
int
adc
mov
lods
mov
ja
mov
lds
ficom
mov
mov
(bad)
(bad)
call
mov
xchg
fidivr
(bad)
xor
out
jne
xchg
mov
movs
mov
mov
fs
(bad)
retf
popa
and
xchg
and
jae
pop
fcmovnu
jp
(bad)
(bad)
(bad)
(bad)
jmp
or
(bad)
xchg
inc
push
lods
pop
xlat
lea
inc
lods
retf
mov
mov
test
jecxz
dec
test
outs
das
push
call
aad
aaa
jmp
jbe
jmp
sub
fcom
(bad)
(bad)
mov
xor
xchg
div
pop
jbe
xchg
push
mov
xor
sti
or
mov
xchg
lea
jmp
or
out
cli
xchg
push
pop
cmps
mov
jmp
rol
sub
sbb
mov
mov
pop
in
call
enter
(bad)
call
(bad)
ins
imul
imul
(bad)
ja
xchg
xlat
push
imul
fsubr
push
xchg
rcl
(bad)
call
mov
call
(bad)
pop
add
or
and
jmp
clc
(bad)
ficom
adc
mov
jae
aaa
pop
add
inc
sti
fcmovu
pop
cmc
(bad)
(bad)
(bad)
std
cmp
rcr
pop
adc
outs
fs
xchg
mov
mov
xor
(bad)
(bad)
(bad)
(bad)
lock
mov
call
mov
xchg
retf
inc
mov
dec
aam
inc
cdq
pop
test
(bad)
(bad)
call
mov
jmp
out
out
add
xor
dec
outs
dec
dec
adc
(bad)
(bad)
call
sub
adc
movs
nop
test
loopne
ds
(bad)
push
addr16
clc
push
std
jg
js
in
xchg
inc
add
mov
cwde
adc
sbb
pop
int
jmp
pushf
xchg
mov
arpl
mov
loopne
test
mov
(bad)
inc
stos
pop
call
adc
push
push
movs
xchg
dec
sub
push
hlt
movs
sar
dec
(bad)
jmp
xor
sub
push
mov
adc
enter
(bad)
jmp
int3
and
lods
sub
imul
mov
in
stos
mov
jno
(bad)
test
jg
sbb
stos
daa
xor
mov
jae
aaa
scas
es
push
xchg
inc
stos
(bad)
(bad)
push
arpl
iret
cmp
push
test
cmc
sub
movs
mov
dec
(bad)
(bad)
(bad)
call
xchg
fsubr
adc
jmp
stos
lods
imul
mov
call
and
fwait
imul
push
les
jge
cwde
xor
(bad)
(bad)
(bad)
mov
pusha
lods
call
call
cmp
dec
and
(bad)
(bad)
call
rol
mov
sub
mov
cmps
dec
loope
scas
and
push
fimul
(bad)
(bad)
jmp
imul
or
or
test
outs
mov
icebp
arpl
xchg
test
lods
stc
jle
cmp
cmps
add
jmp
fistp
pop
rol
cmp
in
push
mov
sbb
mov
(bad)
push
mov
cmp
loop
test
iret
or
mov
loopne
jne
mov
(bad)
clc
das
and
mov
test
xchg
call
pop
mov
pop
loopne
dec
imul
lods
dec
ss
aaa
imul
push
and
dec
mov
std
xor
cmps
repnz
xchg
sbb
push
daa
xor
ret
add
cld
pop
outs
mov
sbb
in
(bad)
jg
pop
adc
mov
pop
lods
inc
sub
out
dec
aam
hlt
lock
retf
or
lods
pusha
mov
cs
mov
mov
xchg
stos
movs
ss
idiv
(bad)
(bad)
push
xor
jmp
test
cmps
adc
retf
pushf
add
jmp
push
popf
jmp
mov
lods
sbb
cld
call
lods
sbb
sub
xchg
push
(bad)
(bad)
(bad)
(bad)
aas
ins
xchg
scas
mov
(bad)
pop
add
xchg
test
mov
cmp
shl
hlt
mov
add
movs
sbb
push
in
lods
jp
xchg
xchg
sub
pop
or
fcomip
test
rol
stos
in
retf
or
mov
push
cs
call
pop
outs
cdq
inc
stos
xchg
push
adc
pop
stos
je
push
cli
aaa
std
es
sub
inc
aam
loope
cmp
stc
out
xchg
stc
dec
jb
mov
call
std
(bad)
xlat
sbb
jp
call
test
cmps
jge
imul
xchg
sub
les
add
and
dec
xlat
sub
mov
pop
mov
xchg
test
mov
jp
mov
mov
pop
mov
mov
and
(bad)
cli
dec
mov
(bad)
mov
sub
sub
jns
call
cmps
stos
inc
retf
jge
(bad)
(bad)
jmp
push
aaa
xor
or
sahf
inc
and
sahf
ret
aad
cld
dec
nop
cwde
jmp
ret
ja
movs
cmps
mov
pop
adc
push
adc
and
jmp
cld
call
dec
push
pop
loopne
ins
mul
div
and
dec
jmp
std
jmp
fld
stos
pop
loopne
mov
retf
pusha
fmul
call
add
jmp
inc
arpl
mov
int
cmp
loope
(bad)
(bad)
mov
mov
aam
mov
push
div
retf
sub
(bad)
std
call
push
fsubr
pop
in
loopne
loopne
inc
push
ins
mov
outs
xor
call
adc
movs
pop
call
pop
add
adc
int3
test
(bad)
(bad)
push
xor
mov
xor
mov
retf
scas
popf
gs
and
xchg
outs
test
(bad)
inc
fs
add
push
pusha
push
dec
jl
fucomp
repz
inc
iret
ss
sbb
(bad)
(bad)
(bad)
dec
inc
sub
mov
daa
das
xchg
lods
cmp
mov
(bad)
pop
cli
in
retf
shr
jmp
mov
popf
addr16
mov
jmp
xchg
outs
cs
add
into
aam
in
(bad)
push
push
jecxz
test
sbb
lods
mov
inc
jbe
call
mov
sbb
ins
add
mov
scas
(bad)
(bad)
out
clc
call
or
mov
push
mov
outs
(bad)
(bad)
(bad)
push
cmp
imul
ja
jbe
xchg
push
sbb
sahf
ficomp
out
ja
movs
icebp
sub
(bad)
inc
cmp
inc
push
test
ss
mov
das
ins
dec
jg
push
ss
jge
mov
or
scas
mov
mov
jecxz
(bad)
(bad)
(bad)
inc
xor
sub
xor
stos
mov
xchg
aaa
(bad)
jg
push
push
lock
test
dec
jno
dec
mov
dec
lods
jmp
sub
popf
push
data16
in
jmp
push
jbe
fstp
xchg
push
xor
shr
push
mov
mov
(bad)
call
rol
adc
add
mov
movs
mov
dec
(bad)
mov
call
outs
xchg
sub
mov
(bad)
out
clc
pop
fs
aaa
test
(bad)
ficom
pop
mov
inc
icebp
xor
(bad)
(bad)
dec
or
(bad)
nop
mov
sub
dec
xor
jge
stos
xor
xor
jg
lock
fmul
fs
(bad)
(bad)
(bad)
mov
add
xor
sahf
mov
call
into
ds
mov
(bad)
(bad)
(bad)
(bad)
cmp
sbb
pop
scas
sbb
(bad)
lock
mov
and
xor
call
mov
mov
mov
addr16
adc
cs
dec
ds
js
test
test
jl
push
sub
add
int
lock
push
push
add
test
push
dec
addr16
add
cs
cld
jg
jns
add
mov
in
xor
test
mov
call
sahf
jmp
mov
(bad)
out
mov
outs
fucomip
dec
sub
hlt
repnz
in
(bad)
dec
inc
aaa
mov
lods
xchg
cwde
es
or
lock
mov
lods
daa
and
outs
(bad)
push
or
adc
test
ds
stos
shr
aad
dec
inc
call
lahf
loopne
jmp
sahf
dec
sub
dec
fistp
in
aam
(bad)
(bad)
fist
cwde
ja
sahf
mov
mov
mov
lea
(bad)
fbstp
dec
pop
dec
sub
das
test
cmps
xchg
adc
retf
jmp
mov
data16
(bad)
jge
xor
xchg
test
mov
mov
stc
(bad)
ins
cmp
(bad)
mov
xor
les
int3
mov
ficomp
xchg
mov
in
mov
pop
sub
shr
dec
mov
push
(bad)
dec
cmps
cs
pop
and
mov
lea
jmp
adc
scas
mov
or
mov
push
movs
stos
into
movhps
cmps
sar
test
(bad)
imul
call
mov
cmp
jnp
push
pop
mov
sbb
jo
adc
scas
add
xchg
retf
mov
jecxz
loopne
xchg
dec
mov
test
arpl
(bad)
dec
mov
ins
pop
sbb
jmp
mov
pushf
mov
cmc
std
js
jmp
imul
cmp
adc
push
ret
retf
repz
sbb
cs
jl
mov
shl
stos
mov
mov
(bad)
jg
(bad)
(bad)
inc
dec
pusha
mov
xchg
mov
ror
rep
cmp
dec
lock
ret
push
jae
into
xchg
std
lods
sbb
add
paddd
lock
inc
aam
(bad)
or
fbstp
cdq
into
loopne
(bad)
(bad)
fistp
iret
fist
sub
mov
pushf
cmc
(bad)
hlt
jmp
sub
mov
mov
call
in
mov
in
pushf
jp
pop
mov
scas
sub
mov
test
fdivr
dec
aas
xor
mov
test
jmp
sub
cmp
sti
jmp
(bad)
stos
stos
add
jae
mov
push
neg
icebp
cwde
mov
cmp
(bad)
(bad)
jmp
(bad)
cmps
ret
mov
jns
ficomp
cli
jmp
mov
pop
dec
jp
lahf
cs
pushf
sbb
in
lea
cli
(bad)
(bad)
(bad)
jl
sub
push
sub
push
scas
out
pop
fidivr
test
mov
cwde
mov
pop
lods
cld
sti
repnz
cs
(bad)
mov
mov
adc
les
xchg
xchg
jl
or
xchg
cmp
pop
fs
clc
(bad)
(bad)
jmp
sub
icebp
jnp
sub
pop
cwde
loope
retf
scas
mov
pop
ins
data16
adc
jmp
outs
cs
sub
cdq
icebp
jmp
(bad)
mov
push
movs
mov
scas
retf
bound
(bad)
dec
push
xchg
pop
ins
iret
dec
imul
xchg
and
(bad)
(bad)
push
mov
ss
ss
iret
mov
out
mov
or
pusha
or
in
(bad)
(bad)
(bad)
fisttp
sbb
cmp
int3
sbb
mov
into
pop
lods
sub
jmp
cmp
push
stos
cmp
sbb
out
mov
mov
inc
in
out
addr16
mov
mov
repnz
adc
cld
(bad)
(bad)
call
xchg
es
mov
inc
jle
inc
sbb
push
outs
push
(bad)
fs
movs
(bad)
(bad)
call
xchg
mov
xor
call
movs
and
scas
mov
(bad)
call
mov
jg
cmps
repz
(bad)
out
loope
lods
sahf
mov
add
push
sar
call
xor
das
stos
shl
sub
jmp
sub
cmp
xchg
inc
adc
call
xor
dec
lahf
and
stos
retf
mov
lock
daa
cld
push
inc
dec
test
pop
inc
pop
add
xchg
loope
pop
sbb
pop
int3
(bad)
(bad)
(bad)
(bad)
jg
mov
lock
icebp
xor
xchg
cmp
push
pop
xchg
push
sbb
dec
imul
(bad)
(bad)
inc
fiadd
pop
xchg
mov
mov
(bad)
in
jg
lea
dec
push
inc
mov
mov
(bad)
push
call
cmp
in
fiadd
(bad)
jae
cmps
pop
data16
call
add
in
push
xor
(bad)
jmp
and
and
and
fcomp
pop
aas
push
xchg
sbb
(bad)
call
idiv
cmp
jmp
or
fsubr
mov
push
lahf
add
(bad)
(bad)
out
popf
or
adc
or
dec
xchg
mov
push
sbb
or
in
cli
jmp
nop
mov
xor
dec
in
call
je
or
mov
cmp
ins
(bad)
(bad)
add
icebp
popa
mov
jmp
push
add
dec
pop
push
arpl
xchg
pop
dec
sub
adc
cmp
lock
scas
jmp
loop
mov
bound
scas
loopne
nop
xor
call
mov
leave
(bad)
(bad)
(bad)
call
adc
call
sti
ins
sti
inc
pop
push
mov
pop
xchg
daa
call
(bad)
(bad)
jmp
(bad)
retf
adc
test
sub
test
jae
call
(bad)
(bad)
(bad)
inc
or
or
jmp
cld
cli
les
jne
xlat
add
(bad)
jg
(bad)
mov
cs
int
jae
scas
cmps
xor
jl
cmps
shl
out
popf
jae
(bad)
push
test
mov
aad
dec
aaa
jmp
sbb
enter
(bad)
jg
stos
push
inc
scas
jns
fs
sbb
lods
dec
mov
sub
add
(bad)
dec
scas
push
imul
stos
dec
jmp
popf
call
xchg
push
cmp
retf
or
push
outs
clc
(bad)
(bad)
cli
sub
adc
sub
in
adc
loope
jmp
out
pop
xchg
pop
xor
add
inc
out
adc
(bad)
(bad)
(bad)
dec
test
fsub
mov
jecxz
mov
in
push
loope
shr
push
(bad)
retf
jmp
inc
cmp
sub
push
sbb
not
(bad)
or
sub
call
mov
push
iret
aaa
jmp
dec
out
push
cs
mov
jmp
imul
loope
call
inc
xchg
jmp
mov
pop
push
je
imul
adc
mov
movs
jbe
or
mov
or
mov
inc
gs
mov
outs
push
ret
(bad)
(bad)
jmp
adc
outs
scas
into
xchg
out
das
outs
lods
jbe
jmp
lods
in
push
call
sub
mov
xor
jb
jge
push
lds
or
(bad)
fcomip
js
sub
cmp
add
push
mov
dec
xor
xchg
enter
(bad)
push
pop
inc
enter
jmp
or
jmp
inc
mov
or
(bad)
(bad)
(bad)
mov
leave
scas
fwait
rcr
adc
out
mov
(bad)
cwde
xchg
lods
mov
(bad)
(bad)
(bad)
call
mov
mov
or
movs
mov
mov
cmp
std
push
lock
mov
enter
into
adc
outs
sti
loopne
sub
push
xor
or
test
sbb
dec
in
cli
sbb
mov
test
(bad)
(bad)
jmp
jg
movs
or
push
mov
or
mov
and
xor
cmp
retf
xor
sar
(bad)
(bad)
fidiv
cs
push
and
(bad)
or
fmul
imul
shr
in
or
data16
jmp
or
cdq
lea
or
(bad)
jmp
and
out
mul
and
call
cli
(bad)
(bad)
dec
cmp
push
and
cmp
cmps
jg
push
ins
add
aam
sub
add
fwait
cmp
jmp
scas
lahf
outs
push
enter
sub
test
sub
les
push
add
jle
inc
pushf
dec
cmp
or
adc
das
mov
fsub
adc
mov
bound
(bad)
ret
cwde
inc
pop
sbb
(bad)
and
mov
xor
sar
cmp
cli
rol
cmp
sub
jl
xchg
inc
inc
mov
pop
lods
(bad)
mov
in
mov
pop
xor
retf
sbb
fwait
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
cmp
inc
xchg
mov
bound
push
retf
pop
sub
mul
push
and
arpl
mov
dec
std
mov
aas
enter
in
dec
jl
mov
mov
mov
push
int3
inc
into
stos
mov
js
ds
pop
mov
dec
push
inc
dec
push
(bad)
mov
and
int3
and
xchg
dec
pop
ja
call
dec
gs
xchg
call
push
ret
enter
or
movnti
repz
inc
pushf
push
adc
(bad)
out
(bad)
mov
(bad)
les
faddp
sbb
and
mov
(bad)
mov
ror
and
out
retf
(bad)
push
mov
stos
xor
ffreep
and
cmps
xchg
xchg
xlat
and
js
adc
inc
push
stc
dec
jb
retf
and
adc
enter
(bad)
jg
push
add
pushf
(bad)
nop
and
adc
mov
dec
lea
movs
mov
fs
or
cwde
int3
xor
add
inc
dec
sti
pop
cmp
mov
dec
arpl
push
std
dec
push
fiadd
ret
adc
(bad)
jge
add
mov
inc
pop
pop
jge
and
push
add
add
push
movs
fsub
pushf
(bad)
(bad)
dec
inc
jp
jmp
fwait
stc
sbb
sbb
jge
cwde
cmc
fst
sub
(bad)
jmp
popa
inc
ss
or
imul
push
sti
inc
jnp
ror
(bad)
jmp
imul
dec
cld
arpl
test
add
push
pop
fstp
fimul
bound
out
ins
dec
stc
call
mov
dec
ds
(bad)
xor
stos
xor
push
stos
xor
(bad)
mov
sub
xchg
in
call
cmp
or
cmp
mov
fs
push
sub
mov
jb
xchg
inc
mov
call
jmp
and
dec
aad
loope
loope
into
sub
mov
daa
(bad)
(bad)
(bad)
dec
fdivr
sbb
mov
sub
sbb
sbb
imul
fld
sub
jmp
stos
mov
mov
push
scas
push
fild
scas
push
(bad)
(bad)
dec
and
and
imul
popa
ds
outs
test
gs
(bad)
jmp
(bad)
sahf
cs
mov
imul
and
mov
(bad)
push
dec
(bad)
(bad)
(bad)
in
out
and
cmps
test
nop
lock
and
mov
mov
and
aaa
mov
mov
cs
push
sub
movs
jecxz
add
(bad)
(bad)
(bad)
push
and
or
mov
sub
mov
test
mov
call
inc
loopne
cmp
xchg
mov
xor
call
gs
call
std
pop
adc
mov
(bad)
(bad)
jp
(bad)
out
test
test
mov
or
(bad)
push
(bad)
(bad)
dec
scas
ror
dec
shl
retf
sub
movs
scas
sahf
sub
sahf
push
dec
retf
sub
sbb
mov
push
sbb
adc
pop
lock
(bad)
inc
popf
pop
dec
xor
push
lahf
jb
xor
mov
sub
push
cmp
and
jmp
push
call
sbb
adc
(bad)
(bad)
dec
push
inc
jbe
sub
in
mov
jmp
push
xor
mov
xor
sar
(bad)
call
add
out
mov
xor
mov
xchg
loop
das
or
ins
ret
jmp
bound
das
add
pusha
or
push
pop
(bad)
(bad)
inc
dec
shr
jl
mov
xor
push
and
pushf
xor
adc
loopne
loopne
mov
jne
cdq
cmps
fistp
cmp
or
xor
dec
add
call
dec
repnz
loop
or
retf
sub
mov
fstp
mov
loope
sub
arpl
sti
cmp
mov
sbb
outs
mov
aaa
std
(bad)
jmp
sub
loop
xchg
sti
shl
push
js
push
push
jbe
(bad)
(bad)
(bad)
jmp
scas
scas
mov
loop
jno
je
hlt
in
or
jns
mov
outs
add
loope
(bad)
(bad)
(bad)
dec
push
ja
xor
in
mov
in
push
push
fldcw
loop
loop
aaa
mov
daa
jne
dec
outs
retf
mov
and
scas
jns
ins
je
cmp
lahf
inc
fild
(bad)
(bad)
(bad)
in
jl
sbb
xchg
stos
test
out
add
outs
dec
jmp
js
mov
fcos
(bad)
(bad)
jmp
pop
retf
cwde
cmps
sbb
dec
outs
and
dec
mov
test
pop
out
cmc
(bad)
(bad)
jmp
sbb
xor
and
pop
movs
mov
out
xchg
ins
jmp
stos
(bad)
push
nop
or
mov
mov
in
fst
(bad)
inc
fwait
in
enter
(bad)
(bad)
(bad)
(bad)
jmp
xlat
pop
push
fwait
sar
add
fisub
seta
mov
movs
(bad)
dec
cli
fild
jp
int
mov
cmp
and
adc
(bad)
dec
imul
pop
sub
jmp
das
in
pop
adc
inc
stos
(bad)
fstp
jb
loopne
xchg
sti
cli
(bad)
out
mov
jne
jl
popf
cmp
arpl
call
sahf
outs
xor
out
sbb
jmp
sbb
stos
adc
pop
retf
popa
stos
iret
out
scas
je
stos
sub
dec
ja
call
sub
test
in
cmp
sar
sbb
mov
fwait
iret
inc
fs
mov
(bad)
(bad)
mov
cmp
sti
mov
dec
js
jl
sub
ret
pusha
inc
loope
ja
scas
mov
std
adc
call
(bad)
mov
daa
out
mov
out
pop
gs
popf
jg
pop
fild
pop
stos
inc
inc
fwait
ret
(bad)
dec
aam
outs
xchg
stos
gs
(bad)
sub
add
clc
mov
mov
(bad)
(bad)
jmp
pop
inc
test
(bad)
loop
lods
mov
mov
jae
jns
xchg
fwait
(bad)
cmp
rcr
push
ins
clc
pop
out
xchg
in
aaa
dec
inc
popa
dec
in
lods
ror
xchg
mov
fs
pop
and
jl
lods
pushf
lods
inc
mov
call
aas
inc
fisub
ds
(bad)
call
and
jns
fadd
(bad)
test
mov
add
(bad)
call
mov
ret
or
mov
je
sub
mov
cmps
out
stos
(bad)
(bad)
dec
sbb
dec
in
mov
std
sub
or
jg
lods
aas
stos
outs
outs
xchg
sar
cmp
pop
sub
xchg
jmp
retf
nop
scas
push
rol
mov
push
std
das
mov
fucomip
cwde
mov
mov
dec
mov
xchg
push
test
(bad)
dec
nop
or
scas
xor
arpl
mov
jmp
imul
(bad)
(bad)
(bad)
jmp
repnz
repnz
jno
test
leave
mov
stos
mov
mov
cmps
movs
ficom
jmp
push
mov
call
loope
add
pop
jae
hlt
mov
idiv
mov
or
dec
movs
ret
push
std
retf
sub
xchg
mov
scas
js
pop
(bad)
jnp
(bad)
(bad)
(bad)
dec
int
imul
mov
and
sbb
add
mov
bound
and
ja
push
push
(bad)
call
pop
add
aas
inc
jo
push
add
push
jmp
scas
aaa
leave
mov
cli
repz
inc
cs
jmp
jg
arpl
(bad)
(bad)
(bad)
call
sbb
push
rcl
pop
pop
outs
mov
sahf
mov
clc
push
cmps
in
dec
test
das
inc
iret
idiv
(bad)
mov
addr16
cld
aas
ror
aam
aam
sub
push
js
push
inc
(bad)
(bad)
jge
cld
call
in
imul
add
ror
jle
dec
push
and
fnstenv
jmp
(bad)
(bad)
(bad)
dec
cli
in
test
test
jp
(bad)
mov
jg
(bad)
jmp
mov
sar
(bad)
jmp
xchg
and
stos
cmp
movs
ins
mov
dec
adc
cmp
xor
(bad)
(bad)
(bad)
mov
nop
pop
std
xchg
retf
or
mov
xor
push
jp
stos
or
in
mov
(bad)
(bad)
inc
scas
mov
dec
pop
sbb
jp
in
pop
xchg
daa
sub
loopne
pop
push
outs
or
sbb
je
fadd
mov
loope
stos
mov
pop
fld
lods
push
pop
jp
aad
push
(bad)
stc
fs
push
test
call
stos
fistp
jb
dec
mov
ds
sub
into
cs
dec
(bad)
dec
cli
cmc
pop
adc
pop
cmc
push
mov
sbb
jb
cmp
jmp
push
push
sbb
and
out
xchg
fpatan
add
mov
mov
dec
ins
test
(bad)
(bad)
call
xchg
jne
push
stos
push
push
add
mov
mov
pop
push
jg
push
sub
or
(bad)
(bad)
(bad)
in
imul
sub
mov
test
sbb
ret
push
stos
dec
out
mov
scas
adc
pop
pop
and
test
ret
push
mov
jb
(bad)
(bad)
(bad)
mov
mov
pop
xchg
add
mul
mov
fsubrp
(bad)
(bad)
(bad)
mov
fwait
inc
scas
lock
xlat
std
mov
lods
sbb
sub
cmc
jmp
loop
mov
jmp
jb
jp
and
(bad)
(bad)
push
scas
fadd
mov
xor
bound
fs
aad
mov
(bad)
(bad)
call
xor
fwait
sbb
lahf
push
add
xlat
popa
call
mov
xor
mov
jb
call
and
mov
mov
jmp
xchg
pop
jmp
call
jb
scas
add
add
movs
mov
fs
sbb
gs
movs
cmps
movs
pop
clc
(bad)
(bad)
call
sahf
mov
inc
je
movs
jb
fdivr
lock
push
dec
lods
shr
(bad)
(bad)
out
inc
mov
lahf
fisttp
adc
cmp
pusha
jle
add
mov
das
sti
push
mov
adc
(bad)
(bad)
push
cld
ins
jle
das
pop
sub
ret
mov
inc
and
fsubr
inc
push
movs
mov
dec
(bad)
(bad)
(bad)
dec
adc
popf
mov
jne
sbb
pop
jo
jecxz
fs
ins
in
or
(bad)
(bad)
(bad)
jmp
fs
and
sub
sbb
cdq
push
imul
cmp
adc
inc
fld
cs
inc
(bad)
pop
jg
idiv
test
dec
push
push
pop
sbb
mov
int3
(bad)
test
mov
add
inc
sub
(bad)
sbb
std
call
push
bound
scas
in
js
pop
pop
lods
mov
jmp
frstor
mov
adc
adc
es
mov
(bad)
mov
mov
and
je
cmp
hlt
jnp
mov
sub
jmp
(bad)
(bad)
(bad)
jg
mov
test
xchg
cmp
dec
mov
lods
data16
inc
jb
adc
(bad)
push
rcl
xchg
lods
push
(bad)
outs
mov
mov
pusha
jns
ror
jnp
mov
pop
neg
pop
(bad)
(bad)
(bad)
(bad)
jns
mov
push
push
sub
xchg
mov
mov
aad
mov
mov
call
frstpm(287
xor
stos
or
push
add
or
dec
xor
mov
scas
adc
stos
mov
ins
mov
sub
scas
mov
cmp
aas
mov
scas
ss
push
sar
out
add
mov
repnz
ficomp
pop
loop
ret
jecxz
adc
jmp
shl
aam
add
movs
pushf
pop
push
mov
enter
adc
xchg
sub
mov
dec
dec
cld
in
in
pop
sub
imul
hlt
pushf
lods
sbb
jmp
dec
retf
and
cmp
sub
and
cmp
push
fldcw
(bad)
(bad)
jmp
mov
retf
test
aaa
inc
inc
stos
repnz
(bad)
(bad)
call
(bad)
xchg
pop
mov
jecxz
mov
test
xor
dec
pop
cli
jmp
loop
and
mov
mov
push
jbe
clc
call
push
cmps
test
adc
lock
dec
mov
add
(bad)
fistp
test
cmp
sti
retf
es
sub
or
cmps
pop
(bad)
sub
(bad)
jg
loopne
test
mov
imul
es
jbe
inc
addr16
icebp
(bad)
(bad)
dec
(bad)
mov
adc
xchg
ins
adc
adc
(bad)
call
xchg
and
sub
and
pop
xchg
popa
sub
push
jmp
adc
ja
push
scas
imul
cmp
jle
sub
adc
push
(bad)
(bad)
jmp
dec
and
stos
mov
daa
cmps
mov
mov
push
addr16
in
sub
stos
ins
mov
dec
test
mov
(bad)
(bad)
jmp
xchg
cs
jp
retf
mov
pusha
push
mov
dec
xlat
scas
jbe
xchg
dec
(bad)
fld
jecxz
mov
(bad)
dec
(bad)
jno
frndint
pop
adc
daa
loop
cld
lds
mov
mov
scas
jecxz
outs
sbb
imul
(bad)
fidiv
sbb
pop
imul
scas
inc
cmp
popf
mov
cdq
pop
test
sbb
callw
stos
imul
inc
leave
ror
(bad)
cld
pop
test
retf
push
ss
(bad)
in
jmp
cmp
movs
movs
jb
es
loop
je
push
xor
mov
movs
(bad)
dec
stos
pop
add
or
cmp
and
test
cmps
je
sbb
inc
(bad)
(bad)
dec
jb
mov
ins
lds
daa
mov
jmp
(bad)
dec
sub
aad
daa
cmp
sub
loope
mov
aaa
bound
push
sub
(bad)
fbld
stos
ins
movs
cmp
lds
fdivr
push
fsubr
mov
sar
xchg
xor
sub
push
cmps
outs
mov
push
fwait
push
mov
pop
dec
mov
sub
dec
test
or
(bad)
xor
cmp
xchg
jmp
jmp
test
(bad)
jle
(bad)
jmp
jb
push
mov
ss
sub
cmp
sbb
mov
fisub
(bad)
(bad)
jmp
test
sbb
push
sahf
shl
(bad)
popa
jmp
(bad)
(bad)
inc
jge
xor
pop
push
pop
pop
dec
retf
push
movs
xchg
xchg
inc
(bad)
mov
es
xor
(bad)
push
pop
and
aam
cmp
in
jmp
inc
cmp
add
mov
add
xor
sbb
lds
test
aad
pop
add
sti
(bad)
(bad)
mov
mov
pop
xor
add
cmp
loope
and
add
add
cmp
xor
dec
lock
xchg
mov
jo
mov
dec
out
ret
mov
xor
(bad)
(bad)
(bad)
(bad)
jmp
cli
push
cmp
push
or
sub
pop
cmp
or
(bad)
(bad)
(bad)
inc
cmp
jno
fidivr
push
jmp
fisubr
dec
cmp
mov
faddp
repz
inc
jb
test
sub
push
dec
mov
and
fbld
push
ret
pop
sar
xchg
dec
mov
test
or
test
jbe
(bad)
cmp
cmp
or
imul
dec
imul
inc
sub
retf
sbb
sub
jnp
add
or
mov
call
and
or
pop
sbb
push
pop
movs
or
(bad)
(bad)
(bad)
call
mov
pop
pop
push
cmp
dec
xor
add
or
xchg
in
add
test
shl
mov
cli
push
idiv
ret
outs
jns
movs
and
add
add
pop
xor
inc
pop
repnz
inc
and
jge
out
sbb
in
sti
inc
pop
in
sub
test
mov
imul
(bad)
(bad)
call
pop
test
loop
sbb
outs
addr16
fsub
stos
outs
test
scas
test
pop
hlt
inc
cmps
jmp
push
hlt
faddp
adc
rcr
pop
cmps
cmp
xchg
mov
pop
inc
push
in
movs
into
jns
sbb
cs
mov
pop
push
sub
scas
dec
cli
int
xor
or
pop
xor
cwde
lds
pop
dec
fisubr
sbb
ins
test
ins
imul
test
jmp
pop
push
mov
mov
retf
inc
jmp
push
jp
cli
dec
in
clc
sub
(bad)
fdivp
in
ins
push
imul
fisubr
adc
(bad)
scas
or
mov
sbb
int3
ds
push
(bad)
mov
cmp
jg
push
fwait
pop
jmp
ins
jge
ss
adc
cmp
jl
jmp
out
or
into
popa
cmp
push
lock
cmp
sbb
outs
(bad)
sti
jg
add
sub
mov
push
call
movs
sub
dec
mov
hlt
fisttp
push
push
push
cmp
sahf
mov
cli
sub
sub
jp
and
aaa
std
hlt
mov
movs
jecxz
xchg
mov
cld
into
mov
int
add
mov
xor
xor
cmp
outs
(bad)
call
mov
fimul
loop
mov
pop
ret
push
mov
hlt
fistp
push
sahf
(bad)
loopne
jb
jo
loope
sti
push
fild
mov
cld
test
retf
push
cdq
jmp
jbe
call
fisttp
sub
push
or
pop
mov
xor
jmp
mov
fdivp
ja
stos
push
es
stos
xor
inc
rcl
imul
enter
outs
fisubr
sbb
shr
(bad)
jo
fisubr
out
loop
push
ficomp
lods
retf
sti
(bad)
(bad)
(bad)
jp
push
mov
add
mov
xchg
push
js
add
mov
add
aad
or
adc
(bad)
(bad)
jg
mov
or
fcom
stos
ins
jmp
or
shl
or
clc
(bad)
(bad)
(bad)
push
push
mov
repz
or
js
push
outs
loop
mov
mov
sbb
(bad)
(bad)
cmp
test
dec
cmps
xchg
xchg
out
pop
and
int3
mov
jmp
jp
cmp
(bad)
das
bound
(bad)
(bad)
cmp
js
and
sar
sbb
call
(bad)
dec
cli
fcmove
mov
push
rcr
or
push
iret
adc
push
jmp
int
fnstsw
(bad)
(bad)
(bad)
(bad)
std
jp
(bad)
lea
cmp
pop
pop
pop
cmps
and
xlat
pop
adc
dec
jmp
adc
sbb
std
sub
and
fs
xchg
xchg
adc
sub
(bad)
(bad)
jmp
adc
mov
in
sub
cli
sbb
(bad)
iret
inc
sti
and
mov
lock
jne
sub
test
cmp
leave
fld
(bad)
mov
mov
in
cdq
inc
scas
cdq
hlt
(bad)
(bad)
dec
mov
mov
(bad)
retf
addr16
push
sub
enter
test
mov
jmp
std
pop
stos
ins
call
pop
push
stos
int
int3
int3
(bad)
inc
mov
in
sub
add
push
aam
pop
push
mov
push
jge
xchg
mov
int
jbe
fdiv
jne
fbld
mov
(bad)
(bad)
(bad)
jmp
int
je
xchg
or
in
dec
push
or
mov
ja
ja
or
or
sbb
sub
inc
mov
(bad)
mov
adc
(bad)
fmul
jo
call
xor
(bad)
push
loopne
fld
sub
adc
xchg
(bad)
call
outs
jmp
inc
dec
movs
mov
push
jne
jp
push
or
cmp
sub
(bad)
(bad)
(bad)
inc
repz
daa
mov
fs
inc
xlat
xchg
test
pop
push
xchg
inc
xchg
loope
shl
sub
adc
jecxz
(bad)
(bad)
inc
sub
dec
adc
data16
ror
je
or
stc
je
jmp
dec
(bad)
(bad)
(bad)
(bad)
out
adc
arpl
fs
daa
pop
shl
mov
push
dec
ret
(bad)
jmp
xchg
add
xor
mov
lods
push
and
(bad)
(bad)
call
or
enter
outs
inc
hlt
js
mov
adc
out
sbb
xchg
push
sar
dec
das
outs
test
aaa
dec
xor
or
fld
stos
xchg
js
mov
mov
imul
outs
icebp
(bad)
ret
pop
jg
hlt
xlat
jg
mov
or
jg
clc
(bad)
inc
outs
xchg
popf
cmp
dec
test
mov
outs
(bad)
call
jp
xchg
int
mov
xchg
outs
xchg
arpl
cmp
or
pop
aad
jo
je
inc
les
dec
aad
ja
ins
hlt
add
repz
into
mov
sub
out
mov
aam
ja
inc
inc
sbb
xor
jmp
mov
inc
(bad)
fild
adc
inc
add
repz
(bad)
(bad)
(bad)
call
ror
sti
xor
add
xchg
dec
push
jp
or
inc
fs
test
ja
aam
mov
rcl
(bad)
(bad)
push
push
inc
xchg
push
(bad)
cmp
adc
rcr
daa
cs
pop
xor
jmp
xor
(bad)
in
xchg
pop
jnp
adc
mov
sub
cmp
jno
mov
sub
hlt
push
add
sar
add
stos
outs
fidiv
adc
call
xor
cli
xchg
es
sub
jecxz
out
jmp
inc
inc
(bad)
out
mov
rol
into
xchg
mov
mov
leave
mov
(bad)
(bad)
jmp
push
ins
or
mov
movs
addr16
sub
mov
sbb
sbb
jae
push
loop
out
imul
sub
jmp
xchg
scas
mov
ret
call
xor
mov
cld
test
(bad)
(bad)
(bad)
jmp
test
pusha
in
push
pop
mov
dec
sub
mov
xchg
mov
(bad)
(bad)
(bad)
jmp
mov
mov
jmp
sub
xor
sub
jl
jne
inc
xor
(bad)
(bad)
(bad)
call
in
sahf
sub
pop
es
xchg
(bad)
scas
(bad)
push
mov
sar
outs
jmp
mov
imul
xor
xchg
cwde
es
dec
sub
mov
mov
and
cdq
jbe
fdivrp
ds
retf
stc
jmp
dec
pop
(bad)
(bad)
fcomip
stos
daa
shr
sub
into
jns
scas
das
retf
into
bound
mov
(bad)
(bad)
mov
repnz
sub
mov
and
sub
ficomp
rcl
(bad)
dec
fcmovu
outs
push
call
in
push
pop
dec
jle
cli
pop
fisub
fcmovbe
jb
out
pop
and
(bad)
push
jmp
or
xchg
imul
clc
imul
cmps
mov
aaa
icebp
mov
push
in
pop
pop
scas
and
mov
cld
movs
and
(bad)
(bad)
jmp
xor
xor
cld
mov
in
xor
pop
mov
imul
push
push
sbb
faddp
sbb
pop
xchg
cs
sar
(bad)
(bad)
push
aaa
jb
es
or
into
xlat
dec
mov
test
mov
add
call
inc
sti
pop
mov
stos
mov
test
stos
sbb
ficom
sbb
jmp
fcmovu
lds
fistp
retf
pop
test
inc
add
xlat
(bad)
(bad)
(bad)
(bad)
jmp
mov
pop
fimul
push
das
mov
add
sub
call
call
sub
mov
cmp
lods
pop
or
jns
frstor
into
(bad)
(bad)
jg
mov
test
sbb
mov
cdq
sbb
scas
inc
sub
mov
cmc
(bad)
push
out
xchg
cmps
fisub
jbe
out
repnz
pop
nop
ins
cmp
fistp
call
(bad)
adc
xchg
enter
sub
dec
xchg
stc
and
imul
cmc
adc
loope
jle
lock
or
adc
retf
jmp
in
push
sbb
loope
(bad)
(bad)
call
scas
iret
push
mov
out
dec
fdivr
mov
mov
dec
in
sbb
and
(bad)
(bad)
dec
sbb
add
adc
sub
stos
jmp
fcom
bound
shl
xchg
mov
sub
imul
iret
adc
(bad)
(bad)
jmp
fsub
dec
test
ja
repnz
pop
jb
scas
mov
clc
data16
cs
lods
jmp
in
mov
(bad)
(bad)
jmp
outs
cli
int
xchg
cmp
cmp
dec
mov
ja
and
and
into
mov
test
lods
and
pop
xor
and
stos
or
(bad)
(bad)
(bad)
push
popa
mov
stos
sub
jbe
mov
cmp
push
push
xor
(bad)
(bad)
push
push
cli
cs
jmp
aam
lods
mov
adc
cmps
add
xor
jb
(bad)
(bad)
(bad)
jmp
in
enter
xchg
imul
ret
outs
and
sbb
call
imul
mov
mov
adc
into
add
out
ss
sub
lock
hlt
das
or
aam
and
jmp
enter
in
mov
mov
push
test
loop
scas
push
imul
mov
clc
(bad)
dec
cmp
lock
movs
rol
cs
je
jmp
in
loop
rol
mov
sub
and
jo
mov
pop
std
(bad)
mov
mov
sub
in
mov
lds
xchg
(bad)
(bad)
(bad)
cmp
mov
sti
dec
cmps
mov
in
push
(bad)
dec
cmp
pop
and
mov
stos
mov
cmps
xor
(bad)
(bad)
cli
retf
cmp
push
cmp
jb
out
push
push
jg
pop
mov
jle
dec
jne
mov
push
dec
(bad)
(bad)
(bad)
call
into
dec
fnstsw
lods
pop
ror
mov
pop
dec
stc
sub
sti
iret
mov
out
dec
hlt
dec
loop
dec
call
jl
inc
es
(bad)
(bad)
jg
jae
ss
cmps
fidiv
jl
mov
add
loop
movs
std
sbb
daa
mov
pop
rcl
fsub
mov
nop
jno
dec
sbb
inc
js
mov
(bad)
(bad)
mov
les
fisubr
sahf
ss
(bad)
and
mov
ret
(bad)
(bad)
out
cli
fld
sub
popa
mov
and
adc
cmp
(bad)
(bad)
(bad)
inc
sub
into
push
or
cmp
and
cwde
xchg
repz
fcmove
sbb
add
jmp
mov
xor
cmp
add
push
xor
push
xchg
in
dec
lods
sbb
pop
hlt
(bad)
cmp
xchg
enter
loopne
xor
jns
pop
jns
rcl
push
pop
dec
scas
scas
pop
xor
or
push
mov
sahf
add
bound
or
xchg
pusha
mov
out
xchg
outs
fwait
outs
mov
lods
inc
xchg
(bad)
(bad)
(bad)
mov
mov
movs
pop
adc
mov
mov
out
fs
por
fbld
or
adc
mov
pop
pop
retf
cmps
sub
sbb
cwde
jns
inc
xor
and
adc
sub
(bad)
(bad)
(bad)
(bad)
jns
cmc
in
nop
lahf
or
cmp
cmp
stos
call
dec
mov
jmp
(bad)
(bad)
push
stos
inc
sub
push
jmp
dec
cmp
inc
ret
ret
push
mov
imul
cs
jb
sbb
jnp
dec
loop
into
mov
ret
into
xor
retf
ins
clc
call
(bad)
push
mov
push
pop
or
arpl
and
imul
jg
mov
mov
(bad)
aam
inc
mov
sub
(bad)
sti
test
(bad)
fidivr
clc
ss
jne
jecxz
loop
or
cmc
(bad)
(bad)
cmp
mov
call
fpatan
and
fidivr
adc
jecxz
cld
jg
or
inc
jne
clc
out
ret
inc
pop
mov
sub
xchg
es
loop
xor
ins
iret
xchg
xor
push
loopne
retf
xchg
sbb
(bad)
(bad)
inc
inc
jmp
xor
sbb
mov
stos
fist
xlat
xchg
fldcw
(bad)
(bad)
(bad)
jg
addr16
mov
rcr
enter
mov
out
cdq
inc
movs
ds
test
adc
in
sbb
ror
or
add
cmps
outs
pop
outs
jp
jl
stos
lods
scas
gs
xchg
xor
loop
jmp
mov
or
mov
repnz
(bad)
(bad)
push
ss
jnp
loop
and
push
outs
jmp
pop
pop
mov
call
jg
mov
adc
jb
rol
sbb
arpl
dec
dec
add
mov
cs
cdq
mov
jg
daa
mov
cdq
fyl2xp1
sar
fbstp
shr
out
call
sbb
fxch
sub
out
test
(bad)
(bad)
inc
movs
or
push
mov
pop
scas
mov
sbb
es
call
(bad)
jmp
inc
mov
push
sub
cmp
nop
push
jle
pop
add
in
(bad)
(bad)
(bad)
dec
jle
jb
je
mov
mov
pop
aam
je
dec
xchg
sub
jnp
dec
xchg
(bad)
call
fstp
push
inc
jmp
xlat
out
and
outs
call
aam
mov
in
push
cs
clc
outs
cmps
call
sub
(bad)
(bad)
jmp
and
push
cmps
fldenv
push
or
dec
pusha
pop
sub
inc
xor
mov
mov
jp
jmp
add
xor
movsx
mov
inc
mov
(bad)
fcomip
call
sub
fnstenv
jg
mov
movs
jecxz
add
mov
(bad)
inc
js
test
or
retf
adc
xchg
push
stc
hlt
ret
fidiv
out
(bad)
(bad)
(bad)
(bad)
push
push
mov
je
or
dec
retf
bound
xor
pop
fadd
arpl
leave
add
retf
jmp
and
dec
add
retf
(bad)
sti
(bad)
(bad)
cmp
xor
fcom
mov
adc
xor
div
call
ja
jbe
xchg
adc
test
mov
lock
and
or
lahf
jmp
sub
adc
(bad)
call
jb
cmps
not
xor
dec
jae
cld
in
push
icebp
sbb
(bad)
jg
and
fistp
fimul
in
popa
scas
pop
imul
cmp
(bad)
pop
(bad)
(bad)
fnstsw
sbb
xchg
mov
adc
stos
cmp
movs
jmp
dec
(bad)
jmp
and
jge
xchg
cmps
dec
sub
imul
or
or
fdivr
(bad)
(bad)
push
imul
test
inc
mov
and
mov
in
stos
push
(bad)
(bad)
dec
mov
mov
ret
imul
mov
call
dec
jne
imul
mov
(bad)
(bad)
(bad)
call
xchg
aam
mov
ds
add
mov
outs
fcmovne
arpl
imul
dec
vpcmpgtw
and
call
loopne
pop
fcmovne
into
pop
stos
fmul
mov
push
mov
add
xchg
(bad)
(bad)
dec
xor
or
jle
mov
or
sbb
mov
(bad)
(bad)
call
dec
mov
mov
lds
js
test
jecxz
pop
in
and
push
(bad)
jg
(bad)
mov
nop
stc
sbb
mov
jg
jmp
loopne
fstp
stos
in
div
push
or
sub
push
lahf
xchg
imul
in
lods
pop
lods
push
dec
out
dec
inc
jge
sbb
or
jp
sub
in
es
add
es
data16
cmc
imul
xchg
jle
jnp
imul
(bad)
(bad)
call
push
std
call
xor
pop
and
jae
(bad)
or
(bad)
(bad)
(bad)
jmp
cmp
push
lahf
stos
add
out
sub
(bad)
(bad)
call
ins
pusha
ret
(bad)
std
mov
jg
(bad)
jmp
mov
jmp
call
inc
jmp
lea
(bad)
inc
mov
or
std
mov
or
movs
sbb
pop
shr
fidiv
sub
(bad)
inc
ret
fstp
adc
sbb
or
idiv
(bad)
push
mov
jnp
in
adc
mov
sub
mov
jne
dec
ins
mov
call
(bad)
mov
retf
out
pop
or
iret
pop
push
mov
push
mov
lods
call
(bad)
adc
cdq
scas
iret
cs
push
xchg
push
movs
inc
rcr
aad
stc
mov
(bad)
(bad)
jnp
adc
xchg
add
ins
daa
ret
rol
jge
xlat
or
test
fidiv
test
in
aad
(bad)
pop
(bad)
(bad)
(bad)
jmp
call
jge
rcr
or
int3
mov
popa
outs
xchg
pop
push
mov
(bad)
mov
inc
cmp
jns
sub
retf
mov
test
outs
mov
sbb
inc
cdq
or
xor
adc
sub
and
cmp
mov
shr
std
adc
mov
pop
mov
sbb
call
adc
repnz
dec
dec
pop
push
sbb
jns
cli
and
mov
outs
cli
jp
pop
jmp
cmp
bound
adc
dec
mov
xchg
movs
(bad)
(bad)
(bad)
dec
cmps
hlt
(bad)
xor
jmp
xchg
jle
stos
loop
lahf
jb
outs
(bad)
(bad)
(bad)
mov
xor
sar
sbb
mov
fwait
cmp
ds
jb
sar
sahf
test
sbb
mov
call
push
std
(bad)
mov
sbb
ins
mov
cmp
(bad)
(bad)
cmp
fcomi
call
mov
(bad)
(bad)
call
test
mov
mov
mov
scas
xchg
jmp
out
inc
jp
(bad)
(bad)
(bad)
jmp
call
or
and
test
aad
inc
xor
movd
aam
inc
cld
inc
add
or
push
popa
jmp
loopne
mov
inc
fwait
mov
mov
dec
fwait
sub
mov
movs
(bad)
scas
js
imul
mov
cli
bound
(bad)
(bad)
call
js
fs
jno
push
and
mov
pop
dec
arpl
adc
(bad)
pop
cmp
push
dec
push
dec
sub
stos
inc
add
cmp
cs
mov
mov
or
push
mov
fldl2t
scas
daa
push
bound
call
sahf
addr16
fcomip
jmp
popf
mov
out
add
add
sbb
clc
cmps
fwait
ja
(bad)
call
mov
fidivr
dec
cdq
add
dec
dec
mov
into
and
ret
scas
(bad)
(bad)
(bad)
(bad)
(bad)
lock
retf
loop
iret
test
(bad)
loopne
fisub
aaa
or
fsubr
out
sahf
enter
repnz
call
test
or
add
xor
or
mov
push
test
jb
(bad)
adc
ds
(bad)
(bad)
(bad)
call
pushf
pop
movs
sub
pop
cmc
ins
std
test
cwde
lods
cmp
retf
cdq
cmps
fstp
(bad)
jg
inc
movs
cs
test
push
add
rcl
(bad)
mov
loop
cmps
or
call
(bad)
dec
or
mov
stc
(bad)
(bad)
(bad)
jmp
pop
xchg
dec
(bad)
test
pusha
pushf
jno
and
sub
mov
pop
inc
bound
js
jns
icebp
mov
sub
outs
xchg
test
out
mov
neg
call
in
jg
lock
in
inc
jne
cmps
xchg
(bad)
cwde
jbe
fmul
xchg
mov
rol
and
mov
je
pop
imul
pop
frstor
sbb
dec
mov
shr
(bad)
jmp
movs
neg
std
retf
sub
std
push
mov
adc
leave
dec
sbb
jmp
(bad)
(bad)
push
mul
add
hlt
rcl
loop
add
pop
add
mov
mov
(bad)
(bad)
clc
shr
retf
and
adc
gs
xchg
test
sbb
xor
(bad)
(bad)
(bad)
mov
int3
bound
add
dec
retf
into
push
retf
mov
mov
mov
pop
scas
fs
sbb
lahf
dec
mov
xchg
out
(bad)
enter
or
dec
xor
push
aam
xchg
retf
pop
std
(bad)
loop
xchg
(bad)
(bad)
call
cwde
cdq
pmaxub
mov
sub
add
mov
ret
leave
mov
or
mov
add
pop
in
pop
out
sub
dec
xchg
(bad)
(bad)
(bad)
call
pop
out
fidiv
or
sbb
add
adc
mov
(bad)
dec
inc
xchg
push
jne
out
fimul
jb
fiadd
cmps
xor
cmps
add
sbb
(bad)
jmp
mov
cmps
mov
test
shl
mov
stos
(bad)
call
jp
aas
fbstp
add
jmp
jge
pop
out
test
(bad)
(bad)
(bad)
jmp
std
xor
iret
mov
mov
sbb
fisttp
gs
xor
sbb
ret
xor
ret
dec
mov
add
(bad)
(bad)
jmp
push
test
test
mov
mov
or
dec
dec
scas
xchg
(bad)
(bad)
push
mov
cwde
aam
test
xor
xchg
(bad)
mov
fs
jmp
test
repnz
das
or
in
sub
and
pop
fisttp
(bad)
jmp
scas
in
outs
mov
(bad)
leave
sub
inc
xchg
add
cmps
ret
(bad)
push
adc
mov
daa
xchg
pop
mov
adc
rcl
push
das
ss
ds
dec
xor
(bad)
jmp
mov
jl
inc
push
jmp
cld
pop
enter
and
nop
(bad)
(bad)
(bad)
call
out
fmul
lea
imul
inc
fild
adc
adc
sbb
jmp
push
call
jnp
iret
sub
stos
daa
mov
ins
push
scas
pop
bound
(bad)
(bad)
(bad)
clc
cmp
ficom
dec
rol
loop
retf
mov
ins
hlt
sub
and
(bad)
(bad)
(bad)
jmp
iret
xlat
and
test
mov
mov
lods
cmp
repz
das
push
test
(bad)
jmp
std
mov
movs
stos
pop
sbb
xchg
inc
cmp
push
ja
pop
push
js
test
cmc
dec
push
(bad)
call
(bad)
mov
pop
pop
ins
dec
push
dec
xor
popa
pop
jae
movs
ins
xchg
sub
sub
(bad)
push
cld
cmps
es
mov
xor
or
(bad)
pop
cwde
inc
call
sbb
inc
pop
adc
js
cwde
sti
imul
popa
rcl
xor
nop
(bad)
(bad)
mov
xor
fidiv
(bad)
dec
test
call
cmp
ins
sub
cmps
push
jp
fdiv
push
icebp
fnsave
adc
(bad)
jmp
call
add
pop
je
dec
aas
dec
cmp
dec
clc
(bad)
(bad)
fild
cmps
cmps
retf
sub
movs
movs
(bad)
cdq
imul
jns
cdq
sar
lods
jl
test
jmp
jmp
retf
sub
fwait
jne
retf
cmp
(bad)
mov
inc
lds
adc
iret
push
xlat
cmp
jge
pop
sti
test
mov
(bad)
call
jl
mov
fiadd
retf
ret
dec
call
aaa
sub
dec
shl
or
sbb
fnsave
adc
jl
jb
clc
(bad)
(bad)
call
jle
push
mov
gs
mov
jnp
(bad)
pop
lods
mov
into
gs
int
push
inc
adc
jno
jno
pop
aad
jb
popf
gs
or
aad
adc
bound
sbb
dec
outs
clc
mov
cmp
scas
or
sub
paddw
cld
call
or
sub
retf
gs
lahf
mov
mov
push
or
iret
jl
cli
and
jne
mov
dec
inc
sbb
outs
dec
adc
mov
test
xchg
and
jmp
(bad)
(bad)
call
ror
and
and
pop
call
pop
or
(bad)
(bad)
dec
push
ficomp
push
test
stos
jmp
inc
mov
and
loope
fucomp
outs
(bad)
loope
bound
or
arpl
call
push
movs
ds
or
cli
test
(bad)
(bad)
mov
scas
out
inc
test
out
outs
cs
mov
das
outs
dec
push
lods
push
iret
in
sub
mov
arpl
outs
sub
pop
mov
jmp
and
mov
(bad)
fistp
imul
outs
sbb
es
xchg
fwait
cmp
lods
cli
cli
xchg
adc
jmp
clc
call
sti
iret
scas
xchg
cwde
xchg
cli
pop
das
mov
cli
adc
pop
xchg
mov
mov
iret
cdq
cs
xlat
das
aad
imul
add
(bad)
call
cmps
fwait
mov
loopne
cs
jmp
call
clc
movs
push
push
mov
or
aad
aam
dec
mov
(bad)
push
sub
lds
movs
clc
cdq
stos
imul
pop
les
mov
jmp
(bad)
(bad)
fnstsw
(bad)
aad
cmp
stos
xchg
mov
out
push
mov
enter
lahf
xchg
js
mov
inc
sbb
data16
mov
adc
stos
addr16
(bad)
(bad)
(bad)
push
ja
pop
(bad)
lods
pop
adc
or
call
aad
inc
mov
lahf
mov
(bad)
(bad)
jmp
mov
addr16
repnz
xor
jmp
add
mov
push
sub
scas
push
fmul
or
xor
fdivr
push
call
in
(bad)
(bad)
call
push
stc
mov
adc
or
add
ja
sti
jmp
dec
xlat
shl
shl
xchg
dec
xor
(bad)
push
icebp
mov
ret
rol
call
xor
shr
stos
pop
jmp
(bad)
mov
fmul
fisub
stos
ins
das
ds
loop
in
add
imul
(bad)
inc
popa
ins
mov
pop
in
push
inc
in
in
stos
mov
stos
adc
ins
mov
adc
adc
sub
push
retf
mov
push
cmps
sub
mov
xchg
hlt
and
aam
xor
inc
in
test
test
retf
es
mov
stos
(bad)
push
dec
mov
(bad)
jmp
aaa
out
movs
test
(bad)
(bad)
(bad)
jmp
test
mov
add
pop
sub
xor
pop
add
add
retf
loop
sar
add
xchg
jbe
gs
dec
mov
ja
lods
(bad)
(bad)
(bad)
mov
pop
push
jmp
sbb
jnp
mov
hlt
repz
push
pop
xor
out
(bad)
jg
jmp
or
pop
cmp
jle
push
lds
cs
stos
ins
cmps
dec
(bad)
mov
push
push
mov
dec
pop
pusha
or
and
pusha
and
and
stos
inc
mov
dec
clc
(bad)
aas
jmp
dec
retf
sub
(bad)
sti
adc
(bad)
push
push
sub
jnp
stos
jmp
stos
inc
enter
lea
(bad)
fidivr
cs
jle
push
mov
sub
or
push
mov
pop
stos
mov
mov
adc
(bad)
(bad)
call
mov
scas
xchg
stos
outs
test
sub
sub
aad
fsub
add
mov
inc
rcr
(bad)
outs
(bad)
(bad)
call
pop
fist
popa
hlt
(bad)
fcomp
stos
ret
je
sbb
xlat
stos
pop
call
mov
jbe
ret
adc
push
aam
fstp
cld
(bad)
(bad)
jmp
pop
pop
shl
sbb
stos
mov
sub
fs
je
retf
dec
jg
rcl
pop
js
push
dec
int3
fcomp
pop
pop
inc
std
(bad)
(bad)
push
scas
fist
cdq
fst
inc
sbb
fist
pop
sbb
pop
fcomp
ror
adc
fwait
ds
fstp
push
push
stos
push
rcr
aas
leave
(bad)
ficom
(bad)
fsubp
jg
add
jmp
ja
je
(bad)
mov
sub
inc
fimul
stos
stc
aas
(bad)
rcl
(bad)
(bad)
(bad)
fistp
ficom
xor
(bad)
pop
clc
popa
js
push
pop
push
mov
cmp
(bad)
(bad)
call
push
fcomp
stos
or
mov
ret
push
jb
sub
add
mov
fdiv
aaa
cld
(bad)
sti
push
inc
jg
pop
enter
adc
inc
sbb
xchg
retf
(bad)
daa
lds
jmp
rcl
pop
(bad)
pop
mov
dec
sar
xchg
push
jmp
call
stos
cdq
ret
fadd
pop
fcom
pop
jmp
fdiv
mov
jmp
mov
sub
cmp
inc
dec
fxch
leave
pop
test
adc
aas
xor
pushf
fstp
pop
push
(bad)
fadd
inc
sar
push
rcl
jl
daa
retf
rol
in
mov
dec
sbb
push
ror
shl
lds
cwde
(bad)
(bad)
jg
mov
fucomi
ffree
popa
xchg
scas
test
retf
scas
dec
leave
sahf
sbb
pop
(bad)
pop
sbb
xchg
inc
repz
shl
ja
fxch
rcl
sar
jmp
rcr
movs
dec
push
pop
pop
ret
fstp
cli
pop
mov
popa
aad
or
(bad)
call
aad
(bad)
sar
cmp
mov
fmul
std
push
jl
dec
mov
into
cmp
addr16
(bad)
inc
test
je
shr
icebp
dec
rcr
shl
fcom
push
es
pushf
pop
(bad)
shl
mov
(bad)
(bad)
jl
aam
push
jp
inc
push
shl
push
fmul
aam
pop
aas
mov
(bad)
call
lods
mov
retf
je
or
pop
mov
inc
je
cmp
(bad)
call
jmp
xor
(bad)
mov
cmp
inc
jo
pop
pop
(bad)
mov
loop
movs
shl
pop
in
pop
cld
rcl
iret
pop
fcom
lock
lock
(bad)
(bad)
jmp
popa
add
cmps
(bad)
jmp
mov
cmps
or
jp
scas
mov
and
(bad)
(bad)
inc
xor
mov
sbb
daa
mov
lea
mov
xor
(bad)
(bad)
mov
mov
ss
repz
mov
mov
stos
arpl
(bad)
(bad)
call
add
call
sub
movs
mov
mov
(bad)
es
(bad)
in
xchg
push
add
call
out
mov
push
dec
(bad)
(bad)
mov
(bad)
cs
mov
xor
sub
test
xchg
scas
out
dec
or
(bad)
repz
inc
add
mov
(bad)
pop
outs
lods
in
scas
(bad)
jg
imul
jmp
lods
in
pusha
sub
push
and
(bad)
adc
out
jno
aam
mov
push
jo
or
jmp
jmp
in
pop
mov
(bad)
or
(bad)
mov
and
(bad)
push
mov
(bad)
(bad)
(bad)
(bad)
stc
mov
dec
imul
jae
and
push
jecxz
mov
mov
add
call
mov
inc
fisub
mov
cmps
sub
dec
mov
add
dec
ins
mov
and
cmp
mov
inc
xchg
(bad)
(bad)
push
and
ror
push
mov
add
pop
push
or
outs
(bad)
(bad)
(bad)
jmp
(bad)
jb
and
mov
mov
mov
xchg
ins
jp
(bad)
test
fcomip
(bad)
stc
popa
shl
and
pop
out
mov
jbe
sub
and
xchg
(bad)
jmp
sti
sub
das
out
loop
dec
test
out
mov
xor
adc
cli
(bad)
push
std
mov
loopne
inc
(bad)
jb
jecxz
jbe
pop
pop
mov
cmp
jmp
mov
in
inc
jecxz
jg
lods
mov
cs
dec
into
xchg
inc
jp
push
jmp
jp
loop
xchg
mov
add
jge
pop
sub
cmps
stos
or
or
xchg
sti
(bad)
(bad)
call
sub
mov
mov
or
sbb
jo
(bad)
pop
sub
(bad)
(bad)
(bad)
jg
xor
jnp
ds
sub
(bad)
mov
outs
or
fstp
jmp
clc
loop
out
into
aam
jbe
jnp
or
push
dec
cmps
cs
stos
mov
pop
call
std
push
mov
test
mov
js
push
inc
imul
test
(bad)
(bad)
inc
mul
int
dec
btr
out
call
stos
mov
fstp
lock
xor
xor
ret
in
mov
leave
in
lock
cmp
push
(bad)
mov
out
push
aad
mov
(bad)
jmp
sbb
push
mov
sub
out
mov
lods
dec
nop
stos
in
push
ja
push
push
loop
stos
jae
dec
lock
je
in
jmp
pop
(bad)
jne
push
mov
xlat
(bad)
(bad)
(bad)
(bad)
jo
pop
xchg
inc
sub
daa
cdq
xchg
test
into
in
(bad)
enter
sti
jg
fwait
sub
or
stos
test
ss
mov
jmp
cmps
(bad)
jmp
jmp
scas
iret
adc
and
stos
lods
mov
cmp
mov
cmps
cli
in
dec
jmp
sbb
pusha
mov
ret
mov
scas
push
movq
cmp
daa
lods
mov
mov
push
sub
mov
(bad)
(bad)
(bad)
jmp
xchg
mov
nop
scas
push
mov
test
cmps
stos
cs
cmps
nop
pop
cmp
into
pop
and
dec
sub
jmp
add
jnp
dec
mov
jmp
lock
dec
js
xchg
mov
push
fwait
(bad)
outs
add
aam
jmp
jae
call
sbb
sub
cmps
lods
mov
jg
das
ins
mov
add
sub
out
inc
mov
(bad)
(bad)
push
push
(bad)
mov
fisubr
push
stos
into
mov
push
int3
cdq
fsubr
sbb
in
jg
mov
int
xchg
test
mov
ficom
outs
mov
(bad)
(bad)
jmp
xchg
test
mov
pushf
cs
mov
loope
sbb
push
(bad)
dec
out
and
push
adc
jae
sub
pop
adc
imul
lock
pop
mov
inc
dec
scas
dec
jmp
sar
aam
cs
adc
add
mov
jb
sbb
(bad)
push
rcr
mov
pop
test
test
jecxz
jmp
(bad)
jmp
cmp
push
jnp
xchg
scas
add
stos
in
lahf
inc
mov
(bad)
mov
dec
dec
dec
icebp
mov
add
stos
add
into
adc
pop
cld
dec
aad
cmp
aad
inc
scas
or
sbb
cmc
ds
jnp
cmp
jo
or
adc
adc
xor
push
loop
mov
imul
(bad)
lock
xor
data16
imul
idiv
(bad)
jmp
cmp
fist
pop
adc
sahf
sbb
mov
loopne
xor
or
mov
jmp
arpl
ins
pop
enter
sbb
add
pop
ins
pop
pop
(bad)
(bad)
call
cwde
add
retf
cmp
sub
inc
lds
cli
sbb
cmp
mov
pop
std
sahf
or
mov
popf
sbb
cli
retf
adc
inc
mov
fcom
push
(bad)
(bad)
(bad)
inc
inc
or
outs
scas
mov
aad
jg
je
(bad)
scas
jnp
push
stc
sub
inc
shl
arpl
push
rcl
fmul
cld
stos
sbb
movs
sbb
fsubr
jge
jb
and
dec
sbb
ficomp
xchg
mov
mov
cmps
mov
pop
daa
jo
enter
(bad)
jmp
fwait
cli
mov
ss
adc
pop
jno
sub
test
jg
fldenv
pop
fcomp
stc
(bad)
(bad)
(bad)
(bad)
fistp
test
inc
ficomp
stos
nop
imul
mov
jp
loopne
and
push
loope
inc
int
sub
mov
(bad)
(bad)
(bad)
jg
scas
or
cmp
das
outs
sub
inc
mov
cmp
fist
mov
je
(bad)
jg
push
call
pop
cmp
push
mov
test
loope
(bad)
(bad)
(bad)
call
xchg
das
xchg
repnz
push
dec
mov
cmps
xchg
jmp
cmp
mov
jg
stos
cwde
(bad)
(bad)
(bad)
xor
loopne
leave
cmps
jge
lock
call
lahf
cmp
dec
(bad)
xor
mov
popa
adc
jmp
jmp
push
cmp
push
push
xlat
sub
cld
sub
xchg
cmps
jle
out
test
jmp
mov
out
xchg
gs
sub
and
repnz
(bad)
(bad)
jmp
les
push
repnz
fnstsw
jg
push
out
retf
mov
mov
jp
leave
push
stc
(bad)
(bad)
dec
shr
mov
test
adc
dec
rcl
xchg
mov
cld
mov
int
inc
lock
pop
inc
lods
or
int
imul
mov
(bad)
dec
(bad)
cmp
push
test
mov
scas
and
push
ss
jb
(bad)
mov
dec
out
lea
cli
pop
cmp
add
stc
xchg
xchg
or
(bad)
(bad)
(bad)
dec
fidivr
jns
xchg
scas
push
dec
and
fisub
lods
jo
push
push
xor
call
(bad)
(bad)
push
cmp
jmp
dec
jl
sub
out
mov
pop
push
xor
xchg
outs
xor
mov
jnp
sub
xchg
mov
dec
outs
mov
push
repz
cmp
retf
mov
cmp
cmp
mov
pusha
loopne
xor
push
je
pop
int
fisub
(bad)
jmp
pop
inc
pop
fwait
adc
mov
dec
cmp
daa
inc
ins
pop
je
mov
out
enter
xchg
lock
mov
lea
fisub
cmc
imul
dec
mov
jno
enter
scas
pop
mov
popa
mov
push
mov
retf
(bad)
fstp
push
out
pop
(bad)
arpl
push
pop
mov
and
push
jge
mov
push
stos
pusha
pop
mov
call
push
sbb
lods
mov
(bad)
data16
test
jmp
icebp
(bad)
(bad)
(bad)
jmp
loopne
pop
mov
mov
xchg
jl
or
(bad)
fbstp
xor
ret
(bad)
leave
std
xchg
cli
mov
loope
lock
pushf
jbe
ret
push
into
inc
sub
sar
jmp
add
dec
lock
hlt
jmp
add
sub
(bad)
(bad)
(bad)
jmp
imul
lods
mov
scas
stos
mov
push
jmp
sub
cmp
lahf
fsubp
add
push
cli
(bad)
jmp
rcr
jne
scas
jmp
jmp
mov
icebp
das
clc
(bad)
jmp
outs
sub
mov
outs
test
cld
push
fdivr
std
or
mov
fisubr
mov
mov
dec
mov
(bad)
(bad)
(bad)
(bad)
jp
cmp
repnz
sub
aad
and
imul
or
xchg
jg
inc
inc
xchg
(bad)
(bad)
call
ficom
enter
movs
inc
imul
pop
jae
push
mov
mov
and
sub
(bad)
(bad)
(bad)
jle
dec
shl
adc
call
or
xchg
adc
xchg
icebp
repnz
sar
push
adc
push
outs
add
retf
push
dec
cdq
mov
(bad)
push
gs
repnz
dec
sbb
lods
push
sub
stos
push
arpl
mov
(bad)
call
add
mov
(bad)
lods
cli
fstp
mov
scas
sub
push
stos
jb
lahf
sbb
stos
(bad)
cmps
and
mov
mov
push
lods
test
cmp
cmps
cwde
(bad)
(bad)
jmp
mov
in
test
xabort
ret
iret
fwait
daa
gs
sbb
(bad)
(bad)
(bad)
out
(bad)
jns
mul
pop
mov
imul
xchg
aaa
(bad)
(bad)
pop
retf
(bad)
(bad)
(bad)
jmp
test
(bad)
movs
aaa
push
icebp
lods
mov
cli
mov
sbb
adc
(bad)
(bad)
cmp
repnz
paddsw
or
xchg
mov
jecxz
xchg
pop
jge
dec
add
cmps
mov
test
jmp
call
fs
jmp
inc
(bad)
jge
(bad)
(bad)
(bad)
mov
(bad)
fwait
imul
mov
mov
aad
sub
call
xor
jmp
and
add
call
sbb
clc
dec
(bad)
(bad)
(bad)
mov
cmps
movs
mov
sbb
je
dec
not
femms
jp
call
(bad)
(bad)
(bad)
in
xchg
push
or
xchg
sbb
(bad)
jmp
push
aad
mov
lds
mov
push
xor
sbb
pusha
xor
push
dec
out
push
inc
aad
pop
and
cmc
fistp
outs
adc
lods
mov
mov
xor
(bad)
(bad)
call
add
sbb
add
or
sbb
cmp
(bad)
jmp
cli
mov
sbb
es
arpl
fsubr
add
mov
loope
imul
(bad)
(bad)
(bad)
push
jle
jmp
fisub
outs
pop
xacquire
add
lahf
popa
mov
(bad)
(bad)
jmp
fnstenv
fcomp
pop
push
fwait
cli
sbb
les
pop
adc
loope
push
jmp
lahf
sbb
dec
test
or
push
scas
call
jp
jg
(bad)
push
fwait
jmp
xor
inc
cdq
mov
mov
scas
xchg
enter
(bad)
(bad)
(bad)
call
lods
push
test
or
sub
mov
es
(bad)
or
xor
stos
sub
(bad)
fucomip
lea
jge
xchg
add
(bad)
sub
ficomp
or
(bad)
jmp
pop
sbb
add
test
sub
jnp
inc
jae
jmp
push
push
inc
sbb
sbb
into
pop
(bad)
out
push
in
into
pop
jp
mov
lock
push
(bad)
(bad)
(bad)
push
sti
cs
lds
sbb
addr16
sub
and
pop
leave
jmp
sahf
sbb
(bad)
(bad)
(bad)
jmp
pusha
out
imul
or
retf
(bad)
sub
or
in
fidivr
(bad)
call
push
jle
leave
adc
lods
or
stos
mov
out
cwde
lock
(bad)
(bad)
in
in
push
je
mov
or
fdiv
idiv
sbb
mov
pop
call
or
sbb
inc
cld
dec
fldcw
lods
in
or
xor
outs
test
xchg
(bad)
out
shr
dec
call
mov
xchg
aaa
push
ficomp
cmp
pop
sbb
out
repz
mov
jp
(bad)
(bad)
jmp
cmp
push
mov
add
cmps
stos
mov
pusha
(bad)
call
sub
outs
ins
xchg
(bad)
pushf
jae
pop
jae
sub
jmp
repz
sub
mov
test
hlt
jge
popa
push
icebp
(bad)
(bad)
jmp
shr
xchg
adc
pop
dec
push
push
dec
mov
adc
pop
jg
push
out
or
outs
loop
(bad)
std
sbb
sub
mov
into
push
in
sub
mov
and
jmp
ret
inc
push
jmp
sub
xor
imul
xchg
and
mov
mov
(bad)
(bad)
(bad)
mov
lods
cld
dec
xor
mov
xor
repz
jle
imul
stc
sub
fsin
(bad)
(bad)
(bad)
jmp
call
mov
sub
lods
pop
ins
sbb
and
js
pop
(bad)
mov
lds
xor
inc
add
ss
retf
cmp
pop
stos
push
stos
and
(bad)
(bad)
inc
xchg
push
rcr
sahf
jmp
rcl
aad
ja
out
and
lods
ins
(bad)
(bad)
(bad)
call
js
cld
stos
jp
jg
push
sub
in
adc
push
and
push
adc
push
xor
cmp
shr
push
(bad)
dec
sbb
fild
call
sub
push
leave
and
mov
push
call
adc
sbb
sar
call
sahf
stos
(bad)
jecxz
clc
sub
sub
pop
dec
and
(bad)
jmp
int
dec
int3
stc
lds
int3
fimul
cmp
inc
jnp
fstp
stos
mov
mov
ret
push
jo
(bad)
(bad)
(bad)
(bad)
call
pop
jne
cmp
cmps
loopne
inc
adc
mov
mov
sub
sbb
inc
loop
cld
(bad)
out
cli
sub
mov
retf
jmp
test
mov
pop
inc
pop
pop
fld
add
pop
mov
dec
mov
or
(bad)
xchg
clc
call
call
adc
jmp
and
aad
(bad)
(bad)
mov
inc
jmp
pop
gs
and
pop
pop
ins
jno
sbb
outs
(bad)
(bad)
jg
pop
dec
jmp
loope
leave
(bad)
xor
mov
or
push
jmp
push
ret
ins
mov
pop
add
mov
dec
stos
xchg
pop
repnz
outs
add
clc
(bad)
jmp
mov
daa
rcr
jmp
(bad)
(bad)
(bad)
dec
sbb
ins
(bad)
imul
shr
mov
inc
sahf
stos
mov
push
(bad)
(bad)
jmp
and
mov
mov
mov
add
outs
(bad)
enter
jmp
retf
adc
lea
cmp
in
cmp
push
cld
jmp
rcl
aaa
mov
jl
retf
pop
push
out
mov
mov
icebp
sbb
mov
push
mov
dec
inc
lods
jmp
jbe
(bad)
das
sar
pop
push
add
lock
cmps
inc
loopne
rol
push
pop
fwait
(bad)
(bad)
jg
push
add
sbb
call
call
inc
mov
(bad)
(bad)
inc
push
fwait
adc
ret
stos
sbb
cmp
aad
push
adc
push
jge
mov
clc
(bad)
in
jge
dec
xchg
mov
push
sbb
pop
aad
cmc
push
test
loope
adc
inc
in
clc
(bad)
(bad)
push
inc
fwait
in
xor
dec
call
stos
(bad)
test
call
add
mov
add
out
dec
(bad)
(bad)
(bad)
push
sbb
jp
mul
call
xlat
pop
aam
push
push
inc
xchg
cli
inc
push
mov
xchg
add
and
pop
add
add
push
adc
(bad)
jmp
out
xchg
xlat
fcmovbe
dec
cdq
inc
add
push
fidivr
push
xchg
push
(bad)
(bad)
(bad)
mov
jp
or
(bad)
movs
add
(bad)
xor
scas
adc
add
loopne
xlat
hlt
mov
jmp
add
aaa
adc
sbb
imul
xchg
adc
adc
(bad)
call
mov
es
adc
pop
lea
sar
sti
lahf
sub
xchg
push
xor
mov
in
mov
fwait
(bad)
dec
bound
push
pop
push
push
sub
cmp
jle
add
adc
lods
(bad)
(bad)
(bad)
inc
clc
xchg
push
cdq
inc
ds
push
mov
add
dec
rcl
fwait
xor
enter
(bad)
(bad)
jg
fld
sub
cdq
leave
cmc
add
fs
adc
neg
sti
adc
inc
ja
mov
outs
js
ret
pop
jg
mov
dec
inc
(bad)
(bad)
(bad)
inc
into
jmp
cli
pushw
cwde
cmps
enter
outs
mov
xchg
sbb
xchg
sub
out
clc
call
das
jle
xlat
in
mov
scas
sub
lods
mov
(bad)
(bad)
(bad)
jmp
or
fiadd
push
iret
mov
dec
fidiv
icebp
sbb
div
adc
sbb
cmp
and
ins
xchg
test
sahf
push
xchg
jecxz
ds
mov
sar
iret
clc
mov
repz
cmp
mov
cmp
pop
xor
clc
fistp
(bad)
(bad)
jmp
adc
into
xor
sub
push
cmp
fwait
mov
(bad)
call
mov
jbe
popa
and
mov
stos
jo
lods
mov
push
(bad)
(bad)
inc
iret
mov
stos
inc
inc
jne
fucomi
push
in
stos
sub
jl
fdivr
xchg
pop
push
in
in
sub
push
sbb
and
test
neg
(bad)
(bad)
mov
jbe
mov
dec
cmps
sbb
or
jo
stos
stos
dec
(bad)
push
stos
retf
pop
cld
(bad)
call
push
(bad)
pop
call
mov
(bad)
push
lahf
jbe
(bad)
(bad)
mov
and
icebp
jmp
(bad)
push
fdivr
(bad)
mov
(bad)
(bad)
jmp
xlat
push
lods
dec
adc
xor
and
fnstsw
mov
retf
inc
repnz
fadd
repz
mov
in
pop
mov
(bad)
(bad)
(bad)
call
scas
out
jmp
stos
cmp
jecxz
sbb
push
fcomp
dec
mov
(bad)
(bad)
call
pop
(bad)
(bad)
jmp
sub
in
inc
das
mov
mov
jmp
mov
sub
fisubr
lods
stc
loop
pop
test
cmps
push
icebp
rol
scas
add
stos
mov
aam
iret
jb
cmps
pop
int3
sub
add
cli
(bad)
jg
(bad)
scas
mov
sub
js
or
push
pop
inc
cs
mov
dec
xchg
sub
bnd
test
pop
hlt
or
stos
pop
int3
retf
in
(bad)
pop
add
test
fdivr
dec
and
push
test
push
push
test
stos
fwait
add
push
and
(bad)
(bad)
push
or
stos
cmp
or
jmp
clc
pop
mov
fs
sbb
(bad)
dec
mov
sbb
into
in
stos
cmp
jmp
push
mov
mov
(bad)
(bad)
dec
repnz
scas
lods
lahf
retf
mov
jb
push
scas
or
shr
(bad)
(bad)
(bad)
jg
pop
test
mov
adc
inc
push
pop
cli
ins
rol
repz
into
push
(bad)
(bad)
(bad)
inc
cmps
in
dec
(bad)
test
mov
sub
lods
dec
nop
pop
movs
xchg
pusha
cwde
shl
mov
pop
outs
xchg
call
xchg
mov
movs
jmp
out
fisub
mov
cmps
pop
add
jmp
int3
sahf
sub
movs
(bad)
(bad)
(bad)
dec
push
call
jl
mov
mov
mov
mov
sbb
jmp
add
in
mov
inc
cmps
outs
shl
sti
cmps
pop
mov
sbb
push
jbe
imul
pop
jnp
test
mov
jmp
sub
retf
enter
lock
push
aas
push
or
push
pop
push
fcmovb
cwde
xchg
cmp
(bad)
(bad)
(bad)
inc
cmp
pop
push
jmp
(bad)
les
sbb
push
sub
inc
clc
fsubr
sub
cmp
(bad)
(bad)
inc
pop
scas
in
jmp
cwde
sub
mov
jp
jl
jne
(bad)
xor
cdq
pop
adc
mov
sbb
outs
(bad)
cmp
add
hlt
jl
retf
imul
sbb
mov
xor
rol
adc
das
sar
inc
leave
pop
sub
(bad)
(bad)
(bad)
(bad)
mov
aad
retf
jg
mov
test
jg
jmp
fsubr
in
and
lods
adc
(bad)
out
clc
dec
sub
cs
std
xlat
sti
int3
jnp
aad
scas
sahf
pop
sub
movs
jl
test
retf
stos
mov
push
es
sbb
mov
mov
lahf
and
xor
(bad)
test
add
(bad)
sbb
test
jno
dec
scas
test
ja
jge
mov
mov
(bad)
dec
ins
mov
mov
sub
fs
dec
mov
push
adc
shl
fiadd
sub
imul
aaa
rcr
popf
call
jmp
xor
push
fild
mov
dec
scas
push
fild
int
ds
(bad)
(bad)
dec
sahf
mov
cmp
adc
jp
es
out
inc
mov
xlat
(bad)
(bad)
call
cs
xor
cdq
cdq
pop
pop
pushf
call
iret
sub
and
mov
and
pop
adc
call
jnp
mov
iret
call
call
pop
and
(bad)
jg
mov
or
mov
mov
sub
idiv
out
sbb
popf
gs
(bad)
(bad)
push
cmps
test
mov
imul
push
xchg
sbb
ret
inc
jmp
lds
push
inc
lahf
std
je
clc
jg
dec
ins
imul
in
jmp
jp
inc
mov
sbb
pop
ins
pop
(bad)
pop
dec
(bad)
(bad)
jmp
lock
cs
outs
mov
stos
adc
ins
xlat
mov
retf
call
movs
(bad)
dec
or
and
mov
mov
mov
add
jmp
or
mov
jb
push
pop
adc
mov
lods
mov
(bad)
(bad)
mov
jmp
(bad)
loopne
add
movs
sbb
repnz
cmp
jo
hlt
scas
jmp
add
loop
aad
xor
jecxz
cs
xchg
pop
mov
(bad)
jmp
xlat
jge
dec
or
test
stos
jmp
sub
pop
pop
pop
test
sub
jmp
cs
jmp
nop
or
stc
mov
jmp
pop
out
scas
or
into
in
add
or
or
xchg
into
retf
test
sub
stos
js
(bad)
(bad)
jg
mov
mov
stos
xor
es
stos
int3
retf
sbb
mov
(bad)
(bad)
jg
test
sbb
jge
(bad)
sub
xchg
pop
mov
sbb
jbe
cmp
sbb
jg
(bad)
mov
lods
ds
ret
lods
jmp
xchg
fsub
or
adc
cdq
mov
scas
adc
mov
(bad)
(bad)
jmp
call
ret
add
out
jmp
(bad)
pop
std
pop
and
adc
push
pop
ret
pushf
sti
ds
mov
retf
stos
addr16
pop
push
and
add
pop
imul
in
call
loopne
stos
(bad)
int
jbe
daa
test
jb
retf
popa
mov
scas
push
xchg
lahf
push
in
(bad)
(bad)
(bad)
jmp
pop
lods
jecxz
xor
dec
cli
inc
stos
int3
xchg
sub
inc
inc
jno
adc
adc
sbb
ins
xchg
adc
adc
cmps
int3
cmp
inc
xchg
(bad)
jmp
mov
sbb
jae
in
addr16
ds
dec
inc
pop
retf
mov
adc
(bad)
loopne
jmp
icebp
int3
mov
mov
lods
sbb
mov
inc
mov
sbb
sub
cld
xchg
(bad)
call
cmp
mov
std
and
ret
xchg
xor
push
push
dec
adc
mov
push
ds
push
sbb
jo
cli
jg
test
push
mov
dec
rcr
jnp
(bad)
(bad)
jmp
sti
cs
cdq
inc
or
cdq
loop
push
adc
mov
(bad)
(bad)
mov
sub
lods
into
out
(bad)
jmp
sub
jb
shr
or
xor
(bad)
call
outs
jmp
xchg
lock
cmp
retf
mov
cs
(bad)
mov
pop
scas
iret
out
test
or
sahf
push
scas
nop
(bad)
(bad)
(bad)
jmp
jmp
lea
push
dec
cmps
adc
lods
mov
repz
xchg
lahf
adc
loope
push
sbb
retf
movs
in
lea
imul
shr
(bad)
mov
dec
inc
fwait
and
loop
cmp
dec
repnz
loop
jno
inc
cmp
cmps
sar
idiv
ja
mov
out
jecxz
fisubr
mov
jecxz
xstore-rng
cmps
ret
mov
(bad)
(bad)
jg
jle
pop
popa
(bad)
repz
shl
loope
sbb
xlat
xor
cmp
pop
scas
dec
xchg
(bad)
dec
mov
daa
and
lods
xchg
xor
out
(bad)
mov
movs
mov
(bad)
dec
inc
lea
or
inc
js
mov
push
xchg
jmp
icebp
hlt
xor
stos
cmp
(bad)
(bad)
(bad)
call
movs
lahf
mov
or
ins
and
jge
mov
paddw
mov
push
cs
std
clc
adc
sub
and
sbb
repnz
(bad)
(bad)
jg
movs
cmps
dec
mov
out
jns
jno
pop
arpl
shl
push
fcmovbe
xchg
aas
sbb
pop
je
mov
(bad)
ficom
xlat
cmp
push
mov
dec
mov
out
sar
mov
dec
loop
mov
pop
(bad)
jmp
out
jnp
mov
adc
push
mov
(bad)
(bad)
call
sub
inc
jo
int
int
mov
cmp
movs
lock
(bad)
(bad)
jmp
sbb
sti
mov
test
cmp
cwde
pop
hlt
sbb
out
std
mov
xchg
xor
(bad)
idiv
(bad)
(bad)
call
dec
popa
fld
mov
(bad)
jmp
adc
sub
(bad)
(bad)
(bad)
dec
adc
inc
mov
cmp
mov
imul
(bad)
and
mov
mov
ss
out
mov
adc
sti
sbb
ret
pop
aam
sbb
xchg
xor
jle
mov
mov
jg
lock
pop
pop
aam
loope
inc
pusha
cmp
sar
(bad)
fist
jnp
cmp
stos
pop
std
scas
add
dec
cmp
fisub
(bad)
(bad)
inc
les
mov
xlat
mov
retf
out
out
fsubr
inc
(bad)
(bad)
mov
inc
call
mov
mov
clc
jmp
mov
cld
(bad)
(bad)
(bad)
jg
inc
fs
and
loope
sbb
arpl
ds
shl
movs
sbb
(bad)
jmp
test
mov
sbb
mov
popa
(bad)
cmp
mov
or
test
and
xchg
clc
(bad)
(bad)
jmp
and
sbb
ja
cdq
outs
jns
popa
mov
inc
out
jp
dec
leave
clc
(bad)
(bad)
(bad)
(bad)
out
aam
mov
sbb
cmp
fidivr
mov
push
add
xchg
shl
imul
cmp
or
(bad)
call
test
jg
or
and
cmp
and
sub
(bad)
lahf
xchg
in
(bad)
(bad)
(bad)
jmp
stos
jmp
mov
and
fbstp
sub
loop
repnz
pop
loope
pop
xchg
or
(bad)
dec
push
aas
jo
dec
outs
sbb
pop
push
retf
(bad)
in
shl
shl
loop
(bad)
(bad)
(bad)
(bad)
ficomp
nop
mov
inc
adc
mov
jno
in
test
popa
shr
cmc
test
(bad)
call
mov
mov
es
cdq
xchg
(bad)
mov
cmp
and
movs
ficomp
cmp
stc
adc
jno
(bad)
(bad)
jmp
aad
mov
dec
or
(bad)
jecxz
(bad)
sbb
es
out
mov
(bad)
push
test
mov
(bad)
(bad)
jmp
sbb
jmp
sbb
jns
push
add
cmps
test
jne
cdq
bound
repz
ds
sub
popa
loop
mov
fsubr
pop
sahf
(bad)
(bad)
(bad)
inc
repz
and
add
adc
fiadd
push
or
ds
and
jb
fldl2t
fnstsw
movs
xor
cmc
(bad)
(bad)
jmp
mov
sti
and
mov
sub
imul
mov
fistp
loope
mov
sub
adc
pushf
or
sub
jmp
jae
(bad)
fstp
xchg
push
xchg
sbb
mov
aad
inc
in
jmp
(bad)
inc
jae
mov
arpl
cmp
js
fidiv
(bad)
(bad)
(bad)
(bad)
fld
and
mov
sub
pop
retf
nop
mov
aas
pushf
push
push
inc
(bad)
(bad)
(bad)
fild
xor
enter
leave
test
jne
ret
sub
cmp
cld
in
out
push
(bad)
dec
mov
cmps
and
adc
mov
and
mov
ins
(bad)
inc
mov
jo
mov
cs
pusha
dec
imul
ror
and
jmp
not
imul
jmp
fwait
add
xor
outs
add
fadd
dec
es
pop
mov
pop
push
repz
sub
and
jae
cld
jle
test
inc
jmp
lea
cdq
inc
mov
les
add
in
out
pop
cld
fwait
ins
xor
imul
xor
clc
(bad)
(bad)
(bad)
mov
cwde
retf
sbb
push
mov
xchg
test
ss
scas
xchg
cmp
ds
loopne
sub
out
nop
jo
clc
repz
cmc
repz
(bad)
(bad)
jmp
mov
rcr
jo
mov
shl
call
nop
nop
xor
(bad)
rcr
fldenv
(bad)
int
daa
iret
icebp
pop
fdiv
jl
(bad)
(bad)
(bad)
(bad)
out
ret
test
(bad)
jno
add
adc
or
movs
and
rcl
pop
das
movs
test
outs
gs
std
ins
(bad)
(bad)
(bad)
jmp
jbe
push
push
cld
pushf
cld
jl
and
adc
data16
xchg
push
(bad)
stc
push
and
or
dec
popf
xlat
(bad)
dec
mov
test
or
ja
push
mov
push
jmp
jg
or
fisttp
shl
mov
dec
stc
in
xchg
(bad)
mov
or
mov
mov
or
or
out
pop
push
cmp
das
cli
(bad)
out
mov
das
and
cdq
sbb
mov
xor
mov
dec
jecxz
cs
and
(bad)
(bad)
(bad)
call
aad
jmp
leave
jmp
pushf
push
mov
xchg
pop
dec
es
ss
nop
fs
nop
scas
outs
cli
jmp
adc
out
mov
jle
test
(bad)
call
mov
popa
or
pop
lods
mov
pop
pop
popf
push
ret
push
sub
lods
mov
mov
aas
dec
or
mov
mov
lahf
test
add
push
(bad)
(bad)
jg
mov
sub
jmp
xor
cs
dec
sbb
mov
xor
cli
fisttp
or
call
push
add
mov
loopne
or
les
push
das
outs
cmp
sub
cmp
add
aas
pop
mov
fs
(bad)
mov
out
sub
mov
cmps
test
jl
(bad)
(bad)
(bad)
(bad)
(bad)
cmp
xchg
clc
stc
adc
push
(bad)
jle
jg
adc
xchg
add
push
rcl
xchg
xchg
dec
(bad)
(bad)
call
push
lahf
mov
sti
retf
imul
(bad)
jmp
jmp
(bad)
mov
adc
iret
das
ret
push
sbb
jmp
inc
pop
or
mov
in
xchg
mov
scas
adc
xchg
test
es
(bad)
(bad)
inc
retf
jl
pop
js
mov
cvtpi2ps
pop
push
call
loopne
test
push
lea
(bad)
js
push
stos
movs
lahf
out
stos
jp
cmps
xchg
ss
cld
test
movs
pop
addr16
sahf
sub
mov
xor
pop
xor
(bad)
cmp
cli
dec
mov
adc
movs
mov
sub
(bad)
(bad)
fcomip
push
mov
mov
mov
clc
fbstp
mov
mov
(bad)
fild
mul
jmp
aam
adc
(bad)
push
mov
cwde
loop
and
jmp
test
sub
es
and
jp
arpl
mov
std
jmp
(bad)
jmp
sbb
imul
pusha
mov
(bad)
(bad)
in
ja
in
sub
outs
add
xchg
pop
cmps
adc
or
mov
jmp
(bad)
(bad)
(bad)
jnp
xor
xor
je
loopne
sbb
sbb
and
jl
retf
adc
xor
(bad)
(bad)
(bad)
jge
mov
mov
sub
mov
or
retf
(bad)
jg
pop
retf
pop
test
pop
lods
or
test
(bad)
(bad)
(bad)
cmp
fistp
sbb
mov
dec
adc
loope
(bad)
(bad)
(bad)
std
lock
xor
jmp
add
sub
std
in
scas
adc
(bad)
jmp
sub
xor
or
adc
dec
(bad)
mov
nop
ret
ror
enter
xchg
retf
lods
loop
outs
pop
xchg
jmp
call
sbb
cwde
lods
les
std
stos
aaa
(bad)
jmp
icebp
dec
cmp
rcr
sub
in
cmps
and
imul
(bad)
(bad)
(bad)
jmp
(bad)
mov
adc
fidiv
jno
mov
pop
inc
mov
xchg
shl
inc
xor
leave
enter
push
sub
clc
cmp
(bad)
(bad)
push
jnp
das
imul
dec
scas
cld
out
cmp
cmp
sub
(bad)
call
fidiv
stos
in
sub
aad
jns
outs
push
pusha
into
and
adc
sub
(bad)
(bad)
(bad)
jmp
sub
ss
mov
icebp
div
mov
adc
mov
(bad)
jg
in
scas
movs
jo
dec
xchg
test
sub
sahf
cli
stos
mov
(bad)
call
scas
iret
push
fcmovu
pop
movs
mov
cli
arpl
push
mov
sahf
enter
das
cli
(bad)
inc
inc
xchg
cmp
jmp
mov
or
mov
mov
(bad)
fild
sub
pop
dec
imul
in
(bad)
(bad)
(bad)
call
(bad)
fwait
stos
or
sbb
or
inc
scas
or
push
inc
dec
aad
std
(bad)
(bad)
(bad)
fld
in
mov
test
jp
adc
mov
mov
(bad)
call
pop
popf
imul
jl
push
test
sbb
jecxz
ret
jl
(bad)
(bad)
(bad)
(bad)
jmp
xor
es
stos
adc
jns
std
popa
clc
test
ret
pop
outs
lock
(bad)
(bad)
(bad)
jmp
jmp
imul
fisubr
es
sbb
or
mov
push
lahf
xor
inc
push
pop
fldenv
jns
mov
dec
mov
or
das
lods
jecxz
push
jmp
inc
cld
inc
add
aad
mov
push
cmova
call
mov
jo
(bad)
(bad)
push
enter
mov
inc
les
outs
(bad)
(bad)
(bad)
dec
mov
jne
mov
imul
das
inc
mov
xchg
div
cmps
jbe
scas
call
inc
std
cmps
cld
jbe
xchg
push
iret
cli
ins
add
or
xchg
inc
add
mov
(bad)
(bad)
jmp
stos
and
aas
push
test
out
cmp
mov
mov
jecxz
cli
adc
out
push
(bad)
(bad)
(bad)
call
fidiv
test
inc
pop
icebp
enter
adc
repnz
jnp
mov
(bad)
(bad)
(bad)
call
cmp
jp
call
movs
jmp
(bad)
sub
(bad)
dec
lock
cmps
int3
popa
add
sub
pop
dec
and
pop
push
outs
xchg
jmp
inc
dec
clc
outs
jg
movs
popf
lods
push
leave
jmp
or
push
sub
dec
(bad)
mov
adc
cmps
aam
cmp
adc
sub
call
add
cwde
stc
and
jnp
call
adc
(bad)
fcos
(bad)
(bad)
(bad)
jmp
pop
lods
sub
outs
scas
xchg
(bad)
aad
adc
cmp
inc
dec
mov
inc
fsubp
inc
loop
mov
pop
(bad)
mov
add
sbb
aad
enter
mov
pop
fcomip
(bad)
dec
fwait
test
loop
js
leave
pop
enter
cmp
repz
inc
call
lds
lods
or
cmps
xor
and
scas
(bad)
(bad)
(bad)
dec
(bad)
fwait
sbb
stos
inc
mov
pop
xor
test
test
pop
mov
add
(bad)
mov
sub
enter
adc
xor
addr16
jmp
fwait
loopne
pop
(bad)
(bad)
in
inc
hlt
xchg
mov
dec
sbb
mov
jp
jns
push
pop
push
sbb
jle
cmp
jle
loope
sub
jmp
(bad)
jmp
test
push
enter
cwde
div
scas
adc
outs
outs
and
cdq
sbb
(bad)
jmp
das
out
and
popf
aas
enter
imul
shl
jle
push
push
(bad)
call
lock
fiadd
(bad)
jb
inc
(bad)
(bad)
(bad)
inc
dec
mov
mov
push
aas
xchg
scas
jmp
test
iret
xor
addr16
(bad)
(bad)
(bad)
dec
stos
ds
sub
or
sub
out
call
scas
cmp
leave
mov
jmp
sbb
sub
adc
jo
sub
(bad)
(bad)
(bad)
inc
sub
sbb
dec
mov
inc
retf
and
lock
mov
jmp
loop
scas
push
mov
pop
pushf
ins
lods
adc
add
xchg
push
pop
jg
jg
jmp
clc
cmp
mov
push
xor
js
mov
test
mov
jmp
pop
and
and
(bad)
aam
mov
xor
ret
daa
inc
sub
cmp
(bad)
jmp
fistp
xchg
test
sub
outs
sub
cmps
test
iret
pop
mov
mov
into
sbb
call
inc
mov
fdivr
xchg
sub
sub
out
movs
enter
fdivrp
sbb
jmp
pop
sub
js
dec
test
push
sub
outs
test
retf
or
movs
push
in
xchg
push
ss
ret
lods
jmp
cs
mov
imul
(bad)
(bad)
(bad)
cmp
dec
xchg
add
or
jmp
inc
daa
pop
xor
fisttp
xor
cmp
mov
ja
(bad)
jmp
ds
mov
sar
adc
lods
xchg
mov
pop
in
leave
mov
aad
lds
xchg
jge
adc
or
(bad)
push
stos
test
lods
fnstcw
pop
push
xor
pushf
inc
in
stc
mov
push
(bad)
(bad)
(bad)
(bad)
jmp
push
cmp
cmp
jo
jnp
test
aam
in
xchg
std
xor
(bad)
(bad)
push
ss
(bad)
xlat
(bad)
sub
inc
js
cmp
imul
xchg
repz
ins
aaa
lock
mov
(bad)
(bad)
out
sti
out
mov
movs
std
mov
sub
xchg
xchg
mov
adc
sbb
or
mov
mov
jb
cmp
inc
out
push
ja
inc
inc
jge
stos
or
and
mov
mov
jbe
stos
(bad)
dec
xor
pusha
xor
(bad)
cld
mov
das
aam
in
test
add
std
(bad)
call
cld
stos
cdq
and
fcomi
into
in
sbb
repz
movs
and
jno
lock
pop
es
mov
xchg
movs
mov
push
add
lock
push
stc
sbb
stos
enter
test
(bad)
jmp
add
cdq
fisubr
mov
pop
push
fisub
fsubr
push
(bad)
jmp
and
fisub
jg
(bad)
jp
jle
movs
cdq
sub
jnp
scas
out
mov
inc
loopne
mov
adc
jp
dec
in
nop
jle
(bad)
popa
outs
mov
(bad)
(bad)
jmp
ins
xor
pop
retf
sahf
sub
in
test
adc
cmp
shl
mov
icebp
cmp
dec
mov
dec
cmps
mov
ret
outs
sbb
pop
sub
dec
ss
cs
(bad)
dec
pop
mov
xor
jle
sbb
xchg
dec
add
(bad)
(bad)
push
gs
shl
cdq
pop
jo
push
mov
push
jmp
fs
je
pop
in
daa
gs
pop
std
dec
call
das
pop
add
test
pop
cmps
jmp
pop
cld
(bad)
inc
jl
sbb
andps
les
jl
shl
lea
or
call
sub
stc
jle
sahf
aaa
jmp
pop
lock
inc
neg
adc
imul
push
mov
push
imul
pop
mov
das
xor
test
cmps
sub
(bad)
daa
push
dec
cmc
add
call
dec
or
mov
aas
pushf
jne
sbb
cmp
cdq
pop
push
int3
pushf
inc
clc
pop
ja
(bad)
call
xor
jnp
out
out
pop
or
adc
or
push
inc
sar
dec
loope
sbb
adc
das
adc
lods
jecxz
(bad)
mov
cmp
popa
imul
jns
mov
mov
mov
(bad)
jmp
shr
push
inc
sbb
jp
adc
xlat
sahf
add
mov
sub
and
repnz
adc
jb
ja
repnz
cli
aaa
std
lods
mov
aam
lock
cmps
call
lock
fisttp
hlt
ins
ins
loop
fstp
xor
sbb
mov
jp
sbb
jno
pop
pop
mov
div
out
push
fild
mov
call
loopne
xor
mov
jge
cmp
icebp
xlat
xlat
pop
mov
idiv
retf
les
add
push
(bad)
pop
add
add
dec
hlt
dec
add
aas
adc
(bad)
add
adc
jo
fs
(bad)
outs
lock
fcomp
add
cwde
arpl
lahf
loopne
cmps
aad
mov
(bad)
ret
adc
rol
jns
xchg
inc
outs
enter
sub
scas
ins
leave
leave
cmovge
mov
xchg
data16
sub
jmp
push
in
in
add
xor
mov
daa
cmps
popf
mov
ja
(bad)
mov
sti
pop
into
jmp
into
cwde
cwde
cld
jae
xchg
jg
call
sub
ret
ret
mov
cli
cli
pop
pop
add
icebp
dec
fcmovu
fdivp
scas
cld
cmp
mov
adc
test
js
dec
fcomp
call
pop
add
sbb
xchg
inc
das
push
(bad)
(bad)
dec
or
push
adc
sbb
addr16
dec
and
sbb
pop
mov
pop
int
call
sbb
mov
inc
(bad)
cmp
sbb
jg
push
xchg
dec
dec
pop
pop
mov
rcr
xor
mov
mov
push
inc
lods
ficom
mov
rcr
je
or
(bad)
mov
push
push
into
fadd
aaa
lea
cmp
jecxz
push
inc
and
and
mov
mov
das
and
push
push
push
sbb
adc
or
outs
and
adc
test
jle
jg
push
int3
cdq
cdq
(bad)
mov
(bad)
(bad)
push
xor
xor
retf
mul
mov
cmps
sub
push
push
push
(bad)
pop
stc
add
and
xchg
cmp
inc
mov
push
push
stc
call
xor
jae
lods
sub
cs
cmc
jmp
push
lock
push
rcr
pop
std
mov
(bad)
pop
cld
out
call
or
jne
xchg
dec
adc
xchg
jbe
sub
enter
xchg
call
xchg
pop
mov
adc
rol
dec
fcmovnu
push
(bad)
mov
out
call
rol
or
in
in
retf
jmp
jg
aam
cmp
sbb
cmps
lods
lods
mov
call
inc
pop
mov
addr16
out
mov
dec
sbb
and
call
inc
cmp
and
rol
cmp
scas
cld
dec
test
sbb
jnp
pop
pop
int
movs
movs
sbb
mov
jg
dec
dec
jmp
or
ds
push
retf
call
outs
in
xchg
jg
xchg
xchg
dec
sahf
pusha
pusha
push
out
mov
cmp
repz
call
fld
iret
dec
cmps
cmp
ficom
es
aas
dec
fcos
fisttp
lock
pop
jl
mov
mov
imul
arpl
xchg
scas
cld
jg
xor
movs
daa
ins
ins
loope
iret
iret
add
push
add
clc
push
sti
jg
std
cld
cld
push
in
or
xchg
sub
sub
idiv
mov
sub
push
outs
dec
dec
lea
imul
(bad)
jg
ffreep
shl
mov
out
and
cwde
mov
ja
and
in
arpl
xchg
call
pop
pop
mov
mov
adc
ret
add
movs
je
mov
ins
dec
dec
mov
int3
int3
add
out
(bad)
mov
(bad)
imul
cmps
xchg
dec
stc
pop
inc
(bad)
xor
fcmovnb
ret
mov
das
rcr
mov
movs
inc
inc
xor
mov
sub
and
call
mov
cmp
adc
aaa
aaa
inc
push
(bad)
(bad)
inc
xor
js
adc
imul
xor
xor
jnp
icebp
test
inc
inc
cmps
push
cmps
scas
sub
sub
push
(bad)
push
or
aas
mov
and
or
(bad)
push
push
jmp
(bad)
les
cmps
sub
and
xor
mov
jmp
jmp
dec
pop
pop
mov
and
out
gs
jl
adc
push
push
call
pop
imul
sbb
adc
push
xor
add
out
push
call
loopne
cmps
shl
enter
jmpw
inc
mov
daa
mov
xchg
sub
pop
stc
(bad)
(bad)
cli
add
mov
std
cmp
push
(bad)
sbb
xchg
cmp
call
gs
or
inc
cmp
outs
das
push
cmps
push
add
(bad)
xor
jg
scas
imul
xor
popa
rol
stos
push
xchg
xchg
fwait
fs
shr
(bad)
sar
(bad)
jmp
dec
pop
cmc
jns
jg
popf
lods
mov
mov
mov
jmp
dec
sbb
mov
or
(bad)
(bad)
fnstsw
retf
outs
xchg
in
aam
fnstcw
dec
xor
add
or
(bad)
sub
sub
inc
loope
and
in
pop
push
jno
add
call
fwait
div
ret
inc
mov
and
inc
jecxz
dec
shl
jmp
push
xlat
(bad)
(bad)
jmp
xor
les
pop
mov
pop
test
sti
in
scas
test
and
(bad)
(bad)
jg
sub
jle
ret
stos
test
mov
or
mov
mov
fs
dec
out
pop
mov
aad
mov
in
out
mov
jmp
mov
jg
cli
push
mov
je
aaa
mov
call
(bad)
pop
or
(bad)
(bad)
mov
push
fwait
jle
pop
xchg
call
lods
push
adc
mov
cmp
(bad)
(bad)
jmp
lock
ror
iret
xchg
or
popa
ins
pushf
mov
xchg
pop
cs
push
mov
pop
and
inc
jmp
ss
jb
xor
add
enter
lahf
jbe
sub
stos
and
bswap
xor
jg
(bad)
inc
mov
push
rol
fldenv
fwait
cdq
sahf
cli
and
(bad)
(bad)
out
cli
pop
cmps
add
rcl
push
mov
cmc
mov
(bad)
call
jo
add
aaa
push
ins
aaa
fsubr
push
xor
adc
lods
push
mov
(bad)
(bad)
call
ss
repz
xchg
mov
mov
cmp
jp
stos
stos
pop
pop
mov
sub
mov
(bad)
(bad)
(bad)
inc
adc
or
stos
push
pusha
push
or
jmp
mov
cmp
add
test
dec
cli
mov
es
xchg
cmps
jmp
in
ret
dec
push
sbb
sti
nop
in
add
inc
fcom
mov
(bad)
(bad)
(bad)
jmp
loopne
or
and
mov
test
lock
std
mov
jge
mov
push
call
(bad)
cli
movs
cli
test
cmp
stos
(bad)
push
adc
stos
pusha
mov
ror
mov
(bad)
(bad)
inc
shr
pusha
sub
dec
cmps
sar
dec
test
in
jae
nop
jmp
test
sub
xchg
dec
sbb
inc
fs
mov
pop
mov
pushf
jmp
push
ins
je
sti
cmps
dec
xor
or
daa
jmp
in
in
lods
aam
dec
pop
cmps
mov
xor
lea
clc
cmps
xlat
sub
xor
jmp
stos
add
das
xchg
lds
mov
shl
out
ss
push
stos
pop
or
cmc
call
cmps
dec
pusha
xor
stos
cli
shr
int
lods
in
jne
(bad)
(bad)
(bad)
push
jmp
mov
cmp
pushf
lahf
mov
mov
inc
mov
(bad)
cmp
jmp
icebp
into
cmps
xchg
into
test
mov
mov
fdivrp
scas
mov
out
jmp
cmp
clc
fist
sbb
push
stos
xor
push
sub
sbb
jbe
call
das
clc
in
test
dec
mov
stos
and
into
jo
sbb
jl
outs
ss
fisttp
scas
add
lea
stos
scas
dec
xlat
mov
sbb
(bad)
jmp
mov
jb
mov
and
scas
mov
cdq
mov
shr
(bad)
jg
cld
lahf
or
loopne
or
fmul
sbb
sbb
pop
jae
mov
add
push
adc
xchg
call
int
lds
data16
cmc
mov
scas
cld
mov
test
xlat
enter
icebp
mov
ds
mov
fdivr
add
and
inc
cmps
mov
pop
std
mov
into
sar
push
(bad)
mov
(bad)
call
repz
jl
adc
(bad)
aas
pop
out
xchg
ja
call
xchg
movs
cmp
inc
mov
cmps
std
xchg
sar
retf
in
cmp
sbb
xor
shl
jmp
pusha
cmps
int3
jge
or
pushf
push
push
sub
or
lods
sub
fwait
mov
(bad)
mov
frstor
fstp
shl
sbb
cmps
lods
cs
push
(bad)
jne
jecxz
ins
ror
sbb
xchg
cwde
lea
mov
call
or
pop
stc
jg
icebp
xchg
xchg
fldcw
lock
push
lock
retf
sub
imul
cmp
test
(bad)
cmp
mov
pop
in
retf
div
rol
dec
lahf
jae
xchg
jmp
cli
add
sbb
cmp
scas
lods
push
add
push
retf
stos
mov
ret
ja
jns
dec
cli
inc
jle
add
push
les
mov
jb
mov
dec
push
pop
lods
scas
sti
push
cmp
adc
shl
scas
sahf
data16
inc
fst
mov
jno
xor
and
cmp
sub
clc
(bad)
(bad)
push
mov
and
push
dec
xchg
push
cmp
sbb
mov
lea
pusha
ins
jge
adc
iret
fidivr
test
les
fcomp
sub
sar
leave
dec
stc
dec
dec
push
fdiv
loope
ret
xchg
adc
pop
mov
(bad)
inc
imul
or
mov
sahf
call
cmp
test
(bad)
jo
shl
jmp
mov
mov
repnz
std
fisubr
cmps
xor
nop
pop
lods
jne
mov
cmc
jg
jmp
popa
out
int3
sbb
pop
adc
cmp
push
cwde
(bad)
shl
(bad)
pop
stc
sub
in
pushf
xlat
mov
repnz
fwait
ror
(bad)
dec
jmp
xchg
jns
inc
xor
mov
jnp
pop
push
sub
xchg
jp
(bad)
fld
retf
ins
xor
push
mov
xor
mov
gs
out
movs
pop
or
jge
push
(bad)
call
dec
(bad)
aaa
repz
mov
inc
and
xchg
(bad)
fistp
sbb
shl
push
lock
inc
enter
loopne
or
scas
cld
mov
jp
pop
adc
dec
into
mov
jb
xchg
jmp
dec
aad
adc
inc
cmp
xchg
ins
pop
idiv
push
cmps
jmp
xchg
es
xor
stos
sub
and
pushf
dec
pop
sbb
sbb
dec
aas
sub
fs
mov
les
cmps
add
dec
mov
dec
push
sti
and
cmps
add
adc
push
pop
leave
inc
add
cmp
cmp
adc
lock
stc
or
call
popa
fldenv
push
shl
sti
mov
and
call
jg
fs
aad
jbe
dec
(bad)
(bad)
jb
push
mov
out
in
repnz
ret
jmp
or
sbb
cld
mov
push
dec
jmp
in
popf
adc
fdivr
xor
dec
adc
(bad)
outs
jecxz
(bad)
xor
xor
jl
loop
mov
or
gs
and
imul
sar
in
sub
je
fidiv
aas
inc
inc
cmp
(bad)
pop
stc
jg
aad
add
jne
pop
push
jns
jmp
out
pop
ret
xchg
mov
sub
dec
call
call
scas
pop
retf
jnp
lea
clc
push
imul
call
repz
sub
inc
daa
loope
arpl
iret
mov
sbb
cli
loop
test
and
mov
dec
test
scas
nop
inc
mov
xlat
adc
adc
push
shl
(bad)
(bad)
(bad)
jmp
inc
xor
out
sbb
cwde
jns
outs
repz
dec
mov
(bad)
(bad)
(bad)
jg
sub
call
ds
mov
lea
and
out
outs
data16
rol
call
inc
push
xchg
dec
sti
into
(bad)
jb
loop
adc
aad
das
cli
(bad)
(bad)
jg
xchg
dec
cmps
push
pop
mov
fwait
add
mov
mov
rol
mov
les
aam
stc
repnz
push
dec
fidiv
(bad)
jmp
ror
gs
dec
push
mov
inc
sub
jg
call
and
mov
stos
aas
push
and
lods
call
jp
hlt
(bad)
(bad)
std
dec
push
mov
or
add
xchg
lahf
xor
(bad)
(bad)
(bad)
(bad)
ffree
enter
pushf
(bad)
mov
scas
and
pop
sub
in
les
mov
imul
mov
(bad)
(bad)
(bad)
jmp
sub
mov
out
push
mov
lock
add
jnp
test
aaa
cld
(bad)
dec
sbb
arpl
punpcklwd
jnp
aad
pop
or
add
dec
jp
inc
into
daa
in
loopne
out
popa
mov
and
stos
cmp
xor
out
sbb
add
das
sbb
or
aaa
dec
aas
or
xchg
mov
sub
(bad)
jmp
add
les
cmps
cmp
fisubr
cmps
push
(bad)
adc
adc
(bad)
jmp
mov
(bad)
sbb
push
adc
inc
sar
addr16
push
jb
outs
mov
(bad)
(bad)
(bad)
(bad)
jnp
jp
inc
shr
pop
test
mov
inc
stos
frstor
loopne
cmc
mov
dec
(bad)
xchg
mov
movs
xor
(bad)
mov
loop
mov
(bad)
(bad)
(bad)
inc
or
cdq
retf
pop
fadd
es
mov
(bad)
shl
call
jp
mov
lock
mov
fcom
fisub
inc
pop
sub
loope
test
retf
cmp
popa
pop
push
sub
imul
adc
jae
arpl
fcomip
call
jnp
and
popa
test
dec
xlat
cdq
daa
ins
(bad)
loopne
mov
clc
(bad)
(bad)
inc
xchg
outs
lahf
jmp
mov
je
nop
mov
js
fistp
into
test
push
xor
imul
mov
call
fild
imul
imul
fwait
xchg
shl
jge
adc
(bad)
(bad)
jg
ret
pop
mov
loope
push
mov
inc
jb
stos
mov
(bad)
(bad)
(bad)
call
jb
push
xor
xchg
cs
mov
xor
pusha
xchg
test
xchg
in
int
stos
jne
inc
loop
out
fidiv
retf
addr16
int3
sub
(bad)
(bad)
(bad)
call
pop
xchg
pop
mov
mov
clc
xchg
push
jae
ret
cmps
or
(bad)
jg
(bad)
in
repnz
push
outs
pusha
in
popa
ins
sbb
imul
test
(bad)
pop
sub
(bad)
push
fnsave
xlat
adc
push
cmp
not
test
outs
jb
in
jmp
sub
imul
popf
fsub
pushf
out
adc
cli
nop
retf
(bad)
(bad)
call
pop
xchg
fisub
cmps
mov
(bad)
outs
ret
shr
mov
(bad)
pop
jmp
and
retf
mov
pushf
pop
stos
push
hlt
fcom
mov
jne
xor
cmp
pop
shr
xchg
mov
push
retf
into
jle
ds
addr16
mov
inc
test
xchg
xchg
(bad)
(bad)
(bad)
(bad)
aas
xor
shl
std
pusha
ins
pop
add
popf
andps
aaa
add
mov
mov
(bad)
(bad)
(bad)
call
adc
xchg
aad
daa
cdq
sbb
fist
jmp
clc
fcmovnb
push
(bad)
(bad)
cli
pop
mov
xor
rcr
cmps
shr
and
(bad)
(bad)
jmp
fld
inc
mov
imul
popa
jnp
dec
movs
lds
daa
call
mov
dec
dec
cmp
pop
ds
loop
mov
xchg
leave
lods
(bad)
(bad)
(bad)
(bad)
fsubrp
or
sub
data16
in
fisubr
dec
xor
(bad)
lods
mov
or
cld
mov
stos
jmp
add
scas
lea
leave
mov
hlt
mov
cmp
imul
sub
mov
or
push
(bad)
jmp
adc
das
cs
(bad)
jp
js
lods
loopne
stos
and
or
dec
mov
popf
xor
retf
das
xchg
sbb
xchg
add
sar
(bad)
call
xor
retf
out
cld
stos
shl
test
jle
cmp
sub
test
pop
hlt
(bad)
jg
mov
or
nop
imul
iret
je
xchg
pop
imul
mov
jmp
inc
pop
psllw
inc
push
cwde
and
sub
in
(bad)
(bad)
(bad)
jmp
push
pop
mov
push
scas
push
stos
cmp
xchg
mov
xor
jp
(bad)
(bad)
(bad)
dec
sub
sahf
sub
inc
xlat
pop
sub
xchg
mov
sahf
jmp
mov
mov
ret
inc
stos
xchg
test
pop
retf
sti
or
shl
xor
or
(bad)
(bad)
jmp
xor
add
mov
out
pop
push
clc
sahf
jmp
lods
mov
(bad)
call
xor
mov
pop
xchg
xor
adc
leave
pop
mov
jbe
mov
cmp
jae
cs
retf
push
push
(bad)
(bad)
fistp
retf
inc
and
mov
add
and
scas
sbb
(bad)
jbe
fdivr
(bad)
(bad)
dec
mov
cmps
mov
or
call
sub
jecxz
sub
stos
sub
sbb
mov
in
adc
cmp
add
sti
(bad)
jmp
fcomp
cs
idiv
mov
cli
clc
inc
jmp
pusha
jmp
(bad)
out
mov
cmp
cli
cli
push
test
jp
mov
and
scas
sub
push
ja
inc
mov
inc
jge
mov
push
call
stos
dec
scas
push
push
mov
mov
cmc
or
outs
jg
dec
lock
cwde
test
aaa
dec
jp
push
mov
data16
stos
sti
stos
(bad)
(bad)
call
or
popa
push
dec
or
inc
cmp
(bad)
(bad)
jg
cwde
adc
pushf
mov
stos
(bad)
jno
fstp
sub
push
add
adc
(bad)
call
pop
lock
in
add
mov
stos
(bad)
(bad)
call
stc
(bad)
cli
lods
dec
pop
push
(bad)
data16
pop
fistp
or
in
inc
data16
mov
retf
jo
pop
fcomp
fsubr
int3
int3
inc
cmp
jge
jmp
add
push
and
cmps
out
stos
mov
and
inc
movs
cli
jecxz
mov
(bad)
dec
fisubr
dec
sbb
cmp
mov
inc
scas
cli
pop
mov
ins
jle
or
stos
lods
rol
ds
push
jg
(bad)
jmp
sub
inc
mov
fs
scas
mov
or
mov
in
(bad)
(bad)
jmp
nop
in
or
inc
jnp
cmp
xchg
addr16
leave
pop
fst
fnstcw
push
adc
in
jg
test
xchg
scas
inc
xchg
leave
js
fs
in
mov
(bad)
fbld
sub
add
addr16
stos
imul
add
outs
ss
(bad)
sar
loopne
mov
rcl
pop
mov
pop
clc
xchg
aaa
stos
(bad)
imul
ret
out
add
loop
push
lahf
and
addr16
cli
ret
mov
test
xor
lock
fild
aaa
dec
es
mov
mov
cmp
sti
(bad)
inc
pop
xor
push
and
stos
pop
out
inc
pop
scas
pop
or
dec
mov
mov
lods
(bad)
(bad)
(bad)
inc
xchg
xchg
ret
mov
(bad)
fcmovnu
mov
add
sbb
pop
test
inc
fnstenv
fistp
cmps
cld
lock
lea
data16
out
or
(bad)
jmp
fwait
adc
push
(bad)
call
add
inc
sti
jp
cmp
in
mov
(bad)
(bad)
cmps
jmp
jl
lods
stos
fdivr
jbe
and
mov
add
mov
push
xchg
stos
(bad)
dec
scas
test
sub
sbb
push
in
jmp
push
scas
jmp
aas
and
push
call
xor
add
jecxz
xor
stos
jnp
xchg
pop
iret
xlat
(bad)
jg
dec
aas
mov
push
iret
cld
pushf
in
lock
pop
scas
cld
lea
mov
test
xlat
ja
jo
push
adc
mov
sbb
test
(bad)
(bad)
call
mov
(bad)
fsubr
and
in
test
dec
cmp
lods
popf
cmp
cmp
test
pop
or
mov
test
lock
std
movs
mov
sub
inc
cmp
sub
inc
retf
push
es
(bad)
(bad)
call
stos
inc
jmp
jb
(bad)
stos
fwait
mov
test
push
mov
cmps
jmp
lock
mov
push
push
(bad)
push
test
ins
inc
inc
test
scas
add
(bad)
(bad)
dec
outs
sbb
pop
call
nop
popf
aad
shl
addr16
and
rcr
icebp
in
call
inc
push
xchg
test
sbb
imul
movs
push
xchg
jno
and
mov
push
icebp
(bad)
(bad)
(bad)
cmp
ja
addr16
cmp
movs
fnstsw
xlat
cmps
test
pop
repnz
cmp
jmp
lods
ret
(bad)
lods
lods
test
scas
or
mov
push
mov
lahf
cmps
xchg
mov
mov
addr16
sahf
cmps
xchg
mov
xor
inc
and
(bad)
jmp
mov
push
(bad)
cmps
jp
pushf
movs
movs
sbb
jno
iret
fcomi
or
movs
push
jno
dec
(bad)
bound
js
js
scas
mov
mov
je
push
push
mov
dec
cld
out
dec
pushf
sub
sub
loopne
movs
shl
mov
mov
push
retf
mov
mov
lods
std
aam
cmc
jns
gs
mov
mov
dec
(bad)
pop
mov
idiv
push
add
pop
xchg
test
push
ror
inc
and
cmp
(bad)
(bad)
(bad)
jg
arpl
test
mov
repnz
mov
pop
and
daa
pop
mov
mov
and
mov
fs
add
arpl
fwait
lock
sbb
xor
ret
push
stos
and
jns
jl
sbb
cmps
inc
sub
inc
(bad)
mov
adc
ja
imul
mov
fisttp
stos
push
mov
das
xchg
(bad)
call
cmps
jmp
(bad)
(bad)
xchg
push
ret
push
jns
fisubr
mov
inc
sbb
or
loop
inc
ss
int3
rcl
mov
adc
sti
push
pop
sbb
xor
jg
sub
mov
popf
push
jmp
sub
push
jl
(bad)
in
jmp
and
retf
mul
lahf
push
cmps
mov
push
push
mov
mov
(bad)
dec
movs
add
cmp
jge
mov
pop
or
jmp
shl
sbb
addr16
push
jb
stc
sub
fcomip
call
pop
retf
stos
pop
mov
jg
stos
dec
cld
stos
lahf
xchg
xchg
iret
test
push
xchg
mov
jmp
scas
lods
out
sub
cmp
xchg
mov
sub
jmp
call
jns
xchg
repz
cld
jl
xor
(bad)
(bad)
call
jmp
xlat
jp
push
mov
stos
(bad)
mov
and
jno
sbb
lock
ror
pop
call
mov
(bad)
(bad)
push
cmps
mov
sar
in
loope
push
out
mov
es
ins
jl
mov
(bad)
(bad)
(bad)
(bad)
push
xor
and
jo
test
push
rcl
mov
(bad)
(bad)
push
mov
or
shr
gs
sub
sub
(bad)
adc
mov
dec
fild
call
sahf
fst
cld
loop
stos
loopne
out
adc
es
or
daa
dec
and
test
push
repz
pop
inc
outs
cli
(bad)
jmp
lock
int3
int3
pop
push
call
jmp
sahf
sbb
(bad)
(bad)
(bad)
(bad)
ds
mov
(bad)
pop
push
stos
stos
adc
sbb
push
pop
push
inc
push
stos
jb
test
fild
(bad)
(bad)
jmp
sub
ds
or
inc
xor
inc
mov
pop
mov
mov
(bad)
(bad)
(bad)
call
pusha
cmp
mov
inc
ja
jae
test
cmp
sbb
mov
mov
ins
pop
adc
and
cmps
scas
push
mov
push
push
test
push
inc
add
mov
data16
lock
(bad)
dec
and
cs
repz
push
dec
jp
and
pop
into
jl
sub
cmp
push
push
cmp
sub
mov
or
jmp
sub
adc
(bad)
jmp
sub
inc
fld
xor
xchg
jle
out
mov
xor
inc
bound
inc
mov
mov
cmp
idiv
and
mov
ja
push
cmp
mov
mov
retf
aad
mul
xor
adc
pusha
add
(bad)
(bad)
(bad)
(bad)
mov
jle
mov
cmp
and
inc
xchg
movs
movs
hlt
mov
sbb
jmp
adc
loopne
xor
xchg
and
fisttp
sub
(bad)
jmp
jp
mov
scas
dec
scas
iret
lods
xchg
and
inc
cmps
cli
imul
add
push
stos
std
stos
fsubr
repnz
rol
stos
(bad)
adc
lods
adc
cmps
aad
imul
xor
pusha
xchg
sbb
repnz
mov
fnstenv
nop
outs
or
or
add
push
popf
cli
loop
fwait
inc
push
pop
les
and
(bad)
call
loopne
mov
je
rol
fisubr
dec
fcmovnu
push
inc
in
imul
call
enter
aaa
mov
(bad)
call
jge
cmps
fidivr
retf
gs
add
scas
imul
sub
call
call
and
outs
arpl
push
inc
push
and
in
(bad)
mov
sbb
cmp
inc
mov
sbb
dec
sub
(bad)
(bad)
in
dec
xchg
retf
mov
mov
enter
jnp
inc
dec
mov
lock
xchg
xlat
scas
mov
jne
int3
mov
and
jbe
icebp
jl
stos
stos
push
(bad)
(bad)
(bad)
dec
daa
mov
jo
or
cld
pop
mov
jecxz
inc
xor
cs
(bad)
(bad)
jmp
aaa
add
sub
sub
test
mov
pop
jp
sub
sbb
push
pop
ja
(bad)
jmp
sub
test
sub
retf
jmp
jmp
es
pushf
sar
jmp
daa
sub
cmps
in
test
movs
xchg
(bad)
jmp
push
test
and
cmps
rol
iret
(bad)
(bad)
(bad)
fild
aas
call
das
scas
dec
push
dec
jmp
cmp
cmp
xor
scas
in
into
(bad)
(bad)
push
jne
inc
retf
adc
call
or
call
xor
push
fdivp
into
into
inc
push
stos
sahf
pop
mov
in
mov
(bad)
call
push
dec
arpl
jecxz
aaa
mov
repz
or
jecxz
lea
test
scas
push
aad
push
cld
mov
mov
movs
mov
sub
(bad)
(bad)
(bad)
push
mov
push
xor
inc
rol
mov
cmps
cmc
out
call
std
dec
dec
mov
movs
push
test
or
retf
and
outs
(bad)
(bad)
(bad)
(bad)
jmp
jmp
pop
or
pop
cmp
in
sar
jnp
clc
data16
loop
scas
fldenv
(bad)
(bad)
call
cmps
cmps
pusha
cmc
sbb
addr16
mov
outs
cmp
out
xlat
mov
clc
jg
lea
push
dec
sar
out
add
pop
aam
jmp
cmp
scas
(bad)
adc
jbe
mov
test
arpl
mov
call
jp
push
loope
or
fwait
pop
stc
sar
xor
push
cli
(bad)
(bad)
call
mov
cmp
ja
jae
jo
out
pop
stos
dec
fdivr
mov
push
mov
outs
clc
outs
enter
stos
jae
pop
das
pop
fdiv
or
(bad)
(bad)
(bad)
(bad)
out
jmp
retf
rcl
div
push
iret
aas
sub
shr
dec
fimul
(bad)
in
stos
sub
ins
mov
jnp
test
cmp
mov
int3
mov
imul
inc
push
push
dec
ror
mov
push
cmps
fwait
pushf
sub
aam
(bad)
out
out
xchg
(bad)
(bad)
(bad)
(bad)
mov
enter
jns
cmp
xor
mov
imul
call
fbld
pusha
imul
dec
aas
jge
scas
ficomp
xor
pop
div
(bad)
(bad)
(bad)
call
jp
push
into
sbb
sahf
test
test
in
inc
jle
or
xor
sbb
(bad)
jmp
int
rcr
add
cwde
ffreep
fnstenv
mov
ret
inc
(bad)
(bad)
(bad)
call
pusha
iret
jb
mov
jmp
pop
mov
lock
dec
sbb
mov
(bad)
call
cwde
loope
pop
mov
jno
rcr
clc
pop
push
(bad)
(bad)
jmp
push
outs
test
xor
stc
push
call
jle
dec
scas
mov
rcr
popf
sub
mov
mov
fld
push
mov
push
jl
out
scas
lods
push
(bad)
(bad)
mov
inc
adc
pop
outs
sbb
rol
(bad)
shr
sar
jmp
test
mov
movs
paddd
dec
std
test
loope
mov
push
and
test
test
mov
inc
test
mov
inc
sbb
clc
lods
rcr
stc
das
xchg
(bad)
fdiv
inc
cmc
(bad)
sbb
imul
mov
lahf
hlt
xchg
cs
mov
lods
sbb
nop
or
inc
fwait
pop
psubd
nop
ins
mov
loop
mov
dec
pop
movs
and
lods
sbb
ins
inc
add
dec
retf
inc
movs
lods
or
dec
call
jp
(bad)
(bad)
dec
repz
das
cmps
mov
mov
movs
fwait
pop
xchg
mov
test
rcr
jmp
mov
iret
mov
xchg
inc
cmps
mov
mov
pop
cmp
adc
cmps
loopne
push
call
sub
mov
pusha
adc
cwde
pusha
inc
push
jmp
sahf
push
aam
inc
retf
je
cmp
cli
cmp
push
inc
sti
(bad)
dec
cmp
mov
push
movs
nop
retf
cs
call
pop
cmps
out
sub
(bad)
(bad)
call
stos
cmp
fild
adc
sub
popa
push
xor
dec
mov
test
jo
sar
and
leave
stc
shl
jge
(bad)
(bad)
out
shl
addr16
jg
imul
mov
out
sub
(bad)
(bad)
(bad)
push
call
fcom
mov
arpl
or
sub
(bad)
(bad)
(bad)
(bad)
mov
jnp
mov
jbe
icebp
pop
mov
mov
dec
movs
lea
sbb
sub
or
pop
ret
clc
xor
add
(bad)
dec
adc
in
pop
les
imul
jno
hlt
xchg
cmp
(bad)
(bad)
jmp
out
jmp
xor
or
loopne
xor
sub
(bad)
shl
shr
(bad)
(bad)
(bad)
jmp
add
inc
int3
in
jp
jmp
and
sub
ret
mov
(bad)
push
test
xchg
icebp
push
ret
outs
sti
sub
mov
mov
loope
push
pop
(bad)
cmp
add
cmp
je
bndldx
stos
mov
dec
in
sub
(bad)
(bad)
jl
jle
test
dec
hlt
pop
mov
dec
out
(bad)
sub
mov
ds
xchg
(bad)
(bad)
(bad)
dec
and
pop
or
add
mov
retf
stos
ja
pop
mov
sahf
mov
add
push
les
(bad)
jmp
outs
test
loopne
mov
cmps
or
xchg
test
sbb
in
ja
mov
or
jp
jns
fdiv
(bad)
dec
xor
sti
mov
inc
or
push
aad
push
es
mov
gs
test
xchg
scas
mov
sbb
test
iret
fild
xchg
stos
fcmovb
movs
scas
out
bound
push
mov
push
add
popa
(bad)
ds
arpl
lock
addr16
(bad)
dec
mov
jnp
in
adc
fwait
(bad)
dec
mov
add
retf
mov
mov
jmp
ins
pop
(bad)
(bad)
(bad)
push
push
mov
daa
push
jns
pop
pop
popa
dec
daa
and
pusha
or
dec
movzx
les
push
push
popa
mov
idiv
push
xchg
(bad)
jnp
sbb
sbb
mov
retf
inc
lock
dec
push
cmp
add
push
repz
push
add
xchg
dec
(bad)
cmp
cmp
adc
mov
dec
cdq
imul
ds
(bad)
jmp
or
sub
out
mov
movs
rcl
dec
pop
cmps
cmp
(bad)
(bad)
push
sbb
cmp
inc
push
push
(bad)
and
sub
add
pop
mov
js
cmc
(bad)
dec
sub
jmp
push
mov
jle
push
pop
push
(bad)
outs
(bad)
(bad)
jmp
mov
lock
pop
cmp
cli
and
push
adc
stos
(bad)
(bad)
(bad)
dec
mov
mov
push
or
jmp
sub
ret
cmp
pop
stos
mov
(bad)
call
es
fwait
and
jb
fidiv
test
stos
sbb
rcr
pop
(bad)
(bad)
(bad)
call
add
mov
mov
or
push
(bad)
enter
(bad)
(bad)
(bad)
jg
aam
repnz
imul
fst
rcl
cmp
sahf
mov
(bad)
(bad)
(bad)
inc
mov
sti
rcr
stos
cmp
sub
ret
test
shl
mov
jecxz
jmp
jnp
sub
push
cmp
lock
aad
cld
jno
inc
outs
adc
cdq
jecxz
sar
imul
push
rol
(bad)
cmc
clc
inc
inc
sub
(bad)
(bad)
(bad)
call
sar
in
mov
aaa
hlt
mov
shr
arpl
inc
xchg
lock
xor
jecxz
cmc
jmp
fmul
lds
arpl
loope
xchg
cmp
nop
(bad)
jmp
push
pop
loop
loopne
adc
dec
es
cmp
xchg
(bad)
jmp
mov
mov
lock
and
call
xchg
inc
xor
shr
add
pop
sub
(bad)
xor
xchg
sbb
push
stos
ja
dec
(bad)
jmp
in
mov
mov
out
loop
test
jecxz
jo
sbb
popf
or
and
xor
xchg
adc
(bad)
(bad)
call
imul
dec
in
ss
push
fwait
mov
sahf
clc
push
mov
clc
std
(bad)
push
in
sub
scas
movs
xor
in
mov
sbb
(bad)
jmp
call
mov
pop
retf
(bad)
push
pusha
mov
loop
mov
rcr
call
repnz
jg
jmp
jne
mov
fwait
mov
push
sbb
cmp
lods
sbb
stos
aam
sub
lds
neg
test
les
sub
pop
ja
clc
inc
cmp
or
jb
fstp
jl
ret
fdivr
cli
adc
in
out
enter
sti
pop
es
jno
pop
lea
mov
xchg
add
xor
(bad)
fild
xor
test
mov
pop
adc
push
push
pop
in
mov
(bad)
call
mov
mov
out
pop
or
mov
ins
cmp
jg
(bad)
push
xchg
mov
mov
loope
test
adc
mov
add
and
or
jmp
cs
es
data16
lea
or
in
xlat
dec
xchg
(bad)
(bad)
(bad)
jmp
pop
mov
aaa
jl
outs
into
test
test
into
int3
dec
xor
mov
adc
(bad)
(bad)
(bad)
(bad)
(bad)
call
and
sub
jmp
mov
rol
pop
out
mov
fcomip
dec
outs
adc
adc
adc
and
bound
adc
out
dec
in
(bad)
(bad)
mov
(bad)
jmp
loopne
and
add
xlat
pusha
fmul
dec
shl
shl
and
mov
mov
xchg
cmp
leave
das
ss
and
sbb
mov
adc
cmp
mov
fisub
stos
fsubr
xchg
sub
shr
(bad)
inc
retf
les
mov
pop
loop
(bad)
fistp
inc
clc
test
scas
imul
fidivr
fdivrp
(bad)
(bad)
(bad)
call
xchg
cmp
or
dec
clc
mov
inc
cs
ins
fsubrp
mov
pop
out
in
pop
pusha
jo
dec
daa
int3
addr16
sbb
test
or
(bad)
jp
cdq
sub
fwait
imul
mov
pop
or
jp
in
jmp
shl
sar
mov
jle
pusha
lock
pop
or
stos
or
dec
jbe
call
lahf
xor
popa
into
movs
scas
jg
inc
jo
sub
cmp
das
mov
(bad)
fbld
loope
es
pop
sub
js
pop
jle
cmp
ret
mov
jle
loopne
int3
xor
pushf
mov
mov
movs
es
mov
in
and
sbb
scas
stos
out
(bad)
call
add
mul
or
xor
xor
xchg
lods
xchg
movs
je
int
fild
ret
(bad)
jmp
in
jnp
xor
sub
xchg
jmp
ins
lods
mov
int3
repnz
pop
jp
out
inc
rcr
add
cli
dec
(bad)
jmp
idiv
pop
out
fs
out
and
cdq
adc
jp
push
pop
add
mov
js
scas
mov
sbb
lods
in
sub
(bad)
(bad)
push
ins
xchg
jb
mov
cdq
push
lahf
repz
jo
outs
rol
sbb
mov
(bad)
dec
mov
pop
cmp
fstp
jge
push
sbb
dec
(bad)
jo
mov
scas
(bad)
call
mov
arpl
push
pop
in
test
inc
or
das
and
rol
add
fld
push
mov
xor
lahf
push
out
imul
fdiv
mov
(bad)
jmp
xchg
iret
mov
stos
fst
sub
cli
push
cli
add
jg
(bad)
punpckhbw
xchg
loopne
push
cmps
jmp
in
jo
jno
in
fdivr
idiv
fwait
xchg
fucomip
cmps
add
add
hlt
stos
inc
sub
inc
jmp
(bad)
fild
repnz
sbb
sbb
fist
cdq
es
jmp
je
fbstp
std
mov
stos
pop
add
inc
jnp
jnp
mov
aad
(bad)
inc
cwde
ret
jmp
ins
retf
ins
jmp
add
dec
pop
stos
addr16
mov
(bad)
out
retf
addr16
dec
stos
add
cld
call
loope
shr
jmp
imul
jg
(bad)
mov
jg
out
aaa
stos
aaa
jmp
cmp
(bad)
jmp
aaa
ins
in
into
jo
pop
jo
and
adc
or
add
add
add
add
adc
sbb
lods
mov
jmp
fs
ror
sbb
fwait
mov
shl
push
add
test
stos
jmp
jg
jmp
jl
jmp
sub
mov
jmp
pop
or
fidiv
lock
jmp
jmp
or
push
fild
jmp
mov
jmp
mov
jg
es
stos
lahf
jmp
inc
mov
mul
sti
mov
cmps
xchg
add
(bad)
stos
mov
loopne
or
jmp
outs
jmp
jle
cmp
jmp
mov
and
add
int3
stos
mov
outs
not
fist
stos
out
add
stos
dec
xchg
jg
repz
add
jmp
jmp
sub
sbb
stos
std
add
fidiv
ins
and
pop
and
push
stos
les
jmp
outs
jmp
inc
rol
jmp
xchg
jb
jbe
push
jbe
jmp
mov
jmp
dec
stos
lds
jmp
lods
jae
jmp
add
shr
stos
daa
add
mov
add
xchg
jmp
jmp
ret
pop
add
add
xlat
stos
pushf
mov
mov
xor
das
stos
rol
jmp
fsubrp
mov
add
fidivr
add
mov
dec
push
mov
imul
neg
jmp
stos
retf
or
call
retf
stos
mov
out
out
sub
dec
or
and
mov
(bad)
stos
xor
jmp
std
xchg
sub
mov
mov
stos
or
imul
stos
mov
pop
adc
loope
pop
lds
in
stos
icebp
pop
adc
xchg
jmp
jae
int
sahf
jmp
gs
fild
call
jmp
dec
jmp
jne
icebp
(bad)
cmps
xor
mov
mov
bound
hlt
es
repnz
sbb
and
mov
cld
jmp
fistp
je
shr
push
enter
int
sub
dec
idiv
aaa
mov
stos
mov
pushf
std
ins
pushf
sub
dec
sub
std
pop
lock
in
in
cld
aam
stos
jno
in
jns
je
stos
and
out
push
and
adc
dec
push
jne
icebp
pop
(bad)
cs
inc
es
test
jmp
aad
pop
and
std
not
stos
pop
stos
or
loope
mov
pop
pop
ins
mov
push
sub
(bad)
faddp
sub
mov
out
mov
stos
(bad)
sub
ja
mov
retf
mov
sub
sar
ficom
outs
stos
int3
sar
das
clc
pop
data16
call
stos
js
jbe
jge
nop
int
push
stos
test
les
in
out
enter
nop
popf
outs
mov
mov
mov
xchg
lds
jge
stos
cli
xchg
jae
sub
jns
pop
stos
mov
ret
mov
stos
xlat
(bad)
sbb
das
mov
dec
(bad)
nop
fidivr
pusha
rcr
enter
pop
push
dec
cwde
es
nop
fnop
ficom
mov
or
sbb
das
clc
jge
cwde
mov
mov
sub
cwde
push
stos
mov
mov
out
jmp
pop
push
push
out
sub
cwde
pushf
gs
dec
mov
mov
cwde
xor
int3
inc
pop
hlt
mov
test
xor
(bad)
idiv
das
mov
es
push
jmp
pop
int3
push
repz
dec
ins
call
fisubr
inc
enter
jmp
mov
xchg
adc
aad
rcl
fcomp
stos
pop
xchg
loope
movs
outs
int
and
sahf
adc
sub
add
pop
push
dec
cld
or
push
sbb
dec
ins
or
into
sbb
outs
add
out
call
enter
mov
loope
cs
mov
cmps
outs
xchg
jb
add
call
lea
je
in
pop
push
mov
xor
es
ficom
and
sar
add
dec
popa
call
xor
adc
add
and
sbb
data16
mov
imul
add
xchg
mov
aad
into
loopne
xchg
scas
fiadd
jmp
fisub
sub
sbb
xchg
add
xchg
adc
ss
cmp
cs
aad
sahf
sub
mov
mov
sub
addr16
mov
in
pop
mov
imul
fst
ja
in
(bad)
mov
adc
mov
call
call
imul
pusha
or
movs
loop
aaa
arpl
xchg
scas
mov
imul
jmp
int
ins
add
shr
pop
(bad)
(bad)
(bad)
mov
ins
add
ins
movs
mov
gs
cmps
repnz
and
fbld
jmp
(bad)
(bad)
(bad)
jmp
mov
cmps
cs
sbb
ins
sbb
and
ss
pop
adc
call
(bad)
(bad)
jmp
or
ins
or
imul
add
scas
movs
mov
shr
xor
(bad)
(bad)
jmp
inc
arpl
imul
ds
imul
or
or
sbb
pop
lock
mov
pushw
(bad)
gs
dec
xor
outs
sbb
or
scas
addr16
push
pusha
sbb
adc
lods
sub
imul
or
sbb
or
dec
rol
push
outs
maxps
call
popw
test
out
and
xchg
or
push
mov
(bad)
sti
add
mov
arpl
push
sub
cld
arpl
add
movs
and
mov
mov
push
mov
(bad)
jmp
mov
(bad)
(bad)
push
or
push
fs
nop
iret
adc
ins
or
cmps
popa
add
data16
dec
lods
xchg
add
jmp
imul
sub
or
cmps
ds
adc
ret
(bad)
mov
outs
or
in
call
mov
or
pop
(bad)
jmp
clc
inc
test
add
mov
repz
or
fmul
sub
push
(bad)
(bad)
(bad)
dec
(bad)
imul
cdq
and
data16
add
gs
imul
arpl
sbb
or
(bad)
(bad)
(bad)
mov
xor
push
cwde
arpl
and
jp
sbb
fs
pop
addr16
fcomip
outs
movs
jmp
xor
ins
add
addr16
loop
push
adc
jmp
(bad)
dec
pushw
adc
push
mov
sahf
and
mov
shr
gs
jmp
or
data16
cli
sti
inc
(bad)
mov
xor
dec
arpl
cmp
add
stos
dec
bound
fdivr
jmp
sbb
xor
xor
pop
cmp
add
cmp
mov
clc
jmp
outs
adc
imul
jg
cwde
sahf
or
test
push
outs
and
mov
jmp
loop
in
pop
jmp
test
(bad)
(bad)
jmp
dec
outs
dec
or
loope
sbb
in
mov
in
adc
movs
call
clc
jmp
inc
or
dec
movs
sbb
stos
add
or
or
bound
outs
lods
pop
push
jb
inc
or
outs
add
gs
cli
arpl
dec
ins
mov
bound
fld
push
pop
imul
call
movzx
lock
cld
imul
cmps
(bad)
addr16
or
fiadd
(bad)
ins
mov
and
sbb
lods
popf
outs
or
imul
test
push
std
outs
call
out
out
sub
mov
in
xor
jp
or
sub
ins
mov
mov
inc
outs
add
sti
nop
fs
imul
cs
xor
mov
or
imul
mov
sbb
fcomip
(bad)
call
scas
test
push
addr16
push
imul
cmp
lock
ins
push
outs
bound
fwait
(bad)
jmp
movs
in
gs
sub
push
adc
pushf
call
or
mov
sahf
push
cmps
imul
es
outs
pop
shr
or
lock
call
push
scas
arpl
loop
or
push
call
dec
addr16
push
pop
popa
test
sbb
imul
pop
stos
and
hlt
jg
add
fstp
add
outs
out
inc
(bad)
(bad)
jg
jecxz
pop
sub
add
mov
pop
fimul
bound
inc
out
lock
jmp
mov
popa
inc
mov
mov
imul
outs
outs
dec
mov
adc
dec
stc
push
and
loopne
cld
cwde
std
pop
pop
lock
fsub
and
pop
add
add
es
cmp
or
mov
fwait
dec
outs
add
mov
(bad)
out
pop
lock
(bad)
and
bound
(bad)
mov
jge
xor
cmp
scas
clc
out
sbb
arpl
addr16
or
ins
ins
scas
clc
mov
mov
mov
mov
add
mov
jmp
ror
sub
es
fsub
imul
arpl
mov
jmp
or
push
out
imul
outs
and
and
stc
dec
mov
dec
call
xor
push
dec
fmul
jno
and
ja
out
add
inc
sbb
dec
call
push
and
test
add
push
imul
pusha
push
stos
test
adc
(bad)
(bad)
inc
inc
in
(bad)
scas
ins
or
dec
data16
push
pop
mov
das
(bad)
jg
test
and
or
push
mov
xor
call
inc
stos
popa
neg
stos
stc
enter
push
daa
xor
out
dec
inc
sahf
push
inc
inc
in
add
ins
sub
mov
cmps
push
fsubr
(bad)
(bad)
(bad)
push
repnz
jp
popa
and
rcr
adc
fld
ds
jmp
dec
adc
sub
cdq
ins
call
sbb
pop
cmp
aaa
cwde
js
push
jo
lock
push
stos
nop
jp
nop
test
mov
outs
sti
test
into
xlat
scas
ror
(bad)
push
sbb
mov
stos
fcomp
sub
test
stos
js
loop
mov
movs
(bad)
(bad)
(bad)
fistp
add
mov
movs
aad
xchg
cmp
call
test
cmp
stos
arpl
(bad)
(bad)
push
sbb
push
stos
rcl
sahf
int
add
mov
fs
(bad)
(bad)
(bad)
jmp
shr
dec
mov
mov
push
mov
add
outs
sub
mov
(bad)
fsubr
imul
int3
and
imul
adc
retf
aam
mov
push
ins
pop
popa
adc
jmp
mov
cmp
jo
sahf
mov
mov
mov
(bad)
(bad)
js
cli
push
jl
outs
jno
jns
or
sbb
push
scas
mov
push
add
cli
xor
scas
cli
mov
sbb
add
stc
retf
stc
test
jp
cld
mov
adc
adc
xchg
(bad)
(bad)
(bad)
jmp
scas
faddp
es
pop
xor
and
xchg
fidiv
addr16
sbb
test
das
adc
mov
das
pop
test
mov
neg
cmp
adc
add
pop
pop
movs
adc
add
stc
sub
xchg
mov
xor
jmp
mov
in
dec
push
les
popa
mov
jmp
xchg
lds
jg
sub
adc
mov
pop
adc
inc
(bad)
(bad)
jg
lods
shl
dec
xchg
mov
adc
jno
push
jno
pop
pop
(bad)
(bad)
(bad)
fstp
fiadd
sub
mov
fimul
ins
xchg
and
lea
(bad)
(bad)
inc
inc
and
xor
loope
or
mov
or
lds
icebp
adc
dec
(bad)
call
cmp
cdq
jmp
add
sub
sub
push
dec
leave
push
sub
adc
jmp
out
sub
(bad)
(bad)
(bad)
inc
push
mov
adc
jmp
cmp
int3
cmps
mov
mov
add
pop
cld
dec
fcmove
mov
jns
and
xlat
stos
cmp
test
(bad)
mov
mov
out
add
dec
cdq
aad
push
in
and
(bad)
(bad)
jmp
das
mov
loop
sub
mov
ret
pop
(bad)
pop
adc
lea
test
sbb
movs
movs
dec
dec
fild
push
das
test
imul
inc
mov
or
das
clc
cmp
neg
add
scas
imul
inc
call
es
(bad)
call
pop
mov
jne
push
imul
aam
stos
cmp
sbb
(bad)
mov
test
(bad)
call
adc
mul
pop
jb
into
or
shr
imul
or
cmps
loop
adc
fldl2t
or
fwait
inc
ret
(bad)
mov
(bad)
fisub
adc
(bad)
(bad)
push
mov
jp
scas
jmp
enter
fdivr
shr
icebp
xor
ret
das
pop
movs
(bad)
jmp
aaa
aaa
ja
(bad)
mov
mov
in
xchg
fdivp
push
es
pop
imul
(bad)
out
mov
mov
ret
mov
fucomi
psubusw
inc
xor
sub
pusha
xor
scas
aas
sub
pop
mov
push
call
(bad)
or
add
pushf
xor
xor
arpl
sub
push
and
mov
bound
(bad)
fisttp
stos
mov
add
scas
fidivr
(bad)
push
mov
out
mov
sub
mov
cmp
sub
std
(bad)
(bad)
jmp
fld
pop
sub
mov
outs
add
xchg
dec
cmps
cwde
rcl
int3
jno
mov
and
nop
out
xor
sub
sub
mov
repz
jmp
lods
inc
lds
sub
retf
or
(bad)
jmp
jmp
jb
(bad)
add
pop
ret
jmp
call
arpl
mov
retf
sbb
das
sub
jo
mov
push
mov
jo
jb
xor
retf
stos
mov
call
neg
out
das
nop
adc
je
inc
xchg
std
mov
nop
call
popfw
and
cs
jl
push
dec
push
jmp
das
lods
cli
sbb
and
inc
in
adc
shr
imul
mov
fisubr
fcos
(bad)
jmp
in
repnz
jno
mov
pop
mov
mov
inc
jle
fcmove
sub
icebp
xchg
stos
dec
je
sub
xor
xchg
mov
sbb
sub
movs
sub
cmp
ja
xchg
iret
test
sub
fwait
sub
in
mov
dec
mov
aad
imul
inc
stos
sub
pop
(bad)
push
xchg
sbb
pop
mov
call
call
(bad)
(bad)
inc
mov
mov
test
push
xchg
lock
imul
retf
in
retf
hlt
(bad)
(bad)
jmp
mov
jne
lods
cmp
mov
(bad)
out
ds
in
push
(bad)
mov
cmp
test
jp
lds
not
clc
fs
add
(bad)
(bad)
call
cli
jb
xor
add
loop
(bad)
loopne
call
mov
dec
(bad)
(bad)
pop
fwait
clc
sub
adc
out
fcos
(bad)
jmp
scas
shr
add
sbb
inc
(bad)
cwde
out
push
(bad)
(bad)
jg
mov
(bad)
mov
imul
jmp
rep
mov
mov
rcr
mov
(bad)
(bad)
(bad)
jmp
adc
test
sti
loop
stos
shl
pushf
sti
(bad)
cmp
or
mov
(bad)
out
and
cwde
fiadd
mov
mov
test
(bad)
sti
test
pop
jmp
fisubr
imul
pop
mov
mov
imul
cs
stc
cld
(bad)
call
loop
push
fmul
ret
mov
outs
mov
repz
retf
(bad)
(bad)
(bad)
call
addr16
scas
push
out
mov
push
mov
outs
jp
test
(bad)
(bad)
call
retf
out
hlt
push
xchg
push
in
mov
mov
jo
lahf
add
enter
or
(bad)
fsubr
dec
sub
cwde
aad
(bad)
mov
sbb
jg
fwait
mul
mov
mov
sub
call
mov
cmp
repnz
(bad)
sub
(bad)
(bad)
inc
dec
loope
mov
add
push
jmp
sub
pop
out
sbb
mov
std
inc
std
push
xchg
aas
and
pop
adc
sbb
jae
retf
pop
sbb
mov
(bad)
aaa
cld
std
xchg
sbb
adc
jl
pop
aas
loop
pop
std
dec
mov
mov
jp
ins
adc
sbb
add
pop
loop
cs
jmp
xor
push
scas
sub
push
stos
inc
imul
fcomp
sub
push
mov
unpckhps
mov
mov
pop
(bad)
jmp
fwait
inc
adc
call
in
or
cdq
stos
sbb
scas
bound
cmp
fdivrp
sbb
hlt
sar
mov
mov
adc
scas
out
mov
rcr
outs
dec
sub
out
es
repnz
stos
js
dec
xor
test
mov
mov
or
fdivr
sub
pusha
mov
jmp
stos
sub
mov
(bad)
(bad)
(bad)
jmp
jmp
mov
movs
fidivr
and
mov
idiv
outs
cmp
mov
mov
fs
cmp
adc
pop
sar
mov
push
dec
pop
sub
and
pop
loop
(bad)
mov
in
call
push
and
jns
mov
lea
cld
stos
mov
mov
inc
sbb
pop
cmp
inc
adc
push
pop
enter
(bad)
(bad)
(bad)
(bad)
mov
mov
fist
outs
mov
mov
push
aaa
out
fcmovbe
stos
sbb
(bad)
(bad)
(bad)
jmp
std
ror
add
inc
loopne
mov
ss
idiv
sub
mov
call
inc
xor
xchg
mov
ret
or
and
loop
lock
inc
jmp
mov
and
arpl
(bad)
inc
call
xchg
popf
sar
test
push
int3
xchg
jno
imul
test
(bad)
dec
imul
push
stos
cmps
shr
sub
lea
adc
(bad)
(bad)
mov
aad
sub
mov
push
test
mov
cmps
add
cmp
push
pusha
jle
sbb
cmp
sti
test
fstp
fwait
push
out
jp
in
stos
xor
mov
dec
cmp
(bad)
jmp
pop
xor
inc
out
push
dec
adc
cmp
pop
out
jg
test
out
outs
outs
fcomip
jmp
cs
outs
xchg
mov
sbb
inc
popa
sbb
or
sub
(bad)
inc
ds
mov
imul
(bad)
(bad)
out
sub
hlt
cmp
scas
call
test
mov
ins
sbb
(bad)
(bad)
(bad)
call
dec
(bad)
neg
mov
push
out
mov
sbb
outs
or
jl
sub
cmps
sub
(bad)
lods
test
xchg
test
pop
loopne
fs
mov
(bad)
das
cli
dec
push
inc
pop
iret
sub
scas
pop
and
imul
jl
loope
dec
mov
(bad)
push
(bad)
std
mov
mov
dec
sub
mov
jg
jmp
and
jge
or
inc
pop
jmp
sbb
adc
imul
mov
cmp
scas
lods
addr16
into
xchg
pop
xchg
shr
out
cli
(bad)
out
ret
inc
rol
sub
fwait
dec
mov
and
add
fucomip
mov
sub
call
inc
push
(bad)
mov
sub
push
(bad)
jg
mov
mov
ins
jmp
jle
xor
add
in
(bad)
(bad)
(bad)
inc
dec
retf
call
jmp
sbb
mov
fidivr
pop
int
mov
ins
daa
mov
xchg
retf
sbb
jmp
add
ret
xchg
rol
jb
push
xor
mov
(bad)
fst
ds
mov
inc
or
push
test
jmp
scas
(bad)
dec
push
fsub
mov
ret
outs
mov
pop
outs
gs
push
(bad)
(bad)
(bad)
(bad)
dec
push
xchg
les
daa
dec
std
ffreep
cwde
bound
fst
jo
xchg
test
xchg
(bad)
popf
push
adc
paddw
(bad)
(bad)
push
loopne
jmp
xchg
sub
xchg
in
scas
sahf
inc
jmp
dec
jo
jmp
jmp
popf
cmps
push
adc
xor
push
jb
jnp
lods
adc
jmp
cdq
stos
sbb
shl
pop
rcl
fmul
(bad)
mov
xchg
shr
aam
cld
(bad)
or
scas
push
xchg
nop
dec
lods
(bad)
pop
hlt
aaa
into
call
dec
loopne
sub
mov
push
(bad)
call
fdivr
xchg
outs
retf
mov
pop
(bad)
mov
movs
mov
sub
(bad)
call
mov
xlat
int3
retf
jbe
into
scas
jle
dec
outs
stos
(bad)
aad
pop
add
jecxz
std
out
add
(bad)
(bad)
call
xchg
jne
jmp
mov
pushf
pop
ja
dec
sbb
popf
jmp
fisttp
lods
push
call
popa
gs
in
in
fld
mov
cmp
inc
lahf
sbb
mov
(bad)
(bad)
call
mov
popf
shl
sub
mov
dec
mov
out
call
jmp
js
mov
xor
(bad)
(bad)
push
jecxz
jp
imul
xchg
call
push
xchg
mov
sbb
(bad)
(bad)
call
mov
ret
fucomp
gs
cmp
ja
xchg
pop
or
dec
dec
mov
(bad)
dec
pusha
iret
mov
repnz
mov
and
jmp
and
ins
pop
inc
(bad)
push
test
into
(bad)
(bad)
(bad)
call
push
add
xchg
xchg
cmp
jmp
mov
iret
push
(bad)
jmp
mov
fistp
retf
xchg
mov
or
mov
mov
sub
mov
sub
(bad)
jg
mov
or
div
add
(bad)
(bad)
(bad)
jmp
and
or
je
or
call
sub
(bad)
inc
in
cmp
pop
cmp
sbb
mov
js
retf
test
loope
bound
dec
movs
cmp
pusha
pusha
(bad)
sahf
pop
mov
or
sysret
mov
gs
jnp
cmp
test
adc
mov
inc
aam
push
cld
jmp
call
jmp
adc
inc
pop
enter
or
mov
sbb
iret
adc
pop
clc
push
shl
mov
sbb
(bad)
call
test
call
cmp
ret
into
mov
out
or
outs
(bad)
mov
push
mov
push
call
sub
push
adc
(bad)
jmp
push
fcmovu
mov
push
outs
jmp
push
iret
ret
mov
sahf
inc
in
mov
test
mov
jg
ins
es
sahf
mov
xchg
mov
mov
pop
loope
cmp
xchg
cwde
pop
popa
sub
call
dec
out
js
mov
scas
ja
fild
lods
mov
xor
jmp
xor
mov
cmps
xchg
xchg
std
aaa
fwait
inc
icebp
mov
add
call
jmp
inc
ret
retf
add
(bad)
dec
cmps
sbb
sub
daa
iret
sbb
sub
rol
mul
aad
mov
aam
mov
adc
inc
dec
call
cmp
dec
cmp
int
lea
jb
cmp
xchg
(bad)
div
xchg
pop
sbb
xchg
cwde
(bad)
fcomip
dec
or
faddp
mov
mov
pop
jmp
clc
in
push
imul
jmp
stos
jb
(bad)
push
jmp
push
lods
adc
or
imul
mov
(bad)
(bad)
jmp
out
or
sub
jae
bound
sub
jns
mov
leave
mov
clc
pop
adc
call
mov
mov
call
(bad)
push
sbb
adc
mov
clc
push
xchg
mov
mov
(bad)
call
loop
dec
cmps
push
xchg
mov
jb
fisubr
cmp
gs
dec
dec
out
sub
sbb
out
push
outs
cmps
fdiv
adc
(bad)
(bad)
inc
imul
ins
es
and
xchg
push
(bad)
(bad)
inc
hlt
into
clc
(bad)
lahf
imul
das
adc
jg
aas
and
cwde
test
mov
pop
push
cld
mov
icebp
jg
movs
or
lock
mov
test
jmp
std
and
mov
mov
adc
sbb
sahf
and
(bad)
(bad)
inc
and
cmp
pop
xchg
pop
or
aam
outs
inc
sub
dec
outs
jne
loope
test
jmp
into
imul
xchg
mov
(bad)
(bad)
mov
jo
or
sub
pop
imul
and
jmp
adc
dec
jns
mov
jae
dec
pop
mov
(bad)
(bad)
fistp
leave
cdq
sub
and
jmp
add
sub
dec
imul
pop
inc
mov
push
dec
aam
sbb
iret
dec
das
call
shr
push
xchg
scas
xchg
inc
push
(bad)
call
dec
loopne
and
call
popf
outs
popa
sbb
inc
(bad)
inc
daa
push
retf
pop
mov
jl
sub
lea
out
(bad)
(bad)
(bad)
cmp
call
mov
mov
inc
out
ins
dec
out
xchg
fisubr
movs
mov
loope
ds
(bad)
mov
test
ins
inc
sub
(bad)
(bad)
(bad)
(bad)
cmp
call
mov
sub
iret
dec
mov
retf
fwait
aad
mov
pushf
or
stos
dec
and
scas
mov
xor
bswap
mov
or
dec
sahf
leave
pop
xchg
push
ins
aaa
mov
(bad)
jmp
pop
in
(bad)
or
mov
stos
xor
mov
call
mov
dec
stos
pop
xor
cmp
mov
mov
jle
cs
inc
lods
xchg
xor
inc
(bad)
(bad)
(bad)
call
pop
mov
mov
fcomip
sub
lahf
sbb
rcr
xlat
stos
ss
(bad)
(bad)
call
pop
inc
mov
scas
loop
xchg
mov
rcr
ins
das
ss
fild
outs
clc
(bad)
(bad)
out
scas
mov
dec
pop
mov
jb
call
sbb
mov
cld
(bad)
xchg
xchg
jg
(bad)
call
scas
scas
push
pop
xor
dec
stc
ret
adc
stos
dec
xor
pop
or
add
(bad)
cwde
jo
test
sbb
js
(bad)
(bad)
(bad)
call
lahf
stc
dec
pop
mov
stc
inc
(bad)
or
jmp
xor
add
xor
cs
push
call
or
add
sbb
mov
movs
jle
test
sub
(bad)
(bad)
(bad)
inc
jnp
jmp
call
cmps
and
jle
std
push
lods
jb
outs
xlat
(bad)
(bad)
(bad)
jmp
jg
jae
not
pop
das
mov
sbb
gs
mov
sub
adc
or
inc
xor
into
sub
or
adc
mov
and
je
(bad)
(bad)
(bad)
(bad)
jnp
movs
xchg
call
or
cmp
cmc
cmp
fimul
ins
call
inc
dec
mov
sbb
add
mov
or
jmp
mov
(bad)
jmp
mov
in
adc
jb
push
(bad)
pop
(bad)
pop
pop
rol
clc
sbb
std
(bad)
inc
fldl2e
dec
sub
mov
fild
stos
jmp
xor
jmp
sbb
cmps
inc
call
retf
cli
xlat
int3
push
mov
cmps
push
mov
scas
inc
dec
lods
out
cli
call
test
inc
dec
cmp
sbb
inc
(bad)
(bad)
call
(bad)
ficomp
push
lock
dec
data16
sbb
or
rcl
(bad)
(bad)
jmp
inc
sbb
or
retf
mov
inc
imul
jmp
call
(bad)
out
dec
cmp
and
mov
inc
cmps
jmp
mov
pop
es
(bad)
(bad)
(bad)
jmp
jg
adc
cs
movs
sub
ins
cs
nop
cmp
add
aaa
cld
dec
cmp
add
and
pop
jmp
sbb
jnp
push
or
mov
jle
inc
call
(bad)
(bad)
(bad)
(bad)
jmp
cmps
int
inc
std
arpl
lods
jnp
out
(bad)
(bad)
int3
sbb
movs
dec
int
(bad)
(bad)
call
sub
mul
cmc
push
ficom
or
or
sub
ins
push
adc
inc
cmp
(bad)
(bad)
jmp
push
lds
or
retf
sub
outs
nop
enter
(bad)
(bad)
call
fsubr
movs
cmp
xor
xchg
(bad)
(bad)
(bad)
dec
sbb
ror
mov
xor
xchg
cmps
sub
add
jg
movs
mov
iret
dec
lahf
int3
and
jg
jno
adc
(bad)
je
into
push
jg
(bad)
(bad)
mov
scas
sub
sub
adc
out
mov
jb
cli
sub
rcr
(bad)
cmp
iret
(bad)
test
out
pop
pop
xchg
ret
(bad)
(bad)
dec
or
inc
mov
iret
and
mov
call
and
cmc
shl
in
shl
out
cmc
mov
dec
or
(bad)
(bad)
push
and
mov
push
aad
jmp
ja
or
scas
sub
mov
push
(bad)
(bad)
(bad)
jmp
lock
pop
adc
or
mov
pop
dec
loope
mov
mov
(bad)
(bad)
(bad)
inc
mov
aad
add
mov
inc
mov
adc
lods
call
push
neg
push
inc
in
xor
mov
gs
mov
mov
push
sbb
(bad)
(bad)
dec
mov
xor
adc
retf
mov
mov
mov
sub
imul
sub
scas
jmp
lods
cmp
add
(bad)
jmp
test
jo
sbb
test
sub
pop
dec
out
and
lods
outs
cdq
movs
je
(bad)
(bad)
jmp
lods
ret
shr
pop
jp
imul
rol
cld
sub
and
cld
(bad)
jmp
(bad)
scas
cdq
xor
(bad)
retf
inc
sub
mov
ins
inc
push
(bad)
(bad)
(bad)
(bad)
stc
je
daa
imul
fdiv
mov
sub
outs
ins
adc
inc
mov
(bad)
jg
mov
fidivr
sub
adc
cmp
and
and
(bad)
(bad)
jmp
mov
and
mov
sbb
dec
jmp
popf
dec
pop
leave
lea
and
(bad)
(bad)
(bad)
inc
aaa
or
sbb
outs
and
cs
inc
dec
dec
pusha
push
into
int3
pop
loope
or
(bad)
test
popa
enter
adc
xchg
(bad)
(bad)
push
fsub
push
ins
push
xchg
sub
fbld
out
imul
scas
xchg
out
cmps
push
(bad)
(bad)
(bad)
jmp
rol
out
outs
sub
lods
popf
stos
fnstsw
addr16
iret
loope
cmp
dec
jl
lods
mov
movs
lods
sub
sub
(bad)
out
ins
stos
add
inc
xchg
(bad)
fs
and
(bad)
dec
inc
mov
push
push
fild
and
mov
push
adc
xor
lods
add
xor
or
pop
adc
(bad)
mov
push
(bad)
(bad)
inc
fs
xor
iret
outs
aad
mov
adc
in
js
(bad)
jg
mov
dec
lods
sub
dec
xor
mov
lods
retf
(bad)
dec
pop
dec
sbb
test
iret
lods
(bad)
adc
cs
imul
or
inc
(bad)
(bad)
call
stos
js
jb
mov
pop
enter
leave
test
push
jge
fbstp
xchg
jmp
pop
std
mov
cmps
adc
outs
test
fimul
inc
ins
lock
jmp
lock
(bad)
call
adc
imul
into
sub
into
pop
mov
xor
hlt
pop
lods
inc
(bad)
int3
or
in
nop
mov
mov
jo
mov
or
(bad)
in
pop
jb
lods
scas
mov
adc
cmps
ficomp
cmp
jmp
(bad)
mov
sbb
and
aaa
test
sbb
dec
and
(bad)
fcomip
jmp
aam
dec
sub
inc
xchg
in
jp
and
loopne
call
add
jg
(bad)
jmp
lahf
stos
(bad)
loope
mov
retf
pop
mov
ret
xor
push
ja
(bad)
dec
jo
add
push
jo
xor
cmps
add
mov
(bad)
(bad)
call
adc
xor
and
(bad)
aas
xchg
das
lods
call
sub
into
jmp
jmp
push
into
cmps
cmp
inc
mov
stos
mov
adc
outs
xor
js
(bad)
mov
aam
imul
push
push
or
test
(bad)
(bad)
push
pusha
and
into
scas
shl
xor
loop
push
aad
scas
call
das
cli
mov
repz
cmc
sbb
(bad)
(bad)
(bad)
sti
das
push
push
test
sbb
or
push
jmp
lods
daa
es
data16
in
pop
loopne
call
in
and
sub
fstp
hlt
movs
sub
push
cld
sub
imul
inc
xchg
inc
cmp
xor
(bad)
(bad)
(bad)
jmp
xor
mov
scas
jmp
fst
xor
mov
cdq
js
xchg
pop
xor
(bad)
dec
dec
and
scas
push
shr
stos
in
dec
add
mov
shl
test
pop
inc
in
scas
mov
pop
pop
std
aaa
adc
repnz
jno
stc
(bad)
(bad)
(bad)
call
call
mov
add
ret
stos
fld
aad
fwait
pop
test
xchg
stos
xchg
(bad)
(bad)
jmp
or
mov
push
add
fistp
push
rcr
in
mov
sub
pop
xchg
xchg
retf
pop
and
imul
(bad)
(bad)
std
lahf
and
sub
jb
stos
scas
mov
imul
adc
(bad)
pop
hlt
(bad)
dec
stc
sub
mov
xchg
sahf
adc
xchg
add
imul
std
out
mov
mov
test
leave
movs
sti
test
cdq
call
push
push
or
lahf
out
add
xchg
fistp
out
xchg
ficom
push
sbb
out
mov
sbb
in
scas
mov
fbld
inc
retf
sub
jmp
dec
jmp
jmp
shr
mov
or
sub
out
jo
(bad)
(bad)
jg
(bad)
mov
pop
push
mov
ss
mov
push
dec
cmps
in
push
out
test
and
inc
pop
out
mov
push
test
test
(bad)
call
xlat
fisttp
jl
repnz
jno
cdq
test
outs
xor
ret
fild
lock
loop
add
(bad)
imul
into
cmp
out
mov
mov
and
iret
sar
xchg
lahf
fmulp
(bad)
(bad)
cmp
sahf
pop
dec
push
cmps
mov
imul
inc
jmp
and
ins
xchg
mov
jne
cmps
scas
sub
jp
loope
(bad)
in
loopne
je
and
xchg
pop
fs
dec
or
sub
lea
xor
movs
call
add
stos
mov
(bad)
(bad)
jmp
inc
scas
(bad)
push
mov
mov
leave
std
mov
inc
es
pop
push
push
call
xchg
push
ret
rcr
ss
in
push
inc
inc
(bad)
mov
lods
sub
sub
out
loopne
push
fs
test
mov
dec
push
cdq
sahf
fiadd
dec
call
pop
add
cdq
sub
(bad)
mov
xchg
push
fdivr
push
adc
iret
mov
sbb
(bad)
(bad)
(bad)
push
(bad)
test
sub
sub
fcmove
pop
icebp
call
adc
push
int
shr
scas
loope
cmp
jno
xchg
(bad)
(bad)
(bad)
dec
in
data16
or
sub
cmps
retf
(bad)
jp
sub
add
ins
aaa
out
repnz
movs
out
ret
jg
idiv
(bad)
dec
out
xchg
aad
sbb
xlat
pop
jns
fmul
dec
or
leave
jg
jo
(bad)
call
xor
movs
inc
push
mov
stos
sub
in
dec
clc
inc
mov
hlt
jnp
adc
cli
ficomp
movs
(bad)
mov
pop
sbb
jmp
jnp
ficomp
(bad)
(bad)
call
repnz
jmp
inc
cmp
inc
aad
xchg
imul
aam
pop
test
inc
sub
test
(bad)
ins
icebp
or
mov
cs
ret
cli
js
(bad)
(bad)
(bad)
jmp
imul
or
jo
push
imul
in
outs
push
jbe
jo
(bad)
(bad)
jmp
out
mov
call
xchg
cwde
imul
pop
icebp
(bad)
jmp
dec
and
xor
dec
test
dec
mov
jmp
jne
scas
jmp
add
stos
sahf
scas
xor
xor
jg
cmp
lods
jmp
adc
call
jne
dec
sub
(bad)
(bad)
(bad)
dec
dec
loopne
call
stos
pop
(bad)
mov
out
ds
std
cmp
add
in
sti
(bad)
(bad)
mov
test
jmp
mov
inc
out
scas
jb
or
mov
(bad)
(bad)
(bad)
mov
stc
daa
dec
mov
test
dec
push
js
mov
xchg
clc
jg
sub
or
dec
cmp
stc
js
jmp
ficomp
mov
(bad)
sbb
scas
add
ds
or
retf
fsubp
push
lea
adc
jo
mov
cmp
call
mov
pop
call
cmp
and
mov
(bad)
push
jmp
jno
fwait
sub
lods
cmp
push
pop
mov
and
out
test
jmp
cld
scas
iret
aam
mov
inc
and
(bad)
fcmove
arpl
cmp
retf
sti
mov
mov
jno
addr16
(bad)
call
call
sbb
movs
adc
add
inc
jmp
mov
loopne
inc
mov
mov
cmp
push
mov
retf
fimul
push
mov
cld
add
scas
jle
mov
mov
push
in
(bad)
(bad)
(bad)
dec
in
xor
int
inc
dec
retf
scas
popf
out
adc
cdq
xchg
imul
(bad)
(bad)
(bad)
cmp
push
dec
jp
push
jmp
lds
dec
and
sub
mov
xlat
pop
(bad)
(bad)
(bad)
jmp
pop
repz
fdivr
lods
dec
mov
mov
dec
stos
fild
retf
aaa
add
into
and
xchg
xchg
lods
pop
jl
cli
pusha
mov
pop
scas
or
test
jg
icebp
adc
and
cmp
lds
popf
cmp
mov
add
pop
loopne
jg
(bad)
sti
and
xchg
mov
push
dec
mov
add
mov
jle
push
(bad)
xchg
add
inc
or
shl
test
and
mov
jmp
(bad)
(bad)
std
pushw
xor
leave
push
sahf
inc
push
sub
add
sub
add
and
add
(bad)
mov
xchg
scas
std
fwait
adc
(bad)
mov
push
test
(bad)
(bad)
(bad)
inc
sub
lods
xor
mov
jp
popf
fist
retf
(bad)
jmp
or
call
je
out
xor
es
inc
push
(bad)
jmp
iret
jmp
push
xor
jmp
mov
and
pop
inc
cli
test
pop
(bad)
sub
loope
ins
int
or
pop
nop
imul
mov
pushf
cld
test
jb
stos
xor
cs
sbb
cmps
cmp
sar
jmp
(bad)
(bad)
jmp
shl
out
and
test
iret
sbb
lock
loopne
scas
push
scas
sbb
cmc
outs
test
dec
sub
jmp
pop
mov
cmp
pop
js
push
mov
or
(bad)
(bad)
dec
int3
ss
leave
cmp
loop
mov
movs
fisubr
loopne
mov
sub
inc
into
stos
(bad)
scas
or
fmulp
sub
daa
mov
jb
call
(bad)
call
add
cvttps2pi
adc
push
jno
lods
cwde
test
sbb
cwde
jle
mov
xchg
out
or
sub
enter
push
fwait
cmp
sub
mov
xchg
aaa
out
add
mov
call
xor
popa
retf
sub
shr
ret
in
pop
rcr
rcr
(bad)
(bad)
(bad)
inc
push
in
pushf
aas
shr
push
es
sbb
icebp
jbe
aam
das
or
sbb
retf
xor
pop
push
sub
(bad)
(bad)
dec
inc
push
call
int
dec
or
mov
add
or
lock
jmp
shr
mov
inc
out
mov
jbe
ret
scas
in
(bad)
(bad)
(bad)
(bad)
mov
and
or
push
aad
mov
int3
in
dec
je
add
add
call
and
or
push
mov
push
int
sbb
lea
and
lock
jmp
mov
jl
dec
lea
aam
xor
call
inc
mov
aaa
cld
aas
outs
pop
mov
mov
dec
ss
push
mov
retf
lods
fwait
dec
cmp
mov
push
dec
add
sahf
repnz
and
in
cmc
movs
(bad)
fwait
loop
dec
cmps
ja
cli
and
xor
(bad)
(bad)
jmp
daa
stos
call
jp
mov
mov
xchg
stos
and
mov
jg
(bad)
push
mov
dec
mov
lods
sbb
mul
dec
loop
(bad)
out
pop
ins
push
retf
stc
(bad)
push
(bad)
mov
cmps
jp
(bad)
je
sbb
push
std
or
ror
test
idiv
arpl
inc
nop
das
retf
das
push
add
retf
in
jno
or
pop
test
(bad)
(bad)
call
xor
test
test
repnz
(bad)
push
cwde
xchg
adc
sub
dec
pop
icebp
call
and
mov
mov
retf
inc
nop
sub
scas
ss
mov
and
(bad)
(bad)
jmp
imul
and
adc
adc
mov
or
cmp
xor
imul
push
daa
(bad)
(bad)
(bad)
call
(bad)
mov
outs
repnz
sbb
jbe
jp
stos
or
dec
fucomi
fcos
(bad)
(bad)
call
sbb
pop
or
test
(bad)
mov
aam
xlat
mov
leave
cmps
in
cld
xchg
fistp
xor
mov
div
inc
mov
outs
loopne
mov
cmp
retf
pop
inc
lds
(bad)
(bad)
jmp
mov
or
pop
enter
add
add
mov
ja
aad
das
enter
pop
push
lds
ret
jg
das
pop
scas
mov
or
mov
inc
das
xchg
cmps
clc
pop
gs
jecxz
xchg
(bad)
(bad)
(bad)
in
cwde
jo
jmp
bound
scas
stos
pop
ins
xchg
sub
mov
rol
(bad)
(bad)
jmp
inc
repz
xchg
mov
mov
adc
mov
es
jmp
stc
xchg
or
clc
out
push
mov
ds
out
sub
push
(bad)
sbb
push
fisub
adc
out
mov
xor
fidiv
std
jecxz
into
mov
aaa
sub
jne
mov
push
inc
mov
cld
jmp
into
cmp
mov
in
fadd
call
mov
xor
pop
loop
add
push
lods
call
jmp
pop
loop
xor
jns
pop
shr
xchg
mov
xchg
(bad)
fisttp
xchg
inc
iret
pop
mov
sbb
mov
mov
call
fs
sbb
mov
popa
movs
or
add
(bad)
(bad)
jmp
imul
int
sbb
jge
ficomp
push
pusha
push
jmp
enter
(bad)
jmp
mov
scas
dec
pop
out
jae
xor
and
gs
retf
(bad)
jg
(bad)
xchg
push
out
sbb
lods
cmp
cmp
sub
(bad)
dec
repz
add
es
iret
(bad)
cdq
mov
lods
and
mov
std
fisub
mov
xor
gs
mov
or
fwait
cli
push
cld
test
movq
sbb
mov
and
outs
cmp
adc
mov
cli
mov
cld
leave
aaa
dec
sbb
jecxz
cli
push
and
dec
jmp
mov
jmp
jmp
jmp
xchg
mov
das
sub
shl
xchg
sbb
es
retf
mov
add
pop
mov
stos
(bad)
call
mov
or
dec
pop
or
xchg
test
push
(bad)
(bad)
(bad)
push
mov
into
inc
aam
mov
pop
imul
das
scas
out
call
call
push
out
scas
mov
pop
iret
cmps
jnp
pop
ja
push
(bad)
(bad)
jmp
scas
sub
call
xchg
push
ror
cmps
sbb
dec
test
jne
aaa
aam
imul
push
inc
jb
xor
inc
loop
pop
call
call
mov
xor
out
mov
into
outs
dec
daa
dec
nop
and
leave
and
and
push
cld
mov
sbb
and
shl
or
cdq
ins
loop
jmp
push
inc
jmp
retf
push
pop
jmp
enter
pop
and
pushf
mov
dec
mov
xchg
pop
jbe
sub
or
cmp
(bad)
(bad)
dec
pop
mov
mov
retf
outs
lock
(bad)
or
dec
mov
sar
adc
sahf
jmp
(bad)
jmp
dec
cli
dec
mov
pop
adc
push
sub
lock
(bad)
(bad)
mov
test
cld
mov
iret
xor
pop
cmp
and
mov
jg
inc
jbe
jb
sbb
pop
mov
add
jno
cmps
(bad)
(bad)
jg
mov
jl
sub
pop
mov
xchg
or
dec
popf
cmps
sub
jbe
jmp
mov
(bad)
mov
out
imul
jle
(bad)
(bad)
fild
push
loopne
pop
dec
jl
push
xchg
dec
ins
mov
inc
daa
sub
pop
jl
dec
(bad)
(bad)
(bad)
dec
hlt
jge
pop
cli
xor
ds
loope
je
test
push
mov
jmp
push
push
dec
fnsave
mov
das
(bad)
rol
pop
jmp
pop
mov
jb
lock
(bad)
(bad)
(bad)
jmp
mov
cwde
push
pop
push
in
mov
mov
sub
iret
push
inc
mov
(bad)
inc
enter
mov
ret
cmps
stos
pop
sub
nop
cdq
jo
call
(bad)
jmp
daa
and
repz
pop
imul
pop
xchg
add
retf
(bad)
(bad)
call
imul
jmp
fbld
xchg
lea
jge
(bad)
idiv
(bad)
(bad)
mov
and
jle
cmp
lds
mov
es
lds
stos
call
cmp
out
jl
jmp
retf
push
inc
(bad)
(bad)
(bad)
(bad)
inc
call
xchg
loop
xchg
push
sar
inc
cld
stos
jmp
cli
leave
cmps
(bad)
mov
fild
sub
and
jle
sbb
sub
dec
(bad)
outs
fcomp
and
pop
dec
inc
mov
mov
(bad)
sti
data16
jmp
fcmovb
leave
es
sub
jl
sub
push
xor
sub
bound
neg
aaa
jnp
cmps
scas
and
sub
sub
ss
cmps
arpl
mov
sub
test
and
inc
sbb
cs
ds
das
mov
jmp
push
movs
popf
inc
lods
and
data16
out
fnsave
lods
pop
and
sub
lods
dec
push
xchg
sub
lea
std
lods
and
sub
mov
sar
and
jnp
lods
jae
(bad)
and
das
sti
mov
jmp
call
push
aas
addr16
jb
stos
xor
lods
or
(bad)
stos
xor
mov
sub
sub
test
imul
pop
pop
pop
(bad)
(bad)
(bad)
inc
loope
js
xchg
in
mov
jge
inc
xor
stos
(bad)
cs
or
(bad)
push
int
sbb
xlat
dec
adc
imul
repnz
(bad)
dec
pusha
sbb
cmp
pop
fwait
gs
adc
mov
sbb
mov
or
js
push
fldenv
pop
jns
pop
imul
cmc
movs
jmp
scas
ror
nop
test
enter
mov
sub
adc
sbb
mov
mov
jmp
push
xlat
add
fisub
mov
add
fnsave
in
(bad)
(bad)
jmp
cmp
imul
add
push
mov
(bad)
call
push
movs
int
dec
adc
repnz
xchg
adc
fadd
pop
xchg
(bad)
(bad)
call
sbb
repnz
sub
leave
cmp
cmp
jmp
(bad)
(bad)
mov
cmp
jb
xchg
jmp
int3
pusha
xchg
test
ins
dec
adc
pop
stos
(bad)
(bad)
push
mov
int3
fs
push
(bad)
mov
adc
retf
stos
test
test
(bad)
(bad)
(bad)
(bad)
jmp
adc
push
daa
ror
out
xchg
add
fbstp
xchg
(bad)
(bad)
mov
push
push
fistp
movs
xchg
mov
fnstcw
lods
movs
and
sub
data16
aad
sbb
sub
retf
(bad)
dec
pop
dec
push
push
mov
xchg
call
cmp
mov
adc
sub
loope
pusha
repnz
out
pop
call
mov
and
dec
xor
adc
(bad)
(bad)
(bad)
dec
stos
js
add
inc
ja
cmc
nop
loop
inc
es
mov
movs
imul
inc
push
adc
in
mov
(bad)
ins
out
push
mov
retf
sub
jg
(bad)
mov
jp
mov
ret
ficomp
push
lods
mov
stos
xchg
jb
cmp
data16
(bad)
(bad)
jmp
ja
add
rol
ja
mov
inc
mov
sbb
fidivr
sbb
add
call
mov
(bad)
mov
lods
(bad)
add
nop
cmp
(bad)
ja
aaa
das
jns
(bad)
ds
retf
dec
ins
or
inc
mov
(bad)
push
arpl
jg
imul
lods
call
(bad)
sti
mov
xchg
xchg
adc
xchg
add
div
xlat
(bad)
(bad)
call
loop
into
mov
fild
stos
dec
xchg
jp
lock
jg
sub
add
adc
sub
add
pusha
(bad)
(bad)
out
xchg
mov
pop
movs
pop
out
sub
add
fisttp
cmp
sbb
or
pop
add
retf
(bad)
(bad)
(bad)
(bad)
jns
leave
sbb
stc
retf
jmp
mov
add
sub
(bad)
mov
add
or
sub
(bad)
push
or
push
int
in
inc
std
mov
dec
(bad)
pop
jmp
(bad)
ins
and
inc
sbb
test
and
or
sub
(bad)
(bad)
inc
mov
and
lods
and
or
fmul
ret
pop
or
(bad)
(bad)
(bad)
in
outs
pop
xchg
mov
mov
out
inc
out
daa
mov
inc
sahf
mov
iret
aaa
std
xchg
shl
pop
lahf
or
adc
pop
in
dec
(bad)
(bad)
aas
shr
jg
outs
ins
dec
inc
pop
lea
test
xchg
sub
push
aam
hlt
xchg
mov
stos
push
xchg
pop
(bad)
push
cmp
ja
test
push
sub
dec
and
push
test
dec
mov
in
fldenv
cmc
popa
aad
lds
lock
sahf
cs
add
ja
scas
xlat
add
mov
retf
idiv
pop
icebp
or
mov
xchg
dec
xchg
in
enter
add
jg
arpl
pop
lods
push
enter
ss
out
cli
jbe
push
dec
inc
test
and
push
push
and
inc
jecxz
pop
cld
(bad)
call
inc
jmp
(bad)
jae
and
xor
inc
add
push
faddp
push
and
(bad)
(bad)
inc
or
push
xchg
lea
and
or
ret
mov
idiv
(bad)
(bad)
out
add
adc
inc
or
jo
pusha
cmps
ror
lock
mov
inc
cmp
(bad)
call
xchg
shl
or
movs
adc
xor
or
push
ins
push
inc
inc
fisubr
mov
xchg
mov
call
push
in
sbb
sub
xor
mov
cvttps2pi
push
or
scas
xor
jmp
je
inc
sbb
into
sub
(bad)
adc
scas
inc
push
cmp
push
mov
test
sets
(bad)
(bad)
stc
dec
mov
call
or
and
mov
xor
(bad)
(bad)
(bad)
jmp
xor
push
and
sub
ds
retf
dec
push
mov
xor
(bad)
(bad)
call
pop
push
sub
dec
pop
push
xor
aam
repnz
mov
in
mov
fwait
(bad)
(bad)
dec
pop
jae
lahf
cmps
cs
sbb
fadd
aaa
mov
pop
faddp
arpl
pop
xchg
pop
scas
mov
mov
and
mov
mov
adc
les
pop
retf
ins
mov
icebp
nop
sub
mul
retf
mov
out
jmp
xchg
sbb
call
aad
sbb
(bad)
jmp
out
ret
dec
or
icebp
pop
scas
shl
stos
jb
push
test
lods
push
adc
std
add
test
(bad)
jmp
popa
dec
test
or
dec
push
mov
dec
invd
pop
mov
jmp
sub
cdq
add
push
or
lock
mov
sahf
(bad)
fldcw
das
mov
jb
mov
adc
ret
loop
sub
mov
mov
pop
je
fwait
(bad)
(bad)
mov
mov
retf
in
xchg
lods
retf
mov
(bad)
jmp
(bad)
fisttp
mov
outs
cwde
adc
push
cmps
jne
adc
adc
push
xor
call
(bad)
fild
cdq
pusha
lahf
lods
cmps
xchg
shl
(bad)
or
cwde
push
popf
scas
hlt
sbb
mov
push
movs
iret
lahf
or
jne
fwait
test
and
fisubr
cmps
ins
data16
(bad)
(bad)
push
loopne
shl
mov
retf
pop
(bad)
cdq
xchg
in
in
add
mov
inc
and
cmp
and
into
add
(bad)
call
xchg
fcomip
mov
in
xlat
(bad)
stos
ficomp
arpl
cmp
cmp
pop
or
adc
add
fwait
jg
adc
ins
outs
stos
inc
and
mov
(bad)
(bad)
(bad)
jmp
mov
bound
mov
into
jle
mov
dec
mov
ja
sub
(bad)
(bad)
call
je
sub
scas
movs
xchg
repz
std
mov
inc
cmps
cdq
ret
iret
scas
sbb
dec
xchg
(bad)
(bad)
jmp
data16
fcmovu
xlat
mov
imul
jmp
fistp
mov
ret
lahf
out
imul
mov
(bad)
fcomip
fist
arpl
(bad)
enter
or
cmc
call
(bad)
push
add
je
pusha
ins
mov
outs
clc
pop
leave
stc
test
scas
push
shl
(bad)
push
cmps
mov
rcl
cmps
shl
add
cmp
or
call
pop
mov
loop
push
cld
(bad)
call
push
or
(bad)
(bad)
pop
mov
movs
xor
push
ja
adc
mov
dec
lock
cmp
mov
adc
scas
call
sub
xlat
mov
(bad)
(bad)
(bad)
dec
enter
stos
pop
ins
adc
iret
mov
call
daa
adc
inc
sbb
(bad)
(bad)
dec
mov
gs
xchg
sbb
push
sub
add
pop
fisttp
xchg
push
jb
jno
je
(bad)
(bad)
jmp
jns
loope
int
sub
dec
cmps
or
shr
xor
ins
mov
jmp
mov
and
cmps
test
out
or
sar
(bad)
call
sub
mov
movs
dec
outs
lods
mov
push
ds
ror
inc
idiv
lods
and
je
mov
mov
(bad)
scas
(bad)
call
cmp
loope
cmp
lods
or
sbb
xchg
ins
dec
mov
mov
or
(bad)
dec
stos
(bad)
mov
mov
push
inc
mov
cmp
jg
cli
mov
sar
push
inc
push
xchg
mov
dec
ins
dec
cmp
mov
(bad)
jmp
jle
push
stos
into
push
dec
cdq
(bad)
cdq
xchg
ja
xlat
pop
mov
retf
push
movs
pop
(bad)
push
push
push
push
mov
cmp
shr
movs
std
(bad)
(bad)
call
xchg
sbb
cmp
int
(bad)
xchg
movs
jnp
and
dec
call
call
inc
pop
(bad)
sbb
sti
scas
arpl
outs
push
sbb
sub
jp
(bad)
(bad)
(bad)
push
leave
inc
add
mov
xor
mov
mov
jmp
(bad)
(bad)
call
ja
push
mov
(bad)
fdiv
sbb
sub
test
hlt
hlt
cmp
(bad)
jg
inc
inc
push
pop
xchg
std
jmp
sub
mov
dec
fbld
(bad)
(bad)
(bad)
mov
xchg
daa
sub
out
sub
fmul
ret
leave
out
mov
fdiv
out
xchg
jmp
cli
push
int
cmps
add
dec
scas
call
loop
mov
add
(bad)
(bad)
jmp
mov
sahf
xchg
(bad)
loopne
jl
inc
jmp
imul
stos
push
cmp
(bad)
(bad)
(bad)
(bad)
inc
sub
mov
mov
mov
pop
imul
jno
(bad)
es
push
adc
jne
shl
mov
sbb
xchg
daa
cmp
mov
cdq
ins
push
(bad)
sbb
and
(bad)
mov
movs
cmp
dec
fs
lds
xor
shl
test
cmp
adc
dec
dec
loopne
(bad)
mov
rcr
jo
xlat
ss
lahf
das
jg
(bad)
out
adc
fsub
jp
les
xchg
cmp
(bad)
dec
cmp
mov
mov
mov
xor
cmp
out
int3
dec
cs
clc
(bad)
dec
mov
sub
sub
pop
mov
std
xchg
xchg
(bad)
adc
jmp
bound
mov
sahf
mov
sahf
sbb
(bad)
(bad)
(bad)
(bad)
call
aaa
jecxz
in
scas
jmp
and
dec
imul
popa
adc
(bad)
jmp
cmp
inc
xchg
test
das
call
pop
(bad)
jbe
movups
stos
outs
sar
sub
pop
or
inc
lods
aam
push
sub
cmps
or
(bad)
jg
test
add
imul
imul
in
neg
stos
jns
psubsw
jmp
stos
push
mov
stos
mov
addr16
jnp
cld
outs
fisubr
test
jp
fistp
mov
xchg
xor
call
fmul
jb
fistp
jle
daa
mov
ds
aam
or
aam
(bad)
(bad)
(bad)
jle
dec
or
mov
loope
aas
sbb
pop
xlat
shl
xchg
dec
jns
ins
mov
ss
inc
dec
push
fidiv
xchg
xchg
sbb
or
test
mov
sub
(bad)
(bad)
(bad)
(bad)
(bad)
imul
in
mov
cdq
std
cmps
enter
cmp
test
dec
mov
das
cli
call
pop
xor
xor
adc
adc
cli
dec
idiv
(bad)
(bad)
(bad)
js
ins
sub
(bad)
mov
sbb
cmps
aad
out
hlt
(bad)
jbe
into
pop
sbb
ins
out
das
aad
(bad)
jmp
std
pop
cmp
mov
pop
dec
test
cmp
(bad)
(bad)
jg
fnstsw
daa
cmps
pop
mov
xor
mov
dec
bound
ss
rol
repnz
xor
sub
loope
loope
dec
dec
mov
jp
push
inc
lods
mov
cmps
push
std
jle
stos
push
faddp
es
(bad)
(bad)
inc
or
dec
mov
es
loop
mov
xor
inc
jl
ror
push
fild
jmp
daa
xchg
jmp
dec
call
and
cmp
pop
mov
adc
(bad)
fdivr
mov
sbb
das
clc
(bad)
call
iret
inc
jo
inc
add
stos
rcr
imul
movs
dec
(bad)
(bad)
call
xor
(bad)
daa
out
loopne
gs
jmp
cli
jle
out
jmp
push
jbe
scas
bound
mov
loope
jmp
(bad)
jmp
es
leave
movs
dec
sub
mov
or
out
xor
(bad)
mov
mov
lods
mov
outs
adc
mov
pop
fdiv
call
ins
jle
mov
aad
int
cli
test
pusha
mov
and
stos
mov
daa
bound
(bad)
jmp
out
outs
push
mov
in
sbb
cwde
(bad)
fisttp
mov
movs
add
div
aas
sbb
pop
sbb
fbld
out
stos
test
fisttp
jmp
and
mov
mov
(bad)
inc
or
xchg
mov
or
outs
jmp
pop
lock
push
pop
ins
mov
std
and
sub
gs
dec
(bad)
imul
mov
mov
ins
and
jl
test
xor
or
xchg
add
add
push
icebp
jge
lock
push
jle
adc
jmp
cmp
ins
data16
jmp
sahf
xchg
popa
daa
push
push
or
mov
gs
scas
std
and
(bad)
(bad)
(bad)
jmp
sub
jmp
call
jmp
push
rol
adc
or
jnp
(bad)
call
(bad)
fmul
(bad)
outs
stc
pop
inc
cmp
fisubr
mov
int
dec
cmc
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
mov
scas
int
adc
inc
mov
xor
mov
inc
pop
jmp
(bad)
dec
lods
and
add
imul
inc
mov
or
das
clc
call
jge
mov
push
mov
in
into
add
loope
xchg
(bad)
(bad)
(bad)
dec
pusha
mov
dec
pop
cld
in
pop
test
mov
mov
pmullw
(bad)
(bad)
jmp
mov
push
in
rol
scas
fs
mov
adc
cmp
retf
(bad)
ins
adc
adc
loope
lahf
adc
lods
push
dec
sbb
pushf
add
movs
push
xchg
lods
pusha
jle
idiv
(bad)
(bad)
(bad)
cmp
retf
lds
and
lods
sub
jmp
xlat
adc
push
(bad)
(bad)
(bad)
jmp
sub
scas
lods
ins
push
daa
or
(bad)
mov
mov
mov
in
fadd
mov
xchg
inc
jnp
sub
mov
pop
push
(bad)
(bad)
es
jge
call
and
stos
scas
inc
adc
mov
xchg
dec
movs
or
out
mov
inc
xchg
sahf
pusha
lods
mov
mov
mov
(bad)
(bad)
call
fadd
pop
js
in
mov
std
and
ss
sub
jb
test
icebp
scas
inc
cs
sar
mov
jl
xlat
lods
sbb
or
leave
(bad)
(bad)
call
and
push
cmp
pop
je
mov
dec
in
std
into
pop
out
sub
retf
xchg
or
lods
repnz
jmp
dec
push
imul
mov
scas
mov
xchg
push
aaa
(bad)
mov
cmps
sbb
push
mov
test
sbb
ins
enter
xchg
enter
(bad)
pop
pop
jl
xor
sahf
daa
jns
cmp
xchg
(bad)
cmp
mov
mov
cmp
inc
(bad)
fisttp
ja
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
js
mov
in
bound
dec
pop
push
cmps
inc
sub
and
push
push
and
(bad)
(bad)
call
mov
aad
mov
mov
jb
and
push
cmps
jmp
ja
call
xor
jmp
sbb
or
cmp
xor
cmp
mov
(bad)
(bad)
jmp
retf
push
jae
dec
cmp
adc
aas
cmp
iret
push
and
jae
xor
jmp
popf
cmp
aaa
mov
sub
out
mov
push
pop
scas
dec
cmp
call
jmp
dec
es
push
jb
ror
inc
add
jae
mov
and
mov
xchg
xchg
fld
mov
(bad)
jg
mov
shl
fisttp
xor
clc
test
pop
cli
(bad)
jmp
mov
jle
mov
pop
repz
(bad)
(bad)
(bad)
call
xchg
inc
dec
lahf
repnz
xchg
adc
jmp
xor
cmp
bound
mov
data16
ret
and
add
dec
fld
mov
xchg
out
(bad)
jmp
or
jmp
pop
inc
jmp
fucomip
push
pop
enter
fnstcw
call
mov
(bad)
(bad)
mov
std
nop
call
movs
and
pop
scas
mov
stos
jp
or
(bad)
(bad)
jmp
stos
retf
fild
adc
stos
mov
sti
fisttp
fmul
int3
outs
mov
cmps
pop
(bad)
jmp
jl
pop
(bad)
(bad)
in
mov
xchg
in
xchg
scas
inc
dec
cli
(bad)
fcomip
call
lahf
mov
jecxz
lods
loope
(bad)
xor
pushf
lods
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jns
popf
sub
mov
in
lods
imul
cli
mov
lock
jp
jge
xchg
std
(bad)
(bad)
(bad)
(bad)
mov
fcmove
loopne
popf
daa
lahf
push
movs
stos
call
dec
loope
adc
xor
sar
(bad)
dec
in
les
push
sbb
sbb
adc
das
bound
pop
test
lahf
mov
(bad)
dec
into
push
sbb
jecxz
icebp
movs
ins
out
jae
ja
jg
std
or
cmps
dec
pop
std
(bad)
(bad)
jmp
rcr
addr16
lea
into
dec
mov
mov
xor
jle
(bad)
(bad)
(bad)
(bad)
jmp
mov
inc
mov
popa
sub
aas
sub
mov
fscale
jmp
jb
call
cld
dec
js
mov
retf
test
dec
xor
jnp
lods
pop
cmc
jmp
ins
pushf
stos
fld
data16
inc
lods
repnz
(bad)
(bad)
fistp
mov
inc
jb
pop
mov
bound
lock
rcl
jg
cmp
cld
cli
xchg
mov
cmp
sbb
xor
ds
jg
call
ret
sahf
loop
push
cmp
mov
mov
jmp
rcr
sbb
test
(bad)
fcomp
and
mov
adc
mov
sti
add
(bad)
xchg
sub
mov
idiv
pop
add
sti
mov
sbb
adc
sub
shl
dec
aam
and
mov
mov
rol
mov
fwait
retf
jae
shld
(bad)
fistp
mov
fcom
push
fs
push
scas
xchg
dec
call
imul
(bad)
out
pop
jp
xchg
or
mov
and
iret
(bad)
sub
sbb
das
sti
(bad)
(bad)
push
push
jne
jbe
push
out
adc
cmp
stos
js
jl
jo
jl
call
jp
push
(bad)
(bad)
(bad)
jg
jg
lods
jmp
mov
add
stos
jne
sub
pop
xchg
fs
adc
jmp
cmp
(bad)
fmulp
inc
mov
inc
in
cmc
es
mov
movs
retf
cmp
xlat
adc
fdivr
xor
jle
or
outs
pause
mov
pop
mov
cmp
(bad)
(bad)
call
mov
and
and
inc
mov
lds
mov
cmps
inc
mov
dec
add
cwde
lds
lods
cmp
(bad)
(bad)
(bad)
jmp
inc
das
mov
jg
popa
ret
mov
push
aad
push
(bad)
icebp
outs
ins
or
sbb
add
add
inc
pop
mov
sbb
mov
push
mov
nop
sub
xor
jnp
test
jmp
hlt
inc
sub
push
jnp
mov
pop
push
inc
aaa
xor
(bad)
(bad)
(bad)
(bad)
sti
scas
mov
sub
call
adc
shl
jmp
sub
and
in
(bad)
(bad)
(bad)
call
shr
mov
shr
sub
xor
mov
jmp
(bad)
sti
retf
xor
or
sbb
add
dec
gs
cli
out
mov
data16
and
mov
pushf
cmps
lahf
call
or
pop
call
push
retf
pop
scas
stos
or
xchg
aam
(bad)
jg
mov
push
pop
daa
jg
retf
or
jl
and
mov
imul
loopne
(bad)
call
mov
mov
repnz
dec
cmp
lods
mov
dec
jmp
jg
adc
rol
xchg
mov
call
jmp
cmps
sbb
cdq
mov
mov
pop
and
ss
rcl
out
cli
(bad)
jmp
xor
(bad)
inc
mov
adc
add
xor
mov
(bad)
fcomip
or
lods
jo
jns
jb
inc
iret
pop
scas
test
(bad)
(bad)
push
mov
dec
pusha
dec
(bad)
mov
pop
adc
mov
xchg
(bad)
fist
jl
ret
cs
inc
cld
aas
add
test
movs
and
push
pop
lock
jmp
in
stc
jmp
iret
mov
call
cmp
(bad)
jg
dec
mov
ins
or
xor
loop
xor
pop
push
dec
sub
(bad)
(bad)
(bad)
dec
in
mov
(bad)
cld
jmp
xor
out
jo
jmp
inc
mov
cld
(bad)
(bad)
jmp
repnz
mov
(bad)
ror
ret
jbe
test
enter
(bad)
dec
mov
push
scas
sub
push
idiv
lods
mov
pushf
cli
inc
das
ror
movs
mov
fisubr
das
(bad)
jmp
(bad)
jmp
scas
lods
add
or
stc
jl
sub
adc
sub
imul
or
cld
setno
cld
sub
aas
imul
(bad)
(bad)
(bad)
call
mov
pop
or
mov
jns
ror
(bad)
(bad)
inc
mov
scas
or
popf
test
pop
push
xor
shr
arpl
(bad)
(bad)
call
add
push
ror
push
xchg
dec
sub
(bad)
mov
add
in
cmp
out
mov
push
push
xchg
xrelease
push
jmp
(bad)
(bad)
mov
test
push
dec
nop
idiv
and
sbb
sti
imul
retf
loop
(bad)
(bad)
(bad)
jmp
and
sub
pop
cmps
mov
adc
loop
and
into
fdivp
(bad)
(bad)
jmp
in
sbb
(bad)
sahf
pop
mov
mov
outs
clc
neg
pop
addr16
cmp
scas
and
popf
ins
lds
(bad)
(bad)
call
adc
push
stos
loope
idiv
scas
jle
jp
pop
xor
imul
(bad)
(bad)
jmp
out
or
xchg
fstp
das
(bad)
jle
movs
mov
stos
mov
mov
pushf
and
scas
sbb
mov
imul
dec
dec
inc
leave
or
ja
call
pop
gs
(bad)
adc
and
push
movs
das
jecxz
mov
sub
scas
loop
and
mov
into
clc
(bad)
jmp
mov
or
retf
mov
retf
jb
sbb
jmp
adc
sbb
cmps
xor
push
mov
push
xchg
cmp
lods
mov
ud0
(bad)
(bad)
mov
repnz
scas
in
(bad)
in
mov
pop
imul
dec
inc
or
xchg
jbe
aaa
movs
call
retf
sub
jp
out
jmp
outs
mov
inc
das
xchg
jb
push
lahf
ins
ins
mov
adc
ret
sbb
inc
pop
add
(bad)
(bad)
(bad)
call
adc
sbb
(bad)
pop
push
icebp
jge
push
xchg
mov
std
call
pushf
mov
(bad)
fistp
xchg
nop
hlt
(bad)
call
jge
mov
pop
inc
(bad)
(bad)
(bad)
out
js
adc
jmp
or
ins
jmp
pop
jns
sbb
(bad)
(bad)
dec
mov
mov
popf
das
aad
mov
jge
push
dec
fs
or
mov
mov
out
cli
(bad)
inc
xor
sbb
retf
pop
xchg
test
ficomp
sti
fisubr
call
xlat
cli
cmp
xor
cmps
lods
mov
inc
movs
sbb
xchg
(bad)
aad
loopne
(bad)
(bad)
mov
and
mov
cli
cdq
xor
adc
(bad)
jg
mov
ins
pop
shr
cmp
jmp
addr16
loopne
mov
xchg
adc
and
inc
cmp
cwde
(bad)
cmp
push
xchg
arpl
xchg
stc
pusha
inc
scas
push
adc
mov
(bad)
(bad)
dec
sub
inc
dec
and
neg
mov
sbb
or
retf
add
mov
mov
je
mov
cmc
push
stos
lahf
movs
hlt
daa
test
sub
ds
mov
sub
std
(bad)
dec
cmp
loope
mov
xor
scas
outs
fs
cmp
(bad)
(bad)
fbstp
sbb
int
xchg
and
adc
sub
pop
sbb
jg
mov
cld
(bad)
(bad)
push
xchg
cmp
jle
adc
adc
and
dec
das
aam
jmp
es
ds
xlat
ds
add
cmps
push
imul
xchg
add
mov
push
or
push
dec
fsub
jb
add
stos
out
push
(bad)
inc
mov
add
pop
xor
push
inc
mov
fild
adc
sbb
ins
pop
jg
dec
xchg
push
fcom
sbb
call
sub
mov
into
or
(bad)
out
(bad)
mov
sub
push
sub
jmp
(bad)
cmp
outs
jle
fwait
jmp
int3
loopne
cs
push
cs
mov
mov
(bad)
(bad)
fild
test
jmp
sub
dec
dec
test
and
(bad)
inc
stos
es
push
xchg
jns
mov
xor
mov
or
cmp
and
fidiv
sub
dec
iret
pop
dec
add
push
das
mov
mov
mov
das
and
cwde
retf
sub
out
movs
out
add
xor
punpckhbw
dec
enter
mov
push
mov
dec
pop
dec
dec
sahf
jmp
hlt
pop
pop
mov
fwait
mov
jbe
or
jbe
(bad)
(bad)
jg
in
lock
bound
mov
or
mov
loope
(bad)
mov
jbe
dec
jae
hlt
dec
dec
test
cmc
out
ins
nop
pop
fild
(bad)
jmp
cdq
out
stos
pop
retf
or
cmp
cmps
sub
aad
sbb
or
pop
ins
(bad)
(bad)
(bad)
(bad)
ficomp
or
mov
cmp
xlat
sub
xchg
or
inc
scas
(bad)
(bad)
(bad)
dec
nop
in
out
sub
fcomi
mov
fwait
lds
lahf
mov
xor
push
jo
xchg
push
(bad)
(bad)
(bad)
call
fs
cmps
lock
dec
adc
sub
ret
jmp
stos
std
jge
add
jmp
mov
movs
sub
fld
lock
(bad)
(bad)
(bad)
mov
es
imul
jecxz
xchg
jmp
push
jp
daa
jg
push
push
xor
imul
(bad)
call
std
fwait
xchg
into
push
push
or
sub
or
xor
push
mov
fcomip
inc
adc
lds
pop
std
or
push
iret
inc
jl
mov
mov
dec
xor
call
inc
fsubr
push
daa
mov
xor
pop
mov
mov
enter
hlt
(bad)
jmp
xchg
xchg
dec
inc
jnp
push
mov
dec
mov
jmp
sub
adc
in
sub
push
test
or
std
cmps
cdq
sahf
sbb
sub
(bad)
(bad)
mov
imul
std
cmp
xchg
pop
imul
mov
retf
daa
fsubrp
nop
cmp
(bad)
jmp
jle
int3
mov
pop
push
ds
pop
js
or
fisubr
std
stc
retf
test
aas
std
adc
(bad)
(bad)
(bad)
call
push
mov
das
mov
or
leave
jl
ins
enter
jns
int
scas
xor
mov
inc
sbb
(bad)
(bad)
(bad)
(bad)
jmp
les
aad
push
test
iret
test
imul
sub
mul
gs
pop
pop
aaa
xor
or
adc
std
sahf
fistp
xchg
imul
in
call
int
mov
stc
or
inc
and
call
pusha
sub
xlat
mov
mov
cmp
xor
push
arpl
(bad)
(bad)
mov
sar
adc
xchg
adc
dec
push
scas
jno
inc
fiadd
sbb
loope
jb
jno
imul
inc
out
mov
mov
add
retf
jb
gs
xlat
std
test
pop
mov
cli
add
xor
or
call
les
push
std
(bad)
mov
push
or
sub
fwait
scas
or
(bad)
(bad)
call
js
cmc
xor
dec
inc
sub
sub
std
pop
add
clc
popf
ror
and
sub
(bad)
(bad)
call
dec
and
push
dec
std
fmul
sub
call
mov
add
out
mov
(bad)
jg
scas
gs
mov
inc
jmp
popa
call
sbb
push
cld
mov
pop
out
iret
xchg
pop
dec
cs
call
dec
shr
mov
(bad)
(bad)
mov
xchg
(bad)
movntq
lahf
(bad)
mov
movs
push
imul
test
mov
(bad)
push
jnp
xchg
stos
neg
(bad)
dec
scas
mov
dec
out
jmp
scas
xchg
mov
fwait
(bad)
(bad)
dec
xor
rcl
mov
imul
sbb
(bad)
(bad)
(bad)
call
push
enter
cs
xor
jge
scas
fstp
xchg
push
sbb
fsubr
mov
push
ret
shl
push
or
repz
jno
mov
std
(bad)
jmp
pop
and
lahf
sub
dec
and
test
(bad)
push
cwde
mov
push
lods
sub
xor
shr
pusha
sub
sar
out
clc
stc
lods
pop
repnz
loopne
mov
imul
push
mov
ficom
mov
add
(bad)
dec
call
(bad)
stos
adc
pop
xchg
mov
push
xchg
sub
(bad)
(bad)
(bad)
mov
retf
mov
pop
sti
data16
fcom
push
mov
xchg
clc
(bad)
push
jo
pop
sub
lods
fimul
leave
mov
movs
xchg
cli
std
dec
pop
out
(bad)
mov
jno
mov
(bad)
pop
out
push
sub
lahf
loopne
(bad)
fwait
inc
xchg
das
clc
(bad)
(bad)
jmp
ds
add
or
mov
test
sub
ss
and
mov
mov
std
cwde
jmp
fs
push
xchg
jmp
or
(bad)
(bad)
(bad)
inc
imul
mov
jmp
dec
mov
cmps
(bad)
cli
mov
scas
sti
(bad)
(bad)
(bad)
call
outs
mov
xchg
fsub
push
popf
inc
stos
push
imul
outs
(bad)
(bad)
(bad)
jmp
rcl
sub
lea
sub
std
repnz
jl
push
mov
(bad)
(bad)
(bad)
push
movs
cdq
loopne
in
stos
addr16
(bad)
scas
fstp
push
cld
push
push
test
jmp
sbb
(bad)
popf
dec
ins
imul
jl
rcr
in
test
dec
xchg
inc
outs
push
(bad)
call
pop
ficomp
loopne
loopne
jmp
call
sub
cdq
(bad)
ja
movs
test
mov
daa
or
call
push
mov
push
mov
xor
sub
xchg
inc
push
scas
xchg
dec
retf
fucomip
and
out
aam
pop
(bad)
aam
es
xlat
push
retf
div
sub
(bad)
iret
pop
scas
sub
xchg
sbb
(bad)
(bad)
push
imul
hlt
int
jle
mov
fsubr
jae
pop
outs
retf
cli
(bad)
jmp
xor
ins
jg
mov
mov
jo
jo
ja
push
(bad)
(bad)
stc
test
ffreep
mov
addr16
shl
lea
cmp
(bad)
push
call
or
call
sbb
fsubr
push
xor
mov
(bad)
(bad)
inc
dec
ret
js
scas
stc
push
scas
mov
(bad)
or
int3
leave
outs
dec
shr
(bad)
(bad)
cmp
sub
push
out
test
icebp
xor
ret
test
push
mov
jg
imul
lahf
loop
xchg
fs
dec
stos
inc
and
mov
adc
add
push
je
es
std
and
(bad)
(bad)
jmp
fistp
movs
iret
test
and
bound
out
out
jbe
cmps
aad
xchg
movs
mov
pop
(bad)
mov
mov
push
call
xor
cmp
das
xchg
push
std
(bad)
inc
mov
popa
daa
sub
outs
jb
pop
ins
mov
enter
gs
pop
ret
ret
clc
jmp
and
add
sbb
mov
push
lds
dec
cmc
pop
sbb
ins
sbb
and
stos
pop
mov
lods
stc
jge
mov
stos
aad
icebp
out
cli
repnz
(bad)
ds
add
jmp
push
and
mov
iret
in
mov
pop
jge
shl
jo
(bad)
(bad)
mov
jne
adc
call
and
jns
dec
aad
xchg
push
xlat
push
dec
enter
add
loop
sub
push
popf
push
cmps
or
pop
mov
rcr
icebp
imul
(bad)
push
arpl
popa
retf
outs
push
mov
xchg
add
mov
adc
adc
(bad)
call
in
sbb
lea
inc
mov
ror
mov
jmp
mov
pop
inc
xor
mov
scas
push
movs
adc
iret
fld
(bad)
jmp
mov
cli
mov
movs
into
xchg
inc
mov
mov
dec
sub
dec
cs
mov
jbe
or
movs
loop
(bad)
(bad)
(bad)
(bad)
dec
adc
into
sub
(bad)
adc
push
stos
jmp
push
stos
leave
sub
jp
sub
mov
retf
jmp
and
push
outs
jp
cwde
repnz
cmp
jns
fiadd
into
mov
pop
sbb
mov
or
sub
inc
leave
into
dec
movs
cmp
into
repz
iret
nop
lds
js
jmp
dec
aaa
mov
adc
sub
push
iret
mov
add
(bad)
(bad)
jmp
or
mov
cmc
cs
cmps
dec
ret
jne
stos
jo
jbe
cmps
jne
stos
(bad)
(bad)
jmp
add
jne
cwde
shr
shr
(bad)
mov
add
dec
sbb
(bad)
jmp
dec
dec
mov
and
or
xor
(bad)
push
dec
pop
and
jp
sbb
and
mov
xchg
dec
jmp
cmp
and
iret
(bad)
push
aaa
mov
pop
movs
std
add
or
cmp
mov
(bad)
(bad)
mov
cmp
scas
inc
push
cmps
sbb
mov
mov
or
cdq
(bad)
(bad)
(bad)
(bad)
push
mov
pop
mov
gs
retf
mov
or
ins
dec
lds
jle
gs
js
(bad)
(bad)
jg
add
pop
fldl2e
pop
pushf
pop
xor
leave
mov
in
imul
vpcomuw
push
lods
not
push
dec
hlt
mov
(bad)
sbb
iret
scas
push
gs
xchg
movs
push
adc
mov
xlat
(bad)
(bad)
(bad)
push
sar
and
pop
jae
mov
mov
stos
ret
sti
pop
add
inc
out
add
call
mov
mov
mov
je
popf
mov
(bad)
(bad)
(bad)
(bad)
cmp
out
(bad)
repz
pusha
das
test
jnp
cmp
push
rcr
and
(bad)
inc
xchg
in
stos
cmp
and
repnz
jns
lea
dec
xchg
cdq
mov
jmp
jg
mov
lods
sub
xchg
test
(bad)
(bad)
fild
fstp
inc
adc
cwde
mov
dec
ficomp
cmp
(bad)
(bad)
mov
xor
imul
pop
ret
ret
(bad)
outs
add
mov
or
(bad)
(bad)
(bad)
jmp
pop
push
sub
cwde
xor
xchg
mov
imul
iret
lahf
adc
add
test
in
(bad)
(bad)
(bad)
(bad)
mov
sbb
loope
ss
pop
or
in
loopne
test
(bad)
shl
popf
sbb
adc
inc
clc
jmp
repnz
imul
xor
jnp
xor
pop
push
cli
(bad)
(bad)
(bad)
call
jb
test
mov
ret
jne
sbb
(bad)
(bad)
std
(bad)
push
jmp
(bad)
fisubr
jb
mov
mov
(bad)
call
sbb
cmp
cmc
or
scas
pop
inc
cmp
jmp
cwde
sti
xchg
mov
mov
shl
adc
adc
xchg
and
dec
add
mov
pop
hlt
xchg
js
shl
fdivr
popf
retf
jne
or
clc
je
adc
mov
lods
xor
outs
(bad)
dec
lock
movs
cwde
adc
xchg
jle
stos
aad
mov
retf
mov
ds
lahf
enter
jmp
test
xchg
push
out
add
jb
sub
cmp
sub
je
ret
xor
jb
adc
(bad)
(bad)
dec
movs
jb
call
outs
test
(bad)
leave
dec
mov
adc
clc
es
ret
out
cmp
pop
mov
ror
sahf
push
(bad)
jmp
repz
sub
pop
sbb
call
(bad)
(bad)
(bad)
push
and
scas
sahf
call
pop
movs
(bad)
sbb
(bad)
or
mov
(bad)
jp
ins
jb
sub
push
retf
mov
mov
das
sub
mov
(bad)
(bad)
(bad)
(bad)
in
std
mov
sub
ds
or
pop
sub
xchg
cmp
je
retf
fild
loopne
ds
xchg
pop
fwait
push
popa
mov
(bad)
aas
cdq
je
sbb
call
test
mov
js
jp
idiv
(bad)
push
jnp
push
rcr
scas
xor
cli
sub
xchg
mov
mov
jmp
dec
(bad)
push
dec
jmp
stos
add
movs
mov
jmp
pop
mov
and
pop
mov
add
mov
dec
lods
xor
(bad)
(bad)
jmp
int
repnz
call
or
sbb
sbb
xor
(bad)
loopne
adc
(bad)
(bad)
jmp
pushf
pop
sahf
scas
xchg
jnp
pop
(bad)
mov
(bad)
cdq
xchg
ins
inc
cmps
mov
(bad)
(bad)
(bad)
ffree
inc
adc
jmp
push
cli
(bad)
xchg
mov
dec
sub
call
ds
in
(bad)
(bad)
call
mov
pop
cli
sub
jmp
xchg
adc
(bad)
test
in
lods
in
nop
jecxz
xchg
add
add
lods
mov
mov
test
retf
push
xor
aam
sub
(bad)
adc
dec
jmp
sti
jae
mov
retf
lock
call
dec
clc
(bad)
(bad)
(bad)
(bad)
jmp
mov
adc
and
mov
pop
cmp
mov
sti
inc
ret
sbb
mov
mov
jmp
adc
mov
std
push
mov
dec
fstp
(bad)
call
jb
mov
push
out
xchg
and
add
in
loop
adc
jmp
cmp
(bad)
jmp
rcr
jg
xchg
(bad)
cmp
fimul
dec
(bad)
(bad)
jmp
cmps
xchg
ficomp
gs
mov
mov
push
(bad)
(bad)
(bad)
jmp
sbb
pop
sbb
gs
std
call
sub
dec
xor
dec
in
sub
mov
xchg
jecxz
add
(bad)
(bad)
jmp
inc
push
adc
stos
jae
ins
pop
sub
rcl
ret
xchg
push
cmp
push
mov
(bad)
mov
add
int3
cli
(bad)
in
jbe
push
lea
enter
mov
jmp
jg
iret
xchg
dec
loopne
cs
and
int
sub
stos
cld
(bad)
inc
jb
mov
mov
inc
jmp
fistp
pop
sub
pop
idiv
(bad)
jmp
add
pop
inc
mov
or
mov
sbb
mov
dec
or
and
xchg
enter
jmp
call
and
arpl
iret
sbb
adc
cwde
std
mov
(bad)
jg
pop
jb
lods
adc
in
push
mov
push
jns
xchg
mov
fs
(bad)
(bad)
fisubr
jb
push
dec
mov
iret
mov
and
jg
dec
jl
sub
aaa
jecxz
sub
jmp
(bad)
(bad)
(bad)
call
jbe
xlat
mov
jo
inc
and
fs
aaa
inc
ja
call
pop
sub
(bad)
(bad)
(bad)
call
mov
add
into
sbb
jno
xchg
mov
xor
push
dec
call
or
fwait
(bad)
(bad)
(bad)
inc
mov
sub
lea
scas
inc
push
es
push
and
adc
cmp
jne
(bad)
mov
std
adc
imul
test
popf
jmp
fdivrp
(bad)
(bad)
call
add
ret
data16
movs
sahf
pop
leave
sub
cmp
and
adc
stos
push
and
xchg
push
xchg
cmps
test
dec
add
aas
dec
outs
dec
mov
enter
mov
or
push
xchg
sub
call
jno
or
aaa
mov
cmps
test
jp
cmc
ss
add
mov
icebp
cs
pop
repz
(bad)
push
add
mov
push
or
fimul
jg
mov
push
mov
pop
sti
mov
fadd
or
cmp
aaa
ror
movs
(bad)
aas
mov
not
outs
sbb
adc
repnz
fcomp
mov
mov
pop
std
sbb
xchg
jmp
add
adc
ret
mov
add
mov
scas
in
jl
add
(bad)
fistp
fdivrp
(bad)
(bad)
(bad)
jge
pop
mov
jp
xchg
jmp
(bad)
leave
pop
xchg
dec
xor
fisttp
xor
xchg
jecxz
or
(bad)
(bad)
jmp
add
inc
stos
popf
mov
mov
aad
iret
stos
push
ror
arpl
pop
mov
(bad)
(bad)
inc
pop
mov
dec
movs
repnz
inc
xchg
sub
inc
xchg
lahf
mov
pop
sub
(bad)
fisubr
adc
pop
in
daa
adc
jno
inc
dec
dec
js
outs
scas
xchg
test
addr16
cmp
sbb
jmp
sahf
and
stos
inc
out
les
jp
(bad)
xor
mov
shr
popf
push
dec
bound
dec
sub
aam
data16
jp
sub
(bad)
dec
xchg
gs
lods
xchg
ror
jge
pop
fild
sbb
cdq
cld
or
(bad)
inc
adc
pusha
sahf
cmp
(bad)
repnz
sub
mov
out
xchg
lods
jbe
(bad)
call
xchg
scas
out
clc
mov
enter
scas
and
mov
cmp
cmp
(bad)
(bad)
mov
lock
mov
jle
jg
sbb
jp
adc
add
ds
mov
sbb
jmp
mov
or
xchg
movs
outs
addr16
(bad)
push
in
dec
mov
(bad)
jmp
sbb
pop
xchg
push
movs
fidivr
stos
push
movs
jnp
dec
mov
cs
or
(bad)
(bad)
fld
mov
jb
cmp
adc
xor
jmp
(bad)
inc
stos
xchg
adc
adc
into
leave
test
adc
sbb
or
push
jmp
mov
add
push
xchg
je
movs
dec
cmp
add
xor
ror
daa
loopne
mov
loope
pusha
stos
xor
mov
dec
div
cmp
pop
or
mov
ds
jno
call
sar
(bad)
jmp
stos
inc
cli
mov
jge
sbb
push
and
pop
sbb
cmp
call
adc
mov
dec
sub
xchg
mov
test
imul
fcomp
mov
xor
outs
cli
(bad)
jmp
xchg
mov
jo
es
lock
inc
adc
sbb
(bad)
(bad)
jmp
mov
cmp
test
push
jmp
inc
shr
(bad)
ja
cmc
lods
dec
out
je
xchg
hlt
leave
jne
jmp
out
cmp
gs
inc
ja
shl
or
lock
sub
into
aaa
mov
stc
mov
out
call
std
sub
xchg
pop
int
adc
dec
pop
dec
(bad)
out
pop
(bad)
mov
sub
mov
(bad)
(bad)
(bad)
call
mov
outs
xor
ja
jge
jp
mov
xchg
and
add
cmps
fs
test
xchg
sbb
int3
cmps
iret
jbe
jle
in
(bad)
(bad)
inc
pop
in
fld
sbb
bound
pop
int
or
jmp
(bad)
fdivr
ja
ins
mov
sub
add
dec
cmp
xchg
sub
inc
fsubr
and
jmp
push
fbld
inc
mov
bound
and
cmp
sbb
jp
je
dec
cli
inc
retf
out
mov
daa
clc
call
rol
(bad)
fcomip
cmp
adc
fwait
sbb
push
jle
gs
dec
adc
call
sbb
icebp
(bad)
call
sbb
push
out
fild
sahf
xor
mov
sbb
inc
(bad)
jmp
inc
daa
std
call
in
sub
js
test
adc
scas
imul
(bad)
call
cwde
pop
clc
das
xor
scas
pushf
out
xchg
int3
aaa
sbb
sbb
mov
neg
scas
and
xlat
shr
and
mov
(bad)
call
into
dec
mov
pop
mov
test
pop
jp
dec
cmp
or
fcomip
jg
shl
cmp
enter
jmp
or
imul
(bad)
cs
call
std
sbb
add
push
xor
push
mov
stos
lea
push
(bad)
(bad)
dec
lods
and
shl
stos
cmp
ffree
call
lock
mov
(bad)
inc
test
sub
jb
outs
push
mov
adc
(bad)
jmp
adc
lea
repnz
mov
loopne
push
jp
(bad)
dec
ss
lahf
aam
(bad)
cld
mov
scas
push
sbb
jge
dec
rcl
(bad)
(bad)
(bad)
jmp
mov
iret
sub
stos
mov
cmp
jle
adc
cdq
ret
lods
fimul
sub
ins
jo
(bad)
(bad)
(bad)
call
sbb
jmp
and
stos
js
pop
stos
cs
test
push
aaa
cli
sahf
mov
pop
cld
push
xchg
pop
stos
in
enter
je
inc
out
clc
(bad)
mov
int
jmp
jmp
fsub
cmps
lahf
mov
jle
jmp
mov
lods
or
pop
stc
call
and
cld
inc
sub
(bad)
dec
push
adc
movs
fnstenv
xchg
fdiv
lock
sub
mov
clc
dec
repnz
(bad)
(bad)
cmp
cwde
sub
sbb
les
sbb
dec
outs
enter
movs
sub
mov
mov
mov
mov
fsub
mov
mov
push
imul
mov
(bad)
(bad)
(bad)
call
lock
nop
xchg
and
jg
push
and
in
lds
rcl
jmp
(bad)
(bad)
mov
out
out
mov
sub
in
test
out
gs
mov
sub
mov
mov
cs
dec
dec
ins
adc
retf
shl
jmp
ins
push
xchg
scas
ss
call
cld
dec
sub
inc
or
xchg
out
dec
jmp
stos
jmp
push
retf
test
out
add
push
test
sar
(bad)
(bad)
mov
xchg
scas
jmp
mov
dec
sub
test
scas
mov
jo
mov
or
(bad)
jmp
stc
loop
stc
pop
aad
sub
inc
clc
cmp
mov
mov
idiv
fidivr
dec
xchg
cmc
aas
jg
out
push
sub
in
fadd
ret
mov
dec
mov
retf
inc
mov
pop
jle
popa
dec
cmps
add
sbb
sub
(bad)
(bad)
(bad)
fcomip
cmc
imul
cmp
fsin
ret
sub
jp
ins
sub
mov
in
push
inc
(bad)
(bad)
dec
xchg
mov
xor
test
lahf
or
in
cdq
jmp
(bad)
call
mov
or
jmp
loop
loope
loopne
(bad)
(bad)
(bad)
call
lahf
dec
cmp
rcl
mov
jmp
jl
xlat
mov
mov
lock
mov
ds
(bad)
jg
(bad)
mov
repz
stc
loopne
mov
push
add
icebp
xlat
inc
pop
(bad)
(bad)
(bad)
call
or
sbb
mov
mov
push
sbb
pop
loop
arpl
xchg
mov
jmp
jmp
or
out
stc
jp
dec
mov
mov
(bad)
(bad)
(bad)
(bad)
sar
dec
fist
pop
(bad)
loopne
mov
cmps
aad
(bad)
in
and
xchg
out
push
aad
pop
in
pop
jmp
retf
(bad)
or
xchg
aaa
cmp
sti
test
push
retf
pop
push
addr16
jl
lahf
push
dec
aad
adc
in
adc
dec
fdiv
movs
(bad)
adc
in
call
cmp
out
cwde
cwde
lds
cmps
mov
ds
cmp
pop
loopne
shr
movs
jne
lods
imul
add
(bad)
jmp
dec
dec
mov
sbb
adc
dec
ja
out
mov
inc
add
mov
std
sub
sub
sub
push
(bad)
(bad)
(bad)
out
sbb
jmp
xchg
or
add
retf
dec
(bad)
jle
sub
sub
add
sbb
inc
jp
(bad)
(bad)
(bad)
mov
or
or
sub
out
jo
scas
adc
or
sub
cwde
out
(bad)
scas
clc
jmp
sub
cmp
pop
out
fld
ret
repnz
test
inc
mov
xor
pusha
xchg
gs
mov
pop
scas
loop
(bad)
(bad)
(bad)
jmp
hlt
in
xor
outs
sbb
mov
out
dec
imul
(bad)
fidivr
cdq
in
pop
cld
(bad)
jmp
aaa
dec
ror
fwait
xor
es
fst
mov
sar
pop
cld
dec
popf
sbb
iret
pop
cld
and
cld
stc
dec
fld
cmp
int
dec
(bad)
lods
jle
lahf
ror
shl
xor
(bad)
(bad)
(bad)
(bad)
call
imul
inc
sub
cli
inc
cli
repnz
push
sub
mov
(bad)
dec
xor
mov
test
jnp
in
or
jle
fldenv
arpl
cwde
int3
in
pop
(bad)
(bad)
(bad)
dec
jp
cmps
out
cwde
loopne
test
das
sar
call
test
jp
fdivr
(bad)
(bad)
jmp
xlat
(bad)
aas
pop
inc
loop
out
and
add
adc
pop
imul
call
rep
dec
fmul
outs
xor
jmp
sub
movs
cmp
or
dec
loope
add
(bad)
(bad)
cmp
fwait
lahf
in
sbb
clc
leave
jnp
(bad)
mov
lock
jmp
jp
arpl
mov
pop
stc
and
xor
(bad)
(bad)
(bad)
push
mov
mov
stos
gs
test
cmps
mov
jmp
call
lock
sbb
lock
(bad)
jmp
cli
mov
mov
mov
xchg
mov
ret
sub
(bad)
(bad)
jmp
pop
fidivr
cwde
mov
or
(bad)
out
aam
movs
(bad)
out
daa
cli
fmul
call
std
call
add
and
out
in
mov
lods
shr
jae
or
mov
add
hlt
dec
inc
sub
repnz
(bad)
fcomp
icebp
jmp
out
xchg
je
dec
jne
lods
jp
ficomp
sub
dec
sahf
dec
jle
imul
(bad)
mov
out
lds
sti
sub
cmp
(bad)
(bad)
(bad)
mov
int
push
mov
jno
(bad)
gs
inc
loop
mov
add
sub
dec
(bad)
(bad)
(bad)
dec
call
mov
std
or
test
out
scas
jp
push
sub
xchg
cs
retf
stc
sub
mov
in
jmp
ins
scas
push
leave
mov
stos
in
into
dec
(bad)
(bad)
(bad)
push
jp
fisubr
jmp
retf
jp
scas
sbb
adc
(bad)
(bad)
(bad)
dec
shr
xchg
inc
inc
adc
and
fsubr
xor
icebp
mov
cmp
(bad)
(bad)
(bad)
mov
xchg
mov
mov
pop
imul
(bad)
test
loop
(bad)
(bad)
jmp
xchg
retf
gs
and
jmp
ins
adc
iret
iret
adc
dec
dec
push
or
jmp
lds
jmp
jle
fcomp
daa
rol
js
jnp
cmp
sbb
sbb
sahf
xor
jmp
add
pop
movs
lahf
mov
mov
xchg
pop
out
test
retf
repnz
pop
(bad)
mov
mov
in
rep
pop
and
fwait
sub
jp
out
or
mov
xor
mov
add
mov
xchg
mov
aaa
fcomp
dec
ins
sub
in
hlt
(bad)
(bad)
(bad)
jmp
add
cmp
lahf
xor
out
mov
ds
js
jae
xor
jbe
or
cmp
pop
test
xchg
in
xchg
mov
mov
push
test
ss
cmps
(bad)
(bad)
jmp
(bad)
ins
add
cld
jmp
cld
adc
imul
scas
int3
(bad)
(bad)
(bad)
call
scas
push
dec
lahf
test
add
cmps
int3
pushw
mov
ins
sbb
dec
mov
test
jmp
lahf
mov
aad
call
push
in
mov
call
push
push
(bad)
aam
cs
add
sbb
mov
das
clc
fcomip
and
sbb
cmp
(bad)
push
pop
cmps
push
lea
ja
add
sti
mov
(bad)
dec
std
dec
sbb
cmc
mov
push
mov
(bad)
sti
adc
push
nop
inc
xchg
sub
fldenv
out
inc
jmp
sbb
into
sub
(bad)
out
sub
xor
sub
add
mov
(bad)
(bad)
dec
sbb
(bad)
rcr
cdq
je
repz
cmp
mov
mov
jg
jg
mov
cwde
scas
jmp
leave
xor
(bad)
mov
(bad)
sahf
dec
push
in
mov
jg
cli
adc
enter
enter
inc
xor
mov
lahf
jmp
mov
add
xchg
mov
dec
bound
sbb
(bad)
(bad)
call
cli
cwde
in
es
push
ret
out
xchg
or
or
add
cmp
(bad)
jmp
hlt
jmp
imul
cmp
mov
cdq
cmp
jp
mov
repz
(bad)
(bad)
inc
or
jnp
mov
jp
stos
mov
imul
icebp
ror
out
clc
(bad)
in
aam
cld
mov
mov
stos
sub
push
outs
icebp
cs
adc
mov
(bad)
(bad)
cwde
test
je
xchg
cmps
dec
dec
xchg
or
mov
sti
(bad)
(bad)
(bad)
push
or
mov
adc
sbb
sahf
call
test
(bad)
(bad)
(bad)
(bad)
cld
jge
popf
jl
les
mov
mov
test
sbb
ret
(bad)
call
sar
mov
and
xor
fist
iret
aad
fcom
jp
inc
mov
popa
std
(bad)
dec
cmp
call
mov
push
(bad)
(bad)
dec
sub
add
xchg
out
jb
ret
test
pop
pop
jb
(bad)
(bad)
(bad)
stc
or
and
mov
out
mov
fbstp
arpl
pop
(bad)
and
std
aam
mov
pop
hlt
mov
bound
adc
lock
xlat
mov
lahf
fcom
(bad)
(bad)
call
jp
mov
mov
sub
mov
popa
(bad)
out
cmp
imul
or
adc
mov
cmp
sbb
sbb
mov
nop
ret
sti
cmp
push
push
jmp
scas
mov
(bad)
xchg
mov
retf
mov
sar
(bad)
in
shl
xchg
adc
sahf
push
jmp
mov
sar
mov
pop
fmulp
xor
mov
aad
pop
hlt
outs
sbb
push
aad
inc
fidivr
xchg
das
into
push
cmps
in
hlt
dec
(bad)
loope
(bad)
push
in
and
jmp
out
or
les
ins
sbb
(bad)
(bad)
mov
xchg
pop
jg
test
mov
push
push
ror
mov
ja
imul
test
jg
(bad)
mov
imul
or
movs
cdq
test
push
sub
mov
pminub
test
jle
outs
cmps
(bad)
not
in
xchg
ins
or
mov
jb
scas
daa
mov
and
sub
ret
xor
cmp
sar
fwait
js
daa
inc
clc
in
and
inc
scas
pushf
sub
inc
test
loop
(bad)
(bad)
dec
and
push
pop
jmp
das
fidivr
pushf
stos
imul
mov
scas
clc
cmp
mov
mov
movs
scas
cmp
pop
jecxz
(bad)
(bad)
(bad)
call
js
test
test
mov
mov
dec
xchg
inc
sub
sbb
xchg
repz
gs
stos
call
mov
jp
sahf
sbb
(bad)
(bad)
(bad)
fbstp
rol
inc
push
or
jmp
psubsw
xchg
inc
add
out
xchg
xchg
adc
xor
out
and
jmp
rcl
das
cmps
ficom
or
sub
mov
push
xlat
std
and
outs
jmp
(bad)
sti
jmp
out
cld
leave
stos
xchg
jnp
test
dec
sbb
mov
cli
mov
xor
jmp
jnp
and
and
stos
scas
ds
mov
pop
mov
mov
pushf
and
mov
movs
out
or
jp
jmp
pop
cwde
cwde
lahf
sbb
pop
ror
or
dec
xor
lds
pop
ret
retf
push
push
das
cmps
scas
retf
(bad)
jo
out
shr
or
(bad)
(bad)
push
std
sbb
jmp
stc
call
stc
pusha
xchg
pop
and
div
rcr
adc
(bad)
(bad)
(bad)
call
fwait
popa
push
test
jne
sub
test
fadd
or
(bad)
push
retw
sub
cmps
int
dec
test
mov
loope
aad
(bad)
(bad)
(bad)
jl
iret
jnp
movs
cmp
mov
cld
mov
retf
jbe
retf
sub
mov
je
adc
scas
(bad)
(bad)
(bad)
call
pop
call
lods
fcomp
push
js
mov
add
(bad)
call
retf
(bad)
(bad)
(bad)
dec
call
std
mov
call
jp
mov
cdq
ins
cli
push
inc
mov
in
adc
scas
ins
jp
out
mov
cmp
movs
sub
out
and
in
mov
arpl
retf
mov
add
sbb
out
sub
dec
outs
adc
cmp
loopne
add
aam
aad
(bad)
mov
add
fsubrp
ret
in
mov
xchg
mov
xchg
xor
retf
idiv
mov
(bad)
jg
mov
mov
movs
retf
js
and
in
mov
dec
mov
inc
stos
jle
sti
lods
xchg
(bad)
push
push
(bad)
movs
test
repnz
int
and
mov
data16
sti
ret
cmps
pop
jb
ins
sub
outs
dec
add
pop
hlt
jmp
dec
push
pop
dec
mov
or
inc
ja
lea
sub
sbb
mov
mov
mov
jmp
cmp
lods
sbb
add
cmps
push
jo
clc
push
sbb
jmp
addr16
cmc
sbb
push
imul
stos
dec
mov
imul
push
and
cs
stos
mov
sub
cli
sti
stos
(bad)
sub
jge
pop
adc
cmp
call
bound
pop
(bad)
push
push
scas
push
retf
in
or
in
cdq
movs
bnd
pop
lahf
test
bound
retf
and
and
cmp
stc
jl
mov
jmp
repz
fcomp
pushf
icebp
out
dec
ins
sbb
movs
jmp
inc
stos
paddd
retf
push
lahf
icebp
js
dec
add
pusha
ds
pop
nop
loopne
cld
pop
dec
jmp
call
sbb
pop
sub
pop
adc
clc
cmp
enter
inc
xchg
lods
mov
dec
dec
sub
mov
lahf
cmp
adc
xor
cmp
dec
enter
outs
xchg
cmps
cs
movs
cmps
leave
aam
sbb
mov
jbe
in
jbe
cdq
sbb
push
mov
adc
retf
jmp
in
(bad)
(bad)
push
fldenv
pop
movs
cwde
imul
jle
jmp
dec
clc
(bad)
daa
test
int3
call
xchg
cmp
(bad)
(bad)
call
cmp
or
lods
iret
(bad)
clc
arpl
push
out
jle
loopne
mov
mov
ds
jp
push
std
mov
mov
retf
push
fdiv
mov
inc
adc
mov
mov
outs
jmp
push
jmp
(bad)
(bad)
(bad)
call
dec
mov
mov
dec
mov
imul
and
(bad)
cmps
call
outs
pop
cs
ret
out
xchg
sahf
jmp
add
pop
scas
enter
mov
(bad)
(bad)
call
xor
inc
mov
dec
loop
mov
xor
jo
xchg
adc
xchg
(bad)
push
jb
mov
jb
pusha
push
gs
movs
or
sbb
cmps
sbb
lods
mov
imul
jmp
test
call
push
(bad)
(bad)
cmp
mov
das
(bad)
dec
pop
jno
rcr
(bad)
(bad)
call
scas
pop
(bad)
int3
mov
iret
mov
mov
jbe
movs
push
test
push
push
sub
jmp
jmp
jno
add
in
sti
mov
call
(bad)
inc
sub
aaa
sub
mov
into
outs
add
cmps
out
xchg
es
(bad)
(bad)
jle
fbstp
(bad)
(bad)
(bad)
push
push
fwait
fwait
sub
mov
mov
add
ds
dec
(bad)
fcomip
adc
jge
scas
(bad)
(bad)
(bad)
mov
fdiv
loop
xor
icebp
ret
sub
jae
aaa
jg
scas
mov
add
dec
imul
sti
mov
call
fild
inc
jae
shl
(bad)
(bad)
(bad)
jmp
aaa
mov
leave
xchg
out
mov
inc
xchg
sub
scas
das
int
dec
lods
outs
add
nop
icebp
cmp
lahf
outs
dec
push
push
call
jmp
rcr
xchg
mov
test
pop
jb
(bad)
(bad)
(bad)
inc
mov
sub
mov
add
jecxz
fsubr
mov
push
(bad)
(bad)
(bad)
jmp
push
lods
add
inc
mov
sub
mov
into
mov
and
inc
(bad)
(bad)
(bad)
dec
mov
mov
aam
(bad)
mov
mov
loop
les
xor
mov
xchg
scas
pop
(bad)
(bad)
(bad)
(bad)
mov
or
sub
jb
adc
cmp
es
retf
(bad)
(bad)
(bad)
jmp
mov
push
test
push
pop
mov
test
sbb
mov
mov
push
(bad)
jg
jmp
outs
cmps
pushf
cmps
outs
xor
rcl
repnz
push
jmp
dec
jg
movs
sbb
push
mov
(bad)
sbb
(bad)
(bad)
call
mov
cmp
xor
inc
or
test
push
and
cmp
(bad)
(bad)
(bad)
out
jecxz
mov
test
or
jbe
jl
jmp
shl
push
std
loope
mov
and
addr16
sti
jmp
out
dec
sub
ins
idiv
(bad)
inc
repnz
xor
scas
mov
(bad)
addr16
jbe
(bad)
(bad)
(bad)
push
leave
imul
jmp
push
pop
xchg
bound
sub
stos
inc
es
imul
or
pop
cld
lods
pop
into
push
imul
sbb
stos
(bad)
(bad)
jmp
arpl
mov
xchg
mov
out
sbb
outs
cmps
dec
jecxz
(bad)
mov
dec
jmp
loop
in
push
mov
lds
cmp
mov
pop
jle
call
hlt
mov
xchg
xchg
xchg
fisubr
mov
(bad)
fadd
or
fsubrp
fmul
cmp
hlt
jle
inc
loop
sub
stos
sbb
stos
xor
xchg
jo
push
imul
les
add
pop
test
mov
stos
out
outs
xchg
sub
fisubr
jle
outs
adc
sar
aaa
or
cmps
lods
jp
xor
cdq
sbb
push
gs
(bad)
(bad)
push
fisttp
ror
sub
out
dec
sub
leave
push
mov
ds
mov
lock
(bad)
(bad)
(bad)
dec
movs
aas
jne
mov
and
stos
mov
mov
mov
mov
pop
retf
(bad)
(bad)
(bad)
push
hlt
and
pushf
cmp
test
adc
add
(bad)
cmp
(bad)
jnp
cmp
sti
pop
jnp
jnp
scas
arpl
je
arpl
mov
adc
push
ss
sub
jle
jge
inc
sti
push
sbb
mov
xor
call
jge
mov
xchg
sbb
adc
outs
sti
xchg
std
pop
test
pop
mov
dec
sbb
adc
and
mov
fisub
mov
aad
jl
(bad)
(bad)
jmp
cmps
mov
sub
lock
jle
sub
shl
jle
pop
and
ss
jmpw
repnz
(bad)
(bad)
jmp
test
jmp
ret
(bad)
scas
inc
adc
xchg
(bad)
push
in
jmp
(bad)
call
push
shr
jp
(bad)
clc
das
add
sbb
(bad)
inc
jnp
mov
sar
imul
push
pop
aad
mov
outs
enter
pop
(bad)
(bad)
(bad)
call
dec
cmp
cmp
fisub
jmp
jmp
cmp
push
loopne
stos
jbe
ret
sbb
jmp
stc
loop
je
(bad)
dec
add
jne
call
rcr
sti
sub
jle
jmp
mov
(bad)
call
sub
xchg
or
mov
mov
icebp
push
out
mov
stc
je
mov
and
(bad)
fild
adc
icebp
pop
cmp
in
cmp
mov
sub
lahf
mov
js
mov
sti
pop
push
add
sub
or
inc
mov
pop
cmp
rol
into
test
push
or
mov
push
mov
or
es
push
jl
xchg
xchg
in
jmp
(bad)
dec
outs
clc
fbstp
cld
mov
jecxz
cli
jae
lock
sub
cmps
sbb
(bad)
(bad)
(bad)
call
cmp
idiv
je
(bad)
cld
xor
sbb
add
xchg
idiv
jmp
mov
pop
(bad)
mov
das
call
movs
cwde
adc
dec
add
push
cmps
fidiv
mov
cmp
(bad)
mov
call
push
enter
pop
movs
scas
pusha
add
ficomp
aam
(bad)
dec
adc
ins
lods
pop
stc
scas
loopne
retf
mov
pop
movs
mov
xchg
(bad)
es
xchg
lock
xchg
inc
push
adc
or
xchg
or
(bad)
(bad)
inc
cmp
es
inc
sbb
les
inc
or
xor
xchg
call
std
(bad)
inc
int3
fidiv
mov
sub
sub
cmp
inc
cmp
repz
test
fadd
jo
enter
sub
(bad)
fimul
(bad)
(bad)
push
test
adc
(bad)
xchg
and
push
popf
add
push
(bad)
(bad)
(bad)
js
jnp
popf
jno
call
aam
fwait
aaa
sub
aam
sub
cmp
call
mov
test
aaa
ss
push
mov
xor
ins
push
or
jmp
out
sbb
jg
(bad)
call
into
dec
fld
cdq
mov
push
loopne
lods
push
in
retf
and
(bad)
sti
cwde
mov
inc
fdivr
jmp
int
pop
into
push
sub
(bad)
push
sub
push
ds
stc
das
push
stos
ret
cmp
ja
cmp
hlt
(bad)
jmp
stos
jp
mov
pop
mov
rcr
jmp
stos
lea
es
push
and
lods
xor
mov
(bad)
es
cmp
xchg
jmp
fwait
mov
mov
fbstp
push
sub
call
mov
and
xchg
push
sti
outs
push
xor
mov
pop
mov
push
shl
sub
je
sub
loopne
pop
movs
mov
mov
and
stos
ret
(bad)
mov
pop
loop
mov
aad
stos
mov
xor
jae
sub
stos
test
dec
pop
or
sahf
imul
(bad)
inc
and
ins
imul
adc
adc
mov
xchg
outs
pop
xlat
jp
(bad)
jmp
js
test
push
lahf
add
push
pop
out
mov
mov
call
pop
sub
retf
adc
retf
pop
cmps
mov
(bad)
(bad)
call
add
into
pop
jmp
cdq
out
and
mov
jle
cmps
fcmovne
movs
pop
push
inc
mov
fnstcw
sbb
cmp
movs
add
sub
push
mov
(bad)
(bad)
jmp
mov
cwde
xor
sbb
movs
mov
sub
jmp
jl
imul
loopne
clc
dec
loopne
ret
sbb
inc
stos
cmp
dec
icebp
mov
lea
mov
sub
push
retf
mov
fcomip
xor
mul
(bad)
fisub
mov
mov
sti
or
pop
call
inc
pop
stos
imul
jmp
inc
repz
cdq
pop
cs
jmp
enter
imul
cmp
test
es
iret
je
xchg
xlat
sbb
(bad)
(bad)
(bad)
call
pop
dec
mov
icebp
mov
add
mov
push
jg
sbb
adc
or
xchg
push
leave
add
mov
retf
cmp
or
jmp
sub
call
je
or
aad
jb
popa
movs
or
movs
cmp
(bad)
(bad)
ficomp
push
and
test
xor
sbb
out
xor
jmp
(bad)
(bad)
(bad)
call
jne
sbb
jnp
pushf
fs
dec
and
push
ins
stc
mov
sub
lock
call
ins
nop
shr
in
neg
jg
or
outs
loop
and
pop
or
jle
retf
xchg
(bad)
jmp
clc
fisttp
leave
out
mov
cmps
jmp
pop
fldenv
pop
mov
inc
aas
dec
outs
bound
jb
out
ds
das
cli
(bad)
jmp
xor
lahf
arpl
retf
rcr
stos
lahf
lods
sub
out
test
ins
mov
dec
(bad)
mov
call
std
call
xchg
sar
push
mov
pop
(bad)
call
jmp
inc
lock
shl
stos
cmp
arpl
jp
fisub
lds
gs
(bad)
call
test
jb
push
jmp
cmp
mov
mov
aad
daa
(bad)
fcomip
dec
xchg
(bad)
cmps
stos
cs
inc
dec
sar
stc
sub
and
(bad)
(bad)
(bad)
dec
push
dec
mov
popf
lea
sub
loop
arpl
mov
cmps
dec
sub
sbb
retf
loopne
xchg
xchg
dec
fld
jbe
call
(bad)
(bad)
(bad)
call
pop
xchg
retf
(bad)
icebp
retf
ret
push
imul
sub
rcl
inc
mov
(bad)
jg
movs
mov
mov
neg
cmps
test
dec
sub
ins
push
mov
jo
cmps
xchg
lods
cmp
dec
jmp
push
call
loopne
jp
xchg
dec
ins
and
inc
movsx
xchg
out
mov
inc
mul
shl
sahf
call
(bad)
jmp
call
cli
scas
dec
sbb
dec
mov
scas
in
add
mov
xchg
jp
out
(bad)
dec
mov
mov
aaa
jbe
inc
dec
and
xchg
pop
call
mov
fsubr
mov
movs
(bad)
movs
push
mov
aam
and
ins
std
(bad)
jmp
inc
sbb
jae
lods
shr
xor
dec
mov
ret
sub
pop
(bad)
(bad)
dec
jbe
push
ds
sbb
sub
pop
cmp
pop
out
jecxz
sbb
mov
or
dec
test
ins
call
and
mov
mov
(bad)
(bad)
(bad)
dec
mov
retf
inc
int3
adc
inc
aaa
pop
mov
ret
lods
jmp
in
ret
jmp
mov
and
aad
xor
idiv
inc
aas
lds
jno
push
inc
outs
push
enter
jmp
sti
jo
xchg
sub
push
pop
neg
jle
or
pop
jl
lea
in
cmp
mov
cmp
mov
rcl
(bad)
(bad)
call
sti
mov
mov
test
jp
xchg
pop
push
xchg
into
mov
pop
mov
mov
mov
jmp
jge
int3
add
inc
push
das
mov
adc
(bad)
(bad)
jmp
leave
xor
sbb
inc
loop
je
mov
call
sub
ja
inc
test
xor
jmp
cdq
test
(bad)
(bad)
push
int
mov
push
xchg
push
mov
mov
push
mov
cmp
adc
sti
lds
(bad)
(bad)
(bad)
jmp
sbb
xor
dec
imul
scas
adc
mov
(bad)
(bad)
jg
scas
and
xchg
rcr
pop
pushf
mov
pop
mov
fidiv
(bad)
(bad)
(bad)
push
jmp
mov
scas
stos
sub
push
cwde
popf
aad
fsub
mov
(bad)
jmp
(bad)
and
(bad)
retf
hlt
jb
jnp
ret
or
mov
je
push
adc
or
(bad)
jg
mov
jmp
xor
dec
hlt
push
or
mov
sbb
inc
lds
sub
sbb
imul
dec
mov
mov
inc
mov
(bad)
(bad)
out
ret
mov
cmps
and
(bad)
bound
outs
add
xchg
or
(bad)
(bad)
(bad)
(bad)
clc
test
push
int3
(bad)
cmps
mov
inc
stos
movs
scas
cmps
fisub
fwait
retf
dec
test
sub
and
scas
ins
cmp
hlt
cmp
in
sbb
push
(bad)
(bad)
push
sbb
mov
mov
movs
test
loope
repnz
ins
dec
dec
pop
retf
fild
pop
std
(bad)
jmp
sbb
loopne
jmp
cmp
xor
int3
sub
(bad)
(bad)
dec
sub
mov
cdq
repz
cmps
xchg
loop
sub
mov
mov
jmp
or
or
scas
(bad)
(bad)
(bad)
jmp
pop
mov
inc
fmulp
sub
pop
ds
pop
daa
imul
cmp
or
mov
mov
pop
add
and
jmp
cmp
loope
std
push
dec
aaa
jg
les
jg
addr16
leave
stos
outs
lds
xor
add
dec
inc
loopne
push
(bad)
call
ret
xchg
mov
mov
push
fwait
and
lock
(bad)
push
sub
and
mov
cmps
mov
cli
outs
loope
push
int3
ja
fistp
mov
fstp
xlat
(bad)
call
push
jb
mov
inc
loop
(bad)
(bad)
(bad)
dec
or
inc
adc
adc
cmc
mov
pop
loop
mov
xor
mov
out
inc
xchg
push
(bad)
(bad)
(bad)
(bad)
mov
shl
aad
dec
cmp
cld
jo
jns
icebp
xor
jae
hlt
and
adc
jns
ins
test
fwait
dec
dec
lock
xchg
in
test
push
shr
test
mov
jmp
and
lahf
xor
jmp
or
lods
cmps
mov
mov
stos
mov
cmc
mul
or
jle
imul
sbb
pop
xor
stos
(bad)
jmp
mov
lods
pop
cli
repnz
sti
jb
loopne
mov
in
fwait
(bad)
call
ds
sub
push
fisub
jmp
pushf
data16
fidiv
scas
xor
mov
fadd
adc
test
xchg
dec
push
and
(bad)
dec
(bad)
addr16
stos
inc
mov
pop
adc
in
jns
in
and
mov
scas
pop
shr
add
push
in
scas
sbb
push
jmp
dec
lock
mov
fwait
cli
cmp
js
jno
or
pop
xchg
cli
fbstp
push
vpmadcsswd
dec
or
cwde
in
mov
jg
xor
test
push
(bad)
(bad)
call
movs
stos
aas
add
mov
pop
loopne
cmp
sbb
fldenv
(bad)
jmp
leave
and
mov
je
jmp
lahf
stc
ret
cs
sub
(bad)
jmp
pop
ins
fwait
pop
push
sbb
ds
cdq
xchg
call
dec
stos
out
enter
push
mov
xchg
xchg
pop
adc
(bad)
(bad)
call
xor
dec
test
in
mov
jns
sub
dec
stos
cmp
test
fistp
ficomp
xor
aad
dec
outs
cli
or
shr
stos
mov
cld
jecxz
in
push
jge
add
pop
sub
addr16
les
dec
std
(bad)
push
loop
or
adc
and
inc
sub
jmp
(bad)
mov
call
sbb
test
mov
inc
cmp
sub
push
xor
sub
retf
out
mov
xchg
cmp
mov
movs
in
mov
mov
cmp
inc
xchg
call
cld
call
test
inc
ins
pop
shr
outs
or
or
xor
shr
test
(bad)
inc
nop
push
enter
cdq
pop
jne
loop
test
xchg
into
jmp
(bad)
(bad)
jle
das
xchg
stos
xor
ret
lods
sub
jbe
push
out
cli
push
(bad)
dec
sub
lods
imul
sbb
mov
div
loop
pop
js
cdq
sbb
not
or
fsubr
call
cmps
sub
adc
ja
into
lea
inc
jbe
mov
sub
sub
call
shl
ret
sub
addr16
mov
(bad)
(bad)
dec
mov
sub
push
xchg
and
stos
cli
scas
lahf
dec
movs
or
hlt
or
jmp
(bad)
in
call
int
push
in
aam
pop
jmp
scas
clc
sbb
push
aaa
mov
(bad)
(bad)
(bad)
mov
adc
or
pop
ret
adc
xlat
mov
sbb
clc
xchg
mov
(bad)
(bad)
(bad)
call
adc
xlat
adc
xchg
sbb
std
dec
lock
mov
inc
loop
and
(bad)
jmp
scas
iret
lods
(bad)
jmp
push
fxch
dec
adc
mov
xchg
fldenv
mov
out
sbb
retf
jle
mov
or
mov
(bad)
dec
jmp
jmp
ss
mov
pop
lock
jmp
inc
jmp
fcomip
out
mov
sub
push
add
pop
aam
(bad)
inc
aam
xchg
iret
jmp
scas
push
fucomip
imul
push
(bad)
(bad)
(bad)
(bad)
in
cli
lods
and
aas
retf
enter
add
mov
test
dec
dec
sbb
and
(bad)
(bad)
(bad)
call
jae
imul
loop
retf
mov
jo
loope
fs
(bad)
cdq
and
call
dec
ins
sub
lahf
push
jmp
mov
mov
mov
jb
mov
retf
loopne
(bad)
(bad)
jmp
mov
xchg
mov
out
sbb
in
sbb
adc
xor
stos
pop
(bad)
(bad)
(bad)
call
xor
or
adc
iret
mov
daa
sbb
push
in
js
shl
xlat
mov
sub
push
mov
outs
pushf
iret
aaa
mov
sbb
movs
(bad)
(bad)
call
ret
mov
push
in
in
add
xor
sbb
hlt
jg
fcmovu
sbb
mov
or
hlt
jne
rol
(bad)
(bad)
(bad)
push
mov
in
mov
or
pop
popa
push
xchg
stos
pop
mov
cmp
(bad)
(bad)
(bad)
jmp
retf
dec
or
mov
sbb
adc
test
add
(bad)
inc
xor
sar
mov
jmp
in
fldenv
dec
xchg
xchg
leave
pop
dec
mov
cmp
pop
cdq
dec
jge
scas
pop
movs
ja
(bad)
(bad)
cmp
jle
or
lods
dec
cmp
xchg
pop
mov
icebp
pop
push
mov
cdq
xlat
(bad)
(bad)
dec
aad
call
cmps
(bad)
movs
push
sub
adc
jg
mov
sbb
(bad)
out
in
pop
dec
sbb
mov
outs
dec
lds
das
cmps
clc
int3
push
(bad)
mov
dec
xchg
mov
fimul
in
mov
(bad)
(bad)
call
mov
sub
cmps
push
push
popa
mov
retf
mov
ins
int
stos
mov
sub
jmp
push
int
push
lods
outs
enter
mov
adc
aas
jecxz
or
(bad)
pop
push
aad
pop
(bad)
jg
mov
sbb
dec
jb
retf
and
adc
fwait
in
cld
test
(bad)
(bad)
(bad)
out
dec
mov
pminub
imul
xor
cmc
test
mov
ret
out
xchg
iret
jecxz
push
aaa
sbb
push
shl
mov
or
ror
les
(bad)
dec
gs
dec
in
retf
js
cmp
fwait
push
and
add
call
push
xchg
fwait
lahf
and
repnz
pop
sbb
outs
rcr
cmc
adc
call
stos
xchg
mov
mov
loopne
xchg
jmp
aaa
repz
or
push
pop
xor
fsubr
(bad)
(bad)
(bad)
jmp
jle
pop
cmp
xlat
std
push
fcmovnu
(bad)
lock
and
popa
cmp
iret
out
xor
sbb
(bad)
jg
mov
das
mov
jmp
push
pop
xchg
sub
lahf
jb
adc
movs
outs
and
lds
pop
sar
jmp
loopne
daa
cmp
lds
sbb
mov
xchg
(bad)
(bad)
(bad)
(bad)
jns
mov
mov
loope
call
sahf
pop
aas
sub
cli
aas
sbb
dec
dec
add
xchg
test
xchg
test
fild
mov
inc
jo
push
push
in
bound
dec
jmp
sub
outs
jge
mov
stos
mov
mov
scas
cmp
movs
push
pop
jb
cwde
xor
cmp
sub
stc
pushf
or
dec
loope
lahf
pushf
arpl
and
mov
sub
mov
js
cmp
cdq
(bad)
push
sub
std
or
out
retf
mov
and
(bad)
call
cmps
std
sbb
cmps
(bad)
lods
sbb
and
(bad)
(bad)
cs
iret
sbb
fwait
mov
jo
js
jl
jnp
clc
pop
lock
jmp
xor
(bad)
(bad)
(bad)
call
sti
mov
sub
or
and
or
jb
or
jnp
(bad)
(bad)
jmp
jnp
and
(bad)
mov
sbb
icebp
sti
pop
pop
mov
jo
call
shl
arpl
nop
mov
scas
pop
fldenv
(bad)
hlt
scas
lods
popa
test
jb
cmp
mov
jnp
mov
push
jecxz
cmp
sub
and
sub
mov
std
cdq
and
das
jb
inc
ret
push
xchg
repnz
enter
jg
das
ins
jmp
aaa
and
std
push
(bad)
(bad)
(bad)
inc
mov
mov
popa
out
mov
shl
xchg
xchg
arpl
jle
ret
jge
(bad)
(bad)
(bad)
(bad)
aas
sub
add
pop
in
aad
popf
mov
pop
mov
adc
sti
retf
mov
mov
(bad)
jmp
pop
pop
loope
sahf
cmps
pop
cs
iret
pop
add
clc
or
jge
(bad)
(bad)
fcomip
sub
inc
call
and
jmp
stos
pop
jmp
cmc
adc
sbb
sbb
ins
adc
jae
push
add
jmp
or
jmp
sar
xor
cmc
sub
jmp
cmps
cmp
out
lods
xchg
jnp
out
cmp
and
sub
pop
cmp
add
jg
std
dec
xor
jmp
sub
leave
push
std
push
cmp
(bad)
call
(bad)
mov
jmp
push
add
inc
out
jb
cwde
xchg
lock
(bad)
jmp
jmp
push
xchg
(bad)
push
fsubr
cs
jo
(bad)
(bad)
dec
js
sbb
fild
cmp
fbld
mov
jne
mov
dec
xchg
inc
movs
into
repz
(bad)
(bad)
jmp
adc
dec
push
mov
fwait
test
inc
call
gs
or
push
aas
sub
jl
cli
mov
lea
sti
jb
lock
(bad)
(bad)
dec
xchg
push
movs
mov
stos
jnp
or
xor
aaa
push
push
xchg
hlt
mov
add
std
fist
imul
cmp
pop
or
(bad)
(bad)
(bad)
mov
push
pushf
fidiv
push
or
jl
xchg
adc
adc
add
jo
cmp
mov
adc
xchg
iret
or
jmp
push
(bad)
(bad)
jg
dec
jno
loopne
adc
scas
lods
sub
mov
xchg
mov
lds
inc
or
(bad)
push
dec
or
lods
push
sub
out
retf
mov
scas
js
sub
mov
push
mov
push
jo
adc
or
stos
push
stc
iret
jp
mov
lods
mov
cmps
cvtpi2ps
mov
nop
call
call
sub
je
pop
xchg
scas
mov
cmp
jle
xchg
push
call
push
adc
xchg
loop
rcr
stos
arpl
daa
fninit
add
push
(bad)
(bad)
call
bound
outs
inc
fld
jmp
cwde
test
sub
sub
(bad)
(bad)
call
enter
outs
xor
fs
call
sub
mov
xor
(bad)
(bad)
jmp
fs
enter
sub
mov
dec
sbb
ds
leave
ret
jg
int3
cmp
lock
mov
pushf
scas
sbb
jb
push
retf
(bad)
out
(bad)
(bad)
(bad)
fbld
cli
xchg
push
mov
or
ret
xchg
cld
shl
bnd
inc
or
push
push
outs
repnz
(bad)
fcomip
test
xor
mov
retf
pop
imul
outs
jmp
add
(bad)
dec
or
push
in
pop
xor
fs
mov
push
shl
pop
dec
iret
ins
scas
clc
add
icebp
push
or
mov
outs
lods
scas
mov
test
call
push
loopne
xchg
push
out
test
xchg
pop
call
js
push
clc
ins
pusha
or
(bad)
(bad)
jmp
pusha
and
pop
or
call
jg
int3
sub
pusha
pop
mov
push
mov
cmp
loope
(bad)
inc
xor
repz
lock
jle
jmp
mov
dec
repz
cmp
repz
(bad)
jmp
jo
fisubr
pminsw
xchg
add
inc
fidiv
(bad)
frstor
fwait
push
(bad)
jne
xchg
(bad)
ins
test
shl
imul
nop
and
repz
(bad)
mov
mov
ficomp
mov
inc
pop
sub
lea
xchg
push
inc
adc
ins
cmp
add
cli
inc
cmps
xchg
test
mov
pop
cmp
push
mov
movs
in
inc
loope
lods
lods
sahf
addr16
(bad)
call
add
jmp
dec
mov
test
das
mov
iret
scas
(bad)
push
(bad)
(bad)
(bad)
(bad)
jns
mov
retf
fisttp
inc
mov
pop
sub
ret
push
ret
shl
pop
mov
mov
sbb
xlat
dec
add
dec
add
scas
or
push
add
fistp
cmp
mov
emms
and
push
mov
sub
into
retf
dec
dec
sub
loopne
pop
aad
cmps
pop
pop
das
push
movs
pop
add
(bad)
cdq
inc
add
call
inc
pop
pop
sahf
sub
into
xchg
imul
stos
adc
push
call
pushf
retf
std
jmp
adc
shl
call
mov
call
xor
dec
or
cli
mov
sbb
shl
pop
mov
sub
mov
(bad)
(bad)
(bad)
(bad)
call
add
repnz
scas
push
out
(bad)
fsubp
iret
sbb
xchg
lds
ret
pop
outs
(bad)
(bad)
(bad)
jmp
xchg
mov
inc
cmp
pop
or
repnz
jp
loop
xchg
outs
jno
lods
(bad)
(bad)
(bad)
call
mov
sbb
sub
out
es
out
and
imul
(bad)
(bad)
(bad)
(bad)
dec
jmp
lods
imul
jb
mov
inc
xchg
adc
sub
jecxz
into
jg
cmc
push
mov
dec
dec
dec
out
ret
test
inc
call
movs
lods
(bad)
retf
pop
test
push
std
mov
and
push
pop
or
(bad)
(bad)
aas
test
dec
mov
and
mov
in
ret
xor
pop
(bad)
(bad)
(bad)
jmp
fstp
mov
pop
cwde
xchg
cdq
cmps
and
lock
jns
pop
ins
mov
fisubr
gs
(bad)
(bad)
(bad)
jmp
jmp
out
push
pop
jmp
or
into
push
stc
in
gs
mov
jl
xor
clc
push
cld
out
call
inc
mov
push
xlat
(bad)
mov
add
lods
mov
jmp
outs
xor
xor
mov
jmp
jmp
ret
mov
loope
and
jge
out
jmp
cmp
(bad)
retf
fbstp
scas
cmps
sub
cwde
cwde
add
fst
dec
stos
sahf
stc
(bad)
test
(bad)
dec
lods
jl
and
sar
push
and
sbb
pusha
jbe
cmp
inc
imul
sub
retf
mov
cld
xor
into
ror
cmp
or
pop
jmp
jb
gs
std
stos
inc
lds
imul
sbb
movs
xchg
scas
js
jmp
inc
lock
imul
(bad)
jmp
clc
jmp
jo
arpl
dec
lahf
xchg
(bad)
push
loop
(bad)
cli
pop
sub
leave
jmp
pusha
mov
or
js
mov
(bad)
push
mov
xchg
je
push
xor
stc
sbb
jae
add
mov
pop
sbb
push
dec
push
lods
retf
and
push
idiv
cmp
mov
(bad)
jmp
sbb
xchg
sar
std
ins
hlt
rcl
std
aaa
sbb
adc
test
arpl
jg
cmp
jb
mov
dec
mov
push
sbb
cli
jle
mov
(bad)
jmp
xchg
outs
jmp
aam
sahf
loopne
inc
mov
call
lea
push
and
(bad)
pop
(bad)
(bad)
(bad)
jmp
dec
adc
mov
iret
pop
lahf
lock
xchg
std
sti
ficomp
iret
pop
sub
addr16
inc
out
and
lods
push
aas
pop
imul
ret
stos
fmul
lods
call
(bad)
(bad)
jmp
call
sbb
dec
shr
and
xchg
sub
ds
(bad)
fist
les
jp
add
fistp
sbb
call
call
push
call
cdq
cmps
pop
shl
cmp
std
sub
call
push
loopne
mov
sub
test
cmp
dec
(bad)
xchg
jmp
inc
(bad)
inc
cld
xchg
adc
push
ds
jge
popa
mov
dec
ins
pop
(bad)
(bad)
(bad)
dec
jmp
xor
ja
mov
mov
aas
out
ins
outs
fbstp
inc
dec
call
lods
adc
push
mov
lea
fist
ret
and
loope
lahf
jmp
imul
test
cmps
(bad)
nop
sbb
stos
les
sti
cmc
(bad)
(bad)
inc
sub
clc
ret
sahf
sub
(bad)
cvtps2pd
retf
stc
xor
(bad)
(bad)
fistp
sar
xchg
lods
xlat
stos
lods
pusha
aaa
vphaddbd
sbb
(bad)
(bad)
(bad)
mov
popa
cmps
push
ins
(bad)
loope
mov
jnp
or
pop
(bad)
mov
rol
(bad)
(bad)
inc
jecxz
test
int3
mov
pop
leave
sub
adc
mov
sub
jg
xchg
jmp
test
fdivr
(bad)
(bad)
jmp
retf
icebp
pushf
stc
xchg
pushf
fisub
scas
sbb
mov
or
(bad)
(bad)
call
mov
adc
xchg
inc
mov
fs
fwait
adc
(bad)
(bad)
(bad)
dec
scas
mov
stos
test
push
mov
xchg
arpl
xchg
(bad)
jp
jmp
arpl
repnz
mov
imul
mov
ret
scas
daa
(bad)
sub
call
pop
pop
hlt
mov
loop
push
cmp
pop
hlt
call
push
(bad)
and
(bad)
and
sub
and
or
stc
mov
shl
imul
js
sbb
or
xchg
aaa
fsubr
lahf
and
add
fbld
iret
pop
mov
ins
ins
or
addr16
stos
out
sub
icebp
mov
jmp
mov
mov
inc
mov
pusha
and
jmp
mov
aad
xor
xchg
xchg
add
and
hlt
(bad)
(bad)
(bad)
mov
movs
mov
jge
and
xchg
scas
or
mov
fwait
idiv
(bad)
call
push
fwait
xchg
inc
es
ret
cmps
cmp
call
dec
push
inc
stc
outs
stos
jmp
dec
xlat
in
adc
or
push
outs
(bad)
call
or
jo
push
scas
(bad)
(bad)
(bad)
call
aad
clc
fwait
xchg
jg
out
sbb
popf
rol
ins
jns
mov
or
call
(bad)
jg
test
push
jno
or
test
sbb
scas
(bad)
jmp
mov
out
(bad)
sahf
and
sbb
add
(bad)
call
(bad)
mov
sti
jp
cwde
push
hlt
sahf
nop
scas
into
mov
aas
pop
xchg
jmp
outs
inc
lahf
and
ds
and
xor
test
icebp
pop
cmc
xchg
or
ss
test
ror
mov
xor
sub
jle
push
call
retf
push
scas
lock
movs
stos
in
push
arpl
xor
imul
sub
es
scas
(bad)
xor
or
add
stos
(bad)
(bad)
(bad)
jmp
imul
iret
js
out
push
jmp
push
sub
pushf
mov
(bad)
sbb
movs
sub
(bad)
(bad)
call
push
sbb
push
push
mov
push
mov
inc
sbb
int
test
call
jg
dec
call
ins
pop
or
jns
in
xlat
test
into
fs
xlat
push
push
jg
push
adc
stos
rcl
fwait
mov
sub
leave
mov
cmp
outs
sub
daa
test
(bad)
jnp
scas
iret
mov
sbb
jmp
sahf
scas
jge
inc
mov
fisub
pop
dec
add
mov
int
(bad)
(bad)
jmp
dec
fwait
cmps
add
nop
outs
ins
in
sbb
pusha
cmp
mov
push
xlat
cs
push
iret
and
inc
xchg
retf
mov
jmp
in
dec
repz
fisubr
mov
mov
sbb
scas
mov
scas
mov
dec
dec
es
push
jmp
inc
call
in
cs
and
cmp
stos
(bad)
clc
fsubr
scas
mov
(bad)
(bad)
(bad)
dec
cmp
add
enter
test
mov
push
cmps
ror
sub
test
add
push
dec
push
pop
in
sub
(bad)
out
pop
mov
cs
jne
adc
(bad)
call
inc
in
pop
call
ds
stos
push
pop
or
out
aas
inc
aas
sub
(bad)
jg
sub
or
(bad)
fwait
and
cli
dec
sub
sub
repz
(bad)
mov
fadd
stos
add
xor
inc
test
jp
cld
(bad)
(bad)
dec
pop
xor
xchg
movs
and
or
xor
(bad)
xlat
pushf
adc
dec
call
loop
popf
dec
dec
enter
(bad)
(bad)
cmp
sti
into
xchg
call
mov
sbb
push
(bad)
loop
mov
dec
data16
jmp
mov
imul
pop
pop
xchg
jecxz
out
scas
sbb
push
fwait
shl
retf
test
xor
loopne
fwait
arpl
mov
inc
(bad)
cwde
cmp
dec
jmp
jmp
inc
push
push
xchg
push
xchg
ss
int3
iret
mov
out
(bad)
(bad)
dec
sub
mov
cli
gs
adc
lods
mov
cmp
leave
mov
das
clc
mov
cmp
sub
mov
cmp
sbb
inc
outs
mov
call
cs
mov
scas
ins
lods
ins
jmp
xchg
jns
lods
fiadd
xchg
clc
sbb
cmp
(bad)
jmp
scas
adc
sbb
adc
fisub
aam
pusha
mov
cmp
fcomip
xchg
aam
dec
mov
fsubr
repnz
dec
nop
push
push
pop
xchg
(bad)
(bad)
mov
and
push
sub
jmp
sti
mov
(bad)
das
inc
loopne
inc
jecxz
(bad)
call
ds
mov
retf
call
xchg
add
add
mov
retf
out
(bad)
fisttp
mov
aam
iret
push
dec
call
fwait
push
mov
or
outs
sub
xor
push
dec
jmp
(bad)
call
xor
test
mov
push
jg
xlat
mov
out
shr
cs
stos
inc
lods
pop
cmp
xor
xchg
popf
jno
scas
cmps
xor
test
lds
(bad)
mov
pop
pop
dec
xor
(bad)
jg
mov
inc
xchg
stos
imul
inc
xchg
iret
jne
fwait
push
adc
push
xor
sub
cmp
fwait
dec
dec
loopne
or
popf
cmps
cld
xchg
sbb
dec
fcmove
adc
(bad)
(bad)
(bad)
call
sbb
mov
add
icebp
je
ds
fs
sbb
sbb
iret
std
aaa
(bad)
test
sbb
pushf
es
jmp
push
mov
imul
stos
pop
fwait
popa
xor
push
div
mov
jnp
push
sub
mov
mov
icebp
scas
(bad)
cmp
adc
aad
adc
(bad)
arpl
pop
aad
dec
adc
sahf
xchg
dec
lock
add
jmp
adc
lods
lds
out
and
mov
push
jg
pop
aad
mov
cmp
mov
push
lock
push
adc
bound
bound
mov
std
and
add
into
ja
scas
into
int
daa
inc
or
lea
in
mov
or
jns
sbb
data16
dec
xchg
adc
xlat
or
mov
mov
add
mov
and
aaa
std
dec
adc
cmps
das
sub
cmc
mov
jmp
sar
xchg
icebp
stos
mov
mov
stos
inc
mov
mov
adc
int
cmp
ins
loop
les
out
ins
les
call
sub
call
jb
cmps
mov
shl
mov
xor
nop
push
movs
push
lods
jmp
sti
push
pop
loopne
test
mov
std
(bad)
push
lahf
dec
push
pop
adc
sar
mov
mov
sbb
mov
(bad)
call
ins
mov
sub
jp
outs
xchg
mov
mov
adc
mov
into
mov
mov
or
ret
or
lods
lock
(bad)
(bad)
mov
callw
pop
xor
xor
pop
das
push
or
aaa
cld
or
jmp
fcom
(bad)
call
pop
ins
inc
test
dec
pop
push
arpl
mov
in
mov
cli
(bad)
(bad)
(bad)
fbstp
cmps
sub
scas
or
shr
ret
mov
cwde
xchg
mov
cmps
xor
pop
jo
test
mov
bound
stos
mov
fisub
cld
sub
(bad)
(bad)
call
scas
dec
mov
std
daa
movs
cld
xchg
std
cmp
or
dec
iret
retf
jecxz
pop
add
fisttp
add
fist
add
mov
repnz
or
(bad)
(bad)
dec
lahf
xchg
mov
test
fdivrp
sbb
xchg
mov
mov
js
call
jp
pop
leave
ret
push
leave
pushf
pop
inc
imul
aam
mov
fistp
(bad)
(bad)
jmp
sub
jp
mov
stos
iret
scas
adc
cmps
mov
gs
fcomip
mov
scas
sbb
outs
sub
sub
dec
call
xchg
iret
mov
jecxz
bswap
lahf
iret
stos
push
pop
lock
call
js
mov
xchg
fisttp
fadd
inc
fisttp
call
and
sbb
fist
fs
outs
lods
or
stos
int
cmp
mov
in
xchg
mov
mov
pop
out
add
out
in
call
(bad)
(bad)
(bad)
dec
aaa
data16
pop
cmps
sub
stos
ror
mov
outs
push
mov
sbb
jmp
call
sub
fwait
sub
sub
lock
daa
je
sar
js
jmp
(bad)
(bad)
(bad)
jp
loop
dec
std
mov
rol
out
scas
sub
lods
or
jle
bound
mov
and
(bad)
inc
mov
mov
loopne
mov
lahf
scas
and
(bad)
mov
lock
sub
xor
mov
movs
call
je
int3
movs
bound
sahf
mov
mov
das
sahf
retf
cli
inc
push
mov
xchg
adc
in
jne
call
sub
or
int3
mov
pusha
scas
mov
loop
(bad)
in
or
(bad)
call
mov
pop
xchg
xlat
outs
sub
lock
or
es
push
scas
cld
pop
(bad)
clc
outs
cmp
(bad)
(bad)
mov
dec
fld
inc
(bad)
dec
lods
cwde
or
(bad)
call
push
push
mov
mov
sub
push
(bad)
out
test
nop
sub
sbb
mul
or
ins
jmp
(bad)
(bad)
call
pop
jmp
stos
retf
cwde
cli
pop
int3
adc
addr16
mov
(bad)
(bad)
call
clc
outs
or
lds
sub
leave
add
add
pop
outs
pushf
loop
or
adc
inc
mov
(bad)
call
fs
xor
mov
xchg
sub
and
addr16
jmp
mov
je
daa
mov
fld
and
push
push
and
sar
push
cmp
jne
popa
bound
(bad)
(bad)
(bad)
(bad)
sti
push
psrld
out
adc
xor
fs
mov
adc
pop
cmps
(bad)
(bad)
(bad)
(bad)
push
cmp
inc
push
js
lahf
lods
ret
mov
pop
std
jp
jnp
sbb
dec
ins
jmp
inc
cli
add
(bad)
(bad)
push
(bad)
mov
sbb
lahf
bnd
or
scas
shrd
push
fild
xor
cmp
adc
pop
imul
(bad)
(bad)
(bad)
fistp
movs
xor
cmps
bound
daa
out
ins
pop
dec
ss
fneni(8087
dec
mov
add
mov
enter
or
mov
mov
add
(bad)
call
in
stos
idiv
jp
sub
ret
loop
dec
xchg
(bad)
(bad)
call
mov
mov
fcom
mov
scas
push
iret
pop
xchg
or
(bad)
(bad)
(bad)
mov
sahf
pop
dec
scas
std
(bad)
sub
cmp
sbb
or
mov
loop
stos
idiv
add
or
jnp
aad
je
dec
and
mov
or
sar
jmp
clc
stos
sub
ja
out
mov
aas
lods
inc
or
mov
cli
(bad)
(bad)
imul
stos
xor
pop
dec
ss
popf
sti
fucomi
out
ret
(bad)
(bad)
push
sbb
cmps
sub
jns
loope
inc
dec
jl
cmp
jns
mov
loope
mov
(bad)
jmp
(bad)
or
jne
mov
sbb
outs
xlat
inc
loope
iret
sub
(bad)
pop
stos
arpl
addr16
(bad)
(bad)
call
test
mov
push
mov
cmps
movs
mov
dec
fldcw
sub
adc
(bad)
call
lods
scas
xchg
in
das
cmp
mov
or
cmps
jp
adc
add
es
cmp
xor
(bad)
(bad)
(bad)
(bad)
call
cmps
mov
sub
cs
mov
cdq
in
int
adc
cmc
(bad)
push
pop
out
(bad)
test
mov
xchg
ret
call
add
popa
clc
call
ret
mov
push
test
jno
bnd
lahf
icebp
shl
into
cli
std
mov
(bad)
(bad)
jmp
mov
addr16
enter
and
mov
xor
mov
mov
xor
jae
nop
xor
dec
shl
lods
rcl
mov
and
adc
shrd
retf
repnz
call
sub
bound
jge
mov
push
mov
(bad)
ds
cmp
fadd
(bad)
xchg
cs
mov
mov
dec
iret
loope
(bad)
jmp
scas
add
jb
(bad)
es
mov
daa
in
iret
sub
pop
jnp
mov
(bad)
in
mov
test
pop
call
and
(bad)
jmp
lods
test
cmp
jmp
pop
jbe
repnz
ss
or
cmps
sub
jbe
pop
out
cmp
mov
clc
inc
sub
mov
jmp
dec
sub
mov
pop
sub
sar
call
jbe
push
mov
iret
fucomp
cmp
ss
dec
lahf
lods
repnz
imul
fwait
inc
push
cmp
mov
sahf
push
push
in
push
jp
mov
ss
mov
pop
hlt
(bad)
push
por
lock
jmp
sub
xchg
fsub
lods
out
js
dec
(bad)
mov
pop
jmp
xchg
das
test
cmps
fist
imul
push
cld
add
jae
lods
sub
inc
call
sub
jmp
sbb
(bad)
(bad)
mov
xlat
mov
dec
xor
mov
scas
add
pop
clc
(bad)
(bad)
jmp
push
scas
dec
test
in
cmps
xchg
mov
and
(bad)
(bad)
jbe
es
or
sahf
scas
fwait
or
jnp
push
mov
cmp
xchg
call
dec
add
and
stos
xor
pop
mov
jle
nop
sub
add
mov
pop
jmp
ds
cld
add
leave
mov
jno
adc
inc
(bad)
mov
ja
fmul
(bad)
jp
cli
adc
adc
ss
and
jg
dec
jno
gs
(bad)
(bad)
(bad)
call
in
mov
mov
stos
ss
popa
pop
sub
inc
or
xor
dec
add
jmp
pop
sub
imul
push
cmp
jmp
into
mov
mov
cmp
(bad)
mov
mov
call
adc
and
int3
mov
push
xor
mov
(bad)
call
test
mov
inc
and
pop
mov
mov
int
dec
xor
mov
sub
xchg
fwait
dec
out
stos
fs
mov
(bad)
jg
pop
mov
add
call
xor
ins
ds
or
jle
add
mov
mov
mov
mov
ins
fdivrp
pop
add
aas
and
adc
lahf
js
es
sbb
pop
das
pop
(bad)
lock
call
adc
jmp
shl
(bad)
mov
lea
mov
mov
push
mov
fwait
(bad)
push
push
fbstp
fistp
adc
cmp
loopne
and
lods
(bad)
push
call
cli
cmc
or
ja
aad
sbb
(bad)
jg
loop
mov
dec
cmp
hlt
fstp
cli
outs
mov
xor
outs
das
sti
call
mov
cmp
ficom
xchg
retf
(bad)
mov
fimul
iret
lods
dec
imul
push
cmps
lods
test
in
jmp
(bad)
(bad)
(bad)
(bad)
out
mov
cmp
adc
cs
sbb
leave
scas
data16
cli
sub
and
out
clc
(bad)
jns
repz
loopne
js
movs
dec
out
sahf
icebp
inc
scas
das
es
push
into
mov
dec
ds
out
cld
ss
scas
cli
inc
add
jecxz
push
xchg
dec
int3
push
pop
outs
dec
rcr
cmc
push
dec
mov
xor
(bad)
push
adc
ins
inc
dec
add
out
mov
sbb
enter
retf
sbb
mov
mov
inc
fcomp
sub
repnz
(bad)
(bad)
(bad)
fmul
push
popf
or
rol
xchg
ss
scas
movs
jle
js
dec
out
aam
pop
mov
(bad)
scas
inc
inc
dec
call
(bad)
jg
mov
ins
stc
in
loop
rep
mov
cmp
adc
out
imul
or
cli
and
lods
push
repnz
jp
mov
mov
jl
cwde
jnp
and
cs
(bad)
popw
scas
jle
(bad)
(bad)
fcomip
mov
lahf
jbe
outs
mov
inc
adc
clc
jns
and
mov
xlat
bound
mov
push
movs
inc
sahf
and
mov
std
fisttp
mov
outs
push
dec
loop
sbb
cld
iret
mov
pop
or
inc
repz
ret
sahf
jmp
cmp
(bad)
jmp
sbb
cmps
mov
dec
outs
sub
cs
xchg
and
sub
add
sub
(bad)
jmp
cmp
sar
jo
lea
and
cmp
imul
in
adc
cwde
cwde
rcr
adc
stc
mov
sub
mov
dec
xor
sub
sub
out
or
loop
push
and
dec
jmp
test
cmps
cmp
out
int
fldenv
lahf
cmp
pop
(bad)
inc
cmc
and
imul
push
pusha
jnp
xchg
aam
data16
dec
push
mov
pushf
fld
js
stc
sub
push
push
ret
daa
mov
sbb
jp
pop
sbb
(bad)
jb
and
push
dec
(bad)
je
inc
sbb
sub
nop
stc
ss
mov
imul
push
(bad)
(bad)
fucomi
jl
test
call
sub
push
scas
loopne
(bad)
(bad)
jmp
cdq
mov
nop
mov
(bad)
pop
inc
imul
aad
js
lods
push
push
push
out
xlat
je
sbb
mov
cmp
out
fdivr
retf
mov
test
ins
clc
push
fcomip
std
(bad)
js
int3
enter
pushf
dec
jecxz
ret
mov
or
inc
jbe
or
stos
sub
sub
and
in
pop
push
es
call
es
push
sbb
mov
add
jl
and
add
movs
cmps
in
call
imul
std
call
lea
sub
popf
cmp
dec
scas
xchg
stos
fldenv
mov
(bad)
(bad)
(bad)
mov
dec
pop
cmp
mov
sub
xchg
dec
repnz
int3
sub
call
(bad)
jmp
addr16
dec
push
cwde
nop
pop
mov
pop
push
push
out
xchg
cli
xor
and
sbb
(bad)
(bad)
(bad)
jmp
mov
sbb
lds
inc
adc
push
xchg
sub
pushf
stc
or
ins
mov
(bad)
jmp
cs
clc
push
mov
push
imul
mov
clc
fistp
lock
push
cmp
mov
cmps
outs
loop
adc
adc
dec
(bad)
(bad)
jmp
cmps
aaa
push
jne
shl
xchg
out
outs
mov
sub
mov
mov
or
call
call
dec
ins
popa
xor
outs
xchg
xor
jo
fimul
push
jns
pusha
mov
enter
(bad)
jmp
aaa
scas
pop
scas
jmp
mov
pop
dec
pop
scas
jl
and
mov
xor
(bad)
(bad)
(bad)
dec
sub
shl
fild
xchg
neg
mov
adc
outs
jecxz
cdq
mov
inc
test
aas
out
loopne
xchg
sub
or
jb
jae
rol
jecxz
(bad)
(bad)
call
movs
nop
fwait
stc
mov
pop
jnp
xor
daa
sub
fldcw
mov
sbb
inc
cld
dec
push
bound
in
leave
lahf
sbb
scas
jb
add
mov
lock
(bad)
(bad)
dec
xor
pop
push
aaa
rcl
sub
pusha
adc
jns
je
(bad)
(bad)
call
jmp
cld
das
sbb
cmc
mov
loopne
cwde
jb
jb
dec
fsub
xchg
sar
jmp
add
mov
xchg
sub
outs
pop
or
sbb
jmp
pop
push
(bad)
(bad)
jmp
pop
cli
mov
stos
cmp
std
pop
fnstcw
ja
xchg
sbb
jle
or
hlt
sar
call
adc
(bad)
call
dec
arpl
stos
pop
adc
scas
dec
xor
cwde
and
adc
popa
es
or
cmp
push
inc
or
and
push
leave
or
push
jb
test
cmc
imul
call
cmp
jg
pop
sub
xor
sbb
push
adc
cmp
fidiv
xor
dec
ins
push
mov
sub
jmp
mov
push
jb
jp
pushf
jmp
mov
jl
mov
js
imul
test
xor
jmp
(bad)
call
add
and
call
adc
jo
cmp
pop
mov
xlat
dec
jge
jne
lahf
push
ja
jb
jno
icebp
loop
mov
test
pop
call
jo
mov
(bad)
(bad)
out
clc
jmp
or
cmps
or
dec
pop
mov
mov
es
call
pop
icebp
jmp
std
clc
cli
or
retf
jecxz
in
sbb
jmp
pop
pop
loopne
ret
jns
test
retf
ret
movs
(bad)
cmp
pop
in
jp
std
enter
pop
push
fdivrp
(bad)
(bad)
inc
xor
mov
jp
iret
iret
jb
xchg
push
dec
push
(bad)
mov
add
fsub
add
(bad)
call
nop
cld
imul
cmp
pusha
call
jo
enter
fcomp
nop
dec
out
enter
(bad)
call
gs
or
in
out
push
js
int3
mov
fidiv
pop
fwait
sar
(bad)
mov
mov
test
sbb
std
leave
inc
in
call
fdiv
fs
clc
mul
pop
xchg
(bad)
jmp
jl
adc
add
mov
mov
jg
clc
adc
or
dec
call
shl
push
test
push
cmp
push
pop
in
sahf
loop
mov
mov
lods
adc
mov
sub
dec
test
repz
scas
retf
sub
js
fidivr
cmps
lds
or
cmc
sbb
mov
mov
inc
(bad)
in
(bad)
(bad)
(bad)
(bad)
out
xor
mov
mov
sub
imul
sbb
idiv
mov
stos
jp
vminpd
ins
mov
mov
test
mov
sti
scas
scas
or
mov
xor
jmp
fild
dec
mov
and
push
sbb
scas
mov
call
adc
not
shl
sbb
ret
cmps
(bad)
inc
loopne
gs
add
add
(bad)
(bad)
dec
xor
mov
test
fild
pop
jle
test
mov
(bad)
(bad)
(bad)
inc
cmp
mov
sbb
in
add
sub
js
sub
xor
xchg
stc
nop
cs
(bad)
(bad)
jmp
mov
cdq
movs
dec
or
cwde
pop
and
pop
pop
pushf
out
lahf
mov
lods
sub
mov
(bad)
(bad)
(bad)
clc
cmp
nop
mov
aaa
std
fsubr
fidivr
lea
xor
(bad)
call
push
and
or
lods
xchg
dec
rcr
pop
imul
cmps
jle
scas
(bad)
(bad)
dec
xchg
mov
xchg
add
xchg
fbld
imul
jmp
out
cdq
adc
jle
js
mov
fs
popf
dec
(bad)
in
sahf
call
ret
call
test
or
(bad)
xor
mov
and
cmovnp
(bad)
(bad)
(bad)
jmp
mov
movs
cmp
add
scas
xor
jnp
test
call
(bad)
(bad)
cmp
pop
jg
test
cli
push
loop
cmp
sar
jb
mov
push
das
jmp
call
test
pop
inc
dec
icebp
jae
inc
mov
sub
nop
sub
icebp
je
fiadd
sub
mov
jmp
std
cmp
loop
ss
jecxz
jmp
jo
mov
mov
sub
neg
sahf
cli
xor
mov
(bad)
(bad)
mov
in
jbe
sbb
sbb
mov
jmp
lahf
jle
push
std
hlt
or
stos
cld
fbld
push
scas
clc
mov
pop
iret
jno
cwde
sbb
pusha
(bad)
dec
xlat
lods
jl
outs
jmp
ret
test
(bad)
(bad)
jmp
jo
adc
dec
sub
call
idiv
inc
(bad)
into
ss
dec
out
ror
mov
stc
retf
sbb
std
mov
and
in
add
imul
(bad)
(bad)
jmp
mov
iret
(bad)
sub
push
add
into
jmp
sub
pop
sub
lods
sub
fwait
or
cld
fsubr
dec
push
dec
idiv
fcmove
(bad)
aam
lds
imul
xchg
jecxz
jmp
inc
dec
imul
aas
ds
fcomip
jmp
imul
stos
xchg
lock
dec
mov
(bad)
call
cwde
dec
cli
sbb
xor
inc
(bad)
cs
or
int
and
pop
dec
(bad)
dec
and
sahf
dec
or
pop
mov
test
sar
jmp
(bad)
sub
imul
repnz
imul
and
pop
loopne
xchg
(bad)
(bad)
(bad)
jmp
cmp
dec
jo
in
loope
(bad)
fisttp
xor
sub
aaa
call
(bad)
(bad)
dec
mov
mov
mov
stos
clc
minps
xor
push
mov
call
lahf
bound
in
sub
sar
std
dec
add
dec
(bad)
(bad)
(bad)
fcmovnu
mov
call
arpl
sub
push
cmp
lock
imul
push
mov
jle
push
(bad)
(bad)
(bad)
(bad)
jg
rol
xor
lods
and
retf
test
pop
pop
cld
sub
inc
mov
(bad)
(bad)
in
repz
cld
dec
cmp
mov
out
mov
movs
pop
out
call
xchg
retf
in
(bad)
(bad)
(bad)
stc
jmp
call
sbb
shl
dec
(bad)
into
xlat
push
mov
xchg
call
stos
(bad)
fidiv
cli
mov
cmp
shl
sub
(bad)
(bad)
dec
(bad)
loope
cmps
push
ret
(bad)
pop
mov
icebp
dec
scas
mov
or
stc
mov
(bad)
(bad)
jns
out
in
lds
fs
xchg
scas
call
or
sahf
int3
cdq
(bad)
call
sbb
lahf
(bad)
(bad)
(bad)
dec
test
cs
cmp
xchg
xor
and
jp
sbb
aas
mov
sahf
(bad)
call
pop
dec
pop
icebp
mov
pop
sbb
(bad)
(bad)
(bad)
jg
outs
sbb
dec
mov
inc
add
into
sahf
mov
(bad)
(bad)
jmp
mov
dec
out
or
push
and
ret
push
dec
cdq
adc
dec
sub
in
fs
into
sbb
(bad)
inc
in
bound
(bad)
push
adc
scas
jns
out
jbe
(bad)
cmp
ss
(bad)
jmp
pop
retf
lods
or
and
fbld
sbb
push
and
(bad)
out
xor
mov
push
mov
fistp
mov
paddsb
push
lahf
sbb
loopne
inc
enter
and
movs
mov
xchg
mov
std
(bad)
(bad)
call
sub
in
xchg
push
mov
cmp
sbb
jbe
mov
or
jle
cwde
es
dec
mov
dec
call
jmp
jle
fld
dec
or
inc
dec
out
sbb
pop
inc
(bad)
in
(bad)
push
jmp
or
cs
cmps
fstp
int3
and
dec
(bad)
(bad)
(bad)
inc
mov
xchg
std
cli
rcr
scas
movs
sti
xchg
in
mov
(bad)
cmp
xchg
mov
push
add
pusha
nop
jmp
sbb
std
and
cwde
push
dec
ds
imul
inc
es
repnz
call
cs
and
or
xor
ins
jle
(bad)
(bad)
(bad)
or
lea
mov
outs
sti
or
mov
sbb
(bad)
(bad)
(bad)
out
in
pop
xlat
call
scas
inc
ins
in
in
sbb
(bad)
ins
int
cmps
stc
sbb
(bad)
(bad)
mov
mov
das
mov
sub
jae
lea
dec
(bad)
jmp
mov
movs
pop
cwde
cmp
xchg
lahf
jl
in
adc
pop
mov
add
(bad)
(bad)
call
mov
sub
mov
dec
es
test
or
shl
mov
sub
(bad)
(bad)
push
push
adc
mov
mov
or
push
inc
dec
lods
mov
push
push
test
pop
jmp
scas
movs
push
call
call
dec
xor
xor
hlt
mov
fisubr
bound
inc
sti
test
or
push
dec
lds
ss
shl
test
pushf
(bad)
(bad)
jg
cld
movs
jo
in
jge
mov
sbb
pop
sbb
push
sti
dec
xchg
jecxz
pusha
sti
or
push
std
clc
outs
and
movs
je
scas
and
mov
(bad)
jnp
daa
dec
and
bound
mov
cwde
jns
mov
repnz
adc
aaa
std
(bad)
jmp
jp
mov
lds
sbb
sbb
or
imul
jmp
dec
xchg
imul
(bad)
(bad)
jns
cmp
adc
aad
sub
pop
pop
mov
(bad)
dec
mov
pop
pop
or
xchg
push
in
cli
push
fsub
add
stos
mov
adc
bound
mov
dec
dec
clc
jmp
mov
call
jo
push
std
dec
xlat
dec
jb
xlat
sbb
sub
and
std
cmp
test
jge
jmp
imul
jbe
cwde
aam
lea
nop
(bad)
mov
(bad)
jmp
pop
mov
cmp
test
xor
bound
inc
scas
(bad)
out
inc
cld
scas
aad
call
add
mov
push
or
xor
push
xchg
xchg
fs
ja
mov
(bad)
jmp
cld
xor
or
or
jmp
pop
scas
fcmovu
lock
adc
sub
cld
cli
call
std
sbb
jmp
adc
mov
(bad)
jmp
adc
outs
mov
daa
sbb
cs
(bad)
inc
mov
or
add
je
pop
mov
sub
das
mov
sbb
jmp
dec
pop
out
ror
mov
(bad)
(bad)
inc
xor
mov
test
repnz
pop
cli
sbb
dec
mov
mov
loop
iret
jle
nop
fldcw
adc
lock
(bad)
fist
xchg
(bad)
(bad)
and
(bad)
sbb
jb
add
dec
fdivp
dec
adc
lahf
or
test
ja
inc
and
imul
mov
test
xchg
inc
aad
fcomip
dec
stos
mov
xor
mov
xchg
(bad)
sti
fisttp
mov
sub
mov
sub
and
mov
push
loopne
push
xchg
jmp
clc
inc
push
xchg
and
dec
dec
mov
call
mov
in
sub
das
and
(bad)
out
dec
pop
cmp
mov
mov
sub
dec
movs
cmc
pop
inc
sbb
(bad)
jmp
and
add
inc
ins
mov
inc
sub
(bad)
inc
jnp
sub
lods
sub
mov
jb
popa
dec
or
into
dec
cmps
cwde
pop
inc
data16
outs
in
(bad)
(bad)
(bad)
call
fild
sub
mov
cmp
and
imul
(bad)
(bad)
(bad)
jmp
bound
fisubr
rol
adc
sbb
inc
enter
dec
jo
mov
std
adc
(bad)
test
cmp
pusha
cs
mov
jmp
daa
and
mov
jbe
cmp
inc
inc
scas
cmps
outs
movs
enter
fidiv
mov
call
push
mov
inc
scas
(bad)
mov
(bad)
call
push
xchg
cmp
leave
mov
sub
fsubr
(bad)
push
inc
push
inc
push
aam
inc
push
jg
movs
loop
cmc
stos
test
imul
(bad)
jg
xlat
sbb
mov
mov
mov
cld
xchg
mov
sbb
stos
sti
jge
jg
push
cli
sti
jbe
lods
int3
mov
clc
push
push
jnp
js
clc
stos
cld
ror
mov
and
push
dec
mov
(bad)
(bad)
push
ret
ja
test
push
cmp
mov
mov
iret
test
lahf
pop
add
pop
lock
call
or
test
push
shl
(bad)
mov
jb
jnp
mov
je
jle
mov
jle
(bad)
jle
inc
sub
pop
(bad)
dec
inc
cwde
push
mov
and
jmp
fild
add
lahf
and
pop
xor
jge
icebp
(bad)
jmp
cld
push
adc
aas
pop
cmc
iret
inc
sub
or
jg
(bad)
lock
dec
or
sbb
xchg
sahf
rol
imul
ja
dec
mov
outs
das
sar
mov
retf
jmp
xchg
rol
(bad)
(bad)
jmp
push
xchg
pushf
ja
cdq
lock
inc
ja
repnz
cmp
in
(bad)
mov
xchg
mov
scas
or
cmp
sub
adc
mov
call
dec
ret
mov
jno
cmp
jecxz
es
mov
pop
mov
and
lahf
out
rcr
adc
push
pop
mov
sbb
jno
push
(bad)
cmp
pushf
xor
pushf
in
add
in
ss
loop
loope
ret
dec
inc
xor
or
pop
ins
cwde
(bad)
mov
shl
mov
sub
fwait
mov
(bad)
or
movs
mov
jo
(bad)
(bad)
jg
es
mov
call
dec
xor
adc
jne
lahf
push
and
lahf
sbb
(bad)
hlt
jmp
inc
mov
push
loop
in
scas
shr
mov
dec
(bad)
stc
sub
cmc
fmul
je
inc
dec
jno
adc
(bad)
inc
jge
or
pop
and
mov
cs
fist
jnp
cmp
jl
add
(bad)
(bad)
(bad)
jmp
popa
in
cwde
mov
ret
jno
sbb
mov
dec
(bad)
jmp
ss
(bad)
(bad)
call
loopne
xor
test
addr16
xor
xlat
lahf
pop
ret
adc
sti
dec
(bad)
(bad)
(bad)
call
fwait
or
retf
jmp
xchg
xor
sti
dec
add
jb
push
lds
fcmove
mov
add
call
push
mov
loope
sahf
sti
cwde
xchg
mov
mov
sbb
or
aaa
in
pop
and
sahf
sbb
or
in
sub
mov
jnp
mov
(bad)
(bad)
(bad)
dec
(bad)
std
jns
cs
in
call
iret
fisttp
(bad)
jg
cmps
in
xchg
neg
xchg
cmp
jne
(bad)
retf
cdq
pop
cmps
inc
cmp
(bad)
push
push
dec
lods
xchg
jo
or
fist
in
sbb
and
clc
sub
jge
pop
cmp
xor
imul
inc
mov
fisttp
or
pushf
pop
(bad)
mov
cmps
add
scas
fild
sub
cs
sub
xor
imul
mov
into
(bad)
sbb
pop
jmp
xor
mov
lods
sub
stos
arpl
in
(bad)
jmp
(bad)
cmc
test
pop
mov
mov
jbe
loop
sub
(bad)
and
pop
(bad)
(bad)
(bad)
inc
inc
mov
and
rcl
in
dec
stos
push
inc
imul
add
mov
pop
iret
push
xor
add
cmps
cmc
outs
cli
cmc
push
jecxz
pop
rcl
mov
lds
test
out
test
ins
arpl
iret
jmp
cdq
in
and
inc
loop
div
mov
dec
cld
iret
sbb
mov
stos
inc
(bad)
push
sub
pop
call
pop
adc
js
jp
(bad)
scas
xchg
icebp
cld
cmp
lods
xchg
cld
fdiv
cmp
ins
add
lds
ret
xchg
js
xor
and
(bad)
jmp
sbb
add
dec
call
dec
call
pop
add
stos
iret
imul
pop
inc
mov
or
scas
(bad)
imul
icebp
xor
xor
mov
and
fnstcw
jmp
mov
xor
out
cmp
add
jmp
stos
cli
adc
fistp
sub
sbb
je
add
jbe
xchg
pop
mov
pop
pop
cmps
(bad)
(bad)
(bad)
jmp
cmps
fneni(8087
sbb
loop
push
enter
cmp
dec
mov
lock
adc
pop
mov
dec
cli
(bad)
sahf
pop
sub
(bad)
mov
dec
sbb
shr
adc
(bad)
(bad)
(bad)
(bad)
jnp
dec
push
(bad)
retf
in
test
sti
enter
data16
(bad)
lock
cmp
cld
(bad)
(bad)
call
inc
mov
dec
lahf
adc
imul
pusha
jne
or
or
imul
std
dec
sub
sbb
clc
(bad)
jmp
fwait
jae
icebp
into
dec
xchg
sub
mov
daa
and
es
data16
lea
cld
stos
(bad)
pusha
retf
xchg
jae
in
int
xchg
(bad)
(bad)
cld
xor
mov
loopne
pushf
add
sub
jp
inc
pop
add
(bad)
(bad)
std
cmp
jmp
leave
mov
sub
dec
inc
call
mov
test
(bad)
(bad)
(bad)
in
mov
sub
daa
std
imul
cmp
sub
mov
(bad)
jmp
xchg
pop
xor
sbb
addr16
mov
ficom
push
mov
dec
fldl2t
xchg
out
pushf
dec
pop
xchg
pop
or
stos
mov
sub
outs
mov
mov
push
sahf
mov
pop
sub
cmp
pop
jmp
dec
retf
pop
cli
call
mov
mov
shl
in
xchg
jg
jmp
imul
outs
mov
lods
jg
test
ins
push
adc
jecxz
loopne
mov
jb
pop
cmp
add
jno
movs
mov
aam
rcl
and
pushf
(bad)
push
dec
mov
mov
(bad)
jg
out
sbb
sbb
(bad)
rcl
(bad)
retf
scas
stos
xchg
shl
mov
add
push
(bad)
rcl
dec
push
push
(bad)
(bad)
(bad)
fist
daa
lods
ret
and
mov
aas
push
mov
lods
sub
mov
cmps
mov
mov
pop
adc
or
sbb
dec
push
out
mov
test
(bad)
jmp
imul
fwait
stc
push
jmp
push
xchg
outs
or
(bad)
call
cwde
lea
(bad)
push
outs
bound
mov
out
clc
sub
scas
pop
ins
lods
mov
xchg
repnz
push
(bad)
sbb
dec
arpl
bound
out
jo
pop
das
popf
cmps
(bad)
ds
sti
fbstp
(bad)
jge
mov
mov
cmp
or
imul
push
xor
(bad)
jg
add
cmp
pop
in
das
or
pop
out
stos
or
and
mov
leave
and
ret
jne
xor
and
cs
dec
pop
mov
mov
pusha
add
cmp
js
int
sub
nop
test
adc
sub
stos
add
pop
(bad)
sub
mov
(bad)
or
mov
mov
mov
fbld
inc
stos
mov
test
cmp
jg
cli
cmp
sub
addr16
jmp
push
add
(bad)
push
dec
lahf
inc
imul
ficom
es
ins
inc
or
or
adc
cs
mov
(bad)
jmp
lock
out
push
fimul
out
add
test
lahf
fldcw
or
dec
push
clc
enter
mov
sub
aaa
push
(bad)
(bad)
(bad)
push
shl
sub
test
call
ret
call
dec
and
inc
sub
(bad)
(bad)
jmp
loopne
mov
sbb
cmp
ins
jg
mov
push
mov
mov
cmp
(bad)
jl
inc
scas
movs
mov
pop
jecxz
loop
mov
call
(bad)
jmp
loop
xchg
sub
fmulp
dec
sub
lea
mov
retf
retf
dec
sub
es
and
jle
and
mov
push
loopne
dec
into
adc
ret
mov
mov
mov
cmps
mov
pusha
mov
jp
(bad)
call
push
add
call
sbb
xor
es
add
std
pop
loopne
jg
add
mov
mov
cdq
call
adc
mov
retf
(bad)
mov
stos
sub
adc
xlat
xlat
arpl
jle
int
(bad)
(bad)
(bad)
jg
pushf
xchg
jle
cmp
scas
leave
aas
mul
xchg
or
je
cmp
in
stos
push
mov
imul
popa
cs
mov
addr16
call
jmp
jns
jmp
jl
sub
cmp
and
mov
push
loope
xchg
in
push
pop
bound
mov
sub
(bad)
jg
jmp
mov
mov
call
scas
push
jmp
retf
hlt
mov
and
push
out
inc
in
(bad)
push
das
xchg
call
mov
fadd
sbb
inc
dec
push
or
out
shr
aad
cmp
fnstcw
daa
(bad)
jg
(bad)
pop
mov
mov
ror
push
pop
jmp
sti
(bad)
mov
mov
cmps
xor
push
jmp
ret
data16
(bad)
(bad)
jg
push
repnz
mov
or
adc
jns
mov
leave
mov
dec
add
imul
test
movs
ins
push
pop
(bad)
jg
jg
fnstenv
jmp
mov
push
push
cmps
clc
(bad)
(bad)
(bad)
jmp
inc
sbb
jbe
les
(bad)
push
mov
retf
mov
dec
push
pop
push
pop
(bad)
(bad)
(bad)
inc
call
daa
icebp
or
sbb
in
enter
movs
sub
mov
arpl
movs
test
cmp
jle
retf
pop
(bad)
(bad)
(bad)
push
(bad)
sub
pop
repz
jnp
fcmovne
in
retf
call
pop
mov
mov
sahf
xor
jmp
daa
sbb
add
adc
pop
mov
or
(bad)
fild
and
fisubr
xor
cmp
mov
ja
or
out
fbld
mov
pop
mov
(bad)
(bad)
(bad)
jge
sub
fwait
es
mov
and
jb
fidivr
pop
pop
into
(bad)
(bad)
(bad)
(bad)
jg
cdq
push
das
test
test
jns
pop
jb
and
push
jle
mov
mov
(bad)
(bad)
(bad)
call
jecxz
inc
retf
(bad)
loopne
dec
ds
sub
cmp
(bad)
adc
or
stos
movs
jl
scas
cli
jmp
inc
and
mov
sbb
pop
aas
repnz
jnp
jnp
mov
add
cmp
dec
jmp
popf
stos
nop
and
fld
je
sub
dec
pop
cmp
(bad)
(bad)
(bad)
(bad)
ficomp
cmps
xor
retf
mov
xchg
sbb
lods
das
jle
sbb
sub
(bad)
(bad)
push
sub
ret
lods
sbb
out
push
test
popa
cmp
ds
jbe
cmp
aad
fidiv
mov
sub
pop
lahf
cli
gs
hlt
jg
sub
mov
(bad)
inc
push
fadd
adc
pop
lds
lods
call
pusha
or
cmc
fiadd
sub
outs
jge
pop
leave
cdq
pop
pop
sub
dec
stos
jge
enter
dec
inc
pusha
push
pop
and
stos
jecxz
in
test
(bad)
call
pop
imul
aam
in
jbe
fidivr
push
fcmove
push
inc
jge
pop
dec
jg
(bad)
jmp
inc
scas
inc
in
jb
outs
mov
mov
pop
fadd
xchg
(bad)
(bad)
(bad)
inc
in
icebp
mov
jle
scas
fwait
(bad)
cld
(bad)
scas
xor
stos
and
(bad)
jmp
ds
scas
sub
test
stos
mov
xchg
sub
iret
sub
(bad)
push
mov
cli
cmp
rcl
mov
cmp
mov
(bad)
(bad)
dec
sbb
sbb
push
lea
ret
pop
pop
xchg
mov
popa
jmp
(bad)
call
mov
cwde
or
fiadd
daa
cmc
in
push
mov
add
mov
repnz
ds
fistp
(bad)
(bad)
jmp
adc
in
addr16
or
or
xor
mov
cli
fdivp
or
(bad)
(bad)
(bad)
mov
xchg
jno
sub
cmp
movs
(bad)
jmp
leave
adc
(bad)
(bad)
dec
adc
test
sti
push
mov
ret
out
jmp
mov
(bad)
(bad)
inc
enter
imul
sub
jbe
or
xchg
lock
(bad)
pushf
mov
ins
leave
in
add
fdiv
or
dec
mov
adc
jmp
ins
dec
(bad)
(bad)
dec
fcomip
mov
push
sbb
sub
not
fidivr
outs
(bad)
adc
call
xchg
lock
sub
push
pop
push
sbb
(bad)
(bad)
fcomip
sub
ret
cmp
fcom
mov
jmp
enter
lock
sbb
jnp
or
(bad)
(bad)
push
cs
mov
push
dec
(bad)
std
mov
bound
lahf
test
aam
in
fs
(bad)
dec
call
dec
test
adc
jecxz
cli
std
sub
in
test
(bad)
(bad)
(bad)
jmp
daa
mov
ins
nop
cmps
add
aas
outs
mov
fwait
(bad)
enter
dec
push
(bad)
aad
pop
add
sub
js
xchg
loope
jp
scas
xchg
jo
lods
mov
mov
pop
xor
sub
xchg
adc
(bad)
jg
sti
stc
pop
paddsw
sbb
mov
add
jle
stos
(bad)
(bad)
jg
fs
mov
sub
adc
call
adc
push
or
add
sti
in
call
dec
ins
(bad)
(bad)
(bad)
call
push
mov
add
scas
bound
pop
fstp
lods
xchg
mov
sysexit
cli
into
mov
cmp
inc
(bad)
(bad)
(bad)
(bad)
inc
popf
inc
das
retf
stos
dec
xor
aas
mov
xchg
das
xchg
xchg
jmp
cmp
(bad)
pop
in
scas
cli
call
(bad)
cli
mov
loope
mov
mov
in
in
nop
outs
(bad)
(bad)
(bad)
(bad)
jns
push
pop
lahf
and
ret
cld
ret
mov
sbb
ins
mul
(bad)
(bad)
(bad)
dec
sub
sbb
(bad)
and
jl
inc
not
fistp
mov
movs
in
rcl
cs
xchg
ja
dec
mov
adc
xor
jo
(bad)
(bad)
inc
or
push
push
jnp
or
out
inc
jno
lock
sbb
(bad)
out
(bad)
or
mov
sub
pop
lock
add
cdq
(bad)
(bad)
(bad)
call
push
popf
adc
push
push
psubq
sbb
aad
rol
jmp
(bad)
(bad)
inc
adc
ret
dec
pop
pop
sub
ins
mov
stos
in
mov
xchg
adc
loop
scas
(bad)
(bad)
(bad)
inc
add
stos
dec
stos
bnd
adc
sbb
das
cmp
ss
(bad)
(bad)
dec
lods
jl
imul
repz
xchg
mov
fbstp
fwait
and
retf
or
arpl
lods
(bad)
call
jnp
gs
pop
mov
int3
push
mov
jmp
stc
push
scas
mov
mov
outs
bound
sbb
in
xchg
pop
jae
jmp
jle
dec
lods
adc
bound
movs
mov
sub
push
xchg
call
jmp
js
cli
icebp
xchg
stc
popa
pusha
mov
ror
rol
push
(bad)
(bad)
jmp
imul
int
push
icebp
dec
shr
leave
pop
rol
cmc
call
inc
test
in
add
sar
mov
call
sahf
and
ss
or
(bad)
(bad)
push
mov
retf
(bad)
in
mov
push
mov
cmp
cmp
inc
in
test
(bad)
dec
push
mov
in
or
pop
xchg
sub
mov
das
dec
push
cdq
outs
movs
stos
pop
pop
cmp
sbb
or
cmp
push
or
(bad)
(bad)
jmp
lds
and
icebp
sbb
std
fcmovnbe
jmp
imul
mov
jno
sub
(bad)
(bad)
mov
in
push
push
outs
loop
xor
push
pop
add
loope
mov
push
fld
mov
(bad)
call
mov
loop
push
sbb
dec
fldenv
mov
into
mov
or
or
nop
dec
mov
call
sub
pop
mov
jmp
out
retf
sub
pushf
sub
cmp
fst
clc
push
push
mov
sub
jp
pop
lock
(bad)
dec
inc
dec
sub
mov
inc
ret
(bad)
fsub
je
dec
xchg
dec
inc
jp
jmp
shr
jmp
cmp
mov
and
push
mov
mov
mov
(bad)
(bad)
dec
xlat
out
(bad)
jle
clc
dec
or
xchg
cs
inc
dec
loopne
mov
or
data16
xor
scas
inc
mov
dec
mov
call
test
(bad)
call
fidivr
cld
test
test
mov
and
inc
and
push
push
mov
arpl
fdiv
(bad)
(bad)
(bad)
call
or
sbb
das
out
or
cmp
mov
mov
push
mov
cdq
cmps
fdiv
movs
xlat
mov
(bad)
cmp
mov
test
mov
out
call
nop
and
test
addr16
pop
pusha
movs
retf
das
push
les
xchg
xchg
or
jmp
mov
outs
clc
cmp
shl
sbb
or
sub
or
and
sub
dec
(bad)
(bad)
(bad)
jmp
sbb
lahf
clc
push
std
sub
lahf
cwde
je
out
pminub
dec
clc
enter
sbb
sub
(bad)
call
pop
xchg
mov
mov
in
mov
stos
push
mov
call
test
pop
pushf
pop
dec
sar
pushf
sbb
push
mov
pop
mov
mov
test
pop
cmp
adc
xor
push
das
ret
mov
stos
jbe
xchg
jle
stos
push
and
retf
cli
xchg
shr
(bad)
lock
jbe
movs
aad
mov
(bad)
(bad)
push
mov
push
xchg
inc
cdq
loop
push
test
mov
push
pop
scas
push
sbb
mov
loope
(bad)
(bad)
push
xchg
js
js
sar
cmp
jo
xchg
cmps
das
mov
mov
in
cdq
(bad)
fwait
ror
rcr
jae
lock
scas
jbe
jmp
inc
mov
cmps
iret
fmul
push
test
xchg
je
std
mov
pushf
dec
retf
retf
dec
jmp
inc
test
(bad)
(bad)
call
xlat
jb
icebp
add
and
xor
fwait
xchg
push
mov
scas
fsub
fcomip
mov
sub
mov
lods
mov
and
sub
mov
js
push
and
adc
add
or
cmp
push
add
lods
jno
xchg
fisubr
push
mov
cmp
xchg
cmp
or
test
retf
mov
mov
test
stos
cmc
mov
mov
push
(bad)
call
mov
jb
mov
pop
sub
(bad)
clc
lea
pusha
pop
pop
push
enter
jmp
call
ss
clc
cld
mov
lods
fadd
test
xchg
and
(bad)
(bad)
(bad)
std
or
movs
bound
sub
mov
pop
mov
jmp
sub
cmp
mov
pop
cmps
data16
(bad)
(bad)
aas
jp
out
jmp
dec
imul
scas
rcr
jae
out
dec
gs
inc
addr16
sbb
add
jle
sub
sub
(bad)
(bad)
(bad)
call
or
jmp
mov
pop
add
xchg
lods
mov
ret
inc
call
push
sub
add
call
mov
mov
cs
popa
pusha
sub
fldz
in
mov
adc
popf
or
cmp
js
and
and
sbb
mov
scas
fadd
sub
(bad)
cli
aaa
imul
adc
cli
aas
imul
pushf
xchg
(bad)
(bad)
dec
es
outs
ret
xor
or
ret
dec
or
pop
in
dec
cmp
push
ins
xor
ins
aam
(bad)
(bad)
(bad)
mov
and
std
sub
inc
ins
jecxz
jp
push
cmp
fmulp
jb
pop
(bad)
call
loopne
fmul
inc
sbb
xchg
sbb
and
push
mov
ins
push
out
jmp
mov
loop
jmp
mov
mov
or
dec
jle
xchg
pop
ds
cli
add
sbb
pop
push
(bad)
jmp
(bad)
jmp
dec
test
mov
mov
iret
jnp
dec
mov
fdiv
(bad)
mov
xchg
xchg
stos
out
pop
sbb
sbb
arpl
pop
scas
push
sbb
add
dec
out
lods
adc
dec
js
loope
push
xchg
mov
movs
cmp
jbe
aam
cs
inc
call
xor
mov
pop
dec
push
imul
enter
and
xor
fcomip
(bad)
mov
gs
inc
inc
(bad)
pushf
jmp
push
or
xor
mov
sbb
xchg
movs
lea
and
in
or
daa
paddq
cld
(bad)
call
hlt
push
add
das
push
jp
loop
repz
or
cld
pusha
(bad)
(bad)
(bad)
(bad)
cmp
or
imul
sti
js
mov
loop
or
into
or
sub
cmp
(bad)
(bad)
dec
dec
push
mov
sbb
nop
nop
inc
mov
ins
jnp
jae
jmp
in
fistp
repnz
add
call
bound
fst
cmp
cwde
pushf
sar
(bad)
(bad)
(bad)
(bad)
jmp
fisub
call
add
cwde
mov
fbld
scas
lods
dec
lock
pop
sbb
or
add
jo
push
ss
cmp
mov
icebp
push
test
cmp
jb
int
(bad)
(bad)
out
inc
mov
outs
xchg
sbb
add
(bad)
mov
jae
add
xchg
mov
stos
pop
jmp
test
push
mov
sar
mov
cmp
cwde
in
or
(bad)
in
and
in
adc
ficomp
outs
xchg
test
das
dec
pop
push
stos
or
pop
jo
(bad)
(bad)
jmp
push
and
stc
mov
mov
adc
jmp
rcl
jmp
out
scas
jb
(bad)
call
sub
dec
sub
imul
idiv
xor
dec
ret
(bad)
inc
mov
jae
or
inc
stc
daa
pop
jo
jb
mov
push
dec
sub
xor
sub
dec
ret
jp
mov
sub
jb
and
sub
call
or
call
sbb
hlt
das
(bad)
(bad)
(bad)
call
inc
imul
inc
xor
sti
vmovaps
(bad)
jmp
push
std
iret
shr
cmp
mov
in
dec
iret
mov
stos
mov
nop
mov
mov
int3
mov
int3
(bad)
sbb
(bad)
(bad)
jmp
sahf
mov
cmps
lds
and
xor
mov
push
mov
jp
jmp
cli
pop
ins
fsubr
rcr
mov
xor
pop
fld
pop
ins
jmp
imul
movs
mov
push
mov
or
das
clc
(bad)
jmp
inc
imul
scas
retf
popa
out
sub
sbb
pop
and
repnz
mov
sub
(bad)
clc
cmp
inc
mov
mov
stos
and
stos
xchg
rol
push
std
(bad)
push
cmp
arpl
xor
cli
mov
mov
iret
movs
and
into
(bad)
(bad)
(bad)
sub
sti
pop
pop
pop
in
mov
iret
sub
outs
es
mov
jmp
mov
cli
stos
sbb
cld
mov
sub
test
jmp
push
push
lods
stos
stos
sub
(bad)
(bad)
push
cmps
test
push
push
in
xchg
jmp
mov
mov
fisubr
scas
fcom
xlat
test
repz
(bad)
mov
enter
ret
call
or
in
or
(bad)
mov
mov
es
out
push
fucompp
sub
sub
cli
and
mov
jmp
adc
ss
and
fdivr
sub
pop
jmp
hlt
pop
dec
(bad)
mov
(bad)
dec
jmp
repnz
xchg
dec
push
xor
in
dec
fistp
sti
or
adc
into
jnp
ins
imul
push
jmp
sub
mov
jno
pop
jg
and
cmp
(bad)
in
adc
(bad)
(bad)
jmp
add
std
repz
shr
or
pop
sub
scas
push
daa
sub
sbb
sub
pop
xor
mov
mov
fisubr
jmp
outs
outs
cwde
in
lock
aaa
out
aas
ins
pusha
int3
leave
and
lds
test
jnp
and
jecxz
aad
and
cli
(bad)
mov
inc
ret
int
jmp
mov
mov
xlat
mov
sub
mov
sub
call
sbb
mov
adc
mov
fistp
shr
icebp
repnz
push
test
mov
mov
fcomi
add
mov
aas
adc
mov
(bad)
push
es
push
movs
dec
push
pop
scas
es
push
jmp
mov
repnz
mov
lock
retf
mov
pop
jl
repnz
inc
fsubr
cwde
xchg
mov
mov
ds
add
adc
(bad)
(bad)
(bad)
(bad)
fist
sbb
lock
mov
mov
jmp
mov
arpl
(bad)
(bad)
(bad)
push
les
(bad)
mov
jp
call
(bad)
mov
rol
push
test
jp
mov
jo
cmc
das
adc
mov
dec
test
mov
fstp
fstp
push
xchg
mov
mov
in
movs
mov
or
(bad)
(bad)
(bad)
call
out
movzx
xchg
shl
lahf
shr
cld
push
scas
fidiv
jo
clc
(bad)
(bad)
dec
push
mov
aas
enter
mov
inc
xor
in
lods
dec
mov
cld
outs
cmp
mov
jle
inc
fnstenv
in
mov
stos
je
call
sub
out
cmp
sbb
cmp
gs
bound
push
(bad)
jmp
test
cwde
sub
sbb
retf
test
addr16
or
js
dec
mov
add
(bad)
(bad)
push
int
je
or
push
push
mov
mov
mov
lds
bnd
(bad)
jg
xor
out
mov
dec
call
dec
xchg
adc
(bad)
mov
pop
mov
push
shr
dec
das
add
and
call
(bad)
(bad)
(bad)
call
xchg
mov
or
call
mov
xor
lea
mov
(bad)
shl
call
push
push
movs
das
pop
push
je
and
(bad)
(bad)
jmp
outs
jmp
lods
fimul
mov
sub
xor
xor
cdq
(bad)
(bad)
(bad)
push
cmps
vmptrld
push
adc
addr16
cmp
mov
jmp
inc
adc
lods
inc
cli
add
push
aaa
cld
(bad)
inc
in
add
in
(bad)
mov
jecxz
jmp
(bad)
jg
mov
push
bound
dec
out
or
cli
(bad)
(bad)
jmp
stos
aam
in
jmp
dec
jecxz
xor
cmp
cmp
add
inc
mov
cli
mov
mov
pop
mov
aam
scas
or
mov
push
daa
mov
pop
out
sub
stos
push
repnz
cmp
pop
push
cmps
fist
push
(bad)
add
dec
rcl
(bad)
(bad)
inc
dec
sbb
scas
ror
jmp
xchg
and
test
mov
mov
rol
movs
or
cmp
fcomip
mov
int3
or
xor
push
inc
xchg
in
fwait
pop
aad
inc
dec
dec
sub
fcom
int
pop
test
mov
(bad)
(bad)
jg
dec
jbe
add
sbb
and
jmp
and
jb
dec
xor
out
push
pop
int3
lods
pop
fidivr
pop
repnz
(bad)
(bad)
jmp
cmps
push
inc
cmps
js
jmp
jl
call
cs
int
icebp
add
retf
(bad)
(bad)
jmp
movs
fadd
rcr
jbe
pop
ins
call
loopne
add
ret
push
xor
mov
clc
call
mov
or
cmps
(bad)
(bad)
inc
clc
sub
sub
das
(bad)
cmp
and
retf
inc
adc
outs
bound
jmp
call
mov
in
jp
icebp
mov
push
hlt
mov
movs
adc
das
fwait
imul
fwait
mov
jbe
mov
inc
mov
inc
jne
xchg
xor
(bad)
(bad)
cmp
pop
inc
int3
mov
push
sub
pop
daa
iret
ror
mov
or
push
repnz
lahf
push
imul
mov
mov
and
(bad)
(bad)
(bad)
jmp
adc
xor
ins
or
mov
xchg
lods
pushf
out
push
xchg
(bad)
out
cli
jmp
mov
loop
or
push
out
or
clc
sub
cmc
pop
ins
clc
loopne
jo
xor
retf
(bad)
sbb
jmp
jl
ret
sbb
fs
std
mov
fcomip
test
dec
mov
mov
sub
jnp
jl
cmp
jmp
outs
cmc
std
or
sbb
mov
aaa
shr
mov
and
(bad)
call
mov
pop
or
fcmovu
or
adc
rcr
imul
call
dec
adc
sahf
aas
sub
sub
or
loope
xchg
in
jne
or
dec
push
pop
add
push
sub
mov
in
pop
cmps
or
stos
test
in
lods
data16
call
dec
fs
sub
nop
mov
mov
mov
push
(bad)
mov
fimul
int3
sub
sub
mov
icebp
and
dec
retf
mov
jecxz
push
call
jl
(bad)
popa
pop
div
sbb
test
mov
ds
(bad)
call
std
mov
hlt
dec
cmp
sbb
clc
sbb
scas
cdq
(bad)
pop
and
push
xor
loopne
repz
sub
dec
icebp
pop
movs
mov
sbb
pushf
frstor
lahf
and
scas
mov
push
sbb
sub
out
clc
push
cdq
ret
pop
out
cmp
mov
or
(bad)
pop
mov
sti
inc
stos
(bad)
pop
xchg
clc
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
xchg
sub
add
push
sbb
pop
scas
mov
jae
aas
mov
xchg
test
xchg
mov
(bad)
(bad)
(bad)
dec
lahf
(bad)
fidiv
or
pop
and
je
stos
cwde
pop
xchg
sbb
imul
call
scas
dec
pop
clc
pusha
xchg
xchg
adc
lahf
imul
aad
retf
push
(bad)
call
xor
adc
fild
inc
sub
cmp
(bad)
(bad)
(bad)
mov
mov
push
inc
scas
sub
jl
inc
jp
(bad)
push
jmp
loope
(bad)
call
xchg
sbb
fcmovb
lods
ja
(bad)
rcr
ds
cmp
test
test
jmp
icebp
loopne
(bad)
jmp
pop
or
pop
cmp
sbb
jecxz
cmps
or
jmp
aad
call
adc
xor
cmps
fsub
imul
jmp
mov
add
icebp
(bad)
jg
sub
adc
arpl
shr
arpl
imul
inc
inc
cmc
adc
into
imul
sbb
(bad)
mov
or
push
js
(bad)
sbb
cmp
loope
data16
mov
pop
xchg
xlat
xor
(bad)
(bad)
(bad)
dec
sub
xor
mov
idiv
loope
stos
mov
es
jmp
call
in
pop
or
cmp
call
rcr
(bad)
(bad)
mov
mov
ds
ins
test
pop
mov
jmp
fbld
leave
mov
push
dec
dec
rol
cmp
retf
or
(bad)
inc
adc
mov
sub
cmp
sbb
push
mov
(bad)
(bad)
inc
retf
cmp
stos
mov
xlat
dec
repz
push
cdq
adc
(bad)
cmp
pusha
sub
dec
mov
jmp
out
scas
jg
or
pop
pusha
sbb
cld
pop
pusha
cld
pop
into
(bad)
or
add
push
or
jg
pop
retf
enter
popa
push
or
jmp
fld
outs
sbb
push
pop
rol
cmp
mov
pop
cmp
scas
(bad)
jmp
call
iret
adc
cmc
dec
or
and
loop
xor
sbb
mov
(bad)
push
mov
sbb
or
(bad)
stos
in
cmp
imul
and
fwait
inc
mov
(bad)
ret
push
ins
ja
mov
(bad)
jmp
pop
or
loopne
stc
or
test
(bad)
arpl
(bad)
jg
dec
jle
dec
nop
sub
mov
(bad)
stos
test
inc
push
sub
(bad)
(bad)
(bad)
jmp
mov
call
jecxz
sub
xchg
mov
imul
(bad)
or
lods
or
or
(bad)
dec
in
(bad)
sub
mov
mov
jmp
push
jg
(bad)
call
test
mov
sub
out
call
dec
mov
fdiv
hlt
int
scas
dec
mov
(bad)
and
shl
and
(bad)
(bad)
(bad)
sti
movs
mov
call
cmps
push
xor
cmp
in
jmp
mov
xchg
mov
adc
cli
mov
or
mov
cli
pop
push
xchg
cmps
fild
xlat
jns
add
push
add
(bad)
dec
sub
in
cwde
mov
fcomip
call
(bad)
cmps
imul
cdq
xor
es
xchg
mov
(bad)
fcomip
jmp
in
stos
nop
repz
pushf
mov
push
ja
sub
hlt
mov
or
jmp
lods
xor
icebp
sbb
sbb
or
xor
dec
jmp
movs
cmp
push
(bad)
(bad)
push
mov
and
ds
push
scas
mov
jmp
mov
cdq
jnp
scas
mov
inc
call
retf
jmp
std
pop
sbb
pop
mov
(bad)
mov
outs
into
in
fistp
into
dec
dec
es
fldcw
sahf
sbb
(bad)
(bad)
(bad)
call
inc
gs
pop
out
push
in
sub
test
clc
sub
jmp
stos
(bad)
(bad)
call
mov
xor
cmps
js
jb
test
(bad)
adc
xchg
adc
add
outs
mov
call
pop
push
enter
push
inc
jno
mov
call
shl
xchg
stc
adc
push
push
dec
add
(bad)
xlat
enter
iret
popa
pop
add
cli
inc
shr
out
mov
or
add
cli
push
das
cmps
mov
or
(bad)
out
in
enter
pop
push
add
movs
es
(bad)
data16
addr16
sahf
pop
jmp
xor
in
dec
pop
rcl
fstp
repz
fdiv
xchg
mov
sub
sub
or
stc
jecxz
sub
push
(bad)
lock
xchg
or
mov
(bad)
(bad)
(bad)
in
pop
or
out
sub
xchg
in
sub
pop
adc
adc
dec
fcom
sub
xchg
or
jbe
(bad)
or
retf
(bad)
(bad)
(bad)
(bad)
jns
cmp
loope
pop
ss
js
cs
popf
push
cld
or
hlt
rcr
cdq
bound
fidivr
pop
loopne
call
mov
cwde
jp
mov
stos
or
pop
out
es
imul
cmp
lods
push
ret
or
loope
(bad)
jmp
stos
push
test
mov
xlat
and
mov
scas
xchg
sub
stos
push
movs
jle
scas
clc
push
mov
ds
mov
jns
(bad)
(bad)
(bad)
call
lahf
xchg
addr16
(bad)
fiadd
mov
push
mov
xchg
hlt
test
(bad)
(bad)
(bad)
push
out
shl
ficomp
push
stos
mov
mov
push
jmp
stos
or
and
push
cld
leave
xchg
or
dec
pop
mov
rcr
cmp
(bad)
mov
in
call
mov
ret
fsubr
jecxz
inc
(bad)
(bad)
(bad)
inc
adc
push
outs
lods
call
call
(bad)
in
mov
das
ins
mov
(bad)
(bad)
(bad)
jmp
cmp
stos
inc
sub
dec
cld
(bad)
ds
fdivr
fbstp
(bad)
jg
cli
ins
ins
mov
or
repnz
pop
or
sbb
mov
in
mov
or
pop
fild
and
leave
test
scas
stos
ss
clc
inc
pop
loopne
jmp
sub
mov
or
xchg
inc
jmp
(bad)
fcomip
or
loop
add
adc
je
mov
mov
mov
sar
mov
mov
test
pusha
test
mov
(bad)
(bad)
(bad)
(bad)
mov
pop
mov
scas
call
pop
sub
mov
jae
pop
sub
das
clc
push
imul
xor
sub
dec
in
mov
arpl
adc
mov
add
call
int3
sub
sbb
jno
(bad)
(bad)
jmp
jb
jg
ds
pop
pop
sbb
push
add
scas
dec
add
loopne
ds
mov
or
mov
(bad)
es
(bad)
push
dec
cmps
mov
or
(bad)
(bad)
(bad)
inc
mov
test
daa
sbb
sub
stc
hlt
cmp
push
stos
ss
lea
xor
ss
fwait
lea
mov
mov
pop
dec
xchg
sub
(bad)
(bad)
fisub
mov
cmp
scas
bound
(bad)
inc
daa
cmp
pop
and
adc
add
cmp
lods
mov
fidiv
in
pushf
pop
push
mov
or
mov
cmp
xchg
mov
(bad)
pop
fcomp
out
mov
fs
test
pop
pop
repnz
and
mov
fidivr
add
test
sub
sub
mov
jmp
push
jne
sbb
pop
scas
adc
mov
mov
dec
xchg
mov
call
gs
iret
ret
adc
jge
popf
test
adc
mov
sahf
jecxz
clc
mov
dec
pop
or
iret
in
jp
push
xchg
sub
movs
mov
add
add
jmp
inc
xchg
stos
sbb
clc
jl
or
sub
es
jg
jmp
fdivr
in
pushf
push
nop
dec
cmp
neg
das
(bad)
dec
in
call
(bad)
(bad)
dec
jno
lds
iret
mov
scas
sti
popa
outs
sub
leave
dec
mov
ret
test
(bad)
mov
adc
fstp
push
mov
dec
mov
pop
mov
cmps
jb
push
or
ror
(bad)
mov
(bad)
(bad)
(bad)
push
call
mov
push
xchg
push
stc
xchg
cmp
pop
push
(bad)
dec
pop
icebp
push
pop
adc
(bad)
push
sub
mov
imul
(bad)
(bad)
(bad)
jmp
lods
repz
mov
cmp
push
pop
cmp
mov
cld
daa
cmp
aas
xchg
imul
ret
(bad)
(bad)
addr16
jmp
push
jl
enter
call
(bad)
js
jmp
ins
adc
xlat
lods
int3
push
sbb
test
cmp
cmp
lock
std
push
push
out
fwait
sbb
(bad)
(bad)
inc
pop
mov
iret
inc
xor
inc
stos
jle
sub
jmp
fbld
jb
iret
shl
imul
loope
bound
fcomp
fistp
loop
adc
(bad)
fcomip
xor
adc
cmps
fucomip
pop
pusha
mov
cdq
mov
sub
mov
sbb
mov
dec
mov
sahf
test
ficomp
cwde
(bad)
(bad)
dec
sbb
repz
push
sbb
shr
xor
mov
sbb
cld
jmp
(bad)
dec
pop
scas
imul
push
mov
sub
mov
(bad)
(bad)
jg
ror
dec
fcomp
popa
cwde
hlt
imul
stc
stc
push
daa
(bad)
(bad)
(bad)
push
fild
outs
cli
dec
add
sub
lahf
cmp
jne
pop
into
sub
fst
call
ud0
fcomip
or
inc
pop
sti
dec
call
stos
fild
lds
cmc
(bad)
(bad)
(bad)
jmp
ds
mov
das
stos
cmps
pop
xchg
push
lods
fisttp
(bad)
cli
call
(bad)
int
int
outs
mov
enter
call
ins
lahf
inc
push
sub
lock
(bad)
sub
in
mov
and
lods
fidivr
sub
fnstsw
inc
fst
fcomip
das
cmps
nop
add
mov
inc
std
cli
sub
in
or
(bad)
(bad)
mov
add
sub
rcl
fistp
push
xchg
scas
pop
rcl
cmp
stos
call
sbb
jmp
fnstenv
fidiv
pop
call
(bad)
(bad)
dec
dec
sub
loop
adc
add
daa
pop
iret
fidivr
test
pop
push
adc
ja
mov
adc
(bad)
(bad)
dec
jns
ins
(bad)
cmp
sub
jle
dec
or
outs
ds
pop
and
push
dec
data16
mov
sub
js
retf
dec
cli
push
je
out
xchg
sub
jmp
scas
es
sub
mov
xchg
inc
jmp
retf
addr16
(bad)
mov
jbe
nop
in
pop
mov
or
push
jg
call
pop
(bad)
(bad)
(bad)
(bad)
jmp
pop
lods
or
sbb
xlat
cwde
pop
es
das
mov
dec
sahf
inc
(bad)
dec
add
into
push
mov
xchg
or
dec
sub
push
or
jne
out
cld
fnstsw
sub
cld
xchg
push
call
or
cs
push
stos
(bad)
inc
mov
jmp
out
adc
jmp
les
jmp
cmp
jg
shl
jae
test
stos
dec
je
jns
into
sub
(bad)
(bad)
(bad)
dec
push
xlat
cmp
out
fsubr
mov
pop
lock
sbb
shl
pop
out
jp
xor
mov
inc
xchg
xchg
loop
inc
mov
ss
stos
mov
out
xor
dec
push
test
jae
cwde
sub
xchg
lea
(bad)
(bad)
jmp
rep
mov
call
or
sbb
(bad)
fldcw
cmp
cmp
push
inc
dec
in
imul
mov
mov
(bad)
adc
call
into
test
mov
lods
push
push
jmp
hlt
jb
push
fistp
das
dec
inc
adc
push
(bad)
dec
fist
xlat
push
enter
or
call
adc
adc
(bad)
(bad)
inc
retf
xchg
fcomip
xchg
ds
mov
retf
xchg
mov
(bad)
sub
add
mov
mov
imul
dec
push
fcmovb
xor
and
std
(bad)
(bad)
(bad)
(bad)
fstp
mov
cmp
mov
pop
cmp
cmps
js
sub
mov
int3
or
jecxz
(bad)
fcomip
rcl
retf
and
sub
in
std
(bad)
(bad)
call
mov
sbb
sub
fs
in
or
add
call
(bad)
jg
xor
test
imul
retf
iret
xor
out
xlat
mov
mov
jg
(bad)
jmp
nop
and
inc
cmp
(bad)
dec
in
out
int3
mov
test
mov
cmps
int3
mov
and
jne
sub
jle
dec
mov
pop
dec
jmp
dec
mov
push
retf
js
jae
mov
push
mov
sub
push
push
(bad)
(bad)
dec
or
fwait
cli
adc
add
mov
sbb
sbb
sbb
gs
stos
sbb
xor
lods
xchg
jae
(bad)
(bad)
(bad)
jmp
fwait
loop
mov
push
test
(bad)
mov
mov
retf
inc
xchg
(bad)
(bad)
call
out
mov
(bad)
cdq
xchg
pop
sub
adc
cmp
popf
test
xor
pop
lock
je
cmc
fwait
mov
je
(bad)
aas
adc
(bad)
je
test
(bad)
mov
and
ds
int3
xor
retf
out
cmp
shr
jmp
sbb
mov
sub
imul
jnp
dec
dec
sub
mov
push
in
pushf
scas
icebp
(bad)
(bad)
push
pop
pop
repnz
imul
fwait
push
sub
call
mov
dec
push
clc
jl
icebp
adc
mov
jns
mov
dec
add
jg
(bad)
sbb
sbb
mov
jns
lock
mov
xor
lahf
add
jle
(bad)
mov
push
loope
pop
mov
sub
inc
(bad)
jmp
call
out
sub
jg
es
setg
shl
gs
push
(bad)
(bad)
(bad)
call
test
fwait
arpl
stos
inc
jnp
stos
imul
int
jecxz
(bad)
(bad)
(bad)
dec
jmp
push
mov
test
call
pop
jmp
mov
aaa
mov
push
mov
imul
(bad)
mov
push
mov
push
ja
or
adc
fistp
jle
repnz
jmp
or
pusha
adc
mov
mov
jnp
ds
icebp
(bad)
dec
mov
cli
popa
mov
pop
outs
pop
les
and
(bad)
(bad)
(bad)
jg
rcr
add
pop
ret
ret
mov
xacquire
test
sub
and
fbld
xor
cs
or
xor
aaa
xchg
out
loop
enter
sub
(bad)
clc
enter
adc
outs
push
and
cmp
fisttp
sub
mov
cs
lods
push
cli
push
retf
jnp
lahf
mov
into
inc
mov
scas
cli
and
pop
push
xor
test
ja
push
movs
sbb
outs
pop
out
mov
dec
add
mov
inc
xchg
pop
das
stc
push
sbb
dec
cli
enter
push
imul
add
(bad)
(bad)
(bad)
fadd
jmp
test
pop
shr
pop
loop
jo
(bad)
(bad)
jg
xchg
jmp
outs
pop
adc
pusha
outs
dec
pop
outs
in
fnstenv
call
fistp
(bad)
push
call
xchg
and
into
inc
pop
and
xchg
jnp
jg
cs
xchg
or
cmp
dec
cs
add
mov
std
or
pop
mov
cmp
pop
mov
loopne
mov
dec
(bad)
(bad)
jg
inc
mov
nop
pop
scas
pushf
int
out
pop
lods
loopne
jg
mov
sbb
mov
xchg
inc
ror
pop
(bad)
and
cmp
(bad)
(bad)
(bad)
out
out
cmp
sar
scas
addr16
push
imul
push
sbb
jg
push
daa
sub
xchg
and
shr
dec
xor
cwde
mov
inc
add
push
sbb
call
ret
xor
mov
clc
loopne
push
(bad)
call
cmp
call
adc
pop
inc
dec
mov
mov
sbb
mov
add
daa
dec
out
cs
cs
int3
sub
(bad)
jmp
jmp
(bad)
(bad)
test
std
mov
iret
sbb
cld
sbb
inc
icebp
mov
lahf
pop
rcr
das
mov
lock
inc
jmp
repnz
xchg
or
sahf
int3
cmp
sub
push
xchg
lods
sar
(bad)
inc
xchg
lds
or
sti
sub
es
lea
(bad)
jns
mov
mov
or
test
sbb
stos
pop
sub
jns
in
sub
cdq
or
push
xor
mov
xchg
or
call
pop
call
push
pop
aaa
fwait
or
dec
cli
fwait
sub
cmp
scas
ds
out
out
cli
(bad)
dec
pop
fldcw
cld
add
fwait
cs
sub
aam
retf
cmps
outs
out
jmp
test
cmp
sbb
xchg
es
fwait
test
(bad)
xchg
jmp
cmp
mov
clc
or
fild
std
push
pop
sbb
adc
in
mov
sub
push
pop
pop
push
shl
outs
or
dec
and
jmp
aad
fidiv
imul
jl
mov
cmp
movs
jecxz
test
and
xor
inc
cmp
push
sub
int3
mov
or
(bad)
(bad)
push
out
and
xchg
ins
fldenv
loopne
jns
repz
ret
or
mov
xchg
sub
fcomip
inc
dec
nop
retf
cmc
ror
mov
shl
mov
or
push
push
cs
cli
std
cwde
lahf
jnp
iret
or
movs
das
pop
aad
outs
mov
add
fs
(bad)
(bad)
jg
pusha
adc
cmps
shl
adc
mov
mov
dec
mov
fs
and
sti
mov
loopne
jg
aas
xchg
jp
(bad)
fisttp
(bad)
cmp
inc
shr
lods
dec
inc
pop
fnsave
add
mov
outs
ss
mov
in
pop
xor
(bad)
(bad)
mov
jle
stos
in
lods
cmp
adc
push
loop
push
mov
sbb
lods
xor
push
sbb
mov
cli
js
cs
cli
jl
test
hlt
jmp
sti
imul
inc
adc
mov
in
xchg
adc
mov
scas
pop
xchg
xor
jg
jle
mov
sahf
aas
lea
out
xchg
lods
cmps
ins
adc
icebp
(bad)
jmp
js
out
std
dec
fisttp
pop
call
repz
or
(bad)
jmp
jl
outs
jle
xchg
fdiv
dec
enter
jmp
movs
lods
(bad)
(bad)
(bad)
(bad)
call
imul
jb
(bad)
or
add
imul
mov
sub
mov
loope
push
stos
mov
xchg
fbld
inc
retf
rcr
in
out
add
sbb
(bad)
call
adc
cmps
mov
jmp
imul
ss
push
mov
dec
mov
test
imul
iret
and
in
fisub
(bad)
(bad)
dec
sbb
lods
ins
ss
dec
cmp
ss
in
jnp
test
jns
mov
std
adc
adc
dec
cli
(bad)
jmp
test
fisttp
cmps
and
aad
adc
mov
hlt
inc
out
pop
mov
stos
push
(bad)
(bad)
(bad)
jmp
push
mov
pop
lods
(bad)
xchg
loop
pop
sub
pop
aad
pop
jnp
fwait
push
jmp
std
(bad)
(bad)
inc
out
loopne
pop
add
mov
jg
inc
scas
push
lock
sub
or
(bad)
(bad)
(bad)
mov
add
mov
push
mov
push
test
jb
dec
cli
pop
imul
(bad)
(bad)
(bad)
cmp
jge
sub
stos
dec
xor
cli
jp
sub
(bad)
(bad)
(bad)
push
(bad)
jmp
lds
inc
sub
jnp
std
je
aaa
jmp
jge
mov
call
mov
(bad)
mov
pusha
scas
mov
pusha
retf
(bad)
ficom
ins
out
pop
jp
(bad)
jmp
mov
loop
sub
nop
mov
push
pop
stos
cmps
sub
or
sbb
shl
mov
jmp
mov
cs
mov
retf
ror
ins
(bad)
mov
std
into
mov
xor
and
cmp
mov
mov
inc
(bad)
jp
scas
les
in
xchg
retf
xchg
sbb
mov
push
lahf
stos
shr
je
std
mov
jnp
mov
stos
sub
jnp
in
or
(bad)
fbld
sub
out
pop
fistp
cmp
mov
pop
mov
push
sahf
sub
add
out
or
(bad)
(bad)
push
fisubr
js
sub
push
mov
sub
pop
jmp
dec
mov
aaa
mov
(bad)
cmp
mov
sub
push
or
jge
xor
mov
fmul
jmp
pop
out
mov
jle
mov
and
dec
pop
outs
pop
mov
(bad)
dec
dec
das
fwait
mov
out
pop
test
or
cmp
loopne
jecxz
ins
jmp
scas
or
push
icebp
(bad)
(bad)
push
mov
xchg
pop
popa
addr16
jge
adc
pushf
nop
xor
enter
mov
aaa
sub
and
dec
retf
push
pop
mov
(bad)
dec
scas
sub
mov
xlat
ret
(bad)
(bad)
(bad)
(bad)
fdivr
test
cmps
sbb
pop
add
imul
repz
loopne
pushf
std
push
cmp
call
(bad)
(bad)
call
pop
nop
and
iret
movs
cld
mov
icebp
cs
xor
(bad)
popf
pop
cmp
std
cmp
sub
pop
mov
es
or
cli
xchg
mov
pop
imul
inc
jmp
add
neg
pop
hlt
sub
lods
xchg
jb
push
adc
(bad)
mov
popa
or
into
loopne
cmp
aaa
jl
mov
call
bound
add
push
jmp
and
call
pop
adc
cmc
sbb
pop
adc
push
mov
mov
stos
cmp
(bad)
(bad)
fild
iret
or
stc
ror
cmp
das
mov
mov
fimul
xor
fsub
mov
pop
(bad)
xlat
cmps
and
jmp
idiv
(bad)
push
lahf
cmps
sbb
int3
pop
ror
sbb
das
sub
dec
in
xchg
cmc
(bad)
jmp
leave
bound
sbb
test
(bad)
jg
fwait
jmp
xor
pop
cmps
push
pop
jp
jb
and
and
into
ret
dec
cwde
fisubr
or
outs
mov
mov
push
iret
mov
loope
(bad)
push
adc
lahf
jg
movs
lahf
sub
ds
xbegin
iret
xor
or
adc
pop
lods
jecxz
jl
xchg
loope
out
mov
pop
(bad)
ffree
idiv
idiv
mov
dec
mov
es
aaa
test
popa
pop
pusha
push
push
mov
jg
lea
hlt
test
xchg
add
pushf
lock
out
mov
(bad)
(bad)
(bad)
jns
mov
retf
cmp
or
sub
sub
loop
inc
das
stos
dec
xor
sahf
mov
sbb
(bad)
(bad)
dec
or
sbb
enter
mov
ins
sub
cwde
imul
add
inc
stos
and
or
shr
and
fild
pop
and
(bad)
mov
ret
fnstsw
lods
inc
or
(bad)
mov
mov
push
mov
jmp
add
push
xchg
mov
adc
retf
xor
imul
and
xchg
push
loop
retf
out
(bad)
cli
mov
lods
mov
add
or
inc
cmps
cdq
imul
or
(bad)
sub
dec
mov
mov
test
pop
ret
and
outs
bound
(bad)
push
pushf
mov
dec
stos
xchg
sbb
cmps
mov
sub
(bad)
call
cld
cmp
mov
jl
dec
shl
mov
mov
lods
mov
xor
mov
mov
test
push
pop
add
push
mov
xchg
(bad)
(bad)
dec
fst
psrad
mov
lods
jg
jmp
cmp
mov
mov
in
into
aad
jge
dec
cld
sbb
mov
add
adc
mov
(bad)
call
stos
pop
jmp
xor
vmovdqu
retf
dec
sbb
loopne
mov
fstp
mov
call
mov
(bad)
(bad)
mov
lods
mov
push
scas
dec
xor
dec
dec
lahf
mov
xor
daa
enter
pop
(bad)
call
es
rcr
scas
pop
std
mov
std
sbb
mov
(bad)
out
clc
jmp
daa
in
ret
jae
push
or
sub
sbb
leave
xchg
outs
int3
hlt
jle
(bad)
(bad)
dec
push
cs
xor
(bad)
in
fisttp
cs
outs
mov
outs
shl
ror
or
(bad)
mov
sbb
dec
das
stc
xchg
inc
xor
fbstp
(bad)
(bad)
(bad)
call
mov
xor
jge
or
mov
sub
mov
aaa
iret
adc
inc
lahf
jb
enter
inc
(bad)
cmps
fisub
mov
or
mov
jg
inc
nop
popf
popa
iret
push
sahf
dec
les
daa
pusha
paddd
jmp
iret
fistp
lahf
aas
push
repnz
adc
xchg
mov
bound
call
std
cld
cmps
call
xor
sbb
(bad)
jg
push
int
push
xchg
and
frstor
(bad)
fidivr
xor
outs
adc
xchg
push
mov
das
cli
mov
js
inc
pop
dec
mov
lods
cmp
sub
(bad)
(bad)
push
ins
pop
nop
xchg
out
in
cmp
jmp
xchg
push
loop
xor
enter
imul
ret
in
mov
xchg
jno
jmp
cmp
in
pushf
pop
loope
(bad)
(bad)
jmp
push
cld
mov
sar
std
mov
iret
jmp
cmp
jmp
pop
in
icebp
or
imul
int3
mov
call
(bad)
(bad)
mov
inc
xor
sub
test
lea
sar
nop
test
(bad)
jg
iret
jb
sbb
call
sub
into
pop
xchg
or
pop
jmp
mov
ins
leave
sub
dec
adc
push
lock
adc
(bad)
(bad)
(bad)
(bad)
out
add
pop
or
push
jae
pop
jb
out
fild
pop
popa
lock
inc
lock
pusha
rol
js
mov
push
mov
outs
add
in
into
loop
jge
daa
mov
mov
(bad)
(bad)
(bad)
call
gs
fs
jne
bound
xchg
imul
jb
test
in
aad
ret
mov
sar
(bad)
jmp
loop
aaa
push
cmps
mov
jp
das
adc
imul
or
(bad)
(bad)
(bad)
jg
inc
mov
call
call
std
sub
fsub
test
push
pop
out
call
and
(bad)
call
mov
test
call
(bad)
(bad)
(bad)
fild
fwait
sbb
(bad)
cmps
repz
inc
ret
ror
sahf
mov
out
fistp
add
push
jmp
mov
or
(bad)
(bad)
call
sub
(bad)
dec
adc
cmps
aaa
sub
inc
jb
cmp
nop
push
(bad)
fbld
fadd
cmp
daa
fdiv
cld
pop
or
adc
(bad)
cmp
imul
inc
in
push
sahf
scas
mov
(bad)
(bad)
jmp
das
ds
jg
mov
shl
lods
xchg
repnz
ret
fimul
(bad)
push
std
adc
sub
xchg
or
mov
fstp
pop
adc
mov
add
mov
popa
repz
jmp
test
jmp
cmps
mov
retf
push
fcmove
sub
out
les
scas
cwde
sahf
fucomi
scas
or
sbb
lahf
push
mov
and
cmp
fadd
test
fwait
xchg
(bad)
(bad)
(bad)
jmp
sbb
lahf
pop
(bad)
jecxz
cmps
adc
push
mov
enter
loopne
mov
push
js
cmp
nop
sbb
mov
jmp
call
loop
fs
hlt
jno
imul
adc
cli
call
sahf
add
fwait
call
icebp
mov
movs
ja
push
mov
cmps
sahf
jge
push
push
and
lods
inc
lahf
xor
and
dec
pusha
or
jmp
sbb
push
inc
lods
and
pop
pop
out
bound
fdiv
ds
mov
mov
cmp
lock
mov
jmp
or
mov
outs
push
pop
(bad)
dec
sar
je
xor
inc
dec
js
test
(bad)
(bad)
jmp
xchg
jae
lahf
das
imul
movs
dec
inc
je
lahf
(bad)
clc
mov
fwait
jg
sbb
sbb
call
xchg
call
mov
(bad)
movs
into
fs
push
sbb
or
cmps
mov
ret
lock
sub
sub
das
push
pop
add
es
stos
xchg
pop
iret
cmps
loop
movs
mov
pop
sti
ret
dec
nop
push
dec
cs
ret
inc
dec
(bad)
(bad)
(bad)
dec
in
and
shl
jnp
push
inc
sar
and
rcr
xor
out
or
push
pushf
(bad)
(bad)
(bad)
jmp
jmp
dec
or
pop
inc
imul
add
adc
call
cdq
jmp
(bad)
(bad)
push
push
mov
and
add
jp
sahf
pop
std
adc
mov
sub
(bad)
call
test
call
mov
mov
ss
arpl
es
sbb
push
xchg
xchg
(bad)
js
sub
aaa
pop
(bad)
cmp
and
in
call
xlat
xchg
xor
retf
jb
(bad)
(bad)
inc
lahf
std
sbb
out
pop
cs
mov
cmp
imul
sub
sbb
call
test
dec
retf
(bad)
(bad)
call
(bad)
fbstp
adc
dec
retf
ja
pop
ret
cmc
mov
fwait
adc
(bad)
mov
arpl
mov
cmp
sub
rcl
sub
call
pusha
cmps
into
xlat
lods
mov
sub
bnd
add
test
out
(bad)
mov
(bad)
(bad)
dec
pop
(bad)
loop
fisttp
mov
jnp
jge
in
and
pop
adc
fistp
dec
mov
(bad)
fst
(bad)
jns
adc
cs
adc
(bad)
jg
jmp
je
pop
cmp
cmp
(bad)
(bad)
dec
mov
jmp
push
cmp
cmp
into
jle
call
jmp
repnz
mov
gs
inc
xchg
std
pop
mov
scas
cli
mov
test
push
lock
(bad)
(bad)
(bad)
cli
mov
les
adc
jmp
mov
shl
mov
pop
and
call
push
std
(bad)
(bad)
jmp
pop
jbe
dec
push
mov
(bad)
xchg
jnp
outs
and
pop
movs
js
cwde
test
iret
mov
and
sar
inc
mov
xor
in
pop
(bad)
jmp
clc
mov
(bad)
fiadd
repnz
ret
fdiv
sub
punpcklwd
ins
call
cmp
movsx
pop
aaa
outs
cmp
adc
add
sbb
(bad)
ror
call
outs
(bad)
push
sub
cmp
mov
pushf
jmp
mov
xchg
pop
int
inc
test
in
add
retf
enter
pop
ss
clc
jbe
pop
iret
fiadd
fild
jp
dec
(bad)
(bad)
(bad)
call
pop
and
test
scas
adc
jp
sub
(bad)
sub
aas
fisub
aas
jl
test
(bad)
call
ss
fist
mov
adc
adc
scas
clc
jmp
movs
adc
cdq
jge
outs
dec
in
sub
inc
or
sub
or
sub
push
jp
sub
push
jmp
mov
ins
sbb
lock
(bad)
(bad)
push
in
clc
in
push
mov
aad
or
push
push
cmp
mov
fbld
clc
(bad)
(bad)
(bad)
stos
xor
dec
stc
push
loope
mov
push
xor
mov
cmp
jno
das
mov
outs
mov
pop
stos
movs
adc
pop
aaa
in
loope
jmp
mov
test
or
push
mov
sahf
std
xor
in
cmp
(bad)
(bad)
(bad)
fisubr
in
cmp
xchg
mov
xchg
xchg
out
retf
push
mov
adc
xchg
or
cdq
(bad)
(bad)
(bad)
jmp
retf
sbb
jno
xor
pop
push
outs
loop
add
mov
or
(bad)
dec
in
jo
jns
or
ror
mov
call
cmps
pop
cmp
dec
jno
sub
(bad)
(bad)
(bad)
cmp
stc
sahf
sub
xor
or
mov
add
daa
adc
sbb
(bad)
(bad)
(bad)
dec
sub
mov
push
lea
sub
outs
sub
cmp
push
test
dec
ds
adc
test
iret
or
jno
ror
xchg
call
mov
scas
fsubr
(bad)
xchg
xchg
jp
jmp
(bad)
out
clc
add
mov
mov
inc
(bad)
push
popa
sub
jmp
test
fld
pop
scas
aad
mov
inc
add
fisttp
xchg
cmp
cli
cmp
sub
xor
mov
ins
jge
das
scas
pop
lea
cs
sar
(bad)
(bad)
jg
inc
cld
enter
jnp
jl
(bad)
in
mov
loop
sub
ja
outs
aaa
pop
sbb
jmp
adc
jnp
(bad)
fcmovu
add
mov
inc
mov
pop
mov
loopne
icebp
or
loop
(bad)
(bad)
push
inc
xchg
pop
mov
aad
xor
sub
xor
jb
(bad)
leave
scas
push
(bad)
mov
xchg
dec
clc
gs
imul
xor
or
mov
imul
imul
lock
dec
mov
pop
mov
fmul
pop
ret
(bad)
jmp
push
pop
mov
mov
sbb
ficomp
sbb
mov
sahf
cs
in
mov
(bad)
cdq
out
je
inc
sub
xor
inc
and
imul
xor
(bad)
jmp
scas
iret
sub
push
cmp
adc
ins
outs
aaa
call
stos
xchg
mov
shl
xchg
push
das
popa
lods
outs
mov
and
imul
push
int
jbe
fistp
mov
icebp
(bad)
push
aas
push
ds
das
jle
jmp
jmp
cs
stc
hlt
(bad)
(bad)
out
fcmovu
jmp
cmp
jmp
out
dec
cs
fst
push
sub
(bad)
(bad)
(bad)
(bad)
cmp
xlat
jmp
sahf
sub
ficom
pop
outs
repnz
js
sar
mov
lods
inc
fimul
sbb
pop
mov
push
mov
leave
in
jno
and
jmp
ins
int
mov
repnz
sbb
jo
cmp
sbb
fst
iret
(bad)
(bad)
mov
dec
mov
mov
cli
popa
sub
or
(bad)
(bad)
jmp
rcl
mov
dec
inc
(bad)
scas
pop
sbb
dec
enter
mov
push
cmp
(bad)
(bad)
mov
jns
cmp
pop
div
lahf
(bad)
mov
push
adc
cmps
jg
mov
inc
lock
(bad)
jmp
lods
sti
hlt
repnz
add
xor
je
aam
cmp
sbb
jbe
leave
cli
movs
mov
(bad)
fist
mov
dec
ficomp
jae
gs
mov
aaa
xchg
mov
sub
lock
fistp
cli
xchg
int3
(bad)
jmp
sub
and
aam
in
sbb
shr
xor
xchg
(bad)
(bad)
(bad)
(bad)
stc
adc
cmp
dec
stos
push
std
test
sub
fnstcw
loopne
mov
cld
jmp
loopne
mov
adc
fwait
pop
jns
cmp
rol
add
outs
je
jmp
and
mov
cwde
test
xchg
in
(bad)
call
loopne
stos
jp
jb
movs
mov
int
arpl
test
sub
sbb
movs
sub
int3
setp
mov
adc
cwde
adc
call
(bad)
(bad)
addr16
adc
jp
push
jl
push
jle
adc
(bad)
and
in
pop
or
inc
dec
aas
lahf
in
in
or
dec
push
xchg
adc
leave
dec
lahf
(bad)
(bad)
cmp
retf
scas
pop
or
cwde
jg
add
(bad)
(bad)
jmp
mov
mov
test
das
test
call
mov
(bad)
(bad)
(bad)
dec
dec
mov
dec
(bad)
mov
push
jbe
add
fidivr
(bad)
jg
add
in
shl
call
adc
arpl
fwait
push
sahf
test
pop
retf
jb
sub
sub
nop
or
imul
(bad)
(bad)
fbld
mov
cwde
imul
push
add
icebp
mov
aaa
mov
add
jmp
pop
lds
sub
push
sbb
jp
fldenv
adc
pop
xlat
retf
pop
xor
scas
je
xchg
sbb
int
leave
(bad)
pushf
in
ins
sbb
(bad)
(bad)
call
fist
lahf
aad
push
dec
and
mov
jle
imul
shl
pop
test
sub
lods
(bad)
jg
outs
icebp
mov
add
dec
(bad)
call
add
push
pop
addr16
ret
mov
stos
call
(bad)
pop
pop
cli
or
cwde
mov
jo
lods
push
mov
mov
jmp
xor
fcom
xlat
mov
test
lods
push
push
mov
ja
sub
or
xchg
xchg
(bad)
(bad)
call
mov
mov
shl
rol
and
nop
je
cdq
ins
outs
call
fisubr
(bad)
(bad)
push
iret
add
and
imul
hlt
jmp
cmc
or
jl
push
xchg
in
sahf
rcl
int3
cmp
in
mov
mov
adc
and
xchg
cmps
adc
jne
leave
test
(bad)
(bad)
(bad)
inc
stos
popa
adc
pop
mov
cmc
push
cwde
cmps
jne
in
int
adc
jp
gs
call
ds
test
in
mov
push
or
jo
(bad)
call
pop
popf
xor
mov
jno
jb
and
ficom
(bad)
fild
call
cmp
aas
mov
out
lds
lock
arpl
cmp
cs
sar
inc
outs
cmp
jmp
cmp
scas
in
scas
cmp
sbb
cmps
dec
adc
jmp
xor
clc
mov
mov
ret
(bad)
fwait
into
ficom
imul
mov
pop
and
mov
sbb
jno
(bad)
inc
jnp
sbb
pop
or
sbb
int
popa
mov
std
std
(bad)
xor
cdq
int3
pop
jmp
pop
(bad)
(bad)
(bad)
(bad)
jmp
jmp
fist
mov
rcr
mov
add
popa
je
mov
add
call
dec
sub
add
adc
jno
cmps
jbe
call
imul
(bad)
(bad)
clc
loop
jbe
repnz
jmp
dec
jecxz
rol
sub
in
or
(bad)
(bad)
call
jbe
mov
mov
lea
int
mov
jae
lock
in
or
popa
mov
mov
jmp
fcmove
outs
cmps
inc
stos
jnp
aas
add
adc
mov
sub
cmps
dec
loopne
(bad)
dec
stos
out
inc
cmp
sbb
je
je
rol
sbb
cli
push
(bad)
(bad)
cmp
cmps
sbb
mov
(bad)
fwait
ins
or
(bad)
in
(bad)
(bad)
fisttp
lods
outs
aaa
jns
jge
sbb
out
pop
ins
ja
pop
outs
push
sub
sub
jmp
cmp
push
cmp
jae
mov
(bad)
(bad)
jmp
push
dec
stos
pop
sti
pop
sub
fdiv
mov
ret
lods
in
sub
and
xchg
daa
xor
cmps
retf
pop
mov
fcos
(bad)
call
mov
add
sbb
ds
sti
test
jmp
jo
and
mov
stos
jmp
mov
cmp
jmp
add
jmp
or
sub
(bad)
(bad)
mov
xchg
mov
out
stos
dec
cmps
xor
or
and
push
mov
add
cwde
mov
jg
je
sbb
(bad)
jmp
int
call
inc
push
pop
sbb
adc
in
or
cmc
sub
gs
jb
xchg
xchg
cmp
cmp
idiv
mov
mov
pop
ins
lea
pop
sub
cmps
xor
sub
(bad)
mov
in
jmp
jnp
(bad)
(bad)
push
fisub
or
mov
daa
(bad)
push
pusha
retf
mov
add
or
sub
jmp
xor
shl
sub
popf
retf
pop
bound
jae
xchg
das
clc
(bad)
jmp
pop
sbb
sbb
cs
jp
cld
xchg
dec
fstp
lahf
add
das
ror
sub
adc
sti
stos
or
(bad)
(bad)
jg
(bad)
push
jne
aam
push
lea
pop
ret
icebp
imul
and
loop
xchg
jb
dec
out
dec
bswap
arpl
push
push
mov
sub
pop
sub
int3
sbb
in
jle
(bad)
(bad)
(bad)
dec
jp
add
ror
pop
dec
cmc
stos
mov
jmp
mov
scas
cmc
pop
cmp
(bad)
call
ins
mov
icebp
repnz
es
in
push
fisubr
loopne
(bad)
dec
mov
or
push
leave
cmp
mov
shr
ins
xor
mov
(bad)
iret
mov
(bad)
pop
push
stos
jo
mov
(bad)
(bad)
(bad)
inc
inc
mov
cmps
shr
bound
inc
call
or
cmp
jecxz
(bad)
pop
ret
(bad)
(bad)
call
(bad)
clc
mov
leave
mov
or
mov
gs
fidivr
sbb
repz
mov
adc
ins
lods
rcr
sbb
mov
dec
adc
xchg
rcr
or
fcmovnbe
stc
lock
sub
bound
(bad)
call
push
mov
push
mov
retf
mov
test
mov
(bad)
dec
dec
sbb
ins
mov
hlt
daa
pusha
mov
sub
jecxz
cmp
call
lods
mov
out
arpl
repz
scas
clc
pop
or
jae
in
mov
sar
(bad)
(bad)
call
and
xor
jle
dec
imul
outs
sub
stos
ret
(bad)
mov
dec
sbb
mov
inc
fcom
xor
push
jecxz
in
(bad)
(bad)
(bad)
dec
js
imul
mov
mov
icebp
stos
xchg
and
scas
test
mov
jmp
(bad)
(bad)
js
xchg
pop
sub
mov
jns
xor
call
jb
pusha
in
pop
mov
(bad)
outs
cli
sbb
(bad)
rcl
push
pop
push
arpl
cmp
je
(bad)
mov
push
ds
es
(bad)
cmp
ins
jmp
sar
adc
loopne
mov
dec
cmp
add
mov
nop
xor
scas
call
jmp
pop
lods
(bad)
cmp
and
push
out
stos
aad
fisubr
retf
pop
or
dec
stos
dec
mov
jmp
mov
cld
jecxz
mov
js
sub
mov
leave
jge
addr16
adc
fwait
push
mov
(bad)
(bad)
jg
xor
jmp
push
imul
mov
outs
inc
xor
xchg
test
(bad)
call
outs
shr
(bad)
ins
call
adc
rcl
mov
fwait
bound
sahf
je
xchg
push
test
test
arpl
shr
movs
stos
iret
loopne
(bad)
(bad)
mov
in
lods
xchg
loop
cmp
or
dec
add
push
push
(bad)
jp
mov
mov
(bad)
sub
mov
(bad)
out
jecxz
cs
icebp
inc
(bad)
(bad)
(bad)
jmp
fsubr
popf
sub
or
xchg
movs
sub
mov
mov
icebp
(bad)
call
loope
inc
lods
leave
jp
xor
nop
push
cmp
mov
push
call
xchg
jbe
es
jle
mov
sub
jne
ss
push
pop
lahf
xchg
sub
fs
ds
push
addr16
scas
cs
aam
or
jae
pop
aas
push
mov
mov
rep
adc
(bad)
push
adc
mov
mov
std
ficomp
push
mov
push
jmp
pop
push
loop
(bad)
jmp
in
in
mov
stos
and
imul
(bad)
fstp
xor
in
jb
ins
jp
daa
mov
shl
cmp
in
imul
(bad)
jmp
or
ins
cmp
stos
movs
sub
in
hlt
sbb
mov
in
mov
jmp
fisttp
(bad)
mov
pop
or
shr
sub
xchg
sbb
retf
cmp
mov
or
popa
jmp
or
pop
pop
fldenv
cmp
scas
sbb
(bad)
(bad)
push
mov
mov
sbb
jmp
mov
jnp
lea
nop
fidivr
xchg
mov
std
call
xchg
sbb
jmp
push
je
mov
(bad)
jg
test
stc
push
mov
(bad)
mov
lods
std
imul
test
push
lods
outs
js
mov
jne
movs
pop
pusha
dec
(bad)
jmp
jno
mov
add
mov
stos
les
jb
es
push
int
inc
jb
xor
lahf
ss
or
mov
scas
jo
fst
mov
call
pop
mov
cwde
inc
in
(bad)
sbb
dec
and
dec
inc
movs
cmps
out
sbb
lods
ss
push
or
pop
adc
bnd
out
pop
jmp
xor
shr
sbb
mov
(bad)
jmp
xor
pop
cli
repnz
add
jbe
in
lds
pop
add
(bad)
(bad)
(bad)
jmp
push
fs
add
jb
test
loop
cmp
ss
xor
(bad)
push
mov
call
add
jmp
test
lahf
add
fist
lock
mov
dec
test
inc
mul
aam
cli
sub
shr
fistp
sub
test
mov
push
sbb
jnp
ja
scas
jmp
call
(bad)
(bad)
jmp
xchg
shr
cmp
jo
je
retf
cmp
imul
lahf
std
fnstsw
test
cs
jmp
fsubr
(bad)
(bad)
(bad)
(bad)
call
sahf
lea
ror
mov
cmp
retf
xchg
sub
std
mov
dec
(bad)
(bad)
(bad)
jmp
cmc
scas
xchg
js
imul
xchg
sti
pop
imul
call
shrd
jmp
and
aas
xor
adc
xchg
jne
xchg
and
loopne
(bad)
dec
cdq
imul
and
mov
mov
loop
into
pop
sbb
pushf
test
sub
repz
jmp
jmp
sub
imul
cmp
mov
into
sub
dec
(bad)
in
mov
add
popf
jmp
sar
push
jp
ins
lds
or
sbb
pop
scas
sti
std
js
push
ds
push
aam
xchg
sahf
jmp
jmp
into
das
dec
cmp
pop
push
(bad)
sub
jmp
inc
daa
pop
jb
data16
cmc
jecxz
inc
sub
lea
mov
repnz
sbb
jnp
dec
cli
mov
mov
cld
push
mov
or
jbe
mov
imul
repnz
push
cdq
(bad)
(bad)
(bad)
call
adc
stos
mov
jnp
call
jmp
ret
ds
jb
pusha
jmp
int
stos
adc
inc
shl
adc
dec
inc
sbb
mov
mov
sub
mov
popf
scas
enter
sub
mov
and
cmps
in
(bad)
fisub
mov
test
(bad)
(bad)
(bad)
call
cli
mov
or
or
sti
in
into
retf
call
cmps
mov
xchg
push
scas
mov
cmps
hlt
add
mul
cmp
ret
cli
aaa
std
jmp
fwait
repz
xor
pop
cmp
call
sar
adc
jmp
sbb
jmp
(bad)
jmp
or
stos
mov
xor
imul
mov
call
or
(bad)
(bad)
(bad)
jmp
dec
retf
and
fldenv
cdq
cmp
sbb
ss
xchg
cmps
call
(bad)
mov
sbb
cmp
push
xor
mov
jmp
mov
jmp
jno
xlat
rol
int
or
sub
aad
mov
stos
fisttp
fcomip
push
sub
or
jl
scas
test
mov
xchg
add
rcl
imul
mov
nop
enter
daa
popf
retf
mov
(bad)
(bad)
jmp
das
call
push
sbb
sub
ja
pop
retf
sub
pop
scas
dec
into
stos
popa
xchg
int3
push
(bad)
(bad)
mov
xor
sub
jl
scas
or
cwde
mov
add
inc
and
and
sahf
iret
jb
push
mov
sub
out
cmp
je
xchg
push
scas
test
jmp
cld
dec
addr16
push
arpl
lahf
mov
or
mov
sub
sub
sub
loopne
ja
pop
mov
push
imul
sub
dec
sub
(bad)
mov
retf
or
dec
mov
repnz
pop
das
cli
mov
stos
cwde
xchg
mov
je
sbb
adc
or
xchg
xchg
leave
mov
jmp
push
(bad)
call
jmp
sbb
(bad)
xlat
sbb
test
jmp
inc
repnz
xchg
push
push
aam
jo
sbb
popa
xchg
(bad)
(bad)
(bad)
call
aas
xor
sbb
sub
inc
movs
aad
icebp
dec
and
ins
popf
cli
adc
sbb
in
jmp
push
pop
ret
jg
imul
xchg
mov
outs
scas
jge
adc
(bad)
jmp
inc
cdq
jae
adc
xchg
movs
or
das
retf
push
(bad)
(bad)
push
shl
adc
push
jmp
je
mov
jge
ficomp
(bad)
(bad)
(bad)
inc
xchg
in
jo
mov
ret
jne
test
jp
in
imul
mov
and
sub
inc
and
fistp
jg
sub
mov
xor
dec
dec
sub
stc
push
je
(bad)
(bad)
(bad)
mov
ins
push
out
cmp
(bad)
cmp
cs
das
or
jmp
inc
adc
nop
cmps
(bad)
aad
mov
in
retf
imul
std
stos
and
mov
lods
rcl
xor
cmp
mov
jmp
xchg
pop
inc
mov
test
sbb
jg
(bad)
call
test
xchg
fnstenv
push
xchg
repz
jmp
fisubr
sub
stos
or
dec
push
jae
mov
rol
sar
(bad)
jmp
xchg
adc
dec
out
cli
cmp
mov
push
mov
fiadd
sub
or
sub
cs
icebp
(bad)
call
mov
hlt
dec
test
test
and
mov
cli
rol
and
daa
push
cmp
inc
dec
mov
into
and
dec
arpl
stos
repz
fidiv
lods
sbb
ss
pop
mov
dec
cmp
push
call
xchg
inc
(bad)
(bad)
dec
sub
xchg
mov
inc
xchg
retf
or
mov
(bad)
std
inc
xlat
outs
add
leave
xor
push
retf
(bad)
jg
sub
push
jmp
or
xchg
(bad)
iret
xchg
add
cmps
sbb
cmp
xor
cwde
cli
popf
or
aad
pop
xor
out
pop
call
(bad)
dec
cmps
inc
mov
sahf
stc
in
test
inc
fistp
mov
hlt
(bad)
(bad)
fld
retf
outs
or
call
push
repz
inc
push
jp
(bad)
(bad)
push
cmp
pop
adc
jmp
movs
fsub
sahf
dec
test
(bad)
call
jns
out
js
push
cmps
mov
jns
daa
sub
int
ret
pop
fmul
retf
(bad)
(bad)
call
je
mov
jae
lea
imul
adc
stc
(bad)
(bad)
(bad)
jmp
adc
or
push
imul
xchg
stc
repnz
jmp
sbb
jg
(bad)
call
jecxz
stc
mov
jae
mov
sub
jmp
push
loopne
mov
fwait
push
shl
xchg
sub
out
loop
jmp
(bad)
(bad)
mov
outs
scas
cmp
xchg
pop
scas
push
mov
daa
add
jmp
in
inc
dec
scas
pop
popa
add
cmps
(bad)
jp
mov
out
es
(bad)
stc
in
cmp
clc
clc
or
movs
test
jge
xor
(bad)
(bad)
(bad)
xchg
add
call
mov
jmp
dec
cdq
call
std
out
cwde
mov
mov
mov
call
popa
scas
and
pop
(bad)
(bad)
(bad)
(bad)
cli
push
mov
iret
mov
mov
movs
xchg
mov
idiv
int
(bad)
lahf
in
int
mov
mov
test
loopne
push
ret
cmc
mov
out
stos
xor
mov
(bad)
(bad)
mov
jmp
sbb
mov
push
mov
fsub
add
and
push
das
jecxz
call
outs
push
mov
jl
xchg
sbb
arpl
test
dec
scas
stc
jmp
sbb
mov
or
mov
lods
mov
fcomp
das
cli
das
shr
fdivr
call
adc
mov
ja
aas
fisub
jo
jb
cmps
dec
std
cmp
cld
test
add
enter
push
mov
icebp
jno
imul
xchg
pusha
(bad)
(bad)
(bad)
(bad)
jg
sub
mov
mov
sbb
pop
push
call
nop
mov
stc
(bad)
(bad)
(bad)
dec
push
xchg
adc
fwait
adc
pop
pop
(bad)
jb
mov
(bad)
out
int3
(bad)
(bad)
(bad)
jmp
cs
and
jle
adc
sahf
adc
xor
xor
mov
adc
or
ret
fwait
or
outs
fidiv
mov
inc
movs
(bad)
(bad)
(bad)
(bad)
(bad)
imul
adc
inc
push
pushf
repz
sub
xchg
add
scas
aam
push
ss
jmp
(bad)
(bad)
test
test
sub
ror
test
mov
mov
(bad)
pop
dec
jl
jg
add
ins
leave
sub
mov
arpl
es
adc
jecxz
pop
lods
out
mov
cmp
mov
sar
test
test
inc
ins
shl
shl
clc
stos
pop
cmps
jl
sub
mov
pop
cld
mov
outs
imul
loopne
iret
aam
scas
in
mov
adc
xchg
sar
mov
inc
dec
cli
inc
sahf
xor
and
xor
lea
in
imul
and
aad
fs
and
dec
pop
mov
mov
push
ror
dec
int
push
das
push
fsubr
(bad)
(bad)
(bad)
(bad)
mov
mov
outs
cmp
scas
sbb
and
es
cmp
hlt
sub
pop
ud0
ja
xchg
cmp
ss
and
and
mov
jg
pop
hlt
(bad)
call
and
int
adc
nop
iret
sbb
hlt
jnp
int3
pushf
ret
add
(bad)
jmp
rcl
iret
sbb
cmp
retf
mov
or
or
push
or
(bad)
(bad)
in
outs
cmp
pop
push
push
dec
push
ins
jnp
repnz
fld
bound
(bad)
jmp
cmp
mov
nop
jmp
jnp
cli
(bad)
(bad)
jmp
or
adc
cwde
mov
xchg
mov
(bad)
cwde
ins
xor
push
fisubr
fistp
mov
sbb
lock
dec
aaa
mov
scas
(bad)
out
pushf
mov
scas
push
stos
mov
jle
cli
jo
fist
mov
ins
mov
mov
out
(bad)
(bad)
(bad)
call
add
push
push
popf
push
pop
cmp
sub
jae
push
mov
(bad)
(bad)
jmp
mov
xor
push
test
xchg
jp
or
cmp
lahf
mov
pop
xor
(bad)
inc
dec
mov
xor
xor
push
leave
mov
mov
(bad)
jg
icebp
pop
or
retf
popa
int
push
enter
lea
pop
cmps
xchg
inc
cli
push
sub
(bad)
fcomip
mov
mov
mov
xchg
lahf
mov
adc
(bad)
(bad)
jmp
push
sub
mov
push
xchg
call
mov
mov
mov
ins
shl
xor
pop
ret
ret
mov
(bad)
pop
dec
dec
mov
(bad)
jg
shr
stos
jno
mov
jb
outs
mov
into
xchg
sub
xchg
pop
xchg
ror
mov
loope
mov
fdivr
jns
push
(bad)
iret
mov
xchg
dec
outs
mov
into
dec
ja
sub
loop
in
mov
out
inc
pop
xchg
jmp
pop
gs
call
push
loope
mov
or
popa
(bad)
sub
ins
(bad)
sbb
movs
push
adc
test
xor
sub
iret
lods
xor
ss
sbb
adc
(bad)
(bad)
(bad)
jmp
xchg
pop
fs
mov
bound
test
pop
and
retf
cmps
pop
in
pop
aas
mov
(bad)
push
movs
push
stos
pop
test
cs
out
sub
repnz
inc
sbb
(bad)
inc
xchg
js
(bad)
inc
daa
in
stc
and
pop
hlt
outs
dec
idiv
fisubr
inc
and
mov
push
fist
clc
fsubr
push
mov
xchg
std
cmps
(bad)
call
pop
lea
pushf
pop
xchg
mov
cmp
call
mov
sub
sbb
in
outs
stos
(bad)
fdiv
mov
sub
das
aad
(bad)
(bad)
(bad)
(bad)
in
mov
mov
push
ficomp
rcl
and
mov
das
cli
pop
xor
retf
movs
jne
sar
call
push
mov
fistp
xchg
fisttp
(bad)
fist
ret
in
xchg
std
iret
mov
je
xchg
(bad)
inc
ins
jns
(bad)
(bad)
(bad)
in
cs
(bad)
repz
cmp
lods
stos
std
(bad)
dec
add
sbb
push
xchg
sub
push
in
in
or
cs
xor
pop
sub
cdq
loop
(bad)
(bad)
dec
add
xchg
jmp
retf
sub
mov
mov
test
cmps
fnstenv
cmps
shl
push
jmp
xchg
ret
(bad)
(bad)
mov
stos
call
pop
inc
aad
push
adc
(bad)
cmp
stos
jbe
xor
add
out
xor
pop
test
leave
mov
enter
test
loopne
in
xchg
fistp
push
and
(bad)
(bad)
inc
fstp
sub
shl
adc
int
mov
aas
mov
mov
push
push
lahf
clc
xor
(bad)
call
(bad)
cmp
adc
or
aaa
dec
fwait
pop
add
dec
adc
sub
adc
(bad)
(bad)
dec
mov
addr16
cmp
sub
mov
sbb
test
add
jmp
or
retf
cmp
(bad)
call
cmp
sub
add
(bad)
xchg
test
jecxz
sub
aaa
inc
lods
ss
or
sbb
das
cli
(bad)
jle
retf
jmp
nop
xor
rol
nop
cmps
jge
jl
push
jp
(bad)
(bad)
call
repz
mov
pop
test
jmp
jne
test
pop
(bad)
xchg
sar
call
repnz
shl
cmp
sub
inc
xchg
lods
push
sar
(bad)
(bad)
push
adc
xchg
add
and
jle
dec
cmp
stc
push
sub
mov
dec
xor
and
mov
push
das
jp
jg
inc
fist
aaa
pop
sub
cmp
out
movs
cli
cmp
in
pop
adc
mov
(bad)
(bad)
out
clc
mov
aam
xchg
ins
adc
adc
pop
movs
jmp
retf
cmp
das
(bad)
push
call
enter
retf
sbb
in
fs
pop
stos
pop
lock
jg
jmp
sahf
cwde
shl
sub
xchg
dec
jl
or
fucomi
repnz
xchg
push
jmp
loop
outs
ror
scas
xchg
test
nop
sub
mov
loop
or
pop
hlt
jmp
lahf
xor
mov
cs
jnp
out
cs
mov
jecxz
(bad)
call
shr
pop
mov
sub
test
push
mov
inc
mov
mov
sub
(bad)
(bad)
call
call
pusha
jo
jno
into
stos
cmp
retf
xor
inc
and
mov
jmp
(bad)
call
leave
sub
adc
adc
mov
push
cmp
cmps
iret
mov
(bad)
jo
push
(bad)
jmp
mov
lahf
cmps
push
sub
pop
std
mov
fimul
arpl
scas
push
pop
fisttp
aas
push
loope
sbb
in
pop
push
adc
sti
js
arpl
(bad)
(bad)
inc
cmp
xor
sub
push
mov
fdiv
repnz
mov
or
mov
(bad)
(bad)
(bad)
push
mov
adc
int3
mov
outs
pop
stos
in
xchg
mov
shl
int3
push
(bad)
fcomip
mov
cmp
xchg
sub
sub
stos
ds
dec
cmp
fcos
(bad)
(bad)
dec
push
je
retf
cmp
or
cli
or
push
popf
pushf
enter
icebp
shl
mov
(bad)
call
(bad)
mov
cs
push
ficomp
fdiv
inc
pop
movs
inc
jmp
fs
jmp
lods
jmp
xor
jl
sbb
cmp
pop
cwde
mov
pop
ins
jbe
(bad)
(bad)
(bad)
jmp
retf
cmp
hlt
inc
mov
sub
mov
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
stc
popf
dec
fwait
mov
mov
dec
(bad)
dec
sub
(bad)
in
(bad)
fild
ret
(bad)
int3
adc
xor
cmp
mov
mov
(bad)
inc
add
mov
lahf
movs
int
mov
pop
call
inc
movs
pop
inc
push
mov
mov
adc
(bad)
(bad)
(bad)
(bad)
scas
push
or
adc
adc
fcom
push
jae
jno
add
cmp
ins
clc
pop
and
fcmovb
mov
jmp
and
movs
jno
sub
dec
(bad)
mov
loop
ficom
push
pushf
dec
sub
aad
fwait
jp
jns
or
jg
dec
mov
sub
jmp
lock
pop
ins
mov
cwde
sar
(bad)
(bad)
jmp
in
adc
push
inc
sub
pop
sbb
pop
mov
js
test
cld
scas
(bad)
(bad)
mov
sbb
push
or
mov
in
loopne
(bad)
daa
je
mov
ja
imul
lods
out
gs
rcr
(bad)
jg
in
xchg
cmps
cmp
sub
adc
scas
sahf
fdiv
enter
push
sbb
sar
dec
jnp
sbb
(bad)
dec
mov
push
scas
fist
pop
ja
pop
push
ret
and
cmp
jg
ins
pop
imul
xchg
add
call
mov
mov
ins
jle
xor
loope
sub
js
(bad)
(bad)
jg
mov
cmc
jae
out
inc
xor
and
pop
mov
inc
jbe
or
(bad)
jmp
movs
jbe
retf
scas
mov
js
xor
(bad)
push
dec
xchg
(bad)
(bad)
(bad)
call
adc
sub
leave
push
xchg
add
cmp
imul
(bad)
cmps
xchg
dec
jnp
push
sub
mov
std
(bad)
call
fst
pushf
pop
fld
(bad)
mov
mov
data16
lods
sub
jmp
mov
mov
(bad)
pop
mov
retf
mov
mov
lods
jmp
dec
xchg
std
push
aaa
and
sub
iret
into
lods
cmps
stos
jp
jmp
mov
jp
fucomp
call
mov
in
(bad)
cs
mov
fsubr
enter
sti
mov
movs
mov
stos
sbb
js
shl
mov
call
ja
aas
daa
sahf
std
mov
adc
or
jb
or
xor
imul
jnp
push
push
addr16
sbb
popf
pop
enter
cmc
repnz
mov
stc
xchg
xor
repnz
(bad)
(bad)
jmp
mov
rep
dec
cdq
ss
and
mov
push
jnp
mov
sub
(bad)
(bad)
call
les
imul
mov
mov
movs
pushf
pop
imul
das
lock
push
(bad)
(bad)
(bad)
push
mov
inc
int3
iret
mov
cmps
jp
in
add
xchg
loop
leave
xchg
xor
(bad)
mov
xchg
(bad)
(bad)
(bad)
dec
ins
cwde
xchg
das
or
mov
sbb
mov
(bad)
addr16
add
(bad)
sti
sub
push
jo
(bad)
(bad)
jg
mov
fistp
(bad)
fidiv
adc
popa
dec
movs
scas
xor
aad
and
xchg
or
(bad)
(bad)
(bad)
jmp
push
and
loopne
sar
scas
xchg
push
rcl
stos
test
(bad)
dec
jbe
pop
jmp
push
sub
mov
out
mov
cmp
iret
(bad)
icebp
jle
adc
js
and
loop
add
xchg
aam
(bad)
add
adc
sbb
scas
outs
and
stos
stos
mov
fcomi
out
and
dec
sbb
dec
inc
jmp
mov
push
jmp
clc
(bad)
(bad)
jmp
mov
sub
fisub
xchg
mov
daa
add
stos
cmp
cmp
daa
mov
cmp
push
ficomp
cwde
(bad)
(bad)
(bad)
(bad)
push
fimul
jmp
or
cmp
cmovnp
xor
(bad)
fcmovbe
(bad)
(bad)
(bad)
dec
es
and
repnz
inc
sub
mov
std
add
cdq
out
jmp
cld
ficom
jp
mov
sub
in
inc
scas
mov
mov
(bad)
(bad)
cmp
iret
lds
sub
lock
movs
(bad)
xchg
movs
push
push
or
loopne
fs
or
pusha
xlat
(bad)
into
xchg
(bad)
(bad)
call
ds
sub
pop
jns
fimul
scas
fs
and
add
inc
call
ret
pop
mov
out
retf
into
mov
xchg
mov
(bad)
call
push
out
les
push
jns
rol
popf
jecxz
dec
ins
dec
pushf
push
(bad)
fcomip
push
jo
arpl
xchg
mov
push
call
addr16
dec
clc
push
sub
into
jl
in
sub
cmp
pusha
jmp
icebp
jmp
add
call
cmp
xchg
cli
cmp
sub
pop
aam
push
mov
jmp
mov
pop
stos
fsubrp
lods
test
(bad)
(bad)
call
push
pop
in
cmp
jbe
ror
cmps
sbb
(bad)
mov
xchg
lea
(bad)
dec
sahf
test
mov
push
dec
mov
lods
push
jb
jnp
(bad)
cmp
movs
scas
pop
hlt
mov
lock
(bad)
jmp
inc
push
pop
(bad)
cli
pop
and
pop
cmps
(bad)
pop
jne
jle
(bad)
(bad)
(bad)
dec
cld
repnz
pop
and
stos
mov
and
xor
jo
clc
or
pop
cmp
sbb
lock
je
gs
sbb
(bad)
(bad)
call
je
es
sbb
call
mov
stos
inc
retf
in
xlat
jns
(bad)
dec
loopne
call
mov
in
out
xchg
shl
xor
je
xchg
xor
pop
and
adc
sti
clc
jp
(bad)
call
cld
sar
push
dec
test
rcl
adc
sub
outs
rcl
imul
int3
sub
jmp
iret
in
(bad)
mov
mov
test
pusha
outs
cmp
mov
scas
jmp
add
pop
sub
sub
or
js
rcl
pop
stos
stos
adc
push
leave
cli
lods
mov
or
stos
and
xchg
xchg
sub
call
jmp
jmp
or
pusha
xor
hlt
outs
pushf
fwait
int
cmp
scas
mov
cmp
jmp
test
xor
repz
test
(bad)
jmp
push
test
fisubr
mov
adc
xchg
sub
sub
push
xchg
daa
mov
(bad)
push
adc
jge
jmp
push
scas
mov
push
jmp
dec
test
or
jmp
dec
push
and
cli
fnstcw
sbb
jmp
aas
in
push
or
(bad)
dec
int3
or
mov
stos
push
xor
cmps
push
std
push
(bad)
(bad)
call
test
out
stc
test
repz
cmc
jmp
loope
out
js
call
(bad)
pop
lock
xor
shl
jmp
xchg
jg
test
dec
mov
sbb
sub
(bad)
(bad)
(bad)
in
jg
movs
inc
jmp
and
jb
clc
clc
stos
mov
ret
adc
add
aaa
std
or
mov
(bad)
in
dec
pop
(bad)
adc
stos
pop
aaa
(bad)
(bad)
(bad)
mov
mov
into
sbb
inc
gs
hlt
out
and
sahf
push
cmp
icebp
and
and
(bad)
push
jecxz
mov
sub
mov
xchg
ins
loope
(bad)
(bad)
fisttp
pop
lock
sub
push
mov
in
fisub
call
(bad)
(bad)
mov
sub
cmp
cmp
mov
(bad)
mov
cwde
or
ins
jb
mov
pop
mov
inc
clc
mov
clc
jns
mov
ins
fwait
mov
mov
(bad)
(bad)
aas
nop
mov
out
push
idiv
mov
shl
sub
(bad)
jg
test
and
mov
push
jmp
lods
arpl
fwait
xchg
mov
xchg
retf
(bad)
(bad)
(bad)
dec
mov
sar
sbb
or
jnp
loope
sahf
daa
sahf
sub
jmp
cmp
add
call
not
ret
rcr
mov
sbb
mov
jmp
mov
cmp
lds
(bad)
jmp
ins
ins
dec
mov
and
sub
mov
call
lods
dec
push
(bad)
in
(bad)
inc
mov
sub
pop
stos
jl
lock
sbb
mov
mov
(bad)
inc
or
retf
aad
xor
mov
inc
stos
sub
xor
pop
cmp
retf
mov
(bad)
(bad)
jmp
and
or
inc
fidivr
in
repz
push
aas
pop
(bad)
mov
push
mov
push
push
or
rol
xchg
enter
mov
or
xchg
cmp
or
sbb
scas
sbb
fmul
xor
outs
shl
loopne
cmp
cmc
jno
mov
stos
xlat
dec
enter
(bad)
push
test
fisubr
jg
cli
dec
das
mov
xlat
dec
clc
pop
sub
fidivr
sahf
stos
retf
push
adc
mov
inc
sub
loope
jbe
das
js
xchg
jbe
sti
aaa
or
(bad)
push
fldenv
jnp
pop
sub
test
aas
sub
das
(bad)
(bad)
(bad)
in
je
ss
pop
in
sub
outs
pop
imul
cmp
fcomp
fcom
mov
cwde
stos
(bad)
(bad)
(bad)
jmp
out
cmps
loopne
and
pop
inc
repnz
clc
lods
mov
push
(bad)
(bad)
(bad)
jp
cmp
pop
push
lahf
cwde
imul
popf
test
sbb
scas
(bad)
(bad)
pop
push
lahf
mov
call
add
ret
mov
sub
pop
loop
movs
and
(bad)
in
mov
js
hlt
add
das
fwait
stos
fstp
(bad)
fwait
jle
mov
ror
inc
pushf
push
lods
popa
adc
cmp
xchg
(bad)
(bad)
(bad)
jg
ror
xchg
outs
fucomip
rcl
mov
push
cmp
call
lahf
dec
out
(bad)
(bad)
(bad)
(bad)
ficomp
sbb
mov
add
and
shr
(bad)
hlt
and
push
hlt
jo
(bad)
(bad)
call
(bad)
mov
push
inc
mov
lahf
retf
xchg
repz
xor
imul
sbb
push
fcmovnu
outs
clc
push
(bad)
push
call
mov
test
sub
outs
jmp
(bad)
into
lods
(bad)
mov
mov
push
add
in
inc
dec
push
cmp
das
xchg
outs
jb
in
lahf
pop
mov
(bad)
jmp
(bad)
rcl
int3
inc
jp
adc
dec
outs
adc
call
sub
mov
out
lods
adc
(bad)
jg
stos
adc
into
ins
es
rcr
push
ret
mov
jmp
dec
sub
(bad)
(bad)
(bad)
(bad)
mov
push
push
dec
xchg
stos
inc
bound
jne
je
scas
sbb
je
pop
xor
or
mov
xchg
movs
mov
(bad)
(bad)
(bad)
jg
shl
inc
leave
nop
ins
fisubr
mov
clc
sub
adc
fdivp
add
jmp
cmp
repnz
in
fisttp
mov
sbb
mov
fisubr
or
dec
mov
lock
lods
mov
mov
jb
mov
push
dec
call
jmp
mov
sub
cmp
shr
inc
sub
mov
cdq
push
xchg
das
loop
lock
fxch
xor
xor
cmps
(bad)
call
fnstcw
mov
xor
jo
xchg
lea
mov
cwde
jg
add
inc
push
iret
xchg
mov
mov
mov
mov
push
ins
mov
dec
lock
sbb
xor
mov
xchg
pop
into
(bad)
jmp
pop
cmp
jg
add
push
shl
cmp
mov
jmp
adc
mov
lock
(bad)
call
es
ja
int
scas
lods
jmp
jnp
push
push
sub
stos
pop
push
jnp
mov
jmp
scas
cli
das
jbe
sub
jl
and
(bad)
nop
bound
mov
cdq
repnz
aam
jl
(bad)
(bad)
jg
jl
push
data16
and
mov
dec
bound
push
retf
jmp
jle
dec
mov
jne
pop
jp
int
jae
mov
into
imul
cmp
cmc
(bad)
call
nop
sbb
call
test
test
test
loopne
(bad)
(bad)
jmp
sub
enter
and
dec
push
imul
jl
retf
(bad)
(bad)
mov
xchg
mov
sub
pop
test
mov
scas
mov
mov
fmul
cs
jecxz
call
stos
dec
mov
test
add
mov
add
test
jg
out
fcom
imul
jmp
mov
ins
mov
pop
sti
(bad)
(bad)
fild
popf
outs
cmps
push
cmp
sbb
lahf
cmps
jmp
jo
jmp
push
dec
sub
pop
outs
jmp
mov
mov
xchg
and
or
nop
lods
pop
mov
lahf
and
(bad)
dec
inc
out
test
daa
or
loop
pop
adc
call
xor
xchg
pop
sub
mov
sbb
(bad)
jmp
lahf
clc
add
push
addr16
fidivr
repnz
stos
imul
sub
rsm
icebp
cmp
(bad)
(bad)
cmp
(bad)
mov
mov
adc
adc
mov
call
pop
inc
shr
rcl
stc
in
cmp
sar
(bad)
dec
push
loop
stos
imul
call
in
scas
ss
cmps
mov
js
test
push
fld
adc
(bad)
mov
mov
jp
mov
xor
inc
adc
dec
cmp
out
lahf
js
sbb
sub
sar
pop
or
pop
pushf
xchg
in
mov
push
mov
mov
call
mov
mov
or
inc
mov
test
cmp
inc
sbb
mov
sbb
sbb
lods
jp
dec
jmp
adc
mov
mov
mov
mov
cs
call
pop
sahf
iret
test
lods
inc
dec
sti
cmp
stos
dec
sahf
jmp
add
lods
adc
movs
lds
push
mov
out
adc
sub
xchg
cli
lahf
fidiv
(bad)
(bad)
(bad)
inc
lock
in
mov
jmp
jbe
call
push
into
jmp
push
mov
dec
mov
call
push
out
pop
xchg
cli
stos
sbb
cmps
dec
imul
mov
dec
ret
mov
add
scas
mov
retf
jl
pop
sub
inc
loope
pop
arpl
cli
cmp
or
hlt
mov
add
mov
mov
push
pop
or
fwait
xchg
(bad)
jg
cmc
(bad)
in
int3
mov
sub
leave
lods
xlat
sub
xor
cmps
cmps
retf
lock
jg
in
add
lahf
or
cwde
gs
iret
add
cmps
(bad)
(bad)
call
loope
and
push
out
retf
outs
push
push
call
add
sub
sub
adc
lods
add
ret
jl
inc
pusha
ret
jmp
in
clc
fbstp
jp
sbb
or
dec
mov
push
cs
cli
mov
clc
jl
(bad)
push
fisttp
test
not
cmps
(bad)
(bad)
(bad)
out
cmp
loopne
cld
adc
mov
jno
or
add
(bad)
jmp
inc
mov
ins
dec
jae
stos
retf
pop
fmul
xchg
cmps
stc
push
stos
fs
inc
push
lock
mov
or
sahf
sub
int
mov
stos
sbb
(bad)
(bad)
call
cmp
movs
adc
add
scas
(bad)
mov
mov
inc
add
dec
pop
dec
cmps
fs
adc
js
jmp
sub
fsubrp
adc
add
adc
mov
fcomip
(bad)
(bad)
(bad)
and
sbb
ins
std
test
fidivr
cwde
scas
fsubr
xor
call
mov
(bad)
mul
in
jbe
inc
sub
fistp
mul
(bad)
fcomip
(bad)
jnp
cs
test
jnp
popa
sbb
or
fwait
inc
cdq
iret
mov
mov
mov
lahf
mov
sub
sbb
(bad)
(bad)
mov
jne
pushf
push
retf
fdiv
pop
push
clc
xor
mov
repnz
mov
mov
fsub
(bad)
aam
adc
jp
inc
or
xchg
sbb
add
(bad)
jmp
mov
fcmovu
mov
fcomp
jmp
stos
(bad)
(bad)
(bad)
fild
jbe
sahf
sub
jle
rcr
(bad)
push
out
test
fwait
push
leave
mov
lock
repz
jb
dec
jmp
jmp
mov
pop
or
xor
mov
ret
sub
int3
fwait
out
lock
enter
shr
xchg
inc
cmp
scas
cli
adc
out
aas
add
rcr
sub
imul
sbb
enter
icebp
mov
(bad)
lea
sbb
dec
cld
(bad)
(bad)
(bad)
jmp
lock
mov
scas
pop
cdq
pushf
sub
test
jp
repnz
mov
(bad)
jmp
(bad)
cwde
adc
xchg
popa
pop
repnz
jg
push
and
sub
test
js
call
mov
cmps
repz
(bad)
dec
add
retf
sub
inc
cmp
cmc
mov
clc
cmc
xchg
mov
das
test
and
jg
(bad)
(bad)
cmp
and
outs
push
add
dec
sub
das
call
jmp
adc
mov
scas
test
xor
sub
or
(bad)
(bad)
push
leave
jle
sub
(bad)
jge
jecxz
fcomp
ror
ret
cmp
stos
cmc
das
mov
push
inc
jmp
(bad)
add
push
fcom
out
dec
pop
int
cmp
fcomip
inc
jl
(bad)
(bad)
call
icebp
repnz
inc
mov
add
xor
and
add
inc
fst
mov
repnz
in
add
(bad)
(bad)
std
mov
sub
mov
and
pop
xchg
jmp
add
(bad)
jmp
or
jb
dec
adc
lahf
daa
cmc
lods
(bad)
(bad)
jmp
popa
sbb
mov
stos
mov
pop
mov
mov
mov
jle
out
aad
(bad)
(bad)
call
xchg
addr16
test
mov
push
or
test
push
xchg
push
shr
ins
push
loopne
(bad)
(bad)
jl
(bad)
mul
outs
das
mov
jmp
ins
rcr
fldcw
pop
sub
loop
pop
xor
sub
cmp
or
cmp
cmp
push
inc
or
jno
in
popf
scas
pushf
cs
jmp
pop
mov
mov
add
outs
push
mov
fild
hlt
jae
inc
test
jo
cmp
sub
lock
clc
push
mov
pop
mov
adc
test
bound
or
(bad)
(bad)
out
mov
and
shl
mov
sub
inc
fild
cmp
mov
stos
mov
sub
sub
mov
jp
mov
(bad)
mov
jmp
js
jp
stos
stc
fimul
mov
cmps
out
pop
aam
into
(bad)
(bad)
(bad)
inc
jmp
shl
call
fldenv
shr
das
sub
lods
jmp
and
idiv
(bad)
(bad)
call
movs
mov
rcl
jns
cmp
mov
dec
and
(bad)
mov
(bad)
mov
call
xchg
mov
or
sub
sbb
dec
xchg
lahf
pop
clc
and
mov
pop
xor
push
jmp
popf
xor
imul
std
mov
retf
repnz
push
sbb
pop
(bad)
(bad)
(bad)
(bad)
jmp
dec
mov
fwait
jbe
mov
pop
lock
movsx
mov
sbb
sahf
mov
scas
test
cmps
cmp
push
fmul
push
fmul
scas
xchg
call
jmp
ror
out
enter
pop
mov
lock
mov
movs
call
mov
int3
mov
fmul
outs
(bad)
(bad)
inc
stos
or
pop
ins
clc
cmp
stos
pop
shr
shl
pusha
dec
inc
mov
sar
test
(bad)
call
mov
jbe
retf
sbb
sbb
ret
(bad)
fimul
push
outs
or
pop
xchg
lods
jmp
(bad)
in
into
mov
xchg
jno
ds
add
cmc
jg
xchg
dec
(bad)
repz
in
jne
lahf
xchg
jne
std
cld
(bad)
(bad)
(bad)
ficom
scas
fistp
jg
pop
xor
xchg
xchg
pop
(bad)
(bad)
push
lods
imul
outs
pop
repnz
movs
xor
push
cld
addr16
push
loopne
(bad)
(bad)
call
call
jp
pop
mov
mov
sbb
mov
(bad)
imul
(bad)
(bad)
call
cdq
lock
sub
add
and
mov
(bad)
mov
jo
jo
jmp
sbb
or
in
inc
xchg
mov
test
mov
(bad)
jmp
sbb
ss
mov
shl
sub
or
mov
cmp
not
and
push
sti
pop
ret
adc
retf
(bad)
(bad)
(bad)
jg
das
lods
adc
mov
hlt
mov
dec
pop
into
inc
stc
mov
fldenv
out
and
imul
pop
gs
sti
clc
hlt
sbb
or
int
xchg
sub
adc
xor
call
inc
xchg
push
es
inc
mov
imul
fild
std
mov
rep
xchg
sub
mov
xchg
mov
(bad)
rcr
mov
push
jmp
jne
sub
push
(bad)
push
push
mov
cmps
mov
mov
ss
sbb
out
adc
lock
mov
pushf
sahf
jp
mov
adc
iret
push
imul
adc
pop
or
cwde
ja
mov
rcr
pop
cmc
aaa
xchg
sar
mov
jbe
pop
push
enter
dec
dec
sahf
adc
popf
push
mov
aaa
push
sbb
fbstp
stos
(bad)
(bad)
dec
outs
fmul
mov
mov
adc
or
lahf
xchg
or
jmp
jb
pop
sub
iret
cmp
cmp
in
iret
sbb
mov
sahf
push
cmp
jne
dec
jg
ret
mov
mov
or
jno
xchg
mov
dec
xor
test
loop
(bad)
(bad)
jmp
ror
sahf
cli
outs
ins
sbb
scas
fsubr
dec
sub
(bad)
mov
xor
dec
paddb
cmp
cs
(bad)
(bad)
out
adc
xchg
fistp
fcom
addr16
sub
jl
std
or
(bad)
(bad)
call
mov
cmp
fisub
jmp
push
imul
xor
push
mov
push
(bad)
(bad)
(bad)
call
add
test
pop
cmp
es
fnstsw
stc
and
mov
mov
mov
adc
scas
cdq
mov
ret
cld
call
out
cli
push
(bad)
xor
cmc
push
adc
xor
aad
loope
pop
pusha
lock
pop
movs
mov
(bad)
fbstp
pop
or
push
outs
xchg
dec
retf
add
mov
jmp
jmp
outs
clc
cmps
sub
dec
jmp
ror
adc
in
addr16
neg
(bad)
dec
sub
aad
sub
das
repz
test
xchg
rcl
ror
add
pop
(bad)
(bad)
jmp
xor
(bad)
adc
test
cmps
(bad)
adc
call
loop
push
dec
pop
test
inc
sub
and
cdq
outs
mov
cmp
push
outs
mov
(bad)
call
data16
mov
push
jecxz
adc
aam
sbb
dec
sub
adc
or
pushf
and
push
mov
push
and
js
cmps
mov
dec
sub
mov
aaa
pop
shr
out
out
mov
push
scas
clc
(bad)
(bad)
mov
add
jcxz
stos
mov
call
mov
(bad)
jmp
outs
mov
mov
sub
sub
pop
ja
pusha
test
or
sti
call
(bad)
cli
das
sub
in
or
cwde
mov
cmp
mov
lods
jmp
loope
fild
into
inc
cmp
xchg
fcmovne
fild
loopne
out
(bad)
(bad)
mov
ds
xor
test
pop
pop
and
fdivr
ins
sti
hlt
pop
fsub
(bad)
stc
xchg
and
dec
lock
std
es
das
or
lods
fwait
dec
mov
dec
jb
mov
std
int3
scas
push
retf
mov
lock
sub
pushf
sbb
(bad)
mov
ror
mov
adc
or
cmc
jg
call
xor
jg
test
icebp
stos
inc
stos
pop
and
loop
cli
test
fcomip
pop
cmp
cmps
int3
adc
clc
stc
scas
inc
(bad)
jg
cs
call
div
xchg
mov
jb
mov
lock
(bad)
mov
mov
test
ins
fidiv
mov
pop
psadbw
or
fs
push
fld
data16
jg
test
inc
in
mov
scas
cs
out
xor
jle
mov
test
(bad)
(bad)
jl
mov
stos
mov
loope
sub
test
out
jmp
jb
not
(bad)
(bad)
call
test
mov
fst
pushf
push
push
rol
retf
cmp
jb
and
pop
fs
fs
mov
sbb
pop
retf
call
outs
jmp
ss
movs
inc
mov
dec
mov
and
and
push
retf
(bad)
(bad)
jmp
cmp
sub
mov
mov
xor
jecxz
mov
into
push
jg
lods
mov
nop
sar
ds
jae
adc
fmul
and
add
(bad)
out
mov
mov
retf
push
cmp
and
fist
lahf
or
xchg
mov
fidivr
cmp
adc
enter
ss
mov
mov
sub
push
cs
mov
pop
lock
sbb
cmp
jmp
jne
mov
movs
enter
cwde
(bad)
call
lock
fimul
jno
mov
test
xchg
inc
(bad)
(bad)
jmp
cmp
cwde
cld
(bad)
jnp
nop
out
iret
mov
hlt
popa
lock
(bad)
(bad)
inc
shr
mov
ret
mov
fistp
ret
out
(bad)
fldcw
movs
jmp
mov
inc
jmp
dec
mov
add
sub
mov
stos
inc
sbb
ins
mov
(bad)
call
mov
bound
or
sbb
in
cli
(bad)
mov
jmp
jl
aad
pop
stc
into
sbb
cmp
pop
mov
aas
into
jne
add
jecxz
ret
push
push
ret
jp
imul
ror
(bad)
jmp
fsubr
bound
dec
mov
jg
push
test
xor
cmp
xchg
sbb
push
(bad)
jmp
fsubr
push
test
call
sub
sbb
aam
pushf
xor
das
add
stos
(bad)
cld
jg
add
add
or
xchg
cmps
sbb
(bad)
(bad)
fcmovu
call
test
call
lods
sahf
popa
mov
(bad)
call
ret
aaa
ficomp
sub
dec
push
retf
push
scas
fnsave
(bad)
(bad)
(bad)
dec
ins
fmulp
dec
adc
movs
std
call
mov
repz
call
dec
push
fistp
and
bswap
lods
iret
shl
or
lea
adc
shr
lahf
jne
lahf
pop
rol
fldenv
out
aaa
loop
pusha
xor
inc
fs
(bad)
(bad)
call
std
stos
lods
pop
icebp
fild
out
pop
add
sbb
sub
and
ror
out
(bad)
xchg
push
std
jg
and
add
enter
dec
xor
repz
lea
(bad)
(bad)
(bad)
call
test
fsub
cmps
jle
(bad)
repnz
sub
in
xchg
scas
inc
cs
std
imul
(bad)
jmp
shr
les
ret
mov
in
call
loopne
push
nop
popa
out
clc
(bad)
(bad)
clc
mov
icebp
adc
mov
jp
ror
fsub
jecxz
mov
(bad)
(bad)
(bad)
(bad)
mov
clc
in
jns
out
xor
call
es
shr
sub
fs
pusha
std
push
sub
pop
(bad)
scas
push
sub
std
shr
add
jle
frstor
jp
push
sti
ds
mov
jmp
jmp
and
mov
lods
mov
call
in
mov
adc
jge
sub
sbb
sbb
out
(bad)
mov
mov
pop
loopne
jmp
call
jmp
push
push
imul
xor
js
fidivr
popf
xchg
push
in
not
iret
(bad)
cld
xchg
xchg
jmp
mov
jmp
cmp
sub
push
mov
xor
push
(bad)
(bad)
(bad)
call
cmp
dec
out
enter
mov
repnz
xchg
xchg
shl
mov
clc
(bad)
(bad)
(bad)
mov
mov
jge
jb
cs
and
outs
and
push
test
push
mov
cmp
repnz
jg
sbb
push
ficomp
mov
adc
sbb
(bad)
(bad)
(bad)
(bad)
jp
xor
shr
jecxz
jo
xchg
cmp
dec
outs
mov
xchg
in
dec
add
cmp
(bad)
(bad)
(bad)
push
cmp
push
and
inc
mov
adc
push
bound
pop
dec
mov
fdiv
sbb
fistp
mov
push
mov
(bad)
call
js
jg
jb
in
adc
xor
dec
dec
movs
inc
xor
pop
push
ds
(bad)
(bad)
call
ins
adc
sub
(bad)
jnp
pop
xchg
adc
xor
xchg
rcr
(bad)
(bad)
(bad)
jmp
sahf
sub
mov
mov
and
std
pop
jb
mov
(bad)
push
std
adc
or
cld
jns
cs
test
in
cmps
cli
pop
movs
outs
jmp
dec
or
mov
xchg
add
into
por
fwait
std
(bad)
fbld
std
inc
xchg
and
inc
adc
js
mov
add
or
cmps
mov
push
mov
add
pushf
pop
cli
xchg
jnp
rcl
sub
(bad)
xor
sub
shl
and
sub
sub
stos
jg
test
cmp
cmp
js
mov
inc
inc
inc
in
les
retf
clc
sub
pushf
leave
stc
(bad)
(bad)
(bad)
(bad)
push
mov
mov
sahf
push
(bad)
outs
stc
jae
js
mov
popf
bound
lock
in
(bad)
cpuid
lods
(bad)
(bad)
(bad)
(bad)
cmp
pop
push
retf
adc
rol
xchg
test
call
mov
jmp
sub
cmp
loop
test
pop
xchg
(bad)
mov
push
mov
(bad)
mov
loop
jo
xor
sub
cmp
xchg
jmp
pop
dec
jp
inc
ret
mov
imul
js
push
cld
outs
or
pop
lods
sbb
mov
adc
mov
sub
(bad)
call
mov
das
pop
loope
cmc
int
adc
jp
(bad)
scas
cmps
ja
shl
mov
cs
clc
fisttp
lahf
xchg
fs
(bad)
(bad)
mov
enter
(bad)
pop
jl
jmp
xchg
inc
sbb
fldenv
icebp
iret
in
sbb
lea
xlat
mov
inc
arpl
fidivr
in
in
scas
add
test
dec
xchg
test
and
mov
(bad)
dec
in
sahf
sub
mov
(bad)
push
push
xor
stc
repnz
dec
mov
jae
and
(bad)
(bad)
clc
cmp
in
rcr
sub
(bad)
or
sbb
add
(bad)
jg
retf
repz
jp
std
sbb
test
mov
mov
mov
(bad)
(bad)
call
cmp
es
nop
aaa
mov
jo
push
icebp
jne
fistp
jmp
cli
pop
dec
fs
aam
sti
dec
out
pop
mov
mov
and
mov
outs
xchg
pop
lock
mov
and
lea
sub
sbb
jnp
dec
sahf
out
mov
loope
mov
push
jb
retf
and
iret
push
mov
mov
(bad)
dec
pop
dec
nop
fmul
neg
pop
clc
nop
pop
(bad)
(bad)
(bad)
dec
sub
fnstsw
xor
fwait
fwait
and
jmp
jmp
enter
mov
mov
adc
mov
adc
xor
shr
fucom
xor
pop
dec
add
jg
xor
xor
stc
sbb
test
add
jae
xchg
ret
push
jp
(bad)
(bad)
(bad)
jmp
add
pop
(bad)
test
aad
sub
mov
jmp
cmp
lahf
inc
(bad)
mov
(bad)
mov
movs
push
pop
sub
das
mov
jmp
(bad)
jmp
hlt
xchg
test
lock
sub
jecxz
in
pusha
mov
std
pop
icebp
call
mov
and
jnp
xchg
fcmovbe
fisubr
stos
test
pop
(bad)
(bad)
(bad)
push
lahf
mov
push
stos
clc
inc
stos
arpl
je
jne
inc
in
dec
in
stc
cmp
jmp
into
in
inc
sbb
pop
out
sub
adc
add
call
jl
lahf
pop
(bad)
fadd
xchg
push
cmp
adc
test
sbb
mov
test
ds
and
fld
cmp
add
mov
mov
cmps
mov
jg
xchg
pop
das
das
bnd
in
or
(bad)
dec
jp
xchg
push
pop
or
mov
sub
jmp
cli
call
mov
jno
dec
cmps
(bad)
sti
sbb
repnz
lods
or
jle
arpl
(bad)
(bad)
jmp
in
out
out
sbb
retf
sti
iret
ss
sbb
add
or
push
loope
(bad)
fild
movs
mov
(bad)
call
inc
outs
dec
popa
leave
loopne
lods
bnd
sbb
inc
std
xor
sbb
dec
(bad)
(bad)
cmp
std
call
push
mov
jno
xor
xchg
inc
aas
das
push
cs
cmp
repnz
jno
sti
mov
data16
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
adc
sahf
dec
jmp
jae
sahf
xor
sbb
rol
aas
mov
test
xchg
imul
xchg
mov
mov
xor
(bad)
loopne
(bad)
call
xchg
mov
int3
leave
mov
push
inc
adc
out
push
fcom
aam
sar
ins
xchg
cwde
cmp
sub
(bad)
mov
int3
pop
mov
cdq
mov
and
sub
(bad)
jg
nop
daa
mov
cmps
or
sti
neg
out
jmp
dec
add
mov
movs
fcomip
(bad)
jmp
int
xchg
sub
push
movs
sbb
jle
mov
outs
and
xor
pop
cmp
mov
outs
cs
xchg
test
ins
retf
jmp
(bad)
(bad)
(bad)
jmp
or
fistp
movs
push
mov
pop
sahf
mov
data16
mov
(bad)
mov
dec
out
test
mov
retf
movs
ret
retf
dec
out
in
(bad)
(bad)
(bad)
jmp
pop
or
enter
pop
pop
cs
fst
xchg
sub
mov
fdivrp
sub
jmp
ret
mov
fisub
push
add
inc
dec
fmul
pop
cmp
lods
fs
(bad)
(bad)
(bad)
cmp
inc
pop
adc
add
mov
mov
jno
mov
pop
and
lock
sbb
mov
(bad)
stc
cld
icebp
pop
ficom
cmps
pop
loopne
stos
inc
fucom
sbb
stc
stos
in
sub
pop
sahf
mov
mov
push
repz
xchg
mov
mov
cld
fidiv
sbb
scas
ins
daa
repnz
sar
mov
shl
clc
fst
sbb
(bad)
(bad)
jg
js
sub
movs
imul
std
or
imul
xchg
call
inc
pop
out
pop
jo
(bad)
(bad)
jmp
mov
or
or
mov
cs
sti
sbb
ds
pop
ins
ins
call
(bad)
(bad)
mov
inc
lahf
mov
sub
mov
add
push
jo
scas
dec
(bad)
(bad)
mov
xor
pushf
movs
mov
out
js
hlt
imul
ja
retf
push
mov
sub
adc
iret
stos
jecxz
stos
pop
adc
(bad)
(bad)
jmp
push
pop
sub
xor
mov
or
(bad)
std
xor
ins
cmps
nop
les
psrld
sbb
(bad)
(bad)
mov
add
mov
daa
cli
adc
cmp
out
cmps
(bad)
sti
mov
inc
imul
push
idiv
mov
fisubr
int
or
aad
push
fs
sar
(bad)
mov
repz
jp
js
rcr
mov
(bad)
mov
xchg
cmps
mov
loope
arpl
sbb
mov
and
jg
jmp
or
pop
inc
mov
mov
retf
ins
(bad)
sbb
xor
xchg
nop
sbb
cld
lds
(bad)
fcomip
(bad)
cmp
in
shl
cmps
std
aas
fwait
lods
sbb
sar
int
test
call
inc
xchg
imul
xchg
fild
loope
daa
es
cmp
iret
clc
imul
xor
dec
adc
aam
jmp
cli
inc
into
lea
jecxz
cld
fimul
jmp
mov
jo
jmp
jmp
leave
fcom
out
lock
adc
ds
(bad)
mov
push
sub
test
test
in
sahf
popa
(bad)
(bad)
jg
dec
sub
scas
loope
sub
mov
arpl
fwait
push
dec
sub
cmp
jle
jmp
mov
or
idiv
(bad)
jg
push
push
push
aaa
xchg
xor
leave
in
int
jmp
in
xchg
int3
mov
mov
test
xchg
add
cmp
or
cmp
cs
sub
jge
(bad)
(bad)
(bad)
jmp
mov
outs
pop
mov
sar
jnp
or
mov
mov
scas
push
call
jle
mov
or
dec
fild
cwde
mov
jg
(bad)
dec
cmps
lods
pop
lods
call
dec
stos
pop
or
das
out
adc
fdivr
or
js
ins
or
popf
or
lods
repnz
xchg
retw
jno
test
sub
mov
pop
(bad)
pop
add
scas
dec
jmp
pop
pop
mov
sub
sub
pop
inc
add
pop
jp
iret
test
call
xor
sub
jmp
mov
cli
pop
cmp
in
stos
add
inc
stos
add
(bad)
(bad)
(bad)
push
mov
imul
cmc
or
into
or
push
sub
mov
and
jmp
fcomp
push
retf
mov
cmps
mov
ret
mov
fimul
mov
loope
mov
inc
pop
dec
mov
fbld
imul
dec
fisubr
sub
call
shr
hlt
vpcomq
(bad)
call
jae
pop
jmp
or
mov
and
xor
call
cmps
(bad)
call
cld
(bad)
call
mov
ins
cmp
and
pop
mov
dec
aas
pop
mov
push
mov
dec
je
stos
enter
xchg
xchg
call
call
inc
and
test
call
sar
(bad)
inc
mov
cmp
popf
stos
cmps
out
push
pushf
lahf
xchg
and
test
cmc
(bad)
outs
sub
ins
loopne
mov
test
cdq
mov
cdq
stos
mov
mov
das
ins
call
popa
stos
jge
adc
and
pop
or
arpl
sub
(bad)
jmp
les
cmp
mov
xlat
xchg
fwait
std
cld
hlt
cmp
mov
(bad)
cmp
jg
push
cwde
lock
jmp
xchg
call
outs
call
pop
ret
lds
mov
pop
stos
loop
(bad)
stos
jno
(bad)
push
call
pop
inc
(bad)
sbb
fnstenv
movs
ja
mov
(bad)
(bad)
(bad)
inc
loop
push
pop
daa
xchg
jp
leave
mov
dec
cmp
stc
jmp
(bad)
(bad)
jmp
jae
rcl
fmul
and
sub
cli
and
lods
dec
push
test
call
mov
or
lock
ret
xor
mov
lock
mov
stc
xor
test
fdiv
push
std
out
clc
dec
les
xor
and
inc
dec
into
mov
(bad)
fist
mov
in
mov
stos
call
ffreep
fisubr
dec
(bad)
mov
stos
sbb
(bad)
(bad)
(bad)
(bad)
jp
sub
shl
push
mov
retf
fcomp
scas
push
scas
jbe
jnp
mov
ins
push
cli
(bad)
(bad)
(bad)
call
or
inc
pop
mov
xchg
and
sahf
lea
outs
cld
adc
jae
mov
nop
in
idiv
jmp
iret
fisttp
shl
mov
in
cld
jmp
xor
jmp
push
out
call
(bad)
jb
and
cld
pop
sbb
adc
sub
test
je
adc
xor
mov
or
and
loope
sahf
cld
push
sbb
sbb
(bad)
(bad)
(bad)
dec
xor
add
sar
xchg
std
sub
lods
cmp
cmp
jg
call
das
cmp
imul
mov
(bad)
and
mov
(bad)
(bad)
js
mov
imul
retf
cmp
mov
dec
jg
jg
xor
out
adc
mov
mov
out
out
push
push
dec
loopne
add
out
jecxz
scas
rol
outs
ss
test
call
mov
sbb
in
mov
ss
mov
push
xor
push
fisubr
mov
and
dec
js
ja
(bad)
or
ror
movs
out
test
fcomp
mov
(bad)
cmp
push
dec
mov
aam
and
test
jg
jns
and
xchg
and
in
push
sahf
inc
sar
inc
mov
mov
jmp
es
mov
in
add
(bad)
(bad)
jmp
ror
gs
push
lock
ja
mov
lahf
sub
iret
js
sub
(bad)
(bad)
cmp
(bad)
adc
aas
popa
fld
mov
pcmpeqw
out
jle
daa
repnz
scas
aam
xchg
cmp
imul
in
int3
sbb
(bad)
(bad)
(bad)
call
inc
cmps
iret
push
sub
loop
xchg
sub
imul
cmp
(bad)
aaa
(bad)
jnp
imul
(bad)
call
push
mov
jns
out
jmp
fidiv
sbb
lahf
stos
inc
call
add
(bad)
out
pop
addr16
dec
cmp
jae
jns
mov
stos
ja
cmp
(bad)
(bad)
fbld
into
daa
mov
outs
call
je
sub
das
das
sar
cmp
icebp
push
cmp
mov
pop
loop
call
int
inc
int3
cmps
or
or
adc
jb
call
mov
push
jmp
(bad)
(bad)
(bad)
jmp
iret
mov
loopne
push
pmaxsw
dec
scas
push
cmp
mov
popf
(bad)
(bad)
(bad)
(bad)
jge
ins
xchg
pop
rcl
mov
adc
test
jmp
(bad)
ja
out
(bad)
(bad)
jmp
iret
ins
push
adc
sahf
ret
and
and
inc
jmp
or
mov
mov
sub
xchg
xchg
not
fisttp
add
mov
sub
enter
jg
scas
aas
stos
sub
call
or
or
lea
lds
lock
cmps
jns
push
(bad)
(bad)
(bad)
push
dec
push
mov
popa
mov
push
gs
or
ss
push
pop
call
add
add
(bad)
dec
mov
retf
mov
out
stos
daa
int3
imul
loope
(bad)
mov
pop
gs
lahf
sbb
push
adc
in
or
movs
inc
add
retf
sahf
pop
loope
cmp
(bad)
(bad)
(bad)
call
(bad)
adc
mov
das
call
fdecstp
dec
sbb
add
(bad)
das
outs
or
dec
xor
mov
test
and
call
mov
push
enter
push
xor
pop
mov
pop
das
xchg
dec
mov
jmp
pop
ror
leave
loopne
scas
pusha
ins
stos
push
sbb
test
mov
cmps
test
xchg
push
add
mov
add
mov
cmp
(bad)
(bad)
mov
xchg
fsub
in
adc
scas
cmp
ficom
ret
fsub
(bad)
jmp
adc
xlat
pop
cmp
repnz
inc
dec
cmp
ds
push
aaa
push
ret
and
loop
jecxz
mov
test
cmp
(bad)
(bad)
(bad)
call
sbb
sub
lods
cs
mov
lock
and
xor
loope
(bad)
call
loopne
cmps
mov
and
call
pop
pop
(bad)
ror
sar
ficom
jmp
clc
pop
push
xchg
aam
ds
dec
mov
inc
push
(bad)
(bad)
sti
jmp
lock
mov
imul
xchg
add
mov
(bad)
fsub
mov
test
cwde
push
imul
and
jecxz
pop
add
gs
add
(bad)
jmp
lahf
xor
dec
mov
rol
mov
(bad)
cmp
clc
cmps
pop
ret
jmp
cmovl
adc
mov
xchg
popf
nop
jge
aad
loope
call
std
fs
out
data16
jmp
cmc
push
ret
mov
dec
sub
scas
and
nop
(bad)
cli
push
sets
mov
in
outs
xor
sbb
test
fwait
cs
mov
imul
cwde
jmp
sub
jmp
jmp
push
repnz
pop
clc
stos
pop
inc
jge
mov
adc
mov
cmp
cwde
push
mov
jb
arpl
push
jnp
retf
jl
mov
jbe
dec
(bad)
(bad)
jg
xchg
test
(bad)
dec
xor
div
sub
mov
(bad)
(bad)
(bad)
inc
test
ffreep
sbb
pop
std
xor
sti
push
pop
call
call
pop
icebp
dec
mov
cld
dec
es
das
dec
xor
int
sbb
mov
jg
and
aad
fldcw
cs
popf
xchg
je
out
movs
imul
jg
test
sub
sar
js
dec
fld
lahf
sbb
(bad)
(bad)
jmp
hlt
scas
push
call
loop
adc
mov
dec
pop
dec
imul
(bad)
cli
gs
(bad)
(bad)
jmp
mov
fild
sub
(bad)
push
sbb
repnz
imul
jge
(bad)
push
test
js
dec
mov
dec
sub
shr
fisttp
cmps
(bad)
(bad)
fcomip
push
das
mov
aam
xlat
mov
fst
pushf
mov
xchg
add
(bad)
(bad)
(bad)
jg
(bad)
mov
jmp
mov
cmp
mov
mov
jmp
dec
sub
sub
jbe
fdivr
mov
pop
iret
ret
cmp
(bad)
jmp
cmps
cmp
fisttp
cmps
jmp
lahf
gs
mov
ret
xchg
clc
sub
hlt
sbb
leave
inc
mov
cmp
add
xor
pop
(bad)
call
push
retf
cs
fldcw
out
in
xchg
retf
push
cmps
pop
hlt
push
sbb
std
cmc
xor
inc
sbb
dec
add
xchg
dec
loopne
call
iret
dec
ficom
mov
test
out
dec
call
mov
jmp
fist
int
ret
jmp
add
(bad)
call
cli
cli
out
ins
test
test
fadd
mov
jb
push
aas
mov
xchg
mov
lock
call
mov
jle
or
loop
std
jp
dec
in
fimul
lds
call
mov
pop
in
mov
pop
dec
pusha
(bad)
adc
mov
jl
cmps
jge
xor
mov
pop
add
mov
push
leave
lods
lods
pop
out
dec
cmp
jo
mov
dec
nop
mov
push
es
loopne
(bad)
push
mov
test
(bad)
pop
jmp
into
(bad)
mov
test
jle
js
test
sahf
adc
push
(bad)
stc
cli
mov
pop
mov
jmp
sbb
mov
aam
in
xor
mov
popf
pop
mov
outs
lock
xor
sar
inc
cmp
fmul
stc
xchg
test
jne
mov
mov
inc
movs
call
inc
call
jo
movs
repnz
fbstp
std
add
sbb
push
sbb
mov
or
(bad)
fisubr
scas
test
ja
loope
in
iret
(bad)
(bad)
(bad)
call
pop
sbb
jnp
stos
pop
pop
mov
adc
es
xor
scas
gs
adc
iret
inc
(bad)
jmp
inc
mov
clc
test
push
loopne
icebp
cmp
stos
mov
pushf
mov
(bad)
jmp
in
cwde
mov
sub
loop
cmp
es
fisubr
js
(bad)
sub
jo
inc
cld
or
call
mov
xlat
pop
std
dec
adc
shl
mov
into
popa
inc
adc
mov
test
or
pop
out
xor
stos
mov
jg
js
lock
(bad)
xchg
xor
jl
jns
imul
(bad)
(bad)
(bad)
(bad)
jmp
add
jecxz
enter
cmp
mov
inc
push
pusha
mov
cmp
jp
(bad)
(bad)
in
sar
into
movs
cdq
adc
enter
pop
into
movs
or
imul
movs
out
addr16
(bad)
(bad)
call
add
shr
push
popa
jne
mov
dec
cwde
and
(bad)
adc
cwde
jecxz
or
outs
dec
outs
cli
test
mov
mov
xchg
in
xchg
push
or
(bad)
out
lea
sub
push
(bad)
hlt
fwait
pop
or
lock
fsubrp
pop
inc
pushf
(bad)
dec
cmp
xor
mov
inc
clc
xchg
mov
aam
leave
mov
arpl
mov
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
je
jl
sbb
jp
sbb
sar
xchg
cli
pop
in
sub
(bad)
(bad)
(bad)
call
call
jmp
test
movs
loopne
lods
push
sub
(bad)
add
push
mov
mov
push
stos
and
mov
adc
lss
jmp
adc
(bad)
dec
scas
jge
call
retf
ds
mov
pop
(bad)
(bad)
mov
imul
push
sub
pop
mov
js
stos
movs
fwait
mov
(bad)
jg
(bad)
fdivr
test
into
push
loop
scas
mov
jae
bts
test
test
pop
ud0
(bad)
(bad)
jle
shl
inc
pop
lahf
outs
leave
inc
(bad)
dec
in
sbb
frstor
and
scas
repz
(bad)
fcomip
jmp
cmp
aad
hlt
cmp
mov
lock
sbb
(bad)
iret
sbb
jecxz
mov
mov
mov
pop
fdiv
enter
(bad)
das
cli
clc
push
mov
popa
das
scas
ins
xor
xchg
cmp
fxsave
call
scas
xor
sbb
pop
push
test
dec
sub
sbb
iret
push
movs
add
cmp
ror
push
fisubr
sub
jecxz
mov
(bad)
jg
adc
sbb
xor
adc
into
stos
stos
outs
mov
(bad)
cli
(bad)
and
jb
ficomp
stos
mov
jge
add
(bad)
(bad)
(bad)
inc
jmp
adc
rcr
fadd
xchg
pop
jecxz
cmp
imul
dec
movs
pop
lods
jp
or
sub
pushf
and
inc
sahf
ins
sbb
jle
mov
dec
sub
test
inc
pop
cmp
ins
xchg
inc
xchg
pop
enter
jg
pop
icebp
mov
xor
push
aaa
xlat
test
xlat
bound
or
jg
pop
pop
pop
dec
retf
jg
call
mov
add
inc
jmp
fistp
dec
outs
lea
popa
mov
add
outs
cli
(bad)
clc
sub
mov
add
push
add
push
test
or
scas
iret
ins
cmc
adc
cs
or
call
add
lods
xchg
cli
(bad)
(bad)
jmp
push
and
jae
cmps
aad
in
out
outs
xor
mov
mov
xchg
(bad)
jmp
test
lods
mov
cwde
adc
sbb
jmp
sbb
fsubp
xor
(bad)
(bad)
(bad)
call
into
dec
and
inc
cmps
mov
stos
inc
pop
jne
push
shrd
mov
jmp
or
test
jns
push
mov
push
inc
call
add
repnz
jmp
pop
mov
stos
push
(bad)
push
push
(bad)
(bad)
(bad)
call
adc
inc
jp
mov
lods
ds
mov
xor
(bad)
(bad)
ja
clc
call
jp
dec
jns
popa
out
sub
aaa
cs
add
mov
push
jno
xchg
(bad)
out
hlt
adc
jmp
ss
(bad)
(bad)
jmp
lods
sbb
mov
retf
jns
out
or
inc
fcom
retf
(bad)
jmp
fmul
sbb
mov
fdiv
cmp
movs
cli
jmp
push
jmp
jnp
out
push
or
pusha
ss
sbb
cmp
(bad)
(bad)
push
lds
xor
cli
std
je
setb
neg
add
(bad)
push
std
xchg
pop
lds
add
mov
sub
push
test
(bad)
jmp
pushaw
jp
mov
in
mov
icebp
fistp
push
or
outs
mov
cmp
and
popf
movs
(bad)
jmp
inc
int3
mov
js
(bad)
int3
mul
popa
or
movs
ficom
dec
dec
mov
neg
iret
xchg
adc
push
fwait
movs
dec
fwait
xor
pop
cmc
and
loope
mov
inc
in
mov
dec
mov
adc
mov
push
hlt
sub
mov
pop
sbb
jmp
push
dec
stos
sub
(bad)
lods
stos
adc
push
out
dec
push
push
sar
mov
adc
mov
jle
(bad)
(bad)
(bad)
dec
push
sub
shr
fisttp
dec
mov
cmp
dec
gs
and
(bad)
(bad)
call
ret
mov
mov
xchg
leave
loop
push
or
and
adc
call
icebp
pop
mov
or
in
jns
(bad)
call
stc
aad
cmc
xchg
hlt
xor
mov
(bad)
inc
xor
xchg
(bad)
fcomip
dec
dec
adc
sbb
mov
js
lods
sbb
fisttp
xor
cmc
call
push
adc
das
jo
jbe
in
retf
or
dec
das
sar
mov
test
lds
cmp
xchg
and
dec
int3
ds
call
push
pop
(bad)
fsubrp
jnp
jmp
mov
xor
outs
mov
jns
in
xor
pop
and
iret
stos
addr16
push
push
jecxz
inc
imul
mov
dec
sub
scas
outs
in
inc
(bad)
(bad)
call
sub
push
mov
or
push
mov
scas
(bad)
(bad)
push
inc
test
test
add
xchg
es
sub
mov
(bad)
(bad)
cmp
cs
sub
mov
in
js
les
dec
adc
mov
dec
sbb
call
sub
sub
push
cmp
jb
pop
xor
clc
dec
and
(bad)
cmp
mov
sbb
jp
in
stc
cmp
popf
fmul
pop
dec
arpl
mov
std
or
(bad)
out
(bad)
(bad)
call
vmovq
fist
mov
push
test
mov
aam
or
(bad)
fwait
(bad)
(bad)
(bad)
(bad)
mov
fsub
fistp
or
and
das
xchg
leave
xor
cmp
sub
call
push
iret
xor
fdivr
in
mov
sar
xchg
out
je
sub
jg
mov
stos
fstp
dec
or
into
rol
imul
(bad)
call
cmp
int3
jle
retf
leave
pop
xchg
ins
scas
or
(bad)
retf
pop
les
pop
adc
jmp
pop
cmp
dec
in
or
jbe
cmp
popa
cli
retf
push
(bad)
call
adc
pop
in
mov
call
xor
(bad)
(bad)
dec
dec
cld
pusha
shr
dec
adc
leave
mov
mov
fld
(bad)
(bad)
call
xchg
lock
sbb
mov
(bad)
adc
xchg
call
(bad)
jmp
cmp
mov
out
jmp
das
(bad)
jbe
test
push
stos
fbld
inc
bound
mov
and
(bad)
loop
(bad)
(bad)
inc
and
out
ins
movs
push
xchg
(bad)
pop
push
mov
jns
cmp
dec
mov
inc
(bad)
(bad)
(bad)
jmp
ins
dec
fild
mov
adc
push
cmp
(bad)
dec
inc
lahf
in
rol
retf
jmp
and
mov
out
add
jp
jno
(bad)
(bad)
(bad)
dec
lock
inc
mov
fs
daa
sub
pop
shl
fdivr
out
jp
scas
std
scas
clc
jmp
pop
outs
jl
fwait
js
ret
jmp
jle
retf
jo
sub
and
push
les
sub
mov
xchg
in
(bad)
jmp
mov
push
pusha
mov
xor
mov
(bad)
(bad)
(bad)
push
into
loop
sub
mov
mov
jo
pop
iret
pop
push
ror
ins
mov
(bad)
dec
or
sub
jg
retf
test
push
movs
xchg
fs
(bad)
(bad)
mov
jle
jmp
in
int
test
retf
loopne
jmp
pop
hlt
(bad)
(bad)
dec
retf
fwait
daa
sub
sbb
sbb
mov
cmps
cmps
pop
mov
loop
pop
mov
iret
mov
push
(bad)
jmp
clc
out
scas
add
mov
loop
addr16
aam
push
outs
mov
rcl
dec
gs
in
(bad)
mov
cmc
(bad)
jmp
mov
mov
inc
scas
int
stos
mov
scas
xor
inc
mov
mov
(bad)
(bad)
(bad)
(bad)
out
push
jb
mov
cdq
fadd
js
test
imul
xchg
daa
add
rol
sub
(bad)
mov
je
leave
and
pop
repnz
xchg
jbe
adc
mov
iret
sti
test
(bad)
(bad)
(bad)
in
outs
rcr
ins
cdq
test
cmp
jbe
call
jp
mov
retf
fstp
jmp
cmp
jo
out
fbld
cmc
pop
cmp
fisubr
pop
pop
mov
fimul
movs
pop
inc
fimul
stos
dec
or
out
pop
std
out
inc
sahf
mov
or
cmp
in
(bad)
(bad)
(bad)
jmp
jmp
adc
(bad)
daa
js
test
imul
cdq
les
(bad)
call
(bad)
retf
in
add
dec
cld
cmp
mov
or
adc
(bad)
call
dec
inc
pop
mov
gs
outs
cmp
je
add
pop
ror
and
mov
inc
shl
iret
mov
or
push
xor
mov
fwait
mov
aaa
js
imul
(bad)
jg
sub
and
dec
add
adc
sbb
sub
(bad)
(bad)
jmp
shl
jae
lock
hlt
sub
sbb
imul
mov
(bad)
mov
cmps
sub
aaa
cli
scas
in
ins
fsubr
loop
sub
scas
jg
(bad)
inc
mov
add
aad
or
xchg
sub
(bad)
call
cmpxchg
sub
aas
inc
and
sahf
je
and
(bad)
(bad)
jmp
retf
imul
lahf
(bad)
fcmove
das
fld
cmps
test
(bad)
inc
pop
jno
repnz
sub
mov
and
mov
jp
mov
(bad)
(bad)
inc
jl
push
mov
sub
popf
lods
sahf
int3
mov
lea
or
mov
out
xor
jge
in
shr
cmc
xchg
adc
hlt
sub
cmp
or
(bad)
dec
repz
lea
idiv
fcom
inc
(bad)
dec
push
sbb
dec
clc
outs
cli
jg
(bad)
out
sub
mov
sar
pop
mov
mov
cwde
add
(bad)
(bad)
(bad)
out
or
xchg
aaa
popa
fsubr
stc
das
dec
xchg
aas
adc
xor
(bad)
xchg
sbb
push
mov
in
xchg
pop
sub
xchg
loope
or
cs
jmp
push
retf
dec
loop
and
test
loop
bnd
loopne
(bad)
jg
sbb
cld
mov
aaa
test
fisub
loope
cs
jb
jbe
(bad)
mov
or
sub
xacquire
stos
sub
(bad)
(bad)
jmp
cmp
pop
xchg
pop
shl
mov
ficomp
ficomp
mov
dec
mul
dec
retf
(bad)
loopne
data16
(bad)
call
push
mov
sahf
or
scas
das
inc
cmp
adc
sub
sar
jmp
push
in
aam
fnsave
scas
push
inc
aaa
cmp
enter
cmp
(bad)
(bad)
ficomp
mov
adc
pop
jmp
mov
stos
stos
(bad)
(bad)
(bad)
mov
cs
jmp
jl
shr
cs
jmp
sub
pop
adc
jmp
lods
movs
cmps
sbb
call
pop
mov
fcmovbe
dec
or
or
sub
mov
out
jp
xor
cwde
pop
mov
mov
scas
cli
xchg
dec
ins
inc
clc
cwde
and
push
jl
add
rcl
(bad)
aad
call
mov
push
retf
push
in
popa
neg
cmps
cdq
mov
(bad)
(bad)
(bad)
jg
and
add
xor
fisttp
scas
inc
mov
shl
std
mov
mov
push
test
mov
cmp
cmp
(bad)
mov
repnz
(bad)
jg
jbe
or
pop
mov
mov
push
dec
stos
inc
cvtsd2si
jnp
inc
fistp
imul
mov
push
stos
jle
inc
mov
cmps
dec
mov
sub
jmp
jmp
rcr
mov
push
jns
dec
mov
dec
sub
dec
sbb
jne
sub
cs
(bad)
(bad)
jmp
vpavgw
fnstenv
pop
call
jmp
stos
movs
jno
sbb
adc
dec
fisttp
(bad)
call
mov
dec
in
pop
xchg
nop
test
cdq
xchg
cmps
cmp
std
retf
inc
clc
aad
inc
icebp
jbe
retf
xor
push
pop
clc
leave
pop
dec
clc
dec
dec
arpl
int
push
retf
push
fisubr
sbb
sub
scas
adc
(bad)
jg
or
add
push
shl
push
mov
jmp
data16
(bad)
sub
jge
xchg
push
clc
clc
iret
mov
outs
cli
jmp
push
cmc
mov
push
mov
mov
in
mov
and
cwde
imul
loop
mov
(bad)
(bad)
fucomip
sub
jmp
and
sub
les
dec
and
dec
push
dec
pop
xor
push
cld
dec
mov
loopne
fldenv
jg
mov
pop
xchg
xor
(bad)
ins
xor
cld
in
cmp
fnsave
bound
dec
or
aad
iret
call
inc
cld
(bad)
xchg
aam
push
jmp
stc
xor
and
or
lods
and
js
(bad)
push
cld
mov
push
retf
scas
jnp
out
xor
jo
push
xchg
call
(bad)
(bad)
(bad)
(bad)
cmp
sbb
fisttp
xor
iret
adc
(bad)
retf
loop
rcr
sub
push
lods
ret
or
(bad)
push
push
test
sub
cmps
cli
call
(bad)
(bad)
(bad)
inc
sbb
pop
push
push
jmp
imul
push
sbb
and
fsub
cmc
(bad)
(bad)
jg
enterw
push
push
imul
and
or
mov
lods
add
mov
push
xchg
inc
jmp
(bad)
(bad)
jg
daa
pop
mov
or
and
mov
arpl
iret
xchg
push
ins
(bad)
in
pushf
(bad)
jmp
out
cmps
pop
pop
loopne
inc
pop
(bad)
call
es
lds
lods
push
cli
test
add
mov
and
cmp
xor
add
sbb
addr16
pop
fwait
sub
lahf
sub
retf
cmp
xchg
(bad)
cmps
stc
pop
in
sub
fidiv
stos
xor
cmp
dec
enter
mov
sbb
pop
ret
or
jge
mov
mov
daa
rcr
jmp
inc
(bad)
xchg
sar
cmp
and
mov
(bad)
(bad)
(bad)
jmp
jl
(bad)
jmp
sbb
cmp
mov
shl
pop
lock
int3
or
push
add
xchg
mov
in
(bad)
stos
outs
mov
dec
(bad)
(bad)
(bad)
inc
jge
xchg
jb
das
rcl
shl
ins
call
pop
inc
xchg
outs
mov
jmp
stos
jo
fist
mov
mov
xchg
mov
push
popa
xchg
(bad)
mov
adc
jl
popa
ds
sbb
sbb
mov
cwde
mov
jmp
stos
aam
leave
or
and
sub
cli
call
adc
ret
mov
out
jl
(bad)
cmp
jmp
add
add
push
pop
sub
std
mov
jb
push
xchg
cmps
jns
add
popa
adc
retf
jle
adc
mov
mov
and
pop
push
aas
outs
jg
sub
pop
(bad)
sbb
test
(bad)
mov
shl
jmp
xchg
mov
jecxz
(bad)
in
pop
rcr
loope
cld
(bad)
(bad)
cld
push
pushf
sub
jbe
and
mov
stc
call
nop
lods
ret
mov
js
add
and
pop
jmp
pop
(bad)
(bad)
(bad)
call
sub
stos
and
repnz
xor
ja
fldenv
and
dec
mov
retf
int3
das
(bad)
(bad)
(bad)
jmp
sti
cmps
dec
data16
js
mov
fs
mov
cli
rcl
imul
(bad)
(bad)
(bad)
call
mov
in
ins
ds
sub
loop
int
adc
(bad)
mov
jnp
mov
test
mov
shr
push
mov
call
ficomp
mov
pop
mov
mov
jo
test
sbb
pop
es
xchg
scas
xchg
(bad)
(bad)
stos
add
mov
push
loopne
jge
scas
jno
mov
stos
xor
imul
mov
xchg
xor
xor
clc
loopne
(bad)
das
sub
jle
and
(bad)
jg
ss
aaa
jns
iret
xchg
pop
dec
inc
sbb
inc
fadd
sub
mov
call
int3
or
sbb
pushf
push
push
cmp
push
retf
or
(bad)
(bad)
(bad)
mov
push
mov
mov
fisubr
cmp
mov
jecxz
enter
mov
into
stos
(bad)
(bad)
(bad)
call
cwde
mov
cmc
mov
outs
call
jmp
sbb
mov
inc
fsub
adc
cmc
(bad)
(bad)
(bad)
js
nop
jnp
scas
mov
out
daa
retf
fcmovnb
and
sahf
or
(bad)
call
in
sti
mov
xchg
call
icebp
add
in
test
repz
(bad)
(bad)
jmp
and
ds
(bad)
sti
pop
int3
movsx
pop
stos
mov
and
(bad)
jmp
test
mov
mov
and
lods
repnz
jle
aas
inc
fwait
nop
lock
sub
test
mov
push
jne
cdq
mov
jge
dec
popf
ret
mov
or
sbb
jp
out
ss
clc
mov
xchg
lock
pop
xor
adc
(bad)
mov
imul
add
mov
xchg
outs
mov
jl
(bad)
(bad)
(bad)
dec
sbb
jmp
(bad)
enter
sbb
xchg
push
mov
call
jmp
jge
mov
imul
mov
ins
gs
dec
jle
mov
inc
adc
ds
mov
mov
cmp
call
leave
imul
mov
pushf
push
sbb
jo
or
cmp
(bad)
jmp
mov
je
xchg
(bad)
ins
inc
add
or
jle
out
(bad)
(bad)
dec
leave
test
jecxz
ins
fwait
push
xor
pop
fisttp
cmp
or
ret
add
int
and
push
loope
lds
ins
cmps
popf
(bad)
push
dec
mov
mov
inc
push
jp
scas
data16
(bad)
(bad)
(bad)
jmp
imul
mov
jmp
ret
sbb
out
out
ds
movs
cs
pop
ins
or
cmp
(bad)
(bad)
(bad)
call
ins
stos
fwait
push
out
and
aam
scas
or
inc
mov
and
(bad)
enter
(bad)
dec
inc
test
push
or
adc
adc
(bad)
cli
pop
ins
aad
or
(bad)
(bad)
jmp
sub
dec
fwait
outs
sbb
test
(bad)
push
(bad)
(bad)
mov
dec
jmp
pop
mov
loop
loope
jle
(bad)
(bad)
(bad)
inc
sbb
sub
push
mov
mov
push
out
mov
add
and
call
fmul
pop
and
aad
pushf
iret
dec
or
cmps
cmps
mov
(bad)
jg
or
test
cs
push
mov
pop
addr16
es
(bad)
mov
push
mov
mov
clc
iret
cwde
jl
ins
(bad)
call
inc
jmp
mov
cmp
xchg
cmp
jge
mov
test
movs
bound
(bad)
sub
in
sar
mov
sbb
pop
inc
int3
pop
xchg
jle
stos
jns
fwait
adc
dec
data16
xor
jmp
dec
push
mov
iret
outs
cmp
fimul
scas
icebp
(bad)
(bad)
call
pop
xor
jmp
sub
out
mov
call
icebp
call
push
push
inc
push
ja
lods
aaa
cmps
aaa
inc
daa
pop
push
movs
(bad)
(bad)
(bad)
out
loop
daa
add
sbb
leave
test
movs
mov
jecxz
dec
enter
and
dec
(bad)
cwde
aam
stos
push
fdiv
lahf
call
sbb
dec
(bad)
mov
and
ja
mov
sub
fimul
and
movs
push
adc
pop
retf
sahf
mov
xchg
sub
test
or
cmp
scas
daa
inc
fmul
(bad)
out
shl
push
inc
ss
jp
push
fdivrp
pop
in
push
stos
jno
lock
(bad)
jmp
push
and
je
ins
jge
jmp
das
movs
cwde
in
add
repz
and
push
lock
inc
lods
stos
stos
mov
adc
sub
xor
fwait
hlt
(bad)
mov
aas
sbb
stos
cmps
nop
fcomp
jmp
xor
xor
adc
sub
jg
mov
leave
ins
jbe
jl
add
fwait
pusha
sub
lock
mul
fsubr
push
mov
jl
dec
test
outs
(bad)
(bad)
(bad)
jmp
cmp
ficom
sub
cmp
sbb
xor
mov
jo
mov
pop
cdq
jmp
adc
icebp
out
jmp
nop
fs
mov
(bad)
cli
fcomip
inc
xor
jo
xor
loop
jo
jmp
mov
fisubr
jmp
out
jmp
push
js
jns
pop
ja
ins
fcmovu
mov
fcmovb
dec
lods
mov
cmovs
sbb
repz
pop
pop
arpl
leave
lea
(bad)
(bad)
jg
add
imul
xchg
mov
outs
retf
sub
imul
sub
pop
sub
je
(bad)
cmps
fidiv
or
lods
mov
cs
jge
jl
(bad)
(bad)
(bad)
fst
sub
xor
cmp
cmps
and
stos
push
cmp
popf
iret
inc
mov
cmp
retf
(bad)
(bad)
fisttp
or
sti
loope
cli
sbb
cmp
(bad)
fs
mov
aas
lods
add
push
jle
call
xor
jno
aad
pop
inc
(bad)
add
push
mov
lods
mov
iret
push
cli
xchg
stos
outs
ficomp
pushf
pusha
std
pop
stos
jae
outs
jg
(bad)
call
ds
or
mov
cmps
movs
and
sub
pop
pop
or
(bad)
out
jb
retf
test
mov
cmp
sub
outs
adc
mov
xchg
(bad)
das
(bad)
(bad)
(bad)
call
mov
in
iret
dec
sub
out
mov
dec
es
or
sub
mov
(bad)
call
or
jmp
ja
rcr
fdivr
pop
(bad)
jge
push
mov
(bad)
jmp
shl
and
into
lds
scas
cmps
lea
ja
push
lods
retf
or
fsub
jecxz
or
lahf
icebp
in
dec
pop
cmp
std
dec
add
mov
xor
mov
retf
clc
call
cmp
call
int3
pop
jo
pusha
into
(bad)
(bad)
(bad)
dec
movs
mov
xlat
(bad)
fdivr
cli
sub
test
dec
jnp
(bad)
fwait
adc
inc
sub
(bad)
and
mov
fwait
pop
push
sbb
pushf
mov
push
sbb
imul
or
lock
(bad)
(bad)
cli
sbb
sub
mov
or
jp
fisub
cmp
dec
(bad)
jg
fisttp
scas
sbb
sahf
sub
les
out
fistp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
inc
pop
std
mov
ud2
movs
ror
out
movs
add
(bad)
cmp
cmp
(bad)
retf
test
jno
cmps
sub
cmp
jg
movs
std
in
in
inc
mov
aas
out
popa
mov
(bad)
(bad)
inc
or
mov
or
dec
jne
and
adc
cld
sar
pop
sbb
jmp
or
sti
sub
jnp
stos
mov
push
pop
inc
push
fidivr
or
arpl
pop
or
pushf
push
push
xor
mov
adc
mov
out
pop
dec
fdiv
fst
or
(bad)
int3
cmps
les
mov
int3
xor
or
xor
test
aad
pop
jmp
clc
jmp
dec
pop
stos
xchg
or
mov
js
(bad)
in
sub
cld
data16
fcomp
jmp
ds
sbb
adc
mov
push
rol
and
(bad)
mov
dec
js
mov
sbb
xchg
mov
aaa
leave
and
(bad)
mov
xchg
int3
sub
push
les
or
jg
pop
hlt
dec
jecxz
adc
leave
push
dec
int3
retf
xor
adc
mov
mov
outs
add
call
sahf
pop
cdq
sub
sbb
sbb
data16
(bad)
(bad)
call
dec
shl
sub
jmp
sub
stc
in
sbb
dec
popa
pop
sub
jecxz
mov
mov
add
mov
jmp
adc
imul
loop
sbb
imul
imul
(bad)
(bad)
(bad)
fidivr
in
in
(bad)
in
mov
test
out
xchg
dec
mov
mov
popa
mov
(bad)
aas
stos
sar
pop
add
das
sub
xchg
jae
pusha
enter
mov
cwde
pop
jmp
dec
dec
lahf
xlat
mov
fsubr
(bad)
in
std
sbb
pushf
int
xor
loop
(bad)
(bad)
call
xchg
test
push
sbb
into
xchg
push
fidivr
jl
(bad)
(bad)
call
pop
ins
jmp
test
and
les
mov
jp
inc
jae
loopne
sbb
(bad)
(bad)
jmp
sub
shl
mov
call
cmp
test
popf
cmps
(bad)
in
jmp
inc
in
(bad)
mov
xor
add
sbb
cs
test
mov
inc
xchg
adc
gs
inc
cs
jmp
lods
repnz
dec
inc
mov
or
out
mov
(bad)
fist
sbb
jg
int3
push
and
mov
test
ret
pop
mov
aam
lahf
mov
in
dec
dec
cmps
pushf
not
pop
jns
cmp
push
(bad)
(bad)
jmp
sub
xchg
xchg
pop
sub
lods
scas
push
inc
sub
sub
arpl
(bad)
(bad)
push
dec
cli
ins
cmp
xor
jno
push
ffreep
xchg
add
lds
xchg
xchg
clc
stos
(bad)
inc
ret
bound
jmp
and
jo
(bad)
and
scas
add
push
retf
jmp
sahf
in
ret
jge
dec
adc
xchg
out
cmps
outs
ret
cmp
je
fdivrp
dec
xchg
xor
lds
cmp
jmp
movs
cmps
fld
(bad)
(bad)
(bad)
(bad)
cmp
fisttp
xchg
into
test
jns
daa
sbb
imul
rcl
and
lods
test
sbb
cs
pop
sub
xchg
iret
out
mov
ret
outs
adc
into
mov
push
fnstcw
stos
sar
push
adc
xchg
cmp
mov
push
hlt
cmp
xchg
pop
lock
sbb
cld
(bad)
dec
xor
std
out
fsub
lahf
mov
inc
sub
inc
call
jg
clc
cmp
arpl
out
xor
mov
xchg
lock
mov
mov
aaa
std
jmp
call
jo
fdivr
ins
lahf
fs
mov
(bad)
dec
(bad)
es
int
jo
pop
xchg
mov
and
jl
dec
cmp
xchg
scas
pop
sar
mov
sar
push
imul
cld
pushf
imul
lahf
mov
mov
or
dec
push
scas
(bad)
(bad)
jg
popf
(bad)
mov
sbb
gs
enter
cmps
iret
add
popf
pop
mov
std
push
jmp
dec
and
push
test
stos
adc
sbb
push
cli
inc
sbb
sbb
jmp
(bad)
pop
jb
add
test
push
rcr
add
jmp
sub
outs
mov
(bad)
(bad)
jmp
jp
in
xor
mov
mov
sti
fwait
mov
mov
aaa
lods
into
cmps
leave
inc
mov
test
inc
(bad)
inc
xchg
push
adc
dec
and
mov
dec
xchg
jg
sub
ins
icebp
lea
jmp
mov
push
inc
jmp
xchg
sar
or
xor
xchg
mov
(bad)
mov
cmc
int
push
push
js
clc
ins
ret
movs
or
lods
mov
push
sub
sub
lock
mov
mov
sbb
shr
sbb
jg
shr
push
in
stos
aam
(bad)
xchg
fs
pop
(bad)
dec
push
mov
jne
cmp
call
mov
daa
test
cmp
inc
stos
(bad)
(bad)
(bad)
(bad)
jmp
or
loope
xchg
adc
push
pop
inc
pop
movs
cmps
fiadd
(bad)
lock
pop
(bad)
(bad)
(bad)
inc
(bad)
out
out
test
cmps
add
dec
jns
aaa
xchg
pop
cmps
cdq
nop
or
sbb
inc
and
and
adc
jmp
(bad)
(bad)
dec
push
scas
loop
daa
lods
add
or
(bad)
push
cld
push
imul
mov
inc
dec
and
mov
daa
jecxz
push
cs
(bad)
(bad)
(bad)
push
outs
push
mov
outs
dec
push
(bad)
retf
mov
xabort
xchg
pop
or
pop
sub
jmp
inc
mov
mov
xchg
xor
(bad)
(bad)
(bad)
jmp
adc
cmp
fild
adc
call
cld
psrld
repnz
or
rol
mov
lock
inc
adc
push
div
jb
adc
pop
hlt
(bad)
fmul
xor
loop
and
jmp
or
or
fdivr
(bad)
(bad)
dec
sub
cmps
jmp
lods
(bad)
retf
daa
jo
loop
xchg
mov
movs
ins
jnp
repz
outs
cld
sub
sbb
jbe
jmp
(bad)
xor
lods
(bad)
(bad)
inc
std
aaa
std
jmp
call
fstp
sbb
mov
jae
aaa
mov
pop
or
xlat
cmp
aam
mov
scas
(bad)
test
call
sub
xor
data16
mov
add
(bad)
mov
fidiv
or
jmp
out
jb
fs
sub
fstp
lahf
xor
push
cs
jb
xor
nop
and
dec
int3
(bad)
jmp
inc
mov
jnp
call
push
xchg
loope
xor
jbe
fwait
clc
(bad)
(bad)
dec
shl
(bad)
xchg
mov
and
cmp
pop
fimul
shr
clc
imul
push
retf
dec
repz
call
int3
loope
(bad)
enter
mov
scas
arpl
in
test
sbb
test
inc
or
(bad)
(bad)
(bad)
dec
pop
adc
or
mov
push
mov
dec
mov
pop
or
mov
cs
push
cmp
push
retf
pop
sbb
gs
and
stc
jb
mov
mov
(bad)
push
(bad)
(bad)
call
jg
and
mov
xlat
jmp
sub
jmp
cmps
repz
pop
pushf
(bad)
fstp
stos
test
outs
or
xchg
pop
mov
in
cmp
(bad)
(bad)
jmp
pop
stos
xor
ficomp
call
retf
sub
int
jmp
sbb
scas
bsr
ret
retf
hlt
cmp
pop
repnz
rol
mov
push
jmp
(bad)
call
mov
out
add
int
inc
jle
or
lahf
das
dec
mov
pop
imul
add
sbb
(bad)
ins
inc
adc
adc
(bad)
cld
(bad)
(bad)
dec
retf
mov
mov
sub
iret
lahf
int
nop
cwde
std
push
xchg
call
idiv
ds
xchg
ins
mov
or
fnstsw
sti
push
scas
xor
(bad)
jmp
lods
ret
scas
out
pop
shr
xchg
mov
sbb
sbb
(bad)
(bad)
(bad)
(bad)
jmp
retf
inc
icebp
mov
mov
js
movs
sar
pop
stos
stos
or
loop
stc
leave
cs
(bad)
cmp
pop
scas
mov
outs
scas
jmp
dec
mov
cld
(bad)
(bad)
cli
inc
movs
cs
inc
hlt
iret
cmp
test
fild
dec
ds
call
sahf
xchg
push
jae
pop
sahf
imul
call
(bad)
call
fs
sbb
cmc
outs
scas
sbb
and
sti
mov
adc
dec
pop
jle
mov
adc
(bad)
fsub
and
idiv
sti
xor
pop
lods
test
pop
mov
(bad)
sti
out
mov
rcr
rcr
jns
loopne
inc
call
cmp
sub
mov
retf
mov
in
adc
imul
lock
fbld
pop
mov
dec
outs
test
repnz
ret
xor
sar
out
(bad)
inc
scas
push
inc
jb
fild
cs
jecxz
shr
popf
jmp
loopne
push
(bad)
call
cs
int
loope
daa
das
push
lods
sub
xchg
js
xor
xlat
popa
jmp
loop
fwait
mov
call
pop
fiadd
(bad)
cmps
cmp
inc
mov
pushf
scas
dec
dec
fstp
cmc
mov
std
adc
das
cli
(bad)
jmp
pop
lahf
push
push
sub
es
je
outs
mov
fld
cmp
cli
pop
scas
mov
or
std
in
sub
ins
push
ds
mov
(bad)
(bad)
jg
dec
and
repnz
cld
clc
dec
stos
xchg
sub
(bad)
imul
pop
mov
cmp
ret
sar
es
jae
pop
pop
or
mov
(bad)
(bad)
out
xor
hlt
jge
mov
add
xchg
pop
les
cwde
ret
push
retf
arpl
imul
fwait
sbb
(bad)
(bad)
call
mov
and
cmp
movs
loopne
outs
and
push
retf
mov
call
dec
call
dec
je
mov
pop
jecxz
jp
call
lahf
rol
(bad)
(bad)
ss
out
sub
pop
loopne
repnz
aam
jg
adc
(bad)
lods
shl
call
pop
dec
mov
and
sub
test
clc
mov
outs
ficom
addr16
cmp
mov
in
in
cmp
inc
mov
sti
dec
les
(bad)
(bad)
(bad)
(bad)
(bad)
in
cdq
jmp
lahf
pop
dec
cdq
(bad)
(bad)
jns
fistp
sbb
std
fwait
adc
(bad)
(bad)
jmp
icebp
pop
xlat
or
xchg
jmp
mov
je
sub
add
or
(bad)
mov
icebp
imul
les
sar
jmp
and
cdq
and
popa
sti
push
add
mov
push
cmps
jge
jnp
jp
mov
ret
es
push
out
sub
push
cld
add
call
je
scas
sbb
enter
push
cmps
adc
call
call
mov
pop
out
cmp
push
add
sub
call
mov
add
icebp
xchg
arpl
dec
aam
cmp
int
outs
push
cwde
div
sbb
and
mov
dec
sub
ins
div
aaa
add
or
xor
add
push
out
daa
(bad)
jmp
mov
dec
imul
fdiv
mov
dec
cmc
loopne
cmps
lds
(bad)
dec
jo
jg
jb
neg
inc
test
ins
pop
mov
test
in
pop
call
call
push
jle
and
repnz
cmp
jg
fidiv
rcr
cmp
(bad)
inc
inc
fcom
mov
retf
jl
inc
mov
repz
gs
mov
push
sbb
jp
outs
push
mov
dec
jmp
fldenv
or
push
dec
retf
pop
repz
int
or
cwde
pop
sub
fldcw
call
call
xchg
mov
mov
popa
popf
fcom
dec
push
cmps
push
call
(bad)
(bad)
inc
repz
mov
dec
cmps
stos
stc
and
push
movs
push
cld
push
lock
loope
mov
(bad)
(bad)
(bad)
push
call
call
and
mov
push
xlat
adc
mov
pop
(bad)
(bad)
out
cli
cmps
fwait
xchg
sub
add
pop
ja
fisub
or
sub
xchg
mov
adc
push
scas
push
iret
jb
pop
xchg
xchg
fnstsw
call
push
sub
pop
and
jb
sbb
dec
sahf
ins
jmp
cwde
in
clc
(bad)
jmp
inc
(bad)
jmp
mov
scas
into
sbb
mov
jo
sti
or
iret
xchg
push
pop
sahf
mov
dec
call
jmp
push
xor
les
mov
(bad)
call
cli
cmp
sub
call
mov
(bad)
(bad)
(bad)
stos
mov
mov
dec
out
loope
mov
mov
fisubr
loopne
mov
(bad)
call
cld
jmp
cmp
dec
shr
mov
pop
pushf
and
std
mov
rol
and
sub
inc
cld
movs
cmc
fstp
(bad)
(bad)
(bad)
push
dec
in
clc
cmp
xor
and
dec
into
lds
mov
cmp
cmps
(bad)
adc
aaa
cmps
xor
inc
outs
outs
in
arpl
lods
(bad)
cmp
retf
mov
mov
aam
(bad)
(bad)
(bad)
jmp
adc
sbb
icebp
adc
push
out
imul
sbb
std
mov
mov
pop
ret
ret
ror
dec
sub
xor
std
jns
sbb
mov
mov
bound
xchg
pop
add
push
(bad)
out
cli
inc
movs
sbb
adc
call
test
push
mov
mov
(bad)
dec
and
cdq
xchg
test
iret
sub
push
cmps
mov
sbb
in
xor
mov
jmp
scas
push
push
call
stos
imul
loopne
mov
mov
or
test
scas
(bad)
jl
nop
in
test
jo
cmps
adc
mul
scas
dec
jno
inc
std
(bad)
out
and
sbb
inc
sbb
sub
or
(bad)
(bad)
push
push
call
sbb
sub
inc
sub
addr16
cmps
(bad)
(bad)
(bad)
(bad)
call
inc
mov
(bad)
sub
inc
push
inc
(bad)
shl
mov
cmp
(bad)
pop
push
mov
add
xchg
jne
dec
or
test
into
dec
sub
or
out
mov
xchg
jp
movs
add
cmp
push
xchg
and
(bad)
sbb
mov
dec
int
icebp
mov
mov
cld
je
sub
xor
mov
scas
and
repnz
repnz
mov
dec
test
stc
or
push
push
fcom
shl
sub
push
dec
cmp
xchg
(bad)
(bad)
jmp
hlt
cmp
adc
sub
mov
mov
push
xchg
neg
enter
(bad)
(bad)
jg
jb
test
fild
fsubrp
jmp
icebp
inc
loop
into
ror
jmp
(bad)
mov
pop
push
or
lea
data16
cmp
iret
pop
cmc
(bad)
jmp
pop
adc
inc
push
adc
lds
test
inc
mov
mov
fdiv
dec
cld
mov
inc
xor
adc
(bad)
(bad)
(bad)
inc
mov
mov
push
cmp
mov
xchg
push
lahf
scas
push
fistp
ds
cmp
mov
stos
cmp
push
push
ins
jecxz
fist
(bad)
(bad)
mov
mov
stos
xchg
pop
push
int
cld
mov
sbb
rcr
cmps
repz
or
add
cld
lea
xchg
daa
iret
mov
enter
ins
mov
jmp
mov
(bad)
(bad)
push
mov
(bad)
jmp
imul
cmc
loop
lea
mov
push
mov
aam
sub
(bad)
(bad)
jmp
cs
push
sub
in
pop
xchg
or
jge
shr
mov
inc
out
mov
cwde
xor
repz
retf
in
cwde
into
lods
dec
add
push
adc
lods
or
into
scas
or
xor
loop
mov
in
cmps
stos
call
push
cmps
retf
sub
call
leave
(bad)
mov
mov
dec
adc
cli
lock
repz
or
cwde
sub
xchg
dec
pop
dec
mov
ins
xchg
ins
out
retf
mov
les
adc
(bad)
(bad)
call
pop
adc
dec
gs
or
retf
push
mov
sbb
add
(bad)
mov
(bad)
fdivr
fsub
mov
fst
pop
je
clc
mov
sub
xchg
sbb
adc
js
push
jmp
xchg
xchg
movs
mov
(bad)
jmp
stos
btc
sub
adc
stos
retf
sub
jb
jg
push
inc
mov
cs
push
fnstcw
test
xchg
repnz
mov
mov
(bad)
(bad)
call
push
int3
mov
mov
xchg
inc
addr16
mov
push
pusha
(bad)
push
adc
cmp
or
(bad)
popa
retf
pop
sbb
call
(bad)
out
mov
or
mov
lea
and
xor
xchg
outs
xchg
je
movs
pop
mov
cmps
push
xor
jmp
mov
mov
jl
mov
(bad)
call
xor
fadd
sub
cmp
test
mov
call
pop
inc
xchg
mov
push
cmp
pop
pop
mov
or
mov
das
or
jmp
ds
and
call
xor
jmp
or
retf
cld
push
into
xchg
pop
xlat
add
jp
cmc
jo
(bad)
(bad)
call
sbb
pop
pop
ss
adc
cmp
mov
mov
dec
dec
clc
jmp
ins
rol
pop
adc
sub
lock
(bad)
(bad)
(bad)
inc
adc
sahf
cmps
xor
imul
sub
frstor
iret
ror
add
or
and
sti
mov
stos
shl
lock
cmp
mov
stos
mov
sbb
cmps
or
jmp
mov
bound
lock
sbb
xor
test
sbb
leave
aad
add
aas
mov
mov
pop
in
xchg
mov
or
jg
(bad)
jmp
jmp
cwde
or
jp
mov
dec
repnz
mov
jmp
dec
sub
out
ret
or
imul
ret
stos
leave
popaw
(bad)
inc
rcr
sar
add
fwait
clc
push
sbb
mov
clc
mov
in
xchg
jmp
cmp
cmp
xor
xor
test
scas
jns
inc
(bad)
adc
mov
(bad)
(bad)
inc
shr
(bad)
call
sub
sbb
leave
and
cmps
fcomp
and
jmp
(bad)
int3
pop
mov
sti
ins
sub
sti
pop
fdivr
clc
(bad)
(bad)
in
mov
test
jp
ret
test
jns
aaa
dec
push
ror
adc
retf
test
sbb
ss
retf
cmc
lock
push
in
jns
xchg
inc
sub
mov
cmp
movs
mov
lds
(bad)
(bad)
dec
retf
rcr
js
sbb
jecxz
sahf
or
or
fwait
jge
(bad)
jmp
sbb
stos
push
std
inc
dec
sbb
pop
or
unpcklps
xchg
pop
cmp
inc
in
mov
add
mov
out
push
in
das
xchg
cs
clc
mov
(bad)
(bad)
call
and
(bad)
mov
in
cmp
call
or
das
push
cmp
or
mov
jns
test
sub
push
push
mov
sub
and
cmps
cmp
(bad)
(bad)
(bad)
jmp
cmps
pop
stos
mov
cwde
clc
(bad)
(bad)
loope
cli
cmp
jmp
xchg
test
jl
jmp
cmp
xchg
or
(bad)
dec
xor
and
jp
aas
lock
sub
jmp
call
loope
outs
aaa
pusha
xchg
(bad)
cli
xchg
mov
(bad)
xor
(bad)
(bad)
call
shr
(bad)
cmps
push
mov
dec
test
lahf
jno
fild
std
retf
das
cli
(bad)
mov
sub
or
cdq
jge
retf
fs
dec
mov
stos
jnp
push
data16
call
js
cmp
or
dec
mov
(bad)
dec
ds
or
or
pop
pop
test
sbb
idiv
(bad)
(bad)
out
mov
stos
pop
mov
fwait
xchg
pusha
dec
and
jo
ja
movs
mov
icebp
jle
jl
int3
outs
(bad)
(bad)
(bad)
jle
aas
mov
(bad)
call
mov
test
sahf
test
sti
add
mov
xor
mov
pop
hlt
mov
adc
xchg
pop
cmp
jmp
push
lea
stos
cmp
xor
mov
sub
cmp
stc
out
dec
(bad)
or
sub
cmps
xchg
(bad)
(bad)
mov
inc
lock
or
out
xchg
push
mov
dec
dec
in
cmps
add
ss
dec
jo
sbb
jge
cmps
push
(bad)
inc
sbb
sbb
jmp
xchg
sbb
(bad)
(bad)
call
imul
dec
xor
mov
bound
jmp
fbld
loope
sub
jmp
adc
cdq
stos
(bad)
xor
jmp
(bad)
cmp
jmp
dec
sbb
jmp
push
js
sbb
outs
add
mov
add
push
pop
push
push
call
idiv
pop
sub
add
rcr
jns
fidiv
pop
(bad)
call
add
dec
mov
arpl
cld
mov
jbe
movs
pop
cmc
(bad)
(bad)
cmp
push
mov
cwde
mul
cmp
cmp
push
or
adc
pop
icebp
push
aam
fwait
das
push
fild
je
xor
cmp
sbb
or
(bad)
jmp
ret
fwait
lods
xor
add
stos
mov
mov
mov
addr16
dec
jmp
mov
add
and
outs
mov
(bad)
(bad)
(bad)
(bad)
clc
(bad)
mov
shl
pop
lock
add
or
aam
dec
push
dec
lock
mov
xchg
imul
mov
sbb
mov
ret
(bad)
(bad)
(bad)
jmp
add
and
xor
(bad)
sbb
sub
dec
sbb
mov
mov
sub
(bad)
(bad)
(bad)
aas
xchg
add
mov
clc
pusha
push
fbstp
movs
in
sub
push
jnp
mov
(bad)
(bad)
(bad)
(bad)
jmp
xchg
mov
loope
pusha
fist
or
and
cmp
in
dec
scas
or
pushf
jecxz
ins
(bad)
(bad)
(bad)
jmp
cmp
jmp
leave
ror
add
aas
fbstp
push
mov
add
(bad)
call
fstp
retf
enter
outs
adc
mov
aaa
jnp
scas
ins
(bad)
call
cmp
push
xchg
xchg
sub
je
mov
popa
cwde
(bad)
clc
sub
in
call
mov
xchg
pop
(bad)
in
into
and
iret
(bad)
icebp
xchg
imul
(bad)
(bad)
call
sbb
pop
scas
add
(bad)
popf
cs
loop
imul
out
adc
(bad)
dec
sbb
ins
aam
mov
dec
pop
adc
xchg
pop
adc
imul
mov
(bad)
pop
jge
mul
lods
jmp
mov
ja
outs
lea
dec
adc
mov
mov
sub
(bad)
stos
sbb
dec
inc
sub
scas
fsub
sbb
xchg
mov
(bad)
call
jmp
and
push
stc
ret
hlt
inc
(bad)
jmp
in
cmp
cmps
push
push
mov
cld
and
lds
(bad)
ficomp
add
push
movs
mov
sub
icebp
iret
and
icebp
mov
pop
sub
js
(bad)
(bad)
call
sub
sub
sbb
call
cmp
sub
xchg
jmp
adc
aad
retf
mov
test
shld
test
pop
pop
xchg
(bad)
test
out
jnp
mov
jb
or
mov
pop
(bad)
cmp
jae
mov
(bad)
(bad)
(bad)
(bad)
stc
cmps
test
je
idiv
sbb
outs
mov
or
jmp
cmp
add
xchg
inc
std
(bad)
jmp
out
push
out
inc
mov
lods
outs
mov
sbb
(bad)
jmp
ds
sub
sub
sub
inc
sub
in
fisttp
cmp
lock
mov
je
adc
lods
mov
xchg
jmp
(bad)
call
retf
cs
stc
sub
add
mov
test
outs
cdq
cmc
mov
cli
pop
call
mov
xor
out
push
sub
loop
pusha
xchg
je
test
mov
loope
nop
sub
test
add
jmp
int
sbb
jmp
mov
ds
out
fimul
jb
lds
(bad)
(bad)
(bad)
call
iret
das
cmp
sbb
add
push
movs
add
jne
jb
scas
mov
inc
jg
add
les
es
std
or
add
(bad)
(bad)
call
push
inc
shl
fbstp
and
sbb
mov
xchg
xor
mov
(bad)
inc
stos
and
mov
pop
mov
inc
cdq
(bad)
mov
push
and
(bad)
(bad)
call
mov
test
cmp
mov
jmp
mov
sub
scas
ins
xchg
imul
call
dec
sahf
mov
(bad)
(bad)
push
int3
scas
mov
jmp
rol
sbb
adc
mov
(bad)
jmp
sub
retf
jp
xchg
scas
sub
or
cli
(bad)
call
test
pop
xchg
pop
push
ins
outs
stos
cmp
dec
adc
(bad)
jo
jmp
dec
lock
mov
xchg
test
push
cmps
sbb
jle
jo
stos
addr16
sbb
or
fisubr
out
outs
frstor
out
pop
hlt
jg
cmp
add
imul
rcl
jbe
jmp
mov
(bad)
repz
cmp
retf
(bad)
push
push
inc
adc
cs
cld
mov
pop
sub
mov
test
std
(bad)
(bad)
fild
push
jbe
mov
into
sub
pop
stos
push
dec
xor
dec
xor
push
inc
cmps
and
mov
jnp
cld
mov
sub
(bad)
(bad)
(bad)
jmp
mov
cs
push
test
cs
sub
pop
and
jp
mov
es
aas
pop
and
outs
(bad)
(bad)
(bad)
dec
out
and
sub
in
xchg
xor
cs
jnp
push
sub
cmc
into
das
or
cmc
int
(bad)
jmp
pop
mov
frstor
mov
out
arpl
sub
sbb
mov
(bad)
(bad)
call
and
lahf
into
loope
je
jne
(bad)
out
sar
(bad)
pop
or
pop
mov
ret
add
jg
in
mov
ret
jecxz
dec
push
into
call
sbb
inc
pop
cli
je
mov
fstp
mov
(bad)
(bad)
(bad)
jmp
mov
xchg
sub
(bad)
hlt
sbb
xchg
sbb
in
inc
test
retf
mov
mov
xchg
cmp
and
lds
(bad)
(bad)
(bad)
mov
pop
mov
mov
sub
xchg
mul
lahf
imul
(bad)
jg
jmp
xor
mov
mov
sub
pop
mov
lods
jl
or
and
stc
shr
test
push
sub
hlt
or
sub
jmp
mov
(bad)
sahf
xchg
aas
imul
je
rcl
stos
lahf
or
mov
(bad)
(bad)
push
lods
or
cmp
mov
mov
or
pop
call
sbb
sbb
(bad)
(bad)
(bad)
dec
or
loope
bound
imul
les
push
retf
mov
(bad)
aad
mov
mov
icebp
jecxz
imul
call
movs
adc
push
das
mov
scas
cs
outs
call
movs
push
ins
dec
and
push
lods
xor
stos
cmp
pop
(bad)
(bad)
(bad)
push
mov
es
(bad)
cli
mov
icebp
popf
nop
cwde
adc
mov
add
sti
lock
jns
push
(bad)
(bad)
jge
dec
mov
cld
scas
popf
inc
das
sub
or
jmp
pop
cwde
or
mov
push
call
(bad)
jmp
mov
pop
sbb
sbb
adc
mov
fwait
mov
mov
(bad)
mov
imul
sbb
mov
mov
(bad)
mov
push
imul
jb
dec
mov
into
mov
idiv
push
ror
sub
xor
popa
pushf
sub
jl
mov
jmp
sbb
cmp
pop
into
scas
pop
or
es
or
jmp
push
push
call
or
dec
xchg
cmps
imul
inc
inc
out
jmp
mov
push
fbstp
push
dec
in
push
xor
fcomip
(bad)
mov
pop
clc
jbe
bnd
push
xor
jl
mov
out
(bad)
(bad)
call
xor
mov
sub
cmp
test
push
jns
dec
sbb
(bad)
(bad)
mov
scas
lods
and
xor
or
out
mov
aaa
(bad)
or
(bad)
inc
xchg
repnz
adc
ja
pop
ret
dec
or
scas
js
sbb
mov
scas
ins
mov
and
jb
mov
mov
jg
pop
jno
loop
ins
retf
pop
inc
imul
xchg
adc
fbstp
loopne
mov
jl
fwait
push
sub
mov
pop
push
add
(bad)
(bad)
(bad)
inc
sub
fwait
mov
push
push
pop
cmp
mov
cmps
dec
aas
(bad)
(bad)
fcomip
ins
std
or
inc
retf
arpl
adc
jmp
shl
and
(bad)
jmp
sub
push
xchg
sub
add
ss
jmp
jmp
inc
imul
mov
ret
call
neg
xchg
std
inc
cmp
or
call
pop
loopne
hlt
adc
mov
out
popf
cmp
jmp
push
sub
(bad)
out
aam
inc
mov
add
sbb
cmc
add
nop
lock
cmp
(bad)
(bad)
jmp
mov
sbb
push
cli
mov
sub
retf
dec
imul
mov
xchg
cli
push
in
and
(bad)
(bad)
(bad)
(bad)
stc
push
mov
or
and
fiadd
add
test
push
iret
mov
xor
(bad)
ins
(bad)
mov
adc
adc
retf
xchg
jb
sub
xor
pop
push
pop
ins
in
ja
fild
ucomiss
fild
sti
fbld
fisubr
sub
enter
movs
push
call
jg
ret
popf
in
dec
mov
push
jge
mov
mov
test
test
or
xlat
pop
sahf
ret
dec
fimul
fdiv
(bad)
inc
lock
into
push
mov
sbb
bound
mov
mov
push
mov
scas
jmp
cmp
xchg
clc
adc
push
sar
(bad)
(bad)
jmp
fimul
ins
loop
gs
and
scas
(bad)
jge
mov
fcomp
push
out
cmps
cmp
mov
movs
mov
fstp
ins
add
sub
cmp
mov
fwait
in
loopne
clc
mov
ds
dec
jl
pop
js
jl
ror
cmc
sub
fistp
popa
stos
xor
pop
mov
jg
lock
(bad)
jmp
hlt
and
mov
(bad)
jmp
jg
dec
in
js
xchg
mov
pop
cld
mov
add
sub
xor
into
clc
xchg
add
and
sub
sub
adc
test
(bad)
jmp
push
imul
shr
sub
mov
call
and
mov
sub
mov
cld
test
test
cmp
loopne
inc
and
sbb
fcomp
or
(bad)
call
(bad)
lods
sbb
push
mov
xchg
mov
dec
(bad)
clc
call
outs
das
out
jne
int
and
(bad)
(bad)
(bad)
call
ins
loop
cmp
(bad)
int3
mov
mov
push
scas
xchg
pop
lahf
and
or
adc
mov
dec
test
inc
mov
mov
or
xchg
test
push
adc
loope
les
sar
(bad)
mov
add
pusha
mov
inc
arpl
jo
adc
push
pop
dec
pop
lea
ins
mov
mov
dec
inc
mov
icebp
inc
hlt
push
sub
mov
sbb
(bad)
jmp
and
xchg
adc
push
retf
or
cdq
movs
imul
stos
cmps
into
mov
mov
sbb
(bad)
scas
outs
clc
xor
mov
cld
push
cmp
dec
add
sti
faddp
aad
aaa
sar
jecxz
dec
loope
cwde
daa
push
loop
loope
cmps
(bad)
call
loopne
mov
dec
sub
mov
shl
cmp
or
jmp
cmp
popf
pop
in
sbb
call
jo
cmps
push
push
fwait
retf
mov
cld
(bad)
(bad)
stc
mov
xlat
loope
xor
test
ins
movs
push
mov
js
(bad)
fcomip
ins
mov
mov
pop
or
fistp
aas
call
add
mov
stos
push
pop
cmp
cmp
cmps
cmp
(bad)
adc
scas
retf
(bad)
(bad)
(bad)
(bad)
jmp
mov
int
cmps
fld
in
loopne
stos
inc
and
(bad)
ret
movs
fist
push
clc
(bad)
(bad)
(bad)
out
mov
mov
fsub
inc
sub
pop
cwde
data16
jl
push
inc
loop
mov
mov
pusha
jmp
add
jmp
jno
adc
(bad)
(bad)
(bad)
jmp
xchg
icebp
in
pop
call
(bad)
inc
mov
push
in
in
shr
mov
repz
sbb
or
xchg
cld
cmc
sti
outs
adc
pop
neg
pop
sbb
scas
loop
ret
mov
cmps
xchg
fwait
jecxz
jp
jg
sub
not
(bad)
(bad)
jl
scas
stos
adc
es
rol
dec
pop
xor
mov
aam
stos
imul
lea
pop
mov
mov
sahf
xchg
pop
xchg
test
adc
data16
(bad)
jmp
dec
lds
fs
push
mov
push
mov
sub
jns
(bad)
(bad)
(bad)
(bad)
jmp
stos
sub
retf
mov
and
cmp
std
fcomp
pop
mov
fs
pop
clc
jl
retf
and
out
loope
mov
mov
fs
push
retf
jge
(bad)
(bad)
call
add
or
leave
out
xchg
cdq
cs
(bad)
or
(bad)
inc
icebp
mov
out
mov
retf
push
out
clc
lea
(bad)
(bad)
(bad)
(bad)
(bad)
into
add
test
shr
lods
pop
push
sbb
outs
sub
call
clc
clc
(bad)
(bad)
jmp
rol
movs
out
retf
mov
push
mov
test
ins
ffreep
(bad)
(bad)
jmp
stos
sub
jl
call
xor
loopne
loop
mov
add
std
loopne
xor
xchg
jp
mov
jno
in
or
xor
ins
cmp
(bad)
jmp
movs
sbb
loope
out
add
lahf
aaa
lds
test
retf
mov
mov
ins
mov
jmp
addr16
(bad)
(bad)
(bad)
dec
dec
es
cmps
in
mov
sbb
popa
xchg
out
sub
(bad)
and
(bad)
(bad)
jmp
jecxz
movs
in
nop
pop
sbb
jmp
(bad)
repnz
cmp
pop
add
iret
lock
mov
(bad)
jmp
cmps
shl
add
out
es
xchg
test
fldl2e
jle
loope
retf
in
push
(bad)
jmp
lods
push
xor
sbb
arpl
out
movs
(bad)
jg
mov
in
addr16
mov
fidivr
xchg
sub
or
(bad)
(bad)
jge
and
movs
call
inc
cmp
or
test
out
push
inc
pop
(bad)
(bad)
(bad)
call
(bad)
movs
scas
mov
es
sub
inc
out
sbb
mov
out
push
xchg
jg
sub
pop
shr
(bad)
(bad)
(bad)
cmp
rep
cmps
addr16
or
inc
mov
movs
jl
retf
leave
out
ret
sub
(bad)
mov
out
jb
movs
loope
std
pop
adc
in
enterw
hlt
ror
jb
sar
(bad)
(bad)
call
(bad)
lods
jl
jnp
sub
(bad)
int3
cmps
and
ja
push
lahf
movs
rol
fsub
ds
mov
cmp
repnz
cmp
scas
outs
and
and
(bad)
jmp
outs
outs
mov
and
js
pop
xor
addr16
mov
adc
(bad)
(bad)
(bad)
(bad)
jmp
out
int
or
cld
in
cwde
es
cmps
outs
(bad)
sbb
xor
jb
scas
pop
out
xchg
ret
push
(bad)
(bad)
(bad)
call
cmp
or
mov
sub
jmp
int
adc
(bad)
jmp
pop
xor
gs
inc
cmps
popa
pushf
push
dec
and
popa
xchg
jp
mov
lock
pop
cmc
and
sahf
daa
lea
inc
out
mov
jmp
rol
lock
cmps
lods
scas
lock
outs
mov
test
mov
stos
and
xlat
aaa
mul
out
test
call
(bad)
push
adc
in
call
fwait
es
cwde
rcr
jg
sub
and
adc
mov
cli
xchg
xor
(bad)
(bad)
(bad)
jmp
adc
cld
and
and
mov
cmp
adc
dec
in
cmp
(bad)
jb
(bad)
(bad)
(bad)
jmp
(bad)
xchg
xchg
dec
mov
fnstcw
sub
(bad)
jmp
scas
add
mov
mov
das
les
call
out
ins
pop
shl
(bad)
mov
jmp
das
and
call
ss
mov
mov
scas
scas
mov
bound
aam
repz
or
inc
cld
(bad)
jmp
(bad)
xchg
cmps
or
in
pop
mov
(bad)
sub
in
popf
sub
sub
and
cli
jmp
adc
xchg
dec
adc
aas
pop
push
jle
cmp
add
jmp
push
out
cmp
cdq
xchg
in
dec
push
or
inc
cmps
stos
addr16
aaa
in
mov
adc
(bad)
movs
lahf
xchg
mov
sub
jo
fild
cmps
xor
sub
rcr
(bad)
dec
hlt
lods
(bad)
(bad)
jmp
iret
dec
or
imul
imul
xchg
popa
(bad)
(bad)
(bad)
dec
cli
repnz
imul
adc
imul
push
dec
push
loope
(bad)
(bad)
(bad)
jmp
(bad)
xor
mov
cli
dec
cmp
cmc
or
idiv
jg
(bad)
inc
fs
callw
jmp
test
ds
into
add
jae
and
push
lods
push
in
test
mov
pop
sbb
push
movs
push
xor
call
(bad)
sub
arpl
scas
cwde
test
jbe
stc
cmps
call
dec
sbb
aad
cmps
jo
push
or
cld
push
sub
adc
inc
in
mov
movs
sub
add
xchg
pop
mov
dec
bound
(bad)
(bad)
(bad)
jg
and
or
test
cmp
nop
push
(bad)
pop
movs
pop
dec
into
dec
adc
movs
lahf
imul
arpl
ja
pop
inc
sti
(bad)
(bad)
fstp
mov
jmp
sub
sti
jns
push
clc
sub
movs
push
jge
and
into
push
mov
(bad)
(bad)
(bad)
mov
inc
out
xchg
stos
bound
aam
loopne
mov
mov
inc
clc
jg
dec
aas
out
or
jg
xor
xor
and
stos
sbb
pop
adc
inc
xor
lods
jmp
mov
bound
int
lock
push
inc
sub
int3
cmp
sbb
push
imul
sub
jge
enter
cmps
sbb
fwait
loope
(bad)
call
cmps
jp
mov
iret
lea
jmp
inc
sub
mov
cdq
cmp
call
out
jmp
(bad)
cs
aam
sbb
in
jmp
sbb
sub
jo
sub
jl
pop
test
test
dec
sub
push
outs
mov
xchg
xchg
inc
push
sub
jg
loop
mov
xor
(bad)
pop
clc
int
push
jne
icebp
imul
(bad)
dec
jmp
cwde
sub
ret
jae
mov
or
enter
(bad)
jmp
call
xchg
scas
fld
scas
dec
mov
aam
mov
(bad)
(bad)
(bad)
jmp
stos
sub
xlat
mov
dec
push
push
mov
or
xor
push
or
std
jmp
clc
sub
cmp
sub
add
xor
cmp
or
xchg
mov
jg
add
sbb
sub
push
shr
ds
cld
xchg
xchg
sbb
push
mov
sti
popf
adc
(bad)
dec
pop
jl
mov
xor
pop
jo
call
adc
mov
cli
pop
inc
call
pop
inc
sbb
inc
sbb
push
retf
or
inc
scas
(bad)
(bad)
(bad)
push
sbb
es
test
out
in
jl
or
jo
add
sbb
push
(bad)
mov
sub
pop
inc
sub
pop
mov
(bad)
(bad)
inc
dec
das
nop
push
loop
mov
dec
xor
or
(bad)
rcr
inc
or
push
mov
(bad)
ficomp
sub
inc
sub
jmp
call
sub
ins
lock
sub
xchg
adc
ds
mov
enter
retf
mov
loopne
xor
mov
sti
(bad)
(bad)
(bad)
jmp
or
or
pop
(bad)
jg
jmp
push
xchg
or
mov
stos
jp
dec
adc
or
das
ret
and
cmps
(bad)
(bad)
(bad)
jmp
or
mov
sub
bound
call
(bad)
jmp
xor
mov
ror
test
mov
mov
mov
test
(bad)
movs
imul
ret
pop
pop
pop
icebp
(bad)
(bad)
fwait
in
test
outs
jecxz
push
sub
mov
sbb
mov
call
mov
imul
jnp
sub
cmp
std
(bad)
(bad)
jmp
clc
mov
cdq
sbb
pop
mov
mov
jmp
jns
inc
adc
(bad)
push
dec
lahf
pop
in
enter
mov
repz
jo
push
mov
std
dec
sub
call
dec
xor
daa
sbb
xor
sbb
and
jg
adc
jp
push
jmp
jg
dec
pop
adc
sbb
scas
xor
test
rol
shl
pop
jmp
adc
and
cwde
jmp
test
ret
jp
imul
sbb
clc
cli
pop
in
dec
lock
in
inc
mov
xor
mov
bound
jg
inc
es
sbb
xor
xor
fst
push
test
mov
(bad)
jmp
daa
repnz
sub
xchg
jb
add
ja
sar
fidivr
cmc
fldcw
stos
int3
xchg
cmp
test
sub
push
lods
lahf
sub
movs
adc
mul
out
cs
jmp
dec
stos
aaa
shl
push
outs
test
fistp
test
clc
(bad)
push
sbb
out
xchg
sbb
bound
pop
idiv
push
mov
(bad)
call
mov
out
mov
jns
pop
and
mov
mov
adc
mov
cmp
(bad)
(bad)
inc
pop
retf
sub
adc
inc
inc
adc
and
jbe
call
push
call
stos
sub
popf
loop
mov
cmp
adc
je
leave
sahf
test
sub
pop
fsubr
ins
icebp
out
mov
adc
mov
or
sbb
jae
sub
pop
and
mov
int3
pop
and
(bad)
push
sbb
repz
sub
(bad)
(bad)
mov
mov
mov
ret
mov
popf
aas
adc
(bad)
(bad)
jmp
call
ret
stos
lds
lods
pushf
scas
cs
cmp
lahf
(bad)
out
outs
ins
fadd
ret
xor
push
retf
pop
test
inc
mov
out
mov
jmp
aas
repnz
shl
mov
inc
dec
xchg
xor
pop
jns
enter
jg
call
test
mov
loope
pop
in
add
test
not
mov
pushf
sbb
clc
cmp
dec
dec
push
std
pop
cmp
jge
jle
mov
adc
mov
push
or
in
fild
fcomp
sub
ficom
dec
(bad)
jg
or
mov
jg
xchg
xor
adc
in
retf
idiv
(bad)
call
mov
shl
or
in
jo
xchg
scas
pop
nop
push
aas
xor
(bad)
cmps
xor
mov
jmp
call
(bad)
(bad)
aad
dec
movs
cwde
xchg
data16
inc
inc
pop
outs
std
adc
(bad)
(bad)
(bad)
dec
es
fisubr
cmp
lods
(bad)
xlat
hlt
(bad)
cld
lea
pop
xchg
mov
fistp
(bad)
push
(bad)
and
loopne
movs
scas
(bad)
test
mov
mov
cmps
test
pop
mov
fistp
cld
and
xchg
inc
cld
pop
cmp
and
jmp
into
dec
cmp
pop
retf
test
call
xor
(bad)
out
(bad)
(bad)
(bad)
dec
xchg
loop
mov
out
cmp
iret
ja
ret
fstp
mov
(bad)
(bad)
call
outs
ins
fist
pop
ret
or
jbe
lods
loop
or
sbb
mov
call
rcl
sbb
(bad)
dec
mov
nop
sar
add
ret
(bad)
push
xor
xor
cmp
test
(bad)
(bad)
jg
mov
lods
call
fadd
push
add
lods
outs
je
ja
imul
xlat
jns
fwait
arpl
fwait
and
std
jnp
or
mov
jb
(bad)
(bad)
(bad)
call
jmp
or
inc
pop
mov
sti
fistp
loopne
bound
adc
ret
jmp
inc
in
sub
cs
ret
add
mov
loopne
hlt
inc
ja
sbb
ins
stos
mov
outs
sub
pop
clc
mov
in
test
jmp
jle
jle
jg
jl
jmp
les
sbb
stos
or
mov
xchg
fs
addr16
pusha
mov
loope
scas
rol
lods
sub
inc
(bad)
(bad)
jmp
movs
sahf
cmp
and
and
bound
call
test
(bad)
call
mov
or
ret
das
stos
mov
in
out
pop
movs
into
xchg
cs
pop
loope
mov
adc
(bad)
out
test
sbb
clc
cwde
es
mov
cmp
xor
sbb
jnp
and
ins
mov
jmp
ss
cmp
sub
test
xchg
sbb
jns
sbb
outs
mov
lods
dec
aam
xor
push
sub
dec
(bad)
pop
idiv
push
add
pop
add
add
sar
(bad)
mov
fcmovbe
mov
sbb
leave
mov
pop
mov
mov
jmp
ret
xchg
pop
ins
mov
inc
loopne
sub
sar
(bad)
dec
add
mov
xchg
add
add
mov
xor
clc
or
mov
stos
push
or
jmp
data16
(bad)
jecxz
fcmovnu
xchg
repnz
cdq
mov
scas
fidivr
repz
push
(bad)
scas
pop
jge
or
jmp
dec
adc
mov
(bad)
jmp
pop
pushf
pop
lahf
mov
inc
push
neg
push
cwde
mov
sti
jg
call
fs
ins
std
push
aam
xlat
dec
test
out
jmp
movs
add
cli
(bad)
jg
sub
fsubr
aad
push
adc
or
pusha
mov
mov
xlat
jge
or
mov
dec
aam
add
fwait
cmp
(bad)
(bad)
(bad)
jmp
dec
and
and
mov
sub
iret
push
mov
ret
(bad)
call
call
jg
movs
mov
and
adc
ret
or
movs
or
(bad)
(bad)
(bad)
cli
pusha
fstp
mov
mov
mov
xor
retf
ss
ficom
daa
xchg
and
(bad)
(bad)
(bad)
(bad)
(bad)
sub
out
and
mov
pop
test
xchg
mov
sub
mov
call
adc
bound
cmp
stc
pushf
pusha
push
lods
mov
add
(bad)
(bad)
jmp
mov
add
out
jmp
and
mov
sub
jp
stos
(bad)
(bad)
(bad)
(bad)
jnp
jl
sub
in
loopne
add
push
movs
or
arpl
pop
mov
sar
or
mov
jmp
xchg
rol
js
mov
jge
or
stos
imul
call
pop
cld
mov
jns
jge
adc
ret
scas
or
push
xchg
mov
(bad)
(bad)
(bad)
(bad)
call
xor
retf
ret
mov
cmps
xchg
adc
outs
mov
mov
je
popa
stos
ins
mov
(bad)
fbld
sar
dec
pop
shl
cmp
sub
jmp
rol
mov
test
clc
(bad)
(bad)
(bad)
(bad)
aas
push
retf
std
pushf
stos
or
aad
ins
lds
dec
mov
push
push
lds
(bad)
inc
pop
xchg
cwde
jecxz
mov
xor
dec
inc
pop
fcom
and
(bad)
(bad)
(bad)
dec
cmp
pop
dec
or
or
call
in
mov
fwait
mov
(bad)
test
das
std
mov
sub
(bad)
pop
pop
sar
lahf
retf
push
(bad)
js
or
inc
push
and
(bad)
jg
or
int
movs
xchg
cli
imul
mov
out
push
(bad)
(bad)
(bad)
(bad)
jl
nop
cmp
gs
sub
test
cmp
dec
ret
(bad)
icebp
push
push
push
sub
ret
cmps
xchg
mov
(bad)
(bad)
(bad)
cmp
cmp
outs
jp
js
pusha
int3
push
push
nop
mov
arpl
stos
xlat
add
scas
scas
test
(bad)
(bad)
jns
imul
sbb
sub
push
xlat
(bad)
jmp
mov
pop
js
out
xchg
test
imul
sub
(bad)
jmp
(bad)
or
dec
(bad)
push
fild
into
in
stc
mov
or
fwait
push
adc
sti
push
jnp
sti
les
ins
loope
std
pop
mov
dec
push
out
jno
adc
cmp
or
mov
sub
push
mov
(bad)
jmp
xchg
movs
inc
jge
mov
jp
lahf
mov
xor
and
icebp
aaa
add
imul
add
int
mov
or
mov
add
mov
inc
cdq
mov
sbb
xchg
pusha
or
in
cld
ja
jmp
mov
xchg
clc
mov
push
sub
lods
lahf
hlt
sbb
cli
(bad)
out
clc
add
movs
call
mov
repnz
ss
dec
or
cld
(bad)
(bad)
push
pop
into
mov
xor
sbb
jnp
lahf
cmc
sub
mov
outs
test
mov
and
(bad)
push
stos
(bad)
and
mov
scas
cmps
aas
and
and
lsl
std
pop
pop
mov
sub
or
(bad)
(bad)
(bad)
inc
mov
xlat
dec
aaa
cmp
jg
mov
cmc
mov
fisubr
mov
push
std
fst
and
jg
dec
adc
cs
hlt
pop
in
lods
call
mov
push
(bad)
mov
not
or
mov
test
jne
mov
test
dec
pop
mov
xchg
fldcw
inc
arpl
(bad)
jmp
mov
mov
inc
pop
ror
push
and
aaa
adc
mov
sub
(bad)
(bad)
push
push
or
xchg
xor
rcl
das
out
icebp
jo
or
sbb
or
inc
hlt
cdq
jne
inc
dec
or
and
sahf
retf
data16
std
mov
and
call
mov
inc
add
sub
dec
jo
lock
ds
and
sub
(bad)
push
cmp
lods
mov
call
imul
mov
(bad)
(bad)
call
jmp
pop
dec
mov
inc
jl
movs
test
lods
and
adc
mov
inc
adc
sbb
sti
mov
and
pop
and
xchg
(bad)
std
mov
pop
add
jae
retf
fs
(bad)
(bad)
fbstp
cmp
fwait
test
cmps
xchg
gs
push
mov
mov
xor
or
(bad)
dec
sub
mov
call
stos
lahf
fistp
or
pop
imul
aaa
mov
pop
pop
cmc
jg
cwde
xlat
lods
fmul
retf
frndint
sub
jmp
mov
add
out
mov
jmp
add
aad
push
push
sbb
aaa
std
jmp
sbb
loop
es
pop
(bad)
pop
xchg
je
test
mov
mov
dec
clc
movs
xor
jns
or
xchg
sbb
mov
sar
outs
sbb
mov
sbb
jp
mov
(bad)
inc
(bad)
aas
mov
adc
iret
jnp
jb
add
push
fist
pop
leave
in
std
push
js
imul
jmp
cwde
pusha
ins
arpl
xchg
mov
nop
pop
and
std
fisubr
mov
dec
das
jl
retf
cmps
mov
mov
fdivrp
outs
(bad)
(bad)
jmp
in
fdivr
mov
or
(bad)
(bad)
(bad)
jmp
dec
jmp
and
xchg
mov
cmp
sub
jnp
sub
loope
(bad)
(bad)
(bad)
jmp
imul
add
(bad)
jg
jmp
mov
mov
xchg
cmc
(bad)
fistp
pop
icebp
jb
push
cmps
xchg
fsubr
test
int3
scas
enter
sar
scas
pop
push
data16
stc
clc
adc
enter
lods
mov
imul
push
jmp
push
in
and
ficom
jb
scas
jmp
ins
fucomi
imul
cmp
jp
inc
lods
mov
xchg
mov
cs
push
loopne
stos
and
cmps
sbb
and
jmp
in
pop
into
cmp
movs
jp
mov
mov
(bad)
(bad)
mov
pop
outs
out
cmp
mov
mov
dec
int3
fs
call
or
cli
dec
jns
std
lea
(bad)
dec
xchg
or
imul
stos
and
dec
(bad)
(bad)
(bad)
call
dec
xor
scas
nop
bound
(bad)
jmp
xchg
sub
add
(bad)
loopne
icebp
push
jmp
cli
sub
(bad)
(bad)
push
(bad)
dec
fiadd
ja
jbe
mov
lds
cmp
daa
test
xor
(bad)
(bad)
call
enter
mov
pop
repz
dec
push
jae
dec
call
and
cmc
and
ret
call
fst
sahf
(bad)
mov
pop
push
sub
xchg
adc
mov
cmc
jmp
and
imul
mov
push
fstp
jle
popf
cs
(bad)
(bad)
jg
bound
out
(bad)
mov
xor
cmp
ret
not
cli
test
in
retf
sub
jle
push
sahf
sub
(bad)
cmp
or
fdivr
lock
leave
and
push
and
js
mov
cmp
pushf
mov
sbb
mov
inc
mov
mov
push
xchg
rol
xchg
dec
or
aaa
add
popf
cs
mov
clc
jns
(bad)
(bad)
call
cmp
mov
push
ret
push
std
lods
dec
std
call
and
or
pop
test
sahf
inc
imul
sbb
adc
inc
movs
mov
(bad)
(bad)
(bad)
js
test
fisubr
(bad)
adc
push
loop
and
mov
cdq
call
(bad)
dec
dec
stos
test
loope
in
scas
inc
jl
and
cmp
push
imul
mov
sbb
push
jp
loope
(bad)
cld
jmp
in
in
sub
lock
xchg
and
retf
repnz
pushf
sub
mov
pop
cmp
or
mov
imul
mov
push
cld
iret
rcl
loopne
sbb
aas
cmps
jnp
daa
inc
inc
sbb
cli
(bad)
(bad)
(bad)
call
ret
shl
les
mov
mov
inc
movs
add
adc
ins
push
mov
mov
jp
xor
les
dec
sbb
retfw
in
(bad)
(bad)
(bad)
call
ret
scas
int3
out
pushf
(bad)
lods
ja
addr16
mov
xchg
stos
jnp
fwait
retf
popf
lds
dec
push
(bad)
(bad)
jg
cmp
mov
int3
jp
arpl
jmp
jne
jp
cmp
pop
jnp
pusha
pop
sbb
pop
cmp
jns
cmp
pop
(bad)
cmp
cs
push
xor
or
inc
outs
int
xchg
or
mov
jmp
or
test
cmc
mov
cmp
or
retf
pop
pop
and
pop
sbb
mov
mov
xchg
or
dec
ja
jmp
xchg
scas
jmp
fdivr
call
add
cmc
or
mov
int
(bad)
mov
sti
adc
mov
jecxz
mov
inc
jnp
ds
xchg
call
aam
clc
dec
dec
sub
fcom
adc
cmp
(bad)
jmp
inc
xor
xchg
push
cmp
(bad)
retf
(bad)
mov
cli
jmp
mov
repnz
cmp
ins
repnz
test
cmp
xor
test
mov
push
sar
sub
mov
dec
cs
stc
shr
(bad)
push
enter
cmp
dec
inc
push
lahf
adc
call
sub
cld
(bad)
(bad)
call
movs
movs
sahf
imul
fistp
mov
test
or
inc
(bad)
(bad)
inc
movs
out
mov
push
jmp
fistp
mov
cmc
pop
and
sbb
adc
jmp
mov
pop
je
or
imul
pop
repz
test
pop
sbb
out
test
xchg
in
inc
test
xor
outs
jae
(bad)
(bad)
(bad)
dec
push
inc
cmc
loopne
cmp
push
sbb
jb
jp
ds
xchg
ficom
jmp
out
dec
xor
adc
aas
jmp
cmp
push
add
jmp
nop
add
lock
xchg
(bad)
(bad)
mov
into
mov
pop
in
mov
or
mov
jnp
push
(bad)
(bad)
and
retf
int
outs
xor
enter
cmp
popa
mov
add
jmp
mov
retf
xor
loop
pop
mov
test
pop
xlat
mov
loop
mov
jmp
daa
fcomp
cmp
pop
pop
das
and
test
popf
loopne
stos
and
stos
fdiv
sub
test
or
dec
and
dec
xchg
pop
imul
retf
nop
inc
lods
and
pop
iret
mov
push
movs
and
xchg
push
std
(bad)
jmp
clc
pop
xchg
push
dec
mov
add
xlat
es
sahf
jl
call
pop
sub
(bad)
adc
adc
inc
fisubr
jae
aam
(bad)
(bad)
inc
cmp
stos
mov
lods
jae
stos
mov
pop
imul
(bad)
loope
into
bswap
add
sahf
mov
out
mov
mov
xchg
sbb
fild
push
shl
pop
fsubr
mov
sbb
push
mov
movs
pop
or
mov
sub
iret
out
xchg
cmp
or
mov
ret
pop
sub
mov
jmp
mov
(bad)
(bad)
call
push
(bad)
sub
enter
pop
cmp
pop
jmp
pop
inc
(bad)
or
push
(bad)
dec
cmp
mov
jmp
aas
cvtpi2ps
cmp
mov
pop
cld
mov
ja
inc
es
sub
sbb
cli
add
dec
dec
out
aam
cwde
cmc
std
ins
push
mov
dec
push
dec
or
rcr
jmp
or
inc
scas
addr16
mov
aam
xor
mov
dec
pop
pop
dec
dec
stos
inc
out
das
fwait
pop
fs
sbb
push
push
jns
sti
stc
mov
mov
(bad)
(bad)
inc
cwde
and
dec
xchg
pop
add
or
fsubrp
xchg
stos
pushf
push
xchg
jmp
dec
inc
xor
lock
lock
(bad)
(bad)
(bad)
call
ja
movs
(bad)
mov
add
jg
sbb
pop
lods
lea
and
sub
jmp
fld
ins
xor
enter
fdiv
mov
(bad)
jmp
push
(bad)
pop
ins
int3
sub
stos
jmp
cmps
add
push
push
dec
mov
sahf
aad
mov
cmps
outs
inc
iret
jns
outs
out
mov
movd
xor
(bad)
(bad)
(bad)
(bad)
push
fidiv
jo
icebp
sub
imul
pop
adc
dec
mov
dec
push
scas
sti
or
(bad)
(bad)
call
cmps
scas
loopne
sub
pop
scas
cmps
adc
movs
mov
mov
sub
test
das
stc
clc
cmps
xchg
jmp
imul
movs
add
(bad)
(bad)
inc
mov
(bad)
jle
mov
stos
je
stos
ret
mov
test
aad
ja
(bad)
(bad)
(bad)
jmp
mov
mov
mov
ds
test
cs
pop
add
mov
pop
jmp
pop
test
sbb
imul
sbb
and
mov
sti
call
sbb
out
dec
mov
xor
test
enter
out
and
push
and
inc
(bad)
pop
scas
out
sbb
(bad)
jg
pushf
call
movs
aad
jb
cli
lds
mov
and
push
push
push
push
mov
xchg
aaa
pop
stc
in
adc
jmp
push
mov
and
mov
xchg
ins
mov
pop
or
call
(bad)
call
in
ficomp
sub
fsub
lahf
addr16
inc
add
outs
pop
jmp
inc
jge
jg
(bad)
xchg
pop
dec
adc
icebp
retf
or
fldenv
push
clc
ret
imul
sub
push
mov
push
pop
sub
(bad)
loop
sub
mov
inc
ja
loope
es
stos
(bad)
cmp
push
outs
jbe
xor
sub
mov
repnz
leave
retf
es
int
xor
aad
or
pop
mov
cvtdq2ps
add
(bad)
(bad)
cmp
mov
mov
pop
cmp
mov
push
push
(bad)
(bad)
(bad)
mov
stos
add
push
outs
movs
sub
xor
pop
mov
(bad)
fisub
js
add
fld
fcomip
outs
cli
push
mov
mov
test
stos
sbb
dec
add
jge
add
shr
sub
loop
and
push
call
retf
mov
jmp
push
outs
(bad)
das
and
into
movs
jbe
or
lock
xchg
sub
scas
pop
pusha
add
inc
pop
sbb
movs
cmp
jmp
out
int3
rcr
call
outs
scas
(bad)
(bad)
out
cmp
mov
adc
xchg
into
jg
xor
add
or
(bad)
lods
xor
js
jmp
call
pop
cmp
add
imul
inc
or
mov
fild
mov
imul
push
jp
movs
xchg
imul
jmp
dec
cli
jmp
leave
mov
mov
(bad)
call
xchg
inc
push
std
(bad)
push
(bad)
leave
xchg
les
inc
mov
jmp
(bad)
jg
cmc
call
out
sub
sub
inc
pusha
int3
int3
jns
add
(bad)
inc
mov
and
(bad)
sub
(bad)
(bad)
mov
jl
mov
(bad)
out
and
sub
mov
push
clc
adc
(bad)
add
lods
ins
sbb
xlat
jns
cld
fidivr
or
cmp
mov
in
(bad)
(bad)
(bad)
jmp
fmul
out
arpl
sub
in
std
dec
lds
call
ins
cmp
(bad)
(bad)
(bad)
fidivr
pop
jmp
inc
test
pop
test
rcr
push
sbb
jecxz
xchg
in
xor
adc
(bad)
(bad)
(bad)
std
dec
jg
sti
or
int
cmp
mov
xchg
dec
test
jb
fwait
rcl
inc
sbb
push
and
sbb
mov
pop
dec
out
es
jne
adc
addr16
jmp
les
sub
(bad)
neg
ret
xchg
add
or
xchg
xchg
and
in
push
popa
or
ins
mov
loopne
jle
dec
or
or
jmp
(bad)
dec
jmp
mov
xlat
in
fwait
enter
(bad)
call
mov
mov
stos
or
popa
mov
mov
mov
mov
jl
sub
pop
mov
sbb
clc
mov
in
bound
(bad)
(bad)
push
mov
mov
sub
jnp
cli
loop
(bad)
dec
fld
lods
fcmovbe
add
xlat
cmovo
(bad)
jmp
mov
sub
outs
mov
(bad)
fbld
iret
xchg
dec
inc
retf
rol
lods
xchg
sub
jle
sub
shl
aad
xchg
shr
and
clc
mov
fsubrp
push
or
jg
(bad)
jmp
pop
out
ss
jnp
pop
push
cdq
sub
jo
dec
in
repnz
add
adc
popa
test
(bad)
call
sub
jns
sahf
mov
cmps
pop
fmul
loope
cli
das
dec
(bad)
sbb
sbb
repnz
pop
jecxz
cld
jmp
sub
fld
fld
push
test
mov
fild
fadd
mov
and
cmp
pop
xchg
push
cmp
movs
push
xor
mov
sub
(bad)
jmp
jns
outs
pop
or
add
nop
push
(bad)
scas
sub
js
int
sub
jg
push
or
mov
mov
jae
test
leave
mov
test
fisttp
xchg
push
sub
sbb
mov
call
pop
(bad)
aam
outs
and
cld
push
(bad)
jg
sub
pop
scas
mov
(bad)
(bad)
push
cmp
mov
fisttp
or
imul
xchg
lock
call
sbb
mov
enter
lods
sar
scas
stc
imul
inc
clc
dec
or
cmp
mov
and
(bad)
and
mov
sbb
pop
outs
mov
iret
loopne
xchg
cli
or
jmp
shl
aad
or
cdq
daa
adc
xor
pop
sbb
cmp
pusha
scas
aam
aaa
rol
sub
or
xor
mov
cmp
std
(bad)
(bad)
dec
cmp
xor
pop
(bad)
es
mov
retf
mov
dec
jb
(bad)
(bad)
jmp
sbb
lods
add
mov
sub
mov
(bad)
cwde
pop
sub
fwait
add
call
rcr
mov
out
mov
mov
mov
(bad)
(bad)
(bad)
call
pusha
push
mov
cli
(bad)
lock
mov
cmps
fs
cmp
dec
repnz
cwde
and
js
(bad)
mov
mov
outs
pop
pop
mov
or
fcom
and
jb
cmp
(bad)
jmp
mov
out
fimul
xchg
pop
scas
jne
jl
mov
pop
aad
(bad)
(bad)
(bad)
(bad)
mov
add
mov
std
push
sub
pop
sahf
jl
jge
add
inc
jb
call
dec
mov
mov
pop
jg
repnz
sub
stc
shl
mov
fldcw
retf
jp
sahf
and
sbb
jmp
add
jmp
fbld
es
call
inc
repz
or
sbb
jge
movs
dec
(bad)
cdq
test
loopne
push
jg
stos
or
retf
mov
pop
or
icebp
(bad)
fild
pusha
(bad)
into
sbb
pop
mov
js
mov
sar
call
fisttp
jle
push
sbb
dec
xchg
sub
mov
(bad)
dec
mov
ret
outs
cdq
add
pop
shl
pop
dec
outs
sti
(bad)
(bad)
(bad)
dec
pop
cdq
pop
fadd
ror
sbb
fwait
test
ret
outs
push
test
sub
xchg
mov
pop
xor
(bad)
push
mov
xor
aad
jge
dec
stos
shr
leave
or
push
xor
push
mov
jp
mov
loop
push
(bad)
cmps
push
popf
pop
sub
xchg
jns
(bad)
das
imul
jg
outs
xor
pop
popf
fbld
lods
push
(bad)
push
mov
nop
test
cmps
mov
push
pop
mov
or
(bad)
(bad)
dec
inc
sub
pop
fimul
ins
mov
push
retf
in
dec
in
cdq
(bad)
scas
mov
call
dec
ins
aaa
ins
and
jmp
cwde
call
jecxz
push
add
clc
(bad)
(bad)
jmp
gs
mov
jnp
sbb
into
dec
adc
fistp
ins
iret
push
std
adc
test
xchg
jmp
mov
mov
ret
pop
std
push
add
mov
adc
(bad)
sbb
adc
into
jmp
je
cmp
jl
cmp
(bad)
movs
clc
mov
mov
(bad)
dec
sub
add
push
mov
ds
shr
pop
ret
(bad)
(bad)
jg
mov
fwait
in
cmps
sbb
sub
add
sbb
(bad)
(bad)
(bad)
jmp
cmps
(bad)
cmovo
sub
xchg
xchg
test
ja
fwait
pop
dec
pop
mov
pop
or
inc
(bad)
inc
cmp
shr
pusha
push
sbb
mov
push
sbb
pop
mov
cld
or
sti
cmp
(bad)
js
sar
(bad)
mov
xchg
fwait
xchg
xchg
or
dec
cwde
xchg
addr16
fcmove
inc
gs
push
dec
push
(bad)
and
pop
lds
jmp
lock
xchg
gs
push
hlt
jb
push
retf
add
call
mov
outs
(bad)
(bad)
call
mov
outs
jns
mov
xchg
pop
cwde
es
xchg
pop
add
stos
(bad)
call
call
sub
or
(bad)
cld
test
dec
cmps
lods
pop
cwde
mov
sbb
aaa
or
lods
jmp
pushf
mov
pop
mov
jp
(bad)
(bad)
(bad)
jmp
retf
push
cs
sbb
mov
pop
jno
and
in
pop
xchg
ins
mov
inc
into
mov
(bad)
(bad)
dec
push
icebp
and
(bad)
cmp
mov
jecxz
sbb
pop
repnz
or
(bad)
jmp
mov
(bad)
retf
cmp
or
(bad)
mov
dec
jmp
cmp
repz
stos
pop
xchg
ins
or
stos
sahf
in
ins
add
mov
jae
sub
jo
call
sub
push
scas
test
push
imul
xchg
(bad)
dec
dec
pusha
int
lock
sbb
mov
sub
jmp
(bad)
lods
out
sub
mov
neg
call
and
inc
jp
(bad)
(bad)
(bad)
jmp
sub
popa
into
stos
fldcw
pop
repnz
ss
push
sub
loope
mov
pop
jp
cmp
test
ret
cmp
xor
pop
out
or
and
(bad)
jmp
add
mov
retf
mov
clc
ins
cmp
dec
outs
iret
es
sub
jne
mov
add
(bad)
(bad)
jmp
pop
or
call
jecxz
jecxz
sbb
cmp
(bad)
(bad)
jmp
dec
dec
adc
jne
mov
adc
and
and
cmps
push
cmp
out
(bad)
(bad)
(bad)
jmp
(bad)
cmp
iret
arpl
sub
stos
aam
cli
adc
and
jmp
lds
(bad)
(bad)
jmp
test
stos
iret
sahf
push
outs
repnz
add
cmp
push
xchg
sub
ror
jb
sub
in
imul
movs
or
fwait
loopne
push
ret
(bad)
jg
jmp
sub
dec
mov
mov
dec
stos
pop
and
pop
or
ret
retf
test
xchg
outs
scas
mov
sti
mov
jmp
scas
(bad)
(bad)
out
cli
ja
shl
pushf
stos
stos
test
jg
adc
adc
mov
sub
pushf
fisttp
cmps
and
push
(bad)
and
mov
inc
adc
jno
sub
cwde
dec
or
pop
xchg
pop
in
ja
(bad)
inc
xor
int
ret
cdq
mov
out
adc
xor
(bad)
jmp
mov
sub
push
pop
xchg
arpl
dec
stos
repnz
aas
adc
imul
mov
push
push
push
sahf
pop
mov
mov
fwait
push
mov
xor
pusha
stos
pop
out
cmp
das
cmp
(bad)
call
cmps
or
inc
or
sub
cmps
push
inc
mov
pop
loop
push
call
jo
mov
ret
jecxz
cmp
in
repnz
retf
jmp
push
push
pop
xchg
mov
(bad)
(bad)
mov
pop
pop
stos
inc
loop
mov
shl
or
xchg
or
scas
sub
mov
mov
addr16
(bad)
(bad)
fnstsw
inc
clc
sub
sub
push
fcmovnu
outs
movs
pusha
mov
mov
(bad)
push
rol
push
adc
in
jmp
sbb
test
ja
pop
jns
ins
sub
sub
(bad)
(bad)
jmp
aad
iret
dec
imul
jo
add
jmp
and
sbb
mov
aaa
push
mov
sbb
push
inc
push
jg
push
and
(bad)
clc
(bad)
(bad)
call
clc
test
and
cmp
pop
sub
mov
adc
rcl
cli
in
mov
add
call
cs
mov
enter
push
scas
aam
inc
pop
xchg
dec
jp
adc
jg
sar
ja
dec
jp
lock
(bad)
(bad)
mov
std
test
mov
mov
sbb
mov
mov
add
mov
stos
and
cmovae
and
mov
cs
pop
clc
stos
popa
jmp
jae
sub
push
cmp
adc
(bad)
dec
jnp
lock
sub
jmp
inc
stos
loope
outs
or
jmp
jmp
(bad)
jg
inc
icebp
lahf
fsubr
push
inc
icebp
imul
into
sbb
lea
call
(bad)
(bad)
jmp
test
stos
dec
and
out
cmps
jle
add
mov
sbb
dec
retf
add
mov
dec
inc
and
mov
cmp
lods
scas
bnd
(bad)
(bad)
(bad)
jmp
sub
scas
fidivr
ror
jnp
or
fdivrp
sub
data16
(bad)
(bad)
(bad)
call
pop
mov
ret
fmul
sub
or
stos
inc
out
or
push
(bad)
jmp
call
mov
into
sub
test
mov
pop
mov
enter
(bad)
(bad)
(bad)
jmp
push
out
jecxz
cmp
cmps
fisub
sbb
sar
jb
push
sub
ret
dec
mov
(bad)
(bad)
push
cmp
iret
mov
inc
pop
sub
or
pop
xchg
shl
jg
push
mov
aad
repz
mov
push
mov
fdivrp
inc
and
gs
bound
push
inc
dec
xchg
in
adc
stc
pop
scas
sbb
call
inc
pop
bound
mov
in
push
call
cmp
lahf
cmc
jecxz
leave
dec
imul
adc
xchg
fsubr
lods
add
mov
adc
neg
clc
mov
mov
jmp
(bad)
(bad)
mov
cmp
and
jne
scas
lea
adc
das
mov
sahf
out
sahf
(bad)
(bad)
(bad)
jmp
push
jbe
mov
sub
outs
(bad)
adc
jnp
leave
movs
jnp
pop
clc
(bad)
(bad)
jnp
fcmovne
jb
cdq
dec
adc
pop
lahf
call
xor
sbb
(bad)
jmp
mov
repnz
fwait
or
dec
retf
mov
call
push
lahf
fistp
popa
xor
enter
sub
iret
pop
or
(bad)
fsubr
pop
or
mov
cmc
scas
jne
xor
retfw
mov
fisub
sbb
sub
pop
dec
clc
test
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
test
das
sub
mov
jg
jnp
daa
mov
out
push
cmp
cmp
xchg
pop
popa
loop
cld
bound
ins
xchg
(bad)
(bad)
call
jb
mov
cli
outs
mov
(bad)
sbb
scas
fisubr
test
aaa
cld
stos
dec
push
mov
jp
pushf
jns
bound
dec
loopne
cmps
shl
out
mov
pop
xchg
inc
ins
add
movs
adc
pop
xchg
cmp
in
dec
add
cmps
mov
dec
fisub
iret
ret
fild
jmp
and
sti
cmps
call
pop
out
(bad)
mov
and
cli
cwde
out
xchg
rcr
imul
loop
pop
icebp
(bad)
(bad)
(bad)
in
imul
in
pop
mov
es
loop
cmp
test
cmp
mov
cli
(bad)
(bad)
xchg
jle
imul
daa
rol
das
pop
lods
in
test
fwait
inc
mov
and
cmp
test
or
mov
(bad)
(bad)
call
mov
mov
stc
push
loop
push
ret
int3
push
fsubr
jp
inc
test
(bad)
(bad)
(bad)
call
daa
enter
jbe
mov
sub
iret
out
pop
pop
cli
fistp
and
(bad)
jmp
in
dec
scas
call
std
push
push
mov
mov
imul
popa
dec
jge
hlt
(bad)
(bad)
(bad)
jl
push
in
pop
scas
in
fwait
push
mov
xchg
push
sub
loope
mov
push
call
mov
xor
stos
push
stc
inc
call
int
std
call
(bad)
cmp
xor
imul
arpl
mov
mov
imul
fwait
(bad)
call
lea
pop
stos
pop
out
or
push
daa
icebp
mov
daa
stc
push
fcos
dec
pop
loop
mov
std
enter
pushf
mov
call
adc
(bad)
scas
and
outs
mov
div
sub
retf
call
mov
(bad)
xchg
or
mov
sub
mov
jge
jp
retf
push
mov
in
sub
(bad)
mov
jge
cmp
pop
sti
pop
retf
stos
add
cmc
dec
mov
add
(bad)
push
jl
test
dec
icebp
sub
pop
push
sbb
mov
cmp
aaa
cld
and
sar
loopne
jmp
fnstenv
fld
adc
push
mov
in
and
(bad)
push
xor
(bad)
(bad)
(bad)
call
mov
mov
movs
inc
adc
adc
jmp
mov
iret
push
(bad)
call
call
pop
pop
ret
into
and
cs
into
call
push
sbb
push
pop
push
scas
cs
add
push
pusha
arpl
sub
push
or
lahf
xor
push
and
push
stos
test
or
pop
sub
iret
fisubr
fadd
aaa
sbb
pop
cmp
sub
and
xchg
aad
mov
shl
(bad)
mov
or
mov
cmp
mov
(bad)
ss
pop
out
sub
jle
mov
test
popa
xchg
fdivp
test
sti
test
adc
pop
cmp
pop
enter
mov
jp
repnz
pop
call
jg
fwait
leave
mov
jo
out
add
mov
(bad)
(bad)
dec
test
mov
je
inc
pop
ja
loop
(bad)
nop
imul
stos
cmp
stos
(bad)
(bad)
(bad)
dec
pop
push
out
out
jno
scas
je
pop
cmp
pop
mov
stos
ins
push
test
jl
add
dec
sub
sub
mov
sub
mov
fdivr
push
loope
and
imul
fstp
mov
pop
cmp
mov
call
int3
loop
xor
repnz
add
ds
(bad)
push
pop
push
mov
or
cli
dec
pop
lahf
out
sbb
hlt
sbb
(bad)
push
and
xchg
jle
movs
out
call
mov
call
stos
out
pop
sahf
aad
outs
stos
push
mov
lock
jb
sti
dec
cmps
into
lods
sub
sub
std
icebp
(bad)
(bad)
call
mov
out
cmps
in
clc
shl
in
dec
call
sub
xchg
cmp
inc
xchg
jmp
jo
dec
xor
outs
sub
std
(bad)
dec
int3
xor
pop
movs
(bad)
not
push
cld
imul
cmps
fmul
adc
add
in
mov
mov
dec
pop
pop
mov
inc
cld
(bad)
inc
inc
lods
jle
adc
out
dec
retf
cdq
movs
pop
stos
(bad)
push
cmp
dec
imul
(bad)
(bad)
jmp
xchg
in
inc
rep
lds
mov
push
adc
jnp
lods
jns
popf
push
(bad)
mov
lea
(bad)
call
(bad)
mov
pop
stc
pop
mov
(bad)
(bad)
jmp
mov
cwde
loopne
sub
adc
and
daa
cli
push
dec
jb
ds
out
xor
fs
push
mov
cmp
rcr
rcr
jno
ror
push
cld
(bad)
adc
call
xor
fisttp
(bad)
mov
sbb
push
cld
sub
lahf
jmp
jmp
mov
mov
and
ret
imul
(bad)
ret
xlat
and
repz
push
fs
sub
mov
ret
ins
mov
enter
lods
(bad)
fistp
in
stos
dec
inc
(bad)
mov
inc
xchg
in
jl
rcl
in
sbb
mov
leave
sub
(bad)
(bad)
(bad)
push
adc
lods
sub
imul
push
add
jmp
lods
and
fisub
daa
clc
jle
retf
(bad)
jg
inc
retf
aaa
sahf
iret
pop
cmps
mov
inc
dec
test
add
push
scas
xchg
dec
dec
repnz
sub
pop
dec
repz
(bad)
jmp
push
mov
jmp
(bad)
mov
inc
xchg
adc
in
(bad)
and
(bad)
(bad)
jmp
call
dec
jl
nop
repnz
fisubr
in
pop
call
sub
imul
aas
out
stos
jno
mov
sbb
sti
and
pop
call
(bad)
dec
jbe
imul
inc
stos
push
jecxz
aaa
add
hlt
mov
imul
push
idiv
ret
(bad)
(bad)
jg
mov
or
mov
mov
dec
aaa
xchg
add
leave
and
add
add
aam
push
pop
push
fild
(bad)
(bad)
(bad)
push
pop
das
not
xor
(bad)
mov
mov
inc
mov
(bad)
(bad)
(bad)
(bad)
mov
les
adc
push
arpl
mov
loop
loopne
(bad)
aam
mov
arpl
scas
sbb
fnstenv
mov
pop
cld
aaa
std
adc
push
bt
test
jns
je
fwait
(bad)
dec
(bad)
ins
das
imul
sbb
or
mov
sbb
xor
mov
ds
call
test
call
in
(bad)
call
dec
mov
ins
cld
call
dec
jmp
das
push
mov
pop
cmp
(bad)
jp
mov
dec
test
imul
and
pop
ins
shl
movs
lods
mov
adc
rcr
loop
imul
add
(bad)
call
sub
movs
jmp
jb
clc
test
(bad)
(bad)
call
push
cs
enter
pop
mov
sub
adc
(bad)
adc
daa
mov
jg
(bad)
fcmove
and
add
mov
add
mov
jns
adc
or
ja
inc
jg
jmp
add
pop
in
leave
out
(bad)
(bad)
(bad)
(bad)
call
loope
mov
test
push
xchg
js
push
and
fucomp
mov
mov
(bad)
(bad)
dec
xchg
(bad)
enter
mov
addr16
movs
xor
(bad)
(bad)
fcomip
aaa
lods
push
dec
test
shl
sub
mov
sub
(bad)
(bad)
inc
inc
cmc
cli
(bad)
movs
rcr
jmp
in
sub
cmp
es
sbb
in
sub
outs
or
(bad)
push
cwde
sahf
mov
popa
mov
loop
jle
int
inc
and
aas
test
out
and
inc
movs
scas
jl
fisttp
call
cmps
in
sub
outs
mov
retf
push
gs
jg
and
jg
ja
ror
aas
push
(bad)
cmc
rcr
jb
pop
popa
push
call
sbb
in
sub
loope
jmp
mov
call
dec
and
int3
xchg
mov
mov
dec
xor
(bad)
(bad)
in
into
stos
pop
pop
pop
fcomp
or
mov
xchg
pop
xor
push
and
inc
loop
xchg
xor
jae
mov
pop
cmp
sbb
inc
dec
pop
mov
(bad)
xlat
sub
mov
inc
sub
lods
sbb
in
xor
std
shl
scas
ficomp
repnz
push
sbb
xor
shr
in
mov
xchg
inc
mov
jl
xlat
cmp
lock
std
jbe
(bad)
(bad)
(bad)
call
mov
push
std
gs
xchg
xchg
xlat
jl
push
aas
mov
ja
sub
(bad)
call
cmps
sub
mov
pushf
xchg
add
lahf
add
in
loope
ret
mov
sbb
call
mov
adc
mov
mov
pop
ret
(bad)
jg
in
inc
add
cld
lea
jecxz
pushf
mov
aaa
xor
dec
jg
and
cmp
rcl
cli
in
inc
sar
mov
and
mov
jae
stos
out
sbb
push
hlt
adc
mov
mov
ja
stc
xor
loope
fwait
sar
(bad)
jmp
xor
mov
cmp
repz
mov
(bad)
(bad)
call
repnz
jb
inc
or
add
jp
inc
inc
mov
(bad)
(bad)
(bad)
dec
arpl
cld
cwde
loop
call
mov
mov
cwde
pop
retf
in
jle
pop
sub
xchg
push
dec
sbb
data16
(bad)
(bad)
(bad)
cmp
adc
rol
cmp
(bad)
std
mov
dec
xor
cmp
cmp
mov
cmp
cmps
lock
arpl
ret
push
xor
jae
(bad)
call
sbb
retf
retf
dec
push
push
pop
sub
gs
out
xor
sbb
cmp
pop
dec
or
jl
or
cmp
push
call
mov
(bad)
jmp
sar
cwde
(bad)
adc
sub
fistp
xchg
stos
sar
clc
arpl
fimul
fs
pop
jnp
sub
sub
iret
xor
mov
cmps
fistp
stc
cmp
sub
sub
into
retf
fmul
jg
movs
inc
es
mov
iret
jle
out
dec
xor
test
lods
in
pop
shl
mov
(bad)
push
pop
stos
fistp
sub
sar
(bad)
shr
mov
rol
out
sub
(bad)
movs
push
loop
aaa
sbb
dec
std
scas
cli
call
lahf
pop
xchg
mov
pop
(bad)
(bad)
jmp
mov
daa
inc
mov
mov
int3
mov
pop
icebp
jmp
sub
mov
xchg
mov
push
int
rol
cli
(bad)
(bad)
jg
shr
jge
mov
inc
dec
adc
sbb
imul
xchg
mov
stos
call
(bad)
jmp
xchg
cmps
sbb
ins
cli
int
(bad)
mov
loope
into
push
nop
mov
push
mov
sahf
or
call
and
bound
cmps
jl
fs
(bad)
push
mov
sbb
cmp
imul
jmp
repnz
push
adc
mov
mov
jmp
adc
xor
imul
loope
mov
xor
add
(bad)
dec
std
cwde
adc
dec
lahf
push
cs
xor
mov
sbb
(bad)
(bad)
mov
cs
es
fisttp
dec
or
in
cmp
std
(bad)
(bad)
(bad)
jmp
mov
lods
mov
inc
(bad)
xor
mov
fimul
push
ror
jmp
sub
imul
sub
fcomp
(bad)
push
icebp
(bad)
mov
xor
sbb
not
(bad)
push
dec
sub
arpl
inc
popa
scas
pop
sub
jecxz
not
xchg
into
ficomp
test
fcomip
(bad)
jmp
popa
ins
in
es
jbe
jle
xor
xor
fst
jb
(bad)
(bad)
inc
sbb
push
inc
dec
and
(bad)
push
sahf
or
push
push
push
inc
outs
(bad)
jmp
pop
push
in
out
std
cmp
xchg
mov
je
in
or
(bad)
jg
mov
retf
loopne
xchg
std
and
mov
nop
mov
in
mov
pop
movs
popa
jo
mov
fcomp
pop
(bad)
in
(bad)
push
das
jbe
cmps
jmp
pusha
repnz
bsf
or
jg
pop
inc
inc
inc
lock
mov
mov
js
jge
jb
push
and
icebp
(bad)
inc
sub
push
or
mov
mov
std
jmp
adc
and
xchg
outs
inc
xchg
sub
mov
or
push
in
or
sahf
or
sub
sub
in
in
in
pop
mov
(bad)
jmp
lods
imul
out
xlat
push
xor
jnp
mov
lea
clc
(bad)
(bad)
push
or
dec
outs
push
jmp
lock
push
scas
inc
or
ins
jmp
call
fisttp
aas
and
mov
mov
(bad)
jnp
add
(bad)
fnstsw
jge
sahf
sub
iret
in
xor
retf
leave
xchg
jg
jno
dec
sub
(bad)
mov
call
mov
cmp
xlat
mov
and
inc
mov
jae
ret
cs
and
call
push
inc
shl
leave
mov
ds
adc
mov
(bad)
mov
repnz
dec
int3
dec
and
(bad)
jmp
retf
nop
jb
fsubr
jmp
cli
pop
and
(bad)
pop
je
and
mov
push
mov
sbb
add
jne
ret
cmp
cmp
xchg
adc
xor
(bad)
(bad)
(bad)
cmp
ins
mov
ss
scas
cmps
stos
je
xchg
retf
fld1
dec
stos
pop
neg
push
pop
add
(bad)
(bad)
jge
cwde
and
sub
push
jl
jecxz
jmp
js
fwait
inc
push
pop
dec
push
sub
cmp
xchg
jb
jnp
ret
(bad)
(bad)
std
dec
xor
xchg
cmp
mov
push
dec
mov
mov
imul
(bad)
inc
inc
ds
repnz
add
xchg
push
(bad)
(bad)
(bad)
(bad)
(bad)
mov
mov
jl
cmc
sbb
daa
mov
les
push
lods
or
test
stc
dec
cwde
mov
mov
das
call
jmp
call
or
retf
jg
or
popf
push
fwait
stc
call
(bad)
jp
mov
arpl
inc
or
neg
or
cmp
mov
cmp
fwait
sub
mov
jmp
cmp
push
std
scas
lods
std
sbb
mov
mov
mov
pushf
cdq
loope
(bad)
(bad)
stc
fimul
sbb
add
loopne
sub
(bad)
jns
mov
sbb
xacquire
clc
(bad)
fisttp
cld
pop
lods
rcl
jg
mov
daa
mov
push
scas
(bad)
call
mov
cmp
and
add
gs
mov
lds
mov
fdiv
mov
mov
or
aam
(bad)
jne
call
(bad)
outs
mov
fisttp
mov
push
and
sbb
jae
cmp
pop
jmp
dec
or
(bad)
(bad)
(bad)
(bad)
in
sahf
fild
mov
ja
ss
dec
leave
jmp
pop
push
cmp
sub
arpl
(bad)
(bad)
call
fs
call
call
stos
rol
pop
jl
xor
mov
(bad)
(bad)
dec
sbb
push
jp
(bad)
mov
adc
(bad)
enter
daa
cmps
and
inc
inc
xor
cmp
inc
cld
cmp
cmps
(bad)
jmp
push
mov
mov
mov
(bad)
(bad)
(bad)
jmp
pop
(bad)
clc
mov
pop
pop
(bad)
cmp
loope
lods
pop
arpl
xchg
retf
out
loope
(bad)
(bad)
call
push
inc
mov
mov
dec
jge
xor
ins
inc
mov
outs
mov
outs
push
rol
hlt
outs
push
mov
push
mov
sub
(bad)
dec
and
(bad)
push
mov
and
xor
lahf
xchg
mov
lahf
bound
push
pop
into
out
arpl
bnd
(bad)
(bad)
(bad)
dec
cmp
ret
and
cs
xchg
push
scas
sahf
loop
js
push
(bad)
push
mov
fbstp
xchg
stos
or
(bad)
jl
mov
(bad)
lea
xor
scas
sar
xchg
outs
div
movs
retf
push
(bad)
adc
pop
or
mov
rcl
aad
(bad)
and
outs
stos
and
(bad)
(bad)
(bad)
mov
mov
mov
xor
sub
xchg
xor
jo
mov
(bad)
jmp
push
out
pop
dec
in
outs
and
adc
(bad)
(bad)
fcomip
or
(bad)
in
retf
fidivr
sahf
imul
sub
push
fdivr
(bad)
(bad)
(bad)
mov
mov
fdivr
or
adc
sub
daa
sub
(bad)
jmp
mov
push
xchg
cdq
cmps
sub
cmp
sub
(bad)
cmp
dec
dec
ins
scas
sbb
gs
ss
adc
and
call
xor
test
stos
leave
push
cmp
in
clc
adc
push
cli
cld
sub
and
(bad)
sub
aaa
mov
mov
jg
cld
sub
in
push
pop
mov
je
and
mov
adc
stos
out
cli
(bad)
jmp
push
push
mov
xchg
cmp
lods
leave
call
add
(bad)
call
scas
push
sub
call
push
and
inc
push
sub
push
mov
movs
mov
fistp
push
push
adc
mov
cli
pop
js
(bad)
mov
push
mov
adc
sub
mov
cmp
loopne
jp
dec
xchg
lods
(bad)
add
mov
xchg
je
bound
mov
dec
mov
inc
ins
or
test
pusha
dec
ja
mov
ja
xor
pop
pop
das
mov
sbb
pop
add
jecxz
sar
fild
cmps
pop
push
and
mov
bound
out
add
mov
sub
shl
pop
cld
pop
fisubr
cmp
mov
call
push
inc
dec
mov
(bad)
jmp
int3
sub
pop
addr16
ins
imul
sub
mov
imul
lea
sbb
inc
sub
clc
das
clc
call
test
ins
sbb
sbb
lea
push
push
pop
cmp
ja
sbb
in
(bad)
fild
or
pop
cli
mov
add
test
sbb
mov
(bad)
(bad)
(bad)
jns
addr16
inc
addr16
mov
jns
sub
pop
push
mov
scas
call
inc
in
retf
(bad)
(bad)
(bad)
inc
or
iret
mov
in
out
sub
repnz
std
or
adc
lock
(bad)
jmp
loopne
stos
int3
scas
lods
mov
dec
sbb
(bad)
jmp
jl
cmp
or
jb
mov
dec
sub
or
sar
adc
push
adc
add
fisttp
(bad)
js
ds
sub
cmps
pop
in
or
fucomp
xor
and
push
jmp
cmp
jmp
pop
cmp
(bad)
(bad)
call
call
and
es
shr
in
cmp
pop
fist
(bad)
(bad)
(bad)
push
cs
arpl
xor
add
mov
iret
xor
cmp
adc
(bad)
(bad)
(bad)
(bad)
clc
retf
adc
popf
jp
fistp
in
stos
ror
mov
jle
xchg
(bad)
test
jle
rol
(bad)
inc
dec
ficomp
mov
mov
punpckhdq
(bad)
call
inc
retf
adc
scas
sbb
leave
mov
sbb
jns
inc
stos
sbb
dec
add
mov
scas
sub
das
mov
dec
outs
dec
retf
xchg
outs
(bad)
fmul
dec
ins
sub
lahf
mov
mov
sti
cmp
pop
(bad)
inc
cdq
pop
cmp
sub
lock
movs
jecxz
repnz
(bad)
(bad)
(bad)
jmp
imul
stos
imul
mov
into
push
dec
jns
(bad)
lods
adc
(bad)
(bad)
jmp
push
xchg
jno
out
cmps
int3
je
push
imul
stos
or
(bad)
mov
shl
call
dec
test
dec
dec
(bad)
js
jmp
pop
push
jmp
push
push
xchg
mov
sub
mov
sahf
test
sar
mov
popa
pop
add
ja
in
cdq
mov
fs
dec
pop
cmp
adc
or
div
(bad)
(bad)
(bad)
(bad)
mov
xor
sub
shr
imul
sar
dec
ret
sub
lock
(bad)
(bad)
push
out
out
seta
or
push
ins
push
sbb
sub
add
cmps
xor
push
cld
dec
repz
stos
jmp
imul
lea
mov
sub
or
jmp
cmps
addr16
lahf
jge
test
xchg
es
adc
dec
or
(bad)
(bad)
jg
mov
dec
xor
mov
xor
or
jl
sub
(bad)
(bad)
(bad)
jmp
enter
mov
mov
mov
jmp
fwait
push
add
je
retf
mov
(bad)
push
(bad)
sahf
std
(bad)
mov
sub
dec
das
jb
push
inc
leave
sbb
jg
into
test
(bad)
enter
mov
inc
ins
and
loopne
xor
jp
retf
mov
xchg
scas
ja
(bad)
(bad)
jmp
pusha
loop
repz
push
mov
or
mov
mov
pop
(bad)
mov
out
xor
enter
stos
fld
(bad)
(bad)
(bad)
dec
push
stos
inc
call
mov
test
mov
cdq
arpl
sti
xor
repnz
cmps
fisttp
int3
xor
sub
call
mov
jmp
jge
jnp
push
(bad)
inc
mov
pop
in
or
mov
jmp
jmp
repnz
sbb
fcmovnu
mov
repnz
adc
(bad)
(bad)
mov
push
imul
fisub
mov
push
(bad)
mov
inc
ins
jns
(bad)
(bad)
inc
icebp
and
iret
(bad)
test
pop
push
dec
mov
popf
bound
pop
push
rcr
sub
clc
in
stos
retf
add
lods
cmp
inc
push
(bad)
fisttp
cmp
mov
(bad)
push
jmp
repnz
outs
or
or
or
inc
aas
cdq
cld
and
call
xchg
pop
jle
mov
jnp
stos
sahf
sub
imul
pop
ins
dec
inc
retf
sub
inc
or
mov
and
push
mov
dec
int
mov
adc
mov
(bad)
(bad)
dec
jbe
adc
stos
dec
out
push
xor
test
je
push
clc
dec
dec
sub
repnz
(bad)
(bad)
(bad)
mov
mov
inc
sbb
ret
jg
push
and
stos
mov
daa
adc
jge
and
mov
rcl
movs
std
or
xchg
retf
xchg
sahf
arpl
test
call
loop
inc
mov
cmp
in
std
scas
xchg
cmc
stos
inc
mov
pushf
(bad)
(bad)
inc
jmp
pop
into
ss
dec
jl
arpl
push
bound
(bad)
(bad)
jmp
xchg
or
fwait
ins
(bad)
aas
push
test
es
jp
sbb
(bad)
call
mov
movs
pop
loop
ret
repnz
inc
jl
pop
repnz
dec
ins
mov
xor
dec
fwait
jno
rcr
cmp
and
mov
mov
call
push
jle
movs
js
pop
fidivr
loop
cmps
pop
movs
js
stos
iret
mov
iret
(bad)
call
rcl
cs
sub
das
and
test
sahf
inc
js
sub
(bad)
(bad)
(bad)
dec
sbb
push
test
sbb
lods
rcr
scas
push
das
test
or
mov
fwait
add
dec
inc
xchg
xcrypt-ecb
cmps
or
jmp
or
nop
push
ror
xor
cld
jmp
stc
push
dec
leave
(bad)
(bad)
dec
add
or
lahf
adc
sahf
and
mov
ffreep
out
mov
push
stc
add
jae
(bad)
pop
cmp
xchg
retf
push
and
(bad)
jmp
or
sub
cmp
daa
mov
pop
in
jg
mov
sub
into
pushf
cmp
cwde
(bad)
(bad)
in
mov
movs
pop
mov
retf
and
add
mov
dec
enter
(bad)
out
(bad)
(bad)
(bad)
call
mov
jp
adc
call
mov
mov
arpl
pop
cld
jmp
push
outs
retf
(bad)
pop
mov
scas
int3
es
pop
out
sbb
jecxz
xchg
inc
cmps
sub
arpl
jno
movs
mov
add
pop
sbb
nop
pop
pop
inc
(bad)
fstp
jp
add
jmp
push
mov
mov
cmp
pop
or
icebp
pushf
mov
fcomip
test
add
ret
mov
stos
mov
and
(bad)
(bad)
(bad)
clc
outs
mov
push
test
push
add
jo
xor
addr16
rcr
add
daa
mov
adc
pop
jno
push
or
hlt
and
pushf
shr
dec
xor
jmp
adc
scas
jmp
sbb
(bad)
call
push
cli
aaa
add
arpl
jno
mov
add
mov
(bad)
dec
cmps
fadd
std
fidivr
xchg
cmps
lahf
cmps
sub
retf
cli
mov
scas
stos
add
xchg
jnp
mov
ret
into
out
pop
cs
xor
outs
or
add
mov
in
ins
retf
sub
fild
mov
jnp
aas
cmp
or
or
fstp
in
mov
sub
add
stos
or
loope
push
mov
fmul
cld
mov
dec
mov
xchg
(bad)
(bad)
dec
sbb
ins
jle
mov
xor
mov
sbb
cmps
lods
ja
std
(bad)
(bad)
jmp
adc
stos
arpl
cdq
scas
movs
into
push
out
fistp
enter
test
jmp
mov
push
sbb
push
shl
(bad)
fldenv
scas
popf
add
(bad)
loopne
call
in
cli
(bad)
dec
dec
(bad)
retf
outs
sar
dec
push
(bad)
fsub
fstp
push
retf
int3
mov
stos
aad
mov
mov
inc
inc
xchg
cs
cli
call
jmp
sub
imul
mov
mov
loope
cld
adc
adc
mov
(bad)
dec
dec
ins
mov
ret
push
retf
jae
pop
pop
pop
(bad)
(bad)
(bad)
inc
adc
stc
shl
out
jno
pop
lock
nop
daa
stos
outs
inc
hlt
sub
mov
jb
jmp
pop
cmp
mov
loop
push
cmp
in
ins
cmc
shr
loop
pop
aad
es
xor
and
adc
fsubr
mov
(bad)
repnz
jae
lods
push
(bad)
push
sbb
test
call
data16
dec
add
call
imul
adc
arpl
jmp
retf
dec
loopne
cli
mov
int
add
shr
(bad)
(bad)
jmp
ins
test
jp
inc
mov
inc
jp
fist
icebp
push
dec
dec
mov
xchg
lods
push
adc
jns
jmp
jmp
mov
sar
loop
mov
es
and
pop
js
jmp
or
dec
lods
je
ja
dec
mov
ret
not
add
mov
pop
jmp
and
jg
cld
(bad)
(bad)
in
adc
and
dec
movs
jge
or
sub
pop
add
push
cmp
sub
out
jl
and
movs
mov
(bad)
(bad)
jmp
cmp
cmps
or
mov
adc
neg
push
rcr
mov
mov
(bad)
(bad)
mov
fcomp
ror
mov
mov
sbb
fnstcw
xchg
imul
add
dec
mov
mov
out
fadd
push
dec
sbb
jg
dec
dec
out
jmp
(bad)
(bad)
jg
xchg
retf
push
imul
jmp
adc
movs
mov
inc
shr
shr
retf
sbb
and
adc
and
or
fbld
mov
push
(bad)
ins
sbb
fmul
pop
hlt
sub
sub
(bad)
jmp
clc
mov
adc
mov
sub
mov
shl
hlt
mov
(bad)
call
xchg
push
(bad)
xor
jmp
xor
pop
(bad)
inc
xor
(bad)
adc
inc
or
mov
sub
jecxz
(bad)
inc
mov
mov
retf
xor
add
in
mov
jmp
es
call
dec
loop
loop
sbb
imul
jmp
ss
mov
adc
test
mov
popa
inc
jmp
test
(bad)
(bad)
mov
xchg
call
mov
call
jp
movs
xor
(bad)
call
rol
addr16
fs
inc
push
movs
dec
inc
div
cs
add
(bad)
(bad)
inc
nop
frstor
lock
cmps
outs
ja
jne
lea
js
jbe
and
adc
in
lea
iret
mov
mov
inc
push
jb
cld
(bad)
jmp
and
shr
jp
sub
call
mov
mov
cdq
mov
or
xchg
pmulhw
jp
mov
stos
mov
je
cmps
(bad)
call
mov
std
imul
push
inc
in
leave
jne
sbb
sub
inc
push
call
scas
mov
call
fisttp
push
cmps
sbb
mov
call
dec
(bad)
fcomip
call
les
or
mov
sub
bnd
adc
pop
pop
mov
pop
adc
std
mov
retf
push
movs
scas
pop
shr
out
loop
push
clc
(bad)
(bad)
(bad)
push
jns
scas
inc
mov
jns
lahf
(bad)
sub
lods
adc
clc
cmp
dec
repnz
not
inc
xchg
(bad)
(bad)
(bad)
inc
sbb
retf
test
stos
mov
loope
adc
sub
and
(bad)
cld
sub
(bad)
(bad)
call
inc
push
or
(bad)
stos
add
push
outs
cmps
sbb
mov
mov
mov
(bad)
(bad)
(bad)
inc
mov
and
cmps
jmp
test
xchg
cmps
xor
scas
hlt
fwait
and
call
or
adc
mov
or
jp
in
call
lods
mov
pop
outs
sti
sub
repnz
test
dec
xchg
push
sub
xor
sub
push
outs
imul
mov
imul
push
lea
cmps
mov
pop
popa
add
xchg
jb
jmp
cmp
xchg
mov
cmp
inc
gs
pop
test
push
cmp
jecxz
and
mov
into
std
sbb
or
sbb
xlat
aaa
cld
pop
in
jmp
shl
xchg
jae
ret
stos
inc
(bad)
(bad)
(bad)
inc
ins
shr
les
adc
mov
jo
aam
jmp
(bad)
dec
mov
pop
imul
jns
xchg
(bad)
cmp
imul
inc
imul
lock
and
sbb
(bad)
call
(bad)
(bad)
(bad)
(bad)
mov
test
sub
test
pushf
ss
mov
lahf
repnz
sti
loope
stos
xchg
mov
and
popf
mov
sbb
pop
jns
(bad)
(bad)
jg
xchg
(bad)
sahf
push
call
or
leave
ins
test
cli
pop
pop
loop
cdq
sub
into
xchg
adc
fst
test
(bad)
(bad)
(bad)
push
sbb
add
cmps
stos
mov
fdivr
rcl
jb
das
push
(bad)
loopne
out
out
xor
(bad)
(bad)
cmp
push
test
cs
cld
retf
lods
jecxz
lods
(bad)
jno
cli
sub
out
(bad)
(bad)
(bad)
out
fcmovb
sub
lahf
xchg
xor
aas
xor
(bad)
je
fistp
mov
cli
and
pop
icebp
(bad)
(bad)
cmp
sbb
pop
out
(bad)
test
push
(bad)
(bad)
push
sbb
loopne
pusha
fimul
lahf
xor
adc
imul
das
cli
(bad)
call
repz
dec
mov
clc
dec
sahf
cmps
jns
sbb
sub
(bad)
(bad)
dec
out
mov
sbb
clc
dec
(bad)
sahf
cld
outs
jnp
mov
pop
icebp
call
popa
sti
push
js
into
dec
adc
(bad)
(bad)
jmp
je
(bad)
sti
scas
dec
jb
mov
ror
(bad)
push
push
mov
lea
mov
cli
jo
enter
dec
mov
test
rcl
jo
aad
stos
mov
cmp
and
out
mov
(bad)
(bad)
(bad)
call
retf
adc
xchg
fstp
rcl
or
jmp
dec
mov
sbb
sub
push
jge
(bad)
pop
xor
bnd
fwait
adc
scas
jmp
cdq
inc
cli
sub
or
lods
rep
(bad)
inc
dec
mov
ror
sbb
bound
in
cmp
fs
cmp
outs
outs
jg
mov
arpl
addr16
inc
mov
pop
imul
mov
jmp
nop
sub
(bad)
sbb
jo
sbb
and
cmp
fsubr
test
mov
sbb
in
xor
test
jmp
gs
shl
gs
xchg
imul
jmp
jmp
popw
inc
lods
or
cmp
fdivr
fwait
test
dec
fs
jae
ror
sub
popa
jo
jecxz
loope
mov
test
mov
sub
dec
push
outs
int
jmp
mov
popf
jmp
js
cli
xchg
enter
(bad)
sti
popa
pop
sahf
mov
push
dec
ror
lock
jg
enter
frstor
mov
xor
pusha
adc
push
and
ins
loop
sub
jg
jmp
fdiv
sbb
and
or
mov
outs
pusha
cmp
(bad)
(bad)
inc
loop
sbb
mov
(bad)
mov
sahf
dec
and
fcomp
mov
stos
add
mov
call
(bad)
aas
clc
push
pusha
sti
popw
shr
ja
loopne
popa
fsub
xchg
in
xchg
shl
sti
jle
mov
push
xor
push
mov
in
clc
jo
(bad)
ins
lea
retf
mov
xchg
pusha
mov
loopne
or
(bad)
(bad)
mov
sbb
jl
rcl
jns
dec
popf
ret
sahf
inc
jl
addr16
jmp
add
sub
bound
in
dec
arpl
push
inc
pusha
mov
jle
idiv
mov
add
jns
je
mov
sti
cli
dec
sar
sbb
lods
pop
lock
dec
fsubr
lods
call
fidiv
push
mov
or
(bad)
mov
sbb
gs
sti
jmp
xchg
imul
sbb
movs
dec
loopne
adc
icebp
pop
pop
dec
xor
(bad)
jmp
fcom
lods
sub
or
xchg
mov
or
xor
cmp
scas
pop
test
ins
mov
shr
sti
lock
loopne
jo
addr16
jbe
fabs
push
adc
mov
push
movs
pop
movs
test
pop
rep
popa
lods
retf
das
call
hlt
(bad)
(bad)
dec
jl
push
pop
mov
pop
scas
scas
push
fwait
fs
mov
arpl
(bad)
pop
lods
mov
sbb
std
cmp
enter
icebp
fild
mov
outs
pop
outs
aam
call
sub
inc
in
mov
mov
mov
dec
pop
add
jmp
loope
mov
out
jmp
ret
ror
add
mov
cmc
daa
cmp
pop
in
imul
ss
lods
mov
out
mov
mov
(bad)
(bad)
(bad)
call
or
ss
sub
loopne
xlat
mov
adc
push
mov
lock
stos
dec
mov
dec
adc
adc
das
lahf
jmp
(bad)
and
push
cli
jp
ret
sbb
dec
(bad)
push
mov
dec
jbe
repz
jbe
jp
dec
mov
mov
aad
mov
xchg
into
cmp
sub
leave
aas
mov
clc
(bad)
jmp
and
test
mov
push
mov
pushf
sar
(bad)
inc
and
not
mov
and
dec
cmps
xchg
fdivr
dec
cs
lea
(bad)
(bad)
dec
push
mov
(bad)
stc
aad
stos
mov
in
push
mov
imul
imul
in
xchg
ret
push
std
cmps
arpl
pop
mov
sub
stos
push
and
sub
loope
jecxz
pop
cmp
push
xchg
test
jmp
push
out
sbb
mov
push
jb
das
mov
inc
gs
(bad)
(bad)
jmp
add
add
iret
call
sub
jge
pop
mov
mov
clc
(bad)
(bad)
jge
loopne
scas
aaa
add
add
out
inc
inc
retf
retf
jecxz
push
std
pop
and
jl
ret
jp
call
test
(bad)
cmp
dec
push
das
xchg
adc
jg
push
mov
mov
mov
xchg
mov
sbb
loop
sub
(bad)
(bad)
call
dec
ret
fs
ret
or
cld
and
icebp
repnz
fwait
int
pop
popa
and
dec
in
mov
xor
sub
mov
cmp
clc
pushaw
iret
xchg
movs
scas
push
cmp
test
lock
xor
movs
or
push
fnstenv
sahf
dec
sahf
jmp
jmp
add
jmp
jmp
xor
(bad)
pop
dec
jecxz
jmp
test
(bad)
mov
jge
mov
and
jmp
loopne
(bad)
jg
movs
mov
inc
ins
fwait
sub
mov
std
push
fs
adc
or
ins
into
enter
mov
aaa
dec
cli
(bad)
ffreep
retf
cmp
sub
mov
popa
shl
popa
call
dec
cmp
mov
jmp
mov
cwde
sbb
mov
(bad)
call
jb
sbb
pusha
push
ror
in
call
sub
jg
loopne
jp
or
mov
sub
adc
inc
popf
(bad)
(bad)
(bad)
jmp
sar
xchg
in
xor
int3
shl
mov
fisttp
sbb
into
add
iret
imul
loopne
mov
enter
sbb
retf
stos
fcos
retf
jp
das
test
lahf
leave
clc
(bad)
(bad)
dec
dec
clc
fistp
retf
lahf
xor
sub
test
ficomp
(bad)
jmp
mov
or
call
jb
cwde
xor
(bad)
(bad)
(bad)
jmp
add
retf
pop
add
imul
lahf
lahf
test
lock
push
pop
(bad)
out
xchg
dec
pop
pop
sbb
pushf
dec
and
out
ins
dec
dec
cli
(bad)
jmp
fucomi
icebp
lods
jl
stos
add
imul
(bad)
(bad)
push
mov
xchg
dec
and
ins
test
jg
mov
xchg
mov
cmp
adc
and
(bad)
dec
in
jl
jp
retf
push
dec
sbb
std
jecxz
push
data16
out
test
call
pop
push
or
mov
fwait
(bad)
div
call
movs
mov
mov
fs
mov
xor
dec
mov
mov
in
pop
xchg
pop
hlt
(bad)
jmp
inc
mov
(bad)
fsub
sbb
lods
cmp
mov
psubsb
cmps
outs
cli
cmc
add
bound
retf
stos
mov
xor
into
outs
scas
jmp
push
test
fmul
out
(bad)
(bad)
xchg
mov
or
imul
and
enter
xchg
and
(bad)
(bad)
(bad)
call
imul
push
outs
cmp
push
out
out
sub
xchg
call
aam
loope
(bad)
sbb
(bad)
(bad)
(bad)
jmp
jb
(bad)
test
and
jmp
aaa
movs
push
fsubr
mov
clc
pop
lahf
fbstp
imul
push
test
or
jmp
jle
xchg
xor
xchg
jnp
cmps
ds
dec
retf
(bad)
jmp
js
repz
cli
adc
sbb
jb
sub
add
jp
and
aaa
cld
jmp
mov
call
fimul
mov
inc
addr16
(bad)
(bad)
(bad)
(bad)
cmp
movs
jae
or
clc
or
mov
mov
and
xchg
ss
sbb
(bad)
out
push
icebp
fcomp
loopne
adc
mov
imul
nop
cmp
repnz
hlt
xchg
test
ror
sub
out
clc
mov
dec
jle
test
dec
fild
inc
aaa
fld
push
pop
call
movs
ret
mov
aad
stc
adc
loop
inc
call
ret
shr
leave
xor
cmp
nop
(bad)
(bad)
jg
lods
nop
dec
loopne
adc
stos
(bad)
sbb
(bad)
retf
xchg
or
jmp
scas
call
(bad)
(bad)
jmp
pushf
sti
dec
in
out
movs
lods
or
popf
jp
loopne
(bad)
cmovo
and
movs
test
(bad)
(bad)
(bad)
call
mov
sub
pushf
cs
ret
sub
outs
sub
mov
int
call
(bad)
cmp
or
pop
int
mov
cwde
cmp
fxch
xlat
ins
mov
jmp
push
push
push
sub
add
pop
sub
jle
sub
mov
in
pushf
outs
cli
(bad)
jmp
iret
or
cmps
jmp
sti
das
push
mov
sub
push
sub
hlt
(bad)
(bad)
mov
xlat
xor
sti
outs
clc
lock
and
push
dec
mov
push
ds
sub
sub
sub
(bad)
mov
(bad)
mov
mov
inc
das
mulps
scas
pop
pop
cmp
jecxz
(bad)
jmp
(bad)
or
(bad)
shl
sbb
jne
mov
fbstp
(bad)
ins
dec
out
xchg
cmp
dec
mov
ins
bound
(bad)
mov
ror
wbinvd
mov
lock
test
jl
push
jg
jmp
loop
icebp
pop
lea
lock
ins
cmps
sbb
jns
fcomp
(bad)
(bad)
call
test
cmp
dec
scas
out
mov
icebp
xor
fdivp
or
cmp
push
or
jmp
or
js
dec
sub
pop
jmp
js
mov
out
aam
scas
(bad)
call
xchg
xchg
xor
sub
pop
sar
xor
and
stos
(bad)
(bad)
fbld
push
call
jp
jmp
lods
or
enter
(bad)
fld
sub
and
daa
aas
and
push
sti
retf
mov
add
jle
pop
std
jbe
mov
push
sbb
inc
jl
xchg
fwait
scas
jns
dec
xchg
pop
pop
lods
mov
add
mov
fisubr
mov
test
ret
test
(bad)
(bad)
jmp
xchg
sub
mov
in
xchg
sub
mov
inc
es
mov
sahf
ror
(bad)
dec
sub
(bad)
(bad)
(bad)
call
mov
sbb
rcr
jo
and
inc
fsubr
cmp
pop
xor
in
(bad)
(bad)
(bad)
dec
mov
loopne
call
jp
dec
das
xchg
mov
test
lahf
sbb
(bad)
jmp
sbb
(bad)
push
push
adc
mov
arpl
push
dec
mov
fcom
mov
(bad)
fmul
movaps
sub
mov
jge
push
sbb
sub
jb
add
cmps
dec
adc
pushf
lods
arpl
sub
(bad)
(bad)
call
sub
pusha
std
mov
pushf
mov
xor
sahf
cmps
out
sub
(bad)
(bad)
call
in
xor
data16
imul
mov
cmp
out
call
mov
adc
ins
test
add
inc
fstp
(bad)
(bad)
(bad)
(bad)
dec
movs
push
pop
retf
xchg
dec
cmp
jle
or
cmp
jmp
lea
jmp
push
aad
ins
lods
ds
shr
mov
mov
(bad)
(bad)
(bad)
dec
cli
push
call
rcr
stos
loop
clc
in
mov
sub
fcmovbe
mov
mov
test
jnp
jns
outs
inc
pop
sub
jmp
ror
loope
cmps
nop
fneni(8087
cwde
sbb
out
sub
retf
push
sbb
das
jmp
ror
mov
inc
ss
cmp
push
sub
mov
into
lock
(bad)
in
rcr
lock
repz
fld
sbb
dec
clc
add
scas
xor
dec
cli
jle
cmp
out
mov
pop
ss
jmp
xchg
ds
and
test
sbb
mov
outs
cmp
cmps
test
(bad)
dec
mov
pop
sub
pop
inc
mov
(bad)
sahf
cmp
out
cmp
ds
mov
stos
scas
mov
test
add
push
sar
clc
imul
outs
pop
ss
push
fimul
and
(bad)
call
shr
in
cdq
jno
test
(bad)
sub
pop
rol
fist
imul
(bad)
push
shl
ror
pop
cmp
sbb
push
pop
xor
cmp
push
loope
dec
push
(bad)
mov
fst
fwait
sub
mov
mov
retf
push
mov
rol
cmp
sub
add
xchg
add
xchg
sbb
icebp
dec
in
and
mov
in
inc
cld
(bad)
jg
outs
push
lock
cwde
mov
jl
and
lds
retf
fwait
adc
call
add
scas
or
arpl
in
mov
mov
sub
sub
push
sahf
scas
cs
hlt
dec
inc
inc
jge
(bad)
mov
es
jmp
dec
call
stc
inc
sbb
push
fisttp
call
add
pop
(bad)
and
mov
dec
xchg
retf
jb
push
int
push
call
outs
push
mov
retf
icebp
push
imul
clc
ret
mov
cli
push
in
push
dec
sub
adc
mov
sbb
dec
sahf
sbb
adc
jmp
sub
mov
adc
cwde
cli
in
enter
clc
mov
xchg
mov
sbb
(bad)
inc
xchg
out
and
fsub
mov
pop
rcr
jecxz
test
inc
pop
popa
test
jg
add
pop
outs
push
(bad)
cmps
xchg
in
fadd
clc
lods
push
test
iret
lock
je
mov
retf
sahf
sbb
push
pop
repnz
dec
mov
pop
jne
int
sub
(bad)
(bad)
call
in
sub
test
inc
sbb
test
sahf
mov
enter
jg
sub
cwde
inc
enter
(bad)
jmp
ss
(bad)
dec
cli
xor
mov
movs
adc
dec
adc
or
fsubr
(bad)
ins
hlt
jp
xor
mov
sahf
and
jb
or
(bad)
mov
mov
xor
iret
dec
sub
pop
mov
xor
sub
(bad)
(bad)
dec
or
mov
fldenv
sub
mov
jmp
ret
sbb
mov
inc
aas
push
pop
dec
std
(bad)
jle
mov
movs
(bad)
jge
(bad)
adc
adc
(bad)
(bad)
(bad)
dec
sbb
xlat
lea
ds
mov
iret
xor
push
add
sub
(bad)
cmp
call
xchg
mov
ds
out
test
out
fbld
jle
pop
test
ds
push
popa
(bad)
jle
(bad)
lods
in
sti
icebp
xor
stc
(bad)
(bad)
(bad)
dec
jb
dec
adc
mov
xchg
invd
js
fwait
shr
test
retf
mov
mov
push
clc
sub
push
cs
cli
dec
or
(bad)
jg
ins
(bad)
xchg
jge
test
out
xchg
or
mov
es
out
ret
sbb
aad
outs
arpl
add
stos
jp
ins
aaa
sub
in
xchg
(bad)
(bad)
push
sbb
jmp
adc
sbb
mov
in
ds
sbb
test
(bad)
jmp
sbb
psubb
pop
sbb
xchg
into
mov
sub
cld
(bad)
(bad)
dec
sbb
fiadd
movs
cli
ror
and
cmp
stos
cdq
xor
mov
jmp
push
xor
cwde
ret
jmp
dec
lods
pop
loope
jmp
(bad)
dec
mov
mov
pop
push
pushf
adc
stc
jmp
cli
iret
xor
adc
xchg
mov
jmp
or
cmp
push
mov
adc
cwde
and
test
and
call
popf
repnz
test
jbe
call
aaa
out
xchg
fist
push
das
aaa
das
outs
outs
lods
lods
(bad)
(bad)
mov
(bad)
in
mov
in
cs
jnp
hlt
std
scas
in
stos
mov
call
call
mov
cdq
les
leave
and
std
push
mov
jp
mov
xor
pop
pop
pop
push
xchg
mov
outs
clc
out
mov
iret
mov
and
sub
and
lods
in
dec
mov
push
mov
jmp
lock
and
mov
cmp
addr16
(bad)
(bad)
mov
sub
add
inc
dec
and
jno
fdiv
xchg
jecxz
adc
(bad)
int3
(bad)
pop
push
(bad)
(bad)
(bad)
inc
cmp
and
loop
inc
mov
jge
mov
das
cmp
ret
xchg
inc
aaa
push
xor
push
test
mov
mov
std
jno
ret
out
xchg
push
push
jp
cmp
dec
enter
dec
(bad)
(bad)
(bad)
(bad)
push
cmp
adc
pop
pop
dec
mov
and
dec
mov
(bad)
nop
jo
xchg
sub
ja
repz
mov
lods
arpl
std
mov
xor
jae
xor
nop
xchg
pop
sub
pop
into
push
jmp
xchg
cld
loopne
das
sub
pop
sar
add
mov
scas
or
sub
hlt
(bad)
jmp
in
aaa
or
ret
bound
daa
jp
jle
pop
out
mov
jg
(bad)
fistp
xchg
sub
sahf
mov
into
stos
sbb
dec
call
push
call
(bad)
(bad)
(bad)
jmp
jae
stos
or
iret
ins
sbb
xchg
lahf
out
adc
shr
sub
cmp
(bad)
(bad)
(bad)
jmp
repz
sub
or
or
out
out
and
jmp
sub
rcl
adc
jae
and
push
dec
mov
imul
in
shr
std
jmp
xor
mov
ret
adc
pop
shl
fild
or
(bad)
pop
stos
call
(bad)
jmp
pop
retf
mov
cs
dec
pop
int3
sub
daa
ret
ret
(bad)
(bad)
mov
(bad)
pop
lahf
sahf
or
daa
lahf
jle
lods
mov
(bad)
(bad)
(bad)
jmp
(bad)
jns
ins
test
inc
lods
das
mov
pop
out
call
out
mov
(bad)
call
xlat
jp
adc
push
stc
xchg
sub
pop
sti
imul
(bad)
mov
call
cld
adc
add
xchg
lods
xchg
jge
or
push
cmp
mov
sub
sub
cld
push
mov
outs
aaa
stos
xchg
loop
repnz
retf
rcl
push
jl
fistp
or
repz
(bad)
(bad)
jmp
mov
sbb
test
cwde
(bad)
das
cmps
cmp
(bad)
mov
mov
jns
call
push
xor
or
stc
(bad)
sbb
sub
mov
cwde
xchg
rol
bound
mov
dec
cld
(bad)
jmp
xlat
in
scas
repnz
enter
jmp
mov
(bad)
jg
test
cmp
adc
(bad)
test
sbb
jmp
lahf
add
(bad)
in
(bad)
(bad)
dec
stos
push
jge
push
or
mov
addr16
push
cmp
fcomip
push
mov
and
jl
cld
int3
push
stos
inc
mov
cmp
inc
sub
(bad)
(bad)
jmp
jmp
ret
in
or
xor
popf
cmp
cwde
imul
(bad)
(bad)
clc
xlat
mov
(bad)
mov
mov
sbb
push
mov
cmp
mov
sbb
mov
(bad)
call
and
sbb
into
push
pop
mov
sbb
es
in
lock
mov
dec
hlt
sub
jae
fild
xor
pushf
ffree
dec
inc
mov
outs
mov
cmc
mov
add
clc
fucomip
sbb
imul
mov
sub
mov
sub
sbb
xor
dec
call
outs
mov
(bad)
jg
test
rcr
mov
mov
in
cmp
or
(bad)
(bad)
inc
fdivr
leave
fisub
aad
mov
mov
scas
adc
jle
leave
mov
clc
cmps
(bad)
(bad)
(bad)
mov
jle
in
and
cs
mov
int3
pop
fnstenv
adc
and
sbb
mov
js
cld
adc
xor
imul
sub
fdiv
sbb
(bad)
(bad)
call
fwait
xor
dec
xor
popa
ror
mov
es
add
or
ss
int
or
scas
(bad)
les
and
adc
es
loopne
xchg
aam
loopne
ror
repz
mov
cmp
jl
xor
push
ins
shl
jb
cld
xor
or
pop
sub
jmp
mov
sbb
(bad)
push
pop
and
loopne
jmp
mov
pop
or
mov
ret
(bad)
(bad)
(bad)
jnp
fidivr
mov
js
outs
dec
arpl
call
sub
pop
mov
cwde
xor
(bad)
jg
mov
dec
cmp
pusha
pop
dec
cdq
outs
out
push
test
jmp
xchg
imul
lock
jg
dec
dec
mov
clc
or
stc
sub
pop
fst
add
xchg
in
pop
and
mov
mov
leave
jmp
dec
(bad)
push
(bad)
stos
pusha
(bad)
and
mov
push
(bad)
(bad)
jmp
ss
stos
mov
mov
mov
sbb
lods
pop
add
retf
add
inc
bts
pop
call
(bad)
(bad)
jg
push
pop
or
or
inc
cdq
jae
ins
jno
loopne
xchg
(bad)
(bad)
dec
push
and
mov
std
mov
push
fs
in
push
jae
mov
cld
movd
fs
mov
sbb
mov
loopne
sbb
sub
cwde
mov
dec
stos
push
(bad)
icebp
icebp
jmp
dec
push
out
(bad)
(bad)
(bad)
(bad)
inc
repz
and
scas
scas
pushf
jns
push
dec
pop
cdq
cmp
or
cld
push
mov
mov
fsubrp
(bad)
test
data16
cs
inc
dec
mov
test
lahf
daa
xlat
mov
dec
je
jg
xor
cmps
push
mov
(bad)
lock
mov
xlat
pop
retf
pop
(bad)
mov
push
xlat
scas
sbb
pushf
inc
fs
clc
movs
dec
and
mov
fwait
retf
pop
mov
(bad)
jmp
jno
cmps
mov
in
or
pusha
mov
or
int3
repnz
addr16
sbb
in
sub
jnp
lock
pop
out
and
dec
mov
cwde
add
imul
pop
int3
sahf
or
cmp
mov
sub
xor
cmp
cmp
call
shl
psubusb
push
dec
add
mov
xor
lods
outs
ins
lods
div
xchg
(bad)
(bad)
(bad)
jmp
imul
lods
xchg
fistp
imul
cmps
test
xor
(bad)
(bad)
jmp
mov
cdq
xchg
cdq
mov
in
ins
mov
sub
and
adc
mov
imul
leave
retf
fisubr
(bad)
push
stc
ins
ret
imul
loop
dec
in
sbb
add
call
das
or
pop
cli
push
cmps
dec
xchg
imul
ds
movs
pop
and
lods
jno
stos
cmps
ss
adc
jmp
ficom
inc
mov
repz
clc
jmp
(bad)
(bad)
jmp
ret
imul
sbb
(bad)
jbe
mov
jne
fbstp
shl
inc
jle
ja
out
or
(bad)
(bad)
jg
jecxz
jae
adc
cld
cld
leave
enter
iret
jle
shl
(bad)
inc
stos
scas
std
out
mov
lods
mov
dec
mov
mov
xchg
fstp
cmp
call
pop
mov
movs
jmp
outs
leave
(bad)
adc
sub
test
fist
mov
pop
ret
call
push
pop
add
adc
(bad)
(bad)
(bad)
call
sub
test
loop
mov
scas
and
sbb
sub
push
cmp
push
sub
and
cs
mov
lods
jg
adc
lods
and
sbb
xchg
(bad)
dec
xchg
and
das
mov
jecxz
or
xor
rcl
pop
adc
test
mov
lock
lods
(bad)
(bad)
(bad)
jmp
sub
fcmovne
test
and
cmc
xor
outs
xchg
dec
cli
fsubr
mov
xor
jle
xor
std
(bad)
(bad)
inc
cmp
out
sbb
mov
movs
out
sbb
stos
push
and
xchg
jo
(bad)
mov
and
xor
xchg
and
(bad)
mov
xor
neg
jbe
mov
fldcw
and
mov
lods
into
xchg
lock
prefetchw
or
(bad)
(bad)
push
xchg
scas
xchg
and
(bad)
fist
(bad)
daa
lods
or
pop
xchg
xchg
pushf
or
(bad)
outs
push
(bad)
push
xchg
push
jg
dec
(bad)
jmp
mov
fsub
(bad)
call
cmp
(bad)
(bad)
jmp
jmp
fwait
xchg
out
stos
(bad)
loopne
outs
push
mov
ins
fsubr
push
in
cmp
fwait
mov
fidiv
fdivr
and
std
(bad)
push
dec
mov
push
and
cmps
pop
inc
mov
(bad)
(bad)
jmp
ret
push
lahf
pop
icebp
jp
cmp
pop
ss
xor
push
in
or
ja
pop
cwde
sar
rcl
mov
(bad)
jle
loop
jmp
inc
das
ins
cmp
push
rol
and
and
loop
lock
repnz
pop
repz
xchg
sbb
dec
inc
sbb
push
dec
mov
(bad)
push
xor
push
test
stos
jne
test
pop
sbb
pop
fidiv
cmp
outs
hlt
jno
mov
mov
movs
fcmovbe
(bad)
in
fist
push
add
push
jle
jmp
(bad)
inc
pop
nop
cmp
xchg
scas
pop
and
push
lods
leave
add
ror
out
inc
cld
call
jmp
push
jns
das
cli
loopne
dec
cmp
inc
xchg
xchg
movs
(bad)
inc
fs
jb
xor
dec
cmp
nop
mov
(bad)
(bad)
jg
scas
(bad)
das
imul
clc
pop
cmps
lds
stos
mov
mov
loopne
and
xchg
call
pop
lock
mov
(bad)
lahf
sub
mov
fsubr
adc
push
fadd
push
repz
dec
or
mov
and
(bad)
(bad)
(bad)
dec
js
test
pop
hlt
sub
sub
pusha
hlt
and
test
movs
add
clc
add
movs
scas
inc
out
fwait
mov
mov
(bad)
jne
dec
imul
(bad)
(bad)
(bad)
jmp
push
inc
inc
mov
add
retf
scas
adc
add
mov
and
mov
dec
stos
dec
(bad)
into
jp
retf
(bad)
dec
movs
or
sub
pop
(bad)
mov
std
xchg
sub
imul
or
sbb
retf
sbb
icebp
rcl
nop
(bad)
(bad)
mov
xchg
adc
or
adc
or
mov
jb
sti
or
pop
(bad)
(bad)
push
sub
repnz
mov
pop
xor
or
push
loope
(bad)
(bad)
dec
stos
cmps
and
(bad)
sub
xor
xchg
shl
jle
mov
mov
call
jmp
cmc
adc
out
xchg
(bad)
outs
cmps
test
sbb
inc
retf
or
mov
fbld
sub
mov
in
pop
ds
inc
movs
scas
lea
lock
inc
jnp
pusha
mov
mul
sbb
in
jl
ins
sahf
cmc
call
xor
sub
cmps
sub
dec
cdq
dec
outs
test
xchg
cmps
ret
push
leave
out
jo
ret
jle
xchg
pop
add
(bad)
inc
push
pushf
js
push
stos
js
push
mov
(bad)
sub
(bad)
mov
jmp
mov
jmp
sub
fdiv
(bad)
(bad)
dec
ret
lahf
xchg
and
loope
ret
push
inc
sub
push
call
mov
and
jge
sub
ret
arpl
adc
fild
(bad)
(bad)
jmp
mov
in
nop
or
pop
mov
imul
pop
pop
inc
mov
mov
mov
mov
lock
or
jl
fsub
fcmove
mov
dec
lock
sub
xor
stos
dec
and
cli
pop
dec
(bad)
(bad)
call
cmp
add
mov
jge
retf
push
loop
mov
pop
jb
neg
mov
(bad)
(bad)
(bad)
(bad)
fldcw
jae
loop
enter
in
cmp
fwait
aas
xchg
dec
jmp
push
(bad)
adc
mov
sub
and
push
sub
test
adc
push
nop
pop
stos
shl
push
(bad)
(bad)
jg
cld
or
sar
fistp
aas
inc
test
cmp
mov
das
pop
cmc
jne
sub
in
jne
loope
cwde
cmps
retf
xchg
sub
(bad)
(bad)
call
mov
sbb
shr
mov
mov
pop
imul
aaa
pop
push
std
(bad)
dec
stos
repnz
xor
data16
stos
mov
psubsb
push
mov
mov
mov
js
scas
das
cs
leave
int3
cmp
pusha
pop
jl
retf
fisttp
hlt
cmc
cmp
and
or
out
mov
(bad)
std
adc
and
jmp
test
inc
imul
push
popf
hlt
(bad)
(bad)
(bad)
push
enter
sbb
scas
retf
into
(bad)
stos
call
pop
sub
xchg
out
pop
sti
or
(bad)
inc
js
add
sahf
mov
ds
aad
ins
mov
or
test
(bad)
(bad)
jmp
lods
xor
push
push
jle
xlat
imul
(bad)
in
jp
and
fimul
and
scas
adc
inc
fistp
mov
(bad)
(bad)
jmp
jp
repz
scas
or
mov
sub
stos
out
and
in
pop
dec
dec
cmp
iret
push
popf
das
clc
mov
js
outs
cmp
mov
std
pop
and
sub
(bad)
(bad)
(bad)
mov
sub
mov
cwde
xchg
enter
fbstp
aad
push
xchg
call
mov
jmp
call
sub
or
sbb
mov
dec
mov
es
push
inc
mov
(bad)
aad
icebp
ret
mov
sbb
loopne
jp
mov
xchg
or
sbb
ret
cmps
inc
sti
mov
sahf
adc
(bad)
cmp
enter
adc
adc
pop
cmp
mov
push
push
and
(bad)
(bad)
mov
shr
leave
inc
dec
cmps
sub
cmp
pop
xchg
or
and
fucom
mov
retf
xchg
mov
dec
mov
out
and
pushf
sub
mov
mov
(bad)
call
stos
or
cmp
mov
jp
add
fsubrp
in
push
fisub
loop
and
lods
mov
xchg
lods
inc
cmc
call
lea
(bad)
dec
xchg
test
ss
test
sbb
inc
pop
int
test
lds
dec
shl
cmps
mov
sbb
ins
fwait
and
mov
stc
push
mov
(bad)
(bad)
(bad)
in
test
add
or
sub
es
add
cli
inc
inc
cli
std
mov
jge
js
mov
(bad)
(bad)
in
or
xchg
mov
lods
cwde
add
mul
(bad)
(bad)
(bad)
push
mov
xor
sbb
lahf
cmp
add
daa
xchg
jg
(bad)
jmp
mov
sbb
ins
sub
sbb
fs
xchg
cmp
mov
inc
retf
adc
jecxz
idiv
call
mov
fadd
jecxz
ret
mov
xor
inc
jnp
push
jg
push
pop
out
lods
cdq
ins
push
or
cli
sbb
sbb
addr16
movs
mov
stc
push
(bad)
jmp
inc
(bad)
fisubr
pop
mov
lods
pop
out
inc
(bad)
(bad)
dec
push
adc
loopne
mov
stos
in
retf
clc
enter
pop
mov
adc
test
lods
mov
scas
in
push
test
mov
add
jecxz
cmps
in
rcr
pop
pop
jl
(bad)
(bad)
(bad)
inc
nop
clc
retf
mov
cli
pop
sub
sbb
mov
test
ret
jmp
call
gs
fwait
repnz
cmp
add
pop
hlt
sti
stc
push
test
les
push
sub
call
pop
add
pop
jmp
test
or
call
inc
mov
sub
cdq
scas
call
stos
movs
cmp
sub
movs
cli
dec
test
xor
xchg
cmp
dec
enter
(bad)
scas
cwde
xor
in
mov
(bad)
xchg
stc
sti
(bad)
adc
scas
aad
xchg
add
fcmovbe
aaa
rol
and
mov
jl
sbb
jmp
mov
(bad)
jp
and
jns
pop
popa
out
mov
scas
fnsave
jle
jo
cs
lods
(bad)
(bad)
(bad)
inc
lods
push
pop
pop
add
xor
xor
add
fwait
xlat
cmps
mov
cld
(bad)
jl
daa
push
mov
jmp
xor
mov
sub
fisttp
dec
in
mov
push
aad
fdiv
jmp
dec
call
sub
das
aad
push
cld
scas
fwait
jo
pop
pop
add
xchg
gs
xchg
cli
inc
and
sti
aaa
add
push
fisubr
jae
lock
cmp
(bad)
inc
push
or
sbb
stos
cmp
mov
jmp
pusha
cmc
(bad)
(bad)
jmp
out
mov
dec
imul
clc
in
call
add
(bad)
(bad)
(bad)
fbld
imul
retf
stc
cmps
add
push
sub
test
push
xor
jmp
(bad)
(bad)
(bad)
jmp
into
fisub
lea
add
bound
dec
jmp
add
add
add
and
std
call
cmps
pop
pop
pushf
xor
inc
imul
and
inc
(bad)
call
(bad)
pop
sub
test
scas
xchg
sub
mov
imul
sti
test
dec
mov
cli
fcmovne
mov
xor
imul
fisttp
scas
movs
lea
(bad)
(bad)
dec
push
cmc
retf
sbb
jns
xchg
or
sub
cdq
sub
call
push
sahf
sbb
mov
fiadd
call
mov
(bad)
pop
cmp
movs
mov
adc
shr
hlt
popa
and
push
(bad)
shr
stos
mov
outs
leave
push
(bad)
push
add
movs
dec
push
enter
(bad)
(bad)
push
mov
mov
mov
mov
jbe
jl
into
scas
add
(bad)
push
gs
pop
and
mov
push
adc
jbe
int3
xchg
pop
jmp
jns
mov
mov
mov
mov
pop
pop
or
push
std
pop
pop
add
jg
push
push
sub
pop
inc
or
jmp
xchg
jmp
int
std
pop
and
fs
pop
jp
cld
mov
push
dec
mov
mov
in
(bad)
in
out
ja
sub
out
cmp
and
dec
pop
add
in
(bad)
(bad)
(bad)
call
xor
mov
repz
stc
xchg
cdq
test
in
jnp
jmp
mov
aad
icebp
(bad)
fcmovbe
arpl
fs
(bad)
fcomip
mov
push
add
and
rcr
xor
jmp
(bad)
(bad)
(bad)
dec
arpl
inc
das
and
jmp
lock
push
and
sub
cmp
xor
ror
dec
dec
sub
cs
aaa
loopne
ret
push
or
pop
cmp
ror
stos
test
mov
mov
or
mov
hlt
pop
(bad)
jmp
lock
aas
sbb
adc
push
cmp
inc
call
in
xchg
into
add
popf
ret
jne
cli
sbb
enter
sub
adc
mov
(bad)
(bad)
mov
add
fisttp
mov
pop
loope
hlt
xchg
scas
sti
call
jecxz
shl
fcomp
(bad)
mov
mov
jmp
and
cs
dec
mov
sti
pop
jmp
gs
sub
push
jb
js
push
or
cmp
jg
movs
xchg
pop
push
or
call
(bad)
lock
pop
clc
popa
(bad)
(bad)
(bad)
call
pop
cmps
or
xor
test
sbb
or
sti
xchg
stos
aaa
loopne
mov
cld
(bad)
mov
sbb
call
adc
dec
(bad)
inc
xchg
mov
(bad)
ds
cmp
pop
xchg
xlat
fwait
jecxz
mov
loop
std
ins
movs
xchg
pop
jge
bound
js
test
aas
cmps
pop
push
(bad)
(bad)
(bad)
call
(bad)
fisubr
aas
and
(bad)
push
mov
mov
push
mov
dec
shl
jl
enter
dec
adc
push
sbb
fs
pop
mov
test
(bad)
(bad)
call
lds
lahf
cwde
test
cmp
mov
fimul
sahf
pop
jmp
ss
pop
stos
jmp
or
pop
mov
je
pop
adc
xchg
mov
scas
(bad)
lods
(bad)
dec
fdivrp
scas
cli
mov
(bad)
ror
or
cld
dec
ret
ret
push
mov
mov
xor
add
and
fnstenv
jnp
xchg
mov
call
jmp
adc
xchg
and
mov
out
or
ret
mov
(bad)
(bad)
(bad)
cmp
mov
sub
pop
stc
fist
retf
lahf
push
cmps
sub
adc
jp
mov
jmp
jmp
(bad)
mov
add
dec
adc
pop
scas
sub
push
imul
cli
cmp
jbe
call
lock
pop
or
leave
retf
inc
loopne
cmp
pop
or
cmp
mov
leave
fsub
xchg
sub
inc
movs
imul
push
sub
inc
mov
xchg
sahf
jg
repz
mov
(bad)
(bad)
call
test
sub
cli
mov
jge
imul
sbb
sbb
sahf
cmp
cwde
clc
dec
test
scas
add
jnp
and
(bad)
call
or
mov
mov
scas
sub
jge
aad
xor
push
xchg
cmc
pop
stos
call
push
jmp
ds
(bad)
mov
sub
sub
outs
jmp
or
xor
movs
dec
idiv
(bad)
inc
ss
loopne
arpl
(bad)
mov
ret
cmps
inc
mov
ja
pusha
(bad)
call
pusha
or
ins
loop
sub
mov
and
lds
cmp
(bad)
jmp
mov
imul
pop
lds
mov
sar
(bad)
jmp
cwde
or
dec
pop
cld
mov
and
mov
push
mov
jmp
imul
loop
and
xor
mov
ret
cmp
jge
add
inc
dec
aas
(bad)
(bad)
mov
dec
pusha
imul
fcom
sbb
das
enter
cmp
mov
std
mov
or
add
pusha
stos
cmp
out
call
das
inc
(bad)
pop
es
mov
(bad)
jnp
xchg
sub
in
pop
cmp
icebp
std
jp
lods
repnz
cmps
into
sub
push
xor
push
imul
js
out
lods
loopne
lods
sti
ds
adc
mov
xor
sbb
fs
push
in
pop
(bad)
(bad)
(bad)
push
jmp
ins
cli
sub
jg
dec
fisttp
dec
push
imul
imul
add
fsubr
fldcw
in
mov
in
js
in
sub
xor
cwde
js
dec
scas
cmp
pop
add
(bad)
(bad)
push
pslld
jmp
sub
repz
fmul
cli
dec
add
shl
jmp
mov
pop
push
jecxz
retf
cli
and
dec
pop
jmp
sub
inc
clc
mov
or
(bad)
mov
leave
mov
es
mov
jle
in
or
cmps
jmp
sbb
hlt
dec
out
sub
mov
mov
outs
add
outs
mov
movs
mov
inc
cld
(bad)
dec
repnz
mov
call
cmp
clc
(bad)
push
cmps
cs
jg
add
sub
sbb
ret
les
cli
(bad)
jmp
mov
mov
in
push
dec
push
jmp
call
test
push
inc
add
test
cmps
xor
movs
(bad)
iret
xor
cdq
ret
cmp
push
mov
lods
or
sbb
rcl
mov
retf
imul
inc
(bad)
pushf
(bad)
lods
mov
iret
lods
cs
mov
imul
sbb
mov
out
mov
(bad)
jmp
je
loop
mov
push
jo
mov
add
mov
ds
dec
fwait
outs
jmp
imul
adc
icebp
call
mov
push
xchg
mov
push
add
repnz
(bad)
(bad)
jmp
cmps
aas
add
mov
dec
loopne
or
aaa
add
jmp
push
lahf
cmp
nop
jp
ds
lods
sahf
pop
pop
mov
mov
lods
or
pop
int
outs
shr
adc
js
jmp
mov
mov
test
daa
dec
push
jo
and
scas
test
scas
pop
xchg
dec
(bad)
cmc
test
(bad)
call
pushf
dec
cmp
push
stos
lods
in
mov
push
sti
adc
push
adc
(bad)
(bad)
(bad)
fldenv
das
push
ins
inc
xor
xchg
lods
in
sbb
mov
lds
cld
call
pop
xchg
push
fistp
ret
mov
sar
(bad)
jmp
ds
inc
sbb
adc
sbb
mov
jmp
mov
jl
sbb
fnstenv
or
stos
sbb
push
(bad)
(bad)
dec
rcr
aaa
sahf
clc
push
test
mov
pop
jmp
movs
mov
test
jmp
enter
mov
inc
mov
push
cs
out
out
inc
pop
dec
adc
jmp
(bad)
cdq
sti
or
fld
fistp
jmp
out
jmp
cmp
sub
mov
dec
and
das
sbb
jne
es
ins
and
inc
xor
or
mov
push
(bad)
(bad)
(bad)
call
fs
cli
xor
int
sub
stos
sti
jo
adc
cmp
jle
inc
xchg
push
(bad)
(bad)
(bad)
inc
mov
call
lods
lods
cmp
lods
xchg
pop
cs
inc
dec
or
mov
xchg
sub
shl
js
fidiv
scas
aad
jmp
push
or
push
(bad)
(bad)
aas
outs
xchg
ins
jl
mov
cmps
bound
adc
js
xor
jbe
mov
(bad)
(bad)
(bad)
jmp
mov
movs
sub
mov
imul
dec
sahf
mov
scas
test
rol
(bad)
(bad)
lahf
(bad)
jae
jne
inc
nop
sub
cli
shr
mov
loope
enter
popa
add
iret
stc
mov
push
sti
imul
jecxz
xchg
stos
movs
out
stos
pop
test
imul
mov
test
mov
mov
jmp
jg
xchg
push
push
add
cs
add
add
mov
xor
jmp
sub
push
lods
xor
je
xchg
mov
mov
jge
pusha
xor
mov
inc
add
fs
sub
(bad)
(bad)
(bad)
call
mov
mov
sbb
mov
mov
call
inc
sbb
jg
icebp
(bad)
jmp
adc
dec
add
mov
std
pop
xor
in
jmp
test
mov
call
cmp
xor
mov
jne
(bad)
(bad)
push
int3
or
(bad)
push
popf
pushf
movs
fdivr
jmp
mov
(bad)
(bad)
call
adc
xor
adc
pop
out
ins
popf
mov
stos
adc
pop
add
dec
sub
div
movs
or
(bad)
jmp
push
cmps
loope
pop
add
(bad)
std
scas
mov
outs
clc
inc
call
adc
ret
stos
mov
(bad)
(bad)
mov
stos
jge
(bad)
sub
cmps
mov
cld
test
sub
mov
xchg
mov
repz
jmp
sbb
sar
out
cli
scas
call
cmps
mov
ins
out
push
(bad)
mov
outs
(bad)
out
enter
jg
fcomp
call
mov
push
adc
xor
ds
cmps
lea
(bad)
(bad)
(bad)
call
fadd
fsubr
push
ror
sub
mov
stc
test
pushf
es
adc
push
out
sbb
pop
pop
test
xor
scas
repnz
(bad)
(bad)
(bad)
dec
inc
(bad)
cli
hlt
icebp
xchg
sbb
pop
(bad)
ja
jmp
stos
sub
out
out
adc
mov
mov
mov
cmp
mov
pop
enter
cli
cmps
add
cld
push
mov
mov
(bad)
es
mov
clc
out
jp
(bad)
outs
push
lea
pop
mul
test
cmp
xchg
call
std
aad
(bad)
pop
inc
pop
scas
ja
call
push
int3
enter
call
fsub
mov
fcmovnu
or
inc
mov
jmp
or
(bad)
(bad)
dec
add
(bad)
cmp
mov
jnp
cmp
sub
imul
(bad)
jmp
jns
pop
sub
ins
stos
call
mov
les
mov
mov
cmp
pusha
into
stc
(bad)
(bad)
(bad)
call
loop
pop
mov
(bad)
cmps
mov
xchg
pop
or
cmc
std
mov
mov
(bad)
(bad)
dec
and
xchg
bound
sub
xchg
stc
cli
rol
pop
mov
test
repz
call
sub
pop
cld
dec
stc
inc
std
xchg
call
imul
push
or
and
loop
(bad)
(bad)
(bad)
call
cmp
pop
jmp
mov
sub
(bad)
pop
les
mov
or
(bad)
fcomi
call
or
mov
cs
or
jecxz
xchg
repz
test
mov
inc
(bad)
in
(bad)
xor
mov
jbe
jmp
dec
add
mov
mov
or
(bad)
(bad)
call
xchg
add
leave
xor
jp
pop
add
pop
push
mov
les
sub
movs
mov
out
or
mov
xor
mov
push
ret
(bad)
dec
retf
mov
leave
sbb
jno
pusha
push
pop
popf
dec
add
mov
movs
imul
rol
popf
aaa
push
mov
push
and
pop
les
cld
pusha
mov
lock
call
adc
sbb
mov
mov
dec
cmp
std
cmp
push
test
jb
mov
push
pop
dec
shl
sub
call
lods
pop
enter
call
(bad)
jle
inc
sub
out
out
cmps
or
push
mov
out
pop
xchg
test
sbb
or
sub
adc
mov
outs
inc
cmp
and
ins
shl
inc
out
(bad)
cmp
ret
call
inc
jmp
cmc
mov
aad
lock
push
sub
clc
push
test
dec
(bad)
inc
cli
hlt
mov
es
stc
in
mov
call
dec
cli
stos
sub
dec
mov
stos
jmp
ret
pop
std
or
retf
mov
xchg
jns
test
or
adc
(bad)
push
jns
popf
cwde
mov
mov
clc
stos
pop
scas
inc
retf
jmp
push
and
inc
cmp
inc
(bad)
mov
popa
add
push
jl
in
cmp
scas
clc
lds
dec
mov
adc
fisubr
out
movs
and
or
in
add
jmp
lahf
fst
xchg
scas
cmp
in
dec
imul
inc
cs
pop
dec
mov
ss
inc
mov
and
pop
adc
mov
js
imul
stos
sbb
and
cdq
pop
mov
cld
test
jmp
call
jg
das
and
mov
fisubr
sbb
lds
pop
scas
cdq
pop
outs
cmps
sub
cmp
(bad)
jg
out
push
mov
xchg
mov
push
iret
adc
pop
(bad)
jmp
out
jbe
sub
stos
push
les
cmp
push
les
(bad)
push
mov
fmul
jae
int
inc
mov
mov
sub
jmp
xor
cmp
lea
adc
jnp
test
push
scas
sub
stos
pop
mov
imul
xchg
jp
mov
mov
mov
sub
test
sub
adc
(bad)
inc
outs
mov
(bad)
fwait
jg
pop
sub
add
retf
into
inc
retf
(bad)
(bad)
jmp
popf
hlt
add
jmp
add
xchg
mov
adc
sub
cwde
scas
clc
(bad)
dec
inc
mov
mov
or
xchg
xchg
retf
inc
adc
(bad)
jns
leave
int
cmp
jp
pop
test
outs
clc
(bad)
mov
retf
jb
mov
jmp
push
mov
ss
fidivr
(bad)
jmp
imul
into
dec
dec
out
pushf
cs
ins
sahf
xchg
sub
mov
adc
sti
(bad)
ficomp
pop
dec
mov
pop
enter
aas
sahf
mov
jmp
retf
jl
ja
cmp
inc
ficomp
jmp
push
jb
mov
ss
cmp
loop
dec
cmp
sbb
pusha
mov
push
(bad)
(bad)
(bad)
jmp
sub
jae
dec
jb
sbb
test
fiadd
in
cmp
into
sahf
test
ins
push
stos
(bad)
(bad)
(bad)
cmp
lods
xor
cld
cs
dec
push
fadd
sbb
xor
sbb
(bad)
(bad)
jnp
jecxz
mov
mov
shl
(bad)
(bad)
(bad)
mov
das
adc
aad
xor
jmp
push
out
(bad)
mov
mov
pushf
cmp
call
js
in
xchg
mov
loopne
adc
in
retf
cmps
(bad)
stos
dec
push
dec
dec
(bad)
(bad)
call
push
cmp
arpl
push
sahf
ss
clc
jnp
mov
jbe
addr16
sahf
xchg
jmp
(bad)
js
dec
sub
outs
push
movs
dec
xor
fs
sub
(bad)
(bad)
(bad)
dec
(bad)
mov
fimul
jnp
jle
nop
mov
movs
jle
(bad)
pop
es
(bad)
call
shr
push
cwde
and
arpl
sub
push
(bad)
mov
and
mov
or
call
cmps
cwde
dec
or
and
call
pop
test
test
lock
std
pop
inc
xor
cmps
or
sub
adc
jne
lahf
dec
loop
(bad)
(bad)
call
bound
jecxz
jno
xor
inc
adc
xchg
push
sbb
in
or
shr
push
fist
das
test
xchg
jnp
cmp
sub
xchg
aam
aas
scas
cli
fwait
(bad)
push
xchg
das
repnz
std
push
or
xchg
sub
mov
mov
int3
hlt
aaa
dec
mov
pop
mov
dec
(bad)
jmp
(bad)
xor
push
jmp
xlat
test
pop
ins
or
mov
fisub
cmps
lock
jbe
lods
(bad)
jmp
xchg
push
pushf
pusha
ss
sbb
push
fst
jle
push
leave
xchg
xchg
cdq
dec
gs
scas
(bad)
(bad)
(bad)
(bad)
cmp
rcr
pushf
cli
mov
fidiv
or
sahf
pop
mov
mov
(bad)
(bad)
(bad)
call
in
pop
sbb
jmp
int
loopne
sub
neg
pop
stc
mov
add
les
pop
jmp
(bad)
(bad)
(bad)
dec
xchg
xchg
cmp
test
(bad)
or
outs
ss
mov
ds
sahf
stos
pop
or
(bad)
mov
in
clc
cmp
stos
aad
fisub
add
(bad)
dec
push
sahf
loopne
in
stos
repnz
sbb
dec
leave
xor
push
add
cwde
jmp
pop
ja
sbb
clc
(bad)
(bad)
push
pop
cs
sub
in
ins
adc
xor
push
in
xchg
dec
(bad)
push
or
stos
jnp
xchg
push
sbb
mov
mov
mov
jle
adc
stos
pop
mov
gs
lods
sub
mov
dec
adc
jge
sbb
in
iret
(bad)
(bad)
(bad)
inc
sbb
(bad)
cmp
(bad)
retf
mov
jb
mov
pop
cmp
pop
jg
(bad)
(bad)
call
ins
cmp
pusha
pop
mov
movs
fdiv
loope
repnz
sbb
xchg
std
inc
mov
clc
sbb
repz
cmc
sbb
and
mov
dec
iret
rol
mov
sbb
fs
dec
sbb
movs
call
mov
fimul
clc
ins
js
and
add
jg
and
sbb
iret
repnz
es
push
(bad)
(bad)
(bad)
(bad)
fmul
sub
lods
cwde
jle
adc
sbb
mov
mov
or
pop
add
sbb
inc
and
sbb
lahf
mov
daa
xlat
and
rcl
(bad)
(bad)
mov
retf
shl
retf
cld
movs
jbe
pop
dec
scas
hlt
bound
test
mov
and
mov
mov
mov
(bad)
(bad)
(bad)
fcomp
out
mov
mov
jb
mov
enter
test
(bad)
inc
call
je
retf
sub
jecxz
js
sbb
pop
add
pop
add
aad
mov
enter
jmp
fidivr
aas
lahf
cmps
mov
mov
out
stos
fcmovne
jmp
push
(bad)
call
adc
inc
cs
mov
push
jg
add
mov
ss
in
add
(bad)
jnp
(bad)
dec
lods
mov
movs
mov
and
jle
mov
movs
xlat
mov
(bad)
stos
mov
lahf
ja
sub
adc
rcl
and
jne
mov
xor
xchg
(bad)
push
add
mov
movs
in
jns
loop
in
fistp
leave
scas
push
pusha
mov
sub
and
jnp
pop
adc
pop
inc
(bad)
jl
mov
ret
dec
inc
test
inc
ficomp
inc
jge
xchg
sahf
(bad)
push
fdivr
(bad)
(bad)
call
adc
cs
(bad)
dec
sub
in
sbb
xchg
xchg
arpl
shr
inc
adc
scas
push
mov
mov
in
or
mov
fwait
jle
scas
fild
jmp
mov
or
rol
mov
push
cmp
mov
addr16
push
retf
add
(bad)
call
cmp
mov
push
push
ds
stos
or
xor
jp
push
js
(bad)
jg
dec
enter
xchg
mov
stos
ret
sub
cli
(bad)
mov
rcl
das
xor
xchg
cmps
sub
loop
mov
ret
cmp
xor
cmp
call
(bad)
mov
push
mov
xchg
cmp
popf
sub
mov
jmp
and
out
data16
jnp
adc
cmp
das
shl
add
vcmpsd
or
hlt
cmp
pop
inc
test
loopne
sbb
scas
cmp
(bad)
call
jmp
cmps
mov
scas
lea
dec
mov
(bad)
rcr
mov
dec
sar
scas
(bad)
jmp
cmp
fbld
mov
sbb
fwait
or
call
push
and
lds
push
arpl
mov
ret
sub
mov
mov
add
push
jne
lods
int
jmp
retf
(bad)
(bad)
dec
inc
fcomp
retf
xchg
mov
cmp
cmp
push
stc
ins
mov
jmp
fwait
popa
call
mov
fcom
xchg
cs
pop
mov
(bad)
(bad)
dec
pop
sbb
xchg
pop
push
outs
ja
(bad)
lods
bound
in
ror
pushf
mov
call
sbb
sub
push
push
and
dec
and
jb
sbb
xchg
xchg
out
cli
and
pop
(bad)
fcomp
jo
mov
dec
lahf
mov
in
or
mov
hlt
(bad)
(bad)
call
cs
or
add
xlat
inc
js
fisub
out
and
rcl
jg
or
fiadd
push
mov
xor
mov
(bad)
push
lock
in
lahf
into
in
or
in
repnz
push
in
and
or
retf
mov
mov
jne
pop
call
fadd
call
in
or
(bad)
call
call
(bad)
jg
std
or
xchg
mov
mov
test
int3
lock
(bad)
sbb
mov
clc
(bad)
mov
push
imul
dec
xchg
cmp
cmps
dec
mov
data16
cwde
jno
dec
repz
mov
sub
xor
hlt
(bad)
(bad)
(bad)
call
push
shr
sbb
enter
sahf
mov
shl
xchg
jne
jg
(bad)
call
sbb
dec
xor
jmp
sub
push
jmp
jl
aaa
and
sub
mov
int3
aam
mov
push
dec
fwait
jnp
into
ins
(bad)
(bad)
fild
add
call
cdq
in
cmp
jmp
(bad)
out
sub
mov
pop
aam
ins
ret
mov
and
shl
and
jmp
inc
xchg
out
sub
ficomp
pop
add
add
(bad)
(bad)
mov
mov
adc
call
clc
add
(bad)
call
cwde
inc
neg
xchg
jno
push
loop
retf
or
(bad)
(bad)
inc
stos
pop
mov
mov
or
inc
xchg
in
stc
sub
mov
(bad)
jmp
push
pop
imul
push
dec
push
sub
cmp
sti
stos
into
jns
jb
and
pop
call
add
leave
sti
aas
push
or
xor
adc
adc
(bad)
call
jo
addr16
aad
mov
cld
retf
mov
dec
dec
je
sub
mov
mov
cmc
cli
jg
mov
das
push
adc
jno
lahf
cli
call
push
movaps
adc
into
jmp
(bad)
mov
aam
push
sub
mov
xchg
movs
add
call
test
xchg
dec
iret
mov
inc
mov
scas
in
cmps
mov
sti
cmp
add
sar
push
cmp
jb
dec
(bad)
outs
in
push
xlat
lods
cmp
into
xchg
inc
cld
cmp
push
(bad)
(bad)
(bad)
jmp
ss
iret
fidiv
lods
jnp
sub
outs
scas
inc
mov
dec
outs
inc
sub
lock
(bad)
js
repnz
jbe
ins
inc
neg
xchg
sub
lea
xchg
mov
mov
call
sbb
sbb
mov
das
jp
jmp
mov
cmp
mov
jmp
push
jmp
inc
xchg
fadd
imul
test
(bad)
(bad)
(bad)
mov
jle
sbb
cdq
ss
cmp
lock
sbb
jno
sbb
cmp
in
ret
movs
cs
or
push
scas
sub
retf
ins
cld
(bad)
in
sub
jnp
stos
jl
mov
adc
(bad)
lock
sub
arpl
and
and
js
jae
ja
les
sub
(bad)
loop
dec
dec
and
inc
jbe
fild
loope
push
mov
mov
push
je
push
inc
and
mov
cld
std
xabort
ds
pop
mov
and
(bad)
pop
(bad)
clc
data16
in
sub
repnz
es
jmp
pop
inc
and
call
aaa
sahf
fsub
call
mov
lahf
out
jb
push
xor
ret
mov
scas
cli
inc
inc
and
and
jmp
ja
scas
cmps
and
jmp
loope
mov
lock
and
jle
outs
out
inc
ss
outs
out
fnstsw
(bad)
(bad)
js
add
mov
ds
mov
fwait
mov
push
or
add
(bad)
(bad)
fidivr
or
sub
popa
sbb
ffreep
arpl
out
sbb
(bad)
(bad)
jg
scas
cmp
sub
scas
jne
mov
or
xor
adc
fstp
rcr
not
cmps
(bad)
mov
dec
rcl
(bad)
jecxz
sub
xchg
iret
das
scas
out
mov
(bad)
(bad)
dec
outs
fist
rol
dec
aas
mov
sub
loopne
xor
jmp
mov
or
adc
sbb
(bad)
jmp
sub
push
cmp
pushf
adc
push
adc
add
mov
scas
xchg
loop
dec
mov
xlat
(bad)
jmp
jecxz
adc
dec
push
clc
test
add
push
movs
push
pop
adc
sub
jge
call
jp
push
pop
mov
sub
pop
inc
mov
mov
cdq
sub
out
shr
dec
stos
pop
cs
(bad)
(bad)
jmp
cmp
call
(bad)
xor
sub
sbb
pop
or
jmp
push
fdivr
int3
xor
cwde
xchg
(bad)
jmp
imul
stos
cwde
clc
enter
fcomp
test
call
js
sbb
jg
(bad)
(bad)
out
ds
(bad)
in
sub
rcl
xchg
int
mov
out
cdq
int
(bad)
(bad)
(bad)
dec
fist
adc
push
(bad)
cmp
jo
mul
leave
pushf
cmp
cmps
mov
xchg
mov
sub
ja
(bad)
(bad)
pop
scas
adc
hlt
pop
sahf
pop
sub
inc
or
(bad)
sbb
outs
mov
ret
lods
test
lea
adc
(bad)
(bad)
jg
iret
sbb
mov
(bad)
(bad)
(bad)
sub
(bad)
(bad)
sub
mov
mov
daa
mov
or
jmp
loopne
push
iret
retf
push
leave
push
sbb
jo
cli
movs
mov
jp
test
sbb
inc
das
das
or
adc
mov
mov
mov
sbb
(bad)
(bad)
(bad)
inc
repnz
xlat
adc
in
sbb
cmps
mov
fidivr
jmp
mov
(bad)
(bad)
(bad)
mov
aas
out
mov
rcl
sub
pop
mov
cld
lods
pushf
or
sub
jecxz
(bad)
push
mov
fcmovb
aaa
sub
call
test
push
adc
(bad)
(bad)
mov
push
fwait
and
sbb
repnz
cli
cmps
jge
adc
bound
sub
xchg
test
push
cmps
cmps
test
cmps
addr16
leave
out
push
hlt
(bad)
clc
(bad)
call
mov
pop
ins
imul
dec
pop
lods
adc
xchg
and
pop
mov
js
sbb
sub
cmp
mov
sbb
push
mov
pushf
das
xchg
clc
(bad)
(bad)
jmp
cmps
js
fimul
test
fnstcw
dec
lds
or
cli
lds
(bad)
sti
mov
sbb
iret
in
cmp
xor
pop
fs
out
adc
stos
dec
repnz
jecxz
adc
lods
(bad)
(bad)
dec
jb
xchg
mov
std
out
cmp
cmp
adc
cmp
ss
out
dec
add
scas
adc
enter
adc
xchg
mov
loopne
(bad)
sub
fcomip
call
jb
sbb
or
pusha
cmp
or
shl
cmps
inc
jl
dec
call
adc
push
cli
ja
into
mov
scas
das
sbb
ins
or
movs
iret
push
add
call
jmp
out
pop
mov
jmp
mov
push
pop
std
sbb
loope
adc
(bad)
call
cmp
sbb
(bad)
xor
and
call
xor
clc
push
cmps
scas
(bad)
(bad)
push
add
in
daa
mov
cmp
loope
aad
lock
mov
ficomp
(bad)
fsubr
imul
out
xchg
movs
in
or
mov
dec
push
test
dec
xchg
sub
scas
es
mov
shl
mov
ja
test
(bad)
(bad)
push
in
fidivr
mov
(bad)
fistp
daa
ds
sub
ss
(bad)
mov
push
outs
jmp
lea
call
dec
xor
in
in
imul
sub
test
push
mov
retf
lods
push
loope
adc
nop
fstp
mov
stc
mov
mov
or
cmp
(bad)
call
inc
frstor
cmp
push
push
(bad)
jae
xchg
cs
cmp
stos
dec
stos
aaa
std
idiv
retf
mov
outs
mov
fwait
es
pop
loopne
test
(bad)
pop
(bad)
(bad)
(bad)
jmp
test
xchg
jmp
push
call
and
pop
cli
ror
outs
fstp
pop
in
cmp
push
iret
pop
push
and
and
or
xor
lods
std
jg
sub
es
loope
push
data16
(bad)
(bad)
mov
xor
gs
fistp
cdq
push
push
(bad)
call
imul
jnp
cmp
or
call
outs
lahf
mov
fcmovu
inc
outs
sbb
jmp
loop
xchg
fdivr
adc
in
inc
mov
pop
daa
in
jb
mov
jmp
adc
push
sbb
jne
ins
add
push
loope
loopne
scas
in
js
push
sar
mov
les
pop
jecxz
iret
sub
(bad)
(bad)
call
or
xlat
out
scas
clc
pop
sbb
add
mov
or
or
mov
(bad)
(bad)
(bad)
call
pop
out
dec
cs
fidiv
fst
or
sti
stc
xor
lds
(bad)
(bad)
dec
aam
cwde
addr16
sub
or
xchg
or
(bad)
call
repz
sbb
cmc
enter
cmp
xchg
mov
(bad)
(bad)
(bad)
jmp
and
loopne
adc
int
fdiv
fisub
popa
xor
ffreep
or
(bad)
(bad)
dec
inc
push
and
into
cli
imul
and
repz
push
(bad)
push
push
sbb
add
add
xchg
add
dec
mov
pop
in
popa
mov
loop
fadd
sub
setle
outs
addr16
retf
mov
or
clc
(bad)
jmp
dec
cdq
ss
int3
sbb
jmp
dec
or
(bad)
movs
jle
in
cmp
dec
(bad)
jmp
adc
xchg
shl
xchg
push
movs
in
mov
mov
in
(bad)
cld
xchg
push
std
call
lds
xchg
or
sub
or
adc
icebp
mov
push
ins
xchg
dec
add
shl
gs
pop
jg
add
pop
lods
xor
xlat
push
pop
sub
mov
sub
push
jo
out
pop
adc
stos
shr
and
(bad)
(bad)
jmp
jne
stos
xchg
add
pop
fild
dec
cmp
into
stos
push
sbb
mov
and
dec
cs
sbb
push
cld
fst
fnstcw
test
mov
xchg
psubd
mov
jb
not
rol
jmp
jmp
lods
sub
stc
out
retf
and
mov
(bad)
(bad)
(bad)
jmp
scas
pop
xchg
mov
cmc
movs
call
pop
sub
rcr
scas
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
fist
push
and
mov
mov
aam
xor
and
sub
or
bound
add
xor
(bad)
dec
push
mov
jmp
outs
sub
jmp
(bad)
jmp
add
sub
imul
lds
push
cli
mov
jmp
inc
push
(bad)
inc
test
in
out
je
xor
xchg
push
mov
push
(bad)
(bad)
(bad)
jmp
(bad)
fucomi
sub
pop
mov
out
and
mov
loope
retf
inc
rol
fwait
pusha
clc
adc
iret
cmp
fcmovnb
xchg
pop
adc
out
mov
popf
jmp
mov
(bad)
ficomp
xchg
call
lods
leave
inc
add
(bad)
(bad)
(bad)
jge
lods
dec
xor
retf
popf
es
push
dec
pop
in
ins
dec
push
dec
imul
fidivr
mov
xchg
hlt
outs
pop
pusha
jb
xchg
mov
xlat
idiv
(bad)
(bad)
(bad)
(bad)
fisubr
xlat
jmp
adc
push
retf
and
mov
fld
sub
sub
xor
xor
xor
sub
call
jnp
or
push
leave
mov
sbb
(bad)
(bad)
jg
sub
gs
mov
daa
into
in
test
push
adc
clc
dec
add
jns
stc
cmp
in
pop
pushf
jmp
aaa
btc
repz
in
push
(bad)
(bad)
(bad)
inc
pop
nop
out
aas
lods
je
sahf
push
mov
(bad)
sbb
nop
jge
enter
(bad)
cmp
ja
add
xchg
jmp
retf
dec
fmul
lods
dec
dec
inc
(bad)
(bad)
mov
mov
jo
mov
(bad)
jg
(bad)
pushf
sub
ret
dec
cmp
fild
mov
(bad)
(bad)
dec
repz
dec
test
movs
xchg
loope
ds
stos
pop
out
fidivr
es
fldcw
mov
cld
cli
jo
adc
call
jnp
(bad)
shl
stos
in
hlt
pop
icebp
(bad)
inc
add
xchg
and
nop
test
or
(bad)
push
das
inc
jge
push
mov
or
mov
jb
cld
movs
and
xor
push
lahf
hlt
(bad)
mov
out
in
fisub
cmp
aaa
(bad)
shl
clc
sbb
and
inc
mov
jae
test
or
into
push
imul
sub
add
daa
add
jmp
lock
das
sub
xor
sbb
or
xor
loopne
or
cmc
dec
(bad)
(bad)
(bad)
(bad)
(bad)
sub
(bad)
iret
scas
into
jo
je
scas
jecxz
iret
mov
icebp
test
and
pop
fwait
cmp
(bad)
(bad)
(bad)
dec
xchg
mov
mov
mov
mov
xlat
iret
ficom
mov
or
shl
in
clc
stos
mov
xchg
cmps
add
call
(bad)
(bad)
fnstenv
jbe
sub
xlat
mov
inc
scas
jp
inc
mov
call
inc
xor
sub
push
xor
(bad)
(bad)
(bad)
jmp
push
jmp
fs
movs
sbb
std
inc
cli
ins
cwde
adc
mov
icebp
xor
or
loopne
push
ss
fcmovnu
mov
sub
ret
lea
ret
ret
clc
fwait
aad
jmp
push
mov
sub
xchg
mov
jmp
call
(bad)
(bad)
jg
mov
mov
sbb
push
ret
rep
add
jnp
fiadd
arpl
mov
(bad)
mov
pop
sub
cmp
stos
shl
jmpw
(bad)
(bad)
(bad)
mov
scas
cmp
cs
stos
mov
adc
inc
(bad)
das
xchg
mov
addr16
dec
inc
inc
leave
lods
jb
(bad)
(bad)
call
fs
mov
in
jmp
cmp
shr
push
(bad)
(bad)
inc
mov
push
or
mul
xchg
push
outs
iret
push
cmp
enter
pop
mov
or
(bad)
(bad)
mov
sub
stc
or
mov
and
test
(bad)
fcomip
dec
sbb
adc
cmp
pop
in
iret
fcomp
pop
pop
enter
cmp
or
xor
jecxz
push
or
pop
fimul
bound
ins
sub
or
test
pop
and
repnz
mov
pop
mov
pop
and
dec
pop
fwait
leave
lods
repnz
dec
rep
(bad)
(bad)
dec
(bad)
retf
pop
push
mov
outs
enter
popa
test
mov
mov
fimul
retf
std
xlat
movs
cmc
push
jg
(bad)
(bad)
jmp
imul
fisttp
pop
push
xor
jmp
ret
mov
in
or
xor
rcr
pop
cwde
jnp
cld
jg
(bad)
call
xor
push
in
pop
sub
out
mov
loopne
call
test
call
stc
mov
and
mov
hlt
fucomi
stos
jecxz
xchg
add
test
test
pushf
(bad)
(bad)
(bad)
jmp
fdiv
mov
add
out
fisttp
mov
dec
jmp
bnd
(bad)
jmp
sbb
stos
std
inc
test
stos
push
xor
mov
int
ror
pop
retf
sub
mov
add
test
or
call
(bad)
call
add
push
cmps
sahf
xor
xchg
and
in
pop
repz
push
xchg
(bad)
(bad)
(bad)
call
cwde
stos
stos
sbb
fcom
call
(bad)
outs
adc
in
retf
mov
mov
push
xor
out
and
dec
(bad)
icebp
(bad)
jmp
cld
scas
in
pop
lahf
or
fldenv
xchg
stos
mov
xor
(bad)
call
idiv
int3
clc
mov
jmp
xchg
mov
mov
cmc
lods
mov
(bad)
mov
or
std
and
xchg
sub
sbb
iret
(bad)
sar
add
dec
mov
push
bound
imul
sbb
arpl
aam
mov
lods
xchg
clc
push
(bad)
(bad)
(bad)
call
retf
xchg
jmp
jno
cmps
mov
dec
cli
mov
jmp
push
add
(bad)
mov
xchg
loopne
fwait
xchg
mov
scas
cmp
cmp
ds
xlat
inc
xchg
(bad)
push
imul
cmp
mov
test
dec
adc
sub
jae
xchg
cmp
(bad)
dec
fbld
mov
in
xor
jmp
(bad)
mul
enter
dec
hlt
popf
cmp
or
test
enter
add
outs
mov
data16
call
movs
xchg
sub
rcr
iret
(bad)
sub
fsubr
cmps
sub
fisubr
mov
add
sti
cmp
imul
or
(bad)
(bad)
(bad)
mov
add
xor
pop
stos
leave
repz
mov
push
lods
adc
clc
cld
pop
ins
jmp
add
(bad)
sbb
clc
push
scas
addr16
mov
movs
mov
cld
(bad)
jmp
push
(bad)
pop
pop
stos
movs
ret
scas
xor
(bad)
pop
jnp
sub
push
(bad)
jg
dec
cmp
and
mov
popa
sub
std
jmp
scas
or
mov
sbb
mov
jg
xlat
mov
js
jmp
fild
fcmovu
lock
push
add
jmp
add
into
xchg
push
and
xor
mov
push
jg
loope
call
fucom
sub
cdq
and
lods
je
(bad)
aad
cld
(bad)
(bad)
jmp
push
sbb
dec
and
repnz
jne
outs
and
mov
push
jns
jg
gs
mov
into
xchg
dec
test
(bad)
(bad)
(bad)
mov
cmps
aas
mov
sbb
add
test
scas
cmp
jge
or
pop
jg
repz
dec
in
mov
jmp
add
mov
jno
mov
in
shl
out
push
(bad)
(bad)
(bad)
(bad)
cli
nop
cmp
in
scas
(bad)
sub
mov
in
imul
call
shr
loope
mov
repnz
(bad)
adc
pop
fld
(bad)
(bad)
mov
sti
sub
dec
icebp
scas
pop
cs
rcl
jp
dec
adc
cmp
fcomi
ret
mov
out
ficomp
push
ss
lds
jmp
ja
add
sub
test
arpl
xchg
mov
or
mov
mov
cs
jno
fwait
jbe
mov
xchg
test
or
es
ror
jl
inc
in
sbb
dec
push
inc
add
mov
pop
xchg
jno
xor
test
mov
push
std
(bad)
dec
cld
movs
adc
or
inc
inc
dec
cs
dec
jns
adc
(bad)
jmp
rcr
add
cmp
jmp
(bad)
jmp
sbb
dec
mov
jge
lea
cmp
(bad)
push
mov
in
ins
call
scas
dec
popa
pop
ds
sub
cmps
rcl
jmp
int3
fsubr
push
mov
add
jmp
jb
sub
mov
sahf
push
xor
sub
add
call
pop
or
or
xor
cmp
js
cmps
shr
jg
(bad)
call
add
scas
sub
daa
cli
push
mov
mov
or
xchg
jp
call
mov
fimul
rol
sti
fisttp
test
and
xchg
push
arpl
leave
adc
sub
leave
into
mov
push
cs
push
aas
std
lods
test
push
inc
mov
mov
pop
sahf
sub
div
dec
sahf
add
inc
fimul
pop
sar
mov
rep
test
(bad)
(bad)
(bad)
jmp
lock
push
icebp
pop
jbe
fst
push
sub
inc
mov
pushf
jnp
mov
leave
ret
xchg
bound
adc
setb
mov
cmp
ins
mov
js
mov
outs
jg
scas
pop
lods
or
(bad)
dec
lock
retf
nop
mov
or
mov
icebp
mov
call
call
leave
test
jo
dec
call
cmps
and
mov
icebp
mov
mov
jge
test
inc
cmp
mov
(bad)
push
test
push
xchg
push
imul
ss
cwde
bound
(bad)
jg
mov
scas
fldenv
add
(bad)
neg
ja
outs
test
jmp
push
mov
cmps
mov
sub
sub
(bad)
(bad)
call
call
fisttp
lock
mov
push
xor
retf
mov
xchg
add
cmps
mov
lock
sub
push
jmp
sub
lods
fcmove
xlat
sbb
dec
movs
aam
sub
sub
dec
test
(bad)
dec
(bad)
jmp
lds
std
in
or
(bad)
cli
jmp
sar
jl
lods
ds
daa
clc
idiv
cmp
rcr
call
(bad)
test
ret
dec
xchg
pop
jno
into
cmps
push
push
adc
xchg
mov
or
(bad)
cmp
mov
pop
movs
mov
nop
xor
ret
cmp
(bad)
jp
(bad)
(bad)
dec
mov
mov
retf
out
sub
xchg
cmp
out
addr16
sub
and
fistp
shl
cld
(bad)
(bad)
mov
movs
test
or
mov
sbb
out
mov
leave
(bad)
jmp
dec
call
push
xchg
(bad)
std
jp
mov
bound
add
lods
fidiv
(bad)
(bad)
(bad)
push
aas
xchg
repnz
std
test
pop
daa
inc
push
fisub
retf
jns
test
or
(bad)
(bad)
jmp
std
das
mov
sar
stos
stc
jno
inc
jno
cmps
mov
sbb
(bad)
inc
fisttp
fsubr
scas
call
ins
inc
je
mov
loope
movs
push
(bad)
mov
repnz
push
xor
mov
jno
std
pop
pop
inc
mov
(bad)
jle
scas
or
call
cmp
fcomp
bound
or
(bad)
inc
(bad)
aad
cld
jle
hlt
mov
das
and
mov
out
out
(bad)
(bad)
(bad)
push
cmp
outs
mov
jo
mov
xor
hlt
daa
jbe
sbb
call
movs
sub
xchg
and
ffreep
rcl
mov
jmp
outs
xchg
(bad)
(bad)
call
test
arpl
mov
jle
cmp
pushf
aam
or
std
mov
jmp
or
jo
mov
cmps
add
(bad)
(bad)
jg
mov
outs
jmp
nop
sbb
pop
push
sbb
mov
add
(bad)
(bad)
(bad)
fist
push
lods
ins
cmp
lock
jle
jb
mov
sub
jnp
int3
mov
cmp
mov
jns
or
jnp
stos
pop
cmps
aaa
scas
stos
sub
or
out
mov
adc
call
push
call
sahf
mov
lods
cmp
hlt
mov
or
add
mov
outs
movs
loope
cmp
mov
movs
sahf
or
sub
(bad)
and
mov
outs
(bad)
cmp
retf
ins
inc
mov
cmp
cli
jg
fiadd
sub
jl
fcmovnu
pop
sbb
or
lods
jp
sbb
jmp
dec
pop
cmp
dec
mov
sub
pop
es
sub
lock
(bad)
mov
stos
or
ss
imul
ja
(bad)
jmp
jae
jmp
jne
adc
in
sbb
bound
(bad)
(bad)
dec
push
ins
or
or
sbb
ret
dec
lahf
dec
js
(bad)
call
sbb
ss
add
retf
or
cdq
mov
or
inc
call
jge
imul
adc
icebp
(bad)
sub
gs
xchg
in
es
mov
mov
lahf
outs
pop
mov
outs
mov
or
std
inc
loop
call
mov
jmp
test
ret
jecxz
(bad)
(bad)
cmp
call
sub
lahf
test
and
adc
xchg
xchg
sar
mov
(bad)
(bad)
(bad)
jmp
xchg
push
jecxz
in
iret
call
mov
lds
jmp
dec
push
inc
in
fbld
push
cmp
(bad)
cmp
sbb
out
pop
je
jge
jb
cmps
(bad)
jmp
sub
cmps
mov
(bad)
(bad)
(bad)
in
call
dec
stc
xlat
test
cmp
push
outs
mov
add
imul
(bad)
jmp
test
mov
or
out
and
int3
rcr
div
(bad)
call
out
loop
sahf
cdq
xchg
stos
mov
test
inc
(bad)
repz
lahf
mov
(bad)
(bad)
fbld
cmp
ror
call
repnz
arpl
(bad)
call
test
add
cs
fldcw
cmp
jg
pop
fldcw
ds
fstp
adc
(bad)
inc
fstp
dec
sub
retf
fidiv
add
inc
data16
mov
jmp
mov
mov
sbb
mov
and
xchg
(bad)
fisttp
sbb
in
cdq
jb
scas
retf
pop
jmp
adc
out
scas
jp
cld
jmp
push
and
sti
sub
out
xchg
movs
adc
and
cmp
or
(bad)
(bad)
jg
mov
pop
mov
jge
imul
std
retf
push
cmp
fistp
mov
sti
pushf
enter
ror
sbb
xchg
mov
sbb
push
and
(bad)
jmp
add
cmp
sahf
test
bnd
mov
adc
je
std
or
mov
add
(bad)
orps
push
add
pop
push
cli
scas
push
sbb
cmp
mov
ins
hlt
sub
(bad)
mov
cwde
(bad)
stos
std
dec
mov
sbb
mov
jmp
jmp
jmp
add
das
pop
jp
xor
and
or
scas
adc
ins
fidivr
aam
daa
sub
inc
test
pusha
fisub
add
mov
add
lahf
add
seta
icebp
adc
fcomip
sub
mov
push
inc
dec
mov
or
jg
loopne
jmp
sbb
es
cmps
push
loop
dec
mov
mov
lock
mov
retf
retf
sar
fsubp
adc
call
mov
enter
dec
push
sub
cld
add
dec
adc
pop
sbb
push
fmul
(bad)
(bad)
jmp
push
mov
mov
pushf
aad
repz
fisub
mov
jge
mov
cmp
adc
and
jmp
mov
inc
mov
(bad)
dec
mov
sti
xor
xchg
cli
pop
inc
stos
mov
jp
adc
(bad)
mov
or
mov
mov
lock
(bad)
(bad)
(bad)
push
sub
call
shl
add
pop
sbb
cli
jb
mov
jecxz
lahf
sub
inc
repz
rcl
popa
pop
pop
push
arpl
ins
adc
or
mov
push
imul
retf
imul
cs
xchg
mov
adc
jne
(bad)
(bad)
(bad)
jmp
(bad)
mov
add
mov
loop
jecxz
lea
(bad)
repz
xor
call
(bad)
(bad)
(bad)
jmp
adc
call
or
test
test
adc
in
inc
mov
lea
(bad)
(bad)
js
push
jg
sub
add
lahf
jne
test
add
ins
cmp
clc
ja
adc
aam
lods
mov
lods
push
retf
call
add
mov
(bad)
aam
call
clc
mov
in
sbb
loop
and
movs
fld
sbb
into
adc
sub
mov
int3
std
cmc
and
test
test
repz
das
loop
jg
(bad)
(bad)
(bad)
(bad)
fld
jns
or
sub
sbb
std
or
pop
rol
jg
jecxz
leave
xor
push
push
inc
fsubr
loope
test
mov
cli
pop
mov
(bad)
jg
dec
push
stos
sbb
sbb
xor
movs
xor
loop
(bad)
dec
mov
xor
(bad)
fucom
loop
xchg
push
bound
fcomp
push
out
jg
jg
mov
inc
shl
repnz
popa
lock
fwait
lods
jle
push
pusha
movs
jno
dec
stc
(bad)
(bad)
(bad)
(bad)
jge
pop
imul
mov
pop
jmp
xor
cmps
cmc
mov
mov
mov
adc
cld
cmp
push
arpl
jno
jecxz
(bad)
(bad)
(bad)
out
jo
mov
sbb
shl
jns
add
xor
jmp
pop
add
mov
dec
loop
fisub
adc
ret
cmc
mov
(bad)
(bad)
les
push
mov
jmp
(bad)
jae
out
jl
sub
or
and
(bad)
mov
ror
mov
mov
ret
addr16
popa
xchg
mov
test
pcmpgtb
cmp
out
cmps
xor
or
call
(bad)
mov
jno
cmp
mov
jns
lock
sbb
xor
sahf
push
or
(bad)
(bad)
mov
fsubrp
gs
sub
cli
arpl
pop
rcr
(bad)
stos
lea
jo
stos
(bad)
dec
fisttp
xor
sub
pop
clc
ror
icebp
popa
stos
sar
or
pusha
and
(bad)
(bad)
(bad)
fcom
add
xchg
pop
lds
scas
xlat
call
sbb
push
mov
xchg
mov
(bad)
jmp
(bad)
ror
clc
jns
ins
push
in
cwde
cmp
mov
push
sbb
mov
int
(bad)
(bad)
inc
sti
push
sub
iret
test
mov
jmp
pop
mov
imul
jg
and
jmp
sub
push
cdq
pusha
out
fcomp
sahf
mov
mov
(bad)
(bad)
(bad)
push
pop
adc
ins
data16
ins
dec
cdq
je
imul
add
mov
sub
mov
std
mov
mov
(bad)
adc
xor
mov
or
(bad)
jmp
mov
test
inc
clc
sub
jnp
adc
fidiv
xchg
dec
cld
call
mov
fucomip
ins
stos
mov
iret
jmp
lock
pusha
call
xchg
sub
push
jmp
jmp
mov
mov
cld
(bad)
jmp
setns
ret
or
mov
mov
scas
cld
add
jmp
pop
aas
shr
pop
stos
sahf
sub
xchg
sub
cmp
xchg
mov
inc
sbb
shl
adc
out
sub
into
dec
loopne
jmp
jle
mov
outs
adc
mov
ficomp
adc
(bad)
(bad)
(bad)
mov
and
sar
mov
xor
test
fwait
mov
jmp
adc
xor
je
xchg
sub
xor
jg
call
sub
(bad)
cmp
mov
mov
jb
sahf
das
jo
(bad)
(bad)
(bad)
(bad)
ds
jo
call
ficom
xchg
and
arpl
movs
jmp
lods
pop
cmp
sub
or
(bad)
jmp
loop
out
loope
mov
mov
sbb
mov
retf
das
xchg
push
es
inc
mov
(bad)
jg
outs
scas
jo
mov
ja
repnz
es
das
or
imul
(bad)
(bad)
(bad)
jmp
xchg
mov
jmp
push
xchg
out
fdiv
and
or
mov
push
push
inc
(bad)
(bad)
jmp
xor
inc
call
or
mov
stos
push
mov
dec
sub
xor
and
ins
(bad)
stc
mov
mov
sbb
stos
(bad)
call
fisub
sub
js
mov
pop
ret
stos
pop
(bad)
(bad)
(bad)
inc
fisub
test
cmps
push
pop
inc
call
fidivr
frstor
(bad)
(bad)
std
push
and
push
pushf
sub
dec
and
push
mov
idiv
mov
sbb
cmp
fxrstor
sahf
scas
in
dec
xchg
mov
sub
(bad)
pop
sub
rcr
mov
and
mov
push
jo
xlat
inc
or
loopne
pop
stos
in
fnstsw
(bad)
(bad)
out
clc
in
cmps
sub
lahf
push
loop
clc
jbe
mov
loope
sbb
ins
sub
mov
add
xor
les
ja
jmp
mov
movs
sbb
or
rol
inc
cld
jmp
into
add
shl
xchg
out
mov
mov
(bad)
(bad)
(bad)
call
leave
loop
test
adc
adc
mov
les
sbb
xchg
adc
pop
pop
cmp
nop
(bad)
(bad)
fisttp
adc
jg
add
push
cwde
neg
ud2
mov
popf
sbb
adc
pop
test
stos
iret
arpl
mov
(bad)
(bad)
mov
icebp
pinsrw
aaa
jb
sahf
repz
add
fdivr
push
cmp
sub
dec
dec
jecxz
movs
(bad)
xchg
push
lock
dec
pusha
pop
test
mov
mov
sbb
clc
aam
test
cmp
or
fsubr
xchg
sub
jp
add
std
dec
mov
cs
mov
cmps
push
jmp
ficomp
xor
aaa
and
(bad)
call
call
pop
clc
fwait
cwde
pop
jp
sub
hlt
xchg
jo
xchg
cs
mov
scas
cli
outs
(bad)
leave
lods
mov
lds
sub
lahf
and
clc
jg
and
daa
mov
std
stc
shl
test
push
inc
pushf
ds
push
jo
pop
pop
retf
hlt
stos
cmp
(bad)
(bad)
(bad)
f2xm1
stos
mov
call
cmp
cmp
ins
test
xlat
loopne
xlat
(bad)
push
jmp
mov
adc
movs
ror
fdiv
(bad)
(bad)
inc
icebp
cmp
push
daa
cli
retf
js
shl
retf
add
xor
push
stos
xlat
mov
dec
and
dec
(bad)
jmp
popf
mov
ja
(bad)
call
jno
outs
cmc
in
push
sar
xor
xor
dec
adc
int
arpl
(bad)
(bad)
(bad)
call
or
pop
fs
sbb
dec
jmp
popa
and
sub
(bad)
inc
cmc
lods
mov
leave
in
pushf
retf
cmp
cli
shl
std
pop
mov
iret
or
mov
fdivrp
inc
sub
push
add
cmp
jno
ffreep
imul
(bad)
jmp
dec
(bad)
(bad)
(bad)
jmp
call
mov
in
ficom
call
cmp
bound
mov
dec
dec
inc
mov
arpl
pop
dec
(bad)
mov
add
inc
sbb
pop
sti
ror
dec
sub
(bad)
mov
in
ja
push
call
repnz
cmp
leave
in
cmp
(bad)
(bad)
(bad)
jmp
jbe
xchg
jmp
lods
mov
hlt
mov
aam
adc
enter
dec
out
xor
(bad)
(bad)
(bad)
call
and
pop
out
cli
push
or
push
jmp
xchg
(bad)
pop
pusha
sbb
scas
iret
movhps
(bad)
(bad)
mov
scas
repz
mov
jmp
mov
pop
fsub
add
jg
test
dec
adc
test
(bad)
mov
aad
(bad)
xchg
pop
and
xchg
movs
test
cmc
popa
push
inc
mov
mov
cmps
lods
mov
(bad)
(bad)
dec
in
stc
ss
and
ds
cmc
mov
out
or
adc
cmp
rol
xor
jb
inc
(bad)
(bad)
(bad)
jg
js
mov
pop
pop
ds
push
ret
(bad)
push
and
sti
adc
(bad)
(bad)
push
xor
ror
or
or
and
ja
cmp
ja
cmps
push
ret
and
cli
stos
dec
and
and
in
popa
ss
and
mov
mov
std
por
scas
xchg
dec
int
scas
es
dec
mov
xchg
adc
rcl
psrld
(bad)
retf
mov
jb
(bad)
(bad)
call
and
scas
(bad)
push
sub
add
mov
sub
(bad)
pop
scas
mov
(bad)
(bad)
call
call
jb
das
xchg
rcr
and
int
mov
or
jmp
ror
pusha
inc
dec
jno
pop
mov
(bad)
dec
push
push
or
adc
bound
push
stos
lea
add
icebp
push
xor
add
xor
scas
inc
ja
pop
xchg
call
call
cmp
mov
mov
fdivr
(bad)
(bad)
(bad)
out
imul
inc
stos
loop
aaa
outs
fsqrt
adc
jmp
mov
xor
adc
adc
call
cwde
mov
(bad)
(bad)
call
jmp
inc
fwait
push
loopne
ins
data16
sbb
addr16
fcmovu
mov
(bad)
out
clc
dec
iret
mov
push
bound
push
jle
push
enter
call
es
(bad)
(bad)
cmp
cld
sub
cwde
js
sub
pop
imul
mov
jmp
loope
sub
int3
jae
push
cmp
stos
imul
push
(bad)
jg
or
in
mov
cmps
jnp
in
loopne
pop
icebp
(bad)
jle
jle
pop
das
jbe
mov
in
mov
xchg
mov
fist
(bad)
(bad)
(bad)
jmp
jmp
cmp
mov
mov
clc
xor
xor
(bad)
(bad)
(bad)
call
sub
mov
imul
mov
xchg
pop
mov
shl
(bad)
jmp
aad
adc
push
aad
(bad)
xchg
mov
jae
mov
(bad)
ins
fdiv
or
(bad)
bswap
inc
push
mov
jmp
je
sub
cmp
adc
sahf
sub
pop
mov
pop
dec
stos
std
cmp
out
clc
dec
mov
inc
out
lea
cmp
sar
sbb
(bad)
(bad)
(bad)
(bad)
mov
std
cs
lods
ins
mov
inc
mov
pop
jge
lahf
call
sub
ss
jmp
(bad)
test
leave
ret
popa
mov
(bad)
jmp
das
ret
mov
bswap
scas
daa
xor
test
jl
pop
hlt
(bad)
push
mov
repz
scas
mov
bound
and
(bad)
(bad)
call
mov
adc
push
xor
sub
xor
(bad)
mov
(bad)
(bad)
(bad)
jg
movs
sub
movs
in
adc
xchg
jg
lods
in
or
rcr
dec
imul
(bad)
(bad)
call
js
test
xlat
sar
jl
lahf
pushf
out
movs
cmp
icebp
enter
xchg
(bad)
(bad)
jmp
push
push
dec
sub
ss
stos
sbb
xchg
ins
pop
(bad)
loopne
sbb
fimul
sub
retf
push
sub
lods
(bad)
(bad)
dec
outs
cmp
adc
ins
pop
adc
and
stos
dec
out
call
xchg
scas
in
push
lds
fwait
pop
sub
(bad)
jmp
call
jp
imul
loopne
ds
(bad)
(bad)
(bad)
jg
xor
xchg
movs
sub
es
popa
sbb
in
push
fwait
call
add
inc
adc
scas
jno
jg
inc
cmp
stos
push
dec
sub
loop
(bad)
std
or
dec
imul
imul
call
stos
pusha
mov
pop
add
cwde
test
or
(bad)
(bad)
fbld
retf
cli
fnstsw
mov
or
mov
iret
movs
mov
push
arpl
add
push
push
jecxz
std
retf
in
in
and
dec
pop
inc
loop
push
das
cmps
push
les
cmp
and
sti
(bad)
call
data16
adc
jmp
xchg
jbe
pop
sub
icebp
dec
(bad)
(bad)
(bad)
jmp
mov
and
adc
jl
adc
cwde
hlt
xchg
push
aam
add
(bad)
jmp
inc
mov
dec
sbb
(bad)
retf
or
push
cs
(bad)
inc
jnp
arpl
into
cs
call
jle
and
out
(bad)
(bad)
jg
add
in
or
loopne
jmp
dec
in
or
aaa
add
cli
jne
xor
ds
add
pop
mov
rol
jmp
pushf
clc
inc
pop
sti
pop
mov
mov
jl
call
or
ret
loop
jbe
int3
cmp
xchg
pop
ds
jp
add
stc
lea
stc
sbb
(bad)
inc
ins
mov
jnp
mov
mov
dec
mov
push
stos
popf
xchg
test
push
out
js
ss
inc
scas
mov
imul
mov
mov
push
outs
mov
add
sub
fimul
pop
popa
loopne
(bad)
aas
iret
push
sbb
(bad)
push
xor
test
ins
stos
sbb
or
xchg
ins
es
cmc
mov
call
pop
mov
scas
mov
sbb
jecxz
loop
je
mov
iret
arpl
lods
jg
(bad)
(bad)
mov
scas
jp
shl
lods
xor
fiadd
mov
pop
lock
(bad)
inc
push
mov
jmp
fistp
leave
mov
retf
clc
or
sbb
cmps
mov
mov
or
pop
test
(bad)
jg
lock
retf
pop
mov
nop
sub
nop
sub
mov
push
(bad)
(bad)
(bad)
(bad)
std
push
lods
jbe
cdq
in
push
inc
test
xchg
dec
std
stos
mov
jecxz
xor
xor
jmp
loop
mov
dec
sbb
(bad)
(bad)
(bad)
mov
mov
mov
push
pop
scas
add
enter
lods
ror
jl
call
rcr
xchg
retf
dec
inc
xchg
cmp
lods
ins
jno
sub
cld
pop
xchg
mov
out
lods
inc
cmp
cmp
push
pusha
mov
adc
(bad)
jmp
mov
test
adc
pop
cmp
cmp
jecxz
mov
sub
pop
inc
mov
jnp
std
push
sbb
inc
ret
xchg
iret
push
push
cmp
mov
mov
call
js
push
int3
adc
pop
mov
jmp
push
pop
ins
pop
(bad)
(bad)
(bad)
(bad)
fstp
and
dec
jmp
dec
or
jle
sub
cwde
sub
shl
pushf
xor
mov
mov
mov
xchg
(bad)
push
imul
mov
sti
jl
inc
(bad)
(bad)
(bad)
cmp
enter
xor
int3
pop
jbe
scas
jbe
out
mov
out
js
test
xchg
(bad)
(bad)
(bad)
call
sub
loop
xor
and
ret
and
aaa
shl
xchg
inc
(bad)
call
loopne
xor
cmp
outs
lods
call
iret
test
mov
loop
(bad)
push
add
lods
lahf
test
inc
mov
stos
imul
cmp
pop
pop
test
(bad)
stos
imul
jg
shl
adc
jp
sbb
xchg
xchg
xchg
stos
hlt
mul
(bad)
(bad)
(bad)
jmp
xchg
and
sahf
fstp
or
aas
pop
cmps
mov
dec
cld
lods
iret
xlat
dec
ficom
(bad)
stos
add
sbb
pushf
sub
call
sahf
mul
shl
xchg
jge
test
ins
lahf
pop
mov
jle
sbb
out
cmc
pop
jae
jl
pop
(bad)
adc
or
in
inc
cmp
call
or
mov
push
inc
mov
cmp
arpl
lock
dec
jl
retf
jb
(bad)
sbb
push
popf
call
pop
add
cmp
xchg
shl
dec
gs
jo
sbb
aam
(bad)
(bad)
jg
test
adc
xor
xchg
pop
push
jl
(bad)
push
jle
cmp
or
mov
jmp
dec
sub
lahf
cmps
push
stos
outs
(bad)
jns
and
ret
sub
cwde
call
mov
ret
(bad)
out
clc
add
in
(bad)
sub
into
jge
movs
xchg
sub
sub
out
mov
mov
test
add
pop
xchg
mov
les
stos
(bad)
mov
fs
cwde
jmp
loop
xchg
xchg
js
and
out
out
clc
(bad)
call
xchg
stos
movs
shl
mov
adc
std
sbb
jmp
sub
cld
(bad)
adc
call
dec
imul
cmps
pop
xlat
test
cmps
into
clc
mov
bound
mov
or
jle
cmp
fwait
jmp
pop
sub
in
mov
adc
jnp
pop
and
das
jecxz
arpl
lods
mov
clc
or
scas
xor
ret
pop
aas
sub
xor
call
je
nop
xor
out
ins
retf
scas
jmp
xor
xlat
(bad)
(bad)
(bad)
mov
sub
mov
mov
jb
sbb
push
cli
or
dec
cmp
adc
les
(bad)
inc
pop
loop
adc
call
push
add
(bad)
mov
mov
mov
xor
and
push
inc
outs
call
icebp
imul
and
mov
iret
xor
jmp
jnp
lahf
adc
lahf
add
jb
aam
(bad)
(bad)
(bad)
jmp
sbb
jecxz
adc
mov
or
or
call
push
sub
jl
dec
or
(bad)
(bad)
jmp
and
cld
ins
sub
mov
scas
sbb
hlt
scas
stos
push
cs
(bad)
(bad)
call
sub
mov
je
push
call
retf
mov
(bad)
push
outs
hlt
pop
or
lds
cld
mov
xchg
adc
ficomp
inc
cld
add
mov
xchg
adc
fwait
gs
mov
ficom
mov
stos
or
ss
(bad)
(bad)
jg
stos
cmps
xor
inc
jb
jno
add
or
adc
call
mov
mov
add
cwde
and
push
xchg
and
sub
je
lahf
add
mov
sbb
push
shl
scas
out
(bad)
fcomp
or
dec
fcmove
lods
in
movs
dec
fcomp
or
mov
push
icebp
call
cmps
adc
xchg
(bad)
(bad)
(bad)
jmp
lock
mov
adc
xchg
out
sahf
mov
test
idiv
jo
dec
push
fwait
cli
call
dec
call
xchg
call
adc
outs
pop
dec
xchg
not
imul
std
(bad)
jg
mov
lods
lock
adc
pop
ret
mov
mov
push
(bad)
jmp
scas
sub
retf
xchg
jne
std
mov
mov
aad
stc
mov
jmp
lahf
call
movs
ret
out
push
call
mov
loope
test
sub
xchg
cli
jmp
mov
(bad)
cmps
cs
and
imul
push
clc
ret
call
(bad)
or
fucomp
sbb
fiadd
jge
pop
jmp
rcr
cwde
sub
mov
pop
sub
std
cmps
jmp
adc
lea
jmp
js
mov
imul
or
mov
bound
(bad)
(bad)
mov
dec
mov
lahf
(bad)
loopne
out
jp
retf
out
(bad)
(bad)
(bad)
jmp
pop
mov
(bad)
ins
pop
push
ins
mov
lock
out
cld
imul
es
imul
lods
lods
sub
jb
jne
mov
sub
pop
outs
xchg
cs
int3
cwde
scas
or
push
(bad)
jg
push
or
pop
sti
inc
(bad)
not
ins
fild
add
fldcw
sbb
and
(bad)
(bad)
jmp
or
pop
test
lea
inc
pop
mov
adc
jb
ja
sub
mov
movs
xor
mov
retf
sar
jmp
mov
(bad)
adc
xchg
xchg
cli
test
scas
push
jmp
or
mov
add
cmp
rol
cld
shr
lods
loop
xchg
call
push
push
test
popf
xchg
add
sub
mov
ins
loope
in
jmp
not
push
loop
imul
clc
(bad)
(bad)
call
ss
sbb
repz
jle
sub
ss
and
mov
ret
cli
enter
(bad)
jmp
pop
mov
or
push
jge
ins
(bad)
mov
call
mov
std
les
push
(bad)
call
xchg
adc
sub
jno
mov
adc
pop
push
mov
cs
or
(bad)
(bad)
clc
cwde
sub
in
inc
das
(bad)
pop
mov
imul
(bad)
dec
cmp
cdq
inc
mov
fisttp
xor
xchg
mov
bound
(bad)
cmps
cmp
mov
add
adc
(bad)
fwait
in
mov
mov
or
push
push
and
xchg
imul
(bad)
(bad)
cld
imul
dec
pop
or
or
pop
mov
(bad)
cmp
loop
jbe
js
jne
push
das
add
pop
inc
into
(bad)
(bad)
(bad)
(bad)
clc
mov
or
push
sub
mov
mov
push
(bad)
sar
mov
clc
fdiv
std
pop
ins
mov
and
jmp
jmp
call
push
jb
call
dec
lods
retf
sub
cmp
pop
cs
(bad)
call
movs
mov
push
(bad)
pop
xor
cmc
sbb
adc
cmp
out
test
call
mov
stos
xchg
xor
mov
or
outs
mov
sbb
fwait
(bad)
jmp
inc
dec
or
test
sub
ror
sub
(bad)
(bad)
(bad)
(bad)
mov
(bad)
stos
mov
jno
pop
retf
cmc
inc
mov
mov
mov
lahf
mov
into
(bad)
(bad)
(bad)
dec
imul
inc
inc
jecxz
push
retf
or
jb
mov
adc
inc
add
inc
in
(bad)
(bad)
(bad)
(bad)
in
fidiv
mov
es
and
out
gs
inc
mov
and
and
jle
mov
xor
add
lock
fcmovu
bound
nop
scas
(bad)
(bad)
(bad)
call
mov
xor
cli
ret
mov
scas
(bad)
jns
test
fadd
loop
addr16
(bad)
call
ins
push
pop
std
push
imul
mov
xor
and
mov
ret
lods
xor
(bad)
(bad)
dec
cmp
sub
in
aad
scas
leave
push
sub
jp
adc
ret
test
stos
(bad)
push
mov
fsubrp
std
mov
add
cmps
clc
cmp
dec
inc
sbb
mov
push
call
or
jmp
push
movs
cs
mov
xchg
and
(bad)
(bad)
(bad)
(bad)
in
dec
push
jmp
loopne
cmps
push
cli
push
add
ret
mov
repnz
xchg
adc
int
inc
call
push
mov
mov
in
push
adc
push
daa
add
and
ss
(bad)
call
out
int3
test
cmp
jmp
push
jmp
out
sar
mov
pop
mov
add
push
and
push
mov
xchg
mov
mov
jmp
test
add
mov
adc
dec
js
clc
(bad)
lock
das
call
pop
jge
iret
lahf
jne
outs
lahf
das
pop
jmp
mov
nop
(bad)
(bad)
inc
add
push
xor
std
ds
dec
sbb
sub
push
aam
pop
pop
sub
hlt
sbb
pop
inc
xlat
pop
push
fwait
xchg
push
out
dec
(bad)
mov
jmp
out
jecxz
(bad)
mov
add
mul
adc
add
xor
in
adc
(bad)
mov
stc
je
cmp
add
test
(bad)
(bad)
mov
stos
and
(bad)
jmp
xor
daa
pop
jmp
cmp
adc
add
imul
cwde
stos
jle
jmp
adc
bound
lahf
mov
cwde
cmp
frstor
jmp
add
nop
push
mov
pop
jmp
mov
pop
mov
xchg
xor
mov
push
popa
psrld
cmp
mov
cdq
stc
dec
push
bound
cs
cmp
out
jmp
cli
dec
mov
jb
fsub
mov
cdq
(bad)
sub
ja
fwait
(bad)
mov
scas
mov
xchg
add
lea
jle
and
icebp
mov
into
fwait
out
jmp
test
aam
pusha
pusha
popa
(bad)
push
std
frstor
lods
add
jmp
mov
ds
mov
(bad)
(bad)
(bad)
mov
lods
sub
cmp
sbb
test
xchg
cli
xor
push
sbb
xor
adc
mov
pushf
movs
mov
push
jmp
xor
fisttp
push
repnz
(bad)
jmp
sub
icebp
in
or
pop
bound
fcom
jnp
cmps
pop
inc
mov
(bad)
mov
cmp
jns
pop
adc
cmps
cmp
add
cs
(bad)
call
out
mov
cld
retf
mov
and
clc
(bad)
(bad)
jmp
(bad)
jb
pop
jnp
(bad)
dec
mov
mov
(bad)
test
mov
mov
sub
(bad)
call
jae
xlat
sahf
xchg
cli
leave
jmp
(bad)
(bad)
fist
mov
and
ins
mov
sub
cmp
mov
pop
outs
jle
jg
imul
cli
mov
loopne
idiv
test
dec
mov
or
iret
js
or
iret
loop
pop
clc
jns
rep
mov
xchg
lds
cld
mov
jno
iret
out
mov
out
es
retf
mov
sahf
das
loop
mov
and
and
ins
sbb
(bad)
stos
lahf
jb
sub
sub
jg
dec
iret
gs
mov
xor
xchg
jle
jecxz
cld
or
icebp
rcr
repnz
jecxz
pop
pop
in
stos
and
xchg
idiv
adc
cmps
dec
fimul
loopne
(bad)
jg
loope
mov
cld
stos
mov
repz
ret
sub
push
(bad)
(bad)
(bad)
mov
push
mov
xchg
dec
pop
xchg
mov
sub
movs
mov
sbb
repnz
(bad)
(bad)
(bad)
push
xchg
dec
jg
mov
cmp
outs
mov
cmp
fcmovb
mov
lahf
and
mov
inc
das
cli
hlt
pop
sbb
in
mov
jecxz
jo
nop
iret
fsubrp
mov
dec
or
mov
outs
(bad)
leave
or
out
adc
jnp
add
mov
push
mov
retf
imul
jp
das
adc
shl
cli
fs
cld
mov
call
mov
(bad)
jg
push
repnz
fld
dec
jno
lds
in
mov
mov
psubusb
add
push
jo
mov
cmp
xor
test
pusha
sbb
(bad)
(bad)
push
das
mov
pop
mov
pop
scas
pop
mov
add
scas
sbb
push
call
pop
sub
(bad)
(bad)
jmp
push
mov
mov
jns
mov
lods
mov
loop
cmp
(bad)
(bad)
(bad)
dec
dec
mov
cwde
push
sub
jp
push
cmps
mov
sbb
repnz
ds
cli
aad
(bad)
(bad)
mov
sti
sbb
push
mov
lock
push
test
(bad)
(bad)
jg
mov
jg
stc
stos
adc
aad
sbb
(bad)
icebp
push
adc
cmp
stos
dec
mov
lds
push
stos
push
(bad)
(bad)
(bad)
inc
pop
test
loope
pop
call
aad
pusha
jno
and
imul
mov
(bad)
fsubr
inc
sub
ds
adc
stos
call
fld
(bad)
mov
cli
and
cmps
sub
mov
sbb
std
(bad)
out
push
fcomp
js
mov
jb
cmovb
out
inc
inc
cld
push
mov
sub
(bad)
jb
push
pop
jle
sbb
scas
aas
fxch
push
inc
mov
out
add
xor
mov
outs
lods
lods
es
or
bound
outs
or
sahf
pop
bound
mov
xor
mov
xor
or
mov
sbb
call
gs
gs
loopne
pop
ret
sub
rol
out
mov
neg
mov
add
push
jmp
jmp
fld
scas
in
sub
and
ins
add
sahf
lahf
cmp
inc
and
in
and
mov
addr16
or
loopne
inc
or
loopne
cmps
xor
or
or
addr16
jmp
call
std
je
shr
and
mov
sub
leave
dec
stc
ror
es
out
call
mov
or
sub
sti
or
(bad)
(bad)
push
repnz
fs
mov
outs
daa
and
(bad)
lods
cmp
push
iret
push
and
loop
leave
push
add
loope
inc
mov
das
cdq
out
cmp
sbb
inc
(bad)
jmp
ins
shr
loop
jle
ret
pop
test
adc
dec
(bad)
jmp
inc
cs
mov
std
or
movs
sbb
(bad)
jmp
test
iret
cdq
mov
dec
jne
mov
dec
cmps
and
or
lock
or
call
or
ret
(bad)
mov
push
clc
push
cmp
je
dec
call
add
clc
inc
adc
aam
(bad)
(bad)
inc
push
mov
in
mov
adc
ins
scas
mov
(bad)
jmp
cmp
loop
and
cmps
lahf
and
cmp
sub
(bad)
mov
push
pusha
mov
mov
mov
(bad)
mov
mov
ds
mov
or
(bad)
(bad)
(bad)
jmp
repnz
and
and
js
test
cdq
lock
mov
idiv
or
(bad)
jmp
movs
fisubr
ret
cs
sub
retf
pop
or
js
xchg
nop
stos
mov
(bad)
cli
mov
enter
push
mov
ja
scas
or
lods
loopne
push
cmps
sub
or
push
xor
cmps
into
sbb
xchg
(bad)
(bad)
call
cli
and
int
push
or
inc
inc
std
ins
out
xchg
out
clc
mov
scas
sub
(bad)
jmp
dec
das
cmps
mov
mov
add
jmp
inc
xchg
mov
pop
pop
leave
enter
js
rol
push
jne
xor
pushf
jnp
loope
daa
(bad)
dec
or
(bad)
(bad)
stc
mov
adc
mov
scas
adc
xchg
(bad)
call
mov
(bad)
(bad)
jmp
stos
inc
pop
jb
lods
cli
repnz
enter
cmps
mov
scas
or
jnp
add
outs
jmp
dec
pusha
outs
and
(bad)
fistp
ins
and
mov
adc
dec
xor
div
in
retf
mov
pop
xchg
retf
cmp
cmp
pop
sub
outs
jmp
cmp
(bad)
(bad)
(bad)
jmp
sbb
je
mov
pop
jae
loop
push
mov
mov
inc
jmp
dec
sbb
add
push
retf
(bad)
dec
push
(bad)
(bad)
movs
imul
pop
add
mov
les
pop
pop
bound
dec
jp
retf
ficomp
cmp
in
add
push
pop
(bad)
jg
(bad)
cmp
out
lock
adc
pop
xchg
xor
lds
(bad)
in
stc
add
and
dec
push
lahf
sahf
sub
push
enter
(bad)
jg
test
jmp
lock
jb
adc
call
cli
mov
inc
sahf
ficom
mov
mov
ja
push
mov
mov
dec
(bad)
(bad)
and
adc
adc
(bad)
inc
mov
scas
sub
ja
lods
jge
mov
(bad)
rol
nop
xchg
add
dec
and
jno
jne
or
mov
std
pop
jne
scas
sub
mov
push
adc
push
(bad)
(bad)
(bad)
dec
mov
jle
xchg
stc
mov
mov
or
jb
mov
cli
dec
movs
fisub
(bad)
ja
sti
push
and
jmp
inc
movs
cmps
fs
out
mov
call
fcomp
mov
or
ficomp
inc
push
(bad)
call
lock
sub
mov
xchg
sbb
pop
jl
inc
dec
popa
and
sub
dec
dec
jle
test
mov
cli
cmp
(bad)
std
xor
stos
dec
inc
test
mov
popf
push
int
bound
arpl
aaa
cld
aaa
in
ins
adc
mov
test
mov
(bad)
call
ins
cmp
inc
push
pop
cmp
adc
pushf
call
dec
push
and
cmp
ret
outs
or
sub
jae
dec
loopne
cmc
mov
adc
loope
jmp
or
xchg
test
push
(bad)
(bad)
jmp
push
push
cs
in
fstp
mov
leave
jmp
mov
(bad)
(bad)
(bad)
jmp
push
mov
sbb
mov
fisubr
push
adc
add
jmp
cmp
cwde
test
xor
sub
push
call
(bad)
(bad)
(bad)
mov
adc
cmps
push
das
das
fs
sub
movs
push
xor
shl
hlt
(bad)
(bad)
(bad)
(bad)
call
mov
arpl
and
jnp
test
push
mov
jg
test
call
(bad)
pop
mov
push
call
ror
test
or
retf
out
(bad)
(bad)
(bad)
(bad)
std
cmps
push
sub
pop
and
call
adc
cmp
out
fbstp
xchg
sub
mov
dec
mov
shr
call
rcr
nop
popa
xchg
mov
imul
cmps
daa
retf
inc
cmc
jb
clc
retf
scas
push
adc
retf
sbb
mov
add
xchg
lock
mov
out
sub
stos
and
loope
leave
cmp
or
movs
xor
cld
sub
(bad)
out
jp
and
xchg
mov
adc
xor
(bad)
cmp
lahf
xchg
ret
sbb
clc
xor
cs
shr
stc
pop
cdq
jecxz
neg
dec
sub
mov
(bad)
jg
mov
ja
and
pop
dec
xor
jge
repnz
fld
(bad)
(bad)
(bad)
call
loop
hlt
adc
jo
push
(bad)
movs
mov
lds
in
jb
and
(bad)
(bad)
inc
jb
xor
ins
fwait
cli
mov
enter
retf
and
es
push
cmp
call
cs
call
sub
cmp
loop
ret
adc
in
jmp
jmp
stos
mov
add
jmp
push
xor
mov
mov
adc
jns
jge
mov
push
xchg
rol
and
adc
sub
xor
pop
pop
gs
dec
add
ds
mov
std
sbb
stc
repnz
outs
pop
sub
std
out
scas
xor
les
or
cmp
(bad)
(bad)
cmp
mov
mov
push
sub
int3
in
in
(bad)
dec
cmps
mov
fild
mov
(bad)
(bad)
in
ret
mov
loopne
imul
or
jno
mov
mov
lahf
and
dec
jnp
cmp
sub
dec
mov
fidiv
lea
scas
dec
push
xchg
mov
fcomip
mov
call
pop
xchg
mov
ins
mov
iret
pusha
(bad)
icebp
stos
xor
imul
pop
jno
loop
(bad)
push
in
mov
jnp
aad
retf
jmp
and
rcr
mov
sar
(bad)
(bad)
mov
das
sbb
xor
mov
stos
push
sbb
pop
xchg
cli
outs
das
sub
push
sub
cdq
and
dec
add
mov
add
(bad)
jg
dec
es
rcl
push
sub
ds
(bad)
jmp
add
or
sub
mov
jmp
(bad)
(bad)
(bad)
(bad)
clc
cmp
das
scas
test
sar
xor
xor
cmp
jle
cmp
mov
inc
(bad)
jmp
sbb
fst
rcl
in
cdq
(bad)
(bad)
(bad)
call
shr
mov
das
xlat
out
or
push
inc
(bad)
sub
in
fdivr
pop
cmc
(bad)
jmp
mov
std
outs
pop
jecxz
retf
lods
daa
dec
or
mov
sbb
(bad)
(bad)
dec
mov
test
sub
fimul
xchg
add
movs
js
(bad)
(bad)
(bad)
jg
fnstcw
mov
mov
dec
mov
dec
mov
scas
dec
aaa
cmps
shl
mov
add
mov
hlt
or
(bad)
jg
inc
pop
mov
scas
sbb
pop
add
sub
(bad)
fild
jo
pusha
cmp
sub
cmp
(bad)
fbld
push
sbb
dec
pop
add
test
loop
xchg
xor
(bad)
call
imul
stos
(bad)
dec
popa
inc
and
(bad)
scas
push
outs
xor
in
rcl
jecxz
pop
(bad)
(bad)
(bad)
(bad)
mov
cmps
test
mov
mov
test
mov
(bad)
(bad)
jmp
jb
ret
cmp
push
push
loopne
jb
dec
xlat
mov
fdivrp
(bad)
inc
out
adc
sub
sub
mov
or
(bad)
jg
test
mov
ss
les
call
fdiv
jg
push
retf
inc
jp
hlt
and
hlt
cmp
cs
(bad)
cmp
(bad)
adc
push
(bad)
push
mov
call
cwde
or
arpl
mov
mov
push
lahf
into
and
push
test
loopne
xor
mov
xchg
adc
mov
in
ins
popf
xor
cmp
pop
pusha
mov
sub
add
pop
mov
(bad)
jmp
dec
fbstp
(bad)
fidiv
add
mov
repnz
dec
loope
dec
push
push
pop
rcl
xchg
sub
sbb
pop
push
fsubr
call
dec
ds
inc
xchg
push
dec
and
int
mov
mov
(bad)
dec
xchg
ret
adc
fdivr
dec
jmp
outs
sbb
cmp
imul
icebp
(bad)
jmp
xchg
sbb
cli
dec
add
mov
(bad)
sbb
(bad)
dec
inc
xchg
sbb
mov
daa
add
sub
stos
bound
push
jmp
add
mov
cwde
into
or
pop
call
cmp
(bad)
(bad)
inc
and
push
sub
pusha
jnp
mov
jl
or
fwait
push
(bad)
(bad)
(bad)
dec
dec
or
mov
pop
sub
div
dec
mov
fcomp
push
push
push
(bad)
(bad)
(bad)
(bad)
jp
daa
add
push
retf
adc
pushf
xchg
pop
jmp
fisttp
cmp
test
cli
pushf
in
xor
arpl
loop
mov
jmp
adc
jmp
loop
ins
cmps
(bad)
(bad)
(bad)
(bad)
cmp
adc
mov
adc
xchg
lods
leave
mov
xchg
loope
jl
dec
sub
out
mov
and
pop
cmps
dec
fcmovb
inc
adc
mov
sbb
sbb
imul
stos
call
mov
out
lock
out
mov
stc
mov
cli
jg
pop
std
xor
(bad)
inc
sub
loop
dec
lods
(bad)
xor
ret
sub
push
(bad)
jle
jne
test
(bad)
fistp
or
pop
sub
sbb
jp
fiadd
jo
nop
pop
fwait
lods
mov
(bad)
jmp
mov
fiadd
xor
xchg
retf
or
pusha
xchg
ror
cmp
adc
dec
cmp
add
dec
jge
sub
push
ja
(bad)
(bad)
(bad)
jmp
or
repnz
das
movs
mov
jmp
mov
cmps
xor
imul
mov
movs
loopne
or
xchg
and
sahf
inc
xchg
or
or
aad
(bad)
inc
and
das
rcl
retf
mov
jecxz
push
scas
ds
jle
sub
(bad)
(bad)
jmp
sub
pop
add
cmp
not
(bad)
or
aas
shl
or
stos
fsubr
shr
cmps
daa
jp
mov
jnp
mov
pop
mov
push
mov
jg
adc
jbe
retf
inc
dec
sbb
(bad)
(bad)
mov
cmp
fild
add
stc
leave
iret
cmp
call
addr16
stos
(bad)
(bad)
(bad)
jmp
jmp
fistp
cs
cmp
push
inc
xchg
out
xchg
or
dec
out
and
dec
stos
push
pop
cmp
in
in
mov
(bad)
(bad)
(bad)
(bad)
mov
push
es
sub
loope
mov
loopne
outs
inc
mov
xor
cwde
lods
(bad)
call
pop
fcmovne
xor
add
arpl
imul
call
(bad)
call
mov
cmp
ja
aaa
adc
jmp
rol
fs
sahf
(bad)
(bad)
(bad)
jmp
clc
mov
ds
repnz
mov
xor
retf
add
(bad)
jmp
jae
sub
mov
xchg
ss
xlat
push
xor
(bad)
jmp
sbb
ja
mov
cmp
out
xor
jmp
mov
cli
mov
and
mov
fidiv
jb
adc
mov
pop
pop
sub
jl
mov
mov
xor
push
arpl
or
mov
push
cmc
xor
jmp
dec
cmps
adc
jne
icebp
adc
(bad)
(bad)
(bad)
mov
daa
mov
cmps
stos
push
jne
cmpxchg8b
or
pop
int
cwde
(bad)
(bad)
(bad)
(bad)
in
rcr
fistp
shl
(bad)
out
sbb
adc
nop
sar
bound
ins
loope
pop
xchg
push
sar
push
xlat
push
mov
mov
(bad)
push
test
dec
dec
in
loopne
cmp
scas
shl
add
es
test
stos
pop
sbb
jmp
fcomp
add
daa
repnz
pushf
inc
cmp
(bad)
mov
mov
push
std
(bad)
retf
pop
cld
repz
leave
stc
pop
nop
mov
(bad)
cld
mov
dec
scas
sar
pop
xchg
push
(bad)
retf
mov
sar
mov
pop
cld
stos
xchg
pop
out
jnp
dec
in
je
jmp
sub
mov
scas
mov
out
jl
xor
push
pop
xchg
mov
or
cmp
xor
call
pop
shr
shr
js
fdivr
ja
rep
jb
iret
jmp
sbb
cmp
(bad)
(bad)
(bad)
dec
sub
mov
push
loop
stos
sub
lock
mov
pusha
cs
cli
(bad)
(bad)
call
retf
mov
jb
mov
cmp
mov
jmp
adc
(bad)
(bad)
(bad)
jmp
loopne
xchg
es
cmp
fisubr
xchg
pop
out
out
(bad)
jp
int
fistp
or
lods
inc
ja
add
or
das
ins
jmp
cpuid
push
dec
push
fs
in
scas
int3
sbb
mov
mov
mov
adc
jmp
enter
scas
nop
fistp
bswap
jmp
movs
or
pop
mov
sar
add
(bad)
and
iret
cs
push
push
(bad)
(bad)
(bad)
(bad)
jmp
sub
jb
cwde
cmp
aam
fisubr
pusha
push
push
call
mov
das
lods
(bad)
(bad)
jmp
or
icebp
repz
jle
ret
jmp
stos
scas
ret
test
out
mov
jae
fprem
enter
(bad)
(bad)
mov
fs
and
pop
mov
shl
ins
mov
in
pop
lods
out
repnz
cmp
mov
jecxz
(bad)
jmp
add
in
adc
jmp
sub
or
adc
inc
mov
dec
aaa
inc
sbb
test
shr
mov
cmp
arpl
iretw
xchg
dec
out
push
leave
push
popa
or
dec
sti
mov
pop
pop
cmp
scas
ss
outs
test
(bad)
call
pop
fwait
out
dec
and
mov
add
mov
push
add
aas
sub
push
stos
pop
mov
mov
push
fcomi
mov
scas
cli
(bad)
mov
call
sub
test
test
mov
add
(bad)
(bad)
call
mov
sub
jle
cli
or
mov
stos
mov
imul
sbb
push
fcmovb
jb
fs
xchg
out
(bad)
(bad)
mov
addr16
call
and
stos
out
in
mov
js
movs
bound
mov
mov
ds
das
stc
lods
loopne
pop
call
jecxz
jg
out
call
loope
adc
and
mov
pusha
call
shl
scas
sar
in
imul
and
xor
in
dec
stos
adc
icebp
sub
sub
mov
mov
jnp
pop
mov
imul
(bad)
(bad)
push
sbb
pop
outs
xchg
dec
imul
ret
mov
test
call
inc
lods
pop
mov
loope
outs
dec
fisubr
lea
retf
repz
or
fidiv
lahf
cmp
push
adc
add
cli
dec
fild
sahf
jl
retf
adc
cmp
jmp
and
mov
sub
adc
in
cmp
pop
imul
or
xchg
cmp
mov
(bad)
(bad)
(bad)
mov
jle
arpl
push
lods
stos
stos
xchg
add
push
cli
(bad)
sti
mov
and
(bad)
(bad)
jmp
xor
xor
fnstenv
mov
cld
imul
sti
test
pushf
adc
cmp
sar
(bad)
(bad)
call
jmp
call
xchg
mov
and
loop
mov
lods
(bad)
(bad)
jg
inc
mov
or
out
out
enter
adc
je
jmp
(bad)
(bad)
jg
inc
dec
mov
push
mov
mov
cmp
push
(bad)
mov
mov
pop
push
add
jp
(bad)
(bad)
(bad)
call
lds
aam
mov
push
dec
stc
sbb
sar
shl
cmp
mov
movs
cmp
scas
adc
clc
sbb
mov
in
retf
mov
(bad)
call
sbb
iret
mov
jge
dec
stos
call
clc
mov
mul
(bad)
fbld
mov
and
loope
xor
mov
(bad)
jmp
dec
neg
scas
sbb
icebp
call
dec
dec
mov
mov
cli
(bad)
jmp
or
inc
(bad)
shl
ret
cmps
mov
pop
sub
jmp
pop
idiv
push
mov
retf
out
(bad)
or
dec
scas
int3
(bad)
fsubr
(bad)
(bad)
(bad)
jmp
sbb
mov
loopne
mov
leave
daa
cmps
ja
arpl
mov
add
and
ja
stos
push
retf
test
sbb
loop
(bad)
(bad)
dec
add
sar
pop
adc
mov
out
jmp
mov
std
sbb
das
clc
(bad)
(bad)
fst
dec
fldenv
pop
sbb
(bad)
out
nop
leave
bound
jle
shl
jo
sbb
dec
das
sub
cmps
clc
fidivr
repnz
or
push
dec
mov
or
dec
sbb
(bad)
call
in
jo
clc
cwde
push
mov
imul
data16
sub
cmp
or
push
push
std
and
aaa
lock
dec
pop
xor
(bad)
(bad)
jmp
xchg
mov
push
jge
lahf
out
cwde
ins
mov
xor
push
fs
xor
jmp
icebp
(bad)
(bad)
call
sub
mov
mov
adc
ret
jge
mov
lods
sub
movs
adc
ds
xchg
pop
mov
dec
xchg
fidivr
mov
jmp
adc
mov
cld
jg
add
jp
cmps
ds
fisttp
cmps
or
mov
sub
std
or
adc
ds
xchg
test
jmp
ror
xor
cmp
scas
je
mov
(bad)
cmps
xchg
(bad)
call
cmp
xchg
mov
retf
pop
lock
jmp
(bad)
(bad)
(bad)
push
cli
pushf
push
into
sbb
call
(bad)
or
mov
adc
ins
das
pusha
sbb
addr16
sub
inc
sub
sub
cmp
outs
outs
jmp
add
xor
lods
pop
pop
es
(bad)
jmp
cmp
fiadd
pavgw
ins
shr
xor
mov
(bad)
jmp
clc
mov
mov
mov
sahf
or
or
jns
(bad)
dec
jge
fimul
and
and
ds
and
inc
fld
cs
ss
(bad)
scas
in
pop
enter
xchg
je
cmp
scas
enter
pop
push
sub
cmp
mov
cmp
mov
pop
bound
dec
test
outs
jno
into
(bad)
iret
pop
scas
pmaddwd
jbe
dec
retf
pop
sbb
lods
aad
or
lods
dec
repz
pop
call
ficomp
and
mov
(bad)
jg
jmp
cwde
pop
outs
addr16
mov
imul
retf
cld
or
lds
dec
cmp
fadd
mov
push
call
push
loop
push
int3
add
aas
dec
addr16
retf
outs
dec
mov
(bad)
out
sahf
popf
test
inc
cmp
ret
ja
call
mov
xchg
int3
(bad)
nop
dec
pop
sahf
(bad)
(bad)
(bad)
call
xchg
(bad)
dec
fistp
ficomp
fistp
xchg
adc
sti
test
(bad)
jmp
iret
sti
push
sbb
das
call
clc
nop
cmp
iret
movs
lods
mov
retf
(bad)
out
sbb
mov
push
cmp
add
mov
imul
leave
int
test
jmp
jle
into
repnz
stos
push
dec
shl
mov
(bad)
(bad)
jg
dec
mov
es
sbb
sbb
push
fmul
push
lds
xor
jge
cmps
lock
dec
mov
inc
fisttp
ja
ja
bnd
mov
scas
mov
adc
push
sbb
das
shr
adc
inc
pop
lock
xchg
add
js
xchg
(bad)
(bad)
jmp
into
scas
cdq
js
sahf
xchg
je
or
sbb
scas
outs
lahf
bound
(bad)
(bad)
fstp
(bad)
cdq
lods
lahf
jmp
std
(bad)
jg
pop
daa
lods
and
imul
jo
mov
mov
sub
sar
in
mov
add
call
mov
sahf
sub
icebp
mov
(bad)
(bad)
cmp
lods
adc
fidivr
test
pop
ja
std
das
mov
neg
movs
jmp
ss
arpl
call
lock
mov
mov
rol
sub
or
loopne
icebp
loopne
push
(bad)
(bad)
(bad)
dec
mov
mov
popa
imul
pushf
cdq
jmp
mov
fsub
fdivr
jle
xor
ret
out
fdivr
dec
call
sahf
aas
mov
and
pop
out
mov
pop
aas
lods
outs
add
inc
or
pop
mov
jo
cs
jmp
mov
add
xchg
adc
(bad)
fist
xchg
(bad)
jb
mov
aad
adc
(bad)
jmp
sub
lods
pop
inc
out
ret
mov
imul
jle
xor
pop
icebp
(bad)
mov
jmp
cmc
add
dec
dec
xor
retf
xchg
sub
es
in
inc
(bad)
aad
or
ret
movs
pushf
cmps
mov
jg
fucomi
out
popa
pop
(bad)
call
fnstenv
push
popa
pop
js
not
(bad)
(bad)
(bad)
in
push
jnp
mov
xor
mov
call
enter
xchg
(bad)
(bad)
jmp
xchg
mov
(bad)
push
gs
dec
nop
mov
mov
stos
call
mov
in
lahf
fisubr
out
mov
and
push
adc
ja
stc
sub
pushf
aas
sub
scas
sbb
hlt
(bad)
(bad)
jmp
cmp
out
inc
scas
(bad)
(bad)
push
aad
cld
sub
or
int
push
enter
out
mov
xchg
jmp
lahf
nop
mov
(bad)
inc
cld
lock
mov
cmps
arpl
jae
aad
cli
loop
and
clc
repnz
xchg
xor
dec
xchg
sub
mov
cmp
push
pop
ficomp
pop
sub
movs
cmp
clc
jmp
ins
xchg
push
jg
mov
jmp
test
mov
pop
cmp
xor
lds
(bad)
(bad)
jge
addr16
mov
out
cmp
jbe
sub
stos
outs
jmp
(bad)
jmp
push
mov
iret
addr16
mov
adc
or
xchg
xchg
or
mov
xchg
mov
(bad)
(bad)
jmp
mov
out
cmps
dec
ds
push
pushf
nop
enter
push
mov
shl
adc
jmp
mov
inc
sub
(bad)
xor
jmp
inc
hlt
or
stc
pop
test
mov
cld
into
(bad)
(bad)
push
jle
cli
dec
or
scas
push
stc
ss
(bad)
(bad)
push
stos
mov
pop
fild
sub
mov
jmp
js
(bad)
(bad)
(bad)
inc
xor
xchg
sbb
test
jp
pushf
outs
loop
mov
clc
dec
fidivr
or
mov
push
lea
scas
mov
jb
push
loop
ins
(bad)
mov
imul
push
loop
mov
push
loopne
(bad)
cmp
imul
mov
fcmovb
loopne
mov
jp
jb
cmps
idiv
(bad)
(bad)
inc
mov
int3
imul
outs
sahf
daa
aaa
push
pop
out
adc
xor
(bad)
ins
jb
(bad)
(bad)
(bad)
std
call
dec
inc
push
jne
jecxz
sbb
cmp
fcom
imul
jns
jg
sub
(bad)
inc
xchg
adc
or
sbb
(bad)
aad
addr16
mov
jno
pop
adc
imul
cmp
cli
push
add
jp
outs
lods
dec
push
iret
imul
test
jnp
mov
sub
fwait
(bad)
(bad)
dec
add
sub
retfw
jg
call
inc
sub
mov
adc
inc
jmp
call
loopne
ss
adc
jnp
ss
test
pop
arpl
cmps
pop
inc
mov
xchg
shr
sbb
jnp
out
(bad)
inc
sbb
jl
add
xchg
retf
cmp
jmp
mov
sub
mov
xchg
mov
dec
fisttp
pop
lods
sar
adc
push
mov
in
scas
ds
aaa
mov
sbb
push
xchg
je
dec
sub
lods
dec
jnp
fwait
out
mov
cld
inc
inc
mov
dec
into
and
cmp
mov
or
neg
push
pop
imul
das
and
stos
jmp
fcmovne
test
les
movs
inc
and
adc
(bad)
fcomip
push
mov
pop
mov
shl
stc
and
sub
pop
pusha
iret
sbb
sbb
das
outs
inc
into
(bad)
(bad)
jg
inc
or
iret
pop
sub
and
push
das
in
dec
mov
(bad)
lods
js
cwde
(bad)
(bad)
(bad)
jno
mov
dec
ja
xor
mov
loopne
in
imul
sub
cmp
(bad)
push
mov
jae
lods
repnz
cmps
push
stos
xor
jp
in
mov
xchg
imul
test
ficomp
sub
mov
push
jmp
push
retf
dec
sbb
fstp
jg
fsubr
jmp
xchg
lea
adc
jns
call
das
(bad)
(bad)
(bad)
push
outs
mov
xchg
shr
sub
(bad)
sub
sbb
jmp
push
xchg
std
clc
stos
cmp
add
mov
daa
(bad)
aad
aad
push
shr
out
jecxz
loop
dec
loop
mov
cwde
mov
shl
and
dec
int3
mov
mov
(bad)
(bad)
jg
sub
sbb
stos
mov
xchg
repnz
fist
push
imul
pop
bound
dec
pusha
mov
(bad)
(bad)
jmp
out
mov
popf
xor
xor
cmps
(bad)
mov
into
lock
cmps
pop
sti
push
(bad)
(bad)
(bad)
jmp
arpl
loope
loopne
scas
jmp
ficom
lods
mov
fiadd
mov
push
(bad)
(bad)
dec
scas
or
mov
aas
rcl
scas
ret
es
mov
mov
cmps
frstor
mov
(bad)
mov
sar
sub
fldenv
sub
retf
add
jecxz
(bad)
(bad)
jmp
mov
jmp
dec
pop
add
jmp
loop
dec
pushf
sub
pop
in
dec
(bad)
(bad)
(bad)
jmp
sbb
loop
imul
sahf
in
cli
mov
xchg
movs
cmp
mov
sub
(bad)
(bad)
dec
jae
pop
push
dec
cmp
jmp
lds
div
jmp
pushf
(bad)
(bad)
jg
dec
jl
ins
imul
xchg
jg
pop
icebp
xchg
sub
aam
int3
fiadd
out
(bad)
jmp
sbb
test
cld
lahf
inc
xchg
push
jnp
xchg
out
jmp
xchg
mov
jmp
mov
pop
cmc
(bad)
push
jp
or
push
lahf
bound
xor
pop
mov
jb
or
cmc
std
(bad)
(bad)
inc
sbb
jp
xor
mov
cwde
cmp
xchg
out
test
pop
aad
sub
in
push
push
call
mov
xor
or
sub
shl
clc
add
dec
repnz
mov
jae
sbb
(bad)
jg
movs
iret
and
mov
fld1
daa
loop
leave
test
cmps
cwde
mov
(bad)
(bad)
(bad)
jmp
in
(bad)
cdq
sub
outs
ss
push
iret
adc
nop
dec
sar
out
cld
(bad)
jmp
cmps
mov
add
cli
into
jo
push
movs
enter
(bad)
jg
cmp
sbb
jnp
fdivrp
inc
cmc
imul
pop
fsub
mov
cmp
call
cld
mov
push
jns
in
adc
jmp
or
push
adc
inc
(bad)
(bad)
push
sub
sub
xor
and
repnz
push
and
mov
jno
mov
movs
or
in
hlt
and
inc
jmp
ja
dec
clc
(bad)
call
fnstsw
xchg
test
leave
jecxz
fsubr
data16
cmps
sub
fld
cwde
enter
in
sub
test
cmp
add
mov
in
push
test
mov
(bad)
dec
sub
das
stos
movs
sub
hlt
data16
sub
sbb
loop
sub
(bad)
(bad)
push
push
pop
ins
sub
mov
fidivr
ficomp
das
jecxz
movs
mov
outs
fisttp
scas
retf
and
adc
and
(bad)
(bad)
push
cmp
or
daa
jnp
pslld
push
sbb
loopne
sar
pop
rcl
lods
push
pop
out
and
(bad)
(bad)
call
and
jle
sub
mov
(bad)
(bad)
mov
mov
into
shr
add
clc
movs
mov
mov
call
cld
leave
mul
xchg
gs
jmp
jmp
inc
inc
fcmovbe
retf
scas
mov
cli
loope
sub
aad
jo
adc
call
adc
outs
jmp
push
pop
nop
mov
dec
push
aas
ret
or
inc
retf
inc
sub
cmc
adc
arpl
or
(bad)
(bad)
jg
movs
repnz
inc
jp
lods
call
pop
mov
mov
loopne
loope
(bad)
(bad)
call
test
push
test
cmp
cdq
cmp
cmp
loop
adc
jl
inc
inc
hlt
dec
sbb
enter
jmp
fs
inc
mov
pop
fild
push
add
xchg
add
fistp
lods
(bad)
jmp
mov
mov
xor
mov
(bad)
(bad)
(bad)
inc
js
adc
and
enter
jmp
add
jbe
xor
jae
adc
loop
add
mov
(bad)
dec
shl
and
pop
(bad)
push
fisubr
pushf
test
pop
out
dec
(bad)
call
enter
inc
mov
dec
dec
loop
shl
mov
adc
or
out
loopne
loope
(bad)
jmp
xchg
add
ins
xlat
inc
and
ja
mov
out
mov
mov
jmp
and
cld
mov
cmps
into
sub
jmp
dec
cmp
fstp
aaa
imul
dec
cmc
or
mov
vmovapd
sbb
retf
jne
(bad)
push
jae
mov
add
out
into
loope
(bad)
dec
sub
pop
ds
idiv
out
mov
(bad)
(bad)
mov
adc
mov
or
not
cmp
imul
(bad)
call
jne
in
test
pop
cmp
mov
mov
or
sub
mov
pop
push
push
xor
sbb
adc
xor
mov
mov
mov
imul
test
dec
xor
outs
and
lock
imul
mov
add
jmp
sub
stos
lea
cs
pusha
cmp
xchg
or
mov
mov
arpl
ret
cmp
jp
and
loopne
movs
retf
ds
(bad)
(bad)
jmp
and
mov
xchg
xchg
mov
jno
push
sub
hlt
scas
jmp
xor
(bad)
(bad)
(bad)
(bad)
xchg
adc
push
sub
push
mov
inc
sbb
jbe
mov
mov
mov
add
lods
mov
ficomp
stos
mov
cwde
push
jg
cs
movs
xchg
sub
movs
sub
(bad)
inc
dec
jno
xchg
leave
aaa
push
mov
pop
lea
dec
(bad)
push
adc
ins
mov
ss
frstor
xchg
cmps
test
push
(bad)
(bad)
dec
sahf
popa
jmp
sub
inc
dec
int
ret
push
pop
sub
pop
xchg
mov
pop
fbld
jle
pop
xchg
je
aad
retf
xchg
les
ds
xlat
xchg
retf
dec
jmp
inc
mov
call
cli
stos
imul
sti
loope
std
call
movs
push
xor
and
push
test
pop
jl
ror
push
xor
or
loopne
arpl
(bad)
(bad)
call
sbb
mov
jo
cmps
xchg
mov
and
add
jmp
fisttp
outs
test
int
mov
dec
in
das
cmp
mov
sahf
mov
(bad)
(bad)
(bad)
(bad)
js
fcomp
sbb
adc
fcom
inc
adc
inc
push
sar
cmp
adc
call
(bad)
inc
mov
sub
call
adc
dec
dec
ds
or
pop
fdiv
in
mov
xchg
pop
fs
sub
push
inc
xchg
sbb
call
add
(bad)
(bad)
(bad)
mov
adc
inc
adc
ret
test
and
fsub
jmp
test
std
loope
mov
repnz
ins
ret
add
(bad)
dec
push
lahf
inc
inc
jmp
pusha
fild
mov
pop
movs
add
dec
cld
call
jl
jbe
pusha
call
adc
mov
clc
dec
push
dec
stos
and
ds
dec
movs
(bad)
(bad)
jmp
adc
das
sbb
(bad)
xchg
mov
mov
(bad)
(bad)
(bad)
(bad)
cld
mov
mov
cmps
sub
adc
add
cmp
(bad)
mov
imul
in
dec
stc
and
fdivr
cmps
jg
cmp
out
and
cmp
repz
test
loope
(bad)
lea
lock
mov
(bad)
jg
nop
mov
popf
pop
and
or
inc
pop
cmp
mov
lock
xchg
mov
(bad)
mov
lahf
inc
xchg
scas
mov
adc
in
call
stos
adc
pop
or
aad
cmp
mov
out
jp
and
test
sbb
cmp
(bad)
fild
ins
mov
(bad)
(bad)
(bad)
fistp
mov
fstp
mov
aam
jg
push
sbb
in
dec
shl
ja
mov
(bad)
call
cdq
adc
sbb
in
mov
mov
stos
cmp
mov
(bad)
mov
ret
xchg
dec
pop
ror
sub
inc
xchg
add
xchg
push
(bad)
(bad)
(bad)
jmp
sub
stos
sbb
mov
shl
jns
fidivr
movs
rol
cli
clc
inc
pop
cmps
cmps
cwde
(bad)
(bad)
(bad)
(bad)
clc
loopne
shl
xchg
jb
into
mov
loop
test
inc
add
popa
and
and
(bad)
mov
(bad)
lods
push
adc
(bad)
call
push
mov
out
jno
in
fbld
xor
ds
mov
dec
sub
ficomp
(bad)
(bad)
inc
dec
(bad)
in
leave
and
(bad)
call
out
sbb
es
(bad)
(bad)
jmp
out
out
out
das
loopne
std
dec
add
jg
fstp
sub
xchg
cmp
cmp
cmp
call
(bad)
out
cli
jp
jno
xor
call
sbb
aas
mov
js
clc
(bad)
inc
popa
mov
ror
jmp
call
das
xor
ficomp
and
loop
sub
leave
(bad)
jmp
(bad)
jmp
out
sbb
cmp
aas
mov
(bad)
(bad)
(bad)
dec
ins
in
xchg
lahf
mov
sbb
fsubr
mov
adc
or
(bad)
call
mov
or
fidivr
sahf
aad
jno
mov
cmp
adc
(bad)
call
ret
sbb
push
repnz
pushf
or
test
sub
outs
jg
mov
movs
push
inc
add
or
retf
inc
std
pop
daa
push
sub
clc
(bad)
(bad)
inc
out
fiadd
mov
movs
pop
xchg
test
sbb
add
out
shl
stos
fsubr
(bad)
test
call
sbb
aaa
or
ret
jne
ins
jl
out
lea
jp
fcomip
add
iret
push
not
sub
aad
(bad)
push
outs
data16
ror
cli
shl
sbb
xor
cmp
sub
hlt
(bad)
jg
add
call
and
sub
add
mov
rol
xchg
repz
(bad)
jmp
jbe
xor
fisttp
cmp
pop
repnz
imul
(bad)
sub
jo
shl
xchg
stos
inc
sbb
test
mov
push
sbb
fsin
jg
sbb
ja
jo
push
inc
mov
mov
cli
lock
aas
xlat
sub
(bad)
(bad)
(bad)
jmp
or
mov
dec
push
cs
push
push
mov
pop
(bad)
jg
and
ja
lock
outs
inc
outs
sub
ins
repnz
add
test
cmp
(bad)
imul
imul
(bad)
(bad)
jmp
sbb
adc
imul
je
sti
cmp
inc
aad
(bad)
call
mov
js
jo
cwde
imul
push
imul
(bad)
(bad)
(bad)
push
jmp
(bad)
ret
or
in
ret
scas
and
cmps
jle
jmp
(bad)
(bad)
jmp
or
inc
sbb
stos
ds
xchg
popf
adc
dec
pop
push
fisttp
dec
mov
pop
outs
fisub
sar
call
push
out
dec
mov
fcmove
adc
dec
call
push
(bad)
adc
fs
push
scas
aaa
ja
sbb
jno
add
out
sahf
cmp
stos
jp
sbb
imul
sar
or
and
inc
enter
adc
pop
or
mov
jg
or
jge
call
in
xchg
inc
cli
and
xor
push
(bad)
jmp
ins
jno
cmp
cwde
and
pop
call
jmp
rcr
cld
mov
div
loopne
mov
jae
test
dec
jmp
call
inc
mov
loop
fs
cmp
or
jmp
ret
sbb
icebp
xchg
cld
gs
aad
call
inc
(bad)
mov
in
setno
sbb
arpl
add
dec
(bad)
idiv
mov
ret
mov
retf
es
(bad)
(bad)
(bad)
fimul
sbb
in
cmp
loopne
push
scas
jg
call
outs
fidivr
mov
in
daa
pop
aad
pop
mov
idiv
(bad)
(bad)
call
aam
loopne
jae
fwait
mov
xchg
pop
dec
push
pushf
lock
(bad)
(bad)
outs
pushf
cli
mov
lds
sar
jo
aam
pushf
sbb
scas
inc
jmp
push
jecxz
adc
ret
cmp
mov
scas
fisub
mov
call
inc
xor
mov
push
lea
ror
mov
xor
pop
dec
adc
sbb
int
or
sub
ds
cmp
daa
sbb
adc
mov
mov
and
(bad)
(bad)
(bad)
push
mov
jnp
mov
pop
push
pop
mov
mov
dec
sub
mov
and
sbb
mov
dec
sub
cmp
add
or
loop
mov
mov
dec
(bad)
(bad)
mov
sbb
das
or
scas
or
sub
lock
in
(bad)
in
mov
cmp
jge
sbb
push
sub
sub
(bad)
(bad)
(bad)
fbstp
sub
mov
jge
mov
xchg
sub
inc
test
xchg
xor
xlat
call
mov
dec
ins
repnz
in
xchg
mov
cmp
jmp
shl
sbb
xor
mov
sub
std
jmp
sbb
mov
xor
adc
mov
inc
xchg
cs
mov
(bad)
(bad)
jmp
bound
clc
cmp
sub
xor
sub
(bad)
jmp
scas
mov
pusha
call
dec
sar
outs
mov
push
mov
cs
scas
ret
(bad)
(bad)
(bad)
jmp
push
pop
cmps
stos
ror
add
jp
mov
pop
or
retf
imul
call
push
cmps
pop
pop
or
add
call
mov
(bad)
in
pop
test
es
mov
cmp
(bad)
(bad)
(bad)
dec
cmps
sub
xchg
lahf
sbb
out
repnz
and
in
dec
and
adc
retf
inc
mov
popf
test
(bad)
fbld
jmp
sbb
cwde
add
jmp
(bad)
mov
mov
push
or
cmp
nop
and
add
std
outs
mov
test
test
push
data16
cmp
fcomp
jecxz
scas
sahf
imul
cmp
bound
and
mov
(bad)
stos
(bad)
call
push
or
jge
in
mov
pmaxsw
add
call
push
scas
retf
addr16
and
adc
(bad)
mov
cmps
mov
sub
enter
(bad)
jmp
nop
sbb
fmul
(bad)
dec
xor
xor
repnz
retf
and
dec
push
mov
push
(bad)
jmp
cmp
fmul
mov
(bad)
jg
call
mov
popf
inc
fdivr
movs
xlat
out
sbb
stos
push
jmp
icebp
dec
stos
imul
mov
lods
adc
sbb
iret
jge
mov
adc
push
dec
sub
call
stos
mov
sub
mov
add
add
dec
and
or
jmp
repnz
les
pop
jecxz
dec
fldl2e
mov
and
(bad)
(bad)
(bad)
mov
inc
test
data16
mov
lds
pop
add
scas
adc
(bad)
mov
and
and
and
fcomp
leave
(bad)
(bad)
(bad)
jmp
mov
cmp
sahf
dec
push
jb
scas
std
jns
sub
iret
or
sub
add
cmp
vcvtss2si
jmp
xor
dec
mov
cmp
pop
test
jge
dec
dec
(bad)
(bad)
(bad)
jmp
mov
or
in
sbb
push
out
imul
test
outs
jo
std
push
test
and
mov
cs
cmc
xchg
(bad)
jns
sbb
jg
in
jo
push
fist
test
nop
(bad)
(bad)
fbstp
cmps
mov
adc
adc
mov
daa
loop
mov
(bad)
(bad)
call
nop
mov
mov
mov
sub
push
repnz
aam
sub
test
mov
(bad)
call
cs
xor
sub
ja
out
ja
fwait
jle
cmp
sbb
push
or
dec
xchg
int3
or
add
fdiv
cmps
push
(bad)
addr16
lahf
retf
mov
(bad)
inc
mov
sbb
sub
cmp
pop
adc
mov
mov
loop
push
mov
sub
mov
shl
div
outs
mov
or
inc
jmp
jp
jmp
xchg
sub
je
jbe
sub
(bad)
(bad)
jmp
out
mov
jmp
mov
push
fwait
jmp
lahf
jo
mov
(bad)
(bad)
(bad)
(bad)
sti
sub
push
mov
leave
dec
cmps
mov
xor
and
and
out
adc
pushf
(bad)
(bad)
(bad)
dec
xor
cmc
sub
xor
pop
fmulp
mov
inc
iret
adc
(bad)
push
push
mov
mov
lods
cmp
fist
mov
jmp
add
(bad)
daa
retf
outs
xor
iret
mov
sub
sbb
add
or
shl
jns
mov
jmp
sti
sub
(bad)
sub
push
das
push
mov
sub
lods
ds
(bad)
(bad)
push
test
repz
leave
imul
mov
sti
sbb
mov
call
out
mov
mov
adc
mov
aam
test
or
ror
mov
sub
(bad)
(bad)
dec
jmp
jp
jp
jl
fild
out
retf
jle
add
addr16
fimul
(bad)
inc
(bad)
mov
movlps
push
mov
sub
mov
(bad)
(bad)
jmp
cmp
inc
movs
test
sahf
aad
jle
or
mov
outs
imul
les
daa
cmp
sbb
push
iret
or
jmp
jmp
xor
mov
mov
add
mov
aas
cmps
sti
shl
dec
ds
iret
(bad)
cmp
inc
aam
dec
pusha
(bad)
jno
iret
(bad)
and
shl
xchg
adc
call
sbb
lahf
push
stc
rol
sub
cmp
xchg
scas
mov
(bad)
sub
mov
mov
dec
push
inc
fwait
bound
call
sub
movsx
inc
dec
(bad)
or
aas
cmp
mov
cld
push
mov
ds
mov
div
nop
(bad)
mov
dec
ss
xor
dec
cli
ins
and
sbb
js
aas
jmp
(bad)
cmps
fisttp
call
adc
stos
ins
loope
sub
lods
pop
mov
push
xlat
xchg
cmp
lea
call
(bad)
(bad)
(bad)
jg
jmp
mov
xor
xchg
mov
mov
push
or
mov
movs
jle
and
test
test
mov
call
and
test
mov
mov
xor
pop
enter
lock
imul
inc
xchg
jns
test
xor
sti
push
test
xlat
or
or
jmp
mov
in
cmc
cs
ins
sub
xchg
jb
mov
push
test
pop
inc
mov
add
xchg
mov
mov
dec
dec
xor
into
daa
mov
(bad)
push
ror
out
sub
pusha
imul
adc
loopne
ss
xchg
scas
stos
mov
inc
cmp
lahf
movs
(bad)
es
(bad)
in
jp
lahf
and
cmps
lock
jp
(bad)
(bad)
call
scas
xchg
jmp
inc
or
sti
mov
mov
shl
xchg
cld
(bad)
(bad)
mov
jmp
cmps
xchg
add
stc
cmp
jg
pushf
fsubr
jnp
(bad)
or
cmp
ja
std
clc
cmp
(bad)
mov
les
adc
mov
pop
mov
ror
enter
(bad)
inc
sub
push
stc
jge
outs
out
mov
cmp
pop
in
int
jmp
or
push
mov
mov
or
sub
jg
outs
fistp
pop
jae
in
sub
sub
jmp
shr
cmp
les
dec
stos
pop
inc
(bad)
adc
dec
push
sub
cli
popa
mov
jecxz
rcr
outs
and
int3
cmp
sub
bound
mov
jmp
cli
jg
xor
and
dec
(bad)
mov
stos
mov
xchg
dec
jl
cli
xchg
and
sbb
dec
loope
retf
push
inc
sub
sahf
std
test
jo
jno
dec
sbb
push
cmp
mov
cs
push
mov
jecxz
add
repz
imul
fdivr
(bad)
dec
les
das
or
enter
scas
(bad)
sub
cmps
sbb
iret
fstp
mov
mov
(bad)
(bad)
(bad)
jp
jecxz
push
imul
adc
cmps
lea
retf
dec
xor
dec
or
sbb
rol
lds
jns
in
std
sbb
inc
and
mov
sbb
jmp
pusha
pop
imul
sar
test
and
call
fsubr
mov
push
iret
pop
fcomp
mov
xor
fmul
inc
and
(bad)
mov
ins
out
imul
js
shl
mov
jecxz
jecxz
push
fadd
xchg
mov
xchg
fcomip
(bad)
inc
loop
pop
and
cwde
out
and
lods
or
cmp
xor
fidiv
jmp
cmp
jl
mov
mov
jmp
(bad)
add
stos
add
lods
(bad)
(bad)
(bad)
jmp
scas
push
test
sub
push
fimul
mov
retf
sub
cli
lods
inc
cdq
call
call
idiv
pop
jmp
into
sbb
dec
aas
das
pop
imul
ret
(bad)
call
xlat
fsubr
adc
andnps
or
dec
xchg
fist
mov
scas
jo
das
(bad)
(bad)
(bad)
call
sbb
cli
test
or
xchg
cmp
and
enter
push
call
jmp
push
xor
or
xlat
stc
or
sub
rol
mov
jp
mov
(bad)
(bad)
(bad)
dec
sbb
cmp
mov
rcl
arpl
repnz
xchg
mov
stos
loop
adc
cmps
fnstsw
sbb
(bad)
(bad)
mov
or
or
leave
loope
out
push
leave
mov
dec
push
iret
add
xchg
and
scas
cmps
push
enter
(bad)
cmp
stos
lock
ins
(bad)
out
mov
call
mov
jns
(bad)
(bad)
(bad)
dec
idiv
stos
into
adc
out
lea
enter
sub
jmp
int
cmc
dec
fisub
adc
inc
(bad)
mov
dec
(bad)
mov
xlat
jmp
(bad)
(bad)
(bad)
mov
test
icebp
adc
xchg
dec
test
mov
or
mov
add
mov
inc
stos
scas
push
and
outs
stc
dec
out
mov
push
jb
call
js
mov
cli
repnz
or
mov
add
jmp
mov
push
mov
add
loope
xchg
iret
sar
inc
jecxz
dec
push
mov
add
or
je
cmp
cs
(bad)
aaa
std
(bad)
(bad)
call
retf
popf
ror
aaa
in
or
sub
jmp
cmps
call
sub
jmp
sbb
call
bound
in
mov
or
stos
cwde
popa
into
stos
adc
add
dec
xchg
dec
sbb
outs
int3
mov
(bad)
in
lods
xchg
(bad)
(bad)
(bad)
(bad)
sbb
pop
call
xchg
and
jp
sub
push
mov
pop
or
(bad)
(bad)
(bad)
(bad)
sahf
sub
push
retf
test
das
xchg
cs
cdq
xor
ins
ds
or
lahf
adc
jmp
test
dec
call
js
cmps
stos
push
ds
mov
imul
cld
(bad)
inc
clc
loop
xor
fwait
push
icebp
(bad)
(bad)
mov
cmc
repz
xor
jg
sub
dec
fsub
adc
xchg
stos
into
mov
(bad)
(bad)
(bad)
call
pop
mov
(bad)
stos
push
mov
cmc
dec
call
sbb
add
clc
(bad)
(bad)
jmp
sub
(bad)
movs
scas
in
retf
lock
stos
adc
sahf
jp
mov
jnp
sbb
push
mov
shr
mov
arpl
inc
cld
mov
push
retf
ja
popa
adc
jg
dec
mov
(bad)
jmp
aad
inc
sub
cmp
stos
(bad)
dec
test
cdq
adc
sub
pop
js
imul
(bad)
sahf
xor
xor
dec
clc
out
stos
stc
mov
jg
dec
adc
(bad)
push
sbb
inc
enter
shl
(bad)
(bad)
(bad)
jmp
call
cmp
mov
sub
mov
(bad)
mov
(bad)
dec
fld
(bad)
push
adc
rcl
retf
xchg
(bad)
mov
mov
sbb
call
mov
stos
lock
(bad)
jmp
imul
into
xor
sub
push
dec
xchg
retf
call
repnz
mov
or
mov
in
call
clc
call
jle
mov
or
mov
popa
leave
adc
pop
stos
leave
(bad)
push
cld
or
jo
pop
mov
ins
jmp
test
test
dec
cmp
jg
aam
mov
and
aad
dec
push
dec
xor
in
push
mov
movs
sub
add
sbb
sub
jp
(bad)
(bad)
(bad)
mov
mov
sbb
ins
nop
fsub
movs
add
addr16
jmp
jmp
stos
std
fld
enter
ds
mov
dec
mov
mov
lods
retf
mov
cvtps2pd
add
xchg
adc
pop
bound
lea
cmp
(bad)
(bad)
jmp
cmp
lods
das
and
sub
mov
mov
dec
push
mov
or
sbb
mov
push
je
movs
jl
iret
popa
sbb
das
clc
(bad)
jmp
or
aaa
(bad)
mov
xlat
fimul
inc
sbb
jb
push
into
sbb
(bad)
call
and
inc
mov
adc
test
cli
sub
popa
out
cmps
cmp
ins
mov
mov
(bad)
jne
dec
scas
and
cli
int3
jb
and
push
in
and
mov
pop
rol
scas
and
lock
inc
cdq
bound
pushf
iret
adc
adc
bound
jno
cmc
stos
(bad)
dec
test
hlt
retf
xchg
js
test
daa
sbb
(bad)
loop
mov
cmc
inc
add
adc
cli
(bad)
(bad)
jmp
sbb
loop
clc
pop
pushf
sti
mov
or
dec
or
or
call
mov
ins
xor
bound
jmp
enter
fs
cmp
fstp
adc
test
(bad)
jle
mov
in
push
dec
dec
xor
repnz
sub
push
mov
cmps
outs
or
adc
fldenv
inc
in
out
mov
loop
ins
ins
arpl
mov
(bad)
(bad)
(bad)
(bad)
clc
in
mov
jnp
pop
cmp
shr
push
and
sub
std
cmp
push
les
sub
ss
ret
inc
mov
pop
les
mov
sbb
test
clc
mov
mov
(bad)
(bad)
mov
test
pop
push
dec
or
dec
nop
test
pop
(bad)
out
inc
ja
lods
xor
sbb
movs
cmps
std
jmp
or
xchg
(bad)
sub
ret
(bad)
ror
loope
aaa
dec
mov
and
sbb
test
das
mov
or
inc
loop
(bad)
(bad)
dec
dec
or
out
mov
add
cmp
in
fcmove
scas
and
nop
stos
adc
(bad)
(bad)
jmp
leave
ins
cmp
cli
xor
mov
mov
ins
retf
jmp
(bad)
sbb
jo
scas
retf
cld
out
fmul
outs
push
push
inc
loopne
inc
cs
push
in
retf
dec
(bad)
sbb
pop
jo
pop
popf
call
lods
pop
mov
mov
es
mov
dec
add
mov
iret
lahf
pop
jmp
cmc
(bad)
jmp
and
mov
jp
rol
mov
jmp
and
out
xchg
inc
and
das
shrd
dec
sbb
(bad)
(bad)
push
jae
sahf
jns
cmps
test
(bad)
fidiv
mov
sbb
mov
call
(bad)
cli
movs
jno
and
adc
test
sbb
(bad)
mov
dec
(bad)
(bad)
dec
cdq
fimul
add
push
in
pop
daa
mov
out
retf
fcomp
sahf
movs
cli
fcomip
call
push
and
mov
sbb
addr16
mov
pop
sti
jb
mov
ja
(bad)
push
cwde
push
enter
imul
mov
mov
(bad)
jmp
sub
in
call
cs
call
cdq
scas
das
js
or
jnp
hlt
xor
enter
mov
xchg
and
fwait
rcl
mov
out
mov
(bad)
mov
or
xchg
outs
outs
and
cld
in
xor
ja
sar
shr
das
add
sub
mov
(bad)
(bad)
push
push
mov
(bad)
(bad)
pop
or
mov
shl
mov
es
(bad)
(bad)
jmp
mov
sub
jl
jo
mov
dec
sahf
int3
dec
(bad)
mov
sbb
adc
lods
(bad)
(bad)
push
outs
scas
xchg
xor
pop
hlt
mov
dec
shr
push
or
icebp
(bad)
jmp
cmp
pop
imul
sbb
mov
loop
add
cmps
repnz
mov
into
cdq
imul
mov
add
retf
out
sbb
jmp
mov
push
push
repnz
mov
xor
les
pop
mov
imul
jae
std
jmp
inc
(bad)
(bad)
(bad)
(bad)
mov
mov
or
movs
pop
mov
dec
mov
nop
sub
call
out
adc
(bad)
(bad)
(bad)
push
dec
cmp
pusha
out
pop
addr16
pop
out
loopne
jne
test
outs
test
cmp
(bad)
(bad)
(bad)
jmp
jo
or
sbb
inc
push
rcl
dec
xchg
mov
in
xchg
jne
mov
jg
mov
test
pop
jp
dec
daa
sub
outs
ror
(bad)
(bad)
(bad)
(bad)
mov
test
fsubr
hlt
out
jmp
imul
sbb
(bad)
(bad)
(bad)
dec
aas
cli
dec
aam
sahf
dec
dec
sbb
es
test
push
mov
(bad)
(bad)
(bad)
call
ja
std
mov
outs
jno
sub
pop
mov
push
inc
adc
and
cli
(bad)
dec
mov
add
adc
dec
ins
pusha
std
(bad)
std
cli
clc
(bad)
inc
mov
sub
mov
out
xor
outs
cdq
je
scas
adc
je
jp
test
(bad)
jmp
(bad)
(bad)
xor
adc
fs
adc
(bad)
(bad)
jmp
and
cmps
jmp
out
mov
pop
icebp
(bad)
call
xchg
sub
add
sbb
cmp
mov
or
push
jmp
stc
jmp
adc
mov
xor
sahf
pop
jmp
(bad)
dec
and
(bad)
(bad)
call
push
cmp
cmp
cmps
or
(bad)
jmp
rcr
push
pusha
fbld
out
cs
(bad)
(bad)
dec
fisttp
mov
lods
push
mov
repz
nop
dec
or
pop
(bad)
call
push
mov
push
in
lahf
mov
ins
icebp
jp
cmp
out
xchg
cmps
sub
(bad)
fldenv
div
imul
std
(bad)
(bad)
jg
pop
leave
les
xor
or
das
cs
int
adc
or
call
hlt
repz
sub
ss
nop
cmp
(bad)
jmp
mov
dec
js
xlat
mov
std
cmp
xchg
pop
sub
mov
mov
(bad)
cmp
sub
loop
call
push
je
pop
xchg
push
jne
mov
jns
(bad)
jg
dec
loopne
fmul
mov
adc
clc
lods
pop
(bad)
(bad)
(bad)
jmp
xchg
iret
or
sbb
pop
cwde
xchg
out
das
cs
sbb
mov
inc
push
(bad)
inc
or
jle
or
in
xchg
loopne
cmp
aam
outs
push
(bad)
cmps
icebp
pop
sub
pusha
pop
inc
xchg
mov
sbb
dec
mov
mov
and
in
fsub
ficom
sub
imul
dec
and
or
(bad)
(bad)
fucomi
pop
sbb
cld
push
test
pop
(bad)
lods
fcom
pop
pop
es
ret
push
stos
sbb
and
and
jge
jne
push
pop
outs
cmp
loope
dec
std
leave
popa
mov
mov
push
or
(bad)
(bad)
mov
and
and
sar
test
mov
fcom
ins
xlat
out
stos
call
enter
(bad)
scas
mov
jnp
push
xchg
mov
out
out
repnz
cld
test
(bad)
call
outs
(bad)
outs
pop
pushf
aaa
push
ror
push
pop
outs
push
fs
movs
jbe
push
jmp
or
loop
xchg
addr16
in
rcl
mov
shl
test
mov
mov
lea
scas
and
mov
inc
xchg
jmp
mov
mov
mov
daa
sub
aaa
mov
adc
mov
jmp
pop
pusha
push
xor
fwait
loop
(bad)
call
retf
loope
out
shr
ds
xchg
retf
shl
jle
cmc
(bad)
js
ret
test
lods
mov
lahf
retf
lods
ss
and
mov
xor
sbb
call
and
mov
inc
stos
pop
or
fs
icebp
cld
(bad)
(bad)
inc
ins
ret
aad
or
jmp
cld
cmps
cwde
and
sbb
inc
fwait
pusha
adc
data16
cdq
push
jecxz
(bad)
dec
push
xchg
popf
in
cmps
mov
mov
pop
jb
leave
cmps
jb
ds
push
ficom
rol
sahf
jmp
sub
xchg
adc
adc
pusha
dec
pop
test
into
fst
imul
sub
inc
aad
fstp
xor
mov
xchg
add
push
add
push
into
sub
fdivrp
inc
push
(bad)
mov
ret
fdivr
cmp
jle
xor
(bad)
(bad)
(bad)
jmp
mov
lea
xor
and
loope
(bad)
fild
lods
and
add
inc
clc
(bad)
(bad)
jmp
iret
imul
push
clc
shr
push
or
leave
dec
or
sbb
test
push
ins
cmps
add
sbb
mov
jg
adc
repnz
mov
mov
push
out
popa
les
lock
outs
sti
retf
out
mov
cld
(bad)
(bad)
dec
enter
jns
mov
cmp
mov
mov
lea
mov
dec
dec
(bad)
jmp
enter
mov
mov
(bad)
dec
mov
inc
push
ror
in
call
inc
sub
mov
lock
ss
fcomip
mov
jg
cwde
xchg
mov
mov
ret
pop
shl
ret
push
sbb
fimul
inc
mov
(bad)
sub
sar
dec
stos
hlt
(bad)
(bad)
call
sub
inc
xchg
out
ds
jo
cmp
mov
jmp
xchg
cmp
push
mov
call
xchg
pop
bound
and
sub
jbe
cli
lods
outs
gs
into
loope
push
(bad)
(bad)
(bad)
jmp
ins
and
cmp
xchg
sbb
jecxz
mov
lds
jg
pop
cmps
mov
inc
xchg
test
jo
(bad)
(bad)
push
pop
xchg
(bad)
mov
lods
cli
mov
sar
cs
dec
pop
hlt
(bad)
push
pop
pop
mov
pop
sub
inc
scas
les
loop
xor
(bad)
(bad)
mov
mov
and
dec
sar
das
shl
(bad)
sub
cmps
or
pop
lock
call
jnp
nop
or
push
sub
out
xchg
das
popa
(bad)
ins
inc
iret
lods
mov
pop
cld
(bad)
push
push
push
mov
retf
scas
pusha
lods
mov
ss
lds
(bad)
(bad)
fstp
jmp
outs
test
jmp
mov
clc
fild
(bad)
xchg
and
mov
les
fsubr
into
mov
pop
mov
mov
gs
jns
dec
cmp
xchg
and
pop
mov
shr
mov
movs
jmp
(bad)
sbb
movs
call
jns
(bad)
jmp
sbb
or
fs
jp
pushf
xor
mov
in
inc
or
shl
iret
jmp
cmp
fisubr
mov
sbb
(bad)
(bad)
jmp
xchg
lods
ror
mov
arpl
xchg
cmp
(bad)
(bad)
call
dec
sub
mov
cmc
xor
or
dec
add
mov
mov
jne
(bad)
(bad)
dec
pop
sbb
(bad)
repnz
or
sub
sub
call
stos
dec
shl
pop
(bad)
(bad)
(bad)
jmp
fist
jae
mov
inc
lods
jp
xchg
xor
dec
mov
stos
adc
out
cmp
das
cli
call
fucomp
push
jmp
out
add
iret
ret
mov
aaa
(bad)
(bad)
jmp
jmp
mov
clc
jp
mov
ds
jp
or
in
xchg
in
(bad)
inc
push
jge
call
xchg
xor
mov
clc
out
stos
xchg
dec
sbb
or
sub
adc
xor
cmps
outs
pop
sub
jg
jmp
inc
adc
call
into
fisubr
sbb
retf
mov
sub
inc
xor
pop
(bad)
jge
mov
mov
mov
fld
int3
outs
fist
scas
add
(bad)
fisubr
call
daa
push
mov
aaa
mov
and
stos
jmp
loope
mov
test
iret
xchg
shrd
clc
mov
pop
xchg
stos
pop
clc
add
hlt
mov
sub
jnp
mov
sbb
out
and
jmp
mov
bound
mov
dec
or
dec
(bad)
jg
(bad)
popf
xor
dec
push
xchg
pop
push
pop
repnz
push
and
sbb
sub
test
mov
arpl
pushf
sub
mov
adc
cs
daa
lods
shr
(bad)
(bad)
in
mov
mov
push
xor
fsubr
into
bound
aam
(bad)
(bad)
call
inc
inc
xor
test
pop
xchg
mov
mov
(bad)
hlt
scas
add
(bad)
mov
(bad)
loopne
call
mov
leave
pop
cs
xor
scas
push
mov
outs
mov
jmp
(bad)
(bad)
dec
pop
loop
mov
lock
cmp
scas
add
daa
sbb
daa
mov
pop
(bad)
jno
imul
int
icebp
jmp
nop
daa
mov
cwde
sbb
inc
loop
ins
cwde
(bad)
and
and
imul
or
(bad)
(bad)
jmp
shr
test
gs
fwait
test
scas
sub
mov
push
(bad)
(bad)
inc
jmp
sub
xabort
hlt
ins
adc
or
push
clc
jmp
sti
test
xchg
retf
cmc
stc
outs
cmp
shl
ins
outs
pop
call
dec
fldenv
sub
mov
add
mov
xlat
lea
pop
das
mov
sub
pop
jp
popa
cwde
mov
movs
jp
loopne
lea
or
out
and
jb
hlt
(bad)
(bad)
(bad)
jg
test
cmp
mov
pop
mov
inc
rcr
dec
mov
ds
cs
repnz
mov
pushf
pop
mov
inc
jg
fs
mov
cmps
pop
and
jp
inc
xchg
push
pop
lock
jmp
push
adc
fiadd
mov
test
lods
sub
pop
cld
(bad)
jmp
or
mov
mov
xlat
mov
rcr
mov
jmp
mov
(bad)
(bad)
(bad)
fbstp
jmp
pop
iret
sbb
das
mov
out
cmp
lods
lods
and
cmp
lods
scas
jg
jg
sbb
mov
scas
ftst
stos
out
cmps
cdq
lahf
mov
cli
push
sbb
je
sub
dec
scas
dec
inc
add
or
add
(bad)
(bad)
(bad)
jmp
mov
scas
cmp
jo
test
test
(bad)
jbe
xchg
jnp
mov
mov
ins
bound
test
cwde
pop
repnz
xchg
fbld
jmp
or
push
sbb
dec
retf
xchg
adc
mov
(bad)
fwait
lods
clc
call
(bad)
(bad)
jmp
jnp
nop
or
adc
lahf
dec
jns
loope
cmps
sub
outs
or
mov
test
adc
into
or
xchg
jbe
(bad)
lahf
jmp
icebp
xchg
cmps
xchg
push
xchg
adc
sbb
into
push
mov
imul
loopne
call
mov
xor
push
mov
jmp
in
(bad)
(bad)
cmp
pop
(bad)
sbb
into
or
je
into
xchg
cmp
xor
pusha
pop
xor
jmp
add
inc
retf
mov
cs
sbb
adc
(bad)
jmp
jne
out
movs
cmp
inc
push
and
push
repnz
jb
and
xor
sub
or
loopne
cmovge
(bad)
(bad)
call
cmps
stos
leave
mov
push
mov
mov
mov
jmp
in
test
retf
arpl
fisub
dec
jns
clc
jg
push
lods
gs
lods
pop
fistp
shl
test
lea
cmc
jnp
loop
(bad)
sub
hlt
outs
sbb
sub
jmp
inc
inc
push
(bad)
imul
in
mov
mov
loope
cli
sbb
xor
movs
fs
push
jmp
dec
arpl
jmp
push
mov
inc
push
outs
dec
push
push
stc
fldcw
fdiv
mov
mov
lods
call
inc
ror
jle
sub
mov
(bad)
(bad)
(bad)
call
mov
xchg
jle
add
dec
xor
mov
test
in
xchg
movs
in
ror
cmp
push
arpl
xchg
retf
nop
dec
and
cmp
push
shl
mov
jg
cmps
int3
in
push
out
lahf
call
inc
dec
mov
or
mov
rcr
(bad)
call
and
mov
retfw
adc
icebp
mov
mov
jp
cmp
cs
sub
cmp
cmp
mov
cmp
adc
xor
sar
(bad)
(bad)
out
rcl
iret
icebp
jle
xchg
imul
clc
arpl
enter
(bad)
fnstsw
call
pop
stos
fsubr
pop
lahf
fs
mov
movs
and
pushf
mov
mov
test
pop
imul
or
mov
outs
sbb
sbb
pop
cdq
cli
xchg
leave
pop
push
mov
push
pop
mov
iret
jmp
xor
pop
push
out
add
pop
sub
mov
cld
pop
loopne
repnz
ja
outs
jnp
imul
ror
(bad)
(bad)
cmp
retf
popa
sub
not
gs
mov
int3
dec
cld
fistp
clc
fbld
push
inc
jmp
call
mov
call
push
mov
sub
cmp
lea
fimul
jbe
and
push
pop
mov
push
popf
jmp
sbb
push
push
call
fsubr
sub
sbb
dec
push
lock
mov
mov
push
pop
in
sub
lods
es
cs
int3
pop
push
jle
pop
lods
adc
fsubrp
test
arpl
not
pop
jl
jmp
out
jmp
std
(bad)
pop
mov
pop
or
mov
sub
push
imul
adc
clc
pop
push
mov
(bad)
jmp
dec
push
lods
jmp
sti
maxps
sbb
mov
add
cmps
pop
push
push
in
mov
dec
(bad)
aaa
jb
sub
shr
jg
test
sbb
cld
jb
and
push
or
cs
aaa
xchg
loop
or
mov
push
jb
(bad)
ins
pop
sti
jbe
inc
cbw
and
fild
xor
ret
mov
push
sbb
and
dec
movs
fstp
stos
and
(bad)
mov
pop
mov
ret
(bad)
dec
push
ret
add
mov
push
imul
cmps
mov
mov
dec
je
pop
mov
scas
jge
jmp
test
scas
push
mov
out
or
mov
mov
xchg
mov
(bad)
dec
outs
fisttp
retf
mov
cmc
mov
aad
and
out
lahf
hlt
push
call
inc
(bad)
mov
das
(bad)
(bad)
(bad)
mov
xor
xchg
xchg
out
xchg
ds
push
fmulp
fwait
adc
sti
mov
push
int3
jg
test
push
idiv
or
or
mov
lea
or
adc
jg
inc
into
mov
aaa
jbe
jecxz
dec
mov
push
repnz
lods
les
cmp
fstp
fsubrp
mov
movhlps
ret
cmp
mov
pop
push
push
into
scas
mov
pop
add
push
out
or
in
jmp
in
push
pop
pop
lock
xor
out
sub
jecxz
push
push
test
out
and
push
or
jmp
dec
je
(bad)
pop
and
cmp
mov
push
cmp
test
(bad)
mov
retf
add
xlat
push
loop
outs
fcom
leave
or
fsubr
pushf
ins
dec
fimul
jg
call
popa
inc
fisttp
sbb
(bad)
(bad)
push
call
xchg
mov
pop
iret
popf
scas
mov
jb
ficom
fistp
cli
cmp
call
outs
(bad)
(bad)
(bad)
fistp
icebp
mov
aas
into
in
cmp
iret
es
pop
retf
jmp
cld
ins
test
(bad)
(bad)
inc
sbb
rcr
add
out
mov
in
rcl
(bad)
mov
sbb
aaa
jge
test
or
imul
jmp
(bad)
(bad)
jmp
push
daa
push
mov
jnp
mov
movs
jge
cdq
xchg
cmps
loop
fstp
cmp
mov
mov
imul
les
sub
mov
(bad)
(bad)
(bad)
out
pop
mov
mov
cmp
xchg
sbb
pop
cmp
dec
pop
shl
xchg
lea
icebp
into
out
dec
mov
cmp
push
push
sub
sub
cmp
call
mov
mov
in
jnp
mov
(bad)
out
shl
fcomip
or
or
xor
lock
(bad)
lea
dec
dec
jmp
(bad)
bound
and
and
imul
pop
pop
mov
cmp
xchg
mov
scas
pop
into
pop
sahf
add
aad
jmp
ss
jmp
mov
pop
mov
lods
cmp
mov
out
mov
call
rol
dec
and
(bad)
(bad)
out
mov
mov
mov
jae
neg
lods
mov
ret
and
inc
cdq
pop
fisub
mov
(bad)
(bad)
jg
dec
fwait
sub
sbb
cli
repnz
pushf
sub
mov
pop
and
mov
or
pop
loope
xor
cmp
sub
ret
loope
mov
jmp
xchg
imul
clc
shr
je
in
cld
jno
loope
jmp
pop
rcr
sbb
out
cld
out
adc
xor
cmps
cwde
push
(bad)
push
and
and
test
lods
mov
(bad)
leave
stos
pop
sbb
frstor
lock
cmps
mov
sahf
xor
(bad)
fild
mov
je
mov
int3
sub
or
(bad)
(bad)
(bad)
(bad)
cmp
das
outs
cmps
sub
in
cmp
std
repz
retf
sub
cwde
lock
bound
(bad)
(bad)
jmp
ret
aaa
xchg
cmc
ja
or
test
movs
pushf
mov
cmp
sub
push
and
(bad)
inc
jmp
ins
in
retf
mov
mov
in
lods
repz
jmp
dec
mov
stos
leave
pop
out
in
scas
adc
inc
push
mov
mov
pop
mov
dec
cs
mov
jmp
pop
enter
cmps
ds
inc
jbe
mov
icebp
mov
(bad)
jmp
data16
mov
xchg
test
push
jge
jle
adc
xchg
(bad)
push
call
cli
mov
(bad)
jg
fist
(bad)
mov
adc
mov
dec
retf
(bad)
fdiv
sub
or
cmc
dec
push
(bad)
jmp
scas
out
mov
xchg
sbb
ret
retf
enter
(bad)
(bad)
(bad)
call
pop
fst
iret
cmp
inc
call
int
mov
stos
jbe
sub
retf
or
(bad)
(bad)
jmp
jae
push
lods
xchg
mov
movs
sub
test
imul
stos
dec
into
repnz
cs
(bad)
(bad)
jmp
xchg
call
jmp
adc
out
push
sub
mov
loop
mov
cmp
xchg
out
add
outs
jmp
call
fcomip
out
sub
adc
or
sub
(bad)
mov
mov
gs
into
retf
inc
(bad)
in
(bad)
jmp
mov
xchg
sbb
scas
mov
sub
inc
mov
mov
out
loope
mov
sbb
xchg
mov
push
sub
push
lods
test
jp
and
xchg
mov
jl
sar
aaa
pop
mov
pop
call
in
xor
aam
inc
(bad)
(bad)
jmp
(bad)
loop
lea
mov
loope
and
bound
mov
and
cmp
jmp
mov
or
dec
dec
lods
(bad)
push
mov
call
add
mov
in
out
jo
jecxz
retf
loop
clc
inc
cld
and
push
stos
arpl
or
sub
inc
pop
cs
sub
fdivrp
call
mov
mov
ins
leave
sub
stc
ds
push
sbb
out
fadd
mov
dec
jns
lahf
mov
(bad)
mov
fs
push
sub
lahf
lahf
mov
out
std
pop
ins
ss
pop
pop
mov
sub
jecxz
jg
pop
pop
cdq
(bad)
(bad)
jmp
mov
es
jle
sub
xor
jmp
cmps
cld
movs
(bad)
(bad)
(bad)
dec
js
lock
loop
in
call
push
popa
cmp
fisubr
or
(bad)
in
inc
lahf
adc
std
cmc
push
push
jmp
cmp
cmp
(bad)
push
jecxz
int3
sub
stc
call
repnz
jb
pop
mov
out
and
push
and
loop
cmp
imul
inc
pop
sbb
pop
sub
pop
repnz
jg
call
loope
mov
pop
fidivr
mov
mov
jle
test
js
cwde
into
or
popf
push
and
(bad)
jmp
push
push
sti
sub
pop
pop
aaa
jb
fisub
enter
add
jmp
add
ins
mov
xor
inc
sub
lahf
sub
jb
and
dec
mov
push
(bad)
fwait
jmp
(bad)
(bad)
(bad)
(bad)
cld
jo
shl
in
cmc
daa
mov
xor
mov
pop
stos
sbb
jmp
mov
(bad)
in
idiv
pavgb
mov
add
cmp
loopne
cmp
sub
add
sbb
mov
jno
(bad)
(bad)
(bad)
(bad)
dec
stos
sub
test
fsubrp
ins
adc
std
aas
int
add
loopne
aas
das
adc
scas
cli
push
mov
or
fbstp
cmp
push
mov
cmps
sbb
(bad)
jb
dec
adc
movs
push
push
shl
add
and
add
icebp
jmp
mov
mov
sbb
stos
and
dec
cmp
dec
iret
push
mov
cdq
gs
lock
lds
inc
js
es
in
jmp
dec
scas
fadd
dec
mov
dec
dec
push
xlat
inc
clc
inc
js
adc
pop
pop
xchg
ret
cmp
aaa
or
(bad)
(bad)
jmp
dec
cmp
sbb
pop
and
hlt
sub
cmps
call
arpl
pushf
mov
imul
pop
test
imul
fimul
jmp
movs
in
cmps
(bad)
(bad)
(bad)
jmp
leave
xchg
lock
mov
sub
mov
mov
and
and
push
lock
fldcw
fldl2t
sahf
cs
push
pop
ret
jl
pop
inc
scas
addr16
sub
push
(bad)
call
mov
or
aad
rol
loop
jmp
push
ins
pop
(bad)
(bad)
jg
inc
or
neg
mov
jmp
sub
out
scas
cmps
test
push
lahf
(bad)
(bad)
(bad)
dec
test
pusha
add
out
(bad)
btc
lds
push
and
dec
or
ret
cld
std
dec
imul
inc
push
loopne
ds
(bad)
jmp
pop
xchg
fst
dec
sub
push
add
scas
pop
ror
xor
xchg
push
(bad)
call
dec
add
sbb
ins
and
ror
mov
mov
call
mov
inc
scas
imul
jno
fiadd
push
shr
jg
retf
sub
mov
dec
cmp
movs
leave
push
clc
aaa
jl
cld
(bad)
sbb
sbb
mov
test
adc
test
jbe
(bad)
stc
retf
push
push
test
mov
mov
sub
imul
or
mov
pusha
dec
fwait
(bad)
fcomip
pop
pop
inc
mov
scas
push
and
or
iret
mov
jbe
icebp
pop
loopne
mov
sub
aad
(bad)
(bad)
jmp
add
dec
xchg
js
fisub
arpl
xchg
mov
(bad)
clc
xor
(bad)
test
ja
mov
sbb
stos
scas
adc
dec
cli
inc
cli
mov
ss
mov
or
jmp
mov
loope
push
sbb
add
pop
(bad)
jmp
xchg
mov
std
ins
retf
lods
inc
pop
xor
fisttp
(bad)
(bad)
(bad)
mov
jmp
push
das
cmp
cmp
push
ins
js
fist
repnz
inc
call
pop
sub
fcomp
ficomp
mov
cmp
loopne
dec
test
test
movs
pop
jmp
fimul
jmp
dec
fs
pop
dec
in
pop
or
cmp
js
clc
cli
dec
outs
or
inc
or
sbb
xor
sahf
or
jb
sbb
(bad)
mov
sub
adc
add
(bad)
(bad)
jmp
outs
retf
(bad)
dec
sub
or
in
jo
xchg
fwait
dec
stos
popa
fist
(bad)
(bad)
(bad)
jmp
mov
aad
mov
icebp
icebp
add
pop
fwait
mov
fwait
fs
pop
popf
push
(bad)
(bad)
(bad)
jmp
mov
ins
pop
pop
retf
mov
xchg
inc
out
stos
push
push
test
adc
leave
in
add
or
call
mov
(bad)
dec
pop
mov
and
push
jmp
or
stc
mov
add
push
mov
dec
cld
(bad)
push
add
ds
retf
dec
mov
xor
xor
lahf
add
in
fbld
imul
cli
sub
and
jge
aam
jg
add
retf
ficom
ror
retf
jmp
fisub
xchg
mov
(bad)
fild
pop
imul
popa
lods
call
xchg
mov
sar
jg
mov
icebp
ins
adc
stc
mov
mov
adc
mov
shl
(bad)
jmp
jbe
movs
xchg
cli
adc
add
iret
xchg
(bad)
(bad)
(bad)
(bad)
jmp
push
test
inc
jmp
bts
rcl
ins
sub
(bad)
(bad)
(bad)
jmp
dec
cwde
pop
sbb
std
cli
adc
adc
jmp
fadd
imul
call
pop
push
nop
rcl
mov
(bad)
(bad)
call
jmp
ins
scas
adc
mov
stc
mov
fdivr
dec
lock
mov
or
push
sbb
in
dec
scas
xchg
scas
mov
mov
or
add
sub
pop
adc
repnz
cmc
mov
push
sub
adc
sub
(bad)
pop
and
sbb
pop
nop
xor
test
push
aam
repnz
lahf
ins
sbb
ret
enter
call
ins
fimul
jne
popf
mov
push
jge
push
push
fisubr
js
jb
jg
call
cmp
std
cs
and
fnstcw
adc
scas
cmp
mov
jae
outs
out
jbe
or
fcmovu
(bad)
outs
popf
addr16
into
or
cmp
inc
lahf
movs
ins
jg
scas
xor
jno
mov
(bad)
(bad)
(bad)
jmp
mov
dec
mul
(bad)
lahf
jo
scas
mov
es
dec
mov
pop
loopne
call
inc
pusha
sti
jmp
mov
sbb
or
cmp
cld
cmp
leave
and
lock
pop
aam
movs
repnz
mov
adc
call
jecxz
sub
jg
(bad)
cli
test
dec
add
pop
and
sar
add
(bad)
(bad)
(bad)
push
jb
fdivr
push
sub
push
mov
in
mov
(bad)
dec
lock
jmp
sub
push
cpuid
popf
mov
jmp
bound
(bad)
jmp
cmp
fcomp
jne
sahf
jle
cmps
in
add
in
std
ja
jmp
call
sub
sub
cli
(bad)
mov
xchg
inc
(bad)
in
(bad)
in
jno
cdq
in
jae
movs
xor
fnstcw
push
(bad)
(bad)
(bad)
cmp
jmp
sbb
int3
aaa
cmps
mov
ja
sbb
add
jecxz
sub
or
cmp
push
shl
sbb
jmp
cmc
jb
frndint
mov
mov
std
(bad)
jmp
clc
iret
lahf
push
hlt
leave
mov
push
sahf
lock
mov
cwde
out
inc
pusha
jb
cmps
adc
(bad)
shl
xchg
je
xor
push
cld
or
jge
jo
mov
call
or
push
hlt
cs
cmps
popa
or
loopne
cmps
out
out
js
stos
or
push
mov
add
aad
int
scas
xor
loope
mov
call
jg
mov
fisttp
sub
into
add
sbb
test
(bad)
call
or
push
loope
mov
pop
cli
(bad)
push
in
jb
fidiv
add
loopne
add
das
cld
test
and
(bad)
(bad)
(bad)
mov
dec
imul
dec
das
dec
(bad)
stos
sub
lea
iret
retf
mov
mov
(bad)
(bad)
call
mov
dec
ret
sub
jno
xor
sub
test
cmp
xor
mov
ins
ret
or
dec
and
mov
mov
pop
mov
xchg
pop
inc
scas
stos
sub
adc
or
cld
sub
(bad)
bound
xor
das
das
test
add
mov
mov
pop
(bad)
push
mov
leave
mov
mov
dec
call
pop
sub
aaa
add
mov
or
gs
cli
(bad)
(bad)
jmp
(bad)
(bad)
mov
push
jmp
mov
mov
mov
sub
aad
dec
(bad)
cmp
jp
lahf
sub
fisubr
ror
mov
(bad)
(bad)
(bad)
dec
sbb
inc
scas
jo
(bad)
loop
rol
repz
xchg
(bad)
bound
ins
fist
inc
add
and
mov
cmps
out
pop
cs
sub
in
cmp
xchg
pop
jmp
fcmove
xor
sub
jo
cmp
pop
and
call
movs
sti
jae
mov
fcom
bnd
mov
das
sti
sub
in
cmp
jmp
sub
shl
(bad)
jmp
sub
nop
int
sti
or
fwait
adc
in
out
(bad)
jmp
ins
loop
lods
mov
stos
addr16
scas
mov
aaa
cdq
ret
(bad)
sbb
jl
sbb
push
(bad)
(bad)
jmp
in
idiv
mov
mov
stmxcsr
cli
lods
je
mov
xchg
push
cld
lahf
mov
jl
fdiv
(bad)
(bad)
(bad)
inc
les
add
sbb
sti
mov
xlat
adc
inc
(bad)
out
(bad)
(bad)
(bad)
call
adc
outs
clc
or
or
loopne
fisttp
pop
pop
jle
scas
pop
(bad)
(bad)
(bad)
jmp
daa
dec
or
arpl
in
fcomp
call
mov
dec
fs
ja
je
(bad)
(bad)
(bad)
jmp
imul
sbb
dec
mov
pop
push
sbb
std
xchg
jge
jne
xchg
icebp
push
cld
xchg
enter
mov
(bad)
dec
popa
jg
pop
dec
stc
xchg
(bad)
mov
loopne
std
xor
(bad)
(bad)
jg
call
xchg
out
scas
cli
push
cs
stos
(bad)
mov
mov
sub
sub
(bad)
out
add
cmps
pop
xlat
cmp
jmp
aaa
retf
dec
iret
daa
mov
xchg
push
repnz
mov
mov
inc
or
ret
or
call
fild
enter
call
cmp
(bad)
jg
push
pop
popa
add
loop
pushf
adc
cmp
mov
and
or
and
(bad)
inc
fmul
in
pop
jmp
jmp
sub
xchg
bound
std
(bad)
(bad)
call
push
push
jb
inc
(bad)
mov
and
dec
loopne
push
fwait
pop
call
sub
(bad)
call
cmp
iret
push
jnp
retf
and
loopne
mov
jno
inc
jg
(bad)
call
xor
scas
stos
ins
pop
sub
movs
retf
push
stos
std
cmp
sar
jmp
mov
sti
shl
push
cli
(bad)
(bad)
dec
sbb
pushf
add
sbb
enter
pop
push
stos
dec
mov
sub
dec
xor
push
mov
call
push
xor
sbb
cmp
iret
div
(bad)
(bad)
inc
mov
sub
shr
sub
mov
jns
idiv
mov
fiadd
or
xor
iret
jns
mov
sbb
jp
sub
mov
aad
xor
(bad)
mov
or
pop
jl
jmp
xor
mov
pop
hlt
push
add
or
sub
mov
(bad)
(bad)
(bad)
jmp
cmp
cmp
(bad)
xlat
stc
jnp
into
push
mov
mov
adc
loop
mov
dec
jle
jb
sub
jle
call
and
out
mov
retf
xor
movs
and
xchg
mov
in
lahf
(bad)
mov
dec
pop
scas
fld
push
inc
test
daa
cmps
fwait
es
and
mov
push
sub
(bad)
(bad)
jmp
call
sub
pop
push
dec
jo
cmc
daa
jle
popf
adc
mov
xchg
(bad)
jmp
pop
cmp
movs
test
pop
fsub
scas
lods
scas
push
shl
ficom
mov
mov
(bad)
jmp
daa
mov
cs
jecxz
es
jmp
test
sub
icebp
outs
xor
push
pop
arpl
mov
shr
mov
jmp
div
xchg
fcmovbe
call
dec
sub
jmp
stos
mov
or
sub
mov
push
cdq
(bad)
jg
call
push
xor
jmp
and
xchg
jmp
mov
(bad)
ret
test
mov
(bad)
(bad)
call
ss
inc
mov
sbb
jb
jg
jno
mov
(bad)
adc
lock
inc
sub
outs
outs
(bad)
cmp
mov
jg
jmp
dec
pop
mov
xchg
jns
(bad)
mov
ret
(bad)
call
hlt
out
fst
call
adc
fwait
ins
test
(bad)
xor
ja
mov
pop
and
pop
cwde
sub
or
aad
rcl
mov
mov
sbb
inc
sub
mov
(bad)
cld
mov
push
jns
mov
rcl
in
push
scas
mov
jae
clc
call
test
les
mov
push
lds
or
jmp
mov
cmp
loope
push
mov
leave
dec
mov
(bad)
inc
inc
sub
call
cwde
scas
and
sbb
shr
xor
loopne
sbb
fist
push
fisub
xor
add
sub
and
add
dec
mov
mov
gs
dec
call
mov
and
mov
dec
mov
mov
push
call
pop
sub
stos
mov
(bad)
fldcw
repz
mov
add
sbb
push
pop
push
idiv
mov
ins
out
or
cmp
add
shr
je
cmp
(bad)
call
pop
stos
inc
cmp
into
sub
stos
or
mov
lods
loop
mov
and
inc
movs
xchg
add
outs
rcl
sbb
sar
pop
push
enter
addr16
xchg
fstp
outs
cmp
int3
sub
cmp
sub
into
xchg
push
in
out
cli
inc
jmp
(bad)
xchg
shr
ret
mov
sub
inc
pop
movs
stos
cli
sub
jmp
add
es
sahf
jns
repnz
jmp
imul
imul
clc
push
imul
and
mov
(bad)
dec
add
pop
mov
aam
dec
xchg
mov
jmp
xchg
(bad)
push
test
fisub
sar
xlat
out
sbb
ror
or
aad
iret
js
(bad)
(bad)
jmp
loop
shr
in
jle
mov
mov
jns
jecxz
(bad)
(bad)
fisttp
outs
inc
mov
cs
stos
cwde
fld
imul
add
push
mov
sahf
pop
mov
xchg
(bad)
retf
inc
cmp
fldcw
adc
jmp
fmul
dec
popa
fisub
sti
sbb
mov
xor
adc
fimul
inc
xchg
add
mov
lods
ja
test
or
mov
lock
push
adc
mov
jmp
(bad)
inc
dec
sbb
loopne
cmps
movsx
dec
test
mov
mov
cmp
(bad)
(bad)
(bad)
mov
loop
push
mov
stos
iret
cwde
jo
stos
jo
mov
xchg
(bad)
(bad)
mov
daa
cmp
adc
mov
test
jmp
xor
cmc
mov
jle
(bad)
fsubrp
aas
mov
pop
call
retf
add
jg
push
clc
loope
out
sub
call
(bad)
jmp
das
test
xor
(bad)
(bad)
push
movs
sahf
aad
test
movs
stos
inc
cli
add
xchg
pop
sub
pop
dec
fcomip
pop
hlt
xor
loope
push
fidivr
scas
xchg
js
(bad)
(bad)
call
test
loop
pop
mov
stos
mov
mov
(bad)
(bad)
(bad)
jmp
stc
fldcw
test
leave
cmp
stos
lea
jnp
stos
out
rol
cld
(bad)
(bad)
dec
jb
add
mov
cmp
bound
fdivr
loope
and
aaa
pushf
addr16
rcl
fcomp
(bad)
adc
(bad)
call
mov
(bad)
jg
inc
and
jp
push
inc
push
in
pop
pop
cmp
fsubr
hlt
pop
pop
mov
dec
jg
call
lods
and
loop
adc
dec
sar
sub
sbb
rol
call
(bad)
loopne
mov
or
aas
(bad)
(bad)
(bad)
dec
movs
xbegin
lods
jp
ss
jle
cmps
add
sbb
cli
mov
ja
jb
pop
lock
or
lods
jbe
cmps
lods
pop
or
or
iret
mov
cmps
daa
and
(bad)
jmp
xor
or
mov
out
cmp
pop
xor
jns
mov
inc
fwait
adc
cli
call
es
jg
push
(bad)
jnp
cmps
jle
jle
call
push
pop
call
sbb
push
and
sbb
inc
push
cmp
call
mov
sub
pop
icebp
test
cld
call
inc
(bad)
and
mov
cmp
dec
jns
movs
and
and
pushf
push
fnstenv
data16
jl
or
pop
jb
icebp
sub
or
or
mov
mov
dec
sbb
sub
lahf
(bad)
and
dec
ins
mov
xchg
xchg
lods
imul
cld
sbb
(bad)
(bad)
jg
push
xor
mov
jmp
imul
jbe
mov
dec
cmps
add
cli
stos
add
scas
jecxz
std
enter
(bad)
jmp
add
in
mov
and
(bad)
cmp
clc
aas
jmp
rcr
ins
cmp
and
sub
out
iret
xchg
iret
push
in
ds
inc
adc
clc
(bad)
(bad)
jnp
das
xchg
aad
imul
or
sub
clc
mov
push
xor
(bad)
and
push
mov
dec
(bad)
stc
xor
outs
lock
ss
sbb
(bad)
(bad)
jmp
add
mov
ret
xor
stc
lds
call
clc
(bad)
inc
int
ss
pop
push
dec
cmp
add
(bad)
dec
add
xor
cdq
mov
jl
lahf
fcmovnu
call
(bad)
(bad)
(bad)
dec
das
cmp
sar
sbb
and
mov
mov
xchg
ins
lahf
enter
push
ret
fdivr
(bad)
(bad)
call
sub
nop
lods
jmp
daa
lds
or
xchg
push
sbb
(bad)
call
fild
retf
mov
dec
dec
sar
test
xor
loopne
pop
hlt
(bad)
dec
fwait
pop
ins
pop
mov
cmp
sub
retf
sub
mov
(bad)
lods
mov
jp
nop
cmp
test
fabs
mov
lods
call
call
mov
add
dec
je
inc
xor
(bad)
dec
xor
inc
retf
push
or
xor
jne
iret
mov
test
call
scas
inc
outs
icebp
dec
jmp
(bad)
cmp
call
or
fsub
shl
mov
aam
(bad)
inc
lock
daa
movs
into
cmp
cli
mov
xchg
jmp
bound
(bad)
mov
mov
or
loope
mov
(bad)
sti
mov
mov
add
nop
push
scas
ficomp
push
int3
fsubr
loopne
loopne
(bad)
dec
xchg
add
mov
into
out
sbb
push
int
clc
pusha
mov
cmp
and
sub
inc
add
jmp
out
cs
out
inc
mov
fidivr
xor
mov
(bad)
sbb
pushfw
sbb
in
mov
(bad)
(bad)
jmp
mov
fwait
je
sub
lods
or
jge
add
fisttp
pusha
call
(bad)
mov
xor
ret
cs
mov
sbb
cmc
add
(bad)
(bad)
call
ins
mov
jae
cmp
(bad)
hlt
xor
dec
nop
xchg
and
mov
(bad)
jmp
stos
(bad)
fist
in
scas
cmc
loope
(bad)
(bad)
(bad)
mov
push
aaa
mov
xchg
cmp
sub
fist
cdq
mov
pop
fcomp
(bad)
(bad)
call
fcmovbe
iret
scas
pop
and
mov
pop
stos
stos
(bad)
cli
and
idiv
iret
std
push
inc
sbb
shl
pop
or
pushf
jo
add
(bad)
xchg
into
push
aam
call
or
ds
std
mov
mov
sub
call
bound
sti
or
in
sub
adc
mov
iret
call
mov
ds
(bad)
(bad)
call
aam
outs
idiv
cmps
sub
addr16
cmps
or
fisub
jns
cmp
cmc
cmps
stos
push
adc
(bad)
(bad)
(bad)
jmp
arpl
pusha
jg
push
(bad)
adc
daa
retf
mov
xor
(bad)
mov
inc
data16
mov
and
(bad)
into
and
ds
push
cmps
movs
repz
cli
mov
das
sbb
pop
mov
pop
cld
pop
into
imul
call
push
lods
pop
mov
dec
sbb
mov
fcomp
mov
aaa
sbb
out
mov
sahf
out
push
pop
lea
sub
sub
outs
fsubrp
cvttps2pi
nop
aad
fbld
or
or
jle
adc
dec
or
mov
cli
test
and
in
(bad)
push
pop
xchg
mov
test
jmp
scas
jmp
gs
push
std
call
push
mov
icebp
nop
sbb
and
mov
mov
cmp
xchg
fisub
faddp
rol
cwde
inc
mov
inc
mov
hlt
ret
mov
rcr
xchg
out
jle
sbb
popa
pop
loop
icebp
dec
xchg
dec
ins
pop
repnz
retf
out
mov
jmp
sub
fcom
mov
ins
(bad)
in
mov
data16
(bad)
call
sbb
add
sub
test
mov
push
dec
scas
sub
and
scas
or
repnz
popf
(bad)
(bad)
(bad)
jmp
cmps
mov
pop
aam
pushf
das
push
aad
jmp
into
mov
into
jmp
loopne
ret
sahf
push
pop
sub
stos
sub
out
pop
and
jmp
es
xchg
(bad)
(bad)
(bad)
call
adc
jp
retf
dec
fmul
mov
push
jmp
stos
in
(bad)
or
jmp
mov
dec
ds
fldcw
hlt
popa
in
or
push
xor
jmp
scas
dec
sbb
leave
cwde
xchg
(bad)
xchg
dec
xor
jge
push
mov
(bad)
out
sub
call
sub
pop
test
(bad)
sbb
dec
mov
sbb
sub
sbb
pop
cwde
add
cmp
lahf
jne
(bad)
(bad)
call
sub
inc
std
imul
inc
mov
call
dec
scas
cmp
movs
sbb
push
mov
push
mov
inc
add
xor
or
mov
(bad)
xlat
(bad)
jg
ja
aas
ret
fcomp
pop
sub
mov
fs
push
(bad)
fistp
mov
imul
ret
cmps
outs
ficom
push
cmp
mov
out
(bad)
(bad)
inc
xor
scas
mov
ins
mov
pop
ins
xor
sub
nop
mov
sub
pop
xchg
push
je
jmp
jae
lods
add
jle
bound
mov
dec
iret
cmp
jle
mov
(bad)
(bad)
(bad)
call
rcl
fdivr
jmp
adc
in
shr
mov
push
xor
pushf
ins
sbb
add
inc
xor
add
lods
imul
dec
leave
fsubr
(bad)
jae
arpl
fild
(bad)
(bad)
(bad)
(bad)
cld
jle
aad
xor
stos
loopne
push
push
sub
jmp
xchg
(bad)
(bad)
cmp
pop
mov
push
inc
retf
int
xchg
int
jp
clc
push
or
(bad)
(bad)
js
ins
das
out
loope
adc
sti
dec
lods
leave
out
xor
fcomip
sub
jnp
add
(bad)
(bad)
mov
mov
cmp
pop
ins
adc
cmp
(bad)
(bad)
mov
fs
pop
das
sub
and
pop
cld
stos
addr16
adc
push
xchg
test
push
mov
ins
push
inc
int
mov
lock
push
das
stos
adc
jl
add
or
mov
jmp
push
xchg
popf
outs
dec
jl
std
cmps
mov
xor
cmp
mov
movs
jmp
pop
jmp
fldenv
jg
(bad)
(bad)
call
push
rol
sub
and
sub
cmp
push
jmp
push
rcr
(bad)
(bad)
mov
call
pop
jle
int3
mov
int3
xchg
push
jmp
adc
push
(bad)
mov
xor
xchg
or
test
call
sub
stos
xchg
fist
cs
cdq
sub
sbb
cmp
mov
mov
lock
mov
xchg
jbe
push
(bad)
or
fwait
sbb
adc
(bad)
lods
mov
push
sub
xchg
push
ret
mov
(bad)
jns
cmp
pop
jmp
mov
retf
dec
repz
daa
scas
icebp
pop
retf
les
fidiv
xchg
cli
(bad)
(bad)
(bad)
scas
fneni(8087
mov
out
sbb
jmp
call
lahf
rol
xor
je
stos
in
jnp
mov
(bad)
(bad)
(bad)
jge
out
xor
jb
loop
and
cmps
in
retf
fild
mov
aaa
rol
lods
(bad)
(bad)
jmp
mov
icebp
pusha
sti
loope
pusha
cld
retf
icebp
mov
mov
movs
push
push
adc
sbb
je
sub
add
movaps
into
stos
xor
sbb
(bad)
jg
or
dec
ja
push
push
mov
push
ja
lock
call
inc
sub
cmp
mov
mov
mov
cdq
stos
mov
sub
add
gs
or
mov
cmp
push
cld
xor
scas
retf
(bad)
dec
xchg
pop
sbb
mov
mov
call
jb
push
xchg
cmp
(bad)
call
xor
xchg
push
cli
pop
or
shl
xchg
iret
mov
movs
and
jnp
sub
mov
std
jp
lods
mov
mov
mov
push
loopne
aad
repnz
add
sub
test
or
(bad)
(bad)
push
adc
pop
(bad)
(bad)
or
movs
xor
mov
jae
femms
xchg
(bad)
jg
call
loopne
ror
mov
or
dec
fdivr
scas
adc
(bad)
pusha
(bad)
call
mov
xor
(bad)
loopne
or
jmp
push
cmps
mov
ins
sbb
shl
or
jbe
mov
movs
cmps
bnd
dec
iret
dec
mov
jmp
loop
sbb
or
push
jmp
mov
test
mov
mov
stos
xor
xor
xchg
das
and
jmp
out
cmp
pop
ret
cmp
sub
dec
pop
loopne
mov
push
sub
clc
(bad)
(bad)
jge
ficomp
cmp
or
in
jecxz
jecxz
fistp
pop
ret
pop
dec
jmp
ror
stos
dec
cs
xor
mov
sub
(bad)
dec
mov
ret
jnp
shr
stc
or
mov
sti
mov
jecxz
and
jle
scas
cmps
sub
mov
or
test
mov
sub
jl
cmp
jmp
mov
xchg
add
xchg
xor
xor
mov
ficomp
mov
(bad)
inc
pop
dec
sbb
fisttp
ds
dec
stc
in
out
cdq
imul
pop
mov
(bad)
out
and
or
xchg
ins
mov
jl
mov
add
sbb
xlat
adc
arpl
scas
movs
mov
popa
sbb
push
sar
pop
retf
in
stc
loopne
scas
or
jmp
dec
jmp
add
cwde
cmps
adc
(bad)
mov
mov
pop
int3
adc
push
mov
adc
movs
scas
and
out
std
mov
(bad)
mov
out
movs
(bad)
out
dec
sahf
xchg
jmp
(bad)
push
sbb
mov
pop
cmp
push
cld
inc
loope
out
adc
ss
dec
mov
mov
adc
push
stos
movs
jo
and
jmp
fstp
ror
lahf
loope
cld
fisttp
cmp
in
mov
(bad)
call
add
pop
scas
pop
fimul
aaa
mov
enter
addr16
push
mov
mov
adc
cld
inc
ins
call
(bad)
(bad)
jmp
or
jge
shl
push
or
mov
adc
pop
mov
lock
adc
(bad)
(bad)
mov
aad
cmp
pop
pop
sahf
jmp
aas
stos
and
icebp
cmp
(bad)
(bad)
(bad)
mov
out
int
pop
daa
push
ret
cli
imul
lods
(bad)
in
pop
sub
and
(bad)
jmp
sub
add
inc
jae
and
mul
lds
test
cwde
or
pusha
arpl
push
dec
fdivr
push
push
pop
adc
bound
and
call
ds
iret
inc
(bad)
test
add
imul
inc
stc
jne
pop
clc
(bad)
fucomip
(bad)
mov
cmp
mov
(bad)
call
out
ret
or
lods
(bad)
std
inc
mov
(bad)
(bad)
fbld
das
stos
loope
nop
xor
push
mov
iret
jle
push
mov
mov
dec
mov
pop
xor
sub
xchg
cmp
out
ret
jecxz
dec
cmp
cmps
sbb
movs
push
outs
pop
ror
clc
and
push
sub
daa
iret
mov
cli
add
xchg
std
jg
into
retf
pop
mov
(bad)
iret
imul
(bad)
jmp
push
lods
popf
mov
mov
mov
xchg
xor
sbb
(bad)
inc
sahf
fwait
loopne
push
iret
and
out
and
sub
sub
(bad)
jg
mov
sub
aaa
rcr
nop
mov
jg
xchg
sbb
cmc
or
out
clc
out
cmp
mov
sbb
jmp
mov
(bad)
out
and
adc
dec
push
xor
outs
clc
xlat
jo
std
mov
cmp
mov
shl
ins
repnz
(bad)
(bad)
jmp
pop
push
repnz
mov
pop
jb
pop
lahf
adc
and
adc
mov
das
cli
inc
in
xor
or
inc
push
push
loope
jo
inc
mov
cmps
(bad)
dec
lock
jae
scas
mov
or
ins
mov
test
(bad)
(bad)
call
fld
inc
call
test
std
or
enter
call
cmp
push
sub
into
xchg
push
xchg
popa
call
test
out
(bad)
fisttp
dec
dec
inc
ret
in
je
mov
retf
(bad)
jmp
fcmove
mov
mov
add
add
xchg
jmp
push
jb
(bad)
(bad)
(bad)
inc
mov
scas
add
mov
xlat
lods
imul
pusha
imul
(bad)
(bad)
call
mov
daa
std
leave
sar
lock
adc
popa
ret
mov
mov
and
or
adc
mov
cmps
cmp
jbe
and
sub
pop
fdivr
jo
mov
sub
inc
scas
or
cs
outs
sub
dec
pusha
fwait
or
dec
iret
and
and
repnz
fisttp
push
sbb
jmp
jmp
sbb
mov
xchg
loopne
ds
push
jmp
sbb
stos
pop
jmp
mov
push
lock
and
aad
lock
or
js
call
fisubr
dec
and
fidiv
imul
pop
leave
jnp
outs
es
(bad)
(bad)
(bad)
jmp
inc
xchg
cmp
xchg
mov
mov
pop
lods
push
(bad)
stos
ret
xlat
jae
ss
(bad)
(bad)
(bad)
jmp
scas
ret
pop
jmp
jmp
inc
mov
repz
xlat
sub
mov
mov
mov
lahf
sbb
stos
cmp
mov
std
(bad)
cli
(bad)
fbstp
out
aam
mov
hlt
cdq
or
ins
stos
retf
(bad)
jmp
adc
lock
sub
sub
out
lods
std
loopne
sti
jno
test
dec
das
clc
retf
lods
out
cdq
push
mov
(bad)
jle
mov
dec
retf
clc
(bad)
dec
jmp
adc
inc
scas
pop
mov
scas
cwde
dec
enter
bound
loopne
jo
sub
sub
scas
push
(bad)
(bad)
(bad)
mov
out
rcr
sub
lds
pop
in
imul
mov
dec
add
aas
stos
(bad)
sahf
mov
mov
and
out
jge
(bad)
sti
mov
xor
movs
call
outs
fsubr
mov
sbb
add
jmp
pop
mov
pop
jb
clc
jp
stos
cwde
or
sub
inc
movs
out
lods
call
sub
(bad)
(bad)
(bad)
jg
lods
jbe
push
std
or
xor
into
mov
mov
pop
inc
and
mov
cli
mov
int
mov
pop
adc
out
cmps
test
mov
inc
mov
xor
loop
out
in
fs
fwait
movs
clc
(bad)
jg
popf
mov
outs
arpl
sub
ds
and
call
(bad)
pusha
inc
jmp
stos
jmp
and
out
in
outs
dec
jmp
xchg
scas
ins
daa
ins
(bad)
mov
sub
cmc
push
mov
inc
mov
out
pop
jb
mov
call
adc
sbb
inc
dec
shl
jle
and
mov
idiv
mov
or
pop
leave
test
sbb
cmps
push
lods
mov
call
(bad)
in
rol
test
cmp
cwde
cwde
stos
imul
ror
xchg
(bad)
leave
repz
dec
lahf
sub
jmp
bound
sub
and
(bad)
(bad)
(bad)
jmp
rol
dec
out
out
add
jb
sbb
data16
mov
pop
sbb
(bad)
(bad)
(bad)
jmp
pop
and
ret
sub
loop
aas
xor
sti
into
mov
push
mov
add
add
inc
mov
call
pop
je
jmp
sahf
sub
push
push
mov
lock
(bad)
(bad)
in
xlat
stos
lds
pop
lods
int3
test
retf
addr16
call
xchg
(bad)
dec
cwde
sub
cld
out
sbb
mov
sbb
cwde
(bad)
(bad)
fbld
fld
fstp
cmp
sbb
push
fdivrp
fisttp
fs
hlt
sub
jnp
jmp
jmp
sub
sti
cmp
or
imul
outs
push
fsubr
sti
mov
repz
stos
xor
sbb
stos
and
cmps
inc
push
scas
mov
mov
jmp
inc
xchg
hlt
mov
jmp
cld
(bad)
(bad)
jl
int3
test
(bad)
jmp
stc
push
retf
mov
(bad)
mov
pop
mov
(bad)
(bad)
(bad)
(bad)
mov
dec
cmps
faddp
ds
sti
sbb
mov
adc
and
f2xm1
push
dec
push
jge
mov
pop
stos
push
stc
xchg
push
stos
loop
jnp
(bad)
call
xor
cwde
call
jb
ret
pop
xchg
sar
sbb
call
js
sub
jne
into
ins
pop
daa
paddusw
pushf
movs
stc
loop
ja
or
clc
mov
add
add
mov
inc
push
xchg
(bad)
push
add
mov
mov
iret
es
mov
enter
dec
mov
pop
stos
aaa
cld
inc
ficom
xchg
xlat
mov
or
(bad)
dec
ja
or
push
sbb
(bad)
(bad)
jmp
pop
xchg
(bad)
(bad)
dec
adc
sub
pop
sbb
addr16
or
jle
dec
mov
and
fcomp
add
add
(bad)
jmp
cmp
xchg
test
push
lahf
sub
lahf
imul
cmp
or
add
pushf
push
std
jmp
pushf
mov
sub
pop
lods
enter
jmp
and
push
mov
pop
call
mov
cmp
int
jo
xchg
add
out
add
inc
xor
(bad)
(bad)
(bad)
cmp
out
xchg
in
cmp
(bad)
sbb
cmp
dec
mov
clc
mov
jg
scas
aas
(bad)
add
mov
out
sbb
jge
out
loop
call
cmps
rcr
and
sub
and
push
sti
and
fsubr
mov
pop
mov
mov
sbb
sar
(bad)
(bad)
xor
shl
lods
mov
pop
dec
mov
jno
repnz
(bad)
(bad)
mov
add
dec
sub
xlat
cwde
adc
xor
(bad)
inc
cmp
xor
jmp
jmp
mov
out
mov
push
cli
stc
mov
mov
stos
inc
leave
sub
push
mov
es
cmps
pop
sti
inc
(bad)
call
sahf
out
mov
mov
xchg
push
inc
outs
push
aas
repz
(bad)
(bad)
(bad)
call
pop
shr
(bad)
(bad)
std
nop
fisub
mov
shl
dec
add
sbb
pushf
mov
mov
inc
popa
fdiv
and
dec
stos
movs
iret
pop
pushf
push
cmp
(bad)
mov
xchg
shr
sar
sbb
scas
cld
cdq
addr16
dec
cmc
pop
mov
cld
push
cwde
mov
xor
(bad)
inc
xchg
loop
dec
jno
inc
jb
mov
daa
cld
movs
cmp
(bad)
(bad)
(bad)
dec
sub
sbb
imul
dec
inc
mov
mov
fidivr
sbb
jmp
fs
jp
mov
test
out
pushf
es
pushf
stos
js
push
(bad)
mov
sbb
cmp
mov
mov
push
js
jnp
(bad)
sbb
xor
cld
jmp
aam
jnp
jle
mov
ins
clc
(bad)
(bad)
(bad)
jg
movs
mov
pop
mov
jne
aaa
cli
xchg
sahf
sub
call
leave
retf
cld
(bad)
call
sbb
lods
iret
cmp
inc
or
test
daa
push
ins
loop
(bad)
jg
dec
into
adc
add
retf
ss
cmp
test
scas
(bad)
sti
out
and
pop
(bad)
jge
jp
iret
lahf
jae
cmps
lock
add
fwait
aad
adc
push
push
pop
(bad)
out
cli
push
or
xchg
repz
add
xlat
sar
mov
mov
inc
cmp
idiv
push
test
rcr
pop
retf
repz
(bad)
(bad)
jmp
push
xchg
cmp
jp
jle
lahf
add
xor
adc
push
nop
mov
push
data16
dec
arpl
(bad)
mov
sub
stos
cwde
test
xchg
mov
sbb
stos
jae
(bad)
mov
and
(bad)
jmp
cmp
mov
cmp
adc
jmp
mov
xchg
xchg
ds
cmp
or
pop
test
call
sub
jg
(bad)
jmp
mov
into
daa
dec
pop
lods
outs
loopne
dec
ffree
mov
cld
(bad)
(bad)
jmp
or
in
pop
push
outs
mov
push
mov
jl
sub
sub
push
aaa
jns
sahf
adc
inc
test
lods
loop
js
test
dec
mov
ret
inc
sbb
pushf
pop
sub
(bad)
(bad)
(bad)
jns
ficom
push
pop
(bad)
retf
shl
cmps
imul
sub
in
retf
xchg
mov
call
add
(bad)
jmp
mov
mov
ret
xchg
pop
sbb
mov
in
push
cmp
outs
xchg
call
cmp
enter
pushf
fmul
or
inc
das
mov
push
call
or
inc
js
ins
push
(bad)
idiv
pop
movs
das
mov
call
in
and
push
or
(bad)
mov
push
ret
sub
push
pop
lock
push
out
retf
loop
add
pop
pop
popa
xchg
sub
cmp
mov
retf
(bad)
cmp
sbb
push
stos
retf
mov
stc
push
pop
stos
test
pop
(bad)
pop
inc
add
adc
dec
ret
mov
jp
fwait
push
xor
add
aaa
dec
push
xchg
aam
cdq
pop
mul
mov
mov
movs
ss
gs
(bad)
clc
xchg
sbb
mov
ret
xor
(bad)
(bad)
jmp
nop
mov
fisttp
push
lods
pop
fidivr
sub
mov
(bad)
(bad)
jmp
dec
push
push
mov
jl
(bad)
ja
ja
stos
or
(bad)
(bad)
call
mov
(bad)
adc
pop
or
sub
fild
or
in
cdq
dec
dec
fldenv
(bad)
(bad)
jmp
in
sbb
retf
movs
mov
and
jb
in
pop
mov
std
ficomp
retf
inc
std
imul
das
xor
or
xor
adc
xchg
mov
cmp
test
call
mov
and
dec
push
jg
dec
(bad)
mov
push
jmp
pop
loop
test
aam
mov
in
sub
cmp
cmps
(bad)
(bad)
(bad)
jmp
adc
add
das
fucomp
cmps
out
sub
jg
jge
ficomp
and
cmp
pop
in
cmp
(bad)
(bad)
inc
jo
sub
call
repnz
mov
sbb
jmp
pushf
mov
cmps
dec
and
test
into
cmps
bound
outs
or
add
jmp
retf
cs
add
or
pop
js
mov
fisubr
(bad)
(bad)
jmp
cld
or
dec
jae
into
jmp
pusha
idiv
push
cmp
call
(bad)
(bad)
mov
leave
ins
push
inc
jg
fs
push
pop
in
fstp
gs
cs
mov
enter
dec
(bad)
adc
inc
movs
aaa
xor
mov
xor
adc
mul
adc
jmp
std
(bad)
call
add
mov
xor
fisttp
mov
sar
mov
ins
ss
adc
jnp
or
nop
pushf
add
jmp
sbb
mov
hlt
clc
mov
dec
jmp
dec
(bad)
cs
stc
in
xchg
push
add
or
imul
test
mov
movs
lods
jl
inc
movs
push
scas
jnp
or
mov
retf
pop
push
(bad)
jmp
inc
clc
jmp
or
add
mov
push
call
in
das
pop
mov
mov
push
mov
cmp
das
psllw
enter
(bad)
cld
das
cdq
xchg
xor
and
div
sub
(bad)
and
cli
fwait
or
add
adc
out
xchg
or
sub
dec
fmul
jmp
(bad)
dec
inc
lods
(bad)
xchg
xchg
fiadd
ret
jmp
inc
fwait
jl
or
popf
fs
jns
bound
mov
stos
mov
sar
(bad)
(bad)
fnstsw
cli
cdq
dec
call
ror
jg
cmp
xor
sub
(bad)
(bad)
jg
out
mov
cmp
(bad)
or
pop
jb
icebp
stos
cld
je
mov
test
out
jmp
sbb
test
sub
fwait
push
pop
mov
(bad)
mov
pop
jecxz
sbb
daa
and
pop
test
rep
xor
(bad)
jg
loopne
pop
int
and
cmp
loop
lock
cmp
outs
cli
or
jecxz
push
inc
inc
jmp
fsubr
mov
shl
cmp
std
jl
shr
pop
clc
cmp
xchg
dec
push
xchg
sti
cmp
sbb
fnsave
mov
ins
mov
(bad)
(bad)
(bad)
call
push
stc
mov
dec
sub
or
fs
movs
ret
out
icebp
dec
add
mov
movs
xor
mov
stc
inc
sbb
neg
pop
push
daa
jle
mov
or
call
and
jp
(bad)
xor
mov
mov
(bad)
(bad)
(bad)
call
dec
push
pusha
inc
or
fwait
xchg
cmps
movs
mov
jle
mov
xchg
sbb
pop
adc
lods
cli
push
pop
pusha
scas
push
xor
jmp
jg
popf
cmps
scas
test
sbb
cs
das
sub
add
pop
ror
push
(bad)
(bad)
(bad)
jmp
fistp
scas
lahf
cmc
outs
pop
leave
pop
push
pop
push
mov
cmp
dec
enter
stc
stos
mov
(bad)
(bad)
inc
lods
jmp
jmp
mov
push
and
cwde
addr16
and
sub
sbb
mov
ret
mov
test
sahf
adc
rep
or
outs
ins
cs
(bad)
inc
xor
repnz
pop
mov
inc
adc
adc
ror
dec
cmp
das
out
sub
scas
rcr
lock
mov
inc
sbb
outs
jp
push
jecxz
dec
int3
jmp
das
stos
adc
outs
mov
(bad)
(bad)
call
ins
pop
and
mov
lahf
mov
ret
dec
(bad)
test
mov
pop
(bad)
(bad)
(bad)
jmp
mov
std
clc
sbb
repz
pop
sub
inc
aas
cmp
push
call
(bad)
(bad)
call
pusha
pop
add
push
jecxz
(bad)
scas
pop
cmp
(bad)
hlt
sub
ds
lahf
add
and
pop
in
fcmovu
mov
inc
ret
dec
mov
rcr
sbb
loope
gs
test
sbb
mov
dec
jmp
dec
or
repz
sbb
cdq
pop
std
or
dec
(bad)
jg
dec
jo
fild
push
xchg
sbb
xlat
std
inc
std
jo
push
(bad)
jmp
cli
aam
popa
adc
mov
mov
hlt
retf
sbb
push
mov
pop
fidivr
call
push
sub
xchg
pop
mov
cmp
(bad)
call
adc
add
test
dec
clc
sbb
inc
dec
(bad)
(bad)
call
and
add
fisub
sti
jns
sbb
mov
xor
add
pop
jbe
test
loope
into
fisttp
jp
push
sar
jg
or
mov
jnp
(bad)
adc
test
(bad)
jmp
ins
sti
sbb
loopne
in
mov
push
push
cmp
fsubr
and
(bad)
jmp
mov
pop
rcl
data16
and
push
push
mov
cmps
(bad)
call
jmp
or
sbb
and
(bad)
cld
cmp
mov
std
(bad)
dec
daa
xchg
call
repz
adc
jle
fistp
mov
les
sti
sub
ss
nop
jb
(bad)
jmp
push
test
in
mov
fwait
dec
fdivr
popa
shr
das
mov
ja
cld
imul
mov
sub
xchg
in
and
jmp
jge
add
cwde
dec
loopne
cmp
jge
mov
jp
movs
and
pop
dec
cwde
call
mov
out
lahf
mov
jo
(bad)
(bad)
jg
lahf
xchg
mov
sub
sub
push
dec
mov
sub
test
mov
cmp
(bad)
jmp
add
sub
jnp
ss
or
inc
lods
jp
and
(bad)
(bad)
jg
push
adc
pop
(bad)
sub
das
mov
sub
aas
dec
xor
cmp
dec
pusha
cld
(bad)
jmp
mov
mov
sub
stos
retf
mov
jb
std
daa
cmps
push
cmp
lahf
jne
dec
mov
(bad)
jmp
clc
pop
(bad)
stc
sub
fiadd
mov
fist
int3
cs
imul
push
(bad)
push
rol
xchg
test
sub
xchg
mov
scas
not
mov
clc
(bad)
(bad)
dec
clc
xchg
imul
stos
push
fld
dec
mov
cli
mov
cld
inc
call
es
ja
inc
into
push
mov
sahf
call
fbld
sahf
or
nop
iret
fstp
mov
outs
and
xchg
pop
mov
xor
shl
call
xor
(bad)
push
inc
and
xchg
movd
xchg
das
test
loope
scas
xchg
mov
and
(bad)
call
cmp
mov
into
push
or
cmp
imul
idiv
pop
mov
aad
clc
aas
mov
ins
or
cmps
xchg
js
inc
cmp
jle
xlat
jp
test
mov
lahf
fnstenv
clc
push
test
cld
(bad)
enter
mov
cmp
(bad)
dec
(bad)
(bad)
lods
add
fwait
std
mov
(bad)
enter
outs
call
mov
ds
and
(bad)
cmp
out
sti
repnz
rol
adc
adc
(bad)
inc
test
fbstp
mov
mov
pop
sub
lahf
pop
mov
(bad)
leave
imul
inc
jecxz
or
ds
mov
in
outs
(bad)
(bad)
(bad)
(bad)
jle
xlat
retf
push
fdivr
popf
sub
mov
sahf
sbb
jns
sti
push
pop
std
(bad)
(bad)
(bad)
std
js
sbb
mov
ja
popa
imul
fwait
retf
mov
retf
jo
push
out
mov
(bad)
jmp
repnz
call
sub
bound
(bad)
push
push
mov
sbb
xchg
dec
cmc
gs
pop
call
bound
pusha
(bad)
(bad)
push
mov
cs
sub
pop
push
or
leave
pop
inc
pop
bound
adc
sar
push
das
mov
in
ja
mul
jp
jp
dec
fstp
jmp
call
push
mov
call
(bad)
pop
adc
mov
cmp
out
gs
scas
pop
jne
jo
push
sub
(bad)
(bad)
jmp
pop
loope
mov
pop
test
lods
test
call
ins
adc
fcomip
mov
pop
icebp
sbb
stos
mov
mov
movs
js
and
(bad)
stos
pop
xchg
iret
mov
jae
pop
or
leave
daa
dec
pop
lds
mov
or
xor
push
jl
mov
out
push
pop
sub
int3
lock
mov
xlat
and
(bad)
jmp
mov
ja
pop
fdivr
imul
push
lahf
pop
neg
movs
pop
js
push
jo
loope
pop
pop
push
xchg
icebp
or
dec
mov
sub
stos
sub
sub
dec
or
movs
je
cld
sub
mov
mov
dec
mov
push
dec
cmp
cmp
pop
xor
pusha
test
loopne
jmp
mov
sti
das
and
pop
stos
mov
clc
pop
ins
or
fldcw
sub
out
jg
jmp
pop
xchg
or
dec
rcl
hlt
and
scas
test
fld
and
push
aad
lahf
mov
sbb
aas
(bad)
in
aas
mov
sub
and
outs
and
dec
imul
and
push
neg
add
inc
rol
jecxz
ins
adc
push
inc
inc
push
jbe
sbb
das
jmp
jmp
jmp
cmp
test
sub
inc
and
retf
out
mov
mov
xchg
adc
mov
lods
fistp
push
xchg
inc
out
movs
cmp
and
or
fstp
and
popa
xor
(bad)
das
popa
in
repz
repnz
ins
and
inc
jecxz
dec
mov
(bad)
jg
pusha
sbb
lea
xor
fnstcw
cmp
mov
lea
stos
aaa
(bad)
retf
or
sbb
in
das
loopne
idiv
jmp
in
stos
loop
pop
imul
movs
mov
leave
pop
js
stos
loopne
jns
fwait
or
push
inc
aam
xor
mov
cmp
outs
xchg
push
xchg
sub
sbb
or
shl
mov
add
fwait
sbb
in
ins
mov
sbb
mov
call
repnz
movs
cmp
cmp
and
push
mov
jl
sbb
dec
mov
mov
dec
clc
mov
mov
xor
stos
(bad)
(bad)
jmp
jo
repnz
cmp
mov
jae
iret
lds
sbb
and
and
push
jmp
lods
adc
jns
jmp
jb
and
xchg
or
out
cli
jmp
adc
aas
sub
out
sub
leave
push
cli
addr16
stc
(bad)
mov
mov
fndisi(8087
nop
scas
int3
icebp
js
dec
sub
jp
ret
push
test
add
icebp
or
test
push
mov
ret
push
neg
data16
jmp
inc
sub
ins
and
xchg
or
(bad)
(bad)
(bad)
jmp
test
mov
scas
gs
retf
and
sub
gs
fisttp
pushf
(bad)
(bad)
(bad)
jmp
jnp
sbb
ret
inc
lods
pop
xor
data16
(bad)
in
jg
into
sub
cmps
sub
(bad)
out
fidiv
(bad)
int
cmp
bound
inc
cmp
push
sbb
mov
scas
(bad)
call
push
mov
imul
adc
inc
and
cli
dec
jmp
das
sar
add
inc
movs
or
cld
cld
mov
shl
(bad)
(bad)
jge
es
pop
sub
xchg
stos
mov
mov
lods
adc
mov
sahf
xor
sbb
mov
call
sahf
clc
lods
sti
push
jl
call
xchg
cld
ret
adc
xor
pusha
or
mov
pop
(bad)
(bad)
(bad)
jmp
xchg
push
ret
jmp
imul
imul
pop
loop
mov
sbb
enter
neg
jmp
add
mov
cwde
add
mov
mov
inc
call
mov
xchg
mov
stos
xor
dec
ins
(bad)
(bad)
jg
fmul
xchg
scas
push
mov
ror
ret
lock
retf
pop
leave
(bad)
(bad)
(bad)
call
and
test
or
les
sub
sahf
fucomi
sub
rcr
xchg
stos
fimul
cmp
mov
jmp
inc
adc
cmc
sub
sub
sub
mov
sti
mov
sub
push
std
(bad)
(bad)
imul
out
pop
jnp
shr
jle
mov
push
movs
mov
jmp
mov
jp
add
cli
outs
cmps
out
cmp
jb
je
mov
jmp
popa
fucomp
lea
cli
cmp
ret
into
dec
and
mov
(bad)
jmp
mov
sbb
popa
sbb
push
shr
int
hlt
cmp
sub
fild
lods
in
pop
adc
clc
pop
call
(bad)
mov
mov
mov
test
pop
jg
stos
fs
mov
(bad)
(bad)
jmp
inc
mov
cmp
xchg
fist
inc
icebp
mov
fnstsw
call
sbb
das
push
fistp
pop
dec
enter
sub
mov
enter
(bad)
mov
(bad)
das
bound
(bad)
dec
ja
fild
and
icebp
dec
outs
pushf
mov
mov
lods
fwait
jmp
xor
std
call
mov
or
fs
jecxz
xchg
adc
push
mov
jmp
rcr
jmp
sbb
mov
or
(bad)
mov
leave
cmp
mov
push
mov
(bad)
mov
(bad)
test
imul
sub
addr16
jmp
retf
out
mov
(bad)
inc
cmp
cmps
mov
out
mov
adc
sbb
cmp
pop
sbb
(bad)
(bad)
push
cmp
or
push
xchg
jmp
mov
mov
ror
rcr
out
clc
(bad)
push
retf
aam
stos
popa
jmp
sub
out
(bad)
fbld
call
xchg
mov
cld
push
and
sub
adc
pusha
xchg
lods
inc
mov
mov
outs
mov
xchg
xor
pop
xchg
out
aas
add
das
clc
inc
cmp
cli
pop
loope
xchg
sub
clc
(bad)
push
retf
(bad)
mov
add
and
adc
outs
dec
ficomp
xor
in
pop
pushf
ret
or
mov
cmp
out
cmp
add
ja
(bad)
call
call
out
stos
(bad)
fsub
lods
mov
(bad)
dec
lods
mov
add
mov
mov
cmp
pop
cmc
jmp
shl
add
(bad)
js
fidivr
lea
sbb
(bad)
in
jmp
cs
jl
loope
xchg
cmp
push
mov
jmp
and
xchg
je
(bad)
jmp
pop
cmp
mov
scas
arpl
cmp
xchg
repnz
mov
cld
outs
mov
jmp
add
retf
push
add
loop
sub
sub
fs
mov
loope
mov
js
ret
call
inc
cdq
cmp
mov
push
fadd
mov
and
mov
or
pop
push
adc
test
mov
(bad)
(bad)
mov
icebp
sub
jo
retf
push
mov
pop
mov
sub
adc
(bad)
stos
pop
cmp
add
xchg
mov
mov
scas
sub
in
loope
imul
lahf
fldenv
or
(bad)
mov
(bad)
dec
das
out
rcl
sahf
fwait
push
ss
pop
inc
clc
mov
js
pop
pop
jmp
shl
repnz
xor
(bad)
(bad)
(bad)
call
or
or
out
push
sbb
or
mov
dec
inc
or
(bad)
aas
mov
and
xchg
scas
imul
cmp
sub
sub
and
loop
mov
xor
cmp
(bad)
mov
call
sub
fsubr
sbb
or
ror
jb
mov
outs
loopne
sub
(bad)
(bad)
dec
fisttp
mov
fwait
adc
clc
sub
nop
mov
xchg
popa
mov
and
ret
mov
add
xchg
shr
dec
jb
shr
push
xor
mov
cmps
sar
sub
stos
(bad)
das
push
out
jo
add
jmp
xchg
jns
sub
rcl
add
xchg
lea
jnp
test
ins
sub
xor
add
aaa
enter
out
mov
aas
pop
jge
lock
xor
or
push
out
iret
sub
mov
push
imul
fs
and
fnstcw
add
fcom
xchg
add
or
ror
inc
push
outs
cmp
inc
jmp
pusha
(bad)
dec
outs
mov
(bad)
popf
addr16
cdq
jmp
mov
push
pop
(bad)
int3
cli
jecxz
sti
push
adc
and
(bad)
fistp
fistp
retf
pop
xchg
mov
cmp
das
pop
add
mov
add
(bad)
dec
dec
js
push
dec
xchg
cld
call
cs
cmp
fiadd
(bad)
call
xchg
jo
mov
leave
stc
add
xor
(bad)
(bad)
(bad)
dec
call
jae
and
repnz
in
and
mov
push
lods
ins
test
mov
(bad)
sub
push
call
scas
cld
push
add
xor
call
outs
mov
test
(bad)
add
or
cli
pop
mov
call
pop
xchg
cmp
stc
scas
push
ja
fadd
(bad)
fist
push
push
lahf
dec
call
add
(bad)
fsubr
pop
jmp
jg
retf
sub
movs
iret
lahf
(bad)
(bad)
(bad)
call
or
sbb
in
sbb
std
cmp
cdq
rcr
dec
pop
lahf
jg
mov
jmp
xchg
mov
(bad)
(bad)
call
jns
aas
scas
int
mov
sbb
mov
fistp
mov
mov
pop
in
xchg
pop
and
xor
add
jno
jne
xor
sahf
cli
ins
out
inc
cld
aad
mov
ror
adc
jmp
sti
ror
push
clc
xbegin
mov
and
inc
enter
(bad)
inc
out
xor
ret
bound
leave
cmp
movs
xchg
(bad)
(bad)
(bad)
jg
and
jns
enter
cdq
jp
fimul
out
push
push
jg
(bad)
dec
fwait
push
jp
push
ret
or
std
call
cmp
push
push
(bad)
(bad)
(bad)
jg
sub
push
or
(bad)
jmp
sub
fisttp
adc
add
call
in
fwait
dec
cmp
xsha1
cmps
or
cmp
lahf
cmp
fadd
jmp
imul
ret
scas
imul
(bad)
xchg
out
(bad)
(bad)
push
inc
stc
sub
(bad)
loope
loope
stos
dec
sub
or
lods
ret
pop
jmp
mov
jmp
ror
dec
inc
call
retf
int3
jno
popa
fnstsw
pop
outs
iret
or
stos
pop
in
dec
jg
aam
mov
repnz
iret
and
loop
sar
jb
repz
xlat
imul
adc
mov
or
pop
cmps
jb
push
and
inc
dec
nop
mov
fisttp
jp
push
fnsave
call
xchg
mov
cmp
mov
stos
cmps
jno
and
jmp
loopne
call
call
lods
in
lock
mov
(bad)
xor
ins
sbb
out
add
jp
jp
and
(bad)
jmp
adc
xor
mov
push
fs
enter
bnd
in
push
out
out
or
sbb
mov
(bad)
jge
rol
jecxz
or
pop
add
sub
mov
mov
xchg
fsubr
sub
jns
pop
jmp
cwde
mov
push
fwait
jl
sbb
(bad)
(bad)
jmp
ds
xchg
(bad)
jne
sub
adc
stos
(bad)
es
push
jb
push
(bad)
cs
neg
mov
mov
jg
dec
cld
ret
mov
mov
sbb
loop
(bad)
(bad)
jg
das
daa
jmp
(bad)
sbb
pop
jmp
xlat
cs
mov
hlt
adc
adc
jno
stos
add
test
push
leave
jae
retf
xor
mov
sub
mov
imul
js
(bad)
jg
sbb
pop
das
retf
or
fwait
xor
pop
lods
fist
sub
(bad)
(bad)
(bad)
(bad)
ds
fistp
(bad)
mov
(bad)
scas
out
adc
fidiv
jmp
push
mov
pusha
stos
enter
(bad)
mov
repnz
(bad)
lahf
stc
xchg
les
mov
loop
jg
lods
int
and
pusha
stc
repnz
call
dec
cmps
lods
cwde
stc
mov
lods
jp
xor
(bad)
fcom
lock
mov
mov
clc
xor
add
cs
iret
adc
(bad)
jmp
push
call
sbb
pop
mov
and
pop
clc
mov
xchg
jb
add
in
(bad)
(bad)
jmp
add
frndint
cmp
data16
into
jmp
jmp
jp
aas
imul
xor
jle
mov
fbstp
sub
(bad)
(bad)
dec
push
fsub
addr16
add
cs
push
jns
mov
std
(bad)
push
pusha
out
cli
xchg
push
cli
push
cs
mov
retf
scas
out
jge
xor
(bad)
(bad)
call
fistp
mov
pslld
add
stos
sub
and
movs
xor
jle
jne
or
jg
in
dec
shr
xchg
add
repnz
mov
jbe
call
jecxz
xchg
adc
mov
(bad)
jg
mov
outs
es
mov
and
pop
sbb
mov
(bad)
loope
sti
xor
jecxz
or
pusha
xchg
cmps
out
xor
(bad)
call
outs
arpl
jmp
xor
pop
es
call
xchg
in
jmp
pop
call
cmp
push
pusha
jp
(bad)
(bad)
inc
mov
push
xchg
or
cmp
and
cli
call
repnz
rcr
clc
ror
leave
clc
pop
fmul
or
dec
aaa
ss
mov
or
(bad)
jbe
jge
mov
fild
or
push
(bad)
(bad)
out
jp
dec
mov
jns
sub
sbb
outs
fs
mov
stc
in
enter
(bad)
jmp
sar
mov
mov
shl
shl
retf
adc
sbb
rol
dec
cmps
cmp
iret
(bad)
mov
mov
sbb
and
xlat
mov
repnz
(bad)
(bad)
in
inc
pop
dec
test
int
sbb
jg
sbb
imul
pusha
dec
aas
iret
stos
lahf
mov
cmp
mov
push
mov
rcr
mov
fcomp
ja
call
pop
jmp
xor
mov
(bad)
(bad)
(bad)
(bad)
cmp
jo
inc
sbb
xchg
pop
std
(bad)
in
mov
xor
js
enter
or
icebp
add
and
into
imul
cld
cdq
push
adc
pop
sub
sub
sub
lods
(bad)
(bad)
(bad)
jmp
mov
ss
fimul
bound
ds
ss
enter
or
(bad)
(bad)
aas
pop
lods
fs
and
adc
int
cdq
jbe
sub
jg
mov
test
loop
nop
push
jmp
fist
cli
jmp
dec
out
mov
add
pop
pop
jo
cmp
(bad)
(bad)
call
repnz
mov
sub
clc
ja
or
mov
sahf
adc
jg
mov
xor
cld
xchg
and
sub
retf
mov
enter
retf
sbb
rcr
std
test
(bad)
(bad)
mov
in
imul
jns
dec
fwait
repnz
or
pop
mov
mov
(bad)
(bad)
(bad)
fcomp
push
outs
popa
shl
sbb
adc
sbb
out
call
add
clc
stos
ss
outs
jmp
mov
retf
clc
scas
jmp
adc
aam
push
imul
sbb
xor
xchg
add
std
sar
ins
je
dec
pop
sbb
std
pop
and
stc
adc
scas
in
lahf
dec
push
lods
rcr
(bad)
push
ror
rcl
dec
xor
cmc
or
ins
aam
sub
(bad)
(bad)
(bad)
push
rep
mov
pop
dec
outs
stc
imul
inc
inc
rcl
sub
cmp
div
sbb
sub
ficomp
(bad)
in
call
mov
mov
inc
dec
(bad)
mov
mov
push
pop
sbb
(bad)
call
sub
call
mov
retf
sahf
(bad)
rcl
imul
inc
out
push
test
inc
outs
push
pop
(bad)
out
adc
(bad)
jg
push
xchg
push
clc
jmp
fisubr
xchg
sub
(bad)
(bad)
cmp
cmp
iret
push
lahf
hlt
popw
fwait
arpl
stos
lods
mov
es
(bad)
(bad)
jmp
mov
dec
inc
stc
scas
inc
scas
or
mov
push
or
push
jae
cmp
in
out
mov
(bad)
(bad)
(bad)
jmp
outs
scas
pusha
and
lahf
fld
mov
stos
mov
cmps
les
(bad)
lock
jl
(bad)
call
loopne
mov
xchg
sub
in
jae
fidivr
mov
sub
jmp
jmp
xchg
(bad)
jmp
ins
cmp
inc
imul
clc
imul
(bad)
(bad)
jp
mov
xchg
or
dec
gs
ret
jmp
call
cli
gs
jle
test
call
mov
and
cmp
pop
jmp
outs
xor
lock
lods
mov
xor
push
stc
loopne
mov
(bad)
(bad)
(bad)
(bad)
mov
xchg
jmp
fistp
loopne
sub
inc
mov
outs
sbb
mov
push
fmul
addr16
shl
pop
dec
(bad)
jmp
xor
aas
jp
sahf
nop
(bad)
sub
loopne
fcomp
cmp
mov
(bad)
(bad)
mov
out
jmp
add
cmp
(bad)
(bad)
(bad)
fbstp
call
mov
fldenv
dec
push
xor
test
or
(bad)
dec
adc
call
scas
or
adc
and
jmp
sahf
stos
gs
xchg
(bad)
loopne
inc
cld
jg
sub
shl
push
jb
jne
sar
lods
or
mov
fdivr
cmp
xchg
cmp
cmps
or
mov
(bad)
(bad)
(bad)
cmp
call
push
xor
dec
mov
ret
ins
cmp
in
addr16
(bad)
jmp
lods
mov
sbb
pusha
icebp
or
sub
lahf
mov
(bad)
call
mov
rcr
push
fsub
int3
loop
or
sub
mov
mov
sub
out
push
gs
sbb
(bad)
mov
jmp
push
or
sti
sbb
mov
pop
jge
test
(bad)
mov
push
movs
out
ret
add
push
call
inc
(bad)
sub
std
push
iret
mov
es
mov
clc
sbb
arpl
mov
(bad)
(bad)
(bad)
fisubr
jl
out
mov
jl
push
out
xor
sub
mov
mov
(bad)
(bad)
mov
pushf
ja
jmp
fmul
push
cmp
mov
iret
call
cmps
gs
(bad)
out
push
mov
cmp
dec
pop
cmps
xlat
or
pop
ret
ror
(bad)
jg
(bad)
inc
sub
mov
mov
adc
sbb
cmp
retf
ror
out
test
or
pop
mov
enter
xchg
ja
scas
push
adc
sub
call
(bad)
(bad)
dec
ja
in
push
or
out
(bad)
pop
or
pop
lods
(bad)
call
sar
push
pop
xchg
in
jecxz
(bad)
sahf
test
ss
add
or
dec
mov
mov
(bad)
mov
lock
sub
dec
(bad)
pop
test
xchg
ja
ja
add
lahf
ficomp
(bad)
mov
and
cs
jno
dec
(bad)
dec
jmp
call
add
mov
stc
call
jg
sbb
mov
mov
or
cdq
stos
imul
dec
mov
outs
add
(bad)
(bad)
dec
xor
inc
push
sub
fstp
outs
xchg
arpl
pop
(bad)
(bad)
(bad)
jmp
dec
mov
lds
cmps
adc
loop
test
call
das
sub
(bad)
(bad)
jmp
mov
mov
iret
pop
pushf
imul
loop
xchg
test
shl
dec
push
and
or
dec
xchg
mov
(bad)
(bad)
(bad)
sub
jg
sahf
xchg
call
jmp
out
or
call
xchg
adc
pop
loopne
pusha
pop
cmp
fldcw
mov
jbe
(bad)
(bad)
(bad)
call
push
into
int3
mov
test
pop
addr16
stos
or
fild
in
pusha
cld
(bad)
jmp
in
in
loope
dec
(bad)
loop
outs
jns
test
push
test
mov
mov
nop
sub
mov
cmp
aam
(bad)
gs
jmp
sti
popa
test
adc
sti
jp
das
aas
push
adc
(bad)
dec
fistp
scas
adc
pushw
and
cld
pop
aas
outs
jmp
jecxz
sar
xor
pusha
js
fimul
or
push
ja
loop
cld
dec
cld
retf
xor
sar
cmp
mov
xchg
sahf
cs
inc
or
jb
cmp
sub
or
mov
jmp
iret
mov
cmp
out
popa
add
in
xor
mov
add
mov
xchg
dec
cmps
ret
push
frstor
aad
cmps
push
dec
pop
movs
mov
dec
ds
jmp
xchg
inc
mov
daa
movs
push
push
test
std
sub
or
ins
pop
pushf
cmp
jge
mov
push
inc
daa
int
add
mov
(bad)
call
mov
shr
sbb
(bad)
jmp
or
retf
std
sub
push
xor
test
std
sub
push
daa
(bad)
(bad)
(bad)
jmp
out
add
cmps
adc
mov
shr
in
lods
xor
shl
std
movzx
sar
sub
cli
adc
pop
inc
push
out
push
cli
das
cli
pop
xor
xchg
push
and
mov
mov
or
xor
daa
push
mov
in
sub
(bad)
jmp
push
pop
pop
popa
cdq
mov
mov
push
fdiv
mov
and
jmp
push
imul
dec
int3
add
xchg
dec
adc
aaa
jmp
fsubr
jae
scas
dec
outs
outs
xlat
push
call
xor
and
out
popa
pop
scas
(bad)
(bad)
(bad)
jmp
mov
and
sti
mov
mov
xchg
dec
or
pop
fild
jp
stos
clc
(bad)
(bad)
inc
stos
test
pop
mov
lods
push
in
dec
sub
aad
or
cmps
sub
push
sbb
or
outs
cwde
mov
mov
xor
call
in
enter
push
mov
cmp
pop
jp
push
inc
mov
mov
pop
call
lock
stos
aam
jno
std
mov
pop
cld
mov
test
call
and
jmp
aaa
add
dec
stos
and
call
(bad)
(bad)
call
xchg
sbb
cmc
adc
mov
test
jnp
fwait
jle
(bad)
mov
pop
sahf
add
xchg
inc
dec
push
out
cmps
test
cmps
addr16
test
inc
imul
and
cmps
icebp
dec
or
ret
ds
mov
fcomip
or
mov
pop
jnp
jb
ret
ror
aas
mov
mov
(bad)
jmp
iret
mov
in
(bad)
loope
pop
sub
bound
inc
adc
jbe
or
clc
stos
(bad)
cmp
test
mov
xor
mov
(bad)
(bad)
dec
mov
test
fcomp
cmp
(bad)
loop
daa
jo
scas
stos
or
(bad)
dec
lds
or
adc
mov
xchg
xor
es
cmps
popf
sbb
loope
(bad)
dec
scas
mov
cmp
add
cmps
mov
cmps
stos
inc
mov
jmp
sbb
push
(bad)
xchg
leave
(bad)
xchg
sbb
sub
mov
arpl
(bad)
jmp
fcomp
jg
adc
cli
xchg
sub
inc
fdivr
(bad)
dec
pop
stos
pop
or
push
cs
(bad)
fisub
outs
movs
lock
loop
imul
and
jmp
lea
mov
test
(bad)
(bad)
dec
jmp
out
rcl
cmps
sbb
pushf
mov
xlat
sub
cmps
xchg
mov
adc
call
(bad)
(bad)
call
add
movs
(bad)
push
mov
fld
mov
(bad)
jns
sti
and
jmp
call
cmp
adc
mov
pop
test
loop
das
mov
ins
ins
test
repnz
js
jmp
sub
push
ficom
test
test
pmullw
and
js
mov
call
cli
fst
cli
cwde
fistp
es
in
lahf
jl
lods
mov
mov
jmp
jle
pushf
cmp
push
test
mov
sub
clc
(bad)
jmp
xor
outs
fdiv
xor
pop
test
call
adc
pop
add
ds
or
pop
adc
add
xchg
mov
sbb
jmp
adc
cld
dec
loop
ss
into
xacquire
clc
icebp
push
ret
sbb
cmp
cdq
out
mov
mov
in
add
(bad)
(bad)
mov
sub
iret
push
mov
cs
(bad)
push
mov
jae
add
sub
stos
sti
push
popf
into
cdq
popf
imul
sbb
fwait
pop
loop
jmp
pop
xchg
clc
scas
push
sub
imul
push
push
jno
icebp
(bad)
(bad)
(bad)
mov
cmp
sbb
ret
cwde
test
jg
or
stos
pushf
cmp
call
loop
fadd
cmc
outs
imul
jl
(bad)
(bad)
cmp
sbb
mov
cmp
cmp
imul
xor
sub
ins
jg
das
cld
mov
or
sub
inc
dec
cmp
sub
stos
or
fwait
sub
or
mov
mov
push
add
retf
std
sbb
mov
pop
xchg
pop
bound
sbb
jl
icebp
(bad)
(bad)
(bad)
(bad)
cmp
inc
add
mov
loopne
mov
daa
jmp
sbb
retf
lods
mov
or
movs
(bad)
sub
push
cmps
ds
ret
movs
sbb
fdivr
(bad)
mov
std
jp
jg
pop
sub
dec
fwait
pop
stc
mov
sub
test
sub
ja
dec
jmp
pop
(bad)
adc
sti
lea
jmp
rcr
dec
sub
(bad)
(bad)
inc
scas
ja
jmp
jle
or
push
scas
movs
ret
mov
(bad)
call
cmp
repnz
sbb
xchg
cs
call
(bad)
ss
retf
jg
mov
or
out
addr16
xor
out
mov
cli
(bad)
jg
inc
jecxz
xchg
push
aaa
shl
sahf
into
push
push
pop
call
div
(bad)
push
or
test
xchg
ds
mov
jmp
push
scas
clc
sub
xchg
cmp
cmc
and
fsubr
push
pop
(bad)
(bad)
(bad)
push
lods
fisubr
fnstsw
mov
lea
sub
repnz
enter
add
push
cmp
pusha
adc
scas
pop
dec
cmp
imul
or
lock
mov
mov
bound
clc
jns
out
cmp
mov
(bad)
push
jns
or
loopne
clc
jp
call
movs
jns
pop
popa
inc
movs
sar
sub
adc
dec
fistp
iret
xor
sbb
(bad)
(bad)
(bad)
push
push
fwait
ss
sub
aad
mov
es
mov
mov
stos
sbb
(bad)
(bad)
(bad)
(bad)
ins
retf
mov
je
icebp
xchg
and
mov
iret
mov
out
pop
std
stos
inc
fmul
or
hlt
pop
cmp
shl
clc
(bad)
fbstp
and
cmp
call
or
mov
xor
(bad)
(bad)
(bad)
dec
call
outs
jbe
fistp
cmp
xor
inc
sub
(bad)
(bad)
call
inc
add
mov
movs
jl
pop
hlt
push
cs
mov
inc
ins
call
dec
mov
sbb
or
jb
cmc
call
sub
xor
dec
ins
aaa
or
push
(bad)
shl
(bad)
(bad)
jns
xchg
pop
xchg
xor
mov
or
pop
js
les
push
dec
pop
lahf
mov
fwait
xchg
(bad)
clc
add
(bad)
adc
in
pop
adc
cs
(bad)
dec
push
mov
mov
mov
faddp
imul
mov
shl
dec
(bad)
push
or
adc
movs
push
jl
adc
sub
fld
es
mov
outs
push
mov
into
push
jp
sahf
sti
jg
sub
push
dec
sti
or
or
sub
jmp
iret
outs
mov
in
in
cmps
dec
cld
cmps
aaa
or
cmp
outs
mov
imul
aas
leave
(bad)
jmp
cmp
lahf
fs
adc
retf
mov
cmp
std
jg
in
inc
pop
clc
add
test
scas
jl
inc
retf
sub
inc
lods
mov
repz
retf
call
call
xchg
sub
mov
outs
and
dec
add
pop
test
out
mov
dec
dec
dec
loop
das
jb
mov
sbb
sbb
sub
mov
jmp
movhps
pop
std
ror
inc
ficomp
mov
push
mov
or
jmp
cli
pop
mov
cli
ins
leave
mov
outs
dec
mov
stos
retfw
mov
push
(bad)
(bad)
(bad)
(bad)
clc
sub
das
iret
inc
or
pop
fdiv
xchg
mov
outs
ins
test
pop
rol
mov
(bad)
(bad)
inc
into
out
xor
pop
and
adc
(bad)
mov
pop
xor
movs
fadd
cli
add
(bad)
mov
push
call
(bad)
cld
sbb
pop
retf
dec
retf
jns
pop
into
retf
or
mov
xchg
pop
movs
push
jp
retf
mov
pop
mov
and
jmp
into
aad
lahf
std
scas
adc
cmp
adc
pop
(bad)
xor
jmp
clc
mov
pushf
(bad)
call
sub
dec
pusha
cmp
fidiv
(bad)
(bad)
(bad)
call
scas
push
jo
sub
add
in
jle
or
sub
or
ja
cli
dec
or
call
lods
test
(bad)
(bad)
(bad)
(bad)
in
push
cmp
xchg
(bad)
into
mov
stos
pop
out
and
sbb
mov
(bad)
ja
je
loop
(bad)
(bad)
call
inc
loop
pop
lods
and
ror
or
ins
push
repz
in
ds
sbb
xor
sub
mov
xor
xchg
lock
loopne
(bad)
(bad)
mov
add
ficomp
mov
dec
movs
mov
pop
dec
sub
rcl
(bad)
(bad)
jmp
dec
xchg
stc
mov
outs
fs
cmp
out
xor
pop
or
(bad)
jg
dec
mov
scas
iret
xor
adc
push
mov
or
add
cmp
inc
sbb
stos
dec
retf
es
pmulhuw
retf
ins
push
in
retf
lods
push
loope
iret
(bad)
(bad)
mov
mov
scas
fcomp
cmp
imul
call
(bad)
out
xchg
and
mov
pop
cli
mov
gs
ss
scas
cmp
(bad)
call
add
icebp
mov
jmp
and
(bad)
js
push
(bad)
(bad)
(bad)
inc
inc
rol
push
adc
es
jmp
lahf
mov
call
add
(bad)
fisttp
jb
imul
or
sbb
dec
pop
adc
cs
sub
add
inc
arpl
sub
(bad)
mov
mov
imul
jne
dec
sbb
(bad)
(bad)
(bad)
mov
out
inc
pop
sub
jl
(bad)
mov
jmp
out
out
and
(bad)
(bad)
mov
popf
sahf
push
in
ror
mov
fadd
or
pop
rol
pop
pop
out
icebp
mov
jbe
es
xchg
mov
fs
test
push
pop
pop
sub
dec
cmp
cmp
jg
retf
sub
retf
cmp
mov
movs
mov
push
(bad)
pop
push
push
ja
pop
ja
jle
xchg
sbb
out
leave
aad
ror
mov
(bad)
(bad)
mov
push
pop
mov
ret
jmp
mov
icebp
loop
popa
mov
mov
(bad)
sbb
push
call
pop
shr
dec
sahf
outs
xchg
scas
lock
(bad)
(bad)
jmp
fisttp
out
or
sbb
call
cmp
pop
sub
cmp
push
(bad)
push
inc
mov
std
sbb
pop
jge
or
push
repz
adc
pop
(bad)
(bad)
(bad)
dec
mov
cmc
aad
xchg
sub
push
test
pop
xchg
sub
loope
mov
and
imul
add
fild
(bad)
(bad)
(bad)
jmp
cmc
gs
nop
sbb
jmp
es
cmps
dec
jb
or
(bad)
(bad)
(bad)
jmp
pusha
bnd
scas
add
out
adc
aaa
addr16
loopne
test
bound
ss
jbe
mov
aas
stos
sub
cwde
popf
fs
inc
test
pop
dec
ror
mov
(bad)
mov
jmp
movs
jae
cmp
cmp
(bad)
mov
(bad)
xor
sbb
mov
push
jecxz
(bad)
(bad)
jmp
stos
fnstenv
pop
enter
sbb
pop
fild
movs
scas
mov
sub
(bad)
inc
pop
xor
repz
retf
fidiv
jo
cmp
cmps
sub
ficomp
aad
(bad)
(bad)
jmp
jne
outs
fld
lea
scas
mov
popa
js
mov
cmc
jg
ja
mov
das
call
test
scas
cli
jmp
xor
js
xchg
dec
scas
sub
sbb
xor
(bad)
dec
lock
scas
push
(bad)
aaa
sub
int
mov
(bad)
(bad)
sti
clc
bound
push
jle
pop
and
pop
nop
xchg
enter
pop
xor
(bad)
fcomip
dec
push
xor
fs
sub
lahf
xchg
stos
mov
in
sub
mov
or
push
and
jno
mov
adc
sub
xlat
pop
sub
push
rcr
adc
out
rcr
push
in
pop
jmp
movs
retf
or
scas
fimul
(bad)
pop
mov
clc
pop
add
xchg
xor
loop
sub
outs
ins
or
fwait
jb
call
inc
aam
or
cld
cmp
popa
mov
and
(bad)
(bad)
(bad)
clc
mov
out
lock
lods
mov
mov
mov
outs
mov
out
call
add
or
out
xor
push
push
daa
js
das
and
adc
ret
js
mov
es
iret
jnp
push
jg
push
jge
cmp
mov
pop
or
inc
iret
xchg
retf
(bad)
mov
jg
std
add
jle
mov
(bad)
cs
jmp
cmps
shl
mov
and
test
jb
xchg
or
cmp
push
sti
or
addr16
(bad)
(bad)
jmp
addr16
xor
pop
lock
(bad)
mov
pop
imul
add
(bad)
(bad)
(bad)
mov
cmps
aas
sbb
mov
fnstsw
mov
repz
mov
and
cs
pop
imul
(bad)
(bad)
outs
scas
dec
mov
inc
xor
call
(bad)
(bad)
push
jg
iret
mov
or
lds
xchg
dec
mov
data16
leave
sahf
mov
cmps
stos
cwde
xchg
mov
jmp
outs
or
repz
jo
jmp
ds
mov
(bad)
lock
push
lahf
(bad)
xor
(bad)
(bad)
(bad)
jmp
jb
fucom
push
int
mov
mov
in
add
(bad)
inc
lahf
(bad)
call
push
cmps
cmp
push
cmp
mov
cwde
sub
call
call
mov
scas
pop
xor
or
outs
push
ret
xchg
loopne
int
(bad)
mov
iret
add
mov
stos
cmovs
call
cwde
js
test
retf
xor
enter
(bad)
jg
call
outs
stc
mov
test
ffree
add
adc
mov
(bad)
(bad)
call
sub
xchg
mov
popf
aad
xor
mov
sahf
stos
cmp
fidivr
(bad)
(bad)
(bad)
dec
ficom
neg
test
xchg
xor
xor
scas
(bad)
(bad)
call
cmps
(bad)
xchg
(bad)
ds
adc
lahf
mov
(bad)
inc
jmp
mov
xchg
rcr
mov
(bad)
jg
ins
fmul
cwde
add
ins
mov
cmp
shl
pushf
shl
cmps
(bad)
call
push
cmp
(bad)
jns
mov
test
pop
icebp
repnz
mov
pop
(bad)
(bad)
inc
mov
imul
mov
pop
gs
ja
fld
adc
xor
pop
mov
push
test
loope
and
jmp
push
iret
stos
test
fs
mov
mov
lods
in
cmp
jmp
call
clc
outs
xchg
in
retf
test
mov
(bad)
(bad)
fcomp
cld
push
xor
pop
idiv
lods
mov
(bad)
inc
int
ins
bound
dec
xchg
int
add
or
stos
inc
mov
(bad)
(bad)
(bad)
push
cld
mov
ds
cwde
mov
mov
or
loop
daa
push
bound
ss
mov
sbb
add
jl
xchg
cmps
jb
push
jg
retf
(bad)
push
in
loope
retf
inc
sbb
sbb
sub
jmp
mov
cmp
xchg
(bad)
(bad)
jmp
scas
jb
or
sti
sub
or
mov
loope
and
sar
(bad)
(bad)
in
out
push
fstp
xor
mov
(bad)
lock
jl
inc
sahf
and
cmp
push
(bad)
(bad)
(bad)
call
sub
xor
jg
xchg
lods
fstp
test
sar
outs
cld
(bad)
lock
loopne
mov
imul
mov
jmp
cld
push
or
in
call
leave
push
adc
and
lods
lock
std
pop
idiv
das
xchg
sbb
(bad)
inc
in
or
pop
in
sar
dec
cwde
jmp
dec
cld
mov
pop
out
or
xchg
and
lahf
(bad)
(bad)
(bad)
inc
xor
imul
mov
pop
mov
sbb
push
cmp
xchg
(bad)
call
jmp
retf
scas
ss
sar
ss
mov
leave
aaa
sub
push
mov
pop
pop
push
add
aaa
sub
mov
add
inc
mov
stos
sub
fs
push
xchg
cli
mov
fcomip
jg
xor
push
imul
out
fucomi
loopne
ja
mov
sub
fild
sub
daa
xchg
mov
scas
add
jg
movs
neg
fldenv
call
jmp
fild
dec
fnsave
pop
cwde
xor
out
scas
xchg
stos
in
dec
push
pop
call
std
mov
sub
mov
add
fiadd
movs
test
inc
(bad)
jo
call
jns
fnstcw
jecxz
ins
cmp
dec
sbb
test
call
(bad)
(bad)
fcomip
icebp
in
cmps
cmp
dec
aam
fcmovne
mov
fild
cmp
mov
arpl
(bad)
(bad)
call
xchg
data16
call
out
sub
lahf
push
sub
ret
pushf
xchg
repnz
das
sub
jg
jmp
std
lods
mov
cmc
out
fistp
jmp
outs
scas
jmp
mov
pop
loopne
call
cdq
adc
mov
fdiv
rcr
cmc
movs
mov
loope
xor
cld
(bad)
call
shl
sbb
mov
cmps
sbb
pop
jmp
iret
or
ja
(bad)
jmp
(bad)
loop
std
rcl
sbb
mov
mov
daa
test
adc
mov
or
dec
jp
pop
out
mov
cmp
jb
sub
not
xchg
idiv
push
ror
jae
inc
js
cmps
or
in
pop
push
(bad)
(bad)
(bad)
call
cld
ins
mov
hlt
add
pop
call
cs
pop
fidiv
iret
cmp
fwait
out
clc
(bad)
call
jle
mov
mov
or
cmp
mov
ja
fdiv
dec
xrelease
das
inc
test
(bad)
lock
pop
repz
cmp
mov
mov
fld
out
or
mov
xchg
sub
cmp
or
pop
adc
(bad)
test
pop
pusha
push
pusha
mov
pusha
fbstp
call
pop
mov
fbld
cmp
icebp
mov
mov
enter
sub
jp
push
(bad)
test
push
jmp
pushf
movsx
or
sahf
push
jecxz
jo
and
mov
int3
(bad)
(bad)
cmp
jmp
call
pop
cmp
(bad)
(bad)
(bad)
(bad)
cmp
rol
mov
arpl
movs
pop
xchg
dec
mov
pop
xchg
push
push
(bad)
stos
int3
cmp
dec
jo
push
xchg
sar
mov
cmp
sub
jle
lock
pop
(bad)
(bad)
fbld
(bad)
fwait
push
jmp
pop
add
mov
scas
sub
call
cwde
push
pop
retf
popf
out
shl
mov
jae
hlt
lock
jle
data16
jle
push
cmp
cwde
mov
test
aam
dec
cmp
test
jb
cmps
fcomp
in
adc
push
cld
mov
xchg
sub
push
lods
cli
int3
mov
and
add
push
adc
mov
jg
inc
fadd
jl
and
sub
loopne
repnz
pop
sbb
cmps
sar
mov
jmp
mov
cmps
inc
push
je
stos
mov
cmp
cmps
and
pop
or
(bad)
(bad)
mov
dec
in
or
pop
inc
fwait
loop
retf
fidiv
dec
mov
inc
jcxz
hlt
call
nop
xchg
mov
mov
xchg
stc
test
rol
in
stos
fbld
sbb
hlt
cmp
jmp
xchg
mov
pop
jp
(bad)
(bad)
(bad)
dec
enter
cmp
ds
mov
push
(bad)
cmc
call
mov
sub
popf
mov
pop
cld
push
jmp
mov
push
and
jne
adc
jns
add
jno
test
sub
(bad)
scas
lock
push
and
and
lock
in
mov
or
mov
push
(bad)
(bad)
fisttp
test
mov
in
mov
(bad)
push
cmc
jns
inc
clc
adc
lahf
ds
mov
sub
(bad)
(bad)
(bad)
inc
and
(bad)
cmp
cdq
sti
cmp
mov
iret
stc
sub
add
(bad)
(bad)
(bad)
call
sub
cmp
(bad)
stos
ja
stos
and
jp
pop
outs
dec
ror
(bad)
mov
in
iret
cmp
loopne
xor
cmps
mov
mov
cmp
cdq
inc
mov
std
jmp
xchg
sub
xchg
mov
mov
sbb
cmc
jmp
(bad)
inc
add
fdivr
ficomp
inc
call
call
xchg
dec
(bad)
mov
xchg
pusha
scas
add
pushf
ret
aaa
movs
test
mov
or
add
gs
hlt
into
(bad)
mov
pop
adc
push
adc
lock
mov
or
xchg
les
mov
and
jl
xor
adc
out
fcom
cmp
call
or
mov
loop
sbb
out
sbb
sar
shl
cs
add
int3
sbb
xchg
push
lahf
clc
(bad)
(bad)
(bad)
jmp
stos
sar
pop
fwait
js
out
jle
mov
inc
jno
outs
xor
inc
enter
movs
mov
fisubr
idiv
(bad)
call
stc
pop
sti
call
jl
sar
sub
push
pop
or
and
call
sbb
or
and
dec
xor
cmp
jg
or
(bad)
sti
xor
sub
inc
stos
stos
iret
mov
pusha
sahf
ins
push
sahf
aaa
cmp
mov
inc
push
jmp
aaa
test
adc
stc
int
fisttp
iret
dec
pop
aad
stos
xchg
shr
imul
mov
clc
(bad)
(bad)
push
ret
sbb
aam
cli
sub
jp
repnz
rcr
inc
outs
into
iret
cld
jae
or
mov
mov
jmp
push
mov
add
jp
mov
leave
pusha
mov
mov
jo
pushf
(bad)
(bad)
(bad)
call
neg
pop
dec
mov
repnz
jbe
jmp
mov
into
fild
sub
(bad)
fbld
fild
or
sub
(bad)
push
jmp
jmp
call
pop
and
retf
mov
stos
inc
jbe
fsubr
fcom
push
ret
fs
stos
push
movs
iret
std
pop
out
stos
movs
lock
cmp
(bad)
cmps
movs
sbb
ret
mov
lea
enterw
ins
mov
mov
jmp
dec
jmp
mov
push
clc
and
lods
or
idiv
jl
push
cmps
pop
sub
out
in
fidivr
fistp
or
leave
cmp
ror
jmp
dec
inc
pop
xor
rol
cmp
(bad)
(bad)
(bad)
mov
sub
stos
jbe
cmps
adc
jbe
mov
dec
or
scas
test
in
or
(bad)
(bad)
(bad)
dec
push
outs
sbb
and
arpl
or
sti
lods
pop
or
jb
mov
pop
and
lods
mov
push
nop
push
jae
add
(bad)
mov
xchg
pop
mov
and
pushf
dec
mov
jg
loop
test
dec
mov
jb
repnz
sub
out
sbb
add
sub
std
jg
jmp
(bad)
mov
mov
xchg
mov
loopne
retf
cmp
push
leave
jb
ja
ret
and
iret
push
inc
mov
sbb
or
cmp
ret
push
dec
or
addr16
xor
(bad)
dec
ds
sub
cmc
push
xor
scas
int3
jge
mov
icebp
or
cli
jmp
fs
xchg
sub
adc
mov
push
cmps
adc
lock
fnstenv
mov
(bad)
(bad)
call
jmp
in
(bad)
test
dec
stos
mov
pop
outs
mov
mov
mov
ds
call
(bad)
jle
out
mov
dec
and
pop
xor
loopne
xor
cmp
jmp
and
adc
push
push
sub
add
lea
cmp
pop
cli
cli
inc
pop
enter
push
in
jno
or
test
xor
cmps
sbb
(bad)
(bad)
jmp
outs
nop
push
aaa
pusha
mov
lods
ret
add
cmp
(bad)
jnp
jmp
push
out
jnp
sub
xchg
sub
push
push
pop
jb
imul
(bad)
(bad)
(bad)
(bad)
jle
inc
jge
lods
fwait
movs
aad
cmps
adc
add
mov
call
test
push
popa
lea
clc
shl
mov
cmp
rol
out
ror
mov
fnsetpm(287
(bad)
ja
scas
xchg
push
sbb
fsub
es
xchg
(bad)
cmp
pop
mov
jmp
ins
jo
pop
push
(bad)
(bad)
(bad)
call
imul
imul
fidiv
cld
push
push
leave
lods
and
mov
pusha
mov
int
sbb
(bad)
fimul
mov
pop
in
stc
adc
inc
jg
push
in
fwait
in
mov
das
adc
inc
cli
out
xor
lods
test
xor
(bad)
fild
dec
iret
mov
mov
fisub
cmp
adc
(bad)
(bad)
(bad)
(bad)
cmp
scas
pop
push
out
pop
pop
pushf
test
add
adc
mov
dec
pushf
jge
jmp
jnp
add
push
push
cmp
inc
cld
pushf
fsub
(bad)
mov
xchg
aam
test
jno
dec
retf
fcmovb
(bad)
mov
cwde
outs
sub
out
jp
push
pop
cmc
outs
mov
and
sbb
rol
pop
adc
in
lock
(bad)
(bad)
inc
push
retf
push
add
mov
cmps
lea
icebp
fnsave
es
mov
stos
test
xor
shr
retf
ficomp
pushf
jns
push
mov
(bad)
(bad)
(bad)
(bad)
mov
add
lahf
pop
fistp
test
(bad)
in
mov
dec
stos
sbb
sahf
xchg
xor
pop
(bad)
(bad)
(bad)
inc
mov
mov
sbb
and
mov
(bad)
or
fsubr
lods
sub
imul
(bad)
mov
pushf
jecxz
iret
sar
or
jmp
ror
adc
pop
sub
sbb
arpl
(bad)
(bad)
fld
mov
ins
fdivrp
aaa
mov
cmp
add
out
jg
fiadd
out
cli
(bad)
jmp
(bad)
scas
mov
pusha
shl
test
cwde
jo
cdq
cmps
xchg
mov
pop
lock
jns
or
add
scas
cdq
push
cld
(bad)
mov
cmp
push
das
mov
dec
sub
jbe
sbb
test
adc
push
adc
mov
js
dec
aas
pop
loop
sbb
repz
jae
(bad)
(bad)
(bad)
jmp
xchg
fwait
fs
int
lods
pop
sub
call
popf
out
xor
and
(bad)
(bad)
(bad)
jmp
jae
dec
daa
push
retf
dec
xchg
add
push
jne
mov
or
js
cmp
inc
lods
jmp
dec
mov
or
pop
or
sub
(bad)
call
daa
mov
rcr
mov
arpl
sbb
push
loopne
or
scas
push
and
cmp
adc
push
outs
fst
aas
in
mov
stos
push
(bad)
mov
idiv
sub
sub
jno
mov
xor
mov
pop
pop
pop
xor
dec
xchg
stos
cmp
mov
outs
add
cmps
lds
jb
jecxz
mov
outs
aad
out
(bad)
(bad)
inc
sub
movs
inc
inc
pop
jns
cdq
lds
cmp
fsub
pop
fldcw
mov
fcomip
dec
jecxz
das
ds
fcomp
fwait
jb
add
push
add
jbe
fwait
and
sub
je
repnz
mov
call
xlat
cs
imul
xchg
xor
ret
daa
gs
push
mov
aad
push
sub
ds
(bad)
dec
and
mov
mov
sar
(bad)
(bad)
out
and
push
mov
leave
test
out
and
hlt
sti
int3
mov
(bad)
(bad)
(bad)
push
stos
icebp
jne
ficom
jb
aad
sub
xor
mov
stos
stos
fcmove
ret
out
dec
xor
xchg
clc
jno
stos
cmp
call
cmp
sbb
inc
lahf
scas
cli
call
cs
in
dec
es
dec
xchg
lds
xor
sbb
jnp
or
fdivr
sub
jg
inc
pop
lock
mov
add
jmp
jl
ret
jecxz
aaa
pop
loopne
xchg
jbe
loop
and
into
cmps
(bad)
mov
sub
mov
(bad)
mov
cld
sub
add
dec
imul
push
mov
xor
cmp
adc
and
lahf
js
xchg
and
push
sub
ja
call
dec
push
mov
cmps
nop
xor
pop
pop
jmp
mov
mov
mov
aad
movs
ds
outs
sar
jmp
cmp
jl
sti
jbe
movs
pop
sbb
cmp
fcmovne
cs
outs
sub
push
cmp
mov
push
sbb
mov
nop
adc
shl
mov
pop
dec
daa
push
xchg
stos
fisttp
sbb
cmp
sti
jmp
(bad)
movs
in
fwait
or
jle
adc
aaa
sub
mov
mov
aad
lahf
cmc
fsub
xor
out
(bad)
(bad)
inc
ins
mov
call
sahf
stos
movs
jmp
(bad)
(bad)
in
call
push
xor
adc
in
rcr
jae
inc
into
jecxz
hlt
cmc
add
(bad)
jmp
xor
cmps
call
divps
bound
mov
mov
(bad)
fistp
scas
mov
jne
in
push
cmp
clc
dec
mov
jmp
jmp
(bad)
(bad)
jmp
sbb
mov
nop
cli
mov
add
add
jmp
cmp
das
mov
mov
push
jb
faddp
std
mov
pop
push
inc
sahf
data16
ins
ficom
jnp
je
(bad)
(bad)
(bad)
out
mov
dec
stos
push
aaa
call
dec
into
call
cmp
mov
pop
or
test
pop
fdivr
xor
jmp
and
xor
add
cld
add
cmp
loop
(bad)
(bad)
dec
mov
mov
(bad)
aas
sub
xchg
loope
imul
fs
(bad)
(bad)
jg
mov
mov
xchg
hlt
cli
pop
iret
and
sub
jns
inc
pop
mov
ror
push
dec
jp
pop
xchg
push
ficom
add
jmp
or
rcl
push
or
or
aaa
push
cli
test
mov
cmp
call
sub
or
sbb
movs
jmp
pop
jmp
xor
nop
push
cmp
pop
test
imul
mov
sub
shr
scas
cmp
push
mov
ss
imul
(bad)
call
retf
lods
lock
adc
xchg
scas
iret
cmp
ret
push
call
xchg
add
call
repnz
mov
test
push
fwait
mov
(bad)
(bad)
push
mov
daa
cmps
jnp
jnp
sbb
repnz
cmps
push
div
sub
fist
aam
cmps
mov
inc
mov
adc
mov
shr
xor
push
sub
test
enter
or
sub
imul
sbb
ja
mov
arpl
outs
(bad)
(bad)
aas
lods
retf
push
adc
dec
cli
je
mov
repnz
jmp
(bad)
(bad)
dec
aad
adc
data16
cdq
inc
adc
sbb
jnp
xchg
lock
xor
lock
jg
mov
jl
jp
cli
add
(bad)
push
pusha
push
push
dec
and
dec
je
sub
adc
push
mov
push
sbb
stos
pop
sbb
(bad)
(bad)
(bad)
dec
xchg
call
dec
xor
mov
mov
in
xchg
mov
(bad)
push
pusha
cld
(bad)
jmp
pop
pop
and
jmp
fisubr
push
mov
inc
ror
int3
and
shl
fisttp
jmp
call
mov
mov
ins
int3
mov
and
mov
aam
clc
push
sub
(bad)
(bad)
dec
and
sbb
fisub
dec
fist
sub
dec
out
sub
sub
test
enter
pushf
add
mov
scas
clc
(bad)
cmp
mov
loop
(bad)
stc
mov
sub
int3
nop
add
xchg
inc
lds
cmp
icebp
mov
pop
mov
xor
lods
scas
and
sub
test
dec
iret
jmp
mov
mov
push
enter
push
cld
jmp
and
stc
mov
ret
cmps
ffreep
fisubr
ficom
outs
add
stos
mov
cli
cld
pop
push
pop
jle
or
push
push
mov
adc
add
pop
mov
cwde
out
imul
xlat
cmps
jg
dec
jl
xchg
xchg
mov
jns
jmp
jmp
pop
xchg
into
add
jae
add
std
jge
cmp
xchg
mov
dec
clc
pop
sahf
or
jp
mov
fwait
out
adc
or
fwait
es
mov
xchg
jmp
pusha
clc
adc
xor
jb
jg
jmp
clc
out
and
push
xchg
ret
pop
sub
out
ja
(bad)
fcomip
call
xchg
cmp
hlt
mov
mov
jle
xor
xchg
loope
stos
stos
xor
cli
(bad)
(bad)
inc
fisub
ror
(bad)
push
mov
fcomp
fldcw
or
jmp
aaa
sub
mov
ins
push
fcomp
not
std
sbb
ds
es
ins
or
inc
in
xchg
(bad)
(bad)
push
mov
movs
(bad)
sub
sbb
pop
jg
iret
cdq
dec
mov
shl
(bad)
(bad)
call
stos
inc
call
xor
mov
repnz
scas
push
movs
mov
cmps
into
dec
mov
(bad)
cmp
adc
jns
jno
daa
jmp
sub
sahf
xor
inc
test
out
fisttp
sub
cli
and
cmp
mov
push
aad
jb
jl
(bad)
(bad)
(bad)
jmp
scas
xchg
out
sti
add
or
xor
mov
jnp
(bad)
mov
test
push
jbe
(bad)
(bad)
(bad)
(bad)
jmp
aad
and
and
das
cwde
pop
aam
popf
ret
dec
cmp
dec
pop
(bad)
(bad)
(bad)
mov
call
data16
push
pop
test
sti
push
mov
cs
push
adc
mov
cs
sar
dec
nop
ror
sbb
scas
pop
adc
test
pop
lods
(bad)
(bad)
(bad)
call
scas
(bad)
jl
mov
cmps
aaa
out
fwait
out
adc
mov
push
fnstcw
mov
push
jo
mov
jmp
xchg
sub
push
(bad)
adc
sbb
(bad)
(bad)
jmp
gs
cwde
stc
sub
push
fisttp
stc
out
sub
div
fs
(bad)
(bad)
inc
mov
mov
mov
xchg
sbb
add
push
(bad)
std
mov
push
dec
jb
test
dec
(bad)
and
mov
jne
and
mov
mov
mov
push
jmp
std
mov
loopne
jns
dec
sub
jns
cdq
push
fisub
clc
test
jb
pop
cli
jmp
sahf
loop
sahf
and
mov
jmp
cmp
push
fild
jmp
jmp
mov
sti
sbb
fld
pop
cld
mov
out
bound
cmps
inc
lahf
pushf
adc
mov
scas
cs
push
pop
outs
mov
fucomi
aas
fst
mov
(bad)
(bad)
(bad)
mov
mov
mov
xchg
std
sar
test
data16
jle
clc
(bad)
call
daa
mov
mov
sbb
push
sub
jae
movs
pop
fadd
sub
lahf
push
jne
inc
mov
push
or
or
lods
popa
push
sahf
push
pusha
pop
mov
sub
jnp
imul
aad
aam
jmp
jmp
add
pop
cwde
test
das
cmp
jb
mov
mov
mov
(bad)
(bad)
(bad)
dec
gs
sub
fwait
jbe
sbb
movs
mov
jg
sbb
nop
add
lea
les
std
xor
dec
inc
or
leave
pop
lods
adc
pop
dec
sbb
rol
add
pop
addr16
fwait
sbb
pop
cmps
stos
xchg
out
(bad)
(bad)
call
push
and
loope
dec
sar
iret
lahf
mov
dec
jp
lahf
fisttp
test
stos
add
dec
ins
dec
mov
pop
imul
jae
or
daa
push
movs
rcl
test
cmp
jne
xchg
(bad)
fcomip
(bad)
mov
xchg
nop
imul
sub
jge
(bad)
(bad)
(bad)
dec
ds
sbb
sbb
in
fsub
or
int3
retf
jg
movs
cmp
jmp
cmp
and
retf
call
sub
pop
je
ss
dec
pop
stos
inc
dec
push
cmps
mov
bswap
ja
stos
shr
loopne
mov
bound
push
pushf
scas
bound
test
sbb
sub
mov
test
cmp
outs
jmp
mov
cmp
stos
push
dec
pop
enter
out
adc
ds
mov
cs
(bad)
(bad)
(bad)
jmp
aad
out
pop
jnp
mov
mov
out
adc
jmp
inc
jecxz
jg
(bad)
xor
retf
cmps
jl
pop
pusha
or
in
or
push
sub
pop
mov
lahf
or
(bad)
(bad)
(bad)
inc
and
push
inc
retf
mov
push
hlt
mov
mov
loope
and
dec
mov
mov
sahf
pop
cmps
mov
and
test
push
dec
int3
pop
pop
lahf
mov
push
sub
(bad)
jg
push
mov
cs
out
xlat
test
xchg
ins
xchg
push
fs
mov
sbb
imul
pop
lock
sub
sbb
sub
mov
add
xchg
das
jb
imul
xor
cmp
loop
(bad)
jg
mov
mov
fidiv
data16
sub
lock
mov
xchg
mov
(bad)
jmp
(bad)
enter
test
mov
test
adc
ja
hlt
out
cmp
out
sar
clc
mov
jmp
pop
retf
pop
hlt
and
mov
xchg
hlt
jp
sub
sar
(bad)
push
imul
stos
lahf
sahf
(bad)
cli
outs
lods
dec
sbb
out
pop
mul
in
cli
scas
sub
cmp
fcomip
gs
(bad)
fdivr
cmc
mov
leave
add
xor
test
xlat
(bad)
(bad)
std
jle
cld
mov
repz
in
dec
pop
inc
lods
lahf
push
std
fisubr
dec
(bad)
(bad)
call
iret
mov
mov
jno
sbb
pusha
cmp
cld
(bad)
(bad)
inc
inc
cs
push
and
push
mov
pop
cmp
push
adc
dec
into
pop
pop
jg
popa
xchg
pop
loopne
push
mov
inc
movs
push
(bad)
les
in
mov
scas
push
retf
mov
(bad)
(bad)
(bad)
jmp
in
test
mov
mov
jl
mov
call
lods
cmps
mov
cmp
scas
mov
dec
or
pushf
push
and
(bad)
(bad)
in
addr16
(bad)
stc
pop
add
ins
and
push
push
mov
fbstp
lods
(bad)
jg
test
les
and
sbb
sbb
test
(bad)
(bad)
(bad)
cld
call
jp
or
aaa
out
lahf
sbb
xor
sahf
mov
xchg
push
ret
stos
and
cmp
jo
cdq
cmp
je
(bad)
(bad)
(bad)
jmp
or
ror
call
pop
or
jnp
mov
(bad)
mov
(bad)
cs
sub
sbb
jnp
and
adc
push
or
add
sbb
mov
ins
fwait
inc
stc
mov
jmp
push
(bad)
imul
call
push
cmp
sahf
in
out
jmp
jmp
dec
or
sahf
lods
inc
mov
jo
inc
mov
mov
mov
pop
ins
out
(bad)
sub
cli
(bad)
(bad)
inc
pop
pop
fnstenv
adc
jb
outs
sar
outs
cdq
stc
shl
scas
xchg
(bad)
jmp
mov
jbe
mov
mov
mov
inc
bound
add
fdivr
sub
push
(bad)
cli
ror
mov
mov
sar
dec
jmp
mov
xchg
mov
and
adc
lock
(bad)
xchg
popa
or
es
ins
cwde
jmp
mov
push
push
jmp
xchg
or
mov
sti
(bad)
(bad)
call
sar
call
lea
aas
mov
push
push
loopne
mov
mov
ins
cmp
stos
sub
fsub
sar
call
dec
test
dec
test
mov
xchg
aad
mov
test
div
sar
(bad)
call
xchg
call
retf
sbb
add
add
cmc
stos
outs
mov
or
(bad)
(bad)
jg
in
mov
sub
mov
mov
movs
cmp
movs
stos
dec
(bad)
(bad)
(bad)
call
call
ins
sub
imul
or
mov
cmp
jb
out
iret
xchg
dec
int
(bad)
(bad)
(bad)
call
cmp
push
jb
or
ret
push
xchg
jl
add
cs
push
xchg
push
add
push
sbb
sub
dec
out
mov
sub
sub
mov
xchg
ss
ret
ins
push
dec
xor
leave
add
(bad)
(bad)
inc
ror
ds
dec
jnp
bound
out
sahf
mov
(bad)
mov
mov
std
or
int3
sub
adc
aad
in
(bad)
(bad)
dec
(bad)
jb
mov
loope
scas
inc
call
mov
xchg
push
repz
sub
lods
jg
popa
cld
push
mov
push
arpl
aas
hlt
xor
mov
aam
sub
xor
sub
ins
sbb
jmp
retf
xor
xchg
sub
fwait
clc
fistp
mov
jle
cmp
call
or
into
add
sbb
(bad)
mov
dec
adc
(bad)
idiv
push
sbb
jne
xchg
leave
movs
repnz
nop
xchg
adc
ds
(bad)
(bad)
inc
ss
arpl
xchg
lods
loop
xchg
or
jo
pop
pusha
(bad)
push
cld
(bad)
jns
sub
std
mov
adc
pop
cmp
mov
(bad)
(bad)
mov
pop
hlt
push
mov
sbb
xor
adc
mov
(bad)
mov
sub
sbb
(bad)
dec
mov
stos
idiv
test
out
inc
cmp
mov
(bad)
xchg
xchg
mov
pop
aam
jmp
lods
push
test
(bad)
push
mov
hlt
mov
xor
imul
cmps
jnp
add
rcl
or
xlat
loopne
cli
out
add
push
xor
mov
and
dec
mov
sar
cmps
scas
ja
push
inc
push
(bad)
cmps
push
ror
clc
dec
push
mov
out
pop
sbb
ror
ins
dec
cmps
loop
inc
(bad)
inc
mov
cwde
jb
je
aad
call
int
lock
mov
mov
or
mov
jg
mov
ret
mov
dec
enter
push
mul
lods
push
cld
call
sbb
jmp
ret
imul
sbb
pop
sub
xchg
call
xchg
sub
cli
inc
(bad)
cmp
(bad)
(bad)
fbld
pop
in
(bad)
xchg
mov
sahf
push
pop
out
mov
popf
adc
test
mov
push
std
sahf
adc
into
inc
jno
(bad)
(bad)
(bad)
jg
ret
cmp
retf
mov
sub
cmp
call
(bad)
(bad)
call
push
sub
call
loopne
repnz
sbb
add
call
pop
popa
sbb
ja
daa
lods
enter
sub
lock
push
sar
daa
dec
jl
sbb
js
rol
lock
adc
xchg
pop
or
int3
cmps
nop
and
out
add
pop
or
cmps
push
in
or
cwde
leave
mov
(bad)
(bad)
out
xor
cmc
(bad)
sub
sub
cwde
jae
shl
mov
mov
cmp
imul
cld
gs
pop
fnstsw
fdivrp
xchg
jg
retf
test
push
jmp
cmps
into
das
mov
mov
test
push
push
adc
sbb
aaa
push
aam
(bad)
pop
(bad)
cmp
imul
xchg
mov
and
xor
cmp
add
jnp
(bad)
(bad)
(bad)
jg
jns
icebp
jns
mov
sbb
lds
cmp
jmp
pop
test
and
push
(bad)
jae
(bad)
mov
je
push
cld
(bad)
(bad)
jmp
stos
mov
sbb
scas
call
mov
aam
fild
cmp
nop
call
xor
(bad)
(bad)
jmp
(bad)
push
js
cmp
gs
sub
loop
mov
cmp
cmp
loope
fist
push
mov
xchg
inc
shl
(bad)
(bad)
(bad)
mov
inc
fstp
sbb
xor
bnd
sub
fwait
(bad)
(bad)
call
jae
pop
ds
xchg
lahf
cmp
(bad)
cdq
sar
sub
aaa
cmps
inc
scas
lock
mov
(bad)
(bad)
jmp
push
xchg
mov
mov
loope
cmp
stos
inc
mov
add
fs
or
(bad)
xlat
scas
rcr
pop
data16
and
aad
fldcw
or
ss
(bad)
jg
cld
mov
mov
cmp
cmp
lahf
in
push
mov
rol
push
add
and
sahf
jp
(bad)
(bad)
(bad)
call
fisttp
ja
retf
(bad)
or
push
and
push
jg
jns
or
mov
cmc
sub
jae
cmp
rol
dec
stos
into
shl
sub
(bad)
call
mov
scas
mov
pop
push
out
jecxz
or
dec
dec
and
mov
jo
add
fbld
mov
mov
(bad)
(bad)
mov
cmp
ret
in
xchg
or
dec
mov
rcr
xchg
or
cmp
inc
outs
mov
(bad)
(bad)
jmp
mov
cmps
cld
movs
inc
retf
sbb
mov
stos
out
(bad)
(bad)
dec
popa
mov
loop
push
rcr
sub
push
sub
push
outs
pop
aaa
and
gs
jg
(bad)
std
fwait
push
jb
mov
aam
mov
pop
cmp
js
sbb
fstp
mov
into
mov
stos
stos
mov
and
adc
ds
int3
push
cmp
jecxz
mov
mov
retf
lods
bound
add
mov
mov
outs
(bad)
mov
(bad)
jmp
sub
lock
call
adc
mov
(bad)
jnp
je
xor
pop
mov
hlt
(bad)
jg
enter
pop
push
pop
jo
adc
mov
lods
(bad)
(bad)
call
repz
mov
add
fsub
xchg
pop
pop
xchg
mov
aad
push
stos
cmp
(bad)
(bad)
(bad)
call
pusha
or
std
mov
arpl
mov
xor
cwde
fisttp
xchg
jg
mov
cmps
call
xchg
mov
mov
ja
(bad)
out
jmp
cmp
mov
(bad)
push
or
mov
repnz
xchg
movs
(bad)
ds
cmps
jmp
sub
adc
sbb
sub
gs
add
push
(bad)
fnstenv
sub
add
jmp
jmp
icebp
cmp
push
sahf
(bad)
call
std
adc
sbb
mov
push
nop
movs
adc
sub
(bad)
fbstp
add
add
(bad)
pushf
push
push
ret
popa
cmp
test
cld
jnp
fmul
jmp
icebp
cmps
fwait
pusha
std
cli
call
xor
push
(bad)
mov
lods
loop
xchg
mov
ins
cmp
sub
sbb
leave
dec
fisub
xor
test
movs
(bad)
in
sbb
or
(bad)
(bad)
(bad)
call
xchg
mov
mov
pop
scas
sahf
das
fidivr
mov
mov
das
mov
lidtd
call
mov
(bad)
(bad)
mov
and
fld
xchg
sbb
sub
xchg
pop
inc
adc
jo
push
dec
mov
xchg
das
loop
(bad)
call
mov
xor
outs
and
js
xchg
dec
retf
mov
push
std
pop
adc
mov
mov
call
aam
frstor
sub
cld
mov
and
cmp
outs
stos
push
into
in
(bad)
movs
stos
dec
test
(bad)
jmp
outs
and
mov
and
scas
(bad)
test
and
jecxz
je
fisubr
in
mov
or
imul
(bad)
mov
sti
mov
stos
inc
fstp
fmul
aaa
sub
mov
outs
(bad)
jg
inc
cwde
outs
sub
inc
(bad)
fiadd
adc
cli
adc
scas
pop
(bad)
(bad)
(bad)
dec
mov
xchg
js
jae
xor
test
push
lods
in
dec
sbb
sub
ret
jp
lahf
les
aad
gs
jecxz
in
add
ret
xchg
cs
xor
sub
hlt
scas
and
clc
inc
cld
(bad)
cmp
(bad)
cmp
xchg
xor
into
mov
jg
or
sbb
jae
jae
clc
das
pop
ror
cmp
(bad)
call
or
jp
adc
mov
aas
mov
jo
push
mov
aam
mov
xchg
xchg
mov
lods
call
mov
(bad)
(bad)
push
leave
mov
jl
push
adc
xchg
push
xor
popf
cmps
mov
mov
push
in
mul
and
jns
clc
adc
mov
mov
ret
inc
aaa
out
clc
(bad)
push
add
rol
sbb
mov
xor
or
(bad)
(bad)
inc
scas
pop
dec
inc
mov
mov
pop
lahf
clc
iret
push
test
cmp
out
int
stos
xchg
sbb
mov
fdivr
or
push
pop
pop
xchg
nop
ret
mov
(bad)
cmc
mov
movs
or
cs
aaa
(bad)
std
(bad)
(bad)
(bad)
call
int3
jg
call
push
push
loop
repnz
lods
inc
mov
(bad)
mov
ins
sub
sub
add
(bad)
dec
push
inc
test
test
xchg
mov
ficomp
pop
sub
(bad)
dec
shr
adc
jo
bound
(bad)
popa
push
or
pop
jb
les
(bad)
jg
pushf
je
adc
retf
cwde
adc
pop
enter
lods
add
leave
ret
outs
lods
cmp
test
(bad)
fcomip
jg
retf
or
sahf
(bad)
mov
outs
mov
test
inc
js
sbb
scas
sbb
pop
(bad)
int3
push
inc
call
add
test
mov
dec
mov
jmp
shl
jbe
jmp
xor
(bad)
call
aas
jns
fisttp
imul
retf
mov
lahf
or
cli
mov
lahf
sbb
mov
sub
mov
sar
(bad)
dec
mov
movs
iret
and
scas
push
cs
stos
push
cld
or
mov
inc
jmp
mov
push
retf
or
adc
(bad)
(bad)
fild
sbb
call
pushf
push
pop
(bad)
pop
xor
(bad)
fld
bound
sar
repz
nop
outs
(bad)
jg
(bad)
mov
mov
leave
or
cs
adc
dec
and
inc
cmp
mov
jnp
outs
mov
inc
scas
adc
mov
mov
fs
(bad)
(bad)
(bad)
(bad)
cmp
retf
and
add
xor
cmp
jle
stos
fsubr
lods
adc
cli
stos
pop
enter
(bad)
mov
jmp
xor
mov
retf
xchg
ret
call
scas
jp
push
sub
(bad)
loopne
pop
add
into
shr
sahf
sbb
mov
jmp
call
mov
sub
sub
aad
push
add
ds
adc
inc
mov
adc
ins
add
or
loopne
imul
jmp
xlat
xchg
add
xor
sub
mov
bound
pop
sub
stc
or
jbe
les
test
repnz
xchg
cmp
call
push
retf
sbb
jmp
sbb
sub
push
frstor
imul
out
ins
clc
leave
lods
cld
test
jg
jmp
ret
xchg
xor
out
xor
add
mov
jl
push
stos
dec
(bad)
retf
sbb
dec
pop
jmp
adc
push
stos
ins
pop
sbb
cmc
push
fcmovb
mov
and
icebp
cwde
enter
call
dec
or
jmp
sub
sbb
scas
cmp
mov
or
(bad)
jg
dec
sahf
adc
loop
jmp
mov
jo
loop
dec
(bad)
jno
cmps
jg
cmc
out
call
mov
cmp
mov
hlt
outs
adc
mov
loop
(bad)
out
push
sub
ins
loopne
add
dec
cmc
pop
push
sti
dec
test
pop
mov
or
mov
sub
jns
ds
mov
jle
or
lahf
pop
lock
jmp
stc
mov
cs
jl
jmp
out
out
and
loopne
mov
sar
jmp
test
xor
ins
or
jb
xchg
fstp
lahf
pop
xor
aaa
ret
adc
push
dec
outs
cs
in
adc
xor
mov
(bad)
(bad)
call
xor
inc
imul
or
cmp
stos
xchg
pop
test
das
xchg
add
(bad)
dec
xchg
clc
into
sub
sbb
fs
ret
cmps
add
ins
test
(bad)
(bad)
jg
mov
xchg
aad
jg
jl
std
push
cmp
repnz
enter
imul
imul
pop
dec
adc
mov
fwait
xchg
movs
ins
mov
cmc
aas
movs
mov
push
ret
retf
dec
leave
(bad)
(bad)
jmp
movs
inc
adc
ins
scas
cmp
mov
stos
sub
out
(bad)
(bad)
dec
mov
fistp
(bad)
mov
mov
mov
lods
or
call
jmp
in
aas
mov
adc
mov
lods
pop
lds
(bad)
iret
(bad)
(bad)
dec
mov
add
imul
mov
out
cli
mov
je
(bad)
(bad)
(bad)
jmp
shr
pop
and
or
dec
xchg
jnp
mov
mov
lds
icebp
push
repnz
cmps
mov
sub
xchg
ds
cs
js
cmp
repz
in
xor
pop
jle
cli
(bad)
out
xor
cmp
cli
fisttp
out
jb
jmp
cmp
dec
fldenv
or
jle
into
scas
push
sbb
movs
sbb
(bad)
(bad)
mov
push
xor
in
icebp
sub
jp
das
js
sar
(bad)
fcomip
dec
jbe
pop
test
retf
and
or
movs
inc
sbb
sub
cmp
(bad)
(bad)
(bad)
(bad)
jmp
fnstsw
call
cmp
retf
mov
ficom
cmp
sbb
xchg
sub
jno
and
test
ins
fcomip
(bad)
fild
cmps
ins
and
icebp
push
xchg
cli
popa
mov
cmps
ja
into
xor
call
nop
(bad)
in
jb
jmp
out
add
pop
arpl
(bad)
call
enter
dec
out
push
int3
mov
iret
mov
mov
(bad)
loop
mov
icebp
push
int
(bad)
out
sbb
in
add
hlt
call
out
jle
stc
push
mov
xor
std
cmp
cld
clc
or
test
(bad)
(bad)
(bad)
mov
jo
popf
mov
push
in
xchg
test
loopne
shr
push
aaa
adc
stos
mov
add
fst
jmp
or
test
stc
pop
stos
cmp
leave
(bad)
adc
sub
mov
cwde
push
adc
fbstp
jl
or
(bad)
jg
mov
cmp
pop
jno
test
(bad)
(bad)
(bad)
mov
lods
and
retf
test
mov
xchg
popf
loope
push
adc
icebp
(bad)
(bad)
push
push
call
add
(bad)
mov
jle
daa
xchg
sbb
or
mov
ds
aaa
mov
es
bound
retf
fistp
fimul
sub
sti
(bad)
(bad)
call
sahf
jb
(bad)
cmp
lods
pmaxsw
cli
js
stos
or
lahf
fisub
jmp
cli
pop
stc
ret
dec
mov
push
sbb
(bad)
dec
dec
cmps
int
inc
sub
sub
jbe
pop
lock
out
push
fisub
push
jo
clc
(bad)
(bad)
(bad)
mov
and
add
mov
cmp
dec
imul
test
push
cld
(bad)
(bad)
inc
call
pop
mov
push
mov
sahf
mov
stos
ror
dec
call
push
push
push
sti
lock
ss
das
call
inc
test
pop
ret
sub
xchg
movs
iret
dec
cmp
ins
inc
popf
or
loope
(bad)
out
xchg
lahf
mov
xlat
mov
les
call
pop
or
call
or
scas
sbb
lahf
loop
dec
(bad)
mov
and
jne
mov
icebp
mov
(bad)
(bad)
(bad)
dec
stc
xchg
lahf
fs
fldl2t
jmp
ds
scas
mov
pop
out
hlt
mov
mov
call
std
loope
cli
mov
(bad)
mov
fisubr
sub
hlt
stos
(bad)
(bad)
(bad)
(bad)
mov
sub
retf
test
scas
into
cmps
fist
das
xlat
into
mov
fwait
dec
mov
fbstp
(bad)
jg
(bad)
ficomp
ror
xchg
mov
lods
mov
inc
dec
jb
out
pop
xchg
lock
std
inc
sbb
mul
mov
jns
sub
inc
je
cs
mov
jb
inc
lods
mov
cmps
mov
(bad)
(bad)
call
sub
sbb
enterw
dec
mov
or
sbb
pop
(bad)
clc
inc
mov
cmps
(bad)
(bad)
(bad)
call
arpl
mov
ss
push
adc
dec
or
mov
fbld
call
xchg
pop
sbb
xchg
(bad)
mov
fcomip
(bad)
dec
mov
cmp
movs
jbe
retf
scas
enter
jno
cmps
sar
(bad)
call
fnsave
jnp
pop
jns
mov
sbb
(bad)
(bad)
(bad)
jg
cwde
stos
addr16
xor
shl
or
cs
sahf
(bad)
stos
stos
loop
shr
es
push
std
jmp
dec
push
leave
pushw
pop
mov
adc
mov
in
add
(bad)
call
jmp
mov
sbb
jl
das
fcom
popaw
jmp
dec
repnz
xchg
push
ins
sub
xchg
or
cs
and
jecxz
sbb
jmp
pop
stc
retf
retf
stc
fwait
sub
sbb
(bad)
jmp
push
loope
mov
xchg
push
popa
daa
mov
jle
test
fiadd
call
dec
mov
jle
daa
xor
sahf
push
gs
dec
scas
pop
es
sub
adc
fdivrp
es
test
mov
ficom
call
icebp
(bad)
dec
fwait
mov
das
pop
mov
jge
pusha
jle
test
fbld
inc
inc
jmp
stos
or
stos
sub
mov
sub
test
mov
pushf
mov
jmp
jl
call
jmp
cmps
add
pop
fs
add
fisttp
cwde
int
mov
comiss
(bad)
jg
and
jmp
sub
or
lds
or
pop
xchg
jp
out
mov
(bad)
inc
and
aas
test
mov
data16
pop
(bad)
push
es
call
nop
inc
push
pop
sub
pop
xchg
pop
pop
jg
fiadd
jmp
add
ins
shl
mov
jb
call
push
(bad)
push
loopne
push
push
call
or
in
push
rol
mov
shr
or
jb
push
mov
outs
pop
pop
sub
(bad)
sub
fwait
ins
mov
loop
or
call
jl
repnz
adc
or
sub
dec
xor
or
jle
xchg
sbb
cmp
push
push
sbb
(bad)
(bad)
(bad)
in
sbb
movs
cmp
test
(bad)
push
inc
in
in
cmp
call
push
or
lods
test
sub
(bad)
dec
daa
data16
icebp
sub
pop
xor
in
push
mov
outs
(bad)
(bad)
inc
jmp
in
xor
sbb
gs
push
sbb
push
mov
sub
lock
add
add
xor
and
jmp
cmp
sub
fild
xor
fucomp
dec
hlt
xlat
cmp
adc
lds
jmp
dec
cs
(bad)
mov
xchg
or
(bad)
(bad)
(bad)
(bad)
cmp
cli
dec
stos
mov
daa
mov
mov
pop
dec
mov
sub
push
iret
ss
out
mov
out
in
fistp
retf
dec
pop
out
ret
jns
(bad)
mov
jmp
rcr
jmp
(bad)
(bad)
(bad)
cmp
add
movs
out
pop
mov
fidiv
mov
mov
in
retf
adc
xchg
mov
call
dec
js
xchg
adc
loope
sbb
mov
mov
cdq
mov
sub
jmp
inc
fst
or
push
mov
das
mov
retf
(bad)
(bad)
(bad)
fsubr
xor
mov
aam
sar
dec
outs
adc
xlat
xchg
and
scas
add
imul
pushf
scas
or
jg
sbb
sub
sbb
cmp
lea
jp
out
sub
bound
jp
cmps
test
fisubr
mov
or
std
ja
dec
mov
xchg
sahf
jno
and
mov
jb
fisttp
std
cmp
mov
(bad)
(bad)
(bad)
mov
(bad)
mov
iret
push
test
sub
cmp
mov
mov
push
test
(bad)
(bad)
dec
aad
rsqrtps
mov
idiv
repnz
ja
movs
xor
(bad)
call
pop
ret
xchg
jmp
arpl
rcr
(bad)
(bad)
jmp
repnz
(bad)
xor
call
mov
xor
jb
cli
push
adc
(bad)
(bad)
dec
stc
(bad)
cs
mov
fld
mov
iret
inc
and
popa
xchg
imul
sbb
pop
pusha
imul
or
dec
cwde
std
loope
jb
dec
jg
call
push
cmp
out
sub
push
push
stc
jmp
pop
push
(bad)
retf
jmp
jmp
leave
mov
xchg
jmp
stos
sub
outs
or
sub
push
or
mov
(bad)
(bad)
call
imul
sub
dec
stos
inc
cmp
xchg
sub
movs
enter
mov
ret
rol
adc
and
pop
call
rcr
or
(bad)
(bad)
dec
mov
ret
or
test
xor
in
mov
add
sub
call
mov
(bad)
pushf
cdq
inc
cmp
call
cwde
daa
div
call
movs
pushf
and
add
(bad)
(bad)
call
push
lahf
jmp
call
sar
cmp
in
push
arpl
fwait
mov
jmp
mov
(bad)
(bad)
fdivr
and
sub
js
repz
and
call
pop
lock
adc
push
jo
push
daa
lahf
xchg
and
mov
mov
jle
xor
in
rcl
lock
cmp
das
xchg
sub
std
push
adc
add
mov
jnp
(bad)
jg
test
test
sub
jne
adc
xor
dec
mov
lea
push
push
jne
movs
adc
mov
lds
jmp
ss
adc
scas
int
(bad)
(bad)
(bad)
jmp
into
mov
sub
stos
int3
push
inc
cmps
sbb
(bad)
mov
xor
je
xor
call
scas
add
xor
dec
mov
sub
mov
into
cmps
aaa
or
sub
movs
inc
cli
sub
inc
mov
mov
stos
pop
pop
addr16
sbb
das
inc
test
or
jg
outs
adc
out
lock
rcl
mov
inc
(bad)
into
clc
movs
dec
inc
clc
fcomi
mov
xor
sbb
add
ins
pop
pop
sub
xchg
leave
sahf
jg
sbb
repnz
add
pop
rcr
pushf
dec
loope
mov
push
push
pop
cwde
popa
pop
dec
imul
jmp
lods
test
add
mov
nop
out
call
nop
retf
(bad)
stos
cmps
pop
mov
xchg
int
cmps
adc
out
jle
xor
push
(bad)
jg
add
out
fisubr
jo
(bad)
(bad)
mov
lods
sub
xchg
mov
push
int3
mov
stc
sub
push
cmps
push
clc
(bad)
(bad)
call
cmp
ds
rol
mov
dec
push
and
sub
fcos
(bad)
mov
shl
jbe
mov
call
sub
(bad)
mov
ret
ja
sahf
mov
aad
mov
mov
outs
sti
cmp
mov
pop
mov
jp
mov
xor
xor
(bad)
(bad)
(bad)
push
into
jmp
jg
pop
fcomi
mov
or
data16
(bad)
jmp
mov
test
stc
(bad)
mov
stos
cmps
sar
arpl
test
ficomp
jno
ds
(bad)
(bad)
(bad)
dec
mov
scas
dec
mov
jge
jg
mov
jecxz
sbb
ja
sbb
mov
push
ret
push
sub
js
jmp
push
mov
(bad)
(bad)
jmp
cdq
je
das
cmps
xchg
call
pop
ss
mov
test
push
out
mov
dec
mov
fbld
(bad)
mov
inc
fnstenv
inc
daa
mov
mov
mov
hlt
lods
rol
scas
cdq
push
sub
pop
lods
jmp
cmp
aam
jmp
pop
in
aas
jmp
outs
sbb
xchg
outs
ja
es
mov
ins
lods
movs
cmp
jae
(bad)
(bad)
call
xchg
retf
cmps
xor
ss
dec
xor
icebp
adc
dec
pop
inc
(bad)
mov
pop
(bad)
imul
dec
or
(bad)
(bad)
fild
stos
adc
shr
mov
outs
hlt
(bad)
fcmovbe
mov
mov
cmp
repnz
mov
in
adc
(bad)
(bad)
jg
pop
stos
(bad)
mov
into
add
fdivr
add
xchg
call
nop
lock
cmps
std
mov
cli
es
shl
ss
mov
(bad)
cmp
jo
mov
in
mov
mov
(bad)
(bad)
(bad)
out
fadd
cli
sub
push
pop
test
pop
mov
pop
cmps
pop
mov
push
push
out
cli
(bad)
jmp
push
mov
pop
loop
in
sub
shl
call
cmps
jmp
pop
adc
xchg
jmp
(bad)
pop
mov
push
sbb
(bad)
mov
nop
pushf
aas
lods
mov
jnp
(bad)
dec
dec
(bad)
cmp
jge
out
das
pop
in
in
push
hlt
(bad)
(bad)
call
fwait
xchg
adc
mov
xor
cmp
sub
push
xor
hlt
dec
ss
cmp
sub
pop
loopne
dec
movs
das
mov
(bad)
jmp
mov
dec
out
clc
mov
sub
(bad)
scas
xchg
pop
fs
pushf
and
lahf
fistp
(bad)
(bad)
fcomp
jmp
push
popf
scas
sub
mov
push
repnz
cli
xor
stos
mov
pop
push
add
test
and
or
cmps
enter
push
(bad)
lods
mov
fsubr
(bad)
jmp
cs
xchg
pop
cmps
loopne
loop
xchg
jo
mov
mov
retf
loop
jg
fs
bound
cmp
cmc
and
xchg
cld
(bad)
fidiv
iret
repnz
out
mov
cmps
cmp
pop
cmc
jg
shl
mov
repnz
and
daa
add
cli
jge
push
and
mov
mov
jns
or
hlt
sbb
jge
imul
scas
adc
mov
jmp
pop
fwait
xchg
retf
cmp
daa
stos
xor
dec
mov
cli
cli
stos
out
jb
xchg
lods
fmul
mov
jecxz
rcr
jmp
ss
push
es
jge
(bad)
xor
idiv
jnp
dec
dec
fsubr
pop
rcr
inc
pop
mov
shl
shr
jmp
mov
ds
leave
daa
or
and
in
in
mov
daa
xchg
xchg
pop
cld
dec
call
xor
push
and
xchg
fmul
mov
retf
retf
xor
or
aas
pop
xor
pop
or
push
(bad)
push
fld
clc
ins
fidivr
retf
jmp
loopne
mov
retf
xor
sbb
push
cs
les
jnp
sub
mov
dec
add
jns
test
call
sub
popf
stos
test
sub
scas
test
dec
xor
call
stos
movs
retf
push
or
xchg
(bad)
jmp
rcr
retf
int
rcr
test
jmp
xchg
inc
scas
jl
fisubr
mov
xchg
mov
(bad)
inc
mov
mov
ret
jmp
es
cs
xchg
jmp
lahf
mov
or
imul
cmp
sub
dec
imul
(bad)
scas
(bad)
mov
inc
and
lods
or
test
jmp
mov
out
push
mov
cs
(bad)
mov
adc
push
or
in
lods
mov
stos
adc
je
add
shl
jmp
push
mov
dec
and
cli
dec
repnz
mov
push
sub
sbb
ss
test
lea
push
cli
out
mov
ss
mov
clc
jg
cmp
scas
imul
retf
and
mov
pop
das
sar
ror
cmps
cmp
loopne
aad
cmp
dec
jmp
cld
ins
pop
retf
xor
dec
(bad)
mov
sbb
adc
sar
outs
xchg
call
jmp
jmp
cmp
inc
mov
cmps
adc
mov
fbld
mov
mul
mov
cmp
stos
push
lahf
inc
and
push
scas
call
leave
sub
je
loope
arpl
mov
fbstp
ds
mov
mov
sub
mov
add
enter
mov
in
cmp
(bad)
jmp
stos
out
call
dec
test
adc
mov
inc
jmp
mov
js
inc
jmp
jmp
scas
mov
aas
pop
jge
stos
mov
dec
retf
mov
xlat
lds
retf
xchg
ins
sbb
pop
push
xchg
aam
and
sbb
dec
cmps
push
or
in
mov
popa
add
push
cli
bound
js
adc
iret
test
sub
or
(bad)
call
fimul
sub
inc
xor
pusha
mov
jmp
dec
(bad)
mov
je
mov
adc
xor
sbb
test
leave
(bad)
(bad)
(bad)
push
or
fsubr
dec
popf
(bad)
jp
in
jg
test
rcr
(bad)
mov
into
push
sbb
mov
pop
or
push
sbb
mov
inc
cmps
fs
ror
mov
sub
mov
fcomip
push
jmp
mov
pop
pop
ins
xchg
mov
into
xor
cli
(bad)
jle
cmp
bound
loopne
or
stos
test
and
call
ins
bound
xchg
bound
sbb
mov
mov
mov
es
arpl
and
jg
(bad)
push
cmp
add
lahf
sbb
mov
mov
xchg
test
lea
jb
sub
test
dec
pop
out
xor
outs
xchg
push
cli
icebp
cmp
pop
push
push
loop
jg
inc
lahf
sbb
or
call
pop
cmp
ret
xor
and
enter
xor
cld
or
stc
and
cli
jb
xor
mov
jmp
call
daa
mov
sbb
jnp
rcr
cmp
test
mov
jp
(bad)
(bad)
dec
mov
cli
in
cmp
pushf
xor
mov
push
fidiv
stos
jg
movs
ins
dec
inc
jne
cdq
mov
dec
mov
addr16
out
mov
stos
dec
jecxz
in
add
movs
idiv
jg
lahf
test
xchg
mov
or
mov
call
or
(bad)
(bad)
call
adc
shr
sub
mov
xchg
dec
pop
sub
movs
(bad)
cmps
jnp
pop
mov
cli
fcmovnb
ret
push
inc
mov
or
sbb
xchg
cli
(bad)
(bad)
call
pop
add
mov
mov
frstor
adc
mov
mov
mov
out
pop
or
sbb
into
mov
pop
jge
cdq
mov
lods
mov
(bad)
fisttp
sbb
test
cmp
(bad)
gs
jmp
or
movs
push
jg
das
mov
inc
shl
fisttp
jmp
stc
sub
pop
cmc
(bad)
dec
mov
sbb
fiadd
cli
add
stos
xor
adc
std
mov
out
jae
jecxz
push
iret
mov
call
(bad)
(bad)
(bad)
dec
clc
xchg
outs
outs
push
dec
adc
mov
dec
xchg
or
push
mov
in
js
cdq
jmp
pop
and
cmp
dec
inc
sti
and
out
xchg
pop
es
(bad)
(bad)
inc
inc
adc
sbb
popf
nop
je
es
retf
bnd
call
(bad)
jmp
or
sbb
push
iret
sar
mov
xlat
pop
fwait
dec
in
dec
rol
cmp
pop
dec
pop
sub
xchg
scas
iret
inc
enter
(bad)
(bad)
(bad)
(bad)
jmp
pop
cs
add
mov
or
jl
sbb
xchg
mov
mov
or
dec
(bad)
(bad)
(bad)
dec
xchg
sahf
shr
clc
push
and
cmp
enter
and
pop
cmp
movs
loopne
test
(bad)
pop
jb
adc
ins
out
stos
mov
repz
push
push
or
jnp
(bad)
(bad)
push
dec
repz
xchg
xchg
or
mov
test
add
clc
scas
mov
cmc
fldenv
int3
mov
jmp
cmp
test
and
shr
out
push
gs
mov
sub
dec
sti
sub
xor
cmps
pushf
scas
(bad)
lahf
out
xchg
or
imul
or
fs
out
cli
jmp
das
ror
scas
mov
cmp
(bad)
pop
push
int
jo
call
adc
or
and
mov
sub
stc
adc
in
or
out
mov
mov
ins
xchg
nop
xor
adc
call
sbb
mov
cmp
ffreep
out
or
imul
loop
xor
test
test
cmp
test
daa
(bad)
test
mov
retf
mov
icebp
mov
pop
std
outs
ss
cld
imul
adc
sti
pusha
pop
pop
sbb
push
mov
popf
lahf
mov
sub
mov
nop
scas
push
cs
cmp
(bad)
(bad)
(bad)
out
jmp
hlt
xor
mov
lahf
jb
pushf
(bad)
cmps
inc
dec
adc
cmp
jge
sar
cs
mov
rep
(bad)
(bad)
call
or
xor
sub
shr
inc
iret
push
test
sub
jo
popa
stos
call
xchg
sub
ret
call
jne
aaa
and
ret
jmp
jo
mov
rcr
mov
adc
lds
mov
(bad)
loope
mov
mov
jmp
or
fstp
and
ret
mov
pop
inc
sub
pop
(bad)
(bad)
(bad)
dec
fimul
movs
push
mov
mov
enter
jns
cmp
jmp
pushf
cld
imul
and
(bad)
(bad)
dec
retf
in
and
ss
sub
sbb
out
adc
cmp
pop
cdq
xchg
vxorps
mov
loop
jo
ror
cdq
xchg
iret
xor
jmp
push
or
jae
call
mov
int3
loopne
pop
lea
cmps
lock
test
rcl
jmp
scas
jb
cmp
mov
fwait
or
mov
repnz
add
mov
(bad)
(bad)
(bad)
push
add
mov
add
dec
and
sbb
in
add
(bad)
inc
cmps
out
sbb
jnp
cmp
pop
inc
xchg
sub
sbb
aaa
inc
lods
call
xchg
cs
leave
mov
add
xor
movs
fild
(bad)
cld
mov
das
clc
push
push
cmp
cdq
jmp
(bad)
mov
sub
jo
mov
iret
mov
ffreep
pop
mov
inc
dec
js
pop
or
jb
push
and
(bad)
jmp
es
inc
bnd
mov
jmp
ficom
mov
pop
stos
or
jmp
sub
call
jg
jmp
stos
dec
std
ror
pop
or
mov
sub
xor
mov
ds
sbb
shl
data16
adc
push
and
add
mov
cli
aam
test
rol
mov
inc
clc
fistp
leave
les
mov
dec
xor
fsub
out
cli
(bad)
in
xchg
push
movzx
or
adc
mov
jns
dec
popa
in
movs
cli
inc
fisttp
mov
(bad)
(bad)
mov
push
xchg
lods
out
push
div
stos
inc
pusha
call
and
outs
sub
sbb
sbb
push
sbb
sti
in
adc
movs
lods
ja
pushf
or
inc
jbe
jmp
cmp
rcr
and
ja
and
or
into
cli
mov
adc
mov
xor
(bad)
(bad)
std
sub
cmp
sub
sahf
cmc
mov
mov
mov
ins
mov
(bad)
(bad)
call
loopne
icebp
mov
pushf
jmp
inc
xchg
clc
mov
or
sbb
jecxz
sub
jle
dec
mov
(bad)
pushf
sub
repnz
stos
int
mov
sar
out
and
add
mov
xor
call
mov
adc
cld
cmp
dec
or
push
scas
pop
mov
cli
cmp
int
push
xor
ins
stos
push
dec
(bad)
jg
mov
js
jmp
sbb
sahf
cs
push
cwde
xor
stos
push
push
inc
jmp
cld
sbb
data16
test
jl
(bad)
dec
cmp
fwait
movs
cmp
(bad)
(bad)
push
push
dec
mov
call
push
dec
pop
and
jge
cwde
sub
cmp
cmps
bnd
add
clc
(bad)
jmp
mov
outs
adc
push
test
and
jno
push
(bad)
push
das
pop
sbb
in
inc
xchg
mov
xchg
clc
popa
outs
cmc
dec
(bad)
(bad)
(bad)
jmp
pop
pop
mov
sahf
adc
movs
int
lods
ds
sub
mov
lahf
mov
add
(bad)
push
retf
ror
lahf
add
cdq
push
fbstp
test
std
(bad)
jg
pop
mov
fndisi(8087
jns
cmps
or
loop
push
adc
aaa
fsubr
push
mov
inc
or
lock
stos
xchg
(bad)
in
or
shr
sub
bound
xor
lahf
idiv
add
les
cld
inc
mov
out
outs
mov
or
aaa
cdq
retf
sub
pop
cwde
jmp
fmulp
mov
popa
repnz
sub
or
das
push
sbb
mov
(bad)
cmp
fsub
xchg
test
icebp
pop
lea
sub
or
mov
jmp
add
(bad)
jg
and
out
xchg
(bad)
(bad)
jmp
fdiv
push
jp
stos
sub
call
jecxz
out
jp
mov
sub
mov
jno
xor
mov
lods
dec
(bad)
(bad)
(bad)
(bad)
jmp
outs
dec
add
loop
mov
pop
xor
pop
pop
test
mov
loopne
das
xor
dec
lock
cld
push
es
xchg
xchg
stos
cmp
mov
adc
stos
sub
xchg
fs
or
loop
call
loopne
out
retfw
call
pop
sub
out
ins
adc
jmp
out
xor
ror
(bad)
in
jnp
ins
(bad)
(bad)
(bad)
fisttp
nop
mov
cmp
das
xchg
(bad)
jne
call
loope
xchg
in
(bad)
(bad)
(bad)
call
dec
jae
das
lahf
sti
lea
push
cmp
js
in
push
and
test
cmp
(bad)
cmp
lods
retf
add
mov
cmp
jne
addr16
aaa
and
cld
loop
clc
(bad)
(bad)
out
mov
mov
mov
stos
scas
xchg
push
mov
dec
or
(bad)
(bad)
jmp
test
repz
cli
fsub
fwait
inc
jo
pop
xor
retf
bound
sahf
cmps
sub
mov
(bad)
mov
xchg
iret
sub
hlt
and
or
dec
sub
mov
stc
retf
sbb
or
push
loope
stos
in
push
jo
mov
(bad)
jmp
add
xor
sub
mov
push
sbb
jae
mov
std
call
mov
fidiv
pop
ins
sub
retf
sbb
jle
fwait
(bad)
jmp
in
mov
or
cmp
loope
xor
(bad)
(bad)
call
fwait
mov
mov
and
lahf
sub
cmps
scas
mov
jg
inc
ret
(bad)
popf
repnz
mov
ds
sub
scas
and
fimul
lea
fisubr
cmp
cmp
ds
hlt
retf
lods
in
cli
cmps
(bad)
jmp
mov
push
out
xor
mov
aas
and
(bad)
dec
lods
pop
aas
adc
(bad)
mov
aas
push
xchg
jnp
sub
stos
(bad)
(bad)
jg
or
shl
sbb
push
imul
test
bswap
add
rcl
pop
cli
add
bound
not
pop
stos
lods
adc
test
jg
jg
outs
js
cs
std
xchg
stos
pop
jo
(bad)
sbb
and
out
(bad)
fbld
jmp
mov
popf
adc
dec
ins
mov
cwde
cmp
sub
cld
xor
cmp
(bad)
(bad)
(bad)
(bad)
mov
jb
cld
mov
xchg
dec
test
sub
fs
outs
mov
int3
fcomip
(bad)
push
scas
inc
dec
aas
shl
mov
xchg
sahf
fs
cwde
fsubr
std
jmp
clc
call
xor
add
cwde
popa
sbb
retf
cmc
push
or
sub
mov
jb
dec
test
call
adc
(bad)
fldenv
stc
lds
push
lds
lea
mov
nop
stos
popf
dec
adc
dec
xchg
lock
xor
clc
sub
sbb
stos
fisttp
iret
mov
pop
cmps
in
fs
(bad)
(bad)
push
call
inc
js
mov
movs
and
sbb
(bad)
xor
or
std
(bad)
mov
scas
outs
push
fimul
jb
mov
adc
fs
lods
adc
in
cdq
xchg
bts
(bad)
in
mov
ds
jno
fnstsw
out
push
icebp
imul
cdq
or
mov
dec
sbb
push
sub
cli
xor
pop
sahf
dec
push
push
adc
pop
aas
call
push
mov
push
add
rol
sub
into
fmulp
dec
and
mov
shl
scas
outs
sar
push
(bad)
pop
push
cmp
fs
or
jbe
shl
test
mov
inc
or
mov
mov
icebp
dec
mov
push
and
xchg
mov
jo
mov
add
lahf
scas
call
fld
fsub
sar
(bad)
mov
push
sbb
loope
inc
push
aad
sub
dec
or
sub
scas
mov
cmp
mov
shl
stos
cli
xor
(bad)
(bad)
(bad)
call
mov
js
stos
mov
mov
pop
jo
jle
inc
mov
call
or
dec
mov
loop
cli
sahf
mov
fptan
into
cmp
(bad)
call
cmp
(bad)
out
call
pop
sub
lods
mov
mov
ret
shl
(bad)
(bad)
(bad)
cld
aas
pop
xchg
(bad)
(bad)
call
fild
int
mov
test
sar
out
fwait
push
mov
mov
mov
xchg
iret
xlat
jns
mov
(bad)
(bad)
inc
dec
or
call
mov
jmp
call
pop
jge
cs
dec
std
sbb
mov
test
aaa
punpcklbw
sub
call
push
cdq
cmps
(bad)
(bad)
(bad)
dec
or
push
test
call
out
push
int3
push
and
adc
call
inc
ins
pop
cmps
mov
jo
sub
repnz
mov
sub
mov
(bad)
(bad)
(bad)
call
pushf
pop
jmp
neg
fisttp
push
mov
mov
call
(bad)
fbstp
sbb
icebp
sub
imul
jno
adc
dec
jns
das
sti
test
shl
std
(bad)
pop
mov
(bad)
sbb
movs
mov
pop
dec
popa
popa
repnz
es
mov
and
sbb
jmp
das
cwde
xor
jne
ins
sbb
std
push
sub
ins
inc
retf
(bad)
call
pop
scas
leave
test
jecxz
mov
mov
jo
jl
jnp
xor
outs
(bad)
(bad)
mov
fst
add
das
cmp
(bad)
hlt
int
scas
mov
es
mov
mov
cmps
mov
cmc
push
and
or
xchg
(bad)
cmp
xchg
dec
(bad)
(bad)
call
adc
cmp
clc
pop
pop
mov
jmp
in
(bad)
cmp
pop
xor
mov
(bad)
(bad)
cmp
mov
push
adc
addr16
mov
jmp
push
(bad)
dec
icebp
clc
push
nop
jmp
sub
das
cli
mov
xchg
ret
mov
mov
pop
fmul
das
or
dec
mov
mov
stos
push
cld
jnp
sahf
adc
ret
lods
sbb
push
idiv
xchg
fbld
das
jg
mov
out
int3
xchg
mov
pop
(bad)
pop
ds
aam
lea
sbb
xchg
pop
into
add
adc
push
aas
push
xchg
sbb
retf
pop
ror
(bad)
(bad)
jmp
jo
pop
enter
mov
mov
xor
shl
mov
call
daa
pandn
test
push
(bad)
(bad)
push
pop
outs
add
test
sbb
call
xchg
fcomp
(bad)
jmp
xor
dec
mov
xor
imul
in
mov
lahf
mov
jb
icebp
sub
pusha
mov
ja
jle
(bad)
(bad)
call
jbe
cmp
dec
push
xor
shl
xchg
or
cs
or
mov
push
clc
inc
jnp
sbb
rcl
in
sub
lods
mov
(bad)
sub
icebp
jg
mov
fsub
dec
pop
mov
cmp
sahf
dec
pop
mov
dec
or
and
outs
push
in
xor
fcomip
pop
icebp
(bad)
call
mov
cmp
mov
or
sbb
mov
mov
stos
(bad)
(bad)
call
out
sbb
pop
sub
cmps
cdq
lods
loop
js
mov
or
push
sbb
clc
dec
sub
pop
inc
jp
data16
sub
loop
(bad)
jmp
jp
cs
mov
ins
jle
sbb
cli
mov
fcom
pusha
(bad)
(bad)
(bad)
jmp
call
fidiv
pop
cmp
retf
bound
sbb
pop
sub
and
int
std
(bad)
(bad)
jmp
daa
scas
imul
jg
(bad)
cmps
xor
hlt
mov
inc
cld
add
fst
dec
inc
(bad)
or
bound
cmp
out
movs
push
sub
scas
cdq
push
adc
hlt
push
jg
vmovss
mov
mov
mov
loop
bound
mov
test
in
stc
sub
mov
cmp
xchg
test
mov
lahf
or
pusha
scas
stc
mov
fwait
push
out
call
jo
pop
stos
add
fwait
mov
pusha
mov
popa
mov
(bad)
(bad)
(bad)
fistp
test
or
push
push
jp
movs
mov
mov
sbb
mov
cmps
call
outs
mov
imul
(bad)
(bad)
(bad)
out
pop
fisub
jns
bnd
and
push
xchg
je
lahf
mov
mov
cmp
xor
mov
xchg
setp
push
retf
and
fs
cmp
pop
and
retf
cmps
fst
ja
sar
fisub
xor
adc
mov
sar
(bad)
(bad)
dec
mov
pop
(bad)
mov
mov
imul
int3
mov
mov
call
cwde
jle
hlt
jmp
imul
retf
test
add
(bad)
(bad)
call
(bad)
out
mov
mov
repnz
adc
stos
sbb
push
in
sbb
(bad)
dec
jno
push
mov
cmps
lahf
scas
pop
mov
push
mov
(bad)
inc
not
shl
into
cmps
clc
call
repnz
shr
xchg
jnp
mov
(bad)
inc
scas
movs
call
jae
shl
push
push
cld
or
test
add
mov
xchg
push
inc
sar
adc
sbb
repnz
xor
test
mov
xor
lock
imul
xor
cmps
cdq
cli
mov
pop
out
pop
and
clc
jg
cmp
cdq
xchg
cmc
mov
or
iret
mov
lods
mov
(bad)
call
xchg
xchg
(bad)
lahf
sbb
(bad)
call
neg
(bad)
(bad)
fmul
mov
mov
sbb
(bad)
jns
cmp
(bad)
fild
adc
jns
cmp
sub
mov
call
add
jmp
gs
mov
cmps
enter
gs
dec
call
inc
je
scas
xor
clc
fimul
fcmovb
mov
inc
push
in
(bad)
(bad)
inc
and
pop
jmp
cmp
pop
mov
cmp
ja
cli
(bad)
fstp
mov
sbb
adc
lods
xchg
cld
(bad)
(bad)
(bad)
push
fsub
pop
add
shld
stos
(bad)
mov
int
mov
ficom
(bad)
jmp
dec
dec
stos
mov
sti
neg
(bad)
pop
jmp
call
inc
mov
and
lods
popf
cmp
and
loop
mov
mov
or
fnstenv
scas
sub
fwait
dec
jmp
cmp
ins
or
es
sub
stos
fisub
hlt
(bad)
shr
and
call
mov
push
jle
sub
pop
data16
xchg
(bad)
call
sub
cwde
mov
fidivr
test
sub
pop
or
jmp
das
aam
mov
rol
pop
(bad)
jmp
or
enter
stos
loopne
push
pusha
lock
call
and
mov
out
mov
add
mov
out
call
jbe
in
pop
das
ror
(bad)
jmp
call
add
jb
stos
scas
mov
inc
sbb
cmps
inc
or
jg
mov
loopne
cmp
(bad)
jmp
rol
add
mov
and
mov
jnp
shl
shr
add
(bad)
jmp
xchg
das
or
iret
jle
adc
stos
jmp
retf
cmps
fdivr
ret
(bad)
(bad)
(bad)
(bad)
cld
jmp
pop
xor
xchg
stos
fsub
xor
dec
mov
add
mul
sub
mov
(bad)
iret
jecxz
(bad)
xchg
jmp
test
and
mov
sbb
inc
repnz
mov
jg
pusha
push
mov
lea
mov
loopne
pop
lock
dec
stos
lock
add
or
js
inc
add
(bad)
call
in
push
adc
pop
xchg
pop
movs
dec
lods
cmp
cdq
arpl
scas
adc
jne
fwait
(bad)
call
clc
in
jecxz
push
popa
jmp
xchg
cli
mov
add
ds
jge
mov
xchg
sbb
out
out
pop
repz
ds
add
imul
jl
sub
pop
sbb
ins
mov
adc
sar
call
dec
aam
imul
mov
sbb
imul
sar
jae
adc
pop
stos
lods
jo
jno
(bad)
cmp
hlt
iret
adc
adc
jo
jl
stos
(bad)
push
cmp
cdq
xor
ins
fistp
lahf
xchg
stc
push
jb
in
outs
pop
adc
(bad)
(bad)
inc
(bad)
aaa
ss
pop
jbe
xor
pop
sahf
or
ss
clc
daa
cmp
outs
push
push
fsub
in
gs
retf
adc
jg
add
int
mov
jmp
sbb
xor
push
daa
hlt
jb
in
pop
mov
enter
(bad)
and
int3
mov
pop
mov
clc
outs
clc
es
mov
scas
sub
or
push
mov
loop
and
cmp
push
ds
pop
adc
jp
pop
scas
cli
xor
(bad)
call
cmp
je
cli
ret
lods
adc
push
loop
push
loop
retf
jge
or
cmp
scas
adc
lock
xchg
(bad)
inc
sub
clc
push
std
lahf
fist
aas
push
in
sub
jne
imul
leave
ss
jae
inc
dec
or
push
imul
ins
dec
inc
sub
clc
pop
cld
(bad)
jns
sub
movs
psrld
jge
or
xchg
call
jmp
sub
inc
add
pop
push
rcr
sahf
mov
or
call
mov
sub
mov
xchg
(bad)
(bad)
(bad)
fisubr
xchg
out
mov
pop
sub
xchg
mov
sbb
mov
repnz
dec
pop
or
imul
inc
stc
and
mov
lods
pop
call
xor
add
or
cli
lahf
sub
pop
sub
jb
or
nop
movs
cwde
adc
sti
adc
scas
mov
or
push
mov
test
adc
pop
pusha
fsubr
pop
jmp
jo
aaa
cmp
or
mov
inc
cs
mov
outs
add
(bad)
call
xor
mov
xor
jno
sub
dec
mov
loopne
ror
std
(bad)
jmp
data16
jno
out
push
cmp
shl
je
and
jne
pop
and
adc
and
nop
sub
inc
mov
mov
(bad)
(bad)
(bad)
inc
jmp
retf
push
xchg
(bad)
call
xchg
and
ins
cmps
test
pop
cmc
(bad)
(bad)
(bad)
out
sbb
mov
call
in
lahf
cmp
repnz
loopne
ret
call
int3
lahf
test
sar
or
cmps
adc
sar
imul
xor
(bad)
(bad)
jmp
cmp
call
(bad)
lea
ds
in
pushf
mov
push
in
(bad)
fist
loopne
mov
add
int
inc
cmps
bound
cdq
pop
mov
(bad)
(bad)
(bad)
out
das
cmp
add
xor
call
call
jp
cmp
cmp
jmp
(bad)
outs
sub
lods
inc
je
adc
jp
retf
mov
push
cld
sbb
call
mov
xor
ja
cmc
call
(bad)
jg
movs
mov
sub
or
fstp
sbb
inc
scas
ja
clc
(bad)
(bad)
(bad)
jmp
xlat
dec
repz
mov
sub
(bad)
jg
jp
cmp
(bad)
call
push
test
jle
adc
test
mov
ja
into
ins
jg
cs
stos
jbe
outs
js
cli
je
jmp
dec
test
in
aad
das
add
mov
pop
int
sub
aam
bound
shl
push
mov
mov
test
shr
loopne
fnsave
lock
outs
cli
push
fs
jns
sahf
sahf
(bad)
hlt
fldenv
dec
cmps
loop
jae
cdq
test
jge
mov
imul
sub
sbb
lock
(bad)
push
test
test
adc
dec
push
movs
pop
mov
sbb
sbb
(bad)
mov
mov
lods
push
cmps
cmps
push
(bad)
stos
xchg
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
sub
fsubr
jl
mov
mov
out
scas
retf
mov
ja
shl
inc
mov
sbb
push
mov
jp
mov
arpl
mov
push
cmp
scas
scas
and
mov
cmp
inc
retf
mov
lods
lea
shr
(bad)
mov
jmp
pop
inc
and
fwait
and
retf
in
sub
retf
test
ret
or
mov
sub
(bad)
call
dec
ja
into
popf
sahf
in
in
imul
mov
push
ins
ror
adc
aad
(bad)
loope
(bad)
(bad)
(bad)
call
loop
dec
or
sbb
or
sub
inc
pop
into
xchg
add
push
(bad)
(bad)
call
mov
es
jle
arpl
scas
repnz
into
test
jmp
pop
sub
scas
cmp
jmp
inc
push
and
inc
jmp
or
sub
cmp
hlt
xor
cmps
sbb
loop
mov
sub
jne
mov
call
adc
cli
and
xor
jmp
jno
f2xm1
sbb
push
mov
(bad)
call
xor
fdivr
movs
mov
mov
or
add
(bad)
jmp
(bad)
push
ret
pop
movs
ins
pop
lods
aas
inc
test
(bad)
lods
xor
(bad)
(bad)
dec
in
sub
scas
imul
enter
cmp
leave
sbb
in
retf
inc
fidivr
xchg
jmp
das
mov
(bad)
pop
das
hlt
in
mov
xor
(bad)
mov
test
stos
add
das
mov
pop
push
fadd
(bad)
(bad)
(bad)
jmp
mov
(bad)
dec
call
bound
(bad)
push
jnp
js
in
and
mov
(bad)
(bad)
(bad)
(bad)
std
mov
adc
xor
jne
push
jmp
or
jp
fist
(bad)
dec
stos
iret
sub
(bad)
(bad)
jg
jmp
sub
sahf
or
arpl
(bad)
call
out
loopne
fist
(bad)
loope
ficom
out
rcl
mov
push
nop
es
and
fwait
sub
dec
adc
stos
jmp
jg
(bad)
(bad)
inc
push
out
in
(bad)
mov
push
or
scas
adc
ret
jmp
retf
mov
shr
outs
pop
test
jg
test
ins
mov
retf
or
pop
inc
rcr
(bad)
test
(bad)
fistp
(bad)
jg
sub
jmp
aaa
lods
pushf
mov
(bad)
pop
push
adc
jmp
mov
or
sbb
add
es
mov
add
dec
inc
sbb
(bad)
(bad)
dec
mov
xchg
repnz
dec
cmp
in
sbb
ret
das
cli
cld
fs
mov
(bad)
jmp
sbb
nop
lods
ror
mov
jne
mov
aas
and
inc
mov
jmp
mov
loopne
loope
pop
dec
mov
test
scas
pop
mov
iret
push
lock
add
call
in
jmp
scas
mov
std
sbb
sti
mov
cmps
cmp
xor
(bad)
xor
test
xchg
mov
in
pop
stos
test
adc
inc
(bad)
or
mov
pop
adc
and
cwde
ins
popa
lods
jns
or
rcr
addr16
jns
(bad)
(bad)
jmp
ret
mov
scas
cwde
cli
push
xor
cli
shl
das
call
xor
and
and
sub
sub
jp
jmp
add
mov
es
(bad)
sub
cmp
(bad)
(bad)
mov
and
adc
add
arpl
pop
repz
pop
loope
mov
fldenv
adc
mov
into
mov
pop
daa
sub
add
xor
sbb
out
or
jb
dec
and
push
fwait
push
js
fwait
(bad)
(bad)
std
ror
lods
cld
lods
sbb
aas
call
retf
add
jnp
sbb
cmp
out
ret
lods
adc
stos
jno
mov
jl
and
mov
push
call
jp
out
addr16
add
mov
sub
(bad)
call
sub
push
jp
movs
dec
push
(bad)
(bad)
mov
pop
inc
loopne
mov
out
sub
mov
push
ret
or
jmp
pop
jmp
mov
push
call
jl
sbb
(bad)
(bad)
call
mov
test
adc
cmp
push
dec
pusha
mov
lods
cmp
mov
out
inc
lods
mov
mov
in
(bad)
cmp
loop
fmulp
iret
inc
push
das
popf
sub
lock
(bad)
dec
pop
loop
ss
cmp
cmps
in
or
sub
sbb
adc
call
nop
ret
mov
or
xor
pop
icebp
dec
jb
test
or
aas
pop
out
push
jb
js
(bad)
(bad)
dec
(bad)
out
ror
pop
das
imul
push
mov
cmp
xchg
push
sbb
call
(bad)
(bad)
(bad)
call
mov
mov
loop
std
mov
xchg
cmp
jle
imul
js
cs
out
(bad)
(bad)
call
pop
shl
xor
movs
cmp
jns
xchg
out
popf
ror
jmp
adc
jmp
add
(bad)
std
xlat
dec
mov
cmc
dec
test
jmp
cli
or
inc
sbb
cmp
add
cli
(bad)
(bad)
(bad)
mov
cmp
test
loopne
loopne
nop
lock
cli
xor
je
pop
rol
sbb
fwait
pop
scas
jb
enter
inc
mov
lods
repnz
sar
mov
mov
retf
jae
call
rcl
sub
clc
or
adc
js
mov
xchg
cmc
(bad)
mov
and
mov
sbb
lahf
dec
sbb
(bad)
(bad)
(bad)
in
imul
sbb
jg
jl
and
call
jmp
mov
inc
jnp
test
in
in
pusha
mov
or
call
enter
xchg
pop
jecxz
loop
cli
xchg
jmp
mov
mov
sbb
cld
jg
xchg
retf
mov
xor
sbb
(bad)
(bad)
(bad)
jg
in
adc
in
sbb
and
adc
push
popf
add
test
(bad)
(bad)
cmp
push
scas
mov
cli
scas
pusha
mov
cmp
leave
mov
cmp
movs
(bad)
(bad)
(bad)
(bad)
out
sub
mov
or
jmp
add
scas
inc
mov
nop
cmp
shl
jmp
popa
sub
cmps
push
(bad)
hlt
mov
(bad)
call
cs
push
loopne
retf
pop
jmp
mov
cli
movs
jae
xchg
or
call
dec
pop
sbb
mov
adc
or
fwait
les
(bad)
push
(bad)
sar
mov
js
fbld
icebp
mov
mov
sbb
popf
mov
sub
cmc
gs
xchg
je
dec
sbb
push
sbb
push
xor
shl
mov
dec
cmps
in
xchg
fcomi
xchg
int
(bad)
aam
sub
pop
adc
lods
fld
out
sahf
bound
push
cs
nop
pop
dec
mov
xabort
jle
test
popf
pop
sub
push
out
call
call
push
sahf
stos
cmp
mov
(bad)
stc
or
scas
gs
mov
mov
jmp
or
inc
repnz
repnz
(bad)
(bad)
(bad)
jmp
mov
enterw
sahf
add
(bad)
scas
dec
xor
test
movs
movs
inc
outs
loope
dec
(bad)
stc
clc
imul
bound
mov
xchg
mov
(bad)
in
sbb
test
sub
cmp
call
push
fisubr
adc
data16
jb
push
test
cmp
aaa
arpl
mov
retf
(bad)
(bad)
mov
jo
sbb
dec
dec
or
dec
(bad)
(bad)
call
push
sbb
sbb
push
sahf
fs
data16
not
(bad)
inc
lds
pushf
retf
shl
bound
in
idiv
(bad)
inc
mov
or
dec
dec
adc
sbb
retf
mov
or
test
adc
xlat
or
(bad)
call
mov
cmp
and
repnz
ins
lods
mov
inc
push
mov
in
pop
pop
(bad)
jg
jmp
call
mov
mov
push
lock
push
jmp
pop
push
pushf
dec
jg
add
jmp
xchg
and
xchg
or
aaa
pop
mov
push
retf
stc
pop
lahf
mov
mov
stos
add
cmp
mov
neg
(bad)
dec
stos
push
sub
sub
fwait
jmp
clc
mov
pop
adc
iret
je
jb
cmps
sbb
(bad)
(bad)
call
inc
adc
sub
jmp
adc
out
sub
outs
mov
sub
test
push
xor
call
(bad)
push
mov
adc
inc
(bad)
jl
jmp
(bad)
ins
ds
pop
cli
test
movs
stc
mov
mov
pop
icebp
mov
call
mov
jnp
adc
addr16
int3
(bad)
(bad)
(bad)
push
jns
stos
sbb
int3
pop
sahf
mov
cmp
(bad)
sub
pop
jl
jmp
add
(bad)
aad
jg
push
gs
cs
cld
(bad)
(bad)
inc
xchg
fadd
mov
mov
retf
scas
pop
icebp
call
jmp
stc
arpl
jg
enter
sbb
(bad)
dec
and
call
sub
lods
inc
js
push
aaa
std
(bad)
(bad)
fisubr
in
fwait
xor
jbe
sbb
cmps
fsub
push
(bad)
jns
cmp
mov
jp
sahf
push
int3
(bad)
cmp
call
dec
cmc
or
sub
xlat
out
adc
mov
stos
outs
pop
(bad)
loop
out
std
mov
(bad)
(bad)
sti
repnz
cmp
and
mov
fmul
pop
and
scas
cli
mov
xor
addr16
push
loop
test
enter
pusha
ja
movs
cmps
mov
ins
ret
mov
retf
inc
imul
call
(bad)
and
enter
inc
inc
cmp
lods
adc
pop
mov
and
xchg
out
les
cli
add
pushf
aaa
xchg
xchg
or
(bad)
jmp
sar
or
js
clc
mov
ja
push
sti
xor
or
or
jmp
push
xlat
sub
mov
cmp
or
xor
add
push
xchg
stos
mov
inc
cld
xchg
call
jo
jns
rol
push
pop
jns
test
sbb
movs
test
call
cmc
dec
mov
es
add
(bad)
(bad)
jmp
out
lahf
jecxz
sub
pop
arpl
xor
xor
stos
pushf
dec
jnp
jp
ret
mov
psubusb
mov
test
sar
(bad)
inc
cmps
call
jge
fsin
mov
push
jmp
push
xor
cmps
cli
(bad)
fbld
fwait
jmp
test
out
mov
cmp
jecxz
inc
stos
fwait
dec
and
mov
inc
lods
push
mov
imul
repnz
mov
mov
or
mov
add
sub
cmps
mov
sub
cld
(bad)
call
sahf
xrelease
inc
loope
add
mov
call
add
test
jmp
or
inc
aas
call
cmp
inc
sbb
pusha
ins
(bad)
adc
clc
(bad)
(bad)
jmp
mov
call
xor
xchg
std
sub
stos
test
repnz
xchg
jmp
jmp
cld
pushf
call
jmp
and
(bad)
(bad)
jmp
repnz
fmulp
mov
pop
stc
nop
fwait
mov
int3
mov
cmps
add
std
call
xchg
mov
mov
xchg
mov
enter
clc
mov
lds
jp
into
adc
pop
test
mov
clc
(bad)
push
mov
call
and
adc
lods
push
or
dec
adc
(bad)
(bad)
inc
xchg
or
add
jns
mov
ins
push
pop
mov
add
call
out
stos
icebp
add
or
xor
xor
call
mov
or
in
call
jl
jmp
repz
(bad)
(bad)
jmp
sub
sub
mov
pop
xor
cs
pop
pop
call
and
(bad)
(bad)
(bad)
cmp
pop
sbb
sub
ret
scas
shl
and
mov
xchg
mov
enter
pop
dec
push
cmps
fldenv
mov
imul
xchg
jge
fld
xchg
mov
xchg
loop
mov
movs
add
ret
(bad)
(bad)
cmp
outs
mov
ja
and
add
cs
ins
out
mov
popa
cli
dec
(bad)
sbb
push
(bad)
(bad)
call
pop
outs
cmp
fwait
je
bound
xor
push
push
dec
cmp
(bad)
(bad)
jmp
ins
mov
fisttp
pop
dec
xchg
adc
test
xor
ins
(bad)
(bad)
(bad)
dec
sub
fnstsw
sbb
ss
mov
mov
lahf
ds
mov
pop
xchg
inc
xchg
das
mov
jbe
in
mov
add
cmp
push
fidiv
mov
push
mov
test
push
mov
es
inc
dec
mov
fimul
mov
ss
cmp
(bad)
(bad)
jmp
xchg
cs
(bad)
and
daa
cs
jnp
ret
cmp
xor
mov
aad
mov
call
in
sbb
(bad)
sbb
adc
mov
adc
(bad)
push
call
stos
ficomp
sub
jp
xchg
sub
mov
outs
(bad)
ins
jmp
clc
xchg
cmp
cwde
adc
push
sbb
icebp
clc
push
stos
dec
fs
sub
jp
or
pop
pop
or
mov
(bad)
(bad)
jmp
pusha
sub
jecxz
sub
fsubr
xor
pop
movs
inc
inc
add
(bad)
mov
aaa
mov
popa
xlat
iret
pop
loopne
retf
in
(bad)
jmp
fsubr
and
enter
push
dec
mov
inc
mov
fcomip
mov
out
jae
xor
xchg
in
xor
add
xchg
clc
repz
ss
sbb
push
leave
dec
push
movs
sbb
push
out
mov
sub
push
push
lods
push
sti
lods
lods
or
outs
or
sti
in
aas
and
cli
or
adc
xor
pop
add
ret
jp
fs
mov
ret
shl
xchg
dec
cmp
imul
and
mov
jp
lahf
mov
jae
call
and
fisub
mov
out
jmp
jge
mov
sbb
sub
sub
movs
mov
(bad)
stos
retf
fidiv
add
dec
mov
out
mov
aaa
pop
jmp
xor
mov
arpl
in
sbb
stos
adc
vmread
popf
mov
cld
jnp
pop
and
fld
adc
and
cmps
sbb
imul
mov
cwde
inc
pop
enter
pushf
pop
gs
es
xlat
add
(bad)
call
rcr
jmp
pop
sub
adc
inc
dec
adc
xor
mov
js
or
das
pop
dec
and
cli
jb
mov
fsubr
push
movs
(bad)
(bad)
cmp
sub
mov
jmp
mov
loop
rcl
jmp
stos
jl
adc
(bad)
lods
icebp
sar
(bad)
(bad)
cmp
cmp
mov
shl
jae
jmp
jl
loop
nop
out
outs
cdq
mov
(bad)
push
dec
push
fdiv
xor
dec
mov
loopne
iret
ins
in
jmp
(bad)
jl
call
cmp
fs
pop
jmp
mov
clc
(bad)
(bad)
call
sbb
call
push
retf
btc
fsqrt
imul
pusha
adc
inc
movs
mov
push
cmp
push
mov
jnp
push
push
rsm
leave
mov
test
movs
lock
jo
add
scas
xchg
ficom
sub
mov
cmps
das
cli
dec
add
lods
xor
add
jp
(bad)
(bad)
(bad)
cmps
scas
cmp
sbb
sub
div
mov
retf
enter
fcmove
(bad)
mov
cmp
push
dec
sub
(bad)
(bad)
jmp
jl
rcr
leave
mov
sub
push
pop
cmp
jae
jg
ret
jl
push
inc
ds
push
popa
cmp
fsubr
fmul
or
ss
mov
pusha
cmp
imul
call
inc
cld
jno
scas
mov
call
cld
push
mov
clc
cld
cld
in
xchg
popa
or
scas
xchg
lods
shl
or
shl
cmp
and
xor
call
sub
pop
lock
mov
fisub
cmps
push
mov
pusha
sbb
and
sti
mov
mov
(bad)
(bad)
inc
(bad)
into
pop
iret
mov
xor
sub
movs
test
(bad)
call
(bad)
jecxz
xchg
call
mov
or
aas
cmps
push
dec
fisttp
imul
mov
sub
push
sar
loopne
out
xchg
(bad)
(bad)
(bad)
jg
dec
movs
add
cmp
sar
adc
push
mov
mov
scas
or
mov
sti
dec
dec
test
test
pop
cmp
int3
sbb
mov
ds
mov
cmps
dec
cmp
jg
jmp
repz
iret
in
xor
and
fbld
add
sub
xor
xchg
mov
and
sar
xchg
mov
push
cmp
mov
jmp
sub
cmc
fdivr
pop
test
mov
mov
int3
push
sub
jo
cmps
and
jmp
aad
mov
pop
mov
shl
or
stos
fist
(bad)
(bad)
jmp
pop
fbld
pop
inc
loopne
out
mov
int3
mov
push
das
jle
xchg
push
mov
mov
mov
mov
add
jmp
test
cld
call
push
mov
es
push
cmp
xchg
xor
push
pop
stos
or
push
clc
cmp
cdq
and
cmp
sub
jne
test
call
mov
(bad)
cmp
adc
lods
adc
pop
dec
ins
xchg
jl
es
inc
pop
cmc
(bad)
jmp
fucom
pop
cli
mov
retf
xchg
js
mov
out
retf
outs
and
push
movs
js
pop
push
mov
fild
(bad)
(bad)
dec
fmul
push
mov
enter
cvtdq2ps
and
xchg
loop
(bad)
call
retf
retf
dec
jb
into
sbb
loope
rol
jae
les
retf
std
iret
sbb
or
lods
js
das
sbb
imul
mov
add
xchg
push
out
jg
call
ins
lods
push
sbb
sub
outs
dec
mov
in
inc
jp
(bad)
or
or
ins
aas
div
int
pushf
movs
ds
(bad)
(bad)
(bad)
dec
into
js
mov
std
cmp
out
pop
mov
jl
xor
mov
sbb
(bad)
(bad)
dec
scas
xor
hlt
call
jmp
sahf
jl
adc
pop
pop
mov
repz
(bad)
(bad)
inc
test
or
cdq
lds
mov
jp
inc
std
cmp
movs
or
sahf
mov
pop
aas
movs
js
lods
into
inc
sti
jbe
call
mov
idiv
xchg
cld
mov
(bad)
(bad)
call
outs
shl
popf
sbb
int
imul
mov
pop
adc
out
and
jmp
mov
mov
stos
and
adc
adc
fistp
out
xchg
scas
cs
push
push
mov
mov
push
inc
in
mov
or
push
mov
iret
xchg
jbe
repz
lahf
mov
jmp
repnz
ins
cs
adc
hlt
dec
clc
xor
xor
aam
inc
adc
shl
fisubr
imul
mov
call
ficomp
(bad)
inc
cdq
je
cdq
jnp
es
ror
jmp
and
mov
test
xchg
jmp
xchg
retf
fcom
(bad)
(bad)
mov
frstor
lods
and
mov
or
sbb
imul
pop
sub
push
sub
ja
xchg
loop
sub
push
ss
(bad)
jmp
cmp
sub
or
scas
stos
das
pop
pop
stos
dec
mov
fdiv
or
or
sub
xchg
or
(bad)
mov
dec
mov
jno
stos
jp
pop
in
rcr
xchg
jg
inc
in
popa
adc
(bad)
and
mov
call
sub
fdivr
out
leave
das
call
in
pop
or
(bad)
(bad)
mov
inc
call
xlat
and
mov
mov
outs
sbb
push
test
cmp
sub
cmp
pop
mov
ficom
(bad)
(bad)
(bad)
sti
pop
lahf
leave
or
cmp
and
test
mov
xchg
xchg
mov
retf
retf
(bad)
(bad)
(bad)
inc
push
mov
xor
imul
mov
cdq
(bad)
(bad)
(bad)
dec
xchg
ds
jmp
mov
(bad)
daa
jno
mov
jmp
clc
cmc
sub
ss
(bad)
call
in
mov
push
data16
pop
dec
push
xchg
cs
outs
cmp
mov
in
pusha
pushf
adc
cmps
fsubr
mov
ss
or
add
fiadd
fild
imul
jecxz
mov
dec
inc
movs
cld
mov
xchg
mov
ficomp
das
clc
call
xor
sbb
stos
imul
xor
add
mov
adc
fwait
and
pusha
mov
mov
pop
popa
cld
sbb
mov
dec
nop
sub
ins
cwde
por
aas
push
dec
nop
add
std
mov
jmp
pop
cdq
sub
fsubr
retf
sub
iret
(bad)
(bad)
(bad)
mov
mov
and
cmps
je
lahf
jl
and
sub
shl
dec
(bad)
(bad)
(bad)
mov
fdivrp
outs
icebp
lock
xchg
test
in
cmp
aas
xor
push
jmp
push
pop
mov
push
dec
(bad)
inc
rcl
loop
lods
xchg
ret
stc
dec
enter
cs
dec
in
and
xchg
mov
or
push
shr
sub
sbb
mov
cmp
sar
(bad)
jmp
xor
sbb
sbb
mov
dec
enter
xchg
mov
mov
pusha
pop
and
sbb
mov
cdq
push
and
(bad)
(bad)
jnp
push
popa
ins
pop
mov
cld
or
outs
lea
adc
(bad)
(bad)
jg
xchg
mov
jo
mov
or
ins
out
xor
out
xor
(bad)
(bad)
in
bound
imul
sbb
lock
call
mov
sub
out
data16
xor
(bad)
(bad)
jmp
loopne
repz
stos
mov
test
jnp
sub
cmp
cmp
int3
pusha
jns
(bad)
(bad)
inc
call
xchg
mov
push
cmp
test
imul
or
(bad)
(bad)
(bad)
push
ds
sti
paddq
pop
shr
push
popf
leave
xor
retf
mov
cdq
sbb
call
outs
imul
mov
(bad)
dec
lock
mov
ss
(bad)
dec
add
xor
imul
imul
or
call
adc
test
add
sbb
ja
(bad)
adc
int
sub
std
(bad)
inc
sbb
cmp
xor
mov
mov
mov
lock
cmp
lods
cmp
cmp
dec
push
mov
mov
mov
cmps
xchg
pop
jle
mov
xor
ss
jmp
xlat
push
sbb
inc
jl
sub
pop
sbb
pop
leave
lods
cmp
jb
mov
add
ins
scas
mov
iret
(bad)
iret
jmp
scas
jmp
movs
lea
push
hlt
(bad)
jmp
mov
pop
dec
mov
pushf
fmul
push
addr16
call
jb
stos
add
out
or
arpl
mov
and
cmc
loop
lahf
call
(bad)
(bad)
jg
ins
pushf
dec
fwait
fs
or
cli
push
je
in
xchg
adc
dec
cli
dec
(bad)
(bad)
(bad)
(bad)
jmp
fldcw
mov
or
bound
xchg
cmps
(bad)
sub
xor
jecxz
cwde
clc
not
jmp
out
(bad)
call
xchg
repnz
mov
xor
sti
pop
jl
dec
sub
in
(bad)
(bad)
(bad)
(bad)
ds
adc
in
(bad)
push
xor
imul
sub
fldz
cs
fwait
(bad)
call
mov
std
sub
and
mov
lock
test
dec
add
call
(bad)
xor
mov
push
jae
popf
mov
push
and
push
dec
lock
call
clc
in
test
jmp
xor
out
mov
mov
call
jg
mov
jg
(bad)
sbb
sub
stos
cmp
ret
call
scas
jp
sub
retf
aaa
retf
ins
cli
jmp
(bad)
ss
(bad)
call
sub
pop
sub
dec
or
push
clc
stos
mov
stos
loope
imul
mov
jmp
imul
inc
cmp
retf
cld
das
data16
jo
test
mov
(bad)
(bad)
mov
pushf
cmp
jbe
dec
sbb
or
jmp
xchg
in
in
lods
mov
dec
add
xchg
fistp
jge
mov
mov
es
jb
xor
xor
(bad)
fistp
cmp
pop
scas
shl
out
enter
stos
fidivr
push
rcr
jecxz
and
das
mov
xchg
jmp
mov
push
pop
cmc
dec
push
in
in
sub
cmp
sti
call
push
push
in
(bad)
pushf
lods
(bad)
mov
enter
xchg
mov
imul
outs
addr16
ja
(bad)
cmp
cdq
nop
shr
sar
mov
sbb
sub
mov
ss
mov
daa
repnz
mov
cmp
ror
(bad)
jmp
loop
pop
js
(bad)
rcr
ins
sub
sti
loope
push
daa
pop
mov
push
sbb
mov
dec
(bad)
sub
fwait
add
sbb
xchg
ins
pop
cmp
mov
jmp
sub
repz
mov
imul
dec
push
icebp
outs
lods
add
fistp
push
not
(bad)
fbld
ins
xchg
mov
ror
mov
lods
lods
cmps
(bad)
jmp
out
adc
call
sbb
(bad)
lahf
lahf
ds
and
xor
test
(bad)
jmp
std
mov
out
push
xlat
mov
or
inc
pop
or
mov
mov
dec
jp
xchg
mov
add
push
(bad)
(bad)
dec
fwait
sub
jmp
inc
mov
imul
add
push
cli
out
movhps
jnp
mov
das
jle
and
and
ds
ret
mov
(bad)
(bad)
dec
or
pop
xchg
retf
xor
lock
cmp
xchg
xchg
jmp
repnz
cmp
std
sbb
and
es
cmp
aaa
cld
adc
jo
loope
cld
call
push
fwait
mov
dec
cmp
and
jo
shl
shl
pushf
mov
mov
test
push
out
dec
stc
lods
mov
push
or
sub
data16
jae
and
sub
and
and
(bad)
(bad)
(bad)
dec
jl
cmps
or
test
mov
mov
cmp
mov
fsub
loopne
(bad)
(bad)
(bad)
dec
xlat
xchg
retf
or
fwait
es
mov
mov
out
and
lea
jecxz
(bad)
push
mov
popf
xchg
pop
jbe
in
ret
pop
inc
es
jb
mov
pop
mov
push
retf
jg
(bad)
fdivr
dec
fst
(bad)
and
jg
inc
in
mov
mov
(bad)
jg
cmps
adc
push
cmp
mov
cmp
xor
or
sub
nop
(bad)
push
repz
jb
cs
inc
mov
das
clc
mov
sub
push
jl
dec
(bad)
jl
dec
jle
(bad)
mov
mov
pop
adc
xchg
ret
in
mov
call
and
leave
cmp
sub
add
frstor
test
push
push
shl
or
sti
push
pusha
sub
std
mov
xchg
or
push
push
aam
out
mov
adc
leave
mov
das
rcr
ret
loop
(bad)
(bad)
jg
push
sbb
jecxz
in
test
mov
movs
in
push
push
(bad)
(bad)
push
dec
test
inc
cmps
imul
or
iret
(bad)
fwait
push
push
mov
loop
add
lea
(bad)
(bad)
dec
test
sub
shr
test
jg
xchg
sti
xchg
in
jnp
popa
xor
(bad)
mov
push
dec
xchg
adc
push
sbb
cmps
and
xchg
aad
sub
dec
sti
inc
jmp
xchg
adc
jne
(bad)
sub
mov
ret
call
jmp
or
cmp
xor
aam
xor
cmps
mov
add
popa
in
in
stc
inc
call
dec
jbe
lahf
jae
and
mov
das
rcr
out
hlt
icebp
(bad)
(bad)
call
sti
and
mov
ja
jmp
movs
add
sub
mov
(bad)
(bad)
(bad)
jmp
pop
sub
pop
mov
mov
cmp
shr
mov
xchg
call
(bad)
mov
cmp
and
mov
push
nop
retf
cmp
mov
dec
mov
fisttp
adc
and
cmp
stc
xchg
or
(bad)
mov
sbb
mov
push
iret
movs
in
(bad)
call
pop
ins
add
out
sbb
sbb
pop
push
data16
fsubr
clc
sub
fcom
enter
xchg
jmp
cmps
cmp
fsub
lahf
xor
int
imul
daa
aam
stos
mov
cmp
ret
dec
jno
mov
xchg
call
idiv
repnz
in
(bad)
mov
shr
out
adc
loop
xchg
aaa
push
add
mov
repnz
cld
xor
push
clc
(bad)
(bad)
(bad)
mov
dec
pop
ins
or
sub
sub
in
leave
add
retf
adc
dec
fisub
sahf
jecxz
jecxz
ret
jl
sub
(bad)
call
cmps
(bad)
loopne
add
or
fstp
xchg
and
sub
xor
aaa
rol
lock
adc
(bad)
out
xchg
adc
ss
jbe
iret
(bad)
(bad)
mov
idiv
pop
out
(bad)
daa
sbb
mov
sub
(bad)
(bad)
(bad)
call
jle
sbb
inc
jg
sbb
(bad)
sub
pop
sub
idiv
(bad)
cmp
stos
js
sub
mov
xchg
ds
xchg
add
es
ja
cli
scas
mov
and
fdivr
fs
cld
mov
test
adc
mov
mov
retf
sub
mov
dec
leave
dec
sub
sub
in
movs
das
sbb
(bad)
(bad)
jmp
push
daa
test
in
popf
push
jmp
or
lahf
(bad)
(bad)
fisttp
cdq
(bad)
or
cwde
mov
dec
jge
or
stos
sub
inc
call
mov
pop
pop
pop
pushf
lods
xchg
mov
and
sub
stos
imul
cmps
jge
dec
fdivr
push
loope
xor
test
cmps
xchg
fld
imul
jmp
and
push
iret
mov
cs
arpl
gs
(bad)
(bad)
jmp
mov
and
lea
sar
sbb
pop
mov
iret
dec
lea
(bad)
jmp
sbb
sbb
iret
jmp
cmp
test
pop
fnsave
sub
ds
call
pop
call
mov
fistp
sbb
pushf
call
imul
daa
lea
call
xor
stc
xor
out
clc
jp
cmps
sbb
outs
jmp
ins
xchg
xor
(bad)
call
mov
stos
retf
dec
bound
mov
jle
cmps
adc
repnz
call
add
pop
xchg
out
pusha
call
jmp
repz
sub
sti
(bad)
xchg
mov
mov
push
mov
dec
pushf
inc
mov
ins
mov
(bad)
mov
cmp
jne
aad
and
and
push
rcl
adc
mov
cs
(bad)
pop
int3
out
cwde
mov
adc
jmp
cmp
cmps
xchg
das
aas
daa
(bad)
mov
scas
retf
dec
inc
dec
inc
or
xchg
loop
(bad)
fsubr
loope
pop
dec
mov
js
jecxz
retf
aaa
or
nop
adc
push
push
inc
mov
outs
pop
cld
stc
xchg
adc
mov
mov
or
bnd
mov
xchg
cmp
mov
movs
fst
jp
das
cli
sbb
frstor
loop
popf
fstp
add
push
ret
push
pop
mov
fidiv
push
in
cmp
in
imul
mov
(bad)
call
lock
mov
mov
movs
or
mov
stos
(bad)
(bad)
jg
push
cmp
add
stos
lods
mov
dec
cmp
hlt
xchg
push
cwde
push
or
call
pop
ins
loopne
mov
repnz
(bad)
(bad)
fbstp
dec
imul
pusha
jle
adc
inc
sbb
in
cmp
fisub
xchg
push
std
(bad)
push
lock
sbb
leave
addr16
dec
rcl
fs
(bad)
xchg
(bad)
(bad)
jg
mov
and
push
xor
jnp
mov
adc
popf
and
dec
add
lods
xor
cmps
repnz
mov
mov
cs
xor
lock
xlat
mov
cld
mov
scas
xchg
data16
xor
repz
pop
cli
push
fldcw
or
pop
call
push
fbstp
dec
pop
neg
sub
mov
mov
fcomip
jmp
(bad)
scas
mov
adc
sub
mov
xacquire
sub
(bad)
(bad)
call
lahf
ficom
ror
fisubr
popa
aam
in
(bad)
lahf
pushf
pop
lock
xchg
mov
stos
xchg
mov
adc
(bad)
mov
ins
pop
xchg
div
loope
sbb
(bad)
(bad)
inc
adc
cdq
xor
mov
pop
(bad)
(bad)
stos
dec
lea
pop
mov
stos
push
ds
bound
xchg
adc
call
repnz
lock
adc
mov
fwait
test
nop
sbb
lock
adc
aam
add
sbb
aas
movs
xor
cli
(bad)
jmp
in
jbe
xor
in
mov
test
cld
mov
cmp
mov
mov
in
mov
(bad)
jmp
mov
adc
dec
cdq
jmp
or
(bad)
es
fistp
push
std
jmp
cmps
out
cmp
pop
in
cmp
or
fistp
aad
sbb
jnp
adc
mov
jg
add
sub
shl
jno
(bad)
dec
sub
fs
cmp
mov
enter
test
xchg
mov
fwait
scas
xchg
sbb
inc
mov
push
mov
ds
lods
stos
inc
(bad)
(bad)
jg
sbb
add
loopne
into
test
cld
jo
shr
jns
loop
(bad)
xor
enter
(bad)
mov
pop
sub
lea
scas
aas
push
and
lahf
ins
or
stos
pop
clc
push
inc
xor
aaa
jb
(bad)
outs
(bad)
jmp
mov
and
(bad)
fst
fs
daa
gs
jp
call
fwait
cmps
pop
push
pop
dec
fistp
adc
jg
jne
inc
imul
(bad)
dec
push
pcmpeqd
jnp
dec
popa
or
mov
jg
mov
(bad)
sub
mov
clc
push
xor
cmp
aaa
stos
(bad)
jmp
ss
out
js
sub
fimul
enter
mov
into
or
std
dec
scas
scas
setno
fwait
clc
dec
scas
shl
inc
fisttp
scas
adc
pop
cs
stos
mov
or
mov
pop
sub
push
pop
imul
cli
(bad)
push
push
cmp
inc
gs
cmps
sub
daa
(bad)
pop
sub
inc
shl
fimul
loop
call
test
mov
fcomip
inc
mov
xchg
fistp
ret
pop
pop
arpl
and
dec
stos
sub
push
(bad)
jmp
outs
cwde
push
stos
fdivr
or
(bad)
(bad)
mov
jmp
ins
in
adc
popa
or
push
in
int
jae
push
(bad)
dec
inc
sub
dec
mov
daa
jmp
lds
pop
cmp
push
jb
lea
aaa
or
pop
dec
cmp
mov
(bad)
jmp
mov
mov
pop
movs
jle
fucomi
daa
fdiv
daa
out
mov
stos
or
sar
(bad)
mov
pop
mov
pushf
mov
clc
and
clc
(bad)
int3
sub
aad
icebp
pop
ins
jle
mov
xchg
or
(bad)
(bad)
jmp
je
mov
call
inc
repz
retf
sti
cmps
test
push
stos
pushf
xlat
test
scas
popa
out
mov
in
(bad)
(bad)
fisttp
adc
xor
dec
in
or
out
icebp
sub
or
ins
xchg
je
push
inc
push
call
and
push
jecxz
mov
imul
popa
or
imul
rcr
mov
jg
mov
je
cmp
xor
in
push
jnp
ds
movs
out
(bad)
(bad)
(bad)
jmp
mov
repz
push
in
dec
inc
dec
add
cli
lock
mov
packuswb
jo
call
les
cmp
add
inc
ficomp
repnz
(bad)
out
cli
(bad)
cmp
dec
push
push
pop
loopne
clc
dec
outs
push
cmp
cvttps2pi
push
hlt
(bad)
out
dec
pop
(bad)
pushf
shr
mov
mov
xchg
in
dec
out
rcr
(bad)
sti
mov
cmc
mov
jecxz
cmp
mov
imul
add
jb
cmp
in
(bad)
xor
in
or
or
mov
mov
add
mov
push
inc
mov
out
out
iret
pop
and
inc
or
jmp
lock
loopne
aas
fbstp
ror
dec
sti
pop
cmp
pop
sub
jmp
mov
call
mov
(bad)
xor
fisttp
push
add
(bad)
(bad)
(bad)
mov
sbb
sub
cmp
mov
mul
mov
cmps
jo
das
ss
loop
scas
(bad)
(bad)
mov
push
or
sbb
mov
lods
pop
pushf
pop
mov
add
(bad)
mov
inc
or
daa
or
xchg
call
rcr
dec
std
and
mov
(bad)
(bad)
push
sub
and
ins
pop
sub
rcl
pop
loop
cmps
xor
std
(bad)
push
adc
jl
xor
lahf
addr16
loop
sbb
loopne
push
std
call
cli
mov
or
pop
mov
push
sub
int3
mov
ja
cli
lds
in
mov
mov
hlt
mov
push
add
inc
scas
xor
mov
iret
push
adc
int3
pop
push
test
lahf
lods
jmp
(bad)
sti
push
jp
xor
jnp
jb
or
jae
popf
pop
ret
(bad)
(bad)
inc
mov
push
sbb
or
and
xchg
jmp
mov
lods
pop
out
sub
icebp
(bad)
(bad)
out
mov
adc
xlat
and
inc
xor
cld
call
jo
mov
jmp
xchg
(bad)
jg
into
or
out
in
mov
pop
pop
add
sub
mov
xor
jmp
mov
(bad)
xor
dec
adc
retf
jge
mov
sub
(bad)
(bad)
call
cmp
jg
pop
xchg
mov
adc
mov
cld
mov
pop
pop
scas
mov
mov
dec
mov
mov
fcmovne
mov
mov
dec
sar
push
call
retf
xchg
sar
mov
sbb
repnz
or
stos
enter
rcl
das
clc
pop
nop
pop
das
stc
lods
sub
pop
push
fisubr
std
dec
iret
and
adc
mov
in
pop
clc
movs
mov
retf
dec
cmp
std
(bad)
jmp
cdq
xchg
mov
jae
cmp
mov
jae
mov
(bad)
jg
ins
jb
mov
mov
mov
mov
xlat
mov
sbb
loope
mov
hlt
shl
stc
mov
mov
loopne
popf
inc
mov
ins
inc
lds
call
cwde
dec
dec
inc
test
ror
push
jp
scas
dec
mov
pop
cwde
lahf
and
jg
(bad)
(bad)
jmp
lds
mov
or
in
jmp
sbb
dec
mov
in
lds
sbb
mov
(bad)
jmp
shl
pop
cmc
std
leave
and
inc
jg
out
mov
jmp
les
call
pop
or
int
or
in
aaa
fwait
clc
push
mov
mov
pop
jecxz
mov
inc
outs
outs
loop
and
mov
sub
mov
aaa
sub
fcom
outs
enter
std
or
push
pop
adc
movs
out
mov
nop
sbb
mov
sub
push
sbb
mov
add
inc
mov
(bad)
mov
enter
cmp
(bad)
das
mov
sbb
js
mov
jp
ret
add
sub
mov
dec
clc
mov
fdiv
in
sar
(bad)
(bad)
jmp
sbb
in
sbb
jl
sub
dec
repnz
das
cli
mov
ret
jb
cmps
fcomip
mov
(bad)
mov
es
loope
(bad)
mov
adc
(bad)
jmp
or
pop
arpl
adc
lea
inc
(bad)
mov
push
jecxz
pusha
cld
es
fs
hlt
(bad)
inc
imul
out
pushf
push
mov
jmp
fild
(bad)
inc
xor
pop
jb
pop
ret
in
add
mov
call
in
retf
mov
in
popa
jg
mov
lock
fptan
pop
fdiv
cmp
in
inc
(bad)
jmp
shl
into
cwde
(bad)
aas
clc
mov
xor
ins
(bad)
call
jmp
cli
jmp
es
xchg
jns
or
or
jg
ins
outs
(bad)
call
shr
push
cld
inc
fdecstp
lods
mov
retf
mov
les
(bad)
(bad)
adc
in
mov
add
jmp
(bad)
(bad)
dec
add
shr
inc
sub
scas
cmp
cs
sub
dec
clc
and
mov
xor
dec
scas
add
cmp
pop
clc
inc
test
cs
nop
mov
push
std
or
adc
test
out
rol
in
mov
ins
(bad)
call
das
fsubr
mov
fidiv
mov
hlt
retf
sbb
es
sbb
add
pop
jnp
movs
mov
dec
pop
cmp
mov
adc
stos
sahf
jge
popa
mov
fstp
(bad)
call
repz
add
bound
push
xchg
fnstcw
dec
fdivr
cld
jmp
cs
rcl
dec
repnz
sub
pop
or
mov
sbb
pop
(bad)
(bad)
(bad)
inc
ins
(bad)
arpl
jl
loop
or
call
mov
cmc
test
sti
mov
push
fdivr
dec
out
cmp
dec
call
retf
movs
ins
jmp
jbe
test
mov
mov
jp
loopne
push
sbb
sti
inc
xor
imul
sub
stos
inc
mov
rcr
dec
imul
pushf
imul
retf
sub
outs
and
cmp
repnz
cwde
repz
rol
jmp
hlt
cmp
mov
loop
jmp
retf
push
mov
test
add
(bad)
(bad)
call
cs
in
fisub
(bad)
pop
push
les
xchg
in
cmp
mov
popa
adc
jg
add
push
lahf
push
mov
sbb
out
mov
rcl
cmp
xchg
aad
sbb
or
dec
push
clc
jg
mov
movs
sub
sub
dec
dec
rcr
jnp
mov
ins
(bad)
(bad)
(bad)
call
sahf
mov
mov
ins
xor
data16
mov
fidivr
in
ja
(bad)
(bad)
push
aam
imul
xchg
pop
mov
mov
in
push
cs
sub
dec
and
(bad)
jmp
lahf
mov
cmp
mov
jle
movs
sbb
jmp
mov
inc
sti
add
and
(bad)
(bad)
(bad)
fistp
push
and
leave
lods
xchg
stc
ret
ret
or
jle
jge
pop
mov
(bad)
(bad)
(bad)
call
inc
xlat
out
bound
adc
jne
sbb
mov
mov
mov
mov
imul
or
push
enter
inc
add
or
out
mov
(bad)
(bad)
jge
and
out
out
mov
sbb
sbb
adc
mov
sub
int3
loopne
call
call
fidiv
retf
ret
test
rcr
cld
pushf
sbb
ja
xchg
cmp
jne
adc
sbb
push
jmp
mov
xchg
(bad)
call
jge
xchg
push
lock
test
fbstp
mov
fdiv
sbb
mov
inc
sbb
bound
in
fwait
inc
add
repnz
lods
and
jle
cs
mov
pop
cmps
sbb
cmc
(bad)
mov
iret
repnz
mov
jbe
movs
cli
jg
imul
dec
mov
xchg
(bad)
(bad)
(bad)
inc
lods
and
pop
loopne
aas
mov
shl
out
popf
jmp
jge
out
cli
(bad)
call
xchg
pop
mov
mov
mov
dec
ret
mov
leave
inc
arpl
(bad)
dec
sbb
push
pop
lock
cli
aas
push
sub
lock
jp
(bad)
(bad)
mov
cmps
add
ficom
sub
cld
mov
or
jb
(bad)
pop
fbld
jmp
mov
cwde
loopne
test
repnz
sti
je
cwde
stc
lock
daa
sub
(bad)
jg
stos
(bad)
test
(bad)
stos
pop
or
xchg
(bad)
sbb
jno
cwde
ror
aam
pop
jl
repnz
repz
cs
push
cld
(bad)
jmp
dec
imul
sub
das
add
sub
(bad)
fild
xchg
fld
pusha
push
stos
ja
pop
sub
cmp
inc
mov
add
mov
sub
mov
mov
xlat
dec
jmp
push
cmp
cmp
mov
pusha
adc
adc
xchg
ins
inc
jmp
and
(bad)
jp
jg
inc
xor
cmps
cmp
and
xchg
xchg
rcl
ds
hlt
(bad)
jg
pushf
cmps
(bad)
iret
inc
jecxz
jge
mov
repz
(bad)
pop
sti
aas
cmp
test
or
cmp
push
jmp
hlt
sub
pusha
idiv
movs
jp
jno
xor
jmp
imul
stos
mov
add
cmp
movs
(bad)
pop
int
sub
(bad)
(bad)
(bad)
jmp
pop
sbb
cmp
ins
test
(bad)
push
ja
mov
js
dec
ins
retf
out
out
imul
xchg
and
cmc
fcomp
lea
mov
or
je
xor
mov
jg
sub
sbb
lahf
scas
(bad)
(bad)
(bad)
call
xchg
aas
es
inc
xor
aam
adc
ds
sub
cld
push
add
imul
sbb
add
mov
idiv
in
sub
or
inc
(bad)
enter
cmps
cmp
call
and
mov
scas
mov
mov
pop
hlt
pop
loopne
pop
xor
mov
mov
pushf
xchg
mov
(bad)
(bad)
dec
retf
stos
xor
lock
leave
push
xor
je
pop
push
sub
lods
loopne
dec
inc
jp
cmp
mov
xchg
sbb
sahf
cmp
mov
je
xchg
add
push
cmp
call
sbb
retf
shl
(bad)
xor
jno
push
xchg
out
sar
inc
cmp
pop
mov
std
or
mov
out
loopne
jmp
(bad)
out
iret
push
cli
push
jnp
mov
mov
cli
mov
call
xor
iret
pushf
retf
test
(bad)
(bad)
mov
jl
shr
rcl
fistp
imul
das
sub
xor
or
pushf
shr
clc
mov
leave
in
je
mov
jmp
(bad)
call
jb
cs
(bad)
out
adc
sar
jae
jmp
in
pop
cmp
mov
(bad)
(bad)
call
aam
push
jmp
xchg
push
add
cmps
cmps
rcr
add
add
pop
call
mov
or
sti
or
adc
jl
add
cwde
cmc
mov
ror
mov
pop
(bad)
inc
stos
inc
cs
jle
push
and
cld
sub
int3
and
(bad)
jmp
and
fldcw
dec
bsr
popf
adc
aad
xor
jecxz
jecxz
dec
(bad)
(bad)
(bad)
jmp
ds
rcr
sub
push
and
mov
ror
loopne
and
xchg
xor
sbb
cmp
pushf
push
rol
push
xor
jmp
xchg
test
scas
mov
fnstsw
js
cmp
xor
jp
pop
xchg
sbb
and
call
or
sub
mov
loop
loop
rcr
or
push
sbb
repnz
repz
in
arpl
mov
jmp
jl
in
shl
out
dec
out
push
stc
ret
xchg
loope
aam
(bad)
(bad)
cmp
adc
out
cmps
test
sub
(bad)
(bad)
push
mov
mov
and
sub
ja
xchg
(bad)
in
cmp
enter
sahf
and
scas
or
dec
sar
dec
pop
mov
or
jb
stos
je
(bad)
jg
push
lods
inc
inc
shl
pop
test
mov
call
jmp
fldz
ins
loop
mov
test
push
sub
jmp
push
lods
add
jmp
mov
adc
sub
iret
daa
(bad)
jmp
rol
jb
mov
pop
xor
mov
or
push
(bad)
(bad)
mov
mov
push
xor
cmp
xchg
les
mov
fidivr
sahf
add
or
pop
ror
sub
in
lea
sub
out
gs
ins
push
cmps
in
adc
add
sbb
icebp
jmp
dec
mov
mov
lods
(bad)
xchg
ins
(bad)
jns
aam
(bad)
call
adc
push
fbstp
mov
or
mov
and
js
add
push
jmp
xchg
mov
mov
arpl
inc
cld
push
push
jo
xlat
cdq
pop
retf
jmp
loop
sub
sti
mov
jmp
adc
cmp
(bad)
(bad)
(bad)
mov
jmp
xchg
fstp
jmp
retf
push
xor
cld
push
pop
movs
jnp
das
cld
push
mov
cs
call
dec
pop
inc
adc
inc
(bad)
and
mov
fwait
xor
std
(bad)
(bad)
dec
dec
mov
xor
loop
daa
fcmovb
mov
add
out
(bad)
bound
sub
hlt
ja
and
test
push
fdivrp
(bad)
(bad)
push
aas
push
cmp
cmc
stos
js
ds
sbb
sub
iret
fnstenv
(bad)
push
fistp
sub
outs
(bad)
jo
mov
mov
mov
stos
and
imul
pop
mov
xchg
scas
mov
and
and
(bad)
mov
add
mov
jmp
imul
(bad)
(bad)
(bad)
cmp
mov
mov
inc
into
add
jp
mov
loop
je
(bad)
sub
mov
(bad)
in
aas
fisubr
in
(bad)
xchg
int
xchg
ret
(bad)
(bad)
(bad)
jg
push
add
mov
shl
loop
cmp
xchg
jg
(bad)
out
test
mov
fisttp
adc
mov
jmp
das
out
(bad)
(bad)
(bad)
fild
cmp
in
into
mov
fimul
cli
xchg
jmp
push
cmps
and
jnp
(bad)
mov
jecxz
push
out
clc
rol
lock
push
or
clc
test
sar
(bad)
jmp
mov
pop
stos
jl
mov
xor
sbb
call
jge
xchg
(bad)
(bad)
push
pop
ins
push
test
push
push
imul
enter
cwde
or
or
mov
jns
xor
cld
xchg
bsf
cmp
and
jg
sub
cmp
push
sub
aad
(bad)
mov
xor
mov
push
out
sub
cmps
(bad)
dec
retf
loop
adc
int
pop
call
add
call
sbb
adc
mov
adc
mov
(bad)
(bad)
jmp
add
pop
push
jp
add
dec
xor
lock
dec
je
push
xchg
sbb
mov
(bad)
test
(bad)
fsubr
jge
mov
cli
adc
pop
mov
sub
dec
jmp
and
(bad)
fsub
lods
and
scas
push
add
es
xchg
lock
push
ret
push
pop
sbb
movs
cmp
(bad)
jg
pop
aaa
(bad)
sbb
dec
jmp
test
jmp
stos
dec
lds
pop
loopne
icebp
outs
inc
push
ss
enter
adc
and
mov
(bad)
(bad)
call
daa
push
lea
inc
arpl
cmp
fcmove
jge
or
xchg
out
and
jmp
add
clc
and
inc
push
(bad)
(bad)
(bad)
(bad)
ds
lock
pop
and
push
out
push
scas
or
stc
xor
mov
aad
mov
enter
and
mov
dec
das
mov
mov
outs
or
or
mov
pop
or
imul
(bad)
(bad)
(bad)
mov
ins
fisubr
or
sub
ret
mov
(bad)
jg
push
das
xchg
mov
dec
das
ja
sbb
xor
mov
in
(bad)
(bad)
push
cmp
or
outs
call
arpl
jp
in
retf
ret
(bad)
mov
mov
cs
adc
ficom
fwait
das
and
mov
jmp
popa
mov
scas
push
dec
mov
fwait
(bad)
(bad)
call
ret
js
mov
jle
mov
test
imul
test
sub
stos
sub
aas
(bad)
jmp
mov
lods
lods
xchg
fdivr
push
leave
dec
mov
aas
retf
xchg
je
jg
or
js
scas
dec
cli
mov
sar
or
(bad)
dec
mov
mov
lea
ret
fld
out
pop
in
sub
(bad)
dec
sbb
sbb
mov
mov
add
mov
loop
(bad)
(bad)
(bad)
call
mov
pop
inc
and
adc
sub
imul
iret
out
or
sbb
xchg
inc
jne
(bad)
or
ins
ins
push
mov
or
pop
aaa
cli
jno
mov
das
mov
(bad)
(bad)
dec
push
test
mov
cmp
sahf
iret
sub
push
dec
sub
pop
das
sbb
sub
push
(bad)
(bad)
(bad)
(bad)
fisub
dec
xchg
sub
outs
xchg
mov
popf
or
xchg
es
(bad)
(bad)
(bad)
jmp
add
stos
xchg
lds
jno
int3
xchg
in
cmp
hlt
push
gs
popa
in
ret
(bad)
jmp
mov
loopne
or
mov
jbe
pop
call
sbb
adc
js
xchg
imul
stc
sbb
inc
imul
mov
mov
push
add
adc
(bad)
dec
cli
outs
clc
jg
push
xchg
push
adc
sbb
pop
sahf
xchg
mov
lock
mov
(bad)
sub
and
out
lods
(bad)
(bad)
(bad)
fild
push
sub
je
jmp
ins
data16
ror
sub
mov
stos
pop
sbb
sbb
sub
inc
lods
loop
sub
jg
adc
das
jp
adc
in
mov
pushf
xor
xchg
ja
xchg
jmp
adc
mov
call
push
push
cmp
mov
fldcw
aaa
inc
daa
pop
and
imul
pop
call
(bad)
sbb
fistp
jecxz
or
das
xchg
mov
call
add
fidiv
pop
sub
sbb
and
into
call
daa
in
(bad)
mov
cmp
dec
inc
xchg
pop
test
(bad)
mov
pushf
shl
cmps
enter
push
cmp
(bad)
fimul
sub
sub
dec
jp
retf
mov
jns
mov
xchg
(bad)
jmp
xor
cmp
or
jns
mov
(bad)
(bad)
(bad)
fadd
mov
inc
jmp
and
jns
and
push
mov
fisubr
sbb
sub
(bad)
(bad)
jmp
dec
lahf
imul
dec
xor
imul
mov
(bad)
fimul
stos
push
cmp
push
(bad)
dec
dec
xor
mov
mov
mov
fbstp
and
mov
sub
clc
test
ss
push
mov
cwde
mov
add
cmp
jmp
add
mov
dec
sub
outs
and
inc
test
mov
cs
or
ret
mov
mov
or
inc
daa
into
imul
(bad)
jmp
cmp
out
in
cdq
dec
cmp
mov
fdiv
or
push
repnz
sbb
push
pop
sbb
(bad)
xchg
(bad)
xchg
or
scas
cli
jmp
sub
lods
adc
js
jno
xor
ds
cli
sbb
sar
mov
ret
pop
cmp
or
pushf
call
or
jl
push
das
pushf
push
add
add
push
push
retf
push
push
clc
mov
sub
and
xchg
and
dec
enter
cwde
sub
add
inc
xchg
cmp
pop
hlt
sbb
retf
(bad)
(bad)
call
cld
cs
mov
mov
push
stos
mov
icebp
out
jp
sub
cli
add
sbb
mov
jmp
rol
jle
iret
in
std
dec
(bad)
(bad)
(bad)
jmp
sbb
inc
shl
sbb
leave
inc
sar
jecxz
loope
jo
(bad)
(bad)
dec
cmps
in
scas
lods
xchg
ins
cmps
int3
xchg
push
test
stos
pop
pushf
xchg
add
cmc
popf
sub
mov
(bad)
fcomip
add
mov
rcr
jb
shl
stos
pop
mov
scas
pop
jb
(bad)
(bad)
jmp
mov
cmp
fisub
mov
ja
mov
jmp
sbb
pop
call
mov
adc
push
adc
pop
sti
mov
std
shl
(bad)
(bad)
(bad)
call
dec
shl
jno
es
scas
scas
and
(bad)
(bad)
mov
mov
mov
cmps
(bad)
(bad)
jmp
cs
bound
sbb
fisttp
ret
sub
push
add
cld
in
clc
add
fistp
adc
push
xor
pop
sbb
mov
cwde
loopne
pop
iret
ins
and
call
pusha
(bad)
inc
pop
cmc
cli
cmp
and
mov
mov
fiadd
scas
mov
(bad)
call
repz
ds
push
out
lock
mov
jmp
icebp
dec
dec
sahf
push
dec
push
imul
sub
mov
nop
inc
pushf
adc
outs
cli
dec
aaa
imul
pushf
xor
jge
ficom
pop
dec
xchg
cmps
jle
pop
or
loope
and
ja
jle
mov
(bad)
(bad)
call
test
and
in
xor
jne
sbb
stc
popf
mov
mov
(bad)
(bad)
jns
iret
jno
call
sbb
jmp
in
mov
jle
shr
movs
mov
clc
mov
mov
dec
adc
or
and
xchg
int3
fdiv
sub
(bad)
(bad)
cmp
call
enter
cld
jmp
push
jle
sbb
shl
ret
loop
dec
lock
fistp
xchg
mov
inc
sub
(bad)
cmp
out
and
sar
mov
mov
pop
push
and
sub
pop
fmul
das
sar
and
add
cmp
and
in
xchg
mov
(bad)
cmp
out
mov
dec
jmp
outs
into
imul
hlt
call
and
adc
cmp
lahf
sub
xchg
test
call
jl
jl
cmp
jns
(bad)
fstp
nop
fcom
into
fwait
push
mov
aad
cmc
jle
leave
cdq
pop
retf
sbb
jbe
ins
or
mov
ins
mov
add
lods
bound
push
stos
loop
inc
xchg
data16
leave
ja
jmp
pop
(bad)
(bad)
(bad)
jmp
and
cli
loope
pop
adc
iret
pop
sbb
psllw
out
add
repz
ret
push
mov
xor
push
sbb
push
xor
repz
mov
mov
sbb
(bad)
(bad)
fisttp
cli
outs
mov
imul
js
cmp
or
stc
or
(bad)
inc
scas
in
sub
ins
adc
sub
out
retf
cli
ret
xor
mov
and
jg
(bad)
jmp
sti
push
outs
push
sub
mov
out
(bad)
das
pop
icebp
outs
or
and
push
and
(bad)
fwait
push
(bad)
mov
and
xchg
adc
outs
loop
cmp
iret
inc
mov
pop
pop
cs
dec
mov
inc
out
imul
and
dec
mov
jp
and
mov
jnp
sub
out
and
rcl
mov
pop
and
mov
push
push
cli
(bad)
sub
(bad)
dec
jp
aad
bound
push
cli
mov
adc
test
cmp
mov
(bad)
(bad)
(bad)
cmp
js
sub
into
call
inc
push
imul
ror
bound
pop
inc
fisubr
xor
jmp
jp
jle
icebp
stos
xchg
je
std
(bad)
aaa
cld
or
jge
retf
jno
add
mov
pop
cmp
cli
mov
mov
(bad)
(bad)
call
outs
lock
into
or
mov
pop
stos
cmps
adc
add
or
mov
stos
div
into
jecxz
hlt
jmp
bnd
into
cs
bound
pop
(bad)
call
dec
cwde
jl
out
aas
mov
sub
pushf
(bad)
(bad)
(bad)
push
push
aaa
retf
ret
aas
jmp
cs
cs
or
outs
out
(bad)
jmp
pop
cmp
push
or
jnp
in
vpshufhw
(bad)
dec
jg
call
sbb
cmp
cmp
retf
call
stos
sub
fisttp
push
adc
jne
push
or
adc
inc
pop
push
or
push
push
mov
or
cmp
(bad)
cmp
shr
cs
ja
in
sub
daa
cld
cmps
xchg
inc
loop
xor
adc
pop
sahf
add
or
push
mov
xchg
(bad)
fcomip
inc
repz
mov
xor
js
cli
adc
add
lock
mov
dec
in
loope
and
cld
jmp
xor
add
add
dec
sets
(bad)
(bad)
dec
(bad)
jmp
loope
stos
hlt
popa
sub
imul
arpl
add
(bad)
(bad)
(bad)
mov
fdivr
fs
mov
jmp
cmp
(bad)
call
cmp
cld
mov
jnp
je
push
mov
mov
out
fucomi
test
stos
mov
loopne
pop
lea
popa
dec
icebp
call
add
ficom
lea
lea
shr
dec
in
(bad)
fisttp
lods
or
push
scas
sub
push
dec
(bad)
icebp
cmp
call
test
retf
mov
jmp
out
fisub
jmp
pop
in
mov
(bad)
(bad)
push
iret
xchg
add
xchg
stos
cmp
and
jno
cli
or
fiadd
cmp
jmp
test
cld
aad
push
sbb
xor
movs
iret
int
ja
push
in
(bad)
(bad)
push
imul
jb
mov
adc
call
pop
stc
mul
(bad)
into
loope
in
inc
gs
(bad)
jg
cmc
cmp
outs
fiadd
push
push
pusha
outs
sub
mov
(bad)
(bad)
jmp
push
xor
imul
xchg
sub
xchg
pushf
stc
popa
aas
push
jg
hlt
(bad)
inc
and
loop
pusha
inc
movs
mov
movs
cmp
push
stc
cli
(bad)
out
xchg
(bad)
dec
inc
int
iret
hlt
fwait
fwait
mov
stos
lea
das
test
lods
call
push
cmp
sti
pop
cmp
push
movs
iret
dec
popa
test
sbb
scas
push
(bad)
jg
rcr
jmp
test
lea
cmps
xchg
stos
mov
in
in
pop
dec
ins
mov
inc
push
int3
sub
sar
jmp
jmp
stos
out
mov
dec
mov
ins
(bad)
iret
pop
in
xor
fwait
ss
sub
push
enter
stos
ret
test
xchg
sahf
push
mov
test
mov
imul
xor
pop
hlt
les
popa
in
in
out
shl
pop
cmp
mov
push
push
lock
or
add
pop
outs
fidivr
imul
jmp
mov
out
or
mov
(bad)
dec
retf
or
sub
mov
lea
mov
(bad)
push
and
mov
scas
sub
xchg
loop
pop
add
mov
clc
push
mov
sub
in
test
xchg
jno
stos
pop
loopne
sub
out
adc
loopne
addr16
xchg
push
movs
loopne
cmps
or
lods
test
add
sar
mov
fimul
jle
xor
add
dec
mov
jl
jecxz
mov
mov
sub
sub
fistp
loopne
xchg
imul
call
mov
call
repnz
js
test
idiv
scas
mov
push
mov
add
inc
in
test
call
sbb
push
jp
das
xor
push
lahf
iret
aad
dec
xchg
fbstp
mov
mov
stos
sar
push
push
sahf
out
or
stos
mov
cmp
jp
rcl
and
add
xchg
jbe
in
scas
clc
outs
mov
jle
mov
pop
scas
aad
xor
mul
in
add
clc
call
das
pop
pop
lea
(bad)
(bad)
(bad)
mov
xor
std
xor
add
push
mov
inc
xchg
(bad)
(bad)
inc
std
sbb
push
jo
shr
sub
inc
mul
or
or
hlt
or
(bad)
jmp
push
dec
call
adc
test
cs
mov
pop
retf
push
mov
sahf
inc
stos
inc
repz
push
imul
jae
das
clc
inc
push
mov
and
clc
pop
add
dec
mov
(bad)
(bad)
jmp
push
push
in
mov
mov
hlt
mov
mov
jle
ds
mov
(bad)
(bad)
jmp
jle
mov
pop
xchg
or
fisttp
movs
sbb
(bad)
(bad)
jmp
mov
cmp
mov
popf
jle
push
(bad)
inc
xchg
leave
stos
frstor
mov
test
push
(bad)
outs
movs
mov
adc
(bad)
(bad)
jmp
retf
vmovss
sub
xor
xor
mov
pop
or
ins
test
mov
lods
cmp
movs
dec
imul
or
(bad)
jg
dec
fwait
mov
push
adc
scas
(bad)
sbb
adc
mov
cwde
mov
inc
sar
ins
(bad)
clc
xchg
daa
mov
(bad)
call
shl
push
stos
in
addr16
lods
and
jb
gs
aaa
pop
icebp
jmp
std
push
sar
stos
neg
pushf
push
dec
jmp
scas
(bad)
(bad)
(bad)
(bad)
jge
mov
iret
mov
pop
es
and
mov
mov
addr16
std
(bad)
(bad)
fcomp
or
mov
xchg
pusha
je
cmp
aad
xchg
push
mov
jg
(bad)
call
es
je
popa
js
jmp
and
jnp
into
dec
inc
adc
(bad)
(bad)
cmp
call
mov
cdq
test
in
pop
and
jmp
test
jmp
sub
xor
or
ret
retf
(bad)
out
inc
shl
sub
dec
sbb
xchg
(bad)
iret
loop
pushf
clc
(bad)
xlat
clc
ins
adc
jp
mov
arpl
dec
xor
setb
lahf
(bad)
jmp
es
out
dec
sub
sbb
fimul
mov
jmp
push
cmp
mov
shl
push
or
stos
jno
call
mov
ret
enter
ficomp
(bad)
call
jb
dec
daa
ds
sub
sbb
rcr
dec
xchg
out
fisubr
mov
(bad)
push
test
sub
xchg
adc
call
mov
xor
js
cli
(bad)
(bad)
push
inc
data16
sub
shr
mov
and
xor
jle
ds
(bad)
push
shl
dec
fwait
cmp
icebp
or
push
int3
xchg
mov
lods
jle
sub
daa
jmp
(bad)
jg
loop
shl
mov
xor
out
push
jno
dec
lods
dec
daa
mov
sub
dec
imul
and
cmp
mov
mov
das
push
fsubr
inc
add
ins
pushf
int3
jmp
(bad)
(bad)
mov
scas
xchg
pushw
les
js
(bad)
lahf
adc
sub
sbb
stc
dec
test
sub
pusha
jmp
call
lods
(bad)
(bad)
(bad)
jmp
in
out
jp
mov
in
mov
mov
add
adc
jmp
sbb
jp
jp
dec
(bad)
inc
cld
add
sbb
push
sub
mov
jmp
cs
(bad)
out
add
dec
pop
ds
outs
jp
(bad)
dec
pop
lods
mov
jl
and
repnz
out
outs
cli
cs
dec
call
test
loope
pop
pushf
les
sub
bound
adc
dec
cld
call
cmp
sub
sbb
xchg
cmc
push
cmc
(bad)
call
jbe
jle
in
aam
je
xchg
imul
adc
test
dec
fwait
das
aam
loop
out
hlt
enter
(bad)
mov
mov
mov
push
call
jle
retf
fcomi
ins
mov
sti
jmp
sar
shl
sbb
pop
mov
mov
sar
rcr
retf
adc
push
xchg
in
rcl
cmp
and
mov
pop
movs
or
outs
mov
mov
jecxz
sub
xchg
(bad)
daa
ror
jle
pop
or
push
and
bound
ret
(bad)
(bad)
inc
xchg
cld
cmp
js
lahf
das
pop
outs
imul
repnz
mov
repz
(bad)
(bad)
(bad)
mov
into
out
add
add
jnp
mov
mov
in
mov
dec
(bad)
push
ins
movs
sub
shl
(bad)
(bad)
leave
sub
aad
jno
inc
scas
add
mov
hlt
(bad)
inc
es
xor
mov
push
push
movs
inc
mov
pop
xchg
(bad)
jmp
repz
test
inc
mov
add
fild
cmp
mov
sub
scas
aas
and
(bad)
jmp
aam
pushf
scas
stos
cwde
imul
sbb
call
js
fmul
dec
jge
ror
inc
sub
fwait
push
sahf
(bad)
xchg
(bad)
(bad)
jmp
test
pop
mov
in
xchg
mov
int3
pop
jecxz
(bad)
cli
sub
pop
outs
inc
sbb
clc
(bad)
(bad)
(bad)
fcmovbe
mov
mov
fisttp
pop
ins
or
dec
pop
or
enter
or
jge
mov
sahf
mov
push
xchg
(bad)
loop
xor
pop
rol
push
in
sbb
lahf
test
inc
cld
xlat
mov
call
cmp
daa
push
mov
or
adc
loop
cmp
sub
cli
mov
cmp
adc
jns
popf
or
inc
jmp
(bad)
(bad)
(bad)
cmp
sbb
fisttp
test
xchg
lock
pop
push
clc
inc
(bad)
out
and
pop
loop
sub
adc
xchg
dec
(bad)
(bad)
(bad)
inc
retf
inc
mov
mov
outs
jmp
xor
jne
mov
cmc
pop
and
mov
push
jmp
mov
fwait
loope
add
push
in
cmp
sbb
outs
mov
jg
pop
fdiv
pushf
pause
or
dec
pop
(bad)
std
mov
scas
pushf
jg
cs
js
mov
stos
das
add
(bad)
(bad)
push
mov
push
fmul
jo
mov
mov
mov
mov
xor
pop
cmp
xor
jle
sub
jmp
adc
jl
adc
std
mov
sub
add
inc
xor
mov
sbb
(bad)
(bad)
jmp
mov
or
mov
sub
shl
dec
dec
sbb
sbb
jg
mov
mov
retf
outs
or
scas
add
xlat
cmp
test
pop
push
jmp
or
cmp
cmp
mov
fisttp
xchg
dec
xchg
sub
mov
jecxz
(bad)
jmp
shr
xor
gs
call
cld
sbb
into
xchg
xor
mov
cdq
jns
lahf
(bad)
(bad)
scas
mov
je
sahf
ret
dec
(bad)
loop
adc
adc
lahf
mov
(bad)
sbb
mov
or
retf
les
mov
call
mov
cmps
mov
cmp
shl
dec
push
outs
retf
in
or
push
xor
ins
fst
ds
fcomip
outs
call
jmp
mov
mov
stos
(bad)
aad
(bad)
jmp
xor
iret
sar
jo
aaa
pop
push
jmp
push
ins
(bad)
(bad)
push
sub
into
mov
jge
sub
xlat
sbb
inc
iret
add
leave
sahf
push
(bad)
mov
in
sub
dec
mov
fdivp
call
dec
sub
xchg
or
fsubr
in
call
cmc
pop
jmp
dec
adc
scas
in
pop
fistp
mov
in
imul
mov
push
add
or
push
movs
jg
out
jmp
popf
cmp
cwde
push
mov
pop
ror
loop
mov
add
leave
into
str
and
imul
xor
or
jp
gs
jmp
movs
iret
jp
outs
jp
loop
jl
loop
mov
outs
jp
mov
mov
push
or
push
mov
dec
xor
pop
in
in
mov
or
lods
std
jle
fucomip
push
in
(bad)
in
mov
or
xor
xchg
sti
sub
jns
adc
lock
mov
add
data16
int3
pushf
cdq
(bad)
or
sub
dec
popf
xor
jg
outs
(bad)
inc
ins
ss
ins
ins
xchg
cmps
dec
push
(bad)
jmp
pushf
xor
mov
xor
mov
pop
cmp
clc
mov
imul
outs
mov
jmp
clc
or
jmp
sbb
pop
enter
ss
xlat
adc
xor
add
lds
xchg
cwde
or
lahf
(bad)
jae
and
push
or
push
sbb
jp
mov
mov
test
clc
push
push
ret
call
and
or
call
mov
cmp
jecxz
adc
cmp
ret
and
push
push
cs
bound
and
sub
xor
dec
mov
imul
push
mov
cmc
add
inc
stc
test
outs
add
hlt
and
pop
(bad)
out
clc
test
lahf
ret
lock
jmp
mov
sar
(bad)
(bad)
jmp
cmps
jge
mov
xchg
or
mov
call
pop
or
sbb
fcomp
push
ret
sub
sbb
lods
pop
out
mov
retf
mov
fiadd
(bad)
(bad)
fnstenv
retf
scas
cmps
adc
outs
add
aad
(bad)
cld
test
cli
xor
pop
mov
jmp
movs
push
cs
iret
xchg
and
mov
shl
(bad)
(bad)
(bad)
mov
add
sbb
jp
jmp
cs
loopne
fistp
outs
add
and
mov
jle
or
imul
sar
or
and
pop
push
jecxz
inc
aaa
retf
rol
mov
sub
fist
sbb
mov
std
mov
cmps
lods
into
mov
popf
cmps
jo
or
adc
(bad)
(bad)
(bad)
inc
cld
mov
mov
movs
sub
mov
cmp
fisub
jmp
dec
mov
xlat
cmp
or
rcl
mov
mov
push
fidiv
shr
retf
or
call
mov
std
dec
sti
mov
mov
jg
and
jge
sub
inc
pusha
sahf
int
(bad)
mov
adc
push
stc
cmp
rcr
in
add
jle
bound
fistp
and
mov
mov
push
clc
push
push
sbb
data16
scas
xchg
cmp
call
ret
lahf
push
arpl
xchg
pop
dec
nop
mov
(bad)
sbb
ins
pusha
pop
pop
add
aam
lds
pop
sbb
ins
scas
or
(bad)
(bad)
push
mov
sahf
(bad)
and
cs
mov
scas
adc
mov
dec
(bad)
(bad)
mov
repz
jnp
xor
adc
das
push
mov
cs
sbb
(bad)
push
cmps
jg
neg
xor
push
sbb
ja
lods
mov
jmp
cmp
sbb
xor
arpl
sti
ret
lods
(bad)
mov
call
enter
jmp
enter
push
mov
int3
sub
sbb
pop
call
mov
mov
icebp
adc
mov
sub
outs
clc
push
dec
sbb
adc
cmps
scas
lahf
in
retf
test
lea
sbb
sub
dec
mov
add
or
(bad)
(bad)
(bad)
jmp
mov
xor
ficom
inc
mov
sub
in
test
mov
inc
push
es
pop
pop
xchg
mov
xchg
daa
xor
out
mov
push
(bad)
mov
cli
into
sub
(bad)
fnstenv
call
dec
ja
repz
adc
jb
fistp
(bad)
(bad)
(bad)
inc
mov
addr16
ins
aad
mov
adc
data16
aas
lods
(bad)
pop
and
(bad)
jmp
loope
imul
test
js
fmul
sub
int3
dec
pop
mov
sub
outs
push
in
push
frstor
outs
xchg
cli
movs
cs
clc
in
das
btc
std
fwait
nop
iret
js
(bad)
(bad)
out
cli
jmp
mov
enter
aad
std
ss
sbb
and
mov
test
fidivr
inc
mov
adc
outs
pushf
xchg
sub
inc
call
sub
(bad)
(bad)
(bad)
(bad)
cmp
test
fdiv
jecxz
das
cmp
push
xchg
push
out
xor
xor
idiv
(bad)
mov
enter
out
cmp
sub
(bad)
stc
retf
mov
sbb
stos
and
int3
cs
jmp
repnz
(bad)
(bad)
jmp
gs
(bad)
(bad)
shl
and
scas
call
scas
dec
out
jnp
(bad)
(bad)
mov
aas
outs
xchg
cli
test
aad
xchg
jge
daa
or
bound
adc
das
clc
pop
cmp
push
push
xchg
dec
loopne
scas
pushf
dec
pop
xor
cmp
mov
lock
ss
fmul
mov
push
in
add
not
xchg
sub
and
cmp
push
aam
out
and
push
sbb
aam
inc
call
(bad)
fnstsw
xchg
lahf
or
retf
hlt
jmp
pop
das
cli
ins
jp
fcmovnb
pop
add
and
or
in
rcr
dec
or
enter
pop
sbb
sub
jmp
jmp
test
pop
lods
and
int3
adc
cmp
frstor
and
mov
cmp
or
cmp
sub
and
lahf
cmovnp
pop
cmp
(bad)
(bad)
mov
outs
xor
(bad)
and
test
hlt
sbb
es
out
mov
ficom
dec
pop
call
pop
cli
sbb
aad
movs
mov
loopne
xor
mov
(bad)
jmp
mov
in
adc
sahf
push
mov
cmp
rol
mov
(bad)
call
iret
cwde
cmp
sub
jge
fwait
or
fwait
ret
jle
retf
bound
ja
in
pop
outs
sub
adc
imul
jbe
lock
call
xchg
call
push
das
jb
fwait
fwait
xchg
stc
sub
mov
(bad)
cmp
mov
adc
push
lahf
(bad)
scas
call
aas
cmp
call
mov
call
(bad)
dec
imul
or
mov
lods
repz
test
and
ins
rcr
sub
(bad)
(bad)
mov
in
pop
scas
lods
shl
sti
xor
loop
jae
jle
or
stos
cmps
adc
(bad)
(bad)
jmp
imul
sbb
(bad)
nop
push
xor
push
fldenv
jmp
mov
add
mov
cld
call
xor
mov
pushf
mov
sbb
jg
add
inc
cmp
movs
jmp
(bad)
jmp
lahf
sbb
pop
sbb
sub
cmps
fild
push
(bad)
(bad)
(bad)
inc
xchg
mov
lahf
sahf
clc
(bad)
fbld
scas
mov
shr
(bad)
(bad)
push
sub
aas
call
push
je
clc
mov
shl
(bad)
out
nop
test
or
sbb
sbb
dec
add
call
xor
std
xchg
or
pop
and
cmp
dec
movs
adc
push
(bad)
mov
out
sbb
mov
push
in
push
xor
dec
in
cld
mov
loopne
adc
std
out
adc
ja
lods
push
(bad)
(bad)
(bad)
jmp
push
sbb
clc
ret
lds
mov
out
sub
mov
jmp
bnd
(bad)
dec
sub
sbb
mov
daa
stos
pop
cmp
(bad)
(bad)
(bad)
cmp
icebp
cld
jne
push
int
loopne
aaa
adc
call
mov
leave
(bad)
and
pop
call
cli
mov
leave
popa
mov
xor
ret
addr16
call
std
push
xlat
adc
jp
lods
mov
sub
sub
cmp
mov
push
or
mov
dec
cmp
stos
enter
loopne
sar
pop
(bad)
(bad)
(bad)
push
movs
cmp
sub
pop
movs
jecxz
jp
arpl
retf
fwait
test
sub
lods
pop
or
cmp
ins
cmp
mov
fistp
sbb
pop
movs
lock
test
mov
push
dec
sahf
mov
das
sar
xchg
mov
or
adc
push
inc
je
stc
mov
pop
sub
push
mov
inc
sbb
(bad)
(bad)
(bad)
push
dec
and
mov
in
cs
cld
sub
cmps
xchg
sbb
or
movs
mov
fcomp
add
(bad)
fidivr
lahf
int3
iret
lahf
mov
cld
outs
push
xor
into
dec
imul
arpl
enter
xor
scas
cli
dec
sub
pop
pop
cld
out
xchg
popa
stos
add
mov
mov
(bad)
jnp
mov
push
adc
mov
loope
adc
add
imul
pop
mov
fild
call
rep
or
jno
mov
jns
retf
in
xcrypt-cfb
cmps
and
(bad)
jmp
xchg
in
imul
stos
xor
sub
or
and
nop
mov
add
sub
sub
jge
rcl
jmp
or
xchg
jge
out
xchg
scas
retf
call
(bad)
(bad)
fild
(bad)
pop
pop
add
adc
pop
xchg
cmc
sub
jnp
sub
cdq
sbb
sub
mov
aaa
or
mov
je
popa
(bad)
(bad)
in
(bad)
mov
retf
cmp
leave
or
jns
mov
stos
and
add
push
pop
shr
(bad)
(bad)
call
sub
pop
mov
sbb
js
push
push
xchg
cmp
mov
push
sbb
arpl
(bad)
(bad)
(bad)
fisttp
xchg
nop
mov
xchg
mov
shl
push
or
fdivp
dec
and
sub
mov
and
sbb
into
aad
mov
fwait
mov
mov
(bad)
inc
mov
dec
jnp
loop
cld
dec
test
cmps
push
mov
mov
add
dec
xor
es
xor
inc
jae
sbb
(bad)
fistp
inc
cwde
pop
test
hlt
mov
cmps
shr
xchg
jg
or
(bad)
stc
mov
je
mov
lea
int3
jge
shl
test
arpl
mov
rol
gs
scas
push
sub
add
sub
pop
jmp
jmp
icebp
push
or
xor
sbb
adc
jmp
das
mov
retf
cmc
sti
cli
repz
(bad)
(bad)
(bad)
fisubr
mov
cwde
into
jle
xor
sar
mov
mov
xchg
mov
(bad)
(bad)
jmp
sbb
xor
lods
arpl
sub
bound
sbb
push
adc
jmp
xchg
push
ret
mov
imul
inc
cld
pushf
and
mov
aaa
jb
lea
in
cmp
(bad)
sbb
clc
mov
es
pop
sbb
call
rol
jmp
pop
in
movs
dec
in
dec
add
(bad)
(bad)
mov
cmp
push
ret
sub
shrd
icebp
mov
xchg
sub
(bad)
(bad)
(bad)
jmp
cmp
xchg
sti
dec
test
inc
popf
mov
or
xlat
movs
push
xchg
push
push
call
dec
test
mov
jmp
scas
aad
push
data16
mov
xchg
adc
ror
ret
dec
data16
mov
pop
loop
iret
ss
jle
das
clc
fwait
mov
push
cli
imul
sbb
and
aaa
mov
dec
cmp
fs
repz
push
and
call
fsubr
xchg
push
or
fcomp
xchg
out
mov
aad
stos
jmp
xor
or
call
fistp
pusha
imul
and
jmp
movs
xchg
sar
push
mov
sahf
sbb
sub
jle
cli
(bad)
(bad)
jg
ins
popa
pop
retf
int3
mov
ret
enter
test
cs
ret
mov
mov
sti
mov
les
mov
(bad)
jle
mov
sub
or
cmps
clc
mov
popa
adc
stc
imul
loopne
jmp
fisub
pop
bound
retf
cmp
sahf
sub
push
aaa
or
jns
and
fwait
cmp
imul
mov
retf
fst
cmps
sub
test
test
mov
das
js
jg
(bad)
in
pop
sub
sub
mov
xor
push
(bad)
sub
push
push
stc
ret
out
mov
rcr
(bad)
(bad)
jmp
imul
mov
sbb
iret
pop
mov
scas
lods
mov
stos
sar
test
scas
fbld
test
stos
fucomip
enter
es
loopne
sti
(bad)
jle
cmp
cmps
xor
dec
mov
jns
dec
pop
jmp
call
or
repz
fwait
ja
mov
pushf
movs
test
mov
mov
(bad)
xchg
or
sbb
pop
sub
les
push
test
jl
xchg
daa
dec
cld
dec
inc
pop
fidiv
jbe
mov
arpl
and
sbb
stos
or
(bad)
jmp
sub
mov
or
ins
mov
push
sar
mov
mov
(bad)
(bad)
mov
mov
dec
(bad)
retf
shr
out
pusha
addr16
call
jmp
pop
fsubr
int3
sbb
frstor
jle
dec
and
(bad)
(bad)
(bad)
jnp
xor
das
mov
ficomp
mov
adc
mov
icebp
jg
add
mov
mov
imul
movs
jnp
lock
retf
bound
in
ds
out
nop
icebp
jmp
adc
leave
xor
pop
push
imul
scas
(bad)
js
dec
xchg
jmp
pop
xor
add
call
push
inc
mov
jmp
aas
or
cmp
mov
jb
test
(bad)
retf
pop
mov
mov
inc
cmp
add
fsubp
sahf
dec
sub
pop
cmp
gs
ret
dec
repnz
mov
mov
imul
scas
(bad)
mov
test
icebp
out
repnz
sbb
adc
pusha
lahf
aam
mov
sar
mov
fs
mov
fadd
inc
or
loopne
(bad)
jmp
xchg
retf
cmp
out
in
loopne
adc
jmp
test
lock
std
jmp
add
cmps
push
mov
ins
loopne
inc
add
(bad)
(bad)
(bad)
mov
mov
xchg
jmp
push
sbb
add
inc
loopne
cmp
jecxz
xor
bound
loope
enter
mov
add
sar
push
mov
(bad)
(bad)
inc
sub
stos
xchg
sbb
or
xor
pusha
push
loop
adc
mov
(bad)
(bad)
(bad)
jmp
sbb
mov
inc
sbb
pop
clc
sbb
int3
mov
push
pop
fisttp
xor
pusha
cmc
jg
sbb
xor
(bad)
(bad)
jmp
jp
es
shl
mov
movs
or
iret
dec
clts
fmul
mov
nop
mov
xor
scas
mov
movs
inc
dec
inc
cli
mov
lahf
adc
and
dec
mov
mov
xchg
fmul
cmp
das
sahf
or
das
in
sub
sbb
sub
clc
pusha
fidivr
cdq
inc
or
call
sub
pop
fucom
mov
inc
lock
fisttp
test
or
mov
adc
and
mov
out
outs
(bad)
fmul
call
xchg
scas
mov
mov
clc
dec
cmp
sub
out
dec
lods
fisubr
dec
xor
cwde
(bad)
(bad)
(bad)
jmp
cmc
stos
into
pop
pop
lods
ds
mov
sbb
push
clc
shr
mov
sub
add
(bad)
in
jle
sahf
dec
or
pop
cmp
sub
mov
pop
(bad)
jg
xor
push
data16
aaa
jmp
mov
(bad)
jmp
jmp
icebp
fidiv
or
fsub
ret
adc
scas
jmp
iret
jnp
mov
cli
pop
pop
cld
retf
gs
dec
mov
mov
adc
stos
stos
nop
ret
(bad)
dec
popf
add
aaa
scas
test
sub
sub
cmp
bnd
scas
xchg
jmp
cli
test
ret
or
lods
mov
call
cmp
pop
jb
or
sub
lock
repnz
(bad)
jmp
ss
add
(bad)
pusha
push
das
mov
ins
test
or
(bad)
mov
ins
jnp
stos
or
adc
xchg
add
push
jecxz
jle
lea
(bad)
(bad)
jmp
(bad)
mov
mov
das
ins
or
xlat
mov
adc
lock
(bad)
(bad)
(bad)
ds
fwait
cmp
retf
mov
movs
cmp
fs
mov
int
iret
add
(bad)
(bad)
(bad)
jmp
cmps
add
cmp
xchg
mov
inc
into
stc
mov
jmpw
jne
mov
jne
sar
(bad)
(bad)
(bad)
fldenv
mov
dec
in
imul
dec
sub
std
adc
stos
cmps
mov
js
sub
sbb
and
js
jno
fst
inc
clc
adc
(bad)
jmp
and
repnz
mov
xchg
lods
arpl
mov
outs
clc
popf
je
int3
pop
out
out
(bad)
mov
mov
mov
cld
lods
sub
stos
lods
jl
out
aam
cmp
push
not
mov
cmp
in
(bad)
push
pop
pop
or
push
mov
test
sbb
jcxz
mov
jmp
pop
add
mov
mov
push
mov
(bad)
(bad)
fstp
cmp
mov
cmp
inc
mov
xor
mov
cmc
inc
dec
std
das
xchg
or
in
fcomp
pusha
movs
sub
enter
jl
cld
std
add
dec
xor
(bad)
js
loop
and
inc
retf
mov
iret
jb
sbb
or
dec
out
jmp
nop
clc
or
jl
enter
xchg
ins
outs
push
loopne
(bad)
call
mov
loope
mov
fsub
dec
stos
xor
idiv
call
sub
lods
call
mov
xor
(bad)
(bad)
(bad)
(bad)
fxch
jecxz
js
or
fstp
pop
xchg
repnz
scas
mov
jns
ss
mov
cmps
jp
adc
dec
cs
sub
dec
ss
pop
and
movs
pop
rol
sbb
pop
(bad)
(bad)
inc
lods
jb
sub
imul
xlat
test
sub
mov
loope
inc
rcr
cmp
dec
dec
dec
sbb
add
push
sbb
pop
adc
xchg
sub
call
sbb
sub
ror
xor
jg
cdq
es
imul
sbb
add
mov
and
mov
ja
cmp
and
or
out
mov
sub
das
or
shr
stos
out
cmp
adc
fnstenv
or
aad
hlt
dec
retf
call
gs
push
xor
sbb
das
push
cmps
dec
inc
lods
jbe
inc
pop
pop
jp
loop
push
(bad)
jmp
div
mov
mov
push
sbb
out
or
inc
push
fisttp
and
(bad)
dec
mov
retf
call
push
sub
sub
iret
pop
cli
jg
mov
cmc
xor
fcomip
dec
pusha
and
nop
into
das
out
test
inc
test
stos
dec
mov
fimul
sbb
adc
test
jle
mov
cli
mov
jl
bnd
sub
jbe
sbb
std
aaa
push
shr
and
push
mov
jmp
pop
inc
adc
pop
or
adc
int
cmp
clc
scas
clc
mov
mov
out
pop
cmp
xor
pop
pop
or
test
bound
cmps
add
sub
push
sub
dec
jle
push
sub
mov
add
sub
(bad)
dec
cmp
dec
sub
daa
loop
das
popf
pop
cli
or
sbb
inc
hlt
pop
jb
or
icebp
or
ja
rol
sbb
sub
outs
sbb
sar
and
(bad)
dec
cmp
fwait
mov
js
cmp
(bad)
call
pop
stos
cli
test
es
and
int
(bad)
(bad)
(bad)
fist
mov
add
add
sbb
add
add
jp
mov
out
pop
jns
mov
inc
dec
pop
sbb
int3
lahf
stc
xchg
jle
xor
lahf
xchg
jnp
and
jmp
bound
cld
cli
sti
cmp
pop
fdiv
inc
mov
test
imul
cmps
xor
in
ds
adc
dec
out
enter
sar
cmc
xor
mov
dec
int3
sbb
pop
enter
and
(bad)
inc
retf
xor
or
cld
ja
(bad)
imul
or
adc
mov
mov
dec
cmp
mov
dec
rcl
(bad)
outs
push
daa
fsub
mov
add
add
xor
inc
xchg
xchg
(bad)
dec
xchg
je
fiadd
fcmovne
aam
xchg
(bad)
(bad)
dec
mov
and
mov
outs
jmp
jg
jp
cmc
loop
push
stos
push
cmp
fs
push
pop
aad
push
dec
retf
out
mov
or
or
mov
mov
lock
adc
js
sub
or
lea
mov
jmp
(bad)
(bad)
(bad)
jmp
mov
push
das
jmp
push
mov
dec
cmp
in
clc
mov
(bad)
(bad)
(bad)
call
clc
pop
cmp
imul
inc
mov
imul
sub
(bad)
(bad)
(bad)
jnp
cli
ins
call
push
fild
idiv
ret
adc
das
cli
dec
and
pusha
pop
scas
adc
jno
mov
inc
sub
jbe
adc
sub
jnp
scas
scas
fisub
jp
jle
lods
cmp
cld
pop
mov
retf
mov
xchg
(bad)
(bad)
fbld
push
jmp
shl
xchg
lock
pop
or
std
xor
add
scas
sbb
rcl
repnz
pop
xchg
(bad)
in
sbb
jae
push
jne
(bad)
(bad)
(bad)
(bad)
(bad)
clc
sbb
ins
cdq
xor
enter
jae
mov
scas
js
fcomp
lods
sub
(bad)
leave
cld
or
out
mov
sub
call
pop
in
cmp
shl
xchg
(bad)
ins
hlt
loopne
add
ds
xor
test
loop
call
sub
outs
pop
cmp
pop
add
es
ret
outs
sub
mov
(bad)
(bad)
(bad)
clc
sub
aam
mov
jno
mov
mov
jp
mov
and
push
pop
ret
rol
or
int
jp
(bad)
mov
scas
xchg
sub
or
xchg
sub
xchg
jnp
inc
jecxz
adc
pushf
(bad)
dec
mov
cmp
inc
pop
pop
mov
jecxz
sub
jo
sub
jg
mov
sbb
sbb
cmps
(bad)
adc
sub
call
outs
mov
repnz
push
je
cmp
(bad)
lods
call
clc
(bad)
call
imul
jmp
cdq
ins
jmp
sub
ins
outs
(bad)
(bad)
inc
int3
pop
xor
sub
icebp
out
mov
(bad)
xlat
adc
push
ins
or
dec
std
fucomip
xchg
xor
dec
pop
outs
jb
fwait
out
xor
adc
jge
scas
mov
test
mov
inc
dec
pop
mov
mov
imul
mov
push
adc
adc
(bad)
fild
imul
or
(bad)
push
call
neg
(bad)
sub
shl
mov
pop
sub
ret
mov
mov
fwait
es
mov
cmps
loop
push
(bad)
fild
lods
outs
nop
mov
push
mov
(bad)
(bad)
(bad)
push
sbb
clc
pop
aam
or
jo
call
call
jecxz
sub
sbb
push
(bad)
(bad)
call
lods
pusha
add
inc
std
(bad)
push
mov
scas
out
and
cld
(bad)
dec
ins
js
xchg
cmps
inc
mov
out
xlat
push
call
pusha
addr16
mov
sub
loop
adc
loopne
xor
sub
dec
pop
retf
(bad)
cmp
mov
gs
out
call
pop
daa
(bad)
mov
mov
or
stos
xor
xor
sbb
cli
lods
mov
sub
(bad)
(bad)
call
sbb
add
addr16
jg
sub
rcr
cmps
ret
xchg
mov
mov
sar
sub
mov
mov
aaa
pop
es
loopne
dec
leave
(bad)
(bad)
jmp
push
pusha
xchg
out
(bad)
pop
inc
fnsave
push
mov
inc
add
cdq
gs
sub
jmp
inc
(bad)
dec
sbb
xchg
jmp
loopne
mov
jmp
addr16
pop
lods
cld
stc
stos
dec
icebp
loop
xchg
sti
int3
sub
pop
fistp
or
jp
xchg
dec
cmp
popf
xchg
(bad)
cmp
loope
or
adc
jp
jp
and
fs
(bad)
(bad)
(bad)
dec
das
mov
je
retf
sub
jge
mov
push
and
ds
sbb
pop
loopne
pop
pop
bnd
loope
push
cmp
pop
aam
jmp
jnp
mov
push
outs
pusha
sti
in
mov
popf
std
adc
(bad)
call
fstp
mov
xor
mov
outs
ret
inc
icebp
xor
ins
repnz
pop
jecxz
pop
sub
mov
mov
dec
jg
inc
std
(bad)
mov
outs
out
xchg
push
jp
pop
dec
jp
in
sti
and
lods
jbe
(bad)
(bad)
(bad)
fist
stc
fdivr
mov
int3
push
cmp
mov
imul
arpl
call
xor
scas
cwde
cwde
jg
mov
jmp
lahf
and
in
inc
pop
jae
sbb
(bad)
mov
or
mov
jl
cmp
mov
(bad)
(bad)
(bad)
out
(bad)
jmp
movs
mov
inc
and
stos
repnz
jle
or
scas
and
ss
rol
(bad)
mov
sub
dec
pop
jno
scas
inc
mov
in
or
push
and
(bad)
jecxz
xchg
jmp
xchg
mov
push
mov
add
xchg
jp
sub
jp
mov
(bad)
(bad)
call
mov
mov
stos
jmp
test
test
(bad)
mov
das
stos
sub
mov
jmp
dec
and
cwde
out
and
dec
loopne
in
popf
dec
in
mov
(bad)
(bad)
(bad)
fsubr
dec
stc
(bad)
push
add
out
enter
ins
sahf
ins
mov
lock
xchg
jmp
cwde
dec
jb
aaa
scas
push
sbb
mov
sti
mov
jg
dec
mov
jg
cwde
push
cmp
(bad)
(bad)
(bad)
call
cs
mov
mov
jmp
mov
pop
pop
loopne
add
pop
addr16
push
sub
pop
and
sldt
call
dec
scas
div
jecxz
in
stos
push
cld
pop
cwde
mov
add
ja
xchg
iret
mov
jmp
jb
push
iret
push
es
xchg
inc
and
adc
jmp
retf
jecxz
jecxz
jbe
mov
push
(bad)
iretw
fdivr
pop
jo
inc
cmp
out
xchg
test
pusha
or
xchg
add
or
mov
mov
data16
add
cmp
push
data16
les
jo
(bad)
mov
jle
sbb
inc
push
or
sbb
add
cmp
(bad)
(bad)
in
popf
ins
mov
dec
mov
sbb
stos
seto
loopne
dec
ds
(bad)
(bad)
fimul
sub
jp
mov
mov
sub
mov
xchg
jmp
pop
jmp
jo
jmp
dec
mov
dec
cs
xchg
stos
aad
pop
and
or
(bad)
dec
std
or
daa
ret
add
mov
add
call
push
les
push
xor
sub
out
pop
or
jbe
pop
sbb
jb
clc
retf
retf
mov
xchg
imul
(bad)
call
add
dec
adc
ins
or
push
push
clc
jo
(bad)
call
out
ds
ror
scas
mov
lods
mov
mov
pop
mov
jmp
push
adc
pop
sbb
movs
jmp
adc
pop
jmp
(bad)
(bad)
call
imul
rol
rcl
cmp
imul
std
jp
popf
inc
imul
js
pop
jbe
fsubrp
scas
push
add
iret
xchg
cmp
call
sub
jmp
imul
inc
xor
out
pop
retf
pop
jl
(bad)
jmp
not
sti
cmp
retf
or
mov
(bad)
jg
imul
adc
call
and
sub
aad
push
ds
(bad)
(bad)
jmp
push
and
mov
sbb
inc
mov
cmp
scas
mov
jmp
out
inc
pop
cld
push
rcr
test
and
lahf
out
jmp
ret
inc
test
xchg
stos
push
cdq
jp
inc
cmps
sub
das
fs
(bad)
jmp
push
lea
sbb
sub
cmp
jne
sbb
(bad)
dec
test
mov
xchg
mov
popa
xchg
dec
std
(bad)
(bad)
jmp
add
sub
mov
mov
retf
scas
xor
add
(bad)
loopne
lea
pushf
stos
mov
jb
mov
adc
(bad)
(bad)
(bad)
(bad)
mov
(bad)
fsub
out
mov
xchg
pop
ret
movs
xor
std
sbb
out
lods
cli
ss
pop
call
xchg
std
sbb
cdq
push
jge
arpl
imul
adc
cmp
mov
mov
(bad)
(bad)
(bad)
fisttp
jg
sub
and
xchg
mov
aaa
push
xchg
call
(bad)
call
loopne
std
dec
mov
lods
and
call
pop
jge
mov
lock
jmp
jno
add
sub
adc
jb
outs
adc
pop
cmp
push
sbb
dec
(bad)
dec
test
pop
mov
cmps
iret
mov
mov
(bad)
jg
xchg
jle
xchg
out
dec
or
stos
and
pop
sub
pop
fisub
scas
cmp
pop
repnz
test
cmp
std
push
ror
mov
push
cli
mov
rol
add
xchg
xor
retf
stos
sub
mov
int
(bad)
(bad)
(bad)
(bad)
popf
(bad)
scas
mov
sbb
mov
jmp
out
xor
(bad)
scas
scas
(bad)
jns
iret
test
(bad)
jg
(bad)
cmp
jb
pop
jb
stc
xchg
ret
sub
dec
enter
inc
and
(bad)
push
sub
push
icebp
pusha
or
stc
mov
(bad)
(bad)
inc
mov
aas
scas
and
mul
scas
mov
ret
sbb
clc
call
outs
ss
inc
sub
push
mov
pop
mov
sbb
inc
sbb
movs
pop
add
dec
push
adc
lahf
scas
pop
cld
in
bound
mov
xor
cmp
pop
loop
sub
xchg
(bad)
xchg
or
imul
jl
(bad)
jmp
add
js
pop
jmpw
stos
sbb
or
aad
hlt
cs
stos
mov
data16
mov
sub
push
cld
mov
mov
mov
fs
sbb
loope
adc
jecxz
dec
adc
and
pop
loop
or
sahf
lods
loopne
push
xor
xchg
(bad)
mov
or
mov
mov
push
js
and
push
jb
jmp
loope
mov
dec
mov
and
sub
ins
test
or
cmp
fist
cmps
retf
lods
adc
in
daa
(bad)
(bad)
(bad)
call
sahf
push
imul
or
imul
cmp
jp
cld
ins
xchg
in
mov
mov
stos
push
out
adc
pusha
pop
stos
(bad)
jmp
test
push
push
sub
adc
push
std
shl
in
(bad)
aaa
sbb
test
jg
mov
loopne
loope
les
push
jmp
into
fbstp
int
pop
push
test
aam
(bad)
xlat
inc
pusha
popf
dec
dec
popf
jmp
push
int
sbb
cdq
pop
pop
cdq
daa
cmp
call
int3
mov
and
shl
adc
bound
fcom
ins
cmp
cmp
dec
(bad)
loop
lock
(bad)
(bad)
jg
inc
adc
push
mov
fldenv
aas
or
mov
xchg
inc
mov
push
(bad)
dec
(bad)
pushf
and
mov
sahf
or
jmp
sbb
sbb
test
mov
fcom
pop
adc
push
aad
lock
je
in
jg
cwde
jae
imul
sub
jmp
xlat
movs
out
into
arpl
mov
in
sub
dec
add
jbe
cld
inc
outs
retf
cmp
push
or
fild
dec
adc
das
pusha
out
add
pop
lock
xchg
out
int3
das
call
jno
(bad)
mov
retf
cmps
and
(bad)
push
inc
loopne
das
data16
aas
fld
jge
cdq
cmp
loop
and
sbb
sub
in
jnp
shl
(bad)
jmp
sbb
cmp
cmp
sar
cwde
shl
in
and
inc
cmp
(bad)
(bad)
call
cmps
xor
in
mov
sti
pop
sub
imul
mov
cld
shr
sbb
pop
and
jmp
mov
jp
and
and
xlat
dec
add
nop
push
sbb
test
inc
call
scas
fbld
mov
cmp
clc
(bad)
jmp
test
sub
sub
pusha
(bad)
jge
xchg
sub
(bad)
call
xchg
mov
and
or
mov
push
(bad)
(bad)
(bad)
call
(bad)
test
add
mov
push
iret
arpl
add
dec
sbb
mov
mov
call
(bad)
in
shr
and
ss
popa
pushf
sub
cmp
js
add
adc
lods
imul
popf
mov
or
sar
xchg
ss
xchg
jl
sbb
and
sub
cs
pop
mov
mov
sbb
cmp
lahf
ret
and
popa
das
stc
daa
shl
test
call
push
cmp
outs
out
outs
jmp
(bad)
fbld
inc
(bad)
aad
outs
repz
or
push
fisubr
in
aam
sbb
jg
inc
push
fisubr
mov
test
loope
sub
out
es
mov
(bad)
push
not
call
out
push
dec
xor
mov
mov
push
sub
xor
mov
sub
push
popa
scas
ret
push
lds
inc
or
retf
scas
push
rcl
inc
lds
adc
add
(bad)
(bad)
(bad)
jg
xor
jmp
mov
cmps
sub
sub
lods
xchg
outs
ins
outs
cmps
fsubr
dec
lods
sbb
scas
ss
xchg
out
or
aas
cs
xchg
or
clc
fistp
dec
mov
les
outs
or
leave
lea
call
mov
xor
in
(bad)
(bad)
in
(bad)
jmp
dec
ds
or
add
out
sub
sti
call
mov
sbb
or
out
ja
xor
outs
mov
xor
aas
outs
call
stos
cmp
push
repz
inc
scas
sbb
es
scas
scas
imul
push
rcl
jecxz
lods
ins
ins
into
dec
push
cmp
scas
pop
pop
movs
in
cmp
sbb
call
(bad)
neg
jg
sbb
js
lods
test
and
fdivr
mov
cwde
cmp
jo
mov
add
call
hlt
mov
inc
ins
xchg
mov
ins
cld
fild
dec
or
cmp
pop
shl
sbb
lods
(bad)
inc
mov
call
(bad)
jb
adc
(bad)
(bad)
jmp
xchg
mov
xchg
and
lock
ss
retf
fidivr
repz
and
mov
or
cmc
push
hlt
loopne
stos
leave
gs
dec
mov
icebp
push
jmp
(bad)
mov
test
gs
mov
jb
call
mov
mov
jg
(bad)
(bad)
jg
jge
mov
and
addr16
mov
fnstsw
inc
sbb
sbb
sar
add
add
sub
adc
xchg
hlt
ja
or
mov
data16
(bad)
jmp
mov
push
jae
lods
cmp
ror
(bad)
push
popf
pop
cld
(bad)
(bad)
jns
jl
sti
neg
call
sahf
retf
xchg
pop
addr16
(bad)
dec
cmp
test
call
icebp
imul
push
adc
scas
clc
xchg
pop
push
adc
loopne
mov
push
mov
arpl
(bad)
(bad)
(bad)
call
push
or
push
mov
out
cwde
push
push
sbb
cmps
retf
inc
sub
sar
(bad)
fiadd
fsubr
lods
repz
test
(bad)
ins
and
and
gs
(bad)
jmp
adc
aas
push
add
xor
das
jne
inc
int
cs
ror
xchg
inc
inc
cwde
(bad)
jne
enter
add
(bad)
mov
(bad)
call
dec
sub
imul
(bad)
mov
out
add
int3
cmp
dec
sub
icebp
inc
or
sub
pusha
call
mov
mov
mov
les
loope
loop
adc
cmc
inc
inc
sbb
cmps
and
cmp
push
cld
(bad)
ss
cmp
sub
mov
loop
clc
mov
jmp
scas
rcr
push
(bad)
jmp
fimul
mov
leave
adc
push
pop
push
fst
push
lock
mov
jb
scas
das
lods
je
out
or
jg
jg
mov
(bad)
into
lods
jge
int3
pusha
xor
mov
(bad)
(bad)
(bad)
jmp
outs
jne
js
stc
call
xchg
cmc
mov
aaa
and
in
cmc
sbb
(bad)
(bad)
jmp
call
in
cmc
mov
mov
(bad)
pop
sub
stos
push
outs
push
in
ret
cmp
in
jmp
(bad)
cmp
push
add
or
jle
scas
mov
ins
imul
cwde
xor
in
inc
ins
push
and
test
out
out
call
out
mov
sub
pop
sub
xor
push
(bad)
or
mov
imul
outs
out
cs
or
jle
in
xchg
lods
std
mov
or
test
sub
js
add
retf
jg
neg
xchg
out
scas
mov
out
test
cli
outs
(bad)
lock
hlt
imul
(bad)
inc
cmp
(bad)
jmp
(bad)
jecxz
sbb
xchg
xchg
fucomp
das
or
in
sub
lods
in
cli
(bad)
(bad)
jmp
ins
clc
dec
loop
loope
repnz
das
mov
mov
imul
xor
mov
ja
out
rcl
mov
cmp
lea
cmp
mov
jl
test
add
cmps
data16
scas
movs
icebp
(bad)
(bad)
mov
test
and
pop
das
pop
fst
pushf
xchg
inc
(bad)
frstor
sub
test
mov
cli
push
into
enter
(bad)
dec
xor
cli
and
pop
mov
fwait
pop
jbe
rcl
enter
fwait
push
test
pop
and
sub
pop
and
mov
mov
mov
mov
fidiv
mov
leave
leave
daa
leave
dec
(bad)
push
ins
adc
mov
add
test
push
inc
jno
push
pop
mov
(bad)
cmc
xchg
cmc
adc
push
mov
inc
call
pop
inc
inc
test
dec
mov
push
pop
jl
(bad)
dec
shl
pop
add
lods
cli
dec
add
fdiv
fisub
push
popa
jbe
int
stc
adc
iret
adc
sbb
call
loopne
inc
inc
mov
inc
jmp
nop
mov
fdivr
dec
lods
imul
sbb
test
push
sub
push
cmp
or
movs
cld
call
cld
shl
xlat
xlat
sbb
mov
dec
je
arpl
idiv
scas
dec
dec
and
ret
outs
sahf
push
push
mov
cmp
inc
nop
mov
(bad)
jg
fistp
test
and
mov
push
shr
inc
and
fldenv
dec
xor
(bad)
sti
(bad)
fist
iret
xlat
inc
push
push
into
push
bound
cwde
fwait
movs
movs
nop
gs
xchg
(bad)
(bad)
(bad)
jg
push
push
stc
push
or
jecxz
mov
pop
pop
pop
inc
repz
das
das
jge
add
sbb
dec
add
dec
and
push
push
push
pop
daa
dec
das
or
push
(bad)
dec
mov
or
mov
mov
pop
pop
scas
leave
call
inc
loop
mov
sbb
mov
pop
pop
(bad)
jmp
(bad)
dec
leave
repnz
repnz
adc
aaa
jno
inc
jno
popf
fsubr
jg
jge
add
jmp
adc
scas
(bad)
mov
in
aad
xchg
call
push
retf
cmps
adc
dec
and
jmp
(bad)
ins
xchg
cli
cli
jmp
sub
mov
pop
les
in
jmp
jmp
shl
popf
lahf
not
fcomp
arpl
clc
adc
mov
das
sbb
sar
adc
pop
stos
sar
sar
jge
xor
push
jecxz
and
repz
adc
fisub
inc
push
jo
mov
push
mov
jecxz
pop
adc
cwde
mov
je
(bad)
mov
adc
icebp
inc
jmp
fist
ja
jg
lea
sbb
fld
and
dec
push
fisubr
adc
into
inc
(bad)
pop
inc
inc
mov
addr16
pop
push
dec
div
out
push
das
sar
std
xor
das
stos
push
push
(bad)
push
mov
pushf
dec
jg
sub
fcmovu
imul
sbb
jo
jo
cwde
fisub
pandn
paddd
(bad)
pop
loope
pushf
push
xchg
xchg
leave
xchg
ins
icebp
sbb
lds
out
dec
rcr
mov
pop
test
outs
lea
or
mov
cmp
sub
xchg
cmp
and
(bad)
fisub
dec
push
jb
cmp
in
cmp
jge
mov
cmp
lea
sbb
aaa
sahf
aaa
ret
pop
test
xor
xchg
push
cs
sbb
pop
pop
mov
xor
and
and
cmp
add
cmp
inc
pop
loopne
cmp
enter
inc
outs
sbb
mov
jb
in
push
push
mov
pop
stc
(bad)
jg
pop
xor
xchg
xor
or
test
imul
neg
adc
cdq
mov
add
jmp
(bad)
mov
inc
xor
fdiv
fwait
jbe
inc
rcl
jmp
sub
(bad)
mov
jns
or
push
pop
push
adc
xchg
out
or
cmp
push
or
mov
jns
pop
maxps
cmp
out
test
inc
jae
test
test
mov
jg
imul
pop
or
sub
cmps
(bad)
jmp
cmp
inc
inc
add
mov
aas
(bad)
jg
dec
paddw
out
jle
add
and
xchg
int
retf
sbb
das
cli
call
mov
mov
out
pop
in
shl
hlt
fidiv
pushf
pop
mov
das
or
mov
popf
popf
(bad)
(bad)
cmp
mov
push
add
and
mov
scas
jnp
or
or
push
sub
test
scas
sub
cmp
les
repz
fs
(bad)
cdq
sbb
lea
pop
ret
mov
inc
mov
pop
pop
cmps
es
and
jb
push
jns
jns
ss
rcl
int3
shl
cdq
pop
stos
mov
mov
data16
push
leave
out
sahf
sbb
pusha
sbb
ror
dec
int
dec
(bad)
jg
test
xchg
fs
or
test
mov
mov
(bad)
inc
sbb
ins
sbb
(bad)
xchg
pop
icebp
icebp
inc
icebp
mov
fucomp
push
push
ret
cmp
push
imul
out
scas
scas
jg
add
add
(bad)
xchg
movs
cld
(bad)
cmp
mov
fist
sub
int
test
push
push
adc
jns
out
pop
gs
repnz
push
xchg
dec
pop
(bad)
(bad)
inc
add
add
aaa
pop
lock
ss
cld
xor
test
lds
add
add
mov
cld
xchg
dec
push
fld
cmps
fsub
inc
inc
sub
mov
xchg
movs
ins
(bad)
inc
jmp
gs
xchg
jne
dec
aam
mov
jle
in
add
or
dec
cmp
std
std
ss
push
popa
add
retf
retf
push
add
xchg
cmc
(bad)
mov
call
add
jnp
xchg
push
pushf
aas
mov
dec
dec
sub
dec
pop
pop
ins
out
jo
sub
dec
aam
xchg
in
aad
jmp
out
out
nop
icebp
or
and
and
mov
ret
ret
mov
out
mov
(bad)
xor
or
neg
nop
clc
clc
jecxz
ret
pop
lock
stc
mov
jmp
adc
out
inc
(bad)
sbb
(bad)
test
cmp
ja
push
add
js
bsf
cld
dec
push
sbb
sub
sub
movs
push
sub
movs
sub
lods
hlt
bound
(bad)
jmp
jg
inc
cli
and
adc
mov
test
sahf
jle
push
(bad)
call
mov
xchg
xchg
lds
mov
cwde
sar
push
arpl
xbegin
(bad)
mov
movs
int3
imul
ret
(bad)
jmp
test
xlat
gs
sbb
jg
lods
mov
jmp
clc
(bad)
jg
daa
sub
pop
mov
sub
xor
(bad)
pop
clc
dec
fwait
(bad)
jl
xor
pop
ds
popf
jp
cmp
cld
add
scas
cld
add
push
push
pop
push
shl
cmp
dec
hlt
dec
xlat
adc
call
mov
cmp
sbb
xlat
int
adc
ret
adc
(bad)
aas
inc
inc
dec
mov
movs
movs
mov
dec
push
push
outs
call
(bad)
pop
dec
dec
clc
dec
push
sbb
jmp
mov
adc
(bad)
out
loope
pushf
xor
movs
imul
dec
mov
(bad)
mov
jne
jecxz
jecxz
inc
stc
scas
aad
adc
imul
clc
push
xor
mov
pop
sub
xchg
pop
enter
mov
mov
xchg
xchg
sbb
(bad)
and
cli
aam
adc
in
out
mov
bound
lock
fist
addr16
out
out
xchg
repz
xchg
(bad)
jg
call
iret
iret
dec
add
jp
or
and
stc
call
pop
mov
push
inc
inc
mov
mov
or
or
out
fdivr
ja
pop
adc
mov
mov
mov
test
scas
cld
call
xor
mov
mov
fbld
adc
lea
sbb
sbb
fmul
lahf
jae
dec
jae
xchg
fdivr
add
sbb
out
repz
mov
in
in
jbe
jmp
in
shl
and
or
lds
push
into
into
cli
into
or
push
shl
pusha
cmp
(bad)
lock
adc
rcr
pop
jmp
stc
push
js
out
sub
jne
mov
mov
mov
retf
retf
das
retf
mov
in
pop
or
and
jbe
in
aad
cmp
cmp
cmps
xchg
cmp
call
adc
mov
movs
xlat
jne
mov
test
aaa
out
mov
inc
shr
xchg
je
in
push
dec
(bad)
data16
pop
repnz
(bad)
sub
and
push
(bad)
jg
and
xchg
loopne
add
ds
push
mov
std
outs
outs
jl
call
outs
pop
mov
(bad)
and
ret
ret
mov
dec
fs
sub
ss
or
cmc
cmp
outs
jmp
inc
nop
push
stc
jnp
push
pop
jecxz
xor
call
(bad)
fstp
hlt
push
movs
push
pop
das
cmp
mov
sbb
(bad)
(bad)
mov
dec
cli
pusha
inc
fsub
fdivr
daa
adc
fcmovnu
inc
push
js
or
call
jo
xchg
cdq
aas
pop
mov
cwde
adc
push
pusha
aam
cli
(bad)
jmp
pop
cmp
jne
push
cmp
hlt
sbb
bound
adc
(bad)
(bad)
fisttp
or
and
leave
jl
call
in
(bad)
push
pop
mov
fnstenv
cmps
mov
jecxz
test
loop
arpl
cmps
sbb
(bad)
jmp
lds
add
push
inc
add
cmp
mov
out
idiv
jmp
ds
es
push
push
ins
push
in
mov
xor
push
cmp
push
fwait
push
stos
mov
sahf
push
mov
add
xor
push
jmp
fwait
outs
push
mov
or
mov
lea
ret
push
jl
call
push
push
xchg
cmp
mov
sbb
pop
push
test
call
push
scas
(bad)
dec
jl
adc
fbld
adc
retf
in
test
(bad)
(bad)
jmp
and
push
jo
mov
cld
leave
sub
ja
stc
sub
inc
adc
(bad)
ds
outs
jno
(bad)
nop
shr
pop
sbb
div
(bad)
(bad)
jmp
cmp
jle
movd
stos
sbb
bound
pop
call
dec
pop
icebp
(bad)
(bad)
fs
cs
or
sbb
push
shr
adc
and
(bad)
jmp
outs
pop
mov
test
push
test
pop
(bad)
jmp
adc
repz
adc
loope
lods
pop
inc
ror
(bad)
call
call
repnz
inc
or
popf
ds
repnz
mov
xchg
inc
test
or
mov
outs
test
popa
aaa
aad
and
jmp
shl
inc
jmp
jnp
das
out
mov
retf
loopne
jmp
dec
scas
push
mov
push
xor
push
pop
push
sbb
retf
repz
sub
das
fild
(bad)
and
mov
adc
popf
pusha
ret
sub
cmp
or
sub
sbb
(bad)
jmp
pushf
xchg
pusha
dec
out
mov
(bad)
sti
fsubr
test
mov
jmp
ds
cmp
push
push
pop
lock
test
test
dec
clc
push
call
pusha
(bad)
call
rcr
or
sbb
mov
ret
fisubr
inc
(bad)
dec
and
push
jmp
add
jp
push
mov
sub
(bad)
(bad)
call
sub
test
cmps
inc
outs
lods
mov
stos
daa
jmp
push
bound
push
inc
push
mov
fbstp
(bad)
out
ss
dec
mov
sbb
call
xchg
jmp
pusha
dec
cmp
nop
or
dec
aam
lock
mov
(bad)
mov
mov
adc
pop
dec
clc
mov
scas
clc
fld
inc
mov
iret
adc
das
(bad)
loopne
inc
mov
jmp
scas
xchg
outs
push
dec
jl
(bad)
jmp
or
sqrtps
jmp
loop
cmp
mov
jmp
cmc
push
xchg
fsubr
pop
inc
jmp
sub
fbstp
or
(bad)
(bad)
mov
xchg
xchg
dec
jns
xchg
stos
xchg
jl
sbb
(bad)
(bad)
push
lock
ret
imul
ins
rol
iret
inc
mov
pop
outs
cmp
(bad)
call
enter
fist
jecxz
(bad)
sub
in
frstor
ss
jg
aam
stos
xchg
nop
jns
ds
imul
pop
push
(bad)
adc
pusha
fnstsw
sti
xchg
sar
sub
and
jle
fidiv
and
fnstsw
stos
push
hlt
(bad)
call
mov
stos
mov
test
sbb
or
sti
mov
push
imul
jmp
add
dec
xchg
loopne
adc
adc
test
xchg
outs
fldcw
mov
pop
adc
ds
pop
sub
(bad)
(bad)
jmp
pop
(bad)
xchg
cmps
add
loop
dec
sub
dec
pop
pushf
movs
xor
adc
mov
lods
jg
and
(bad)
jp
shr
call
and
icebp
inc
add
xchg
stos
fld
or
sbb
out
sbb
or
pop
call
dec
push
or
daa
inc
mov
add
call
cld
(bad)
(bad)
out
cli
arpl
movs
call
test
inc
mov
mov
jnp
cs
fwait
add
push
dec
(bad)
xchg
mov
jl
pop
jmp
adc
mov
les
pop
out
and
(bad)
(bad)
(bad)
jmp
or
test
sub
lock
nop
mov
inc
test
cmp
out
dec
out
lds
pop
push
outs
jg
(bad)
jmp
arpl
mov
cli
mov
sub
jl
mul
mov
cli
and
outs
in
mov
sbb
call
adc
jmp
lods
fwait
cwde
js
into
or
sbb
jmp
jmp
(bad)
mov
jmp
lea
shr
xchg
(bad)
(bad)
mov
sub
push
imul
push
imul
cld
retf
mov
es
js
retf
imul
xchg
jg
stos
cmp
jmp
mov
jp
mov
xlat
cs
dec
sub
test
rol
(bad)
fiadd
and
popf
(bad)
(bad)
sbb
cmc
(bad)
(bad)
jmp
ret
fistp
pop
jno
test
mov
(bad)
adc
clc
sbb
mov
jg
sahf
xor
xor
sub
scas
mov
je
pop
clc
(bad)
call
loop
add
mov
out
(bad)
and
inc
retf
jg
scas
lahf
mov
cmp
jmp
xor
mov
cmps
dec
in
dec
movs
std
(bad)
(bad)
mov
xor
test
int
mov
mov
loope
(bad)
loop
xchg
mov
jmp
(bad)
jg
loopne
mov
stos
(bad)
cmp
jbe
cmp
or
(bad)
jmp
or
xchg
test
stc
loop
popf
pop
(bad)
stc
xlat
adc
cmp
iret
(bad)
(bad)
(bad)
push
cmp
fistp
pop
jecxz
push
outs
cmp
scas
mov
imul
fimul
(bad)
(bad)
(bad)
call
lahf
add
lods
cmps
jb
inc
test
and
sbb
add
fild
mov
movs
sub
xchg
mov
mov
sub
lahf
lahf
push
inc
jle
mov
jg
xchg
mov
ficom
pop
iret
sub
mov
(bad)
jg
adc
arpl
call
retf
mov
mov
hlt
call
sub
scas
(bad)
stos
call
das
or
aam
lods
or
inc
mov
xchg
pop
mov
movs
scas
cmps
das
ss
imul
std
cli
out
popf
rcl
in
mov
add
dec
js
and
enter
(bad)
jmp
rcr
xchg
dec
xor
scas
mov
int3
sub
(bad)
jmp
mov
call
movs
(bad)
ficomp
cmp
arpl
push
xor
retf
js
iret
fstp
jg
(bad)
push
ds
iret
jle
sbb
push
and
(bad)
lods
out
stos
mov
(bad)
dec
iret
dec
cs
cld
iret
pop
(bad)
aad
movs
or
cs
lock
out
xchg
gs
adc
stos
dec
rol
mov
popa
cmp
cmc
(bad)
(bad)
(bad)
push
shl
movnti
movs
sub
pop
repnz
sub
cmps
push
clc
ins
sub
movs
scas
or
and
dec
cmp
jne
dec
clc
sbb
jg
inc
fidiv
mov
mov
fmul
sar
sub
mov
jns
out
(bad)
(bad)
mov
in
test
sahf
sub
or
(bad)
mov
xor
jno
jge
and
mov
dec
(bad)
cmps
arpl
mov
xor
outs
aas
retf
push
clc
aas
or
mov
(bad)
call
movs
sbb
xchg
into
dec
aas
xchg
jp
mov
das
mov
mov
jns
pop
adc
int3
ds
jg
test
fild
stos
imul
sbb
jmp
std
movs
movs
add
mov
aaa
std
(bad)
(bad)
mov
cmp
mov
mov
cs
push
sbb
shl
enter
xor
xchg
sbb
(bad)
(bad)
push
sub
fild
loope
jge
sub
adc
call
pop
xor
xor
lock
push
mov
cmp
xchg
sub
loopne
mov
mov
and
pop
inc
out
xor
(bad)
jmp
stos
jmp
mov
lock
(bad)
sbb
(bad)
(bad)
push
es
jb
jmp
sbb
test
in
mov
(bad)
call
push
call
cmp
in
add
(bad)
retf
or
ja
std
scas
dec
dec
sub
xor
clc
adc
loope
retf
lahf
mov
sub
jmp
add
and
mov
sbb
adc
mov
xor
xchg
(bad)
push
pop
and
jo
sti
call
jp
jae
enter
mov
pushf
and
mov
xchg
sub
xchg
cmp
xor
mov
and
adc
sbb
iret
sub
mov
ins
sub
mov
sbb
cmps
(bad)
or
(bad)
mov
(bad)
lods
xor
stos
call
ds
popa
pusha
dec
push
sbb
mov
test
jmp
xchg
push
scas
inc
pop
jbe
xchg
push
push
stos
push
in
aaa
mov
rcl
pop
sub
xor
mov
adc
cmps
or
dec
out
jbe
dec
(bad)
(bad)
(bad)
call
or
cmps
xchg
lods
outs
push
mov
mov
repnz
imul
sbb
jl
(bad)
(bad)
dec
test
(bad)
jmp
scas
call
add
popa
shr
mov
call
jmp
push
mov
std
cli
test
out
fsub
sub
mov
cmp
mov
sbb
pop
aam
adc
imul
rol
adc
shl
inc
sti
fnsave
xchg
(bad)
jmp
aaa
cmp
stos
cmp
jmp
(bad)
push
cdq
adc
popa
cld
jns
in
ins
movs
stos
retf
call
icebp
(bad)
jmp
retf
jne
into
jbe
(bad)
cmp
pop
mov
(bad)
cmp
or
pop
pushf
push
mov
sbb
xor
(bad)
mov
sti
call
dec
int3
mov
fwait
sbb
mov
mov
repnz
dec
push
cld
mov
pop
pop
hlt
xchg
or
push
aaa
mov
in
mov
mov
loop
pushf
cmp
or
(bad)
(bad)
jmp
xchg
shl
daa
stc
aaa
push
das
mov
aam
scas
dec
clc
enter
fbld
cmps
(bad)
repnz
cmc
ud0
(bad)
jmp
out
test
imul
mov
sub
jae
mov
mov
mov
sub
(bad)
inc
mov
xchg
inc
dec
jmp
mov
ds
mov
sbb
(bad)
(bad)
call
adc
leave
daa
mov
cli
neg
clc
jge
addr16
xlat
cmps
es
cmp
(bad)
(bad)
(bad)
push
retf
cwde
mov
jns
pop
mov
push
scas
mov
imul
mov
(bad)
jmp
pop
loopne
or
fmul
fimul
mov
test
cdq
leave
mov
out
clc
(bad)
sti
and
lahf
mov
ret
pushf
pop
hlt
adc
dec
ds
push
jp
fst
add
sbb
pusha
sub
ret
(bad)
(bad)
cli
mov
ret
mov
adc
fist
hlt
and
and
ja
sub
outs
mov
xchg
scas
(bad)
jg
sub
adc
loop
scas
ror
sub
out
push
(bad)
(bad)
call
cmp
sub
jg
add
(bad)
out
inc
push
add
mov
(bad)
(bad)
cmp
das
or
mov
stc
imul
pusha
mov
pusha
pop
aas
loope
outs
sub
cli
mov
(bad)
(bad)
call
shl
mov
ins
pop
out
out
jmp
sbb
in
add
or
(bad)
jmp
imul
outs
out
inc
or
(bad)
(bad)
jg
mov
fld
arpl
mov
cmps
inc
inc
enter
(bad)
(bad)
jmp
sbb
aaa
outs
dec
retf
lahf
adc
outs
pop
and
mov
pusha
push
out
pop
xchg
cwde
fdivr
inc
out
or
inc
sub
mov
das
pop
jmp
push
or
dec
push
xor
pusha
fs
call
lods
jecxz
pop
out
shl
sti
sahf
or
fwait
xchg
cmps
enter
loopne
xor
out
jb
mov
fnstcw
js
(bad)
(bad)
push
sub
imul
fidivr
sbb
dec
(bad)
pop
jmp
cli
mov
mov
push
inc
test
or
xlat
and
or
int3
in
cmp
push
adc
jg
sbb
das
add
clc
fidiv
lahf
sar
(bad)
fcomip
mov
sub
cmp
into
or
xor
rcl
push
adc
jg
inc
adc
or
push
dec
jmp
mov
lods
add
adc
test
rcr
jmp
lods
js
push
(bad)
(bad)
(bad)
(bad)
sti
xchg
mov
jmp
push
stos
and
pop
pop
ins
or
or
adc
test
retf
std
cmp
cli
(bad)
jmp
mov
(bad)
in
lods
ficomp
icebp
mov
enter
(bad)
(bad)
jmp
inc
jo
or
js
sub
mov
cmp
mov
cmp
pusha
fcmovu
fs
jmp
sub
leave
loop
out
pushf
mov
cli
(bad)
jmp
xor
sub
xor
fisttp
pop
mov
mov
mov
(bad)
(bad)
call
repnz
pop
dec
mov
test
pop
pop
xchg
in
ins
cmp
aas
fld
(bad)
call
(bad)
test
cmp
sbb
mov
cmps
cmps
mov
mov
nop
sbb
mov
(bad)
(bad)
(bad)
call
scas
sub
das
xchg
push
scas
push
js
(bad)
sahf
cs
(bad)
cwde
ret
pop
in
(bad)
(bad)
(bad)
(bad)
(bad)
fisub
cmp
fcmovnb
or
sbb
repnz
in
lahf
xor
pop
out
pop
cmp
mov
(bad)
jmp
movs
std
jl
repnz
cmp
ds
aas
bound
mov
add
inc
pop
cmp
add
xchg
push
pop
mov
inc
sbb
test
and
mov
imul
mov
sub
mov
xchg
cdq
clc
push
mov
sbb
pop
sbb
out
mov
jp
xchg
fwait
das
pop
push
mov
sub
(bad)
(bad)
(bad)
cld
adc
shl
out
imul
xor
std
out
cwde
or
mov
stc
repz
call
hlt
and
fimul
(bad)
inc
cmp
add
xchg
pop
push
(bad)
(bad)
jmp
mov
mov
fild
cmp
scas
mov
push
stos
sbb
aaa
add
movs
push
test
mov
(bad)
push
inc
imul
loopne
mov
mov
movs
mov
mov
mov
(bad)
(bad)
dec
pusha
or
jmp
jmp
loop
jmp
mov
dec
mov
(bad)
(bad)
(bad)
(bad)
inc
imul
sbb
jmp
xor
push
xchg
sub
(bad)
(bad)
jmp
sar
or
dec
sbb
iret
jo
mov
out
lds
mov
dec
cli
fnstsw
xor
test
jo
or
sbb
clc
mov
imul
xchg
loop
mov
(bad)
jl
jge
ins
dec
mov
(bad)
in
pop
adc
gs
(bad)
(bad)
inc
fwait
sbb
cmps
mov
repz
ja
and
mov
pushf
std
(bad)
jmp
sub
sub
ins
cmps
inc
call
sahf
add
xor
jg
sub
mov
or
sub
(bad)
(bad)
(bad)
call
(bad)
sub
sub
rcr
mov
test
fimul
or
ret
mov
or
sbb
ins
cmp
xchg
test
xchg
and
leave
xchg
or
in
mov
out
fldcw
xchg
pop
mov
shl
imul
mov
call
xor
sub
mov
fwait
pop
fdivr
push
inc
cld
cmp
push
push
jae
(bad)
(bad)
jg
loop
jae
daa
sahf
fs
pop
lods
push
sbb
fs
nop
jmp
(bad)
mov
sti
mov
cmps
cmps
mov
fwait
pop
mov
mov
sbb
stc
pop
shl
call
outs
cmp
jg
pop
stc
dec
stos
or
sti
and
sub
sub
jnp
jg
enter
xchg
push
out
(bad)
(bad)
(bad)
dec
pop
dec
mov
into
push
cwde
mov
(bad)
imul
test
(bad)
jmp
(bad)
call
mov
sub
jmp
outs
and
mov
frstor
jmp
enter
lods
iret
ja
adc
jo
cmp
or
sar
retf
call
add
mov
aam
bound
fild
dec
inc
mov
adc
sub
jno
(bad)
(bad)
dec
pop
add
icebp
jmp
repnz
adc
loop
mov
pushf
lahf
test
(bad)
(bad)
(bad)
inc
mov
inc
jl
or
mov
fnsave
fdivr
(bad)
inc
test
mov
lods
mov
sbb
add
ficomp
dec
(bad)
jmp
xchg
mov
and
jmp
sub
inc
mov
call
sub
lock
aad
pop
and
(bad)
jmp
stos
das
icebp
loopne
sbb
pop
ja
pop
repnz
ins
mov
xor
cmp
mov
push
imul
jmp
push
inc
cli
lea
push
test
pop
call
mov
mov
pusha
mov
sub
lock
jle
cmp
cs
rcr
pop
(bad)
jmp
cmp
in
out
add
mov
int
sub
(bad)
jmp
imul
cmp
xchg
jae
mov
sub
mov
sahf
push
(bad)
(bad)
push
ja
xchg
loopne
push
xchg
push
mov
dec
sub
(bad)
fisttp
in
mov
push
jmp
sub
lahf
addr16
lahf
push
mov
and
popa
std
push
adc
mov
sub
lods
fdivr
ins
push
(bad)
(bad)
(bad)
jmp
fistp
(bad)
stos
xor
or
(bad)
pop
mov
mov
pop
push
das
test
mul
div
mov
push
ret
retf
mov
shr
retf
inc
stc
inc
mov
jns
test
mov
out
push
jae
fwait
xchg
dec
pop
mov
out
fisubr
scas
push
hlt
in
cwde
mov
sub
fisub
jmp
push
into
popf
mov
lahf
cli
popa
adc
pop
mov
test
add
(bad)
fdiv
ss
or
outs
sbb
(bad)
(bad)
inc
daa
loopne
iret
push
ins
js
repnz
fwait
cmp
sbb
leave
cwde
mov
pop
call
(bad)
mov
push
xor
cs
sbb
outs
mov
(bad)
mov
push
stos
sub
movs
push
stos
mov
and
loopne
repz
dec
xor
push
movs
shr
loopne
push
dec
sbb
add
je
enter
sbb
pop
scas
cmp
lods
pop
pop
pop
fistp
mov
jp
and
movs
cmp
mov
outs
adc
(bad)
jnp
and
and
(bad)
(bad)
jmp
pop
cmp
js
stos
cmp
sbb
(bad)
imul
(bad)
mov
in
or
int
lea
rcl
cmps
jb
mov
das
jp
outs
idiv
(bad)
in
(bad)
ficom
test
push
jmp
push
mul
cli
leave
test
js
cdq
test
cmps
pop
(bad)
pop
hlt
(bad)
dec
jns
adc
icebp
cld
fistp
or
jp
push
mov
jmp
push
hlt
push
cmp
(bad)
scas
sub
dec
(bad)
sub
into
xchg
shr
mov
in
add
add
dec
pop
xor
mov
stos
faddp
sub
out
and
(bad)
add
lahf
push
and
shr
jmp
inc
or
out
push
mov
imul
adc
lahf
bound
pushf
xchg
dec
sub
mov
cmp
and
mov
inc
mov
jb
mov
imul
(bad)
cmp
sub
call
call
(bad)
es
and
in
mov
(bad)
out
sub
cmps
fldcw
fiadd
fs
(bad)
mov
mov
enter
out
push
cli
aaa
je
mov
dec
mov
pop
push
cld
stos
mov
pop
push
pop
mov
jmp
stc
mov
pop
popa
jnp
jp
scas
aad
and
das
mov
(bad)
fcomip
mov
movs
scas
nop
retf
adc
stos
(bad)
and
ret
push
(bad)
and
xor
int
pop
sbb
(bad)
dec
hlt
cmp
addr16
sub
ja
sbb
mov
cmp
cmp
out
cld
jg
push
sub
mov
shl
adc
push
mov
jmp
cmps
es
dec
mov
mov
(bad)
jo
mov
cmp
call
ret
jl
ins
sub
sub
retf
jns
(bad)
jmp
ret
dec
nop
sbb
mov
sbb
xchg
lock
jg
scas
scas
and
(bad)
cwde
or
(bad)
and
out
stos
nop
mov
pusha
outs
cmps
cmp
cld
jg
cs
mov
(bad)
ret
mov
(bad)
or
int3
call
inc
push
and
ret
retf
push
sbb
icebp
cwde
repnz
ja
fisttp
cmp
out
xor
inc
mov
push
sar
(bad)
(bad)
(bad)
clc
stc
lahf
cmp
push
sub
sub
dec
pusha
adc
jnp
test
aad
mov
dec
cld
(bad)
and
xor
in
out
jnp
mov
fstp
fwait
sbb
jg
sub
sub
push
rol
jmp
arpl
pop
(bad)
(bad)
(bad)
(bad)
jmp
daa
loop
xchg
jp
jns
frstor
or
jmp
addr16
sar
scas
mov
pop
xor
pusha
sub
push
push
stos
or
bound
ja
xor
lahf
mov
cmp
xchg
fadd
sbb
jp
ins
dec
cmp
xchg
(bad)
fst
adc
ret
and
lock
cmp
imul
outs
lock
mov
cli
scas
cli
jmp
(bad)
(bad)
mov
pop
mov
(bad)
push
cmps
mov
and
pop
popa
add
movs
mov
(bad)
test
daa
cmp
jmp
test
cmp
jl
push
and
loopne
daa
pop
cdq
inc
iret
popf
(bad)
jl
call
jmp
fst
iret
pop
inc
xor
bound
pop
xor
cmps
test
stc
mov
push
iret
ss
cwde
push
in
xor
(bad)
(bad)
(bad)
(bad)
mov
in
xchg
sub
shr
xor
call
sar
(bad)
push
in
test
(bad)
(bad)
outs
cli
or
(bad)
rcr
push
in
ret
cmc
mov
push
mov
(bad)
(bad)
jg
gs
adc
loop
or
(bad)
aad
or
mov
rcl
xchg
cmps
pop
ins
(bad)
std
fwait
shr
sbb
adc
data16
jp
mov
ret
outs
mov
stos
stos
addr16
(bad)
jecxz
xor
sbb
(bad)
(bad)
(bad)
dec
jecxz
stos
xchg
mov
(bad)
xchg
cmps
sub
sub
repnz
push
adc
cmps
inc
aam
movs
loope
sub
fdiv
push
retf
inc
mov
ins
jne
mov
xchg
pusha
cld
call
arpl
sub
push
cld
push
xor
add
js
mov
call
in
add
loopne
imul
call
repnz
push
mov
sbb
aaa
call
mov
add
(bad)
jmp
and
xor
xchg
aaa
int
ret
mov
ficomp
(bad)
sub
jmp
inc
scas
sbb
jne
in
call
(bad)
(bad)
jmp
xchg
ror
cmps
sti
in
lahf
mov
jle
int
xchg
xchg
and
(bad)
and
adc
(bad)
call
and
cmps
leave
push
leave
call
out
xchg
es
add
sbb
push
cmp
and
(bad)
push
std
sbb
adc
mov
scas
pop
xor
ins
cmp
rcl
inc
out
adc
(bad)
fist
call
test
inc
and
mov
jmp
ror
(bad)
xchg
jo
ret
gs
or
xchg
iret
pop
cmp
cmp
scas
mov
add
retf
repnz
or
(bad)
(bad)
push
aam
data16
jbe
jbe
mov
sub
dec
dec
pop
loop
xchg
pop
mov
cdq
jnp
jmp
or
mov
fisubr
std
jnp
cmp
dec
sti
pop
stos
jbe
test
inc
cmps
mov
xor
pop
popa
js
pop
jl
lods
inc
sub
das
and
shr
adc
scas
ret
loope
loope
sbb
dec
cld
outs
fisubr
push
repnz
loope
pop
ud0
stos
sub
and
mov
stos
repnz
sub
pop
add
xchg
(bad)
call
mov
fadd
jmp
stos
mov
xchg
loope
mov
dec
repz
call
lock
inc
mov
push
mov
push
pushf
push
dec
jmp
cdq
fwait
or
pushf
adc
(bad)
jmp
fcom
mov
cmp
jmp
cmp
shl
jg
jno
stos
xchg
retf
movlps
popf
inc
shr
xchg
mov
ret
or
lods
lock
jmp
add
retf
mov
xor
jp
pushf
fstp
ss
xor
cli
cs
(bad)
(bad)
(bad)
cmp
jne
xchg
mov
call
das
mov
cli
std
xchg
ret
or
xchg
ja
aam
push
pop
scas
daa
pop
retf
cmps
std
imul
xor
jle
jmp
pushf
call
(bad)
inc
sahf
fwait
or
jnp
mov
push
dec
push
cld
dec
das
mov
fist
lds
(bad)
std
(bad)
(bad)
jmp
dec
xchg
dec
jmp
out
lahf
outs
outs
iret
dec
sbb
out
fwait
cmps
hlt
jg
(bad)
(bad)
(bad)
call
jno
call
(bad)
ja
and
stos
and
jmp
mov
outs
(bad)
jg
cs
scas
xor
add
outs
sub
mov
dec
mov
movs
(bad)
clc
test
movs
adc
movs
(bad)
(bad)
(bad)
jmp
leave
mov
scas
mov
mov
ret
sbb
mov
xor
lds
add
adc
cmp
idiv
das
test
clc
(bad)
jp
into
sahf
lahf
addr16
mov
jns
or
call
mov
outs
scas
ins
push
xchg
sbb
je
(bad)
jmp
cs
imul
psubusw
jl
adc
inc
or
mov
sub
lock
pop
in
fstp
es
jmp
mov
inc
push
mov
out
cmp
sub
(bad)
(bad)
(bad)
call
sub
cwde
enter
xchg
mov
mov
pusha
sbb
mov
and
pop
clc
sahf
adc
mov
and
(bad)
dec
mov
into
pop
pop
out
push
or
movs
scas
xor
dec
test
inc
out
test
mov
jnp
ins
sti
mov
fcomi
call
jmp
lahf
mov
aam
xchg
outs
xor
mov
(bad)
(bad)
dec
in
mov
xchg
sti
(bad)
adc
mov
mov
sti
lods
mov
(bad)
mov
fnsave
push
nop
cli
push
and
movs
mov
pusha
(bad)
(bad)
(bad)
(bad)
mov
mov
pusha
imul
or
lods
fist
das
je
mov
lock
sub
xchg
pop
sar
jmp
test
jg
pop
pop
pop
inc
jecxz
test
call
mov
(bad)
int
(bad)
cmp
xchg
mov
mov
xor
getsec
jmp
and
mov
enter
add
mov
ins
adc
test
(bad)
jg
loop
xor
idiv
pop
(bad)
xor
scas
xchg
lods
outs
jmp
popa
std
inc
sbb
cmp
mov
jo
mov
test
mov
xchg
pop
out
aam
into
jge
(bad)
(bad)
(bad)
push
jmp
adc
jo
pop
lahf
out
xchg
scas
lahf
push
in
or
or
iret
lds
ja
lods
mov
pop
cmc
fist
pop
rol
jle
test
add
sbb
(bad)
(bad)
dec
xchg
sub
sub
jns
push
fstp
scas
push
repz
loopne
shr
lds
(bad)
dec
xchg
sub
mov
and
out
mov
jecxz
stos
inc
sahf
(bad)
jg
add
mov
mov
pop
jmp
iret
xchg
xchg
jo
mov
jmp
add
mov
(bad)
(bad)
dec
and
dec
outs
rol
das
cmp
aaa
jecxz
mov
and
popf
pop
mov
xor
mov
retf
push
cli
lds
clc
loopne
xchg
or
js
in
mov
scas
inc
mov
adc
adc
imul
cmps
adc
(bad)
call
sbb
in
xor
push
mov
out
lea
sub
jmp
dec
sbb
jmp
aas
sbb
dec
icebp
push
fisub
fmulp
pop
cwde
and
(bad)
mov
jne
mov
sub
adc
out
popf
fidivr
jmp
test
shl
int
or
inc
pushf
enter
call
xor
aaa
cld
(bad)
jmp
inc
push
and
arpl
pop
out
jns
inc
pusha
or
mov
test
sbb
jg
(bad)
inc
fst
xchg
xchg
jnp
xor
cli
mov
jne
xlat
pop
cmp
call
adc
mov
(bad)
dec
and
fldenv
js
add
dec
and
ds
sub
clc
cmp
sbb
jmp
clc
ja
mov
push
sbb
mov
sub
(bad)
jmp
stos
cmp
pusha
mov
jbe
fidivr
pop
outs
pop
sub
(bad)
(bad)
dec
xchg
enter
pop
push
stos
test
and
jl
fcomp
xor
es
sbb
(bad)
jmp
xor
mov
adc
mov
inc
fwait
retf
movs
(bad)
(bad)
(bad)
inc
jmp
retf
mov
jae
xor
dec
call
and
out
xchg
dec
imul
movs
cmp
ror
xchg
loop
mov
outs
ins
mov
ins
enter
pop
sbb
push
sar
dec
add
pop
push
test
xchg
(bad)
(bad)
call
sbb
mov
aam
sbb
cs
mov
mov
(bad)
(bad)
call
push
bound
dec
or
sub
sub
mov
imul
lea
push
stos
cs
push
pushf
push
in
sbb
outs
xchg
xchg
or
dec
xchg
mov
jmp
xchg
fstp
(bad)
leave
addr16
xchg
pop
dec
jle
push
dec
add
into
lea
icebp
scas
cli
adc
jne
mov
pop
push
xchg
shl
pop
fisttp
cmp
mov
mov
je
shl
pusha
int3
cmc
call
pusha
(bad)
cdq
push
call
push
fld
or
adc
xchg
in
loope
cmp
lods
scas
inc
cmps
adc
fstp
loope
xchg
pop
push
xor
in
push
pop
push
(bad)
mov
and
(bad)
pop
in
or
cld
bound
addr16
dec
fwait
dec
jg
mov
aaa
add
(bad)
mov
stos
icebp
enter
cmp
adc
inc
sbb
call
sub
pop
aam
mov
fs
sbb
outs
(bad)
sbb
iret
(bad)
inc
mov
in
jmp
ret
aam
push
sbb
rol
cld
ret
mov
fwait
test
push
(bad)
add
xchg
into
fisubr
dec
mov
sub
xchg
scas
(bad)
(bad)
jmp
mov
lock
lods
(bad)
sti
rcr
lods
mov
(bad)
cmp
jmp
inc
pop
fwait
repnz
loop
xor
in
(bad)
or
lods
stc
xchg
stc
adc
(bad)
call
stc
dec
out
fwait
add
sub
jp
inc
xlat
or
stos
cld
sub
(bad)
in
dec
xchg
sbb
in
bound
sub
dec
enter
cld
mov
(bad)
mov
sub
movs
or
aad
scas
and
or
pusha
dec
scas
cmp
mov
mov
push
pop
jo
lods
movs
cmps
in
mov
pop
xlat
xor
pop
enter
scas
jle
jmp
es
push
mov
inc
lods
stos
mov
js
popf
mov
(bad)
bound
(bad)
mov
fldcw
inc
loop
mov
(bad)
or
dec
outs
sbb
jle
pusha
popa
mov
push
sub
jmp
pop
pop
or
call
mov
(bad)
(bad)
push
sti
imul
(bad)
and
cmp
sbb
or
or
test
in
push
cmp
in
fsubp
mov
sbb
retf
push
push
xor
add
jmp
call
mov
(bad)
loopne
mov
test
pop
xchg
ret
sar
cmp
cld
out
or
adc
(bad)
mov
dec
jge
(bad)
(bad)
(bad)
(bad)
dec
jle
mov
adc
cmp
cmp
mov
dec
jmp
enter
pusha
jge
out
push
shl
scas
jg
cmps
(bad)
(bad)
mov
jecxz
pop
mov
fidiv
dec
cmc
push
or
lea
mov
add
(bad)
(bad)
(bad)
(bad)
mov
jmp
lock
push
mov
xor
test
cwde
clc
call
sub
call
test
pop
enter
dec
add
das
loop
fwait
lahf
push
mov
and
jb
xchg
add
push
retf
mov
(bad)
mov
and
sbb
and
iret
jl
adc
cmp
test
mov
sbb
enter
xlat
icebp
call
aas
call
imul
fsubr
mov
out
out
lods
dec
mov
(bad)
jmp
addr16
repnz
jmp
jmp
jmp
cli
cmp
sbb
dec
cwde
xor
push
addr16
cmp
or
(bad)
(bad)
call
cli
ins
movs
cmp
xor
js
test
mov
jnp
retf
adc
test
cmp
ss
(bad)
mov
mov
jb
fsubr
outs
adc
mov
stos
aas
dec
mov
add
in
neg
out
stos
xchg
xchg
(bad)
jg
add
mov
xor
add
out
fwait
clc
(bad)
call
mov
xchg
bound
xor
cmps
test
mov
enter
out
js
sub
mov
test
fcomip
pusha
fwait
pushf
lock
cmps
(bad)
and
out
sbb
sahf
rcl
jmp
jg
dec
cld
daa
jmp
lods
shl
mov
sub
ret
fucomi
retf
push
pushf
fild
into
xor
ins
dec
mov
jmp
lods
mov
push
(bad)
outs
inc
mov
adc
(bad)
(bad)
call
pop
inc
adc
fbstp
pop
scas
iret
pusha
jbe
mov
imul
cs
inc
jmp
jmp
scas
sub
imul
lock
cmp
pop
sub
mov
ds
call
clc
in
inc
stos
(bad)
adc
cs
das
mov
cmps
sub
test
aam
inc
das
clc
(bad)
fiadd
cs
stos
push
out
add
cmc
call
data16
xor
mov
inc
stos
xor
(bad)
call
mov
neg
sub
xor
test
mov
sti
std
dec
and
inc
adc
lods
pop
sub
cld
jno
dec
xchg
xchg
sub
call
or
rcl
inc
xchg
mov
hlt
and
cmp
and
cli
mov
sbb
pushf
fwait
ret
lahf
mov
inc
dec
cmp
fwait
pop
xor
dec
adc
(bad)
mov
mov
sar
(bad)
cmp
sti
fwait
(bad)
sbb
fisttp
retw
jle
fbstp
retf
mov
scas
(bad)
mov
fldenv
setle
movs
or
shl
push
dec
push
outs
shr
adc
sub
movs
jmp
pop
or
push
sub
cmp
mov
cmps
sahf
jmp
call
das
push
or
cwde
es
out
popa
sar
mov
jecxz
cwde
mov
addr16
js
mov
push
stos
adc
and
jg
mov
xchg
jl
(bad)
(bad)
cli
or
jecxz
daa
fcomp
outs
inc
and
mov
mov
push
leave
popf
icebp
and
in
jo
imul
call
inc
push
repnz
(bad)
(bad)
dec
in
les
in
in
cli
pop
mov
pop
test
add
(bad)
jmp
add
mov
gs
xor
clc
cli
loope
das
(bad)
(bad)
(bad)
dec
jp
(bad)
inc
test
(bad)
repnz
std
fimul
mov
sbb
mov
pmulhuw
movs
enter
and
mov
stc
ret
or
scas
lods
mov
dec
pop
fadd
dec
adc
or
add
scas
add
cwde
in
sub
(bad)
inc
or
cmp
push
(bad)
in
dec
mov
push
xchg
(bad)
(bad)
(bad)
inc
push
jo
lods
imul
jne
add
sbb
jge
and
call
loop
movs
ja
ins
ss
pop
out
adc
mov
or
leave
rcl
dec
fild
mov
xchg
(bad)
lock
(bad)
mov
into
mov
mov
dec
test
out
fwait
retf
lods
adc
(bad)
push
inc
comiss
icebp
fs
jmp
std
call
sti
inc
cli
mov
(bad)
call
ss
call
mov
(bad)
sub
jecxz
in
stos
(bad)
(bad)
call
xchg
push
aad
enter
jp
das
clc
sub
stos
or
pop
mov
call
outs
jmp
mov
lods
mov
ret
dec
jmp
push
inc
mov
(bad)
fild
sbb
or
mov
les
lods
adc
aad
call
mov
in
lahf
cmc
cmp
mov
jmp
cmp
xchg
retf
retf
gs
fsub
dec
jmp
push
int
imul
std
cwde
shr
sbb
(bad)
jmp
std
test
bound
sub
gs
pop
adc
pop
push
jg
call
stos
ds
cmp
cmc
adc
stos
mul
jns
lods
and
cli
(bad)
(bad)
(bad)
fistp
gs
fnstsw
add
std
gs
mov
lds
out
gs
in
pop
push
aam
sub
mov
dec
mov
(bad)
(bad)
jg
js
inc
rcr
jmp
addr16
in
cmps
mov
mov
pop
icebp
das
clc
(bad)
(bad)
out
repnz
sbb
scas
or
add
xor
push
out
in
cmps
xchg
fidiv
(bad)
(bad)
(bad)
jmp
inc
mov
leave
sub
cdq
in
jmp
sbb
repnz
(bad)
inc
jnp
ins
(bad)
in
outs
mov
xor
ins
in
ds
popa
mov
jno
push
les
dec
push
scas
inc
stos
sbb
into
sub
cli
(bad)
(bad)
mov
rol
fsub
(bad)
pop
retf
mov
mov
(bad)
(bad)
dec
leave
leave
mov
out
sti
pushf
(bad)
daa
jnp
add
(bad)
(bad)
dec
nop
(bad)
lods
cmps
cs
mov
aas
arpl
scas
sti
dec
ret
(bad)
jg
push
add
cmp
xor
std
mov
push
xor
or
xchg
(bad)
pop
jne
sub
adc
outs
sbb
jmp
adc
ror
test
dec
iret
(bad)
(bad)
(bad)
(bad)
mov
add
test
add
aas
test
pop
or
in
data16
mov
or
mov
pop
nop
aas
into
int
push
sub
dec
mov
adc
(bad)
jg
imul
retf
jnp
inc
fbstp
xlat
aas
(bad)
lahf
mov
jo
add
(bad)
(bad)
out
gs
or
dec
mov
jl
fwait
rol
mov
in
pop
sbb
test
(bad)
(bad)
inc
(bad)
pop
(bad)
mov
std
hlt
lods
cmp
ins
sar
(bad)
push
std
add
(bad)
fild
cmps
pop
leave
(bad)
adc
shl
stos
bound
jg
push
ds
movs
inc
sub
icebp
(bad)
(bad)
dec
call
cmp
out
xor
sbb
lock
mov
xchg
xchg
lock
and
(bad)
(bad)
dec
cmps
mov
lds
mov
add
loope
xor
das
or
(bad)
(bad)
(bad)
call
inc
lds
ror
cmp
jno
inc
in
daa
in
(bad)
jmp
xor
js
cs
cmp
mov
fld
inc
(bad)
call
sbb
inc
dec
cmps
pusha
rcr
pop
or
cli
push
sub
loopne
ficom
ror
mov
jp
addr16
jl
loopne
cld
in
xchg
scas
movs
jmp
scas
call
test
push
pop
push
adc
jg
in
arpl
dec
add
pop
lock
(bad)
fbstp
test
add
arpl
movs
test
cmp
pusha
sbb
lock
(bad)
call
pop
push
sub
lea
es
dec
mov
fwait
stos
das
add
dec
pop
add
fadd
add
nop
cdq
fadd
or
(bad)
(bad)
(bad)
dec
ins
mov
or
das
out
mov
push
xor
mov
xor
in
mov
dec
pop
cmc
(bad)
mov
movs
ins
add
inc
dec
outs
mov
or
clc
(bad)
jmp
sub
scas
aam
imul
sub
(bad)
aam
jno
ins
sar
dec
inc
cld
add
fisttp
mov
stos
push
mov
push
stc
mov
jmp
mov
aas
jne
xchg
jmp
push
sbb
cmps
fisttp
ds
push
(bad)
xlat
adc
sahf
mov
(bad)
jmp
icebp
scas
xchg
sub
jge
lahf
das
(bad)
(bad)
(bad)
(bad)
mov
stos
mov
sub
pop
bswap
add
pushf
xor
leave
das
mov
sub
lods
fs
dec
sbb
xchg
xlat
cmovg
in
jle
mov
jl
jmp
jge
fdivr
jg
test
mov
gs
fsub
(bad)
sub
(bad)
call
mov
lods
add
fisub
pop
pop
js
rcl
mov
loope
mov
xchg
jg
jns
sbb
adc
add
popa
mov
enter
cmp
lods
aas
push
call
(bad)
jmp
shr
std
dec
mov
adc
je
ins
sub
mov
js
(bad)
(bad)
call
lods
lea
lods
mov
pop
inc
lahf
stos
or
lods
sti
loopne
test
adc
(bad)
(bad)
(bad)
jmp
pop
loope
and
or
call
and
scas
mov
push
(bad)
sbb
(bad)
inc
loopne
imul
push
fwait
cmps
and
imul
es
jmp
ins
xchg
push
push
(bad)
call
push
sub
(bad)
stos
cdq
pop
sahf
cmp
in
inc
adc
loopne
fwait
(bad)
fld
dec
adc
cmc
jae
movs
movs
and
sbb
call
in
lea
inc
sub
add
inc
addr16
in
or
dec
cs
mov
dec
je
push
push
sbb
push
jno
lahf
or
xor
(bad)
(bad)
jg
test
into
xor
fistp
movs
(bad)
movs
in
dec
shl
test
call
cld
(bad)
jmp
push
pop
in
and
das
add
jmp
adc
jo
push
dec
ret
mov
adc
cmp
es
add
xlat
adc
mov
dec
mov
repnz
es
jae
movs
cs
jno
pop
and
push
push
adc
fwait
shl
jmp
(bad)
(bad)
(bad)
(bad)
mov
sub
into
sbb
fadd
xor
add
in
push
cld
inc
(bad)
sbb
fldenv
inc
int
imul
or
or
rcl
jne
(bad)
(bad)
jmp
or
ins
ins
or
retf
sbb
xor
icebp
fcomp
mov
aaa
pop
xchg
aam
cmps
lods
iret
test
scas
pop
jmp
ret
jmp
lods
outs
push
xchg
fild
scas
jmp
sar
aaa
push
ror
test
and
sub
push
leave
mov
pop
mov
sti
js
jno
(bad)
(bad)
(bad)
(bad)
jmp
clc
or
and
gs
sbb
aaa
mov
fwait
out
dec
push
push
sti
(bad)
call
add
ror
retf
(bad)
lock
sub
fnstenv
add
sub
rcl
jno
mov
stos
imul
(bad)
(bad)
jmp
test
dec
outs
std
fcomp
jns
mul
ja
into
fsubr
(bad)
dec
adc
ins
sub
pusha
out
jle
xor
call
int3
xor
mov
jns
ja
outs
mov
loopne
xchg
mov
mov
sub
(bad)
inc
inc
or
xchg
into
mov
dec
mov
and
adc
shl
pop
mov
push
mov
(bad)
(bad)
fbld
pop
mov
lock
inc
and
mov
lea
and
inc
(bad)
out
sub
in
or
add
aad
ins
mov
pop
mov
(bad)
(bad)
call
sbb
test
call
(bad)
mov
call
call
sahf
gs
cmp
adc
das
jmp
add
std
xor
ror
in
cmp
mov
imul
(bad)
(bad)
dec
cmp
adc
fcmovnbe
rol
in
outs
ins
(bad)
les
loop
stos
aas
xchg
in
mov
sub
std
out
sbb
cwde
dec
fst
inc
call
push
mov
(bad)
(bad)
mov
jp
or
daa
(bad)
daa
adc
and
lods
out
in
imul
add
loopne
lds
inc
jno
call
or
ins
in
lods
movs
cmp
imul
fiadd
retf
in
add
inc
cs
lock
xchg
push
sahf
aam
in
sbb
lods
shr
mov
fisubr
fcomp
stos
addr16
push
push
cwde
sar
mov
and
jnp
sub
inc
cmp
ins
sub
adc
push
fidivr
(bad)
(bad)
jmp
addr16
sti
jne
stos
and
in
adc
in
lahf
inc
push
movs
inc
movs
gs
(bad)
(bad)
inc
scas
imul
fnstcw
lods
sbb
jmp
iret
sub
cmps
in
or
jmp
add
mov
movs
lods
sahf
or
js
(bad)
dec
outs
iret
add
retf
in
scas
jnp
aas
(bad)
(bad)
dec
mov
loope
fld
or
and
hlt
mov
pop
scas
push
aas
sbb
add
dec
inc
shr
jmp
push
lock
push
jg
nop
jg
(bad)
retf
hlt
or
add
mov
retf
and
sbb
outs
(bad)
inc
pop
jno
dec
scas
fnstsw
iret
lahf
dec
inc
add
jg
cld
mov
iret
mov
inc
mov
sar
push
and
adc
and
sti
sub
fabs
dec
aad
cdq
(bad)
(bad)
(bad)
push
into
scas
sub
fwait
add
in
sub
cli
push
test
add
xor
mov
(bad)
cmps
jmp
lahf
xchg
outs
out
cmps
add
mov
arpl
call
cmp
cmps
jmp
cmps
mov
fisubr
xacquire
ins
enter
inc
ins
pop
movs
xchg
je
bound
(bad)
(bad)
call
ds
sub
ins
js
mov
mov
sti
mov
shr
jmp
jbe
test
hlt
scas
cli
repnz
retf
imul
mov
(bad)
cmp
xchg
sub
fbld
xchg
mov
jnp
loopne
(bad)
(bad)
call
xor
sub
cs
sbb
das
scas
inc
and
mov
shl
or
push
push
mov
mov
outs
fs
inc
xchg
dec
mov
imul
add
mov
aas
mov
fdivr
jle
cwde
movs
dec
add
sti
(bad)
(bad)
(bad)
jmp
pop
test
mov
ds
xor
rol
iret
sbb
mov
(bad)
jmp
test
adc
lods
inc
int
and
dec
jno
sbb
das
add
pop
pop
out
daa
jmp
aam
pop
sub
mov
test
aam
mov
push
rcr
jecxz
mov
lea
xchg
inc
fsub
xor
mov
inc
scas
xchg
dec
movs
call
dec
jl
(bad)
(bad)
(bad)
jg
in
mov
sub
retf
test
daa
cwde
mov
retf
add
mov
(bad)
mov
(bad)
(bad)
adc
rcr
aas
lods
or
loopne
push
mov
les
jmp
mov
dec
aam
pop
test
pop
xchg
cmp
ins
dec
fist
inc
sub
outs
in
outs
imul
in
and
sub
movs
movs
in
and
std
jmp
or
out
aaa
test
mov
cld
(bad)
jmp
xchg
mov
test
mov
pop
adc
fs
call
cmp
dec
mov
inc
cmp
jp
(bad)
gs
div
cmp
aad
xchg
jmp
fcomp
inc
bound
sbb
jmp
xchg
retf
(bad)
call
out
int
inc
sub
add
mov
pop
adc
mov
mov
and
add
test
lahf
iret
fs
loope
popa
or
out
out
in
popf
mov
leave
add
sub
inc
push
cmp
mov
sub
xchg
loop
imul
sar
dec
fmul
mov
fnsave
dec
cmp
and
std
lock
cmp
or
dec
cmp
fild
mov
xlat
ds
and
call
(bad)
jge
push
sahf
mov
inc
cmp
sbb
aaa
cld
lea
or
push
scas
dec
sbb
jecxz
pop
scas
xchg
int
(bad)
jmp
mov
test
mov
dec
jae
and
mov
push
lock
cmc
(bad)
(bad)
inc
(bad)
push
dec
call
add
inc
adc
dec
and
addr16
jnp
int
hlt
outs
fsub
xor
(bad)
or
loopne
push
iret
xor
(bad)
(bad)
fstp
retf
lods
(bad)
mov
int
mov
mov
aas
jno
(bad)
mov
xor
popf
ins
mov
dec
std
cmp
out
sbb
clc
(bad)
(bad)
jmp
pop
mov
scas
cmp
lock
mov
add
dec
cli
ucomiss
out
jb
xor
leave
cmp
call
movs
pop
sbb
fs
fisttp
js
scas
sub
sbb
jge
pop
loope
imul
jge
fist
out
xchg
xchg
dec
sbb
push
fldcw
into
jmp
pop
popa
jecxz
sub
push
retf
mov
mov
(bad)
jg
or
sub
dec
pop
inc
ss
test
lahf
retf
inc
or
xor
add
aad
mov
push
je
popa
sub
(bad)
call
ins
popf
fdiv
xor
jb
mov
push
clc
stos
leave
mov
xchg
call
ror
ins
fisub
jbe
jo
cld
movs
cmps
inc
imul
jnp
mov
(bad)
(bad)
jmp
aad
aas
cwde
(bad)
lahf
js
adc
mov
mov
sbb
outs
mov
inc
aaa
mov
and
mov
push
retf
xchg
add
pop
fidivr
mov
mov
scas
sub
ss
mov
lods
cmp
imul
sub
jmp
xchg
mov
or
add
inc
mov
push
jbe
sub
lock
and
(bad)
add
xchg
cmp
stos
test
mov
jmp
mov
inc
cld
cmps
push
dec
movs
in
retf
mov
jns
cmps
pop
fisttp
jmp
cmp
pushf
fisttp
xchg
cld
sub
mov
or
pop
(bad)
jmp
(bad)
(bad)
(bad)
jmp
test
retf
ins
test
and
iret
ror
fisttp
pop
je
jl
gs
(bad)
(bad)
(bad)
dec
mov
lea
and
xchg
mov
jb
or
sub
adc
adc
(bad)
dec
sub
popa
daa
adc
push
mov
repz
daa
pop
call
push
and
fist
add
add
sbb
dec
adc
clc
js
retf
dec
mov
(bad)
call
pop
fisub
and
sub
aaa
mov
shl
out
(bad)
outs
or
jp
xor
lods
movs
add
(bad)
(bad)
ds
ffreep
sub
xor
mov
dec
test
retf
popf
or
fsub
xchg
mov
jmp
std
in
mov
hlt
inc
xor
fld
cmp
sub
call
ds
(bad)
cs
inc
push
(bad)
sub
outs
clc
(bad)
jp
dec
imul
add
fistp
aam
add
data16
pop
dec
loope
jmp
mov
cmps
jmp
mov
sub
dec
lds
addr16
add
dec
fcom
push
lahf
jg
ror
inc
sbb
mov
sbb
(bad)
(bad)
jg
dec
test
dec
mov
pop
scas
pop
cmps
xchg
pushf
stos
into
mov
mov
fst
push
jl
enter
repnz
(bad)
(bad)
mov
push
and
xor
jg
adc
sbb
sub
(bad)
(bad)
(bad)
dec
bound
cmp
mov
and
jle
cmp
xor
push
push
mov
(bad)
mov
dec
dec
cmp
push
or
(bad)
cld
cmps
movs
mov
stos
jg
call
ins
and
(bad)
(bad)
jmp
ror
sbb
cmps
push
mov
pusha
mov
mov
shl
(bad)
jmp
push
fs
in
aas
imul
stos
sbb
xchg
xor
ror
mov
in
call
sbb
les
add
into
xchg
xor
cmps
bound
sub
inc
push
mov
scas
mov
xchg
les
pop
sbb
add
enter
mov
sti
(bad)
call
std
sbb
pushf
xchg
jp
adc
push
jp
sub
stos
icebp
int3
aas
out
(bad)
call
cmp
xchg
lahf
xchg
ficomp
test
sbb
dec
iret
push
sbb
(bad)
push
mov
call
ja
clc
or
cmp
pop
sbb
cmc
(bad)
call
cmp
inc
push
add
dec
push
mov
outs
pop
(bad)
(bad)
call
hlt
dec
dec
std
mov
jle
ror
dec
mov
or
mov
(bad)
fild
adc
xlat
sbb
std
jmp
add
cmp
jnp
retf
dec
push
mov
or
les
push
inc
inc
dec
adc
call
movs
push
cdq
xchg
mov
or
push
cmp
dec
adc
aad
in
inc
(bad)
push
retf
call
sahf
mov
(bad)
call
inc
adc
aad
fcmovbe
add
test
hlt
(bad)
(bad)
inc
stos
loop
outs
sbb
mov
pop
mov
pop
mov
fwait
mov
test
pop
scas
fst
push
mov
and
aaa
sbb
out
int
dec
aas
sbb
cli
mov
xchg
mov
mov
mov
(bad)
cmp
adc
enter
dec
sbb
push
push
std
sub
(bad)
jg
imul
adc
adc
std
sbb
push
je
popf
jmp
movs
sti
(bad)
retf
cmps
xchg
add
xchg
lea
pop
xchg
and
or
scas
mov
push
fs
outs
mov
mov
and
(bad)
dec
out
mov
idiv
pop
test
ficomp
pushf
cs
std
outs
inc
xchg
mov
mov
stos
daa
or
add
push
retf
pusha
pop
sahf
inc
test
fwait
stos
ins
aad
lea
pop
mov
das
mov
out
rol
lods
std
push
pop
clc
pop
packssdw
jnp
(bad)
sar
push
mov
sub
aam
(bad)
mov
inc
movs
cmps
xchg
popa
test
sub
outs
pop
mov
jle
(bad)
cmp
add
inc
sbb
(bad)
fs
in
(bad)
jecxz
jmp
sar
jge
les
fisubr
pushf
xor
es
xor
call
xor
adc
mov
or
hlt
aaa
ret
repnz
or
in
(bad)
call
push
les
cs
add
ja
or
add
push
std
push
scas
xor
sbb
cli
fs
pusha
push
jmp
out
add
(bad)
(bad)
jmp
and
ds
fwait
mov
in
imul
lock
ret
mov
and
inc
and
(bad)
inc
or
jmp
mov
jnp
(bad)
pop
sbb
jmp
pushf
mov
sub
and
aas
mov
(bad)
dec
sar
fisubr
pop
outs
icebp
mov
call
call
dec
call
cs
in
add
(bad)
(bad)
fistp
ins
data16
adc
scas
push
(bad)
(bad)
movs
pop
(bad)
int3
xor
jmp
pop
mov
dec
push
mov
pop
loopne
fiadd
jge
mov
inc
(bad)
fist
dec
lock
call
(bad)
call
nop
and
and
cwde
jns
xchg
mov
vmovntpd
jmp
sbb
fisttp
mov
mov
mov
mov
(bad)
(bad)
dec
xor
ret
adc
sub
fwait
xor
adc
addr16
pushf
sar
lea
jo
sub
mov
test
pop
rcl
xchg
inc
jg
cmp
cs
mov
(bad)
pop
inc
sbb
popf
and
dec
sub
adc
inc
adc
std
dec
push
(bad)
(bad)
(bad)
jmp
daa
and
mov
push
pop
das
(bad)
cmp
xchg
jge
pop
add
xchg
mov
cmps
xor
(bad)
call
push
(bad)
or
bound
add
and
cli
adc
sbb
mov
in
das
mov
mov
jmp
jmp
(bad)
(bad)
jmp
pop
sbb
xchg
cmp
ins
adc
stos
and
inc
int
retf
or
(bad)
sar
(bad)
(bad)
fld
imul
sub
stos
imul
add
test
pop
fwait
and
sbb
mov
lods
jmp
and
enter
or
jnp
std
(bad)
inc
mov
push
xchg
fldl2t
shl
fild
aaa
dec
lods
mov
lods
lds
ret
clc
(bad)
fisttp
mov
enter
iret
lods
ret
aad
xor
stos
(bad)
dec
xchg
or
sbb
and
push
push
jmp
popf
out
test
push
mov
aas
xchg
jle
push
dec
sbb
dec
add
sar
and
call
and
dec
pop
jno
(bad)
call
xor
test
int3
xchg
js
xor
xchg
stos
(bad)
dec
stos
inc
(bad)
xchg
xor
pop
int3
xor
sahf
sahf
stos
inc
inc
sub
nop
ret
(bad)
inc
nop
inc
and
xchg
es
and
jp
inc
inc
cdq
or
xor
or
and
(bad)
(bad)
mov
fimul
cmp
mov
jge
jmp
inc
call
mov
gs
enter
aas
repnz
(bad)
jmp
ret
xor
sahf
bnd
push
sbb
or
retf
adc
add
or
lahf
sub
push
add
mov
dec
das
fist
add
nop
fsubrp
stos
lahf
(bad)
(bad)
(bad)
jl
xchg
aas
loopne
fs
repnz
dec
xor
stos
cmc
dec
and
(bad)
call
(bad)
popf
or
sar
mov
mov
jge
xchg
dec
stc
test
sub
cmp
ret
in
push
fbld
mov
test
inc
xor
mov
or
leave
gs
adc
retf
(bad)
(bad)
(bad)
mov
fwait
mov
je
mov
mov
xor
retf
xor
div
pop
(bad)
(bad)
(bad)
cmp
inc
and
or
jmp
pop
lods
icebp
sub
test
dec
leave
clc
inc
daa
fdivr
sub
div
mov
call
repnz
lds
push
(bad)
add
(bad)
jg
stos
clc
pop
cmps
adc
mov
and
or
mov
jmp
daa
scas
cmp
enter
xchg
pop
gs
dec
scas
in
shl
mov
ss
aas
fldcw
out
and
stos
dec
(bad)
cmp
cli
(bad)
jmp
mov
mov
aas
fwait
lock
imul
jmp
sahf
(bad)
imul
cmp
fisttp
xchg
icebp
das
test
mov
pop
imul
pop
pop
sub
jae
push
ret
imul
lods
sub
add
(bad)
(bad)
push
mov
bound
adc
inc
imul
adc
xor
(bad)
(bad)
mov
and
xchg
lods
imul
div
int
push
(bad)
push
xlat
push
push
jb
add
outs
(bad)
(bad)
(bad)
inc
daa
lock
push
scas
lahf
lahf
int3
mov
loop
and
push
xor
enter
sbb
fist
pop
xchg
popf
and
jge
mov
mov
cmp
icebp
jo
push
sbb
outs
lods
lods
cld
mov
iret
(bad)
(bad)
out
clc
ficom
repnz
mov
push
outs
adc
pop
xor
mov
(bad)
(bad)
(bad)
cmp
imul
xchg
jno
(bad)
pop
shr
(bad)
retf
jp
jmp
(bad)
call
push
sub
clc
add
adc
push
push
sub
jns
gs
(bad)
(bad)
mov
cdq
cdq
cmps
inc
out
sub
dec
in
ins
xchg
cmp
inc
(bad)
jbe
pop
mov
push
adc
lods
(bad)
(bad)
mov
imul
mov
fistp
pop
aas
sbb
jmp
out
cmp
xor
jp
dec
add
jmp
cmp
(bad)
call
mov
dec
cli
jecxz
das
push
sub
(bad)
sbb
pusha
jp
inc
ret
ja
inc
mov
cld
pushf
adc
xchg
sar
(bad)
(bad)
cmp
or
fld
cs
cmp
repz
std
sbb
add
or
push
or
jae
loopne
(bad)
jmp
stos
mov
retf
cmp
sbb
mov
dec
sbb
cwde
push
imul
rcr
mov
sahf
mov
popa
movs
(bad)
call
mov
sbb
sbb
outs
push
jp
ins
movs
jle
in
lock
jp
les
inc
(bad)
outs
xchg
mov
inc
mov
add
inc
enter
inc
push
scas
pop
mov
movs
add
(bad)
call
stos
mov
cs
pop
fadd
icebp
mov
jb
psubusb
push
sbb
and
pop
jo
cs
fs
out
and
mov
pop
dec
loope
aaa
cmp
call
movs
arpl
jmp
retf
iret
aaa
pop
stos
sub
jp
dec
movs
adc
xchg
loop
push
sbb
shr
in
iret
sbb
(bad)
(bad)
(bad)
mov
mov
inc
aaa
jae
push
jle
(bad)
loop
cmp
mov
push
icebp
mov
jecxz
fbld
dec
sbb
xchg
mov
sbb
sbb
(bad)
call
sbb
cmp
rcr
stos
adc
push
outs
mov
std
ins
stos
mov
dec
sbb
cmp
mov
(bad)
(bad)
(bad)
call
fist
xor
shl
sub
(bad)
call
jb
les
enter
push
xor
adc
sbb
cmps
lea
dec
pop
scas
mov
pop
add
push
pop
(bad)
(bad)
push
jp
lods
mov
pop
movs
xchg
fnstsw
stos
test
scas
clc
(bad)
(bad)
dec
dec
sub
or
sbb
mov
aad
xchg
ret
out
push
inc
sbb
in
and
mov
xchg
pop
jmp
jecxz
add
xor
je
lock
mov
arpl
es
call
xor
call
jmp
mov
and
std
in
xchg
and
cmps
xchg
dec
les
dec
fstp
stos
fs
(bad)
ficomp
iret
int
dec
and
stos
test
dec
pusha
xchg
mov
push
push
or
fwait
jb
loop
mov
std
dec
scas
xor
mov
and
mov
cli
mov
and
xor
jmp
inc
(bad)
nop
mov
adc
mov
jg
jne
cmp
cmp
scas
xor
cs
clc
fcomp
lods
mov
call
cmps
movs
dec
clc
jns
jmp
xchg
movs
retf
cwde
test
push
mov
retf
(bad)
jmp
call
in
mov
mov
jg
aam
cmp
dec
(bad)
mov
aas
sar
push
out
adc
jne
adc
mov
xor
mov
aad
(bad)
(bad)
(bad)
jg
int
sbb
fsub
ret
sbb
dec
sub
sbb
add
aad
xchg
pop
stos
cmp
and
jg
or
inc
mov
ss
jmp
jne
xor
stos
xchg
jecxz
ficom
lahf
jge
shl
(bad)
(bad)
(bad)
ficomp
ins
das
sbb
retf
adc
sbb
test
sar
cld
push
cmps
mov
adc
sahf
call
jle
movs
and
imul
hlt
jmp
mov
jg
cmp
stos
ds
(bad)
inc
sub
shl
sar
mov
stos
sub
pop
add
(bad)
push
fild
pop
cmc
(bad)
fstp
xchg
dec
mov
pusha
sti
sub
xchg
mov
clc
aad
gs
(bad)
std
xor
inc
movs
inc
into
add
jg
mov
mov
out
inc
xchg
xchg
sub
int3
xor
not
mov
dec
(bad)
call
add
fsub
cmp
sub
cld
and
and
cmp
mov
xchg
add
xor
jl
dec
mov
add
xchg
or
and
popf
test
(bad)
cmp
cmp
sub
out
stos
cs
inc
(bad)
jle
push
sub
(bad)
cmp
xchg
inc
int3
push
add
mov
sbb
pop
pop
jns
daa
dec
push
(bad)
jg
cmps
and
push
push
mov
hlt
out
sbb
pushf
or
(bad)
(bad)
jg
mov
data16
lods
loopne
jmp
pusha
movs
sbb
or
add
hlt
call
and
repnz
add
fcmove
cmp
fiadd
(bad)
(bad)
mov
loopne
popa
mul
hlt
lahf
or
xor
(bad)
(bad)
jg
ins
inc
mov
jg
mov
inc
xchg
bnd
jb
mov
ins
stos
(bad)
(bad)
(bad)
(bad)
in
mov
add
rcl
test
push
retf
lods
std
in
movs
call
cmp
(bad)
out
cli
(bad)
jmp
adc
fist
shl
xchg
scas
xor
pusha
adc
jmp
and
cs
xor
enter
retf
clc
(bad)
jmp
int3
inc
lock
add
xor
test
xchg
pop
mov
adc
dec
lods
xchg
and
push
pop
push
leave
(bad)
jmp
daa
and
cmp
dec
mov
movs
cmp
movs
jmp
stos
(bad)
scas
push
jno
inc
(bad)
in
pop
xchg
call
adc
test
adc
call
(bad)
(bad)
(bad)
call
inc
fst
inc
(bad)
xchg
dec
popa
xor
sub
aas
scas
xor
iret
pop
cli
jg
adc
ja
cli
mov
jl
sub
(bad)
outs
mov
ins
sbb
pop
sbb
cmps
(bad)
pop
mov
mov
mov
in
int
mov
jecxz
and
and
ja
(bad)
(bad)
call
mov
arpl
mov
mov
hlt
iret
fist
xchg
sti
(bad)
(bad)
(bad)
(bad)
(bad)
jle
test
or
aas
adc
add
sub
push
mov
jo
outs
dec
push
and
out
add
jmp
std
stc
jnp
(bad)
(bad)
inc
sub
xor
cmp
sub
cmps
daa
add
clc
(bad)
call
pop
jl
retf
pop
push
jl
test
jl
call
or
mov
outs
mov
jbe
adc
test
push
xchg
stos
cmp
push
test
mov
jmp
in
and
push
xchg
mov
(bad)
(bad)
jg
in
cdq
xchg
sub
fild
leave
adc
loope
xor
lock
mov
jmp
and
imul
jge
test
adc
in
cmp
dec
add
jge
add
adc
add
cmps
sub
es
dec
pushf
stos
ficom
in
cmp
(bad)
inc
daa
inc
sub
mul
jmp
ret
dec
test
push
mov
repz
adc
scas
and
(bad)
jmp
dec
mov
call
mov
add
jmp
adc
les
stos
pop
cdq
(bad)
(bad)
push
shl
and
sbb
and
push
mov
scas
xor
cmp
mov
popa
push
add
or
(bad)
(bad)
jmp
bound
adc
pop
sub
ret
dec
test
ror
pop
lods
xchg
int3
jmp
loopne
mov
retf
je
adc
or
in
cli
add
mov
(bad)
jmp
jmp
jbe
aas
icebp
jb
xchg
dec
sbb
adc
push
or
nop
stos
std
(bad)
(bad)
(bad)
jp
and
inc
cdq
loope
sub
arpl
mov
stos
imul
call
inc
stos
inc
scas
in
mov
xchg
mov
mov
jmp
pop
fs
pop
add
mov
pop
cmp
sub
mov
(bad)
push
push
dec
push
imul
sub
mov
movs
push
iret
outs
(bad)
addr16
test
(bad)
(bad)
jmp
cmps
ins
pop
les
jae
jmp
js
loopne
adc
mov
mov
cmp
mov
out
fist
shl
dec
std
(bad)
out
outs
fadd
sub
mov
mov
stos
mov
(bad)
jg
sbb
pop
jns
ret
inc
dec
adc
movs
jne
push
mov
(bad)
mov
cmp
pop
gs
pop
sahf
or
dec
sti
push
cs
xor
(bad)
(bad)
(bad)
call
fidiv
add
pop
pop
or
fwait
lods
mov
(bad)
movs
stos
inc
cmps
aas
jmp
call
jg
dec
inc
(bad)
mov
out
inc
mov
out
rcl
dec
add
stos
sub
jmp
xchg
mov
cld
retf
loope
jmp
pop
dec
mov
and
scas
dec
mov
(bad)
aam
stos
mov
scas
bound
jmp
fisub
push
pop
in
dec
mov
cld
mov
mov
mov
fild
mov
jp
mov
mov
loope
sub
xchg
outs
outs
lods
je
jmp
cmc
nop
dec
cs
mov
retf
das
adc
sub
xor
dec
lock
dec
nop
sub
mov
call
xchg
dec
jns
fnstcw
test
(bad)
mov
adc
and
ss
add
cmp
retf
push
cmp
(bad)
(bad)
push
popa
xchg
stc
dec
jb
adc
imul
or
fimul
mov
inc
dec
imul
repz
std
cld
stos
push
sbb
and
push
sbb
leave
(bad)
or
(bad)
(bad)
inc
stc
icebp
imul
test
mov
mov
mov
out
xor
(bad)
(bad)
jmp
push
test
fsubrp
pop
sti
adc
stos
movs
add
scas
inc
xchg
rol
imul
adc
stos
rcr
mov
cmps
popf
mov
cmps
cld
retf
(bad)
push
js
mov
cmp
lock
sti
(bad)
loopne
push
mov
jb
fisttp
xor
iret
adc
pusha
fsub
push
int3
nop
hlt
jg
mov
lock
jae
cs
aad
rcr
mov
outs
jae
popa
or
call
scas
setp
adc
clc
test
and
mov
loope
ja
xchg
jne
(bad)
(bad)
fld
xor
or
cmp
push
call
push
(bad)
(bad)
push
cmp
retf
int
jmp
pusha
and
out
and
and
sub
jmp
jmp
(bad)
jg
mov
leave
jnp
pop
popf
jae
and
loope
pop
(bad)
push
shr
mov
(bad)
ror
xor
mov
(bad)
jg
dec
and
sub
loopne
inc
dec
cmps
retf
and
inc
dec
mov
add
jne
movs
sbb
out
mov
dec
mov
call
dec
jb
mov
mov
sub
(bad)
(bad)
fbstp
fbld
leave
fsub
pusha
stos
inc
in
push
daa
add
add
int3
ja
call
int3
pop
cmps
push
jne
(bad)
(bad)
(bad)
jmp
jl
push
pop
jae
not
stos
(bad)
sbb
(bad)
pop
push
test
cli
cmp
sbb
dec
nop
sti
mov
and
(bad)
(bad)
dec
or
or
mov
mov
fidiv
daa
ret
jmp
xor
inc
retf
xor
enter
fld
or
(bad)
call
int
jno
pop
add
icebp
and
std
mov
test
loope
cmp
fcmovnu
jo
inc
js
in
and
(bad)
xchg
retf
rol
inc
sub
dec
jmp
jb
sub
rol
pop
loopne
fnstcw
call
pop
xor
inc
mov
and
test
push
cmp
(bad)
dec
jmp
push
(bad)
push
fsubr
cmp
inc
iret
stos
jecxz
xor
xchg
mov
sbb
dec
loope
jno
sub
repnz
retf
clc
xlat
bound
push
sbb
pop
jmp
lods
lods
dec
aad
sbb
and
add
test
pop
iret
sub
(bad)
fild
(bad)
daa
cwde
movs
test
ss
dec
mov
movs
(bad)
(bad)
(bad)
call
ficomp
cmps
outs
mov
les
pop
cmp
mov
push
adc
fs
jmp
adc
push
dec
mov
mov
add
or
cmps
stos
fs
out
ds
or
jle
(bad)
mov
xchg
cmp
fwait
pop
std
std
and
adc
daa
fist
es
mov
push
stc
mov
jg
inc
mov
sbb
into
push
cdq
(bad)
lods
dec
je
lods
pop
fidiv
mov
xor
les
(bad)
(bad)
(bad)
mov
out
cmc
jbe
pop
ja
or
leave
int3
push
or
add
aam
call
scas
clc
lods
pop
push
addr16
paddusb
imul
cwde
push
dec
push
xor
mov
(bad)
call
sub
pusha
sbb
test
stos
cdq
pusha
mov
in
test
(bad)
rcl
mov
iret
sbb
sub
or
fist
in
iret
(bad)
jmp
cs
inc
enter
jne
or
test
repnz
in
dec
jmp
in
rol
fs
sub
jl
ins
dec
push
sub
retf
int3
popf
jns
sbb
and
sbb
sbb
jne
and
int3
std
(bad)
(bad)
out
stos
outs
mov
leave
dec
(bad)
aam
cmp
retf
inc
adc
xchg
cwde
retf
and
and
jg
add
repz
or
mov
stos
mov
push
sti
dec
(bad)
(bad)
(bad)
jmp
in
mov
das
add
fdiv
add
jmp
push
pushf
lods
xlat
fs
(bad)
(bad)
jmp
xchg
clc
fld
adc
aam
sbb
cmp
jecxz
mov
cmp
xchg
stos
add
stos
imul
cmp
and
adc
or
retf
xchg
(bad)
fild
lods
sub
cmps
fldenv
lds
lods
cli
imul
outs
add
or
test
outs
mov
repz
push
(bad)
out
mov
fisttp
adc
(bad)
(bad)
(bad)
dec
dec
mov
test
mov
mov
add
ins
fisttp
push
lods
stos
cld
mov
inc
fcomip
or
adc
or
cmps
fild
(bad)
fmul
push
xor
sbb
add
(bad)
(bad)
(bad)
(bad)
mov
stos
pop
aaa
mov
stos
movs
call
xor
ins
stos
lods
lea
retf
cmps
inc
shl
mov
aas
jmp
fild
shl
out
aaa
ret
repz
(bad)
mov
mov
dec
mov
pop
pushf
sub
fild
jmp
dec
pop
push
aad
xchg
jle
psrad
enter
jmp
outs
cmps
push
aad
aas
xchg
das
adc
es
xchg
js
jns
scas
(bad)
(bad)
pop
or
mov
mov
test
or
pop
ja
push
fistp
leave
gs
(bad)
(bad)
jmp
imul
out
ins
xlat
jo
push
repnz
retf
(bad)
fs
(bad)
(bad)
call
das
or
ret
iret
pop
pop
inc
fisttp
dec
mov
xor
imul
pop
hlt
(bad)
call
push
stos
or
add
mov
sar
(bad)
dec
xchg
call
in
inc
inc
lea
leave
dec
mov
mov
cmp
ret
and
cs
sbb
inc
xor
mov
rcl
sub
stos
stos
push
mov
es
pop
loopne
pop
(bad)
inc
scas
add
push
dec
pop
jmp
arpl
ret
mov
add
movs
stos
rcl
mov
cmp
push
ja
add
repnz
call
sub
(bad)
jmp
jnp
sub
push
outs
pop
cmps
push
jmp
std
(bad)
call
mov
and
mov
in
jnp
mov
add
mov
or
sub
jmp
lds
xchg
movs
xor
cmps
mov
(bad)
(bad)
dec
xor
ret
sbb
jmp
aam
mov
jecxz
dec
mov
dec
inc
(bad)
div
sbb
mov
cmp
js
or
outs
jecxz
clc
dec
std
pop
imul
mov
aaa
daa
in
add
sub
xchg
jbe
mov
fild
mov
scas
call
(bad)
jg
jo
scas
jns
sub
imul
sub
lds
and
pop
out
jmp
loop
stos
ret
int3
mov
ret
xlat
and
stc
pop
jecxz
imul
test
jl
xchg
sbb
sub
outs
sbb
(bad)
jmp
imul
call
cmps
aas
push
mov
sbb
stos
pop
inc
sahf
sub
out
adc
out
(bad)
fld
in
(bad)
(bad)
(bad)
dec
(bad)
data16
xchg
cs
jmp
sub
test
push
std
icebp
(bad)
(bad)
dec
jecxz
movs
dec
mov
cmps
arpl
fcmovnb
ja
and
adc
pop
add
repnz
mov
and
add
xchg
enter
inc
xchg
addr16
mov
xor
xor
jb
scas
nop
(bad)
(bad)
(bad)
(bad)
aas
mov
xchg
retf
and
(bad)
(bad)
mov
lea
adc
push
xlat
jge
in
cmp
out
in
(bad)
dec
sub
js
inc
pop
leave
cld
cmp
push
icebp
push
mov
push
clc
push
enter
or
stos
gs
lods
and
or
in
xchg
xchg
(bad)
dec
into
pop
adc
scas
in
call
add
jg
or
mov
or
push
add
mov
out
mov
sub
pop
sub
adc
or
inc
push
movs
jns
push
adc
loopne
sub
call
shr
and
xchg
cmp
mov
dec
pusha
add
aam
inc
jb
sbb
dec
out
dec
lods
lods
sbb
ss
imul
mov
jmp
imul
xchg
arpl
(bad)
fisttp
popa
(bad)
(bad)
mov
(bad)
call
mov
xor
push
mov
icebp
and
daa
xchg
cmps
adc
inc
aam
cmp
mov
xor
add
(bad)
jg
adc
cmc
sub
push
mov
rsm
xlat
repnz
loope
cdq
jbe
rcr
imul
pop
adc
mov
push
push
clc
sub
adc
(bad)
xchg
(bad)
(bad)
jmp
jmp
out
not
jbe
mov
pop
cmp
fdivrp
(bad)
(bad)
inc
and
or
div
(bad)
ror
sahf
adc
out
mov
into
cwde
(bad)
retf
adc
fild
cmp
and
mov
(bad)
(bad)
(bad)
in
sub
out
scas
cli
std
jnp
lds
inc
mov
sbb
loop
std
(bad)
(bad)
jmp
repnz
adc
dec
or
inc
(bad)
(bad)
out
das
sub
in
mov
in
mov
(bad)
(bad)
(bad)
(bad)
fadd
mov
sar
push
ins
sahf
retf
sbb
std
dec
or
mov
add
mov
and
in
jecxz
stos
dec
test
retf
mov
cmp
add
cmc
repz
dec
pop
mov
push
xchg
xor
or
stos
push
sub
push
sub
lock
cdq
xchg
dec
push
(bad)
adc
scas
add
loopne
dec
stc
rcr
or
ret
xchg
sti
xor
(bad)
(bad)
dec
add
dec
stos
mov
movs
and
dec
cmps
push
jle
inc
mov
(bad)
(bad)
sti
call
push
push
cmp
cmp
stos
mov
add
retf
inc
cli
stos
(bad)
jg
lahf
repnz
mov
push
mov
ret
outs
bound
sbb
sub
into
fimul
push
pop
xchg
dec
push
jbe
adc
pop
inc
jle
inc
(bad)
mov
cmp
stos
add
call
sub
das
fxch
or
(bad)
cld
mov
stos
scas
std
mov
or
call
dec
push
adc
xor
add
stos
and
jg
mov
mov
inc
add
(bad)
jg
data16
and
and
leave
pop
sbb
xchg
lock
push
mov
or
clc
scas
ror
push
xchg
stos
add
aaa
pop
fst
hlt
call
cli
push
pop
retf
mov
xchg
mov
push
mov
in
aad
test
add
cwde
jle
add
mov
and
(bad)
(bad)
jmp
xchg
jle
jmp
cmp
and
test
inc
cli
sti
jns
xchg
sub
rcr
test
push
mov
jb
out
push
mov
(bad)
(bad)
(bad)
cmp
jb
dec
xchg
stos
stos
dec
push
adc
or
jb
stos
(bad)
(bad)
(bad)
jmp
mov
dec
leave
ins
cmps
cwde
es
aad
(bad)
jmp
inc
jge
jge
sbb
push
(bad)
(bad)
push
mov
mov
test
repnz
mov
dec
fstp
seto
pusha
mov
sub
(bad)
jmp
daa
jg
loop
stos
mov
fst
ror
sbb
dec
out
and
adc
sub
mov
push
inc
aam
int
add
mov
fld
in
pop
imul
mov
mov
jne
jne
cld
jne
push
xor
or
mov
(bad)
(bad)
mov
outs
shr
jbe
ins
cmc
(bad)
xchg
rcl
xor
mov
xchg
cmp
(bad)
fistp
push
pop
add
clc
mov
test
cld
pusha
jmp
mov
jmp
mov
jbe
scas
adc
clc
mov
dec
xchg
fs
adc
mov
call
cld
aam
repz
repnz
movs
mov
cmp
out
das
fs
imul
push
push
jbe
es
loopne
xchg
add
mov
add
(bad)
call
(bad)
(bad)
mov
cmp
inc
ins
aad
pop
sub
sub
fild
scas
loope
or
pop
cmp
or
(bad)
(bad)
push
js
int
mov
rol
lock
loop
in
lock
ret
int
or
push
outs
(bad)
mov
test
scas
jg
(bad)
(bad)
(bad)
ffreep
ret
jnp
push
(bad)
dec
retf
enter
push
inc
jp
fistp
or
outs
mov
mov
xchg
(bad)
fild
in
(bad)
lahf
mov
sbb
inc
(bad)
mov
mov
add
idiv
mov
in
(bad)
(bad)
(bad)
call
aad
sbb
jge
push
adc
aas
out
mov
(bad)
or
stos
mov
ss
(bad)
out
clc
call
xchg
and
mov
sub
mov
xchg
dec
test
add
(bad)
jmp
sub
sti
std
shr
aas
xchg
xor
scas
imul
(bad)
(bad)
(bad)
(bad)
cmp
fidivr
mov
call
ins
dec
pop
xchg
dec
scas
mov
mov
push
mov
lods
in
fs
pop
es
adc
add
pop
add
repnz
(bad)
jmp
push
mov
pop
test
sub
push
jmp
mov
jg
mov
sub
(bad)
(bad)
(bad)
(bad)
inc
int
pop
cmp
sub
mov
xor
int
jo
movs
pop
push
das
adc
aam
lods
jge
pusha
imul
push
fisttp
loope
sar
xchg
add
mov
gs
pushf
test
mov
lods
jmp
daa
mov
call
icebp
stos
pop
cld
shl
loopne
aad
or
jmp
addr16
and
dec
adc
adc
xchg
test
mov
jmp
movs
sbb
(bad)
jp
jg
add
sub
fisubr
std
jg
call
jae
data16
sub
pop
dec
mov
push
adc
(bad)
mov
(bad)
mov
mov
in
xchg
dec
lea
shl
scas
or
bound
sbb
call
js
and
and
fisubr
call
or
call
cmp
iret
js
mov
out
in
(bad)
(bad)
(bad)
jg
in
mov
sub
pusha
inc
loop
or
shl
inc
fld
mov
cdq
push
and
add
xchg
mov
sar
mov
ficom
bound
and
lahf
adc
shl
(bad)
jg
sub
xor
adc
call
outs
add
adc
pop
cmp
leave
rcl
mov
and
std
mov
cld
sbb
adc
pop
test
test
xor
(bad)
fcomip
dec
push
pop
repz
stc
xchg
jl
movs
cmp
out
cli
dec
test
scas
dec
mov
outs
sub
push
test
dec
scas
inc
mov
jmp
shl
pop
ret
(bad)
in
mov
xchg
movs
js
stos
sbb
cmp
(bad)
dec
test
movs
test
jg
xor
lahf
push
in
rcl
jo
xor
in
ret
mov
aas
sti
call
clc
lahf
xor
jae
cs
cmps
add
mov
call
repnz
adc
(bad)
cmp
adc
call
pop
cmp
sar
cmc
jb
imul
cld
test
aad
iret
shl
jg
inc
int
ja
aam
js
inc
in
jo
adc
outs
adc
call
mov
mov
pop
pop
or
adc
stos
pop
sub
lahf
and
or
fisub
(bad)
push
test
pushf
mov
movs
mov
sub
icebp
in
jno
cmp
inc
pop
mov
add
mov
sti
(bad)
mov
rcr
mov
ss
sub
(bad)
nop
cmps
lods
jmp
jmp
mov
ret
mov
imul
add
cmp
clc
(bad)
dec
jle
dec
repz
movs
data16
cld
sub
mov
push
cld
push
out
test
(bad)
loope
fmul
data16
out
(bad)
mov
loopne
call
repnz
jns
add
mov
(bad)
(bad)
jg
shl
cmp
std
jle
scas
jne
imul
sti
xor
(bad)
mov
jo
(bad)
(bad)
call
xchg
xchg
and
lea
les
adc
mov
adc
mov
dec
std
push
jne
adc
gs
xchg
cdq
pop
adc
inc
(bad)
inc
es
xchg
and
cmp
sbb
cmp
pop
dec
into
ins
mov
pop
cdq
sub
jmp
ja
dec
push
sbb
inc
mov
loop
or
(bad)
jne
(bad)
mov
mov
sti
gs
std
mov
xchg
sar
inc
lods
add
cld
retf
xor
mov
(bad)
call
inc
pop
sub
sar
jns
push
jp
fs
mov
stos
push
and
pop
add
scas
movs
jmp
jg
div
adc
cdq
push
shl
fwait
daa
fwait
rcr
mov
push
sets
push
out
aam
into
jmp
mov
xor
stos
mov
mov
jno
ror
ja
call
mov
add
mov
imul
loop
sub
cmp
loope
stos
inc
and
jmp
lea
sbb
or
xchg
call
jmp
test
test
push
adc
aam
stos
dec
pop
out
jae
mov
scas
cmp
shl
mov
adc
sbb
(bad)
(bad)
(bad)
fcom
and
cmp
add
sub
mov
test
movs
outs
fwait
pop
mov
sub
and
jmp
mov
sub
cwde
fst
inc
cmps
xor
pop
cmc
(bad)
mov
je
mov
fs
call
in
in
jo
(bad)
(bad)
(bad)
cmp
dec
and
aam
adc
out
fbld
dec
mov
stc
dec
scas
mov
xchg
call
std
(bad)
cmp
and
imul
cmps
jge
stos
jle
jmp
push
mov
mov
dec
(bad)
mov
mov
dec
xor
push
lods
adc
scas
xchg
sbb
xor
rcl
jb
ins
jae
add
ins
fdivp
call
sti
mov
pop
loopne
mov
test
call
fbld
inc
or
aas
test
pop
clc
dec
dec
xor
call
(bad)
inc
daa
dec
psadbw
ss
mov
(bad)
jg
jmp
mov
stc
test
jbe
shr
and
push
push
adc
imul
xor
and
(bad)
dec
cs
and
dec
cmp
fsubr
mov
mov
inc
enter
pop
xchg
jbe
hlt
stos
fcmovnb
add
cmp
add
arpl
and
push
lods
das
rcl
mov
fstp
push
jns
inc
stos
(bad)
dec
push
jp
sbb
repnz
fild
inc
mov
mov
(bad)
(bad)
inc
movs
cli
push
and
ret
aad
mov
and
cmps
ds
mov
and
push
cmps
adc
(bad)
pop
dec
(bad)
adc
xchg
dec
jmp
cmps
pushf
inc
add
cmps
dec
pop
loope
xlat
xchg
fdivr
lods
(bad)
(bad)
jmp
xchg
movs
xor
dec
mov
leave
sub
cmps
(bad)
cmp
jmp
sahf
icebp
(bad)
jmp
pop
adc
mov
movs
popa
pop
(bad)
jo
mov
lds
jno
jmp
(bad)
mov
push
(bad)
(bad)
jmp
inc
mov
fild
cdq
sbb
mov
gs
call
lods
enter
mov
dec
in
jmp
stos
push
popf
fdivr
stos
dec
fs
and
add
sub
(bad)
(bad)
cli
(bad)
(bad)
call
jge
mov
nop
xor
cmps
jle
fisubr
cmp
mov
xchg
mov
pusha
pop
(bad)
(bad)
(bad)
(bad)
mov
mov
pop
xchg
dec
out
dec
mov
add
mov
pop
adc
shr
call
and
test
cmps
ja
mov
mov
dec
push
in
push
daa
push
scas
pop
mov
ss
add
(bad)
mov
fadd
aas
rcl
inc
sub
jp
pop
and
fs
sbb
dec
jnp
sub
or
out
push
stos
shr
cmp
lock
mov
pop
adc
syscall
clc
(bad)
inc
cwde
jge
scas
jmp
mov
sahf
push
in
clc
add
imul
adc
adc
cmp
push
sub
inc
mov
sub
xchg
sar
mov
pop
lods
repnz
jmp
push
pop
sub
dec
push
shl
imul
jnp
mov
js
xchg
(bad)
(bad)
inc
inc
sub
inc
and
pop
les
sub
cmp
aam
sbb
(bad)
push
test
out
adc
in
mov
push
cmps
dec
or
push
push
add
fwait
(bad)
mov
std
fwait
adc
scas
and
pop
test
sub
add
stc
and
jb
jmp
or
jno
(bad)
iret
repnz
push
hlt
cmps
adc
stos
dec
mov
stc
sbb
or
(bad)
xchg
mov
dec
xor
lods
mov
inc
mov
repz
jmp
or
dec
les
out
push
fdiv
push
xchg
dec
mov
test
ss
movs
add
push
add
fisttp
repz
mov
jmp
(bad)
jp
loop
jno
stos
xor
mov
fnsave
pop
bound
enter
push
(bad)
jmp
fnstsw
outs
jmp
pop
add
leave
mov
mov
push
mov
call
cmp
dec
jecxz
shl
xchg
xchg
rol
or
popa
dec
jmp
dec
rcl
lods
call
cmps
movs
mov
inc
loop
(bad)
call
test
sub
(bad)
outs
cs
sti
or
add
xor
mov
mov
rcr
push
mov
mov
add
(bad)
ins
(bad)
lahf
push
adc
push
adc
or
sub
sub
mul
(bad)
dec
jmp
jle
and
push
scas
cmps
jnp
xchg
(bad)
dec
or
ret
push
mov
sub
call
jmp
popf
popf
sub
out
ins
in
sub
(bad)
(bad)
mov
dec
jle
cs
retf
sahf
cmp
pop
jle
icebp
sbb
push
test
push
sbb
dec
imul
cmp
fistp
(bad)
(bad)
ds
xor
mov
cmps
jl
ins
arpl
pop
mov
(bad)
(bad)
fisttp
repz
sub
push
jo
sbb
test
xchg
(bad)
repnz
xchg
aas
movs
push
nop
pop
ret
pop
icebp
xchg
pop
jne
jb
(bad)
(bad)
jmp
sahf
je
loopne
cli
(bad)
mov
and
clc
jo
sbb
mov
push
inc
sbb
sub
push
into
push
mov
arpl
clc
scas
push
cmp
or
(bad)
jmp
jecxz
in
fs
popa
push
mov
dec
sti
shl
aam
pushf
mov
dec
and
jno
gs
jmp
std
or
(bad)
mov
and
les
das
scas
pop
or
sub
leave
inc
pop
stos
aad
(bad)
into
mov
sub
cmp
adc
and
clc
inc
cmc
mov
lods
je
sbb
lods
pop
aam
push
inc
leave
repnz
in
test
(bad)
loopne
cmp
jmp
movs
je
int
iret
adc
pop
es
fwait
add
cmp
cld
sbb
xor
or
mov
jmp
bound
jmp
call
fcomip
jmp
test
push
xor
sbb
sti
mov
mov
loop
add
ror
lods
adc
mov
mov
call
je
cmps
inc
jmp
sub
jp
xchg
leave
mov
jne
call
sub
sub
in
adc
fsub
or
pushf
sbb
jmp
pop
test
stos
xor
jl
add
stos
jecxz
fmulp
sub
ins
(bad)
jg
mov
xchg
xchg
jg
dec
inc
mov
inc
or
mov
dec
in
xor
(bad)
(bad)
(bad)
(bad)
std
cld
popf
jne
es
aas
cmp
dec
retf
jnp
mov
imul
mov
dec
cwde
(bad)
jg
fdivp
(bad)
dec
lock
retf
test
jns
cmp
mov
mov
mov
sar
dec
pushf
add
stc
loop
pop
retf
and
bound
push
fadd
gs
sbb
or
mov
sbb
jno
(bad)
(bad)
inc
inc
jmp
test
xchg
ins
fst
mov
movs
aas
xchg
cli
(bad)
(bad)
inc
imul
sbb
xor
js
fadd
mov
mov
cmp
loopne
and
sub
mov
loope
popf
popa
shl
movs
call
aad
(bad)
(bad)
call
sub
cwde
cmp
lock
add
out
inc
lods
div
inc
fcomp
lock
dec
repnz
jle
sub
(bad)
(bad)
mov
push
jmp
loop
stos
jae
and
cmp
pop
je
cmp
push
xchg
sbb
(bad)
pop
fld
sbb
cli
mov
cli
(bad)
call
pop
xor
ja
cmp
mov
stos
jge
(bad)
(bad)
jmp
aam
jnp
xchg
lock
dec
movs
pop
imul
(bad)
sbb
jb
xchg
xor
sbb
arpl
xor
clc
lods
movs
sub
push
cmc
jb
(bad)
(bad)
(bad)
cmp
pop
sub
test
and
xor
cli
push
adc
jb
xchg
sbb
pop
adc
inc
add
loop
shl
mov
(bad)
(bad)
dec
inc
push
sbb
scas
adc
ds
dec
pusha
or
in
cmp
adc
push
lods
mov
mov
cwde
jmp
or
push
cmp
mov
cmps
add
fidivr
aaa
sbb
mov
fs
add
(bad)
(bad)
cmp
js
sub
cmp
adc
test
mov
pop
cmc
inc
inc
jo
sbb
sbb
shr
mov
jns
mov
xor
fdivr
and
cli
or
add
cmp
(bad)
(bad)
(bad)
call
cmp
push
fwait
jmp
retf
push
mov
int3
mov
mov
xor
loopne
loopne
retf
sub
into
push
mov
sub
cmp
ss
mov
(bad)
rcr
in
sbb
push
ret
jmp
mov
and
jle
mov
(bad)
(bad)
jg
ins
fist
cmp
popa
mov
loope
dec
dec
inc
fdivr
adc
idiv
jmp
es
or
rol
cmps
jmp
sub
imul
fwait
retf
out
movs
inc
or
xor
(bad)
jl
jb
mov
mov
mov
call
xor
or
(bad)
(bad)
(bad)
jmp
fild
das
repnz
cmp
xchg
repz
inc
mov
(bad)
sbb
std
jb
jae
int
push
out
(bad)
(bad)
(bad)
jg
cmp
adc
xchg
(bad)
xchg
daa
jg
and
enter
fnstcw
gs
pop
lods
ficom
fild
mov
stos
cmps
(bad)
jmp
dec
pop
jnp
retf
sub
jb
xor
outs
sub
(bad)
(bad)
(bad)
jmp
dec
fstp
and
aas
sub
stc
scas
xor
sub
outs
xor
jg
clc
(bad)
mov
adc
inc
sub
cmc
sbb
(bad)
cmp
mov
mov
adc
int
cwde
loope
sub
jecxz
(bad)
jmp
mov
lods
sub
sub
into
xor
in
push
xor
add
jmp
int
rol
test
ss
sub
and
push
hlt
test
sub
das
adc
ret
repz
mov
push
mul
call
ret
scas
jg
(bad)
dec
leave
and
mov
push
adc
(bad)
mov
(bad)
jg
inc
sub
cmp
std
mov
out
aad
mov
inc
int
call
and
(bad)
(bad)
(bad)
jmp
mov
or
jmp
ficom
mov
cmp
stos
mov
out
mov
call
stos
sub
mov
cld
mov
mov
jae
or
cmp
loopne
call
sbb
mov
mov
pop
in
lods
inc
loope
or
rol
clc
lods
arpl
mov
and
push
dec
sbb
cdq
fisubr
xchg
out
call
outs
retf
jae
mov
(bad)
mov
mov
cmp
push
ror
adc
or
movs
mov
lock
jmp
push
loope
test
js
(bad)
dec
enter
mov
or
std
or
scas
jg
dec
repnz
jg
imul
jmp
(bad)
outs
dec
clc
outs
add
call
adc
push
idiv
sbb
enter
mov
data16
push
dec
cwde
(bad)
(bad)
call
dec
mov
ret
in
mov
ret
push
push
dec
stos
jmp
js
mov
dec
out
cmp
xor
pusha
add
nop
dec
or
add
(bad)
or
in
test
cmp
loope
loopne
je
or
(bad)
cli
push
enter
(bad)
add
jle
jmp
xchg
iret
mov
jp
in
out
mov
movs
repz
scas
mov
(bad)
(bad)
push
xlat
adc
in
xchg
mov
mov
inc
cmp
pop
jo
jmp
jge
xchg
sbb
cs
out
jmp
and
cmp
xchg
movs
call
jecxz
jmp
sbb
(bad)
out
movs
out
movs
scas
scas
and
js
in
jle
adc
ins
sub
call
xchg
and
loope
mov
and
and
add
or
pop
sbb
(bad)
sbb
jl
xchg
ret
jg
mov
test
rol
sub
inc
mov
jnp
scas
mov
add
push
test
dec
mul
mov
test
loopne
and
mov
mov
out
(bad)
(bad)
dec
pop
inc
inc
jae
dec
mov
push
retf
dec
mov
lea
push
mov
jmp
pushf
scas
scas
iret
clc
(bad)
(bad)
(bad)
cmp
loop
pop
retf
es
(bad)
jne
cld
add
call
cdq
jo
add
aas
cmp
fucomp
mov
mov
cld
pop
xchg
inc
lods
rol
mov
loop
sub
jl
dec
jg
adc
mov
fcmovnb
sbb
mov
cs
add
fdivr
aaa
adc
push
jns
fmul
dec
adc
les
leave
push
sub
(bad)
(bad)
push
test
mov
cmp
in
and
outs
call
out
jmp
sub
pop
push
test
int
inc
ret
enter
push
(bad)
(bad)
inc
pop
cmps
mov
push
imul
mov
mov
pop
mov
das
ror
xchg
out
gs
pusha
es
push
(bad)
pop
mov
jle
imul
dec
cmp
shl
push
clc
fwait
in
cmp
pop
stos
inc
mov
mov
jmp
mov
add
aaa
scas
xchg
or
cmp
mov
(bad)
jg
call
mov
push
xchg
call
push
jmp
shl
mov
adc
mov
aam
cmps
push
lods
push
clc
pop
cwde
xchg
sbb
mov
jmp
pop
cld
mov
jb
fs
adc
jns
and
xchg
aad
sbb
inc
ins
call
push
or
lahf
jb
outs
mov
test
and
(bad)
call
sbb
je
pusha
inc
cmps
and
push
push
repz
into
jmp
lea
or
cmp
fcom
mov
jmp
mov
cmp
xor
(bad)
mov
sti
shl
jg
not
mov
mov
in
int
mov
dec
mov
fsubr
xchg
fwait
test
(bad)
lea
sub
adc
(bad)
dec
fldpi
mov
sub
sbb
mov
mov
xchg
fild
(bad)
fmul
jge
rcl
push
jbe
jbe
dec
mov
fist
sbb
cs
movs
sbb
nop
out
rol
jmp
fisubr
test
lods
sbb
stos
fnstsw
mov
jle
sub
(bad)
cmps
pop
ss
dec
sbb
(bad)
call
xor
pop
popf
add
push
int
sbb
out
out
mov
mov
mov
or
ss
out
pop
repnz
outs
and
dec
adc
jl
pop
arpl
gs
js
(bad)
(bad)
(bad)
(bad)
jmp
sub
or
fisubr
pop
das
and
cmps
and
stos
rcl
fcomip
jmp
cmp
cmps
jge
jbe
or
cld
in
pop
sub
in
bswap
std
mov
std
call
add
gs
xor
inc
in
imul
pop
daa
pop
lea
mov
dec
mov
lock
mov
xchg
popf
mov
imul
lds
pusha
sub
mov
fwait
popa
and
sub
(bad)
jmp
inc
sub
aas
movs
jmp
cwde
pop
je
lahf
js
mov
(bad)
(bad)
(bad)
push
into
movs
ja
mov
daa
and
(bad)
and
std
movs
addr16
jl
jg
aaa
or
call
loopne
sar
out
int
test
mov
add
cmps
mov
clc
outs
(bad)
(bad)
cmp
in
and
mov
jmp
pop
push
imul
jge
mov
in
mov
(bad)
mov
movs
xor
sub
es
cmp
dec
pop
jl
pop
stos
jg
lods
call
stos
xor
jmp
mov
std
call
ret
imul
fild
hlt
(bad)
(bad)
cli
in
ficomp
imul
repnz
cmps
and
push
mov
jmp
cmps
pop
cmp
out
and
sahf
ja
push
fild
repnz
out
(bad)
repnz
jno
sub
jmp
dec
jb
push
test
jmp
retf
scas
mov
jp
cwde
cli
test
repnz
sahf
or
addr16
scas
test
out
test
(bad)
(bad)
jg
inc
push
movs
inc
jb
jns
sub
push
mov
mov
mov
ds
std
(bad)
(bad)
jbe
and
retf
(bad)
cli
(bad)
mov
xchg
pop
jo
mov
sar
mov
les
retf
mov
stos
test
movs
std
shl
push
mov
fist
push
(bad)
adc
repz
dec
jns
push
cld
(bad)
out
jbe
lods
stos
pop
adc
(bad)
dec
mov
pop
lock
cmp
dec
test
jecxz
(bad)
call
push
repnz
movs
mov
add
lea
lods
cmp
loopne
and
mov
fisubr
loop
ins
(bad)
(bad)
pop
add
lea
dec
outs
xchg
cli
mov
jp
out
retf
into
sbb
pushf
leave
std
ss
xor
addr16
mov
imul
push
mov
fs
fcos
fwait
(bad)
(bad)
cmp
pop
ins
jmp
mov
cmps
movs
pop
lahf
ror
mov
push
push
(bad)
call
adc
cmps
aam
leave
jp
cli
sti
jle
fild
add
(bad)
imul
cmp
or
scas
push
sar
cmp
sar
adc
sbb
cmps
mov
rcr
test
and
dec
mov
fidivr
call
or
xor
(bad)
and
sub
cmc
mov
(bad)
(bad)
(bad)
dec
jns
jmp
jno
movs
(bad)
aam
inc
jne
cmc
leave
dec
jl
retf
xor
jnp
or
xchg
push
in
adc
mov
(bad)
(bad)
lods
cdq
nop
fbstp
ds
dec
mov
jle
pop
cmps
popf
loope
ret
cmp
inc
loopne
sbb
scas
mov
mov
daa
xchg
leave
ret
mov
and
bound
sbb
xchg
or
std
dec
and
shr
(bad)
(bad)
jmp
in
movs
add
sub
sub
sbb
mov
add
cli
(bad)
mov
cdq
(bad)
out
and
jge
jmp
std
(bad)
mov
jmp
mov
test
push
(bad)
jb
inc
add
dec
push
sub
xlat
jo
mov
or
add
dec
shl
jmp
inc
mov
das
adc
std
xor
inc
xor
xor
sub
pop
mov
fwait
lahf
sbb
adc
adc
sub
pop
xchg
mov
xor
lock
or
ja
xor
mov
jb
inc
ja
or
(bad)
mov
and
(bad)
(bad)
(bad)
call
loopne
and
cwde
stos
lahf
bound
xor
xchg
jo
std
je
std
addr16
(bad)
dec
sub
sbb
sbb
sub
ficomp
mov
data16
push
mov
(bad)
jmp
xor
mov
or
mov
jmp
out
sub
push
mov
pop
lods
mov
and
jge
outs
dec
(bad)
push
mul
(bad)
and
jp
outs
sub
jmp
scas
into
add
xor
mov
outs
jl
dec
sar
call
push
pushf
(bad)
xchg
mov
lods
fadd
adc
das
xor
jne
fdivp
adc
mov
adc
add
(bad)
jmp
cmp
outs
ret
inc
dec
mov
cmps
fcomip
mov
test
sub
add
jae
xchg
mov
pop
call
sub
test
ins
paddw
jmp
cmp
repnz
sbb
in
scas
loope
fadd
or
push
sti
mov
int3
in
js
shr
test
mov
sbb
cmps
sbb
cmps
mov
inc
out
fimul
mov
xor
retf
and
inc
jp
inc
inc
fiadd
cld
test
(bad)
jg
inc
pop
pop
call
mov
mov
jmp
pop
cdq
and
inc
mov
mov
stos
mov
(bad)
lods
std
or
(bad)
mov
dec
mov
hlt
stos
push
movs
aas
stos
inc
shl
call
nop
and
cwde
dec
mov
into
ja
sbb
(bad)
dec
(bad)
xchg
sbb
xchg
pop
xchg
pop
mov
xchg
jmp
or
(bad)
(bad)
fistp
(bad)
lock
sub
cli
out
lods
out
aad
movs
cs
fldcw
(bad)
enter
(bad)
jg
inc
sub
inc
lods
mov
push
jge
aas
sbb
dec
inc
push
dec
nop
fisub
hlt
push
test
int
dec
xchg
icebp
xlat
lock
faddp
movs
xchg
retf
mov
mov
pop
mov
(bad)
(bad)
jmp
mov
jmp
(bad)
cmps
iret
dec
pushf
pop
sbb
mov
lods
or
mov
push
cmps
(bad)
(bad)
jg
adc
scas
in
mov
fld
mov
jmp
pop
or
inc
xchg
out
sbb
cmp
mov
xor
mov
cmc
mov
dec
scas
sub
mov
cmps
and
lods
adc
jmp
push
mov
mov
(bad)
cwde
retf
mov
call
mov
cmp
test
ror
rol
pop
mov
and
call
(bad)
repnz
mov
outs
in
sub
loopne
(bad)
jmp
in
call
and
adc
xchg
(bad)
(bad)
(bad)
jmp
clc
out
lods
mov
mov
push
pop
sub
call
pop
mov
movs
push
dec
cmps
enter
out
je
das
mov
mov
mov
ret
iret
movs
(bad)
(bad)
(bad)
dec
sub
pop
test
adc
pop
ret
mov
(bad)
or
mov
(bad)
jmp
cli
inc
mov
cmp
or
push
cwde
fldenv
dec
jp
mov
adc
xor
std
mov
push
es
sub
push
outs
jns
mov
fmul
xor
hlt
mov
xor
or
add
xchg
mov
cmp
cwde
fist
add
or
and
(bad)
push
and
xor
sub
ins
jl
jge
pushf
repnz
fist
idiv
(bad)
(bad)
inc
idiv
fdivr
adc
outs
fwait
cmp
idiv
lods
repz
jmp
mov
rcr
adc
dec
inc
mov
mov
xchg
cmp
xor
inc
out
data16
fstp
(bad)
(bad)
mov
data16
aas
jg
fsub
sbb
cli
mov
or
adc
fwait
push
cld
jmp
inc
lods
data16
dec
int
sub
push
fnstsw
repnz
fsub
mov
(bad)
(bad)
call
jbe
movs
jge
and
mov
xor
xchg
pop
icebp
pop
loope
or
popa
aaa
fwait
stc
(bad)
(bad)
(bad)
call
daa
or
into
dec
gs
jmp
test
es
jmp
push
or
pop
addr16
(bad)
(bad)
cli
mov
mov
and
arpl
(bad)
adc
(bad)
(bad)
(bad)
call
xchg
and
inc
or
push
ret
ins
dec
ret
call
push
jb
mov
imul
mov
mov
stos
push
jg
pop
jl
outs
cwde
cdq
pop
cmps
sub
xrelease
call
call
dec
lock
mov
jp
mov
push
test
cld
mov
cmp
lea
scas
cli
jmp
call
pop
jae
add
sbb
mov
jecxz
gs
nop
imul
out
dec
pop
loop
jle
mov
xchg
out
fcmovnu
scas
(bad)
(bad)
(bad)
(bad)
call
jo
cli
mov
and
je
add
loope
imul
enter
call
mov
mov
push
cmp
sub
(bad)
and
push
xchg
and
sbb
fmul
fmul
xchg
(bad)
and
dec
cld
sbb
mov
retf
(bad)
push
std
imul
inc
dec
adc
not
sti
call
push
xchg
ds
add
cmps
xor
jle
fwait
push
mov
cmp
mov
dec
icebp
inc
jmp
repz
(bad)
(bad)
out
cli
jb
push
fsubr
mov
jb
cmp
sub
lods
inc
pop
jmp
loopne
add
scas
(bad)
jg
push
mov
mov
and
push
sub
sub
aad
pop
add
(bad)
repnz
sub
or
mov
icebp
aad
mov
jp
cmps
in
test
or
cmc
or
cmps
rcr
(bad)
(bad)
jg
call
fiadd
fcmovb
lock
mov
cmps
imul
sub
(bad)
dec
or
pop
shr
das
outs
sbb
push
add
add
popa
xchg
inc
mov
sbb
gs
adc
sub
push
(bad)
jmp
cmp
adc
(bad)
repnz
mov
movs
jl
cmps
xor
jmp
(bad)
call
retf
mov
fadd
or
lods
sub
jg
into
or
mov
inc
jge
(bad)
call
mov
xor
mov
push
pop
aam
cld
jg
gs
sub
out
cdq
shl
xor
(bad)
(bad)
jmp
outs
test
in
fucomip
sub
data16
(bad)
cmp
(bad)
pop
in
jle
data16
and
push
push
jne
call
xor
xchg
sbb
jp
push
(bad)
pusha
xchg
mov
movs
sub
rcr
jo
fisttp
or
jb
jno
(bad)
(bad)
mov
inc
cmp
xor
cmp
lods
popa
gs
adc
xchg
dec
or
pop
xchg
mov
push
mov
movq
aaa
push
movs
idiv
sub
ss
imul
cdq
cmp
sub
outs
pop
into
adc
jg
loop
mov
sahf
mov
hlt
jmp
jbe
mov
sbb
lea
shl
inc
sbb
mov
js
repnz
ins
shl
(bad)
jle
lods
jmp
pop
leave
(bad)
cli
into
mov
pop
call
stos
fcom
in
jns
dec
mov
cli
fwait
dec
(bad)
mov
ret
mov
cmp
xor
or
sbb
or
call
or
stc
and
repz
jno
js
call
iret
mov
lds
or
ja
and
stos
js
adc
cmp
(bad)
jb
push
sub
xchg
outs
(bad)
(bad)
push
sbb
lods
xchg
sub
push
mov
in
sbb
sbb
int3
add
test
xchg
(bad)
(bad)
(bad)
(bad)
mov
inc
je
fild
mov
jb
out
icebp
call
xchg
jae
nop
call
cmp
(bad)
(bad)
mov
iret
(bad)
std
add
rcl
iret
movs
aad
icebp
mov
mov
(bad)
(bad)
push
movs
test
lea
inc
mov
jp
call
call
or
shl
ds
jg
and
fdiv
call
cmc
into
dec
cmc
aad
ss
nop
js
xor
push
mov
sbb
std
pop
stc
mov
pop
adc
jl
mov
xlat
sbb
dec
xor
lar
jp
xchg
(bad)
(bad)
(bad)
aas
and
and
(bad)
fcmovu
test
mov
mov
daa
cmps
sub
lahf
xor
cs
(bad)
(bad)
inc
lea
cmp
mov
(bad)
scas
pop
mov
sbb
mov
cmp
add
(bad)
(bad)
xchg
mov
cmc
mov
sbb
sbb
adc
aad
jmp
push
sub
lods
repz
mov
mov
std
fwait
jmp
(bad)
mov
cli
or
test
mov
sbb
mov
cdq
xchg
xchg
in
inc
jmp
fimul
or
jg
pop
(bad)
(bad)
call
push
repnz
sbb
call
cmp
test
jl
push
mov
test
scas
jg
mov
(bad)
mov
imul
inc
in
dec
(bad)
(bad)
(bad)
dec
js
es
dec
cmp
jl
dec
test
sub
fwait
rol
repnz
loop
cli
pop
cmp
cs
sbb
cdq
jp
adc
inc
push
clc
adc
jb
xchg
neg
imul
fisub
shr
adc
stos
jb
or
add
adc
pop
dec
jg
cmp
add
jg
pop
std
sahf
jle
call
dec
retf
inc
mov
mov
fxch
or
int
xchg
(bad)
inc
mov
cmps
fisttp
mov
mov
adc
adc
xchg
(bad)
(bad)
(bad)
(bad)
mov
xor
inc
jb
cli
or
mov
mov
cmp
mov
sub
xor
dec
repz
and
sub
cld
mov
out
js
push
imul
out
pop
fadd
movs
and
pusha
mov
pop
or
and
jmp
ret
adc
sub
(bad)
bound
add
(bad)
jg
(bad)
cmp
shr
and
pop
(bad)
push
or
out
lods
add
aad
jno
pusha
lock
(bad)
(bad)
cmp
hlt
jg
jecxz
nop
xchg
or
mov
mov
(bad)
mov
das
xchg
scas
sti
inc
ret
icebp
aam
xor
les
(bad)
(bad)
(bad)
mov
dec
push
jno
push
xchg
dec
mov
ds
cmp
or
out
xchg
stc
cmp
fild
movaps
pop
cmp
sub
sub
xor
add
mov
fcomp
dec
pop
in
cld
mov
cmp
adc
test
push
inc
aaa
jns
std
mov
pop
jb
jg
add
stos
mov
and
cs
add
pop
loopne
call
fwait
fwait
push
jns
adc
inc
movs
adc
sub
fwait
inc
std
repnz
lods
cs
add
test
(bad)
(bad)
(bad)
jmp
mov
push
and
add
pop
pop
xor
pop
mov
stc
div
jns
push
(bad)
mov
jle
sbb
(bad)
jle
ret
hlt
test
jb
ret
xor
jnp
retf
push
xor
pop
push
mov
(bad)
pop
mov
js
sbb
gs
mov
ins
adc
js
sbb
sbb
jg
nop
mov
adc
push
(bad)
pop
mov
mov
call
cmp
les
jecxz
mov
ins
sub
fmulp
jnp
sub
sub
adc
sub
dec
xchg
xchg
test
retf
or
movs
stos
pop
sbb
dec
jb
lods
sbb
lods
adc
int3
nop
xchg
jl
inc
xor
fidiv
cmps
pop
mov
retf
in
mov
(bad)
mov
mov
inc
jae
mov
push
xor
ins
ja
xchg
jne
mov
sahf
add
or
jmp
xor
fidiv
adc
out
or
dec
bound
(bad)
(bad)
(bad)
jmp
sbb
sbb
cmp
and
imul
xchg
iret
xchg
neg
jno
and
icebp
iret
and
fwait
aam
or
aaa
mov
adc
fsub
xchg
jmp
(bad)
(bad)
clc
mov
into
pop
cmp
out
cwde
mov
push
shr
sbb
and
mov
and
les
inc
loopne
shl
jnp
cmp
cld
push
jbe
sub
jmp
mov
add
das
push
and
dec
cli
imul
retf
call
pusha
call
arpl
sub
xacquire
shr
dec
pop
retf
lods
outs
clc
sbb
(bad)
mov
ret
add
jecxz
in
rol
(bad)
call
and
mov
xor
cmp
shl
cmp
std
and
call
cs
fstp
sub
sbb
mov
xchg
sub
jmp
cs
ss
mov
retf
sub
ds
dec
retf
cmp
(bad)
(bad)
(bad)
jmp
mov
fstp
adc
sahf
fs
cmp
stos
movs
sti
repnz
call
into
mov
call
shl
stos
push
push
xchg
aas
(bad)
(bad)
cmp
sbb
add
cmp
inc
push
dec
stos
cmp
jmp
jecxz
(bad)
pop
test
and
push
or
pop
xchg
lods
cmc
pop
adc
cmp
fwait
movs
(bad)
(bad)
(bad)
push
sub
pop
mov
out
sub
and
shr
xchg
sahf
adc
fbld
push
add
lahf
stos
sub
arpl
fiadd
loop
pop
movs
out
push
mov
(bad)
dec
or
aad
ins
addr16
pop
xchg
lock
ret
(bad)
(bad)
jmp
lahf
dec
scas
(bad)
pop
les
loop
and
pop
add
mov
push
(bad)
(bad)
(bad)
jg
push
lods
jge
out
sub
mov
jmp
mov
sub
fwait
es
lock
mov
clc
outs
push
mov
add
dec
std
push
push
jp
xor
(bad)
cmps
or
inc
mov
nop
or
add
mov
mov
or
scas
fimul
inc
addr16
mov
mov
call
(bad)
mov
int
add
inc
out
mov
mov
inc
ins
mov
sub
loopne
cld
dec
test
dec
cld
popf
jmp
(bad)
mov
lock
scas
xor
and
movs
loope
lds
mov
leave
(bad)
(bad)
(bad)
dec
adc
xchg
mov
lahf
mov
lods
dec
or
or
and
out
pusha
adc
(bad)
(bad)
call
mov
bound
or
ins
push
cs
out
clc
mov
js
ret
clc
lods
nop
pop
add
ja
mov
adc
out
mov
call
popa
gs
jge
aaa
and
mov
in
mov
addr16
and
fcom
cwde
repnz
sub
sti
ins
addr16
(bad)
(bad)
push
cmp
test
mov
sub
fsub
xchg
cwde
xchg
jns
stos
call
cwde
cmp
(bad)
dec
mov
cmp
inc
push
xor
xor
(bad)
(bad)
(bad)
(bad)
cmp
stos
lods
iret
shl
mov
dec
lahf
xchg
xor
in
mov
test
fwait
xchg
in
(bad)
rcr
push
out
es
jns
scas
retf
hlt
mov
sbb
inc
into
mov
mov
rcr
(bad)
dec
out
cwde
mov
cmp
int3
movs
frstor
sub
xor
aas
enter
out
es
pushf
sbb
(bad)
(bad)
(bad)
jmp
mov
test
stos
in
cmps
dec
iret
jg
jmp
add
fwait
sbb
jb
stos
push
cld
jg
iret
stos
rol
push
or
sar
inc
stos
retf
(bad)
(bad)
dec
imul
jmp
pop
jmp
jp
mov
pushf
jae
loope
(bad)
data16
cmp
sbb
cmps
loop
sar
push
shr
jmp
dec
sbb
jecxz
(bad)
das
inc
mov
inc
sub
cmps
movs
arpl
ja
jmp
mul
adc
fisttp
movs
xor
cwde
mov
loopne
lods
call
(bad)
call
inc
mov
fdivr
(bad)
retf
and
ins
jae
mov
std
pop
sub
add
push
dec
mov
mov
jne
std
stos
sub
mov
in
jl
aam
mov
jmp
std
movs
fsub
mov
mov
and
repnz
out
test
daa
std
inc
pop
loopne
lahf
outs
sbb
(bad)
in
xchg
out
inc
(bad)
mov
(bad)
inc
movs
ins
xchg
scas
xchg
xchg
mov
mov
mov
mov
retf
ins
int3
adc
mov
popa
cmp
(bad)
shr
pop
cli
(bad)
(bad)
call
leave
dec
pop
loope
dec
sahf
inc
movs
mov
add
fldl2t
shl
push
mov
jl
add
pushf
fcom
loope
(bad)
retf
(bad)
(bad)
jmp
(bad)
mov
mov
push
adc
sbb
mov
and
mov
mov
mov
pop
inc
inc
mov
fisubr
rol
and
(bad)
(bad)
jg
hlt
pop
jmp
xchg
and
out
mov
loope
xchg
adc
dec
call
jb
aas
jmp
and
int
jo
sbb
sbb
shl
mov
loop
daa
mov
mov
inc
mov
test
dec
shl
xchg
xchg
ins
and
cli
or
cmp
fstp
mov
mov
stc
nop
stos
lahf
add
mov
jno
stos
add
xchg
mov
call
adc
pop
cli
jp
inc
sbb
or
ret
jl
sahf
cmp
call
out
js
shr
hlt
mov
cmp
call
pop
movs
jmp
sub
retf
mov
sti
pop
jno
mov
push
inc
push
imul
adc
aam
loop
data16
adc
xchg
xchg
call
jg
je
repnz
mov
push
cmp
mov
fisttp
pop
xchg
fisttp
adc
inc
add
jmp
je
movs
mov
test
mov
lahf
cmps
xor
stos
adc
(bad)
(bad)
(bad)
(bad)
call
xchg
mov
std
mov
push
mov
mov
mov
ins
loopne
inc
ss
inc
lock
add
and
push
clc
fwait
iret
xchg
pop
pop
fidiv
mov
mov
mov
jb
(bad)
dec
pop
stos
adc
imul
push
push
mov
xor
test
stos
pop
cs
jle
mov
or
sub
inc
cli
ss
ds
and
fwait
mov
sar
(bad)
(bad)
dec
push
and
jne
mov
jecxz
xor
nop
sar
xchg
das
aas
lock
outs
test
push
pop
push
std
(bad)
inc
sub
fwait
add
push
cmp
mov
adc
inc
cmps
and
or
pop
mov
add
add
clc
int3
(bad)
fld
xchg
jp
mov
dec
dec
dec
and
popf
and
mov
jg
mov
test
adc
stos
or
push
int3
and
and
xchg
fidivr
cmp
add
mov
(bad)
aas
gs
ds
loop
test
jno
ret
hlt
jle
xchg
pop
repnz
cmps
out
xor
(bad)
loop
mov
sub
mov
(bad)
push
xchg
adc
mov
loopne
lahf
popa
mov
or
leave
adc
(bad)
push
cs
inc
adc
mov
mov
xchg
mov
jmp
and
fcmovu
add
or
out
adc
das
shl
and
loopne
mov
dec
sahf
in
fisubr
(bad)
(bad)
(bad)
call
jl
xor
stos
sub
sub
xchg
imul
mov
pop
rcl
call
xchg
int3
fbstp
call
in
jne
push
iret
cs
(bad)
mov
das
sub
or
or
and
arpl
(bad)
jmp
sub
shr
fisub
mov
cli
ret
sub
adc
(bad)
(bad)
(bad)
jnp
clc
dec
fsubr
enter
call
in
aad
leave
ds
(bad)
jmp
stos
cli
push
xor
mov
jnp
(bad)
push
adc
pushf
mov
mov
test
push
scas
sub
cmp
jp
mov
xlat
cdq
mov
xchg
jl
stc
mov
fwait
cmp
inc
sbb
adc
imul
adc
push
out
xchg
add
pop
pusha
mov
adc
xchg
or
(bad)
(bad)
(bad)
inc
pop
or
data16
mov
push
push
xchg
enter
and
(bad)
dec
inc
jmp
sahf
push
jb
sub
mov
lods
test
mov
xor
nop
cli
jge
out
dec
movs
mov
imul
call
gs
xchg
ins
test
call
mov
fs
adc
jns
call
dec
jns
(bad)
loop
jns
repnz
outs
(bad)
(bad)
(bad)
(bad)
cmp
dec
jns
or
ret
repz
sbb
int
and
int
jmp
xchg
movs
and
(bad)
(bad)
inc
mov
lods
stos
imul
sbb
imul
sar
(bad)
call
push
jnp
jnp
or
outs
outs
mov
fisttp
and
cmp
xor
(bad)
(bad)
(bad)
call
popa
pusha
push
pop
test
jns
adc
and
mov
movs
dec
rcr
jg
btr
clc
js
(bad)
(bad)
call
mov
sub
pop
ja
out
cmp
fs
sbb
sbb
arpl
inc
cli
mov
loopne
xchg
mov
lods
test
fs
sbb
adc
lock
(bad)
(bad)
addr16
dec
out
sub
outs
gs
std
(bad)
(bad)
call
mov
leave
adc
sahf
sbb
xor
cmps
ja
sar
pop
pop
fwait
jl
(bad)
(bad)
fisttp
call
jp
mov
sub
xor
scas
into
imul
mov
lods
outs
jmp
call
rcr
(bad)
dec
mov
cmp
jl
mov
gs
xchg
jp
cmp
in
mov
out
jecxz
add
dec
dec
or
mov
dec
add
xchg
test
out
(bad)
call
or
call
outs
call
push
dec
push
pop
int3
std
in
outs
push
xchg
add
pop
sbb
movnti
push
or
loope
sub
mov
jb
aad
mov
cmp
(bad)
jmp
loopne
xchg
mov
cdq
or
arpl
xchg
retf
(bad)
(bad)
jmp
jl
loop
loop
add
xor
mov
or
in
shl
push
cld
adc
and
movups
in
sbb
cmp
add
jmp
mov
dec
sbb
(bad)
mov
jp
jmp
mov
shl
xor
dec
les
inc
jmp
inc
adc
(bad)
mov
cmp
mov
movs
pop
loope
(bad)
(bad)
(bad)
(bad)
(bad)
push
pop
stc
pop
dec
adc
dec
fld
dec
mov
call
push
fs
inc
sti
test
mov
xchg
inc
push
or
hlt
(bad)
fbld
and
pop
sbb
and
inc
cmp
push
lods
jp
mov
adc
call
movs
addr16
jo
and
cmp
dec
push
jb
(bad)
(bad)
(bad)
out
dec
cmp
adc
ds
pusha
xchg
pop
push
(bad)
push
(bad)
dec
add
loop
xchg
cmps
add
mov
(bad)
(bad)
out
test
xchg
adc
sbb
popa
jo
into
nop
pop
adc
or
into
fild
das
clc
mov
lds
cld
sar
scas
sub
xor
xchg
(bad)
jmp
and
mov
mov
sti
cs
mov
pop
pop
and
inc
cwde
xchg
sub
cld
lahf
or
loope
mov
xchg
xchg
stos
push
jbe
call
and
push
or
outs
clc
(bad)
(bad)
mov
jmp
pop
call
ins
jo
dec
sub
mov
sbb
(bad)
(bad)
(bad)
mov
jg
popa
sub
jle
jnp
cmp
(bad)
(bad)
call
sbb
ds
cs
fwait
xor
ins
scas
sbb
ds
mov
(bad)
mov
pop
mov
nop
xor
adc
mov
sub
inc
sub
cli
icebp
(bad)
jmp
dec
fwait
adc
(bad)
dec
cld
(bad)
push
mov
jbe
jmp
dec
adc
jg
js
(bad)
sub
xchg
adc
loopne
in
or
cmps
sar
scas
clc
sahf
shl
loop
scas
aaa
pop
pop
(bad)
jmp
xor
test
push
add
cmp
lds
push
test
call
repz
stos
lods
sub
(bad)
(bad)
(bad)
mov
pushf
mov
push
mov
xchg
and
pop
stos
(bad)
(bad)
mov
xor
push
mov
bound
pop
arpl
(bad)
(bad)
cmp
push
ds
call
cmps
ss
sbb
jb
fidiv
imul
call
lock
adc
popaw
inc
pop
cmp
cmps
push
jae
fucomi
outs
(bad)
(bad)
jmp
dec
sahf
addr16
mov
call
data16
cli
ficom
push
test
or
jmp
sbb
add
call
cli
call
lea
movs
sbb
out
or
fisubr
dec
jmp
dec
jmp
data16
pop
fild
sbb
pop
push
retf
data16
add
pop
out
pop
sahf
test
jae
lds
push
bound
pop
mov
enter
movs
cmp
aad
or
mov
mov
pop
call
or
mov
call
(bad)
mov
stos
or
pop
and
call
adc
dec
jg
mov
pop
pop
stos
or
add
rcr
aas
aas
(bad)
push
xchg
(bad)
(bad)
(bad)
(bad)
jmp
imul
sub
xchg
sbb
cmp
stos
mov
push
dec
or
dec
mov
mov
fmul
push
test
mov
sub
sar
push
sbb
pop
inc
ret
cmp
(bad)
mov
outs
cdq
gs
mov
jmp
loopne
lds
sbb
test
push
enter
mov
mov
pop
loopne
push
in
retf
jp
or
mov
retf
or
or
push
frstor
imul
lea
push
mov
cmp
and
add
mov
or
cmp
cmp
cmp
inc
pop
inc
push
push
xchg
mov
inc
enter
ja
aam
ret
cmp
sbb
cld
mov
(bad)
jmp
mov
inc
mov
call
call
mov
movs
scas
(bad)
jmp
and
push
leave
and
int
xchg
retf
movs
pushf
cli
jmp
(bad)
(bad)
call
enter
jp
aaa
jae
mov
sbb
sub
test
inc
sbb
inc
xchg
jmp
push
std
push
(bad)
and
std
pop
pop
dec
and
fidiv
aaa
std
pop
adc
leave
and
adc
dec
popf
movs
arpl
mov
int3
addr16
lea
adc
mov
loope
lahf
out
push
lahf
(bad)
(bad)
(bad)
call
gs
stos
lahf
push
push
adc
in
adc
call
jp
sahf
adc
call
adc
std
cmp
mov
(bad)
(bad)
(bad)
call
pop
dec
(bad)
mov
inc
mov
pop
je
int
xchg
outs
inc
es
inc
std
mov
mov
or
pop
dec
fimul
je
out
arpl
sbb
call
or
inc
mov
mov
dec
cwde
shl
stos
(bad)
(bad)
(bad)
dec
mov
outs
xchg
xor
ret
sbb
push
scas
sub
out
ins
sub
dec
cwde
outs
and
xor
mov
es
dec
movs
mov
int3
shr
jle
clc
pop
(bad)
adc
lods
cs
sbb
out
mov
and
cmp
push
or
clc
(bad)
(bad)
jg
cdq
scas
xor
or
pop
dec
cdq
sbb
nop
dec
xchg
or
push
mov
cmp
and
loopne
pop
repnz
jp
cmp
(bad)
sbb
in
popa
and
inc
popa
jmp
int
fld
and
imul
jmp
add
mov
loop
pop
hlt
(bad)
push
or
cwde
fwait
scas
dec
and
test
(bad)
pop
xlat
xor
xchg
clc
add
pop
sbb
lods
in
movs
mov
ret
dec
jmp
arpl
pop
mov
(bad)
pop
xchg
call
dec
stos
pushf
cmp
sub
test
adc
fcmove
pop
call
pop
fistp
pop
int3
xchg
scas
int
dec
mov
enter
sub
pop
mov
add
lods
jb
mov
dec
mov
adc
test
rol
dec
pop
fwait
jno
call
mov
dec
cld
scas
push
sbb
dec
cmp
add
(bad)
(bad)
cmp
adc
adc
lods
ins
xchg
nop
dec
pop
out
into
(bad)
(bad)
jmp
sbb
inc
mov
pop
cmp
lods
or
sbb
inc
or
xchg
sbb
ins
(bad)
jg
call
and
int3
scas
xchg
loopne
adc
cmps
retf
or
out
stc
scas
mov
or
aam
lods
xchg
fwait
in
sub
outs
clc
(bad)
(bad)
jmp
out
sbb
inc
in
xchg
aam
or
and
dec
or
(bad)
fcomip
movs
cmps
xor
mov
test
sub
jg
cwde
ss
mov
push
cld
jo
test
jp
xor
mov
loop
inc
out
mov
test
and
lahf
arpl
sub
and
xor
pop
in
pop
mov
sahf
lea
sbb
aam
sub
xchg
mov
(bad)
(bad)
call
cmp
aad
dec
(bad)
ds
and
push
cli
test
(bad)
(bad)
(bad)
fnstsw
inc
call
js
sbb
mov
mov
mov
(bad)
call
xchg
cmp
shl
jmp
test
retf
add
movs
jl
std
pop
lock
sbb
sub
in
sbb
(bad)
addr16
mov
fwait
xchg
xchg
lods
call
outs
cli
(bad)
push
sbb
retf
in
out
push
jg
int
in
sub
push
(bad)
sub
fdiv
das
sbb
mov
retf
jbe
xchg
pop
and
ins
stos
dec
bound
(bad)
(bad)
call
pop
sbb
ror
push
add
sbb
pop
adc
or
mov
cmps
(bad)
(bad)
(bad)
inc
or
jo
cmps
(bad)
(bad)
int3
cmp
dec
aad
push
or
sti
dec
imul
call
or
inc
mov
pop
lods
mov
inc
(bad)
mov
mov
pop
daa
xchg
cmps
mov
lods
lahf
or
movs
push
test
and
sub
int3
pop
in
pop
outs
cmp
std
or
and
pop
adc
fwait
jo
fwait
xlat
pop
lods
stos
(bad)
push
leave
cli
jne
(bad)
xor
jmp
sti
xchg
hlt
jmp
repz
dec
addr16
(bad)
mov
in
and
xor
out
bnd
mov
imul
call
or
lds
or
js
sub
xchg
fld
aas
fdivr
jg
or
and
and
push
xor
lea
(bad)
(bad)
sti
mov
add
mov
in
jb
sub
int
std
sub
retf
loopne
jge
pop
std
jg
fcmove
mov
cmp
jmp
dec
es
les
cmc
xchg
cwde
xor
movs
push
fucomp
jg
dec
adc
pop
adc
dec
mov
and
xor
mov
sub
jo
sub
movs
lods
icebp
and
(bad)
(bad)
jg
(bad)
adc
cmps
or
test
xor
adc
add
shr
mov
call
inc
int3
ret
mov
mov
shr
jmp
sub
cmp
ins
mov
(bad)
inc
into
test
mov
loope
enter
cmps
adc
inc
(bad)
and
(bad)
aaa
lods
xlat
cmp
jl
mov
push
and
mov
in
xor
mov
(bad)
mov
mov
sub
dec
xor
call
aas
xor
sub
jnp
scas
mov
ret
sti
das
lock
(bad)
jmp
ficom
mov
dec
ins
cwde
cmp
or
and
popa
call
ss
jmp
mov
dec
pop
loop
inc
cld
call
loop
jmp
push
stos
xchg
sbb
add
mov
into
test
adc
je
or
rol
fisttp
inc
ja
cmp
outs
enter
(bad)
dec
sbb
cmp
push
pop
inc
shl
pop
loopne
in
mov
and
(bad)
push
mov
lar
jno
test
inc
sahf
sbb
fcomp
(bad)
(bad)
(bad)
(bad)
out
xchg
pop
sub
or
pop
retf
and
push
dec
push
sub
jnp
pop
or
xor
push
scas
int3
fild
cdq
int3
scas
(bad)
lahf
ins
cld
jmp
fisttp
xor
mov
mov
ja
jg
mov
retf
(bad)
in
mov
loop
jmp
mov
call
inc
inc
ror
dec
xor
sbb
jne
mov
cli
adc
xchg
add
retf
mov
sbb
adc
push
(bad)
(bad)
jg
test
(bad)
push
adc
xor
lahf
out
or
popa
sbb
jo
imul
cmp
adc
inc
les
enter
rol
sbb
(bad)
(bad)
dec
cmps
jge
or
aaa
jmp
mov
pop
test
sub
(bad)
mov
or
shr
(bad)
inc
sbb
leave
std
jp
or
loope
jae
dec
add
(bad)
retf
jg
(bad)
cmp
mov
test
ins
pop
and
aaa
cld
(bad)
inc
ja
call
push
jmp
jle
sar
mov
sub
pop
inc
das
movs
loopne
shl
push
push
(bad)
(bad)
(bad)
call
test
mov
test
sub
retf
and
ret
(bad)
fimul
adc
mov
aad
or
inc
ds
imul
mov
jbe
mov
aad
(bad)
fld
div
mov
fisubr
stos
add
cmc
jg
jg
stos
pop
mov
cmp
jmp
push
xchg
sub
push
and
(bad)
fbld
jg
xchg
xor
das
pop
and
(bad)
mov
dec
adc
mov
pop
mov
(bad)
jmp
shl
push
into
dec
push
add
mov
lahf
pusha
xchg
cs
jg
(bad)
call
xchg
out
shr
xchg
hlt
(bad)
pop
ins
bound
dec
ss
fldenv
ja
(bad)
jmp
jae
pushf
mov
(bad)
jg
cmp
scas
scas
lods
lods
inc
add
stos
pusha
xor
jmp
mov
and
lods
inc
(bad)
fcomip
dec
daa
stos
cmps
test
push
shr
dec
(bad)
call
int
sar
shl
xchg
add
dec
imul
mov
pop
leave
clc
fwait
(bad)
sub
or
call
cli
push
mov
(bad)
jmp
pop
clc
lock
lahf
inc
sbb
int3
std
dec
push
movs
pop
push
and
test
enter
ror
in
fcomp
or
or
inc
clc
out
pop
push
push
aam
or
mov
addr16
(bad)
(bad)
jmp
enter
jmp
cmp
ds
lods
push
adc
xor
(bad)
cdq
mov
ret
fisttp
call
aas
mul
out
and
(bad)
(bad)
lods
outs
fnsave
and
push
fsubr
mov
gs
cmp
(bad)
jmp
fwait
clc
test
jp
cmps
jns
adc
adc
call
outs
jecxz
push
rcr
cwde
jmp
mov
sar
xor
sbb
ins
loopne
(bad)
mov
add
mov
fisub
std
enter
mov
pop
ja
xchg
(bad)
jg
add
mov
cmovle
into
xor
push
ins
sbb
jge
adc
(bad)
(bad)
call
push
ds
and
aam
mov
sub
pop
mov
pop
dec
adc
mov
pushf
and
and
xchg
loope
lahf
or
inc
loope
adc
(bad)
adc
lock
pop
mov
out
or
jns
push
mov
sbb
add
jmp
test
retf
sub
xor
mov
mov
(bad)
mov
test
jne
sbb
or
or
movs
sbb
push
dec
sbb
sti
mov
sub
in
sar
inc
loop
mov
cmp
in
scas
and
mov
sub
enter
(bad)
(bad)
call
mov
and
fist
jmp
xor
sub
leave
mov
dec
or
in
test
std
call
cmc
mul
in
xor
xor
mov
push
outs
sub
loop
outs
pop
jne
enter
sub
sahf
retf
mov
test
dec
jbe
fisubr
pop
sbb
mov
sbb
jmp
pop
popa
call
jo
push
and
or
jmp
movs
dec
push
add
xchg
shr
inc
jmp
pop
adc
call
sub
loop
test
push
mov
or
mov
shl
rcl
jg
dec
or
cmp
scas
adc
movs
mov
jmp
(bad)
inc
(bad)
(bad)
outs
loopne
inc
mov
inc
test
(bad)
(bad)
jg
call
or
or
call
cs
in
mov
dec
jno
fdiv
pop
xor
scas
ins
into
retf
ja
ins
(bad)
jg
test
or
outs
adc
mov
(bad)
mov
mov
(bad)
(bad)
call
jmp
jo
call
pop
pop
push
inc
movs
out
cmp
arpl
(bad)
(bad)
(bad)
dec
(bad)
stc
cmp
or
mov
lods
mov
aaa
popw
mov
iret
push
xor
and
(bad)
(bad)
jg
xchg
mov
jno
mov
in
and
(bad)
scas
(bad)
int3
push
xchg
sbb
loope
int3
lea
loop
(bad)
cli
lock
stos
add
xor
or
sti
mov
or
dec
stos
add
xchg
(bad)
lea
mov
les
cli
push
(bad)
(bad)
jg
xchg
iret
lods
dec
outs
clc
sub
test
or
retf
and
pop
jge
and
call
inc
xor
test
xchg
jb
mov
pop
(bad)
mov
fwait
sbb
addr16
pop
jle
cs
aam
pop
and
dec
rcl
cmp
xor
daa
xchg
sti
stos
dec
imul
cmp
test
push
imul
xchg
cmps
scas
loope
pop
xor
fwait
ins
ror
ss
call
imul
or
sar
(bad)
(bad)
push
retf
jo
sub
mov
fnstsw
mov
push
daa
pop
mov
cld
cmp
out
call
dec
sub
xor
iret
push
and
mov
mov
mov
mov
add
inc
mov
sar
fistp
mov
dec
add
push
shr
loop
xchg
jg
movs
data16
clc
clc
or
cmp
loop
aas
mov
mov
(bad)
(bad)
call
das
push
lock
mov
mov
out
mov
test
pop
pop
stos
mov
sub
jmp
mov
or
sub
(bad)
inc
push
push
pop
mov
retf
cld
pop
cdq
jp
lock
ins
data16
jg
pop
(bad)
jg
les
scas
cs
mov
cmps
cmps
in
sbb
jmp
movs
loopne
or
mov
lahf
cmp
cmp
jecxz
test
mov
mov
mov
call
adc
fs
jecxz
mov
in
std
pop
dec
fild
adc
fisttp
add
inc
aas
fdiv
dec
fidivr
mov
jmp
(bad)
(bad)
sub
ins
cld
mov
sub
(bad)
(bad)
jmp
jmp
sbb
loop
mov
xchg
stos
add
mov
pop
add
test
jl
data16
mov
das
clc
(bad)
(bad)
(bad)
inc
clc
test
sub
pusha
retf
jp
loopne
out
stc
mov
fbld
jb
rcl
clc
(bad)
call
in
add
or
push
mov
fwait
adc
jg
icebp
ja
test
jl
mov
pushf
(bad)
cld
and
popf
ss
call
cmp
retf
mov
(bad)
(bad)
call
les
mov
loop
mov
cs
jne
mov
fimul
sbb
jb
cwde
jb
lds
mov
push
xor
adc
test
js
in
pop
pop
mov
loopne
(bad)
push
imul
(bad)
xor
mov
jmp
scas
cli
(bad)
mov
or
xchg
jb
pop
and
inc
cmp
adc
iret
lods
test
lods
cmp
jl
(bad)
(bad)
(bad)
(bad)
in
popa
ins
iret
cs
sub
mov
xchg
arpl
pop
repnz
mov
push
cmp
(bad)
jmp
cmp
pop
xchg
mov
scas
clc
outs
movs
push
adc
(bad)
(bad)
(bad)
push
jbe
mov
gs
test
push
std
fld
popf
mov
lds
in
inc
in
(bad)
mov
jno
(bad)
(bad)
(bad)
jmp
dec
rol
pop
and
into
cmp
outs
in
in
imul
add
das
adc
and
(bad)
cmp
imul
jbe
clc
mov
aam
xor
(bad)
(bad)
inc
scas
repz
sub
(bad)
jnp
ins
or
add
mov
xchg
lahf
add
lods
jg
call
ficom
(bad)
stos
(bad)
outs
dec
jns
lods
pop
loope
ins
adc
aas
movs
and
add
adc
sbb
push
add
dec
xor
outs
cs
call
mov
jmp
fidivr
fsub
arpl
test
(bad)
(bad)
(bad)
call
dec
pusha
push
das
ja
iret
push
pop
add
movs
jl
or
in
push
add
cmps
hlt
repnz
pop
sbb
cmc
dec
adc
stos
repz
dec
movs
neg
fs
aas
jg
das
(bad)
(bad)
call
push
jecxz
fsubr
iret
mov
xchg
cs
mov
call
dec
and
jmp
(bad)
cli
clc
loop
add
push
adc
pop
into
adc
jg
neg
adc
call
or
and
mov
cmp
(bad)
mov
and
in
cmps
cld
and
push
push
popf
(bad)
mov
(bad)
call
gs
data16
retf
mov
movs
mov
movs
adc
imul
call
push
adc
bound
(bad)
dec
push
dec
mov
dec
pop
cmovae
jle
xchg
cli
(bad)
(bad)
out
sub
mov
push
fwait
retf
cmps
sar
(bad)
push
sbb
sar
mov
add
int
jmp
js
outs
xchg
rcr
rcr
clc
call
data16
sahf
(bad)
inc
cmp
retf
cmp
mov
(bad)
jmp
xchg
pop
xchg
mov
push
out
mov
(bad)
in
cdq
jns
adc
call
sub
xchg
xchg
(bad)
(bad)
mov
(bad)
jg
sbb
loope
or
(bad)
leave
adc
jmp
(bad)
(bad)
call
mov
add
call
push
mov
lods
sub
mov
add
mov
mov
sbb
dec
or
pop
dec
and
push
push
mov
cmps
cmp
sub
js
fsubr
mov
shr
inc
(bad)
(bad)
(bad)
(bad)
jl
sub
cmp
push
lods
outs
cmps
in
rcl
leave
and
sbb
out
mov
(bad)
(bad)
call
jmp
mov
and
or
inc
push
xor
mov
imul
mov
xchg
call
adc
sub
(bad)
in
sbb
dec
loop
and
aas
xlat
rcl
dec
cmp
(bad)
jp
cmp
jns
jg
add
or
(bad)
jmp
mov
add
sub
xor
xchg
aad
(bad)
jmp
or
mov
shr
jbe
xchg
push
jge
sub
shr
(bad)
(bad)
call
adc
test
cmp
sub
lds
pop
out
sub
mov
hlt
(bad)
jp
inc
movs
mov
mov
icebp
jbe
add
mov
sub
call
and
(bad)
xchg
xchg
sahf
sbb
adc
sub
push
cmp
dec
sahf
loop
es
(bad)
cmp
mov
push
push
adc
dec
daa
aas
call
test
dec
dec
cdq
stc
gs
sub
xchg
(bad)
retf
sti
cmp
jbe
pop
xor
mov
sbb
mov
std
dec
push
mov
into
(bad)
stos
xchg
inc
stos
out
clc
imul
jmp
mov
inc
jne
dec
adc
sti
mov
pop
sub
das
cli
add
xor
jmp
mov
push
sub
jmp
pop
or
mov
imul
sbb
jmp
out
aas
mov
(bad)
(bad)
(bad)
jmp
pop
sbb
jp
sub
dec
lock
pop
scas
inc
sti
mov
mov
jmp
popa
push
jecxz
gs
cmp
int
sbb
or
jno
and
lahf
cli
loope
adc
jmp
(bad)
call
adc
shl
cmps
dec
aas
mov
(bad)
movs
sbb
sub
out
cmp
(bad)
call
and
push
and
fld
pop
outs
nop
dec
pushf
(bad)
jo
mov
das
adc
xchg
sbb
push
xchg
fidiv
lods
cdq
cs
dec
aam
stos
inc
add
push
out
pop
loop
xchg
(bad)
(bad)
(bad)
jp
stos
fs
imul
push
scas
movs
fcmovbe
cmps
pop
jl
jp
(bad)
(bad)
dec
iret
sbb
and
jmp
inc
ror
fstp
mov
nop
mov
mov
jecxz
push
scas
outs
inc
add
ja
shl
cmp
cmps
fs
aas
jmp
adc
inc
jmp
mov
(bad)
sbb
cmp
adc
add
push
and
jmp
mov
ja
cs
popf
or
mov
test
mov
test
leave
pop
sub
mov
and
stos
mov
(bad)
adc
(bad)
call
sbb
cwde
bound
enter
adc
icebp
call
mov
dec
hlt
fwait
jb
adc
enter
push
popf
mov
xchg
adc
jmp
mov
cmps
(bad)
into
xor
push
aad
xor
sub
clc
daa
mov
mov
scas
fs
push
in
test
and
stc
(bad)
jmp
enter
sbb
xor
push
ins
daa
dec
lods
xchg
test
(bad)
call
movs
mov
push
aaa
dec
sbb
push
lahf
mov
sbb
jbe
scas
mov
sub
dec
lea
jp
cwde
mov
hlt
adc
xchg
mov
and
mov
(bad)
(bad)
mov
retf
rep
cmc
xor
(bad)
ds
daa
sbb
mov
mov
sub
jmp
sub
fistp
out
or
rol
cs
retf
int3
test
(bad)
(bad)
(bad)
call
pop
add
sbb
cmps
shl
cmps
pop
imul
aaa
jl
mov
push
inc
call
mov
outs
inc
nop
test
sub
(bad)
stc
scas
cli
mov
lock
jg
test
rol
dec
cmp
repnz
mul
pop
scas
call
pop
cld
dec
mov
lods
nop
pop
sbb
inc
sti
daa
icebp
mov
sbb
jmp
pop
fstp
mov
adc
xor
jno
push
clc
mov
(bad)
dec
repnz
sub
enter
shl
call
test
enter
out
add
xchg
adc
cld
xor
xor
mul
(bad)
jg
sub
cmp
mov
stos
call
in
(bad)
jmp
add
mov
retf
add
push
jnp
mov
mov
lods
(bad)
jmp
in
mov
out
add
add
mov
pop
push
ret
aas
xchg
shl
jp
inc
cmp
or
clc
jae
cmp
or
leave
cmc
cmp
mov
jl
cli
xlat
pop
add
imul
mov
jecxz
xlat
in
mov
test
jmp
std
out
test
fisttp
push
pop
mov
pop
sub
(bad)
push
in
mov
or
or
loopne
and
(bad)
jmp
sti
cmps
push
lea
aas
jns
jmp
cwde
push
or
call
and
retf
fiadd
sub
scas
cld
sub
mov
mov
cwde
out
mov
dec
or
retf
(bad)
adc
jbe
imul
sbb
cli
mov
pop
popa
dec
outs
dec
jmp
mov
mov
sbb
fst
xchg
sbb
stos
mov
dec
lds
sub
cli
mov
(bad)
(bad)
in
push
(bad)
dec
sbb
mov
mov
push
mov
jb
aam
call
ds
popf
sbb
xchg
mov
(bad)
pusha
pop
inc
mov
mov
das
jbe
xor
adc
sahf
mov
jno
dec
jbe
jno
iret
cwde
pop
xchg
inc
add
and
and
(bad)
(bad)
call
xchg
stc
clc
aaa
pop
mov
mov
push
and
xor
jmp
stos
inc
add
dec
ficomp
dec
add
idiv
sub
mov
dec
cs
mov
mov
mov
call
outs
or
dec
pop
mov
jle
inc
cmp
pop
xor
(bad)
(bad)
(bad)
call
fmul
retf
(bad)
cmps
push
and
jle
adc
mov
or
(bad)
cwde
and
sub
mov
gs
dec
adc
jle
(bad)
out
cli
adc
cdq
or
lock
mov
and
jl
lock
ds
jmp
ss
mov
xchg
xlat
mov
pusha
and
loopne
cld
dec
ins
mov
popw
cmp
mov
pop
add
lock
xchg
out
call
aam
jp
mul
adc
mov
(bad)
jg
push
loopne
sti
push
inc
sahf
or
cdq
xchg
and
inc
data16
call
fisubr
sub
(bad)
(bad)
(bad)
call
ror
mov
and
mov
and
jae
in
mov
xlat
fcomp
cmps
dec
cld
call
lods
js
mov
fimul
xchg
mov
aad
stos
adc
in
cmp
loopne
adc
stos
push
rol
mov
(bad)
call
xchg
ror
cmp
push
movs
push
mov
in
or
retf
loope
iret
cmp
push
adc
xchg
jb
popa
imul
rcr
mov
mov
and
(bad)
push
retf
adc
lods
push
adc
int
data16
test
cmc
(bad)
jmp
or
cmp
sub
into
xchg
and
call
cmp
dec
pop
in
xchg
mov
cmp
fcmovbe
add
shl
and
xchg
adc
imul
js
lods
adc
sbb
and
call
and
sbb
ja
ficomp
adc
shl
daa
int3
jecxz
add
lea
into
sub
adc
(bad)
push
mov
sub
jmp
fimul
into
test
fs
xor
cs
cmps
mov
(bad)
(bad)
jmp
ins
inc
xchg
scas
dec
ret
movs
mov
fmul
mov
sub
cli
mov
sbb
fdivp
(bad)
xchg
jle
jmp
call
add
sub
call
cmps
movs
aaa
popa
scas
pop
icebp
dec
mov
jmp
mov
scas
jns
sbb
jmp
and
and
enter
inc
les
mov
jmp
jnp
sbb
and
(bad)
dec
fxtract
out
jns
sub
lahf
sub
call
std
call
fdiv
std
add
jmp
mov
or
jg
add
xchg
into
mov
mov
(bad)
fild
jne
xor
arpl
dec
inc
jg
retf
push
cwde
or
fadd
push
mov
sti
cmp
lods
shr
stos
mov
xor
test
out
ins
and
enter
sbb
push
dec
hlt
lahf
dec
iret
inc
xor
mov
mov
(bad)
inc
ds
sub
fwait
ret
daa
mov
and
(bad)
(bad)
(bad)
jmp
mov
imul
xchg
cld
sub
xchg
jbe
lea
stos
pop
inc
pusha
dec
mov
and
hlt
lock
jle
cli
push
mov
cmps
addr16
sbb
mov
std
xor
lea
mov
jmp
sbb
out
pop
fld
test
retf
jl
adc
xchg
mov
mov
mov
(bad)
jmp
mov
pop
enter
xchg
push
jbe
jge
(bad)
(bad)
jg
mov
jmp
movs
bound
ret
pop
push
add
ds
es
popa
mov
ret
mov
ret
mov
jmp
jns
das
cwde
clc
sub
mov
ss
popa
xor
push
mov
xchg
inc
(bad)
call
and
jp
inc
mov
pushf
or
(bad)
(bad)
mov
xor
loop
scas
fild
mov
(bad)
mov
retf
sub
pop
jne
pop
out
out
cwde
jecxz
daa
xchg
rsm
outs
push
in
cmps
(bad)
(bad)
(bad)
push
mov
mov
and
inc
call
pusha
in
clc
(bad)
mov
cs
pop
popf
push
sub
popf
mov
mov
mov
outs
adc
int3
and
jnp
leave
jno
fwait
adc
mov
call
cmp
sub
mov
and
stos
mov
push
mov
test
(bad)
dec
imul
outs
icebp
mov
es
enter
das
nop
mov
stc
jecxz
or
cwde
xor
sbb
adc
int3
cmp
pop
or
push
xor
repz
(bad)
mov
cli
lahf
mov
movs
sub
dec
push
in
pop
shld
sub
(bad)
(bad)
inc
in
mov
jl
cmps
sbb
gs
scas
sub
add
mov
(bad)
(bad)
out
mov
imul
ret
cmc
inc
inc
inc
int3
adc
(bad)
jbe
fdivrp
jg
inc
pop
outs
push
cs
pop
jp
mov
loopne
(bad)
mov
jmp
jne
add
sub
dec
les
add
(bad)
(bad)
(bad)
mov
aad
nop
dec
adc
iret
aas
mov
cdq
loope
popf
test
(bad)
call
movs
pop
loopne
data16
jnp
(bad)
xchg
inc
dec
stos
data16
adc
call
sbb
addr16
ret
(bad)
pop
ins
dec
xchg
movs
jp
sbb
adc
movs
stos
add
ret
shl
fwait
test
stos
call
jmp
push
(bad)
mov
test
loop
call
push
adc
nop
int
jmp
pop
mov
data16
pop
call
pop
cmp
int
mov
adc
sub
mov
or
dec
arpl
or
scas
outs
push
mov
fiadd
mov
(bad)
mov
sti
cld
(bad)
(bad)
call
pop
mov
mov
in
outs
cmp
and
sbb
aaa
bound
xor
push
retf
dec
loopne
dec
jmp
in
repnz
(bad)
call
dec
lods
jmp
repnz
cld
mov
in
jno
adc
dec
pop
loopne
jno
cmc
xchg
or
fdivr
adc
mov
and
fucomi
add
(bad)
dec
mov
cmps
sub
outs
adc
mov
leave
mov
(bad)
jmp
sbb
jns
fild
xor
jp
jle
retf
iret
cmp
leave
loope
adc
sub
sub
sbb
sbb
jbe
les
outs
sub
mov
sbb
pop
sbb
mov
inc
adc
lock
sar
call
cs
push
pop
(bad)
jmp
cmp
loop
mov
fcmove
(bad)
fbstp
fbld
cmps
je
daa
int
cmp
dec
shr
(bad)
(bad)
inc
jmp
mov
mov
and
js
in
or
pop
into
jmp
(bad)
jmp
ret
aas
sub
sub
xor
ret
mov
jmp
shl
cmp
aad
and
es
mov
mov
fbld
(bad)
(bad)
(bad)
(bad)
out
cli
mov
cs
dec
cmp
or
cmps
retf
mov
out
inc
loop
jle
(bad)
(bad)
(bad)
(bad)
cld
call
imul
mov
push
pop
cmps
out
pop
fild
outs
pop
or
xor
(bad)
(bad)
jmp
loop
mov
or
adc
outs
mov
push
xor
scas
call
sbb
sbb
outs
mov
arpl
xchg
add
inc
std
push
adc
(bad)
xchg
push
call
aam
ss
mov
xor
mov
mov
sbb
(bad)
(bad)
dec
mov
out
dec
int3
rcr
push
mov
dec
and
lods
lods
sub
ret
add
cmps
jmp
loopne
or
add
lock
lock
dec
add
pushw
pusha
mov
add
cli
add
mov
out
aam
xor
call
or
ret
(bad)
call
add
cs
jmp
das
stos
sahf
sti
fdivrp
(bad)
push
inc
test
sub
cmp
mov
cmc
sub
call
sub
push
push
scas
cli
cmp
int3
cmps
stos
xchg
sbb
jle
adc
xor
mov
(bad)
(bad)
call
and
push
cwde
sub
gs
xchg
outs
jnp
mov
jmp
shl
mov
rol
clc
dec
or
push
mov
into
rol
mov
in
or
out
mov
xor
test
enter
(bad)
(bad)
dec
or
jbe
xchg
lods
stc
mov
jb
xlat
sub
xor
cmp
ret
add
stos
sub
mov
fisubr
pop
in
lea
push
adc
(bad)
mov
push
dec
imul
cmp
pop
scas
dec
jle
stos
aad
lock
ror
xchg
dec
ror
mov
test
mov
cs
imul
retf
sti
add
ficomp
mov
cs
stos
mov
sub
(bad)
jmp
cld
dec
jnp
and
repnz
clc
mov
call
push
dec
(bad)
test
(bad)
(bad)
inc
je
mov
sub
(bad)
pop
stc
add
add
dec
sub
std
fbld
xchg
pop
jl
sub
jnp
pop
call
mov
sub
fcom
xchg
leave
scas
call
inc
dec
imul
outs
cli
fadd
dec
cli
add
ja
movs
inc
verw
jg
inc
jns
cmp
ins
(bad)
sbb
ins
adc
lock
loop
bound
call
sub
mov
and
lds
push
and
(bad)
(bad)
call
mov
in
push
call
or
int
cmps
aas
pop
(bad)
outs
ins
xor
adc
and
out
cwde
daa
jmp
in
sub
(bad)
(bad)
(bad)
out
mov
in
and
sbb
out
sbb
test
dec
stos
dec
push
sti
idiv
lods
stos
mov
fimul
clc
xor
call
cmp
cmp
cmps
(bad)
jmp
sub
retf
aam
jmp
icebp
sub
add
or
cmp
push
stos
dec
inc
mov
or
lea
jmp
inc
push
pop
cmc
cld
add
mov
(bad)
(bad)
dec
mov
mov
inc
mov
imul
xchg
and
jb
adc
std
xor
es
cld
mov
fcomip
popf
dec
iret
sbb
pop
and
(bad)
push
dec
mov
out
clc
pop
sub
or
arpl
fimul
jg
movs
or
sub
fwait
stos
and
das
into
test
xchg
mov
scas
bound
sub
pop
mov
stos
(bad)
jp
jecxz
and
sbb
bound
stos
ins
enter
push
xchg
in
adc
fist
mov
cmp
add
ds
jmp
enter
arpl
fimul
movs
xchg
out
mov
gs
(bad)
in
(bad)
(bad)
push
xchg
scas
sub
and
ins
sub
stos
scas
fbstp
mov
and
in
mov
(bad)
(bad)
jmp
stc
push
and
mov
int3
movs
cmp
dec
stos
xlat
dec
dec
arpl
(bad)
(bad)
fstp
shr
jge
icebp
mov
mov
ins
in
test
(bad)
and
out
clc
push
and
push
add
jle
(bad)
jg
add
xchg
stos
mov
(bad)
(bad)
push
sbb
lods
nop
sub
pop
and
and
retf
and
(bad)
mov
dec
movs
int
ror
xlat
loopne
enter
add
or
(bad)
jmp
push
loop
and
jno
sub
mov
sbb
xor
popa
idiv
add
call
fbld
fcom
daa
pop
ret
mov
mov
or
lahf
or
sbb
loopne
(bad)
(bad)
call
movs
and
mov
cwde
movs
sbb
scas
cwde
xchg
mov
out
sti
mov
out
mov
mov
adc
adc
xlat
jmp
loopne
pusha
and
(bad)
jmp
adc
xchg
cdq
xchg
mov
shl
xlat
dec
repnz
sbb
sbb
lock
ds
test
mov
jo
xchg
icebp
jmp
mov
mov
out
in
(bad)
(bad)
jmp
ins
test
fs
(bad)
jne
daa
aas
xor
(bad)
scas
xchg
test
xor
(bad)
(bad)
(bad)
push
cmps
imul
mov
xchg
ret
dec
mov
in
iret
in
daa
imul
push
mov
mov
mov
aad
fstp
mov
xor
leave
sbb
sbb
aas
sub
(bad)
sbb
outs
test
in
sbb
jg
(bad)
pop
xor
popf
call
inc
in
jnp
movs
daa
mov
clc
and
scas
nop
(bad)
inc
pop
push
stos
mov
pusha
dec
cmps
ja
add
cmp
pop
jb
call
pop
stc
jb
fadd
xor
fild
push
adc
cli
lahf
retf
sub
icebp
mov
mov
pop
aaa
mov
dec
mov
cli
add
dec
ret
jnp
push
dec
(bad)
fisub
jmp
aad
scas
mov
das
(bad)
xchg
pusha
or
jae
inc
scas
mov
stos
xchg
add
rcl
or
dec
cmps
test
gs
movs
loop
nop
aad
mov
scas
call
dec
(bad)
push
scas
(bad)
cli
imul
enter
fs
mov
imul
pop
mov
mov
das
std
adc
inc
mov
cwde
lods
cmp
adc
cmp
imul
cmps
or
mov
(bad)
(bad)
jns
and
mov
int3
lods
repnz
inc
xor
pop
inc
stc
mov
xchg
push
(bad)
(bad)
(bad)
jg
cld
pop
movs
loope
leave
pop
int3
mov
and
ins
pop
and
mov
jb
(bad)
(bad)
(bad)
jmp
imul
inc
mov
inc
jnp
fimul
outs
mov
(bad)
(bad)
(bad)
push
call
cmp
adc
pop
test
jge
data16
out
movs
fimul
ret
pusha
sbb
sbb
fst
inc
or
test
fidiv
das
mov
cmp
mov
mov
imul
(bad)
(bad)
(bad)
mov
outs
iret
pop
push
cmp
test
cmp
ins
xchg
sub
es
dec
sub
(bad)
(bad)
push
push
repnz
cmps
mov
imul
sub
or
sbb
leave
(bad)
(bad)
(bad)
(bad)
cld
shl
sub
lods
in
dec
or
das
pop
stos
xor
ss
xchg
push
push
pop
adc
jecxz
push
jle
add
mov
(bad)
(bad)
(bad)
(bad)
jnp
dec
inc
fnstsw
push
inc
(bad)
repnz
lds
jg
mov
nop
xor
inc
(bad)
push
fwait
clc
inc
std
sbb
dec
inc
aad
std
mov
shl
mov
call
pushf
xor
cdq
lea
and
dec
pop
jg
aaa
sub
jne
and
ins
sbb
adc
leave
mov
pusha
int
or
jmp
mov
sub
mov
mov
jecxz
fcmovu
inc
cmp
sbb
cli
dec
add
xchg
xchg
in
jmp
stos
xchg
pop
jle
xor
mov
(bad)
(bad)
jmp
xchg
pop
fsub
leave
jp
enter
mov
sar
push
xchg
add
outs
push
int
pop
pop
pop
scas
rcr
mov
(bad)
(bad)
jg
call
sub
daa
mov
popa
loope
sbb
inc
jno
fistp
(bad)
(bad)
(bad)
push
and
pop
popa
outs
in
fisubr
pushf
or
cmp
xchg
or
xor
sub
(bad)
(bad)
inc
sub
sub
(bad)
push
movs
mov
sahf
fwait
out
in
mov
mov
in
push
add
(bad)
(bad)
(bad)
cmp
test
and
into
sbb
in
cmp
fwait
sub
(bad)
lock
push
xchg
pusha
pop
stos
mov
leave
(bad)
mov
jb
pop
or
inc
ins
dec
push
pop
movs
push
push
jmp
inc
jp
leave
lock
add
(bad)
(bad)
call
adc
cmps
gs
push
mov
mov
dec
popf
gs
add
jg
inc
cmp
jns
jecxz
lods
pushf
ds
jp
jmp
fwait
pushf
ss
into
mov
aas
imul
(bad)
lods
idiv
(bad)
mov
clc
mov
mov
in
cmp
add
mov
imul
sbb
mov
out
sbb
dec
std
(bad)
jmp
pop
(bad)
call
out
fwait
mov
and
cmps
push
sbb
ror
ror
sub
enter
or
inc
(bad)
js
lds
inc
xor
fisttp
and
in
std
in
(bad)
(bad)
jmp
cmp
es
or
cs
mov
in
data16
int3
adc
mov
(bad)
(bad)
push
jns
sub
call
loop
adc
les
dec
sub
xor
mov
sub
mov
mov
jmp
test
loop
jg
push
sub
in
enter
or
pop
iret
(bad)
(bad)
(bad)
mov
push
pop
mov
adc
or
xchg
loope
sbb
inc
fwait
dec
sahf
cli
lods
dec
sub
cmp
retf
loope
retf
mov
out
mov
jmp
out
and
call
mov
sbb
push
inc
xchg
(bad)
out
xchg
mov
inc
jne
adc
mov
mov
sbb
push
mov
int3
sbb
(bad)
call
(bad)
int3
call
test
in
(bad)
(bad)
dec
or
das
jmp
mov
mov
xor
ret
enter
ror
push
pop
mov
gs
add
adc
loope
add
dec
nop
ret
test
pmaxub
(bad)
(bad)
rcl
lock
push
stos
cs
bound
or
xor
jl
adc
std
mov
add
iret
jp
push
add
xchg
(bad)
(bad)
out
mov
xchg
add
mov
sar
pop
jp
pop
fbstp
data16
(bad)
(bad)
(bad)
call
ficom
push
adc
cmc
xor
and
fild
xor
retf
ret
add
jbe
jns
and
or
mov
sub
add
mul
dec
cdq
ss
rcl
(bad)
mov
or
mov
mov
call
cmps
es
iret
loop
ins
mov
jmp
fild
retf
fwait
fwait
retf
lahf
push
xchg
xor
xchg
int3
dec
div
in
(bad)
(bad)
(bad)
jmp
lods
int3
xor
push
dec
sti
pop
and
mov
out
(bad)
cmp
in
cmp
sbb
jmp
jg
fdivrp
in
jne
mov
add
(bad)
inc
sub
inc
outs
mov
mov
jne
out
adc
scas
ss
push
sbb
xchg
in
nop
pop
cld
(bad)
(bad)
mov
sub
ss
push
sbb
lods
scas
adc
int
scas
pop
(bad)
aaa
call
or
ins
xchg
ret
fucomi
xchg
sub
call
(bad)
(bad)
jmp
lock
leave
(bad)
in
adc
cmp
sbb
mov
scas
mov
jle
adc
out
sbb
mov
(bad)
cld
ins
inc
mov
fdivr
(bad)
(bad)
aas
pop
or
cmps
popf
xor
cmps
imul
jp
pop
inc
pop
loop
(bad)
dec
inc
fsubr
data16
stos
add
(bad)
(bad)
jg
call
mov
ret
jnp
dec
mov
(bad)
out
movs
push
xor
pop
sbb
xchg
xchg
retf
out
mov
jmp
pop
call
mov
jp
and
mov
test
test
clc
sahf
push
pop
mov
int3
cmp
outs
mov
out
and
mov
jecxz
pop
fiadd
mov
inc
out
out
xor
push
mov
std
jl
cli
mov
(bad)
jmp
cwde
std
mov
int
in
jnp
and
loopne
lods
jmp
pop
pop
rcr
call
cmp
psubusw
inc
mov
ficomp
fmul
mov
movs
inc
adc
or
leave
xchg
mov
pop
fidiv
(bad)
jmp
add
lea
shr
fisub
or
push
add
(bad)
(bad)
(bad)
mov
and
adc
scas
cmp
pop
jmp
and
in
dec
or
dec
mov
sbb
in
pop
repnz
mov
lods
mov
cmp
mov
repz
es
imul
fwait
jecxz
iret
jmp
adc
ror
push
sub
add
(bad)
mov
es
shl
mov
call
cmp
scas
mov
pop
mov
cmp
mov
xchg
jne
(bad)
(bad)
cmp
retf
sbb
jmp
pop
(bad)
cli
ret
scas
cmp
mov
xor
or
(bad)
loop
sti
ss
nop
fimul
lods
bound
sub
sbb
in
js
pop
mov
(bad)
(bad)
(bad)
jmp
mov
iret
or
pop
int3
add
shl
dec
jne
dec
enter
inc
adc
stos
(bad)
(bad)
(bad)
jmp
cwde
add
popa
jno
add
adc
(bad)
mov
xchg
sbb
ror
ins
das
jae
bswap
(bad)
(bad)
(bad)
push
and
dec
cmps
pop
cmps
sbb
scas
clc
xor
sub
adc
sar
mov
lea
(bad)
(bad)
fistp
ins
aaa
repz
fstp
sbb
xchg
mov
mov
neg
xor
adc
es
out
test
jmp
std
pop
adc
cld
out
mov
xchg
sti
(bad)
div
push
or
fistp
rol
xchg
or
(bad)
jp
jp
sub
(bad)
inc
ficom
fist
dec
(bad)
mov
sbb
(bad)
mov
lods
mov
outs
cmc
and
loop
mov
jmp
xor
and
add
add
cs
push
cld
sub
mov
test
(bad)
jne
cld
jmp
icebp
and
dec
mov
mov
xchg
fisttp
inc
sbb
mov
mov
adc
jb
push
les
push
js
sbb
fwait
out
movs
jmp
push
(bad)
jg
sahf
pop
cmp
pop
pushw
mov
aaa
test
cmps
fimul
jmp
sbb
adc
xchg
sub
cdq
sub
addr16
pop
cli
sbb
mov
(bad)
jmp
jns
dec
adc
call
iret
mov
mov
shl
std
call
call
mov
push
(bad)
pop
inc
add
xor
pop
mov
icebp
mov
mov
push
scas
mov
test
ds
mov
add
jp
sub
adc
je
mov
js
rcr
jmp
xchg
mov
push
cwde
fisub
out
add
clc
in
dec
cmps
pop
(bad)
(bad)
cmp
mov
dec
ss
sub
ficomp
imul
mov
movs
int3
mov
sbb
inc
call
arpl
sub
scas
outs
daa
call
jmp
inc
jg
pop
or
out
pop
out
adc
(bad)
(bad)
(bad)
push
jne
daa
dec
xchg
(bad)
push
stos
iret
pop
sub
das
stos
call
(bad)
(bad)
jmp
push
lods
sub
xchg
sub
and
std
cmp
in
hlt
aas
push
dec
pop
stc
call
mov
add
mov
jge
cmc
test
movs
aas
out
fwait
scas
out
pop
(bad)
jmp
sub
sbb
leave
or
(bad)
in
sub
add
enter
jl
(bad)
call
mov
cs
or
rcl
push
pop
pop
jno
jge
jecxz
mov
dec
movs
call
stos
or
(bad)
mov
dec
jb
retf
cmps
retf
sahf
out
dec
or
(bad)
(bad)
inc
ins
adc
shl
sub
repnz
push
pop
and
or
push
xchg
imul
mov
mov
shl
jge
push
mov
fsub
(bad)
dec
adc
push
xchg
sub
cld
add
std
inc
push
add
jmp
cmp
retf
std
(bad)
(bad)
jmp
icebp
mov
sub
scas
xlat
cwde
inc
lahf
scas
divps
jge
jmp
xchg
pop
cmc
(bad)
inc
or
mov
mov
mov
inc
movs
mov
(bad)
dec
jp
pop
dec
adc
or
and
cmps
dec
xor
xchg
sbb
call
imul
in
push
add
je
(bad)
push
(bad)
push
adc
add
das
pop
leave
sahf
stc
xor
or
or
lock
movs
cwde
mov
xor
(bad)
(bad)
dec
xchg
push
mov
jns
test
into
fwait
loop
inc
arpl
add
inc
call
mov
jmp
or
push
xor
dec
xchg
out
out
adc
scas
cmp
pop
cli
call
pop
xchg
adc
cmps
mov
cwde
mov
icebp
(bad)
fwait
lods
imul
lahf
sub
mov
call
push
mov
mov
sbb
jns
jb
mov
ins
test
inc
popf
je
pop
sbb
movs
mov
xor
adc
gs
dec
mov
out
cli
jge
or
jmp
inc
push
jp
pop
or
jbe
xchg
jl
iret
sbb
sbb
cs
adc
scas
add
cli
(bad)
(bad)
call
(bad)
sbb
scas
out
jmp
jmp
cli
sbb
mov
loopne
push
xchg
aam
(bad)
(bad)
call
pop
gs
movs
(bad)
xlat
outs
jae
cdq
adc
loope
push
dec
outs
dec
inc
(bad)
sbb
(bad)
js
cdq
dec
xchg
(bad)
into
jbe
scas
or
push
jle
into
sub
shld
jmp
in
repz
aas
div
sub
or
mov
in
icebp
call
cli
pusha
fwait
mov
ss
inc
add
stos
dec
or
jb
retf
pop
jmp
mov
mov
cmp
call
(bad)
out
gs
mov
pop
mov
and
(bad)
(bad)
(bad)
cmp
leave
div
mov
popf
test
shl
sub
mov
push
pop
loopne
(bad)
(bad)
jmp
push
fisub
jge
sub
daa
fbld
loopne
inc
(bad)
mov
jmp
mov
mov
test
push
and
iret
gs
lock
cwde
(bad)
dec
add
test
and
shr
sbb
add
push
jb
sbb
sbb
or
in
test
mov
call
add
(bad)
cmp
stc
cmps
retf
or
(bad)
call
out
div
lock
cmp
sub
test
push
mov
cmp
ins
cld
imul
inc
mov
scas
ins
ret
mov
outs
ins
sbb
pusha
scas
jle
sub
fild
cli
(bad)
sub
bound
std
call
les
or
psraw
and
mov
mov
(bad)
(bad)
jmp
scas
test
jmp
retf
loopne
out
push
pop
push
xchg
aaa
call
(bad)
jmp
movzx
ret
jge
cmp
push
mov
push
adc
cli
xchg
xchg
stos
push
and
stos
pop
hlt
sub
aas
adc
call
in
(bad)
mov
retf
jmp
inc
aaa
jp
inc
clc
bound
adc
stos
cmps
inc
adc
adc
shl
and
xor
jmp
js
call
inc
call
int3
cmp
pop
pop
arpl
dec
stos
imul
sub
mov
or
sbb
mov
out
movs
loop
mov
arpl
cmp
daa
retf
push
aam
call
lea
push
dec
loope
popf
or
jnp
fwait
add
call
dec
mov
shr
push
jg
xor
(bad)
(bad)
out
push
sub
lea
popf
in
lds
xor
(bad)
sti
mov
adc
in
jmp
inc
ds
jb
jg
ins
fdivr
aam
or
js
push
popf
xchg
jno
stos
sbb
(bad)
(bad)
(bad)
cld
sub
pop
pop
je
jle
jmp
aas
pop
out
clc
jp
scas
cmps
inc
mov
mov
(bad)
(bad)
(bad)
call
mov
int
push
and
mov
in
xchg
adc
(bad)
mov
and
stos
jo
mov
sub
ins
or
xor
pop
sub
inc
(bad)
aad
leave
xor
add
xor
dec
aas
or
mov
jle
mov
pop
adc
adc
gs
ss
add
mov
pushf
push
in
mov
scas
or
fs
(bad)
(bad)
dec
lods
jle
xchg
call
and
add
and
sbb
mov
cdq
jo
loope
stos
mov
ja
(bad)
jmp
jmp
fst
loope
jp
mov
or
xlat
cmp
pop
cmc
(bad)
jmp
add
aaa
or
daa
call
(bad)
jno
loopne
(bad)
imul
inc
cmc
(bad)
(bad)
(bad)
stc
jb
or
adc
dec
jmp
mov
mov
xor
pusha
inc
xchg
(bad)
ret
xor
(bad)
fcomip
fist
push
mov
stos
pop
sbb
mov
jp
sar
add
loop
and
mov
pusha
or
sub
pminsw
sub
jmp
mov
loop
mov
mov
cmp
jge
sub
and
jg
(bad)
jg
push
cmps
sbb
xchg
inc
adc
add
(bad)
out
xchg
inc
mov
iret
sbb
aad
jmp
mov
adc
in
xchg
mov
add
inc
scas
push
jne
sbb
(bad)
sar
(bad)
jg
pop
and
mov
shl
outs
sub
mov
mov
mov
rol
mov
sti
cmp
(bad)
(bad)
(bad)
jg
ficomp
std
out
sbb
inc
push
loopne
out
xchg
mov
sahf
sub
mov
mov
or
mov
(bad)
fdivr
pop
jo
sub
test
cli
call
and
and
inc
or
cli
out
das
sar
sti
ins
adc
or
cmp
cmps
push
push
fwait
sub
call
mov
daa
out
outs
movs
pop
dec
fwait
(bad)
(bad)
cmp
frstor
call
mov
jnp
inc
(bad)
inc
out
movs
sbb
pop
mov
xchg
adc
(bad)
inc
js
fld
repnz
mov
add
std
outs
out
cld
out
test
push
(bad)
call
sbb
or
mov
pop
sbb
push
mov
icebp
mov
push
std
inc
cmp
jmp
push
jge
pusha
daa
stos
push
pusha
or
call
push
sub
(bad)
(bad)
call
addr16
adc
and
mov
ror
inc
dec
mov
outs
(bad)
(bad)
(bad)
dec
add
loopne
and
retf
fld
xor
test
push
or
mov
(bad)
stos
xchg
leave
das
(bad)
stos
mov
imul
pop
in
cli
push
dec
or
gs
adc
and
sub
pop
rcr
dec
xchg
adc
(bad)
and
dec
cmps
(bad)
jmp
test
dec
les
and
cmp
std
into
mov
push
rcr
dec
mov
sbb
stos
pop
(bad)
jmp
dec
retf
mov
das
mov
mov
inc
jbe
xlat
xor
clc
popf
cli
stos
jle
(bad)
mov
imul
mov
inc
out
fcomp
mov
std
mov
sbb
lea
inc
nop
cs
fs
loop
popa
pop
cmp
movs
jg
or
pop
stos
adc
loope
xchg
in
and
inc
bound
jl
stos
or
jecxz
xor
retf
aam
or
adc
fcomp
es
push
shr
push
mov
loope
cmp
push
fwait
(bad)
(bad)
dec
cmp
into
scas
jge
inc
lods
movs
fisttp
call
pop
pop
clc
(bad)
cmp
(bad)
cmps
retfw
xchg
inc
fs
jmp
aaa
xchg
out
daa
ins
pop
adc
xor
or
(bad)
sahf
mov
push
sub
test
inc
fadd
and
ret
pop
inc
into
idiv
repnz
and
test
fwait
and
call
mov
mov
(bad)
(bad)
call
aad
in
ja
(bad)
call
in
push
pop
aad
scas
xor
push
mov
std
stos
mov
pop
inc
ja
dec
mov
sbb
(bad)
jg
jmp
imul
(bad)
adc
lock
adc
(bad)
(bad)
(bad)
(bad)
fild
adc
inc
adc
call
jle
mov
sub
movs
pop
cli
(bad)
(bad)
(bad)
jle
loop
push
popa
fs
out
pop
cmps
dec
stos
adc
daa
int3
and
aad
stc
stc
jge
jmp
clc
out
sbb
les
or
(bad)
call
push
popa
call
fstp
push
pusha
xchg
jmp
fcomp
adc
(bad)
mov
popa
xor
sub
stos
popa
out
setp
dec
dec
jg
retf
gs
or
(bad)
(bad)
call
push
movs
in
stos
mov
mov
dec
sbb
stos
and
cwde
inc
cwde
(bad)
call
jmp
dec
inc
jnp
lock
mov
cmp
inc
call
push
inc
frstor
(bad)
jg
cmp
movs
jb
aaa
out
mov
(bad)
and
jb
fcos
in
add
pusha
std
inc
or
loope
push
(bad)
cmp
lods
in
push
leave
sar
out
push
loopne
loope
std
and
(bad)
mov
push
sub
(bad)
enter
and
(bad)
(bad)
call
or
and
test
sar
sbb
daa
ret
loopne
call
or
sub
retf
mov
jle
add
(bad)
(bad)
jmp
into
or
test
cmps
inc
mov
mov
gs
dec
push
sub
sbb
inc
sbb
(bad)
cld
movs
shr
push
sbb
mov
(bad)
adc
pop
dec
jo
fdivr
mov
or
push
sub
popa
movs
jmp
ret
(bad)
movs
push
iret
fcmovu
pusha
arpl
push
push
adc
out
push
mov
popa
das
and
ficomp
(bad)
(bad)
jmp
ins
dec
or
movs
jle
mov
movs
test
data16
or
add
or
mov
jmp
mov
dec
in
movs
and
mov
sbb
sub
pop
imul
rol
fldcw
(bad)
(bad)
(bad)
mov
push
jmp
mov
dec
popa
adc
cdq
aaa
rcr
inc
(bad)
mov
sub
inc
test
imul
sbb
dec
jecxz
jmp
xchg
(bad)
jmp
jge
int3
dec
or
cmp
sbb
or
dec
sbb
in
jmp
mov
mov
cmp
cmps
pop
mov
std
jnp
ret
lods
(bad)
call
jno
hlt
mov
dec
jno
xor
sub
(bad)
(bad)
jmp
scas
mov
cs
sti
or
sub
lods
pusha
or
push
jb
(bad)
(bad)
(bad)
jmp
mov
ins
movs
or
add
mov
popa
test
jno
in
imul
pop
aaa
push
or
loopne
mov
jmp
xor
jl
mov
scas
push
inc
sar
jmp
rcl
xor
sti
into
call
mov
lods
sub
(bad)
in
aas
jle
jmp
movs
mov
jge
sbb
jge
jp
dec
(bad)
call
loopne
jmp
repz
clc
std
add
pop
in
iret
(bad)
(bad)
jg
popf
test
loopne
sub
inc
push
cmc
enter
in
mov
sub
sbb
xchg
add
pop
mov
or
(bad)
mov
pop
sahf
rcr
mov
retf
sub
add
(bad)
sub
sbb
repnz
push
sub
rcr
popa
sub
push
jl
mov
and
add
cwde
mov
shl
popa
mov
push
cli
daa
sub
dec
sub
cwde
add
popa
sbb
and
(bad)
jg
or
xor
and
pop
fsub
or
add
pusha
(bad)
mov
xchg
inc
icebp
dec
add
inc
lahf
lods
dec
(bad)
adc
lods
cli
inc
dec
add
test
xchg
mov
jg
jle
push
mov
in
es
ret
add
(bad)
(bad)
jg
sub
out
add
jmp
push
mov
adc
mov
jb
test
jmp
(bad)
scas
jmp
popf
mov
out
pop
sbb
std
add
or
fidiv
mov
inc
sbb
inc
ja
sbb
addr16
(bad)
(bad)
adc
push
not
pop
movs
push
mov
imul
mov
sbb
jmp
mov
jmp
stos
sbb
sbb
daa
mov
xor
and
inc
jmp
aam
pop
sbb
fcomp
push
add
(bad)
(bad)
(bad)
(bad)
jmp
scas
and
loope
xchg
jp
xchg
loopne
xor
int
cmps
shr
out
mov
inc
out
jmp
stos
jmp
sar
test
arpl
mov
stos
mov
es
xchg
stos
sub
add
add
retf
loop
sbb
and
mov
jo
mov
pop
jmp
mov
mov
movs
(bad)
push
(bad)
jmp
movs
inc
je
xchg
dec
in
push
mov
or
add
ret
adc
push
sbb
xchg
retf
dec
js
(bad)
fild
lock
inc
dec
int
jbe
call
int3
push
inc
inc
xchg
sbb
test
sbb
inc
mov
jb
out
lods
scas
test
shl
mov
add
call
pop
lea
xchg
sbb
std
jg
stos
(bad)
xor
xchg
jp
mov
mov
cdq
gs
daa
(bad)
sahf
inc
push
jle
loope
dec
sub
stos
mov
into
jnp
mov
(bad)
frstor
mov
cwde
(bad)
push
xchg
retf
aad
cli
fisttp
push
xlat
pop
or
sbb
dec
adc
(bad)
(bad)
jg
cs
das
jecxz
jae
shr
call
aaa
leave
ja
out
jmp
call
dec
in
sbb
mov
jae
daa
es
cmp
adc
add
loop
jmp
movs
cmp
fstp
push
dec
add
(bad)
(bad)
call
mov
mov
nop
mov
mov
out
dec
sub
or
(bad)
mov
jg
jg
(bad)
fcmovbe
jmp
fsubr
or
loopne
cmp
jmp
inc
div
mov
push
mov
(bad)
and
fistp
jg
sub
imul
cmp
nop
lea
cwde
(bad)
adc
fwait
hlt
pop
fprem
or
retf
pop
neg
call
mov
loop
stos
(bad)
sub
xchg
loope
or
inc
or
pop
mov
aaa
inc
(bad)
dec
aas
add
(bad)
mov
pmullw
mov
aam
jmp
sub
mov
fld
push
sbb
inc
push
loopne
mov
dec
test
xor
or
mov
(bad)
push
mov
enter
sbb
xor
push
xor
movs
pop
loope
cdq
(bad)
popf
and
(bad)
jg
push
ret
mov
call
mov
cli
ficomp
fcom
sbb
push
test
iret
mov
retf
mov
call
mov
(bad)
(bad)
(bad)
jmp
sbb
or
or
mov
mov
js
or
mov
xchg
(bad)
call
xor
test
cs
mov
mov
(bad)
inc
test
ja
das
sbb
dec
pop
dec
jl
imul
add
out
cld
or
adc
inc
and
mov
mov
mov
movq
or
mov
je
movs
(bad)
dec
xchg
sar
mov
cli
jl
rol
mov
fisttp
scas
pop
popf
cmp
idiv
cmc
cwde
pop
and
sub
push
fdiv
(bad)
mov
sub
cmp
fnstsw
pop
je
out
(bad)
jg
inc
in
or
es
sub
mov
rcr
dec
and
ficomp
push
out
lods
(bad)
(bad)
(bad)
jmp
mov
ficomp
lods
movs
shr
mov
cdq
lock
mov
call
sbb
addr16
(bad)
(bad)
call
gs
adc
pop
mov
mov
adc
push
adc
lds
test
inc
clc
cmp
sar
xchg
pop
mov
fs
cld
jg
movs
outs
test
jp
mov
pop
sahf
sub
mov
sub
mov
(bad)
std
push
or
cmps
mov
mov
jae
add
cwde
scas
call
inc
movs
push
adc
popa
std
ja
aam
or
frstor
lods
lods
loopne
inc
xor
and
into
das
mov
sub
fldcw
test
jp
fs
push
inc
cmps
in
js
push
xor
jmp
or
or
bound
leave
aam
enter
(bad)
lahf
add
jp
mov
or
dec
add
push
or
(bad)
inc
nop
and
retf
dec
in
neg
bound
mov
sbb
ins
sbb
push
sbb
fwait
mov
shld
fst
loop
(bad)
call
repnz
in
cmps
int3
pop
into
repz
inc
and
fiadd
adc
sub
lods
cmp
(bad)
dec
pop
xchg
add
out
ret
cmps
adc
jle
ins
pop
ss
repnz
popa
dec
xor
cmp
retf
clc
pop
rcl
fs
call
jne
inc
add
add
pop
jmp
or
ficomp
jg
test
cld
out
cmp
mov
xchg
fisttp
jg
shr
dec
stos
div
and
ret
sbb
mov
dec
push
daa
loope
ins
(bad)
(bad)
call
add
shl
cmc
jnp
movs
pop
mov
clc
popf
or
fst
enter
jmp
sbb
mov
pop
scas
dec
lahf
outs
pop
pop
xchg
push
cmps
ins
add
in
test
clc
or
pop
out
or
dec
cmp
(bad)
dec
adc
cs
dec
in
cld
in
test
imul
jmp
std
sub
lods
push
cmp
dec
int3
cmp
popf
adc
fcomp
mov
jne
push
cld
stos
cld
pushf
pop
lods
pop
js
dec
pop
push
push
cmp
mov
mov
hlt
fadd
fimul
rcr
jecxz
(bad)
dec
pop
retf
std
fcomp
mov
lahf
aam
(bad)
rcr
pop
outs
sbb
(bad)
mov
mov
fdivr
in
popf
cld
and
sti
mov
mov
adc
pop
push
fnstsw
jg
xlat
aaa
fcmovu
popf
ins
or
pop
lods
pop
fwait
and
or
push
sar
ja
(bad)
fstp
in
push
sub
sub
pop
mov
int
sbb
cmp
(bad)
(bad)
call
pop
cdq
xchg
pop
sub
ins
sar
sbb
fcmovnb
int3
pop
fisttp
sub
jg
popa
std
addr16
xchg
popa
adc
(bad)
(bad)
pop
(bad)
cli
add
ins
retf
les
scas
out
mov
shr
test
(bad)
mov
sahf
and
aam
es
loopne
pusha
neg
dec
bound
sub
outs
and
imul
sub
and
(bad)
fbstp
push
xchg
sbb
fisttp
daa
cmp
call
xchg
mov
inc
(bad)
pop
sbb
cmp
clc
ds
jmp
out
pop
cmp
add
lahf
test
movs
sbb
ret
(bad)
mov
js
mov
lds
mov
jb
(bad)
(bad)
(bad)
fist
mov
mov
and
rcr
cmp
xor
dec
pop
lea
(bad)
(bad)
test
lods
push
xchg
pushf
cmp
adc
pop
test
jns
dec
(bad)
(bad)
(bad)
(bad)
dec
jnp
mov
jl
sub
push
mov
fmul
pop
in
stc
jns
ins
(bad)
jg
(bad)
std
and
or
fisubr
jns
lock
std
jl
popa
fcomp
inc
call
and
sub
jno
(bad)
(bad)
inc
jl
clc
stc
mov
stos
pop
imul
jg
sub
and
sbb
loope
test
(bad)
(bad)
call
mov
pushf
sub
sbb
inc
sub
ffreep
int
pushf
pop
ret
and
mov
sbb
(bad)
popf
lea
imul
scas
in
sbb
repz
pop
pop
iret
sahf
jnp
jg
dec
push
es
aam
lea
sbb
lock
(bad)
(bad)
fstp
retf
mov
jp
lds
(bad)
xchg
cmp
test
or
jb
jmp
(bad)
(bad)
ficomp
cmp
sbb
lahf
dec
mov
int
ret
call
dec
pop
pop
outs
ret
dec
pop
jmp
je
pop
lods
lar
pop
sahf
(bad)
out
(bad)
push
fdivr
inc
pop
jg
sub
dec
cmps
out
(bad)
scas
stos
sahf
push
icebp
jg
add
inc
int
jle
scas
mov
(bad)
push
mov
pop
aas
and
dec
xchg
cli
xor
lea
adc
fmul
pop
sti
lods
cmp
jo
test
jg
ins
pusha
imul
leave
mov
cmp
fwait
iret
scas
fcmovnu
cs
(bad)
jmp
inc
outs
scas
pop
pop
outs
pop
sub
scas
das
pop
or
(bad)
(bad)
(bad)
jmp
ds
cdq
xor
out
in
sahf
stc
mov
retf
outs
fs
(bad)
mov
push
stos
push
(bad)
cmps
cmp
clc
fadd
lods
xchg
lahf
loopne
ds
cmps
fiadd
jmp
mov
je
scas
aad
out
pushf
mov
mov
adc
mov
in
jne
dec
test
(bad)
(bad)
dec
cmp
aaa
inc
into
fwait
jae
cmp
mov
push
mov
dec
mov
and
jp
(bad)
(bad)
dec
xchg
popf
std
lods
scas
ins
(bad)
or
(bad)
das
iret
mov
jmp
mov
fs
(bad)
dec
pushw
mov
fldcw
mov
clc
into
ds
xchg
add
pushf
mov
jmp
(bad)
dec
sahf
and
fchs
outs
push
stc
popf
arpl
add
jmp
jae
push
or
inc
xor
xor
push
inc
jns
mov
pop
pop
lock
cld
or
pop
pop
ja
sub
test
and
test
(bad)
(bad)
dec
les
dec
stc
mov
pop
mov
or
js
jg
daa
mov
popa
dec
dec
jns
xchg
fbld
imul
or
fcomip
pop
ret
in
dec
or
jp
sub
dec
cmp
stc
xchg
stos
imul
test
push
inc
hlt
xchg
jle
sahf
test
fistp
dec
fcmovu
call
mov
outs
cli
out
pop
cmps
mov
cmps
mov
dec
mov
pop
pop
retf
(bad)
call
mov
es
dec
int
inc
xchg
jae
test
(bad)
inc
cmps
dec
out
lods
and
aas
cmp
xchg
sbb
sar
(bad)
(bad)
call
fist
dec
lods
and
push
lods
dec
out
test
xlat
jle
cmp
sbb
push
xor
aad
jno
mov
call
add
data16
pushf
scas
imul
jno
pop
add
push
in
mov
push
sbb
cmc
(bad)
fbstp
dec
dec
stos
stos
fwait
fwait
sti
sti
retf
retf
cmp
or
imul
fisttp
add
pop
loope
mov
pop
mov
mov
inc
cld
sub
sbb
jns
mov
into
arpl
outs
(bad)
mov
mov
(bad)
das
das
pop
pop
jg
dec
dec
mov
fld
inc
inc
push
cwde
sbb
jl
dec
(bad)
fbld
add
std
int
cmp
ins
pop
pop
mov
mov
repnz
xor
add
(bad)
mov
mov
add
and
adc
pusha
fdivr
jae
inc
mov
add
loopne
out
(bad)
(bad)
jg
adc
jo
inc
inc
mov
icebp
rol
xor
add
push
push
mov
xchg
(bad)
(bad)
inc
es
push
jbe
inc
inc
cmps
cmps
xchg
xchg
div
mov
(bad)
jmp
movs
xchg
pop
xchg
jp
xchg
hlt
hlt
(bad)
les
fs
push
mov
sar
push
mov
rcl
and
mov
add
movs
mov
push
cld
int
call
movs
dec
mov
aaa
cwd
push
mov
movhps
inc
mov
push
inc
test
jo
je
or
push
sbb
inc
mov
fisubr
inc
lds
outs
clc
fisttp
add
push
sbb
int3
test
imul
inc
mov
retf
or
dec
test
leave
fst
dec
loopne
std
(bad)
sub
dec
push
ja
jae
dec
adc
push
(bad)
push
sub
or
cmp
fistp
add
jns
cs
sub
fld
cmp
sbb
mov
leave
push
in
ss
inc
dec
push
dec
xchg
dec
adc
inc
dec
or
(bad)
cmp
dec
nop
dec
jmp
inc
stos
jmp
js
dec
stos
mov
out
fidivr
and
dec
dec
xor
jne
iret
int3
fcmovu
outs
int3
mov
retf
sbb
sbb
xlat
adc
cs
popf
fnsave
dec
push
jno
inc
lds
push
adc
fucomp
neg
mov
dec
retf
push
dec
dec
cmp
push
and
cmp
mov
pushf
call
jl
jle
or
dec
call
popa
inc
jns
mov
add
mov
js
sbb
lock
retf
lea
fstp
inc
dec
retf
push
dec
movs
pop
pusha
adc
sub
fsub
fwait
cdq
ins
int
mov
dec
inc
xchg
adc
mov
mov
push
in
adc
(bad)
jg
hlt
fwait
dec
test
stos
jns
mov
ja
xchg
jae
popf
inc
es
dec
ja
jnp
out
dec
xor
xchg
dec
jmp
test
dec
mov
cmp
pop
pop
icebp
jle
xor
push
adc
jns
jge
inc
dec
inc
or
dec
jns
inc
dec
inc
mov
dec
cmp
inc
dec
ins
mov
cmp
lds
stos
mov
mov
mov
test
lock
or
(bad)
adc
sub
or
dec
cli
dec
sbb
fnstenv
push
and
sbb
jo
inc
rcr
cmc
mov
sbb
dec
test
xor
std
mov
rcl
jmp
dec
ss
fnclex
mov
lods
fisttp
sbb
inc
fs
xchg
pushf
cld
dec
cmp
inc
lock
cld
inc
xor
cmp
push
jge
aad
cmp
inc
mov
mov
or
push
imul
inc
or
inc
sbb
neg
mov
mov
add
ja
out
dec
inc
ds
dec
lds
xchg
sbb
mov
lods
call
dec
repz
and
cld
clc
inc
in
sub
fistp
add
je
fs
dec
sbb
dec
js
mov
aas
ds
mov
jmp
ja
call
loopne
fcomi
add
jae
jno
retf
xchg
sbb
aad
push
sbb
(bad)
jmp
fdivr
cld
pusha
rol
mov
pop
xchg
mov
cmps
jmp
jmp
xchg
sbb
inc
jns
cmp
dec
lods
imul
fcomp
jmp
dec
dec
mov
dec
cmp
mov
add
movs
dec
sub
push
sub
(bad)
lods
and
dec
aad
inc
inc
pop
push
mov
sbb
fs
jle
rol
(bad)
dec
fcmovu
jecxz
das
adc
in
cld
popf
push
inc
stos
lds
mov
clc
jmp
(bad)
cmp
sub
clc
cmp
push
stos
ins
pop
dec
fadd
(bad)
dec
mov
(bad)
push
pushf
pop
out
dec
jmp
lea
loopne
out
jno
das
rcr
inc
mov
xchg
in
aam
xor
clc
pop
pusha
aad
fs
push
movs
inc
xchg
in
ret
inc
lds
xor
xchg
dec
mov
sub
pop
mov
nop
mov
or
imul
test
adc
mov
fsubr
cmp
sbb
dec
pop
jmp
lods
test
sub
or
xchg
dec
and
push
in
pop
(bad)
(bad)
(bad)
cmp
sahf
out
js
pushw
cmps
xchg
cs
push
outs
jle
pop
loopne
dec
(bad)
out
or
add
bsf
pop
loopne
sub
ins
jl
xchg
in
lea
add
mov
fnsave
sub
icebp
outs
je
xor
cmp
das
xchg
mov
int
inc
mov
and
adc
cmc
sar
idiv
call
and
jb
mov
scas
adc
rcr
movs
repz
fistp
dec
out
(bad)
cld
xchg
inc
lods
sub
mov
mov
add
push
std
call
inc
in
mov
test
pop
push
test
fcmovu
fadd
sahf
sar
outs
cmp
aaa
add
lds
xchg
neg
int3
dec
xlat
sub
inc
mov
mov
add
or
or
in
push
push
cmps
dec
jmp
data16
mov
push
callw
scas
mov
lods
cmp
idiv
pop
sub
cwde
and
or
clc
call
mov
xchg
inc
and
(bad)
jg
add
cmp
xchg
stos
les
inc
and
retf
(bad)
fistp
xor
sbb
movs
inc
cdq
push
mov
xor
dec
xchg
pop
fdivp
lock
or
test
inc
pop
mov
sub
inc
push
dec
dec
(bad)
xlat
dec
jecxz
(bad)
and
call
repnz
add
fwait
out
popf
idiv
dec
cmps
mov
dec
sub
ins
dec
les
cmps
inc
cli
outs
xor
sbb
inc
ins
push
jmp
std
jmp
scas
ins
ss
mul
pop
fstp
fdivp
aaa
test
inc
xor
sbb
jmp
push
and
lea
rcl
cmps
je
mov
ret
dec
enter
ins
add
pop
push
cli
mov
call
test
repnz
sbb
popa
dec
fistp
loopne
push
call
mov
jp
rol
and
loop
or
cmp
sbb
pop
and
imul
or
dec
inc
mov
cmp
pop
and
push
fstp
das
cmp
out
or
dec
mov
fsub
push
mov
inc
pop
push
sub
xchg
and
jecxz
inc
mov
fild
or
(bad)
(bad)
(bad)
cmp
inc
stos
adc
jmp
and
mov
xchg
xor
ins
mov
popa
pop
(bad)
(bad)
(bad)
inc
div
sbb
mov
outs
inc
dec
xchg
rcl
cdq
add
push
outs
push
call
or
inc
repz
inc
pop
bound
push
xor
sbb
and
out
enter
daa
mov
lods
ss
(bad)
mov
ins
mov
push
mov
repnz
cwde
dec
loopne
inc
add
cld
adc
dec
xor
cli
mov
xchg
pop
jl
cmp
sbb
loop
push
movs
es
adc
inc
mov
(bad)
(bad)
jmp
mov
mov
and
or
pop
out
daa
sub
pop
ret
nop
cdq
mov
inc
adc
dec
in
or
add
or
mov
(bad)
jg
add
dec
aas
push
int3
and
ret
cmp
inc
(bad)
push
pop
(bad)
xchg
lock
push
xlat
loop
jl
ficomp
pop
dec
ror
or
jg
or
iret
mov
xchg
mov
pop
leave
lea
mov
mov
xlat
loop
jg
cmps
fldcw
mov
inc
mov
out
pop
adc
lahf
ficomp
loop
loop
fucom
clc
aad
and
or
shl
rol
ja
pop
dec
rol
xor
xchg
outs
dec
pushf
dec
sar
(bad)
call
adc
adc
cmp
(bad)
sbb
xor
mov
repz
cli
outs
xchg
inc
jne
cdq
inc
fisubr
inc
std
(bad)
jg
int3
xchg
push
dec
cmp
and
cmps
pop
in
es
cmp
xchg
clc
jg
xor
cmp
or
stos
mov
jmp
push
fsub
pop
adc
and
std
imul
scas
div
dec
scas
inc
pop
pop
sub
call
jo
icebp
jns
rcr
lahf
adc
adc
outs
(bad)
(bad)
mov
dec
mov
ror
pop
cmp
push
lds
mov
xchg
push
dec
sub
mov
lods
xor
jmp
call
mov
adc
(bad)
mov
mov
jns
ja
call
or
jne
icebp
gs
pop
xchg
mov
cmp
(bad)
and
inc
xchg
rcl
mov
dec
push
loopne
fwait
adc
inc
pop
push
test
inc
fucomp
(bad)
inc
xchg
dec
cmps
loope
mov
jle
pop
repz
inc
inc
jo
mov
mov
(bad)
fistp
(bad)
(bad)
push
pop
inc
pop
imul
test
push
in
sbb
add
mov
and
jo
(bad)
(bad)
loopne
sub
inc
mov
mov
mov
xchg
sub
dec
inc
inc
js
cmp
(bad)
std
add
pop
mov
pop
data16
icebp
(bad)
in
cmc
xchg
pusha
sub
inc
inc
movs
pop
mov
loope
movs
fwait
jne
sbb
ins
aaa
and
int3
sbb
ret
repz
repz
call
cld
test
(bad)
cmc
mov
(bad)
push
stc
jae
adc
mov
dec
xchg
sbb
inc
js
hlt
xchg
mov
(bad)
dec
sub
push
movs
and
adc
in
call
jnp
pushf
and
rcl
(bad)
mov
lahf
getsec
sbb
test
xor
mov
call
call
mov
es
push
popf
std
std
call
ficom
(bad)
sti
cmp
pop
fistp
in
jl
loope
loopne
jg
or
in
les
pop
xor
fistp
ret
test
(bad)
push
sti
aaa
jp
jo
test
rol
xor
dec
cli
jmp
idiv
mov
xor
xor
push
xor
dec
or
icebp
(bad)
(bad)
(bad)
dec
xor
or
icebp
dec
cmp
pop
jmp
outs
test
jne
jge
sar
and
xor
fild
cmp
(bad)
or
mov
lock
cmp
(bad)
(bad)
(bad)
outs
das
scas
fwait
aas
mov
into
push
add
out
pop
cld
jae
pop
sub
(bad)
pop
aad
fisub
jg
inc
push
les
js
jle
jg
movs
ret
outs
enter
int
push
xor
pushf
dec
dec
mov
(bad)
mov
add
sub
mov
aas
(bad)
imul
push
cdq
sar
pop
arpl
(bad)
scas
add
(bad)
(bad)
call
sub
fs
jge
and
fild
or
pop
andnps
dec
sub
or
cmp
fwait
mov
(bad)
(bad)
call
ins
popf
fimul
mov
pop
fldl2t
int
shl
add
(bad)
(bad)
dec
mov
cmps
pop
dec
(bad)
es
jbe
test
add
mov
push
sbb
(bad)
(bad)
(bad)
mov
dec
sub
jl
pop
(bad)
push
pop
call
lds
shr
lea
dec
push
xor
pop
fnstsw
add
and
sbb
mov
dec
(bad)
in
call
pop
lea
dec
les
shl
pop
and
fimul
inc
sub
popa
add
bound
xor
fs
pop
mov
sahf
cmp
xchg
in
out
sub
sub
sti
mov
sbb
call
mov
ja
push
or
scas
ja
or
dec
(bad)
call
mov
mov
cmp
jmp
mov
lock
push
test
pop
add
dec
xchg
(bad)
xchg
ret
hlt
call
ret
dec
packssdw
push
xchg
push
sbb
jmp
xor
cmp
aam
mov
(bad)
sub
mov
or
stos
arpl
dec
sti
(bad)
sub
inc
in
or
dec
aad
jns
jnp
ret
enter
add
xchg
sub
cwde
pop
mov
adc
pop
xchg
jg
sar
repz
popa
xchg
xchg
es
into
pop
mov
push
bound
push
out
(bad)
inc
repnz
adc
sbb
inc
inc
sbb
pop
pop
out
(bad)
fbld
pop
dec
pop
sub
mov
cmp
fidiv
mov
stos
sti
and
data16
ret
jno
adc
inc
jmp
call
call
outs
sbb
idiv
(bad)
push
jmp
add
popa
ret
shr
lods
adc
arpl
adc
jno
call
cmp
cmp
mov
mov
sub
xchg
loope
imul
and
in
sbb
adc
mov
aad
(bad)
(bad)
jmp
mov
and
and
pop
xchg
je
mov
sub
cmp
stc
dec
(bad)
pop
(bad)
(bad)
mov
inc
(bad)
(bad)
(bad)
mov
das
sub
pushf
lea
adc
into
xchg
adc
xchg
jbe
test
dec
lahf
in
aaa
push
sub
adc
add
(bad)
jmp
popf
imul
aaa
jmp
jg
shr
and
jg
mov
pusha
dec
test
test
adc
nop
sti
pop
ins
dec
pop
push
add
icebp
adc
push
jnp
pop
cld
cli
mov
(bad)
inc
dec
daa
(bad)
jle
ret
push
in
mov
push
into
enter
and
(bad)
(bad)
jmp
rcl
xchg
call
push
cmp
add
fdivp
add
cmc
(bad)
(bad)
jg
push
jo
mov
jmp
dec
sbb
jmp
in
jnp
lods
pop
cwde
add
mov
jb
fs
mov
ins
aas
fld
lods
in
inc
push
rol
fld
pop
push
xchg
dec
rol
cmp
daa
push
and
shl
scas
cld
(bad)
(bad)
mov
xchg
push
gs
packuswb
sbb
loop
(bad)
xchg
cli
lock
(bad)
(bad)
fdiv
jne
inc
dec
dec
xchg
pop
popf
pop
jbe
jmp
scas
sahf
fcom
mov
(bad)
mov
mov
push
jl
aam
dec
into
(bad)
push
jg
push
sbb
(bad)
aad
xchg
pop
ffree
sub
jns
aad
mov
imul
(bad)
add
jecxz
test
mov
sbb
xor
call
out
dec
shl
sahf
push
mov
cmp
(bad)
call
jmp
and
pusha
cld
(bad)
call
gs
mov
ret
xchg
ja
cmps
rcl
pop
mov
pop
jge
cmp
jno
jl
or
call
adc
mov
fdivrp
pop
(bad)
movs
pop
or
outs
cmc
(bad)
call
clc
sub
jmp
jl
xor
sbb
xlat
loopne
(bad)
(bad)
jmp
mov
add
bound
and
movs
(bad)
rol
or
inc
sbb
(bad)
(bad)
(bad)
jmp
sub
scas
stc
inc
inc
test
repnz
aaa
adc
cmp
mov
(bad)
(bad)
(bad)
fisttp
add
jl
mov
rcl
mov
mov
(bad)
out
test
push
inc
pop
dec
cmc
rcl
scas
(bad)
fdiv
add
or
test
(bad)
(bad)
jg
xor
popa
fsub
jmp
add
mov
cmp
cwd
pop
mov
iret
push
(bad)
fcomip
dec
shl
in
ins
mov
mov
lods
pop
fsubr
outs
mul
(bad)
sti
lods
xchg
push
sahf
jl
in
cmp
inc
inc
fwait
mov
ss
mov
loopne
fisubr
adc
pop
mov
pop
mov
test
(bad)
(bad)
(bad)
in
stc
mov
clc
lods
arpl
lods
nop
inc
push
sbb
xchg
mov
mov
mov
pop
int3
push
sti
mov
push
movs
repz
sbb
or
sbb
add
jmp
xor
les
lea
aad
js
sub
cmp
jecxz
repz
jge
movs
mov
out
add
cs
fdiv
xchg
dec
jb
xchg
mov
push
dec
xor
dec
pop
or
jne
in
movs
push
sub
mov
and
mov
bound
pop
jmp
mov
(bad)
fldcw
jl
out
and
addr16
jp
mov
(bad)
jmp
stos
sbb
sbb
adc
jge
inc
sbb
sar
jg
mov
and
adc
jo
mov
adc
sbb
and
(bad)
dec
mov
js
dec
in
jo
sub
sbb
data16
(bad)
jg
(bad)
std
mov
dec
sub
or
mov
mov
scas
pushf
adc
aaa
(bad)
call
add
jno
jns
xchg
mov
aas
retf
pop
xchg
push
out
ret
or
dec
(bad)
push
or
in
pop
and
pop
and
inc
inc
xchg
in
fbld
sub
(bad)
call
movs
and
lods
call
pop
sub
jmp
xlat
call
mov
mov
imul
(bad)
fucomp
inc
and
xor
das
push
push
in
dec
xor
sub
or
clc
push
in
in
jno
xor
xchg
es
cld
(bad)
mov
xor
inc
gs
mov
push
jnp
cmp
repz
mov
aas
out
dec
test
push
bound
inc
mov
mov
repnz
(bad)
call
xor
mov
mov
sar
sar
xor
js
cdq
into
(bad)
(bad)
(bad)
mov
(bad)
bound
cmp
mov
dec
jnp
jns
or
lock
ret
(bad)
aas
sar
pop
shl
retf
adc
mov
pop
jbe
mov
(bad)
mov
shl
icebp
mov
bound
(bad)
out
mov
outs
lods
xchg
icebp
retf
sub
cmc
cmps
add
lods
stos
mov
push
add
addr16
pushf
add
cwde
jecxz
sbb
aaa
clc
jmp
in
inc
shl
cli
call
fmulp
jnp
inc
cmp
cli
pop
and
lea
(bad)
(bad)
push
mov
ins
sub
xchg
ret
jle
loope
mov
and
sub
lock
sub
out
(bad)
call
dec
push
scas
dec
and
repnz
ins
aam
neg
dec
mov
(bad)
(bad)
dec
inc
push
or
fldenv
(bad)
ja
mov
xlat
mov
dec
fsub
cmp
inc
(bad)
(bad)
(bad)
mov
(bad)
xchg
sbb
cmovae
mov
pop
scas
fadd
xor
call
aam
test
dec
imul
out
adc
cmp
dec
mov
std
mov
dec
leave
jae
adc
(bad)
(bad)
jg
jecxz
xchg
nop
(bad)
xchg
cld
inc
and
jb
jnp
popf
test
pop
and
cmp
dec
enter
xor
mov
mov
mov
test
pushf
mov
and
call
lock
push
cld
inc
xchg
jle
xor
scas
sti
adc
hlt
push
(bad)
pop
in
add
add
mov
repz
das
call
push
pop
(bad)
pop
aad
(bad)
call
aas
or
mov
jo
cmp
xchg
hlt
dec
sbb
cmp
mov
pcmpeqw
inc
aaa
shl
push
pusha
test
(bad)
dec
push
call
(bad)
push
push
clc
push
pop
adc
test
(bad)
repnz
cmc
and
mov
(bad)
cmp
pusha
mov
je
out
and
fistp
sub
int3
xchg
sub
cmp
je
dec
ret
(bad)
jg
call
bound
xchg
out
cli
sti
add
in
clc
mov
in
sub
xchg
dec
mov
ror
fimul
xor
jl
sbb
dec
adc
jg
cmp
std
cmc
call
cmp
imul
sub
mov
jo
mov
dec
sub
test
xchg
dec
adc
mov
(bad)
push
addr16
pop
fisttp
shl
jns
xchg
cmp
inc
mov
sub
call
(bad)
(bad)
jne
repnz
(bad)
into
add
push
inc
ins
das
inc
es
movs
inc
(bad)
(bad)
(bad)
fstp
scas
jge
das
sbb
xchg
xchg
loope
dec
or
ja
push
aas
or
or
dec
div
(bad)
(bad)
jmp
popa
and
lea
push
mov
inc
mov
pop
imul
(bad)
(bad)
mov
pop
out
sbb
lods
pushf
dec
lds
dec
in
fistp
lea
mov
sub
scas
scas
data16
dec
or
xchg
loop
mov
inc
mov
or
mov
push
and
mov
adc
stc
push
jnp
mov
mov
(bad)
jmp
std
sti
mov
loopne
sbb
jmp
push
cmp
out
call
mov
add
dec
imul
xchg
mov
and
shl
or
jno
out
inc
pop
cmps
sub
or
or
(bad)
mov
ins
mov
mov
sar
inc
aad
cmc
sahf
push
icebp
(bad)
(bad)
(bad)
cmp
sub
push
adc
aaa
fsubr
rol
gs
clc
sti
jecxz
mov
call
pop
add
aas
in
and
dec
fidiv
(bad)
cld
scas
xchg
cmc
loopne
push
dec
test
pop
and
inc
mov
jbe
mov
mov
adc
dec
test
sub
push
in
in
(bad)
jg
mov
int
jb
stc
push
dec
pop
xor
leave
sbb
jnp
xchg
pop
out
pop
outs
(bad)
(bad)
(bad)
jg
mov
pop
dec
push
cmp
dec
jbe
mov
retf
cli
jnp
jne
xchg
xor
(bad)
(bad)
(bad)
mov
int
sar
iretw
mov
std
psrlq
retf
dec
data16
(bad)
call
ret
push
call
xor
jmp
(bad)
call
retf
inc
sbb
add
stos
pop
and
xchg
cli
aam
(bad)
(bad)
cmp
frstor
add
sub
mov
lods
std
(bad)
(bad)
jg
jno
sub
test
add
inc
into
aad
mov
(bad)
repnz
(bad)
fbstp
mov
add
cmp
adc
pop
dec
jle
mov
(bad)
cmp
out
inc
mov
clc
cmp
(bad)
(bad)
call
sub
pop
test
inc
xchg
push
push
ffreep
lea
fnsave
add
int3
cmp
push
mov
push
adc
sub
es
scas
adc
pop
jbe
sbb
or
(bad)
clc
pop
pop
pop
mov
hlt
call
ss
mov
push
icebp
jno
and
aaa
adc
jne
std
ret
cmps
and
xchg
sti
jnp
aam
inc
push
out
(bad)
dec
cmps
pop
cmps
es
test
iret
ret
or
loope
(bad)
push
js
xchg
cmp
ins
jmp
pop
or
(bad)
(bad)
fsubr
or
out
add
inc
iret
mov
scas
pop
int3
pop
cmp
rcr
and
xchg
(bad)
jmp
jecxz
daa
mov
push
shr
int
rcr
in
push
add
aas
mov
xlat
je
mov
pop
pop
or
or
mov
out
cmps
mov
popa
pop
pop
jl
sub
ds
xchg
(bad)
(bad)
push
hlt
inc
mov
sti
sbb
in
loope
jmp
(bad)
jne
sar
jg
cmps
(bad)
pop
cmps
inc
push
mov
inc
jg
call
sbb
sub
mov
sub
push
jle
xlat
push
in
fucomp
cli
dec
jnp
iret
cmp
inc
cmp
mov
(bad)
mov
das
div
repnz
jg
pop
mov
mov
(bad)
fist
fnstcw
xchg
(bad)
pop
jge
inc
sub
push
sar
call
jmp
xor
lds
adc
mov
add
cli
icebp
mov
(bad)
jmp
(bad)
loop
(bad)
or
jmp
rcr
mov
push
jmp
add
pop
mov
xchg
add
hlt
(bad)
fild
jo
xchg
xchg
ss
sub
stos
ins
jmp
test
(bad)
fistp
test
inc
leave
adc
pop
adc
jg
push
add
jmp
adc
lds
cli
pop
(bad)
mov
neg
ss
xor
push
jp
inc
push
test
popf
movs
(bad)
sti
xchg
add
faddp
cmp
inc
mov
mov
repz
cli
jmp
push
cmps
stos
xchg
out
imul
in
push
inc
rcr
sbb
nop
mov
cmp
scas
std
mov
add
cmp
xlat
outs
adc
jbe
inc
arpl
cld
test
jecxz
call
call
jno
push
and
(bad)
push
test
enter
(bad)
mov
xchg
call
and
test
sahf
repz
(bad)
(bad)
(bad)
jmp
inc
cmp
mov
add
sbb
add
mov
data16
xchg
or
(bad)
mov
sbb
retf
in
mov
adc
loope
stos
data16
jl
sub
mov
sbb
sub
aaa
call
pushf
call
jmp
fisub
sub
xchg
xchg
adc
adc
adc
pop
(bad)
(bad)
call
icebp
popa
or
push
inc
not
fs
or
cmp
out
lds
pop
lahf
pop
clc
(bad)
push
cmp
mov
imul
push
or
push
std
mov
movs
cld
pop
(bad)
daa
dec
aaa
cmp
add
fsubrp
mov
lock
(bad)
jg
mov
push
call
dec
xor
dec
call
(bad)
fldenv
push
push
clc
(bad)
(bad)
cmp
out
pop
es
add
lock
jmp
add
(bad)
call
add
push
dec
add
mov
jle
xchg
aaa
dec
test
jmp
aad
iret
jae
adc
iret
dec
push
cmps
pushf
je
push
sbb
inc
lea
xor
shl
push
sub
rcl
cmp
mov
mov
ss
outs
mov
and
inc
pop
aam
pop
loop
ins
aas
cmp
(bad)
(bad)
mov
lahf
ret
cwde
dec
pop
dec
inc
arpl
jno
push
cmps
push
dec
dec
add
cmp
mov
ret
push
ret
les
push
jnp
push
call
lock
xchg
aam
or
cmp
mov
arpl
sbb
andnps
iret
mov
jecxz
test
pop
rcr
push
dec
icebp
(bad)
push
xchg
cmp
sahf
pop
cmp
test
inc
jecxz
and
mov
jg
dec
cmps
sbb
lea
inc
jne
pushf
maskmovq
test
leave
jmp
fisubr
pop
sub
mov
loop
add
dec
and
jecxz
sti
inc
cmp
push
xor
stos
out
addr16
out
jecxz
xchg
xchg
add
ret
mov
jge
adc
mov
xor
push
lock
mov
pop
jp
push
aam
pop
cld
(bad)
cmp
retf
mov
stos
out
inc
adc
xor
and
call
pop
adc
dec
pop
and
cmp
cmp
es
mov
stos
out
gs
std
call
cli
loope
scas
xlat
pop
mov
jmp
pushf
push
(bad)
jp
(bad)
push
or
rol
int3
es
push
pushf
jns
jmp
daa
out
sbb
and
loope
outs
mov
pop
ficomp
(bad)
in
xlat
mov
test
push
arpl
or
stc
into
popa
sbb
mov
push
(bad)
(bad)
push
mov
xor
xchg
ins
add
test
cmp
fprem
inc
pop
pop
in
sbb
(bad)
call
test
(bad)
(bad)
push
push
fadd
(bad)
dec
cmp
and
and
dec
pop
or
jmp
stos
dec
push
jb
aas
stc
bound
inc
int3
sahf
pop
adc
loopne
(bad)
jnp
ret
pushf
clc
and
or
mov
xchg
add
push
loopne
(bad)
push
mov
pop
in
inc
imul
lods
int3
adc
sbb
pop
idiv
(bad)
push
fnstsw
enter
fdiv
movs
rcr
cmps
hlt
dec
movs
out
(bad)
in
jmp
add
mov
nop
(bad)
fisub
push
jg
icebp
(bad)
inc
(bad)
call
iret
sub
sbb
xchg
sbb
push
add
jns
out
xchg
movs
inc
cmp
fst
nop
loope
mov
repz
jmp
sahf
aam
sub
pushf
sub
mov
pop
inc
std
jmp
mov
fdiv
and
mov
clc
stos
and
pop
or
lea
outs
clc
jmp
mov
mov
bound
pop
inc
loopne
sbb
mov
sti
and
mov
pushf
push
mov
xor
ja
shl
fist
inc
sbb
mov
sub
jg
(bad)
jmp
imul
mov
dec
ret
scas
xchg
repnz
cmc
dec
(bad)
mov
cld
(bad)
call
mov
fnclex
xor
mov
outs
in
fs
es
leave
rol
fistp
mov
pop
mov
retf
clc
push
fdivr
adc
data16
adc
nop
fistp
ja
(bad)
dec
enter
sar
gs
in
stos
(bad)
test
movs
jbe
jle
fisttp
inc
jmp
jle
inc
mov
adc
push
pusha
or
mov
push
lds
or
jg
ja
mov
retf
mov
pop
lds
xlat
call
repnz
das
inc
(bad)
mov
jne
pop
cmp
scas
cli
(bad)
dec
and
add
xchg
ds
ficom
pop
cwde
aam
add
test
inc
dec
xchg
(bad)
pop
pop
stos
sbb
sub
into
inc
loop
jg
gs
add
mov
lods
test
jb
adc
retf
mov
fcomp
fadd
mov
cmp
push
shr
push
mov
sub
lds
sahf
inc
and
mov
pop
sar
int
adc
mov
and
jg
xchg
xchg
push
adc
fwait
ror
popa
rcl
inc
mov
mov
or
call
fisttp
push
je
stc
retf
xchg
dec
dec
outs
and
adc
cmp
dec
cmc
sub
pop
pop
das
mov
cmp
out
data16
enter
repnz
push
(bad)
out
aaa
rcl
sub
ins
ds
or
inc
cli
xchg
loop
jnp
stc
mov
add
and
pop
movs
xchg
mov
dec
mov
in
add
push
movs
xchg
or
into
inc
gs
mov
xor
in
dec
mov
call
repz
sahf
(bad)
(bad)
aas
cmc
ins
cmps
jl
mov
push
out
ins
cmp
lods
mov
cli
int
ss
clc
rcl
push
and
(bad)
jg
clc
push
jns
adc
ss
pop
pop
lods
mov
out
(bad)
pop
cwde
adc
inc
inc
push
xor
adc
inc
inc
ficom
and
cs
cmc
jo
xchg
jb
mov
stos
lods
adc
fs
jge
mov
xchg
or
(bad)
(bad)
and
movs
adc
inc
add
cmp
pop
(bad)
out
add
jecxz
push
out
dec
hlt
xchg
popa
pop
dec
inc
jb
jne
pop
xor
std
idiv
sub
les
xchg
pop
or
aad
cdq
and
gs
xor
ret
mov
pusha
xchg
mov
mov
push
jno
mov
(bad)
dec
xchg
adc
inc
movs
hlt
sbb
push
(bad)
pop
int3
cmps
jb
xor
js
cld
jae
jmp
rcr
cs
push
and
mov
xchg
ins
imul
and
jmp
in
jb
enter
pop
cmps
xlat
push
pop
scas
mov
add
(bad)
(bad)
inc
mov
push
mov
test
ins
lea
or
(bad)
(bad)
inc
pop
pop
jo
ret
bound
push
inc
and
pop
scas
mov
and
fbld
ds
cmp
(bad)
aaa
cld
(bad)
inc
jge
(bad)
shl
and
(bad)
cmc
(bad)
call
enter
std
(bad)
std
mov
xchg
cmp
call
shl
mov
cld
jne
fucomip
(bad)
inc
pop
int
int
fisttp
inc
aad
jne
push
jl
push
repnz
(bad)
dec
jae
xchg
jge
loop
hlt
push
add
ret
cs
xchg
adc
push
sub
add
(bad)
mov
jp
sub
and
(bad)
ret
into
(bad)
call
cli
addr16
iret
fsubr
jbe
adc
cmps
aam
loope
hlt
dec
mov
mov
imul
into
int
out
call
dec
xchg
stos
mov
(bad)
out
(bad)
jne
je
aad
cmc
lods
(bad)
(bad)
dec
jge
dec
fiadd
sahf
mov
pop
sbb
inc
dec
mov
fild
shl
push
cmps
xchg
cmp
dec
(bad)
adc
fcomp
mov
ds
push
hlt
jg
sbb
ja
test
call
add
inc
cmp
sbb
aam
loop
inc
cwde
outs
add
popa
imul
or
adc
xchg
xchg
icebp
mov
jo
adc
cmp
cli
mov
out
sbb
retf
std
mov
in
imul
jg
sbb
and
cmp
mov
add
dec
mov
dec
(bad)
(bad)
(bad)
mov
ret
sub
xor
push
xor
inc
outs
or
jle
inc
mov
push
xor
jmp
push
das
push
and
fdivr
(bad)
fbstp
add
ds
shl
adc
sbb
xor
push
xor
stos
std
(bad)
jg
fs
(bad)
mov
or
fsubr
ins
lds
mov
call
inc
mov
out
push
xchg
push
loope
mov
(bad)
and
dec
stos
jmp
(bad)
(bad)
call
and
xor
mov
(bad)
fdivr
shr
inc
add
(bad)
call
pop
data16
and
mov
jmp
(bad)
(bad)
jg
and
mov
in
mov
pop
lea
rol
or
loopne
inc
sub
shl
hlt
xchg
jp
push
xchg
push
mov
push
sar
push
push
mov
fdiv
dec
rol
cdq
(bad)
(bad)
(bad)
call
outs
or
(bad)
jl
lods
ds
lods
cs
fistp
xor
sub
loope
call
jg
test
pop
ret
push
clc
loop
sub
sbb
jmp
sub
jnp
mov
(bad)
mov
dec
sbb
stos
pop
arpl
les
add
call
mov
mov
dec
mov
mov
lahf
xchg
xor
fyl2xp1
inc
test
xchg
jae
xor
(bad)
(bad)
jmp
pop
push
fistp
popf
xchg
sbb
jo
sahf
jmp
or
sub
pushf
rcr
stc
pop
cmp
jae
jne
rcl
in
inc
or
in
xchg
push
push
dec
call
pop
or
mov
pop
scas
stos
sahf
ss
xchg
push
jg
pusha
jl
f2xm1
cmps
aaa
test
sbb
push
pop
hlt
mov
call
fdivr
pop
cmp
in
cli
pop
inc
push
dec
inc
inc
fwait
push
sub
push
push
in
add
lahf
mov
in
pusha
mov
inc
and
add
inc
adc
or
(bad)
clc
add
lea
loop
mov
push
(bad)
jns
enter
loop
(bad)
(bad)
jmp
dec
les
out
cmc
(bad)
xchg
ins
push
adc
enter
inc
mov
cdq
leave
xchg
add
jg
movs
pop
scas
mov
call
lea
or
inc
(bad)
inc
(bad)
fnsave
mov
rcr
retf
fcomp
stos
out
cdq
ss
mov
jnp
(bad)
mov
fdivrp
sub
jle
outs
jns
(bad)
int3
shl
outs
xor
(bad)
jmp
jg
pop
fs
mov
pusha
pop
mov
loope
push
into
mov
inc
jl
lock
out
mov
dec
mov
mov
(bad)
pop
dec
xchg
and
sub
enter
adc
in
jl
icebp
clc
or
idiv
(bad)
(bad)
mov
add
cwde
sbb
cmp
push
in
sti
mov
rcl
scas
imul
jnp
or
sbb
jmp
aas
ret
push
iret
mov
test
jp
nop
mov
inc
and
call
in
xchg
(bad)
(bad)
dec
dec
adc
jle
jno
aam
cmp
ja
mov
(bad)
mov
(bad)
jg
std
xchg
es
imul
dec
std
push
repnz
mov
mov
(bad)
inc
js
push
pop
clc
sbb
or
jmp
sub
call
pushf
(bad)
test
lock
xchg
mov
inc
or
(bad)
jg
cld
out
ss
xlat
mov
mov
retf
jnp
mov
(bad)
(bad)
out
or
out
mov
pop
dec
mov
xchg
cwde
cs
aaa
cmp
outs
inc
pop
mov
std
jg
(bad)
loope
push
pop
lock
in
ret
pop
je
inc
xor
(bad)
(bad)
jmp
in
push
loope
or
test
xchg
push
ins
sbb
dec
out
cmp
cld
jg
pop
shl
mov
enter
pop
cmc
xchg
loopne
add
xchg
push
mov
sbb
es
ret
or
mov
or
lea
sbb
inc
ds
add
(bad)
jmp
cmp
shr
adc
stos
dec
rcl
push
and
mov
test
ins
mov
add
dec
xchg
add
mov
push
fnclex
inc
mov
(bad)
push
clc
inc
fisub
mov
out
push
iret
pop
adc
xchg
and
mov
jbe
inc
loope
(bad)
push
test
nop
mov
jne
stos
xor
cmps
xchg
call
neg
in
add
stos
xchg
hlt
add
popf
and
shr
cs
les
mov
mov
pop
pop
xchg
inc
push
pop
(bad)
(bad)
(bad)
dec
je
cmp
loopne
outs
push
pop
add
aam
inc
out
out
in
ret
(bad)
and
jmp
cmp
call
inc
dec
iret
and
pop
pop
inc
outs
movs
mov
mov
push
and
xchg
cs
(bad)
push
and
inc
daa
fld
hlt
cmp
sti
xchg
cmp
adc
cs
jg
or
and
push
in
sub
pop
das
xchg
fldenv
adc
sar
fcomp
stos
push
and
cmp
xrelease
adc
sbb
jmp
pop
ja
adc
dec
(bad)
(bad)
(bad)
call
lods
clc
pop
inc
mov
lahf
lds
or
retfw
call
out
ret
int
push
jne
cmp
mov
imul
add
fild
hlt
or
inc
test
repnz
call
fwait
lea
add
call
repnz
xchg
or
aaa
shr
imul
dec
adc
or
cmc
jg
loopne
das
xchg
jnp
jae
out
out
mov
sub
cmc
aam
test
aam
sbb
xchg
mov
mov
cld
push
xchg
push
call
inc
cmp
aam
mov
out
aas
les
(bad)
movs
retf
cs
mov
data16
and
les
add
cmp
dec
or
mov
adc
out
add
xor
call
push
add
in
lock
fs
and
(bad)
(bad)
out
call
add
cmp
or
cmp
xchg
test
inc
push
adc
loope
and
mov
mov
les
ror
mov
cmp
hlt
retf
pushf
stos
cmps
mov
cli
(bad)
dec
push
fst
test
repnz
add
outs
xchg
test
pop
icebp
in
cmps
xor
xchg
(bad)
mov
lahf
xchg
je
es
and
mov
pop
sub
repz
xor
loopne
call
out
add
call
add
cmp
pop
xor
sbb
repz
mov
mov
push
xchg
rol
mov
and
(bad)
(bad)
jmp
pop
stos
cld
out
cmp
dec
popa
push
dec
inc
cmp
popf
dec
mov
xor
test
(bad)
cmp
mov
mov
and
jp
(bad)
fimul
xchg
mov
add
pusha
lods
(bad)
enter
hlt
sbb
xchg
mov
js
sub
movs
(bad)
in
pop
mov
jbe
ds
dec
ss
enter
mov
(bad)
pushf
retf
shl
xchg
int3
fiadd
mov
push
inc
pop
cli
dec
fwait
mov
mov
(bad)
aam
ss
(bad)
push
gs
push
inc
es
rol
cmp
in
cmp
iret
popa
aad
call
not
shr
jb
mov
push
add
(bad)
(bad)
push
ds
icebp
pop
cmovs
shl
or
fild
push
sub
dec
push
or
cli
and
adc
dec
lds
xchg
pop
dec
scas
scas
not
fild
dec
call
call
mov
push
mov
inc
in
mov
mov
fistp
push
(bad)
hlt
mov
loop
push
call
aad
inc
clc
(bad)
push
and
xchg
mov
mov
sti
(bad)
xlat
sbb
in
xchg
jle
test
aaa
mov
mov
push
test
nop
push
neg
fld
or
shr
(bad)
(bad)
(bad)
mov
mov
int
repnz
add
sub
jecxz
out
and
popf
stos
cmp
(bad)
inc
ss
arpl
adc
mov
sbb
sti
jmp
imul
mov
sbb
push
xchg
in
aas
(bad)
xchg
(bad)
fwait
cli
xlat
(bad)
inc
test
shr
(bad)
pop
dec
xor
jl
add
ins
xchg
push
cmp
lock
inc
push
ss
pop
out
in
iret
fcmovnbe
or
jbe
sub
icebp
push
xchg
xchg
dec
cmp
mov
(bad)
(bad)
pop
test
scas
xor
test
outs
sub
enter
mov
cmp
dec
scas
clc
bound
dec
mov
mov
fwait
cwde
cli
sub
pop
pop
addr16
mov
ret
dec
mov
das
repnz
cmp
sar
pop
icebp
call
call
push
icebp
fst
mov
cwde
(bad)
iret
std
in
or
test
aad
sub
pop
and
sub
jmp
push
(bad)
push
(bad)
cmps
aam
int3
popa
sub
and
bndstx
dec
jmp
adc
lds
std
test
cld
add
aad
enter
ins
mov
lods
pop
arpl
sub
nop
je
(bad)
inc
pusha
sbb
cmp
xor
repnz
fcmovnu
rol
mov
test
xor
repz
jbe
or
jmp
push
std
inc
retf
add
movs
xor
sub
mov
aad
push
test
and
cmp
and
mov
dec
pop
and
dec
into
(bad)
(bad)
call
lahf
mov
inc
fiadd
out
xor
jae
add
push
loope
nop
outs
lods
cdq
test
sub
push
shr
outs
je
(bad)
(bad)
jmp
dec
je
mov
jae
movs
xchg
xor
je
and
ror
inc
movs
(bad)
dec
dec
inc
mov
push
xchg
sub
mov
jno
cmp
retf
dec
mov
xor
mul
jmp
jmp
push
cmp
cmp
jmp
neg
xchg
push
ss
push
fucomi
mov
add
(bad)
jmp
mov
mov
mov
(bad)
(bad)
dec
out
aas
int3
mov
lods
push
imul
jmp
pop
push
xchg
or
fiadd
aad
test
cmps
dec
out
or
xchg
pop
(bad)
(bad)
call
in
imul
outs
scas
out
pop
adc
cmp
aaa
or
(bad)
inc
mov
push
dec
mov
xor
or
dec
push
ja
jbe
jge
and
sbb
pop
add
jb
outs
outs
bound
movs
test
clc
add
int3
and
or
outs
sub
inc
jmp
xchg
push
mov
mov
dec
cmp
call
mov
mov
cmp
push
fisub
jecxz
dec
call
add
push
and
cmp
out
add
std
push
inc
or
cmps
(bad)
add
push
clc
popa
add
dec
push
cs
pusha
clc
rcl
jno
aam
pop
aam
jne
xor
popa
add
mov
aas
jmp
sbb
inc
xor
mov
mov
jmp
mov
mov
cmps
enter
xor
xor
repz
cdq
lods
jne
jmp
jmp
ret
sbb
out
inc
iret
mov
add
pop
test
inc
or
mov
in
(bad)
push
pop
(bad)
dec
cmps
xchg
test
xor
mov
fmul
add
retf
(bad)
(bad)
(bad)
jg
pop
cwde
dec
in
cwde
retf
stc
enter
jecxz
cdq
cdq
test
dec
sti
push
in
sbb
in
clc
cmp
daa
(bad)
(bad)
call
retf
xchg
jnp
mov
sub
xchg
lahf
cs
std
push
cwde
dec
stos
repz
cmp
(bad)
(bad)
push
(bad)
jmp
inc
ror
stc
aad
ror
cmps
inc
loopne
add
ins
and
jmp
jg
jp
adc
xlat
push
gs
out
cmp
movs
push
xor
inc
test
pop
push
out
ss
into
js
(bad)
(bad)
dec
dec
sbb
div
cs
push
cmp
ret
popf
cdq
add
std
(bad)
mov
fstp
or
es
dec
(bad)
lea
sub
jae
jmp
mov
pop
pop
out
jne
xchg
das
xchg
mov
fs
adc
(bad)
(bad)
dec
int3
mov
imul
push
ss
xchg
mov
(bad)
(bad)
jmp
cld
rcl
cmp
pop
(bad)
jle
daa
in
xchg
fistp
pop
aas
out
int3
dec
movs
sub
lock
pop
ins
mov
add
dec
jbe
test
mov
shl
scas
cdq
fidiv
pop
sahf
jmp
(bad)
imul
leave
and
test
jmp
cli
xchg
dec
repz
adc
xchg
pusha
lock
pop
cmps
fs
clc
(bad)
call
popa
pop
and
repz
adc
adc
cld
(bad)
dec
cwde
mov
test
pop
clc
ds
cs
popa
stos
jmp
push
pop
mov
mov
jmp
sahf
scas
xor
arpl
iret
icebp
(bad)
fistp
popa
xor
xchg
jbe
cli
call
inc
ins
stc
jg
(bad)
(bad)
aas
es
jno
adc
rcr
(bad)
lgdtd
(bad)
arpl
or
dec
jns
(bad)
out
(bad)
cld
ds
out
add
loopne
pop
adc
and
xlat
int
fwait
out
es
jmp
hlt
and
or
cmp
je
ret
pop
sub
xor
aas
call
clc
call
mov
cmc
bound
je
outs
sbb
xchg
jg
stc
jnp
sar
cli
(bad)
jmp
mov
mov
sbb
adc
out
cmc
call
jno
adc
mov
(bad)
call
sub
ss
loopne
mov
and
jno
imul
(bad)
jg
call
(bad)
cmp
sbb
js
xchg
iret
(bad)
push
pop
pop
jb
mov
adc
rol
inc
pop
pop
sub
cmp
stos
das
cmps
adc
add
adc
push
call
mov
inc
fcmovbe
add
mov
jbe
mov
mov
aaa
jecxz
inc
in
daa
mov
adc
scas
ds
mov
test
jmp
jnp
imul
in
lods
push
pop
ret
(bad)
dec
stos
xchg
or
addr16
xchg
xchg
ret
sub
push
stos
mov
push
push
daa
sbb
dec
inc
xor
xchg
push
push
inc
add
inc
sbb
cmc
sbb
xor
retf
std
jle
or
dec
xchg
sbb
arpl
test
mov
xchg
bound
ins
or
push
cmp
popa
fcompp
add
ficomp
xchg
dec
pop
(bad)
or
fidiv
in
(bad)
jmp
jle
aam
retf
daa
xchg
dec
cmps
lock
inc
in
fwait
es
(bad)
aas
clc
dec
aad
mov
(bad)
fldcw
xor
pop
adc
inc
test
mov
(bad)
jmp
xchg
pop
mov
inc
popa
xor
popa
sub
add
push
das
and
jmp
jo
pop
icebp
(bad)
jmp
cmp
push
add
in
lds
ret
cli
dec
add
sub
push
out
adc
xchg
sub
shl
retf
and
xor
ret
xor
sub
inc
mov
sbb
mov
jecxz
(bad)
push
adc
imul
call
test
jo
ret
mov
mov
dec
xchg
and
call
sbb
inc
xchg
pop
pusha
ja
xor
sub
aaa
(bad)
dec
xor
fisttp
fbld
(bad)
test
mov
ror
lods
inc
(bad)
(bad)
mov
retf
fst
mov
jl
inc
aam
xchg
mov
jae
(bad)
loop
jmp
cmp
fisttp
loopne
push
mov
pop
(bad)
jmp
pushf
push
aad
add
mov
xchg
(bad)
call
xor
adc
int
sub
mov
(bad)
(bad)
mov
mov
jne
fcom
push
sub
retf
pop
jns
into
sar
sbb
adc
clc
push
jb
int3
div
leave
mov
cld
(bad)
(bad)
dec
mov
jns
xor
in
push
inc
add
(bad)
or
cli
and
mov
dec
fild
sar
push
xlat
movs
sti
shl
mov
neg
sbb
cmp
cmps
dec
mov
(bad)
(bad)
aas
xor
cs
scas
aam
xlat
push
add
xor
sar
(bad)
dec
and
addr16
jmp
pop
push
ins
ds
imul
test
mov
inc
inc
cmp
iret
push
dec
cli
bound
imul
test
add
cmp
movs
mov
test
das
adc
iret
push
(bad)
int3
inc
xchg
lock
test
cmp
dec
cmp
mov
dec
push
(bad)
(bad)
jg
sahf
retf
aam
rcl
xacquire
and
mov
out
int
pop
sub
cdq
cmp
cwde
sub
jecxz
cmc
xchg
mov
pop
add
pop
mov
dec
dec
xor
dec
jno
add
loopne
jo
xor
in
int3
cmp
jns
dec
jmp
xor
sbb
cmps
jmp
and
jns
cmp
mov
pop
and
lods
sbb
sub
jmp
jge
mov
jne
mov
jae
loope
(bad)
inc
and
and
mov
fld
lahf
fistp
das
(bad)
(bad)
(bad)
mov
and
sbb
dec
and
mov
in
pop
mov
test
push
scas
stc
push
mov
mov
sub
movs
scas
jns
jno
xchg
inc
stos
das
ds
(bad)
jmp
inc
je
pop
pop
jb
(bad)
cmp
movs
jecxz
pop
mov
(bad)
jmp
sbb
push
repz
retf
test
ja
jno
adc
repz
fs
out
es
sbb
call
retf
call
cli
mov
repz
or
in
mov
ret
(bad)
(bad)
jmp
mov
mov
push
js
gs
fnstenv
xchg
push
cmp
(bad)
mov
pop
adc
push
fnstenv
loope
je
jmp
sti
sbb
jp
cmova
adc
mov
ret
aam
push
pop
sbb
push
lea
mov
jecxz
jbe
adc
inc
adc
sub
cli
in
mov
push
mov
mov
fistp
add
fistp
add
sahf
pop
(bad)
into
adc
mov
out
jecxz
jo
fisub
mov
pop
ret
jmp
(bad)
(bad)
call
adc
sti
mov
movs
jne
and
inc
xchg
fbld
or
xor
push
out
add
push
xchg
not
call
pop
cmp
push
pushf
inc
(bad)
dec
dec
push
stos
xchg
scas
xchg
adc
push
and
or
push
mov
jl
lahf
out
(bad)
push
inc
cs
fimul
das
dec
push
in
inc
sbb
fimul
(bad)
inc
pop
mov
mov
sub
pop
mov
lods
repnz
retf
(bad)
stc
aam
(bad)
stc
adc
sbb
add
jbe
out
mov
xor
(bad)
(bad)
jnp
and
(bad)
lods
mov
(bad)
inc
out
cmps
(bad)
in
push
jp
jns
push
(bad)
(bad)
inc
push
lods
mov
neg
pop
mov
push
xchg
call
in
clc
lock
mov
hlt
xlat
and
lock
sub
cs
inc
pop
(bad)
sbb
adc
mov
inc
push
movs
(bad)
(bad)
dec
mov
(bad)
in
and
test
ret
movs
cld
(bad)
(bad)
jg
sbb
jl
test
adc
test
test
sub
loope
cmp
inc
aas
clc
ds
jmp
and
gs
mov
jg
or
leave
jmp
mov
mov
push
xor
inc
iret
mov
es
cmp
(bad)
mov
retf
sti
push
inc
mov
loope
call
retf
call
xchg
test
xchg
call
and
push
out
test
test
mov
(bad)
(bad)
(bad)
call
loopne
push
jmp
mov
sbb
loop
push
aam
lods
pop
push
mov
inc
jge
or
outs
sti
retf
lds
pop
mul
push
test
out
inc
loopne
mov
adc
push
addr16
cdq
mov
(bad)
call
repnz
gs
fldcw
xchg
mov
dec
dec
xchg
test
jp
(bad)
(bad)
fistp
jecxz
or
imul
jno
leave
mov
xchg
push
fnstenv
(bad)
(bad)
push
sub
push
test
(bad)
ja
jmp
lods
push
cs
mov
mov
rcr
and
loopne
pop
dec
in
sbb
lock
xor
mov
fidiv
iret
cs
cmp
sub
inc
dec
popf
fwait
mov
mov
add
pop
imul
inc
frstor
mov
shl
push
js
(bad)
(bad)
(bad)
push
add
in
je
mov
add
stos
or
jl
stos
ret
retf
adc
(bad)
(bad)
mov
into
pop
jo
push
pop
lods
in
xchg
movs
and
sbb
xchg
inc
mov
shr
cmp
adc
push
cli
aam
ja
(bad)
pop
out
(bad)
js
and
push
ins
or
jno
mov
pop
imul
add
cmp
jb
pop
(bad)
jg
dec
pop
int
outs
sbb
mov
adc
lahf
push
aas
xchg
inc
cmp
sbb
popf
cmp
xor
lods
xchg
push
xor
ja
(bad)
jmp
ds
shl
clc
dec
iret
xchg
int
cld
(bad)
(bad)
inc
aas
test
dec
adc
loopne
or
and
cmps
dec
dec
add
mov
mov
pop
sub
cwde
aam
mov
(bad)
(bad)
jg
add
add
mov
inc
add
mov
enter
mov
mov
sub
fsubr
sub
loop
movs
mov
sahf
push
pop
lahf
ds
call
paddd
test
jns
test
mov
(bad)
scas
dec
(bad)
cmp
sbb
(bad)
(bad)
(bad)
out
(bad)
ds
dec
neg
ficomp
fdivr
in
jecxz
mov
int
std
in
jp
(bad)
sbb
jmp
int
stos
jbe
and
repnz
out
(bad)
retf
cmps
dec
call
out
jmp
mov
hlt
pusha
jmp
mov
jle
out
sub
jmp
imul
dec
dec
scas
mov
imul
pushf
sahf
cwde
sub
push
pop
mov
arpl
dec
add
cli
cmps
test
test
dec
sahf
fidiv
loopne
repnz
(bad)
jmp
xlat
ret
popf
push
sbb
xchg
adc
stos
fwait
call
(bad)
(bad)
(bad)
(bad)
inc
dec
lods
lods
scas
test
imul
mov
in
(bad)
or
fucomip
leave
in
inc
out
jmp
jecxz
repnz
sub
(bad)
jg
sbb
lahf
(bad)
outs
scas
outs
imul
push
sbb
jb
pop
jmp
movs
sub
inc
fnstsw
jg
imul
and
cmps
pushw
test
pop
ins
jecxz
mov
mov
in
(bad)
fadd
shl
lods
lea
xchg
adc
cmps
mov
mov
push
push
ja
cmp
mov
xchg
push
(bad)
(bad)
(bad)
call
push
jp
loope
ret
add
sahf
jp
cmc
push
pop
pop
loope
rcr
das
(bad)
push
or
xchg
lods
dec
sub
add
stos
mov
pop
out
idiv
lods
mov
(bad)
mov
loope
loop
scas
mov
dec
(bad)
mov
bound
aad
push
add
pop
pop
and
call
push
clc
stos
xchg
mov
lahf
sahf
fwait
in
(bad)
and
(bad)
(bad)
jg
mov
mov
in
(bad)
into
leave
push
cwde
fcmovu
mov
xchg
adc
push
dec
or
add
and
dec
loope
test
dec
mov
mov
mov
sar
sub
adc
xchg
push
pop
fs
push
pop
movs
xchg
xchg
not
out
idiv
leave
rcr
(bad)
out
es
dec
in
lods
out
call
(bad)
(bad)
(bad)
jmp
dec
dec
mov
xchg
sub
gs
retf
mov
push
sbb
mov
mov
cmps
sub
mov
stc
mov
add
mul
xchg
xchg
cdq
xchg
dec
cmps
cmps
cmps
stos
sub
sahf
(bad)
jecxz
jl
(bad)
inc
in
idiv
call
cld
adc
js
xchg
push
pop
pop
mov
push
inc
jmp
(bad)
fcmovu
pusha
add
sub
cli
sti
test
(bad)
pop
or
mov
out
loopne
push
dec
add
rcr
mov
outs
mov
mov
adc
shl
js
mov
sar
mov
fild
sbb
inc
dec
imul
stos
mov
(bad)
cmp
(bad)
fisub
mov
cmp
mov
push
sbb
cdq
xchg
or
mov
(bad)
jmp
mov
cmps
(bad)
(bad)
fbld
push
pop
cs
pop
enter
cmp
pushf
(bad)
dec
data16
jmp
xchg
fstp
xchg
(bad)
(bad)
mov
pop
pop
bound
mov
test
call
lods
outs
push
xchg
jmp
push
loopne
shr
mov
and
cs
push
jmp
cmps
xchg
cs
push
movs
(bad)
jg
adc
popa
add
popa
mov
mov
mov
(bad)
inc
or
add
dec
out
mov
sbb
cmps
imul
sub
xchg
mov
in
push
or
or
into
retf
in
popf
fcompp
mov
mov
js
jmp
loope
repnz
sub
(bad)
aas
std
(bad)
clc
and
xchg
xchg
cwde
and
mov
xchg
push
pop
outs
(bad)
dec
loope
xor
and
enter
(bad)
(bad)
jg
pop
mov
push
or
js
lahf
pop
pop
in
out
movs
movs
cmps
test
std
jg
jp
and
and
mov
retf
sub
(bad)
mov
out
lods
mov
cmp
aaa
call
cld
cdq
call
sbb
mov
mov
jmp
mov
or
in
movs
dec
inc
std
outs
clc
dec
add
out
sub
and
push
loopne
data16
addr16
in
and
out
lods
out
cmc
sub
push
out
out
ins
ins
sub
popa
fucomp
push
in
in
test
adc
in
addr16
(bad)
(bad)
jmp
mov
cmps
in
loopne
in
and
mov
imul
outs
jmp
jmp
adc
test
ins
and
out
jmp
(bad)
(bad)
mov
call
movs
out
out
jg
sub
bound
jg
mov
gs
outs
outs
in
imul
addr16
and
(bad)
addr16
outs
jmp
addr16
in
jecxz
inc
imul
out
movs
call
push
mov
sbb
ins
das
clc
call
in
gs
push
nop
nop
adc
outs
in
pusha
in
jecxz
std
mov
add
push
cmps
mov
cmps
jmp
or
fs
and
outs
out
jecxz
add
add
and
cmc
add
outs
jge
cmp
imul
stos
mov
gs
and
adc
outs
ins
loope
call
adc
call
(bad)
jmp
out
sub
mov
out
cmps
loope
arpl
in
push
pusha
jmp
fld
in
mov
jecxz
in
jmp
or
(bad)
mov
inc
and
add
sub
xchg
in
das
jecxz
(bad)
(bad)
jmp
scas
stos
fcmovnu
(bad)
addr16
xor
add
out
mov
cmps
imul
out
imul
call
add
mov
ins
sub
scas
and
adc
lods
jecxz
mov
adc
jge
jnp
je
(bad)
push
lods
or
jp
nop
call
arpl
iret
push
sbb
imul
not
fwait
loope
outs
cs
add
popa
and
(bad)
(bad)
inc
call
mov
in
in
or
imul
inc
(bad)
(bad)
jmp
lods
cmps
lahf
call
scas
call
cmps
sub
and
ss
adc
popa
in
out
pop
ficomp
sub
in
popa
xor
mov
sub
idiv
fstp
out
jbe
jmp
in
or
sub
sub
xchg
in
sbb
push
and
std
cmc
out
loop
cmp
fcomip
pop
(bad)
outs
fwait
inc
add
mov
mov
(bad)
dec
push
outs
push
fs
and
scas
popa
and
ins
pusha
rol
es
fistp
xor
fistp
gs
dec
or
pusha
adc
or
or
pusha
bound
jp
test
std
or
push
scas
loop
in
call
out
sub
call
in
cmp
scas
adc
loop
cmps
push
fsubr
clc
mov
pop
mov
pop
je
cmps
data16
imul
sbb
inc
jns
jmp
mov
fwait
pop
add
mov
ins
ds
sahf
arpl
cld
outs
adc
jecxz
jns
and
push
push
gs
sub
and
sub
test
in
scas
cmp
aaa
mov
in
loopne
imul
inc
popf
pusha
xchg
mov
xor
jmp
ds
push
mov
or
pusha
cdq
test
mov
test
fist
and
imul
mov
lahf
popa
mov
mov
add
jg
or
ins
popf
imul
addr16
mov
out
clc
(bad)
out
test
dec
fistp
xchg
out
cli
out
mov
gs
adc
xor
jmp
pop
cmp
ins
mov
bound
aam
and
xchg
ins
(bad)
gs
lods
nop
sub
jmp
push
mov
jmp
cmc
inc
mov
mov
ins
mov
mov
in
fwait
push
mov
std
outs
mov
xchg
mov
mov
(bad)
call
stc
(bad)
mov
scas
mov
and
inc
xor
out
addr16
es
loope
aaa
xchg
outs
call
inc
inc
jp
mov
xchg
jg
mov
inc
inc
imul
or
mov
sahf
popa
mov
mov
mov
pushf
call
cli
out
xor
in
jmp
nop
or
push
fist
int3
xchg
outs
(bad)
fisub
sti
dec
inc
lock
mov
push
or
or
xchg
aas
(bad)
cmps
sbb
loop
add
sub
data16
movs
loopne
or
mov
js
or
outs
or
inc
nop
lods
push
aam
scas
addr16
mov
mov
mov
sbb
loope
out
in
xchg
push
test
jmp
or
call
retf
xchg
loope
cld
mov
jmp
mov
sub
mov
retf
add
mov
cmps
or
dec
mov
xchg
ins
mov
and
cwde
shr
mov
in
stos
out
xchg
outs
inc
cli
mov
xor
mov
scas
or
push
aad
xchg
xchg
call
call
sub
in
mov
mov
and
mov
lahf
fwait
call
pop
movs
stos
sti
mov
jg
test
ror
cmps
popa
mov
(bad)
(bad)
out
push
push
imul
mov
cwde
jbe
cmp
xchg
sub
std
fwait
(bad)
(bad)
out
xchg
imul
loopne
fbstp
cmps
call
mov
xor
lahf
lods
jecxz
loop
retf
cmp
mov
dec
dec
jl
mov
scas
bound
or
mov
retf
cmp
fwait
jmp
xor
mov
scas
mov
loop
out
sub
(bad)
(bad)
(bad)
jmp
loope
in
push
or
jmp
add
lods
(bad)
out
call
or
jg
add
ins
es
in
movs
dec
inc
mov
sbb
loopne
call
(bad)
(bad)
(bad)
(bad)
jg
xchg
xchg
mov
clc
and
retf
nop
nop
pop
cwde
and
call
adc
push
push
gs
push
call
clc
(bad)
jmp
ds
adc
call
mov
mov
outs
pop
jns
inc
std
mov
(bad)
inc
ins
js
outs
(bad)
scas
repnz
ss
imul
imul
cmp
xchg
jnp
into
jecxz
out
aad
fwait
jmp
call
ins
ins
cmp
mov
(bad)
outs
push
(bad)
ficom
bound
outs
(bad)
std
mov
aaa
xchg
jb
jb
movs
mov
loopne
and
xchg
lods
add
scas
data16
inc
pusha
ss
fidivr
jle
retf
scas
push
cmp
mov
fisubr
adc
out
and
in
ins
ins
jbe
ret
ins
push
outs
sbb
out
push
(bad)
jmp
clc
jle
push
jmp
imul
push
cs
dec
das
and
lea
jnp
(bad)
loop
jg
out
jo
xor
shr
cs
rcr
call
sbb
in
data16
nop
mov
jmp
dec
fistp
cmps
jecxz
in
mov
not
mov
xchg
loope
cmp
call
popa
xlat
not
out
pop
out
imul
mov
hlt
jb
fistp
push
fs
cmps
and
rol
push
dec
push
enter
movs
and
inc
inc
or
fs
fs
or
sar
dec
out
add
dec
loopne
ins
push
imul
cmp
mov
jmp
cli
popa
or
mov
cwde
add
jmp
pop
cmps
mov
cmc
call
scas
call
push
sar
and
in
out
mov
into
cli
fild
pusha
rol
jnp
mov
jmp
call
out
sub
imul
jbe
pusha
(bad)
outs
sub
jbe
cli
push
jmp
xchg
into
data16
inc
(bad)
sub
shl
in
sti
mov
mov
mov
fidivr
add
popa
fsubrp
add
sub
mov
ins
pop
inc
addr16
dec
(bad)
jbe
cs
das
cli
push
dec
push
pusha
dec
jecxz
jmp
jbe
dec
mov
imul
push
xchg
sbb
sar
(bad)
scas
mov
dec
imul
add
inc
dec
and
adc
cli
scas
repnz
fisub
call
ins
retf
aam
cmp
jnp
test
shl
mov
cmps
(bad)
mov
push
inc
in
sbb
pop
imul
push
wbinvd
pop
(bad)
fcomp
mov
call
dec
jmp
pop
in
cmp
movs
fadd
pop
cmc
(bad)
call
cmp
test
stos
mov
jne
arpl
cli
xchg
enter
sbb
cli
ja
push
retf
loopne
push
mov
mov
arpl
mov
(bad)
(bad)
(bad)
push
mov
dec
jl
adc
(bad)
ror
clc
enter
mov
clc
or
js
(bad)
(bad)
(bad)
dec
or
stos
shr
pop
stos
nop
ja
loopne
pop
ja
imul
stos
scas
dec
icebp
mov
mov
push
popf
mov
into
adc
push
cmp
mov
cli
add
sub
pop
mov
jmp
and
fld
stos
dec
sbb
fild
repnz
stc
stos
sbb
fisub
call
lahf
stos
pop
mov
mov
mov
sub
xchg
add
stos
and
je
adc
push
or
sub
push
mov
stos
icebp
dec
mov
pop
jmp
imul
pop
leave
lock
xchg
stos
hlt
stos
xor
stos
adc
stos
(bad)
mov
fisubr
or
mov
clc
mov
cmp
jns
(bad)
call
mov
pop
mov
pop
mov
popa
cld
cmps
mov
mov
mov
outs
test
mov
jbe
push
mov
add
mov
xchg
pusha
jne
cli
loop
sar
dec
cwde
mov
cdq
mov
mov
mov
adc
jo
mov
mov
call
mov
mov
xchg
mov
mov
xchg
(bad)
out
xor
mov
mov
adc
jno
test
(bad)
jg
dec
push
mov
mov
xor
call
sbb
call
jns
ficomp
pop
call
mov
cmc
popf
call
mov
loop
and
mov
pop
(bad)
jg
cmc
jbe
push
push
xlat
call
cmc
sbb
push
(bad)
ror
cmp
lods
dec
sbb
rcr
js
pop
jmp
nop
scas
sar
outs
mov
out
jmp
pop
jmp
jae
lds
jno
mov
(bad)
jmp
push
jmp
ds
jne
xchg
cli
sbb
cmp
push
(bad)
(bad)
cli
sbb
fdivr
cmp
pop
cli
mov
cli
cld
dec
cli
push
cli
xchg
cli
or
xor
push
cli
sar
adc
fisttp
adc
cli
push
cli
push
(bad)
out
inc
std
cli
mov
idiv
pop
(bad)
xchg
cli
adc
retf
fcmovne
outs
dec
push
cld
pop
retf
sbb
hlt
dec
(bad)
jg
dec
fmulp
ds
lahf
retf
pop
inc
retf
cmp
retf
jae
mov
call
jo
xor
adc
test
retf
aaa
retf
retf
adc
push
movs
(bad)
(bad)
ficomp
fcmovu
(bad)
ficomp
ficomp
mov
das
jbe
mov
fidivr
fisub
(bad)
mov
push
ficom
fidiv
fidiv
push
ficom
ret
mov
adc
je
aad
cli
sub
sub
sub
fsubr
cmp
cdq
sub
(bad)
mov
lahf
sub
sub
pop
sub
mov
(bad)
adc
lock
push
je
jo
push
(bad)
jmp
dec
sub
pop
sub
mov
xor
push
scas
jp
mov
sahf
cmp
(bad)
(bad)
cmp
cmp
stc
cmp
cmp
(bad)
(bad)
dec
sbb
mov
enter
push
cmp
cmp
cmp
(bad)
inc
mov
xchg
cmp
push
cmp
cmp
cmp
fwait
or
mov
(bad)
int
cmp
jns
ds
or
mov
test
or
mov
repnz
(bad)
push
adc
ror
xor
push
or
or
or
or
mov
push
or
call
hlt
or
or
or
sbb
sbb
sbb
(bad)
mov
sbb
sbb
sbb
bound
xor
jb
sbb
push
xor
xchg
sbb
sbb
ja
mov
sbb
cmc
sbb
sbb
push
push
push
rol
push
shl
sub
push
cmp
stc
(bad)
jmp
push
push
push
push
push
push
push
push
pop
std
and
mov
push
push
add
daa
jge
gs
pop
jp
jp
ss
call
in
jns
pop
jp
jp
jp
jp
jp
jp
jp
idiv
inc
fdiv
nop
jp
jp
jp
jp
inc
das
add
push
jp
jp
jp
jp
jp
jp
(bad)
(bad)
in
jp
jp
cmp
dec
jnp
mov
inc
dec
stc
dec
sbb
dec
fisttp
(bad)
(bad)
(bad)
aas
dec
jg
sbb
mov
dec
ror
dec
repz
adc
dec
rcl
xor
fwait
inc
call
pop
dec
je
push
dec
xor
mov
call
gs
fistp
pop
cmp
in
sahf
pop
ficomp
pop
pop
pop
lahf
pop
aas
push
(bad)
call
pop
fcomp
pop
pop
pop
repz
mov
nop
pop
rcr
pop
xchg
inc
icebp
pop
adc
pop
xchg
(bad)
mov
pop
xor
push
call
pop
stos
pop
stos
mov
int3
sbb
gs
jns
pop
stos
mov
call
stos
repnz
or
sub
sbb
push
stos
mov
dec
or
stos
ss
push
stos
aam
mov
xchg
stos
jne
daa
loope
stos
stos
in
mov
cmp
aas
mov
leave
(bad)
pushf
mov
xchg
mov
mov
lock
std
mov
test
xlat
mov
cmc
mov
jnp
pop
mov
cmp
sbb
mov
mov
mov
loope
(bad)
cmp
mov
mov
xchg
mov
mov
mov
mov
mov
fild
retf
cmps
mov
cmps
out
fcomp
and
adc
fwait
pop
fistp
dec
ret
fwait
jl
sbb
fwait
mov
fwait
jae
push
popa
idiv
call
xchg
fwait
neg
adc
je
xchg
fwait
xor
jg
push
sbb
mov
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
jg
dec
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
dec
shl
and
(bad)
pop
sti
clc
sti
cmp
sbb
fsincos
jns
mov
inc
xchg
ds
pop
sti
cld
sti
fdivr
sbb
jge
pop
sti
xchg
sti
push
sti
mov
sar
(bad)
(bad)
(bad)
(bad)
adc
icebp
sti
adc
mov
idiv
jbe
xlat
sti
aad
fcmove
cmp
pop
retf
fwait
retf
sti
retf
cmp
(bad)
mov
clc
retf
cdq
retf
cmp
jns
dec
pop
retf
dec
cmp
jl
pop
retf
std
retf
xchg
retf
(bad)
inc
or
xor
push
retf
icebp
retf
jno
xchg
retf
push
retf
xchg
retf
push
pop
pusha
call
aaa
retf
pop
retf
mov
hlt
retf
push
add
out
sub
cmps
fistp
fstp
fcmovnu
fistp
(bad)
(bad)
fcomi
fist
fist
lock
(bad)
fist
fcomi
inc
mov
xor
xchg
fcomi
fisttp
fisubr
fwait
sar
fldcw
sbb
sahf
sub
xchg
sub
mov
aaa
sbb
repnz
adc
jae
shr
jo
xchg
sub
sub
push
sub
sub
hlt
sub
cmc
sub
sti
cmp
cmp
cmp
(bad)
call
(bad)
cmp
cmp
cmp
cmp
cmp
pusha
cld
call
cmp
pop
cmp
cmp
or
or
or
or
or
jle
mov
or
or
retf
add
push
(bad)
jmp
scas
mov
xor
or
test
xchg
or
cli
push
or
sbb
mov
sbb
sti
inc
call
popf
sbb
xchg
sbb
push
rcr
push
sbb
sbb
sbb
sbb
imul
sbb
imul
call
imul
imul
lods
imul
add
(bad)
jmp
imul
nop
imul
icebp
imul
imul
sbb
(bad)
mov
mov
(bad)
pop
jnp
push
(bad)
(bad)
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
inc
xor
jnp
jnp
mov
lock
jnp
jnp
jnp
jnp
jnp
(bad)
push
jnp
jnp
jnp
dec
fiadd
sbb
dec
fisttp
dec
sbb
dec
jns
ds
jle
jmp
jl
mov
dec
repz
mov
jo
adc
dec
test
push
dec
cld
mov
xchg
dec
push
dec
aad
jne
mov
sbb
pop
ds
push
pop
(bad)
jg
add
std
pop
sbb
pop
rcr
pop
jae
jg
(bad)
out
lock
push
inc
icebp
pop
adc
pop
mov
aam
adc
xchg
and
test
test
test
faddp
(bad)
fsubr
cdq
test
test
test
test
test
test
and
(bad)
jmp
jge
xor
mov
xor
xchg
test
mov
std
dec
aam
out
adc
clc
jmp
mov
mov
pop
mov
(bad)
(bad)
jge
repnz
mov
push
mov
mov
(bad)
mov
hlt
inc
xor
cld
(bad)
(bad)
push
mov
pop
mov
mov
mov
mov
pushf
mov
(bad)
jmp
std
mov
repnz
mov
mov
mov
mov
hlt
mov
cmp
call
pop
cwde
cdq
cwde
stc
cwde
(bad)
cwde
mov
cwde
pushf
cwde
sbb
xchg
cwde
sbb
push
cwde
repz
rcr
push
cwde
neg
ja
xchg
cwde
push
cwde
xchg
cwde
xor
fwait
dec
loop
call
mov
call
call
cmp
call
mov
push
call
sar
(bad)
push
call
xlat
call
push
call
adc
clc
fwait
clc
aad
add
mov
clc
pop
clc
popf
or
(bad)
clc
mov
jb
xchg
clc
sar
jae
push
clc
adc
mov
jno
jbe
(bad)
jmp
aaa
clc
mov
aad
xor
enter
enter
enter
enter
ret
es
enter
enter
enter
enter
(bad)
jg
dec
push
enter
enter
enter
enter
enter
enter
cmp
ret
clc
(bad)
fdivr
fcomp
fdivr
lahf
fdivr
fcomp
add
jl
popf
fsubr
(bad)
(bad)
(bad)
fstp
pop
fdiv
fcom
fdiv
rcr
push
fcom
fdiv
fdiv
inc
sub
(bad)
call
sub
sub
jg
fild
sub
sub
mov
sub
sub
call
sbb
mov
imul
aaa
sub
sub
je
aad
out
es
sub
pop
xchg
cmp
fidivr
jg
inc
(bad)
cmp
cmp
pop
cmp
cs
cmp
adc
mov
sar
adc
push
rcr
mov
dec
idiv
xlat
cmp
cmp
call
pop
or
dec
pop
or
or
jl
popf
or
call
or
or
xor
lock
mov
or
xchg
or
mov
adc
mov
psrlw
jns
pop
sbb
sbb
call
cmp
jl
pop
sbb
sbb
sbb
(bad)
(bad)
(bad)
nop
sbb
sbb
sbb
jbe
aam
adc
xchg
sbb
push
cwde
push
pop
push
mov
push
mov
shr
push
rcl
shr
push
mov
xchg
push
(bad)
call
mov
sahf
js
js
js
js
js
js
(bad)
mov
js
js
js
js
js
js
js
js
js
dec
call
dec
jp
cmp
dec
js
cdq
dec
(bad)
jmp
movs
dec
pop
dec
fisttp
dec
pop
dec
cmp
dec
xchg
dec
ror
out
mov
lock
mov
ror
inc
(bad)
(bad)
(bad)
push
xchg
dec
aam
adc
cli
pop
cmp
pop
mov
pop
mov
pop
jle
mov
sbb
sbb
pop
jge
mov
xchg
pop
lock
adc
pop
xchg
pop
fild
mov
xor
aam
je
cmc
inc
xor
pop
mov
test
sbb
pop
test
cmp
test
pop
test
xor
(bad)
test
xlat
test
push
(bad)
mov
test
sar
fdivr
sahf
mov
(bad)
mov
fdivr
pop
mov
les
mov
xchg
mov
pop
mov
push
(bad)
cmp
sti
mov
mov
cmp
stc
mov
mov
pushf
mov
std
(bad)
dec
fisttp
xor
jo
xchg
mov
test
(bad)
call
mov
mov
mov
mov
xor
je
xchg
mov
in
cdq
test
imul
(bad)
jmp
add
cdq
pop
cdq
fcomp
cmp
test
push
xor
xchg
cdq
aas
movs
(bad)
call
mov
jne
mov
jmp
jmp
loope
(bad)
jmp
cmp
jl
mov
mov
shr
jae
popf
test
jmp
adc
ss
mov
cli
(bad)
mov
(bad)
jnp
js
stc
sbb
mov
stc
pop
(bad)
(bad)
(bad)
fild
mov
stc
jge
mov
jb
push
stc
xor
adc
mov
sar
jno
push
stc
xchg
stc
idiv
dec
or
stc
push
stc
cli
leave
fcmove
mov
leave
push
fisttp
leave
lahf
in
aas
leave
mov
leave
adc
push
leave
jo
(bad)
dec
push
leave
xor
adc
jbe
mov
xchg
leave
xor
aad
mov
fcmovu
sbb
pop
fstp
(bad)
(bad)
(bad)
fnstcw
fstp
jg
mov
fnstenv
nop
fnstenv
fst
fnstenv
neg
push
mov
mov
xchg
(bad)
fldcw
mov
test
sub
sub
(bad)
(bad)
(bad)
jg
cld
sub
sub
push
sub
sub
sub
sub
sub
sub
imul
xlat
sub
mov
(bad)
(bad)
fist
jnp
cwde
cmp
cmp
cmp
jns
mov
cmp
cli
or
cmp
(bad)
call
cmp
cmp
cmp
cmp
ja
hlt
cmp
push
cmp
cmp
fwait
or
or
fmul
sbb
mov
nop
mov
or
or
or
or
or
mov
ror
jbe
test
mov
hlt
or
xchg
or
call
sbb
push
lock
sbb
icebp
(bad)
call
pop
sbb
sbb
sbb
sbb
lock
sbb
shl
xor
xchg
sbb
sbb
sbb
imul
imul
imul
imul
imul
call
imul
ja
(bad)
(bad)
mov
imul
cmp
jns
jns
jns
jns
jns
jns
jns
jns
jmp
(bad)
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
dec
adc
(bad)
jns
jns
jns
jns
jns
jns
dec
cmp
add
xor
(bad)
(bad)
call
cdq
dec
mov
dec
cld
dec
fisttp
dec
ror
dec
xor
dec
push
dec
jo
inc
add
xchg
dec
mul
dec
pop
dec
mov
aam
mov
loopne
push
outs
dec
sbb
outs
pop
stos
push
pop
mov
out
ss
pop
fcomp
pop
jge
adc
pop
jo
push
pop
jbe
xchg
pop
mov
pop
xor
jmp
pop
sbb
sbb
sahf
scas
(bad)
scas
jg
mov
scas
mov
(bad)
mov
nop
scas
xor
retf
shr
pop
scas
push
scas
adc
(bad)
scas
cmp
sbb
mov
cmps
and
aas
dec
hlt
aaa
stos
sbb
fnstsw
mov
jno
push
mov
(bad)
mov
xchg
mov
fimul
cwde
mov
mov
mov
mov
xchg
mov
mov
mov
aaa
in
push
mov
mov
mov
inc
pop
xchg
mov
xchg
mov
jmp
mov
cdq
sahf
fstp
fistp
cmp
adc
lock
xor
jno
(bad)
sahf
push
sahf
iret
inc
pop
push
je
rol
jl
(bad)
cmp
sbb
fucomi
cwde
out
cmp
pop
pop
out
(bad)
out
push
pmaddwd
inc
lahf
out
aas
out
cld
out
pop
out
xchg
out
push
pushf
out
mov
(bad)
(bad)
(bad)
out
lock
adc
jo
jno
push
out
ss
xlat
out
pop
out
xor
(bad)
mov
pop
and
(bad)
mov
(bad)
mov
(bad)
(bad)
jge
pop
(bad)
push
(bad)
nop
(bad)
jo
push
(bad)
adc
ins
stos
xor
(bad)
in
pop
pop
test
mov
cli
call
jp
sbb
imul
xchg
cmps
adc
int
(bad)
(bad)
(bad)
cmp
(bad)
hlt
push
cmps
sub
jno
mov
aam
pop
ins
std
cmp
jge
sub
cmp
cli
(bad)
dec
in
or
sbb
sub
dec
push
outs
pop
inc
in
pop
mov
jmp
shr
pop
and
adc
xchg
inc
icebp
pop
lods
and
push
sub
test
in
mov
(bad)
(bad)
(bad)
mov
pushf
test
cmp
dec
test
push
cli
nop
dec
dec
pushf
pop
inc
int3
aaa
fdiv
cmps
outs
(bad)
(bad)
(bad)
jmp
xor
test
cmp
imul
push
add
dec
push
jb
jo
sub
call
mov
cli
mov
in
pop
adc
icebp
(bad)
fbld
aam
dec
cdq
pop
dec
pop
stos
outs
push
jl
std
mov
pop
sar
(bad)
call
movs
rcr
pop
add
cmps
mov
mov
inc
pop
jbe
lods
and
push
fisubr
jle
pop
out
xchg
ja
pop
stos
push
inc
pop
pop
mov
pushf
sub
cmps
pusha
inc
(bad)
dec
adc
pop
outs
inc
vunpcklps
(bad)
(bad)
call
loope
dec
dec
push
(bad)
fcmovnu
pushf
daa
in
in
out
cmp
pop
mov
or
jmp
arpl
fcomp
scas
push
or
mov
(bad)
js
cmp
fstp
(bad)
dec
lods
pop
mov
(bad)
das
scas
shl
(bad)
(bad)
dec
lods
fisttp
sbb
mov
retf
pop
nop
mov
sub
pop
movs
and
(bad)
cmp
das
pop
daa
push
pop
ret
add
mov
fild
ins
das
pop
mov
stos
fucomi
loope
hlt
(bad)
(bad)
fisttp
inc
out
jmp
int
cld
fdiv
jmp
(bad)
fild
jmp
sub
pop
cmp
(bad)
and
rol
add
(bad)
fcmovne
adc
pusha
std
pop
(bad)
jg
mov
leave
(bad)
jnp
mov
adc
jg
icebp
sti
scas
mov
scas
mov
add
fcomp
push
mov
jp
pop
jne
mov
lods
mov
pop
aad
stos
pop
call
stos
sar
iret
pop
pop
(bad)
lods
js
rcr
lods
(bad)
(bad)
mov
movs
pop
push
(bad)
mov
jne
movs
dec
sub
jg
outs
jmp
cmps
fst
sub
adc
je
jg
lods
inc
mov
mov
pushf
sbb
push
jne
xchg
mov
pop
jne
xchg
es
gs
dec
push
adc
inc
add
mov
push
sar
sti
pop
push
jl
and
es
call
and
(bad)
mov
sti
loop
retf
mov
js
jmp
jmp
es
enter
cli
call
inc
js
mov
mov
cmp
fdivr
push
inc
sbb
scas
call
enter
imul
pop
cwde
jge
pop
pop
or
inc
mov
mov
push
imul
fsub
inc
rcr
adc
pop
pop
push
sub
push
repz
test
pop
jmp
pop
mov
(bad)
(bad)
(bad)
stc
jl
mov
stos
inc
icebp
int
dec
dec
(bad)
in
mov
or
sbb
add
push
fnstenv
inc
sbb
(bad)
dec
shl
sbb
rdmsr
push
lock
push
call
les
sub
mov
dec
es
push
in
jns
stos
ins
and
pop
cs
imul
mov
(bad)
cmps
add
pop
ins
push
or
(bad)
call
cld
jg
addr16
jo
imul
inc
idiv
fisubr
call
cld
ret
jl
push
dec
push
popa
and
mov
ins
sub
cwde
popf
fcomp
(bad)
push
retf
mov
inc
sbb
ret
(bad)
jg
outs
rcl
push
cmp
outs
(bad)
ss
sbb
(bad)
fld
cmp
sar
ds
add
or
sti
and
pusha
xchg
clc
mov
mov
lar
sub
add
js
cdq
fstp
hlt
inc
xor
imul
fs
pop
pop
cmp
pop
ret
mov
jge
shr
in
adc
cld
aas
add
cmc
inc
bound
cmp
loop
xor
or
retf
(bad)
push
dec
call
pop
dec
sub
sub
sbb
fild
mov
fisttp
cmp
cmps
add
into
test
test
fnstsw
(bad)
in
hlt
adc
movs
jne
xchg
or
test
or
(bad)
(bad)
(bad)
mov
imul
jno
pop
enter
sub
sub
shl
outs
and
sbb
jo
out
pop
adc
jmp
dec
inc
gs
inc
push
shr
aas
fimul
cmps
jg
add
clc
aaa
mov
cwde
sbb
je
cmp
inc
test
push
and
ja
mov
retf
mul
(bad)
dec
(bad)
loope
and
ja
push
shl
shl
jmp
loope
xchg
dec
add
enter
sub
ss
dec
int
add
jno
push
jecxz
jo
lahf
dec
hlt
pop
sub
pop
lock
mov
fsub
mov
ret
(bad)
(bad)
aas
inc
dec
pop
adc
adc
je
je
inc
ins
add
adc
pop
pop
jmp
les
push
cmc
(bad)
(bad)
call
mov
or
in
fldenv
push
aas
scas
(bad)
push
and
(bad)
(bad)
call
call
inc
(bad)
lods
pop
into
and
icebp
and
mov
ss
(bad)
(bad)
push
(bad)
and
cwde
xor
inc
pop
jnp
rcl
psadbw
out
sbb
jge
jmp
push
cs
jmp
xchg
ret
(bad)
fldenv
adc
shl
adc
push
cmp
adc
data16
fwait
imul
aas
(bad)
call
dec
test
mov
pop
and
dec
imul
int3
mov
out
mov
inc
js
sbb
in
(bad)
je
jl
scas
push
jmp
xchg
(bad)
mov
scas
adc
(bad)
(bad)
mov
(bad)
xor
out
popf
xor
ja
es
jb
fistp
xchg
out
push
add
je
sub
mov
lds
or
pushf
arpl
in
les
(bad)
in
sbb
retf
push
xchg
jae
js
jne
inc
shl
(bad)
(bad)
inc
aaa
mov
ins
ficomp
cwde
movs
(bad)
jmp
add
sbb
push
es
cli
mov
push
ja
jae
pop
and
dec
call
or
cmc
xchg
(bad)
cmp
sub
and
movs
in
(bad)
jnp
call
or
(bad)
shl
mov
xchg
imul
into
bnd
jg
push
je
mov
div
dec
aam
popf
add
jne
dec
sub
into
in
rcl
scas
cmp
(bad)
scas
pop
add
cmp
mov
icebp
aaa
jge
dec
fdivp
in
iret
fnsave
inc
lock
inc
push
rol
dec
mov
and
gs
out
dec
pop
std
dec
(bad)
or
(bad)
call
lahf
cwde
mov
jecxz
push
clc
mov
mov
and
xchg
lods
dec
jl
pop
fdivr
(bad)
(bad)
(bad)
cld
dec
int3
(bad)
leave
mov
ror
(bad)
xchg
push
popf
cmp
mov
mov
in
std
(bad)
cld
test
mov
scas
gs
call
test
(bad)
(bad)
mov
lds
mov
pop
lds
test
fisubr
adc
jbe
and
adc
mov
(bad)
cmp
jl
test
lods
push
xlat
mov
(bad)
(bad)
call
loopne
fnstcw
sub
sbb
popf
sbb
pop
cld
sbb
inc
fmul
cs
and
sub
sbb
pop
(bad)
es
int
xchg
das
fwait
sub
test
pusha
push
(bad)
call
lock
push
pop
mov
(bad)
call
lods
sub
pushf
ret
in
stos
mov
sbb
int3
cmp
jecxz
in
adc
int
iret
call
(bad)
in
inc
int
rcr
jp
pop
aam
je
ins
sub
push
popf
and
cmp
movs
inc
pop
lods
cmp
ficomp
(bad)
mov
pop
lods
cmc
sub
(bad)
(bad)
(bad)
push
fistp
leave
jmp
test
mov
(bad)
push
jno
mov
cwde
ffreep
(bad)
(bad)
(bad)
clc
imul
mov
xor
mov
(bad)
jg
aaa
inc
scas
in
pop
cld
pop
jl
shr
ins
test
mov
test
cld
pop
(bad)
(bad)
call
cmp
das
push
std
sub
test
loop
pusha
ret
fimul
cmp
mov
scas
and
out
cli
enter
xchg
mov
fcmovb
(bad)
mov
(bad)
fbld
scas
sbb
mov
fld
fdivr
pushf
jnp
in
(bad)
std
(bad)
jmp
sub
fs
sub
fmul
pop
push
or
popf
(bad)
pop
pop
sbb
std
(bad)
(bad)
mov
out
cmp
mov
fdivr
icebp
daa
xchg
pop
jg
bound
pop
jg
dec
je
movs
xchg
sar
jae
push
push
outs
mov
push
daa
sub
les
pop
clc
xchg
pushf
in
imul
push
les
mov
in
dec
lods
pop
test
mov
pop
inc
(bad)
dec
add
xchg
jge
js
cmp
cld
adc
stc
fst
cmps
ss
and
fdiv
cdq
mov
(bad)
dec
push
pop
fisubr
sti
movs
mov
(bad)
(bad)
push
mov
and
inc
in
fadd
sub
call
(bad)
mov
(bad)
jmp
hlt
and
lds
push
mov
jns
cmp
outs
lea
dec
mov
push
and
sahf
out
(bad)
(bad)
(bad)
(bad)
call
mov
lahf
push
daa
(bad)
iret
(bad)
cmp
movs
sub
jge
fstp
scas
call
sbb
xchg
out
mov
inc
fsubr
icebp
jl
adc
out
mov
xchg
mov
imul
and
clc
push
jp
fadd
cmp
adc
pop
mov
test
sub
(bad)
dec
jmp
mov
adc
mov
int
jmp
(bad)
pop
cs
movs
outs
mov
nop
js
das
xchg
test
pop
and
mov
and
add
jmp
das
add
mov
pop
(bad)
in
(bad)
jmp
jl
gs
jb
sub
leave
mov
ret
(bad)
jle
cmps
dec
add
fcomp
(bad)
(bad)
(bad)
call
jmp
jo
mov
sahf
std
retf
lds
mov
rcl
pop
ds
pop
iret
(bad)
and
aas
pop
movs
test
cmp
xor
imul
(bad)
mov
ss
jmp
pop
in
data16
push
inc
sbb
inc
(bad)
outs
out
aam
adc
pop
push
(bad)
aas
fimul
cmp
dec
jmp
test
pop
or
pop
xchg
fisubr
fild
add
pop
outs
arpl
sbb
or
jle
pop
(bad)
push
add
neg
push
stos
out
pop
jg
pop
sahf
cs
mov
pop
sbb
fisub
fidivr
popf
out
(bad)
(bad)
call
ins
pop
xor
pop
sbb
pop
mov
sub
bound
(bad)
(bad)
(bad)
(bad)
mov
sub
mov
inc
repnz
(bad)
lea
dec
test
(bad)
(bad)
(bad)
inc
fisubr
iret
mov
retf
mov
mov
(bad)
sub
push
xor
push
fld
pop
lods
arpl
sbb
mov
cli
cmps
lea
ss
call
(bad)
jmp
fs
xchg
mov
stos
stos
scas
dec
retf
mov
std
div
push
sub
test
call
movs
jmp
add
xchg
cs
fldcw
inc
inc
cmp
and
push
in
mov
rcl
(bad)
jmp
test
fldcw
pusha
jge
loop
inc
(bad)
(bad)
push
mov
test
push
imul
loopne
lods
call
mov
das
les
int
pop
push
das
sar
shl
retf
cmps
sub
adc
and
movs
retf
ja
ret
dec
ficomp
jmp
pop
dec
ficomp
movs
dec
pop
int3
pop
inc
jmp
jmp
add
aam
mov
adc
out
jo
rcl
mov
(bad)
inc
sbb
leave
fild
pop
test
(bad)
(bad)
adc
cmp
popa
(bad)
call
in
test
cmp
bsr
stos
fistp
jle
int3
push
cmp
jp
(bad)
aaa
mov
mov
sub
push
dec
push
repnz
(bad)
jmp
push
cmp
test
retf
fild
xchg
fs
ds
xchg
and
out
int3
inc
mov
sbb
sar
ficomp
xchg
mov
push
into
adc
dec
lods
test
test
in
sti
lods
cmps
inc
lahf
inc
push
(bad)
(bad)
mov
jecxz
pop
call
mov
clc
call
fidiv
adc
push
hlt
jg
mov
rol
movs
fcom
fwait
das
sar
inc
pop
fldcw
lds
or
(bad)
dec
mov
(bad)
call
pop
mov
and
shl
stos
push
push
imul
inc
call
inc
inc
mov
bound
xor
out
movs
movs
scas
clc
rcl
dec
fucom
fldenv
(bad)
(bad)
(bad)
out
and
sub
inc
movs
into
out
dec
cmps
mov
push
jmp
ins
dec
xlat
in
(bad)
xor
push
mov
mov
and
inc
or
jo
fistp
rcl
fsubr
pop
out
out
fsub
vpshab
sbb
fcmovbe
dec
data16
mov
imul
inc
cmp
icebp
cld
mov
mov
mov
inc
rcr
dec
leave
icebp
fidivr
push
loopne
ins
lds
in
pop
es
cwde
inc
add
int
push
test
shl
ds
(bad)
jmp
lahf
ja
dec
mov
sahf
rcr
in
imul
aaa
into
hlt
inc
push
fmul
js
fs
idiv
dec
dec
fstp
es
retf
add
(bad)
mov
xchg
pop
sahf
mov
out
pop
jmp
out
add
outs
push
cmp
in
pop
aad
cmp
sub
fdiv
pop
lds
cwde
cli
(bad)
call
push
stos
pop
cs
mov
js
hlt
pop
ja
fmul
aaa
or
xlat
in
cli
dec
pop
or
add
jle
fisttp
cmps
inc
sub
or
pop
neg
sbb
std
retf
xchg
popf
sbb
ret
inc
out
in
mov
xchg
js
out
or
push
cli
(bad)
call
or
(bad)
cli
jl
xlat
into
fcomp
mov
(bad)
ja
mov
addr16
movs
add
xchg
jge
lods
or
mov
scas
(bad)
sub
retf
call
(bad)
jmp
cmp
jnp
int
mov
dec
jnp
pop
dec
out
out
fstp
(bad)
(bad)
(bad)
dec
or
mov
cmp
inc
and
popf
mov
sar
(bad)
call
call
stos
jge
dec
rcr
test
pop
mov
push
mov
(bad)
(bad)
dec
mov
imul
push
sub
mov
pop
push
and
fimul
jl
pop
dec
jmp
mov
inc
lods
fcomp
cmp
xchg
mov
aad
mov
pusha
ins
in
fsubr
ins
pop
fsubr
(bad)
mov
(bad)
inc
mov
sbb
pop
mov
fcomp
stos
or
pop
ins
test
xor
(bad)
(bad)
(bad)
mov
inc
mov
test
sub
lea
stos
lods
inc
idiv
jo
mov
loopne
jmp
adc
mov
in
in
popf
or
cwde
dec
std
scas
scas
test
daa
dec
mov
mov
push
(bad)
mov
test
(bad)
rcl
pop
cmps
lods
loop
jle
aaa
stc
jmp
cmp
sub
das
stos
mov
or
jnp
icebp
stos
xor
sbb
fld
mov
int
sbb
xchg
std
lods
cmp
out
dec
movs
dec
dec
cmp
(bad)
(bad)
mov
mov
inc
mov
dec
pop
mov
push
inc
(bad)
in
ret
jb
addr16
sub
mov
adc
and
cmc
adc
ja
jmp
pop
jle
aaa
pop
sbb
ficom
xlat
retf
shl
addr16
icebp
or
imul
fisttp
pop
jg
(bad)
jmp
inc
retf
jle
xchg
retf
pop
aaa
(bad)
fist
cmp
lods
pop
(bad)
(bad)
(bad)
call
jmp
pop
std
dec
int3
fist
pop
mov
jmp
push
adc
inc
stos
fmul
ret
mov
jmp
dec
(bad)
pop
retf
xchg
push
pop
pop
fdiv
aaa
shr
retf
sbb
sar
jmp
fmul
js
inc
shl
push
jl
and
hlt
aaa
xchg
fild
pop
cmp
lock
and
push
sti
pop
sahf
outs
(bad)
(bad)
(bad)
push
(bad)
enter
ret
lahf
dec
ds
ja
jl
adc
into
sahf
dec
lock
jo
icebp
(bad)
fcomip
call
cmp
pop
sbb
neg
fld
mov
pop
mov
cld
pop
fdiv
(bad)
add
push
pop
or
push
(bad)
jns
sti
fisub
mov
mov
fstp
(bad)
(bad)
(bad)
jmp
mov
mov
sub
cmp
stos
fistp
call
fimul
and
(bad)
in
(bad)
leave
cmps
je
jno
retf
cld
mov
push
pop
sar
pop
into
iret
in
jmp
add
cmp
push
dec
lahf
cmp
mov
fild
(bad)
push
leave
(bad)
outs
pop
out
jge
or
aad
and
cmp
dec
shl
jmp
mov
push
push
stos
jl
add
arpl
call
call
sub
adc
cli
leave
test
push
and
(bad)
fbld
lahf
fmul
cld
js
retf
(bad)
jmp
daa
ins
(bad)
pop
mov
pop
sub
inc
lods
fnsave
clc
addr16
fst
push
aad
outs
out
rcr
and
pop
gs
push
mov
cmovl
out
(bad)
and
mov
mov
pop
dec
jl
cmc
fmul
push
add
(bad)
(bad)
(bad)
jmp
pop
pop
arpl
ja
pop
das
pop
mov
mov
cmp
movs
(bad)
fnstenv
pop
dec
(bad)
jmp
je
out
pusha
std
jnp
sub
loop
(bad)
(bad)
(bad)
jmp
jmp
retf
sub
repz
push
mov
(bad)
pop
inc
imul
(bad)
jmp
leave
push
aaa
leave
or
retf
lahf
scas
(bad)
and
xchg
nop
xor
mov
push
ja
(bad)
(bad)
call
retf
dec
(bad)
lahf
test
or
mov
or
adc
adc
xchg
inc
mov
ins
xchg
mov
cld
popf
cmp
add
fistp
stos
inc
fnstcw
or
push
xchg
das
or
ror
or
out
add
dec
push
lahf
mov
call
sbb
mov
retf
mov
lods
adc
jg
mov
pop
pop
js
mov
adc
(bad)
(bad)
dec
ror
jmp
ret
sub
cmp
pop
inc
(bad)
hlt
(bad)
int
push
lock
into
dec
cli
retf
add
retf
mov
xor
jns
movs
leave
popf
in
neg
dec
leave
clc
sbb
xor
mov
cmp
mov
stos
fist
in
test
push
pop
mov
ss
dec
jle
xchg
popa
fistp
mov
and
mov
mov
call
dec
inc
push
mov
mov
push
shl
mov
sub
pop
dec
push
mov
mov
scas
and
js
fbstp
dec
sub
push
sar
(bad)
int
pop
(bad)
(bad)
(bad)
dec
int3
mov
xlat
inc
dec
push
popf
pop
fadd
iret
mov
dec
mov
call
or
or
inc
int3
jecxz
mov
mov
mov
push
pop
mov
test
(bad)
mov
test
daa
xchg
jmp
popf
and
push
mul
(bad)
call
mov
pop
push
dec
ds
jo
adc
out
fcmovu
cwde
call
jmp
sub
push
sub
mov
cdq
mov
dec
pop
(bad)
mov
lods
ja
(bad)
jmp
pop
pushf
pop
cmp
xlat
icebp
pop
fsub
sbb
pusha
jnp
loopne
mov
(bad)
(bad)
(bad)
jl
rcr
shl
pop
nop
bound
ror
std
out
fcomp
gs
jmp
inc
pop
mov
pushf
sbb
mov
push
ror
fldcw
mov
cmp
and
xchg
or
inc
out
leave
cmp
jb
jmp
pop
je
sbb
add
mov
scas
bt
mov
das
daa
dec
push
jmp
or
mov
in
inc
fcmovnb
cmp
shl
sahf
hlt
pop
and
cwde
popa
mov
push
fsubr
(bad)
pop
pop
add
fmul
jo
mov
(bad)
call
fwait
dec
(bad)
or
xchg
scas
stc
mov
cwde
jg
mov
pop
dec
(bad)
cs
mov
jecxz
das
pop
(bad)
jmp
push
dec
in
adc
mov
or
pop
into
enter
cwde
pop
sbb
mov
loopne
mov
dec
data16
fstp
pusha
clc
mov
(bad)
call
push
cwde
push
dec
pop
sub
mov
clc
jmp
mov
(bad)
outs
lods
in
retf
pop
scas
push
sub
xchg
xor
and
mov
xchg
cmp
pop
retf
xadd
mov
mov
(bad)
es
pop
lock
fwait
sub
mov
stos
adc
pop
test
dec
and
jl
mov
(bad)
(bad)
dec
cmp
arpl
jmp
cmp
(bad)
addps
xlat
adc
sbb
imul
mov
pop
in
mov
push
push
das
lods
cmp
stos
push
mov
popf
bound
out
adc
pusha
mov
pop
dec
fild
lods
adc
pop
mov
jmp
push
cli
out
mov
and
cld
(bad)
(bad)
(bad)
(bad)
(bad)
pop
daa
sbb
xor
(bad)
das
mov
mov
xchg
mov
push
pushf
and
sbb
jno
add
mov
mov
(bad)
cmp
pop
fidiv
add
daa
mov
shr
jl
enter
(bad)
call
xchg
jns
mov
out
mov
stos
pusha
fcom
(bad)
fistp
mov
(bad)
daa
or
rcr
sti
mov
pop
jp
push
sbb
ins
(bad)
(bad)
ds
outs
(bad)
push
outs
mov
(bad)
(bad)
(bad)
jmp
call
sub
movs
add
lahf
push
(bad)
xlat
cmp
add
shl
lock
(bad)
(bad)
dec
stos
jecxz
imul
sar
daa
rcr
stc
test
scas
repnz
jnp
icebp
scas
jp
xor
repnz
push
jmp
(bad)
jmp
jmp
repnz
stc
fsub
lock
into
daa
add
(bad)
pop
sbb
sub
adc
or
pop
out
pop
cmp
and
cli
fild
cli
sbb
sbb
adc
mov
xlat
dec
xlat
mov
out
adc
xlat
(bad)
jg
ja
mov
and
adc
shl
sti
aad
xchg
jmp
icebp
(bad)
(bad)
(bad)
(bad)
push
je
and
adc
push
pop
adc
dec
fyl2x
jp
mov
(bad)
dec
pop
fbld
mov
fdiv
pop
jecxz
add
mov
mov
pop
jmp
dec
push
mov
stos
jle
aas
aam
and
(bad)
inc
aas
and
push
push
jb
retf
mov
sbb
cmp
js
(bad)
test
cdq
fisttp
sbb
mov
(bad)
dec
(bad)
ds
and
into
adc
push
enter
ret
(bad)
sub
xchg
(bad)
jg
push
adc
fdivr
and
pop
fstp
dec
ja
sbb
les
pop
nop
out
aas
scas
(bad)
mov
loope
or
cmps
(bad)
jmp
cmp
sbb
icebp
cmp
icebp
fdivr
fmul
pusha
jecxz
fsubp
mov
mov
cmps
pop
daa
(bad)
(bad)
jg
or
cmp
jmp
fild
mov
cmp
popa
into
ins
(bad)
out
cmp
call
mov
out
pop
mov
fsub
xor
sahf
sub
and
push
(bad)
jmp
rol
popf
dec
dec
dec
jb
cld
into
xor
mov
pop
sub
push
dec
mov
jmp
sbb
mov
push
cdq
jge
sub
stc
mov
call
sub
(bad)
sub
scas
cld
sti
mov
test
scas
or
shl
das
cmp
mov
clc
pop
jmp
jmp
leave
sub
mov
mov
mov
inc
mov
test
dec
sbb
(bad)
(bad)
(bad)
jg
stos
cmps
mov
aad
(bad)
test
mov
or
or
jmp
jne
mov
out
jmp
pop
sbb
cs
shl
sbb
jmp
outs
pop
rol
sar
les
push
(bad)
jmp
xor
idiv
mov
js
sub
pop
sub
(bad)
xlat
mov
je
mov
mov
xor
(bad)
jmp
mov
call
mov
mov
scas
mov
(bad)
mov
add
enter
dec
fidivr
aas
xchg
mov
inc
mov
fnstsw
cmps
sub
test
mov
call
repz
add
mov
sbb
pop
stos
neg
in
mov
mov
or
adc
and
mov
xor
mov
test
test
sahf
mov
push
(bad)
mov
jne
push
retf
sbb
push
es
sub
sbb
jmp
neg
cmp
push
mov
xor
leave
jmp
ss
xchg
mov
add
imul
fidiv
not
gs
icebp
push
nop
xor
push
or
adc
mov
(bad)
(bad)
jg
xor
inc
loope
or
push
xchg
adc
mov
mov
add
(bad)
loopne
adc
push
ret
(bad)
jmp
sbb
push
pop
mov
mov
iret
xchg
mov
outs
inc
mov
icebp
aad
adc
jbe
std
mov
call
mov
and
dec
jmp
retf
and
dec
outs
or
inc
push
xchg
test
cmp
or
popf
and
or
add
(bad)
adc
loope
(bad)
(bad)
jmp
gs
mov
aam
and
sbb
and
arpl
mov
(bad)
call
push
scas
mov
cmp
dec
mov
or
es
fs
(bad)
dec
push
add
push
mov
cli
fld
(bad)
dec
xchg
int3
test
in
dec
loope
(bad)
(bad)
jnp
mov
rcl
and
aad
movs
sub
sub
mov
ins
or
dec
sub
(bad)
jmp
retf
or
leave
fild
ret
enter
inc
and
and
in
jno
shr
cmps
ins
jmp
and
lods
mov
jnp
mov
or
dec
pop
sar
(bad)
(bad)
jle
in
js
das
or
mov
cmp
idiv
popf
(bad)
push
scas
cli
xchg
mov
and
cmp
lahf
ret
data16
scas
loop
mov
(bad)
in
add
sbb
dec
xor
sar
mov
mov
inc
add
pop
xor
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
cmp
mov
retf
(bad)
cmps
jno
mov
(bad)
popf
push
and
jmp
adc
(bad)
neg
inc
retf
jbe
dec
push
jno
(bad)
(bad)
jg
cwde
repz
arpl
mov
cli
pop
icebp
mov
sbb
jns
mov
dec
fst
sub
(bad)
(bad)
cmp
fadd
cs
mov
or
adc
stos
ret
hlt
jno
mov
sbb
cmp
push
call
aaa
and
out
fist
out
sub
push
jno
fmul
push
dec
in
scas
test
(bad)
(bad)
dec
scas
xor
stc
imul
int
mov
scas
ins
loopne
dec
mov
mov
pop
ret
sbb
data16
(bad)
dec
sbb
and
arpl
inc
adc
pop
add
ror
sub
cmp
xor
jmp
loope
mov
mov
movs
xchg
mov
data16
push
xor
mov
call
jl
push
outs
sbb
in
jp
in
loopne
and
nop
sar
jmp
lahf
out
aam
ds
cmp
xor
xor
mov
pop
cs
cmp
fs
sub
outs
cli
inc
xor
add
pop
mov
call
cs
ja
outs
adc
cmp
out
stc
inc
xchg
sub
call
add
aas
dec
or
pushf
cli
add
mov
cli
push
ror
inc
fisubr
call
sti
pop
(bad)
mov
outs
(bad)
(bad)
(bad)
fxch
das
jb
sbb
push
inc
inc
mov
ret
sub
pop
mov
push
ds
(bad)
(bad)
inc
or
es
xor
cmps
mov
inc
pop
mov
lds
fcomp
ror
jle
das
clc
inc
mov
mov
jge
pop
mov
push
inc
pop
test
push
pop
gs
fisttp
retf
cmps
(bad)
out
sub
push
mov
(bad)
mov
fnstcw
inc
jecxz
or
ret
imul
and
sbb
(bad)
inc
call
pop
fcom
add
adc
in
or
dec
scas
out
(bad)
(bad)
(bad)
inc
lahf
sbb
sub
sbb
gs
and
mov
add
mov
stos
(bad)
mov
enter
sbb
and
mov
call
mov
push
push
add
cli
pop
jecxz
pop
adc
fild
idiv
movs
call
arpl
das
xor
push
mov
outs
bound
cmp
add
push
rcr
lods
mov
dec
inc
enter
mov
test
jmp
cmp
aam
mov
inc
(bad)
test
mov
xchg
mov
push
inc
dec
in
cwde
jge
in
mov
sbb
jg
sbb
sahf
fnstsw
popa
mov
test
inc
hlt
cli
xchg
into
push
inc
jmp
jg
outs
int
mov
std
xchg
push
pop
cs
and
push
test
push
call
mov
(bad)
add
adc
or
dec
fsubr
inc
push
movs
sub
adc
outs
jecxz
add
cs
cmps
les
pop
xor
retf
fcmovb
xor
and
retf
call
pop
and
sbb
pop
push
in
jmp
xor
xchg
je
xchg
sbb
(bad)
jg
(bad)
mov
imul
pop
test
leave
sub
aam
xchg
or
test
jp
imul
mov
mov
loope
or
(bad)
call
stc
daa
add
xchg
aam
adc
dec
and
popa
cld
jnp
mov
cld
(bad)
(bad)
(bad)
fldcw
imul
(bad)
fisub
loopne
test
call
scas
adc
mov
daa
clc
ret
pop
xchg
mov
aam
push
(bad)
mov
inc
retf
sbb
mov
scas
sub
push
mov
call
and
pop
bound
loop
xor
xchg
clc
mov
sub
sbb
inc
jle
sub
sub
sbb
lea
or
xchg
dec
int3
mov
adc
jmp
cld
inc
and
call
les
lea
xor
dec
aam
push
(bad)
jmp
movs
and
arpl
push
shr
cmps
or
aad
stos
pop
int
push
pusha
cld
mov
sbb
mov
lahf
retf
cmps
dec
sbb
dec
out
fadd
jl
fdiv
int
mov
(bad)
jg
aam
in
gs
outs
repnz
cmp
nop
or
and
loope
in
jae
inc
std
jmp
pop
add
jo
into
cmc
and
fiadd
dec
repz
rol
jg
push
or
and
aas
ins
mov
jg
sub
push
stos
dec
jp
out
test
clc
(bad)
jmp
cmps
leave
cmp
sbb
mov
cmp
(bad)
daa
call
dec
xchg
retf
pop
aad
adc
adc
sub
push
(bad)
cmp
inc
fwait
ret
out
push
cmps
js
xor
xchg
dec
aam
sub
jp
mov
add
push
sub
movs
jmp
and
(bad)
(bad)
call
(bad)
call
call
aas
adc
inc
mov
inc
gs
mov
(bad)
push
and
cld
das
adc
sbb
fistp
xchg
les
sar
adc
scas
fadd
mov
xor
inc
mov
retf
cli
push
push
out
pop
cwde
inc
stos
call
nop
dec
loop
pop
jg
jecxz
scas
pop
cmp
popf
mov
sub
or
mov
loopne
inc
int
leave
in
ja
dec
adc
mov
xchg
pop
push
(bad)
jmp
push
imul
retf
push
adc
push
(bad)
(bad)
jmp
retf
rcl
lahf
jbe
push
int
iret
sti
(bad)
jmp
adc
sbb
xor
(bad)
call
out
jno
adc
(bad)
(bad)
(bad)
cld
pusha
and
jo
cld
add
push
push
ret
icebp
sub
cmc
popf
sub
in
cmp
loope
(bad)
dec
sbb
shr
mov
addr16
or
(bad)
in
in
fadd
(bad)
(bad)
call
cs
dec
pop
xor
xor
mov
cmp
aas
mov
push
or
lods
stos
in
jmp
adc
(bad)
ds
ins
cmc
call
jmp
dec
cmp
mov
sbb
out
inc
jl
inc
push
inc
test
(bad)
(bad)
mov
add
inc
shl
pop
dec
xchg
stc
dec
aam
and
xor
sbb
xchg
mov
daa
pop
stos
pop
pop
inc
push
data16
pop
inc
enter
(bad)
mov
pop
enter
xor
and
in
jnp
adc
mov
movs
ins
jge
pop
pop
jl
iret
sub
loop
pushf
cmps
sti
inc
ret
and
(bad)
inc
pop
jae
enter
pop
cmp
or
inc
jne
sti
push
ds
and
hlt
call
adc
jl
cli
stos
mov
pop
cdq
jl
movs
xor
sub
cld
(bad)
push
lods
std
xor
cld
dec
rcl
outs
stos
dec
sub
pop
add
sbb
add
(bad)
and
(bad)
call
xchg
cmp
cmps
mov
push
pop
(bad)
jl
lock
mov
addr16
fs
mov
test
sbb
jmp
cs
and
int3
dec
xor
mov
inc
(bad)
fimul
inc
sub
aas
test
and
or
(bad)
call
out
jg
adc
and
loope
shl
cmp
cmps
push
adc
cld
out
fdiv
mov
inc
les
mov
(bad)
in
mov
push
call
dec
jp
mov
outs
rol
jg
mov
mov
daa
fld
retf
cmp
call
push
jl
sbb
add
cdq
and
ds
pop
stos
clc
(bad)
jg
dec
adc
ror
sub
adc
push
push
push
ds
(bad)
fucomip
dec
fist
clc
push
aam
inc
in
arpl
(bad)
jg
add
in
test
(bad)
sub
movs
xor
cwde
(bad)
(bad)
mov
pop
je
stc
in
fcmovbe
stc
mov
fdivr
mov
sbb
ret
gs
(bad)
inc
cmp
or
pop
cmps
adc
inc
mov
jg
sub
sub
fs
(bad)
call
dec
jp
push
cmps
add
(bad)
jecxz
sub
xor
adc
sbb
aas
sub
(bad)
call
lock
dec
cmc
pop
jbe
retf
(bad)
stos
xchg
jo
dec
mov
fsubr
or
add
mov
mov
xor
test
jae
pop
call
call
loope
rol
sbb
rcr
jmp
xchg
push
(bad)
clc
lods
and
and
fistp
(bad)
(bad)
adc
mov
pop
push
and
out
cmp
pushf
xchg
xor
bound
bound
pop
popf
cmps
pop
jmp
fdivr
out
xor
cwde
repz
in
icebp
imul
mov
sti
cvtdq2ps
fist
push
gs
mov
cld
popf
sub
test
in
scas
push
outs
xchg
push
mov
je
iret
addr16
test
js
sbb
(bad)
(bad)
call
movs
jl
cmp
inc
enter
xchg
lock
jmp
adc
cmp
mov
xchg
or
sbb
mov
lahf
sbb
(bad)
mov
inc
dec
jl
outs
jecxz
and
(bad)
(bad)
mov
mov
mov
mov
popw
nop
aaa
jmp
test
repz
test
and
fcmovb
and
push
and
out
(bad)
push
out
push
loop
jno
test
xchg
mov
addr16
adc
sbb
cmp
mov
(bad)
push
push
aaa
call
xor
xor
fsubr
fdivr
(bad)
(bad)
call
or
stos
sahf
dec
pop
mov
and
inc
gs
cmp
in
and
(bad)
popf
xchg
icebp
push
xor
shr
or
jg
xchg
mov
lods
cmp
and
lahf
push
jmp
adc
mov
in
push
mov
push
cli
add
dec
xor
fldenv
(bad)
mov
pop
pop
loopne
ins
mov
jbe
(bad)
mov
outs
push
(bad)
(bad)
(bad)
cmp
add
in
add
push
loopne
outs
cdq
push
cmp
(bad)
icebp
rcl
rcr
pop
idiv
inc
cld
mov
push
test
mov
adc
and
mov
sbb
scas
rol
add
xor
test
les
add
(bad)
mov
hlt
daa
mov
in
popa
pop
pop
and
push
jmp
inc
in
mov
and
stos
clc
xchg
xor
(bad)
mov
xchg
add
or
mov
mov
aad
sbb
jecxz
push
(bad)
das
add
push
out
or
dec
scas
into
arpl
pop
pop
push
pop
fldenv
mov
push
je
pop
mov
pop
pushf
xchg
femms
xchg
shl
push
ret
sbb
out
jbe
fisttp
add
adc
fadd
fldenv
(bad)
xor
ja
xchg
push
rol
jnp
retf
inc
stos
(bad)
xchg
and
jge
dec
call
xchg
adc
mov
dec
sub
jecxz
iret
ficom
jmp
aam
adc
ret
push
pop
sub
fmul
fimul
adc
sbb
(bad)
jmp
inc
xor
pop
dec
pop
or
(bad)
mov
daa
mov
or
cmps
cmc
out
ins
ret
mov
test
jmp
pushf
clc
(bad)
call
sbb
or
dec
push
jo
enter
jge
and
rcl
pop
mov
sar
dec
adc
fsub
fsub
jbe
mov
adc
iret
movs
mov
iret
add
hlt
(bad)
jg
mov
pop
xor
popa
out
adc
adc
mov
(bad)
in
not
pop
sbb
jns
mov
jmp
(bad)
mov
dec
es
(bad)
jg
rol
int3
fucomip
dec
inc
ins
cdq
push
adc
mov
xor
mov
vmaxsd
mov
push
loope
push
pusha
xchg
fwait
adc
(bad)
jg
cmps
adc
pop
push
cld
popa
cmp
leave
and
push
cli
adc
iret
sub
ss
stc
retf
repnz
fwait
sti
pop
mov
sbb
rol
leave
mov
stos
(bad)
jl
mov
aam
add
stos
(bad)
dec
push
movs
xlat
pop
mov
scas
call
jbe
sbb
and
(bad)
aas
mov
mov
rcl
xor
(bad)
cmp
inc
mov
out
adc
ds
mov
aam
adc
std
gs
cld
lahf
movs
push
outs
out
(bad)
(bad)
(bad)
push
(bad)
inc
(bad)
ins
shl
jnp
stos
in
lock
dec
sti
arpl
sub
mov
mov
(bad)
out
add
cli
call
pop
or
mov
mov
hlt
ret
xor
call
mov
or
mov
stos
xchg
sub
mov
inc
mov
(bad)
push
pop
and
(bad)
cmps
and
into
and
aas
mov
dec
jmp
call
xor
or
dec
cmps
cmp
je
dec
dec
retf
imul
pop
fld
jl
sar
js
inc
mov
and
jo
(bad)
jg
test
sub
and
jl
loopne
add
mov
jne
add
(bad)
pop
or
(bad)
ins
push
test
clc
xor
cli
(bad)
(bad)
jg
cmp
jb
ja
mov
pop
bound
je
and
dec
pusha
arpl
(bad)
jg
sub
cld
ret
lahf
arpl
inc
call
(bad)
push
push
(bad)
out
jp
loope
pop
aad
stc
dec
ja
jmp
mov
fwait
movs
push
(bad)
(bad)
mov
jo
aad
mov
xlat
add
xchg
add
ins
ret
mov
jmp
xor
cmc
jmp
lods
movs
pop
cld
push
ds
or
ja
test
bound
icebp
(bad)
jmp
outs
fsub
and
lods
sub
add
mov
idiv
pop
jmp
popf
into
mov
ins
dec
mov
(bad)
cld
(bad)
(bad)
jnp
push
jmp
mov
loopne
les
stos
xchg
xchg
pop
pop
ins
mov
(bad)
(bad)
push
(bad)
sti
add
or
daa
movs
sub
pop
jmp
mov
stos
pop
mov
fild
dec
out
jge
sub
and
push
outs
xchg
and
jmp
(bad)
push
icebp
loopne
xor
jns
outs
push
jbe
mov
(bad)
inc
xchg
inc
push
adc
push
add
sbb
ja
inc
mov
xchg
ja
fidivr
jmp
ins
test
inc
mov
mov
and
ds
(bad)
jg
inc
std
mov
fnstsw
mov
push
jae
pop
hlt
mov
addr16
cmpps
iret
push
out
(bad)
(bad)
(bad)
jmp
adc
mov
adc
xchg
sbb
xchg
call
leave
xor
shl
jb
das
(bad)
call
cmp
push
sub
pop
scas
xchg
sbb
mov
in
add
sahf
ins
push
mov
ror
es
out
cmp
loopne
imul
aaa
cmp
stos
inc
mov
scas
jmp
ja
(bad)
dec
shl
aas
cmp
icebp
fbstp
ret
mov
lock
or
out
rcl
pop
out
pop
loop
cmp
jle
inc
(bad)
call
cmp
fmulp
adc
jle
and
test
(bad)
call
imul
call
fstp
add
sbb
std
inc
repz
push
test
dec
in
stos
jl
push
(bad)
(bad)
jmp
pop
inc
adc
aad
inc
shr
rcl
mov
test
es
cmp
jg
(bad)
jbe
jmp
mov
nop
shr
mov
add
mov
jmp
std
pop
mov
sbb
push
hlt
(bad)
cmp
dec
mov
loope
inc
fst
ins
(bad)
(bad)
jg
stos
mov
push
or
cdq
adc
sbb
mov
pop
fwait
cwde
stos
rol
(bad)
jg
call
in
dec
mov
mov
pop
mov
pop
loopne
or
adc
mov
sbb
inc
push
add
jo
(bad)
(bad)
jmp
add
jo
iret
ror
sub
sub
dec
jle
mov
add
push
inc
call
sbb
jmp
retf
std
call
imul
repz
and
lock
es
fwait
or
jno
cmp
outs
cli
pop
les
jmp
inc
pop
ret
cmp
(bad)
dec
push
nop
loope
scas
aaa
fdiv
js
call
(bad)
fbld
pushf
adc
sar
xlat
bound
stos
arpl
push
cmp
call
mov
and
loop
dec
sahf
add
push
push
into
sbb
and
repnz
retf
test
inc
dec
cwde
ja
or
fsub
push
mov
les
jecxz
jmp
cli
adc
sub
repnz
(bad)
ja
mov
jnp
jns
xchg
xchg
xor
ja
adc
fild
out
add
fcmovu
clc
into
icebp
pop
(bad)
(bad)
call
movs
sub
es
inc
(bad)
mov
sub
mov
sub
push
pop
hlt
jg
test
pop
pop
jae
aaa
ficom
and
into
stos
cmp
(bad)
(bad)
(bad)
jns
and
adc
push
mov
xchg
loope
or
add
pop
rcl
add
cs
movs
rol
push
jmp
call
sub
inc
push
ret
pop
gs
outs
cli
jp
(bad)
das
push
test
(bad)
(bad)
call
stos
pop
mov
out
sub
mov
dec
xor
ins
mov
aad
(bad)
retf
adc
push
dec
bound
pop
imul
cmc
mov
dec
dec
icebp
stos
jl
ret
jle
out
dec
enter
(bad)
inc
jle
int3
loop
jbe
adc
mov
push
popf
mov
push
add
mov
adc
test
dec
sub
fsubr
xor
and
(bad)
(bad)
fist
sub
lock
clc
or
fidivr
out
ficom
dec
(bad)
(bad)
jg
out
retf
adc
test
jne
sbb
cs
clc
sbb
jge
loopne
fistp
inc
push
add
adc
bound
push
cli
xor
aas
push
dec
fild
adc
xchg
mov
shr
clc
inc
mov
ss
cmps
inc
or
mov
test
loopne
mov
cmps
dec
jns
fisubr
repz
(bad)
jmp
jge
cmp
cmps
ret
sbb
xor
sbb
call
in
jmp
inc
mov
inc
sub
xlat
gs
xchg
(bad)
(bad)
jg
outs
and
stos
xor
and
xchg
cmp
push
fbld
stos
pop
loopne
arpl
call
push
mov
sbb
push
leave
mov
sbb
sbb
(bad)
pop
loopne
jmp
cwde
sbb
cmp
inc
enter
cli
push
sub
(bad)
dec
push
out
fdivr
sbb
pop
call
add
cs
jmp
(bad)
(bad)
(bad)
(bad)
pushf
or
cmc
cld
out
mov
scas
fcomp
inc
aad
xor
dec
(bad)
push
fisttp
(bad)
mov
mov
nop
aaa
out
mov
inc
or
(bad)
jg
xchg
pop
and
out
xor
or
test
push
mov
jp
pop
aam
cdq
xchg
xor
dec
hlt
mov
cmp
call
(bad)
mov
jmp
(bad)
fsub
xchg
dec
lock
mov
(bad)
jmp
inc
cdq
mov
pop
push
call
mov
movs
(bad)
fild
es
stos
sub
std
fstp
(bad)
ror
jl
int3
add
test
fsubr
push
(bad)
call
push
mov
jmp
clc
arpl
sar
dec
lock
mov
xchg
mov
or
sub
adc
psrld
(bad)
call
mov
ss
adc
xchg
push
stos
(bad)
xchg
pop
fild
push
nop
mov
ret
dec
add
and
sub
movs
es
ret
mov
retf
call
xchg
(bad)
loop
ret
scas
fadd
jl
ins
or
mov
mov
fst
dec
fst
fst
stos
cld
mov
mov
xchg
cmp
loope
lds
call
mov
jg
test
sahf
out
xor
into
aam
inc
ret
cmp
lock
(bad)
dec
enter
cmp
mov
aas
xor
dec
or
outs
movs
shr
mov
or
(bad)
sti
(bad)
mov
sub
push
sti
(bad)
call
test
lock
pop
test
sar
setnp
(bad)
(bad)
mov
mov
add
or
pushf
push
inc
stos
xor
in
mov
push
mov
cli
movs
or
cmps
inc
sub
adc
dec
mov
or
ss
inc
add
add
mov
rcl
mov
push
add
push
neg
push
js
mul
jno
mov
(bad)
(bad)
call
mov
xchg
push
add
ret
ds
mov
mov
hlt
stos
sub
out
mov
(bad)
or
sar
jg
(bad)
std
sub
int
jmp
pop
xchg
and
pop
test
out
ins
push
xchg
pop
jmp
fild
pop
inc
xchg
jne
movs
dec
aad
cmc
mov
call
ret
(bad)
xor
mov
pop
dec
ins
rol
mov
sbb
jb
cmp
dec
xchg
xchg
(bad)
(bad)
(bad)
call
in
dec
xor
mov
mov
jle
sbb
or
xchg
mov
(bad)
int3
in
call
push
movs
shr
and
push
std
jg
(bad)
fdivr
mov
(bad)
jmp
fadd
adc
pushf
clc
out
fwait
push
lahf
int3
enter
(bad)
in
cmp
pop
scas
fld
mov
add
pop
and
(bad)
mov
(bad)
out
mov
lea
add
rcr
sub
cmp
addr16
mov
push
rcl
push
mov
test
outs
cmp
fcomp
(bad)
call
icebp
mov
dec
push
iret
jge
lahf
aad
dec
mov
jo
dec
(bad)
(bad)
(bad)
jmp
cdq
push
mov
clc
arpl
into
call
(bad)
js
or
pop
push
fadd
mov
ja
xor
(bad)
(bad)
(bad)
in
int3
or
int
int3
fincstp
push
mov
aad
imul
xor
int3
int3
(bad)
rol
jmp
and
jecxz
fld
or
mov
retf
shl
cmp
fs
mov
inc
jnp
lods
lds
jle
(bad)
(bad)
jmp
arpl
mov
xchg
lahf
sbb
call
cmp
inc
dec
arpl
(bad)
(bad)
(bad)
push
dec
dec
fwait
cli
pop
jle
outs
dec
xlat
inc
aas
nop
iret
sub
add
mov
cmc
(bad)
call
into
pusha
mov
xor
outs
iret
xchg
push
pop
cwde
loopne
mov
mov
jmp
sbb
pop
fs
and
mov
sub
js
inc
std
sbb
cmp
jbe
ret
cli
mov
adc
jmp
mov
or
add
push
stos
pop
xor
data16
hlt
scas
aad
mov
(bad)
(bad)
jmp
popa
aad
cli
add
ins
inc
push
mov
cwde
xor
add
inc
fwait
push
and
pop
jp
mov
ja
dec
(bad)
cmp
retf
repnz
push
sbb
(bad)
mov
leave
in
dec
test
push
dec
gs
fs
mov
movs
inc
jae
inc
cmc
fwait
out
call
fisttp
inc
adc
arpl
retf
call
retf
sbb
dec
repz
into
add
inc
sar
call
sub
jne
cmp
ds
lds
test
(bad)
and
mov
add
retf
stos
in
mov
mov
ret
les
hlt
push
or
(bad)
(bad)
sti
imul
shr
cmc
mov
cmp
jmp
pop
cmp
test
movs
inc
aaa
or
(bad)
(bad)
call
imul
and
inc
xchg
outs
pop
(bad)
pop
lds
in
ud0
(bad)
(bad)
in
pop
in
or
data16
inc
ror
mov
sbb
stos
push
adc
(bad)
(bad)
(bad)
dec
enter
sbb
push
xchg
inc
dec
shl
iret
fisttp
adc
mov
ja
adc
push
nop
mov
(bad)
push
retf
out
sahf
cli
stos
pop
pop
test
js
sbb
ds
pop
mov
lods
outs
call
mov
and
or
push
test
pop
stc
dec
xor
(bad)
into
iret
ins
into
fdivr
iret
mov
iret
mov
xchg
(bad)
(bad)
dec
adc
int3
iret
lock
lea
pop
pop
aam
rcl
aas
pop
pop
fidivr
shl
(bad)
loopne
out
inc
std
jmp
iret
enter
sbb
cmp
ins
add
jmp
inc
xchg
jmp
jne
cmp
(bad)
pop
bound
dec
retf
or
push
(bad)
(bad)
fild
arpl
inc
and
fisub
mov
repnz
inc
out
cmps
mov
xchg
cmp
aaa
daa
jmp
sbb
cmp
mov
pop
in
js
mov
jmp
scas
mov
test
popa
adc
adc
iret
xor
rcl
inc
scas
(bad)
jg
and
in
out
sbb
dec
fwait
pop
les
push
test
dec
pop
fcmovbe
movs
(bad)
cmp
in
inc
pop
clc
dec
cmp
test
call
ret
ret
fisubr
or
(bad)
inc
sar
or
mov
gs
out
(bad)
(bad)
push
jbe
ret
test
adc
inc
nop
push
jmp
push
(bad)
in
in
and
mov
inc
test
lahf
mov
xchg
mov
or
push
sbb
or
not
push
cmp
add
aam
xor
inc
mov
fwait
or
stos
sbb
push
add
(bad)
(bad)
gs
sub
arpl
inc
(bad)
push
dec
add
repnz
call
and
fisubr
hlt
mov
mov
lea
jg
(bad)
mov
inc
(bad)
(bad)
(bad)
call
or
xor
movs
sbb
lods
shl
fsubr
inc
xchg
out
leave
daa
lods
jg
cli
call
push
pop
jp
adc
jp
adc
jmp
inc
repnz
cwde
ins
out
push
jno
(bad)
xor
fadd
aad
jmp
jbe
out
sub
stos
jle
ret
jbe
stos
aaa
loope
sar
sahf
(bad)
(bad)
cmp
sbb
repnz
fnstenv
inc
pop
and
fadd
ss
add
btr
xor
(bad)
jmp
popf
sbb
pop
icebp
daa
ficom
sub
fdiv
jae
mov
repz
enter
lods
sbb
cmc
pop
fisubr
mov
test
das
push
bound
jg
(bad)
xor
leave
pop
ins
cmp
mov
cmps
fisub
shr
xor
aas
jmp
pop
jb
add
test
aaa
shl
repnz
in
or
pop
dec
push
or
push
mov
push
(bad)
(bad)
inc
push
jg
aas
adc
lods
stos
call
add
sbb
xchg
jmp
jb
rol
jp
imul
retf
aam
fmul
arpl
mov
sbb
out
test
sub
push
push
mov
test
cwde
pushf
dec
sub
push
stos
rcl
jl
cmp
call
sub
outs
jle
(bad)
(bad)
inc
jno
push
mov
mov
sbb
inc
xchg
ret
imul
pop
sub
lahf
dec
add
pop
jp
and
ins
pop
aad
(bad)
out
pop
push
call
dec
cmps
mov
aad
retf
(bad)
(bad)
(bad)
call
rcr
cwde
ror
daa
xchg
in
in
mov
mul
push
mov
jg
jmp
pop
dec
inc
popa
fwait
lods
jmp
pop
es
pop
retf
movs
push
cmps
pop
mov
(bad)
(bad)
(bad)
push
push
and
fisub
bound
rcl
dec
lods
xor
add
mov
push
xchg
mov
push
sub
jmp
bound
push
call
sub
es
push
mov
pop
and
mov
fst
sub
dec
popa
imul
stos
xchg
sub
push
mov
fstp
pusha
out
cwde
es
sub
mul
retf
imul
xlat
jnp
daa
div
das
adc
dec
sub
pop
stos
mov
and
idiv
xchg
popa
imul
mov
inc
clc
lods
pusha
push
test
fsubr
ins
jo
inc
fadd
sub
push
cmp
cmps
push
shl
dec
and
push
out
mov
and
dec
lods
adc
pop
sub
popa
test
push
cld
(bad)
fcom
outs
mov
das
imul
movs
adc
(bad)
call
movs
mov
add
dec
ret
xchg
pop
in
ss
mov
push
sti
mov
ds
shl
add
mov
sbb
xor
popf
mov
je
mov
inc
daa
inc
and
push
mov
aas
mov
and
sub
or
jmp
dec
cmp
mov
adc
or
add
adc
out
or
pop
cmp
rcl
(bad)
(bad)
(bad)
call
or
fadd
mov
ret
push
dec
sbb
and
stos
ficomp
pop
fdivr
outs
scas
call
loopne
or
pop
das
cmp
repnz
mov
stos
mov
iret
retf
(bad)
(bad)
mov
jl
fsubr
mov
(bad)
or
lods
adc
(bad)
jmp
out
sbb
ds
scas
out
fistp
fistp
lods
rcl
outs
call
(bad)
scas
icebp
retf
in
pop
dec
jl
stos
ret
inc
lea
and
sar
(bad)
out
mov
mov
movs
popa
cdq
retf
pop
sub
push
push
in
int
mov
fsubr
sub
pop
mov
pop
inc
mov
push
lods
pop
jl
popf
das
lock
and
add
sub
(bad)
cmp
outs
cld
(bad)
call
fldenv
inc
lods
adc
mov
shr
push
lods
push
test
sub
cmp
xchg
imul
and
push
setb
scas
and
adc
pop
jmp
and
idiv
retfw
(bad)
fistp
and
inc
in
sbb
dec
sub
inc
pop
shl
push
(bad)
(bad)
(bad)
jmp
out
mov
push
dec
sbb
cmps
aam
retf
into
dec
sub
inc
add
movs
xchg
push
aad
mov
fistp
mov
call
mov
cli
pop
push
sbb
mov
lods
dec
(bad)
pop
movs
(bad)
outs
(bad)
cmps
fsubr
mov
std
dec
pop
sub
or
test
jg
pop
pop
outs
mov
fwait
test
(bad)
push
jmp
mov
mov
lock
jmp
test
sub
test
push
jae
adc
rcl
(bad)
retf
mul
mov
cmps
xchg
scas
movs
(bad)
(bad)
mov
mov
stos
movs
xchg
dec
aaa
movs
ret
mov
pop
(bad)
call
push
mov
test
or
push
jge
je
test
xchg
cwde
retf
(bad)
(bad)
dec
(bad)
mov
mov
mov
sbb
jl
retf
pop
mov
inc
push
push
jbe
inc
loop
inc
test
scas
fst
movs
call
ins
retf
xchg
test
in
mov
cmp
lods
movs
dec
cmc
cmc
(bad)
jmp
xchg
sbb
xor
pop
lods
leave
xor
stos
mov
or
cmp
call
stos
adc
cmp
push
aaa
dec
inc
xor
jne
lods
sbb
stos
pop
pop
stos
inc
cld
jmp
adc
movs
lods
mov
cli
pop
cmc
fstp
sub
mov
sub
mov
int3
add
jmp
jne
(bad)
jmp
(bad)
inc
ret
clc
popf
fcomp
xchg
pop
inc
cli
in
mov
sub
mov
stos
sar
pop
mov
cmps
sub
lods
cwde
sub
call
scas
das
clc
(bad)
call
xlat
pop
lods
test
ds
add
mov
enter
hlt
jmp
mov
ror
pop
in
sub
inc
cld
fistp
sbb
fistp
fild
sub
(bad)
(bad)
jg
aad
add
ror
cmp
push
push
out
into
(bad)
xor
adc
lods
jb
pop
mov
mov
add
icebp
cmp
sbb
fsubr
and
add
fist
(bad)
mov
das
std
(bad)
(bad)
call
pusha
aas
push
leave
imul
jp
adc
test
fwait
mov
data16
(bad)
(bad)
push
imul
movs
lods
clc
inc
push
or
popa
out
adc
cdq
dec
(bad)
outs
pop
pop
jle
xor
pop
hlt
inc
out
pop
stos
mov
ins
mov
(bad)
in
pop
rcl
cmp
retf
sub
test
cmps
jle
fild
scas
test
add
xchg
add
stos
push
mov
xchg
inc
(bad)
fst
clc
das
adc
nop
pop
loop
inc
sti
add
js
ins
fmul
push
mov
retf
sub
xchg
pop
loop
fisubr
mov
cmp
push
data16
cmp
call
loop
inc
xchg
sar
(bad)
(bad)
call
sub
push
pop
pop
adc
in
fsubr
ds
in
aam
daa
pop
ins
jg
jg
adc
stos
mov
pop
dec
pop
mov
dec
fild
movs
cmp
cmc
jmp
push
push
out
sbb
test
mov
inc
nop
inc
mov
bnd
mov
out
mov
dec
test
iret
pop
cli
loopne
stos
sahf
pop
sub
jo
sbb
fmul
dec
sbb
jg
mov
std
jmp
sub
mov
push
(bad)
(bad)
(bad)
push
mov
leave
cmps
or
pop
mov
pushf
cld
xor
stos
sub
mov
dec
and
push
mov
movs
mov
mov
xchg
cmp
dec
mov
ja
fidiv
cmp
outs
or
sbb
pop
daa
jnp
icebp
std
jmp
(bad)
stc
imul
cld
fcomp
aad
int
into
aas
jns
(bad)
test
iret
or
push
cs
jle
lods
int
sbb
xchg
push
xchg
mov
inc
push
loope
xchg
xchg
jge
int3
adc
or
mov
or
fld
in
push
(bad)
mov
xchg
aam
(bad)
ja
jno
jne
outs
(bad)
cmp
sbb
pop
fcos
(bad)
(bad)
(bad)
std
inc
fimul
sbb
dec
pop
push
mov
pop
fucom
sub
rcl
fstp
cmp
sub
(bad)
dec
mov
data16
jae
fist
cmp
std
pop
pop
test
ins
mov
lock
sub
pop
movs
jp
pop
pop
pop
jle
push
(bad)
(bad)
jmp
adc
pop
popa
mov
icebp
dec
xchg
stos
pop
xlat
into
jb
ret
pop
rcr
jle
into
push
ins
clc
mov
jo
rcr
and
fmul
and
mov
mov
scas
out
push
notrack
ins
sub
push
je
test
xor
inc
(bad)
cmps
push
aam
clc
dec
push
lea
jge
sub
pop
pop
mov
ins
cld
out
mov
push
jmp
fnsave
inc
popa
sar
jg
loop
cmps
or
mov
push
xchg
xor
out
out
sub
dec
cli
fcomp
push
mov
mov
adc
nop
out
mov
fisub
lock
int3
sar
imul
mov
rcr
or
pop
inc
push
sahf
mov
sub
(bad)
(bad)
(bad)
jp
imul
or
inc
sub
fld
mov
jecxz
stos
mov
(bad)
(bad)
(bad)
jns
dec
sub
push
fcomp
in
inc
mov
sbb
in
sub
fcomp
lea
shr
lock
(bad)
dec
mov
icebp
xchg
fsubr
into
cmp
pop
test
pop
adc
icebp
fst
mov
lods
ds
(bad)
(bad)
call
aad
pop
std
(bad)
pop
sti
pop
mov
xchg
mov
js
lods
sub
(bad)
jp
sub
mov
in
fidivr
and
mov
popa
cmp
ficomp
stos
fimul
fmul
rcl
jmp
lods
lahf
in
sbb
or
(bad)
(bad)
inc
lock
(bad)
push
popf
cmp
adc
(bad)
(bad)
(bad)
cld
sbb
cmp
jno
shl
pop
fstp
jl
rcr
std
xchg
sbb
movs
leave
jmp
call
cmp
sbb
xor
jl
ins
dec
sbb
sar
(bad)
jmp
cmp
mov
pop
popa
mov
pop
push
mov
jnp
pop
jae
(bad)
(bad)
jmp
pop
popf
and
adc
pop
shl
sbb
sbb
or
call
imul
push
jl
hlt
(bad)
(bad)
call
iret
icebp
jg
sub
std
inc
dec
enter
sbb
lods
pop
cmps
iret
mov
xlat
pop
cld
inc
cmp
dec
test
fld
retf
dec
mov
sar
(bad)
jg
mov
sbb
bound
outs
jl
jae
nop
(bad)
jmp
pop
mov
pop
mov
(bad)
(bad)
(bad)
mov
mov
daa
stos
mov
pop
pop
jbe
adc
mov
ins
add
(bad)
(bad)
fidivr
fimul
(bad)
dec
push
sub
cs
test
(bad)
mov
fiadd
(bad)
dec
fisub
out
lahf
shr
(bad)
icebp
pop
jnp
(bad)
jg
movs
sti
sub
mov
jl
mov
in
cmps
fsubr
fstp
mov
in
sub
frstor
mov
mov
mov
(bad)
(bad)
(bad)
call
addr16
push
dec
das
pop
sar
popa
leave
pop
cmps
pop
pop
cmps
inc
out
push
cmp
ins
cmp
dec
outs
movs
cmp
rcl
fild
pop
mov
das
add
(bad)
aaa
adc
pop
sub
pop
mov
xchg
shr
jl
popf
daa
mov
ins
cli
cs
(bad)
retf
push
in
addr16
(bad)
(bad)
(bad)
call
clc
std
outs
stos
scas
lods
fiadd
mov
sahf
std
lods
loope
mov
inc
ds
sub
sub
or
(bad)
in
loope
xor
mov
xchg
xchg
scas
mov
jmp
rol
jl
enter
dec
pop
cld
mov
mov
call
(bad)
fmul
fsubr
ror
sub
scas
pop
mov
inc
call
(bad)
(bad)
jmp
iret
sahf
iret
ss
fdivp
inc
fsub
(bad)
fstp
mov
pushf
mov
sti
addr16
(bad)
(bad)
mov
les
sbb
rcl
into
pop
sbb
pop
dec
sbb
popf
mov
(bad)
(bad)
jmp
adc
cmp
lods
es
in
fwait
dec
stos
fdiv
push
jnp
and
sub
(bad)
out
ja
(bad)
(bad)
mov
jns
lahf
mov
add
cmp
sbb
xor
fcomp
adc
mov
call
into
call
dec
push
jae
cmps
mov
xor
and
push
ret
adc
or
retf
jo
stos
inc
cld
mov
iret
jb
mov
mov
add
adc
ret
or
push
enter
(bad)
mov
mov
mov
xchg
jno
(bad)
xlat
cmc
fstp
mov
or
dec
nop
dec
ret
push
adc
mov
push
pop
sub
fild
fwait
stos
jb
push
sbb
mov
rcr
inc
(bad)
push
mov
das
int
cdq
cmps
sbb
fwait
dec
dec
push
sahf
mov
(bad)
inc
dec
in
int
jg
inc
popa
jbe
fcmovnbe
fild
(bad)
jle
jmp
pop
push
hlt
push
(bad)
push
iret
into
xchg
push
test
mov
xor
loope
loope
mov
ret
xchg
outs
add
mov
cli
inc
add
mov
push
ins
(bad)
fild
hlt
in
xlat
fmul
jbe
mov
out
cmp
jnp
js
cli
inc
mov
(bad)
pop
fcmovnu
sub
(bad)
(bad)
(bad)
(bad)
cmp
mov
out
push
out
push
rol
ror
(bad)
pop
cwde
jmp
icebp
or
(bad)
(bad)
push
mov
ss
pop
mov
stc
je
rcl
cmp
icebp
inc
mov
std
cmp
cmps
mov
mov
cmp
fbld
mov
xor
(bad)
(bad)
jg
and
ja
scas
mov
sbb
pop
mov
cld
mov
add
mov
or
lods
push
pop
das
jmp
mov
clc
push
jl
or
(bad)
fnclex
xor
cld
push
mov
imul
cmps
(bad)
lods
int3
dec
xlat
loop
daa
scas
retf
cmc
jmp
or
pop
stos
pop
push
jno
mov
pop
jl
xor
mov
sar
sar
stos
dec
mov
push
or
mov
push
mov
scas
jecxz
mov
cmp
fsubr
jmp
inc
test
push
sub
fiadd
sbb
pop
jg
cmp
lahf
js
aas
add
int3
js
or
ret
or
addr16
pop
fstp
cmps
into
mov
mov
js
into
std
inc
cmp
sbb
shr
jg
mov
sbb
mov
pop
mov
or
dec
pop
sub
cld
fiadd
pop
das
cmp
fistp
mov
inc
popf
jmp
lahf
ficomp
cmps
enter
call
add
jmp
(bad)
sub
das
sub
sbb
(bad)
(bad)
js
cmp
arpl
jne
sub
frstor
lods
fsubr
dec
xchg
sbb
imul
in
lea
(bad)
out
call
(bad)
push
pop
retf
popf
pop
adc
pop
sub
push
jmp
(bad)
mov
xchg
pushf
jl
sahf
sahf
jle
(bad)
int
lea
pop
shl
dec
add
call
pop
rcr
xor
add
ror
aaa
scas
inc
leave
and
les
ins
fmul
(bad)
(bad)
or
push
(bad)
push
into
leave
dec
add
movs
dec
ror
cld
int
lods
stos
push
and
ret
call
dec
mov
sbb
loope
lods
jle
outs
rcr
jbe
push
cld
out
das
jmp
xchg
or
jl
leave
int
adc
dec
pop
push
icebp
adc
push
(bad)
test
sahf
retf
pop
scas
fdivrp
adc
(bad)
std
push
fnstcw
dec
and
xchg
or
cwde
(bad)
(bad)
(bad)
call
addr16
sbb
addr16
lods
das
mov
cld
pop
and
loopne
inc
mov
lock
pushf
xchg
fsub
and
jmp
fdivr
movs
enter
out
cld
add
pop
sub
pushf
dec
stos
xlat
movs
jecxz
(bad)
jmp
loopne
push
cdq
dec
push
bound
stos
fnsave
(bad)
(bad)
push
lahf
out
dec
xor
stos
iret
popa
mov
jmp
movs
lahf
adc
clc
(bad)
fcomip
cld
ins
sti
fsub
lea
jl
pop
sub
cmp
pop
shl
pop
shr
test
or
mov
(bad)
(bad)
call
fdivr
cmps
dec
arpl
add
mov
fadd
cmp
xchg
ror
(bad)
jnp
sub
cmp
add
mov
sahf
jl
ja
dec
int3
cmp
jle
xchg
push
mov
pop
int3
sbb
sbb
aad
(bad)
sbb
(bad)
(bad)
jmp
lahf
retf
sub
ficomp
not
(bad)
mov
mov
jno
outs
loope
fild
lods
jbe
fisub
div
sbb
jo
pop
dec
fdivrp
(bad)
mov
jmp
ror
cmp
xchg
js
and
(bad)
(bad)
(bad)
push
daa
cli
movs
xchg
push
and
push
cmp
scas
cmp
fisubr
(bad)
push
outs
push
iret
stos
ret
push
push
lods
mov
push
jl
cli
mov
mov
ins
pop
fsub
mov
mov
cmp
stos
mov
rol
jge
mov
sahf
mov
mov
lods
das
idiv
mov
mov
xchg
rol
sbb
add
pop
sahf
xchg
in
push
ror
pop
cmp
push
lods
(bad)
mov
hlt
inc
fbld
mov
fs
popf
pushf
ror
dec
fild
mov
mov
fist
push
cmp
or
cli
sbb
outs
call
test
mov
ins
jle
rcr
push
std
mov
xor
(bad)
mul
leave
jo
push
lahf
push
xchg
jmp
push
(bad)
scas
(bad)
into
or
mov
jmp
fidivr
sub
into
mov
lods
(bad)
pop
jl
test
pop
fmul
ins
clc
(bad)
call
jle
cmps
movs
dec
sar
ror
mov
or
(bad)
(bad)
cmp
push
mov
fsubr
dec
jmp
jb
fild
sub
(bad)
jmp
inc
mov
jo
mov
jmp
mov
dec
stos
or
push
or
inc
pop
jge
adc
mov
ins
push
sbb
fsub
dec
loope
loopne
pusha
fcomp
mov
pop
mov
and
or
jmp
call
pushf
mov
mov
mov
call
nop
jmp
out
adc
stos
inc
mov
jle
sar
push
cs
sbb
mov
repz
fstp
(bad)
push
mov
xchg
js
outs
loop
jno
shr
fcomp
xchg
inc
std
(bad)
mov
adc
pop
jg
cwde
jle
outs
stos
(bad)
das
js
jo
pop
neg
xlat
push
or
xchg
push
jge
push
sbb
(bad)
movs
mov
mov
out
ss
(bad)
int
add
mov
cmp
pop
int3
loopne
es
stos
rcl
jmp
xchg
jb
and
(bad)
mov
and
mov
lahf
dec
sbb
pop
pop
add
cli
(bad)
(bad)
(bad)
call
std
aaa
outs
retf
scas
mov
cmp
pop
adc
cmp
push
lahf
std
lds
lea
mov
shr
cmp
stc
xchg
mov
xor
mov
pop
xchg
sbb
dec
mov
pop
pusha
pop
enter
out
addr16
sahf
pop
jae
inc
pushf
sub
sub
push
into
adc
push
pop
push
fisubr
inc
or
mov
mov
stos
sbb
(bad)
(bad)
(bad)
fisttp
sub
pusha
in
push
sbb
dec
push
inc
push
pop
loope
je
enter
cmps
dec
dec
fcmovnu
push
cmp
jae
inc
sub
das
xor
push
jmp
call
call
adc
pop
cdq
cdq
push
das
pop
(bad)
(bad)
call
xchg
sub
inc
mov
clc
xchg
outs
shl
fdivr
mov
clc
pop
fisubr
sbb
cmp
fcomip
(bad)
dec
enter
push
cmps
sbb
je
mov
and
popf
lods
fwait
lods
int
(bad)
mov
bound
sub
mov
lods
mov
mov
repnz
sub
retf
sti
in
pop
fxch
sub
scas
and
inc
loopne
mov
mov
mov
add
(bad)
mov
sbb
jo
pop
test
(bad)
push
push
sar
cdq
loopne
mov
jp
lock
pop
leave
leave
xor
enter
mov
sub
mov
pop
hlt
(bad)
call
ins
je
sbb
mov
pop
ret
jl
jb
xor
push
jle
mov
jg
jbe
rcr
(bad)
call
int
adc
jnp
mov
dec
mov
mov
lods
mov
mov
stc
(bad)
sti
(bad)
dec
jmp
fstp
sbb
pop
cdq
into
stc
fistp
push
js
loopne
mov
pop
fs
sub
mov
add
sub
and
call
xchg
cmps
inc
cld
pop
call
into
scas
sbb
cmps
cwde
int
dec
cmp
dec
push
fsubp
xchg
pop
push
mov
pop
pop
cmps
rcr
jmp
test
iret
push
clc
jmp
bound
add
or
mov
mov
dec
sub
cmp
(bad)
jmp
fsub
mov
mov
cmp
sbb
mov
ins
jl
mov
jmp
test
aad
movs
call
ins
xor
mov
xchg
pop
fbld
ins
inc
sti
mov
push
xchg
popa
(bad)
or
(bad)
(bad)
dec
ret
cs
pop
jle
lods
scas
and
sbb
mov
and
cdq
stos
cmps
das
jg
and
outs
outs
sbb
pusha
sub
in
dec
lods
jns
sar
sahf
pop
sbb
(bad)
(bad)
(bad)
mov
cld
in
pop
pop
cmp
cwde
iret
iret
sbb
sbb
cdq
pop
out
outs
sbb
(bad)
sub
call
aad
ss
lods
ss
mov
(bad)
pop
cmp
adc
pusha
not
outs
ins
mov
js
and
lods
loop
(bad)
inc
repz
mov
pop
stos
shl
cmp
mov
jl
mov
(bad)
(bad)
jmp
scas
imul
inc
out
shr
jmp
je
push
and
or
pop
jno
fldcw
jg
sub
pusha
js
sti
xchg
inc
stos
jg
push
inc
je
sub
ds
pop
retf
sub
sbb
sbb
(bad)
jmp
out
push
(bad)
(bad)
(bad)
fmul
sahf
dec
in
jl
out
jle
push
lds
fisttp
int
popf
or
push
mov
push
and
mov
mov
ins
fmul
(bad)
(bad)
(bad)
mov
mov
sub
repz
out
pusha
push
ds
js
jmp
cs
(bad)
(bad)
dec
pop
mov
or
stc
test
dec
out
xchg
xor
leave
lahf
dec
push
sahf
sahf
dec
(bad)
(bad)
retf
(bad)
in
(bad)
(bad)
(bad)
inc
stos
mov
aam
jnp
leave
jmp
jle
jecxz
mov
dec
and
(bad)
idiv
(bad)
mov
int
sub
rol
out
pusha
jle
scas
push
jg
jmp
jg
lock
in
pop
mov
cmp
loopne
fsub
mov
aam
js
test
push
sahf
sbb
iret
push
adc
mov
push
pop
test
pop
in
pxor
cmp
and
cmp
adc
imul
mov
or
movs
mov
jecxz
cli
xchg
xor
mov
inc
(bad)
das
adc
pop
scas
(bad)
aas
leave
pop
jns
and
(bad)
(bad)
cmp
sahf
add
inc
sahf
pusha
jo
xchg
sbb
mov
or
dec
pop
or
fisttp
std
dec
lahf
pop
aad
(bad)
out
popa
rcr
dec
mov
push
cld
(bad)
(bad)
aas
jae
or
ins
and
(bad)
mov
lods
pushf
mov
cld
shr
pop
pop
sbb
stos
sub
loopne
xor
xchg
jge
dec
imul
rcl
(bad)
mov
stos
in
cmp
dec
xchg
(bad)
(bad)
jmp
stc
jp
mov
scas
cwde
mov
ror
cmp
arpl
inc
icebp
call
mov
pop
and
push
fdivr
(bad)
(bad)
push
sbb
retf
jge
(bad)
mov
fistp
mov
push
std
dec
cwde
cld
imul
shl
das
cmp
(bad)
push
push
pop
dec
fmul
pop
and
adc
in
pop
jl
call
adc
jo
call
and
lods
mov
adc
sti
scas
mov
nop
pop
push
cmc
or
ret
fcomp
pop
mov
(bad)
in
sub
mov
loope
retf
out
pop
fistp
repnz
dec
pushf
mov
(bad)
call
pushf
(bad)
sbb
adc
mov
cmp
std
push
test
push
pop
jae
fbld
loope
mov
or
outs
inc
push
(bad)
fsubr
xor
(bad)
and
(bad)
xchg
pop
push
add
adc
fist
cmps
sar
rol
push
sub
push
(bad)
inc
cld
jle
mov
ds
adc
iret
fst
fnsave
clc
push
scas
stos
sar
xor
fdivr
cld
cmp
inc
out
loope
mov
xor
outs
lahf
cmp
(bad)
iret
sbb
jbe
pop
ss
xlat
cmp
sti
aaa
or
fcom
mov
rol
cs
call
cld
cmp
scas
sbb
js
pop
fimul
std
call
iret
repz
ret
xlat
add
fcomp
xor
sub
cdq
sahf
pushf
cmp
push
dec
test
lock
ins
je
pop
pop
fcompp
cmp
call
and
outs
cmp
pop
pop
pop
stos
xor
pop
mov
lods
xlat
aam
add
(bad)
jmp
and
lods
mov
out
pop
sub
jg
pop
pop
jl
addr16
inc
test
jmp
fs
xor
sar
xchg
test
ins
dec
and
cmp
or
(bad)
push
jo
dec
scas
(bad)
loopne
mov
mov
imul
mov
fild
push
dec
sub
mov
xlat
jb
out
add
adc
ja
fldl2e
xchg
fnstsw
sub
sub
mov
or
jle
test
cs
lock
pop
pop
sar
stos
sbb
out
call
mov
and
outs
dec
(bad)
(bad)
(bad)
jg
inc
jae
(bad)
iret
fnstcw
out
sub
stos
or
arpl
inc
dec
jae
mov
inc
mov
fs
xchg
or
jle
sub
add
pop
call
(bad)
cmp
ins
cmp
jl
in
fbld
rcl
pop
shr
xchg
inc
pop
jmp
cmps
dec
scas
ror
leave
sbb
stos
or
in
push
inc
jecxz
sub
xor
lock
(bad)
inc
jo
jecxz
and
repz
into
cmp
into
imul
jo
or
(bad)
(bad)
fistp
pop
mov
push
out
daa
and
int3
retf
and
mov
sbb
(bad)
(bad)
(bad)
call
neg
bsf
ds
enter
int
bound
outs
sti
dec
sbb
cld
(bad)
jmp
add
sub
fst
leave
cwde
(bad)
inc
jle
xchg
out
adc
cmps
cmp
pop
pop
or
test
pop
cdq
stos
cmp
retf
cli
ficomp
cmp
mov
fld
xchg
(bad)
(bad)
(bad)
dec
imul
pop
mov
rcr
mov
je
pop
push
mov
lea
inc
xchg
lods
mov
pop
lods
fst
cdq
imul
mov
(bad)
cld
jns
jmp
outs
out
lea
fmul
pop
xor
xchg
je
mov
out
push
idiv
adc
(bad)
(bad)
(bad)
call
js
push
push
add
ds
or
and
movs
nop
(bad)
sub
add
(bad)
jmp
inc
dec
push
xchg
in
pop
ss
push
rcl
push
inc
jbe
cmp
hlt
fcomip
jg
cli
aam
add
leave
ret
scas
rcr
popa
lods
mov
(bad)
stc
call
xlat
(bad)
mov
ret
sub
pop
(bad)
cmp
loop
aaa
fist
jmp
call
scas
adc
fsub
sar
enter
(bad)
mov
jb
inc
adc
ds
sar
fcom
pushf
in
or
call
call
pushf
jp
outs
xor
sub
js
call
jl
aaa
std
dec
mov
(bad)
sbb
adc
lods
fcomp
lds
push
out
push
(bad)
xor
add
(bad)
(bad)
(bad)
call
push
pusha
mov
(bad)
pop
pop
out
test
sub
jmp
sti
adc
fcomp
sbb
outs
mov
inc
pop
push
div
das
xchg
pop
ficomp
mov
ss
xchg
repz
daa
push
(bad)
push
jb
rcr
push
hlt
push
jg
push
(bad)
mov
dec
or
cmps
out
stc
dec
fcmovnb
in
call
fisttp
stos
mov
dec
repnz
scas
xor
xor
sub
sbb
fcomip
(bad)
jg
fcomp
or
ror
jo
js
js
pop
test
(bad)
push
xor
sar
call
pop
fbstp
out
cwde
mov
stc
(bad)
les
mov
cmps
or
jl
sub
mov
test
js
aaa
mov
shr
adc
dec
sbb
mov
mov
cmps
sbb
js
pop
mov
mov
(bad)
(bad)
jmp
shr
jmp
lods
or
add
or
push
mov
daa
movs
jl
scas
fstp
(bad)
icebp
lea
shr
arpl
aaa
fnsave
or
cs
out
sahf
enter
pop
jno
repnz
or
scas
popf
jecxz
js
(bad)
(bad)
dec
inc
fstp
lahf
dec
jle
aad
jnp
mov
adc
pusha
fistp
dec
test
xchg
and
mov
ret
pop
nop
shl
hlt
retf
in
icebp
jmp
sar
lods
iret
fild
jno
in
iret
pop
out
inc
stos
add
(bad)
and
test
das
sbb
bound
fcomip
mov
out
add
(bad)
(bad)
add
jns
lahf
fsubrp
(bad)
les
jg
add
sbb
dec
(bad)
mov
rcr
clc
call
xchg
jle
es
jmp
ficomp
(bad)
(bad)
out
mov
pop
enter
or
scas
imul
cs
jae
fwait
mov
shr
pop
jno
push
or
sbb
pop
push
inc
lea
(bad)
push
loopne
nop
mov
jp
addr16
fcomp
cwde
(bad)
dec
fld
gs
fdivr
mov
push
and
cli
add
ficomp
popf
clc
lock
(bad)
push
ds
(bad)
call
ror
mov
ins
xchg
aaa
sbb
mov
sub
dec
aam
dec
(bad)
daa
dec
mov
or
(bad)
(bad)
mov
add
outs
pop
mov
pusha
pop
sbb
enter
ror
int3
fistp
(bad)
scas
clc
xchg
retf
push
adc
sub
fdivr
(bad)
fist
mov
mov
(bad)
(bad)
fsubr
(bad)
out
mov
lea
mov
(bad)
mov
mov
jp
ficomp
xchg
jp
add
outs
fucomip
sbb
dec
fs
inc
mov
dec
pop
sti
xchg
mov
ds
movs
mov
lea
push
fdivr
int
cmp
pushf
lods
je
(bad)
push
dec
imul
lds
pop
iret
jl
shl
(bad)
(bad)
(bad)
jns
loop
or
add
out
(bad)
cmp
jnp
pop
je
push
test
pop
pop
mov
lds
test
cs
repnz
shl
jnp
imul
xchg
(bad)
jmp
adc
ins
hlt
out
dec
push
mov
push
cmc
data16
xchg
(bad)
jmp
sub
pop
cmp
out
or
xchg
ins
cli
scas
jl
loopne
fild
mov
fiadd
jmp
call
push
fsubr
cli
stc
je
ins
popf
fistp
into
js
stos
bswap
pusha
aas
(bad)
test
push
mov
(bad)
(bad)
fadd
sti
(bad)
sbb
and
(bad)
push
pop
rcl
dec
jl
push
(bad)
mov
lock
or
call
dec
mov
iret
pop
pop
jne
call
push
pop
in
mov
ret
adc
inc
call
lods
sub
out
fsub
in
lahf
pop
(bad)
in
mov
out
cli
(bad)
call
adc
mov
fnstcw
data16
xor
cs
(bad)
(bad)
inc
jle
jmp
test
clc
push
dec
adc
mov
jl
dec
call
sti
call
push
jg
ret
daa
pushf
out
mov
sub
mov
lods
retf
mov
call
jl
das
leave
mov
ret
sub
add
(bad)
(bad)
jl
test
sbb
mov
sub
lahf
sbb
aaa
lods
add
mov
add
jnp
inc
rcr
mov
cmc
mov
mov
mov
mov
push
mov
or
retf
inc
mov
push
out
(bad)
popa
mov
(bad)
(bad)
sub
jns
push
cmp
das
cmp
adc
pusha
adc
inc
shr
test
je
(bad)
fisttp
mov
jb
cmp
push
lahf
pop
call
add
call
sub
stos
(bad)
(bad)
pushf
xchg
fcomp
cs
or
sub
imul
int3
fstp
and
mov
(bad)
call
icebp
imul
int3
pop
pop
jno
sbb
pop
pop
pop
loop
das
fcom
pop
repnz
cmp
pop
push
cmp
add
(bad)
push
ret
pop
pop
mov
cmp
mov
jmp
ja
dec
fnstsw
into
cmps
mov
lds
jnp
mov
sub
inc
fwait
jb
lahf
mov
ss
(bad)
(bad)
(bad)
dec
or
cld
dec
pop
das
fwait
jp
pop
xchg
pop
pop
in
adc
mov
sbb
or
jmp
loopne
retf
fdivr
inc
clc
imul
sbb
fsubr
fdiv
xchg
adc
xor
and
mov
jmp
or
cmp
push
repz
dec
es
clc
fisttp
je
outs
xor
xchg
ficomp
push
ror
(bad)
(bad)
(bad)
jmp
sbb
adc
int3
pop
xchg
mov
rcr
shl
movs
jo
push
(bad)
(bad)
(bad)
inc
mov
jmp
fst
jl
in
xchg
push
mov
or
out
sub
in
enter
ins
cli
not
jns
lock
retf
pop
(bad)
(bad)
(bad)
call
lods
xchg
mov
out
fstp
cmp
sub
out
sti
jno
mov
push
scas
repz
push
jmp
push
push
fmul
bound
test
out
outs
and
lds
jmp
push
dec
ins
(bad)
xchg
in
mov
jp
pop
(bad)
adc
jmp
jp
jmp
pop
push
cmp
fild
jns
pop
out
lds
out
out
(bad)
(bad)
call
sub
lahf
lods
(bad)
or
int
pop
cmp
mov
dec
imul
hlt
fldcw
mov
(bad)
out
xchg
lock
xor
mov
icebp
cli
or
xlat
jbe
push
hlt
fmul
push
retf
(bad)
push
sbb
pop
push
push
pushf
mov
mov
cli
jb
dec
jp
cld
sbb
(bad)
lods
jmp
fld
test
(bad)
(bad)
call
sub
xor
xchg
out
mov
frstor
js
mov
(bad)
inc
xor
hlt
js
or
fnsave
mov
xor
jnp
into
dec
movs
sahf
mov
mov
sti
(bad)
loopne
pusha
jle
adc
ficomp
inc
in
pop
or
call
or
(bad)
mov
test
sbb
cmc
adc
mov
cmp
(bad)
(bad)
call
dec
and
(bad)
mov
cmps
popf
cmp
scas
mov
mov
pop
das
adc
pop
(bad)
(bad)
(bad)
dec
enter
sub
leave
jmp
pop
mov
shr
push
loop
(bad)
js
mov
push
xchg
xchg
(bad)
hlt
(bad)
call
push
xor
(bad)
and
jnp
xor
pop
sahf
add
and
add
mov
sub
mov
mov
popf
in
pop
pop
cli
push
or
pop
imul
dec
lods
inc
push
popf
mov
mov
(bad)
dec
mov
pop
fwait
int3
sar
stos
push
sub
lock
js
fcomp
pop
iret
mov
dec
dec
cmps
mov
cwde
jmp
fild
and
int
(bad)
das
push
mov
(bad)
inc
cli
pop
mov
fdiv
(bad)
mov
push
cld
(bad)
call
xchg
xor
pop
fstp
(bad)
fdiv
lea
enter
loopne
jmp
stos
push
mov
inc
adc
(bad)
cmp
pop
call
sub
add
test
pop
out
jae
pop
push
xchg
mov
push
call
and
mov
cmp
fidivr
das
(bad)
(bad)
(bad)
push
inc
xchg
pop
mov
mov
pop
cdq
into
mov
jp
into
lahf
pop
cmps
sub
ins
mov
push
xor
(bad)
(bad)
cli
das
push
fist
addr16
dec
sahf
out
outs
pop
fisttp
(bad)
and
(bad)
jmp
in
hlt
mov
out
or
int
std
pop
aaa
std
(bad)
jmp
movs
dec
dec
retf
mov
pop
fisttp
push
test
or
popf
fwait
mov
mov
jno
out
daa
xor
dec
adc
mov
and
imul
mov
jl
cmp
sbb
lock
jle
pop
(bad)
sbb
stos
dec
pop
sub
inc
shl
mov
ja
jle
fmul
outs
ds
das
sti
dec
pop
sub
mov
(bad)
call
inc
scas
mov
shl
inc
test
pop
pushf
sahf
push
call
test
mov
push
push
test
test
push
icebp
aaa
adc
sbb
dec
jmp
cwde
(bad)
pop
mov
(bad)
xor
or
mov
(bad)
call
xlat
push
in
(bad)
(bad)
inc
sbb
addr16
std
out
pop
shr
add
mov
pushf
sti
ss
fcmovu
scas
inc
xchg
pop
mov
adc
rcl
pop
sbb
ins
pop
or
mov
test
mov
(bad)
jg
idiv
mov
loop
cli
dec
xor
sar
mov
imul
(bad)
std
lea
lahf
mov
mov
dec
dec
jnp
(bad)
(bad)
(bad)
inc
rcr
cmp
popa
sbb
dec
scas
jge
mov
lods
ret
dec
pop
pop
mov
mov
add
mov
shl
ss
xor
mov
(bad)
call
sbb
sub
sbb
mov
sub
loop
jp
(bad)
(bad)
(bad)
(bad)
js
xchg
sar
cmp
jl
rcr
pop
call
cmps
test
jae
or
dec
lock
jmp
cmps
mov
lock
xchg
and
jnp
cmp
fmul
js
fild
and
mov
mov
xor
mov
(bad)
jmp
js
and
rcr
jle
mov
pop
pop
sub
out
pop
hlt
(bad)
call
(bad)
cld
shr
pushf
inc
das
adc
cwde
ds
mov
inc
add
(bad)
(bad)
inc
cmp
cmps
sbb
dec
popf
ins
fsub
cs
clc
(bad)
mov
ds
jle
aaa
shl
push
mov
sbb
ins
push
push
mov
or
lods
nop
lock
jmp
xchg
addr16
adc
inc
aaa
int
xor
sbb
jmp
test
and
mov
stos
(bad)
xlat
cmp
icebp
sub
pushf
mov
sbb
dec
pop
add
ror
fdivr
ror
rcl
mov
xor
sub
inc
vmulsd
stc
pop
pushf
inc
mov
call
shl
sbb
fistp
daa
stos
mov
test
fisubr
call
jmp
imul
(bad)
fdiv
test
outs
or
std
ja
sbb
ins
mov
pusha
sbb
cmp
push
cld
mov
cs
ret
(bad)
mov
stc
stos
adc
std
lock
(bad)
cmp
pop
cmp
imul
dec
mov
xchg
(bad)
jo
adc
inc
ror
lock
sub
(bad)
dec
adc
stos
rcr
in
nop
(bad)
clc
inc
nop
pop
and
sbb
in
mov
call
(bad)
adc
jno
pop
mov
mov
movs
push
adc
vpsrlw
ins
push
pop
inc
cld
test
mov
std
int3
mov
sahf
pop
or
nop
mov
pop
sahf
dec
sub
mov
mov
mov
(bad)
jg
mov
mov
leave
call
pop
and
jp
add
(bad)
(bad)
inc
mov
inc
and
enter
add
daa
cmp
pop
(bad)
fstp
dec
(bad)
xchg
movs
sub
cld
fcomip
aad
lea
or
int
mov
out
stos
jmp
fild
(bad)
(bad)
jmp
and
rcr
inc
sub
jae
adc
and
das
dec
hlt
(bad)
(bad)
(bad)
push
push
daa
cmp
test
adc
and
cld
stos
mov
jg
pop
inc
dec
mov
pusha
(bad)
jg
jecxz
repnz
aad
jbe
push
stos
pop
dec
mov
ucomiss
loope
std
(bad)
fidiv
lods
pushf
dec
aad
sbb
sbb
push
xor
mov
ror
jmp
cmp
ret
sbb
sar
fwait
(bad)
cwde
rcl
mov
jmp
mov
mov
and
(bad)
jmp
fnstcw
(bad)
jmp
or
jmp
cmp
daa
mov
mov
retf
(bad)
and
stos
dec
retf
fidivr
pop
mov
enter
call
cmp
ja
jo
mov
jb
pop
mov
stos
xchg
mov
ins
xchg
jb
int
sbb
retf
jg
test
mov
or
sbb
std
xchg
ret
fdivrp
(bad)
push
sbb
ret
push
mov
(bad)
dec
leave
es
jne
(bad)
jnp
dec
jmp
stos
shr
sar
dec
adc
jl
jmp
outs
je
or
cld
retf
test
sub
cmp
out
clc
das
xor
push
add
inc
lds
sar
(bad)
jmp
jnp
jmp
das
movs
sub
cmp
repnz
shl
push
call
cli
jmp
pop
push
les
dec
pop
mov
sub
icebp
pop
fbld
mov
dec
xor
fwait
retf
sub
jmp
fwait
call
in
jmp
leave
fistp
mov
in
jmp
xor
pop
cmp
cmp
xchg
jmp
mov
push
or
mov
dec
das
int
mov
(bad)
jb
fs
lahf
(bad)
(bad)
(bad)
(bad)
fidiv
or
mov
pop
leave
jmp
dec
xor
test
outs
mov
fldcw
or
hlt
cmp
mov
fwait
jb
(bad)
call
cmp
xchg
xor
adc
test
xchg
lods
jge
mov
fidiv
cli
pushf
xchg
outs
pusha
push
mov
shr
add
or
mov
add
in
jnp
enter
or
sti
and
ret
call
sbb
outs
daa
xchg
icebp
test
or
mov
push
call
or
add
call
clc
push
add
(bad)
adc
rcl
retf
imul
cli
mov
jnp
in
int
jp
cli
mov
in
add
cmp
and
xor
je
(bad)
(bad)
jg
fwait
jl
aaa
mov
pop
icebp
int
jl
rcr
adc
fs
push
jp
fld
sub
es
data16
retf
pop
xor
(bad)
(bad)
jle
cmps
mov
das
mov
mov
jmp
lahf
push
jge
push
mov
jmp
adc
mov
rcr
mov
stos
aaa
mov
sbb
in
cmp
jb
int
ins
sub
(bad)
inc
lods
ins
cmps
mov
in
mov
sbb
pop
retf
ficomp
fsub
mov
shl
mov
ds
push
cli
cmp
xor
sbb
adc
outs
clc
pop
jp
pop
mov
int
test
das
daa
mov
push
pop
mov
pop
stos
(bad)
(bad)
push
jmp
mov
sbb
ja
aad
in
out
xchg
push
retf
pop
and
inc
jmp
or
or
xchg
test
dec
inc
mov
das
jmp
push
hlt
outs
mov
inc
bound
cs
es
aaa
adc
jns
mov
xor
mov
cmp
push
pop
std
mov
jmp
cld
call
dec
cmp
mov
das
xchg
icebp
(bad)
jbe
mov
retf
cmp
mov
mov
in
cmp
pop
mov
mov
dec
sar
pushf
sahf
ret
stc
or
(bad)
xchg
outs
bound
jmp
inc
xorps
cmp
mov
movs
out
jo
jp
shl
or
mov
or
or
jp
xchg
icebp
or
pop
test
or
int3
xor
jb
or
loopne
and
cmp
inc
call
sub
pminub
sar
cmp
clc
mov
std
mov
clc
mov
fmul
push
dec
dec
sub
test
stc
sub
mov
std
push
imul
ins
je
push
test
cmp
out
sti
and
cmp
in
lods
mov
test
addr16
xchg
aaa
xor
retf
jo
mov
xchg
shl
sbb
mov
(bad)
aaa
into
scas
std
lods
gs
sub
rol
and
add
(bad)
dec
jmp
stos
or
mov
outs
xchg
icebp
mov
bound
sbb
add
adc
cwde
cmp
dec
sbb
jmp
sbb
pop
(bad)
inc
cmp
mov
push
sub
inc
sbb
mov
jmp
fwait
mov
(bad)
jmp
adc
data16
adc
leave
adc
jnp
pop
ins
sub
sti
scas
dec
std
(bad)
(bad)
(bad)
sti
mov
mov
push
ins
mov
cmp
xor
sbb
xchg
jne
sbb
pop
mov
pop
and
dec
stc
push
js
dec
xchg
enter
mov
add
clts
sti
add
jns
retf
push
xor
or
fimul
cmp
cwde
or
add
cmp
add
adc
(bad)
pop
push
and
push
repz
out
mov
cmps
lods
sub
xor
mov
jmp
sbb
gs
jmp
push
push
shl
pop
jmp
sti
call
adc
cli
sti
cmp
fcomp
sub
call
fdivr
rcl
cld
jle
xchg
pop
jmp
(bad)
shr
std
mov
jmp
jmp
cmp
sbb
mov
call
cmp
mov
sub
dec
push
js
pop
ror
dec
add
dec
or
mov
mov
push
retf
or
add
adc
call
cwde
cmp
inc
sbb
jp
dec
int3
fcom
sahf
or
mov
sub
jmp
cld
test
sar
jbe
cwde
pop
cwde
fstp
cli
sbb
cmp
call
(bad)
push
call
jbe
pop
lods
pop
fcomp
lods
clc
dec
fmul
mov
mov
(bad)
out
or
adc
xchg
adc
add
jecxz
jle
aaa
rcl
mov
pop
fild
adc
shl
mov
ret
retf
pop
sub
es
call
outs
je
sti
cmp
repz
aam
(bad)
(bad)
jg
lods
fxch
lahf
dec
push
ins
retf
pop
(bad)
(bad)
pop
das
scas
mov
addr16
sub
ja
popf
mov
dec
pop
shl
shr
jp
cmp
std
scas
mov
faddp
pop
repz
movs
fcmovbe
pop
in
adc
and
fcmovb
popf
mov
idiv
(bad)
aam
sub
test
xor
bound
and
outs
mov
imul
mov
inc
in
push
imul
in
sub
push
(bad)
aas
mov
sub
sub
jmp
enter
daa
mov
(bad)
(bad)
call
stos
into
inc
sahf
stos
fsubr
test
sar
dec
loope
jmp
xchg
pop
and
pop
jmp
in
(bad)
pop
adc
jecxz
retf
sar
xchg
pop
cmp
pop
adc
dec
dec
xchg
sub
retf
(bad)
jmp
jae
adc
cmp
sub
or
mov
ficomp
pop
mov
fisubr
xor
clc
pop
cmp
aam
call
sbb
fldenv
retf
pop
add
xor
movs
test
loope
in
out
pop
pop
inc
(bad)
fisttp
push
mov
jle
(bad)
(bad)
(bad)
jmp
cwde
bound
call
dec
lods
clc
push
mov
in
or
dec
scas
fsubr
in
jecxz
fld
(bad)
scas
sub
sub
adc
or
ins
push
push
push
(bad)
(bad)
(bad)
call
adc
push
pop
jmp
pushf
pop
daa
cmps
js
ja
dec
rcr
out
dec
push
mov
shl
call
fisubr
clc
(bad)
fidivr
or
add
ficomp
in
add
arpl
lock
pop
lock
paddusw
sub
fstp
loope
shl
mov
sub
fcom
retf
dec
fidiv
cmps
(bad)
loope
xor
cmp
pop
cmps
pop
loopne
sbb
loopne
mov
sub
pop
sbb
das
jns
push
dec
mov
jmp
dec
push
jle
lahf
inc
add
outs
(bad)
std
call
fs
daa
mov
sbb
cmps
popa
sahf
jbe
xchg
xchg
pusha
sub
shl
jecxz
and
(bad)
pop
mov
mov
into
jle
std
push
push
pop
sahf
mov
pop
lods
outs
fidiv
adc
scas
push
shl
sub
aam
pop
lock
je
push
shl
push
outs
xor
jecxz
outs
imul
xchg
ins
sub
mov
sub
push
mov
(bad)
push
scas
pop
pop
es
shl
mov
jg
(bad)
pop
lock
cmps
mov
ins
push
das
out
ds
(bad)
jecxz
sub
lock
iret
dec
jle
or
sub
popa
adc
xchg
pop
cs
fwait
arpl
sub
lods
scas
xadd
mov
mov
outs
jns
sub
xchg
pop
and
dec
stos
jg
inc
mov
jns
in
pop
inc
jmp
lods
add
dec
popa
dec
mov
lahf
movs
mov
jecxz
jg
sub
loopne
repnz
pop
xor
mov
(bad)
(bad)
mov
cmp
addr16
sub
ds
rol
mov
ss
push
test
or
sub
ret
jno
fistp
xor
sub
gs
rol
and
movs
in
clc
push
fcomp
daa
dec
cmps
data16
pop
arpl
lods
push
mov
fimul
loopne
cmp
fiadd
push
movs
lock
sub
popf
push
int3
sahf
mov
in
xchg
mov
(bad)
pop
jo
idiv
pop
push
retfw
retf
sub
ret
pop
scas
clc
nop
nop
and
fsubr
and
fsubr
adc
out
ins
push
movs
push
xchg
xor
jge
(bad)
(bad)
mov
adc
push
ins
lods
dec
push
mov
fcmovb
bound
pop
push
in
jl
fist
lods
adc
cmp
and
fs
mov
jge
std
and
cmp
and
xchg
fidivr
out
cmp
mov
in
rcr
inc
(bad)
(bad)
loop
outs
lea
addr16
add
adc
pop
cmp
and
mov
lods
cs
sub
inc
or
lods
clc
sub
cli
jl
add
(bad)
(bad)
clc
lods
jbe
and
add
pusha
in
scas
xchg
mov
imul
repz
fs
dec
sbb
inc
ret
pop
hlt
sbb
inc
daa
(bad)
xor
xor
es
ja
loope
xlat
dec
pop
push
popa
ficom
xchg
pop
pusha
ficom
pop
hlt
arpl
jp
dec
out
arpl
mov
pop
xor
inc
push
push
inc
in
mov
ja
fidivr
pop
retf
js
ins
(bad)
push
xchg
test
sbb
add
in
ficom
xlat
jg
imul
inc
in
mov
xchg
pushf
pop
hlt
icebp
jmp
rcl
retf
and
dec
or
ins
xor
fild
cld
sub
pop
test
jle
pop
jmp
pusha
push
out
jae
fisubr
pusha
cmc
jo
call
in
enter
pop
jg
stos
pop
shl
mov
and
aaa
jp
repz
sbb
lock
mov
mov
push
pop
jmp
inc
das
sar
cmps
icebp
jmp
call
or
cmp
pop
inc
pop
lock
clc
pop
cs
ss
add
ficom
or
repnz
pop
aas
fsub
leave
sti
int3
out
movs
fidiv
ja
inc
inc
pop
aam
push
clc
cmp
mov
fisub
push
rcr
sub
mov
loope
arpl
std
fiadd
stos
pop
jmp
sub
pusha
add
rcr
inc
cmp
pop
lods
outs
out
imul
pop
pop
add
ret
or
addr16
push
call
push
pop
cld
xor
pop
fsubr
lods
and
pop
sbb
adc
sahf
inc
mov
sahf
dec
sar
sub
mov
out
shr
jo
fidiv
fimul
mov
dec
es
jle
fisttp
neg
pushf
(bad)
loope
pushf
xlat
pop
mov
in
pop
daa
pop
push
out
pop
fisttp
call
fiadd
pop
sti
cmp
push
icebp
xor
loopne
xor
(bad)
loopne
mov
inc
pop
mov
sbb
rep
pop
fbld
mov
fimul
jle
ret
pop
jl
les
xor
xchg
and
(bad)
mul
icebp
mov
fmul
push
paddsb
fsubr
outs
fiadd
idiv
unpcklps
out
rcr
and
sar
je
lock
add
add
ficom
pop
fs
rcr
fadd
clc
xlat
sub
out
cmps
test
les
adc
in
cdq
fnsave
sub
pop
dec
ret
in
(bad)
aad
adc
ss
pushf
and
xor
pop
or
add
adc
pop
das
and
adc
xor
ret
adc
in
mov
and
in
fist
in
int3
mov
and
push
inc
mov
loopne
inc
mov
inc
call
jo
pop
daa
jecxz
cli
test
retf
repnz
in
loop
ficomp
ins
fisubr
sbb
mov
inc
jae
xor
mov
ror
test
cmp
outs
fisubr
stos
out
fidivr
or
sar
sub
fstp
rol
ficom
ret
dec
stos
pop
xchg
push
lods
jo
mov
pop
pop
daa
loope
lock
fcomp
jmp
and
clc
push
cli
sti
daa
fild
in
(bad)
pop
call
das
cmp
pop
pop
shr
shl
popa
(bad)
mov
pop
ror
imul
int3
push
jmp
xchg
ret
shl
outs
ror
and
call
mov
pop
push
bound
mov
call
fwait
push
clc
pop
xlat
pop
das
out
enter
dec
pushf
jg
sub
aam
stos
sub
aam
inc
cmp
mov
adc
push
mov
push
lock
cmc
jl
cmp
pop
sub
test
cmc
pop
out
sbb
cmc
sbb
stos
ins
adc
cmp
mov
jmp
rcr
sbb
shr
mov
loope
(bad)
fsub
pop
mov
cmp
sub
dec
fisttp
sbb
inc
into
sar
aaa
or
cmp
sbb
lahf
sbb
inc
inc
shl
mov
jl
sub
loope
push
sbb
mov
pusha
sahf
adc
test
and
sub
and
pop
into
xchg
mov
xor
xor
pop
aad
pop
sar
bound
mov
rol
pop
outs
div
test
or
(bad)
xor
imul
dec
mov
div
jge
rcr
add
pop
lock
sbb
sub
iret
in
pop
push
test
lds
jg
fcmovu
pop
push
inc
fs
das
pop
call
pop
ror
pop
rcr
push
bound
push
ror
outs
pop
sar
dec
mov
lock
push
pop
inc
xchg
dec
xchg
pop
rcr
lods
pusha
jmp
push
pop
sbb
out
cmp
cmp
jbe
enter
or
loope
or
mov
fnstsw
cmp
mov
mov
inc
mov
outs
sbb
in
out
outs
ins
pop
xchg
mov
xchg
call
popf
sub
jl
(bad)
bound
bound
(bad)
out
cmp
pop
cmp
lods
push
outs
mov
loope
sbb
inc
outs
dec
loopne
(bad)
out
mov
das
scas
in
jp
or
call
clc
(bad)
out
or
pop
sub
add
sub
mov
mov
adc
clc
scas
sub
ror
dec
cli
dec
fs
dec
sub
pop
std
mov
xor
cmp
pusha
jge
icebp
das
les
jecxz
pop
adc
xor
sti
push
lods
lods
mov
scas
mov
shr
sub
pop
mov
test
ss
loop
nop
jmp
sub
int
inc
(bad)
pop
add
push
push
push
sub
sar
pusha
pop
ror
icebp
adc
pop
ror
adc
push
xor
lock
(bad)
mov
jecxz
pop
ss
and
push
sbb
mov
mov
(bad)
(bad)
cmps
adc
pop
mov
aaa
pop
cs
push
push
pop
xor
je
adc
aas
sub
mov
xor
mov
ss
cmps
popa
adc
add
(bad)
push
mov
in
cmp
jecxz
loop
repz
std
sar
test
int
mov
das
int
cmp
fidiv
mov
mov
or
inc
stos
cmp
aam
mov
xchg
inc
mov
pop
fs
popf
adc
pop
and
ud0
out
pop
cmps
mov
iret
loope
sbb
pop
arpl
jnp
in
sub
loopne
or
or
cmps
mov
shr
inc
sar
cld
(bad)
call
fcomp
ja
std
mov
push
shl
retf
mov
cmps
adc
out
icebp
xchg
pusha
xor
jo
sbb
inc
call
jp
mov
cmc
test
push
test
into
test
lock
xor
mov
mov
xchg
push
in
or
pushf
adc
xchg
push
and
fdivp
pop
inc
mov
pop
or
lock
in
cmp
pop
popa
sub
aaa
hlt
mov
dec
add
or
dec
adc
cld
jmp
popa
pop
dec
sub
jno
sub
stos
ds
inc
dec
mov
jge
pop
cmp
sub
mov
std
aam
xchg
stos
mov
pop
or
sub
push
jl
jo
dec
out
dec
xor
mov
add
push
es
shl
jl
ins
in
push
outs
mov
sbb
outs
es
jne
inc
or
sahf
jbe
daa
cmps
clc
test
test
sub
or
pop
fsub
sub
enter
scas
and
mov
jmp
sbb
or
dec
daa
jmp
(bad)
push
mov
es
pop
es
mov
rol
paddsw
mov
lods
and
or
clc
lods
sub
shl
add
pop
ret
(bad)
mov
clc
cs
mov
xchg
xchg
push
test
fist
inc
or
aas
es
xchg
and
or
xor
ret
les
and
fisubr
and
adc
jmp
mov
and
and
nop
jbe
pop
loopne
inc
push
adc
and
push
and
or
scas
or
and
mov
or
out
fsubp
adc
dec
pusha
and
and
dec
fidivr
aad
call
sub
in
pop
out
and
retf
push
inc
daa
scas
in
pop
add
sbb
adc
jle
stos
leave
sbb
std
sub
(bad)
and
call
or
add
stos
lock
mov
and
loopne
xlat
(bad)
sbb
jnp
popf
popa
pusha
mov
test
xor
call
in
es
push
sub
cli
sub
fcmovne
pop
icebp
cmps
ficomp
fld
call
cmp
cmps
ja
cmps
jmp
sbb
pop
cmp
and
data16
movs
jp
cmps
pop
push
dec
hlt
and
rol
and
sub
cld
mov
mov
lock
pop
cmp
scas
and
sti
pop
clc
mov
mov
jle
(bad)
jle
push
pop
in
fnsave
push
test
pusha
js
stc
or
dec
sbb
or
sub
shl
(bad)
outs
stc
dec
pop
jmp
pop
xlat
aas
jo
mov
aam
pop
imul
pop
test
loope
lock
mov
jmp
sub
mov
fdiv
push
cmp
daa
fcmove
aas
adc
shl
out
fsubr
push
arpl
adc
push
mov
nop
or
mov
ins
xor
mov
das
fisubr
outs
pop
ds
push
jmp
aas
mov
gs
inc
(bad)
ror
sub
mov
popa
ficomp
pop
ins
fdivr
aam
or
mov
retf
lods
cs
mov
retf
ins
out
sub
jge
mov
imul
inc
pop
(bad)
pop
es
pop
ins
in
mov
or
jecxz
pop
pop
pop
and
scas
xor
ret
arpl
ds
loopne
pop
and
and
jbe
inc
pusha
adc
into
test
or
fiadd
sub
jle
frstor
shr
movs
lahf
push
sahf
push
call
outs
mov
sbb
jle
arpl
mov
add
lahf
daa
lods
sbb
push
pop
and
lahf
xchg
mov
or
and
(bad)
pop
push
sub
loope
sub
iret
inc
cmps
es
in
pop
scas
das
add
xchg
mov
mov
push
xor
aam
sub
jmp
loopne
jo
cld
push
scas
jmp
cmp
mov
xor
test
pop
cmp
shr
push
cli
cmp
cmp
mov
call
ret
xchg
or
sub
push
test
inc
int3
cmp
cmp
or
imul
loope
sbb
sbb
sub
lods
push
cld
addr16
sti
mov
scas
pushf
dec
pop
or
and
pop
das
ss
icebp
add
lods
dec
cli
outs
mov
or
je
lea
sbb
test
lods
jl
mov
and
popf
ror
pop
or
and
clc
retf
pusha
sub
adc
das
or
push
mov
outs
pop
jae
jge
icebp
push
int
cs
popf
loopne
pop
xor
sbb
pop
jo
mov
jl
adc
ja
pop
icebp
pop
dec
push
jecxz
xchg
sub
push
dec
(bad)
(bad)
(bad)
(bad)
(bad)
dec
cmp
shl
in
shl
ret
sub
mov
push
sar
(bad)
std
in
daa
and
lock
pusha
xor
pop
sbb
jmp
ins
ins
lahf
test
adc
outs
bound
xchg
push
cmps
cmc
push
dec
lahf
pop
gs
dec
mov
mov
clc
push
cmp
and
je
and
in
sbb
jecxz
cmps
movs
pop
sub
repz
xchg
bnd
sub
scas
ret
aam
les
rcl
popf
outs
test
add
(bad)
cwde
popf
and
pusha
(bad)
(bad)
push
jne
je
push
data16
push
mov
pop
mov
xchg
adc
and
jg
cmp
cmp
mov
lds
push
push
mov
lea
in
xchg
mov
pop
inc
fs
jns
out
xor
data16
(bad)
sbb
loopne
mov
ja
lock
add
and
add
rcr
ret
pop
mov
mov
dec
xor
in
test
repnz
adc
mov
or
bound
mov
push
cmps
mov
mov
mov
push
mov
enter
loopne
pop
mov
js
aaa
popa
movs
fs
test
rcl
mov
out
or
cmps
popa
jp
or
in
xchg
xor
cs
mov
push
gs
in
inc
mov
xchg
loop
jno
sub
add
ins
or
mov
cmps
(bad)
call
push
mov
cs
dec
imul
shr
pusha
pop
ss
mov
pop
adc
push
(bad)
ds
es
lods
sbb
icebp
jne
ss
mov
loope
xor
pusha
pop
or
cmps
loope
pop
lods
lods
jbe
test
and
mov
loope
movs
movs
pop
and
cmp
cmp
ins
clc
mov
xchg
cmp
or
pop
pop
add
or
dec
xlat
shl
daa
mov
xor
sub
lock
inc
cmp
adc
pop
pop
and
cs
movs
add
lock
es
mov
or
or
xchg
sub
in
mov
hlt
pop
ja
and
test
add
jno
sub
push
dec
movs
(bad)
stos
cs
(bad)
or
es
in
jg
(bad)
jmp
into
add
retf
fisttp
mov
push
jbe
push
dec
push
inc
fst
push
and
call
sub
in
cmps
mov
in
retf
popa
and
add
aas
cmc
jecxz
xchg
cmp
ins
das
in
out
test
(bad)
cmc
cmp
lds
inc
cwde
pop
ins
loopne
aad
mov
neg
sub
and
mov
(bad)
gs
dec
jg
out
scas
adc
sub
movs
jne
cmp
pop
mov
mov
aas
bound
mov
cmp
dec
or
jo
(bad)
out
inc
add
sbb
dec
cmps
xor
retf
push
mov
mov
sub
sub
cli
or
iret
cmp
lods
or
cmp
sbb
jmp
nop
scas
push
and
sub
add
fsubr
jmp
pop
cmp
retf
pop
mov
shl
mov
push
inc
mov
xchg
add
loop
dec
sbb
ins
(bad)
idiv
outs
jmp
movs
mov
lods
push
test
test
mov
adc
(bad)
xchg
cmp
cmc
sub
fidivr
(bad)
cmp
push
or
aam
hlt
test
pop
push
cmp
mov
mov
fidivr
ret
mov
push
fidivr
push
mov
loopne
js
fidivr
lods
fimul
pop
gs
test
call
stos
jmp
ss
in
leave
jo
pop
add
add
dec
push
sub
movs
fsub
pop
fsub
sub
out
and
or
dec
sbb
fwait
jg
adc
sub
mov
stos
js
call
cmp
mov
push
inc
and
pop
jae
cmps
mov
pusha
test
add
mov
cmp
stos
das
jb
test
aam
add
pop
pop
cld
push
das
std
or
out
cs
ret
loop
mov
cld
shl
outs
mov
loop
je
out
movs
xchg
cmp
retf
push
in
addr16
ss
das
pop
jns
adc
(bad)
or
adc
mov
sub
push
jo
in
stos
stos
dec
(bad)
cli
in
pop
pushf
and
adc
pop
dec
inc
sahf
xor
jne
push
push
xor
scas
ret
out
stos
loopne
xchg
mov
fcomp
pop
mov
push
xor
push
outs
adc
out
in
sbb
dec
stos
lock
clc
test
out
cs
mov
add
mov
xchg
shl
or
int3
loopne
push
and
shr
sub
fidiv
lods
gs
mov
and
push
out
cmc
call
in
fist
jge
pop
sub
das
inc
cmp
shr
add
aas
call
ror
pop
andps
pop
jl
pop
pop
or
sub
outs
jecxz
data16
mov
cmps
stos
lock
cld
dec
pop
out
add
mov
xchg
lods
push
scas
xor
call
push
repnz
jle
call
gs
loope
in
test
icebp
cs
loope
sub
loope
or
and
sub
adc
das
inc
pop
pop
mov
bound
shr
mov
retf
fcmovb
cld
lods
pop
or
xchg
jp
lea
fmulp
mov
dec
inc
in
pop
push
jg
pop
cli
and
pop
cmp
xor
stos
pop
stc
out
fstp
out
es
cmp
xchg
clc
mov
pop
sub
sbb
loope
dec
ins
pop
fidivr
shl
or
call
dec
cmc
xor
imul
pop
outs
scas
pop
rcr
pop
(bad)
imul
in
out
pop
scas
jmp
or
stos
popf
sbb
dec
push
movs
imul
adc
inc
mov
jg
add
cmp
and
ss
lea
arpl
sbb
push
adc
fcmovbe
pop
loop
and
cli
push
dec
in
das
xor
out
add
and
push
jb
out
pop
and
into
jmp
outs
push
jle
add
inc
dec
jmp
pop
aas
mov
popa
cli
sbb
loopne
(bad)
jg
push
repnz
bound
xchg
cs
cdq
sub
repz
cmps
ret
or
rcl
(bad)
(bad)
(bad)
call
xchg
jl
pop
dec
les
lods
push
ret
inc
xchg
mov
into
in
sub
inc
rcl
cmp
dec
dec
mov
aad
into
mov
aam
sub
(bad)
sub
retf
fimul
add
mov
lds
jg
jmp
or
jo
pop
inc
jb
xchg
int
(bad)
ja
hlt
inc
xchg
sbb
sbb
movs
cmp
mov
(bad)
lods
push
sub
fild
adc
stos
jno
dec
vmovntps
(bad)
(bad)
jmp
clc
mov
add
repz
and
xchg
sar
iret
dec
pop
sbb
mov
pop
das
inc
pop
mov
hlt
and
(bad)
(bad)
jmp
fld
cmps
int
scas
leave
dec
or
lea
add
(bad)
xor
popa
mov
call
iret
inc
leave
inc
add
pushf
sub
clc
push
xor
loop
xor
hlt
(bad)
dec
cmp
test
mov
and
es
xchg
push
xor
ret
and
(bad)
(bad)
(bad)
jmp
sub
cmp
xchg
repz
icebp
inc
sub
or
pop
push
ror
mov
and
cli
retf
mov
sub
add
(bad)
jg
(bad)
std
retf
bound
stos
ror
enter
stos
cmps
fwait
das
mov
in
cld
push
jmp
jmp
push
aad
retf
clc
mov
dec
lods
cmp
mov
push
ret
shr
xchg
ds
jmp
repnz
(bad)
fcomip
arpl
cli
xchg
add
daa
movs
inc
sbb
jecxz
inc
retf
mov
ins
cs
fdivr
jmp
cmps
aas
dec
fiadd
stc
mov
inc
mov
movs
sub
xchg
sub
(bad)
enter
test
inc
movs
pop
cmps
ret
out
cmp
sub
fisttp
mov
inc
inc
int
adc
(bad)
std
lods
jmp
sub
dec
fwait
and
cmp
dec
inc
ret
jp
dec
leave
test
(bad)
xor
rol
aad
(bad)
inc
es
fadd
sbb
push
lahf
retf
loopne
inc
xchg
and
push
retf
cmp
(bad)
xor
cmp
int
lock
les
aam
repnz
fmul
call
sbb
inc
sub
dec
(bad)
scas
clc
(bad)
in
es
mov
and
bound
inc
sar
nop
out
dec
or
das
rol
fidiv
into
inc
sub
(bad)
(bad)
mov
inc
mov
sub
inc
addr16
add
sub
pushf
pusha
bound
std
out
clc
cmps
cmps
sub
enter
enter
cwde
pusha
inc
or
jecxz
mov
jle
js
inc
mov
movs
pop
ins
(bad)
adc
test
sbb
mov
dec
retf
(bad)
mov
inc
ror
mov
dec
int3
inc
xchg
or
into
sbb
sbb
dec
shl
stc
fcom
mov
dec
retf
or
or
xor
sub
or
fld
retf
inc
mov
or
inc
inc
into
inc
imul
leave
inc
daa
add
push
or
push
xchg
add
retf
jb
mov
idiv
jg
inc
cmps
dec
or
cmc
int3
dec
retf
sbb
xchg
dec
ror
int3
cmp
inc
retf
clc
push
sbb
dec
jge
mov
pop
add
ret
or
mov
clc
aaa
inc
sub
(bad)
retf
sbb
mov
dec
or
sbb
mov
dec
lahf
dec
(bad)
cs
(bad)
retf
dec
xor
cs
jmp
into
add
jns
dec
ret
pop
(bad)
sub
dec
leave
dec
adc
jmp
ja
enter
or
sahf
inc
jb
stos
push
nop
iret
xchg
inc
into
sub
ror
or
cmp
pop
adc
js
pop
xchg
loope
push
stos
lock
mov
retf
das
xor
jns
pushf
xor
inc
ret
mov
sub
jecxz
add
or
frstor
mov
clc
cmp
dec
xchg
(bad)
jp
xchg
lods
dec
ror
cmc
jp
call
clc
(bad)
dec
dec
pop
sub
shufps
loope
inc
shr
inc
mov
rcr
mov
inc
inc
(bad)
jg
movs
aaa
retf
fidivr
out
ficom
std
in
pop
push
call
jmp
mov
fdivrp
es
push
lods
cmps
add
dec
or
movs
lods
(bad)
outs
xor
(bad)
jns
stos
push
or
sahf
jp
jmp
retf
inc
test
mov
fs
lahf
fidiv
mov
mov
imul
or
mov
mov
gs
inc
dec
jno
test
and
cld
jmp
sahf
cmp
(bad)
sub
and
pop
and
push
and
pop
imul
inc
inc
aad
clc
fsubr
ficom
aam
dec
fs
ret
push
lahf
push
jae
inc
(bad)
pop
sub
leave
fidiv
call
lods
es
loope
(bad)
aas
lods
aam
and
popa
(bad)
stc
in
retf
and
icebp
test
ins
dec
retf
add
xchg
imul
dec
rcr
add
sbb
(bad)
mov
(bad)
sub
jle
mov
mov
inc
mov
(bad)
inc
in
mov
int
fcomp
aam
leave
dec
xchg
jmp
(bad)
(bad)
jmp
sar
ret
popa
jle
stos
nop
sbb
fistp
sbb
cmp
(bad)
jmp
in
iret
or
sub
rol
dec
inc
mov
dec
retf
dec
aam
inc
inc
retf
ret
(bad)
xor
adc
dec
arpl
push
mov
push
outs
and
dec
rol
mov
call
icebp
xchg
inc
jnp
cmp
aam
cmp
adc
mov
rol
je
cmps
call
adc
dec
call
aas
cwde
lods
inc
add
(bad)
(bad)
mov
loop
ret
cmp
pop
mov
shl
dec
retf
sbb
shl
inc
movs
xchg
lods
imul
call
xchg
js
fwait
sub
ret
mov
mov
jge
das
xor
iret
retf
mov
cmp
jge
inc
jg
cmp
xchg
dec
mov
and
out
fwait
pop
in
mov
and
lods
outs
mov
and
fmulp
mov
ret
idiv
rcl
dec
call
fmul
cs
and
sar
mov
out
mov
jmp
cmp
push
in
imul
or
pop
sbb
mov
cmp
retf
aaa
cmp
daa
mov
mov
sub
aaa
jg
mov
enter
mov
sbb
call
enter
cmp
retf
or
pop
(bad)
retf
not
push
push
sub
fwait
sti
(bad)
(bad)
dec
movq
xchg
mov
test
rcl
retf
ror
das
sub
jmp
int3
xor
inc
stc
dec
dec
repnz
or
add
inc
jp
les
into
dec
outs
imul
(bad)
dec
pushf
push
jl
push
adc
jmp
(bad)
cmp
retf
aad
rol
inc
mov
pop
repz
xchg
sub
cwde
(bad)
das
(bad)
(bad)
inc
mov
add
cmp
jecxz
aam
push
js
mov
(bad)
sbb
(bad)
(bad)
(bad)
mov
push
shl
out
inc
or
mov
push
pop
jmp
(bad)
(bad)
fistp
fdivr
(bad)
dec
rcl
cli
(bad)
sub
pop
push
cli
iret
sub
shr
cld
(bad)
(bad)
jmp
ror
add
cli
enter
dec
lea
fistp
mov
pop
inc
(bad)
(bad)
push
cmps
mov
icebp
jnp
pop
xchg
mov
and
dec
inc
lds
retf
sar
fst
fsub
loopne
dec
repnz
xchg
dec
push
std
(bad)
call
fiadd
mov
inc
fstp
rol
sub
shr
aam
idiv
(bad)
(bad)
jns
stc
push
xlat
(bad)
push
pop
pop
push
mov
mov
jb
test
xchg
fcmovnb
mov
push
clc
mov
fmul
jg
les
push
repnz
(bad)
(bad)
dec
cmps
sti
pop
punpckldq
cmps
call
cmc
cmps
into
fistp
rcl
inc
pop
dec
iret
xor
cmps
and
jns
rcl
rcl
pop
lock
dec
test
xor
stc
out
sahf
pop
mov
loopne
into
inc
(bad)
push
cld
adc
dec
jb
aad
movs
cmps
cmp
(bad)
(bad)
jnp
pop
call
push
(bad)
push
es
(bad)
pop
lock
rcl
sub
mov
mov
sbb
jecxz
(bad)
(bad)
in
fisub
call
mov
push
mov
stos
inc
inc
clc
pop
cld
cmps
pop
add
mov
cli
call
clc
mov
lods
call
mov
int3
sub
stos
pop
minps
push
pop
cli
lods
mov
pop
rcr
adc
jg
adc
or
(bad)
jl
pop
push
lods
shl
loopne
xor
cmps
call
jecxz
(bad)
(bad)
(bad)
mov
sahf
adc
(bad)
jns
add
pop
dec
scas
jmp
dec
or
cmps
mov
popf
mov
cmps
jnp
cmp
adc
scas
add
xor
pop
cmp
ror
(bad)
leave
sub
push
push
or
mov
popf
cmp
jmp
push
mov
(bad)
push
or
stos
(bad)
fsubrp
stos
pop
push
inc
sahf
fnstsw
pop
pusha
mov
push
sar
sub
jmp
enter
dec
retf
fcomp
(bad)
dec
lock
loopne
ins
fs
fisub
push
inc
rcr
(bad)
inc
retf
jp
dec
movs
xor
fisttp
pop
xor
in
push
mov
jp
mov
outs
rol
ret
pop
loopne
inc
mov
fimul
jo
cmps
dec
push
or
(bad)
js
cmps
(bad)
dec
int3
inc
cli
add
call
rol
dec
into
movs
ds
(bad)
call
xchg
inc
pop
pop
outs
ins
scas
dec
fstp
cmp
pop
les
retf
pop
mov
ds
aaa
xchg
ror
es
(bad)
(bad)
and
retf
mov
aam
loopne
icebp
aad
ds
(bad)
(bad)
(bad)
dec
inc
dec
psrlw
mov
jb
js
int3
jmp
pop
dec
inc
pop
mov
or
jge
lds
(bad)
fwait
dec
lods
jle
mov
in
into
fiadd
cmp
xchg
dec
inc
mov
push
sbb
jae
loopne
xor
and
mov
pop
iret
inc
pop
(bad)
mov
rcr
fisttp
andps
sbb
push
call
inc
fstp
mov
(bad)
call
repz
dec
mov
das
sar
fnstcw
std
test
hlt
jge
std
(bad)
inc
fbstp
das
pop
dec
outs
dec
aam
inc
fs
pop
lods
(bad)
out
cmc
fisttp
ds
cmp
or
sbb
mov
scas
inc
dec
pop
sar
mov
call
pop
fsubr
xchg
rcr
jg
ins
cld
js
inc
cmps
or
xlat
push
into
aaa
adc
dec
pop
stos
mov
std
push
daa
mov
stos
ficom
dec
inc
(bad)
out
xchg
or
mov
push
cli
mov
xlat
fistp
adc
int
push
repnz
dec
cld
call
mov
call
push
cli
dec
fdivr
adc
sbb
pop
pop
icebp
jg
fwait
mov
sub
push
xor
mov
mov
sbb
fisttp
cdq
stc
fstp
int
loop
loopne
pop
fdivrp
das
mov
std
sbb
shl
push
in
push
ret
pop
dec
sar
outs
add
push
retf
pop
pop
call
call
popa
pop
sub
mov
xor
sub
push
(bad)
xacquire
jmp
pop
cmc
fdiv
pop
pushf
or
pop
and
and
or
out
dec
mov
push
or
sub
into
loope
call
clc
into
cli
sub
shl
xlat
dec
mov
clc
call
das
push
jmp
mov
lds
cli
xchg
call
fwait
push
or
jle
mov
pop
icebp
sbb
xchg
sub
sbb
push
xor
iret
cmps
lahf
jo
stc
test
xor
dec
cwde
stos
in
inc
aad
ror
inc
or
rol
mov
aam
xor
and
cmp
sbb
xor
(bad)
aaa
cmp
stos
enter
leave
or
mov
test
ins
cwde
inc
or
or
shl
and
inc
push
outs
cdq
xor
or
sub
rcr
inc
pop
jecxz
cld
pop
cmps
mov
push
jg
pop
enter
(bad)
aam
outs
xchg
test
cmp
jle
test
xor
dec
xchg
mov
(bad)
jmp
or
retf
fld
dec
rcr
lock
(bad)
imul
cmps
mov
pusha
aas
cs
dec
cld
pop
loopne
pop
sub
hlt
jp
xchg
inc
retf
call
push
outs
and
clc
inc
push
test
pop
xor
jmp
mov
mov
fisub
sahf
fwait
xor
jae
add
mov
retf
push
cwde
cwde
jg
aaa
cld
inc
xor
cwde
mov
fwait
test
mov
ficomp
int
mov
lock
jmp
mov
sub
push
and
push
xchg
cmp
mov
dec
pusha
jo
xor
rcl
(bad)
ret
popa
mov
inc
mov
bound
aad
lock
or
mov
push
adc
push
push
jp
inc
inc
fisub
out
jp
mov
push
jp
ror
add
out
adc
sbb
sub
loopne
cmp
call
es
daa
sbb
fwait
es
arpl
adc
aaa
inc
push
(bad)
mov
xchg
jnp
test
ss
inc
add
jbe
pop
xor
and
adc
in
add
inc
leave
xchg
aam
cmp
mov
out
add
ja
jmp
in
mov
addr16
pusha
das
pop
fadd
pop
cs
shl
sti
mov
jbe
push
cmps
movs
cmp
mov
call
into
xlat
daa
popf
neg
fst
xchg
enter
or
add
or
inc
sub
add
push
movs
xchg
call
fimul
repnz
and
stos
add
jne
inc
ret
adc
(bad)
dec
add
adc
(bad)
mov
pusha
cmps
fcmovb
sub
out
xchg
mov
(bad)
(bad)
jg
mov
cmp
int
dec
mov
fs
fucomi
pop
ins
or
(bad)
mov
in
or
pop
mov
fdivr
(bad)
mov
ins
hlt
sbb
xor
or
adc
fdivr
(bad)
(bad)
push
je
jo
pop
sahf
aad
sub
add
sbb
xchg
dec
std
inc
mov
(bad)
dec
rcr
fcom
arpl
jae
mov
lods
test
push
nop
fistp
mov
call
jecxz
fild
cmp
sbb
inc
sar
call
xor
sar
fcomp
xor
out
pop
mov
call
call
or
pop
ds
cs
and
mov
popa
sbb
dec
movs
out
inc
cld
jmp
xchg
popa
aam
fs
retf
scas
and
outs
cmps
mov
inc
cmps
in
and
sbb
les
jmp
add
sub
mov
or
push
nop
aas
out
sbb
or
jmp
stos
inc
mov
loopne
(bad)
(bad)
jmp
sbb
repnz
imul
iret
nop
fnstsw
cld
adc
push
int
outs
inc
pop
sub
stc
mov
call
sub
adc
aaa
ror
mov
(bad)
aas
ret
int
js
pop
dec
sahf
inc
xor
movs
jge
jmp
out
ds
ret
out
mov
stos
dec
dec
(bad)
push
sub
stos
fs
shl
mov
std
or
into
cmp
stc
xor
and
jmp
mov
fstp
ds
adc
aad
pusha
push
clc
(bad)
(bad)
mov
cmp
mov
test
or
ja
(bad)
jmp
mov
mov
dec
call
loopne
pop
mov
inc
xchg
icebp
std
out
jp
loope
fcomp
popf
lahf
or
dec
dec
cmp
xchg
mov
inc
sub
pop
jns
aas
mov
jmp
dec
test
or
fmul
scas
mov
push
dec
stc
das
fsubr
push
movs
mov
and
dec
test
push
dec
xchg
jae
test
jg
popa
cld
mov
pop
fcomp
mov
(bad)
js
push
sub
push
push
cmps
add
sbb
mov
sbb
sbb
and
mov
stos
pop
adc
ja
outs
xor
out
jmp
sbb
int3
mov
push
dec
dec
push
test
test
add
in
psrlw
fcom
xchg
push
cmc
(bad)
fyl2xp1
stos
cdq
mov
push
dec
fstp
pop
inc
or
mov
fisub
mov
(bad)
sbb
ret
jg
(bad)
(bad)
fmul
xchg
shl
leave
cmps
sar
dec
sbb
imul
sub
push
test
mov
mov
cmps
mov
aad
stos
sub
mov
mov
idiv
lock
mov
loop
and
daa
fcomip
out
cli
mov
les
xor
jbe
fisttp
sbb
pop
lock
pushf
and
(bad)
push
sahf
es
shl
lods
inc
loop
lea
in
test
test
push
fldenv
cli
xor
sti
mov
sti
or
or
sub
test
aad
pop
inc
loop
or
adc
fcom
imul
and
(bad)
jg
fidivr
fdiv
mov
test
dec
mov
scas
fmul
sub
mov
shl
fs
ins
mov
fidiv
retf
outs
xchg
lahf
cli
fstp
pop
scas
pop
xchg
xchg
bound
(bad)
fstp
fdivr
add
retf
fild
cld
(bad)
fistp
iret
fmul
loop
dec
sahf
scas
out
lods
ins
pop
mov
(bad)
jmp
out
push
cmps
push
jp
bound
push
(bad)
test
std
jmp
bound
leave
not
lods
fmul
add
jg
(bad)
xchg
dec
scas
mov
adc
test
std
outs
sbb
call
into
cmps
xor
mov
rcl
in
(bad)
in
mov
push
shl
cmp
sub
push
and
(bad)
cmp
mov
iret
cmp
sub
sub
push
adc
daa
or
sub
mov
outs
jmp
inc
sub
sub
lods
sbb
jecxz
(bad)
push
adc
fild
or
mov
int3
idiv
pusha
mov
pusha
cli
pop
out
push
jo
and
es
mov
bound
and
push
push
and
push
and
into
add
xchg
pop
fld
scas
hlt
sbb
shl
loopne
xor
retf
jp
pop
mov
mov
push
sub
push
repnz
push
mov
mov
sub
mov
mov
fdivp
jge
out
aad
(bad)
mov
stos
adc
(bad)
(bad)
dec
and
out
stos
int3
imul
fadd
mov
fcom
xchg
test
sbb
push
(bad)
(bad)
in
add
data16
sbb
sar
rcr
rol
cli
outs
test
pop
retf
inc
mul
mov
jmp
dec
scas
sub
push
(bad)
call
aas
push
jbe
out
jg
lds
mov
fimul
and
rol
in
pushf
scas
pop
rcr
mov
mov
shr
add
lods
js
xchg
mov
rcl
push
aaa
xor
ror
shr
cmps
mov
dec
jbe
int3
out
lods
jmp
mov
dec
loop
dec
dec
cmps
cld
cld
lods
pop
pop
or
aad
sbb
int3
test
movs
pop
jnp
cmps
dec
mov
mov
adc
jmp
mov
push
inc
mov
jg
call
inc
ficomp
retf
sar
xchg
out
push
call
push
test
(bad)
(bad)
dec
jmp
lods
cmps
adc
sub
mov
or
dec
scas
push
push
jg
jmp
imul
in
push
jge
push
xor
imul
sbb
push
push
stos
(bad)
(bad)
call
adc
aam
cmp
mov
lods
mov
call
mov
cmp
sbb
dec
push
pop
pusha
loop
daa
inc
pop
mov
push
mov
add
jmp
sub
dec
sbb
lods
push
push
add
add
mov
popf
and
ret
call
(bad)
fisub
xchg
clc
push
pop
cli
pop
sar
scas
mov
and
cmp
jmp
clc
mov
pop
aad
loop
out
pop
sub
adc
or
popf
test
mov
ja
adc
dec
push
test
repnz
cmp
(bad)
cmp
call
enter
rol
leave
jmp
mov
pushf
pop
jle
xchg
pop
(bad)
mov
popf
(bad)
(bad)
inc
int3
int3
sbb
imul
outs
test
jns
pop
sub
sub
sub
push
mov
jg
clc
shl
rcr
loope
js
jnp
cmp
dec
(bad)
pop
cli
cwde
ret
daa
push
jle
shr
ins
cs
(bad)
(bad)
call
mov
push
cmps
sbb
cmp
mov
fidiv
xchg
lods
jl
retf
pop
fcomp
xor
loopne
or
loopne
jp
(bad)
(bad)
jg
int3
pop
shr
je
cmp
pop
and
jmp
mov
mov
mov
pop
call
mov
scas
xor
sub
mov
jg
dec
lods
push
pop
das
jp
sub
imul
mov
mov
cli
imul
test
mov
fistp
sar
outs
cli
jmp
test
cmps
add
adc
cmovnp
js
mov
xor
cmp
js
ja
dec
push
and
dec
cmps
cmp
clc
jg
inc
jnp
stc
jle
jns
retf
test
out
cmps
jl
pop
fdivr
mov
(bad)
(bad)
inc
cmp
jg
cdq
and
xor
stos
sbb
test
sub
(bad)
(bad)
(bad)
mov
jp
mov
cmp
fmul
mov
mov
push
icebp
xchg
push
sbb
aam
sub
mov
mov
into
in
pop
sub
sub
aad
cld
push
test
fsubr
xchg
icebp
mov
push
cwde
pop
ins
cli
adc
rcl
and
je
sbb
dec
(bad)
(bad)
jmp
xor
int3
icebp
out
mov
adc
hlt
pop
sub
in
xchg
jge
or
push
(bad)
(bad)
(bad)
push
inc
xor
test
mov
(bad)
out
pop
sbb
loopne
xchg
mov
cmp
push
xchg
outs
inc
popf
in
fstp
mov
outs
test
neg
mov
(bad)
bound
push
js
aaa
or
and
hlt
arpl
call
cmp
sti
stos
pop
lock
faddp
loopne
lock
fbld
pop
sbb
rcr
sbb
sar
call
stos
inc
sub
pop
fadd
iret
sub
test
ds
push
sbb
mov
dec
inc
(bad)
mov
cmp
inc
sub
(bad)
jmp
nop
and
mov
pop
mov
mov
je
aas
fsubr
xchg
pop
cli
test
(bad)
(bad)
mov
fisttp
into
pop
pop
push
pop
sub
popa
mov
jmp
mov
sbb
pop
cmp
pop
(bad)
push
dec
push
mov
sub
loopne
xor
pop
lock
outs
xor
scas
lea
jmp
dec
daa
fcomp
pusha
lock
pop
ffreep
sub
push
out
mov
dec
pop
fcomip
(bad)
call
in
mov
aaa
aaa
fsubr
jp
stos
hlt
fucomp
mov
loop
out
minps
fs
jmp
(bad)
lods
push
out
cs
sbb
test
call
outs
mov
rdtsc
cld
xchg
test
fnstenv
std
dec
cli
pop
pop
pop
test
movs
outs
cmp
xor
cpuid
jb
jg
pop
fcomp
call
iret
jg
mov
jp
pop
sub
or
popf
mov
jbe
stos
jg
add
fsubr
nop
jg
es
sub
sbb
dec
cld
(bad)
dec
faddp
fist
sbb
sbb
mov
sub
dec
cmp
fdiv
pop
(bad)
(bad)
push
pop
jl
jp
xor
leave
sub
fmul
xchg
mov
mov
or
adc
fmul
dec
mov
jg
jge
sub
addr16
mov
jnp
xchg
ffree
in
cs
ficomp
cmp
push
aas
mov
mov
das
sbb
mov
stos
pop
pop
jl
xchg
xor
pop
or
jo
int3
mov
jmp
lea
adc
adc
and
aad
ja
fcomp
outs
ins
dec
jb
fsubr
outs
push
inc
inc
lds
cmp
mov
pop
cli
ret
movs
xchg
and
call
inc
ret
leave
inc
fcmovne
shl
xchg
daa
outs
xchg
dec
mov
int
push
xlat
push
xor
int
(bad)
cdq
pop
push
sub
(bad)
(bad)
mov
mov
popf
into
dec
sbb
adc
pop
imul
imul
fcmovnbe
(bad)
(bad)
push
mov
stc
mov
pushf
cmps
and
mov
fmul
add
call
(bad)
jmp
out
add
mov
pop
fsubr
add
sub
(bad)
xor
cmp
mov
pop
mov
popa
mov
mov
jns
lods
fidivr
(bad)
(bad)
(bad)
inc
cmp
pusha
lods
imul
jmp
scas
(bad)
fidivr
lahf
aaa
dec
and
outs
es
fdiv
push
sbb
clc
push
popf
mov
jmp
xor
jmp
mov
add
mov
dec
jnp
jmp
ins
mov
(bad)
fcom
test
mov
or
stc
retf
sub
(bad)
call
pusha
stos
aam
out
dec
(bad)
mov
or
mov
movs
outs
lea
adc
(bad)
out
(bad)
(bad)
dec
mov
repz
lods
stc
inc
xchg
inc
sti
stos
fnstenv
test
mov
jmp
pop
add
sbb
fmulp
mov
mov
mov
xor
sub
lods
ret
aam
call
mov
sbb
pop
sti
inc
daa
mov
sub
sbb
retf
pop
adc
stc
(bad)
(bad)
call
stc
loopne
imul
aad
scas
mov
inc
aad
and
jmp
mov
jp
pop
sbb
pop
jge
fld
push
push
std
mov
add
sub
or
pop
out
pop
popf
arpl
jmp
stc
(bad)
or
mov
pop
ror
or
int
fcmovnbe
jl
jb
js
mov
(bad)
(bad)
push
inc
mov
sub
loopne
fisttp
dec
jle
(bad)
sar
mov
pop
and
xor
xchg
cli
sub
add
cmp
je
pop
out
cmps
add
push
push
stos
inc
test
movs
inc
jl
nop
retf
xchg
cmps
sub
(bad)
(bad)
(bad)
jmp
outs
push
jmp
fst
or
(bad)
lahf
dec
cmp
sar
pop
mov
dec
test
push
(bad)
pop
es
mov
call
movs
iret
jl
pop
aas
xor
cli
sar
dec
aas
push
mov
inc
or
or
mov
fsub
sub
jmp
push
movs
add
or
pop
cwde
(bad)
adc
aad
push
adc
sti
and
push
retf
mov
mov
adc
retf
jmp
and
int3
cmp
das
cmps
mov
cmp
push
cmp
enter
test
aad
xchg
pop
bound
(bad)
dec
dec
jmp
adc
sub
dec
int
fnsetpm(287
dec
cmp
aam
xlat
sbb
pop
xor
push
cmp
cld
into
ror
sbb
pop
(bad)
scas
pop
push
int
push
mov
push
ficomp
ss
(bad)
mov
ss
cmp
push
rol
push
dec
cld
jmp
dec
adc
out
clc
inc
pop
mov
addr16
inc
pop
test
movs
(bad)
sti
push
sti
out
xor
in
mov
out
dec
dec
mov
loope
(bad)
(bad)
mov
push
popa
call
push
fdivr
add
(bad)
(bad)
(bad)
jmp
jbe
ds
call
or
xchg
imul
fsubr
jmp
call
add
add
jmp
pop
or
sar
or
bound
inc
sub
(bad)
(bad)
call
call
push
cmps
fnstcw
adc
push
out
pusha
or
loope
pop
(bad)
push
cld
fxch
mov
mov
mov
sub
mov
scas
add
add
arpl
sub
jle
mov
dec
lahf
fnstcw
inc
adc
(bad)
push
movs
std
pop
fst
lea
inc
shl
pop
pop
adc
adc
aaa
fiadd
mov
jmp
je
(bad)
(bad)
cmp
retf
jl
xchg
lods
fisttp
mov
test
ss
add
sub
inc
mov
movs
fwait
add
ss
hlt
(bad)
jmp
loop
add
push
rcl
cmps
push
fs
sti
ins
shl
pop
or
mov
cwde
mov
bound
xor
pop
lahf
repz
pop
push
jp
(bad)
(bad)
(bad)
call
ret
fadd
(bad)
mov
pop
jmp
sub
test
jg
push
xor
push
repnz
pop
loopne
jae
pop
fs
call
mov
sbb
jg
cmp
pop
out
jg
outs
cmps
inc
jmp
ins
dec
repnz
sub
xor
mov
movs
out
cmp
adc
jmp
popa
pop
mov
loopne
(bad)
(bad)
jmp
pop
and
ins
mov
popa
dec
popa
pop
dec
outs
sbb
neg
shl
push
push
ins
sbb
sub
out
int3
dec
xchg
aam
ror
push
fst
loope
xlat
push
(bad)
(bad)
mov
loopne
push
arpl
sar
pop
cli
push
enter
lods
stos
cmp
icebp
mov
push
mov
pop
outs
(bad)
jg
pop
call
xchg
push
xchg
js
mov
icebp
dec
aam
ins
pop
dec
mov
nop
jno
jmp
das
out
rcl
in
jmp
mov
shl
sub
sub
push
fimul
dec
(bad)
jmp
imul
mov
cmp
stos
or
xchg
jmp
retf
sahf
(bad)
(bad)
fild
jae
scas
sub
fsub
jmp
retf
pop
lahf
mov
jns
mov
mov
std
inc
or
out
mov
mul
idiv
(bad)
(bad)
jmp
mov
repnz
retf
push
popf
lods
sbb
out
fiadd
inc
(bad)
(bad)
push
fwait
mov
add
adc
leave
fmul
adc
in
add
call
or
adc
call
cmps
pop
aad
pop
(bad)
mov
lahf
mov
popf
ror
cmp
mov
fist
jb
es
cmp
push
dec
popa
sub
arpl
ss
outs
cmps
(bad)
stc
(bad)
push
sub
imul
bound
sub
fsub
pop
bound
rcr
pop
jne
rcr
push
out
push
iret
sbb
(bad)
(bad)
(bad)
(bad)
clc
push
pop
setp
pop
dec
fnstcw
or
or
aas
mov
in
loope
movs
repz
push
sbb
and
leave
mov
sub
mov
(bad)
(bad)
call
mov
cwde
and
hlt
or
(bad)
fsub
cli
pop
das
mov
mov
hlt
jmp
mov
sbb
jl
test
loopne
movs
mov
(bad)
out
add
pushf
fimul
cmp
clc
nop
sub
or
sub
ja
(bad)
cld
fsub
dec
mov
call
push
inc
(bad)
(bad)
(bad)
jmp
int
pop
and
push
mov
std
ins
retf
je
iret
dec
cmp
pop
or
mov
mov
enter
jecxz
xchg
loopne
movs
and
adc
outs
inc
sbb
pop
(bad)
fidivr
(bad)
stos
mov
test
mov
dec
mov
lods
mov
call
and
inc
(bad)
(bad)
(bad)
(bad)
fidivr
pop
in
mov
clc
ficom
pop
mov
mov
xchg
test
je
jmp
stc
mov
add
(bad)
(bad)
fldcw
cmp
adc
cs
dec
add
add
add
or
idiv
stos
cmp
(bad)
jmp
es
pop
or
cmp
mov
ret
or
sbb
or
in
fstp
lock
loopne
sub
test
popf
daa
(bad)
jg
icebp
aaa
lods
adc
jbe
cmps
sar
dec
ret
cmp
(bad)
(bad)
dec
mov
xchg
sub
mov
sar
test
adc
cmp
sbb
push
jno
pop
test
dec
inc
movs
dec
and
scas
call
add
call
mov
call
or
movzx
push
jae
jp
dec
imul
sub
sub
(bad)
(bad)
jmp
clc
cmp
sub
out
mov
mov
sahf
fcmovbe
jecxz
xchg
test
(bad)
(bad)
(bad)
(bad)
cmp
enter
sbb
ficomp
call
dec
in
fisttp
mov
xor
ret
aam
and
sbb
push
or
clc
aad
fst
or
icebp
dec
out
fistp
stos
fisubr
cld
(bad)
(bad)
(bad)
call
cmps
cmp
cwde
xor
pop
mov
dec
rol
das
retf
icebp
fs
mov
fdivr
in
test
mov
xchg
inc
nop
mov
aas
pop
lock
add
repz
retf
inc
jge
std
(bad)
mov
pop
pop
ins
daa
adc
out
pop
jnp
jge
sbb
(bad)
(bad)
lods
sbb
jmp
mov
inc
das
out
fbld
and
pop
jg
dec
bound
shl
adc
scas
jb
mov
(bad)
(bad)
push
mov
sbb
es
push
mov
push
jmp
icebp
(bad)
(bad)
call
retf
das
test
leave
mov
rcr
ror
sub
push
add
(bad)
fisttp
test
imul
(bad)
(bad)
jmp
jecxz
scas
aas
sbb
fisubr
pop
fcomi
sub
cld
mov
or
call
(bad)
fwait
sub
(bad)
in
(bad)
cli
and
mov
jp
addr16
test
cmp
fwait
loope
dec
xor
retf
jecxz
inc
out
mov
sbb
fcmovu
das
loopne
or
inc
push
call
ret
scas
push
ja
clc
mov
fstp
xchg
movs
fldcw
in
es
dec
cmp
popa
ror
rcl
dec
leave
out
scas
leave
add
push
sar
(bad)
jg
rcl
stos
and
(bad)
jmp
daa
pushf
rol
pop
mov
mov
out
xchg
test
movs
or
push
(bad)
cld
test
add
clc
retf
gs
xchg
clc
(bad)
jmp
dec
loope
loop
dec
xchg
pusha
out
sub
inc
mov
(bad)
(bad)
mov
adc
retf
inc
in
push
jl
sbb
pop
aad
pop
dec
adc
dec
cmps
or
pop
into
jg
and
call
sub
test
popa
xchg
sub
(bad)
fcomip
stos
(bad)
imul
dec
or
test
into
psadbw
call
pop
ins
sub
retf
out
pop
stc
movs
jp
cmp
test
clc
or
(bad)
(bad)
fcmovne
pop
popf
push
jmp
mov
push
xor
shl
mov
jp
push
and
repnz
int3
mov
movs
(bad)
pop
xor
pop
aaa
sbb
js
add
push
xchg
xchg
mov
pop
es
gs
(bad)
clc
into
test
pop
push
xlat
imul
out
clc
(bad)
jg
fidiv
pusha
mov
and
jmp
mov
jl
sub
sub
dec
clc
jle
mov
int3
outs
inc
cli
jmp
pop
inc
cmp
dec
test
(bad)
(bad)
dec
jmp
mov
jne
dec
push
out
fstp
in
ins
and
std
(bad)
jmp
or
adc
out
js
fcom
and
jmp
repnz
mov
(bad)
(bad)
(bad)
call
loop
loop
mov
jnp
pop
mov
shl
lods
cld
fadd
mov
in
hlt
fisttp
pop
xchg
leave
jp
jg
test
cwde
xchg
jle
pop
mov
ss
(bad)
jmp
push
out
out
lds
mov
cmp
(bad)
mov
push
mov
push
int3
and
and
sbb
data16
(bad)
(bad)
jmp
sbb
dec
pop
push
mov
jae
mov
pop
clc
sbb
ja
add
fld
(bad)
(bad)
cmp
(bad)
mov
stos
loope
js
push
pop
xchg
pop
pop
(bad)
(bad)
(bad)
dec
fcomip
stos
fwait
jns
fiadd
mov
pop
cld
aad
arpl
pop
sar
fneni(8087
es
pop
enter
movs
mov
push
cs
outs
leave
cli
mov
push
fcmovne
add
sbb
mov
scas
mov
sbb
stos
mov
(bad)
(bad)
jg
add
leave
cdq
popf
or
mov
std
jmp
sti
daa
dec
(bad)
(bad)
fisttp
mov
rcr
ins
sub
xchg
out
jne
mov
(bad)
fcomip
sbb
dec
pop
pop
push
stos
jmp
fsubr
(bad)
popf
xor
(bad)
pop
cmp
mov
into
cdq
dec
daa
sub
pop
sub
mov
call
xor
or
xchg
ficomp
adc
dec
adc
jle
out
pop
ins
add
xchg
in
mov
(bad)
fistp
pop
inc
or
(bad)
das
les
xchg
pop
stos
push
sub
xchg
cmp
jmp
push
movs
mov
hlt
cmp
and
or
push
cdq
stos
inc
jns
sahf
jbe
sub
push
jl
addr16
push
call
jecxz
das
jmp
inc
mov
xchg
out
and
jg
mov
div
jmp
(bad)
call
(bad)
cmc
int
repz
lods
retf
dec
stos
popa
clc
or
xlat
pop
movs
push
or
and
lds
fiadd
sti
(bad)
out
adc
call
std
xchg
in
fimul
fld
in
std
push
dec
pusha
or
pop
retf
retf
ds
lds
scas
pop
sub
(bad)
fdiv
jmp
cmc
fistp
ja
test
call
(bad)
inc
mov
cmp
test
or
adc
pop
dec
(bad)
cmp
jp
fnstenv
mov
mov
(bad)
push
jecxz
mov
push
jmp
loop
and
cmp
mov
(bad)
lds
std
(bad)
fisttp
pop
ror
out
push
dec
scas
mov
xor
pop
imul
call
test
pusha
adc
test
sub
cli
(bad)
repz
sub
stos
jmp
push
(bad)
loop
(bad)
inc
mov
cmp
and
dec
(bad)
mov
(bad)
(bad)
(bad)
mov
iret
sbb
call
daa
mov
mov
(bad)
std
jge
cmp
das
fisubr
and
push
iret
lods
pop
fld
fxtract
mov
idiv
(bad)
(bad)
inc
pop
mov
or
(bad)
jmp
enter
test
mov
add
sar
inc
(bad)
call
test
adc
sub
js
sub
pop
and
pop
retf
addr16
inc
(bad)
pop
push
call
and
pusha
loopne
sub
retf
in
sub
imul
rcr
push
in
in
push
dec
das
push
push
inc
xlat
jae
(bad)
(bad)
fild
sub
push
pop
sub
push
cmps
fisttp
clc
in
dec
push
adc
(bad)
jmp
icebp
cmp
jns
movs
popa
aam
or
aaa
ret
loop
xchg
xchg
jg
idiv
push
jl
(bad)
fisubr
mov
mov
pop
pop
fistp
jmp
(bad)
mov
test
test
mov
pop
jl
inc
dec
repnz
call
hlt
mov
enter
scas
sub
jns
add
dec
or
test
repz
addr16
pop
clc
jmp
(bad)
push
(bad)
(bad)
xlat
dec
test
scas
jp
fdiv
cmp
les
xor
std
rcr
ret
jno
cmp
add
(bad)
call
ins
mov
fldcw
cs
(bad)
jmp
pop
jg
call
das
mov
ja
cmp
repz
dec
aaa
cld
mov
mov
xchg
pop
fdivrp
(bad)
call
rcr
mov
cwde
xchg
stc
mov
sbb
or
neg
and
scas
(bad)
mov
mov
xadd
fcompp
mov
push
mov
(bad)
(bad)
jmp
or
mov
pusha
js
inc
cmps
clc
mov
mov
pop
fbstp
sub
aad
arpl
jl
xchg
call
dec
(bad)
jmp
xchg
or
xor
mov
jmp
call
and
call
mov
pop
pop
push
pop
cli
rcr
mov
stc
(bad)
leave
das
fnsave
idiv
pop
hlt
jmp
xor
test
into
cmp
or
push
mov
call
loopne
or
outs
xor
mov
enter
xor
cli
and
test
pop
in
cmp
sar
(bad)
(bad)
out
sub
pop
xor
repnz
stos
sub
iret
add
into
mov
(bad)
sub
test
mov
jo
(bad)
mov
mov
es
push
(bad)
(bad)
call
cmp
pop
push
rcr
icebp
pop
xor
sbb
mov
movs
popf
pop
pop
jo
test
pop
sub
stos
ins
(bad)
daa
icebp
push
push
je
bound
sbb
xlat
sub
and
retf
mov
fdivr
(bad)
jg
inc
add
ins
fadd
or
mov
adc
xchg
sbb
push
imul
cmp
loopne
ficomp
stc
bound
movs
mov
(bad)
mov
mov
adc
icebp
fnstenv
jmp
xchg
rcr
cmp
adc
std
fcomp
cli
(bad)
(bad)
call
sbb
cmp
jmp
jno
je
fisubr
lock
pop
(bad)
jmp
xchg
fcom
mov
cmp
shr
pop
rcr
call
scas
cmc
or
rcr
adc
jl
sub
(bad)
dec
and
fcom
lock
xlat
fdivr
sar
(bad)
call
hlt
(bad)
add
mov
jl
mov
pop
mov
fisttp
jbe
neg
pop
mov
mov
jo
je
(bad)
(bad)
dec
xchg
popf
fldcw
pop
lea
jecxz
pop
fmul
adc
repnz
cmp
mov
(bad)
(bad)
dec
jp
pushf
xor
ja
retf
push
ffreep
movs
or
popf
xchg
loop
(bad)
(bad)
(bad)
cli
lahf
add
daa
lods
out
mov
mov
dec
adc
(bad)
sub
fstp
retf
imul
stos
daa
mov
fld1
cmc
clc
into
mov
fistp
test
std
sub
mov
es
cmp
add
jns
icebp
pop
sub
pop
mov
(bad)
jg
(bad)
fmul
mov
ror
test
test
or
jecxz
call
lock
pop
sti
fucomi
jae
mov
lock
call
aad
mov
int3
mov
cmp
pushf
fcomp
push
dec
sub
js
dec
mov
lahf
inc
out
mov
(bad)
std
mov
jge
dec
pop
mov
push
aad
(bad)
cld
and
retf
add
inc
(bad)
(bad)
mov
inc
fcomi
push
or
sub
push
fsub
push
dec
pop
std
rcr
xchg
out
mov
(bad)
jl
je
mov
mov
push
stos
les
ins
ffree
lock
popf
and
stos
sbb
retf
ins
xlat
pop
lds
mov
inc
punpcklbw
frstor
(bad)
(bad)
jg
fisttp
es
jg
cmp
fimul
pop
mov
push
jl
or
fst
sbb
push
add
lock
xchg
pop
xchg
jmp
cli
push
shr
fcomp
fisub
rcr
(bad)
cmp
jmp
cmp
(bad)
(bad)
push
jnp
pop
push
mov
and
sahf
or
push
jmp
mov
pushf
pop
dec
pop
mov
push
(bad)
jg
dec
pop
data16
das
lahf
fmul
(bad)
cld
js
or
leave
aaa
adc
(bad)
(bad)
(bad)
call
pop
mov
push
cli
add
xchg
shl
js
cmps
or
cmp
or
push
(bad)
push
in
movs
push
jmp
pop
sub
cmp
fxch
pop
xor
add
jg
sub
(bad)
sub
push
sbb
jmp
dec
fisttp
pop
inc
mov
pop
xlat
(bad)
jmp
pop
or
daa
mov
pop
push
pop
movs
cli
(bad)
jg
jg
pop
sbb
nop
mov
sar
sti
pop
nop
mov
push
and
(bad)
inc
popf
cmp
ret
jne
jl
cmp
push
shl
fmul
mov
fsubr
or
lock
mov
mov
jl
mov
xchg
daa
(bad)
push
pop
or
or
jmp
or
jle
fcom
mov
push
cld
dec
jl
je
ret
dec
pop
or
in
cmp
fwait
dec
fsub
sbb
fdivr
inc
jg
(bad)
stos
push
je
mov
div
fcmovbe
(bad)
inc
sbb
cdq
(bad)
dec
shl
xlat
fstp
out
xchg
xor
pop
inc
(bad)
js
daa
pop
cmc
fst
mov
jg
pop
aad
jecxz
sar
and
mov
pop
dec
adc
daa
dec
xor
or
jge
mov
inc
or
push
enter
mov
fidivr
dec
mov
repnz
fmul
imul
pop
mov
outs
ficom
cmp
scas
lock
push
or
cli
das
out
inc
mov
mov
or
aaa
pop
pop
aad
jo
enter
mov
jmp
lods
ds
push
mov
addr16
pop
pop
mov
jg
mov
frstor
jmp
(bad)
mov
ror
pop
leave
fcomp
push
dec
push
pushf
mov
das
sbb
cmp
fs
mov
call
inc
pop
jo
inc
pop
fst
mov
pop
stos
push
mov
sub
or
mov
jecxz
popf
sbb
fisub
push
cmp
mov
mov
loope
fadd
pop
cli
xchg
mov
xor
mov
inc
push
in
(bad)
jmp
sbb
(bad)
(bad)
(bad)
(bad)
fadd
(bad)
cwde
cmp
ret
xchg
test
arpl
cmp
xchg
stc
add
test
mov
enter
push
f2xm1
mov
in
cmp
fst
cs
cld
mov
imul
int
pop
adc
pop
(bad)
(bad)
(bad)
(bad)
mov
push
lock
outs
test
fsubr
test
jmp
cmps
mov
add
call
aam
mov
lods
stos
sub
pop
and
in
and
sub
mov
mov
(bad)
jg
or
fisttp
cwde
fcomp
das
jmp
mov
call
aad
mov
pop
or
movs
call
dec
loope
dec
out
cs
aaa
int
mov
mov
(bad)
pop
inc
(bad)
sub
clc
out
(bad)
mov
mov
(bad)
(bad)
(bad)
(bad)
ds
into
lods
je
rcr
jnp
mov
xor
ret
sub
mov
sub
cdq
jmp
dec
push
sbb
mov
xor
push
mov
fisttp
loopne
mov
call
jmp
cs
std
mov
test
popa
loope
stos
pusha
icebp
(bad)
(bad)
call
cld
or
stos
int3
lds
sub
ds
pop
cmc
(bad)
cmp
and
int3
dec
outs
aas
fistp
pop
and
or
(bad)
fcomip
jp
jns
call
fcom
jmp
movs
push
shr
cwde
fld
and
lock
mov
mov
cmp
mov
or
mov
(bad)
push
cdq
fdivrp
stos
jecxz
std
pop
sbb
pop
cld
ror
or
pop
idiv
out
mov
sar
pinsrw
mov
pop
pop
sbb
out
xor
dec
jle
mov
sbb
popf
fxch
add
stos
push
pop
clc
xchg
icebp
mov
int
ret
inc
sbb
pop
cmp
(bad)
out
mov
sbb
ins
lock
adc
push
stos
mov
daa
cmp
out
clc
(bad)
inc
movs
rol
adc
daa
xchg
pop
fs
ds
cmps
ror
pop
(bad)
jmp
sub
retf
dec
scas
stc
jl
jbe
(bad)
fistp
sbb
pop
mov
mov
push
pop
sbb
call
or
shl
fnstsw
mov
cmp
mov
push
aam
leave
and
mov
push
in
pop
pop
and
pop
adc
out
rol
loop
sub
fwait
jmp
into
pop
aaa
pop
ins
cld
xchg
bound
iret
sbb
mov
pop
push
std
xchg
lds
pop
fcmovnb
mov
(bad)
jmp
sbb
fcmovbe
pop
pop
les
je
neg
sti
pop
xchg
fs
add
test
mov
pop
jg
cmp
add
pop
into
pop
adc
cmp
inc
cli
(bad)
jg
loopne
mov
ror
lods
mov
mov
xchg
mov
in
jmp
fdivr
jae
mov
test
dec
iret
inc
lods
xor
push
mov
push
std
push
out
nop
call
mov
movs
pop
mov
push
fild
inc
mov
and
add
ficomp
jb
ficom
jge
lods
stc
fs
dec
ret
pop
fcomp
jg
out
and
push
push
cmp
lahf
fsub
out
loop
pop
fistp
push
dec
pop
lods
sbb
cli
shr
mov
popf
call
mov
movs
retf
pop
and
retf
lods
and
jl
adc
xor
pop
adc
jmp
(bad)
mov
fistp
pop
dec
out
popa
loop
retf
imul
push
mov
mov
inc
(bad)
(bad)
(bad)
(bad)
cmp
scas
cmp
je
pop
fnstenv
or
loop
cmp
inc
push
call
(bad)
(bad)
(bad)
js
jecxz
sahf
es
mov
addr16
jl
(bad)
int
inc
mov
pop
jl
out
outs
mov
daa
pop
(bad)
(bad)
(bad)
mov
mov
aad
xor
cmp
mov
out
ror
mov
call
mov
outs
ins
jp
test
adc
clc
jmp
cli
ret
add
lock
mov
dec
fstp
pop
and
dec
cmps
fwait
loop
jg
mov
(bad)
(bad)
(bad)
fsubr
call
stos
into
cmp
adc
pop
popf
fdivr
loop
aad
repnz
scas
mov
jmp
scas
jno
imul
mov
mov
cmp
call
cmp
in
sbb
mov
mov
(bad)
cmp
clc
jmp
pop
leave
ins
xchg
jmp
mov
sub
xchg
(bad)
jg
or
jne
int
fsubr
fdiv
lahf
pop
or
icebp
cmps
(bad)
(bad)
(bad)
call
cld
je
xor
fld
shl
sbb
push
pop
gs
(bad)
jmp
cld
ret
cs
pop
pop
or
pusha
(bad)
sub
mov
add
push
out
fsub
xor
(bad)
(bad)
cld
sub
push
pop
jne
pop
mov
xor
clc
movs
(bad)
enter
movs
out
pop
sbb
add
jb
(bad)
shr
or
jmp
xchg
imul
push
push
cmp
fdiv
call
push
repnz
call
mov
ficom
fidiv
enter
pushf
sti
repnz
(bad)
(bad)
mov
or
sar
pop
dec
shr
jmp
fld
(bad)
(bad)
(bad)
fsubr
lock
or
jl
ret
arpl
movs
int
mov
(bad)
das
mov
loop
mov
or
jmp
cmp
je
and
ficomp
imul
pop
or
mov
(bad)
out
clc
pop
into
test
xchg
mov
dec
mov
(bad)
mov
and
pusha
mov
pusha
fsub
(bad)
push
or
scas
cmp
fisubr
jecxz
fsubr
sar
(bad)
mov
mov
add
cmp
stos
mov
jg
test
inc
pop
pushf
mov
xchg
movs
outs
ret
xchg
cwde
sub
inc
add
fld
(bad)
fisttp
(bad)
in
and
mov
dec
inc
out
xchg
hlt
sub
(bad)
pop
add
fbstp
(bad)
mov
and
mov
dec
mov
div
inc
adc
das
pop
call
and
and
jmp
cld
pop
out
cli
mov
sbb
jmp
sar
and
xchg
retf
pop
pop
xchg
jo
and
fisttp
repnz
jg
add
cmp
xchg
mov
pop
cmps
jle
sar
enter
pop
enter
(bad)
mov
sub
stc
pop
shr
sbb
and
std
xchg
sar
jmp
js
sbb
push
lahf
push
pop
mov
repz
cmp
inc
ds
xor
push
push
lock
sti
lea
adc
push
sahf
adc
(bad)
cmp
mov
xor
outs
xchg
sbb
mov
push
pusha
jp
pop
ficom
jnp
cmps
pop
cdq
sbb
push
(bad)
cmp
adc
cmp
(bad)
out
xchg
adc
pop
call
jno
sahf
lahf
leave
add
mov
cmp
mov
jmp
fcomp
sbb
lea
jp
cli
cmp
fistp
leave
sar
pushf
je
sub
fmul
(bad)
js
mov
mov
(bad)
(bad)
(bad)
fld
push
jb
mov
int3
sbb
pop
adc
jp
inc
and
pop
stos
(bad)
(bad)
(bad)
call
mov
cmps
mov
xor
and
cmp
icebp
out
pop
push
push
adc
adc
rcl
mov
pop
sub
test
fs
loopne
(bad)
(bad)
dec
ins
pop
pushf
aam
js
jg
mov
or
pop
pop
mov
stc
mov
lods
pop
pop
pop
mov
(bad)
(bad)
push
shl
mov
pop
pop
jl
mov
xchg
fbstp
stc
push
mov
sub
in
xchg
jmp
mov
mov
nop
mov
outs
push
cli
sbb
scas
outs
xchg
bound
aam
or
call
mov
jle
fist
movs
xchg
sub
(bad)
(bad)
(bad)
dec
mov
retf
fisubr
stos
outs
rcr
inc
cmp
jg
dec
(bad)
(bad)
(bad)
dec
std
fdivr
pop
or
fld
sub
push
adc
pop
(bad)
(bad)
(bad)
(bad)
fcmovnu
cmp
jno
retf
or
(bad)
jp
xor
lock
cmp
cld
pop
push
mul
pop
aas
xor
arpl
xor
push
push
mov
mov
lods
jl
mov
and
cmp
rcr
(bad)
(bad)
(bad)
jg
fild
mov
fidivr
fwait
stos
scas
sahf
cmp
mov
leave
inc
(bad)
and
xor
(bad)
call
(bad)
mov
popf
mov
inc
push
or
push
in
clc
(bad)
(bad)
call
call
mov
or
outs
lods
mov
xchg
cmp
(bad)
(bad)
call
out
pop
in
jmp
dec
jge
xor
pushf
add
fs
out
enter
pop
sbb
add
stos
repz
loopne
inc
push
fisub
call
or
sbb
dec
popf
mov
mov
in
and
or
mov
loope
jmp
or
jmp
inc
data16
adc
fdiv
call
dec
pop
push
inc
fs
push
stos
and
cmp
rol
jle
push
push
sar
cmp
stos
stos
cmp
popf
add
add
mov
sbb
jmp
pop
daa
pop
sbb
fnstenv
(bad)
call
cmp
sbb
push
(bad)
mov
sub
pop
adc
add
mov
and
cmp
mov
mov
mov
jae
xchg
jmp
jmp
call
xor
and
mov
fiadd
(bad)
(bad)
push
jle
fadd
stos
mov
cwde
test
pop
mov
mov
or
inc
daa
das
lods
out
or
ror
stc
sub
fimul
out
pop
inc
inc
out
sbb
les
mov
sbb
scas
mov
sub
fsubr
imul
retf
mov
dec
and
lahf
(bad)
(bad)
(bad)
dec
mov
add
(bad)
cmp
popf
popf
mov
test
jb
add
jmp
(bad)
mov
fisub
sub
jmp
sub
(bad)
lods
cli
sar
or
out
clc
pop
imul
fnsave
test
into
pop
sub
jg
cmp
(bad)
in
cmp
adc
(bad)
sbb
xchg
push
ins
sub
pop
adc
cld
ja
outs
cli
or
sbb
sbb
mov
cmp
mov
scas
(bad)
jg
test
pushf
icebp
shl
popf
push
xor
(bad)
pop
dec
cld
xchg
xchg
dec
lock
(bad)
js
or
pop
sbb
jb
xor
dec
dec
xor
inc
(bad)
cmps
adc
(bad)
(bad)
(bad)
jmp
lods
xor
fwait
mov
mov
pop
xor
shl
pop
es
aam
mov
std
aad
(bad)
(bad)
call
pop
ret
xchg
mov
cmp
(bad)
iret
sbb
cmps
(bad)
call
pop
or
pop
pop
pcmpgtb
mov
mov
sbb
js
loope
fistp
shl
lods
cmp
rcl
fcomp
ror
(bad)
cmp
push
cmps
stos
jmp
shr
mov
adc
call
(bad)
in
popa
mov
and
(bad)
dec
add
leave
push
and
jmp
fdivr
(bad)
(bad)
fistp
push
sbb
mov
loope
jo
pop
adc
fdiv
(bad)
jmp
pop
cmp
hlt
mov
(bad)
fdivr
mov
(bad)
dec
mov
dec
push
xor
jmp
push
call
rcl
rcr
xor
jmp
sub
out
(bad)
cmp
js
jmp
mov
ror
rcl
sbb
aam
fst
(bad)
fmul
cdq
pop
(bad)
(bad)
dec
test
mov
mov
mov
mov
rdmsr
mov
rcr
clc
(bad)
(bad)
(bad)
out
pop
dec
jp
pop
xchg
mov
das
sbb
js
sbb
shl
and
sar
push
and
aad
sbb
and
(bad)
nop
pop
xchg
cmps
(bad)
(bad)
(bad)
call
jmp
push
adc
sub
pop
dec
out
lods
fwait
pop
mov
(bad)
(bad)
mov
adc
lahf
fdiv
cmp
mov
xor
ds
add
lock
scas
jp
and
jmp
cmp
mov
std
enter
je
rol
cli
(bad)
mov
bound
rcl
loopne
out
rcl
mov
cli
fs
or
(bad)
(bad)
jmp
sub
jae
neg
aas
mov
(bad)
shl
loope
xchg
aad
(bad)
(bad)
(bad)
(bad)
jmp
rcpps
std
sub
or
repnz
jmp
mov
xchg
jae
xor
mov
sub
adc
push
std
mov
loope
pop
mov
rol
iret
nop
stc
rcl
(bad)
jg
sub
or
pop
push
ret
cmps
pop
pushf
(bad)
ficomp
push
add
cmps
out
imul
pop
push
cmp
and
push
dec
clc
lahf
inc
call
and
mov
sub
mov
dec
sbb
fdivrp
(bad)
(bad)
dec
pop
dec
mov
add
push
mov
pop
fidiv
retf
dec
addr16
xor
sub
sub
hlt
dec
pop
inc
out
dec
enter
(bad)
(bad)
jg
inc
daa
out
(bad)
retf
add
adc
call
and
sahf
or
jp
xchg
xlat
inc
ins
mov
jl
sbb
xor
jg
fs
mov
movs
cmps
inc
(bad)
jmp
in
dec
div
sub
cmp
jns
mov
stos
sub
push
int3
cmp
jp
dec
cmp
pop
cmp
sub
dec
dec
daa
push
pop
(bad)
mov
add
xchg
pop
add
push
jo
mov
lds
adc
sahf
(bad)
(bad)
(bad)
mov
aas
pop
lods
loopne
call
fbld
inc
mov
mov
pop
push
mov
cmps
add
and
xchg
inc
cld
jmp
dec
mov
shl
sar
adc
push
add
ror
out
sbb
and
ret
mov
cmp
cli
(bad)
dec
fdivr
retf
mov
jmp
mov
xchg
(bad)
jno
(bad)
cli
ins
mov
cmp
(bad)
and
sbb
push
sub
mov
xor
(bad)
call
push
mov
jmp
sahf
stos
or
add
push
jmp
out
sahf
dec
dec
fwait
inc
mov
clc
(bad)
(bad)
fisttp
xrelease
cmps
dec
call
xor
call
(bad)
(bad)
(bad)
dec
xor
out
pushf
jns
das
rcr
das
xchg
push
mov
dec
sbb
pop
into
dec
push
add
shl
fs
(bad)
push
sahf
dec
sar
mov
sbb
es
call
ficom
mov
aad
sub
hlt
push
sub
retf
adc
(bad)
call
dec
cmp
lods
icebp
xchg
div
jb
fistp
stos
rol
adc
out
aas
pop
push
fisub
xchg
(bad)
(bad)
push
(bad)
xor
dec
ss
movs
jmp
retf
enter
sar
fistp
scas
dec
fsubrp
xchg
call
sbb
scas
retf
es
mov
test
dec
mov
push
psubb
cld
(bad)
(bad)
out
shr
sbb
push
add
cmp
fnstenv
jbe
push
mov
mov
mov
inc
movs
mov
or
mov
loope
cmps
int3
inc
push
sbb
ja
bound
mov
(bad)
(bad)
jmp
rol
pop
and
sub
test
fnstcw
leave
mov
mov
cmp
scas
test
inc
push
push
push
into
dec
jle
test
sub
mov
sar
(bad)
call
call
mov
pop
test
dec
jne
sahf
test
test
mov
(bad)
jg
outs
out
stos
(bad)
dec
xor
imul
loop
enter
jbe
sub
mov
pop
pushf
jo
(bad)
dec
push
mov
xor
(bad)
adc
sub
mov
ror
or
ret
es
jns
inc
push
arpl
mov
pop
mov
mov
fcmovne
call
movs
outs
pop
cli
mov
fisub
jb
pop
ret
(bad)
(bad)
inc
lods
shl
mov
sub
dec
(bad)
(bad)
xchg
(bad)
push
xor
(bad)
(bad)
dec
mov
mov
sbb
or
out
js
jge
or
mov
rol
fbld
inc
adc
lods
mov
fnstcw
clc
test
std
mov
mov
dec
dec
lahf
cld
xor
dec
aaa
clc
fisttp
inc
xchg
scas
fstp
pop
sar
shr
push
call
(bad)
mov
pop
mov
(bad)
(bad)
(bad)
aas
sub
std
sar
ins
movs
dec
jl
sbb
test
xchg
rol
mov
call
cmp
sub
mov
jo
mov
xor
mov
jmp
pop
cmps
jl
in
pop
ror
mov
cli
jmp
daa
sbb
ss
xchg
scas
cmps
mov
dec
adc
dec
ret
push
ins
loopne
mov
jb
inc
ficomp
add
xor
loop
ret
pusha
dec
movs
(bad)
pop
cmc
jmp
es
fadd
(bad)
pop
jo
and
sub
(bad)
cdq
cdq
pushf
mov
call
add
or
sub
call
pop
rcl
stos
dec
cdq
stos
add
stos
(bad)
fcomip
call
ror
fild
push
pop
call
dec
dec
pop
(bad)
(bad)
dec
fisub
adc
icebp
and
xlat
into
sub
(bad)
mov
mov
dec
js
fisttp
call
ffree
mov
(bad)
or
popf
and
popf
pop
mov
push
dec
rcr
push
pop
cli
mov
lock
mov
mov
fcomip
jmp
ins
repz
cmp
rcr
(bad)
push
je
xchg
pop
fdivr
mov
mov
loopne
pop
or
xchg
xchg
stos
(bad)
lds
mov
es
push
push
daa
mov
adc
jbe
dec
and
sub
bound
retf
(bad)
jmp
xchg
lock
popa
fnstenv
stos
pop
cmp
and
call
mov
(bad)
jmp
stos
fild
int
lds
jo
es
dec
(bad)
pop
xchg
shl
iret
mov
es
test
les
out
and
jns
movsx
sbb
outs
rcl
call
pop
push
stc
pop
movs
pop
add
into
test
xor
ins
fmul
lock
xchg
out
fst
sbb
cli
fldenv
fild
pop
cli
enter
es
mov
or
dec
call
push
or
push
clc
mov
aam
movs
ss
push
loope
mov
jl
(bad)
jg
enter
or
sub
test
cmp
sub
icebp
sar
xchg
dec
add
sbb
xor
(bad)
(bad)
jg
cli
xor
leave
loop
or
je
push
jle
xor
outs
(bad)
pop
mov
mov
clc
mov
mov
mov
sar
data16
push
mov
out
popa
sahf
push
cmps
cmp
and
cmp
(bad)
jmp
xlat
sbb
in
scas
fcmovbe
pop
sub
pop
jecxz
lods
ins
aad
mov
pop
push
adc
jmp
clc
loope
fcomp
int
cmp
xor
cmp
ficomp
(bad)
mov
nop
(bad)
mov
jb
int3
push
add
pop
arpl
or
call
retfw
addr16
mov
sbb
jnp
push
cmp
jmp
pop
inc
movs
pop
add
pop
push
lods
dec
mov
xchg
sub
and
dec
adc
(bad)
(bad)
call
ficom
inc
lods
fsubr
loop
adc
cmp
arpl
fwait
mov
bound
push
cmp
(bad)
dec
call
dec
xlat
jle
imul
inc
adc
ja
inc
mov
mov
sbb
mov
aad
test
push
repz
pop
cli
push
mov
mov
inc
(bad)
lahf
ss
and
jmp
fcomp
mov
mov
imul
jmp
pop
icebp
mov
stc
rol
lods
sbb
scas
das
ror
xlat
mov
fcmovb
call
ja
dec
imul
inc
test
mov
cs
mov
call
mov
ret
and
not
cld
(bad)
call
ror
mov
retf
inc
pusha
cmp
pop
cs
mov
and
stos
and
sub
dec
pop
push
imul
push
lods
ret
add
cmps
push
sub
(bad)
retf
mov
div
cmps
dec
and
cmp
pop
popf
or
(bad)
(bad)
(bad)
jmp
add
push
loope
dec
loop
fstp
arpl
pop
push
cmp
fist
fistp
(bad)
sbb
mov
(bad)
(bad)
(bad)
call
jb
jb
push
push
lahf
js
inc
inc
lahf
pop
pop
sbb
sub
fistp
xor
inc
or
mov
std
push
add
mov
call
(bad)
mov
ret
pop
fsub
sub
mov
int
icebp
mov
cmp
pop
sub
xor
mov
cmps
jo
xchg
jecxz
ret
out
clc
push
ficomp
cmps
mov
stos
fxch
call
lock
jp
call
pop
push
mov
cmp
shl
scas
movs
cmps
jmp
ins
ds
pop
and
mov
cmp
or
(bad)
(bad)
fsubr
sbb
fwait
stos
mov
enter
sub
fmul
call
jmp
lds
test
daa
push
(bad)
(bad)
(bad)
mov
f2xm1
dec
jmp
test
lahf
loopne
and
push
pop
mov
cld
pop
lock
ret
popf
test
push
cli
call
xor
loop
jp
sbb
jmp
pop
jns
(bad)
retf
lods
inc
cld
das
clc
pop
cs
daa
dec
pushf
(bad)
sahf
sub
clc
jg
in
fnstcw
pop
paddd
sti
ror
push
or
pop
mov
clc
pop
std
add
and
lods
clc
(bad)
pop
mov
lea
out
pop
(bad)
cmp
cli
cs
neg
sbb
(bad)
(bad)
jmp
fs
inc
add
test
inc
lock
daa
xchg
cmp
outs
and
(bad)
cmp
mov
mov
xchg
mov
cld
(bad)
call
jl
jmp
jb
xchg
push
sbb
xor
popa
je
jnp
sbb
(bad)
(bad)
cmp
pop
fisubr
fwait
push
xchg
and
lahf
mov
mov
sbb
push
fnstenv
sbb
pop
xchg
mov
popf
fsubr
jo
sbb
call
push
and
sub
xor
sub
test
xchg
(bad)
pop
sahf
xlat
fdivrp
(bad)
call
mov
(bad)
je
cld
sbb
mov
mov
int
or
call
cld
mov
fsub
fbld
push
ret
add
xchg
shr
(bad)
(bad)
(bad)
call
fadd
jg
es
dec
mov
(bad)
pop
popf
rcr
mov
mov
add
(bad)
(bad)
(bad)
call
jl
push
pop
sar
jno
dec
pop
sbb
stos
call
mov
jl
xlat
aam
sbb
shr
data16
push
mov
jmp
push
mov
pop
fs
aad
jnp
mov
pusha
cmp
je
sbb
sub
dec
pop
clc
cld
jle
popf
sub
fild
fisttp
(bad)
(bad)
call
loope
icebp
jmp
das
idiv
fistp
and
mov
lods
xchg
out
pop
add
mov
fistp
and
outs
push
xor
sar
and
inc
xor
mov
clc
sbb
scas
nop
or
jmp
scas
mov
add
add
push
or
jo
mov
mov
call
repnz
jbe
push
cwde
stos
inc
mov
pop
adc
sub
and
int3
cs
(bad)
mov
fs
int
sbb
push
ins
call
mov
xchg
xchg
icebp
push
push
jle
cld
daa
mov
jp
stos
(bad)
jmp
add
ds
mov
pop
(bad)
mov
out
shl
stos
sbb
inc
call
fiadd
cmp
pop
ret
fimul
mov
pop
lods
retf
xchg
in
pushf
mov
sub
ss
call
inc
pop
cmp
sbb
stos
or
or
and
daa
adc
int
cmp
jmp
or
lods
ror
pop
mov
and
retf
push
loopne
stos
loopne
mov
push
dec
inc
cld
(bad)
call
mov
call
movs
xor
ins
imul
iret
adc
(bad)
dec
xchg
outs
push
retf
xor
movs
adc
mov
jo
dec
outs
ror
(bad)
(bad)
(bad)
(bad)
jmp
ficomp
call
in
arpl
sub
lds
mov
(bad)
push
cmp
ds
pop
lods
mov
pop
add
imul
ret
arpl
fdivr
jecxz
test
mov
retf
and
fld
inc
mov
push
stos
dec
je
xchg
dec
cld
push
aam
mov
in
ror
jg
push
inc
cs
sub
loopne
jmp
dec
std
bound
(bad)
(bad)
call
icebp
std
push
sub
sub
out
fs
pop
cmps
jmp
call
sub
sbb
dec
stos
imul
xchg
(bad)
(bad)
(bad)
sub
popa
std
arpl
pop
sub
and
inc
sbb
(bad)
(bad)
push
fst
jae
call
ror
daa
(bad)
iret
dec
adc
dec
cmps
mov
or
mov
stos
into
nop
push
pop
ret
or
(bad)
(bad)
jg
(bad)
mov
inc
fidiv
mov
fiadd
(bad)
(bad)
jg
mov
lock
sub
push
pop
lds
in
mov
rcr
xchg
mov
rcl
jle
cwde
shr
xchg
ror
aad
ins
jg
dec
sbb
and
mov
sub
xor
sub
ficom
shl
jg
xor
aam
fwait
scas
mov
jmp
rcr
test
pusha
jb
sub
push
out
(bad)
(bad)
(bad)
push
dec
cmps
lods
push
retf
cmps
out
inc
or
loopne
xchg
and
stos
fsubr
movs
jae
xor
push
jmp
xchg
sub
push
retf
adc
fst
(bad)
mov
pop
and
lds
xchg
mov
and
and
dec
retf
ins
shl
iret
in
pop
lock
or
fwait
mov
(bad)
(bad)
(bad)
fbld
and
sti
in
push
retf
inc
enter
pop
call
mov
xchg
cmc
(bad)
push
leave
jmp
sbb
mov
sub
dec
out
imul
ds
out
xchg
mov
pop
cli
and
(bad)
(bad)
inc
ins
jmp
push
push
retf
arpl
cli
out
fcomp
push
outs
cs
pop
into
xor
(bad)
call
inc
push
fistp
xor
mov
or
in
clc
bound
jbe
inc
aam
dec
cmps
mov
lods
sbb
sub
(bad)
in
pusha
dec
popa
call
jg
jecxz
scas
faddp
out
movs
fdivr
ins
fcomp
sub
je
(bad)
out
mov
shr
mov
push
cwde
(bad)
jmp
das
movs
mov
cli
ins
dec
fmul
push
dec
jp
mov
push
push
ret
jmp
retf
shl
adc
shl
enter
pusha
push
mov
dec
adc
jmp
mov
jmp
shr
sub
stos
sub
dec
cmp
push
pop
popf
or
cmp
sub
(bad)
(bad)
jmp
mov
push
shl
bound
dec
push
cwde
pop
stc
sub
icebp
sbb
imul
sub
icebp
or
adc
outs
push
aad
mov
sub
pop
mov
fidiv
js
mov
call
stos
push
push
call
scas
lock
fimul
shl
call
call
(bad)
sahf
hlt
and
leave
pop
(bad)
mov
das
dec
dec
clc
call
mov
lahf
push
test
and
push
(bad)
ds
jbe
icebp
int
dec
shl
sar
(bad)
call
bnd
mov
mov
sbb
mov
repnz
(bad)
(bad)
jmp
hlt
loopne
out
pop
jae
mov
repz
in
and
fsubr
cmp
test
sub
ror
pop
mov
pop
pusha
pop
fwait
sbb
sub
shl
fild
mov
into
ins
adc
adc
call
fistp
mov
jp
mov
mov
jo
mov
pop
or
(bad)
fild
std
stos
cmp
add
lods
ficom
(bad)
fstp
(bad)
push
cmc
dec
jb
in
push
pop
cmp
ror
mov
jmp
jb
pop
xchg
mov
cmp
push
pop
fs
push
icebp
nop
lock
inc
fcomp
pop
jle
or
cld
push
push
pop
mov
lea
rcr
pop
cmp
jnp
call
cmc
sbb
push
not
pop
pop
or
lods
adc
fidivr
js
test
mov
repz
fsubr
cli
cmp
(bad)
enter
stos
fwait
movs
aam
iret
sub
xlat
std
js
sbb
cmp
lods
lock
or
add
jmp
sbb
ror
mov
dec
(bad)
sar
push
fistp
(bad)
(bad)
jmp
stc
fcmovne
pop
push
ret
mov
jb
sbb
pop
mov
mov
retf
into
loopne
(bad)
(bad)
(bad)
sti
(bad)
pop
mov
mov
push
or
leave
out
clc
fldz
mov
mov
ja
push
std
outs
mov
scas
inc
loop
jmp
jmp
ret
inc
test
xchg
(bad)
mov
sbb
fld
dec
test
mov
shr
sub
pop
sbb
cmps
add
ret
pop
rol
(bad)
adc
sbb
sub
push
mov
jmp
mov
mov
add
call
sbb
mov
scas
jns
ds
test
(bad)
call
mov
loop
push
cs
mov
push
jle
(bad)
call
scas
leave
sti
pop
test
outs
jo
stc
fistp
rol
inc
enter
mov
jecxz
sub
inc
or
ret
mov
(bad)
(bad)
(bad)
jmp
push
ins
mov
jb
stc
jno
(bad)
fistp
das
or
xor
mov
add
jl
add
pop
scas
je
xchg
(bad)
jmp
jl
les
jne
lock
(bad)
mov
clc
add
je
jnp
xchg
fistp
(bad)
pop
daa
je
(bad)
repnz
push
call
pop
pop
ja
int
clc
cmp
jmp
inc
push
push
sbb
pop
mov
ror
fldlg2
rcr
mov
(bad)
mov
pop
icebp
mov
into
(bad)
fucomi
je
out
add
jmp
mov
jl
clc
(bad)
(bad)
sti
sbb
fnstcw
jo
(bad)
xchg
aam
mov
(bad)
or
icebp
(bad)
mov
dec
jp
sbb
mov
jno
mov
pop
or
das
mov
dec
es
xlat
pop
xchg
out
sub
adc
pop
retf
fs
hlt
scas
xor
in
pop
mov
lods
push
leave
fdivrp
(bad)
mov
lea
mov
outs
mov
push
aaa
pop
mov
clc
(bad)
(bad)
jmp
dec
mov
xchg
xchg
js
pushf
pop
cs
jge
cdq
fmul
cs
stos
or
bound
cmc
pop
or
dec
test
mov
loop
jae
add
xchg
mov
(bad)
(bad)
inc
xor
mov
cdq
pop
loope
push
push
cmp
fbstp
mov
mov
(bad)
inc
mov
cmc
mov
loop
xor
cmp
test
sar
(bad)
(bad)
jmp
nop
lods
iret
mov
sbb
pop
fcomi
loope
pusha
jp
fdiv
cmp
pop
(bad)
(bad)
(bad)
inc
jo
push
fisttp
aad
mov
push
(bad)
dec
imul
mov
xchg
pop
push
mov
jle
mov
je
nop
outs
test
popf
jo
jg
inc
std
xchg
lea
daa
(bad)
pop
and
imul
adc
xchg
xchg
adc
cmps
mov
jo
(bad)
int
jns
sahf
jo
fisttp
fmul
int
adc
jp
pop
rcl
scas
lods
ficomp
sub
scas
scas
clc
(bad)
popf
jg
or
sub
dec
out
jns
pusha
ret
sar
jmp
stos
pop
sbb
sub
pop
xor
jne
pusha
mov
push
call
ins
cld
pop
push
push
outs
mov
push
cwde
ins
leave
clc
js
(bad)
(bad)
(bad)
(bad)
in
push
pop
pushf
cmp
xchg
clts
aad
test
aas
sar
xchg
and
cmp
iret
stos
mov
fisubr
push
inc
cmps
xchg
cwde
jl
enter
call
(bad)
fmul
pop
(bad)
(bad)
mov
ins
fsub
ficom
popf
sbb
loop
cmp
lds
jo
shl
mov
imul
sbb
lds
add
mov
fcomp
dec
jmp
rcr
repnz
fimul
repz
jg
fld
sbb
mov
(bad)
hlt
out
dec
aas
adc
cmc
(bad)
fbstp
or
and
leave
pop
mov
mov
cmp
cmc
mov
stos
in
loopne
push
clc
call
dec
push
push
xchg
push
fstp
pop
sub
push
jnp
jmp
inc
mov
in
and
sti
loop
cmp
out
or
push
aam
retf
mov
push
adc
out
add
test
imul
(bad)
pop
mov
(bad)
rcr
dec
and
in
pop
push
inc
pop
jl
es
mov
cmps
stos
adc
loope
(bad)
(bad)
mov
loopne
arpl
mov
lahf
(bad)
iret
mov
js
push
enter
dec
ret
inc
gs
je
nop
mov
pop
mov
fild
fiadd
stos
dec
aaa
adc
stos
sar
jae
mov
push
lods
rol
les
mov
cli
(bad)
dec
(bad)
(bad)
stos
fucomp
mov
push
(bad)
js
outs
pop
pop
imul
jl
scas
cs
jb
call
fisttp
dec
adc
jmp
pop
and
aaa
mov
pop
js
imul
push
fisub
scas
(bad)
jg
inc
mov
shl
(bad)
sub
out
mov
fist
pop
and
retf
xchg
push
js
shr
xchg
push
add
(bad)
(bad)
(bad)
push
ins
push
js
scas
mov
mov
loope
ins
push
push
xor
loopne
and
mov
ffree
es
test
das
(bad)
(bad)
(bad)
mov
rcl
shr
mov
iret
rol
icebp
adc
jmp
fprem
pop
jae
and
mov
retf
call
pop
rcr
push
js
jmp
test
out
cli
(bad)
call
mov
fnstenv
mov
rcr
mov
fcom
adc
or
fsubr
dec
sub
mov
pop
call
mov
retf
mov
sbb
je
call
sbb
test
imul
dec
das
shl
mov
mov
mov
leave
aad
mov
leave
mov
pop
pop
sbb
cmps
(bad)
(bad)
(bad)
fisttp
retf
cdq
xlat
pop
jmp
movs
(bad)
jno
xchg
out
lea
push
push
rol
inc
daa
fst
aad
mov
xchg
mov
push
movs
mov
pop
(bad)
(bad)
jmp
pop
mov
inc
mov
mov
dec
cmp
dec
mov
pop
sti
loop
(bad)
call
mov
pop
fistp
mov
pop
xchg
and
mov
cmp
imul
mov
add
loop
pop
out
out
jle
retf
(bad)
call
das
daa
retf
repnz
push
lahf
sub
inc
call
add
jno
xor
push
(bad)
xchg
mov
fist
inc
jo
adc
pop
and
or
pop
jg
out
pusha
fcomp
fcomp
push
jp
cmp
jmp
std
popf
fdivr
jb
xor
or
je
ins
cmps
(bad)
(bad)
(bad)
inc
mov
adc
sar
fcom
das
sbb
push
nop
iret
(bad)
inc
jo
mov
cdq
pop
add
xchg
sub
in
or
xchg
(bad)
(bad)
(bad)
dec
sti
pop
daa
aas
sbb
cs
(bad)
mov
cmp
mov
pop
sar
sbb
inc
nop
xlat
mov
test
or
sahf
fld
jle
cmp
jo
hlt
adc
jne
mov
xor
out
pop
inc
push
adc
pop
xchg
icebp
jb
push
cld
adc
dec
je
in
mov
or
push
fnstenv
jmp
addr16
mov
mov
enter
outs
xor
sbb
mov
mov
popf
fstp
sbb
(bad)
pop
dec
jmp
dec
pop
rcr
in
add
ret
mov
repnz
dec
push
stos
into
sbb
or
movs
sahf
pop
test
dec
(bad)
jmp
out
xchg
cwde
push
fadd
test
inc
imul
ret
rcl
imul
outs
jmp
shl
dec
dec
loopne
inc
and
dec
in
cmps
test
inc
push
daa
jge
xchg
xlat
jns
call
outs
jo
sub
(bad)
(bad)
call
sub
das
cmps
cwde
sbb
mov
fs
rcl
test
clc
pop
cdq
mov
push
addr16
xchg
out
lods
sub
add
call
rcl
dec
adc
fnstcw
pop
loope
push
pushf
test
mov
sbb
(bad)
inc
push
(bad)
mov
sub
dec
(bad)
iret
clc
jae
adc
jge
push
mov
in
jbe
mov
pop
pop
lods
pop
mov
jmp
push
enter
dec
fldln2
mov
and
pop
iret
and
mov
push
push
fcos
(bad)
mov
pop
jl
fldpi
into
fs
jmp
arpl
rcr
jns
out
inc
mov
sub
(bad)
jmp
mov
or
mov
sti
mov
pop
sub
mov
(bad)
(bad)
mov
and
pop
rcr
sar
cli
and
sbb
pop
and
mov
jp
aaa
fwait
ret
sub
mov
cmp
out
je
int
push
mov
dec
mov
ja
js
cwde
push
mov
shl
sub
sub
scas
arpl
cli
aam
mov
sub
push
cli
bound
ffree
cmps
into
mov
inc
cwde
lods
fxtract
nop
cmps
sub
dec
pusha
push
sbb
jl
pop
daa
fdiv
jg
(bad)
call
push
pop
push
pusha
jg
pop
fwait
ret
lods
sbb
pop
sub
call
lock
lahf
cs
sbb
data16
fmul
fisubr
mov
mov
rcl
lods
xchg
pop
cli
push
sub
in
popf
fcomip
(bad)
call
pop
fwait
and
bound
fiadd
retf
jb
cli
push
call
aas
js
sbb
xor
mov
daa
jl
mov
pop
mov
loop
mov
(bad)
push
stos
movs
(bad)
inc
jb
repnz
fdivrp
fisttp
pop
lods
outs
pop
in
push
ret
scas
cmp
daa
mov
das
clc
(bad)
(bad)
fcomp
loope
outs
int
mov
bound
push
int
nop
sub
xchg
(bad)
dec
mov
mov
pop
and
inc
dec
ret
movs
xor
inc
jmp
cli
cmp
sub
mov
jecxz
pop
mov
dec
dec
push
push
leave
dec
call
jmp
sub
xchg
(bad)
mov
mov
mov
fs
ror
jle
fmul
sahf
xchg
fs
pushf
fdiv
retf
and
adc
icebp
loop
sbb
retf
cmp
ret
jg
sub
jmp
test
sub
jl
inc
mov
fcomp
test
adc
mov
clc
push
fstp
dec
fsubr
mov
sub
fdivr
add
pop
cmp
mov
(bad)
in
frstor
loop
(bad)
ja
repnz
(bad)
sub
dec
mov
mov
push
fist
sbb
mov
xchg
pop
(bad)
outs
daa
es
sbb
(bad)
jg
movs
into
adc
popf
mov
mov
mov
pop
(bad)
and
inc
push
aaa
je
pop
pushf
mov
push
imul
sub
cmp
fimul
add
lock
sar
pop
mov
dec
mov
cwde
mov
call
loope
jmp
mov
(bad)
sbb
push
mov
lahf
and
call
sti
and
sahf
test
jae
mov
sub
or
add
retf
sar
data16
outs
sub
mov
xchg
loop
scas
xchg
js
mov
cmp
push
pop
repnz
out
inc
lea
out
push
jge
xor
jg
inc
lds
das
xchg
in
addr16
into
mov
mov
mov
fsub
xchg
test
call
iret
cs
test
ss
shl
mov
xor
lods
mov
icebp
lock
enter
jo
jbe
ins
sub
jbe
or
int
sub
scas
cmc
inc
ins
pop
jnp
jl
cmp
inc
sub
shl
(bad)
pop
or
mov
xor
cmp
outs
push
sbb
xchg
ins
loope
cwde
dec
mov
aaa
cld
call
sbb
sbb
jg
pop
sbb
mov
xchg
icebp
(bad)
ds
mov
push
cmp
in
aad
inc
call
pusha
test
int
ror
mov
fs
(bad)
ja
rcl
mov
stos
xlat
xor
push
dec
push
les
pop
jnp
fidivr
out
inc
fisttp
sub
pop
jne
lods
(bad)
(bad)
(bad)
(bad)
out
xchg
aad
cmps
jb
pop
(bad)
mov
dec
pushf
daa
sub
cmps
(bad)
int
sub
inc
xchg
(bad)
call
sub
cmp
jmp
inc
or
mov
xlat
or
(bad)
call
mov
cmp
fld
and
jmp
mov
sti
pop
int3
pop
(bad)
push
lods
xor
leave
ror
pop
(bad)
call
int
das
and
jg
cli
cmp
mov
jns
push
or
test
mov
inc
sub
mov
stos
ficom
pop
cmps
call
jmp
pop
dec
xor
sub
(bad)
(bad)
(bad)
mov
pop
outs
bnd
adc
mov
repnz
retf
xor
pop
cmp
ret
jno
pop
mov
mov
push
xchg
(bad)
(bad)
inc
test
ja
jne
(bad)
cmp
and
mov
cmp
pusha
neg
pop
cmc
pushf
jg
das
movs
pop
retf
test
(bad)
(bad)
jmp
bound
clc
xchg
(bad)
sub
imul
jns
(bad)
(bad)
inc
sbb
mov
dec
cld
push
int
sar
fcom
repnz
pop
jmp
(bad)
(bad)
(bad)
jmp
mov
mov
retf
int3
mov
and
cs
(bad)
call
sbb
sub
push
cmp
leave
enter
int3
fwait
pop
test
cli
(bad)
(bad)
(bad)
std
cld
in
mov
out
pop
push
lahf
mov
cld
mov
cmp
sar
push
hlt
adc
fist
mov
(bad)
cmp
jmp
xchg
pushf
out
push
test
bts
inc
stos
stos
xor
dec
push
pop
retf
dec
ss
std
cli
(bad)
(bad)
call
push
pop
cdq
adc
pop
loop
pop
mov
inc
mov
lods
jbe
push
inc
pop
inc
ins
(bad)
gs
xchg
mov
pop
jmp
xor
mov
fdivr
jnp
retf
dec
leave
adc
out
dec
jmp
pop
xor
xchg
fwait
imul
outs
(bad)
mov
pop
cmc
cmps
add
jg
hlt
(bad)
fcomp
stos
frstor
call
pop
mov
push
pop
stc
jb
mov
sbb
mov
sbb
in
pop
mov
ficomp
outs
(bad)
(bad)
(bad)
(bad)
push
mov
stos
cmps
cmps
mov
in
aam
(bad)
loop
mov
mov
dec
(bad)
out
scas
rol
dec
js
xchg
fadd
(bad)
cmp
mov
ja
pop
fst
iret
ds
mov
push
sahf
mov
sub
in
jg
dec
cs
and
mov
ins
lock
repnz
sbb
cli
stos
call
pop
jecxz
cwde
rcr
jo
call
jl
pop
fstp
mov
cmp
jg
push
mov
pop
mov
(bad)
aaa
(bad)
leave
add
out
inc
es
(bad)
inc
into
adc
out
sti
pop
add
inc
fcmovnbe
or
mov
pop
xor
sub
test
mov
pop
nop
mov
loopne
jl
sti
test
std
(bad)
jmp
icebp
out
mov
retf
add
imul
out
push
xchg
jmp
out
xlat
out
shl
rcr
mov
push
jmp
imul
in
mov
jle
call
test
(bad)
(bad)
push
(bad)
jmp
ja
fwait
mov
pop
lahf
loope
and
mov
ret
int
pop
out
or
(bad)
in
mov
lahf
sub
fisttp
shl
retf
imul
pop
mov
pop
sub
inc
sar
sub
fisubr
inc
mov
ret
jno
std
(bad)
jmp
retf
fimul
movs
inc
pop
(bad)
fstp
vmovdqu
(bad)
es
popa
movs
out
jo
jmp
dec
pop
(bad)
pusha
mov
fisubr
add
hlt
(bad)
(bad)
(bad)
fild
call
(bad)
loop
push
iret
lods
je
sub
dec
and
mov
data16
jmp
xor
das
(bad)
mov
push
(bad)
cs
push
mov
(bad)
js
imul
sub
cwde
push
das
(bad)
(bad)
(bad)
jmp
mov
cli
aad
fnstcw
xor
pop
(bad)
out
(bad)
call
push
fs
fsub
cmp
and
xlat
(bad)
(bad)
inc
inc
push
fstp
add
push
push
loope
xor
sub
out
or
(bad)
jmp
push
test
inc
or
cmp
bound
leave
cli
pop
jp
fcomp
pop
js
jp
loop
pop
outs
call
xchg
sub
scas
pop
in
fistp
(bad)
out
push
movs
sub
sub
fdivr
jns
ins
fbstp
cld
(bad)
call
pop
jp
adc
pushf
mov
fstp
mov
das
cli
xchg
mov
mov
call
fisubr
sub
inc
movs
jl
rol
into
mov
loope
(bad)
jg
jmp
(bad)
dec
bound
sti
cmp
jmp
jecxz
(bad)
leave
inc
pop
bound
aam
jg
dec
(bad)
int
add
push
daa
push
sbb
shl
sub
pop
cmp
out
sub
mov
ffreep
mov
sar
pop
es
xor
or
mov
mov
mov
retf
push
(bad)
(bad)
jg
sub
movs
ret
mov
xor
dec
and
sbb
mov
inc
cmp
out
adc
xchg
repnz
js
daa
sub
and
jl
mov
fcom
call
fadd
(bad)
(bad)
jmp
lock
sub
mov
cli
dec
fwait
jo
jp
ficom
js
bound
mov
mov
xor
(bad)
(bad)
mov
mov
jns
daa
pop
jae
sub
mov
lods
fmul
lahf
sbb
(bad)
(bad)
(bad)
(bad)
jo
stc
ror
xor
jp
mov
cs
fidiv
sar
mov
push
movs
cld
(bad)
(bad)
jmp
fwait
add
mov
push
aam
loop
xchg
(bad)
call
pop
shl
jecxz
mov
sub
ret
cmc
xor
cmp
fprem
(bad)
(bad)
out
sbb
pop
cld
pop
add
sub
inc
or
jmp
jp
cmps
inc
(bad)
(bad)
mov
adc
shr
(bad)
mov
pop
jae
or
mov
pop
enter
pusha
sbb
jl
mov
cmp
mov
push
mov
jg
fs
repnz
cmps
out
(bad)
(bad)
mov
cli
lds
push
(bad)
nop
loope
xor
pop
scas
sbb
lods
xchg
mov
mov
hlt
pop
scas
and
(bad)
jmp
add
clc
imul
fsubr
sub
(bad)
fdiv
mov
clc
add
test
and
out
cmps
int3
xor
push
sbb
popa
pop
add
mov
into
fadd
pop
mov
sbb
je
sub
cmp
push
mov
std
push
sbb
sti
lods
cld
sbb
pop
call
pop
data16
jb
rcl
(bad)
mov
lss
pop
repz
pusha
xor
push
fisubr
xchg
bound
lods
jmp
loope
bound
cmc
push
stos
mov
std
pop
jl
jmp
add
sub
(bad)
repnz
fist
push
(bad)
inc
cwde
mov
mov
pop
mov
jmp
stos
pop
pop
aam
out
mov
fdiv
xchg
hlt
cld
(bad)
xchg
sbb
sbb
fdiv
xchg
pop
inc
dec
jmp
cmp
cs
pop
mov
mov
stos
cli
shl
out
fimul
mov
cmp
push
sub
cld
jmp
cmp
jp
dec
jl
inc
das
fisttp
fwait
inc
leave
add
push
and
or
cdq
out
rol
mov
fisttp
cbw
cli
sbb
repz
pop
(bad)
(bad)
(bad)
dec
pop
pop
aad
xor
sub
pop
es
pop
mov
stos
adc
lods
loop
pop
mov
call
sbb
inc
stos
xchg
dec
sub
or
mov
popf
ins
shr
ins
test
int
hlt
pop
cmc
xchg
daa
xlat
mov
stos
cdq
mov
cmp
sar
jmp
push
rcr
jl
retf
fidivr
(bad)
(bad)
(bad)
call
ja
shl
mov
mov
movs
jns
xchg
lods
fsubr
ds
sub
mov
ds
pop
cmps
retf
push
ja
sub
pop
test
shl
jge
mov
cli
mov
ins
sub
enter
inc
aad
(bad)
dec
mov
(bad)
pop
(bad)
(bad)
mov
retf
mov
jp
imul
hlt
mov
(bad)
out
push
cs
(bad)
(bad)
jmp
cmp
movs
push
mov
shl
daa
call
call
mov
imul
adc
sbb
cmps
popa
cmps
(bad)
scas
fst
mov
and
rol
jecxz
daa
and
mov
dec
or
mov
movs
and
movs
mov
(bad)
push
sbb
ins
cmp
outs
shr
enter
in
pusha
push
lea
mov
mov
rol
push
rcr
sbb
sub
or
outs
out
int
or
and
fldenv
jae
ja
jmp
push
pushf
daa
push
lahf
(bad)
rep
jmp
repz
stos
jle
sub
mov
inc
push
fisubr
cld
bound
into
fcmove
int
jmp
fcmove
imul
xor
fcom
dec
(bad)
jmp
(bad)
fdivr
pop
add
cmp
(bad)
(bad)
(bad)
mov
sbb
and
fidivr
pop
icebp
sub
pop
xchg
sub
(bad)
dec
loop
pop
sar
push
mov
cld
das
push
cmp
test
and
mov
call
ret
cmp
xchg
push
push
cmp
push
(bad)
adc
int
jnp
mov
cmp
pop
pop
out
mov
aaa
outs
cmp
mov
mov
not
sbb
mov
(bad)
mov
pop
mov
outs
pop
push
retf
mov
push
cmp
mov
idiv
in
push
mov
and
rcr
xchg
mov
xor
xchg
sub
xchg
fwait
out
dec
mov
sub
and
aas
push
das
xor
lods
push
mov
(bad)
icebp
sub
push
pop
mov
mov
pop
pop
mov
cmps
adc
das
push
cmp
test
mov
pminsw
adc
push
idiv
mov
cld
enter
fwait
pop
addr16
and
js
in
out
dec
xchg
pop
cmp
mov
cmp
or
jo
and
pop
or
mov
xchg
cmp
pop
retf
cdq
mov
push
enter
shr
and
mov
push
int3
and
enter
retf
cmp
loop
xchg
fdivr
jns
das
and
mov
dec
mov
jae
cmp
push
call
test
mov
cs
shr
mov
bound
sub
mov
jl
sbb
push
sbb
pop
pop
mov
sub
push
in
sub
mov
jno
xchg
(bad)
mov
in
jl
mov
or
retf
aas
enter
pop
je
stc
les
adc
fwait
jb
sar
rcr
jo
mov
sub
stos
int3
ja
mov
pushf
jmp
jp
fistp
jp
std
adc
sbb
dec
and
pop
mov
add
(bad)
call
mov
add
pushf
enter
push
loopne
loop
aaa
mov
add
jo
mov
loope
jg
push
mov
bound
mov
cli
ins
mov
pop
pushf
fidivr
mov
(bad)
(bad)
(bad)
jns
mov
test
pusha
cmc
cmps
dec
dec
sbb
mov
sbb
aad
repz
jmp
(bad)
(bad)
fistp
mov
jp
rol
fsubr
jecxz
bound
mov
or
pop
dec
fcomp
fbstp
adc
out
aam
fcomp
out
cmp
sar
or
pop
fimul
mov
mov
mov
call
cmp
pop
jl
pusha
jb
ftst
pop
pop
cdq
loope
add
lods
mov
(bad)
(bad)
(bad)
mov
shl
mov
sub
fistp
jecxz
iret
fwait
pop
xchg
mov
fisubr
sub
fcomp
pop
and
cli
(bad)
(bad)
jg
rcr
pusha
mov
iret
fdivr
jle
sar
out
fdivr
push
(bad)
inc
sub
jnp
pop
int
out
sub
dec
enter
pusha
mov
retf
add
jmp
pop
lods
clc
enter
das
sbb
pop
mov
ins
xchg
(bad)
fdivr
imul
je
lahf
fiadd
xor
mov
jne
lahf
push
push
adc
mov
add
sahf
and
mov
xchg
out
dec
mov
data16
sbb
mov
pop
dec
cmp
mov
lahf
loop
inc
std
scas
aam
sar
sub
adc
cmp
(bad)
out
cli
push
jl
mov
mov
pop
(bad)
pusha
cmp
pop
mov
sbb
and
clc
stos
jmp
test
mov
(bad)
ds
js
ret
(bad)
jg
sbb
mov
aad
cmp
sub
sbb
or
push
test
cmp
mov
cmp
(bad)
mov
mov
fnstsw
pop
mov
and
or
repnz
push
sub
xrelease
(bad)
(bad)
(bad)
(bad)
(bad)
in
dec
leave
pop
test
aam
mov
(bad)
jp
jae
cmps
retf
mov
(bad)
jmp
xchg
fmul
test
mov
mov
mov
in
(bad)
fistp
shl
mov
test
inc
mov
cmp
jmp
popf
cli
ror
inc
(bad)
mov
aad
pop
and
mov
cmps
(bad)
mov
je
scas
cli
call
repnz
leave
mov
dec
cmp
leave
or
jg
cld
stc
fucomp
jecxz
mov
(bad)
fimul
je
fs
out
enter
dec
push
movs
mov
les
fidivr
fmulp
push
ffree
jle
cld
xor
xchg
jle
shr
ss
fstp
cmp
iret
mov
adc
pop
(bad)
(bad)
(bad)
jmp
sbb
or
aad
add
mov
sahf
sub
mov
inc
mov
(bad)
call
push
dec
mov
fnstcw
out
xor
sub
add
retf
and
mov
mov
mov
or
ret
cli
iret
xlat
mov
(bad)
mov
fcom
dec
adc
push
movs
push
rcr
add
dec
mov
adc
pop
out
mov
out
(bad)
clc
xor
rol
jmp
cs
sbb
add
or
dec
push
jno
stos
xor
dec
aad
mov
push
(bad)
(bad)
(bad)
push
mov
xchg
push
ins
mov
mov
jle
das
fidiv
cld
lds
push
xor
push
sbb
and
fdiv
sbb
mov
(bad)
into
mov
sbb
mov
push
daa
xor
jne
movs
xlat
mov
int3
out
push
xchg
cmp
push
stc
js
cli
call
(bad)
es
dec
fsub
in
rcr
mov
jmp
or
sbb
loop
xchg
cmps
mov
popa
cli
int
mov
mov
sub
sbb
pop
cwde
push
cmp
cwde
push
sar
mov
mov
movs
daa
retf
jmp
rol
mov
inc
loop
call
sti
sbb
cli
(bad)
(bad)
(bad)
jl
jl
pusha
mov
xchg
sbb
mov
xchg
imul
jp
cmp
xor
fisubr
sar
xor
(bad)
call
lds
(bad)
dec
and
(bad)
dec
xchg
(bad)
jmp
sbb
mov
pop
pop
stos
je
and
pop
sub
(bad)
(bad)
push
fstp
mov
bnd
xchg
dec
loop
pop
mov
call
fild
(bad)
call
sbb
scas
jne
adc
pop
aad
mov
jo
and
pop
push
fcmovnb
shr
(bad)
(bad)
(bad)
fst
(bad)
bound
stos
mov
mov
mov
sub
shr
sbb
dec
(bad)
(bad)
(bad)
jmp
(bad)
leave
push
ror
into
fimul
push
push
and
adc
call
(bad)
call
jae
or
test
pop
call
or
push
xchg
daa
jg
dec
cld
add
sub
movs
into
jle
sub
and
nop
lock
push
into
mov
xor
fs
inc
jmp
mov
push
rol
push
(bad)
jmp
cli
push
lods
fstp
(bad)
call
dec
es
sub
call
(bad)
cs
(bad)
push
jg
(bad)
call
inc
jo
cld
push
pop
leave
movs
lods
rcr
xchg
leave
push
sbb
frstor
sub
(bad)
jmp
sub
imul
(bad)
or
lods
(bad)
fild
jmp
and
push
fild
add
push
mov
das
fidivr
fcom
add
ins
int
(bad)
(bad)
jmp
jecxz
popa
bndstx
xchg
stos
fmul
dec
jbe
mov
and
ror
xchg
sbb
inc
push
fmul
push
mov
dec
dec
and
mov
pop
pop
fs
stos
cs
ins
push
mov
push
sub
bound
xchg
mov
cli
dec
in
inc
shl
jmp
(bad)
(bad)
jmp
mov
cdq
leave
mov
push
cdq
test
pop
(bad)
(bad)
jmp
leave
mov
dec
ret
mov
push
popf
lea
dec
sbb
call
dec
and
adc
rcl
xor
test
mov
cmp
jbe
sub
mov
dec
push
push
cld
mov
ins
mov
add
jmp
int3
inc
jno
mov
retf
or
hlt
or
xchg
in
xor
mov
fisubr
add
or
push
stos
pop
test
inc
retf
cmps
and
cmp
adc
mov
icebp
(bad)
mov
mov
stos
xor
in
call
mov
mov
jle
jle
jae
mov
xor
pop
pop
mov
stos
push
scas
mov
push
mov
push
mov
(bad)
mov
lahf
mov
ficomp
clc
call
fcom
sub
mov
xor
mov
cwde
jb
fild
or
pop
ins
(bad)
(bad)
(bad)
jmp
stos
dec
dec
jge
stos
enter
outs
retf
stos
aaa
adc
sub
or
pop
mov
dec
pop
cmp
xchg
sub
or
loope
dec
jecxz
loopne
(bad)
(bad)
mov
btc
call
(bad)
cmps
xchg
jb
mov
dec
fwait
jmp
lock
stos
aas
retf
test
inc
(bad)
dec
lods
add
mov
jp
sbb
scas
push
mov
pop
out
push
or
mov
jnp
adc
(bad)
(bad)
(bad)
jg
imul
dec
dec
sub
scas
bswap
pop
sbb
test
stos
into
inc
mov
stos
(bad)
(bad)
(bad)
(bad)
faddp
(bad)
adc
or
cs
cwde
or
push
pop
call
or
cmps
shl
enter
cli
jmp
out
repnz
loop
cmp
inc
(bad)
(bad)
(bad)
jmp
or
and
push
ret
mov
imul
pop
and
hlt
(bad)
(bad)
dec
test
add
dec
add
push
sub
dec
neg
std
call
sahf
pop
pop
xor
mov
scas
out
call
ja
(bad)
jmp
hlt
jmp
fist
(bad)
(bad)
(bad)
call
das
movs
ins
mov
xchg
mov
mov
imul
ret
cmps
sahf
loop
lods
icebp
stc
sub
(bad)
(bad)
jmp
sub
jmp
fcompp
cs
test
mov
js
sti
outs
jbe
push
jmp
cld
(bad)
push
jle
pop
add
pop
xor
pusha
dec
scas
out
sub
xchg
outs
mov
stos
js
and
jb
or
fnstenv
shl
and
jmp
out
fisttp
jp
xor
ret
retf
loope
jnp
call
jmp
sub
(bad)
jmp
das
dec
fldcw
fwait
leave
dec
(bad)
mov
lods
push
sbb
mov
das
xchg
adc
jnp
sbb
push
mov
js
cmps
dec
mov
test
or
ds
add
popf
repnz
test
(bad)
(bad)
jmp
aam
add
and
mov
dec
mov
sub
loop
call
mov
mov
and
movs
mov
mov
and
(bad)
loopne
inc
xchg
retf
xor
and
pop
fbld
dec
mov
lahf
cld
push
add
sahf
xchg
fcmovnu
mov
inc
call
add
mov
mov
sbb
mov
dec
xchg
repnz
mov
pusha
and
sub
cmp
(bad)
jmp
cmp
jb
ins
test
iret
out
daa
sub
push
dec
pusha
pusha
ret
add
je
(bad)
(bad)
call
fadd
sahf
push
enter
lahf
sbb
es
xor
sub
iret
bswap
push
(bad)
scas
int
call
daa
jp
sub
sub
cld
mov
or
mov
sub
(bad)
mov
test
lock
test
xor
xchg
aaa
xchg
and
cmp
xchg
jnp
jmp
adc
call
push
cmp
push
fcomip
add
dec
pop
cdq
or
addr16
mov
(bad)
stos
fild
dec
or
cmp
pop
sub
mov
mov
outs
push
dec
push
outs
scas
adc
add
scas
call
cli
(bad)
(bad)
std
fmul
cmp
ds
mov
outs
dec
les
movs
add
(bad)
inc
jae
fild
js
sub
fcmovu
js
jbe
pop
enter
es
ins
lea
push
pop
mov
cmp
adc
push
or
sub
lods
lods
imul
mov
(bad)
(bad)
call
sahf
sbb
mov
pop
mov
mov
call
dec
cmp
jmp
pop
sbb
dec
dec
sbb
mov
mov
icebp
push
xchg
lods
mov
fsin
mov
inc
pop
or
es
jmp
popa
mov
neg
ret
cld
retf
loop
inc
imul
mov
out
(bad)
(bad)
inc
sub
sbb
pop
mov
adc
mov
aad
(bad)
xlat
pop
dec
mov
pusha
and
mov
fidiv
inc
(bad)
jns
sbb
lods
(bad)
(bad)
jmp
test
stos
pop
ds
mov
and
pop
cmp
outs
jp
sub
fcomi
xor
iret
(bad)
call
jle
jbe
ss
nop
fisub
(bad)
test
push
mov
(bad)
(bad)
(bad)
(bad)
jnp
fnstsw
ret
cwde
loopne
loopne
ret
xor
popf
(bad)
push
test
sar
lods
int3
and
fwait
shr
cmp
fdiv
call
(bad)
xchg
(bad)
xor
push
cmovle
lea
fwait
js
scas
add
cmp
sbb
push
cld
push
mov
in
mov
cmps
sbb
in
xor
jnp
ret
jb
adc
inc
icebp
(bad)
(bad)
fist
or
push
mov
xchg
clc
stc
cli
pop
out
bswap
lahf
jle
shl
add
test
ds
add
(bad)
ds
sti
jg
add
jl
movs
or
jecxz
add
leave
fwait
or
(bad)
xlat
gs
(bad)
(bad)
(bad)
push
pop
and
jecxz
push
jg
lods
dec
xor
dec
pop
out
into
enter
dec
sub
mov
stos
leave
push
xchg
(bad)
sbb
sahf
xchg
push
sbb
jge
fdivr
mov
(bad)
(bad)
push
pop
mov
ror
push
ret
sbb
mov
(bad)
popf
pop
lods
loopne
in
into
icebp
icebp
xor
mov
movs
dec
(bad)
rcl
xor
xchg
sub
popa
clc
(bad)
jmp
push
xchg
mov
inc
data16
pop
sub
into
mov
sbb
push
mov
sub
cld
sbb
int
xchg
les
cmp
lods
aas
pop
xlat
push
repz
sbb
pop
cwde
leave
push
adc
pop
jmp
loopne
mov
or
sbb
in
mov
inc
push
aaa
std
ss
dec
mov
inc
leave
sbb
out
mov
(bad)
stc
push
jb
aaa
xor
(bad)
call
jae
arpl
sbb
dec
lods
mov
pop
dec
sub
and
call
(bad)
(bad)
(bad)
(bad)
mov
pop
sbb
cs
xlat
stos
lahf
(bad)
xlat
inc
xor
(bad)
(bad)
(bad)
fdivr
mov
sbb
cs
sbb
inc
cmp
sbb
inc
pop
pop
xor
das
cli
(bad)
std
mov
xchg
rol
sbb
pop
stc
outs
xor
leave
adc
cs
mov
pop
das
inc
fs
enter
(bad)
(bad)
(bad)
(bad)
fcmovnu
ds
test
cli
jno
pop
mov
sub
mov
call
int3
cmps
dec
je
(bad)
dec
rol
retf
test
call
sbb
add
xchg
sub
push
mov
mov
sbb
jne
pop
mov
xor
mov
std
call
call
sbb
mov
dec
xchg
pop
dec
sahf
cld
dec
add
xchg
loop
ret
xor
adc
pop
(bad)
js
mov
psrlq
imul
add
shl
xor
add
int
inc
push
mov
icebp
mov
rcl
xor
arpl
arpl
fimul
es
push
push
mov
dec
sbb
stos
hlt
jmp
mov
test
push
pop
sbb
sar
bound
xchg
fs
push
test
test
cmp
dec
mov
jecxz
leave
into
aas
lods
jmp
fmul
mov
dec
and
in
cmp
mov
(bad)
(bad)
(bad)
jmp
ins
cmp
ror
out
addr16
mov
(bad)
std
ror
fbld
cli
(bad)
sti
lahf
inc
in
mov
jmp
sub
and
jmp
xchg
clc
add
or
aam
popf
aad
ret
mov
sub
xchg
ds
push
mov
in
(bad)
xchg
out
push
dec
inc
mov
(bad)
(bad)
dec
scas
and
jno
ror
scas
addr16
lods
fdiv
jg
ret
pop
jb
(bad)
(bad)
call
mov
les
mov
sub
jg
repnz
lahf
pop
fimul
jmp
dec
out
add
lahf
lock
and
mov
and
xchg
lahf
dec
daa
mov
cdq
inc
test
inc
or
outs
bound
push
outs
xor
pop
pop
js
cdq
mov
or
mov
daa
outs
sar
pop
pop
or
dec
lods
in
(bad)
(bad)
(bad)
dec
and
retf
mov
out
jp
cmp
jbe
lods
imul
cli
cmps
xor
and
cmps
fimul
and
in
mov
push
stos
arpl
fistp
(bad)
sub
xor
add
loop
mov
add
jmp
jnp
call
or
mov
fcomp
pop
cmp
call
jecxz
(bad)
js
js
push
in
scas
dec
pop
fldenv
xchg
fstp
mov
(bad)
fld
push
mov
cwde
fwait
leave
mov
sbb
dec
mov
jmp
imul
dec
fisub
int
cmp
fisttp
das
sub
fwait
add
sahf
retf
out
lea
(bad)
(bad)
in
sbb
pop
pop
mov
fld
xchg
fistp
dec
xchg
pusha
(bad)
(bad)
(bad)
jmp
in
and
mov
retf
mov
push
fs
arpl
inc
push
sbb
pop
pop
adc
mov
(bad)
aaa
add
mov
std
push
inc
scas
rcr
test
retf
fdiv
inc
outs
aas
clc
(bad)
jg
xor
lock
not
jmp
adc
repnz
(bad)
mov
push
push
add
pop
cld
outs
pop
xchg
fmul
(bad)
out
push
push
xor
jmp
mov
mov
pop
cmc
(bad)
in
call
(bad)
push
inc
dec
cmps
retf
mov
mov
mov
(bad)
call
scas
mov
mov
cli
scas
cli
mov
mov
sti
sub
or
and
out
or
aaa
xor
imul
jge
clc
jg
push
xchg
inc
xchg
mov
call
add
pop
dec
push
or
aam
loope
aad
(bad)
out
pop
or
enter
dec
mov
dec
fsub
retf
int
inc
dec
enter
mov
stos
jp
xor
lods
(bad)
jmp
stos
lods
pop
push
lods
dec
mov
ds
cld
jg
jg
cmps
pop
dec
pop
cli
push
inc
mov
stos
cmps
arpl
ins
fcom
jg
ins
push
pop
shl
(bad)
jmp
dec
fidivr
pop
sub
and
pop
cmps
or
dec
(bad)
fisttp
add
dec
pop
sub
mov
xchg
add
lods
pop
out
dec
in
xchg
push
cmps
pop
inc
mov
hlt
push
or
je
push
adc
mov
in
int
fadd
lods
call
test
fs
push
inc
pop
data16
loopne
inc
scas
fld
sbb
fcomip
fild
pusha
sbb
scas
dec
pop
scas
inc
mov
dec
pop
idiv
out
mov
inc
movs
pop
inc
push
xor
adc
mov
fdivr
push
jge
and
mov
(bad)
fisttp
(bad)
aaa
cmp
pop
lods
dec
pop
(bad)
ins
adc
das
xchg
scas
(bad)
rcr
cld
(bad)
(bad)
call
scas
cld
pop
test
cmp
and
es
es
loope
loopne
mov
pop
or
(bad)
jecxz
loop
in
(bad)
jmp
sub
jl
sar
push
pushf
retf
jp
outs
call
retf
xchg
leave
adc
or
dec
shr
(bad)
call
xor
cmps
test
pop
inc
ins
jbe
inc
cld
ins
inc
test
dec
fs
dec
pop
outs
lods
pop
inc
movs
pop
je
imul
imul
nop
pop
addr16
pop
xchg
sbb
es
xor
ja
outs
clc
mov
sub
push
nop
sbb
out
inc
pop
jmp
inc
pop
call
inc
pop
jmp
inc
and
push
loope
in
nop
push
or
adc
loop
pop
ror
scas
inc
push
sub
pop
dec
dec
push
out
push
xor
ret
push
adc
popa
pop
mov
mov
sub
mov
push
mov
outs
sub
jb
lock
push
dec
popf
nop
add
pusha
(bad)
pusha
lods
push
cs
xlat
inc
xor
adc
pop
data16
pop
dec
scas
push
out
aaa
cld
(bad)
inc
sub
push
add
inc
inc
push
scas
push
daa
pop
pusha
xchg
ja
cmps
(bad)
lock
mov
mov
and
adc
ins
ror
dec
stos
loop
sub
lahf
jmp
in
out
and
jge
sbb
hlt
jbe
imul
mov
div
ss
sub
in
data16
pusha
jb
jecxz
ins
sub
fistp
push
out
adc
dec
sub
ret
cmp
jae
(bad)
stc
out
int
vminpd
cs
lea
push
jmp
movs
mov
mov
mov
(bad)
(bad)
sti
std
imul
int
pop
(bad)
movs
and
cmps
add
pop
loopne
and
or
adc
call
mov
mov
cld
fild
(bad)
xor
icebp
mov
dec
ins
cld
xchg
outs
jle
pop
outs
scas
pop
sti
jno
aad
ficomp
add
adc
out
sub
ins
jmp
jmp
fst
adc
fdivr
cmps
sub
mov
sbb
mov
cmc
adc
mov
sub
ja
xchg
push
pop
scas
dec
pop
(bad)
or
imul
cdq
les
inc
pop
sub
pop
pop
and
lea
sub
addr16
xchg
inc
inc
es
loope
dec
dec
jg
jmp
rcr
cmp
push
ins
pop
(bad)
out
ja
ins
or
retf
ficomp
inc
add
popa
mov
cmp
mov
inc
hlt
sub
es
xchg
xor
xor
dec
(bad)
fwait
inc
cmp
retf
addr16
ret
out
js
dec
sub
sahf
pop
sbb
(bad)
ja
push
in
rcl
or
inc
push
out
pop
rcr
adc
jl
inc
ins
jmp
clc
pop
sub
add
dec
xchg
jnp
(bad)
xchg
movs
jp
inc
mov
add
add
call
rcl
into
outs
pop
ins
scas
pop
push
xor
stos
pop
lods
rcl
or
outs
test
lock
xchg
inc
jno
dec
mov
test
xchg
jne
adc
dec
fs
mov
pusha
les
inc
(bad)
dec
push
push
movs
sub
in
pop
inc
movs
sbb
pop
inc
pop
ins
outs
data16
jmp
push
xchg
xor
pop
test
arpl
mov
and
lds
int
adc
lea
mov
popf
sub
(bad)
jnp
aas
imul
lods
sbb
popa
or
sbb
xchg
es
cmp
enter
mov
dec
daa
pop
(bad)
jmp
mov
ds
jae
cdq
mov
movs
inc
lds
retf
les
leave
mov
mov
out
scas
adc
xchg
mov
and
leave
pop
shl
in
inc
sbb
std
popa
retf
ins
inc
scas
loop
shr
pop
or
aaa
test
inc
dec
aam
pop
and
(bad)
pop
add
cmp
push
inc
lods
jmp
pop
and
sub
and
push
es
not
pop
sub
jl
stos
fs
aam
fs
(bad)
sti
(bad)
dec
loopne
dec
xchg
xchg
push
test
pop
in
jns
adc
sub
mov
int
fisttp
inc
cmps
sar
movs
out
sub
adc
inc
pop
fwait
ins
sar
pop
mov
push
mov
iret
mov
sti
popa
mov
mov
cmp
add
jbe
rcr
add
loop
mov
or
add
cmp
dec
mov
mov
fild
jge
stc
dec
mov
push
jns
sub
outs
inc
push
xchg
adc
pop
dec
movs
pop
adc
sbb
xchg
mov
stos
movs
icebp
fist
dec
adc
jb
clc
imul
and
inc
icebp
inc
xor
imul
add
fucomp
mov
sbb
pop
outs
int
xor
dec
push
inc
outs
pop
add
pop
loopne
mov
mov
xchg
add
rol
dec
jmp
fadd
nop
jle
inc
std
sbb
call
das
jl
xor
push
mov
inc
pop
jbe
inc
(bad)
xlat
inc
lods
imul
ja
rol
and
fldenv
stos
push
xor
popa
cld
lods
pop
jmp
jmp
mov
sbb
mov
retf
fmul
ins
pop
loop
lods
cli
call
pop
inc
test
icebp
dec
mov
push
in
inc
imul
mov
jge
out
loopne
inc
imul
sub
dec
push
int
stos
sbb
pop
jmp
aaa
inc
inc
xor
dec
in
push
pop
in
lds
je
mov
inc
out
add
sub
dec
das
add
std
sub
push
test
dec
dec
push
fld
adc
xchg
xchg
ror
pop
dec
jne
not
icebp
push
adc
dec
jp
hlt
lods
outs
mov
inc
pop
cs
dec
pop
mov
ja
push
stos
pop
cmc
sti
(bad)
test
je
cmps
aam
outs
test
xchg
push
out
or
imul
stc
cmps
in
in
jns
mov
movs
inc
pop
mov
lahf
aam
lock
inc
je
(bad)
shl
bound
mov
dec
pop
das
loop
or
inc
cmp
stc
movs
sub
sub
nop
inc
mov
movs
jmp
inc
cmp
dec
push
movs
pop
dec
scas
xor
mov
je
es
inc
mov
pop
mov
or
in
out
sub
imul
shr
fbld
fstp
in
(bad)
cmps
sub
std
mov
cld
lods
lods
outs
dec
scas
jl
fadd
sub
add
int3
pop
ds
jg
fimul
inc
in
in
cmps
(bad)
loope
mov
inc
add
add
jge
scas
(bad)
jg
push
mov
dec
jmp
call
repz
(bad)
fcomp
push
pop
je
or
addr16
ins
and
(bad)
jecxz
loop
in
xchg
lods
retf
and
inc
je
push
or
retf
sub
sub
mov
retf
mov
enter
mov
cli
jnp
push
sbb
out
bound
jg
(bad)
(bad)
pop
jns
ins
loope
pop
xor
dec
sahf
in
dec
inc
in
pop
lds
pop
inc
inc
cmc
stos
add
stc
pop
fdivr
sar
mov
xchg
inc
(bad)
jecxz
pop
adc
icebp
repnz
push
cs
jae
stos
(bad)
mov
pop
push
pop
imul
sbb
sti
(bad)
(bad)
jl
int
dec
sub
imul
push
inc
fcmove
jp
ins
inc
into
test
mov
xlat
jae
cmp
pop
sahf
outs
mov
dec
test
push
nop
shl
loop
sbb
adc
imul
fadd
and
jo
daa
inc
es
pop
jl
mov
jle
cmps
pushf
movs
pop
cmp
es
movs
xor
fwait
(bad)
cs
lods
pop
rol
push
cli
pop
iret
pop
inc
fdiv
or
dec
sbb
mov
add
mov
pop
ds
or
adc
jg
and
scas
pop
div
xchg
hlt
fadd
loope
mov
pop
pop
loopne
jg
pop
sahf
jecxz
mov
pop
scas
sub
sbb
mov
jmp
sbb
jge
aaa
mov
cli
repz
ins
pop
and
mov
mov
adc
shl
pop
jmp
inc
sub
sub
fisub
sti
dec
push
cmp
dec
dec
(bad)
loop
imul
out
scas
retf
aaa
sbb
cwde
ja
inc
into
mov
lods
jmp
fcom
dec
or
cmps
mov
shl
mov
movs
pop
inc
(bad)
retf
cld
jmp
data16
pop
shl
push
mov
jle
lods
les
enter
dec
retf
push
aam
push
cli
loope
mov
pop
outs
psubd
cmps
neg
iret
(bad)
cmp
call
mov
dec
push
enter
(bad)
movs
jg
scas
pop
dec
es
mov
dec
xchg
jne
mov
pushf
test
pop
movs
add
push
retf
mov
or
scas
cmp
ret
int3
cld
into
ins
leave
sbb
dec
je
jno
sbb
retf
jp
jle
dec
mov
cmp
dec
mov
inc
jecxz
and
push
push
(bad)
(bad)
dec
jl
jle
ret
repz
dec
adc
repz
push
jge
in
xchg
dec
xor
shl
pop
xlat
(bad)
(bad)
sti
push
dec
imul
retf
addr16
and
push
nop
or
rcr
mov
and
add
cli
call
add
mov
pop
in
int3
pop
outs
and
jmp
scas
cld
or
mov
call
ret
jmp
aas
rcr
clc
out
mov
call
int3
inc
add
adc
fisubr
sub
loope
(bad)
stc
cmp
push
das
movs
jp
dec
popa
inc
adc
mov
call
sub
das
mov
cwde
jmp
or
mov
inc
(bad)
dec
movs
popf
fsub
(bad)
(bad)
(bad)
push
loope
imul
pop
pop
mov
push
dec
inc
pop
scas
pop
loop
pop
jo
hlt
inc
add
mov
lds
mov
mov
fist
fdivr
jp
xchg
call
push
pop
mov
les
mov
pop
mov
iret
and
cld
push
(bad)
stos
data16
test
popa
mov
jmp
(bad)
clc
loop
sub
or
jl
cld
stos
dec
jmp
jmp
jecxz
cmp
fwait
(bad)
ins
out
ins
(bad)
sub
mov
mov
mov
(bad)
push
ror
jnp
mov
pop
pusha
inc
(bad)
lods
adc
xor
mov
push
(bad)
(bad)
jg
sub
inc
sbb
je
sub
test
or
retf
(bad)
(bad)
aas
cli
pop
lahf
addr16
cmps
sbb
pop
add
inc
retf
iret
jge
shl
lods
xor
das
xchg
mov
bound
repz
mov
ror
add
push
int3
adc
cmps
dec
or
(bad)
push
sbb
popf
xchg
xchg
add
dec
sub
in
popf
nop
add
jmp
push
call
cmp
fsub
popa
les
cmc
pop
ret
dec
lods
cdq
mov
xchg
pop
inc
lods
dec
pop
std
or
clc
fwait
jmp
shr
jmp
dec
push
and
ja
push
cld
das
clc
jnp
pop
std
or
mov
inc
pop
cmp
xchg
std
(bad)
jmp
inc
test
into
add
out
jno
xlat
inc
pop
inc
mov
ds
std
dec
in
dec
cmps
in
dec
add
push
xchg
mov
or
xchg
sbb
inc
mov
cs
inc
sahf
push
jo
mov
scas
jg
test
push
popf
in
or
or
addr16
pop
es
out
mov
dec
pop
dec
ins
add
cmc
and
pop
xchg
addr16
push
mov
cdq
cmp
dec
push
xor
dec
pop
sub
bound
cli
data16
mov
pop
(bad)
fsub
pop
lea
jae
outs
mov
fadd
pop
sub
fwait
xor
cmp
dec
outs
push
nop
lock
imul
mov
xchg
daa
movs
es
out
clc
outs
(bad)
jmp
xor
mov
aam
popf
mov
outs
pop
mov
xchg
jae
outs
(bad)
jmp
imul
jmp
bound
lock
in
daa
xor
add
lods
dec
mov
fiadd
out
jae
or
pop
loop
push
ins
loop
out
bnd
adc
mov
cld
pop
gs
nop
scas
shl
fld
clc
jg
pop
outs
mov
xor
sub
push
ds
arpl
call
pop
pop
daa
and
and
or
outs
fild
push
out
mov
inc
pop
loope
push
sub
adc
in
jl
add
out
int
adc
and
ret
push
es
ins
std
sub
fldcw
pop
loope
sub
jmp
sub
xor
loopne
jle
cmps
arpl
(bad)
fcomp
es
or
jp
jge
int
dec
es
ss
jl
dec
gs
stos
sub
call
sub
rcl
jno
nop
and
adc
(bad)
(bad)
jmp
and
jp
lods
retf
push
int3
adc
dec
outs
jp
mov
(bad)
(bad)
dec
mov
leave
mov
fcom
fisubr
fidiv
bound
fwait
mov
iret
mov
adc
cmc
push
mov
inc
scas
retf
out
scas
imul
(bad)
pop
ins
add
(bad)
into
mov
cmp
out
jmp
cmps
ja
and
jmp
enter
or
inc
and
ficomp
nop
and
ror
push
adc
out
inc
cdq
push
jns
fcmovb
hlt
sbb
mov
ficom
jne
fiadd
pop
pop
dec
or
or
dec
fsub
push
jne
xchg
pop
inc
mov
fisttp
dec
shr
data16
and
push
sbb
push
mov
inc
push
pop
or
pop
push
imul
(bad)
ficomp
inc
lahf
add
dec
pop
and
inc
mov
lahf
popa
fnsetpm(287
push
ret
leave
scas
cmps
outs
lods
mov
pop
pusha
pusha
mov
loop
xchg
inc
stos
aam
push
inc
inc
cmps
pop
popa
lds
lock
out
bound
inc
inc
icebp
push
ja
pop
and
pop
icebp
or
mov
icebp
inc
pop
lods
dec
pop
in
dec
loop
scas
mov
movs
enter
mov
cli
mov
mov
lea
(bad)
mov
adc
inc
test
hlt
and
jmp
imul
out
and
mov
dec
(bad)
lahf
xor
dec
ret
aas
sbb
pop
xchg
clc
rcl
fsubr
xlat
inc
test
es
scas
es
inc
mov
sub
inc
pop
js
rcr
lea
ret
inc
dec
test
pop
cs
xor
sub
or
shl
sub
push
enter
inc
mov
mov
test
or
push
mov
dec
cwde
push
out
sub
or
sti
(bad)
jg
in
(bad)
not
mov
mov
dec
pop
pop
dec
loop
mov
inc
jns
add
jo
cmps
dec
scas
jmp
(bad)
scas
add
pop
arpl
ins
or
stos
call
dec
pop
inc
push
sub
fmul
cld
outs
das
nop
(bad)
nop
int
sbb
inc
pop
jmp
sti
mov
mov
dec
xchg
mov
dec
push
mov
stos
scas
inc
das
sub
mov
outs
lods
loopne
das
push
inc
mov
es
outs
adc
out
add
out
cmp
int
adc
pop
and
cmps
mov
pop
mov
in
cmp
in
cmps
cmp
jmp
std
add
dec
ins
pop
sub
sbb
fcom
dec
rcl
add
shl
sbb
and
ins
lea
lods
popf
cs
jmp
cld
mov
jo
sub
or
mov
and
lods
ins
outs
mov
add
icebp
stos
jge
pusha
movs
jg
inc
clc
shl
dec
push
loope
mov
xor
test
out
jmp
jmp
adc
cmp
mov
or
add
ret
dec
ins
and
xchg
popa
out
(bad)
jmp
outs
inc
call
add
jno
adc
std
(bad)
jg
pusha
bound
mul
jb
lods
inc
outs
inc
outs
mov
ss
arpl
push
sub
call
pop
or
xor
out
pusha
mov
and
ins
xchg
in
jecxz
repz
push
stos
mul
and
cmps
shl
fdiv
xchg
fidiv
(bad)
and
aas
(bad)
adc
arpl
scas
inc
inc
mov
push
push
shl
(bad)
fistp
loopne
(bad)
(bad)
hlt
fs
lods
xchg
xchg
loopne
out
lock
shr
shl
pop
shl
loopne
in
test
mov
movs
ficom
dec
out
sub
or
js
popf
jge
mov
add
call
call
icebp
sbb
dec
add
sbb
mov
loop
dec
or
xchg
xlat
movs
fs
sbb
out
add
mov
and
dec
sbb
jmp
lock
inc
lods
scas
fadd
fcom
mov
aaa
adc
popf
mov
mov
mov
movs
lods
test
mov
mov
outs
fadd
push
adc
outs
pop
addr16
mov
jg
jg
pop
sub
push
sbb
pop
mov
lds
lock
sub
icebp
mov
int3
pop
push
or
in
dec
push
sub
cmp
int
pop
jmp
(bad)
std
pop
cld
out
(bad)
sub
sub
cmp
sub
or
sbb
ins
fcomip
mov
ins
dec
sub
out
jge
pop
jnp
je
lods
sub
test
inc
inc
sub
fild
and
mov
inc
ds
outs
scas
pop
push
push
xchg
inc
xlat
push
inc
pop
outs
sub
fisub
scas
xlat
hlt
dec
sbb
movs
test
or
xchg
sbb
outs
stos
ja
sti
dec
xchg
dec
or
inc
mov
mov
xchg
dec
dec
push
xchg
dec
inc
ss
pop
and
fisubr
inc
mov
inc
fiadd
pop
sub
loopne
adc
mov
push
dec
ss
call
mov
jb
push
adc
jp
mov
pop
imul
std
pop
or
inc
pop
or
ror
or
inc
push
in
pop
test
pop
(bad)
fcom
inc
nop
pop
arpl
repnz
jp
and
in
lea
mov
cwde
(bad)
mov
and
out
in
xor
cmp
hlt
int
pop
int
bound
nop
outs
or
sbb
out
ins
sub
(bad)
push
push
es
aaa
mov
movs
sub
bound
or
hlt
and
cwde
sbb
jg
pop
inc
push
out
test
repnz
fmul
lods
dec
and
call
adc
xchg
lea
mov
rcr
dec
(bad)
sub
repnz
in
mov
pop
leave
sub
scas
dec
movs
cs
jmp
iret
sub
retf
mov
sub
or
or
fisttp
jno
or
(bad)
cli
cwde
push
mov
mov
retf
(bad)
(bad)
sti
imul
in
pusha
in
out
mov
cmp
icebp
push
scas
test
push
xlat
and
fucomi
retf
mov
pop
mov
cli
in
inc
sbb
xchg
aad
or
xor
(bad)
(bad)
jg
inc
jbe
or
aaa
test
pop
es
stos
sub
push
sbb
sub
jae
lds
das
hlt
sub
retf
lods
mov
dec
jmp
lock
inc
ror
movs
mov
dec
ins
dec
adc
test
sub
mov
(bad)
in
dec
lock
mov
push
data16
dec
aaa
ins
inc
jle
inc
inc
or
xchg
add
push
cld
pop
dec
scas
or
cmc
stc
lock
push
cld
es
leave
mov
rol
dec
cmps
pop
loop
fdivp
pop
cdq
jae
sub
xor
pushf
hlt
jg
add
sub
ret
scas
pop
lods
retf
xor
fs
cmp
retf
test
popa
rcr
lods
push
les
call
fild
lock
pop
out
mov
popf
push
test
jmp
aaa
jnp
rol
fdiv
cs
stos
pop
mov
fdiv
mov
push
hlt
add
addr16
lods
mov
pop
lock
call
cli
inc
lods
pop
adc
jnp
cmp
pop
mov
int3
retf
inc
out
inc
mov
fisttp
and
push
in
popa
ror
std
fwait
adc
mov
inc
scas
jae
imul
push
push
xchg
and
inc
mov
lock
dec
sub
jge
and
sbb
das
mov
pop
in
dec
pop
outs
stos
jge
aaa
cs
pop
test
add
jg
aaa
dec
mov
stos
frstor
repz
icebp
push
in
daa
repz
xchg
loop
sub
pop
std
mov
mov
popf
stos
int3
sub
fsub
out
pusha
sar
and
in
sub
push
es
mov
dec
xor
in
out
outs
(bad)
pop
ins
jbe
ins
and
adc
inc
inc
loop
and
das
ret
xor
push
push
rcl
sbb
dec
es
add
inc
out
(bad)
and
pop
jecxz
ins
call
push
sub
inc
fs
xchg
out
ja
mov
out
push
mov
inc
(bad)
out
push
jmp
stos
or
fcomip
ja
sbb
jecxz
hlt
ds
sub
fwait
mov
call
out
mov
das
fldcw
push
and
mov
mov
popa
shr
jmp
xor
sti
(bad)
(bad)
dec
pop
addr16
call
mov
push
retf
fldenv
cmps
(bad)
fcomip
cmp
adc
push
cdq
mov
(bad)
and
inc
jne
cmc
dec
inc
retf
shl
cmp
dec
jo
movs
pop
sub
out
daa
movs
imul
lods
out
lahf
lods
xlat
(bad)
mov
lock
fdivr
dec
sub
dec
jg
pop
enter
mov
out
or
add
push
scas
dec
std
loop
popa
mov
sub
div
push
cmps
inc
pop
test
fadd
stos
jg
call
xor
fimul
and
fidivr
push
das
xor
dec
jbe
jns
inc
js
adc
cmp
retf
dec
add
mov
sahf
outs
cmc
test
pushf
repnz
rol
xchg
rcl
ins
add
loop
movs
pop
outs
shld
lods
pop
push
in
dec
xor
fs
mov
pop
sti
sbb
fisub
aad
pop
dec
ss
(bad)
cmc
out
js
mov
push
mov
dec
mov
addr16
or
ffreep
imul
sbb
fisttp
(bad)
cmps
test
dec
push
mov
mov
add
push
add
out
mov
cli
mov
ror
popa
mov
inc
out
fsub
stos
or
popa
or
pop
sbb
push
lds
pop
mov
shr
das
in
and
idiv
add
jmp
add
mov
mov
test
cmp
inc
cld
dec
push
dec
lods
xor
mov
mov
mov
sub
mov
call
sub
pop
popa
mov
cmp
int
nop
sub
repnz
out
scas
or
test
jmp
imul
and
addr16
push
jae
inc
dec
dec
adc
test
xchg
mov
mov
jmp
cwde
pop
fsubrp
ret
sub
scas
rcr
shl
xor
in
in
pop
scas
clc
add
sbb
mov
lods
push
lods
mov
cs
push
test
or
adc
ins
and
push
test
daa
shl
and
xor
out
add
dec
rcl
mov
jae
loope
sti
mov
movs
push
out
mov
jle
dec
or
jbe
xchg
pop
rcr
dec
lods
add
mov
jle
jno
xor
push
rcl
icebp
pop
mov
mov
inc
cs
movs
xor
mov
fcomp
(bad)
aad
dec
adc
and
test
xlat
cmc
add
inc
movs
pop
inc
and
test
pop
jmp
int
xor
sbb
jb
gs
addr16
es
es
mov
mov
ins
cmp
or
sbb
pop
mov
repnz
in
fsubr
clc
(bad)
(bad)
(bad)
fsub
adc
stos
mov
dec
je
sbb
add
loope
xor
or
mov
call
sahf
lahf
shl
pushf
loopne
or
fs
call
(bad)
(bad)
push
fild
push
stos
or
stos
pusha
sub
out
add
rcr
ds
push
jmp
retf
or
adc
scas
lods
dec
or
adc
fidivr
das
clc
and
inc
and
sub
sahf
cwde
or
inc
and
lods
sbb
mov
mov
or
push
jmp
dec
pop
call
sbb
and
push
sbb
movs
cmp
dec
pop
jae
push
mov
mov
and
outs
lods
pop
inc
pop
cdq
stos
lock
mov
lds
pop
inc
movs
add
jmp
retf
cmc
dec
jge
mov
movs
ins
popa
inc
xor
aad
jg
and
inc
pop
cmp
or
pop
scas
shl
fwait
xchg
fwait
push
out
jmp
jmp
lods
les
adc
imul
(bad)
sub
daa
int
adc
pop
push
dec
in
lock
push
or
arpl
dec
fs
pop
(bad)
xor
mov
xchg
cmp
push
pop
cld
(bad)
mov
adc
in
call
out
stos
ret
pop
data16
push
jg
inc
jmp
rcr
rcr
add
cwde
jnp
lea
xor
movs
jmp
pop
ins
sbb
inc
jmp
push
jo
jo
xor
and
add
nop
retf
(bad)
mov
cmp
mov
sub
cwde
fcomp
scas
jb
and
pop
icebp
(bad)
and
pop
mov
sbb
ins
jmp
test
fisttp
outs
push
and
and
arpl
pop
in
lock
sub
fdiv
dec
sahf
in
fwait
mov
add
mov
sub
push
jno
push
mov
mov
dec
scas
pop
mov
nop
dec
mov
mov
hlt
dec
push
retf
pop
xchg
mov
dec
dec
add
dec
test
or
jg
mov
push
call
pop
fimul
pop
inc
dec
retf
in
outs
inc
sub
scas
xchg
pop
pop
dec
mov
clc
dec
rcr
mov
pop
and
xor
out
popa
cmp
or
das
pusha
sar
cmp
imul
jb
outs
cmc
cs
mov
popf
and
(bad)
std
in
int
xchg
mov
pop
cmp
sbb
dec
out
fmul
outs
jb
loope
or
retf
sahf
cmp
lods
push
mov
in
push
aaa
add
jg
pop
(bad)
dec
pop
cmps
ins
fbld
or
cwde
inc
shl
cli
call
add
mov
dec
lahf
call
aam
pop
popf
sbb
push
jle
out
imul
or
clc
jg
sbb
sub
pop
inc
pop
movs
data16
fld
cmps
pop
push
icebp
dec
pop
pusha
addr16
lahf
push
fsubr
mov
push
cmp
fldenv
mov
adc
cs
cli
call
pop
adc
xchg
scas
cli
or
scas
lock
cmps
ds
and
pop
dec
movs
dec
dec
imul
or
push
push
cmp
aam
push
in
lock
in
inc
adc
inc
(bad)
std
ins
lds
inc
pop
scas
enter
int
mov
fisub
out
outs
(bad)
das
cld
popa
frstor
and
in
sub
loop
jecxz
scas
int3
call
lock
into
movs
pop
out
and
sbb
popf
(bad)
fcomip
scas
cs
ins
jl
dec
outs
push
inc
(bad)
jb
xor
add
rcl
mov
sti
(bad)
je
stos
ret
add
movs
lods
and
sub
inc
mov
dec
jmp
dec
ins
mov
sub
in
cld
jmp
fs
dec
mov
sar
pop
ror
std
jle
(bad)
scas
(bad)
jmp
dec
mov
sbb
repz
stos
mov
cmp
push
std
stc
jmp
dec
pop
cmps
cdq
mov
lods
mov
push
scas
mov
inc
js
mov
sub
push
in
ja
sbb
pshufw
sub
ins
and
inc
mov
shl
nop
shl
sbb
imul
jg
xchg
rcr
pop
stos
cld
dec
inc
int3
pop
or
jmp
and
(bad)
mov
ins
ins
push
cmp
fild
fsub
dec
sbb
dec
ins
aaa
pop
cmp
pop
sub
push
pop
int3
push
push
mov
push
mov
iret
out
pusha
popf
mov
jns
pop
stc
mov
mov
out
pop
out
(bad)
and
aaa
mov
mov
pop
or
divps
cld
movs
retf
mov
fisubr
movs
mov
jbe
sbb
addr16
lods
je
inc
add
rcl
js
popf
mov
dec
pushf
daa
and
xchg
add
mov
lock
(bad)
(bad)
mov
cmp
in
cmps
cld
pusha
or
mov
imul
in
sbb
sbb
mov
push
out
dec
push
cmp
sub
lea
jmp
test
and
scas
pop
aam
jnp
outs
pop
adc
inc
dec
frstor
mov
adc
movs
outs
sub
aaa
add
push
into
retf
fnstsw
mov
xchg
out
les
jns
or
rol
js
sub
lds
mov
fsub
dec
loopne
lea
mov
lahf
mov
clc
stos
dec
sbb
stc
imul
cmp
and
jge
adc
test
jo
pusha
movs
jp
jge
jmp
push
mov
mov
popa
adc
cmps
out
mov
(bad)
pop
sbb
das
in
nop
and
pop
push
ret
jo
mov
inc
pop
sub
test
jo
inc
pop
(bad)
mov
popf
movs
mov
and
sub
movs
(bad)
inc
sub
cmp
jmp
pop
mov
idiv
stos
int
aad
(bad)
fisttp
fs
and
jl
std
or
jle
rol
loop
lods
add
outs
pop
(bad)
jg
and
jmp
xchg
xor
clc
cmps
dec
pop
and
cmp
scas
retf
push
and
(bad)
in
adc
cli
push
cmp
jbe
stos
cmp
out
mov
push
mov
pop
dec
out
loope
mov
and
inc
bound
push
dec
lods
dec
scas
sbb
dec
sub
(bad)
(bad)
mov
push
jge
xchg
retf
pop
jnp
push
pop
sahf
int
inc
sub
add
dec
shl
push
out
cmps
ins
(bad)
cli
imul
fisttp
int3
cmc
cmp
repnz
cmp
inc
mov
jo
inc
inc
rol
mov
mov
xor
adc
scas
test
push
clc
dec
mul
sbb
xchg
mov
ret
in
(bad)
dec
ror
clc
arpl
add
push
std
sar
and
add
call
or
xchg
jo
or
push
mov
dec
cmp
mov
es
xor
int
pop
dec
or
ds
sar
(bad)
sti
xchg
(bad)
mov
bound
fidiv
dec
cmp
and
call
pop
and
xchg
push
enter
ror
push
(bad)
(bad)
fist
ins
jge
dec
(bad)
ret
call
fadd
jmp
jg
call
cmc
bound
dec
jne
sti
mov
ja
push
pop
dec
int
mov
pop
mov
out
fisubr
clc
(bad)
jns
add
xor
(bad)
(bad)
mov
fs
add
add
inc
mov
sbb
lods
ja
(bad)
jmp
push
xor
mov
and
pop
imul
inc
mov
cmp
(bad)
jmp
jnp
pop
adc
mov
or
imul
sar
sbb
pop
mov
xchg
cld
adc
in
(bad)
out
and
cwde
inc
stc
mov
icebp
jecxz
adc
repz
(bad)
stc
inc
mov
xchg
and
or
sub
arpl
lahf
inc
call
dec
or
lods
mov
pop
adc
xchg
inc
ror
push
mov
mul
frstor
pop
or
(bad)
call
fcmovnbe
fidiv
xchg
or
mov
rol
sbb
jmp
out
dec
or
idiv
in
or
jmp
inc
add
shl
xor
pop
ret
xor
cmp
(bad)
(bad)
(bad)
mov
cli
or
xchg
or
add
rep
push
mov
cmp
and
jne
pop
xor
pop
(bad)
(bad)
dec
jbe
mov
cwde
idiv
(bad)
std
movs
xchg
mov
xor
nop
scas
xchg
nop
int3
jmp
ficomp
inc
clc
(bad)
(bad)
mov
push
pop
das
xor
adc
push
mov
push
and
and
push
xchg
call
mov
or
test
xor
call
inc
stos
jne
gs
leave
pusha
push
pop
pop
sahf
mov
pop
gs
aaa
add
(bad)
(bad)
(bad)
jmp
or
push
sbb
(bad)
in
or
dec
popf
mov
daa
in
sub
aaa
retf
idiv
ja
loop
pop
mov
xchg
enter
jae
clc
push
add
xlat
cdq
cmp
(bad)
aad
pop
bound
adc
in
sar
sub
jg
mov
pop
das
jmp
pop
inc
push
adc
(bad)
call
fistp
add
inc
(bad)
sti
stos
cli
add
hlt
push
inc
inc
ret
ins
push
ins
repz
dec
fdivp
lds
sbb
(bad)
in
movs
jg
icebp
push
sbb
lds
and
adc
xchg
sbb
(bad)
das
or
push
sub
jmp
(bad)
(bad)
(bad)
stc
push
jl
ret
lods
fidivr
test
xchg
mov
jo
addr16
jg
xchg
pop
push
call
out
retf
and
cmp
xchg
jmp
cs
and
push
pushf
mov
and
fs
call
les
ins
mov
push
xor
adc
ror
in
outs
push
sbb
jg
(bad)
(bad)
fld
xor
outs
push
fld
(bad)
in
cs
repnz
xchg
pop
push
fldpi
pop
(bad)
loopne
inc
sbb
repz
ja
jmp
push
js
fwait
sbb
(bad)
jg
dec
sbb
sub
cmp
mov
push
push
daa
push
out
pop
cld
(bad)
inc
pop
ss
mov
ss
in
push
cmps
shl
cld
(bad)
(bad)
inc
mov
push
jb
add
xchg
xor
mov
cmps
imul
mov
push
xlat
test
sti
(bad)
(bad)
jmp
aam
mov
adc
jg
sbb
fidivr
ins
cmp
mov
pop
inc
dec
xor
ffreep
(bad)
inc
out
push
xor
clc
pop
sbb
shr
jecxz
or
(bad)
(bad)
jmp
in
sub
xchg
xor
pop
add
add
ror
sub
jg
cmps
sbb
pop
in
loope
cmps
cmps
pusha
(bad)
call
loopne
dec
jecxz
(bad)
in
in
sbb
js
mov
pop
int3
push
dec
jmp
jmp
jo
imul
test
ss
pop
outs
neg
jmp
jg
movs
push
pop
add
scas
cmc
int
not
adc
mov
sub
test
shl
dec
fldcw
data16
mov
jmp
out
not
(bad)
jnp
inc
and
dec
or
(bad)
call
pop
ss
inc
imul
mov
push
into
pop
lods
dec
test
outs
push
clc
inc
and
jnp
(bad)
jmp
add
movs
sbb
mov
xchg
mov
cmp
sbb
mov
data16
fsubrp
pop
pop
sbb
out
add
je
adc
pop
dec
pop
sub
ret
rol
lock
mov
inc
into
pop
sub
hlt
dec
lahf
inc
jo
cmp
(bad)
(bad)
dec
jecxz
and
int
std
ss
into
enter
out
enter
loope
xchg
leave
and
aam
pop
lods
push
fiadd
pop
repz
xchg
je
ja
inc
(bad)
(bad)
push
lods
mov
iret
pop
es
jecxz
int
scas
test
iret
fsubp
rcr
cld
mov
pushf
fimul
sar
sbb
test
aas
xor
adc
in
mov
mov
cli
dec
xchg
sbb
add
(bad)
(bad)
push
mov
dec
je
cmp
adc
jnp
into
sub
imul
sar
imul
adc
out
jg
sub
out
pop
and
xchg
cmc
imul
frstor
push
cdq
sub
inc
and
sar
and
and
jae
ja
xchg
pop
ret
out
call
xchg
jb
ins
in
gs
jmp
and
adc
inc
(bad)
(bad)
(bad)
(bad)
fisubr
loopne
dec
mov
inc
and
js
jae
push
retf
push
cwde
sub
loope
jmp
sub
in
arpl
sbb
vpsubb
add
pop
in
stos
xchg
fst
mov
sbb
popf
sar
jmp
push
mov
shr
in
inc
mov
in
aas
mov
add
mov
das
lock
dec
adc
cmp
iret
fwait
ss
adc
mov
(bad)
(bad)
jmp
les
outs
leave
lods
retf
out
and
fcom
out
outs
test
and
scas
push
push
mov
stos
inc
clc
(bad)
jmp
hlt
xlat
xor
arpl
sub
push
std
and
popf
dec
pop
sar
(bad)
call
loopne
repnz
mov
cmp
(bad)
fwait
scas
pop
mov
(bad)
das
mov
(bad)
stc
jg
and
clc
retf
push
call
dec
mov
push
jae
imul
ds
retf
(bad)
pop
in
xchg
(bad)
push
mov
mov
pop
mov
pop
je
(bad)
pop
lahf
pop
fist
cmp
dec
dec
pop
jl
test
retf
cdq
add
inc
push
jg
fdiv
rol
mov
mov
rcr
addr16
sub
pop
std
push
fld
lods
jmp
mov
sar
test
sbb
ss
jg
sub
pop
movs
dec
daa
pop
stos
add
retf
movs
pop
fisub
clc
mov
and
mov
aaa
stos
test
ds
cld
push
push
mov
sub
fidivr
icebp
(bad)
(bad)
push
mov
inc
movs
sar
lods
cmp
pop
rcl
(bad)
call
xchg
sub
and
lea
mov
pop
nop
mov
xchg
cmc
scas
jmp
mov
pop
scas
icebp
pop
fcom
mov
inc
(bad)
in
or
pop
(bad)
ror
fwait
mov
pop
dec
pop
pop
(bad)
(bad)
(bad)
dec
pop
pop
ss
mov
lea
(bad)
cmps
xor
sbb
pop
test
mov
outs
cli
xor
ror
dec
pop
test
rcr
and
inc
and
cld
jmp
pop
dec
(bad)
loope
push
mov
sar
fst
pop
sbb
mov
sti
or
ror
mov
loope
fbld
push
mov
sub
cmp
inc
mov
imul
or
add
sbb
inc
in
out
pop
inc
lods
(bad)
(bad)
(bad)
jmp
mov
sub
bound
gs
test
test
bound
pop
mov
sar
(bad)
mov
pop
or
fnstenv
lods
pop
movs
mov
xchg
or
fild
das
cld
sar
pop
add
push
sub
push
stos
scas
clc
jmp
pop
fstp
inc
psrlq
push
nop
retf
xchg
mov
(bad)
cmp
fmul
shl
dec
loope
test
push
or
jmp
push
push
mov
popa
dec
cs
retf
out
jg
(bad)
popa
and
mov
jmp
not
addr16
xchg
adc
mov
or
jecxz
es
dec
jecxz
inc
xchg
adc
out
loopne
fimul
retf
(bad)
jmp
xchg
sub
aam
sbb
int
(bad)
mov
or
sub
(bad)
sub
mov
int3
and
adc
fidivr
ror
mov
pushf
sub
dec
sub
stos
sub
or
jg
in
addr16
out
movs
jecxz
jecxz
out
jmp
out
inc
dec
(bad)
out
mov
loop
dec
lods
jle
dec
call
fild
dec
stc
pop
sar
ret
clc
jmp
or
xchg
shl
pop
mov
push
xor
fisttp
scas
xchg
pop
call
mov
mov
inc
jo
pop
jmp
je
fwait
dec
std
inc
sbb
icebp
lods
sbb
jo
scas
and
clc
hlt
or
pop
cmp
scas
mov
jb
push
call
inc
xor
inc
mov
push
mov
xor
out
clc
jmp
push
push
ds
sub
bound
fiadd
xchg
and
(bad)
jmp
nop
mov
fdivr
jb
lods
movs
ins
mov
inc
inc
xor
add
pop
stc
(bad)
int
test
mov
out
sub
stos
xchg
mul
add
(bad)
push
xchg
adc
push
or
(bad)
(bad)
jmp
mov
rol
xchg
nop
into
jp
fld
mov
std
int
cs
mov
rcl
(bad)
jg
and
jg
idiv
adc
andnps
movs
add
jg
push
mov
(bad)
fnstsw
daa
clc
adc
jg
xor
and
es
mov
shr
add
cdq
xchg
jno
or
imul
or
(bad)
call
nop
lods
cmp
push
pop
jb
dec
mov
push
das
fcmovnbe
and
inc
std
mov
pop
cmps
pop
cwde
js
jmp
pop
scas
rol
ins
push
cli
jno
ret
cdq
jns
cmp
mov
mul
push
(bad)
aam
xchg
inc
mov
adc
(bad)
out
inc
out
jecxz
les
pop
and
sbb
out
jbe
inc
add
stc
(bad)
call
inc
fadd
jecxz
(bad)
jo
mov
jecxz
call
add
or
(bad)
mov
mov
ins
mov
pop
inc
retf
repnz
adc
(bad)
jg
pop
pop
lock
lock
pusha
mov
popa
in
ins
into
cmps
ja
dec
pushf
sbb
jg
cwde
out
fst
add
clc
sahf
mov
xor
push
cli
mov
xlat
sbb
das
sub
mov
xchg
ret
mov
dec
jg
inc
xchg
mov
inc
rcl
cmps
fild
lock
loopne
inc
test
mov
shr
adc
clc
call
inc
inc
sbb
push
aas
jmp
adc
mov
pandn
dec
push
cld
mov
sbb
call
jge
movd
xchg
pop
inc
push
inc
xchg
outs
mov
stos
out
fldcw
cmovl
mov
and
sbb
sub
je
mov
mov
cli
(bad)
(bad)
push
or
jb
mov
mov
sub
sbb
std
loopne
or
retf
ins
icebp
rol
out
mov
push
add
scas
leave
dec
les
cwde
sbb
mov
mov
pop
jle
(bad)
(bad)
(bad)
(bad)
fucomip
pop
int3
into
sbb
and
mov
retf
retf
cwde
jl
ds
jbe
cli
jae
pop
dec
add
outs
adc
js
aaa
mov
je
scas
push
and
call
je
adc
iret
xlat
cld
mov
cmp
imul
clc
dec
(bad)
in
loopne
sbb
adc
or
jl
push
dec
ins
(bad)
in
imul
(bad)
jmp
out
in
dec
ins
leave
pop
pop
fcmove
stos
pop
mov
fnstsw
dec
mov
sbb
and
sbb
sub
je
dec
adc
jmp
call
mov
fimul
(bad)
fbstp
leave
inc
mov
ds
or
push
sbb
mov
push
lods
(bad)
add
xchg
(bad)
in
jmp
or
in
and
stos
jmp
jl
cmp
add
cmp
jmp
nop
lahf
js
adc
call
jle
mov
in
out
pop
fistp
sub
fld
cld
(bad)
mov
sbb
or
sbb
mov
(bad)
lea
dec
mov
add
(bad)
(bad)
jmp
ss
add
cmp
push
(bad)
jle
test
stos
xchg
add
sti
in
cmc
xlat
bound
add
push
ret
cmp
(bad)
jnp
sar
(bad)
fcomp
test
ins
jl
xor
adc
aaa
mov
imul
stos
(bad)
(bad)
(bad)
(bad)
cmp
jo
inc
cmp
sbb
mov
popf
cwde
mov
sahf
inc
jnp
mov
mov
(bad)
jmp
lods
je
sbb
jb
das
adc
push
pop
mov
aas
jecxz
sbb
call
out
int
(bad)
(bad)
push
cld
shl
jmp
dec
fidivr
test
push
push
pushf
mov
cli
pop
sub
shl
dec
fsubr
jb
ror
(bad)
call
(bad)
je
and
stos
fld
lods
push
shl
jge
(bad)
(bad)
(bad)
inc
in
push
mov
imul
cmc
xor
xchg
or
mov
loopne
scas
rol
dec
mov
scas
ja
xchg
mov
sar
(bad)
jmp
sahf
add
dec
jb
jmp
mov
lahf
fidivr
ins
sub
std
(bad)
dec
mov
mov
fdiv
dec
xchg
cmc
fsub
(bad)
call
mov
and
fwait
pop
cmp
push
mov
(bad)
call
call
sub
cmp
sbb
fstp
dec
pusha
stos
jo
stos
push
ret
pushf
dec
stos
dec
add
movs
mov
loope
(bad)
mov
sbb
cwde
lahf
mov
cs
push
stos
inc
mov
push
sahf
rol
or
stos
jg
push
pushf
or
scas
repnz
mov
pushf
sbb
(bad)
call
sbb
jmp
mov
mov
cmp
push
mov
dec
out
or
data16
pop
sub
fcomip
push
sbb
pop
mov
xor
mov
loope
jecxz
aaa
push
rcl
pop
aam
push
jmp
mov
cld
jbe
cwde
jmp
fcmovu
pop
cmp
(bad)
jmp
stos
inc
sub
xchg
pop
retf
push
shl
scas
add
cwde
or
sbb
or
or
cli
sub
push
cli
jp
xlat
pop
pop
data16
retf
retf
(bad)
retf
loop
sti
stos
fidivr
jle
(bad)
dec
mov
lahf
mov
push
dec
adc
dec
imul
stos
mov
push
cmp
js
dec
sbb
jae
push
xchg
or
or
sub
mov
retf
adc
fimul
pop
hlt
dec
fisttp
sub
fidivr
sbb
stos
or
mov
push
push
cmp
stos
fwait
pop
jmp
push
fisttp
jmp
sbb
or
sub
test
sbb
pop
(bad)
call
mov
movs
les
mov
sbb
or
imul
pop
jmp
push
sbb
jmp
mov
cmp
(bad)
mov
and
push
arpl
retf
(bad)
(bad)
mov
cli
dec
mov
pop
pop
or
or
(bad)
(bad)
call
dec
dec
stos
sbb
movs
lds
or
mov
mov
mov
mov
sbb
shr
cmp
fwait
outs
sub
sahf
dec
push
dec
test
sub
call
adc
retf
mov
ds
fstp
repnz
fwait
jmp
sbb
imul
cmp
dec
ret
fiadd
mov
inc
mov
pop
cmp
(bad)
call
imul
out
dec
jmp
jp
stos
mov
inc
fidivr
jmp
fdivp
jp
push
cmp
retf
mov
pop
mov
dec
std
dec
mov
sbb
int
fstp
mov
(bad)
jp
mov
dec
sbb
(bad)
mov
or
dec
imul
dec
loopne
sbb
(bad)
fdivr
inc
stos
sbb
or
test
jmp
out
mov
inc
mov
cmps
mov
jl
mov
ins
fisub
movs
jecxz
movs
add
mov
scas
outs
(bad)
in
stos
movs
xor
call
fwait
add
and
imul
test
mov
or
int3
mov
jmp
clc
pop
mov
enter
sub
inc
dec
cmp
pushf
mov
jmp
cli
inc
mov
mov
sbb
out
movs
xor
xor
inc
lahf
jno
ja
ret
pop
retf
mov
cmp
adc
mov
mov
cwde
sbb
(bad)
out
sar
or
fneni(8087
mov
pop
pop
lods
dec
retf
mov
rcr
(bad)
clc
aas
movs
sub
sbb
sbb
movs
fs
or
call
lock
dec
es
mov
fnstcw
movs
and
mov
xchg
pop
pop
add
sahf
cdq
ins
xchg
(bad)
fadd
out
movs
jp
jg
(bad)
call
xchg
(bad)
movs
ds
mov
test
xchg
mov
(bad)
push
into
pop
rol
stc
sahf
fcmovnb
cmp
movs
pop
inc
pop
xlat
push
sub
dec
pop
fisubr
dec
retf
fstp
mov
adc
pop
sub
(bad)
adc
(bad)
(bad)
jmp
repz
out
pop
sbb
ficomp
jmp
fwait
jg
or
retf
in
mov
ror
stos
dec
fstp
fisttp
(bad)
(bad)
(bad)
(bad)
cmp
cld
push
cdq
cdq
or
enter
daa
jbe
sbb
stc
sub
enter
imul
outs
clc
inc
aaa
add
adc
fisubr
sub
sbb
popa
icebp
jg
sbb
pop
popa
adc
movs
mov
pop
ficomp
or
jmp
inc
(bad)
sub
sti
fstp
(bad)
(bad)
jg
sti
add
stos
enter
sbb
pop
fstp
jb
inc
mov
mov
std
in
dec
mov
jg
(bad)
fild
mov
retf
xlat
movs
(bad)
pop
inc
adc
mov
cmps
and
dec
(bad)
(bad)
(bad)
(bad)
jmp
push
push
push
jmp
scas
retf
shl
movs
push
enter
lock
daa
ins
add
test
retf
(bad)
xor
cwde
dec
sbb
pop
or
jmp
pop
cs
dec
pop
in
int3
mov
dec
jl
push
jmp
pop
call
cmp
retf
ja
mov
dec
dec
xchg
ss
dec
hlt
jmp
jle
mov
or
cdq
jo
rcl
mov
call
cdq
ficom
stc
dec
ficomp
jp
test
or
dec
sbb
dec
js
sbb
fsubr
dec
cdq
xlat
pop
fisub
stos
mov
or
cmps
stos
mov
xchg
jle
outs
jmp
jp
add
sbb
mov
lods
retf
movs
push
lods
inc
mov
(bad)
(bad)
mov
lea
movs
pop
add
dec
sub
scas
jmp
inc
call
or
inc
inc
pop
fdiv
call
inc
jmp
call
pop
retf
call
fdivp
shl
sbb
or
mov
movs
test
imul
aad
cli
rol
shl
(bad)
call
or
jb
adc
cmp
mov
and
outs
(bad)
movs
xlat
call
mov
mov
xlat
fidivr
scas
aam
push
dec
mov
call
cmp
pop
jmp
or
leave
or
xchg
loopne
or
push
pop
or
movs
push
jmp
mov
cli
cmps
or
stos
fisttp
mov
fcmove
sub
cmp
inc
sbb
(bad)
(bad)
in
mov
jp
inc
icebp
rcr
and
retf
or
das
cmp
rcl
rcl
mov
nop
mov
dec
sub
fwait
and
xchg
cmp
cmp
imul
fwait
je
push
fcom
mov
jmp
inc
dec
xor
std
push
jmp
scas
jg
clc
inc
ficomp
out
push
mov
loopne
je
add
bound
lahf
es
les
pop
rcr
pop
mov
jmp
cwde
movs
inc
sbb
inc
pop
movs
call
mov
cmp
fdivr
jmp
daa
mov
lds
xchg
inc
pop
clc
call
mov
js
hlt
scas
sbb
cmps
jle
jmp
mov
jmp
mov
dec
and
(bad)
mov
mov
fbld
and
jp
test
cs
stc
aaa
rol
jmp
test
sti
push
and
mov
test
push
sub
clc
(bad)
inc
imul
jnp
jb
and
xchg
movs
rcl
jne
mov
ja
retf
cli
sub
vpshaw
sar
pop
cmps
mov
mov
(bad)
cmp
rcr
sub
sbb
(bad)
call
add
adc
pushf
pop
fiadd
imul
mov
pop
cld
mov
fldcw
dec
(bad)
(bad)
and
cmps
jmp
add
fiadd
mov
add
test
sub
jnp
dec
test
fs
outs
add
mov
cmp
jecxz
(bad)
jmp
test
js
jge
push
imul
inc
sti
sub
aaa
std
(bad)
mov
inc
int3
push
das
int3
mov
gs
cmc
mov
dec
adc
mov
mov
jp
fucomi
clc
cs
pop
sbb
enter
fmul
dec
ret
stos
test
fld
pop
cmp
or
or
pop
inc
sub
mov
out
push
ins
lods
retf
mov
mov
fisubr
mov
cmp
fcmovbe
mov
dec
jmp
cmp
xor
hlt
jmp
sub
fmul
pop
mov
mov
or
and
fimul
dec
or
dec
dec
test
stos
cmp
mov
fnstcw
sbb
cmc
push
pop
cmp
repnz
out
mov
or
ds
(bad)
jmp
repz
aam
pinsrw
xor
outs
inc
test
fs
test
(bad)
(bad)
mov
jp
sub
out
xchg
aas
mov
sbb
mov
fbstp
jbe
pop
or
push
call
outs
call
outs
cdq
pop
mov
ror
imul
push
std
jmp
(bad)
mul
mov
leave
sbb
test
mov
sub
stos
xlat
add
or
enter
add
or
scas
(bad)
(bad)
jg
inc
fsubr
mov
xchg
push
mov
repnz
in
loop
push
sub
mov
jne
cli
or
jle
test
pandn
pop
jo
add
jg
imul
lahf
cli
dec
jg
cmp
mov
(bad)
gs
jl
clc
mov
dec
jns
add
jns
cwde
retf
pop
pop
rol
jle
dec
inc
mov
lahf
cwde
sub
jnp
call
sub
dec
pop
loope
pushf
popf
dec
mov
jmp
test
mov
repz
push
cmp
mov
cdq
jle
pop
cmps
sbb
or
fwait
fwait
cwde
mov
cmp
jmp
sub
stos
push
popa
or
inc
adc
fs
sub
(bad)
(bad)
fisttp
add
(bad)
jle
fild
outs
dec
in
dec
js
or
(bad)
(bad)
inc
add
push
mov
jp
jge
mov
mov
(bad)
inc
sub
push
loope
popa
scas
cli
movs
or
dec
adc
mov
xchg
ins
mov
add
mov
(bad)
dec
push
fisubr
add
cmp
call
sbb
add
(bad)
(bad)
inc
mov
dec
dec
fldenv
lods
out
clc
fwait
dec
sbb
test
test
dec
adc
pop
loop
cld
xchg
(bad)
(bad)
(bad)
cmp
push
sub
jb
cmp
xchg
inc
pop
push
sbb
sbb
sub
nop
push
jo
cdq
xor
(bad)
(bad)
(bad)
(bad)
cmp
xor
sbb
and
test
fist
inc
mov
xchg
push
add
cwde
sub
clc
pop
sub
dec
adc
scas
cmp
cmc
ret
pop
dec
cmp
mov
outs
scas
mov
sti
sub
or
sti
cmp
jmp
and
(bad)
(bad)
(bad)
mov
cs
nop
adc
retf
inc
add
fdivr
pop
fnstcw
popa
add
jmp
adc
scas
sbb
sub
dec
pop
stc
add
stos
inc
fidivr
cmp
ffree
test
pop
(bad)
js
dec
mov
mov
movs
mov
imul
dec
mov
xchg
push
fistp
mov
loopne
jg
push
and
sub
xchg
mov
retf
inc
jle
dec
mov
cmp
sub
or
or
xor
repz
into
in
dec
bound
clc
jnp
push
lahf
je
fisttp
pop
enter
retf
push
lods
mov
dec
repnz
jecxz
in
jl
adc
pop
lods
jmp
into
(bad)
jmp
xchg
mov
or
and
mov
test
movs
inc
mov
add
mov
fiadd
fidiv
(bad)
mov
xlat
add
mov
pop
pop
add
or
scas
scas
(bad)
push
or
(bad)
jp
mov
dec
lods
dec
faddp
mov
sbb
mov
inc
add
fdivr
or
xchg
mov
(bad)
jg
(bad)
out
lds
ds
sub
into
cmp
test
je
sub
dec
loopne
jmp
(bad)
pop
(bad)
pop
mov
ja
and
(bad)
(bad)
dec
enter
imul
add
or
cmps
imul
scas
push
add
fcmovu
rol
inc
loopne
mov
clc
inc
add
das
and
push
pop
jne
fisubr
movs
push
outs
mov
dec
cmp
arpl
(bad)
jg
cmp
aaa
mov
(bad)
jbe
jge
and
cmp
sub
(bad)
jmp
inc
cmp
push
pop
mov
call
fisttp
inc
jmp
pop
mov
inc
mov
pusha
lock
sub
loop
mov
push
sti
cmp
fs
clc
(bad)
(bad)
(bad)
(bad)
imul
scas
mov
outs
jl
or
iret
dec
push
imul
sub
(bad)
inc
stos
sbb
retf
loop
or
jne
dec
fstp
mov
mov
retf
stc
dec
data16
mov
dec
fwait
dec
push
fwait
(bad)
jmp
add
sub
fisubr
push
(bad)
jl
or
jp
call
dec
or
adc
push
and
pop
pop
(bad)
(bad)
(bad)
call
retf
mov
xchg
jmp
dec
cli
mov
cmp
dec
loope
test
jmp
dec
jmp
stc
mov
pop
or
leave
mov
stos
(bad)
(bad)
jne
imul
enter
retf
sub
mov
push
shl
(bad)
and
cli
inc
mov
or
jg
ja
nop
mov
cmp
dec
mov
pushf
pop
frstor
icebp
jg
or
rol
mov
or
pop
or
adc
push
(bad)
jmp
push
mov
pop
inc
xor
fimul
push
sub
pop
and
cdq
repz
mov
mov
rol
lods
inc
pop
inc
push
pop
jmp
push
imul
cli
out
push
inc
lods
js
jmp
clc
jmp
pop
test
int3
test
pop
fidivr
cmp
sub
ret
xchg
cli
xchg
pop
clc
(bad)
retf
(bad)
mov
or
inc
es
push
sub
mov
or
jmp
dec
cmp
loope
movs
push
stos
std
(bad)
(bad)
jmp
fwait
inc
repnz
mov
jmp
enter
sbb
or
(bad)
fisttp
into
jns
movs
jne
add
int
js
loop
ds
movs
or
pop
fimul
cld
sbb
mov
xchg
popa
in
sbb
xchg
ss
(bad)
lods
jg
js
sar
fistp
pop
cmp
fdiv
mov
(bad)
(bad)
fbld
or
mov
adc
in
mov
imul
cld
or
sub
jno
inc
out
sub
mov
jg
jb
stos
sti
mov
pop
clc
push
clc
sub
jg
mov
dec
sbb
jnp
repnz
sar
mov
mov
clc
sub
push
call
addr16
sbb
sub
test
pop
xor
mov
jmp
ret
stos
clc
retf
mov
sbb
inc
in
loopne
sbb
retf
popa
or
dec
pop
pop
xchg
add
and
enter
retf
call
xlat
fbld
in
movs
aam
sahf
push
fistp
hlt
mov
shl
jne
enter
add
fsubr
push
jmp
push
mov
pop
cli
jp
scas
test
or
lock
test
adc
or
push
mov
sbb
stos
lods
mov
jmp
(bad)
jmp
add
lods
movs
push
mov
icebp
jg
pushf
sahf
jns
cli
sbb
call
mov
cmp
inc
(bad)
das
fisub
stc
jmp
mov
mov
(bad)
(bad)
inc
loopne
call
outs
or
or
rol
loopne
mov
mov
scas
test
fwait
and
jmp
jmp
fist
enter
mov
inc
adc
retf
ret
fistp
outs
adc
fild
xchg
sbb
(bad)
(bad)
(bad)
call
retf
xchg
mov
clc
inc
push
inc
fidivr
push
add
jmp
lods
dec
add
mov
jmp
jmp
cs
xchg
or
aaa
cld
dec
sub
ret
pop
inc
(bad)
cli
pop
retf
dec
(bad)
and
and
(bad)
(bad)
mov
setp
pop
mov
ins
adc
(bad)
pop
xchg
je
das
test
cdq
movs
cmp
sbb
shr
pop
push
imul
cmp
sbb
(bad)
dec
push
push
pop
imul
pop
cld
jg
push
push
sbb
fcmovb
fdivrp
cmps
(bad)
(bad)
fld
mov
(bad)
stc
cmp
cld
jl
sub
push
movs
scas
sar
(bad)
call
inc
xlat
(bad)
mov
fbld
outs
or
movs
pop
mov
mov
pop
and
mov
sbb
movs
dec
inc
and
sar
sub
scas
in
movs
cdq
mov
jmp
outs
inc
jno
or
push
(bad)
(bad)
(bad)
jg
stos
out
mov
add
mov
dec
icebp
mov
loop
adc
std
retf
movs
enter
(bad)
(bad)
(bad)
inc
mov
adc
daa
ja
mov
jl
retf
cmps
adc
adc
outs
out
in
movs
push
sar
dec
cli
test
test
rcl
gs
pusha
call
add
jge
jmp
add
xor
sbb
mov
clc
jmp
sti
sti
imul
mov
or
gs
(bad)
inc
fdivr
push
test
push
push
pop
push
sbb
sbb
sub
out
in
push
xchg
je
jmp
jnp
ja
mov
mov
push
sub
cmp
mov
sub
cmp
pop
lock
sbb
call
idiv
arpl
js
mov
(bad)
test
in
ds
fs
push
sti
stos
(bad)
dec
fwait
add
in
jge
stc
mov
pop
adc
std
mov
mov
int
hlt
sbb
sub
dec
and
push
repz
mov
les
cld
pop
mov
(bad)
(bad)
call
cld
sub
cmp
into
mov
movs
push
push
sub
fcomp
adc
mov
cli
clc
cli
sub
(bad)
sbb
or
dec
dec
mov
popf
cli
cs
fisttp
pop
mov
ret
dec
std
mov
adc
and
test
dec
ficomp
dec
fnsave
(bad)
(bad)
(bad)
mov
call
cli
cmp
cwde
sub
std
gs
cdq
sub
(bad)
(bad)
retf
mov
cmp
retf
fucomip
cmps
retf
ins
imul
(bad)
inc
dec
inc
dec
cli
cmp
sti
fwait
(bad)
outs
fisubr
cmp
fisub
fcos
(bad)
call
dec
mov
jo
fs
test
out
(bad)
popf
and
push
jecxz
(bad)
(bad)
inc
sbb
aad
nop
push
fisubr
push
mov
bound
mov
cmp
mov
mov
xchg
pop
(bad)
(bad)
(bad)
jmp
test
push
pop
jbe
sti
sub
lock
mov
cmps
inc
adc
cmc
jge
inc
push
call
sub
jecxz
clc
sub
push
sti
mov
push
jecxz
jecxz
leave
cdq
mov
leave
mov
add
or
jb
cmps
mov
push
jb
dec
gs
sub
fisttp
clc
aaa
in
pop
mov
mov
fbld
fcmove
lods
test
shr
and
jns
sub
push
or
retf
cmp
retf
in
mov
pop
xchg
ds
clc
add
dec
outs
or
mov
sbb
mov
cdq
outs
lahf
(bad)
(bad)
mov
(bad)
(bad)
mov
adc
iret
adc
stc
mov
lds
sbb
or
das
(bad)
(bad)
(bad)
dec
clc
js
cwde
push
std
jae
cmps
cwde
cdq
cmp
mov
test
cld
(bad)
dec
add
mov
fisttp
inc
fstp
stos
sbb
loopne
jge
enter
repz
repnz
xchg
das
sar
xor
push
das
lahf
arpl
push
mov
std
outs
in
imul
and
cld
jg
mov
enter
stos
fsubr
jmp
neg
dec
cli
gs
add
stos
fwait
mov
and
push
cmp
push
add
stc
or
pop
jl
imul
sub
outs
pop
leave
or
call
mov
cdq
jmp
dec
(bad)
(bad)
(bad)
(bad)
mov
or
imul
(bad)
rcl
fldl2t
fwait
(bad)
mov
stos
dec
jecxz
outs
mov
data16
into
mov
call
inc
mov
ins
sbb
or
cmc
ds
inc
retf
dec
dec
retf
ficomp
adc
cmps
add
jae
rcr
or
(bad)
jmp
pop
fsubr
mov
lahf
mov
retf
movs
call
ja
movs
and
inc
push
sti
or
or
cmp
mov
push
inc
rcr
xchg
push
pop
pop
xchg
mov
ret
mov
sar
retf
mov
or
mov
fisttp
rcr
repnz
(bad)
jmp
outs
jnp
xchg
sbb
dec
sbb
mov
gs
idiv
retf
or
(bad)
(bad)
(bad)
mov
fwait
cs
pop
push
pop
jne
mov
or
icebp
xchg
sub
cli
aas
call
loope
jg
push
sub
add
int3
cmp
test
ror
sar
xchg
scas
dec
fcomi
popa
mov
jle
jae
(bad)
mov
dec
imul
push
mov
adc
jb
out
pushf
iret
sub
test
pop
stc
enter
pop
mov
loop
(bad)
pop
mov
imul
movs
pop
fs
jle
dec
call
(bad)
(bad)
jle
and
retf
push
jmp
lods
lods
cmps
movs
or
jg
daa
mov
adc
cwde
ins
icebp
adc
fstp
int
hlt
ror
or
aas
fcom
(bad)
inc
fidivr
das
push
lods
pop
cld
cli
fisubr
movs
mov
test
lahf
pushf
scas
push
dec
into
pop
pop
jno
push
mov
loop
sbb
sti
push
or
movs
lea
cmp
and
dec
jo
test
rcr
leave
into
inc
inc
cld
das
inc
aas
push
fimul
push
inc
loop
aad
jne
xor
jg
or
mov
outs
push
rcl
clc
mov
mov
sub
dec
dec
in
dec
enter
mov
push
imul
idiv
inc
mov
stos
sbb
jo
movs
movs
sub
int
inc
adc
jecxz
call
mov
movs
addr16
call
add
jns
xor
call
sahf
mov
outs
ret
or
jmp
push
push
pusha
aas
in
or
pushf
xor
(bad)
jmp
add
(bad)
pushf
sar
pop
repz
out
mov
mov
or
sub
or
push
lds
(bad)
call
test
jmp
mov
mov
mov
push
movs
push
jmp
sub
stos
sub
jnp
js
fwait
test
cs
mov
inc
jg
pop
jp
mov
mov
pop
dec
js
(bad)
dec
and
cld
sbb
int
cli
pop
mov
sbb
sub
pop
hlt
(bad)
inc
push
cmps
push
or
fmul
bnd
scas
fild
js
ja
aam
es
in
dec
out
in
(bad)
(bad)
fbld
cli
mov
jnp
mov
fwait
cmp
push
xchg
(bad)
inc
sub
sbb
cmp
sub
xchg
sbb
mov
dec
mov
(bad)
jmp
out
shr
sub
clc
or
or
mov
fist
jne
mov
(bad)
(bad)
(bad)
jmp
popf
stos
iret
cmps
(bad)
scas
sar
xchg
jp
in
mov
retf
dec
gs
cmps
imul
dec
push
push
cdq
ret
(bad)
retf
jmp
mov
retf
or
fidiv
jp
lods
jle
cmp
sub
outs
xor
stc
add
daa
cmp
pop
mov
(bad)
jnp
jmp
mov
mov
push
(bad)
fcmovnb
mov
mov
dec
std
push
mov
(bad)
cld
stos
mov
dec
push
in
pop
cmp
mov
cwde
xchg
pop
test
jmp
sbb
inc
lahf
mov
push
les
mov
mov
retf
sbb
pop
repnz
fimul
push
push
sbb
lea
ss
sti
test
or
dec
mov
aad
cwde
enter
mov
add
cmp
or
leave
fsub
add
cmp
lock
outs
and
(bad)
(bad)
ds
mov
(bad)
sbb
cmp
leave
int3
arpl
into
pop
mov
jp
je
imul
inc
xor
sbb
jl
retf
js
jp
rol
(bad)
add
ja
push
(bad)
mov
call
retf
jg
jmp
clc
aad
das
pop
es
mov
pop
int3
mov
or
push
push
xchg
inc
std
call
mov
imul
and
mov
sahf
scas
mov
enter
psrlq
push
sbb
adc
cs
aaa
je
fwait
inc
mov
scas
mov
cmp
dec
mov
comiss
retf
in
sub
push
mov
outs
jo
popa
lods
movs
pop
cmp
repnz
pop
leave
scas
fidivr
fldenv
into
sbb
adc
fidivr
call
mov
sahf
fldcw
call
test
js
push
fwait
ins
inc
ror
(bad)
mov
adc
sbb
(bad)
(bad)
inc
jmp
retf
call
ret
nop
pop
jne
push
xor
adc
push
stos
repnz
bnd
(bad)
call
push
mov
fwait
addr16
into
clc
test
js
sub
push
aas
pop
adc
(bad)
(bad)
(bad)
jge
retf
imul
mov
cmp
je
xchg
data16
sub
imul
cmp
pop
leave
cs
sbb
imul
movntps
retf
mov
(bad)
inc
cwde
sti
dec
jmp
cmps
fbld
dec
ins
mov
push
mov
bound
push
push
movs
mov
sub
movs
aas
mov
push
push
jg
aam
(bad)
fsub
stos
push
fcomip
dec
push
lods
add
scas
ja
and
fadd
dec
iret
dec
dec
test
jl
mov
aam
dec
mov
(bad)
(bad)
jmp
lods
mov
mov
leave
add
push
leave
icebp
pop
scas
imul
movs
js
idiv
(bad)
(bad)
(bad)
dec
mov
iret
call
push
cmp
mov
test
(bad)
in
(bad)
push
ret
(bad)
shl
adc
and
daa
outs
mov
jg
jecxz
pop
dec
dec
(bad)
cmp
dec
xor
fisttp
mov
pop
icebp
test
(bad)
std
mov
cld
xor
add
hlt
mov
(bad)
sbb
(bad)
(bad)
(bad)
dec
or
ins
aas
rcl
nop
mov
pushf
das
fmul
imul
push
jmp
jns
outs
fdivr
(bad)
(bad)
(bad)
cmp
test
sbb
repnz
sub
and
dec
pop
lods
call
push
cwde
inc
leave
lea
imul
dec
cmp
dec
xor
fistp
movs
ins
out
outs
jg
cld
jns
dec
enter
jg
or
test
add
dec
mov
or
push
adc
dec
dec
loop
dec
lahf
clc
sbb
dec
inc
test
dec
addr16
cli
mov
call
mov
pop
loope
clc
stos
retf
out
fidivr
fisub
mov
clc
add
push
(bad)
(bad)
jmp
fisub
scas
dec
imul
sub
jp
enter
push
mov
sub
dec
(bad)
leave
clc
push
mov
js
jns
(bad)
dec
fwait
pop
fstp
mov
push
jmp
push
movs
ds
clc
add
mov
sbb
in
lahf
xchg
das
cs
push
jl
jnp
jb
stos
fisub
mov
movs
cld
or
std
ss
and
mov
lods
shr
fcmovne
sub
test
push
clc
pop
cld
lock
or
mov
pop
call
add
cdq
cs
dec
std
call
mov
mov
bound
jp
jg
int3
mov
inc
push
cld
(bad)
(bad)
mov
mov
sbb
push
mov
fldl2t
scas
mov
and
mov
(bad)
jg
sub
mov
fstp
xchg
or
add
and
out
(bad)
call
and
repz
or
loope
fadd
(bad)
das
xchg
test
popa
pop
mov
into
sbb
mov
call
stos
fstp
adc
mov
icebp
mov
movs
pop
mov
ds
test
sub
jmp
cmp
aas
xchg
test
dec
pop
mov
stos
(bad)
(bad)
(bad)
dec
movs
mov
push
pop
loopne
push
retf
jmp
pusha
sbb
inc
int
or
mov
push
lods
cmps
sub
ret
into
xchg
imul
mov
scas
adc
(bad)
cs
jbe
aam
dec
push
retf
fistp
lds
loopne
mov
std
scas
mov
dec
cs
dec
retf
imul
mov
or
pop
cmc
jo
test
jbe
mov
popf
or
mov
pop
cli
sti
jmp
fucomi
push
rol
add
loopne
add
or
cwde
enter
push
dec
push
xchg
cli
(bad)
cmp
test
pushf
sbb
idiv
scas
call
sub
stc
fisubr
push
(bad)
cli
mov
or
and
into
push
(bad)
(bad)
mov
retf
or
cdq
pop
imul
xchg
repnz
cmp
call
call
or
mov
rol
jmp
cli
inc
cld
dec
cli
sub
inc
push
sahf
movs
mov
arpl
pop
push
xchg
push
and
(bad)
(bad)
(bad)
jmp
out
cdq
or
cli
or
retf
call
inc
sub
dec
repnz
inc
sti
cli
cli
(bad)
(bad)
mov
dec
fidivr
inc
pop
mov
cmp
cmp
ins
jmp
mov
(bad)
sti
out
cli
(bad)
jmp
mov
adc
loope
mov
neg
pushf
movs
cli
push
jp
push
pop
dec
fmul
mov
(bad)
push
fdiv
dec
mov
mov
in
iret
sbb
loop
mov
adc
sar
mov
mov
add
cmc
cli
cmps
sub
sbb
call
sbb
or
in
sti
add
jg
lods
pop
ror
dec
cs
cmp
or
scas
(bad)
(bad)
dec
push
sbb
push
mov
dec
and
outs
shl
(bad)
(bad)
(bad)
dec
int3
sub
dec
test
jmp
dec
ins
push
scas
mov
pop
and
jg
(bad)
aas
jmp
or
mov
jae
or
sti
mov
inc
mov
sub
pop
dec
fidivr
mov
enter
(bad)
cli
jp
scas
clc
(bad)
mov
and
xchg
push
mov
call
push
ret
ds
and
mov
push
cli
das
cmps
mov
sbb
ss
xor
test
imul
xchg
jmp
pop
imul
out
push
das
and
into
arpl
enter
or
mov
jae
cld
es
mov
fucompp
or
pop
mov
fild
mov
mov
bound
fcmovb
inc
shl
pop
sub
or
inc
(bad)
(bad)
(bad)
jg
aad
push
inc
push
add
push
(bad)
ficomp
sub
dec
(bad)
sub
push
push
movs
js
cmp
pop
fcom
inc
loop
lea
sub
das
retf
imul
sbb
jmp
mov
iret
dec
sbb
sub
test
fld
mov
sbb
sbb
or
mov
dec
mov
ja
mov
test
pusha
mov
xor
dec
std
(bad)
jmp
fwait
(bad)
mov
push
jl
pop
mov
jmp
mov
(bad)
aas
sub
ins
or
mov
add
test
or
mov
cmp
(bad)
(bad)
(bad)
jmp
movs
mov
dec
cmp
or
adc
movs
sub
inc
enter
icebp
mov
add
fst
(bad)
sub
dec
out
jo
clc
(bad)
push
mov
cmp
mov
mov
push
pop
push
push
mov
hlt
(bad)
(bad)
(bad)
ds
(bad)
fwait
retf
sub
fucomp
leave
retf
retf
stc
xchg
pop
sbb
test
(bad)
jg
adc
(bad)
pop
jnp
into
pushf
gs
cs
test
fwait
mov
adc
sti
retf
js
mov
test
pop
leave
stc
push
cmp
jle
int
add
cmp
mov
dec
or
or
mov
xchg
(bad)
(bad)
mov
mov
sti
das
jmp
dec
jmp
and
and
scas
jmp
sub
dec
mov
clc
(bad)
(bad)
call
sub
cli
movs
movs
sbb
rcr
stos
and
push
dec
and
cdq
pop
cmp
pop
jmp
movs
iret
mov
inc
push
cmp
sub
nop
inc
add
fcmove
dec
icebp
(bad)
(bad)
jmp
stos
sti
scas
jp
push
lock
sub
sub
fst
dec
fstp
(bad)
jmp
fdivr
sub
call
xor
xchg
pop
pop
cmp
loop
pop
dec
mov
dec
retf
cdq
sub
mov
mov
mov
add
lods
stc
cmp
add
push
(bad)
in
(bad)
push
pop
mov
push
cmp
nop
pop
movs
push
movs
jo
ins
jmp
fmul
repnz
movs
xor
push
pop
or
pop
fnstsw
or
jmp
test
cmp
or
mov
(bad)
jae
movs
xchg
mov
fidivr
inc
or
mov
inc
xchg
pop
mov
or
outs
push
xlat
or
or
dec
dec
sbb
std
or
push
out
xor
and
icebp
mov
mov
stc
std
sbb
pop
jnp
cmp
mov
ficomp
jmp
xchg
imul
sbb
mov
mov
mov
ret
stos
or
dec
int3
cmp
jle
clc
(bad)
(bad)
push
mov
sub
enter
cmp
sbb
cmp
sbb
mov
enter
mov
mov
sbb
clc
aaa
pop
cmp
sbb
setg
movs
mov
ins
or
(bad)
dec
lods
fwait
enter
movs
add
(bad)
mov
movs
gs
jp
xchg
(bad)
mov
mov
sub
cld
sub
inc
pop
outs
es
cmp
in
mov
(bad)
or
cli
mov
jg
fcomip
lods
jnp
ins
sub
sbb
(bad)
call
inc
pop
cmp
dec
(bad)
fdivr
ror
push
outs
pop
cs
jecxz
dec
dec
push
(bad)
(bad)
dec
not
jg
jmp
fcomp
push
pop
outs
push
shl
xor
stos
and
jp
sti
enter
pop
cli
dec
enter
jle
stos
jmp
mov
mov
aaa
or
into
pop
(bad)
cli
pop
retf
xor
dec
cmps
mov
or
mov
mov
fs
call
add
or
push
mov
xor
into
repz
jnp
in
jmp
jecxz
inc
add
cmp
xor
imul
mov
pop
adc
repnz
and
mov
pop
sub
test
clc
call
test
psubusw
cmp
mov
dec
pop
fstp
das
xor
(bad)
mov
sub
clc
fwait
sub
cmp
(bad)
(bad)
jmp
cli
mov
add
dec
inc
cmp
in
cmp
int3
lds
sti
test
mov
sahf
or
int3
out
and
(bad)
(bad)
(bad)
push
pusha
xchg
lods
pusha
sbb
in
sub
(bad)
dec
jmp
dec
or
mov
xchg
dec
or
mov
jns
cmp
xor
pop
das
sub
cwde
fadd
mov
and
jp
cmp
retf
mov
(bad)
dec
or
stos
fsubp
jp
cmp
and
setge
ins
cmp
(bad)
cwde
mov
mov
dec
dec
pop
xor
stos
movs
push
sahf
and
pop
fxrstor
mov
dec
pop
pop
xchg
test
in
(bad)
aas
dec
js
bound
sub
(bad)
retf
(bad)
push
mov
or
sub
mov
fcomip
jg
inc
movsx
inc
sub
mov
jg
fmul
outs
pop
and
mov
jmp
enter
ss
sub
dec
jmp
adc
adc
(bad)
call
js
mov
inc
jnp
shl
test
mov
and
scas
(bad)
adc
lea
or
dec
sbb
xchg
sub
jecxz
lods
xchg
call
and
(bad)
call
data16
push
outs
pop
and
and
cli
retf
pop
test
jecxz
push
adc
std
addr16
mov
imul
clc
popa
jnp
addr16
stos
inc
sbb
lods
sub
je
jnp
or
(bad)
xchg
mov
jmp
add
dec
es
lods
jmp
fild
mov
add
scas
jnp
pop
test
sub
push
std
(bad)
fnsave
out
imul
cld
pop
or
mov
fsub
(bad)
push
cmp
jge
popf
jmp
(bad)
(bad)
dec
repnz
xor
add
fist
cmc
test
mov
(bad)
(bad)
push
pop
or
call
push
mov
and
test
push
retf
mov
hlt
dec
out
test
pop
mov
ins
sar
lds
fld
(bad)
jg
hlt
dec
movs
jecxz
sbb
push
test
pop
mov
movs
jle
sub
call
cmps
dec
aad
adc
test
(bad)
(bad)
jmp
adc
cdq
test
inc
mov
stos
enter
sub
jl
inc
xor
retf
loope
sbb
movs
sub
sbb
jmp
ret
jmp
sbb
cs
(bad)
dec
mov
jmp
cwde
sbb
sbb
jo
hlt
mov
aaa
sbb
mov
scas
mov
call
sti
mov
sub
movs
mov
sti
and
sub
(bad)
(bad)
dec
loopne
cli
xchg
lods
sbb
xchg
sub
pop
or
mov
div
loopne
clc
push
int
dec
or
xor
adc
add
cs
enter
test
pop
(bad)
cmp
cld
aam
mov
mov
adc
pop
jb
sbb
xor
stos
pop
xor
pop
inc
xchg
scas
nop
inc
sub
xchg
pop
or
sti
sbb
(bad)
(bad)
inc
mov
xchg
outs
call
cmp
out
nop
pop
js
jg
(bad)
mov
sbb
sub
mov
fstp
inc
mov
xchg
jmp
sbb
movs
popa
call
jmp
lock
fcmovnbe
sahf
push
(bad)
call
cmps
fcmove
sbb
fild
sbb
xor
jmp
sub
leave
mov
push
cld
(bad)
call
clc
fisubr
jle
mov
cmp
pop
fwait
pop
sbb
inc
(bad)
(bad)
fist
mov
sbb
pop
jne
call
imul
cmp
rol
pushf
xchg
test
mov
push
fwait
dec
jmp
dec
dec
sbb
sti
stc
outs
imul
mov
adc
(bad)
(bad)
jmp
stos
ins
out
imul
add
in
mov
sub
enter
ficomp
test
movs
addr16
lock
out
fadd
(bad)
cmp
xor
push
into
sbb
(bad)
in
out
mov
mov
pop
add
push
in
push
call
or
scas
repz
call
loopne
jle
stos
call
push
sbb
into
jmp
movs
mov
mov
jmp
push
movs
sbb
and
(bad)
fbstp
mov
jle
loope
xlat
inc
movs
mov
out
rcl
retf
sub
jp
pop
pop
or
pop
sbb
lods
jmp
das
fcomp
clc
(bad)
jg
xchg
fisubr
repz
movs
iret
mov
sti
xor
popw
sbb
call
hlt
mov
pop
push
jo
out
loope
pop
aad
retf
cdq
in
pushf
shl
out
das
sub
ins
cld
push
leave
pop
je
retf
mov
test
pop
(bad)
jmp
mov
call
sbb
fnstenv
call
(bad)
mov
pop
stos
or
add
cli
mov
js
mov
(bad)
pop
imul
cmp
adc
or
sbb
pop
out
jo
mov
mov
(bad)
(bad)
(bad)
test
fs
mov
mov
lods
cmps
jl
mov
rcl
jbe
(bad)
jmp
pushf
sub
fmul
stos
mov
mov
mov
cmp
ret
mov
cmp
stos
jmp
imul
push
(bad)
jnp
mov
sub
stos
nop
daa
out
pop
hlt
jmp
jmp
outs
push
jge
shl
inc
(bad)
call
mov
stos
stc
pop
sub
icebp
sar
mov
out
adc
push
cmps
mov
xchg
push
push
add
push
stos
ss
stc
jp
mov
mov
call
cmc
cli
cli
in
and
test
mov
(bad)
jg
add
retf
jmp
clc
or
mov
mov
out
call
xchg
sub
stos
adc
(bad)
cmp
or
into
sub
(bad)
jmp
cli
mov
(bad)
(bad)
(bad)
stc
and
sahf
mov
stos
sbb
pusha
test
jmp
mov
cmps
ins
jp
(bad)
jmp
fdivr
or
sbb
loopne
in
repnz
or
stc
cwde
sub
inc
inc
sub
sti
jmp
lock
loop
cmp
xchg
cmp
jecxz
(bad)
mov
imul
addr16
cs
aaa
leave
(bad)
jmp
test
sub
aad
nop
sub
(bad)
mov
jns
jmp
cmc
test
arpl
and
adc
jg
dec
mov
ins
stos
xchg
cmc
pop
fistp
sahf
(bad)
xchg
or
cmps
cmc
jmp
xchg
imul
fisttp
inc
dec
bswap
shl
cmp
jp
nop
(bad)
(bad)
call
lock
bound
sub
rcl
mov
dec
inc
dec
mov
call
scas
dec
mov
cmps
icebp
jmp
xlat
(bad)
mov
enter
xlat
jmp
enter
mov
jg
mov
cli
aad
push
dec
mov
(bad)
(bad)
dec
stos
call
ins
sub
pop
cmps
inc
jnp
sub
popf
lea
out
(bad)
(bad)
(bad)
call
or
mov
cld
lds
aam
dec
add
mov
leave
sub
mov
xor
imul
xor
scas
ret
add
repnz
or
jp
push
jp
jb
stos
xchg
push
fbld
push
jg
adc
add
retf
mov
pop
std
ficom
dec
xchg
inc
gs
push
stos
and
outs
sbb
pop
cmp
cmps
jle
sbb
mov
stos
mov
jg
std
mov
xor
adc
leave
mov
call
push
std
cmp
mov
stos
loopne
aaa
adc
xchg
mov
jb
pop
xchg
jne
int
add
std
push
std
aad
pop
adc
ficom
jmp
mov
dec
xor
xor
push
fs
mov
das
mov
jmp
fild
and
ja
and
test
cmp
stos
inc
cmp
jb
test
xchg
scas
xchg
outs
out
mov
arpl
repz
sub
xor
popf
imul
inc
rcl
scas
fidiv
fild
test
cmp
outs
fidiv
call
mov
fld
es
gs
mov
fnstsw
fld
repnz
int3
call
push
mov
adc
mov
dec
adc
xchg
or
lahf
fist
mov
mov
mov
fwait
pop
imul
scas
sub
jb
call
out
add
xchg
mov
in
in
loop
add
mov
cmps
and
popa
add
jns
add
leave
shl
mov
cmp
jmp
xor
fwait
push
jmp
pop
or
pop
out
rcl
in
pop
stos
dec
push
neg
push
xchg
jno
push
inc
lahf
or
xchg
pop
xchg
lods
mov
ja
push
sub
stos
cmp
dec
stos
fcomp
mov
and
sbb
stos
pop
outs
inc
push
push
cmp
jnp
test
stos
js
inc
jl
lods
stos
mov
pop
cmp
mov
mov
push
in
test
cmp
lahf
add
push
scas
(bad)
data16
pushf
out
push
fsubrp
push
in
dec
or
inc
outs
jge
in
mov
outs
fdivr
stos
sbb
pminub
push
inc
pushf
xchg
xchg
cmp
dec
dec
test
sbb
(bad)
in
sbb
mov
and
pop
retf
retf
popf
lahf
repz
test
mov
push
in
push
dec
xchg
ins
or
fidivr
mov
stos
jp
out
push
cmp
pop
fadd
addr16
pop
sbb
es
xchg
pop
xchg
sub
fidivr
add
imul
pop
pop
xchg
inc
jnp
mov
jg
(bad)
jmp
rcl
les
cmp
popf
adc
xchg
or
push
stos
ss
mov
pop
out
cmp
jle
mov
idiv
push
fnsave
sbb
xchg
push
es
fstp
pop
int3
cmp
icebp
fst
push
in
fistp
jae
shl
jecxz
mov
cmp
lods
inc
sahf
pop
or
(bad)
cmp
push
in
outs
push
cmp
icebp
fadd
das
cmp
lea
daa
retf
neg
dec
scas
push
cmp
sub
test
xchg
jl
fstp
stos
pushf
in
mov
std
xchg
push
ret
mov
in
jp
rcl
jle
pop
mov
test
jbe
jns
popf
int
push
add
sub
std
fwait
iret
push
inc
cmc
jmp
dec
pop
mov
movsx
sar
cld
arpl
daa
mov
iret
test
inc
popa
imul
int3
data16
popa
or
dec
imul
dec
outs
and
imul
dec
push
xor
cwde
jb
int
(bad)
outs
cdq
mov
outs
or
xor
in
ins
repnz
sbb
adc
lahf
dec
adc
aaa
ret
jmp
outs
pop
mov
lea
in
scas
mov
pushf
mov
(bad)
(bad)
adc
std
mov
pushf
in
pop
mov
je
sbb
push
or
adc
call
fnstsw
in
mov
mov
sub
xchg
mov
clc
xchg
cmp
call
mov
cmps
loopne
mov
pop
aam
pop
and
in
mov
(bad)
sub
add
int3
xlat
jle
inc
push
cmps
push
lods
xor
stos
push
mov
sub
imul
test
lahf
mov
pop
lods
push
mov
sbb
test
shl
imul
push
stos
mov
dec
push
mov
(bad)
es
imul
jnp
mov
pop
push
or
inc
movs
dec
sub
cmp
push
mov
push
scas
adc
xor
cmps
xor
mov
repz
ss
push
movs
jle
lods
pop
mov
neg
in
push
ror
jbe
retf
div
test
lods
outs
push
into
cmps
cmp
xor
scas
and
cmps
lods
push
movs
xchg
push
ds
mov
ins
out
imul
push
scas
in
es
movs
push
repz
bound
push
mov
inc
fstp
sti
into
scas
ins
push
movs
pop
xchg
mov
sahf
mov
push
inc
stos
(bad)
xchg
imul
jge
out
push
stos
shl
int3
push
cmps
lahf
jbe
jle
cmc
mov
cmps
sbb
push
pop
call
movs
push
push
mov
mov
cmp
movs
add
inc
push
aam
je
mov
push
push
retf
ds
test
movs
test
int
ins
lods
jae
jbe
pop
cmps
inc
fstenv
shr
mov
test
push
mov
repz
jmp
sti
hlt
cmps
mov
scas
stos
mov
fnsave
bts
jecxz
out
loopne
movs
push
scas
fisub
push
fwait
out
out
movs
les
push
lahf
mov
iret
scas
(bad)
imul
or
stos
cmps
jns
in
fdiv
mov
push
movs
js
test
clc
push
scas
fld
es
scas
push
mov
ja
push
mov
je
out
jns
ins
push
lods
leave
call
pop
lods
xor
fistp
mov
clflush
int
es
mov
jmp
ja
add
mov
ds
ss
(bad)
ds
cmp
lods
lods
fnstenv
ss
push
cmps
jge
int
cmps
push
scas
add
je
loope
mov
dec
test
neg
out
fldenv
dec
push
lods
cmp
mov
sub
push
cmps
daa
aad
mov
push
scas
inc
jle
xchg
outs
fstp
mov
sub
lahf
data16
pop
sahf
test
jnp
dec
sti
push
test
cmps
stos
(bad)
push
jnp
push
test
mov
add
pop
cmps
dec
fidivr
or
mov
repnz
and
mov
push
movs
mov
mov
ins
push
mov
retf
ja
ja
cs
mov
idiv
mov
scas
scas
push
lods
mov
fidivr
push
movs
mov
sahf
mov
cmp
sti
into
sti
fiadd
data16
push
stos
(bad)
fidivr
iret
rcr
mul
push
sbb
jne
scas
test
push
xcrypt-cfb
cmps
and
push
add
mov
push
mov
cmps
ss
(bad)
stos
repz
jg
push
stos
dec
pop
mov
dec
stos
inc
mov
lahf
ss
aaa
stos
push
movs
or
pop
jbe
cmp
ja
scas
jp
test
mov
mov
retf
lods
sub
out
push
movs
pushf
fwait
in
ins
scas
sub
jns
cmps
dec
lods
imul
cmps
cs
push
adc
movs
pop
es
movs
mov
push
scas
lods
ins
dec
push
mov
sub
jnp
imul
mov
out
jge
sub
push
dec
scas
movs
jge
fadd
jns
repz
mov
sbb
mov
jl
lods
cmps
scas
lea
mov
push
test
mov
mov
es
cmps
jmp
fmul
movs
int3
push
lods
paddb
lods
in
scas
mov
jnp
repz
push
stos
movs
cmps
mov
lods
cs
imul
scas
stos
push
movs
aad
loopne
mov
mov
(bad)
mov
push
cmps
mov
add
fdivr
cmp
test
mov
lods
loopne
adc
lods
in
sahf
std
xchg
xor
stos
loopne
inc
push
scas
push
jnp
cmps
mov
jno
cs
sahf
idiv
popa
inc
cmps
icebp
mov
xchg
scas
push
mov
scas
inc
test
icebp
imul
jl
repz
outs
push
pop
mov
stc
push
js
jle
jg
cs
movs
pop
xor
int
cmps
stos
jle
outs
scas
iret
scas
mov
in
loopne
pusha
push
cmps
neg
adc
push
movs
stos
mov
mov
cmps
fbstp
mov
push
neg
jle
lods
push
scas
pop
addr16
push
movs
mov
mov
push
cmps
outs
inc
push
mov
ficomp
push
lods
scas
stos
movs
stos
cmp
cmp
sti
cmps
scas
push
movs
scas
jb
pop
inc
into
ja
out
push
sahf
sbb
movs
push
stos
push
cmps
pop
xchg
pop
mov
mov
push
test
mov
loope
idiv
stos
mov
cmp
rol
push
cmps
test
ret
sti
out
sbb
push
mov
fld
sub
jl
loopne
push
mov
dec
sahf
push
scas
pop
ja
out
shr
lods
sub
push
out
stc
mov
push
mov
inc
mov
mov
push
movs
call
fdivp
sahf
imul
stos
scas
movs
jns
inc
jnp
mov
aad
mov
push
mov
mov
push
scas
push
leave
push
lods
fidiv
je
stos
nop
(bad)
mov
neg
jge
cli
dec
push
stos
pop
stos
push
sti
into
out
test
adc
in
sbb
dec
movs
stos
push
mov
sti
out
fst
push
stos
xchg
push
nop
outs
inc
jmp
into
ja
scas
loopne
lods
mov
push
jns
ror
imul
jns
lods
push
movs
push
test
mov
out
mov
(bad)
cmp
fsub
cmps
les
mov
mov
dec
lods
push
movs
push
pop
es
div
mov
push
sbb
pop
outs
ficom
js
mov
mov
mov
push
test
push
rol
inc
fcmovu
adc
mov
sahf
out
pop
retf
stos
pop
xchg
cwde
push
scas
mov
pop
pop
sub
test
xlat
sbb
scas
push
scas
jg
push
jbe
call
test
jle
mov
mov
pop
cs
push
mov
fxch
lods
pop
(bad)
into
mov
push
cmps
jnp
imul
test
jmp
iret
push
rcl
mov
test
(bad)
scas
iret
jecxz
popf
lods
sahf
ss
dec
movs
dec
xchg
neg
mov
es
jle
mov
add
jnp
ss
sub
mov
cmp
lds
sbb
sar
int
retf
movs
cmp
scas
or
mov
mov
ja
jge
push
jnp
jbe
cwde
xchg
enter
ds
lods
loope
lods
push
scas
neg
push
lods
xchg
addr16
mov
int
add
not
mov
pop
pushf
dec
stos
mov
pop
icebp
bound
fisubr
test
jns
ds
test
test
out
sahf
out
cmps
cmps
lods
lods
xor
xor
movs
scas
(bad)
cmps
push
int3
scas
(bad)
jo
push
test
mov
pop
mov
adc
dec
mov
push
mov
mov
movs
scas
mov
sahf
mov
test
cmps
fwait
in
add
(bad)
scas
es
cmps
sahf
scas
push
push
mov
stos
dec
inc
xchg
mov
imul
sub
push
ret
push
fisub
test
push
rcr
dec
jl
adc
cmps
push
cmps
movs
push
push
dec
mov
jle
scas
xchg
cli
dec
lods
(bad)
movs
mov
test
push
lods
scas
push
movs
xchg
push
in
mov
jno
outs
movs
popa
inc
mov
jns
cmp
lods
scas
push
cmps
dec
fsub
jne
lock
stos
inc
popf
ds
lods
push
cmps
lods
inc
sbb
sub
scas
push
push
or
sbb
xchg
sub
inc
lea
ins
mov
push
test
das
cmp
mov
mov
test
push
jmp
vmptrst
mov
movs
outs
xchg
aad
mov
mov
test
fnsave
pop
data16
jbe
push
mov
jno
mov
xchg
dec
jle
push
lods
jnp
or
dec
out
push
ds
cmps
les
mov
push
cmp
cmps
lods
mov
iret
data16
xchg
movs
xchg
inc
push
mov
push
cmp
mov
(bad)
daa
pop
rol
cmps
scas
sub
ins
add
cmps
sahf
jo
jno
cmps
mul
push
cmp
scas
stos
sbb
popa
aas
into
sahf
push
out
pop
xor
fwait
daa
scas
cmps
movs
jmp
jns
cmps
inc
add
iret
push
push
test
repz
call
push
mov
mov
daa
mov
xor
jmp
inc
lds
sahf
add
lods
(bad)
mov
xlat
and
ds
xchg
or
out
xchg
push
lods
jecxz
sti
js
into
stos
push
cmps
ds
push
cmps
or
push
mov
cmps
rcl
out
push
add
push
push
shl
mov
lea
xchg
icebp
and
das
xchg
mov
retf
push
add
cld
cmp
scas
retf
ss
jmp
push
push
mov
dec
pop
mov
scas
or
dec
neg
cmps
scas
ds
in
into
push
test
imul
push
(bad)
mov
dec
push
stos
and
test
test
out
cmps
ss
movs
add
(bad)
cmps
push
movs
shl
cmps
scas
cmc
mov
inc
mov
js
xor
fdiv
popf
mov
rol
adc
or
scas
inc
jge
out
jmp
jns
mov
movs
mulps
push
lods
out
fsubp
add
pushw
push
loope
aad
out
sahf
out
in
(bad)
add
or
out
jbe
imul
xlat
cs
repz
iret
mov
lods
lods
movs
or
cmp
mov
lock
jae
cld
push
cld
scas
inc
stos
(bad)
cmp
sbb
or
test
sbb
push
scas
imul
xchg
pop
ss
push
into
mov
push
stos
ins
pop
test
cmps
adc
sbb
xlat
popa
push
into
mov
pop
xor
cmp
xchg
push
cmps
cmps
js
dec
push
sbb
dec
movs
test
outs
scas
nop
push
inc
mov
icebp
lea
push
test
mov
push
xor
cmps
dec
mov
rep
cmps
add
test
js
fst
adc
data16
xchg
fdivp
fidivr
jbe
(bad)
(bad)
push
and
push
scas
out
idiv
scas
rol
into
je
cmps
movs
xchg
and
stos
xlat
push
test
push
out
(bad)
ds
push
push
scas
add
push
mov
push
call
stos
es
pop
mov
repz
stos
scas
push
movs
sub
push
cmps
and
icebp
dec
lods
and
mov
add
jl
movs
lock
scas
push
mov
cmps
stc
sbb
iret
ss
repz
int
(bad)
mov
jns
dec
stos
mov
fiadd
loopne
push
sbb
int3
cmp
cdq
push
push
mov
int
jmp
mov
iret
xchg
popf
sbb
cs
mov
out
push
lods
pop
push
mov
push
lods
idiv
repz
movs
mov
repz
scas
popf
push
test
repz
repz
lods
test
ds
sahf
push
mov
cmp
fisubr
test
fstp
(bad)
not
imul
repz
xchg
movs
mov
int3
repz
add
push
shl
mov
adc
mov
test
fwait
cmp
sub
mov
scas
pop
mov
test
mov
mov
push
dec
stos
or
lods
int
fiadd
sub
push
test
(bad)
int
mov
jbe
into
mov
jnp
cmp
outs
scas
dec
mov
je
adc
push
out
mov
fild
jge
cs
(bad)
aaa
push
xchg
push
scas
pusha
cmps
push
mov
fmul
cmp
mov
dec
shl
test
popa
(bad)
jae
popa
lea
inc
xchg
scas
daa
and
test
pusha
xchg
inc
add
inc
add
repz
mov
cmp
stos
jmp
ss
push
cmps
fist
fist
js
fwait
es
test
sahf
movs
out
mov
scas
push
scas
test
sahf
ins
test
xchg
inc
cs
xchg
mov
(bad)
sti
jle
mov
scas
cs
push
push
xchg
mov
and
push
test
pop
test
daa
mov
lahf
sbb
shl
aaa
scas
(bad)
push
mov
add
movs
push
jle
dec
sti
mov
or
icebp
movs
fsubr
inc
push
in
xor
rol
scas
cmp
stos
pop
lea
int3
add
daa
lods
sahf
test
cmp
mov
cmps
enter
loopne
or
mov
xor
lahf
xlat
sbb
movs
cmps
ror
adc
push
xchg
mov
or
fild
sbb
aas
jle
call
dec
cmps
cmp
loopne
bound
push
cmps
pop
push
int
pop
mov
lods
(bad)
dec
pop
in
inc
movs
cmps
add
and
jle
lods
movs
scas
xlat
mov
push
scas
jle
ds
out
pushf
xchg
dec
(bad)
scas
data16
push
aaa
iret
not
stc
push
xchg
mov
mov
pusha
mov
add
popf
jle
mov
ja
cmps
push
add
push
movs
sbb
cmp
test
(bad)
js
lds
jg
xchg
outs
hlt
loope
scas
outs
stos
out
push
push
movs
test
aas
mov
enter
pop
pop
sub
div
cmps
cmps
cmp
stos
pop
cs
scas
lods
sbb
push
add
push
test
ror
pop
cmp
test
add
mov
shr
push
out
cmps
pop
lods
pop
inc
sbb
out
inc
aaa
je
ja
jle
cmps
das
mov
inc
pop
inc
cmps
iret
add
sbb
outs
sub
scas
ds
out
js
cmp
lods
xchg
out
or
jnp
mov
jl
add
push
mov
mov
push
sbb
inc
lds
movs
inc
mov
add
push
or
mov
sti
mov
push
lods
scas
sub
fcomp
mov
loopne
mov
cmp
imul
jns
div
push
mov
mov
push
scas
push
jbe
je
sahf
std
ins
push
push
mov
lahf
push
stos
cmp
mov
jecxz
sbb
mov
and
fs
movs
and
scas
sub
cmps
shld
jo
sub
test
test
xchg
add
push
es
lods
popa
test
loopne
push
es
cmp
pop
jle
lods
pusha
movs
sahf
scas
sahf
es
fnsave
test
das
mov
or
inc
mov
scas
inc
lds
xchg
call
push
scas
shl
lods
sub
xchg
scas
(bad)
mov
sub
scas
int
loopne
pextrw
push
cmps
stos
xchg
pop
sahf
jbe
test
div
cmp
into
jmp
scas
push
xchg
scas
push
lods
pop
rcr
inc
mov
push
fisub
push
stos
sub
xlat
imul
daa
mov
jns
fcompp
imul
test
mov
(bad)
test
bound
sbb
adc
mov
or
shr
addr16
leave
test
mov
pop
mov
or
push
test
mov
lods
mov
iret
fidiv
sti
xor
jnp
jge
movs
retf
sbb
lods
movs
push
mov
adc
cmps
stos
pop
(bad)
adc
jge
lods
mov
in
sar
push
movs
mov
mov
loope
rcr
lods
ficom
pop
inc
push
push
test
push
cmps
(bad)
jmp
mov
mov
push
push
movs
fldcw
scas
in
push
scas
inc
rol
jae
test
mov
cmp
push
test
aam
call
push
daa
call
stos
ja
adc
daa
mov
test
sub
out
scas
mov
mov
push
movs
jbe
fs
data16
mov
daa
lods
popf
mov
test
test
test
in
scas
xchg
scas
xchg
cmp
das
aad
push
mov
sbb
pop
dec
mov
dec
push
shr
mov
(bad)
movs
dec
sahf
cmps
sahf
loope
mov
mov
ds
sbb
sub
fwait
xchg
sub
sti
sbb
cmps
jle
sub
push
js
xchg
fidiv
fneni(8087
push
add
test
mov
ja
pop
pop
xchg
sbb
cmps
(bad)
adc
push
mov
fiadd
into
pop
mov
shl
push
adc
pop
loopne
das
lods
push
movs
mov
cmps
pushf
lods
not
push
sar
jnp
mov
dec
movs
(bad)
mov
(bad)
mov
lahf
sbb
sahf
jo
mov
mov
jbe
movs
scas
pop
(bad)
mov
push
mov
ds
cmps
xchg
out
bound
in
stos
mov
ja
add
push
scas
dec
mov
sub
or
in
xor
and
jns
and
pop
ds
mov
int
pop
push
pop
mul
movs
nop
mov
xchg
jle
add
lea
ret
push
or
jns
fimul
push
add
push
mov
rcl
pop
arpl
sub
into
test
sbb
pop
inc
dec
scas
cs
add
(bad)
daa
add
js
cmps
test
pop
ffreep
loopne
sahf
(bad)
int3
out
pop
xchg
xor
xchg
(bad)
test
cs
dec
(bad)
repz
ins
pop
mov
push
push
mov
(bad)
fsubp
inc
js
mov
lods
mov
scas
xchg
lock
xchg
inc
(bad)
xchg
test
mov
jecxz
mov
iret
leave
dec
outs
pop
mov
lods
retf
sub
loopne
cld
push
test
add
mov
stos
cmp
jne
shr
jbe
push
inc
or
xchg
xor
icebp
cs
iret
lock
sub
out
mov
cmp
ret
jae
(bad)
cmp
(bad)
test
loop
mov
sbb
push
dec
xor
sahf
sahf
dec
mov
mov
adc
add
data16
cmps
sub
addr16
stos
mov
movs
neg
or
push
add
stos
imul
adc
lods
push
scas
(bad)
imul
add
and
pop
test
stos
out
imul
mov
pushf
cmps
jbe
mov
inc
jle
mov
and
push
movs
add
lock
jle
xchg
(bad)
mov
sar
cld
(bad)
movs
test
inc
test
push
dec
rcl
test
dec
mov
cmp
mov
stos
mov
sub
retf
mov
ss
lods
into
mov
sub
mov
push
lods
push
(bad)
sbb
mov
lods
mov
imul
outs
mov
dec
mul
test
scas
scas
test
mov
movhps
(bad)
pop
cmp
fadd
mov
jbe
push
test
loope
cmp
lods
fisttp
cmps
xchg
ret
enter
lods
mov
data16
xchg
data16
sar
sbb
es
push
push
scas
data16
lods
push
(bad)
movs
xchg
(bad)
mov
push
scas
cmp
push
loop
or
test
iret
es
mov
icebp
lods
out
add
push
es
push
(bad)
cmp
pop
xor
mov
les
shr
mov
cmp
push
frstor
das
call
push
cs
cmp
js
xchg
fdivrp
or
mov
and
jbe
data16
xchg
into
into
cmps
cmps
push
ffree
cmps
stos
stos
push
lods
ds
hlt
add
dec
cli
push
cmp
fldcw
retf
(bad)
mov
lahf
aad
jbe
xchg
xlat
fisubr
sbb
lods
in
cmps
lods
push
das
sub
iret
mov
nop
scas
fsubp
adc
test
or
mov
push
scas
ins
(bad)
cmp
mov
push
mul
out
dec
call
jle
sahf
dec
or
lock
lods
es
pusha
push
scas
push
imul
jp
movs
push
xchg
lods
stos
rcr
add
inc
(bad)
lock
sub
mov
into
popf
mov
into
push
add
mov
fidiv
test
(bad)
mov
push
cmc
sahf
neg
jnp
dec
pop
stos
cmps
xchg
cs
mov
mov
jnp
xchg
cld
push
adc
movs
call
(bad)
pop
mov
scas
xchg
movs
push
cmp
sahf
add
cmp
(bad)
mov
cmp
(bad)
cmps
mov
ss
out
jmp
mov
push
lods
add
mov
sub
mov
out
mov
sbb
out
mov
cmp
sahf
dec
mov
mov
pop
das
es
fist
mov
std
test
data16
lods
jbe
dec
mov
sbb
jg
adc
into
ss
pop
test
cmps
fnstcw
imul
faddp
lock
out
mov
jmp
lds
cmp
fimul
outs
test
push
push
xchg
push
mov
fiadd
xcrypt-ctr
cmps
pop
rcr
inc
cmps
shl
jl
fsub
addr16
cmp
cmp
pop
js
inc
movs
jbe
push
into
add
addr16
(bad)
mov
jmp
push
push
pop
outs
loop
(bad)
sub
out
cmps
rol
imul
out
popw
dec
ret
imul
ds
cmps
dec
mov
jle
data16
push
sti
hlt
jp
mov
imul
iret
scas
jmp
sahf
mov
cli
(bad)
mov
test
cmps
cs
scas
popf
fcom
sbb
jbe
cmps
sahf
enter
add
stos
mov
into
stos
leave
dec
mov
push
inc
pop
push
push
pop
(bad)
into
jbe
popf
scas
stos
sti
inc
sub
clc
xor
xchg
jae
push
test
ins
mov
shl
sahf
cmps
lods
mov
loop
mov
movs
dec
je
jmp
xchg
push
scas
mov
ja
mov
nop
push
mov
ds
jnp
xlat
daa
mov
stos
(bad)
mov
imul
aad
add
rol
test
push
dec
mov
test
pushf
(bad)
pop
lods
sahf
in
sahf
test
mov
push
rcl
mov
xchg
imul
fidivr
push
mov
dec
mov
lahf
(bad)
aam
jp
daa
movs
push
cmp
repz
push
jne
push
test
dec
fistp
push
movs
pop
xchg
sbb
pop
sahf
sbb
into
cmps
push
inc
cmps
rol
jbe
mov
push
mov
mov
pop
scas
sahf
push
outs
mov
fcom
popf
mov
scas
push
movs
sahf
push
or
pushf
mov
test
ds
push
shr
jl
pushw
mov
mov
xor
pop
(bad)
or
iret
cmps
scas
xlat
inc
mov
fcmovb
fidivr
push
dec
mov
push
mov
dec
jg
sub
scas
mov
or
scas
out
jno
sub
push
add
inc
loope
repz
cmps
push
scas
cmps
test
jnp
icebp
push
mov
lods
call
jbe
lods
lods
(bad)
mov
test
outs
out
sahf
push
mov
(bad)
xchg
push
movs
mov
cmps
es
daa
xor
pop
xchg
cli
scas
movs
aad
xchg
or
sahf
pusha
cmp
push
fwait
add
add
xchg
xor
rol
and
daa
adc
call
lods
sbb
hlt
jo
(bad)
mov
sar
adc
sub
mov
scas
ret
adc
(bad)
mov
addr16
inc
daa
out
mov
pop
xchg
outs
or
mov
shr
aam
lds
iret
mul
dec
mov
test
loop
jp
outs
lods
jmp
mov
add
popa
jmp
pop
add
cli
(bad)
ja
adc
retf
out
or
push
cmps
push
cmps
mov
scas
xor
(bad)
shl
shl
jle
push
push
cmps
jne
stos
lock
fisubr
lods
sub
(bad)
iret
jbe
std
(bad)
mov
mov
hlt
lock
xchg
js
pop
out
lock
shr
mov
lods
push
sbb
cmp
cmps
mul
mov
pusha
jnp
pop
and
inc
sub
fist
into
mov
xchg
mov
push
dec
fnstenv
inc
or
mov
icebp
cmp
test
push
dec
js
push
mov
jbe
add
out
lds
pcmpeqb
jmp
pop
outs
cmps
dec
cli
lahf
adc
vcvtsd2ss
mov
sub
inc
or
ja
outs
jns
loope
loop
cmps
xchg
push
scas
pop
jbe
cmps
cdq
dec
mov
fild
fbld
fcom
rcr
mul
scas
add
push
push
push
mov
sar
out
pusha
imul
inc
mov
jecxz
cs
movs
mov
push
xchg
popf
push
pop
push
data16
(bad)
cmps
mov
lods
lods
push
mov
xor
jge
pop
lods
cli
sub
fadd
fimul
je
jmp
ds
inc
dec
mov
mov
inc
test
das
rcl
inc
sbb
jmp
mov
mov
addr16
sbb
js
cmps
mov
dec
ss
(bad)
pop
daa
movs
repnz
outs
cmps
mov
lods
outs
cmps
outs
inc
push
cmps
mov
adc
fiadd
out
test
scas
mov
mov
xchg
adc
out
stos
aaa
cmp
cmp
scas
ja
sbb
mov
inc
pop
push
pop
xchg
jl
call
(bad)
scas
pushf
sahf
push
mov
data16
push
mov
xor
jle
(bad)
dec
cmc
pop
xchg
into
mov
fsubp
cmps
movs
push
cmps
lods
outs
sub
(bad)
pop
aaa
jmp
dec
test
stos
mov
push
movs
jmp
push
ds
loop
jmp
test
movs
xchg
test
cmp
scas
mov
xchg
add
je
push
lahf
mov
movs
(bad)
(bad)
cmp
enter
or
xchg
pop
(bad)
es
movs
xchg
sbb
push
cs
ja
or
dec
cmps
fnstcw
scas
jge
movs
scas
scas
xchg
in
fidivr
test
pop
scas
cmps
mul
sbb
push
test
inc
pop
js
jb
sahf
stos
addr16
mov
xchg
add
es
dec
xor
push
test
mov
rcl
dec
sahf
pop
mov
push
sbb
test
ja
jmp
lahf
scas
mov
dec
scas
js
push
dec
cmps
cmps
xchg
inc
sahf
jns
addr16
es
mov
std
mov
imul
mov
pop
(bad)
ss
call
push
ficomp
test
scas
aas
adc
aaa
push
scas
or
cmps
pop
pop
push
lods
mov
movs
iret
stc
dec
dec
lea
push
es
lahf
shr
icebp
push
mov
mov
jo
cmp
mov
scas
out
cmp
es
lods
mov
xor
push
stos
scas
out
xchg
mov
cmp
retf
pop
mov
mov
pcmpeqd
dec
es
add
pop
mov
(bad)
and
pcmpgtd
push
mov
sub
scas
fisub
mov
pop
dec
and
mov
mov
out
pop
mov
cmp
ins
out
push
(bad)
pushf
xchg
fimul
cmps
cmps
sar
rcl
fst
xchg
mov
shr
sahf
cmps
dec
mov
iret
mov
(bad)
cs
imul
stos
push
fidivr
loopne
sahf
outs
mov
mov
cmp
push
cmps
stc
test
push
inc
ss
adc
js
dec
call
loopne
punpcklwd
push
lods
enter
cmps
stos
(bad)
into
xlat
jle
push
and
pop
lds
es
test
hlt
cs
sbb
mov
stos
rcl
hlt
cmp
cmp
aad
push
cmp
popw
es
out
cmps
test
mov
mov
lods
xchg
cs
inc
and
mov
inc
push
jle
inc
mov
stos
idiv
stos
clc
push
test
xchg
out
xor
xchg
jg
push
stos
xchg
pop
(bad)
adc
push
push
xchg
mul
mov
movs
add
pop
out
sar
xchg
push
(bad)
mov
dec
cmps
gs
daa
outs
lods
xor
pop
cmp
jbe
imul
xor
sbb
outs
cmps
test
cmp
adc
push
scas
sahf
adc
xchg
push
cmps
fdiv
mov
(bad)
scas
outs
outs
mov
test
inc
cs
cmps
neg
lock
push
stos
test
cmp
movs
xor
mov
xor
int
push
or
mov
and
jnp
mov
imul
scas
mov
cmp
outs
loopne
cmp
adc
pop
jbe
cmp
inc
xchg
push
xchg
out
dec
ja
clc
fdivr
xchg
scas
mov
pop
cli
jp
push
mov
push
adc
mov
not
mov
out
jmp
xchg
scas
inc
push
push
cmps
ret
inc
pop
sahf
pop
dec
out
push
stos
push
into
jp
push
push
(bad)
cmps
arpl
aaa
pop
aad
jl
push
push
push
out
stos
out
sahf
mov
push
and
push
mov
jno
push
and
jne
xor
out
sbb
cmps
mov
jle
push
and
(bad)
push
and
sub
fidivr
push
ds
pop
add
(bad)
dec
mov
shl
xchg
cmps
stos
push
stos
cmps
daa
ret
add
ss
test
outs
out
aaa
push
add
xor
mul
inc
push
push
loop
sub
push
cmp
pop
jp
dec
inc
push
scas
or
addr16
jmp
stos
cmp
cmps
mov
inc
movs
push
lods
mov
xchg
mov
pop
add
imul
fnstsw
inc
pop
imul
popf
loop
cmps
neg
ds
(bad)
movs
cs
test
(bad)
jnp
push
movs
scas
loope
push
cs
or
test
cmps
sbb
es
pop
movs
dec
cmp
mov
sub
xchg
scas
cmps
cmps
rol
loop
out
pop
out
fiadd
je
fbld
mov
ja
fs
sahf
ins
dec
cmps
xchg
dec
and
inc
idiv
or
mov
cmps
inc
jnp
test
dec
mov
aaa
cmp
cmps
stos
push
mov
pusha
mov
out
push
and
cmps
pop
xor
mov
data16
scas
mov
mov
lds
adc
xor
adc
scas
push
push
push
lods
ss
dec
mov
add
xchg
loopne
aam
push
ja
gs
scas
push
pushf
mul
out
test
ja
(bad)
ja
(bad)
cmps
inc
scas
cmp
xchg
stos
jle
pushf
ficom
(bad)
stos
xor
call
out
scas
xchg
out
jbe
add
das
fisubr
mov
mov
movs
mov
xor
(bad)
dec
mov
ret
rcl
mov
push
adc
inc
mov
scas
pusha
sub
popf
cmps
push
outs
(bad)
jnp
dec
sahf
pop
lods
out
pop
stos
xlat
jge
mov
mov
cmps
dec
mov
push
jbe
out
pop
add
js
cmp
xchg
dec
push
(bad)
movs
ja
xchg
mov
adc
xchg
sbb
fidivr
(bad)
outs
movs
add
pop
sbb
mov
pusha
es
test
push
xor
xlat
mov
sar
(bad)
clc
push
push
jp
cmps
push
into
daa
pop
cmps
add
loopne
popa
push
out
movs
outs
cmps
push
into
loop
sub
inc
scas
xor
jle
repz
scas
push
dec
(bad)
lods
(bad)
(bad)
cmp
or
add
jle
adc
push
lods
or
push
stos
mov
into
fbld
pop
div
pop
lods
es
fist
and
imul
aaa
push
push
out
cmp
push
mov
stos
push
movs
jge
lea
jle
(bad)
mov
ds
sbb
mov
push
pop
out
add
cmp
add
scas
lods
adc
push
jg
scas
push
mul
ja
lods
pop
jbe
pop
iret
jbe
mov
movs
cmps
xchg
push
mov
mov
stos
xor
add
out
push
and
xchg
cmps
js
mov
outs
(bad)
fidiv
jbe
push
movs
daa
xlat
test
neg
cs
div
add
push
mov
jbe
scas
mov
js
push
mov
mov
fidiv
push
scas
es
cmps
movs
sbb
stos
sti
jno
mov
xlat
(bad)
push
out
pop
or
xchg
stos
out
cmp
dec
mov
scas
lds
hlt
pop
lahf
push
(bad)
out
push
push
lock
push
mov
(bad)
mov
mov
scas
ss
and
lods
cwde
jbe
or
jg
jno
sbb
outs
call
mov
jbe
push
fld
stos
add
repnz
out
pop
ja
lods
mov
push
mov
addr16
push
lods
adc
jb
scas
popf
daa
xchg
dec
es
cmps
adc
(bad)
out
neg
cmps
xor
movs
mov
xor
cmps
aam
les
push
cmps
push
test
push
push
stos
test
das
es
push
lods
mov
iret
out
cmps
aas
outs
movs
cwde
lods
lods
or
cld
pop
call
test
fwait
popf
inc
(bad)
xchg
cmps
jbe
ds
add
and
scas
stos
leave
(bad)
jl
and
mov
lods
mov
mov
xlat
(bad)
daa
jbe
loope
jl
mov
lods
aaa
push
cmp
mov
mov
mov
push
ss
mov
push
cmps
rol
mov
push
mov
dec
fwait
mov
repz
push
lods
bound
lods
mov
jbe
and
movs
ret
out
neg
jmp
jbe
push
adc
jle
into
mov
dec
test
cmc
dec
das
lods
push
sub
scas
out
or
(bad)
push
lods
xcrypt-cfb
cmp
push
scas
cmp
cmps
imul
ins
push
test
push
sahf
out
mov
dec
mov
out
cld
int
repz
sahf
out
mov
movs
in
repz
sub
fucomi
test
repz
ret
jbe
call
clc
(bad)
jns
out
subps
sahf
add
hlt
inc
repz
adc
iret
repz
and
cmps
les
sahf
out
call
jns
out
sbb
repz
out
addr16
dec
cmp
repz
jnp
fidivr
add
repz
icebp
push
pop
xchg
jns
cmps
stc
fimul
dec
leave
dec
outs
out
sahf
out
xor
xor
add
sbb
pop
mov
cmp
jge
inc
loope
ds
repz
in
cli
push
out
sahf
out
(bad)
fmul
out
sahf
inc
mov
cmp
sar
mov
iret
repz
nop
rcl
stc
cmp
div
in
dec
pop
sahf
out
sahf
pop
js
pop
jl
jns
out
add
xchg
out
sbb
pop
(bad)
repz
lods
push
mov
out
cmp
inc
mov
sahf
out
pop
mov
inc
loopne
jns
out
push
ja
fwait
mov
test
sub
repz
xchg
push
jae
sti
cmp
repz
mov
movs
mov
mov
lahf
in
repz
repz
jecxz
xchg
out
repz
(bad)
xlat
and
pop
fwait
(bad)
repz
repz
mov
iret
repz
mov
neg
in
cmp
sbb
out
dec
or
dec
and
jns
out
mov
iret
rol
sti
enter
cmp
repz
outs
fmul
iret
rcl
push
xchg
xlat
xor
cmps
stc
cmp
jp
retf
test
jns
or
jns
out
inc
pop
add
iret
repz
stos
fisttp
leave
sahf
scas
cmp
repz
cmp
xchg
add
cmp
repz
popa
test
xor
cdq
sahf
scas
repz
repz
xor
iret
add
push
xchg
sahf
cmps
stc
cmp
sub
cmp
fnstcw
out
mov
or
out
sahf
out
(bad)
rol
sahf
out
sahf
div
cmp
sar
push
cwde
mov
scas
ds
dec
cmp
repz
int
push
loopne
xchg
call
mov
mov
pop
sub
pop
out
sahf
out
and
and
jns
cmps
xlat
movs
mov
iret
repz
(bad)
mov
repz
cmp
ds
mov
cmp
push
cwde
jmp
scas
scas
lods
in
loop
repz
and
popa
data16
aad
out
mov
leave
fisubr
sahf
out
jl
push
mov
out
xlat
and
cmp
repz
cmp
cmp
repz
shl
iret
repz
inc
(bad)
out
out
ds
xor
call
sahf
test
cdq
or
jns
dec
xchg
add
es
(bad)
stos
iret
repz
or
cmp
repz
repnz
add
repz
repz
mov
scas
pop
sahf
out
sahf
jg
mov
mov
jns
xlat
xchg
inc
push
repz
repz
iret
repz
pop
pop
pop
pop
pop
and
repz
lock
iret
repz
mov
jp
out
sahf
cmps
fisttp
out
sahf
fisttp
mov
out
add
add
sar
out
in
clc
sbb
repz
fisttp
cmp
repz
frstor
repz
cmp
repz
cmps
aaa
movs
sub
out
sahf
cmps
cmp
stc
dec
pop
sahf
out
sahf
int3
lods
ins
and
xor
out
out
and
cmp
repz
mov
stc
cmp
not
dec
sub
out
sahf
pop
repnz
iret
sar
pop
sub
int
cmp
repz
jns
out
or
out
sahf
ins
cmp
xor
out
in
add
cmp
repz
mov
repz
and
shl
cmp
jmp
repz
push
das
sub
repz
repz
cmps
div
out
cmp
jns
out
cmps
push
pop
mov
repz
pop
dec
js
in
and
iret
repz
xchg
pop
jns
out
or
sbb
out
sahf
out
lea
jns
icebp
test
jne
test
sbb
outs
popf
jb
cmp
repz
add
fiadd
push
iret
repz
nop
shl
test
mov
sahf
out
sahf
imul
ja
out
jbe
cmc
mov
out
sahf
sahf
iret
or
jecxz
xor
out
xchg
pop
jmp
repz
out
cmp
pusha
push
(bad)
push
mov
sahf
out
sahf
sbb
sbb
int
sahf
out
and
aaa
fs
out
jmp
sub
(bad)
repz
or
jp
out
call
xor
out
mov
mov
or
repz
ret
rcl
push
je
out
ds
cmp
or
in
jns
out
repnz
jno
repz
out
mov
or
cs
repz
ins
jb
xchg
gs
out
imul
fucomip
mov
xor
es
xchg
repz
repz
fstp
iret
repz
std
ret
jno
sahf
out
cmp
push
jmp
jns
imul
shl
xchg
jns
push
fs
dec
sti
enter
cmp
cs
cld
in
repz
repz
shl
icebp
ss
ds
push
test
pop
sub
sahf
out
sahf
jmp
std
jns
out
(bad)
shl
repz
out
in
scas
cmp
iret
repz
pop
cmp
(bad)
fsubr
iret
repz
nop
loope
xchg
jns
iret
repz
pop
mov
sahf
out
(bad)
dec
sbb
sahf
out
sahf
xchg
mov
lock
repz
stos
mov
iret
repz
repz
xor
call
mov
out
test
sahf
(bad)
pushf
out
sahf
out
dec
xchg
arpl
lahf
out
sahf
push
(bad)
xlat
push
inc
stos
out
cmp
repz
cwde
sbb
ds
rep
mov
repz
push
cmps
daa
xor
fistp
sub
into
call
add
out
je
stos
into
sbb
repz
cmp
dec
repz
and
in
sahf
out
xor
(bad)
out
sahf
out
lods
dec
ret
out
sahf
mov
cs
cmp
repz
outs
sbb
loopne
cmp
repz
test
ds
sahf
cmps
mov
mov
sahf
and
jnp
iret
repz
imul
iret
repz
out
ds
xchg
inc
imul
scas
sahf
out
sahf
fucomip
in
xor
xor
out
out
mov
repz
repz
repz
and
out
ds
jle
jle
std
jns
out
add
push
data16
out
mov
dec
fld
cld
xor
cmp
mov
pop
pop
lods
iret
repz
sbb
push
inc
rcl
xchg
add
jmp
mov
out
sahf
out
loop
mov
sahf
inc
in
mov
iret
repz
shl
xor
daa
movs
sbb
sahf
out
out
in
repnz
jns
icebp
not
push
dec
repz
repz
mov
iret
loope
xchg
push
sbb
sahf
out
sahf
mov
adc
out
arpl
xchg
ja
repz
repz
repz
dec
bnd
cmps
xor
out
ds
lods
jns
out
jecxz
push
in
sahf
out
imul
inc
push
(bad)
lahf
mov
xchg
xchg
adc
pop
in
das
jnp
iret
repz
outs
cld
jge
push
push
sahf
cmps
stc
cmp
sbb
clc
mov
jns
adc
out
adc
pop
cld
jns
out
ins
mov
inc
(bad)
repz
out
call
cmp
mov
xchg
sahf
out
cmp
aad
outs
dec
leave
jns
out
out
fistp
repz
out
out
push
jmp
js
das
dec
ret
repz
push
out
mov
sahf
cmps
stc
cli
dec
jnp
fisubr
jns
out
rcl
iretw
sar
cmc
cmp
fstp
iret
repz
pop
xchg
arpl
ss
sub
test
sahf
out
sahf
adc
xchg
cmc
cmp
sar
retf
push
iret
repz
loop
and
daa
push
or
sahf
ficomp
fst
loopne
xor
out
mov
sub
pop
or
jae
cmps
stc
cmp
test
in
sbb
scas
aas
lods
mov
jns
inc
jno
movs
iret
rcr
movs
add
pop
test
cmp
repz
jmp
repz
ss
jns
iret
movs
mov
sahf
out
sahf
outs
pop
ins
jge
mov
sahf
out
loope
aaa
movs
iret
repz
cmp
fwait
clc
sub
iret
cmp
repz
mov
mov
repz
repz
out
fs
fisubr
or
sahf
out
sahf
outs
sbb
mov
out
ss
cmc
push
enter
repz
repz
jo
hlt
xor
jns
mov
lods
xchg
adc
out
inc
mov
adc
repz
repz
sbb
scas
fisttp
cmp
ret
ss
and
cmps
stc
cmp
jp
enter
sahf
out
mov
shl
repz
out
addr16
jp
iret
repz
test
sahf
das
or
cmp
repz
inc
mov
jns
cmps
stc
mov
jns
out
sahf
out
sbb
sar
push
sub
(bad)
cmp
repz
loop
shl
jns
out
in
lods
jnp
out
out
sahf
out
mov
repz
es
push
mov
iret
repz
push
das
int3
int
cmp
repz
imul
lea
or
out
in
std
and
jns
out
xor
ss
xor
cmp
out
cmp
repz
dec
dec
dec
dec
inc
and
repz
ss
jns
cmps
stc
jp
jnp
jns
out
sahf
out
lods
sbb
ret
int
jns
inc
out
inc
call
mov
repz
repz
push
push
in
jns
out
int
test
or
lahf
mov
sahf
out
xchg
loopne
ss
repz
out
jne
fstp
iret
repz
pop
push
das
lods
cmp
cmp
repz
repz
stc
cmp
repz
hlt
test
sahf
cmps
dec
fcmovne
stc
mov
pop
pop
fcomp
jns
out
inc
icebp
xchg
cmps
movs
repz
out
add
iret
repz
sub
cmp
repz
arpl
loope
imul
adc
jns
out
(bad)
mov
sahf
add
test
adc
push
or
sbb
repz
repz
jg
mov
iret
repz
inc
xchg
aam
cli
sahf
out
call
jns
out
in
xor
adc
jge
out
movs
test
jge
push
clc
jns
out
leave
(bad)
(bad)
cmp
out
sahf
out
push
inc
inc
cmps
int
jns
movs
mov
jne
dec
stos
cmp
repz
cmp
scas
repz
repz
aas
dec
cmp
iret
repz
pop
ret
pusha
cmps
div
inc
push
fcmovnu
jns
out
or
sub
out
sahf
out
push
adc
movs
iret
repz
in
mov
cmp
repz
and
inc
(bad)
jns
iret
repz
push
mov
sahf
out
mov
out
sahf
jge
mov
xchg
mov
gs
sub
cmp
repz
dec
into
bswap
repz
mov
add
repz
xchg
out
in
xchg
fdivr
out
and
out
iret
repz
jmp
cmp
repz
dec
mov
icebp
xlat
cmp
adc
outs
repnz
push
scas
out
pop
add
idiv
out
xchg
xchg
cmc
cli
ret
sahf
out
push
test
repz
out
add
aad
ror
repz
mov
cmp
repz
jo
xchg
in
repz
repz
mov
cmp
repz
lods
ret
stc
cmp
repz
adc
mov
cmps
call
int
jns
rol
test
dec
cmp
repz
cld
pop
shl
cmp
xrelease
xor
push
out
sahf
cmps
mov
sahf
out
sahf
std
xor
rol
inc
out
out
ja
cmp
push
sub
sbb
jecxz
and
out
(bad)
ja
mov
iret
repz
cs
sbb
iret
repz
jecxz
and
xor
sahf
out
call
jns
out
lods
loop
nop
icebp
sar
xchg
repz
fcomp
push
outs
lods
dec
cmp
repz
add
xchg
push
out
ds
repz
test
mov
iret
repz
(bad)
out
in
(bad)
repz
repz
shl
out
cmp
cmps
inc
adc
jp
sahf
out
sahf
call
sbb
xchg
mov
shl
repz
out
in
sbb
repz
cs
ret
call
sub
jns
scas
(bad)
in
mov
and
push
test
repz
inc
sub
pop
lahf
int3
cmp
add
inc
xor
fwait
repz
pop
out
sahf
out
adc
xchg
(bad)
iret
sar
xchg
fcmovb
test
push
cmp
repz
ins
(bad)
shl
mov
sub
push
push
fldcw
iret
repz
dec
rol
jo
cmp
repz
fs
(bad)
out
sahf
cmps
dec
push
pushf
sbb
sahf
xchg
push
movs
jmp
cmp
popf
repz
addr16
out
sahf
out
popf
add
sahf
cmps
mov
loopne
sti
repz
repz
in
popf
iret
repz
rol
inc
cmps
xchg
add
cmps
stc
cmp
retf
arpl
out
fsubr
jns
out
mov
in
jae
repz
sub
cmp
repz
arpl
mov
jns
iret
repz
sub
sub
jns
out
(bad)
jl
xchg
sahf
out
sahf
add
xchg
(bad)
and
cmp
sar
test
sahf
out
repz
repz
and
out
cmp
mul
xor
mov
fdivr
pushf
int
jl
out
xor
cmp
sar
fistp
add
sahf
out
ds
or
ins
jns
out
repz
jbe
aad
out
idiv
nop
mov
mov
mov
jns
mov
jl
out
fs
repz
pop
sbb
aas
jl
cmp
repz
add
movs
jns
out
movs
retf
push
out
sbb
repnz
(bad)
out
lds
cmp
repz
dec
mov
iret
repz
inc
icebp
push
cmps
stc
cmp
movs
movs
inc
jp
mov
cdq
into
dec
in
adc
sahf
out
and
repz
sar
iret
repz
cmp
loope
iret
repz
daa
aam
call
call
jns
out
in
loop
sbb
cmps
movs
fs
repz
mov
mov
repz
das
cmp
add
repz
adc
out
lds
adc
dec
fsubr
jns
out
outs
pushf
popf
and
out
sahf
out
push
inc
inc
xor
repz
call
ds
repz
add
and
out
sub
iret
or
jns
out
mov
adc
dec
repz
pop
je
mov
iret
repz
jle
ins
jb
cmp
repz
push
data16
cmps
stc
cmp
je
lds
jns
or
js
into
out
jns
out
pop
sub
repnz
out
sahf
out
rcl
jns
div
cmp
repz
push
cmp
rep
frstor
and
iret
repz
icebp
cmps
out
xchg
inc
sahf
out
ds
cwde
mov
jns
pop
xchg
add
jns
out
xchg
movs
adc
iret
repz
push
jnp
sbb
cmp
jge
shl
stc
cmp
repz
mov
cmps
push
lahf
out
sahf
adc
xchg
lds
xor
mov
in
xor
cmp
repz
mov
movs
cmc
out
sahf
out
icebp
imul
dec
sahf
out
sahf
fst
rol
daa
xor
out
xchg
xchg
push
fwait
ror
dec
cmp
mov
repz
mov
ss
mov
sahf
out
ds
mov
sahf
out
mov
repz
out
aad
and
sub
repz
mov
movs
sahf
cmps
stc
cmp
(bad)
cdq
out
ins
jns
out
loop
jae
(bad)
sar
addr16
mov
fmul
repz
pop
das
jl
jecxz
ds
repz
out
adc
out
mov
repz
out
inc
(bad)
adc
popa
iret
repz
jnp
scas
fsubr
ds
repz
and
call
mov
sub
(bad)
loopne
jbe
iret
repz
test
inc
sbb
pop
cmp
repz
cmp
mov
repz
repz
in
out
sahf
out
push
dec
mov
sahf
jg
loop
jo
ja
out
push
movs
(bad)
out
sahf
out
sahf
pop
mov
jns
out
adc
cmp
repz
mov
sbb
iret
or
movs
sahf
cmps
stc
cmp
cli
xchg
out
sahf
mov
jns
out
and
dec
repz
push
movs
and
cmp
repz
int3
or
iret
repz
test
repz
das
cmp
cmp
repz
xor
daa
out
ds
xor
sub
js
sahf
out
sahf
(bad)
jl
push
mov
xor
out
inc
test
(bad)
fcomi
cmp
repz
push
aas
cmp
repz
cmp
jbe
call
or
jns
out
mov
repz
cmps
xchg
fisub
or
cmp
repz
mov
cmp
repz
loope
daa
out
ds
add
fwait
cmp
out
sahf
scas
jg
mov
arpl
jns
push
pop
xchg
sbb
repz
shr
pop
out
sbb
iret
repz
ret
loope
xor
out
ds
lahf
jns
out
cld
popf
xchg
ret
xchg
sar
cmps
xchg
aad
data16
repz
(bad)
fisttp
inc
and
test
out
cmp
pop
ins
mov
jns
out
adc
xchg
iret
repz
mov
dec
mov
iret
repz
inc
ss
jns
cmps
stc
fwait
push
dec
imul
adc
iret
sar
adc
out
cmp
repz
in
in
shl
ds
repz
movs
stos
mov
out
sahf
out
sahf
mov
jns
xor
cmp
repz
push
dec
stc
jle
cmp
repz
dec
repz
mov
cmc
ficom
sahf
jmp
rol
pushf
out
data16
jns
out
push
dec
mov
jle
out
sahf
out
add
jo
push
inc
mov
cmp
repz
pop
mov
repz
add
out
call
jl
out
jo
inc
inc
push
repz
ror
enter
iret
repz
dec
mov
pop
add
call
xor
out
adc
inc
mov
clc
repz
repz
jg
push
and
addr16
stos
pop
cmp
outs
std
adc
lahf
out
(bad)
fs
fdiv
cmp
repz
out
cmp
adc
sahf
out
sahf
sbb
lahf
sub
jns
out
adc
jbe
repz
out
in
ja
jle
repz
in
mov
sahf
cmps
stc
cmp
sub
out
lods
jns
out
inc
xor
hlt
aad
cmp
repz
push
enter
iret
repz
cmp
shl
mov
cmp
ja
mov
out
jnp
leave
dec
jns
out
bound
(bad)
iret
sar
inc
cmp
repz
xor
push
jns
iret
repz
call
out
(bad)
repnz
out
sahf
shl
inc
dec
xchg
cmp
repz
or
sub
cmp
repz
out
sahf
out
in
scas
pop
xchg
sahf
out
sahf
mov
adc
dec
repz
dec
hlt
cwde
stc
cs
repz
dec
loop
push
out
cmp
jo
(bad)
fs
fsin
iret
fsubr
loop
xchg
out
repz
out
push
pop
(bad)
iret
repz
dec
std
adc
pusha
adc
aam
and
test
sahf
out
or
mov
repz
out
(bad)
ja
mov
repz
mov
and
les
sahf
out
cs
dec
jecxz
sar
es
cmp
iret
repz
push
sub
adc
neg
retf
or
sahf
out
pop
pop
lods
dec
push
out
sahf
out
lock
dec
repz
xchg
movs
inc
push
jnp
cmp
repz
sahf
outs
pop
and
cmp
repz
shl
cmps
stc
cmp
xchg
movs
inc
cmp
out
sahf
fsubr
mov
sahf
out
xor
cmps
mov
xor
out
inc
sti
push
sub
iret
repz
(bad)
jl
xor
iret
repz
jbe
inc
gs
repz
push
sub
lea
repz
mov
sahf
out
cmc
cmp
jns
out
mov
out
sahf
shl
mov
test
repz
mov
iret
repz
repz
popa
jbe
inc
jmp
test
jns
out
bound
out
repz
out
aad
in
sbb
repz
into
aas
sbb
adc
iret
repz
push
xchg
test
call
jns
out
lods
loop
adc
(bad)
out
push
push
cmp
sar
enter
repz
repz
lods
ret
cmps
stc
cmp
push
pop
mov
aad
sahf
out
sahf
call
cmp
jns
jno
test
pop
sahf
out
out
and
pop
jns
out
dec
mov
jl
out
addr16
xor
iret
call
dec
cmp
repz
mov
inc
ss
ds
repz
les
call
jmp
repz
repz
cmp
xlat
hlt
test
adc
sahf
clc
sub
dec
ins
jns
out
bound
adc
sar
ja
aad
gs
iret
repz
fdivr
sbb
xor
iret
repz
(bad)
mul
jns
out
mov
out
sahf
out
int
inc
or
add
inc
or
iret
repz
outs
outs
(bad)
repnz
repz
loope
xchg
cmp
mov
outs
push
sbb
repz
repz
xchg
shl
push
cmp
div
retf
jbe
pop
repz
repz
scas
out
in
popf
iret
repz
shl
push
out
in
cmps
stc
cmp
cmp
sahf
out
out
dec
sbb
out
push
cmps
mov
jns
ja
aad
push
push
jmp
sahf
out
pop
mov
ror
out
sahf
ss
add
jp
dec
cmp
repz
outs
dec
lods
dec
repz
repz
add
iret
hlt
(bad)
or
out
sahf
imul
sahf
out
pusha
add
xlat
test
cmp
out
retf
sub
iret
repz
scas
mov
ds
repz
data16
sbb
iret
repz
outs
push
dec
sbb
lea
ds
repz
jno
movs
push
jns
out
fdivr
mov
fsub
jns
out
and
loope
dec
repz
mov
xchg
cli
sub
cmp
scas
mov
iret
repz
xor
push
ja
imul
cmp
js
out
sahf
sahf
dec
jg
fst
jns
out
ret
xor
jbe
repz
out
and
iret
repz
fnstcw
outs
or
xor
repz
add
push
jns
out
xchg
mov
out
sahf
out
mov
out
sahf
xor
lock
jnp
jbe
push
pop
mov
(bad)
cld
int
ret
nop
jns
out
and
movs
je
xor
out
push
retf
enter
iret
or
cmp
repz
repz
xrelease
sahf
out
dec
fwait
dec
sbb
sahf
out
sahf
lahf
pop
xchg
jecxz
loope
sahf
out
xchg
mov
in
xor
out
adc
iret
repz
imul
(bad)
scas
cmp
repz
pushf
ins
in
cmp
iret
repz
shl
fiadd
loop
fwait
pop
mov
(bad)
(bad)
jmp
push
push
push
sbb
dec
inc
push
push
push
sbb
inc
jle
add
cwde
jmp
imul
cmps
call
(bad)
push
add
(bad)
sbb
or
pop
hlt
fimul
jmp
or
inc
jmp
sub
fidivr
shr
push
add
sub
cmp
loop
sbb
imul
inc
cs
fidivr
fidiv
stos
mov
lock
dec
bound
or
(bad)
cmp
or
cmp
sbb
mov
icebp
out
push
ror
sub
ficom
outs
push
mov
dec
out
jb
or
fcmovu
sub
cmp
rcr
ficom
fidiv
cmp
mov
sar
sub
add
mov
shr
leave
jmp
lods
push
mov
das
repnz
pop
pop
stc
jmp
mov
test
stos
(bad)
jle
xchg
sbb
retf
sub
mov
sub
in
mov
adc
mov
dec
sbb
and
dec
stos
push
jp
jp
inc
es
mov
sbb
cdq
sbb
(bad)
(bad)
call
call
out
push
cmp
sbb
dec
or
cs
jp
push
push
stos
loope
dec
mov
out
mov
pop
cmp
cwde
xchg
cmp
sbb
xchg
xchg
jmp
xor
lods
fiadd
sbb
or
push
(bad)
mov
(bad)
or
sub
scas
or
jmp
dec
jmp
push
jo
mov
test
ret
stos
cmp
outs
stos
fistp
xchg
cli
pop
add
add
(bad)
stc
dec
cmp
mov
cmp
stos
pop
mov
or
stos
pop
stos
add
mov
mov
pop
clc
jmp
add
mov
scas
push
into
push
pop
pop
mov
jle
stos
sub
push
dec
stos
cmp
pop
stos
jp
xor
or
(bad)
lahf
push
call
xor
adc
stos
jmp
adc
lods
sub
cs
dec
and
push
inc
adc
adc
in
jb
cld
sub
jl
int3
xor
inc
ins
call
aad
jle
add
adc
ins
shl
jp
dec
out
bound
and
je
jp
loopne
xchg
call
stos
inc
call
push
imul
loop
sub
jp
int3
ret
or
jg
dec
test
push
ror
jp
jp
dec
das
push
push
xchg
rol
shr
jp
test
cs
fadd
mov
jmp
jb
ror
pop
and
jp
int
jmp
and
or
ins
stos
and
jge
jl
dec
gs
jne
mov
mov
call
stos
jge
jnp
inc
jp
dec
mov
dec
movs
jmp
into
jmp
es
dec
xchg
shr
inc
inc
adc
cmps
cli
(bad)
sub
inc
stos
push
sub
pop
shl
call
scas
xor
jmp
jecxz
scas
mov
jp
std
dec
sub
aaa
and
ret
or
mov
add
adc
jae
inc
fisubr
and
push
push
stos
sbb
sbb
jmp
xchg
mov
stos
out
lock
rcl
push
stos
mov
stos
outs
js
and
movs
call
inc
call
lock
ror
data16
push
push
or
outs
clc
(bad)
(bad)
mov
mov
sbb
pop
test
pop
and
pop
es
mov
ins
pusha
pop
mov
out
add
(bad)
mov
or
pop
cdq
mov
pop
xchg
pop
xor
call
rcr
fstp
jg
mov
push
pop
mov
pop
jmp
pop
jge
sbb
mov
push
pop
jp
xchg
inc
pop
jl
mov
lock
mov
sbb
(bad)
dec
call
pop
jecxz
xchg
pop
adc
pop
(bad)
pop
rcr
mov
pop
rcr
pop
loope
xchg
pop
sub
mov
stos
pop
push
pop
test
pop
loopne
popf
pop
xchg
and
pop
jno
adc
pop
sub
xchg
adc
bound
scas
mov
jmp
cmp
pop
push
sub
adc
push
stos
jl
push
dec
clc
call
push
push
push
push
scas
jp
sub
push
call
xor
movs
in
push
push
call
retf
mov
stos
xchg
stos
pop
mov
fbld
stos
je
dec
stos
push
or
mov
jmp
sti
fdiv
or
test
enter
or
sbb
pop
add
es
imul
mov
cmp
mov
stos
adc
and
add
dec
mov
mov
dec
mov
aas
fs
mov
jle
(bad)
jg
aaa
(bad)
mov
fs
shr
jmp
stos
dec
sub
sub
sbb
cmp
ins
(bad)
adc
cli
popa
stos
jno
mov
push
push
inc
call
mov
sbb
mov
cmps
repnz
push
jg
and
fcomp
call
or
lods
sub
stos
shr
dec
ss
push
dec
push
dec
jbe
push
(bad)
ja
ret
inc
sub
dec
ja
sbb
sub
rcr
push
push
rcr
dec
test
dec
jmp
sti
call
call
push
popa
or
xchg
popa
cld
dec
or
call
ret
js
sub
add
pop
pushf
mov
stos
ss
push
stos
add
test
(bad)
pushf
fidivr
dec
fisub
shr
pop
pop
push
lock
cmc
sbb
mov
inc
or
sub
fwait
sbb
pop
retf
cmp
or
or
stos
outs
push
jmp
aaa
and
dec
fisub
int3
dec
jecxz
int3
fimul
pop
xchg
imul
fisub
xlat
stos
daa
stos
aaa
stos
movs
or
mov
fcomip
stos
add
stos
test
push
cmps
(bad)
jmp
ss
sub
movs
sub
sub
or
sub
sub
sub
sub
sbb
(bad)
or
dec
stos
pop
cmp
sub
xor
sub
jp
dec
retf
jp
nop
adc
jg
jp
dec
or
dec
dec
jp
jp
jp
fsubr
(bad)
push
dec
sub
dec
or
push
jp
jp
dec
mov
(bad)
mov
xor
or
jp
push
scas
jmp
or
sbb
imul
fdiv
(bad)
dec
dec
or
sbb
jp
or
aam
in
ret
das
shr
or
cmp
sbb
dec
daa
loopne
(bad)
dec
jle
nop
or
dec
xor
jg
ja
dec
and
lds
dec
shr
xchg
dec
movs
mov
dec
dec
sub
(bad)
(bad)
(bad)
jp
jp
dec
cld
jp
jp
jp
dec
add
jp
dec
and
aas
jp
jp
cmp
jp
mov
and
mov
jne
(bad)
sbb
or
dec
outs
std
(bad)
(bad)
call
or
or
push
sbb
sbb
mov
dec
cmp
dec
or
mov
pop
lock
fsubr
sbb
popa
dec
or
cmp
push
cmp
sbb
or
or
idiv
push
cmp
push
mov
add
cmp
es
xchg
or
movs
cmp
cmp
(bad)
cmp
jp
dec
data16
mov
or
sbb
sbb
push
push
cli
loopne
adc
dec
lock
icebp
cmp
dec
clc
loope
(bad)
cmp
dec
sub
cs
inc
stos
sar
pop
scas
jp
push
cmp
cmp
pop
(bad)
jg
and
cmp
stos
fisttp
or
jp
jp
sub
add
subps
mov
cmp
sbb
ret
test
out
add
sbb
ins
sbb
sbb
stos
test
out
and
mov
mov
jecxz
jmp
cmp
or
sbb
adc
mov
mov
xchg
scas
dec
aaa
and
(bad)
jg
cmp
sbb
or
push
sbb
es
aas
push
cmp
add
cmp
sbb
aaa
and
fisttp
and
sbb
fnstcw
cmp
mov
sub
fs
test
sub
pop
or
sub
sub
in
bound
mov
cmp
dec
fs
je
sub
stos
(bad)
push
dec
cdq
dec
test
adc
push
es
sub
stos
fwait
cli
push
call
push
jmp
ja
bound
scas
dec
jp
jmp
jp
stos
lea
add
inc
push
push
mov
jmp
stos
ins
pusha
or
dec
xor
mov
add
fild
mov
enter
mov
out
pop
cmp
cmps
call
lds
dec
add
pop
pop
dec
cmp
sbb
pop
or
aam
stos
mov
inc
push
xor
pop
sbb
jns
loope
push
movs
push
mov
mov
add
sub
in
(bad)
in
mov
fidivr
add
xor
sbb
mov
pop
ret
mov
stos
jp
dec
rcl
pop
(bad)
stos
mov
pop
gs
int3
jle
fwait
push
pop
mov
imul
sbb
or
pop
or
pop
mov
mov
sbb
clc
pop
ins
ss
mov
fld
inc
push
and
ud0
jle
lods
mov
mov
mov
std
mov
pop
ret
pop
jmp
(bad)
(bad)
push
into
jp
stos
jge
push
mov
ret
mov
(bad)
stos
fldcw
sub
xchg
cs
retf
mov
(bad)
jmp
js
jecxz
cmp
stos
sar
xchg
clc
outs
scas
stos
sub
pop
sub
mov
loope
in
dec
dec
mov
jp
stos
std
ds
iret
stos
jg
adc
in
mov
jg
mov
inc
mov
stos
cmp
loopne
sub
add
or
inc
push
cli
fld
stos
shr
jnp
pop
xchg
cmp
fisubr
mov
sub
out
push
mov
mov
push
cmp
aaa
jbe
dec
sbb
stos
mov
mov
ror
push
mov
and
js
(bad)
mov
adc
pop
mov
(bad)
push
push
push
mov
loop
xchg
push
pop
mov
pop
mov
out
xchg
and
scas
mov
dec
xlat
pop
scas
cmps
cmp
dec
ja
inc
dec
movs
dec
push
dec
adc
push
bound
and
call
jg
pushw
mov
mov
push
push
mov
mov
les
mov
shl
sub
mov
adc
(bad)
jmp
dec
mov
cmp
call
(bad)
mov
cs
xchg
lock
mov
ds
ds
push
(bad)
jg
call
pop
push
mov
mov
push
push
push
mov
in
xchg
(bad)
(bad)
jmp
push
jmp
mov
and
stc
sbb
mov
jl
cmp
jp
call
xlat
push
push
xchg
(bad)
call
or
mov
in
mov
push
sbb
jmp
and
push
sbb
sbb
or
dec
push
or
sbb
pop
or
xor
fld
sbb
or
sbb
and
sbb
add
xchg
(bad)
mov
out
clc
out
mov
mov
aas
mov
sti
jp
jp
push
ret
nop
jmp
sub
push
loopne
sub
les
(bad)
jmp
scas
or
mov
outs
cmps
push
sbb
mov
jg
sub
dec
cs
(bad)
jg
mov
mov
addr16
outs
jmp
scas
jmp
jmp
mov
imul
mov
mov
mov
outs
jp
cmp
or
sbb
stos
ins
mov
lock
sbb
scas
or
mov
or
mov
xor
ror
hlt
cmp
shr
push
ret
add
jmp
fmul
cmp
sbb
sbb
pop
sbb
sbb
cmp
or
sbb
or
push
or
push
jg
(bad)
mov
loopne
popa
mov
jl
add
rcr
pop
or
push
push
push
cmp
mov
int
jo
clc
sbb
xchg
fdivr
inc
sti
or
mov
or
sbb
sbb
dec
xchg
jle
sbb
ret
sbb
or
push
fmul
adc
mov
sbb
out
ret
or
sbb
loop
sbb
sbb
cmc
xchg
sbb
sbb
push
sbb
vpsignb
jg
adc
int
inc
or
or
mov
stos
or
or
sub
or
sbb
jp
dec
mov
pop
dec
inc
test
pusha
sbb
xchg
xchg
jo
mov
scas
add
pop
push
pop
mov
inc
lock
mov
mov
idiv
push
or
pop
sub
adc
mov
cmps
or
sub
xor
dec
push
xchg
cmp
cli
lock
lods
retf
mov
add
ror
jb
sub
icebp
push
adc
mov
ins
mov
mov
pop
mov
adc
sub
dec
pop
xchg
push
pop
hlt
aaa
adc
retf
pop
(bad)
repnz
xor
mov
push
fiadd
mov
inc
adc
fbld
cs
inc
jp
jmp
add
push
fisub
mov
inc
cmp
mov
mov
cmp
mov
shr
ret
cmps
dec
dec
dec
sub
jmp
push
in
sub
jmp
xchg
mov
vsubss
mov
(bad)
in
push
sub
mov
inc
mov
mov
and
xor
inc
inc
call
jmp
sub
mov
call
jg
cmps
nop
sub
mov
mov
sbb
cli
dec
cli
movs
jmp
xchg
clc
sbb
inc
jmp
mov
adc
mov
xchg
dec
in
and
rcr
sahf
jp
mov
or
or
cli
jo
cli
jne
cli
(bad)
inc
push
shr
into
or
ror
into
push
jmp
outs
sub
aad
jmp
push
cld
stos
cli
dec
or
jmp
and
gs
jecxz
(bad)
scas
sbb
stos
or
jb
test
mov
sar
inc
or
(bad)
or
mov
mov
rcr
mov
mov
mov
fiadd
xchg
xor
push
jmp
xchg
cli
pop
fidivr
mov
(bad)
(bad)
jg
and
stos
stc
mov
mov
call
(bad)
jmp
add
ja
and
popf
jmp
mov
mov
std
jmp
fild
test
or
mov
call
inc
(bad)
mov
sub
sub
cli
rcr
mov
inc
(bad)
jg
sti
cli
data16
push
stos
fdivr
xchg
jle
mov
xchg
inc
sbb
add
nop
cmps
out
outs
cli
(bad)
pop
jp
dec
pop
jp
dec
(bad)
add
push
loop
in
fs
cmc
jmp
jmp
data16
pop
sub
sbb
loop
out
or
jmp
idiv
test
pop
mov
ja
inc
mov
mov
shl
sbb
adc
leave
mov
push
call
xchg
dec
call
mov
leave
fimul
jmp
sub
fidiv
ss
mov
stos
scas
adc
jmp
aad
jp
aam
mov
mov
dec
ds
jmp
jp
mov
(bad)
jp
(bad)
or
push
mov
push
pop
and
inc
push
xchg
pop
outs
pop
xchg
mov
test
loop
xchg
call
inc
jmp
mov
dec
ret
jp
dec
loope
mov
inc
jp
dec
gs
xchg
std
sub
mov
icebp
aaa
and
dec
fisubr
scas
stos
xor
sub
mov
add
addr16
daa
mov
hlt
aaa
mov
pop
(bad)
push
mov
or
cdq
cli
ins
or
cli
idiv
call
inc
pop
ss
(bad)
cli
es
jmp
mov
or
push
stos
push
stos
pusha
mov
and
xlat
stos
fisubr
mov
fdiv
push
mov
add
mov
mov
pusha
mov
stos
sub
adc
mov
stos
scas
stos
or
jbe
stos
bound
stos
sahf
mov
(bad)
cmp
stos
pop
mov
mov
shr
jmp
cmp
dec
mov
stos
xor
stos
shr
mov
jp
stos
ret
stos
test
in
ja
mov
pop
scas
pop
stos
sbb
adc
add
js
xchg
mov
inc
xchg
inc
and
sbb
xchg
dec
xchg
das
es
sub
pop
std
push
jnp
sub
jns
sar
daa
ret
stos
lock
push
stos
scas
sbb
btc
mov
dec
adc
mov
adc
xchg
das
cli
pop
mov
mov
mov
sbb
clc
inc
push
or
push
cmp
out
or
sbb
sbb
sub
push
or
or
jle
push
sbb
jmp
inc
or
or
or
mov
outs
push
sbb
sbb
dec
cmp
not
mov
jne
in
sahf
push
jg
inc
std
mov
out
je
sbb
lds
inc
ja
ret
(bad)
sbb
cli
sbb
cli
dec
cmp
stos
int3
or
push
sbb
mov
xchg
fs
es
dec
mov
jmp
jge
imul
arpl
dec
retf
aam
jmp
enter
sbb
mov
(bad)
fisub
dec
jb
loopne
test
push
cli
xchg
cli
ret
call
fcomip
mov
pop
xor
mov
pop
call
sub
push
sub
sub
or
mov
sub
repnz
or
hlt
xor
add
mov
mov
sbb
mov
mov
inc
sbb
dec
call
fild
mov
fwait
mov
xor
ficom
lds
xchg
jmp
icebp
or
sbb
je
or
add
(bad)
pop
cmp
mov
add
mov
test
mov
popf
xor
mov
mov
push
sub
sbb
jg
imul
mov
mov
sub
mov
mov
call
std
add
cmp
mov
jg
sub
jns
dec
mov
scas
jg
or
out
mov
mov
mov
mov
or
mov
mov
ins
cmp
rol
outs
xchg
jle
cli
sbb
mov
dec
scas
mov
mov
nop
sub
sub
pop
fisubr
sub
inc
mov
(bad)
fidivr
fistp
sub
or
loope
push
jp
sub
cmp
mov
cmp
inc
sub
cld
or
sbb
mov
mov
push
add
outs
mov
dec
mov
mov
or
pop
push
mov
pop
xor
mov
mov
cmp
fidivr
inc
cmp
pushf
jl
mov
jmp
scas
pop
mov
mov
cmc
call
call
xchg
jp
mov
loopne
mov
fs
call
(bad)
jmp
inc
cmp
cmp
call
out
mov
ret
dec
std
mov
(bad)
cmp
inc
mov
inc
fidiv
in
jns
fisubr
retf
jg
lds
or
mov
adc
jp
loope
inc
jp
dec
mov
jp
dec
out
jp
jp
jp
cli
push
shr
and
mov
mov
sub
or
dec
scas
jp
repz
iret
sub
jb
pop
lock
retf
ret
call
cmp
pop
and
cmps
mov
add
mov
mov
shl
dec
ror
fdiv
bound
inc
mov
push
xchg
sub
or
(bad)
mov
or
fcmovb
mov
ror
push
data16
mov
das
mov
(bad)
pop
dec
jmp
jp
mov
ret
xor
jp
std
fiadd
and
mov
push
mov
mov
mov
mov
sbb
cmp
mov
cmc
mov
(bad)
pop
ror
sub
cld
jmp
add
ret
sub
pop
bound
xchg
sub
sub
mov
mov
mov
pop
or
pop
sbb
ins
cli
mov
or
push
xchg
xchg
push
or
ss
(bad)
(bad)
cmp
icebp
sbb
sbb
or
lods
or
cdq
or
mov
bound
enter
lods
call
push
loop
sar
or
mov
jmp
jp
mov
in
ins
stos
jmp
and
call
mov
sbb
call
sbb
pushf
xor
push
xchg
mov
push
stos
dec
jmp
cs
adc
jmp
mov
jmp
jmp
mov
das
and
mov
push
bound
(bad)
fbld
(bad)
jmp
xor
cli
out
test
xor
jmp
push
push
lods
jp
retf
cli
mov
xlat
outs
mov
mov
inc
push
pop
inc
xchg
cli
adc
jecxz
add
push
(bad)
out
clc
das
dec
lods
jp
add
or
and
adc
call
pop
jno
sbb
in
or
push
fistp
xchg
hlt
sbb
sbb
inc
sbb
and
mov
stos
ja
inc
mov
mov
push
push
or
cmp
sbb
push
sbb
into
push
aam
jle
sub
jl
pop
(bad)
pop
cli
int
mov
jp
mov
mov
outs
mov
push
adc
in
mov
inc
loope
mov
mov
int
dec
sub
retf
and
jmp
add
js
cmp
adc
data16
mov
xor
cs
xchg
call
adc
pop
adc
add
rol
mov
or
icebp
(bad)
jmp
aaa
cli
mov
test
adc
mov
mov
inc
sbb
mov
mov
pop
add
cli
mov
jne
inc
mov
xor
xor
test
ins
js
popa
mov
dec
xchg
fdivp
dec
push
dec
add
clc
push
loop
pop
call
pop
xchg
outs
sub
lea
jmp
push
cmp
lods
ins
div
mov
sub
mov
call
or
(bad)
jmp
or
imul
imul
push
cli
cmps
sar
mov
retf
dec
movs
lock
inc
cmp
fs
pop
std
jmp
ss
sbb
mov
jp
jp
jp
stos
popa
sub
pop
push
jp
je
sbb
jmp
sbb
adc
add
mov
sub
call
xchg
cli
sbb
fldcw
push
push
pop
sub
ja
push
jmp
add
cli
(bad)
pop
or
or
or
lock
and
out
or
or
dec
mov
cli
jnp
xchg
and
cld
(bad)
xor
cli
cmp
inc
into
jb
cs
jp
call
loop
pop
call
mov
mov
pop
sub
mov
or
ss
(bad)
jg
retf
push
cli
xchg
cli
les
push
fcmovb
cmp
cmp
jo
mov
inc
call
xor
icebp
fisub
test
stos
icebp
std
inc
test
mov
cmps
stos
pop
mov
fld
jl
sub
cli
das
or
mov
jg
setp
call
call
mov
ss
call
call
sbb
ins
(bad)
fcomip
call
daa
jmp
call
dec
call
adc
lea
in
call
inc
lock
clc
cmp
push
call
cmps
mov
stos
call
fdivr
dec
call
icebp
dec
mov
(bad)
dec
dec
xchg
jp
dec
pushf
jp
stos
in
jne
ja
in
out
loop
repnz
call
call
out
add
cmp
retf
bound
call
retf
retf
(bad)
jmp
and
mov
inc
sub
cmp
pop
out
or
scas
out
ds
dec
pop
int3
xor
cmp
sub
sub
adc
cmps
jo
mov
pop
(bad)
(bad)
pop
dec
jl
cmp
mov
int3
mov
and
lea
rcr
cld
pop
adc
aaa
pop
fcmovbe
mov
push
cmp
inc
xchg
pop
popf
cld
in
mov
outs
dec
add
ins
daa
pop
cmps
(bad)
std
imul
dec
fisttp
lahf
dec
clc
ffree
add
push
pop
mov
out
pop
lahf
out
sbb
fimul
push
jnp
jnp
sub
in
test
pop
lock
dec
mov
cmp
xor
sub
std
jl
mov
or
sub
mov
xchg
daa
adc
dec
ins
dec
sub
dec
add
push
dec
inc
(bad)
(bad)
lds
dec
xchg
sub
in
xor
daa
ja
xchg
sbb
mov
addr16
shr
dec
dec
sbb
inc
cmovle
push
pop
xchg
pusha
xor
or
aam
jae
mov
mov
xor
in
jo
push
xor
adc
ds
push
jno
mov
cmps
(bad)
pop
jl
and
and
in
std
mov
pop
ins
fimul
retf
pop
inc
push
mov
outs
outs
leave
sbb
or
sahf
xchg
fsubr
in
cld
and
ins
fild
popf
dec
add
xchg
push
stos
xor
sub
aam
push
imul
sbb
cmp
sub
lahf
sbb
or
ins
jb
sti
sbb
pop
cmp
das
adc
push
and
jb
add
pop
popf
popf
test
pop
leave
popf
es
mov
ins
xor
xor
das
pusha
imul
jge
mov
movs
push
jge
in
cmp
xor
sahf
(bad)
mov
imul
inc
jbe
xchg
and
in
rcl
xor
inc
arpl
sub
subps
mov
dec
scas
pop
in
in
popf
mov
mov
push
jl
popf
sbb
push
and
xor
sub
pop
push
pop
pusha
pop
in
add
pop
cld
sub
xor
dec
mov
push
test
cmp
sub
fwait
cmp
pusha
in
or
into
xor
and
sbb
inc
cmp
inc
daa
inc
and
push
adc
jno
lods
adc
adc
xchg
or
mov
inc
dec
inc
aas
sub
sub
push
mov
lea
jl
(bad)
xchg
mov
je
push
fisttp
pop
sbb
sbb
shr
xlat
sbb
pop
pushf
in
adc
movs
pusha
shl
pop
rcr
sbb
mov
popf
call
xchg
call
xor
push
stos
cmp
adc
push
mov
out
sahf
xchg
mov
bound
fwait
and
lods
pop
ror
das
or
mov
inc
sbb
jecxz
xchg
sub
mov
aam
sub
and
out
iret
ds
ds
das
inc
fisubr
sub
dec
and
push
sub
sub
xor
add
outs
in
sbb
in
cmp
sbb
sbb
xchg
mov
ficomp
add
int3
ins
(bad)
in
lds
int
and
inc
dec
fdivr
lds
pusha
in
sbb
adc
shl
push
and
sbb
std
cmp
mov
ss
or
shl
popa
and
lahf
cwde
add
and
inc
daa
mov
lods
mov
inc
sub
bound
and
dec
test
int
xchg
lds
dec
sbb
or
and
loopne
dec
mov
xchg
adc
add
in
js
mov
lods
std
jo
mov
xor
dec
jnp
mov
outs
test
or
mov
js
fadd
inc
sbb
lods
ins
clc
mov
sub
pop
and
dec
lock
ret
stc
mov
pop
lea
out
aas
and
pop
pop
xor
push
xor
test
push
pop
sub
and
jb
ret
cmp
jmp
test
sbb
add
jmp
outs
test
xor
push
sub
xchg
mov
mov
fisub
cmc
jbe
loope
add
pushf
cld
lods
adc
jmp
cmp
daa
popf
std
and
nop
int3
popf
dec
popf
fisub
ins
ins
mov
ins
and
fisttp
mov
cmp
ins
xchg
inc
cmp
outs
adc
push
in
or
jnp
xor
lea
std
test
arpl
push
mov
les
ret
mov
jl
xchg
nop
and
jbe
pop
in
pop
ss
mov
fdivr
mov
pop
vmovaps
xor
adc
pop
int3
das
mov
mov
pop
and
mov
sbb
mov
or
mov
sbb
repnz
loopne
sbb
pushf
cmp
sub
in
or
fcom
dec
and
js
std
mov
push
ins
cmp
cwde
cmp
shl
fcmovu
sub
in
inc
int3
movs
fsincos
les
sbb
adc
adc
cmp
mov
mov
mov
and
fsubr
pop
pop
pushf
(bad)
push
adc
dec
dec
sub
sub
and
add
sbb
push
maxps
add
fiadd
test
ret
gs
push
mov
daa
jl
push
popa
in
sub
movzx
fsubr
dec
sbb
mov
mov
outs
push
add
dec
test
pushf
inc
rcl
inc
sbb
inc
adc
adc
inc
jl
sub
cmp
pop
and
rcr
adc
xor
jmp
jmp
adc
jae
std
jge
imul
lea
sbb
adc
leave
popf
and
sbb
popf
sbb
loope
popf
cmp
sbb
xor
jmp
popf
stc
popf
(bad)
mov
mov
popf
sub
jecxz
and
jnp
popa
sbb
pushf
lods
fsub
imul
test
or
dec
imul
and
cmp
push
cmc
xor
lds
mov
sub
cmp
int
int
or
sub
popa
int
lock
mov
xchg
outs
dec
xor
daa
xor
fldcw
ficomp
and
ins
add
sub
ja
in
or
pop
cmp
inc
scas
pop
or
fmul
cmp
push
js
or
adc
adc
dec
inc
adc
push
js
sub
cmc
sbb
mov
xchg
idiv
cmp
sbb
pop
inc
dec
and
sbb
pop
rcr
inc
or
lods
pop
push
fisub
inc
cmps
pop
inc
push
or
inc
pop
sub
add
std
aam
lea
mov
arpl
add
dec
test
sbb
(bad)
in
test
pop
mov
imul
pop
mov
pop
ins
ins
leave
mov
(bad)
(bad)
sahf
scas
and
mov
ins
mov
mov
mov
or
mov
fcmovbe
sub
cld
lods
cs
dec
in
test
sub
push
and
xchg
jb
into
pusha
or
not
or
pop
sub
cmp
in
fstp
jl
cmp
sbb
push
or
xor
dec
or
dec
pop
popf
fnstsw
rol
sub
pop
jno
or
loop
mov
push
pop
cmc
mov
int
fcomp
and
ss
fiadd
test
add
inc
push
sub
mov
cdq
and
or
sub
sub
ret
xor
sbb
mov
sar
sbb
pop
(bad)
sbb
popa
fimul
pop
sbb
xor
sbb
pop
jnp
imul
push
into
pop
(bad)
ret
fwait
pop
ins
cmp
and
adc
jmp
xor
(bad)
fcmovb
sbb
sbb
or
ins
in
dec
dec
rcr
fwait
sbb
sbb
mov
dec
cmps
adc
mov
das
cmp
jmp
call
ins
in
std
mov
sub
test
scas
dec
xchg
imul
cmp
sub
pop
pop
pop
adc
xchg
clc
ror
fld
stc
xchg
dec
ja
sub
push
mov
xlat
or
sub
inc
fdiv
cmp
adc
lea
mov
adc
adc
imul
call
lds
or
xor
and
std
test
int
std
lods
mov
dec
sbb
mov
xchg
sbb
stos
lea
mov
sbb
and
outs
cmp
test
fs
push
out
add
sbb
pop
ins
add
inc
out
mov
dec
and
dec
outs
xchg
fisub
in
lods
(bad)
and
cmp
frstor
(bad)
invd
push
scas
lods
xchg
push
fistp
push
ds
sti
xor
setle
mov
test
das
sub
popa
push
sbb
shl
push
xor
mov
call
ficom
xor
pop
lahf
mov
shr
int3
pop
iret
fiadd
and
enter
xor
sub
out
jl
xor
or
sbb
or
das
ret
jbe
xor
jge
fdiv
cld
cmp
jbe
push
(bad)
mov
xchg
push
mov
fwait
cmps
pop
ins
mov
popf
cmp
in
ins
add
adc
mov
xor
and
pushf
aas
xor
lods
aad
imul
mov
add
mov
mov
scas
add
popf
popf
push
add
fdiv
push
sub
ss
mov
lea
das
adc
mov
xor
cmp
outs
xor
adc
mov
push
retf
sub
lock
adc
sahf
stos
xor
test
sub
push
xor
add
test
dec
retf
cmp
or
lea
cli
push
xchg
fisubr
pop
fisub
cmp
retf
mov
mov
retf
pop
pop
fisttp
stos
ins
push
cwde
push
pusha
jle
and
push
pop
test
mov
not
xchg
jl
sub
or
inc
sbb
imul
mov
ins
pop
xor
add
mov
mov
dec
and
(bad)
adc
daa
int3
dec
fnstcw
ror
mov
and
pop
sub
push
adc
cdq
dec
and
and
outs
in
cmp
int3
bound
mov
sbb
hlt
mov
js
les
push
mov
(bad)
sub
xchg
sub
in
loopne
jbe
adc
and
imul
sub
aaa
(bad)
cwde
pop
or
aaa
in
sub
shr
jge
mov
popf
inc
add
jbe
pop
xor
and
(bad)
xor
out
inc
mov
push
xchg
mov
sbb
pop
xor
cmp
or
inc
cmp
add
addr16
cmp
sbb
ins
lahf
pop
mov
adc
or
sbb
jnp
mov
in
jne
fsub
cli
ja
inc
movs
std
or
mov
dec
into
rcr
cli
add
and
int3
or
ins
xor
lock
mov
jb
imul
add
pushf
into
and
scas
sub
jmp
retf
sub
mov
loopne
mov
xchg
xor
jmp
popa
sbb
popf
(bad)
xchg
ret
mov
int
adc
dec
and
ins
sbb
push
sub
and
int
pop
mov
bound
sub
add
and
and
adc
push
fld
movs
std
xor
test
aad
mov
pop
out
shr
or
inc
mov
lea
out
cs
(bad)
mov
jbe
imul
adc
inc
cmp
cmp
data16
popf
pop
loop
int
js
aaa
lods
pop
push
pop
mov
push
xchg
and
dec
jl
hlt
sub
mov
lods
mov
movs
fcomp
cs
inc
jnp
fsubr
arpl
mov
fmul
ins
or
loopne
in
mov
inc
xor
ins
sub
add
sbb
out
lods
mov
aaa
(bad)
sub
mov
scas
in
mov
mov
pop
test
sub
shr
and
popf
ja
mov
mov
lea
cmp
or
dec
dec
hlt
sbb
sbb
or
lods
pusha
inc
pop
jno
in
sbb
in
add
mov
inc
mov
sub
fadd
sub
mov
mov
loope
fsub
nop
xchg
jnp
and
stos
inc
gs
sti
cmp
rol
add
pop
inc
iret
push
lods
jge
div
xchg
lock
aad
pop
cmps
test
inc
dec
sub
inc
shl
jbe
rol
mov
push
jl
sub
cmp
cmps
ret
and
in
push
jo
pop
jne
adc
push
jmp
and
popa
test
shl
inc
cmp
mov
stos
jmp
bound
mov
sub
and
xor
inc
push
pop
daa
test
sub
pusha
add
jmp
xor
inc
push
lods
push
xor
adc
popf
mov
xchg
dec
pop
cwde
ds
(bad)
ins
pop
jns
pop
and
ins
mov
sbb
mov
fistp
pop
int
cmp
fwait
stos
sub
popf
popf
cdq
stos
xchg
push
jmp
fs
setge
popf
popf
stos
ins
sub
xor
sbb
add
and
jo
ins
int3
ss
pusha
pop
stos
sub
das
sub
ret
push
mov
add
sahf
push
push
and
movs
fmul
pop
mov
out
lea
jp
ror
mov
pop
ins
and
sbb
call
in
test
fist
cdq
and
ins
push
pop
pop
cdq
pop
sub
test
push
xlat
and
imul
ins
sbb
sbb
pop
mov
pusha
sbb
or
sbb
popf
cmp
sub
shr
push
push
icebp
adc
cmp
lea
jbe
daa
and
mov
pop
fwait
cld
aas
push
mov
pop
cmps
adc
sub
sub
aam
pop
popf
daa
lds
xchg
pop
pop
push
sbb
imul
xchg
adc
imul
std
adc
adc
aad
mov
in
das
pop
sub
inc
in
sub
xor
mov
sbb
shr
outs
popf
fwait
(bad)
mov
pusha
icebp
sbb
xor
je
into
mov
xchg
adc
adc
sbb
sbb
push
xor
pop
dec
(bad)
cmp
jns
outs
mov
jbe
fld
out
outs
and
pop
shl
shl
pop
inc
mov
sub
dec
sub
lds
arpl
adc
push
lahf
lods
add
lahf
mov
push
push
lahf
fstp
ins
test
in
icebp
pop
iret
cmp
arpl
sbb
arpl
and
test
adc
in
push
push
jbe
cmp
mov
pop
mov
adc
shl
rcr
fiadd
cmp
fwait
jo
out
arpl
adc
adc
fimul
das
test
sub
adc
cmp
out
pop
mov
pop
popf
pop
in
ins
nop
pop
jnp
sbb
pushf
dec
and
pusha
jno
lea
pop
enter
jbe
pop
int
mov
push
popf
cmp
mov
sahf
pusha
int
sbb
movs
sbb
mov
mov
lods
adc
pop
fcmovbe
pop
or
and
sbb
and
xchg
jp
ret
pop
sbb
pop
imul
lods
js
sti
emms
repnz
mov
fimul
add
and
and
push
pop
aaa
adc
shl
xchg
test
mov
mov
push
pop
mov
inc
iret
sbb
jbe
stos
rcr
mov
and
xor
cmps
enter
pop
sbb
scas
push
mov
push
dec
xor
pop
xor
fistp
cmp
scas
cmc
icebp
sub
cs
push
jb
pop
inc
xchg
or
pop
sub
mov
push
pop
clc
and
ds
pop
jmp
sbb
cmp
sub
mov
adc
stos
daa
fcom
mov
sbb
and
shl
imul
pop
lea
arpl
xchg
popa
mov
scas
dec
mov
add
sbb
das
ins
and
pop
pushf
xchg
rol
stos
dec
mov
lods
sub
imul
fcom
int3
aam
(bad)
jbe
stos
push
adc
mov
cmp
fsub
cmp
cmp
mov
or
xchg
js
xchg
dec
stos
sub
lds
cmp
bound
add
aaa
sbb
jmp
adc
push
dec
push
xchg
popf
xor
sbb
inc
push
sbb
aas
ins
ffree
and
jp
fisub
mov
loop
leave
pop
popa
daa
scas
pop
fimul
and
int
std
mov
push
lods
ins
cmp
sub
imul
sbb
and
adc
xor
mov
sub
jne
adc
mov
mov
mov
pusha
dec
sbb
sub
sub
aad
lods
popa
mov
mov
mov
xor
dec
and
or
add
ret
icebp
cld
ins
in
int
mov
daa
sub
imul
xor
cdq
daa
test
es
in
pop
(bad)
sbb
xor
or
dec
test
push
rcl
adc
or
stos
jbe
or
or
js
imul
(bad)
or
scas
mov
retf
cmp
pop
push
popf
sub
push
or
and
std
and
loop
adc
bound
and
or
jp
popf
mov
fs
dec
lods
add
ror
test
aaa
push
push
xchg
push
pop
mov
sbb
lods
test
or
std
cmp
cmp
mov
es
ds
out
aas
bound
fdivr
lods
and
inc
daa
dec
fisubr
movs
adc
scas
ins
sub
lods
popa
mov
dec
(bad)
mov
imul
pop
push
pop
cmp
cmp
sbb
pop
jnp
sbb
mov
pop
inc
(bad)
in
mov
lahf
fimul
push
mov
xor
fsub
xor
xor
sub
add
and
imul
or
adc
fisub
sub
rcl
das
sbb
mov
sub
push
(bad)
and
mov
xor
xor
fnstsw
(bad)
mov
aaa
adc
adc
cmp
add
imul
sbb
xchg
ins
(bad)
loope
daa
(bad)
popa
or
aas
rol
jmp
daa
pushf
mov
bound
fwait
inc
push
cmp
fcomp
ror
push
int
sbb
adc
adc
mov
popf
jb
or
xor
add
ss
retf
mov
aas
popf
aaa
out
das
add
in
sbb
daa
or
or
jmp
or
mov
neg
and
mov
ins
mov
aaa
lds
inc
jge
cdq
or
rcr
and
xor
jmp
mov
push
push
fild
in
add
mov
sbb
cld
xlat
sub
mov
cmp
mov
push
sub
dec
xor
sub
popa
pop
push
sbb
or
mov
call
lods
push
aaa
mov
dec
mov
inc
cmp
adc
pop
lods
adc
pop
xchg
fwait
loopne
mov
fstp
rcr
pop
inc
push
pop
loope
dec
sub
das
popf
and
xor
popf
popf
pop
sub
leave
add
dec
push
popf
popf
and
push
pop
das
popa
inc
and
push
ret
fwait
xor
mov
and
popf
popa
adc
adc
popf
in
popf
xor
pop
adc
popf
popf
mov
stos
popf
jmp
ins
add
add
mov
adc
mov
push
imul
sub
pop
add
xor
pop
iret
xlat
mov
mov
shl
movs
sub
test
or
(bad)
(bad)
pop
pop
rcr
pop
jecxz
cmp
int
cdq
mov
pop
adc
mov
adc
and
(bad)
in
popf
and
jae
loop
neg
inc
fidiv
sub
fsub
push
add
sub
shl
xor
std
sbb
jo
jne
xchg
fimul
push
addr16
in
aad
jbe
sub
dec
sub
sub
dec
adc
das
cmps
daa
pop
or
add
mov
sub
sub
jmp
lods
sub
aad
dec
add
sahf
lahf
push
lods
and
pop
inc
cmp
adc
cmps
in
push
out
lahf
daa
(bad)
ds
or
cdq
das
push
jnp
push
push
das
mov
lods
into
mov
sbb
sbb
adc
xor
nop
push
jl
sbb
les
inc
inc
push
popf
and
ror
daa
int3
lods
std
push
inc
lods
sbb
inc
fwait
ja
mov
adc
and
imul
jle
jge
or
inc
nop
or
or
enter
out
jne
imul
fnsave
ds
jmp
lahf
push
ds
in
ins
sub
test
or
rol
mov
sub
sub
(bad)
jg
mov
push
ins
add
sbb
cs
sbb
xchg
sbb
xor
in
push
mov
mov
jmp
mov
inc
mov
jns
lds
push
lods
daa
and
xchg
aaa
push
add
mov
int
sbb
and
mov
outs
and
jnp
fmul
pop
and
xor
cmp
add
in
mov
sahf
adc
ret
xor
dec
in
mov
and
inc
pusha
es
shl
mov
outs
pusha
scas
shr
in
ret
outs
jo
sbb
or
popf
call
pop
gs
and
fcom
pop
dec
sbb
and
pushf
not
sbb
xchg
mov
mov
mov
sbb
pop
retf
jmp
fsub
mov
(bad)
shr
vcvttps2dq
pop
lds
sub
add
daa
jno
iret
fidiv
ja
sub
cmp
dec
xchg
pop
imul
aad
xchg
xor
mov
daa
mov
inc
mov
inc
add
out
shl
sub
sub
in
test
fiadd
ins
outs
sub
jl
sbb
mov
outs
sub
sub
and
mov
sub
cmps
and
mov
stc
sbb
aam
mov
fsub
(bad)
mov
mov
pop
loop
cmc
pop
add
outs
sub
or
aas
sbb
sbb
xor
add
pop
ins
sbb
in
or
mov
sti
adc
jbe
and
inc
lea
sub
sbb
cmp
adc
daa
push
mov
cmp
cmp
xor
js
test
mov
pop
les
movs
xor
jb
jo
jge
lea
pop
in
es
popa
rcl
and
jae
add
dec
shld
push
jnp
and
jge
lods
pop
pop
and
stos
and
in
bound
in
and
xchg
das
jg
pop
fld
push
dec
and
lods
mov
sub
es
jnp
push
retf
test
mov
pusha
mov
test
popa
add
out
movs
mov
dec
pop
daa
mov
das
push
sbb
jbe
xor
and
sub
sbb
sub
pop
imul
sub
test
mov
push
sbb
and
xchg
or
sbb
mov
(bad)
mov
sbb
jle
dec
dec
sub
or
inc
and
xor
scas
das
dec
sub
pusha
xor
pop
imul
pop
ja
aad
mov
jne
dec
ficom
push
and
inc
mov
pop
rcr
leave
das
cdq
and
scas
xor
pop
add
pop
ins
shr
add
sbb
push
(bad)
inc
sub
xor
sub
sahf
xchg
xor
dec
test
xchg
inc
in
xchg
leave
xor
sbb
inc
stos
cmp
sub
add
mov
jae
lods
and
pop
dec
sbb
mov
inc
sbb
js
leave
popf
inc
aad
pusha
mov
int3
push
jb
popf
dec
(bad)
mov
test
push
mov
adc
fucomp
sbb
jge
or
imul
cmps
jo
xchg
enter
ds
push
arpl
xlat
fdivr
and
fstp
sbb
or
xor
daa
neg
xchg
inc
popf
sub
mov
adc
bound
shl
lds
or
and
pop
pop
inc
fistp
or
fadd
int3
aas
fist
cmp
imul
and
and
add
js
sub
push
ins
xor
cmps
xor
mov
and
(bad)
fisttp
pop
and
sbb
and
pop
cmps
mov
test
sbb
adc
in
pop
mov
sbb
sub
sub
push
lock
adc
add
pop
das
sub
or
add
add
iret
sub
scas
das
sub
lea
movs
fist
mov
neg
jns
sub
ins
daa
sbb
mov
outs
popf
sbb
sbb
pop
or
cdq
sbb
pop
dec
in
mov
mov
and
fcom
pop
mov
test
ret
ss
sub
ret
push
adc
fdiv
ins
dec
add
pop
sub
mov
lods
fld
(bad)
les
cmp
mov
mov
jno
imul
pop
mov
psubw
pop
pushf
mov
lea
pop
jmp
mov
sbb
fsubp
(bad)
in
sbb
pop
jmp
mov
jmp
xchg
rol
sub
pop
(bad)
and
push
pop
xchg
mov
ror
sbb
xor
add
(bad)
add
ins
mov
enter
sub
or
jg
(bad)
push
pop
pop
sbb
jle
das
out
(bad)
call
cmp
mov
push
aad
push
sub
inc
movs
cld
add
scas
shr
lahf
ss
adc
add
push
xchg
and
cmp
call
and
lods
jae
in
dec
dec
popf
movs
aad
push
aaa
repnz
mov
adc
and
mov
(bad)
popf
(bad)
xchg
sbb
dec
popf
lahf
dec
mov
push
popa
sub
and
add
pop
mov
and
sbb
les
cdq
adc
add
sbb
or
jno
ret
das
mov
ret
pusha
mov
outs
inc
jp
mov
pop
mov
pop
out
test
pop
push
lods
and
pop
shl
or
out
lods
mov
and
or
cmp
or
pop
jbe
jge
(bad)
sbb
push
not
jnp
pop
jle
and
xchg
mov
test
mov
addr16
gs
and
pop
xor
sbb
sahf
xchg
mov
ins
mov
imul
jnp
sbb
out
ds
pop
and
sub
push
fbld
inc
cli
lods
mov
pop
inc
mov
std
sar
jmp
ins
and
mov
adc
pop
pop
stc
daa
cmp
mov
ins
outs
jnp
arpl
dec
add
repz
ficom
shl
pop
cwde
daa
(bad)
dec
mov
fistp
cdq
mov
daa
mov
pop
das
sbb
sbb
int3
lods
sbb
adc
das
dec
in
inc
or
leave
jmp
dec
sbb
adc
pop
sbb
pop
push
sahf
adc
cmovb
pusha
mov
adc
fadd
lahf
scas
push
imul
add
xchg
daa
adc
in
adc
push
mov
xor
push
cmp
or
add
shr
add
push
or
adc
lds
and
and
fcmovnbe
mov
cmp
sub
push
cld
and
jo
shl
shr
sbb
sbb
imul
sub
pop
cli
sbb
sbb
add
mov
mov
int3
push
nop
pop
push
mov
loopne
dec
ud2
adc
mov
and
jnp
nop
retf
inc
daa
mov
sub
mov
sub
sbb
pop
jns
inc
mov
in
and
pop
sub
lds
mov
mov
popa
pusha
inc
sbb
xor
dec
ins
adc
fcmove
shl
aaa
xor
sub
in
pusha
pop
daa
mov
outs
mov
sbb
nop
pusha
sub
or
loopne
add
cmp
inc
mov
add
idiv
mov
and
push
mov
pop
xchg
jmp
and
mov
in
add
adc
ja
outs
aad
arpl
push
xlat
ficomp
rcr
call
das
daa
jnp
test
test
fisubr
bound
fld
test
and
pop
adc
cmp
mov
ins
in
ins
sub
aad
js
mov
mov
xor
lea
repz
xor
pop
aaa
xchg
aaa
push
push
or
inc
fwait
push
cmp
cmp
inc
and
dec
pop
pop
sub
cld
lea
int
arpl
add
inc
mov
or
lods
cmp
adc
or
and
and
ins
and
imul
mov
in
adc
rcr
and
and
adc
rcl
push
(bad)
out
and
inc
mov
push
iret
out
sbb
adc
fstp
ja
jnp
xor
scas
scas
jne
sbb
dec
fisubr
push
cmp
das
cmp
shr
xchg
call
adc
imul
mov
push
(bad)
cmp
xor
push
or
dec
nop
test
or
add
std
in
pop
int3
int3
das
rcr
dec
aas
mov
int3
mov
sub
popf
(bad)
in
adc
sbb
jge
and
mov
and
loop
xchg
dec
rol
cmp
mov
inc
lea
mov
iret
fdiv
or
in
pop
or
and
dec
push
pusha
std
push
dec
js
jl
add
push
cmp
std
popa
add
inc
push
mov
dec
jne
cld
sub
in
dec
or
aad
daa
xor
xor
sbb
arpl
pop
in
mov
ja
push
(bad)
sbb
pop
sub
mov
sub
bound
dec
jmp
xor
sub
div
ret
and
test
or
test
or
push
int
jecxz
lods
pushf
nop
push
fdiv
pop
test
imul
xor
jp
ins
fcomp
jl
bound
rol
or
cmp
cmp
and
(bad)
and
pop
sbb
lods
std
xor
cmp
mov
daa
fdivr
push
jnp
sbb
add
and
or
jbe
mov
ret
and
ficomp
shl
int
inc
mov
push
and
mov
inc
ror
mov
cmp
add
jno
mov
push
frstor
popa
in
lea
fstp
daa
push
push
mov
push
pop
cs
and
lds
jnp
inc
daa
jl
pop
(bad)
push
add
xchg
cs
push
shr
cmp
adc
test
das
xchg
stos
mov
pop
jnp
sub
add
sbb
int3
and
or
dec
and
pop
(bad)
jle
sbb
sbb
and
sbb
test
ins
xchg
lock
sbb
cs
push
sbb
lods
jbe
cmp
mov
sub
les
push
(bad)
dec
enter
and
cmp
mov
and
loopne
and
sbb
mov
pop
fld
sbb
and
cmp
test
dec
or
push
push
jnp
push
sbb
push
das
test
sub
mov
xchg
sbb
sub
iret
mov
pop
cmp
fcom
add
out
test
mov
shl
das
and
ins
ds
das
(bad)
outs
and
and
and
mov
and
mov
push
lods
mov
xchg
mov
ins
leave
xor
inc
lds
mov
ret
and
aad
inc
std
(bad)
push
or
add
(bad)
mov
mov
cmp
dec
sbb
and
mov
(bad)
sub
gs
ins
fst
adc
mov
popa
sbb
mov
das
dec
jmp
xor
mov
scas
pop
(bad)
stos
test
bound
sub
test
(bad)
push
add
dec
ret
xor
add
test
mov
mov
imul
lods
lods
xor
and
and
test
push
sti
and
xor
push
iret
and
and
or
push
sub
jmp
xchg
(bad)
mov
inc
or
add
pop
and
cmc
inc
mov
push
adc
scas
inc
mov
xchg
(bad)
pop
or
inc
pop
and
cmp
mov
or
and
and
mov
inc
daa
mov
fcmovu
and
ss
lods
xchg
mov
push
add
mov
sub
ja
jbe
xchg
ja
and
inc
bound
xchg
test
dec
lods
sbb
fmul
test
lea
push
daa
dec
mov
or
inc
dec
rcl
mov
cmp
adc
out
cmps
ins
cmp
fsub
sub
jl
ins
xor
dec
or
js
and
mov
fwait
push
test
sub
pop
sbb
adc
inc
fcmovb
cmp
jae
pop
das
daa
mov
das
or
imul
jmp
das
(bad)
jbe
outs
adc
push
pop
(bad)
adc
loope
jbe
jo
xor
into
and
mov
daa
add
sbb
mov
sub
ins
pop
and
(bad)
cmp
mov
xor
ins
pop
ins
mov
stos
and
das
push
lock
rol
add
movs
lods
aad
bound
imul
daa
std
sub
mov
into
mov
cmp
push
pop
jbe
ficomp
and
xchg
mov
add
mov
xor
aas
sbb
xchg
jp
pop
mov
fstp
loope
in
jbe
(bad)
mov
inc
call
inc
pop
bound
add
inc
leave
mov
adc
(bad)
lods
ins
imul
and
mov
imul
pop
ins
mov
sub
or
js
sbb
daa
ja
jno
sub
mov
cmp
sar
outs
dec
es
xchg
in
(bad)
ror
ret
(bad)
cdq
sub
fisub
daa
mov
xor
add
sub
inc
lea
pop
or
lods
sub
push
mov
mov
dec
sub
pusha
mov
in
add
int
imul
clc
cmp
mov
jnp
cmp
mov
xor
jg
popa
mov
and
xor
inc
pop
shl
dec
pop
imul
pushf
inc
sub
sbb
movs
add
mov
jns
test
(bad)
in
dec
mov
daa
cld
push
add
sbb
lods
popa
inc
pusha
mov
test
sub
adc
and
fistp
imul
and
mov
adc
cmp
ret
cmps
mov
or
pop
das
xchg
pop
shl
cmp
(bad)
lock
aaa
test
adc
jmp
and
and
in
xchg
pop
mov
pop
test
rcr
mov
jae
sub
add
jmp
sbb
mov
inc
mov
imul
pop
out
lahf
add
mov
dec
(bad)
or
lods
xchg
xor
xchg
sbb
dec
mov
leave
sub
xchg
je
jnp
push
push
shl
adc
or
sbb
fiadd
call
cmp
inc
sub
mov
sbb
aas
rcr
sbb
mov
daa
adc
jno
pop
ins
adc
das
sub
ret
jle
mov
scas
scas
es
aam
jnp
and
add
mov
ret
cmp
dec
ret
lahf
fisttp
pushf
imul
cmp
in
ins
and
lods
dec
or
xor
cmp
(bad)
pusha
adc
arpl
mov
sbb
fsubr
adc
sub
dec
cld
call
add
outs
movs
mov
or
inc
push
ins
adc
imul
cmp
jb
inc
fstp
xor
pop
outs
adc
mov
jmp
fld
jo
sbb
add
das
and
outs
rol
mov
pop
jae
or
jmp
stos
das
pop
aaa
ds
mov
lods
cmp
mov
int
(bad)
cs
mov
mov
frstor
mov
inc
pop
push
(bad)
and
adc
ins
mov
sahf
xchg
mov
(bad)
mov
fbld
dec
inc
in
cmp
retf
pop
int3
or
pop
in
adc
fs
lds
add
retf
outs
shl
pop
(bad)
lods
ins
stos
and
outs
imul
mov
jnp
pop
cmovge
mov
(bad)
and
cmp
lahf
adc
sub
mov
mov
mov
fmul
mov
jb
cmp
dec
fisubr
push
xchg
clc
cld
sub
mov
pusha
xor
mov
xor
jnp
add
adc
ret
sbb
mov
sub
daa
pusha
mov
and
arpl
mov
pop
cmp
ret
sahf
adc
sub
or
sub
adc
mov
ja
call
sub
or
mov
pop
cmps
add
not
sbb
jge
dec
and
dec
jmp
in
mov
add
cmp
push
or
ins
fist
pop
pop
fld
jnp
leave
or
adc
fcmovbe
and
mov
fstp
jge
sub
cld
or
mov
pop
pop
fldenv
(bad)
(bad)
rcl
jge
arpl
dec
les
in
add
int3
inc
pop
add
pop
pop
fdivr
out
sbb
or
jo
daa
ja
xchg
bound
pop
pop
or
pushf
pop
outs
add
adc
fild
daa
mov
jno
ss
std
adc
and
into
mov
jle
cmp
sub
push
pop
jnp
sbb
pop
fcomp
stos
dec
and
mov
sub
mov
lahf
sahf
mov
pop
pop
sahf
lods
nop
xchg
ret
or
pop
lahf
das
dec
(bad)
sub
xor
jo
ins
pop
ss
xor
sar
or
push
shl
and
mov
xchg
xchg
xchg
pop
and
pop
add
dec
das
lahf
pop
fldenv
lods
mov
adc
inc
pop
popf
sub
shr
pusha
lock
das
in
popf
stos
inc
es
or
les
or
push
xor
fadd
ins
cmp
popf
mov
dec
mov
fimul
xor
sbb
lods
lods
ficom
dec
cmp
loope
add
sub
shl
push
sub
add
mov
mov
and
gs
cmp
mov
adc
sub
in
mov
dec
mov
imul
sub
add
pop
xchg
test
(bad)
ficomp
dec
ror
ror
add
cmp
jl
fsubr
ins
sbb
fmul
popf
cmp
mov
rcr
(bad)
and
loopne
lods
pop
pop
add
es
xchg
xchg
sub
les
inc
sub
xor
mov
lods
and
add
repnz
jae
and
lods
cmp
cmp
adc
stos
es
jo
sbb
fs
popf
popf
mov
jmp
(bad)
retf
adc
lahf
scas
pop
mov
push
out
push
ins
jmp
cmp
pop
pop
xor
jge
cdq
cmp
and
test
das
in
add
pop
pop
lods
lods
add
daa
sub
imul
imul
mov
add
mov
push
xor
je
gs
xchg
movs
imul
adc
aaa
xor
inc
ret
rcr
sbb
dec
lods
mov
loop
pop
pop
dec
fadd
ficomp
or
and
sub
addr16
fldcw
loopne
and
aad
xchg
jne
ins
add
pop
inc
and
mov
rcr
fbld
pop
adc
mov
add
add
daa
and
add
cmp
lea
shl
push
add
push
jnp
imul
aas
jg
fcmovbe
push
pop
mov
popf
sub
fimul
xor
push
cmps
sub
pop
add
xor
xor
sub
push
and
daa
ins
mov
pop
sbb
add
push
add
popf
popf
enter
popf
popf
xchg
or
adc
and
pop
sub
in
inc
imul
ins
jae
outs
ficomp
adc
cmp
jge
les
or
dec
jnp
div
aas
ins
iret
push
adc
syscall
pop
mov
inc
or
mov
aam
sbb
pop
add
sub
nop
fmul
xchg
adc
inc
mov
mov
push
pusha
jnp
sar
push
aas
add
std
pushf
in
sbb
loopne
dec
daa
and
jo
ds
adc
(bad)
jbe
xor
imul
adc
sub
jl
ja
sbb
xor
arpl
sub
xchg
sbb
cdq
sbb
outs
jae
test
dec
ins
sub
push
jecxz
rcr
and
shl
sub
mov
sub
dec
mov
dec
adc
mov
jmp
mov
(bad)
stc
sbb
xor
push
pop
imul
inc
push
or
popf
adc
cmp
nop
popf
popf
add
(bad)
sbb
dec
or
ficomp
rcr
ret
daa
or
ins
shr
cmp
or
icebp
test
adc
fild
ds
arpl
imul
lods
mov
imul
mov
lea
pop
pop
les
mov
sub
push
stc
das
dec
mov
push
bound
pop
popa
sub
xchg
sub
bound
(bad)
inc
les
ins
ins
pop
daa
and
add
inc
inc
push
mov
push
imul
push
cmp
sbb
fiadd
push
mov
sar
je
cdq
push
push
fisttp
out
or
inc
xor
and
daa
mov
fsub
popf
cmp
fisub
shr
ss
lods
and
setnp
adc
sub
inc
out
sbb
and
cmc
sbb
retf
xchg
and
pop
add
mov
pop
in
and
cmp
ins
mov
pusha
addr16
sub
sub
inc
leave
sub
mov
sbb
dec
sbb
mov
pop
jns
pop
sub
std
sbb
adc
mov
push
sbb
sbb
bound
ret
mov
ins
adc
pusha
out
out
sti
mov
sbb
xor
sbb
push
push
test
or
lods
xor
inc
mov
and
cmp
shl
mov
xor
inc
sti
daa
cmp
cdq
clc
mov
mov
sbb
push
dec
sub
das
arpl
imul
out
inc
ins
outs
sub
adc
fcmovne
jbe
xchg
xor
in
sub
sub
out
mov
sbb
daa
rcr
test
pop
std
popa
cmp
adc
in
push
sti
inc
push
int
mov
movs
(bad)
rcl
das
and
pop
pop
in
imul
sub
pop
lds
xor
sbb
cmp
fadd
movs
aaa
retf
or
add
xor
inc
das
pop
aad
addps
pop
mov
adc
and
lock
arpl
or
bound
cmp
jecxz
test
sub
push
aad
mov
aam
and
lods
jnp
and
in
popf
inc
mov
or
stos
aad
mov
jmp
xchg
int3
mov
cmps
xor
ins
scas
cmp
ficom
xor
sub
imul
and
and
add
pop
imul
cdq
data16
in
in
sub
(bad)
aas
cmp
cmp
ret
lods
cmp
push
inc
jnp
daa
fwait
sub
mov
dec
xor
and
in
lods
or
popf
popf
fcmovu
les
adc
adc
mov
xor
mov
cmp
inc
mov
sbb
add
mov
enter
mov
jp
lods
movs
and
fwait
xor
fwait
lds
inc
mov
dec
ficomp
bound
push
lds
mov
add
jae
mov
fstp
outs
and
rcl
arpl
ins
pop
(bad)
shr
push
in
cld
dec
xor
data16
aas
ret
mov
jne
pusha
adc
or
rol
add
out
push
fcmovnu
adc
pop
ret
test
dec
in
cmp
fisttp
cs
xchg
cmp
les
sbb
pop
and
ficom
xchg
sub
mov
test
xchg
shr
or
push
les
cmp
adc
mov
cmp
(bad)
and
test
sbb
jno
jno
inc
pop
sti
pop
jae
dec
outs
xchg
push
pop
das
xchg
call
pusha
push
fidiv
popa
pop
out
or
les
push
adc
aas
test
adc
mov
aad
xor
xor
(bad)
mov
mov
pop
std
daa
mov
and
and
jbe
jmp
stos
pop
popf
mul
in
mov
test
pop
dec
xchg
dec
sbb
pop
push
popa
inc
pop
and
xor
xor
adc
das
stc
or
xchg
jmp
push
fnsave
jecxz
mov
mov
mov
jbe
xor
mov
push
frstor
add
neg
mov
out
je
(bad)
dec
pop
js
and
cmp
fcmovnbe
push
mov
rcl
leave
dec
rcr
inc
pop
pop
in
test
or
cmp
mov
inc
push
pop
add
lods
div
mov
cmp
push
in
aaa
mov
aas
xor
lea
shr
cmp
stos
aas
sub
rcl
in
sub
mov
xor
fdivr
lods
mov
or
imul
daa
jecxz
lea
jb
bound
es
nop
out
or
or
popa
shl
das
mov
repz
push
popf
out
test
(bad)
or
in
or
xor
call
add
cld
leave
pushf
sbb
imul
and
test
cmp
mov
sub
ror
in
jp
ins
fbld
adc
mov
bound
push
stos
cmp
and
sti
repz
push
xor
pusha
in
add
pop
das
and
ins
sub
sub
sub
sub
sub
mov
sbb
arpl
adc
sub
lods
imul
add
jns
adc
add
xor
stos
in
sbb
and
pop
sub
push
add
mov
xor
or
scas
rol
pop
cmp
xor
adc
ins
push
mov
ins
(bad)
std
lea
outs
pop
mov
mov
dec
sahf
sbb
and
or
xlat
dec
adc
mov
mov
imul
aas
mov
ins
test
shr
lods
fstp
push
adc
outs
sub
das
sub
jmp
push
dec
cmp
clc
pop
pop
test
fmul
and
pop
pushf
popf
or
retf
sbb
xlat
(bad)
in
jp
inc
in
lods
add
pop
mov
adc
jae
mov
mov
mov
mov
shl
xchg
push
adc
xor
fdiv
push
rcl
sbb
in
xor
rcr
sti
repz
sbb
xor
stc
pop
dec
mov
fisub
push
test
sbb
pop
outs
stos
fisubr
jne
lea
add
jbe
das
daa
dec
rcr
mov
xchg
sbb
repz
push
and
test
ins
and
sub
stos
cmp
repz
cmp
dec
inc
bound
and
ror
sbb
aaa
ret
ror
outs
(bad)
inc
mov
lods
dec
imul
jno
sub
pop
add
sbb
pop
mov
xor
add
and
cld
dec
dec
sub
mov
pop
sbb
inc
bound
pop
aas
aaa
in
rol
data16
jmp
or
imul
push
ins
sub
outs
xor
mov
pop
push
xchg
bound
xor
pop
dec
and
and
cmc
rcr
mov
mov
mov
and
push
lods
mov
dec
shr
sub
imul
dec
add
jnp
int
mov
mov
and
ins
and
sub
loopne
mov
pop
pcmpeqd
repnz
sub
mov
mov
(bad)
arpl
dec
push
xor
jno
fild
push
dec
das
xchg
mov
imul
mov
daa
aad
push
pop
sub
xor
xor
inc
repnz
inc
pop
cdq
dec
ins
xor
sbb
push
das
mov
mov
adc
test
outs
adc
xor
das
dec
in
cdq
mov
push
dec
and
frstor
enter
sub
sub
dec
xchg
dec
pop
sub
xor
cmp
add
in
xor
sub
inc
pop
ins
cmp
sub
dec
movs
push
cmp
xor
test
mov
xor
sbb
pop
aas
or
mov
cmps
add
cmp
pop
stos
push
pop
or
and
mov
and
inc
out
out
cmp
sbb
and
and
sbb
pop
fidivr
lahf
dec
ret
xchg
cmp
pop
xor
xor
cmp
dec
mov
(bad)
fsub
out
sbb
xchg
mov
sbb
lods
cmp
cld
sbb
cwde
inc
pop
cmp
pushf
test
mov
ins
xchg
movs
push
les
sub
xor
and
scas
iret
push
pushf
mov
icebp
push
lea
mov
adc
jns
aas
pop
mov
call
jp
std
lods
ja
inc
xor
adc
or
lods
ins
movs
sbb
sbb
mov
clc
xchg
mov
and
repz
repnz
fucomp
and
std
sub
fisubr
scas
daa
jle
and
sbb
dec
mov
inc
call
adc
ins
test
loopne
movs
and
rcr
push
or
push
mov
mov
cmp
or
out
sbb
add
in
rcr
fistp
aas
scas
push
shr
mov
imul
and
dec
jnp
(bad)
push
push
sub
mov
sub
mov
xor
add
push
outs
dec
inc
and
test
loope
cmp
das
imul
mov
pushf
stos
pop
repz
add
sbb
das
adc
xchg
inc
inc
pop
sbb
cmp
and
sub
ss
lds
sub
mov
add
or
mov
add
and
js
sbb
adc
sub
mov
stos
inc
sub
and
das
xchg
push
mov
imul
sub
mov
rcl
aaa
sub
inc
mov
js
rcr
cmp
and
retf
add
and
mov
inc
adc
and
and
and
jmp
mov
imul
mov
adc
pop
outs
xchg
mov
jmp
sbb
shl
sahf
lods
and
adc
and
lods
mov
lods
es
inc
mov
dec
and
rcr
cmps
and
(bad)
aad
inc
pusha
imul
and
xchg
loope
xor
outs
add
in
and
xchg
daa
add
inc
sub
or
sahf
add
pop
test
adc
adc
mov
jnp
fisttp
lods
and
ins
pop
jmp
adc
adc
jb
icebp
and
(bad)
pop
call
sub
mov
add
aaa
in
sub
fiadd
sub
mov
ffreep
push
add
sbb
sub
mov
shr
pop
popa
inc
in
test
xchg
aaa
lods
sub
xor
in
sub
in
gs
retf
cmp
and
push
pusha
xor
std
iret
pop
or
lods
ret
or
not
stos
and
xor
sub
cmp
cmp
xchg
xchg
push
test
inc
mov
movs
or
pop
and
cmps
mov
mov
(bad)
ficomp
mov
(bad)
push
pop
push
fcmovnb
or
dec
and
push
ror
mov
fs
sub
add
ins
push
and
dec
in
sub
in
mov
fisub
outs
sbb
lods
sub
adc
or
and
ins
and
test
daa
pusha
sbb
mov
xor
push
arpl
dec
push
nop
mov
(bad)
and
and
loope
push
and
sar
int3
pushf
mov
sbb
xor
sbb
and
xchg
stc
mov
add
stos
cmp
sub
mov
enter
enter
pusha
mov
bound
call
shl
mov
push
movs
inc
das
je
sub
daa
imul
xchg
pop
mov
out
sbb
jno
sub
and
sub
ss
xor
ficom
xchg
scas
in
or
or
in
push
xor
or
dec
or
jne
dec
ficom
or
or
push
or
pusha
xlat
add
out
sbb
or
ror
(bad)
fist
sbb
rcr
ins
xor
push
lods
and
in
in
add
sub
dec
fisub
or
mov
in
xchg
mov
dec
mov
mov
mov
inc
or
jmp
in
pop
xchg
outs
es
and
pop
daa
lea
mov
mov
test
in
in
outs
mov
fsub
sbb
(bad)
mov
rol
aaa
mov
and
in
and
imul
mov
mov
push
mov
in
in
stos
dec
aaa
sub
sub
xchg
fimul
dec
mov
in
in
fisub
lods
sbb
inc
pop
pop
and
and
xchg
fsubr
and
ins
inc
in
cdq
mov
inc
movs
mov
pop
push
int
rcl
imul
and
and
retf
sbb
and
(bad)
push
xchg
in
dec
inc
pop
mov
mov
push
inc
in
sbb
and
xor
and
pop
pop
(bad)
inc
xchg
outs
and
sub
sub
dec
outs
xchg
(bad)
and
movs
mov
inc
in
sbb
pop
inc
movs
cmp
ficom
mov
in
in
xchg
and
icebp
in
imul
sbb
adc
and
and
shl
and
in
es
rol
add
add
(bad)
dec
std
lds
sbb
sub
std
pop
mov
ins
test
and
dec
imul
mov
movs
mov
test
aaa
popf
push
jp
dec
pop
xor
mov
or
or
or
ins
sbb
pop
pop
and
dec
and
push
ret
push
rol
dec
push
pop
adc
and
push
pop
ins
(bad)
int
ins
fwait
daa
sub
push
imul
ins
push
or
add
test
pop
or
ins
mov
ins
stos
or
or
ret
sub
cmp
dec
push
movs
add
xchg
(bad)
(bad)
pop
push
or
rcr
daa
cs
fiadd
or
wbinvd
sbb
fisttp
and
or
ja
xor
pusha
mov
ins
sbb
movs
lahf
or
aam
xchg
push
xchg
or
jae
(bad)
push
arpl
sub
mov
sbb
pop
add
(bad)
and
ss
add
push
imul
or
in
push
call
daa
mov
dec
sbb
xor
and
in
test
int
and
and
loopne
icebp
fsubrp
cld
mov
or
(bad)
and
dec
outs
cmps
nop
sbb
sub
pop
push
loop
sub
adc
popa
les
nop
fst
les
ja
adc
adc
mov
push
popf
sbb
ret
and
adc
push
std
jl
xchg
cwde
xor
push
jae
mov
adc
and
lods
inc
pmaxub
(bad)
pusha
cwde
add
pop
inc
xor
sbb
xchg
(bad)
mov
xor
or
pop
adc
(bad)
adc
xor
movs
mov
mov
frstor
scas
adc
lods
js
pop
popf
sbb
adc
sbb
lods
or
cmp
and
push
or
xchg
adc
fcomp
or
ins
loopne
ja
push
jbe
cli
or
xchg
dec
ret
bound
outs
or
ja
pop
pop
adc
xor
shr
and
loope
je
in
mov
int
push
out
and
xor
ins
lahf
and
add
retf
scas
jmp
imul
sub
adc
std
xchg
pop
int
leave
mov
xchg
mov
or
loopne
push
dec
idiv
ret
mov
xchg
lock
scas
clc
or
das
xchg
cmp
pushf
jl
mul
(bad)
lahf
(bad)
and
out
test
(bad)
and
push
mov
test
mov
or
and
in
inc
add
call
pop
push
into
outs
scas
out
and
cmp
jmp
or
mov
cmp
out
push
(bad)
call
push
out
gs
sub
or
mov
leave
push
ret
push
cld
jg
cmc
jbe
push
daa
jne
inc
shl
add
adc
push
enter
fwait
cli
push
cdq
cmps
xchg
ins
call
jmp
call
lea
jmp
push
dec
inc
and
fs
push
pushf
sub
aam
(bad)
(bad)
jp
ret
push
je
push
dec
xor
into
jmp
adc
mov
xor
scas
add
push
out
add
dec
sbb
iret
(bad)
(bad)
call
imul
dec
out
xchg
out
jae
je
sbb
or
scas
outs
dec
pop
aas
xchg
(bad)
dec
clc
(bad)
dec
push
fcmovnu
mov
mov
cmp
fcomip
and
jmp
pop
or
out
or
(bad)
jg
(bad)
jmp
jmp
xchg
bound
jmp
push
pop
push
pop
rcr
pop
add
mov
fild
sbb
jge
xor
cmp
(bad)
(bad)
jmp
sub
mov
arpl
popa
mov
call
pop
push
push
sar
in
xchg
cmps
movs
xchg
and
mov
xor
inc
loope
mov
adc
mov
(bad)
(bad)
call
cmp
mov
imul
int
push
sahf
sub
jmp
mov
es
addr16
dec
xchg
push
push
(bad)
in
mov
(bad)
(bad)
jmp
cmps
in
fwait
bound
lods
lods
pop
adc
lahf
xchg
adc
lock
(bad)
push
xchg
xchg
cmp
pop
loop
jmp
in
sub
out
or
aas
mov
jp
cmp
sbb
dec
adc
cmp
je
mov
fbstp
iret
ins
xchg
dec
ins
stos
xlat
or
mov
add
aas
aaa
aad
fnsave
(bad)
(bad)
(bad)
mov
push
push
add
jnp
sub
aad
push
ret
stos
data16
xchg
(bad)
(bad)
(bad)
jmp
jmp
sub
sbb
jmp
sbb
aaa
sub
ficom
scas
clc
(bad)
std
sbb
cli
mov
test
scas
lds
outs
test
outs
imul
dec
call
jmp
adc
fst
adc
cdq
push
xor
add
dec
mov
add
outs
into
leave
jle
call
cmc
(bad)
(bad)
mov
inc
pop
mov
jne
pop
(bad)
ficomp
(bad)
(bad)
(bad)
fstp
cmp
movs
rol
push
and
pop
test
sub
mov
(bad)
(bad)
(bad)
inc
pop
xchg
xor
int
retf
mov
jp
rol
popf
pop
ds
jg
dec
and
mov
push
xor
jmp
jb
sbb
outs
call
ins
into
and
repnz
std
das
adc
movs
adc
(bad)
icebp
dec
mov
fadd
lods
pop
ins
adc
(bad)
(bad)
call
lahf
xchg
add
fbstp
cmps
repnz
scas
pop
loop
sbb
fist
(bad)
push
loope
fnstenv
in
enter
into
mov
mov
and
out
fs
(bad)
(bad)
jg
xchg
(bad)
mov
(bad)
into
ins
fwait
mov
lods
push
mov
add
and
adc
jge
outs
mov
mov
and
lds
je
mov
dec
dec
sbb
cs
(bad)
mov
jg
loope
or
jmp
jns
and
test
push
test
sbb
xchg
inc
mov
stos
outs
and
fsubrp
scas
outs
xor
retf
stos
sar
cli
(bad)
hlt
and
(bad)
adc
mov
pop
inc
sub
mov
mov
(bad)
mov
jnp
adc
jp
test
adc
pop
sbb
xor
mov
test
fld
jbe
cmp
mov
(bad)
jmp
xchg
call
dec
dec
fs
popa
int
pop
cwde
or
cli
rcr
sbb
push
adc
jge
ja
mov
es
stos
push
fdiv
cmp
cli
pop
(bad)
jmp
xor
int3
loop
mov
dec
call
jmp
hlt
mov
call
push
jmp
mov
adc
call
fbstp
mov
cmp
fs
(bad)
(bad)
mov
retf
jp
test
push
jnp
add
jmp
mov
push
jl
(bad)
jg
push
enter
push
add
sub
push
je
int
test
or
sub
mov
les
lods
pop
clc
push
lods
push
xor
mov
pop
push
pop
push
push
test
fld
dec
push
jmp
retf
xchg
add
(bad)
jmp
pop
sub
jae
xchg
xchg
lods
xor
aad
call
scas
lahf
or
mov
sub
out
test
iret
mov
dec
inc
jle
lods
ss
mov
es
lea
and
(bad)
cli
(bad)
(bad)
(bad)
cmp
push
fcomp
adc
cmps
mov
mov
cli
dec
fisubr
(bad)
outs
das
movs
outs
and
jmp
adc
loop
sub
fcmovu
or
fdivrp
(bad)
cmp
jo
jle
js
test
(bad)
(bad)
(bad)
(bad)
jmp
mov
xor
add
inc
fidivr
mov
xor
jmp
lea
adc
(bad)
(bad)
dec
fistp
mov
adc
retf
cmp
jecxz
mov
mov
dec
(bad)
mov
sti
in
mov
mov
xor
(bad)
fisttp
int3
push
call
ins
or
add
cld
std
xchg
mov
pop
mov
jne
test
(bad)
mov
fisttp
out
fistp
inc
push
jmp
push
mov
mov
(bad)
or
mov
clc
(bad)
(bad)
fisub
rol
pop
jbe
pop
bound
in
jnp
adc
fsubr
aaa
rol
xor
retf
fsubrp
call
(bad)
(bad)
call
popf
sub
xchg
test
in
out
rcr
sbb
(bad)
(bad)
(bad)
jmp
jb
mov
or
xor
stc
cs
jmp
je
pop
add
(bad)
ficom
sub
dec
jl
retf
sub
ds
(bad)
pop
inc
or
jmp
test
adc
(bad)
push
mov
sbb
ret
outs
call
jb
sub
popa
adc
call
daa
inc
leave
stos
es
shl
hlt
ss
pop
cmp
push
and
sub
adc
add
and
mov
mov
sub
jmp
and
mov
ret
mov
je
test
dec
std
out
clc
or
stos
arpl
or
push
(bad)
jg
jle
mov
call
mov
fs
lock
dec
rcr
(bad)
inc
and
jmp
std
or
test
adc
hlt
dec
aaa
scas
std
scas
out
fucomip
ffreep
sbb
push
sbb
cmp
dec
jmp
lahf
jo
push
or
xor
ins
(bad)
mov
fidiv
push
sbb
(bad)
(bad)
inc
fild
cmps
shr
lods
dec
push
jecxz
dec
pop
test
push
mov
add
repz
(bad)
(bad)
jmp
sbb
push
enter
mov
lahf
inc
push
popa
clc
dec
bnd
jmp
and
(bad)
(bad)
call
pop
(bad)
shl
sbb
mov
sti
xchg
outs
or
or
(bad)
(bad)
jmp
adc
ror
push
retf
dec
out
push
aad
(bad)
sub
push
xchg
sub
mov
ss
sub
sbb
xchg
adc
xchg
and
cmp
leave
iret
mov
and
sbb
push
test
das
ror
movs
jle
jge
sub
lds
jmp
xchg
sub
push
xor
mov
jno
push
movs
fcmovne
(bad)
ja
cli
test
mov
xor
mov
and
fwait
pop
jp
sbb
pop
add
and
push
out
xchg
clc
push
cli
sbb
sbb
xchg
(bad)
jg
push
or
(bad)
es
dec
pop
xchg
cmp
loope
inc
lea
sahf
adc
sahf
pushf
sub
inc
call
and
(bad)
(bad)
(bad)
jg
pop
dec
leave
fs
cmp
or
xor
sbb
push
mov
cmp
hlt
addr16
jmp
pop
or
fldcw
sbb
fs
pop
lahf
jb
mov
(bad)
in
or
mov
repz
les
inc
sub
adc
(bad)
dec
ins
adc
neg
mov
cwde
icebp
xchg
xor
push
clc
dec
(bad)
xchg
test
test
xchg
in
lahf
movs
pop
jmp
jmp
jno
cmp
cmp
and
cdq
xchg
rcl
(bad)
(bad)
call
cdq
xrelease
stc
dec
push
xchg
ja
outs
jecxz
and
sbb
(bad)
mov
mov
pop
dec
xchg
aam
and
mov
call
les
or
lds
and
fild
fwait
cli
call
ins
cmp
mov
push
popa
daa
std
call
call
outs
out
std
push
adc
dec
sub
fisub
and
adc
adc
es
mov
sbb
scas
shl
add
fsub
pushf
mov
call
adc
(bad)
dec
or
xchg
jmp
bts
iret
data16
pop
jg
xor
pop
mov
(bad)
dec
fist
inc
cdq
je
(bad)
xor
js
mov
mov
jnp
(bad)
inc
jl
dec
stos
mov
ret
jns
mov
mov
jmp
(bad)
call
adc
sub
sbb
std
test
ins
sbb
aad
dec
in
mov
push
into
imul
test
xor
aas
cmp
fisubr
inc
mov
(bad)
movs
push
mov
mov
inc
or
and
cmc
pop
mov
and
mov
push
retf
xchg
out
pop
loop
fadd
ret
cmc
jg
pop
pushf
imul
pop
adc
fsubrp
or
(bad)
gs
dec
gs
mov
ja
sub
push
mov
(bad)
jmp
int
retf
sbb
pop
pop
push
cmc
ja
jo
imul
idiv
sar
(bad)
(bad)
(bad)
call
jb
retf
and
repz
rcr
mov
daa
stos
outs
adc
pop
push
xchg
jae
cs
clc
add
test
outs
inc
dec
jmp
(bad)
(bad)
dec
(bad)
xchg
movs
scas
cli
cwde
push
cdq
pop
mov
jmp
sub
mov
jmp
pop
int3
mov
mov
cmp
into
scas
cmp
sub
mov
call
je
pop
sbb
xchg
leave
out
add
and
dec
enter
inc
outs
and
sub
add
xchg
add
mov
or
je
sub
add
retf
or
mov
lods
gs
call
in
adc
xor
mov
ss
(bad)
call
xor
mov
mov
jo
sbb
movs
lahf
mov
call
das
lods
repnz
mov
call
or
scas
mov
aad
nop
adc
(bad)
enter
std
dec
(bad)
(bad)
call
test
jae
sbb
iret
orps
in
cmp
xor
aaa
fadd
push
scas
mov
ins
dec
outs
bound
ins
cld
das
clc
push
dec
jmp
out
sub
push
lods
push
movs
dec
iret
popa
je
jbe
jl
sub
cmp
lods
xchg
push
in
dec
imul
fild
int
(bad)
(bad)
push
xchg
jge
(bad)
push
adc
jno
jmp
lahf
dec
aad
aad
cmps
add
pop
retf
dec
das
popf
je
ret
mov
pop
or
test
inc
hlt
call
cli
inc
retf
pop
cmp
(bad)
(bad)
push
daa
jle
stos
or
fisub
mov
aad
movs
ret
sub
ins
les
in
ins
(bad)
push
stos
mov
(bad)
imul
push
mov
cmp
(bad)
(bad)
(bad)
inc
test
call
inc
rdmsr
jnp
scas
push
mov
mov
jb
cmp
cmp
jmp
(bad)
mov
mov
push
inc
dec
jns
xchg
cli
and
call
add
ds
in
mov
icebp
cld
push
push
sbb
adc
out
mov
adc
(bad)
(bad)
mov
lock
mov
cs
fcomip
push
call
data16
out
pushf
xor
inc
(bad)
jmp
call
jle
or
xchg
push
rcr
mov
ins
and
mov
aad
xor
sub
scas
mov
push
pop
loopne
(bad)
(bad)
jmp
out
retf
(bad)
aaa
pop
cmp
jle
js
mov
aaa
lock
scas
stos
pushf
call
cmp
repnz
xchg
test
mov
nop
pop
sbb
mov
add
(bad)
(bad)
(bad)
push
repnz
pop
nop
lea
scas
jno
stos
or
iret
jl
push
mov
sti
ror
(bad)
push
int
xchg
cs
enter
call
sub
iret
sbb
jg
popa
sbb
and
jo
(bad)
mov
ret
push
int3
add
cmp
push
adc
adc
add
xchg
retf
adc
xchg
sub
into
jg
call
sub
jae
adc
lds
cmp
test
dec
mov
or
mov
cli
pop
push
ret
stos
pop
mov
mov
es
(bad)
jmp
je
mov
sar
inc
adc
inc
push
(bad)
std
scas
xacquire
and
lods
mov
cmp
mov
iret
(bad)
sbb
mov
(bad)
(bad)
(bad)
call
shr
xor
lods
fldcw
out
cmp
add
pop
add
fisub
scas
popa
rcl
or
(bad)
scas
push
xchg
outs
outs
dec
push
mov
and
sub
mov
xchg
and
(bad)
(bad)
push
hlt
sahf
push
or
ror
in
(bad)
mov
fild
push
cmp
inc
mul
cmp
lds
inc
sbb
cmps
pop
call
mov
fist
in
inc
sub
pop
mov
dec
scas
mov
neg
dec
mov
outs
mov
push
add
and
sar
aam
rcl
adc
mov
dec
fsub
ret
sub
pop
lock
call
mov
jecxz
inc
sub
test
mov
jns
pusha
inc
sub
jmp
or
sbb
fs
dec
test
mov
push
pop
jb
push
rcl
ins
or
lock
xchg
mov
sar
dec
dec
or
or
stos
sbb
mov
sub
fild
cli
jo
mov
dec
dec
cmps
daa
ficom
lods
cmp
or
(bad)
(bad)
call
cmps
stc
mov
in
iret
call
or
dec
mov
outs
dec
sub
mov
lods
out
mov
ja
call
dec
cmp
inc
or
and
xchg
adc
mov
ins
mov
aam
shl
scas
(bad)
imul
mul
out
mov
ja
popa
inc
mov
lahf
daa
lahf
pop
mov
jge
push
mov
out
cmps
adc
stos
inc
std
xchg
aaa
xchg
es
jns
(bad)
mov
add
pop
stc
inc
repz
mov
mov
mov
xor
adc
jmp
pusha
ins
jecxz
dec
data16
pop
jne
lahf
push
loopne
add
and
jmp
in
cmp
mov
mov
pusha
xor
or
mov
rcr
loope
rol
xchg
std
xchg
sar
xchg
xor
mov
or
push
push
fst
(bad)
(bad)
(bad)
call
int
mov
mov
stos
leave
xchg
and
mov
or
or
out
or
sub
push
mov
pop
sub
dec
sbb
(bad)
(bad)
inc
popf
inc
retf
movs
lock
std
pop
es
cmc
jnp
pop
jmp
icebp
call
scas
inc
pop
aam
loope
inc
adc
lods
push
jns
cmp
(bad)
call
bound
lahf
push
cmp
push
in
sub
neg
sub
inc
push
jmp
mov
mov
fnstsw
fdivr
push
xchg
adc
movs
jg
and
sbb
call
scas
adc
aas
cs
(bad)
(bad)
inc
add
xor
sub
ror
sub
sbb
or
sub
jge
out
dec
(bad)
(bad)
(bad)
(bad)
cmp
cmp
gs
int
jp
mov
jns
pop
imul
retf
cli
dec
fnstcw
cmps
add
jne
jg
xchg
pop
js
push
fild
mov
movs
dec
shr
int
outs
mov
sahf
or
inc
pop
cmp
mov
push
mov
or
adc
popa
sub
jg
out
loopne
mov
(bad)
fisttp
push
pop
jg
sbb
jae
push
cmps
fbld
pop
test
es
dec
fwait
push
cmp
push
mov
movs
xchg
jle
mov
loop
outs
xor
and
sub
(bad)
add
sbb
mov
mov
pop
repz
mov
mov
adc
scas
(bad)
(bad)
(bad)
mov
jne
push
jbe
les
test
mov
sub
push
sbb
cmp
mov
mov
adc
adc
mov
ins
fnstenv
and
ror
call
stc
out
shl
adc
mov
clc
movs
sbb
or
jecxz
sbb
jp
scas
mov
xchg
jp
mov
jmp
push
jb
fimul
sbb
add
mov
loopne
(bad)
(bad)
jg
sub
jge
shl
je
push
iret
and
jb
imul
sar
mov
pop
pop
cs
push
cmp
dec
lods
sub
push
aas
and
jbe
(bad)
test
dec
dec
mov
fild
fwait
jle
call
out
push
call
in
mov
ins
pop
sbb
(bad)
loopne
in
lods
xor
daa
inc
sar
inc
jmp
push
xlat
pop
fsubr
nop
imul
inc
jmp
cmp
shl
stos
out
std
(bad)
(bad)
jg
sbb
adc
fisttp
(bad)
bswap
adc
mov
call
mov
int
jg
sub
fisub
ja
cmp
mov
dec
sub
retf
icebp
push
add
iret
sahf
shr
sub
cmps
nop
stc
jmp
pop
dec
sub
fiadd
lea
fmul
lock
pop
(bad)
inc
fsubr
mov
jl
fsubr
jg
(bad)
(bad)
mov
adc
sub
int3
int3
mov
lods
fild
mov
mov
call
mov
xor
ja
addr16
fbstp
pop
dec
iret
sbb
inc
repz
jmp
inc
pop
stos
push
xor
imul
cmp
call
or
out
popf
jmp
adc
or
scas
mov
adc
mov
adc
(bad)
(bad)
(bad)
call
mov
retf
push
shl
stos
sbb
fisttp
call
inc
fbld
std
inc
int3
pop
mov
mov
xor
or
xchg
mul
xor
xchg
scas
(bad)
mov
cmp
loop
movs
cli
or
mov
sub
jmp
pop
jno
adc
(bad)
(bad)
(bad)
(bad)
jmp
mov
lods
jg
pop
imul
jge
js
push
cmp
movs
mov
adc
mov
fwait
or
or
sbb
inc
or
sbb
test
add
mov
inc
inc
retf
push
mov
adc
and
push
call
jmp
fild
(bad)
adc
and
movs
jmp
stos
mov
je
mov
inc
or
call
nop
dec
push
int3
pushf
pop
inc
in
mov
cmps
cmp
fidivr
add
call
jmp
xchg
or
push
mov
xchg
add
(bad)
mov
cmps
and
pop
lahf
enter
sub
cmp
push
sti
add
(bad)
(bad)
mov
mov
movs
sub
test
mov
jb
mov
xchg
sbb
int3
pop
loop
mov
pop
cmps
das
clc
pop
jmp
imul
imul
dec
ins
rol
das
mov
(bad)
(bad)
jmp
stc
mov
cmps
add
into
dec
push
xor
stos
rcl
mov
jmp
out
js
daa
test
outs
mov
mov
out
or
popf
inc
dec
xchg
sbb
cmp
and
stos
aas
xor
push
fdivr
sub
mov
inc
cmp
sub
icebp
pushf
cwde
stc
repnz
sbb
pusha
cwde
pop
cmp
fld
in
pushf
cmp
stos
adc
(bad)
(bad)
push
outs
scas
mov
les
sub
dec
stos
adc
pop
and
stos
push
jmp
cmc
xor
pop
in
mov
or
pop
mov
jmp
sub
xor
or
in
aam
popf
dec
mov
leave
out
push
push
inc
mov
sar
(bad)
inc
das
mov
popa
cmp
jb
imul
adc
pop
dec
push
mov
cwde
cs
dec
inc
aam
(bad)
in
imul
push
mov
dec
mov
call
sar
cmc
stos
pop
arpl
stos
or
cmc
ja
stos
rcr
int3
mov
das
(bad)
fisubr
push
or
push
jmp
or
jmp
clc
cmp
xchg
iret
cmp
or
jmp
fcomip
jmp
out
mov
jmp
sub
scas
lods
(bad)
sub
(bad)
(bad)
(bad)
dec
repz
sub
jns
mov
xlat
push
fsubr
fsubrp
pop
dec
(bad)
cs
inc
mov
mov
sar
push
jmp
mov
mov
xor
call
outs
(bad)
push
push
cdq
inc
scas
rcr
jmp
xor
sub
dec
sub
std
pop
dec
and
das
sub
lods
mov
sub
add
pop
or
shl
retf
mov
(bad)
(bad)
inc
mov
sbb
es
and
nop
jmp
cwde
repnz
(bad)
(bad)
fcomip
jmp
out
cmps
push
sti
test
inc
out
jne
cmps
mov
xchg
push
mov
or
dec
or
iret
leave
iret
adc
iret
pop
(bad)
mov
mov
mov
mov
call
lods
(bad)
sbb
lock
pop
popf
loop
daa
movs
jmp
test
mov
pop
dec
mov
mov
or
mov
sti
dec
mov
push
sub
push
dec
repnz
leave
(bad)
(bad)
dec
fcmove
cmps
cmp
jmp
fild
mov
sbb
aam
or
repnz
sub
out
mov
push
(bad)
mov
pop
pop
ins
cli
(bad)
ins
fld
lods
sub
inc
dec
or
push
int
movs
fsubr
lods
push
(bad)
(bad)
jg
push
rol
inc
mov
sbb
aas
jle
sbb
(bad)
xsaves
sub
jmp
sbb
xor
out
stos
outs
(bad)
scas
adc
movs
imul
test
stos
push
sub
loop
pop
push
cli
loopne
sub
(bad)
(bad)
mov
xlat
ficomp
xchg
add
add
adc
dec
inc
mov
push
inc
xor
aad
(bad)
mov
(bad)
ret
xchg
push
call
sbb
sbb
and
call
ds
outs
push
and
cli
push
jge
xor
(bad)
pop
push
mov
(bad)
(bad)
jl
retf
or
lods
jmp
arpl
aas
jg
push
(bad)
(bad)
call
mov
scas
test
push
iret
sub
call
movs
mov
jbe
ja
or
imul
mov
push
lea
je
sbb
sbb
je
mov
std
js
mov
std
arpl
ins
add
sub
pushf
mov
adc
push
scas
(bad)
mov
(bad)
call
mov
(bad)
jb
push
pusha
mov
sub
(bad)
dec
push
fcomp
shl
out
lods
ins
mov
pop
push
test
push
ins
pcmpgtb
fs
scas
(bad)
jg
dec
xchg
(bad)
and
lahf
dec
or
xor
stc
(bad)
(bad)
(bad)
inc
cmp
pushf
xor
fwait
scas
loop
ret
lea
test
add
bound
or
sbb
imul
cld
fisttp
rcr
cmp
push
cmp
mov
ret
inc
jmp
push
adc
fsubr
or
xor
iret
pop
sbb
test
pop
(bad)
(bad)
(bad)
jmp
jg
in
xchg
or
ja
dec
cld
add
shl
movs
pop
mov
push
aad
sbb
(bad)
mov
mul
cwde
ja
jecxz
mov
fsubp
in
push
mov
(bad)
dec
aad
xchg
xchg
dec
sub
cli
jb
sub
adc
cld
add
push
(bad)
mov
dec
fisub
xor
outs
adc
dec
pusha
cdq
sub
pop
pop
pop
jg
iret
lods
fcomp
or
xchg
repz
cld
js
inc
cs
out
lods
retf
mov
(bad)
sub
dec
fsubr
mov
std
push
jmp
sub
pop
push
and
das
stos
mov
(bad)
(bad)
call
aad
mov
sub
inc
push
mov
cmp
adc
popf
add
out
scas
push
xor
cmps
jp
movs
(bad)
cmp
mul
dec
push
ins
jns
(bad)
jmp
mov
ds
xlat
cs
xchg
frstor
mov
xchg
sub
(bad)
(bad)
call
mov
ret
or
scas
aad
or
popf
(bad)
jmp
scas
and
or
(bad)
inc
mov
mov
and
mov
leave
sub
adc
(bad)
fbstp
push
dec
scas
cmp
adc
retf
jmp
test
push
xor
dec
outs
cdq
add
jmp
(bad)
call
test
aas
int
or
pop
cmp
retf
(bad)
std
or
in
mov
cld
dec
adc
movs
and
jbe
(bad)
(bad)
jg
mov
js
mov
outs
retf
or
call
inc
or
in
ret
stos
in
(bad)
(bad)
jmp
jb
mov
test
les
sti
int3
push
into
daa
mov
add
and
call
cli
dec
fld
cli
inc
sti
dec
or
jnp
test
icebp
pop
and
pop
movs
sbb
add
or
in
add
inc
cmp
mov
mov
or
xchg
imul
sub
leave
jnp
mov
ins
cmp
or
jne
call
jmp
movs
int3
adc
sub
out
dec
xchg
adc
jmp
xchg
sub
jl
ds
push
push
cs
push
mov
call
push
sub
(bad)
sbb
pop
mov
(bad)
(bad)
jp
loope
mov
test
xchg
fst
dec
sbb
cld
adc
cmp
adc
pushf
xchg
jmp
mov
mov
or
xor
mov
test
inc
aaa
enter
(bad)
jmp
add
iret
lahf
scas
test
das
adc
xor
mov
ret
sbb
pop
cli
inc
xor
adc
sub
loop
idiv
(bad)
(bad)
call
int
(bad)
jle
in
pop
dec
jge
cmp
add
and
mov
or
mov
xchg
jge
push
fstp
cs
enter
les
(bad)
push
pop
cli
call
(bad)
push
sbb
sbb
pop
inc
frstor
adc
or
add
mov
int3
and
call
inc
mov
repnz
or
mov
je
add
cmp
leave
retf
mov
xor
or
in
ucomiss
inc
imul
jmp
cli
push
das
fld
mov
(bad)
cmp
daa
pusha
inc
out
push
mov
jb
mov
mov
int3
mov
call
popf
fisttp
cmp
sub
cli
(bad)
(bad)
jmp
das
or
cwde
inc
mov
xchg
stc
inc
imul
dec
sub
ins
scas
shl
add
outs
fdivr
repnz
cs
call
pop
mov
pop
enter
mov
and
push
inc
mov
pop
shr
test
and
ss
push
pop
rcr
pusha
fisubr
or
sbb
and
jbe
mov
sub
push
in
test
fmul
jo
dec
(bad)
mov
call
mov
cmp
push
movs
jmp
cs
cli
xchg
and
and
call
call
mov
inc
push
or
push
sbb
data16
aam
fbld
push
sahf
mov
imul
das
xchg
inc
test
out
and
retf
stos
fwait
repnz
imul
shl
stos
mov
(bad)
xlat
push
(bad)
neg
mov
test
outs
mov
(bad)
(bad)
(bad)
call
fmul
xchg
bnd
xchg
or
out
retf
mov
sub
(bad)
dec
inc
cli
inc
inc
adc
cmp
or
mov
(bad)
(bad)
fcmove
push
pop
(bad)
push
das
add
mov
jmp
add
test
imul
jg
push
cmc
dec
in
sub
xchg
(bad)
in
push
mov
pop
cmp
jl
bound
enter
mov
retf
pop
or
mov
pop
mov
test
lods
scas
add
cmp
mov
(bad)
out
cmp
addr16
xchg
test
sub
mov
outs
pop
mov
adc
dec
scas
scas
jb
mov
sbb
inc
lahf
or
mov
fcmovbe
or
cld
inc
cmp
in
cmp
ins
sub
sub
cmp
inc
mov
jmp
cmp
test
inc
call
(bad)
call
xor
mov
repnz
pop
fsub
lods
popa
adc
sbb
(bad)
(bad)
jmp
xor
add
adc
repnz
push
sbb
shr
mov
push
sbb
out
dec
lods
std
fdivr
pop
scas
lea
push
out
inc
out
inc
scas
je
mov
std
cmp
das
out
and
push
test
cli
(bad)
fild
pop
add
xchg
add
fisubr
fcomip
cmp
ret
mov
mov
dec
(bad)
jmp
imul
adc
add
inc
inc
cbw
ret
pop
or
push
pop
in
lods
xor
nop
in
scas
(bad)
(bad)
mov
mov
movs
jmp
pop
and
or
scas
fs
push
clc
cmp
std
ficom
out
jg
sub
(bad)
(bad)
push
or
cli
mov
out
pop
sbb
fs
int
loop
loopne
dec
pop
(bad)
inc
push
push
int
fwait
ins
(bad)
mov
(bad)
(bad)
fbstp
out
inc
mov
add
std
cdq
pusha
enter
push
xchg
data16
std
test
jo
ret
mov
es
or
stos
or
iret
push
pop
repnz
sbb
out
adc
xchg
dec
cld
js
(bad)
(bad)
sti
mov
add
cmp
dec
mov
pop
adc
ss
dec
jbe
dec
sub
outs
ins
sbb
in
call
push
and
sbb
mov
das
or
push
mov
jmp
or
fucomip
fcom
(bad)
fcomip
mov
call
add
sub
ins
nop
(bad)
(bad)
(bad)
jg
pop
ja
push
mov
xchg
cmps
mov
and
int
stc
dec
dec
iret
jb
call
or
mov
cmp
push
push
mov
outs
adc
repnz
std
push
pushf
dec
mov
jg
xchg
shl
pop
(bad)
(bad)
jg
jmp
movs
scas
loopne
cli
xchg
in
cs
addr16
ret
ds
mov
mov
not
add
out
gs
mov
stc
adc
dec
xchg
js
movs
into
push
retf
in
enter
daa
das
pop
or
(bad)
(bad)
jle
dec
loopne
push
popf
mov
scas
lods
mov
ins
pop
lock
jmp
clc
adc
mov
xor
jmp
adc
jmp
jmp
(bad)
or
jecxz
sub
ret
sub
sub
sub
scas
push
sub
or
(bad)
(bad)
jmp
sub
lods
(bad)
lods
mov
and
push
push
pop
lea
mov
call
sub
clc
lds
jnp
pop
cmp
out
add
sub
xor
test
sub
sub
pop
dec
ret
mov
mov
(bad)
sbb
inc
adc
jl
ror
sub
dec
scas
ficomp
push
or
pop
jmp
cdq
(bad)
jno
lock
(bad)
call
inc
stos
retf
jae
sub
mov
mov
sub
imul
fisub
mov
sbb
fisub
test
jp
and
(bad)
(bad)
(bad)
(bad)
out
cmp
popf
fwait
mov
dec
push
lahf
mov
mov
add
sbb
dec
add
jb
pop
inc
jmp
hlt
(bad)
jmp
sub
es
sub
iret
or
in
jg
enter
(bad)
fild
out
stos
pop
mov
lea
inc
iret
test
ins
pop
xor
pop
(bad)
mov
xchg
jg
jge
shl
xchg
sub
shl
jo
repnz
es
sub
mov
inc
sbb
mov
dec
inc
fwait
cmp
movs
(bad)
(bad)
(bad)
dec
cwde
je
lock
stos
into
ss
inc
popa
cdq
inc
in
pop
outs
fcom
jge
jmp
jmp
mov
sub
das
mov
lock
in
mov
mov
add
(bad)
(bad)
(bad)
call
ret
push
bnd
jecxz
cdq
test
lahf
mov
rcl
cli
fs
adc
popa
std
(bad)
jmp
mov
call
push
push
test
jg
inc
(bad)
mov
icebp
add
pop
sbb
scas
fst
int
mov
and
gs
js
and
sub
sub
out
push
cmp
mov
test
mov
mov
adc
outs
fucomip
jb
and
(bad)
(bad)
(bad)
push
jb
push
ins
nop
xor
dec
mov
(bad)
push
out
cmps
cmp
sub
and
dec
loop
and
daa
loopne
inc
lea
movs
call
movs
(bad)
(bad)
jmp
cli
and
push
sub
or
inc
(bad)
fiadd
rcl
add
fadd
push
mov
test
inc
(bad)
(bad)
(bad)
dec
mov
mov
jmp
mov
aas
seto
nop
push
lods
mov
clc
repnz
mov
sbb
(bad)
imul
jecxz
pop
shr
(bad)
(bad)
inc
or
retf
mov
femms
mov
mov
jbe
jb
iret
scas
sub
cmp
lock
and
lds
and
ins
lock
rol
in
loop
dec
mov
(bad)
(bad)
dec
ds
scas
xor
sbb
add
popa
mov
dec
in
dec
sub
into
inc
mov
sahf
popf
movs
lods
push
mov
fbld
ficom
add
cmp
add
cdq
sbb
dec
sbb
(bad)
(bad)
(bad)
mov
in
pop
fidiv
mov
adc
fwait
sbb
ins
stc
mov
call
(bad)
(bad)
call
jns
scas
mov
sub
xchg
jmp
sar
sbb
fsubp
fcom
cwde
sub
(bad)
out
push
test
shl
cdq
(bad)
das
in
mov
call
jge
dec
xchg
pop
into
int
std
ins
push
enter
add
bound
sub
sub
mov
cmc
gs
mov
stos
test
cmps
and
cld
call
loopne
jb
xor
stos
(bad)
adc
inc
dec
popa
test
hlt
data16
cmp
mov
mov
stos
shl
ss
or
or
call
(bad)
std
mov
(bad)
repz
ja
push
stos
pop
mov
scas
xchg
call
(bad)
in
outs
jb
(bad)
(bad)
jmp
scas
jle
cdq
dec
sub
out
rcr
add
ins
cmps
add
lock
(bad)
out
into
sbb
jnp
pop
add
jmp
arpl
sbb
dec
inc
out
mov
repnz
push
loopne
int3
out
dec
sbb
mov
es
lock
sub
call
adc
inc
lods
adc
(bad)
fbld
adc
(bad)
mov
add
ins
sub
movs
(bad)
jmp
dec
mov
push
movs
dec
test
or
(bad)
mov
gs
fisubr
adc
push
push
pushf
push
in
cmps
rcr
cmp
movs
inc
ins
mov
adc
mov
out
add
call
xchg
outs
xor
mov
mov
repz
call
and
adc
lea
int
in
dec
sti
fst
sbb
inc
movs
push
push
push
or
jge
sbb
repz
(bad)
(bad)
(bad)
call
movs
xchg
ins
clc
xor
stos
pop
test
repnz
loop
repnz
inc
cmp
xchg
clc
(bad)
cmp
fidiv
adc
mov
fdiv
scas
or
adc
jo
movs
push
mov
fdivr
cdq
pop
jnp
push
xchg
lock
pop
fadd
sub
cld
adc
rcr
ficomp
add
fistp
(bad)
call
fmul
mov
mov
or
clc
aam
(bad)
inc
iret
sbb
and
sub
mov
aaa
lock
je
add
retf
push
pop
shl
sub
push
test
dec
adc
add
lds
adc
jecxz
mov
lods
je
or
scas
imul
fld
loopne
sub
cli
adc
arpl
imul
stos
mov
scas
cmp
mov
pop
ins
mov
lods
sub
es
fwait
adc
(bad)
(bad)
(bad)
jmp
sbb
repnz
add
add
mov
pop
and
imul
hlt
jne
jl
nop
xchg
mov
xchg
sbb
pop
(bad)
(bad)
sti
ret
retf
fwait
retf
fstp
or
(bad)
call
ret
enter
jge
cmp
or
in
sub
int
lds
das
push
add
movs
pop
mov
mov
stos
jg
idiv
jo
call
(bad)
(bad)
aad
lea
jns
(bad)
(bad)
(bad)
(bad)
mov
dec
sub
mov
cwde
repnz
adc
adc
rcr
arpl
lock
addr16
push
mov
call
inc
sbb
(bad)
push
sub
mov
mov
push
add
add
inc
push
mov
mov
mov
(bad)
sahf
jmp
out
(bad)
(bad)
(bad)
mov
fisttp
lahf
mov
cmp
pop
lods
enter
ins
(bad)
stos
dec
loop
mov
mov
bound
call
or
adc
xchg
or
scas
dec
(bad)
mov
movs
imul
xor
clc
call
std
nop
ret
(bad)
out
sub
or
mov
mov
outs
clc
dec
xchg
cmp
sbb
retf
or
in
outs
movs
(bad)
(bad)
dec
std
pop
mov
std
inc
jmp
ins
or
fld
jmp
or
inc
pop
or
xchg
movs
mov
call
dec
ds
rcl
or
out
pusha
adc
bound
test
xor
(bad)
(bad)
mov
lahf
mov
(bad)
cld
mov
(bad)
pop
pusha
stos
and
or
mov
(bad)
(bad)
(bad)
jmp
sbb
push
inc
jle
mov
int3
adc
pop
cmps
jp
test
cmp
push
in
sub
push
ficomp
enter
adc
std
inc
mov
mov
xchg
and
jbe
lock
lods
dec
cmp
aad
mov
fstp
scas
push
movs
(bad)
(bad)
(bad)
dec
sbb
mov
loop
sub
jg
in
xchg
adc
aad
ja
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fsub
stos
ret
enter
jmp
mov
(bad)
push
jl
loop
pop
xor
(bad)
sub
pop
inc
aam
(bad)
fcom
out
push
test
cmp
(bad)
fnstcw
xchg
mov
retf
das
inc
push
dec
jmp
sbb
jmp
or
and
iret
push
mov
enter
mov
push
call
push
or
push
movs
into
mov
aas
jmp
ins
xchg
loope
xchg
sbb
test
(bad)
(bad)
call
push
rcl
push
xchg
je
lds
dec
jns
cmps
dec
in
inc
(bad)
(bad)
(bad)
push
je
hlt
mov
sub
mov
push
shl
lea
sbb
mov
push
scas
loop
in
pop
ror
cmp
cmp
call
mov
cli
gs
jge
or
cmp
push
test
sub
(bad)
call
outs
(bad)
xor
add
lahf
call
(bad)
mov
xor
jg
mov
mov
xor
and
jbe
or
shl
or
ret
loop
mov
push
lahf
retf
fbld
inc
call
xchg
sbb
or
(bad)
(bad)
cli
iret
shl
pop
repz
xchg
jns
xor
repz
and
pusha
mov
cli
mov
dec
inc
sub
ss
inc
mov
bound
and
movs
(bad)
jmp
push
mov
test
call
in
or
pop
ja
(bad)
mov
push
jno
or
mov
ret
jbe
(bad)
push
lock
mov
retf
leave
je
inc
add
stos
push
std
or
clc
mov
pop
or
out
xchg
mov
pop
push
sub
mov
clc
out
or
add
sub
repz
pop
imul
call
push
rcr
adc
add
ins
sbb
(bad)
jg
or
nop
mov
ret
imul
jp
pop
leave
std
pop
aad
int
or
ins
cmps
fst
sahf
sub
sbb
jp
cld
aaa
(bad)
(bad)
(bad)
mov
pop
mov
iret
inc
sub
enter
dec
add
ins
add
and
cmp
xchg
add
(bad)
pusha
into
add
dec
into
lahf
popa
dec
jne
lods
test
test
mov
and
das
call
or
test
(bad)
(bad)
(bad)
mov
test
retf
mov
pusha
rol
xchg
push
jns
adc
mov
(bad)
push
scas
mov
ins
sti
push
or
mov
int
test
call
fidiv
idiv
js
xchg
cmp
repz
fmul
push
into
mov
cld
(bad)
fcomip
jb
fwait
add
jno
push
loop
add
sub
sub
jne
dec
pop
cli
aaa
jo
sbb
push
mov
(bad)
(bad)
(bad)
call
fidiv
stos
les
or
sub
mov
cs
aad
hlt
inc
jmp
scas
out
imul
(bad)
(bad)
(bad)
(bad)
jns
lahf
xchg
lea
xchg
out
jle
movs
pop
stos
mov
bnd
push
jae
mov
xchg
jmp
push
jb
popf
jl
(bad)
std
rcr
jecxz
(bad)
(bad)
(bad)
call
mov
scas
rol
retf
add
sub
mov
into
(bad)
(bad)
and
sar
and
and
push
(bad)
es
mov
nop
stc
and
mov
das
mov
lods
jo
cmp
je
jp
mov
ja
sub
jmp
test
xor
fnstcw
(bad)
(bad)
(bad)
push
and
xchg
fwait
add
adc
xor
or
xor
aaa
push
cld
pop
loopne
xchg
inc
div
fisubr
fild
jo
push
mov
call
(bad)
out
in
mov
into
or
scas
pop
mov
(bad)
push
das
jmp
inc
sahf
or
push
cvtps2pi
sahf
cs
in
daa
sub
xor
mov
xchg
lock
not
retf
cmp
shr
lock
pop
cmp
pop
(bad)
sbb
out
pop
mov
pop
push
(bad)
(bad)
(bad)
jmp
and
sub
imul
mov
pop
sub
mov
mov
adc
(bad)
(bad)
(bad)
jmp
pop
(bad)
mov
push
add
iret
sub
scas
push
xor
inc
loop
xchg
xchg
jae
xchg
mov
imul
(bad)
pop
push
or
stos
sub
div
(bad)
(bad)
jmp
out
adc
out
sbb
ins
adc
and
retf
or
push
sbb
inc
push
jecxz
pop
sar
ja
mov
inc
jl
ins
pop
(bad)
(bad)
(bad)
jmp
outs
fimul
jo
mov
mov
jmp
mov
dec
call
cmp
mov
std
jnp
xchg
or
fs
jmp
jmp
in
sti
(bad)
(bad)
(bad)
(bad)
dec
ret
es
pop
adc
push
lods
jg
mov
arpl
push
inc
push
push
(bad)
inc
dec
out
ins
fisubr
out
sub
outs
cld
dec
xchg
and
imul
xor
mov
out
or
(bad)
(bad)
call
nop
scas
xor
mov
cmps
jns
mov
cmps
in
sub
dec
call
adc
(bad)
(bad)
mov
icebp
cmp
push
(bad)
sub
mov
mov
(bad)
(bad)
mov
scas
jp
dec
or
ds
sbb
sub
movs
xlat
xchg
mov
stos
(bad)
(bad)
push
adc
mov
mov
repnz
fisub
lock
push
jg
iret
or
pusha
pop
(bad)
(bad)
call
cmp
or
push
(bad)
scas
push
xor
or
and
push
sub
fwait
add
jg
adc
jmp
pop
sub
call
loopne
out
data16
cmp
mov
mov
test
(bad)
(bad)
jmp
into
jg
cmp
pop
in
iret
das
and
clc
fisubr
and
push
pusha
shr
mov
cmps
lock
mov
(bad)
sti
cmp
dec
cmp
xor
(bad)
(bad)
call
inc
sub
cmps
sahf
leave
adc
adc
push
and
cmps
mov
mov
int
cmp
int
(bad)
out
cli
(bad)
clc
xchg
sbb
inc
sar
lds
sub
xor
rcl
mov
(bad)
(bad)
call
shr
scas
std
adc
dec
sbb
std
xlat
fsubr
ds
outs
dec
(bad)
jg
dec
add
or
jmp
mov
mov
(bad)
mov
mov
loopne
add
adc
test
sub
add
call
or
adc
and
lahf
ret
cld
inc
bound
jle
cwde
jnp
mov
pop
jg
lds
xor
pop
inc
push
test
cmp
mov
cdq
dec
movs
cdq
xchg
adc
xchg
mov
movs
(bad)
call
cdq
adc
mov
mov
push
or
fnsave
add
js
inc
and
cdq
push
fst
or
dec
add
lods
cmp
jb
and
(bad)
icebp
stos
or
add
je
jmp
lds
dec
push
jmp
gs
add
dec
(bad)
jmp
sbb
dec
mov
push
mov
xor
sbb
jnp
dec
cmp
dec
push
add
(bad)
(bad)
mov
cmp
icebp
xlat
xor
dec
inc
inc
xchg
dec
mov
pusha
push
(bad)
inc
cmp
xchg
inc
test
in
add
sub
daa
gs
(bad)
and
add
ror
out
mov
xchg
mov
and
(bad)
(bad)
jg
and
cmp
ins
mov
das
stos
rcr
xor
sub
(bad)
(bad)
fild
stc
(bad)
ins
outs
mov
loop
cmps
sbb
mov
xchg
cli
inc
mov
pop
in
adc
cs
push
xchg
jmp
jmp
cmp
inc
dec
mov
push
imul
loope
or
xor
lods
movs
or
ret
or
xchg
scas
movs
mov
cmp
in
or
xchg
mov
push
adc
(bad)
(bad)
(bad)
mov
mov
ins
inc
lahf
(bad)
mov
and
or
movs
and
mov
push
pop
and
mov
adc
mov
call
mov
adc
push
in
leave
pushf
sub
mov
pop
out
es
sub
cmp
(bad)
(bad)
fdiv
xchg
addr16
loopne
mov
inc
inc
xchg
inc
or
or
loope
xchg
jne
in
outs
fmul
push
mov
mov
inc
fsub
mov
mov
and
sub
or
dec
mov
mov
retf
sahf
or
fsub
(bad)
dec
lds
les
pop
icebp
(bad)
(bad)
xchg
push
stos
jb
(bad)
jg
clc
sbb
je
in
daa
jg
jnp
(bad)
mov
loopne
(bad)
jg
or
adc
lods
push
mov
stos
cmp
out
enter
dec
fdivr
cmps
movs
inc
in
mov
sub
xchg
mov
mov
and
lds
cmps
sti
ret
stos
and
mov
outs
(bad)
in
loop
jmp
enter
nop
call
jmp
fdivr
(bad)
cmp
push
pusha
fisttp
aad
jno
jg
sub
xor
les
mov
addr16
and
cmps
(bad)
(bad)
fild
daa
push
jne
cld
xchg
mov
mov
adc
in
adc
repnz
fcomip
dec
sahf
paddw
lock
xchg
xchg
mov
push
mov
jmp
inc
jmp
cdq
loop
stc
imul
std
call
cmps
sbb
xchg
jb
call
call
sti
jg
mov
xor
sub
jecxz
test
adc
sbb
(bad)
(bad)
(bad)
call
lahf
and
push
in
sbb
call
xchg
outs
stos
mov
stc
and
(bad)
jmp
and
imul
add
mov
loope
addr16
mov
mov
dec
rcl
push
test
(bad)
jmp
sbb
pop
sub
jbe
fisubr
pop
xchg
mov
into
punpcklbw
mov
jmp
xor
mov
sbb
add
retf
xor
cmc
xor
sub
(bad)
(bad)
(bad)
call
inc
jmp
xchg
stos
sub
sub
adc
mov
or
mov
mov
(bad)
in
or
fwait
mov
outs
pop
sub
enter
into
(bad)
(bad)
mov
jbe
sbb
dec
cmp
xor
sub
lock
(bad)
call
mov
mov
adc
push
inc
popf
or
jns
mov
or
aaa
or
pop
push
rcl
mov
dec
test
fsub
outs
in
and
out
leave
into
sub
out
sbb
(bad)
cmc
jmp
movs
stos
inc
mov
mov
sbb
dec
sub
(bad)
(bad)
call
pop
popf
not
xor
cmc
sbb
scas
stos
cdq
je
ss
dec
mov
(bad)
(bad)
(bad)
ds
adc
xor
fs
in
push
add
mov
in
adc
cmps
dec
cdq
pop
(bad)
inc
mov
es
push
(bad)
push
sub
dec
loopne
pop
cli
lahf
mov
dec
(bad)
(bad)
(bad)
jmp
and
call
or
popf
popa
sub
jl
sahf
mov
jno
add
dec
sub
mov
mov
push
mov
ficomp
add
or
rol
cmp
mov
loope
iret
cdq
xchg
inc
pop
sti
(bad)
(bad)
(bad)
jmp
sub
mov
add
dec
sub
sbb
xchg
mov
mov
pop
call
not
sub
mov
sub
or
jp
sbb
xchg
push
ret
(bad)
call
adc
nop
je
(bad)
call
or
and
test
dec
(bad)
call
into
push
xor
icebp
ins
lea
loopne
push
add
loop
ins
leave
jg
ins
mov
cmp
test
cdq
jle
loopne
mov
adc
or
jmp
jae
pop
push
out
mov
aad
iret
loop
(bad)
(bad)
call
fcomi
or
fs
nop
dec
and
lds
and
loop
xchg
xor
dec
clc
(bad)
(bad)
jmp
cmp
and
ss
inc
popf
and
cmp
xor
cmc
cmp
outs
push
xor
mov
clc
sub
pop
add
inc
or
sbb
pusha
cld
mov
sbb
xor
pop
std
pusha
mov
sub
aas
bnd
jmp
retf
rol
jg
inc
fst
push
mov
mov
sti
add
enter
push
cmp
daa
dec
mov
dec
inc
aas
mov
and
add
pop
les
xchg
jmp
clc
mov
and
leave
out
cmps
xchg
sbb
jo
dec
jp
sbb
stc
adc
icebp
(bad)
(bad)
jmp
movs
nop
push
xor
dec
icebp
movs
cli
cs
mov
jg
int
mov
fdivr
xor
out
(bad)
call
push
xor
mov
(bad)
(bad)
ud0
cli
cmp
mov
xchg
or
fcomip
dec
mov
fldenv
and
lds
sbb
fsub
(bad)
mov
jno
mov
(bad)
jmp
push
js
xlat
iret
rcr
xlat
scas
(bad)
fldenv
fs
inc
cdq
push
sub
push
sub
jp
ja
dec
test
sahf
cmps
push
loop
add
sub
inc
mov
mov
mov
mov
loope
(bad)
or
pop
xchg
retf
loop
adc
jo
cs
jl
inc
clc
(bad)
inc
enter
in
std
adc
cmps
jmp
push
add
push
cmp
cmp
mov
jbe
retf
outs
sbb
mov
addr16
aas
xor
(bad)
scas
pop
daa
jnp
cmp
(bad)
(bad)
(bad)
jmp
repnz
or
sub
fild
mov
fsub
lahf
out
mov
div
inc
scas
in
fcmovne
sbb
fisttp
jae
test
sbb
(bad)
jmp
and
stos
fisttp
ins
in
adc
pop
sbb
(bad)
call
xchg
mov
lahf
sbb
push
mov
loop
lds
push
mov
aas
or
mov
(bad)
(bad)
(bad)
inc
mov
mov
stos
sbb
inc
inc
ficomp
or
jl
add
pop
xchg
enter
std
(bad)
jl
sbb
stos
push
mov
test
push
jo
jmp
sub
fs
idiv
ins
imul
lahf
sahf
or
mov
dec
mov
stc
mov
cmps
push
push
hlt
(bad)
cmp
adc
mov
sbb
xchg
mov
pop
pop
mov
adc
dec
(bad)
(bad)
(bad)
jg
cmp
mov
fiadd
jmp
add
sub
lahf
inc
das
push
dec
push
mov
or
outs
cmp
outs
inc
(bad)
mov
xor
jp
cwde
mov
mov
xchg
mov
(bad)
(bad)
call
inc
and
mov
push
xor
push
scas
aas
sub
and
mov
push
call
adc
mov
mov
jl
xchg
(bad)
(bad)
jmp
aam
ficom
inc
xor
call
ja
or
call
fwait
push
std
scas
add
pop
push
xchg
mov
iret
call
jg
mov
jo
sub
fld
add
mov
inc
sub
mov
ins
dec
cmp
jmp
(bad)
(bad)
cmp
jecxz
dec
ins
call
mov
inc
cwde
loope
lods
jl
xlat
(bad)
(bad)
push
mov
cdq
xor
mov
mov
mov
sbb
das
es
(bad)
(bad)
jg
sbb
mov
std
test
mov
dec
outs
jmp
fiadd
jmp
push
sub
sub
push
loopne
(bad)
(bad)
jg
cwde
inc
inc
add
not
fsubr
xchg
and
jnp
mov
mov
jnp
lock
dec
jns
gs
jmp
dec
lock
xchg
xor
xchg
shl
jns
or
push
test
mov
jns
sbb
xchg
xlat
inc
sar
adc
mov
call
add
dec
clc
(bad)
stos
adc
push
(bad)
xchg
je
cli
jg
inc
xchg
xor
or
les
cmps
sub
dec
or
imul
add
lds
push
in
pop
sub
jp
add
pushf
in
imul
aaa
inc
inc
mov
ret
ror
mov
sti
push
int3
push
movs
mov
adc
aaa
or
loope
pushf
ror
movs
addr16
push
lock
(bad)
sbb
or
(bad)
sub
std
in
bound
stos
jl
(bad)
push
add
fidiv
loop
xchg
ds
idiv
sub
(bad)
ins
inc
test
push
xchg
test
mov
clc
jmp
push
adc
aas
lds
clc
cmp
into
in
inc
shl
(bad)
jmp
jl
or
sub
scas
mov
(bad)
jmp
retf
push
mov
and
loopne
push
ret
lods
and
or
push
adc
sub
mov
jmp
pop
repnz
push
sub
jg
dec
retf
ja
add
cmps
mov
rcr
xchg
sar
pop
cld
hlt
repnz
jle
dec
mov
inc
repz
fucompp
mov
and
mov
cmp
ror
pop
out
(bad)
das
arpl
lea
dec
push
out
iret
inc
cmp
arpl
push
stos
jecxz
jnp
fst
outs
jmp
(bad)
mov
cmp
(bad)
(bad)
dec
cmp
stos
inc
cmps
and
mov
sub
mov
dec
inc
mov
outs
(bad)
mov
or
cmp
adc
jmp
inc
xchg
inc
sbb
jmp
dec
imul
(bad)
mov
shl
mov
(bad)
(bad)
mov
xor
mov
loope
hlt
leave
sub
cmps
jl
cmp
cmp
jmp
es
xchg
inc
ds
scas
stos
jb
jmp
call
cmp
jg
in
retf
scas
int
retf
xchg
jge
mov
nop
jg
or
outs
(bad)
pop
stos
inc
aad
sbb
aaa
sbb
or
retf
or
push
out
xchg
stc
popa
inc
xchg
adc
ins
cmps
retf
test
dec
test
xor
or
ds
gs
(bad)
jmp
sub
xor
mov
lods
call
jmp
mov
out
sub
sahf
or
pushf
xchg
mov
cdq
(bad)
(bad)
(bad)
(bad)
jmp
std
jmp
shl
mov
xchg
pop
xlat
xchg
xchg
fwait
imul
std
dec
mov
push
lods
(bad)
(bad)
(bad)
jmp
mov
int
pop
ds
pusha
or
push
retf
jnp
jmp
jns
and
(bad)
(bad)
jmp
mov
ret
fwait
xchg
sub
fsubr
mov
iret
sbb
ds
(bad)
(bad)
push
(bad)
mov
and
add
mov
sti
mov
jno
outs
add
(bad)
jmp
lahf
test
in
mov
adc
pop
sub
sub
mov
xor
push
jmp
inc
xchg
mov
test
shr
xor
dec
dec
cli
inc
sbb
out
sub
test
lahf
mov
add
push
ja
outs
cwde
add
sub
sub
dec
repz
pop
(bad)
jmp
(bad)
inc
stos
mov
into
xor
ss
pop
xor
sub
(bad)
lahf
(bad)
and
or
nop
jns
or
cdq
push
loopne
(bad)
push
jmp
cmp
fwait
shl
sbb
and
retf
jmp
stos
cmp
dec
inc
mov
outs
jl
and
sub
stos
movs
mov
mov
inc
mov
stos
xchg
lods
(bad)
es
adc
cli
fcomip
(bad)
push
loopne
and
in
scas
add
inc
js
pop
jmp
fcomp
inc
pop
inc
es
call
pop
lahf
fidiv
push
jmp
sbb
inc
mov
sub
(bad)
scas
mov
clc
dec
pop
xchg
pushf
data16
jns
xchg
mov
cld
(bad)
inc
jns
jp
fsubrp
jbe
loop
loop
fldenv
mov
mov
js
loopne
(bad)
inc
jo
enter
ret
dec
out
inc
cmc
not
stos
adc
jmp
sub
inc
iret
and
pop
adc
cs
ss
cmp
mov
pop
push
ficomp
(bad)
(bad)
mov
es
inc
test
jmp
frstor
retf
dec
pop
scas
loopne
(bad)
call
repnz
out
out
xchg
mov
cmps
mov
xchg
sbb
scas
les
push
call
or
outs
and
imul
clc
fild
jmp
ja
retf
cli
scas
shl
in
push
scas
adc
(bad)
inc
xor
add
cwde
div
mov
lods
inc
mov
xor
xor
dec
fnstcw
add
outs
jp
or
lds
inc
std
int3
in
into
mov
mov
and
(bad)
push
push
imul
mov
push
test
(bad)
(bad)
call
imul
cmps
dec
leave
(bad)
outs
movs
aam
dec
xchg
xchg
cmp
dec
mov
lods
mov
retf
jmp
adc
mov
and
call
xor
stos
and
cmp
push
jmp
and
dec
aad
push
cs
stc
xor
popa
cmp
inc
jae
or
add
xchg
(bad)
(bad)
(bad)
dec
call
mov
mov
dec
data16
jmp
or
sbb
jo
pop
test
push
sar
mov
jg
sbb
mov
xchg
xchg
js
lods
inc
std
push
inc
dec
mov
aas
cli
xchg
das
mov
pop
gs
ins
in
call
std
jmp
es
jno
mov
sub
mov
sbb
out
push
add
test
dec
(bad)
and
(bad)
(bad)
call
bound
xor
adc
and
inc
cdq
mov
pop
movs
add
or
(bad)
(bad)
dec
in
jle
sub
cmp
or
pop
dec
xor
sbb
xchg
(bad)
imul
adc
and
add
scas
inc
(bad)
(bad)
dec
push
xchg
(bad)
movs
push
or
push
jmp
retf
fidivr
mov
call
cdq
push
daa
hlt
sub
xlat
lods
mov
jp
(bad)
(bad)
jmp
fst
fs
cmp
fmul
(bad)
jge
cmps
rcr
mov
loop
loope
gs
in
lock
inc
mov
(bad)
loope
cld
mov
jg
sbb
(bad)
jg
and
adc
daa
sbb
gs
cmp
mov
shl
and
mov
mov
inc
lods
in
adc
cmps
test
inc
imul
fsubr
movs
inc
repz
pop
sbb
sub
jmp
ret
and
(bad)
(bad)
jmp
lock
sbb
xchg
movs
cmp
inc
mov
daa
mov
ret
jl
in
sbb
repz
call
fdivr
aas
in
nop
cmps
test
(bad)
(bad)
jmp
cmps
jns
jle
fwait
dec
pusha
jmp
adc
jge
xor
inc
scas
cli
or
dec
test
(bad)
(bad)
cli
mov
int
sub
imul
jge
jle
sbb
dec
cld
scas
nop
or
jmp
jg
xor
jp
push
(bad)
fsubr
fstp
test
movs
adc
movs
call
dec
mov
cwde
imul
iret
pop
push
pop
pop
(bad)
in
dec
stos
mov
rol
mov
(bad)
fcomip
shr
cli
movs
ror
pop
push
ror
out
push
mov
(bad)
(bad)
mov
inc
and
or
dec
iret
das
jg
sbb
imul
clc
inc
xchg
cld
fcomip
xor
ss
and
adc
daa
gs
leave
jg
setg
sbb
(bad)
(bad)
dec
inc
mov
movs
rcr
push
dec
sbb
cdq
mov
rol
or
test
add
ds
(bad)
(bad)
mov
jb
(bad)
mov
mov
loop
mov
sub
dec
jne
mov
(bad)
(bad)
(bad)
(bad)
cld
push
mov
mov
sub
mov
mov
or
sbb
sub
int
fcom
jmp
fsubr
push
sbb
(bad)
push
jp
push
jbe
cmp
movs
jge
dec
fcom
fs
xchg
mov
and
shl
jns
retf
dec
ins
mov
add
pusha
push
rcl
stos
push
(bad)
cli
dec
cmp
(bad)
sub
fwait
lea
sub
mov
pop
sbb
pop
push
jp
push
or
pop
(bad)
in
sub
pop
pop
sub
rcr
or
mov
jmp
push
fimul
add
xchg
pop
std
sub
mov
stos
jecxz
or
test
(bad)
fild
cmps
stos
xor
test
fwait
add
sahf
and
adc
push
add
cmps
dec
adc
(bad)
(bad)
dec
add
mov
jb
xor
push
xor
inc
(bad)
das
dec
out
inc
shl
shl
mov
shl
mov
lds
and
push
pop
cmp
mov
pop
jne
push
jmp
mov
pop
fwait
and
jb
(bad)
(bad)
call
std
jnp
loop
mov
jge
jmp
lods
add
inc
mov
cdq
push
push
(bad)
(bad)
(bad)
jmp
mov
ror
mov
into
mov
into
xchg
outs
cmp
push
pop
aam
out
cmps
fmul
xchg
pop
mov
xchg
into
iret
sar
(bad)
jg
(bad)
bound
dec
dec
xchg
(bad)
pop
mov
adc
xor
cmp
(bad)
fisttp
cmp
mov
add
sub
call
inc
sub
lods
xor
sub
dec
std
mov
push
test
clc
push
std
sub
mov
or
(bad)
popa
loope
push
mov
shl
sub
imul
mov
push
inc
cmp
fstp
(bad)
(bad)
mov
(bad)
mov
cli
lea
mov
scas
xor
(bad)
add
(bad)
jmp
mov
dec
pop
scas
push
scas
(bad)
(bad)
fcomip
lds
adc
ror
lods
(bad)
lods
add
(bad)
cmp
sub
(bad)
(bad)
dec
mov
test
inc
fidiv
mov
mov
jmp
xchg
inc
test
push
fwait
sub
mov
ret
add
mov
mov
inc
test
xchg
adc
mov
imul
(bad)
fild
out
test
mov
shr
jb
dec
(bad)
repnz
(bad)
call
jg
cmp
daa
mov
das
sbb
std
dec
test
shl
(bad)
jmp
and
jb
cs
dec
loop
cmp
dec
retf
in
xchg
(bad)
(bad)
(bad)
jmp
adc
dec
or
xchg
cmp
jae
dec
jnp
iret
test
fisttp
pop
int
add
test
sub
xchg
dec
push
and
outs
jb
mov
mov
test
(bad)
(bad)
(bad)
push
addr16
fnstcw
mov
add
enter
arpl
sub
mov
mov
(bad)
or
xlat
and
das
or
sub
jns
and
dec
pop
mov
mov
push
xor
in
push
sbb
xor
adc
das
sar
sbb
jp
fcomp
sub
aas
mov
ss
and
sbb
stc
and
mov
in
es
or
add
cli
in
pop
and
lods
repnz
push
cli
sub
cmps
xchg
mov
lahf
ret
jg
test
test
mov
scas
dec
movs
lock
in
cli
mov
cli
loope
call
loopne
adc
push
loopne
cmps
mov
xchg
push
iret
mov
cwde
sbb
sub
or
(bad)
jg
call
ss
mov
fcmovne
jg
inc
mov
add
lods
jmp
mov
mov
in
cmp
sbb
add
(bad)
mov
das
call
and
inc
push
jnp
xor
push
std
scas
repz
xor
mov
sub
mov
ficom
std
(bad)
mov
xchg
or
daa
push
dec
push
mov
dec
push
mov
adc
call
inc
cmp
add
mov
mov
leave
ret
pushf
pop
cmp
pop
mov
test
stos
mov
push
fisubr
cmp
(bad)
mov
or
xchg
mov
sub
mov
js
imul
push
mov
lods
or
scas
add
sbb
lahf
(bad)
(bad)
jmp
sbb
fldcw
sub
bound
push
pop
xchg
(bad)
fcomip
dec
iret
sub
mov
mov
(bad)
(bad)
(bad)
mov
and
fsubr
call
xor
sar
sub
cmp
pop
inc
sub
dec
inc
stos
ret
fisttp
retf
sub
pop
cmp
repz
sbb
adc
das
pop
int
in
ins
push
test
adc
ss
add
pop
std
mov
sub
jmp
cli
repnz
add
jle
call
sub
ss
pop
mov
pop
(bad)
inc
pushf
ret
adc
popa
inc
repnz
fidiv
sbb
out
cmc
outs
mov
dec
out
adc
lods
push
leave
stos
ja
rcr
and
loop
pop
push
add
call
jmp
enter
dec
jmp
ret
cmps
cmp
or
xchg
or
add
fild
movs
cmps
rep
in
mov
mov
sahf
ret
(bad)
in
scas
arpl
sar
into
fs
xchg
sub
cmp
sub
or
aas
push
(bad)
(bad)
fisttp
xor
ret
lods
jmp
cmps
imul
ss
(bad)
(bad)
inc
sub
xor
pop
inc
out
add
test
dec
(bad)
cmps
in
out
int
scas
push
imul
cli
(bad)
call
mov
mov
dec
sub
jp
sub
cmp
(bad)
inc
push
cmps
mov
or
push
frstor
sahf
and
and
or
dec
jmp
and
into
std
(bad)
mov
mov
sbb
xor
mov
call
xor
push
loop
xchg
inc
inc
into
pop
call
mov
and
xor
nop
mov
pop
mov
sbb
movs
call
cld
fs
xchg
jge
xor
sbb
cld
sbb
call
imul
enter
scas
sbb
jb
inc
jmp
call
cmc
xchg
mov
fbld
inc
out
scas
or
lods
loop
push
jg
popa
cld
mov
mov
fnstcw
cli
jmp
(bad)
mov
sub
imul
dec
daa
out
fs
dec
xor
push
sbb
aad
xchg
imul
pop
repz
jmp
or
int
pop
add
retf
xor
cmps
inc
pusha
pop
jae
idiv
(bad)
(bad)
call
adc
xchg
jp
cmp
mov
adc
test
cmp
popa
test
sub
idiv
(bad)
(bad)
out
call
dec
pop
push
or
xchg
iret
(bad)
sar
cli
push
sub
cmp
jle
movs
push
pop
sub
sub
push
sar
(bad)
(bad)
mov
adc
shld
push
dec
imul
sub
mov
inc
push
cmp
jmp
cli
aaa
adc
aam
mov
jmp
ret
(bad)
pop
stos
aaa
(bad)
mov
mov
sub
mov
jb
xchg
(bad)
inc
add
mov
imul
mov
cmp
(bad)
(bad)
dec
xlat
or
or
jmp
pop
sahf
adc
fistp
and
mov
mov
movs
scas
(bad)
(bad)
jg
movs
std
pushf
xchg
sahf
or
ficomp
add
aad
test
dec
fsub
ins
in
(bad)
(bad)
(bad)
jmp
(bad)
mov
xchg
jb
mov
inc
push
mov
mov
retf
lods
sub
(bad)
jg
in
retf
push
sahf
dec
call
rcl
and
repnz
loopne
stos
(bad)
call
(bad)
call
rol
test
sub
adc
sub
loopne
neg
jg
push
outs
pusha
or
and
xor
xor
sbb
stos
mov
(bad)
dec
push
jbe
sub
xchg
jnp
jmp
addr16
retf
mov
loope
ja
scas
scas
cdq
call
push
dec
cmp
retf
imul
jg
xchg
sub
xor
int
(bad)
clc
pop
jb
retf
loop
cmp
(bad)
jmp
mov
ins
sahf
pop
sub
test
adc
push
pop
and
(bad)
(bad)
dec
inc
daa
pop
call
push
fimul
cmp
ror
push
cli
inc
mov
mov
sub
mov
(bad)
lock
(bad)
(bad)
(bad)
cmp
(bad)
cmp
int
mov
or
imul
hlt
pop
add
jmp
(bad)
(bad)
(bad)
call
mov
mov
mov
xor
hlt
out
cmp
push
xor
mov
pushf
cmp
cs
(bad)
(bad)
jmp
add
lahf
sub
retf
popf
idiv
sub
cli
outs
mov
jmp
(bad)
(bad)
dec
pop
jb
inc
in
jnp
xchg
pushf
dec
mov
int3
cli
mov
jg
jnp
test
aad
(bad)
(bad)
(bad)
dec
ins
ror
jmp
mov
jl
mov
fcmovnu
(bad)
(bad)
jmp
and
es
popa
imul
mov
jle
sub
or
mov
movs
sbb
mov
sub
out
mov
xlat
cmps
icebp
shl
mov
dec
(bad)
inc
mov
enter
dec
mov
dec
add
dec
push
mov
(bad)
(bad)
call
stos
cmp
jns
retf
mov
das
lahf
retf
mov
push
and
(bad)
(bad)
(bad)
jmp
lods
push
sti
and
retf
popa
mov
scas
xchg
ret
repnz
jb
retf
pusha
hlt
(bad)
(bad)
push
cmp
add
xchg
hlt
sbb
loope
into
sbb
sub
xor
mov
xchg
icebp
in
adc
(bad)
call
mov
fild
push
out
call
adc
scas
mov
cli
(bad)
(bad)
cmp
mov
push
sbb
test
push
jmp
jmp
jle
test
(bad)
call
sub
movs
sub
shr
sub
and
lea
mov
mov
jmp
jge
or
cmp
push
fadd
imul
aas
xor
in
std
stos
sti
sbb
xchg
es
inc
ret
pop
push
movaps
mov
(bad)
call
(bad)
call
leave
pop
jo
xchg
push
dec
retf
(bad)
sbb
inc
xchg
int3
pushf
dec
and
das
out
outs
mov
push
fidiv
sbb
popa
inc
adc
sbb
mov
mov
push
icebp
push
out
dec
or
fwait
jecxz
pop
shr
pop
mov
mov
mov
jecxz
mov
mov
jb
sub
mov
or
(bad)
(bad)
(bad)
cmp
cmps
scas
(bad)
adc
in
mov
leave
(bad)
xchg
dec
sub
pop
cs
cdq
cmp
in
shl
(bad)
(bad)
(bad)
(bad)
call
ds
das
outs
push
lea
cld
xchg
mov
inc
cdq
mov
icebp
call
movs
sub
ds
sbb
jbe
cmp
pop
repnz
bound
stc
imul
fst
sub
mov
jle
cwde
jmp
adc
mov
jmp
lahf
mov
cmp
jp
pop
xchg
(bad)
mov
imul
mov
(bad)
dec
(bad)
sub
imul
cmp
stos
mov
add
sub
mov
xor
pop
cld
test
ss
mov
dec
(bad)
fcomip
dec
jmp
mov
in
xor
mov
mov
add
(bad)
(bad)
jge
(bad)
sub
mov
mov
daa
mov
ret
jp
jmp
push
adc
and
cmps
daa
sub
xor
std
sbb
retf
int
in
cwde
(bad)
(bad)
(bad)
(bad)
in
sub
sub
in
inc
outs
movs
movs
(bad)
mov
mov
xor
sti
add
mov
(bad)
(bad)
fdiv
je
xchg
lahf
iret
mov
jmp
push
mov
jge
sub
jmp
call
(bad)
leave
div
and
cmps
stos
sub
mov
stos
cmp
jg
(bad)
(bad)
fsubr
pop
into
test
repnz
adc
fs
jb
(bad)
sbb
pop
(bad)
cmps
in
mov
(bad)
dec
sub
pop
dec
(bad)
rcl
dec
sbb
sbb
fistp
ret
dec
xchg
(bad)
(bad)
call
mov
add
mov
nop
(bad)
repz
mov
in
lock
enter
(bad)
(bad)
cmp
lods
jmp
lea
pushf
cs
and
inc
loope
iret
push
aad
fidiv
xor
and
(bad)
(bad)
push
push
sbb
cmp
jb
outs
(bad)
sbb
in
ret
pop
ins
cs
fld
cmp
cli
dec
sub
movs
dec
xchg
add
daa
inc
shl
(bad)
(bad)
jmp
pop
scas
add
sahf
mov
cmp
xor
mov
loope
jmp
lock
iret
lahf
mov
push
or
sub
pop
mov
(bad)
call
adc
cs
aad
clc
pop
shr
or
mov
sub
pop
dec
(bad)
(bad)
cmp
jmp
(bad)
push
sbb
jge
clc
mov
inc
(bad)
(bad)
(bad)
jmp
sub
xor
adc
pop
or
or
sub
xor
sub
js
mov
pop
mov
(bad)
jmp
sub
cmp
call
mov
icebp
int3
pop
push
ins
call
cdq
push
lock
call
shl
mov
add
call
test
sbb
retf
imul
(bad)
(bad)
(bad)
jmp
jecxz
ret
shl
sbb
sbb
and
dec
stos
add
mov
push
sub
xchg
sub
xor
push
jmp
cli
pop
and
and
cmp
adc
imul
movs
(bad)
(bad)
mov
dec
mov
sub
gs
push
or
(bad)
push
jmp
dec
cmps
movs
test
and
pop
sbb
xlat
or
push
es
test
ins
ins
fstp
inc
mov
(bad)
cmp
sar
fwait
cmps
jg
cmp
jmp
cli
ret
test
in
xor
inc
inc
dec
lods
cwde
clc
(bad)
pop
sub
(bad)
(bad)
jmp
(bad)
mov
mov
call
jbe
(bad)
jg
push
shl
dec
or
sub
out
or
fisttp
lods
or
call
retf
(bad)
(bad)
mov
cli
mov
enter
push
pushf
mov
adc
mov
add
loop
sub
fistp
popf
(bad)
popa
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
aas
out
pop
lahf
jmp
or
dec
std
movs
jo
mov
call
cmp
mov
jmp
and
inc
inc
or
imul
(bad)
jmp
mov
and
xor
scas
jp
in
xchg
or
rol
dec
(bad)
(bad)
push
xchg
loop
and
mov
loopne
push
aad
test
enter
(bad)
(bad)
dec
adc
repnz
inc
mov
mov
or
inc
jnp
mov
stos
dec
xchg
push
xabort
stos
cmp
out
sbb
cmp
mov
mov
icebp
stos
iret
(bad)
sbb
lock
push
out
ret
inc
inc
jle
out
xchg
test
mov
xor
jmp
sub
cli
retf
or
retf
jecxz
fwait
enter
pop
mov
in
pop
test
pop
cdq
movs
mov
mov
cmp
jmp
inc
movs
pop
(bad)
(bad)
pop
arpl
cmp
and
and
in
hlt
jg
(bad)
jg
daa
adc
arpl
imul
fwait
cli
push
adc
lods
push
(bad)
call
test
stos
fmul
scas
sar
or
cmps
adc
imul
pushf
fisub
in
or
or
inc
clc
sub
add
push
fbld
lods
mov
fwait
retf
and
xor
cmp
dec
std
ret
jp
(bad)
cli
cmp
mov
adc
pop
jmp
leave
mov
mov
sub
iret
and
scas
or
push
mov
hlt
aaa
mov
jmp
icebp
ins
add
push
xchg
xor
out
mov
stos
and
add
fidiv
(bad)
mov
adc
sub
mov
push
(bad)
cld
sub
ins
jge
push
outs
imul
(bad)
jg
or
jno
mov
push
(bad)
adc
clc
and
das
inc
add
mov
cmp
loopne
sahf
adc
xchg
mov
ret
(bad)
push
lea
hlt
mov
std
jg
movs
ds
adc
enter
adc
or
(bad)
call
sub
enter
and
scas
cmp
jge
mov
fadd
repnz
sub
jg
xchg
sub
mov
jne
or
push
clc
in
(bad)
(bad)
(bad)
call
adc
js
mov
arpl
test
neg
mov
(bad)
(bad)
fcomip
mov
inc
jo
xchg
sub
inc
mov
mov
out
cli
mov
jne
(bad)
(bad)
call
loop
int
sub
dec
mov
pop
icebp
push
jmp
jb
stos
jnp
(bad)
(bad)
mov
mov
lock
push
cmp
popa
ret
jae
jl
stc
test
mov
stos
push
mov
mov
cmp
cs
mov
add
pmulhuw
jle
mov
add
inc
jbe
mov
adc
(bad)
(bad)
(bad)
cmp
mov
mov
out
jnp
daa
adc
ret
xchg
jne
push
in
inc
pop
mov
test
call
pop
jo
xchg
out
dec
pop
repz
scas
jns
sub
idiv
(bad)
jle
cmp
cmp
cmp
adc
ins
xchg
pop
cli
popf
mov
(bad)
jg
lds
adc
mov
in
lods
and
test
das
pop
mov
(bad)
jg
push
pop
jmp
sar
pop
and
cmp
fsubr
(bad)
(bad)
(bad)
call
mov
push
ins
sub
retf
push
pop
dec
jmp
neg
add
std
(bad)
(bad)
(bad)
fistp
jb
jmp
cmp
cmps
bndstx
and
idiv
mov
pusha
sbb
jg
hlt
imul
scas
pushf
sub
jnp
and
out
mov
mov
loop
int
jmp
(bad)
fwait
(bad)
sbb
add
pop
or
mov
cmp
(bad)
(bad)
(bad)
call
cmc
and
jmp
fs
cmp
mov
sbb
add
std
cs
rcr
inc
pop
mov
jmp
jmp
js
and
xor
iret
xchg
mov
add
inc
push
jle
hlt
sub
push
retf
pop
cmp
mov
pop
cwde
and
or
dec
sub
push
retf
imul
or
(bad)
jg
and
jg
ja
(bad)
dec
das
call
jo
cli
xchg
hlt
jmp
pop
cld
(bad)
fcomip
shr
mov
mov
sbb
mov
loopne
push
sub
or
call
lock
pop
or
dec
pop
or
test
jns
(bad)
out
clc
mov
ret
repz
pop
mov
mov
or
cwde
or
dec
sub
or
or
rol
push
xlat
mov
dec
sub
in
ficom
mov
sahf
jmp
sub
mov
shl
jg
add
cmp
inc
bound
push
int
push
cld
or
(bad)
(bad)
(bad)
jp
mov
bndldx
mov
push
push
mul
push
ss
xchg
shr
xor
popa
movs
adc
(bad)
fst
push
addr16
in
daa
pop
add
mov
sahf
cwde
std
(bad)
jg
fild
mov
jmp
mov
not
cmps
mov
pop
jle
sub
lods
pop
dec
stos
mov
imul
xor
es
mov
mov
cmp
stos
pop
loopne
sbb
cmp
shl
(bad)
(bad)
(bad)
jmp
xor
jns
jb
xor
repnz
stos
jp
sbb
sub
sub
xchg
(bad)
(bad)
(bad)
jmp
js
push
leave
outs
test
cli
std
cmp
(bad)
mov
xchg
inc
bound
sub
std
(bad)
call
mov
cmc
lods
scas
and
pop
push
mov
xchg
adc
pop
out
fcomip
or
fistp
nop
test
inc
jl
das
stc
mov
fwait
mov
xor
sub
in
mov
dec
(bad)
cmp
xchg
aam
enter
mov
pushf
fild
sub
fcmovbe
call
mov
mov
jo
imul
or
sbb
inc
lock
dec
ret
scas
outs
inc
mov
jmp
sbb
scas
aas
loopne
mov
hlt
loopne
jmp
cmp
(bad)
dec
jp
mov
or
and
(bad)
(bad)
(bad)
stc
and
cmp
cmps
adc
inc
cmp
pop
inc
repz
rol
(bad)
(bad)
call
jle
sbb
loopne
lds
sub
jae
idiv
fnstsw
add
loop
call
pop
pop
sub
cmp
retf
fwait
(bad)
push
xor
sbb
imul
(bad)
jmp
test
data16
pop
sbb
or
shr
mov
cli
mov
jmp
pop
sti
popf
test
out
dec
retf
out
dec
cli
push
mov
sahf
jb
mov
es
push
std
pop
cmc
add
adc
dec
and
add
lea
test
mov
call
out
jbe
lahf
cmps
xchg
dec
add
or
(bad)
pop
shr
pop
sbb
je
jle
(bad)
call
jbe
ret
movlhps
push
or
hlt
scas
or
and
inc
mov
test
sub
cdq
sub
ret
cmp
mov
nop
mov
and
sti
jmp
(bad)
inc
sar
xchg
mov
sub
mov
imul
push
pushf
clc
ret
xchg
push
call
(bad)
cmp
stc
stos
aam
std
sti
sbb
in
push
sub
(bad)
call
dec
pop
ja
test
jnp
push
icebp
jg
ss
mov
popa
push
outs
ja
add
(bad)
(bad)
(bad)
mov
gs
push
push
fstp
imul
idiv
(bad)
jmp
(bad)
and
mul
dec
in
jg
out
mov
in
mov
(bad)
mov
inc
fidiv
aam
lock
jae
dec
ret
xchg
ja
dec
imul
div
std
dec
cmp
and
sbb
nop
cmc
iret
fistp
sub
(bad)
fnstsw
clc
and
sub
fist
shl
mov
and
mov
push
xor
pop
outs
cmp
bound
pop
outs
ins
movs
push
int
inc
add
mov
arpl
loopne
(bad)
inc
sbb
sbb
xor
stos
jmp
jmp
sub
(bad)
adc
das
sbb
mov
in
and
int
or
idiv
sub
retf
and
fcomip
sbb
inc
sti
movs
pop
cmc
sub
movs
xchg
inc
in
pop
(bad)
(bad)
(bad)
call
lea
(bad)
jne
imul
sbb
mov
sbb
adc
pop
adc
enter
adc
fimul
pop
sar
lock
in
jp
arpl
jmp
pop
inc
jbe
mov
mov
sub
pop
jno
test
(bad)
dec
js
iret
sbb
lahf
leave
and
xchg
pop
mov
cld
pop
fisubr
mov
mov
call
mov
daa
sub
mov
shl
cmp
test
mov
(bad)
inc
je
(bad)
cmp
in
jle
jno
fdivr
(bad)
mov
mov
cld
(bad)
inc
xchg
sub
sub
repnz
jge
cdq
mov
add
push
or
mov
pop
(bad)
(bad)
mov
cmp
lea
fisubr
mov
(bad)
(bad)
(bad)
jmp
cli
call
add
mov
(bad)
mov
iret
cmp
mov
pop
loopne
call
cdq
stos
(bad)
sbb
mov
xchg
mov
jno
(bad)
jmp
gs
out
or
shr
pusha
js
neg
test
cli
ja
jp
cmps
inc
inc
scas
sbb
std
mov
cmp
mov
xor
push
std
and
mov
pushf
xchg
adc
xchg
sbb
call
test
dec
mov
cmp
sub
(bad)
(bad)
(bad)
inc
or
mov
out
xor
xchg
or
shl
or
dec
leave
fisttp
inc
push
jnp
and
jmp
lock
in
movs
mov
mov
inc
(bad)
(bad)
(bad)
jg
mul
imul
adc
sub
ror
xchg
cmp
pop
adc
mov
(bad)
mov
ins
inc
jns
ins
add
pop
daa
jmp
retf
pop
xor
fisub
fs
dec
(bad)
pushf
sbb
adc
(bad)
jmp
stos
mov
mov
retf
es
pop
and
(bad)
repnz
mov
jmp
stos
dec
test
out
faddp
addr16
(bad)
(bad)
push
loop
lahf
inc
fsubr
pop
lods
and
ret
cmp
pop
int
sar
xchg
sub
ret
(bad)
mov
cmp
retf
test
repnz
ficomp
or
jmp
jecxz
inc
add
or
inc
pushf
or
jns
fnstsw
cli
add
mov
and
ret
jecxz
cli
scas
mov
retf
fldcw
cmp
push
shl
jb
jmp
outs
aad
jnp
lea
cli
(bad)
inc
test
nop
lods
lock
push
pop
add
fisubr
(bad)
xchg
cmp
cmp
add
mov
cli
mov
pusha
mov
icebp
in
in
mov
es
xchg
and
sbb
mov
nop
and
push
lds
hlt
(bad)
(bad)
jmp
pop
clc
dec
gs
pop
jnp
mov
pusha
sub
mov
ror
ss
(bad)
mov
lsl
pusha
imul
(bad)
mov
scas
test
loop
xchg
(bad)
jg
inc
dec
pushf
cmps
jecxz
in
xchg
adc
mov
sub
jmp
cmps
ins
jmp
je
call
popf
jns
pop
xor
mov
cmp
loope
(bad)
jns
lods
repnz
stc
mov
adc
adc
inc
adc
inc
add
mov
lock
mov
inc
adc
into
adc
push
xchg
sbb
add
call
pushf
xor
sub
bound
(bad)
popf
loope
(bad)
sub
jbe
frstor
mov
push
mov
(bad)
(bad)
push
out
pop
cmp
jbe
cdq
push
mov
mov
ins
in
out
(bad)
(bad)
(bad)
push
or
mov
pop
inc
mov
ret
inc
or
sub
fdivr
mov
xor
cmp
cmps
inc
adc
dec
xor
adc
imul
hlt
and
test
mov
data16
js
sub
cld
call
(bad)
cli
lahf
add
scas
movs
add
xchg
mov
cmp
inc
into
mov
inc
ds
mov
in
out
loope
stos
lods
sub
(bad)
jmp
in
sti
sbb
dec
nop
add
or
mov
mov
cmps
into
out
mov
mov
sub
cli
(bad)
mov
or
arpl
sub
dec
(bad)
(bad)
(bad)
dec
das
sti
pop
inc
icebp
jecxz
cmps
scas
mov
xchg
cli
sbb
sub
adc
push
jb
cli
push
stos
cmp
call
xchg
outs
or
scas
mov
imul
pushf
xor
cmp
cld
call
test
popa
sbb
cli
imul
and
push
push
jge
mov
retf
xchg
cld
(bad)
call
je
jmp
and
out
popa
aam
imul
push
mov
sbb
stos
adc
hlt
pop
fsub
push
add
fdivr
jo
and
retf
sbb
pop
cmp
pop
mov
clc
lock
(bad)
(bad)
call
sbb
dec
dec
pop
and
bound
daa
jle
int3
nop
jmp
pop
mov
or
sub
sahf
leave
scas
mov
js
mov
sub
pushf
mov
pop
pop
test
cmp
imul
in
aaa
jl
dec
xchg
fist
out
mov
and
push
stos
js
(bad)
(bad)
out
aam
or
fnsave
sub
lea
pusha
mov
cmp
rcr
push
add
push
cld
ret
setp
xor
add
(bad)
dec
cmp
test
jns
sub
mov
or
jl
mov
sub
xlat
jb
xor
test
movs
loopne
ins
mov
dec
dec
adc
push
pop
add
sbb
(bad)
fbstp
add
dec
jp
retf
enter
(bad)
call
std
xchg
mov
mov
jae
sar
add
jne
jne
dec
and
(bad)
(bad)
(bad)
jns
sbb
test
adc
and
out
and
test
cli
repz
test
mov
(bad)
(bad)
call
and
xchg
mov
(bad)
imul
(bad)
(bad)
jmp
clc
rcr
add
cld
(bad)
inc
xchg
mov
retf
pop
or
(bad)
jg
mov
pop
push
movs
mov
add
push
movs
push
mov
dec
xchg
clc
dec
xor
pop
mov
adc
(bad)
dec
and
arpl
xchg
mov
inc
mov
dec
sti
pop
xor
push
inc
dec
js
pop
mov
push
or
gs
(bad)
js
add
dec
add
call
adc
cmp
sub
in
or
or
lock
shl
clc
push
dec
out
xchg
sub
idiv
jg
(bad)
fldenv
(bad)
(bad)
(bad)
call
dec
mov
dec
xchg
push
call
dec
ins
jae
rol
sbb
jnp
inc
pop
cmp
(bad)
ret
in
xchg
jno
pop
into
and
dec
mov
sar
xlat
push
in
sub
or
mov
je
jmp
fimul
lods
(bad)
push
adc
mov
cmps
mov
(bad)
mov
push
xor
icebp
jmp
cmp
inc
aaa
add
arpl
sub
shl
sub
(bad)
(bad)
mov
xchg
inc
std
mov
int3
popa
imul
retf
pop
cli
aad
cli
mov
inc
jmp
add
push
dec
fcomp
cmp
dec
sub
icebp
test
es
push
pop
ins
push
adc
inc
add
cmps
xchg
das
fsub
pushf
cmps
shl
dec
inc
(bad)
sub
cmp
mov
push
mov
lock
inc
cmp
sub
outs
shl
and
popa
mov
jb
out
ror
xchg
idiv
sar
mov
hlt
adc
(bad)
xchg
xor
std
lods
sub
xor
out
sub
pop
icebp
aaa
cld
jmp
push
mov
mov
cmp
adc
cmp
call
sar
(bad)
jmp
mov
sub
test
(bad)
mov
into
mov
jb
mov
out
sub
cwde
sahf
lods
jno
sub
or
call
icebp
stos
(bad)
repz
pop
push
mov
lea
pop
jg
(bad)
(bad)
(bad)
jmp
xchg
cwde
ds
sub
inc
loop
not
fisub
push
mov
cmp
cmps
fisttp
mov
std
cmp
pop
leave
imul
inc
sub
adc
cmp
inc
xchg
icebp
(bad)
jmp
jecxz
sbb
(bad)
fild
loop
stos
mov
aad
xor
jbe
retf
leave
(bad)
jg
jg
inc
xchg
ins
push
mov
pop
retf
inc
cld
mov
xchg
retf
push
cld
call
cmp
repz
fs
outs
sub
push
cmps
inc
or
gs
add
push
test
es
cmp
bound
cmp
sbb
bound
sub
lods
pop
sub
sub
cmp
gs
jmp
clc
cdq
jb
cmps
push
(bad)
jmp
jp
lds
into
adc
dec
sbb
iret
xchg
out
repz
rcr
jmp
mov
adc
out
mov
call
or
sbb
icebp
adc
jge
scas
cli
cmp
mov
xchg
mov
jno
stos
mov
call
cmps
in
add
cli
(bad)
jmp
mov
lea
cmps
jmp
mov
adc
frstor
leave
jmp
and
pop
adc
out
dec
and
cmp
add
jmp
dec
fidiv
(bad)
rcl
and
dec
dec
(bad)
cmp
icebp
(bad)
fiadd
mov
loopne
rcr
ret
jle
mov
adc
lahf
sti
sti
xchg
imul
mov
aaa
leave
ret
dec
idiv
sbb
or
stos
push
loopne
dec
xor
lahf
lahf
xchg
push
fdivr
call
mov
call
out
xor
mov
push
test
(bad)
jmp
mov
cmp
leave
inc
xchg
xor
inc
cmp
scas
mov
cmc
dec
popf
push
stos
sub
das
mov
(bad)
(bad)
(bad)
jmp
test
or
cdq
out
call
mov
sar
jmp
in
mov
xlat
xor
(bad)
xlat
call
jmp
sub
(bad)
mov
mov
in
std
int3
dec
adc
xor
(bad)
mov
mov
scas
pop
cmp
jp
jbe
adc
(bad)
call
bound
in
lea
(bad)
mov
int
add
rcl
loopne
cmp
lea
fbstp
movs
(bad)
mov
push
sub
pop
dec
pop
sub
pop
mov
push
add
cld
xchg
pop
dec
and
movs
(bad)
out
cmps
fdiv
sub
sub
(bad)
(bad)
call
aam
(bad)
sub
inc
inc
mov
fwait
cdq
ret
and
stos
loop
(bad)
call
(bad)
(bad)
(bad)
push
mov
sub
ret
mov
sbb
in
sub
(bad)
cmp
inc
mov
retf
adc
retf
jg
mov
push
int3
sbb
xlat
fild
mov
ja
jmp
mov
outs
int3
mov
stos
xor
fidivr
hlt
loopne
jmp
sbb
movs
sar
mov
cs
cmp
push
(bad)
out
movs
add
inc
scas
mov
xor
call
fstp
stos
mov
call
pop
out
mov
ins
xchg
(bad)
jmp
cli
jp
(bad)
ins
cdq
int3
sub
push
xchg
cwde
lods
xor
aaa
(bad)
fist
enter
lea
push
jns
ss
pop
add
enter
mov
mov
imul
cs
in
mov
call
jmp
sbb
cmps
stos
and
das
scas
push
lahf
int3
enter
pop
call
mov
movs
ins
mov
xchg
sbb
outs
jmp
movs
cmp
mov
jle
and
retf
jg
(bad)
(bad)
out
or
dec
iret
mov
mov
leave
out
push
arpl
addr16
movs
push
jp
jmp
xchg
addr16
jo
pop
dec
(bad)
(bad)
(bad)
jmp
imul
nop
lods
mov
adc
(bad)
imul
test
add
pop
inc
xchg
(bad)
push
jp
fisttp
pop
jg
(bad)
(bad)
frstor
mov
sub
jp
cld
ja
sbb
adc
out
stos
and
test
xchg
fisttp
(bad)
sti
dec
imul
jmp
inc
pop
cli
push
lods
or
xor
push
adc
repnz
in
cmp
(bad)
(bad)
jmp
sub
inc
sbb
sub
out
adc
std
mov
mov
jbe
push
pop
das
sar
add
ins
xor
aad
mov
jbe
xor
push
ret
mov
push
dec
(bad)
(bad)
(bad)
aas
daa
hlt
ins
inc
shl
js
nop
or
sub
jmp
pop
sub
(bad)
inc
mov
inc
inc
loop
adc
in
mov
sbb
add
jmp
call
ret
fstp
cmp
adc
mov
(bad)
inc
ret
mov
xor
or
in
jle
(bad)
fcomip
pop
outs
cmc
adc
adc
cmp
pop
call
adc
hlt
call
adc
ror
sub
loop
test
sub
mov
pop
dec
and
call
mov
dec
cmp
je
add
sbb
and
pop
cwde
sbb
sbb
and
sub
lods
sub
adc
xchg
imul
out
clc
(bad)
inc
xor
pop
push
loopne
jmp
push
mov
ds
add
sub
xchg
pushf
sahf
test
mov
scas
mov
std
aaa
pop
xor
adc
rcr
pop
mov
(bad)
(bad)
(bad)
jg
addr16
in
pop
jle
and
jb
out
inc
add
mov
movs
cli
sub
or
scas
sub
(bad)
(bad)
call
loopne
push
sub
dec
push
push
inc
retf
xchg
hlt
mov
mov
mov
xchg
adc
sub
dec
jne
ret
shl
ja
jmp
mov
das
adc
adc
adc
push
or
fild
das
aas
(bad)
(bad)
(bad)
(bad)
cmp
or
lds
sub
(bad)
adc
cmp
test
(bad)
xor
jecxz
jmp
(bad)
jmp
jmp
das
mov
pop
add
cmp
test
test
std
mov
push
cli
loop
lods
into
push
xor
js
jp
xchg
outs
jno
out
(bad)
dec
pop
cmps
adc
sub
or
mov
add
out
cmps
cmp
xor
mov
xchg
in
push
jp
into
mov
or
sbb
sbb
repz
sub
scas
sub
(bad)
(bad)
mov
pop
cmp
mov
pop
loop
movs
scas
scas
push
pop
xchg
fwait
mov
dec
mov
mov
push
jp
imul
push
push
mov
call
loopne
clc
lods
imul
scas
pop
mov
mov
and
mov
mov
aaa
aam
adc
clc
(bad)
inc
sbb
and
mov
das
cmps
cld
add
lds
adc
cmps
test
(bad)
(bad)
call
adc
test
into
leave
mov
jmp
ja
pop
sub
mov
ds
aas
cwde
in
push
(bad)
cwde
mov
pop
data16
xchg
and
call
jl
cmp
push
in
outs
dec
and
clc
(bad)
(bad)
push
std
imul
movs
test
mov
fsub
imul
sub
mov
(bad)
jmp
loopne
jo
mov
push
call
popa
jns
daa
adc
ins
mov
push
xor
jecxz
mov
inc
stos
imul
jmp
test
dec
jmp
fadd
loopne
call
(bad)
dec
cs
push
jmp
dec
lods
scas
or
(bad)
(bad)
ins
mov
(bad)
sub
iret
mov
scas
push
(bad)
(bad)
jg
cld
pop
fmulp
pop
adc
in
lods
inc
sbb
out
sub
sub
jmp
test
mov
(bad)
(bad)
(bad)
fistp
rcr
sahf
sbb
push
mov
clc
sbb
cmps
and
sbb
ds
xchg
stos
out
(bad)
jle
(bad)
(bad)
(bad)
push
ins
add
lea
xchg
outs
fisttp
test
pop
cmp
(bad)
push
cwde
mov
and
or
in
lods
and
fucomi
mov
cli
popa
call
jo
adc
cmp
das
imul
pop
inc
sbb
cdq
pop
add
or
test
mov
xor
jbe
sub
call
cli
push
ret
std
(bad)
stc
in
(bad)
pop
add
xchg
push
stos
cmp
add
jecxz
jg
mov
test
(bad)
mov
and
mov
rcr
out
jle
enter
push
xchg
fld
into
repz
sub
nop
pop
pop
je
mov
push
or
lock
or
pop
std
xlat
push
inc
push
sub
jb
ss
mov
dec
sub
jbe
sar
imul
dec
pop
fwait
xor
sbb
cld
adc
call
or
mov
mov
(bad)
lods
xor
in
(bad)
(bad)
jg
sub
dec
mov
inc
mov
shl
jae
sub
and
outs
bound
out
jg
xlat
test
ins
and
mov
add
es
(bad)
inc
call
adc
sub
jp
sub
repnz
(bad)
(bad)
mov
mov
sub
lds
mov
loop
cmp
or
(bad)
sahf
adc
xchg
and
push
out
and
mov
(bad)
push
ret
js
ret
dec
fcomp
inc
adc
and
inc
pop
adc
(bad)
mov
sub
ficom
clc
ret
jmp
adc
mov
inc
pop
iret
sub
movs
xor
jmp
mov
pop
pop
cmp
call
ret
pusha
mov
out
mov
sub
dec
cmp
fwait
pop
bound
sub
icebp
(bad)
jmp
loop
bound
mov
cwde
adc
retf
mov
cmp
jle
jecxz
xor
in
fsub
test
push
xchg
mov
in
jp
dec
std
(bad)
jmp
pop
pop
aam
sub
sub
gs
cs
scas
add
fdivrp
cmps
(bad)
(bad)
stc
(bad)
iret
mov
aam
in
fidiv
sub
sbb
retf
dec
sbb
mov
add
(bad)
dec
mov
add
xor
push
pop
scas
jmp
add
cli
xchg
bound
call
sbb
jno
dec
repnz
mov
mov
cmp
js
sub
sub
mov
nop
out
push
jb
cmp
call
imul
movs
fisubr
push
jb
jne
cmps
or
(bad)
(bad)
call
adc
js
call
stos
ret
les
das
fsubr
outs
cmps
mov
jp
cmp
and
adc
or
dec
mov
sub
jns
cmc
mov
push
call
inc
out
aas
(bad)
(bad)
(bad)
push
lahf
stos
push
mov
or
shr
adc
ds
shr
adc
scas
call
test
out
cmp
mov
inc
cmps
ja
imul
lock
ds
xor
movs
mov
lods
inc
lods
leave
ins
into
or
iret
adc
lock
mov
xor
push
adc
test
shl
mov
sar
add
sbb
scas
ds
ins
or
mov
jmp
loopne
or
and
lods
pop
in
std
(bad)
dec
rol
mov
mov
cmp
sbb
pop
inc
sar
xor
mov
cmp
es
and
sar
push
ret
cmp
repnz
lods
das
mov
jge
shr
(bad)
out
add
sub
hlt
xor
and
(bad)
inc
jp
retf
jp
and
jno
jle
cld
(bad)
dec
fiadd
xor
psrlq
xchg
jl
repnz
adc
(bad)
inc
sbb
test
out
into
les
pop
movs
(bad)
(bad)
(bad)
call
xor
jne
call
repnz
cmp
call
inc
fild
ins
push
and
(bad)
(bad)
(bad)
cmp
fdivr
sbb
shl
(bad)
aad
mov
fwait
mov
enter
ins
mov
stc
mov
inc
push
stos
xchg
clc
push
mov
call
retf
test
cmp
int3
(bad)
cmps
das
pop
xchg
jmp
adc
pop
and
fld
adc
out
dec
daa
mov
hlt
jg
lea
sbb
mov
mov
sar
pop
int3
ffreep
jmp
sub
fidivr
nop
dec
nop
jnp
fist
(bad)
jmp
loop
inc
cmp
lds
out
dec
test
mov
fbld
mov
movs
xor
call
mov
or
jmp
nop
or
mov
mov
push
sbb
sub
mov
sub
xor
pusha
mov
cli
fs
in
(bad)
jg
mov
mov
js
test
cmp
fidivr
pop
inc
jns
sub
clc
ds
fild
test
lods
inc
(bad)
sub
mov
loop
xchg
pop
pop
aam
mov
dec
or
je
clc
(bad)
(bad)
mov
retf
fcompp
xor
xor
test
sub
nop
sub
push
dec
and
sub
dec
cli
adc
jmp
push
stos
fisubr
push
xchg
dec
(bad)
(bad)
jmp
retf
iret
pusha
inc
jmp
std
imul
or
sub
mov
(bad)
jg
retf
jg
repz
(bad)
imul
mov
retf
adc
call
int
adc
hlt
(bad)
(bad)
mov
int3
and
push
lea
mov
aam
inc
sub
adc
(bad)
(bad)
(bad)
dec
sbb
cs
sbb
jmp
fbstp
push
mov
mov
(bad)
(bad)
(bad)
jmp
clc
test
xor
xor
or
inc
mov
adc
or
clc
mov
dec
pop
sub
(bad)
jmp
pop
lods
jo
lds
cdq
jmp
shl
in
pushf
adc
mov
iret
mov
aam
nop
and
mov
push
clc
call
sub
scas
shr
scas
loope
stc
popa
movsx
dec
std
(bad)
(bad)
(bad)
fdivr
xor
(bad)
fisttp
test
cmp
cmc
xchg
pop
sub
shr
sahf
sbb
jge
dec
and
(bad)
(bad)
jg
(bad)
xacquire
daa
mov
jo
mov
mov
adc
sbb
push
test
jmp
movs
add
scas
stos
clc
inc
inc
jecxz
push
cmps
imul
cmp
jmp
pop
bound
mul
inc
push
mov
push
cmps
mov
pop
jmp
xchg
sti
jmp
repnz
out
daa
mov
test
pop
bound
(bad)
(bad)
mov
adc
mov
sub
popf
fstp
repz
pop
push
xchg
outs
xchg
xor
repz
push
xchg
and
xor
and
inc
mul
sbb
fsubr
iret
mov
shl
sbb
(bad)
fild
in
movs
(bad)
sbb
(bad)
push
pop
pop
jmp
cwde
xchg
(bad)
mov
jmp
xchg
outs
imul
sub
or
push
idiv
xchg
jo
stos
dec
push
call
in
or
(bad)
(bad)
fild
fwait
adc
pushf
dec
mov
and
sub
jae
mov
jmp
imul
pop
xor
(bad)
push
mov
(bad)
(bad)
(bad)
cmp
xchg
and
dec
sub
xlat
js
lahf
(bad)
stc
jge
pop
repnz
popa
xchg
push
push
jmp
das
and
and
mov
out
push
push
sub
clc
add
push
mov
xor
mov
xor
push
js
dec
mov
in
ds
xor
call
sbb
mov
mov
aas
lods
std
pop
adc
push
(bad)
(bad)
jmp
adc
(bad)
inc
mov
jo
(bad)
(bad)
(bad)
jmp
std
jp
stos
mov
xchg
or
mov
mov
sbb
or
(bad)
(bad)
call
lods
jmp
cld
sub
iret
pop
mov
imul
push
jmp
or
push
mov
outs
retf
cli
adc
cmp
imul
pop
mov
call
imul
sub
jmp
mov
xchg
xor
jmp
scas
repz
pop
call
pop
(bad)
(bad)
(bad)
jmp
pop
xchg
sbb
std
popa
jae
scas
push
outs
test
in
arpl
and
test
addr16
jecxz
(bad)
(bad)
call
sahf
jns
lods
dec
cli
xchg
fstp
adc
dec
push
sub
es
sub
add
(bad)
(bad)
fadd
sub
mov
into
xchg
mov
inc
mov
lods
call
xchg
pop
(bad)
retf
out
call
movs
(bad)
jmp
jmp
xlat
cld
imul
adc
(bad)
(bad)
jg
clc
fidivr
adc
add
inc
xchg
out
inc
loop
stos
sub
bound
(bad)
(bad)
(bad)
(bad)
call
xchg
jle
out
sub
dec
dec
or
movs
sub
mov
cli
lods
mov
shr
vpaddb
(bad)
(bad)
jmp
jmp
and
in
std
fidivr
add
bound
mov
inc
dec
cld
(bad)
jg
push
dec
call
mov
mov
pop
std
(bad)
inc
jmp
jnp
daa
mov
sub
sub
pop
in
mov
dec
push
loop
movs
pop
cmc
(bad)
inc
outs
(bad)
jg
sub
push
out
or
mov
or
or
(bad)
(bad)
(bad)
jmp
push
or
pushf
or
mov
and
jmp
mov
sti
scas
ja
(bad)
(bad)
(bad)
jmp
pop
xchg
sub
cmp
stos
push
cmps
clc
clc
mov
or
das
push
mov
(bad)
(bad)
(bad)
(bad)
cs
lods
mov
lahf
pop
add
mov
mov
ja
rcr
(bad)
lods
(bad)
pop
loopne
xchg
mov
into
test
mov
jmp
ud0
sub
jmp
fdiv
gs
mov
xchg
lods
push
sub
jmp
jno
mov
cs
xor
jbe
mov
cmps
std
jle
fld
(bad)
fistp
mov
pop
daa
mov
dec
cs
out
test
pop
imul
div
dec
ins
clc
(bad)
(bad)
dec
call
xor
jp
fbstp
sar
xabort
inc
shr
dec
sbb
sbb
pop
movs
mov
(bad)
jmp
push
fmul
popf
sbb
cmp
sbb
pop
outs
adc
(bad)
(bad)
mov
xchg
popf
es
jnp
(bad)
(bad)
mov
pop
nop
mov
fcomip
inc
call
lahf
dec
jmp
fwait
arpl
stos
imul
mov
xchg
(bad)
(bad)
(bad)
inc
lahf
xchg
pop
fst
or
mov
call
sub
jmp
mov
idiv
(bad)
push
out
inc
loop
inc
sysexit
inc
sub
jmp
sbb
cmps
stos
scas
test
inc
dec
arpl
mov
mov
and
lea
movs
ins
xor
cli
(bad)
dec
sub
jmp
pop
and
xchg
jbe
mov
shl
cdq
clc
inc
test
mov
nop
xchg
test
mov
dec
and
cmp
or
div
pop
jne
sub
push
rcr
inc
push
aad
mov
iret
or
fs
dec
xchg
jmp
and
aaa
fcmovb
or
mov
add
cmp
xor
(bad)
dec
push
loope
mov
scas
test
int3
cs
stos
(bad)
(bad)
(bad)
jmp
mov
add
sbb
sbb
push
(bad)
in
pop
cs
shr
aam
fcomip
jmp
addr16
mov
aam
adc
idiv
int3
push
inc
test
daa
retf
imul
sbb
lock
pop
call
adc
(bad)
(bad)
(bad)
call
fcomp
push
push
mov
cvtps2pi
adc
int3
mov
adc
sbb
xchg
mov
pop
(bad)
cmps
mov
push
cmp
in
shl
cmp
lods
xchg
int3
push
adc
(bad)
pop
cwde
(bad)
push
jl
add
(bad)
test
sub
fld
jmp
sub
push
mov
(bad)
(bad)
mov
je
mov
stos
xchg
(bad)
mov
pusha
xor
std
call
dec
xchg
jno
cmp
pusha
mov
pushf
mov
xor
(bad)
jg
dec
cs
adc
xchg
fisubr
bnd
outs
repnz
loopne
mov
aad
clc
(bad)
(bad)
push
les
adc
adc
sub
test
or
cmp
adc
add
add
int3
mov
xor
pop
cmc
ja
lods
or
fst
pop
xor
ins
or
xchg
fwait
xor
pop
cli
movs
mov
or
punpckldq
ins
std
(bad)
jmp
jmp
jb
fsubr
push
(bad)
(bad)
sub
mov
sub
arpl
mov
add
add
hlt
and
mov
jmp
ins
stos
add
pop
mov
sub
xor
cmps
test
(bad)
mov
aaa
adc
xchg
inc
add
pop
jb
ja
dec
push
sub
(bad)
(bad)
call
and
push
loopne
and
push
jg
pop
mov
sub
(bad)
(bad)
(bad)
(bad)
cmp
sub
cli
pop
xchg
ret
dec
cmps
fmul
scas
or
inc
xor
mov
pop
dec
add
or
pop
xchg
scas
scas
and
lds
mov
push
push
leave
pop
push
js
dec
add
pop
push
test
or
xchg
sbb
int
(bad)
mov
int3
sbb
enter
daa
dec
cli
pop
xchg
add
jmp
out
sub
dec
movs
dec
scas
xor
mov
sub
scas
xchg
(bad)
pop
or
ins
call
xchg
cmps
mov
mov
mov
fs
cmp
jmp
sar
call
mov
sub
ins
das
sub
(bad)
(bad)
pop
jmp
(bad)
(bad)
jmp
fwait
outs
push
and
scas
mov
pop
in
(bad)
pop
outs
and
outs
pop
mov
cli
ja
inc
es
mov
pop
in
into
clc
ja
inc
clc
dec
std
cs
ror
cld
add
cmp
cli
stos
jle
mov
rol
not
ins
cmp
repnz
pop
aad
cmp
mov
pop
push
and
cmp
(bad)
mov
out
cmp
out
pop
mov
in
mov
sub
dec
clc
cmps
jb
out
test
pop
scas
in
lods
sbb
or
(bad)
(bad)
jmp
push
xchg
mov
and
jno
xchg
fbstp
inc
out
or
xchg
xchg
push
jmp
cwde
sar
mov
dec
add
dec
sub
(bad)
push
sahf
or
faddp
mov
xchg
pop
(bad)
dec
scas
mov
(bad)
(bad)
(bad)
fbstp
sub
dec
das
pop
ret
stos
adc
push
or
(bad)
(bad)
(bad)
(bad)
jmp
pop
fwait
and
retf
aas
mov
inc
or
mov
enter
push
mov
cmp
scas
mov
dec
ror
ds
into
imul
sub
dec
fdiv
pop
mov
mov
cld
retf
(bad)
sub
icebp
sbb
cmp
xor
sub
push
hlt
daa
mov
mov
cmp
pushf
cmp
jg
or
(bad)
dec
xor
xor
mov
movs
mov
stc
jb
fldenv
imul
cld
(bad)
jg
mov
outs
sub
(bad)
sbb
sub
jmp
int3
psrad
(bad)
jg
or
int3
iret
clc
outs
dec
pop
jle
mov
pusha
jg
(bad)
push
jg
cmp
lods
pop
mov
inc
(bad)
(bad)
(bad)
inc
out
(bad)
or
in
dec
mov
mov
sub
scas
and
(bad)
(bad)
jmp
sub
cmp
dec
mov
std
call
rcr
inc
xor
inc
imul
bound
call
fiadd
sub
or
stc
jmp
rcr
sbb
jmp
inc
les
cmps
shl
or
xchg
pop
mov
hlt
cmp
(bad)
(bad)
(bad)
mov
stos
sbb
mov
and
adc
jmp
adc
sbb
xchg
lods
(bad)
out
clc
movs
fimul
das
mov
retf
xchg
or
(bad)
jmp
xchg
add
mov
sub
sahf
mov
cmc
add
add
xor
(bad)
out
dec
retf
and
retf
and
movs
ds
xchg
test
mov
dec
jle
std
sub
push
retf
lahf
jl
sbb
cmp
sbb
out
(bad)
(bad)
inc
jecxz
and
push
ins
mov
les
imul
(bad)
mov
add
xchg
(bad)
dec
movs
dec
pop
sahf
btr
adc
mov
or
call
jo
in
push
sbb
pop
movs
mov
jmp
scas
mov
jmp
or
and
cld
lods
and
add
mov
xchg
cli
leave
mov
(bad)
(bad)
(bad)
(bad)
ficom
retf
sbb
sub
dec
mov
or
inc
stos
or
dec
inc
xor
cmp
es
add
(bad)
jg
add
outs
pop
out
inc
push
arpl
xor
cmps
scas
loopne
call
sub
rcl
test
xlat
dec
sub
xor
dec
or
sub
mov
dec
xchg
dec
cmp
jbe
outs
js
jmp
inc
mov
pop
jmp
xchg
jecxz
repnz
(bad)
mov
or
loopne
call
sub
(bad)
jmp
repnz
out
(bad)
(bad)
mov
(bad)
and
or
mov
sbb
enter
sbb
mov
aad
jmp
mov
or
mov
cdq
push
pop
xor
loopne
inc
xchg
fisub
hlt
push
jne
or
push
fidivr
mov
(bad)
(bad)
call
loopne
dec
jns
imul
push
or
sub
mov
loope
(bad)
(bad)
(bad)
(bad)
cmp
mov
loope
hlt
hlt
stos
jecxz
xchg
daa
sbb
stos
sahf
movs
adc
push
call
(bad)
fcomip
jmp
cmp
dec
pop
dec
push
jne
mov
fidivr
jb
jns
mov
pop
in
(bad)
(bad)
(bad)
(bad)
fmul
iret
out
in
mov
out
xchg
test
and
cdq
addr16
(bad)
jge
ffreep
dec
cmps
jle
inc
pop
mov
or
loop
xor
mov
cmps
(bad)
(bad)
mov
clc
adc
jl
inc
retf
add
or
sub
fisubr
std
(bad)
(bad)
call
xchg
sub
inc
scas
fst
cmp
ficom
scas
xchg
call
adc
(bad)
push
fdivp
jo
dec
sub
sub
test
test
loope
loope
inc
xchg
(bad)
aaa
test
pop
movs
sbb
enter
pushf
adc
(bad)
mov
cmps
mov
ins
push
mov
or
mov
repz
mov
xchg
aad
arpl
mov
mov
jg
(bad)
dec
jl
or
(bad)
aad
mov
dec
sbb
cli
fdivrp
(bad)
(bad)
inc
xchg
jmp
push
bound
fstp
jp
xchg
test
iret
xor
(bad)
(bad)
jg
or
loopne
and
std
jnp
out
les
call
add
inc
lods
adc
xor
xchg
cmp
stos
jno
jo
mov
xchg
fdivr
push
add
sahf
je
fwait
std
cli
imul
(bad)
(bad)
(bad)
jmp
xor
push
lahf
lea
std
retf
int
mov
iret
jns
cmps
(bad)
in
enter
(bad)
(bad)
(bad)
push
mov
mov
jmp
in
dec
enter
daa
xchg
pop
outs
aad
jb
jo
add
and
(bad)
inc
push
in
mov
sub
mov
mov
sti
clc
stos
(bad)
(bad)
mov
inc
lahf
jg
sbb
aad
cmp
cmp
dec
out
dec
pop
xchg
jne
dec
ds
inc
std
mov
adc
add
mov
ret
cmp
fsubr
jle
(bad)
(bad)
push
xor
popa
xchg
stos
and
dec
stos
jmp
fst
push
in
add
dec
stos
call
or
lods
jecxz
(bad)
aad
sbb
mov
stos
adc
pop
enter
cld
cld
(bad)
(bad)
(bad)
(bad)
sti
fild
shr
iret
jp
and
add
cmp
shr
fs
mov
cmc
jo
sti
fstp
in
cmp
(bad)
(bad)
jmp
mov
or
cld
es
stos
sbb
adc
nop
idiv
(bad)
dec
mov
adc
push
add
jns
mov
pop
(bad)
dec
inc
sbb
and
retf
xor
jns
stos
pop
push
push
dec
popa
imul
or
jmp
movs
inc
inc
adc
pop
mov
fisub
dec
test
imul
xchg
and
mov
dec
stos
inc
pusha
repz
push
stos
(bad)
jg
popa
inc
(bad)
aaa
and
call
and
jmp
dec
cmp
jmp
push
pop
xchg
je
and
loope
scas
js
sub
and
std
xlat
pop
add
sub
call
mov
ret
jmp
dec
test
scas
(bad)
(bad)
(bad)
call
adc
jbe
and
xchg
call
(bad)
mov
scas
(bad)
call
(bad)
xlat
fcmovnu
push
bound
or
inc
xchg
sub
dec
push
sbb
sbb
dec
out
and
push
aam
sbb
call
call
or
retf
adc
test
stc
jmp
fsub
ror
mov
pushf
cli
aad
(bad)
jmp
cwde
ins
daa
mov
dec
and
add
enter
jne
inc
loopne
ins
pop
(bad)
push
std
dec
sti
int3
sbb
push
leave
pop
fwait
pop
sub
enter
pop
mov
out
sub
adc
add
xchg
or
cmp
(bad)
(bad)
(bad)
dec
shl
pop
jl
sub
test
and
jnp
mov
inc
push
gs
loopne
outs
clc
jmp
bound
xchg
mov
jb
adc
sub
pop
gs
into
adc
test
xor
dec
icebp
loopne
(bad)
(bad)
call
movd
fild
mov
std
out
(bad)
mov
scas
pop
xchg
push
cli
(bad)
mov
cmp
or
mov
add
pop
mov
lds
jge
cmp
sti
adc
(bad)
ffree
sbb
sbb
call
inc
aam
and
pusha
mov
and
(bad)
(bad)
push
xchg
sub
iret
sti
(bad)
fiadd
cli
(bad)
cli
div
mov
add
jb
stos
(bad)
(bad)
pop
in
xor
div
(bad)
(bad)
call
or
mov
jp
and
adc
int3
inc
or
push
sub
(bad)
inc
and
jb
inc
test
sar
(bad)
jmp
loop
sub
push
add
stos
add
int
scas
xchg
cli
enter
pop
or
mov
push
xchg
jnp
sbb
add
sub
push
das
lahf
jb
(bad)
xor
push
sub
pop
fcmovnb
push
mov
xor
sub
mov
sub
imul
push
movs
out
mov
cld
(bad)
push
jo
mov
add
ins
inc
cmp
lea
jg
mov
xor
call
movs
jecxz
jp
pop
call
add
pop
(bad)
fild
jmp
pop
pop
mov
loopne
(bad)
(bad)
mov
iret
in
lods
loop
movs
jmp
out
hlt
lods
stos
jns
or
retf
mov
jg
mov
fmul
jb
push
call
loop
jge
sub
jg
in
mov
(bad)
jb
mov
mov
(bad)
fistp
sbb
ja
jl
es
or
(bad)
(bad)
(bad)
mov
xor
repnz
jg
arpl
push
dec
cmps
(bad)
scas
mov
mov
xor
into
adc
add
mov
dec
popa
lock
cmps
lods
inc
sub
leave
fincstp
jp
cwde
mov
jnp
(bad)
(bad)
jmp
pushf
mov
lahf
and
lahf
imul
cmps
xchg
shr
pop
mov
retf
(bad)
mov
cs
out
shl
scas
mov
scas
ins
es
xchg
sbb
pop
mov
(bad)
push
sahf
sub
call
add
jmp
dec
push
sti
mov
jmp
sbb
ja
ja
pop
retf
sub
xor
push
mov
xchg
dec
add
add
ins
lock
sbb
xor
leave
stos
or
(bad)
movs
mov
jl
push
push
cld
mov
test
sub
(bad)
(bad)
mov
dec
sub
xlat
cmps
stos
ins
in
jle
cmp
xor
cmp
cld
call
jle
iret
(bad)
das
dec
fs
setb
int3
pop
div
(bad)
dec
jmp
int3
fbstp
mov
sub
sbb
or
(bad)
(bad)
mov
movs
jge
pop
xchg
loopne
std
mov
mov
(bad)
call
call
clc
fisubr
out
sbb
or
popf
popa
ds
jg
and
loop
cmp
xor
rol
or
sbb
cmps
xor
inc
retf
cs
(bad)
inc
cs
call
jg
jmp
cmps
cmp
(bad)
jmp
xor
adc
pop
cld
lock
lahf
aas
jb
xchg
cld
punpckldq
add
sar
stos
mov
dec
jge
fdiv
popa
and
(bad)
jmp
mov
mov
(bad)
jmp
sbb
mov
sbb
shl
pop
cs
sti
xlat
call
adc
push
jmp
pop
mov
xor
ins
xor
out
fwait
(bad)
std
(bad)
(bad)
call
lods
mov
test
jae
fcmovne
lods
add
repz
cwde
and
loope
add
leave
sub
xor
cmp
dec
call
mov
xchg
mov
fxch
(bad)
fucomip
scas
std
mov
mov
fsubr
movs
push
(bad)
neg
mov
dec
(bad)
(bad)
(bad)
jmp
mov
fisub
xchg
xor
cmp
std
retf
sub
sbb
add
adc
(bad)
jmp
fs
daa
push
lods
scas
sbb
in
fwait
sub
(bad)
call
mov
lods
sub
cmp
inc
into
icebp
stc
sub
mov
ins
jg
aaa
std
inc
imul
fimul
retf
mov
cmp
cmp
xchg
pop
fcos
(bad)
(bad)
mov
call
(bad)
(bad)
sbb
sbb
push
cs
xchg
std
dec
out
pop
cli
(bad)
(bad)
(bad)
(bad)
push
addr16
(bad)
scas
out
pop
push
scas
jmp
loop
repnz
in
inc
jmp
mov
sub
cli
in
mov
mov
dec
loopne
xchg
sub
add
adc
mov
(bad)
(bad)
jmp
das
(bad)
shl
push
xchg
icebp
enter
sqrtps
dec
mov
xchg
test
sbb
jmp
cwde
ss
hlt
loopne
adc
test
xchg
scas
clc
(bad)
(bad)
mov
sub
jmp
push
lahf
(bad)
or
nop
shl
jb
pop
cmp
sub
xchg
cs
loopne
out
(bad)
je
ds
pop
add
inc
ins
call
outs
mov
mov
push
dec
and
int3
adc
(bad)
pop
(bad)
or
dec
sbb
(bad)
lods
movs
sub
mov
pop
dec
loopne
(bad)
(bad)
(bad)
call
call
xor
adc
movs
jge
inc
ins
mov
ficomp
add
xchg
adc
fild
lods
leave
adc
rcr
add
(bad)
jg
loope
mov
test
test
adc
xor
jmp
or
(bad)
(bad)
mov
and
push
mov
mov
push
add
jmp
mov
icebp
jmp
mov
xor
sbb
scas
jg
dec
adc
mov
ret
or
loop
jmp
pushf
push
sbb
xchg
out
push
in
jg
ins
jge
jno
mov
fdivr
imul
mov
in
push
fbld
(bad)
mov
test
inc
jno
mov
bound
sub
dec
std
sbb
repnz
pusha
lods
adc
jo
jmp
mov
test
mov
xor
mov
sub
test
xchg
aaa
add
dec
xchg
mov
dec
push
sbb
(bad)
(bad)
dec
or
std
test
cmc
xor
add
mov
mov
or
mov
(bad)
(bad)
push
cld
test
in
lods
cdq
jmp
pop
jne
out
ja
cmp
mov
mov
mov
adc
je
dec
loope
or
lods
fidiv
pushf
inc
jmp
fiadd
out
push
sbb
mov
jmp
stos
mov
adc
mov
xchg
cmp
clc
sub
push
pop
inc
movs
mov
mov
stos
ins
loope
stos
rcr
(bad)
(bad)
(bad)
(bad)
jle
mov
sbb
mov
mov
mov
mov
and
(bad)
(bad)
(bad)
call
or
int
nop
imul
pusha
sbb
dec
scas
imul
or
retf
cld
arpl
neg
or
jg
push
mov
fsubr
dec
addr16
mov
sbb
inc
call
or
jl
ins
cmp
jmp
out
inc
out
(bad)
repnz
ins
sub
dec
sub
jmp
jmp
mov
clc
jnp
stos
cli
mov
(bad)
sbb
xchg
add
bound
data16
cmp
xor
cli
jb
inc
sahf
shr
mov
(bad)
in
push
pop
dec
(bad)
dec
(bad)
push
leave
loop
call
cmps
clc
xor
idiv
scas
mov
(bad)
(bad)
(bad)
(bad)
jnp
bound
inc
sbb
sbb
cwde
jmp
mov
cdq
ds
xor
call
inc
jecxz
push
dec
lea
fs
jg
test
and
inc
(bad)
push
mov
jmp
test
call
retf
call
push
stos
pop
sar
push
cmp
in
lea
mov
mov
shl
dec
(bad)
int
outs
jg
sbb
mov
add
sti
(bad)
jmp
jae
call
std
retf
xchg
add
or
inc
sti
sub
call
call
jp
xchg
lea
cmp
mov
test
jg
xchg
xchg
and
cli
xchg
shr
pusha
pusha
mov
adc
(bad)
fbstp
adc
enter
add
add
movs
sub
retf
push
xor
dec
cld
in
call
push
xchg
dec
push
mov
fwait
xchg
push
sti
mov
cmc
int
pop
adc
xor
cmp
xchg
std
cmp
(bad)
mov
add
mov
out
mov
jp
call
hlt
inc
iret
jmp
jg
arpl
ins
sti
sbb
push
pop
(bad)
(bad)
(bad)
mov
or
jb
and
xchg
mov
mov
test
cwde
cmp
popa
fst
cmp
(bad)
in
test
lods
adc
or
mov
lahf
xor
sub
test
mov
dec
sbb
pop
cwde
mov
and
(bad)
movs
(bad)
push
jp
jnp
mov
ret
jmp
adc
(bad)
(bad)
mov
push
shl
adc
mov
aad
aad
lahf
sub
repnz
out
and
adc
test
mov
shl
dec
movs
mov
pop
dec
ins
adc
retf
fwait
push
std
dec
cmps
mov
pop
xchg
cmp
mov
mov
cmps
jle
and
or
es
push
adc
push
aad
std
(bad)
fistp
(bad)
shr
inc
cdq
add
pop
sbb
ja
aad
aad
cwde
add
or
(bad)
(bad)
mov
sbb
gs
push
cwde
mov
(bad)
and
fnstenv
pusha
dec
adc
jg
movs
mov
push
sbb
pop
lock
fmulp
mov
das
mov
jge
test
fwait
(bad)
(bad)
(bad)
(bad)
dec
(bad)
jmp
ret
aad
adc
test
jle
jmp
(bad)
cmp
ds
jae
adc
not
dec
movs
outs
(bad)
(bad)
(bad)
fst
in
push
xchg
inc
and
mov
je
mov
jae
test
dec
sbb
xor
pusha
cmps
push
imul
sbb
std
retf
cmp
and
cmps
adc
or
fdivr
lds
cmp
scas
push
cmp
pop
or
sub
push
push
pop
mov
xchg
mov
mov
mov
ja
movs
sub
call
mov
(bad)
sbb
inc
aad
add
(bad)
(bad)
fild
call
inc
test
addr16
mov
outs
cmp
xor
push
sub
jmp
mov
sbb
(bad)
(bad)
jmp
shl
outs
mov
and
outs
push
outs
xchg
outs
mov
arpl
sbb
cmps
lods
movs
and
push
cwde
xor
lds
stos
xchg
imul
cmp
fidivr
cwde
xchg
jmp
push
(bad)
loope
mov
pop
cs
xchg
inc
cwde
es
sar
dec
push
(bad)
lods
dec
sub
pop
xor
mov
cli
sub
call
jmp
test
lahf
mov
jo
jmp
jb
mov
add
out
and
(bad)
call
jne
xor
push
popf
das
or
sub
push
(bad)
imul
addr16
gs
sub
out
push
lock
aaa
xchg
mov
jb
add
and
sar
or
add
xor
retf
mov
pop
adc
lock
(bad)
call
add
jle
leave
scas
pop
in
xchg
cli
jl
add
shr
(bad)
sti
sbb
cmps
xor
sbb
fs
sub
adc
jb
icebp
in
popf
pop
push
cdq
mov
inc
std
push
dec
or
ret
rcr
jg
cdq
pop
(bad)
sbb
pop
stc
xchg
inc
cwde
(bad)
jmp
or
(bad)
jg
mov
mov
lods
xchg
lds
cmps
cmps
sbb
mov
jecxz
imul
lods
enter
mov
(bad)
fcmovu
imul
xchg
mov
shl
not
pop
add
or
push
and
(bad)
(bad)
jmp
push
(bad)
adc
push
adc
sbb
adc
push
dec
xor
out
leave
sbb
mov
push
sub
(bad)
mov
push
and
mov
sahf
fsubr
mov
xchg
pop
sbb
pop
rcr
lea
inc
sahf
adc
mov
inc
les
push
stos
mov
add
cmp
add
mov
into
int3
retf
mov
lea
(bad)
(bad)
jnp
push
dec
sub
dec
add
fwait
mov
lahf
stos
in
sub
pop
push
stos
in
retf
sti
jmp
xor
sbb
jp
sub
dec
int3
cmp
inc
adc
(bad)
jnp
jbe
mov
retf
mov
mov
fadd
inc
jne
adc
jp
sub
mov
(bad)
dec
clc
dec
mov
out
test
in
mov
ins
cli
call
cli
lods
jecxz
call
or
fst
les
sbb
retf
(bad)
(bad)
cmp
fdiv
xchg
das
test
inc
rol
prefetcht2
adc
cmp
fidiv
push
ror
(bad)
(bad)
jmp
push
in
or
add
mov
push
scas
aaa
out
sub
push
dec
jbe
sub
mov
mov
mov
cmps
movs
in
pop
jae
(bad)
cmp
mov
call
dec
inc
sahf
mov
push
fs
loope
std
data16
push
push
jl
pop
xchg
lahf
pop
inc
cmp
pusha
stos
(bad)
cs
jl
mov
test
jmp
mov
movs
js
mov
cmp
cmp
xor
sub
mov
lahf
retf
sahf
movs
(bad)
(bad)
loopne
stc
dec
cli
mov
jb
push
imul
sub
jmp
xchg
pop
add
or
out
test
not
(bad)
push
and
js
add
ins
call
dec
jp
pusha
loopne
inc
or
jns
dec
mov
mov
(bad)
adc
fimul
add
aas
pop
push
(bad)
xor
and
xchg
push
dec
daa
jp
call
outs
or
add
(bad)
(bad)
fimul
xchg
sub
repnz
inc
dec
(bad)
push
imul
pop
pop
mov
cmps
outs
pop
sbb
adc
push
push
jmp
push
(bad)
sub
jb
stos
push
xchg
mov
xor
xor
call
pop
mov
out
int
imul
aam
xchg
(bad)
call
mov
mov
loope
inc
scas
(bad)
ja
inc
or
scas
test
call
and
jns
and
mov
jmp
xchg
push
xchg
or
(bad)
(bad)
jg
or
sti
jb
jmp
dec
xor
xchg
push
pop
call
nop
test
and
inc
and
stos
and
scas
fcomip
(bad)
fcmovne
jl
outs
int3
ins
and
popf
add
push
mov
sub
sub
out
cli
dec
test
and
and
pop
imul
(bad)
dec
sbb
mov
mov
pop
ins
popa
dec
adc
jecxz
out
js
sar
outs
mov
jecxz
mul
(bad)
mov
or
call
cdq
scas
cli
push
dec
inc
inc
ss
sbb
dec
push
stos
lds
inc
inc
mov
xor
jge
sub
pop
add
in
(bad)
pop
pop
inc
cli
aam
movs
icebp
dec
scas
mov
scas
daa
ficom
arpl
(bad)
(bad)
cmp
sbb
mov
xchg
imul
movs
scas
lds
pop
icebp
call
jmp
jne
dec
xchg
jb
push
cld
iret
imul
add
ja
adc
int3
bound
(bad)
pushf
sti
inc
retf
in
in
iret
outs
or
adc
and
sbb
cld
(bad)
jmp
adc
cdq
stos
mov
sub
das
pusha
add
cmp
xor
jg
loopne
jnp
cmp
sahf
imul
add
xchg
mov
inc
jne
sub
mov
mov
loop
bound
(bad)
dec
and
and
xor
test
push
aad
and
ins
(bad)
sub
push
jmp
pop
lods
(bad)
out
inc
or
add
jmp
xchg
in
ret
fbld
movs
mov
and
inc
mov
mov
std
pop
push
mov
push
sub
das
push
or
xor
adc
leave
and
(bad)
(bad)
call
cwde
xchg
sbb
cwde
dec
scas
dec
lods
push
(bad)
cdq
inc
sbb
add
std
cs
pop
sbb
scas
lds
std
(bad)
call
sub
(bad)
sti
mov
and
sub
xchg
loop
popa
or
jle
add
retf
(bad)
(bad)
aas
ret
cdq
and
cmp
into
push
xor
rcr
mov
xor
xor
mov
ss
pop
jecxz
std
cmp
(bad)
dec
enter
retf
sbb
lock
dec
das
repnz
ret
(bad)
sar
cdq
stos
ins
(bad)
mov
(bad)
(bad)
(bad)
fstp
hlt
and
ficomp
ins
push
repnz
inc
repz
(bad)
call
popf
jecxz
repnz
and
ja
jge
jo
jecxz
daa
mov
fcom
test
pop
mov
mov
and
xor
je
fild
fist
cs
push
clc
(bad)
inc
in
mov
std
into
shl
sub
push
xlat
or
jmp
in
cmp
sub
jmp
les
mov
fnstsw
(bad)
dec
jns
fstp
pop
mov
mov
stc
test
xor
adc
jmp
cmps
pop
out
fdivr
fld
pop
mov
es
scas
push
mov
(bad)
(bad)
(bad)
(bad)
mov
sti
xor
lea
inc
fcmove
shr
jg
cmp
loop
sbb
pop
sub
dec
mov
(bad)
xor
adc
push
jmp
mov
int3
push
sub
inc
int3
inc
push
adc
out
add
arpl
shl
inc
add
call
sub
mov
or
mov
and
sbb
xchg
push
xor
bound
mov
jmp
movs
cli
test
stc
sbb
ds
pop
mov
mov
(bad)
(bad)
jns
xor
inc
lahf
and
push
push
sub
ja
dec
cdq
ds
pusha
cmps
std
xor
and
lea
mov
clc
mov
fimul
push
jp
(bad)
fimul
aaa
je
dec
jns
std
mov
add
push
adc
inc
mov
loopne
imul
jmp
cmps
fs
sub
sub
jne
clc
call
retf
lea
gs
dec
xchg
scas
cmp
retf
cld
(bad)
mov
mov
fisub
sbb
retf
cwde
aaa
or
(bad)
fbld
mov
adc
fisttp
inc
jmp
stos
js
mov
pop
adc
jo
cld
push
(bad)
dec
stos
fimul
sub
leave
movs
jne
lahf
jge
sub
mov
pop
adc
cli
fsubr
in
mov
ins
je
scas
(bad)
or
in
inc
fsub
clc
inc
sub
fidivr
adc
dec
(bad)
mov
out
sahf
adc
out
repnz
pop
(bad)
mul
xchg
mov
(bad)
(bad)
call
or
add
(bad)
jns
ficomp
or
sub
mov
cmp
sbb
cmps
je
jg
out
(bad)
dec
dec
retf
retf
leave
push
cli
xchg
idiv
pop
sar
(bad)
(bad)
(bad)
mov
pushf
push
xchg
imul
pop
outs
(bad)
add
nop
loop
scas
jmp
or
jmp
(bad)
push
add
das
add
cmps
into
outs
call
add
and
into
add
scas
shr
ds
into
fld
test
jmp
imul
int
lock
xchg
das
sar
test
jo
std
jbe
jp
mov
clc
mov
mov
inc
leave
push
(bad)
sub
add
call
sub
pop
(bad)
and
enter
adc
aad
jp
jmp
push
stos
add
push
mov
inc
pop
mov
mov
push
mov
mul
mov
cmp
stos
add
(bad)
(bad)
out
fs
jns
pop
mov
mov
ja
fs
jecxz
xor
les
mov
(bad)
(bad)
jmp
cmps
mov
fild
stc
xor
loope
test
push
push
adc
stos
mov
pop
or
cli
push
nop
fnstenv
push
and
adc
(bad)
cmp
call
mov
out
(bad)
mov
jmp
jecxz
(bad)
mov
int3
test
aad
xchg
xor
(bad)
(bad)
jmp
ins
out
xor
lods
push
jmp
xor
xor
jmp
mov
push
icebp
(bad)
mov
cmp
sub
mov
fisub
push
loop
xchg
adc
lods
mov
sub
sbb
(bad)
jg
retf
ds
inc
fisubr
dec
cmp
jnp
ins
(bad)
(bad)
push
cmps
scas
add
push
jae
aaa
mov
cmps
and
jp
mov
sti
pop
(bad)
xor
out
mov
jno
test
ins
inc
(bad)
(bad)
dec
and
and
shl
dec
and
jo
jg
mov
pop
iret
ins
icebp
push
sbb
ret
mov
jmp
mov
outs
(bad)
jmp
repnz
loop
mov
xchg
les
pop
fisttp
xchg
cmp
(bad)
(bad)
(bad)
(bad)
mov
in
pop
ds
push
repnz
bound
inc
xchg
dec
imul
jmp
(bad)
(bad)
(bad)
jmp
xor
sbb
mov
scas
test
mov
push
pop
jne
inc
cli
in
sub
jae
retf
push
mov
sar
ins
js
cmp
mov
mov
cld
fild
inc
xchg
call
xchg
sar
(bad)
jg
js
mov
outs
ins
scas
push
scas
imul
cmp
dec
mov
cmp
push
dec
movs
leave
in
jge
(bad)
(bad)
jg
sub
mov
xor
stos
into
cmps
icebp
push
rol
or
seto
(bad)
(bad)
jmp
repnz
jp
fmul
mov
retf
imul
test
adc
jmp
imul
loopne
sub
and
sbb
add
pop
sub
sub
dec
icebp
pusha
shl
mov
sbb
inc
mov
sub
aam
inc
dec
mov
scas
or
jo
ror
push
sub
xor
rcl
or
adc
loop
cld
call
push
cmp
(bad)
in
shr
test
cli
jg
leave
adc
(bad)
mov
or
mov
adc
outs
dec
dec
mov
inc
test
movs
and
cmp
jb
mov
sub
cmps
icebp
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
inc
in
(bad)
scas
sar
das
ret
cmp
mov
add
iret
mov
jb
push
xchg
dec
mov
imul
sbb
lods
mov
(bad)
(bad)
(bad)
push
imul
sub
add
scas
cmp
sbb
mov
ret
xchg
call
hlt
pop
sbb
dec
mov
sti
xchg
imul
stos
add
xchg
sub
jecxz
jmp
push
in
or
ins
jb
mov
sub
mov
into
pop
movs
(bad)
mov
jge
pop
mov
enter
push
cmc
(bad)
mov
in
mov
jmp
push
sub
test
adc
xchg
repz
jmp
and
pushf
sbb
push
jne
(bad)
call
and
repnz
pushf
retf
(bad)
stos
imul
jnp
jle
jnp
std
cmp
or
push
mov
(bad)
inc
fmul
mov
mov
mov
sbb
jne
jmp
daa
jb
sbb
mov
aad
(bad)
(bad)
inc
mov
(bad)
out
mov
lock
in
(bad)
cmp
pop
cmp
(bad)
(bad)
call
mov
test
lahf
mov
test
sti
ins
lods
xchg
lock
gs
cmps
jb
(bad)
(bad)
call
pop
(bad)
cmp
sub
cli
mov
and
sbb
mov
inc
cmps
sar
sbb
in
call
stos
sbb
sbb
cmp
stos
fwait
rcr
outs
test
imul
mov
es
sub
pop
or
jmp
sbb
loopne
(bad)
in
or
mov
mov
dec
fldenv
inc
mov
ins
and
mov
(bad)
fisttp
ins
fld
ret
inc
adc
fcmove
in
icebp
pop
or
shl
sbb
imul
clc
mov
xchg
inc
fst
mov
ins
movs
mov
xchg
cmps
adc
(bad)
(bad)
std
mov
or
mov
dec
outs
lods
cmp
and
(bad)
(bad)
mov
call
mov
ins
sub
retf
in
into
jb
inc
and
xchg
xchg
loope
loopne
out
ret
mov
xor
or
fadd
adc
sub
sub
or
(bad)
(bad)
dec
enter
mov
lds
cmps
pop
int3
int3
push
mov
ins
retf
pop
rcr
or
(bad)
fbld
cli
mov
ds
ds
jnp
ret
gs
mov
pop
fdivr
pop
xor
stos
iret
inc
clc
pop
mov
dec
call
mov
mov
push
ret
cmp
in
(bad)
(bad)
(bad)
jmp
es
jne
mov
mov
mov
mov
(bad)
in
mov
(bad)
dec
jns
sbb
cld
shr
dec
popf
bound
daa
dec
and
(bad)
(bad)
jle
fwait
mov
xor
sub
ds
sub
retf
(bad)
jmp
in
sub
stos
and
xchg
or
(bad)
ds
(bad)
(bad)
call
inc
dec
outs
iret
mov
mov
xor
push
rcr
imul
push
add
call
mov
add
cmps
test
unpckhps
lock
call
mov
int3
adc
ret
mov
jmp
ds
cmp
push
xor
adc
xchg
retf
dec
in
dec
sub
dec
test
loope
jmp
xlat
push
call
xor
dec
jmp
pop
sti
std
jge
(bad)
(bad)
dec
fwait
push
mov
mov
and
add
std
and
(bad)
(bad)
mov
call
in
bnd
dec
mov
(bad)
(bad)
(bad)
call
js
fisub
sbb
loop
out
sar
call
pop
jmp
(bad)
(bad)
(bad)
cmp
dec
add
sbb
scas
xchg
xor
xrelease
gs
cs
cli
jmp
call
js
jge
out
cli
and
inc
iret
imul
div
fmulp
xchg
(bad)
sub
cdq
and
stos
outs
push
sub
pop
cmp
mov
push
std
sbb
xchg
div
push
pusha
mov
push
lahf
imul
and
sub
sub
adc
mov
dec
lock
fistp
mov
sub
mov
hlt
adc
jns
inc
std
(bad)
(bad)
stc
bound
or
jg
sti
push
mov
jmp
pop
inc
leave
mov
xor
cwde
xor
jg
pop
pushf
xor
pushf
inc
je
mov
pop
stos
cpuid
(bad)
xor
and
or
fistp
or
mov
repz
mov
data16
jmp
shl
lea
push
mov
jecxz
and
cdq
test
inc
cld
pop
hlt
push
cwde
sahf
fwait
inc
ret
scas
cmp
jg
bnd
mov
and
push
stos
sahf
cmps
(bad)
call
cmp
stos
in
mov
pusha
jo
sbb
xchg
movs
cs
(bad)
(bad)
call
jg
jns
mov
pop
sbb
popf
cmp
test
sbb
cdq
mov
es
dec
imul
jg
(bad)
push
add
pop
stc
iret
(bad)
leave
sbb
sbb
hlt
in
imul
or
call
in
test
mov
push
xor
(bad)
call
mov
sub
loopne
lahf
pop
xchg
out
inc
retf
out
ins
lock
and
inc
adc
cmp
in
aam
and
out
mov
mov
outs
pusha
fwait
mov
xchg
sti
dec
in
ret
sbb
(bad)
(bad)
(bad)
jle
jb
mov
mov
out
mov
xor
arpl
and
sbb
cmp
jmp
sbb
xchg
cs
inc
out
fbstp
sbb
xlat
loope
pop
xchg
mov
mov
cld
sbb
movs
rcl
sbb
movs
xchg
rcl
inc
(bad)
(bad)
dec
bound
cmp
xchg
push
retf
pop
scas
js
popf
jle
inc
add
ror
push
inc
outs
adc
ds
aam
inc
pop
sub
sbb
(bad)
push
or
pop
daa
ja
popf
mov
(bad)
(bad)
(bad)
inc
push
pop
jbe
pop
push
dec
or
cmps
push
push
jecxz
(bad)
nop
retf
retf
(bad)
(bad)
call
fcomp
ss
mov
jo
jp
test
jp
ins
idiv
pop
pusha
xor
or
cmps
push
dec
sub
push
dec
int
pop
daa
dec
mov
sub
pop
pop
cmp
outs
xchg
cli
fist
pop
mov
stos
sub
xchg
mov
(bad)
dec
mov
jo
ins
pop
outs
jmp
mov
rol
(bad)
mov
push
push
push
out
dec
ficomp
mov
jp
cmp
mov
mov
imul
cmp
(bad)
jmp
mov
js
dec
mov
and
mov
cmc
test
cli
sbb
cli
(bad)
dec
(bad)
jno
cmp
pop
rcl
imul
and
mov
hlt
push
je
mov
mov
and
clc
mov
jmp
and
retf
sub
pop
or
mov
es
es
outs
push
and
ret
(bad)
jmp
jg
and
loopne
mov
push
push
mov
(bad)
(bad)
(bad)
inc
das
mov
movs
cmp
and
jno
dec
(bad)
test
stos
rcl
rcl
pop
jmp
jmp
mov
sub
dec
retf
fwait
popa
(bad)
js
adc
inc
pop
mov
(bad)
push
xlat
sbb
add
pop
and
addr16
mov
push
mov
in
mov
daa
cs
jmp
movs
mov
adc
int
push
cli
das
shr
xchg
mov
mov
and
(bad)
call
pop
jg
aad
lahf
test
mov
lahf
and
in
push
xchg
js
cmp
jno
(bad)
(bad)
(bad)
jg
(bad)
fidiv
and
cmp
push
xor
gs
mov
add
(bad)
jg
lea
addr16
sti
mov
(bad)
mov
aam
lock
pushf
inc
popf
lds
(bad)
inc
and
(bad)
mov
jmp
xlat
loopne
(bad)
scas
clc
or
dec
mov
js
scas
in
pusha
inc
lahf
pop
ins
ror
int3
out
xor
mov
cld
xchg
movs
movs
scas
push
jle
add
ficom
ds
push
xor
inc
xchg
and
(bad)
call
xor
xor
adc
dec
loop
aam
out
repz
(bad)
(bad)
(bad)
call
mov
sub
mov
stos
int
int3
sbb
and
hlt
mov
inc
jno
nop
icebp
(bad)
inc
sar
push
add
push
jmp
(bad)
xor
inc
call
dec
cmp
cli
outs
jmp
dec
cli
mov
ret
scas
xor
hlt
jmp
jno
out
pop
pop
shl
lods
add
xchg
jle
test
cmp
mov
addr16
ret
pushf
mov
mov
push
ds
loope
scas
iret
pop
aaa
daa
(bad)
jg
call
add
loopne
aaa
loop
cmp
mov
and
jmp
add
cmp
cld
ror
adc
xlat
scas
(bad)
jle
cwde
popa
(bad)
(bad)
push
scas
cwde
cdq
out
sub
enter
pop
dec
je
into
cli
aaa
fstp
(bad)
mov
cmp
xchg
sub
xor
ja
adc
push
std
or
call
pop
data16
ja
test
outs
(bad)
sbb
(bad)
jmp
(bad)
xchg
(bad)
push
inc
sub
aam
cmc
(bad)
dec
(bad)
test
mov
out
pop
sub
sub
jmp
cdq
pop
rcr
push
aam
push
or
adc
out
out
sub
hlt
jae
enter
sti
mov
add
(bad)
(bad)
jmp
mov
mov
sub
jecxz
pop
sar
jns
(bad)
fild
dec
div
int3
lods
pop
shr
sub
shr
add
xor
fcmovb
sbb
xlat
out
xor
mov
inc
jl
cld
mov
dec
movs
shl
push
jp
(bad)
(bad)
(bad)
(bad)
ficomp
add
mov
xchg
gs
mov
and
cli
mov
jae
(bad)
(bad)
dec
pop
jo
movs
push
hlt
xchg
out
jp
mov
or
mov
mov
adc
mov
mov
push
cmp
in
and
shr
mov
loop
adc
hlt
cmp
(bad)
(bad)
(bad)
(bad)
fstp
push
add
clc
xor
nop
out
fsubr
test
outs
pop
jmp
movs
mov
add
push
imul
(bad)
push
cmp
in
cli
imul
mov
xor
(bad)
jmp
mov
and
fmul
jmp
dec
stos
clc
jb
sti
data16
(bad)
jg
xchg
pop
and
rcl
or
(bad)
adc
pop
je
sbb
aam
(bad)
fs
test
(bad)
(bad)
mov
push
jmp
cmps
xchg
repnz
jnp
(bad)
mov
test
or
(bad)
sub
retf
sbb
stos
sbb
jne
int
push
jmp
cli
(bad)
(bad)
std
call
sbb
xor
out
adc
aaa
cmps
out
outs
mov
mov
dec
nop
loop
add
fnstcw
test
xor
cld
sbb
loope
fs
push
mov
jno
jg
fs
mov
stos
(bad)
(bad)
fisttp
jmp
es
(bad)
or
sub
xchg
arpl
push
sub
inc
or
sub
mov
jb
mov
inc
pop
xchg
mov
jae
cld
adc
adc
sbb
cli
xor
retf
retf
push
(bad)
(bad)
push
xchg
(bad)
fimul
sti
mov
idiv
in
dec
in
push
adc
xlat
mov
fwait
outs
out
cli
jmp
cmps
xor
outs
or
scas
leave
mov
push
mov
dec
xor
mov
xchg
aam
fiadd
jo
les
jo
aas
cli
call
adc
es
mov
(bad)
call
sbb
xchg
pop
scas
mov
jl
sub
pop
inc
mov
mov
(bad)
(bad)
(bad)
jmp
xchg
fld
scas
mov
pop
adc
pop
mov
scas
cmp
xchg
std
(bad)
(bad)
(bad)
(bad)
jge
stos
cwde
dec
in
mov
adc
dec
ret
neg
xchg
test
push
aad
data16
(bad)
(bad)
jg
add
add
cdq
lahf
jnp
add
add
xchg
jbe
xor
push
dec
test
scas
popa
(bad)
(bad)
(bad)
jmp
pop
lods
movs
mov
adc
sub
call
jo
dec
sub
jl
(bad)
(bad)
(bad)
(bad)
mov
cdq
mov
icebp
sub
mov
push
jg
push
xor
retf
sbb
call
out
xchg
sub
or
add
je
clc
dec
stos
jg
cmp
ret
aad
sub
sub
repnz
jle
mov
iret
inc
js
sub
cmp
test
inc
out
lea
jns
imul
sbb
call
shl
dec
adc
push
mov
(bad)
(bad)
(bad)
fistp
cmc
or
jp
lock
inc
sub
ret
call
(bad)
(bad)
(bad)
jmp
fisubr
(bad)
xor
fucomip
in
in
xor
mov
inc
clc
and
push
call
mov
call
loopne
sub
lock
mov
sbb
scas
clc
inc
mov
and
div
push
shl
pushf
into
or
call
cdq
in
and
pop
adc
mov
lock
mov
outs
sti
cmc
(bad)
call
cwde
pusha
dec
adc
daa
outs
pop
mov
stc
jns
call
inc
mov
loop
mov
dec
sahf
push
xlat
inc
mov
scas
int3
xchg
mov
adc
jmp
aad
jg
int3
sbb
mov
call
pop
mov
je
rcr
aad
stos
(bad)
(bad)
mov
ins
retf
(bad)
jb
and
cmp
push
sub
push
(bad)
jg
inc
or
pop
pop
jg
mov
mov
push
(bad)
xor
mov
cwde
clc
cmps
fisub
adc
ds
pop
ins
or
sub
push
cmc
mov
test
jno
cmp
sub
or
dec
push
mov
(bad)
fist
mov
pop
pop
ret
dec
fs
mov
(bad)
call
scas
xchg
cmp
imul
aam
iret
mov
(bad)
(bad)
call
adc
imul
and
mov
(bad)
lock
cli
les
stc
mov
test
inc
push
sub
js
xchg
rcl
gs
movs
push
loop
(bad)
fild
push
xchg
push
inc
cmp
and
loopne
js
(bad)
(bad)
(bad)
dec
dec
push
and
movs
lods
shl
mov
call
mov
retf
xor
(bad)
(bad)
dec
jle
pop
test
mov
aad
bnd
mov
pop
sub
es
jmp
cwde
or
dec
cdq
xchg
jne
mov
imul
push
(bad)
jg
fadd
sub
add
push
fsqrt
stos
outs
ds
push
ss
cs
mov
or
mov
adc
aaa
mov
pop
sbb
inc
jb
pop
out
js
push
ins
lods
mov
mov
jmp
or
cdq
dec
cmp
jo
pop
pushf
adc
clc
(bad)
(bad)
jmp
cmp
and
call
xor
xor
mov
sub
cli
pop
cwde
std
(bad)
jmp
retf
or
shr
cld
test
mov
xchg
mov
fistp
test
fsubr
mov
jno
pusha
mov
iret
(bad)
(bad)
jmp
push
(bad)
sbb
fisttp
in
fdivr
outs
push
cmp
(bad)
(bad)
jg
sub
test
ror
lock
and
das
cwde
dec
cmps
je
sbb
inc
xchg
inc
push
loop
mov
je
jecxz
(bad)
(bad)
push
lea
test
es
dec
rcl
and
iret
xchg
imul
or
adc
les
sub
aaa
(bad)
mov
(bad)
(bad)
in
aam
mov
mov
dec
add
xchg
add
and
sub
and
xchg
fisttp
mov
call
stos
dec
sar
mov
and
movs
ret
sbb
pop
cmps
es
mov
push
out
xchg
mov
sub
enter
jmp
test
call
(bad)
call
push
out
ds
dec
int3
dec
std
ror
dec
outs
repnz
(bad)
push
clc
(bad)
(bad)
mov
pop
sbb
pop
jp
cmps
sub
test
mov
jg
(bad)
(bad)
push
test
scas
jb
jmp
xchg
mov
pop
or
lods
push
inc
jle
and
sbb
out
fisttp
dec
mov
push
(bad)
(bad)
(bad)
(bad)
fmul
pop
ins
pop
(bad)
xor
mov
sahf
js
mov
push
cmp
cmp
imul
xchg
pop
pop
adc
std
scas
mov
hlt
mov
stos
sub
jecxz
dec
neg
adc
rcr
and
dec
jmp
sub
leave
or
(bad)
jmp
xchg
sbb
es
ret
into
imul
push
call
and
movs
mov
dec
add
out
pop
repz
pop
pop
jl
ds
fwait
mov
pop
shr
dec
mov
push
cwde
xchg
push
xor
sub
mov
sti
fsub
xchg
push
dec
(bad)
and
adc
repnz
les
out
jmp
call
inc
add
mov
dec
mov
lods
fwait
scas
movs
std
or
or
sub
(bad)
mov
mov
sub
test
out
into
cs
or
push
popf
xor
fld
mov
mov
sub
scas
jnp
sub
out
sub
adc
cmp
loopne
inc
scas
lods
cli
cmp
out
loope
movs
mov
sbb
(bad)
push
sbb
jmp
mov
jmp
sbb
loop
cmp
hlt
pop
out
and
jmp
retf
rcr
rdtsc
sub
push
dec
scas
cmp
imul
(bad)
jmp
sub
int
rcr
mov
jb
ins
push
xor
cld
adc
cli
and
push
sub
add
xchg
push
xchg
xchg
retf
inc
pop
test
jns
lea
mov
loop
inc
cld
jns
push
cdq
cmp
jmp
(bad)
inc
sub
enter
adc
shr
stc
mov
pusha
lahf
push
pop
(bad)
(bad)
(bad)
mov
out
shl
(bad)
int
pop
daa
clc
mov
ins
loope
fbld
retf
push
aam
cli
out
add
out
cdq
lods
(bad)
jmp
sbb
lock
sub
sub
repz
into
sar
fwait
push
xor
ret
(bad)
fucomi
cmp
add
mov
stos
fs
mov
cmp
stos
cli
fucomi
(bad)
(bad)
call
lahf
add
retf
xchg
fwait
(bad)
clc
mov
pop
dec
fisttp
sbb
(bad)
mov
xchg
nop
pop
test
mov
out
pop
dec
cld
clc
popf
add
call
jbe
jmp
mov
dec
jmp
loop
mov
mov
js
clc
push
mov
inc
add
pusha
push
test
(bad)
fisttp
loopne
jmp
scas
xchg
fwait
and
xor
test
mov
je
or
dec
stos
inc
or
cmps
mov
mov
add
ins
cli
xchg
or
mov
out
push
sbb
scas
(bad)
(bad)
(bad)
(bad)
cmp
xchg
dec
sar
jno
sub
fld
ss
ja
xchg
mov
dec
call
push
mov
adc
ds
(bad)
(bad)
jmp
xchg
jge
cmp
fisubr
jmp
push
and
iret
adc
mov
and
shr
movs
cmps
sbb
loop
(bad)
mov
inc
scas
fs
(bad)
jno
stos
popf
jbe
or
mov
pop
(bad)
mov
(bad)
pop
jmp
sbb
sub
(bad)
es
movs
mov
push
(bad)
(bad)
jg
test
(bad)
xor
mov
pop
jo
ins
lods
je
sub
and
ins
and
ins
data16
cwde
mov
(bad)
(bad)
(bad)
(bad)
jge
adc
inc
mov
cs
cmp
xor
cmp
shl
iret
fadd
and
(bad)
(bad)
(bad)
jmp
loop
loopne
mov
and
xchg
sub
xchg
and
cmps
out
icebp
mov
(bad)
call
cmp
adc
call
ret
push
adc
cmp
(bad)
(bad)
dec
retf
dec
cld
mov
imul
xlat
mov
scas
xchg
sahf
and
xor
mov
shr
test
xchg
mov
dec
std
jmp
in
shr
cmp
sub
or
nop
dec
inc
clc
jmp
dec
lahf
sub
mov
retf
jnp
jmp
adc
call
dec
pop
test
(bad)
(bad)
(bad)
jmp
xor
cmp
out
sub
dec
mov
sbb
jnp
and
scas
fild
lock
add
mov
call
stos
in
retf
clc
or
out
mov
(bad)
mov
fwait
pop
mov
jmp
sub
in
pushf
movs
jno
retf
jmp
inc
ins
call
and
sbb
pop
inc
in
nop
jb
ins
scas
sub
std
stos
mov
pop
je
sub
dec
dec
cli
dec
jo
dec
in
arpl
cmp
ins
pop
ss
pop
and
inc
clc
(bad)
adc
push
jmp
inc
cld
dec
lock
call
or
or
sar
aas
es
fsub
sbb
jbe
in
ins
(bad)
(bad)
(bad)
call
pop
mov
int3
data16
aad
sub
or
fwait
cmp
dec
sbb
jo
inc
and
gs
ret
jge
mov
ins
lahf
and
jg
add
addr16
fwait
push
retf
iret
xchg
adc
stos
sti
loope
inc
adc
movs
dec
dec
dec
(bad)
iret
mov
idiv
test
jg
jge
pop
and
(bad)
jg
adc
add
repz
test
or
xor
and
ficomp
pop
aam
jp
in
jo
loop
enter
or
mov
std
mov
jbe
adc
dec
mov
xor
scas
fwait
(bad)
pop
cs
jmp
faddp
repnz
(bad)
(bad)
dec
jno
call
arpl
mov
cmp
retf
push
sub
sbb
retf
or
int3
leave
adc
lahf
sub
add
push
ds
cmp
inc
sbb
and
dec
xchg
fild
mov
dec
call
icebp
cmp
adc
(bad)
inc
xor
jl
or
push
stos
dec
jle
(bad)
(bad)
(bad)
(bad)
mov
inc
test
fs
int3
out
in
mov
(bad)
shr
(bad)
push
movs
sar
cmp
dec
(bad)
(bad)
(bad)
(bad)
push
adc
retf
mov
lods
outs
mov
or
add
sub
fild
std
(bad)
stc
add
gs
call
icebp
jne
(bad)
fbld
and
pop
jno
cmp
mov
adc
dec
fimul
jmp
push
sbb
cmps
(bad)
(bad)
fiadd
retf
mov
cmps
outs
ins
cmps
dec
call
ds
sub
xchg
jns
mov
movs
out
xchg
cli
jmp
jg
loopne
pop
mov
inc
mov
push
fdiv
rcl
dec
mov
mov
push
xor
(bad)
(bad)
call
dec
mov
shr
sahf
sub
inc
ins
rcr
rcl
xor
xchg
jg
(bad)
jmp
lahf
test
pop
cmp
ins
movs
cmc
ja
add
ins
cmp
(bad)
jg
push
xchg
or
loopne
push
and
push
sbb
std
or
retf
addr16
cld
loopne
fnstsw
(bad)
mov
sbb
mov
push
cmps
pop
adc
or
lahf
jno
sub
(bad)
(bad)
(bad)
call
xor
(bad)
jmp
mov
xor
cmps
sbb
into
jge
mov
inc
(bad)
scas
dec
jg
(bad)
call
xchg
jge
mov
idiv
retf
ret
and
dec
mov
mov
(bad)
call
sbb
mov
sub
in
add
mov
pop
mov
(bad)
call
mov
daa
or
out
int
cmps
pop
mov
or
(bad)
(bad)
push
leave
cld
arpl
sub
pop
inc
stos
std
outs
sub
jmp
loopne
ret
dec
inc
or
les
fwait
lods
into
sbb
adc
ficom
int3
dec
mov
outs
mov
stos
(bad)
(bad)
(bad)
call
retf
sbb
pop
mov
adc
ret
call
nop
movs
jg
(bad)
(bad)
jmp
jmp
mov
in
fsubr
ret
ror
mov
or
add
lds
scas
scas
jle
sub
push
(bad)
(bad)
jmp
sbb
push
call
inc
stos
cmp
xlat
inc
and
mov
in
(bad)
call
loopne
movs
js
stos
or
cmc
adc
scas
movs
push
std
dec
cs
loopne
add
data16
xor
add
and
and
je
xchg
dec
in
int3
stos
stos
ins
ds
jbe
xchg
mov
jp
jg
mov
popf
sbb
mov
loop
popa
retf
push
outs
fcmovbe
jl
test
add
xchg
inc
out
out
mov
loop
cs
mov
adc
pop
mov
ja
loope
mov
dec
fcmovnb
push
xor
shl
out
pop
xor
add
call
xchg
dec
movs
gs
jle
jmp
xchg
push
sub
xchg
xor
inc
push
cld
(bad)
jmp
call
pop
mov
dec
call
clc
popf
push
sub
mov
rol
sub
loope
cmp
pop
pusha
xor
xchg
push
call
jmp
mov
xchg
sahf
jp
rcl
lods
retf
push
inc
pop
inc
pop
call
cmp
inc
ds
xchg
retf
gs
movs
or
cmp
push
call
inc
test
xchg
adc
mov
sub
mov
mov
fisttp
xor
lds
cmp
cdq
repz
mov
mov
(bad)
call
dec
mov
mov
mov
add
dec
outs
shl
cli
(bad)
(bad)
dec
sbb
dec
loop
push
imul
push
js
or
dec
xor
cmp
mov
sbb
(bad)
shr
(bad)
(bad)
(bad)
call
call
pusha
retf
push
and
in
pop
test
cmps
push
out
(bad)
(bad)
jmp
fs
ins
cmp
sub
mov
mov
sbb
sub
ins
xor
out
mov
jmp
mov
xchg
pop
(bad)
jmp
(bad)
mov
gs
stos
xchg
jmp
mov
jne
retf
test
push
dec
mov
(bad)
jmp
push
inc
xor
mov
adc
fdiv
scas
ja
mov
lods
adc
test
dec
popf
movs
int3
pop
cmps
cmps
in
(bad)
cmps
inc
sbb
scas
rcr
jmp
iret
jge
frstor
cmps
cwde
add
jmp
mov
addr16
call
into
rol
(bad)
(bad)
(bad)
(bad)
jnp
pop
pop
les
and
add
cmps
or
icebp
int3
jl
ret
retf
rcl
cmps
out
cs
jmp
pop
xchg
jnp
sub
std
dec
add
mov
(bad)
(bad)
call
pusha
call
jmp
movs
cmp
cmp
xchg
mov
(bad)
shl
ficomp
(bad)
(bad)
(bad)
call
adc
and
out
pop
pusha
jmp
cmp
and
lea
mov
add
or
loope
in
xchg
and
stos
dec
loope
push
jecxz
inc
mov
or
lock
push
cs
ret
push
outs
(bad)
mov
int
mov
test
sub
call
mov
push
sub
mov
out
fld
push
dec
aas
sub
outs
daa
cli
daa
or
cmp
inc
cmp
(bad)
push
jp
lahf
push
lock
in
xor
das
pop
jns
iret
iret
mov
into
mov
(bad)
(bad)
jmp
scas
ret
call
mov
mov
stos
call
jns
lock
mov
les
addr16
push
inc
mov
bound
xchg
push
idiv
scas
mov
imul
jmp
pop
and
jmp
stos
jns
mov
mov
adc
(bad)
(bad)
mov
pop
retf
dec
xchg
stos
mov
push
bnd
xchg
js
imul
and
ror
cmps
lods
mov
icebp
and
push
mov
add
arpl
cmps
(bad)
(bad)
(bad)
jmp
dec
int3
fcmovnu
add
loop
ins
push
and
dec
fisubr
cvttps2pi
dec
test
push
repnz
(bad)
(bad)
xor
cld
mov
(bad)
sahf
js
stos
cwde
cli
fs
rep
das
idiv
(bad)
push
popf
stos
shl
aas
cmc
mov
hlt
enter
scas
inc
mov
cwde
inc
push
adc
loop
(bad)
(bad)
(bad)
js
mov
mov
mov
cdq
lds
outs
gs
sbb
adc
inc
(bad)
(bad)
jmp
into
mov
adc
(bad)
std
daa
into
outs
xor
inc
gs
push
and
(bad)
jmp
cmps
outs
scas
pusha
icebp
mov
ret
mov
adc
lods
jb
fstp
and
in
ret
dec
pop
fs
push
sub
cmps
mov
mov
imul
or
mov
out
add
sbb
imul
imul
scas
in
sbb
xor
xchg
(bad)
(bad)
(bad)
call
in
mov
call
or
mov
stc
das
test
adc
inc
bound
(bad)
(bad)
(bad)
jmp
ja
and
imul
sti
cmp
mov
sub
pop
sub
fwait
das
cli
data16
dec
dec
arpl
jmp
shl
push
aad
icebp
(bad)
cmp
scas
das
cmp
mov
scas
add
xchg
xchg
pop
sti
test
push
sub
data16
inc
fwait
cli
inc
cmp
movs
jmp
and
cmp
test
call
mov
(bad)
(bad)
(bad)
(bad)
mov
push
fwait
dec
or
pop
jmp
loopne
mov
repnz
dec
(bad)
(bad)
(bad)
jmp
adc
xchg
int3
ins
inc
cmp
bound
dec
adc
mul
inc
ror
es
cmp
out
scas
cmp
pop
mov
push
std
pop
xor
inc
and
les
into
neg
jg
retf
jp
mov
sub
mov
jmp
mov
scas
fiadd
xor
loop
cmps
jp
test
retf
add
or
loop
and
dec
add
call
pop
pop
or
popa
dec
push
mov
or
xor
mov
lea
adc
pop
dec
stos
(bad)
(bad)
(bad)
push
mov
jecxz
mov
sub
pop
jecxz
mov
fldcw
sub
(bad)
(bad)
jmp
jge
popf
and
mov
inc
or
sub
(bad)
mov
mov
(bad)
call
lea
sahf
out
repnz
mov
pop
xor
outs
or
sbb
pop
cli
ds
aam
push
and
in
mov
push
cmp
retf
(bad)
mov
call
add
aam
fcomp
(bad)
(bad)
(bad)
call
jmp
adc
jg
sub
(bad)
mov
sub
in
idiv
dec
into
fs
(bad)
jmp
dec
inc
in
dec
repnz
rcl
(bad)
clc
lods
fprem
or
in
and
std
jns
call
fdivr
mov
or
les
adc
mov
ins
jl
lods
stos
adc
fidiv
out
call
call
inc
scas
pop
xlat
fs
push
mov
out
mov
ficom
jmp
shr
lock
(bad)
dec
ja
ins
(bad)
jmp
loop
sub
add
sbb
shr
inc
xor
sub
(bad)
(bad)
push
aas
adc
in
ins
hlt
and
fwait
shl
adc
or
out
lods
mov
(bad)
mov
xor
cs
xchg
sub
jnp
lods
movs
mov
(bad)
pop
xchg
fistp
enter
(bad)
dec
nop
je
adc
ss
fisttp
mov
(bad)
(bad)
jmp
mov
pop
mov
dec
or
jecxz
xor
icebp
or
sbb
xor
mov
loopne
mov
lea
lods
jmp
dec
icebp
(bad)
call
sub
sbb
test
(bad)
sub
adc
xlat
test
dec
and
xchg
cmp
test
mov
test
enter
pop
loopne
jae
xchg
push
add
loop
add
add
cmp
fistp
sbb
jmp
sub
dec
and
call
push
in
lods
jmp
mov
jb
jmp
jmp
call
(bad)
(bad)
jmp
cli
pop
leave
pop
pop
dec
mov
lods
(bad)
xchg
bound
sub
push
in
mov
push
jmp
lea
mov
clc
(bad)
jmp
outs
xchg
jle
inc
sub
cld
cli
xor
pushf
aas
mov
(bad)
(bad)
jg
data16
pop
std
scas
addr16
cdq
xchg
xchg
sub
test
mov
(bad)
(bad)
push
jmp
stos
movs
pop
dec
xor
sbb
dec
sub
scas
xor
retf
inc
les
sub
add
pop
out
xchg
adc
fcomip
jmp
gs
xor
push
cli
fnstsw
mov
repz
xchg
xor
mov
sub
call
pop
call
adc
pop
mov
aad
cmps
jo
jecxz
(bad)
(bad)
(bad)
stc
scas
sti
inc
fstp
xlat
cmps
or
fstp
or
sub
sbb
fwait
(bad)
scas
dec
cmp
scas
jmp
scas
sub
addr16
mov
xor
sub
shl
fiadd
sbb
push
(bad)
(bad)
call
pusha
pop
gs
mov
push
movs
sub
push
stos
pop
mov
mov
(bad)
(bad)
jmp
sub
(bad)
loop
pusha
jmp
jle
inc
sub
scas
(bad)
dec
and
fld
ficomp
sub
adc
test
xchg
sub
dec
jmp
sbb
push
mov
xor
outs
dec
(bad)
inc
cmp
js
not
xor
stos
sub
out
inc
stos
and
cmp
popf
(bad)
(bad)
(bad)
inc
pop
xor
int3
adc
(bad)
xor
cmps
das
cmp
sbb
ins
sub
(bad)
dec
popa
push
jno
addr16
mov
or
add
mov
fisub
aam
xchg
and
ret
fcomi
(bad)
(bad)
fnstcw
adc
(bad)
jp
cmp
into
retf
cmp
add
jmp
add
(bad)
jg
inc
cmc
pop
dec
inc
mov
xchg
push
push
adc
cdq
jg
inc
mov
stc
je
stos
movs
mov
xor
icebp
(bad)
(bad)
inc
cmc
test
cmp
call
test
sbb
lods
ror
mov
inc
dec
jge
(bad)
call
adc
scas
push
dec
mov
mov
jb
push
(bad)
(bad)
(bad)
jmp
clc
cmp
stos
sti
js
ss
test
(bad)
xor
jbe
(bad)
(bad)
(bad)
mov
pop
xchg
(bad)
loop
inc
pop
arpl
stos
inc
sub
jb
(bad)
lock
outs
(bad)
jmp
out
pop
fwait
lods
cli
retf
or
stos
lock
loop
outs
repz
(bad)
(bad)
(bad)
mov
test
test
xor
arpl
add
fadd
sub
sub
add
nop
lods
stos
or
sbb
xchg
mov
arpl
fs
pmaxsw
(bad)
jmp
fwait
mov
pop
xor
fdivr
(bad)
pop
(bad)
pop
fidivr
in
pusha
xor
(bad)
(bad)
(bad)
inc
and
pop
add
mov
lods
ins
xchg
adc
mov
movs
(bad)
jg
jmp
push
lds
fstp
push
dec
jp
mov
(bad)
jmp
lea
mov
gs
(bad)
ja
dec
cmove
call
(bad)
(bad)
(bad)
jp
enter
cmps
push
sbb
push
or
xchg
movs
dec
in
lock
adc
xchg
imul
(bad)
(bad)
push
dec
mov
cmp
out
or
push
leave
mov
iret
int3
sbb
xlat
or
mov
(bad)
outs
xchg
cli
push
jle
stos
cmp
test
adc
popf
and
push
not
aam
(bad)
(bad)
jmp
icebp
test
jb
sbb
sbb
out
jge
push
jnp
call
inc
push
out
push
adc
loope
call
add
adc
loope
ins
xchg
cdq
jle
lock
imul
or
jmp
or
xor
jmp
in
dec
rcr
nop
pop
lock
adc
xor
(bad)
(bad)
(bad)
mov
rol
pop
push
mov
lods
aaa
dec
sbb
in
mov
push
adc
(bad)
(bad)
(bad)
jmp
add
scas
dec
fidiv
xor
push
mov
call
pop
and
mov
jmp
stos
push
push
test
jns
fiadd
jno
sub
mov
clc
cwde
lods
mov
mov
add
test
mov
retf
mov
movs
mov
or
fnsave
or
dec
wrmsr
fwait
lock
outs
mov
adc
sbb
ret
(bad)
cmp
(bad)
jg
test
stc
out
stc
mov
mov
xor
mov
jecxz
imul
int3
loope
mov
aam
(bad)
inc
cmp
cmps
mov
stos
mov
dec
es
or
mov
shr
in
ret
mov
pop
dec
out
jnp
and
sahf
push
and
(bad)
mov
sti
mov
push
mov
sub
jmp
out
stos
dec
(bad)
(bad)
(bad)
dec
call
mov
loop
mov
jg
push
ds
mov
push
into
pop
rcr
push
scas
cmps
icebp
dec
sbb
mov
(bad)
(bad)
(bad)
(bad)
std
jp
mov
xor
lock
jnp
jle
mov
jmp
into
xchg
clc
mov
sbb
stos
clc
(bad)
push
loopne
pop
jmp
test
sahf
adc
cs
lea
dec
(bad)
jmp
jl
(bad)
pushf
loope
cmp
out
iret
(bad)
shl
(bad)
(bad)
(bad)
jmp
push
or
stos
in
outs
cdq
stos
movs
mov
xchg
fwait
jmp
jnp
fild
push
scas
or
(bad)
(bad)
(bad)
cli
sub
push
retf
dec
push
sbb
outs
dec
sahf
aaa
in
push
or
call
fcmovb
inc
mov
stc
in
mov
jmp
lds
xchg
out
mov
cmps
lahf
scas
mov
(bad)
icebp
mov
(bad)
push
sbb
sbb
xchg
call
mov
inc
xchg
cmp
mov
mov
(bad)
in
dec
jnp
push
and
imul
fbld
dec
repnz
pop
fisttp
scas
adc
xor
ins
out
jae
rol
(bad)
jg
xor
pop
adc
mov
jg
pop
jmp
cmps
push
dec
pop
dec
jl
jmp
add
or
inc
push
mov
add
call
imul
call
into
in
scas
adc
(bad)
inc
cmc
adc
cmp
sbb
cmp
dec
in
or
sub
lahf
(bad)
(bad)
(bad)
dec
xor
pop
pop
mov
stc
pop
jb
ficom
or
pop
call
fmul
cmc
inc
call
mov
inc
popa
sub
mov
xchg
test
jmp
inc
fs
gs
mov
mov
mov
push
sub
(bad)
call
mov
dec
aam
fisubr
inc
xor
mov
or
push
les
mov
jns
pop
dec
pop
aas
and
fist
xchg
ins
xor
and
or
repz
imul
scas
int
(bad)
mov
jp
adc
or
push
pop
mov
bound
(bad)
(bad)
cli
mov
push
lds
mov
mov
fwait
jmp
daa
mov
retf
or
sub
call
es
fist
mov
scas
mov
push
daa
pop
mov
push
test
cmc
jg
jg
(bad)
jne
imul
adc
or
std
scas
outs
push
(bad)
(bad)
jmp
adc
xor
mov
ret
mov
jb
push
mov
dec
inc
mov
sub
pop
mov
dec
sbb
mov
addr16
fdivr
and
jmp
(bad)
(bad)
dec
(bad)
inc
adc
pop
sbb
movs
enter
jmp
call
dec
(bad)
push
pop
mov
lock
sub
sub
loop
int
hlt
mov
test
or
or
inc
mov
adc
adc
cmp
(bad)
(bad)
call
mov
adc
or
into
scas
clc
dec
cmp
adc
dec
ja
push
pop
mov
mov
imul
(bad)
call
popa
ror
jns
fisttp
mov
mov
push
cs
fwait
xor
call
in
sbb
jmp
sahf
lods
daa
jg
fs
xor
sbb
push
(bad)
mov
jo
call
inc
outs
pop
mov
dec
sbb
js
stos
or
std
(bad)
mov
(bad)
(bad)
jmp
dec
jmp
mov
cmp
pop
lods
stc
fimul
dec
ins
dec
mov
adc
push
mov
enter
jle
jo
arpl
scas
lds
mov
stc
mov
jmp
and
mov
jge
mov
xchg
fcomip
mov
icebp
test
cmp
inc
cld
(bad)
mov
adc
nop
push
outs
les
inc
(bad)
(bad)
(bad)
jmp
clc
jo
(bad)
dec
lods
adc
pop
cmp
xchg
aad
fsubr
mov
jb
sub
add
or
call
lea
add
jmp
sbb
jo
push
loope
sub
or
aaa
push
sti
cdq
jge
test
mov
scas
sbb
fldpi
test
push
push
outs
xchg
mov
cmp
sub
mov
sahf
or
adc
out
loop
sbb
jmp
cmp
ss
push
sub
icebp
cld
call
cmp
jb
mov
fs
mov
sub
ror
sbb
and
sahf
hlt
jmp
(bad)
(bad)
(bad)
cmp
mov
ror
ins
loope
jl
scas
push
sbb
mov
scas
imul
std
imul
adc
imul
cmp
sbb
sub
imul
sub
pop
ror
fbstp
adc
inc
or
cmp
pop
inc
movs
bound
icebp
pusha
add
or
jmp
js
jg
add
clc
xchg
lods
pop
push
mov
jecxz
mov
(bad)
jmp
mov
mov
push
ss
or
stos
cmp
xchg
call
in
test
cdq
cmps
pusha
mov
ret
inc
jg
sub
pop
cdq
cli
push
mov
sub
into
jmp
rol
rol
mov
mov
(bad)
(bad)
(bad)
jg
jmp
inc
add
bound
outs
dec
cmp
mov
outs
cs
mov
push
shl
std
mov
jmp
sub
mov
sub
mov
mov
push
sub
aaa
pop
push
(bad)
xor
(bad)
cmp
test
pop
jl
loopne
add
jmp
and
cmp
test
jo
repnz
ja
mov
jne
and
adc
outs
shl
dec
dec
(bad)
jmp
das
xchg
fsubrp
mov
adc
stos
pop
loop
xor
popa
mov
pop
loopne
lods
sub
lahf
test
mov
adc
(bad)
pop
(bad)
test
pop
jb
mov
mov
mov
fidivr
sub
imul
clc
cdq
imul
scas
popf
xchg
or
(bad)
mov
dec
sub
jo
call
jmp
pushf
ins
mov
push
out
jmp
add
jecxz
sbb
and
and
pop
push
add
(bad)
clc
loop
sbb
sub
mov
(bad)
(bad)
jmp
lods
scas
push
out
enter
out
rol
cdq
mov
(bad)
mov
pop
lock
push
dec
imul
mov
nop
mov
mov
push
or
mov
test
sbb
iret
lods
or
jb
sbb
pop
jnp
(bad)
(bad)
(bad)
dec
adc
or
add
daa
pop
pop
add
std
pop
sub
popf
mov
pop
sub
mov
inc
sbb
sti
sub
jg
or
adc
ins
push
rol
add
das
movs
call
cmp
scas
lea
jecxz
shl
(bad)
(bad)
jg
call
stos
xchg
fimul
cmp
mov
cmp
(bad)
pop
inc
inc
call
dec
cmp
outs
int3
push
mov
in
sbb
(bad)
(bad)
(bad)
dec
mov
cmp
pop
(bad)
ins
cmp
push
dec
scas
inc
and
push
xchg
(bad)
fisttp
pop
or
test
hlt
es
mov
in
in
adc
push
std
retf
ins
adc
(bad)
(bad)
stc
aas
inc
mov
mov
fwait
rol
jle
pop
stos
jp
fwait
pusha
inc
and
es
cdq
inc
sar
cdq
test
jmp
push
mov
adc
and
(bad)
(bad)
mov
popf
adc
fcomp
jle
jbe
ins
mov
retf
(bad)
(bad)
mul
icebp
xor
sbb
fwait
bound
lock
call
pop
xchg
mov
(bad)
pusha
call
call
arpl
push
and
ror
push
and
bound
out
test
mov
loop
outs
repnz
aad
(bad)
jmp
jne
stos
js
cmp
popa
leave
inc
pop
adc
out
push
cwde
(bad)
(bad)
(bad)
call
test
sub
and
dec
sbb
ds
fild
jns
sbb
or
or
mov
mov
jmp
or
pop
push
(bad)
jg
call
cmp
lods
std
scas
lods
scas
ret
scas
fbstp
sub
call
(bad)
cdq
sbb
cmp
sub
mov
ds
nop
call
fiadd
xor
stos
mov
mov
sub
mov
add
(bad)
call
or
cli
sub
and
mov
jmp
scas
lods
and
jecxz
dec
mov
stos
pop
stos
setl
mov
mov
sub
jmp
shl
jmp
pop
retf
mov
(bad)
call
pop
imul
sub
test
(bad)
setae
fild
mov
sbb
test
fild
sbb
push
pusha
push
pop
cdq
jecxz
idiv
(bad)
(bad)
mov
imul
fidivr
xchg
pusha
arpl
sub
cs
add
pop
xchg
fimul
test
cmp
cmps
aaa
adc
push
(bad)
ror
test
mov
cdq
push
push
push
ins
idiv
scas
clc
das
mov
shl
pop
add
cmc
xchg
clc
(bad)
push
xchg
mov
xchg
inc
ds
cmps
(bad)
lahf
pop
aaa
sbb
fld
es
lahf
cmp
add
(bad)
jmp
jnp
xchg
imul
test
or
or
pushf
jg
and
mov
push
mov
mov
dec
and
ret
fst
mov
int3
xor
jl
push
xchg
retf
and
retf
mov
stc
test
(bad)
and
in
sub
push
(bad)
(bad)
(bad)
call
pop
mov
jae
sbb
test
icebp
xchg
call
dec
retf
cmp
pop
push
pop
jmp
sbb
sbb
sub
in
xor
(bad)
jg
jmp
sub
test
sub
jb
call
cmp
ror
dec
(bad)
(bad)
(bad)
jmp
call
push
dec
add
jmp
and
bound
or
push
(bad)
(bad)
(bad)
push
test
lea
ret
outs
fild
int3
dec
mov
mov
test
xchg
in
cld
(bad)
(bad)
(bad)
dec
repz
cdq
loopne
rcl
int3
and
std
(bad)
into
push
dec
dec
test
xor
mov
stos
ret
outs
lods
mov
shl
or
in
ins
jmp
test
cmp
cmp
push
xor
mov
dec
repnz
cld
jg
push
pop
pop
dec
pusha
add
aad
jmp
pop
movs
sbb
daa
mov
cmps
mov
jne
pop
std
(bad)
(bad)
cmp
idiv
or
cmp
sub
jecxz
or
jo
jb
imul
je
jg
(bad)
(bad)
(bad)
push
sbb
(bad)
out
inc
cmp
lods
jl
or
push
xchg
outs
in
xlat
xchg
adc
pusha
fild
jns
call
mov
cmp
mov
call
adc
mov
mov
(bad)
jmp
(bad)
adc
fidivr
xchg
bound
push
(bad)
jge
leave
cmps
and
shr
cmps
add
pushf
mov
stos
mov
js
cmp
outs
pop
inc
xchg
pushf
in
call
mov
pop
adc
sbb
cli
lock
hlt
(bad)
(bad)
(bad)
in
adc
push
fnsave
retf
std
xor
push
sbb
adc
mov
sub
sub
nop
rcr
lahf
or
cs
pop
lahf
into
jmp
(bad)
call
or
push
xchg
jmp
fnstsw
pop
mov
iret
repz
cli
(bad)
call
aas
(bad)
cwde
sub
iret
xlat
jl
fimul
in
js
push
cld
es
dec
cmp
jmp
adc
jns
into
aad
jmp
push
std
dec
inc
ret
sbb
adc
cmp
sub
and
(bad)
scas
mov
mov
cli
ins
in
das
in
cli
mov
lahf
jbe
mov
push
and
or
loop
lods
gs
push
bound
fdiv
sbb
dec
push
push
jno
jno
in
std
stc
ins
xor
pop
call
sbb
jg
add
mov
jp
test
mov
ss
jmp
call
repnz
add
cmp
ins
mov
adc
fnstenv
cld
outs
xchg
pop
imul
(bad)
(bad)
dec
shl
repnz
mov
mov
ror
stos
retf
popa
sub
stos
adc
cmp
(bad)
(bad)
(bad)
inc
mov
dec
mov
xor
jbe
(bad)
sbb
ins
inc
fcom
loope
fist
(bad)
(bad)
aas
mov
push
xchg
idiv
fld
enter
pop
pop
sub
rol
jmp
mov
xor
loope
and
xor
sbb
xor
inc
add
sbb
xor
cs
mov
sbb
icebp
pop
sahf
xchg
and
jmp
inc
movs
pop
push
xchg
sub
pop
adc
paddw
popf
or
std
leave
xchg
(bad)
(bad)
jmp
std
dec
stos
(bad)
jl
out
jle
scas
cmps
movs
jp
call
push
mov
fsubr
pop
inc
clc
mov
pop
jecxz
lods
pop
(bad)
push
leave
into
call
mov
out
outs
mov
mov
cmps
ds
lods
scas
cmc
(bad)
(bad)
inc
adc
enter
stos
mov
adc
add
add
in
out
xor
cs
call
xor
(bad)
jg
and
and
mov
mov
sbb
mov
popa
repnz
aaa
int
dec
ja
retf
add
adc
lea
rcr
clc
jg
jg
loopne
xchg
daa
stos
jg
add
enter
mov
and
push
das
cli
iret
mov
add
stos
jmp
fdivr
(bad)
jg
jecxz
sub
mov
mov
xchg
sbb
xchg
icebp
call
cmp
pop
ret
stc
xchg
pusha
mov
sub
adc
pop
je
scas
(bad)
(bad)
push
(bad)
fidivr
dec
js
sub
mov
jno
pop
push
or
jg
and
inc
clc
icebp
mov
pop
dec
clc
inc
sar
fs
ss
int3
es
add
adc
das
cli
push
mov
outs
retf
fmul
(bad)
push
lahf
cmp
out
je
mov
call
scas
fbld
(bad)
cdq
test
cmp
xchg
(bad)
push
inc
pop
lahf
retf
(bad)
(bad)
call
cmps
add
out
sub
retf
aad
lock
dec
jbe
add
ja
mul
pop
pop
leave
jbe
jbe
or
mov
cmp
fiadd
imul
jge
ss
aaa
(bad)
mov
repnz
sub
scas
sbb
dec
(bad)
std
jecxz
popf
mov
in
dec
mov
(bad)
push
sub
and
out
push
or
enter
adc
xchg
cmc
cs
mul
xor
fild
xchg
cmps
mov
scas
sbb
jle
mov
neg
mov
cmps
push
stos
jle
inc
cmp
sahf
mov
rol
pop
or
push
mov
cmc
movs
push
sub
mov
(bad)
jmp
mov
sbb
cdq
fmul
aad
sti
and
xchg
(bad)
(bad)
dec
int3
sbb
sub
cmp
push
adc
sbb
dec
xor
call
cld
pop
mov
xor
mov
sub
stos
shl
out
icebp
sbb
(bad)
jmp
scas
jp
mov
out
add
mov
adc
mov
adc
call
mov
daa
loop
(bad)
push
lahf
pop
call
call
daa
sub
scas
fild
cmp
pusha
jnp
add
jp
scas
jl
sub
jl
(bad)
(bad)
call
cmp
add
jmp
aad
adc
fild
push
sub
fwait
cmp
xor
ja
clc
pop
jb
ret
mov
fisub
mov
push
stos
inc
cwde
xchg
in
test
or
in
pop
cmp
pop
and
and
mov
cmp
adc
aad
push
cmps
pop
xchg
(bad)
in
call
rcl
js
ja
jmp
mov
sub
ror
sbb
test
imul
adc
in
add
mov
jecxz
jecxz
xor
ret
push
test
pop
adc
cli
inc
lods
out
in
cmp
jmp
xchg
or
xchg
add
sbb
shr
sub
cmp
and
ret
scas
xchg
loop
and
cmps
stos
(bad)
sti
fidivr
(bad)
mov
aaa
pop
sub
leave
scas
nop
fisub
shl
pop
xchg
add
push
push
sbb
ins
mov
(bad)
(bad)
out
in
or
jmp
call
ss
inc
lods
jmp
xor
(bad)
(bad)
(bad)
call
sub
scas
retf
add
test
fisubr
jp
(bad)
shr
pop
push
icebp
call
cld
in
cs
dec
jmp
and
std
ins
xchg
in
jno
pop
sbb
pop
std
sti
call
cmp
xlat
outs
dec
pop
js
inc
pop
push
pop
loop
jbe
pminub
jl
fild
fidiv
dec
movs
test
fisttp
frstor
icebp
jg
ret
cs
inc
push
dec
cmp
dec
fwait
mov
outs
or
pop
push
loopne
movs
push
dec
aam
or
cmc
clc
fsubp
ins
inc
cli
mov
or
mov
xor
sub
into
je
lock
cmps
xchg
cld
sbb
fimul
cwde
mov
into
cs
jmp
mov
mov
aad
bound
pop
adc
loopne
jg
(bad)
call
sub
mov
xor
imul
or
fld
or
pop
ja
out
pop
pop
jle
in
(bad)
(bad)
(bad)
(bad)
mov
xor
sbb
cs
mov
int
clc
mov
enter
jp
mov
xor
xchg
fstp
sub
adc
movs
(bad)
dec
(bad)
mov
test
adc
in
inc
add
stc
stos
into
mov
pop
clc
clc
lock
xor
jns
or
fwait
lea
in
outs
cli
mov
repz
mov
sbb
mov
jmp
cld
repnz
mov
xchg
movs
push
data16
inc
ds
loopne
and
inc
cmp
(bad)
call
movs
mov
xor
jl
in
xchg
imul
sub
jg
xchg
or
jno
or
lock
pop
hlt
cmp
std
pop
in
mov
fcmovnu
pop
push
push
(bad)
imul
mov
ins
(bad)
mov
fcmovbe
in
stos
dec
push
xchg
add
jp
cld
mov
cld
loopne
loopne
pop
fld
in
or
call
cld
mov
mov
arpl
mov
in
dec
aas
(bad)
mov
or
iret
cmp
cld
outs
jecxz
(bad)
jmp
sar
add
ins
sbb
dec
(bad)
punpckhdq
sbb
call
push
out
(bad)
mov
pop
pop
in
and
ret
mov
mov
lods
mov
shr
ss
add
push
retf
jg
sbb
inc
mov
mov
shl
clc
(bad)
(bad)
jmp
pop
jl
lods
jecxz
lahf
mov
cmps
adc
jecxz
mov
or
and
mov
xor
dec
mov
pop
sbb
loopne
call
push
js
iret
(bad)
jecxz
loopne
push
bound
sbb
jecxz
mov
(bad)
push
scas
sub
add
and
mov
mov
xchg
dec
pop
sbb
loopne
scas
call
mov
(bad)
out
sbb
inc
rcl
(bad)
stos
mov
xor
movs
push
dec
retf
(bad)
in
scas
ret
adc
and
jbe
dec
adc
push
ret
(bad)
inc
or
fcomip
mov
cli
jbe
mov
push
sbb
pop
and
in
fisubr
lods
sbb
push
scas
mov
push
or
imul
ret
lods
outs
pop
pop
xchg
iret
or
(bad)
(bad)
(bad)
mov
jae
jg
repz
pop
ds
dec
sbb
enter
retf
aas
sti
scas
out
sahf
lods
(bad)
(bad)
(bad)
inc
imul
ret
in
sbb
ret
inc
mov
stos
out
or
push
rol
call
xchg
enter
outs
mov
mov
lea
xlat
pop
mov
push
std
(bad)
xchg
clc
lahf
(bad)
out
mov
cdq
cmps
fdivr
call
cmp
pop
xchg
and
lods
mov
xchg
sbb
sub
mov
sbb
pusha
cmp
jecxz
scas
scas
mov
sbb
or
sub
adc
add
fcomip
(bad)
jmp
lock
jae
mov
pop
pop
daa
mov
push
bound
sub
sar
call
dec
jecxz
movs
(bad)
push
ss
add
cmc
cmp
pop
push
sti
push
(bad)
(bad)
jg
pop
adc
out
out
test
mov
aas
dec
(bad)
(bad)
(bad)
jg
sbb
cmp
(bad)
lock
(bad)
jmp
push
dec
out
xlat
xchg
stos
and
xchg
adc
(bad)
jmp
lea
lock
mov
jo
cdq
mov
(bad)
mov
xchg
mov
ins
lods
xchg
(bad)
sbb
dec
out
les
and
test
aam
test
call
ins
push
sbb
sbb
out
jns
dec
std
(bad)
out
push
mov
fistp
fist
jne
retf
call
mov
inc
(bad)
xor
add
scas
jae
les
ins
mov
jbe
and
mov
(bad)
call
sub
cli
enter
cmp
or
cmps
mov
(bad)
call
cli
outs
sub
es
clc
aad
xor
cdq
mov
jnp
adc
icebp
dec
mov
fisttp
jo
mov
in
pop
cwde
imul
inc
mov
das
add
mov
jo
(bad)
(bad)
(bad)
jg
sbb
out
imul
popa
(bad)
test
inc
iret
add
mov
xchg
movs
mov
xchg
ret
test
scas
mov
imul
fcomp
push
clc
inc
xchg
imul
lods
and
adc
stos
mov
push
or
(bad)
(bad)
mov
push
xchg
pop
shl
cmp
and
shr
or
xor
push
push
mov
mov
test
fild
aad
(bad)
jg
call
sub
cwde
es
jg
test
cmc
ja
fnstcw
mov
push
adc
sub
mov
test
ins
pop
std
sub
mov
pop
lods
addr16
dec
(bad)
call
stos
dec
xor
adc
fistp
xchg
cmp
push
jb
inc
clc
(bad)
(bad)
call
cmp
pop
mov
imul
or
addps
mov
mov
xor
mov
cld
add
(bad)
(bad)
(bad)
jmp
aam
pop
sar
(bad)
sbb
jmp
addr16
jns
jmp
call
dec
xchg
dec
(bad)
fstp
push
dec
sti
in
pop
mov
faddp
(bad)
(bad)
(bad)
call
jns
call
repnz
int
add
dec
pusha
(bad)
test
daa
imul
loopne
(bad)
call
cld
and
jmp
adc
retf
shl
jmp
fistp
cmp
pop
rol
(bad)
jmp
mov
(bad)
retf
clc
out
dec
mov
and
sahf
pop
and
pop
in
mov
std
pop
std
fbstp
inc
xchg
pop
inc
mov
stos
mov
aam
inc
mov
daa
(bad)
dec
test
sbb
jmp
adc
in
nop
push
dec
das
cmp
adc
jl
shl
retf
stos
fcomi
fsub
pop
cli
nop
mov
cmps
adc
daa
retf
dec
mov
(bad)
inc
push
fcmove
into
ficomp
addr16
loope
test
out
cli
jmp
call
push
sti
add
push
loop
cmp
xlat
jmp
sbb
clc
(bad)
(bad)
dec
sbb
call
leave
xchg
sbb
(bad)
fst
mov
cld
into
push
dec
adc
das
push
or
retf
sbb
call
cld
push
les
data16
mov
iret
xor
popf
sbb
xor
xor
sbb
or
pop
std
shl
cld
adc
loop
mov
jp
xchg
xor
daa
mov
dec
pop
xor
stc
sbb
push
dec
enter
test
mov
outs
sub
sub
mov
cmp
cmp
jg
mov
jge
stos
cli
mov
mov
(bad)
(bad)
call
or
lock
push
xor
idiv
in
loop
iret
(bad)
xchg
xchg
cmp
(bad)
(bad)
dec
into
jg
sub
cli
pushf
push
jmp
and
cwde
div
iret
cmp
ins
(bad)
(bad)
(bad)
jmp
xchg
mov
stos
jmp
adc
jo
cmp
and
(bad)
(bad)
(bad)
jmp
add
loop
sbb
pop
int
xor
push
scas
xor
int
lods
movs
push
xor
sub
(bad)
(bad)
push
xor
adc
jg
jae
outs
addr16
das
fbstp
rcl
sub
mov
dec
movs
mov
xchg
movs
jmp
loopne
xchg
jb
push
cli
sar
(bad)
(bad)
inc
or
mov
std
dec
mov
das
sub
das
and
out
cli
inc
clc
push
cmp
cwde
xor
dec
sbb
(bad)
sbb
and
add
call
sub
rol
mov
pop
cwde
ins
or
jno
in
std
lock
(bad)
(bad)
mov
pop
addr16
daa
jb
cmps
mov
call
push
stos
in
adc
(bad)
jmp
add
int
mov
minps
stos
mov
(bad)
(bad)
(bad)
call
sub
lods
pop
loope
mov
cmp
or
icebp
ror
mov
or
(bad)
lahf
in
ins
das
dec
das
addr16
fdiv
fucom
dec
lods
jmp
call
daa
push
pop
adc
cli
pop
pop
add
(bad)
(bad)
(bad)
fbld
xchg
test
fwait
std
inc
adc
xor
dec
cmp
inc
pop
fidivr
jl
mov
mov
push
fcomip
(bad)
dec
inc
mov
popf
in
(bad)
push
mov
jl
adc
and
(bad)
dec
sbb
(bad)
(bad)
clc
or
mov
loopne
xor
push
(bad)
(bad)
(bad)
jmp
scas
enter
jmp
retf
dec
push
and
mov
mov
ins
popa
cmp
cmp
cmp
cmp
push
jbe
jae
jp
stc
sbb
pushf
or
(bad)
ja
(bad)
(bad)
mov
arpl
sbb
xchg
(bad)
int3
cs
add
cmps
xor
lock
jl
fisttp
pushf
adc
ins
cmps
(bad)
(bad)
fsubr
leave
dec
jl
dec
cld
dec
xchg
push
gs
inc
mov
xchg
ret
dec
or
xchg
retf
adc
(bad)
call
adc
or
adc
mov
ret
jns
dec
cmps
mov
out
iret
call
dec
mov
enter
loope
jmp
pop
xor
dec
shl
js
(bad)
(bad)
(bad)
(bad)
aas
cmp
xor
cmc
push
xchg
pop
clc
jecxz
mov
popa
ret
xchg
int3
xchg
sub
sbb
(bad)
(bad)
(bad)
call
test
push
dec
mov
jmp
test
call
push
sub
sbb
mov
dec
fisubr
inc
cmp
ret
mov
mov
sbb
push
aad
daa
jge
jno
inc
add
fdiv
jbe
sub
bound
int3
ins
push
dec
push
add
sbb
pop
mov
stc
add
or
xchg
pop
lock
mov
cmp
sti
jg
test
xchg
xchg
inc
mov
pop
inc
jmp
xor
sub
mov
sahf
sub
adc
std
or
dec
adc
js
outs
mov
movs
cld
dec
sbb
jb
push
sti
outs
mov
rcr
into
mov
mov
add
jle
call
in
or
ss
push
int3
push
or
outs
(bad)
(bad)
(bad)
push
dec
fist
or
cmps
inc
xor
cwde
or
addr16
jg
jg
dec
mov
rol
mov
gs
pop
push
ret
out
out
ffree
ins
cld
out
js
or
sub
retf
xchg
ins
out
or
mov
push
and
sub
cmp
cwde
bound
sub
mov
dec
or
mov
sbb
xchg
test
scas
pop
sub
loopne
jg
inc
std
aaa
cmps
dec
or
xchg
xor
sub
loop
dec
xchg
cld
outs
movs
(bad)
jmp
xchg
stos
fsubr
adc
lods
mov
or
mov
in
test
or
loop
adc
(bad)
mov
jecxz
(bad)
dec
dec
and
stos
(bad)
push
(bad)
iret
les
sub
jmp
jmp
fistp
scas
lahf
push
in
fwait
call
pop
cmps
(bad)
repnz
mov
std
(bad)
push
repnz
xchg
ret
pop
shl
and
sub
jnp
movs
jg
mov
cmp
sbb
inc
mov
stos
(bad)
scas
dec
adc
sub
cmp
shl
mov
shl
inc
pavgb
inc
jb
dec
or
adc
test
popf
js
(bad)
fild
pop
stos
or
mov
bound
cmp
in
or
std
pop
ror
sar
(bad)
(bad)
mov
cli
pop
xchg
mov
adc
fcomp
push
mov
sub
cli
cs
jb
(bad)
dec
push
mov
cmps
push
aad
(bad)
lock
leave
dec
(bad)
pop
and
test
mov
mov
cmps
xor
xchg
inc
call
sar
sub
mov
or
stos
mov
sub
rcl
or
imul
mov
and
jle
inc
(bad)
(bad)
(bad)
call
mov
adc
repz
leave
sbb
xchg
call
inc
sub
je
sbb
call
loopne
push
dec
fdiv
push
sub
cli
pop
xor
mov
pop
mov
stc
aaa
add
(bad)
loop
mov
(bad)
(bad)
(bad)
out
jo
daa
cmp
mov
jmp
cli
dec
sbb
aad
sub
ret
adc
dec
and
neg
fwait
(bad)
mov
retf
mov
or
call
popa
adc
daa
jnp
mov
cli
inc
pop
std
movs
sub
shr
outs
jns
lods
sub
sbb
repnz
(bad)
(bad)
call
scas
test
int
add
add
xchg
iret
imul
mov
or
(bad)
push
sahf
hlt
outs
fdiv
push
mov
cmps
sbb
sub
jg
fmul
adc
in
fst
movs
or
pop
pop
mov
aaa
pop
or
jl
outs
mov
scas
push
push
sub
call
(bad)
push
pushf
out
dec
mov
mov
int3
addr16
je
mov
dec
or
mov
loope
(bad)
(bad)
call
lahf
sub
cmp
or
sub
sbb
mov
inc
push
aad
rcr
adc
imul
sub
(bad)
push
adc
add
dec
cli
xchg
dec
(bad)
jge
cmp
xor
sahf
push
jg
mov
lahf
and
push
add
clc
push
xchg
pop
repz
or
fnstsw
cmp
outs
and
fbstp
test
jle
out
xor
mov
in
repz
(bad)
jmp
dec
xor
or
(bad)
das
jbe
out
retf
mov
inc
stos
cmps
(bad)
das
xor
sub
mov
in
fimul
mov
(bad)
(bad)
jmp
mov
cmp
mov
cs
or
lahf
inc
cdq
pop
jae
mov
jbe
inc
fsubp
(bad)
call
loopne
sub
dec
jg
xor
sbb
loopne
jnp
int
retf
pusha
adc
dec
lods
pop
cs
and
or
cmp
cmps
mov
sub
pop
mov
adc
mov
in
add
scas
sub
mov
(bad)
(bad)
(bad)
sti
test
cs
jmp
(bad)
sub
loop
arpl
and
std
cli
mov
hlt
mov
push
sbb
pusha
ja
clc
fist
dec
cdq
jmp
inc
or
mov
mov
add
call
lock
xlat
sub
add
scas
add
dec
cmps
push
loope
(bad)
(bad)
(bad)
fdivr
je
sub
sbb
imul
scas
push
(bad)
xchg
mov
jo
cmps
dec
jmp
enter
enter
xor
les
clc
cmp
cmps
sub
mov
add
(bad)
jne
(bad)
(bad)
(bad)
(bad)
mov
outs
std
and
sub
jns
nop
cli
xor
aad
mov
out
imul
dec
(bad)
cmp
ins
push
cmps
test
push
bound
dec
lods
call
jb
pop
out
repnz
jg
mov
ror
std
fnstcw
dec
mov
dec
mov
(bad)
fst
dec
call
leave
sbb
(bad)
(bad)
mov
push
cli
mov
pop
mov
adc
frstor
clc
scas
sbb
push
pop
push
cmp
fld
jnp
das
mov
dec
cmp
adc
xor
mov
repz
cli
outs
mul
es
cs
(bad)
adc
jmp
outs
sub
mov
test
loop
(bad)
(bad)
(bad)
jmp
fild
mov
in
cmovge
dec
jmp
popf
sbb
sti
std
mov
(bad)
(bad)
inc
mov
lock
into
push
mov
sub
mov
in
mov
jne
dec
repnz
adc
(bad)
and
cmp
(bad)
(bad)
jns
mov
mov
dec
mov
push
xchg
(bad)
pop
mov
dec
mov
(bad)
(bad)
jg
cmp
cmp
mov
jno
fwait
sub
call
lock
nop
push
or
retf
and
call
mov
push
test
stos
ror
inc
mov
and
int
mov
push
hlt
xchg
fild
xchg
xchg
xchg
xchg
push
fidiv
sub
cld
(bad)
(bad)
(bad)
(bad)
in
mov
fist
jmp
pop
xchg
mov
xchg
in
out
call
inc
sbb
scas
fdivr
les
xchg
jg
and
ror
jbe
fistp
fist
(bad)
(bad)
(bad)
(bad)
fidivr
adc
loope
lock
dec
rcl
popf
push
push
mov
enterw
inc
pop
cmc
outs
movs
outs
in
push
inc
lea
(bad)
addr16
xor
sbb
dec
nop
icebp
nop
jg
retf
mov
sbb
xor
(bad)
mov
fwait
adc
jae
cwde
and
pop
xchg
test
adc
xchg
xchg
test
(bad)
out
cli
and
pop
mov
je
out
inc
sub
int3
adc
repz
fistp
mov
mov
je
fcomp
aam
call
xchg
push
sbb
repnz
dec
ins
iret
mov
xchg
cmc
call
bound
aaa
fwait
sar
sub
push
cs
stos
(bad)
inc
adc
fisttp
pop
push
(bad)
aam
pop
shl
(bad)
(bad)
mov
data16
imul
jns
xor
mov
xchg
stos
loopne
lock
(bad)
call
mov
pop
rcl
add
lods
(bad)
out
sub
ins
movs
jge
pop
cs
mov
aad
xlat
outs
cmps
lock
fistp
pop
lods
or
jnp
pop
or
mov
fidivr
stos
dec
mov
stos
adc
aad
retf
or
xlat
xor
dec
push
jecxz
adc
mov
ficom
push
aad
or
call
xor
icebp
aaa
in
sub
(bad)
call
dec
dec
xor
nop
test
adc
lods
lods
jp
mov
push
stos
outs
jmp
or
std
fld
add
movs
(bad)
(bad)
mov
mov
fistp
loope
or
cmp
(bad)
(bad)
(bad)
fsubr
outs
dec
ret
in
fwait
int3
(bad)
repnz
dec
pop
inc
mov
ja
(bad)
(bad)
(bad)
stc
lods
daa
sub
fbstp
call
or
sub
mov
iret
and
xchg
mov
jbe
(bad)
(bad)
dec
push
out
inc
cmp
pop
test
pop
and
sub
xchg
inc
int
dec
fidivr
(bad)
dec
pop
xor
push
adc
fld
mov
hlt
mov
retf
pop
push
push
xchg
sub
mov
lods
(bad)
(bad)
dec
jo
sbb
neg
cli
(bad)
mov
and
fimul
mov
scas
or
mov
push
push
mov
ds
sub
jmp
dec
lahf
mov
loopne
bound
push
jae
(bad)
(bad)
mov
and
nop
mov
add
inc
jg
rcr
ret
and
adc
sar
(bad)
jmp
pop
mov
or
retf
ret
xor
fistp
add
std
das
test
jmp
or
adc
push
call
std
jnp
hlt
mov
push
fild
xor
(bad)
push
xchg
cmps
sahf
test
add
out
jmp
sub
mov
mov
(bad)
dec
scas
call
mov
mov
ret
pop
add
aaa
test
sub
rcr
cdq
jmp
jmp
adc
mov
mov
dec
clc
(bad)
sahf
leave
jecxz
adc
imul
jg
mov
test
pop
adc
jae
adc
lods
sub
jecxz
(bad)
jg
dec
cmp
add
add
stos
sub
mov
clc
(bad)
mov
retf
in
in
pop
(bad)
and
cs
retf
inc
(bad)
jg
push
call
add
add
lods
and
jmp
xchg
push
cli
(bad)
cli
in
test
retf
or
fs
jmp
scas
setnp
and
lock
icebp
out
test
or
xor
push
mov
(bad)
(bad)
inc
jg
pop
iret
aad
mov
dec
(bad)
dec
mov
mov
out
sbb
sahf
sbb
cld
pop
push
mov
scas
mov
sbb
and
in
jns
sub
cli
cmp
call
(bad)
dec
sub
pop
adc
(bad)
(bad)
push
cld
push
push
push
mov
fistp
(bad)
(bad)
(bad)
dec
mov
mov
xchg
xor
in
inc
aad
loop
dec
arpl
dec
add
icebp
dec
and
iret
enter
cmps
and
test
cmp
(bad)
out
inc
jmp
cmp
cld
pop
mov
(bad)
call
jmp
xchg
adc
xor
je
loope
mov
retf
addr16
or
jp
bound
inc
xchg
or
push
push
scas
mov
jmp
xchg
sub
minps
jne
mov
jbe
not
add
je
or
call
dec
push
and
xor
(bad)
(bad)
inc
and
lahf
push
(bad)
jmp
out
fwait
sbb
enter
cld
pop
mov
cli
jb
xchg
jmp
cs
(bad)
(bad)
(bad)
fistp
es
dec
fdivrp
(bad)
xchg
jne
push
adc
mov
call
pop
cs
mov
fisttp
add
or
inc
xchg
mov
cmp
ds
addr16
sbb
pop
mov
sub
mov
pop
sar
dec
ret
mov
call
cmp
jecxz
or
xadd
jmp
(bad)
(bad)
push
push
mov
sub
mov
cdq
push
cs
pop
pop
add
cmp
push
lods
inc
movs
mov
ffree
pop
iret
cmp
inc
push
int3
cmps
add
mov
push
push
(bad)
inc
in
es
scas
loopne
out
nop
mov
jg
(bad)
dec
xchg
imul
mov
add
mov
add
dec
clc
(bad)
(bad)
call
cmps
xor
stos
sub
mov
aas
scas
test
out
sub
sbb
dec
enter
mov
push
push
cmp
xor
or
(bad)
jmp
xor
cmp
push
dec
sub
daa
and
(bad)
mov
imul
mov
(bad)
iret
test
imul
jp
das
sub
stc
fwait
pushf
pop
es
push
cmp
ret
mov
mov
loopne
jmp
mov
or
add
scas
push
mov
push
adc
jae
movs
loop
add
push
pop
pusha
push
add
sbb
(bad)
out
pop
dec
mov
mov
ins
test
mov
(bad)
popa
scas
push
mov
or
mov
icebp
loopne
enter
jecxz
not
sub
daa
mov
xchg
retf
fld
cmp
ds
mov
jmp
call
jmp
inc
push
pop
repz
ret
cmps
lods
mov
ds
sahf
in
fistp
push
call
ja
jbe
jae
movs
adc
cli
pop
mov
in
(bad)
ficomp
jmp
jge
repnz
pop
sar
std
inc
sub
cmc
cmp
jle
mov
adc
dec
jnp
or
push
stos
fwait
repnz
mov
sub
std
cmp
jo
(bad)
jg
jb
sahf
dec
imul
daa
dec
retf
push
xchg
adc
stos
ss
pop
cs
in
xchg
ins
cld
(bad)
(bad)
jmp
mov
pop
out
mov
ds
dec
test
mov
fcos
push
jg
push
loop
test
imul
(bad)
(bad)
jmp
jmp
mov
mov
and
pusha
(bad)
(bad)
jmp
dec
ss
cmp
lods
sub
in
jmp
mov
jmp
dec
sbb
sbb
cdq
xchg
mov
(bad)
call
jb
out
pop
fdivr
fisub
in
dec
or
sar
jecxz
mov
fld
lods
jmp
(bad)
jmp
rcl
sbb
dec
test
mov
into
test
cmps
scas
adc
add
call
pop
mov
dec
(bad)
(bad)
(bad)
sub
cmps
push
inc
stos
mov
retf
add
mov
scas
in
xchg
out
(bad)
(bad)
jmp
jns
fdiv
fisubr
mov
(bad)
push
jo
mov
mov
mov
cli
mov
test
ror
adc
sub
iret
sub
xor
into
imul
pop
push
cdq
(bad)
(bad)
movs
std
inc
push
(bad)
mov
and
sbb
push
or
jno
(bad)
(bad)
push
lods
jb
dec
mov
(bad)
clc
arpl
sbb
stos
call
call
mov
inc
call
sbb
jp
popf
ror
fsubr
jns
lods
mov
call
jecxz
stos
pop
dec
jmp
loopne
into
mov
mov
sar
pop
and
and
retf
loop
mov
(bad)
retf
icebp
sar
test
cmc
jno
xchg
mov
sbb
mov
lock
shl
xor
push
pushf
sbb
adc
pop
and
jmp
clc
mov
xchg
aam
nop
mov
std
mov
and
sbb
icebp
cmps
ret
bound
scas
ins
push
dec
es
push
fwait
sbb
(bad)
(bad)
in
js
ss
xlat
push
mov
and
repnz
mov
bound
add
add
sub
ret
in
or
(bad)
jmp
call
test
daa
(bad)
cwde
leave
(bad)
(bad)
(bad)
mov
jp
aaa
mov
iret
repnz
mov
or
sub
jo
(bad)
(bad)
jmp
push
popf
pop
(bad)
inc
mov
mov
fwait
arpl
inc
cmc
sub
sbb
lods
adc
(bad)
(bad)
out
(bad)
mov
jp
adc
push
lods
mov
int
in
out
dec
sti
push
cmp
dec
sti
and
mov
movs
cdq
xor
sbb
std
pop
and
imul
dec
ds
cmp
pop
cld
call
cs
or
sub
pop
sub
leave
stos
retf
loopne
repnz
cs
(bad)
(bad)
mov
jmp
call
test
pop
cs
call
pop
pop
cmp
inc
test
out
nop
mov
cmp
pop
dec
test
xor
outs
(bad)
fisttp
(bad)
stc
ins
sbb
jp
push
push
add
sub
mov
ja
dec
fld
push
stos
in
adc
push
dec
mov
push
mov
xlat
mov
sbb
(bad)
(bad)
(bad)
inc
add
sub
rcr
push
in
repnz
push
jge
xor
sub
jmp
push
(bad)
jle
ror
mov
inc
mov
stos
mov
jnp
push
sbb
jmp
jbe
jmp
pop
jp
in
push
sbb
call
mov
js
push
test
push
(bad)
stos
popf
imul
shr
and
movs
(bad)
out
je
retf
daa
imul
lock
into
pop
sbb
(bad)
jmp
inc
sahf
add
or
sub
jge
arpl
xchg
mov
lds
movs
(bad)
mov
sbb
scas
or
(bad)
dec
std
(bad)
dec
mov
cld
mov
lods
cld
sub
cli
cmp
jg
stos
es
sub
(bad)
jmp
(bad)
(bad)
(bad)
mov
jp
enter
adc
imul
imul
mov
mov
call
or
retf
adc
add
mov
std
(bad)
jg
and
mov
enter
call
sbb
push
mov
inc
mov
imul
and
repz
(bad)
push
or
push
pop
dec
cmp
xor
retf
iret
and
push
jmp
or
call
(bad)
call
and
jge
cmps
into
rcl
xor
repnz
out
inc
fdivr
les
cmp
mov
cli
scas
xor
out
out
jle
mov
or
mov
(bad)
(bad)
(bad)
aas
push
jae
dec
pop
push
sbb
mov
add
bound
jns
dec
inc
mov
xchg
xchg
idiv
(bad)
(bad)
inc
dec
ds
add
lahf
cmp
cs
xchg
dec
mov
cli
stos
mov
int
cmc
in
sbb
jbe
mov
and
mov
jg
xchg
sub
fild
mov
sub
mov
loopne
(bad)
(bad)
jmp
jmp
jne
std
mov
push
xor
inc
or
iret
cmp
sbb
aas
sub
std
std
(bad)
(bad)
inc
dec
push
cs
je
int
mov
ins
sub
jmp
pop
daa
(bad)
jg
dec
push
jle
cwde
pop
cmps
aaa
retf
jb
dec
(bad)
sub
mov
(bad)
in
pop
mov
push
call
addr16
xor
inc
inc
(bad)
xor
iret
cmps
jno
cs
sbb
push
cmp
(bad)
(bad)
call
repz
bound
xor
dec
neg
mov
scas
js
mov
bound
(bad)
fsubr
stos
scas
int
push
nop
scas
in
int3
or
sub
pop
hlt
stos
push
loopne
or
mov
sbb
mov
lods
aaa
and
int
xor
in
ins
(bad)
adc
jg
imul
retf
push
or
clc
mov
hlt
add
sub
call
sub
scas
inc
enter
es
(bad)
and
sbb
scas
test
dec
push
ins
mov
mov
mov
mov
mov
jmp
hlt
cmc
(bad)
(bad)
call
sub
sub
add
add
cmc
add
adc
cmps
(bad)
mov
loop
sbb
fmul
xchg
rcl
ret
pop
stos
add
sbb
and
xchg
cmp
outs
jns
mov
leave
(bad)
(bad)
(bad)
jmp
adc
fimul
into
das
in
js
xor
xchg
je
and
std
retf
and
mov
enter
jg
sbb
xor
fstp
inc
aaa
ret
out
dec
inc
push
loope
cmc
(bad)
(bad)
jmp
mov
mov
shl
adc
mov
fild
jle
cmps
or
idiv
enter
rcr
retf
push
bound
lods
test
je
or
xor
(bad)
cmp
jmp
je
jmp
movs
mov
(bad)
pop
leave
test
jo
jp
xchg
addr16
mov
ror
(bad)
(bad)
(bad)
inc
ret
xor
js
cdq
mov
xor
fisttp
(bad)
dec
push
inc
fucomi
shl
push
mov
cmp
(bad)
(bad)
(bad)
dec
xor
cld
mov
xchg
inc
pusha
sbb
jns
or
(bad)
call
retf
out
sub
in
xchg
dec
mov
mov
or
ja
(bad)
(bad)
jmp
(bad)
and
sar
jno
or
nop
xlat
add
jae
cmps
sbb
(bad)
jmp
xor
sub
fst
sahf
ds
std
gs
lahf
inc
pusha
test
cmps
cdq
dec
(bad)
(bad)
(bad)
jmp
fidivr
add
mov
ret
cdq
push
xchg
mov
mov
mov
(bad)
(bad)
call
outs
fs
mov
pop
jne
out
loop
fwait
dec
aam
or
(bad)
(bad)
push
or
mov
in
xor
jne
in
cmp
or
mov
(bad)
mov
das
adc
loop
call
push
in
clc
dec
push
cmp
iret
call
mov
mov
xor
(bad)
(bad)
jmp
push
retf
dec
inc
push
lahf
iret
(bad)
mov
fstp
fild
lock
outs
outs
test
mov
es
inc
outs
adc
call
scas
xchg
pop
and
fnstsw
leave
and
mov
cs
std
(bad)
(bad)
mov
or
std
clc
cdq
mov
shr
loope
ja
mov
test
mov
xor
cmp
or
mov
and
add
(bad)
(bad)
(bad)
call
aam
mov
(bad)
outs
and
ror
pop
addr16
dec
cmc
mov
out
jge
sti
mov
(bad)
(bad)
jmp
and
(bad)
mov
mov
adc
mov
pop
loope
push
inc
js
pop
rcr
mov
mov
es
icebp
jecxz
cmc
push
cmps
dec
xchg
ins
repnz
mov
in
adc
cmp
sub
xor
repnz
jo
xchg
(bad)
inc
pusha
cmp
loope
fwait
or
add
pop
xchg
dec
clc
(bad)
sbb
jle
(bad)
out
into
add
mov
cs
(bad)
jmp
and
cwde
jae
aam
fdivr
je
pusha
loopne
dec
cs
sar
(bad)
call
mov
imul
mov
pusha
sar
clc
(bad)
jg
pop
dec
sub
mov
jg
dec
(bad)
cwde
pop
add
jmp
xchg
call
int3
mov
add
pop
inc
(bad)
cmps
ror
jae
into
mov
(bad)
call
sub
jne
ror
out
cdq
pop
leave
imul
(bad)
fild
push
icebp
loopne
call
dec
pop
cs
jmp
(bad)
(bad)
inc
push
sub
ins
in
call
dec
imul
popa
inc
(bad)
call
xchg
or
repnz
mov
mov
fbstp
pop
mov
outs
mov
inc
test
push
(bad)
(bad)
(bad)
dec
adc
ret
lds
adc
push
dec
jmp
cmp
sub
(bad)
(bad)
(bad)
inc
iret
stos
and
add
sbb
lock
cmps
pushf
nop
sbb
xchg
mov
lods
sub
push
in
call
in
mov
addr16
sahf
es
loop
sbb
sub
ror
stos
fstp
xchg
sub
jp
retf
sub
cmps
sub
std
dec
or
mov
xor
push
mov
(bad)
call
mov
cmps
cmps
xchg
call
(bad)
std
(bad)
mov
dec
sub
mov
ror
mov
int3
repz
(bad)
jg
sub
leave
test
popa
nop
das
stos
jnp
xchg
add
or
or
mov
jns
and
outs
(bad)
mov
add
cmps
or
cs
(bad)
sub
push
inc
push
(bad)
inc
ds
(bad)
jmp
mov
cmps
inc
sbb
outs
std
mov
jns
pop
loope
test
aaa
cld
or
push
and
movs
test
loopne
sar
(bad)
fisttp
out
stc
ret
mov
xlat
in
or
add
outs
xor
sbb
adc
nop
sar
inc
or
(bad)
sub
out
jmp
cmp
out
in
movs
mov
xchg
sub
pop
cmps
(bad)
ror
mov
sub
loopne
mov
mov
retf
(bad)
call
into
sub
bound
xchg
js
sub
xchg
and
daa
push
pop
xlat
push
cmps
jo
pusha
(bad)
(bad)
(bad)
(bad)
jmp
daa
lock
ins
in
mov
outs
dec
mov
mov
add
xor
mov
(bad)
(bad)
(bad)
fdiv
mov
push
xchg
push
iret
fstp
(bad)
or
add
(bad)
jmp
call
mov
xchg
mov
sbb
mov
mov
lods
in
out
clc
ffreep
pop
xchg
jb
sbb
call
and
(bad)
lds
jo
mov
mov
fdivr
mov
enter
test
cli
push
and
inc
scas
jmp
imul
mov
and
jb
sbb
inc
call
loopne
inc
sbb
jge
test
inc
leave
mov
jg
sub
adc
push
sub
cmp
fwait
(bad)
dec
lock
sbb
mov
pop
and
test
mov
xchg
push
inc
test
inc
mov
push
pop
jno
call
mov
enter
in
fsubp
mov
test
test
jnp
(bad)
(bad)
inc
fdivr
dec
adc
mov
scas
push
push
and
fwait
or
or
add
call
or
arpl
je
xchg
sub
add
pop
mov
lods
sbb
fcmovu
retf
lods
adc
test
dec
sti
mov
sub
sub
dec
fcmove
arpl
sahf
lea
outs
or
cli
(bad)
(bad)
(bad)
inc
and
cli
jge
sub
pop
and
jp
jmp
lods
jmp
xor
mov
(bad)
icebp
cmps
jmp
ins
(bad)
cli
scas
xchg
dec
xor
(bad)
(bad)
jnp
sti
dec
or
inc
dec
mov
ins
or
outs
cli
in
dec
sub
cmp
adc
call
xor
pushf
aaa
xor
movs
out
fist
add
nop
int3
sub
jp
cmp
movs
and
(bad)
push
mov
mov
sub
(bad)
push
(bad)
mov
sbb
icebp
test
iret
mov
fdiv
leave
mov
fbld
cwde
pop
call
jp
scas
cmp
movs
cmps
mov
std
push
sub
sbb
mov
pop
es
(bad)
(bad)
jg
dec
dec
xor
push
mov
mov
xor
mov
loope
in
cli
jp
(bad)
jb
call
xchg
and
sar
mov
pushf
retf
movs
push
sub
cmp
test
nop
xor
sub
pop
xlat
leave
mov
int
xchg
(bad)
(bad)
jmp
jl
cmps
dec
lods
pop
pop
jl
repz
mov
cmp
es
dec
std
mov
push
dec
mov
arpl
mov
(bad)
jg
inc
mov
ds
loopne
push
ret
sub
jg
or
xchg
lock
mov
icebp
stc
add
sbb
dec
and
ret
adc
cwde
cld
lea
push
cmps
jmp
int
and
(bad)
inc
call
iret
scas
cld
sti
mov
pop
in
stos
aaa
mov
mov
or
int
sbb
out
int
mov
sub
fild
movs
or
(bad)
push
adc
mov
bound
cld
xchg
mov
xlat
jle
adc
or
add
(bad)
(bad)
inc
loop
cmps
test
push
mov
movs
push
jmp
daa
dec
pop
mov
(bad)
call
cs
ret
fisttp
inc
mov
sbb
and
ret
mov
mov
outs
adc
loop
xchg
xchg
cmc
cmp
(bad)
push
and
mov
pop
test
cmp
xor
test
je
push
mov
(bad)
(bad)
inc
sub
stos
push
stos
ret
mov
rcr
cli
xchg
xchg
dec
xchg
add
dec
out
xchg
cmp
jmp
push
cmp
mov
sbb
lgs
(bad)
jmp
fyl2xp1
loop
call
loope
pop
jle
sti
mov
fmul
adc
mov
(bad)
(bad)
mov
lods
out
xor
mov
dec
mov
cli
mov
(bad)
mov
aaa
or
das
inc
adc
mov
aas
mov
pop
mov
cli
push
adc
sti
call
sub
push
shl
sub
(bad)
jg
mov
mov
ret
jno
ss
mov
mov
stos
jbe
inc
add
stos
cmp
rol
dec
pop
ds
jb
pop
cmc
jg
push
jmp
(bad)
int
(bad)
aaa
sub
shl
(bad)
(bad)
jmp
sbb
mov
lea
add
stos
dec
cs
mov
cmp
mov
jmp
int
clc
loopne
jp
ds
out
push
pop
and
jecxz
sub
aam
call
jp
add
cli
or
adc
mov
pusha
movs
cld
push
fistp
dec
cmps
push
mov
(bad)
jmp
sar
or
ds
enter
or
repnz
call
icebp
jmp
sbb
not
fld
(bad)
dec
jecxz
xchg
jno
test
(bad)
(bad)
(bad)
mov
repnz
ins
add
cmp
jnp
fcomp
and
inc
xlat
ror
sbb
(bad)
(bad)
(bad)
call
or
or
jns
cli
add
add
sahf
xor
and
ret
mov
rol
pop
adc
lahf
mov
ins
sub
pop
fisttp
ss
das
mov
add
cld
addr16
psubd
mov
das
adc
test
jp
xchg
push
pop
push
jnp
pop
hlt
dec
pop
popa
or
call
jbe
mov
sub
adc
jg
fidivr
push
lods
call
mov
out
gs
dec
sub
dec
(bad)
(bad)
(bad)
call
out
mov
push
test
push
call
jge
add
mov
push
push
xchg
adc
sti
push
shr
dec
rol
mov
bound
scas
mov
lods
scas
test
(bad)
jg
imul
movs
adc
(bad)
(bad)
call
dec
mov
call
push
movs
pop
cmps
mov
sub
loop
test
das
(bad)
(bad)
(bad)
call
fist
shr
pop
add
sbb
xchg
jae
retf
sbb
sub
pop
mov
jo
ja
cmp
add
mov
cmp
mov
fnstsw
and
pop
(bad)
(bad)
push
mov
(bad)
jns
iret
and
das
push
loope
jne
or
in
cwde
adc
in
rcr
(bad)
jmp
movs
dec
pop
ror
imul
js
mov
sbb
mov
(bad)
(bad)
(bad)
jmp
adc
or
mov
stos
jne
and
mov
je
jl
mov
in
mov
jmp
mov
data16
mov
arpl
(bad)
(bad)
jg
addr16
scas
cs
das
jae
outs
outs
scas
out
sub
mov
mov
jmp
js
and
ucomiss
pop
loop
xchg
aad
cmp
and
call
mov
into
into
nop
ret
mov
adc
add
dec
retf
ss
jle
hlt
mov
mov
push
mov
(bad)
fistp
sar
mov
and
into
mov
retf
ret
stos
or
lock
cmps
adc
call
cli
add
push
mov
jge
(bad)
(bad)
jmp
sar
enter
and
int
add
sub
sub
(bad)
(bad)
(bad)
push
sbb
or
pusha
andnps
das
push
push
addr16
mov
(bad)
mov
sahf
fs
xchg
repnz
iret
adc
cmp
(bad)
(bad)
cmp
(bad)
retf
(bad)
enter
mov
push
inc
mov
and
mov
fwait
inc
xchg
jmp
inc
pusha
xchg
inc
mov
add
loope
loope
fisttp
(bad)
mov
mov
js
adc
imul
in
mov
cmp
cmp
jmp
into
pop
jmp
popa
jns
popf
clc
push
enter
cmp
mov
cmp
stos
(bad)
mov
movs
cld
jle
xchg
and
pusha
dec
retf
cmps
sub
sub
test
jne
pop
mov
pop
leave
adc
add
sar
jmp
call
sbb
push
pop
dec
cli
pop
adc
(bad)
xchg
scas
and
push
fbstp
cmp
addr16
in
mov
sbb
(bad)
(bad)
(bad)
dec
mov
jb
push
fistp
loope
mov
inc
outs
repnz
mov
pop
inc
jo
pop
(bad)
jmp
lahf
jge
jmp
sub
(bad)
(bad)
fisttp
fistp
sbb
push
mov
add
jbe
jmp
cmp
ret
retf
mov
inc
inc
scas
stos
inc
ret
jmp
dec
stc
add
lahf
xchg
call
and
sbb
or
mov
fbld
push
inc
push
popa
pop
ja
xchg
mov
push
cmp
outs
arpl
(bad)
(bad)
(bad)
cld
sti
mov
mov
fmul
mov
data16
push
fistp
sub
inc
jno
mov
call
icebp
or
sbb
(bad)
fistp
jecxz
sbb
add
pop
inc
push
call
lods
inc
push
xor
int
add
fild
jecxz
into
or
pop
std
cmp
(bad)
(bad)
jmp
push
in
dec
cmp
cmp
adc
cmp
push
or
add
mov
dec
push
ja
push
xor
and
ins
fiadd
int
mov
enter
(bad)
jmp
fisub
retf
and
inc
jb
mov
dec
aad
stos
push
ja
or
(bad)
inc
outs
fs
sahf
mov
jp
cwde
ret
std
push
or
add
(bad)
cli
ins
rol
or
dec
lods
gs
and
cli
mov
pop
pusha
mov
(bad)
(bad)
dec
jmp
(bad)
cmps
pop
mov
push
mov
mov
mov
fbstp
scas
inc
pop
movs
mov
(bad)
(bad)
jg
out
cs
retf
jl
pop
xabort
cmps
(bad)
out
pop
or
(bad)
jl
add
pop
stc
adc
hlt
or
or
dec
pop
xchg
call
and
or
mov
sub
push
adc
(bad)
(bad)
(bad)
jg
ds
cmp
pop
out
fs
jp
lods
(bad)
(bad)
sbb
mov
push
push
dec
fistp
mov
mov
pusha
arpl
test
jl
js
lods
or
push
out
aas
js
push
dec
(bad)
(bad)
(bad)
jmp
push
stc
movs
ret
mov
int
pushf
inc
out
imul
in
(bad)
and
or
aam
jle
xlat
out
inc
jmp
sub
retf
ds
shl
stos
les
(bad)
jmp
ss
retf
outs
xchg
ja
mov
in
(bad)
(bad)
jg
inc
movs
aam
test
adc
cli
push
cdq
imul
sub
sbb
xchg
jecxz
push
ins
pop
lods
xchg
xor
(bad)
push
cs
xor
jle
(bad)
call
stos
pop
mov
mul
shl
inc
mov
cdq
pop
pop
test
and
pushf
scas
inc
cld
dec
outs
mov
sub
sub
or
stos
jno
(bad)
(bad)
aas
mov
mov
(bad)
pop
mov
sbb
xlat
mov
imul
push
clc
call
pop
cmps
ja
lods
stc
jnp
push
xor
(bad)
(bad)
call
cmps
call
ds
inc
and
call
dec
test
jp
std
sub
or
push
push
sub
dec
adc
or
(bad)
(bad)
jmp
(bad)
out
stos
push
ds
xor
dec
scas
cmp
cli
add
cmp
js
popa
daa
ins
std
dec
xor
xchg
lock
ja
(bad)
jmp
jle
imul
in
imul
adc
jmp
test
(bad)
(bad)
in
cmp
(bad)
mov
mov
fnstcw
shr
sar
push
das
add
adc
sub
push
lods
inc
cmp
jmp
(bad)
ffree
(bad)
jg
push
pop
push
sub
fs
retf
mov
mov
je
hlt
fbld
pop
loop
mov
xor
pop
sub
or
fwait
inc
(bad)
(bad)
call
mov
in
mov
push
mov
movs
dec
sar
imul
scas
(bad)
(bad)
(bad)
dec
sbb
stos
sub
add
test
inc
in
xchg
shr
push
ror
pop
aad
sti
stos
mov
retf
adc
xor
bound
sbb
xchg
jmp
fcom
(bad)
dec
mov
(bad)
or
in
and
mov
pop
aas
pop
inc
out
test
(bad)
jmp
pop
push
shr
cdq
sub
or
iret
sbb
sub
and
mov
int
ret
xor
test
xor
jb
retf
pop
fs
adc
sar
mov
jmp
sub
xchg
lods
inc
xchg
daa
retf
jmp
(bad)
(bad)
(bad)
call
fs
sub
stos
shr
sub
and
jmp
ins
stc
ins
jmp
push
push
test
out
fldenv
mov
sbb
cmp
mov
sbb
xor
(bad)
fcomip
pop
sar
outs
push
pop
clc
(bad)
xor
mov
stos
or
add
dec
(bad)
jp
test
push
cmc
popf
les
das
mov
push
or
(bad)
movs
mov
push
retf
retf
mov
dec
push
xchg
mov
sub
add
punpckhwd
std
(bad)
lock
sub
mov
add
stos
leave
(bad)
push
(bad)
sub
scas
mov
and
stos
inc
daa
outs
leave
dec
cli
vmovaps
or
cdq
iret
sub
sub
lahf
mov
cmp
loope
(bad)
mov
mov
mov
mov
xor
inc
inc
add
fnstcw
loopne
call
pop
lock
fwait
and
mov
das
push
mov
test
xchg
pop
or
ret
stos
in
lds
add
push
test
(bad)
(bad)
(bad)
mov
lea
repz
cdq
outs
mov
dec
(bad)
jo
mov
mov
movs
pop
(bad)
mov
scas
nop
mov
dec
test
repnz
mov
jg
mov
adc
mov
frstor
jle
clc
dec
mov
fdivrp
mov
fsubr
mov
sbb
ror
mov
or
mov
ja
cli
jmp
sub
and
(bad)
mov
push
(bad)
(bad)
(bad)
dec
pusha
pop
and
xor
in
enter
sbb
inc
cmp
fild
jb
scas
in
mov
fsqrt
jmp
xor
outs
sbb
or
jmp
jmp
mov
sub
lods
lock
jp
(bad)
(bad)
jg
xor
sbb
pop
rcl
cmp
std
cs
adc
jb
mov
mov
(bad)
(bad)
jg
xor
pop
ins
test
adc
sbb
aad
push
loope
jnp
std
dec
cmp
(bad)
call
(bad)
call
mov
pusha
in
cmps
push
or
(bad)
jmp
mov
xchg
addr16
jecxz
jne
mov
mov
(bad)
mov
dec
inc
or
jmp
sbb
lock
jg
sub
xchg
jb
mov
sbb
add
(bad)
jp
imul
inc
(bad)
(bad)
dec
loop
aaa
in
inc
fmul
sbb
mov
pop
fld
cdq
rcr
mov
movs
mov
daa
sbb
(bad)
(bad)
mov
adc
cmp
popa
xchg
fstp
sub
adc
ss
mov
mov
fild
iret
test
add
pop
dec
shl
dec
retf
cmp
sub
or
sub
clc
(bad)
mov
setne
stos
cwde
mov
out
or
mov
(bad)
(bad)
(bad)
dec
jp
cmps
fwait
mov
push
cli
pop
and
out
test
jnp
clc
jg
xor
cld
(bad)
fild
mov
outs
adc
mov
xchg
sub
inc
jecxz
mul
lock
pop
push
movs
push
pushf
cli
mov
imul
out
xchg
pop
mov
cli
push
pop
pop
pop
data16
jecxz
pop
mov
loop
adc
fwait
(bad)
jmp
dec
loop
les
out
cs
jmp
fisttp
std
push
mov
fisubr
sbb
call
stos
(bad)
mov
adc
inc
aas
sbb
pop
hlt
(bad)
jmp
imul
mov
cli
xchg
iret
mov
cmps
das
cli
jmp
push
mov
pop
ins
enter
and
add
das
nop
test
jl
pushf
push
push
mov
bound
in
mov
pop
mov
in
fisub
out
pop
ret
shr
sub
sbb
cmp
repnz
add
call
mov
xor
sub
std
call
fcmovnu
cmp
jno
scas
xor
outs
into
outs
sub
loopne
sub
in
rol
xchg
or
sbb
inc
fbstp
and
sub
std
(bad)
jg
push
pusha
dec
lahf
lods
addr16
pop
aam
mov
sub
inc
pop
xchg
mov
inc
jp
push
push
or
outs
xchg
sbb
out
or
cmps
lea
inc
push
fcom
ror
fs
sub
mov
enter
push
clc
dec
out
pusha
inc
into
das
outs
call
stos
ret
(bad)
jmp
lods
retf
push
dec
mov
loop
outs
outs
imul
loop
mov
push
mov
mov
neg
xchg
dec
push
mov
imul
cmp
dec
hlt
pop
(bad)
push
ret
stos
pop
sub
(bad)
out
mov
mov
sbb
inc
mov
sub
pop
in
pop
retf
in
loope
lds
mov
xchg
push
out
fwait
sub
push
call
mov
lods
push
loop
fbstp
push
add
add
cmp
push
mov
inc
dec
call
jno
cmp
test
mov
xor
push
cmps
xor
test
icebp
(bad)
fistp
loopne
and
sahf
pop
lods
outs
fistp
(bad)
jmp
jmp
xchg
cli
mov
repnz
test
jnp
inc
sar
call
rcr
sub
pop
movs
xor
inc
cmp
xchg
enter
cmp
mov
mov
inc
pop
dec
in
fwait
movs
pop
out
and
dec
int
mov
js
push
push
dec
push
(bad)
mov
sbb
pop
ins
push
adc
int
hlt
xchg
fisub
test
pushf
(bad)
mov
xchg
sub
pop
cmp
cwde
mov
dec
ins
shr
loopne
gs
jb
sub
and
(bad)
(bad)
jg
retf
leave
shl
jnp
out
ins
jmp
dec
loope
mov
sar
stos
pop
fs
push
xchg
sbb
sbb
inc
mov
mov
jmp
outs
dec
or
repnz
test
push
rcl
daa
mov
(bad)
(bad)
call
dec
mov
mov
jnp
mov
fldenv
out
retf
imul
cmp
(bad)
(bad)
push
pop
push
scas
adc
dec
ret
rcr
mov
mov
nop
test
adc
pop
(bad)
fs
sar
fcom
sub
sti
call
and
cmp
mov
mov
sub
test
in
loop
(bad)
jmp
mov
dec
nop
cmc
inc
test
jbe
js
nop
or
xchg
adc
(bad)
(bad)
cld
shl
fist
jmp
xor
imul
cmp
test
cdq
daa
loopne
and
(bad)
call
mov
and
in
add
fnstsw
lahf
sub
cmps
es
(bad)
(bad)
call
mov
fstp
sub
jp
jb
jge
icebp
mov
jb
(bad)
(bad)
call
jo
lock
xor
jmp
sbb
movs
or
cmp
(bad)
(bad)
mov
cmp
push
fucomip
jmp
dec
lds
inc
sub
push
cdq
lds
push
dec
shl
jns
in
xchg
inc
or
(bad)
(bad)
(bad)
jmp
sbb
int
sub
mov
jnp
add
sahf
lahf
mov
jmp
jo
outs
lods
xlat
pop
xchg
mov
mov
sub
jae
xchg
clc
pop
inc
call
push
dec
gs
out
scas
pop
add
lods
lahf
or
or
jb
cld
(bad)
call
push
lahf
js
xor
xchg
mov
not
inc
movs
pop
cmc
jg
sbb
dec
dec
loopne
imul
xor
mov
stos
jb
icebp
fcomip
mul
lods
dec
mov
inc
(bad)
(bad)
inc
mov
jmp
iret
jmp
inc
mov
mov
sbb
add
and
push
call
jmp
(bad)
cli
pop
mov
push
popa
mov
push
sub
jge
mov
xor
lea
test
xor
(bad)
(bad)
call
cs
clc
int3
sbb
xor
sti
push
dec
cmp
dec
test
icebp
sub
and
mov
lds
sbb
fisubr
push
dec
(bad)
(bad)
jmp
mov
es
sbb
pop
aad
cmc
mov
jmp
(bad)
dec
push
call
inc
int3
mov
retf
dec
or
pop
mov
movs
cmp
outs
(bad)
mov
popf
or
shr
mov
mov
mov
mov
outs
jmp
mov
inc
and
and
pop
cmp
sbb
mov
retf
retf
xor
stos
das
and
xchg
and
push
test
dec
and
scas
jmp
xor
repnz
daa
push
test
test
and
or
scas
push
enter
add
dec
push
mov
int
mov
fcmovnu
sub
cwde
and
les
out
sar
(bad)
jg
add
push
pop
mov
ret
cli
clc
ret
(bad)
cmps
lahf
mov
out
movs
bswap
add
xor
mov
call
(bad)
retf
out
loopne
lahf
stos
into
fwait
retf
ret
mov
fwait
aam
or
in
jl
sub
jl
cmp
adc
les
mov
int
out
out
push
xchg
scas
cmp
(bad)
(bad)
(bad)
(bad)
std
clc
push
fild
je
mov
mov
dec
jae
leave
xchg
xchg
or
dec
std
fistp
cmps
scas
movs
jmp
pusha
pop
sub
hlt
(bad)
(bad)
(bad)
jg
push
dec
sub
fwait
(bad)
cmp
jge
and
cmp
pop
mov
push
xchg
jle
(bad)
(bad)
(bad)
(bad)
mov
in
movs
xchg
outs
pop
lods
sub
jle
push
sbb
and
fdiv
jle
aaa
ret
cwde
push
xchg
or
es
(bad)
(bad)
cmp
mov
sbb
cwde
pusha
mov
mov
push
push
pop
add
adc
add
mov
dec
push
shr
mov
vhsubps
push
jae
into
(bad)
sub
(bad)
call
retf
xor
enter
in
pop
arpl
pop
ret
pop
into
movs
mov
jp
sub
(bad)
(bad)
(bad)
jge
pop
ret
xchg
daa
pop
cmp
sub
jg
pop
sahf
sub
adc
jmp
mov
icebp
dec
xor
and
sub
bound
pop
fs
movs
add
(bad)
(bad)
(bad)
inc
sbb
mov
into
call
ret
xor
dec
test
lods
fidiv
test
sub
sbb
jg
or
in
sub
(bad)
ret
or
adc
cmps
out
(bad)
(bad)
jmp
cmp
arpl
xchg
cdq
mov
cmp
fwait
pop
sub
ins
les
into
(bad)
mov
scas
jmp
stos
and
cmp
out
call
(bad)
jmp
and
shl
sbb
sbb
xlat
push
mov
mov
movs
pop
sahf
retf
aaa
sub
sub
add
xchg
add
(bad)
and
mov
mov
jne
stos
bound
jmp
clc
rol
mov
jo
inc
ds
mov
movs
mov
call
rcl
or
dec
test
adc
pusha
xchg
jb
dec
dec
cli
xchg
or
adc
xor
cmc
rep
(bad)
(bad)
jmp
cmps
jo
or
and
rcl
push
or
hlt
lods
cmp
push
in
sti
cmp
(bad)
jmp
mov
dec
push
lock
mov
pusha
and
adc
cmc
dec
cmp
jns
mov
xlat
cwde
(bad)
(bad)
call
dec
in
sub
sub
or
sbb
sar
jmp
lods
pop
sub
shr
pushf
push
jle
hlt
mov
mov
jae
adc
jae
xchg
dec
or
pushf
loop
cmp
sbb
ret
(bad)
(bad)
(bad)
push
mov
mov
clc
lahf
push
ret
(bad)
cmc
xchg
lahf
push
sbb
push
dec
jmp
pop
popa
std
fisttp
hlt
mov
std
ficomp
mov
mov
mov
mov
fbld
enter
cmp
mov
out
es
or
and
mov
or
jle
push
clc
mov
test
(bad)
adc
jmp
dec
cmp
outs
fstp
mov
xchg
imul
pop
xchg
movs
jne
mov
(bad)
(bad)
(bad)
(bad)
fadd
xchg
scas
xchg
dec
aas
retf
add
push
mov
xchg
push
iret
loopne
inc
cld
(bad)
jmp
push
mov
loop
clc
or
mov
loope
mov
fdivr
sub
adc
sahf
pop
call
pop
shl
fidiv
out
(bad)
int3
lods
sahf
iret
adc
and
push
clc
repz
pop
mov
sub
jmp
(bad)
(bad)
dec
mov
pop
loopne
cs
fwait
xchg
std
retf
dec
push
cmp
jmp
jmp
out
jmp
mov
mov
lahf
gs
stc
scas
repz
add
scas
and
stos
dec
xor
add
xchg
push
push
std
(bad)
dec
or
std
arpl
push
inc
pop
shl
adc
int3
les
(bad)
hlt
pop
mov
test
clc
or
jle
lods
xchg
imul
jmp
movs
je
pop
ds
xor
stos
or
call
fild
js
das
movs
jecxz
ret
(bad)
jge
push
or
cmps
stos
rcr
(bad)
push
push
sbb
pusha
xchg
mov
sub
loop
mov
push
push
dec
mov
in
(bad)
sub
fwait
ins
leave
or
jnp
clc
sbb
(bad)
(bad)
call
out
jb
fisubr
retf
jle
repnz
cmp
stos
arpl
(bad)
call
mov
sub
mov
sub
jo
add
test
imul
mov
out
xchg
sub
dec
xchg
dec
ins
ins
push
mov
mov
in
rcr
dec
cmp
fcomp
sub
retf
pop
out
cli
(bad)
jmp
and
(bad)
fdivr
popa
fistp
mov
mov
pop
(bad)
mov
and
xlat
dec
scas
dec
mov
outs
and
push
(bad)
stc
in
mov
adc
or
(bad)
cmp
ins
and
or
push
mov
lods
and
jbe
or
popf
mov
xchg
sar
push
cmp
das
pop
push
ins
jge
(bad)
inc
pop
pop
push
mov
push
data16
stos
jg
(bad)
icebp
es
ins
adc
call
cmp
in
enter
cmp
ja
mov
cmp
and
out
pop
push
retf
clc
xchg
cdq
mov
jg
jge
xchg
mov
ja
dec
nop
jge
xlat
int
sub
xlat
or
fwait
into
das
pushf
nop
mov
push
(bad)
loope
dec
sar
or
test
xor
mov
pop
scas
push
jmp
dec
inc
and
mov
or
scas
pop
idiv
cmp
mov
cmps
inc
ss
shl
hlt
inc
adc
cli
push
pop
mov
adc
mov
push
sub
test
or
call
mov
dec
(bad)
ins
pshufw
sub
retf
dec
iret
or
xor
cmp
and
inc
jecxz
test
loop
cli
(bad)
call
ror
fisttp
test
inc
mov
cli
jmp
aam
inc
jbe
out
pop
test
sar
xchg
call
inc
xor
movs
jmp
pop
ins
ss
adc
jmp
sub
mov
pop
push
push
pop
mov
pushf
stos
ret
std
call
enter
mov
dec
xchg
(bad)
jmp
fbld
ret
jnp
movs
fisub
push
mov
push
and
gs
add
les
push
adc
pop
dec
xchg
sbb
push
call
pop
ret
(bad)
call
pop
sub
je
repnz
ret
das
jmp
rcr
out
call
sbb
jmp
sub
repnz
fcmovnbe
scas
out
xchg
xchg
push
and
sub
inc
test
aas
nop
pop
jmp
and
jae
sub
mov
sub
dec
int3
aaa
pop
jp
dec
xor
xor
jg
xor
sub
sahf
sahf
cwde
cmp
js
call
xor
test
mov
std
and
sub
in
movs
jmp
sbb
sbb
mov
dec
icebp
mov
aaa
cs
repnz
(bad)
(bad)
push
rol
data16
retf
push
pop
(bad)
cmp
inc
repz
pop
jb
add
fadd
sub
xor
adc
jl
ret
lahf
iret
jb
sbb
push
jns
ret
sub
push
sar
push
inc
fisubr
fisubr
add
cli
push
push
mov
ret
jb
and
sub
sar
xchg
dec
sbb
cli
mov
or
(bad)
(bad)
(bad)
cmp
shl
jns
sti
mov
lahf
or
stc
sbb
jmp
stos
(bad)
adc
ds
sti
inc
xor
jno
cmp
or
and
and
enter
adc
cmps
sbb
in
stos
mov
test
lock
push
ds
(bad)
mov
(bad)
(bad)
(bad)
mov
push
jle
mov
in
mov
enter
icebp
fdivr
adc
arpl
sar
jmp
int
lods
fs
xor
xor
mov
fst
xor
mov
cmp
add
daa
pop
jmp
ja
(bad)
dec
dec
lsl
jnp
lahf
shr
enter
or
call
xchg
repnz
outs
sqrtps
mov
or
aad
pop
xor
inc
(bad)
sbb
mov
mov
push
mov
pop
loope
mov
mov
clc
mov
adc
sahf
data16
ins
call
(bad)
(bad)
(bad)
(bad)
jl
pop
test
push
icebp
adc
cli
pop
mov
dec
xchg
pop
mov
sbb
adc
add
inc
aad
inc
dec
stos
cs
inc
fcmove
sbb
pop
pop
cmp
push
cld
cwde
pop
ins
cmc
stos
dec
fdiv
cmps
in
mov
push
(bad)
out
mov
pop
das
push
inc
mov
lock
inc
(bad)
and
(bad)
cli
loope
gs
mov
stc
dec
jl
call
cmps
xor
repnz
retf
outs
jae
(bad)
(bad)
jmp
jecxz
ficom
dec
in
mov
mov
loope
jmp
out
sar
adc
(bad)
mov
sbb
dec
sbb
xchg
std
adc
jae
push
mov
xor
dec
test
pushf
(bad)
shr
and
cmps
loopne
mov
push
mov
xor
repz
jo
adc
xchg
(bad)
(bad)
(bad)
jmp
lahf
out
mov
mov
(bad)
xchg
cmps
icebp
push
retf
pop
lahf
sub
mov
movs
mov
jmp
jbe
sahf
test
aas
xchg
lahf
adc
pusha
push
push
ret
lock
pop
mov
outs
fucomip
mov
(bad)
fcomip
adc
adc
push
and
xlat
stos
imul
mov
test
(bad)
call
stc
jg
iret
or
pop
jmp
jmp
das
sub
inc
push
(bad)
arpl
or
xchg
(bad)
(bad)
call
push
(bad)
test
xchg
punpcklbw
adc
xlat
dec
push
xor
(bad)
(bad)
ds
fld
es
pop
movs
loop
sbb
mov
inc
mov
movs
sub
ins
dec
cmp
jmp
(bad)
(bad)
jmp
push
test
dec
mov
jns
repz
fbstp
mov
adc
jmp
das
adc
pop
je
sub
mov
pop
jbe
cmc
fcomip
imul
je
imul
out
push
cmp
jmp
sub
out
push
cs
call
adc
fnstcw
ret
outs
movs
lock
xchg
pop
cwde
in
pusha
sar
jmp
push
out
cli
(bad)
inc
pop
rcl
or
xchg
mov
jge
push
stos
mov
js
push
(bad)
(bad)
call
aaa
mov
dec
mov
pop
dec
loop
ret
rcr
cli
call
test
in
mov
mov
pushf
(bad)
(bad)
(bad)
(bad)
stc
in
in
cmps
mov
cmp
cmps
sub
xchg
and
inc
xchg
jno
sbb
mov
aam
(bad)
(bad)
(bad)
fiadd
adc
loopne
ret
fnstcw
pop
loop
cmp
push
sbb
jmp
cld
outs
or
cmps
popf
mov
inc
xor
mov
stos
ds
je
shr
add
or
inc
(bad)
mov
sub
ins
push
mov
jmp
inc
add
or
adc
fwait
cmps
sbb
cmps
(bad)
(bad)
jmp
jp
mov
and
or
in
clc
loopne
jo
dec
mov
es
(bad)
(bad)
inc
mov
pop
cmp
cmps
or
inc
js
mov
dec
jmp
cmp
add
dec
cs
scas
sub
xlat
mov
test
ret
jnp
cmps
ret
jmp
movs
cmps
cwde
ss
adc
das
pop
cmp
pop
jmp
cmp
add
push
cmp
mov
xor
(bad)
mov
push
push
fld
cmps
or
jmp
jnp
mov
clc
outs
mov
mov
(bad)
or
jmp
cmp
and
push
jge
sub
call
(bad)
call
cmp
aam
mov
call
fwait
sbb
ds
ins
cmps
(bad)
sub
dec
call
loop
push
push
add
jns
cmp
pop
jge
mov
(bad)
dec
pop
mov
jno
mov
jmp
xchg
arpl
sbb
push
sub
(bad)
(bad)
(bad)
mov
enter
pushf
pop
mov
xchg
sub
sub
call
pop
scas
(bad)
mov
in
or
jp
sub
outs
inc
cli
xchg
pop
lods
in
out
xor
mov
jmp
cli
(bad)
(bad)
call
outs
clc
dec
sahf
cwde
lea
sub
das
movs
xchg
and
add
scas
aaa
stos
ror
cmp
call
enter
test
sbb
xor
aaa
jb
push
(bad)
push
fistp
ror
pop
out
mov
xor
in
xor
sbb
enter
lock
imul
clc
jb
sub
push
std
dec
sbb
pop
xor
(bad)
(bad)
(bad)
mov
ins
cmp
adc
iret
dec
stos
jp
push
xor
sub
inc
ret
cmp
mov
inc
inc
push
push
stos
fwait
es
cmp
aaa
mov
jmp
xchg
icebp
sbb
xchg
pop
int3
xor
jb
imul
call
call
(bad)
fs
pop
xchg
pop
or
cdq
test
aas
push
sub
xor
pop
sub
pop
inc
shl
sub
xlat
pop
in
retf
(bad)
(bad)
(bad)
(bad)
dec
std
pop
pop
xor
sbb
test
dec
jno
je
pusha
fs
jmp
jg
(bad)
(bad)
inc
jbe
jp
pop
sub
or
and
xchg
outs
es
or
lea
(bad)
push
dec
mov
(bad)
(bad)
call
xchg
js
xchg
in
and
scas
or
inc
push
(bad)
xchg
sar
pop
(bad)
test
(bad)
call
push
fs
movs
into
cmp
sti
mov
movs
scas
fidiv
sub
sbb
add
ja
jo
mov
call
(bad)
(bad)
push
cmp
ficomp
repnz
push
aas
loop
mov
sbb
into
(bad)
(bad)
call
sbb
push
scas
retf
jns
retf
sar
dec
jns
cwde
jns
sub
or
dec
mov
inc
mov
push
shl
jbe
pop
mov
jmp
test
adc
loop
(bad)
(bad)
jmp
xor
push
lods
mov
fs
xchg
cmps
out
out
mov
cs
fisttp
inc
leave
mov
int3
jno
js
mov
std
jle
(bad)
pop
xchg
sub
pop
ret
out
in
sar
sbb
sbb
stos
mov
and
out
out
adc
pop
lea
push
mov
(bad)
inc
retf
sahf
loopne
in
imul
or
mov
jmp
repnz
sar
mov
mov
add
cmp
clc
(bad)
mov
mov
cmp
popf
push
inc
fisttp
mov
test
rol
call
arpl
(bad)
movs
dec
sub
lea
loope
adc
outs
outs
imul
sub
mov
(bad)
mov
dec
sbb
mov
mov
test
cmp
sub
jg
(bad)
mov
(bad)
das
outs
movs
adc
dec
popa
mov
std
dec
mov
fisttp
test
call
inc
lock
sbb
scas
cmps
js
stos
adc
out
stos
xchg
(bad)
(bad)
inc
jmp
ret
mov
(bad)
cmp
jmp
fimul
enter
std
inc
iret
cmp
sub
or
cs
test
mov
pop
jecxz
or
call
(bad)
jmp
push
scas
icebp
fistp
das
movntps
sub
(bad)
(bad)
call
push
add
adc
jmp
or
push
repz
sbb
ja
je
(bad)
ret
(bad)
(bad)
call
or
lods
mov
out
mov
xor
in
repnz
outs
dec
in
mov
pop
jecxz
mov
or
xchg
pop
in
outs
vcvttsd2si
cli
shl
(bad)
jg
jmp
(bad)
jmp
scas
add
ds
das
sub
cmp
jecxz
lock
(bad)
fwait
or
fild
mov
pop
xchg
stc
push
pop
(bad)
cld
jb
mov
sub
or
jg
inc
sbb
addr16
sub
das
in
imul
jp
orps
lods
imul
test
ja
out
std
into
or
jne
fisttp
inc
retf
popa
cmps
imul
(bad)
call
movs
je
cmp
ds
lds
fcmovne
out
mov
mov
or
(bad)
(bad)
(bad)
call
xor
jecxz
jnp
imul
lods
popa
cmp
call
mov
movhlps
(bad)
call
or
pop
mov
mov
std
pusha
stos
pop
js
cld
fisttp
sub
mov
pop
inc
jle
or
(bad)
mov
loopne
stos
fs
xor
fcom
push
xor
icebp
(bad)
(bad)
fild
fimul
mov
sti
movs
dec
leave
ret
inc
test
mov
(bad)
(bad)
fistp
and
xor
test
ds
cmps
cmps
repnz
jp
adc
mov
ins
outs
scas
cdq
lock
call
adc
adc
std
mov
inc
cli
cmps
ins
(bad)
shr
sbb
fiadd
lods
cdq
or
mov
(bad)
(bad)
(bad)
fcmovnbe
fst
mov
jb
test
in
lods
jl
xchg
adc
nop
jecxz
sub
loopne
xor
xchg
rcr
(bad)
out
dec
pop
sub
jle
popf
jnp
sub
xor
push
mov
sub
retf
call
lods
inc
sbb
sar
(bad)
mov
mov
dec
sbb
sub
or
fdivr
push
adc
xor
mov
outs
xchg
popa
jg
mov
sub
cmp
or
imul
xchg
mov
mov
icebp
push
mov
stos
(bad)
jmp
inc
ret
imul
out
xchg
and
xor
sub
mov
(bad)
(bad)
(bad)
out
dec
add
push
aam
outs
leave
add
pop
xchg
into
mov
add
into
cmp
call
pushf
mov
dec
es
pop
dec
mov
loop
mov
dec
nop
sub
xor
jle
aaa
outs
mov
pop
xchg
xor
popf
adc
(bad)
jmp
lods
jp
fdivr
jae
fcom
mov
cmps
std
mov
ins
jecxz
(bad)
(bad)
(bad)
jmp
jb
mov
(bad)
cmps
pop
push
cmp
stos
inc
push
leave
loop
jecxz
jl
ror
cmp
loopne
push
movs
in
and
(bad)
aas
sbb
scas
mov
(bad)
jg
jmp
push
add
and
inc
inc
int3
loop
lahf
fdivp
adc
inc
mov
fild
dec
mov
das
mov
and
xchg
nop
adc
jg
dec
mov
fist
mov
mov
push
push
cmps
push
cs
xor
loopne
popa
xchg
les
add
xor
jle
(bad)
mov
mov
lahf
and
sti
or
stos
fwait
mov
sbb
(bad)
(bad)
jmp
mov
dec
add
div
fistp
cmp
ds
fwait
dec
adc
ret
(bad)
jmp
sub
xchg
jnp
stos
outs
repz
or
sub
scas
and
hlt
mov
cmps
cmp
outs
pop
and
lods
loope
and
(bad)
sub
ins
and
sub
(bad)
(bad)
(bad)
jmp
and
push
imul
jecxz
sub
jecxz
dec
test
outs
clc
(bad)
fistp
mov
xor
mul
sbb
stos
cmp
jmp
add
jmp
and
dec
xor
sub
push
mov
jmp
or
or
xchg
(bad)
call
jo
ret
bound
test
loopne
mov
mov
movs
(bad)
cmp
mov
add
data16
retf
aam
(bad)
fisttp
jp
inc
jns
sub
xchg
sbb
sbb
dec
xchg
xchg
(bad)
xchg
add
test
js
inc
dec
push
dec
fimul
pop
xchg
fisub
push
mov
ja
jbe
push
mov
scas
jbe
add
sub
sbb
lods
pop
pop
or
(bad)
std
jp
mov
(bad)
fcmovb
add
(bad)
cmp
jmp
jmp
push
in
inc
movs
pop
popa
push
(bad)
call
push
leave
test
or
enter
jo
jmp
jmp
dec
inc
push
adc
(bad)
shr
jns
mov
test
(bad)
jmp
pop
arpl
aas
movs
add
pushf
stos
mov
push
(bad)
mov
jmp
das
push
leave
scas
clc
(bad)
dec
imul
retf
push
cmps
or
jge
sub
jmp
dec
(bad)
(bad)
(bad)
call
shl
sub
rol
clc
cld
sub
out
loop
xchg
jae
dec
stos
adc
clc
lahf
mov
(bad)
xchg
mov
pop
mov
fild
ss
mov
ficom
inc
std
frstor
or
jg
test
and
jle
sbb
sub
cmp
cld
pop
loopne
jp
or
pop
cmp
idiv
add
in
scas
push
pop
cmp
fs
cmc
jmp
loop
(bad)
push
xchg
pop
out
scas
cmc
adc
cmps
xchg
sbb
jg
addr16
and
(bad)
(bad)
(bad)
cmp
scas
loopne
adc
movs
mov
adc
or
movs
inc
sbb
xor
es
cli
push
ficomp
pop
aad
push
or
fcomip
(bad)
jmp
lds
loope
loope
jmp
mov
or
(bad)
(bad)
(bad)
dec
aad
xchg
cdq
mov
adc
mov
pop
aaa
cmp
mov
das
mov
sar
mov
(bad)
(bad)
jmp
and
leave
mov
sbb
jmp
and
dec
pop
sti
mov
xchg
xchg
push
std
call
scas
pop
mov
mov
push
cli
jge
mov
add
mov
idiv
inc
call
sub
cwde
jmp
std
(bad)
mov
xchg
retf
xchg
inc
es
jns
rcl
retf
enter
(bad)
(bad)
dec
cli
push
xor
adc
jmp
push
cmps
imul
or
cmps
and
fwait
lea
pop
(bad)
(bad)
mov
sbb
mov
call
cld
fistp
adc
adc
mov
adc
sub
shr
retf
push
pop
lods
leave
mov
adc
call
pop
jl
xchg
sub
(bad)
jg
test
jle
cdq
sub
ss
mov
clc
dec
jno
(bad)
(bad)
(bad)
inc
mov
inc
xor
sti
stos
test
jae
sub
retf
mov
mov
fbld
mov
js
loopne
mov
(bad)
(bad)
dec
sbb
shr
es
outs
outs
and
sahf
mov
fucomip
scas
movs
stos
or
das
cmps
scas
outs
jb
push
mov
xor
out
xor
cmp
in
xchg
dec
push
outs
jle
mov
call
mov
and
sti
hlt
in
jmp
jg
push
fs
and
(bad)
(bad)
dec
pop
inc
mov
pop
fidiv
pop
mov
cmp
xchg
loop
pop
rol
dec
sub
jns
sahf
fwait
inc
mov
and
xchg
mov
mov
xchg
cwde
jne
inc
push
jmp
add
jmp
std
mov
das
and
dec
push
xchg
(bad)
inc
sub
imul
scas
push
test
call
aam
std
or
fdivr
adc
popa
jmp
test
in
inc
(bad)
push
sahf
xchg
cmc
(bad)
(bad)
dec
call
dec
push
dec
and
jb
push
pop
adc
sti
dec
jb
(bad)
push
(bad)
inc
and
ds
cli
mov
push
jb
addr16
retf
or
pop
loopne
inc
je
out
push
mov
bnd
mov
(bad)
jg
jmp
cmps
ins
push
jmp
jmp
push
cmps
xor
dec
or
or
int
cmc
push
mov
pop
ds
aad
aad
mov
(bad)
(bad)
cmp
adc
or
push
mov
fisubr
xor
add
cs
mov
dec
test
or
or
shl
push
fldenv
sub
lods
sub
cmps
sub
sbb
fsubr
fld
cmps
xor
(bad)
(bad)
jp
xlat
in
cwde
outs
sub
test
cdq
and
(bad)
lods
sar
(bad)
inc
movs
out
xchg
bnd
test
pusha
into
xchg
loopne
mov
jmp
jmp
shr
add
lock
or
jmp
je
cmp
inc
and
dec
push
stos
push
daa
aad
(bad)
(bad)
(bad)
fild
or
cmp
mov
inc
cmps
out
mov
call
(bad)
(bad)
dec
imul
add
out
sbb
adc
ins
dec
sbb
sub
mov
add
sub
repnz
stos
into
add
or
mov
add
jmp
jmp
loopne
sub
push
mov
pop
sahf
pop
(bad)
fnsave
mov
pusha
popf
cli
and
and
call
addr16
js
scas
mov
mov
mov
lock
out
bound
fdivp
pop
dec
(bad)
pushf
movs
(bad)
repz
outs
sub
call
dec
jmp
dec
inc
(bad)
test
scas
imul
xor
or
mov
dec
and
dec
cmc
icebp
and
fsub
pop
mov
add
jae
into
mov
fnstenv
adc
and
adc
jg
cmp
adc
int
retf
mov
add
daa
aaa
(bad)
(bad)
(bad)
mov
mov
stc
bound
dec
shld
call
lock
or
dec
(bad)
(bad)
call
out
or
and
test
inc
imul
nop
icebp
xor
cmp
add
(bad)
mov
dec
xor
pop
(bad)
and
leave
imul
xchg
xor
ss
(bad)
jg
call
or
cmp
cmp
aam
sar
(bad)
into
jae
test
push
(bad)
jmp
sub
jb
aam
add
ja
mov
(bad)
repz
bound
adc
(bad)
(bad)
(bad)
mov
push
pop
sub
repz
or
adc
mov
add
jb
and
int3
ins
pusha
scas
dec
sub
or
jno
xchg
mov
push
or
cmps
(bad)
(bad)
(bad)
jmp
jne
mov
adc
dec
stos
dec
sbb
xchg
inc
and
in
sbb
xlat
les
jecxz
xor
dec
je
fimul
sti
push
pop
cmp
push
jmp
sbb
lods
mov
mov
call
int
xchg
pop
inc
cmc
imul
adc
imul
mov
into
imul
jecxz
and
inc
imul
jle
cmp
jmp
and
mov
cmp
inc
mov
sub
jmp
sub
sub
dec
cmp
fistp
push
sub
push
jmp
mov
or
(bad)
(bad)
call
cli
aad
test
mov
xlat
ror
bound
or
movs
ffree
add
add
clc
or
jg
jno
(bad)
jg
ret
jno
cli
stos
adc
data16
add
std
scas
cmp
(bad)
jg
jb
imul
loopne
in
lock
pop
mov
out
xchg
cmp
std
and
sub
inc
(bad)
(bad)
(bad)
push
das
jle
loope
fst
fdiv
rcl
sub
es
pop
pop
(bad)
(bad)
jmp
les
(bad)
add
cmp
imul
mov
cmp
clc
(bad)
fsubr
xchg
sbb
mov
dec
push
xchg
loope
jg
ja
mov
cdq
lea
cmp
cwde
imul
push
mov
stos
pop
cmps
pop
mov
mov
xor
ss
sbb
push
push
dec
sub
jno
jg
(bad)
call
xchg
mov
out
cwde
es
mov
add
cmp
jmp
adc
push
inc
(bad)
xchg
out
rcr
push
xchg
int3
and
loope
mov
and
mov
cmps
js
(bad)
std
lea
sbb
dec
pushf
sahf
in
fisttp
sub
call
(bad)
cli
dec
xchg
movs
mov
loop
outs
adc
cmc
(bad)
(bad)
dec
(bad)
das
scas
dec
push
in
xchg
fcmovnu
cmp
xor
jbe
(bad)
movs
mov
out
retf
mov
and
inc
sub
fbld
mov
in
push
adc
or
test
cld
mov
gs
pop
fwait
add
sub
jmp
les
loope
cmp
ins
cmp
jmp
mov
fimul
dec
xchg
jmp
call
ins
pop
adc
adc
inc
adc
(bad)
dec
lods
fcomp
repnz
aad
rcl
out
push
xchg
ja
pop
push
and
fsubr
jp
bound
es
xchg
shr
cmps
add
das
es
cmc
sbb
add
cmps
cmp
ja
test
call
shr
dec
arpl
adc
jmp
push
cld
std
pop
mov
fisubr
jo
push
sub
imul
mov
ds
jbe
and
sahf
sub
test
xor
ins
fsubr
fs
cmp
push
cld
scas
rcl
stos
pop
mov
mov
mov
sbb
xor
xor
aad
js
dec
retf
call
dec
out
stos
or
and
sub
xchg
sti
pop
push
(bad)
(bad)
cmp
pop
adc
in
fdivr
sub
(bad)
jmp
test
and
push
(bad)
mov
mov
out
push
inc
jbe
popf
cs
cli
dec
scas
cmps
test
xchg
jmp
dec
out
sahf
das
inc
fidiv
jmp
lock
adc
(bad)
call
clc
cwde
stos
dec
jg
addr16
dec
dec
inc
out
cmp
pop
into
xor
(bad)
es
push
xor
xchg
popa
std
(bad)
aaa
mov
(bad)
nop
(bad)
(bad)
(bad)
inc
mov
sub
ficom
mov
push
mov
mov
inc
mov
rcr
stos
lds
(bad)
push
mov
cmp
fld
jge
xor
inc
mov
xor
adc
inc
dec
dec
fidiv
aam
mov
dec
test
sub
movs
add
xchg
lahf
and
xchg
imul
mov
pop
es
pop
push
cli
div
dec
das
inc
loop
(bad)
mov
scas
xor
push
neg
jmp
aad
xor
inc
ret
xchg
inc
rcl
outs
pop
iret
dec
cli
cmp
mov
add
jbe
(bad)
loopne
inc
aam
outs
push
shr
xor
sub
jmp
sahf
jmp
(bad)
(bad)
jmp
add
(bad)
in
aas
cmp
xor
out
ds
xchg
into
cmps
lods
movs
jl
into
jl
int
(bad)
(bad)
(bad)
dec
adc
sub
scas
es
fidivr
iret
xor
retf
xor
scas
cmp
or
(bad)
(bad)
(bad)
(bad)
jmp
iret
int
jmp
inc
cmc
addr16
mov
cmps
jns
jo
inc
mov
add
(bad)
push
push
fisubr
(bad)
ds
pop
pop
lock
fldcw
xchg
sub
out
mov
movs
push
loope
push
or
repnz
call
dec
jecxz
outs
or
mov
and
aad
mov
cld
and
cli
(bad)
(bad)
fild
mov
mov
fs
mov
cmps
dec
out
ja
pop
cmc
das
xchg
ins
fsubrp
daa
ja
pop
in
in
dec
stc
xchg
dec
fist
sar
jmp
mov
(bad)
popf
sar
and
fisub
xchg
loop
xchg
cmp
push
cld
aam
jmp
sbb
mov
and
ret
dec
mov
call
pop
cld
scas
dec
ins
stos
sbb
aam
out
scas
xchg
jmp
cmp
adc
cld
pusha
loope
cmp
(bad)
(bad)
mov
(bad)
ret
test
inc
mov
mov
inc
lds
sub
loopne
aaa
add
icebp
xchg
sub
clc
icebp
xchg
inc
into
sbb
inc
dec
adc
jg
fstp
adc
dec
scas
ja
scas
fsubr
adc
dec
pop
xchg
pusha
adc
fwait
push
sub
hlt
push
in
clc
ins
xchg
pushf
mov
add
jl
xchg
dec
cmp
dec
pop
clc
(bad)
out
pop
sub
sub
arpl
arpl
int
inc
jmp
std
jp
call
sub
or
sub
mov
loopne
lods
cdq
fs
jb
aad
jmp
push
inc
mov
addr16
fwait
cmps
adc
fcomp
shl
adc
jl
or
push
sahf
scas
(bad)
(bad)
(bad)
push
in
adc
jbe
xchg
imul
sub
sub
sub
jge
push
dec
cld
jmp
adc
mov
cmp
mov
(bad)
call
sti
inc
sub
sub
call
jae
jae
inc
stos
idiv
call
dec
enter
cs
fwait
ror
pop
stos
adc
imul
mov
(bad)
mov
(bad)
xchg
and
and
enter
(bad)
or
fdivrp
sub
popf
imul
sub
stos
stos
mov
sti
(bad)
(bad)
(bad)
push
and
inc
fidivr
outs
repnz
fs
pop
dec
xor
bound
xchg
fwait
mov
jmp
sbb
in
dec
xchg
into
call
call
lock
(bad)
in
sti
fisubr
adc
jp
adc
fild
xor
adc
sub
push
push
test
pop
dec
rcr
pop
cdq
in
or
inc
addr16
or
jmp
leave
jp
adc
cmp
jmp
xchg
dec
mov
and
mov
inc
xchg
jns
loop
fldenv
jp
daa
mov
mov
scas
push
pusha
sbb
arpl
bound
sub
ins
cs
adc
sar
(bad)
mov
test
sub
outs
or
ja
mov
adc
(bad)
jg
sahf
fnstsw
mov
add
jmp
stc
mov
js
xchg
xchg
in
jge
mov
shr
(bad)
stos
sub
std
xchg
xchg
icebp
pop
outs
sbb
sub
mov
jmp
test
sub
std
mov
mov
call
retf
jg
dec
(bad)
push
sbb
adc
retf
fsubr
adc
inc
inc
in
dec
div
dec
retf
or
mov
xchg
(bad)
pop
pop
push
mov
cdq
mov
les
ins
and
jmp
adc
or
jl
jmp
jmp
mov
ins
cld
icebp
mov
out
or
fbld
jmp
js
push
das
sar
call
jmp
fwait
cmp
ret
jg
mov
test
jg
(bad)
(bad)
jmp
das
ret
adc
xor
rol
cwde
in
push
shl
inc
neg
fs
xor
jmp
imul
cli
inc
stc
(bad)
ds
stos
xor
xor
iret
jle
inc
mov
push
xchg
inc
cld
xchg
add
cwde
jns
dec
ret
cmp
cmc
in
(bad)
(bad)
(bad)
mov
mov
shr
movs
jnp
cdq
jmp
mov
pop
popa
jne
xchg
mov
call
je
(bad)
iret
pop
test
push
dec
mov
icebp
(bad)
jg
inc
cld
pop
mov
mov
pop
arpl
add
and
(bad)
(bad)
out
pushf
xchg
retf
mov
daa
push
mov
lahf
pop
mov
popf
add
and
sbb
push
xor
and
and
xor
fild
and
mov
dec
in
inc
add
xchg
jo
sbb
lock
and
scas
pop
repz
jmp
loop
addr16
xor
and
push
stos
ret
(bad)
(bad)
std
jmp
and
movs
and
data16
lods
imul
jge
imul
and
leave
in
and
test
aam
out
(bad)
(bad)
(bad)
jmp
push
hlt
movs
lea
test
repz
iret
inc
adc
imul
std
std
ins
outs
sbb
test
int
ins
sub
in
das
repnz
imul
lock
mov
lods
mov
in
mov
xor
in
pop
pop
shl
shr
loope
sbb
sub
mov
out
arpl
mov
cmp
jbe
and
hlt
in
out
jmp
(bad)
(bad)
in
cdq
mov
stos
sbb
test
mov
pop
scas
sbb
lock
jp
movs
jle
std
test
loope
jecxz
scas
dec
xor
cdq
hlt
push
or
in
push
jmp
jg
movs
ds
cmp
push
pop
std
sbb
jb
cmp
std
push
push
lock
cmc
imul
fwait
or
data16
cmp
cli
stc
mov
stos
mov
cmps
dec
test
mov
pop
scas
add
push
inc
jbe
(bad)
retf
or
or
xchg
retf
inc
jmp
imul
push
ins
sar
xchg
xor
cld
stos
ins
call
into
mov
sub
fidiv
jns
ss
gs
call
mov
sub
pop
or
fmul
cmp
loopne
mov
dec
xchg
add
sub
jl
push
mov
push
push
fild
loopne
or
jmp
test
push
dec
out
push
dec
inc
scas
iret
cwde
loop
pop
pop
retf
mov
cmps
sbb
retf
ror
aam
bound
push
mov
call
xor
dec
hlt
cmps
inc
stos
movs
bound
cs
jmp
sti
rcl
mov
adc
jo
mov
push
scas
test
mov
std
(bad)
out
jg
aam
jne
call
js
cmp
(bad)
xor
pop
push
nop
pop
xchg
cmc
ja
lods
mov
sti
pop
lds
iret
sbb
rcr
cmp
adc
push
add
fadd
jo
retf
xor
scas
sbb
mov
push
scas
sub
mov
and
jg
(bad)
(bad)
mov
pushf
xor
cmp
imul
repnz
push
xchg
inc
pop
pop
loope
(bad)
call
outs
imul
push
js
mov
scas
push
cmps
stos
shl
ja
xchg
sub
gs
fs
addr16
out
mov
scas
ror
cmp
adc
fwait
pop
jo
std
popa
loope
xchg
pusha
loopne
jecxz
out
add
ins
push
in
outs
out
outs
xchg
(bad)
jg
pop
out
sahf
xchg
enter
pop
jmp
dec
mov
mov
(bad)
call
lea
push
add
inc
out
inc
stos
movs
xor
inc
lods
jle
test
cmp
std
mov
pusha
fxch
leave
into
xchg
mov
sbb
mov
(bad)
push
push
daa
cmps
pop
stos
mov
sub
std
(bad)
sbb
pop
out
inc
jns
xor
jmp
cmp
pushf
jae
cmovne
movs
bts
arpl
bound
mov
pop
fbstp
push
leave
mov
outs
sub
leave
imul
(bad)
adc
(bad)
loop
pusha
sbb
cmp
pop
mov
jmp
imul
call
out
enter
push
pop
cmp
movs
retf
repnz
shr
mov
and
ret
xor
sub
shr
mov
call
les
pop
jle
fdiv
adc
and
xor
out
fadd
clc
adc
loop
pop
mov
mov
call
div
pop
mov
loop
inc
inc
mov
into
add
retf
mov
fadd
imul
adc
dec
mov
mov
(bad)
mov
cmps
es
jns
jmp
mov
aam
scas
xor
cmps
push
rcr
cwde
lods
inc
inc
mov
adc
mov
fwait
pop
stos
(bad)
loope
mov
icebp
pusha
sbb
mov
adc
inc
out
(bad)
mov
jbe
mov
adc
jne
mov
cmp
mov
pop
loop
aam
shr
push
cs
(bad)
xchg
pop
jb
imul
mov
mov
shr
(bad)
call
sbb
push
fdiv
call
daa
push
(bad)
in
imul
(bad)
inc
sub
shl
cmp
cmc
and
(bad)
fsubr
sub
jecxz
in
std
fs
movs
addr16
out
data16
pop
sar
es
popa
and
mov
(bad)
xchg
xor
add
push
adc
sbb
shl
ret
js
mov
dec
adc
xor
or
lds
shl
xor
add
or
jb
inc
sub
add
imul
and
push
mov
jmp
popf
bound
sbb
sub
cli
sub
retf
fisttp
add
push
loope
loope
sub
jmp
push
dec
in
in
popa
and
(bad)
cld
push
arpl
mov
imul
in
cmp
shl
and
fcmovnbe
test
loopne
loop
or
in
scas
retf
inc
mov
sub
mov
ror
jbe
loopne
test
es
aaa
out
inc
mov
iret
adc
inc
loope
frstor
clc
jg
pop
outs
sbb
shr
mov
mov
cmp
loop
leave
clc
add
(bad)
ds
(bad)
jmp
sub
push
mov
push
mov
cmps
(bad)
(bad)
(bad)
call
mov
push
nop
shl
aas
(bad)
pop
out
jmp
lods
mov
inc
sbb
mov
cld
(bad)
jmp
mov
fcmovnu
cmc
mov
pop
adc
int
(bad)
jg
dec
mov
in
retf
pop
and
jmp
or
jge
popa
sbb
dec
or
jg
sub
mov
(bad)
push
std
pop
imul
(bad)
(bad)
mov
sahf
les
mov
inc
jp
xchg
scas
iret
mov
sub
mov
dec
outs
(bad)
(bad)
dec
enter
push
inc
stos
mov
icebp
cmps
shr
mov
in
push
mov
sub
pop
es
imul
jmp
push
ds
add
push
push
cli
inc
hlt
pop
xchg
sub
sahf
call
call
sbb
imul
(bad)
adc
retf
cs
cmp
or
push
call
jg
mov
rcl
lahf
adc
iret
movs
sar
cdq
imul
punpcklbw
mov
pop
stos
fcos
(bad)
(bad)
dec
xor
xor
cs
stos
jne
fs
sbb
pop
arpl
out
push
mov
adc
ret
or
pop
xchg
pop
(bad)
dec
fst
dec
ror
sub
xor
call
jmp
adc
rcl
xchg
xor
test
lahf
iret
nop
mov
mov
and
fdivr
sbb
and
popf
bt
in
mov
jmp
outs
sbb
jmp
sub
cs
or
or
push
(bad)
mov
pop
sub
mov
push
jg
aaa
sub
ret
sar
and
stos
retf
cld
call
xchg
in
imul
call
std
lods
jmp
mov
clc
fwait
call
shl
outs
mov
or
int
into
pop
pop
pushf
push
jmp
sbb
test
(bad)
(bad)
(bad)
fistp
out
mov
or
lds
or
sbb
loope
mov
adc
sbb
test
mov
leave
mov
shl
jno
cwde
(bad)
std
adc
(bad)
dec
dec
adc
mov
cmp
xrelease
xlat
cdq
push
xchg
ins
inc
xchg
mov
lahf
xor
fidiv
call
ins
lods
cmp
xchg
xor
mov
xchg
es
(bad)
jmp
jl
std
cmp
in
mov
scas
jmp
jns
fisubr
pop
(bad)
(bad)
fistp
inc
dec
cmp
(bad)
mov
scas
dec
xor
out
loopne
outs
clc
(bad)
dec
jno
dec
in
sbb
or
cwd
and
cmps
mov
clc
fbstp
or
or
xchg
sbb
or
cmp
(bad)
call
ret
adc
out
sub
and
pop
jmp
cmp
sub
or
or
sbb
fbstp
push
xlat
fwait
adc
mov
test
sbb
movs
push
(bad)
fstp
or
push
(bad)
(bad)
jg
add
adc
jmp
repnz
fcomp
(bad)
pop
ror
mov
add
cld
push
enter
xchg
sub
(bad)
out
imul
or
xchg
stos
and
push
(bad)
call
mov
sahf
xor
mov
xlat
inc
stos
push
inc
in
in
inc
ds
adc
sbb
call
pop
sbb
sbb
mov
xor
pop
push
sbb
xor
jmp
mov
call
sub
adc
jg
in
mov
loop
mov
sbb
xchg
mov
jo
ss
(bad)
or
mov
(bad)
(bad)
call
cmps
jp
js
adc
jmp
cli
inc
out
test
lahf
xchg
ins
jb
xor
inc
sub
jg
cld
jmp
mov
sub
sub
(bad)
jmp
daa
pop
addr16
test
lods
mov
push
or
(bad)
(bad)
dec
dec
mov
neg
xor
jnp
xchg
and
mov
push
daa
outs
push
(bad)
push
pop
xor
ds
ficom
and
sar
(bad)
(bad)
jmp
jle
call
pop
leave
sub
cs
stos
xlat
inc
mov
imul
(bad)
(bad)
(bad)
dec
xchg
iret
in
sahf
movs
repnz
cmp
scas
std
neg
dec
xlat
(bad)
leave
inc
jp
inc
inc
xor
sbb
std
(bad)
fistp
ss
adc
retf
lahf
cmp
sub
cs
shl
fisub
pop
ss
jo
mov
retf
or
dec
sub
sub
pop
and
jae
jle
fsubr
call
std
call
mov
jge
les
sub
pop
jmp
imul
(bad)
(bad)
dec
sub
push
gs
mov
outs
add
bound
lea
sub
push
aad
pop
and
lods
imul
into
pop
inc
es
(bad)
(bad)
push
push
inc
xor
mov
aaa
dec
sub
adc
add
mov
and
mov
lea
lds
fisub
test
and
movs
xor
ret
sub
sahf
sbb
je
mov
dec
or
mov
out
(bad)
mov
stos
dec
push
add
(bad)
call
stos
fwait
out
jb
jmp
arpl
test
xchg
scas
jecxz
cs
jmp
jg
ins
ins
popa
cdq
push
dec
sub
mov
xor
and
cmps
(bad)
call
sub
pop
loope
js
cmps
mov
arpl
call
jmp
es
shr
sub
add
lods
mov
push
sub
sub
cmp
gs
cmps
mov
in
cdq
push
lock
mov
adc
icebp
mov
mov
cwde
sbb
std
idiv
mov
mov
movs
call
js
mov
jmp
sub
xor
cmp
cs
dec
bound
dec
push
sbb
ret
call
jo
into
test
mov
cmp
(bad)
push
outs
jmp
in
call
nop
aam
add
(bad)
call
push
pop
lahf
int3
sub
hlt
mov
cmp
pop
mov
int
inc
xor
dec
test
inc
in
mov
std
jmp
xor
or
and
add
sub
mov
pop
push
out
arpl
pop
sub
xchg
call
pusha
push
dec
adc
mov
out
xlat
mov
lea
cwde
xchg
pusha
imul
cli
js
in
lods
nop
scas
mov
cmp
fs
mov
inc
xchg
retf
pop
mov
dec
or
ins
push
int3
or
sub
out
(bad)
add
fimul
cwde
scas
call
in
add
sub
movs
retw
fdiv
sbb
(bad)
(bad)
(bad)
jmp
scas
dec
cmp
loope
inc
pop
enter
sub
adc
neg
(bad)
(bad)
(bad)
call
mov
out
mov
in
xor
call
jnp
out
test
jne
daa
mov
push
dec
out
adc
jnp
push
into
sub
add
int
mov
pop
loopne
loop
cmps
add
fwait
(bad)
jmp
clc
mov
popa
mov
xchg
(bad)
mov
pushf
(bad)
std
cmp
das
test
in
ror
jmp
and
lods
in
call
(bad)
(bad)
in
or
in
arpl
leave
mov
or
and
js
mov
inc
mov
sub
dec
jle
cli
sbb
sahf
ficom
cmp
in
dec
cmp
cmps
cs
cmps
stos
jb
xlat
bound
sahf
inc
sub
pop
mov
dec
in
cmp
out
int3
jl
test
jne
out
cmp
call
dec
jmp
mov
mov
jecxz
movs
shr
cli
bound
dec
adc
(bad)
(bad)
(bad)
inc
(bad)
xor
inc
bound
bound
pop
lods
push
outs
sub
adc
xchg
lods
cdq
pop
in
mov
test
and
rcr
lahf
popa
sbb
and
(bad)
lea
int3
std
lock
dec
test
loopne
adc
lahf
pop
jmp
push
adc
std
and
pop
arpl
push
call
fpatan
jmp
and
outs
jle
mov
cs
(bad)
(bad)
call
scas
pop
arpl
cmps
jae
or
sbb
int
retf
add
jmp
ror
xchg
jns
cmps
outs
lea
outs
cli
xor
xchg
popf
(bad)
(bad)
(bad)
jmp
push
out
mov
or
adc
and
imul
test
ret
push
clc
ret
push
ret
push
into
sbb
dec
adc
mov
push
stos
jmp
mov
mov
cld
xchg
xchg
adc
mov
test
pop
and
(bad)
(bad)
dec
sbb
sub
xor
xor
outs
cmp
retf
call
sub
lahf
push
xor
ins
outs
and
addr16
arpl
and
jg
retf
or
ins
cmp
lea
pop
cmp
test
cmp
jle
mov
hlt
pushf
sub
scas
or
in
xchg
mov
cmp
call
call
dec
(bad)
(bad)
stos
test
mov
or
movs
xchg
bnd
movs
jmp
iret
cmps
outs
in
popf
or
add
gs
enter
push
mov
xor
xchg
addr16
and
lods
and
fwait
lock
call
(bad)
mov
fcomp
fwait
ins
xchg
and
js
jmp
jmp
mov
jmp
pusha
cmp
sub
fiadd
sahf
dec
aam
fadd
mov
leave
movs
mov
(bad)
inc
push
inc
ins
ret
ret
sar
push
sbb
loop
cmp
(bad)
(bad)
js
pop
es
adc
outs
jmp
lods
mov
sbb
xchg
xor
in
scas
mov
movs
gs
jmp
pop
fcmovu
outs
rol
repnz
jo
lds
test
xchg
movs
push
mov
jmp
(bad)
dec
push
add
nop
out
adc
iret
cmp
shl
push
sahf
cdq
and
xchg
(bad)
jmp
rcr
call
ret
out
mov
(bad)
mov
out
sub
mov
cs
ret
pushf
push
jg
jg
or
sbb
jp
sbb
mov
popf
jmp
and
or
(bad)
(bad)
(bad)
(bad)
cmp
icebp
sbb
xor
dec
ret
lods
clc
push
push
scas
add
(bad)
(bad)
fiadd
mov
ret
mov
(bad)
jmp
arpl
outs
mov
xor
cs
shl
(bad)
(bad)
fcmovnu
mov
sub
clc
ror
adc
call
sbb
cmp
out
aaa
xchg
pop
jg
gs
mov
call
mov
ficomp
retf
push
mov
add
int
add
pop
mov
pop
loope
mov
inc
jmp
sub
stos
push
dec
fdivr
adc
(bad)
mov
div
sti
sbb
std
jmp
jmp
jnp
out
fcmovb
scas
adc
ds
(bad)
fcomip
popf
cmp
inc
sahf
add
mov
ret
(bad)
cmp
add
mov
shl
cmp
inc
cmp
inc
inc
scas
and
pushf
nop
hlt
push
push
ja
mov
dec
xchg
(bad)
jmp
inc
cs
shr
sar
(bad)
jmp
sub
cmp
ds
mov
scas
ss
(bad)
cld
call
and
(bad)
sub
adc
cmp
xor
(bad)
call
adc
mov
mov
or
repnz
mov
in
inc
clc
outs
jp
cmp
out
addr16
mov
xchg
aaa
add
or
add
mov
pop
mov
ds
test
loop
lock
mov
(bad)
ins
ins
or
fbld
sbb
mov
rep
ficom
jl
add
dec
add
call
and
(bad)
(bad)
(bad)
fcompp
in
in
mov
jno
lods
inc
ins
fld
pusha
mov
mov
or
cmp
fcom
lock
cmp
test
mov
inc
fcmovu
cmp
in
dec
inc
bnd
fidivr
sub
ret
call
sub
inc
or
xor
or
lods
sar
sar
fiadd
mov
mov
adc
scas
(bad)
mov
movs
(bad)
jmp
add
push
stos
(bad)
mov
icebp
mov
inc
out
dec
call
add
push
xor
cdq
push
sbb
(bad)
(bad)
fbld
adc
in
pop
call
call
sbb
push
lock
popa
adc
pop
cs
loope
rcr
mov
(bad)
cld
in
retf
out
mov
jbe
scas
aad
(bad)
jg
mov
adc
jp
mov
adc
mov
hlt
(bad)
jmp
in
cmp
adc
and
imul
mov
inc
jmp
pop
hlt
dec
imul
cmp
mov
cwde
pop
loopne
mov
(bad)
(bad)
push
mov
outs
sbb
ins
mov
mov
scas
in
stos
cwde
cwde
lahf
test
dec
jmp
(bad)
fisttp
jo
mov
pop
loop
sub
je
or
hlt
(bad)
inc
(bad)
or
shl
int
mov
out
cli
jmp
jmp
add
mov
es
push
frstor
ss
scas
jo
(bad)
jmp
or
iret
and
call
(bad)
mov
ja
cmp
push
out
sbb
adc
inc
retf
cld
jmp
jge
mov
adc
lea
iret
je
(bad)
(bad)
jg
sbb
(bad)
dec
ret
(bad)
jle
fild
sahf
lds
adc
arpl
pop
mov
jmp
stos
push
push
jno
cld
and
pop
and
loopne
and
cwde
test
(bad)
(bad)
(bad)
inc
and
mov
popa
movs
xlat
fldcw
push
and
push
scas
fstp
(bad)
call
fisttp
(bad)
mov
cmps
push
mov
add
and
or
(bad)
mov
(bad)
(bad)
call
jne
leave
ret
mov
repnz
xchg
iret
add
sbb
adc
in
adc
sbb
dec
hlt
ds
or
mov
sub
pop
sub
pop
add
sub
fwait
in
inc
daa
xchg
sub
(bad)
cmps
cwde
mov
je
(bad)
mov
dec
adc
in
mov
retf
(bad)
(bad)
(bad)
jmp
mov
cmp
mov
adc
(bad)
jmp
dec
sbb
xchg
mov
mov
xor
mov
cmp
jg
dec
mov
jge
xchg
call
ja
or
call
mov
pop
(bad)
sub
pop
cmc
pop
cld
js
test
addr16
jb
mov
push
mov
lahf
sahf
mov
jle
inc
(bad)
fbld
jmp
fs
loop
ret
ss
call
pop
mov
dec
imul
cld
dec
loop
or
inc
or
push
int
pop
scas
and
fild
jmp
mov
(bad)
das
int3
ds
retf
clc
cmps
mov
outs
std
(bad)
(bad)
(bad)
jg
cmovns
jno
add
lahf
xchg
cmp
daa
scas
call
add
jg
add
xor
add
mov
xchg
movs
add
mov
push
std
mov
ins
mov
jmp
std
xchg
pop
jecxz
jmp
pop
xchg
inc
cld
inc
xchg
pop
jmp
xor
test
(bad)
(bad)
jg
add
jb
pop
or
into
pop
xor
sub
sbb
lods
popf
or
pop
es
pop
fwait
clc
dec
and
mov
push
in
mov
(bad)
call
dec
push
call
enter
jo
xlat
push
and
sar
jns
pop
dec
addr16
and
call
imul
loop
mov
(bad)
mov
adc
hlt
(bad)
push
call
rep
mov
jns
das
fild
retf
(bad)
call
and
out
and
clc
cmp
push
ror
(bad)
add
std
jg
mov
jl
dec
(bad)
jg
jo
fidiv
xchg
xor
mov
call
ja
cli
call
xchg
cmps
and
inc
cdq
(bad)
mov
jmp
sub
test
mov
pop
mov
loop
cmp
out
sub
in
(bad)
dec
aam
test
push
adc
mov
call
js
and
ja
ins
sub
call
jge
pushf
je
fs
stos
idiv
sub
pop
mov
cmp
dec
lahf
mov
scas
inc
stos
fldcw
jg
loop
fist
bound
push
jmp
out
mov
fidivr
xor
(bad)
(bad)
mov
jne
fidivr
dec
sbb
(bad)
call
jl
fisubr
push
sti
xor
call
sbb
push
adc
xor
cmps
add
jno
jl
fadd
lods
jns
and
xchg
mov
outs
(bad)
sbb
popa
sub
popf
test
mov
arpl
mov
(bad)
inc
stos
and
retf
test
ret
sub
pop
clc
(bad)
mov
(bad)
cmp
dec
imul
add
(bad)
jmp
jae
pop
cs
pushf
leave
sub
je
jb
aaa
xchg
cmps
push
lods
or
xchg
(bad)
mov
pop
push
mov
or
jmp
(bad)
inc
jae
jns
sub
fsub
cwde
sub
lods
test
or
imul
adc
ror
int3
sbb
xchg
xor
inc
cli
xor
retf
pop
(bad)
mov
(bad)
adc
dec
fistp
mov
pop
mov
rcr
and
das
push
test
or
fild
pusha
shr
imul
adc
push
fld
loop
push
adc
add
out
fdivr
(bad)
(bad)
(bad)
jnp
mov
push
movs
outs
push
mov
add
xchg
mov
retf
aas
cdq
adc
je
push
dec
fs
aaa
sbb
jmp
das
retf
inc
and
inc
inc
aad
int3
fs
mov
jne
push
retf
jge
(bad)
fimul
call
fwait
xor
retf
sbb
push
loopne
mov
mov
jmp
jmp
ret
xor
dec
adc
mov
pusha
mov
jmp
cli
(bad)
(bad)
ds
xchg
jb
mov
xchg
push
(bad)
xor
mov
cmc
inc
movs
jecxz
cli
test
dec
(bad)
xlat
push
cmp
popf
mov
ja
jb
stos
mov
xchg
cli
sar
jl
div
dec
push
scas
daa
jl
sub
pop
mov
jnp
cmps
ss
inc
dec
(bad)
dec
idiv
test
cwde
mov
ins
jnp
pop
sti
sub
xchg
mov
(bad)
(bad)
push
jecxz
repnz
loopne
xchg
lods
and
jmp
and
scas
test
in
lods
and
(bad)
xchg
jp
lahf
jp
call
xchg
lock
jg
jmp
hlt
cmp
xor
pop
sub
sub
cmc
(bad)
(bad)
jmp
pop
iret
and
mov
lds
imul
cs
(bad)
jg
jo
stos
cs
push
dec
call
mov
mov
(bad)
jmp
or
(bad)
xchg
push
(bad)
call
push
mov
mov
movs
mov
lahf
ret
adc
sub
pop
inc
ret
ins
retf
(bad)
push
or
dec
shl
jecxz
outs
push
sub
test
sub
outs
aas
in
clc
lods
sub
(bad)
and
std
cmp
adc
push
jp
mov
jmp
pop
jbe
and
arpl
fisub
xor
(bad)
fcmovnu
mov
loopne
cmp
cmps
shl
cwde
sub
ins
movs
cs
xchg
ror
pusha
loope
(bad)
(bad)
call
sbb
jnp
push
jp
fist
push
sub
mov
ja
jae
into
lods
mov
xor
xchg
mov
and
sub
arpl
icebp
test
xor
les
movs
clc
nop
scas
ins
(bad)
(bad)
jmp
nop
fcomp
es
in
mov
clc
jl
loope
in
sub
and
ds
(bad)
scas
add
bound
ret
jnp
scas
push
inc
outs
add
in
aas
adc
rcr
loopne
jge
pop
test
(bad)
(bad)
(bad)
jmp
cld
out
sub
fisttp
stos
(bad)
push
ins
stos
mov
mov
push
rcl
mov
lods
sbb
into
dec
push
dec
dec
sbb
push
or
add
xchg
sar
mov
mov
pop
pop
xchg
mov
jge
out
(bad)
(bad)
mov
popf
shl
retf
(bad)
js
loop
jecxz
mov
daa
inc
cmp
scas
stos
bound
cmps
pusha
std
rcr
out
lea
cmc
push
inc
mov
cmp
push
cmp
rol
sar
xor
jl
popa
mov
add
mov
add
jno
lock
push
mov
(bad)
push
fild
push
or
test
mov
add
enter
(bad)
(bad)
jmp
addr16
and
push
cli
fcomp
icebp
mov
out
push
mov
(bad)
call
clc
jb
lods
sub
mov
jbe
aam
and
jae
cmp
(bad)
sbb
mov
cmps
jno
jmp
pop
mov
add
out
jg
nop
dec
into
(bad)
(bad)
call
pop
rcr
mov
cmps
add
mov
das
in
push
adc
mov
(bad)
call
adc
popf
mov
mov
ins
xor
inc
inc
pop
push
pusha
aam
lea
mov
ret
mov
(bad)
mov
cmp
out
fisubr
mov
mov
lock
pusha
dec
xor
jg
add
fiadd
jmp
or
inc
aas
out
mov
std
adc
int
jle
jns
lods
dec
pop
rcl
mov
jecxz
cli
pushf
and
push
fist
inc
(bad)
(bad)
jmp
ds
inc
retf
mov
popf
sahf
add
mov
lahf
(bad)
aas
and
cmp
(bad)
mov
(bad)
(bad)
(bad)
call
repnz
lods
loope
(bad)
js
xchg
push
lahf
movs
in
cld
daa
popa
or
call
in
out
pop
call
out
int
lods
(bad)
fwait
loop
mov
dec
sub
inc
cld
(bad)
call
loope
mov
push
lods
daa
imul
dec
test
scas
and
inc
(bad)
(bad)
aas
sub
loop
sahf
mov
inc
and
ins
add
(bad)
(bad)
inc
jmp
xchg
scas
pop
cmp
fst
outs
popa
in
js
cmp
in
loope
dec
xchg
(bad)
cli
(bad)
(bad)
jmp
or
clc
lahf
xchg
in
pop
ss
pop
dec
mov
es
call
and
das
cli
jp
addr16
stos
sub
mov
loop
jg
scas
pop
(bad)
mov
test
xor
push
das
sar
adc
(bad)
cmp
mov
fsub
adc
scas
adc
js
pop
pop
icebp
sbb
pop
mov
(bad)
inc
dec
in
pop
push
mov
inc
or
dec
dec
xchg
(bad)
xor
fidivr
popa
(bad)
(bad)
(bad)
push
pop
sub
mov
cwde
push
cmp
adc
xchg
ins
push
pop
pop
shr
cmp
(bad)
(bad)
(bad)
(bad)
jg
icebp
cld
adc
das
xlat
cs
std
sub
xor
jmp
and
xchg
mov
dec
xchg
adc
test
lock
pop
inc
ret
mov
shr
(bad)
(bad)
push
and
es
iret
lods
mov
add
repnz
mov
xchg
(bad)
push
pop
mov
sbb
push
mov
and
call
pop
pop
call
add
dec
pop
or
pop
icebp
(bad)
call
scas
cmps
in
mov
ror
fist
fbld
mov
test
pop
inc
loop
mov
mov
out
mov
loopne
(bad)
(bad)
jns
pop
scas
mov
mov
pop
mov
or
jmp
push
and
das
or
fist
mov
sub
jno
movs
mov
mov
xor
inc
sub
pop
std
(bad)
fisttp
mov
or
out
or
(bad)
(bad)
(bad)
(bad)
stc
vmovd
(bad)
rcl
std
pop
cmp
mov
xor
icebp
xchg
sti
out
fdivr
(bad)
(bad)
jmp
push
adc
mov
xor
xchg
nop
sbb
test
sbb
add
dec
push
call
call
xor
xchg
push
repnz
adc
pop
mov
mov
stos
pop
adc
clc
(bad)
fbld
mov
or
adc
mov
jmp
call
inc
into
movs
loop
ror
mov
inc
add
into
sub
aam
cs
xor
(bad)
out
add
cmps
inc
out
sub
outs
es
add
bound
lds
inc
push
stc
aad
dec
xchg
jg
sbb
fcmove
ficomp
mov
xchg
movs
(bad)
fist
inc
dec
cmp
test
movs
imul
sub
and
adc
mov
sahf
mov
mov
mov
sub
jmp
inc
cld
mov
(bad)
(bad)
call
push
pop
sub
retf
stos
xor
cmps
out
inc
pop
retf
push
stos
retf
or
jg
or
scas
xor
fidivr
out
mov
scas
adc
imul
test
lahf
(bad)
mov
loop
ins
sub
stc
stc
ins
sub
lods
outs
das
out
scas
add
push
or
mov
int
add
push
mov
add
or
mov
gs
loopne
leave
rol
jns
out
enter
out
or
loopne
fwait
jae
jns
leave
fwait
icebp
ja
cmps
aas
out
ja
ja
lea
aas
fadd
test
xchg
push
nop
dec
or
mov
outs
scas
rol
cs
add
mov
daa
popa
add
arpl
jns
add
cmps
ja
cmps
std
fstp
and
movs
in
sbb
and
sub
outs
and
and
popa
adc
jnp
icebp
fwait
icebp
fwait
icebp
fwait
icebp
iret
mov
ja
icebp
ja
cmp
pushf
jae
icebp
ja
ja
popf
cmp
test
xchg
and
popf
imul
loope
js
lock
mov
sbb
pushf
jnp
jne
scas
cmc
lahf
cmc
lahf
cmc
iret
sar
pop
cmc
jae
jae
pop
cmc
ja
cmc
ja
pop
mov
fdiv
push
hlt
in
sar
and
fwait
out
out
jae
out
icebp
fwait
icebp
fwait
into
mov
fwait
icebp
ja
ja
out
jnp
ja
ja
ja
mov
ja
icebp
push
cld
and
cmc
(bad)
(bad)
cmp
and
icebp
fwait
icebp
pop
out
pop
test
fs
and
pop
scas
sub
mov
jle
mov
loop
or
dec
mov
add
(bad)
dec
test
xchg
add
loop
in
push
cmc
(bad)
jg
pop
or
cmps
cld
cli
xor
out
(bad)
mov
(bad)
loop
mov
sub
es
cmps
and
jle
mov
mov
jecxz
mov
(bad)
(bad)
(bad)
(bad)
call
mov
and
pop
fbld
call
(bad)
sub
adc
movs
cmps
or
fwait
cli
ins
movs
mov
out
add
lea
push
xor
(bad)
mov
xchg
aam
xchg
les
dec
pop
std
fld
ficom
call
aad
add
call
pop
sti
mov
movs
jnp
mov
xchg
test
aas
call
dec
jecxz
adc
add
and
adc
inc
std
stc
(bad)
call
adc
loopne
pop
sub
das
cli
stos
push
sub
out
mov
imul
cdq
clc
ret
(bad)
(bad)
adc
aas
lods
inc
mov
aam
(bad)
dec
ret
dec
scas
or
push
retf
push
lods
sub
pop
or
push
loop
out
push
and
add
ror
(bad)
call
in
and
gs
jb
inc
xchg
push
pop
call
out
(bad)
fild
jmp
ins
inc
or
cmp
rol
outs
retf
cli
mov
into
cwde
imul
inc
add
mov
cwde
dec
daa
gs
mov
pop
movs
fmulp
ret
push
dec
(bad)
fdiv
js
mov
mov
pop
call
lahf
lock
std
out
int
sub
(bad)
cmp
loope
call
adc
inc
add
xchg
pop
sbb
retf
gs
popf
mov
jmp
add
sub
dec
sbb
(bad)
(bad)
dec
push
jmp
or
mov
das
(bad)
(bad)
(bad)
jmp
call
pop
dec
push
cmps
fcomp
push
js
pop
inc
jb
rol
call
(bad)
rcl
test
cs
push
xchg
aas
je
das
mov
aad
(bad)
(bad)
(bad)
cmp
sub
mov
stos
mov
dec
xor
js
mov
test
sbb
jg
loope
or
fdivr
(bad)
(bad)
call
movs
pop
outs
add
mov
test
test
push
dec
cli
and
(bad)
push
jp
in
mov
(bad)
jg
lock
mov
in
int3
lds
es
dec
pop
shl
call
push
inc
mov
inc
push
(bad)
(bad)
(bad)
inc
in
pop
(bad)
sbb
jmp
xchg
xchg
xor
es
push
mov
fisttp
call
sub
popa
mov
and
cs
mov
hlt
dec
sahf
jno
sbb
push
mov
es
pop
fistp
and
push
fisttp
jg
jmp
jmp
aad
dec
mov
or
mov
dec
in
jno
sub
ror
shr
fdivr
jg
in
retf
ins
loop
sub
push
int3
pushf
(bad)
(bad)
jmp
cmps
retf
fs
jp
push
pop
mov
out
ins
adc
or
sub
(bad)
(bad)
call
inc
jno
call
dec
cwde
adc
xchg
aam
sbb
pusha
xchg
cmps
pop
inc
mov
add
jle
fnstcw
cmps
scas
and
mov
sub
and
adc
fisttp
(bad)
inc
xor
xor
(bad)
jmp
(bad)
(bad)
jg
inc
retf
or
push
add
in
addr16
push
aad
inc
(bad)
adc
movs
out
dec
stos
std
cmp
(bad)
ja
add
stos
jp
mov
adc
stos
jo
les
(bad)
(bad)
cmp
ret
jmp
adc
dec
sbb
into
and
lods
mov
std
mov
(bad)
jmp
jnp
sbb
dec
mov
(bad)
stos
retf
adc
aam
mov
xor
gs
movs
dec
fld
cmp
jne
(bad)
jg
add
bound
sahf
stos
and
(bad)
jmp
dec
aas
dec
pop
(bad)
mov
inc
cli
nop
xor
pop
mov
xchg
mov
jo
mov
pushf
add
mov
pop
stos
jmp
jmp
loopne
push
sub
jmp
scas
imul
push
(bad)
(bad)
(bad)
dec
in
cwde
aad
inc
or
stos
dec
push
pop
mov
stos
jb
cmps
in
mov
aas
mov
or
inc
retf
test
adc
clc
xchg
lock
aas
xchg
pop
mov
cli
mov
(bad)
(bad)
inc
imul
lods
jmp
js
dec
fistp
(bad)
call
pop
mov
jge
stos
fsubr
jp
aas
imul
dec
call
fild
addr16
fincstp
fs
xor
mov
(bad)
mov
mov
test
and
mov
scas
fisttp
stos
mov
cli
add
add
sbb
(bad)
call
pop
mov
sub
xor
mov
fwait
movs
(bad)
(bad)
fdivr
mov
jo
daa
or
lds
cwde
mov
inc
sub
mov
mov
loopne
add
mov
adc
dec
jecxz
cs
push
adc
retf
test
movs
jecxz
jmp
jecxz
or
addr16
push
scas
loope
jmp
push
cmps
popa
aas
(bad)
jg
add
sbb
sub
cs
cld
cld
(bad)
(bad)
(bad)
call
inc
pop
jns
sub
int
xchg
push
(bad)
mov
mov
dec
ins
fnsave
sbb
inc
or
pop
jle
loop
mov
ds
(bad)
(bad)
(bad)
call
scas
fsubr
inc
push
mov
sub
jecxz
sub
gs
dec
inc
add
jg
push
imul
dec
inc
push
(bad)
(bad)
inc
(bad)
(bad)
enter
push
stos
movs
push
and
leave
xchg
cld
xchg
sub
pop
adc
or
aas
adc
push
bound
add
aaa
adc
push
push
jae
gs
or
or
xchg
cmc
jg
mov
mov
jg
pop
pop
or
(bad)
(bad)
(bad)
ffree
dec
mov
xlat
cmps
adc
sbb
cld
das
daa
div
(bad)
pop
add
(bad)
(bad)
(bad)
jmp
add
into
outs
ins
dec
adc
sub
adc
mov
out
fild
cmp
shr
(bad)
(bad)
push
aas
fnstenv
xor
(bad)
scas
push
sbb
mov
xor
aad
sar
dec
dec
out
pop
in
cmps
cmp
stos
jno
push
pop
icebp
das
mov
inc
scas
into
xchg
cwde
fistp
mov
dec
repz
lds
movs
jmp
push
retf
sbb
dec
popa
in
mov
out
mov
add
mov
hlt
(bad)
cmp
xchg
jge
dec
mov
and
push
aas
xor
cld
push
mov
(bad)
lds
add
(bad)
add
test
rcl
push
retf
lods
push
sti
push
sbb
popa
int3
mov
rcr
mov
cmps
mov
push
and
dec
jge
sub
xor
jmp
aaa
xchg
cli
xor
leave
cmp
enter
jbe
dec
popf
jmp
jg
mov
call
mov
mov
pop
jb
ins
jl
mov
js
ror
call
dec
xchg
xchg
shl
loope
add
(bad)
cld
mov
movs
aas
mov
xchg
stos
iret
add
pop
push
out
outs
xor
loope
fistp
gs
mov
mov
cld
and
dec
inc
es
xchg
mov
fadd
outs
out
cmp
or
xchg
in
and
inc
loop
in
aam
push
adc
push
inc
call
inc
popa
inc
call
lock
jp
out
std
into
fidiv
or
ins
mov
jbe
sub
add
xchg
pop
push
sar
jb
js
unpcklps
mov
pop
mov
mov
jbe
cwde
mov
(bad)
call
ins
lods
mov
out
cmp
push
jg
mov
(bad)
jmp
or
sti
or
adc
and
xchg
(bad)
sub
inc
(bad)
test
mov
sbb
aas
and
mov
retf
sti
inc
aas
(bad)
es
add
movs
jne
add
cld
jmp
repz
jae
push
push
push
push
icebp
cmps
jno
add
ins
cmps
push
push
push
add
mov
push
stos
outs
aam
repnz
inc
enter
movs
jmp
out
add
or
loopne
fldenv
scas
jmp
push
or
sbb
sub
cmc
inc
dec
sub
js
scas
dec
(bad)
(bad)
(bad)
jmp
sar
mov
push
in
fucomip
xor
scas
ins
mov
(bad)
data16
add
xor
jmp
lods
sub
aam
fcomi
dec
adc
push
cdq
(bad)
(bad)
mov
inc
aad
ja
shl
dec
icebp
lahf
inc
fild
push
out
jns
(bad)
(bad)
(bad)
(bad)
jge
adc
dec
jg
dec
mov
jl
test
pop
sbb
popa
fdivrp
test
xchg
mul
xor
add
inc
jne
add
ss
jne
scas
es
jmp
(bad)
jmp
stos
std
sbb
sub
aas
mov
jmp
pop
das
in
(bad)
mov
mov
jmp
gs
cmps
pop
sti
test
jg
aas
push
cmps
and
fisttp
pop
and
push
test
(bad)
jmp
iret
cmp
jnp
ret
push
add
fistp
mov
es
inc
cs
sahf
and
int3
mov
ins
xor
pop
scas
imul
out
or
mov
ja
je
lahf
inc
punpckhwd
call
jnp
repnz
(bad)
inc
in
xchg
clc
mov
cmp
scas
ins
jmp
ja
xor
lock
inc
inc
mov
gs
pop
sub
jmp
push
mov
adc
sub
adc
xlat
mov
sub
(bad)
dec
ins
pop
loope
jmp
(bad)
(bad)
(bad)
(bad)
mov
add
dec
dec
mov
mov
inc
and
loop
hlt
test
loope
(bad)
jmp
movs
mov
mov
inc
pop
push
inc
xchg
or
in
xchg
fistp
fmul
stos
aad
cli
jp
xchg
adc
inc
in
fsub
movs
xchg
sub
dec
aaa
call
jge
jle
jp
pop
pop
int3
pop
ins
xor
call
aad
push
push
dec
stos
pop
dec
test
push
ins
inc
push
push
pop
dec
imul
xor
imul
jno
cmps
shl
push
adc
aaa
leave
pop
outs
add
call
mov
xor
pop
dec
jmp
pop
inc
mov
pop
arpl
(bad)
(bad)
jmp
push
scas
add
mov
xlat
std
push
loop
cmps
pop
xor
sbb
mov
cmp
std
push
inc
loopne
adc
fstp
dec
jmp
inc
push
adc
jmp
(bad)
pop
cmp
bswap
imul
mov
xchg
stc
sub
fbld
(bad)
call
call
mov
imul
mov
loopne
sub
je
gs
adc
cmps
cmc
outs
aaa
lods
inc
ins
(bad)
add
cwde
jl
dec
jmp
mov
cmps
sub
shl
js
imul
hlt
call
dec
movs
push
cli
outs
cmps
mov
sub
mov
inc
jmp
mov
movs
fiadd
cli
jg
mov
sbb
mov
inc
mov
movs
ss
lds
pop
aad
imul
xchg
mov
imul
mov
inc
mov
cli
inc
fdivr
mov
and
or
cmp
inc
dec
ins
adc
fwait
test
lods
xchg
ins
adc
scas
fs
add
jecxz
pop
sub
pop
jmp
dec
add
xchg
or
xor
adc
ret
sub
mov
stos
or
add
test
jae
pop
sub
neg
jmp
add
xchg
jmp
cmp
xchg
(bad)
jmp
sub
stos
or
add
dec
mov
lock
mov
gs
pop
fwait
add
shl
push
imul
test
xchg
jg
icebp
push
or
ins
scas
jne
mov
ret
in
leave
adc
mov
cmc
cld
in
push
enter
call
in
dec
inc
push
pop
or
call
mov
scas
mov
cmp
inc
mov
inc
leave
in
out
and
clc
mov
and
sub
cmp
(bad)
dec
and
and
ds
stos
in
cmp
mov
outs
jle
mov
(bad)
jmp
adc
test
ja
xor
inc
test
lods
mov
xchg
call
inc
cmc
pop
hlt
popa
cmps
xchg
add
(bad)
arpl
(bad)
(bad)
jmp
mov
xchg
jg
mov
jge
stos
shl
repnz
or
(bad)
call
cmp
bound
pop
pop
xor
cmp
lods
call
cmp
xchg
inc
and
cmps
in
dec
add
push
(bad)
cli
ins
inc
jns
movs
xchg
mov
sbb
(bad)
(bad)
mov
call
icebp
push
cmps
mov
das
out
cmps
or
retf
mov
(bad)
(bad)
jmp
(bad)
jnp
mov
popa
pop
js
fstp
add
(bad)
call
jb
mov
out
xor
dec
mov
js
movs
(bad)
mov
inc
adc
jl
mov
loopne
add
ins
repz
(bad)
(bad)
fild
inc
call
out
(bad)
stc
addr16
imul
push
cmp
push
cli
in
enter
inc
jo
pop
mov
int3
add
push
sti
(bad)
add
call
dec
xchg
sbb
sub
or
mul
mov
sbb
pop
inc
jbe
mov
aad
push
sub
add
push
cmp
jmp
bnd
or
iret
inc
in
retf
(bad)
mov
ror
call
sbb
std
(bad)
jg
out
push
scas
cmp
add
lods
icebp
xor
mov
dec
and
mov
gs
add
xor
pusha
adc
(bad)
jg
movs
pop
push
xchg
mov
cld
sub
ins
mov
repnz
push
add
fisttp
or
xchg
mov
cmp
iret
call
dec
and
or
sub
inc
jmp
jno
enter
clc
and
call
fs
ds
lods
(bad)
jg
jmp
add
arpl
sbb
and
xchg
(bad)
ja
(bad)
or
push
cmp
call
movs
(bad)
(bad)
call
add
push
jmp
mov
push
dec
cwde
push
adc
(bad)
sub
push
mov
ficom
push
dec
fst
test
retf
inc
xchg
jb
call
add
out
movs
fdivr
cmp
(bad)
(bad)
push
jecxz
jle
imul
sbb
pop
push
movs
es
add
add
icebp
(bad)
jmp
sub
gs
push
xchg
sahf
jmp
js
mov
xchg
out
(bad)
jmp
jecxz
or
adc
ins
loopne
arpl
nop
push
adc
shl
jmp
inc
fist
movs
pop
add
add
and
sbb
rcr
or
mov
add
mov
xchg
jmp
loope
adc
cmp
or
int
inc
sub
xor
and
icebp
in
and
sar
(bad)
int
sbb
out
jg
dec
mov
(bad)
pop
shr
push
sar
and
inc
jmp
xchg
fld
clc
dec
mov
gs
or
sbb
sub
jo
js
pop
push
test
in
cli
sub
lock
or
sbb
and
sbb
dec
outs
mov
inc
mov
inc
mov
xchg
mov
sbb
xchg
jle
shr
sbb
lock
and
and
(bad)
aad
sub
clc
pop
cwde
into
stos
pop
xchg
add
rol
add
or
xor
and
outs
or
inc
add
inc
int
add
pop
cld
inc
inc
nop
mov
xacquire
cld
jmp
sbb
fldcw
inc
push
cs
push
cwde
cmp
arpl
or
in
xor
ss
mov
enter
(bad)
(bad)
jmp
xor
cdq
repnz
scas
mov
push
(bad)
sbb
or
(bad)
into
sbb
or
(bad)
aas
and
sahf
sbb
and
dec
ins
test
aad
fidivr
test
mov
sub
mov
das
cli
aas
mov
and
movs
push
outs
ror
in
rcl
cmp
call
inc
int3
mov
sahf
xchg
bswap
cld
xor
xchg
cs
scas
retf
sub
scas
mov
xchg
jge
mov
sub
and
call
test
imul
nop
mov
dec
push
xchg
pusha
and
inc
inc
add
fcomip
and
mov
jp
jb
test
outs
or
movs
(bad)
cmps
scas
cs
adc
sbb
cmp
mov
mov
inc
mov
sub
imul
jmp
retf
inc
add
add
stos
cmp
lds
call
sub
int3
std
sbb
pop
scas
add
mov
mov
jne
cwde
imul
unpcklps
gs
adc
jle
jmp
mov
add
mov
ds
loop
in
rol
leave
pushf
or
retf
mov
sbb
and
sub
aas
mov
pop
setns
aas
in
out
mov
pop
je
out
fstp
and
inc
pop
adc
push
shl
call
int3
or
sar
inc
jmp
leave
ret
movs
pop
ins
pop
(bad)
jmp
mov
movs
scas
pop
in
dec
sub
sub
xchg
sahf
rcl
jmp
mov
adc
xor
inc
(bad)
fisubr
scas
add
test
(bad)
mov
jnp
stos
pusha
push
xor
xchg
inc
retf
xlat
cmps
cmc
psrad
mov
(bad)
(bad)
jmp
int
xor
dec
les
outs
mov
call
mov
outs
and
in
add
dec
aad
cmp
push
rcl
pop
dec
retf
sbb
(bad)
(bad)
jg
pop
cmp
jp
mov
or
addr16
add
sti
daa
xor
xor
cmps
xor
ins
std
jns
std
les
xchg
and
es
(bad)
(bad)
(bad)
cmp
out
cmps
js
push
cmp
popa
arpl
jo
dec
jmp
adc
(bad)
jg
adc
frstor
sub
(bad)
fisubr
or
cmp
es
sbb
aaa
ffreep
cmps
fwait
addr16
cmp
pop
dec
xchg
cmp
addr16
sbb
push
(bad)
fild
sbb
in
cmps
aas
or
jb
sub
inc
fisttp
mov
clc
mov
(bad)
jg
mov
push
fs
add
dec
scas
lahf
es
ins
mov
mov
jmp
pop
pop
scas
mov
adc
lods
and
loope
mov
mov
(bad)
dec
bnd
imul
mov
adc
cli
jb
leave
jg
(bad)
cmp
imul
movs
das
inc
mov
pop
xor
mov
(bad)
(bad)
out
mov
jmp
mov
mov
inc
mov
pushf
fdiv
out
icebp
add
lea
mov
and
mov
adc
(bad)
dec
jmp
mov
scas
mov
cmp
sbb
mov
scas
xor
push
mov
xchg
mov
call
jmp
push
movs
adc
retf
(bad)
inc
outs
push
cmps
jne
stos
in
dec
xchg
dec
push
sub
cmp
(bad)
fcmovbe
stos
loop
(bad)
aas
mov
or
mov
pop
push
mov
call
imul
or
(bad)
jmp
pop
mov
and
dec
pop
ja
mov
fwait
test
add
inc
push
cmp
call
inc
push
movs
data16
cmps
call
xor
cmp
std
stc
inc
(bad)
repnz
sbb
mov
pslld
fldenv
push
cmps
enter
into
iret
retf
cld
dec
iret
add
dec
sub
jmp
dec
inc
in
mov
gs
pop
mov
xor
jp
push
xchg
orps
add
push
fidivr
mov
jb
(bad)
jmp
fwait
hlt
(bad)
enter
(bad)
mov
jno
outs
sti
push
aad
dec
jg
adc
repz
cdq
or
add
pop
lock
fst
inc
(bad)
call
iret
sub
fisubr
jo
sbb
mov
add
mov
xchg
jb
cdq
arpl
sar
or
cmps
movs
es
jne
fmul
xchg
and
in
dec
(bad)
data16
in
leave
sbb
fstp
(bad)
jg
push
xchg
arpl
push
stc
xchg
add
push
mov
add
mov
int
add
pop
in
aad
clc
mov
pop
jne
(bad)
(bad)
jg
fwait
movs
lea
cmps
jnp
cmp
in
jo
and
retf
lea
mov
add
sti
(bad)
aas
adc
repz
bound
sub
adc
cmc
pop
adc
pop
mov
or
dec
(bad)
pop
mov
cdq
add
lahf
repz
ret
add
(bad)
fcomip
mov
mov
daa
mov
in
cs
addr16
cdq
lock
(bad)
(bad)
(bad)
call
jno
sub
jle
icebp
das
jo
jecxz
xchg
sbb
xor
enter
scas
test
sub
or
add
dec
loopne
aas
mov
pop
add
jmp
sahf
je
xor
call
das
das
lods
imul
loopne
cld
and
js
sub
lahf
inc
test
mov
hlt
out
sbb
sub
sbb
jge
scas
stc
into
add
mov
ret
daa
(bad)
jg
add
call
in
xchg
sbb
push
mov
sub
mov
mov
sbb
popa
loop
and
push
xchg
clc
stos
(bad)
(bad)
leave
inc
cdq
sbb
cli
(bad)
call
lods
aad
mov
aad
and
sub
sbb
es
cld
inc
mov
add
(bad)
cmp
jp
jmp
add
in
mov
fisub
in
out
(bad)
jmp
scas
add
pop
mov
pop
jp
test
loope
outs
and
cmc
(bad)
inc
sbb
adc
fidivr
test
cwde
(bad)
jmp
gs
adc
sbb
sbb
sub
sbb
jb
sti
push
sub
jge
cmp
dec
aas
jg
pop
adc
mov
inc
jmp
push
add
mov
cdq
add
mov
or
(bad)
(bad)
(bad)
rol
in
mov
sbb
push
cmps
int
repnz
add
jl
push
movs
lods
aas
clc
cmps
mov
sub
sti
mov
(bad)
(bad)
in
sbb
xchg
mov
lods
xchg
(bad)
and
xchg
inc
or
stc
retf
or
pop
push
jae
movs
cmp
cwde
xor
mov
(bad)
(bad)
jg
add
loop
addr16
retf
mov
icebp
gs
mov
jge
add
or
xlat
jg
repz
rcl
in
mov
cmp
stc
xchg
fild
clc
(bad)
call
jno
loopne
fidivr
add
sbb
popf
and
xchg
pop
dec
add
push
es
aas
out
xor
lods
cdq
jnp
dec
add
pusha
and
fadd
loopne
pop
repz
jns
das
add
(bad)
dec
pop
mov
leave
shr
sahf
dec
stc
xlat
add
(bad)
adc
lea
jb
push
adc
push
ret
aam
push
mov
mov
sub
(bad)
(bad)
call
jmp
loop
adc
pop
xor
dec
cmp
call
dec
add
popf
mov
mov
(bad)
push
push
and
cmp
and
stc
retf
jnp
imul
arpl
outs
(bad)
jmp
xor
jns
mov
(bad)
pop
add
xchg
mov
imul
(bad)
push
ror
pop
mov
iret
add
cld
ret
inc
pop
movs
(bad)
jg
add
mov
adc
lods
or
add
cld
(bad)
fild
adc
sub
jb
ds
dec
retf
scas
in
in
sub
add
mov
(bad)
jmp
es
inc
in
cli
fcomip
sub
cli
aas
mov
cmps
xchg
scas
or
fld
add
jl
xor
loopne
mov
add
das
inc
fstp
bound
sbb
adc
jmp
shl
or
mov
xchg
scas
push
mov
ins
in
leave
cmp
jb
(bad)
es
(bad)
cmp
sub
arpl
addr16
cli
std
push
fsubr
aas
dec
mov
sbb
dec
mov
mov
(bad)
and
repnz
add
lock
and
clc
call
clc
outs
mov
push
sbb
push
fs
dec
dec
sahf
test
pushf
cs
stc
movs
popf
sub
shl
into
scas
push
call
inc
test
(bad)
aas
(bad)
cdq
out
xchg
shl
test
adc
cdq
arpl
(bad)
jg
mov
or
mov
xchg
xor
lds
test
leave
hlt
outs
inc
jmp
out
cmp
ds
push
mov
or
or
lods
shr
enter
adc
jmp
out
stc
mov
mov
cmp
pop
mov
ror
retf
inc
int3
jge
mov
adc
cmps
rcl
test
dec
(bad)
(bad)
pop
add
sbb
push
or
call
adc
retf
dec
rcr
movs
call
xchg
cli
push
(bad)
mov
cwde
or
jecxz
arpl
xor
mov
mov
lds
(bad)
push
cmps
arpl
sbb
bound
xchg
cld
movs
in
pop
hlt
dec
xchg
call
sub
mov
mov
dec
dec
jmp
loope
pop
test
lahf
mov
std
movs
adc
loop
fwait
call
cmc
sbb
jmp
and
cli
jmp
shl
dec
push
cmp
stos
movs
adc
jle
jmp
xchg
call
mov
loopne
popa
sbb
mov
out
gs
xchg
pop
test
(bad)
(bad)
jmp
add
ja
xchg
cs
mov
(bad)
ins
dec
sahf
jmp
xor
pop
xor
push
push
dec
jg
test
xor
fisttp
xchg
and
xchg
mov
fdivr
mov
popa
(bad)
cli
mov
mov
mov
repnz
pop
dec
mov
pop
jmp
stos
out
jmp
add
and
or
pop
jmp
push
dec
xchg
cmps
rcl
(bad)
(bad)
(bad)
mov
test
sbb
ins
inc
ret
jbe
sub
mov
mov
jnp
test
xor
repnz
(bad)
(bad)
(bad)
ficom
fldcw
jmp
pop
daa
sub
lahf
mov
push
xor
pusha
aas
xor
add
(bad)
leave
inc
out
aaa
(bad)
lock
dec
shl
mov
and
lods
xor
(bad)
aas
sbb
adc
dec
aas
mov
dec
jmp
pop
cmp
sbb
inc
shr
nop
imul
mov
add
adc
xchg
pop
push
mov
(bad)
inc
(bad)
push
in
(bad)
pop
adc
jb
sub
push
cld
dec
sub
les
xor
push
ins
retf
adc
pusha
jnp
bound
(bad)
aas
xchg
adc
loop
inc
(bad)
push
xchg
mov
das
mov
push
loope
fimul
popf
jmp
add
push
(bad)
(bad)
dec
inc
in
aaa
cmp
aaa
sbb
aaa
dec
xchg
push
cdq
push
js
mov
pop
sub
cmp
add
jmp
inc
lds
jmp
mov
sbb
add
sub
sbb
pop
sub
int
cmp
in
ret
mov
adc
mov
test
or
mov
mov
(bad)
mov
push
daa
add
inc
mov
data16
cli
iret
or
(bad)
(bad)
jmp
in
sar
ss
mov
jl
rol
out
push
imul
pop
jns
mov
(bad)
lods
sbb
jno
mov
gs
lods
push
sbb
push
nop
and
dec
cdq
cwde
xchg
adc
js
fisub
xchg
and
xchg
mov
movs
adc
add
std
stos
fcomip
(bad)
jmp
cmp
lahf
leave
(bad)
stos
jo
dec
dec
popa
push
xor
mov
(bad)
inc
mov
ins
sub
mov
fdivr
data16
int
iret
int3
shl
pop
xor
call
mov
jne
cs
jmp
mov
repnz
mov
dec
lods
enter
fbstp
test
in
xchg
fdivrp
mov
xchg
and
pop
mov
arpl
(bad)
(bad)
jmp
push
out
call
or
sahf
aas
in
iret
or
aas
cmps
and
mov
jmp
enter
daa
js
pop
out
std
fld
sub
mov
inc
add
jecxz
es
sbb
cmps
jp
push
push
aaa
cld
(bad)
push
retf
push
sti
inc
jp
stos
loope
pop
xor
mov
cli
nop
call
jge
sbb
sbb
jns
jge
aad
mov
mov
sti
dec
lock
push
adc
stos
out
xchg
nop
int3
lods
fcom
mov
cmps
mov
aad
sar
fcmovbe
(bad)
(bad)
jmp
inc
cwde
push
jmp
and
cmp
into
jnp
test
ja
adc
in
and
or
fistp
xor
fs
jne
out
dec
std
fistp
or
clc
inc
in
mov
jg
ds
cmp
mov
mov
into
ret
lock
sar
or
adc
out
cli
jg
xor
mul
jmp
and
or
lahf
adc
mov
adc
cld
sbb
(bad)
jg
ret
movs
xchg
and
cmp
into
popf
dec
and
repnz
out
push
sbb
mov
pop
aam
movq
push
or
call
cmp
or
(bad)
jmp
lods
retf
mov
out
mov
jmp
int3
gs
stos
dec
sub
push
push
and
jae
sbb
call
(bad)
mov
mov
shr
jns
jle
fld
add
retf
jmp
fiadd
sti
or
mov
outs
sbb
(bad)
(bad)
(bad)
jle
enter
in
adc
out
sbb
(bad)
(bad)
aaa
jo
inc
xchg
cmp
in
je
jmp
add
shl
push
xlat
xor
xor
add
sbb
and
imul
ins
shl
retf
jmp
xor
cmps
popa
adc
mov
mov
cmp
sub
lock
xchg
sbb
(bad)
(bad)
(bad)
(bad)
jns
sub
(bad)
cmp
out
lds
lea
call
push
out
lods
fdiv
sub
cmp
pop
in
jecxz
(bad)
jg
sbb
cwde
fbld
sub
call
mov
jne
out
nop
mov
dec
(bad)
mov
or
movs
mov
call
xor
cld
dec
daa
add
daa
(bad)
mov
and
pop
je
scas
sub
jno
stos
inc
xor
pop
dec
mov
ins
and
pop
out
dec
int3
mov
push
inc
pop
dec
jmp
and
jle
add
out
clc
stos
outs
mov
sbb
ss
xor
pop
add
(bad)
jmp
into
mov
dec
sub
daa
aas
sbb
push
adc
in
xor
gs
xor
jmp
clc
nop
(bad)
stc
push
xchg
and
jb
mov
retf
iret
jb
in
sub
xchg
dec
sti
mov
jno
mov
(bad)
(bad)
jg
aaa
pop
stc
(bad)
aam
ds
adc
test
bound
stc
retf
imul
xor
addr16
inc
adc
adc
mov
test
jecxz
(bad)
(bad)
jmp
rcl
mov
loop
lds
scas
xchg
imul
cmp
popa
mov
xor
sbb
push
and
jge
fistp
dec
dec
push
call
inc
sbb
lahf
stos
inc
jecxz
adc
cmp
lods
(bad)
jg
sti
iret
inc
fcomp
sbb
sub
fist
sub
xchg
daa
ins
addr16
fwait
push
push
lock
aad
and
jbe
test
enter
les
dec
inc
jp
es
fcmove
push
das
arpl
sub
sub
(bad)
(bad)
inc
mov
or
dec
mov
call
mov
pop
mov
mov
aaa
pop
imul
adc
cmps
push
jmp
imul
and
or
adc
lock
xchg
sar
mov
jg
ins
std
icebp
cmp
dec
test
mov
dec
test
jb
ins
fwait
push
icebp
enter
repz
repnz
lods
mov
dec
iret
add
aas
(bad)
mov
fmul
sub
stos
jle
sub
movs
xor
push
test
and
lea
in
push
jle
sahf
mov
icebp
jg
push
push
add
dec
fidivr
daa
movs
or
sahf
call
sub
pop
out
out
jp
sbb
push
jmp
inc
aad
hlt
jmp
outs
loope
xor
data16
jo
es
jns
cli
jg
arpl
lods
gs
and
sbb
cs
(bad)
(bad)
call
sub
sub
sbb
sbb
outs
pop
cmp
mov
lahf
aaa
xor
mov
(bad)
call
mov
cmp
ja
(bad)
(bad)
(bad)
inc
pop
jmp
pop
jecxz
leave
mov
in
jp
scas
sub
add
nop
test
xchg
push
enter
imul
scas
sbb
int3
int3
jb
mov
ins
jge
pop
cmp
or
sub
fcom
xor
mov
pop
daa
adc
mov
movs
or
movs
push
std
mov
push
aam
ror
mov
jmp
popa
dec
stos
adc
and
(bad)
push
fsubr
pop
lock
sub
jmp
(bad)
jo
dec
aas
sub
fcomp
and
(bad)
(bad)
jmp
out
int3
dec
adc
lods
dec
addr16
daa
pop
scas
sub
add
cmp
iret
adc
movs
lods
or
adc
(bad)
mov
xchg
and
jae
cmp
js
xchg
stos
lahf
or
push
std
pop
add
dec
or
stos
add
cmp
sti
imul
ins
inc
and
repz
aas
aad
movs
mov
stos
bt
dec
fiadd
lods
pop
test
in
call
pop
xchg
mov
movs
dec
inc
fcomip
jg
push
push
adc
mov
addr16
jmp
pop
xor
push
sub
repz
cmp
or
frstor
std
movs
inc
dec
clc
sbb
cmp
jne
jmp
dec
adc
push
pop
jmp
mov
and
(bad)
jmp
and
mov
jbe
sub
es
add
cld
or
fstp
aad
(bad)
or
pop
push
sub
test
add
inc
std
jmp
stos
sub
mov
mov
inc
and
sub
xlat
ret
fs
xchg
cmp
add
scas
cmp
call
add
lock
and
stos
iret
jl
sahf
leave
jbe
into
enter
(bad)
aas
sub
stos
mov
mov
mov
repz
mov
scas
inc
gs
pop
(bad)
(bad)
(bad)
jmp
lock
pushf
jmp
xor
or
sub
mov
inc
cwde
sub
out
jae
mov
(bad)
(bad)
(bad)
(bad)
sti
xchg
jp
pop
jecxz
fs
dec
push
pusha
pop
mov
mov
cmp
and
ins
push
inc
enter
stos
(bad)
dec
test
push
jmp
call
sub
jns
outs
pop
or
pop
dec
gs
lods
(bad)
(bad)
sahf
add
cld
(bad)
(bad)
push
aaa
push
mov
adc
int
hlt
and
clc
jmp
jmp
push
push
scas
into
mov
fld
retf
mov
(bad)
aas
pushf
(bad)
and
sub
mov
imul
adc
push
jmp
(bad)
jg
jle
cwde
and
into
xchg
dec
push
adc
cs
(bad)
(bad)
jmp
mul
outs
mov
cmp
cmp
(bad)
cli
(bad)
push
pop
stos
mov
ds
mov
call
mov
icebp
sbb
call
mov
cs
xchg
add
repnz
(bad)
mov
out
movs
mov
adc
push
loopne
mov
pushf
pop
mov
out
in
ja
(bad)
(bad)
(bad)
jmp
fsubr
aad
repnz
ins
cwde
mov
aad
and
mov
sbb
lds
or
and
rcr
ds
(bad)
jg
rcr
(bad)
test
push
jne
loope
imul
ficomp
mov
test
fcomip
lods
repz
or
jns
or
mov
jnp
dec
sub
call
sbb
fs
pop
scas
fisttp
cs
(bad)
(bad)
(bad)
jmp
ja
retf
loop
frstor
scas
push
in
retf
addr16
scas
stos
sbb
call
(bad)
push
fwait
push
lods
(bad)
adc
cli
mov
fnsave
lods
mov
mov
xor
out
call
cs
cs
mov
scas
clc
sar
push
push
out
pop
cmc
jb
repnz
cmp
rol
add
stos
fstp
(bad)
cmp
sub
jmp
scas
fs
mov
retf
sbb
pushf
out
out
lds
push
pop
mov
call
add
xchg
add
sub
lods
loope
inc
fs
sub
xchg
rol
mov
fnsetpm(287
sahf
pop
push
lods
dec
test
daa
add
(bad)
jmp
stos
xchg
leave
retf
popa
pop
outs
and
aas
adc
jmp
out
clc
(bad)
jg
and
mov
mov
aas
and
cld
out
push
out
mov
and
jg
add
dec
out
jae
dec
push
dec
mov
in
mov
imul
jg
dec
adc
xchg
sub
adc
fld
and
in
in
mov
push
(bad)
(bad)
(bad)
aas
dec
jns
sub
test
cld
ret
mov
addr16
out
mov
dec
cmp
sub
jmp
and
call
inc
inc
cmp
in
cmps
(bad)
fsubrp
bound
dec
xchg
aam
add
mov
and
call
dec
add
jmp
(bad)
(bad)
mov
in
ror
nop
cmp
aas
mov
pop
jnp
sub
imul
out
push
adc
cmp
(bad)
out
clc
dec
lods
stos
sub
sbb
mov
repnz
jmp
in
mov
inc
mov
mov
call
(bad)
jo
sbb
(bad)
and
sub
push
(bad)
(bad)
inc
imul
sbb
xchg
jmp
in
data16
mov
mov
gs
xor
daa
and
ins
stos
adc
push
inc
lods
fnstsw
or
or
(bad)
stos
js
scas
xlat
mov
sti
popa
(bad)
dec
fidiv
(bad)
(bad)
(bad)
call
cmps
enter
jne
sbb
iret
xchg
pop
xchg
adc
cmp
imul
(bad)
inc
call
xor
add
loop
(bad)
mov
or
sub
scas
leave
daa
pop
movs
(bad)
(bad)
(bad)
call
je
mov
ds
loope
sub
gs
fidiv
cmps
out
push
mov
mov
(bad)
(bad)
jmp
jns
mov
sub
push
test
add
jne
ins
je
fmul
sub
(bad)
(bad)
jmp
(bad)
lods
cld
lahf
aad
jecxz
ss
push
pop
ja
in
mov
push
mov
pop
sub
mov
out
stos
scas
cs
cmp
iret
lods
dec
xchg
and
fsub
test
mov
xor
ret
fbstp
sbb
push
loop
jmp
cli
aaa
xchg
push
xchg
lahf
adc
mov
jns
(bad)
dec
mov
adc
or
cmp
sub
and
push
dec
imul
xchg
adc
xchg
clc
sti
psubusb
push
sbb
cmp
sar
jge
inc
push
jg
lods
mov
and
rol
(bad)
(bad)
inc
push
mov
xor
dec
call
std
stos
(bad)
cmp
cmp
mov
(bad)
dec
cs
gs
dec
push
jmp
test
xchg
stc
retf
jp
hlt
fwait
sub
jg
add
test
xchg
inc
into
push
idiv
jl
add
cmp
data16
es
arpl
xor
jne
fwait
into
dec
jmp
dec
in
(bad)
stos
aas
ret
xor
cmp
cdq
inc
mov
push
push
cld
(bad)
jmp
cmps
jo
dec
jb
push
mov
mov
stos
pop
retf
test
jne
inc
mov
imul
rol
movs
mov
ds
call
cmp
cwde
sub
and
ret
mov
xor
adc
and
outs
jg
(bad)
dec
dec
jae
dec
and
fist
fdivr
jg
or
jnp
lahf
ins
dec
sbb
sub
jbe
(bad)
pop
jle
mov
and
ss
sub
push
fcmovb
(bad)
leave
stos
call
sbb
or
and
dec
mov
mov
(bad)
dec
mov
mov
inc
mov
scas
pop
xor
fldcw
ror
cmc
(bad)
fisttp
movs
test
aad
or
and
ret
fsqrt
(bad)
jno
movs
or
std
fcom
dec
(bad)
(bad)
(bad)
call
cs
jae
fisttp
xlat
fsubr
jl
and
cli
mov
ret
dec
mov
mov
call
push
inc
sub
pop
pop
aam
(bad)
in
addr16
fdivr
das
cwde
mov
pop
popa
jmp
jne
das
call
jl
mov
scas
fisttp
lea
or
sbb
adc
loopne
jmp
iret
leave
stos
xlat
cmp
add
in
jecxz
(bad)
cmps
scas
in
gs
push
(bad)
(bad)
jmp
mov
(bad)
outs
in
sub
popf
cmp
sub
(bad)
ret
scas
out
inc
jmp
movs
push
mov
outs
clc
das
sub
and
retf
inc
iret
mov
inc
in
add
(bad)
(bad)
fist
jl
ins
and
bound
add
inc
lea
xor
mov
push
sub
out
adc
jmp
or
sub
mov
retf
add
jmp
mov
(bad)
(bad)
(bad)
scas
push
adc
rcr
addr16
fucom
pop
aaa
sub
adc
dec
cdq
dec
cmps
out
rol
jp
add
cwde
clc
push
call
push
leave
xchg
adc
(bad)
jmp
xlat
xor
ins
daa
dec
push
pushf
cmp
adc
inc
(bad)
call
cmp
push
ins
test
mov
ret
sbb
push
dec
(bad)
aas
add
add
daa
sbb
jmp
pop
(bad)
clc
call
inc
pusha
stos
(bad)
(bad)
(bad)
jmp
sub
mov
std
sbb
(bad)
dec
enter
mov
cmps
dec
fwait
inc
inc
jae
loop
and
mov
sub
test
js
lahf
std
push
adc
add
loopne
add
lock
aaa
mov
loopne
out
daa
jbe
mov
xchg
stos
inc
rol
sahf
cld
add
stc
or
cld
mov
repz
xor
lock
add
or
inc
cld
test
cmc
dec
in
or
push
xchg
dec
movs
icebp
jo
mov
mov
sub
into
lods
sub
sub
cmp
scas
or
test
fidiv
aas
cmc
jne
sbb
shr
cld
and
push
scas
cli
call
or
mov
adc
gs
cmps
lods
iret
je
pop
or
push
aad
mov
ret
dec
xchg
data16
fisubr
test
or
sub
call
retf
data16
dec
jmp
cli
push
push
mov
dec
cwde
nop
std
loopne
push
add
(bad)
dec
jp
out
arpl
push
test
mov
jmp
mov
(bad)
aas
cmps
jnp
das
jle
test
clc
cmps
sub
fwait
add
(bad)
(bad)
(bad)
(bad)
mov
inc
sar
or
cmps
mov
xchg
loopne
stos
out
imul
pushf
repz
dec
call
or
je
dec
add
mov
or
test
adc
int3
cwde
test
cmp
mov
push
jmp
cld
inc
push
cwde
fsubr
dec
fisub
imul
jb
and
mov
int
stc
add
(bad)
mov
iret
sub
loop
mov
cwde
lahf
sub
call
xchg
imul
adc
retf
clc
(bad)
(bad)
call
mov
jb
jp
lods
and
mov
push
sahf
loope
push
out
nop
daa
jmp
gs
scas
fst
or
sbb
add
lahf
dec
or
add
xchg
jno
fsubr
pop
(bad)
stc
inc
or
sbb
jno
dec
rcr
and
rep
das
xchg
inc
dec
(bad)
jg
jo
mov
loope
clc
test
and
and
pop
into
inc
push
outs
sub
adc
push
xchg
jns
repnz
test
(bad)
fdiv
pop
sbb
hlt
(bad)
jg
adc
test
dec
mov
add
(bad)
(bad)
jg
push
iret
pop
xor
test
clc
hlt
ror
xchg
adc
mov
fisubr
dec
mov
test
out
enter
cmp
std
out
sbb
stc
mov
pop
fstp
mov
(bad)
(bad)
(bad)
ds
sub
mov
ins
iret
push
cld
add
inc
cmps
and
stos
adc
push
adc
imul
(bad)
(bad)
cmp
and
jl
stc
mov
mov
sub
lea
out
add
mov
pop
lods
(bad)
jmp
mov
adc
int
(bad)
mov
fisttp
test
pop
sub
outs
cld
xchg
stos
pop
loop
loop
jmp
adc
ret
pop
mov
(bad)
call
or
(bad)
mov
sub
(bad)
(bad)
jmp
clc
xor
popf
mov
xor
sbb
(bad)
ins
(bad)
pop
in
push
vpcomuw
mov
clc
lods
cdq
and
scas
(bad)
(bad)
jg
mov
bound
inc
jo
fiadd
(bad)
(bad)
(bad)
cmp
std
push
add
jns
or
ss
movs
retf
adc
jle
sbb
test
jg
adc
movs
mov
mov
mov
sub
mov
sbb
movs
shr
(bad)
(bad)
inc
rol
into
into
xchg
outs
out
lds
cmps
fucomip
inc
or
ins
jmp
add
mov
add
adc
add
out
loopne
inc
scas
push
xchg
mov
mov
mov
in
jmp
jnp
popa
fild
je
lea
dec
or
pop
data16
sub
movs
(bad)
call
mov
test
es
je
push
(bad)
jmp
lea
adc
jle
push
mov
mov
das
sar
pavgw
test
movs
jmp
adc
call
cmps
or
push
push
xchg
(bad)
(bad)
aas
push
dec
mov
int3
pop
ret
pop
cmps
inc
lods
pop
std
xor
cmp
mov
sub
dec
pop
ins
fdivr
dec
test
and
add
adc
(bad)
(bad)
mov
xchg
(bad)
ss
xchg
pop
mov
jmp
sub
sub
shl
cli
jge
pop
sbb
leave
jg
or
arpl
sbb
aas
loope
mov
mov
std
out
call
fldenv
lods
std
fdivr
adc
icebp
adc
repz
jae
test
sbb
(bad)
inc
mov
jmp
xlat
loope
push
cmps
mov
sub
aas
cld
(bad)
(bad)
push
cmpxchg
cmp
gs
sbb
(bad)
in
sub
test
movs
(bad)
aaa
test
or
cmp
call
loope
xor
mov
push
mov
out
xor
out
(bad)
rol
jl
xor
jp
sbb
cmps
mov
xchg
sbb
lock
adc
fdiv
fwait
and
add
sti
or
scas
inc
and
inc
or
sub
sub
aam
in
push
sbb
cmp
fwait
call
cwde
loopne
shl
(bad)
mov
pusha
jnp
mov
jb
outs
pop
and
fbld
in
ja
jg
adc
add
fdivr
mov
(bad)
inc
rcr
or
out
add
sbb
dec
outs
(bad)
(bad)
(bad)
(bad)
cmp
fist
lods
loopne
or
mov
mov
test
shr
mov
(bad)
(bad)
fbstp
sub
sbb
mov
movs
jmp
dec
hlt
add
fsub
out
add
mov
add
jmp
or
movs
xchg
(bad)
mov
hlt
inc
push
push
or
enter
dec
jle
jge
push
jl
(bad)
out
clc
das
lock
pusha
cmp
sbb
movs
xchg
and
mov
(bad)
dec
add
pop
cs
stos
add
or
loopne
int
ficom
movs
popa
mov
loop
test
mov
sub
mov
(bad)
jmp
popa
mov
loop
into
js
mov
rol
inc
popf
out
and
and
pop
or
(bad)
adc
pop
cmp
call
aad
push
daa
sub
inc
xchg
jmp
dec
loope
in
int3
(bad)
(bad)
(bad)
jmp
xchg
fdiv
(bad)
in
push
fidiv
dec
add
or
scas
cmp
add
shr
jg
(bad)
(bad)
ins
aas
adc
add
dec
clc
outs
mov
push
xor
shr
test
mov
hlt
(bad)
mov
mov
xchg
sbb
imul
(bad)
jg
mov
xchg
cwde
cmp
retf
movs
mov
push
xor
repnz
jg
push
jmp
mov
leave
(bad)
sub
cmp
sub
(bad)
(bad)
(bad)
jge
fidiv
jl
fild
push
jge
adc
outs
outs
fs
iret
loope
adc
lds
lds
scas
pop
sbb
cmp
jge
sbb
adc
pcmpgtw
xchg
test
pop
jle
inc
push
xor
or
add
pushf
scas
xor
(bad)
jmp
cli
cmp
aad
call
dec
mov
inc
sub
mov
mov
push
fdivr
adc
lahf
and
pop
loop
bound
inc
in
sar
jmp
in
mov
xor
xchg
adc
outs
dec
cmp
mov
inc
mov
stos
into
mov
lea
mov
push
shl
clc
ins
mov
dec
jmp
mov
clc
cld
call
add
aas
loope
clc
(bad)
push
js
jg
jmp
into
fs
es
shr
outs
push
std
xor
lock
xchg
xchg
mov
scas
enter
cld
sub
out
shr
dec
es
mov
jmp
inc
jne
pop
fstp
inc
scas
and
mov
pusha
call
pop
test
pop
mov
inc
mov
cmp
mov
lahf
mov
fbstp
retf
dec
mov
mov
iret
jecxz
adc
out
clc
or
push
pop
icebp
test
ss
jmp
inc
out
fiadd
push
clc
xor
and
dec
mov
pop
push
in
sub
xchg
sbb
or
(bad)
call
sahf
scas
push
dec
adc
gs
jmp
mov
sub
(bad)
sti
inc
sbb
push
cmp
sub
into
stos
repnz
push
cmps
inc
std
pop
xor
retf
xchg
mov
cmp
stos
jmp
or
ret
add
sbb
sub
clc
xor
(bad)
(bad)
push
inc
pop
iret
jmp
imul
inc
rol
pusha
xchg
out
mov
(bad)
(bad)
dec
std
movs
adc
inc
jmp
(bad)
sti
dec
cmps
loopne
inc
xor
jg
add
push
adc
loopne
lods
cmp
jb
and
pop
call
pop
lock
or
jge
scas
aad
sbb
jne
fist
add
pop
sub
fadd
sub
(bad)
(bad)
call
jg
sub
pusha
cmp
xchg
stos
movs
data16
push
int3
rol
pop
call
add
call
cli
adc
xchg
out
or
aaa
sbb
outs
jmp
push
cmp
sub
mov
jle
inc
jp
mov
imul
in
test
mov
adc
(bad)
xchg
adc
mov
add
pop
cmps
push
add
and
mov
and
mov
(bad)
call
aad
(bad)
stos
push
iret
or
mov
lds
inc
es
mov
and
repnz
out
adc
pusha
retf
mov
sbb
or
sbb
mov
mov
aad
(bad)
call
mov
in
sbb
sub
xchg
lea
sub
cmp
fisub
adc
rcl
add
jmp
or
(bad)
(bad)
jmp
push
stc
mov
fnstsw
into
push
and
mov
int
leave
jp
outs
jb
mov
into
jmp
das
mov
push
add
into
(bad)
inc
jns
icebp
push
int
adc
xor
push
add
jmp
clc
(bad)
(bad)
jmp
jl
lahf
aas
mov
pop
pop
xor
sub
and
scas
int3
push
mov
imul
mov
stos
mov
cmp
cmps
inc
(bad)
frstor
lock
cmps
in
cmp
(bad)
dec
lods
sub
test
fdivr
repz
test
ins
lahf
pop
xchg
(bad)
test
(bad)
(bad)
call
das
sub
sub
dec
fwait
ja
popa
mov
adc
jb
(bad)
(bad)
inc
pop
loopne
es
call
dec
cmp
jp
mov
mov
mov
es
(bad)
inc
ss
ret
loope
es
fs
mov
pop
xor
mov
mov
in
aam
std
jmp
pop
(bad)
(bad)
jmp
movs
out
xor
das
jmp
dec
cmp
push
int3
mov
aas
lds
mov
dec
ret
mov
rcl
stos
popf
mov
xchg
or
cli
adc
cmps
mov
nop
retf
dec
add
push
add
(bad)
call
test
push
dec
xor
push
mov
stos
jmp
mov
inc
shr
lods
jle
cld
cli
mov
jmp
cmps
cmp
mov
or
fstp
fwait
add
sub
stc
arpl
cld
sbb
mov
mov
shl
mov
sub
sub
(bad)
(bad)
dec
fwait
push
mov
adc
mov
mov
dec
push
sub
pop
inc
xchg
stos
mov
push
sbb
xor
sar
(bad)
mov
imul
cli
cs
sbb
push
cmp
(bad)
(bad)
cmp
sub
mov
mov
dec
adc
cmps
fcmove
enter
jns
sar
(bad)
fcmovnb
adc
cld
and
jge
pop
cmp
xlat
aam
sub
pop
push
enter
(bad)
jg
mov
int3
or
jb
push
adc
outs
(bad)
stc
push
dec
mov
inc
stos
(bad)
cmp
sub
sbb
fsubr
xchg
cdq
mov
test
or
xor
call
or
arpl
(bad)
mov
push
push
ins
scas
call
clc
stc
lahf
pop
xchg
rcr
mov
add
(bad)
cdq
rcr
test
nop
mov
ss
fdiv
mov
inc
(bad)
cwde
cmp
(bad)
mov
mov
(bad)
jmp
addr16
sar
cmp
loopne
mov
add
sbb
(bad)
sbb
outs
fbld
push
xor
repz
adc
mov
loopne
mov
sbb
mov
pushf
retf
mov
jp
cmp
daa
dec
loop
jle
jecxz
mov
bound
(bad)
(bad)
jg
out
sbb
ret
ret
mov
cmps
mov
add
push
ffreep
add
jmp
mov
stos
mov
sub
iret
mov
retf
inc
xor
lea
mov
mov
call
push
mov
mov
inc
mov
mov
sub
das
xchg
cmc
cmp
mov
clc
mov
movs
xlat
or
push
stos
xchg
add
mov
cld
repz
scas
call
jo
inc
pop
mov
ss
inc
add
push
adc
pushf
pop
and
test
dec
outs
sbb
cmp
(bad)
(bad)
jg
idiv
repnz
jmp
ja
outs
jmp
movs
pop
rcr
jne
or
mov
sbb
call
xchg
mov
mov
cdq
or
(bad)
(bad)
fbld
call
arpl
dec
lock
xchg
mov
mov
(bad)
jmp
jmp
sar
add
sbb
mov
mov
dec
jb
pop
std
(bad)
(bad)
cmp
xor
adc
adc
jp
mov
iret
jle
mov
and
jmp
inc
scas
jl
lods
movs
das
xor
pop
leave
std
pop
(bad)
mov
push
pop
dec
pop
lock
dec
pop
push
movs
mov
sbb
out
mov
aad
(bad)
xchg
movs
mov
cmp
jmp
jmp
push
out
out
inc
cli
xchg
fdivr
cmp
push
icebp
jmp
xor
mov
and
cmps
adc
push
and
movs
cdq
outs
or
outs
cmp
cdq
dec
movs
stos
push
call
cld
jmp
fldlg2
nop
and
dec
int3
jge
in
push
retf
sbb
int
mov
hlt
jmp
mov
daa
mov
dec
fld
movs
call
cld
dec
mov
sbb
std
clc
push
xor
nop
sbb
ds
mov
lods
or
(bad)
(bad)
(bad)
call
add
sbb
pop
ds
repnz
mov
stc
pop
into
add
cli
ret
clc
(bad)
(bad)
inc
cld
pop
cmp
sub
imul
mov
enter
sub
call
fst
sub
das
cmp
sbb
stos
movs
xor
js
aad
call
sti
xor
mov
cld
mov
(bad)
call
fwait
inc
imul
cmp
loop
push
and
inc
test
fsub
scas
add
(bad)
(bad)
jmp
inc
cmp
aas
dec
pop
fst
ds
sub
adc
fcos
mov
add
rcr
jmp
add
sbb
fistp
hlt
clc
mov
scas
sub
dec
xchg
mov
add
add
sub
fcomp
addr16
mov
push
ins
cmp
dec
loope
in
sbb
in
iret
dec
(bad)
xchg
sbb
in
(bad)
dec
rep
out
push
in
push
aad
jl
adc
push
cmps
inc
cmc
sub
push
or
adc
and
hlt
(bad)
(bad)
jmp
pop
dec
stos
stos
(bad)
in
mov
adc
je
mov
push
add
cmp
loop
mov
bound
cmp
jb
shr
pop
gs
(bad)
(bad)
(bad)
push
mov
dec
adc
adc
or
mov
mov
jmp
loopne
out
mov
push
cmp
std
mov
sti
cmp
je
pop
adc
js
push
xchg
mov
movs
movs
push
jg
add
pop
push
out
push
je
(bad)
(bad)
cmp
cdq
arpl
mov
retf
or
aas
jmp
mov
or
add
jmp
clc
dec
(bad)
cmps
imul
dec
push
add
sub
fistp
mov
push
retf
sbb
std
and
enter
int
cmp
inc
and
adc
add
pop
push
or
pop
fstp
add
pop
movs
ficom
push
xchg
inc
pusha
lock
ins
ficom
cmc
ret
add
stc
(bad)
(bad)
call
mov
loopne
cmp
scas
adc
ins
gs
dec
pop
inc
mov
cld
jp
pop
mov
jb
popa
frstor
out
mov
movs
xchg
shl
call
dec
fsubr
outs
fsubr
pop
inc
cmp
jmp
fcomp
stos
pusha
mov
xchg
mov
loop
cmp
add
pop
lock
leave
or
mov
call
sbb
daa
adc
enter
vsqrtsd
jne
mov
jle
inc
or
pop
cld
pushw
out
xor
pop
test
pop
sbb
or
push
and
lock
call
out
mov
cld
dec
call
loopne
mov
cmps
and
and
in
mov
mov
into
xchg
iret
(bad)
loop
aas
(bad)
jmp
push
lea
jmp
movs
in
cdq
js
dec
fadd
icebp
loop
clc
in
mov
int
hlt
xchg
imul
ins
xchg
movs
mov
(bad)
jg
push
sub
scas
pop
fist
icebp
std
movs
adc
(bad)
pop
sub
xchg
cmp
(bad)
jnp
add
out
mov
shl
(bad)
(bad)
(bad)
movs
(bad)
into
stos
(bad)
or
cmp
dec
sub
mov
or
int
jbe
(bad)
jmp
push
rol
js
dec
jmp
cmp
inc
jmp
sub
sbb
sar
in
call
jge
adc
test
pop
and
add
jmp
std
in
xchg
out
push
call
pusha
jmp
mov
aam
push
jb
mov
int3
sub
imul
add
or
retf
mov
sahf
rcr
(bad)
dec
add
pusha
fnstenv
movs
pop
push
adc
(bad)
dec
mov
std
cmps
or
and
jmp
sub
fwait
dec
lea
pop
or
stos
push
mov
scas
jge
ret
cld
call
fdivr
inc
pop
not
xchg
and
xchg
mov
and
adc
mov
pop
mov
push
daa
cmps
(bad)
(bad)
inc
sbb
and
pop
mov
lds
xchg
loopne
data16
aaa
rcl
retf
gs
(bad)
mov
scas
jmp
or
cmp
inc
pop
sahf
xor
cmps
push
inc
loopne
sbb
mov
xor
sbb
xchg
pop
retf
cmp
jmp
mov
xchg
ss
(bad)
lock
(bad)
dec
imul
mov
mov
int
push
in
cmp
pop
pop
stos
xchg
mov
add
aas
rol
mov
cmp
push
jg
fwait
and
sub
int3
add
sub
push
pop
mov
test
mov
ret
add
sub
jmp
lds
lods
xor
shr
cmps
pop
jb
adc
sbb
loopne
sbb
pop
push
mov
movs
push
add
pop
pop
mov
lds
dec
loop
je
imul
mov
inc
inc
in
retf
fcmovb
push
dec
mov
retf
leave
lods
aaa
pop
push
pop
push
cmp
int
scas
adc
(bad)
call
stc
sbb
xchg
xor
mov
fidiv
or
xchg
push
(bad)
cld
jg
lock
movs
out
dec
repz
cmp
push
inc
mov
mov
mov
inc
mov
sbb
and
call
outs
push
ficom
scas
push
rcr
call
sbb
jge
sub
(bad)
enter
push
jg
lsl
add
dec
movs
or
mov
add
(bad)
(bad)
mov
mov
cmp
sub
daa
lea
sar
pop
adc
pop
(bad)
(bad)
fisttp
push
stos
popf
movs
mov
dec
sar
or
pushf
movs
sub
imul
ja
icebp
lahf
(bad)
(bad)
(bad)
call
fs
mov
stos
sub
addr16
add
push
in
hlt
xor
jmp
xlat
jecxz
in
jmp
loope
add
bound
arpl
(bad)
(bad)
(bad)
jg
mov
jo
mov
enter
pop
retf
sub
sub
mov
add
push
pop
sbb
out
sbb
int
(bad)
jo
nop
stos
fldcw
out
enter
jnp
adc
loope
aad
(bad)
jns
aaa
xor
cld
and
sub
les
sbb
ss
gs
(bad)
scas
cld
jo
push
movs
sub
jg
shl
jns
pop
push
or
jmp
push
add
mov
out
(bad)
mov
xchg
sbb
add
dec
add
and
and
in
push
sub
xchg
(bad)
sbb
fld
dec
loopne
sbb
jmp
test
push
call
or
in
dec
jb
dec
leave
bound
arpl
addr16
(bad)
(bad)
inc
jb
rcr
pop
stos
nop
in
adc
lods
jb
jmp
mov
in
pop
jg
add
xchg
jo
inc
test
mov
(bad)
(bad)
push
or
cmp
dec
rcr
push
ins
adc
enter
and
imul
pop
add
jmp
adc
dec
imul
ror
xor
in
mov
mov
add
add
enter
(bad)
test
push
pop
push
mov
aaa
cwde
inc
fwait
push
dec
stos
cmp
(bad)
(bad)
call
add
popa
ds
into
jbe
ret
cmp
iret
retf
dec
and
pop
sbb
cmps
adc
add
cs
inc
sbb
sahf
or
pop
pop
(bad)
inc
pop
xor
push
mov
call
ins
pop
in
sbb
or
xchg
mov
mov
cli
dec
jno
or
movs
cmp
lea
(bad)
sbb
(bad)
jmp
scas
jmp
jle
push
push
cmps
sbb
add
(bad)
cli
or
das
pop
or
or
pusha
mov
cdq
cli
(bad)
(bad)
call
fmul
xchg
and
jb
adc
add
sub
cli
jmp
xchg
pop
jg
sub
pusha
push
cwde
sahf
scas
retf
xchg
cmps
cld
jmp
aam
jmp
mov
inc
push
xchg
(bad)
dec
adc
jnp
(bad)
das
mov
inc
mov
(bad)
(bad)
js
js
mov
or
adc
cmp
xor
(bad)
dec
cmps
hlt
dec
sub
test
cmp
stos
stc
repz
(bad)
mov
sub
ins
mov
mov
leave
mov
add
mov
pushf
push
popf
inc
sbb
or
pop
sahf
sub
(bad)
jmp
aad
mov
adc
movs
enter
out
ficom
cmc
(bad)
(bad)
push
mov
rcl
(bad)
out
movs
sti
fdiv
loop
faddp
out
(bad)
loop
ret
pop
mov
pop
ins
(bad)
jmp
repnz
std
stos
xchg
imul
or
jmp
mov
or
out
cmp
cmp
xchg
sar
pop
pop
loop
out
ret
(bad)
inc
imul
imul
gs
out
add
loop
pop
add
adc
adc
das
sub
inc
pop
add
xchg
sub
jg
sbb
js
xchg
and
adc
adc
push
mov
sub
clc
inc
aad
xchg
or
jb
test
mov
call
add
and
into
ret
bound
adc
xor
sahf
push
mov
(bad)
jmp
fidiv
jmp
inc
mov
test
mov
jbe
xor
and
xchg
jno
outs
lods
daa
jecxz
iret
scas
sar
(bad)
(bad)
dec
mov
sbb
adc
jmp
test
xor
(bad)
push
repnz
(bad)
sti
dec
xchg
jno
stos
shl
mov
stos
mov
lahf
lods
inc
mov
push
fwait
and
hlt
(bad)
mov
call
imul
scas
add
sbb
int3
inc
ficomp
cmps
add
pop
stc
inc
pop
movs
inc
(bad)
arpl
das
or
add
xchg
xchg
mov
pop
(bad)
(bad)
mov
or
daa
aas
icebp
dec
ret
aam
push
sbb
fwait
cmps
push
cmp
sbb
add
xor
jo
mov
mov
push
mov
cs
jecxz
inc
data16
mov
test
popf
jle
mov
and
cmp
fld
cs
dec
sub
jbe
popf
or
mov
cmc
push
sbb
dec
or
pop
pop
cmp
int3
sar
inc
push
sbb
div
inc
daa
adc
adc
sub
daa
pop
stc
inc
sbb
dec
inc
test
jno
mov
(bad)
jmp
std
cmps
xor
xchg
pop
push
push
jmp
mov
in
(bad)
dec
lock
out
imul
sbb
ret
fcmovb
add
adc
pusha
retf
xchg
jl
adc
(bad)
jg
imul
imul
imul
or
push
xor
mov
xor
push
int3
adc
lods
out
mov
clc
lahf
mov
dec
shr
cmp
sub
dec
(bad)
(bad)
sub
es
popfw
sbb
mov
sub
jmp
add
sub
push
push
sbb
std
(bad)
cmp
and
or
xor
js
push
popa
movs
sbb
sar
adc
adc
stc
mov
or
sti
popa
out
mov
cli
movs
xchg
fimul
jmp
pop
jnp
repz
loope
(bad)
push
test
imul
cs
xchg
das
(bad)
(bad)
jg
push
daa
fisubr
movs
xchg
js
dec
cmp
loop
cli
fwait
lods
(bad)
pop
jg
add
repz
sbb
xor
(bad)
jmp
out
or
sub
sub
push
stos
into
push
(bad)
(bad)
call
cmp
stos
leave
mov
aad
fld
xchg
ret
xor
jp
sub
adc
adc
scas
fsub
mov
imul
mov
adc
in
mov
(bad)
jmp
imul
push
in
push
jg
cmps
outs
stc
cmps
test
jmp
(bad)
(bad)
(bad)
in
retf
mov
cdq
sub
xor
push
push
jne
push
cmp
ror
cwde
(bad)
(bad)
(bad)
jmp
mov
mov
cmps
in
outs
imul
cmp
retf
jnp
inc
pop
(bad)
(bad)
mov
scas
xchg
scas
sbb
add
(bad)
(bad)
call
cmp
in
sub
fwait
shr
mov
cmp
mov
(bad)
(bad)
jnp
adc
fldcw
push
mov
dec
adc
std
pop
test
mov
push
mov
mov
stos
dec
add
add
mov
dec
and
loopne
fbld
push
enter
daa
dec
cmp
xchg
adc
mov
das
xor
and
icebp
(bad)
(bad)
mov
sbb
clc
mov
or
add
imul
das
jnp
mov
sub
scas
pop
les
add
cmps
mov
(bad)
(bad)
(bad)
call
leave
in
xchg
ret
add
mov
arpl
dec
hlt
xor
push
mov
int3
adc
inc
mov
dec
pop
div
adc
jnp
or
sbb
leave
pop
int
out
pushf
(bad)
das
xchg
lods
push
xor
retf
jnp
mov
ror
in
cli
push
std
push
hlt
or
sbb
sti
call
(bad)
call
or
sub
pop
loopne
and
neg
xchg
outs
or
call
push
retf
sub
out
clc
jmp
int3
ins
imul
repz
out
cli
pmaxub
mov
mov
jmp
mov
jge
fiadd
cmp
jge
fistp
aad
cli
jmp
outs
fs
push
inc
dec
data16
sar
xor
mov
sub
out
enter
out
int
loop
(bad)
(bad)
(bad)
fistp
and
or
stos
in
fidivr
or
(bad)
int
push
push
dec
loop
pop
cmp
or
inc
cmc
(bad)
inc
mov
stos
fs
lds
stos
(bad)
rcl
dec
jmp
jle
inc
gs
imul
cmps
call
mov
stos
jecxz
(bad)
call
inc
xchg
stos
pop
stos
cmp
out
and
cli
call
into
xchg
imul
cmps
jmp
jmp
out
mov
mov
scas
addr16
mov
fbld
or
pop
push
in
test
mov
lahf
ins
jmp
jge
push
cmp
mov
dec
xchg
sub
ins
std
add
mov
rcr
mov
cwde
arpl
out
(bad)
stos
(bad)
(bad)
fcomip
sbb
cmp
call
adc
mov
jmp
jmp
data16
sub
mov
clc
(bad)
lods
bnd
add
sub
mov
(bad)
es
mov
push
retf
and
scas
sub
(bad)
call
(bad)
into
or
fcomp
dec
mov
mov
int
out
mov
das
scas
xchg
jmp
lds
dec
jae
mov
scas
pop
inc
or
xchg
loop
clc
push
mov
dec
loopne
daa
sub
int3
jg
mov
jmp
add
sub
call
nop
scas
xchg
mov
jns
jmp
ins
mov
dec
call
sahf
loopne
pop
aad
mov
(bad)
dec
mov
nop
hlt
ffree
xchg
xchg
arpl
mov
mov
cwde
mov
cmp
into
and
or
jmp
pop
in
adc
jecxz
ins
(bad)
movs
xlat
inc
iret
(bad)
(bad)
(bad)
(bad)
call
mov
fcmovu
pop
dec
lods
and
lods
imul
ret
imul
xchg
add
mov
cmp
(bad)
(bad)
(bad)
inc
lea
jge
fdivr
mov
cmp
in
(bad)
sbb
rcl
clc
jmp
loop
sbb
xor
mov
sahf
test
stos
int3
xor
shr
(bad)
(bad)
(bad)
mov
ror
jmp
int
ficomp
ins
scas
push
(bad)
test
or
or
mov
cmp
jmp
sbb
sub
leave
cmp
bound
xchg
mov
out
inc
xchg
and
push
shld
jmp
push
cmp
loopne
(bad)
(bad)
(bad)
jmp
pop
inc
or
sbb
ja
ficomp
(bad)
xchg
aad
mov
daa
test
int3
push
sub
jp
(bad)
(bad)
jmp
adc
xchg
jmp
cld
add
shrd
stos
xchg
movs
or
cwde
(bad)
(bad)
(bad)
jmp
or
cmp
mov
mov
dec
test
out
movs
mov
pop
mov
(bad)
jmp
add
sub
loop
cmp
pop
mov
mov
cmp
(bad)
(bad)
call
mov
or
add
pop
xor
jb
scas
sub
xlat
iret
jbe
push
adc
rcl
push
fiadd
add
cmp
xor
adc
das
outs
inc
xchg
fsub
or
test
push
clc
mov
test
stos
and
rcr
shl
(bad)
(bad)
dec
repnz
jae
xor
hlt
inc
sbb
pushf
imul
out
fsubr
mov
pop
adc
or
push
lahf
popa
imul
xchg
shr
mov
add
adc
dec
xor
lock
add
mov
sbb
scas
cmp
xchg
sar
(bad)
push
xor
mov
xchg
gs
(bad)
fs
scas
arpl
or
call
sbb
pushf
(bad)
mov
dec
xchg
add
mov
dec
shl
fstp
push
or
imul
xchg
sar
stos
mov
and
push
jo
add
rcl
out
lds
push
sbb
and
jb
inc
dec
ds
and
jmp
call
pop
(bad)
mov
retf
(bad)
fsub
adc
mov
mov
sar
dec
and
inc
push
dec
adc
aaa
std
(bad)
call
shr
out
daa
xor
movs
imul
test
call
aaa
(bad)
clc
(bad)
dec
cmp
sbb
out
aas
sub
jmp
jb
inc
cmp
pop
(bad)
(bad)
out
or
sbb
imul
stc
(bad)
fs
inc
adc
(bad)
(bad)
push
xchg
ins
ret
mov
mov
or
cs
in
xlat
call
inc
sub
add
jp
and
mov
test
(bad)
test
push
xor
jmp
(bad)
call
gs
mov
push
fdiv
in
mov
stos
movs
or
das
shl
cwde
(bad)
push
fwait
ds
cmp
sub
sbb
mov
or
lds
sbb
(bad)
mov
outs
mov
sub
adc
pop
push
jae
push
fbstp
ret
cli
xchg
retf
movs
sbb
and
jp
pop
or
ins
in
add
push
rcl
push
movs
adc
fiadd
cld
sub
sar
mov
cmp
sub
ds
mov
retf
call
inc
mov
mov
test
cmc
movs
mov
stc
mov
cmc
call
ficomp
out
imul
test
xchg
out
adc
xchg
scas
ja
call
adc
add
dec
adc
or
lock
sbb
mov
mov
mov
(bad)
fisttp
sub
xor
cmps
lea
inc
sub
call
dec
cmp
jge
test
aas
sar
fidivr
mov
mov
mov
jmp
dec
fldcw
mov
dec
hlt
ds
bound
mov
cmp
ret
mov
sbb
loop
out
aaa
das
jp
imul
imul
inc
or
mov
(bad)
jp
mov
dec
mov
test
sub
jmp
xor
mov
sbb
imul
movs
cmp
mov
push
std
in
adc
call
push
movs
mov
cli
push
mov
ins
xchg
std
cs
sbb
sbb
ins
dec
mov
(bad)
call
xchg
in
repz
data16
xchg
sub
and
icebp
outs
in
fwait
sbb
dec
pop
minps
mov
(bad)
jge
cdq
and
jg
ins
sub
jmp
add
jg
fidiv
fimul
xchg
into
inc
pop
call
mov
xor
(bad)
call
push
jno
xchg
jp
mov
lods
movs
fcomp
stos
jns
bound
out
xchg
mov
les
mov
cld
mov
inc
cmps
mov
jmp
out
cli
outs
dec
bound
add
(bad)
call
inc
(bad)
mov
in
and
cli
shl
lods
out
(bad)
inc
cmp
retf
outs
imul
cmps
or
(bad)
lahf
imul
mov
inc
pop
loop
push
stos
dec
pop
jo
call
jmp
outs
cmps
sahf
and
cli
in
cmp
(bad)
(bad)
mov
shl
in
push
test
cli
lea
mov
call
repz
jecxz
(bad)
(bad)
mov
cs
and
in
sbb
or
pop
(bad)
(bad)
mov
jne
fnstsw
ror
fisttp
pop
addr16
dec
dec
inc
mov
xchg
lods
mov
int
jecxz
adc
dec
out
pop
mov
stos
mov
xchg
std
pusha
add
repnz
or
int
pop
dec
sbb
jnp
popa
mov
fidivr
jne
(bad)
adc
mov
and
adc
sar
in
call
(bad)
jg
psubusb
push
mov
jo
mov
inc
aaa
stos
push
adc
fcom
(bad)
cdq
mov
jb
(bad)
(bad)
bound
outs
dec
sahf
adc
cld
inc
jmp
popa
push
add
pusha
call
js
icebp
shl
(bad)
cmp
movs
push
test
retf
imul
mov
ins
mov
xchg
cdq
mov
call
int3
cmp
in
adc
jb
or
push
ja
mov
mov
retf
data16
lock
std
push
repnz
sub
jle
push
xchg
or
mov
jge
adc
test
cmps
cmp
(bad)
fistp
dec
ret
leave
jl
aas
shr
test
js
xchg
lds
mov
xchg
dec
add
(bad)
jmp
ins
rcr
sub
and
shr
add
cmp
ficom
sub
inc
pop
mov
in
retf
ja
aaa
pop
mov
mov
sbb
mov
mov
retf
and
xor
inc
pop
repnz
add
xchg
and
and
xor
cmps
lods
jg
ins
pop
out
xor
add
ins
lahf
imul
ins
jmp
cmps
lods
(bad)
jmp
and
leave
and
adc
(bad)
mov
stc
movs
xlat
cmps
mov
pop
sbb
push
jno
in
(bad)
out
loope
cmc
(bad)
jmp
out
xor
arpl
and
aas
mov
pop
mov
jb
jno
jmp
jae
and
stos
xchg
fidiv
dec
ret
add
xchg
xor
xchg
stos
xchg
(bad)
jmp
je
mov
push
jmp
retf
(bad)
fs
(bad)
jg
push
sub
adc
xchg
sar
jmp
xchg
nop
pop
pop
shl
rcl
jmp
div
xchg
cs
inc
and
xor
or
adc
stc
addr16
push
lahf
add
cli
retf
cdq
movs
cwde
xchg
test
mov
(bad)
outs
push
pop
jo
dec
jns
inc
cmps
lods
and
gs
adc
mov
js
les
lahf
imul
pop
mov
(bad)
mov
std
(bad)
cld
xor
jo
movs
retf
into
inc
popa
xor
sbb
jp
popf
imul
jno
cmp
jmp
mov
movs
lods
cdq
jge
dec
sbb
repnz
add
ins
pop
sub
fidiv
cmp
mov
or
or
stos
daa
in
mov
rcl
push
test
shr
jmp
imul
in
push
ficom
pop
jb
shl
or
fimul
push
(bad)
xor
(bad)
pop
gs
xchg
adc
repnz
call
retf
mov
js
aaa
dec
jne
sbb
stc
data16
sub
push
mov
mov
xchg
icebp
jno
out
ror
mov
jbe
rcl
das
add
push
cmp
(bad)
cmp
mov
sbb
jp
ins
je
test
jmp
ins
test
cdq
sti
movs
int3
add
dec
pop
outs
je
mov
ins
xor
into
mov
jle
pop
enter
jne
int
cmc
addr16
nop
cmp
adc
adc
repnz
jp
mov
shl
dec
iret
ins
ss
call
movs
mov
xchg
cpuid
cs
data16
out
jle
mov
in
cdq
mov
or
jl
retf
pop
aas
rcl
jmp
cmps
add
retf
inc
sub
inc
stos
add
data16
imul
ins
std
cmp
xchg
mov
loope
pop
push
(bad)
cmp
add
mov
stos
jl
mov
mov
jle
sbb
pop
push
add
mov
rcr
add
scas
xor
retf
loopne
sub
(bad)
jmp
inc
xchg
js
outs
sub
mov
mov
in
sti
mov
jge
stos
popa
lock
cmc
dec
pop
inc
jmp
mov
bound
xchg
test
inc
call
jmp
adc
cli
push
and
add
cmc
dec
std
pop
push
mov
out
arpl
data16
adc
outs
cmps
lods
sbb
or
mov
jmp
jmp
daa
inc
ds
sub
mov
icebp
mov
shr
adc
data16
call
fwait
or
push
ja
sbb
imul
enter
test
pop
jno
fiadd
ret
aas
in
adc
jne
lods
aaa
jp
cli
mov
cmps
loope
and
fisttp
xchg
mov
ins
movs
out
mov
call
data16
cmps
mov
out
add
jnp
xchg
jmp
pusha
and
das
mov
cmps
cmp
data16
jl
test
ja
xchg
rcl
(bad)
aas
or
add
lea
movs
popa
out
out
jo
stc
(bad)
(bad)
aas
xchg
enter
push
sbb
pop
stos
cwde
add
test
xchg
sbb
daa
cmps
stos
push
js
aaa
inc
dec
pop
(bad)
pop
es
sbb
iret
mov
stos
sub
das
or
rcl
xor
pop
mov
mov
movs
aam
pop
hlt
fwait
imul
ds
sub
dec
pop
das
xor
sbb
cdq
out
test
jl
fidivr
xor
pop
call
(bad)
aas
scas
mov
movs
stos
sub
div
sbb
mov
lods
fild
call
cmp
inc
adc
mov
jnp
lods
xchg
loope
stos
(bad)
fwait
aas
pop
push
xor
mov
std
js
neg
push
loopne
xor
adc
dec
pop
jmp
push
sub
icebp
ja
lods
scas
dec
xchg
jns
arpl
xchg
int
into
ss
cmps
lods
repz
test
pusha
inc
pop
movs
jbe
dec
iret
mov
jg
mov
mov
add
lods
mov
dec
in
loopne
into
(bad)
pusha
movs
add
xchg
dec
dec
call
lahf
aas
cmp
test
jecxz
mov
aaa
pop
ins
cli
and
(bad)
adc
dec
out
shrd
rcl
call
inc
pop
xor
call
fwait
adc
jmp
imul
cdq
xchg
mov
(bad)
stc
lahf
imul
mov
in
stc
(bad)
aas
sbb
fstp
loope
inc
mov
imul
xchg
jle
jecxz
(bad)
mov
pushf
retf
inc
test
mov
pop
mov
cmps
sub
int
sbb
int
js
xor
in
aam
inc
in
ja
sbb
(bad)
(bad)
dec
loop
test
leave
jge
mov
push
adc
inc
xor
int3
jns
and
stos
cmp
or
pop
cld
sti
dec
cmps
inc
imul
and
sti
sub
dec
jne
or
or
jmp
int3
mov
in
lods
lds
lods
call
(bad)
ins
ds
mov
dec
mov
mov
push
dec
mov
mov
and
mov
xor
jp
lods
(bad)
fcomip
mov
jno
sbb
ret
sub
adc
dec
pop
jg
jo
mov
xchg
(bad)
js
push
lds
mov
jno
xchg
aaa
js
and
add
jb
nop
dec
adc
dec
jnp
test
jmp
stos
mov
sub
and
ret
sub
cmp
push
ret
cli
mov
xor
sbb
retf
popa
add
mov
ins
std
sub
les
aad
jle
cmps
sub
movs
sbb
(bad)
(bad)
dec
jb
mov
loope
icebp
push
in
out
cmp
repz
cdq
mov
neg
out
and
enter
and
mov
mov
ins
imul
xor
push
add
jbe
mov
pusha
cmps
lods
xor
jg
fcmovu
xchg
jns
jne
jno
jle
fs
aas
and
mov
fs
nop
pop
stc
dec
gs
push
rcr
dec
(bad)
cli
push
mov
imul
int
cs
inc
push
xchg
xor
mov
pop
mov
ins
std
lahf
imul
sub
ja
mov
xor
add
add
je
inc
push
mov
call
lss
test
sub
(bad)
jle
jo
das
jne
sub
adc
test
xchg
xor
repz
push
adc
jmp
stos
(bad)
push
enter
or
clc
jmp
jl
or
sbb
and
adc
call
or
cmps
jmp
call
call
das
dec
push
xchg
dec
test
push
gs
or
shr
add
inc
repz
mov
lods
push
rcl
push
shl
mov
rcl
xchg
sub
sar
fisttp
dec
cmp
xchg
call
ins
jno
and
add
sub
cmps
lods
outs
clc
jecxz
jo
pop
xor
sbb
stc
int
jne
push
add
xchg
fisub
call
iret
mov
mov
ret
ja
es
push
sar
sub
int
ret
dec
mov
sub
inc
pop
inc
cli
xchg
aas
shl
outs
aad
stos
jno
push
cs
jo
in
rcl
out
jge
mov
jmp
cli
bound
mov
push
cmps
sub
jmp
or
gs
push
(bad)
(bad)
(bad)
in
sub
sbb
retf
scas
add
dec
in
repnz
ror
or
inc
ret
or
nop
push
dec
pop
inc
jb
aam
and
scas
mov
addr16
dec
sub
dec
xor
mov
cmps
xor
inc
sub
inc
mov
arpl
mov
ret
movs
imul
jmp
rcl
dec
rol
dec
adc
or
cdq
imul
add
push
loopne
imul
call
xchg
(bad)
pop
mov
mov
pop
fwait
dec
mov
sub
cmc
jmp
je
adc
addr16
sbb
in
add
cmps
lods
(bad)
jae
jg
sub
jg
mov
retf
sub
dec
stos
pop
repnz
cwde
sbb
(bad)
jmp
adc
xchg
in
call
sti
dec
stos
jnp
scas
movs
pushf
pop
push
shr
lea
adc
dec
push
cmc
mov
div
cmp
repz
fstp
inc
in
call
pop
repnz
mov
das
sub
push
enter
jmp
(bad)
(bad)
jmp
test
jno
nop
call
iret
lahf
or
lock
test
in
jno
and
repz
mov
aas
mov
(bad)
fistp
xchg
jmp
(bad)
repz
std
sbb
add
push
(bad)
(bad)
inc
sahf
retf
je
lea
std
enter
lock
mov
(bad)
aas
imul
inc
mov
jmp
cld
addr16
retf
ror
adc
les
mov
jle
mov
stos
fidiv
lock
int
sbb
xchg
xor
(bad)
aas
repnz
push
sub
mov
inc
pop
imul
jg
dec
(bad)
(bad)
(bad)
(bad)
jle
rcl
jnp
push
div
(bad)
mov
dec
mov
cld
pop
dec
aam
leave
lahf
pop
sub
(bad)
adc
fcomip
xchg
iret
ffreep
rol
pop
mov
push
shr
nop
mov
cdq
das
push
sub
jmp
add
sbb
(bad)
(bad)
(bad)
(bad)
js
retf
js
adc
mov
lods
jp
in
xchg
mov
fucomi
xchg
xor
(bad)
cdq
cld
movs
mov
adc
jl
mov
pop
xor
cmp
retf
jge
sub
push
mov
add
xchg
cmp
xchg
dec
test
mov
or
xchg
add
daa
lods
jmp
call
call
add
retf
loop
imul
xor
mov
cmc
iret
test
jmp
cmp
js
push
in
ss
push
int3
push
ret
scas
(bad)
inc
or
movs
mov
lahf
add
and
(bad)
(bad)
inc
cmps
add
jb
cmps
cmp
js
inc
scas
(bad)
stos
(bad)
jmp
jae
test
lock
cli
push
pop
ficom
mov
mov
adc
mov
xor
ret
push
hlt
mov
retf
inc
loop
mov
push
or
add
int3
bound
add
sub
mov
cmp
add
adc
or
pop
and
xchg
pusha
test
cmp
inc
pop
and
out
retf
dec
scas
and
sbb
cli
(bad)
jg
sub
sub
call
jge
fld
add
mov
cmp
add
pop
add
(bad)
cmp
shl
jmp
cmp
fsub
(bad)
push
sbb
mov
jmp
sub
test
xchg
lahf
test
mov
add
(bad)
(bad)
call
pop
inc
sub
scas
sbb
adc
and
scas
sub
enter
stos
ret
cmp
ret
push
fnstsw
std
(bad)
adc
sbb
dec
jne
sar
call
je
cmp
das
(bad)
(bad)
fbstp
shr
dec
sar
jmp
or
dec
dec
stc
mov
xchg
and
outs
(bad)
(bad)
(bad)
(bad)
inc
xchg
(bad)
dec
sbb
adc
ror
mov
sub
xor
rcr
mov
and
cmp
fisttp
ss
dec
xor
add
call
(bad)
jg
dec
mov
sub
jg
sbb
mov
inc
lds
jo
cli
jg
and
cwde
dec
pusha
imul
out
test
movs
lods
pop
cmp
lods
aas
mov
jmp
sub
imul
lods
jle
(bad)
fwait
(bad)
(bad)
cmp
and
push
into
dec
pop
pop
rcl
test
(bad)
call
dec
stos
lea
cmp
and
pop
mov
dec
mov
and
dec
in
or
imul
sub
hlt
cmp
sub
loope
jmp
inc
cmps
mov
(bad)
(bad)
jmp
pop
ds
dec
cli
xlat
or
dec
jo
ret
lods
iret
lods
or
xor
(bad)
(bad)
(bad)
jmp
adc
stos
fsubr
aad
push
push
xor
cmp
in
test
mov
jbe
je
cmps
cmp
and
pop
sbb
jg
(bad)
jmp
mov
push
mov
xchg
sub
scas
mov
mov
daa
stos
sub
mov
and
(bad)
and
sbb
mov
xlat
jno
pop
ds
outs
pop
leave
retf
push
mov
pop
add
jge
adc
mov
ds
xchg
push
stos
dec
clc
mov
or
movs
add
imul
ja
add
jmp
dec
prefetch
sbb
shl
std
mov
sub
inc
sbb
call
(bad)
call
mul
jbe
xchg
addr16
imul
xchg
sbb
inc
call
fdivr
mov
(bad)
xor
fadd
sar
pop
shl
(bad)
(bad)
fcomip
sbb
sub
ins
pop
mov
jge
lock
popf
lahf
adc
fmulp
js
(bad)
(bad)
(bad)
(bad)
fisttp
ror
jmp
retf
sbb
xchg
in
sub
std
xor
call
div
push
test
aad
lds
push
(bad)
(bad)
(bad)
inc
adc
xchg
ins
test
cmp
mov
jecxz
pop
hlt
sub
cmp
popf
test
mov
sub
ds
std
call
neg
xchg
adc
repnz
xor
aad
mov
sar
cmps
out
pop
xor
ret
movs
xchg
dec
sub
leave
push
outs
aas
sub
or
lock
repnz
(bad)
(bad)
jae
in
jmp
cli
fcomip
mov
push
out
xor
adc
cmp
arpl
out
test
mov
jo
(bad)
sub
(bad)
mov
mov
mov
pop
inc
dec
pushf
shr
rcr
(bad)
push
shr
daa
sbb
inc
int
cmp
cdq
jle
and
xlat
mov
mov
scas
ds
test
rcl
mov
enter
cli
jmp
clc
mov
mov
shl
call
dec
cld
cli
sbb
iret
add
sahf
mov
or
call
int3
cld
(bad)
jns
fld
rcr
cmp
jg
movs
jl
sbb
dec
xor
gs
call
jb
cld
sbb
jge
das
or
xchg
and
stos
sub
cmp
je
add
mov
mov
mov
(bad)
jmp
call
mov
mov
sub
sbb
ror
pop
or
jmp
scas
xchg
inc
daa
sub
inc
aaa
jmp
out
stos
cmps
pusha
es
pop
mov
xchg
les
lods
imul
out
in
dec
xchg
(bad)
dec
std
sub
loop
call
cmps
dec
and
push
jb
fidivr
dec
adc
(bad)
stc
push
int3
leave
mov
arpl
es
fucomip
addr16
cmp
sub
(bad)
dec
rcl
pop
pop
sahf
push
fnstsw
sub
in
daa
jb
dec
in
icebp
adc
(bad)
dec
jae
pop
stc
stos
and
ret
imul
cmp
lods
fisttp
(bad)
mov
int3
sbb
or
out
or
sahf
fs
clc
jmp
iret
arpl
(bad)
cwde
xchg
xor
push
mov
jge
sbb
pop
add
jg
into
(bad)
call
mov
pop
lods
jb
cli
fcomp
push
movs
jg
test
ret
add
sbb
movs
xchg
mov
call
fidivr
or
test
stos
mov
pop
mov
mov
push
adc
(bad)
(bad)
inc
add
sub
sub
jbe
iret
sbb
xchg
xor
sub
test
shl
ss
sbb
(bad)
fcomip
mov
stos
xchg
cmp
jmp
fisubr
and
scas
push
dec
push
mov
loope
jl
sub
cmps
adc
sub
mov
mov
xor
test
inc
mov
into
and
lods
leave
outs
cli
(bad)
(bad)
mov
push
sbb
mov
sbb
mov
xchg
mov
push
stos
pop
cmp
inc
rol
test
xchg
xchg
push
mov
sbb
movs
xor
push
call
dec
ret
adc
fs
xor
es
hlt
mov
sub
js
out
mov
push
cs
out
scas
in
xor
mov
dec
dec
mov
xchg
aad
(bad)
das
retf
shl
call
aas
ins
loop
retf
xor
jmp
es
frstor
sub
inc
daa
sub
push
out
mov
scas
and
mov
daa
xchg
pop
and
mov
(bad)
(bad)
call
test
mov
int
xchg
sub
shl
test
and
test
jmp
sub
add
push
loop
aaa
jmp
sbb
test
push
or
sbb
dec
inc
bound
pop
pop
(bad)
(bad)
(bad)
(bad)
out
push
sub
sub
mov
sub
push
icebp
dec
dec
call
sub
movs
das
mov
mov
bound
in
push
sub
inc
adc
ss
mov
stos
nop
push
movs
dec
xchg
mov
push
clc
pop
push
push
dec
push
loop
fyl2x
fidivr
jbe
push
and
and
cmp
nop
inc
xchg
and
call
(bad)
push
imul
(bad)
call
cwde
(bad)
(bad)
(bad)
dec
adc
mov
cli
popa
add
cmp
mov
mov
or
aaa
mov
loopne
fwait
add
(bad)
push
pop
jmp
aam
retf
cmc
ds
fisubr
clc
(bad)
jg
scas
jg
mov
cmp
outs
pop
(bad)
addr16
call
rol
inc
into
scas
loope
mov
call
call
pop
rol
ds
mov
mov
jmp
and
xlat
dec
dec
push
(bad)
fcom
mov
adc
test
das
push
test
pop
push
(bad)
(bad)
jmp
mov
popf
imul
enter
std
(bad)
push
add
pop
stos
imul
out
push
xlat
out
jmp
(bad)
jg
jmp
xor
cdq
push
lods
push
jl
dec
pop
dec
lods
adc
jno
push
lods
add
lods
fild
fimul
jle
inc
xchg
pushf
(bad)
sub
dec
inc
lods
scas
mov
mov
into
xchg
scas
scas
dec
pop
xor
(bad)
out
xchg
mov
inc
push
mov
and
stos
or
inc
adc
and
jmp
cld
jnp
(bad)
(bad)
dec
(bad)
in
out
sub
iret
push
jecxz
sub
(bad)
scas
fst
imul
stos
dec
cmps
call
jl
xchg
inc
stos
in
pusha
and
or
fdiv
sbb
addr16
mov
pop
cwde
sub
mov
xor
std
(bad)
fld
nop
cli
ficomp
cli
repnz
lock
shl
jno
ja
fwait
or
addr16
out
cmp
mov
loopne
sub
out
test
(bad)
(bad)
(bad)
jp
imul
sbb
retf
mov
pop
repnz
stos
addr16
in
add
in
lods
(bad)
(bad)
fbld
inc
aaa
cmp
cmc
push
jecxz
sub
dec
stos
repz
outs
sub
pushf
retf
sub
mov
and
sub
jns
(bad)
cmp
xchg
bound
mov
test
loop
jae
(bad)
(bad)
call
mov
or
sar
dec
repnz
test
mov
mov
(bad)
push
fstp
cdq
jno
and
js
cdq
dec
(bad)
jg
bound
xor
in
lahf
push
jns
mov
ins
add
adc
xchg
xor
lea
sbb
inc
jecxz
(bad)
(bad)
jnp
or
xchg
aaa
ret
sbb
mov
shl
and
push
adc
das
clc
pop
popa
push
into
cmp
ins
sar
push
(bad)
call
aad
scas
cmc
or
sub
call
out
ja
mov
push
sub
pop
or
ins
dec
pop
or
call
jmp
jnp
and
jmp
ffreep
stos
mov
iret
dec
movs
inc
cmp
cli
fwait
jb
mov
mov
pop
mov
(bad)
xchg
dec
push
cmp
std
leave
lods
dec
(bad)
(bad)
jmp
mov
cld
imul
loope
mov
xchg
fsubr
cs
aas
sbb
push
push
mov
(bad)
push
dec
les
call
shr
jne
addr16
outs
rol
ss
int
cmp
sbb
data16
mov
je
cmps
fs
jnp
fiadd
pusha
(bad)
aas
sbb
mov
or
xchg
jecxz
daa
(bad)
mov
inc
hlt
rol
fdivr
ins
lea
fwait
stos
out
inc
push
dec
mov
rol
jns
pushf
mov
(bad)
jg
lea
and
and
mov
(bad)
(bad)
mov
fisubr
mov
xor
mov
addr16
retf
data16
push
std
mov
outs
push
(bad)
sbb
call
and
scas
inc
sub
mov
mov
es
test
nop
jg
(bad)
(bad)
(bad)
inc
or
xabort
sbb
sar
mov
sbb
or
jg
push
lahf
imul
ss
jle
push
push
cmp
add
jmp
dec
cmp
add
mov
imul
pop
sub
out
or
dec
fdivr
and
cmp
cmc
lea
outs
mov
jl
(bad)
(bad)
(bad)
(bad)
call
addr16
clc
ss
adc
test
out
(bad)
push
loopne
jmp
sbb
push
xchg
sahf
stc
adc
stos
in
push
xchg
fcomp
(bad)
push
outs
or
mov
out
mov
in
or
in
dec
shr
(bad)
(bad)
out
xor
dec
and
jle
(bad)
cs
call
jp
aam
(bad)
push
dec
xchg
loop
dec
int3
dec
(bad)
dec
out
inc
mov
dec
mov
dec
xor
out
lock
fisubr
pop
shl
repnz
ficom
pushf
stos
call
xor
outs
jmp
call
ins
sbb
mov
push
cmps
lods
aad
push
int3
mov
pusha
jle
pop
dec
retf
cmps
mov
aaa
(bad)
(bad)
call
ret
stos
test
mov
jmp
scas
push
mov
loope
adc
pop
dec
outs
inc
retf
sbb
push
(bad)
int
pushf
push
dec
mov
cli
test
push
fld
ins
dec
in
xchg
push
adc
(bad)
push
cdq
js
jl
(bad)
jle
push
pop
jnp
sub
lds
mov
ins
bound
sahf
retf
xchg
pop
sub
je
fldl2t
pop
pop
ins
sub
aas
fcmovne
sbb
push
push
in
test
int3
test
ins
jmp
mov
test
dec
add
fisttp
pushf
test
mov
es
(bad)
jmp
pop
mov
mov
scas
add
pop
popa
mov
imul
(bad)
call
inc
call
dec
jmp
cli
stos
clc
(bad)
or
loop
retf
(bad)
mov
ss
cmps
stos
fcmovbe
jae
lea
je
ins
jmp
cld
call
js
popf
cld
call
pop
pop
dec
stos
cwde
inc
mov
je
pop
sub
pop
xchg
or
test
or
fld
lods
inc
shr
les
imul
imul
or
adc
xchg
rcr
imul
pop
std
int3
(bad)
pushf
lods
cmp
xor
icebp
aas
aam
addr16
clc
push
add
push
js
cdq
shl
fdivr
mov
or
stos
pop
fcomp
leave
hlt
cmp
lods
sbb
iret
pushf
pop
xchg
xchg
push
mov
das
pop
retf
aam
add
push
cmp
jbe
ss
(bad)
push
xor
push
or
xchg
test
ins
pop
inc
cmps
retf
sub
mov
fisub
rcl
retf
pop
mov
push
add
mov
into
xchg
scas
dec
stc
mov
pop
scas
xchg
inc
aaa
dec
stos
lea
mov
push
lods
mov
outs
mov
push
lods
daa
movs
push
and
dec
or
(bad)
mov
in
pop
leave
pop
cmps
mov
movs
jmp
mov
js
addr16
sbb
outs
dec
out
(bad)
cmc
jg
dec
test
inc
pop
mov
mov
pusha
ficomp
or
cmps
xchg
sbb
rol
mov
mov
ja
jg
dec
std
xchg
stos
pop
adc
sti
enter
mov
(bad)
call
mov
mov
lods
out
stos
push
shl
rcl
loope
pushf
mov
jg
dec
jb
sbb
pop
sbb
mov
iret
fcom
and
pop
icebp
out
pop
(bad)
(bad)
jmp
int
(bad)
test
push
mov
pop
mov
aas
fsub
clc
call
fadd
aad
sbb
jnp
pushf
(bad)
(bad)
(bad)
mov
jo
rcr
add
push
pop
xlat
fdivr
clc
ret
push
ja
mov
pop
pop
fdiv
idiv
inc
icebp
jl
shl
(bad)
mov
pop
hlt
jl
add
je
je
mov
outs
call
push
adc
rcr
(bad)
std
sahf
sbb
outs
ja
(bad)
add
aam
jno
xlat
pop
or
(bad)
and
jp
mov
(bad)
mov
nop
fst
cwde
int
lods
push
fsubr
nop
jo
xchg
lahf
(bad)
cmps
cwde
outs
cmps
test
mov
retf
jle
mov
and
jmp
jg
add
fdivr
mov
stos
inc
sti
(bad)
mov
sahf
cli
fs
pop
fadd
xor
mov
pop
imul
mov
mov
dec
add
mov
push
fwait
sbb
shl
sub
jp
sbb
fisubr
retf
cli
(bad)
sar
jb
mov
pop
jg
mov
or
mov
and
mov
mov
pop
pop
mov
push
pop
push
clc
pop
lock
push
mov
cld
nop
mov
jmp
xlat
mov
jmp
push
aad
push
mov
jno
pop
push
fist
sub
xor
jle
or
aad
xlat
or
push
inc
cmps
into
dec
fmul
mov
xchg
add
ins
push
clc
pushf
sbb
adc
ret
jg
test
inc
or
xchg
or
jl
scas
fcomp
retf
or
fstp
pop
stos
pop
and
pop
fistp
inc
rcr
mov
cdq
test
mov
cdq
lds
add
pop
inc
fst
call
fcomip
rcl
ja
jno
adc
cmps
adc
cld
push
dec
pop
or
(bad)
jmp
and
cdq
xlat
jecxz
sbb
fisttp
jl
or
mov
jmp
mov
test
mov
or
pop
sbb
add
jmp
push
stos
cld
in
ja
mov
cmps
jmp
pop
in
(bad)
xchg
(bad)
in
dec
sbb
push
test
dec
pop
pop
mov
ins
sar
fwait
dec
loopne
sbb
push
mov
or
jno
pop
dec
sub
movs
cmps
xchg
mov
jns
mov
int
(bad)
jmp
xchg
cmps
cmps
ror
dec
inc
dec
sbb
fst
dec
(bad)
push
dec
stc
cmps
pop
stos
adc
(bad)
sub
test
dec
(bad)
dec
inc
push
mov
out
fidivr
mov
(bad)
push
jecxz
inc
(bad)
pop
fstp
mov
sti
and
sbb
rcl
mov
mov
add
sub
(bad)
dec
clc
cli
adc
mov
ins
cli
loop
pop
mov
repnz
push
sbb
mov
in
call
cmps
outs
sti
sbb
push
mov
push
xor
shl
(bad)
in
xor
mov
test
dec
adc
inc
cs
je
popf
jmp
inc
mov
jmp
mov
shl
push
fild
xchg
mov
(bad)
jg
repnz
push
sub
cli
mov
jmp
jmp
xor
(bad)
call
pushf
sub
dec
sbb
mov
inc
test
sub
dec
jmp
ds
lock
mov
pop
pop
sbb
test
fsub
dec
popf
cli
jg
scas
or
test
mov
dec
test
jns
cmps
push
inc
push
xor
cs
(bad)
jg
lods
dec
jp
push
inc
movs
sub
mov
or
rol
imul
add
mov
jmp
rcr
retf
call
inc
ror
je
retf
pop
scas
pop
and
jg
call
mov
or
retf
std
mov
scas
inc
mov
lea
cs
js
and
dec
mov
(bad)
rcr
dec
and
dec
cdq
pop
(bad)
cs
adc
pop
cwde
dec
mov
ins
pop
outs
inc
out
cs
push
inc
repz
enter
mov
pop
pop
mov
or
(bad)
(bad)
(bad)
jmp
sbb
loopne
sar
dec
dec
int
dec
and
lea
pushf
pop
mov
push
xor
inc
inc
sub
stc
pop
dec
pop
cmp
dec
mov
sbb
inc
cs
cli
adc
test
pop
mov
mov
jmp
mov
mov
pop
mov
push
out
fild
mov
mov
daa
xchg
pop
jnp
sahf
lahf
hlt
(bad)
(bad)
call
or
mov
dec
int3
mov
int
cmp
neg
dec
(bad)
(bad)
(bad)
fistp
sbb
stos
fcmovbe
not
mov
jl
sub
js
in
ins
popf
jl
(bad)
(bad)
(bad)
call
sub
jno
inc
(bad)
ins
lea
mov
cs
stos
mov
(bad)
cmp
fs
pusha
movs
leave
popf
pop
cli
pop
pop
hlt
and
sub
fistp
cmp
in
or
stos
xor
push
jge
adc
stos
into
aaa
mov
out
add
cdq
mov
dec
idiv
mov
dec
lods
dec
add
mov
stos
cmp
mov
scas
and
stos
xor
pop
aam
or
dec
pop
cdq
je
cmps
ss
(bad)
out
mov
(bad)
call
out
(bad)
sub
push
(bad)
js
mov
cmp
sbb
xchg
pop
mov
mov
dec
mov
adc
stos
jg
mov
mov
push
mov
pop
push
cld
mov
pop
ds
xchg
stos
dec
scas
xor
jmp
inc
add
test
sub
gs
mov
aad
sbb
rcl
or
mov
(bad)
mov
push
dec
out
int3
js
mov
push
add
aaa
pop
dec
sub
std
jmp
mov
ss
jle
cwde
into
int
fld
lock
sti
push
push
out
inc
cmp
xchg
sar
pop
add
pop
adc
push
test
dec
iret
push
test
xchg
lods
pop
adc
fdiv
push
data16
jmp
imul
stos
fidiv
ret
inc
sbb
pop
rcl
stos
sbb
std
call
mov
ror
push
loope
(bad)
ror
dec
rcr
mov
lods
sub
adc
inc
fcmovnbe
int
fcmove
lahf
outs
add
outs
mov
loop
adc
and
movs
stos
mov
fstp
outs
clc
jmp
rol
dec
mov
mov
inc
dec
and
dec
(bad)
jg
sub
cmp
sbb
cs
fcom
dec
(bad)
out
cli
mov
sbb
pop
dec
push
shr
fsubr
in
lods
jne
(bad)
pop
sub
dec
mov
(bad)
dec
out
pop
into
sbb
or
(bad)
pop
jmp
aam
test
dec
push
push
mul
pop
test
mov
and
xor
jl
retf
mov
ret
push
pop
shr
jmp
xor
out
sub
dec
xor
loopne
jecxz
(bad)
std
jg
dec
jmp
scas
loop
lahf
test
cmp
in
retf
push
movs
ins
das
int
adc
or
push
pop
in
pop
pop
into
test
cwde
outs
mov
pusha
jne
dec
outs
es
jmp
ins
jmp
cmp
daa
sub
pop
jmp
sub
(bad)
mov
call
enter
idiv
sub
ins
cld
stos
mov
ins
or
pop
fidiv
(bad)
(bad)
jmp
gs
pop
movs
fild
out
pop
lods
adc
call
jae
(bad)
jmp
daa
pop
stos
sub
cli
mov
inc
cmps
repz
jmp
cld
ja
jle
pop
mov
in
xchg
dec
loope
dec
jmp
jnp
enter
test
xor
stos
hlt
xor
inc
imul
cs
mov
(bad)
jecxz
push
mov
shl
mov
daa
adc
ds
cmp
es
mov
call
add
push
pop
cli
sub
dec
dec
clc
sahf
js
out
imul
cs
mov
xor
stos
dec
add
in
test
push
retf
repz
das
ror
(bad)
jg
mov
cld
and
push
push
add
sub
pop
jmp
mov
loope
fisubr
cmp
ret
test
sbb
(bad)
jnp
movs
scas
add
and
movs
pop
test
jmp
mov
xor
(bad)
cmps
bound
dec
xor
push
inc
clc
pop
call
das
jg
cmp
movs
sbb
xor
pop
scas
sbb
clc
addr16
mov
mov
push
outs
push
test
inc
inc
js
cmc
push
cmp
mov
je
xor
(bad)
(bad)
(bad)
(bad)
fild
adc
out
icebp
and
je
mov
dec
fdivr
(bad)
ds
fcomp
stc
lea
stos
pop
(bad)
call
leave
call
or
cs
push
pop
aam
sbb
add
pop
pop
sbb
ins
and
gs
pop
rcr
mov
lods
and
inc
inc
out
inc
scas
xchg
fldenv
sub
inc
mov
test
and
mov
push
cld
(bad)
jg
loop
fistp
xchg
mov
dec
mov
jl
add
dec
jmp
push
push
shl
ret
cld
cld
adc
push
test
xor
push
outs
pop
bnd
pop
(bad)
push
je
inc
inc
inc
pop
jmp
dec
fyl2xp1
sbb
jmp
lock
mov
pop
(bad)
(bad)
fstp
ret
fimul
sbb
or
push
sar
ds
add
adc
mov
add
hlt
jg
pop
or
push
stos
stos
pushf
and
out
mov
cmp
pop
pop
push
jns
sub
push
(bad)
(bad)
(bad)
mov
inc
aas
pop
mov
(bad)
mov
sub
adc
dec
dec
mov
iret
mov
outs
jmp
dec
ret
sti
lods
dec
add
pop
inc
ins
(bad)
mov
clc
js
xor
adc
std
daa
dec
fidivr
inc
mov
retf
or
jp
mov
mov
je
fadd
adc
inc
(bad)
fidivr
sub
mov
test
movs
and
mov
sar
outs
mov
and
stos
sbb
jp
mov
call
jecxz
sub
mov
pop
sbb
push
xor
jg
jmp
mov
mov
loop
push
sbb
sbb
std
(bad)
call
outs
cli
adc
pop
lods
dec
mov
cmp
(bad)
mov
mov
push
loope
clc
push
mov
cli
into
into
dec
das
mov
test
lahf
or
das
mov
adc
ficom
leave
xchg
loopne
push
inc
sbb
(bad)
cli
cmp
mov
fisub
pop
ins
push
xor
inc
loopne
cld
das
je
mov
adc
push
xchg
fimul
mov
rol
fst
inc
inc
clc
jp
jmp
mov
sbb
pop
or
sub
cmp
jp
test
call
dec
xchg
loop
int
mov
retf
mov
fdivp
or
push
ror
mov
inc
pop
or
mov
sar
icebp
scas
repz
jbe
dec
repnz
mov
sbb
scas
clc
fistp
repz
pop
cmp
push
mov
das
ss
loope
cmps
xor
outs
and
in
stos
or
xor
fstp
jmp
pop
mov
(bad)
push
push
scas
pop
sti
sub
pop
das
add
outs
(bad)
inc
mov
(bad)
data16
(bad)
mov
fidiv
mov
pop
pop
(bad)
sub
(bad)
call
sbb
cmps
mov
in
or
test
and
(bad)
fild
hlt
cmps
popf
std
popa
test
std
stos
jmp
add
dec
pushf
sar
(bad)
call
mov
icebp
sbb
(bad)
sahf
mov
dec
lea
mov
jne
icebp
aaa
fistp
dec
fild
pop
rcl
pop
icebp
and
dec
push
fmul
xchg
call
fild
fistp
sbb
dec
pop
mov
pop
pop
sahf
div
cmp
ss
dec
sahf
push
lods
sar
cmp
into
hlt
in
jo
js
or
call
lahf
(bad)
enter
(bad)
je
daa
push
(bad)
out
push
movs
push
xor
dec
das
cmp
mov
lahf
mov
(bad)
in
test
es
mov
mov
sahf
lea
fst
mov
pop
dec
inc
clc
idiv
pop
iret
pop
in
sbb
pop
cs
imul
or
xor
pop
inc
fisttp
arpl
pop
pop
mov
scas
sbb
inc
in
cwde
sahf
pop
push
popf
and
mov
cmp
inc
lock
mov
or
push
sahf
push
fdivp
jle
sub
arpl
clc
fwait
(bad)
lock
sahf
sar
push
lahf
inc
pop
(bad)
fist
fdivr
in
xchg
push
lahf
aad
mov
les
dec
into
call
(bad)
(bad)
jmp
dec
pop
scas
and
dec
dec
retf
xchg
cmp
mov
(bad)
shl
(bad)
call
inc
call
add
ds
scas
iret
enter
std
(bad)
(bad)
dec
(bad)
retf
hlt
jno
inc
inc
dec
out
inc
ds
sahf
and
(bad)
or
sbb
fistp
add
inc
mov
sahf
dec
fadd
dec
jmp
movs
int3
cmp
push
mov
xor
cld
fst
leave
movs
lock
std
popf
sub
(bad)
(bad)
call
adc
fadd
js
cdq
adc
dec
mov
cli
sub
icebp
mov
ins
cld
inc
dec
stos
lods
aaa
jle
lahf
add
inc
in
cld
call
fwait
mov
outs
not
or
rol
or
das
mov
dec
sub
cld
jmp
inc
das
test
mov
(bad)
mov
in
pop
(bad)
sbb
rol
pusha
stc
sub
pop
in
push
pushf
xchg
jmp
jbe
mov
pop
pop
retf
ror
stos
mov
inc
or
cmp
ficom
(bad)
(bad)
(bad)
inc
out
ins
sub
div
mov
ins
dec
fsubr
test
int
and
xchg
jno
fdivr
jg
dec
lea
xchg
int
enter
add
pop
faddp
mov
loop
(bad)
(bad)
(bad)
in
sub
call
clc
push
xlat
jl
aad
sbb
add
leave
mov
xchg
mov
cmps
(bad)
jmp
xchg
(bad)
xor
inc
pop
popf
ret
push
xchg
mov
aaa
adc
test
ror
dec
int3
mov
dec
pop
mov
loopne
fnsave
pop
cmp
clc
ins
in
out
clc
popf
(bad)
(bad)
call
cmp
jg
shr
lods
ret
out
dec
pop
or
jne
mov
dec
pop
jmp
std
in
mov
pop
(bad)
xchg
adc
fstp
mov
fs
fcomp
jg
mov
clc
dec
les
or
rcr
movs
and
dec
retf
scas
in
neg
inc
pop
(bad)
scas
test
and
inc
fcom
cmp
je
pop
fadd
(bad)
jg
mov
(bad)
fcom
ret
fcmovbe
jle
js
fmul
sbb
add
data16
(bad)
pop
push
push
jns
inc
add
jnp
jo
test
test
jmp
ins
adc
leave
scas
pop
shl
js
stos
fucomi
imul
arpl
scas
cli
(bad)
jnp
sub
movs
int3
cs
adc
xor
in
pop
(bad)
call
lock
loope
ficomp
inc
sub
sub
or
out
test
mov
fiadd
mov
or
fcmovnu
dec
xor
(bad)
(bad)
jmp
pop
shl
mov
test
pop
or
lods
pop
cmp
xlat
cli
mov
stos
add
fdivr
jmp
clc
xchg
fsubr
cmps
shr
vsqrtsd
(bad)
call
call
pop
push
fisubr
jno
adc
scas
inc
sub
call
into
or
(bad)
shr
fwait
cdq
dec
fldlg2
add
sub
mov
pop
inc
std
jmp
push
xchg
cmps
sbb
jge
mov
mov
(bad)
push
leave
mov
retf
mov
push
pop
fmul
xchg
imul
jl
clc
adc
pop
sub
cli
(bad)
dec
xchg
fld
iret
loopne
push
pop
push
push
fsub
popf
pop
pop
lock
push
inc
mov
jl
push
xlat
cmps
repnz
sbb
jns
das
mov
mov
int
mov
mov
loope
ins
pop
int
bound
mov
(bad)
(bad)
jmp
mov
ficom
cli
les
mov
mov
mov
dec
clc
fldcw
mov
sub
xchg
rcl
in
sub
(bad)
push
cli
daa
stos
adc
fisttp
pop
(bad)
(bad)
(bad)
fist
dec
xchg
popf
fstp
mov
dec
stc
xor
loop
inc
and
movsx
(bad)
(bad)
mov
adc
mov
pop
lock
in
in
pop
clc
dec
je
retf
(bad)
scas
movs
cmp
ins
leave
inc
sahf
sub
pop
pop
movs
fwait
sub
std
sub
out
add
test
popa
ficomp
ins
inc
cld
or
data16
push
retf
loopne
iret
push
lods
sub
or
inc
fistp
(bad)
jmp
sbb
stos
sub
jl
popf
push
clc
lods
xor
mov
mov
sub
cmp
fst
pop
sub
leave
test
mov
outs
pusha
mul
loope
nop
fmul
pop
mov
out
(bad)
int3
jmp
test
adc
mov
movs
or
mov
inc
aad
hlt
sub
imul
jmp
(bad)
(bad)
mul
iret
pop
push
loope
pushf
icebp
jo
pushf
mov
leave
xchg
push
cmp
test
jb
add
jmp
dec
stos
lea
(bad)
sub
popa
fxch
ret
xadd
(bad)
(bad)
push
frstor
jns
pop
mov
aam
nop
jp
adc
(bad)
pop
fild
jp
xor
mov
(bad)
inc
loop
xor
ror
cmp
std
addr16
adc
ins
in
jne
inc
das
or
push
push
fdivp
jle
sub
pop
pop
scas
mov
(bad)
shl
mov
cmps
iret
fld
pop
rcr
or
pop
or
push
push
or
(bad)
jg
mov
das
div
stos
pop
cdq
xor
movs
lahf
mov
inc
ins
push
fisub
(bad)
(bad)
(bad)
inc
(bad)
or
xor
push
icebp
(bad)
sbb
sbb
scas
cmp
les
sub
in
outs
fadd
xchg
sti
jns
test
pop
iret
and
int3
mov
jno
int3
(bad)
push
cld
(bad)
(bad)
(bad)
out
cmp
push
push
retf
inc
xchg
xchg
adc
daa
pop
fistp
dec
(bad)
fsub
outs
std
mov
movs
mov
inc
mov
inc
cwde
or
mov
(bad)
jg
sub
adc
fcmovnu
loope
fdivr
mov
(bad)
(bad)
jae
adc
es
dec
into
fwait
adc
enter
and
jmp
jmp
jnp
mov
cmc
imul
and
(bad)
push
cdq
sbb
retf
push
sbb
mov
(bad)
mov
lahf
sub
gs
(bad)
(bad)
(bad)
push
jne
push
out
and
mov
mov
fldcw
jae
mov
(bad)
(bad)
call
ins
retf
pusha
call
in
fcom
pop
push
(bad)
loopne
mov
adc
ja
dec
cmc
xlat
mov
dec
lock
mov
out
(bad)
js
daa
and
pop
jnp
adc
call
jl
mov
fstp
fmul
(bad)
test
clc
dec
std
and
jmp
in
pop
adc
(bad)
scas
clc
inc
inc
(bad)
and
ror
retf
or
push
ret
(bad)
(bad)
jg
clc
mov
idiv
dec
imul
sar
mov
(bad)
(bad)
pusha
pop
dec
dec
cld
jl
test
(bad)
mov
mov
and
pop
sbb
(bad)
call
cmp
sub
pop
mov
test
pop
in
(bad)
fst
pushfw
ror
ins
cmp
(bad)
call
xlat
add
repnz
fstp
mov
mov
mov
mov
(bad)
(bad)
(bad)
call
sbb
cmp
pop
xchg
dec
jmp
pop
inc
repnz
mov
ror
dec
xor
push
(bad)
jp
ds
arpl
stc
mov
(bad)
mov
jg
cmc
int3
push
repz
cmps
mov
mov
pop
dec
jno
pop
sbb
mov
test
cmp
pop
mov
mov
(bad)
jmp
ror
sti
pop
jae
scas
or
nop
dec
rcl
test
xchg
(bad)
push
mov
jp
mov
ins
sti
(bad)
(bad)
(bad)
push
sub
movntps
pop
repz
stos
pop
pop
(bad)
cwde
inc
mov
ds
push
fidiv
(bad)
sbb
(bad)
(bad)
call
jge
sar
fcomp
(bad)
je
ret
pop
push
fld
fcomp
pop
push
xchg
adc
pop
popf
cld
(bad)
(bad)
(bad)
mov
movs
fisttp
mov
mov
(bad)
out
pop
mov
dec
ins
add
pushf
cwde
mov
pop
icebp
ja
pop
xor
fidiv
jbe
int
(bad)
lods
ja
js
mov
(bad)
jge
icebp
fistp
jo
jns
or
push
mov
imul
adc
or
cmp
mov
pop
pop
cld
lods
jmp
aam
mov
in
das
ja
ret
pop
mov
in
mov
cmp
inc
add
pop
mov
pop
xor
(bad)
(bad)
push
stos
aaa
movs
in
sub
lea
sub
mov
or
outs
pop
mov
or
je
lods
xor
pop
(bad)
(bad)
(bad)
fisttp
or
mov
jl
pop
cmp
sub
xor
pop
push
cmp
fisubr
or
cld
fstp
arpl
mov
mov
jp
sub
add
sub
dec
sar
dec
int
sub
mov
xchg
sbb
push
pop
jge
retf
jg
sub
fs
or
sub
pop
rcr
add
pop
daa
mov
nop
or
adc
movs
pop
push
pop
jl
pop
jl
(bad)
(bad)
jmp
mov
sub
ficom
je
mov
out
mov
scas
cmp
fstp
ins
and
adc
sub
pop
pusha
lea
cmp
movs
sub
loopne
mov
inc
lods
inc
add
adc
cmc
jg
test
enter
loop
stos
and
mov
int3
mov
adc
dec
stos
(bad)
(bad)
(bad)
call
mov
int3
ins
fmul
addr16
adc
adc
mov
dec
stos
ret
sbb
test
jb
(bad)
(bad)
dec
fnstcw
out
push
add
into
cmps
xchg
into
pushf
fsub
mov
xor
std
adc
(bad)
(bad)
(bad)
(bad)
jmp
pop
das
sbb
and
lock
into
(bad)
fisubr
not
(bad)
fnstenv
cmps
das
(bad)
(bad)
(bad)
dec
pop
in
sti
sub
dec
ins
jle
call
xor
lods
inc
fadd
mov
inc
or
cmp
mov
test
(bad)
jmp
out
xchg
neg
in
(bad)
jle
hlt
mov
vandnps
sbb
jecxz
xchg
jae
jbe
sbb
pop
sbb
mov
rcl
sub
pushf
cmp
nop
push
mov
stos
(bad)
jmp
dec
sbb
(bad)
jecxz
mov
fwait
test
cmp
hlt
fistp
xlat
pop
std
mov
pop
aaa
sbb
loope
xchg
stos
(bad)
(bad)
call
sti
mov
pop
pop
jle
stos
sbb
call
test
ins
fbld
icebp
(bad)
call
jle
shr
jl
lahf
aad
dec
cmps
fnstcw
in
sub
(bad)
(bad)
(bad)
call
dec
xchg
jl
dec
cmp
icebp
ins
stos
fnsave
sub
std
cmp
(bad)
(bad)
inc
fidivr
loope
lods
mov
xchg
fsubr
daa
add
ss
fmul
push
rol
mov
mov
mov
cld
push
mov
(bad)
(bad)
jmp
rcl
xor
std
cld
pop
xchg
stos
(bad)
mov
(bad)
push
cmps
sub
retf
jle
aad
mov
mul
xchg
jp
pushf
js
(bad)
(bad)
(bad)
dec
cli
sbb
pop
mov
sbb
out
fucomi
xchg
fmul
ret
fcomp
(bad)
mov
shr
inc
jnp
cwde
pop
enter
test
xchg
stos
pop
add
(bad)
ror
cmp
(bad)
(bad)
(bad)
(bad)
mov
lods
and
xor
fdiv
push
ficomp
std
movs
repnz
pop
cwde
jmp
dec
push
shr
loopne
xchg
xchg
iret
mov
pop
pusha
in
jns
push
(bad)
(bad)
jnp
out
or
mov
fwait
push
(bad)
cmps
sbb
or
ffree
inc
push
dec
fild
dec
dec
jmp
push
mov
fadd
pop
repnz
inc
add
into
add
sbb
int3
stos
fimul
retf
jle
inc
and
(bad)
dec
(bad)
scas
and
push
daa
pop
pop
pop
and
dec
inc
nop
lock
sahf
outs
ds
(bad)
jg
push
dec
into
jnp
pushf
jl
mov
out
push
mov
push
and
add
cmps
xor
out
push
in
(bad)
mov
jle
adc
ds
push
mov
in
sbb
(bad)
js
push
aas
lods
cmp
pop
sbb
dec
lods
jg
sub
add
ins
dec
leave
mov
push
and
or
repz
pop
out
or
push
push
(bad)
pop
jne
(bad)
in
jl
(bad)
inc
cld
push
leave
pop
sbb
fnstenv
iret
ss
shr
pop
mov
(bad)
(bad)
(bad)
fnstcw
xor
fdivr
cs
sbb
int
push
(bad)
out
or
sub
dec
daa
mov
or
out
jne
call
js
or
daa
pop
sahf
call
dec
fs
ins
dec
cwde
push
pop
jg
mov
(bad)
in
(bad)
das
js
fstp
rol
or
call
inc
ss
inc
cmp
(bad)
lea
and
daa
cli
xor
test
(bad)
call
pop
(bad)
adc
adc
ja
jo
dec
(bad)
push
push
or
pop
xor
xchg
sub
inc
loope
movs
inc
dec
(bad)
out
ds
mov
nop
test
(bad)
(bad)
mov
in
inc
mov
pop
pop
fiadd
add
add
jge
das
(bad)
(bad)
(bad)
push
inc
pop
rcr
lahf
leave
and
pop
lock
rol
adc
jno
pushf
xchg
and
add
jb
mov
pusha
pop
sbb
cmp
mov
popf
rcr
dec
jmp
test
pop
pop
loopne
fisttp
cmps
stos
sub
inc
scas
fimul
fadd
icebp
rcr
push
fdecstp
neg
fstp
retf
iret
xor
pop
adc
or
adc
adc
lods
rcr
pop
mov
lock
shl
xchg
clc
daa
pop
mov
sbb
or
push
jo
(bad)
(bad)
inc
push
fdiv
ret
mov
leave
add
aad
(bad)
fmul
(bad)
imul
or
int
xlat
xchg
mov
in
mov
mov
gs
xchg
icebp
lods
pop
into
ds
test
pushf
or
(bad)
(bad)
out
ret
aad
stos
pusha
jle
mov
cmp
rol
pop
rcr
ins
cmp
(bad)
call
ins
and
jl
cmp
leave
loope
(bad)
sahf
mov
(bad)
xchg
jg
(bad)
dec
fucompp
cdq
jg
sub
sahf
pop
div
lds
pop
pop
cmp
and
push
je
out
call
dec
pop
loop
mov
out
fmul
sbb
lahf
les
xchg
adc
sub
call
out
mov
fimul
fstp
fisubr
lahf
loope
call
xchg
jg
and
in
stos
sbb
(bad)
mov
mov
mov
dec
(bad)
call
cmp
push
fdiv
cdq
sbb
xor
cdq
lock
add
pop
call
loopne
and
xchg
fsub
stos
sbb
mov
pushf
icebp
pop
mov
add
push
pop
mov
push
pop
push
xchg
xchg
loope
mov
(bad)
mov
cmp
pop
xchg
dec
fstp
dec
popa
pop
add
push
pop
pop
jmp
jmp
(bad)
cmp
shr
xchg
out
inc
mov
pop
mov
movs
fistp
stc
pop
jp
mov
out
(bad)
fisttp
pop
clc
add
pop
(bad)
jmp
movs
int3
test
jecxz
push
mov
mov
pop
cmp
fidiv
sub
jmp
cmp
jnp
shl
cli
adc
cmp
mov
mov
mov
jbe
pop
mov
or
mov
xlat
(bad)
cmc
(bad)
(bad)
(bad)
fnstcw
fisub
int
mov
lahf
fldcw
retf
push
fist
mov
push
adc
mov
sbb
dec
pop
addr16
jp
(bad)
outs
mov
cmp
mov
out
push
mov
fld
outs
sbb
dec
cmp
(bad)
jmp
fxch
in
inc
cmp
xchg
dec
push
fcomp
mov
sub
mov
xor
fbld
mov
scas
lods
mov
fcmovnb
shl
aaa
fild
xor
(bad)
nop
pop
mov
das
rcr
push
push
mov
cld
or
dec
cli
dec
gs
(bad)
nop
lock
repnz
xlat
add
(bad)
(bad)
call
and
(bad)
icebp
rcr
adc
fld
iret
loopne
icebp
div
stos
jns
push
pop
jnp
out
popa
jnp
scas
mov
out
mov
pop
neg
jo
inc
mov
mov
adc
pop
mov
fst
(bad)
(bad)
call
inc
jmp
aad
cwde
clc
dec
loope
ss
mov
ret
cdq
add
loope
push
pop
icebp
jbe
mov
clc
add
(bad)
ficomp
(bad)
(bad)
(bad)
jg
shl
call
out
repz
jmp
jmp
or
sbb
(bad)
(bad)
(bad)
cmp
mov
mov
jns
(bad)
pusha
rcr
shl
sub
xchg
out
xor
loope
(bad)
gs
jle
cli
daa
retf
ins
push
jle
ds
neg
pop
pop
outs
jo
sbb
cmp
mov
loope
fld
loop
mov
fsubr
cmp
adc
idiv
mov
xchg
inc
cli
push
adc
xor
dec
push
mov
into
xor
inc
adc
loope
inc
test
sub
rcr
and
cmp
pop
mov
je
mov
mov
sub
dec
retf
stos
cld
sbb
lock
inc
jne
push
in
lods
mov
pop
(bad)
jg
pop
call
pop
(bad)
into
cld
cmp
or
cwde
fstp
ret
retf
cdq
mov
call
ret
mov
mov
loopne
(bad)
jg
push
cmps
lods
push
push
push
adc
adc
movs
push
icebp
stc
test
jg
sub
fisub
pop
cmps
retf
shr
push
jo
lods
pushf
adc
sub
mov
fld
mov
leave
pop
test
xchg
je
fldenv
adc
ja
mov
mov
pop
and
std
dec
mov
std
or
out
std
cld
(bad)
out
sub
mov
cli
mov
fst
mov
mov
mov
imul
gs
mov
out
cld
mov
out
cmovae
ret
pop
adc
jne
push
dec
xor
std
inc
mov
ins
fild
nop
sar
or
cld
cld
pop
loope
iret
test
cwde
rcl
movs
mov
mov
mov
(bad)
jg
test
mov
cwde
imul
rol
fsub
jmp
jle
pop
lods
jl
cwde
inc
cwde
jmp
call
call
rol
fidiv
sub
and
mov
clc
sahf
test
pop
cmp
pop
les
ins
sub
aas
add
retf
sahf
xchg
xchg
push
pushf
adc
loop
fsubp
shl
std
(bad)
cmp
in
jbe
movs
inc
lahf
into
jle
cld
fistp
cmp
mov
jle
mov
mov
add
push
shr
retf
and
in
mov
mov
push
mov
dec
or
enter
lods
push
mov
pop
in
std
and
nop
lds
bound
mov
cmp
xchg
inc
sbb
(bad)
call
daa
loop
dec
imul
sar
pop
popa
lea
mov
mov
adc
std
mov
jmp
and
cmp
cdq
shr
cld
sub
inc
cld
jmp
fiadd
sub
xchg
mov
dec
std
out
xor
push
bnd
sbb
sbb
sub
(bad)
dec
pop
rol
hlt
jg
fsubr
pop
sbb
aaa
fwait
push
adc
pop
fprem
outs
leave
push
in
sub
outs
mov
mov
out
stos
std
clc
or
mov
movs
dec
ret
ins
add
mov
pop
sbb
dec
xor
pop
add
push
pushf
fild
jmp
push
cli
pop
not
mov
js
push
(bad)
(bad)
fmul
(bad)
sbb
inc
fwait
mov
(bad)
jmp
jle
stc
test
mov
push
mov
jmp
jl
retf
push
and
ja
sbb
jmp
inc
mov
jb
fisubr
mov
mov
loop
add
(bad)
mov
test
(bad)
loop
push
and
jno
add
(bad)
jmp
jo
cmps
or
or
cmp
sahf
sbb
cdq
jecxz
inc
dec
and
xor
mov
daa
inc
cmovs
(bad)
fsubr
sub
or
dec
inc
cld
mov
add
lods
mov
or
lea
xor
or
or
ss
inc
sub
ret
(bad)
scas
xchg
add
outs
test
ins
mov
pop
xchg
aam
ins
or
mov
push
imul
add
(bad)
jg
or
mov
or
jge
aas
fdivr
(bad)
dec
pop
outs
loope
stos
pushf
jp
mov
inc
test
or
ins
jl
lods
cmps
xchg
(bad)
inc
mov
(bad)
jge
pop
stos
cmc
iret
fist
int
addr16
bswap
stos
call
inc
fist
bnd
mov
js
fsubr
mov
and
add
test
lea
fs
out
mov
push
test
sti
outs
(bad)
xlat
fbld
iret
test
or
jg
in
mov
call
ds
mov
adc
dec
fsubr
mov
add
fcomp
cld
pop
pop
or
enter
and
dec
call
mov
xchg
movs
push
dec
stos
retf
clc
ror
cs
es
or
fld
sbb
(bad)
dec
mov
mov
sub
call
cmp
sub
add
jmp
dec
shl
xor
adc
mov
pop
xchg
push
cmp
push
push
je
sti
cwde
clc
cmp
ret
sbb
xchg
cmp
jne
xchg
inc
and
inc
inc
push
loop
inc
xchg
aaa
jo
add
inc
nop
mov
lahf
fild
dec
jne
push
out
loop
(bad)
mov
or
jbe
push
into
sti
out
and
cs
(bad)
mov
push
sbb
add
inc
cmp
aam
dec
push
stos
push
cli
inc
in
lock
add
xchg
cmp
cmp
repnz
inc
in
cmp
(bad)
call
xor
stc
push
jmp
cmp
sahf
jnp
(bad)
std
fdivrp
(bad)
(bad)
dec
inc
arpl
rcl
push
sar
inc
cmp
dec
cmp
into
and
inc
dec
inc
in
test
(bad)
popa
fwait
xor
and
and
into
or
mov
out
add
add
or
push
fidiv
test
jle
rol
in
inc
jmp
push
call
cmps
out
enter
dec
lods
retf
adc
shl
inc
lock
daa
out
xor
arpl
enter
(bad)
(bad)
dec
outs
add
into
call
scas
jo
lods
mov
pop
rcr
nop
clc
add
std
in
(bad)
mov
push
cli
cmps
push
cld
rol
scas
pop
jmp
ret
cmps
(bad)
(bad)
nop
xor
(bad)
call
out
in
jle
dec
call
call
push
mov
je
mov
mov
mov
outs
fwait
(bad)
lahf
pop
cmps
into
cli
out
add
cs
in
jmp
mov
add
test
sub
sahf
loope
inc
test
(bad)
(bad)
call
imul
fs
xor
fild
push
in
daa
icebp
lahf
(bad)
jge
xor
or
push
aas
lods
jmp
pop
or
cmp
pop
jl
pop
mov
(bad)
call
pop
call
inc
ins
pop
ins
popf
pop
out
sbb
sbb
fwait
mov
pop
jb
pop
and
inc
inc
pop
retf
mov
call
xchg
pop
xor
xor
fwait
cli
fcom
cdq
push
push
fxch
shl
cli
cmp
cli
jmp
(bad)
cli
mov
jle
xor
in
in
dec
fcos
dec
dec
ins
mov
test
and
mov
sub
in
inc
call
outs
mov
pop
mov
call
cmps
cli
push
retf
jmp
cmp
repnz
or
call
jecxz
mov
pop
not
pop
loopne
movs
es
scas
and
jecxz
push
cmp
jo
inc
pop
stos
pop
ins
sbb
in
mov
std
(bad)
call
push
cmp
out
jp
cmp
dec
mov
movs
pop
inc
push
mov
sahf
add
movs
push
gs
fistp
and
adc
push
jle
mov
cmps
and
jmp
mov
fsubr
lods
je
std
(bad)
in
sti
(bad)
retf
push
pop
(bad)
std
test
jmp
sub
outs
icebp
stos
mov
cmp
mov
pusha
in
mov
(bad)
pop
push
and
cli
jmp
push
(bad)
sbb
lea
pop
or
dec
(bad)
test
popf
pusha
xchg
pop
retf
mov
addr16
es
inc
jmp
pop
mov
(bad)
mov
pop
pop
ret
popa
and
mov
jbe
enter
lea
in
lods
or
jle
sub
(bad)
rol
mov
jno
and
movs
sub
jmp
push
push
add
cmps
ret
push
fadd
cdq
fmul
push
cli
fs
rol
adc
jp
pop
pop
pop
cli
clc
jg
(bad)
mov
sahf
sbb
jecxz
jl
push
pop
pop
ins
(bad)
pop
push
cmp
(bad)
(bad)
aas
xor
jmp
pop
pop
pop
and
test
popa
mov
fld
sbb
or
imul
mov
ins
pop
jmp
loopne
jl
sahf
ror
aam
mov
popa
sar
pop
and
(bad)
(bad)
(bad)
fisubr
mov
scas
mov
xchg
adc
in
xchg
pop
outs
loop
xor
xchg
add
jmp
out
repnz
ret
iret
mov
jmp
in
xor
pop
call
(bad)
jmp
cmp
pop
sub
xchg
cld
add
std
lods
ss
dec
arpl
mov
loop
pusha
xor
adc
push
push
pop
mov
fstp
mov
push
inc
push
outs
xor
add
arpl
fnstenv
hlt
cwde
call
mov
out
inc
scas
dec
mov
jae
pop
pop
test
jmp
in
adc
inc
sub
(bad)
jl
dec
daa
push
push
push
pop
mov
mov
jg
mov
adc
add
mov
pop
jmp
scas
clc
call
je
outs
loopne
in
jmp
rol
cmp
stos
rcr
cs
push
cmc
mov
push
jno
das
jb
rol
add
add
nop
dec
and
push
add
(bad)
jmp
jb
mov
inc
leave
dec
sub
das
sbb
pushf
movs
loopne
jno
sub
test
std
(bad)
fld
jle
adc
cli
push
jmp
cwde
stos
movs
push
in
pop
mov
daa
jp
ja
mov
pop
adc
loopne
mov
shr
inc
dec
push
dec
and
hlt
pop
scas
sbb
mov
mov
jmp
sbb
outs
mov
push
and
pop
pop
aam
pop
nop
call
jl
in
mov
lods
data16
cli
ror
cmp
push
shl
hlt
jecxz
mov
sub
in
adc
dec
ins
lods
xor
or
(bad)
adc
xor
mov
inc
adc
cwde
push
ins
sbb
fmul
sar
out
pop
mov
or
add
je
ss
mov
push
loop
pop
mov
cs
sub
mov
cmp
or
sbb
pop
in
mov
jp
gs
pop
call
popa
dec
cmp
jbe
jle
mov
dec
icebp
icebp
test
sub
(bad)
(bad)
mov
mov
aaa
jmp
adc
lds
add
cmc
movs
sbb
ja
(bad)
inc
xor
xor
std
(bad)
(bad)
(bad)
call
mov
mov
test
aad
(bad)
retf
dec
add
cmps
retf
test
(bad)
(bad)
push
lods
push
mov
pop
dec
bound
std
adc
ret
scas
mov
xchg
xchg
out
cld
nop
sub
test
push
adc
out
adc
jmp
es
push
data16
sbb
ins
(bad)
(bad)
jmp
push
push
lods
pop
sbb
fsub
push
push
sub
mov
pop
xchg
mov
dec
add
mov
call
fwait
(bad)
adc
jmp
or
add
call
(bad)
(bad)
(bad)
(bad)
fcom
aam
adc
retf
and
sub
ret
mov
push
inc
sub
sbb
and
jmp
pop
bound
daa
cmps
and
test
mov
hlt
add
cmp
out
rol
shl
sbb
fmul
movs
push
jl
outs
(bad)
(bad)
dec
pop
sbb
stos
fisttp
xor
pushf
pop
push
ret
xor
sbb
xor
(bad)
outs
je
cli
je
xor
and
(bad)
fbstp
aam
adc
test
retf
in
jg
fild
nop
or
fnsave
int3
clc
popf
gs
lods
pop
sub
call
dec
adc
daa
dec
pop
cmps
pop
and
jle
out
xchg
add
add
push
cmps
fwait
in
pop
rcr
sbb
and
push
adc
pop
lods
cmps
lea
ja
je
push
xchg
stos
fwait
pop
mov
(bad)
js
pop
aam
pop
ins
dec
stos
das
and
adc
test
test
inc
hlt
mov
inc
fdivr
arpl
push
inc
add
inc
lods
lods
inc
movs
out
dec
dec
jbe
icebp
cmps
imul
test
push
es
mov
cmovno
retf
push
adc
aaa
push
push
loopne
dec
dec
or
jge
sub
xchg
movs
xchg
dec
pop
mov
jmp
aaa
dec
aam
pop
ss
ficom
pop
in
ret
mov
xchg
xchg
mov
dec
mov
jno
ds
xchg
fdivr
inc
cmps
and
(bad)
mov
pop
lods
pop
out
dec
pop
cs
popa
ret
mov
daa
enter
xchg
add
inc
mov
dec
fs
outs
cmp
and
sub
stos
test
cmove
ins
fwait
pop
loop
mov
(bad)
xor
pop
inc
hlt
out
inc
pop
sbb
inc
lods
fsub
jl
ins
dec
mov
es
cli
pop
mov
and
or
icebp
xlat
dec
repnz
dec
mov
cmp
gs
inc
ficomp
fisttp
out
adc
sub
clc
mov
adc
(bad)
test
dec
pop
inc
fisubr
mov
jmp
mov
mov
(bad)
or
dec
lods
cmp
mov
sbb
lods
pusha
push
sbb
mov
dec
in
inc
pop
outs
pop
imul
jbe
lds
test
daa
xlat
ret
in
mov
mov
fild
sbb
(bad)
in
mov
or
mov
test
pop
cmp
add
scas
cmp
ror
xor
stos
or
loope
xor
adc
xor
aaa
xlat
dec
test
mov
mov
inc
push
stos
int
jae
sub
cs
out
and
mov
xlat
in
push
sub
bound
in
dec
xchg
xchg
pop
mov
push
leave
hlt
lock
sub
fsub
inc
(bad)
lock
lock
pop
clc
data16
or
data16
pop
cmp
cmps
cs
pop
das
pop
inc
cmps
cld
and
fbld
inc
shr
sbb
add
pop
and
cli
push
fistp
test
movs
pop
inc
(bad)
dec
mov
loop
call
icebp
jg
pop
cld
fs
ins
cmps
inc
pop
mov
cli
dec
mov
ret
mov
pop
cmps
mov
(bad)
jg
cmp
call
in
movs
cmp
loopne
ins
xor
movs
stos
call
inc
dec
movs
in
lods
xor
in
imul
aam
sbb
jecxz
inc
stos
mov
pop
popa
sbb
xlat
pop
xchg
push
mov
xlat
jecxz
pop
mov
iret
push
ins
jle
out
(bad)
(bad)
std
cmp
inc
pop
in
jns
pushf
lods
rcr
fwait
inc
mov
mov
lock
pop
popa
clc
cmp
inc
mov
dec
scas
push
fbld
rcr
scas
push
lods
inc
bound
pop
mov
pop
cs
push
and
jmp
xlat
inc
sub
adc
inc
cmp
ret
push
ret
pop
mov
xor
movs
add
or
(bad)
pop
outs
dec
pop
inc
pop
clc
or
outs
out
hlt
test
jmp
lods
and
jp
mov
pop
cmps
scas
xchg
cmps
mov
loope
dec
jp
pop
pop
(bad)
loop
(bad)
ja
push
in
jmp
stos
es
int3
pop
and
shl
sbb
ins
bound
dec
inc
sub
bound
outs
jmp
inc
dec
dec
dec
in
cld
add
mov
(bad)
sbb
loope
mov
cmp
push
lods
imul
sub
sahf
sub
jg
or
es
mov
push
mov
test
bound
or
sub
clc
mov
pop
outs
and
addr16
data16
or
loop
mov
lods
ret
sbb
es
and
not
pop
pop
push
dec
out
mov
ins
jb
js
cdq
scas
inc
call
dec
xor
hlt
sub
lods
pusha
movs
mov
cmp
and
loop
in
jle
xchg
sti
jg
push
pop
scas
dec
mov
jl
aas
gs
movs
mov
sahf
and
mov
int3
cli
pop
xchg
jo
mov
fimul
mul
shr
and
outs
and
es
popa
imul
in
std
pop
cmc
in
sbb
test
fimul
jmp
daa
jmp
retf
outs
(bad)
xchg
and
and
mov
outs
fld
scas
js
imul
test
iret
in
movs
mov
push
popa
jp
call
aam
(bad)
jg
enter
push
stos
(bad)
lds
and
sahf
sub
lock
pusha
nop
out
and
(bad)
(bad)
mov
shr
fucom
imul
add
in
out
adc
inc
jecxz
cmps
mov
pusha
pop
and
inc
aaa
dec
das
ldmxcsr
dec
(bad)
mov
push
sub
xchg
pop
out
aad
icebp
mov
and
push
icebp
pop
add
mov
inc
fucomp
adc
call
pop
cmc
and
and
sbb
inc
lods
push
das
cmps
pop
cs
aaa
aaa
sbb
loopne
rcr
imul
mov
xchg
cmps
mov
and
dec
dec
dec
and
mov
push
stos
jmp
jmp
scas
in
stos
test
es
pusha
push
mov
scas
jbe
inc
(bad)
(bad)
outs
sub
jmp
pop
gs
in
cmps
mov
rol
mov
(bad)
jmp
cmp
sub
xchg
pop
dec
sub
jmp
fisub
scas
pop
and
iret
inc
mov
mov
pop
pop
push
call
fwait
inc
sti
pop
mov
call
lods
cmp
or
sbb
jmp
daa
ja
js
mov
arpl
scas
xchg
ficom
ror
adc
lock
gs
(bad)
retf
ins
retf
pop
loopne
inc
cs
sub
sub
mov
fwait
pop
inc
ja
pop
loop
ins
les
test
and
mov
aam
fmulp
cmp
clc
(bad)
sbb
jne
pop
push
es
sbb
call
cmp
jmp
out
pop
loopne
loop
call
sub
scas
mov
psrad
stos
aas
fisub
es
mov
das
adc
stos
jecxz
ins
jl
outs
dec
sub
stos
(bad)
(bad)
aas
cli
into
fs
add
jecxz
in
fs
cmp
push
cwde
imul
or
cld
out
icebp
mov
loope
and
pop
(bad)
push
clc
cld
cmc
pop
jmp
aad
and
ud0
and
test
pop
out
jne
inc
jmp
sbb
jmp
pop
daa
add
push
arpl
jmp
mov
scas
sub
std
mov
fisttp
sub
pusha
cmp
lea
sub
sar
and
shr
adc
lods
daa
push
cmp
(bad)
mov
sbb
jecxz
mov
mov
sar
xor
and
shr
(bad)
rcl
retf
call
int
or
dec
test
cmp
addr16
push
and
push
stos
and
add
dec
dec
pop
mov
dec
dec
inc
scas
fmul
lahf
or
ja
ins
jmp
push
imul
dec
or
dec
lea
movs
in
mov
inc
clc
(bad)
inc
sub
fdiv
call
pusha
and
test
(bad)
inc
int3
or
or
cmp
aad
inc
retf
add
pop
stos
adc
out
pop
or
jmp
movs
mov
mov
pop
mov
out
out
cli
in
sub
xchg
dec
jmp
fdivr
dec
cli
jg
sub
or
xchg
les
mov
sub
mov
out
arpl
sbb
cli
rcr
pop
fucomip
dec
mov
mov
mov
bound
xor
jmp
mov
mov
jge
mov
mov
call
mov
push
mov
jp
and
or
pop
nop
sti
cli
loop
in
or
and
call
jns
dec
stc
and
inc
add
repz
cld
inc
jle
pop
fcomp
lds
push
nop
hlt
in
adc
dec
mov
retf
mov
(bad)
inc
jl
out
in
pop
sbb
neg
dec
inc
stc
pop
cmp
dec
and
pop
pop
jmp
dec
cli
mov
div
cmp
jmp
sbb
add
add
mov
push
inc
or
aas
ffree
loope
add
aad
cmc
imul
mov
addr16
stos
les
add
or
fild
stos
sub
imul
mov
cs
adc
mov
mov
rol
neg
cmp
test
out
aam
outs
scas
std
pop
pusha
mov
inc
out
cmp
(bad)
ret
dec
aaa
dec
pop
(bad)
xchg
or
in
push
jae
fadd
fst
shl
pop
(bad)
(bad)
clc
jmp
push
call
push
cmp
inc
popa
test
pop
cli
xchg
je
cld
inc
nop
hlt
ds
sbb
ins
es
mov
push
repnz
pop
xor
mov
pop
fldcw
and
pop
adc
and
inc
xchg
pop
adc
adc
and
pop
push
xchg
adc
inc
pop
xchg
dec
adc
inc
adc
inc
pop
push
adc
adc
pop
dec
adc
push
push
fisttp
cmps
adc
in
shl
pop
clc
std
cmc
jbe
mov
adc
mov
and
aad
leave
test
dec
mov
pop
and
push
jp
xchg
mov
and
pop
push
shl
and
inc
nop
push
add
and
neg
sub
and
mov
pop
nop
fs
push
push
fstp
adc
leave
lea
sub
and
mov
pop
adc
adc
pop
daa
and
xchg
cmp
or
dec
jo
push
dec
(bad)
mov
pop
push
std
(bad)
fdivr
retf
and
fldcw
push
sub
fiadd
(bad)
test
aas
push
bts
mov
(bad)
(bad)
fbstp
inc
lahf
xor
mov
pop
mov
retf
add
jle
xor
(bad)
(bad)
jmp
sub
in
(bad)
cdq
icebp
loopne
loopne
or
aad
xor
ret
sahf
cmp
xor
pop
xchg
fisubr
cmp
call
push
add
or
mov
push
lods
(bad)
jmp
cmps
mov
xchg
outs
movs
inc
jp
ja
(bad)
out
push
pop
adc
mov
sar
jmp
jle
dec
scas
or
cmp
adc
call
add
adc
lods
into
retf
das
and
cmp
int3
pop
cmp
(bad)
push
mov
xor
fistp
jl
(bad)
pusha
sti
(bad)
idiv
(bad)
(bad)
in
ins
dec
in
jmp
sub
loopne
adc
mov
pop
push
fiadd
lahf
lods
jge
(bad)
(bad)
(bad)
dec
out
xchg
ins
ret
in
sahf
daa
mov
pop
inc
mov
jle
mov
sar
dec
dec
pop
je
shl
ds
cmp
inc
sbb
mov
cli
sar
push
fmul
mov
js
xchg
into
or
pop
out
rcr
lock
cmp
hlt
xor
mov
addr16
mov
nop
ret
cld
sub
sub
outs
jno
mov
(bad)
xchg
cmps
mov
pushf
pop
jl
ret
xchg
repnz
out
or
mov
jecxz
sbb
dec
out
test
jnp
fdivr
(bad)
(bad)
(bad)
mov
cmp
sbb
jb
mov
jmp
mov
jl
mov
xchg
jmp
dec
cld
repnz
xchg
dec
in
(bad)
(bad)
pop
(bad)
(bad)
(bad)
mov
mov
jbe
jae
sbb
aaa
sti
mov
out
in
cmp
(bad)
add
jecxz
repnz
test
pop
pop
scas
adc
push
jno
sub
aaa
(bad)
cmp
outs
in
mov
push
cmp
in
(bad)
(bad)
(bad)
jmp
stc
dec
(bad)
fs
int
cdq
aam
and
or
mov
aas
mul
cmps
dec
sub
int
cld
(bad)
(bad)
(bad)
(bad)
jge
mov
xchg
sbb
jmp
mov
outs
mov
js
lahf
mov
mov
adc
inc
arpl
push
mov
push
mov
xor
xchg
(bad)
jmp
jbe
shl
jmp
mov
jne
(bad)
push
pop
pop
test
push
jb
movs
or
push
jmp
jmp
pop
lock
push
adc
and
pop
jecxz
stos
jne
nop
(bad)
mov
jns
pop
xor
cmp
(bad)
in
imul
push
jl
push
loope
jmp
jbe
and
out
stos
push
jb
sbb
das
das
cli
in
jmp
jnp
inc
or
(bad)
jle
mov
test
mov
es
std
or
fstp
cmp
fsubr
cmp
and
test
stc
jmp
sti
call
cdq
retf
cmp
or
sub
sbb
push
retf
shr
pop
adc
(bad)
(bad)
jmp
mov
xor
mov
scas
sar
push
mov
dec
or
les
(bad)
(bad)
into
pop
stos
or
mov
push
movs
shl
and
hlt
inc
test
jmp
mov
sbb
cwde
(bad)
sbb
cmp
(bad)
xlat
and
rcr
clc
xchg
jmp
sbb
in
loop
(bad)
xor
add
mov
iret
shr
sahf
jmp
dec
jle
mov
ins
xor
out
sub
lea
cs
ins
out
retf
call
cmps
push
push
mov
push
sbb
bound
setp
mov
jmp
adc
out
lods
xchg
jmp
push
ja
outs
sub
(bad)
addr16
jg
pop
and
dec
mov
retf
jbe
test
mov
into
dec
adc
mov
lods
mov
mov
cli
jle
inc
sbb
pop
sbb
inc
bswap
add
retf
popa
dec
sub
clc
(bad)
(bad)
lods
loopne
int3
ficomp
jecxz
mov
mov
cli
jo
jmp
push
push
clc
cwde
icebp
leave
sub
jmp
in
(bad)
mov
sub
test
inc
outs
fimul
and
sar
add
outs
(bad)
mov
cmp
cmp
push
into
into
mov
fcmovb
and
push
dec
pusha
push
jecxz
scas
dec
(bad)
dec
test
loope
cmps
sub
icebp
adc
ins
aad
mov
mov
aas
inc
test
ja
movs
icebp
(bad)
jg
jmp
jo
jmp
add
outs
call
xchg
test
jle
in
xor
dec
mov
shl
adc
int3
and
shl
inc
nop
jbe
xchg
jg
or
lea
ins
movs
jmp
or
iret
stos
lock
push
and
add
jp
fsubr
jl
aas
add
mov
or
jg
jmp
or
and
mov
dec
mov
cmp
jmp
add
jmp
mov
dec
inc
or
outs
sbb
dec
cs
clc
int
imul
jp
inc
dec
mov
cmp
cli
shl
mov
into
inc
inc
gs
ror
ins
std
je
inc
dec
cld
fwait
pop
or
xor
mov
mov
stc
in
test
or
push
cmps
mov
sub
ds
test
sbb
(bad)
sti
call
add
mov
jmp
mov
mov
test
push
test
fild
fnstcw
xchg
mov
mov
xchg
dec
push
ins
int3
push
repnz
push
ja
pop
cmp
mov
fdivr
or
or
jle
and
mov
dec
dec
fisubr
jo
lahf
push
inc
das
sar
bound
in
movs
cmc
stos
cdq
or
inc
pop
mov
shl
(bad)
mov
adc
fucomi
xchg
pop
push
mov
into
mov
adc
(bad)
es
mov
mov
iret
pop
pop
xchg
js
cmp
sti
gs
or
dec
pop
xor
mov
mov
push
callw
dec
enter
scas
js
stc
fldcw
retf
inc
and
adc
mov
xor
js
mov
push
or
jmp
jle
stc
repnz
or
fimul
cmp
mov
scas
push
cmp
(bad)
out
movs
es
mov
mov
ror
mov
mov
jmp
movs
call
mov
dec
cmp
pop
hlt
fist
jns
sub
fidivr
and
movs
idiv
sbb
mov
(bad)
jg
sbb
dec
dec
mov
dec
mov
cli
test
mov
(bad)
(bad)
jmp
sub
movs
cmp
add
dec
retf
sti
mov
inc
call
je
(bad)
call
or
dec
mov
aas
je
adc
jmp
sbb
movs
cli
mov
lahf
mov
mov
popa
outs
mov
mov
sub
mov
dec
dec
xor
jmp
dec
retf
movs
cwde
into
jne
idiv
test
mov
call
cdq
sahf
sub
scas
or
arpl
push
cmp
mov
retf
inc
test
(bad)
(bad)
(bad)
push
push
aad
pop
das
fidivr
jns
fcomp
ins
mov
fbld
inc
jge
loopne
fcomip
fisub
ret
xchg
mov
xchg
sub
(bad)
(bad)
(bad)
mov
push
daa
(bad)
mov
lods
add
xchg
ss
(bad)
mov
call
mov
movs
mov
movs
int
icebp
mov
hlt
fisub
int
movs
dec
mov
cwde
cmp
ror
mov
enter
add
pop
stos
(bad)
(bad)
(bad)
(bad)
mov
retf
dec
jmp
movs
mov
pop
push
out
mov
ja
(bad)
outs
test
or
shl
pop
sahf
push
or
(bad)
jge
lock
push
push
sbb
repz
dec
or
mov
sub
mov
dec
mov
(bad)
jmp
(bad)
pop
sub
mov
sub
(bad)
call
or
or
cmp
xchg
fs
fcomip
inc
dec
inc
stc
movs
scas
jmp
adc
mov
inc
movs
mov
or
icebp
scas
fsubp
cdq
jle
cmp
(bad)
push
ficomp
push
sub
jp
retf
stos
sbb
movs
mov
cli
push
(bad)
(bad)
fst
xchg
add
ins
dec
aam
scas
int3
push
and
jne
bound
(bad)
(bad)
(bad)
dec
lea
mov
movs
je
push
loop
add
or
stos
sahf
xchg
cwde
inc
std
adc
call
cld
mov
into
popa
mov
push
sbb
inc
jmp
movs
(bad)
call
dec
cmp
test
sub
cmp
pop
add
dec
jae
int
mov
lea
cmps
stos
shr
cmp
pop
imul
jmp
xchg
test
mov
or
stc
(bad)
nop
pop
std
(bad)
(bad)
inc
dec
test
movs
dec
mov
cmp
call
dec
or
mov
jb
clc
movs
pop
push
pop
add
call
push
mov
leave
loop
mov
dec
push
in
das
call
out
pop
cmc
(bad)
call
cli
sub
mov
jb
fsqrt
adc
cli
movs
in
(bad)
(bad)
dec
mov
or
push
cmp
pop
sub
mov
repz
mov
call
sar
mov
mov
add
in
sub
dec
xor
pop
cld
outs
dec
mov
xchg
push
cmp
cmp
pop
(bad)
jg
sub
mov
cli
fnstsw
or
call
mov
call
dec
jne
cld
sbb
or
dec
daa
or
or
mov
mov
movs
loop
jnp
jmp
int
in
adc
inc
(bad)
(bad)
dec
and
jb
imul
sbb
out
mov
add
test
rcl
js
or
adc
jmp
or
inc
add
cmp
(bad)
jg
scas
push
mov
jmp
inc
mov
sub
scas
cmp
call
inc
fwait
test
movs
cmp
pop
rcl
(bad)
inc
mov
je
sub
icebp
or
mov
sbb
lahf
out
push
shl
enter
mov
xchg
and
(bad)
dec
mov
fisubr
mov
jne
fcmovne
leave
movs
int3
bound
jg
xchg
dec
stos
sbb
push
dec
shr
fnstenv
cmp
push
arpl
or
push
or
jle
push
cmp
or
dec
xchg
stos
clc
mov
sbb
or
test
inc
enter
leave
es
push
(bad)
mov
dec
call
dec
jnp
jnp
mov
push
cmps
and
aaa
cmp
or
pusha
sbb
mov
(bad)
dec
jne
and
call
or
test
fcomip
sbb
xchg
adc
jp
mov
fstp
mov
sbb
dec
(bad)
mov
loopne
imul
adc
push
push
test
mov
retf
fwait
jmp
sub
imul
jmp
movs
sub
ins
mov
sti
call
or
out
pop
in
into
mov
ret
add
jl
out
mov
xlat
(bad)
jmp
dec
cmps
jmp
jmp
test
dec
xchg
xor
fsubr
mov
retf
push
push
pop
stos
scas
or
sbb
sbb
dec
cld
pop
add
mov
mov
cmp
test
pop
je
std
(bad)
mov
sbb
cli
jnp
jg
jle
fidivr
dec
jmp
cmp
(bad)
inc
fadd
and
and
and
push
es
and
ret
xor
test
sub
jl
fcomp
adc
inc
dec
repz
fsub
(bad)
(bad)
(bad)
jg
in
jmp
jns
push
out
into
hlt
inc
pop
int
push
dec
jmp
lock
jmp
dec
std
std
movs
push
fistp
ins
fnstcw
out
neg
int3
dec
mov
adc
mov
ror
imul
imul
mov
pop
jl
mov
sub
aam
push
popf
(bad)
sti
out
sbb
pop
call
fwait
push
xchg
je
cmps
cld
inc
sub
push
outs
movs
sub
aaa
ins
movs
mov
icebp
call
in
dec
or
pop
test
sbb
and
scas
retf
cli
(bad)
(bad)
mov
(bad)
sti
cli
dec
cli
mov
enter
retf
dec
pop
adc
or
daa
push
cld
mov
fldcw
xor
push
inc
cli
lea
dec
retf
or
and
pop
es
add
dec
nop
sub
(bad)
call
sbb
(bad)
jg
push
push
adc
mov
jp
mov
sub
retf
sbb
call
rol
(bad)
mov
mov
mov
or
push
inc
jb
pop
movs
loopne
pop
movs
sbb
retf
cld
mov
fistp
inc
in
(bad)
cli
stos
popa
retf
fimul
repnz
xchg
repz
dec
sub
pop
ficom
gs
xor
(bad)
mov
ja
push
mov
call
cwde
jnp
pop
sub
push
shl
sbb
push
inc
push
xchg
inc
nop
call
or
jmp
cmp
jne
je
mov
stc
aas
xchg
movs
or
sbb
retf
sbb
cli
shr
mov
movs
jg
bound
inc
pop
(bad)
or
dec
retf
cmc
jg
das
fwait
call
and
add
push
sbb
cmp
fbstp
stc
iret
or
mov
jp
jp
or
dec
dec
or
sti
aas
pop
dec
sbb
dec
(bad)
jg
mov
ins
push
jp
dec
jo
jp
sub
scas
or
mov
sbb
je
xchg
dec
xchg
mov
inc
xor
cli
sub
mov
sub
in
cli
cmp
lods
clc
sub
jp
scas
mov
movs
jg
int3
and
movs
inc
pop
dec
xchg
mov
adc
push
mov
jmp
cli
add
loope
ins
das
mov
ret
or
gs
mov
mov
inc
clc
sbb
lods
in
or
outs
(bad)
or
push
enter
cwde
jp
sub
jns
popf
lods
or
pusha
or
dec
jp
and
dec
cmp
push
mov
and
std
or
fwait
jbe
sbb
mov
inc
in
pop
xchg
and
push
push
test
sub
push
add
mov
movs
mov
dec
popa
mov
fild
jmp
retf
dec
movs
stc
mov
mov
test
(bad)
aam
inc
cmp
hlt
inc
xor
fnstcw
into
pop
lea
mov
push
inc
or
mov
xchg
cli
movs
sahf
mov
mov
fld
dec
sub
cmp
mov
sbb
hlt
or
inc
nop
(bad)
adc
movs
cld
movs
arpl
push
(bad)
movs
adc
cs
adc
lahf
fstp
dec
pop
fld
hlt
or
aas
movs
inc
mov
icebp
jmp
repz
add
movs
add
hlt
scas
clc
stos
and
push
pop
daa
dec
lods
call
add
mov
sub
xchg
fldenv
push
(bad)
test
pop
and
or
push
inc
cmps
sbb
leave
push
mov
adc
dec
and
dec
cli
fwait
pop
retf
add
jne
sbb
dec
(bad)
ins
repnz
push
sub
test
adc
stos
cmps
inc
lock
push
or
movs
or
mov
jns
cmp
pusha
dec
(bad)
sti
inc
lahf
pop
out
mov
pop
add
hlt
or
dec
sbb
fisttp
movs
imul
xchg
pop
arpl
(bad)
cmp
mov
ret
inc
lods
mov
in
jnp
adc
push
dec
inc
mov
cwde
movs
lods
mov
xchg
add
mov
add
dec
sahf
hlt
punpckldq
mov
dec
call
jmp
lock
mov
fild
jno
test
(bad)
and
mov
fndisi(8087
jp
in
push
rcr
and
cmps
dec
cs
imul
call
pop
sahf
mov
outs
sub
mov
jp
imul
mov
ins
mov
jl
test
stos
cdq
inc
jbe
cs
in
ror
rcr
icebp
xor
int
sub
test
lds
int3
rol
dec
ja
and
mov
ret
xchg
mov
call
shl
sbb
movs
and
test
cmps
movs
outs
in
mov
jmp
stos
call
xchg
lock
mov
stos
mov
sub
mov
ret
or
daa
(bad)
(bad)
dec
fsubr
gs
mov
push
es
call
xchg
push
sbb
mov
dec
rol
(bad)
mov
push
jp
and
lods
call
adc
(bad)
adc
(bad)
(bad)
inc
pop
dec
xor
shr
retf
pop
scas
pop
cmp
ror
dec
bound
and
dec
xor
mov
lods
mov
mov
test
(bad)
jmp
dec
lea
inc
pop
mov
out
(bad)
ror
(bad)
jmp
mov
outs
cmps
mov
jmp
and
jmp
les
(bad)
(bad)
dec
lds
stc
fisubr
adc
mov
scas
and
lods
leave
or
cli
test
call
ds
stos
add
add
jg
call
or
mov
jp
xor
xchg
pmulhuw
icebp
cli
adc
and
lods
push
jg
and
fldlg2
cmp
add
or
jl
or
xor
xchg
sub
shr
xor
jg
sub
sub
dec
cli
or
movs
xchg
mov
mov
scas
call
out
test
and
and
nop
sahf
mov
call
xor
push
adc
rcl
xchg
in
loopne
dec
mov
stos
(bad)
ds
push
imul
cmps
mov
xor
in
push
scas
shl
sub
stos
sbb
ins
mov
cmps
ret
movs
popf
scas
leave
push
test
scas
jge
mov
mov
dec
push
lods
(bad)
push
dec
and
cmps
cmps
push
out
ins
iret
neg
cmps
push
outs
lods
jbe
push
mov
sti
out
mov
out
push
test
jnp
neg
inc
mov
push
neg
push
mov
test
xchg
mov
sub
lea
pop
outs
pop
out
xlat
loopne
sti
add
inc
ja
es
out
push
leave
pop
leave
movs
lahf
ficom
idiv
cs
stos
movs
stc
pop
dec
ss
imul
dec
mul
ds
imul
push
lods
or
and
fmul
jnp
lods
out
push
mov
push
ins
mov
dec
(bad)
scas
cs
test
push
and
push
test
push
and
fiadd
out
inc
dec
mov
ficom
into
push
scas
pop
movs
jns
out
fnstcw
fdiv
push
mov
out
ins
lods
push
cmps
mov
scas
inc
fwait
sti
mov
xchg
push
scas
inc
push
mov
inc
push
lods
add
popf
jne
mov
lods
mov
loop
test
daa
fidivr
cmp
outs
out
mov
mov
jnp
mov
cs
aaa
mov
push
movs
jnp
cmp
push
cmps
pop
inc
lods
sahf
stos
push
data16
loop
pop
dec
jg
mul
push
mov
test
scas
dec
fiadd
cmps
movs
push
test
lods
xlat
cmp
inc
ss
scas
mov
adc
pop
daa
inc
cmps
loopne
out
cmps
(bad)
lods
test
cmp
pop
mul
frstor
(bad)
lods
lods
mov
scas
mov
neg
push
test
push
jns
or
ds
cdq
mov
push
stos
inc
cmps
test
clc
into
cmps
iret
push
test
push
pop
push
pop
xlat
cmp
ss
add
(bad)
fisub
scas
mov
jmp
mov
cmp
movs
aas
mov
mov
dec
movs
pop
fisubr
xor
fbld
mov
lahf
not
lods
inc
test
mov
sbb
push
mov
jbe
imul
repz
outs
dec
push
cmps
push
jnp
ins
fild
mov
scas
es
ja
fisubr
fidivr
dec
jnp
jmp
mov
dec
mov
call
pop
pop
jbe
push
mov
movs
(bad)
xlat
shl
scas
ss
mov
cmps
or
ds
jnp
lods
push
stos
sbb
mov
mov
cmps
cmps
pop
xchg
push
mov
bound
repz
fs
(bad)
iret
repz
repnz
movs
jns
out
in
out
mov
out
loop
inc
out
sar
inc
sub
sti
push
cmp
sbb
add
jbe
gs
scas
push
ds
repz
popf
add
repz
test
out
sahf
out
pop
ins
jecxz
iret
sar
xor
daa
clc
sahf
or
iret
repz
push
push
aaa
test
cmps
stc
fwait
aaa
cmp
cmp
out
(bad)
inc
mov
sbb
repz
jmp
mov
into
idiv
xor
into
iret
repz
aas
lea
lock
sahf
cmps
stc
cmp
cmp
dec
mov
inc
pusha
jno
push
repz
repz
fldcw
iret
repz
in
ret
push
in
cmps
stc
cmp
jp
dec
cmp
jns
out
dec
and
ss
out
test
push
or
iret
repz
test
int
iret
repz
add
push
pop
jns
out
inc
mov
sahf
out
int
arpl
repz
push
in
stos
mov
dec
cmp
repz
jg
repnz
in
cmp
repz
iret
rol
fwait
sbb
(bad)
pushf
iret
repz
mov
xchg
idiv
push
addr16
push
cmp
out
sahf
out
(bad)
dec
pop
rcr
rcl
in
out
jbe
push
sub
mov
jns
int
rcl
repz
out
daa
(bad)
lds
dec
jnp
cs
mov
cmp
add
(bad)
mov
sahf
cmps
stc
sbb
enter
out
sahf
out
jae
xchg
pop
iret
repz
cmc
dec
aam
sbb
cmp
pop
and
ds
repz
mov
iret
repz
int3
pop
and
inc
(bad)
mov
in
jns
out
xor
or
sahf
out
sahf
pop
popf
xor
inc
out
lahf
out
xchg
xor
or
push
cmp
repz
dec
push
sub
pusha
jbe
stos
sbb
cmp
cmp
mov
test
jecxz
mov
movs
mov
xchg
shl
ss
mov
scas
and
mov
loop
add
clc
push
pop
stos
pop
mov
adc
or
ds
xchg
(bad)
bound
or
mov
loopne
stos
stc
mov
or
repnz
push
and
loop
adc
mov
add
mov
or
push
mov
add
mov
jle
add
xor
push
cmps
mov
add
ret
xchg
adc
mov
xor
data16
sub
nop
cmp
mov
inc
add
or
repnz
xor
xchg
mov
movs
push
mov
mov
cdq
sub
jbe
xor
mov
stos
fdiv
xchg
push
add
ret
stos
js
ss
jle
mov
push
xor
inc
arpl
mov
fidiv
mov
add
(bad)
stos
imul
jge
pop
shl
icebp
out
xor
pop
adc
xor
and
mov
dec
mov
xchg
arpl
or
mov
adc
and
scas
int
sbb
dec
outs
mov
mov
sub
adc
add
mov
xchg
push
(bad)
mov
enter
push
stos
mov
adc
mov
aas
popa
stos
mov
push
cs
dec
stos
pop
dec
in
cmc
mov
mov
push
add
mov
imul
mov
xchg
imul
nop
stos
icebp
pop
adc
xchg
adc
mov
retf
add
mov
xor
push
adc
(bad)
mov
add
add
mov
popa
and
lods
dec
sub
mov
aas
pop
lods
fcom
adc
popf
pop
cmp
das
shl
les
out
popf
and
or
mov
nop
pop
sub
sbb
les
popa
adc
into
push
and
lahf
dec
fimul
mov
add
push
sub
adc
jmp
and
cdq
add
add
sub
push
and
mov
sub
call
sbb
ret
mov
cmp
loop
mov
push
dec
(bad)
dec
xor
push
mov
aas
push
xchg
dec
dec
rcr
jne
fdivp
or
imul
neg
xor
sbb
mov
fcomp
or
push
mov
scas
xor
pop
sbb
movs
add
or
dec
jne
xor
push
adc
xor
inc
mov
add
xor
mov
(bad)
pushf
dec
arpl
xchg
inc
lods
(bad)
jmp
inc
xchg
adc
ins
and
inc
ins
aaa
mov
mov
das
int
mov
xchg
xor
mov
sub
cmp
push
sti
lock
das
pusha
inc
fild
lahf
xor
add
sbb
xchg
adc
xchg
loop
cmp
lds
xchg
pop
or
xlat
and
mov
inc
in
cmp
pop
cmp
xchg
inc
inc
and
in
cmp
lahf
inc
les
xor
or
imul
or
aas
fisub
push
dec
pop
mov
add
adc
js
ins
inc
lahf
inc
popf
mov
pop
pushf
sub
lods
popf
sbb
fld
in
aas
shl
push
in
imul
xchg
daa
jg
ins
lock
cmp
cwde
inc
sub
dec
ins
loopne
dec
lods
jno
mov
or
push
mov
lds
xor
push
in
imul
add
loop
or
in
stos
ins
adc
mov
(bad)
sub
mov
push
ins
aaa
clc
cmp
mov
cmp
sbb
rcl
add
cmp
lods
mov
les
or
test
inc
xchg
jae
xchg
sub
cmp
mov
cmp
and
jl
ret
retf
xchg
and
push
pop
shr
pop
inc
test
call
das
loope
push
pop
dec
cmp
aad
inc
das
stos
adc
add
pop
xor
test
rcr
fcmovu
aaa
(bad)
call
sbb
sbb
out
mov
adc
xchg
dec
(bad)
in
and
xchg
xchg
adc
or
shr
inc
ins
aaa
and
push
arpl
sub
xor
cmp
popa
(bad)
mov
xchg
(bad)
ror
push
or
pop
or
daa
xchg
(bad)
rol
popf
or
and
lods
jge
fs
aad
scas
pop
add
in
clc
mov
loope
test
mov
or
push
in
cmp
fwait
ds
pop
jns
movs
cs
(bad)
and
sub
and
pop
sub
jecxz
lods
jns
aad
cmovnp
adc
and
mov
pop
pop
stos
mov
jnp
push
js
lods
stos
jg
int3
imul
and
test
or
das
mov
xor
or
mov
in
stos
and
or
mov
mov
movs
ss
daa
or
mov
sub
lahf
sub
sahf
push
pop
popa
cmp
and
(bad)
das
mov
sub
sbb
pop
mov
adc
sub
(bad)
add
xchg
add
fwait
xchg
mov
and
daa
scas
sub
lds
sti
fld
or
shl
xor
and
mov
fisttp
sub
adc
fst
aam
sti
mov
pop
adc
pop
inc
mov
sbb
mov
sbb
adc
jbe
in
and
call
add
add
jae
mov
sub
sub
and
(bad)
bound
mov
xchg
popf
and
aaa
push
fdivr
lea
and
pop
std
popf
(bad)
stos
pop
ror
xor
push
xor
jge
xor
sub
sbb
xor
pusha
pop
and
rdtsc
and
test
aaa
xchg
and
push
arpl
retf
ret
xor
mov
inc
lea
stos
xor
fwait
popf
sbb
jne
pop
popf
pop
xor
in
push
nop
stc
fnstsw
rol
or
loope
movs
outs
and
add
xchg
mov
jns
sub
jno
mov
stos
imul
or
mov
or
fnstsw
pop
lea
fist
pop
movaps
add
sub
pop
push
sbb
inc
inc
push
mov
adc
push
sub
jne
sub
jne
add
fcmovu
sbb
add
push
xor
scas
push
jnp
pop
push
mov
mov
nop
outs
sbb
cld
xchg
in
cdq
lds
add
std
jg
mov
xchg
jle
loopne
clc
cld
nop
jo
xor
popf
out
sahf
inc
dec
pop
fs
mov
push
rol
fdiv
jns
aaa
in
add
pop
sbb
pop
add
xor
stos
aaa
nop
mov
rcl
mov
sub
ds
and
fwait
int
fist
enter
sar
fldcw
fcomp
(bad)
aaa
fwait
int
aam
fiadd
cmc
push
vmovsd
jmp
sahf
clc
pop
loop
xor
shr
xchg
icebp
aam
cmps
pop
stc
mov
xor
out
rol
add
push
hlt
add
out
sahf
cmps
sbb
inc
pop
push
jl
mov
jns
rcr
add
rcl
fisub
cmp
rep
out
add
fsubr
ja
adc
ins
fcmovu
push
sahf
out
sahf
mov
int
jns
cld
or
sbb
repz
repz
pop
jo
out
cmp
xchg
movs
mov
push
fidivr
repz
fs
test
repz
cld
or
out
iret
shl
dec
pop
push
jo
cmp
or
es
loopne
or
sbb
repz
repz
pop
jo
(bad)
es
xchg
test
out
sbb
es
repz
repz
test
enter
call
xor
push
pop
ins
jl
jns
out
movs
mov
aam
sahf
out
div
jmp
cmp
sahf
out
pusha
je
nop
mov
lods
mov
sar
clc
add
adc
cmp
repz
pop
ins
jl
sti
cmp
repz
jmp
cmp
cmp
jmp
in
push
and
repz
repz
push
pusha
jo
iret
repz
nop
movs
mov
out
ds
adc
xor
out
push
pusha
je
xchg
out
lahf
out
mov
in
jbe
in
jns
out
out
push
and
pop
out
sahf
out
jl
movs
mov
int3
loopne
outs
out
out
push
and
jns
out
inc
push
push
sahf
mov
sahf
out
rcr
call
out
push
or
and
dec
out
sahf
out
ins
jl
mov
mov
aam
outs
hlt
or
out
sahf
ja
inc
pop
je
int
jns
test
fdiv
or
sub
ja
out
ja
push
or
call
(bad)
sahf
fldenv
add
cs
cld
das
jns
cmps
ins
push
or
push
adc
sub
out
sahf
out
push
pop
push
sahf
or
out
enter
add
ret
scas
and
mov
mov
aaa
into
mov
ja
jg
mov
inc
sbb
add
jbe
lods
retf
(bad)
lahf
cmp
add
add
sub
cmp
xor
xchg
pop
push
mov
cmp
push
inc
int
daa
dec
shl
es
wbinvd
or
inc
sub
leave
or
pop
dec
pop
iret
ds
aas
pushf
cmp
repz
mov
outs
js
pop
ins
je
repz
ins
dec
aaa
mov
ins
push
jno
das
aas
daa
and
sub
in
sbb
push
lahf
popa
rol
mov
pop
repnz
mov
ins
mov
push
and
imul
jns
ss
int
sbb
in
lock
and
les
inc
dec
sbb
add
addr16
ss
fiadd
dec
pop
inc
mov
pop
stos
aam
scas
pop
mov
fisub
(bad)
mov
iret
repz
mov
shl
lock
out
call
jns
out
push
repz
out
int3
loopne
add
iret
repz
sbb
dec
pop
jo
iret
repz
xchg
test
int3
or
lock
add
ud2
push
bound
dec
outs
push
or
pop
or
mov
aaa
or
or
or
outs
mov
sahf
out
push
rcr
cld
adc
stc
cmp
shr
cmp
fs
ret
dec
mov
ret
sbb
cmp
iret
repz
pop
ins
jl
pushf
lods
ds
repz
int3
fdiv
add
jns
out
adc
xor
push
out
sahf
out
mov
jl
loopne
add
adc
xor
iret
repz
push
push
iret
repz
in
aam
mov
das
movs
out
inc
mov
xor
push
(bad)
aam
pop
cmps
cmp
jle
out
push
pusha
mov
jns
xor
(bad)
fimul
fwait
add
ins
or
adc
and
add
push
dec
inc
and
and
and
stos
cdq
and
cs
pop
dec
inc
push
add
sbb
mov
loopne
inc
mov
push
add
ret
fld
push
pop
and
nop
sub
add
inc
dec
pop
lds
cmp
push
or
add
inc
fst
sub
add
test
daa
and
out
pop
xchg
nop
xchg
pop
add
mov
add
pop
or
sbb
iret
sti
inc
pop
mov
inc
sbb
mov
xor
inc
mov
jg
(bad)
imul
inc
ins
sub
pop
cmp
les
addr16
pop
add
push
aam
out
call
sahf
out
sahf
push
fs
cwde
test
sahf
out
mov
test
sbb
cmp
pusha
iret
repz
je
cwde
test
fdiv
into
idiv
cld
data16
push
cmp
repz
push
push
test
je
pop
add
xchg
test
(bad)
rcr
cmp
repz
add
out
out
add
push
push
fs
repz
out
nop
pushf
test
les
daa
iret
shl
in
pmuludq
jns
div
lods
pop
cwde
pop
add
adc
lods
js
mov
out
loope
mov
xor
pusha
add
out
pop
ins
jl
nop
cmp
iret
repz
inc
push
mov
imul
push
jns
aam
add
push
sahf
out
sahf
dec
pusha
js
mov
cmp
repz
add
and
push
repz
repz
out
ds
fsubr
add
cmp
jo
mov
jns
ja
push
cmp
mov
enter
sbb
jns
out
pop
jl
mov
into
jae
inc
dec
push
cmp
cmp
repz
mov
iret
repz
inc
out
sahf
out
js
mov
jns
jge
fdiv
or
scas
push
xor
out
sahf
out
sbb
sahf
in
adc
cmp
cmp
repz
jl
test
iret
cmp
repz
dec
dec
pusha
cmp
repz
pushf
mov
in
sahf
cmps
stc
add
xor
fs
sahf
out
nop
test
loopne
repz
cld
adc
sub
pusha
js
into
repz
movs
mov
jns
jae
push
xor
out
inc
int3
popa
inc
push
jnp
push
push
aaa
pop
iret
rcr
mov
push
adc
cmp
sahf
out
push
push
push
imul
in
and
jns
out
inc
push
or
add
cmp
jns
add
or
and
mov
adc
mov
out
pop
push
adc
adc
adc
test
jb
sbb
inc
leave
inc
sbb
mov
xlat
pushf
mov
lldt
adc
adc
lahf
scas
aam
bound
mov
and
sbb
sub
push
dec
or
jae
push
adc
push
jns
push
sub
cmp
push
pusha
jo
mov
cwde
loopne
mov
scas
(bad)
sbb
in
jbe
xchg
sar
cwde
or
sbb
nop
into
dec
dec
rcl
sbb
mov
push
pop
pop
leave
ins
bound
leave
leave
leave
leave
int3
sub
ins
leave
leave
leave
leave
in
sbb
pop
leave
leave
leave
leave
fdivr
jl
leave
leave
leave
cld
add
leave
ret
(bad)
leave
leave
leave
leave
loop
xchg
push
leave
leave
leave
leave
shl
mov
leave
leave
leave
leave
repnz
leave
retf
push
leave
leave
leave
jmp
leave
fidivr
mov
leave
cli
push
xchg
leave
leave
leave
(bad)
cmps
leavew
leave
leave
leave
out
xchg
push
leave
leave
leave
leave
(bad)
ss
leave
leave
leave
leave
test
dec
leave
leave
leave
leave
into
cs
outs
leave
leave
leave
leave
out
push
sahf
pop
leave
leave
leave
leave
fidivr
mov
leave
inc
add
and
leave
loope
xchg
push
leave
leave
leave
leave
shl
mov
leave
leave
leave
leave
icebp
or
leave
leave
sub
leave
jmp
leave
leave
leave
fnstcw
mov
leave
stc
add
leave
leave
lds
leave
leave
in
xchg
push
leave
leave
leave
leave
aad
mov
leave
leave
leave
leave
cmc
or
leave
leave
int
lods
ins
leave
leave
leave
leave
in
sbb
leave
leave
fnstsw
iret
leave
std
adc
add
pop
xchg
push
push
rcr
xor
mov
jae
pushf
pushf
pushf
pushf
repz
mov
dec
retf
pushf
pushf
pushf
pushf
retf
sub
stos
pushf
pushf
pushf
pushf
stos
imul
pushf
pushf
pushf
jmp
sbb
fwait
pop
pop
fistp
cmp
mov
pushf
pushf
pushf
sti
pop
pop
xchg
inc
(bad)
pushf
pushf
pushf
pushf
(bad)
daa
daa
cmps
pushf
pushf
pushf
pushf
cmps
addr16
pushf
pushf
pushf
out
pop
xchg
pushf
pushf
pushf
pushf
xchg
push
push
xlat
pushf
pushf
pushf
pushf
xlat
aaa
aaa
mov
pushf
pushf
pushf
mov
ja
pushf
pushf
pushf
pushf
test
pushf
pushf
(bad)
dec
dec
iret
pushf
pushf
pushf
pushf
iret
das
das
scas
pushf
pushf
pushf
pushf
scas
outs
outs
out
pushf
pushf
pushf
pushf
out
pop
pop
lahf
pushf
pushf
pushf
pushf
lahf
pop
pop
fistp
aas
mov
mov
ja
pushf
inc
pop
inc
mov
dec
dec
dec
pusha
adc
dec
dec
dec
dec
jo
dec
sub
dec
dec
push
dec
dec
dec
js
inc
and
dec
dec
dec
fs
xor
or
cmp
cmp
mov
arpl
jecxz
jb
jb
push
adc
sbb
jb
jb
or
add
jb
adc
sbb
jb
jb
push
push
push
add
jb
jb
or
pop
leave
leave
leave
ins
adc
leave
leave
leave
leave
adc
sbb
cmp
push
pop
mov
popw
pop
sub
cmp
mov
(bad)
jecxz
in
bound
adc
in
in
adc
adc
ret
les
pop
(bad)
push
test
mov
xor
popa
aaa
imul
push
shl
add
add
add
mov
add
add
adc
sbb
and
xor
inc
add
ins
(bad)
push
add
sbb
jns
out
sbb
sbb
mov
mov
inc
adc
adc
adc
add
add
add
in
int
push
add
adc
push
add
int3
jp
jle
sbb
imul
xchg
cmps
rcl
xor
xor
pusha
imul
popa
adc
mov
jo
mov
rcr
or
pusha
and
cmps
add
push
pop
sbb
repz
cmp
cli
pop
cmp
js
ror
repz
jle
sub
cmp
dec
lock
jns
mul
data16
jle
je
(bad)
mov
fs
push
pop
ja
xlat
pop
test
call
sahf
out
js
xchg
push
push
jl
fdivr
repz
sahf
pop
(bad)
ins
sub
or
cmp
repz
push
iret
repz
adc
cmp
repz
bound
movs
add
cmp
repz
pop
iret
repz
sbb
sahf
out
adc
sub
mov
add
sbb
xor
cmp
repz
pcmpgtd
lods
repz
repz
xchg
or
repz
pop
push
pushf
arpl
jnp
idiv
sbb
outs
cs
fimul
push
mov
call
mov
cmp
xor
jns
xchg
ret
mov
sahf
add
sahf
xchg
xchg
jns
shr
jns
out
mov
mov
pop
popf
xchg
repnz
es
out
jns
push
retf
out
sahf
and
jmp
call
fisubr
sub
jae
lahf
(bad)
dec
addr16
jns
cs
jae
(bad)
mov
or
xchg
out
inc
out
sbb
jnp
(bad)
imul
ja
scas
or
idiv
cmp
push
pop
ja
out
sahf
ja
into
addr16
daa
scas
push
fistp
sahf
mov
pop
dec
sahf
out
sahf
jg
fisubr
xlat
(bad)
push
das
mov
dec
(bad)
in
cs
inc
mov
loope
ror
in
mov
mov
test
or
nop
mov
inc
movs
in
inc
cs
aad
mov
int
or
xchg
or
cs
cs
mov
inc
xchg
sar
repz
or
nop
or
cs
mov
cs
out
in
cs
mov
or
nop
or
and
cmp
add
sub
cmp
in
imul
pusha
pop
js
mov
mov
sub
das
lock
sub
in
lods
dec
sbb
and
inc
push
pop
push
sbb
mov
popa
jg
push
sbb
js
out
sahf
cmps
mov
sar
in
clc
pop
push
sahf
out
sahf
sbb
cmp
cmp
sbb
push
xor
push
je
cmp
repz
push
movs
and
dec
add
cs
xchg
das
(bad)
lods
fmul
inc
add
das
ins
mov
and
add
xchg
daa
into
mov
lods
add
xacquire
sub
fs
and
movups
aad
push
dec
inc
or
call
(bad)
fmul
dec
xor
adc
push
push
arpl
xchg
dec
inc
xor
lds
mov
pop
aad
or
mov
(bad)
test
nop
or
add
push
jo
neg
mov
fmul
adc
adc
cmp
xchg
out
push
pusha
jo
cwde
lods
repz
repz
and
iret
mov
imul
pop
pop
mov
rol
aas
popa
or
xchg
mov
pop
xchg
cmp
and
inc
jge
mov
(bad)
frstor
or
cwde
test
xor
pop
add
ss
sub
or
mov
je
push
dec
pushf
mov
jae
dec
loopne
jp
in
imul
sbb
and
idiv
add
add
(bad)
pop
retf
xchg
addr16
mov
aam
jle
jnp
xchg
mov
movs
push
xchg
mov
xor
fmul
mov
fistp
push
in
or
ins
(bad)
mov
int3
ins
push
sub
inc
add
neg
xor
xchg
inc
or
movs
cmps
in
fisubr
cmp
ds
dec
xchg
test
push
push
mov
xlat
mov
nop
sahf
sar
fdiv
cmp
lock
push
sbb
sub
in
jle
cs
push
jbe
sahf
fadd
cmp
sti
movs
mov
or
pusha
push
dec
xchg
dec
pop
push
push
push
(bad)
(bad)
pop
inc
cmp
es
outs
repz
mov
enter
stos
mov
(bad)
mov
inc
data16
inc
or
neg
dec
sbb
(bad)
test
out
push
loopne
cmp
adc
pop
fcmovnu
mov
adc
scas
fmul
sti
pushf
jge
and
(bad)
neg
aad
push
fmul
leave
es
(bad)
mov
push
inc
sub
cmp
outs
pop
xchg
pop
test
pop
pop
pop
scas
push
dec
out
cmp
mov
(bad)
rcr
ret
sar
ds
pop
or
sbb
push
mov
xchg
push
mov
div
mov
stos
(bad)
loopne
push
cwde
pusha
out
addr16
inc
fdivr
push
or
ss
(bad)
dec
mov
cmp
mov
scas
mov
lock
jo
pushf
mov
clc
ffreep
ret
jae
pusha
add
mov
or
mov
push
mov
out
cmp
pop
inc
call
pxor
cmp
mov
add
push
movd
out
mov
push
jbe
outs
dec
sbb
mov
add
jl
loop
pop
out
es
adc
and
js
loope
sar
ss
loopne
movd
mov
mov
dec
mov
xchg
mov
into
jl
out
loope
push
loopne
mov
lods
pop
cld
dec
xchg
jo
jbe
ficomp
mov
mov
ficomp
inc
xchg
jno
add
neg
rol
push
sbb
xchg
out
into
loop
add
fisub
mov
sahf
test
push
sti
mov
ficom
out
push
push
cmp
jnp
pop
iret
call
test
and
shl
mov
adc
in
push
fbstp
je
(bad)
rol
fdiv
sar
sahf
je
movs
js
js
outs
or
dec
scas
nop
mul
push
lock
in
hlt
sbb
sahf
lods
push
or
pop
maskmovq
idiv
inc
into
aam
in
xchg
fisub
faddp
mov
dec
xchg
sbb
enter
cs
sbb
mov
mov
mov
jmp
ss
push
hlt
loope
dec
scas
add
outs
ins
xchg
cs
add
movs
daa
push
je
pandn
push
add
shr
mov
or
or
les
call
fisub
push
js
into
xor
rol
sar
inc
jo
js
pop
xchg
xor
cs
movs
mov
sub
xor
inc
into
mov
mov
push
or
jl
mov
ds
push
movs
jnp
loop
cs
pop
pop
sbb
jle
(bad)
loop
clc
fisubr
xor
mov
(bad)
jnp
out
mov
jbe
mov
push
pop
inc
sbb
cmp
jb
push
adc
fisubr
sahf
neg
rcl
cmps
in
jbe
(bad)
jle
outs
mov
sahf
xor
dec
cmp
nop
jbe
pop
inc
pushf
push
call
out
jle
add
pusha
(bad)
sar
push
ins
fcomp
jno
ficomp
(bad)
pusha
inc
and
cwde
xlat
dec
xor
push
mov
neg
cmp
xchg
push
sub
xchg
jge
dec
(bad)
fs
test
cld
in
out
loopne
inc
rcl
push
mov
jbe
cmc
cmp
pmaxub
push
pushf
fmul
loopne
pushf
sahf
inc
xchg
add
loopne
in
jnp
mov
lods
push
enter
fidivr
shl
outs
jecxz
pop
xchg
lock
mov
xchg
out
jle
mov
shr
enter
out
frstor
sahf
nop
mov
pusha
data16
mov
mov
pop
addr16
loop
mov
jg
hlt
js
push
jl
sub
es
mov
mov
dec
xchg
sahf
in
ds
ja
push
cmp
push
cld
push
lods
scas
cwde
(bad)
pxor
push
je
je
and
rol
jnp
data16
ds
lock
fisubr
push
aam
mov
(bad)
jl
mov
mov
ss
jle
dec
sub
pop
loopne
push
mov
into
fcom
cwde
xchg
xor
movs
loope
pop
cmp
xchg
mov
(bad)
push
sub
rcr
loopne
jl
lods
push
js
(bad)
ds
and
enter
mov
adc
ret
jnp
sar
fimul
xchg
sahf
cmps
ret
ror
addr16
sar
test
push
mov
cmp
push
adc
(bad)
hlt
out
mov
jnp
fadd
test
icebp
mov
cmp
dec
inc
add
xor
ds
push
add
mov
dec
ds
xchg
mov
scas
pusha
inc
loopne
lock
jl
xor
sub
pop
lock
sbb
xchg
nop
scas
lock
push
out
jle
dec
mov
ret
rol
fidiv
add
lock
ins
ss
outs
add
inc
mov
sysret
push
sub
or
lock
rcl
mov
test
loopne
lods
push
xchg
les
scas
dec
sahf
les
iret
jnp
push
mov
je
sub
jl
(bad)
out
xchg
push
outs
inc
idiv
jo
fdivp
ss
push
inc
cmps
sub
pusha
lds
(bad)
mov
data16
add
pop
adc
push
cs
dec
clc
push
fcom
add
fisttp
outs
or
cmp
mov
sub
push
outs
sub
sub
loope
pusha
push
xchg
mov
add
jbe
add
dec
push
adc
push
les
les
mov
lock
test
add
out
lock
cmp
sub
cmps
add
mov
call
neg
sar
scas
movs
push
shr
inc
sbb
mov
push
xchg
sar
xchg
cld
cmps
shl
push
or
cs
data16
fdivr
mov
push
in
loop
xchg
(bad)
jl
test
es
sbb
pop
sbb
nop
push
cwde
jle
or
out
cs
mov
xlat
sbb
je
hlt
das
stos
ds
test
xor
mov
dec
sbb
shl
in
(bad)
pop
xchg
les
xor
push
fdivr
inc
xchg
test
fdiv
out
nop
lods
sbb
adc
mov
sub
jle
mov
mov
(bad)
cmp
enter
mul
push
cmps
dec
scas
js
xchg
loopne
add
mov
push
and
mov
aam
adc
int3
push
inc
inc
call
ds
scas
test
fdivr
adc
sbb
adc
out
jecxz
inc
icebp
faddp
out
dec
ds
mov
comiss
mov
cs
scas
add
dec
aam
movs
push
sbb
sub
mov
in
xor
inc
dec
cmp
jle
cmps
push
cmps
push
lods
dec
sti
mov
push
fcomp
clc
retf
(bad)
push
mov
test
js
xchg
and
cld
out
dec
jnp
cmp
push
ds
mov
pop
iret
jnp
dec
imul
loopne
pop
mov
ror
dec
out
nop
push
sbb
loop
xor
inc
push
cmp
enter
imul
sahf
ds
mov
sahf
cmps
sbb
push
pop
push
sahf
push
mov
mov
test
and
push
cmp
pop
loop
mov
push
pop
icebp
jo
cmp
test
mov
pop
sub
out
loope
push
push
cs
retf
cmps
cmps
jle
sbb
in
cmps
int3
xor
loope
adc
push
and
jl
mov
es
ds
dec
jnp
clc
or
outs
push
sbb
fisubr
fadd
iret
mov
and
mov
js
pop
jbe
push
js
shr
js
loop
test
jle
push
push
push
cld
push
mov
data16
inc
scas
push
out
in
nop
pushw
mov
add
out
sbb
push
pop
ins
push
in
iret
lds
mov
pop
xchg
(bad)
or
into
jbe
cmps
jp
out
test
xor
mov
ret
outs
or
data16
int3
out
jmp
ins
div
daa
sub
aaa
sahf
push
fmul
push
ins
mov
arpl
imul
push
(bad)
cs
mov
pop
jle
mov
hlt
loopne
daa
sar
inc
mov
pxor
push
xchg
push
dec
into
xor
mov
js
mov
data16
jbe
mov
jo
das
es
cmps
test
push
mov
enter
call
clc
inc
mov
and
sbb
ds
out
loop
popa
pop
cs
xchg
aam
pop
scas
adc
adc
fs
sar
or
cmps
add
cmp
mov
mov
mov
mov
jle
mov
push
lock
sub
cmp
ficomp
(bad)
dec
jo
ret
xchg
sbb
cmps
push
ficom
outs
ss
and
pop
or
hlt
ds
ins
mov
out
popa
mov
mov
fcomp
or
jl
push
iret
div
inc
xchg
js
and
push
sahf
shl
cmp
mov
push
push
mov
mov
add
or
out
xchg
push
or
aam
push
out
mov
or
lock
mov
clc
or
pop
(bad)
jo
out
imul
ror
je
inc
fist
scas
outs
mov
push
mov
scas
cmp
(bad)
dec
outs
mov
push
and
push
cwde
push
or
(bad)
push
fidiv
les
fdivrp
or
js
ins
mov
test
push
sub
adc
movs
add
mov
ss
out
xchg
sub
mov
outs
pushf
inc
lock
loop
clc
xor
push
test
mov
cmp
inc
mov
push
mov
popa
lock
add
(bad)
ins
test
fdiv
jno
push
or
in
js
enter
not
sbb
dec
cmps
push
jle
div
cmps
and
into
push
xchg
pusha
pmaxub
loopne
or
mov
inc
dec
jl
cmp
sahf
add
fsubrp
pusha
mov
ds
es
es
pusha
test
fdivr
sbb
cmps
scas
add
push
mov
lods
lock
fdivp
out
clts
dec
out
ret
add
scas
push
push
int3
mov
xchg
out
loopne
sbb
(bad)
aam
pop
mov
pop
js
sbb
mov
hlt
push
jbe
outs
lods
out
out
fnsave
test
ror
jo
lock
nop
cmps
lods
push
push
ja
scas
mov
dec
fcom
int
xchg
sbb
mov
or
inc
push
mov
es
mov
ret
push
hlt
(bad)
fmul
in
mov
call
getsec
mov
(bad)
fsubr
push
inc
out
(bad)
mov
aas
inc
mov
movs
xchg
pop
push
dec
push
inc
aaa
out
or
push
mov
sbb
push
mov
jge
xchg
hlt
push
fistp
cmp
lods
cmps
mov
dec
icebp
lock
pop
data16
xor
(bad)
es
push
ds
faddp
sbb
and
mov
and
xchg
add
add
adc
es
add
inc
adc
nop
push
add
add
add
nop
jp
clc
push
movs
add
dec
pop
adc
inc
stos
mov
or
nop
or
mov
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
xchg
test
lds
inc
push
push
and
push
push
xchg
cmp
dec
scas
sahf
dec
and
inc
push
hlt
fidivr
push
add
inc
fidivr
xchg
not
inc
push
push
ja
out
mov
dec
dec
cs
dec
push
or
mov
dec
inc
dec
mov
call
inc
(bad)
inc
push
imul
neg
push
cmp
mov
es
push
dec
xor
sub
pop
adc
inc
xlat
push
out
fstp
dec
add
pop
sbb
or
pop
dec
lahf
push
pop
mov
aaa
push
pop
into
inc
call
sbb
push
dec
xchg
adc
pop
retf
jle
push
jp
jae
pop
cli
dec
push
mov
and
jb
adc
sbb
and
sbb
push
sub
mov
push
iret
dec
and
mov
adc
out
xchg
xchg
imul
or
push
xor
clc
or
push
cmps
sbb
pop
or
inc
sbb
inc
mov
push
or
sbb
dec
fild
aas
mov
push
pop
pop
(bad)
ds
inc
mov
inc
iret
xor
shl
es
mov
or
push
push
or
inc
pop
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
lock
add
in
mov
inc
bound
xchg
out
arpl
out
cmp
inc
inc
jns
sahf
xchg
addr16
push
in
dec
push
imul
dec
sahf
dec
ins
dec
ins
dec
sahf
xchg
out
outs
dec
outs
push
jo
cmp
push
jno
jb
sahf
xchg
out
jae
je
out
cmp
push
jbe
jns
sahf
xchg
ja
js
jns
out
cmp
shl
jns
sahf
shl
loop
sahf
xchg
out
jecxz
in
in
cmp
(bad)
out
out
sahf
xchg
out
call
in
jns
retf
jmp
jns
sahf
xchg
in
int
into
out
xchg
out
cmp
out
shl
cmp
sahf
shl
shl
rcr
aam
aad
in
jns
(bad)
neg
clc
dec
sahf
xchg
out
stc
(bad)
(bad)
in
jns
fdivr
frstor
sahf
xchg
std
fdivrp
leave
shr
cdq
lar
pushf
cmp
iret
add
push
pop
or
leave
jae
or
or
push
movups
daa
iret
leave
jae
adc
cmp
sbb
sbb
iret
leave
sbb
repnz
and
and
pushf
cmp
iret
and
es
sub
leave
jae
sub
sub
cs
xor
mov
rdmsr
push
xor
xor
ss
cmp
cmp
cmp
sahf
xchg
cmp
ds
inc
xchg
out
cmp
inc
inc
cmp
sahf
inc
inc
inc
dec
dec
sahf
xchg
out
dec
dec
dec
dec
dec
in
jns
push
push
push
push
dec
sahf
xchg
out
push
push
push
pop
out
cmp
pop
pop
pop
jns
sahf
xchg
pop
pop
pop
pusha
popa
xchg
out
cmp
fs
sahf
addr16
sahf
xchg
out
imul
in
jns
jo
jb
dec
sahf
xchg
out
jne
ja
iret
in
lea
jns
jp
jnp
stc
pushf
cmp
jge
adc
add
je
lea
xchg
mov
mov
pop
xchg
jnp
in
jle
(bad)
lods
ret
nop
mov
setno
xchg
setae
add
jne
jne
add
xchg
jg
sets
push
and
outs
add
mov
setg
push
push
mov
jae
mov
test
add
stc
(bad)
enter
push
lods
fxrstor
sbb
mov
mov
jnp
push
pop
add
mov
mov
mov
xchg
iret
leave
mov
xchg
add
in
bsf
sahf
out
(bad)
leave
enter
dec
sahf
out
int
iret
rcl
rcl
aam
jns
sahf
aad
xlat
fcomp
sahf
xchg
out
fcmovu
(bad)
(bad)
cmp
loopne
loop
dec
sahf
xchg
out
in
out
out
cmp
jmp
in
out
out
icebp
repz
sahf
out
hlt
cmc
not
idiv
dec
sahf
cli
sti
cld
std
(bad)
addr16
add
add
add
sahf
xchg
add
in
or
or
cmp
sahf
or
push
movups
adc
adc
in
jns
push
pop
sbb
dec
sahf
xchg
out
sbb
jns
and
and
dec
sahf
xchg
and
xchg
out
cmp
sub
cs
xor
xor
repz
xchg
lods
add
lods
mov
in
mov
mov
cmp
sahf
(bad)
into
xchg
mov
sahf
xchg
out
mov
mov
mov
cmp
xchg
mov
mov
sahf
xchg
out
mov
mov
jns
call
mov
xchg
out
cmp
jns
sahf
mov
sahf
xchg
out
ret
movs
les
dec
cmps
(bad)
cmps
(bad)
dec
sahf
xchg
out
enter
out
cmp
stos
retf
fidivr
sahf
xchg
fcmovnu
fstp
fist
loope
jecxz
jns
sahf
in
out
call
jmp
int
jns
out
out
cmp
push
jns
sahf
xchg
add
push
add
out
cmp
push
add
cmp
sahf
add
sahf
xchg
out
push
or
pop
in
jns
or
pop
dec
sahf
xchg
out
pop
or
cmp
maxps
jns
sahf
xchg
xor
xor
xor
xor
cmp
sahf
adc
sahf
xchg
out
aaa
sbb
sbb
in
jns
sbb
sbb
dec
sahf
xchg
out
cmp
cmp
jns
pop
aas
and
sahf
xchg
inc
and
inc
xchg
out
cmp
inc
and
cmp
sahf
and
sahf
xchg
out
inc
sub
dec
in
jns
sub
dec
dec
sahf
xchg
out
dec
sub
cmp
das
dec
pusha
jns
sahf
xchg
popa
bound
gs
out
cmp
push
sahf
push
ins
ins
outs
sahf
xchg
out
outs
jo
jb
in
jns
je
jbe
dec
sahf
xchg
out
jns
jnp
out
cmp
jle
cmp
xchg
or
xchg
xchg
cmp
sahf
xchg
xchg
xchg
xchg
cwde
sahf
xchg
out
cdq
call
dec
sahf
lahf
mov
out
mov
in
jns
test
stos
jns
sahf
xchg
stos
lods
lods
scas
scas
xchg
out
cmp
jns
sahf
mov
mov
mov
mov
in
jns
mov
sahf
xchg
out
(bad)
(bad)
enter
cmp
rcl
sar
sahf
xchg
rcl
aad
xlat
xchg
out
cmp
(bad)
fstp
jns
sahf
(bad)
(bad)
loopne
xchg
out
loope
jecxz
in
cmp
out
call
out
jmp
in
out
out
cmp
lock
bnd
sahf
xchg
repz
cmc
clc
stc
in
fnstcw
add
dec
sahf
xchg
out
arpl
xor
gs
jns
sahf
xchg
cmp
imul
jns
sahf
cmp
cmp
out
outs
aas
outs
inc
jo
cmp
inc
jno
jb
sahf
xchg
out
jae
je
out
cmp
inc
jbe
jns
sahf
xchg
ja
js
jns
out
cmp
dec
jnp
jns
sahf
dec
jl
jge
sahf
xchg
out
jle
jg
and
jns
push
adc
push
adc
in
jns
push
xchg
push
sahf
xchg
add
add
in
jns
push
pop
or
dec
sahf
xchg
out
or
jns
adc
adc
sahf
xchg
adc
in
sbb
sbb
cmp
sahf
sbb
push
pop
and
and
and
out
jns
es
sub
in
jns
sub
sub
dec
sahf
xchg
out
das
xor
xor
in
jns
xor
ss
sahf
xchg
aaa
cmp
cmp
xchg
out
cmp
dec
sahf
inc
inc
inc
inc
inc
sahf
xchg
out
inc
inc
inc
dec
dec
in
jns
dec
dec
dec
dec
dec
sahf
xchg
out
dec
push
push
push
out
cmp
push
push
push
jns
sahf
xchg
push
pop
pop
pop
pop
xchg
out
cmp
pop
cmp
sahf
pusha
popa
bound
sahf
xchg
out
gs
cmp
push
ins
ins
dec
sahf
xchg
out
outs
jo
jb
in
jns
je
jbe
dec
sahf
xchg
ja
jns
jnp
out
cmp
jg
jns
sahf
add
out
test
cmp
mov
xchg
out
(bad)
nop
xchg
xchg
out
cmp
xchg
xchg
mov
mov
xchg
out
cmp
jns
sahf
stos
stos
lods
lods
scas
sahf
xchg
out
scas
mov
mov
in
jns
mov
mov
dec
sahf
xchg
out
mov
in
jns
mov
sahf
xchg
rol
(bad)
lds
(bad)
enter
dec
sahf
retf
int
sahf
xchg
out
iret
rcl
rcl
in
jns
aam
(bad)
xlat
dec
sahf
xchg
out
(bad)
fcmovnu
out
cmp
(bad)
loopne
dec
sahf
xchg
loope
jecxz
in
out
cmp
out
jmp
jmp
out
out
lock
repnz
jns
hlt
cmc
div
stos
rcl
ss
(bad)
iret
leave
xor
add
add
jae
pushf
cmp
or
or
add
leave
jae
pushf
sbb
sbb
pushf
cmp
iret
sbb
sbb
sbb
leave
jae
adc
adc
cmp
sub
sub
daa
iret
leave
jae
and
sub
and
daa
iret
leave
daa
cmp
cmp
leave
jae
pushf
cmp
cmp
pushf
cmp
iret
cmp
cmp
jae
ss
aaa
dec
inc
repnz
cmp
dec
inc
dec
inc
daa
iret
leave
jae
inc
dec
inc
dec
jae
pushf
cmp
pop
push
pop
cmp
iret
leave
push
pop
push
pop
push
leave
jae
pushf
push
cmp
iret
push
imul
leave
jae
fs
outs
repnz
cmp
outs
mov
leave
jae
or
test
test
jae
pushf
cwde
nop
cdq
xchg
pushf
cmp
iret
call
jae
xchg
popf
xchg
sahf
xchg
repnz
cmp
lahf
xchg
test
daa
iret
leave
jae
mov
repnz
cmp
lods
movs
lods
cmp
iret
leave
movs
scas
cmps
scas
cmps
leave
jae
pushf
mov
cmp
iret
mov
iret
leave
jae
mov
jb
jae
pushf
cmp
retf
jne
iret
leave
jae
ret
fcom
fnstenv
pushf
cmp
fidiv
cmp
iret
leave
ja
loopne
loope
jae
pushf
jmp
iret
in
in
js
iret
leave
jae
jns
jl
jge
sahf
cmp
cld
repz
in
fwait
jge
cvtpi2ps
imul
sub
in
psllq
fisub
jo
popa
jno
cmp
iret
leave
jb
jae
je
jae
pushf
gs
jbe
cmp
iret
addr16
js
iret
leave
jae
jns
jp
jnp
pushf
cmp
ins
jl
jge
iret
leave
jae
jle
jg
pushf
cmp
fwait
and
and
sar
sar
pushf
cmp
mov
iret
leave
jae
xlat
mov
pushf
cmp
rcr
cmp
iret
leave
fcmovnb
fadd
(bad)
jae
pushf
(bad)
faddp
fistp
(bad)
loope
iret
leave
jae
loop
jecxz
in
pushf
cmp
retf
in
out
iret
leave
jae
out
call
cmp
and
inc
jmp
iret
leave
jae
inc
and
inc
repnz
cmp
and
iret
leave
jae
inc
sub
jae
pushf
cmp
sub
cmp
iret
leave
dec
sub
sub
pushf
cs
das
dec
pushf
cmp
iret
xor
push
xor
leave
jae
push
xor
push
repnz
cmp
xor
iret
leave
jae
push
cmp
popa
repnz
cmp
cmp
cdq
in
xlat
inc
inc
inc
cdq
fs
dec
inc
inc
inc
fs
dec
es
dec
dec
xchg
dec
es
dec
dec
dec
dec
es
fs
dec
dec
es
fs
push
push
push
push
cdq
fs
dec
push
push
push
fs
dec
es
pop
pop
add
pop
and
fsub
dec
xor
ret
lds
and
(bad)
enter
xchg
leave
retf
and
dec
int3
int
and
dec
xor
rcl
xchg
dec
xor
rcl
aam
dec
xor
and
fcomp
xor
and
fcmovu
fmul
popa
fwait
dec
fld
addr16
inc
loope
pop
add
cdq
fs
dec
add
or
or
xchg
dec
es
adc
adc
es
fs
sbb
es
fs
sbb
and
cdq
fs
dec
and
sub
dec
sub
xor
in
and
pop
xor
cmp
cdq
cmp
xchg
inc
inc
inc
inc
cdq
fs
dec
dec
dec
dec
fs
dec
es
push
push
xchg
dec
es
push
pop
pop
dec
es
fs
pop
pusha
es
fs
bound
cdq
fs
dec
push
outs
fs
dec
es
je
cmps
dec
cwde
jbe
jns
add
jnp
jg
(bad)
and
pop
ret
xchg
xchg
pop
xchg
psadbw
je
pop
cwde
iret
or
movs
xor
push
mov
lahf
lods
push
and
push
mov
push
ret
aas
mov
mov
xor
push
(bad)
(bad)
stos
test
addr16
push
dec
es
fs
shl
cdq
fs
rcl
xlat
fldenv
test
dec
outs
fsubp
es
fs
loop
out
cdq
fs
dec
jmp
icebp
repnz
fs
dec
cmps
aas
clc
cli
cld
and
or
pop
aas
add
add
or
and
or
xor
and
adc
adc
and
dec
push
sbb
and
dec
xor
and
sub
dec
xor
and
cs
push
fwait
pop
xchg
and
stos
test
pop
(bad)
cwde
nop
pop
xchg
push
call
cmps
pop
cwde
xchg
out
pushf
cwde
popaw
xchg
popf
lahf
cmps
cmps
imul
ja
fs
shl
lahf
xchg
dec
mov
mov
mov
leave
and
dec
xchg
xchg
xchg
and
dec
xor
leave
xchg
cwde
cdq
call
popf
xor
and
sahf
lahf
mov
out
ret
dec
es
mov
cdq
cmps
cmps
test
cwde
fs
test
dec
cmps
cmps
mov
loope
mov
aas
aad
pop
sub
xor
and
(bad)
loopne
and
dec
loop
out
xchg
dec
xor
jmp
lock
icebp
iret
repnz
out
adc
fs
adc
adc
fs
dec
adc
dec
sbb
sbb
sbb
dec
es
fs
pop
and
cdq
fs
and
and
fs
dec
and
dec
sub
sub
sub
cmps
push
cwde
fs
fild
cdq
fs
dec
add
add
es
push
xchg
dec
es
pop
or
dec
es
or
or
cwde
fs
or
dec
cmps
fbld
fs
dec
es
pushw
es
fs
outs
jo
cdq
fs
jb
jbe
cdq
fs
dec
jp
jle
xchg
dec
or
xchg
xchg
dec
es
fs
cwde
call
mov
dec
movs
cmps
test
xchg
dec
es
lods
scas
xchg
dec
es
mov
mov
es
fs
mov
mov
fs
dec
(bad)
retf
shl
es
(bad)
xchg
dec
es
fcomp
fmul
cdq
fs
loop
cdq
fs
in
call
dec
in
out
lock
xchg
dec
es
pop
and
pop
sub
xor
xchg
dec
xor
xor
and
cmp
xor
and
cmp
cmp
and
dec
cmp
dec
xor
inc
xchg
dec
xor
inc
inc
inc
inc
dec
xor
and
dec
dec
xor
and
dec
dec
dec
leave
and
dec
dec
dec
dec
and
dec
xor
push
fwait
dec
xor
push
push
push
pop
cdq
in
popa
fild
add
es
or
or
dec
es
adc
adc
cdq
fs
push
sbb
sbb
fs
dec
push
and
fs
dec
es
sub
sub
dec
es
xor
xor
cdq
fs
cmp
cmp
fs
dec
ds
inc
fs
dec
es
inc
dec
xchg
dec
es
dec
dec
dec
dec
es
fs
push
push
es
fs
push
pop
pop
pop
cdq
fs
dec
pop
pusha
bound
es
es
push
outs
dec
es
fs
je
cdq
fs
jbe
jp
cdq
fs
dec
jle
and
test
cdq
mov
nop
xchg
pop
fwait
xchg
pop
sub
xor
and
cmps
test
leave
and
stos
lods
scas
leave
and
dec
mov
mov
xchg
dec
xor
xor
mov
xor
and
(bad)
enter
xchg
retf
leave
and
dec
rcl
aam
xchg
dec
xor
fcomp
xchg
dec
xor
(bad)
loopne
dec
xor
and
out
xor
and
jmp
lock
or
mul
cdq
fs
or
or
cdq
fs
dec
or
push
fs
dec
prefetcht2
xchg
dec
es
sbb
sbb
es
fs
fs
sub
sub
cdq
fs
dec
cs
cmp
cmp
cmp
cmp
fs
dec
dec
es
fs
dec
dec
dec
dec
cdq
fs
dec
pop
pop
pop
fs
dec
es
push
cdq
push
ins
adc
cdq
fs
outs
outs
sub
test
xchg
dec
es
enter
cdq
sub
daa
fcmovu
popa
xchg
imul
es
sub
jmp
cli
sti
inc
xchg
dec
es
mov
mov
mov
xchg
dec
call
popf
sahf
lahf
xchg
dec
es
test
stos
dec
es
fs
lods
lods
es
fs
scas
scas
mov
adc
pop
mov
mov
leave
xor
xchg
fstp
xor
outs
in
in
popa
fisttp
pop
(bad)
pusha
xchg
dec
es
popa
bound
es
fs
fs
addr16
xchg
dec
imul
dec
outs
pop
(bad)
and
dec
jb
mov
xchg
dec
xor
mov
xor
and
mov
xchg
rol
leave
and
dec
ret
(bad)
lds
dec
xor
(bad)
enter
leave
leave
retf
ins
xor
and
into
pop
fs
or
dec
es
and
es
sub
cdq
fs
sub
sub
fs
dec
sub
dec
xor
xor
xor
dec
es
fs
cmp
test
cmp
lds
adc
bnd
add
not
adc
aaa
adc
push
inc
push
push
cs
repz
sahf
sbb
sbb
pop
fadd
out
fmulp
and
cs
and
sahf
xchg
es
sub
xor
out
xor
add
cmp
cmp
inc
inc
add
lock
iret
inc
inc
inc
pop
dec
dec
cs
iret
leave
dec
dec
dec
pusha
popa
add
int
adc
pop
add
ja
xchg
add
xchg
add
xor
out
jns
add
fwait
pushf
repnz
mov
cmps
test
daa
iret
leave
jae
stos
stos
lods
lods
out
sahf
cmp
scas
add
int
fst
or
mov
pop
or
outs
not
mov
pop
or
mov
pop
or
in
push
cwde
pop
push
mov
add
pop
adc
mov
pop
adc
mov
int
adc
mov
mov
mov
add
add
add
ret
add
xor
es
les
ret
push
pop
sbb
push
pop
sbb
push
sub
pop
sbb
enter
dec
push
pop
mov
popa
div
push
pop
and
push
pop
and
fwait
cmp
and
push
push
data16
mov
push
pop
out
push
pop
and
mov
jle
inc
fistp
daa
out
in
jecxz
in
in
ja
pushf
cmp
jmp
xchg
in
in
in
adc
pop
and
fistp
dec
pop
pop
inc
xor
pop
dec
sahf
xchg
test
xor
ss
cmp
jns
sahf
xchg
cmp
cmp
cmp
ds
inc
cmp
sahf
inc
inc
inc
inc
inc
sahf
xchg
out
inc
inc
inc
inc
inc
in
jns
inc
inc
dec
dec
mov
xchg
out
dec
cmp
pop
pop
(bad)
std
pop
mov
pop
or
pop
inc
push
or
popf
mov
cs
mov
xchg
out
int
or
cmps
or
das
mov
pop
pop
mov
pop
pop
or
das
int
int
in
neg
push
or
das
jmp
pop
push
or
pop
pop
or
pop
in
leave
repz
retf
push
cmp
neg
addr16
push
pop
das
dec
push
dec
jns
out
imul
mov
retf
jp
sbb
sbb
mul
cmp
xor
pop
sbb
pop
and
pop
and
pop
test
leave
repz
adc
or
xor
iret
test
or
xchg
push
(bad)
adc
idiv
pop
xchg
adc
pop
rcl
pop
fs
pop
test
shl
shl
daa
iret
jnp
ror
rol
add
aam
fdiv
pushf
cmp
fcmovnu
loope
ds
xchg
loope
xor
sub
sti
sub
xor
out
sub
sahf
aaa
ficom
cs
loopne
iret
fwait
jge
call
jle
adc
and
or
pop
jg
adc
fld
ror
ret
xor
push
ret
or
or
xor
shl
(bad)
adc
adc
leave
sbb
sbb
inc
jge
dec
push
and
into
shl
sub
sub
shl
shl
aam
xor
shl
shl
fild
shl
loopne
xor
shl
push
loop
jecxz
xor
rcl
pop
in
dec
shl
jmp
xor
imul
dec
shr
jb
jne
shl
bnd
dec
shl
xor
dec
rol
dec
shl
cld
xchg
and
xor
cdq
call
or
add
repz
test
stos
add
repz
pop
mov
mov
adc
repz
and
pop
shl
add
mov
dec
inc
in
dec
jbe
add
sar
xchg
pop
inc
adc
ss
inc
inc
pop
es
add
faddp
adc
jns
sbb
inc
in
cmovg
add
xchg
sbb
cmp
xchg
add
adc
push
inc
pop
add
stc
and
and
and
and
cmps
imul
cmps
imul
inc
inc
call
repz
cmps
and
xor
es
fcmovne
xor
cmp
xchg
sub
in
cmp
call
repnz
inc
dec
inc
dec
push
ss
in
sahf
dec
push
dec
push
pop
push
dec
fmulp
repz
dec
pop
bound
jns
out
gs
push
iret
cmp
push
jno
je
jns
ja
mov
jp
jge
repz
adc
sbb
out
fimul
(bad)
in
sahf
adc
sahf
out
in
sahf
imul
ins
stos
jns
dec
sahf
ins
lods
mov
outs
mov
adc
jb
out
in
jae
ret
cmp
jns
lds
retf
(bad)
js
dec
sahf
out
jns
aam
jnp
xchg
out
xlat
jl
frstor
in
sahf
jle
mov
xchg
out
scas
jmp
in
sahf
ja
(bad)
iret
cmc
sar
xchg
xchg
or
sti
ds
repz
sti
test
iret
repz
xlat
adc
sbb
pop
ds
repz
and
jns
out
xor
aaa
fistp
loopne
loope
loop
out
sahf
dec
jecxz
out
out
sahf
out
push
call
jns
out
pop
jmp
in
sahf
out
sahf
gs
imul
out
jns
out
je
ja
jp
jns
out
jge
cmp
out
sahf
cmp
sti
mov
jns
out
xchg
std
xchg
(bad)
cwde
outs
and
jecxz
pop
ja
push
add
repz
add
repz
add
cmp
mov
mov
mov
cmp
repz
or
repz
or
cmp
enter
into
adc
repz
adc
adc
repz
repz
adc
cmp
loopne
jecxz
out
cmp
repz
sbb
sbb
repz
repz
repnz
cmc
es
repz
clc
daa
sti
sub
sub
add
add
or
mov
sub
mov
cmps
out
add
je
(bad)
xor
jne
push
cmps
push
xchg
dec
shl
xchg
xor
shl
cmp
xor
rol
inc
mov
shl
stos
push
xor
shl
push
lods
pop
lods
shl
scas
arpl
xor
mov
retf
outs
xor
shl
jno
je
shl
aam
inc
jp
aaa
or
add
clc
adc
pcmpeqd
add
mov
push
mov
or
mov
pop
dec
push
xchg
add
(bad)
push
add
push
sahf
add
or
mov
rcl
cmps
xchg
cmps
adc
push
mov
sub
ja
rcl
ret
jno
outs
rol
jbe
xchg
pop
(bad)
mov
add
pop
sub
enter
xchg
adc
fiadd
rcl
adc
push
xlat
loop
push
pop
sahf
push
fiadd
fstp
movs
enter
add
jecxz
xchg
push
or
add
jmp
test
in
add
mov
mov
jmp
cmc
add
or
clc
mov
sti
add
inc
pop
(bad)
mov
call
shl
hlt
adc
xchg
(bad)
push
pop
bound
xchg
les
push
out
and
test
and
repz
shr
shl
sahf
out
sub
xor
aaa
xor
sahf
out
cmp
pop
inc
out
sahf
out
inc
pop
inc
pop
sahf
out
sahf
dec
pop
dec
pop
dec
pop
jns
out
push
retf
push
int3
pop
out
sahf
out
pop
fstp
fdiv
xor
popa
xor
fs
cmp
push
ins
fisttp
jo
push
cmp
in
jae
dec
or
jns
repz
repz
jg
or
cmp
xchg
test
mov
mov
idiv
mov
out
jns
out
(bad)
xchg
enter
stc
sahf
jnp
popf
outs
push
mov
repz
cmp
lods
fisubr
fdiv
sahf
out
ds
movsx
push
jns
out
les
pop
retf
sahf
out
int
shl
out
sahf
shl
js
cmp
fistp
out
in
call
sahf
jmp
out
(bad)
es
sub
cmps
push
imul
sbb
add
sub
aaa
mov
js
add
sahf
pop
fld
add
out
sahf
out
or
or
sahf
out
sahf
or
or
or
jns
and
daa
adc
jns
out
adc
jns
adc
adc
adc
jns
inc
pop
dec
sbb
jns
out
sbb
push
sahf
out
sahf
sbb
pop
sbb
jns
popw
imul
ins
and
jb
out
sahf
and
js
jnp
sahf
out
es
sub
test
xchg
mov
lea
sub
sahf
xchg
add
lock
push
test
mov
push
xor
aas
jmp
mov
push
cmps
ss
test
cli
pop
outs
aaa
push
aaa
cmp
push
cs
mov
ret
out
mov
adc
int3
add
ret
rol
js
push
fadd
imul
fiadd
sub
pop
sub
add
in
into
es
repz
test
lods
ss
add
iret
repz
dec
push
push
adc
sbb
repz
and
push
repz
repz
das
push
xor
repz
push
xor
cmp
repz
ds
inc
pop
repz
repz
pop
dec
pop
push
iret
repz
pop
push
pusha
push
popa
pop
cmp
repz
pop
arpl
repz
repz
data16
iret
repz
addr16
jp
cmp
cmp
xchg
ins
repz
repz
outs
xchg
iret
repz
outs
xchg
jo
jno
cmp
repz
sahf
jae
je
cmp
rep
jne
jbe
iret
repz
ja
js
jns
cmp
repz
mov
cmp
repz
into
iret
repz
jg
adc
xlat
cmp
repz
fiadd
iret
repz
jecxz
out
repz
xchg
mov
mov
cmp
repz
repnz
mov
cmp
repz
(bad)
sti
mov
out
call
xchg
sahf
out
sahf
pop
xchg
or
out
adc
jns
out
sbb
jns
pop
fwait
and
out
sub
jns
out
xor
jns
cmp
test
dec
stos
push
stos
pop
out
sahf
out
popa
lods
scas
sahf
out
sahf
ins
scas
jae
jns
jns
out
jg
test
out
xchg
mov
mov
out
sahf
popf
mov
mov
out
lods
mov
jns
out
mov
mov
sahf
mov
sar
jns
ret
(bad)
jns
out
ffreep
in
sahf
out
sahf
jmp
icebp
enter
(bad)
jns
retf
pop
repz
pop
nop
int3
push
add
push
iret
repz
into
or
or
(bad)
iret
repz
adc
cmp
repz
daa
aad
iret
repz
(bad)
xor
cmp
aas
cmp
repz
inc
fimul
repz
repz
fcom
pop
iret
repz
fisub
imul
cmp
jne
jnp
repz
repz
repz
out
out
call
cmp
cdq
jmp
movs
in
stos
in
mov
repz
out
mov
mov
repz
leave
repnz
repz
repz
aad
fmul
repz
neg
neg
clc
loope
pop
sub
stc
out
in
out
sahf
out
sahf
add
add
add
mov
add
aaa
add
add
jns
out
adc
adc
pop
out
sahf
out
sbb
out
sahf
sub
das
sysexit
adc
out
cmp
adc
jns
out
inc
adc
adc
push
sbb
pop
sbb
out
pop
sbb
imul
sahf
out
jno
ja
sahf
out
sahf
jp
jge
and
out
mov
jns
out
fwait
sub
sahf
movs
sub
sahf
out
mov
mov
sahf
out
lds
retf
xor
xor
xor
xor
sahf
out
fnsave
jns
out
out
cmp
cmp
clc
or
or
jns
out
dec
push
pop
cmp
sahf
out
aas
sbb
sahf
out
sahf
inc
and
inc
sub
out
inc
xor
dec
and
push
inc
or
cmp
repz
dec
dec
dec
dec
dec
iret
repz
push
push
pop
push
pop
push
cmp
repz
push
addr16
ins
repz
repz
jae
jns
iret
repz
jg
test
pop
cmp
repz
pop
xchg
pusha
call
bound
iret
cmps
lods
gs
cmp
repz
addr16
iret
repz
repz
shr
fsubr
iret
repz
outs
call
iret
repz
je
jbe
lock
idiv
jp
out
mov
push
add
out
sahf
or
jns
out
test
test
xchg
jns
out
xchg
inc
sahf
out
sahf
mov
push
mov
sahf
out
mov
ins
mov
jns
out
(bad)
jle
xchg
lea
sahf
out
xchg
movs
xchg
scas
xchg
out
sahf
out
xchg
rcr
cdq
iret
call
jns
out
dec
lock
add
iret
repz
iret
repz
and
iret
repz
cmps
inc
test
repz
repz
iret
repz
bound
iret
repz
scas
xchg
repz
mov
mov
repz
fwait
mov
mov
mov
iret
repz
mov
cmp
repz
iret
repz
mov
les
repz
(bad)
retf
(bad)
into
repz
repz
int3
iret
repz
fcmove
(bad)
loopne
cmp
repz
shl
shr
repz
repz
(bad)
repnz
iret
repz
cmc
fdivr
fsin
fidivr
mov
push
add
pop
repz
repz
loopne
loope
repz
adc
adc
sbb
cmp
repz
out
out
repz
repz
iret
repz
cs
xor
xor
cmp
repz
repz
iret
repz
clc
iret
repz
dec
cli
push
cld
push
call
fwait
pop
scas
pop
jns
out
int
into
fs
repz
out
add
push
ins
iret
repz
or
and
es
iret
repz
jns
jl
repz
repz
and
repz
bound
cmp
repz
xchg
jo
jno
cmp
repz
je
jne
iret
repz
js
jns
and
test
cmp
repz
mov
cmp
lods
mov
cmp
repz
shl
loope
cmp
repz
loop
jecxz
iret
repz
jmp
mov
jbe
xor
cmp
repz
fist
push
in
repz
push
call
cmp
repz
icebp
pop
hlt
pop
repz
repz
(bad)
std
not
(bad)
shl
push
sahf
out
sahf
add
jo
jno
sahf
out
or
pcmpeqb
out
sahf
out
adc
out
sahf
sbb
jl
jge
sahf
out
and
daa
sahf
sub
jns
out
sub
out
sahf
xor
jns
out
cmp
aas
mov
out
inc
mov
jns
dec
ret
push
(bad)
jns
out
push
leave
push
rcr
jns
out
pop
shl
sahf
out
sahf
arpl
data16
imul
ins
fisubr
jb
jns
out
jne
js
sahf
out
sahf
jnp
jle
cmp
test
xchg
cmp
add
cmp
repz
add
add
iret
push
mov
cmp
repz
lods
inc
scas
inc
repz
repz
mov
mov
inc
mov
cmp
repz
retf
dec
iret
dec
repz
repz
dec
fcmovne
repz
dec
fisttp
dec
out
iret
repz
jmp
out
push
repz
repz
not
cmps
stc
cmp
push
call
orps
push
or
pop
jns
out
adc
jo
out
sahf
out
and
jae
out
sahf
sub
xor
lahf
out
xor
cmp
cmp
repz
aas
sub
iret
repz
inc
sub
sub
repz
das
push
xor
cmp
repz
pop
xor
repz
popa
xor
xor
repz
cmp
jo
cmp
repz
jbe
iret
repz
jns
jl
jg
cmp
repz
inc
test
cmp
repz
mov
dec
iret
repz
xchg
dec
xchg
dec
xchg
dec
cmp
repz
dec
popf
dec
mov
dec
mov
add
mov
add
out
xchg
dec
or
inc
jb
mov
daa
inc
cmps
inc
inc
and
(bad)
adc
dec
dec
pop
leave
and
pop
add
mov
(bad)
push
ja
fidiv
pop
pop
inc
xor
in
popa
ja
das
outs
xchg
pop
jb
popa
popa
popa
arpl
cmps
gs
imul
gs
or
mov
pop
in
outs
in
outs
ja
add
pop
cmp
ja
in
fisub
jns
pop
ret
lds
jg
daa
add
xchg
dec
scas
das
push
push
sub
inc
mov
pop
shr
add
pop
or
jb
pop
or
inc
pop
shl
xchg
pop
shr
pop
pop
jb
and
xlat
scas
or
inc
xchg
jb
mov
addr16
das
push
push
leave
and
daa
mov
dec
cmps
push
jecxz
scas
add
add
pop
jb
add
push
sub
jbe
and
ficom
dec
dec
imul
xlat
scas
loop
out
ins
pop
dec
pop
xchg
pop
dec
xchg
je
xlat
ja
pop
das
daa
daa
xlat
jne
and
cs
das
push
push
pusha
fcom
cs
pop
das
daa
daa
ins
fcom
ja
dec
mov
jae
das
add
scas
pop
mov
pop
push
cmps
jae
mov
xlat
pop
push
inc
je
push
inc
imul
in
je
push
jg
pop
leave
and
add
in
cs
pop
das
or
xchg
dec
cs
scas
pusha
fcom
push
div
pop
outs
mov
or
dec
jp
das
pop
or
addr16
leave
and
push
jne
xlat
scas
pop
inc
ja
pop
dec
mov
imul
nop
dec
jne
das
add
pop
add
add
inc
add
pop
pop
add
inc
dec
aam
fsub
inc
inc
push
cs
pop
out
cs
dec
imul
inc
sub
das
imul
das
mov
cmps
in
sub
xchg
add
or
add
addr16
das
cs
out
clc
mov
adc
mov
mov
pop
inc
inc
gs
imul
pop
inc
inc
gs
dec
inc
jbe
fidiv
imul
pop
mov
outs
pop
push
in
fidiv
push
inc
jb
scas
pop
mov
pop
push
inc
jne
pushf
cmp
pop
push
es
push
jno
and
pop
inc
inc
imul
xchg
inc
stc
mov
dec
out
pop
test
das
pop
add
pop
inc
pop
add
aad
(bad)
das
pop
mov
xchg
imul
inc
fild
cmp
cs
lahf
movs
shl
xchg
dec
test
imul
xchg
movs
pop
mov
ret
push
jb
mov
mov
in
push
and
and
shr
test
pop
jb
fisub
adc
push
das
sbb
scas
pop
sbb
cs
pop
mov
xchg
or
xor
mov
das
cmp
pop
shr
ja
cmps
je
scas
pop
imul
pop
push
inc
ss
adc
xor
or
pop
fwait
mov
jg
fadd
in
dec
scas
pop
push
ss
cmp
mov
xchg
imul
sbb
pop
push
dec
cs
pop
mov
and
inc
jb
xlat
scas
pop
and
or
scas
or
inc
pop
sub
daa
outs
mov
fiadd
pop
push
dec
das
mov
dec
aad
shr
xchg
xor
adc
push
pop
sbb
mov
sub
xchg
dec
sahf
dec
(bad)
mov
sahf
mov
mov
pop
cmp
mov
sbb
fs
int
inc
or
ds
cmp
xchg
out
mov
mov
in
xchg
mov
pushf
cmp
pop
mov
jb
(bad)
ret
and
ds
fdivr
retf
pop
mov
jb
in
mov
mov
pop
dec
push
iret
and
inc
mov
xchg
cmp
jno
je
and
mov
and
pop
pushf
mov
cmps
stos
nop
and
dec
cs
and
pop
inc
pop
bound
mov
and
test
xor
pop
mov
das
inc
xlat
fs
pop
shr
xor
leave
and
es
dec
aaa
sub
pop
add
gs
sbb
das
inc
jno
inc
scas
out
xor
xor
sbb
add
das
inc
cmps
push
pop
inc
addr16
ins
add
addr16
inc
push
pop
das
and
or
aam
dec
or
push
cs
dec
mov
imul
add
pop
imul
and
xor
ss
pop
dec
inc
ins
pop
das
pop
ins
jmp
mov
sub
pop
dec
ins
pop
das
jbe
fcom
ins
pop
and
pop
outs
dec
dec
scas
pop
enter
xor
jecxz
sub
lods
add
das
pop
cmps
popa
or
or
dec
mov
outs
das
pop
pop
fwait
pusha
stos
pop
das
push
pop
jo
fcom
push
das
mov
pop
jb
and
fadd
das
push
mov
jb
push
xlat
jae
aad
movs
pop
das
and
aas
fild
dec
add
pop
or
push
pop
and
out
pop
mov
push
pop
je
jb
and
mov
xchg
pop
xor
iret
push
and
das
xor
mov
dec
pop
push
(bad)
jne
sbb
pop
outs
jne
fcom
mov
imul
push
(bad)
jbe
das
and
ret
xchg
pop
push
mov
pop
pop
jb
mov
add
or
xchg
or
pop
scas
pop
mov
pop
pop
inc
js
sub
xchg
leave
jae
fiadd
pop
pop
add
xchg
outs
leave
jp
and
cmp
push
mov
or
pop
dec
outs
daa
push
ins
dec
mov
or
aad
dec
arpl
das
enter
pop
add
and
pop
or
stos
loopne
sbb
add
lods
xchg
mov
add
push
cs
or
push
push
push
in
mov
lods
xchg
or
dec
mov
push
xlat
cs
xchg
dec
mov
or
loopne
mov
add
inc
pop
xor
add
push
enter
adc
pop
addr16
jo
mov
inc
pop
gs
dec
xlat
imul
scas
pop
imul
mov
pop
dec
outs
xor
add
pop
enter
xchg
adc
pop
pop
ja
ret
add
dec
outs
inc
sbb
outs
das
fistp
nop
mov
add
mov
cs
or
or
add
push
mov
xlat
das
and
pop
jne
or
add
pcmpeqw
cs
mov
in
mov
cs
or
add
push
mov
das
pop
fdiv
pop
pop
inc
jns
and
das
or
mov
adc
adc
in
lods
not
inc
das
pop
sbb
add
dec
pop
and
enter
xchg
xchg
sbb
pop
jb
mov
and
pop
inc
das
dec
mov
das
xchg
out
xchg
add
cs
or
xchg
xchg
mov
in
dec
mov
mov
mov
and
lds
das
mov
leave
adc
xchg
and
enter
add
xchg
leave
and
mov
mov
pop
and
add
jb
cdq
cdq
cdq
sbb
add
add
mov
inc
das
dec
xchg
imul
das
lahf
out
lahf
cs
or
lahf
lahf
lahf
in
mov
inc
cs
or
add
(bad)
xor
jbe
jo
movs
movs
pop
movs
xlat
adc
cmps
leave
test
leave
leave
push
enter
add
push
mov
das
daa
leave
dec
stos
jne
cs
not
add
pop
mov
add
stos
ret
(bad)
mov
lods
pop
push
iret
sbb
xor
cmp
ret
fisub
das
daa
ja
jb
scas
add
leave
add
fcom
push
scas
das
adc
stos
jbe
pop
add
(bad)
or
pop
add
push
leave
enter
jbe
aad
out
das
in
stos
pop
mov
pop
add
(bad)
xchg
pop
and
mov
jb
inc
push
in
cmp
adc
add
push
mov
add
inc
pusha
addps
xchg
das
scas
ficom
adc
add
leave
push
jb
pop
add
and
fadd
pop
mov
jbe
ja
pop
leave
push
jb
add
add
pop
or
pop
pop
test
adc
push
(bad)
ja
pop
fdivr
mov
add
pop
mov
adc
pop
out
les
jbe
and
mov
xchg
mov
mov
pop
(bad)
aam
pop
add
push
fadd
cmps
inc
inc
movnti
add
(bad)
xchg
pop
jb
aaa
(bad)
inc
add
lds
out
shl
movs
pop
xchg
cmp
jb
mov
test
leave
pop
jb
pop
leave
leave
leave
mov
sbb
and
cmp
xchg
rcl
rcr
dec
add
or
jb
and
xchg
imul
and
popa
dec
pop
mov
pop
fs
gs
dec
scas
pop
jb
jbe
dec
cs
cs
cs
test
mov
jl
in
dec
cs
xchg
mov
dec
cs
fs
xor
xchg
dec
cs
push
push
xchg
dec
cs
cs
cs
push
inc
call
pop
jne
js
xchg
pop
jb
jnp
cs
pop
stos
lods
mov
mov
in
dec
cs
mov
mov
mov
fsubr
in
enter
shl
and
leave
and
fld
pop
jb
cmps
out
pop
cs
repnz
inc
lods
lods
dec
cmp
mov
pop
pop
nop
test
gs
add
inc
aad
push
dec
sar
and
xor
jno
ror
out
sti
adc
bnd
jmp
leave
and
jmp
rcl
xchg
xchg
pop
jb
rcl
aad
pop
jb
and
leave
and
leave
and
jecxz
adc
xchg
out
xchg
pop
jb
jmp
jo
movsx
(bad)
(bad)
(bad)
sub
push
fdivrp
add
ins
xor
cmps
dec
test
xor
imul
cmp
cmp
loopne
jb
mov
mov
shl
adc
push
mov
pusha
push
jmp
bound
arpl
enter
push
gs
pushw
inc
mov
addr16
push
pushf
pushf
pushf
fcomp
pushf
pushf
pushf
pushf
cmc
div
clc
and
pushf
stc
or
push
or
push
imul
mov
ins
or
outs
or
daa
daa
daa
and
out
jmp
jmp
daa
out
out
hlt
(bad)
cmc
cmps
dec
dec
dec
div
stc
cmp
imul
cmp
or
or
cmp
cmp
or
lahf
in
in
out
jmp
in
in
in
out
xchg
xchg
and
or
xchg
xchg
xchg
xchg
or
or
xchg
xchg
xchg
xchg
or
or
daa
daa
daa
mov
(bad)
jmp
daa
daa
daa
in
in
out
out
sahf
out
daa
lock
sbb
push
repnz
pushf
je
and
pushf
pushf
pushf
or
or
fwait
pushf
pushf
pushf
or
or
jb
jb
out
jmp
jb
in
in
out
leave
leave
shl
or
(bad)
or
sbb
ins
or
outs
or
push
push
push
push
push
push
mov
jb
push
push
push
push
push
push
push
enter
push
push
pop
push
pop
push
leave
leave
leave
leave
rcl
rcl
leave
leave
leave
leave
aam
(bad)
xlat
jb
leave
leave
fcomp
and
and
inc
mov
and
and
and
and
and
(bad)
movaps
jbe
xor
cmovo
adc
inc
adc
inc
adc
enter
inc
adc
dec
adc
jb
in
adc
(bad)
adc
inc
mov
adc
outs
adc
in
xchg
adc
jno
jb
sbb
iret
repz
and
repz
repz
ja
iret
repz
js
jns
jp
add
repz
push
jl
mov
out
mov
out
push
out
push
ss
push
out
mov
loopne
jg
add
sahf
out
sahf
add
push
in
in
sahf
out
or
or
push
in
sahf
out
adc
adc
cmp
sbb
sbb
sbb
enter
adc
sbb
jb
sbb
sbb
jo
outs
cmp
enter
and
ja
dec
inc
mov
and
add
add
xchg
xchg
xchg
xchg
test
xchg
xchg
mov
push
out
sahf
out
push
ds
inc
sahf
out
sahf
push
inc
pop
inc
pop
inc
jns
out
pop
dec
pop
dec
pop
out
sahf
out
pop
dec
pop
push
adc
pusha
popa
and
bound
enter
and
and
sbb
and
push
out
sbb
push
imul
sahf
ins
sub
outs
push
xchg
xchg
out
outs
and
xchg
xchg
xchg
xchg
jb
je
xchg
xchg
xchg
xchg
jbe
js
xchg
xchg
xchg
xchg
jp
jl
movzx
jno
repnz
xor
in
in
and
and
in
in
and
and
jns
in
and
push
pop
ins
out
sahf
out
outs
pop
outs
sbb
xor
ss
xchg
or
lods
dec
and
jne
xchg
xchg
xchg
jbe
js
xchg
xchg
xchg
xchg
jp
jl
xchg
xchg
xchg
xchg
jle
add
add
xchg
xchg
mov
xchg
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
cmp
xchg
xchg
call
repz
sbb
add
push
jns
repz
or
jnp
jl
iret
repz
jge
jle
dec
dec
fdivp
jg
sahf
add
add
xchg
dec
dec
mov
dec
(bad)
nop
xchg
xchg
cmp
inc
and
scas
inc
mov
and
and
and
and
and
xor
xor
xor
sbb
jb
xor
xor
xor
pop
push
rdmsr
xor
xor
fwait
pushf
pushf
pushf
xor
xor
sbb
mov
(bad)
call
sbb
sbb
(bad)
(bad)
dec
sbb
(bad)
(bad)
inc
sahf
out
sahf
add
add
jns
or
pop
pop
ds
xor
add
or
cmp
shr
push
sub
cmp
ds
repz
push
pop
adc
repz
sbb
repz
add
int
lock
sub
repnz
(bad)
add
add
lock
ud0
xor
(bad)
inc
sbb
add
add
add
outs
inc
mov
jmp
mov
mov
or
push
or
or
or
or
or
push
jl
or
push
mov
retf
push
fimul
call
adc
daa
loopne
sti
adc
jb
jp
adc
outs
adc
or
int
loopne
jmp
jns
mov
mov
mov
jo
rol
lea
pop
(bad)
out
mov
in
jmp
cmp
xor
xchg
outs
cmp
outs
mov
dec
cmp
jae
dec
push
push
bound
jae
repnz
cmps
or
cmp
jns
out
inc
inc
dec
dec
sahf
out
sahf
dec
jo
add
enter
and
or
inc
jb
repnz
dec
push
and
ds
sahf
out
sahf
inc
dec
dec
dec
push
push
sbb
cmp
(bad)
int3
cmp
jge
into
or
xchg
out
rcl
(bad)
xor
leave
repz
xor
inc
dec
mov
xchg
test
mov
mov
fwait
cs
int
xor
xchg
aaa
cmp
or
add
push
xchg
cdq
mov
jae
xor
xor
aaa
cmp
pop
mov
mov
(bad)
leave
push
rcl
outs
push
sbb
shr
loope
sub
nop
push
push
jbe
xor
addr16
sti
sbb
xor
pop
and
and
or
out
sahf
out
dec
dec
add
rol
retf
int3
leave
cmp
xlat
outs
or
xor
cmp
mov
pushf
pushf
mov
push
ds
inc
pushf
cmp
repz
dec
dec
push
cmp
pushf
mov
sahf
cmp
repz
add
repz
mov
cmp
(bad)
(bad)
enter
and
ds
push
ds
inc
dec
out
jns
dec
dec
push
add
rcr
jg
jle
repnz
repz
aas
jg
adc
cmp
sbb
cmp
iret
repz
mov
mov
(bad)
dec
repz
push
(bad)
test
loopne
jecxz
sub
cmp
inc
(bad)
imul
push
inc
sbb
das
mov
sub
(bad)
pop
popf
je
dec
es
xchg
xor
dec
daa
push
push
jle
inc
jge
or
pop
sub
ss
(bad)
dec
mov
jo
jmp
and
test
pop
pop
push
(bad)
adc
sahf
xchg
jle
xchg
sbb
sub
mov
mov
test
xchg
mov
ja
out
out
xchg
inc
add
outs
mov
mov
cmp
out
mov
push
jmp
xchg
xor
adc
je
jns
repnz
adc
or
das
leave
enter
push
sub
sub
pop
push
jg
sysret
ficomp
mov
clts
sub
lahf
out
cs
(bad)
(bad)
stc
dec
adc
(bad)
sti
dec
adc
bound
aaa
pop
inc
inc
in
scas
test
fimul
add
in
in
push
or
in
in
or
adc
in
in
adc
sbb
in
in
sbb
and
in
in
and
sub
in
in
sub
xor
in
in
xor
cmp
in
in
cmp
in
in
inc
dec
dec
in
in
dec
push
push
push
in
in
push
pop
pop
pop
in
in
pop
pusha
bound
in
pushw
dec
sub
in
jo
je
pusha
dec
dec
jbe
pop
xor
mov
pop
jge
dec
pop
mov
test
xchg
mov
pusha
mov
dec
adc
inc
pop
inc
mov
or
test
xor
mov
ror
ja
dec
dec
dec
outs
pop
(bad)
(bad)
retf
dec
dec
dec
iret
rcl
aad
dec
dec
dec
xlat
(bad)
fimul
dec
dec
loopne
in
dec
dec
dec
dec
call
dec
dec
dec
icebp
hlt
neg
daa
mov
ja
cld
dec
dec
xchg
and
add
leave
leave
leave
push
or
or
leave
leave
leave
push
adc
adc
leave
leave
leave
push
sbb
sbb
leave
leave
leave
push
and
leave
leave
leave
leave
sub
sub
add
xor
jmp
mov
pusha
dec
pop
aas
xchg
cmps
jb
cmp
stos
push
rcl
fcmovu
jb
jb
fsubp
loop
jb
jb
out
jmp
add
cmp
cmp
push
push
outs
jo
cmp
cmp
jbe
cmp
cmp
jp
jle
cmp
cmp
mov
cmp
xchg
xchg
cwde
call
mov
cmp
cmp
lods
scas
mov
cmp
cmp
mov
mov
cmp
push
mov
pushf
pushf
pushf
rcl
(bad)
fcomp
fsubp
pushf
pushf
pushf
pushf
loop
out
pushf
pushf
pushf
pushf
jmp
pushf
repnz
clc
push
test
orps
int3
mov
push
pushf
pushf
pushf
pushf
or
or
pushf
pushf
pushf
pushf
adc
adc
pushf
pushf
pushf
pushf
sbb
sbb
pushf
pushf
pushf
pushf
and
and
pushf
pushf
pushf
pushf
sub
sub
pushf
pushf
pushf
pushf
xor
xor
pushf
pushf
pushf
pushf
cmp
cmp
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pusha
bound
pushf
pushf
pushf
push
pushf
pushf
pushf
jo
je
pushf
pushf
pushf
pushf
js
jl
pushf
pushf
pushf
pushf
add
pushf
mov
pushf
pushf
nop
xchg
xchg
mov
mov
pushf
pushf
pushf
stos
lods
scas
mov
pushf
pushf
pushf
mov
mov
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
ret
enter
pushf
retf
rcr
(bad)
fcomp
fsubp
pushf
pushf
pushf
pushf
loop
out
pushf
pushf
pushf
pushf
jmp
pushf
repnz
idiv
inc
sub
das
adc
mov
cmp
cmp
dec
push
pop
pop
pop
les
pop
scas
outs
imul
and
movs
fdiv
sti
out
sbb
push
add
pop
or
adc
adc
xchg
xchg
and
sub
sub
xor
xor
in
dec
adc
jp
stos
mov
sahf
out
mov
jb
xor
add
add
jb
or
jb
adc
jb
sbb
jb
and
jb
sub
jb
xor
iret
cmp
cmp
inc
daa
daa
daa
daa
inc
inc
inc
dec
jb
repnz
dec
dec
dec
jb
jb
push
push
push
push
jb
jb
pop
pop
pop
pop
jb
jb
popa
arpl
jb
jb
imul
jb
jae
ja
jae
jb
jl
add
mov
xchg
xchg
cdq
fwait
sahf
daa
daa
daa
daa
mov
repnz
stos
stos
lods
mov
jae
jb
mov
mov
cmp
(bad)
leave
int3
jb
jb
into
rcl
aam
jb
jb
fcomp
fsub
daa
daa
iret
fstp
loope
in
daa
daa
daa
out
jmp
jb
cmp
out
lock
jb
jb
stc
sti
std
(bad)
cmp
sbb
add
add
cmp
or
cmp
adc
cmp
sbb
cmp
and
cmp
sub
cmp
xor
nop
add
repz
lods
into
rcl
aad
pushf
pushf
pushf
cmp
fstp
loope
pushf
pushf
pushf
jecxz
out
inc
pushf
pushf
pushf
jmp
out
jb
inc
call
jb
jb
imul
outs
jno
jb
jb
jne
jns
jb
jb
jge
or
jb
jb
xchg
cdq
fwait
popf
jb
jb
lahf
mov
jb
cmps
test
jb
scas
mov
mov
jb
jb
mov
jb
mov
jb
jb
rcl
aad
jb
jb
(bad)
fnsave
jb
(bad)
jecxz
jb
jb
out
jmp
jb
jb
out
icebp
repz
enter
stc
popa
add
leave
leave
leave
add
leave
leave
or
leave
leave
adc
leave
leave
sbb
leave
leave
and
leave
leave
sub
leave
leave
xor
leave
leave
cmp
leave
leave
inc
inc
inc
dec
leave
leave
leave
leave
dec
dec
dec
push
leave
leave
leave
leave
push
push
push
pop
leave
leave
leave
leave
pop
pop
pop
popa
leave
leave
leave
leave
arpl
imul
ins
outs
jno
leave
leave
leave
jae
ja
leave
leave
leave
leave
jnp
jg
leave
leave
leave
leave
add
leave
mov
iret
leave
xchg
xchg
fwait
mov
pushf
movs
cmps
test
pushf
lods
scas
mov
pushf
pushf
pushf
pushf
mov
mov
pushf
mov
pushf
pushf
pushf
(bad)
retf
pushf
pushf
pushf
pushf
int
rcl
pushf
pushf
pushf
pushf
aad
(bad)
pushf
pushf
pushf
pushf
fstp
loope
pushf
pushf
pushf
pushf
in
jmp
pushf
in
out
icebp
repz
out
sahf
data16
pop
adc
sahf
daa
xor
inc
inc
push
jns
out
push
pusha
addr16
out
sahf
out
xchg
jns
cmps
mov
mov
mov
ret
(bad)
sar
out
rcl
xlat
loopne
bnd
out
hlt
div
jg
xchg
out
cmp
and
(bad)
int
xchg
xchg
das
xor
add
push
rol
repz
pop
inc
cmp
cdq
popf
xchg
lds
pop
enter
je
cmp
adc
int3
repz
xchg
cld
mov
mov
cmp
rcl
loopne
out
sbb
jb
jp
pop
add
leave
enter
push
mov
iret
xor
xor
xor
iret
repz
(bad)
jo
sahf
lahf
sahf
dec
mov
rol
xor
lock
cmp
(bad)
cmp
inc
dec
jno
aad
stc
cmp
cli
cld
adc
adc
js
out
and
dec
cmp
test
repz
(bad)
nop
xchg
test
daa
iret
rep
mov
mov
repz
repz
(bad)
lock
sbb
iret
icebp
add
cmp
repz
sub
xor
repz
repz
pushf
cmp
pop
pop
pop
jb
repz
cmp
test
repz
xchg
test
mov
mov
leave
repz
mov
(bad)
leave
loopne
test
iret
repz
adc
sub
xor
daa
iret
repz
cmp
cmp
pop
popa
test
mov
cmp
iret
call
cmp
movs
test
scas
mov
mov
add
cmp
repz
sub
xor
repz
xor
mov
repz
nop
xchg
test
pushf
cmp
repz
mov
(bad)
repz
out
push
iret
repz
adc
sub
cmp
iret
repz
test
iret
repz
mov
cmps
stc
add
xor
xor
jns
out
add
lea
cdq
lahf
mov
cmp
cmps
stos
stos
lods
mov
xchg
out
mov
mov
out
(bad)
rol
idiv
repz
dec
push
mov
sahf
out
pop
adc
and
daa
sub
jl
out
push
push
shl
add
clc
cmp
rcr
mov
sahf
test
inc
dec
jns
out
dec
dec
push
push
pop
jns
out
pop
pop
pusha
xchg
mov
sahf
out
mov
mov
out
ret
into
shl
jns
out
fsubr
lock
out
outs
addr16
adc
sahf
push
and
pop
mov
hlt
add
push
outs
jbe
sahf
out
sbb
mov
sbb
ja
test
scas
push
repz
enter
xchg
mov
out
xor
mov
mov
xor
dec
add
int
ror
jns
arpl
inc
pushf
out
sahf
pop
jo
jl
in
sbb
sti
pop
iret
repz
pop
sub
cmp
repz
cmp
inc
inc
inc
inc
call
cmp
out
(bad)
xchg
(bad)
lock
cmp
dec
repz
jb
jbe
jns
cmps
stc
jmp
popf
mov
mov
enter
rcl
fcmovu
pop
add
lahf
out
and
xor
cmps
xor
dec
inc
ds
dec
dec
aas
jmp
add
xchg
daa
and
cmp
stc
ficom
xchg
adc
xor
xor
pop
arpl
xchg
xchg
add
cmp
xor
leave
cmp
push
sbb
push
jns
jb
inc
jge
sub
pushf
pushf
mov
xor
or
pushf
pushf
pushf
pushf
adc
sbb
pushf
pushf
sbb
daa
daa
daa
and
cmp
cmp
aas
inc
inc
pop
xchg
daa
daa
daa
pop
pop
or
enter
cmp
sub
fs
leave
pop
jge
(bad)
cmp
cmp
pushf
push
inc
and
dec
inc
mov
and
xor
or
movups
dec
sbb
push
push
leave
enter
aas
std
ss
cmp
leave
leave
leave
cmp
inc
leave
leave
leave
leave
inc
inc
pop
pop
in
in
pop
or
cmp
in
movs
and
and
cmp
sub
das
leave
repz
cmp
aas
inc
pop
in
leave
leave
mov
daa
dec
xrelease
pop
mov
rol
hlt
cmp
sbb
or
sbb
push
int
out
aam
pop
or
in
gs
or
jecxz
pop
pop
sahf
repnz
leave
cmp
ds
sti
cmp
cmps
jns
adc
push
outs
jmp
sahf
out
in
aam
fcmovu
add
repz
or
and
and
xor
cmp
out
ds
inc
dec
dec
sahf
xchg
dec
repz
add
dec
jns
out
push
push
push
push
pop
jns
xchg
out
push
jmp
in
fiadd
add
jns
out
bndldx
pop
dec
dec
dec
sahf
and
sub
jb
cmp
cmp
jl
jb
jb
lods
mov
neg
and
mov
pop
xchg
push
call
mov
jb
cmp
rcl
out
mov
or
or
xchg
daa
and
outs
es
addr16
sub
(bad)
(bad)
fs
jb
cmp
sbb
pop
pop
xchg
iret
jae
loop
in
and
in
jl
mov
aas
push
enter
fist
mov
repnz
in
jmp
(bad)
loope
out
leave
leave
lods
add
pusha
test
sahf
out
leave
mov
mov
sahf
out
iret
rcr
in
stc
cmp
repz
jne
test
sbb
out
sahf
out
in
out
std
dec
ds
xor
repnz
cmps
add
jb
mov
add
jb
repz
(bad)
cli
or
jns
cmps
cmp
lsl
pop
sbb
xor
cmp
(bad)
iret
repz
adc
xchg
push
add
or
cmp
iret
or
sbb
daa
daa
daa
iret
and
daa
daa
daa
xor
xchg
cdq
repz
repz
lahf
mov
cmp
movs
cmps
lods
scas
int
shl
rcl
aad
cmp
repz
or
and
or
repz
call
es
dec
iret
mov
xchg
push
mov
cmp
rol
push
push
adc
outs
jo
repz
push
push
or
repz
or
sub
repz
cmp
dec
push
push
pop
pop
repz
cmp
popa
addr16
cwde
scas
out
mov
mov
daa
or
push
sub
sbb
sahf
cdq
fwait
repz
aad
lock
xor
jns
add
adc
and
repz
ss
ds
nop
jno
cmps
adc
xchg
xchg
lahf
iret
repz
inc
pusha
jnp
repz
cmp
mov
or
xor
int
jns
jnp
loopne
nop
movs
mov
movs
mov
rol
in
repz
(bad)
in
call
in
out
cld
std
inc
test
fcomp
loopne
popa
pop
lahf
dec
pop
or
iret
pop
jno
mov
pop
fild
pop
(bad)
fiadd
aas
mov
and
inc
cmp
cmc
stc
or
dec
pop
outs
sbb
jg
pop
xor
fs
jo
push
adc
mov
(bad)
inc
shl
push
test
and
push
(bad)
push
test
pop
lds
pop
sbb
mov
mov
mov
jecxz
and
movntq
repnz
xchg
pop
mov
sbb
sub
dec
pop
fisttp
cmp
iret
pop
xor
mov
popf
setg
dec
cmp
or
dec
mov
shr
dec
(bad)
or
jg
popa
pop
(bad)
test
jne
jg
mov
outs
(bad)
fist
imul
iret
pmulhw
mov
fwait
mov
dec
push
inc
mov
mov
movs
pop
outs
jl
stos
rcr
lock
adc
mov
cwde
mov
scas
add
bound
adc
cwde
and
inc
and
mov
pop
or
fistp
fucomi
add
push
and
rol
out
(bad)
and
cmp
das
and
jp
mov
add
pop
push
add
(bad)
inc
pusha
mov
das
xchg
push
(bad)
jmp
push
bound
dec
pushf
rcl
loopne
xor
sbb
test
scas
add
mov
and
dec
ins
es
aad
dec
and
dec
(bad)
inc
mov
inc
and
fisttp
mov
mov
loop
pop
xcrypt-ofb
cmps
adc
das
outs
mov
or
add
test
push
dec
xchg
xchg
mov
mov
call
adc
inc
and
pop
pop
call
add
movs
lea
jmp
imul
imul
cmp
pop
add
jg
mov
pop
push
and
pop
sbb
or
xchg
or
call
add
add
cmps
sub
add
shl
sub
dec
shl
test
lahf
cmps
sahf
test
stos
mov
mov
sar
mov
mov
iret
jmp
push
iret
jo
dec
sar
sar
push
cmp
sub
cmp
mov
aaa
xchg
adc
mov
sbb
inc
dec
cmp
mov
jle
shr
push
mov
lahf
sahf
jbe
out
outs
nop
das
and
adc
add
xor
and
ds
sub
movaps
call
sub
inc
or
cdq
sysenter
sbb
pop
sub
jo
fistp
(bad)
repz
push
out
xor
inc
dec
dec
pushf
ror
push
push
push
aas
and
inc
xchg
mov
xor
je
into
add
sbb
enter
and
movs
pop
and
imul
imul
imul
mov
xlat
jmp
cmps
imul
cmps
jmp
ds
xchg
cmps
imul
mov
inc
pop
(bad)
cmps
(bad)
lea
cmc
sbb
outs
mov
es
xor
adc
inc
test
nop
stos
xor
shl
retf
aam
in
lea
push
add
or
dec
dec
sahf
push
sbb
push
push
dec
call
pop
pop
adc
push
pop
das
shr
cs
cmps
rcr
and
push
out
(bad)
out
daa
daa
dec
cmp
push
push
es
xchg
xchg
xchg
daa
sub
xor
dec
or
mov
lods
pop
pop
xor
sub
sub
dec
call
pop
dec
fimul
xchg
push
xor
lahf
fisub
fadd
(bad)
inc
cmovge
in
in
push
pop
imul
jbe
or
mov
dec
lods
mov
shl
daa
daa
outs
sub
jb
jbe
daa
daa
daa
js
jl
inc
pop
xchg
iret
mov
cmps
dec
iret
enter
mov
(bad)
rcl
ficomp
loop
jmp
clc
xchg
fisttp
scas
leave
enter
int
add
or
leave
leave
leave
or
es
leave
leave
leave
leave
inc
inc
dec
pusha
repz
leave
bound
je
iret
repz
js
add
cmp
mov
repz
in
dec
xor
dec
dec
dec
push
push
push
push
dec
dec
dec
dec
pop
pop
pop
pop
dec
dec
dec
dec
pusha
bound
out
dec
dec
imul
sahf
je
ja
jp
in
in
jge
sahf
lods
in
in
scas
mov
mov
in
in
mov
in
mov
out
in
leave
rcl
sar
out
aam
xlat
(bad)
xchg
dec
sahf
out
(bad)
test
(bad)
scas
push
push
sub
pushf
pushf
xor
pop
jo
iret
pop
mov
inc
dec
sti
jg
and
es
popw
adc
sub
leave
ins
dec
lahf
pop
pop
pop
jnp
leave
leave
leave
jge
mov
add
sbb
pop
cmp
xor
sar
inc
jle
dec
cmps
xor
sub
outs
adc
pop
test
sbb
dec
rcr
inc
pop
pop
or
or
test
das
sub
adc
(bad)
out
movs
and
shr
(bad)
pop
(bad)
mov
in
add
daa
iret
pop
jb
adc
or
cmovno
pop
push
pop
xchg
pop
pop
or
movs
sub
or
add
xor
pop
out
pop
lods
inc
ffreep
pop
das
sbb
lds
outs
xchg
add
pop
push
cmps
cs
(bad)
iret
pop
popf
cmp
out
fist
call
in
sub
out
sub
add
sub
aad
cmp
dec
push
push
test
add
leave
int
jecxz
xor
lea
dec
out
lods
push
or
sbb
outs
jg
push
or
cmp
xchg
nop
dec
scas
inc
out
pop
and
outs
and
add
pusha
test
inc
add
and
jle
int
es
inc
dec
outs
mov
and
inc
inc
lahf
cmp
push
or
mov
scas
outs
push
test
or
rcl
sub
nop
test
add
imul
add
xlat
or
fnstsw
and
iret
add
add
pop
mov
pop
jmp
mov
bound
aas
pusha
push
jmp
cmp
xchg
stos
or
push
mov
or
mov
pop
(bad)
jnp
mov
sbb
test
dec
lods
(bad)
cmps
lods
add
xor
imul
shr
pop
sbb
pop
cmp
jb
jnp
and
sbb
adc
fidiv
add
test
bound
sbb
pop
sbb
sar
gs
sbb
div
pop
sbb
pop
sbb
cmp
sbb
pop
dec
mov
or
pop
dec
dec
or
dec
out
into
pop
gs
ins
pop
sbb
sar
dec
outs
pop
sbb
out
jmp
push
jo
sbb
jnp
div
sbb
pop
sbb
sahf
into
cmp
je
sbb
jne
sbb
pop
out
jmp
ja
sbb
pop
jnp
div
jns
sbb
pop
mov
adc
pop
bound
inc
mov
test
arpl
inc
pop
sbb
fucomip
fwait
jge
inc
pop
sbb
sbb
and
popw
push
mov
xor
push
movs
test
aaa
sti
popw
ins
sbb
sbb
outs
test
outs
sbb
outs
sbb
jo
in
fwait
jge
push
pop
jno
push
pop
jb
push
pop
aaa
sti
data16
push
pop
je
push
pop
jne
test
fst
jbe
push
pop
ja
push
pop
fwait
jge
outs
js
pop
pop
jns
pop
pop
jp
idiv
in
pop
pop
mov
mov
pop
rcl
mov
loopne
mov
loope
sbb
out
ret
sbb
jecxz
sbb
sar
sbb
in
div
sbb
out
sbb
out
cmp
enter
leave
jmp
pop
sbb
jmp
cmps
jae
sbb
in
pop
int3
int
aaa
jb
or
pop
int
or
pop
out
jmp
out
pop
sbb
lock
jnp
div
icebp
pop
sbb
repnz
sahf
into
cmp
pop
sbb
hlt
cmps
jae
out
sbb
cmc
pop
sbb
jmp
pop
sbb
clc
pop
sbb
cmp
je
stc
pop
sbb
cli
pop
sbb
into
cmp
sbb
cld
pop
sbb
out
(bad)
pop
sbb
inc
into
jmp
sbb
adc
push
or
pop
outs
test
loope
rol
sbb
pop
jecxz
in
fwait
jge
ret
pop
in
les
in
lds
aaa
sti
data16
sbb
pop
out
mov
mov
sbb
pop
jmp
outs
jmp
retf
pop
dec
dec
fnstenv
adc
sbb
pop
outs
test
out
sbb
pop
lock
pop
icebp
sbb
fwait
jge
rol
repnz
pop
repz
pop
aaa
sti
data16
sbb
pop
cmc
sbb
pop
neg
test
(bad)
pop
clc
sbb
pop
stc
sbb
pop
fwait
jge
outs
cli
sbb
pop
sti
sbb
pop
cld
sbb
data16
fadd
std
sbb
pop
(bad)
sbb
pop
dec
sbb
aaa
call
js
pop
ja
neg
lods
pop
push
or
add
sahf
jnp
mov
and
push
test
xchg
push
push
or
pop
bound
and
push
or
pop
sbb
mov
push
or
pop
in
jnp
mov
or
pop
js
mov
push
push
or
pop
in
cmp
and
pop
fidiv
lods
shl
push
adc
cmp
pop
xor
ja
or
pop
sub
add
cmp
mov
mov
sbb
enter
sub
sbb
pop
cmp
and
push
sbb
sbb
jp
mov
pop
pop
cmp
out
cmp
and
pop
jecxz
out
mov
and
pop
mov
xor
pop
fidiv
and
or
jnp
lods
cmc
pop
int3
xor
mov
sub
aas
sbb
or
mov
fisubr
pop
shl
and
push
sub
sub
mov
cs
pop
cs
aas
xchg
enter
jne
test
pop
xor
sub
cdq
xor
xor
mov
xchg
mov
fsub
pop
mov
xor
pop
sub
add
pop
retf
iret
or
and
pop
in
cmp
and
pop
fidiv
mov
xor
cmp
jle
and
adc
or
pop
mov
and
mov
mov
and
push
inc
or
pop
mov
and
push
inc
or
pop
mov
add
dec
sbb
test
or
enter
dec
pop
mov
and
push
dec
or
pop
mov
cmp
mov
or
pop
mov
inc
mov
push
or
pop
mov
neg
push
or
pop
icebp
fidiv
mov
and
pop
fidivr
sbb
push
or
pop
jnp
mov
push
pop
or
pop
out
mov
and
out
or
inc
xor
mov
inc
xor
push
pop
or
pop
jb
pop
loop
out
push
pusha
or
pop
push
xor
push
bound
pop
push
and
cmp
or
pop
mov
fcom
xor
pop
jnp
cmp
push
push
fcom
push
xor
cmp
dec
xor
and
ins
pop
dec
xor
push
outs
or
pop
dec
xor
jnp
and
pop
dec
xor
push
jb
jae
adc
jnp
cmp
or
pop
mov
fcom
xor
pop
pop
into
cmp
push
push
xchg
cmp
call
out
mov
and
out
or
fdiv
and
mov
add
and
push
jg
mov
cmp
pop
add
cmp
pop
enter
out
dec
and
pop
cmp
mov
push
xchg
out
test
or
and
push
mov
mov
push
mov
pop
mov
addr16
pop
out
scas
xchg
xchg
pop
sbb
xchg
pop
xchg
xchg
pop
int3
jmp
and
pop
das
in
cmc
push
js
add
dec
xchg
test
cmc
jp
pop
xchg
pop
pop
xchg
push
js
test
call
pop
pushf
outs
outs
popf
or
movs
add
add
lahf
jnp
mov
jl
mov
sub
or
jae
mov
add
iret
mov
xor
in
mov
and
adc
and
and
cmps
repnz
in
and
mov
and
push
scas
mov
jmp
push
mov
mov
sub
mov
cmp
and
pop
neg
sbb
(bad)
xor
not
xchg
mov
out
or
mov
out
mov
and
add
les
mov
pop
fstp
(bad)
pop
sbb
or
pop
mov
pop
add
leave
mov
fsubrp
pop
sbb
or
pop
outs
out
sbb
ds
pop
sbb
mov
into
pop
xor
and
push
iret
or
pop
xor
and
push
ror
pop
xor
sbb
mov
or
pop
xor
add
aad
(bad)
pop
xor
neg
xlat
or
pop
hlt
fidiv
dec
xor
pop
fidivr
or
fisttp
pop
jp
mov
push
fstp
or
push
fimul
pop
dec
inc
fnstcw
xor
pop
xchg
mov
and
pop
fnstcw
or
xor
pop
mov
xor
jnp
or
call
fldl2t
pop
xor
and
mov
xor
and
push
in
or
pop
xor
or
or
pop
xor
pop
js
xor
mov
add
sbb
repz
mov
retf
mov
sbb
or
pop
push
cmp
add
xor
sar
mov
ficomp
stc
pop
inc
addr16
mov
jp
and
push
cld
or
pop
jp
mov
push
(bad)
call
dec
jp
and
ja
popw
sub
and
test
cmp
sahf
jnp
mov
and
mov
jp
and
fimul
or
pop
jp
and
push
or
pop
jp
aaa
sar
and
pop
jp
push
jp
mov
sysret
jp
out
cmp
adc
pop
call
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
sbb
jnp
or
and
mov
jp
and
sar
sbb
test
or
pop
jp
and
push
mov
push
jp
mov
push
and
and
push
pusha
xor
pop
mov
xor
sahf
jnp
loope
jb
and
mov
push
xor
fisubr
sub
aaa
xor
jnp
cs
pop
mov
mov
xor
sub
add
call
xor
pop
xor
neg
and
sub
jnp
mov
pop
mov
and
push
cmp
out
jnp
out
data16
dec
aas
jle
pop
inc
sbb
(bad)
jnp
jg
pop
inc
dec
inc
pop
mov
test
push
inc
call
out
mov
sbb
pop
sbb
pop
add
inc
pop
and
or
pop
xor
push
dec
or
pop
xchg
aaa
fidivr
xor
pop
xchg
(bad)
jnp
mov
or
pop
fucomip
mov
push
push
sbb
pop
push
fdivp
sti
jle
ins
sub
push
sbb
pop
push
sbb
mov
sbb
ficom
push
push
push
sbb
push
pop
sbb
push
pop
and
pop
loop
push
push
pusha
sbb
fistp
loop
push
arpl
rol
sbb
cmps
pop
push
sbb
std
ficom
in
push
imul
sub
outs
sbb
jle
mov
sub
jb
inc
mov
jne
sahf
and
idiv
jge
fs
sbb
ficomp
loop
push
sbb
push
mov
iret
loop
and
mov
call
outs
call
sbb
dec
mov
push
or
mov
ret
pop
inc
or
daa
cdq
add
jo
jno
iret
jge
pop
push
jb
jae
out
mov
and
cmp
cmp
and
out
sti
sbb
add
jl
inc
pop
jge
inc
mov
xchg
pop
cld
adc
pop
sbb
scas
cmp
sbb
xor
sbb
out
out
mov
add
cdq
pop
jecxz
imul
or
fdivp
fidiv
pop
sbb
pop
sbb
repz
fidiv
pop
sbb
mov
mov
call
iret
jnp
rcr
mov
iret
jnp
jnp
sbb
mov
pop
sbb
rol
jnp
sbb
mov
les
movs
lds
sbb
mov
cmps
mov
mov
test
(bad)
idiv
retf
pop
js
loop
push
leave
mov
sub
mov
push
scas
sbb
pop
cmp
mov
lds
adc
icebp
sahf
push
mov
ins
push
mov
jnp
out
pop
ins
push
mov
ins
push
mov
addr16
sahf
lds
mov
ins
push
push
out
pop
mov
mov
imul
lds
ins
push
mov
sub
test
add
mov
push
mov
sbb
mov
iret
ins
push
rcr
push
rcr
dec
icebp
sub
push
ret
iret
bound
add
js
add
cmp
sbb
mov
iret
add
retf
mov
sub
push
retf
sbb
iret
jmp
sbb
push
mov
sbb
push
iret
or
pop
xor
dec
outs
or
rol
fwait
aad
dec
sti
shl
(bad)
pop
or
neg
pop
and
jnp
xor
pop
js
mov
push
fmul
adc
xor
neg
pop
jecxz
shl
and
jnp
mov
and
(bad)
test
push
out
lods
icebp
fsubp
or
pop
shl
and
push
out
out
shl
mov
jnp
and
pop
shl
(bad)
js
mov
jmp
rcr
out
cmp
in
or
pop
jecxz
out
shl
and
pop
hlt
cmc
fcomp
xor
sbb
btc
pop
rol
stc
add
hlt
cmp
jecxz
imul
clc
pop
jnp
fcomp
ins
and
xchg
not
js
cli
adc
pop
or
jnp
cmp
out
jnp
sub
ja
jl
data16
cs
push
mov
push
pop
sbb
push
pop
sbb
jns
pop
not
adc
add
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
sbb
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
xor
sbb
jns
jns
xor
sbb
xor
sbb
mov
add
sbb
pop
sbb
xor
pop
sbb
mov
pop
sbb
cmp
sbb
mov
pop
sbb
cmp
sbb
mov
pop
sbb
pop
sbb
cmp
pop
sbb
mov
pop
sbb
inc
pop
sbb
mov
pop
sbb
inc
pop
sbb
mov
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
shl
add
out
jnp
add
xor
dec
push
xor
addr16
sahf
lds
xor
dec
push
push
out
pop
mov
xor
lds
sbb
aaa
sbb
pop
mov
sbb
cmp
sahf
lds
dec
push
cmp
dec
push
cmp
addr16
sbb
cmp
dec
lds
out
push
cmp
sbb
addr16
sahf
push
aas
sbb
inc
sbb
out
pop
dec
push
inc
sbb
inc
sbb
sahf
lds
inc
sbb
push
out
pop
mov
inc
sbb
sahf
lds
inc
sbb
inc
sbb
pop
mov
sbb
dec
sbb
push
dec
sbb
dec
pop
mov
push
dec
sbb
jnp
out
push
dec
sbb
dec
sbb
addr16
sahf
push
dec
sbb
bswap
jmp
scas
sub
push
sbb
push
push
mov
sub
push
sbb
scas
test
add
push
sbb
jp
jmp
push
push
sbb
push
push
sbb
mov
pop
sbb
push
pop
sbb
jmp
scas
sub
pop
sbb
push
pop
mov
sub
pop
sbb
jmp
scas
test
pop
sbb
repz
sub
pop
sbb
push
pusha
or
iret
mov
xor
sar
pop
mov
and
push
fs
pop
mov
add
push
data16
pop
lock
mov
and
pop
jnp
mov
push
push
imul
neg
mov
and
add
or
pop
mov
and
push
outs
or
pop
mov
mov
push
jo
jno
inc
aaa
fidivr
xor
pop
inc
sar
xor
pop
out
cmp
and
pop
mov
xor
sahf
jnp
loopne
mov
and
(bad)
test
mov
fidivr
jl
jge
cmp
mov
push
jle
jg
sub
add
out
mov
or
pop
sub
add
push
mov
pop
fsubrp
fidivr
xor
pop
sub
push
jp
mov
or
pop
adc
out
cmp
nop
or
pop
mov
xor
pop
neg
and
pop
fidiv
(bad)
in
and
jnp
mov
and
mov
in
and
(bad)
jnp
fwait
pop
in
and
push
pushf
or
pop
in
and
push
sahf
or
pop
in
jnp
mov
or
pop
in
outs
mov
mov
(bad)
neg
movs
or
pop
icebp
fidiv
repnz
pop
fidivr
mov
test
test
aaa
repnz
pop
out
mov
and
out
or
inc
xor
mov
inc
xor
push
mov
mov
inc
add
jnp
xor
pop
jnp
mov
push
mov
mov
sub
mov
and
pop
sub
add
pop
fidivr
mov
mov
mov
and
out
or
jp
and
mov
loopne
and
push
ror
dec
mov
ret
dec
and
push
ret
or
pop
adc
pop
loop
out
push
lds
pop
adc
neg
(bad)
or
pop
fidivr
sbb
leave
or
pop
out
mov
and
out
cmp
jnp
loopne
int
into
pop
(bad)
xor
push
iret
sbb
sahf
jnp
loop
cld
xor
mov
or
pop
cld
xor
push
aam
aad
cld
xor
out
mov
xlat
pop
jecxz
out
inc
xor
pop
mov
xor
pop
neg
and
pop
fidiv
(bad)
repnz
jnp
mov
and
mov
repnz
(bad)
jnp
jecxz
repnz
push
in
in
repnz
push
out
out
repnz
mov
or
pop
repnz
neg
and
pop
repnz
neg
in
or
pop
icebp
fidiv
repnz
pop
fidivr
mov
lock
pop
out
mov
and
mov
sub
add
neg
sbb
pop
add
and
out
add
xor
fdivrp
or
pop
xchg
xor
sar
and
pop
adc
or
mov
std
pop
call
xor
pop
loopne
fstp
xor
scas
sahf
jnp
mov
and
mov
xor
fiadd
add
push
push
mov
pop
pop
xor
push
or
pop
xor
push
or
pop
xor
call
or
or
mov
push
or
pop
mov
and
pop
hlt
fidiv
xor
pop
fidivr
or
adc
adc
sub
or
pop
out
mov
and
cmp
xor
inc
out
or
pop
xor
mov
xor
push
push
or
pop
xor
push
and
pop
xor
push
and
pop
cs
push
and
and
iret
mov
or
pop
jp
mov
push
xor
pop
sahf
neg
cwde
cli
adc
sbb
arpl
sbb
pop
sbb
test
sbb
addr16
neg
push
sahf
neg
push
sbb
imul
cmp
pop
sbb
test
sbb
outs
sahf
neg
jo
sbb
sahf
neg
jb
sbb
sahf
neg
je
sbb
sahf
neg
jbe
sbb
sahf
neg
js
sbb
sahf
neg
jp
sbb
sahf
neg
jl
sbb
sahf
neg
jle
sbb
sahf
neg
add
push
sbb
sbb
sahf
neg
test
sbb
lods
icebp
sahf
test
inc
push
out
pop
pop
cmc
out
bound
out
sahf
lds
arpl
out
fs
pop
mov
sbb
push
sbb
push
addr16
push
push
sbb
push
imul
out
push
push
out
imul
mov
ins
sbb
push
ins
sbb
out
pop
out
outs
sbb
push
outs
sbb
sahf
(bad)
jo
out
push
out
pop
mov
jb
out
sahf
lds
jae
out
je
out
pop
mov
sbb
push
jbe
sahf
lds
out
ja
out
js
mov
push
jns
out
jnp
out
push
jp
out
jnp
out
addr16
sahf
push
jl
out
jge
jnp
out
pop
out
jle
out
jg
addr16
sahf
(bad)
sbb
push
push
out
pop
mov
sbb
icebp
sahf
lds
sbb
push
test
out
pop
mov
sbb
push
xchg
sub
js
out
xchg
jns
adc
adc
les
fsubr
push
jns
retf
add
mov
add
movs
add
out
cmp
movs
add
repnz
push
cmps
pop
pop
test
repz
sahf
or
test
jns
stos
or
stos
or
dec
in
sub
out
cmp
scas
push
push
scas
sahf
cmps
repnz
cmpxchg
adc
adc
mov
sub
push
jns
mov
adc
adc
adc
test
pop
push
sahf
cmps
repnz
mov
sahf
retf
sbb
iret
push
mov
test
mov
cmp
out
push
mov
sahf
cmps
shl
shl
jns
retf
and
ret
in
sub
and
les
fld
dec
lds
sbb
cmps
pop
jge
arpl
add
in
jnp
mov
and
pop
out
mov
and
cmp
push
xor
or
or
pop
push
xor
mov
push
xor
push
or
pop
push
xor
push
or
or
lock
push
push
or
pop
push
pop
fidivr
xor
pop
push
ret
mov
or
pop
js
mov
push
adc
adc
pop
push
xor
pop
mov
xor
neg
jnp
pop
push
xor
jnp
mov
and
test
or
pop
push
xor
ficomp
or
pop
push
xor
push
and
pop
push
xor
ret
and
pop
push
xor
out
mov
and
cmp
es
pop
loopne
out
push
xor
pop
neg
and
pop
jnp
or
push
sub
mov
pop
xor
push
cs
pop
xor
loope
out
push
xor
pop
rol
push
xor
pop
lock
clc
xor
pop
fidivr
mov
ss
pop
jnp
mov
push
cmp
pop
out
mov
and
cmp
clc
xor
or
or
pop
clc
xor
mov
clc
xor
push
inc
or
pop
clc
xor
push
inc
or
pop
clc
xor
push
inc
or
pop
clc
pop
fidivr
xor
pop
clc
ret
mov
or
pop
js
mov
push
dec
or
pop
out
cmp
and
pop
mov
xor
neg
jnp
pop
clc
xor
jnp
mov
and
test
or
pop
clc
xor
ficom
pop
clc
xor
push
push
or
pop
hlt
xor
js
mov
pop
pop
jecxz
out
hlt
xor
pop
neg
and
pop
jnp
or
push
pop
or
aaa
xor
pop
pop
hlt
xor
push
pusha
or
pop
cld
xor
push
bound
pop
xor
mov
fs
pop
lock
xor
pop
jnp
mov
push
push
test
push
push
sbb
out
or
pop
xor
push
ins
or
pop
xor
lock
push
outs
or
pop
sar
xor
pop
out
cmp
and
pop
neg
sbb
xor
outs
add
push
mov
or
pop
ds
sar
push
js
jns
jl
add
mov
jnp
loopne
out
xor
pop
neg
and
pop
jnp
or
push
or
add
add
sar
or
out
xor
jecxz
out
push
test
sahf
jnp
and
pop
fidivr
or
mov
pop
out
mov
and
out
add
push
xor
mov
push
xor
push
mov
pop
push
add
jnp
xor
pop
js
mov
push
xchg
or
pop
mov
xor
sahf
jnp
loopne
push
xor
inc
adc
adc
dec
or
out
xchg
into
addr16
ja
fcmovnbe
popf
or
jns
mov
mov
popa
xchg
mov
test
adc
call
fwait
mov
push
cmp
dec
sub
sahf
cmp
pop
mov
jae
mov
or
pop
mov
cmp
movs
pop
mov
fidivr
cmps
or
pop
mov
iret
and
pop
mov
mov
stos
pop
mov
xor
pop
loop
out
mov
or
pop
mov
xor
pop
neg
and
pop
fidiv
mov
or
jnp
cmp
and
mov
mov
mov
mov
neg
or
pop
mov
out
cmp
pop
mov
out
push
mov
xor
neg
and
pop
mov
xor
pop
icebp
fidiv
mov
or
pop
fidivr
cmp
(bad)
or
pop
out
mov
and
out
adc
js
and
mov
js
and
push
int3
or
pop
sub
add
push
into
or
pop
pusha
xor
js
mov
rol
loopne
out
bound
and
pop
neg
and
pop
jnp
sbb
push
(bad)
or
ja
(bad)
pop
bound
and
push
fmul
pop
bound
pop
loopne
out
push
fimul
pop
bound
and
pop
fidivr
sbb
fimul
pop
out
mov
and
out
add
bound
and
mov
bound
and
push
in
in
bound
fidivr
xor
pop
js
mov
push
call
out
add
and
sahf
jnp
loopne
bound
and
xor
in
pop
bound
and
push
out
or
pop
bound
add
mov
icebp
pop
loopne
out
bound
and
pop
neg
and
pop
jnp
sbb
push
test
add
test
add
push
clc
or
pop
bound
pop
loopne
out
push
cli
or
pop
bound
and
pop
fidivr
sbb
dec
pop
lea
and
test
pop
pop
sbb
pop
pop
idiv
mov
pop
pop
add
or
pop
add
sti
jge
out
or
pop
add
push
sbb
pop
pop
mov
sbb
pop
pop
mov
sahf
jnp
ret
(bad)
add
ret
(bad)
add
ret
fdivr
cmp
(bad)
add
ret
jae
mov
ret
(bad)
add
ret
(bad)
idiv
jle
add
adc
sbb
pop
adc
sbb
pop
idiv
mov
pop
pop
adc
sbb
pop
adc
sahf
jnp
out
sbb
pop
adc
(bad)
mov
imul
(bad)
mov
neg
(bad)
mov
add
(bad)
mov
sub
pop
and
std
mov
pop
and
sub
pop
and
sub
jge
out
test
pop
and
es
out
sti
sbb
pop
pop
daa
sbb
pop
pop
ret
(bad)
sahf
jnp
mov
add
ret
(bad)
add
cmp
add
ret
(bad)
add
out
mov
add
ret
(bad)
add
sti
jle
jae
(bad)
add
xor
cmp
pop
xor
std
mov
pop
xor
cmp
pop
xor
cmp
jge
out
test
pop
xor
ss
out
sti
sbb
pop
pop
aaa
sbb
pop
pop
ret
(bad)
sahf
jnp
mov
add
ret
(bad)
add
cmp
add
ret
(bad)
add
out
mov
add
ret
(bad)
add
sti
jle
jae
(bad)
add
inc
jmp
sbb
mov
pop
inc
sbb
pop
inc
sbb
jnp
out
test
pop
inc
sbb
pop
(bad)
out
cmp
stos
(bad)
mov
neg
jnp
add
(bad)
push
nop
jne
mov
pop
or
inc
je
add
mov
adc
pop
pop
pop
push
ss
add
movs
adc
fcomi
mov
pop
push
arpl
rcr
sbb
into
mov
pop
pop
pop
push
arpl
movs
xor
adc
pop
pop
pop
cmp
mov
sub
push
pop
sbb
mov
add
sub
pop
popa
sbb
pop
bound
push
pop
arpl
idiv
jle
imul
sbb
sbb
idiv
mov
outs
pop
pop
sbb
pop
mov
(bad)
add
ret
(bad)
add
neg
add
ret
(bad)
add
ret
fdivr
cmp
(bad)
add
ret
mov
add
ret
(bad)
add
jo
mov
jge
jno
mov
enter
fcomip
sti
jle
leave
pop
pop
je
retf
jne
retf
out
idiv
mov
ficomp
pop
ja
fistp
pop
out
sti
jge
js
clc
pop
pop
jns
stc
pop
pop
jp
idiv
jle
jmp
pop
jl
cli
pop
pop
or
fistp
sti
pop
pop
sbb
lea
sbb
adc
mov
sub
adc
mov
int
adc
mov
imul
sub
push
mov
inc
call
adc
xchg
aaa
rol
mov
pop
mov
add
push
or
xor
add
xor
shl
or
xor
imul
push
pop
pop
sub
nop
aaa
shr
and
cwde
xchg
sub
push
cdq
xchg
sub
in
xor
adc
call
pop
adc
fwait
xchg
sub
jns
int
push
pushf
xchg
sub
imul
adc
call
daa
adc
lahf
push
adc
inc
cwde
pop
nop
sub
mov
sub
imul
fwait
jno
adc
pop
xor
pushf
ja
sub
push
or
popf
jge
sub
add
mov
iret
movs
test
das
mov
int
push
test
sub
mov
sbb
test
push
call
arpl
stos
shr
inc
movs
sub
lods
xchg
xchg
aaa
movs
sub
push
lods
lea
mov
push
scas
cmps
pusha
movs
pop
in
addr16
scas
test
cs
test
push
xor
imul
test
xor
rol
lods
ja
ins
lods
push
jo
mov
sbb
mov
outs
scas
mov
outs
sti
jge
pop
mov
mov
mov
and
mov
jo
js
add
push
ss
adc
mov
mov
lods
adc
popf
or
jo
jbe
mov
add
sbb
jp
cmp
pop
add
pop
aaa
sar
pop
mov
mov
pop
push
dec
push
push
jae
cwde
mov
rol
(bad)
je
retf
movs
pop
in
ss
mov
call
scas
adc
pop
fimul
(bad)
xlat
adc
mov
(bad)
add
das
ja
fld
jp
and
test
movs
jmp
movs
ja
je
jmp
pop
dec
dec
jecxz
jle
out
mov
test
sbb
pop
pop
rcr
je
lods
ss
sbb
adc
dec
dec
push
scas
outs
jecxz
sub
fcmovnbe
inc
adc
rcr
retf
cmp
out
xor
add
xchg
ficom
aam
pop
adc
cli
es
pop
scas
aam
in
sti
jge
loope
jmp
(bad)
dec
aaa
sbb
fnstcw
dec
ja
and
rcr
mov
or
pop
out
fld
or
adc
pusha
ins
shl
sbb
xlat
(bad)
loopne
stos
(bad)
loope
sbb
jp
xchg
adc
fsubrp
out
pop
sbb
in
sbb
xchg
aam
adc
sbb
stc
cmp
adc
cld
hlt
sub
mov
xchg
ins
jmp
adc
pop
(bad)
add
das
jp
cmp
adc
sbb
adc
sbb
jl
fidivr
jmp
pop
sbb
add
mov
and
sub
fld
and
mov
sbb
sbb
add
push
pusha
or
pop
idiv
sbb
pop
idiv
pop
sbb
idiv
pop
sbb
pop
idiv
pop
sbb
pop
idiv
pop
sbb
pop
idiv
pop
sbb
idiv
pop
sbb
pop
pusha
mov
mov
test
js
loopne
stos
push
jno
stos
push
xor
fidiv
stos
push
jae
stos
js
loopne
push
je
stos
push
jne
test
sbb
loopne
sub
jns
fidiv
js
stos
push
jp
stos
loopne
xor
jnp
stos
push
jl
fidiv
js
stos
push
jge
stos
push
jle
cmp
push
jg
stos
push
cmp
ja
or
pop
sub
add
inc
push
imul
pop
in
out
out
pop
sbb
out
out
rol
sbb
out
out
aad
sbb
mov
sbb
out
out
fld
sbb
fiadd
sbb
out
out
fild
sbb
fadd
sbb
out
out
fld
sbb
fiadd
sbb
out
out
fild
sbb
loopne
sbb
out
out
loope
sbb
loop
sbb
out
out
jecxz
sbb
in
sbb
out
out
in
sbb
out
sbb
out
out
out
sbb
call
loope
mov
add
jae
sbb
loope
xchg
push
rcr
scas
push
aam
fidiv
iret
scas
push
aad
scas
push
(bad)
sbb
push
xlat
sbb
iret
loope
scas
push
fstp
scas
push
xchg
sbb
ficomp
scas
push
fistp
scas
js
loope
push
fcomp
scas
push
fstp
neg
jae
push
ficomp
scas
push
fistp
iret
loope
xchg
push
loope
fidiv
sbb
loope
xchg
push
jecxz
scas
push
in
fidiv
iret
scas
push
in
scas
push
out
cmp
push
out
scas
push
call
sbb
push
pop
xchg
push
mov
sub
jns
adc
pop
sbb
xor
sbb
jns
jns
xor
sbb
pop
sbb
xor
pop
sbb
jns
jns
aaa
pop
sbb
cmp
sbb
jns
jns
cmp
sbb
cmp
sbb
jns
jns
cmp
sbb
pop
sbb
cmp
pop
sbb
jns
jns
aas
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
jns
jns
inc
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
jns
jns
dec
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
sbb
push
pop
sbb
push
pop
sbb
jns
jns
push
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
pop
sbb
jns
jns
pop
pop
sbb
pop
sbb
pop
pop
sbb
pop
pop
sbb
icebp
ds
mov
pop
xor
rol
push
out
jns
xor
rol
xor
shl
sahf
(bad)
jnp
xor
rol
xor
out
push
ss
push
aaa
sbb
push
cmp
rol
cmp
out
sbb
push
cmp
rol
jnp
out
push
cmp
rol
cmp
sar
sbb
push
sbb
out
jns
push
aas
sbb
push
inc
sbb
icebp
sahf
(bad)
rol
inc
sbb
push
push
out
jns
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
jnp
inc
sbb
push
inc
sbb
jns
out
push
inc
sbb
push
inc
sbb
push
dec
sbb
push
dec
jns
out
sbb
push
dec
sbb
(bad)
jnp
out
push
dec
sbb
push
dec
sbb
mov
dec
sbb
push
dec
sbb
out
jns
push
dec
sbb
push
push
sbb
icebp
sahf
(bad)
rol
push
sbb
push
push
out
jns
push
sbb
push
push
sbb
icebp
sahf
(bad)
jnp
push
sbb
push
push
sbb
jns
out
push
push
sbb
push
push
sbb
push
pop
sbb
push
pop
jns
out
sbb
push
pop
sbb
(bad)
jnp
out
push
pop
sbb
push
pop
sbb
mov
pop
sbb
push
pop
sbb
push
pusha
or
pop
inc
not
div
and
pop
movs
mov
jge
pop
sbb
rcr
pop
data16
pop
sbb
out
mov
mov
push
icebp
fidiv
push
imul
jnp
xor
pop
inc
mov
and
pop
dec
in
inc
inc
sbb
outs
push
xchg
out
cmp
jo
push
jb
inc
loope
jae
mov
neg
pop
sub
add
push
jle
aas
movs
jg
cmp
inc
add
shl
push
or
jnp
mov
push
test
not
fiadd
fimul
out
push
xchg
pop
shl
das
loope
out
push
mov
pop
rol
push
mov
pop
fidivr
mov
mov
adc
xor
out
dec
js
shl
and
mov
shl
and
push
xchg
or
pop
rcl
fidivr
xor
pop
jp
mov
push
xchg
or
pop
mov
xor
sahf
jnp
call
push
call
pop
loopne
and
push
pushf
or
pop
loopne
add
mov
lahf
pop
loope
out
loopne
and
pop
neg
and
pop
jnp
mov
push
movs
or
not
fisub
fimul
out
push
cmps
or
pop
jl
das
loope
out
push
test
test
sahf
jnp
and
pop
fidivr
mov
lods
or
pop
out
mov
and
out
dec
js
jl
and
mov
jl
and
push
mov
mov
jl
fidivr
xor
pop
js
mov
push
mov
mov
out
cmp
and
pop
mov
xor
neg
cmp
pop
movs
xor
jnp
mov
and
mov
or
pop
movs
xor
faddp
or
pop
movs
xor
push
ret
pop
movs
xor
jnp
and
pop
movs
xor
js
mov
mov
div
and
pop
jecxz
out
movs
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
ror
mov
xor
ret
rol
jl
and
push
aam
aad
jl
and
push
(bad)
or
pop
cmc
fidiv
jl
and
pop
fidivr
sbb
fimul
pop
jnp
mov
push
fmul
ret
and
or
or
pop
jl
and
push
loopne
loope
jl
xchg
lock
push
loop
jecxz
jl
jnp
mov
or
pop
jnp
mov
push
in
or
pop
sub
and
mov
loopne
idiv
jle
adc
sbb
mov
mov
adc
add
movs
adc
add
out
movs
adc
push
sbb
cmps
adc
sti
jle
out
or
test
pop
or
test
std
mov
pop
or
stos
adc
or
lods
adc
out
test
pop
push
sbb
fucomip
sti
sbb
mov
pop
adc
mov
mov
adc
mov
pop
adc
mov
pop
adc
out
idiv
sbb
adc
push
sbb
jge
pop
sbb
mov
idiv
jle
mov
mov
mov
adc
sbb
mov
mov
jge
push
sbb
mov
idiv
jle
rcl
and
rcl
and
ret
idiv
mov
adc
and
les
pop
and
out
lds
pop
inc
cmps
mov
sub
fidivr
add
pop
js
mov
push
inc
or
pop
mov
xor
sahf
jnp
loop
mov
out
cmp
pop
add
and
push
dec
or
pop
add
inc
js
mov
dec
pop
loop
out
add
and
pop
neg
and
pop
jnp
lea
push
or
aaa
ficom
mov
js
push
push
or
pop
mov
out
push
push
or
pop
mov
xor
pop
fidivr
lea
pop
pop
out
mov
and
out
inc
js
fdiv
and
mov
repnz
push
pusha
or
pop
add
cmp
push
bound
pop
add
fidivr
xor
pop
add
jnp
mov
or
pop
jp
mov
push
push
cmp
and
pop
mov
xor
neg
cmp
pop
dec
xor
jnp
mov
and
mov
or
pop
push
xor
fiadd
and
push
xchg
pop
push
xor
push
mov
pop
push
xor
push
mov
pop
push
adc
cmp
mov
ficom
xor
pop
mov
xor
pop
neg
and
pop
fidiv
mov
xor
jnp
sub
and
mov
push
xor
dec
mov
or
and
push
and
and
outs
movs
neg
pop
hlt
xor
push
sub
pop
hlt
xchg
fidivr
xor
pop
hlt
sar
mov
or
pop
js
mov
push
cs
pop
mov
xor
sahf
jnp
jecxz
mov
and
mov
or
pop
mov
and
push
ss
pop
mov
pop
js
mov
cmp
loope
out
les
and
pop
neg
and
pop
jnp
lea
ds
aaa
push
fidivr
pop
les
and
push
inc
or
pop
repnz
push
inc
or
pop
repnz
fs
mov
inc
pop
repnz
neg
inc
or
pop
fs
mov
push
dec
or
pop
neg
and
pop
out
mov
and
sahf
jnp
fs
repnz
inc
test
repnz
push
push
add
pop
repnz
mov
or
pop
mov
fcomp
repnz
pop
jnp
mov
push
push
or
pop
neg
sbb
repnz
mov
repnz
and
pop
pop
repnz
push
pop
or
pop
repnz
and
and
pop
repnz
mov
fsub
pop
repnz
mov
or
pop
mov
fcomp
repnz
pop
jnp
mov
push
data16
pop
neg
sbb
repnz
mov
repnz
and
imul
xor
push
ins
or
pop
repnz
sar
and
pop
hlt
xor
push
jns
jp
sub
add
out
mov
or
pop
sub
add
push
jge
sbb
jg
fidiv
movs
hlt
dec
and
jnp
sbb
and
mov
fdiv
and
sar
pop
fdiv
and
push
xchg
pop
fdiv
and
push
mov
pop
test
(bad)
jmp
fsub
pop
out
xor
push
xchg
pop
pop
dec
cmp
push
mov
xchg
jnp
xor
pop
push
sar
mov
or
pop
jp
mov
push
cmps
or
pop
out
cmp
and
pop
ret
inc
push
xor
out
push
sbb
adc
mov
add
aaa
imul
ins
add
add
add
out
sub
or
dec
xchg
ins
cmp
mov
je
cdq
movs
jne
push
or
xor
je
add
fst
adc
aaa
call
xor
inc
imul
pushw
cmps
jle
dec
cmps
mov
retf
dec
pop
outs
ins
pop
ins
xor
test
mov
adc
sbb
mov
pop
sbb
pop
sbb
inc
pop
sbb
inc
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
dec
pop
sbb
mov
pop
sbb
pop
sbb
dec
pop
sbb
dec
pop
sbb
mov
pop
sbb
push
pop
sbb
mov
pop
sbb
push
pop
sbb
mov
pop
sbb
pop
sbb
push
pop
sbb
push
pop
sbb
mov
pop
sbb
pop
pop
sbb
mov
pop
sbb
pop
pop
sbb
out
cmp
scas
push
inc
sbb
push
inc
sbb
cmp
scas
push
inc
sbb
push
inc
sbb
out
sbb
ret
jnp
out
push
dec
sbb
mov
dec
sbb
push
out
cmp
push
dec
sbb
lock
ret
scas
push
push
sbb
mov
push
sbb
push
push
sbb
cmp
scas
push
push
sbb
push
push
sbb
out
sbb
and
push
out
push
pop
sbb
loopne
loopne
sub
sub
mov
mov
pop
sbb
sub
jnp
jnp
adc
sbb
iret
jnp
push
cs
sbb
das
pop
sbb
jnp
or
pop
sbb
xor
sbb
jnp
or
pop
sbb
xor
sbb
jnp
or
pop
sbb
iret
jnp
push
ss
sbb
aaa
pop
sbb
jnp
adc
pop
sbb
cmp
sbb
jnp
adc
pop
sbb
cmp
sbb
jnp
adc
pop
sbb
iret
jnp
push
ds
sbb
aas
pop
sbb
jnp
sbb
sbb
inc
pop
sbb
jnp
sbb
sbb
inc
pop
sbb
jnp
sbb
pop
sbb
iret
jnp
push
inc
pop
sbb
inc
pop
sbb
jnp
and
sbb
dec
pop
sbb
jnp
and
sbb
dec
pop
sbb
jnp
and
pop
sbb
iret
jnp
es
pop
sbb
dec
pop
sbb
sahf
inc
mov
sbb
sub
out
jns
out
push
sub
sbb
sub
fsubp
js
sbb
sub
sbb
sub
sbb
push
sbb
(bad)
jnp
out
push
das
sbb
push
xor
sbb
sbb
push
xor
jnp
out
jns
push
xor
sbb
xor
out
sahf
(bad)
sbb
xor
out
jns
sbb
push
aaa
sbb
icebp
sahf
(bad)
jnp
cmp
sbb
cmp
out
jns
out
push
cmp
sbb
cmp
sahf
(bad)
jnp
sbb
cmp
sbb
cmp
sbb
push
sbb
(bad)
jnp
out
push
aas
sbb
push
inc
sbb
mov
inc
sbb
push
inc
sbb
out
jns
push
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
sbb
inc
sbb
push
push
out
jns
inc
sbb
push
inc
sbb
icebp
sahf
(bad)
jnp
dec
sbb
push
dec
sbb
jns
out
push
dec
sbb
push
dec
sbb
push
dec
sbb
push
dec
jns
out
sbb
push
dec
sbb
mov
push
out
push
dec
sbb
push
add
in
not
ud1
mov
xchg
dec
add
or
retf
in
mov
mov
push
sbb
sbb
retf
in
push
and
and
jb
pop
sub
sub
cs
retf
in
xor
cmp
jb
pop
cmp
xchg
retf
inc
inc
inc
dec
dec
retf
in
mov
mov
pop
pop
pop
pop
xchg
retf
in
pusha
bound
jb
pop
cs
outs
jo
xchg
retf
in
je
js
add
in
jnp
add
adc
inc
mov
pushf
mov
lahf
mov
dec
jae
cmps
test
inc
shl
mov
jb
call
cs
retf
retf
rcl
retf
in
mov
mov
loopne
in
xchg
retf
in
call
dec
rcr
idiv
cli
movs
jae
xchg
cld
(bad)
repnz
retf
add
or
or
in
mov
mov
sbb
sbb
xchg
retf
in
and
and
sub
pop
sub
xor
and
imul
mov
dec
jo
call
mov
mov
cs
shl
cs
retf
movs
fcomp
(bad)
loopne
jb
pop
loop
out
pop
cs
retf
jmp
cmp
xchg
mov
mov
jne
sbb
pop
(bad)
(bad)
adc
(bad)
cmps
cmc
imul
lahf
jno
xchg
(bad)
movs
cmc
and
shl
pop
pop
test
movs
pop
xor
loope
cmp
imul
sbb
pop
xchg
leave
xchg
mov
jne
sbb
pop
(bad)
xchg
fnstenv
mov
pop
pop
pop
(bad)
adc
(bad)
xchg
jne
rcr
dec
dec
(bad)
xchg
jne
stc
mov
in
jns
(bad)
retf
xchg
and
test
xor
or
pop
mov
cmc
ins
inc
sbb
cmc
int
pop
(bad)
test
pop
push
sub
(bad)
fnsave
lea
cmp
pop
(bad)
xor
sbb
(bad)
and
jge
(bad)
pop
xor
or
xlat
mov
jne
inc
sbb
cmc
int
into
push
aam
call
pop
cs
add
or
xchg
retf
in
or
adc
adc
mov
sbb
xchg
retf
in
and
and
in
mov
cs
cs
retf
xor
xor
cmp
in
mov
mov
inc
inc
dec
dec
xchg
retf
in
dec
dec
push
push
push
jb
pop
cs
pop
pop
pop
cs
retf
in
pusha
bound
jb
pop
push
cs
retf
jo
je
js
in
mov
mov
test
in
mov
mov
mov
in
test
lods
scas
in
mov
mov
cs
retf
mov
retf
in
mov
mov
int3
into
rcl
xchg
retf
in
aam
fcomp
fdiv
pop
cs
loop
cs
retf
in
call
jb
pop
lock
neg
xchg
retf
clc
cli
cld
(bad)
shl
sbb
dec
das
cmp
dec
dec
pop
arpl
pop
mov
dec
and
pop
je
pop
xor
lahf
test
pop
rcr
pop
mov
pusha
jl
in
pop
inc
sti
dec
dec
rcr
pop
or
mov
and
dec
rcr
sub
shl
aas
inc
add
mov
into
ret
fs
arpl
pop
cmp
mov
sbb
arpl
jo
cs
fisub
add
in
mov
mov
retf
mov
in
mov
mov
mov
retf
in
stos
lods
scas
mov
jb
pop
cs
mov
in
mov
jb
pop
(bad)
enter
cs
retf
into
rcl
aam
retf
in
mov
mov
cs
loopne
jmp
push
mov
outs
loopne
clc
pop
aaa
(bad)
push
scas
and
sbb
scas
inc
pop
sahf
and
sbb
jg
push
sahf
and
cmp
mov
cmp
mov
loopne
pop
out
adc
add
(bad)
lahf
or
adc
or
mov
add
and
adc
push
inc
pop
push
add
adc
add
push
add
add
clc
fbstp
and
sub
or
out
or
scas
sub
ja
daa
loopne
js
call
add
daa
loopne
js
aaa
phaddd
and
or
mov
mov
mov
add
lea
mov
push
and
cmps
imul
and
sahf
lahf
mov
call
dec
sar
add
dec
shl
push
sbb
cmp
xor
sar
ds
inc
inc
cmps
imul
imul
dec
shl
shl
fdiv
sbb
cmp
push
outs
lea
retf
mov
popa
add
stos
mov
and
jo
out
cs
into
mov
push
add
jb
pop
or
or
retf
adc
adc
jb
sbb
cs
and
retf
in
sub
retf
movs
imul
mov
inc
inc
inc
inc
pop
cs
jae
dec
dec
dec
dec
retf
in
mov
mov
pop
pop
pop
popa
xchg
retf
in
arpl
imul
outs
jno
cs
retf
in
ja
jl
xchg
retf
movs
imul
lea
jb
xor
mov
call
imul
cs
cmps
mov
retf
in
mov
movs
imul
fstp
pop
cs
retf
loope
in
jmp
jmp
out
lock
mov
std
cs
retf
add
add
pop
or
or
retf
adc
adc
jb
sbb
cs
and
retf
in
sub
cs
jae
cmp
inc
inc
inc
out
mov
dec
movs
mov
call
jae
call
dec
shl
xlat
fnstenv
pop
cs
(bad)
cs
retf
in
in
jmp
pop
in
out
repz
clc
sub
xor
popa
add
jb
pop
imul
cs
retf
in
jne
jns
in
mov
mov
retf
lea
in
mov
mov
mov
retf
in
test
jb
pop
cs
mov
cs
retf
in
mov
jb
pop
(bad)
enter
mov
rcl
aad
xchg
retf
in
(bad)
fstp
in
mov
out
cs
retf
jmp
retf
in
mov
push
pop
cs
sti
std
inc
add
mov
mov
movups
adc
pop
sbb
sbb
and
and
loopne
jne
inc
fnstenv
jns
add
xchg
retf
in
add
mov
adc
cs
retf
in
pop
sbb
sbb
pop
and
and
daa
sub
sub
mov
mov
cmp
in
inc
inc
inc
dec
dec
jb
pop
cs
dec
push
push
cs
retf
in
push
pop
pop
pop
in
mov
gs
cs
retf
imul
mov
mov
jnp
jg
xchg
retf
in
add
pop
lea
call
xchg
retf
in
movs
cmps
test
pop
cs
mov
mov
xchg
retf
in
mov
jb
pop
rol
(bad)
pop
cs
retf
leave
retf
int
ror
in
mov
mov
fstp
loope
xchg
retf
in
in
jmp
pop
cs
icebp
repz
das
xchg
retf
in
stc
sti
std
call
call
adc
cmps
imul
cmps
imul
imul
cmps
imul
ret
(bad)
ror
xor
rcl
xlat
loopne
repnz
dec
shl
div
or
push
retf
in
xor
adc
xor
shl
cmp
imul
mov
pushw
imul
xchg
retf
movs
add
lea
retf
xchg
xchg
xchg
cdq
fwait
retf
in
mov
mov
cmps
test
in
scas
mov
mov
jb
pop
cs
xchg
retf
in
ret
(bad)
in
mov
rcr
retf
rcl
xlat
(bad)
int
jb
fstp
loope
in
arpl
jb
push
mov
add
cmps
inc
inc
inc
cs
retf
in
dec
dec
dec
push
in
mov
pop
pop
cs
retf
pop
pop
pop
popa
arpl
in
mov
mov
add
lea
cs
xchg
xchg
and
and
xchg
(bad)
inc
sub
xor
xor
aaa
cmp
cmp
aas
inc
inc
inc
inc
out
mov
dec
in
mov
push
pop
cs
retf
pop
pop
pop
pop
popa
retf
in
mov
rcr
imul
js
cs
dec
jp
jg
or
jb
test
cs
xchg
mov
scas
in
test
push
and
sti
push
inc
cmps
mov
test
add
call
sbb
mov
call
aad
push
aaa
push
imul
dec
repz
out
pop
(bad)
add
cmp
shl
fcmovu
imul
sbb
cmps
imul
imul
bound
jp
cs
and
add
retf
repnz
cwde
lahf
mov
scas
mov
mov
add
or
add
dec
jl
mov
add
xor
jae
ret
(bad)
cs
sar
adc
add
dec
pop
jo
imul
sub
pop
xor
imul
sbb
xor
rcr
and
ss
sub
add
cmp
dec
dec
xor
rcr
bound
cs
jae
mov
jae
mov
jecxz
or
shl
dec
push
int
imul
sbb
(bad)
xchg
dec
jae
int
jecxz
or
rcr
inc
inc
dec
in
xor
push
bound
shl
add
shl
push
push
jb
xor
bound
mov
out
int
jecxz
retf
dec
jae
add
bound
ror
movs
imul
cmp
dec
mov
mov
mov
jb
mov
neg
add
aaa
cmp
jle
test
xchg
cmps
jne
pop
into
xor
call
cmp
cmps
imul
xor
movs
add
cmps
dec
sbb
add
pop
add
shl
jb
cmps
mov
(bad)
leave
shr
adc
xchg
cmps
imul
sub
cmp
pop
sbb
shl
pusha
bound
inc
dec
shl
jl
jmp
xor
cmp
call
and
cmps
mov
in
out
icebp
shl
xor
aaa
rcl
dec
shl
in
add
cmps
fld
sbb
sbb
xor
and
add
sub
(bad)
jmp
call
sub
jl
lock
retf
add
fisub
sbb
test
dec
add
push
add
mov
mov
shl
ss
imul
imul
out
push
call
shl
es
add
imul
add
cmps
or
cmp
aas
shl
inc
add
mov
mov
cmps
imul
ret
inc
rol
inc
lods
push
out
shl
jae
add
out
inc
dec
dec
dec
call
mov
cmps
imul
xor
daa
cmp
jge
xchg
cmps
ror
int3
mov
cmps
mov
ds
inc
dec
dec
jae
call
xor
shl
(bad)
enter
xor
rcl
test
shl
cmp
imul
call
or
pop
call
adc
dec
rol
xchg
push
jne
repnz
repz
add
sub
jb
dec
into
sub
xor
cmp
push
push
bound
call
mov
movs
(bad)
call
dec
rol
(bad)
enter
cmps
imul
cmps
imul
rcr
push
popa
retf
call
cmps
imul
inc
inc
cmps
mov
mov
cs
stos
out
in
out
cmps
xor
and
sub
call
and
dec
rcr
mov
push
xor
movs
adc
mov
mov
mov
xor
xor
dec
sub
in
out
jmp
dec
in
push
add
jae
mov
mov
push
pop
data16
jb
daa
inc
daa
cmp
mov
mov
add
in
ret
push
es
cmp
imul
stc
rol
pop
shl
in
mov
add
out
or
or
xor
or
or
or
xor
shl
or
or
in
mov
or
ror
push
fsubr
cmpxchg
aaa
xor
add
cdq
loopne
mov
push
jmp
shr
ins
dec
add
fld
mov
add
cdq
sbb
data16
push
pop
sbb
cmps
push
dec
xor
cmps
pop
test
test
xor
add
fldcw
sub
adc
add
call
adc
add
outs
add
xlat
add
add
inc
or
lock
shl
mov
xor
xor
and
cmp
out
out
retf
add
inc
je
inc
add
and
xchg
dec
rcl
add
bound
jnp
bound
sub
mov
mov
xor
jb
ja
lock
jnp
mov
jle
fdiv
sub
pop
sar
imul
xchg
xchg
int
add
sbb
je
imul
mov
fwait
add
jmp
mov
inc
hlt
xchg
add
sub
xor
and
xchg
xor
xor
xor
shl
or
shl
inc
xor
pop
call
and
fidivr
push
or
sbb
add
xor
mov
jge
or
or
jg
jnp
(bad)
and
xchg
add
rol
jno
das
pop
jbe
ror
add
retf
addr16
add
sbb
or
pop
mov
ja
fadd
hlt
and
fild
mov
add
push
and
add
imul
cmps
movs
push
sbb
loopne
add
test
out
pop
out
mov
cmps
imul
cs
fs
cmps
imul
call
add
and
mov
ret
ds
ret
xor
test
ffreep
loopne
outs
xor
sbb
push
adc
adc
sar
nop
xor
and
add
in
xor
shl
in
out
retf
in
add
add
push
dec
cmc
add
sub
xchg
retf
and
jno
inc
push
push
push
pop
sub
cld
adc
pop
inc
sbb
sbb
jge
sub
ss
or
jno
retf
push
jg
pushf
jge
call
cs
dec
jae
cmp
out
fst
add
cmps
jb
mov
add
mov
movs
mov
iret
test
jmp
imul
add
add
add
mov
in
cli
jmp
imul
shl
cmps
rcl
out
out
cli
imul
adc
adc
fcomp
dec
movs
mov
jmp
adc
int
rcr
mov
add
push
pop
popa
xor
shl
ja
jg
shl
xchg
test
mov
mov
mov
mov
cs
ins
call
shl
adc
sub
xor
xor
xor
shl
pop
pop
pop
jb
call
xchg
cmps
imul
imul
fwait
loopne
or
add
shl
sub
dec
shl
cmp
pop
pop
pop
popa
jno
call
nop
xchg
pop
call
sahf
shl
test
cdq
cmps
xor
scas
mov
imul
movs
imul
shl
popa
test
nop
xchg
test
mov
mov
mov
ss
loope
repnz
or
dec
rcl
adc
cmp
jae
popa
jp
test
xor
xchg
call
ins
cs
push
xor
xor
rol
xor
and
cmps
imul
imul
call
sub
rcr
fmul
imul
ins
imul
jne
add
shl
pop
popa
cmps
imul
pop
call
in
rol
mov
dec
push
imul
imul
imul
shl
call
sbb
sbb
hlt
add
outs
add
sbb
or
push
imul
imul
pop
call
call
stos
fisub
int
cmc
mov
imul
or
cmps
rol
or
add
call
jbe
inc
dec
imul
sar
mov
sbb
add
dec
pop
xor
shl
jmp
mov
clc
xor
mov
cmps
test
call
mov
rol
into
shl
fcomp
push
xor
mov
lahf
mov
xchg
push
sub
call
loope
ins
je
xor
dec
add
lahf
mov
cmps
cmp
mov
push
jl
cld
or
call
in
call
add
pop
or
cmps
imul
imul
and
xor
jl
imul
cmps
sub
inc
cmps
imul
pop
call
cmps
imul
imul
sbb
xor
shl
adc
and
bound
loop
imul
mov
(bad)
retf
adc
sti
xlat
ds
fnstenv
sti
pop
dec
shl
cmp
call
inc
inc
sti
mov
imul
dec
(bad)
xchg
(bad)
lock
std
xchg
mov
cmps
jb
add
cld
(bad)
shl
jno
mov
dec
ret
iret
rcl
push
sahf
ss
mov
jg
or
sub
cmp
cmps
imul
sti
imul
mov
ror
repnz
add
inc
inc
dec
cmps
imul
fs
iret
push
add
xchg
add
xchg
or
xor
sub
push
or
add
xor
fwait
and
or
adc
cmps
imul
call
inc
push
pusha
call
dec
add
adc
ins
scas
adc
outs
and
loope
icebp
xchg
cs
cmp
add
or
add
cmps
add
(bad)
push
push
xor
add
sbb
cli
add
push
mov
aaa
xchg
add
pop
inc
add
mov
cmps
add
dec
aas
call
mov
bnd
add
add
push
sbb
outs
adc
gs
mov
and
cs
cs
retf
xor
adc
das
xchg
pop
arpl
pop
fild
pop
jnp
(bad)
jb
lods
mov
push
inc
retf
in
lea
and
mov
ins
outs
jo
xchg
retf
in
je
out
jmp
sub
xchg
retf
in
xchg
mov
xchg
xchg
xchg
xchg
retf
in
(bad)
and
and
mov
or
or
push
adc
jns
pop
sbb
sbb
push
pop
pop
(bad)
xor
cs
cmp
retf
in
inc
pop
pop
pop
or
cmp
bound
fist
jp
inc
mov
push
pop
cmp
cmp
mov
jb
jle
sub
imul
imul
jae
jb
pop
jne
out
sub
xchg
retf
jmp
out
test
xchg
jb
pop
mov
xchg
retf
nop
xchg
xchg
xchg
cwde
in
jb
(bad)
std
and
sub
xchg
dec
and
or
jb
pop
or
cs
retf
pop
sbb
push
pop
retf
movs
mov
aas
std
sbb
cmp
cmp
inc
inc
xchg
retf
in
inc
dec
pop
pop
pop
mov
(bad)
cmp
cmc
jb
pop
or
and
movs
imul
pop
cs
retf
add
or
fist
loopne
add
xchg
and
retf
in
mov
call
and
imul
pop
call
mov
mov
jle
xchg
mov
rol
repz
call
add
or
pop
push
pop
push
aam
push
cmp
stc
fcomp
mov
pop
gs
xor
hlt
or
mov
enter
ss
rcr
(bad)
dec
adc
add
push
push
inc
int3
outs
add
in
test
pop
call
call
ins
add
or
sub
sbb
sbb
fwait
cmps
imul
popa
rcl
add
call
inc
sbb
xchg
cmps
imul
imul
call
inc
mov
push
mov
pop
stc
sub
pop
retf
add
push
add
xor
cmps
imul
imul
sbb
pop
mov
xor
fs
xor
mov
add
sti
cmps
movs
add
pop
call
jle
xor
repz
div
ja
iret
clc
xchg
es
sar
cs
add
shl
(bad)
xor
fisub
fistp
adc
fucomip
stos
adc
push
imul
cmps
imul
imul
mul
inc
add
out
or
bndldx
mov
and
fs
pop
add
push
pop
jns
or
or
push
mov
add
cmp
and
adc
dec
fidiv
shl
jae
outs
and
inc
rol
imul
xchg
xlat
div
add
dec
or
inc
and
jl
call
inc
inc
dec
xor
rcr
call
mov
push
aam
jmp
imul
fnstenv
loope
and
sar
outs
shr
shr
retf
sti
shl
push
add
fdivr
(bad)
jmp
xor
inc
add
dec
ins
call
fs
cs
cmps
test
loop
jae
pop
jmp
fistp
xchg
sti
adc
jmp
test
sar
add
mov
repz
icebp
or
lods
lods
lods
stc
or
push
fist
retf
fdivr
std
push
inc
loopne
in
jl
sub
enter
test
retf
in
scas
mov
dec
shl
(bad)
jmp
cmps
mov
jne
cmps
test
mov
cmps
imul
cmps
imul
xor
aam
cmps
jo
and
mov
mov
mov
inc
pop
lea
cmps
add
jns
pop
cs
mov
add
cdq
push
push
inc
jmp
std
(bad)
test
or
xchg
xchg
cmps
test
or
xor
push
popf
or
pop
pop
cs
rcr
pop
xor
cmp
cmps
mov
into
stos
push
fcomp
ss
gs
adc
push
popa
(bad)
push
je
dec
shl
call
push
or
call
push
and
in
imul
cmp
dec
dec
call
lahf
mov
mov
movs
imul
or
aad
jmp
add
pop
imul
imul
xor
imul
add
dec
pushf
dec
rcr
add
rol
xchg
mov
and
jo
call
xchg
sar
cmps
mov
das
add
inc
fbstp
sub
jmp
cdq
add
repz
call
add
adc
loope
jae
and
aaa
cmps
imul
hlt
xchg
add
inc
xchg
call
je
dec
shl
sub
jg
call
shl
xor
mov
es
add
dec
or
movs
xor
sub
add
aaa
cmp
jae
ja
push
add
std
in
cmps
imul
call
jns
xor
shl
es
fs
shl
mov
scas
fst
mov
inc
rcr
sub
shl
xchg
mov
shl
ror
fistp
icebp
add
xor
call
repnz
inc
jbe
ins
call
add
cmps
imul
cmps
imul
lock
ds
inc
push
mov
idiv
cld
hlt
or
(bad)
sti
inc
not
xchg
dec
shl
adc
sbb
call
and
imul
shl
add
pop
xchg
sbb
push
or
xor
add
arpl
or
jl
in
shl
jo
jbe
push
dec
jp
mov
cmc
dec
adc
inc
cmp
loope
lahf
les
rcl
inc
dec
xor
adc
les
or
pop
sbb
out
test
hlt
or
popf
cmp
stos
add
ins
add
or
cmp
adc
sbb
jo
push
ret
nop
loop
push
and
mov
clc
add
xchg
mov
xor
mov
pop
pop
jo
ret
pusha
and
loopne
cdq
lods
adc
test
ret
nop
or
add
test
adc
lock
bound
cmp
js
cmp
inc
data16
cmp
fdivr
mov
pop
xchg
pusha
bound
and
pop
ret
jmp
add
mov
cmp
xchg
loope
push
pop
adc
add
dec
sbb
ss
pop
adc
mov
test
dec
rol
cld
mov
jl
pop
leave
xor
xor
or
inc
xchg
in
shl
and
dec
addr16
test
mov
lock
adc
fisub
sub
adc
mov
inc
push
xor
sbb
push
mov
add
xchg
inc
mov
push
sub
jne
ror
or
xchg
cdq
add
push
pop
stos
movs
add
pop
or
pop
and
(bad)
stos
xchg
out
and
mov
test
in
cld
pop
push
jp
inc
and
mov
mov
pop
inc
sub
lods
xor
cmp
pushf
pusha
adc
dec
sti
add
mov
es
jecxz
and
inc
mov
add
outs
mov
xchg
inc
es
inc
loopne
add
dec
nop
sbb
and
dec
hlt
les
jnp
shr
inc
sti
and
jbe
jnp
add
dec
fucom
(bad)
xor
or
ds
sub
cs
and
mov
nop
mov
scas
xchg
test
sbb
std
rcr
or
inc
mov
add
jne
pushf
cs
push
jl
nop
mov
popa
mov
adc
dec
pop
fst
mov
loope
test
arpl
pop
pop
popf
dec
add
push
test
jnp
mov
cmp
stos
or
mov
sti
push
sbb
shl
pusha
add
mov
adc
mov
or
mov
and
fimul
lahf
sub
iret
mov
cmc
aaa
adc
or
add
or
js
pop
data16
xchg
sbb
arpl
popa
and
pop
das
fst
mov
cmp
sbb
(bad)
in
test
test
pop
cmp
and
and
les
hlt
loop
into
mov
pop
ret
adc
pop
dec
fsubr
into
mov
and
das
adc
push
loopne
xor
movs
jo
sub
hlt
xor
xchg
ret
jmp
and
add
test
pusha
sub
sub
cwde
sbb
pop
and
pop
mov
add
jp
dec
(bad)
sbb
outs
jb
jp
dec
push
and
pop
cdq
mov
push
loopne
stc
repz
movs
ins
aad
adc
pop
out
xor
xor
enter
and
push
add
and
and
es
clc
and
xchg
add
adc
mov
mov
mov
or
ins
jp
mov
mov
pop
loopne
sbb
sub
pusha
add
mov
add
add
movs
(bad)
and
xor
adc
jno
and
pop
rol
sbb
ret
pop
add
les
test
sahf
mov
inc
rcl
add
xchg
das
loopne
loop
pop
or
mov
cmp
retf
pop
add
add
daa
mov
sub
sbb
int
loopne
fild
lahf
fst
adc
lods
or
mov
out
jb
add
sub
and
push
adc
sub
sub
push
inc
sub
xchg
lea
sbb
inc
dec
pusha
jle
fidivr
mov
js
add
add
add
outs
mov
test
jmp
add
and
iret
fild
pop
add
fisttp
and
clc
add
or
es
push
sub
test
lock
pop
mov
sbb
dec
clc
xchg
sub
lock
fwait
inc
and
add
or
mov
adc
add
stc
xor
loope
leave
jl
add
xor
mov
jo
mov
loopne
cmps
dec
add
scas
xor
adc
push
jmp
sub
xchg
sub
xchg
jb
pop
cmp
adc
mov
aam
xor
imul
pop
add
mov
(bad)
imul
jle
xor
push
add
shr
es
fisubr
imul
add
fild
lea
jg
and
loope
lock
leave
sar
clc
sub
or
add
push
push
or
add
jae
push
fcmove
dec
loopne
popa
imul
push
loope
hlt
add
sbb
js
xchg
daa
push
inc
gs
add
add
stc
add
loopne
jl
inc
int3
dec
clc
add
cmp
and
arpl
sbb
xchg
sub
add
dec
add
inc
je
mov
add
push
and
comiss
or
adc
mov
xor
pop
pop
mov
scas
shl
sbb
add
hlt
xchg
shl
loopne
out
sbb
mov
pop
inc
inc
dec
int
ja
inc
sbb
cmc
mov
pop
rol
aad
jmp
dec
stos
movs
fnstsw
mov
leave
mov
fsubr
mov
and
std
cmc
call
pop
add
xor
call
pop
xchg
add
xor
inc
add
dec
ins
inc
add
sub
sub
push
loopne
fcmovne
imul
cmc
mov
mov
cs
jae
pop
or
sbb
xchg
dec
rcr
push
push
pop
xchg
push
adc
jbe
sbb
movs
sar
xor
loop
xchg
aam
adc
leave
clc
adc
das
mov
imul
push
pop
shr
or
xor
or
sub
test
xchg
add
rcr
sti
lods
adc
add
add
(bad)
push
dec
dec
lahf
xor
fstp
repnz
fidivr
fimul
jmp
syscall
inc
dec
cs
retf
in
push
pop
imul
jns
xchg
popf
jb
pop
mov
in
repnz
push
sbb
mov
cs
or
adc
inc
jne
jne
inc
add
cs
cmp
xor
mov
fstp
mov
or
int
jo
cmc
dec
out
int
pop
test
add
mov
mov
add
cmp
xor
in
inc
dec
push
test
daa
mov
push
(bad)
lock
add
jbe
rcr
push
and
sbb
xor
or
jne
jl
test
shr
ror
add
or
dec
rcr
sub
das
xor
jb
xor
inc
inc
dec
shl
retf
pusha
bound
je
shl
add
bound
in
jmp
test
dec
je
fdivr
je
aas
lahf
cs
js
jmp
add
cs
retf
dec
push
push
push
push
retf
in
mov
mov
bound
imul
jno
je
dec
shl
jge
cmc
aam
sub
sahf
or
repnz
mov
mov
mov
in
ret
leave
xor
rcr
rcl
(bad)
shl
(bad)
dec
imul
std
xchg
and
pop
clc
aam
inc
mov
ret
jg
stc
fiadd
adc
cs
push
and
and
push
cli
pop
and
cld
pop
test
push
and
pop
mov
jb
cmp
sub
das
inc
add
adc
add
stos
pop
aaa
push
push
test
mov
mov
popa
push
inc
and
rcl
scas
sbb
push
lea
add
stc
dec
mov
sub
lahf
les
sbb
sbb
sti
jns
mov
jmp
push
rol
repnz
sub
cmp
push
adc
dec
rcl
push
pop
clc
pop
inc
inc
jne
or
sbb
aam
xchg
dec
and
jmp
sar
adc
add
fistp
adc
dec
pop
sub
rol
(bad)
xlat
in
in
push
or
xchg
and
sahf
imul
mov
imul
outs
ror
rol
fisub
loopne
in
dec
shr
xchg
call
cli
sti
push
adc
std
inc
xchg
stos
leave
int3
and
xor
sbb
sub
call
test
cmps
imul
mov
jmp
or
add
cmps
imul
imul
cmps
imul
xchg
retf
movs
je
js
mov
xchg
cwde
call
cmps
test
cmps
imul
imul
cmps
imul
imul
push
shl
out
shl
(bad)
aad
dec
shl
hlt
imul
shl
stc
sti
loope
shl
or
adc
imul
aaa
inc
call
dec
dec
dec
call
ins
imul
imul
imul
cmps
imul
data16
sbb
sub
sub
xor
int
in
sub
ret
imul
xchg
les
int3
movs
push
stc
and
or
pusha
sub
shr
add
call
repnz
movs
or
xor
pop
and
(bad)
jmp
cmp
in
stc
add
pusha
xchg
dec
shl
arpl
jmp
fidiv
dec
dec
dec
hlt
add
in
xor
cmc
add
es
sub
pop
das
xchg
retf
pop
jnp
xor
(bad)
retf
add
inc
data16
or
(bad)
es
add
loop
fbld
fwait
fwait
sbb
call
sbb
add
jae
add
outs
xor
add
fist
pop
cmp
ds
jne
add
pop
adc
xlat
mov
imul
dec
shl
pop
and
mov
adc
mov
dec
push
push
pop
cmps
imul
imul
imul
xchg
cwde
push
cmps
imul
rol
mov
and
hlt
mov
cmps
cmp
stc
hlt
add
cmp
bnd
xor
mov
into
adc
fiadd
add
jecxz
in
and
hlt
in
stc
or
xchg
cmps
imul
imul
cmp
ds
cmps
imul
push
mov
add
dec
xor
shl
cmps
imul
shl
repz
std
mov
xchg
dec
fs
gs
push
push
mov
xor
fadd
ja
test
mov
xchg
pop
clc
add
add
dec
add
rcl
pop
pop
or
add
adc
fst
out
push
shl
dec
inc
sub
test
sub
cmc
mov
jmp
pop
or
int
mov
add
mov
mov
aad
push
push
jmp
arpl
mov
int
push
adc
xchg
mov
and
xchg
and
jb
inc
jmp
push
iret
rol
add
jmp
or
test
lods
and
cwde
sub
mov
sub
add
daa
push
pop
cdq
push
mov
adc
and
mov
push
shl
or
js
xor
loope
sbb
inc
mov
and
ficomp
push
push
push
data16
test
add
or
outs
push
(bad)
pop
sub
pusha
and
std
test
and
retf
mov
add
call
mov
sbb
movs
js
pop
mov
icebp
mov
ins
jg
push
test
loopne
inc
mov
ret
aas
test
adc
lock
pop
clc
shl
ror
or
stc
shl
jae
and
sbb
or
sub
cmp
cmps
push
pop
dec
loopne
or
inc
dec
popa
jne
jno
call
sbb
sbb
pop
adc
xor
cmps
xchg
mov
sbb
sub
add
sbb
sub
dec
dec
xchg
ret
cwde
pop
jb
pop
test
iret
sbb
or
and
add
adc
js
push
pop
pop
push
mov
cmp
pushf
imul
push
(bad)
push
mov
ret
dec
inc
test
imul
mov
hlt
stos
gs
pop
imul
sub
push
add
push
ja
jns
pop
add
pop
ret
jmp
inc
pop
cmp
mov
lods
addr16
dec
(bad)
push
add
cmp
dec
pop
bound
jne
movs
jne
test
xor
add
mov
adc
push
add
pop
push
loopne
imul
loope
aad
sub
sbb
test
lea
popf
test
fnsave
mov
scas
dec
add
adc
(bad)
in
retf
in
icebp
popf
sub
mov
pop
cmp
sbb
dec
add
call
and
cmc
ror
jmp
dec
mov
push
push
pop
jmp
mov
xchg
cmc
jle
inc
add
xlat
sub
add
retf
cli
jnp
sub
cmc
out
les
std
cmp
or
sar
stos
imul
add
je
mov
adc
push
imul
jmp
add
and
mov
stos
fnstenv
jne
pusha
lods
retf
xchg
mov
popf
cmp
dec
sbb
xchg
aam
jno
dec
sbb
mov
push
nop
add
movs
(bad)
dec
sub
push
pop
xor
pop
mov
sbb
and
jne
or
push
jnp
pop
xor
lahf
pop
inc
pop
mov
test
icebp
add
jae
adc
adc
inc
or
or
aaa
push
and
dec
dec
xor
add
shr
mov
(bad)
xor
cmp
add
xor
rol
add
add
dec
shl
pop
pop
xor
shl
or
or
shl
or
dec
shl
(bad)
(bad)
ins
fnsave
adc
addr16
mov
sbb
add
xchg
inc
in
es
aas
mov
pop
sub
rcr
lods
or
imul
add
jb
cmp
lods
add
sbb
xchg
ds
popa
int3
dec
lahf
push
cmp
nop
push
add
inc
mov
sub
inc
dec
pop
xchg
shr
mov
cwde
jp
ror
inc
push
dec
jmp
test
pusha
repz
add
mov
(bad)
cmp
adc
sub
ss
xchg
movs
add
adc
pop
or
outs
xchg
add
imul
movs
jb
xor
call
and
pop
mov
aam
loope
stc
pop
or
stc
jne
cmc
mov
sbb
popf
xor
test
add
and
retf
add
add
pop
adc
rcr
jp
jmp
mov
pusha
movs
shl
mov
add
pusha
xchg
xchg
lods
stos
add
and
add
xor
imul
push
add
or
or
ins
call
sahf
xor
mov
xchg
retf
push
mov
jns
xchg
ret
push
iret
pop
dec
and
and
pop
fadd
rol
lods
das
bound
pop
pop
loop
adc
inc
jl
dec
shl
dec
push
sbb
and
xor
add
lahf
dec
(bad)
and
or
cmp
(bad)
popa
out
les
ret
fs
push
xchg
jbe
mov
add
dec
sar
and
or
inc
inc
rcr
add
in
jmp
and
fmul
shr
and
(bad)
add
add
lods
mov
dec
outs
mov
push
xchg
ss
xchg
jbe
in
lods
in
xchg
mov
mov
xor
pop
cs
and
shl
(bad)
retf
xor
retf
iret
shl
in
call
add
inc
inc
sbb
cmps
mov
rol
aaa
icebp
or
push
mov
adc
jmp
or
xchg
xchg
shl
fs
cli
xor
popa
push
xchg
dec
test
hlt
cmp
lods
dec
sbb
push
iret
add
call
xchg
scas
mov
shl
test
aas
mov
aad
arpl
mov
or
outs
imul
std
jmp
mov
shl
bound
dec
xlat
sar
jmp
pop
dec
add
adc
add
lods
dec
dec
xchg
lods
dec
test
add
push
add
push
pop
jns
mov
add
pop
xchg
retf
movs
repnz
jp
sub
dec
shl
jle
jl
add
push
push
dec
shl
repnz
imul
call
div
sub
add
pop
xchg
xchg
retf
in
fmul
dec
add
aas
jp
xchg
retf
pop
setnp
stos
mov
pop
xor
add
sbb
cmp
dec
add
adc
jnp
cmc
inc
mov
lods
add
add
or
jl
pop
add
pop
mov
cmp
cmp
cdq
cs
jge
push
lea
repz
imul
push
push
pop
pop
push
push
dec
movs
mov
adc
inc
sub
push
or
jne
xor
or
cmp
push
inc
cmp
aam
aas
repz
sar
out
add
sbb
lea
test
dec
or
mov
aad
inc
xchg
or
add
test
shr
in
arpl
add
add
and
pop
adc
push
xchg
pop
xor
(bad)
ffreep
mov
ret
jb
aam
push
in
mov
fs
jmp
pop
push
shr
rol
add
adc
call
daa
sub
push
push
aaa
fist
aam
and
imul
or
cmp
xor
loope
jbe
rcl
add
fidivr
cmp
and
jmp
rol
dec
push
mov
movs
sub
push
test
cmp
add
cli
loope
pop
adc
rol
or
jmp
xor
push
out
sub
test
mov
sar
sbb
adc
loopne
sbb
dec
dec
jp
inc
sub
and
cmp
push
ds
adc
pushf
repnz
mov
add
add
jle
or
push
add
or
fxch
fiadd
mov
add
add
mov
cmp
(bad)
adc
mov
aas
add
add
mov
icebp
push
sub
dec
ins
sub
call
js
push
jmp
dec
or
sahf
or
bound
add
addr16
sahf
jge
add
or
and
sbb
add
iret
sbb
push
and
or
add
rol
push
adc
mov
add
pop
add
(bad)
pop
lods
loope
add
loopne
add
xchg
or
test
add
retf
fxch
lea
outs
add
add
add
addr16
call
add
retf
test
and
loopne
daa
sub
sbb
(bad)
add
or
add
and
ins
test
mov
data16
cld
cmps
fld
add
cmp
jne
add
shl
xor
inc
dec
shl
push
pop
jns
adc
add
pop
call
lds
push
pop
add
pop
jecxz
in
jb
in
xor
xor
cmps
imul
pop
cs
inc
dec
repnz
sti
add
push
or
jo
push
push
and
mov
add
sbb
lods
test
mov
add
fist
ret
retf
mov
cs
call
lock
arpl
jae
or
push
imul
xchg
lods
hlt
add
xor
add
sti
sub
aam
in
scas
inc
sbb
sub
add
pop
pop
into
adc
cmp
xor
dec
dec
push
push
push
pop
add
pop
arpl
xchg
add
xor
mov
xor
test
add
lods
scas
sub
jo
xor
shl
pop
pop
pop
call
add
retf
jmp
add
shl
cmp
shl
cmp
add
retf
inc
dec
rcl
add
je
icebp
ret
push
rol
push
add
adc
lods
pop
pop
lea
sbb
add
imul
sub
fiadd
add
xchg
rcl
dec
rol
leave
retf
int3
rcl
pop
push
push
movs
aam
jnp
add
jmp
lods
and
imul
pop
dec
fistp
mov
push
or
fs
pop
mov
dec
icebp
sub
sbb
addr16
pop
sub
jmp
pop
bound
jbe
cs
iret
jmp
pop
add
popa
int
lock
hlt
xchg
fmul
es
mov
adc
fadd
sub
scas
add
jecxz
in
cmp
or
add
in
dec
dec
cmp
scas
push
adc
pop
add
shr
fidiv
add
scas
mov
add
fisub
test
fimul
rcr
xchg
or
or
movs
mov
sbb
repnz
mov
fnstsw
xchg
not
ficomp
jle
sbb
adc
sbb
movs
popf
xor
sub
push
shr
jmp
jo
mov
out
dec
mov
xchg
fcmovnu
jp
jb
sbb
dec
je
in
sbb
dec
jbe
jb
mov
js
(bad)
fistp
jp
arpl
mov
dec
jnp
jo
jl
jle
add
mov
ins
mov
adc
mov
(bad)
and
push
add
add
jns
xor
pop
das
and
jbe
cmp
lar
loope
push
cmp
popf
dec
scas
adc
fcom
adc
repz
pop
or
push
push
or
mov
cli
das
push
imul
das
push
push
and
cmps
xor
push
das
es
push
pop
pop
daa
add
add
in
adc
popf
xor
xchg
xor
ss
repnz
jg
leave
gs
retf
xor
in
xor
xor
dec
test
test
xchg
jne
add
in
cmp
cmp
xor
xchg
retf
leave
js
jns
jp
dec
cs
aaa
jnp
jl
fs
add
dec
cs
xchg
inc
adc
inc
cmp
adc
in
jb
adc
xchg
retf
leave
pop
dec
sbb
pop
dec
cs
dec
sbb
jb
mov
sbb
dec
push
dec
pop
daa
xchg
xchg
retf
push
and
push
pushf
pop
dec
and
push
jb
cmp
retf
leave
in
es
daa
pop
(bad)
xchg
xchg
sub
pop
repz
dec
mov
popf
bound
arpl
in
mov
xchg
retf
addr16
imul
cmp
retf
leave
in
test
daa
xchg
xchg
stos
jo
jno
mov
scas
jae
in
jb
je
jne
xchg
retf
leave
in
mov
mov
cs
xchg
js
jns
jp
mov
movs
sbb
xchg
(bad)
add
and
cmp
and
add
add
fs
xchg
adc
add
adc
in
adc
add
jb
pop
push
or
cmp
imul
mov
xor
push
push
adc
cs
or
or
daa
mov
sbb
pop
or
pop
cs
dec
push
or
inc
dec
ud2
adc
retf
leave
and
adc
in
nop
xchg
sbb
or
leave
sbb
and
dec
cmp
add
or
in
jb
pop
and
xchg
cmp
cmp
add
adc
pop
dec
sub
push
and
push
sahf
mov
sub
aas
test
xor
push
cmp
jb
jl
fist
push
jns
jns
push
cmp
xor
push
jns
sub
addr16
in
jb
sub
dec
in
push
dec
in
in
jo
jns
cmp
in
in
jbe
ds
daa
xchg
xchg
retf
pop
inc
ins
inc
jmp
repz
sub
(bad)
cs
rol
pop
xchg
xchg
enter
xor
or
cmp
ja
repz
cmp
jge
ss
xor
cmp
mov
dec
stos
cmp
or
popa
sub
xchg
cmps
jnp
or
bound
sub
out
mov
sti
add
not
sub
push
adc
mov
or
xor
mov
and
loope
(bad)
sbb
movs
cdq
sbb
xor
out
jmp
and
sub
push
push
mov
xchg
comiss
mov
xor
cmp
jl
mov
unpcklps
xchg
mov
mov
push
xor
xor
mov
in
jo
push
sar
movups
push
(bad)
mov
dec
or
in
xor
inc
sub
fbld
push
adc
sbb
xor
mov
sbb
xor
sbb
fnstenv
jnp
sub
pop
sbb
cs
test
retf
(bad)
in
aaa
test
xchg
test
jb
cmp
mul
das
in
fs
test
xchg
test
xor
xchg
fistp
xchg
imul
ins
pushf
pop
outs
outs
sbb
mov
sbb
sbb
imul
in
es
push
aaa
mov
aaa
imul
fistp
icebp
cmp
shr
push
push
pushf
pop
outs
imul
pop
mov
sbb
add
xor
mov
inc
mov
sbb
xor
mov
xor
xor
imul
cmp
pop
add
popa
out
xor
pop
pop
sub
cmp
popf
fmul
fld
je
pushf
sahf
or
ds
adc
xchg
out
push
in
add
xchg
mov
fwait
xor
xchg
jle
mov
xchg
jae
hlt
xor
ins
das
repnz
sbb
sbb
xor
jns
xor
add
mov
mov
xor
outs
sbb
inc
fistp
jo
mov
push
sbb
xor
push
xor
stc
xor
push
fwait
pop
outs
outs
sbb
xor
push
sbb
es
(bad)
xor
pop
sbb
xor
leave
in
pop
sbb
pop
mov
(bad)
loope
xor
sub
addr16
and
daa
iret
loop
mov
(bad)
jns
daa
daa
shl
mov
xor
mov
adc
addr16
outs
jb
int
(bad)
xor
pop
sbb
in
ins
adc
pop
adc
movs
pop
xor
cmp
aaa
mov
mov
dec
movs
jmp
push
and
sbb
pop
sbb
xor
push
cs
sub
sbb
in
add
ror
daa
iret
loope
and
leave
jae
jns
fist
lds
out
add
movs
ret
add
call
xor
imul
add
adc
daa
int
mov
shl
mov
push
mov
xor
xor
add
test
daa
iret
loopne
mov
cli
xchg
push
out
cmp
daa
test
shl
xchg
out
lock
cmc
xor
mov
ins
nop
push
(bad)
xor
retf
dec
in
les
ins
sub
adc
fnsetpm(287
in
in
rcr
out
jns
iret
loopne
fwait
push
jne
push
test
dec
lea
xchg
out
adc
in
lds
out
mov
cld
aam
adc
popf
mov
xor
push
sbb
pmaxub
leave
jae
xchg
push
repnz
stos
std
aaa
mov
pop
pop
aaa
out
fsubr
xchg
dec
aaa
(bad)
aaa
pop
sub
jae
cmp
jmp
ja
jo
mov
psllq
pushf
cmp
addr16
push
or
fisttp
lahf
mov
(bad)
pop
out
push
mov
cmp
jae
cmps
mov
packuswb
leave
jmp
cmp
sbb
ds
(bad)
std
push
cs
dec
cmp
in
push
mov
cld
cmc
fucomi
mov
push
xlat
pop
dec
sbb
jmp
or
push
loope
or
stos
inc
(bad)
pop
dec
cmp
fdivrp
adc
stos
push
push
je
push
out
shr
cmp
sbb
adc
push
popa
and
rol
cmp
out
mov
adc
inc
push
jbe
fisttp
popf
movs
add
addr16
jl
adc
push
or
in
out
push
sbb
add
mov
xor
pop
in
aas
inc
adc
pop
test
push
push
dec
imul
cmp
and
jae
push
inc
mov
jo
adc
shr
mov
adc
and
sbb
stos
sbb
test
test
outs
jnp
ret
adc
cs
int
mov
scas
sbb
push
mov
mov
test
loopne
xor
add
rol
sbb
xor
outs
das
sti
mov
call
mov
inc
or
outs
outs
sti
jecxz
inc
sbb
ror
dec
or
paddsb
dec
fisub
shl
inc
movs
and
or
loopne
fnstenv
jge
ins
or
aad
pushf
aam
fsubr
xchg
rol
ins
verw
mov
and
mov
(bad)
pop
in
mov
push
and
fucomi
cmp
xor
aam
sub
push
pusha
retf
shl
adc
mov
xor
neg
push
mov
mov
mov
push
and
in
in
inc
pop
ins
add
iret
loopne
jno
(bad)
ds
cld
jp
daa
xlat
push
sub
jae
add
gs
jb
push
add
or
push
es
or
or
popf
pop
iret
jnp
daa
or
sbb
movs
sbb
pop
dec
add
imul
int3
ds
std
xchg
in
push
push
pop
mov
lods
push
sar
dec
ins
adc
cmp
fisttp
mov
ror
add
sub
(bad)
(bad)
out
mov
outs
pop
xor
xchg
ss
cld
push
inc
stc
sbb
adc
inc
fwait
pop
outs
mov
sbb
xor
sbb
push
inc
push
inc
push
es
jbe
sub
adc
adc
or
or
sub
adc
(bad)
psrlq
xlat
das
add
and
push
outs
sbb
fmul
rdpmc
lods
push
mov
stc
mov
jg
xor
push
xchg
xchg
fcmovne
mov
add
jae
mov
add
mov
imul
sbb
les
fwait
mov
call
jbe
mov
inc
adc
add
sbb
outs
xchg
adc
push
rcr
movs
retf
or
rcr
inc
or
add
ud1
in
movs
push
adc
(bad)
jmp
mov
daa
jmp
arpl
sbb
mov
xor
test
pcmpeqb
repnz
mov
aad
mov
jo
iret
loop
cmp
xor
cmp
jns
or
inc
pop
movs
push
into
jecxz
ins
mov
or
and
ud2
add
pop
or
inc
in
mov
adc
jno
ins
pop
cmp
stc
fdiv
push
or
push
adc
mov
xchg
fucomi
in
jne
inc
outs
movs
js
daa
mov
psubusw
jp
cvtpi2ps
xchg
adc
inc
loopne
test
push
sbb
dec
jns
in
pop
ins
xchg
inc
sbb
pop
and
sub
mov
rcr
push
adc
rcr
sbb
iret
ins
adc
rdpmc
out
push
or
cmp
addr16
inc
sub
iret
loopne
cmps
mov
jbe
(bad)
jbe
(bad)
lahf
fidivr
jb
cmp
fucomi
cmp
push
(bad)
or
bndldx
adc
lock
addr16
nop
xor
xor
jmp
and
adc
and
or
push
add
and
sub
sub
xlat
jl
loope
adc
getsec
ret
in
in
and
or
xor
xor
sbb
push
sub
push
cmps
aad
(bad)
xchg
mov
in
jbe
scas
cmp
fstp
pop
pop
ja
push
add
inc
punpckldq
add
popa
sbb
xor
adc
repz
jp
push
arpl
push
scas
int3
out
adc
ins
dec
call
sub
dec
jae
mov
sub
sub
int
xor
call
repnz
mov
push
adc
jbe
pop
retf
paddsw
dec
or
push
retf
loope
clc
fcmove
sub
inc
fsubr
adc
cdq
test
inc
(bad)
cvtpi2ps
adc
div
aas
or
psubusb
leave
adc
cmp
in
cmp
sub
cmp
sbb
xor
in
mov
push
xor
pop
dec
movs
xchg
xor
repnz
(bad)
das
or
mov
leave
leave
jae
in
lds
jno
sahf
ror
sub
adc
das
fisttp
test
int
cs
outs
outs
add
adc
dec
mov
and
sub
or
xor
jnp
cmps
mov
cmps
aam
stos
daa
iret
loopne
fimul
sub
ds
fsubr
mov
cmovbe
das
or
cmp
in
in
out
jle
fisubr
sar
repnz
push
aaa
pop
jle
(bad)
icebp
push
js
ret
dec
iret
xor
adc
jo
outs
sbb
adc
mov
frstpm(287
pop
fidivr
add
or
shl
add
add
in
jbe
inc
daa
sub
lock
cmp
ror
ds
jnp
pop
mov
outs
daa
iret
mov
aas
pop
inc
iret
call
popf
push
adc
ja
fsubr
or
pop
sub
iret
loope
in
stos
jae
sub
add
xchg
dec
xchg
dec
ror
daa
stos
sbb
dec
dec
ficom
dec
dec
mov
jae
cmp
dec
ds
dec
inc
adc
dec
inc
xor
push
test
xor
je
iret
enter
pop
adc
outs
adc
popf
cmp
inc
dec
adc
cmp
cmp
out
push
ret
loopne
jae
popf
pushf
jl
das
cmp
movs
(bad)
leave
leave
js
retf
imul
retf
adc
fmul
cmp
adc
(bad)
add
dec
cmp
or
inc
and
popf
xor
daa
dec
sub
retf
inc
adc
(bad)
pcmpeqw
add
jb
cmp
jle
je
jns
adc
fstp
(bad)
daa
push
test
cmp
push
neg
jb
jbe
or
aam
leave
ror
ror
rcr
rcr
ss
sbb
aam
outs
cmp
imul
sub
sbb
dec
or
outs
shr
sbb
das
fstp
ficom
test
jg
test
movs
mov
cs
xchg
mov
add
xor
inc
mov
(bad)
or
imul
cmp
cmp
xor
sbb
sbb
add
dec
fidiv
int3
mov
sbb
xor
int3
sbb
fidiv
loopne
add
jmp
sub
adc
(bad)
psrad
cmp
jns
iret
xlat
push
stos
mov
jbe
fcmovne
leave
repz
pop
dec
inc
inc
aas
mov
aaa
push
push
adc
jp
mov
addr16
pop
jle
fimul
push
fisubr
fst
add
cwde
mov
push
dec
(bad)
sbb
repnz
dec
call
push
cmp
mov
push
adc
jnp
loopne
sbb
push
jecxz
rcr
rdpmc
test
xchg
aam
fiadd
pop
inc
adc
fbstp
shr
in
cmp
lds
sahf
adc
mov
scas
das
dec
inc
mov
rcr
or
aad
adc
xchg
xchg
daa
lods
aam
sbb
fmul
push
js
out
push
xor
outs
mov
dec
mov
outs
pop
sbb
mov
push
pop
push
adc
fld
or
adc
movlps
jo
push
jo
pop
pushf
mov
(bad)
push
jae
sub
sti
or
cmp
icebp
adc
icebp
push
in
pop
daa
fist
shr
sbb
cmp
daa
loope
pop
sub
mov
cs
sbb
dec
das
jge
adc
dec
sahf
lds
rcr
dec
or
or
or
add
add
xchg
push
cmp
xor
pop
fs
inc
xor
fucomi
sbb
pusha
push
mov
pop
or
sbb
fbstp
xor
bound
sbb
adc
rcr
jp
adc
inc
fisubr
(bad)
movlps
inc
(bad)
aad
in
jbe
sbb
push
dec
jle
dec
outs
popf
cmp
fist
pop
enter
out
mov
mov
ds
lock
and
leave
adc
push
test
(bad)
adc
fs
int
shl
mov
bound
sub
rol
jg
adc
cmps
xchg
addr16
push
adc
pop
add
jb
cmp
mov
dec
aas
inc
daa
iret
loopne
sbb
inc
cmps
dec
pop
dec
jo
(bad)
jecxz
scas
movntq
leave
rol
inc
push
fldcw
mov
adc
xchg
cmps
or
push
pop
and
xor
push
sbb
xor
inc
in
imul
aad
push
fwait
mov
(bad)
fdiv
pushf
mov
outs
or
or
cwde
xor
outs
ins
adc
adc
cmp
in
jmp
es
ss
fdiv
sbb
int3
scas
sbb
(bad)
in
sub
and
sub
jbe
adc
xchg
icebp
sub
inc
inc
xchg
adc
in
push
inc
mov
push
dec
xor
icebp
sub
dec
sbb
retf
xchg
addr16
(bad)
test
(bad)
sbb
call
in
mov
mov
cdq
data16
sbb
fsubr
pop
dec
jl
ficom
adc
out
jp
in
out
cwde
jge
dec
aad
ss
sti
or
or
push
test
dec
sbb
leave
in
jbe
pop
adc
outs
outs
mov
dec
mov
in
fmul
retf
sbb
sbb
dec
mov
and
jge
mov
pop
pop
fild
(bad)
(bad)
jbe
push
loop
push
push
adc
je
sub
xchg
adc
fadd
movs
cmp
mov
jle
mov
addr16
adc
mov
push
das
out
lock
cmovbe
push
xchg
jns
mov
push
dec
aas
aaa
push
jle
addr16
cmp
mov
lds
push
daa
mov
sbb
movzx
push
daa
ins
nop
pop
push
add
xchg
pop
mov
jmp
jae
outs
nop
int
push
dec
aam
daa
iret
pusha
inc
ins
push
jg
add
jbe
jns
dec
mov
out
sbb
dec
dec
sahf
sar
mov
mov
fisttp
pop
repnz
add
movs
jb
adc
inc
cmp
mov
sub
add
pop
push
ror
dec
js
sub
or
jns
out
bound
aad
and
sbb
mov
aad
dec
das
into
fcmovne
leave
jae
cs
add
(bad)
in
pop
cmp
push
dec
xor
mov
jns
scas
fmul
mov
pop
nop
push
adc
dec
jae
cmp
xchg
and
out
mov
ret
adc
repz
mov
push
mov
jae
cwde
adc
sub
daa
iret
loopne
xor
dec
in
jns
daa
mov
pop
sbb
repz
(bad)
call
mov
loopne
pushw
push
dec
imul
repz
shl
xor
push
adc
xchg
(bad)
dec
dec
(bad)
pop
push
inc
inc
movs
retf
and
sbb
and
and
das
sbb
xchg
xchg
mov
mov
out
add
in
in
clc
cmps
popa
movs
sbb
stos
sbb
imul
jnp
rol
add
test
adc
scas
fimul
imul
mov
mov
add
adc
sbb
xor
fcmovne
mov
mov
inc
fcmovnu
push
or
inc
sbb
shl
ja
or
movs
paddsb
mov
sbb
ror
dec
mov
movs
add
mov
sbb
iret
imul
inc
push
out
pop
dec
dec
sahf
push
push
and
pop
xchg
out
sub
rsm
fs
inc
sbb
inc
jmp
jmp
in
jbe
pop
mov
dec
or
(bad)
std
jb
packsswb
lahf
jnp
sahf
repnz
dec
aam
inc
fisub
pop
pop
mov
mov
dec
out
pop
jmp
ins
xchg
in
in
sbb
cmp
outs
push
inc
mov
shr
add
push
cmps
jns
shl
sbb
mov
push
call
inc
mov
ins
sbb
movs
xor
imul
pop
imul
or
or
out
arpl
fldenv
xor
and
adc
aad
cmp
lock
pop
leave
in
in
in
mov
fisttp
ret
shl
push
mov
in
jbe
pop
and
nop
jge
repnz
neg
push
enter
adc
popa
xchg
ins
sub
dec
fidiv
ja
xchg
add
sbb
cld
repz
retf
mov
push
fs
outs
xchg
fs
clc
fmul
in
sub
push
sub
enter
adc
bsr
icebp
dec
ds
mov
jb
fisttp
in
pop
test
mov
cmp
and
pop
cmp
fisttp
inc
xor
push
jle
push
into
sbb
push
pop
das
jno
adc
jb
mov
sbb
jmp
add
gs
or
add
fbld
mov
retf
in
inc
adc
outs
aaa
repz
adc
adc
aaa
imul
mov
mov
inc
or
add
add
cmps
mov
outs
sbb
into
in
outs
outs
sbb
movs
sub
sub
adc
out
aam
lds
cmovne
push
das
xchg
mov
cmp
fwait
aas
dec
pop
push
es
mov
in
in
mov
pop
mov
nop
inc
lahf
xchg
xchg
xchg
addr16
ds
dec
push
pop
lea
sbb
cmps
or
add
adc
cdq
or
popw
push
fsub
xor
adc
rcpps
mov
aad
jbe
or
push
and
out
dec
cmp
fcmovne
mov
push
mov
and
daa
iret
pop
imul
fsubr
inc
and
adc
out
cdq
sub
push
adc
imul
cmp
fcomp
mov
mov
pop
lock
in
jbe
aas
hlt
das
and
cmp
mov
aas
(bad)
add
leave
leave
xor
outs
rcl
cmp
cmovge
push
jno
ror
add
sbb
xor
jo
mov
and
adc
dec
daa
or
pop
add
and
daa
sub
add
xchg
add
add
jl
iret
loopne
dec
inc
push
cmc
inc
push
icebp
aam
in
mov
inc
rcl
mov
mov
add
sub
mov
jbe
dec
xchg
jge
jb
inc
mov
cmps
clc
add
dec
ret
enter
sbb
inc
outs
add
in
movs
jae
adc
js
pop
popf
xchg
je
adc
in
adc
inc
adc
aas
es
sub
in
movs
dec
ret
jae
leave
push
cmp
or
or
daa
in
movs
cdq
adc
retf
and
jbe
retf
sub
inc
sub
jb
cmp
adc
aam
ret
in
in
jo
push
ds
pop
dec
sahf
ret
leave
and
mov
out
inc
fmul
jno
push
test
bound
leave
mov
pop
dec
fnstcw
ret
fstp
aas
xor
adc
dec
pop
adc
(bad)
setae
fldcw
cs
aad
in
mov
das
test
call
mov
xor
sub
repnz
cmovp
repz
imul
in
frstor
dec
stos
sbb
call
add
in
mov
aaa
addr16
cmps
std
ret
mov
xor
sahf
sbb
adc
(bad)
jp
imul
imul
mov
aaa
daa
add
xchg
xor
push
mov
adc
aam
nop
pop
sub
enter
dec
push
ds
(bad)
dec
sahf
ror
clc
xchg
movs
push
les
addr16
sbb
push
fidivr
pop
pusha
popf
fsubr
sar
xchg
das
mov
call
adc
rol
imul
sbb
in
shl
js
inc
mov
cmp
loopne
mov
sbb
popf
mov
daa
and
aaa
sbb
cmp
fimul
inc
daa
sub
jecxz
cmp
popa
dec
adc
dec
push
xchg
repnz
outs
pop
xchg
aad
fcmovne
push
lds
lar
xchg
leave
xor
cmp
and
leave
leave
leave
rcr
jns
repnz
sahf
push
jl
fisubr
jbe
pop
sti
dec
movs
adc
xor
rcr
movs
xor
dec
mov
add
mul
outs
adc
xchg
adc
xor
fistp
(bad)
pushf
add
xor
fdivr
jae
aas
push
ins
setae
jbe
adc
in
lods
dec
sub
cmps
loopne
xchg
and
mov
iret
jmp
mov
xchg
(bad)
cs
fcmovne
bound
dec
es
pop
cwde
jo
jns
or
neg
jg
xchg
dec
sti
push
push
ret
in
in
in
cli
ret
mov
outs
mov
popf
xor
xor
out
push
xor
stc
not
inc
adc
ins
icebp
add
inc
pop
int
cmp
or
inc
and
popf
xor
daa
dec
sub
rcl
imul
arpl
setns
push
(bad)
push
daa
and
sub
xchg
dec
pop
in
jbe
jns
xchg
daa
dec
das
pop
sti
dec
fiadd
mov
pop
movnti
jg
mov
inc
outs
repnz
outs
cmp
fsubr
repz
in
movs
popf
rcr
xlat
sbb
outs
cmp
dec
aad
test
dec
mov
ins
xor
sub
movs
dec
shl
dec
or
sbb
mov
fdiv
or
test
xor
jg
push
mov
push
imul
sub
addr16
ds
(bad)
fmul
push
or
shr
or
test
unpcklps
or
movs
cdq
jbe
outs
fistp
add
mov
movs
cdq
add
(bad)
jecxz
(bad)
in
dec
fisub
int3
mov
and
stc
int
clc
in
mov
fcmovne
outs
jmp
sbb
pushf
lds
pop
xchg
aad
cwde
leave
jae
popf
xor
push
ins
ds
dec
sahf
(bad)
in
mov
jle
addr16
or
pmaxub
xchg
clc
sub
enter
dec
sahf
jne
push
cld
fsub
jo
mov
stos
sbb
mov
rcr
scas
es
mov
push
push
push
jo
mov
xchg
popa
loope
or
pop
aam
call
jbe
std
aas
leave
dec
lds
leave
stc
pop
setno
loope
popf
pushf
cmp
xor
jae
jo
jae
xor
push
pop
aam
jg
call
aad
bound
jbe
popf
pushf
sub
cli
pop
(bad)
movd
jns
push
out
pop
(bad)
scas
inc
push
push
jb
push
mov
scas
sub
xchg
ins
dec
lods
add
jb
push
adc
and
or
adc
movlps
push
cmp
pop
ds
jae
dec
(bad)
sbb
daa
sub
js
cmp
xor
retf
in
leave
xor
xchg
call
outs
daa
iret
pusha
push
mov
addr16
jae
fisttp
scas
jg
or
mov
cs
jmp
pop
adc
ret
sbb
jbe
daa
inc
ds
sbb
cmps
mov
push
inc
fwait
adc
fdiv
popa
sbb
data16
sbb
sbb
adc
rcr
pusha
push
adc
(bad)
jo
jne
lds
enter
xchg
fstp
popf
mov
adc
int3
aad
push
dec
sub
aas
push
lds
pushf
outs
mov
fs
cwde
pop
fwait
and
imul
xchg
adc
movs
mov
and
add
daa
jno
ds
sub
iret
adc
repnz
pushf
fistp
popa
aam
cmp
imul
cmp
dec
std
sub
(bad)
leave
pop
add
das
xor
xor
jbe
dec
stc
mov
test
add
dec
jns
mov
leave
jne
scas
sbb
ins
outs
jnp
cmp
adc
cmp
jne
sbb
rcl
inc
inc
sbb
sbb
dec
fwait
or
cld
mov
push
or
dec
cmp
or
or
dec
xor
es
adc
fcmove
push
test
jmp
jmp
push
sbb
in
dec
fidiv
int3
mov
mov
loopne
in
sub
and
imul
iret
loop
adc
push
test
test
xor
jl
and
aam
in
repnz
push
xchg
add
(bad)
outs
mov
in
cs
jg
bswap
pop
ss
mov
sahf
pop
fs
or
cs
daa
ins
xchg
test
jne
add
ins
xchg
mov
fidiv
adc
push
iret
iret
adc
dec
push
retf
pop
lahf
iret
dec
dec
inc
ds
fwait
aad
addr16
loopne
pushf
fsubr
add
push
fsubr
iret
das
mov
arpl
imul
cmp
call
push
mov
shl
lahf
push
sbb
cmp
das
mov
add
add
int
test
cwde
or
clc
jmp
cmp
in
xor
xor
pushf
jbe
jb
cwde
das
shr
outs
sahf
ror
int3
aas
add
cs
sbb
out
push
mov
rol
imul
jp
add
jbe
jo
mov
adc
fsub
ins
adc
popf
push
add
popf
mov
out
out
ds
setns
xchg
daa
add
cmp
mov
pop
rcr
and
xchg
pop
mov
imul
adc
push
ja
stc
inc
add
push
xchg
xor
add
mov
shr
test
movs
cmp
cmc
pop
mov
adc
aam
ss
dec
xchg
in
in
into
cmp
aas
mov
cmp
outs
dec
xor
call
imul
clts
pop
add
pop
push
ficomp
jp
les
push
adc
les
jle
or
add
adc
shl
mov
psrlq
mov
aaa
push
lahf
xor
fwait
(bad)
in
mov
add
pop
imul
loope
adc
jmp
xchg
addr16
pop
jmp
dec
push
aaa
push
or
iret
cmp
push
pop
das
push
pop
dec
push
imul
cmps
rcl
in
in
adc
inc
xchg
loop
nop
add
imul
(bad)
iret
loopne
in
loop
fdiv
adc
leave
movs
mov
adc
stos
mov
cmp
pop
xchg
rsqrtps
push
movs
rdtsc
push
push
call
mov
inc
push
imul
mov
mov
add
jne
shr
adc
test
fwait
push
push
push
mov
dec
movs
popf
push
xchg
adc
xor
cmps
push
dec
pop
dec
pop
push
call
mov
fchs
add
gs
pop
movs
test
movs
imul
dec
movs
test
jno
dec
push
imul
test
js
sub
test
stc
push
mov
mov
cmp
or
sub
jmp
mov
imul
xchg
out
xchg
xchg
add
adc
mov
test
push
stos
mov
lock
mov
pop
push
xor
mov
adc
adc
mov
cmps
cmp
mov
inc
and
add
add
mov
inc
push
and
div
or
sbb
movs
int
and
mov
fimul
(bad)
cmp
in
mov
or
mov
adc
sbb
jb
repnz
test
loop
leave
leave
enter
xlat
sbb
fld
push
xlat
in
arpl
mov
mov
fidivr
stos
xchg
push
xchg
xlat
pop
mov
popf
pushf
pop
in
enter
loop
mov
xchg
mov
sbb
sbb
sbb
movs
int
xor
xchg
(bad)
ficomp
out
adc
xlat
sete
sub
mov
das
pop
pop
xchg
xchg
shr
in
(bad)
lods
and
retf
xchg
retf
mov
in
xchg
xchg
sub
add
add
sahf
cmp
inc
and
in
sub
add
xchg
sub
popf
cmp
in
movs
cmp
das
cmp
and
int3
outs
iret
loope
adc
pop
(bad)
(bad)
push
dec
dec
popw
xchg
call
repnz
push
sub
xchg
fucomi
jbe
aas
xchg
imul
and
adc
fidiv
pop
pop
sbb
pushf
xor
in
add
fadd
stos
or
push
test
cmp
dec
fwait
jbe
cmps
sbb
cmp
cmp
mov
sbb
es
in
push
sbb
mov
addr16
adc
pminsw
pop
pop
mov
shl
setp
cdq
xlat
lods
cmp
sbb
in
aas
fwait
push
pusha
mov
xchg
xchg
xlat
call
shr
pushf
push
popa
mov
in
xchg
dec
ja
daa
das
sub
popf
out
(bad)
je
daa
mov
pop
mov
arpl
sahf
cmp
jns
popf
mov
out
sub
mov
push
mov
inc
sub
sbb
mov
mov
dec
xor
fcomp
dec
dec
sbb
out
jbe
sti
adc
xlat
cvtpi2ps
inc
in
mov
and
gs
lahf
movzx
icebp
in
mov
mov
adc
xlat
push
push
outs
daa
daa
mov
mov
push
hlt
(bad)
cs
mov
sahf
sar
pop
mov
ror
imul
adc
movs
or
cmp
imul
dec
fimul
or
pop
lods
mov
ss
movs
pop
sbb
dec
fiadd
pop
sbb
adc
dec
dec
outs
mov
shld
xor
fsubr
imul
inc
sahf
not
mov
in
fs
xor
(bad)
mov
mov
mov
xlat
xor
add
sbb
dec
repnz
sahf
(bad)
push
dec
fwait
movs
and
lods
cmp
in
and
outs
movs
mov
sbb
push
enter
adc
and
cmp
scas
fimul
movs
cmp
test
pop
jmp
int3
ds
sub
(bad)
psubd
das
xor
mov
mov
jo
or
xor
lods
mov
sbb
and
xor
and
in
in
and
mov
mov
add
sbb
leave
and
and
data16
cmp
jns
das
ins
pop
cmp
add
mov
imul
sub
fist
rsm
cmps
xchg
xchg
xchg
xlat
jo
shr
fcom
mov
stos
push
std
pop
push
jno
jne
jb
aaa
data16
pop
or
jl
in
push
jb
aas
push
(bad)
(bad)
daa
iret
int
(bad)
(bad)
packuswb
lods
pop
dec
sahf
shr
mov
jae
cmp
(bad)
or
lods
push
mov
dec
fld
adc
mov
mov
sbb
adc
push
ins
outs
sbb
xor
adc
jns
adc
push
out
push
bswap
leave
leave
in
(bad)
(bad)
pop
mov
scas
xchg
je
cmc
mov
rcr
movzx
(bad)
adc
pcmpeqw
xor
movs
or
sbb
les
mov
scas
(bad)
sbb
dec
mov
push
and
jne
cmp
das
in
and
sbb
and
cmp
add
xchg
ss
and
shl
das
and
jnp
xchg
mul
xchg
sbb
and
(bad)
xor
fld
xor
ret
adc
jnp
xchg
adc
bswap
(bad)
pop
add
dec
in
mov
push
mov
push
daa
shl
cmp
sbb
(bad)
mov
mov
leave
leave
mov
ja
jbe
and
mov
dec
fisubr
sub
rol
scas
shr
push
pop
push
rcl
test
aaa
inc
xchg
retf
mov
sbb
xor
xor
mov
sbb
rcr
xor
movs
dec
mov
dec
xor
fdivp
es
push
sub
in
test
mov
ds
retf
call
jns
dec
dec
inc
ficomp
retf
(bad)
sbb
add
aas
rsqrtps
pop
sub
push
mov
dec
inc
ficomp
int3
(bad)
jp
out
cdq
cli
bound
dec
call
xchg
out
cmp
ins
fwait
xlat
or
mov
int
test
lgs
out
in
or
push
pop
jl
inc
fimul
mov
(bad)
mov
mov
dec
mov
mov
mov
(bad)
js
mov
jns
add
ins
das
sub
sbb
in
sbb
imul
out
dec
sbb
jle
mov
repnz
or
rcl
lahf
rcr
jg
rcl
(bad)
push
in
cmp
leave
inc
jg
fucomi
mov
push
in
xchg
and
in
neg
push
ficom
icebp
adc
mov
or
setl
fidiv
cmp
inc
mov
jb
jb
push
inc
ret
repnz
sub
mov
and
jb
daa
and
aam
mov
sbb
push
dec
xlat
mov
xor
jp
lds
add
adc
add
loopne
cmp
outs
jo
outs
imul
jae
sbb
fwait
mov
xchg
retf
sbb
pop
rcr
push
ficom
sbb
fcomp
imul
rcr
push
xor
xchg
mov
rcr
sahf
sbb
fist
push
call
enter
adc
(bad)
(bad)
mov
xchg
test
(bad)
(bad)
(bad)
pop
leave
leave
in
in
(bad)
jge
vcvtps2dq
test
punpcklbw
sbb
mov
adc
(bad)
cs
rcr
popf
cmp
popa
pop
push
xchg
call
dec
sbb
sub
fxch
push
xchg
adc
cmp
dec
repnz
leave
outs
daa
in
cmp
hlt
xor
cmp
pop
pop
into
add
ins
xchg
bound
movs
cmp
ss
xchg
retf
inc
data16
div
pusha
sbb
mov
mov
arpl
movs
cmp
adc
call
addr16
popa
mov
mov
sbb
xor
xor
(bad)
lock
adc
fcmovbe
andps
mov
pop
mov
ret
in
test
retf
fst
pop
add
add
out
pop
rcl
sub
xor
cmps
jmp
adc
rcl
bound
push
shr
fcom
mov
sbb
adc
dec
sbb
lock
dec
ja
cs
push
out
ins
and
fdivp
mov
adc
repnz
frstor
adc
mov
xor
adc
lock
xor
xor
xlat
adc
ret
pop
mov
sub
adc
in
rol
cmp
in
lock
cmp
xchg
scas
jne
cmp
out
jge
in
ins
outs
mov
adc
pop
sub
or
inc
stc
adc
in
dec
push
push
jbe
dec
rcl
ja
fcmove
movs
mov
adc
sub
lahf
dec
cmp
fdivr
inc
jp
arpl
jae
pop
ins
adc
cmps
test
rcr
jnp
into
test
push
add
pop
push
imul
shl
rcr
push
pop
not
push
and
movs
jmp
paddusw
push
imul
sub
inc
ret
lds
aam
and
push
mov
push
daa
push
inc
add
xor
repnz
imul
adc
call
sub
and
add
ss
sub
add
test
fdivp
es
push
adc
push
push
out
ins
outs
rol
jne
adc
mov
lea
push
mov
xor
pop
xor
push
ret
add
div
popf
pop
adc
inc
mov
leave
in
pop
sbb
sbb
adc
fisub
inc
sub
and
loope
ins
inc
push
mov
inc
inc
loop
outs
scas
dec
cmp
fisub
or
jne
aaa
adc
call
nop
je
jns
sbb
xchg
mov
das
sub
setle
xchg
push
push
les
sub
movs
mov
sbb
out
out
mov
push
jg
fwait
ins
fild
push
aaa
mov
outs
jnp
or
sbb
cs
mov
mov
jnp
or
adc
or
in
movs
jns
xor
stos
push
inc
movs
mov
sbb
push
sbb
movs
jecxz
mov
div
stc
adc
int
jecxz
cmp
jns
jae
in
mul
in
inc
and
outs
jnp
fist
adc
fidiv
adc
sub
jnp
pop
adc
push
xchg
xchg
pop
cmp
xchg
pop
adc
mov
movs
popf
xor
imul
xor
mov
cmp
inc
adc
add
inc
sub
dec
inc
sahf
cmps
add
push
out
mov
jbe
adc
inc
jp
sbb
fcmove
jnp
inc
adc
fwait
iret
mov
push
cmp
shl
sub
mov
sbb
adc
adc
cdq
adc
test
pop
mov
sub
daa
(bad)
pop
xor
push
imul
dec
aam
sbb
test
add
sbb
and
adc
add
iret
jnp
rcl
adc
push
add
dec
fnstsw
ror
sahf
inc
mov
nop
sub
cmc
adc
pop
inc
inc
pop
sbb
or
mul
sbb
fcomip
mov
ja
inc
adc
sub
loopne
pop
sub
mov
push
movs
add
pop
stos
fs
or
adc
fiadd
out
sub
dec
retfw
cs
pop
adc
in
out
add
int
adc
iret
mov
movs
xor
jmp
cs
lock
jo
adc
xor
sub
mov
pop
push
aaa
sbb
dec
xor
aaa
int3
xor
cmp
scas
pop
xor
push
pop
ins
xchg
ret
pop
sbb
dec
jbe
aaa
sbb
lds
rcr
jns
fcmovnu
fidiv
scas
pop
sbb
cmps
int
jns
test
(bad)
sbb
ins
outs
sar
sbb
arpl
(bad)
sahf
out
mov
xor
push
fwait
add
inc
popa
add
fwait
push
bound
fdivp
rcr
arpl
add
jecxz
mov
in
or
adc
add
shr
inc
call
ins
dec
cmp
sbb
cld
mov
mov
mov
jge
popf
mov
mov
imul
aaa
out
sbb
cdq
adc
addr16
sub
fcmovnu
in
aaa
stos
cmp
or
(bad)
xchg
adc
xlat
sub
div
adc
adc
outs
ror
inc
or
push
fimul
ins
mul
ins
test
ins
xor
(bad)
jmp
popf
mov
xor
adc
inc
repz
movs
ins
jmp
mov
(bad)
sub
mov
mov
mov
mov
mov
gs
xor
and
test
xchg
mov
push
and
adc
mov
test
adc
push
lods
inc
sahf
sub
add
cmps
cli
and
dec
shl
jmp
xchg
sbb
dec
movs
stc
jle
dec
adc
add
sbb
pop
pushw
sbb
leavew
lds
add
repz
push
add
jae
jns
add
je
xchg
xchg
mov
lea
mov
repnz
adc
mov
jbe
sbb
arpl
inc
add
add
arpl
mov
repnz
pusha
nop
dec
adc
adc
fcmovnu
fidiv
and
adc
inc
imul
ins
adc
dec
inc
or
sahf
jb
loop
adc
push
and
mov
es
aaa
xor
imul
mov
jae
mov
aaa
fisub
fwait
out
ror
push
adc
outs
jnp
movs
aaa
cmc
push
adc
sub
es
inc
adc
push
jge
cmp
mov
pop
mov
add
cmp
cmp
adc
lds
(bad)
popa
push
(bad)
mov
mov
jl
jne
mov
in
add
mov
xor
or
es
inc
jbe
js
fdivp
xchg
xor
je
cmps
sar
adc
sub
mov
adc
clc
adc
sbb
sbb
leave
fnstcw
jne
push
retf
lods
cmp
imul
sbb
sbb
movs
cmp
mov
test
adc
outs
sti
pop
stc
sub
ins
push
inc
je
or
adc
xor
push
xchg
int
jbe
sbb
into
inc
jno
push
inc
inc
jo
xchg
repnz
xchg
fcmovnu
jle
ja
sbb
xor
leave
in
es
xor
xchg
adc
ss
sub
sub
adc
pop
inc
fmul
jns
jl
add
fistp
mov
adc
inc
jae
aaa
jns
xor
pop
rcl
dec
div
add
sub
aam
ror
and
sbb
push
rcr
pusha
out
xor
mov
imul
imul
jnp
xor
sbb
int
xor
and
mov
add
cmp
adc
push
jge
je
jns
mov
aad
aaa
push
inc
mov
add
rcr
dec
les
aaa
imul
cmp
fwait
xor
cmp
add
loope
and
ins
adc
pop
inc
dec
push
jns
add
fistp
sbb
jg
cmp
in
in
outs
adc
shr
dec
ins
or
adc
sub
cmp
fcom
push
cmp
push
push
fcmovne
idiv
or
sar
jae
sbb
push
div
clc
sbb
aaa
movs
mov
sbb
ss
cmp
out
cld
adc
adc
sub
call
mov
es
sbb
aaa
push
sbb
adc
mov
sub
arpl
ins
das
dec
sbb
mov
jg
sbb
fdivp
mov
dec
sbb
jns
mov
xor
es
xchg
lods
loop
mov
(bad)
sbb
jg
inc
dec
pushw
outs
fnsave
int
fisub
adc
pop
mov
inc
adc
(bad)
call
and
push
hlt
mov
inc
daa
mov
inc
xchg
xor
dec
xchg
sbb
lea
adc
inc
into
aaa
or
mov
push
call
sbb
mov
cmp
xchg
mov
mov
mov
and
in
(bad)
sbb
popa
mov
mov
rcl
mov
sbb
inc
add
fsubr
in
jae
dec
dec
pop
adc
pushf
loop
jge
xchg
cmp
in
loope
mov
dec
inc
mov
dec
repnz
xchg
aaa
sbb
fcmovnb
sbb
fild
adc
xchg
fwait
sub
mov
scas
mov
jle
imul
rcl
dec
daa
int
js
mov
movs
int
imul
mov
adc
aad
div
mov
(bad)
inc
fdivp
es
inc
ins
out
adc
push
retf
jns
fist
push
sub
(bad)
adc
fnstsw
in
cmp
and
push
out
push
push
inc
xlat
mov
adc
sbb
fmul
push
jns
xchg
out
adc
dec
push
cli
fst
adc
hlt
cmp
loopne
jmp
clc
and
or
and
cdq
sbb
jle
adc
in
jbe
adc
mov
out
mov
dec
pop
adc
neg
enter
adc
pop
push
jmp
out
hlt
push
call
and
push
push
jno
ficom
scas
in
ins
jae
inc
imul
fisub
cs
adc
ret
dec
repz
adc
xchg
xor
popf
dec
pushf
mov
mov
sbb
adc
repnz
(bad)
fst
adc
stos
adc
fwait
mov
jbe
inc
fiadd
icebp
adc
fwait
mov
xchg
inc
dec
scas
pop
adc
xor
mov
add
inc
add
sti
or
ud0
sbb
add
imul
jns
push
scas
aaa
sbb
fld
fs
xor
xor
xchg
cmps
outs
fild
jnp
add
sbb
sbb
xchg
mov
inc
outs
fwait
inc
cmps
loopne
cmps
loopne
sbb
mov
dec
jbe
add
pop
fidiv
sti
sti
ret
fcmovb
ds
sti
outs
imul
push
es
fcmovb
ret
lock
ss
dec
rcl
sbb
enter
pop
xchg
hlt
sbb
aaa
rcr
clc
fimul
in
not
in
outs
popf
pop
xchg
data16
sbb
mov
mov
adc
mov
scas
shl
adc
icebp
push
repz
out
cs
out
sti
jno
push
add
call
sahf
sar
aas
jp
pop
push
popa
pop
in
out
push
pusha
pop
push
push
jnp
push
cmp
push
pop
push
push
aas
push
pop
cmp
jle
pop
push
push
dec
push
push
sahf
shr
iret
dec
push
arpl
bound
gs
pop
push
pop
aas
sbb
fcom
pop
aas
push
pop
aas
push
ja
not
push
jns
push
jbe
shl
push
je
test
jb
out
mov
dec
push
jl
xchg
jge
out
mov
push
jnp
sbb
push
and
mov
imul
movs
jmp
xchg
mov
push
lea
xchg
mov
mov
pop
not
iret
movs
push
ins
sahf
jnp
jns
push
push
imul
iret
cmp
jno
outs
aas
push
outs
cmps
xor
jae
push
nop
aas
test
out
mov
aas
push
aam
cs
cmp
(bad)
dec
push
aad
push
xchg
out
shl
xchg
push
xchg
aas
push
push
call
dec
mov
push
sar
push
popf
dec
push
cwde
aas
mov
sahf
jnp
xchg
push
xchg
aas
push
cdq
aas
push
jne
imul
jae
cmp
mov
push
mov
aas
mov
mov
stos
aas
push
ret
test
sahf
adc
gs
cmps
push
push
cmps
push
repnz
push
jns
loope
cs
(bad)
hlt
sub
(bad)
stos
push
(bad)
jnp
out
ja
adc
dec
cmp
fistp
enter
cmps
jnp
shr
leave
loop
fistp
retf
sahf
out
xchg
fimul
inc
int3
inc
das
push
std
dec
push
in
fdiv
imul
push
in
data16
lock
rol
shl
xchg
addr16
scas
adc
jnp
shl
movs
adc
int3
ja
sub
inc
sub
xor
ss
dec
push
(bad)
mov
jne
icebp
adc
mov
mov
xchg
xchg
call
mov
dec
sub
(bad)
dec
or
adc
or
dec
pop
imul
pop
or
(bad)
adc
sub
(bad)
addr16
lods
xor
push
dec
call
adc
fist
add
sbb
xor
ficom
(bad)
jmp
fcom
test
int
push
and
and
add
or
add
mov
sbb
fs
nop
mov
adc
fisubr
or
fld
sub
xor
push
mov
xor
pusha
xor
xor
add
sahf
shl
xor
mov
push
movs
inc
push
jo
neg
jae
add
push
aaa
not
add
cmp
jno
cmp
test
arpl
push
jb
push
fs
mov
gs
jae
pop
gs
jnp
sub
inc
push
mov
push
mov
cmp
inc
push
je
or
cmp
xor
fst
retf
mov
jne
or
adc
fnsave
mov
inc
imul
pop
or
sub
popf
rcl
pop
xor
push
sahf
jnp
and
push
mov
movs
ds
push
jl
add
mov
imul
adc
jge
dec
ins
push
js
(bad)
iret
cmp
dec
xor
mov
inc
adc
mov
out
push
imul
inc
adc
out
jnp
mov
push
jnp
adc
mov
ins
xor
sub
adc
adc
not
outs
pop
sbb
jno
dec
movs
push
sbb
and
push
imul
imul
and
rcl
ja
js
jns
xor
cmps
sub
sub
dec
movs
jl
jge
jle
or
jg
push
add
test
push
test
imul
cmp
cmps
mov
push
fs
ret
dec
dec
imul
jmp
arpl
push
push
pop
fs
sar
das
gs
not
push
push
retf
out
sub
push
push
push
das
push
push
push
int3
imul
imul
movs
jmp
iret
das
ins
pop
jnp
stos
cmp
pop
ins
ror
pop
pop
dec
not
das
outs
pop
push
pop
in
push
pop
jo
aad
xchg
cmps
mov
(bad)
jno
pop
push
pusha
jb
je
imul
jae
cmp
bound
je
push
fcom
dec
shr
jne
push
xchg
test
xchg
cmps
xchg
mov
dec
movs
lea
repnz
push
stos
scas
mov
xor
push
cmps
pop
lods
ss
mov
das
mov
push
cmp
mov
je
imul
sahf
push
lods
pop
mov
push
ds
jns
shr
mov
push
scas
mov
xchg
cmps
repnz
aas
push
addr16
push
xor
int3
push
imul
sub
ins
xlat
ins
cmps
rcl
outs
fnsave
mov
xor
xor
repnz
sbb
add
movs
jb
pop
or
or
pop
sub
adc
retf
test
test
inc
aas
inc
inc
jmp
push
push
imul
mov
dec
push
sbb
movs
test
mov
xchg
ficom
or
sbb
push
pop
push
imul
xchg
mov
cmps
inc
ds
push
dec
add
xor
add
mov
in
push
test
ret
mov
sub
xlat
je
xchg
fwait
xor
dec
not
xor
xchg
dec
in
adc
aam
jge
fist
add
cli
xlat
cmp
adc
mov
movs
repnz
rol
xlat
movq
outs
daa
daa
xor
or
dec
ja
adc
adc
push
adc
jnp
and
dec
ja
inc
and
jno
sub
sub
outs
mov
sbb
xor
add
rcr
sbb
cmp
adc
pop
sub
dec
ins
sub
popa
jo
movs
jb
pop
jno
je
pop
sub
jbe
retf
test
test
loopne
loope
xchg
retf
test
test
xchg
sub
xchg
lods
mov
lods
test
test
scas
stos
jmp
mov
mov
je
adc
and
mov
out
retf
pop
pop
xchg
ss
xor
pusha
jbe
cmps
mov
or
and
jmp
dec
push
push
push
or
push
imul
dec
movs
test
or
pop
push
push
inc
dec
repz
push
or
dec
movs
test
(bad)
adc
inc
ret
sub
adc
push
test
stos
repnz
dec
inc
push
jns
cmp
jns
jns
pop
inc
push
bound
jns
jns
gs
sub
inc
push
jns
jns
jo
xlat
jbe
dec
jns
imul
cmp
cmp
pop
test
out
sub
pop
pop
push
push
sbb
es
pop
rol
ds
dec
adc
retf
push
dec
push
push
push
jb
pop
sub
push
pop
sub
pop
pop
pop
movs
jb
pop
pop
pop
pusha
pop
pop
sub
fs
test
push
imul
sub
jbe
mov
jbe
ja
outs
mov
js
adc
xor
push
jnp
dec
jl
jnp
movs
jnp
adc
mov
xchg
mov
sysenter
sahf
pop
xlat
inc
sbb
and
scas
cmp
ja
enter
iret
mov
add
add
dec
add
push
imul
es
dec
out
cmp
sbb
xchg
push
mov
jb
movs
retf
jns
cmc
add
jae
and
push
jb
shl
shl
push
imul
fdiv
xchg
push
adc
rcl
jae
dec
stos
test
pop
call
test
mov
mov
and
je
mov
imul
mov
loopne
aam
jne
jge
and
stos
mov
int
adc
or
movs
imul
jmp
inc
ret
or
jbe
jnp
sahf
jnp
aad
push
adc
ja
fld
outs
adc
or
sub
mov
mov
push
daa
adc
loope
shr
jnp
adc
jmp
ror
mov
out
xchg
loopne
or
imul
sub
adc
sbb
enter
add
fcomip
mov
inc
std
sbb
mov
dec
imul
int
xlat
and
movs
ret
jae
push
mov
mov
adc
mov
sbb
pop
sub
and
mov
popf
mov
add
jno
inc
sbb
imul
mov
(bad)
imul
mov
sub
mov
push
mov
scas
pop
mov
mov
popf
jnp
mov
clc
add
ficomp
mov
ins
adc
jno
iret
cmp
fistp
mov
sahf
repnz
push
mov
outs
jns
xchg
mov
jnp
fwait
enter
jle
push
mov
ins
mov
inc
push
and
outs
sbb
mov
(bad)
sar
inc
adc
addr16
ret
out
mov
xor
(bad)
and
and
push
and
(bad)
fsubr
push
sbb
push
xor
push
inc
aam
not
ja
es
popa
xor
sbb
xor
test
jecxz
push
sub
sahf
rol
xchg
retf
shl
in
xchg
int3
out
movs
jmp
int
push
sub
jae
aam
into
sbb
and
push
sub
inc
add
(bad)
xchg
mov
or
sub
add
out
mov
and
fist
xor
mov
fisttp
xor
shl
sbb
rcl
cmp
mov
ins
lahf
outs
pop
xor
aam
jmp
jnp
sbb
push
xor
aad
int
mul
ret
pop
cmps
jg
arpl
mov
js
pop
mov
sub
sub
(bad)
xor
sti
aad
repz
sbb
in
test
fcomp
outs
cmps
and
jae
mov
xchg
cmp
retf
and
cmp
cmp
pop
xchg
adc
fidiv
std
fisubr
loope
or
shr
cmp
in
xor
ds
imul
enter
sbb
mov
mov
aaa
fnsave
jge
fisub
aas
pop
fild
sti
(bad)
js
inc
pop
inc
sbb
mov
sbb
sahf
shr
push
inc
pop
fcompp
outs
outs
mov
and
sbb
imul
sbb
pop
inc
sbb
repz
adc
lods
es
int
outs
jmp
push
dec
mov
leave
imul
jecxz
dec
sub
out
mov
adc
test
xchg
inc
not
dec
in
loope
imul
add
out
mov
jmp
xchg
xchg
cmp
xchg
loop
repnz
ins
cmps
or
dec
in
dec
mov
and
push
pop
in
ins
in
push
out
repz
xchg
sbb
pop
push
outs
pop
out
xchg
cmps
shr
xchg
call
mov
test
stc
jmp
push
and
ss
push
adc
cmp
push
push
push
inc
shl
sbb
jmp
aad
cdq
imul
clc
imul
adc
mov
mov
call
push
dec
imul
adc
inc
sbb
mov
push
clc
push
lock
out
adc
and
and
repnz
popf
pop
dec
movs
push
pop
repz
gs
ds
xchg
jmp
hlt
ret
fisubr
push
adc
xor
pushf
add
push
inc
adc
xchg
push
sub
push
movs
das
or
xchg
cwde
or
cmps
push
fwait
pop
sbb
push
pop
movs
into
add
movs
sub
sahf
push
sub
ss
add
xchg
cmps
aas
add
dec
call
outs
pop
cs
jae
cmp
push
das
push
xchg
pop
push
xchg
push
imul
pop
mov
xchg
push
imul
push
lods
dec
xor
add
push
imul
or
push
or
dec
imul
push
test
ins
sar
push
mov
imul
mov
loopne
cmc
adc
add
outs
sbb
jmp
scas
test
cwde
(bad)
mov
sub
push
adc
push
add
imul
push
cmp
lea
inc
push
pop
das
mov
push
cmp
movs
jne
inc
push
cmp
scas
push
movs
push
pop
movs
dec
sbb
imul
dec
jo
scas
push
sbb
sbb
adc
int3
push
sbb
jecxz
data16
push
pop
repz
push
xor
call
or
inc
mov
push
push
pop
mov
push
(bad)
xlat
push
sahf
inc
jae
add
push
(bad)
sahf
imul
pop
xchg
pop
aas
push
sahf
pop
test
jmp
add
lock
and
loopne
xor
(bad)
xlat
mov
adc
(bad)
pushf
ins
lods
pop
sbb
jge
daa
push
arpl
inc
fnsave
not
inc
sub
jae
push
iret
xor
push
push
pop
lods
imul
push
push
stos
aas
pushw
daa
das
sbb
xchg
push
imul
sub
cmps
shl
xor
and
cmp
outs
sub
popf
imul
sub
out
imul
xor
lock
push
(bad)
xor
add
cmps
jnp
mov
xor
xlat
push
pop
xlat
push
xor
jg
xor
and
pop
xor
cmps
adc
push
cmp
dec
dec
movs
cmp
mov
push
push
pop
movs
mov
xchg
cs
push
cmp
scas
fidivr
(bad)
aas
dec
adc
movs
test
daa
xchg
das
jmp
sub
push
push
dec
imul
add
xor
pop
xor
push
inc
push
inc
xchg
sbb
cdq
push
inc
movs
pop
mov
dec
rcr
loopne
add
call
dec
mov
es
adc
push
inc
shl
pop
lock
lock
pop
add
push
mov
ss
sahf
ror
xchg
xchg
push
lea
adc
cmp
dec
dec
push
jg
dec
les
sbb
mov
inc
and
and
loope
bound
push
dec
iret
cmps
shr
mov
dec
retf
lahf
cs
dec
stos
xor
aam
push
fist
jmp
push
unpcklps
xor
push
pop
push
lahf
call
push
push
sub
adc
add
sbb
push
push
sbb
and
push
pop
xor
cmps
jnp
jb
push
(bad)
pop
cmp
dec
movs
test
pop
imul
lahf
jns
pop
dec
in
push
lods
push
pop
test
pop
mov
call
out
sbb
pop
rcr
dec
cmp
xor
cmps
sar
cmp
call
sub
push
xchg
cmps
rcl
scas
imul
outs
jecxz
ins
out
push
ins
cmps
rcl
ja
outs
loop
repz
adc
xchg
ds
xchg
pop
xlat
mov
or
jb
cmp
push
mov
pop
mov
mov
jp
dec
jp
je
cmps
ja
movs
push
jne
inc
dec
(bad)
jnp
jbe
xchg
idiv
psubb
pop
inc
jge
js
imul
jns
push
jp
jnp
dec
dec
push
mov
imul
push
call
dec
in
and
add
pop
push
imul
dec
movs
test
outs
mov
imul
pop
imul
packssdw
xchg
cmps
rcl
arpl
cmps
mov
jnp
pop
adc
jecxz
xchg
mov
ja
aaa
mov
xchg
inc
xchg
push
push
cmps
imul
popf
outs
imul
scas
(bad)
ds
shr
jo
fwait
pop
in
cmps
repnz
pushf
mov
stos
mov
sahf
call
pop
mov
xlat
push
mov
jg
nop
outs
scas
imul
mov
dec
xchg
add
movs
int3
mov
push
cmps
xor
push
sahf
push
cmps
ja
add
sub
mov
mov
lods
call
sub
jmp
mov
call
in
mov
ins
rcl
jg
cwde
xchg
(bad)
xor
pop
test
mov
jns
test
xchg
cdq
add
cdq
mov
add
fdivr
fwait
add
das
shl
cmp
movs
test
in
add
cmps
rcl
sahf
add
jg
movs
movs
test
enter
imul
retf
stc
xchg
push
call
add
adc
test
cmp
dec
push
imul
push
rcl
aam
repz
lahf
add
sub
push
aad
push
jo
add
je
pusha
sub
sbb
mov
pusha
loop
adc
inc
mov
test
cdq
pop
and
adc
in
adc
adc
or
mov
mov
retf
mov
inc
sub
sub
stos
add
or
sub
sub
fld
fstp
mov
movs
cwde
inc
push
stos
movs
mov
ret
push
movs
mov
or
mov
mov
nop
bound
int
add
imul
or
dec
sbb
inc
sub
popf
mov
or
imul
add
scas
add
xchg
test
lods
fwait
inc
pop
test
shl
pop
inc
movs
push
inc
add
inc
inc
cmp
inc
sbb
jmp
mov
dec
pop
repnz
or
cmp
lods
or
lea
add
mov
pop
and
lods
add
jbe
sub
les
and
or
lods
popf
xchg
sbb
movs
add
and
inc
call
fsubr
or
(bad)
or
mov
stos
mov
mov
jno
xchg
sub
mov
or
popf
ja
or
mov
in
or
mov
fucomip
adc
dec
or
nop
inc
or
out
mov
popa
xor
sub
nop
mov
ss
add
lds
outs
sub
int
push
push
fs
push
and
and
push
push
(bad)
adc
dec
or
outs
mov
add
add
pop
outs
add
cmps
rol
pop
sub
movs
nop
outs
add
cmc
pop
or
xor
pop
loope
adc
xchg
push
mov
add
add
sub
nop
fwait
jmp
aad
nop
dec
add
iret
imul
adc
dec
pusha
mov
pop
outs
sub
sub
lods
jne
sbb
lods
mov
or
inc
stos
popa
push
add
jne
stos
and
and
pop
mov
ins
jl
adc
adc
fs
fst
and
pop
or
push
xor
pop
sbb
dec
mov
push
mov
inc
popa
mov
add
aas
repz
add
fcmovnbe
and
xchg
push
dec
and
add
ins
inc
xor
pop
pusha
jno
pop
jge
adc
dec
pop
jge
push
adc
aad
push
xor
out
lds
pop
mov
mov
push
sub
pusha
sbb
xchg
and
aas
in
push
rol
imul
test
adc
sbb
cdq
ret
or
mov
int
sub
bound
in
adc
adc
xor
out
cld
dec
add
jb
(bad)
and
push
inc
and
jns
xor
xchg
add
or
mov
adc
add
enter
dec
and
inc
push
mov
popa
mov
push
push
jb
xor
gs
dec
or
mov
das
or
jb
or
iret
fild
hlt
jne
dec
test
adc
mov
xor
dec
aas
adc
dec
xchg
mov
dec
pop
test
mov
add
pop
jne
fcom
(bad)
xchg
xchg
mov
push
inc
mov
test
pop
pop
adc
gs
dec
popa
inc
pop
and
int
das
fst
jbe
imul
pusha
movs
and
retf
iret
aad
adc
pop
sub
fcom
and
nop
add
jecxz
and
sbb
out
inc
(bad)
imul
imul
mov
xor
pop
add
lock
or
or
jmp
jmp
test
add
cs
pop
movs
sub
jae
add
je
pop
mov
pop
movs
add
cmp
and
adc
mov
jbe
dec
iret
shl
add
add
sub
in
mov
mov
shr
das
sbb
and
rcl
(bad)
bound
mov
sub
mov
and
pop
mov
xchg
mov
ins
lods
or
sub
mov
bound
call
imul
fucomip
mov
mov
icebp
add
add
push
pop
sub
add
ins
or
jmp
mov
dec
mov
inc
lods
adc
push
movs
add
out
xlat
(bad)
adc
out
lods
sub
cmp
add
mov
cmp
pusha
mov
pop
add
mov
push
jae
mov
push
addr16
mov
repnz
sahf
sub
add
ret
mov
xchg
bound
fadd
mov
(bad)
lahf
push
inc
sub
push
mov
jmp
pop
push
pop
sub
sbb
retf
test
adc
push
sahf
pop
sub
movs
shl
frstor
fild
pop
mov
cmp
xchg
retf
pop
pop
pop
sbb
movs
add
sub
imul
pop
adc
or
inc
sbb
mov
pop
xor
sbb
add
sbb
xor
add
inc
stos
add
and
xor
pop
add
movs
jb
mov
adc
dec
push
push
pop
sub
pop
imul
dec
jae
jne
jbe
inc
add
and
xor
stc
cmp
or
mov
mov
push
call
xchg
inc
aam
lods
jmp
mov
fmul
mov
std
xlat
pop
inc
bound
jbe
in
sub
mov
jg
bound
push
sbb
or
aad
daa
jne
pop
add
push
jbe
iret
inc
imul
sbb
fwait
ret
sub
or
sub
ss
ret
cmp
sub
pop
xchg
(bad)
dec
movs
aas
xchg
adc
dec
lods
jmp
jae
xor
imul
mov
cmovae
pusha
test
pop
cmp
popa
pop
test
pop
add
sbb
fsub
pusha
or
sub
popa
mov
test
push
sbb
dec
popa
mov
adc
xchg
and
adc
xor
test
ins
or
and
dec
stos
add
adc
fld
push
mov
dec
ss
mov
adc
outs
and
imul
popa
inc
es
out
sbb
daa
or
xor
add
mov
dec
mov
adc
and
rcr
sub
rol
inc
stos
xor
rol
adc
adc
jno
pop
xchg
test
jns
xchg
gs
or
xchg
dec
bound
push
push
repnz
gs
push
push
dec
and
adc
pop
inc
and
xor
test
aaa
test
test
xor
dec
outs
xor
dec
aaa
pop
(bad)
xchg
dec
aaa
test
mov
sub
adc
cmps
mov
sub
cmps
mov
adc
movs
mov
(bad)
retf
mov
jns
sbb
movs
mov
mov
inc
sbb
popa
and
cs
cmp
jge
mov
xchg
int
mov
enter
inc
sub
or
stc
stos
or
and
push
xchg
xchg
push
or
aas
jno
or
and
xchg
mov
loope
adc
mov
push
icebp
cs
push
aaa
mov
mov
mov
test
test
dec
inc
adc
dec
cmps
repz
mov
test
inc
stc
sub
and
and
(bad)
jecxz
jne
pop
sub
mov
test
(bad)
sub
adc
add
add
mov
or
and
lea
push
and
and
and
lea
and
adc
sbb
and
fist
shl
and
and
push
and
mov
adc
jecxz
adc
adc
or
mov
imul
pop
enter
dec
or
adc
cmp
adc
dec
jnp
dec
dec
add
dec
or
inc
stos
inc
movs
pop
(bad)
call
movs
inc
inc
(bad)
xor
sub
(bad)
sahf
and
mov
movs
inc
ret
pop
inc
cmp
inc
sub
and
adc
adc
call
xchg
lods
or
and
xor
adc
xchg
les
mov
pusha
xor
sbb
mov
push
mov
fistp
xor
adc
mov
adc
mov
adc
popa
push
or
imul
ss
shr
imul
lods
or
test
mov
mov
popf
cmc
fld
mov
mov
adc
imul
mov
lahf
sub
dec
(bad)
xor
push
xchg
bound
imul
call
dec
lods
call
scas
mov
add
mov
mov
stos
inc
dec
lods
cdq
ret
cmps
mov
fwait
mov
jg
xchg
les
data16
lods
cdq
ret
cmc
add
inc
jmp
mov
stos
inc
movs
adc
cmps
bound
sub
mov
fist
sub
or
mov
xchg
nop
inc
adc
nop
inc
adc
std
pop
inc
adc
xchg
arpl
mov
pop
aas
ss
add
dec
or
or
jae
add
or
pop
mov
or
bound
lods
dec
fisttp
mov
jmp
and
and
ret
ss
fist
pop
int3
ins
loopne
not
adc
inc
ficom
lods
jg
test
adc
int
(bad)
ins
pusha
sub
push
or
cmp
pop
aaa
sbb
push
add
test
xor
or
test
ret
repz
dec
pop
mov
xor
gs
mov
adc
xchg
dec
ins
pusha
xor
adc
fadd
xor
test
adc
push
or
cmp
or
shl
xor
and
aaa
inc
mov
add
fld
pusha
xor
inc
inc
ficom
mov
sub
adc
aaa
jecxz
(bad)
fs
fnsave
push
sbb
xor
sbb
and
arpl
inc
inc
push
(bad)
popa
jae
xor
push
xchg
aaa
adc
popa
xchg
(bad)
or
popf
mov
adc
imul
dec
daa
test
loope
ss
mov
adc
add
jne
outs
add
adc
push
inc
jns
add
ss
sbb
fcmovnb
xor
add
pop
test
fld
adc
pandn
adc
or
in
sbb
adc
add
or
adc
sub
inc
add
or
adc
(bad)
add
inc
dec
test
in
or
adc
jmp
inc
and
icebp
daa
test
and
xor
rol
adc
xlat
or
frstor
imul
push
fwait
movs
adc
popf
push
inc
arpl
push
sbb
imul
push
stc
mov
icebp
shl
and
not
inc
xchg
test
push
dec
or
test
jne
inc
mov
fs
or
mov
sub
popa
stos
sub
dec
inc
mov
aad
inc
add
lods
sbb
call
test
test
(bad)
rol
inc
adc
inc
leave
adc
add
sub
adc
shr
add
inc
cwde
jbe
sbb
and
inc
(bad)
inc
popa
add
or
add
inc
and
cdq
or
adc
loope
add
ret
jecxz
add
pop
ret
aas
ret
lods
jge
and
jmp
add
jae
jnp
mov
sbb
pusha
add
es
adc
add
idiv
test
xor
jecxz
or
cmps
or
std
adc
icebp
push
and
les
call
adc
cdq
inc
rol
add
or
ror
add
cmps
adc
push
outs
cmp
and
jmp
loop
mov
das
cmps
push
sahf
test
int
int
push
sub
dec
adc
sub
adc
dec
(bad)
mov
ins
arpl
lea
pop
dec
arpl
pop
xchg
lds
shl
add
lea
mov
fimul
inc
sub
lods
popa
cmp
pop
sbb
mov
cdq
ret
(bad)
sub
pop
ins
ins
mov
mov
(bad)
outs
sbb
cmovno
call
cmp
(bad)
aad
push
push
add
add
mov
and
sbb
pop
or
mov
sbb
and
jns
ss
jecxz
bound
jbe
pop
or
sbb
and
mov
test
mov
xor
leave
test
mov
push
gs
xchg
pop
adc
mov
out
nop
fmul
mov
mov
push
repz
and
mov
push
(bad)
call
sbb
scas
xor
jb
dec
sub
sub
and
jg
mov
mov
mov
jnp
invd
stos
inc
aad
adc
test
(bad)
mov
sbb
mov
pop
ret
or
ins
test
push
xor
adc
xor
push
mov
movs
add
jb
daa
push
inc
add
or
lea
icebp
mov
pop
xchg
xchg
xor
inc
xor
push
inc
jmp
inc
retf
(bad)
sub
mov
sbb
imul
pop
retf
pop
mov
fild
and
or
push
dec
jge
pusha
movs
push
scas
in
shr
push
aad
xchg
mov
xlat
ss
dec
mov
xor
jo
inc
inc
bound
and
jae
call
test
xchg
add
or
adc
mov
adc
vfrczpd
fidiv
mov
lahf
jg
pop
stos
rcr
(bad)
(bad)
sbb
inc
sub
(bad)
push
push
push
test
imul
mov
ins
cdq
xchg
lea
push
lods
mov
inc
sub
adc
(bad)
or
retf
xchg
rol
daa
dec
inc
adc
scas
or
jb
sti
imul
cmp
mov
mov
mov
bound
std
inc
test
imul
xchg
or
popa
xchg
dec
inc
sub
add
adc
add
cmps
push
or
push
and
inc
xchg
adc
or
dec
inc
test
jmp
jmp
add
add
nop
test
ins
push
and
adc
pop
std
add
push
and
pop
adc
adc
lds
lds
(bad)
fsubr
lea
fsub
mov
or
mov
popf
xor
rcr
(bad)
arpl
lea
fadd
mov
fnsave
mov
retf
arpl
std
xchg
arpl
push
enter
arpl
ret
lahf
arpl
mov
xor
sbb
es
fstp
mov
push
icebp
inc
fmul
xchg
sti
popf
and
xchg
inc
xchg
inc
bound
mov
and
nop
fdiv
and
mov
jbe
fsubr
jno
mov
mov
fsub
(bad)
mov
pop
sub
xor
sub
push
mov
int3
les
xchg
mov
sub
add
inc
cmp
and
xchg
out
aam
mov
rcl
ins
movs
inc
mov
shl
sub
xor
adc
aam
add
test
cmp
aam
push
push
or
inc
inc
in
mov
jmp
jge
and
mov
fild
lea
sub
test
push
mov
mov
push
in
fiadd
es
mov
dec
pop
push
inc
sub
and
out
inc
and
mov
mov
pop
inc
inc
lea
jge
mov
rol
xlat
inc
inc
pop
xchg
mov
inc
pop
cmc
xchg
push
mov
push
inc
test
test
aaa
ins
push
ss
dec
mov
mov
add
stos
add
adc
lods
add
lods
inc
ror
lahf
sbb
call
lahf
jae
add
adc
movs
adc
ret
jnp
inc
sbb
pop
inc
or
movs
add
or
movs
adc
inc
xor
jecxz
or
add
call
stos
or
add
add
push
mov
dec
jnp
xchg
push
aas
das
ins
movs
fimul
and
add
iret
in
cs
dec
mov
dec
add
ins
and
add
or
sar
nop
movs
adc
or
add
mov
cmp
mov
adc
jl
or
pusha
and
adc
sub
and
adc
dec
pusha
dec
add
jecxz
mov
sub
ret
adc
inc
inc
pusha
push
and
adc
add
inc
adc
rcr
ret
and
add
loopne
and
outs
xchg
add
jb
sbb
adc
add
jae
lds
pop
add
add
movs
sbb
jne
add
repnz
xchg
je
lods
add
add
add
(bad)
pop
and
movs
mov
inc
add
outs
inc
jmp
jg
sar
or
inc
stos
ss
test
mov
push
or
jmp
fnop
call
or
or
sub
fist
adc
or
add
imul
inc
mov
scas
sub
xchg
mov
shr
pop
add
sbb
and
sbb
ret
xchg
jb
mov
ins
push
pop
mov
aaa
inc
mov
adc
add
xchg
outs
stos
mov
push
sbb
jae
push
sbb
fld
mov
jne
pop
mov
outs
nop
inc
mov
(bad)
(bad)
ins
push
sbb
xchg
sbb
add
inc
xlat
push
mov
fild
movs
jne
pop
push
fld
nop
push
add
pop
add
add
adc
fidiv
loopne
ror
push
call
popa
sub
icebp
or
enter
enter
popf
ret
sar
or
in
xor
mov
cmp
rol
fld
sub
rol
dec
cmp
push
jmp
ret
or
aaa
nop
bound
or
aad
add
test
sub
nop
add
aad
xor
dec
add
dec
add
add
xor
cmc
add
nop
lds
nop
inc
xchg
gs
jmp
shl
loopne
add
jb
mov
pop
add
pusha
cmps
sbb
push
cmps
mov
add
push
add
add
sub
aas
lea
sbb
inc
add
mov
shr
or
pop
int
rol
sub
cmp
mov
sbb
mov
aaa
inc
mov
or
cmp
pusha
xchg
sub
inc
neg
loope
pusha
xor
add
xchg
loope
push
add
and
xor
or
mov
inc
je
popa
je
dec
xchg
inc
jae
dec
cmps
mov
xor
xchg
imul
jge
nop
push
adc
cmp
push
(bad)
adc
or
add
add
and
adc
and
pop
pusha
adc
adc
jmp
adc
adc
pusha
or
popf
pop
inc
pusha
pop
push
in
pop
add
adc
mov
mov
add
imul
add
stos
add
pop
shl
(bad)
mov
shl
cmp
push
ror
add
imul
add
cmovns
push
inc
test
retf
add
sbb
or
adc
pusha
add
sbb
dec
pusha
inc
adc
xor
push
xor
mov
inc
mov
int
es
add
cdq
inc
push
xor
add
in
inc
add
dec
or
test
fwait
inc
shl
lods
xchg
inc
xor
lods
xchg
rcl
and
sbb
add
add
xchg
rol
jg
add
inc
sub
stos
mov
nop
jge
or
lods
jmp
add
and
or
imul
or
mov
inc
adc
cmc
add
and
jmp
nop
ins
mov
xchg
adc
and
inc
sub
jmp
adc
sub
sub
mov
and
xchg
in
popf
adc
test
sub
adc
ins
shl
xor
and
dec
mov
xor
and
sbb
loopne
retf
or
das
nop
xor
and
add
jge
and
xchg
out
add
add
or
and
xlat
call
add
nop
int3
add
pusha
aas
xor
call
sub
ror
aad
stos
dec
and
xor
mov
xor
dec
xor
add
mov
xor
inc
xor
fs
adc
pop
mov
inc
sbb
xchg
mov
push
xchg
mov
jbe
or
xchg
(bad)
and
call
cwde
(bad)
dec
(bad)
lds
sub
xor
in
inc
ss
add
dec
and
fcomp
packuswb
mov
mov
mov
sbb
mov
cmps
push
xchg
push
inc
mov
mov
or
sbb
mov
push
mov
dec
movs
ret
inc
or
shr
dec
movs
fwait
inc
jae
ret
pop
jne
arpl
xor
jb
dec
loope
ror
jne
push
gs
test
std
imul
ret
sbb
dec
rol
je
loope
lea
ss
imul
sub
fs
fld
(bad)
(bad)
jmp
aas
aam
mov
bound
lods
nop
rol
sub
cmp
jmp
int
and
pop
xor
test
sbb
or
xchg
frstor
dec
test
nop
xchg
and
mov
rcl
push
dec
jmp
sub
or
mov
sbb
mov
add
or
xchg
xor
add
shr
and
shl
xchg
xor
bound
pop
cmps
xchg
xor
and
and
or
xor
and
mov
jbe
popa
push
mov
pmuludq
push
imul
push
das
enter
or
push
jl
rdmsr
mov
sub
pop
(bad)
or
mov
pop
push
pop
add
xchg
add
xchg
or
xlat
sub
mov
push
punpckhwd
(bad)
jne
xchg
adc
in
push
clc
mov
adc
push
jne
popf
mov
sbb
pop
push
jns
aam
fiadd
cmp
imul
cdq
push
pop
sbb
add
push
(bad)
in
rcl
and
push
sahf
add
jns
push
jns
pop
add
jmp
and
int
add
adc
pop
mov
and
fadd
add
pop
sub
add
je
add
sub
cld
imul
scas
jmp
mov
add
jg
xor
dec
sub
or
xor
shl
movs
jmp
xor
xor
inc
and
push
loope
imul
jns
js
xchg
dec
outs
fwait
add
cli
popf
add
push
xchg
cmp
jns
(bad)
in
loope
mov
in
add
add
adc
test
xchg
aaa
clc
repnz
inc
pop
add
jl
inc
jle
imul
inc
aas
bound
retf
dec
vprotd
xchg
add
push
dec
pop
add
dec
mov
fimul
cmovg
(bad)
dec
rcr
das
push
aaa
jle
jg
dec
xlat
je
push
das
rcl
mov
call
push
cmps
rcl
sbb
add
pop
icebp
xchg
mov
mov
pop
or
ja
pop
jg
mov
xor
das
cmp
pop
mov
jmp
pusha
sub
fwait
inc
jo
outs
pop
call
gs
inc
shl
(bad)
or
pop
shl
mov
and
ret
ins
call
(bad)
mov
cmps
xchg
hlt
pop
dec
outs
stos
mov
xchg
adc
das
mov
scas
inc
jb
mov
(bad)
je
sbb
fild
add
mov
jmp
pop
xor
jns
leave
jp
sub
call
sar
cmp
cmc
adc
inc
push
pcmpgtd
lahf
in
sbb
(bad)
cmps
inc
xchg
cmp
iret
call
xor
scas
fwait
mov
mov
scas
test
(bad)
pop
nop
cmp
xor
mov
mov
and
xchg
jnp
cmps
repnz
retf
jge
shl
aas
outs
cwde
scas
es
xor
jp
out
test
shl
pop
popf
fbld
sahf
mov
pop
scas
push
pop
mov
imul
jnp
xchg
cmps
scas
cmps
xor
call
test
stc
push
test
pop
shl
pop
mov
push
cmp
sbb
in
mov
xor
inc
mov
xchg
inc
(bad)
call
shl
xor
hlt
dec
jmp
mov
pop
mov
mov
xchg
in
mov
out
mov
call
push
aaa
das
ror
rcr
push
imul
ret
jl
data16
add
lahf
jmp
(bad)
fild
(bad)
lahf
mov
sbb
repz
pop
push
inc
retf
dec
rol
aam
outs
xor
or
mov
cmp
pop
jne
lahf
imul
adc
cmps
imul
call
push
ror
js
imul
or
sbb
mov
jmp
xor
lahf
inc
(bad)
pop
mov
lahf
fmul
dec
sar
sub
pandn
gs
sbb
scas
adc
jg
call
jecxz
in
mov
push
in
out
cmps
inc
shr
out
iret
call
clc
push
nop
dec
fsubrp
imul
lods
(bad)
aas
in
bts
je
xchg
out
scas
cwde
popf
add
test
je
lods
xor
push
pushf
xchg
lahf
lahf
shl
xchg
cmc
out
retf
mov
in
neg
call
add
and
dec
ror
hlt
das
xchg
cli
shl
imul
pop
mov
std
inc
in
(bad)
dec
add
cmp
cli
push
pop
add
imul
sar
add
(bad)
sahf
add
test
(bad)
jne
add
lfs
andnps
pop
inc
cmp
or
adc
rcl
xadd
(bad)
sahf
or
xchg
ja
popf
mov
(bad)
pop
pop
add
je
dec
shl
sub
jmp
sbb
cmp
sbb
test
sbb
(bad)
cmps
inc
push
movs
sbb
ds
push
xchg
push
and
adc
and
clc
and
test
mov
paddw
out
mov
sub
cld
sub
sub
cdq
mov
dec
or
xor
dec
xor
leave
xor
in
xchg
cmps
inc
inc
push
mov
push
dec
and
cmp
inc
cmp
test
fidivr
call
cmp
rcl
outs
aas
jle
je
mov
rol
inc
fcomp
inc
pop
ds
pop
ja
sbb
jbe
and
mov
jne
mov
push
dec
das
into
dec
jg
fst
js
cmovns
dec
movs
test
push
call
lea
jno
push
mov
push
jno
push
scas
(bad)
push
cli
call
or
cmovno
test
sub
into
pop
aaa
(bad)
paddsw
mov
pop
xor
out
pusha
jg
popa
mov
xchg
bound
jle
(bad)
aaa
jb
push
invd
lea
inc
push
xor
data16
iret
push
call
cmp
je
imul
ins
out
out
inc
add
cmps
dec
push
sbb
cs
jmp
jb
push
pop
call
jbe
scas
push
psubd
jns
dec
movs
jmp
jnp
movs
jmp
jge
mov
ret
dec
push
jns
pop
add
and
adc
dec
daa
iret
sub
imul
pop
in
cmp
xchg
cmp
xor
jg
mov
(bad)
pusha
mov
movs
(bad)
les
nop
cmp
push
cmps
jnp
push
pop
xchg
cli
(bad)
xchg
bndstx
mov
xchg
dec
imul
call
cwde
fucomi
movs
imul
fwait
aaa
mov
pushf
pop
popf
das
cmps
ja
push
shl
imul
je
dec
jno
clts
jne
mov
cmp
sub
fst
cmps
aas
cmps
out
push
test
push
cmps
imul
stos
movs
imul
dec
mov
xor
jnp
hlt
pop
pop
mov
call
mov
mov
and
mov
ror
icebp
inc
dec
dec
scas
xchg
cmps
xchg
pop
xor
bswap
mov
sti
mov
(bad)
mov
xchg
mov
rcr
xor
cdq
xchg
add
xchg
lds
add
jl
call
leave
pand
pop
xor
or
dec
out
test
add
fwait
add
cli
pop
iret
vmwrite
add
inc
rcr
cmps
repnz
je
les
sbb
aam
pop
pop
jns
aad
dec
push
add
rcr
jle
fcom
cli
shl
fcos
lahf
xor
sbb
add
pop
mov
inc
arpl
xor
add
sub
adc
call
sbb
sbb
inc
sub
pop
movs
mov
sub
xor
add
sbb
adc
movs
xor
adc
retf
xor
xor
movs
jb
pop
xor
sub
fnstcw
retf
test
test
fiadd
xchg
retf
inc
loope
jecxz
pop
sbb
inc
jne
inc
retf
test
pushf
pop
sub
mov
loop
mov
sub
mov
lds
push
icebp
loop
les
ror
xor
mov
mov
jb
bound
push
and
sbb
(bad)
and
arpl
jns
xor
loope
add
bound
xor
les
adc
test
push
jb
inc
movs
inc
xor
leave
or
push
pop
add
push
xchg
mov
mov
add
adc
in
pusha
lea
pop
and
add
or
mov
xchg
rol
(bad)
and
rcl
xchg
aas
or
cwde
aas
je
cmp
jno
icebp
push
jno
mov
popf
outs
adc
stc
mov
xchg
mov
inc
sub
call
mov
or
cld
rcr
inc
cmp
sbb
and
gs
aam
shl
ret
mov
pop
sbb
adc
inc
les
pop
jae
mov
cmp
jno
retf
loope
lds
and
inc
fucom
sub
add
sbb
and
aaa
mov
rcl
mov
mov
pop
xchg
and
bound
and
pop
xchg
pop
not
jne
mov
stos
and
sub
push
mov
adc
push
jno
ss
inc
lods
pop
inc
(bad)
sub
mov
scas
pop
xchg
push
stos
mov
data16
imul
test
xor
mov
dec
ror
arpl
lea
xchg
test
push
stc
cmp
rol
add
pop
adc
adc
fisttp
and
adc
dec
mov
mov
out
call
fist
adc
mov
jmp
movs
test
adc
mov
(bad)
bound
bound
or
dec
ins
push
popf
xor
sti
dec
lods
ret
(bad)
iret
xchg
adc
pop
aaa
cmp
inc
popa
loop
pop
ds
xchg
mov
adc
idiv
sub
adc
es
data16
imul
jmp
mov
gs
dec
adc
cmp
dec
bound
aad
and
dec
and
rol
pop
shr
ror
arpl
mov
xchg
xor
sub
xchg
pop
xchg
fsub
jne
pop
push
frstor
push
inc
bound
dec
push
xor
inc
and
loope
sub
fld
lahf
arpl
adc
fistp
or
pop
sbb
js
push
and
jmp
call
mov
jae
bound
es
ins
in
test
push
push
and
icebp
fwait
cwde
pop
test
adc
adc
das
in
data16
xlat
jmp
and
xchg
fstp
les
dec
lods
pop
jmp
dec
lods
xchg
xchg
jnp
cmp
daa
bound
mov
xchg
xchg
add
xor
dec
sub
aas
xor
and
sbb
and
push
xor
and
rol
sbb
jnp
shl
and
or
enter
or
pop
mov
pop
ret
mov
dec
and
adc
retf
mov
add
adc
dec
xor
and
push
xchg
sub
xchg
jnp
push
add
inc
rol
and
add
es
mov
arpl
mov
pop
mov
dec
jmp
dec
adc
int3
adc
xor
stos
adc
mov
jmp
iret
dec
lods
adc
retf
test
dec
mov
cmp
(bad)
fist
xchg
rol
cmp
mov
xor
inc
sbb
xor
sub
mov
movs
lahf
and
lds
pop
pop
or
enter
xor
dec
icebp
push
push
bound
es
xchg
aas
pop
xor
add
rcr
ret
pop
xor
ret
mov
and
push
xor
push
enter
std
adc
and
sub
popf
cmp
mov
pop
ret
or
leave
dec
aaa
inc
pop
leave
dec
xchg
mov
dec
xchg
mov
sub
adc
mov
sbb
push
stos
xlat
rcl
sub
lods
scas
and
stos
push
pop
pop
mov
sbb
mov
inc
adc
or
jnp
push
mov
cmps
mov
adc
mov
arpl
adc
div
(bad)
sub
push
sub
test
mov
and
stos
and
push
(bad)
xor
and
add
rcl
and
pop
jg
and
xor
jnp
jne
pop
sub
gs
pop
lea
pop
xor
mov
lea
mov
(bad)
inc
arpl
xor
push
add
sub
inc
sub
xchg
mov
sub
sub
sbb
mov
(bad)
push
sbb
icebp
imul
je
cmp
xor
xor
xchg
mov
lods
sbb
cmp
xor
pop
enter
pop
test
xchg
add
int3
add
stc
or
(bad)
or
and
ret
xor
push
daa
mov
cmc
or
xor
jecxz
fldenv
mov
sub
mov
inc
sbb
and
arpl
test
cmc
sub
ret
pop
test
jbe
fmul
sbb
ins
call
imul
sub
mov
gs
sbb
inc
and
jmp
cmc
rcr
xchg
push
add
ret
pop
dec
xor
push
xchg
mov
popf
xor
or
retf
int3
xor
add
xor
mov
popa
test
sbb
and
lods
push
sub
mov
sub
push
jmp
mov
mov
sbb
mov
mov
or
inc
adc
xchg
xchg
adc
inc
inc
jecxz
mov
and
or
(bad)
(bad)
sub
ret
imul
test
and
mov
pop
inc
and
push
ins
push
xor
aaa
addr16
xor
xor
loope
and
lds
pop
pop
and
gs
bound
movs
aam
ret
inc
pcmpgtw
aaa
movs
out
push
test
fnstsw
add
dec
rcr
outs
xlat
dec
paddq
push
and
in
sahf
cs
sbb
mov
or
lahf
sbb
sub
xchg
lea
or
fs
xchg
or
popa
nop
dec
ins
sbb
stos
in
mov
icebp
out
cmovp
nop
xchg
jg
movs
dec
(bad)
mov
dec
push
sbb
lods
dec
push
stos
fs
push
sub
jne
sub
dec
outs
sbb
dec
push
imul
leave
fisubr
jns
adc
dec
add
fadd
xor
test
mov
je
ret
out
ror
dec
mov
cmc
and
pop
adc
lea
push
imul
pop
pushf
and
shl
add
sub
mov
or
mov
aas
pop
sub
mov
addr16
mov
retf
es
ss
ja
pusha
das
xchg
lea
adc
daa
rol
ss
mov
lea
in
xor
enter
lahf
xor
nop
xor
dec
arpl
lea
(bad)
in
mov
and
arpl
rcr
push
rcr
jg
xor
push
xor
sar
pop
inc
and
imul
pop
ror
(bad)
aas
in
(bad)
xor
fsub
inc
(bad)
push
sbb
and
mov
es
xor
xor
xor
xchg
xor
xchg
or
aas
sbb
pop
sub
dec
jmp
inc
jmp
push
mov
inc
mov
cmp
into
dec
repnz
xor
movs
iret
out
mov
inc
push
div
addr16
or
mov
mov
mov
pop
iret
xchg
and
gs
xchg
xchg
cs
lods
arpl
cmc
lods
popf
mov
aaa
fiadd
imul
inc
int
push
fwait
xchg
sbb
cmps
test
pop
rol
cdq
sti
jbe
fisub
aas
xchg
test
cdq
pop
gs
test
pminub
test
int
jbe
imul
and
ficom
inc
in
jbe
pop
inc
pop
das
cmps
test
mov
sub
test
mov
or
lds
add
mov
jg
add
cvtdq2ps
and
jno
push
rcl
call
mov
sub
and
cmc
iret
in
cmps
mov
pop
loope
dec
stos
sub
stc
mov
dec
fwait
sub
shl
adc
or
or
dec
dec
and
xchg
mov
mov
or
inc
mov
dec
sbb
pop
jmp
mov
shr
stos
pop
cvtdq2ps
and
ins
xor
sub
inc
adc
dec
lods
popf
bound
loop
cmp
ss
pop
inc
jns
xchg
mov
mov
sbb
xchg
cmps
(bad)
enter
jle
push
dec
fadd
outs
fadd
les
adc
sub
mov
add
dec
xor
xor
or
fbstp
or
lods
dec
call
es
movs
les
stos
dec
daa
ins
es
add
push
sub
ud2
mov
es
xchg
les
dec
and
cmp
inc
adc
pop
daa
push
inc
loop
imul
ins
in
les
xchg
mov
movs
mov
adc
mov
les
pop
leave
jbe
sbb
or
fadd
jo
sub
xor
cmps
movlps
and
icebp
xor
pusha
loope
je
clc
shl
add
rcr
or
fwait
mov
pop
mov
xchg
(bad)
outs
sbb
mov
sbb
popa
mov
inc
mov
mov
xchg
(bad)
cmovne
lds
sbb
xor
and
pushf
xor
icebp
shl
jbe
pop
mov
dec
sbb
cmp
mov
ins
in
imul
sbb
or
cmps
mov
pop
xor
pop
pop
inc
and
pop
and
push
and
inc
(bad)
xor
scas
xor
pusha
add
popa
outs
bound
jno
sub
mov
mov
pop
mov
xchg
not
push
mov
sbb
mov
add
jbe
pop
ins
out
ret
aam
cmps
add
repnz
adc
test
mov
push
dec
jge
movs
push
xchg
and
test
or
push
aam
push
mov
jecxz
aam
push
mov
mov
push
mov
ins
ja
push
fwait
inc
arpl
add
cmp
jno
push
imul
ss
fcmovb
xchg
imul
shld
movs
int
fnstcw
push
fiadd
dec
movs
sbb
(bad)
sub
(bad)
je
dec
rol
xor
dec
mov
pop
lods
adc
pop
add
dec
push
xor
mov
inc
nop
or
cmp
dec
es
aam
push
mov
or
dec
pop
jne
dec
in
and
push
mov
inc
jmp
cmp
sar
and
pop
test
mov
or
ja
push
push
inc
scas
inc
dec
arpl
sub
popa
jmp
scas
sub
mov
inc
pop
sub
fiadd
test
dec
push
stc
xchg
je
bound
dec
sbb
rol
retf
stos
pusha
sub
jmp
pop
xchg
push
fwait
sbb
push
nop
dec
push
inc
inc
ins
xor
push
mov
es
aam
and
in
inc
push
test
(bad)
xchg
in
aam
dec
jnp
push
inc
lods
adc
xor
cs
sbb
ins
add
and
pop
and
inc
sahf
js
test
fiadd
enter
mov
ins
imul
pop
ficomp
das
mov
rcl
scas
mov
cdq
or
pop
outs
cdq
push
fiadd
(bad)
aad
sub
cwde
movs
inc
mov
imul
(bad)
jns
push
rcr
push
test
cdq
pop
push
frstor
in
dec
repz
aam
pop
movs
push
push
mov
xor
and
out
sub
xchg
test
push
ja
pop
aaa
jmp
dec
mov
mov
test
mov
xor
xchg
imul
mov
sub
jb
jmp
xchg
push
push
cmc
mov
imul
imul
cmps
rol
inc
pop
inc
xchg
xor
sub
jae
repnz
cmps
push
call
ins
push
push
cwde
pop
mov
ficom
dec
dec
lods
and
arpl
aam
push
mov
mov
fst
out
and
mov
xor
and
mov
bound
push
test
mov
popf
push
test
aaa
gs
sbb
imul
nop
arpl
imul
push
dec
sub
dec
cmps
mov
rcr
dec
cmp
ins
fcmovnbe
mov
dec
call
imul
addr16
inc
jmp
pop
inc
jmp
add
inc
test
or
push
dec
cmps
push
call
push
adc
dec
or
mov
inc
push
xchg
dec
in
and
push
sbb
in
sbb
sbb
push
pop
test
mov
or
popf
mov
xor
or
mov
add
imul
mov
jmp
imul
mov
dec
mov
lods
push
xchg
mov
ror
cmp
sbb
sub
lods
cmp
inc
push
rcr
ret
add
fisubr
jnp
popf
cmps
ss
xchg
test
dec
dec
push
mov
aam
xchg
stos
xchg
mov
cmps
pop
jne
test
fst
cmp
mov
and
ins
gs
jns
jne
dec
push
lahf
pop
adc
mov
enter
ins
movs
or
imul
aaa
pop
fisubr
nop
dec
fidiv
sub
pop
js
xchg
lods
inc
imul
lods
add
jns
jne
repz
inc
pop
mov
add
and
jbe
sbb
in
aam
jne
xor
dec
lods
xor
fwait
and
push
dec
fisttp
inc
sub
inc
push
xor
and
sub
inc
xor
mov
mov
and
inc
sub
aam
push
stos
cmc
sub
jg
test
inc
inc
xchg
test
ins
imul
push
pop
pop
xchg
jp
enter
gs
sub
mov
out
dec
jmp
ss
sbb
es
dec
(bad)
pop
xchg
mov
ins
xchg
xor
outs
pop
cmp
xchg
cmp
add
mov
(bad)
inc
adc
pusha
ins
cmp
aam
pop
aad
in
xor
mov
or
leave
icebp
sbb
sub
sbb
jmp
xchg
fnstsw
nop
pop
cmps
mov
add
dec
aam
das
push
fs
in
adc
test
test
(bad)
imul
gs
pop
enter
mov
ror
and
adc
aaa
movs
and
push
fimul
cmps
lods
popf
xchg
pop
popf
retf
imul
mov
ja
fadd
inc
pop
fwait
popa
in
jecxz
jb
jmp
rcr
dec
mov
rcr
push
lods
inc
inc
pop
ds
pop
ins
gs
push
aam
push
inc
shr
xor
aam
fbld
in
or
push
sbb
cmps
xor
or
push
xchg
arpl
dec
aam
inc
cld
mov
cmc
div
imul
ss
fld
push
sbb
dec
sahf
sub
ror
gs
xchg
outs
mov
add
imul
ja
lods
fnsave
sub
lods
push
mov
imul
xchg
aad
ss
imul
sti
mov
ret
(bad)
lods
pop
mov
jbe
pop
add
mov
adc
dec
pop
imul
mov
dec
mov
pop
xchg
mov
xchg
mov
stc
and
xchg
push
push
test
and
push
mov
cmps
test
aas
inc
frstor
push
sub
or
pop
sub
outs
xor
mov
imul
mov
xchg
aad
push
cmp
pop
inc
cs
cmc
xchg
mov
(bad)
ja
xchg
inc
xor
xor
mov
nop
xor
dec
imul
and
ss
gs
xchg
inc
fiadd
imul
cmps
jbe
fwait
pop
push
inc
cmps
ss
ror
push
test
fcmovbe
push
push
test
xchg
pop
inc
loope
pop
aam
outs
push
cld
gs
add
pop
dec
mov
aad
xchg
ins
or
mov
sub
test
sbb
pop
pop
pop
add
imul
inc
dec
xchg
jbe
mov
retf
xchg
jmp
lods
mov
jo
fiadd
enter
mov
retf
fldenv
in
(bad)
jne
inc
mov
and
mov
(bad)
(bad)
bound
in
ins
xor
fwait
pusha
jae
ss
(bad)
dec
push
sub
push
in
mov
aam
rcr
cmps
outs
xor
mov
and
push
xchg
pop
dec
stc
or
mov
dec
cmps
test
inc
jne
jle
and
sbb
cdq
or
sub
or
nop
das
dec
jno
in
add
dec
mov
mov
in
mov
mov
fisub
xchg
xor
lahf
xchg
out
cmps
xor
lods
popf
xchg
es
(bad)
xchg
lea
and
movs
ror
push
push
pop
dec
stos
pop
pop
movs
test
imul
pop
mov
es
fnstsw
movs
mov
push
sbb
stos
iret
ss
pop
sub
int
jg
dec
fisubr
imul
adc
and
inc
xchg
ss
xchg
and
xchg
movs
inc
xchg
push
dec
pop
daa
jmp
movs
adc
fisub
xor
(bad)
rcl
ror
xchg
(bad)
xchg
movs
mov
ss
pop
mov
jbe
movs
(bad)
shl
fistp
xchg
fsubrp
loopne
loope
jg
daa
push
sbb
lahf
in
out
daa
daa
daa
call
daa
daa
daa
in
in
out
out
daa
daa
daa
daa
lock
repnz
lea
and
push
stc
leave
xor
mov
stc
cs
sub
enter
outs
mov
dec
pop
inc
call
pop
rcr
xchg
ja
scas
xchg
xor
jb
aaa
add
push
pop
and
mov
mov
out
mov
or
ror
or
adc
xchg
arpl
push
dec
dec
inc
sahf
xor
sbb
fistp
call
xchg
push
ss
sbb
xchg
ja
movs
dec
xchg
pop
in
pop
pop
popa
imul
sub
xor
inc
movs
fcmovne
xchg
int
lahf
cs
imul
ds
fnstenv
js
arpl
and
push
fisubr
iret
adc
push
stc
mov
cmp
and
xchg
bound
pop
mov
aas
popf
xchg
xchg
mov
rol
mov
dec
fidivr
inc
mov
movs
dec
push
les
dec
xchg
mov
inc
jecxz
mov
push
(bad)
xlat
xchg
inc
mov
ins
mov
fist
fild
dec
dec
scas
pop
push
push
out
jb
lds
pop
pop
jb
jb
pusha
popa
bound
jb
jb
gs
fisub
dec
je
cmp
(bad)
xor
call
sub
(bad)
imul
dec
jg
pop
push
sbb
mov
je
nop
sub
mov
sub
js
dec
inc
push
es
jmp
cmp
pop
(bad)
mov
sbb
rol
add
pop
inc
sahf
and
xchg
outs
sbb
pop
push
mov
lea
mov
(bad)
jmp
iret
xchg
scas
lahf
xchg
ficom
mov
cmp
std
imul
cwde
pop
xchg
fisub
call
pushf
mov
dec
mov
dec
mov
mov
push
fs
cmp
xlat
leave
fimul
test
int
add
das
dec
imul
push
pop
das
out
scas
mov
jae
jmp
sub
es
mov
xchg
outs
mov
je
movs
and
mov
xor
shl
fwait
aaa
addr16
mov
enter
xchg
mov
lds
mov
(bad)
jg
(bad)
jmp
mov
add
and
add
add
adc
aad
aaa
outs
add
pushf
pushf
fcomp
pushf
pushf
pushf
pushf
fstp
fnstsw
pushf
pushf
pushf
pushf
loope
jecxz
pushf
pushf
pushf
pushf
in
out
pushf
pushf
pushf
pushf
jmp
pushf
pushf
pushf
in
out
out
lock
pushf
pushf
pushf
icebp
repnz
pushf
pushf
pushf
pushf
cmc
div
clc
pushf
pushf
pushf
pushf
stc
cli
sti
cld
mov
pushf
pushf
std
(bad)
inc
adc
rcr
das
add
xor
dec
and
movs
stos
retf
add
add
pop
lods
test
shl
and
fcmovbe
and
rol
mov
sub
add
add
pop
stc
sbb
mov
cmc
retf
pop
push
ins
ins
mov
push
inc
(bad)
add
mov
call
pop
dec
xchg
mov
ud2
push
push
(bad)
pop
ins
fs
(bad)
and
ret
(bad)
mov
jg
pop
mov
fs
imul
inc
sub
dec
mov
lods
add
push
cmps
jecxz
inc
cmp
repz
adc
pop
sub
movs
or
(bad)
adc
stos
gs
imul
mov
es
imul
(bad)
sub
mov
cwde
push
jmp
jmp
(bad)
and
mov
rcr
mov
cs
daa
mov
adc
in
cmps
mov
and
sbb
mov
pop
pop
out
sbb
push
xchg
(bad)
jecxz
stos
push
mov
sub
or
add
inc
inc
test
ins
push
add
inc
inc
std
lods
adc
test
sbb
shr
add
mov
movs
jecxz
adc
cdq
(bad)
and
adc
push
dec
sub
jmp
add
cmps
sub
sub
add
pusha
scas
add
xor
push
mov
pop
xor
cmps
jp
cdq
or
retf
movs
or
or
xor
or
cmp
js
andps
adc
pop
push
jns
adc
add
aas
addr16
movs
test
dec
pop
push
dec
xlat
je
xchg
sbb
movs
sbb
cmps
jmp
lods
sbb
push
fidivr
sbb
fist
push
imul
rcl
retf
and
jne
xchg
cmps
ja
adc
xor
mov
es
daa
in
sub
sub
sub
movs
jmp
sub
call
pop
das
xchg
cmps
rcl
jge
jg
pushf
pushf
xor
xor
or
xor
jo
ss
retf
push
cmp
arpl
add
jmp
pop
rcl
xor
icebp
cmp
cmp
sahf
dec
movs
test
dec
aas
dec
push
imul
rcl
adc
rcpps
mov
movs
test
dec
stos
dec
push
imul
dec
push
dec
cmps
js
jmp
dec
xchg
pcmpeqb
stc
stos
sub
push
out
call
call
or
push
call
pop
test
lods
pop
in
add
or
call
sbb
dec
movs
jmp
pop
(bad)
xlat
push
pop
imul
bound
jmp
arpl
pop
xor
daa
mov
das
fsub
addr16
call
cld
imul
push
push
imul
jnp
in
add
outs
(bad)
push
outs
pop
out
movs
test
sbb
add
loope
push
push
pop
inc
shrd
and
aaa
imul
jns
call
pop
sbb
add
les
out
pop
dec
movs
jmp
imul
sub
and
mov
cmp
pop
std
test
sub
xchg
test
dec
bound
xlat
mov
push
mov
mov
je
xlat
mov
mov
pop
mov
dec
in
cmps
retf
mov
jns
xchg
ja
xor
add
add
xchg
setbe
sub
cwde
fisub
cdq
bound
imul
push
call
lahf
outs
and
add
cdq
adc
sbb
das
xchg
movs
in
pop
fsubrp
aam
add
popa
add
dec
test
dec
test
sub
stos
mov
lods
movs
scas
scas
scas
test
mov
mov
call
bndstx
mov
mov
mov
push
arpl
or
add
cmp
pop
push
mov
in
je
cmovge
mov
lds
xlat
ror
ret
push
push
call
jle
popf
imul
imul
rcr
pop
push
retf
movs
test
retf
jecxz
clc
push
fidiv
into
pop
sbb
add
xchg
imul
lahf
in
lar
add
xchg
aam
imul
xor
psubusw
aas
pop
fst
ror
sbb
and
pop
retf
rcr
push
fstp
ret
xor
ficomp
fild
cli
loopne
test
ja
mov
push
pop
ins
xor
dec
shl
nop
cmps
imul
adc
je
popf
call
imul
fstp
ss
pop
fucomi
repnz
sbb
out
and
lock
cmp
icebp
cmps
imul
repz
jb
push
imul
lods
call
clc
or
jns
xlat
je
cli
cli
jg
add
pop
mov
xor
push
mov
addr16
pop
mov
push
imul
push
add
push
call
test
push
cmp
jb
outs
add
outs
or
cmp
je
retf
or
(bad)
or
dec
hlt
xor
pop
outs
aam
imul
das
(bad)
adc
jo
fisttp
adc
scas
push
mov
sbb
dec
movs
jmp
ja
lods
sbb
add
inc
add
mov
scas
test
inc
add
sub
jmp
xor
xor
push
jns
inc
add
and
sub
mov
adc
add
jp
add
imul
pop
lods
add
movs
sub
xchg
pop
push
mov
je
xchg
cmps
shl
xor
test
mov
xor
aas
push
fcompp
into
les
and
in
ss
add
adc
cmp
or
popf
retf
and
cmp
fidiv
mov
cmp
ds
jns
push
cld
aas
pop
or
inc
hlt
dec
shl
inc
pslld
xchg
cmps
repnz
inc
xor
ja
inc
imul
dec
pop
inc
dec
dec
dec
lahf
push
imul
scas
xor
dec
setbe
push
add
js
movs
jmp
push
int3
push
sar
dec
jecxz
(bad)
push
add
call
push
das
vpcmpeqb
push
(bad)
push
por
adc
inc
pop
mov
xchg
cmps
dec
pop
dec
pop
jl
add
(bad)
sub
aas
out
pusha
xchg
neg
jmp
bound
scas
jmp
fs
daa
gs
retf
pop
add
jl
das
mov
push
jecxz
repnz
push
add
ins
sub
xchg
cmps
arpl
outs
pop
shr
mov
jle
cmovne
pop
jno
xor
movaps
jae
shl
je
pop
jne
fnstenv
jns
cli
fistp
pop
arpl
js
and
xor
jns
cli
jp
pop
jns
push
jnp
fisub
and
jge
imul
xlat
jle
test
jo
iret
call
adc
enter
add
jns
mov
push
xchg
pop
pop
pop
cmps
add
(bad)
xchg
mov
pop
popa
ror
pushf
mov
jg
(bad)
fiadd
mov
imul
xchg
rcr
dec
push
popf
xchg
mov
xchg
pop
mov
cmps
imul
xchg
pop
mov
scas
xor
cmp
add
jae
mov
fwait
lods
imul
xchg
dec
push
out
outs
mov
pop
push
mov
int3
in
cmps
shl
add
imul
aad
sub
xchg
cmps
imul
icebp
test
xlat
je
mov
lods
pop
lods
outs
xor
outs
add
mov
in
shr
mov
iret
shl
mov
mov
xlat
push
fimul
push
xchg
mov
mov
addr16
push
imul
xor
push
call
loop
neg
movaps
xor
iret
xlat
shr
imul
xor
add
pop
sti
imul
(bad)
add
outs
cmp
pmaxub
pop
inc
repnz
rcr
mov
sub
int3
data16
int
into
cmovge
xchg
cmps
(bad)
iret
mov
rol
cmp
rcpps
ins
mov
pop
test
add
stos
inc
pop
xor
aad
rcl
lea
mov
fsubr
das
jg
fld
add
xchg
cmps
imul
fisttp
mov
shl
paddq
sub
pop
loopne
rol
push
call
icebp
retf
cmp
dec
in
xchg
(bad)
jmp
xchg
out
popf
jmp
pmovmskb
cmovge
jmp
in
ins
in
add
adc
mov
out
call
out
dec
xor
mov
daa
xor
or
repz
cld
stc
repz
xchg
add
mov
add
and
add
call
clc
dec
aam
jbe
(bad)
scas
jmp
or
std
stos
jmp
cwde
add
punpcklbw
sub
mov
add
pop
loop
jge
xchg
add
dec
movs
aas
cdq
movs
pop
xor
cmps
cmps
push
ret
sub
call
xor
pop
push
jns
mov
inc
pushf
add
scas
jmp
comiss
add
in
push
stc
mov
syscall
mov
push
jns
mov
call
push
dec
add
stc
sbb
jmp
lahf
and
sysenter
xchg
cmps
rcr
push
sbb
sbb
add
jb
mov
add
push
pop
or
xchg
mov
dec
mov
daa
or
fs
dec
dec
outs
sysret
or
or
movups
adc
push
movaps
cmp
cmp
cmp
push
ja
and
pop
ja
scas
cmovl
leave
adc
daa
or
mov
adc
inc
sub
loope
mov
or
or
add
xchg
ret
mov
fstp
femms
unpckhps
in
in
pop
sbb
outs
leave
leave
leave
leave
sbb
sbb
leave
leave
leave
leave
pop
and
and
leave
leave
leave
and
leave
daa
sub
sub
leave
leave
leave
sub
cs
ss
xor
add
jns
repnz
pop
add
sbb
mov
inc
jo
sbb
xchg
mov
and
xor
jg
enter
jmp
pop
pop
add
out
push
add
outs
lock
rep
cs
add
ss
aaa
faddp
xchg
mov
mov
data16
jnp
push
mov
mov
pop
push
popa
or
push
movs
push
cli
arpl
fisub
imul
pop
xchg
push
movs
mov
cmps
imul
dec
icebp
repnz
out
sahf
out
div
clc
stc
ins
ss
int
pop
rol
pop
ret
pop
les
int
mov
lds
mov
pop
enter
ins
ss
pop
or
push
int
mov
or
ins
or
outs
or
or
out
jmp
jmp
mov
out
hlt
push
or
idiv
data16
clc
or
adc
into
or
repz
repz
or
or
cmp
or
dec
out
jmp
jmp
mov
sahf
or
or
cmp
repz
or
or
ss
int
or
jae
je
jne
jbe
iret
fld
(bad)
jle
call
repz
ins
iret
out
lock
adc
adc
adc
out
repz
or
or
or
repz
cmp
or
or
jns
out
iret
jp
jl
jge
out
cmp
repz
call
repz
in
in
out
out
or
cmp
repz
or
fxch
repz
adc
fwait
int
adc
jae
je
jne
push
data16
mov
push
add
push
ins
ss
int
push
add
pop
or
cmp
fisttp
ror
rcl
aam
repz
aad
xlat
fcomp
and
and
add
add
add
fwait
int
add
add
sub
sub
fldcw
or
adc
adc
int
cs
das
sbb
sbb
sbb
mov
mov
fadd
data16
push
add
inc
add
add
inc
push
inc
pop
dec
or
nop
dec
iret
repz
xchg
xchg
xchg
xchg
xchg
xchg
mov
repz
cwde
cdq
imul
int
adc
ins
adc
outs
adc
fldcw
jo
jno
push
adc
data16
sbb
jbe
ja
fldcw
js
jns
jp
jnp
jl
mov
mov
push
daa
lock
sub
pop
push
loope
loop
jecxz
fwait
int
mov
pop
in
out
out
call
ss
repz
sahf
out
cmc
div
clc
fldcw
stc
adc
adc
adc
adc
fwait
int
mov
sbb
sbb
sbb
sbb
inc
sbb
ss
int
dec
sbb
dec
sbb
sbb
sbb
rcl
sar
out
rcl
aad
xlat
ins
clc
sahf
out
(bad)
inc
sbb
sbb
sbb
sbb
ins
ss
sbb
sbb
cmp
repz
xchg
xchg
xchg
xchg
ins
ds
repz
cwde
cdq
push
sbb
int
mov
push
sbb
push
sbb
push
shr
sbb
pop
sbb
mov
repz
mov
mov
mov
mov
repz
mov
inc
sbb
mov
ins
inc
sbb
sbb
sbb
sbb
ss
int
sbb
sbb
sbb
sbb
sahf
out
sahf
push
push
push
push
push
push
inc
pushf
out
push
pop
pop
int
cmp
mov
jne
add
cmp
aaa
fwait
js
jns
and
and
iret
repz
xchg
cmp
lods
sub
ss
int
sub
push
sub
sub
mov
ins
das
push
xor
pop
xor
ss
int
pop
push
pop
xor
xor
xchg
mov
adc
ss
int
and
and
and
fldenv
push
aaa
imul
mov
cmp
adc
outs
adc
jno
jae
jne
sahf
out
jbe
js
jp
jns
out
jl
jle
mov
push
sub
xchg
add
push
cmp
out
or
and
and
and
sahf
out
and
and
and
fldcw
push
cmp
outs
cmps
fwait
int
adc
jno
jb
jae
mov
sahf
jne
ja
jns
jns
out
jnp
jge
sahf
out
sahf
jg
add
xchg
out
mov
sahf
(bad)
nop
xchg
xchg
xchg
xchg
jns
out
xchg
xchg
xchg
cwde
cdq
out
sahf
out
fwait
jmp
jns
in
out
out
lock
bnd
out
repz
cmc
div
out
sahf
out
stc
cli
sti
cld
xadd
std
(bad)
push
add
add
jns
jp
jnp
data16
push
jl
jge
jle
jg
cmp
repz
add
xchg
cmp
mov
into
repz
xchg
xchg
push
dec
mov
fldcw
ds
add
add
and
add
sub
sub
cmp
cmp
data16
mov
add
and
data16
push
add
add
add
add
ss
es
daa
or
or
adc
int
mov
push
inc
push
inc
push
inc
push
inc
push
mov
ins
ss
push
inc
pop
inc
pop
dec
pop
ss
int
push
pop
dec
pop
dec
pop
dec
pop
dec
pop
jns
out
dec
add
add
test
fldcw
push
dec
mov
mov
mov
mov
fwait
int
pop
mov
mov
mov
data16
ins
push
mov
pop
mov
pop
mov
cmps
cmps
cmps
repz
repz
cmps
cmps
cmps
cmps
sahf
out
mov
or
out
jmp
jns
in
in
out
out
xchg
mov
xor
or
sbb
xor
xor
xor
out
test
test
add
outs
ss
int
(bad)
push
xlat
pop
fmul
(bad)
add
add
add
ins
ss
int
test
or
iret
rcl
rcl
rcl
loopne
cmp
aad
xlat
fcomp
test
imul
lock
rep
stos
stos
stos
stos
fwait
int
mov
stos
push
add
add
add
mov
ins
ss
add
clc
xor
jmp
or
or
scas
push
adc
mov
xchg
pop
push
push
push
sar
es
imul
imul
data16
adc
push
add
add
push
or
or
or
fwait
in
xor
push
or
adc
sbb
data16
pop
adc
adc
and
ins
ss
sbb
adc
pop
sbb
int
mov
sbb
pop
and
push
push
adc
push
and
ins
ss
int
and
sub
int
mov
sub
and
fldcw
imul
xor
xor
xor
or
inc
mov
fiadd
sahf
inc
iret
imul
dec
es
adc
adc
jns
jnp
dec
ds
ss
push
push
icebp
fidivr
push
push
push
out
push
jbe
ss
addr16
pop
add
jnp
pop
pop
pop
jle
popa
push
(bad)
out
fstp
cmps
push
addr16
push
imul
sbb
iret
outs
outs
jo
jno
fwait
addr16
jae
push
jne
or
sub
ss
ds
int
add
inc
and
popa
shl
push
repz
cs
sbb
loopne
mov
mov
data16
movs
add
add
test
lds
xor
pop
fcomp
add
fldcw
pop
adc
adc
(bad)
and
sbb
fcom
cmps
push
add
cmp
inc
inc
push
ins
ss
int
inc
add
inc
adc
inc
mov
inc
adc
jle
pop
or
repz
add
adc
pop
repz
mov
pop
adc
jns
jnp
repz
jl
jle
pusha
call
popa
push
add
arpl
add
mov
popw
or
imul
ss
ins
and
fwait
int
and
jo
jno
jb
jae
mov
ins
pop
je
jne
jbe
ja
ss
int
js
jns
jp
jnp
jl
push
sub
sub
add
ins
ss
push
add
push
add
loope
mov
pop
or
pop
adc
data16
ins
push
push
pop
pop
pop
and
popa
outs
ss
int
bound
arpl
adc
data16
repz
mov
push
iret
repz
ins
outs
outs
add
fwait
int
add
add
add
add
fld
push
or
or
or
jnp
out
or
repz
adc
adc
adc
cmp
jns
enter
sbb
sbb
cmp
repz
cmp
and
and
push
and
repz
rep
es
sub
sub
sub
dec
cs
xor
cmp
jns
xor
xor
cmp
push
cmp
push
ds
inc
scas
inc
inc
push
inc
out
out
jns
inc
inc
mov
dec
jnp
neg
sahf
dec
dec
dec
outs
jns
repz
push
cs
push
push
ss
fwait
in
jns
push
push
pop
ss
pop
push
sub
sub
xor
pop
push
push
pusha
or
jl
xor
rcr
rcl
iret
repz
rcl
rcl
rcl
cmp
repz
rcl
rcl
inc
cmp
repz
rol
and
mov
aam
adc
add
add
add
cdq
push
push
es
jns
out
ror
fmul
fcmovu
fsub
jns
out
(bad)
loopne
sahf
out
sahf
loop
in
out
jns
out
call
out
sahf
out
out
out
lock
sahf
out
sahf
repnz
cmc
div
jns
out
clc
stc
cli
sti
cld
adc
out
(bad)
inc
push
daa
push
outs
add
es
(bad)
pusha
cwde
or
add
bound
push
dec
sub
mov
pop
or
addr16
or
scas
std
inc
aad
jmp
mov
mov
and
(bad)
in
pop
daa
pop
sub
rol
sbb
sbb
add
rol
test
xor
inc
pop
sar
fadd
mov
jg
clc
aas
push
pop
jmp
ins
in
jns
(bad)
cld
add
pop
or
in
clts
aas
(bad)
je
pop
xor
add
inc
into
push
xchg
jl
add
test
or
mov
mov
(bad)
add
daa
sti
xor
psubb
ins
fistp
out
push
out
ficomp
iret
shr
(bad)
cmp
pop
rol
xchg
pop
sbb
pop
jnp
xchg
ins
push
(bad)
aas
pop
cs
pop
add
addr16
mov
xor
mov
std
cmp
mov
push
sbb
rol
bound
data16
jg
pop
jl
jns
pop
inc
add
jo
pop
(bad)
repnz
iret
rol
popa
add
jae
pop
lock
mov
xor
push
cdq
pop
inc
ficomp
es
mov
retf
(bad)
inc
xchg
sar
dec
aaa
add
or
movups
inc
xor
clc
daa
add
add
comiss
jp
out
aas
dec
pop
outs
daa
sar
lods
mov
aad
data16
aas
rcr
dec
jnp
sbb
pop
outs
push
shl
adc
cmp
add
fldcw
xlat
pop
sbb
fnstsw
add
nop
ds
jbe
pop
jle
addr16
dec
stos
xlat
pop
in
pop
mov
les
test
xchg
inc
aas
sub
pop
cs
add
inc
push
popf
aaa
addr16
fadd
push
or
aaa
dec
cmp
xor
retf
pop
jo
mov
inc
(bad)
and
data16
sbb
shr
add
inc
add
inc
add
rcr
push
push
sbb
cmp
xor
int
or
(bad)
push
xor
fisttp
fcomp
jl
sbb
push
sbb
mov
ins
pop
or
test
push
shl
pusha
mov
jge
sub
stc
pusha
nop
and
(bad)
push
and
addr16
inc
add
rol
and
cmp
or
add
mov
mov
sti
xchg
xchg
idiv
adc
daa
sbb
ja
popf
cmp
cs
and
imul
clc
xor
and
jae
push
adc
cmp
clc
dec
jnp
neg
push
dec
push
mov
push
outs
mov
fst
retf
xor
daa
xchg
pop
ss
push
(bad)
sbb
mov
dec
add
push
mov
(bad)
ja
mov
daa
clc
push
(bad)
cmc
sbb
mov
add
mov
lahf
adc
xor
cmp
inc
and
mov
xor
rep
loope
and
daa
inc
push
out
mov
dec
sub
aas
push
mov
daa
jg
xor
mov
dec
sub
xlat
lock
pop
aas
jns
dec
and
mov
sbb
push
and
fidivr
and
and
mov
and
mov
xor
sar
mov
push
xlat
push
retf
into
jge
daa
push
and
push
mov
push
fs
or
ins
pop
(bad)
daa
dec
daa
jb
mov
repz
push
xlat
mov
sbb
test
mov
push
or
mov
jnp
mov
scas
dec
push
pop
es
(bad)
daa
pop
(bad)
inc
aad
push
push
dec
retf
outs
repnz
mov
out
in
repnz
loopne
and
add
add
rcr
(bad)
clc
daa
add
daa
add
pop
xor
xor
mov
jbe
dec
pushf
es
push
ins
ret
sbb
add
inc
arpl
daa
ds
cmp
mov
arpl
jb
cmp
rol
or
(bad)
lahf
cmp
(bad)
out
shl
push
xor
fbld
mov
in
fisub
dec
retf
jmp
inc
inc
es
daa
jae
jp
dec
add
jle
xor
ret
outs
adc
sub
jecxz
(bad)
push
adc
sub
xor
xor
lock
pop
in
inc
xchg
sbb
or
or
jns
stos
movs
sub
push
repz
daa
ins
in
jb
movs
arpl
cmp
push
ss
mov
frstor
es
bound
stc
fchs
inc
in
push
inc
sub
xchg
out
push
daa
xor
jmp
mov
ins
adc
mov
stos
inc
push
shl
in
xor
push
inc
mov
and
js
shr
daa
fsubr
sub
pop
ss
cmp
jmp
dec
push
mov
in
adc
xor
dec
xchg
daa
sub
stos
inc
push
ins
(bad)
xor
ja
imul
jmp
pop
pushf
icebp
mov
mov
test
or
sub
cmp
jle
adc
cdq
xchg
call
xchg
sbb
clc
cmp
sahf
lods
daa
jl
daa
(bad)
fs
xor
daa
push
jl
gs
clc
or
sbb
xchg
es
mov
(bad)
daa
dec
xor
dec
xor
jbe
ins
daa
dec
daa
dec
daa
dec
jae
mov
daa
clc
dec
je
dec
sar
addr16
cmp
adc
ror
dec
out
aas
sbb
cmovle
lahf
mov
cmp
cdq
xchg
movs
loope
push
mov
gs
out
sub
(bad)
(bad)
nop
repz
or
movs
aaa
mov
and
dec
cmps
out
sbb
mov
add
mov
push
mov
jns
ja
inc
daa
mov
dec
mov
and
push
dec
push
inc
sbb
pop
adc
cmp
sub
mov
xor
pusha
cmp
pop
(bad)
(bad)
jmp
je
inc
cmp
push
pushf
mov
pop
enter
rcr
ins
cmp
aaa
into
aaa
rol
int3
shl
and
add
gs
sub
aaa
sub
loopne
out
retf
ins
mov
adc
ror
and
loop
pop
fmul
es
test
fnsave
push
and
pop
dec
jmp
pusha
and
xchg
add
(bad)
aad
jns
and
push
lahf
push
lahf
sbb
arpl
or
add
adc
pop
push
inc
inc
fistp
or
xchg
mov
into
test
lods
hlt
(bad)
fist
add
xchg
lods
add
call
add
mov
cmps
cwde
sahf
jl
aam
ss
(bad)
adc
scas
push
fisubr
jbe
out
pop
mov
ds
add
cs
int
fcmovbe
jle
push
stos
fcom
mov
sub
frstor
sub
loop
into
jp
movs
outs
(bad)
fistp
add
cld
xchg
div
ins
mov
fld
je
(bad)
or
cs
outs
ins
pop
bound
mov
jle
mov
mov
sahf
(bad)
fstp
neg
xor
push
and
movs
add
inc
not
mov
in
ins
fwait
mov
xchg
movs
sar
retf
imul
int
aam
xchg
movs
call
pop
fcomi
(bad)
sahf
add
mov
imul
add
add
fldcw
xchg
xchg
cs
les
rol
ds
repnz
hlt
(bad)
lock
inc
mov
ss
out
pushf
pop
fst
ds
xor
mov
add
rol
jl
push
jbe
jbe
mov
cmps
xchg
fsubr
loop
mov
int3
ret
mov
fstp
neg
stos
out
(bad)
sar
cs
(bad)
call
jp
or
xchg
pop
cmps
mov
mov
push
jmp
out
mov
and
cmps
std
pop
out
in
(bad)
mov
add
sub
add
(bad)
je
inc
xor
mov
or
mov
sub
cs
mov
in
or
test
into
int3
cmps
pop
ss
ror
es
lods
push
mov
pop
call
(bad)
aam
jbe
jb
hlt
(bad)
fisub
div
mov
sahf
or
push
cmp
cmp
xchg
push
jbe
ss
inc
shr
shl
xchg
paddsw
mov
sahf
ds
mov
push
mov
mov
cmps
pushf
(bad)
push
sbb
jb
sbb
mul
and
inc
mov
repnz
jnp
fist
bound
mov
call
outs
mov
sahf
mov
idiv
mov
out
push
sub
dec
repnz
jbe
xchg
push
pop
dec
sub
mov
jp
jp
je
inc
hlt
xacquire
xchg
cmp
dec
adc
dec
ds
add
push
mov
fisub
pusha
mov
aaa
dec
shl
mov
xchg
in
hlt
sub
pop
cs
mov
ds
mov
mov
pushf
xchg
test
ins
inc
cld
(bad)
jle
jbe
push
lods
sub
push
jle
cli
les
lods
into
aam
jge
or
xchg
push
mov
je
out
(bad)
ss
ins
fiadd
lods
call
pushf
xchg
xchg
push
mov
lods
mov
rol
jbe
mov
mov
shl
loop
mul
push
sahf
push
pop
jmp
(bad)
push
xor
sub
lods
push
je
lods
sub
xchg
jle
mov
cld
mov
popf
jl
in
cli
jmp
in
push
shr
stos
test
xchg
(bad)
into
lods
mov
dec
aad
les
(bad)
ins
out
mov
div
fdivrp
inc
aam
ss
xchg
sahf
test
pop
enter
leave
and
cld
and
fsubr
mov
cld
push
outs
outs
mov
push
lds
sti
ja
orps
add
adc
bswap
stc
mov
jle
addr16
and
mov
jge
out
enter
cmp
scas
pop
mov
pop
ins
(bad)
mov
arpl
clc
sti
cmp
out
adc
mov
aas
ins
mov
hlt
popa
rol
in
in
mov
outs
and
clc
dec
jae
adc
pop
sbb
and
or
ret
xor
mov
pop
lods
clc
scas
jo
dec
sti
sbb
int3
ss
sbb
jl
hlt
fist
div
cmp
sub
arpl
dec
dec
aas
push
gs
jmp
cld
int
and
out
fist
inc
retf
jl
sar
cld
pop
mov
sti
dec
les
lods
stc
leave
idiv
out
cld
popf
loopne
es
push
stos
mov
add
and
(bad)
clc
call
add
and
int3
pop
data16
retf
jg
sub
cld
lds
test
xchg
add
push
push
adc
fcomi
mov
loope
inc
std
adc
hlt
sub
mov
(bad)
mov
pusha
mov
icebp
push
adc
dec
pop
sbb
cmp
sub
cdq
sbb
jns
(bad)
icebp
(bad)
out
sar
mov
(bad)
mov
cmp
xchg
push
(bad)
sahf
jnp
lds
fcomi
cmps
cmp
mov
push
adc
(bad)
inc
fld
mov
cmc
aam
pop
dec
rcr
add
mov
out
inc
and
add
gs
fistp
lds
xchg
sbb
call
jle
fistp
mov
add
clc
int
and
sub
ds
test
cmp
leave
lods
push
sbb
clts
outs
stc
mov
mov
jle
cwde
pop
pop
std
push
cmp
mov
jle
pushf
jmp
cmps
sub
xchg
cmp
lahf
(bad)
fcomi
clc
call
lahf
mov
(bad)
jg
or
jge
pop
mov
je
cmp
jb
cmp
cld
nop
sti
sbb
data16
push
cld
push
xchg
leave
jg
(bad)
inc
cmp
fdiv
xor
cmp
in
fisttp
sbb
fisttp
inc
hlt
xchg
leave
jg
scas
sub
movs
dec
or
xchg
fld
shl
imul
je
push
aam
stc
and
mov
(bad)
aam
(bad)
rcr
mov
add
test
pusha
sbb
xchg
pushf
movs
stc
dec
jb
pushf
or
cli
(bad)
xor
xor
sahf
pop
out
mov
jne
out
xchg
les
in
(bad)
jle
outs
cmp
push
in
faddp
jbe
or
xor
int3
scas
fs
out
xchg
add
xlat
jle
in
out
(bad)
out
fimul
fwait
ja
xchg
out
jle
mov
ins
aaa
ror
movs
jp
push
out
inc
push
mov
aam
push
les
fadd
push
aam
ins
dec
and
ins
push
lods
xchg
cs
out
pushf
jb
mov
(bad)
fidiv
mov
dec
lods
inc
mov
sub
xchg
loope
idiv
fmulp
mov
std
or
pop
push
xchg
into
mov
ja
jbe
ins
jbe
scas
push
mov
cmps
pushf
mov
jle
mov
scas
jo
xor
cmps
xchg
sbb
aam
shl
jl
push
mov
aaa
sbb
aaa
pop
push
out
mov
pop
mov
scas
pushf
sahf
fs
in
jns
out
fsubr
pop
sbb
pop
push
mov
adc
pushw
mov
out
(bad)
xor
mov
dec
aam
pushf
pop
int3
ret
adc
mov
mov
scas
inc
stos
lock
in
xchg
int3
test
lods
push
push
push
push
ss
lods
ss
cs
aam
push
(bad)
mov
ds
es
ds
cmp
xchg
cs
jl
mov
ret
xor
mov
(bad)
call
add
fwait
add
adc
pop
ja
enter
call
stos
adc
pop
stos
enter
jg
xchg
adc
jg
outs
(bad)
xchg
mov
add
(bad)
and
or
bound
rol
mov
and
mov
les
in
push
pusha
mov
pusha
push
mov
and
popf
std
add
dec
fld
repnz
mov
add
or
mov
pop
cmps
pop
jo
sbb
or
add
pop
or
or
test
into
ficomp
ja
or
idiv
in
push
dec
add
rol
or
out
pop
lock
sbb
pop
clc
fmul
out
xor
test
and
dec
imul
pop
clc
xor
lods
add
jnp
sub
pop
jmp
movs
cdq
jbe
add
mov
add
(bad)
js
add
push
ret
pop
rcl
pop
das
(bad)
fld
ss
dec
fidivr
pushf
out
cmp
aas
push
cmp
(bad)
mov
pop
out
jg
data16
ja
bound
jl
outs
outs
or
sti
outs
add
jge
sub
(bad)
data16
ja
ja
mov
dec
push
movntps
sti
dec
outs
dec
bound
sbb
sbb
push
bound
inc
jno
sti
(bad)
mov
dec
pop
arpl
fs
pshufw
aas
and
xor
test
daa
push
rol
add
bound
out
call
pusha
adc
jl
sbb
pusha
sbb
adc
jg
shr
push
sub
adc
dec
pop
add
sbb
push
mov
jno
cdq
or
bound
mov
sbb
mov
sbb
adc
adc
pop
cs
jmp
push
dec
das
sub
push
jmp
dec
out
mov
into
push
pusha
bound
cmp
fcmovnu
jg
out
cmp
mov
push
inc
add
push
inc
dec
mov
mov
jo
or
push
pop
add
sbb
inc
jno
imul
out
data16
addr16
addr16
ret
outs
jnp
inc
test
jbe
out
pop
fs
ja
jnp
cmp
add
test
xor
jno
adc
adc
fimul
xor
popa
add
outs
das
js
ins
inc
out
or
rcr
jl
adc
ins
and
(bad)
push
and
dec
adc
jle
dec
jnp
dec
dec
cmp
es
fcom
cmp
lock
imul
pop
imul
sar
ss
add
pusha
jo
out
dec
mov
or
jp
cmp
add
mov
pop
push
and
loop
es
pop
inc
pop
cmp
push
mov
call
xchg
jnp
mov
cmp
push
jne
cmp
pop
shr
jnp
mov
xor
outs
inc
scas
jne
jmp
jns
xor
adc
outs
and
pop
js
xor
outs
jbe
dec
adc
mov
jbe
imul
pop
and
js
jo
es
nop
lods
sub
and
cs
bound
outs
ret
retf
ficom
dec
ja
xor
(bad)
mov
dec
test
inc
dec
pop
and
jnp
jmp
test
in
jno
imul
dec
dec
dec
test
iret
inc
test
outs
inc
rcl
outs
test
ja
xchg
loopne
or
mov
jge
out
jne
ja
js
aas
jp
jb
or
push
jno
arpl
scas
mov
adc
ret
adc
data16
js
fiadd
ja
sub
out
dec
call
sbb
data16
dec
or
add
jne
push
sub
xor
dec
pop
xor
stos
and
je
sub
push
inc
jo
(bad)
jle
fimul
dec
xor
push
out
or
sbb
jp
imul
inc
jl
pop
ins
outs
jmp
scas
jge
pop
cld
jno
and
outs
hlt
dec
push
add
cld
push
or
pop
call
mov
jnp
lock
jno
dec
or
jno
in
or
jo
dec
jno
into
jmp
jne
or
or
aas
fs
into
or
or
int
mul
jle
data16
test
fs
hlt
or
loop
pop
call
mov
cmp
add
mov
pop
inc
dec
jno
and
add
jb
sbb
sbb
jns
ins
loopne
xlat
fs
pop
loopne
jbe
sbb
mov
(bad)
xchg
and
add
push
and
cmps
adc
or
loopne
ins
dec
add
(bad)
ins
add
into
out
pop
pusha
rcl
mov
(bad)
or
(bad)
in
pop
push
cld
dec
inc
popa
sbb
daa
fdiv
sbb
dec
inc
inc
jno
mov
cs
jno
jno
cld
push
pop
mov
jb
dec
jnp
fmul
scas
bound
jmp
adc
dec
sbb
iret
std
dec
push
xor
xor
dec
sbb
ins
jb
sub
pusha
jno
and
popa
outs
push
jns
lods
push
push
mov
bound
pop
in
push
push
fs
call
test
jae
push
ds
loopne
(bad)
jmp
inc
inc
jno
push
add
mov
add
push
or
pop
fiadd
inc
cmp
push
sub
xor
dec
adc
dec
jle
push
dec
jae
cmp
jbe
(bad)
loopne
pcmpgtd
fsub
cmovl
jl
lahf
and
add
xor
mov
cmps
ds
and
jg
xor
repz
sbb
xchg
ins
fstp
div
jae
pop
xchg
inc
jae
aas
xor
imul
xor
mov
aaa
repz
add
cmp
out
je
sbb
cmp
push
out
ins
in
jbe
ss
jg
pop
cmp
or
int3
add
call
enter
aas
jae
shl
jg
sub
and
mov
xor
fiadd
push
js
aas
cmp
or
aas
neg
aaa
jle
jo
nop
or
mov
xchg
and
xor
jnp
sbb
(bad)
lock
inc
push
(bad)
repz
pusha
and
pop
xchg
inc
retf
inc
inc
inc
jns
out
inc
inc
pusha
pusha
pusha
icebp
jns
out
pusha
pusha
pusha
pusha
loopne
cmp
and
add
add
iret
repz
mov
cmp
repz
rol
repz
rol
loopne
loopne
iret
repz
loopne
loopne
loopne
jge
or
inc
add
cmp
sahf
mov
and
jns
out
and
and
sahf
out
sahf
inc
inc
inc
inc
inc
inc
jns
out
inc
inc
pusha
pusha
pusha
out
sahf
out
pusha
pusha
pusha
pusha
sahf
out
sahf
add
sahf
out
add
sahf
out
mov
out
sahf
rol
rol
jns
out
rol
loopne
sar
loopne
loopne
(bad)
imul
std
(bad)
sub
add
iret
cmp
mov
and
repz
repz
and
and
repz
inc
inc
inc
inc
inc
inc
cmp
cmp
clc
push
ds
pusha
pusha
repz
repz
pusha
pusha
pusha
pusha
iret
repz
add
iret
repz
and
repz
iret
repz
rol
rol
cmp
repz
shl
loopne
cmp
repz
loopne
fld
rol
jge
shl
inc
mov
rol
mov
push
xor
push
ds
fldenv
repnz
shr
inc
push
mov
inc
inc
shl
adc
and
inc
ds
rcr
push
inc
rcr
ss
push
inc
inc
mov
loopne
call
jo
cmp
inc
inc
ds
push
ror
dec
adc
fstp
ds
cdq
stos
movs
dec
pop
add
std
add
test
pop
idiv
std
aas
shr
div
push
push
dec
push
movs
inc
cmp
imul
inc
test
pop
inc
push
mov
inc
or
dec
inc
mov
imul
or
push
and
xchg
lds
fwait
or
in
add
and
push
pop
mov
fs
add
rcl
es
ret
int3
call
jecxz
enter
inc
xor
or
in
cmp
pop
add
cdq
xchg
inc
cmc
dec
and
in
or
rol
enter
jbe
sub
and
jge
call
pop
or
idiv
jl
fadd
aas
inc
das
outs
cmp
sbb
xor
add
mov
xchg
inc
and
push
jecxz
loop
loop
fidiv
mov
fwait
in
ds
fisub
fidivr
inc
inc
ror
cmps
outs
loop
fisttp
pop
add
nop
xor
jbe
fldcw
pop
call
sbb
out
cmp
push
jl
aas
inc
imul
add
not
inc
add
pop
push
pop
xor
jae
mov
mul
aas
sub
jnp
ret
call
aas
cmp
cmp
add
pop
repnz
and
fld
addr16
jns
cmps
jne
and
ja
dec
mov
lods
aas
imul
xchg
test
in
idiv
daa
pop
push
aas
stos
in
in
in
in
call
mov
push
movs
cmp
popf
or
ds
call
mov
in
push
jnp
pop
pop
loop
sub
arpl
sbb
xor
movs
popf
fdivr
arpl
add
sub
cmc
call
fisttp
movs
js
test
fadd
(bad)
in
in
add
int3
ret
and
out
dec
add
movs
movs
jge
fwait
in
movs
push
movs
sbb
(bad)
in
pop
call
outs
pop
cld
retf
pop
movs
or
enter
outs
cmc
fwait
out
in
rcl
xchg
adc
and
mov
imul
ret
ja
jbe
and
in
(bad)
loopne
out
and
push
add
fstp
popa
(bad)
in
pop
pop
and
out
xlat
add
xor
mul
dec
cmps
rcr
mov
outs
imul
int
jne
lods
jecxz
xlat
(bad)
div
movs
addr16
lods
xor
cmp
jmp
outs
neg
mul
movs
fadd
xlat
fucomp
neg
and
inc
add
outs
scas
adc
add
loope
psadbw
inc
inc
adc
xor
pop
mov
lock
cmp
cs
xchg
call
pop
or
inc
xor
push
js
sgdtd
fiadd
push
addr16
dec
xchg
cmp
jge
sar
push
add
rcl
dec
call
adc
addr16
xchg
stos
imul
int3
and
fdivr
pop
push
movs
push
or
outs
je
(bad)
sti
fidivr
dec
or
ja
imul
mov
cmp
arpl
and
ins
jnp
mov
es
xchg
imul
out
fnstsw
bound
arpl
jne
dec
cmps
and
out
jnp
popa
pop
ins
imul
sub
or
cmp
imul
push
or
inc
push
jne
cmps
push
outs
mov
jnp
fs
data16
gs
and
push
ins
xchg
or
push
(bad)
jnp
add
sti
fimul
fs
popa
imul
lock
cmp
jo
xor
imul
add
sub
pop
jp
xor
inc
ins
and
loope
xchg
mov
imul
pop
ret
and
(bad)
sbb
adc
push
push
je
and
mov
jns
mov
cli
or
(bad)
sub
jb
mov
and
repz
cmps
mov
retf
lds
xor
or
adc
retf
ret
xor
rcl
sub
dec
push
push
jecxz
push
icebp
ficomp
inc
imul
pop
ret
mov
xor
add
pop
xor
daa
mov
sbb
xor
inc
mov
outs
js
mul
push
sub
js
jne
and
jle
jp
sub
sub
div
aaa
add
jo
ffree
jecxz
ins
xor
call
push
mul
jg
bound
xlat
jle
iret
or
ret
xchg
fisub
scas
cmp
dec
xor
add
cmps
pop
pop
or
rol
arpl
adc
div
arpl
int3
aas
jae
pcmpeqb
shl
and
pop
call
sub
cmp
call
popa
jb
push
outs
inc
popa
xchg
popa
(bad)
addr16
push
pop
xor
mov
data16
(bad)
adc
jge
scas
jo
pop
pusha
and
gs
mov
adc
shl
cmp
bound
jmp
push
push
pop
outs
pop
and
js
repz
dec
cmps
mov
jecxz
imul
pop
cmp
jnp
(bad)
adc
sub
push
ins
jb
outs
xchg
cmp
mov
or
mov
scas
out
pop
pop
add
inc
dec
bound
fild
test
adc
inc
outs
or
xchg
push
push
bound
ret
(bad)
sbb
jae
or
std
pusha
repz
add
mov
ret
ins
arpl
pop
inc
ja
ret
inc
mov
jmp
(bad)
fisub
push
sub
push
sahf
addr16
cmp
push
add
stos
xchg
inc
dec
out
adc
pslld
sbb
sub
addr16
sub
sti
loopne
mov
repz
jae
imul
xlat
mov
mov
test
and
dec
jbe
inc
into
add
and
ins
fwait
mov
jne
data16
xchg
sbb
int
scas
ins
arpl
lds
mov
outs
push
dec
pop
inc
xor
adc
leave
cmp
push
mov
rcr
pop
mov
(bad)
dec
bound
mov
stos
push
push
shl
add
imul
adc
addr16
mov
dec
inc
mov
sbb
out
pusha
xor
add
popa
loop
ret
outs
enter
ret
das
xchg
xchg
movd
iret
or
sub
push
les
bound
jns
out
pop
loopne
test
mov
das
mul
or
sbb
pop
mov
add
jmp
ret
inc
fidivr
daa
push
lods
mov
rol
imul
bsf
addr16
aad
outs
imul
mov
or
add
fidiv
mov
popa
jne
outs
pcmpgtd
add
ins
ret
jmp
inc
iret
jp
mov
push
movs
push
pop
add
push
pop
jns
xor
inc
sar
add
out
sub
inc
dec
aam
cmp
test
out
fld
dec
adc
xlat
xor
das
pop
xchg
sbb
fwait
jmp
add
outs
mov
add
fwait
adc
push
push
xchg
aaa
pop
clc
je
sub
(bad)
and
inc
scas
popa
push
je
(bad)
pop
pop
mov
xchg
pop
push
add
test
sub
jmp
ins
imul
shr
xor
mov
ret
xor
dec
push
ret
mov
sub
sub
mov
pop
add
retf
xor
mov
sbb
cmp
jecxz
jo
sar
jg
inc
inc
outs
inc
icebp
ficomp
pop
inc
xor
push
dec
out
dec
test
push
enter
inc
lock
notrack
repnz
sub
add
enter
movs
or
mov
jae
das
jo
or
sub
cs
sbb
fist
mov
inc
sbb
dec
pop
nop
mov
pop
(bad)
fwait
push
cmps
arpl
aaa
retf
dec
out
sbb
dec
push
inc
dec
cs
fmul
or
add
inc
ins
xor
in
(bad)
sbb
scas
mov
scas
or
xchg
inc
lahf
sbb
push
pop
xchg
retf
jmp
dec
fwait
aas
aaa
sbb
and
loope
fs
arpl
jne
push
push
inc
push
xor
xchg
fs
push
mov
fwait
inc
jo
and
hlt
lods
adc
xchg
sbb
inc
dec
(bad)
mov
push
fcmovnb
mov
jecxz
push
dec
jmp
adc
in
jae
out
xlat
add
and
and
pop
push
test
inc
(bad)
inc
dec
xchg
dec
imul
mov
xor
inc
stos
neg
dec
adc
and
shl
pop
(bad)
dec
pop
movs
and
scas
daa
clc
inc
outs
jo
dec
aaa
cmp
jp
or
retf
cs
dec
and
in
ror
imul
rcr
into
repz
sbb
or
add
out
jmp
cmp
pop
sub
xor
jbe
fisubr
(bad)
mov
cwde
repz
daa
push
fiadd
iret
dec
adc
mov
jg
adc
xchg
cmps
arpl
dec
mov
push
shr
mov
jmp
sub
bound
xor
out
pop
cli
jne
pop
jne
mov
add
fwait
bound
and
xor
jecxz
shl
je
or
mov
inc
push
add
pop
mov
push
rol
rcr
push
jnp
sbb
idiv
jb
ficom
jae
stos
mov
mov
ins
iret
push
xor
mov
daa
ss
push
push
arpl
sub
xchg
push
sbb
imul
push
popf
mov
mov
stos
inc
add
mov
jnp
dec
bndstx
mov
pop
bnd
ins
mov
jae
or
add
dec
xor
dec
cmovae
mov
dec
lods
dec
mov
xor
mov
out
inc
ficom
ret
sbb
das
lods
pop
xor
push
inc
aam
jg
add
inc
adc
(bad)
pop
jmp
lahf
cmp
cmps
add
inc
sahf
dec
retf
inc
xlat
jbe
cmps
pop
scas
and
push
ret
dec
sub
nop
mov
cmps
out
sub
loopne
jb
sbb
(bad)
ret
mov
jg
inc
daa
and
pop
gs
pop
push
iret
ins
cmp
dec
arpl
push
inc
fst
push
rcr
sbb
mov
scas
adc
xor
xlat
inc
xchg
jnp
or
mov
push
xor
xor
jl
mov
imul
imul
inc
stos
sub
aaa
pop
(bad)
mov
sub
(bad)
das
(bad)
push
outs
rol
push
ret
and
push
outs
test
xchg
cmp
adc
or
pop
inc
addr16
xchg
arpl
mov
dec
dec
call
cmova
mov
(bad)
sbb
(bad)
cmp
(bad)
and
loopne
cmp
(bad)
or
mov
inc
pop
and
ins
(bad)
fbld
aas
mov
and
mov
add
jg
pop
lods
lds
sub
jb
add
fimul
xor
xor
stos
add
and
sahf
lock
inc
push
sti
add
xor
jecxz
add
loopne
xchg
mov
sbb
jae
test
adc
sub
loopne
add
inc
pop
retf
(bad)
adc
cmp
cmp
inc
sbb
shr
mov
mov
mov
add
or
arpl
imul
nop
addr16
mov
ss
sub
jecxz
add
and
push
push
test
ja
mov
and
add
dec
inc
dec
(bad)
clc
ret
es
mov
daa
xor
and
jmp
movs
adc
jne
inc
jmp
inc
mov
jne
push
mov
ret
pop
and
das
jecxz
ror
ins
xchg
pop
push
movs
sbb
je
scas
fistp
in
pusha
sar
sbb
cwde
bound
xchg
je
call
fwait
repz
ficomp
outs
jg
dec
pop
and
iret
mov
or
nop
and
ret
dec
movs
inc
popa
sub
mov
sahf
cmps
xchg
or
and
(bad)
out
fadd
mov
ror
sti
fisub
jnp
dec
or
mov
lahf
cmp
push
nop
pop
push
mov
adc
push
int3
xchg
push
cmp
imul
test
xchg
push
cmp
adc
adc
imul
imul
pusha
add
daa
cmp
cmp
push
xchg
pop
add
daa
lea
pusha
add
push
inc
test
pop
and
arpl
ret
sub
add
test
sub
or
ret
test
or
push
imul
xor
push
adc
pop
and
or
ins
aam
ss
pop
lock
push
sti
jns
movs
push
js
jmp
or
int
mov
mov
pop
mov
jb
aas
adc
jnp
mov
sbb
xchg
dec
ret
loop
call
imul
dec
add
in
or
mov
jnp
pop
push
mov
(bad)
pop
sub
jae
inc
ret
pop
add
sbb
rep
pop
dec
dec
xor
mov
xor
jbe
rcl
stos
fsubr
pop
xchg
add
mov
inc
sbb
sbb
shl
cmp
pop
or
jecxz
push
lods
add
mov
inc
inc
lods
data16
mov
sub
sbb
add
(bad)
ins
pop
mov
cmps
jns
lahf
sub
pop
jae
pop
xor
jg
sbb
iret
or
repz
pop
add
push
stos
and
push
out
sub
mov
pop
mov
bound
nop
jbe
ins
xor
push
push
fwait
and
sti
mov
pop
mov
xchg
dec
cmp
adc
add
into
pop
imul
pop
popa
jae
cmp
jecxz
mov
or
sub
pop
sub
(bad)
mov
mov
pusha
add
stos
xor
inc
mov
jnp
and
pop
pop
inc
pop
xor
sbb
or
imul
push
mov
pop
pop
arpl
sbb
or
push
movq
inc
ins
jecxz
sbb
stos
fnsave
or
lahf
mov
mov
mov
dec
xor
mov
addr16
and
imul
sbb
ret
push
sbb
add
add
stos
rol
imul
lahf
mov
jo
bound
push
add
mov
dec
mov
push
bound
inc
and
or
adc
fs
push
sub
push
push
dec
jmp
inc
pop
ret
jnp
call
cmp
daa
test
and
mov
in
mov
or
sbb
dec
lds
in
and
mov
pop
jae
push
push
mov
mov
cmps
push
lods
cmps
push
pop
pop
cs
aam
sub
add
push
(bad)
movs
outs
jno
cmp
fiadd
rol
pop
mov
mov
xchg
xor
mov
aaa
shl
scas
jmp
xor
mov
and
dec
lds
push
mov
xlat
jmp
ja
stos
rcl
or
cmc
xchg
inc
dec
out
pop
mov
(bad)
xlat
add
dec
mov
xchg
out
pusha
pusha
mov
clc
inc
mov
cmps
fild
lods
push
pusha
fld
xchg
(bad)
xor
sti
neg
xchg
adc
and
add
inc
and
or
das
outs
push
loopne
sbb
jmp
test
and
(bad)
scas
fimul
sub
ret
cs
pop
pop
lods
mov
hlt
add
push
xchg
push
fs
dec
add
jg
push
lea
mov
pop
dec
add
pop
and
clc
(bad)
addr16
ret
jne
cmc
mov
shl
pop
popa
arpl
fild
dec
add
stos
xor
fsubr
(bad)
pop
jb
jb
popa
mov
movs
cmp
outs
scas
adc
and
pop
mov
iret
sbb
push
adc
adc
fisttp
lahf
jne
xchg
ins
xor
movs
and
xor
cmp
adc
or
cmc
push
sbb
push
or
pop
les
scas
and
mov
push
cmp
cmps
aad
das
jecxz
int3
sbb
mov
(bad)
addr16
jb
inc
jmp
mov
jmp
push
icebp
dec
test
xlat
dec
mov
mov
stos
pop
inc
test
mov
dec
inc
aaa
sbb
sbb
or
push
es
push
jmp
aas
jbe
add
mov
ret
mov
test
das
imul
stos
popa
dec
inc
fstp
push
inc
bound
inc
arpl
add
or
xor
pop
iret
jb
push
push
out
push
das
add
cs
jmp
mov
push
imul
xor
ficom
jnp
xor
aaa
shl
movs
adc
fcmovb
fs
push
pop
fsubr
das
cmp
jno
popa
loop
sbb
aas
sbb
jo
jns
aas
cmp
outs
es
arpl
push
add
(bad)
pop
xchg
pop
call
jnp
dec
lahf
mov
push
mov
hlt
test
mov
ins
dec
es
inc
sub
rcl
mov
push
stos
push
pop
dec
(bad)
xlat
or
stos
or
push
xor
cmps
sti
fs
push
xor
vorpd
(bad)
outs
jo
loopne
mov
add
loopne
loop
mov
xchg
add
inc
dec
pop
fisttp
ror
jbe
dec
ins
add
sbb
dec
sub
push
mov
scas
sbb
inc
push
sub
out
adc
arpl
test
test
arpl
loope
outs
jne
jmp
loop
adc
test
sti
ret
(bad)
xlat
xor
das
jb
mov
test
xchg
cmp
jmp
add
rcl
test
or
inc
mov
or
aaa
and
mov
je
sbb
sbb
jmp
pop
or
test
xlat
ret
xchg
lock
dec
test
mov
lea
aaa
fisub
out
ror
or
repz
sbb
mov
push
mov
cmp
arpl
and
outs
stos
imul
or
ret
call
xor
adc
add
call
xor
rol
imul
sub
mov
mov
inc
mov
shl
xor
ss
div
sahf
inc
sbb
and
xlat
inc
pop
fs
or
inc
or
test
je
inc
shr
and
adc
gs
xor
shr
and
stos
sub
gs
push
or
retf
push
stos
push
in
aas
outs
inc
les
xlat
aaa
daa
sbb
inc
test
pop
fild
outs
xchg
pop
adc
mov
aas
jp
add
or
sub
adc
lods
xor
sub
push
mov
test
cmp
outs
mov
jecxz
xor
jmp
or
push
add
and
daa
sbb
push
imul
pop
cwde
fstp
inc
xlat
inc
add
add
stos
adc
xor
and
xchg
mov
call
pusha
ret
out
sbb
mov
jp
mov
retf
push
xor
sub
xchg
pusha
sub
mov
or
mov
adc
pushf
pop
xlat
add
add
iret
sbb
sub
or
push
adc
es
jg
pop
mov
dec
add
jo
retf
and
fwait
jl
push
inc
xchg
mov
jnp
xor
mov
push
xor
lea
sub
dec
jae
cmp
daa
stos
imul
gs
(bad)
jno
push
or
test
pop
iret
sub
or
rol
pop
xchg
daa
xchg
xchg
sub
push
pop
xchg
out
sub
and
sub
dec
inc
sti
pop
or
sub
mov
fsubr
pop
mov
xor
pop
pop
push
mov
mov
add
or
xor
push
mov
jno
aas
push
inc
movs
dec
pop
pop
(bad)
lds
stos
cwde
lea
push
push
xor
mov
sub
imul
push
pop
dec
mov
nop
or
lock
push
mov
sub
stos
(bad)
jmp
mov
sti
outs
dec
jnp
sbb
imul
sbb
jae
jne
push
sub
jmp
(bad)
shl
pop
in
sub
scas
push
sub
push
mov
mov
stos
xchg
pop
inc
mov
jb
push
inc
and
ins
arpl
xor
dec
rcr
and
jno
fsub
cmp
xor
and
pop
sahf
mov
stos
inc
xchg
mov
fisubr
call
mov
xor
addr16
sub
mov
or
push
ror
push
add
jbe
(bad)
fs
or
jmp
dec
idiv
and
aas
stos
pop
adc
dec
repz
popa
or
or
push
js
xchg
pop
xchg
mul
mov
push
mov
cmps
(bad)
sbb
jae
fwait
outs
push
daa
shl
jecxz
xlat
and
(bad)
inc
add
jo
mov
shl
cmp
and
sbb
adc
and
out
mov
imul
and
outs
and
mov
mov
dec
leave
fs
adc
adc
pop
lahf
add
jno
pop
mov
test
push
je
jne
or
sub
(bad)
(bad)
gs
or
imul
dec
js
xchg
xchg
push
sbb
push
pop
adc
xchg
outs
fs
inc
pop
cmps
sub
imul
mov
xor
or
ds
xchg
(bad)
and
js
sub
clc
lods
push
addr16
add
and
iret
push
js
sbb
or
mov
adc
inc
pop
stos
es
scas
daa
gs
and
pusha
outs
jnp
jecxz
and
and
imul
add
out
cmps
jp
movs
mov
mov
mov
and
outs
adc
jne
push
loope
pop
lahf
push
arpl
dec
loop
adc
push
stos
pop
scas
and
pop
mov
and
adc
ret
pop
dec
push
inc
inc
push
or
stos
rol
xor
jne
enter
data16
nop
call
adc
lahf
xchg
verw
bound
das
cdq
or
xchg
(bad)
outs
das
fs
add
(bad)
dec
xchg
mov
retf
imul
mov
aas
ficom
xor
mov
jg
enter
mov
inc
movntq
add
xlat
stos
pop
adc
push
inc
xlat
lods
push
jp
jp
pop
add
dec
mov
fsubp
jmp
inc
or
mov
loopne
xchg
jnp
sub
adc
adc
push
push
daa
add
push
cmp
jmp
test
add
imul
mov
ret
fmul
sbb
mov
call
inc
mov
sbb
mov
mov
iret
push
inc
sbb
mov
lea
dec
gs
mov
aam
popa
iret
fist
or
jae
adc
std
nop
jmp
dec
bound
daa
sub
pop
stos
or
pop
(bad)
pop
and
pop
lods
push
iret
lahf
sub
aad
jnp
mov
out
push
push
scas
pop
or
jg
jecxz
clc
dec
lds
xchg
mov
pop
out
add
shl
ret
push
jnp
cs
(bad)
ret
cmp
xchg
repz
fadd
out
push
lea
repz
sub
sub
out
clc
mov
stos
rcl
pop
retf
push
and
mov
nop
scas
and
jmp
mov
sub
xchg
push
mov
push
add
sbb
push
add
mov
adc
bound
or
daa
(bad)
jg
lds
push
pushf
add
fiadd
xor
nop
push
and
inc
stos
xor
sub
aaa
adc
mov
aaa
outs
sbb
push
jecxz
pop
jp
adc
mov
push
scas
ins
sub
fld
add
xchg
jg
cmps
test
popa
aas
pop
or
stos
imul
inc
xchg
push
dec
scas
add
pop
mov
iret
in
or
mov
ja
pop
arpl
pop
push
sbb
mov
out
dec
xchg
imul
ret
(bad)
mov
mov
mov
or
mov
lods
bound
loopne
ret
loop
add
mov
xchg
add
cmp
int
ja
jecxz
or
movs
rcr
pop
sbb
add
xchg
arpl
adc
pop
sbb
ins
push
and
cs
xchg
inc
ror
shl
imul
(bad)
retf
ror
push
rep
xor
aam
xchg
fimul
sbb
das
sbb
(bad)
adc
aaa
comiss
sbb
xchg
dec
add
rcl
sbb
call
xor
in
(bad)
and
mov
iret
jnp
mov
jbe
push
outs
lods
adc
mov
mov
mov
inc
mov
pop
stos
or
scas
sub
aad
pop
mov
xor
pop
ror
pop
retf
retf
movs
mov
call
stos
out
repz
xchg
sub
cmps
sub
mov
sub
mov
dec
cmp
xchg
dec
jnp
fidiv
(bad)
push
xor
dec
mov
shl
or
push
pop
push
bound
cmps
(bad)
and
sbb
mov
or
inc
pop
iret
daa
mov
arpl
call
pusha
pop
cmp
(bad)
mov
aad
dec
sub
and
push
push
push
pop
sub
inc
push
sub
div
daa
cmps
(bad)
cwde
sub
aaa
jo
jno
mov
mov
sub
ret
xor
inc
pop
inc
push
sbb
mov
push
je
and
rcr
add
mov
popf
ja
pop
add
lods
or
dec
xchg
js
push
cli
ret
adc
outs
and
xchg
pusha
rol
push
aaa
aaa
cmps
gs
inc
rcl
pop
add
je
inc
and
out
dec
dec
ret
or
sbb
add
xor
add
ret
add
pop
mov
push
and
(bad)
sti
outs
(bad)
nop
loop
cs
mov
out
inc
sub
mov
ss
jecxz
bound
mov
les
and
and
pop
pop
pop
outs
inc
inc
xchg
mov
jae
dec
mov
pop
sbb
and
inc
mov
xchg
cmps
mov
cmp
adc
or
sub
and
cmps
jp
dec
test
xor
push
xchg
loopne
add
aad
mov
mov
dec
or
pop
pop
stos
ffree
sbb
cmp
mov
mov
mov
cmp
stos
push
fucomi
fiadd
pop
xor
ret
dec
aaa
rcl
not
pop
stos
inc
mov
pop
add
cmp
adc
inc
mov
inc
sbb
pop
ins
xchg
inc
mov
fwait
xchg
rcr
jb
ins
sbb
sbb
pop
push
sbb
call
fadd
pusha
and
add
in
inc
outs
arpl
mov
repz
rcl
sbb
mov
xor
adc
jbe
popa
pusha
scas
sbb
lock
jnp
adc
jmp
fcomi
xor
stos
adc
jecxz
not
sbb
ret
outs
stos
hlt
mov
pop
(bad)
cwde
movs
xlat
inc
dec
arpl
outs
xchg
sub
push
ret
pusha
(bad)
sub
sbb
pop
aas
test
cmc
jecxz
loopne
dec
and
cmp
mov
imul
daa
or
xchg
bswap
pop
push
repz
into
dec
mov
dec
xor
add
pop
mov
jecxz
or
rol
add
push
lods
bound
adc
(bad)
sub
repz
nop
sbb
pop
ret
pop
jne
add
mov
or
xor
cwde
pop
push
mov
pop
daa
xor
imul
push
push
dec
int3
(bad)
push
out
mov
shl
inc
pusha
jne
xor
(bad)
out
shl
xor
mov
rcl
xor
dec
ret
mov
add
lds
jle
push
or
push
dec
aaa
push
scas
cmp
cmp
outs
mov
inc
dec
push
stos
dec
mov
inc
iret
push
mov
sbb
jecxz
imul
cmp
sub
xor
pop
sti
adc
jmp
push
push
push
dec
daa
arpl
push
mov
arpl
pop
jne
adc
mov
cmp
adc
outs
loope
xor
scas
lahf
inc
adc
and
add
push
xlat
adc
je
sbb
push
cmp
xor
ud0
jnp
aas
xor
inc
pop
xor
sub
imul
inc
inc
or
dec
ja
bound
push
retf
mov
aas
loopne
stos
mov
inc
mov
or
inc
and
cmp
outs
or
dec
mov
sbb
sbb
push
xor
movs
retf
sbb
les
inc
inc
pop
inc
gs
sbb
fstp
push
ins
shr
xchg
jo
xchg
sub
mov
mov
ja
(bad)
and
out
pop
je
movs
sbb
daa
inc
or
add
mov
xchg
sub
dec
sbb
adc
jnp
movs
add
or
mov
and
mov
outs
dec
rcl
pop
out
dec
mov
inc
stos
pop
rol
inc
lahf
das
or
sub
scas
cs
xor
push
mov
xchg
push
push
add
xor
div
inc
pop
fwait
add
ret
sub
(bad)
test
xor
ret
repz
mov
inc
test
dec
imul
push
sbb
push
cwde
mov
xchg
jo
and
cmps
cmp
cs
pop
pop
outs
retf
or
jns
sbb
imul
mov
or
jns
adc
dec
pusha
add
add
jnp
or
push
push
(bad)
xor
jecxz
push
mov
xor
rol
and
inc
fld
add
jle
or
(bad)
fmul
jne
push
clc
mov
(bad)
(bad)
fucomp
mov
ins
xor
push
sub
das
sbb
xchg
cld
aam
icebp
and
imul
fbld
rcl
add
mov
pop
test
cmp
mov
mov
or
imul
push
sub
jl
xlat
cmp
lds
dec
push
ss
imul
push
and
imul
lds
ror
aad
sub
xlat
out
test
ret
pop
xchg
(bad)
adc
rep
or
out
stos
mov
inc
push
retf
test
cmp
pop
popa
pusha
xchg
repz
loopne
pop
retf
jo
mov
adc
dec
mov
ret
sub
pop
(bad)
fwait
and
push
pop
sub
lahf
fs
mov
ja
mov
mov
shl
ret
push
mov
sahf
repz
imul
fwait
mov
jnp
jbe
pop
push
out
mov
das
ficomp
add
outs
rcl
inc
push
ja
xor
adc
jmp
call
inc
jmp
sahf
out
loopne
daa
jae
inc
iret
ret
(bad)
rol
sub
aad
pop
pop
ins
sub
sub
pop
das
add
sub
push
mov
sbb
fcom
sub
mov
call
jb
aaa
adc
cmp
mov
aas
pop
sub
or
add
adc
cdq
inc
mov
mov
fwait
jne
jmp
adc
fistp
repz
ins
xchg
push
and
add
setg
fs
loop
jecxz
out
push
pop
mov
mov
push
es
inc
sbb
sbb
xchg
sbb
push
cmp
js
mov
inc
push
paddusb
or
push
cmp
daa
imul
fild
ja
out
les
xchg
xchg
add
outs
stos
rcl
loop
inc
sar
and
dec
dec
add
add
add
sub
inc
add
movs
stos
dec
sti
ret
lods
xchg
data16
jb
repz
sbb
xchg
rcl
call
neg
push
inc
pop
stos
sbb
stos
or
sbb
xor
out
adc
xchg
mov
fimul
inc
rsm
lock
ss
add
sbb
(bad)
je
sub
(bad)
adc
sti
mov
arpl
ss
test
sar
cli
sbb
jo
scas
push
dec
pop
jo
inc
outs
push
or
xor
mov
test
jnp
inc
mov
aas
daa
das
call
xor
adc
cmps
add
jp
imul
xlat
call
sub
jecxz
pusha
adc
cmc
clc
xchg
push
dec
and
or
adc
pop
inc
stos
jmp
xsaveopt
inc
pop
shr
adc
xchg
sbb
arpl
call
pop
push
ror
lahf
pop
jo
push
pop
sbb
hlt
xchg
scas
push
sbb
xchg
fwait
mov
repz
push
dec
pop
movhps
movs
movs
dec
push
mov
sbb
fs
dec
(bad)
pop
inc
add
jmp
and
mov
xor
outs
dec
mov
fisubr
cmps
and
pop
mov
xor
xchg
adc
mov
jecxz
and
sbb
stos
sub
fild
test
nop
pusha
mov
add
or
sub
pop
push
pop
mov
out
add
cmp
pusha
pop
cmp
addr16
loop
rcl
inc
sub
sub
push
jae
fld
loop
retf
daa
or
dec
mov
out
and
push
imul
push
sbb
cmps
sbb
mov
sti
inc
test
push
stos
and
scas
add
and
arpl
xchg
leave
jbe
cmps
stos
dec
sbb
pop
sbb
and
add
es
jmp
sub
add
iret
and
or
push
cmp
or
lahf
ss
add
push
pusha
cmp
push
lods
or
iret
fisubr
movs
jae
adc
jmp
addr16
push
sbb
ret
mov
bound
pop
lea
add
pop
mov
sub
sub
out
add
or
pop
adc
sub
add
enter
push
and
imul
imul
mov
loopne
jno
jecxz
je
xlat
push
inc
push
gs
and
dec
add
jmp
mov
test
xor
dec
push
xor
dec
movs
ss
imul
mov
adc
jno
iret
stos
jnp
stos
mov
sub
push
add
lods
fisubr
pop
pop
out
add
cmp
mov
cs
aaa
sbb
mov
daa
adc
sub
imul
mov
sub
(bad)
sub
and
shl
out
sbb
mov
or
xchg
push
add
push
or
adc
popf
test
jne
inc
mov
stos
stos
jo
push
ds
arpl
stos
dec
mov
mov
pop
cmps
add
cmp
stos
cmp
dec
packssdw
pop
scas
rcl
(bad)
jmp
lahf
ins
inc
add
mov
lods
push
or
or
jmp
lea
test
es
pop
add
pop
jl
add
sub
fwait
cmp
(bad)
mov
inc
data16
xor
mov
js
push
sbb
pop
stos
add
stos
dec
sbb
(bad)
or
daa
pop
ficomp
dec
mov
dec
cmps
jae
mov
cmp
or
cmp
mov
fsubr
jb
aam
out
inc
inc
imul
pusha
addr16
cmp
dec
push
rcl
sub
ret
mov
call
rcl
add
cmp
loop
sbb
push
dec
jg
pop
pop
ss
xor
repz
mov
or
adc
cmp
mov
pop
add
cmp
dec
inc
pop
adc
das
or
(bad)
mov
lea
shl
mov
push
test
xchg
push
loopne
cmps
adc
and
push
add
push
loopne
mov
icebp
je
imul
xchg
jmp
sar
rol
add
inc
mov
pop
jg
scas
movs
and
mov
sti
je
jb
mov
repz
bound
push
call
daa
inc
add
xlat
pop
adc
mov
mov
mov
shr
cmps
sub
nop
sbb
ret
retf
arpl
repz
addr16
push
(bad)
and
lock
jae
imul
aaa
rcl
es
inc
adc
and
mov
mov
ror
jmp
imul
or
sub
add
aas
inc
mov
cmp
mov
repz
sbb
scas
mov
mov
(bad)
dec
aaa
bound
div
or
bound
shl
in
mov
mov
xor
adc
test
and
cmps
lds
add
pop
inc
xchg
add
ins
xlat
stos
lods
or
mov
add
(bad)
or
xor
pop
xor
jmp
push
adc
cli
pop
add
das
dec
ficom
sbb
mov
pop
add
sbb
(bad)
aaa
retf
mov
inc
mov
ins
nop
stos
es
pop
scas
call
pshufw
test
push
xchg
or
aas
adc
sbb
mov
push
cmp
lahf
in
add
push
mov
mov
pop
jnp
adc
sub
dec
xlat
mov
mov
addr16
adc
ja
loopne
add
ret
jnp
cmps
inc
inc
pushf
pop
jnp
mov
test
inc
dec
lods
pop
pop
stos
(bad)
fwait
pop
retf
aaa
jbe
or
out
or
jae
adc
mov
loop
push
jmp
jb
outs
and
das
scas
mov
adc
mov
xor
push
and
jmp
repz
and
push
xchg
or
and
xor
test
sar
xor
xchg
or
sub
adc
and
pop
fwait
adc
inc
jbe
xor
int
xchg
mov
and
push
mov
dec
or
push
out
push
jbe
add
push
push
inc
pop
jno
mov
dec
fmulp
pop
and
out
es
jno
adc
and
or
lods
sub
xchg
call
pop
inc
addr16
or
dec
and
add
dec
pop
sbb
test
cs
jae
and
stos
ins
pop
loopne
jmp
les
mov
fs
dec
mov
push
sahf
arpl
pop
movs
out
aam
data16
xchg
fmul
xor
dec
xor
scas
out
sub
pop
push
xor
add
lods
sbb
add
inc
arpl
push
mov
dec
pop
loop
lods
fistp
sbb
push
je
retf
mov
jp
sbb
mov
mov
mov
loop
inc
push
ret
shl
inc
test
rcl
pop
xchg
cmp
mov
shl
je
ss
sbb
xchg
inc
jae
mov
add
nop
push
add
jg
add
aam
fild
mov
pusha
jecxz
aaa
add
pop
xlat
cmps
sti
jnp
sub
les
push
jmp
adc
jbe
mov
imul
(bad)
mov
push
push
or
or
stos
popf
rep
inc
add
or
inc
mov
fwait
xchg
push
and
aam
inc
lods
mov
add
adc
mov
or
out
lods
popa
adc
xchg
cs
inc
nop
nop
xor
xchg
aaa
inc
out
mov
(bad)
sbb
sub
add
mov
jnp
out
push
bound
inc
push
push
inc
gs
or
mov
mov
mov
jecxz
and
push
mov
and
ins
add
add
pop
lea
js
push
je
or
lods
inc
popa
scas
sbb
fistp
pop
ret
in
daa
out
add
test
dec
or
adc
cmp
add
nop
mov
push
ret
adc
pop
cmp
jae
aam
push
pop
dec
bound
push
loope
jmp
sub
mov
ret
dec
imul
jae
pop
xor
imul
aaa
xchg
mov
jmp
test
push
lock
sub
push
or
les
dec
out
nop
cmps
push
and
fiadd
and
mov
or
fwait
or
inc
or
daa
lea
add
stos
pop
add
push
cmps
jne
fwait
das
outs
mov
sub
movs
pusha
pop
adc
fstp
out
stos
js
sbb
ret
adc
jmp
mov
es
(bad)
sub
aaa
test
aas
push
scas
add
rol
sub
xor
dec
mov
sub
mov
test
lock
push
xchg
cs
ret
sbb
xchg
inc
lods
daa
fist
and
push
and
adc
pop
jnp
test
movs
sub
mov
ss
loop
js
cmps
jae
and
rcr
ret
ror
adc
push
mov
inc
rcr
ja
xor
mov
mov
daa
mov
add
xor
cs
ss
out
mov
sbb
cmp
cmps
out
mov
adc
sbb
or
xlat
pop
sbb
aas
shr
mov
pop
push
addr16
adc
pop
(bad)
mov
sbb
dec
inc
sub
cmp
cmp
dec
sub
lods
ja
dec
mov
xor
inc
mov
mov
sub
repz
clc
or
scas
pop
test
inc
mov
pop
cmps
xchg
sbb
or
fucomi
push
xor
jae
jo
mov
imul
cmp
mov
iret
dec
bound
adc
inc
sbb
fwait
pop
or
shl
out
sub
jne
xchg
nop
inc
jmp
nop
fimul
pop
iret
xchg
les
or
inc
push
lods
nop
pop
mov
repz
adc
(bad)
je
sub
or
ret
test
mov
jae
mov
xor
das
scas
jne
cwde
cmps
adc
or
aad
and
pandn
test
and
dec
call
aad
(bad)
jg
les
dec
enter
push
or
jmp
adc
push
aam
mov
cmps
mov
(bad)
les
lahf
aaa
add
push
pop
pop
outs
stos
pop
xchg
push
dec
sub
or
dec
add
test
(bad)
inc
mov
and
rol
outs
fs
(bad)
fwait
ss
shr
adc
add
mov
jmp
push
xchg
and
rol
dec
mov
in
xor
ss
push
pop
adc
arpl
sbb
push
inc
fwait
push
adc
pop
adc
call
popf
push
cmp
inc
sub
jecxz
dec
cwde
sub
sub
fmul
ret
push
stos
dec
mov
cmps
sub
jo
daa
daa
fwait
es
rol
pop
cs
add
movs
stos
arpl
mov
ret
aas
xor
xchg
xchg
inc
movs
imul
cs
jecxz
and
ss
jb
and
pusha
fbld
lods
xor
test
add
gs
lea
les
mov
jmp
inc
aam
lahf
call
inc
xchg
or
ja
pop
inc
xor
(bad)
cmp
inc
push
fild
xor
sub
outs
movs
sbb
add
sub
jae
and
ja
jl
or
push
mov
aas
push
sbb
add
lods
adc
add
sbb
mov
sbb
bound
push
sub
xchg
jp
dec
add
iret
xchg
rcr
push
pop
sub
call
jg
mov
test
loopne
ja
mov
movs
sbb
adc
adc
ror
lods
rol
adc
bound
add
mov
rcr
push
sub
fdiv
lods
es
inc
daa
mov
mov
out
pop
and
sub
scas
dec
sti
jge
xor
(bad)
add
pop
adc
jmp
dec
sub
adc
push
(bad)
pop
mov
lahf
push
inc
jp
pusha
sub
sbb
imul
push
mov
xor
pop
dec
cmps
or
or
out
fimul
ss
xchg
dec
jmp
cmp
mov
lds
or
pop
in
cmp
les
jae
fwait
rol
or
mov
xchg
inc
add
adc
mov
mov
leave
movs
push
xor
mov
add
adc
mov
pop
loop
push
stos
outs
(bad)
pop
movs
jne
fcmovnb
xor
adc
rol
sub
sbb
sbb
adc
cmp
sahf
mov
push
xchg
comiss
mov
or
addr16
sub
scas
pop
mov
fs
ret
pusha
stos
test
mov
or
jnp
xor
fisttp
shl
add
push
dec
scas
rol
jecxz
or
sbb
add
push
add
mov
lods
imul
cmp
inc
fistp
sbb
cmp
pop
or
out
xor
push
das
fdiv
loopne
push
jmp
mov
movs
stos
push
pop
arpl
lahf
inc
mov
dec
push
out
mov
sub
mov
sub
sti
jo
sub
push
lahf
inc
test
jbe
fwait
or
mov
add
adc
repz
mov
mov
add
push
sahf
xor
icebp
test
addr16
inc
push
pop
hlt
out
cmp
dec
stos
jo
add
jmp
lahf
push
add
xor
mov
push
add
cdq
cmp
xchg
or
xor
dec
pusha
adc
inc
inc
xor
pop
sbb
psubusb
push
pusha
stos
jae
adc
mov
mov
and
xchg
or
add
xor
fs
cmp
add
les
mov
adc
(bad)
cmp
jbe
dec
adc
xor
in
and
ss
dec
xor
nop
or
mov
shr
pop
xor
test
and
xor
jae
add
aad
adc
nop
jbe
xor
mov
imul
pop
adc
xchg
sbb
inc
xor
pusha
pop
add
inc
or
lods
test
lahf
push
or
out
inc
jno
inc
aas
mov
(bad)
movlps
add
inc
pop
stos
cmps
or
push
test
dec
dec
add
pop
push
mov
or
inc
pop
xchg
jo
sbb
call
dec
adc
je
shr
add
add
jmp
add
loopne
add
sti
jecxz
lods
xchg
mov
add
or
inc
adc
xor
inc
rol
arpl
xor
pop
lods
push
xchg
(bad)
dec
add
(bad)
pop
add
inc
mov
mov
mov
out
fwait
mov
cs
popa
je
sub
dec
inc
mov
and
sub
aas
dec
inc
add
xor
stos
bound
movs
cmp
or
stos
sub
out
jae
or
inc
dec
inc
mov
inc
enter
push
adc
inc
call
inc
dec
dec
dec
add
mov
mov
(bad)
call
test
adc
lods
call
and
lahf
xchg
and
sub
push
imul
scas
and
pop
push
cmp
pop
push
add
adc
push
mov
dec
inc
jae
dec
adc
stos
mov
xchg
add
adc
cmp
add
outs
bound
adc
push
xor
jo
jecxz
addr16
test
or
push
mov
mov
lods
and
add
or
arpl
jo
add
sub
or
pop
adc
cmp
adc
pop
sbb
inc
pop
lods
xchg
aaa
add
dec
add
fistp
cmps
loop
add
aaa
push
loop
out
cmps
and
xor
in
lods
sub
jmp
or
add
outs
inc
xor
ja
daa
push
mov
jne
outs
inc
xor
adc
lods
sbb
push
outs
dec
sub
fsub
push
dec
or
cmp
mov
inc
push
nop
push
scas
dec
les
or
push
rol
or
push
ja
or
xor
push
xchg
adc
push
imul
scas
pop
lahf
call
shl
add
inc
pop
out
aad
leave
sub
cmps
movs
xlat
(bad)
pop
clc
sub
add
ret
pop
test
adc
xor
jae
and
sub
nop
add
and
mov
xor
mov
cmp
push
mov
(bad)
push
pop
je
dec
inc
pop
add
inc
add
cmp
xor
in
test
push
sbb
cmp
cmp
mov
xor
xchg
mov
push
dec
mov
jno
xor
push
and
test
dec
ret
dec
daa
sbb
inc
pop
inc
rcl
cmp
add
push
movs
inc
daa
movs
push
inc
xor
dec
or
inc
daa
and
mov
push
add
iret
das
push
daa
xchg
cmp
cmp
adc
dec
add
mov
scas
add
mov
jmp
lods
xor
sub
jge
ret
sub
repz
jmp
shl
adc
xchg
retf
sbb
lods
rcl
pop
pop
and
pop
xor
jo
mov
xor
jbe
ja
adc
and
push
fist
xor
fimul
mov
mov
or
mov
cmps
sub
cmp
push
adc
pop
jne
mov
lods
and
dec
aas
loop
(bad)
aad
sub
daa
pop
push
dec
push
ffreep
stos
shl
xchg
push
shr
out
arpl
xlat
bound
push
(bad)
aam
das
and
mov
iret
ror
daa
sti
add
sub
dec
mov
(bad)
adc
fmul
or
and
pusha
adc
adc
loopne
adc
imul
lods
push
push
mov
mov
and
or
cmp
push
jb
dec
pop
push
neg
xchg
test
pop
inc
xchg
mov
mov
sahf
xlat
test
xchg
inc
out
sub
push
pop
mov
rcl
sbb
mov
sub
mov
movs
sbb
cmp
adc
xchg
inc
fcom
dec
push
add
jnp
or
pop
mov
mov
ret
xchg
jo
in
out
or
sub
(bad)
dec
mov
(bad)
stos
xchg
mov
ficom
ds
jno
ret
inc
sti
jno
cli
xchg
imul
sub
arpl
xchg
jno
pop
and
test
pop
push
mov
or
les
imul
dec
add
sub
sub
sub
mov
push
and
push
cs
jnp
movs
sub
and
jae
pop
pop
mov
out
xlat
pop
adc
push
mov
loope
sbb
push
retf
xchg
sub
jg
stos
pop
sbb
test
lds
cmp
dec
xchg
push
add
and
adc
inc
xlat
jb
ins
ins
cmp
(bad)
push
dec
sbb
adc
adc
adc
test
mov
call
out
sbb
cs
inc
cmp
push
mov
out
daa
pop
adc
inc
sbb
fisttp
or
adc
mov
mov
mov
jmp
xor
xchg
add
and
imul
sub
push
arpl
push
imul
js
or
lahf
xchg
inc
scas
movs
inc
xchg
push
dec
xchg
add
inc
test
xchg
dec
xor
nop
lds
nop
rol
xchg
and
clc
mov
add
dec
je
xchg
push
inc
call
fs
pop
sbb
add
mov
add
jnp
or
jp
cmps
pop
push
stos
xor
repz
adc
rol
iret
add
stos
arpl
mov
retf
pop
xor
adc
xor
and
push
adc
aad
out
pop
and
push
pop
push
fist
mov
test
sub
inc
jge
or
adc
ins
xchg
or
dec
sbb
cmp
test
aas
jnp
add
sbb
movs
xchg
mov
or
adc
jmp
pop
retf
or
xor
push
pop
push
adc
and
test
dec
punpckhwd
mov
rol
xchg
xchg
sbb
arpl
adc
push
jno
mov
push
inc
shl
lods
rol
cmp
lahf
and
imul
and
mov
add
cmp
ins
shr
inc
fidiv
cmp
pop
movs
or
push
mov
cs
shl
xor
mov
dec
pop
jnp
add
movs
jo
sbb
(bad)
imul
or
add
jmp
push
cmp
das
push
cmps
ins
lods
add
adc
mov
sbb
loopne
mov
xchg
dec
adc
or
xchg
inc
data16
push
rcl
inc
inc
pop
adc
jecxz
stos
lods
inc
xchg
cmps
adc
jmp
mov
sbb
aas
xor
pop
add
or
adc
sub
add
add
pop
shl
pop
out
dec
mov
add
(bad)
adc
jmp
jae
adc
mov
adc
inc
pop
sti
inc
and
dec
push
xor
xlat
jecxz
push
jge
rcl
and
push
sub
ins
retf
pop
es
arpl
xor
call
cdq
sub
imul
sbb
add
cs
mov
adc
test
adc
sub
repz
and
imul
shrd
sub
lods
or
inc
ror
add
adc
jae
pop
pusha
popa
(bad)
ret
movs
outs
push
pop
fild
or
inc
push
je
leave
inc
xchg
inc
ds
cmps
pop
outs
adc
dec
popa
or
push
aaa
iret
inc
das
sbb
bswap
jne
sbb
sbb
dec
cmp
push
push
adc
push
fild
inc
pop
shl
dec
mov
outs
int
pop
xor
wrmsr
dec
sti
stos
dec
ss
mov
jl
lahf
inc
arpl
out
mov
imul
mov
and
(bad)
es
mov
(bad)
repz
adc
pop
lahf
test
xor
(bad)
jb
dec
adc
sub
inc
jnp
xor
push
mov
mov
add
xchg
(bad)
rcl
dec
ror
mov
mov
mov
xor
sub
jae
pop
shl
imul
fcmovu
out
sti
ret
push
mov
push
jle
push
sbb
neg
add
ins
call
pop
inc
fild
pop
dec
cmp
addr16
adc
push
aas
mul
pop
push
adc
inc
out
inc
mov
push
or
cmp
adc
jbe
pop
or
or
adc
add
test
mov
jae
ja
pop
push
add
cmp
add
jmp
and
sub
mov
push
idiv
sub
or
adc
outs
fimul
inc
push
vpmacsswd
adc
mov
cmp
xlat
cs
test
ins
sub
adc
adc
jmp
mov
add
or
sbb
inc
(bad)
sbb
or
push
movs
movs
push
cmps
jnp
pop
adc
pop
push
enter
pop
outs
fld
sbb
jne
inc
and
add
xlat
dec
cmp
mov
iret
pop
fwait
mov
imul
add
sub
add
pusha
add
iret
and
mov
fsub
sbb
lahf
inc
aaa
sub
push
add
bound
add
jg
mov
inc
(bad)
push
sbb
dec
imul
and
pop
adc
and
mov
sub
test
inc
sub
fimul
and
aas
push
fadd
adc
xchg
retf
push
xor
push
or
adc
int
sbb
bound
mov
loopne
bound
xchg
add
add
jnp
xor
dec
push
not
aam
add
mov
lahf
mov
sub
arpl
shl
imul
or
ss
repz
test
rol
pop
fwait
mov
add
push
sbb
sbb
sbb
inc
dec
pusha
pop
adc
push
ins
shl
jae
sub
sub
inc
pop
pop
sub
aas
popa
daa
mov
stos
iret
pop
adc
stos
dec
pop
sbb
rcr
(bad)
imul
inc
xor
sbb
add
mov
mov
sub
not
das
test
nop
mov
sbb
or
mov
jae
imul
adc
rol
sbb
jecxz
pop
jnp
ja
inc
pop
loope
mov
test
ret
push
jnp
(bad)
and
sub
mov
pop
arpl
mov
addr16
dec
loopne
mov
ja
push
dec
bound
adc
or
mov
pusha
aas
mov
push
and
and
mov
push
sub
lods
and
aas
daa
sub
or
ins
inc
inc
dec
and
sbb
mov
cmp
outs
xchg
fs
sbb
adc
mov
and
dec
pop
adc
daa
pop
stos
xchg
nop
sbb
add
jae
aas
pop
lods
fucomi
and
add
iret
sbb
arpl
scas
sbb
aad
mov
(bad)
jae
add
retw
sub
ret
mov
and
adc
loop
inc
xlat
loop
mul
push
iret
jnp
icebp
gs
xor
(bad)
in
dec
ja
sbb
jnp
cmps
nop
mov
daa
or
mov
mov
push
xchg
aas
js
iret
ins
iret
inc
and
cmps
mov
pop
pop
movs
mov
in
(bad)
xor
cmps
pop
mov
fucomi
jbe
aaa
push
sub
daa
mov
popa
fbstp
lea
outs
push
xchg
aaa
inc
stos
jae
rcl
(bad)
outs
pop
or
mov
(bad)
sub
mov
es
dec
and
push
sub
or
cdq
xor
sbb
jmp
cmp
mov
dec
mov
mov
jb
inc
mov
scas
and
sbb
inc
or
cmp
add
das
adc
loopne
pop
sub
loope
stos
jnp
out
pop
inc
pop
movs
xchg
dec
xor
mov
jbe
and
imul
rep
xor
cmp
scas
push
push
or
sub
push
aas
mov
and
push
xor
repz
pop
push
adc
mov
pop
imul
pusha
lea
pop
xor
xchg
ret
test
fcmovnu
cmps
inc
pop
pusha
adc
jle
outs
dec
push
adc
adc
out
mov
mov
mov
dec
lds
add
add
add
adc
cmps
cmps
cmp
js
es
push
adc
stos
ins
cmps
sub
sbb
ja
je
js
scas
pop
invd
mov
pop
das
mov
shl
xor
mov
xor
and
inc
xchg
outs
sbb
jmp
xor
xor
or
sar
outs
cmp
dec
loop
cmp
(bad)
mov
add
test
sub
jg
xor
pop
(bad)
and
mov
test
inc
mov
imul
push
aas
jo
add
(bad)
sti
adc
push
not
dec
adc
stos
pop
sbb
nop
(bad)
xlat
test
jne
push
adc
add
mov
xchg
neg
das
adc
adc
bound
sub
mov
repz
dec
repnz
lahf
stos
jo
inc
aam
mov
dec
sbb
inc
xor
les
outs
aam
sub
push
sub
jae
mov
mov
sbb
pop
pop
and
sub
add
and
add
pusha
call
push
adc
inc
add
mov
mov
adc
push
cs
add
pop
cwde
add
cmps
jae
mov
inc
mov
add
adc
sbb
dec
add
lds
test
or
or
bound
push
add
dec
adc
lods
ret
pminsw
cmp
shl
ret
ja
cmps
push
je
fisttp
pop
and
es
dec
xor
jo
arpl
arpl
inc
arpl
mov
pop
pop
jg
mov
sub
arpl
push
add
jp
inc
mov
mov
xchg
ret
push
adc
push
mov
or
outs
sub
pop
jae
push
retf
into
jb
fst
push
rcl
outs
and
cli
pop
pop
imul
mov
inc
rcr
sbb
sub
adc
inc
mov
sbb
repz
bound
xchg
xchg
and
xor
outs
jae
or
inc
mov
ins
retf
dec
pop
fidiv
sub
cmp
repz
loop
mov
pop
jg
mov
or
das
mov
xchg
adc
jne
sub
outs
(bad)
add
sti
adc
es
adc
adc
popa
cs
or
pop
jnp
sahf
shr
jns
cmp
sbb
pop
xor
dec
cmp
xor
repz
add
fwait
cmp
outs
and
(bad)
inc
je
fdivr
or
add
adc
(bad)
aas
sub
aaa
push
jb
push
arpl
clc
dec
jae
gs
dec
outs
outs
jb
popa
mov
popf
or
ds
arpl
fs
jb
fldenv
in
outs
addr16
and
dec
inc
xor
add
popa
pop
adc
imul
dec
iret
retf
push
mov
(bad)
push
jns
gs
push
dec
xchg
push
pop
fcmovnu
imul
mov
push
jo
outs
ret
out
xor
and
gs
ins
xor
lods
jnp
jne
arpl
gs
xor
std
ss
mov
ins
popa
jae
cmp
dec
or
addr16
out
or
outs
je
and
iret
mov
shl
sbb
and
gs
loopne
shr
adc
in
cmp
aas
outs
ins
adc
sub
aaa
or
jnp
sbb
push
push
push
movs
mov
push
mov
adc
sbb
adc
add
sub
addr16
es
and
gs
sbb
push
xor
out
dec
cmps
adc
fbstp
mov
sbb
sbb
inc
mov
arpl
and
out
mov
nop
arpl
mov
retf
pop
xchg
xor
inc
aad
test
adc
(bad)
sub
push
outs
ins
out
adc
(bad)
scas
in
jo
sbb
push
jae
pusha
(bad)
cmp
cmp
add
xchg
push
inc
inc
(bad)
mov
adc
dec
or
xor
pop
icebp
mov
sbb
imul
pop
es
jb
imul
loopne
js
leave
cmp
inc
add
lods
outs
clc
jbe
pop
aaa
clc
cmp
dec
push
dec
dec
push
cmp
inc
jo
jo
add
repz
jb
fild
les
fld
cmp
je
outs
popa
ins
mov
int3
outs
sbb
inc
bound
xchg
sbb
pop
cmp
je
inc
ins
outs
bound
fidiv
mov
sub
xchg
es
fs
mov
push
popa
pop
les
fisub
inc
dec
mov
pop
sub
ja
sub
movs
sbb
xchg
xlat
push
push
inc
dec
sbb
outs
or
data16
sbb
push
jae
imul
adc
jbe
xor
retf
aad
(bad)
daa
inc
push
inc
and
mov
dec
jne
bound
or
das
bound
inc
shr
jnp
add
and
or
add
movs
mov
push
mov
into
gs
xlat
xchg
fs
shr
ja
xchg
aaa
add
or
xor
arpl
push
push
dec
in
mov
icebp
je
jne
pushf
retf
out
jge
xchg
lods
sub
int
push
mov
jb
adc
sbb
add
or
dec
pop
fcmove
mov
jmp
push
sar
add
push
xchg
in
add
ret
shr
mov
jp
bound
push
xchg
lods
cld
lock
test
push
inc
pop
jne
data16
loop
and
dec
popa
arpl
scas
xchg
jl
(bad)
ror
in
xchg
dec
xor
adc
test
inc
cmp
outs
sbb
es
jg
and
or
jns
adc
call
add
xchg
bound
retf
push
fsub
lea
adc
imul
dec
fimul
imul
call
push
or
push
fiadd
inc
ins
imul
test
je
arpl
or
in
or
(bad)
jmp
cmp
js
je
js
dec
or
jg
daa
(bad)
es
cs
cmp
pop
shr
dec
inc
clc
push
push
inc
cdq
inc
mov
jmp
scas
fstp
cmps
test
mov
imul
inc
aam
dec
mov
and
add
and
retf
xor
sti
xor
add
and
fisub
mov
enter
inc
sub
outs
imul
push
jns
dec
dec
hlt
xchg
jb
mov
movs
mov
add
jl
cs
cmc
movs
jmp
push
jne
ins
(bad)
fisub
bound
stos
adc
test
sbb
pop
xor
in
pop
and
popa
jp
or
jmp
mov
std
xor
xor
dec
push
sub
out
jns
xchg
loopne
add
fs
pop
mov
int
stc
push
push
(bad)
sub
adc
mul
in
ins
pop
ja
jno
and
mov
bound
xor
rcl
xchg
inc
and
sub
push
es
xor
gs
enter
pop
ret
and
cmp
inc
bound
sbb
scas
jo
fbstp
pop
add
mov
adc
js
mov
or
cld
ret
shl
dec
cmp
inc
or
je
sbb
inc
pop
je
mov
cli
jmp
mov
push
xor
jnp
inc
and
add
ret
adc
or
into
repz
lock
sub
push
in
mov
dec
(bad)
imul
pop
push
outs
adc
sbb
inc
ins
addr16
mov
adc
ss
test
daa
sbb
inc
je
jbe
add
push
ins
addr16
(bad)
loopne
rcl
imul
loope
jo
mov
movs
and
cmp
push
out
ja
push
sbb
mov
fadd
mov
outs
hlt
mov
mov
inc
inc
add
js
jbe
std
rcl
outs
arpl
fstp
pop
sbb
dec
push
inc
arpl
or
push
ja
inc
add
jns
(bad)
push
pop
daa
shl
cli
add
ins
xchg
push
dec
fsub
test
sbb
and
and
fist
cmps
jmp
pop
dec
dec
inc
adc
push
imul
jl
jo
jmp
rcr
gs
ins
ins
fs
mov
pushf
or
int
xchg
rcl
xor
pop
cmp
jge
add
mov
sub
sbb
cmp
stos
stos
sti
enter
push
scas
cmp
lods
mov
pop
test
inc
outs
jne
dec
ror
cmp
inc
pop
sub
adc
fimul
xlat
rol
in
mov
pop
jnp
clc
add
dec
push
es
adc
ficom
outs
rol
cmp
dec
push
adc
scas
bound
test
cwde
popa
cmp
cdq
sbb
retf
dec
pop
inc
and
sahf
test
fld
inc
sbb
sbb
and
repz
push
out
arpl
pop
gs
nop
popa
jns
adc
outs
pusha
jno
loope
jne
imul
ret
loope
push
in
xchg
push
push
inc
adc
retf
test
jl
loope
outs
arpl
mov
xadd
or
imul
inc
dec
add
jp
lock
bound
cld
add
inc
es
sub
push
lds
dec
ins
lods
dec
ins
xor
inc
xor
in
inc
xor
add
or
clc
popa
push
inc
ins
cmp
(bad)
and
or
xor
add
add
cmps
lods
lahf
sbb
fnsave
movs
dec
jae
ss
add
push
jmp
or
pop
aaa
add
lea
outs
and
sbb
fcomi
mov
je
shr
add
jo
lods
inc
sbb
fs
push
fmul
cs
sub
inc
xor
inc
sbb
loop
pop
mov
xor
adc
push
mov
or
adc
xchg
push
pop
daa
sub
push
int
ins
ficom
outs
adc
dec
(bad)
push
fnsave
fnsave
sti
sub
push
push
inc
xchg
push
inc
clc
adc
adc
dec
data16
add
mov
data16
add
mov
push
or
push
das
push
loope
inc
push
inc
ins
int
and
sbb
movs
jo
push
popa
sbb
sub
pushf
push
dec
ins
adc
sbb
inc
in
jbe
sub
sbb
in
push
add
dec
push
cmp
add
por
sbb
or
add
gs
icebp
pop
cld
data16
mov
add
add
inc
ins
dec
popa
inc
pusha
inc
aaa
je
push
mov
inc
dec
push
adc
sahf
adc
or
pop
jns
mov
adc
pop
or
out
adc
adc
pop
add
or
adc
add
sub
fs
or
dec
lea
cmp
xlat
pop
jo
pop
adc
inc
dec
inc
push
adc
or
sub
xchg
stc
gs
push
fmul
pusha
shl
div
(bad)
cmc
or
dec
pop
gs
fldenv
mov
stos
dec
jmp
dec
dec
mov
dec
ins
or
push
cdq
mov
xor
push
sub
shr
je
outs
pop
pop
dec
adc
fcmovu
out
push
pop
or
adc
cmp
xor
mov
pop
das
pop
or
scas
pusha
or
lods
clc
mov
or
jae
pop
jo
ror
pusha
or
or
je
push
bound
ja
icebp
or
jae
mov
push
shl
xor
jne
test
cdq
or
inc
imul
pop
adc
inc
mov
popa
push
into
or
mov
ins
adc
push
dec
jbe
(bad)
test
dec
and
mov
jne
ret
or
or
pushf
and
or
and
jg
adc
push
add
iret
adc
hlt
sub
adc
dec
rol
or
lea
mov
push
push
cmp
enter
adc
mov
sbb
in
push
push
mov
ja
imul
popa
pop
gs
add
and
pop
in
and
sbb
cmps
and
mov
pop
mov
div
mov
gs
jge
xchg
add
popa
rol
adc
inc
in
mov
ins
outs
and
push
add
dec
add
or
leave
(bad)
fwait
xchg
adc
pop
or
sbb
rol
pop
mov
ins
sbb
or
scas
xchg
add
in
and
pop
or
cmp
mov
sbb
push
adc
push
jne
mov
sbb
sbb
fs
xor
add
push
imul
mov
test
mov
mov
or
jmp
sub
xor
jbe
cs
mov
mov
xor
sahf
adc
mov
xchg
pop
sbb
addr16
mov
movups
jmp
push
hlt
push
adc
je
test
movs
shr
add
jns
inc
xchg
cmp
mov
or
pop
das
push
xor
jb
imul
mov
or
push
push
cli
dec
cli
jae
cmovge
imul
and
in
mov
mov
adc
inc
pop
mov
sub
jne
test
dec
push
inc
pop
in
inc
addr16
in
add
inc
call
pop
dec
xor
inc
mov
or
enter
push
push
ins
inc
ins
ins
sub
sub
sub
cmp
lea
cmp
jb
addr16
add
cmp
stos
das
cmp
cmp
and
lahf
loopne
bound
and
and
xor
and
pop
outs
das
cmp
cmp
xor
and
das
xor
shl
sbb
adc
dec
sub
in
jg
jae
add
push
aaa
push
add
lds
scas
adc
mov
sub
test
test
js
mov
idiv
add
and
or
pop
push
not
test
ins
hlt
mov
aad
jno
cmp
or
pusha
retf
jnp
add
mov
outs
jae
mov
(bad)
movs
shl
scas
inc
shl
or
adc
jp
xchg
push
gs
fdivr
and
or
push
push
xchg
lods
jge
pop
adc
and
jbe
adc
push
adc
or
mov
adc
or
or
jecxz
sbb
test
push
cmp
or
sub
test
loope
mov
dec
jecxz
movs
in
fmul
sub
jnp
and
adc
inc
inc
jmp
inc
es
int3
push
or
add
js
or
pop
push
or
adc
adc
add
mov
inc
fadd
inc
sbb
or
add
std
push
sub
or
ss
fldenv
mov
data16
or
mov
xchg
or
add
fstp
xor
add
mov
xlat
call
xchg
xor
sub
inc
neg
fcmovnu
mov
jbe
mov
mov
inc
sahf
inc
add
pusha
out
int3
xchg
and
adc
xor
out
ins
sub
ss
imul
sahf
adc
sbb
aaa
or
xlat
dec
jb
push
sbb
add
addr16
les
and
xor
and
add
mov
and
es
mov
adc
push
add
call
outs
pusha
and
mov
pop
aam
in
push
xlat
jge
push
and
ror
mov
lock
cmp
or
cmp
cmp
push
add
ss
inc
repnz
inc
int3
xor
mov
cmp
jmp
in
jo
and
jg
je
fld
int3
fimul
push
loop
test
or
push
cmp
cdq
fld
and
push
pop
xor
mov
or
test
mov
inc
loop
sub
je
add
cmp
pop
and
outs
call
pusha
dec
sub
mov
adc
adc
ret
pusha
pusha
xchg
mov
jo
push
sbb
int3
fdivr
xchg
into
cmp
adc
mov
ret
cld
push
js
and
in
int3
ins
jo
mov
or
mov
push
or
sbb
and
sbb
in
xchg
jbe
push
ss
mov
mov
(bad)
adc
mov
loopne
ja
(bad)
cmp
sar
lsl
fadd
dec
out
and
xor
add
inc
push
je
fs
ds
or
xor
or
mov
into
add
mov
imul
and
or
jp
jnp
adc
and
out
cmp
and
sub
adc
push
add
inc
sbb
jg
jnp
popf
or
lods
inc
mov
push
repnz
mov
and
fsub
mov
and
and
fsubr
loop
cmps
cld
or
sbb
push
pop
mov
mov
adc
hlt
ficom
or
sub
pop
stos
mov
(bad)
out
ds
push
mov
je
mov
add
push
sbb
fcomp
add
lods
or
je
clc
or
push
cmp
jmp
pushf
fsub
adc
xor
mov
aam
lods
cmp
mov
out
xchg
rcl
in
int3
lds
fcomp
test
imul
ret
and
sbb
bound
jo
xchg
pushf
mov
mov
push
adc
push
cmp
fsubr
mov
retf
fsubr
into
leave
loop
cmp
imul
or
xchg
jae
or
sbb
out
fld
pop
add
sub
mov
cmp
mov
loope
bound
inc
cwde
add
shl
or
and
jb
adc
jbe
jmp
or
sub
push
pcmpgtd
xor
and
int3
mov
push
dec
iret
fild
dec
mov
jbe
shr
mov
add
div
rol
(bad)
jp
cmp
dec
enter
inc
(bad)
mov
rol
mov
xchg
out
mov
sahf
mov
jle
(bad)
jnp
jnp
sbb
jecxz
sbb
xchg
mov
in
inc
sar
add
(bad)
inc
jo
(bad)
loop
mov
xlat
or
movs
pop
dec
pusha
mov
push
push
fidiv
mov
add
pushf
cmp
loopne
outs
inc
push
mov
int3
jmp
xchg
fld
ss
hlt
mov
fdivr
and
shl
dec
pusha
pusha
aam
jmp
xor
and
into
into
push
(bad)
loopne
jle
jl
add
arpl
loope
into
(bad)
sub
in
mov
outs
jbe
sub
mov
mov
mov
xor
data16
fldpi
xor
out
pop
cdq
jo
xor
dec
add
inc
add
sub
dec
push
mov
add
fiadd
ins
(bad)
ins
xor
scas
pushf
mov
or
(bad)
jp
cs
(bad)
loopne
mov
mov
hlt
cmps
add
push
mov
or
loop
add
daa
sub
ret
sbb
retfw
and
xchg
cmp
mov
jb
xor
dec
push
pushw
pop
jge
js
mov
mov
int3
sub
push
mov
cli
jb
in
or
pusha
xor
fmul
jo
test
cmp
xchg
or
push
cli
bound
addr16
inc
lods
loopne
(bad)
mov
jp
sub
fsub
mul
xchg
mov
stos
push
sahf
sub
cmp
mov
sub
stos
repnz
add
repnz
mov
xchg
rcr
push
jbe
pop
gs
cmp
dec
sysret
pop
cs
lods
mov
into
sbb
(bad)
mov
pop
mov
retf
add
sahf
int3
fcomp
cmp
sbb
cmp
dec
xor
das
cmp
fisub
inc
inc
cwde
xchg
mov
ror
cmp
mov
ret
scas
mov
mov
call
lods
push
shl
rol
retf
add
sar
sub
jecxz
mov
and
test
sbb
repz
xchg
dec
inc
mov
push
out
pushf
push
out
mov
loope
lahf
sbb
add
cwde
dec
mov
loopne
clc
adc
push
aaa
jp
adc
movs
jmp
and
inc
inc
mov
bound
mov
ret
sbb
cmp
jne
jnp
popaw
mov
les
loope
mov
popf
dec
pusha
push
lds
test
jno
sbb
mov
(bad)
lock
xchg
push
adc
pusha
cmp
xor
add
mov
ror
pusha
xor
call
adc
and
fimul
call
mov
loop
pop
int
inc
xor
push
pop
jl
(bad)
mov
adc
mov
lds
add
loop
xchg
ret
xlat
(bad)
bound
aad
popa
test
(bad)
mov
sbb
ins
lock
dec
pop
xchg
ins
xor
ror
rol
(bad)
inc
int
pop
loop
push
and
imul
ror
fwait
mov
fnstenv
xchg
es
stos
add
jl
outs
out
pushf
xchg
xchg
pop
adc
xchg
add
bts
div
push
test
jae
rol
mov
cmp
sub
sbb
stos
mov
ret
outs
or
sbb
icebp
enter
add
xor
ror
mov
cmc
js
push
ss
cdq
cmp
jnp
xor
mov
jb
xchg
add
lods
(bad)
mov
nop
pop
cmp
ret
mov
and
mov
pushf
inc
pop
add
(bad)
imul
ja
cwde
mov
jbe
xor
jp
ret
in
loopne
call
sub
mov
push
push
jbe
xchg
sub
mov
mov
push
sub
aaa
push
pusha
jno
repnz
enter
outs
sbb
sbb
xor
push
push
pop
sub
dec
les
mov
sbb
xchg
fadd
push
add
mov
and
adc
nop
adc
jns
jo
push
mov
dec
add
mov
pusha
(bad)
adc
hlt
sbb
and
into
arpl
iret
inc
dec
fmul
cmp
adc
test
lods
jnp
xchg
sahf
push
fisttp
(bad)
rol
push
add
aaa
cmp
add
add
mov
mov
or
ror
pusha
sub
ins
ret
in
lea
inc
mov
test
cmps
lds
push
or
dec
retf
(bad)
cmps
ror
push
mov
mov
jo
sbb
mov
scas
hlt
jl
jnp
loope
imul
adc
and
cmp
inc
sub
fdiv
je
ja
xchg
or
push
jnp
sar
outs
jne
pusha
dec
sub
ds
into
sbb
sbb
and
test
cwde
add
aas
lods
cld
cmps
rcr
inc
js
or
les
lock
push
pop
das
sbb
aas
push
jo
mov
ret
push
aaa
jp
push
retf
and
adc
mov
sbb
cmp
out
scas
add
cmp
cwde
xor
data16
xchg
ret
adc
lods
loope
push
in
test
int3
inc
jo
outs
mov
or
cmp
popa
mov
jnp
pop
sub
pushf
sbb
push
inc
mov
xchg
push
mov
and
fsub
adc
cwde
jb
add
enter
sbb
mov
dec
cli
pop
inc
rcl
test
mov
aaa
lock
add
sub
mov
adc
pop
popa
or
fs
pusha
xor
test
inc
arpl
pusha
inc
jo
mov
add
retf
sub
je
fsubr
xchg
test
rol
and
push
loope
and
or
loopne
sub
mov
inc
adc
cs
addr16
ror
loopne
sahf
stos
mov
push
jo
sbb
movs
xchg
sbb
les
sbb
or
sub
sub
push
xchg
adc
fidiv
xor
sub
nop
mov
addr16
daa
sbb
or
test
push
xchg
sub
jp
popa
sbb
jbe
sub
xor
out
daa
cmp
pop
popf
hlt
xchg
repnz
xor
mov
pop
inc
ror
mov
and
mov
mov
mov
repnz
lods
out
mov
mul
sub
pop
jns
iret
loopne
test
aaa
ror
cmp
xchg
(bad)
jp
add
ja
movs
adc
in
push
fsub
push
xor
sar
call
ins
or
mov
ss
daa
xchg
les
in
mov
les
xchg
vmread
dec
ja
loop
fidivr
sub
push
cmps
pusha
das
into
ret
add
cmp
jge
cdq
cmp
pop
call
cmps
cwde
jno
or
sub
pop
pushf
ins
pop
sar
pushf
mov
les
pop
inc
sub
inc
mov
shl
xor
push
mov
cld
add
cmp
movs
adc
xor
inc
jne
(bad)
int3
hlt
fdivp
lods
sahf
js
loope
adc
leave
test
test
add
sahf
inc
scas
pop
pop
cmp
fwait
add
add
dec
popf
push
cmp
pushf
push
(bad)
dec
inc
mov
ja
xchg
pop
pushf
xchg
xchg
int3
push
cwde
stc
fwait
and
or
into
sbb
push
sbb
add
fstp
mov
mov
shr
add
into
dec
mov
rcl
mov
ror
sbb
sbb
loope
shl
inc
loopne
popf
cmc
sbb
fidiv
xor
and
jl
push
push
jmp
stos
or
cmp
push
mov
jo
repnz
jns
movs
cmc
add
cmp
add
or
add
sub
jmp
xchg
ins
jo
retf
into
hlt
in
jns
sbb
or
pop
sbb
jo
push
icebp
add
sub
sbb
adc
sbb
rol
dec
fstp
adc
cmp
in
into
sbb
aad
aad
cmp
add
imul
xlat
add
mov
add
sbb
pop
or
hlt
mov
shl
cmp
fisub
sar
in
push
sahf
js
or
cmp
mov
test
ret
inc
mov
ret
arpl
xor
dec
pop
xchg
adc
xchg
ret
inc
test
sub
js
int3
adc
cmp
add
push
lock
sbb
xchg
sahf
test
jmp
stos
xchg
add
or
bound
sbb
sar
mov
sub
fs
cmp
ins
bound
ret
fmul
daa
cmp
pop
cmovb
into
inc
ja
fs
adc
sbb
nop
xor
dec
pop
mov
popa
test
fsubr
jp
and
lods
xor
lea
mov
adc
out
ins
mov
test
mov
add
inc
push
push
cmp
fild
ret
(bad)
pusha
imul
xchg
hlt
sbb
cmp
and
hlt
jo
(bad)
fstp
push
into
jmp
inc
(bad)
adc
mov
and
ret
jbe
cmps
sbb
loope
push
jne
outs
or
shl
lods
and
inc
daa
pop
pop
call
jbe
xor
xchg
loope
jno
sbb
pop
xor
jae
pop
and
sub
das
pop
arpl
or
lock
outs
or
outs
call
xor
(bad)
pop
(bad)
mov
outs
jns
sbb
shl
dec
xor
aaa
xor
aaa
and
inc
rcl
pushf
jle
dec
popf
cmc
js
sub
imul
pop
mov
cmps
inc
and
(bad)
xor
ror
or
and
jmp
retf
imul
push
add
xchg
je
call
push
dec
pop
or
sahf
rcr
bndldx
enter
cmp
popf
loopne
movs
mov
sbb
pusha
mov
xor
fwait
add
sbb
and
sub
cmp
nop
or
rcr
loop
or
sahf
and
push
in
scas
call
adc
xchg
cmp
das
ss
arpl
add
fcomp
hlt
loop
sbb
mov
cwde
loopne
mov
jge
jno
out
and
mov
idiv
dec
je
nop
test
xor
(bad)
jnp
mov
movs
and
popf
mov
xor
sbb
fmul
cmp
pusha
xor
mov
jmp
into
push
dec
dec
sbb
add
pop
rcl
push
push
xchg
cmc
cmp
loopne
mov
push
cmp
sub
sub
ror
sahf
inc
scas
sahf
ror
inc
shl
mov
lods
nop
sbb
or
rol
cmp
add
cmp
mov
xor
add
sbb
les
lea
pop
or
xor
outs
mov
sbb
mov
callw
xor
dec
add
loope
jmp
sahf
shr
push
imul
adc
rcl
je
sub
data16
mov
push
or
xor
jo
lods
push
or
jo
addr16
call
add
leave
dec
xchg
scas
out
sbb
(bad)
loopne
in
push
loop
daa
jo
push
hlt
shr
mov
push
xor
or
loop
push
and
mov
rcl
lods
inc
shr
jne
xchg
out
push
pop
popf
xor
outs
xor
jns
(bad)
(bad)
or
push
rcl
mov
push
es
mov
test
stos
scas
xchg
mov
adc
sbb
jb
call
ret
jp
push
adc
push
div
fiadd
push
repnz
xchg
or
jge
and
lock
(bad)
mov
loope
mov
test
push
cmp
xor
cmp
mov
pusha
fucom
push
xchg
sbb
add
jmp
sbb
mov
out
xchg
sbb
sub
enter
or
push
pusha
bound
jl
mov
nop
enter
das
add
push
mov
js
popa
shr
mov
fdivrp
fsubr
jecxz
push
loopne
and
mov
loop
sub
inc
fs
or
or
pop
sub
xchg
or
or
jle
call
pushf
sub
int3
je
push
push
shl
in
adc
or
sbb
jp
sbb
cmp
add
loopne
mov
retf
sbb
inc
mov
push
sbb
jb
add
lods
push
push
shl
call
rcl
mov
pop
cmp
cmp
ja
mov
mov
fistp
js
int3
cmp
mov
push
push
sar
push
ja
ins
and
cmp
ficom
popa
test
ror
xchg
push
movs
loopne
xlat
inc
xchg
adc
pop
xchg
jecxz
sbb
(bad)
ins
mov
adc
add
fld
mov
sbb
daa
stos
sbb
sub
in
rcl
ins
mov
into
mov
push
pop
repnz
sbb
jo
retf
mov
pop
ss
test
xor
push
add
xchg
inc
sub
jb
dec
sub
or
mov
fcmovbe
mov
lea
out
imul
dec
rol
outs
jb
pusha
aam
add
push
push
or
and
pop
add
and
push
or
add
cmp
mov
(bad)
test
and
add
ret
sbb
pusha
loope
sbb
push
ret
jne
inc
cld
mov
xchg
or
bound
sub
xor
or
xchg
sbb
dec
pop
mov
out
call
cdq
add
retf
addr16
jae
int3
and
test
ins
push
push
mov
jbe
mov
or
cmp
sub
sub
xchg
mov
test
and
xchg
jmp
les
xchg
fadd
shl
jo
mov
fdiv
cmp
adc
adc
and
inc
es
pusha
fsub
dec
cmp
pop
add
std
dec
pop
call
mov
push
pop
(bad)
cmp
ror
mov
or
cmps
pushf
jbe
or
mov
cmp
xor
mov
push
or
pop
sub
push
loop
aaa
cmp
mov
sbb
(bad)
neg
pop
scas
cld
arpl
jecxz
lock
sub
in
test
pop
pop
and
je
and
ret
pop
inc
xor
cmp
jmp
jmp
pop
jp
add
loopne
rol
add
rcl
shl
(bad)
pop
xchg
les
retf
mov
jmp
jo
adc
loopne
push
cmps
dec
xchg
outs
xchg
fnsave
mov
aam
mov
inc
aaa
and
jmp
ret
adc
test
push
arpl
xchg
loopne
mov
loop
pop
adc
loop
add
jp
jo
sbb
push
lahf
lock
pop
xchg
adc
add
add
dec
push
loop
cmp
push
out
push
cwde
jbe
enter
xchg
pop
mov
inc
push
add
cmp
push
xlat
enter
add
mov
or
push
test
push
push
in
sub
lock
in
jno
xor
pop
or
push
sbb
imul
cmps
cmp
push
(bad)
aad
or
cs
test
shr
dec
inc
arpl
aaa
scas
lock
adc
dec
push
pop
ss
push
cmps
test
push
dec
retf
push
(bad)
aaa
pusha
outs
fdiv
mov
dec
fadd
lock
push
xor
arpl
ror
push
adc
arpl
addr16
loopne
add
jmp
imul
leave
inc
jo
mov
xor
or
add
push
stc
or
xor
jb
or
xor
fcom
push
iret
fmul
push
dec
fmul
dec
outs
or
(bad)
push
pop
fmul
fiadd
dec
(bad)
mov
xor
cmp
retf
dec
(bad)
xchg
and
and
jecxz
(bad)
fadd
outs
mov
js
adc
sbb
or
test
push
pop
das
cmp
mov
retf
shl
test
pushf
jne
push
cld
or
call
mov
mov
inc
xchg
out
inc
inc
loope
pop
icebp
jle
pop
mov
adc
dec
dec
popa
push
imul
sbb
cmp
int
mov
fmul
pop
(bad)
sbb
sbb
jb
lock
inc
sahf
push
xor
or
add
pop
push
inc
push
shl
dec
or
xor
adc
push
adc
int3
les
ss
jge
ret
cmc
xor
(bad)
jne
popf
icebp
cmp
pop
(bad)
loope
and
or
pushf
jge
xchg
push
push
mov
cmps
cmp
lods
xor
mov
ins
shl
push
stos
dec
mov
sbb
fdivr
cmp
inc
push
adc
xor
add
cmc
outs
data16
push
addr16
ja
push
add
pusha
bound
ror
sbb
xchg
(bad)
push
cmp
push
sbb
data16
fcomp
mov
mov
adc
cmp
or
push
sbb
xor
loopne
out
push
pop
mov
rol
add
sbb
mov
mov
out
daa
inc
pop
add
adc
or
sub
push
retf
outs
(bad)
mov
rol
mov
dec
ja
or
sbb
cmp
bound
js
mov
push
outs
adc
and
mov
and
fmul
mov
cmp
push
or
xor
hlt
xor
xor
xchg
add
ds
loopne
add
adc
and
sbb
out
cli
or
push
push
or
loope
fldenv
or
mov
cmp
test
js
fadd
mov
pop
cmp
loope
xor
popa
sub
adc
sub
jne
push
adc
je
mov
ret
pop
sbb
retf
xchg
add
jecxz
jnp
cmp
and
mov
sbb
repz
call
push
inc
sub
xchg
jmp
loopne
xor
in
mov
enter
popa
sahf
bnd
and
lods
xchg
cmp
scas
xchg
mov
sbb
cmp
nop
xor
sub
(bad)
cwde
push
push
(bad)
popf
add
clc
je
add
and
sbb
cmp
dec
sub
cdq
xchg
call
pushf
cmp
cmp
loop
mov
add
das
sub
and
jl
daa
(bad)
xchg
cmp
jne
or
outs
xor
push
not
or
je
sbb
add
and
ror
stos
mov
shl
push
inc
scas
sbb
jmp
test
mov
in
sub
jecxz
add
inc
in
hlt
adc
sub
popa
mov
sbb
imul
nop
mov
icebp
cmp
mov
sbb
imul
and
loopne
xchg
dec
ja
sbb
test
xchg
jp
pop
neg
jecxz
stos
dec
adc
push
add
aad
test
push
sbb
es
sub
cmp
dec
lds
dec
lea
retf
addr16
adc
fcomp
pop
popa
loope
addr16
sub
loopne
pop
sbb
mul
add
aad
push
xchg
xor
sub
xor
enter
mov
leave
cmp
mov
ret
popf
ds
dec
xchg
mov
mov
push
test
loope
inc
ja
mov
sbb
in
pop
dec
jmp
les
ret
mov
cmp
js
sbb
or
and
fcmovb
ret
sbb
bound
inc
add
sbb
sbb
sub
loope
and
scas
pushf
movs
jno
xor
js
dec
pop
retf
or
dec
fldenv
shr
js
xor
mov
xor
loopne
dec
inc
test
shl
pop
cmp
lea
rcl
jp
inc
data16
outs
cmp
ret
and
enter
loope
jecxz
jmp
les
add
mov
xlat
fs
add
jmp
mov
pop
adc
pop
pop
cmp
inc
pop
movs
in
popf
fucomp
xor
mov
movs
xchg
mov
nop
dec
stos
mov
xchg
inc
add
retf
sbb
cdq
dec
mov
add
cmp
cmp
in
add
out
loopne
scas
xor
jbe
push
add
push
jp
retf
pop
xor
bound
and
(bad)
pop
cld
push
cmp
aad
popa
mov
stos
xor
sbb
loope
and
lea
jbe
cmp
pop
js
fcmovnu
rol
arpl
and
and
bound
sbb
cmp
adc
jbe
inc
pop
cmp
jp
push
leave
push
push
mov
inc
add
push
dec
sbb
xchg
mov
imul
add
pop
jmp
xchg
(bad)
push
or
cwde
jmp
mov
sub
mov
xlat
je
ins
push
sub
hlt
nop
push
(bad)
and
or
sbb
or
cmp
pusha
push
push
(bad)
dec
jae
jo
cmp
mov
mov
pop
retf
mov
push
dec
sub
pusha
or
or
stc
in
mov
loopne
loopne
or
mov
xor
repnz
or
adc
cmp
or
test
push
inc
sbb
add
or
(bad)
aad
arpl
out
movs
push
aaa
aam
adc
xchg
loop
push
add
(bad)
aad
movs
jmp
mov
push
push
xor
rol
xchg
push
push
enter
sbb
and
push
in
push
movd
dec
scas
rol
fistp
jecxz
add
push
xor
sub
jnp
imul
mov
sbb
adc
mov
and
push
rol
cwde
dec
outs
sbb
call
cmp
cwde
cmps
pusha
adc
sub
dec
rcl
xor
jne
arpl
imul
xchg
cwde
dec
int3
pusha
shr
add
inc
pop
pop
adc
xchg
cmp
cmp
xchg
mov
xor
dec
(bad)
out
and
les
movs
mov
les
stc
jb
or
mov
popf
test
fcom
cs
mov
aam
xchg
adc
mov
xor
and
mov
jp
ret
jmp
jno
cmp
xchg
jmp
cmp
out
das
fst
cmp
mov
sbb
aad
pusha
mov
imul
adc
sbb
retf
adc
pop
pop
arpl
mov
and
inc
cmp
pop
mov
pop
cmp
sbb
sbb
jne
popa
scas
jmp
outs
mov
mov
fcmovu
dec
out
gs
dec
(bad)
mov
mov
cmp
push
scas
mov
cmp
ret
dec
(bad)
ror
addr16
or
(bad)
cmc
or
xor
cmp
or
popf
mov
mov
je
addr16
add
cmps
dec
jo
movs
lds
loopne
arpl
cmp
and
ficomp
or
lock
outs
or
hlt
ret
lahf
mov
xchg
ret
rcr
sub
cmp
xchg
push
into
xor
ins
out
hlt
xor
test
imul
or
dec
sbb
xchg
dec
sub
mov
sbb
pushf
cli
fdiv
shl
mov
dec
inc
mov
jo
dec
pop
jmp
xchg
loopne
inc
dec
mov
fmul
jmp
fldlg2
mov
xlat
cmp
jb
dec
xor
pop
ret
add
sub
fcomp
xchg
pusha
or
add
add
sbb
popf
lods
add
sbb
clc
and
test
inc
sar
test
pushf
xor
aam
mov
push
add
inc
or
or
stc
add
rol
pop
fs
mov
cmp
add
leave
sbb
loope
rcl
cmp
pushf
mov
jecxz
nop
aad
leave
sub
arpl
mov
and
fs
into
sbb
movs
mov
pop
out
dec
and
xor
add
in
xor
add
sbb
xchg
je
xor
nop
mov
dec
pop
jbe
xchg
dec
(bad)
adc
jno
in
inc
dec
or
loop
push
ds
pop
cwde
enter
into
(bad)
xchg
push
into
mov
push
xor
mov
xor
cmp
or
push
test
ret
mov
cwde
aad
jns
mov
pop
sbb
scas
jp
inc
lahf
out
add
or
sub
cmp
pop
ss
je
inc
add
cmp
js
fcomp
mov
aaa
dec
push
call
cmp
jl
xchg
add
into
js
and
shl
cmc
pop
fiadd
scas
ret
sub
add
fcomi
fwait
aas
bound
cmp
add
js
mov
mov
retf
ficom
pmullw
cmp
stc
add
test
hlt
adc
xlat
bound
sub
imul
push
rcr
mov
ret
sahf
popf
sbb
jp
fsub
push
pop
pop
pop
rcl
xlat
add
rcr
call
mov
jno
movs
mov
(bad)
ja
jo
inc
ins
movs
cmps
jb
xchg
cld
jp
out
mov
pushf
jne
xchg
cmp
sahf
test
push
dec
pop
ret
scas
aam
loop
sub
sub
add
or
popf
je
pop
gs
inc
sbb
add
mov
adc
fimul
mov
jae
cmp
xor
jp
mov
add
(bad)
sbb
or
ret
call
sbb
test
hlt
dec
mov
mov
cmp
add
sbb
jb
inc
sbb
push
push
mov
adc
movs
and
sub
cli
mov
adc
sub
aad
lock
pop
fs
ret
mov
jno
fld
add
ret
scas
pop
push
push
jge
fs
ret
and
push
fdiv
call
dec
ror
mov
pop
or
mov
pop
xchg
repz
popf
aam
jo
push
(bad)
pop
cmp
xchg
int3
push
sbb
shl
sbb
mov
pop
jp
or
lock
data16
popa
ffreep
pop
pop
repnz
jo
sbb
(bad)
hlt
xchg
les
sub
sbb
mov
hlt
es
(bad)
push
dec
mov
push
fiadd
sub
push
xchg
dec
lock
sbb
sub
sbb
inc
lods
dec
push
add
add
inc
mov
pusha
lea
das
xchg
fcom
add
ins
sti
jno
fs
dec
xchg
pop
dec
lds
js
and
ficom
mov
inc
fcom
cmp
push
les
movs
add
mov
add
or
dec
and
xchg
(bad)
(bad)
ror
enter
xor
pop
das
das
loopne
or
or
xor
push
xor
sub
push
mov
xchg
sbb
adc
test
pop
leave
sbb
sbb
mov
cwde
pop
pop
pop
push
push
rcr
in
loope
cli
mov
jns
mov
icebp
sbb
les
jns
(bad)
jle
das
arpl
bound
fs
sahf
add
xchg
adc
adc
push
mov
jo
adc
add
ins
and
jb
add
inc
sbb
add
ret
inc
mov
or
sbb
dec
mov
fstp
dec
dec
xchg
in
sub
xchg
pusha
nop
daa
mov
jbe
mov
xchg
mov
bound
jg
add
or
or
mov
mov
js
out
or
cmc
inc
push
cmp
js
dec
xor
out
mov
pop
inc
aam
mov
cmp
add
mov
push
push
push
inc
out
and
enter
outs
movs
cmp
in
jg
fs
loopne
cmp
mov
adc
push
loopne
mov
ror
stos
xlat
scas
add
jle
sbb
pop
sbb
add
shr
dec
sbb
mov
mov
test
sbb
pop
dec
rol
es
pusha
loope
loope
xchg
cmp
push
cmps
dec
sbb
aaa
lods
pushf
push
test
pusha
jo
test
(bad)
adc
fwait
push
xor
stos
fisttp
xor
cli
mov
je
aam
xor
fwait
push
and
fmul
fwait
imul
mov
jb
mov
cmp
sub
and
jp
bound
pop
xchg
(bad)
je
xchg
push
aaa
cmps
mov
je
mov
imul
addr16
sti
daa
sbb
and
into
mov
add
push
bound
imul
daa
call
xor
comiss
jns
lea
(bad)
cli
rcl
push
add
jb
cmp
sub
rol
mov
hlt
cli
rcr
bound
dec
xchg
stos
mov
adc
ret
xlat
dec
cwde
(bad)
dec
fsub
mov
and
jmp
push
dec
call
mov
push
adc
loopne
aam
jecxz
repnz
sub
pop
mov
daa
rcr
mov
test
retf
scas
mov
(bad)
pop
mov
adc
(bad)
cmp
popf
out
int3
clc
not
sub
pusha
mov
test
inc
pushf
pop
or
shr
add
cwde
cmp
loop
or
pop
jmp
mov
sub
and
loop
xchg
xchg
je
xchg
mov
or
test
xchg
(bad)
enter
adc
xor
xor
inc
(bad)
je
(bad)
jp
push
bnd
inc
sbb
or
lods
xor
jmp
nop
mov
mov
in
jmp
mov
cmp
jle
mov
sub
push
mov
push
sahf
(bad)
loopne
adc
xor
and
dec
sbb
sti
lock
xchg
xchg
push
mov
or
cmp
(bad)
or
outs
scas
adc
xlat
xchg
sbb
hlt
mov
add
das
pop
in
retf
push
mov
into
dec
mov
rol
xchg
pop
jp
test
loop
cmps
loope
adc
xchg
lods
mov
int3
push
call
jbe
in
adc
popf
xchg
xor
and
add
mov
adc
push
in
push
sbb
daa
je
cmps
pop
mov
jae
pop
mov
out
movs
inc
lock
or
or
fadd
cmc
lock
and
loop
fmul
outs
pushf
xchg
mov
or
xchg
pusha
cmc
shr
mov
scas
(bad)
jmp
inc
arpl
arpl
cmp
sbb
push
pop
pop
jb
inc
lea
xchg
je
mov
cmps
and
enter
movs
adc
and
pop
and
adc
test
pushf
fst
inc
push
div
test
push
sub
inc
sbb
add
sbb
add
xor
mov
pusha
inc
dec
bound
fstp
(bad)
pop
ret
push
xchg
xor
stc
ret
push
aaa
xchg
aam
sub
loope
lods
fisub
jno
push
inc
inc
push
push
xchg
pshufw
push
clc
popf
dec
or
add
push
sbb
movaps
fsubr
sub
in
xchg
rcr
jmp
ins
pop
xor
sbb
mov
loop
ror
jle
mov
cmp
pop
shl
adc
stc
ret
out
es
pop
pop
int3
sbb
mov
mov
adc
js
push
pop
sbb
push
xchg
dec
xor
ret
lea
movs
xor
inc
adc
out
inc
out
jl
cmp
cld
arpl
test
loopne
push
add
push
ret
call
(bad)
mov
mov
add
ret
sahf
mov
push
jp
ins
push
cmps
rcl
add
jmp
sbb
into
test
lods
daa
ins
xor
test
test
outs
or
movs
inc
(bad)
pop
loope
clc
aad
mov
adc
add
fisubr
sbb
cmp
fisubr
xchg
cmp
or
js
lock
adc
mov
int3
add
mov
hlt
pop
imul
(bad)
pusha
mov
mov
mov
sbb
jne
lods
pop
jb
retf
mov
mov
js
dec
or
xor
pop
(bad)
xor
xor
add
loop
and
ss
(bad)
lock
fsub
mov
pop
sbb
ins
movs
cmp
rol
or
ror
adc
cmp
push
cmp
add
dec
enter
inc
loop
mov
sub
jg
(bad)
loope
dec
sbb
hlt
(bad)
pop
aaa
les
mov
call
rol
adc
call
rcr
and
push
pop
dec
rol
cmp
mov
sub
out
or
xor
inc
push
inc
aam
push
jns
xor
retf
js
mov
jg
xor
push
push
pop
or
add
or
fwait
rol
(bad)
fcomp
add
xchg
daa
fisttp
movs
dec
mov
jmp
add
sbb
lods
push
fs
(bad)
lock
sub
mov
sbb
push
sbb
mov
and
jecxz
cmc
push
iret
and
call
push
pop
sbb
test
jo
xor
pop
not
or
adc
sbb
ins
in
push
adc
jo
adc
loop
rcl
or
sub
inc
stos
and
xor
push
add
das
jae
push
loopne
arpl
mov
push
jecxz
xchg
shr
into
push
dec
adc
mov
cmp
lods
repnz
js
cmc
shl
jle
pop
pop
cmp
sub
ret
add
ret
cmp
mov
add
sbb
test
mov
pop
jp
pop
popf
shl
pop
sbb
cmp
shl
jb
(bad)
pushf
xor
lods
not
dec
data16
dec
pop
int
in
jo
js
pop
and
add
loope
add
fcomp
dec
mov
xchg
or
rcl
jbe
jmp
cmp
sar
sub
fcomp
sub
pop
fidivr
ins
push
js
cmp
out
xor
shr
sub
shl
ret
push
movups
mov
setnp
sub
add
popf
in
stos
(bad)
push
xor
in
mov
test
sbb
imul
mov
out
loop
add
daa
mov
and
je
iret
mov
dec
mov
test
fld
push
push
add
sbb
dec
xchg
and
pop
packssdw
pop
ja
loope
and
ds
mov
pop
cmp
xchg
xchg
je
pop
xor
mov
bound
test
xchg
out
xchg
add
loop
aam
cli
gs
mov
fidiv
into
sahf
mov
inc
ret
mov
sub
dec
mov
adc
adc
mov
test
iret
popa
jecxz
nop
sbb
ret
mov
fmul
add
adc
push
shr
push
sub
sar
sbb
lods
push
das
addr16
loop
push
fndisi(8087
lods
xor
prefetch
add
stos
push
mov
jecxz
sahf
pop
cwde
jecxz
shl
fs
pushf
or
fmul
daa
je
adc
or
jp
sub
jne
push
or
pop
sahf
mov
int
stos
pop
ret
add
dec
pusha
cmp
cmp
xor
js
sub
sbb
pop
push
js
(bad)
mov
stos
jnp
bound
mov
push
cli
xchg
jmp
xchg
popf
outs
cmp
sbb
fsub
ins
jge
aad
jp
cmp
push
out
mul
xor
dec
adc
into
inc
iret
(bad)
push
add
addr16
imul
dec
add
dec
adc
out
cli
fisub
and
shl
add
mov
pop
pusha
jb
push
test
aad
push
dec
adc
sbb
lahf
push
push
mov
loope
push
int3
jb
sbb
mov
pusha
jo
add
mov
sub
test
(bad)
bound
rol
mov
push
xor
mov
loope
gs
shl
sahf
scas
pop
fadd
dec
mov
jo
cwde
add
inc
rcl
ret
mov
sub
or
jae
push
fs
mov
test
add
inc
inc
inc
rcr
mov
ss
addr16
and
sbb
add
pop
cmp
ret
ret
or
jbe
push
sbb
sbb
xchg
push
jg
pop
and
jno
jbe
call
push
adc
adc
fstp
lods
jne
jl
or
leave
or
imul
mov
add
pusha
mov
push
add
int3
in
test
idiv
ffree
sub
jecxz
cmc
xchg
rcr
xchg
movs
fld
or
pop
stos
ret
mov
dec
pusha
loope
and
inc
enter
fadd
push
test
stos
mov
or
sbb
and
neg
inc
loop
xor
dec
in
hlt
ss
xchg
push
adc
push
mov
out
jmp
inc
lods
xor
js
dec
shl
sbb
adc
pop
jp
adc
and
std
pop
out
inc
jb
push
push
adc
dec
push
push
mov
popa
xor
add
adc
xor
mov
add
jno
inc
jmp
movs
xchg
ficom
or
in
mov
cmp
jmp
(bad)
outs
push
ror
push
jb
je
bnd
adc
retf
ficomp
and
push
daa
mov
cmp
(bad)
or
and
lods
cmp
daa
adc
mov
or
hlt
xchg
(bad)
(bad)
loop
mov
shl
mov
dec
ins
aad
mov
mov
into
fdivr
daa
mov
out
pusha
push
add
je
scas
jo
loopne
ret
stc
push
adc
loope
mov
aaa
cmps
js
mov
jecxz
push
lods
shr
inc
sub
or
sbb
xchg
popa
retf
push
jmp
xor
dec
pop
jp
call
pop
inc
movs
cmp
pop
jecxz
xor
mov
mov
cmps
xor
add
ret
inc
inc
push
sbb
xchg
clc
ret
pop
pop
inc
or
movs
add
in
adc
nop
aad
ds
push
stos
xor
or
(bad)
xor
sub
out
sub
inc
leave
jecxz
xlat
pop
gs
in
hlt
adc
ds
ret
inc
dec
mov
and
fcomp
lds
xor
sbb
xchg
dec
adc
jo
dec
es
mov
and
ret
jmp
gs
push
pop
push
idiv
pop
repnz
and
sub
(bad)
mov
out
xor
shl
mov
sbb
sahf
mov
push
stos
call
leave
add
fstp
retf
jl
imul
out
loop
test
mov
xchg
inc
xchg
movs
test
sbb
outs
sahf
ret
jo
add
(bad)
aam
ret
ds
add
cdq
and
jne
cmp
cmp
daa
dec
adc
cmp
mov
retf
fistp
sahf
pop
pop
pop
lahf
(bad)
idiv
pusha
sub
aaa
add
cmps
xor
call
mov
or
ja
dec
adc
pop
sbb
xchg
jge
push
loope
pop
mov
inc
pop
ret
adc
ret
add
lock
movs
sar
mov
cmp
xlat
pusha
pop
or
clc
jnp
add
sub
mov
aam
ret
repnz
mov
sbb
inc
lods
nop
div
nop
sub
mov
xor
sbb
push
adc
dec
pop
push
std
addr16
enter
das
lock
adc
jne
pop
movs
xor
scas
and
or
sub
lods
mov
xchg
and
enter
xchg
into
fidivr
sahf
(bad)
aaa
xor
mov
les
sbb
xchg
repnz
push
add
mov
mov
fisttp
das
repnz
add
cmp
data16
iret
mov
add
or
test
inc
xchg
adc
add
div
bound
sub
ror
add
aaa
scas
and
imul
arpl
xchg
pushf
xchg
dec
push
xchg
lds
in
mov
jns
inc
fimul
mov
arpl
mov
add
sahf
pop
shl
sbb
lea
cmp
sbb
call
imul
mov
test
sbb
dec
pop
cmp
and
jnp
push
mov
sbb
pop
out
pop
inc
mov
pusha
push
mov
icebp
test
(bad)
iret
mov
xor
call
xchg
xchg
sub
cmp
jb
lock
xchg
mov
inc
pop
loope
or
pop
ret
push
fsub
loope
mov
inc
jo
cmp
mov
pushf
mov
enter
push
cmp
push
inc
pusha
ja
imul
inc
push
mov
or
js
xchg
nop
ss
push
push
rcr
cmps
shl
jns
aaa
ret
scas
and
test
retf
jge
mov
pop
xchg
mov
cs
int3
mov
xlat
loop
(bad)
lods
dec
pop
hlt
sbb
pop
cs
sar
add
sahf
mov
je
mov
cld
or
cmp
pushf
xchg
aad
out
mov
and
inc
mov
or
pop
cs
mov
sub
dec
pop
(bad)
leave
jp
es
ja
aam
loopne
cmp
adc
je
sub
ret
rcl
push
clc
lods
mov
mov
les
xor
leave
mov
popa
pop
adc
leave
mov
xchg
mov
int
lods
xchg
mov
mov
call
xor
in
into
arpl
inc
cmps
mov
dec
sbb
xchg
in
xchg
test
add
rol
sub
xchg
xor
xchg
add
movs
add
lock
shl
sub
mov
add
or
cmp
xlat
cmps
pushf
sahf
sar
lods
add
pop
mov
and
pop
ins
pop
dec
ja
add
adc
rcr
loopne
pop
jb
icebp
(bad)
adc
fs
loope
repz
ins
mov
or
sub
outs
cwde
mov
outs
pop
pop
and
gs
jno
xor
push
inc
and
cmps
shr
adc
inc
inc
pop
imul
aas
adc
or
fs
sar
xchg
jecxz
and
out
push
cmp
cs
or
sbb
pop
sbb
and
xor
jnp
xor
jo
fadd
(bad)
mov
mov
add
rcl
sahf
pop
add
push
xchg
and
scas
xchg
mov
test
jecxz
mov
movs
jae
(bad)
je
fsub
sbb
or
xchg
mov
into
mov
inc
inc
pop
aam
or
mov
paddusw
inc
pop
push
(bad)
loop
xchg
js
push
or
push
or
pop
or
bound
mov
pop
xor
add
pop
sub
je
dec
sub
into
ficomp
fmul
aas
inc
add
or
pop
xor
fcom
xor
mov
sahf
lock
movs
leave
push
jmp
xor
popa
or
std
or
pop
mov
inc
movs
add
pop
(bad)
fs
add
jo
sbb
push
adc
dec
cmp
lods
push
xor
cmps
inc
and
inc
sbb
call
in
and
mov
sub
pop
jmp
adc
fdivr
dec
sbb
mov
shl
ret
push
arpl
lods
mov
sbb
cmp
or
sbb
jnp
adc
mov
les
push
mov
add
push
cmps
add
sbb
ja
imul
dec
aam
adc
int3
push
mov
dec
fdiv
in
shl
ret
mov
fidivr
pop
mov
(bad)
ret
jne
sub
cmps
cmps
into
sub
add
add
loopne
sti
ret
loopne
fs
aas
cmp
dec
mov
lods
xlat
clc
fidivr
or
rcr
jge
je
or
ficom
in
xadd
xchg
shr
mov
xor
inc
loop
xchg
fidiv
out
push
into
mov
push
xchg
fcom
call
and
cmp
mov
push
and
mov
stos
mov
in
rcl
or
push
mul
xor
dec
retf
or
retf
push
(bad)
fdiv
cmps
xchg
cmp
sub
pop
shr
ja
sbb
adc
xor
pop
pop
rep
xor
push
xor
add
(bad)
lods
test
mov
mov
movq
dec
dec
cwde
cld
test
push
xchg
(bad)
pop
inc
xor
lods
outs
add
jb
imul
add
inc
add
(bad)
fmul
mov
rol
and
sub
mov
fld
cmp
pop
test
sar
mov
ss
and
adc
pusha
mov
sub
inc
push
adc
jb
aad
pop
inc
(bad)
repnz
loop
mov
jae
iret
and
mov
aas
js
push
lods
mov
inc
jo
pop
sub
imul
add
lods
rol
jmp
push
jno
cs
cmps
popf
push
ret
cmc
enter
push
and
(bad)
arpl
jns
(bad)
xor
stc
xchg
sbb
mov
xchg
sbb
mov
es
in
mov
sbb
push
pusha
xchg
sub
test
leave
mov
dec
sbb
xchg
mov
mov
adc
ror
shr
fadd
push
rcl
xor
pusha
sub
in
inc
popf
mov
and
or
cmp
or
fs
daa
addr16
mov
push
fsub
dec
sub
ret
inc
push
push
adc
shr
fmul
mov
or
inc
leave
rcl
jle
inc
loop
xor
imul
pop
lods
mov
ret
jmp
loopne
ret
sub
lods
test
fs
sbb
jmp
sbb
out
scas
add
mov
dec
je
ror
ja
xchg
sbb
test
sbb
jne
cmp
sar
ins
sub
idiv
sbb
mov
shl
sub
mov
mov
xor
scas
or
loop
push
repnz
call
adc
add
loopne
xchg
cmp
ret
push
fidiv
into
(bad)
pop
mov
mov
ret
or
cmp
and
clc
inc
loop
pop
ror
retf
test
loopne
(bad)
mov
cmp
ds
sbb
sub
es
les
ret
fadd
or
mov
jo
xor
lea
push
mov
xchg
xor
dec
xchg
aad
push
out
cmp
clc
jmp
mov
sar
xor
rol
test
adc
popf
mov
ror
call
rol
sbb
jo
shl
idiv
sbb
ret
and
cmp
adc
ret
inc
repz
mov
push
mov
push
popf
pop
mov
xor
ins
popa
xor
loop
and
xor
inc
push
fs
add
les
push
jo
cmp
rcl
adc
mov
add
xchg
ret
sub
ror
jo
xor
pop
imul
add
pushf
xor
rcr
mov
add
pop
in
sbb
sar
fmul
jl
jne
cmp
mov
mov
sub
jmp
and
pop
popa
test
sbb
ret
cmp
mov
mov
pusha
lea
nop
std
enter
cld
clc
nop
out
adc
add
arpl
adc
dec
outs
mov
xchg
mov
add
lea
mov
js
jmp
mov
cmp
sub
test
cli
mov
(bad)
xor
pop
sub
sbb
aam
sbb
mov
sbb
das
inc
xchg
and
aaa
sahf
bnd
retf
mov
jmp
test
rcr
and
mov
outs
push
mov
rcl
les
jecxz
mov
push
mov
xor
pushf
mov
push
add
add
jmp
lock
pop
mov
pop
inc
add
and
or
ret
fidivr
inc
ins
call
les
jns
(bad)
test
loop
gs
out
test
cmp
daa
popa
xor
(bad)
fidivr
adc
jo
(bad)
jle
or
ja
fsubr
add
inc
out
jnp
les
icebp
xor
mov
aad
push
dec
add
jmp
pop
dec
push
mov
mov
loope
int
mov
ins
mov
rcl
cmp
sbb
lods
mov
cmp
push
jp
mov
ror
rcl
faddp
cmp
mov
xchg
hlt
test
dec
pusha
jne
and
dec
xor
xor
fs
and
ret
mov
mov
ret
imul
xor
sub
adc
std
movs
(bad)
mov
mov
push
out
(bad)
in
bound
popa
sub
pop
cmp
jge
dec
sub
xor
jg
xor
mov
movs
shl
icebp
mov
imul
sub
fidivr
ss
shl
leave
(bad)
in
jo
test
test
les
das
jns
mov
fild
pop
mov
pop
into
pop
mov
bound
mov
add
cmp
xor
ret
fimul
call
fmul
pop
or
xor
hlt
test
jp
jmp
jecxz
neg
pop
imul
out
js
(bad)
loope
mov
push
sahf
sbb
jmp
dec
pushf
push
daa
fdiv
sbb
cmp
jnp
push
push
sbb
fdiv
(bad)
jbe
mov
pusha
fmul
pop
push
je
add
jo
mov
jmp
pop
jno
frstor
pop
clc
cli
idiv
dec
push
xchg
jae
(bad)
test
pop
stos
int3
sti
pop
or
cmp
pop
sbb
or
jo
cmp
scas
sub
xchg
cmp
mov
mov
(bad)
lock
push
xchg
jmp
or
dec
jo
lods
sbb
push
hlt
ds
xor
xchg
popa
scas
nop
sbb
ret
je
daa
leave
xchg
sbb
or
shr
inc
add
vaddps
data16
addr16
cwde
cmp
call
sub
push
pop
xchg
adc
int
jns
aad
ss
ret
add
ret
push
and
mov
mov
mov
inc
retf
imul
mov
stos
inc
mov
jbe
inc
push
test
outs
jne
rcr
or
xor
mov
or
das
pop
push
adc
mov
mov
add
inc
fiadd
into
jmp
dec
mov
mov
jo
jle
cmp
fcomp
dec
ror
mov
out
ret
scas
test
sub
pop
retf
mov
scas
mov
pop
sbb
sbb
je
cmp
cli
(bad)
pop
pop
or
loop
push
add
imul
rol
cmp
xor
xor
ss
and
sbb
stos
or
jae
daa
or
mov
mov
mov
mov
jmp
lock
out
call
mov
shl
fwait
sbb
jns
dec
js
(bad)
mov
xchg
adc
pop
jno
push
or
add
dec
or
fadd
addr16
aam
dec
bound
test
repnz
sub
sbb
xor
add
loopne
maskmovq
test
inc
sbb
adc
popf
fs
mov
(bad)
xor
je
jb
sub
cmp
mov
retf
pop
aam
and
into
imul
add
mov
(bad)
loopne
jmp
mov
fistp
dec
lea
dec
cmp
sbb
push
xor
or
fistp
test
adc
pop
xchg
push
popa
sub
scas
cmp
dec
fcom
mov
int3
push
jb
test
lods
(bad)
sahf
repnz
imul
jnp
cmp
mov
jmp
cmp
pop
loop
lahf
mov
jnp
mov
(bad)
xchg
lea
and
jp
movs
add
lods
(bad)
jl
push
xchg
pop
mov
adc
and
ja
sbb
dec
jns
mov
gs
xchg
mov
outs
or
sub
cmp
loope
add
sbb
xor
aam
dec
or
push
rol
and
or
add
inc
(bad)
mov
dec
leave
sar
mov
cmp
mov
retf
(bad)
loopne
mov
test
push
inc
sbb
pop
inc
into
xor
icebp
add
popa
icebp
icebp
sub
outs
fstp
loopne
or
bound
mov
aaa
dec
call
xchg
pop
call
push
test
xor
test
inc
add
xchg
in
xor
push
mov
loop
stos
dec
push
add
mov
in
xor
sahf
add
cs
push
imul
mov
test
mov
cmp
lods
cmc
es
mov
xchg
sbb
pop
leave
ror
push
push
pop
xor
push
pop
leave
inc
cmp
add
push
and
bound
push
call
dec
dec
ffree
sar
lods
xlat
(bad)
loopne
jb
fiadd
daa
fucom
mov
call
jl
adc
jmp
js
and
xchg
mov
aaa
push
pop
ss
cmp
mov
test
fidivr
loopne
sbb
fsubr
mov
add
push
push
mov
in
pushf
jns
mov
cmc
jnp
push
arpl
cmp
push
xchg
mov
lea
mov
xchg
int
test
in
lods
jmp
ret
or
push
(bad)
cmp
lahf
aad
mov
ins
add
je
loopne
jge
push
stos
daa
pop
cmp
cmp
xor
pop
inc
and
leave
or
or
movs
push
in
add
push
das
fimul
scas
jae
stos
xchg
mov
imul
add
inc
loop
sub
jp
xchg
push
mov
sbb
cmp
fcom
daa
sbb
leave
pop
xchg
xor
pop
jo
pushf
loopne
lock
dec
sub
mov
(bad)
and
and
push
daa
xchg
adc
cvtpi2ps
lds
lahf
sbb
inc
jns
sub
sub
sub
xchg
push
pop
lea
je
mov
cs
mov
push
sbb
cs
movs
rcl
lea
ins
inc
popf
pusha
loope
aad
mov
gs
loopne
imul
cmps
push
dec
jle
sbb
pushw
push
lods
jo
inc
out
adc
int3
push
push
push
and
mov
mov
sbb
dec
iret
popa
xor
jmp
sbb
cld
and
fadd
popa
pop
ja
cli
sbb
test
sbb
ds
out
pop
mov
push
jg
(bad)
inc
ja
and
xchg
aad
jmp
das
push
or
xchg
pop
pop
loope
lods
scas
aaa
xchg
retf
rol
xchg
jno
in
cmp
(bad)
or
popf
ss
popa
test
mov
test
or
dec
mov
jp
adc
mov
mov
xchg
push
in
or
or
dec
popf
push
mov
cmp
sub
mov
out
push
arpl
dec
jmp
mov
int3
fs
adc
loope
sar
repnz
sub
mov
xor
xor
cmp
push
adc
ror
adc
xor
pop
ret
pop
push
xor
or
add
les
sub
pop
jmp
sub
(bad)
out
and
or
popf
call
and
shl
xor
sbb
push
xor
or
cmp
jo
mov
and
out
adc
and
pop
outs
sub
push
pop
pop
bound
and
shld
mov
cmp
xor
rcl
add
xor
scas
in
push
jnp
or
imul
mov
loopne
stos
out
push
shl
jo
(bad)
popf
cmp
loop
ja
and
inc
fistp
jmp
jne
xchg
lds
idiv
adc
cmp
retf
mov
mov
mov
(bad)
call
xchg
cld
loop
sbb
fs
icebp
lods
lods
loopne
lea
lods
ret
or
mov
loopne
or
sub
ja
pop
push
dec
mov
or
xchg
faddp
add
js
mov
add
add
fmul
shl
pop
jb
(bad)
cmp
push
sbb
bound
data16
dec
popf
(bad)
outs
pop
cld
mov
psubsb
cmc
xchg
cmps
(bad)
dec
cmp
xor
add
(bad)
pop
pop
into
add
and
xor
fld
pop
test
retf
rcr
pop
pop
jl
sbb
pusha
xor
(bad)
jbe
enter
mov
push
add
pusha
test
mul
jno
cli
ret
shr
pop
fild
cs
inc
xchg
scas
xor
xchg
adc
jb
or
or
jo
addr16
lods
and
jne
loop
ds
nop
js
push
arpl
loope
sbb
dec
ret
jne
mov
inc
jns
add
vmovshdup
ror
add
loope
js
(bad)
(bad)
jmp
rol
sti
cmp
mov
cmp
or
fwait
add
ret
ret
xchg
fiadd
js
pop
lahf
adc
ret
daa
sub
imul
es
jbe
rol
cmp
retf
clc
mov
fadd
xor
jns
neg
sbb
pop
test
enter
retf
lods
popa
mov
leave
ror
popf
cmp
icebp
sahf
xlat
add
and
out
pop
fucomi
lea
mov
outs
mov
scas
aam
and
into
pop
daa
(bad)
arpl
test
test
mov
jno
or
mov
mov
ret
dec
ss
inc
test
mov
inc
mov
lods
inc
xchg
jo
aas
lock
popa
in
xor
pop
add
pop
loop
or
out
shl
hlt
cmp
add
pop
push
stos
jbe
or
in
mov
jl
retf
push
ret
sbb
shl
jle
mov
mov
fidivr
ret
outs
popf
mov
dec
jmp
inc
xchg
out
push
cmp
adc
dec
adc
mov
loopne
xchg
popf
(bad)
cld
mov
xchg
in
and
push
aad
es
cli
ss
fcom
push
hlt
inc
cld
inc
cmp
xchg
outs
test
cwde
scas
cmp
retf
dec
add
mov
dec
add
out
and
daa
dec
imul
pop
loopne
and
xor
ret
pusha
mov
pop
aaa
xchg
xchg
inc
add
jg
sbb
repz
push
jbe
dec
mov
das
push
loopne
out
push
inc
out
mov
mov
rcr
inc
scas
pusha
add
fcomp
and
cmp
push
jmp
cmps
mov
test
std
cmp
and
movs
outs
pop
adc
adc
loop
mov
adc
arpl
bound
sub
inc
int3
and
shl
mov
arpl
adc
dec
mov
cmp
jbe
out
fisttp
sbb
js
ret
cmp
fild
jb
cmp
push
jg
dec
pop
or
call
mov
lods
jg
loope
int3
add
sub
aam
mov
aam
sar
pop
add
cmp
lods
mov
jbe
ror
inc
xchg
sub
and
aad
jo
sbb
data16
push
rol
inc
arpl
push
test
mov
xchg
in
jmp
sbb
jle
xchg
mov
test
mov
sbb
je
das
jecxz
jo
out
enter
addr16
add
(bad)
sub
js
test
shl
lds
push
popf
(bad)
xchg
jnp
mov
mov
daa
jmp
xchg
enter
or
dec
pop
dec
loope
loopne
xor
shl
mov
push
fst
pop
dec
push
addr16
retf
shr
ret
arpl
addr16
jnp
lods
pop
das
ror
adc
xchg
xchg
or
cmps
mov
push
test
(bad)
cmp
inc
cmp
adc
rol
mov
mov
int3
adc
pop
pop
in
push
push
test
inc
add
mov
inc
loopne
sbb
inc
sub
sbb
push
sub
or
xor
dec
in
je
js
call
nop
xor
sbb
out
sbb
or
mov
dec
pop
adc
mov
mov
add
lea
lock
ror
fdiv
xchg
ret
retf
pop
jnp
push
(bad)
sbb
loope
lods
(bad)
es
js
or
nop
cmp
sub
(bad)
loopne
or
push
ror
pushf
add
(bad)
imul
sub
cmp
jo
or
daa
mov
lods
add
add
test
or
dec
adc
cmp
xchg
mov
xor
test
ins
push
out
in
rcl
cmp
mov
add
cmp
aaa
xchg
mov
(bad)
sbb
sahf
outs
dec
add
mov
leave
sbb
adc
loopne
ja
xchg
int3
add
and
adc
mov
and
loopne
jle
je
mov
lock
gs
repnz
int
out
aaa
loopne
cmp
daa
jae
mov
lea
push
or
mov
mov
call
and
js
push
and
out
xor
adc
into
les
sub
lock
test
mov
je
adc
adc
outs
fucomp
sbb
pop
add
in
clc
jb
jne
sub
push
enter
ret
test
mov
and
pusha
fiadd
cmp
cmp
cld
xor
imul
fcom
mov
arpl
cmp
inc
adc
pop
pop
enter
mov
call
sbb
fidiv
ja
add
or
dec
jbe
(bad)
cwde
or
js
test
dec
inc
push
push
retf
fisttp
out
jo
inc
push
or
idiv
loopne
adc
inc
lock
cmp
sbb
fsub
add
cld
repz
add
arpl
inc
ret
cmp
push
mov
and
dec
stos
mov
aam
aad
push
push
shr
cld
int3
add
jmp
jns
lods
or
outs
add
xor
into
push
outs
call
sbb
or
push
lods
adc
out
adc
jmp
repnz
js
adc
daa
dec
xchg
je
sbb
int3
hlt
or
pop
popa
jp
int3
mov
fdiv
cmp
adc
xor
and
xor
imul
mov
lods
push
adc
js
mov
loopne
mov
sbb
es
out
rcr
pop
js
push
dec
mov
fdiv
nop
adc
lahf
mov
jo
xchg
or
test
mov
(bad)
aad
dec
es
pushf
(bad)
sbb
ins
jl
mov
mov
mov
dec
lods
sub
ret
bound
int
xor
jbe
push
xor
(bad)
add
push
pop
sbb
loope
mov
test
jp
call
add
shl
dec
add
xor
es
jns
or
and
fldenv
call
dec
popa
inc
inc
add
ret
mov
mov
add
aad
push
fidiv
push
mov
shl
stos
xor
daa
add
mov
sbb
push
dec
inc
sar
arpl
cs
fstp
ret
xchg
push
inc
mov
or
enter
bound
push
cwde
dec
and
shr
jb
xchg
jge
or
inc
out
push
pop
cmp
inc
clc
cmp
(bad)
lock
and
inc
repnz
iret
add
jp
hlt
rcr
push
sub
or
fnstcw
adc
sahf
cmp
sahf
xlat
mov
test
xor
jp
mov
add
fs
cmc
xchg
xchg
xor
icebp
nop
outs
mov
fisttp
inc
inc
arpl
(bad)
js
sub
sub
stos
lahf
and
jne
rol
lods
popf
pop
outs
lea
loopne
pop
pop
pusha
cmp
clc
mov
mov
push
mov
push
mov
hlt
or
loopne
pop
sub
das
mov
xor
je
loope
cmp
ret
fucomp
mov
cmp
inc
cmovb
in
mov
jae
cmp
mov
pop
outs
popf
shl
retf
into
sbb
add
adc
aaa
movs
sub
or
je
adc
int3
jg
push
mov
hlt
rol
sub
dec
pop
sub
lods
mov
pop
sbb
sub
mov
enter
mov
jb
loopne
sub
sub
mov
movs
pushf
sub
pop
adc
sbb
push
ret
and
lods
sti
ss
inc
test
adc
stc
add
mov
adc
sbb
xlat
jmp
dec
out
jo
xchg
dec
pop
test
nop
fnstenv
and
pop
jmp
lods
or
retf
sbb
call
hlt
or
xor
add
sub
mov
(bad)
mov
add
adc
or
push
lahf
add
les
or
aad
pushf
shl
cmp
out
ret
cmps
dec
out
inc
lock
imul
movs
sbb
ret
loope
nop
xchg
stos
mov
xchg
dec
mov
pop
iret
call
cmps
push
(bad)
call
add
mov
cmp
inc
xchg
xchg
cmps
cmps
xchg
icebp
and
xor
int3
fs
inc
gs
jle
into
retf
idiv
or
add
lods
dec
test
cs
pop
inc
outs
mov
pop
pop
(bad)
xor
push
xchg
into
call
and
jo
and
pop
cmp
lods
lock
push
out
lock
ret
movs
xor
inc
add
push
js
sub
xchg
or
xchg
or
rcl
add
imul
xchg
and
arpl
retf
ret
imul
(bad)
mov
ins
mov
call
push
rol
adc
ret
add
sub
rol
or
adc
sub
add
inc
ret
xchg
das
(bad)
dec
repnz
xchg
ret
in
adc
js
je
dec
mov
push
inc
adc
rcr
adc
iret
fs
mov
and
dec
add
jo
mov
mov
pop
call
call
mov
loop
jns
xor
inc
loope
scas
xchg
sub
xchg
repnz
outs
sbb
add
pop
mul
les
ja
adc
xchg
fwait
or
daa
ror
test
add
pop
push
test
fdivr
fsubr
mov
push
push
fwait
push
out
sub
pop
es
test
cmp
sub
fs
lock
outs
xchg
popa
or
jno
cwde
mov
rcl
push
sub
pcmpeqb
aaa
xor
sub
(bad)
cmps
(bad)
retf
cmp
mov
sbb
xor
add
rol
jo
gs
icebp
fistp
add
jns
push
dec
mov
push
ret
sahf
repnz
jmp
fdivr
jle
cmp
xchg
(bad)
mov
fimul
loopne
xchg
mov
adc
repz
add
sub
xchg
inc
mov
sbb
leave
cli
dec
mov
popa
sub
mov
fcomp
jg
inc
inc
shr
cs
sub
or
int3
lds
push
mov
jmp
shl
ds
rol
dec
imul
nop
adc
jo
imul
ror
adc
inc
add
(bad)
outs
std
add
mov
dec
aaa
add
mov
pop
or
loop
pop
adc
into
leave
add
jns
jbe
sub
jecxz
and
jmp
jmp
js
push
cwde
or
retf
or
mov
je
fs
or
ins
and
add
pop
cmp
xchg
es
xchg
mov
fstp
sbb
mov
into
retf
mov
loopne
or
sbb
push
mov
jae
mov
ss
in
fs
pop
(bad)
cmp
jo
in
rol
aam
pop
cmp
mov
mov
or
pop
loope
pop
addr16
loopne
loopne
adc
xor
fcom
mov
and
jmp
shl
lock
and
mov
sbb
clc
out
xchg
sbb
push
addr16
sbb
add
popa
add
enter
dec
cmp
sbb
outs
add
adc
sbb
and
or
or
adc
add
and
inc
xor
arpl
call
push
push
(bad)
xor
xchg
lods
in
dec
mov
daa
jne
sub
fild
aam
cmp
popa
clc
ds
jo
or
xchg
jecxz
cwde
mov
mov
fadd
and
dec
mov
adc
ret
and
xor
mov
jnp
lods
sub
popa
test
or
sbb
js
pusha
cdq
movs
or
push
xchg
or
add
stos
sbb
test
sysret
loope
les
shl
lods
mov
xchg
sub
loopne
mov
pusha
and
adc
rol
out
aam
push
cmp
or
dec
dec
in
inc
shr
movs
daa
dec
rcr
and
into
pushf
popa
dec
cmc
les
sahf
jo
es
pop
das
jmp
je
mov
repz
sahf
sbb
mov
dec
pop
cmp
leave
fwait
aam
dec
cmp
aad
imul
shr
bound
dec
xchg
pop
xchg
imul
push
rcr
push
or
pop
or
jbe
add
dec
dec
jmp
rcr
push
mov
sbb
inc
lods
mov
jmp
push
fcmovne
jne
retf
sahf
push
mov
(bad)
mov
and
inc
jecxz
cmp
inc
mov
ret
sub
(bad)
mov
cmc
add
and
and
mov
jmp
lds
std
xchg
inc
das
jns
(bad)
fisubr
arpl
or
jbe
or
dec
loopne
sbb
mov
xor
add
in
mov
cmp
push
(bad)
fnsave
mov
push
rcl
imul
and
sub
loope
sbb
(bad)
mov
pop
sbb
fnsave
aam
xchg
dec
jb
xchg
outs
and
popa
rol
ret
pusha
xor
inc
js
hlt
fadd
mov
push
daa
sub
xchg
out
icebp
xor
xor
mov
jecxz
fs
movs
mov
jns
(bad)
ret
ret
xchg
icebp
push
or
imul
mov
dec
add
xor
pop
fist
cmp
test
gs
stc
cmp
rol
loop
sbb
test
out
push
mov
loopne
add
std
mov
cs
loopne
pop
or
adc
lods
nop
fs
sahf
mov
es
xchg
mov
movs
cwde
jnp
and
lock
push
es
mov
mov
jmp
sub
add
scas
and
inc
push
pop
mov
mov
mov
jo
test
cmp
pop
fsub
pushf
retf
or
xor
cmp
push
mov
dec
add
mov
jnp
fimul
mov
push
out
sbb
jge
imul
and
arpl
push
in
jne
push
or
jmp
loopne
ror
jne
or
xor
sub
pop
or
mov
das
arpl
mov
or
mov
mov
or
cmp
aam
stos
adc
xlat
add
jecxz
loopne
or
popf
pop
mov
pop
xchg
retf
out
mov
jle
fsubr
mov
cmp
inc
mov
jo
push
push
psubw
es
pop
or
in
and
in
jo
mov
xchg
and
mov
cld
adc
adc
adc
loop
pop
daa
sub
ja
xchg
scas
ds
sahf
add
inc
and
mov
xchg
sbb
xchg
lods
aad
add
mov
or
ja
ds
mov
sbb
repz
mov
dec
mov
stc
mov
das
ret
or
leave
xchg
push
addr16
outs
addr16
vmovsd
les
bound
jnp
and
sub
jo
pop
push
sbb
add
add
imul
hlt
mov
pusha
imul
xchg
inc
test
push
fbstp
loope
and
mov
inc
in
push
cmp
sbb
xor
imul
lods
jnp
xchg
jp
xor
jns
jb
hlt
cmp
mov
fmul
inc
packuswb
mov
xchg
jb
cdq
push
pop
and
into
scas
and
das
jmp
sahf
xor
les
add
dec
jp
xor
inc
shl
inc
fnstsw
pop
test
jle
mov
leave
dec
aaa
or
sub
sub
xor
pop
je
aam
mov
ja
out
cmp
cmp
jno
or
rol
mov
stos
xchg
rcl
retf
jns
sbb
jmp
cwde
or
push
sub
dec
sub
push
sar
xchg
mov
mov
popf
cmp
push
inc
mov
and
mov
enter
cmp
test
inc
mov
out
repz
popa
sbb
addr16
mov
js
jno
les
cs
adc
nop
cmp
pushf
inc
maskmovq
push
dec
scas
cmp
mov
cmp
pusha
ret
jl
adc
push
sub
adc
daa
push
mov
sub
aaa
push
int
lock
sbb
jae
cmp
loopne
or
sub
lahf
retf
imul
mul
les
push
lods
mov
sbb
call
lods
inc
xchg
xlat
jno
shr
call
inc
xor
sub
push
sbb
cmp
retf
mov
adc
add
aas
cmp
fs
xor
xchg
or
in
sub
sub
push
push
add
loop
movs
out
or
push
adc
push
pop
inc
adc
sbb
retf
jmp
dec
jmp
lods
xchg
jle
addr16
jp
pusha
inc
mov
push
rcr
push
xchg
cld
inc
jmp
(bad)
out
pop
ror
das
rol
and
push
jp
push
push
add
sbb
repnz
cmp
cmc
jge
adc
inc
cmp
out
adc
fadd
add
xchg
pop
popa
dec
sbb
and
dec
shl
ret
loope
bound
pop
jo
fst
push
les
push
retf
popa
dec
cmp
add
lock
call
in
sbb
push
and
test
push
(bad)
mov
(bad)
mov
mov
xor
cmps
xchg
add
adc
xor
in
pop
xchg
add
lock
ret
adc
jle
pop
call
sub
cmp
js
das
jns
ror
push
add
loope
xchg
sub
aad
loop
push
mov
push
sbb
popa
or
in
movs
inc
sbb
test
fsubr
arpl
adc
mov
aaa
mov
pushf
sbb
inc
push
or
lods
mov
xor
add
adc
xor
or
not
ret
lock
xchg
faddp
jmp
adc
(bad)
cmc
mov
imul
fdiv
shl
ret
ret
add
pop
and
pop
mov
js
add
or
cwde
and
popf
add
mov
leave
out
jle
shl
int3
cmp
jns
cmps
mov
leave
pop
pop
outs
sub
cmp
rol
icebp
xchg
fadd
sbb
pop
in
add
pusha
pop
icebp
xchg
xchg
and
xchg
xchg
xchg
adc
ja
enter
imul
or
inc
or
js
or
inc
pop
popf
mov
jo
cmp
sahf
out
push
cmp
jmp
loop
daa
fadd
mov
xchg
xlat
jecxz
outs
or
pop
push
js
jmp
inc
loop
mov
sub
mov
pop
loope
mov
arpl
jle
inc
push
jb
loopne
xor
test
mov
mov
(bad)
or
jb
lock
outs
xchg
gs
jp
test
inc
mov
loopne
aad
adc
mov
and
ret
xor
sti
(bad)
adc
fdivr
jnp
mov
add
jecxz
mov
cmc
hlt
mov
mov
xor
test
outs
pushf
cli
or
jb
outs
(bad)
mov
sbb
into
cmp
sbb
rol
loopne
mov
(bad)
and
js
imul
cs
dec
and
arpl
inc
add
cli
ret
inc
repnz
dec
lds
dec
sbb
jmp
adc
push
lock
cmp
cmp
or
xchg
push
push
add
xchg
add
dec
add
outs
lods
repz
ficomp
outs
(bad)
retf
push
mov
xor
and
arpl
inc
fisttp
mov
jae
into
leave
retf
add
lods
test
into
pop
sbb
in
mov
mov
lods
xchg
push
mov
stos
ret
fwait
lock
adc
test
or
and
add
into
xchg
daa
jo
sub
fldcw
ss
sbb
cmp
pop
jg
sbb
movs
xor
add
sbb
sub
ss
add
aaa
xor
xchg
push
js
jo
test
add
frstpm(287
stos
or
aam
fbstp
pop
das
push
enter
lea
mov
adc
add
fsub
push
add
loope
pop
push
call
cmp
mov
adc
fimul
std
adc
cmp
xor
ror
mov
xor
sub
dec
loope
shr
inc
add
popf
dec
into
bound
aad
xor
push
cmps
adc
add
shr
mov
push
add
pop
sar
sub
mov
retf
cmps
push
cmp
cmp
out
pushf
xchg
inc
push
pop
arpl
retf
push
(bad)
mov
adc
xor
loope
retf
jno
jb
cmp
(bad)
lea
in
cdq
xchg
hlt
xchg
mov
mov
or
mov
sahf
jo
cmp
push
fcomp
jne
ret
jecxz
ins
mov
xor
sub
and
cmc
cmp
pop
lea
push
call
out
jo
scas
pusha
into
sbb
clc
mov
ffreep
pop
sbb
scas
int
mov
loop
dec
enter
ins
ror
mov
dec
fadd
outs
or
sub
call
loopne
push
aad
xor
jl
sbb
or
cmp
inc
push
lods
ins
xor
arpl
das
jmp
(bad)
adc
cmp
mov
in
aaa
pop
pusha
retf
inc
jo
outs
pop
push
outs
and
lahf
mov
js
push
cmps
sub
movs
push
inc
mov
out
iret
mov
test
mov
push
sahf
cmp
and
ret
sub
ja
xor
sub
dec
stos
scas
not
adc
adc
sahf
add
mov
xchg
nop
dec
adc
dec
lods
pusha
daa
cmp
and
sub
cmp
shl
imul
xchg
cld
dec
xor
or
(bad)
jo
mov
hlt
mov
gs
or
add
or
cmp
outs
enter
popf
sbb
mov
adc
retf
jmp
and
add
jl
jb
xor
xor
into
out
mov
push
jbe
fiadd
cmp
ins
(bad)
cmp
push
das
dec
test
(bad)
cmp
cmp
out
inc
mov
jp
push
push
ja
add
rol
ret
or
and
enter
mov
add
je
add
push
pop
xor
fnsave
mov
push
(bad)
pop
mov
jo
and
and
mov
test
and
mov
or
nop
adc
pop
dec
loop
or
xchg
mov
iret
pop
bound
cmps
mov
cmp
scas
mov
and
retf
and
or
jbe
jp
add
sbb
popa
mov
or
pop
outs
cmp
jne
xor
pop
fiadd
cmp
xchg
push
xchg
pop
sbb
inc
adc
sbb
inc
mov
sbb
loopne
cwde
push
dec
add
mov
cmc
dec
mov
sar
(bad)
mov
jns
cmp
lds
xlat
jmp
mov
mov
dec
out
bound
xchg
(bad)
mov
dec
les
ja
sbb
les
cmp
rcl
test
xlat
enter
out
dec
nop
js
dec
mov
retf
xchg
sub
jp
mov
dec
push
leave
loop
push
das
fsubr
push
mov
mov
pop
sub
add
fidivr
sbb
es
sub
cmp
sahf
inc
fdivr
xchg
sbb
cmps
fxch
xor
loope
push
or
es
retf
nop
jb
or
sub
ror
mov
xor
ja
sbb
and
rcl
and
mov
sbb
js
xor
pop
ret
dec
pop
jmp
mov
jp
and
mov
retf
xor
cmp
push
fidiv
xchg
scas
mov
in
sahf
xchg
adc
daa
add
cmp
jns
(bad)
push
mov
dec
nop
stos
adc
pop
fdiv
dec
push
stos
dec
jmp
xor
sti
adc
sbb
xor
inc
icebp
mov
(bad)
jg
xchg
mov
pop
fst
neg
xor
push
mov
jnp
fstp
push
movs
popa
ins
mov
call
add
movs
mov
sahf
aam
stos
push
pop
jmp
(bad)
cdq
int3
fistp
retf
mov
mov
ja
sbb
or
add
test
js
push
les
js
cmp
or
pushf
add
inc
jnp
inc
xchg
add
push
inc
mov
js
mov
sbb
popa
pop
jnp
stos
and
lods
adc
in
adc
inc
fs
aad
or
cld
int
push
xor
or
pop
cmp
popf
js
into
cmp
fidiv
add
adc
add
arpl
fwait
pop
dec
sbb
dec
dec
cmp
sbb
sbb
push
cmp
ror
bswap
mov
xor
mov
jno
push
js
inc
mov
or
inc
sbb
sbb
ja
mov
or
lea
popa
and
jo
sub
fptan
xchg
push
jne
scas
xchg
xchg
cmp
loopne
hlt
dec
imul
and
icebp
xchg
imul
dec
cmp
pop
push
adc
sub
add
or
jl
sbb
mov
test
xor
inc
adc
addr16
cwde
xor
xor
mov
fcom
sbb
add
or
(bad)
mov
int3
call
add
and
cmps
ins
push
xor
into
adc
xchg
mov
out
jb
arpl
or
sbb
out
addr16
pusha
and
inc
into
xchg
mov
jno
sar
imul
loop
jp
mov
push
jbe
sub
push
xchg
xchg
pop
scas
movs
inc
loope
mov
ror
or
xor
xchg
mov
sahf
outs
inc
adc
imul
gs
push
push
mov
jo
jg
sbb
out
jp
loop
dec
and
lds
sahf
jp
call
imul
test
push
out
inc
and
add
loope
xchg
cwde
mov
add
jb
pop
jne
cmps
cmp
pop
fst
jmp
add
pop
fcom
pop
add
push
loopne
adc
inc
push
jge
push
out
dec
pop
xor
inc
jmp
inc
les
or
push
aaa
lock
and
jno
mov
inc
into
push
adc
addr16
repz
add
ror
push
add
data16
(bad)
mov
sbb
fst
and
jg
jp
add
mov
and
add
(bad)
jo
pop
popa
xor
add
pushf
mov
mov
nop
add
push
cmps
sub
call
and
adc
add
jmp
lods
fs
pop
mov
iret
add
sbb
into
sub
out
or
xor
or
call
nop
cmp
outs
and
xor
push
imul
test
cli
test
enter
jbe
(bad)
(bad)
adc
cmp
pop
mov
ds
ret
xlat
les
cmp
jo
sbb
lahf
push
xor
mov
lods
lods
rol
add
mov
(bad)
(bad)
mov
cmp
mov
loop
cmp
adc
xor
loop
inc
retf
xor
cmps
outs
hlt
cmp
xchg
dec
mov
ins
xor
and
inc
jp
jmp
js
and
fld
fld
into
shl
xchg
into
push
in
cmc
add
push
in
pop
imul
jmp
add
loope
pop
(bad)
lods
pop
dec
push
and
sar
pop
nop
adc
xor
out
jl
or
xor
sub
push
(bad)
cmp
pop
repz
aad
pop
xor
lds
mov
sub
sysret
inc
arpl
dec
mov
out
out
add
sbb
jo
mov
xor
push
out
enter
mov
retf
cmp
into
mov
or
dec
ret
or
in
jb
cmp
inc
pop
sub
cmps
sbb
push
ja
jmp
das
movs
mov
push
or
icebp
and
add
add
je
gs
into
retf
push
jg
inc
cld
fimul
rcr
xchg
sbb
bound
add
cli
scas
into
retf
je
or
push
call
mov
mov
punpckldq
je
scas
sbb
cmp
js
icebp
inc
mov
xchg
pushf
and
pop
(bad)
mov
stos
pop
ret
pop
push
push
xor
into
or
xlat
dec
stos
pushf
into
cdq
out
mov
add
mov
sbb
sbb
xor
out
sub
mov
jl
mov
sub
jl
outs
mov
ret
mov
fdivr
enter
les
ja
mov
xchg
inc
loope
xchg
movs
sbb
das
sub
ret
icebp
mov
adc
out
test
or
mov
mov
and
xor
cmp
ss
lods
xlat
rcr
rol
jne
mov
repnz
or
lds
jo
sar
je
and
cmp
xchg
(bad)
loop
xor
push
pop
loopne
push
mov
and
xchg
adc
nop
push
and
or
imul
add
int
pop
pop
movs
adc
and
cmp
in
cmp
cmp
jmp
repnz
js
cmp
and
lea
rol
push
jbe
pushf
cli
stc
cwde
xor
pusha
loope
pop
stos
adc
xor
sahf
loopne
out
add
lock
xor
mov
jns
cld
push
popf
xchg
jo
enter
mov
push
movs
sub
lock
pop
icebp
cmp
or
sub
or
mov
repz
pop
lock
adc
dec
add
lods
shl
sbb
lahf
inc
cld
ret
inc
outs
cmc
add
xchg
ror
lahf
call
jno
mov
xor
out
popa
add
into
retf
mov
test
ret
jge
dec
or
inc
dec
enter
imul
pushf
jne
js
pop
jb
and
sub
cmps
jecxz
das
jecxz
cmp
mov
in
sbb
cmp
sbb
pop
(bad)
pop
rcr
sar
jp
xor
test
or
icebp
imul
cmp
mov
ret
push
pop
sub
dec
xchg
pop
xor
adc
cmps
(bad)
mov
scas
xor
test
fwait
jl
xchg
jo
xchg
xor
push
faddp
add
push
add
and
xchg
or
mov
mov
push
mov
adc
and
push
push
hlt
or
aam
mov
ret
cmp
push
(bad)
push
fiadd
test
mov
mov
add
jp
popa
sub
xchg
test
xchg
lock
retf
fidivr
push
inc
or
jmp
add
or
jecxz
pop
sbb
(bad)
lock
pop
popa
pusha
xchg
mov
out
pusha
call
jns
repz
clc
jo
jecxz
and
icebp
sbb
hlt
pop
xchg
or
icebp
aaa
(bad)
push
mov
push
fmul
cli
fnstcw
jmp
leave
adc
jo
xor
sbb
pop
add
add
test
dec
mov
sbb
test
add
gs
push
into
movs
bound
add
cmp
cmp
jns
leave
mov
jnp
adc
xor
sub
cmp
add
mov
(bad)
and
ret
mov
fisttp
xor
xor
jmp
cmp
add
mov
jns
sbb
and
in
sbb
test
dec
xor
xor
into
lods
push
cmp
pop
pop
push
outs
jo
mov
retf
dec
adc
sbb
xchg
(bad)
pushf
jnp
add
jge
shr
test
cmp
fimul
stos
int
add
enter
arpl
adc
jns
hlt
mov
shr
and
cli
push
cmp
pop
sbb
loopne
stos
xor
mov
jo
push
adc
dec
scas
test
pop
xchg
sar
or
sti
repnz
push
or
pop
dec
js
fwait
mov
sbb
inc
rol
sbb
sbb
jmp
cdq
mov
cld
add
lods
icebp
push
mov
inc
xchg
mov
push
popf
dec
js
ss
lds
ret
push
or
int
popa
and
mov
and
and
popa
mov
mov
(bad)
and
pusha
scas
out
in
push
daa
cmp
pop
mov
xor
loop
js
js
arpl
jg
cwde
aaa
sbb
sub
jge
jmp
add
imul
nop
xchg
xor
push
je
add
sbb
adc
push
push
out
inc
fsub
cmps
jo
cmp
cmp
call
jp
les
pop
sbb
int
cmp
popf
icebp
(bad)
pop
sbb
cli
push
(bad)
or
and
cdq
test
cs
ds
jnp
loop
sbb
inc
bound
nop
ins
pop
cmp
mov
mov
mov
or
dec
pop
bound
ret
adc
arpl
arpl
je
cmps
test
push
push
add
adc
cdq
fidivr
xor
retf
retf
lock
xchg
(bad)
gs
sbb
adc
fwait
cmp
or
or
xchg
sti
jo
das
popa
outs
ror
or
cmp
or
pop
fistp
ins
mov
push
into
jb
repnz
push
mov
ins
rcl
mov
mov
pop
rcr
add
xor
jo
in
dec
jbe
hlt
out
and
dec
into
aam
loope
and
aad
adc
push
ror
aaa
cmp
jmp
jb
mov
cmp
mov
xchg
lods
fisub
mov
push
adc
sub
jge
fsub
ds
jnp
jo
les
sbb
push
fdiv
xor
mov
sbb
cmp
or
and
xchg
lods
je
ret
stos
pop
mov
cld
pop
cvtpi2ps
in
dec
mov
mov
push
mov
inc
and
out
push
hlt
test
enter
loopne
lods
test
cmp
les
cmps
cmp
inc
cmp
pop
ret
or
retf
mov
cmp
xchg
test
add
adc
movs
cmp
lahf
add
fst
push
push
(bad)
mov
and
out
xlat
rol
js
rol
loope
pop
pop
push
call
add
inc
outs
loopne
xchg
inc
mov
dec
pop
mov
sub
sub
into
ret
clc
mov
inc
jg
scas
rcl
push
shl
jge
dec
scas
mov
jo
cwde
sbb
sbb
mov
scas
pop
es
push
hlt
and
xor
push
pop
jb
pop
sbb
cmp
in
jg
leave
inc
lock
or
loopne
inc
mov
out
loop
stos
xchg
cmp
and
sbb
out
pushf
push
dec
jae
mov
sbb
cs
add
rcr
pop
and
pop
and
mov
retf
dec
sub
(bad)
sub
push
inc
or
add
les
cmp
cmp
pusha
mov
xor
inc
leave
ret
and
mov
lock
pop
shl
and
bound
(bad)
cmp
cmp
add
scas
std
xchg
pusha
xchg
jmp
sbb
sub
cli
mov
mov
inc
jnp
jmp
lods
mov
aad
or
jge
lods
ficomp
(bad)
test
mov
sub
adc
dec
cmps
cld
daa
dec
ficomp
or
pushf
push
mov
loope
and
test
xor
dec
cmp
dec
outs
loopne
mov
mov
loopne
or
(bad)
pop
push
inc
mov
test
push
dec
push
xor
cmp
or
cmp
sbb
inc
popa
sub
sub
lods
pop
enter
shl
xor
fmul
jmp
push
cwde
dec
mov
sahf
shr
outs
pusha
jae
(bad)
nop
cmp
push
shl
xor
scas
int
or
out
hlt
mov
inc
xchg
jo
xchg
cmps
mov
cmp
push
or
xchg
pop
fs
aad
inc
ret
inc
sahf
xlat
fucomi
ret
sbb
loopne
cmp
or
loopne
cmp
inc
jmp
pop
push
and
test
sub
xlat
adc
cmps
xlat
pushf
and
jecxz
xchg
sub
mov
jns
dec
inc
leave
dec
(bad)
icebp
aas
adc
sub
add
outs
or
pop
sbb
enter
cwde
xchg
cmps
pop
inc
add
or
aam
jecxz
inc
xchg
pop
xchg
retf
push
and
jns
inc
shr
cli
sbb
addr16
js
rcl
pop
sbb
sbb
aam
js
push
jle
ret
cmp
pop
add
jb
ja
stos
xchg
inc
cmps
rcr
adc
(bad)
loope
cmp
stos
sbb
adc
adc
(bad)
icebp
mov
or
push
mov
add
inc
xor
loope
in
in
or
pop
xchg
das
loope
or
cmc
adc
inc
fst
mov
push
push
pop
ret
jp
adc
xor
pop
and
mov
cld
inc
or
into
add
cmps
sub
push
rcl
test
sbb
dec
imul
(bad)
or
jge
and
xchg
(bad)
jns
ds
sti
loope
(bad)
adc
adc
push
mov
push
daa
inc
mov
nop
ins
sbb
(bad)
adc
pop
js
jno
fistp
or
sub
pop
push
or
movs
in
inc
adc
ret
fwait
xchg
test
xchg
sbb
(bad)
imul
or
icebp
(bad)
xchg
mov
xor
sub
loop
push
cmp
jnp
sub
add
pop
das
lods
into
repnz
and
ret
add
and
inc
sti
ins
or
ret
sahf
sub
mov
and
in
sub
imul
repnz
mov
sbb
inc
fst
cs
test
lods
mov
sahf
mov
sbb
mov
xor
test
mov
fdivr
cdq
jns
daa
add
jge
or
push
loope
mov
sub
pop
xchg
int
or
xchg
jmp
jmp
shl
out
push
or
and
push
scas
int
add
sbb
nop
mov
into
dec
sbb
rcr
jae
enter
js
popa
call
daa
(bad)
dec
xor
adc
mov
into
pop
ret
cmp
loope
rcl
pop
inc
popf
sbb
inc
cmp
inc
add
in
pop
js
pop
jmp
outs
sbb
sbb
pop
mov
cmp
daa
hlt
and
sub
js
retf
outs
add
adc
fs
sar
and
cmp
out
cmps
mov
mov
ret
jb
mov
mov
into
sbb
mov
mov
lock
es
sub
cmp
push
pop
mov
pusha
out
xor
mov
mov
and
jns
movs
add
mov
sub
cmp
xchg
aaa
mov
sbb
jno
lahf
loope
sub
sahf
mov
cmp
ins
add
gs
xchg
xchg
and
loopne
movs
adc
(bad)
pop
cmps
adc
ja
sub
scas
loopne
(bad)
loope
inc
jae
fiadd
je
(bad)
sbb
jp
sub
add
xor
add
or
mov
test
cli
rcr
adc
and
or
pop
retf
aaa
fisub
jo
push
mov
(bad)
or
or
sbb
in
pop
lods
add
push
push
into
in
pop
sbb
mov
ins
ret
jns
js
pop
add
(bad)
dec
sbb
add
xchg
pop
and
mov
or
sub
cmp
jl
xor
jp
outs
test
push
(bad)
out
mov
(bad)
jmp
ins
cmp
xchg
outs
and
outs
es
pop
push
(bad)
imul
cmp
push
popa
ja
sbb
rol
pusha
imul
jg
push
daa
jecxz
dec
mov
mov
jecxz
push
mov
jle
or
mul
aaa
and
fcom
push
addr16
xchg
add
mov
mov
arpl
add
push
hlt
xchg
rol
add
mov
mov
movs
test
je
jecxz
inc
xchg
movs
ins
cmp
xchg
cld
mov
xor
imul
cmps
sbb
adc
xchg
pop
test
sbb
into
xchg
(bad)
adc
jb
xor
push
stc
pusha
sub
xchg
mov
add
jne
mov
cmps
adc
xchg
mov
sbb
pushf
fidivr
push
add
adc
xor
leave
pop
lods
inc
dec
loopne
hlt
push
stos
imul
jmp
nop
les
gs
es
jbe
sbb
repnz
mov
lods
and
push
inc
mov
cmp
es
lds
nop
push
lods
cmp
dec
sub
cdq
mov
or
fcom
loope
xor
ret
jno
add
or
and
mov
mov
sbb
addr16
add
mov
push
mov
pop
ror
xchg
push
pop
rcr
mov
retf
dec
or
(bad)
sbb
lea
sbb
ret
cmp
test
(bad)
pop
pop
or
sub
retf
outs
wrmsr
js
loopne
cmps
mov
xlat
or
sbb
push
mov
pop
lock
sub
xchg
or
(bad)
mov
sub
xor
jo
repnz
xchg
push
repnz
lods
ins
mov
push
fstp
mov
lods
icebp
jb
fcomp
inc
rcr
mov
cwde
jmp
(bad)
sbb
outs
pushf
xchg
movs
bts
fdivr
jmp
xchg
dec
xchg
stos
scas
jb
lock
popa
ret
push
jbe
dec
jo
pop
add
imul
inc
dec
xchg
pop
(bad)
gs
xor
call
test
inc
rcl
cmp
jo
adc
or
loop
out
fcomp
pop
inc
fidivr
inc
daa
inc
cmp
push
ret
popa
mov
sub
hlt
out
(bad)
add
mov
sub
xor
pusha
jo
xchg
cmp
push
jb
inc
fcomp
xchg
sub
mov
and
jmp
sahf
sti
pusha
(bad)
mov
inc
mov
xor
push
dec
mul
and
test
jmp
cmp
sbb
jle
jae
xchg
cmp
rcl
xchg
or
pop
sub
stc
mov
push
jp
js
and
stc
mov
and
fld
ror
xchg
mov
enter
or
loopne
outs
sub
cmp
pusha
add
pop
sbb
mov
xor
sbb
jecxz
cmc
mov
adc
int3
add
lock
add
cmp
and
pushf
mov
aam
xchg
in
pop
mov
mov
out
jae
pusha
ins
mov
mov
inc
cmp
scas
sub
scas
add
pop
retf
mov
jg
(bad)
or
push
shl
sbb
or
cmps
sbb
mov
mov
and
mov
mov
xchg
out
mov
jae
dec
inc
sub
push
jp
aas
push
add
xchg
xchg
fisub
iret
sbb
outs
fwait
retf
mov
cmp
fs
cwde
sub
jno
and
jno
shr
push
xchg
cld
mov
jmp
retf
ret
sub
add
call
xor
jmp
sbb
dec
ror
cli
cmps
push
movs
test
dec
adc
not
mov
jno
cmp
jecxz
lock
add
rol
push
shl
(bad)
pop
enter
sbb
push
and
in
xor
mov
(bad)
cmp
test
jbe
or
das
cmps
mov
lods
add
jle
push
xlat
mov
pushf
mov
jp
mov
popa
add
push
enter
fs
pop
lods
mov
sub
mov
ret
call
scas
and
push
mov
gs
inc
or
call
add
or
pop
mov
inc
cmp
inc
nop
ss
cld
pop
arpl
push
addr16
enter
push
pushf
bound
inc
(bad)
into
in
adc
sbb
mov
loope
or
and
js
lock
push
arpl
(bad)
mov
inc
cmp
loopne
sbb
pop
popf
sbb
out
sub
add
or
and
dec
mov
aad
pop
mov
bound
jne
inc
lds
inc
outs
sub
xchg
(bad)
pop
popa
not
test
cwde
ja
leave
or
imul
shl
retf
xchg
ret
cmp
add
sbb
mov
gs
cmp
sub
scas
pushf
ja
and
retf
int3
movs
lds
ja
jb
inc
jno
xor
jne
pushf
cdq
xchg
adc
adc
push
add
or
push
inc
jl
xor
adc
or
sbb
inc
bound
adc
in
retf
pop
ins
push
clc
or
and
mov
cmp
and
and
pop
jmp
add
push
and
scas
out
dec
rol
retf
dec
inc
jb
mov
mov
xchg
mov
pusha
je
test
mov
pop
mov
movs
mov
fidiv
cmp
inc
jge
hlt
dec
stos
arpl
mov
ds
cli
fimul
bound
scas
test
mov
mov
cmp
ja
jmp
iret
and
pop
movs
and
cmp
shl
sbb
pop
push
cmp
sbb
outs
add
xor
cmpxchg
jne
arpl
dec
jmp
iret
loopne
cmps
and
ss
xchg
imul
sahf
sub
ja
imul
mov
adc
outs
(bad)
cmp
(bad)
sub
xor
jmp
push
(bad)
add
sar
cmps
dec
ret
add
lock
sbb
jl
sbb
pop
imul
rcr
push
dec
sub
cmp
add
sub
fist
rol
enter
jb
in
mov
rol
adc
mov
push
jne
xchg
jb
loope
adc
shr
inc
rcl
or
xchg
fld
and
popa
ja
or
or
xchg
outs
jp
cmp
mov
pop
pusha
or
out
push
movs
xchg
push
add
int3
(bad)
bound
xor
fsub
and
test
xchg
inc
add
dec
cmps
loope
jns
call
mov
test
push
shr
jns
or
dec
sub
cli
arpl
loopne
jo
lea
cmp
cs
mov
push
push
sbb
jle
cmp
pshufw
inc
cmp
in
not
(bad)
jb
bound
scas
loopne
adc
movs
xchg
xlat
jle
enter
leave
xor
pop
out
call
xchg
sbb
sub
fstp
in
jmp
and
xor
not
adc
sbb
xchg
mov
mov
rcl
cs
es
in
adc
xor
sbb
adc
popa
mov
(bad)
test
sbb
cwde
in
lods
mov
xor
nop
mov
mov
enter
add
addr16
mov
add
add
jmp
movs
inc
psubsw
lods
add
mov
in
js
repz
or
and
adc
aam
sub
push
mov
adc
nop
xchg
xor
or
fwait
push
mov
and
(bad)
and
inc
xchg
xchg
dec
pop
xchg
outs
push
hlt
mov
dec
ins
pop
xor
adc
leave
fstp
pop
mov
push
sub
pushf
icebp
and
sbb
loopne
addr16
mov
adc
mov
ror
or
jb
fst
(bad)
call
push
xchg
jno
mov
xor
sub
dec
or
fstp
adc
movs
hlt
cmp
xchg
mov
test
cmp
lods
push
aam
jne
ret
add
nop
lock
(bad)
jmp
hlt
jbe
icebp
ds
fcomp
movs
in
xor
cmp
jo
out
jecxz
movs
or
push
scas
pop
call
ja
cmp
retf
(bad)
fadd
pop
or
out
push
arpl
dec
rol
lods
mov
sub
test
sti
cmp
xor
inc
addr16
mov
xor
enter
push
jmp
pop
inc
adc
ret
push
cdq
cs
xor
mov
jnp
sahf
mov
or
cli
adc
lds
add
test
sar
fcomp
in
ret
xchg
or
sub
into
les
xlat
sti
xor
ins
fs
inc
jne
inc
or
leave
retf
xor
cmp
adc
push
mov
dec
xor
sub
test
test
arpl
adc
test
push
in
loope
mov
cmp
sbb
mov
jg
sahf
arpl
mov
cli
cmp
pop
cmp
push
inc
pop
lahf
inc
cmp
aaa
xor
test
dec
call
xchg
(bad)
repnz
out
or
and
mov
mov
(bad)
jne
push
das
sbb
jb
cmp
fsub
sbb
fist
pop
arpl
pop
dec
lods
in
lods
pop
xor
adc
sbb
repnz
push
sahf
xor
fild
add
mov
inc
jg
adc
setns
pop
js
adc
lds
dec
mov
stos
dec
sub
in
and
push
fsub
cdq
pop
popa
loopne
(bad)
shl
sti
jns
in
popa
aam
fisttp
pop
enter
ret
mov
mov
fs
jge
dec
jmp
fsub
sub
cmp
push
por
sub
mov
pusha
mov
mov
popa
dec
sbb
dec
add
add
mov
loopne
in
pop
scas
jo
mov
popa
bound
jge
xlat
inc
push
ins
pusha
test
addr16
call
xor
cld
int3
inc
push
pusha
jge
inc
or
xchg
loopne
popa
imul
daa
retf
lock
pushf
sbb
sub
ins
sbb
dec
lods
mov
bound
pop
pop
and
inc
les
imul
pop
sbb
inc
xchg
fs
cmps
lods
and
xchg
jno
sub
xchg
jecxz
add
and
inc
cdq
repnz
loope
jp
sub
and
lods
cld
mov
ja
add
or
movs
add
inc
cmp
cmc
les
pushf
sub
xor
popa
icebp
add
jno
cmp
mov
xor
test
and
and
fwait
ja
or
push
mov
dec
nop
dec
or
add
xchg
xor
adc
add
jne
sbb
or
or
add
add
xlat
out
and
rcr
add
shl
popa
mov
pusha
or
adc
push
xchg
mov
(bad)
loop
sbb
es
out
loopne
scas
in
and
arpl
xor
and
cmp
loopne
ins
pop
pushf
sbb
dec
pop
xchg
adc
push
imul
adc
mov
pop
push
scas
pop
add
add
daa
mov
xor
sar
cmp
mov
jmp
in
ret
rol
outs
in
xchg
cmc
clc
adc
sub
mov
jmp
mov
arpl
jnp
in
adc
xchg
push
cmp
in
or
rcl
push
xor
push
cmp
shr
cdq
fsub
xchg
dec
adc
cdq
popa
and
pop
cmp
dec
cmp
push
mov
inc
sbb
loope
in
int3
dec
das
(bad)
jmp
loopne
clc
xor
ja
push
pushf
sbb
mov
add
add
adc
in
loopne
mov
mov
ins
in
and
mov
sub
push
imul
inc
cmp
pop
retf
xor
fadd
pop
scas
jo
xor
and
pop
cmp
xchg
shl
add
movs
fcom
jle
(bad)
and
outs
adc
cmc
gs
cmps
pusha
jne
xchg
sbb
xchg
sub
aad
ret
sbb
cmps
jne
loope
loopne
das
test
test
push
sbb
repz
je
mov
adc
xchg
push
ins
and
ret
mov
add
cmp
stos
cmp
pop
pusha
test
mov
and
xchg
inc
pop
loope
dec
pushf
sar
mov
not
cmp
push
mov
and
xchg
mov
sbb
jp
cmp
push
lods
scas
dec
jno
dec
jmp
mov
ret
rcr
or
loope
push
mov
rcr
lea
dec
adc
jne
mov
dec
aam
rcl
ret
sbb
dec
mov
mov
sbb
pop
(bad)
pop
aaa
mov
mov
ret
xor
push
jo
ret
enter
retf
scas
cmp
jecxz
add
bound
sbb
jbe
xchg
and
leave
jl
ja
(bad)
sar
hlt
or
push
xor
fiadd
jle
push
mov
daa
ret
out
inc
cmp
clc
stos
ret
add
test
cmps
lock
jmp
out
xor
pop
inc
xchg
outs
mov
stos
aas
popa
ins
mov
cmp
loopne
int
jne
dec
fld
and
push
ss
aaa
jne
js
push
jo
or
xchg
sbb
sar
call
pushf
xchg
cdq
mov
push
mov
ret
sub
dec
test
hlt
outs
aaa
mov
jmp
and
(bad)
ret
or
jge
jmp
sub
rcr
ror
pop
pop
lea
adc
lea
cmp
repnz
pusha
ins
ret
outs
icebp
mov
or
lods
aaa
mov
sbb
call
xor
repnz
sbb
fwait
cmp
add
xor
xor
mov
mov
push
stos
inc
cmp
nop
xlat
ss
dec
inc
pop
dec
sbb
jno
mov
mov
sub
sbb
enter
pop
mov
adc
xchg
add
cmp
bound
jecxz
jae
jle
cmp
jno
in
inc
loopne
mov
mov
or
push
jo
dec
mov
push
dec
rol
add
jl
jl
inc
(bad)
xor
aaa
xor
aaa
or
xor
rcr
jmp
and
ret
rcl
call
(bad)
mov
push
jb
mov
lock
push
clc
inc
cmp
nop
or
jmp
lods
or
mov
inc
into
sbb
jle
nop/reserved
pusha
jmp
stos
sub
cmp
data16
adc
jl
jecxz
dec
js
xchg
in
rcr
dec
retf
cli
inc
sbb
xchg
push
mov
aaa
imul
and
sbb
add
inc
jo
sub
push
and
lods
jne
mov
adc
int3
ret
add
xor
pushf
loope
push
mov
or
fdiv
cmps
aas
add
mov
mov
ja
fcomp
sbb
loope
jo
mov
stos
sbb
rol
test
inc
pop
push
add
bound
adc
js
fld
out
pop
pusha
imul
xchg
or
outs
add
cwde
ins
xchg
inc
add
dec
sbb
sub
fst
push
out
and
mov
xor
das
adc
rcl
mov
xchg
inc
add
xor
and
loopne
iret
or
out
ret
inc
aam
mov
jo
popf
jb
mov
pop
jne
push
int3
sbb
xor
jge
sub
cli
dec
add
rol
cmp
pop
icebp
popa
or
xchg
rcr
fwait
(bad)
lea
nop
sahf
mov
loop
dec
sub
adc
dec
stc
hlt
xor
add
lea
xchg
mov
test
pop
pop
pop
add
icebp
ret
mov
cmp
call
inc
dec
and
sbb
(bad)
call
jo
pushf
movs
add
lods
cdq
pop
pop
sbb
mov
retf
mov
sbb
mov
pushf
sbb
add
jge
pop
fiadd
popf
shr
xchg
loop
and
xchg
fs
jno
dec
fnstenv
jne
dec
movs
dec
xor
jno
mov
inc
js
sbb
add
jp
pop
cmps
xor
sbb
jp
(bad)
rcl
lock
(bad)
popf
and
adc
jp
jo
add
cmp
pop
test
test
pop
push
add
lsl
stc
xlat
sar
in
(bad)
je
aaa
xor
arpl
jmp
mov
cmp
scas
and
jo
movs
push
mov
add
dec
std
or
push
add
or
xor
test
les
dec
retf
inc
mov
ins
inc
test
push
loop
jp
loopne
out
sub
sar
push
cwde
test
push
out
popa
sub
gs
scas
jle
dec
dec
adc
(bad)
push
mov
fimul
mov
jb
ret
and
add
jo
(bad)
pop
(bad)
jg
or
std
and
repz
ins
call
sbb
cmp
jnp
push
cmp
and
or
lods
gs
(bad)
shl
daa
push
js
addr16
lock
cmp
cmp
add
push
ss
inc
pop
push
push
mov
shl
or
popf
sub
or
sbb
aas
xchg
sar
call
sbb
and
jo
dec
out
sub
adc
or
int3
scas
or
push
fst
outs
xchg
push
or
or
pop
popf
mov
and
pushf
pop
add
pop
or
and
ins
sub
(bad)
push
imul
nop
add
sbb
add
je
and
sbb
js
in
sub
or
fiadd
sbb
in
pop
hlt
jno
jl
or
pop
inc
ror
cmc
mov
or
or
push
pusha
mov
lods
mov
(bad)
pop
push
lock
loopne
jmp
js
neg
ds
xchg
xor
cdq
(bad)
jmp
aam
cmp
sbb
ins
pop
cmps
mov
test
retf
(bad)
pop
push
out
loopne
imul
push
es
cmp
push
push
mov
or
aad
add
lahf
cs
or
mov
xchg
push
pop
cmp
jmp
les
mov
dec
mov
fadd
test
gs
in
sub
add
xlat
cmp
xchg
adc
retf
mov
pop
retf
fs
fbstp
adc
jmp
adc
sbb
cmc
and
outs
test
(bad)
clc
xchg
not
scas
inc
arpl
mov
rcr
bound
loop
add
push
add
in
out
xor
push
or
daa
inc
xchg
inc
fld
xchg
pop
mov
xchg
add
pop
popa
xlat
js
push
mov
xchg
loopne
push
inc
ret
add
add
pop
das
mov
das
js
adc
push
movs
mov
xor
inc
jl
push
inc
hlt
adc
(bad)
jmp
xchg
bnd
mov
pop
cwde
scas
or
jbe
in
lock
adc
cmp
aaa
cmps
cmp
into
add
movs
scas
mov
sub
pusha
sub
repnz
fdivr
cmp
ins
lock
cmp
xchg
jo
cmp
and
adc
ficom
pop
add
test
loope
retf
jge
xchg
fmulp
fild
jecxz
pop
inc
jge
push
sbb
jmp
imul
sub
out
cmp
in
cwde
cmp
cli
xchg
pusha
push
add
mov
sbb
sub
es
cmp
and
dec
stc
add
and
neg
dec
inc
pop
outs
pushf
jmp
mov
push
ret
sub
add
xchg
in
repnz
das
cmp
scas
sub
sbb
push
jmp
(bad)
add
ss
out
or
push
cmp
nop
mov
call
sub
loopne
dec
cmp
cmp
loopne
ror
imul
bound
jp
pop
fist
imul
mov
dec
mov
xchg
add
adc
into
loopne
das
mov
dec
jo
jecxz
movs
sbb
(bad)
shr
lock
out
inc
ficom
jle
dec
cmp
jns
cli
adc
cmp
nop
xchg
mov
mov
or
hlt
fwait
adc
bound
nop
or
imul
aad
add
mov
sbb
sub
sbb
addr16
sbb
imul
add
add
xchg
cmp
mov
gs
pop
mov
imul
or
mov
sbb
jb
cwde
jb
aam
inc
pop
mov
dec
and
out
fiadd
or
or
ja
dec
dec
shl
mov
and
push
pop
cmp
aam
mov
loope
cmp
or
cwde
mov
fstp
fsubr
(bad)
ss
(bad)
push
daa
push
call
adc
and
sub
or
stos
mov
dec
cmp
cmp
syscall
ror
pop
call
movs
sub
loopne
adc
cmps
add
movs
fiadd
pop
mov
lock
pushf
mov
int3
xor
fldcw
cmp
ret
jmp
ror
sub
rcr
xchg
cmp
loopne
push
inc
xchg
test
sar
idiv
xor
mov
data16
into
mov
cmp
push
enter
mov
lods
xor
jno
cmp
inc
bound
nop
test
sbb
outs
jecxz
stos
adc
or
call
push
xor
sub
jo
arpl
pop
dec
rol
mov
ret
ret
pop
inc
or
das
or
shl
xchg
or
sbb
std
test
adc
dec
sub
push
pushf
add
jo
scas
not
cdq
cli
sub
dec
push
cmp
pop
sar
and
js
jnp
test
mov
jmp
jbe
es
sbb
pop
jmp
jnp
or
jecxz
sbb
pusha
add
add
xchg
push
js
sub
ret
test
push
addr16
int3
cs
sbb
xor
adc
inc
pop
mov
les
rol
ret
mov
add
sub
xchg
inc
loope
into
jo
pusha
ss
(bad)
inc
mov
mov
iret
cmp
mov
push
cmp
pop
mov
sbb
in
jmp
test
rcr
test
imul
or
ret
fstp
(bad)
cmp
push
mov
fs
pop
movs
sbb
(bad)
and
xchg
sbb
dec
and
sbb
in
cmp
push
js
mov
xor
or
jo
mov
sub
sbb
ds
js
or
test
into
adc
pop
add
push
ror
push
pop
leave
mov
or
data16
clc
fst
ror
pop
or
leave
xchg
rol
mov
sbb
retf
sub
sub
and
xor
cmp
ss
mov
es
in
cmp
push
or
dec
fwait
mov
loope
pop
sub
out
sbb
(bad)
lock
xchg
je
loopne
rol
or
cli
(bad)
or
in
jno
rol
cmps
loopne
sub
retf
ins
dec
cmp
es
mov
pop
or
mov
das
js
xor
and
ins
pusha
je
into
mov
shl
addr16
jmp
retf
sub
sub
push
mov
repz
movs
push
sub
add
std
std
pop
jno
inc
push
icebp
ins
jmp
add
dec
sbb
sub
(bad)
mov
cmp
pop
loope
fstp
push
fdivr
cmp
cs
sub
mov
inc
aaa
lods
push
pusha
and
mov
sbb
aam
ins
xchg
dec
nop
pushf
xchg
mov
inc
cmp
add
add
add
jecxz
or
fcom
pop
pop
jecxz
fdiv
mov
popf
inc
xor
mov
lods
in
push
mov
add
fs
inc
rol
xor
xor
add
(bad)
jo
(bad)
cmp
or
(bad)
add
jl
jp
stos
xchg
pop
repnz
loopne
fisttp
jae
add
ret
push
inc
sbb
add
movs
xchg
test
push
or
pop
lods
sbb
mov
js
sahf
aas
test
mov
lahf
pop
fdiv
add
cmp
adc
sbb
aaa
call
inc
jns
pop
test
xchg
xchg
cmp
or
mov
fsubr
cmp
repz
mov
mov
push
and
xor
fld
xchg
push
or
xchg
(bad)
movs
in
xor
ss
jns
add
enter
xor
sbb
mov
into
int3
aad
sbb
test
jl
ret
jp
out
fs
(bad)
gs
or
jp
in
sub
test
popa
inc
and
mov
dec
adc
inc
mov
in
mov
cmp
rcr
shl
xchg
fsubr
mov
xchg
cmp
sbb
xchg
jmp
out
push
inc
cmp
mov
or
(bad)
test
xchg
fst
mov
test
loopne
cmp
pop
jg
mov
lock
ret
mov
(bad)
loopne
ins
cmp
or
cmp
fs
in
cmps
in
bswap
dec
(bad)
adc
push
in
fldenv
test
add
push
cmp
mov
sbb
add
(bad)
(bad)
lods
je
loope
(bad)
retf
jecxz
loopne
mov
sahf
(bad)
aam
nop
lods
mov
pusha
pop
sbb
aas
dec
or
shl
pushf
jo
fwait
fs
int3
les
sub
push
aaa
add
dec
cmps
stos
lods
or
(bad)
jmp
inc
jb
adc
adc
mov
cmps
pop
(bad)
xchg
cld
sub
push
pop
jge
les
outs
mov
out
add
or
mov
lods
push
pop
xor
imul
fwait
inc
xchg
fdiv
or
icebp
cmp
vandnpd
push
push
out
sbb
xor
int3
arpl
mov
(bad)
enter
pop
sbb
mov
(bad)
or
es
mov
mov
add
push
imul
or
loop
jb
ds
dec
mov
or
sub
les
aas
push
mov
adc
lods
ja
sbb
and
inc
inc
loopne
sub
test
loope
ror
call
outs
sbb
cmp
add
mov
adc
cwde
loopne
xchg
aad
fwait
sub
loope
movs
adc
xchg
loop
push
sbb
cld
es
loopne
cmp
pop
cmp
cmp
call
imul
dec
sub
cmp
mov
xchg
add
pop
loope
or
arpl
ja
outs
push
nop
das
pusha
lods
mov
ror
loopne
mov
fsubr
lea
or
daa
xchg
pop
jae
adc
(bad)
mov
xchg
test
cli
sub
lds
xor
dec
rol
retf
lahf
push
dec
retf
jb
jo
or
cwde
dec
ins
(bad)
xlat
loopne
inc
mov
cmps
jno
aaa
mov
xchg
je
rcr
cmp
sub
sahf
xor
addr16
adc
in
and
out
rol
inc
cmp
xor
dec
not
mov
xor
xor
in
push
cmps
and
push
aas
add
or
outs
add
push
pop
cmp
ins
pop
(bad)
jmp
rcl
inc
out
lods
add
xchg
mov
shr
pop
jns
xchg
push
mov
adc
test
lock
out
lea
leave
inc
scas
(bad)
push
js
jne
adc
inc
in
xor
xor
or
shl
aam
sbb
xchg
push
stc
fisubr
xor
xlat
mov
test
mov
cmps
and
daa
inc
jecxz
pop
xor
adc
sub
mov
push
mov
aam
xchg
xor
jmp
popa
pop
xor
adc
push
push
outs
inc
ss
call
and
daa
loope
das
jae
sbb
loopne
lea
jo
inc
adc
adc
xlat
and
aad
adc
xor
repz
pushf
jo
xlat
add
or
or
imul
or
ja
pushf
and
jl
loope
daa
cmp
sbb
lock
dec
mov
xchg
mov
(bad)
sub
dec
loop
xlat
dec
(bad)
icebp
cwde
sub
add
xor
pushf
mov
outs
loopne
sbb
call
lock
data16
or
stos
xchg
push
mov
nop
jnp
mov
rol
shl
into
loopne
fldcw
mov
jno
mov
fld
or
femms
jae
pop
popf
fnstsw
add
mov
add
sbb
cmpxchg
pop
das
xchg
mov
pop
dec
adc
jno
jo
out
sahf
cld
and
xor
push
sar
xor
not
fimul
or
ret
add
adc
and
push
pop
sub
adc
dec
icebp
movs
inc
sub
pop
mov
icebp
popa
leave
fdivr
sbb
mov
adc
pop
mov
lock
jae
daa
pop
adc
leave
sub
test
sbb
add
xchg
xchg
cmp
push
sub
jl
add
repnz
push
push
sub
fsub
sub
ja
sbb
js
dec
mov
rcl
xor
fs
mov
or
test
inc
cmp
inc
sbb
lea
movs
pushf
push
and
rcr
into
ret
sub
mov
and
pusha
scas
cli
fwait
inc
xlat
(bad)
loop
je
stos
cmp
push
lds
das
(bad)
movs
mov
add
loop
je
mov
sbb
clc
sbb
fnstsw
das
lods
xor
jbe
push
or
(bad)
jmp
mov
inc
dec
jge
mov
dec
mov
adc
loope
mov
test
jo
loope
or
ds
sub
sbb
popa
loopne
xchg
dec
pop
pop
sbb
mov
ja
fwait
cmp
mov
xor
aaa
inc
mov
aad
int3
xor
sub
repnz
and
pusha
pop
add
pop
pop
mov
jmp
mov
push
(bad)
or
inc
sbb
shl
inc
test
out
adc
sbb
ret
sbb
gs
shr
test
adc
jno
add
pop
into
jmp
xchg
fiadd
stos
dec
jp
add
add
fisub
jmp
inc
jbe
mov
pop
test
jmp
adc
lock
je
add
nop
fisubr
xor
mov
add
lea
sub
jns
aas
retf
pop
xor
inc
inc
jmp
test
js
into
cmp
mov
jl
fst
and
adc
in
leave
or
sub
xchg
sbb
add
scas
sub
mov
cmp
inc
call
jno
mov
mov
adc
mov
dec
jle
call
mov
enter
je
sub
mov
gs
imul
xor
sub
bound
add
(bad)
xor
cs
mov
sub
loop
sub
xor
dec
(bad)
or
sub
fdivr
mov
outs
mov
sahf
rol
pop
pop
in
jns
lds
adc
popf
mov
inc
pminsw
jmp
bound
dec
push
(bad)
sbb
pop
pop
and
cs
push
jecxz
popf
push
inc
and
sbb
xor
fidiv
sub
ja
and
test
fs
push
aam
dec
pop
lods
jge
stos
aaa
sbb
loop
lods
mov
iret
xchg
out
outs
ror
dec
stos
mov
pusha
lods
and
aam
addr16
pop
enter
rcl
or
adc
sub
addr16
jbe
push
movs
lea
or
xlat
dec
pop
inc
mov
stc
je
add
mov
xchg
ret
fist
or
in
cli
push
adc
popa
sub
or
mov
scas
add
jp
call
add
sub
sbb
lea
js
pushf
add
(bad)
retf
mov
test
push
xchg
add
push
adc
add
out
mov
dec
adc
cmp
enter
not
adc
fcomp
dec
pop
js
or
leave
cs
cwde
aas
xor
(bad)
mov
call
inc
mov
and
sub
pop
bound
xor
mov
jl
cmp
and
xchg
dec
or
test
pop
lahf
push
dec
(bad)
call
jae
xor
adc
push
push
pusha
jne
xchg
or
xor
pop
pop
shl
inc
inc
in
sub
movs
sbb
sbb
cmp
mov
mov
jmp
adc
sbb
or
das
imul
push
das
or
cmp
or
ret
sub
clc
les
or
dec
les
into
sti
loope
arpl
inc
jecxz
outs
fidivr
aad
test
sahf
lea
adc
sub
sbb
mov
inc
xor
and
rol
push
pop
test
or
cdq
pop
push
lds
push
adc
push
xor
inc
and
inc
clc
dec
adc
jb
out
adc
(bad)
sbb
loope
add
inc
stc
mov
(bad)
jmp
adc
sbb
shr
dec
call
mov
shl
add
sbb
xchg
inc
adc
ins
outs
frstor
adc
ret
cmp
hlt
or
pop
dec
repnz
sbb
sbb
push
pop
jmp
data16
mov
inc
pop
sbb
sbb
or
jo
add
jmpw
inc
pop
aam
and
(bad)
sbb
jl
add
pop
pop
cli
das
xchg
loope
add
inc
and
addr16
ror
lock
in
(bad)
dec
inc
add
movs
repz
loope
popa
jmp
(bad)
xor
xadd
push
xor
aam
icebp
xchg
or
arpl
cmp
(bad)
jno
lods
pop
sbb
adc
jl
adc
sub
add
adc
mov
imul
ror
out
leave
sar
popa
rol
lods
(bad)
mov
push
mov
xchg
or
ret
and
mov
cmp
pop
retf
mov
sbb
pop
pop
ret
inc
(bad)
cmps
fs
push
mov
dec
pop
and
dec
cmc
or
adc
fadd
pop
jbe
add
cmp
int
xor
shl
push
xchg
push
sub
outs
sbb
outs
jmp
and
cdq
popf
inc
nop
cmp
ficomp
aam
mov
shl
jno
leave
cmc
or
push
(bad)
mov
std
lods
xchg
inc
dec
nop
xchg
push
invd
add
or
mov
mov
js
push
mov
js
push
or
imul
fst
rcl
mov
popf
xor
xor
js
mov
mov
xor
or
mov
mov
addr16
sub
mov
jne
icebp
mov
xor
es
outs
jno
lods
dec
mov
je
add
es
add
hlt
adc
sbb
mov
icebp
dec
call
push
and
jae
fwait
or
sbb
xchg
and
or
addr16
dec
pushf
jne
inc
sbb
in
mov
cmp
jbe
nop
nop
xor
jb
push
sbb
xor
adc
sahf
xchg
xchg
inc
inc
add
cmp
bound
cwde
sbb
ss
pushf
daa
loope
xor
cdq
sub
inc
out
into
dec
mov
sub
loop
fisubr
pop
push
xchg
xor
sbb
mov
pop
cmp
mov
jmp
xchg
or
push
sub
jne
or
(bad)
mov
cwde
mov
dec
mov
(bad)
lods
adc
lea
lods
loopne
pop
pushf
pop
cmp
mov
loop
push
mov
mov
retf
push
sbb
xor
add
in
ret
pop
cmc
mov
mov
aam
lods
push
cmps
shl
enter
mov
call
std
pop
repnz
mov
cmp
sar
xchg
aaa
cmp
in
rcl
mov
push
aas
dec
pop
and
pop
loope
mov
rol
dec
pushf
sbb
loopne
repnz
data16
in
sbb
inc
js
fld
inc
iret
scas
lods
xor
sub
and
retf
clc
popf
pop
pop
test
or
sub
shr
adc
loopne
adc
and
(bad)
pop
push
inc
pop
mov
inc
xchg
sbb
add
cmp
leave
cmp
push
xor
ret
mov
jns
pop
mov
int3
inc
push
sub
xor
cmp
scas
and
xor
mov
cmp
je
fidiv
sbb
xchg
out
pop
jne
lods
pushf
or
movs
ret
popf
ins
movs
mov
fdiv
out
push
test
adc
mov
call
mov
shr
sbb
jmp
inc
shl
jmp
or
push
add
pop
cmp
cmc
push
mov
push
je
push
xlat
(bad)
xchg
mov
jecxz
pop
daa
outs
add
push
ja
aam
xchg
dec
sub
mov
ins
push
ja
fucom
fdivr
sbb
(bad)
xchg
lods
out
mov
frstor
loopne
fcom
addr16
imul
dec
jle
push
out
lahf
mov
test
dec
(bad)
lahf
fist
sub
inc
add
xor
mov
or
leave
ret
call
adc
imul
xor
jecxz
inc
or
nop
inc
add
mov
or
ja
push
xlat
pushf
outs
add
pop
pop
leave
aam
mov
xchg
ficomp
sahf
xlat
ret
pop
dec
sbb
inc
push
push
inc
xor
fistp
ret
stos
or
xchg
dec
add
arpl
idiv
pop
(bad)
into
fld
pop
add
push
mov
hlt
ret
ins
daa
jecxz
xchg
test
outs
and
or
sub
sub
scas
lods
ja
push
mov
dec
cmp
dec
rol
js
xchg
sahf
mov
jecxz
ss
out
pop
sbb
lock
dec
mov
adc
(bad)
popf
out
pusha
cmp
add
leave
call
lahf
add
mov
out
ret
pop
mov
add
and
mov
es
pop
dec
dec
out
mov
and
shl
das
je
ret
rcr
cwde
(bad)
sbb
das
retf
pop
jg
add
in
or
sbb
push
fadd
(bad)
test
xchg
scas
adc
jp
fstp
xchg
and
popf
push
xchg
(bad)
mov
clc
mov
jbe
fild
retf
dec
cmc
xchg
mov
push
sbb
dec
pop
pushf
and
mov
pop
lods
add
les
cdq
(bad)
sbb
cmp
(bad)
xchg
xchg
sbb
cmp
mov
dec
dec
sbb
jmp
xor
cwde
pusha
outs
add
dec
fadd
lock
dec
or
sub
sub
inc
mov
shl
ja
or
out
or
retf
fistp
and
leave
cmp
mov
inc
fstp
into
cmp
sahf
jle
lock
sbb
xlat
mov
and
pop
adc
cmp
pop
xchg
pop
aaa
nop
mov
into
nop
dec
ror
arpl
lds
xor
loope
cmp
out
loope
ss
dec
fcomp
addr16
mov
scas
jno
lods
xor
sbb
mov
or
xchg
pop
jns
ja
cmp
adc
js
mov
idiv
cmp
pusha
fs
add
test
popa
mov
fwait
mov
or
xor
nop
pop
xor
cmp
add
dec
addr16
pop
xor
lock
mov
dec
sbb
xchg
inc
in
push
xchg
(bad)
popa
inc
mov
mov
pop
clc
jle
mov
cs
or
adc
inc
pop
out
js
add
sbb
dec
not
ficom
or
daa
fld
pop
push
(bad)
enter
xchg
jp
(bad)
pop
and
js
pop
adc
dec
and
dec
xor
pusha
icebp
ds
jne
push
call
or
mov
sub
push
test
popa
mov
lock
adc
cmp
jg
inc
out
mov
call
adc
outs
adc
and
call
scas
movq
bound
or
test
loopne
sub
jge
push
and
inc
pop
mov
(bad)
fiadd
test
add
jmp
movs
or
das
int
movs
je
inc
mov
inc
lock
add
in
ret
imul
(bad)
nop
lds
cmp
sahf
push
inc
popf
mov
les
xchg
rcr
test
mov
jne
sbb
pop
adc
sub
rol
cmp
dec
popa
xchg
fs
cmp
cmp
ret
inc
out
je
sbb
mov
test
mov
cmp
add
mov
jmp
jmp
add
call
fs
sbb
cmp
fsub
sbb
fcom
cwde
loop
pop
jb
pusha
and
jo
push
jmp
push
rol
leave
jp
pop
xor
cld
movs
or
add
push
push
pop
out
inc
or
sahf
in
loop
lea
and
adc
sub
sbb
cmps
mov
mov
es
rol
out
scas
push
ja
(bad)
or
pop
pop
push
pop
nop
into
add
in
iret
add
sbb
mov
sbb
les
not
or
jmp
sub
xchg
mov
jge
adc
cmp
mov
div
push
ds
je
and
(bad)
in
push
loope
popa
mov
push
fisub
sub
mov
pop
addr16
je
jo
lods
sub
sqrtps
aaa
pushf
jo
jecxz
cmps
add
sbb
bsr
mov
fsubr
fs
pop
xchg
xchg
or
imul
sub
sbb
arpl
outs
movs
xor
call
add
jo
rol
dec
cmp
xor
aaa
sbb
std
fs
outs
xchg
cmp
scas
jg
and
aad
and
mov
push
pop
dec
lods
or
(bad)
aam
and
add
and
and
xor
lmsw
pop
ds
addr16
cmp
adc
xchg
dec
out
mov
in
push
lock
pop
or
popa
or
fldenv
jno
sub
adc
ret
mov
or
je
pop
push
imul
jecxz
leave
lds
js
fild
lea
xor
mov
inc
aaa
add
sub
outs
add
je
push
pop
push
sbb
loope
sbb
test
ret
rcr
add
sbb
jne
movs
scas
movs
sbb
sub
dec
adc
out
cs
sub
cs
ror
sti
add
pop
sub
mov
mov
add
add
dec
fwait
and
nop
pop
(bad)
int
add
or
sbb
jmp
add
xor
and
push
mov
add
cmp
jge
cmp
jnp
xor
sbb
pop
add
jmp
das
arpl
mov
and
or
pushf
mov
mov
jns
arpl
adc
popf
in
inc
lock
aad
cmps
adc
(bad)
sbb
dec
repz
ins
xor
and
xchg
cmc
add
xor
mov
sub
xchg
daa
mov
add
xchg
scas
cmp
pop
call
mov
inc
dec
jns
mov
lock
jecxz
or
push
mov
push
inc
(bad)
xor
mov
cmp
mov
enter
xchg
stos
add
or
imul
mov
idiv
push
rcl
das
jecxz
stc
mov
dec
into
dec
or
push
xchg
and
lea
xor
cmp
cmp
cmps
pushf
add
jp
(bad)
dec
mov
mov
adc
add
dec
lock
sbb
fwait
pop
sub
xor
not
rcl
mov
mov
jb
push
(bad)
retf
jmp
and
enter
sbb
push
pop
rcr
outs
imul
push
xchg
cmps
repz
imul
sbb
push
jo
aas
xchg
cwde
lods
lds
inc
jmp
add
xchg
movs
ffreep
xor
jnp
sbb
add
and
mov
pop
jmp
imul
xor
mov
add
and
push
idiv
dec
pop
push
push
push
ret
or
enter
xor
pop
arpl
and
sbb
xchg
xor
dec
xchg
rcl
xchg
pop
and
sbb
jb
add
mov
jne
dec
add
jmp
add
pop
push
mov
stc
add
xchg
xchg
mov
jmp
das
adc
pop
pushf
inc
pop
std
sahf
pop
xchg
jo
sahf
or
(bad)
pop
or
out
in
loopne
daa
(bad)
dec
push
xor
sbb
(bad)
rol
jo
addr16
or
dec
mov
cmp
add
test
push
mov
icebp
(bad)
lock
ret
mov
xchg
mov
and
loope
cmp
fincstp
push
dec
sbb
test
sbb
or
inc
(bad)
pop
sbb
pop
or
mov
push
xchg
jmp
xchg
xchg
jmp
mov
movs
and
jg
and
push
dec
outs
(bad)
jmp
fdiv
push
or
and
movs
fwait
cmp
push
aaa
jle
jp
jbe
cs
popf
sbb
add
add
loop
dec
test
popa
mov
ss
(bad)
nop
mov
dec
imul
add
mov
test
mov
pop
test
or
jae
jne
mov
mov
mov
inc
(bad)
jno
sub
loope
cmps
mov
and
and
sub
aad
js
or
out
cmp
outs
lea
ror
std
add
sub
adc
sahf
inc
or
sub
adc
inc
mov
jecxz
xor
push
loopne
mov
adc
fld
push
fsub
pop
inc
or
loope
cmp
lock
loop
jo
jmp
dec
cmp
ret
and
or
ss
jo
jo
inc
or
adc
mov
add
out
adc
push
adc
inc
xchg
jmp
in
or
rcl
mov
imul
test
mov
mov
dec
cmc
sar
imul
jp
mov
cmp
or
sub
retf
mov
add
push
(bad)
fiadd
(bad)
lds
outs
xchg
(bad)
jmp
ds
test
or
sbb
jo
stos
repz
sbb
fisub
mov
test
dec
rdmsr
idiv
sbb
fild
dec
repz
add
xor
adc
addr16
add
lea
sbb
jo
sbb
and
fcomip
enter
mov
mov
sub
cmovno
addr16
sub
push
pop
out
pop
jp
sub
jmp
adc
cmp
mov
fnstsw
mov
cmp
outs
sub
jo
mov
in
cmp
sbb
xor
lods
push
test
stos
sub
sub
inc
shl
mov
push
cmp
xchg
jmp
jnp
into
sbb
cli
clc
cmp
(bad)
push
adc
loop
es
push
sbb
mov
mov
iret
arpl
lods
aaa
lods
or
jnp
iret
and
cmp
out
into
sar
add
pop
xchg
lock
lock
cdq
fadd
mov
jnp
loope
mov
and
push
js
in
aaa
(bad)
or
scas
repz
xor
mov
dec
mov
xchg
aad
xchg
adc
or
das
xchg
mov
cmp
adc
ror
jb
add
cmp
add
mov
cmp
inc
pop
rep
rcr
xchg
sub
fmul
lods
les
push
or
jno
xor
mov
xor
icebp
jl
xchg
mov
add
inc
psubusw
cmps
mov
jbe
loopne
dec
cmp
pop
sbb
cmc
jno
xchg
loopne
pop
mov
test
dec
xchg
sbb
push
inc
stc
cmp
nop
xchg
and
add
mov
stos
test
dec
ins
pop
scas
ficomp
les
movs
cmps
xchg
cmp
mov
dec
loop
mov
push
jp
jo
in
lock
popf
dec
rcl
sub
ss
xor
iret
push
rcr
fsub
fnstenv
mov
ja
pop
mov
dec
inc
retf
dec
push
jmp
cmp
fwait
hlt
popf
popf
mov
ret
out
xor
fcom
call
in
mov
inc
sub
xchg
xchg
jnp
and
or
push
rol
sbb
mov
push
inc
jne
xchg
push
mov
jb
imul
scas
lds
pop
add
push
and
mov
cs
aaa
ret
xor
repz
int3
ret
jl
aas
mov
xor
test
and
xchg
pushf
movs
mov
adc
sti
mov
or
es
sbb
dec
jae
mov
ret
cmp
inc
sbb
or
add
and
aam
enter
fwait
aam
adc
ror
adc
pop
ret
push
mov
leave
adc
xchg
aas
nop
adc
and
xchg
mov
or
enter
cmp
fucom
sbb
in
mov
gs
push
xor
bound
cdq
rcl
mov
mov
(bad)
ss
pop
sbb
icebp
jo
xchg
adc
mov
and
addr16
es
or
sub
pop
sub
mov
retf
out
dec
xchg
retf
or
(bad)
mov
inc
ret
ret
add
cmp
sbb
jp
or
and
popf
sbb
mov
or
popa
fst
lea
shl
jecxz
loop
dec
cmp
dec
loopne
mov
ret
xchg
ins
fdiv
arpl
mov
ficomp
add
xchg
aaa
mov
mov
lock
lock
pop
in
or
test
mov
fwait
les
push
rcr
inc
add
push
pusha
out
data16
adc
je
popf
aad
in
adc
cmc
pop
fs
and
inc
cmp
mov
xor
fiadd
push
inc
dec
push
cmp
hlt
nop
or
sbb
cmp
jl
fimul
scas
(bad)
ror
push
idiv
lods
mov
loopne
mov
(bad)
cmps
or
ret
je
ret
dec
xchg
sbb
aam
ins
xchg
and
dec
jo
add
movs
jecxz
pop
mov
test
cs
test
fsub
arpl
mov
ret
cdq
mov
rcl
dec
es
xor
or
adc
adc
jp
sub
cmp
push
pop
dec
cmp
cmp
adc
aas
jo
cmps
dec
pop
inc
push
push
and
jmp
cdq
aaa
mov
(bad)
mov
add
add
dec
das
add
fsubr
adc
pop
pop
popa
pushf
scas
add
imul
or
shl
fwait
cmps
or
pushf
rcl
pop
xor
sahf
sar
xchg
xor
es
les
jo
jbe
cmp
sar
icebp
adc
dec
lods
jl
loop
mov
mov
(bad)
adc
mov
data16
test
(bad)
jb
inc
mov
xor
ins
lods
hlt
push
out
(bad)
lods
and
jmp
je
aam
push
push
xchg
lds
inc
fstp
out
clc
cmp
ins
fsubr
popa
push
and
adc
mov
mov
js
jmp
lods
sub
inc
xor
cmp
pop
xchg
jmp
sbb
icebp
mov
test
stos
pop
daa
arpl
inc
leave
add
sub
or
xchg
jo
jo
mov
push
sub
push
repz
pop
push
mov
imul
push
rcl
addr16
aam
sub
jb
sub
sahf
(bad)
pop
call
je
add
jmp
leave
loop
xor
push
repnz
xchg
cmp
xor
mov
aad
(bad)
add
lods
popa
icebp
aam
cld
add
into
pop
ret
mov
sub
fisubr
loop
(bad)
jmp
push
aad
push
aaa
push
sub
dec
call
cmp
adc
aam
sti
gs
add
jmp
in
in
mov
dec
inc
xor
lods
xor
mov
mov
popa
add
ds
fdivr
jnp
push
push
mov
xlat
mov
pop
aam
adc
sub
repnz
mov
fnstcw
xchg
dec
pop
retf
or
sub
xlat
push
ficom
lods
lock
add
push
add
mov
int3
cmp
fldl2e
add
(bad)
sub
ret
rcr
gs
jle
jae
mov
add
fimul
push
sbb
popf
gs
sbb
mov
ret
jne
ret
rcr
or
add
loop
inc
mov
rcr
loop
mov
inc
jmp
arpl
dec
cmp
or
mov
call
xor
test
les
inc
ins
cld
cmps
repz
loop
adc
xchg
pusha
or
repnz
js
adc
sbb
mov
xchg
push
(bad)
loopne
add
adc
pop
mov
out
ret
pop
inc
scas
dec
rcr
xor
add
push
cwde
into
popa
mov
add
pop
jl
mov
lea
pop
jns
push
int3
or
adc
bswap
xchg
pusha
loope
mov
ret
xchg
dec
mov
rcl
sbb
push
popf
or
test
sub
and
fistp
jmp
push
xor
sub
xchg
xchg
mov
popa
xchg
arpl
in
xchg
mov
mov
pusha
and
movs
icebp
shl
jae
push
pop
dec
dec
inc
test
mov
cmp
in
jl
add
add
test
adc
lahf
add
in
sbb
xor
inc
outs
mov
mov
and
mov
xchg
add
dec
call
mov
loope
jg
(bad)
pop
push
imul
sahf
and
or
(bad)
push
cmova
(bad)
in
pop
ins
adc
xor
mov
cs
pop
retf
jmp
add
lods
cmp
xor
fadd
sahf
mov
adc
sub
push
inc
xor
cmps
pop
fld
sbb
pop
ror
dec
push
inc
push
mov
pop
cmp
mov
inc
mov
mov
xchg
adc
in
push
pop
mov
mov
rol
mov
pop
fs
jge
xchg
data16
and
aam
jo
xor
(bad)
sbb
jmp
int3
adc
xchg
mov
rcr
xor
push
mov
mov
movs
push
cmp
dec
adc
call
add
loope
jno
arpl
mov
movs
(bad)
mov
pop
pop
in
xchg
push
add
hlt
dec
loope
push
(bad)
movs
push
dec
mov
jmp
(bad)
ror
xchg
sbb
js
adc
and
popa
pop
popf
sbb
mov
mov
movs
add
sar
popa
push
cs
xor
or
adc
sbb
add
adc
addr16
pushf
rol
test
neg
imul
je
nop
pusha
or
mov
jmp
loop
les
les
push
cmps
into
push
iret
scas
cmp
scas
sub
gs
(bad)
pop
xchg
cmp
sub
rcr
cmps
(bad)
lds
leave
xor
ret
xor
aaa
cmps
jns
mov
and
movs
xchg
loope
adc
mov
xchg
inc
pusha
pusha
xchg
into
loop
add
mov
sbb
jnp
sahf
cmp
adc
icebp
sub
fidivr
push
cmp
add
dec
xor
retf
(bad)
add
xchg
pop
les
add
inc
jecxz
fwait
pop
add
jmp
(bad)
jo
gs
cmp
push
punpckhbw
mov
push
bound
mov
int
frstorw
jns
jno
pusha
mov
inc
push
add
hlt
xchg
ret
xchg
xchg
call
push
rol
movs
stos
imul
adc
mov
mov
pop
jecxz
gs
cmp
popf
inc
pop
xor
out
mov
dec
sbb
arpl
jge
jb
mov
repnz
push
push
or
daa
sub
stc
out
xor
idiv
cmp
stos
sub
jl
popa
or
inc
enter
sbb
cmp
push
add
addr16
pop
adc
in
sub
daa
or
sub
add
imul
xchg
add
inc
or
cmp
add
push
or
add
int
(bad)
rcl
addr16
jb
lea
add
dec
push
push
test
ins
cmp
daa
bound
lods
pop
jno
cmp
inc
rcr
dec
mov
cli
mov
hlt
xchg
in
pop
pop
xor
dec
pop
jo
sbb
xchg
shl
gs
cmp
jns
mov
sbb
add
adc
jecxz
push
push
mov
shl
mov
out
add
xor
mov
cmp
lock
pop
loope
mov
push
sub
mov
int3
(bad)
push
stos
cmp
mov
jns
dec
enter
or
stos
leave
enter
cli
in
push
push
jbe
mov
(bad)
xchg
movs
xor
ficomp
loope
pop
int
test
dec
out
mov
add
addr16
movs
jl
add
imul
xchg
jle
and
scas
and
mov
mov
js
xchg
fsubr
push
jno
leave
imul
enter
ja
ins
jno
jns
test
lods
push
(bad)
xchg
mov
out
push
fstp
fadd
mov
shl
push
arpl
cmp
stos
shl
mov
jl
js
ret
inc
jbe
cmp
inc
data16
jle
inc
pop
popf
and
mov
retf
xchg
mov
pop
add
add
pop
cmp
adc
das
push
mov
test
or
frstor
push
rol
imul
mov
lods
and
push
in
ret
jno
nop
in
call
dec
imul
inc
mov
pop
lods
push
mov
lock
ins
push
es
shr
daa
adc
or
cmp
test
mov
push
cmp
pop
inc
mov
sub
(bad)
enter
cmc
push
ror
cdq
clc
repz
cmp
dec
ret
loop
rcr
(bad)
dec
sbb
call
mov
dec
push
dec
not
loope
or
mov
cmp
dec
arpl
pop
ins
or
loope
dec
test
lods
outs
cdq
pop
sbb
fmul
dec
loop
jns
inc
retf
cmp
jo
sbb
sub
adc
lock
icebp
test
add
cwde
imul
or
test
arpl
xor
daa
imul
(bad)
mov
xchg
daa
cs
xchg
adc
gs
push
mov
pop
or
sahf
repz
cmp
mov
mov
adc
add
cmp
daa
test
mov
push
xor
rcr
movs
adc
xor
fwait
lock
sub
jns
stos
jmp
mov
cmp
or
jmp
jne
xchg
jecxz
(bad)
pop
sub
inc
xor
add
add
jmp
cmps
cmp
or
es
add
icebp
add
rol
call
jne
or
ja
jmp
or
mov
jecxz
aam
pop
cmp
fmul
nop
cmp
addr16
mov
push
outs
fisub
mov
int
adc
xchg
mov
inc
pop
in
gs
jp
xor
aaa
inc
pop
out
pushf
and
fstp
and
inc
sbb
out
or
mov
mov
arpl
add
cmp
inc
bound
push
push
inc
pop
push
jmp
mov
fsub
test
adc
add
or
or
sbb
sbb
cmp
mov
punpcklwd
(bad)
push
or
mov
int
jne
xchg
xchg
xchg
xlat
cmp
xor
loope
pop
mov
int
aaa
xor
outs
aam
sub
loopne
cmp
sbb
(bad)
pop
stos
or
xor
sub
dec
ins
mov
(bad)
push
mov
adc
shl
pop
rcr
pop
inc
div
xchg
mov
loope
pusha
(bad)
(bad)
mov
xor
inc
cmp
loopne
hlt
mov
add
pop
xchg
pusha
add
xor
cmp
loop
sbb
dec
mov
jne
(bad)
scas
xor
in
je
addr16
adc
ret
test
fisubr
(bad)
inc
sbb
sbb
or
fsub
add
pushf
pop
icebp
das
lock
test
cmp
mov
out
sub
(bad)
xchg
cmp
scas
mov
jecxz
in
stos
cmp
xchg
retf
xor
cwde
data16
cmp
add
in
cmp
mov
add
pop
out
cli
xor
adc
bound
movs
fmul
in
sbb
repnz
icebp
push
ds
rcl
xchg
xchg
cmp
cmps
fabs
into
sbb
xor
test
jmp
fstp
fcom
mov
daa
dec
arpl
push
pavgb
dec
das
mov
jne
shl
ret
xchg
xor
push
int3
dec
push
xor
sub
(bad)
aad
rcr
xor
leave
jmp
lock
scas
push
lods
xchg
add
xor
xor
cmp
outs
jno
or
push
rol
cmp
ja
sbb
cmp
cmps
rcl
mov
mov
fisttp
dec
ret
daa
mov
rol
dec
sub
sbb
mov
pusha
dec
pusha
dec
ret
into
arpl
div
jl
call
div
ja
fist
(bad)
cmp
add
rcr
pop
cmp
jmp
xor
arpl
push
xor
jg
xor
xor
pop
(bad)
out
push
cmp
das
adc
rcl
loope
sub
bts
sahf
or
and
enter
fiadd
fwait
push
pusha
sub
or
mov
or
inc
jns
test
jmp
lds
sbb
add
inc
pusha
test
inc
cmc
add
arpl
loop
sbb
mov
mov
data16
js
test
inc
adc
adc
and
ss
arpl
mov
xor
je
cmp
or
or
adc
sbb
xlat
aam
inc
les
and
pop
fwait
mov
(bad)
jmp
int3
mov
mov
invd
mov
sub
ret
or
sub
in
ja
mov
repnz
mov
push
xchg
repnz
aad
das
and
nop
fwait
daa
dec
cli
es
inc
mov
fs
retf
out
and
test
pop
push
cmovp
pop
mov
sub
mov
xor
xor
xor
aas
imul
(bad)
outs
leave
ret
shl
xlat
aam
sbb
ret
mov
fmul
arpl
sub
(bad)
sub
outs
sbb
fld
je
loope
test
rcr
xchg
or
js
sub
sbb
into
(bad)
cmp
jno
mov
ret
loopne
int3
jmp
cmp
cmp
test
sbb
inc
mov
inc
imul
(bad)
icebp
lock
leave
leave
jo
outs
push
sti
popa
inc
xor
fisttp
scas
ret
cs
push
mov
mov
add
cmps
push
sub
fimul
pop
imul
pop
inc
test
or
sbb
dec
sbb
fisttp
idiv
or
add
popf
add
enter
xchg
xchg
test
jae
xor
icebp
(bad)
sub
ret
fmul
test
shr
or
dec
sti
jno
imul
sbb
dec
mov
retf
push
pushf
aad
loope
jecxz
mov
inc
repnz
lahf
inc
aas
jne
movs
out
cld
xchg
inc
add
xchg
add
sub
icebp
nop
inc
das
and
or
(bad)
sub
xchg
jp
adc
js
pusha
popa
sar
xchg
aam
mov
sbb
xor
and
out
popf
add
dec
(bad)
jmp
xchg
xor
mov
pop
(bad)
mov
lea
mov
les
or
test
cmp
test
sbb
sbb
mov
jnp
jb
fld
shr
lock
push
pcmpgtb
and
dec
xchg
xor
pop
lea
(bad)
aam
or
out
(bad)
xor
or
or
nop
lds
jecxz
cs
in
lods
pusha
or
test
adc
jmp
adc
cdq
xor
es
out
xor
jecxz
loopne
and
mov
mov
jno
not
inc
pop
push
push
inc
mov
and
pop
mov
or
adc
retf
loope
pusha
push
push
sub
cmp
fsin
(bad)
adc
xor
cmp
inc
imul
outs
inc
stos
or
(bad)
cli
movs
mov
shr
arpl
imul
xor
push
inc
out
test
mov
mov
add
jne
xor
jbe
xchg
mov
lahf
adc
jo
rcr
(bad)
arpl
dec
sbb
imul
sbb
mov
xchg
or
mov
and
sar
into
adc
xor
adc
add
fmul
pop
je
jmp
add
fisub
jb
scas
fwait
ror
(bad)
test
add
mov
add
fbstp
inc
hlt
mov
dec
push
push
lods
mov
xor
sbb
pop
jmp
mov
fiadd
xchg
mov
fldenv
add
add
mov
ret
ret
(bad)
dec
cmp
ret
mov
sbb
das
jecxz
push
pop
pushf
pusha
add
cmp
lahf
jp
lock
and
xchg
cmp
aad
ret
jo
jle
xor
xor
xor
jp
add
cmp
fsubr
pop
sbb
sbb
xchg
sbb
clc
xchg
adc
pop
inc
ins
push
ss
fldcw
in
ror
das
call
lock
pop
and
(bad)
rol
xor
xchg
leave
jmp
xor
mov
int
lahf
mov
or
jmp
adc
popa
in
rol
enter
sub
jl
sbb
addr16
pop
sub
dec
push
addr16
or
mov
push
aaa
xor
or
sub
xor
add
xor
fld
jnp
jmp
shr
not
push
xlat
push
cdq
xor
cmp
mov
rcr
js
push
and
bound
inc
adc
repz
mov
ja
inc
(bad)
adc
pop
add
and
outs
pop
rol
push
inc
pop
add
fsub
or
sbb
mov
sub
jo
mov
pusha
jne
xchg
lahf
arpl
adc
pop
out
mov
adc
lea
push
jb
and
xchg
xor
and
(bad)
mov
aam
jp
push
popf
mov
loop
and
xchg
pop
sub
xchg
mov
ret
pop
icebp
sbb
imul
(bad)
into
ror
push
dec
in
add
sub
add
sahf
mov
push
jge
push
sar
jmp
add
sahf
cmps
aad
arpl
inc
add
leave
clc
es
add
and
dec
pop
rcr
std
jmp
loopne
les
xchg
jns
stos
push
addr16
lods
mov
inc
out
push
(bad)
or
add
mov
mov
dec
adc
and
mov
lock
jecxz
sbb
xor
sbb
jge
call
in
les
inc
mov
retfw
push
add
imul
add
fcomp
call
and
inc
adc
xor
and
mov
push
ficom
sbb
addr16
xor
mov
sbb
inc
out
push
mov
mov
xchg
pop
scas
add
adc
lods
stos
or
ret
imul
clc
jge
xchg
adc
(bad)
iret
in
xor
inc
jno
xor
mov
mov
sbb
out
mov
xchg
int3
xor
scas
and
xchg
rcl
loope
bound
xor
out
mov
ret
mov
jecxz
fs
movs
push
add
nop
and
mov
xchg
in
jp
daa
jl
(bad)
xor
pop
fwait
xchg
jl
pop
daa
loopne
mov
cs
sub
pop
or
adc
sbb
jp
(bad)
lods
inc
mov
sbb
punpckldq
push
sub
inc
xor
rcl
or
and
leave
mov
test
or
push
or
mov
pop
inc
rcl
xchg
jbe
je
lods
jno
call
jmp
pop
je
test
cmp
sbb
or
loopne
arpl
sub
jbe
cdq
invd
push
ret
push
dec
fs
jp
cmp
imul
pop
adc
js
cwde
xor
aas
scas
jmp
mov
xor
loope
xchg
cdq
clc
js
dec
xchg
iret
popa
(bad)
retf
loopne
dec
ret
add
or
push
add
xchg
xor
adc
lock
leave
xchg
cmp
ins
hlt
push
mov
out
cmp
bnd
jl
jmp
ror
jns
or
push
push
jnp
add
push
mov
fst
or
lock
ins
or
jno
inc
inc
or
lods
lock
pusha
inc
add
clc
xchg
cmp
mov
sub
lods
aaa
es
xor
mov
xchg
nop
xchg
add
out
test
movs
pop
enter
dec
xchg
in
and
adc
cmp
dec
call
fdivr
cmp
mov
ins
and
pop
mov
and
xchg
add
bound
sub
jecxz
outs
(bad)
cmp
fnstsw
repnz
sbb
rcr
ror
leave
lds
(bad)
cmp
add
fistp
xor
xchg
mov
add
dec
pop
in
xor
fstp
jo
dec
enter
gs
icebp
inc
mov
dec
mov
std
push
xor
xchg
push
out
sub
add
cmp
add
sub
jns
outs
xor
sbb
or
adc
push
test
jp
inc
adc
jp
sub
inc
jo
dec
xchg
(bad)
jno
stos
xor
mov
rol
cmp
inc
in
leave
mov
or
rol
jmp
sub
xchg
sub
add
sub
sbb
xor
sbb
xor
pusha
loope
and
je
inc
cmp
sub
add
test
mov
std
xor
push
inc
ret
push
retf
dec
ror
jne
rcl
out
xchg
cmp
ds
or
lods
jne
mov
test
or
sub
lea
je
or
dec
jl
aam
ja
iret
aam
xor
popa
mov
add
xor
add
cdq
xchg
jecxz
loope
pop
push
in
ins
or
imul
dec
mov
pushf
aad
adc
add
xor
mov
cmp
push
rcl
popa
add
sbb
shl
call
outs
jp
sub
mov
cmp
sub
xor
cmp
lods
sub
test
sbb
jge
sub
jno
and
test
cmc
and
pop
and
(bad)
xor
xor
lods
stos
add
xchg
xor
dec
imul
push
rcr
add
dec
jmp
or
cwde
rcl
pop
test
push
idiv
div
inc
xchg
les
xchg
cmp
les
es
push
pop
add
mov
mov
add
xor
enter
or
sysret
sub
xchg
sbb
iret
lods
cmp
sbb
sti
xor
or
push
(bad)
push
jp
sbb
lea
jp
inc
sbb
ja
or
repnz
add
push
push
outs
test
out
out
add
imul
ret
sub
aaa
les
add
lods
and
add
sub
in
pop
adc
add
scas
or
jmp
rcr
test
dec
inc
rol
lahf
push
rcl
sahf
scas
xor
mov
shl
add
pop
jmp
dec
jmp
sbb
neg
jo
or
gs
or
shl
mov
add
push
cmp
or
mov
daa
and
add
sub
jmp
pop
inc
lods
mov
icebp
and
imul
jae
pop
inc
or
mov
jmp
cmp
mov
adc
push
push
ror
adc
je
pop
add
mov
js
pop
fs
push
das
sub
jmp
das
outs
lock
and
mov
js
jge
in
sub
push
ja
pop
out
cmp
aam
xchg
repnz
xchg
pop
call
fisttp
or
sub
adc
daa
imul
add
pop
out
scas
hlt
mov
pop
xlat
mov
add
pop
leave
retf
xor
ret
sub
cmp
call
push
(bad)
xor
mov
xor
imul
add
mov
mov
add
xchg
daa
daa
je
mov
xchg
les
push
adc
sub
sahf
jo
xchg
lahf
rcr
mov
cmp
test
and
push
push
rcr
pop
xchg
jl
pop
sbb
adc
ret
sub
retf
mov
addr16
and
jo
rcl
xchg
movs
nop
xchg
and
push
and
fisub
arpl
addr16
or
mov
jge
adc
or
mov
pushf
push
stos
and
xchg
loopne
mov
jno
mov
sub
cmp
loopne
loop
pop
add
sub
jmp
data16
fdivr
pop
sar
(bad)
cmovae
inc
or
leave
clc
ror
loope
out
jns
or
addr16
mov
mov
mov
retf
ror
dec
mov
push
(bad)
jo
aam
mov
icebp
add
ja
pushf
xor
mov
jbe
(bad)
sbb
lock
jnp
inc
shr
movs
popf
(bad)
or
and
daa
mov
das
pop
cmp
ret
push
stc
repz
loopne
das
push
sahf
and
cmps
jnp
fucomip
bound
aaa
lock
inc
cs
mov
test
fmul
xchg
and
lods
rol
je
div
mov
and
mov
shr
(bad)
sbb
pusha
ret
add
jno
retf
jae
mov
sbb
sbb
in
push
lds
fwait
and
xchg
xchg
push
(bad)
sbb
push
pop
retf
jg
retf
ret
out
sti
add
gs
dec
(bad)
cmp
jmp
dec
pop
or
loope
shl
mov
popa
sub
loopne
lds
mov
push
add
mov
arpl
movs
xchg
(bad)
adc
and
cmps
(bad)
das
or
jnp
sub
push
or
lock
mov
and
xor
pop
sbb
push
stos
(bad)
movs
mov
and
ins
jg
cmc
jno
sub
and
imul
clc
adc
test
shr
aad
or
pop
cmp
adc
scas
(bad)
pop
mov
fucomi
out
or
les
xor
(bad)
and
cmp
popa
jo
push
dec
clc
js
aaa
xchg
xchg
in
pop
or
push
mov
icebp
(bad)
mov
or
mov
rcr
aam
inc
fisttp
ret
add
nop
xchg
test
rol
dec
push
jecxz
fld
(bad)
lock
push
pop
mov
xor
cmc
shl
test
enter
lods
sbb
push
leave
es
sbb
mov
pop
sub
xor
jmp
js
mov
pushf
lock
xlat
push
push
shl
sub
jge
inc
daa
ja
or
xchg
adc
pop
add
loope
xor
push
inc
jo
arpl
pop
jnp
mov
cmp
addr16
jo
sbb
cmp
dec
or
inc
pop
aaa
dec
scas
mov
mov
fld
pop
into
xor
sbb
pop
and
jle
jnp
or
add
aam
xor
cmp
addr16
inc
loope
stos
das
or
rol
je
outs
or
add
cmp
shr
xchg
pop
cmp
mov
mov
and
movs
aas
je
cmp
sbb
int3
cmps
add
push
pusha
mov
iret
push
fadd
nop
pop
stos
int3
mov
repnz
xchg
or
sbb
xchg
aaa
pop
and
outs
shl
pusha
sbb
rcl
fiadd
dec
cwde
xor
dec
fs
lods
fldcw
lock
jecxz
add
pop
push
dec
pusha
addr16
push
sbb
mov
or
push
sub
aaa
into
into
mov
shl
nop
and
dec
sub
and
cmp
dec
pop
retf
sar
stos
cmp
push
sbb
cmc
or
imul
pushf
mov
cli
lahf
sbb
dec
jmp
cdq
out
rcr
jno
pop
imul
xor
cli
cmp
cmp
sub
loopne
ffree
add
ror
cdq
xlat
inc
and
aad
ret
jo
jo
cmp
inc
loopne
mov
add
enter
inc
dec
bound
cmp
(bad)
jmp
fs
and
loope
jnp
cmp
into
call
loopne
sub
push
push
push
jg
mov
mov
pop
cmp
repnz
jl
lods
sbb
mov
jl
or
pop
jnp
shl
mov
add
aam
int3
aaa
or
dec
and
popa
pusha
and
test
aaa
lods
xchg
cmp
retf
push
sbb
pop
and
sbb
scas
ds
ret
jmp
push
lods
mov
scas
ds
lods
cs
push
mov
ret
loope
push
inc
or
inc
xchg
xor
mov
mov
or
add
push
cmp
daa
sar
cmp
pop
mov
pop
or
pop
add
movs
mov
jp
popa
or
or
jns
push
push
(bad)
call
jecxz
aam
imul
inc
aaa
mov
sub
movs
js
add
jmp
add
js
retf
pop
push
outs
or
inc
rcl
pop
push
pop
dec
and
xor
pop
jl
fdivr
xchg
cmp
xor
push
cmp
jbe
cmp
repnz
inc
cmp
sub
std
leave
fld
dec
das
cli
sbb
dec
out
je
xchg
xor
add
outs
test
xor
pop
adc
ins
js
inc
ror
ret
xor
xchg
inc
and
jns
or
cmp
loopne
push
xor
popa
dec
sbb
adc
adc
sbb
(bad)
in
cwde
lock
addr16
xchg
fadd
movs
ret
mov
xchg
lea
popf
jbe
or
(bad)
cli
push
mov
cmp
lods
dec
xchg
mov
xlat
movs
repnz
adc
icebp
icebp
adc
jecxz
pushf
add
imul
shl
(bad)
jo
adc
sbb
fisubr
add
pop
popf
rcr
jne
shl
pop
or
sub
in
pop
call
lea
(bad)
inc
xlat
and
leave
fdiv
jne
jno
add
dec
dec
lock
sub
sub
cmp
out
xchg
jmp
aam
xor
push
loop
ds
popa
pusha
sub
xchg
sbb
ins
(bad)
loopne
sbb
out
fstp
xor
sub
add
mov
push
sub
adc
ins
arpl
nop
je
retf
repnz
lds
push
fs
mov
pop
out
or
enter
movs
xchg
fsub
ds
mov
(bad)
cmc
mov
pushf
(bad)
sbb
jo
xlat
jnp
mov
sti
(bad)
stos
adc
ins
ror
enter
adc
add
xlat
and
jmp
sub
mov
test
icebp
dec
(bad)
call
lods
mov
pusha
daa
aaa
inc
js
sar
pop
das
jecxz
scas
add
mov
sbb
loop
cmp
or
mov
jno
ret
and
(bad)
push
xchg
add
lea
pop
mov
shr
pop
sub
sahf
clc
add
mov
jmp
xchg
inc
adc
jno
fdivp
dec
loop
mov
cmp
cmp
add
xchg
and
pop
loop
add
add
mov
add
and
jb
adc
dec
jb
fiadd
or
sahf
or
or
or
cmp
pushf
push
and
(bad)
in
xor
aaa
dec
and
popa
push
sbb
and
xlat
cmp
out
loope
push
mov
loop
cmp
adc
mov
fucompp
movs
dec
ret
stc
add
sbb
idiv
iret
push
mov
ror
mov
clc
add
bound
push
jb
cmp
jb
out
push
inc
push
adc
into
lods
xchg
xor
(bad)
xor
hlt
xor
cmp
sbb
mov
push
test
xchg
add
dec
shr
cmp
inc
out
mov
mov
mov
ja
cmp
pop
xchg
dec
jmp
mov
hlt
cld
aas
jo
jecxz
retf
xchg
sub
sbb
rcl
out
test
pop
push
dec
mov
aaa
xchg
xchg
xor
jmp
gs
sbb
js
out
jo
out
jno
push
ret
adc
hlt
pop
sbb
aad
shl
aas
adc
shl
mov
mov
push
sahf
pop
aam
mov
sub
pop
fs
and
in
sub
fisttp
ret
mov
sbb
mov
push
xor
or
jnp
leave
frstor
dec
sub
test
inc
adc
cmps
icebp
xchg
inc
fadd
mov
ucomiss
movs
and
sub
aam
jl
inc
jl
push
adc
rcr
xlat
push
mov
adc
mov
sub
mov
cmps
push
loop
mov
sbb
cmp
shr
add
in
pop
jmp
sbb
and
or
or
mov
in
fucomi
or
add
bswap
or
lods
pop
pusha
lahf
or
repnz
rcl
ret
add
nop
rol
mov
add
popf
xor
outs
cmp
ja
ret
pop
scas
addr16
inc
call
dec
rcl
pop
iret
xor
or
setg
test
xlat
and
cmps
cwde
loope
je
xor
sbb
repnz
out
or
dec
cmp
in
shl
cdq
adc
and
mov
psrad
xor
pop
sub
push
xor
mul
popa
rcr
nop
dec
sub
loop
pop
fmul
or
xlat
add
mov
inc
jb
test
dec
or
inc
sub
inc
mov
inc
sar
xor
mov
and
sahf
jb
gs
add
dec
mov
or
ja
mov
or
test
xchg
sbb
add
push
xchg
(bad)
mov
jl
repnz
stos
mov
mov
cmpxchg
pop
jo
das
dec
pop
loop
jbe
imul
and
das
pushf
je
ss
pop
ins
rol
mov
sbb
jecxz
sub
call
adc
inc
loopne
dec
jmp
or
cmp
or
xor
mov
inc
outs
add
lock
jmp
ins
push
add
in
jge
movs
sahf
sub
jle
lds
daa
arpl
dec
(bad)
adc
test
dec
and
mov
lea
or
xchg
inc
xor
inc
sub
inc
mov
dec
or
jmp
jmp
and
inc
ja
int3
mov
add
mov
fld
and
mov
pushf
add
or
ins
jno
and
js
mov
and
xor
mov
les
and
in
loop
sbb
and
xchg
add
test
xchg
jl
xchg
mov
movlps
(bad)
jns
or
push
push
jne
out
ds
add
xchg
and
xchg
movs
(bad)
into
add
add
shr
and
call
pop
adc
sbb
sub
out
push
or
sbb
jno
lea
mov
out
sub
daa
sub
jb
sub
jbe
scas
retf
push
arpl
push
pop
inc
cmp
sti
add
fs
fadd
jno
cmp
inc
sbb
inc
call
shr
mov
and
loop
daa
jno
cdq
or
loope
fcomp
cmp
repz
mov
xor
shr
lock
dec
xor
mov
imul
sbb
push
loopne
test
sub
movs
mov
call
mov
xor
adc
and
ret
sub
inc
cld
cmps
cmp
xor
rol
mov
jb
sbb
pop
(bad)
shl
cmps
mov
xchg
lock
mov
nop
inc
nop
xchg
repz
sbb
sub
sub
ret
or
sbb
sbb
fadd
sbb
sar
cmc
xor
dec
pushf
gs
mov
cmps
mov
sbb
add
dec
or
adc
pushf
int3
popa
movs
pop
mov
loope
aad
(bad)
ror
pop
sbb
inc
lock
sbb
fadd
xor
fs
add
daa
mov
mov
add
fdiv
ins
or
push
xor
mov
push
push
pop
nop
dec
aaa
jle
xchg
popa
inc
retf
retf
mov
add
adc
retf
mov
jg
sbb
mov
sbb
icebp
dec
cmp
pop
jp
xchg
fiadd
xchg
(bad)
fadd
pop
mov
retf
sbb
cli
shl
test
inc
mov
ret
jmp
add
test
loop
jbe
out
and
shl
mov
into
jmp
(bad)
out
pusha
mov
lods
es
rcl
pop
punpckhbw
xchg
lock
popa
aaa
and
inc
psubsb
jbe
add
out
in
das
jecxz
aaa
or
or
cmp
lds
jbe
cmp
and
and
mov
pop
ficom
cmp
adc
mov
ror
and
mov
loopne
ret
jmp
xor
pop
icebp
jo
sub
cmp
loope
fadd
pushf
rcl
icebp
dec
pusha
je
out
mov
aaa
jo
adc
sub
push
mov
lods
fidivr
dec
scas
xor
(bad)
call
xor
bound
pop
jb
and
mov
cmp
imul
cli
lods
ret
pop
enter
push
or
push
xlat
ret
ins
(bad)
lods
loope
mov
inc
pop
and
inc
xor
xor
and
xor
lock
arpl
mov
mov
ss
inc
scas
pop
or
or
sub
shl
out
or
popf
jns
add
inc
adc
push
jo
arpl
in
les
adc
jb
cmp
pop
icebp
gs
mov
cmp
(bad)
and
pop
call
sti
std
loopne
mov
jmp
lds
sbb
nop
aam
arpl
test
sbb
arpl
lods
push
pop
fmul
mov
dec
outs
sbb
out
dec
dec
in
pusha
jne
test
pop
mov
popa
ror
inc
inc
in
mov
cs
inc
add
(bad)
in
test
or
sbb
mov
sub
aam
add
add
shl
das
mov
out
adc
fmul
imul
lods
out
inc
test
xor
push
(bad)
nop
out
push
daa
jecxz
movs
or
arpl
outs
push
xchg
or
rol
pop
jo
enter
pop
movs
scas
mov
xor
dec
xchg
pop
ret
xor
dec
push
aaa
les
js
cwde
adc
sbb
mov
dec
js
enter
mov
or
and
enter
inc
imul
xchg
xlat
cmp
pusha
and
imul
retf
or
sub
inc
adc
out
cmp
inc
loope
les
or
mov
add
mov
div
mov
out
xor
sahf
adc
and
add
sub
jge
dec
jmp
mov
loop
add
test
xchg
pusha
pop
in
mov
inc
jecxz
rcl
pop
sub
push
fsubr
push
pop
mov
sti
out
and
test
das
push
pop
iret
int3
add
shr
movs
push
dec
(bad)
shr
popa
and
mov
xchg
imul
pop
repnz
ins
test
inc
nop
rol
jo
hlt
dec
cmp
lods
js
sub
or
pop
out
mov
sbb
pop
mov
jno
hlt
rol
push
clc
cmc
mov
cmp
mov
pop
inc
shrd
into
adc
sub
test
add
(bad)
jecxz
jnp
nop
jg
shl
or
sbb
cmp
test
rcr
shr
popa
lods
clc
jl
out
add
loope
inc
nop
and
es
mov
pusha
jo
dec
xlat
ret
arpl
mov
xor
jmp
bound
inc
lods
and
outs
adc
movs
loope
and
add
push
stos
ins
loop
ret
adc
jmp
sbb
test
and
jmp
loope
sbb
cmp
jb
add
jbe
xor
push
js
rol
add
cmp
rcr
and
cmc
jo
gs
scas
arpl
or
and
in
loope
test
(bad)
loopne
cmp
add
lock
jne
adc
nop
loop
push
js
sub
xor
pop
mov
sbb
inc
push
addr16
push
push
mov
add
sub
in
fwait
add
mov
xor
add
stos
call
gs
adc
adc
pop
test
out
sub
push
mov
mov
ds
adc
mov
cld
sub
add
sbb
mov
xchg
out
movs
cmc
ret
push
out
test
mov
push
push
or
loopne
adc
jo
mov
jmp
and
test
js
pushf
mov
cmps
pusha
movs
jnp
dec
je
add
icebp
inc
vmovaps
add
sbb
mov
adc
mov
or
mov
mov
pop
ror
jne
xor
std
pop
cld
add
xchg
retf
(bad)
xchg
add
sub
xor
dec
pop
or
(bad)
xchg
scas
push
es
sbb
ja
ja
ret
and
cli
int3
mov
bound
nop
push
mov
or
push
repz
sub
mov
cmp
bound
sub
loop
pushf
sbb
sub
cmps
fcomp
inc
push
stos
and
jae
mov
add
fidivr
sbb
in
lock
or
jne
hlt
mov
not
fsubr
sbb
out
cmp
pop
cli
icebp
mov
add
cmp
shl
cmp
repnz
call
cmp
adc
pop
jmp
adc
movs
scas
dec
xchg
and
shr
clc
shr
cmp
cmps
inc
test
loopne
dec
jne
mov
mov
mov
mov
leave
jmp
test
lds
retf
pop
iret
jmp
mov
mov
stos
jno
cdq
xchg
sbb
push
sub
mov
dec
mov
jnp
jmp
push
(bad)
jo
loopne
mov
mov
pop
xchg
add
test
add
add
fist
or
rcl
addr16
fs
pop
mov
mov
in
mul
inc
test
psubsw
loopne
adc
cwde
jp
or
xchg
popa
sub
fsub
ins
test
cwde
adc
jnp
add
(bad)
mov
adc
pop
cld
sub
cdq
sub
sub
mov
fdivr
add
jo
shl
aam
pop
pushf
mov
mov
ja
mov
mov
pop
das
sbb
in
push
mov
leave
shr
scas
fwait
call
and
mov
retf
not
lods
mov
cmp
mov
sbb
pop
dec
dec
xor
mov
lods
cmp
daa
pop
leave
shl
lds
sub
je
push
jbe
xchg
mov
or
leave
ret
xchg
mov
mov
sbb
cmp
cmp
mov
lods
ja
sub
sbb
inc
mov
inc
xor
retf
inc
inc
or
fidivr
cmp
shl
push
sbb
js
aad
repz
mov
gs
fldl2t
mov
pop
push
sub
imul
test
cmc
xchg
mov
cmp
push
sub
sub
jno
aad
cmp
sub
jne
xchg
aad
cmp
lods
inc
and
inc
dec
inc
xor
(bad)
cmp
xchg
xor
sub
push
cmps
daa
loope
rcr
gs
or
sahf
gs
das
adc
cmp
cwde
ret
mov
jmp
pop
retf
pop
add
outs
cmp
mov
mov
(bad)
fsub
das
mov
adc
and
jo
mov
mov
pop
mov
jno
mov
add
xor
test
aaa
aad
test
adc
rcr
jge
rcr
scas
inc
sub
lahf
cmp
or
imul
test
(bad)
ror
xchg
adc
mov
and
out
inc
mov
add
inc
inc
out
dec
or
pop
sbb
xor
icebp
push
movs
mov
or
sbb
push
pusha
pop
pop
and
add
(bad)
cmp
fimul
cmps
mov
xor
sbb
sbb
test
test
sbb
jle
and
push
sub
fistp
mov
xlat
loopne
loopne
inc
cmp
jecxz
popa
popf
sub
mov
test
xlat
test
fsubr
sbb
fdivr
ins
pop
xor
ror
stos
jb
test
or
pop
pop
into
adc
daa
sbb
sbb
push
into
inc
sbb
sbb
mov
pushf
push
retf
pop
adc
cmc
sub
es
pop
dec
pop
ins
mov
cmp
inc
test
call
jecxz
nop
jno
add
xor
push
(bad)
aaa
inc
into
jmp
fwait
sbb
jb
pop
cmp
mov
push
mov
pop
ffree
fst
ins
nop
sbb
jle
in
aaa
clc
add
mov
mov
inc
ins
add
pop
mov
jmp
cmp
outs
movs
test
test
popf
cmc
dec
popa
and
and
jns
mov
xchg
sbb
mov
jmp
add
ret
adc
cwde
ret
xor
ror
(bad)
add
ror
jl
addr16
mov
lds
sbb
sub
adc
jo
icebp
movs
xchg
cmp
inc
sbb
gs
jb
pop
jo
adc
adc
dec
pop
loopne
cmp
les
dec
dec
xchg
js
lock
jne
sbb
sahf
test
adc
cmp
or
inc
clc
(bad)
sahf
sub
stos
push
xchg
rcr
push
sbb
loope
stos
sbb
(bad)
int
adc
xchg
cmp
stc
movs
dec
inc
dec
(bad)
xchg
and
rcl
xor
jnp
inc
jp
xor
lods
push
test
outs
in
arpl
pop
add
or
shr
test
add
mov
jge
sbb
das
imul
or
(bad)
popa
mov
or
push
arpl
loopne
daa
mov
in
icebp
ret
sub
inc
add
or
fld
jmp
dec
js
jno
jnp
jno
mov
jo
xchg
mov
inc
std
repnz
ret
xor
fidiv
push
je
sbb
int3
sbb
shr
mov
add
jo
dec
popf
cmp
jb
cmps
xor
lods
add
cmp
sbb
mov
mov
mov
inc
retf
pop
cmp
jns
lds
sub
jle
das
sbb
xchg
add
xchg
fsub
imul
sti
sub
adc
pop
and
ss
ja
icebp
dec
(bad)
lock
adc
(bad)
cmps
hlt
pop
pusha
dec
ds
jmp
jo
inc
jmp
aaa
enter
lods
loop
dec
daa
sbb
dec
sbb
or
shr
movs
ret
nop
sub
clc
inc
dec
push
push
or
add
cmp
arpl
sbb
(bad)
in
sub
cmps
pushf
push
cdq
retf
pop
lods
push
(bad)
retf
xor
out
outs
xchg
mov
sbb
movs
gs
inc
add
push
push
retf
cmp
dec
(bad)
or
mov
pop
mov
push
enter
sub
cmp
or
jmp
cmp
inc
push
jmp
xchg
test
dec
stc
add
loopne
int
movs
test
cmp
jns
js
mov
retf
pop
adc
push
lock
pusha
test
cmp
(bad)
push
shl
push
shl
mov
mov
sub
cmp
sahf
inc
jmp
imul
xchg
enter
loope
jmp
jo
inc
adc
xchg
add
inc
jecxz
or
adc
lock
lock
arpl
das
xor
push
push
ror
cld
popa
jmp
(bad)
or
dec
xor
sub
push
adc
scas
lds
sub
shl
push
das
lea
lahf
fcom
icebp
test
and
add
xchg
cmps
pop
scas
dec
ins
dec
clc
or
loope
adc
outs
sub
loop
sbb
(bad)
jo
(bad)
sbb
clc
and
mov
mov
and
push
push
test
bound
in
popf
pop
add
jnp
inc
dec
push
iret
add
cmp
loope
nop
(bad)
addr16
(bad)
sti
mov
sbb
xchg
jno
loopne
jnp
in
dec
sbb
js
and
jmp
add
(bad)
xor
and
jge
push
(bad)
aam
xchg
fcomp
pusha
jl
xor
and
add
arpl
inc
sbb
mov
mov
(bad)
call
lock
loop
lock
aad
pop
fnstsw
aaa
(bad)
popa
sub
sbb
hlt
loopne
stos
and
es
mov
enter
retf
cmp
xor
or
mov
pop
xchg
jecxz
sbb
push
mov
mov
adc
push
movs
xor
add
test
or
inc
dec
xor
xor
cmp
aas
and
mov
jbe
inc
adc
pop
or
lods
mov
xchg
adc
xchg
jge
adc
sahf
push
xor
pop
cmp
cld
sub
arpl
push
mov
add
lods
add
imul
mov
lea
add
add
sub
inc
popf
ret
or
outs
add
mov
pop
cmp
mov
fild
push
cmps
sbb
daa
je
xor
fwait
sub
cmp
mov
xor
add
sbb
cmp
cmps
pop
lock
xchg
add
pop
ror
sbb
sbb
inc
cmp
or
push
or
daa
add
fidiv
mov
push
and
or
mov
shl
or
mov
pop
(bad)
loope
cs
mov
movs
dec
aad
push
mov
je
cmp
sysenter
and
and
mov
fcomp
dec
shr
push
dec
jns
fmul
adc
lods
dec
dec
aas
jne
sbb
loopne
xchg
xchg
xchg
dec
fucomi
cmp
inc
arpl
daa
xchg
xchg
and
xchg
dec
add
xor
dec
data16
outs
jne
cmp
mov
mov
mov
sar
mov
test
jb
xor
mov
ss
cmp
lock
imul
ins
dec
and
xchg
pop
iret
inc
pop
dec
mov
mov
leave
js
sbb
mov
adc
inc
inc
pusha
lea
mov
inc
cmp
push
and
jmp
shr
add
rol
add
xchg
xchg
jl
or
sti
mov
add
pusha
shr
js
lahf
cmp
xchg
pop
lea
sbb
jle
repnz
mov
daa
ret
pop
(bad)
pop
jecxz
sti
sbb
jmp
mov
and
les
sahf
test
fidiv
mov
dec
sbb
mov
outs
je
or
aad
xchg
aaa
test
inc
aaa
dec
shl
mov
pop
pop
(bad)
jnp
fidiv
sbb
mov
or
pop
ret
mov
and
ja
mov
das
cmp
mov
ds
mov
test
mov
and
(bad)
(bad)
out
xlat
loope
xchg
or
lods
jge
es
popa
add
xor
xor
jmp
neg
push
xchg
leave
lods
std
je
xchg
jmp
mov
xor
pop
jno
mov
or
outs
int3
jle
xor
mov
bnd
and
and
lods
mov
pop
dec
enter
loope
adc
sbb
lahf
xchg
jo
or
loopne
fwait
test
add
(bad)
hlt
fisttp
into
push
jno
std
retf
jnp
sbb
int
xor
inc
retf
push
push
(bad)
xchg
mov
sbb
lea
add
ffree
or
jmp
pop
pop
adc
cmp
mov
imul
sbb
in
or
dec
add
shl
jecxz
mov
sbb
ss
jmp
clc
mov
sar
call
push
push
xchg
cmp
push
out
test
fs
cmp
mov
popf
sub
retf
ret
cmp
jmp
dec
ins
mov
lock
sbb
mov
pusha
ss
push
popa
je
xchg
cmps
xchg
adc
leave
mov
inc
gs
and
sub
pushf
in
inc
test
xor
xchg
outs
dec
sbb
inc
cmp
xchg
mov
add
and
push
mov
iret
ret
dec
(bad)
or
xchg
daa
popa
jno
lods
sbb
sub
imul
in
jl
or
sbb
or
push
mov
imul
wbinvd
je
jo
add
out
push
sub
mov
pushf
xchg
mov
out
loopne
imul
scas
inc
test
xchg
repnz
push
mov
cmp
xchg
jmp
fdiv
sbb
xor
add
and
in
pop
stos
aas
sbb
jge
jecxz
pmulhw
or
ror
shl
clc
ja
addr16
ficom
add
ficomp
lods
push
sbb
jno
mov
cmps
cld
mov
les
push
or
outs
retf
push
pop
push
push
pop
and
adc
jmp
ret
call
fadd
cmp
jo
pop
(bad)
loop
(bad)
push
dec
xor
add
popf
mov
inc
sub
dec
mov
pop
repnz
aam
jns
fadd
inc
add
loop
mov
xchg
xor
sbb
out
in
inc
mov
daa
das
fwait
xor
xor
out
into
pushf
test
sbb
cmp
mov
xchg
aam
adc
popa
push
mov
adc
cmp
arpl
adc
into
sbb
mov
mov
jge
add
adc
mov
loop
pop
add
inc
out
rcr
scas
icebp
lock
inc
and
inc
inc
lea
lods
dec
pop
popf
pop
or
cmp
in
mov
adc
add
ja
je
sahf
xchg
push
push
pop
or
mov
call
xchg
sub
pop
popf
bound
gs
add
sub
in
add
movs
xchg
and
sbb
cmps
je
clc
dec
pushf
mov
fs
add
pushf
adc
arpl
xchg
mov
jmp
mov
xor
or
scas
ror
fadd
sbb
and
push
jmp
cdq
jae
pop
or
mov
push
lods
mov
les
rcr
jmp
push
or
push
sub
xchg
sbb
xor
push
js
push
xchg
shr
es
retf
xor
and
xchg
fcom
cmp
and
lock
or
les
inc
jmp
mov
cmps
cmp
jbe
or
call
pop
inc
pushaw
fstp
(bad)
stc
into
push
jp
pushf
pop
aas
ins
inc
mov
popf
cld
fdivr
adc
int3
das
push
xchg
sbb
sti
or
fdivr
js
xor
xchg
xor
out
ret
xchg
loop
adc
pop
stos
add
mov
inc
icebp
loope
test
sub
cmps
popa
add
sub
pop
lods
xlat
add
mov
xor
fistp
cmp
clc
pop
add
pop
add
xor
add
push
int
call
and
sbb
or
imul
ror
leave
add
out
pop
ror
and
push
xor
cli
cmp
or
push
repnz
and
xor
pusha
xchg
cmp
popf
pushaw
jns
rcr
dec
pop
mov
test
and
in
sub
lock
dec
ss
pop
lods
sbb
add
mov
rol
js
or
xor
xlat
adc
jge
movs
or
jae
pop
jle
aam
mov
push
hlt
call
cmp
cmps
mov
sbb
cmps
cs
jp
or
dec
ret
inc
jo
nop
push
add
adc
loopne
and
mov
sub
rcl
xchg
ret
rcr
inc
pop
dec
addr16
fs
dec
aam
add
loopne
js
loopne
push
fld
fs
push
xchg
mov
into
pop
fst
mov
(bad)
int3
or
addr16
ret
push
sahf
dec
sbb
outs
dec
cmp
jb
cwde
push
xor
cmp
mov
sbb
dec
push
movs
jmp
rcr
leave
add
pop
jae
inc
cmp
mov
xor
inc
inc
pop
sbb
inc
fst
mov
rcl
add
fild
add
inc
sub
sub
mov
push
sub
shl
adc
jmp
nop
add
sbb
movs
ins
inc
cmps
sbb
jl
dec
pop
adc
mov
xor
into
jmp
xchg
fld
inc
pop
dec
push
retf
xchg
dec
dec
mov
pop
popf
and
je
(bad)
add
add
jmp
data16
mov
or
xchg
rcl
les
pop
or
rcr
push
psadbw
dec
call
xchg
fucom
xchg
add
mov
sbb
sub
leave
loope
mov
movs
ds
adc
xchg
inc
push
pop
dec
je
sbb
push
or
sub
movs
outs
in
inc
push
mov
sbb
pop
ret
jno
leave
xchg
jecxz
jp
pop
or
mov
pop
bound
(bad)
jbe
sbb
jmp
mov
mov
cmp
jl
mov
jmp
sub
xchg
mov
movs
popa
popa
jns
and
jmp
jno
mov
das
fcmovnu
push
fcomp
hlt
and
enter
pop
mov
retf
nop
xchg
lds
dec
mov
aas
jo
clc
nop
xor
cmp
das
hlt
and
pop
push
mov
or
(bad)
faddp
and
jnp
popa
popf
xchg
mov
in
pop
mov
fidiv
push
div
cmc
out
dec
lods
xchg
sbb
dec
imul
sbb
add
or
je
ror
mov
mov
test
xor
out
daa
ja
sub
in
retf
into
sub
clc
mov
mov
push
outs
lds
jl
enter
es
add
push
inc
jnp
jb
sbb
es
or
cmp
test
dec
rcl
lods
sub
daa
adc
pop
jbe
mov
les
jbe
pop
rcr
sbb
xchg
gs
rcr
pop
rcr
cwde
rcl
adc
push
sub
lods
xchg
test
mov
push
rcl
sbb
daa
jo
push
ret
pushf
xchg
sbb
les
inc
sub
je
or
or
push
fild
sub
in
add
mov
adc
movs
or
jne
jl
mov
push
jae
dec
das
mov
movs
dec
and
cmp
inc
mov
sub
adc
lahf
adc
and
mov
movs
dec
scas
cmps
push
js
add
test
dec
enter
lock
ret
xchg
shr
pop
pop
scas
and
movs
xlat
test
rcl
xchg
lea
fs
add
fadd
inc
mov
add
pop
add
leave
imul
sbb
sbb
out
push
iret
xor
push
jecxz
xor
ja
pop
ror
mov
mov
iret
sub
inc
add
mov
pop
mov
in
add
cmp
outs
add
mov
and
sub
mul
adc
cs
add
xchg
jmp
mov
pop
mov
fstp
push
inc
cmp
push
add
push
addr16
pop
xchg
mov
mov
xchg
xor
xor
call
jae
loopne
pop
ret
mov
sar
sahf
pop
and
mov
inc
rol
push
pop
pop
mov
pushf
pusha
jge
cmp
or
and
stos
add
xchg
hlt
ins
iret
outs
sub
push
and
cmc
and
retf
arpl
js
lods
or
stc
jns
(bad)
sbb
xchg
and
lock
push
idiv
sar
ficomp
push
jl
(bad)
sbb
adc
test
stos
sbb
push
dec
cmp
sub
dec
test
sub
pop
les
sub
daa
push
(bad)
out
enter
les
sbb
add
push
in
shl
and
add
mov
in
outs
or
add
xchg
and
pop
popa
sub
rcl
inc
dec
xchg
fmul
popa
inc
enter
faddp
push
jns
dec
pop
xchg
sbb
(bad)
loope
pop
pop
cwde
fbld
pop
or
cmp
mov
pop
add
jp
rcl
pop
jns
jb
jmp
xchg
add
pop
jmp
clc
(bad)
sahf
mov
(bad)
dec
jmp
das
popf
sub
into
pop
inc
pop
or
pop
enter
jg
jbe
loope
pop
(bad)
mov
and
cmp
fs
aad
add
sbb
cmp
push
xor
popa
inc
pop
(bad)
adc
jp
mov
or
xor
(bad)
mov
lods
sub
xor
mov
push
pop
lahf
in
add
inc
add
aaa
(bad)
loopne
sub
call
fdivr
in
pop
js
ds
lods
inc
stos
and
loop
or
lods
imul
aam
pop
add
and
mov
mov
leave
jne
pop
call
(bad)
and
dec
mov
push
ret
add
aas
and
sub
popa
test
xchg
repz
mov
push
sbb
pop
jge
cmp
mov
xor
pop
mov
add
pop
pusha
test
into
ror
push
enter
imul
xchg
add
repz
lea
movs
dec
loope
xchg
add
pop
dec
xor
sbb
jno
in
mov
rcl
lods
sbb
jge
cmp
mov
pop
adc
xchg
pop
inc
jbe
and
sbb
imul
loop
add
xchg
enter
inc
or
data16
test
add
(bad)
xor
inc
jnp
inc
jbe
push
cmp
jo
jb
ds
pop
sbb
js
cmp
das
lock
jo
push
test
(bad)
dec
out
(bad)
mov
xchg
clc
lock
adc
mov
adc
mov
daa
loop
js
imul
mov
mov
loop
xor
scas
(bad)
(bad)
stos
pop
mov
xlat
(bad)
adc
dec
and
into
jecxz
cs
cmp
rol
mov
jno
inc
mov
fadd
mov
outs
mov
mov
je
sub
pop
cmp
ror
popa
dec
pop
sbb
aas
mov
int3
retf
sub
mov
repnz
sub
pop
dec
pop
scas
fwait
add
retf
cmp
gs
or
push
arpl
ret
cmp
push
out
inc
push
xchg
xchg
mov
aaa
mov
push
and
xchg
out
lods
mov
jae
and
sbb
mov
enter
hlt
fs
movs
mov
jmp
sub
enter
and
jb
mov
mov
popa
xor
pusha
or
push
cmp
push
loopne
adc
or
dec
inc
loope
jmp
loop
cmp
pop
mov
leave
inc
iret
aam
dec
xlat
xor
sbb
mov
xchg
push
mov
push
xchg
lock
in
ret
inc
jne
pop
sbb
and
lods
push
xlat
push
push
dec
adc
push
lahf
pop
jo
adc
(bad)
pop
and
enter
test
jmp
xor
ficomp
push
fstp
push
andps
xchg
add
cs
(bad)
cmp
push
push
push
cmp
aaa
sar
fadd
jbe
push
xor
loopne
das
pop
jmp
mov
sbb
pop
push
jns
and
out
ficom
adc
xlat
xor
sub
pop
das
push
mov
out
xor
pop
movs
test
call
dec
stc
xchg
pop
aad
push
ror
(bad)
xchg
push
sbb
lds
icebp
ror
ret
cwde
push
not
scas
jmp
mov
gs
mov
jns
fwait
div
dec
rcl
and
arpl
scas
addr16
scas
or
xchg
lahf
gs
mov
outs
jno
loop
leave
(bad)
xchg
retf
outs
sbb
push
mov
fadd
bound
jmp
or
and
mov
jno
pop
mov
add
dec
sub
mov
add
xchg
dec
rcl
or
outs
fstp
xor
push
in
rcr
fistp
adc
mov
push
sub
(bad)
repz
push
xor
inc
enter
push
mov
rcl
hlt
shr
or
cmp
cmp
pop
popa
xchg
cli
mov
push
jl
in
test
pop
call
cld
mov
fadd
test
jne
in
movs
in
add
push
or
jbe
pop
inc
or
dec
or
jp
(bad)
jne
xor
sbb
add
enter
repz
fsubr
aam
retf
imul
mov
lods
jo
sbb
jmp
nop
adc
adc
xor
pop
inc
jmp
mov
xchg
mov
add
ds
pop
xor
adc
lea
pop
pop
mov
xor
cmp
jmp
lock
out
pushf
mov
mov
fucomp
out
xchg
xchg
call
arpl
jmp
movs
shl
rcl
cmp
ror
wrmsr
ins
imul
add
sub
mov
push
or
or
xor
sub
push
jp
in
cwde
jo
in
jmp
test
or
popf
adc
lods
add
pop
jecxz
outs
xchg
call
std
lock
mov
rcl
(bad)
clc
es
out
leave
inc
addr16
enter
aas
mov
mov
mov
add
sub
and
scas
inc
dec
rcl
mov
(bad)
sbb
xor
or
jae
retf
xchg
ins
pop
sub
dec
outs
push
add
jg
pop
sahf
xor
fst
outs
dec
or
sahf
pop
(bad)
adc
sbb
sub
mov
jns
or
adc
jo
pop
lods
imul
or
mov
sbb
inc
fdiv
stos
or
loopne
push
add
inc
gs
push
and
popa
inc
out
aam
clc
cmp
pushf
jnp
push
mov
cmp
xor
bts
and
mov
clc
add
sub
adc
das
(bad)
push
mov
xor
xor
cmp
jnp
ror
adc
jns
div
or
fwait
rcr
sahf
jnp
in
leave
sar
or
jae
mov
sbb
and
test
mov
xor
ret
cmp
pop
scas
xchg
shl
mov
(bad)
out
mov
inc
push
inc
aas
or
inc
inc
xchg
(bad)
repnz
jmp
mov
sar
movs
arpl
sbb
inc
jo
inc
add
jns
vpunpckldq
je
xchg
dec
add
and
push
xchg
dec
jecxz
and
xor
call
outs
shl
les
push
fistp
dec
aaa
hlt
push
jo
mov
inc
pop
outs
popf
pop
outs
pop
addr16
sbb
mov
mov
fninit
sbb
sbb
inc
jecxz
addr16
cwde
fadd
in
and
mov
mov
jmp
ret
enter
adc
and
dec
dec
cmp
adc
loopne
jo
(bad)
cmps
jp
data16
adc
jmp
cmp
xchg
add
cmp
repz
sar
add
cmp
jmp
loopne
push
or
sub
dec
sbb
mov
jbe
pushf
xor
mov
sbb
xchg
loop
cmp
lods
dec
or
(bad)
pushf
(bad)
xor
cmp
imul
xchg
stos
mov
into
xchg
xchg
jmp
(bad)
shl
nop
adc
inc
int
push
mov
dec
adc
pop
ja
leave
imul
xchg
and
outs
mov
mov
hlt
js
packsswb
fsubr
inc
dec
mov
xchg
jo
or
xchg
mov
ret
jne
iret
mov
or
mov
popa
pusha
cmp
sub
inc
mov
sar
adc
rol
lock
xchg
fld
mov
test
fimul
(bad)
das
inc
sbb
adc
push
xor
retf
push
cmp
aad
fs
push
mov
inc
mov
cmp
and
and
inc
add
daa
int3
adc
aam
or
mov
into
pop
cmp
add
mov
movs
xor
int3
pslld
sahf
icebp
jbe
pop
cmp
sbb
popa
xchg
mov
or
ror
adc
popa
ins
pop
inc
mov
sbb
ret
daa
dec
mov
mov
ror
loopne
sbb
lock
repz
xor
mov
fimul
xor
xor
push
imul
dec
add
and
cmps
shl
xchg
loop
test
pop
jp
and
je
xor
mov
in
add
in
sbb
mov
loopne
mov
out
sbb
outs
lods
cmp
push
cmp
add
pop
xor
test
int3
loope
or
xor
xchg
pop
retf
retf
sub
call
push
hlt
inc
push
or
scas
or
xor
addr16
rcr
retf
popf
movs
in
mov
out
repz
ja
sub
adc
nop
test
jo
mov
mov
lods
fimul
adc
inc
pop
movs
push
push
and
xor
cli
repnz
popa
rcr
out
or
movs
xor
xchg
adc
inc
jmp
(bad)
fdiv
fs
inc
daa
fcomp
adc
or
sbb
outs
in
pop
add
jns
or
lods
js
fld
aam
ja
mov
loope
mov
loopne
movs
xor
mov
jecxz
push
imul
sub
out
adc
cmp
pop
inc
cdq
mov
loop
cld
push
dec
and
mov
and
cdq
jnp
dec
out
adc
inc
sub
mov
mov
std
adc
popa
jo
ret
pop
dec
out
jmp
xchg
test
popf
je
cmp
add
(bad)
sbb
cmps
cmp
cmp
add
add
pop
lods
adc
arpl
or
or
sub
dec
sub
add
push
or
add
xor
mov
fld
push
addr16
sbb
mov
jb
les
pusha
icebp
(bad)
inc
mov
sbb
mov
sbb
mov
gs
cmp
aaa
jae
inc
add
mov
xchg
adc
je
js
cmp
mov
ret
xchg
aad
xor
mov
mov
fldenv
lods
jne
add
pop
inc
or
cmp
lock
lods
test
push
sar
cmp
mov
and
xchg
jo
arpl
test
stos
loop
stos
mov
jmp
mov
loop
imul
cmps
sub
xchg
jo
cmps
add
call
js
aas
mov
loop
test
(bad)
js
loope
cmc
pop
cmp
lock
call
dec
addr16
cmp
aad
xor
mov
dec
sbb
popa
call
ficomp
or
add
repnz
mov
sub
push
mov
jl
sbb
leave
call
push
xor
dec
idiv
ret
xchg
jle
jmp
add
ret
loop
arpl
sub
call
push
pop
jmp
push
mov
pop
(bad)
ds
aam
mov
shl
sbb
in
jno
sub
jecxz
xchg
jo
adc
mov
push
adc
pop
nop
pop
test
inc
xchg
rol
mov
mov
gs
shr
out
into
cli
ja
mul
sbb
outs
inc
pushf
xchg
fild
jmp
outs
outs
jmp
inc
jne
add
mov
push
pop
adc
push
dec
sub
add
inc
pop
inc
push
mov
jo
movs
shl
inc
dec
ret
or
lock
icebp
jge
lock
xchg
or
je
jmp
stos
and
xor
xchg
shl
add
adc
cmp
clc
js
push
mov
out
sbb
les
lock
pop
or
loop
daa
ja
adc
bound
repz
sar
push
push
adc
mov
jnp
loope
xchg
out
sub
(bad)
mov
aad
mov
(bad)
aad
and
xchg
out
add
gs
ins
jns
(bad)
add
out
mov
mov
pusha
cmp
outs
movs
in
or
cmp
dec
sbb
xor
lsl
test
out
aad
add
shl
(bad)
ss
jp
cmp
sbb
cmp
jmp
jge
loope
adc
ins
sti
enter
sbb
outs
test
mov
adc
xchg
jne
repnz
pop
cs
inc
mov
xlat
xchg
jae
jmp
es
sub
or
test
mov
push
pop
pop
(bad)
lock
dec
loopne
pushf
gs
loope
outs
test
sahf
pop
xchg
inc
jp
xchg
jns
xchg
pop
jle
pop
cmp
mov
sub
dec
ja
xchg
(bad)
mov
(bad)
push
(bad)
test
sbb
hlt
ins
xor
sbb
enter
cmp
hlt
adc
xchg
iret
pop
mov
stos
mov
mov
ins
mov
lods
lea
out
ins
fsubr
add
mov
jp
cmp
xlat
ret
jns
pusha
jecxz
jle
cmps
lock
add
mov
and
jns
rcr
cli
fninit
dec
push
cs
call
pop
inc
xchg
cmc
mov
shld
addr16
movs
into
mov
pop
jb
inc
call
enter
or
mov
sub
mov
and
inc
aad
xchg
mov
xlat
mov
mov
sar
xor
call
or
ja
dec
cld
ins
cli
nop
inc
push
fistp
dec
and
xchg
cs
cmp
jmp
jo
jmp
mov
cmp
inc
les
lods
jnp
lock
pop
and
and
push
test
mov
push
pop
psubsw
and
gs
test
push
shrd
clc
dec
fdiv
or
adc
ret
cmps
push
test
mov
in
push
mov
inc
loopne
add
nop
xchg
fist
jecxz
push
inc
cmps
cmp
sbb
into
sbb
test
add
dec
mov
or
and
loop
mov
cmp
sub
enter
xchg
iret
ret
add
cmps
clc
add
jo
dec
sbb
xchg
cmp
or
loope
add
cli
imul
in
add
xchg
out
xchg
arpl
mov
in
adc
leave
push
jo
sbb
xchg
adc
dec
adc
lea
mov
pop
lock
(bad)
sub
into
fisttp
imul
pushf
mov
test
adc
cmp
mov
sbb
mov
mov
sub
into
or
pushf
into
inc
out
ds
shl
dec
add
mov
and
int
clc
xchg
xchg
sub
jae
rcr
mov
jnp
xor
or
loope
out
ret
jns
sbb
lods
or
cmp
mov
inc
rcr
mov
arpl
test
sbb
(bad)
add
xchg
sub
push
mov
adc
out
retf
add
(bad)
js
mov
push
loope
jno
jmp
je
movsx
sbb
or
cmp
mov
fstp
pop
inc
fist
cmp
(bad)
out
js
add
push
test
js
dec
lock
inc
cmps
push
das
fadd
adc
jo
xor
mov
and
or
enter
cmp
pop
mov
mov
pop
inc
leave
mov
cmps
je
loope
dec
cmp
arpl
sbb
outs
js
mov
adc
shr
sub
mov
lock
mov
or
test
pop
push
xor
mov
shl
add
scas
lods
ins
lock
loope
sbb
push
mov
imul
mov
sub
loopne
addr16
rcr
ds
fcmovbe
mov
lock
add
cmp
xor
jo
jb
lds
xchg
fs
xchg
mov
xlat
test
js
icebp
add
loopne
sub
shr
mov
ins
sub
cld
das
inc
sub
dec
packsswb
cmovbe
xor
mov
mov
and
xor
jns
(bad)
or
fsub
inc
daa
or
movs
push
mov
mov
lea
or
(bad)
or
add
ret
retf
pop
pop
leave
adc
outs
sbb
lahf
fadd
imul
xor
popa
lds
or
push
ja
and
in
xor
loop
jp
pop
jae
ret
mov
xor
in
jne
add
mov
push
popa
sub
push
inc
dec
cs
pop
sbb
pusha
jmp
pop
ins
(bad)
mov
scas
movs
shl
or
xchg
push
sti
push
push
add
stc
dec
pop
or
lea
aad
mov
and
or
pushf
xchg
mov
(bad)
jmp
jmp
into
add
push
mov
sbb
dec
jle
mov
sbb
jne
or
popf
mov
push
pop
push
aaa
add
push
inc
cmps
xchg
mov
mov
push
mov
sbb
add
fiadd
xchg
call
inc
pop
test
imul
cmp
jmp
cmp
rcl
dec
inc
mov
add
pop
ret
sar
popf
(bad)
sub
mov
ins
outs
lea
retf
dec
xchg
lahf
(bad)
xor
sbb
pop
xor
loopne
xlat
cmp
push
test
inc
fadd
(bad)
inc
outs
sbb
mov
cmp
je
push
jecxz
add
mov
fsub
pop
push
xchg
in
sbb
adc
fldenv
mov
push
sbb
add
cmp
inc
mov
adc
xchg
jbe
sbb
mov
cli
xor
mov
dec
xchg
mov
xchg
call
scas
add
aad
mov
out
pop
mov
gs
xchg
add
jmp
sbb
xor
pop
rcl
fs
sub
stc
aas
add
movs
aaa
adc
xchg
fld
into
mov
stos
dec
aam
daa
inc
(bad)
aam
cmp
mov
mov
add
test
or
xor
inc
xor
cmc
ss
or
mov
xor
push
gs
pop
nop
lock
pop
adc
call
sbb
je
or
sub
push
push
pop
mov
or
mov
mov
or
add
out
loop
add
sbb
dec
bound
dec
push
adc
loop
ret
arpl
dec
jecxz
dec
loop
jno
adc
mov
adc
sahf
cmp
jp
lods
test
jnp
and
pop
shl
test
xor
fisubr
sbb
dec
mov
sub
push
in
fwait
add
shl
test
mov
add
adc
loopne
xor
in
mov
fs
dec
arpl
cmp
shr
sub
mov
adc
dec
mov
cmp
mov
pushf
pop
dec
xlat
test
wbinvd
xor
loop
pusha
sub
ja
jmp
pop
pop
paddusb
les
lock
sub
iret
ins
xor
js
rcl
xchg
jae
cmp
xor
xor
mov
pop
sbb
gs
ja
pushf
or
cmp
mov
ror
xchg
(bad)
or
adc
lock
daa
cdq
add
sahf
sub
jne
mov
fstp
mov
add
xchg
pop
sbb
in
mov
cmc
out
jp
mov
xchg
mov
fsubp
imul
js
or
ret
test
mov
shl
fnstenv
push
mov
mov
je
idiv
jno
lock
rcr
add
or
je
mov
jb
aam
lods
lods
mov
aaa
or
shl
pop
pop
mov
imul
ret
xchg
or
rol
scas
das
dec
adc
popf
pop
fidivr
or
ins
cmp
scas
jns
mov
pop
jge
sahf
test
pop
loope
and
pop
add
mov
hlt
rcr
pop
cmps
xor
imul
sub
add
outs
sbb
mov
inc
dec
jp
pop
mov
pop
std
jmp
loopne
mov
pushf
lock
test
lock
jo
add
add
ret
add
pop
ja
sub
movs
and
arpl
adc
xchg
(bad)
rol
cmp
mov
loopne
xor
push
push
cmovs
and
aad
arpl
jne
out
adc
cmp
xor
xchg
and
cmp
add
loopne
test
cmp
mov
outs
sbb
fidivr
mov
loopne
sbb
xchg
adc
dec
mov
fwait
xor
cmc
sbb
pop
xor
popa
ss
je
jmp
sub
and
jge
jae
shl
xchg
cmp
lods
add
imul
lock
test
div
leave
push
shl
xchg
jo
jle
push
pop
fnstenv
jne
sbb
dec
cmp
neg
mov
jmp
inc
push
push
pusha
and
xor
fld
or
xchg
xlat
or
cmp
fsub
mov
movs
jo
and
mov
add
arpl
out
loop
pushf
mov
ret
inc
add
daa
in
ror
nop
movs
into
outs
shr
mov
or
jne
adc
ret
add
jl
sar
jo
popf
or
imul
or
cli
(bad)
loop
mov
aaa
pop
sbb
or
int3
cmp
faddp
sbb
pop
pusha
icebp
add
push
pop
and
push
or
lods
xor
push
jl
sub
push
xor
add
retf
jne
add
fstp
push
(bad)
cmp
push
pop
outs
mov
arpl
push
outs
mov
jmp
out
sub
and
(bad)
ret
dec
xchg
in
cmp
or
pop
xchg
xlat
ins
popf
je
(bad)
xchg
ret
ins
mov
inc
into
aam
push
out
xchg
mov
test
xor
cmp
mov
fbstp
iret
cmps
outs
mov
or
mov
cmp
fs
retf
ret
xor
adc
mov
sbb
mov
or
cdq
aad
popf
jne
arpl
fld
inc
loop
jae
jecxz
aam
pusha
aam
cli
mov
js
mov
fdivp
xchg
xor
in
mov
into
imul
add
je
loop
popf
inc
adc
arpl
jmp
dec
das
dec
or
retf
fld
sub
loope
cdq
imul
jbe
xchg
push
add
loope
inc
rcr
clc
mov
xor
test
xchg
push
ins
cmps
mov
sub
sub
cmp
xchg
push
lock
jns
mov
sbb
fcomp
cmp
jle
adc
push
and
mov
jne
add
or
sbb
add
mov
cmps
push
add
adc
lahf
cmp
lock
pop
xor
loopne
sub
nop
cmps
cmp
cdq
or
xchg
or
adc
inc
xchg
test
cmp
lods
push
cmp
shl
and
test
mov
and
repnz
or
add
das
or
pop
ja
xchg
inc
outs
cmp
push
jne
xor
and
xor
jp
inc
xchg
stos
test
or
xor
dec
and
popf
hlt
add
cmps
sahf
lods
mov
test
sub
(bad)
sub
(bad)
sbb
retf
mov
inc
sbb
aam
mov
mov
xchg
jne
outs
cmc
les
sbb
scas
inc
jo
or
imul
pop
xlat
add
push
mov
aam
ds
aaa
inc
das
jecxz
xchg
inc
ds
stos
rcr
pop
fsubr
or
cli
aam
push
or
xor
jecxz
call
mov
sti
mov
mov
pop
ins
xor
mov
push
rol
pushf
add
add
pushf
or
add
test
and
or
jbe
movs
sub
sub
les
push
mov
mov
or
xchg
retf
adc
js
add
retf
jmp
mov
lods
movs
fsubr
xchg
sbb
xchg
jo
jmp
push
mov
dec
and
cmp
cmp
jg
xchg
sub
xor
rcr
lods
add
push
xor
leave
shl
mov
outs
jno
xor
push
loopne
lods
stos
pop
jbe
push
dec
dec
inc
xor
jo
or
cli
xlat
push
sbb
jo
and
push
jmp
seta
mov
arpl
adc
adc
popa
add
sbb
ret
rcl
add
and
jmp
fidiv
test
and
out
add
cmp
iret
push
loop
ror
(bad)
dec
arpl
in
outs
hlt
pop
jle
push
mov
je
xchg
adc
or
aaa
mov
push
movs
dec
pop
ror
jl
ficomp
hlt
xor
imul
jo
lahf
out
sub
jmp
pop
mov
sbb
xchg
xchg
out
jp
call
dec
mov
push
sbb
popa
dec
mov
mov
fiadd
add
popa
aaa
xchg
mov
dec
mov
loope
mov
ja
and
dec
lods
and
(bad)
(bad)
cmp
ins
xor
or
jecxz
not
push
mov
rol
mov
mov
mov
repnz
jb
(bad)
jg
add
xchg
xor
jbe
test
add
pop
mov
gs
psubd
pop
and
pushf
test
jecxz
sub
stos
aam
jns
mov
push
dec
push
cmp
sub
cmp
or
arpl
dec
ds
cmp
jl
ret
push
cmp
data16
aad
pop
femms
pop
xchg
leave
fst
mov
enter
adc
dec
mov
mov
cmp
rol
movs
or
mov
popf
cmps
iret
jle
adc
stos
cmp
jecxz
add
aas
sti
xor
(bad)
adc
inc
adc
xor
jnp
stos
add
jp
or
mov
das
fnstsw
loope
hlt
mov
inc
xchg
mov
cmp
sahf
inc
push
mov
pop
sbb
ss
js
mov
ss
adc
mov
mov
inc
mov
shr
add
xchg
jmp
mov
mov
fiadd
pop
cmp
sbb
fisubr
adc
sbb
inc
sub
imul
ret
xor
pop
into
jno
rcr
inc
out
inc
or
dec
push
test
inc
or
or
jl
shl
mov
cmp
dec
js
xor
push
sbb
dec
push
jae
(bad)
sub
adc
and
daa
sub
rcl
movs
inc
xchg
push
addr16
adc
ret
jb
cmp
jb
out
movs
xor
cmp
outs
cmc
mov
xor
inc
sbb
xor
(bad)
fucomip
xchg
or
push
mov
retf
daa
mov
test
fs
fld
add
and
add
sub
jo
xor
xchg
or
or
add
repnz
cmp
jne
xchg
jp
pushf
or
movs
add
pop
rol
mov
je
jge
push
pop
push
mov
add
lea
into
mov
pushf
sub
inc
popf
loop
fs
mov
sbb
push
clc
popf
and
retf
mov
fmul
cmp
stc
or
sbb
loope
xchg
xor
or
in
jnp
retf
sbb
sbb
inc
and
add
fidivr
jp
leave
loope
sbb
sbb
fmul
sti
sbb
pop
add
jbe
inc
inc
xchg
sbb
mov
add
xchg
sbb
movs
mov
mov
frstor
or
add
add
add
cmp
pushf
lds
push
dec
dec
adc
pusha
xchg
sbb
shl
test
aam
test
pop
push
jmp
push
imul
leave
aam
xchg
loope
call
add
js
ja
fwait
push
lods
pop
pusha
test
dec
inc
sbb
pop
xchg
or
sbb
xchg
push
mov
out
adc
jne
nop
jbe
pusha
jo
mov
imul
in
pop
fs
jmp
rol
gs
sbb
mov
sbb
retf
repz
test
into
(bad)
xchg
xchg
neg
add
jl
push
inc
dec
mul
test
cmp
repnz
mov
push
clc
xchg
sbb
lds
jo
jp
xchg
popa
in
ret
or
mov
gs
test
inc
(bad)
in
jmp
xchg
xlat
mov
ds
cmp
push
lea
push
add
stc
test
cmps
add
ss
push
dec
sbb
bound
pushf
add
inc
stos
jns
xor
inc
ins
ss
ret
cmps
repz
mov
pop
add
mov
mov
ins
stos
movs
pushf
and
adc
ret
inc
mov
jmp
push
pop
(bad)
retf
jb
mov
pushf
popf
and
test
cmp
je
mov
aaa
and
lahf
xor
mov
or
push
push
in
and
fst
das
rcl
inc
loopne
xor
fstp
es
ins
leave
shl
sub
(bad)
fimul
push
sbb
les
mov
mov
ror
js
daa
or
leave
jecxz
popa
(bad)
and
jno
xchg
aaa
test
xlat
xchg
dec
xchg
dec
add
push
add
rol
test
cmp
xchg
xchg
mov
aaa
aam
jb
mov
repz
fldenv
add
xchg
jecxz
sub
loope
nop
shl
or
sub
repz
out
dec
fld
mov
xchg
mov
or
enter
push
adc
cmp
or
cmp
or
xchg
cmp
push
push
inc
addr16
cdq
dec
pop
inc
es
out
lods
mov
das
sbb
and
jns
xchg
sti
mov
add
or
stc
retf
daa
mov
test
leave
and
rcl
packuswb
adc
dec
pop
rcr
sub
xor
inc
add
inc
(bad)
daa
jmp
jg
sbb
mov
imul
or
mov
aaa
pop
mov
xlat
rol
ror
add
adc
lock
jne
shl
jecxz
xor
mov
popa
imul
inc
js
dec
jl
imul
or
sub
leave
rcl
mov
dec
pop
das
sbb
pop
dec
or
mov
or
mov
sbb
jmp
jb
adc
ret
cmp
cmp
xor
adc
cmps
jo
imul
test
push
add
iret
jo
rcl
jne
sbb
jno
mov
test
inc
rol
sub
ss
test
xor
lea
adc
adc
adc
xor
push
jb
mov
mov
xor
xchg
or
cdq
mov
mov
and
jns
ds
js
cmp
jns
(bad)
repnz
repz
inc
pop
jne
cmp
lods
or
js
mov
sub
mov
leave
enter
pusha
cmp
test
push
ins
stos
icebp
jb
rcr
xchg
scas
jmp
retf
out
div
mov
rcl
mov
adc
call
sbb
fistp
mov
call
xchg
sahf
adc
(bad)
das
mov
cmp
lods
outs
inc
ds
in
arpl
or
and
dec
dec
inc
jnp
ret
sub
loopne
(bad)
adc
or
pop
mov
setl
push
lods
cmp
push
in
push
das
ret
out
(bad)
fst
pop
ins
add
loopne
ja
leave
or
les
add
imul
mov
sqrtps
xchg
sbb
cmp
imul
pusha
ins
sub
pusha
sub
xor
dec
xor
adc
and
jns
xchg
cmc
jo
push
dec
ja
ss
cmp
or
push
cmp
movs
loop
mov
inc
data16
out
retf
nop
leave
xchg
aaa
push
or
dec
pushf
or
test
xlat
popf
push
push
rcr
mov
shr
por
dec
adc
into
add
cld
mov
pushf
test
cmp
pop
mov
adc
hlt
push
xchg
adc
fnstenv
pushf
lds
mov
js
popa
icebp
or
jl
ss
mov
pop
xchg
pop
pop
push
scas
cs
add
xor
mov
pusha
hlt
xlat
icebp
repz
xchg
mov
test
in
sbb
xchg
mov
cmp
or
add
jae
or
add
je
into
les
sbb
pop
pop
sub
hlt
mov
stos
add
mov
xchg
lods
add
int3
mov
sub
loopne
cdq
inc
out
sub
xchg
or
(bad)
jmp
adc
mov
mov
(bad)
lock
xor
jnp
add
outs
(bad)
jle
sub
jo
mov
sbb
hlt
xor
rcr
jne
stos
and
lahf
cli
dec
pop
dec
xchg
xor
das
or
pop
xchg
mov
cmp
xchg
mov
jp
xor
je
mov
sub
jmp
dec
call
cmp
pop
adc
repz
movq
sbb
or
(bad)
in
or
jg
ror
sbb
add
jecxz
popf
adc
push
dec
mov
out
and
push
inc
test
xchg
xor
outs
pop
jns
jo
jle
retf
pop
dec
movlps
cmps
pop
shr
push
ja
or
lods
mov
sub
inc
pop
dec
loopne
outs
icebp
fcomp
ror
sti
shl
mov
rol
xchg
pop
stos
daa
daa
sbb
push
test
in
xor
and
test
xchg
dec
mov
adc
arpl
mov
imul
mov
dec
add
es
clc
and
enter
enter
or
test
lock
mov
jecxz
xlat
add
daa
lods
mov
cmps
jne
sub
pop
mov
or
add
mov
or
push
pop
and
sbb
xchg
add
mov
push
bound
mov
sub
mov
loope
sbb
arpl
loop
loop
loopne
xchg
add
sbb
ja
cld
jl
dec
imul
mov
push
scas
gs
sar
xchg
jmp
push
outs
cdq
nop
xchg
mov
inc
and
arpl
outs
xor
loop
xor
daa
xchg
mov
xor
retf
loope
pop
inc
mov
xchg
in
sbb
call
fwait
dec
pop
push
shrd
fisttp
ja
xchg
adc
and
jmp
scas
cmp
lods
pop
pop
shr
int3
pop
ins
inc
push
jle
outs
sbb
ss
imul
cmps
push
cmp
xchg
add
rcr
inc
push
ins
inc
inc
mov
adc
pop
adc
pushf
pop
jne
das
pop
or
ret
adc
xor
enter
jp
test
rcl
cmp
dec
in
sbb
sbb
ds
std
outs
loopne
in
add
cs
loopne
dec
lods
clc
xor
jmp
inc
add
add
adc
lock
addr16
mov
ja
and
xor
retf
out
in
mov
mov
adc
ret
or
xor
mov
sbb
xor
shr
lds
push
into
cmp
sub
sbb
and
fcomp
jbe
out
push
(bad)
xchg
push
or
cdq
aad
push
out
pop
nop
jl
push
pushf
add
cmp
iret
pop
ins
jae
pop
pop
fadd
sbb
sbb
or
add
add
test
pusha
(bad)
stc
push
sbb
int3
push
push
dec
mov
pushf
fadd
sbb
mov
jo
adc
scas
and
sub
push
mov
(bad)
jmp
shl
clc
sbb
mov
loope
cmp
xor
mov
or
mov
ss
and
(bad)
daa
loope
js
fldenv
dec
cwde
dec
or
sub
push
fcom
or
das
sbb
sahf
mov
into
adc
push
or
add
lahf
je
jbe
(bad)
loope
out
add
enter
fnstcw
mov
fisubr
xor
and
xchg
inc
or
pop
adc
icebp
ret
jmp
and
pop
enter
pop
movs
or
inc
into
inc
lods
test
mov
int
into
retf
dec
lahf
jle
xchg
adc
jns
xchg
push
mov
icebp
or
and
adc
into
adc
fstp
rcl
and
pop
ds
fld
hlt
mov
je
aam
fld
push
addr16
cmp
jmp
add
pop
sahf
das
mov
loope
pop
or
mov
push
inc
test
sbb
dec
neg
dec
dec
push
cmp
icebp
adc
(bad)
mov
cdq
or
dec
xor
cmps
sub
sub
ret
int
(bad)
xor
jp
mov
aam
push
loop
and
(bad)
xor
adc
ja
loop
cmp
mov
xchg
and
push
(bad)
scas
pushf
fmul
pop
adc
push
xchg
jne
(bad)
hlt
jecxz
je
mov
pop
xchg
(bad)
retf
adc
xor
cmps
push
mov
mov
pop
test
xchg
xor
push
jmp
fdivp
xchg
pop
jns
cmps
xor
call
mov
ror
push
xchg
sbb
xchg
mov
rcr
pop
iret
sub
sbb
mov
popf
je
(bad)
data16
ret
adc
or
sub
or
out
add
add
mov
cmp
movs
lea
(bad)
add
loopne
add
adc
add
jo
cwde
div
dec
inc
add
pop
jns
pop
sbb
ins
push
push
cmp
push
and
gs
shl
data16
aaa
lahf
test
dec
adc
mov
xchg
stos
(bad)
stos
xchg
pushf
push
call
cmp
jbe
cmps
xor
inc
push
loop
jo
add
push
inc
fidivr
cmp
rol
jecxz
dec
cmp
sub
push
js
mov
daa
(bad)
sahf
push
movs
inc
jmp
mov
jmp
loopne
scas
mov
jmp
push
outs
cmps
loope
mov
jne
push
outs
pop
addr16
pop
push
inc
xchg
movs
fwait
arpl
das
xor
or
jno
aas
add
xlat
cdq
add
adc
inc
fsub
mov
push
sbb
push
fsubr
sbb
ret
fimul
loope
add
into
cmp
addps
js
aaa
inc
mov
sub
and
stos
fstp
test
sub
sub
cmc
data16
sbb
mov
lods
sub
add
lahf
and
jb
sbb
sbb
cmp
pop
push
inc
push
outs
fsub
push
jl
jge
dec
and
sti
add
mov
mov
sbb
rcl
or
mov
add
lods
dec
inc
sub
sbb
xlat
sub
call
retf
ret
test
push
test
pop
and
dec
in
fcmovnb
adc
ficomp
mov
sbb
or
add
(bad)
(bad)
(bad)
fs
test
repnz
int3
push
pusha
cmp
(bad)
mov
imul
pop
iret
or
mov
xor
sahf
jb
jmp
shl
mov
hlt
(bad)
inc
sub
pusha
cmps
scas
inc
loopne
stos
rol
adc
(bad)
lar
dec
add
or
mov
sub
mov
add
jmp
dec
jns
jo
shl
sbb
sub
or
cli
stos
mov
mov
js
outs
add
pop
xchg
sbb
push
push
imul
jo
pushf
mov
mov
into
xor
push
push
ja
out
mov
lods
add
rcr
out
add
test
das
jmp
les
(bad)
xor
test
adc
enter
popa
movs
arpl
sub
arpl
adc
loopne
loope
cmp
out
inc
sub
hlt
(bad)
mov
mov
and
and
dec
sub
sub
or
addr16
dec
(bad)
aam
cmp
lods
je
push
test
iret
cwde
(bad)
aaa
std
mov
adc
add
mov
xchg
xchg
or
test
push
shl
fnstcw
sbb
dec
cmp
je
mov
cmps
add
test
adc
dec
adc
addr16
les
es
(bad)
push
or
adc
test
call
push
ret
xor
xchg
pushf
call
mov
stc
push
mov
rcl
mov
into
sub
cmp
lods
mov
imul
add
and
inc
icebp
movs
dec
or
xor
sbb
shl
(bad)
mov
ret
mov
jg
or
jne
iret
pop
and
xchg
inc
(bad)
or
shl
shl
call
jo
enter
fdivr
push
outs
out
lods
dec
imul
ret
dec
jmp
add
push
and
sub
lea
mov
jp
data16
(bad)
mov
xor
dec
ret
int3
jmp
loopne
aad
imul
xor
xchg
or
cmc
add
gs
movs
add
inc
adc
gs
in
push
cmp
or
movs
or
in
mov
dec
or
movs
sbb
pop
push
icebp
mov
pop
jbe
push
xrelease
enter
leave
sti
mov
jecxz
ss
jmp
dec
push
pop
lock
cmp
adc
dec
repnz
pop
aaa
or
push
push
mov
hlt
cmc
ret
push
xor
mov
retf
and
mov
mov
or
loop
test
cmp
sbb
outs
add
and
outs
push
pop
cmp
jg
in
inc
rcr
mov
or
inc
and
mov
dec
dec
cmovle
mov
mov
lahf
fcomp
add
(bad)
jo
pop
es
rcl
mov
(bad)
aaa
movs
pop
dec
sbb
xchg
and
retf
xor
cmp
imul
dec
inc
fmul
jecxz
ror
rol
jmp
xor
and
pop
in
outs
jne
jmp
xor
pop
pop
mov
sub
gs
inc
sbb
sub
dec
pop
adc
mov
inc
rol
jne
pop
pusha
icebp
sbb
xchg
cmp
repz
and
shl
outs
test
in
or
cmp
neg
lock
xor
in
xchg
mov
pop
xchg
aam
addr16
xchg
mov
mov
jne
and
(bad)
retf
rcl
jno
enter
sub
sbb
mov
retf
fcomp
pusha
je
add
jns
dec
aas
pop
sub
sub
rcr
test
push
(bad)
retf
pop
fxch
loop
jbe
movs
out
ins
pop
ret
inc
cmp
pop
das
mov
sbb
fdiv
cmp
pop
sbb
sub
sbb
and
movs
or
sbb
ret
nop
and
mov
mov
mov
jmp
and
repnz
push
add
test
lahf
mov
xchg
test
sub
or
test
lock
jmp
mov
mov
loop
pushf
push
push
(bad)
cmps
les
jo
ret
sub
scas
mov
jno
add
pop
aas
push
push
pop
popa
call
mov
add
enter
ret
jp
xchg
cmp
jns
shr
cs
sahf
jo
sub
pop
test
pushf
push
dec
inc
loopne
cmp
or
push
out
xor
or
pop
jbe
push
movs
or
idiv
cmp
mov
sub
scas
cmps
pop
mov
loopne
or
jl
adc
sbb
or
ret
out
sbb
test
nop
(bad)
mov
inc
mov
data16
lock
jmp
nop
mov
inc
stos
xor
pushf
pop
int
ja
sub
pop
or
test
into
mov
sbb
pusha
daa
xchg
jb
pop
out
rol
out
lea
add
mov
pop
jecxz
mov
mov
cmp
add
pop
sbb
sbb
inc
pop
push
jb
mov
sub
ret
loop
mov
popf
jno
lds
test
lods
ds
das
inc
mov
dec
adc
sbb
xchg
jge
mov
add
popa
inc
xchg
sub
or
push
not
das
scas
mov
std
sbb
mov
cmp
fs
shr
outs
frstor
add
mov
mov
and
int3
dec
mov
mov
push
mov
sti
in
stos
add
mov
cmp
add
mov
mov
repnz
enter
adc
add
sar
nop
sbb
sahf
pushf
mov
cmp
lods
idiv
enter
shl
pop
test
pop
and
(bad)
jno
inc
xor
adc
loopne
ret
or
out
and
xor
clc
push
test
sbb
mov
sbb
ja
dec
and
nop
adc
adc
jmp
dec
jmp
lea
(bad)
push
ss
pusha
xlat
ins
sub
(bad)
mov
dec
mov
pushf
push
cli
push
or
xor
cmp
add
mov
fldenv
mov
xor
cmp
popf
bound
ja
movs
stc
out
jmp
pop
loope
retf
mov
std
add
and
loopne
nop
dec
test
mov
mov
bound
push
out
sbb
or
test
test
pop
movs
je
sub
(bad)
call
inc
shl
gs
lds
in
jg
shl
in
into
pop
xor
das
outs
mov
dec
cmp
adc
fwait
xor
jmp
fmul
mov
loop
or
xor
xor
aam
xchg
push
es
call
xor
cmps
mov
loope
cmc
adc
loopne
sbb
daa
add
adc
cmp
ror
push
inc
js
cmp
(bad)
jmp
mov
jecxz
adc
int
add
jno
add
xchg
pop
push
dec
std
xlat
push
and
mov
sub
pop
cmps
lods
add
mov
in
adc
pop
movs
jl
leave
push
inc
push
sub
jmp
and
lock
mov
fsub
inc
mov
ror
add
add
cmova
in
test
js
adc
jmp
cmp
dec
inc
movs
ja
push
scas
sbb
pusha
push
lds
das
pop
xchg
sub
jo
pushf
jle
movs
dec
add
lods
mov
xchg
xlat
pop
lock
pop
xor
or
ins
inc
repnz
shl
push
xchg
leave
push
pop
sbb
xchg
xor
mov
fcom
sbb
shl
pop
mov
dec
add
push
bound
sbb
rcl
cmps
int3
or
pop
adc
and
push
inc
inc
pop
sub
movs
adc
jmp
aad
dec
cmp
pop
stos
rcr
fs
jo
jecxz
sbb
sbb
ss
pop
xor
popf
mov
lds
sbb
or
shr
inc
pop
or
xchg
call
jl
shl
add
std
rcr
gs
pushf
jmp
sbb
lods
dec
pop
pop
dec
daa
cmp
add
mov
(bad)
pushf
imul
sub
jae
push
ss
cmp
fidivr
in
or
adc
scas
outs
sahf
lock
inc
mov
sar
scas
loopne
jp
test
cwde
pusha
in
out
and
shr
js
add
add
jmp
xchg
push
cmp
addr16
ins
sbb
(bad)
addr16
add
ja
cwde
cmp
and
ret
add
jmp
mov
add
push
xor
jno
popf
add
fwait
gs
ds
xor
adc
enter
inc
push
sub
inc
pop
pslld
dec
mov
fst
(bad)
ror
retf
add
ds
out
addr16
sub
ret
adc
add
packssdw
outs
imul
fucom
test
dec
arpl
sub
add
pop
repnz
inc
fsub
add
cmp
add
pop
inc
pop
xchg
cmp
mov
outs
ins
sbb
mov
(bad)
xor
sub
add
or
sahf
sbb
xor
pop
loopne
jb
lea
loopne
sub
test
scas
xchg
(bad)
loop
mov
xor
repnz
or
outs
mov
push
sbb
je
test
ret
nop
test
add
or
xchg
adc
frstor
je
fst
stos
sahf
and
dec
sbb
retf
inc
and
les
xor
loop
xchg
and
cmp
enter
inc
jp
clc
pop
addr16
add
pop
add
sbb
inc
pop
ja
adc
cmps
mov
add
or
mov
sub
das
mov
and
aam
pop
pop
or
xchg
scas
and
loope
aam
and
stc
mov
mov
cmp
lods
dec
push
inc
and
push
shr
into
js
ss
fwait
xor
ret
add
inc
sbb
pop
jecxz
lock
test
add
and
loopne
cmp
aaa
add
jb
jb
xor
repz
fdivp
adc
lods
mov
sub
imul
(bad)
in
mov
pusha
cmp
mov
iret
imul
xchg
push
not
pushf
cdq
loop
dec
scas
xchg
daa
xor
mov
xchg
loop
cmp
add
push
test
movs
add
jne
fs
jge
mov
popf
adc
cmp
fcmove
call
add
inc
adc
adc
and
add
push
popa
or
ficomp
gs
mov
fistp
sub
sub
cdq
mov
jecxz
mov
push
mov
popf
pop
fmul
sbb
addr16
rcr
or
add
pop
or
das
jmp
inc
sbb
or
xor
ror
and
rcl
mov
retf
movs
ficom
fs
dec
test
cmp
push
sahf
(bad)
div
xchg
jge
jmp
jbe
(bad)
and
sbb
(bad)
or
mov
call
cld
mov
sbb
femms
sub
scas
iret
fcomp
cmps
pop
mov
enter
and
jb
lods
and
sub
aam
into
das
xchg
fidiv
and
rcl
js
adc
jo
cmp
sub
jge
jo
mov
lahf
add
iret
sbb
dec
mov
call
sbb
adc
(bad)
repnz
mov
(bad)
retf
push
out
sub
mov
mov
pop
(bad)
or
enter
or
lahf
or
inc
popf
int3
cld
std
push
push
push
pop
adc
out
je
jne
xchg
add
mov
outs
ret
add
inc
push
lahf
add
icebp
sbb
iret
sbb
add
pop
or
(bad)
in
cmp
pusha
mov
je
out
loop
push
pop
test
data16
sub
push
(bad)
and
pop
pop
push
jg
pop
or
fnsave
lods
das
cmps
add
int3
ret
retf
push
ret
sar
pop
arpl
(bad)
pop
or
sahf
call
popf
lock
test
hlt
sub
scas
popa
pop
shl
and
ror
fwait
pop
inc
jle
push
rol
fcmovnbe
or
and
rdmsr
in
nop
aad
mov
sbb
jle
inc
add
mov
ror
jmp
pop
outs
sub
sub
test
sbb
sbb
rcr
xchg
or
in
in
(bad)
rol
ret
sahf
out
iret
xchg
jo
sbb
pop
fbstp
mov
mov
cmp
add
out
je
(bad)
mov
jle
int3
pop
mov
outs
mov
xchg
popf
je
add
add
mov
mov
xor
dec
icebp
push
xor
ins
mov
dec
jmp
movs
adc
pop
cmp
or
pop
leave
lahf
push
mov
or
inc
loopne
sub
pushf
rol
push
(bad)
sbb
mov
mov
sbb
cmp
jl
jb
mov
inc
lock
fcmovb
mov
in
in
sub
lahf
sar
and
pop
into
cmp
jl
pop
sbb
bound
icebp
push
add
scas
sub
sbb
mov
fstp
mov
fmul
or
or
mov
mov
mov
(bad)
pop
outs
repnz
xor
ds
push
pop
pop
retf
sbb
mov
ret
or
mov
mov
cmp
jae
popa
add
cmp
cmp
fs
retf
jne
sub
mov
xor
push
lods
sbb
inc
aas
rcl
out
nop
push
sbb
cmp
push
test
cmp
sub
jnp
(bad)
mov
(bad)
out
xor
cmp
push
xchg
lea
sub
movs
xor
(bad)
cmova
mov
push
arpl
pop
adc
jmp
jmp
jmp
dec
dec
loopne
jo
mov
(bad)
hlt
scas
sub
pusha
pusha
push
das
sbb
(bad)
daa
loopne
cmp
pop
sub
shl
or
in
sub
sbb
mov
jge
mov
dec
out
inc
aam
jo
pop
into
popf
pop
rcl
push
mov
push
jmp
loope
mov
cmp
cmp
sti
mov
xchg
xchg
fisttp
test
lock
aas
fwait
cmp
retf
(bad)
add
arpl
push
add
jmp
sar
leave
inc
scas
dec
mov
gs
fld
sahf
inc
out
push
xchg
dec
and
lods
(bad)
xchg
mov
xchg
mov
icebp
dec
push
pop
shl
add
or
out
mov
or
cmps
repz
outs
shl
xchg
adc
mov
sbb
test
fmul
arpl
test
xor
mov
(bad)
add
jl
push
lods
imul
mov
pushf
(bad)
test
test
mov
pop
inc
cli
fnstenv
mov
shl
lods
and
pop
sbb
mov
rep
loopne
popf
mov
mov
and
adc
jo
xchg
hlt
add
in
jmp
ds
sub
call
push
loop
inc
or
ret
pushf
inc
cmp
xchg
mov
imul
inc
movs
cmp
push
out
mov
and
mov
icebp
aam
sbb
sub
xor
ss
sbb
xchg
and
pop
sar
jbe
mov
mov
inc
add
cmp
rcr
loopne
popf
sub
pop
mov
pop
and
pop
cld
les
pushf
pop
pop
mov
sbb
js
mov
xchg
shr
mov
dec
retf
ret
call
inc
sahf
jnp
lods
and
sub
ins
sahf
ins
fnstcw
jecxz
jnp
sub
xchg
cmp
inc
pusha
mov
ds
mov
arpl
add
add
out
xor
loop
rcl
xor
das
enter
pusha
icebp
or
sbb
cdq
mov
lock
rcr
sbb
dec
push
adc
add
push
and
sub
movs
add
cmp
xchg
js
xor
push
vmptrst
je
js
dec
push
(bad)
rcr
fwait
sub
(bad)
push
cdq
mov
add
pop
push
jnp
loopne
jnp
or
sub
daa
loope
(bad)
into
jle
xor
xchg
pop
outs
adc
pop
js
xchg
std
inc
xchg
push
mov
(bad)
push
mov
test
cmc
dec
in
ret
or
addr16
ret
fcomp
mov
leave
push
and
add
cmc
adc
dec
inc
movs
mov
stc
or
push
les
fdivr
pop
popa
sbb
dec
jno
jecxz
sar
scas
repnz
loopne
push
add
je
inc
mov
outs
mov
mov
mov
adc
in
jo
jns
jnp
jg
aaa
sub
adc
ja
shl
rcl
add
mov
ins
or
or
dec
and
lds
mov
xchg
sbb
dec
loopne
mov
sbb
add
and
mov
mov
sbb
push
cmp
jb
dec
push
ret
dec
sbb
ret
fimul
xchg
add
jmp
mov
and
dec
xchg
pop
into
pop
inc
inc
add
neg
mov
xchg
add
xchg
or
sub
inc
pop
mov
xchg
sub
xor
sbb
push
js
mov
add
outs
fsub
xchg
mov
inc
inc
int
outs
add
aaa
das
pop
pop
ret
enter
jle
mov
xor
jl
xor
xchg
adc
mov
sub
js
arpl
jl
int3
cmp
mov
cmp
and
mov
stc
ror
ret
add
mov
add
imul
stos
and
loope
test
rcr
clc
outs
jg
sub
in
dec
and
or
or
div
call
pavgb
and
or
dec
mov
dec
mov
sub
or
cmc
daa
shl
sbb
jmp
dec
repnz
mov
sbb
push
mov
jmp
(bad)
sbb
or
pop
daa
xchg
dec
adc
add
dec
cmp
inc
scas
pop
jne
or
mov
xor
loopne
inc
ror
arpl
aaa
push
push
and
mov
js
loopne
cmp
dec
sbb
dec
fisubr
scas
jmp
push
add
add
retf
sub
(bad)
lods
or
sbb
sbb
pop
into
xor
push
sahf
cmps
stos
cmp
xor
add
ja
idiv
mov
mov
cld
inc
rcl
loop
xchg
add
pop
ret
ins
cmp
inc
and
add
out
(bad)
pop
xor
jecxz
add
sti
mov
frstor
mov
xchg
dec
in
popf
and
js
fs
and
mov
pop
inc
or
(bad)
iret
sub
arpl
and
push
xor
dec
cmp
jg
add
add
add
imul
mov
fcom
es
shl
sbb
popa
inc
hlt
es
sub
sub
push
aaa
sbb
pop
jle
sahf
push
push
repz
sub
int
push
popa
mov
adc
loopne
mov
add
shl
sub
aad
pusha
movs
or
addr16
les
and
stc
movs
sub
outs
cld
jno
mov
mov
mov
mov
inc
dec
xor
jo
xchg
xor
mov
dec
mov
jle
or
pusha
or
into
add
sub
push
jbe
adc
xchg
int3
xchg
repz
pop
daa
les
xchg
push
sbb
cmp
ret
hlt
ror
inc
cmp
cld
mov
add
sahf
xchg
rcl
mov
loopne
loopne
pop
sub
call
lock
(bad)
jmp
in
inc
(bad)
sbb
in
sbb
ret
dec
mov
sbb
fucom
into
(bad)
dec
mov
push
scas
fdivr
hlt
sub
inc
fidivr
loop
imul
sbb
jmp
popa
and
push
or
sbb
pop
adc
fcomp
daa
mov
outs
sbb
add
and
fnstenv
jle
mov
ret
or
pop
rcr
add
jp
das
call
push
ret
pushf
add
add
mov
xchg
mov
hlt
nop
enter
push
cmp
pop
mov
xor
add
or
je
and
and
adc
js
pop
xchg
outs
cmp
ins
leave
and
jo
rol
daa
int3
push
push
aam
sub
mov
and
jp
movs
and
loop
call
and
and
js
sub
mov
out
cmp
fst
xor
xchg
push
scas
push
add
mov
and
call
and
enter
jge
mov
inc
cmp
rol
push
div
jmp
xor
or
xor
scas
mov
push
loopne
and
or
shr
mov
ins
ret
add
arpl
xor
aas
outs
movs
pusha
sub
mov
clc
jg
xchg
xchg
ror
ret
jb
xchg
push
lahf
push
(bad)
das
loopne
xchg
mov
pop
inc
or
cmp
push
arpl
add
lea
inc
or
xchg
aad
in
ret
mov
cmp
mov
adc
cmp
lea
pop
jns
in
ds
pushf
or
jecxz
and
xchg
jmp
mov
daa
jno
add
cmp
xor
push
add
out
adc
je
inc
sbb
sbb
push
cmp
popa
loopne
and
cmp
fdiv
sbb
in
es
lahf
nop
loopne
push
bound
loope
js
inc
adc
sub
aam
retf
add
push
push
xor
test
inc
lods
je
dec
retf
mov
jo
fmul
sbb
es
test
cmp
add
cmp
cdq
jae
(bad)
mov
bound
sub
imul
pcmpgtw
push
loope
into
cwde
xor
movs
gs
repz
adc
mov
push
inc
test
xchg
aad
movzx
xor
add
xchg
jp
out
lods
and
cmp
sar
stos
jp
in
fcmovnu
mov
inc
lahf
dec
jecxz
add
sar
jae
test
pushf
or
cmc
cmp
mov
dec
aas
(bad)
xchg
jne
jns
cdq
cmp
imul
arpl
push
jne
pushf
xchg
pusha
mov
push
or
push
sbb
inc
pop
ret
push
in
add
add
movs
lods
popf
es
mov
aaa
movs
ja
lods
mov
and
adc
repz
test
jp
jbe
jmp
push
ins
sbb
jp
mov
je
mov
aam
adc
or
leave
repz
into
xchg
lock
jbe
loopne
in
loop
pop
retf
movs
sbb
adc
mov
movs
or
dec
pop
push
jnp
clc
xor
mov
jo
mov
pushf
add
pop
mov
mov
(bad)
(bad)
mov
ss
lea
into
jo
aaa
add
sbb
pop
sub
and
fcom
add
mov
xor
xor
push
cmc
lods
add
fisub
mov
push
lods
push
add
ret
cmps
jb
pop
adc
jno
test
mov
and
add
sbb
mov
adc
out
ret
imul
sbb
dec
pusha
in
fcom
jle
outs
aaa
or
mov
cmp
idiv
and
or
mov
adc
xor
leave
add
xchg
pushf
into
aaa
mov
mov
cmp
int3
and
inc
mov
pop
lea
xchg
jae
js
(bad)
mov
movs
xchg
adc
ror
jbe
test
daa
jecxz
pushf
rol
inc
loopne
les
loopne
add
pop
inc
push
xor
sbb
daa
in
dec
jmp
mov
lea
js
add
clc
adc
add
or
pop
sbb
or
or
retf
sbb
pop
add
(bad)
jo
jmp
or
ja
pop
stc
add
lock
xchg
xor
fxam
cs
push
ret
ret
add
dec
dec
pop
mov
cmc
sub
pop
mov
out
jmp
or
ret
inc
icebp
mov
sub
mov
(bad)
sub
sbb
inc
daa
or
iret
xor
leave
jmp
pop
sahf
cmp
sub
push
xchg
xchg
mov
in
inc
imul
ins
loopne
outs
xor
push
and
add
push
xchg
mov
std
xor
inc
scas
lock
popf
sbb
cmp
nop
popa
icebp
shl
ja
lods
out
mov
or
inc
push
mov
xchg
in
ret
sahf
xchg
add
fs
adc
retf
push
pushf
and
add
stos
ror
fimul
mov
mov
add
sub
imul
in
jmp
mov
xchg
ss
sub
dec
ja
mov
ss
fst
mov
push
xchg
mov
push
inc
inc
sbb
cmp
ret
pop
pop
fstp
pop
fst
jecxz
shr
(bad)
repnz
mov
dec
pop
fld
mov
xchg
xor
or
add
aam
enter
mov
cmp
push
outs
xchg
push
pop
inc
or
fmul
imul
and
into
mov
pop
loop
test
push
cmp
bound
(bad)
pop
inc
xchg
dec
or
popa
inc
int
lds
fbld
std
stos
and
ds
mov
rcr
pop
imul
add
dec
aad
popf
clc
and
into
mov
pop
cmc
adc
(bad)
inc
lahf
shl
outs
imul
or
scas
mov
adc
popf
lods
or
pop
dec
pushf
lods
mov
add
sub
adc
push
scas
ret
jo
js
ins
xchg
adc
xor
or
jne
daa
pop
pop
pop
shl
inc
dec
addr16
icebp
in
in
inc
jbe
ror
loop
inc
loope
icebp
(bad)
dec
mov
ret
lock
loope
adc
scas
add
dec
lock
aas
(bad)
popa
test
pusha
lock
and
into
jmp
mov
outs
cmp
pop
push
xchg
sbb
je
sahf
jle
sbb
push
jg
cs
lods
add
out
and
lock
mov
cmps
inc
arpl
cmp
cmp
jmp
in
pusha
ret
cmc
mov
xor
pop
push
inc
fnsave
jae
sub
and
mov
sbb
out
in
imul
push
cmp
repnz
ins
pushf
jns
inc
retf
xchg
and
and
es
xchg
xchg
and
stc
jp
adc
inc
or
rcl
or
jns
cmps
mov
push
icebp
add
imul
test
cmp
stos
and
dec
mov
cmp
add
shl
stos
dec
frstor
inc
shr
sbb
pop
push
mov
push
or
mov
push
pop
outs
loop
xchg
mov
push
imul
pop
fcomp
(bad)
repz
add
push
push
(bad)
adc
lds
or
scas
mov
ins
(bad)
clc
outs
retf
enter
xor
outs
cmp
lds
jle
mov
add
jae
adc
cmc
(bad)
(bad)
lock
or
or
pop
ins
mov
sahf
sub
gs
mov
enter
cmp
retf
or
add
inc
or
sbb
jmp
ficomp
add
push
imul
push
sub
dec
push
and
adc
(bad)
pop
lock
sub
arpl
js
dec
push
jmp
pop
out
ficom
pop
pop
mov
mov
mov
add
in
sbb
pop
push
push
(bad)
sbb
test
cmp
lods
mov
stos
daa
into
push
and
xor
mov
adc
mov
push
leave
call
sbb
or
and
mov
cmp
jecxz
(bad)
loop
push
xchg
imul
jo
pop
jmp
packuswb
pop
push
sub
sbb
jb
icebp
and
cmp
push
lea
adc
ret
adc
lods
mov
sahf
jl
test
jo
cmp
inc
es
call
sbb
dec
jp
pop
push
mov
dec
inc
scas
xchg
xor
jnp
(bad)
jmp
adc
mov
ss
sub
call
xchg
pusha
pop
or
in
xor
pushf
es
mov
push
sub
sub
popa
cmc
xchg
mov
movs
mov
sbb
pop
rol
call
cmp
mov
and
fnstcw
add
sbb
movs
fnsave
pop
and
arpl
sub
xchg
xchg
pop
push
movs
dec
repz
icebp
nop
test
inc
cmp
(bad)
shl
ret
xchg
mov
or
cmp
out
or
stos
mov
dec
cwde
clc
aad
mov
pop
cmp
pop
xor
sub
jg
jmp
and
imul
popf
add
not
and
pop
test
xchg
or
xor
inc
or
push
sbb
jo
and
xchg
in
fwait
pop
or
repz
jge
sbb
push
out
jmp
adc
push
ret
mov
test
sbb
into
xor
or
stos
add
jmp
test
imul
das
ret
shr
inc
test
shl
push
in
mov
daa
ja
jmp
out
inc
fist
pop
push
pop
and
test
call
js
fsubr
jae
scas
fs
sub
or
or
in
js
sbb
dec
mov
daa
loopne
pop
daa
mov
mov
xor
stc
add
pop
daa
adc
push
mov
jae
test
pusha
hlt
nop
xchg
push
sub
inc
push
pop
aas
push
and
jbe
in
push
inc
inc
lods
push
push
pushf
xlat
rcl
and
xchg
outs
fs
or
hlt
or
mov
hlt
xchg
test
sbb
fiadd
xor
stos
inc
loopne
mov
inc
mov
rcl
(bad)
outs
rol
pop
push
mov
and
push
loop
cmp
dec
xor
ficom
and
push
push
push
adc
fadd
shr
mov
shl
pushf
ins
fisubr
or
pop
js
mov
xor
mov
fcom
movs
mov
adc
sbb
jb
fs
aad
pushf
out
enter
adc
jbe
fistp
into
(bad)
xlat
lea
cmp
fidiv
out
js
movs
or
mov
add
into
int
call
pop
push
pop
xchg
mov
test
imul
xor
das
xor
mov
les
add
in
sub
inc
jmp
outs
int
dec
mov
sub
jo
js
aad
(bad)
push
mov
pop
inc
adc
cmp
adc
mov
scas
add
and
inc
or
push
sbb
and
mov
into
jmp
or
push
retf
(bad)
cwde
add
sbb
mov
pop
add
sub
out
sub
(bad)
sbb
ret
xchg
mov
jb
outs
mov
and
sbb
(bad)
and
add
push
xchg
mov
xchg
xchg
lock
mov
mov
jo
mov
gs
pushf
fild
xchg
repnz
(bad)
jbe
loope
loop
mov
dec
xchg
(bad)
sbb
(bad)
jae
and
and
and
mov
imul
repz
movs
lahf
mov
or
dec
inc
add
cmp
push
(bad)
cmp
out
mov
(bad)
sub
pop
ss
ins
fdiv
dec
daa
ret
pop
jne
fsubr
jp
mov
and
push
pop
mov
enter
cwde
pop
add
jno
ret
ret
inc
in
mov
pop
loopne
js
sub
int
or
movs
(bad)
es
(bad)
imul
fisub
or
into
fwait
mov
push
jbe
fisub
fprem
adc
sub
popf
jg
loopne
movs
mov
addr16
out
add
pop
mov
jno
push
mov
rol
jmp
sbb
cmp
in
cwde
xchg
lds
sti
cmp
loope
xor
xchg
(bad)
lock
test
add
sub
dec
cmp
es
(bad)
mov
jl
pop
daa
imul
(bad)
adc
xor
jnp
add
mov
test
cmp
push
sub
inc
add
lods
dec
and
in
mov
into
push
xor
loopne
inc
in
push
push
inc
fdivr
mov
(bad)
(bad)
mov
cmp
imul
sbb
add
or
lahf
and
mov
(bad)
fisubr
xchg
aaa
xor
xor
xchg
test
pusha
and
aas
push
sbb
inc
mov
xor
or
adc
jmp
inc
jb
add
add
ret
add
retf
xchg
add
les
cmp
dec
out
lock
les
push
xor
sub
mov
inc
ret
sbb
push
xchg
xor
fbld
imul
mov
lods
test
retf
js
cmp
shr
cmp
push
push
inc
xchg
ja
mov
cmp
test
repz
loopne
push
xchg
lods
icebp
shl
mov
pop
ret
cdq
xchg
adc
loope
test
mov
sub
fiadd
pop
jmp
ins
call
ret
dec
push
in
std
pop
cmp
pop
push
dec
arpl
cmp
sbb
cmp
aam
enter
cmp
lods
cmp
cmp
rcr
mov
enter
clc
add
ret
ret
lock
xor
pop
xchg
adc
sbb
mul
or
and
fs
mov
ins
dec
cld
push
inc
lods
test
xchg
and
into
popa
add
and
mov
inc
inc
jle
scas
out
cmp
test
mov
sbb
adc
pusha
and
add
pop
popf
sbb
outs
enter
mov
inc
sub
push
or
(bad)
and
movs
rcl
dec
sub
mov
imul
fld
pusha
in
out
fnstsw
cmp
add
in
das
pop
sbb
out
mov
push
repnz
arpl
cmp
mov
bound
sub
push
test
sub
out
jne
mov
or
push
xchg
icebp
cmp
jmp
(bad)
mov
mov
std
sub
fnsave
sbb
xchg
dec
mov
and
push
xchg
and
movs
js
dec
sbb
ja
or
fmul
add
int3
mov
or
setl
test
call
cmp
imul
sub
movs
adc
add
mov
ret
pop
cmp
ror
pop
xor
out
mov
dec
add
aam
xchg
fidivr
loope
(bad)
xor
inc
add
mov
mov
inc
rcr
(bad)
(bad)
div
cmps
jno
retf
jp
or
or
imul
or
sbb
cmc
mov
or
pop
jge
inc
outs
pop
dec
cmp
jb
dec
or
mov
scas
daa
cmp
arpl
sti
(bad)
test
add
fistp
sbb
or
sub
cmp
and
repnz
arpl
and
add
cdq
adc
sbb
push
mov
sub
in
mov
movs
jne
cmps
cmc
(bad)
mov
enter
in
shl
xor
or
mov
pop
(bad)
shr
enter
mov
dec
mov
aad
test
jnp
mov
mov
sub
jno
sbb
(bad)
lods
in
and
cmps
stos
rcl
or
and
jmp
pop
xchg
jae
cmp
punpckhdq
jecxz
xchg
mov
dec
cmp
inc
(bad)
js
jb
xor
gs
sbb
sar
add
imul
mov
icebp
and
rcl
pop
push
neg
(bad)
shl
cmp
retf
jb
add
fiadd
xchg
leave
(bad)
mov
add
push
dec
add
cmp
ins
sub
js
jecxz
(bad)
popf
icebp
mov
cmp
jecxz
rep
dec
push
rol
xor
xor
inc
jmp
adc
adc
push
sbb
xor
ret
fsub
stos
call
jne
push
add
arpl
jb
jmp
push
rcl
cdq
lds
jge
xchg
loop
push
fsub
adc
sahf
mov
imul
movs
mov
mov
push
or
dec
xor
xchg
xor
push
or
(bad)
ret
dec
mov
popa
jo
cdq
cmc
pusha
jne
push
cmp
scas
shl
sar
push
sar
cmp
(bad)
(bad)
(bad)
cmp
ret
out
sar
adc
out
add
ja
sub
cwde
lods
test
movs
push
or
push
pop
mov
pushf
dec
pop
cmp
mov
les
or
fnsave
push
ret
fmul
jb
js
retf
xchg
pop
pop
fsub
cmp
stos
pop
mov
(bad)
mov
and
jl
cmc
movs
sahf
and
push
test
mov
jns
(bad)
xchg
mov
(bad)
mov
xchg
pop
add
dec
fdiv
push
mov
cmp
ja
mov
mov
xor
xor
pop
fcomp
mov
(bad)
jmp
and
retf
repz
cmp
imul
cmp
inc
into
xchg
arpl
aaa
lods
inc
and
jnp
push
jmp
sbb
loope
sbb
sahf
mov
adc
nop
rcr
sbb
mov
and
or
jb
cld
outs
rol
test
pop
retf
retf
or
add
call
arpl
xor
mov
xchg
pusha
lods
xchg
sahf
dec
xchg
rol
and
push
push
lahf
scas
jge
and
sbb
cmc
cmp
ds
in
addr16
das
inc
dec
scas
and
pop
sar
sbb
jge
dec
push
xor
add
or
pop
add
pop
inc
das
ret
and
mov
inc
outs
int3
jo
dec
cmp
push
(bad)
in
jns
inc
syscall
repnz
in
sbb
sbb
cmp
add
or
inc
popa
push
push
outs
cld
jnp
xchg
add
sahf
mov
or
clc
add
jo
mov
and
in
mov
(bad)
cmp
or
sub
les
cmp
in
(bad)
pop
aam
xchg
jno
icebp
dec
pop
xchg
(bad)
mov
jmp
pop
add
test
cmps
aaa
push
and
clc
mov
xor
jns
push
dec
xchg
es
or
pop
jmp
xlat
je
stos
cmps
mov
dec
js
in
loope
lods
and
add
mov
test
adc
loopne
jmp
xchg
jp
fist
xor
xchg
ror
js
inc
mov
imul
mov
fwait
into
cmp
dec
in
dec
jmp
pop
hlt
adc
jno
cmp
cmp
mov
loop
push
mov
xor
and
cs
mov
inc
xor
sbb
inc
pusha
pusha
pop
push
fnsave
xor
(bad)
popf
or
(bad)
loop
ins
cmp
(bad)
xor
push
push
jae
adc
xchg
adc
cmp
mov
(bad)
test
stos
xchg
xor
pop
mov
ret
dec
push
dec
adc
lea
pop
mov
leave
imul
sbb
cmp
loope
(bad)
sahf
add
mov
jns
mov
pushf
mov
or
sub
push
ins
xchg
push
sub
push
jns
test
pop
cmp
ds
push
jnp
jp
dec
jmp
arpl
pop
sbb
pusha
pop
xor
pop
lahf
leave
sti
or
dec
mov
add
ins
mov
popa
fcom
(bad)
xor
pop
or
ret
push
xchg
out
pop
mov
test
add
scas
je
sub
add
jecxz
inc
inc
sub
or
nop
gs
iret
push
int3
adc
ror
mov
pop
sbb
lods
mov
mov
pop
sub
and
rol
sbb
jl
jmp
retf
push
jle
into
adc
pusha
inc
jg
xchg
xchg
mov
arpl
xchg
bound
jno
mov
rol
inc
enter
test
iret
pop
jmp
loop
add
push
push
adc
mov
cmp
dec
add
sbb
pop
sbb
sbb
out
sbb
pop
aam
inc
cmp
mov
add
das
push
push
xchg
xchg
lods
cdq
add
dec
cwde
aad
mov
push
mov
cmps
sub
push
rol
rol
and
test
lea
into
sbb
mov
je
imul
pop
sub
and
loopne
or
xchg
in
mov
push
xchg
arpl
jbe
and
rcl
(bad)
inc
out
retf
stc
in
adc
ja
or
xchg
jo
sub
ins
adc
js
in
cdq
(bad)
sar
inc
addr16
lahf
jb
mov
std
add
out
add
sub
test
and
aaa
sub
shl
out
adc
push
outs
cmc
dec
mov
sahf
and
pop
cmp
std
push
ret
inc
jl
jmpw
and
add
ficom
push
push
js
gs
xchg
mov
outs
or
dec
jns
dec
inc
popf
or
sbb
arpl
mov
movs
or
popf
mov
inc
loop
and
dec
push
or
adc
or
mov
fimul
push
xchg
mov
(bad)
out
call
jmp
mov
ss
sub
and
xchg
lock
popf
sbb
das
retf
and
imul
cmp
mov
push
mov
cmp
sbb
mov
or
xor
out
fld
es
add
ret
mov
leave
leave
or
lahf
sub
and
mov
push
(bad)
nop
ja
lds
test
dec
sub
lahf
das
inc
add
xchg
loopne
dec
adc
aam
adc
inc
mov
icebp
das
inc
lods
dec
sbb
outs
inc
pushf
xchg
push
cld
dec
scas
and
sar
(bad)
cmps
mov
adc
pop
mov
mov
pushf
add
loope
fstp
outs
xchg
adc
jmp
fs
dec
ret
pop
int
add
or
int
mov
push
xchg
mov
xlat
fld
rol
push
jo
push
movs
dec
sub
mov
mov
pusha
xchg
mov
xchg
shl
sub
xor
mov
and
fidiv
and
je
retf
xchg
retf
adc
jno
outs
mov
popa
lods
out
jmp
mov
les
fadd
cmp
loopne
push
xor
inc
outs
mov
cmp
fistp
dec
cmp
cmp
enter
jl
iret
fadd
ficomp
dec
arpl
imul
and
mov
sub
push
ja
retf
ret
sbb
push
xchg
imul
push
aas
push
lock
loop
cmp
add
retf
arpl
dec
pop
pop
inc
xor
mov
xchg
inc
adc
clc
mov
inc
pop
out
lock
cmc
cmp
push
jns
aam
inc
cmp
icebp
aam
or
pop
daa
pop
inc
xor
pop
(bad)
and
mov
lds
mov
loope
jae
pop
lock
add
mov
xchg
xor
mov
ffree
dec
into
imul
pusha
or
push
js
leave
cmp
rol
leave
into
adc
mov
dec
jl
ror
mov
xor
pushf
xor
xchg
cmps
or
cmp
rcr
enter
ret
shl
pusha
inc
leave
fst
hlt
adc
inc
lea
mov
fild
inc
or
jo
popa
test
sbb
ins
shr
pop
loop
sub
and
setge
loope
cmc
mov
(bad)
cmps
inc
xchg
or
sbb
jmp
adc
call
jo
and
or
mov
add
pop
lahf
mov
inc
mov
inc
or
ror
adc
sbb
out
mov
or
mov
mov
cmp
and
rcl
mov
call
or
lock
or
dec
pop
sti
jno
or
sbb
pop
cmp
add
or
sbb
cmp
addr16
out
mov
inc
cmp
addr16
gs
ja
ficomp
arpl
scas
dec
loope
test
pop
loop
aam
jns
xchg
xchg
jmp
retf
add
cmp
nop
xor
sub
rol
ins
adc
retf
test
jge
mov
xchg
xchg
ja
add
xchg
mov
push
test
aad
fldlg2
or
xor
add
pop
xchg
xchg
xchg
fstp
icebp
pop
mul
fxch
js
adc
pop
xor
pushf
loope
push
mov
lock
loopne
outs
ret
int
push
sub
mov
dec
sbb
jae
(bad)
aam
test
cmps
neg
pop
jae
push
dec
mov
add
add
aas
sub
enter
shl
movs
(bad)
jb
and
es
mov
cmps
into
jb
mov
mov
(bad)
push
pushf
push
jp
sbb
jo
in
(bad)
adc
or
popa
jo
loop
mov
arpl
adc
push
dec
movs
scas
pusha
ffree
dec
inc
lock
(bad)
mov
hlt
mov
and
outs
dec
(bad)
adc
jmp
jmp
enter
or
cmc
push
and
(bad)
mov
mov
xor
inc
lahf
test
loopne
adc
mov
cmp
(bad)
adc
cmps
xchg
mov
(bad)
jo
aaa
sub
cmp
push
push
lahf
lods
adc
xor
push
and
loope
sar
mov
pop
xchg
hlt
xchg
lahf
add
cli
cmp
fwait
das
ret
fcom
(bad)
push
inc
xor
adc
mov
mov
pop
mov
push
lock
cmp
pushf
jns
lahf
mov
jne
push
xchg
dec
pop
sbb
out
test
add
out
cmc
pop
retf
add
pop
fadd
push
nop
jno
xchg
or
fidiv
jo
adc
jecxz
sub
loopne
test
mov
out
add
enter
rcl
popa
mov
xor
shl
stc
mov
or
add
hlt
in
dec
pop
int3
clc
or
xor
pusha
mov
mov
cmp
mov
test
xchg
loopne
adc
repnz
pushf
in
retf
pop
mov
rcl
lods
mov
mov
and
mov
mov
out
xor
cmp
scas
adc
xor
adc
sbb
cmp
and
dec
cmp
cmp
mov
adc
sbb
pop
fiadd
mov
es
and
xchg
js
mov
or
(bad)
or
mov
or
xchg
add
into
ret
ret
pop
add
push
sub
ret
sub
push
ja
scas
pop
adc
mov
loop
mov
xchg
inc
pop
js
push
pop
fldenv
xchg
inc
data16
sbb
test
pop
cmp
xor
mov
mov
mov
loope
popf
pop
jp
data16
sahf
jecxz
or
xor
add
jp
outs
jmp
push
not
mov
cmp
jne
mov
xchg
or
fmul
adc
cmp
test
mov
shr
mov
or
das
loop
jne
call
dec
imul
push
push
push
in
or
jecxz
rcl
popa
sub
push
ret
adc
xchg
or
fisttp
test
push
imul
jecxz
das
push
pop
ret
test
pushf
nop
xchg
xor
xor
jmp
add
xchg
sub
mov
push
sub
xchg
jae
cmp
or
aam
sub
push
enter
sbb
jg
dec
inc
retf
inc
shr
or
jno
sbb
cmp
xchg
rol
stos
int
lods
movs
in
adc
push
jge
in
adc
cmp
jp
pusha
inc
mov
shl
lahf
jge
xchg
fcom
lock
mov
mov
shr
(bad)
rcr
or
pop
pop
push
pop
retf
ror
and
mov
daa
and
shr
adc
call
inc
fstp
lds
neg
xchg
add
add
add
fnstsw
jmp
dec
mov
loopne
pop
imul
pop
dec
xor
stc
push
lock
and
cmp
mov
pop
jnp
pushf
mov
shr
test
push
add
xor
sbb
call
out
sbb
cmp
(bad)
adc
jo
push
push
les
pusha
and
into
ret
inc
aad
pop
and
gs
test
sub
jo
xor
xor
or
imul
pushf
jle
xor
xor
or
sbb
ss
pop
xor
(bad)
out
and
or
out
fadd
jge
cmp
dec
cmps
adc
adc
add
mov
add
outs
sbb
leave
or
pushf
test
pusha
mov
and
movs
loope
arpl
out
pushf
mov
mov
outs
adc
mov
sbb
mov
pushf
lahf
shl
inc
in
mov
mov
imul
mov
in
dec
arpl
lea
mov
push
xchg
es
or
add
pop
and
je
dec
jmp
and
jb
jmp
mov
pushf
popa
and
sbb
inc
xor
add
push
and
push
dec
or
jmp
cmp
js
fcom
dec
dec
movs
pushf
jmp
je
je
sbb
std
jb
ret
sbb
mov
xor
xchg
out
or
dec
xor
sub
push
or
push
xor
aas
cmp
mov
mov
adc
popa
dec
cmp
imul
add
mov
rcl
cmps
mov
mov
push
test
fs
mov
mov
push
(bad)
cmp
mov
les
adc
sbb
mov
xchg
loopne
push
inc
movs
mov
jo
or
adc
daa
jmp
sub
pop
add
sbb
aam
js
lock
xor
mov
rol
test
jno
clc
rol
pusha
or
lds
cli
fwait
mov
lock
fcom
imul
leave
imul
push
rcl
pop
add
dec
dec
or
and
adc
sbb
nop
mov
cmp
sub
js
mov
add
mov
lds
xchg
stos
sbb
add
cmp
lea
jp
inc
jno
xor
daa
or
sbb
sub
adc
xchg
inc
(bad)
sbb
imul
shl
sbb
add
pop
xor
cmp
rcl
or
mov
lock
cdq
or
pop
adc
push
fidiv
shl
ss
aam
inc
jb
xor
gs
xor
fiadd
ret
dec
add
pop
dec
lods
loope
bound
in
fs
out
sbb
gs
and
pop
mov
push
stos
or
jecxz
dec
ds
or
mov
jno
mov
scas
xchg
push
pop
lar
mov
or
cmps
dec
jb
xchg
aaa
dec
mov
pop
imul
in
xchg
mov
adc
push
mov
pop
jmp
je
fnstsw
mov
imul
xor
ds
(bad)
(bad)
loop
ds
fs
dec
movs
push
and
sbb
mov
jo
xor
nop
add
sbb
daa
push
mov
push
aaa
cmp
jmp
add
outs
mov
popf
xchg
mov
sbb
xchg
push
xchg
xchg
jb
lds
inc
shr
sbb
pop
dec
cmps
cmp
jo
xchg
jns
jo
pop
pop
retf
sub
daa
pop
(bad)
jp
ror
and
out
imul
je
push
mov
lds
lea
jo
add
pushf
jnp
ret
inc
cld
fidiv
inc
loope
xchg
and
pusha
dec
pop
in
fs
add
icebp
mov
push
jmp
sbb
pop
sbb
push
mov
add
pop
dec
clc
scas
daa
pop
inc
mov
add
in
or
cmp
inc
test
inc
fsubr
and
pop
push
mov
sbb
jmp
loop
mov
adc
test
sub
(bad)
test
jb
fisttp
pop
pop
cwde
pusha
test
push
add
add
fdiv
xor
cmp
mov
xchg
mov
es
mov
popfw
lods
add
pmuludq
pop
ret
cdq
pop
mov
cmp
cmp
mov
push
xor
aam
xchg
fistp
mov
nop
and
mov
mov
sub
aad
and
dec
sub
outs
sbb
fsub
jo
stos
aaa
jne
pusha
call
add
xchg
adc
sbb
addr16
push
leave
fld
mov
loopne
mov
and
sbb
jns
mov
inc
dec
adc
sbb
jb
icebp
(bad)
pop
mov
shl
jne
stos
xor
xchg
jge
pushf
xchg
mov
xchg
xchg
and
sbb
and
xor
int
lods
xchg
jo
jg
push
(bad)
scas
pop
pop
fadd
pushf
jle
sbb
out
jg
jmp
data16
mov
sub
fisttp
cld
cmc
cs
fld
sbb
adc
inc
add
push
cmp
xchg
or
mov
xchg
call
inc
pop
xchg
dec
cmp
or
add
clc
xchg
or
mov
out
add
jne
sub
sub
imul
ret
lock
pop
pop
sbb
mov
xor
pop
arpl
mov
mov
inc
xchg
and
pop
cmp
add
in
and
inc
nop
xor
repnz
or
lock
jno
arpl
mov
pop
add
xchg
movs
(bad)
jp
loop
lds
out
ds
adc
adc
in
pop
and
test
sbb
dec
enter
xor
dec
push
sub
pop
pusha
stos
das
pop
mov
dec
in
(bad)
push
or
mov
(bad)
add
mov
or
mov
loop
xor
jnp
add
pushf
push
in
fbld
rcr
mov
mov
fstp
add
sbb
js
and
inc
cmp
jns
loopne
and
mov
inc
loope
dec
and
pop
cmp
data16
cmp
rol
jo
loope
inc
mov
xor
test
push
push
xor
dec
or
sti
mov
jmp
js
cmp
and
fst
jl
inc
pop
mov
loopne
mov
add
mov
push
js
icebp
ins
xchg
sar
mov
pop
add
daa
or
and
push
cmps
push
dec
xchg
mov
movs
adc
sbb
xchg
retf
popa
and
call
test
sub
push
mov
jno
sahf
aam
or
add
push
cli
mov
rol
add
aad
arpl
je
imul
sbb
mov
sbb
push
invd
into
sbb
push
je
jo
cmp
or
rcr
(bad)
jnp
sbb
dec
sub
cmp
in
xor
enter
push
mov
stos
in
lods
mov
cmp
push
(bad)
jge
add
leave
fisttp
pop
cli
push
ss
loope
icebp
mov
stos
cmps
js
inc
inc
push
jb
and
xor
mov
imul
xchg
out
or
sbb
pop
add
add
into
mov
or
mov
add
mov
and
adc
mov
enter
adc
push
push
mov
mov
mov
xchg
push
pop
mov
movs
sbb
push
pop
ja
pop
inc
push
mul
rol
add
cmp
hlt
pop
jo
jmp
jo
popf
mov
adc
shl
ins
ret
jg
inc
dec
daa
cld
shl
in
cmp
ret
test
pushf
je
mov
sahf
add
(bad)
data16
repz
cmc
movs
outs
loopne
rol
bound
test
pop
pop
arpl
add
adc
pop
sbb
hlt
add
inc
mov
ror
jb
and
dec
fwait
ret
js
xlat
js
rcl
pop
aas
add
sbb
ss
and
inc
scas
sbb
inc
bound
push
movs
loopne
sub
inc
(bad)
cmps
inc
inc
jns
pop
pop
scas
icebp
inc
jne
into
cmp
or
xor
jp
leave
aam
mov
mov
pop
shl
sub
mov
push
pop
push
pop
jl
xor
or
push
arpl
idiv
jmp
adc
ja
fucomp
mov
lods
test
je
inc
sbb
push
push
pop
add
fld
pop
es
in
jo
mov
inc
fst
cmp
mov
ja
in
rcl
enter
push
pop
arpl
lods
adc
add
popa
ins
cmp
pop
lds
addr16
in
or
inc
cs
ror
ss
pop
push
xor
cmp
xor
dec
cmp
(bad)
jle
daa
jne
jmp
xchg
imul
jno
sub
cmps
stc
xchg
or
push
inc
push
or
in
jmp
in
inc
sbb
mov
xchg
push
add
ins
push
repz
mov
or
shl
dec
jo
cmp
cmp
jb
fmul
sti
cmp
mov
pushf
and
jecxz
cmp
addr16
and
pushf
loope
out
inc
fs
lea
mov
mov
push
daa
leave
or
cmp
or
jmp
test
dec
or
addr16
mov
xchg
(bad)
push
mov
xor
add
repnz
adc
push
xchg
sub
mov
adc
test
ret
pop
pop
les
or
es
ret
ror
movs
and
cmp
sar
inc
inc
dec
loopne
jbe
add
and
cmp
daa
cli
add
xchg
int3
inc
xchg
loope
push
mov
outs
mov
xor
cmp
sti
inc
shl
xchg
jmp
aam
push
data16
fst
aam
inc
fist
mov
mov
movs
add
outs
lods
pop
cwde
xor
mov
pusha
add
xor
arpl
jmp
inc
cmp
dec
lock
rol
pop
cmp
mov
add
fcomp
push
imul
mov
mov
pop
jns
pushf
movs
mov
push
cmp
daa
mov
movs
mov
xchg
sub
loopne
mov
out
sub
pop
mov
or
popa
fadd
cmp
femms
push
(bad)
or
pop
cmp
sbb
test
add
fwait
adc
and
lods
lahf
xchg
sbb
jno
ficomp
xor
ss
sbb
lock
and
(bad)
pop
rcr
stos
and
mov
adc
clc
xchg
test
leave
xor
imul
inc
test
sahf
cmp
pop
pusha
mov
test
push
es
adc
ror
mov
clc
xor
sbb
test
fs
add
adc
pop
jae
nop
fwait
jmp
aad
jnp
or
and
out
into
retf
xor
fisub
fdivr
dec
sub
sbb
and
sub
fidivr
xchg
add
jo
or
sub
cmp
out
adc
mov
fs
adc
inc
je
test
retf
sub
mov
adc
pop
shl
cdq
xchg
(bad)
fistp
push
and
nop
cmp
and
jno
inc
pop
sbb
xchg
sub
addr16
xchg
mov
xor
pop
addr16
sbb
(bad)
cs
mov
push
in
jmp
xor
xor
into
pop
retf
push
sub
sbb
or
sbb
loop
inc
ds
not
ret
scas
jg
call
fst
into
out
and
sbb
jae
rcl
and
fnsave
dec
xor
inc
(bad)
and
loopne
adc
lods
and
cld
cmp
xchg
sub
fmul
fs
mov
inc
or
sbb
mov
xchg
jns
mov
rcr
fstp
mov
ror
xchg
mov
dec
mov
sub
jmp
xor
cmp
loop
lahf
cmp
nop
fisttp
sbb
scas
add
pop
sar
push
ror
rol
ds
scas
dec
sbb
out
scas
push
pop
out
xchg
add
test
add
add
sbb
ror
inc
inc
add
daa
inc
cs
or
daa
mov
cmp
and
jbe
mov
dec
mov
(bad)
xor
rol
(bad)
push
add
ret
adc
out
dec
ret
ds
push
sub
js
xor
retf
mov
ret
xchg
mov
pop
mov
mov
push
jo
and
ja
mov
add
lock
imul
mov
popf
xchg
mov
pop
mov
push
stc
mov
sbb
xor
retf
inc
fwait
xor
adc
add
push
add
push
mov
sbb
ins
and
jbe
js
push
test
sub
lods
pop
sub
sub
sub
pop
push
xor
push
or
pushf
xchg
shl
aas
(bad)
xchg
and
jp
xchg
inc
ja
mov
iret
or
ds
jle
rcr
xchg
movs
and
jno
sbb
dec
xlat
adc
test
jmp
jp
sbb
retf
mov
stos
mov
loopne
pusha
add
sub
nop
aad
inc
xor
ss
xchg
cmp
jo
rcr
or
lahf
dec
xlat
sar
dec
push
call
push
fild
pop
mov
and
dec
xor
pop
ret
jle
inc
or
imul
popa
(bad)
sahf
adc
inc
xor
sbb
pop
cwde
cmp
imul
inc
rol
imul
mov
int3
pop
jecxz
aam
mov
pop
mov
shl
gs
fdivp
cmp
ja
jb
or
enter
adc
dec
cmp
inc
mov
ret
movs
inc
inc
xchg
mov
xor
cmp
int3
leave
jnp
xchg
lds
test
adc
add
out
repz
(bad)
mov
mov
shl
repz
add
push
xor
cmovle
xchg
pop
mov
mov
rcr
ret
adc
cmp
xchg
loope
sub
jb
gs
jnp
arpl
(bad)
cmps
or
adc
das
add
test
cmp
xchg
loope
nop
cmp
ffree
pop
push
les
xor
aaa
repnz
inc
cmp
jecxz
add
xchg
jno
stos
ficomp
les
cdq
push
pop
pop
addr16
in
xlat
popa
ret
adc
inc
pop
add
or
sgdtd
jnp
jnp
or
shl
mov
sbb
mov
outs
sub
cmp
dec
inc
fst
jmp
paddw
add
or
rol
pop
or
dec
xor
xchg
jo
movs
movs
lods
in
sub
retf
pop
mov
push
cmp
or
rol
mov
jnp
jno
adc
pusha
(bad)
fsub
pusha
lods
add
sar
mov
mov
mov
test
iret
loopne
dec
repnz
pushf
stos
mov
js
xor
es
mov
addr16
test
rcl
rcr
mov
sar
inc
cmp
jmp
fdivr
mov
in
cmp
aaa
sahf
test
shl
cmp
jnp
aas
mov
mov
mov
popa
adc
jmp
loopne
jo
cwde
mov
xchg
add
dec
jo
or
jl
psraw
inc
ds
pop
jo
cmp
adc
pop
fidivr
add
xor
xlat
add
and
lock
imul
xchg
loope
cmp
jecxz
cs
push
mov
scas
xor
loope
cmps
pop
jecxz
push
ret
ja
cmp
pop
sahf
test
aad
adc
xlat
scas
rcl
sar
cmp
or
xor
sbb
cmp
sub
dec
xchg
shl
jno
ret
jmp
pop
xchg
push
mov
xchg
xchg
ins
loope
mov
js
sub
add
mov
and
std
pop
cmp
or
les
inc
loopne
rcr
ret
sbb
fidiv
hlt
push
and
lock
and
add
inc
xor
xor
loopne
or
repnz
int
mov
jae
jno
cmc
(bad)
sar
add
div
and
mov
jg
fcmove
inc
imul
ja
cwde
mov
arpl
or
and
inc
loopne
test
or
push
mov
inc
xchg
stos
je
mov
mov
cli
scas
sbb
mov
loope
daa
nop
adc
pushf
and
xchg
movs
mov
(bad)
add
fstp
mov
loopne
jl
cmc
popf
and
jae
add
outs
scas
inc
cmp
sbb
pop
push
mov
outs
retf
jmp
dec
lds
sub
sahf
retw
daa
call
into
adc
sub
jnp
xor
adc
jp
shl
xchg
shl
mov
in
ret
in
or
sub
cld
cmp
idiv
cmp
dec
xchg
movs
vpunpcklbw
or
adc
adc
xchg
xchg
adc
mov
stos
or
daa
lock
cli
jns
popf
movs
sar
fidiv
add
lods
ja
jecxz
xchg
or
and
enter
leave
mov
stc
shl
add
pop
rol
jno
push
adc
gs
xlat
adc
add
jecxz
sbb
loopne
retf
xchg
loopne
test
sbb
cmp
dec
fisttp
mov
fstp
int
jno
(bad)
xor
imul
test
pop
inc
cdq
dec
pop
add
sub
aas
pop
jecxz
icebp
xchg
retf
mov
and
jnp
adc
jne
dec
adc
xchg
sub
rcl
cmp
mov
jnp
fisttp
dec
loopne
cwde
or
mov
push
out
aam
jb
or
or
inc
cmp
inc
cmp
push
shl
in
push
dec
lods
mov
das
mov
mov
sbb
outs
mov
out
(bad)
fst
add
cmp
xor
ror
sbb
popa
es
add
(bad)
sahf
in
(bad)
stos
xchg
(bad)
pop
sub
popf
mov
adc
fisubr
or
push
jmp
pop
adc
rol
out
xor
cmp
sbb
mov
loope
inc
test
add
pop
cmp
jo
(bad)
call
repz
sub
jg
xor
push
test
ret
and
add
sbb
add
push
(bad)
cmp
popf
cmp
dec
jmp
int3
arpl
pop
push
lahf
mov
pop
sbb
ins
iret
clc
xchg
pop
js
outs
cmp
dec
js
and
fcom
popa
jmp
push
outs
sbb
adc
(bad)
mov
cmp
jp
and
(bad)
or
jns
cmps
push
prefetchw
push
dec
int
sbb
jp
sub
mov
sbb
adc
mov
fidiv
ins
jmp
sbb
fbld
push
rol
xchg
js
xchg
sar
ret
cmp
cmp
lock
adc
popa
xchg
push
ret
push
inc
mov
inc
sbb
stos
add
sbb
mov
add
or
or
ror
mov
sub
pop
dec
push
xchg
pop
arpl
sub
cmp
lock
js
retf
mov
mov
xchg
pop
jl
sub
jo
loopne
pop
add
daa
push
inc
call
xor
and
out
(bad)
mov
mov
xchg
stc
cs
pushf
imul
call
in
fld
pop
js
and
pmulhuw
jmp
aaa
lods
mov
or
hlt
push
movs
popf
mov
and
in
loop
inc
out
cmp
in
scas
or
or
mov
pop
pop
pop
pop
mov
loopne
jecxz
push
rol
jo
movs
add
mov
or
sub
or
add
mov
sbb
cmp
sbb
mov
mov
sbb
dec
ins
xor
xchg
pop
pop
loopne
repnz
pop
shl
add
paddusw
ret
jns
fbld
mov
adc
nop
add
loopne
rcl
or
loopne
sbb
test
cmp
or
mov
imul
ror
dec
sahf
addr16
xchg
pusha
pushf
jmp
test
mov
sahf
mov
icebp
test
cmp
add
sub
jno
gs
jp
cwde
call
sub
loope
mov
add
or
xor
cmp
xchg
or
or
and
icebp
xor
and
or
xor
lods
test
mov
xor
jmp
adc
adc
dec
iret
xchg
jne
xor
icebp
rcl
sub
rcl
call
sub
loopne
jno
pop
sub
sub
fnstcw
mov
add
lods
je
(bad)
aaa
add
mov
ins
sbb
or
add
out
arpl
(bad)
je
or
cmc
inc
jg
mov
inc
aas
(bad)
mov
mov
sbb
push
adc
push
cmp
jne
sahf
push
outs
inc
into
cmp
pop
shr
and
sub
pusha
out
sub
mov
mov
jbe
xchg
test
imul
cmp
jecxz
sbb
cmp
xchg
rol
pop
push
sub
into
add
pop
fistp
xchg
mov
pop
call
add
pop
pop
enter
cmp
scas
or
inc
std
call
mov
pop
jg
div
add
ret
scas
test
sub
int
outs
mov
outs
test
fidivr
add
lods
cmp
xchg
push
or
mov
inc
cdq
in
mov
das
(bad)
retf
lods
js
out
gs
add
jo
xchg
jae
and
sbb
fadd
shr
repz
loopne
or
inc
cmp
mov
imul
adc
rcr
push
outs
inc
and
jne
sbb
ss
add
xlat
cmp
leave
inc
or
dec
cmp
pop
mov
movs
call
nop
or
cmp
xor
lods
pop
and
sbb
adc
pusha
aam
mov
in
fidiv
bound
xor
pop
sbb
push
retf
fadd
inc
and
fstp
cdq
enter
fs
ret
cmp
pop
lods
or
test
sbb
dec
mov
int3
lea
push
xchg
cmp
and
xchg
mov
xor
push
mov
fadd
scas
inc
pusha
lea
cmp
xor
scas
mov
adc
rol
les
add
jbe
pop
sbb
jbe
(bad)
shl
js
add
add
add
test
fsubr
loope
shl
hlt
cmc
sar
fcmove
jmp
adc
pop
pop
dec
int
adc
loopne
cmp
iret
scas
in
xchg
pop
cmp
dec
fsubr
dec
in
test
call
sbb
into
mov
div
xor
cmps
adc
lock
and
add
scas
jbe
enter
aaa
aam
mov
movs
and
pop
js
and
gs
pop
lea
loopne
sbb
cmp
adc
(bad)
pop
mov
push
je
fadd
dec
xchg
pop
pushf
jns
ja
enter
ret
mov
pop
jl
push
out
sub
cwde
xchg
sbb
push
add
mov
mov
je
add
stos
aas
jle
popa
sub
and
pusha
lea
ret
in
fild
cmc
les
in
add
ret
push
scas
pop
jmp
mov
add
cmp
mov
jne
dec
scas
cmps
rol
fnstsw
adc
loope
rol
pop
xor
arpl
test
(bad)
inc
and
ret
repz
mov
and
fiadd
mov
ror
push
mov
in
xchg
or
xchg
outs
fs
mov
pop
in
and
xor
loopne
cmp
stos
add
adc
rcl
repz
sbb
xchg
mov
rol
cmps
pushf
mov
loopne
and
outs
cmp
into
adc
mov
nop
push
and
int3
div
call
lods
pusha
cmps
loopne
jge
or
fdiv
loopne
jns
stos
cmp
rcr
in
pusha
mov
pop
push
cmp
outs
scas
or
push
repnz
(bad)
sub
xchg
fadd
cld
inc
mov
cmp
adc
lods
aad
sbb
cmp
inc
or
cs
cmp
ror
ss
push
sti
and
movs
js
mov
add
push
mov
icebp
xchg
test
(bad)
xchg
int3
cmp
jae
and
mov
or
xchg
cmp
mov
lock
add
test
sub
mov
add
add
jmp
pop
loopne
daa
xor
mov
jo
in
inc
stos
inc
popa
repnz
lods
mov
xchg
in
xchg
aaa
(bad)
dec
pusha
test
mov
imul
(bad)
int3
cmp
sti
loope
sar
bnd
shl
jecxz
mov
inc
mov
mov
gs
hlt
push
das
inc
mov
sub
test
ja
repnz
fcmovb
rcr
add
dec
cmp
out
push
in
mov
dec
dec
xor
(bad)
add
and
les
and
push
js
adc
pop
idiv
outs
or
dec
test
sbb
movs
movs
jae
movs
and
xor
sbb
jecxz
xor
or
sbb
xchg
fcmove
or
mov
imul
jbe
jne
fst
ror
xchg
fsub
iret
daa
pop
mov
sahf
lods
pop
rol
ret
pop
push
nop
fidiv
xor
xor
sbb
or
or
mov
inc
push
das
adc
jmp
inc
mov
xchg
mov
push
mov
add
das
jbe
dec
jb
ret
sub
mov
add
scas
loope
fstp
sbb
xchg
add
stos
cmovnp
push
das
fsubr
sub
mov
(bad)
test
adc
inc
rol
or
dec
sub
mov
push
inc
xor
xchg
stos
sbb
add
xor
add
inc
leave
retf
xlat
daa
xchg
loope
fsub
cmp
xchg
xchg
jmp
mov
je
(bad)
jp
jmp
outs
jmp
out
sbb
dec
mov
and
imul
jo
mov
test
mov
lods
push
sub
pop
loop
xchg
or
pop
sbb
cmps
or
or
imul
outs
fsub
sbb
imul
lods
adc
test
sub
pop
add
aam
or
jmp
cmp
xor
lock
inc
cmp
dec
sub
pop
mov
rol
out
into
xchg
xor
addr16
mov
pop
je
mov
or
cmp
test
mov
xchg
xor
fwait
sbb
rcl
test
adc
sbb
movs
jo
pop
in
and
rcl
or
sbb
push
xchg
les
jmp
dec
(bad)
pop
mov
jo
sub
mov
add
cmp
aaa
push
gs
adc
cli
adc
loope
fisttp
ins
int3
inc
and
addr16
sub
sub
(bad)
cmp
cmps
gs
add
inc
(bad)
(bad)
sar
mov
loope
test
or
das
xor
and
or
not
sbb
ret
xchg
or
and
nop
mov
(bad)
cld
mov
mov
pop
sbb
mov
mov
cmp
jle
jmp
adc
mov
loopne
push
les
fwait
test
pop
loopne
ret
xchg
pop
sub
add
push
pop
mov
leave
call
mov
mov
std
push
pop
adc
xchg
add
pop
add
or
jns
sbb
push
pop
xchg
ret
arpl
xchg
pop
and
xchg
into
add
retf
rcl
push
push
adc
pop
jnp
mov
sbb
enter
pop
cmp
adc
sbb
cmc
xchg
leave
(bad)
out
ret
xor
popa
or
les
nop
lock
movs
movs
pop
lock
and
popa
call
cmp
add
cmp
or
add
lods
or
loope
or
xor
jnp
and
(bad)
jmp
cmp
push
mov
xor
mov
adc
std
xchg
adc
cmp
xchg
jne
in
add
or
sub
cdq
adc
je
and
or
shl
sbb
sub
inc
das
cmp
mov
stos
pop
push
jb
arpl
sbb
xor
aaa
ret
mov
das
dec
adc
push
fldenv
dec
push
lahf
das
cmps
jmp
pusha
mov
mov
sbb
and
cmp
sbb
add
lods
in
sub
retf
popf
movs
xchg
sbb
movsx
pop
adc
(bad)
xchg
jge
push
cmc
sub
lods
sub
stos
adc
cmp
xchg
stc
jp
lods
jno
cdq
mov
shl
sbb
push
push
cli
mov
push
test
sub
mov
aad
cdq
aad
fmul
pop
inc
das
fdiv
test
leave
nop
dec
cmp
sahf
mov
movs
xor
sahf
adc
xor
sbb
loopne
sbb
hlt
stos
add
scas
adc
inc
xchg
dec
push
rcr
es
(bad)
lock
cmp
lods
(bad)
adc
enter
es
in
dec
adc
bnd
test
sbb
je
xchg
mov
mov
cmp
cs
add
push
and
sbb
cmps
jmp
enter
cmovno
fiadd
out
js
dec
retf
push
mov
cmp
dec
les
cmp
add
cmp
mov
xchg
daa
push
rcr
cmp
and
retf
fisttp
leave
pop
clc
xchg
pop
outs
and
in
out
into
js
das
mov
rcl
push
aam
sbb
mov
mov
xchg
inc
enter
ins
js
lods
fld
cmp
lock
cmp
pop
aaa
pop
cmp
or
loopne
cmp
xchg
sbb
gs
or
clc
test
(bad)
in
lock
das
mov
fld
cmp
retf
lock
cs
hlt
fs
sbb
movs
icebp
popf
xor
add
test
push
mov
add
or
lods
pop
scas
mov
adc
daa
mov
test
pop
xchg
sbb
ror
imul
mov
cs
ins
jl
ret
outs
test
shr
inc
jmp
bound
stos
xlat
pop
push
shr
sbb
inc
pop
rcr
sub
inc
dec
xchg
ret
xor
sbb
mov
(bad)
and
xchg
daa
pop
inc
push
xchg
xchg
movs
xor
add
and
dec
cmp
add
aas
fs
pop
add
push
push
mov
jmp
fldz
in
sub
fdiv
push
and
add
mov
pop
clc
test
jns
out
test
jmp
fstp
pop
adc
ret
mov
rol
add
stos
pushf
cmp
and
add
lea
push
bound
sbb
js
lds
rcl
pop
push
repz
xor
ret
popa
lods
div
(bad)
loope
jp
sbb
imul
push
movs
leave
lock
xchg
pop
cli
sbb
(bad)
mov
shr
(bad)
fnstcw
test
bswap
pop
xchg
imul
jbe
loopne
sub
inc
and
pop
out
imul
test
in
imul
rol
pushf
pop
mov
push
rcr
out
cmp
jnp
jecxz
repnz
rol
pop
jge
xchg
push
daa
push
fs
daa
xchg
test
inc
adc
jmp
inc
mov
mov
sub
pop
loopne
inc
out
jno
nop
adc
inc
mov
xchg
aad
add
call
inc
shl
ret
cmp
aaa
and
sahf
xor
sub
movs
xchg
enter
daa
jmp
nop
push
mov
push
inc
add
sbb
xchg
cmc
ret
xor
loope
mov
cwde
out
sar
mov
pop
jne
mov
xor
cmp
push
js
inc
mov
ret
sbb
push
mov
(bad)
push
rcl
sub
xor
call
sub
mov
aam
jp
or
fs
jno
hlt
les
jno
icebp
jne
mov
mov
pop
sahf
imul
loopne
adc
inc
loope
or
mov
dec
sub
pop
pop
inc
push
xor
test
push
imul
arpl
fsubr
(bad)
stos
xor
sub
js
mov
xor
repnz
xor
mov
pusha
sbb
push
cmp
nop
adc
mov
or
pop
push
addr16
int3
movs
inc
cmp
or
and
lods
into
out
mov
adc
push
pushf
and
push
xchg
push
lods
pushf
fsub
push
les
(bad)
push
cmp
shl
mov
dec
sbb
addr16
mov
les
xchg
int3
fsubr
jecxz
cmp
rcl
cmp
mov
sub
test
jb
xchg
rol
jo
ficom
adc
in
lods
pop
or
or
add
jecxz
movs
mov
or
test
sbb
push
jl
mov
adc
inc
loopne
inc
inc
sahf
push
or
add
lods
popa
addr16
into
fstp
nop
xchg
mov
loopne
cmp
jb
lods
test
lds
mov
aad
lods
mov
test
ficom
outs
dec
fmul
dec
retf
cmp
stos
sub
cli
jmp
cmc
sahf
or
jmp
xchg
cmp
(bad)
push
cmp
xchg
fs
mov
ret
push
dec
xor
inc
push
xchg
icebp
dec
bound
mov
fdiv
or
nop
inc
into
sub
shl
jae
jo
cmp
je
dec
das
sbb
clc
or
pop
retf
sbb
sbb
sbb
movs
pushf
test
sub
test
cmp
mov
xor
pusha
mov
sbb
lock
mov
cmp
cwde
pop
xchg
sbb
add
sqrtps
gs
or
ret
shr
stos
nop
jae
lods
push
adc
aaa
aaa
nop
add
and
dec
pop
lds
jg
lods
cmc
sbb
mov
nop
loopne
jg
sbb
shl
push
into
mov
pushf
mov
cmp
ror
enter
repz
dec
mov
lods
lods
jne
push
test
stos
push
add
sbb
ret
jmp
rol
out
jmp
ret
loop
into
xchg
and
push
cld
push
and
(bad)
arpl
xchg
mov
test
iret
inc
sub
jns
ins
ficom
cld
dec
jb
sbb
sbb
jmp
pop
cmp
inc
pop
or
movs
jb
rol
sub
sbb
jb
loope
sbb
sbb
add
jno
add
sub
pusha
inc
mov
gs
pop
adc
clc
ret
ret
cs
test
push
xchg
push
rol
xor
mov
xchg
xor
jns
test
or
adc
adc
add
sahf
jp
jo
fisub
or
add
(bad)
xor
out
mov
add
dec
les
sub
lods
cmp
inc
out
ret
jmp
xchg
cmp
cmp
cdq
add
jns
sub
fst
cmp
imul
ret
retf
jbe
test
mov
sub
inc
pop
pop
cdq
ret
pusha
mov
cdq
ret
daa
add
icebp
sub
movs
inc
pusha
and
clc
and
mov
pop
dec
retf
mov
arpl
lods
sub
add
aaa
push
and
nop
ins
ret
test
in
or
mov
pop
cmp
jns
pop
xor
int
add
sub
maskmovq
idiv
jbe
and
fstp
mov
and
ja
enter
or
or
sbb
shr
add
cwde
repnz
imul
jle
add
add
out
mov
or
mov
or
call
inc
xlat
mov
inc
pop
sbb
or
into
or
aam
(bad)
cmps
cmp
sbb
adc
popf
sti
fstp
data16
loope
sbb
mov
adc
sub
xor
pop
pop
push
jbe
cdq
jmp
retf
bound
mov
inc
lock
aam
outs
add
(bad)
xchg
cld
sbb
pusha
sbb
lods
bound
retf
cmp
fmulp
mov
or
push
pop
jbe
retf
jo
jb
rcr
push
or
xchg
aas
mov
add
sar
fdiv
and
mov
pushf
fs
stc
mov
sub
(bad)
ins
(bad)
cli
add
cmp
fidiv
adc
test
pop
movs
inc
jmp
daa
or
leave
jmp
shr
jge
mov
cmp
xor
icebp
pusha
or
mov
arpl
ret
pusha
xor
dec
sbb
jo
sub
popa
add
sbb
add
cmp
in
push
bound
pop
shl
cmp
repnz
add
cmp
sbb
adc
cmp
xadd
xor
fs
cmp
pop
cmp
sub
call
loop
dec
dec
loop
clc
sbb
cmp
cmc
push
jne
outs
or
fsubr
retf
jmp
ins
mov
jge
or
add
xor
sub
in
inc
mov
xchg
dec
shr
and
and
arpl
in
sub
lea
jmp
scas
and
jge
fbld
xchg
js
push
test
mov
push
cmp
je
retf
(bad)
comiss
fistp
push
pop
popf
jne
fst
pop
push
pop
inc
pop
fs
mov
push
or
sub
mov
sbb
jno
adc
xchg
inc
fstp
mov
sub
mov
xor
cmp
xchg
xchg
inc
jnp
ins
hlt
sbb
adc
cmp
in
mov
aaa
mov
pop
aas
or
dec
xor
fist
into
adc
or
sar
outs
dec
add
add
cmp
mov
fadd
repnz
mov
cs
adc
mov
add
add
mov
push
enter
mov
sbb
sub
lds
(bad)
sbb
pop
mov
in
inc
pushf
pusha
push
pop
xchg
jbe
(bad)
or
jns
cmps
je
jecxz
inc
and
pop
inc
adc
add
sbb
cmp
sbb
mov
cmp
sbb
mov
sbb
add
dec
aas
add
or
loopne
push
shl
mov
xchg
xchg
fs
lea
xchg
arpl
sub
mov
cmp
add
in
icebp
ror
inc
loop
in
ror
add
or
xchg
and
mov
lea
repz
bsr
shr
sub
lds
inc
pushf
push
jecxz
mov
xchg
imul
adc
arpl
add
dec
ret
ret
mov
add
cmp
fmul
stos
inc
and
sub
add
mov
sbb
fidivr
push
mov
sbb
pop
dec
sbb
add
push
(bad)
cmp
mov
in
out
adc
pop
cmps
movs
ret
inc
movs
lods
bound
sub
nop
add
push
retf
mov
mov
pop
cmp
mov
pop
xor
inc
pop
pop
ins
popa
or
popa
loope
inc
shl
ds
int
push
scas
inc
inc
shr
or
popa
xor
or
mov
mov
stos
sub
inc
out
popa
mov
pushf
movs
xor
dec
jb
or
add
jb
hlt
and
cmp
jmp
imul
mov
je
dec
outs
popa
fdivr
scas
lods
jl
inc
add
(bad)
and
out
lods
pop
(bad)
adc
cmps
dec
bound
mov
push
add
dec
xor
sub
jmp
mov
sub
ja
jb
in
fisttp
shl
mov
jecxz
pop
add
ficomp
add
cmp
xchg
sub
adc
(bad)
test
add
out
jmp
loopne
jp
lock
dec
lea
shl
js
xchg
sub
jno
pop
rol
mul
fdivp
retf
or
or
js
out
inc
mov
xchg
push
mov
aam
sub
ss
inc
lock
in
mov
dec
and
adc
inc
push
push
pop
loopne
jge
in
xchg
hlt
or
pop
push
xor
and
or
mov
pushf
mov
or
inc
fstp
sub
lock
int
sahf
jo
push
xor
retf
jmp
jp
les
(bad)
pop
xchg
lahf
ins
lea
popa
add
lds
and
shl
std
repz
pop
jl
jo
and
and
and
arpl
lods
or
ret
cmp
jg
das
cmp
lea
sub
fimul
inc
push
xchg
aaa
in
outs
xchg
or
dec
adc
nop
add
fwait
pushf
scas
add
kunpckbw
mov
sbb
sub
out
mov
sub
mov
mov
(bad)
aad
mov
fisttp
lods
inc
shr
mov
and
into
inc
gs
pop
loop
pop
data16
pop
inc
mov
cmp
sbb
adc
xchg
xlat
adc
daa
mov
mov
fs
mov
sbb
out
add
xchg
sub
call
xor
add
(bad)
leave
dec
rol
mov
and
push
pop
out
mov
cmc
xchg
push
ins
mulps
sbb
pop
adc
sar
or
js
data16
cmp
cmp
mov
out
lods
push
(bad)
out
dec
test
jo
jg
xchg
jno
jmp
fsubr
or
inc
out
push
fdiv
imul
xchg
cmp
jp
push
mov
popa
fs
imul
test
add
jo
jmp
ins
xchg
hlt
add
and
xor
sub
xchg
fimul
lock
mov
or
xchg
fs
sub
lahf
ds
ja
xor
cmp
and
mov
inc
add
adc
pop
pop
jo
call
jg
addr16
rol
and
add
inc
or
mov
push
repnz
femms
and
add
push
rol
lea
xchg
add
mov
sbb
js
push
pushf
inc
sbb
(bad)
movs
movs
push
mov
inc
mov
sub
js
repz
xor
inc
pop
lods
sub
pop
imul
xchg
je
sar
adc
dec
ror
popf
add
ret
jmp
xchg
test
ja
aad
xor
push
lock
inc
or
xor
loope
aam
out
ror
or
fst
sbb
clc
gs
and
pushf
icebp
hlt
fisubr
std
imul
sub
add
out
or
inc
mov
loopne
fwait
cmps
cmps
adc
inc
les
inc
push
pop
pop
fnstsw
fcmove
lock
scas
adc
lock
add
(bad)
xor
push
add
pop
imul
inc
adc
les
xor
enter
jae
or
push
ins
in
out
cmp
adc
mov
jmp
je
mov
ror
ja
sub
inc
xchg
and
sbb
jno
sub
mov
jo
push
xor
call
js
xor
xor
mov
mov
(bad)
(bad)
mov
mov
mov
jo
inc
ror
rol
dec
jmp
ret
sar
sbb
cmps
popf
inc
add
inc
arpl
(bad)
jnp
adc
enter
pop
xchg
mov
adc
enter
in
pop
inc
adc
or
loope
ret
loopne
aam
jo
cmp
pop
ret
movs
mov
into
cmps
pop
add
sbb
ret
(bad)
int3
rcl
imul
sub
aaa
into
js
test
mov
mov
fidiv
xlat
out
clc
scas
add
cmps
pop
or
les
(bad)
repnz
sbb
xchg
das
movs
pop
xchg
pop
es
(bad)
fcom
lods
clc
or
or
sbb
sbb
cs
adc
mov
lods
pushf
mov
(bad)
lods
ror
popf
in
popf
pop
fstp
sub
int3
fmul
push
js
call
cmps
add
push
and
adc
popa
pop
or
mov
dec
jb
(bad)
ss
add
stos
and
jmp
stc
aaa
sub
jmp
loopne
or
(bad)
mov
shl
push
shl
adc
inc
cs
shr
sbb
dec
or
fcmovu
xor
ins
popf
(bad)
and
or
dec
cmp
adc
or
push
add
jne
pop
mov
add
bound
and
push
adc
outs
pop
jbe
mov
push
xchg
les
push
sub
leave
sbb
adc
xchg
scas
mov
sbb
or
push
arpl
mov
or
mov
add
js
add
sar
popa
sub
mov
(bad)
pop
into
retf
jge
mov
push
hlt
inc
pop
rol
retf
ret
fwait
mov
xchg
test
fnstcw
mov
dec
fisttp
mov
xchg
sbb
pushf
mov
test
shl
mov
jno
ja
sbb
xor
test
je
inc
inc
out
dec
dec
push
pop
int3
movs
mov
movs
sbb
cmps
push
scas
inc
sbb
aas
pop
stos
adc
sub
shl
addr16
ror
test
movs
xchg
or
push
test
push
cmps
out
das
add
bound
jnp
inc
mov
mov
add
cli
and
stos
sub
retf
push
fst
xchg
xchg
rcl
ins
adc
jnp
shl
mov
cmp
xchg
call
bound
pop
bound
xchg
pop
test
mov
and
xor
xchg
xchg
mov
xchg
xor
add
xor
aaa
loop
mov
lock
sbb
(bad)
sub
(bad)
test
aaa
clc
xor
xor
stos
pop
cmp
pop
xor
popf
rcl
inc
push
enter
push
xchg
stc
xor
jae
mov
mov
lods
pusha
movs
je
cmc
jno
jmp
mov
rol
nop
jecxz
nop
and
dec
cmp
pop
sub
(bad)
sbb
ret
sub
ins
jno
mov
ja
and
inc
push
fmulp
or
push
arpl
cmp
and
out
dec
loopne
pusha
xlat
ror
cmps
jne
test
push
add
pop
pop
rol
cmps
jge
jp
fnstsw
retf
sbb
fwait
lahf
lea
jo
jne
mov
ret
lods
aad
rol
ds
sbb
dec
pusha
pop
lds
rcl
cmp
mov
bound
jmp
jl
jp
in
gs
fdivr
cmp
ins
sti
jb
int3
inc
fidiv
dec
sbb
inc
out
inc
xchg
(bad)
xchg
int
jno
or
add
mov
ja
js
das
dec
cwde
add
xchg
ja
inc
jbe
sbb
push
xchg
rcl
(bad)
ror
mov
aaa
push
cli
push
push
xor
fstp
pop
shr
jbe
jo
jns
aad
mov
or
add
loope
shl
ret
ds
xchg
pusha
sub
xchg
in
cmps
sub
fpatan
add
pop
jo
xchg
ds
xchg
jmp
add
mov
(bad)
loopne
xor
jmp
lods
jne
ret
fs
mov
out
sub
dec
xchg
sbb
js
or
loopne
sbb
arpl
imul
lock
sub
mov
mov
mov
and
mov
cmp
xchg
dec
cmps
loopne
mov
sbb
in
mov
push
sbb
xor
dec
stos
or
jmp
ins
ins
pop
pushf
jne
pusha
movs
fstp
mul
fs
outs
cmps
pushf
out
push
sub
sbb
xor
xor
je
into
xlat
clc
es
or
aas
pop
sub
push
ret
ror
xlat
out
sub
into
dec
int
or
xor
aaa
in
ds
fbstp
(bad)
jle
sbb
xchg
and
and
fdivr
inc
(bad)
pop
xor
and
imul
ss
push
(bad)
sub
or
sub
xchg
jns
mov
pop
faddp
fst
(bad)
in
inc
push
jns
xor
add
and
cwde
or
xor
mov
adc
aaa
add
ror
adc
pushf
jno
inc
ins
and
sbb
or
jge
pop
movs
sbb
inc
fistp
sahf
(bad)
test
xchg
stc
fld
push
daa
pop
add
dec
retf
outs
and
pusha
jae
mov
sub
push
or
mov
int3
jns
mov
pop
(bad)
jb
das
bound
lods
lea
rol
dec
dec
pop
rol
gs
or
adc
ret
dec
dec
mov
add
sbb
das
loopne
xor
mov
mov
or
sbb
inc
pslld
pop
sbb
test
inc
psubusb
pop
jo
shl
sub
fmul
pop
sbb
loop
aaa
xor
call
pop
sbb
fimul
pop
fist
or
ret
ficom
jmp
inc
in
xchg
stc
or
add
jo
xlat
sub
sbb
es
pop
adc
pusha
repz
pop
pop
sub
mov
sar
inc
cs
jns
(bad)
rol
add
inc
adc
xchg
das
out
pop
add
cli
pop
xor
retf
test
dec
shl
xchg
pop
enter
fisubr
in
adc
pop
mov
push
pop
das
repnz
mov
movs
lds
xchg
mov
jecxz
addr16
push
and
imul
xor
stc
gs
sbb
xor
xor
and
mov
push
add
mov
shr
repz
in
ret
pop
addr16
jmp
xchg
xchg
adc
je
bound
add
fmul
or
loopne
jno
add
and
mov
(bad)
popa
jo
or
out
fcomp
mov
js
pop
push
xchg
in
js
pop
ds
test
jmp
jl
sbb
movs
mov
push
pop
adc
fwait
in
or
jmp
movs
in
popa
and
pop
or
sub
dec
sbb
cld
rol
push
sbb
and
sub
js
dec
scas
fiadd
outs
mov
shl
outs
jl
pop
cmp
dec
mov
scas
pop
xor
inc
les
pandn
push
ret
mov
sbb
sub
adc
lods
imul
adc
dec
pop
sbb
ja
push
and
and
cmps
stos
add
mov
call
sar
and
lock
adc
and
mov
pop
movs
movs
adc
or
inc
add
push
mov
push
ins
jo
and
mov
or
pop
mov
mov
test
jns
loope
xchg
leave
cmps
xor
dec
jmp
mov
dec
jl
or
mov
jno
stc
in
loop
cdq
(bad)
popf
cmp
fld
fisttp
dec
sbb
push
and
(bad)
mov
pusha
push
les
and
fiadd
and
js
sbb
push
icebp
rol
xchg
test
inc
add
adc
mov
mov
ins
sahf
mov
ds
xor
cli
or
xchg
cmps
mov
stos
lods
add
add
and
daa
cmp
int
(bad)
mov
cwde
call
pop
sbb
popf
aaa
xchg
mov
lock
aam
loop
movs
sahf
aad
xor
jp
test
pop
sbb
adc
cmp
push
aad
sub
(bad)
cwde
xor
popa
jne
loop
pop
jno
mov
test
jb
mov
mov
std
inc
cmp
fidiv
aad
push
push
out
pushf
lock
test
xchg
xor
or
xchg
das
mov
sbb
xabort
inc
or
sbb
outs
mov
outs
jp
jae
retf
jmp
xchg
nop
sbb
dec
mov
loop
test
or
popa
ret
mov
adc
ret
imul
mov
leave
or
lock
xlat
jmp
ret
cmp
mov
retf
mov
add
pop
mov
adc
arpl
jo
dec
lds
lock
sbb
xchg
add
inc
cmp
mov
loopne
mov
iret
xchg
mov
push
int
adc
(bad)
loopne
sbb
inc
cmp
fnstcw
inc
or
sahf
cmp
in
push
xlat
xchg
mov
push
jb
and
lds
sbb
popf
gs
mov
call
or
adc
hlt
adc
adc
loopne
js
aam
sub
fsubp
sbb
jno
pop
adc
xor
bswap
retf
data16
jo
xor
adc
add
ret
cmp
push
and
push
or
clc
mov
sub
ins
sbb
mov
xchg
mov
les
xor
xor
xchg
pop
outs
push
and
push
das
mov
dec
inc
sbb
push
shl
adc
loope
push
outs
ss
inc
xchg
sbb
or
or
mov
and
push
pop
mov
loopne
push
in
fidivr
mov
loope
xor
add
(bad)
mov
xchg
test
xchg
sbb
add
and
daa
arpl
pop
ins
add
adc
push
jecxz
sbb
sub
pop
mov
daa
in
test
jp
sub
popf
xor
fcmovnu
sbb
fiadd
dec
ret
dec
push
push
or
les
adc
xor
nop
shl
sub
into
mov
retf
cmp
ins
out
dec
popf
lock
add
popf
lock
mov
sub
popf
mov
jecxz
data16
ins
jae
dec
cmp
out
mov
and
les
(bad)
lods
push
inc
mov
cmp
loopne
ror
repnz
js
add
xchg
and
(bad)
enter
inc
mov
ret
call
(bad)
scas
mov
retf
adc
mov
mov
fs
or
mov
popf
ret
or
repnz
ret
lea
or
rol
sub
mov
xor
jno
sbb
mov
xor
and
jno
(bad)
and
or
dec
ret
xchg
or
outs
(bad)
dec
mov
xor
cmp
and
packssdw
mov
movs
movs
mov
mov
sbb
sbb
fwait
jge
mov
add
jae
adc
cmp
gs
rcr
bound
add
loop
push
adc
ds
or
jne
adc
adc
cmp
loop
pop
mov
mov
js
add
aad
inc
add
mov
push
(bad)
js
fisub
ret
mov
gs
mov
mov
sbb
ins
mov
mov
imul
cwde
fsub
push
into
mov
fdivr
xlat
cmps
and
dec
push
fadd
rol
dec
out
retf
out
sti
pushf
cwde
pop
cmp
adc
loope
push
mov
sub
repz
loope
xchg
pushf
jnp
jb
pushf
cmc
xchg
outs
movs
pop
or
or
push
js
js
or
push
out
imul
repz
mov
es
pop
pop
or
sar
call
add
cmp
or
jecxz
ror
clc
or
ss
dec
inc
jg
fisttp
jno
test
das
cwde
inc
cmp
inc
outs
cmp
popa
and
xor
ja
adc
enter
mov
xchg
and
xchg
cmps
jnp
cs
sub
jp
and
mov
imul
cmp
int3
or
into
push
adc
retf
pop
mov
xchg
loopne
rcl
push
fild
add
pop
jmp
retf
pushf
or
(bad)
imul
fcom
das
imul
cmp
inc
xchg
retf
(bad)
mov
push
shl
sbb
clc
xor
ret
adc
xor
dec
out
mov
das
loop
cdq
push
lods
dec
js
sub
cmp
repnz
pop
clc
jecxz
cmp
mov
jmp
sub
push
das
cmp
add
outs
cmp
fadd
lock
add
ficomp
jo
scas
xchg
pop
mov
jmp
sub
mov
or
and
and
cs
cmp
call
imul
and
jo
sahf
sbb
mov
sahf
fcom
imul
dec
jl
add
push
jo
ins
add
push
mov
xor
add
jbe
pusha
xor
aad
adc
popf
fidivr
sbb
push
add
dec
adc
jp
push
cmp
push
push
into
addr16
jnp
adc
jns
je
inc
sub
add
inc
mov
ret
mov
aaa
xor
jmp
xchg
jnp
mov
push
movs
mov
fadd
jp
xchg
sub
and
mov
sub
ficom
fisubr
lods
push
or
mov
mov
js
lea
les
in
or
int3
mov
mov
dec
push
jg
mov
fild
mov
sbb
cmps
mov
push
(bad)
cmp
sbb
push
das
mov
sbb
and
clc
out
loope
jl
aad
daa
push
sub
jae
hlt
xchg
retf
mov
outs
jns
and
jp
fdivr
les
fs
and
add
cmp
push
xchg
loop
pusha
jl
add
movs
mov
test
pop
jnp
loop
loopne
cld
dec
mov
imul
xchg
pop
pusha
or
cmps
adc
add
pop
clc
test
mov
mov
dec
or
jns
add
push
loope
and
sub
(bad)
retf
push
jbe
sbb
sbb
mov
pop
(bad)
imul
dec
(bad)
adc
sar
sahf
rcl
push
out
mov
sbb
repz
std
xchg
push
xchg
test
xchg
mov
(bad)
pusha
add
xchg
je
add
adc
test
jge
xchg
popa
inc
ret
aaa
das
mov
jns
jno
pop
push
cli
ret
mov
test
sbb
or
rcr
sub
jne
and
sbb
push
dec
jae
or
inc
pop
push
push
sub
sub
xchg
push
push
ja
jle
popf
or
aaa
mov
aam
add
jge
enter
and
add
rcr
mov
jp
test
retf
mov
xchg
jle
loope
mov
push
cmp
hlt
sub
lock
adc
mov
mov
(bad)
xchg
push
jmp
pop
cmps
cmps
adc
xchg
jae
xor
jae
pop
push
retf
dec
adc
cmp
imul
xchg
add
daa
or
xor
xchg
push
popa
ret
jmp
pop
shl
inc
push
and
jecxz
ja
sub
adc
or
test
in
adc
fadd
mov
push
(bad)
xor
add
xchg
jmp
fmul
sbb
(bad)
arpl
rcl
xor
jmp
retf
or
adc
and
rcl
call
out
dec
retf
lahf
outs
sub
push
sbb
inc
pop
dec
inc
js
popf
and
jnp
add
pop
fcomi
cmp
cmc
pop
fiadd
dec
call
retf
imul
fadd
aam
mov
je
lods
push
sar
xor
push
pop
arpl
sbb
js
mov
inc
or
mov
sbb
xchg
sar
cmp
adc
jo
enter
pop
push
inc
xlat
mov
or
out
into
mov
ficomp
jae
shl
push
sbb
dec
pushf
mov
mov
sub
ror
xor
push
add
and
(bad)
cld
or
mov
add
or
or
push
dec
mov
xor
imul
xchg
dec
rcl
xchg
gs
sbb
outs
add
push
aaa
stc
cmps
push
pop
jns
jbe
ror
and
adc
nop
add
leave
fwait
cmp
xchg
add
and
jo
sbb
cli
jns
mov
sub
adc
pop
ret
inc
ret
pop
daa
mov
cmp
lods
jne
mov
mov
mov
mov
mov
bound
xchg
sub
jo
retf
xlat
jmp
outs
sti
push
dec
call
jecxz
daa
dec
mov
or
and
icebp
sbb
pop
fwait
ret
inc
test
or
scas
fist
add
fist
lods
mov
enter
xchg
jo
push
cmc
xchg
cli
mov
mov
les
movs
mov
jo
inc
push
cwde
jo
mov
aam
sub
out
mov
mov
scas
adc
js
mov
xor
ret
movs
icebp
loope
sbb
aad
xchg
xor
(bad)
push
mov
add
xor
xor
ins
dec
cmp
shl
push
retf
test
and
dec
cmc
test
jmp
jle
push
inc
aam
test
rcr
or
jmp
leave
mov
pop
pop
jbe
ficomp
mov
xchg
fimul
daa
push
(bad)
jo
adc
push
dec
sbb
sub
ja
out
jne
xor
cwde
cmp
jecxz
rol
cld
cmp
jne
pushf
inc
mov
add
xchg
test
inc
enter
dec
adc
and
sbb
lods
shl
icebp
add
enter
sub
pusha
mov
rcl
(bad)
jo
push
inc
jge
sbb
mov
les
or
gs
jecxz
cmp
call
rcr
cli
and
pop
std
(bad)
fdivr
add
into
cs
jae
xor
adc
das
pushf
lea
xchg
popa
jno
loop
dec
inc
pop
pushf
into
cmp
push
repz
jb
cmc
and
xor
mov
popa
mov
rol
xlat
xchg
cdq
sub
fld
call
scas
out
call
ins
jmp
rcl
or
fwait
push
inc
and
cmp
pusha
aaa
mov
mov
add
call
data16
lock
lahf
dec
xlat
cmp
outs
sub
lea
cwde
cmps
mov
(bad)
mov
adc
ret
jp
out
push
inc
sub
mov
retf
pusha
add
and
in
sub
ret
or
jb
xchg
cmc
mov
daa
fmul
push
jl
mov
cmp
add
dec
retf
ins
cmps
mov
or
daa
loope
(bad)
test
jmp
cs
imul
movs
dec
movs
stos
push
sbb
and
adc
pop
out
inc
dec
jbe
sub
xchg
sbb
push
or
or
in
add
xor
inc
add
push
xchg
sbb
xchg
dec
push
fistp
jne
loop
movs
inc
pop
dec
pop
sub
(bad)
jp
or
and
and
push
inc
cmp
mov
rol
cmp
std
clc
xchg
(bad)
add
mov
les
mov
js
jb
into
ds
sbb
cmp
scas
lods
mov
sbb
stos
addr16
xlat
add
and
movs
xor
call
adc
jge
imul
xor
push
cwde
jo
lock
pop
cmc
aaa
add
(bad)
pop
iret
xchg
pop
mov
cmp
cmp
push
dec
dec
mov
test
dec
xchg
cmp
fnstenv
ffree
jmp
cmps
xchg
rcl
and
les
out
or
and
fst
mov
les
dec
adc
imul
jl
xchg
and
add
dec
mov
and
rcl
pop
(bad)
clc
call
fwait
and
pop
in
into
mov
mov
mov
sbb
cmp
add
stos
add
arpl
mov
mov
push
in
push
add
sub
ins
cmp
or
jne
add
push
and
into
fiadd
nop
pop
sub
sbb
es
fbstp
cmc
js
adc
xor
icebp
xor
mov
and
popf
and
add
push
rol
addr16
push
dec
fsub
cmp
dec
ja
daa
mov
xor
xchg
mov
jo
push
push
addr16
je
retf
fdiv
or
aam
sbb
push
fisubr
rol
cdq
pop
movs
jnp
jp
ret
push
pop
add
fdivr
pusha
daa
xor
push
inc
and
dec
mov
loope
and
and
jl
test
lods
rol
xchg
pop
xchg
std
cmp
stos
mov
inc
out
sbb
call
xchg
push
ja
loopne
sub
nop
add
jmp
mov
adc
sbb
fwait
add
cmp
das
sbb
popf
mov
mov
icebp
lods
push
mov
rcl
imul
icebp
stc
aam
and
(bad)
sub
xchg
sti
repz
dec
mov
add
lods
jo
xor
loopne
push
push
scas
inc
js
sub
adc
adc
ror
xor
rol
lds
xor
mov
adc
dec
cmc
sbb
xchg
inc
pop
ins
pop
or
lahf
into
sbb
fs
cmps
stos
ja
mov
addr16
dec
popf
jge
sbb
out
sahf
mov
loope
lods
ins
pop
inc
xchg
ret
pop
sbb
lock
and
jbe
movs
mov
add
test
popa
push
cli
jmp
loopne
and
push
rol
sbb
lock
icebp
test
jo
sbb
hlt
sti
leave
or
pushf
jno
ret
sahf
ss
jns
push
jp
cmp
add
jle
or
sbb
push
xor
inc
repz
mov
(bad)
mov
icebp
cmp
or
icebp
je
cli
adc
or
lods
pop
or
xor
shr
sbb
push
pop
bswap
add
or
cmp
jnp
hlt
(bad)
bound
add
adc
push
or
push
dec
(bad)
or
inc
and
nop
out
in
mov
cmp
sub
(bad)
mov
sub
cmp
cmp
imul
jns
dec
mov
lahf
push
or
mov
dec
(bad)
inc
rcr
adc
pop
mov
add
retf
imul
pop
sqrtps
ud0
ret
jbe
nop
or
cmp
fcmovnu
pop
sub
dec
dec
dec
loopne
(bad)
scas
adc
xchg
xor
xchg
jecxz
sbb
xlat
aaa
cmps
mov
and
dec
pop
lods
and
add
or
es
inc
popa
je
xchg
xchg
add
sub
into
mov
cmps
add
loopne
inc
push
jne
ds
sub
cmp
pop
sub
dec
fs
addr16
mov
cli
lock
add
pop
test
int3
ficomp
cmp
nop
jnp
xor
mov
js
inc
rol
xlat
les
xchg
dec
mov
sbb
sub
cmp
mov
ret
xor
in
mov
and
jle
pop
les
xor
js
ins
inc
add
push
add
adc
inc
sub
pop
popf
icebp
cmp
inc
cwde
mov
push
xor
mov
mov
dec
sbb
xchg
sub
pushf
or
xchg
jns
push
adc
inc
cmp
xor
jmp
and
fistp
fld
add
lds
xchg
(bad)
dec
cmps
les
add
test
inc
mov
int
jp
ds
repz
and
push
aaa
rol
loop
ret
xchg
popf
xor
add
sar
ret
sbb
or
imul
sbb
sbb
mov
dec
push
xor
imul
adc
sub
sub
out
pop
or
dec
add
jo
test
and
lea
fisubr
inc
jne
arpl
push
mov
mov
ret
dec
aad
test
pop
sub
(bad)
sar
mov
xor
xchg
gs
(bad)
stos
sub
cmp
or
and
adc
and
mov
push
push
sub
push
(bad)
adc
add
scas
imul
les
ja
add
xor
xlat
jmp
push
(bad)
sbb
inc
push
add
add
fisttp
mov
call
loopne
ds
lock
mov
jle
imul
mov
and
cwde
mov
popa
and
push
dec
arpl
cmp
call
mov
mov
mov
iret
or
(bad)
jecxz
cli
xor
add
mov
cmp
stc
push
gs
loop
cdq
fnstsw
sub
js
jno
jmp
cmp
in
cmp
sub
into
loope
or
xor
mov
sbb
add
jae
xor
sbb
test
xchg
xor
das
cmp
mov
sbb
(bad)
punpcklbw
dec
in
sahf
xor
lds
ret
ror
int
les
push
and
scas
iret
push
jbe
push
mov
shl
shl
outs
mov
call
test
pop
mov
fs
(bad)
daa
loopne
int3
dec
test
arpl
adc
ja
pop
dec
mov
sahf
test
mov
mov
pop
cmp
pop
inc
push
pushf
add
cmp
sbb
arpl
pusha
adc
jo
ret
sub
adc
les
ret
sbb
sub
dec
add
out
mov
ss
and
and
or
in
adc
jecxz
sub
out
xchg
adc
mov
cmp
into
sbb
pop
leave
add
jo
xchg
inc
xchg
sbb
nop
inc
fdivrp
mul
add
sub
jne
test
call
fs
pushf
dec
pop
out
in
sbb
pop
nop
pop
loopne
xchg
fisub
je
fmul
push
xchg
movs
pop
mov
fs
mov
pop
cdq
xor
cs
mov
scas
or
sub
or
xchg
and
enter
cmp
out
sbb
sbb
sub
or
fld
retf
outs
sbb
enter
adc
pop
dec
pushf
mov
xchg
xchg
jnp
lods
dec
or
mul
mov
pop
daa
add
ret
ret
jecxz
cmps
inc
mov
xchg
test
loop
sub
jge
lods
xor
loope
xchg
xor
add
mov
jecxz
sub
out
dec
push
(bad)
push
pop
ficomp
dec
pop
add
mul
xor
inc
mov
in
xchg
test
add
mov
add
hlt
and
pushf
cmps
xor
(bad)
xlat
jge
mov
jae
mov
(bad)
push
push
rcl
pop
mov
dec
sbb
jb
push
es
in
std
shl
and
dec
lahf
adc
sbb
je
xchg
mov
push
(bad)
jecxz
(bad)
and
jb
cwde
ret
dec
add
mov
sbb
adc
dec
pusha
mov
mov
push
push
pop
xchg
mov
dec
les
scas
mov
xor
ret
cmp
outs
xlat
mov
dec
jmp
rol
or
mov
daa
out
cmp
nop
jbe
inc
dec
or
js
call
cmps
sahf
fs
into
js
out
dec
jo
or
imul
adc
sbb
shl
or
rcl
frstor
and
jns
push
les
cmp
imul
shr
jge
adc
jmp
cs
cmp
dec
jo
push
pop
mov
sbb
out
xor
and
aad
xchg
mov
cmps
movs
add
enter
scas
ficom
sbb
iret
jne
sbb
psubsb
xchg
or
faddp
retf
les
pop
push
xchg
or
ror
leave
fldcw
in
cmp
daa
(bad)
jmp
mov
adc
jecxz
pop
sbb
mov
mov
mov
mov
push
add
test
je
ret
loope
and
cmp
lods
(bad)
mov
bound
aad
lods
loop
mov
and
not
vsqrtss
sbb
cmp
or
add
popa
push
mov
cmp
push
dec
sahf
lock
and
xor
fmul
mov
add
dec
inc
jmp
add
daa
mov
ins
imul
mov
pop
add
test
push
pop
inc
adc
scas
ins
or
mov
jo
xchg
fadd
and
test
sub
add
jo
push
rcl
(bad)
arpl
movs
sub
xor
mov
retf
loop
sbb
fwait
and
outs
or
test
fsubr
xchg
popa
sub
dec
cmp
sbb
mov
imul
jecxz
adc
enter
scas
xchg
loope
jnp
shl
jne
lea
(bad)
(bad)
pop
or
sub
inc
add
push
shl
test
sub
std
push
push
icebp
lds
aaa
xchg
or
cmp
retf
xchg
int3
xor
add
(bad)
add
outs
das
pushf
jnp
sbb
loope
sbb
or
out
lods
je
mov
out
imul
loope
call
and
outs
and
adc
jmp
sub
pop
js
mov
mov
add
out
pop
cmps
mov
imul
mov
cmp
add
imul
xchg
ret
dec
xchg
or
inc
dec
arpl
sbb
mov
sub
popa
mov
sahf
xchg
dec
popa
inc
pop
add
mov
push
les
xor
fist
lods
or
gs
pop
test
mov
ins
xor
out
imul
sub
sub
loopne
gs
pusha
add
mov
std
add
imul
push
or
pop
bsf
inc
adc
inc
mov
and
pop
leave
gs
pop
popf
xor
(bad)
push
xlat
dec
sub
mov
inc
pop
push
jae
xchg
push
addr16
mov
mov
in
or
sbb
pop
rol
jp
pop
arpl
sar
jge
shl
int
fs
rol
jbe
fsub
arpl
into
pop
pop
and
sbb
dec
add
retf
push
push
pusha
pop
or
mov
or
inc
pop
pop
adc
adc
inc
fld
ja
mov
loopne
mov
push
sbb
jge
in
in
inc
adc
gs
inc
xor
jmp
mov
mov
movs
daa
push
push
inc
xor
dec
rol
and
sub
push
xchg
movs
push
mov
jns
and
stos
jmp
shl
jmp
rol
xchg
mov
sub
jl
dec
dec
out
lds
popf
aaa
test
sbb
rol
mov
push
jb
or
mov
xor
jmp
popa
loop
fs
inc
loopne
fild
adc
test
pop
(bad)
popa
movs
(bad)
test
xchg
rcr
ja
mov
or
sbb
ss
cdq
arpl
dec
shl
scas
dec
cmp
pop
and
or
and
or
ret
xchg
mov
(bad)
and
dec
popa
sub
xor
xor
dec
adc
mov
xchg
adc
jns
push
xlat
adc
mov
mov
cmp
add
out
les
jb
add
xor
push
xchg
xchg
dec
(bad)
dec
xchg
sbb
pop
adc
and
push
ds
cmp
arpl
lock
movs
mov
mov
fisttp
inc
les
pusha
xchg
sbb
or
cmc
add
popa
and
(bad)
movs
mov
push
inc
inc
enter
push
pop
sbb
out
xchg
rol
movs
rol
add
outs
retf
jle
fcom
mov
cwde
mov
jp
dec
pop
bound
inc
jp
(bad)
lods
nop
lods
push
(bad)
xchg
add
jge
and
ret
xor
aam
cmp
in
inc
mov
inc
pop
jp
sbb
neg
push
cmp
cld
mov
xor
ds
or
sar
pop
pusha
xchg
loop
and
mov
inc
inc
loop
rcl
add
es
sbb
inc
stos
(bad)
mov
test
mov
adc
and
cmp
inc
shl
sub
inc
enter
sti
cmp
sbb
pop
pop
leave
inc
sbb
or
inc
sbb
lods
mov
popf
mov
pop
mov
jmp
dec
mov
xchg
scas
add
cmp
hlt
imul
and
adc
cmp
add
sbb
mov
std
aad
push
out
add
movs
pusha
dec
call
dec
movs
adc
inc
call
js
pusha
je
ins
(bad)
mov
or
xchg
loop
(bad)
sbb
cmp
and
xchg
push
adc
push
and
xor
dec
or
pop
das
out
imul
xor
dec
dec
push
ins
cmc
pushf
movs
push
cli
pop
call
or
xchg
jne
add
inc
mov
pop
cmps
push
mov
mov
push
hlt
adc
and
mov
sub
cs
movs
adc
pop
les
pusha
mov
mov
add
sub
xchg
adc
rcl
xchg
int3
out
loopne
dec
enter
fcom
cmp
adc
add
(bad)
adc
jge
xchg
inc
xor
and
mov
and
mov
or
add
dec
pop
sub
aaa
push
or
pop
(bad)
movs
fs
es
push
clc
adc
das
jge
dec
ss
sub
jmp
fwait
rcr
or
inc
xor
or
adc
add
cmp
test
sti
xlat
jp
mov
inc
loope
cmps
sbb
or
mov
pop
xchg
int
pushf
gs
adc
pusha
xchg
inc
jg
add
sub
inc
dec
sbb
scas
cli
rol
dec
shl
loope
ret
inc
pop
pop
xlat
adc
ins
sbb
inc
pop
jae
scas
daa
sbb
xchg
test
sbb
sub
sbb
inc
ins
jb
js
sbb
mov
add
out
cli
movs
call
ins
outs
and
inc
add
adc
add
sbb
and
dec
mov
rcl
test
sbb
scas
dec
imul
inc
repz
loopne
or
and
sub
xchg
cld
imul
xchg
dec
js
inc
mov
mov
loopne
jecxz
mov
sbb
sbb
mov
icebp
dec
jmp
xchg
mov
into
ret
rcr
pop
pop
pop
inc
mov
jle
mov
sub
in
xor
or
mov
adc
(bad)
mov
fidivr
jmp
and
(bad)
xor
sahf
xchg
fnstcw
inc
mov
out
and
lea
cmc
xor
push
gs
add
lods
push
lds
arpl
push
aam
mov
cmp
sbb
xchg
adc
inc
or
mov
loopne
cmp
je
gs
xchg
cmp
daa
fcmovb
rcr
adc
adc
jle
cmp
ret
lods
push
xchg
nop
inc
and
dec
pusha
imul
aam
pop
xchg
jmp
inc
cmp
je
adc
mov
dec
or
jae
cmp
enter
sahf
cmp
jg
inc
push
sbb
shl
out
or
dec
or
or
xchg
pop
or
mov
nop
mov
and
aam
mov
mov
loope
dec
sbb
out
push
jecxz
sbb
cmp
jge
xor
mov
jecxz
mov
mov
into
dec
ret
jecxz
dec
int3
mov
jno
sbb
push
inc
pop
repnz
arpl
adc
mov
pop
sub
push
cmp
cmp
(bad)
and
mov
jecxz
add
icebp
aam
jbe
pusha
pop
ficomp
dec
adc
and
or
frstpm(287
jecxz
inc
push
in
sahf
mov
inc
jns
std
add
call
pop
stos
push
pop
lahf
add
xor
outs
sbb
and
adc
loopne
jmp
mov
lds
dec
pusha
jmp
mov
hlt
mov
sub
retf
and
test
jmp
mov
dec
jno
sahf
push
and
and
loopne
and
clc
clc
mov
or
imul
cmp
add
dec
fild
out
and
mov
nop
or
int3
and
rol
into
hlt
push
sub
cmp
ja
jecxz
mov
cmp
enter
dec
sbb
cmp
clc
sbb
popa
jne
mov
pop
mov
cmps
xor
xor
push
push
adc
xchg
daa
adc
js
inc
sub
pop
cmp
fld
paddusb
push
loop
lods
leave
js
xchg
push
sahf
pop
xchg
inc
dec
sbb
sub
sti
scas
hlt
repz
lock
mov
or
dec
push
pop
mov
call
ss
xchg
sbb
leave
xchg
mov
pop
jecxz
mov
jb
pop
pop
or
fs
loopne
ret
sbb
(bad)
mov
shl
sar
fcmovu
js
xchg
jb
push
js
add
mov
jl
push
hlt
pop
cmp
lea
jecxz
xor
pop
mov
js
retf
mov
xor
inc
ret
jmp
and
dec
push
mov
(bad)
pop
iret
pop
pusha
add
inc
fcomp
and
sub
sbb
and
loope
or
(bad)
test
aad
mov
popa
std
mov
pop
int3
cmp
jbe
outs
cmp
pop
sub
mov
ror
fwait
fwait
mov
fsub
popa
add
out
retf
test
xor
gs
lods
add
sub
iret
pop
shr
inc
mov
or
cmp
xor
xor
inc
mov
stos
pop
sti
mov
fs
inc
pop
lea
xor
sub
and
dec
mov
jge
js
gs
imul
pushf
retf
rcr
ret
push
push
add
jb
inc
fcomp
repnz
mov
xor
cli
or
or
push
push
dec
iret
test
imul
arpl
sub
add
push
sub
and
outs
imul
xchg
mov
xchg
sub
cdq
sbb
push
push
idiv
jl
jmp
jmp
lods
popa
add
scas
jns
adc
xlat
cmps
outs
xor
shr
dec
scas
movs
xchg
jb
das
popa
xor
jmp
dec
test
retf
and
jmp
ret
or
mov
aaa
test
mov
pushf
test
and
pop
push
adc
and
sub
icebp
xchg
sbb
mov
push
cmp
xchg
dec
fcom
push
pop
cli
arpl
shr
daa
sahf
and
jno
loopne
jae
mov
test
dec
sbb
mov
xchg
xor
movs
lock
ins
add
sub
dec
repnz
popa
adc
or
jmp
push
stos
pop
xor
xor
ss
add
push
fistp
sbb
jbe
jae
or
arpl
or
in
mov
sbb
add
retf
jb
std
adc
jae
pop
or
mov
arpl
mov
addr16
cdq
mov
dec
jp
loope
stos
mov
rol
sbb
or
or
xchg
pop
sub
(bad)
loope
pop
or
cdq
or
jg
add
xchg
cmp
pop
xlat
xor
inc
sub
sub
fimul
xchg
pop
dec
popa
mov
adc
call
cmp
pusha
pop
call
push
jo
dec
push
cli
je
lods
push
sahf
vaddss
aas
inc
sbb
mov
pushf
or
(bad)
jp
clc
mov
imul
push
sub
addr16
bound
or
xchg
push
into
push
shr
pusha
ror
sub
pop
pop
cmp
scas
mov
push
push
(bad)
ret
sti
dec
mov
es
mov
pop
and
pop
(bad)
cmp
(bad)
pop
loop
sbb
mov
jle
mov
dec
lods
xor
sub
jno
add
fidivr
jmp
fcomp
scas
arpl
mov
js
mov
jb
mov
mov
adc
pop
add
dec
ror
lock
fdiv
add
cdq
jnp
mov
das
into
mov
pop
(bad)
rol
ins
push
add
sub
push
inc
sbb
adc
sbb
mov
pop
out
daa
loope
pop
dec
mov
sub
push
add
je
sbb
outs
and
jae
add
xchg
sbb
sahf
repnz
int3
int
dec
dec
xor
sbb
loopne
mov
(bad)
shl
mov
push
xor
pushf
xchg
xlat
ret
loope
mov
dec
pop
cmps
cmps
sbb
and
xchg
add
inc
sub
adc
leave
out
hlt
xchg
outs
mov
bt
add
xor
mov
pusha
sbb
call
mov
or
popa
dec
cmp
lods
imul
sbb
arpl
rcl
mov
ret
mov
hlt
add
jno
loope
or
add
push
out
mov
mov
inc
cmp
iret
loop
dec
xchg
movs
mov
dec
loope
aam
jo
aas
js
and
adc
mov
push
push
add
push
jp
lea
lahf
adc
or
gs
das
jl
sbb
cld
loope
or
sub
sub
cmps
lods
adc
lock
lea
loope
jp
lods
lea
mov
repz
dec
mov
pop
push
shl
pusha
ror
adc
lods
retf
out
jle
adc
sahf
or
lods
cwde
(bad)
cmp
mov
dec
dec
dec
sbb
ins
out
mov
jecxz
gs
and
dec
bound
cdq
popf
pop
test
popa
mov
push
stc
jl
das
or
push
sub
mov
jno
jns
add
xor
sar
sbb
shr
lods
out
xor
xchg
cmc
adc
jo
popa
cli
(bad)
shl
dec
imul
sub
add
gs
ret
loopne
popa
and
lods
je
xor
cmc
mov
call
sub
add
add
ins
sub
mov
xor
xchg
popf
add
xor
cmc
pop
pop
pusha
mov
push
idiv
xchg
call
and
jb
and
and
les
out
sub
sbb
ret
jno
mov
xchg
cmp
mov
jle
je
adc
add
jp
adc
lock
(bad)
cmp
mov
mov
idiv
cmp
add
sub
loop
(bad)
shl
mov
retf
and
out
fst
test
nop
cmp
sub
pop
jecxz
xchg
sar
mov
gs
or
xor
js
mov
jne
ja
xlat
hlt
xchg
cmp
dec
jne
and
retf
mov
mov
add
out
out
adc
in
jno
pop
adc
stos
int3
or
pop
push
test
jmp
sbb
cld
not
fs
icebp
sbb
movs
inc
scas
push
into
xor
gs
int
lods
adc
xor
add
xlat
es
sub
out
inc
arpl
or
jne
sbb
inc
and
inc
scas
out
or
mov
das
cmp
jns
adc
repnz
push
push
cmp
loop
xor
inc
adc
mov
push
and
sbb
inc
js
enter
mov
enter
ins
inc
sub
mov
idiv
sub
cmp
cmp
push
dec
shr
popa
sbb
addr16
xor
icebp
mov
ins
sub
bound
push
lock
inc
ret
hlt
aam
inc
outs
mov
xchg
xor
dec
jecxz
dec
push
pop
xor
(bad)
mov
test
sub
sahf
xor
xor
sub
shl
mov
mov
hlt
sbb
push
sub
push
push
rcr
mov
ss
test
imul
mov
cmp
dec
rcr
xor
push
lods
inc
adc
loopne
mov
pop
out
inc
imul
aas
jmp
pop
and
add
ja
loope
out
or
(bad)
daa
gs
xchg
test
sahf
xor
loop
loope
xor
fdiv
sub
push
cmp
into
shl
pop
int3
enter
cmp
leave
loope
dec
cmps
sub
cmp
cmp
lahf
in
ffree
pop
aad
or
push
add
mov
push
cmp
aad
popa
sbb
aad
xor
shl
inc
loopne
test
inc
in
fldcw
jmp
enter
sbb
fidivr
in
dec
into
xor
pop
cmp
arpl
push
xchg
add
nop
(bad)
mov
rol
(bad)
pop
and
xchg
or
jge
mov
adc
arpl
xchg
js
mov
das
add
xor
fcom
cmpps
add
mov
jecxz
test
xchg
popa
ret
icebp
dec
xchg
add
xor
lods
shl
ss
jg
add
inc
imul
fs
movs
xchg
xchg
dec
out
cli
push
js
push
xchg
mov
lock
sbb
mov
xor
je
push
ret
dec
adc
(bad)
aaa
xor
dec
popf
mov
push
jb
(bad)
das
adc
test
or
cdq
xor
mov
add
mov
xor
les
dec
enter
shl
test
loope
push
dec
inc
movs
fistp
into
gs
jl
mov
mov
adc
imul
outs
cmp
jecxz
or
or
jle
cmps
sbb
jmp
movs
(bad)
loopne
jle
sub
(bad)
leave
and
mov
mov
popf
sahf
cmp
push
shl
movs
xor
test
test
jo
in
and
popa
pusha
loope
ja
in
sub
inc
xor
sar
in
ret
xchg
inc
sbb
pop
cmp
mov
fisub
std
mov
push
mov
test
jne
dec
nop
int3
fcomi
mov
sahf
in
push
inc
xor
aad
mov
ja
pop
movs
scas
mov
popa
ins
ins
in
mov
call
or
or
add
mov
fdivp
pushf
push
sbb
dec
inc
push
adc
je
pop
pop
add
enter
into
dec
ror
pop
popa
push
repnz
out
into
inc
sbb
arpl
jge
xor
adc
add
dec
das
dec
xchg
mov
adc
pop
pop
scas
pop
jge
pusha
sar
fadd
pop
pop
jge
xchg
push
pop
loop
dec
ins
mov
xchg
test
push
shr
jb
out
test
mov
das
mov
push
mov
jbe
scas
dec
and
push
(bad)
fild
cmp
mov
mov
sbb
xchg
xor
push
sbb
outs
xchg
sub
test
and
xor
lock
call
jnp
imul
cmp
jne
or
ss
xchg
xor
pop
cmp
mov
ins
mov
movs
sub
jns
mov
or
xor
lods
jl
adc
ja
mov
push
pop
test
add
jno
out
mov
adc
fwait
outs
jo
sbb
scas
sbb
push
sbb
and
sub
dec
inc
xchg
pop
test
out
push
or
nop
dec
je
mov
fiadd
arpl
xchg
or
ds
enter
and
jmp
and
ret
push
push
jecxz
sahf
mov
ret
dec
jno
and
retf
mov
inc
push
ror
aam
sbb
mov
adc
jmp
mov
jl
fcom
dec
or
adc
ret
fsubr
xchg
push
dec
sbb
mov
sbb
add
adc
xchg
xor
fwait
and
into
lds
rol
sti
lds
dec
inc
sbb
das
loop
cmp
add
adc
mov
int3
imul
push
pop
nop
aad
ja
mov
pusha
sbb
and
jecxz
pop
fist
aaa
shl
jo
lock
test
or
add
sbb
aaa
jmp
daa
xor
dec
or
call
sub
xlat
lea
in
stc
pop
sbb
jmp
mov
push
push
out
sbb
mov
and
pop
dec
jmp
adc
mov
and
addr16
jne
sbb
and
div
in
fld
or
lock
xchg
cmp
xchg
mov
add
jecxz
outs
or
sbb
mov
(bad)
inc
sahf
dec
sbb
jg
retf
nop
js
mov
cmp
cmps
mov
lds
aaa
aam
mov
out
cmc
aam
xor
into
in
mov
or
cmp
push
mov
xor
mov
mov
loope
cli
xchg
or
adc
or
cmps
or
dec
pusha
cmps
inc
sbb
in
adc
lea
sub
(bad)
inc
mov
mov
ret
lods
faddp
inc
rcl
xchg
cmp
add
push
push
pop
adc
and
or
xchg
mov
imul
iret
adc
mov
or
sub
jb
imul
dec
les
mov
pop
rcr
int3
push
xor
adc
add
jae
ja
and
adc
jbe
sub
mov
adc
gs
cmp
outs
ins
scas
jge
lea
pusha
add
sbb
add
enter
xchg
inc
lods
sub
xor
mov
stos
(bad)
loope
or
sbb
je
ficom
sbb
fisttp
and
inc
daa
add
sar
(bad)
popa
sbb
adc
jo
or
or
sbb
sub
cld
push
aam
inc
rol
aas
inc
or
sub
outs
or
cmp
and
pop
pop
push
mov
cmps
sahf
jo
dec
sbb
mov
loope
jae
inc
adc
sbb
outs
test
imul
shl
in
mov
imul
pop
sbb
adc
xchg
(bad)
cmp
inc
push
jecxz
and
ins
mov
sbb
arpl
or
popa
jecxz
rcr
enter
adc
sbb
add
push
add
sub
in
sbb
ret
fmul
mov
jne
sbb
push
xchg
mov
mov
mov
sub
or
es
movs
popa
sub
cmp
push
jo
pop
xor
(bad)
in
adc
movs
pop
jo
call
sbb
jecxz
mov
gs
outs
fcom
jno
mov
push
or
je
sbb
rcr
(bad)
aas
lea
jne
dec
jge
lahf
add
xchg
inc
jmp
inc
fcom
call
int
popa
xchg
mov
and
add
jne
les
cmp
lock
gs
add
cmp
(bad)
cs
outs
jne
jno
adc
aam
mov
sub
test
retf
das
dec
out
mov
sbb
or
sahf
jp
inc
paddsb
retf
mov
mov
ss
push
mov
fadd
dec
fsub
out
ret
(bad)
mov
pop
(bad)
lods
sub
push
sub
inc
push
adc
sub
jnp
ret
loope
js
js
jle
ret
inc
push
xchg
mov
fwait
pop
ret
loop
fwait
lock
sbb
dec
arpl
adc
and
sub
push
mov
rcl
dec
(bad)
or
lods
lea
mov
xlat
sbb
in
ds
xor
jmp
out
jne
push
or
xlat
dec
xchg
cmc
ret
add
das
pop
leave
ret
js
jno
in
jle
push
ret
es
jmp
jb
enter
mov
imul
add
imul
dec
cmps
ret
jl
sub
adc
cmp
jp
mov
scas
mov
cmp
ret
sbb
clc
es
movs
push
lods
xchg
xor
out
push
and
jnp
cwde
out
push
rol
mov
adc
in
pop
and
mov
xchg
imul
and
push
gs
pop
jno
push
add
pop
jae
cmp
mov
lods
sub
cmp
(bad)
(bad)
adc
fidiv
pop
fs
jl
adc
test
bound
mov
ds
dec
loope
icebp
in
jns
add
sbb
add
xor
jle
mov
ret
je
inc
mov
je
jns
aas
inc
js
mov
inc
out
out
and
cmp
iret
pop
push
xchg
ret
sbb
packssdw
adc
or
stos
nop
dec
adc
or
mov
add
retf
mov
dec
dec
daa
sbb
ret
mov
pushf
movs
ja
lods
test
cmps
out
fwait
es
cmp
pop
xor
outs
imul
in
mov
mov
pop
add
cmp
pop
sbb
sub
fiadd
lock
xchg
pop
fdiv
add
mov
addr16
fmul
jne
push
dec
fcomp
pop
sbb
(bad)
gs
mov
dec
(bad)
xor
sar
push
sbb
push
inc
push
mov
fmulp
aas
mov
or
mov
add
lock
jl
daa
push
pop
xchg
cmp
jmp
xor
icebp
inc
and
pop
js
xchg
mov
adc
pop
ficom
jo
cmp
sbb
push
push
or
pusha
sub
pop
rcr
xor
pushf
push
sar
mov
mov
je
fadd
mov
cmp
pop
cli
mov
or
xor
xchg
cmc
js
sbb
ror
dec
imul
test
xchg
sbb
nop
pop
(bad)
mov
std
pop
retf
or
lds
(bad)
lods
sbb
add
xchg
lods
pop
cmp
fcom
mov
add
cmps
into
cmp
mov
dec
repnz
repz
ret
sbb
rcr
cmp
pop
mov
or
(bad)
adc
pop
(bad)
out
or
dec
mov
sub
pusha
xor
outs
idiv
repnz
dec
dec
movs
sub
pop
mov
in
in
gs
popa
aas
ds
mov
add
call
or
jmp
or
les
mov
ret
call
rol
pop
xchg
fwait
or
arpl
mov
jns
cmp
adc
jecxz
sub
test
cmp
or
test
adc
pop
and
xor
xor
xor
sub
xchg
mov
inc
add
retf
sbb
enter
jo
adc
mov
mov
sahf
mov
lods
mov
xor
cmp
mov
xor
shl
or
xchg
and
lds
mov
pusha
jo
push
loop
daa
std
lods
pop
fst
push
and
daa
jns
jecxz
test
add
lock
or
pop
inc
aas
ret
xchg
push
call
push
mov
daa
icebp
and
push
xchg
imul
mov
cmp
in
mov
cwde
push
xlat
ret
mov
shl
pop
popf
xor
lock
sar
(bad)
jb
push
add
dec
push
cmp
push
(bad)
lea
pop
xor
ja
mov
push
cmp
cmp
mov
dec
mov
xchg
sbb
js
jmp
adc
ficom
adc
rcl
dec
cmp
sbb
lods
sub
sbb
loopne
xchg
or
fs
out
push
xor
dec
nop
daa
pop
sbb
fiadd
sbb
push
lds
adc
mov
dec
sbb
push
test
mov
pop
popf
and
arpl
jnp
ret
or
dec
add
aad
pop
mov
or
push
sbb
js
sub
jne
or
mov
retf
mov
cs
ret
sbb
mov
mov
ss
leave
call
pop
mov
test
ret
xchg
stc
movs
rol
jl
inc
or
xor
dec
and
inc
les
sbb
dec
and
inc
mov
push
jle
inc
or
dec
scas
mov
fdiv
repnz
push
mov
xchg
xchg
lahf
movs
mov
hlt
ins
cmp
push
xchg
pop
sub
fs
jle
sub
fiadd
mov
jmp
test
cmp
xor
addr16
dec
rol
pop
mov
xor
inc
cmp
das
leave
cmc
or
cmps
inc
lock
pop
adc
mov
sbb
sub
cmps
ins
or
jecxz
jecxz
(bad)
or
add
pop
add
sahf
adc
out
enter
mov
pop
jecxz
inc
fadd
das
loopne
cmp
rcr
jnp
jo
or
cmps
inc
or
pop
push
add
pusha
jg
outs
and
pop
dec
and
data16
mov
sbb
mov
sub
sub
lock
pop
lock
or
xchg
jno
push
sub
adc
daa
xchg
bound
and
test
pushf
xor
inc
jge
inc
loope
shl
imul
call
xor
inc
sbb
movs
fwait
nop
xor
or
(bad)
fwait
(bad)
shr
leave
jns
scas
pusha
and
pop
into
pop
addr16
cli
out
dec
mov
jbe
lods
cmp
outs
mul
and
xchg
(bad)
fstp
and
jne
dec
cmp
inc
jb
add
pop
add
sbb
gs
lea
cdq
repnz
or
xor
dec
mov
pop
hlt
and
push
into
sbb
dec
cmp
test
mov
rcr
add
out
repnz
jecxz
call
mov
fstp
test
push
icebp
inc
(bad)
mov
icebp
outs
sub
shl
je
mov
nop
adc
test
icebp
mov
mov
fld
sbb
arpl
test
lock
xchg
pop
jb
jne
sub
xchg
in
mov
js
addr16
es
or
test
int
out
adc
push
push
push
fldl2t
cmp
mov
add
dec
cmc
sub
or
and
aas
clc
cmp
push
scas
dec
ja
and
pop
lods
loop
addr16
loope
hlt
ja
jp
pusha
or
cmp
std
jns
dec
jmp
clc
mov
addr16
inc
push
sub
(bad)
aam
inc
sti
out
ret
pop
aad
jb
int3
rcl
or
xchg
mul
enter
outs
leave
cmp
jae
mov
or
add
inc
inc
dec
xchg
sbb
movs
dec
arpl
jo
pop
xchg
sar
cmp
into
mov
(bad)
dec
inc
cmp
cmp
jae
pusha
add
mov
in
je
add
sub
clc
inc
retf
jg
arpl
xor
and
repnz
cwde
and
pusha
inc
pop
div
push
cld
adc
stos
adc
sbb
and
ror
dec
dec
xor
mov
xchg
mov
mov
push
sbb
sbb
test
inc
jbe
xor
xchg
jecxz
mov
push
pushf
hlt
sar
inc
stos
and
loope
inc
lea
adc
mov
push
daa
cmp
push
dec
adc
jmp
cmp
sub
cmp
inc
xchg
jo
in
push
jecxz
jns
jne
shl
jl
test
inc
cmp
and
mov
inc
jecxz
iret
sub
(bad)
sub
cmp
jp
pop
add
ror
cmc
xor
or
cs
(bad)
mov
les
dec
inc
cmc
ja
push
push
leave
clc
popf
push
in
call
and
fsub
ret
sub
mov
fistp
sbb
mov
mov
sbb
and
loope
sahf
mov
sti
daa
sahf
in
arpl
fwait
(bad)
lock
sbb
scas
sub
rol
dec
int
movs
daa
retf
xor
or
jno
out
sahf
icebp
adc
(bad)
cs
and
add
imul
cmp
cmc
ins
mov
les
retf
and
jmp
sar
inc
mov
cs
dec
xor
mov
sbb
xor
cmp
fucomi
jo
xchg
jmp
sub
dec
in
lock
pop
int3
add
outs
push
dec
dec
mov
mov
push
mov
aam
bound
icebp
popa
outs
in
sar
xchg
jne
push
ds
sbb
xchg
(bad)
mov
retf
add
xchg
aas
into
loope
and
lahf
call
or
outs
movs
jne
ds
cmp
js
dec
mov
loopne
popa
mov
push
cli
dec
mov
mov
cmp
jnp
push
adc
sub
shl
cmp
sbb
mov
nop
jmp
adc
dec
aam
sbb
xor
pop
add
xor
ja
dec
test
retf
sbb
push
out
stos
ret
xlat
add
ret
imul
mov
fwait
sbb
sub
lock
cdq
cmp
mov
in
ret
fbld
stc
adc
jns
cmp
cdq
test
pusha
or
adc
lods
xor
fmulp
add
push
rcr
call
leave
shl
cmp
retf
ficom
(bad)
cmp
inc
xor
ret
adc
adc
cmp
xlat
xchg
lods
xor
sub
pop
mov
cmp
xchg
pop
mov
aad
lea
ja
inc
sub
push
push
dec
mov
rol
xchg
retf
mov
mov
pop
imul
xchg
out
mov
cld
sbb
data16
lock
sbb
loope
aas
sub
or
pop
jecxz
push
pop
push
xchg
or
add
add
nop
movs
and
(bad)
xor
adc
add
mov
jmp
inc
xchg
loope
daa
pushf
scas
call
cmc
movs
cs
jns
or
or
inc
mov
lods
pop
adc
add
pop
mov
sbb
cli
push
mov
pop
fcmovb
retf
aam
sub
imul
fdiv
inc
cwde
lods
mov
and
lock
mov
int
mov
arpl
fwait
js
(bad)
mov
xchg
inc
repnz
mov
lods
ja
pop
ror
mov
adc
add
adc
xchg
add
dec
cmp
imul
inc
pop
jecxz
cmc
pop
add
pusha
pusha
aaa
push
mov
add
or
push
cld
loopne
loopne
jge
inc
cmps
aad
pop
mov
add
cmp
push
das
fmul
pop
jg
call
xchg
jmp
nop
xchg
push
inc
push
mov
hlt
sub
or
mov
cmp
xlat
rcr
js
push
rcr
aam
test
push
lock
jle
fs
in
std
js
sbb
lea
pop
adc
jmp
or
xor
push
aad
imul
cdq
xor
rcl
mov
mov
dec
(bad)
sahf
les
jns
and
push
xor
cmp
pop
xor
mov
add
outs
popa
or
add
mov
fidivr
xor
pop
jecxz
xchg
into
mov
inc
sbb
ret
daa
gs
scas
daa
add
pop
or
stc
and
adc
inc
dec
or
fsub
movs
and
mov
shl
mov
popf
loop
add
cmp
inc
cmp
(bad)
popf
push
test
test
jae
push
push
mov
dec
pop
lea
xchg
jno
and
mov
mov
jnp
mov
cdq
rcl
gs
pusha
jno
mov
adc
sbb
inc
lods
jmp
push
mov
adc
outs
ret
jmp
nop
cmp
inc
inc
inc
cmps
out
jb
pop
call
fidivr
push
push
lock
jns
es
add
rcl
dec
cdq
sar
pushf
xchg
or
clc
cmp
push
cmc
and
scas
das
dec
push
adc
mov
sbb
pushf
adc
cmp
and
and
or
add
pop
dec
sub
sbb
sbb
ret
and
fstp
and
imul
mov
xlat
es
cmp
loope
fldenv
inc
test
dec
inc
sbb
dec
pusha
or
(bad)
das
inc
ret
mov
es
jmp
push
jo
into
lock
jns
and
inc
popf
cmp
sub
adc
ins
mov
mov
xor
sub
das
add
dec
mov
jmp
or
(bad)
retf
fdiv
add
push
xchg
sub
sti
loope
aam
xchg
and
pop
or
adc
gs
cmp
cld
in
lods
xchg
or
jmp
loop
add
push
aam
xor
popf
dec
xor
xchg
xchg
add
push
adc
push
or
or
sbb
test
and
mov
xchg
push
jge
mov
shr
dec
cmp
xor
and
jle
jmp
push
scas
ret
add
mov
or
std
cli
cmps
jno
pop
je
aaa
add
xor
mov
out
je
pop
rol
mov
pop
sbb
inc
or
rcr
out
dec
push
add
or
sub
js
enter
dec
enter
shl
js
ficomp
pop
push
call
jg
mov
xchg
inc
push
xchg
pop
shl
imul
daa
sbb
or
test
aad
sbb
enter
das
jmp
(bad)
push
sbb
sbb
sar
mov
or
aam
fcmovb
rcr
movs
inc
adc
adc
sbb
fld
sbb
and
nop
adc
and
sbb
cld
jo
add
pop
(bad)
out
out
mov
adc
(bad)
or
jp
add
pop
sahf
rcl
xchg
addr16
ret
xor
cmp
loope
cmp
popf
mov
dec
dec
cmp
mov
jno
and
push
dec
mov
loope
cmp
lods
icebp
and
mov
fiadd
sar
js
adc
dec
jg
es
adc
loopne
loop
cmp
mov
jno
stos
ret
cmp
or
retf
push
push
outs
cmps
and
dec
mov
add
imul
mov
popa
add
and
or
or
lods
icebp
shl
and
dec
push
test
sub
sub
movs
push
out
lds
test
add
ret
dec
test
cmp
clc
mov
dec
add
(bad)
sub
shl
and
call
sahf
js
inc
and
cmps
lods
je
adc
fs
loopne
xchg
xor
mov
xchg
imul
add
xchg
mov
cld
inc
xor
lds
lds
jb
cli
mov
sbb
add
mov
neg
sub
popa
or
je
aaa
push
add
loope
adc
lds
dec
cmp
mov
push
pop
jbe
jl
jnp
jmp
loope
cmp
and
call
ret
imul
dec
test
sbb
enter
xor
xor
xor
xchg
dec
dec
xchg
and
jmp
jg
(bad)
jns
rcl
mov
sbb
cvtps2pi
bound
mov
jp
add
stos
cs
adc
dec
cmp
add
add
dec
cmp
je
cmp
inc
jl
ins
sbb
add
mov
adc
lea
setbe
pop
add
sbb
rcr
mov
repnz
inc
arpl
cmp
loop
sub
pop
sbb
imul
stc
mov
pop
adc
mov
adc
cmp
in
add
fcom
mov
push
es
mov
cmp
adc
movs
push
jno
(bad)
add
retf
inc
hlt
ins
popa
in
mov
mov
or
mov
dec
cmp
dec
jmp
cld
push
pushf
pop
sub
or
dec
sbb
dec
rcr
icebp
xchg
mov
sbb
(bad)
mov
mov
cmps
sub
jae
add
ins
or
les
jo
push
lods
pusha
or
ret
push
mov
stos
fwait
popa
add
dec
test
push
jge
jbe
loope
and
pop
das
pop
xor
cmps
push
mov
arpl
adc
cmp
dec
xor
lea
add
jmp
(bad)
into
loop
sub
aam
or
adc
xchg
xchg
stos
test
cmp
mov
cmp
je
adc
push
jae
dec
jmp
push
mov
mov
adc
adc
pop
mov
hlt
leave
xchg
pop
and
ret
mov
sub
leave
push
cld
repnz
loop
mov
shr
inc
repnz
or
sar
(bad)
jp
test
sbb
pop
push
fs
and
cmp
inc
lahf
dec
cmps
jo
inc
or
cmp
ficom
inc
pop
jmp
add
je
test
adc
mov
mov
and
rcr
mov
and
ret
in
ja
cmp
outs
xor
mov
test
or
mov
mov
ds
sbb
sbb
lahf
fcmovne
add
enter
fwait
and
rcl
loope
sbb
cmps
inc
and
inc
fist
add
stos
scas
sub
sbb
loope
dec
jne
mov
frstor
jmp
ins
cmp
pusha
lahf
pop
dec
or
inc
push
stc
mov
enter
int3
movs
xchg
pop
nop
adc
popa
push
in
sub
cmp
stc
adc
daa
sub
fisttp
add
mov
and
sbb
push
inc
loop
push
sub
mov
int3
jno
push
loopne
stc
loop
or
push
popa
jb
jo
push
dec
pop
add
ret
scas
add
push
jp
lods
aam
and
addps
mov
dec
cmp
inc
div
sbb
xlat
push
int3
ficomp
das
jb
pop
xor
lea
ins
(bad)
xchg
(bad)
push
xor
sbb
mov
xor
mov
pop
jmp
push
repnz
mov
inc
mov
push
or
call
les
push
callw
adc
push
xor
or
push
bound
out
icebp
mov
mov
mov
outs
fabs
mov
sbb
xchg
and
test
fdivr
ror
xchg
xchg
adc
fwait
mov
xchg
xchg
xchg
sub
jo
cmp
mov
push
adc
sub
jg
pusha
sbb
cld
dec
xadd
jne
arpl
lods
(bad)
aaa
sbb
push
and
xor
cmp
dec
jnp
loope
mov
sub
xchg
or
jmp
add
sti
pop
sub
jne
fsubr
mov
(bad)
rcl
dec
icebp
lock
xchg
mov
hlt
mov
push
cmp
nop
pusha
jmp
and
add
std
clc
ss
and
cmps
xchg
fcom
dec
ins
jp
loope
mov
dec
xor
pop
adc
add
(bad)
push
mov
mov
shr
shl
push
nop
cmps
jno
inc
jo
mov
sahf
lds
sar
leave
mov
and
pop
or
imul
add
(bad)
popa
popf
mov
imul
iret
pop
xchg
nop
xchg
sub
or
repnz
xchg
je
ins
pusha
sahf
sub
xor
pusha
mov
scas
(bad)
lock
add
aas
mov
xchg
test
ret
xchg
pop
push
xchg
loope
mov
inc
sub
push
fcomp
mov
adc
(bad)
loope
sbb
push
jp
mov
fld
push
pop
inc
push
sbb
xor
std
sub
push
jo
cmp
mov
push
out
cmc
mov
test
xchg
xor
aam
lods
ins
or
inc
jno
mov
xchg
pop
add
pop
push
add
call
mov
test
popf
popa
mov
les
push
jo
shl
push
loop
or
fmul
and
in
dec
add
inc
push
ret
add
and
dec
out
add
inc
aam
movs
(bad)
sti
fnsave
in
sub
es
xlat
sub
in
retf
xor
out
jmp
inc
and
sbb
jo
ficom
adc
sbb
xchg
mov
mov
mov
retf
mov
sub
jge
push
xchg
xlat
add
push
(bad)
mov
mov
mov
dec
ds
add
js
sbb
mov
jge
fdivr
jg
sbb
sbb
adc
cmps
push
jp
outs
jl
loop
mov
cs
mov
push
pop
(bad)
sub
cmps
jo
shl
push
int3
inc
pop
add
lods
nop
pop
add
add
cwde
push
sbb
stos
icebp
cld
push
dec
and
in
clc
lods
icebp
inc
add
sub
(bad)
aam
sbb
or
inc
mov
inc
aaa
test
xchg
aad
add
jge
sub
xor
adc
repnz
ret
jl
xor
mov
test
jb
jb
sbb
addr16
(bad)
xor
es
(bad)
mov
aad
cmp
add
xchg
sahf
shr
pop
arpl
mov
and
add
and
out
adc
pop
add
dec
dec
adc
sub
xchg
call
dec
ror
inc
add
xor
daa
ins
jne
fsubr
lods
cli
lods
loopne
fmul
aam
aaa
xchg
and
inc
ds
cmp
or
in
(bad)
pop
pop
(bad)
cmp
pop
xor
lock
mov
mov
(bad)
in
mov
sub
loopne
les
enter
mov
push
out
push
jp
cmps
jp
fmul
xor
sbb
add
dec
and
loopne
xchg
xor
dec
dec
jmp
xor
push
sar
or
daa
jne
loop
or
xchg
neg
leave
or
cmps
loope
jno
jmp
xlat
or
or
cmp
and
or
cdq
fcomp
dec
and
(bad)
out
add
push
push
inc
push
cmp
ror
dec
fstp
gs
loope
push
je
mov
pop
xor
and
mov
mov
imul
or
out
xchg
stos
imul
mov
sbb
mov
xchg
jmp
push
jae
jo
adc
fwait
xor
call
sti
mov
pop
push
adc
jl
xor
add
cs
xchg
cmp
pop
mov
pop
dec
loopne
and
push
mov
sahf
add
enter
ficomp
cmp
push
mov
dec
xor
add
lods
in
sbb
and
xchg
mov
cdq
jnp
xchg
aam
pop
fadd
mov
test
sub
or
jne
data16
mul
add
jns
or
inc
mul
mov
push
imul
lods
jne
ins
mov
cmp
sbb
les
imul
cdq
(bad)
aam
pop
in
sub
add
retf
push
xchg
daa
jl
cmp
test
push
fdivr
cmp
cli
cmp
xchg
es
sar
mov
cmp
add
ret
push
xchg
icebp
push
rcl
das
test
(bad)
or
cmp
and
sub
jb
jmp
cwde
(bad)
pop
fst
mov
mov
adc
add
daa
or
cmp
in
mov
add
loope
neg
jno
mov
cmps
mov
mov
loop
iret
test
jge
or
das
(bad)
hlt
shl
std
inc
retf
cmp
xchg
test
int3
data16
aaa
xor
inc
cmp
ret
dec
outs
pop
arpl
scas
test
ror
lock
lods
rol
popa
mov
fstp
mov
or
test
pop
inc
cmp
pop
xchg
mov
into
ret
call
cmp
mov
jmp
nop
add
retf
cmp
xor
pop
jl
push
pop
test
push
pop
push
setbe
or
or
jg
xchg
or
fucomp
call
mov
push
xchg
sub
pop
movs
imul
and
pop
rol
xchg
outs
cld
popf
mov
(bad)
in
and
sbb
pop
pop
outs
jle
(bad)
jmp
or
test
cmova
mov
popf
adc
pusha
lods
scas
aaa
or
push
bound
adc
fistp
jecxz
jne
ficom
xchg
mov
jne
pushf
(bad)
cmp
xchg
mov
enter
mov
push
je
test
in
sar
mov
js
js
and
sbb
mov
or
mov
add
push
je
xchg
js
jne
cmps
xchg
repnz
mov
or
sbb
sub
xchg
rcl
dec
cmp
cmp
aaa
xlat
test
mov
and
outs
pop
popf
out
int3
fstp
xchg
(bad)
cld
int3
jbe
xor
fadd
stos
xchg
fs
push
add
and
mov
jb
scas
aas
and
add
jmp
mov
outs
jecxz
retf
mov
arpl
mov
and
test
xchg
dec
dec
push
not
js
add
pushf
jne
dec
mov
scas
hlt
pop
xor
mov
sar
add
cmp
mov
dec
inc
sbb
ss
push
sub
inc
cli
mov
inc
lahf
and
or
popa
scas
or
inc
xchg
retf
xchg
mov
xchg
cmp
or
loop
test
or
and
out
pop
jmp
jne
add
sub
fistp
dec
loop
push
push
fdivr
mov
gs
push
adc
sub
mov
int
les
fwait
movs
addr16
push
jno
pop
retf
add
pop
push
jmp
xor
pop
lahf
xchg
xchg
test
jno
sbb
je
pop
imul
call
cmp
push
or
push
pop
fnstenv
inc
ins
or
pop
fdivr
adc
mov
out
sbb
pop
(bad)
in
or
jmp
add
lods
jo
dec
or
vfmaddsubps
maskmovq
test
cmp
or
es
into
ret
xor
xor
inc
cdq
cmp
dec
sub
and
mov
cmp
adc
mov
and
jmp
or
imul
push
ror
cmp
add
ins
jne
scas
dec
mov
pop
pop
push
dec
dec
add
rol
add
sub
sub
sti
sub
jns
cmp
sbb
shl
jl
adc
(bad)
xchg
or
push
rcr
mov
or
ror
scas
cmp
mov
or
add
icebp
push
outs
dec
in
mov
dec
mov
add
jo
jb
out
pop
sahf
jmp
cmp
js
pop
mov
inc
push
mov
and
bound
push
dec
and
into
mov
mov
sbb
xchg
mov
cmps
pop
lock
jmp
ja
add
pushf
xchg
fidiv
nop
pop
mov
jecxz
stos
test
or
fst
sbb
xchg
inc
inc
pusha
sub
cmp
daa
sub
jge
fisub
dec
movs
scas
nop
jo
push
sar
add
mov
jbe
mov
adc
and
sub
xchg
mov
mov
lods
lods
lods
test
inc
xchg
js
loop
lods
jae
xchg
jo
sub
pop
loope
dec
and
cmps
sbb
shr
mov
rcr
or
cli
test
leave
repnz
rol
adc
outs
lods
xchg
pop
jo
push
and
adc
outs
cmp
je
aaa
(bad)
into
xor
cmp
mov
sbb
mov
dec
loope
dec
ja
(bad)
fcom
jl
test
loop
pop
lods
dec
popa
pop
imul
mov
jge
jno
sbb
pop
rcr
dec
jb
sbb
mov
arpl
add
xchg
xor
push
jecxz
mov
push
js
fadd
popa
and
or
idiv
(bad)
shl
mov
cmp
xor
add
push
divps
cmp
call
retf
rcr
mov
fwait
js
arpl
jecxz
dec
xchg
mov
ds
imul
pop
xchg
adc
sub
pop
add
push
aaa
push
stos
inc
fistp
pop
movs
lock
and
ja
inc
into
and
cmp
loope
std
(bad)
dec
or
pushf
xchg
xchg
pop
js
fs
sbb
rcl
add
loop
and
(bad)
sbb
mov
sbb
pop
mov
cmp
add
sub
xchg
int
xchg
cmp
and
xchg
retf
and
jecxz
sbb
cmp
aad
xchg
xchg
cmp
out
mov
test
xchg
aam
sbb
retf
push
lods
add
ret
jo
mov
hlt
inc
adc
lea
and
and
loop
in
fstp
or
sbb
mov
mov
mov
pop
add
push
mov
int3
jge
xlat
adc
xor
cmp
push
mov
adc
push
xchg
mov
push
cmp
adc
inc
fmul
xor
out
or
fstp
(bad)
nop
cmps
in
and
sub
jb
jb
ret
jp
fldcw
pop
(bad)
cmp
or
dec
lea
and
stos
imul
ins
fmul
shl
xor
(bad)
shl
inc
lods
and
addr16
cbw
jae
push
pusha
loop
gs
jns
cmp
add
je
ja
(bad)
movs
pop
mov
xor
sbb
lods
sar
ja
adc
push
xchg
or
xchg
test
(bad)
sar
fmul
adc
mov
jb
jmp
movs
cmp
and
sbb
dec
shl
jno
mov
inc
icebp
xchg
sub
add
adc
outs
jmp
jae
pop
adc
rcl
adc
or
shr
sub
shr
pop
les
sub
pop
xchg
dec
inc
fstp
retf
ret
jmp
lods
or
popf
pop
and
xchg
add
jo
mov
(bad)
cmp
cmp
mov
stc
cmp
mov
xor
into
cli
inc
loop
(bad)
aad
or
push
cmp
push
ror
mov
icebp
add
je
jb
xor
sbb
cmp
dec
inc
cmp
mov
sub
(bad)
js
sbb
xor
out
cli
call
mov
(bad)
clc
cmp
pusha
adc
dec
test
add
aas
in
xchg
adc
aam
pop
js
xchg
xchg
rcr
xchg
mov
repnz
and
mov
dec
or
add
pop
cs
setge
hlt
call
movs
sbb
mov
mov
idiv
shr
rol
mov
les
loope
mov
ja
inc
xchg
or
adc
push
bsf
lds
mov
or
sbb
(bad)
xchg
iret
arpl
xor
push
add
pop
jecxz
xchg
test
sub
loope
ret
fstp
jb
jmp
pop
inc
out
mov
adc
fsubr
popa
jl
in
retf
sbb
mov
and
mov
lods
dec
aam
sub
pusha
jecxz
add
sbb
loop
xchg
jmp
or
pop
and
and
cmc
out
inc
pop
dec
inc
sub
cmp
lds
xor
lods
add
or
fist
cmp
bound
push
dec
scas
jmp
xor
or
xchg
jne
mov
in
push
add
mov
shl
imul
out
pop
add
stc
jns
jecxz
nop
mov
jns
js
sbb
dec
dec
ds
inc
test
mov
sbb
(bad)
pop
push
or
jp
add
clc
push
js
js
or
push
aaa
inc
inc
inc
adc
adc
sbb
daa
leave
retf
mov
mov
pop
retf
into
push
push
out
ds
(bad)
xor
dec
cmp
push
cmp
inc
xor
inc
sbb
mov
loop
ins
test
das
shl
scas
push
neg
sbb
inc
test
adc
ret
and
xchg
or
ret
adc
mov
dec
stos
ja
push
push
test
call
mov
xlat
or
inc
inc
jecxz
test
fstp
and
sbb
and
imul
add
popa
je
sbb
push
cmp
popa
ins
test
lds
mov
dec
mov
test
inc
xchg
and
lods
xchg
daa
fsub
lods
push
cmp
(bad)
retf
shl
inc
jne
cs
and
popf
xchg
add
test
mov
(bad)
fadd
shl
repnz
aam
and
fs
inc
jne
adc
lods
lods
aaa
xchg
repnz
inc
outs
sbb
out
add
fs
push
aaa
and
into
out
or
or
ret
adc
adc
loope
inc
rcr
and
jp
(bad)
rcl
maxps
loope
sbb
xchg
dec
inc
stos
cmp
and
sub
mov
push
and
jmp
or
ret
mov
or
mov
daa
fld
inc
scas
mov
loope
dec
push
loopne
enter
repnz
mov
or
add
fwait
mov
(bad)
and
cdq
int3
sahf
adc
mov
sub
or
xor
(bad)
js
retf
add
mov
pop
imul
xchg
mov
cdq
aas
jno
loop
mov
adc
mov
push
adc
cmp
fadd
gs
scas
in
adc
xor
out
js
mov
or
pop
dec
sbb
loope
cmc
stc
mov
pushf
mov
or
inc
in
int3
mov
jecxz
adc
movs
test
pop
rcr
dec
aam
sbb
retf
or
mov
jo
test
mov
dec
aam
shl
inc
int3
mov
mov
lock
mov
lar
sbb
inc
lock
dec
sub
bound
arpl
add
fs
fbstp
scas
push
ret
loopne
lods
in
inc
and
xchg
sub
dec
or
leave
int3
xor
loope
cmp
iret
outs
mov
pop
sub
lods
sub
lea
push
push
cmp
sub
sub
add
scas
sub
das
adc
(bad)
jnp
stos
push
or
adc
and
adc
xchg
loop
cwde
cmp
mov
sub
out
enter
push
icebp
jo
dec
js
and
mov
xchg
push
int3
daa
ret
mov
movs
ins
inc
xchg
jo
sbb
mul
or
jg
dec
retf
pop
pop
outs
jno
push
jb
rcr
inc
movs
nop
and
aas
add
mov
dec
das
enter
mov
es
add
dec
movs
sub
pop
gs
dec
retf
mov
stos
sub
inc
(bad)
mov
inc
xor
and
hlt
std
lea
xor
nop
xor
fadd
adc
adc
add
pop
and
jg
(bad)
mov
loopne
sub
or
loope
rcr
xor
sbb
imul
and
(bad)
sub
(bad)
mov
or
mov
scas
stos
into
es
in
add
sbb
sub
sbb
jno
cmp
into
fidiv
ja
sbb
and
daa
dec
js
jecxz
aad
inc
cdq
rcl
cmp
daa
adc
inc
out
je
mov
push
inc
hlt
jno
rcr
mov
dec
add
dec
sbb
jle
dec
dec
add
scas
sub
adc
mov
or
cmp
sbb
aam
sub
or
(bad)
adc
xor
lock
mov
dec
add
out
sbb
sub
push
cmp
leave
ret
xor
cmp
dec
mov
adc
mov
inc
xchg
push
rol
adc
xchg
or
push
pop
sub
jnp
popf
add
adc
sbb
in
mov
or
jnp
mov
movs
nop
test
mov
push
or
mov
sbb
adc
ret
pop
or
aad
push
sub
in
mov
shr
xchg
cmp
cld
lods
nop
mov
jae
adc
ins
retf
ss
or
sbb
repz
cli
push
mov
and
or
push
mov
adc
inc
pop
sbb
(bad)
mov
daa
sbb
test
mov
add
add
inc
xchg
push
mov
movs
pop
add
add
loope
mov
(bad)
xor
mov
(bad)
loop
dec
arpl
cmp
cmps
adc
pushf
mov
(bad)
ds
ds
add
icebp
ins
mov
dec
add
cmp
sbb
cmc
push
or
out
int
or
jno
add
xchg
mov
pop
mov
cmps
popf
gs
sbb
inc
xchg
adc
scas
pop
popa
push
aam
lods
xchg
mov
push
clc
adc
gs
or
add
pop
pushf
out
dec
add
sub
repnz
imul
imul
addr16
push
and
dec
js
sub
leave
enter
mov
mov
push
out
jg
or
mov
xchg
mov
pop
mov
jnp
mov
sbb
into
outs
icebp
inc
sbb
out
cmp
mov
push
lahf
popa
cmp
shl
mov
ret
fbstp
lods
pusha
test
jns
cmp
jmp
out
and
out
fwait
adc
sub
bound
xchg
pop
mov
test
push
fdivr
call
cwde
aad
cmpps
push
push
retf
loop
mov
xchg
pusha
mov
cmp
call
sbb
loop
jns
and
dec
shr
xor
out
inc
pushf
enter
lock
scas
sub
xchg
mov
(bad)
xchg
mov
mov
(bad)
mov
cmp
test
jnp
lea
dec
(bad)
sbb
mov
out
lods
pop
ins
lock
pusha
add
mov
addr16
push
inc
into
xchg
add
fld
lods
push
out
test
push
ret
pop
cmp
add
(bad)
lahf
adc
ror
mov
rcl
xor
out
sub
inc
test
add
inc
test
retf
sub
pop
lods
test
and
push
pop
jmp
inc
inc
adc
dec
push
(bad)
cmp
lea
out
test
or
in
mov
dec
inc
lods
jae
add
pusha
mov
mov
pop
pop
jl
jmp
mov
daa
cdq
repz
fwait
xchg
mov
push
jae
addr16
fmul
dec
dec
addr16
mov
cmps
rcl
sbb
pushf
xor
mov
cmp
pop
or
cwde
mov
jnp
cmp
pop
mov
in
adc
inc
xor
pushf
xchg
xor
aad
arpl
(bad)
(bad)
mov
jae
inc
loopne
inc
arpl
test
inc
aaa
les
(bad)
xchg
shl
ret
push
mov
pop
mov
fst
push
xchg
std
push
sub
dec
jl
pop
jb
leave
call
sbb
xor
pop
pop
jge
push
jno
cdq
push
ror
loop
pop
es
dec
and
jmp
adc
fild
push
std
dec
push
add
in
lods
ror
add
data16
sub
js
ret
xor
(bad)
pop
cmp
xchg
mov
mov
addr16
pop
sub
fiadd
vmwrite
jmp
cmp
mov
rol
xor
add
icebp
jg
mov
cmp
(bad)
outs
or
(bad)
mov
pop
shl
jecxz
fisttp
rcl
cmp
xlat
mov
sti
mov
std
test
cmp
fnstcw
test
lahf
fild
pop
iret
jo
sub
mov
pop
mov
cmp
push
test
add
sbb
adc
and
inc
test
add
stc
or
xor
retf
xor
sahf
sub
fidiv
popa
mov
or
or
xchg
xor
(bad)
(bad)
jmp
lds
sub
pusha
jo
mov
mov
stos
or
pop
aam
jo
cmp
jnp
adc
cli
dec
pop
cmps
mov
xchg
mov
mov
test
stc
or
pusha
or
bound
dec
jp
jno
sbb
dec
leave
test
js
je
ror
(bad)
push
popf
xchg
inc
mov
dec
data16
pop
test
push
rcl
fbstp
fcom
pushf
jb
mov
loopne
ret
nop
pop
loopne
ror
mov
sub
call
fucom
push
push
jmp
mov
and
jo
pop
(bad)
adc
dec
popa
lock
addr16
shl
lods
or
xor
(bad)
xchg
sub
outs
addr16
cmp
shr
adc
rcr
pop
or
jp
or
and
adc
mov
push
lock
rcr
iret
daa
jno
sbb
mov
push
dec
nop
inc
or
or
push
inc
scas
jns
das
rol
pop
inc
dec
pop
adc
cmps
imul
inc
inc
push
mov
add
xchg
mov
stos
and
in
pop
adc
jmp
sub
jo
ja
fsubr
xchg
xor
out
cmp
pop
cmps
out
jecxz
mov
out
ficomp
ror
lea
mov
mov
mov
xchg
fs
sbb
push
test
push
in
push
add
scas
ins
mov
or
pop
inc
inc
aaa
out
mov
push
pop
pop
add
add
lods
call
test
mov
sub
dec
mov
jl
xchg
scas
ins
pop
mov
or
out
in
mov
xchg
jecxz
imul
add
push
xchg
movs
outs
jo
sub
inc
mov
add
add
test
mov
cmps
inc
outs
js
sub
pop
xchg
adc
sahf
jne
push
popf
pusha
sub
xchg
(bad)
into
jno
mov
xchg
jecxz
xchg
jnp
add
mov
js
fild
inc
loope
or
xor
sub
add
jl
inc
stc
xchg
loopne
frstor
out
mov
mov
lea
add
cmps
xor
mov
or
pop
dec
(bad)
or
ret
mov
enter
fcom
xor
cmp
dec
pushf
xor
ja
scas
lods
xchg
js
push
es
inc
mov
dec
fidiv
pop
jge
xchg
mov
pushf
xchg
cli
pop
pop
xor
lock
inc
mov
xchg
movs
push
and
and
cmp
fisubr
test
sti
fwait
in
pop
es
mov
pop
stos
adc
loopne
js
add
repnz
push
or
sbb
dec
cli
and
cmp
rcl
ja
adc
sub
into
pusha
mov
and
ret
adc
mov
(bad)
mov
jo
fiadd
xchg
xor
push
or
and
sbb
sub
xchg
lods
ret
dec
int
push
lods
xchg
(bad)
xor
ret
pusha
imul
jnp
xchg
add
add
fwait
sahf
or
loope
and
pop
xor
stc
mov
adc
scas
or
push
imul
cmp
xchg
mov
jmp
test
mov
ret
shl
sbb
xchg
jno
cmp
add
or
imul
xor
xlat
jl
jo
fisttp
push
add
fidiv
add
inc
push
pop
fcom
cmp
pushf
xchg
mov
movs
inc
adc
sbb
loope
push
xchg
add
dec
xor
fwait
jae
jmp
addr16
neg
cdq
xor
mov
fcom
je
nop
div
sbb
mov
fcomp
mov
pop
cli
fs
sub
call
adc
mov
shl
inc
pop
and
sub
pushf
adc
loopne
adc
or
or
pop
or
cmc
mov
add
mul
or
sar
(bad)
sub
movs
das
inc
inc
or
adc
xchg
sar
inc
push
or
or
add
mov
jnp
xor
movs
cs
sbb
xchg
pushf
pop
cmp
mov
jo
adc
(bad)
pop
xchg
icebp
lods
aaa
retf
dec
lahf
mov
mov
pop
fs
or
test
(bad)
fucom
inc
stos
adc
(bad)
bndstx
cmp
jmp
xchg
sub
or
cmp
ins
stos
sbb
aaa
sbb
mov
lods
mov
movs
mov
mov
mov
add
movs
aaa
sar
push
in
ror
pop
fldcw
mov
inc
xchg
push
jb
(bad)
sbb
jno
cli
aam
or
mov
and
xchg
sbb
pop
loop
(bad)
cmp
add
sub
adc
out
outs
ret
push
and
sub
or
gs
add
mov
lea
clc
mov
lods
pop
gs
es
mov
retf
mov
add
lahf
adc
mov
daa
dec
and
pop
ror
ja
popa
dec
lods
je
dec
aad
cmp
dec
push
leave
mov
shl
or
mov
lods
(bad)
js
mov
daa
stc
pop
pop
aam
lods
mov
arpl
movs
add
and
lea
rcr
xchg
add
loope
or
pop
scas
xchg
push
(bad)
jmp
pop
mov
pop
sub
ret
or
mov
push
std
sbb
cs
and
femms
cmp
lods
cmps
and
arpl
lods
add
xchg
cs
add
sbb
(bad)
jmp
pop
cmp
adc
movs
hlt
xor
cmp
(bad)
retf
pusha
add
or
jmp
and
xchg
(bad)
aaa
scas
mov
and
je
add
push
mov
bound
popa
sub
add
add
or
mov
push
or
daa
sub
popa
cmp
xor
add
jno
in
mov
ret
dec
shl
sub
repz
jo
out
jo
sub
mov
mov
mov
sub
inc
add
loopne
in
xchg
retf
fmul
jbe
in
pop
test
aam
lds
ret
or
loop
dec
xor
sub
and
add
das
add
rcl
push
aam
push
rol
sahf
ins
loop
sbb
inc
xchg
adc
add
dec
data16
xchg
pop
push
stc
mov
and
jo
into
lods
push
mov
pusha
xchg
xchg
push
cmp
adc
adc
xchg
gs
add
add
xchg
je
xlat
leave
imul
pushf
sbb
inc
test
jae
ret
sub
inc
cmp
cmp
jno
push
jmp
test
lea
or
daa
fist
lock
pop
call
or
dec
pop
cs
jle
xor
scas
fwait
scas
push
movs
add
or
pop
lea
scas
and
xlat
outs
xor
fsubr
test
stos
outs
lock
push
push
(bad)
sbb
xchg
or
js
retf
mov
cmps
shl
ret
shr
and
clc
popf
jo
loopne
pop
mov
loope
arpl
add
push
and
movs
lea
push
pop
dec
test
sbb
retf
sbb
mov
or
sbb
xchg
dec
lods
jo
push
enter
pop
arpl
js
cmc
js
or
jno
push
add
fistp
ror
xor
jnp
mov
addr16
sbb
and
fstp
adc
ins
pushf
mov
aam
retf
sbb
jp
sbb
jle
(bad)
pop
nop
pop
pop
out
push
inc
test
adc
push
inc
into
dec
data16
ret
mov
xchg
pop
into
(bad)
jmp
jb
rcl
test
lea
dec
push
cmp
or
pop
mov
dec
and
dec
and
les
jbe
and
inc
loop
or
dec
lea
cdq
jns
in
inc
cmp
push
(bad)
cli
push
cmp
add
fcom
mov
xor
adc
pushf
pop
jmp
sub
les
mov
mov
or
or
mov
jbe
add
dec
cmp
ret
sbb
pushf
in
and
dec
(bad)
push
push
sub
mov
inc
adc
mov
es
cmc
add
fs
add
into
mov
xor
repnz
xor
or
test
mov
les
jp
shl
rcl
add
cmps
jmp
pop
icebp
and
push
push
pop
jmp
pop
pop
addr16
(bad)
sbb
mov
xchg
jne
and
xchg
ret
ret
fmul
clc
outs
dec
cmp
cld
or
popa
loopne
mov
jno
xor
mov
fs
cmp
int
dec
imul
add
mov
push
les
mov
pushf
and
adc
inc
sbb
pop
rcr
pop
rcr
sub
inc
sbb
add
xor
call
pop
sub
inc
jns
lods
retf
lea
into
mov
es
fld
ds
sub
movs
nop
push
adc
imul
pop
(bad)
retf
or
dec
push
pop
sti
push
outs
sbb
outs
pop
loopne
sub
imul
in
jb
in
jp
mov
mov
mov
and
mov
xor
xchg
aad
imul
mov
pop
dec
rol
cmp
loopne
add
sbb
cmps
pop
xchg
xchg
mov
mov
leave
call
adc
clc
int3
dec
(bad)
loop
mov
test
xchg
pop
cmp
addr16
pop
sbb
xchg
xchg
sub
sbb
cmp
jo
mov
cmp
shl
sbb
add
mov
js
hlt
loope
das
xor
fdiv
fs
lods
icebp
sbb
ins
xchg
xchg
ret
mov
or
(bad)
mov
sti
loope
xchg
dec
sbb
adc
pop
sbb
xchg
and
sbb
xchg
lods
sbb
mov
dec
arpl
mov
xchg
sbb
add
ss
imul
and
sbb
cmp
sbb
push
adc
xchg
push
or
dec
ja
lods
and
daa
pop
sbb
mov
js
add
inc
push
inc
sub
jl
xchg
dec
or
sahf
xlat
sub
mov
aaa
mov
mov
outs
mov
mov
xor
cmp
push
xor
jb
jp
add
sbb
aaa
lock
pop
sbb
repz
xchg
sbb
xor
popa
enter
push
push
jbe
fist
jae
mov
inc
push
(bad)
ficomp
daa
xchg
push
mov
or
xchg
out
add
sub
push
dec
xor
adc
pop
cmp
adc
shr
cs
cmc
sbb
or
sub
sub
lock
cmp
mov
jae
jl
inc
movs
jo
popf
es
jb
cmp
ret
lahf
jge
test
clc
cmp
sbb
jo
add
rol
adc
fmul
xchg
pop
mov
add
jnp
xchg
inc
(bad)
ror
and
pop
xchg
pop
cmp
(bad)
jae
nop
xchg
leave
mov
adc
movlps
sar
and
mov
lock
and
pop
xor
movs
or
shl
xchg
pushf
sub
push
mov
and
pop
stos
lds
into
xor
xchg
mov
imul
and
pusha
pop
jmp
dec
or
adc
cmp
xlat
sub
push
jge
mov
add
jno
add
inc
in
inc
hlt
xor
xor
retf
ds
sahf
pop
sbb
cmp
cs
cmp
mov
ins
fldenv
xchg
xchg
(bad)
cmp
shl
scas
adc
test
in
xchg
(bad)
pop
mov
inc
movs
adc
or
in
and
pop
xor
adc
gs
jno
into
adc
add
imul
rcl
or
ins
push
ins
add
pop
aam
gs
js
jo
das
ds
mov
shr
fcom
or
ja
xchg
and
mov
xor
fwait
bound
mov
sbb
out
ins
add
dec
sub
daa
pop
xlat
mov
inc
call
ss
cdq
jmp
call
aam
sub
sub
pop
inc
jecxz
(bad)
xor
push
loopne
ror
xor
les
pavgw
mov
clc
mov
pusha
adc
enter
imul
mov
adc
jl
add
out
mov
cmp
pop
or
aaa
repnz
xor
add
add
add
dec
dec
fucom
into
cmp
outs
nop
cwde
retf
cmp
sbb
sub
stos
rcr
dec
sbb
popf
scas
push
push
out
jle
dec
cmp
fisttp
sub
dec
xchg
mov
call
sbb
sbb
or
in
pop
es
int
push
xchg
and
cmp
adc
int3
xor
das
pop
pusha
or
sub
add
push
dec
(bad)
add
pop
lock
jne
rol
jmp
dec
sbb
xor
sub
xchg
jns
out
test
add
and
add
inc
in
test
mov
bound
push
push
nop
mov
jmp
aam
push
jb
xchg
inc
fadd
ss
inc
ret
jae
pusha
test
test
test
arpl
pusha
in
jmp
lea
sub
adc
jecxz
adc
add
mov
iret
enter
push
push
jo
xor
cld
in
or
repz
and
gs
iret
fimul
mov
loope
mov
and
push
inc
adc
gs
dec
cmc
lods
mov
mov
fidiv
inc
sbb
lods
push
add
jmp
add
or
das
lods
mov
iret
mov
add
add
cmp
adc
scas
add
shl
neg
sub
and
push
gs
adc
xchg
lea
add
je
out
test
push
stos
idiv
xchg
add
test
test
add
test
loope
inc
inc
mov
mov
fs
loopne
xor
test
or
push
mov
retf
xchg
push
movs
or
add
push
jmp
retf
inc
retf
into
jnp
dec
ins
nop
outs
lods
loopne
cmp
mov
adc
jle
xor
or
xor
lock
aaa
mov
sbb
adc
adc
adc
stos
pop
in
mov
and
in
add
bound
pop
mov
fwait
mov
inc
sbb
fisub
cmp
dec
(bad)
rcr
xchg
(bad)
xchg
dec
push
out
mov
push
xchg
rcr
push
xchg
ror
add
inc
mov
shl
xchg
mov
leave
ret
mov
add
mov
loope
add
add
sub
add
sbb
mov
dec
sti
xchg
loopne
pop
js
cmp
adc
adc
mov
xchg
mov
ins
lock
sti
push
pop
pushf
and
lods
jne
mov
popa
jo
loop
stos
add
sub
push
or
mov
mov
and
dec
cmp
cdq
dec
popf
xor
pop
mov
out
adc
cmp
or
sub
out
repnz
sbb
push
xchg
or
das
ja
inc
and
add
add
iret
idiv
ret
sti
sbb
and
rol
lea
out
jno
mov
push
and
nop
pop
or
adc
and
sub
dec
xchg
pusha
and
iret
inc
mov
mov
mov
push
loop
stos
in
pop
sub
push
ss
aam
add
or
jb
and
pop
jmp
jb
into
inc
lods
cmc
(bad)
mov
push
mov
nop
mov
jb
pop
adc
pusha
pop
in
fwait
rcl
jo
ds
mov
xor
xor
push
jp
out
add
cmp
jns
pop
sbb
jp
adc
or
inc
loopne
(bad)
fdiv
movs
adc
dec
inc
fidiv
xor
sbb
xor
cmp
fsubr
push
sub
dec
and
fcomip
inc
pop
push
inc
stos
retf
rcl
ja
jl
pop
add
adc
xor
pop
aaa
mov
cmp
lods
jne
or
sbb
jns
mov
ss
jae
arpl
(bad)
jb
sbb
sub
inc
outs
push
pop
fisttp
mul
or
push
xor
mov
add
cmp
adc
xor
pop
loopne
lds
add
push
and
lods
and
xchg
mov
fcomp
add
xor
jo
(bad)
xor
pop
push
pop
pop
push
comiss
xchg
mov
lods
popa
sub
cmp
xchg
aam
rol
icebp
gs
xor
xor
and
fidivr
pop
retf
outs
dec
inc
sahf
cmp
jne
mov
sbb
mov
dec
cmovg
sub
das
sbb
mov
sbb
add
arpl
jmp
in
mov
dec
imul
xchg
lock
scas
xor
rcl
pop
inc
loopne
mov
mov
inc
sahf
les
and
jo
mov
pop
rcr
fsub
dec
movs
popf
cmp
jb
pop
out
mov
rcr
xor
pop
sub
pop
rcr
xchg
pushf
add
shl
imul
xor
push
xor
aaa
xor
pop
inc
loope
cmp
pusha
dec
outs
dec
retf
pop
ja
adc
dec
pop
or
sbb
arpl
test
loope
push
xor
push
xor
in
loope
fdivr
or
sbb
sbb
and
and
add
cmp
mov
fsub
mov
sbb
dec
shr
or
jne
or
xchg
(bad)
lods
push
je
in
cmp
push
push
mov
inc
jl
cmps
jmp
loope
adc
push
les
jne
sbb
cmp
fdiv
jmp
mov
or
add
cmp
arpl
mov
xor
dec
or
test
adc
and
sbb
jo
mov
inc
aam
xor
(bad)
or
leave
imul
xchg
xor
popa
in
mov
sahf
jecxz
xchg
fidiv
(bad)
and
lea
sub
adc
stc
sub
xor
sub
adc
pop
shl
repz
fs
pop
es
dec
imul
or
dec
lea
add
xchg
pop
icebp
or
imul
js
push
aaa
js
push
out
cdq
outs
adc
les
les
sub
mov
jb
pop
mov
xlat
jle
mov
cmp
out
cmp
pop
push
dec
int3
mov
mov
adc
jg
nop
push
imul
ins
cmp
and
fistp
loopne
fwait
mov
daa
add
pop
aad
add
das
loop
add
inc
or
mov
and
cmp
popa
dec
add
jmp
jo
enter
into
cmp
cmp
mov
add
iret
loope
add
add
pop
dec
fdiv
(bad)
rcl
push
cmc
or
stc
mov
xchg
(bad)
pop
mov
xchg
sbb
mov
mov
inc
pop
xor
pusha
das
or
and
fs
jo
loopne
jmp
sub
and
sar
mov
js
mov
pop
cli
cmp
retf
jmp
xchg
scas
pusha
or
mov
rcl
ret
dec
cmp
cmps
mov
inc
mov
xchg
mov
jb
dec
jb
jecxz
mov
push
sbb
pop
jae
sub
shl
inc
loope
inc
dec
sub
js
and
jg
inc
popa
movs
mov
clc
in
les
sahf
(bad)
and
add
xchg
mov
loopne
daa
sub
shl
and
call
push
and
or
cmp
mov
mov
jns
push
sbb
loope
adc
add
dec
lods
nop
les
cmp
inc
and
jmp
shl
mov
into
sub
inc
(bad)
aad
sbb
in
repnz
test
leave
in
adc
popa
jb
push
enter
jbe
mov
pop
(bad)
jne
xchg
fadd
push
popf
fadd
pushf
loope
aad
arpl
push
dec
add
mov
mov
adc
cdq
enter
(bad)
cmps
sbb
into
jmp
dec
in
mov
or
xor
mov
add
movs
ror
(bad)
cwde
outs
or
inc
pusha
daa
mov
fdivr
jo
popa
stos
xor
mov
fisttp
jb
dec
jne
cmc
(bad)
rol
jg
cmp
and
jo
push
and
popf
(bad)
mov
pop
and
ds
jmp
or
push
mov
cmp
push
mov
dec
dec
sti
int
adc
xchg
out
in
xchg
lock
adc
leave
dec
pop
clc
movs
mov
cmp
jmp
ss
mov
adc
inc
add
mov
pop
push
dec
jo
das
rcl
add
shl
and
iret
loop
ins
sbb
push
popa
dec
mov
mov
test
lock
rcl
pop
push
add
les
movs
fnstcw
sbb
jge
xor
mov
(bad)
dec
(bad)
sbb
in
retf
and
imul
fadd
sub
pop
push
inc
jns
sbb
cli
cmp
sub
push
loop
cdq
daa
in
addr16
rcl
adc
ret
pusha
popa
xor
scas
inc
imul
mov
sub
in
mov
daa
je
jmp
nop
scas
add
add
out
push
shl
and
test
shl
ret
mov
js
lods
pop
pop
add
inc
xchg
mov
sub
push
dec
repnz
sbb
cmp
out
lsl
test
rol
mov
(bad)
repnz
and
inc
jl
push
mov
cmp
popa
fs
lods
outs
sbb
or
mov
mov
gs
jno
ret
sbb
sbb
adc
jne
xchg
pop
jns
inc
lea
pop
call
sbb
pushf
jne
and
lea
(bad)
(bad)
je
jmp
orps
sbb
push
add
push
push
or
into
cmp
add
(bad)
leave
ror
call
jno
fcom
jecxz
sbb
je
sti
mov
pop
add
dec
mov
xor
cmp
rcr
ret
xor
lods
mov
push
popa
(bad)
jo
sar
pop
push
sub
dec
mov
push
(bad)
stc
mov
sub
jmp
mov
mov
jmp
xchg
pop
inc
ja
gs
push
daa
lods
push
mov
cmp
add
int3
icebp
sub
rcr
sub
das
jge
push
call
inc
add
xchg
xchg
xchg
add
popa
icebp
sbb
jecxz
jne
jle
fdivr
or
mov
pop
cmc
mov
ja
out
ret
call
fst
push
shl
ror
mov
shl
loope
sub
xchg
jb
mov
push
and
sti
fadd
mov
sub
loope
jmp
mov
sbb
sahf
push
inc
loop
xchg
or
dec
movs
scas
mov
cwde
pop
test
cli
call
test
jge
jno
sbb
pop
adc
cli
retf
pop
dec
mov
add
jb
test
(bad)
fucom
movs
or
scas
int3
nop
out
jg
popf
xor
sub
add
fnsave
jo
jo
cmp
xchg
or
push
nop
add
test
outs
mov
mov
xchg
out
mov
(bad)
lock
pop
mov
inc
es
hlt
aas
mov
mov
dec
cld
into
jnp
push
das
(bad)
aad
xor
mov
fisttp
jmp
add
hlt
jno
xchg
rcl
ret
inc
pusha
mov
shl
xchg
pop
js
and
loope
and
and
(bad)
xchg
xchg
push
push
mov
push
arpl
jmp
dec
add
add
rol
fmul
fs
sub
add
leave
push
sbb
adc
jmp
test
sub
int
cmp
inc
popa
arpl
enter
jnp
test
mov
lea
pop
jmp
fst
es
ss
iret
ret
add
sub
mov
xchg
ret
rcl
sub
xor
or
test
imul
or
pop
sub
or
cwde
mov
lds
jmp
cmp
sbb
sbb
cmp
outs
xchg
dec
sbb
dec
daa
test
jnp
(bad)
pop
adc
retf
fwait
or
xor
fmul
jne
(bad)
mov
test
mov
adc
jne
sub
retf
and
mov
push
cmp
ins
cmp
into
rcr
jmp
aas
imul
add
sbb
pop
mov
adc
dec
dec
mov
out
scas
(bad)
ss
push
dec
retf
bound
test
mov
add
das
dec
repz
test
enter
inc
xor
add
inc
push
icebp
add
xchg
pop
imul
inc
fdivr
or
sbb
aas
mov
scas
xchg
mov
daa
in
ss
hlt
stos
mov
and
scas
adc
mov
mov
mov
mov
dec
pop
fwait
(bad)
popf
mov
mov
mov
popa
mov
xchg
or
enter
sub
and
and
loope
data16
mov
or
leave
arpl
clc
jg
pop
pop
imul
cwde
loope
sub
adc
sbb
pop
es
hlt
iret
mov
add
mov
push
xor
add
adc
shr
cmc
dec
loope
(bad)
(bad)
mov
xor
(bad)
nop
add
lock
or
or
mov
daa
lahf
es
mov
(bad)
(bad)
xlat
loopne
movs
jo
mov
cmps
push
jb
add
mov
inc
inc
cmp
xor
pop
fs
adc
test
add
adc
or
aam
add
sbb
jmp
xor
sbb
test
add
mov
pop
stos
sub
retf
jns
and
push
clc
and
fdivr
call
outs
push
cmp
rcl
sub
xor
rcl
push
daa
xor
ror
adc
hlt
(bad)
cmp
shl
popa
push
jl
push
das
pop
popa
or
add
jo
ss
les
movs
movs
out
mov
cmp
dec
xor
ret
ins
out
in
pushf
sub
js
push
xlat
mov
sar
push
(bad)
xor
lds
push
pusha
shr
sub
cmp
xchg
add
cmp
add
xor
pop
loope
popf
shl
jecxz
xor
div
mov
and
jae
and
xchg
xor
xchg
rol
inc
addr16
cmp
dec
sbb
sbb
mov
ins
pusha
ins
inc
popf
je
jge
ret
dec
mov
aas
inc
loop
clc
or
inc
addr16
sub
neg
dec
dec
inc
push
add
fld
dec
add
pop
aad
jo
or
mov
mov
sub
cmps
out
push
bound
xchg
push
ja
sub
adc
pop
pop
sbb
mov
enter
cmp
das
cmp
ja
imul
mov
xchg
(bad)
aaa
fcomi
cmp
sbb
push
jnp
xor
pop
add
sub
xor
daa
cmp
cmp
mov
and
and
cmp
cmp
and
push
mov
pop
xor
or
jb
out
dec
xor
test
rcl
ja
pop
adc
xchg
hlt
push
repnz
and
sub
xor
push
(bad)
retf
adc
(bad)
inc
sbb
dec
mov
pusha
and
pop
add
push
jbe
jl
xchg
mov
jmp
xchg
test
xchg
push
and
ja
scas
and
add
mov
or
int3
sbb
fidivr
cmp
xchg
jno
and
arpl
xor
(bad)
int3
cli
into
add
cmps
sahf
dec
sbb
mov
outs
or
sub
mov
cmp
or
xchg
and
outs
pushf
and
xor
sahf
sub
jl
sbb
cdq
cmp
sub
cmp
jne
sub
sbb
aaa
lods
jle
loop
or
push
mov
sbb
push
mov
ss
imul
or
pop
pop
push
mov
mov
adc
pop
movs
push
sbb
rol
(bad)
int
test
mov
jbe
pop
xchg
scas
movs
in
mov
sub
add
mov
xchg
mov
cs
push
or
lahf
(bad)
lahf
movs
mov
push
dec
add
xchg
mov
call
arpl
mov
jle
add
mov
sbb
push
sbb
cmp
clc
rol
mov
mov
inc
imul
sub
lock
movs
adc
xchg
test
fucom
sbb
xchg
adc
xor
js
dec
js
movs
push
xor
xchg
mov
push
jno
(bad)
jmp
pop
aam
mov
inc
pushf
mov
test
enter
sbb
ds
aam
add
mov
cmp
outs
retf
mov
sub
xchg
mov
or
xor
mov
sub
nop
sbb
lahf
jge
inc
dec
or
cli
dec
int3
adc
dec
retf
(bad)
xor
push
cli
and
std
xor
sbb
mov
jmp
cmp
shl
cmp
lahf
mov
cmp
sbb
add
sbb
pop
iret
pop
and
pop
pop
lock
jl
mov
sbb
out
mov
jo
(bad)
je
mov
daa
dec
loope
cmc
mov
and
je
or
sbb
rcr
push
push
xor
nop
xor
cdq
jo
mov
pushf
sbb
cmp
or
and
aaa
dec
push
add
add
cmp
lods
sub
cmc
nop
dec
arpl
into
jb
cmp
das
fsubr
in
sbb
add
xor
cbw
push
inc
mov
cmp
push
xor
pop
sar
je
dec
outs
loop
push
std
add
inc
loope
jecxz
xor
xchg
add
mov
loope
xchg
fimul
movs
daa
sub
ja
or
cmp
adc
dec
sbb
jno
sbb
adc
or
mov
mov
(bad)
and
inc
mov
mov
xchg
push
scas
cmp
and
pop
sbb
push
leave
sbb
cld
dec
or
fidivr
es
lds
popa
lods
and
mov
push
push
push
scas
pop
ja
or
cmc
jb
cmps
sti
movs
cmp
add
into
retf
mov
xchg
cdq
add
adc
push
mov
bound
(bad)
iret
adc
imul
loope
cmps
rcl
or
sub
js
icebp
je
mov
xchg
ds
adc
daa
cmp
imul
xor
add
mov
das
fcomp
jmp
ss
and
inc
pop
int
call
sub
or
and
(bad)
push
add
inc
popa
fadd
xor
sbb
in
dec
daa
test
lahf
jecxz
push
repnz
iret
cmps
sub
scas
dec
push
aas
xchg
inc
mov
sub
cmp
add
outs
std
dec
out
imul
out
adc
aad
xor
mov
cmp
sbb
out
jne
sub
in
mov
inc
out
leave
or
pop
div
add
rcl
sub
jo
cmps
into
sahf
inc
mov
movs
or
push
pop
pop
jge
lods
push
cmp
jmp
sbb
cmps
dec
aam
fidivr
(bad)
mov
cmps
mov
pop
xor
addr16
pusha
mov
pushf
xor
frstor
loope
xchg
lods
les
jo
or
jmp
clc
xchg
xor
and
hlt
mov
mov
psrlq
and
add
ins
rcl
push
ret
xchg
pop
retf
xlat
sub
push
stc
or
ja
xor
mov
lea
xchg
std
es
aaa
xor
mov
push
fisttp
adc
test
adc
dec
sbb
sbb
mov
adc
adc
adc
xchg
and
fsub
and
push
imul
(bad)
lods
lock
add
das
cmp
or
jg
test
repnz
sub
pop
sbb
sub
mov
pop
sub
dec
mov
or
xchg
pop
dec
dec
addr16
rcr
cmp
push
add
ret
pop
shr
jnp
bound
pop
xor
mov
ret
jmp
mov
jne
cmp
add
cld
outs
cmp
pop
mov
imul
inc
inc
jl
mov
sbb
add
icebp
mov
sbb
cmps
loop
jo
or
pop
cmp
adc
sbb
sbb
enter
pop
(bad)
jmp
jo
and
mov
mov
lea
popa
das
cmp
xchg
jb
lea
inc
dec
add
ins
and
pop
inc
out
stos
dec
or
xchg
(bad)
adc
or
imul
rol
cmp
enter
dec
push
(bad)
repz
imul
dec
or
das
or
xor
cwde
xchg
push
dec
or
push
adc
cmc
adc
cmp
sub
ror
test
lods
test
mov
ins
push
fild
lods
push
and
repnz
dec
mov
rcr
in
xchg
data16
jo
or
sbb
lock
les
mov
mov
mov
inc
in
sbb
xchg
scas
and
xchg
xchg
mov
or
rcl
cmp
mov
cmp
stos
push
cmp
test
ret
fst
aam
push
xchg
push
xchg
fiadd
rol
das
enter
scas
popa
push
sbb
cmc
test
fstp
inc
jo
pop
dec
ret
stos
add
mov
xchg
inc
push
adc
sbb
pusha
add
retf
inc
add
inc
sbb
jmp
push
jl
popf
sbb
mov
push
sbb
pop
scas
dec
mov
cmovg
mov
sub
mov
into
mov
sti
pop
pop
loop
mov
xchg
and
retf
pop
xchg
xchg
repz
adc
inc
push
push
pop
cmp
lods
ret
fs
lea
jge
sbb
pop
jae
add
mov
fs
or
cmps
push
(bad)
sbb
in
retf
xchg
mov
mov
push
mov
inc
enter
inc
in
loopne
mov
xchg
test
or
popa
or
mov
jne
xchg
hlt
out
mov
and
stos
push
jmp
xor
adc
push
loopne
fcom
(bad)
sub
mov
(bad)
cmp
repnz
pushf
inc
call
mov
mov
sbb
adc
rcr
or
lea
adc
sahf
adc
jmp
imul
push
js
jmp
mov
popf
jecxz
jmp
stos
add
pop
inc
(bad)
push
iret
add
sub
pop
lea
clc
adc
mov
mov
sub
cmp
sbb
sbb
xor
fisttp
adc
xchg
pop
ja
adc
add
mov
repnz
(bad)
or
in
add
and
in
mov
mov
popa
mov
jo
(bad)
xchg
mov
jmp
dec
xlat
(bad)
sub
loopne
and
cmps
and
iret
xor
mov
fadd
jbe
jp
xchg
push
sub
ret
leave
fidivr
call
fsubr
rcr
retf
jo
lods
scas
scas
jo
cdq
pusha
mov
out
add
adc
ret
enter
add
jo
std
jnp
daa
cmp
mov
fstp
inc
xchg
idiv
sbb
and
xor
aam
pop
inc
xor
and
and
mov
movs
ins
data16
cmp
addr16
(bad)
(bad)
jmp
push
jns
jmp
jmp
ret
adc
pop
jnp
arpl
cmc
les
ds
pop
push
pop
jmp
popa
outs
dec
fmul
sbb
je
aad
ror
xor
imul
in
xor
sbb
sub
retf
imul
adc
nop
in
lods
mov
xor
test
ds
movs
sbb
addr16
cwde
pop
cmp
repnz
ja
sub
mov
punpcklbw
scas
lods
xchg
ds
cmp
loope
popf
scas
push
mov
cmp
and
cmp
add
shr
test
test
and
or
lods
push
dec
xchg
dec
das
das
loopne
sub
out
repnz
ret
pop
loope
sbb
gs
pop
xchg
loopne
out
jp
iret
and
mov
adc
imul
mov
fcmovnb
loope
(bad)
xor
pusha
xor
loop
fiadd
loopne
mov
shr
and
pusha
sahf
sbb
adc
mov
daa
lods
add
xchg
sub
ret
sahf
jmp
dec
call
jno
push
mov
ins
outs
loop
add
push
xor
loopne
pop
imul
jl
scas
sub
pop
push
sub
int3
inc
pop
pop
fwait
sub
test
call
pop
and
cmp
outs
mov
fstp
cs
rcr
add
das
cmp
inc
es
xor
adc
outs
lods
sahf
sub
movs
jl
loopne
pushf
add
test
or
add
add
dec
shr
add
and
mov
xchg
repnz
loop
mov
mov
mov
mov
jno
sub
add
and
push
dec
test
xlat
add
jo
movs
pop
jb
dec
packsswb
mov
sbb
xor
mov
das
jbe
ja
(bad)
imul
ins
pushf
push
cmc
sbb
or
out
leave
ror
daa
(bad)
jl
lods
imul
sub
xchg
pushf
ret
outs
add
mov
pop
xchg
shr
out
scas
pop
pop
rcr
rcl
cmp
mov
js
xor
and
dec
cli
mov
pusha
xor
mov
pushf
jl
add
sub
cli
jp
sbb
sub
add
icebp
test
clc
loopne
in
out
adc
and
nop
out
hlt
mov
mov
push
mov
jae
(bad)
(bad)
mov
icebp
nop
add
jo
div
out
push
xchg
and
add
movs
mov
adc
mov
pusha
xor
sub
vmread
inc
cmp
inc
call
pop
pusha
sub
sub
and
retf
scas
loope
xchg
xchg
mov
sub
mov
arpl
jne
popa
jp
ds
or
or
je
ror
jp
loope
add
call
fiadd
mov
pop
push
rol
sbb
neg
jnp
sar
aaa
ss
pop
inc
cmp
xchg
jne
mov
sbb
movs
inc
jmp
mov
movs
ss
jnp
mov
aam
je
jne
sbb
fwait
xor
or
loopne
sub
push
inc
and
je
jecxz
and
cmp
cmp
dec
or
dec
and
test
stos
sub
and
or
test
mov
inc
pop
fsubr
ror
addr16
or
sub
sub
(bad)
cmp
jmp
push
popw
call
pusha
lock
push
and
or
cwde
mov
rcl
sbb
dec
cmpxchg
inc
dec
or
in
fiadd
and
sub
xchg
or
xchg
jo
sub
(bad)
push
push
and
jmp
xchg
aad
adc
push
cmps
sub
xchg
add
push
ret
mov
ret
add
adc
fld
push
or
sub
jb
aam
cmp
mov
sti
fcmovbe
jo
or
iret
push
pop
sbb
sbb
sbb
mov
fild
add
(bad)
mov
sub
or
addr16
adc
fist
retf
xor
int
jecxz
(bad)
adc
mov
xchg
lock
mov
jbe
pop
mov
icebp
ret
mov
mov
mov
or
icebp
sub
out
mov
out
mov
xchg
pusha
test
dec
xchg
loop
ret
test
xchg
ret
loopne
popa
add
pusha
sbb
movs
loope
dec
xchg
sbb
dec
ret
xlat
adc
or
xchg
adc
push
dec
iret
pop
mov
xchg
or
fld
nop
or
push
daa
or
lods
mov
jge
cmp
fdiv
pop
sub
pop
dec
push
add
popf
xchg
mov
sub
js
push
ror
jecxz
pop
ins
xchg
ret
and
fadd
cs
fcom
inc
or
add
fs
or
pushf
cdq
aas
scas
dec
sub
jmp
or
arpl
cmp
pop
pop
(bad)
retf
shl
push
call
jbe
scas
inc
popf
into
inc
inc
pusha
addr16
xchg
pop
xor
xchg
sub
inc
inc
xchg
nop
inc
add
xchg
repnz
test
mov
dec
fs
clc
xchg
inc
add
bound
fld
xor
gs
adc
or
mov
dec
jp
out
xor
div
adc
test
and
mov
jae
pop
das
cmp
outs
mov
push
loopne
fs
retf
push
cmps
or
and
mov
inc
pushf
push
mov
inc
add
dec
sub
mov
xor
pop
pushf
movs
outs
lods
sahf
xchg
test
xchg
popa
pop
adc
xchg
das
pop
dec
dec
(bad)
or
pop
pusha
lods
mov
ins
push
mov
popf
push
ret
and
popf
xchg
and
adc
adc
loopne
push
loope
(bad)
in
push
push
shl
add
movs
xor
aam
movs
xchg
dec
pusha
inc
inc
push
pop
(bad)
pop
jo
pushf
jge
sub
popa
es
ret
sbb
into
popf
mov
push
push
mov
fmul
mov
push
imul
xor
(bad)
cmps
bound
pop
add
dec
mov
sbb
dec
call
xchg
lods
pop
rsqrtps
mov
mov
cs
in
clc
test
dec
inc
cli
fst
xor
nop
adc
pop
loopne
xor
aam
lea
inc
mov
mov
dec
cs
nop
sbb
test
fst
pop
jmp
dec
adc
or
sbb
loope
not
mov
mov
lahf
das
inc
jmp
or
loope
aad
mov
mov
repz
test
or
or
and
mov
and
repnz
fcmovnb
retf
scas
adc
dec
stos
loope
inc
and
jbe
push
mov
or
in
jnp
inc
(bad)
das
shr
arpl
addr16
xor
sub
xor
rcl
adc
aas
je
or
add
repz
jmp
ja
int
mov
push
xchg
ins
enter
push
add
xchg
sub
add
push
cmp
cdq
or
xchg
(bad)
jp
adc
jb
in
inc
outs
sub
ror
or
jae
mov
rcr
out
sar
cmp
adc
iret
xor
and
mov
cwde
jp
xor
jp
nop
jno
xchg
mov
ret
pushf
test
cmp
or
cmp
jle
or
push
jb
jmp
dec
and
stos
gs
or
push
call
and
mov
ret
lahf
stos
push
test
mov
and
xor
movs
xchg
ds
ds
add
out
adc
scas
sub
ret
sub
push
dec
dec
mov
pop
scas
jg
xor
aam
test
imul
retf
addr16
xor
hlt
dec
inc
cwde
sub
sbb
push
(bad)
retf
xchg
rcl
cli
cs
mov
cmp
add
movs
add
xor
jp
in
push
in
or
test
pop
pop
mov
enter
or
push
mov
les
mov
add
inc
ret
mov
xchg
mov
rol
repz
test
mov
rcr
loop
xlat
sbb
add
sub
xor
add
sub
pop
mov
cs
loop
scas
mov
inc
daa
jle
push
gs
sbb
pop
pop
lea
pop
loopne
push
cmps
das
movs
xor
or
xor
adc
jmp
and
mov
call
inc
push
mov
pop
cmp
(bad)
xor
(bad)
sbb
out
jmp
inc
inc
xor
test
in
or
or
inc
nop
cdq
push
xchg
call
or
popa
inc
popa
add
inc
sbb
in
mov
push
push
das
aam
cmc
call
mov
cmc
pop
add
mov
and
push
dec
jb
not
push
push
test
jno
push
scas
mov
xor
pop
or
ins
push
sub
pop
jp
xor
adc
adc
add
aam
and
cmp
dec
lods
jne
outs
enter
sub
mov
(bad)
pop
xchg
mov
cmp
push
mov
sbb
dec
xor
dec
adc
bndstx
stc
xlat
pusha
test
pop
lea
xlat
dec
movs
sbb
stc
clc
jl
(bad)
imul
inc
jnp
jnp
(bad)
es
push
shl
mov
pushf
sub
fwait
call
adc
inc
test
jb
arpl
jmp
or
push
pop
add
mov
in
retf
xor
jnp
jmp
ret
or
pop
cmp
scas
mov
and
lds
add
dec
sub
movs
pop
push
sub
add
or
ror
ret
xor
loopne
mov
jne
inc
retf
fld
mov
smsw
push
push
mov
lds
jae
rcl
int
pusha
sbb
xor
(bad)
std
popa
jo
push
pop
xchg
cmp
jecxz
jb
or
inc
jns
or
mov
outs
(bad)
and
adc
les
cmp
movs
cmp
inc
sub
and
cmp
inc
pop
mov
and
push
jns
ins
lahf
or
pop
test
adc
call
inc
pop
fst
into
cli
add
mov
ret
or
sub
and
sti
and
jne
sub
fs
fstp
mov
mov
loope
or
jmp
xor
push
sub
xchg
and
and
mov
into
rcl
add
cs
popf
mov
aam
xchg
mov
or
pop
loop
sbb
mov
and
pusha
adc
loopne
mov
jp
jne
fist
xor
cmp
mov
enter
in
enter
ret
pop
inc
retf
cmp
pop
xchg
pop
scas
shl
or
dec
pop
push
outs
sbb
add
xchg
push
xor
or
jb
xlat
cmp
pop
adc
mov
pop
mov
dec
movs
pop
pop
and
je
jecxz
into
sahf
cs
push
js
sbb
jns
jg
sub
(bad)
mov
mov
loopne
gs
into
jecxz
xchg
shr
mov
cli
inc
test
or
shl
add
inc
adc
inc
test
test
outs
ret
inc
mov
in
lods
rol
aaa
push
jb
cmp
rcr
xchg
mov
mov
in
dec
mov
push
pop
mov
sbb
sbb
add
mov
add
cwde
sbb
sti
ds
adc
fnstcw
shr
and
(bad)
loopne
sub
add
call
inc
cmp
push
popf
into
xor
rcr
mov
enter
pop
inc
test
test
repz
jne
cmps
or
sbb
fabs
popf
inc
ds
jp
sbb
mov
cs
imul
ja
add
pop
(bad)
sub
rol
ja
pop
(bad)
sahf
and
shr
and
pop
test
mov
aas
add
sbb
addr16
xchg
(bad)
hlt
dec
ret
outs
bswap
sbb
mov
js
adc
cmp
push
cmp
emms
add
xchg
jecxz
pop
xor
xor
rol
pop
lea
jo
inc
movs
sbb
xchg
mov
cmp
add
outs
mov
test
jo
push
dec
nop
jg
adc
and
popf
xor
stos
out
movs
js
sbb
shl
jecxz
ins
test
jmp
mov
rol
popf
sbb
lods
test
pop
xchg
push
movs
cmp
bound
icebp
pop
dec
adc
sub
leave
daa
add
out
or
aam
pop
retf
leave
aam
pop
das
pop
and
or
or
adc
imul
pop
in
lods
loope
or
pushf
adc
fdivr
jb
push
add
or
mov
ss
bswap
xchg
ss
pusha
in
push
jmp
ror
retf
cdq
inc
aad
dec
xor
mov
adc
sub
inc
retf
push
test
cli
mov
mov
imul
ret
adc
add
mov
xor
sti
out
fnsave
das
enter
sub
dec
mov
fsub
add
adc
cmp
imul
pop
(bad)
sbb
mov
setb
jno
add
sub
push
nop
xchg
jmp
jne
adc
xor
ror
pop
mov
out
rcr
dec
mov
ins
mov
mov
cli
(bad)
imul
xor
dec
add
shl
rol
or
cmc
xor
ins
sub
xor
xor
sub
add
iret
std
test
repnz
pop
cmps
xchg
pop
into
pop
shl
adc
jg
out
shl
cmp
sbb
dec
shl
mov
jl
cmc
mov
jno
rcl
dec
mov
and
jb
or
popa
cmp
fdiv
xchg
or
dec
jns
mov
leave
or
inc
pop
cmp
pop
pusha
in
inc
mov
test
cmp
pusha
jo
xchg
cmp
pop
fsub
div
xchg
stos
and
lea
loopne
inc
xchg
mov
fimul
or
loope
ja
ret
and
push
pop
pop
fwait
xor
push
dec
adc
ret
out
or
and
imul
das
imul
jge
and
(bad)
js
iret
cdq
sub
adc
sbb
bound
sub
pushf
xor
mov
sbb
dec
push
shr
and
fsub
cs
popf
adc
fidiv
sbb
cmp
mov
scas
sbb
sbb
imul
push
es
jmp
xchg
pop
mov
pop
xchg
inc
sar
add
xor
push
jnp
out
cmp
pushf
adc
jl
push
pushf
and
daa
retf
jo
xchg
mov
cmp
sub
hlt
loopne
dec
push
imul
inc
and
or
sbb
sub
std
stos
add
xchg
inc
or
pusha
outs
push
jecxz
dec
mov
std
das
nop
jbe
sbb
xor
mov
push
or
cli
iret
sub
sbb
in
cmp
sbb
je
or
inc
pop
cmp
adc
xor
pushf
mov
jb
and
arpl
xor
pop
fdivr
xchg
leave
and
outs
ror
ret
push
dec
inc
rcr
rcr
cmc
or
sbb
mov
scas
push
clc
xchg
rol
push
sbb
xor
jmp
pop
ret
jb
mov
aam
ret
in
sub
aaa
add
inc
sbb
lods
cmc
inc
(bad)
ror
repnz
pop
pop
mov
add
loope
xchg
jecxz
xor
dec
jge
inc
loopne
or
mov
inc
xchg
or
rcl
aam
ficomp
sbb
sbb
nop
rcl
or
dec
fst
lahf
pop
arpl
adc
lahf
push
inc
daa
or
mov
pop
repnz
lods
je
fsub
cli
lock
pop
inc
cmps
pop
or
jge
push
mov
fnsave
dec
sbb
xor
inc
fcom
pop
mov
sub
idiv
cmp
and
shl
retf
pusha
xchg
test
mov
sbb
jno
dec
inc
sbb
xchg
mov
arpl
add
sbb
adc
pop
xchg
sub
ror
leave
pop
js
call
movs
stos
in
inc
jmp
pop
and
add
cmps
push
add
xor
jo
xchg
int
add
js
les
mov
add
nop
push
bound
add
and
jp
pushf
clc
cmp
mov
stc
xor
jmp
cld
xchg
clc
das
sar
out
or
repz
imul
jb
mov
cmp
add
pop
fild
pop
mov
loop
ror
or
mov
rcl
leave
xor
mov
pop
pop
push
dec
xchg
push
fisttp
and
lods
pop
or
inc
push
push
cmp
rol
shr
inc
lahf
xor
fs
rcl
add
jno
rol
mov
mov
push
pusha
cmc
popf
in
mov
in
pop
(bad)
stos
int
mov
mov
scas
mov
pop
jno
adc
out
sahf
test
test
call
fs
and
or
cmp
cmp
push
nop
into
std
clc
addr16
add
shr
xchg
lock
fisttp
cmp
mov
shr
cwde
test
fs
mov
ins
adc
stos
fdivr
pop
or
cmc
movs
call
dec
add
jmp
in
and
add
sub
sar
popf
add
loop
rol
popa
js
fwait
push
test
dec
adc
in
lea
xchg
adc
js
stos
cdq
dec
inc
retf
or
mov
dec
adc
bsr
into
arpl
loope
jo
call
stos
add
daa
add
les
hlt
sbb
lods
mov
cmp
xchg
mov
or
add
dec
pop
mov
fs
or
arpl
retf
lods
dec
or
test
adc
pop
fs
xor
mov
loopne
cmp
mov
pop
jge
stos
(bad)
mov
nop
ret
outs
xchg
cmp
dec
loopne
popa
mov
cmc
xor
push
shr
mov
aaa
loop
popa
jne
aaa
xchg
xor
cwde
nop
lea
push
sub
and
daa
sub
xchg
mov
push
jne
pop
(bad)
and
test
sbb
sbb
jno
leave
xor
inc
add
xor
add
pop
jmp
sbb
push
out
inc
xchg
and
ret
shl
mov
and
in
(bad)
stos
inc
cmp
cli
push
mov
mov
push
in
rcr
repnz
xchg
pop
mov
mov
inc
pop
nop
inc
xchg
push
cs
mov
movs
cmp
movs
add
sahf
jo
(bad)
sbb
lods
xor
sub
push
and
dec
adc
popa
mov
inc
rol
mov
cmp
jl
and
mov
pop
fs
pop
and
fs
dec
pop
mov
cmc
retf
inc
leave
dec
pop
jmp
jmp
xor
pusha
ficom
ins
in
jp
in
xor
test
jle
mov
jp
xchg
dec
mov
inc
sub
push
xchg
push
jne
shl
add
popa
jge
dec
pop
mov
cmp
js
pop
rcl
or
les
ror
jge
xor
rcr
shr
cmp
cmp
or
mov
shl
adc
dec
les
loopne
test
cmp
pop
mov
pop
imul
mov
or
xchg
or
cmp
jmp
hlt
rcr
in
and
shl
jg
(bad)
xor
xor
ss
sahf
or
adc
mov
pop
jb
mov
gs
dec
lahf
xchg
adc
out
mov
and
jo
or
ret
xor
sbb
imul
xchg
lds
fstp
xchg
test
shl
in
jne
jno
mov
pop
push
add
jp
retf
xchg
out
popa
mov
aaa
adc
sbb
outs
and
or
movs
das
out
fimul
loopne
arpl
sbb
and
scas
adc
popa
dec
fwait
xchg
test
add
pop
movs
in
xchg
jns
scas
add
nop
lds
fsub
ja
xchg
aad
add
call
sti
into
jno
mov
pop
ret
add
sub
sub
cmp
cmc
lock
mov
cmp
or
and
pop
fidiv
pushf
imul
aam
iret
addr16
fst
sbb
pop
mov
in
pop
jns
adc
daa
push
jecxz
adc
mov
sbb
push
popa
jno
(bad)
xchg
sbb
shl
jb
jbe
xchg
jo
pop
cmp
jae
xchg
jne
pop
fist
mov
popa
loopne
lock
je
ret
xor
fst
test
sub
sbb
popf
xchg
sbb
and
scas
loop
js
aad
xor
push
adc
inc
sbb
dec
test
je
dec
ins
out
dec
mov
lods
add
test
scas
jmp
nop
stos
xchg
push
inc
movs
dec
loop
add
pop
pop
mov
mov
aas
push
cmc
push
pusha
pusha
pusha
dec
int3
xor
pop
xchg
sbb
call
inc
fs
dec
xchg
repnz
(bad)
in
loopne
xchg
push
pop
cmp
dec
stc
sub
repz
cwde
test
xchg
fistp
test
jp
scas
push
sbb
popa
sub
or
ffreep
pop
fs
loope
sub
leave
ret
fdiv
add
ret
sar
and
in
or
sbb
push
xor
xchg
xor
cmps
fadd
nop
add
push
add
les
push
dec
and
jb
pop
jmp
rcr
add
push
ficom
ror
cmp
inc
js
jecxz
add
neg
cmp
mov
and
or
lock
adc
popa
push
inc
pushf
and
add
dec
push
mov
out
test
dec
aam
mov
add
arpl
adc
fidivr
js
inc
fisttp
mov
xor
inc
call
and
mov
popa
enter
pop
mov
xchg
dec
pop
pop
cmc
dec
mov
push
mov
jmp
adc
js
hlt
cmp
adc
leave
sbb
adc
(bad)
lock
mov
pop
mov
xchg
xchg
and
xchg
leave
loopne
mov
mov
and
cli
fnstenv
(bad)
pusha
or
or
hlt
or
cmc
jb
mov
das
xchg
and
enter
shl
pushf
sbb
jg
dec
fstp
sbb
adc
and
je
jo
sbb
fsubr
adc
movs
and
sahf
add
hlt
fisubr
popa
pop
push
mov
cmps
pop
jp
mov
cmp
jnp
adc
adc
xchg
mov
icebp
aad
rol
push
mov
fstp
cmp
sti
push
ret
inc
shl
add
into
test
retf
jae
mov
sub
jmp
pop
mov
mov
rcr
cmp
lods
aam
dec
dec
adc
mov
pusha
aaa
jb
push
das
movs
cmc
push
retf
shl
rcl
sub
fcomp
ins
sub
imul
sbb
rol
inc
scas
aaa
dec
nop
dec
lock
sbb
cld
retf
lea
test
cmps
pusha
ins
cvtss2si
enter
scas
and
popa
mov
cmps
xchg
push
and
cmp
int3
icebp
ficom
int3
retf
or
cs
call
jne
sbb
pop
ret
paddusw
jo
xchg
and
sbb
sbb
aad
add
retf
call
sbb
shl
cmps
in
popa
mov
lods
and
jno
or
push
cmp
aaa
mov
mov
es
adc
xchg
push
push
xor
adc
lods
xor
and
push
mov
or
lea
js
into
and
daa
daa
jae
or
shl
imul
xor
arpl
enter
jmp
test
push
repnz
jno
pop
les
int
outs
or
xchg
adc
dec
js
lods
(bad)
pop
mov
fdiv
and
and
icebp
(bad)
test
lock
dec
jmp
in
inc
aam
push
or
gs
in
inc
cmc
stos
rcl
lods
adc
fwait
xor
(bad)
(bad)
clc
sub
loop
xor
dec
popf
and
or
sti
stc
dec
dec
pop
pop
cmp
mov
sub
enter
xchg
push
mov
repnz
fs
jb
movs
ins
sbb
mov
aam
push
ret
and
mov
pushf
mov
mov
sbb
cwde
je
add
les
mov
mov
rcl
mov
leave
adc
or
or
xchg
mov
sti
icebp
cwde
test
and
ret
aad
mov
sbb
sbb
push
mov
lea
adc
sar
add
push
jo
add
into
mov
aam
gs
(bad)
pop
and
ja
sbb
mov
and
fisttp
add
pushf
outs
mov
sbb
push
shr
mov
mov
and
in
push
push
jb
bswap
or
fidiv
adc
cmp
or
cmps
mov
ret
pop
adc
mov
popf
jmp
out
(bad)
cmp
inc
or
push
shl
sti
push
pop
dec
inc
and
cdq
lock
sbb
sti
sbb
popa
(bad)
cmp
push
xor
and
dec
cmp
inc
leave
and
sub
mov
or
cwde
xor
add
cmp
stos
xchg
ins
ds
inc
or
xor
push
push
add
jb
mov
aas
adc
or
adc
jb
call
ja
jp
and
daa
je
cmp
cmc
pop
stos
xchg
xchg
push
ins
cli
sub
aam
xchg
add
xor
inc
bound
arpl
and
xchg
cmp
add
ret
sbb
test
in
sbb
pop
xchg
test
ror
xor
mov
test
(bad)
mov
cmp
daa
ret
mov
loopne
or
(bad)
adc
imul
pop
xor
retf
mov
retf
sbb
pop
pop
loopne
rcr
xchg
and
jmp
(bad)
in
xor
inc
pop
daa
dec
es
xor
sar
xor
loop
fwait
out
xor
jmp
cmp
sub
shr
pusha
jne
cmps
pusha
loope
xchg
xchg
jno
sub
xchg
jno
and
repnz
add
adc
imul
test
xchg
lds
or
out
sub
push
pusha
loopne
inc
fld
dec
pop
sbb
call
xor
jne
rcr
leave
arpl
aas
ror
sub
xchg
push
xchg
mulps
jmp
xor
dec
test
adc
inc
pop
sbb
out
adc
(bad)
or
jb
test
mov
sbb
xchg
or
test
or
pusha
pop
pusha
or
push
push
xchg
fstp
add
mov
dec
in
movs
or
jae
push
into
fidiv
stos
mov
pop
push
push
sbb
fwait
nop
jge
pop
cwde
sub
and
or
adc
pop
push
adc
add
and
fnstenv
xchg
jae
push
mov
test
inc
arpl
scas
mov
js
enter
xchg
xchg
mov
jo
shr
scas
sub
jb
rcl
retf
xchg
fsub
dec
fsubr
std
mov
pop
push
or
into
ret
adc
ffree
add
xor
(bad)
fisttp
xor
ret
shr
jo
sti
or
sbb
out
xor
xor
daa
mov
aaa
in
xor
mov
xor
ror
mov
mov
push
sub
and
inc
add
push
adc
push
div
inc
sub
push
and
jne
or
movs
mov
arpl
ja
cmp
call
push
cli
bound
jp
(bad)
adc
inc
fst
cli
ret
ror
and
in
(bad)
mov
imul
mov
es
jb
scas
mov
inc
or
fimul
rol
sbb
mov
jmp
sbb
movs
cmp
out
in
loope
jne
add
jecxz
fild
inc
rep
out
sub
aad
push
adc
push
add
push
adc
mov
push
pop
leave
sbb
or
fbld
sar
rcr
sub
sub
mov
jae
sbb
jl
mov
pop
add
adc
lea
sbb
sti
call
inc
or
cmp
into
shl
xchg
add
mov
xchg
ins
mul
mov
mov
xchg
cmc
in
repz
xor
popf
ss
rcl
bound
imul
outs
pusha
mov
stos
sub
aad
dec
cmp
add
xor
leave
outs
add
sub
sub
push
jmp
not
add
mov
fcmovnb
ret
jge
dec
inc
or
cmp
xchg
pop
adc
xchg
cmp
pop
fld
aam
lock
mov
sahf
sbb
xor
push
jle
or
sahf
and
or
xor
adc
arpl
mov
mov
imul
push
pop
js
xchg
cs
test
push
pop
les
mov
sub
dec
loop
mov
sub
stc
sbb
sbb
movs
xchg
mov
int
sbb
cmp
stos
icebp
pop
push
daa
add
xchg
ret
pop
mov
call
aaa
movs
add
adc
xor
cmp
jmp
jmpw
ret
retf
or
shl
push
cwde
push
jbe
retf
ret
jmp
out
xor
or
scas
dec
arpl
enter
and
cmc
inc
or
push
xor
and
bound
jle
adc
mov
dec
bnd
cmp
outs
pop
pop
je
es
pushf
dec
aam
ins
jmp
imul
or
movs
push
push
jne
dec
outs
push
retf
sbb
pop
(bad)
icebp
add
pop
sub
and
lock
rcl
cmp
mov
mov
fistp
adc
(bad)
or
pop
sbb
pop
inc
pop
scas
fmul
into
rcr
dec
addr16
mov
inc
mov
cmp
scas
int3
xor
inc
pop
test
or
add
sbb
outs
outs
lock
pop
and
jg
push
xor
ins
push
retf
ror
ins
pop
sbb
jns
dec
jns
es
push
outs
loopne
in
popa
push
and
sub
jo
sbb
sbb
mov
js
neg
and
sub
sub
mov
cmp
or
imul
push
xor
mov
jp
lock
nop
inc
sub
mov
push
je
(bad)
jne
rcl
sub
and
cmp
sar
cmp
scas
stos
pushf
bound
mov
mov
inc
retf
cmps
retf
call
push
imul
inc
push
lods
add
and
test
mov
cmp
sbb
inc
imul
sbb
add
in
in
and
outs
pop
push
mov
sbb
add
jl
pop
ret
iret
(bad)
jmp
loopne
jno
(bad)
call
inc
outs
cmc
and
fisubr
fnstsw
sbb
into
pop
adc
sub
ja
dec
sub
mov
ds
out
into
or
mov
xor
sub
scas
mov
jl
rcr
pop
test
sbb
lea
and
shl
and
xor
pop
push
pop
ret
and
leave
popf
add
scas
sub
mov
aas
inc
into
imul
adc
push
mov
loope
xchg
movs
dec
pop
pop
jp
or
(bad)
mov
cmp
pop
stos
aaa
or
jnp
mov
push
sbb
inc
cmc
rcr
pop
repz
inc
call
inc
xchg
mov
jb
sub
push
mov
and
mov
mov
push
mov
cmp
enter
leave
cmp
push
and
and
popf
sub
loope
movs
retf
test
cmp
sahf
retf
pushf
sub
push
add
cmp
mov
rol
stc
lods
mov
mov
aaa
and
push
adc
and
sub
and
push
sbb
imul
loop
iret
or
(bad)
retf
test
inc
in
jo
inc
ret
jmp
add
xor
ret
mov
cmp
sbb
jb
inc
scas
mov
push
mov
xchg
xchg
lock
adc
mov
clc
push
xor
in
add
int3
mov
lea
outs
sbb
mov
retf
inc
loop
aam
pop
inc
sbb
cmp
adc
jmp
ss
loop
cmp
xor
je
dec
iret
into
stos
test
push
mov
and
xor
leave
out
sbb
shl
arpl
fdivr
js
out
daa
stos
popa
(bad)
(bad)
sub
cmp
retf
test
lahf
shl
sub
(bad)
outs
mov
sahf
mov
mov
xchg
adc
test
retf
inc
push
dec
movs
inc
lds
popa
lods
inc
push
and
rol
or
shl
(bad)
js
sbb
cmp
movs
daa
xor
and
pusha
dec
and
mov
sbb
daa
dec
xchg
jb
jno
out
scas
inc
xchg
scas
pop
cmp
cmp
imul
mov
dec
out
imul
pusha
mov
outs
sbb
(bad)
(bad)
in
and
pop
and
adc
fbld
mov
or
mov
sar
stos
je
xor
push
mov
mov
pusha
jmp
cld
pop
int3
ret
pop
cld
outs
fistp
sbb
or
lods
sub
js
xor
adc
leave
sbb
ins
call
mov
(bad)
shr
pop
or
fwait
hlt
or
push
in
jecxz
nop
fnsave
cmc
adc
lock
pop
stos
mov
aam
lds
mov
sbb
pusha
ret
(bad)
out
loopne
pop
fld
loop
cmc
or
imul
lock
adc
sar
sbb
pushf
inc
out
fcom
or
retf
shl
rol
pop
push
xchg
lds
sbb
xchg
je
rcr
push
push
and
js
rol
and
gs
add
or
jae
inc
and
push
scas
add
push
ja
(bad)
call
lahf
call
or
or
jo
retf
push
push
addr16
sbb
movs
mov
and
aad
xor
dec
ins
or
rol
sahf
in
outs
or
mov
movs
xor
jo
(bad)
pop
sbb
sub
xchg
sub
add
(bad)
mov
jmp
inc
dec
loopne
push
iret
cwde
adc
icebp
ins
rcr
pop
mov
or
jp
(bad)
or
mov
jno
add
sahf
repnz
(bad)
js
mov
outs
enter
sbb
cmp
jmp
push
mov
enter
dec
cdq
pop
or
cmp
neg
xchg
into
lds
adc
add
dec
sub
jo
jbe
add
mov
ror
mov
sbb
xor
iret
scas
sub
sbb
jne
(bad)
mov
pop
xor
call
mov
dec
inc
pop
inc
xor
scas
mov
xchg
daa
mov
push
mov
retf
jp
push
push
and
leave
pop
adc
push
ja
dec
mov
retf
int3
xor
jne
jmp
cmps
(bad)
xor
pop
imul
je
cli
ja
fist
and
pop
or
mov
inc
hlt
pop
enter
xlat
sar
das
loop
add
and
popf
sbb
sbb
es
cmp
out
mov
push
pusha
cmp
xchg
nop
or
inc
lods
sbb
xchg
jo
sub
imul
leave
std
mov
add
or
adc
gs
mov
push
cmp
in
add
xchg
dec
xchg
fnstcw
jno
xchg
je
xchg
addr16
and
xchg
(bad)
test
(bad)
test
mov
or
out
rol
pop
out
fwait
adc
sbb
mov
arpl
mov
repnz
in
pusha
jmp
pop
int
sar
mov
lahf
retf
xchg
sbb
enter
cmc
dec
add
pop
loope
pop
lods
clc
jns
sub
nop
adc
rcl
mov
push
aam
inc
jns
mov
jnp
repnz
ja
mov
lahf
add
psubsw
pop
adc
(bad)
sbb
or
ret
fnstsw
or
js
imul
pop
push
mov
daa
outs
pop
cmps
cmps
dec
xchg
and
jo
adc
pop
fsubr
push
push
in
adc
rcr
(bad)
(bad)
or
test
ret
push
push
jmp
scas
inc
fmul
add
mov
test
mov
in
xchg
fadd
mov
cmp
lods
sub
lods
(bad)
int3
outs
mov
ret
adc
cmp
xchg
sub
in
and
add
into
leave
repnz
jno
jo
pop
xchg
dec
sbb
popa
pop
jl
sbb
or
push
ret
int
mov
push
xchg
(bad)
imul
cmp
mov
jmp
mov
test
inc
sbb
fidivr
repz
ror
xor
je
push
not
(bad)
loopne
mov
cwde
jg
sbb
ja
dec
aad
ret
jo
xchg
push
test
pop
dec
sar
int
adc
dec
sbb
js
loope
mov
and
or
inc
mov
cmp
jae
jne
idiv
pop
loop
(bad)
add
pop
jb
movs
xchg
xor
aam
mov
sar
cmc
mov
xchg
inc
push
inc
cmp
xchg
xlat
push
push
out
sbb
loop
xchg
sbb
ss
mov
lds
add
sub
mov
push
push
dec
add
in
add
pop
xchg
push
int
ins
or
scas
mov
dec
adc
jl
xlat
push
dec
ss
and
push
xchg
aaa
mov
mov
push
add
mov
shr
mov
pusha
mov
movhps
daa
or
int3
cs
jne
(bad)
cmp
setl
rcr
mov
jmp
push
or
and
clc
xor
adc
pop
cmp
pop
add
inc
cdq
fcomp
push
mov
xor
je
into
jecxz
mov
sub
add
or
imul
sti
dec
sbb
and
cmp
jo
fstp
add
sbb
fdivr
sbb
xor
and
mov
daa
data16
(bad)
fidivr
xor
dec
inc
mov
fisubr
add
addr16
jnp
dec
xor
lods
xor
pop
iret
xchg
mov
jecxz
inc
sub
sbb
arpl
out
dec
add
jle
push
ja
sbb
fisttp
imul
mov
pop
cdq
cmp
into
cmp
xlat
jo
xchg
xor
jo
fld
gs
loop
push
ret
lock
add
pusha
(bad)
fnstenv
xor
mov
xchg
ja
jmp
sbb
adc
mov
add
cmc
daa
dec
fild
adc
xor
add
cmp
(bad)
add
xor
pop
dec
aaa
js
xchg
js
or
ins
loopne
inc
or
inc
rol
out
aaa
push
pop
lock
push
add
pushf
jo
and
leave
ret
mov
in
jb
test
jmp
pop
in
iret
mov
and
push
outs
sbb
imul
cmps
(bad)
rol
neg
mov
mov
dec
(bad)
arpl
adc
fsub
add
mov
mov
jmp
add
mov
retf
pop
pushf
mov
pop
or
or
pop
mov
pop
sbb
fdivr
xchg
hlt
ins
jmp
mov
dec
not
mov
jo
ret
or
(bad)
pop
cmps
pminsw
gs
sub
outs
and
test
pop
stos
aad
ror
js
add
fisubr
push
push
dec
sub
push
(bad)
outs
in
jne
lods
mov
add
add
sub
(bad)
xchg
(bad)
adc
je
movs
cmps
popa
mov
call
retf
add
mov
lods
lds
jmp
pusha
or
(bad)
(bad)
mov
xchg
xor
inc
push
inc
stos
push
icebp
adc
iret
inc
imul
je
mov
mov
and
les
in
xchg
pushf
adc
jmp
in
movs
adc
rcr
sbb
clc
movs
daa
pushf
sbb
cs
cmp
jno
add
test
xchg
xor
xchg
adc
jp
gs
ret
sbb
dec
inc
test
mov
mov
addr16
inc
pop
inc
imul
cld
nop
daa
stos
add
lock
ja
jecxz
mov
and
xlat
jb
adc
or
adc
enter
sbb
or
mov
imul
or
jno
pop
xchg
addr16
adc
jecxz
int
aaa
push
adc
dec
xchg
cmp
imul
and
test
sbb
dec
mov
adc
rol
add
out
push
sbb
add
xor
xor
sub
ret
cs
ret
push
ja
pop
mov
pop
dec
mov
dec
cmp
adc
in
mov
xchg
stc
ins
enter
xchg
test
mov
push
into
mov
and
cmp
or
aaa
xchg
out
pop
add
pushf
fild
xchg
into
cmp
mov
add
jmp
dec
sbb
rcl
jb
sub
xlat
push
xlat
xchg
(bad)
sbb
mov
retf
(bad)
dec
adc
ret
pop
or
inc
push
js
mov
cmp
test
shl
pop
mov
outs
ret
pop
shr
into
cmp
inc
bound
pop
movs
(bad)
sti
pop
fld
popf
pop
xchg
pushf
sahf
rcl
sbb
(bad)
sbb
arpl
mov
inc
loope
xchg
popa
aaa
or
xchg
add
mov
cmp
test
push
movs
or
xor
cmp
das
sbb
dec
add
mov
inc
outs
loope
(bad)
jg
enter
jge
jge
leave
xchg
pop
inc
daa
or
cmp
cmp
loopne
cmp
rcr
in
or
enter
xchg
mov
or
daa
stos
outs
and
mov
outs
movs
mov
jp
push
pop
and
je
mov
mov
jo
loop
xlat
test
push
mov
loope
test
sbb
leavew
jae
daa
in
je
cdq
and
in
aam
(bad)
repnz
arpl
ret
into
push
(bad)
adc
retf
push
mov
pop
adc
das
and
shr
jl
mov
cmp
sbb
addr16
cmp
lea
xor
and
jb
jnp
jmp
or
addr16
xchg
jno
sbb
fild
(bad)
xchg
ror
test
pushf
hlt
push
aad
lock
aad
push
sbb
pop
sar
push
mov
add
pop
aad
adc
ret
(bad)
xor
mov
mov
test
dec
xchg
loop
movs
inc
cmps
inc
sub
inc
shl
jne
inc
xlat
xchg
sbb
xchg
mov
loope
sub
lock
dec
sbb
data16
fidiv
adc
(bad)
lahf
rol
sub
pop
cwde
adc
lahf
rol
ja
inc
push
retf
lods
jne
mov
sbb
dec
cmp
dec
push
or
and
retf
aaa
and
and
das
inc
fisttp
lock
xchg
cmp
cmp
add
add
mov
ins
loope
mov
dec
dec
push
in
movs
mov
ret
loope
xor
(bad)
rcl
sub
mov
pop
outs
push
rol
rol
mov
neg
loope
and
inc
mov
pop
mov
jmp
mov
cmp
ja
sub
push
or
sub
mov
sub
es
pop
fsubr
stos
adc
cmp
dec
push
and
fcomp
push
and
and
mov
mov
outs
or
lods
cmp
and
inc
mov
lds
ins
add
aam
loopne
dec
pusha
mov
xchg
jo
ins
div
lods
xchg
in
and
dec
popf
rol
mov
inc
jns
imul
outs
xchg
ja
loope
and
lahf
dec
inc
pop
or
mov
or
and
inc
pop
xor
push
cdq
mov
sbb
dec
jnp
mov
mov
daa
ror
nop
mov
shl
neg
shr
imul
inc
xchg
mov
mov
pop
inc
loopne
fucomp
(bad)
mov
xor
mov
ds
mov
inc
loope
shl
sbb
sub
mov
retf
and
mov
inc
sbb
add
pop
push
imul
lea
sahf
mov
ret
pop
mov
xor
daa
mov
cmps
gs
mov
dec
jnp
cmps
inc
out
or
pusha
jno
fstp
sub
out
xor
or
mov
loope
js
cmp
pop
sub
not
sahf
xchg
mov
arpl
sub
(bad)
pop
sar
mov
fscale
(bad)
imul
mov
inc
(bad)
inc
cmps
or
mov
dec
out
push
lahf
dec
mov
xchg
hlt
and
int3
pop
out
sub
and
das
dec
cmp
movs
pause
pop
and
icebp
mov
inc
dec
push
addr16
das
rcr
fild
inc
shl
dec
jbe
enter
les
in
imul
pop
inc
xchg
(bad)
and
add
adc
icebp
imul
movs
and
repz
dec
loopne
pop
cmp
sbb
sbb
scas
mov
mov
adc
(bad)
cs
fisttp
nop
pop
ja
push
sbb
stc
lods
(bad)
jp
loopne
rcl
mov
rcr
and
popa
test
dec
rol
mov
jbe
jne
sbb
jp
dec
lods
push
in
ret
mov
adc
mov
emms
xor
ins
pop
pop
(bad)
mov
fisubr
dec
pop
add
clc
test
ins
sbb
jmp
push
cmp
xchg
sbb
int3
or
sahf
loope
fadd
cmp
pop
mov
enter
xor
int
ins
pop
ja
es
in
pop
retf
repnz
outs
fistp
dec
(bad)
enter
mov
or
pop
cld
ret
cmp
xor
xchg
gs
aaa
or
xor
js
nop/reserved
jb
rcr
icebp
repz
mov
popf
(bad)
cmp
jmp
add
cmp
inc
xchg
rol
adc
xor
cmp
test
xlat
jns
out
test
mov
imul
dec
cmp
push
pop
retf
ror
stos
outs
(bad)
adc
xchg
jo
mov
xchg
fcmovnb
popf
jl
ret
rol
and
cmp
sub
xor
xchg
(bad)
int3
ja
xor
cmps
add
push
add
jo
or
pop
or
jl
ins
enter
jnp
push
add
push
push
bound
xor
adc
and
call
pushf
sbb
sbb
push
and
test
inc
scas
pop
dec
fild
jns
pushf
push
mov
jo
(bad)
lods
mov
mov
imul
mov
dec
add
shl
inc
fistp
and
in
movs
adc
mov
mov
movs
adc
xor
jnp
push
ins
rol
inc
cmp
daa
shl
cmp
repnz
pop
pop
call
pop
adc
sub
sbb
mov
lock
adc
mov
xor
add
add
sbb
adc
out
ss
sar
push
xor
repz
inc
jb
(bad)
fistp
or
in
sbb
ja
fwait
sub
dec
adc
cmp
xor
push
mov
inc
or
loop
ins
mov
or
out
loopne
loope
mov
adc
dec
lea
pushf
jmp
cmps
fs
fsubr
sbb
mov
lahf
add
adc
dec
imul
jb
or
or
pushf
test
rcr
popf
test
fadd
or
ret
popf
test
mov
jp
adc
inc
sbb
mov
push
into
aaa
cli
xor
(bad)
mov
in
sub
dec
jp
lods
sub
movs
outs
adc
and
cmps
out
in
loopne
movs
and
repnz
rcr
sbb
jno
or
xchg
imul
aam
dec
add
cmp
sbb
js
or
adc
enter
out
in
or
jb
sbb
push
push
rol
dec
sbb
mov
rol
int3
int
mov
cmp
rcl
sbb
lods
mov
xchg
jnp
or
test
and
sbb
in
aad
(bad)
mov
retf
push
call
fucomip
stc
stos
or
popa
ja
jbe
jns
fsubr
cmp
test
pop
xor
xchg
sub
add
sbb
clc
popf
(bad)
sbb
retf
sar
lods
pushf
movs
adc
icebp
scas
test
and
push
pop
sbb
jb
add
xchg
mov
sbb
xchg
(bad)
jmp
or
gs
inc
retf
xor
push
movs
enter
test
cmp
inc
xchg
lds
cmp
jno
js
jne
inc
adc
fs
push
arpl
or
dec
cmp
js
sub
adc
shl
push
rol
(bad)
add
jo
or
add
imul
dec
xchg
scas
sbb
cmp
inc
addr16
pop
and
xchg
pop
lock
retf
idiv
pop
or
xor
adc
inc
(bad)
idiv
xchg
jno
js
jp
aad
outs
mov
aam
xor
jns
sbb
loopne
(bad)
and
and
push
xlat
adc
ss
xchg
loop
jno
add
scas
or
pop
mov
ins
loop
cmp
mov
push
mov
mov
(bad)
adc
mov
data16
fs
jmp
xchg
mov
arpl
and
adc
or
cmp
pop
dec
js
test
xbegin
pop
mov
jo
add
or
sbb
mov
dec
and
js
(bad)
aad
jne
mov
dec
in
sbb
sub
push
jbe
inc
jnp
xor
inc
mov
push
push
test
scas
shl
adc
sti
and
daa
cmps
pop
cmps
ret
jns
pusha
ins
mov
add
xchg
dec
std
loop
push
add
icebp
sub
xor
fsub
ds
enter
fstp
sub
push
sbb
pop
mul
js
icebp
nop
pop
or
push
xchg
push
add
push
(bad)
js
add
jmp
lds
daa
leave
and
int3
retf
fxch
jne
fst
sbb
test
xchg
pop
or
dec
mov
jno
loopne
push
test
push
into
nop
jge
int
test
add
sbb
mov
cmps
arpl
cmp
paddusw
lods
loop
xor
push
cmp
in
aas
jae
dec
sub
cmp
ret
sub
and
adc
mov
xchg
(bad)
data16
pusha
fld
xlat
clc
mov
(bad)
aad
jp
loope
cmp
sti
mov
daa
mov
mov
retf
adc
inc
push
into
clc
and
xchg
jp
mov
add
xlat
loopne
lods
(bad)
adc
in
cmp
xor
dec
dec
retf
sbb
pop
into
out
mov
scas
fwait
cmp
cmp
sbb
dec
cmp
cs
lock
mov
push
ret
into
mov
and
sbb
mov
inc
mov
mov
movs
scas
adc
and
sbb
hlt
test
push
test
push
(bad)
adc
mov
mov
cmp
js
js
sbb
cmp
sub
jnp
cdq
or
mov
jo
sbb
jb
push
xor
adc
stos
dec
pop
cld
icebp
xor
add
sub
stos
nop
add
pop
movs
jno
jne
and
mov
enter
adc
cdq
sbb
xor
adc
push
push
cli
movs
jge
sbb
call
sub
xor
sti
jne
adc
cld
popf
data16
mov
mov
repz
sbb
movs
dec
les
dec
lods
dec
pminsw
mov
idiv
inc
push
sbb
xor
pop
adc
repnz
or
push
ins
fst
aam
jo
bound
jp
ror
fstp
pop
sahf
ret
imul
sub
pop
cs
loope
sbb
jo
(bad)
push
daa
loop
xchg
push
inc
push
shl
(bad)
out
jno
cli
mov
cmp
call
ficomp
xor
ficom
jecxz
mov
fcomp
add
sbb
mov
popf
mov
addr16
nop
ret
in
mov
mov
adc
daa
or
mov
data16
xchg
fld
xchg
stos
mov
inc
sbb
out
imul
repz
enter
test
and
push
or
fistp
adc
jmp
imul
and
add
inc
fdivr
fmul
loopne
inc
loop
es
jmp
test
retf
or
les
dec
addr16
inc
aaa
add
pop
lock
arpl
push
push
jge
ins
jecxz
add
xchg
inc
dec
aas
movs
(bad)
in
enter
dec
(bad)
fdiv
daa
call
pop
test
pop
cmp
das
mov
push
cmc
rol
sub
and
pop
xchg
xlat
inc
test
mov
adc
lods
je
retf
stos
push
retf
lock
mov
xlat
loope
es
neg
outs
pusha
sbb
lods
xchg
cmc
paddusb
xor
mov
mov
(bad)
loope
xchg
pop
ins
ss
mov
add
push
pop
or
cs
mov
dec
sub
dec
lahf
les
(bad)
push
ret
inc
fadd
dec
xchg
adc
(bad)
leave
fst
int
pop
adc
sub
aad
fdiv
inc
add
pop
jno
loopne
ret
call
add
mov
shr
ret
pop
mov
cmps
mov
cmp
dec
sub
lea
js
ja
push
sar
ror
or
jae
retf
and
pop
adc
scas
sbb
bound
test
mov
pusha
je
gs
or
sub
imul
ds
arpl
mov
in
retf
push
pop
mov
push
xchg
pop
push
mov
xchg
(bad)
cmp
mov
dec
inc
fnstsw
mov
sbb
outs
and
mov
loop
sbb
inc
xor
sub
mov
sahf
and
in
daa
outs
dec
repnz
cmp
jne
mov
cmp
mov
xchg
xchg
mov
mov
or
or
ret
pop
stos
mov
inc
sbb
pushf
cmc
dec
mov
mov
das
loopne
mov
pop
mov
fadd
mov
add
dec
or
cmp
rol
cmp
cmps
popa
sbb
xor
inc
cmp
push
lea
jmp
mov
mov
or
out
out
jns
aaa
sbb
mov
rol
retf
push
inc
xchg
loope
shl
leave
out
jb
fldl2t
xor
push
ins
and
and
dec
push
push
xchg
or
cmc
add
in
ins
sbb
(bad)
or
sub
cmp
rol
jmp
inc
jns
mov
jno
iret
icebp
cmp
mov
adc
(bad)
xor
leave
or
and
imul
pop
sbb
into
cmp
or
inc
cs
addr16
addr16
movs
mov
dec
jle
pop
push
outs
or
aaa
xchg
rol
outs
sahf
mov
mov
addr16
clc
adc
jno
sub
mov
adc
ret
rcr
out
in
dec
xchg
dec
popf
ins
ja
pop
jp
mov
cs
add
arpl
into
enter
inc
or
icebp
pop
retf
dec
jne
call
jmp
addr16
aad
pop
in
stos
and
push
xor
jmp
xchg
mov
movs
ins
inc
inc
jmp
cmp
scas
ret
push
mov
lea
out
xchg
ss
push
sbb
bound
add
lods
jmp
pop
or
or
iret
push
or
cmc
dec
sbb
popa
dec
leave
pop
or
sar
add
mov
mov
jl
hlt
ins
fstp
and
cmp
sub
enter
cmps
nop
or
int3
pop
jmp
xchg
sbb
mov
repz
(bad)
enter
mov
xchg
movs
aaa
push
cmp
pop
frstor
enter
lods
xchg
mov
jp
fwait
mov
push
ret
gs
mov
jns
mov
pop
test
stos
pushf
sti
int3
arpl
xchg
add
sbb
icebp
cmps
mov
(bad)
retf
pop
inc
pop
pop
das
cmps
inc
jb
sahf
mov
mov
push
sub
cmp
adc
cmp
pop
arpl
xchg
and
icebp
inc
retf
sbb
lods
out
repz
(bad)
cmp
call
jecxz
cmp
mov
loop
mov
sbb
ret
loope
sbb
imul
dec
cmp
loop
scas
arpl
or
lods
mov
pop
cmp
lea
xchg
add
mov
dec
push
jge
sbb
gs
je
sbb
mov
mov
jae
cs
movs
lea
mov
add
sub
int3
(bad)
xlat
xor
or
addr16
or
xor
mov
mov
push
test
push
loope
pushf
in
xchg
add
jge
sub
push
into
mov
(bad)
lds
dec
imul
jno
xchg
push
push
cli
mov
push
xor
xchg
(bad)
stos
xchg
pop
push
lock
sub
or
lods
and
push
jmpw
lods
xor
jno
sbb
jmp
push
cmp
imul
out
ja
or
sbb
inc
sbb
mov
dec
bound
pop
xor
pushf
pop
jg
push
ret
pop
out
hlt
sar
dec
pop
jb
rol
push
(bad)
retf
lea
jp
bound
jp
push
push
xchg
adc
and
pop
sub
xchg
jmp
test
push
push
lahf
xchg
jno
lods
mov
daa
and
pop
pop
inc
fimul
pusha
jmp
arpl
and
popa
dec
shl
mov
add
push
mov
addr16
clc
in
and
mov
xchg
iret
test
imul
sbb
in
int
add
xor
sbb
mov
push
adc
cmp
xor
(bad)
inc
add
sub
pop
sub
sub
or
daa
inc
push
aaa
lock
push
out
mov
lods
cmp
dec
loope
out
mov
sub
leave
enter
pop
outs
adc
addr16
add
loopne
push
dec
pop
sub
and
jmp
mov
add
jmp
dec
cmovnp
in
mov
add
shl
movs
inc
call
loopne
fstp
mov
sub
dec
imul
fs
sub
sar
inc
inc
dec
js
loopne
mov
sub
pop
jecxz
mov
call
adc
sub
and
fs
imul
xchg
push
and
shl
je
loope
sbb
js
inc
lods
jnp
inc
and
setp
push
fld
into
retf
ret
pop
add
nop
xor
and
fldenv
xchg
jp
sbb
push
inc
adc
repz
fdivr
fdivr
pop
push
mov
dec
mov
dec
sahf
jo
or
mov
cmp
and
add
das
inc
addr16
stos
or
push
pop
xchg
push
sahf
mov
mov
xchg
or
push
jnp
cs
dec
xchg
cmp
movs
push
push
movaps
mov
jbe
sub
loopne
and
pushf
in
jecxz
in
jle
ficom
and
(bad)
int3
push
xor
test
dec
mov
jp
push
pop
push
xchg
mov
into
xchg
inc
push
sbb
jnp
scas
and
mov
(bad)
shl
xchg
pushf
dec
ins
jmp
(bad)
loop
jle
jb
dec
inc
fstp
fs
cmp
mov
jo
sbb
mov
clc
jmp
(bad)
ds
cmp
and
sub
sbb
jmp
fcom
sub
xchg
cmp
add
jmp
mov
push
pop
mov
jnp
dec
(bad)
(bad)
adc
mov
jb
lods
sub
cmp
rol
sub
sbb
add
retf
test
sbb
in
xchg
push
aaa
sahf
mov
pop
outs
pop
popa
(bad)
sbb
fdivp
cmp
mov
nop
int
push
dec
iret
repz
push
out
mov
inc
push
xchg
icebp
dec
lods
xor
les
icebp
jo
addr16
add
retf
xlat
jno
jo
adc
xchg
jno
cmc
outs
js
mov
loop
xchg
inc
xchg
out
lock
hlt
or
mov
add
je
dec
push
inc
adc
js
xlat
xchg
je
sub
sahf
repnz
cmps
pop
pop
aam
popa
or
pop
hlt
dec
loop
or
out
inc
out
fadd
sti
icebp
bound
call
sub
push
pop
mov
pusha
mov
inc
loope
xor
xor
in
ss
hlt
xchg
test
or
lock
addr16
pop
xchg
(bad)
mov
addr16
aam
and
sar
hlt
and
xchg
and
das
sbb
ror
cmp
add
shl
xor
movntps
loop
inc
cmp
adc
add
xchg
dec
jl
lea
movs
mov
ret
and
test
rcl
jle
ror
pop
arpl
jge
popf
movs
dec
loope
fcom
js
xor
adc
xor
cmp
adc
and
inc
cmc
aas
sub
scas
pop
or
pushf
out
mov
sahf
dec
sbb
pop
sbb
lea
jbe
enter
les
aam
mov
xor
mov
dec
dec
aam
mov
mov
push
test
scas
add
pop
adc
test
das
jbe
hlt
or
rcl
dec
mov
jge
xor
or
je
jns
ins
retf
sub
mov
lods
dec
cmp
stc
jp
(bad)
adc
outs
sbb
cmp
cmc
jno
sub
jp
test
dec
xor
push
in
mov
add
xchg
(bad)
daa
loop
and
cli
mov
push
test
sbb
xchg
jns
mov
fadd
push
enter
xor
test
and
sbb
fcomp
or
adc
ud2
or
pop
enter
pop
fmul
fs
pusha
or
adc
mov
mov
cmp
shr
ror
std
fwait
jno
jecxz
and
sub
inc
call
lfs
ret
test
jp
cmps
fidivr
dec
xlat
pop
mulps
ja
lea
aaa
xor
hlt
add
pop
pop
add
and
mov
sbb
cmp
xor
dec
cmps
sbb
sbb
in
push
rcr
sbb
mov
push
gs
jecxz
neg
in
enter
rcr
cmp
jge
adc
and
jl
adc
rcl
cmp
dec
cmp
and
fld
jmp
dec
clc
nop
or
shr
fistp
inc
jge
cs
mov
xchg
cmps
ficom
out
and
dec
inc
inc
rol
stos
pop
sub
call
dec
sub
popf
mov
cmp
nop
stos
and
or
mov
jecxz
and
push
push
je
and
xor
in
sbb
je
stos
and
imul
inc
test
and
call
mov
fmul
popa
jmp
mov
fwait
sbb
adc
(bad)
leave
add
ins
js
push
(bad)
sbb
push
and
popa
mov
add
xchg
sbb
popf
ret
inc
sbb
loopne
inc
push
jge
rcr
pushf
xor
push
jg
push
add
js
stc
cmc
stos
mov
push
push
lea
mov
jo
dec
dec
sub
(bad)
loope
into
fcom
fidiv
and
inc
pop
xchg
rcr
mov
out
pushf
add
ror
or
add
mov
or
loopne
sub
daa
ret
xchg
inc
mov
sub
sub
xor
jno
xor
add
nop
test
add
cmp
sub
and
xchg
into
inc
pop
mov
pop
(bad)
daa
nop
lock
retf
aam
(bad)
loopne
scas
xor
in
cmc
sbb
and
push
fsub
sbb
cmp
sub
call
pop
pushf
div
gs
mov
jo
pop
mov
push
add
sbb
dec
loope
stos
jl
add
retf
int
lock
fnstsw
sub
jmp
je
daa
sub
popa
call
movs
ret
test
jecxz
jno
xor
mov
retf
cs
mov
push
outs
push
lods
xor
dec
xchg
ins
jle
pop
cmps
inc
jmp
sbb
xchg
lsl
xor
rol
test
mov
retf
mul
dec
(bad)
(bad)
jbe
pop
imul
or
jge
xchg
cwde
lods
icebp
push
xor
mov
push
mov
retf
pushf
mov
jno
jns
mov
cmp
or
or
adc
fwait
sub
jbe
mov
xchg
pop
push
or
or
or
stos
iret
neg
inc
mov
dec
adc
inc
leave
jns
pop
mov
mov
icebp
sbb
mov
pusha
pop
dec
sahf
movs
adc
hlt
mov
add
xor
cmp
cmp
out
mov
int
and
sub
cmp
push
ds
add
ret
or
dec
xchg
add
call
add
add
jns
push
xchg
inc
retf
adc
push
xchg
jae
cmp
pop
add
pop
mov
dec
and
inc
lahf
or
repnz
daa
push
das
stos
push
xchg
cdq
test
lea
jp
xchg
mov
push
push
aaa
cmp
mov
ds
jns
test
add
cdq
inc
sbb
leave
cmp
inc
xchg
mov
icebp
push
cdq
xchg
je
sbb
rcr
sub
dec
xchg
call
cmc
sahf
pop
cmp
mov
mov
adc
ficom
mov
clts
inc
inc
cdq
mov
jae
and
dec
xchg
aaa
inc
dec
leave
rcr
(bad)
xor
or
jns
and
or
test
pop
in
jle
mov
push
mov
fbstp
ja
ins
cmp
cmp
imul
adc
push
call
pop
js
shl
iret
add
(bad)
sbb
mov
cmp
imul
sti
add
repnz
xchg
adc
fld
add
pop
cmp
cmp
sbb
ret
sub
xchg
add
xchg
fwait
lods
pop
sub
mov
pop
sbb
mov
adc
add
hlt
data16
sahf
jp
fldl2e
cmp
push
cli
adc
jo
dec
sar
rcl
test
or
mov
pop
dec
and
xchg
outs
sub
dec
cmp
mov
push
imul
sbb
rcr
es
mov
push
aam
int
popa
or
sub
mov
(bad)
cmp
or
mov
sub
mov
adc
fidivr
pushf
mov
mov
add
outs
cmp
push
call
gs
mov
xor
cwde
add
ret
adc
adc
fild
imul
push
mov
push
cmp
pop
cmp
lock
mov
sbb
pop
aaa
push
retf
xchg
jle
lods
mov
daa
dec
or
cdq
rol
jnp
aaa
mov
cmp
aaa
push
or
sub
js
pusha
loopne
xor
out
cmp
and
retf
adc
and
sbb
xchg
das
mov
mov
inc
enter
mov
mov
xchg
push
lock
pop
dec
push
push
sub
pop
push
(bad)
push
stos
test
jo
in
out
mov
loopne
gs
push
xchg
push
pushf
and
xor
mov
mov
mov
pop
mov
sahf
int
adc
loopne
sbb
add
cmovnp
xor
dec
jge
adc
inc
sbb
(bad)
and
sub
dec
sbb
jb
xor
mov
push
pushf
jp
mov
sbb
xchg
outs
push
dec
cmp
(bad)
pushf
iret
out
mov
ss
pushf
push
arpl
mov
push
cmp
call
xchg
cdq
push
leave
arpl
mov
pop
mov
sbb
test
sbb
jmp
pop
iret
or
and
push
push
or
ror
push
test
sbb
retf
ret
lods
jae
mov
out
addps
jmp
cmp
retf
mov
fimul
mov
mov
retf
test
sbb
sub
and
jecxz
mov
dec
mov
js
mov
sub
sub
and
shr
mov
pop
xchg
cbw
jb
add
movs
cmps
sbb
xor
fwait
xchg
xchg
es
cmp
dec
dec
and
cmc
out
stc
xor
pop
inc
(bad)
loopne
cmp
xlat
xor
leave
pushf
or
xchg
sbb
xchg
add
xor
xchg
and
lods
das
cmps
nop
(bad)
loope
jb
test
popa
enter
mov
loope
sbb
pop
mov
imul
ins
sub
sub
loopne
and
jne
(bad)
js
ss
push
(bad)
jp
xor
addr16
es
mov
inc
lods
test
inc
dec
fadd
loop
(bad)
sub
push
int3
jmp
pop
mov
jns
pop
leave
pop
fistp
call
movs
and
jno
pop
and
xchg
das
pop
mov
addr16
sub
pop
cmp
sbb
xchg
stc
ss
sbb
mov
(bad)
jno
dec
stos
cmp
cmps
add
push
lods
fs
popf
mov
clc
movs
scas
leave
imul
movs
jae
mov
inc
pop
jmp
sbb
mov
xchg
movs
push
movs
cmc
inc
or
call
push
test
xlat
enter
sar
cmps
push
ja
mov
cmp
sbb
inc
(bad)
and
and
push
test
pushf
je
dec
jl
dec
cmp
aam
popa
jb
rcl
xchg
pop
jle
enter
hlt
pop
pop
mov
test
jl
adc
adc
inc
lock
sbb
jne
inc
cmp
push
xor
lea
cmp
mov
add
and
jo
cmp
sbb
inc
cmp
cmp
push
fist
push
addr16
sbb
add
out
dec
sbb
cmp
imul
je
addr16
sbb
adc
in
fldenv
jnp
test
push
(bad)
sbb
jne
fst
loop
sub
shr
xchg
ret
xor
add
cmp
xchg
rol
addr16
js
jge
(bad)
and
imul
das
(bad)
fidiv
xor
ja
inc
sahf
push
ja
retf
sbb
stos
sbb
xchg
mov
clc
xor
jmp
sbb
and
dec
mov
cmp
add
push
sub
sahf
inc
push
into
mov
rol
xchg
and
xor
das
out
ins
or
add
add
xchg
cmp
adc
sbb
add
sub
mov
pop
lahf
push
sub
or
or
mov
stos
dec
cmp
imul
lock
das
adc
lahf
loopne
push
mov
in
inc
push
(bad)
dec
dec
adc
loopne
js
fsubr
mov
in
(bad)
jns
mov
ret
sbb
push
cs
mov
loopne
dec
stos
pop
les
and
je
cmp
sbb
push
cmp
jns
and
cmp
push
cmps
xor
pop
mov
repnz
adc
daa
mov
mov
mov
and
fisubr
pop
push
(bad)
cmp
dec
pop
dec
(bad)
rcl
sahf
out
add
outs
push
ja
in
cmp
cmp
dec
cmp
pop
daa
mov
mov
sub
lea
sahf
js
out
sub
sub
xchg
ret
loop
popa
jno
movs
idiv
repz
cmps
mov
pop
fs
dec
mov
add
(bad)
sub
loopne
and
pop
inc
int3
fisubr
sbb
scas
xlat
or
mov
or
jge
ret
outs
inc
cmp
sub
inc
jp
ror
pusha
or
adc
mov
add
add
push
addr16
cs
add
mov
ficomp
sbb
add
je
cmps
(bad)
xchg
or
cmp
lock
mov
inc
lahf
lds
push
inc
das
movs
dec
xor
push
ret
mov
pop
(bad)
xchg
sub
adc
push
sub
dec
sbb
fsubr
jb
enter
sbb
popf
pop
inc
pop
xchg
pop
retf
sahf
test
add
loopne
xor
pop
(bad)
int
jmp
(bad)
(bad)
add
aas
fild
mov
loop
aam
ror
add
movs
xchg
push
add
fs
rol
mov
mov
lock
xor
sbb
mov
dec
jge
pop
dec
aam
mov
stos
add
sbb
or
vzeroall
sbb
sbb
ds
aam
movs
inc
jae
ret
mov
fild
inc
sub
and
dec
pop
adc
xor
xchg
push
mov
mov
out
add
out
jg
je
ins
sbb
mov
ror
jmp
and
push
mov
or
mov
out
xchg
dec
pushf
jl
jo
sbb
pop
pop
xchg
xor
jno
add
and
dec
call
pop
adc
mov
iret
mov
mov
push
cmp
push
cmp
fdiv
fldcw
xor
cmp
jo
jnp
sub
and
push
cmp
cmp
jbe
fcomp
pop
imul
ins
cmp
cmp
xor
sbb
and
push
outs
jg
push
outs
sbb
cmps
mov
adc
push
push
pop
nop
push
cmps
or
adc
sbb
and
ds
pop
into
jns
dec
and
cdq
(bad)
sbb
adc
retf
xchg
xchg
nop
test
lods
adc
push
xchg
jo
(bad)
cmp
mov
mov
jno
ss
sub
outs
xchg
nop
pop
sbb
(bad)
mov
pop
shl
nop
(bad)
xchg
cli
mov
and
xchg
loop
lods
out
xor
pop
fcomp
loope
imul
scas
or
push
pop
pop
dec
push
jmp
sub
fmul
dec
mov
idiv
dec
sbb
mov
mov
lods
fs
out
mov
push
popf
cmc
rcr
popf
and
js
ja
outs
lock
push
push
inc
sbb
add
lds
cmps
pusha
adc
mov
push
and
imul
dec
rol
add
mov
test
add
dec
sub
mov
icebp
sbb
or
mov
add
faddp
pop
mov
cdq
mov
inc
fbld
cli
xor
add
pop
leave
inc
stos
mov
cdq
ds
mov
mov
movs
ja
pop
(bad)
add
jecxz
in
sbb
add
inc
xchg
jno
inc
lock
cmp
xchg
push
div
cmps
into
popa
add
sub
mov
(bad)
pop
add
out
or
ja
sbb
xchg
push
sbb
xchg
add
hlt
xlat
jno
imul
pop
cmp
retf
add
sbb
rol
cmp
inc
add
mov
adc
fmul
in
mov
hlt
pusha
ret
dec
out
and
mov
or
test
aam
movs
sbb
adc
test
addr16
pop
sub
fldcw
popa
js
jb
cmp
in
enter
sbb
adc
pop
and
nop
cmp
pop
pop
out
add
cmp
sar
pop
pop
pop
leave
into
les
or
jns
aam
retf
cmp
fstp
sbb
popa
ror
pop
rol
mov
add
into
loope
test
adc
int3
mov
js
je
mov
mov
sahf
add
in
jecxz
and
mov
aam
add
jns
add
arpl
shl
test
sbb
pop
rcr
or
es
and
xchg
and
pop
pusha
test
push
xchg
ret
lods
idiv
lods
pop
jmp
jnp
mov
mov
lods
(bad)
mov
(bad)
fsubr
inc
(bad)
xor
mov
jne
add
push
stc
mov
test
or
xchg
cmp
mov
mov
adc
or
pusha
dec
xor
xchg
push
pop
cmp
neg
dec
push
jno
(bad)
shr
out
mov
cmp
xchg
fstp
push
cwd
je
xchg
into
inc
fcomp
mov
in
cmp
cmp
push
mov
cmp
repz
xor
nop
pop
push
int3
sub
push
push
adc
mov
into
out
loopne
sub
leave
push
xor
rcl
retf
aam
pop
idiv
inc
sub
mov
and
pop
xchg
adc
pop
popf
mov
lods
call
adc
mov
in
sub
inc
adc
inc
and
icebp
sub
lock
mov
xchg
idiv
xchg
xchg
jg
push
and
xor
das
sbb
aaa
jp
push
shl
mov
mov
sub
xlat
(bad)
push
xor
rcr
push
jne
cmp
(bad)
mov
outs
jne
push
scas
adc
add
cmp
or
(bad)
pop
and
adc
mov
jge
mov
fwait
clc
scas
xor
in
shr
jecxz
int3
daa
fmul
adc
mov
in
daa
xchg
add
daa
outs
mov
add
cmps
retf
and
pop
xor
add
gs
adc
shr
or
xor
xchg
mov
sbb
or
ja
popf
push
xor
ret
cmp
jnp
inc
out
cmp
mov
shl
jo
sbb
fidiv
repnz
and
jecxz
fwait
mov
rcl
jmp
out
mov
nop
pop
push
inc
and
sub
xchg
jo
cmp
pusha
jno
mov
inc
inc
adc
xchg
in
pop
pop
pop
xchg
lds
xchg
jl
push
les
xor
pop
daa
mov
ror
sahf
pop
pusha
adc
cmp
mov
dec
fsubr
pop
mov
jl
(bad)
or
xor
adc
shr
pop
xlat
das
add
test
cwde
cmps
out
or
xor
mov
pusha
pop
cmp
add
jo
pushf
(bad)
rol
shl
shr
and
jmp
pop
cdq
in
jne
sbb
stos
pop
pop
xchg
icebp
test
fwait
lods
dec
pop
or
pop
jmp
adc
rol
scas
sbb
ins
pop
loopne
dec
inc
inc
xchg
out
jmp
sahf
dec
dec
pop
int
fs
jne
scas
outs
mov
xchg
xchg
arpl
loope
dec
dec
sbb
sub
sub
and
push
ror
mov
loopne
in
mov
cmc
xchg
dec
(bad)
xor
or
call
sbb
sahf
sub
jo
and
rcl
cmp
imul
pop
rcr
sbb
inc
retf
lock
pushf
loope
xchg
test
pop
jb
stos
fadd
icebp
sahf
rcl
xchg
mul
cmps
and
add
call
pop
and
cmps
sub
dec
sub
test
pop
mov
test
add
ja
pop
inc
jg
outs
add
cli
addr16
and
inc
xchg
pop
pop
push
jo
ret
ret
shr
and
dec
(bad)
fadd
add
retf
aas
loope
(bad)
fstp
inc
pop
add
add
pushf
(bad)
inc
stos
popa
jmp
sub
lea
and
mov
retf
dec
clc
nop
push
cmp
loope
dec
pop
push
pop
push
jns
movs
dec
xor
icebp
pop
or
fs
test
mov
mov
add
ins
mov
inc
fmul
mov
push
outs
mov
nop
lods
pop
not
sub
ins
cmp
xor
ja
xor
jl
test
in
lods
dec
sub
cmc
cmp
push
arpl
pop
das
pushf
push
call
dec
mov
(bad)
shl
popa
xchg
ficom
arpl
push
inc
arpl
pop
js
jo
out
test
xchg
dec
jo
jp
jecxz
add
sbb
ins
sbb
out
mov
and
cmp
sbb
scas
leave
test
xchg
cli
sbb
jp
or
jmp
inc
jns
xchg
mov
mov
stc
sbb
or
mov
mov
sahf
retf
rcr
mov
fs
or
pop
xchg
js
gs
cmp
sub
cmp
dec
xor
mov
or
or
scas
cmps
adc
ret
shr
xchg
push
or
loope
aaa
add
or
mov
nop
adc
lea
add
test
loop
gs
iret
add
cmp
pop
sbb
xchg
mov
mov
loopne
and
push
mov
fs
xchg
inc
adc
rol
cdq
adc
jecxz
add
and
fs
xor
ret
xor
ss
aad
or
adc
xchg
xchg
shl
jp
test
loope
add
xor
int
(bad)
push
push
(bad)
fiadd
(bad)
xor
pop
cmp
jecxz
cmp
sub
arpl
adc
pop
push
sub
jo
sbb
xchg
jo
pusha
xor
test
adc
out
daa
sbb
leave
xor
jo
dec
out
lea
pop
daa
jle
mov
movd
aam
fwait
daa
or
inc
jmp
xor
push
pop
nop
xor
lods
ret
arpl
ins
stos
stos
xchg
mov
js
push
mov
push
mov
xor
js
into
dec
add
jp
jno
cmp
jl
xchg
mov
fnstsw
mov
add
rcr
xor
xor
(bad)
or
jg
jl
xchg
lods
xor
jns
xchg
loopne
nop
xchg
push
dec
xor
addr16
jp
test
sbb
push
cld
pop
push
pop
jbe
xor
ins
jnp
add
cs
je
xchg
lock
xchg
js
ja
cld
xchg
ds
mov
dec
inc
loopne
lock
pop
(bad)
shl
call
mov
outs
ja
sbb
daa
sbb
packuswb
pushf
mov
mov
das
cdq
push
xor
aad
or
paddq
test
xchg
shl
jmp
in
lock
int3
pushf
mov
movs
jmp
sub
add
cvtps2pi
(bad)
leave
int3
ret
aaa
xor
xchg
pop
shl
xlat
jbe
add
xchg
sahf
jns
lds
xchg
fild
adc
jb
add
xchg
lock
xor
mov
xchg
adc
dec
call
jge
xchg
sub
add
test
les
fcomi
dec
out
inc
imul
les
sub
outs
pushf
aaa
add
iret
sbb
cmp
pop
mov
enter
push
xchg
fwait
xchg
shl
add
rol
xchg
iret
ss
pop
pop
enter
inc
ja
add
fs
xchg
rol
or
adc
sub
cdq
sub
sub
mov
cmp
pop
cmp
jo
scas
xlat
clc
adc
imul
or
cmp
sub
or
shr
adc
fidivr
adc
imul
pop
adc
xor
xchg
mov
(bad)
rol
(bad)
pop
jmp
addr16
cmps
test
mov
sub
adc
lods
inc
mov
not
and
cmps
add
push
in
adc
retf
aam
loop
rcl
pop
xchg
jns
cmp
pop
test
add
mov
ds
or
call
push
adc
mov
fldenv
xor
adc
sub
jge
stc
retf
sbb
addr16
mov
inc
aaa
xor
push
out
int3
mov
push
test
mov
(bad)
add
add
or
pop
mov
test
inc
cmp
call
rcr
add
pop
mov
or
(bad)
cmp
adc
cwde
adc
aad
js
xlat
dec
xor
pop
sbb
mov
pop
loopne
in
stos
dec
bound
sub
rol
es
out
push
inc
movs
mov
hlt
add
retf
mov
fsub
imul
mov
aas
cmp
add
mov
or
xor
push
adc
push
dec
scas
pop
js
mov
mov
adc
shl
hlt
mov
add
das
popa
and
stos
sbb
add
into
inc
inc
mov
sbb
stc
cmp
pop
inc
sbb
push
inc
js
outs
popf
sbb
imul
js
mov
(bad)
and
(bad)
retf
sub
(bad)
mov
xor
xor
imul
sbb
jge
sub
sub
mov
xor
mov
es
jge
and
push
(bad)
fisubr
dec
lea
lods
movs
add
add
stos
out
xor
sbb
add
sbb
mov
or
pusha
add
sbb
(bad)
pop
sub
int
sbb
push
mov
ficom
push
cmp
pop
repz
pusha
pop
push
or
imul
aad
arpl
or
dec
add
add
and
test
cmp
dec
shl
and
mov
in
push
and
add
jo
jnp
jge
cmp
repz
or
mov
and
ror
sub
cmp
xor
add
mov
jno
xor
shr
mov
nop
pusha
dec
or
adc
add
(bad)
(bad)
clc
repnz
mov
inc
fistp
xchg
imul
mov
mov
icebp
fidivr
sub
jecxz
xchg
(bad)
or
dec
adc
pop
fld
xor
rcl
mov
mov
add
push
fwait
jl
les
aam
outs
mov
dec
jmp
cdq
fnstenv
sbb
scas
adc
ret
jmp
sar
sbb
adc
mov
push
pop
rcl
js
mov
ret
ret
mov
jno
mov
mov
xchg
cmp
ret
jp
jp
xor
ret
jmp
push
ficomp
dec
loopne
sub
add
or
push
inc
jne
js
push
je
das
shld
adc
jecxz
(bad)
sbb
inc
pop
mov
inc
jg
xor
pop
push
mov
jae
xor
mov
imul
daa
imul
ror
push
cmp
gs
mov
nop
(bad)
outs
xor
cmp
retf
xor
inc
mov
dec
cmp
adc
mov
leave
sbb
inc
sbb
cld
xor
enter
push
(bad)
xchg
xor
inc
mov
pop
adc
scas
test
adc
push
push
or
and
je
ror
les
sbb
sub
xchg
or
in
add
test
cmp
mov
or
dec
pop
cmc
loope
test
cmp
ret
lods
das
cli
pop
sar
mov
js
outs
add
dec
ret
inc
fldenv
and
stc
aam
popf
add
xchg
mov
test
sub
mov
add
popf
push
push
jge
sbb
pop
stos
sbb
clc
and
lods
mov
mov
mov
cmp
sub
xchg
mov
mov
clc
shl
enter
dec
(bad)
enter
(bad)
inc
mov
adc
mov
clc
mov
out
retf
mov
push
or
fld
jae
test
dec
mov
xchg
push
jae
dec
add
or
repz
mov
sbb
ja
shl
dec
cmp
dec
leave
hlt
rol
pop
rcr
mov
jo
mov
cmp
xchg
push
cmp
push
dec
mov
js
xor
les
jne
dec
outs
mov
adc
shr
vsqrtss
inc
sti
pop
cmc
lea
add
(bad)
mov
add
cmps
loope
movs
xchg
lds
mov
jo
sbb
ins
mov
dec
ja
inc
dec
or
jl
adc
push
mov
adc
add
add
outs
daa
outs
adc
dec
sahf
xor
add
mov
and
test
arpl
or
dec
or
pop
sar
jns
loope
inc
sbb
outs
sar
es
hlt
xor
fisubr
in
or
inc
out
cmp
nop
retf
scas
dec
ror
add
jp
dec
xor
jno
outs
gs
xor
push
sbb
das
or
mov
sub
jo
xchg
ss
mov
xor
arpl
call
call
cs
shl
xchg
retf
cmp
mov
jns
ret
pop
movs
movs
mov
pop
xchg
clc
xor
les
or
jnp
hlt
and
sbb
xor
inc
popf
aaa
das
test
rcr
retf
pop
push
jecxz
mov
cmp
pop
jo
mov
mov
fisubr
rol
stc
cmovae
or
popa
mov
or
daa
mov
inc
rcr
ins
into
(bad)
or
mov
jne
fdiv
cmp
xchg
push
jo
pushf
add
mov
(bad)
loope
(bad)
and
or
adc
add
xor
nop
shl
sahf
pop
jmp
fmulp
push
pop
xchg
xor
jmp
sbb
push
or
and
cmc
(bad)
dec
outs
cmp
call
mov
sbb
mov
mov
or
dec
js
mov
mov
rcr
add
sbb
pop
jnp
push
daa
sbb
std
fstp
arpl
test
and
popa
fwait
loopne
pushf
(bad)
loope
out
lea
add
inc
or
jb
leave
in
mov
in
push
jp
sbb
fadd
sbb
pop
push
sbb
nop
mov
add
xor
repnz
out
xchg
sbb
dec
repnz
add
sbb
push
sbb
cmp
lds
sub
fsub
add
(bad)
add
jne
daa
aas
mov
fstp
sti
inc
test
mov
xchg
not
cmp
in
cs
push
sub
out
cmp
aad
popa
icebp
pop
aam
or
xchg
lods
mov
pusha
(bad)
mov
imul
adc
push
sub
jo
rol
stc
inc
pop
mov
push
ret
imul
leave
sub
enter
push
sar
pop
add
inc
movs
mov
jo
push
adc
pushf
sub
sbb
leave
adc
loop
jb
imul
js
lea
cmps
lods
push
inc
dec
outs
add
pop
std
les
scas
and
xchg
pop
dec
jmp
and
scas
fild
fmul
xchg
push
aas
cmp
mov
add
adc
dec
mov
push
push
push
mov
lock
sbb
xchg
push
adc
fdiv
cmp
ret
xchg
sub
mov
mov
test
sbb
iret
sub
pop
dec
xor
mov
push
popa
jno
popf
adc
mov
leave
pop
mov
cwde
mov
pop
rcr
test
mov
adc
cmp
push
cmp
or
xchg
or
sbb
sbb
jo
pop
fstp
sbb
ja
sub
pusha
jne
cmp
test
icebp
shr
lods
push
mov
or
and
jne
cmps
mov
call
inc
mov
retf
mov
hlt
add
xchg
sub
popa
lods
inc
mov
sub
aas
add
add
ins
sbb
mov
test
retf
mov
ret
sub
add
scas
daa
imul
icebp
inc
adc
(bad)
arpl
fs
mov
xor
push
pop
cmp
retf
add
sbb
ret
push
gs
sahf
mov
jb
ins
imul
mov
mov
mov
psrld
pusha
or
add
jg
mov
mov
mov
sbb
cmp
cmp
fisubr
mov
imul
retf
xlat
dec
in
inc
xor
or
rol
jg
pop
movs
or
xchg
hlt
mov
loop
fst
xchg
add
pop
jmp
xchg
mov
shl
ror
mov
gs
adc
shr
ins
add
sbb
adc
mov
fisttp
(bad)
jb
pop
sub
push
sahf
scas
clc
add
push
dec
xor
fwait
mov
rol
mov
add
add
xchg
push
ds
push
(bad)
bound
push
fisttp
pop
test
loopne
sti
inc
mov
(bad)
adc
or
out
ins
mov
jl
mov
test
aad
int
xchg
(bad)
(bad)
mov
inc
nop
out
dec
nop
sub
shl
push
push
sub
(bad)
scas
jg
jl
pop
xchg
jmp
xchg
push
shr
into
lods
pop
fmul
and
inc
ss
lock
test
pop
sbb
stos
cli
or
(bad)
aam
ds
enter
mov
and
leave
test
imul
inc
mov
mov
arpl
jp
in
rcl
xor
daa
pop
jno
test
lahf
sub
pop
add
cmp
and
pushf
push
push
addr16
popa
nop
jmp
pop
sbb
mov
test
pop
cmps
mov
test
mov
test
in
mov
mov
add
xchg
pop
scas
repz
movs
ss
push
add
imul
mov
retf
push
and
or
sub
and
or
xchg
xchg
add
shl
cmc
fs
test
mov
(bad)
jecxz
jnp
or
cmp
hlt
or
cli
xor
cmp
pop
shr
pop
or
dec
inc
push
mov
aas
or
jns
je
movs
add
sahf
and
push
add
mov
lea
fidiv
rcl
sbb
dec
xchg
pop
adc
jns
sbb
lock
and
and
test
pop
mov
loope
xchg
mov
mov
mov
pop
sti
pop
and
push
cs
push
dec
mov
movs
cmp
das
or
jo
cmp
dec
sar
and
stc
push
dec
(bad)
jbe
mov
or
pushf
xchg
push
dec
retf
push
sbb
push
add
ins
pop
lods
xchg
xchg
retf
lods
mov
or
dec
sub
pop
xchg
imul
jne
imul
and
mov
sub
and
test
cmps
xchg
pop
xlat
test
mov
and
cmp
hlt
dec
cmp
mov
sub
mov
dec
movs
push
xchg
aas
push
push
rol
lea
jo
mov
xchg
or
ins
or
(bad)
xor
jnp
jp
dec
mov
mov
add
sub
mov
jae
xchg
sbb
add
ins
iret
xor
cmp
pop
or
inc
push
sub
jmp
(bad)
ret
mov
int
dec
or
inc
add
adc
jecxz
inc
bound
mov
ds
fnstcw
movs
test
daa
adc
jne
jmp
imul
add
mov
add
pop
jo
cmp
ror
loope
xor
jnp
dec
addr16
sub
cwde
mov
mov
and
cmp
jns
test
inc
jns
test
mov
adc
lods
popa
fs
lds
mov
ret
fbstp
mov
js
and
mov
mov
adc
adc
and
adc
rol
cmps
cli
cmp
adc
les
mov
add
cmp
xchg
push
movs
data16
xchg
adc
shl
sbb
inc
xchg
call
dec
sti
hlt
adc
jnp
push
push
cmps
sar
sbb
pop
mov
pop
mov
inc
pop
mov
pop
nop
into
mov
cmp
inc
add
dec
mov
sbb
mov
lahf
jmp
fsubr
(bad)
xor
mov
pop
loopne
frstor
js
(bad)
push
pop
imul
retf
sub
repz
enter
or
inc
pop
cs
retf
fistp
cmp
fnstcw
rcl
imul
cmps
mov
push
cmp
nop
into
push
cmp
push
pop
imul
pop
push
or
mov
push
add
fcom
ss
fcmovne
jmp
push
cmp
comiss
mov
xor
xor
lock
dec
mov
jo
(bad)
mov
rol
sub
and
and
fidiv
loope
dec
and
jmp
int
lahf
cmp
ret
lea
aaa
pop
sbb
sbb
and
cmp
cmc
ficomp
sbb
cmp
test
jns
jne
mov
pop
mov
test
push
push
mov
or
xchg
xor
or
mov
outs
test
sbb
add
push
scas
xor
nop
and
fbld
aaa
dec
repnz
sbb
add
pop
cmps
xor
xchg
sti
adc
or
xor
push
outs
pop
sub
in
rol
das
retf
movs
je
inc
inc
adc
adc
add
fistp
pop
popa
jl
cmp
retf
sbb
xchg
or
cmps
sub
adc
pop
xchg
cmc
(bad)
jecxz
fs
xor
or
push
inc
adc
mov
or
push
clc
jns
lods
push
mov
out
imul
sbb
hlt
mov
daa
push
mov
add
ins
push
inc
sub
rcr
jo
mov
ja
sub
sbb
stos
xor
(bad)
pushf
inc
mov
scas
sub
mov
ret
and
xchg
sub
xchg
add
mov
rol
jle
add
cmp
mov
cdq
rol
mov
dec
mov
sbb
or
push
push
sbb
test
cmps
icebp
imul
sbb
shl
push
fisttp
aad
je
push
pop
adc
sbb
mul
push
icebp
ret
mov
in
das
cs
icebp
(bad)
aaa
mov
std
dec
xor
cli
and
lods
pusha
aaa
push
or
test
mov
in
out
call
cs
out
jo
jmp
adc
arpl
jno
inc
mov
movs
xchg
push
clc
xchg
mov
pavgb
or
adc
(bad)
sbb
std
mov
jmp
xor
cmc
pop
inc
push
je
mov
ror
loopne
lea
jo
inc
inc
imul
and
in
popa
xor
mov
fidivr
xor
add
movs
dec
das
fisub
pop
shl
xor
or
mov
enter
or
inc
mov
pop
cmp
into
pop
jne
rcl
jns
test
add
cmp
repz
aam
push
stos
cs
mov
sub
xor
dec
mov
dec
push
fnsave
mov
cmp
add
and
js
loopne
(bad)
or
sbb
nop
sbb
inc
(bad)
mov
sbb
sbb
xchg
ins
js
sbb
or
mov
push
inc
cmp
xor
adc
cdq
enter
inc
stc
cmp
push
mov
xchg
mov
sbb
add
das
add
leave
mov
push
xchg
sahf
mov
sub
fsubr
jb
in
ins
pop
xchg
enter
das
jne
sti
stos
xchg
popa
add
ret
xchg
jp
pop
dec
sbb
mov
push
std
xor
cmp
xor
ror
outs
or
mov
push
aam
fmul
inc
(bad)
sbb
sbb
jne
fucom
push
pushf
call
add
scas
aam
and
pop
outs
test
jnp
sub
movs
out
mov
mov
js
loop
stos
out
lock
mov
test
cmc
ss
jmp
adc
sbb
inc
xchg
rol
push
lahf
stc
push
and
fnstcw
shl
loop
ret
loopne
mov
or
sbb
add
or
jmp
jge
and
call
mov
out
call
sbb
mov
inc
push
mov
and
mov
and
fwait
pop
daa
push
sbb
push
gs
dec
mov
retf
push
add
mov
loopne
minps
and
hlt
mov
jae
push
cmp
cmp
out
rol
or
xchg
movs
rep
call
cmps
push
and
idiv
cmp
sub
aad
int3
cmp
jb
in
mov
mov
mov
sbb
dec
pop
retf
dec
pop
adc
and
cdq
pop
jne
push
cmps
push
xchg
xor
aam
fld
sbb
mov
js
xchg
aam
(bad)
loopne
pop
sti
lea
pop
inc
(bad)
iret
lds
add
adc
retf
dec
aaa
rol
xor
pop
inc
mov
js
jle
imul
out
rcr
dec
sbb
fist
aam
push
pop
shl
pminub
cmp
ja
iret
jb
pop
pop
dec
lods
loope
xor
ja
add
jns
addr16
adc
sbb
(bad)
test
xor
and
and
xchg
out
(bad)
sbb
mov
push
mov
cmp
add
push
pop
mov
push
lods
in
jae
out
jp
xchg
movs
fcom
arpl
rcl
cmp
ret
pop
push
push
es
inc
sbb
cmp
xchg
inc
sbb
shl
(bad)
in
xchg
mov
or
push
sub
mov
mov
xchg
movq
ja
sbb
adc
fcom
arpl
aad
outs
loope
repz
add
sbb
or
mov
add
push
sbb
cmp
adc
fcomp
add
adc
cmp
mov
call
fdivr
bound
pop
push
mov
popa
ja
je
sbb
mov
cs
dec
dec
and
sub
sahf
sub
lahf
push
jo
mov
mov
addr16
xchg
push
fstp
ins
out
or
aaa
pop
lods
dec
inc
push
(bad)
jmp
add
cmp
mul
jge
sbb
cdq
js
test
dec
or
imul
je
movs
pop
popf
mov
hlt
aad
sbb
repz
add
push
pop
mov
dec
call
cmc
hlt
inc
dec
dec
ja
mov
mov
sub
xchg
adc
scas
imul
jne
cmc
cmp
sahf
inc
popf
jne
movs
arpl
in
and
xchg
rcr
cli
(bad)
mov
jge
cmp
sub
shr
popa
or
mov
add
sub
xor
pop
pop
jge
xchg
pop
sbb
push
(bad)
inc
and
sbb
xchg
and
inc
loope
xor
push
rcr
cmp
sbb
mov
inc
or
cli
mov
dec
loope
seto
fs
sbb
shr
inc
bound
and
js
and
sub
dec
cmc
jo
adc
push
dec
arpl
xchg
inc
test
add
(bad)
jp
or
pop
mov
and
push
jne
or
sub
cmp
xor
(bad)
pusha
mov
and
add
popf
dec
and
xchg
add
shl
sti
popa
jae
fs
aas
push
push
leave
sub
mov
add
and
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
inc
add
add
adc
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
add
or
adc
adc
nop
push
add
add
add
or
push
add
nop
pop
push
add
add
aam
(bad)
add
add
add
add
or
leave
xchg
pop
leave
add
add
leave
xchg
pop
add
add
les
js
std
(bad)
out
mov
dec
cmp
add
je
gs
imul
inc
jb
popa
je
jmp
sbb
inc
ins
jae
jb
jle
mov
jo
inc
push
jb
ss
or
or
gs
push
fdiv
imul
fs
push
out
mov
xchg
ins
je
inc
jns
ds
inc
outs
jb
pop
or
fld
dec
bound
arpl
imul
jne
jns
pop
test
mov
cmp
ins
outs
arpl
outs
ins
popa
jo
gs
data16
(bad)
outs
fs
outs
lock
jo
mov
jb
xor
add
and
jp
dec
push
gs
jne
inc
sbb
sub
push
fcom
test
int3
scas
sbb
(bad)
rol
mov
data16
dec
outs
outs
push
pop
popa
add
jb
sbb
jnp
(bad)
push
outs
mov
push
inc
jbe
push
or
inc
dec
outs
neg
xor
addr16
jne
dec
inc
mov
mov
cwde
sub
push
or
jne
gs
sbb
lods
jge
out
sbb
test
call
mov
adc
sbb
jnp
dec
jo
dec
dec
pop
jo
or
cmp
pop
into
pop
rcr
push
outs
rcr
xor
and
dec
(bad)
push
imul
rcl
cld
and
mov
mov
inc
shr
loopne
sub
jae
sbb
mov
in
and
dec
jle
retf
adc
adc
scas
std
inc
or
out
imul
adc
rcl
push
(bad)
xchg
dec
xor
mov
mov
imul
test
ret
popa
inc
fimul
and
fcmovu
sub
js
ja
movs
test
fild
ss
pop
push
jae
shl
dec
inc
dec
inc
daa
push
mov
mov
imul
cmovae
retf
add
bound
add
out
inc
push
inc
inc
and
jo
lods
cmp
jge
push
jns
and
adc
push
push
jns
into
push
outs
ret
mov
and
outs
sbb
fdiv
dec
popa
inc
push
and
addr16
arpl
jae
pop
(bad)
pop
pop
cmp
mov
inc
fwait
rcl
sbb
jmp
ficom
xlat
gs
fsub
imul
stos
sahf
inc
mov
jbe
inc
rcr
in
jmp
jb
call
inc
xchg
mov
pop
push
sbb
outs
jbe
pop
ins
dec
cmp
shl
pop
popa
bound
jae
sbb
push
jo
arpl
inc
inc
fistp
cmp
mov
retf
loope
fimul
and
inc
jo
jb
inc
push
cmp
push
sbb
push
dec
cmp
push
push
ss
cmp
shr
js
gs
mov
sbb
sub
add
and
mov
retf
movs
xor
arpl
rol
dec
jo
addr16
loopne
scas
xchg
push
stos
sbb
adc
and
pop
repnz
push
aas
inc
xlat
dec
outs
mov
push
arpl
xor
sub
pop
xor
pusha
fild
inc
push
sub
mov
dec
sub
cmp
test
adc
loopne
jmp
in
fwait
sbb
xchg
dec
ins
dec
outs
adc
jl
test
ins
and
lds
inc
retf
sbb
imul
cmp
add
out
jo
ins
and
ins
push
and
stc
daa
cmp
mov
push
sbb
out
sbb
jns
imul
mov
outs
adc
out
push
fadd
ins
jae
cmovae
sbb
jg
jmp
cmp
inc
or
lahf
sub
test
fld
popf
add
mov
outs
xor
adc
adc
cdq
bound
cmps
dec
retf
test
mov
and
popf
lds
dec
sbb
jne
inc
mov
or
mov
mov
mov
mov
mov
add
cmps
pop
xchg
xchg
fcomp
push
mov
push
push
jns
sbb
and
pop
bound
xchg
sbb
cdq
out
js
dec
mov
je
ja
clc
sub
aaa
push
popa
imul
sub
(bad)
call
jecxz
cmps
out
mov
daa
out
loop
popf
and
dec
gs
push
mov
lock
fidiv
pop
jne
pusha
inc
cmp
push
xlat
and
cmp
sbb
fisubr
inc
jbe
push
(bad)
(bad)
mov
sbb
aas
and
pop
sub
retf
dec
fmul
std
and
cld
fs
jne
inc
jne
push
lods
(bad)
xor
nop
mov
xchg
mov
inc
xchg
jne
sub
inc
cs
ins
push
aad
dec
adc
add
push
iret
push
(bad)
das
jo
dec
dec
lock
push
xor
mov
nop
arpl
inc
stos
jnp
mov
inc
jb
xchg
jo
cmp
ja
dec
jnp
dec
outs
leave
arpl
add
mov
mov
daa
outs
sub
int3
add
cwde
das
call
mov
adc
or
and
inc
jl
fcmovb
add
jecxz
sub
jo
inc
mov
add
mov
mov
and
scas
aad
xor
in
(bad)
mov
jae
lahf
bound
stos
push
mov
lea
or
xor
mov
movs
mov
and
dec
inc
les
sbb
xor
mov
jbe
dec
pop
dec
or
pop
sbb
inc
fidiv
dec
push
dec
mov
sbb
mov
dec
push
xor
push
imul
adc
repz
mov
mov
cmp
inc
jb
push
mov
dec
push
push
arpl
(bad)
mov
push
fistp
clc
imul
pop
pushf
mov
inc
mov
xchg
push
pop
popa
push
int3
mov
js
add
bound
inc
dec
cmp
clc
jns
outs
adc
push
sub
sbb
les
jo
cmp
cmp
loope
push
jae
and
pop
xor
push
push
inc
push
(bad)
push
lock
inc
add
mov
sub
cdq
mov
das
xor
cmp
shl
push
and
mov
or
jae
pop
xor
push
dec
mov
or
xor
push
pop
pop
ins
cmp
rcr
pop
arpl
(bad)
sub
scas
xor
jae
jae
mov
xchg
xor
and
inc
or
push
fsub
jmp
inc
outs
pop
jecxz
scas
or
xor
or
movs
xor
fsubr
ins
adc
add
rcr
push
mov
ins
and
mov
outs
jo
in
sar
and
out
popa
mov
loop
daa
sub
ficom
inc
sbb
sub
lea
ret
ret
pop
daa
icebp
inc
pop
arpl
pop
aam
aam
push
je
sub
mov
fstp
add
ins
inc
sbb
popa
and
iret
lahf
push
in
je
test
dec
push
xlat
ret
sar
test
bound
sbb
mov
lods
dec
std
or
dec
outs
dec
jmp
pop
add
sar
adc
adc
add
hlt
sub
outs
imul
and
(bad)
push
mov
inc
jnp
push
pushf
sbb
jmp
dec
push
dec
inc
xor
neg
jnp
and
and
inc
mov
jno
aaa
nop
loopne
retf
dec
jecxz
into
neg
push
jb
clc
sub
outs
jnp
add
jbe
xchg
or
in
ins
pusha
sub
outs
sub
xchg
and
out
sub
xchg
call
dec
leave
je
sbb
cmp
cmp
pop
mov
imul
shl
xchg
mov
dec
push
sub
ins
nop
mul
sub
popa
test
daa
add
fisub
inc
sub
movs
jne
daa
dec
stos
cmps
jbe
adc
inc
imul
in
mov
imul
int3
adc
mov
test
(bad)
stos
mov
inc
jo
sub
jbe
retf
sbb
sbb
or
out
add
mov
jp
sbb
sti
and
and
shl
loop
or
sahf
lods
inc
sub
call
lock
mul
dec
cmp
xchg
jbe
popa
imul
jne
inc
and
xor
or
fs
jns
test
stos
outs
sbb
dec
adc
push
mov
call
sti
sbb
mov
jmp
jne
daa
jae
push
mov
sub
sbb
(bad)
es
in
out
aad
in
les
dec
ins
inc
dec
sbb
imul
jae
adc
push
inc
and
mov
push
sbb
mul
clc
enter
sbb
mov
adc
pop
xchg
sbb
push
fld
mov
mov
xor
dec
dec
jo
sbb
test
push
icebp
adc
add
(bad)
outs
cmp
loopne
push
jb
daa
sub
jmp
stc
xchg
ins
inc
pop
(bad)
test
cmp
push
mov
or
fadd
ins
bound
inc
sub
cdq
je
test
outs
loopne
pop
sub
call
sbb
rol
or
dec
cmps
shr
test
clc
js
sti
sbb
icebp
add
push
sub
push
cli
stos
add
stos
daa
push
jne
mov
xor
imul
and
inc
dec
call
mov
push
add
pop
or
mov
hlt
jns
jmp
(bad)
push
xchg
or
xchg
xlat
xchg
adc
xchg
shr
das
sbb
sub
xchg
bound
fcom
loop
or
dec
imul
outs
pop
enter
jnp
mov
jae
inc
outs
and
pop
xchg
pop
adc
sbb
inc
mov
push
icebp
imul
pop
data16
xor
adc
enter
outs
jbe
in
sub
das
mov
lea
sbb
inc
mov
imul
push
jb
ins
jno
inc
lds
(bad)
pop
add
addr16
ins
sbb
(bad)
mov
pop
(bad)
div
sbb
dec
sub
sbb
ins
inc
dec
push
dec
inc
sub
sbb
pop
shl
cmp
out
ins
addr16
add
mov
and
movs
cmc
(bad)
xchg
dec
ins
pop
mov
inc
mov
icebp
and
shl
scas
jnp
daa
jns
and
ret
popf
add
ins
xor
dec
stos
fst
xchg
test
inc
daa
(bad)
jo
adc
pop
loop
adc
bound
lahf
(bad)
lahf
lods
enter
mov
mov
adc
mov
and
out
xor
inc
mov
push
sbb
and
lods
xchg
popf
stos
ins
cmp
stos
inc
sub
adc
sub
arpl
and
jne
or
push
push
(bad)
jmp
sub
and
ret
sbb
xor
int
fcomp
sbb
add
iret
cwde
scas
inc
dec
movs
imul
or
ins
arpl
sbb
sbb
xchg
sbb
sub
cmp
fldenv
out
pop
imul
and
sbb
add
and
jmp
lock
and
jo
inc
shl
pop
pop
jo
jmp
jae
aaa
(bad)
ja
push
(bad)
dec
test
and
test
jae
aaa
inc
(bad)
pop
inc
xchg
pop
imul
pop
inc
movs
add
push
ins
push
aad
enter
sbb
iret
test
push
inc
and
sbb
pop
sbb
pop
add
lods
inc
dec
adc
loopne
daa
xor
popa
xchg
bound
rcl
sub
xor
pusha
add
arpl
sub
ror
dec
lea
sbb
cmp
lds
dec
or
push
dec
pusha
ja
add
add
add
pop
inc
sub
loopne
pop
cmp
outs
inc
daa
rcr
adc
pusha
push
ins
cmp
sahf
stos
pop
stos
add
pandn
sbb
push
inc
sub
packuswb
add
out
neg
xor
xor
ins
mov
fmul
sbb
loopne
adc
inc
dec
inc
inc
scas
mov
xor
add
and
ret
inc
push
push
in
or
inc
push
push
sub
pop
inc
push
rol
xchg
xchg
xor
lea
inc
xchg
mov
shl
test
mov
je
jae
or
outs
in
jb
dec
mov
dec
sahf
push
dec
gs
cmp
mov
dec
iret
mov
jae
dec
pop
add
push
sub
dec
add
in
das
dec
xchg
and
fbld
add
test
inc
add
add
add
add
add
xchg
add
call
int
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
add
