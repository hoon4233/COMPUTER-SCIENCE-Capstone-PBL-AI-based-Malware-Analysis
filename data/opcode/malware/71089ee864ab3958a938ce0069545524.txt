jg
(bad)
call
in
mov
cmp
ja
movzx
lea
jmp
neg
fwait
xchg
or
pop
ret
lea
add
push
sbb
lods
sbb
add
add
or
fcom
add
int3
pop
fisubr
add
xor
pop
push
or
(bad)
(bad)
jg
mov
push
mov
push
push
call
test
jne
pop
pop
dec
push
(bad)
jg
mov
lock
je
cmp
mov
add
and
jbe
jmp
jle
inc
mov
lock
dec
movzx
lea
jne
sbb
pop
pop
xor
pop
jmp
in
jp
push
neg
sbb
and
pop
xchg
int3
fist
jne
sti
idiv
or
mov
add
or
enter
push
cmc
xchg
out
or
dec
sub
sti
loopne
int3
add
sub
cmp
(bad)
push
xadd
dec
test
jg
add
mov
call
ret
(bad)
clc
jbe
cmp
adc
push
out
lea
mov
jg
inc
ror
leave
jne
sub
sar
inc
movs
or
or
mov
imul
adc
nop
dec
mov
or
call
jns
mov
and
push
fcmovu
jg
das
mov
push
lea
jne
or
mov
push
add
add
push
adc
adc
ss
shl
push
js
xor
sti
(bad)
outs
push
add
mov
cmp
lea
pop
xor
mov
and
cld
or
pusha
and
push
ret
push
push
(bad)
jg
fmul
lea
cmp
and
mov
dec
mov
call
les
call
jl
and
(bad)
push
sub
loopne
inc
and
adc
mov
pop
push
mov
sub
idiv
add
mov
jne
mov
inc
faddp
add
cmp
sti
pop
mov
pop
test
ror
(bad)
es
mov
daa
test
inc
cmps
inc
aas
hlt
xchg
(bad)
push
xor
mov
je
ds
(bad)
fstp
mov
push
sub
adc
xor
lock
push
jg
(bad)
push
lea
mov
stc
mov
inc
adc
(bad)
jne
mov
movaps
cld
add
mov
add
test
std
add
mov
call
(bad)
or
xchg
cld
cmp
add
mov
push
test
pop
cmp
loopne
dec
(bad)
ficomp
jl
lea
push
mov
pop
sub
or
loopne
in
(bad)
fdivr
push
mov
inc
in
and
sub
add
test
rcl
int3
out
or
and
sbb
(bad)
mov
or
cmp
cmp
add
mov
sahf
ins
rol
into
shr
pop
ffree
push
pop
aaa
push
mov
mov
lock
xchg
lock
ret
jmp
jbe
sahf
push
inc
stc
mov
mov
add
div
adc
test
ins
dec
fmul
sbb
pop
fdivr
mov
int3
test
not
(bad)
pushw
pusha
out
push
popf
enter
pop
dec
inc
xor
repnz
std
push
sub
ret
ja
add
push
ins
sbb
enter
cwde
cwde
push
sahf
mov
xor
push
jb
aas
push
ins
dec
dec
mov
adc
js
ins
test
lea
call
test
std
in
sti
add
or
add
xchg
cmp
cwde
mov
xchg
mov
adc
xchg
aam
ja
outs
xchg
xchg
sbb
xchg
nop
adc
aam
nop
xor
mov
mov
mov
in
inc
mov
jne
mov
jb
mov
jle
jae
adc
inc
clc
add
jne
fdivr
loopne
pop
adc
push
call
mov
inc
mov
mov
mov
mov
pop
call
add
push
xlat
and
(bad)
(bad)
dec
(bad)
push
push
lea
and
cld
imul
frstor
add
inc
mov
(bad)
call
ja
repnz
lea
lods
mov
test
loop
nop
shl
or
push
xchg
push
clc
mov
ret
bswap
(bad)
mul
stos
jmp
push
and
sub
xor
mov
mov
into
jae
add
mov
pop
sti
jmp
add
fs
add
add
daa
push
icebp
ins
test
je
dec
sbb
xchg
add
or
push
add
cmp
or
or
add
jne
cdq
sub
xchg
add
mov
jae
xchg
test
adc
mov
mov
cmps
and
not
stc
push
xor
mov
(bad)
pop
lahf
mov
data16
sbb
pop
mov
cld
sti
push
cmp
xchg
sub
xchg
xor
xchg
repnz
shl
ret
cmp
xchg
cmp
and
stc
enter
mov
mov
mov
mov
xchg
(bad)
jl
mov
mov
push
mov
ds
mov
xchg
and
stc
pusha
cmps
xchg
push
xchg
(bad)
jl
lods
xchg
je
xchg
js
xchg
sbb
pop
test
xchg
ds
(bad)
nop
test
sbb
rol
xchg
ret
push
mov
mov
mov
sub
arpl
add
sbb
pop
inc
movs
sahf
mov
sbb
lea
inc
pop
adc
pushf
je
(bad)
jmp
inc
mov
into
add
mov
push
push
mov
pop
pop
pop
nop
cld
sub
lds
int
gs
push
ror
pop
or
mov
mov
mov
mov
pop
cld
jbe
jmp
mov
mov
stos
mov
stos
mov
mov
in
sbb
div
xor
icebp
sub
mov
or
fdivr
mov
inc
loope
jo
sub
hlt
fisttp
fist
mov
lea
(bad)
and
push
push
in
mov
cmp
xor
add
mov
push
sbb
push
mov
adc
pop
lea
adc
ror
push
add
pusha
clc
jnp
cmp
jmp
ins
mov
fs
lock
loop
or
mov
lea
lea
pop
loope
outs
ret
retf
cmp
call
mov
data16
leave
enterw
add
pop
pop
adc
retf
pop
fsubr
push
mov
pusha
dec
jno
sbb
aam
arpl
xor
adc
mov
loope
jnp
jne
mov
push
aam
adc
stc
push
aam
out
cmp
and
hlt
mov
mov
push
xor
ret
or
ret
cs
or
mov
cmp
or
push
mov
pop
push
ins
mov
icebp
pushf
xor
mov
pushf
jns
in
cmp
xchg
xchg
pop
mov
mov
and
mov
add
mov
cmp
jae
lock
jl
mov
daa
or
adc
aas
inc
lods
inc
pop
pop
les
jne
repnz
les
adc
retf
pop
(bad)
mov
mov
rcr
pop
jle
fwait
nop
xchg
push
rcr
mov
ror
(bad)
cmp
std
mov
mov
enter
aam
cs
xchg
int3
int3
retf
retf
dec
cs
leave
inc
sub
enter
push
fistp
xchg
xchg
cld
push
das
aam
movs
adc
xchg
movs
push
cwde
xchg
pop
(bad)
mov
inc
ror
rol
repnz
push
pop
ret
xchg
lea
call
jbe
push
add
repnz
(bad)
jns
pop
(bad)
int3
sub
and
dec
add
cld
adc
out
mov
or
jmp
mov
pop
fdivrp
mov
stc
ret
mov
push
jmp
sub
dec
jo
or
jle
jo
and
inc
out
sbb
arpl
(bad)
mov
dec
(bad)
mov
cwde
aas
jmp
fwait
cwde
jmp
xchg
lods
in
pushf
lock
daa
pop
add
iret
imul
or
aas
ret
nop
loopne
pop
loopne
out
mov
adc
setg
retf
clc
mov
cld
add
movs
fiadd
xchg
nop
retf
xchg
fstp
add
xchg
push
or
and
clc
clc
add
and
pushf
sbb
sub
ret
pop
dec
push
push
sbb
shl
dec
add
jbe
mov
pop
adc
push
push
fimul
push
ins
inc
sub
imul
iret
lock
pop
jmp
mov
push
push
inc
or
push
cld
clc
cmp
jbe
stos
xor
adc
jbe
aad
dec
jnp
fsubr
push
push
push
imul
mov
dec
aas
mov
ds
sub
xchg
mov
pop
adc
in
clc
and
popf
and
mov
inc
dec
mov
loopne
sbb
xchg
mov
data16
das
std
je
mov
adc
int3
mov
cmp
fcomp
lea
pop
push
pop
cmp
into
sar
push
lea
fwait
mov
push
loope
push
sub
retf
mov
add
push
aam
into
mov
ret
lea
jo
sub
ret
dec
mov
int3
hlt
adc
dec
ins
cli
das
dec
push
aam
cmp
bound
inc
call
dec
adc
(bad)
push
sti
retf
mov
repnz
mov
scas
push
push
cld
mov
sub
and
jae
fmulp
xchg
add
and
cmc
cmp
in
je
call
inc
xacquire
pop
aas
test
pushf
enter
(bad)
mov
aas
pop
add
nop
pop
or
jb
inc
dec
aam
xchg
je
jge
or
cmp
or
push
leave
test
ja
dec
movs
sub
mov
push
cwde
xor
mov
cmp
fcmovnb
mov
mov
ins
jle
(bad)
or
aas
sbb
mov
lods
aas
pushf
cs
outs
inc
push
inc
or
pushf
sbb
lods
add
and
pushf
pushf
les
mov
pop
sub
pop
std
jns
or
pop
test
mov
pop
in
inc
psrld
mov
or
daa
adc
(bad)
jl
xchg
xchg
cmp
sbb
mov
test
sbb
fisub
mov
out
fs
jmp
fild
nop
sub
xchg
xor
sub
push
xor
(bad)
sbb
icebp
(bad)
jbe
in
out
mov
pop
xor
repz
or
pop
ret
aas
jb
retf
adc
xor
add
sbb
mov
inc
mov
lahf
push
cdq
in
movs
movs
inc
dec
sub
rcl
or
push
fdivr
mov
push
pop
pop
pop
jb
in
pop
push
push
dec
sbb
gs
pop
pop
push
enter
pushf
pushf
pusha
sub
ins
pusha
and
jns
ds
cmp
stos
ret
or
xchg
push
fiadd
not
and
sahf
mov
add
and
out
pop
mov
mov
lock
ret
loopne
push
(bad)
cmp
inc
add
out
nop
lock
or
(bad)
sbb
or
out
mov
in
jbe
push
sub
sbb
jne
inc
aad
mov
ror
std
jne
mov
mov
adc
ror
jne
push
je
sahf
adc
add
add
(bad)
xor
cmp
aad
std
or
mov
mov
imul
test
mov
enter
xchg
(bad)
mov
push
mov
fisttp
pop
add
mov
adc
out
jbe
adc
cmp
in
inc
or
(bad)
mov
pop
std
cmps
xor
xor
fistp
imul
inc
mov
push
in
add
ins
mov
lea
pop
addr16
clc
xor
dec
out
push
fcom
sub
xor
outs
mov
add
xchg
and
test
pop
mov
nop
sbb
mov
rol
dec
nop
mov
xor
in
ror
lea
dec
rcr
inc
sbb
test
mov
push
mov
repz
xchg
jo
lea
mov
or
es
xchg
in
lea
jno
add
add
cmps
xor
adc
jg
cmp
push
jmp
inc
and
popa
mov
ret
mov
out
xchg
ja
lods
ret
pop
(bad)
fmul
pusha
test
sbb
test
mov
jl
loopne
and
clc
daa
cmps
test
ret
add
loope
xchg
push
xchg
test
scas
hlt
sbb
fbstp
ret
inc
mov
xor
push
push
sbb
adc
aas
push
rcl
lods
fadd
dec
imul
in
(bad)
data16
mov
lea
dec
test
cmp
sar
dec
xchg
jg
push
push
fldcw
rcr
les
leave
sahf
mov
add
dec
sar
mov
cmp
inc
mov
mov
cwde
mov
enter
mov
jmp
push
pop
xor
rcr
lea
pop
xchg
das
or
jl
lods
xor
push
movs
cwde
lods
test
popa
leave
test
cld
je
pusha
sub
mov
xchg
jg
jne
cwde
jo
sub
sar
push
je
xchg
js
xchg
jl
xchg
jo
loopne
xchg
call
xchg
xchg
pop
out
in
mov
xchg
fs
dec
in
mov
cdq
mov
pop
xchg
nop
xchg
mov
and
mov
or
pop
jle
pop
and
pushf
sbb
mov
cli
icebp
push
cli
pop
mov
out
add
cmp
(bad)
push
ret
inc
push
sbb
mov
mov
movs
(bad)
xchg
test
xchg
lods
xchg
mov
xchg
mov
xchg
mov
cmp
daa
das
mov
sbb
leave
add
enter
cld
push
or
pushf
ret
and
add
mov
cmp
inc
cmp
jl
fcmovnu
mov
pop
cmp
sub
add
xor
cmp
jb
or
push
outs
and
rcr
jo
int3
push
stos
or
and
jns
or
cmp
push
imul
or
in
mov
pop
test
addr16
push
cdq
test
push
cmp
adc
push
dec
sub
jo
mov
jp
pop
sbb
add
fsub
push
jns
fild
imul
or
cmps
mov
jo
call
inc
and
cwde
inc
jmp
lods
sub
adc
adc
rol
and
adc
add
xchg
push
mov
and
mov
or
jl
push
fnstenv
pop
mov
ror
cwde
jg
push
sti
push
lea
mov
jbe
repz
es
adc
adc
sbb
(bad)
jp
sbb
(bad)
and
add
movd
(bad)
es
inc
loop
pushf
jo
fwait
push
rcl
ins
or
pop
rol
push
jo
add
mov
pop
and
sub
push
lods
jle
je
jb
pop
push
ret
pop
sbb
xor
pop
cmp
adc
xor
adc
pop
mov
or
and
scas
push
dec
lahf
icebp
inc
sub
jne
mov
add
sbb
adc
xchg
xor
sar
stc
sbb
test
test
aam
inc
fsub
mov
mov
mov
sub
adc
repz
in
inc
fcompp
(bad)
(bad)
(bad)
loopne
enter
sbb
mov
(bad)
mov
xlat
mov
outs
or
pop
fistp
mov
adc
fdiv
loopne
pop
(bad)
repnz
nop
aam
in
aam
xchg
xchg
xchg
adc
and
cmp
xchg
adc
int3
jp
clc
adc
adc
add
retf
xchg
add
rol
sub
mov
fsub
fdivr
jbe
imul
je
cmp
xor
or
test
xor
sub
sub
call
arpl
loopne
jno
push
cli
(bad)
(bad)
aas
cmp
movzx
or
hlt
jmp
push
ds
outs
sub
sbb
jmp
sub
adc
sub
push
das
xor
lods
pop
xor
sbb
lock
or
mul
pusha
mov
fistp
mov
repz
loopne
nop
adc
push
push
push
iret
repz
sub
xor
cmp
cmp
dec
pop
pusha
outs
mov
jle
adc
add
inc
and
add
add
add
push
pop
or
or
or
mov
adc
(bad)
std
setnp
adc
or
lods
mov
stc
out
das
call
adc
stos
mov
cmp
mov
cmps
cmps
mov
stos
mov
jmp
pop
stc
mov
fbld
fisttp
imul
xor
sub
mov
(bad)
cmp
mov
stos
cmp
xchg
jg
cmp
cmps
stos
inc
je
inc
mov
inc
mov
mov
pop
sub
and
je
je
cmp
nop
dec
dec
push
mov
rcr
mov
mov
mov
sbb
dec
adc
dec
jo
fbld
int
xchg
mov
cld
in
out
mov
mov
mov
mov
js
mov
jl
sbb
xor
and
pusha
pusha
pusha
sbb
pop
ins
or
inc
push
test
or
or
cmp
xchg
sbb
xor
pushf
mov
or
lahf
pop
xor
xor
nop
xchg
dec
push
push
push
cmp
mov
daa
mov
addr16
out
mov
mov
mov
cmp
rol
out
cwde
inc
int3
or
rcr
iret
fimul
aam
cmps
arpl
cmps
mov
dec
xor
and
rol
ss
pusha
jmp
nop
inc
push
cmp
call
icebp
lock
sbb
aas
cs
clc
sbb
aas
cld
mov
nop
or
loopne
mov
pop
dec
pop
loopne
(bad)
nop
and
loopne
loopne
mov
mul
pop
and
mov
add
movs
mov
call
sbb
enter
sbb
repnz
xchg
mov
mov
(bad)
sub
mov
add
jl
sbb
sbb
sbb
push
xor
nop
inc
push
cmp
aas
ret
add
mov
dec
mov
(bad)
aas
jle
xor
xchg
mov
xor
push
inc
push
sbb
in
call
mov
mov
adc
cmps
mov
repz
xor
add
jae
enter
dec
push
lock
std
mov
je
fstp
movs
mov
(bad)
shl
jnp
or
jg
hlt
cmps
and
sbb
ins
ins
dec
enter
sti
test
sbb
loopne
outs
jb
and
loopne
sahf
adc
test
adc
enter
movs
test
mov
fbstp
mov
push
movs
movs
inc
xchg
push
inc
(bad)
mov
enter
adc
mov
jl
adc
movs
mov
fmul
enter
mov
(bad)
(bad)
cmp
cmp
or
mov
bnd
cmp
mov
loope
js
hlt
stos
js
adc
add
cld
mov
jns
rcr
fsub
fmul
jo
cmp
pop
loope
jae
and
loope
cmps
daa
mov
stc
or
mov
cmps
mov
inc
pop
dec
jg
sbb
sbb
add
fucom
jmp
inc
xchg
jb
sbb
and
data16
xor
mov
cmp
int3
push
(bad)
mov
xor
leave
enter
sbb
jb
xchg
dec
dec
xor
loope
adc
sbb
jmp
inc
pop
je
add
mov
mov
loope
mov
es
dec
and
xor
cs
cs
mov
movs
ret
push
adc
in
cmp
movs
iret
loope
ret
sbb
stc
mov
lods
adc
push
pop
(bad)
sbb
fadd
or
leave
add
inc
pushf
pop
mov
call
mov
mov
ja
sbb
popf
push
adc
mov
cld
push
lea
icebp
inc
cmp
xchg
push
jmp
shr
sbb
xchg
in
scas
sub
inc
ins
jnp
fistp
sub
mov
je
pop
repnz
and
or
cmp
pop
push
aad
das
jl
fistp
adc
mov
push
sub
je
dec
je
jl
(bad)
push
pop
jne
test
jmp
(bad)
pushf
jmp
movs
in
frstor
xchg
push
add
and
sbb
pop
jl
push
jmp
(bad)
cmp
jbe
lea
lock
adc
lea
and
daa
push
or
ret
add
push
jb
mov
dec
lock
es
test
xchg
(bad)
dec
sub
in
mov
dec
add
sbb
sbb
test
mov
jg
push
pop
jecxz
push
dec
test
lods
adc
enter
inc
bound
mov
add
push
pop
dec
rcl
pop
cmp
daa
push
retf
lods
cmc
js
lds
fidivr
xor
inc
jno
repnz
dec
mov
or
mov
sar
scas
aam
dec
int3
fsubr
arpl
jmp
and
in
test
add
push
fadd
lods
or
mov
enter
fsubr
mov
xor
cmps
push
cld
popf
jne
xchg
inc
pop
dec
inc
push
sbb
push
sbb
outs
xor
lea
jp
push
sub
dec
adc
xchg
(bad)
mov
and
ds
leave
inc
sbb
mov
adc
mov
movs
ss
cmp
cld
jge
mov
js
leave
je
cmp
jbe
mov
mov
mov
or
push
push
jl
aad
and
add
xor
xchg
dec
cmp
push
inc
or
div
xor
mov
cwde
mov
mov
cmp
jne
lods
jg
mov
cmp
xchg
jmp
pop
xor
in
or
add
lahf
adc
or
sar
pusha
or
xor
mov
mov
outs
in
pop
nop
mov
xchg
je
add
inc
jl
mov
mov
lock
(bad)
sahf
or
mov
sbb
movs
js
mov
pop
xchg
push
push
sub
xchg
mov
mov
(bad)
cmps
and
pop
std
and
scas
shl
mov
lea
out
xor
sbb
test
inc
dec
mov
and
mov
dec
push
mov
push
inc
sbb
call
push
lea
add
mov
and
loopne
add
and
fisttp
out
jne
or
sub
fwait
nop
sub
into
aam
rol
jae
out
xchg
aas
nop
pop
lahf
jmp
push
pop
(bad)
jnp
and
or
mov
xchg
jl
nop
xchg
mov
ror
mov
mov
neg
js
call
pandn
lock
add
nop
pop
(bad)
shr
fstp
sbb
mov
retf
pop
dec
sbb
pushf
mov
movs
stc
mov
movs
into
test
stos
pushf
pushf
out
std
bound
aaa
or
retf
cld
ret
jae
lods
mov
xchg
dec
int3
mov
mov
dec
or
mov
push
adc
add
and
xchg
pop
(bad)
repnz
cwde
xchg
enter
popf
int3
sahf
jl
add
rcl
fwait
aam
xchg
in
jg
es
sbb
xchg
xchg
cdq
stc
xchg
aas
jnp
xchg
nop
call
adc
loopne
in
and
xchg
dec
jae
inc
shl
cmp
in
or
xchg
in
inc
push
hlt
clc
cld
pop
(bad)
fistp
add
adc
or
cdq
or
cmp
pop
nop
inc
icebp
cmp
adc
xchg
sbb
rcl
lock
xchg
or
das
lock
nop
out
mov
loop
cmp
inc
push
loop
loop
loop
inc
(bad)
ins
push
xor
xchg
cmp
in
cdq
xchg
cmp
lea
inc
(bad)
sbb
daa
dec
xchg
xchg
or
mov
jmp
jmp
bts
jg
lahf
push
mov
xchg
xchg
adc
into
aam
pop
fcomp
in
sub
pusha
jmp
push
test
jmp
mov
xchg
xchg
int
pusha
xlat
ins
xchg
mov
ja
pop
fucomip
fs
fs
cld
jne
or
xor
adc
shr
xchg
fs
test
sbb
je
je
idiv
jg
clc
jne
or
mov
sbb
mov
xchg
cwde
iret
xchg
lea
jl
nop
enter
mov
test
sub
mov
hlt
add
pop
out
xchg
xchg
adc
std
mov
push
jae
or
add
(bad)
scas
jns
cdq
(bad)
call
sbb
push
add
std
(bad)
movs
mov
xchg
xchg
call
adc
jno
push
in
aam
movs
call
fs
popf
int3
xchg
popf
call
aas
loop
jmp
add
push
xor
in
push
mov
mov
adc
jg
xchg
retf
fdiv
pushf
push
dec
jmp
or
jmp
jmp
xor
sbb
add
xchg
retf
pop
jb
(bad)
in
and
sbb
stos
in
in
xchg
fs
ud1
hlt
jg
test
in
or
out
and
adc
clc
fwait
cmp
aam
adc
add
xchg
iret
cmp
pop
jecxz
fwait
xchg
mov
cld
mov
lock
xchg
fdivr
jle
das
ret
ss
or
rcl
sub
(bad)
jecxz
jg
xchg
fidivr
ret
int3
aas
xchg
dec
fcomp
mov
cwde
fwait
xchg
popf
sbb
and
and
pop
xor
xchg
clc
out
sbb
fimul
xchg
and
fwait
cdq
xchg
or
xchg
aas
cdq
sub
xor
jg
mov
xchg
and
aas
shl
div
xor
mov
stos
int
xchg
mov
xchg
add
mov
jl
xor
adc
or
jle
mov
in
int
cwde
xchg
jg
sbb
pop
jecxz
jmp
into
(bad)
pop
aas
enter
lock
pop
fwait
add
call
fs
mov
leave
and
mov
fadd
les
into
cmp
jecxz
xor
ret
lods
fwait
sete
push
pushf
fucomip
ja
rcl
je
dec
adc
iret
in
repnz
into
xchg
mov
adc
stc
out
dec
daa
test
sbb
out
pop
add
stc
fst
sbb
xchg
and
je
ret
(bad)
mov
imul
xchg
cwde
jecxz
xchg
jmp
xchg
adc
popf
inc
xor
movs
adc
and
cmp
mov
ds
mov
adc
dec
inc
sahf
popa
jg
sub
jne
jg
mov
xchg
dec
pop
icebp
rol
sub
push
call
mov
inc
mov
mov
enter
int3
cdq
ins
and
sahf
ror
daa
aam
mov
fsub
xchg
sbb
in
adc
xchg
in
add
es
xchg
mov
pop
pushf
mov
pop
pop
movs
sbb
aam
in
lds
lock
xbegin
pop
mov
(bad)
cmp
push
jbe
in
or
pop
sbb
or
xchg
adc
xchg
sub
or
jg
xchg
sub
jg
mov
cdq
lods
jb
mov
xchg
xor
lahf
aam
and
or
jg
lea
sub
aam
sub
ss
cmp
ja
and
shl
outs
adc
adc
aaa
aaa
mov
fistp
sahf
sbb
in
sbb
xchg
jno
inc
dec
xchg
dec
push
push
cmps
lea
movntsd
mov
popf
xchg
cwde
pusha
popf
mov
ret
fs
sbb
adc
out
nop
cmp
call
in
inc
cld
mov
adc
ins
enter
cld
addr16
jo
test
xchg
ffreep
mul
jl
mov
adc
inc
call
inc
retf
lea
jmp
ins
in
ins
and
pop
pushf
mov
sbb
mov
and
cwde
jecxz
movs
(bad)
cmp
es
push
(bad)
dec
dec
and
in
in
xchg
cmp
(bad)
pop
in
in
in
mov
adc
aaa
adc
mov
mov
dec
clc
adc
mov
push
jmp
(bad)
mov
pusha
adc
xor
out
mov
mov
xlat
int3
ins
jmp
dec
(bad)
add
mov
cdq
fimul
mov
push
xrelease
push
mov
jnp
lea
cli
pop
jbe
or
xchg
and
jmp
fldcw
fisub
adc
dec
and
mov
lea
xchg
mov
push
cmp
push
mov
push
push
lods
aad
push
cdq
fdiv
push
rol
and
pop
cs
cmp
inc
dec
sbb
pxor
cmp
sbb
mov
or
push
cmc
cdq
or
enter
inc
(bad)
mov
lds
mov
test
xor
pop
mov
mov
pushf
pushf
pushf
in
pushf
inc
sahf
cmp
(bad)
in
in
es
dec
mov
rcl
mov
dec
cwde
fcmovne
lea
cwde
or
aam
int3
xor
xor
xchg
fstp
rcl
adc
enter
xchg
shl
fbld
int
movs
jne
jmp
fcomp
fsubr
fcom
fimul
stos
call
ror
xchg
jp
(bad)
lock
jg
hlt
push
xchg
jg
mov
inc
mov
mov
sti
dec
mov
mov
mov
dec
clc
dec
out
xchg
mov
adc
inc
or
xor
cli
les
fsub
in
clc
in
stc
mov
lds
(bad)
jmp
int
leave
inc
fisttp
sub
or
inc
add
add
add
add
adc
leave
out
movs
cli
and
ret
sbb
mov
and
call
hlt
pop
jmp
pushf
sbb
test
(bad)
push
mov
push
sti
mov
jg
mov
push
add
adc
mov
mov
mov
mov
pop
cmps
dec
ror
(bad)
aas
into
push
or
into
push
icebp
pop
(bad)
fmul
retf
push
push
shl
hlt
sbb
data16
js
fdiv
push
ror
dec
push
add
inc
hlt
xchg
push
xchg
mov
pop
ret
or
or
pop
push
or
jg
inc
mov
push
pop
mov
xchg
inc
dec
inc
mov
sbb
fucomip
ret
movs
sbb
js
push
adc
mov
fld
push
fisubr
xor
jmp
fimul
dec
dec
add
rol
add
loopne
add
lahf
hlt
push
rol
xor
jmp
mov
xor
sub
icebp
sar
cmp
jne
pop
mov
cmc
xor
push
pop
inc
ins
sub
inc
push
jno
xor
inc
dec
push
dec
push
jp
je
inc
or
mov
push
mov
mov
clc
push
inc
and
xlat
push
lea
push
push
push
(bad)
out
shl
int3
adc
fistp
pop
add
ret
jae
mov
int3
outs
mov
sub
(bad)
sub
and
inc
in
es
enter
shl
or
jmp
data16
jo
push
shl
(bad)
and
or
xor
sar
outs
jg
adc
je
mov
mov
adc
add
inc
mov
mov
inc
js
pushf
cmp
push
inc
ret
add
cmp
pushf
lea
jb
add
or
or
sbb
lahf
jo
sub
add
sub
loop
or
dec
pop
jmp
ret
xchg
mov
sub
test
jne
or
inc
push
push
mov
jb
pop
int
repnz
push
ficom
push
loopne
push
js
or
fld
in
cmp
pop
xchg
js
add
pop
mov
sub
mov
pop
or
jge
push
push
or
or
pop
push
add
push
push
push
add
cmp
jg
mov
sbb
add
dec
xchg
icebp
mov
pop
fs
or
mov
hlt
(bad)
aas
pop
sub
push
rcl
dec
lods
fnstenv
sub
js
adc
inc
xor
mov
sub
std
xor
adc
dec
movs
pop
xchg
xchg
stos
cli
cmp
je
and
xchg
jae
sub
push
pop
adc
or
mov
mov
sar
nop
pop
inc
adc
dec
adc
inc
or
shl
inc
xchg
jmp
xor
lock
adc
push
adc
or
mov
cmp
dec
jae
push
inc
jp
inc
jae
pushf
mov
or
mov
bound
sti
jae
clc
push
push
outs
call
sub
cmp
jae
lea
icebp
lock
push
push
js
pop
add
ret
sahf
adc
mov
jbe
in
iret
and
jbe
or
cmc
mov
xor
push
fld
or
dec
jb
shr
sub
jne
mov
sub
enter
hlt
dec
mov
pop
sbb
mov
aas
push
push
push
push
push
sti
sbb
dec
push
jb
js
outs
inc
mov
inc
shl
cmps
push
mov
cmp
xchg
add
pop
sti
(bad)
cmp
jb
sbb
ins
add
sub
add
sbb
and
cmp
mov
fimul
in
je
shr
sub
add
scas
or
sar
jae
pop
mov
mov
shr
fist
jmp
icebp
mov
sbb
aam
fiadd
pop
outs
rcl
pop
mov
outs
cmp
ret
xchg
lea
push
rol
sar
mov
shr
retf
shl
rcl
jmp
sbb
das
sbb
out
add
cmp
and
cmp
and
cld
psubd
sub
cmp
jbe
dec
sbb
cmp
je
dec
mov
in
mov
mov
pop
pop
inc
sub
inc
jae
sub
add
pop
test
cwde
add
je
push
pop
adc
xor
mov
inc
(bad)
or
mov
inc
pop
fst
js
adc
rol
pop
mov
ins
jg
mov
xchg
ret
or
jmp
cmp
xchg
pop
add
sar
mov
pop
pop
mov
(bad)
push
mov
inc
jmp
inc
add
push
cmp
ja
push
jo
dec
mov
(bad)
and
or
sbb
add
int
jbe
sar
js
sub
add
mov
sbb
sbb
add
pop
ss
push
pop
(bad)
rcr
cld
add
push
loop
js
call
daa
mov
(bad)
jo
jne
and
inc
or
jmp
cdq
fsubr
lahf
mov
cmps
jge
not
cld
pop
sub
pop
jg
and
movs
retf
nop
cli
ret
adc
fadd
cs
ror
ja
je
int
movs
mov
cld
fisttp
sahf
out
daa
aad
sub
xor
(bad)
les
dec
push
psadbw
or
mov
or
lods
push
call
cmc
push
or
add
push
jmp
mov
dec
push
sbb
dec
cmp
aas
icebp
add
in
inc
pop
out
fdiv
sbb
(bad)
cmp
jbe
daa
pop
push
in
cmp
fcom
pop
cmp
sub
push
push
test
punpcklwd
sbb
retf
add
sub
sub
cmp
dec
call
loope
xorps
add
mov
add
add
ror
aaa
or
rcr
adc
cmp
div
lds
ficom
imul
add
or
dec
push
pop
rol
xchg
xchg
or
or
daa
push
inc
lods
push
mov
add
pop
push
movs
add
push
dec
bound
sbb
retf
sbb
pop
neg
lea
push
add
add
sti
or
jmp
and
and
push
sub
jnp
ss
aaa
aas
(bad)
xor
push
movs
movs
pop
xchg
imul
scas
pop
mov
xchg
cli
cpuid
ss
push
repz
xchg
cwde
adc
cmp
adc
or
push
fsubr
dec
mov
mov
clc
pop
sahf
enter
leave
push
cmc
push
mov
sub
cmp
push
mov
push
pop
mov
rcl
nop
xchg
js
push
mov
or
ret
ja
nop
push
pop
inc
test
or
push
xor
enter
hlt
sub
or
jmp
and
fist
push
call
into
cli
jno
bound
push
push
mov
cmp
add
xchg
push
movs
ret
lea
and
add
push
mov
js
sar
rol
mov
inc
or
cmp
push
inc
pop
lock
mov
pop
mov
lahf
push
dec
lock
cmp
or
test
jle
in
adc
adc
or
inc
or
adc
cli
sub
adc
sti
mov
scas
sbb
push
adc
push
inc
pop
push
sub
add
and
fs
out
jb
jne
or
retf
push
mov
adc
add
cld
xchg
dec
test
push
movsx
push
add
push
int3
mov
es
push
sub
cdq
call
stos
test
sbb
or
in
ud1
das
mov
or
inc
lods
jmp
mov
mov
inc
ret
hlt
jge
push
jmp
push
mov
sbb
daa
mov
mov
push
ins
add
out
jmp
adc
sub
xor
nop
jbe
mov
dec
cli
dec
add
shr
push
mov
mov
pushf
jmp
lea
xor
adc
inc
in
jmp
jge
sub
loopne
shl
push
sbb
pop
div
sbb
jg
pop
out
dec
ins
inc
test
adc
je
call
ror
and
pop
stc
daa
js
cld
xchg
dec
je
or
xor
movs
push
retf
dec
daa
outs
dec
(bad)
ins
jne
fwait
push
popf
movs
add
push
push
sahf
imul
jo
inc
or
repnz
pcmpeqw
xor
xchg
mov
cld
movs
and
pop
push
lock
lock
pop
and
pop
jecxz
or
inc
mov
jmp
push
push
xor
push
push
ins
and
lock
add
sub
call
lea
mov
xor
xchg
dec
aad
adc
mov
mov
and
enter
push
adc
pop
adc
dec
fst
add
push
push
leave
adc
mov
add
(bad)
cmp
into
sbb
and
nop
(bad)
jg
rcr
sbb
or
jb
adc
(bad)
push
adc
adc
xor
jmp
call
gs
push
fcom
or
push
fwait
push
dec
fs
sub
sbb
mov
inc
mov
cmps
movs
add
sbb
cmc
push
jp
icebp
jecxz
cdq
xor
sqrtps
shr
dec
clc
jp
mov
ja
in
test
in
adc
push
push
pop
or
ja
mov
or
adc
xor
sub
mov
push
hlt
ins
sbb
jg
movzx
ins
add
push
add
in
mov
add
add
add
in
in
add
add
push
push
pop
pop
mov
(bad)
sbb
in
shr
push
enter
jns
int
add
test
iret
push
aam
daa
xchg
xor
mov
sub
dec
inc
mov
js
sub
in
sub
xchg
add
cmps
scas
jp
es
jle
in
in
xchg
mov
push
push
mov
rcl
lahf
sbb
adc
lock
lahf
daa
cmp
push
push
adc
adc
sub
xor
mov
and
mov
ret
in
imul
repz
push
ins
pushf
mov
jl
pop
push
inc
gs
fwait
clc
nop
cmp
pop
push
pop
mov
stos
fiadd
mov
int3
and
and
int
push
out
out
push
out
stos
dec
sub
add
mov
and
sbb
xchg
movs
sar
or
mov
scas
repnz
inc
or
mov
rol
scas
mov
in
pushf
je
and
push
push
mov
adc
iret
std
cmp
or
div
push
add
mov
cmp
in
in
cmp
cmp
sbb
mov
nop
or
(bad)
inc
nop
or
fs
or
push
or
nop
or
dec
inc
push
mov
adc
sbb
jo
mov
sbb
sbb
ret
pop
rcr
(bad)
sar
push
jno
mov
lods
cmp
pop
stos
sub
rcl
in
mov
add
iret
sar
retf
jo
ins
or
pusha
lahf
jg
or
add
test
cdq
arpl
out
mov
icebp
sbb
mov
fwait
icebp
cmp
ja
pushf
je
call
pop
fadd
cmp
cmc
pop
mov
cli
add
adc
outs
sbb
mov
bound
push
cdq
inc
movs
mov
sbb
lock
outs
icebp
fs
inc
dec
sbb
ret
repnz
pusha
enter
jmp
enter
arpl
add
gs
popw
test
mov
ret
aas
lea
xchg
pop
test
jle
jae
sbb
call
mov
mov
test
je
cmp
ja
sub
cld
dec
(bad)
jl
pop
mov
pop
mov
mov
lahf
jg
in
cmps
jmp
jmp
jmp
pop
repnz
xchg
jmp
jmp
jmp
jns
leave
dec
jmp
xor
jne
jns
jo
jno
repz
mov
cmps
mov
dec
adc
push
push
out
sbb
or
test
call
mov
mov
add
push
pop
je
rcr
or
call
add
cmp
inc
jge
cmps
or
cmps
push
push
and
push
dec
rcr
(bad)
fmul
fidivr
push
add
jnp
shl
mov
cmp
add
push
xor
pop
popa
xchg
push
inc
add
and
ror
sbb
and
movs
sahf
aam
sbb
dec
pop
je
out
cmps
clc
popa
or
addr16
mov
adc
fcom
lahf
leave
mov
jns
add
push
add
add
cmp
shl
enter
mov
sbb
adc
inc
xor
inc
jae
add
lods
test
(bad)
dec
jns
bound
int3
push
sbb
xchg
and
adc
mov
inc
jne
sub
dec
retf
rol
movs
cmp
mov
jmp
and
sbb
dec
pop
dec
push
lock
ja
into
popa
test
andnps
ficomp
(bad)
int3
cmp
mov
push
push
xchg
pop
cdq
and
cdq
mov
bswap
lea
sbb
cmps
mov
repz
nop
xchg
movsx
(bad)
mov
or
ins
aam
cmp
dec
add
jb
push
mov
jae
aas
mov
call
clc
mov
dec
dec
lea
(bad)
imul
int3
push
out
push
into
int
nop
(bad)
jmp
imul
sub
call
cmp
push
inc
jne
cmc
sub
or
pop
aad
in
cmps
pop
pop
or
push
sbb
repz
or
sbb
shr
pop
pop
fcomp
inc
fistp
sbb
fist
sbb
aad
sbb
or
inc
or
inc
dec
iret
inc
repnz
ret
jbe
push
inc
(bad)
mov
jmp
sti
pop
and
sub
adc
or
add
ins
mov
repnz
adc
pop
call
adc
xchg
jnp
xor
jg
cld
hlt
cmp
and
dec
push
cmp
outs
jle
divps
push
into
mov
pop
cmp
(bad)
push
test
cli
push
cld
pusha
push
inc
out
ja
jmp
jmp
mov
cld
adc
(bad)
mov
sti
push
lea
bswap
jae
mov
xchg
xlat
shl
pop
mov
fs
add
sbb
test
call
(bad)
pushf
dec
or
adc
fs
dec
pop
pop
popf
ret
cmps
and
(bad)
adc
call
(bad)
fsubrp
jb
sbb
ror
mov
das
clc
fs
mov
cli
push
mov
mov
sub
shl
add
dec
call
cmp
adc
xchg
fidiv
cmp
push
scas
inc
push
jmp
push
mov
xchg
jmp
std
or
push
repz
xor
jns
pushf
push
xor
sub
outs
int
add
or
push
or
lea
imul
and
inc
mov
push
mov
ret
arpl
dec
or
js
idiv
je
(bad)
push
mov
test
xlat
xor
std
cs
sbb
push
pop
and
xor
sti
push
js
jmp
jnp
mov
mov
jp
pop
and
scas
push
pop
(bad)
push
sbb
hlt
stc
pop
mov
adc
(bad)
mov
pop
push
mov
loopne
movs
jg
dec
add
mov
add
inc
mov
adc
jl
cmp
cmp
ja
add
sub
add
cmp
retf
clc
(bad)
jmp
retf
adc
mov
mov
cmp
je
add
dec
jne
retf
test
ror
adc
sbb
sbb
es
dec
jne
pushf
adc
cmps
or
cmp
aaa
imul
inc
je
sub
lods
adc
dec
push
rol
cli
or
lock
jmp
fistp
(bad)
call
mov
iret
dec
cld
push
inc
push
mov
sub
xchg
mov
fimul
rol
fisttp
push
inc
inc
call
test
inc
int3
inc
test
in
jge
pop
inc
das
iret
outs
add
adc
pop
sub
ins
jl
retf
push
inc
pop
pusha
nop
push
cld
sub
sbb
inc
lock
or
or
mov
push
or
mov
and
jecxz
je
shl
sbb
push
add
jae
xor
test
es
inc
or
retf
xchg
add
push
xchg
or
mov
out
adc
fimul
push
sbb
xchg
add
push
push
add
or
cmp
adc
jge
mov
inc
push
mov
stos
push
fadd
sbb
and
sbb
push
pop
mov
clc
push
clc
fist
pusha
int3
jns
sbb
and
mov
inc
push
in
aad
inc
or
jne
pop
push
popf
test
std
dec
fiadd
pusha
mov
aaa
nop
mov
xchg
jle
es
pop
pop
(bad)
dec
shl
adc
dec
inc
jmp
rol
add
xor
push
ret
dec
test
push
(bad)
xchg
fidivr
cmp
xor
pop
inc
inc
stos
xchg
and
pop
loopne
dec
inc
pushf
loop
push
cmp
js
jl
mov
pop
mov
imul
mov
jb
sub
(bad)
and
cmp
adc
cmp
mov
add
dec
test
or
into
and
push
sbb
mov
mov
sub
push
add
cmps
dec
sbb
sbb
nop
mov
pop
addr16
xor
mov
mov
and
inc
(bad)
xor
xor
int
xor
test
aad
mov
shl
mov
ror
ins
aad
jne
repnz
jge
movs
jle
fs
push
lea
jbe
xchg
jno
lods
out
jp
jb
pop
jmp
fcomp
push
mov
adc
rcl
cmps
icebp
cmp
jge
and
pop
iret
mov
test
jmp
test
mov
add
mov
fwait
pop
push
mov
lods
int3
in
es
add
pop
add
in
or
and
call
adc
adc
fadd
push
xlat
sub
jl
jl
iret
jnp
and
outs
jae
mov
sub
pmulhuw
aas
(bad)
and
iret
cmp
jge
jge
push
push
adc
fidiv
cmp
retf
adc
mov
or
jo
out
pop
mov
lahf
dec
neg
or
ret
mov
adc
popa
test
mov
fisttp
and
inc
call
(bad)
call
add
ja
stos
mov
mov
jp
jmp
in
push
or
push
sub
add
test
or
test
sbb
xchg
add
cmp
int
mov
jmp
inc
xchg
cmp
cmps
ss
push
push
enter
mov
into
cdq
loopne
std
push
pushaw
xor
ret
lahf
add
lahf
mov
and
push
fisub
sbb
jmp
ins
in
ja
inc
pop
or
sbb
call
push
or
push
std
and
arpl
inc
pop
add
push
shl
lock
rcr
outs
mov
lock
invd
mov
into
or
in
not
xchg
cmp
push
and
mov
dec
add
dec
icebp
pop
sub
clc
xchg
or
pop
cwde
sbb
sbb
adc
or
cmp
xor
je
xor
or
or
mov
inc
es
mov
pop
adc
mov
shl
sar
sbb
pushf
rcl
pop
pusha
dec
int3
add
fidivr
sub
aaa
add
lahf
cmps
inc
add
mov
xchg
and
or
jge
adc
in
inc
loopne
inc
mov
inc
fdiv
rol
cmp
push
or
mov
mov
jo
lea
fisub
and
jno
push
xor
or
and
dec
or
mov
rcr
mov
js
inc
neg
push
jl
sbb
(bad)
je
or
xor
(bad)
xchg
jmp
sahf
sahf
add
add
repnz
xchg
mov
xor
mov
fs
movs
rol
shl
jb
jb
push
or
lea
xchg
in
imul
scas
add
pop
or
cmps
or
or
and
mov
push
add
push
mov
fild
cmps
xor
shl
or
lea
in
jbe
popf
scas
mov
inc
push
push
aam
cmp
(bad)
aas
mov
sub
xchg
stos
movs
and
repz
mov
cld
xlat
lock
jmp
adc
add
sahf
mov
add
pop
pushf
mov
loop
pop
jae
pop
pop
jmp
xor
ss
sti
push
aas
test
or
mov
out
in
or
xchg
xchg
or
xchg
adc
xchg
(bad)
and
xchg
pop
in
sbb
pop
test
mov
nop
inc
pop
cmp
cmp
fld
xchg
jne
imul
sti
xchg
mov
in
xchg
cmp
sbb
jne
lahf
jl
sbb
rol
inc
repz
mov
xchg
dec
leave
dec
dec
cli
xchg
xchg
push
(bad)
cmp
sbb
js
nop
adc
xchg
mov
cli
pusha
jmp
into
xchg
cmp
xchg
ins
in
retf
imul
in
je
dec
and
je
es
and
fiadd
(bad)
xchg
fild
pop
pop
mov
jo
dec
jo
push
cmp
inc
mov
xchg
nop
out
and
xchg
lock
sahf
add
rcl
cs
sti
jns
mov
add
nop
fild
mov
pop
imul
jmp
cmp
leave
inc
pop
push
sbb
(bad)
test
ss
int3
clc
pop
shl
push
mov
mov
cs
fs
lods
fmul
fadd
push
shl
in
lahf
in
std
call
repnz
lock
fsub
ins
hlt
fdiv
jmp
push
mov
cmps
out
add
add
jl
push
push
cld
pop
pusha
jne
or
dec
add
ret
lock
or
out
(bad)
adc
out
mov
sbb
arpl
and
xchg
and
jae
and
out
add
fs
cmp
pop
pop
sbb
enter
xor
(bad)
jl
retf
out
out
cmp
xchg
xor
add
out
dec
sti
sub
aas
mov
jne
pop
jae
xlat
sub
push
out
js
sub
out
pop
repnz
in
out
pusha
arpl
bswap
sub
out
push
daa
cmps
retf
lahf
push
jne
push
int
lock
jo
pmaxsw
out
add
out
mov
mov
repnz
sub
sahf
mov
or
sahf
out
jbe
sahf
popf
mov
cmps
or
push
mov
rcr
aas
push
jne
or
nop
pop
retf
or
dec
sub
push
sbb
test
daa
mov
pop
mov
adc
out
nop
out
xchg
inc
cmp
mov
jl
dec
jb
jne
dec
dec
lods
fisub
sbb
push
js
mov
mov
mov
cmp
fucomi
mov
and
hlt
in
in
jnp
int3
aas
enter
call
stc
rol
int3
repz
aam
jl
int
or
fsubr
loopne
cmp
and
push
jl
stc
dec
ret
leave
inc
inc
xor
leave
push
pop
or
cmp
dec
sahf
pushf
aas
out
hlt
out
clc
out
cld
retf
in
fwait
and
cmp
enter
add
sub
add
or
add
out
adc
adc
popf
sti
xor
out
sbb
stc
cs
cmp
cmp
sbb
xor
cmp
sub
sub
push
fidiv
xor
out
sbb
enter
xor
call
int
cmp
inc
dec
ins
nop
push
inc
cmc
shr
fsubrp
in
imul
xor
push
push
or
cmp
pop
pop
repnz
pop
pusha
push
test
fs
dec
cdq
in
dec
sub
test
(bad)
movs
sbb
je
adc
popa
daa
js
adc
fs
in
adc
repnz
xor
nop
movs
repnz
aas
xchg
push
mov
lea
sub
repz
mov
movs
and
push
mov
test
sbb
rol
or
ror
jb
jmp
nop
data16
pusha
int3
mov
in
fsubr
fsubr
mov
dec
inc
loopne
icebp
call
ret
ja
and
push
cmp
or
mov
pop
cmp
cmp
jle
and
aas
and
clc
push
pop
cld
xor
lock
gs
or
cmp
out
arpl
mov
imul
sbb
test
clc
dec
sbb
addr16
cmp
lock
and
mov
sbb
out
inc
dec
lods
pop
addr16
mov
jns
or
jne
sbb
enter
inc
pop
arpl
pushf
stc
out
push
icebp
int
stc
xchg
loopne
jg
adc
imul
pusha
popa
cmp
inc
fs
push
fmul
lock
and
mov
jl
jns
mul
mov
enter
jl
test
xchg
inc
call
mov
nop
pusha
repnz
ror
neg
dec
movs
adc
push
mov
cmc
pushf
mov
mov
movs
test
lods
lock
push
cmp
test
repnz
jo
mov
mov
shl
dec
stc
stos
mov
and
cmovbe
pop
enter
das
pop
inc
int3
sar
rol
aam
neg
cmp
fdivr
dec
xor
jecxz
in
dec
daa
dec
jle
call
stc
inc
mov
inc
(bad)
in
push
cmp
xchg
js
(bad)
ret
cld
lock
add
icebp
add
cmp
or
add
icebp
adc
adc
inc
leave
xor
sbb
imul
sbb
jmp
ds
sub
xchg
xor
cmp
xor
xchg
cmp
push
jns
cmp
cmp
bound
lock
inc
push
inc
lock
adc
pop
(bad)
stc
mov
adc
minps
and
daa
icebp
dec
test
jbe
or
mov
mov
aas
fwait
clc
add
movs
jns
pop
push
push
pop
cli
sar
xor
inc
cmps
push
dec
std
push
push
ins
clc
addr16
mov
jbe
jno
icebp
fdivr
add
dec
add
jmp
mov
loop
push
outs
sahf
pop
push
and
pusha
add
and
mov
xchg
scas
mov
adc
jo
push
test
popf
and
je
in
lock
hlt
add
jmp
inc
or
inc
or
(bad)
shl
push
sbb
inc
adc
lahf
and
xor
je
out
movs
pusha
dec
xor
daa
inc
out
and
fwait
dec
movs
dec
rcr
or
sub
sar
das
mov
stc
push
xor
mov
cdq
jge
sar
lock
les
xchg
out
std
xor
aam
fcomp
call
in
lock
inc
add
in
mov
add
adc
mov
sub
cmp
retf
in
inc
dec
push
push
pusha
jb
pop
cs
xchg
idiv
test
jne
push
fwait
xchg
xor
cwde
daa
or
dec
in
test
jg
lods
(bad)
mov
ja
shr
dec
xor
mov
test
clc
stc
es
lahf
dec
cld
movs
dec
or
adc
dec
cld
and
movs
lods
test
and
shl
fistp
pop
addr16
push
sub
pusha
fdiv
nop
jb
pxor
xchg
retf
in
mov
jb
pop
fcomp
loopne
xchg
xchg
xchg
retf
lock
dec
add
dec
mov
adc
sbb
xchg
retf
in
sub
cmp
inc
jb
pop
cs
push
pop
shl
in
xor
pusha
mov
movs
lods
test
mov
stos
push
fisub
in
lods
mov
es
ror
(bad)
rcl
ja
movs
(bad)
fsubr
in
out
sbb
cld
add
push
push
jbe
adc
ds
dec
adc
sub
pop
sub
cmp
cmp
mov
in
jl
and
xchg
mov
retf
test
mov
jb
int3
rcr
loopne
pop
cs
in
hlt
clc
dec
add
mov
dec
or
sbb
xchg
retf
in
sub
xor
retf
in
pop
inc
dec
mov
mov
xchg
pop
pop
and
out
jl
(bad)
mov
mov
adc
cdq
mov
fcomp
dec
add
dec
pop
lock
fcmove
aaa
sbb
sub
je
sub
es
mov
add
dec
js
jne
mov
push
inc
aas
ins
or
aas
test
push
jns
jle
xor
xchg
cwde
pop
sub
movs
test
dec
in
mov
mov
rol
int3
rcl
in
fcomp
loopne
xchg
retf
jae
call
pop
jns
cs
dec
add
dec
or
or
adc
sbb
mov
and
test
cs
retf
cmp
sahf
retf
movs
jb
dec
dec
push
cwde
ficom
gs
inc
pop
aas
push
fs
movs
es
fs
mov
xor
inc
dec
or
pop
sbb
inc
push
pop
pusha
dec
mul
mov
xor
xchg
je
je
test
in
mov
xchg
retf
jae
pushf
mov
repnz
cs
dec
mov
rol
cmp
cs
in
aam
fdiv
in
jae
push
call
sub
xchg
clc
cld
dec
add
sbb
jb
lods
dec
or
adc
mov
and
sub
xchg
retf
xor
cmp
in
mov
dec
push
push
mov
(bad)
pop
inc
pop
pusha
dec
lds
fs
xchg
dec
cmps
adc
dec
es
mov
cmp
clc
dec
or
mov
xor
xor
pop
iret
in
jns
jo
js
loopne
jb
jl
test
sub
movs
cs
retf
lods
mov
mov
enter
jb
pop
sahf
int3
mov
fcomp
pop
sub
in
lock
iret
in
hlt
pushf
cld
dec
add
sahf
xchg
add
or
retf
jae
sbb
and
in
pop
cs
je
mov
inc
inc
ins
dec
cs
in
push
push
pop
fs
ret
jae
push
fs
fwait
xchg
jo
je
test
xchg
lods
rcl
and
adc
cmp
and
js
xor
cmp
inc
mov
xchg
out
dec
pushf
mov
mov
mov
mov
pop
sahf
retf
int3
shr
fcomp
sub
and
lock
pop
hlt
clc
adc
add
iret
retf
add
or
or
gs
push
sbb
mov
jns
xchg
retf
xor
sahf
retf
movs
jb
inc
inc
dec
call
push
push
pop
pop
mov
fs
aaa
ret
(bad)
je
js
xor
mov
pushf
mov
fsub
jns
and
dec
add
fs
dec
sub
setbe
fs
mov
mov
cwde
mov
xchg
mov
cmp
dec
in
mov
in
mov
nop
jae
push
cs
in
pop
cs
retf
jl
hlt
clc
cld
gs
repnz
dec
add
or
pop
sub
sbb
xchg
retf
and
sub
xor
jb
cmp
inc
test
dec
cmp
pop
sub
xor
retf
pop
jo
sub
cs
add
push
loope
lds
mov
leave
and
enter
xchg
dec
push
dec
add
sub
dec
es
inc
push
push
jl
dec
xchg
dec
cwde
mov
pushf
mov
movs
xor
retf
jae
adc
mov
pop
les
shr
fdiv
xchg
out
call
mov
lods
pop
cld
dec
add
dec
or
iret
gs
or
adc
sbb
jae
push
and
mov
xor
cmp
cmp
dec
in
dec
dec
push
test
in
mov
mov
ins
jo
js
cs
retf
xchg
add
mov
nop
inc
xchg
cwde
ficom
pushf
mov
dec
es
fs
repnz
hlt
push
or
dec
xor
and
pop
in
stc
ds
mov
(bad)
fsubr
cs
retf
gs
add
cmp
xchg
arpl
idiv
aaa
(bad)
das
cmp
pop
or
sub
ror
shr
xchg
out
aam
pop
in
dec
in
pop
lock
clc
cld
pop
ds
push
add
push
or
adc
sahf
dec
in
cmp
and
xor
jae
pop
xor
inc
sub
jns
xchg
dec
dec
push
and
push
cs
movs
pusha
push
adc
mov
push
mov
repnz
nop
adc
push
mov
push
mov
test
leave
and
dec
mov
push
xor
push
or
dec
es
fs
pop
push
test
sbb
lods
push
mov
mov
mov
xor
(bad)
enter
xchg
retf
call
xchg
dec
in
fsubr
in
lock
repz
add
xchg
dec
mul
push
or
xor
push
mov
sub
push
cs
xor
xchg
retf
jae
mov
in
pop
pop
cwde
pusha
fs
mov
xor
iret
in
xor
retf
jae
nop
xchg
ins
pushf
mov
movs
test
sar
mov
adc
xor
and
aam
cld
fs
dec
push
push
adc
xchg
dec
es
dec
pusha
je
es
mov
out
mov
enter
stc
xor
fsub
repnz
cs
xor
mov
hlt
clc
sub
retf
mov
repnz
add
or
sbb
pop
cs
adc
sbb
or
dec
in
sub
xor
shl
push
mov
cs
retf
xor
push
pop
pop
retf
movs
jb
lock
sahf
jo
js
sbb
test
mov
mov
test
jb
lods
shl
mov
jns
and
adc
fs
dec
es
cmp
dec
es
push
fs
es
mov
pop
sbb
enter
rcl
pop
cs
mov
fsub
in
xchg
dec
in
test
hlt
clc
cld
mov
mov
xor
or
cs
retf
mov
adc
in
pop
and
sub
push
mov
je
inc
push
cs
in
dec
ins
push
pop
xchg
retf
jae
pop
pusha
fs
cs
pop
jl
cmp
dec
add
push
xchg
cwde
pushf
dec
movs
retf
jae
push
test
mov
add
xchg
mov
adc
enter
in
xchg
mov
add
dec
es
sbb
dec
es
fs
push
xchg
nop
movs
mov
test
push
aam
fcom
retf
jae
sub
xor
test
xchg
hlt
clc
cld
sub
retf
retf
or
or
adc
call
and
xchg
dec
in
sub
xor
cmp
push
mov
dec
mov
call
xchg
retf
jae
fsubr
dec
in
pop
js
add
les
pushf
mov
retf
jae
mov
mov
shl
pop
cs
enter
cmp
pop
es
mov
adc
cdq
fs
dec
xor
xchg
dec
es
adc
rcr
push
in
call
mov
clc
cld
sbb
add
repnz
or
push
adc
push
cs
sbb
sub
xchg
retf
jae
push
xor
cmp
in
pop
inc
inc
dec
dec
push
mov
cmp
pusha
push
cs
in
push
retf
jae
js
sub
mov
xchg
dec
pushf
mov
iret
in
mov
mov
mov
add
pop
cs
aam
fsub
(bad)
adc
in
call
mov
and
dec
pop
dec
es
fs
cwde
es
fs
lods
rcl
out
out
sub
push
hlt
push
cld
mov
add
push
or
xor
pop
sbb
and
jns
xchg
sub
mov
movs
cmp
inc
mov
xchg
out
test
pusha
in
pop
sub
mov
je
jl
xchg
sahf
retf
movs
jb
mov
test
test
pop
sub
mov
ins
(bad)
enter
movs
jb
pusha
fcomp
loopne
test
in
lock
mov
sbb
clc
nop
repz
adc
push
adc
dec
mov
add
sbb
cmp
outs
or
jb
sahf
out
mov
sbb
in
fsubp
inc
pop
jns
or
das
fld
pop
cmp
sbb
retf
push
adc
mov
sub
mov
dec
sub
pop
out
mov
jo
(bad)
fsubp
pop
mov
mov
add
nop
add
or
loop
lods
push
adc
mov
pop
(bad)
inc
mov
lahf
mov
add
or
ins
mov
sbb
aas
push
push
xchg
mov
je
scas
sbb
inc
cld
js
fdivr
daa
scas
mov
addr16
mov
sbb
cmp
cmp
xchg
mov
je
add
and
and
push
and
and
inc
jo
je
inc
and
pop
js
add
pop
push
mov
imul
add
aaa
sub
xchg
pop
dec
int3
out
dec
add
or
or
iret
jnp
repz
add
rcl
push
adc
ins
push
xchg
push
out
cmp
inc
and
add
lock
xlat
popa
push
rcr
fcomp
xchg
jbe
push
in
mov
sub
xchg
sbb
or
adc
mov
dec
pop
or
mov
sbb
mov
pop
dec
cmp
sbb
or
cmp
sbb
or
pop
sbb
pop
push
cwde
cmp
push
pushf
push
add
mov
add
mov
jmp
stos
rcl
in
or
mov
lods
test
enter
mov
inc
scas
inc
and
lds
jne
jne
out
and
or
call
int3
mov
push
push
pop
lods
lea
fidivr
cmp
int3
mov
(bad)
add
dec
cld
push
mov
sbb
pusha
popa
mov
dec
mov
push
lock
shl
or
clc
pusha
sbb
dec
jnp
adc
scas
adc
sub
push
or
fisubr
add
or
and
and
pop
adc
ins
xchg
add
daa
cmp
sbb
adc
leave
shr
push
xor
in
or
adc
out
fsubp
mov
mov
imul
or
push
ja
push
into
or
and
adc
jns
test
jg
jle
pop
rcl
aaa
mov
in
ja
jne
pushf
sub
(bad)
cld
aam
push
sbb
pop
sub
aam
in
sub
sub
in
mov
sbb
mov
test
or
pop
push
jne
dec
pop
ret
push
test
push
rcr
or
mov
fs
pop
gs
sbb
sahf
mov
js
ins
push
jns
jl
push
loope
sahf
out
mov
push
test
sub
adc
das
xchg
xor
adc
sbb
mov
and
sbb
adc
jmp
adc
xor
push
movs
ret
call
inc
push
sub
fwait
push
(bad)
push
clc
cmp
mov
mov
pop
icebp
rcl
fdivrp
adc
mov
mov
lock
sub
mov
push
ins
xor
xor
js
adc
push
enter
pop
add
push
gs
jbe
icebp
aam
aaa
push
mov
pop
iret
cmp
fwait
cmp
and
push
mov
xchg
out
les
(bad)
adc
arpl
or
pop
inc
in
imul
in
or
in
bsf
dec
add
mov
std
call
movs
mov
in
mov
add
sbb
iret
xchg
out
cmp
adc
fsubr
lock
adc
repnz
movs
mov
sahf
(bad)
les
repnz
cmp
push
push
les
inc
shl
inc
cmp
push
leave
cmp
popf
cmp
retf
add
das
fsubr
bound
scas
std
sbb
imul
or
push
out
or
lock
mov
add
or
pop
aam
adc
(bad)
jg
aas
pop
add
into
lods
inc
les
inc
lods
add
loope
xor
add
popa
dec
inc
inc
cs
outs
sub
pushf
jecxz
in
sbb
fs
popa
or
cmp
jo
out
clc
pop
lock
push
add
push
add
hlt
add
rol
fidiv
push
or
add
mov
fld
fcomi
fadd
inc
gs
sti
lea
ja
push
mov
adc
aas
ss
je
push
cmp
add
in
add
stos
test
mov
sbb
inc
ja
mov
test
fadd
xchg
dec
sbb
and
enter
je
sbb
enter
aaa
sbb
xlat
test
neg
sbb
xchg
dec
popf
xchg
loopne
or
data16
dec
lods
cmp
xchg
xchg
sub
inc
adc
out
cmp
inc
or
add
repz
aam
and
and
fdiv
adc
dec
dec
leave
push
xor
and
loopne
nop
pop
mov
sub
enter
sub
loopne
and
imul
es
mov
iret
int
jl
lods
push
loopne
inc
les
sbb
push
push
xchg
or
xchg
and
leave
push
dec
dec
test
adc
jne
sbb
enter
call
adc
push
pop
call
imul
fs
push
mov
cmps
inc
mov
imul
push
pop
add
mov
sbb
add
lea
mov
cli
mov
retf
mov
fmul
or
jns
mov
jnp
cmp
mov
adc
jge
xchg
mov
mov
xor
push
lods
arpl
in
adc
add
clc
mov
add
cs
sbb
sbb
fsub
mov
shl
add
es
ror
mov
mov
hlt
jne
cli
leave
mov
js
jl
xchg
fimul
cmp
test
sub
test
push
sbb
nop
mov
ss
mul
movs
mov
or
fild
mov
out
mov
mov
movs
xor
pop
icebp
js
call
aaa
push
fwait
in
push
aam
(bad)
fdivr
retf
jg
fcom
rcl
(bad)
retf
xlat
loopne
(bad)
(bad)
icebp
in
pusha
mov
mov
test
or
xchg
xchg
push
jecxz
mov
call
xor
mov
pop
mov
stos
sbb
fcmovnbe
pop
adc
xor
addr16
out
div
aaa
cld
xchg
jg
or
bnd
jmp
aaa
mov
stc
stc
std
sahf
or
xchg
test
jg
xchg
push
push
pop
fmul
jg
jns
fdiv
add
in
icebp
cli
adc
std
jmp
xlat
repz
stc
or
sahf
pop
mov
add
xor
lahf
jl
xor
repnz
repnz
adc
mov
rol
loop
retf
sub
ror
xchg
adc
sti
xchg
pop
mov
mov
call
retf
in
repnz
into
xor
pop
repnz
adc
and
add
cmp
and
pop
pop
repnz
push
scas
movs
jb
push
enter
pop
lahf
adc
pop
mov
mov
jmp
ins
ror
xor
jge
mov
pop
nop
cmp
cmp
and
push
mov
ret
pop
cmp
mov
imul
cmp
add
in
and
cmp
or
push
add
pop
inc
sbb
inc
dec
cmp
mov
push
jecxz
and
dec
fdivr
xchg
mov
mov
cli
(bad)
xchg
pop
add
sub
inc
or
cmp
out
cmp
push
inc
lock
shr
dec
dec
in
cmp
xor
add
mov
fbld
or
sub
(bad)
lods
inc
xchg
dec
adc
jo
push
gs
xor
imul
or
(bad)
mov
or
or
cld
and
mov
push
ss
dec
jecxz
(bad)
adc
jne
mov
(bad)
mov
sbb
or
xchg
dec
and
pop
add
adc
(bad)
pop
stos
jae
inc
lock
xor
sub
push
lea
sub
in
push
out
mov
popa
fdiv
neg
push
sbb
ja
push
adc
inc
icebp
jbe
call
sbb
xor
adc
leave
leave
inc
add
shl
adc
lock
sub
dec
or
mov
pusha
mov
lock
mov
in
cmp
mov
sub
cdq
dec
es
or
fs
dec
fimul
add
dec
mov
and
int3
cmc
lds
movs
dec
add
lea
sub
adc
dec
xorps
and
sub
rol
test
ins
push
adc
mov
outs
test
sbb
adc
add
mov
ja
jg
stc
sub
add
or
jnp
fdivr
sub
push
sub
cmp
dec
pop
mov
leave
cmp
mov
sub
dec
es
and
inc
mov
mov
and
adc
inc
add
cmp
adc
test
mov
sub
push
sub
sbb
test
dec
jne
sbb
sbb
shr
pop
jg
icebp
mov
dec
pop
adc
movups
push
sbb
data16
push
push
jmp
loope
nop
and
dec
aaa
mov
sub
lea
jne
push
adc
push
(bad)
mov
push
test
cdq
push
cmp
and
cdq
dec
es
dec
add
fs
mov
adc
cs
es
push
or
shl
and
test
scas
fiadd
adc
cmc
adc
or
pop
cmp
sbb
enter
push
or
ss
mov
or
sar
out
sub
and
or
les
imul
shl
fdivp
push
xor
dec
cwde
sbb
xor
sbb
cmp
loop
xor
cmps
cs
add
sbb
pushf
mov
mov
mov
sbb
dec
xor
adc
push
adc
adc
adc
aam
js
mov
ret
sub
xor
repz
repz
xor
and
pop
out
or
sub
adc
sbb
cmp
lock
sbb
jl
or
ins
movs
les
inc
fdiv
pop
sbb
or
stos
sub
shr
cmp
cli
ror
imul
dec
or
data16
js
xchg
data16
add
cmps
add
add
imul
add
bound
iret
cdq
stos
pop
mov
bound
mov
test
int
call
ror
lock
lea
add
add
mov
and
add
fs
ins
or
add
loope
mov
lea
adc
dec
or
dec
shr
dec
out
adc
test
aas
jo
retf
jne
shl
mov
scas
and
inc
repnz
and
not
cwde
adc
repnz
mov
add
sar
xchg
icebp
cmp
add
lock
sbb
pop
cmp
xchg
pop
sub
cmp
jbe
or
jl
inc
jle
call
xor
xlat
sbb
pop
in
add
and
jg
enter
and
mov
js
fs
dec
cmp
(bad)
hlt
movhps
jl
fstp
sti
jne
mov
jmp
pop
(bad)
nop
mov
fnstcw
icebp
adc
and
fisttp
pusha
cld
mul
mov
mov
push
push
jecxz
(bad)
jmp
and
adc
repz
stos
and
sub
test
push
(bad)
or
stos
or
jge
scas
push
push
retf
adc
mov
leave
mov
cmp
adc
dec
and
xor
mov
mov
xor
pop
and
adc
mov
(bad)
mov
mov
out
outs
mov
mov
push
and
loopne
mov
xchg
cmp
hlt
sbb
sbb
rol
pop
(bad)
xor
(bad)
mov
stc
(bad)
mov
and
push
lea
mov
pop
pop
sub
pusha
add
dec
loopne
jl
hlt
push
scas
pop
and
pusha
cmp
test
inc
add
and
add
test
je
pop
leave
pop
add
add
pop
add
xchg
add
cld
push
enter
push
and
add
pop
mov
sub
sbb
pusha
fild
cmp
fistp
mov
xchg
fiadd
(bad)
adc
sub
test
dec
cmp
call
inc
or
sti
dec
enter
sbb
push
jbe
call
xchg
xor
imul
int3
and
test
push
mov
mov
ins
les
pop
inc
xchg
fdivr
push
xor
sub
sub
adc
or
ja
cmp
test
js
sub
push
or
std
cdq
mov
push
mov
push
and
test
dec
sahf
or
dec
pop
sub
repnz
add
sub
xchg
add
cmp
aad
xor
imul
xor
pcmpeqb
push
add
retf
jnp
mov
fmul
sahf
mov
dec
aam
lock
xor
mov
pop
xchg
mov
adc
sbb
or
sub
or
sbb
scas
cld
sbb
push
push
add
pop
js
jns
mov
and
bound
fs
outs
dec
and
cmc
adc
maskmovq
test
sbb
fmul
mov
ins
xor
cmp
movs
pop
aam
or
rol
stos
add
add
cdq
push
cmp
adc
sbb
test
adc
push
inc
push
mov
cwde
push
inc
adc
cmps
add
adc
and
mov
pop
test
je
xchg
call
fcomi
fwait
mov
xlat
mov
mov
or
lock
mov
mov
imul
inc
lods
push
mov
repz
mov
shr
pushf
out
sub
sbb
mov
add
push
push
add
out
das
(bad)
jne
mov
neg
sti
jmp
push
mov
pop
shl
retf
pop
pop
pop
mov
pop
mov
push
mov
mov
pop
fwait
imul
push
or
mov
pop
pop
fiadd
and
cli
push
(bad)
repnz
jmp
jmp
pop
jbe
icebp
jmp
sahf
pop
mov
mov
nop
mov
les
jg
cmp
fcomip
pop
(bad)
repnz
in
icebp
in
test
mov
cmp
mov
in
sti
cli
nop
div
dec
pusha
mov
mov
icebp
pushf
sbb
mov
stc
mov
sti
movs
inc
dec
push
sbb
cld
test
std
jmp
and
or
cmp
lods
fild
push
mov
mov
mov
jp
mov
lods
test
int
mov
mov
xchg
dec
gs
in
in
xchg
mov
in
test
leave
dec
(bad)
test
lods
mov
mov
mov
gs
cs
mov
sub
call
aas
movs
scas
movs
stc
pop
jg
mov
rol
rcr
addr16
(bad)
rcl
in
jg
(bad)
(bad)
xlat
int3
rcr
ret
icebp
clc
jmp
inc
mov
shl
std
(bad)
inc
(bad)
fyl2x
in
ds
loopne
ret
out
jmp
stc
in
push
(bad)
in
mul
ret
std
lds
std
adc
fldpi
add
or
(bad)
in
mov
jge
in
fs
ret
lahf
mov
mov
test
(bad)
(bad)
std
cld
out
retf
sbb
sub
sbb
or
xchg
mov
adc
inc
pop
and
sbb
and
mov
inc
cmp
xchg
test
std
cmp
xor
lock
fisttp
cli
mov
mov
dec
xchg
or
sbb
test
xor
out
(bad)
push
pop
lock
in
push
nop
dec
stc
sbb
cld
test
cmp
dec
add
imul
mov
adc
int
adc
(bad)
and
in
repz
cli
repz
shr
xchg
repz
das
mov
aas
ds
pop
pop
sbb
sbb
pop
ret
aas
dec
sahf
add
icebp
cmp
cmp
adc
add
jle
lea
loope
loope
cmp
jne
inc
add
enter
mov
std
int3
or
ins
adc
rcl
sbb
xchg
or
add
or
imul
enter
lock
mov
sub
nop
dec
push
shl
sub
pop
mov
sub
sahf
icebp
add
outs
in
in
push
loopne
mov
cwde
xchg
push
mov
adc
sbb
loopne
rcl
cmc
loope
inc
sbb
in
dec
jae
push
ret
or
stos
push
adc
mov
and
lahf
cwde
cwde
adc
cmp
nop
adc
sbb
mov
nop
adc
enter
mov
xchg
and
sub
xchg
or
and
cmp
jb
nop
nop
xor
nop
inc
push
cmp
mov
pusha
mov
inc
inc
dec
or
inc
jo
xor
and
lods
pop
aaa
mov
mov
inc
test
cmp
xchg
es
jne
push
call
mov
pop
jl
shl
enter
nop
outs
push
sar
movs
jne
bound
pop
clc
cli
jne
sbb
jge
or
std
mov
or
fisttp
add
cmp
jl
hlt
mov
pop
pop
sbb
push
je
sub
shl
clc
(bad)
sti
pop
or
push
mov
fdivr
je
es
jne
jle
rcl
sbb
fiadd
in
out
push
es
or
iret
sub
ins
xor
je
imul
jne
lock
add
push
adc
mov
int
mov
adc
imul
mov
mov
cmc
mov
push
add
add
push
or
xor
(bad)
cmp
int
sub
nop
dec
sahf
xor
sub
fstp
call
xchg
add
(bad)
les
adc
cmps
cmp
jle
or
jge
sbb
sbb
and
ret
in
(bad)
jg
pop
adc
(bad)
jnp
dec
mov
test
js
push
in
fist
je
mov
mov
pop
mov
ds
jge
xchg
push
mov
xchg
cmp
push
movs
sbb
xchg
lahf
and
test
mov
mov
(bad)
mov
xchg
adc
cmp
movzx
push
jb
in
ret
adc
xor
push
push
push
or
das
pop
adc
popf
dec
push
mov
add
lock
popa
cmp
cmp
mov
cmp
pop
mov
movs
cs
dec
cld
mov
pop
out
imul
mov
mov
das
pop
test
pusha
(bad)
inc
inc
add
stos
cld
mov
inc
push
push
push
mov
in
push
mov
(bad)
mov
jl
add
daa
retf
push
lods
inc
jmp
pop
mov
jmp
daa
stc
add
adc
and
in
xor
push
push
sahf
add
hlt
and
mov
push
add
push
(bad)
fisttp
(bad)
rcl
adc
inc
rcl
jo
clc
ret
test
and
mov
jb
adc
and
push
xor
push
(bad)
pushf
and
add
xor
sbb
push
sub
das
add
dec
pop
ret
ja
jo
dec
jnp
dec
jecxz
mov
cmp
pop
cmps
or
or
enter
sbb
xchg
mov
fistp
pushf
xchg
pop
xchg
cmp
cmp
sbb
out
add
cmp
ja
dec
enter
stc
or
cmp
jo
call
mov
cmp
mov
cmp
jle
mov
add
aas
arpl
adc
out
movs
mov
dec
in
jo
ja
adc
inc
mov
int3
and
in
and
xchg
cmps
xlat
stos
mov
push
xchg
repz
sub
pop
jl
jns
cmp
pushf
sub
ret
xlat
sub
mov
xchg
xchg
sub
push
gs
sub
cli
neg
inc
rcr
mov
xor
loopne
xchg
jo
pop
mov
inc
and
call
mov
(bad)
push
mov
push
push
dec
int3
cmp
jl
jge
lahf
or
and
pop
out
sti
xchg
add
mov
xor
push
sbb
movhps
loope
mov
mov
add
pop
inc
mov
mov
shl
call
gs
lahf
add
push
je
ja
xchg
dec
das
pop
xchg
lods
adc
cmps
mov
dec
xchg
push
sub
push
jo
pop
adc
sahf
sbb
push
fild
and
imul
adc
cli
pop
inc
add
pop
pop
pop
mov
fisttp
jg
pop
(bad)
stc
movs
adc
rcr
icebp
push
xchg
mov
cli
retf
in
sti
imul
(bad)
in
sti
in
outs
clc
jo
jno
sti
int
das
iret
gs
cli
jp
mov
enter
push
push
sbb
xchg
cs
add
or
leave
mov
mov
jb
or
xor
lea
xchg
inc
cs
cdq
popf
mov
or
addr16
cmps
pop
stos
mov
fld
sbb
push
scas
stc
sub
push
mov
das
mov
stos
in
adc
out
jmp
in
ret
jmp
in
jge
(bad)
stc
sti
mov
sub
stos
retf
stc
inc
jle
retf
int3
int
lock
ror
div
aad
ds
lds
mov
dec
inc
sahf
inc
mov
mov
xchg
pop
push
adc
pop
fisub
xchg
loopne
repz
jmp
movs
jmp
in
icebp
int
rep
pop
repz
xor
popa
stc
loopne
out
jnp
mov
adc
add
mov
shr
lahf
fmul
ins
jns
aas
push
adc
jns
lahf
shl
and
js
sbb
nop
add
inc
and
add
imul
sub
xor
daa
iret
addr16
fdivr
or
mov
(bad)
addr16
retf
mov
pop
lahf
data16
push
add
add
add
or
pop
mov
push
sahf
or
sub
rcl
dec
adc
mov
add
mov
xchg
sbb
add
je
add
mov
out
pop
test
pop
(bad)
ins
cli
inc
adc
ret
push
cmp
or
pop
clc
adc
test
add
mov
pop
adc
cmp
push
inc
or
jne
imul
mov
cmp
sub
or
fsub
or
push
pushf
sbb
sub
sub
lods
(bad)
shr
imul
mov
push
movs
xchg
push
loope
mov
pop
push
rcl
sub
xchg
sbb
xor
add
out
cmp
jge
es
sbb
jno
imul
mov
je
dec
mov
push
or
dec
and
mov
nop
dec
push
inc
sbb
(bad)
mov
push
imul
sbb
and
scas
int3
jecxz
mov
loopne
sbb
out
or
push
call
or
out
cmp
out
xchg
movs
lods
loope
lods
aaa
out
dec
pop
mov
test
xor
add
les
adc
loop
mov
pop
aam
test
dec
retf
cmp
jmp
and
sbb
in
xor
cmp
movs
repnz
sbb
cmp
nop
and
or
push
and
ins
daa
mov
adc
mov
inc
sub
adc
cdq
sbb
shufps
add
push
lock
or
add
nop
mov
mov
cmp
fbld
sub
je
in
sbb
and
and
pop
aaa
pushf
mov
imul
sbb
adc
push
xlat
mov
or
xchg
sbb
pop
jp
cdq
cmp
or
xor
sbb
mov
fsubr
loope
das
cmp
or
hlt
jns
xchg
mov
hlt
pop
data16
bound
pop
movs
enter
sbb
mov
cmove
and
cmp
and
sbb
sbb
push
jl
pop
inc
loopne
sbb
mov
inc
jmp
lods
push
imul
dec
mov
call
mov
adc
push
mov
js
ret
clc
dec
pushf
lea
idiv
pop
jae
mov
lods
pusha
dec
adc
push
in
and
sbb
ror
ins
ss
dec
mov
inc
and
push
cmp
xchg
xchg
js
mov
add
movs
js
cmps
mov
daa
jmp
push
add
xor
push
inc
push
pop
mov
push
(bad)
lock
lock
pop
cmp
add
stos
mov
add
mov
test
inc
push
sbb
mov
js
inc
xor
pop
lock
xor
add
pop
cmp
ja
daa
add
stos
cdq
cmps
shr
push
stos
xor
int
mov
xchg
sub
fild
and
sub
pop
gs
sub
mov
dec
sub
add
cs
xchg
or
test
pop
sub
adc
push
rcl
xchg
and
xor
sub
xchg
(bad)
std
jnp
dec
mov
sub
imul
enter
push
repz
push
mov
cmp
inc
push
jns
adc
in
push
or
in
push
cmp
push
jle
ds
and
inc
and
and
inc
push
inc
pop
or
enter
push
xor
or
push
sub
adc
mov
aas
adc
into
xchg
inc
div
or
or
adc
mov
xchg
icebp
adc
cli
mov
jp
dec
movs
retf
mov
es
cmc
sti
in
and
hlt
and
mov
sub
push
cmp
daa
dec
arpl
js
js
jle
jnp
mov
shl
xor
inc
or
jb
push
pop
pop
pop
imul
icebp
in
in
sub
sti
div
in
aas
js
ins
xor
sti
mov
icebp
mov
js
lock
sub
inc
inc
lock
(bad)
rol
into
push
in
xchg
jmp
in
out
(bad)
pop
stc
sub
jl
loop
pop
repnz
mov
arpl
hlt
mov
pop
push
push
aas
je
cmps
jo
je
mov
mov
cmps
repnz
jl
hlt
addr16
data16
gs
fs
adc
xchg
push
xchg
push
xchg
or
push
mov
jo
mov
adc
push
xor
mov
std
adc
add
loope
aaa
adc
jp
(bad)
enter
jle
mov
sti
in
xchg
fistp
in
nop
jmp
cs
jmp
in
inc
ins
mov
hlt
mov
pop
retf
hlt
mov
push
and
mov
push
sbb
lahf
mov
cs
(bad)
mov
retf
mov
rol
xor
ficom
cwde
icebp
std
call
pushf
mov
xor
sti
sub
pop
xor
iret
rcl
or
movs
movs
scas
retf
aad
aam
pop
fs
mov
call
in
mov
mov
fdivr
xchg
dec
fdivr
pop
jns
jb
stos
pop
mov
mov
jmp
jmp
repnz
ret
(bad)
mov
enter
int3
aas
int
mov
jmp
push
xchg
addr16
aad
lods
into
fptan
sti
(bad)
fsub
mov
scas
sbb
in
mov
and
pop
test
dec
in
push
cs
push
in
aas
ja
push
stos
mov
in
scas
stos
lods
and
in
in
test
bnd
sbb
pop
pop
sbb
pushf
fisubr
call
push
jne
arpl
add
lock
div
fmul
lods
or
add
enter
or
pushf
pop
dec
stc
fucom
ror
in
adc
add
shr
dec
(bad)
das
jg
stc
sti
mov
or
repz
mov
cld
pop
sub
ret
es
dec
or
cld
aaa
aam
adc
mov
adc
or
cmp
inc
jge
ror
mov
cmc
sbb
sbb
pop
(bad)
jnp
adc
rcl
mov
cli
mov
push
clc
(bad)
mov
push
xor
cmc
xor
out
cmp
sbb
retf
jmp
inc
movs
sub
inc
cld
(bad)
in
(bad)
pop
dec
sub
dec
ins
out
mov
inc
shl
or
scas
mov
retf
cmc
dec
cmc
inc
cmc
inc
cmc
inc
xor
stc
je
inc
daa
jne
xchg
retf
movs
js
ja
pop
fucomip
mov
cmp
dec
mov
push
cmp
pushf
push
xor
push
mov
push
mov
in
jp
adc
pop
pop
sahf
retf
imul
daa
pop
rcl
xor
sbb
mov
mov
mov
mov
cmc
pusha
stos
cmc
arpl
(bad)
cmc
popa
cmc
pusha
push
cs
retf
xchg
xchg
nop
retf
leave
push
mov
xor
mov
fbld
push
xchg
jb
fs
xchg
xchg
movs
jb
xchg
xchg
xchg
dec
push
jns
aas
mov
mov
dec
les
push
or
add
lods
lds
xchg
cmp
scas
xor
push
jecxz
mov
(bad)
add
adc
movs
test
inc
lahf
push
fadd
sub
in
or
fmul
add
adc
loopne
inc
sbb
adc
add
add
add
rcl
nop
jg
fsubr
add
ja
push
adc
sbb
mov
xor
cs
fsub
mov
mov
fs
loopne
pop
fmul
mov
and
jmp
push
xchg
dec
mov
or
adc
jp
mov
pop
adc
movs
push
jge
jb
push
mov
xchg
inc
xchg
dec
mov
mov
movs
sahf
or
jns
mov
into
in
push
push
rcl
fdiv
push
cmp
test
mov
xchg
fcom
push
leave
inc
nop
or
push
cmp
mov
scas
or
sub
sbb
sets
fsub
out
push
xchg
push
adc
mov
hlt
mov
repnz
pop
inc
dec
inc
outs
sbb
dec
sbb
push
aaa
dec
or
ja
nop
bswap
les
scas
movs
inc
rol
retf
movs
fldenv
dec
sahf
aam
(bad)
rcl
enter
int3
xlat
pop
ins
rcl
les
push
push
xlat
adc
add
nop
xchg
aam
int3
cdq
in
loope
add
xor
les
cmps
jb
cmp
xchg
int
push
jo
xchg
mov
in
gs
sbb
push
nop
aaa
lea
and
pusha
or
push
lock
in
test
and
(bad)
(bad)
sub
movs
push
xchg
enter
sub
push
push
sbb
xor
imul
sub
jge
jmp
lea
lods
fidiv
xlat
add
pop
loope
mov
les
cmp
fist
inc
test
or
jbe
push
jae
repz
cmp
pop
inc
push
or
xor
add
add
loope
mov
or
xchg
mov
xor
lods
sbb
pop
add
dec
pusha
shl
sahf
push
iret
adc
fsub
test
es
add
daa
push
cli
mov
sub
mov
lds
ret
mov
mov
fmul
rcr
pop
push
lods
or
out
and
ss
ja
mov
lock
int
ss
adc
push
in
(bad)
ret
les
push
mov
mov
dec
lods
mov
stos
cmp
rol
ss
pop
add
int3
xchg
cmp
fdivr
pop
or
mov
jne
sbb
sub
dec
outs
push
or
rol
bsf
or
add
mov
in
sbb
aas
and
ficom
lock
jl
or
or
cmps
push
fmul
inc
dec
inc
push
jo
adc
or
fmul
and
rcl
add
pushf
mov
retf
push
fadd
movs
xor
pop
sub
test
test
stos
test
push
push
jns
movs
push
les
mov
mov
cmp
xor
inc
shr
retf
outs
sbb
test
icebp
icebp
jae
sub
inc
cmp
jns
xor
jnp
sahf
jae
mov
cli
nop
test
repnz
mov
sti
mov
mov
(bad)
fistp
pushf
ret
jg
mov
nop
inc
push
mov
cwde
leave
and
pop
cdq
popf
mov
movs
movs
test
jb
adc
mov
pop
es
cmps
inc
dec
pop
fbld
jne
and
in
sti
in
in
mov
xchg
jmp
out
inc
push
enter
call
pop
pop
inc
aaa
jns
pop
pop
sbb
sbb
inc
out
(bad)
or
fcomp
bound
or
ret
inc
ds
jg
retf
std
jae
es
int
aad
enter
xlat
imul
dec
dec
jb
out
out
mov
in
in
sti
inc
dec
adc
mov
outs
loop
mov
daa
mov
hlt
std
test
sbb
mov
shr
cld
cmp
xchg
test
sahf
daa
test
add
fist
sub
std
pushf
mov
int
cs
out
fldenv
xor
das
and
and
daa
dec
call
mov
xchg
(bad)
mov
or
imul
repnz
sbb
jmp
or
sub
call
not
inc
sbb
imul
in
push
lds
add
and
aaa
enter
sub
cs
in
xor
add
xor
add
aas
adc
jg
and
div
sbb
aaa
ss
xor
sbb
repnz
retf
dec
lods
or
mov
mov
stos
cmp
jmp
cs
jb
loope
cmp
iret
ret
mov
cs
push
imul
pop
or
lds
cmp
aas
sbb
sbb
inc
inc
inc
dec
inc
cs
xchg
dec
push
push
cmp
push
mov
pop
push
stc
pop
mov
sti
in
fs
gs
imul
leave
and
mov
add
ins
ss
daa
das
jg
jo
je
ins
test
outs
in
add
imul
leave
or
jl
xor
mov
js
test
ret
pop
mov
aas
call
pop
add
mov
nop
jp
stos
jb
mov
call
call
xchg
pop
adc
cwde
inc
xchg
xchg
fldenv
jns
enter
inc
xchg
mov
or
(bad)
mov
outs
pop
call
mov
neg
sbb
pop
imul
outs
jb
xor
cwde
sub
jne
stos
mov
jo
cmp
stos
mov
dec
mov
repnz
call
jb
mov
pop
push
in
mov
add
jmp
xchg
sub
mov
jns
rcl
lds
test
int
iret
icebp
xor
add
rcl
aad
push
sbb
jmp
loope
or
mov
jl
out
das
xchg
cmp
aas
and
adc
pop
ret
sbb
loopne
pop
mov
mov
pop
jb
test
jmp
call
and
mov
adc
movs
repnz
cmps
mov
mov
out
jb
nop
retf
in
in
push
sbb
and
sbb
bound
and
dec
stos
div
or
push
push
xor
lea
cs
push
cmp
add
loopne
mov
gs
or
into
mov
inc
add
add
or
cmp
cmp
lea
lods
and
out
rcr
mov
push
or
dec
cld
inc
clc
dec
sar
push
pop
mov
jmp
pop
fild
pop
cmp
push
clc
cld
mov
sub
sub
sub
hlt
sub
repnz
and
lahf
sub
lock
popf
xor
jb
inc
pop
mov
xadd
lea
cmps
inc
jecxz
xor
pop
fadd
push
movs
inc
pop
cmp
add
or
outs
pop
stc
add
cmp
rol
in
cld
test
sbb
fsubr
mov
loopne
mov
and
xchg
dec
cmp
cmp
test
pop
add
mov
in
mov
pop
cmp
movs
pop
shr
mov
fsub
inc
aam
sbb
dec
or
mov
mov
sbb
repz
or
inc
adc
call
dec
mov
add
pop
mov
fdiv
div
cli
sti
hlt
out
imul
fs
sub
repz
lock
jb
and
mov
call
loope
or
or
adc
adc
pop
and
push
not
mov
pop
jp
sbb
sahf
mov
xchg
mov
cmp
loop
jg
mov
and
xchg
sbb
push
fwait
scas
or
std
data16
add
iret
push
sub
xor
push
lods
mov
sbb
fistp
test
adc
aas
or
cmp
push
mov
pop
add
add
daa
adc
lods
and
lahf
cmp
sbb
out
dec
xor
sbb
test
pop
repz
sub
and
jb
xchg
or
or
sbb
or
or
movs
retf
jmp
adc
into
call
jecxz
ins
cs
xchg
gs
fadd
dec
jae
data16
add
sub
cmps
out
outs
sub
jg
pusha
and
ins
out
push
pusha
loopne
mov
shl
jl
dec
mov
mov
add
xchg
ud0
add
push
fs
ins
cmp
pop
test
push
xor
inc
or
and
jg
nop
std
mov
mov
inc
or
push
xlat
mov
sub
push
dec
push
push
out
mov
add
add
push
or
sub
and
inc
xor
add
inc
jb
in
loope
xchg
jno
jns
call
jae
in
sti
in
not
test
xchg
sub
adc
mov
xchg
retf
or
push
mov
je
pop
xchg
je
push
rcl
rcl
loop
adc
shl
xchg
(bad)
push
dec
or
mov
xchg
scas
mov
sub
push
mov
xchg
in
gs
call
mov
jb
and
mul
jns
jle
sub
mov
sub
cs
jne
push
and
push
cmp
fwait
pop
ret
pop
call
mov
enter
idiv
idiv
xor
(bad)
and
mov
das
ret
inc
aas
test
test
pop
and
inc
push
repnz
call
lds
test
js
pop
call
mov
mov
pop
mov
out
cld
mov
adc
mov
in
push
test
mov
and
and
dec
in
and
and
cwde
icebp
fwait
push
pop
jmp
pop
cmp
dec
adc
mov
mov
mov
or
sbb
jnp
jle
call
sub
iret
nop
or
or
and
mov
cwde
fnstsw
push
nop
ins
and
cmps
or
cwde
add
sbb
xor
pushf
cwde
add
movs
test
fimul
cmp
mov
or
and
movs
xchg
sbb
jecxz
cli
push
(bad)
test
add
call
lahf
push
mov
dec
dec
inc
jge
inc
or
sub
mov
mov
adc
jmp
(bad)
sbb
mov
add
cdq
sbb
dec
ins
jge
or
pop
dec
outs
add
jp
push
add
lea
adc
add
mov
adc
and
test
xchg
repnz
xor
cmp
xor
sbb
push
mov
imul
push
xchg
cmc
fstp
je
mov
jns
xchg
ficomp
es
adc
or
sub
adc
push
mov
(bad)
stc
xor
lods
xchg
(bad)
sbb
dec
xrelease
in
xchg
jne
adc
mov
sbb
nop
mov
bound
mov
push
pushf
loope
ins
test
xchg
cmp
push
inc
sub
popa
dec
test
xor
adc
nop
mov
call
and
mul
and
mov
jmp
mov
shl
jmp
mov
lods
and
xchg
push
sahf
and
and
mov
add
cmp
(bad)
jle
call
and
xor
xchg
scas
or
sub
jo
sbb
jmp
jg
nop
imul
not
in
ds
cmp
mov
add
inc
movs
div
imul
repnz
test
mov
repnz
div
sahf
sbb
mov
cli
mov
and
and
fucom
cmp
test
rcl
enter
pop
int3
in
out
daa
shl
jno
repnz
xor
retf
retf
pop
fcmovnu
imul
sti
loopne
stc
mov
out
in
call
leave
shl
add
in
lock
icebp
jmp
mov
adc
mov
retf
clc
add
cdq
int
into
adc
push
adc
out
(bad)
fdivp
or
or
rcl
adc
repz
adc
lock
sbb
sbb
stos
xor
enter
lock
or
and
push
mov
call
push
or
dec
out
push
adc
shl
pop
lods
leave
sbb
or
das
jmp
add
inc
add
movs
fstp
add
xor
mov
xchg
loopne
xchg
push
jg
les
rol
jg
mov
in
push
jns
add
ins
xchg
(bad)
fist
ret
inc
or
cmp
test
jne
lods
movs
and
fwait
mov
stc
push
jmp
push
xor
mov
adc
inc
loopne
sahf
mov
out
adc
xchg
out
mov
inc
add
push
call
or
mov
cwde
aaa
scas
shr
adc
adc
sub
pop
inc
push
sti
mov
jno
inc
aam
pop
xlat
cmp
or
mov
aas
arpl
push
sbb
jp
ins
je
push
or
mov
test
inc
or
call
xlat
push
call
adc
inc
inc
mov
mov
xor
outs
pusha
in
inc
mov
or
xchg
xor
inc
js
add
test
les
mov
cmps
bound
sub
and
mov
mov
imul
adc
in
adc
add
mov
aam
fsubr
int
call
xchg
sub
inc
add
mov
sub
sub
xor
xchg
dec
or
inc
out
arpl
cmp
xor
cwde
mov
xor
adc
add
loopne
mov
jae
movs
addr16
lahf
call
and
jmp
das
(bad)
cld
and
jmp
sahf
jns
ins
jno
pop
pop
and
mov
or
vmwrite
pop
cwde
or
bound
(bad)
pop
loope
pop
push
es
aas
imul
bnd
sub
mov
in
add
add
pop
jbe
in
add
add
fs
mov
inc
cs
xor
sub
cmc
mov
sub
out
cs
clc
das
or
mov
pop
cli
and
mov
adc
mov
sbb
mov
pop
sbb
data16
add
clc
add
push
push
xchg
mov
push
push
mov
and
std
pop
inc
je
push
(bad)
mov
sbb
mov
dec
into
aam
xor
jne
or
aaa
xchg
add
pop
dec
mov
xor
jle
(bad)
sahf
lea
(bad)
and
mov
or
cmp
cmp
push
pop
dec
jmp
mov
setbe
les
or
data16
push
mov
pop
lods
iret
call
pusha
ins
dec
fsub
out
hlt
pop
jb
xlat
(bad)
jne
cmp
jne
xchg
xchg
in
out
mov
and
outs
fs
cmovs
inc
add
sub
cmp
or
dec
sahf
inc
(bad)
sub
push
mov
xor
dec
xor
dec
fdivr
xchg
mov
call
sahf
add
loopne
and
xor
jns
push
addr16
push
outs
fimul
addr16
mov
push
xor
sti
cmp
stos
lea
sahf
ja
mov
mov
xor
sahf
ins
add
stc
or
xor
add
or
xor
pusha
pop
bound
aad
movs
sbb
push
das
mov
in
cmp
and
shr
test
iret
push
je
mov
or
xor
cmp
adc
add
leave
inc
mov
repnz
sbb
cmp
(bad)
xchg
call
adc
adc
pop
and
cs
(bad)
rcr
mov
movs
mov
push
leave
jae
adc
adc
and
stc
mov
mov
enter
call
or
mov
fcomp
pop
mov
inc
push
retf
and
retf
ror
in
add
and
movs
inc
jb
int
dec
test
jae
jno
sub
inc
icebp
dec
aaa
cmc
push
mov
push
xlat
sbb
xlat
or
scas
in
xchg
pop
dec
sbb
xchg
mov
add
inc
mov
and
sbb
pop
inc
xor
xchg
sbb
cmp
add
dec
fidiv
mov
popa
sbb
pop
pandn
pop
js
cmp
sbb
adc
jo
scas
lea
pusha
in
iret
ds
sti
push
push
and
ins
scas
add
cld
xchg
inc
rol
mov
ror
sub
dec
and
(bad)
fist
push
mov
inc
or
lds
test
xchg
xchg
inc
or
pop
into
inc
mov
bound
pop
bound
pop
lea
and
inc
icebp
push
add
inc
jo
inc
aam
js
shl
jmp
inc
jae
icebp
rcl
push
add
add
dec
inc
add
rol
xchg
imul
fiadd
sub
inc
loopne
jo
das
(bad)
sbb
fbld
xor
das
(bad)
cld
icebp
clc
clc
sti
mov
clc
cmp
clc
cmp
cmp
aaa
sar
and
or
sbb
lahf
int
lea
data16
and
pop
shr
pushf
ds
push
xor
cmp
xchg
retf
pop
mov
ins
xchg
xchg
das
jne
lahf
cwde
cwde
sbb
sbb
inc
jno
bound
jo
jg
outs
inc
mov
addr16
or
inc
jmp
sub
xchg
dec
clc
clc
clc
and
sub
and
jmp
lahf
nop
out
sub
dec
dec
mov
dec
in
jmp
dec
dec
dec
mov
cmp
jecxz
repnz
rcr
push
jp
push
dec
xchg
push
aas
mov
loop
cld
repnz
pop
cmc
(bad)
add
clc
pusha
clc
(bad)
clc
pop
loop
fsub
and
outs
test
pop
retf
clc
push
xchg
fdiv
jne
cmp
and
mov
mov
enter
je
jl
ffree
out
mov
js
iret
mov
sub
xchg
call
push
mov
push
adc
dec
pop
fistp
mov
je
inc
fist
ret
pop
cmp
jb
je
xchg
cwde
movs
(bad)
pop
push
pushf
xchg
lods
cli
popf
out
pop
call
or
lock
repnz
cmps
pop
cmps
cli
test
xlat
sub
scas
sbb
call
sbb
pop
adc
push
sti
lds
jne
or
mov
arpl
in
out
mov
mov
or
cli
pop
ror
mov
mov
xchg
adc
mov
add
push
mov
inc
inc
add
or
xor
adc
jb
inc
and
sbb
inc
sub
leave
push
jb
xor
jb
sbb
cmp
and
dec
push
jb
sbb
push
sbb
inc
leave
push
pop
pop
test
xchg
pusha
test
add
inc
jae
pop
push
push
fs
or
jo
xor
xchg
push
xor
mov
retf
test
push
loop
shr
push
inc
int
inc
add
add
adc
jp
loopne
mov
xor
pop
inc
call
or
inc
adc
adc
sbb
in
jns
sbb
and
dec
sahf
xchg
out
and
sub
in
jns
xor
xor
dec
sahf
xchg
xor
cmp
xchg
out
cmp
inc
inc
cmp
sahf
dec
dec
dec
dec
push
sahf
xchg
out
push
push
push
pop
pop
in
jns
pop
pop
pusha
pusha
test
add
fs
fs
push
jle
mov
lea
ss
sub
xchg
pop
clc
fadd
dec
or
dec
add
dec
jne
mov
aas
push
add
(bad)
xchg
sub
mov
lods
sbb
faddp
dec
jle
ins
mov
jnp
lea
jb
fadd
or
cmp
je
and
repnz
cmp
test
iret
adc
popa
add
pop
push
jl
cmp
jne
cwde
outs
dec
arpl
or
aaa
nop
pop
adc
xchg
or
inc
add
or
or
adc
dec
adc
or
adc
add
inc
and
test
add
jmp
inc
hlt
enter
inc
dec
hlt
mov
mov
lea
cdq
sub
cmp
jne
mov
pop
jne
push
repnz
sbb
xor
mov
jno
retf
pop
push
retf
or
sub
push
loopne
cmp
dec
and
pop
mov
dec
xchg
pop
add
adc
add
gs
pop
movs
lea
jp
clc
add
inc
dec
loope
mov
sbb
jb
rol
add
outs
add
aas
jg
xchg
or
mov
in
inc
xchg
adc
ret
mov
mov
mov
push
adc
dec
enter
pop
cmp
lahf
xor
out
or
adc
mov
add
jmp
xchg
mov
cmp
mov
jmp
push
hlt
cmp
cwde
push
repnz
rol
add
popa
xchg
arpl
int3
ins
int
movs
test
call
mov
inc
call
or
or
rcl
push
add
or
dec
cmps
dec
push
push
push
or
and
outs
pop
leave
push
leave
lahf
add
dec
rcl
out
call
dec
mov
imul
scas
sbb
mov
sbb
mov
mov
add
push
sbb
push
push
rcl
and
cli
mov
or
or
or
pop
or
clc
ret
cld
jecxz
inc
dec
adc
in
add
repnz
push
test
push
lea
add
push
push
add
int
add
xchg
dec
mov
or
mov
mov
std
dec
xchg
std
ds
clc
add
fnstcw
xchg
add
or
or
nop
enter
jae
mov
jb
add
leave
push
cmp
out
in
inc
sub
jmp
jb
cmp
or
adc
adc
in
adc
inc
adc
mov
sbb
sbb
or
sbb
jb
mov
sbb
gs
sbb
sbb
retf
push
push
pop
pop
and
inc
and
pop
sbb
jnp
or
pop
mov
stos
pop
(bad)
loopne
mov
mov
mov
mov
add
push
push
add
push
lahf
sub
and
or
cmps
pop
or
or
add
pop
pop
inc
dec
and
mov
ret
dec
mov
and
dec
xchg
push
mov
mov
test
mov
test
(bad)
mov
cmp
jne
popf
xlat
add
push
repnz
add
rcr
aad
sar
hlt
push
push
mov
pop
icebp
aas
and
add
dec
cld
jne
mov
push
or
mov
mov
inc
int3
dec
mov
dec
mov
adc
and
and
jl
in
(bad)
or
pop
mov
adc
push
jg
pop
xchg
xor
push
or
dec
add
cmp
jl
sbb
add
pusha
imul
ss
mov
add
jbe
rcr
dec
popa
dec
add
nop
popf
ret
cmp
adc
ins
inc
sub
xchg
cmp
adc
test
xor
add
movs
iret
and
sub
and
push
and
inc
push
nop
xchg
stos
or
xchg
ror
aad
fsubr
and
repz
push
and
mov
add
xchg
mov
dec
adc
push
sbb
xchg
mov
and
push
movs
movs
pop
cmp
mov
and
mov
add
loop
loopne
mov
iret
adc
sbb
add
cmp
sub
xor
mov
pop
or
xchg
fild
aaa
xor
or
xor
mov
sub
xchg
jl
sbb
cmp
aas
addr16
cmp
jae
popf
jg
test
or
adc
movups
mov
pop
push
mov
add
push
mov
lock
ins
(bad)
in
retf
sub
call
into
stc
iret
daa
dec
out
lock
(bad)
sbb
adc
rol
pop
cwde
pop
and
pop
cmps
sbb
call
fsubr
adc
(bad)
fst
dec
dec
aaa
fsub
or
sti
stc
ins
jp
mov
and
mov
push
jg
pusha
xchg
cdq
loopne
pusha
out
push
jmp
cmp
jecxz
inc
fwait
xchg
inc
cs
out
call
jmp
adc
mov
mov
in
imul
inc
ret
clc
dec
std
idiv
mov
jmp
cli
cmp
clc
loopne
pop
add
adc
adc
aaa
xor
or
in
ret
stc
adc
sbb
xchg
out
adc
enter
sbb
stc
pop
in
xchg
and
and
sub
sbb
je
and
dec
pop
ret
aas
cmp
jb
push
push
sub
pop
test
push
xor
lods
nop
mov
push
imul
mov
out
stc
inc
es
push
enter
cmp
push
pop
ret
aas
sahf
inc
xor
nop
pop
push
lods
or
dec
push
inc
xor
in
out
jo
pop
adc
sub
stc
push
inc
pop
sar
pusha
sbb
xor
dec
cmps
xor
and
test
test
je
cmp
sub
add
lock
adc
add
xchg
cmp
adc
mov
add
dec
rcr
(bad)
test
jo
cmp
aad
xchg
push
outs
sub
mov
cmp
sbb
add
pop
enter
mov
or
arpl
inc
add
add
fild
push
push
push
lea
xor
mov
dec
jne
mov
xchg
and
scas
or
lds
sbb
sbb
or
clc
and
inc
aaa
push
or
mov
add
or
xor
pop
inc
mov
or
xor
or
shl
or
mov
lea
stos
inc
inc
mov
cmp
dec
pop
bswap
jg
jg
inc
rol
repnz
dec
dec
or
cli
sahf
(bad)
stc
inc
je
mov
ret
jg
cld
and
dec
dec
mov
mov
mov
stc
push
jmp
jl
lahf
xchg
repnz
push
stc
push
stc
push
stc
push
push
sub
test
add
repnz
retf
pop
adc
repnz
add
adc
stc
imul
fs
cmp
stc
push
mov
jle
test
adc
fild
enter
inc
ins
jo
std
repnz
add
jp
js
jns
stc
into
jp
ins
pushf
jl
(bad)
cmp
in
aaa
fsubr
scas
stos
scas
jg
and
lods
pop
cs
lods
scas
lods
scas
lods
pop
xchg
and
es
add
xchg
sbb
push
je
push
js
add
dec
push
inc
adc
add
add
jne
inc
mov
fdivrp
adc
jne
ret
cdq
repz
or
sub
push
jmp
lock
mov
jmp
sbb
ret
dec
loope
(bad)
mov
mov
mov
lds
cmp
jb
sbb
dec
jb
in
add
es
pusha
jle
xchg
lock
or
lock
xor
call
xchg
add
mov
enter
or
(bad)
mov
ins
push
and
add
out
ss
mov
bound
call
sub
clc
mov
cmp
mov
push
push
lea
ret
add
push
push
mov
lods
push
add
cmp
cmp
jo
push
xor
fsubr
xor
loopne
jl
or
imul
inc
loopne
add
aaa
mov
jecxz
or
push
(bad)
call
aam
test
push
xor
arpl
repz
call
cld
stc
sub
icebp
sub
out
repz
mov
add
mov
sbb
rcl
mov
or
pop
into
or
mov
mov
jmp
xor
and
clc
push
and
adc
add
cmps
push
push
xchg
mov
test
xchg
pop
add
cmp
jne
cmp
mov
das
sbb
icebp
jne
test
outs
xor
daa
mov
leave
xchg
sti
nop
in
in
xchg
mov
cs
add
mov
arpl
fbstp
rol
stc
cwde
stc
pushf
in
xor
xchg
pushf
stc
fwait
stc
cwde
push
sbb
cmp
enter
ins
dec
in
nop
call
add
ja
xor
xor
lahf
xor
lahf
pop
(bad)
stc
mov
subps
shl
mov
xchg
mov
sub
mov
movs
xchg
dec
gs
stos
lods
cmps
cmps
movs
movs
xchg
retf
aam
aad
imul
xor
popf
mov
adc
nop
hlt
mov
add
sbb
dec
sbb
add
xchg
or
dec
loopne
and
mov
push
add
add
pop
das
pop
ror
sbb
add
add
js
test
mov
sbb
mov
add
add
push
shl
dec
jno
mov
pop
sub
mov
fdivr
inc
lock
or
jge
imul
loope
inc
mov
pushw
ret
pop
and
ins
sbb
jo
dec
xchg
or
lods
sub
enter
push
push
push
xchg
cmp
adc
push
push
xchg
add
adc
xchg
mov
enter
xchg
sbb
jl
xchg
sub
imul
jg
add
rcl
fist
rol
daa
inc
popf
jmp
int3
shl
lea
in
mov
push
nop
in
fst
ja
and
adc
jge
inc
push
inc
js
ror
or
and
jmp
aas
mov
add
mov
cmp
jb
jo
jl
clc
sbb
jae
add
sbb
fsub
mul
pop
xchg
int3
xlat
add
add
es
push
add
js
jge
sbb
inc
add
pop
xchg
dec
sete
loopne
aas
cs
(bad)
cld
inc
arpl
data16
xchg
lock
pop
pushf
test
cmp
push
or
and
ins
xor
adc
sbb
daa
loopne
xor
mov
cmp
add
sub
dec
cmp
sub
jle
popa
mov
mov
test
js
gs
mov
sub
adc
xchg
fcmovnu
fcmovu
outs
sbb
stos
jg
and
mov
in
xchg
popa
jg
lods
mov
lods
xchg
retf
lods
(bad)
fst
push
cs
pop
ret
aas
in
adc
and
mov
mov
jo
pop
sub
in
jle
loopne
ret
int3
in
dec
sbb
mov
mov
mov
mov
lods
fsub
retf
in
mov
mov
retf
movs
xor
out
out
and
mov
jb
in
mov
daa
inc
dec
in
call
or
(bad)
mov
or
in
mov
in
test
cmp
daa
add
adc
sbb
cmp
shl
retf
leave
adc
or
xchg
or
jg
(bad)
retf
cs
adc
cmc
div
xchg
cmp
mov
enter
and
clc
push
stos
add
jnp
(bad)
repnz
mov
rcr
xchg
fstp
fild
stc
mov
(bad)
bnd
bswap
fisub
and
stos
xchg
or
ja
add
cld
aas
cdq
cld
loopne
mov
loope
mov
adc
or
adc
pop
pushw
pushf
ret
cmps
in
in
lock
retf
add
mov
out
leave
gs
pop
cdq
in
in
jb
or
sbb
pop
mov
ins
pop
ret
push
hlt
mov
in
mov
or
mov
pop
cs
and
adc
sbb
daa
test
adc
and
call
(bad)
mov
pop
or
add
push
mov
cmp
adc
add
clc
push
mov
sar
or
cli
call
ror
or
sbb
nop
dec
jne
pop
and
xlat
dec
or
sbb
add
movs
mov
iret
outs
jmp
mov
or
mov
add
jo
out
sbb
test
lahf
loopne
push
inc
rol
inc
or
cmpxchg
cmps
cmps
cmp
pop
ret
or
cli
sbb
xchg
pop
(bad)
pop
mov
dec
daa
mov
add
test
jnp
xlat
pusha
push
sbb
pop
or
adc
in
push
sub
jle
or
sbb
imul
add
add
popa
sbb
add
cmp
mov
popf
hlt
leave
push
or
icebp
in
sar
pop
and
in
mov
fwait
sbb
stc
hlt
and
pop
ret
fild
and
cdq
in
adc
popa
fsqrt
or
or
cmp
adc
sti
mov
xchg
jle
xor
xor
pop
sub
in
pop
nop
pop
cld
mov
cmp
pop
retf
movs
test
mov
pop
ror
je
inc
cmp
bound
sbb
stc
clc
es
inc
in
push
(bad)
test
add
pop
sbb
loopne
and
cwde
mov
ins
aam
sub
lahf
int3
(bad)
push
add
cli
sbb
push
jmp
(bad)
mov
fld
jmp
enter
mov
fst
sbb
paddq
xor
and
fldcw
jbe
rol
mov
or
test
aaa
rcl
or
adc
in
cmp
mov
popf
sub
add
add
xchg
inc
adc
addr16
inc
sar
jno
idiv
cmp
jmp
sub
fcom
push
sti
push
fisttp
add
or
pop
sub
adc
aaa
xchg
inc
pop
or
imul
imul
jge
push
gs
jg
dec
and
mov
xor
loope
dec
cdq
mov
mov
and
jmp
(bad)
adc
les
sub
mov
sbb
pop
and
add
xchg
push
cmp
pop
les
imul
pushf
sbb
test
fdivr
or
js
sbb
popa
xchg
jmp
cmc
jb
jb
mov
lods
pop
fistp
or
outs
inc
and
xor
pop
or
adc
sar
adc
unpckhps
mov
dec
and
sub
cwde
ret
sub
fwait
outs
retf
xchg
in
(bad)
cli
sar
cmp
jg
and
jmp
mov
cli
sub
sbb
and
cmp
and
jb
pop
jo
loopne
cdq
loopne
mov
repz
fnstcw
cs
cs
sub
cli
sub
pop
in
stc
push
pop
mov
fadd
jne
push
push
(bad)
push
fdiv
fcomip
in
xlat
xor
out
inc
outs
test
lahf
cmp
repnz
sar
clc
dec
pushf
adc
repnz
sti
in
mov
dec
aaa
cmps
rol
icebp
pop
cli
dec
lock
xor
adc
das
jmp
jns
pop
aam
cli
push
in
mov
push
cli
mov
cmp
pop
mov
jmp
pop
sbb
arpl
push
cmp
rcr
test
cmps
lods
push
pop
push
in
imul
mov
mov
and
nop
inc
(bad)
getsec
or
vmread
cmp
test
scas
pop
pop
icebp
outs
jmp
clc
je
test
push
pop
mov
pusha
mov
lock
leave
dec
xchg
xchg
cmp
pop
sbb
addr16
push
sbb
dec
jne
ins
nop
psubb
xor
addr16
(bad)
jecxz
add
leave
lods
cmc
sub
mov
pop
(bad)
shl
(bad)
jo
jmp
fldenv
test
fadd
aaa
mov
sahf
(bad)
dec
xchg
and
daa
add
fmul
jmp
out
pop
push
mov
js
push
adc
jae
mov
mov
xchg
(bad)
movs
and
retf
mov
arpl
sbb
or
retf
inc
mov
jnp
leave
dec
fstp
jl
push
nop
pop
add
cmp
cmp
repz
in
sbb
pushf
push
pushf
xor
mov
dec
movs
loopne
cwde
sub
pop
fsub
add
xchg
pop
repnz
int3
mov
xchg
push
sbb
pop
sbb
add
inc
ret
ds
or
add
mov
mov
retf
sbb
push
add
dec
clc
xchg
or
pop
loopne
arpl
(bad)
mov
lods
arpl
add
sbb
fs
or
adc
clc
movhps
(bad)
and
sbb
push
sahf
jae
sub
test
cmp
sbb
push
retf
cmp
or
xchg
or
and
ds
sub
cwde
inc
retf
fmul
inc
stos
or
cdq
inc
sub
imul
push
push
(bad)
neg
cmp
lods
leave
xor
or
and
mov
jns
and
adc
dec
cmp
xchg
out
adc
call
or
adc
adc
cli
push
pop
mov
push
push
cmp
xchg
imul
int3
sar
push
add
jl
dec
push
daa
inc
sahf
mov
cmp
fcomp
fist
sub
enter
ret
add
in
fs
sbb
out
xor
repz
nop
aad
sbb
inc
and
push
add
es
lods
enter
push
pop
test
add
lahf
movs
or
pop
and
ins
inc
push
sbb
dec
in
or
cmp
push
aad
or
xchg
add
sti
and
add
ret
add
or
stos
or
shl
sar
pop
ret
stos
adc
std
inc
mov
es
mov
cmp
mov
push
gs
dec
std
sbb
pop
hlt
lods
test
cwde
into
cmp
push
mov
repnz
sbb
pop
xor
lea
mov
xchg
jne
inc
dec
mov
movs
push
pop
popa
pop
adc
and
lds
shl
jnp
xor
pop
mov
or
pop
cld
push
js
or
pop
sbb
or
sar
out
mov
pop
jle
fidivr
sub
ret
xchg
shl
icebp
addr16
test
inc
sub
cmp
pop
xchg
cwde
sar
pushf
inc
jmp
mov
mov
nop
adc
sub
ins
jb
jo
js
std
js
xchg
add
and
sbb
xchg
shl
jbe
imul
sbb
or
cmp
or
inc
sub
xor
or
outs
pop
cmp
das
add
and
popf
add
push
sti
lea
pusha
ja
cmp
ins
mov
lea
cdq
add
push
shl
add
add
and
sub
mov
sbb
push
xchg
daa
push
adc
and
ret
sbb
call
inc
cmp
add
(bad)
lock
mov
push
test
pop
mov
in
or
and
scas
pop
int3
test
sub
mov
mov
adc
cmp
pop
push
data16
out
or
and
dec
mov
and
mov
jns
inc
loopne
stos
lock
mov
jb
sbb
xchg
sub
scas
mov
add
mov
or
iret
inc
mov
push
adc
pcmpgtb
outs
and
daa
stos
sbb
pop
pop
rol
enter
or
mov
or
cmp
aas
add
adc
sbb
push
sbb
or
cld
in
aad
mov
cmp
mov
pusha
jns
xor
cmp
sbb
shr
cmp
mov
sub
add
fwait
xchg
sub
fwait
dec
test
mov
sar
int
mov
cmp
jne
lea
and
or
cmps
hlt
add
jnp
add
xchg
pop
add
fmul
push
push
sbb
test
rol
pop
xor
das
rcl
dec
enter
ja
sub
cmp
test
or
xor
mov
push
inc
xchg
pop
sbb
mov
jns
pop
xchg
dec
or
sub
xchg
mov
loope
test
sbb
pop
push
aam
add
div
fdiv
(bad)
or
and
xchg
sub
mov
jne
push
or
nop
add
scas
inc
mov
cs
lock
xchg
lea
sub
scas
push
push
add
sbb
add
cmps
jecxz
shl
fstp
mov
inc
cmp
and
inc
push
and
sub
movs
push
add
xor
lods
mov
add
add
xchg
xor
daa
sbb
sbb
std
and
dec
adc
add
sbb
rol
jmp
xor
push
ret
movs
nop
enter
push
inc
add
mov
retf
push
inc
cmp
mov
ret
add
and
xor
fcmovb
nop
ins
pop
sar
ss
cdq
mov
and
lahf
add
in
sub
pop
xor
mov
mov
cmp
ror
loope
mov
sti
inc
inc
ds
iret
sti
inc
sti
inc
sti
inc
sti
cmp
ins
inc
cmp
ds
push
or
outs
push
stc
icebp
pop
nop
and
sbb
pmulhw
ficom
enter
(bad)
je
push
ins
jae
repnz
ret
cdq
je
dec
sahf
cmp
pusha
sti
xor
xor
cmp
pop
cmps
sti
xor
push
jbe
pop
jl
dec
dec
cmp
xor
cmp
inc
push
adc
loopne
(bad)
jne
xchg
lock
push
and
and
ss
add
push
es
jecxz
mov
in
add
ss
add
push
cmp
pop
and
dec
cmp
cmp
and
cld
dec
xor
sbb
and
push
fwait
or
mov
inc
push
xor
shr
ja
or
nop
xchg
inc
push
jae
push
dec
mov
loope
nop
pop
push
sbb
cmp
add
sbb
mov
push
xor
sbb
enter
pushf
pushf
pushf
and
push
mov
nop
sbb
shl
add
enter
inc
pusha
pusha
mov
jo
ins
adc
inc
push
cld
inc
inc
dec
add
inc
inc
pop
sbb
and
dec
cmp
sbb
jns
ins
test
sub
jne
adc
sub
inc
jmp
test
dec
cmp
inc
xchg
push
mov
loope
in
adc
shr
inc
fist
sbb
inc
pop
ss
cmp
add
mov
inc
jb
out
into
xor
fiadd
cmp
inc
loope
ss
jne
inc
xor
sbb
cmp
fsub
lods
dec
xchg
push
dec
push
inc
mov
dec
repnz
and
mov
cli
xchg
add
test
jne
mov
fistp
mov
imul
inc
in
xchg
dec
repz
push
lods
xchg
retf
repz
mov
test
lods
fsubr
(bad)
push
cs
loope
and
fmul
nop
sbb
sbb
ret
jl
add
lea
aaa
add
fidiv
(bad)
aam
jmp
mov
or
push
sbb
add
(bad)
jmp
push
scas
adc
and
cmps
lods
pop
adc
cmp
mov
or
add
push
add
xchg
dec
cmps
pop
cmp
test
inc
or
xchg
inc
lea
test
dec
push
push
push
popa
dec
xchg
mov
dec
xor
cs
sbb
add
and
cmovl
dec
mov
cmps
inc
in
test
imul
mov
pmaxsw
adc
mov
add
xchg
dec
cmp
sbb
iret
cmc
test
and
jo
stc
cmp
sbb
sbb
dec
add
jecxz
jecxz
push
enter
out
add
(bad)
xor
add
xor
pusha
bound
lock
rcl
dec
inc
mov
je
mov
cmps
jo
sbb
xlat
inc
icebp
dec
pusha
and
add
jmp
das
fcmovbe
repnz
mov
mov
pop
scas
and
add
inc
pop
jmp
pop
inc
test
lea
scas
repz
push
pop
push
push
daa
or
push
ret
push
int
jmp
xor
push
push
iret
je
stos
mov
ja
fwait
push
mov
sub
pop
(bad)
push
jecxz
aam
mov
pop
gs
push
push
push
lahf
push
or
or
and
sbb
mov
or
push
cmp
hlt
or
sahf
push
mov
int3
xor
ficom
push
mov
les
mov
adc
push
out
dec
xchg
mov
dec
pop
sub
push
adc
cmp
pop
les
xor
sub
push
cmp
sub
leave
and
push
sbb
sbb
dec
xchg
int
push
mov
adc
mov
(bad)
mov
das
or
loope
ins
push
cmps
mov
lods
add
mov
jecxz
movs
mov
jno
fwait
pop
mov
sub
sbb
stc
pop
pop
cmp
or
sub
sub
mov
or
mov
inc
sbb
inc
pop
xor
cld
lea
xchg
inc
cmp
fs
scas
mov
push
pop
pop
jne
jo
pop
add
cmp
loop
jg
xor
jbe
inc
loope
pop
sbb
inc
mov
add
xor
movs
pop
cmp
pop
and
xchg
dec
(bad)
pop
cld
sbb
jne
int3
pop
loop
jg
shl
(bad)
jo
sti
out
jmp
sar
pop
in
sub
dec
add
and
enter
retf
jl
stos
jle
push
cs
lods
rcl
test
dec
dec
call
sub
cmp
cli
test
test
out
xor
xor
mov
(bad)
dec
or
mov
fistp
sar
cli
mov
cmps
xor
and
or
leave
leave
mov
pop
push
mov
cld
fs
or
sub
cli
xchg
xchg
xchg
add
ror
xchg
lahf
mov
xchg
cwde
iret
repz
rcr
cli
mov
push
cwde
sbb
mov
mov
mov
daa
pop
stc
das
pushf
mov
jmp
push
mov
pushf
int3
dec
sbb
sub
iret
ror
pop
push
xor
lods
push
in
push
mul
mov
aas
inc
dec
jb
cli
and
ret
mov
test
mov
cmp
xor
in
movs
loopne
jne
movs
xchg
mov
mov
dec
sub
mov
inc
in
jl
sbb
leave
retf
cdq
mov
cli
les
pop
cs
(bad)
shl
xchg
inc
lock
(bad)
movs
hlt
repnz
inc
jle
es
pushf
shl
and
enter
cmp
stc
clc
enter
cwde
mov
retf
movs
repnz
shl
into
into
int
jb
nop
int3
(bad)
cld
std
retf
leave
xor
xchg
xchg
or
sti
mov
jmp
in
jmp
jb
inc
into
lahf
fsub
call
cmp
loopne
ror
in
retf
retf
mul
call
fucomip
(bad)
fcmovnb
lods
popa
add
lock
call
ret
pop
mov
hlt
clc
sahf
pop
cs
clc
div
hlt
and
pop
cmc
and
add
jmp
dec
cmps
add
mov
cld
(bad)
(bad)
xchg
cs
repnz
std
cld
out
cs
push
push
cs
dec
fcmovnbe
mov
cdq
add
clc
jle
(bad)
test
adc
std
or
adc
cmp
movsx
movs
jge
xor
fisttp
adc
mov
cli
sbb
std
repnz
lock
and
and
dec
xchg
js
mov
dec
sti
sub
lahf
sti
or
ja
sti
xor
sub
pop
ret
jg
cmp
cmp
inc
jno
mov
sti
dec
into
dec
dec
inc
cmp
sti
inc
je
inc
jne
sbb
cs
lds
ins
and
js
ins
cmp
pop
cdq
fs
xchg
pop
inc
clc
neg
sti
pop
push
repnz
sti
pusha
sti
fs
push
js
and
jo
and
pop
lods
sbb
and
js
jl
jle
xlat
std
sahf
sbb
rcl
out
sub
mov
xchg
(bad)
js
or
ret
push
dec
mov
lahf
pop
pop
sti
mov
xchg
daa
dec
sti
nop
sti
xchg
sti
cwde
pop
jns
in
pushf
sti
mov
mov
mov
jb
jno
push
push
mov
and
mov
mov
retf
and
in
mov
test
in
aas
cdq
push
pushf
jl
pop
popf
mov
mov
scas
inc
jmp
sti
mov
xchg
call
mov
(bad)
mov
xchg
inc
push
retf
iret
shl
xchg
hlt
hlt
xchg
inc
push
mov
enter
fcmovnu
jecxz
leave
nop
dec
out
es
leave
nop
cmp
or
mov
adc
xor
cmps
cmps
in
and
sti
sti
sti
add
es
mov
add
push
add
push
je
pop
cmp
rol
or
inc
sbb
rcl
adc
cmp
sub
add
fadd
and
out
nop
out
adc
add
sbb
push
sbb
clc
push
and
sbb
inc
and
and
xor
or
mov
pusha
bound
mov
mov
mov
mov
inc
add
push
lea
jb
cmp
adc
adc
inc
or
test
hlt
fild
(bad)
or
xor
push
ret
xchg
test
or
jmp
int3
inc
es
lea
not
inc
push
outs
into
sbb
fsubr
push
inc
push
js
dec
pop
mov
sbb
out
xchg
add
push
fnstenv
lea
int
lods
in
in
cld
pop
push
jmp
(bad)
xor
jl
or
test
out
and
pop
fs
test
pop
sub
test
or
out
add
add
or
add
push
scas
sti
jmp
mov
ror
pop
(bad)
jle
cld
mov
mov
ins
out
movs
cmp
jns
add
fadd
shr
mov
sub
xor
lea
push
rol
jne
ror
mov
dec
sub
push
and
ud1
imul
(bad)
(bad)
and
movd
fistp
xchg
cmp
and
push
add
dec
pusha
lds
mov
retf
and
or
sbb
fbld
gs
dec
cmp
hlt
and
dec
fisub
dec
sbb
jno
dec
add
or
push
rol
fdiv
mov
sub
adc
arpl
mov
div
hlt
lock
clc
sar
call
mov
sahf
cld
add
and
ret
fistp
in
xchg
xchg
cmp
add
or
or
dec
push
repnz
adc
adc
imul
xchg
xor
adc
fistp
xchg
data16
adc
sbb
cli
pushf
mov
jmp
jmp
and
rcr
add
jns
fstp
fs
xor
xor
inc
push
cmp
xor
fs
or
pop
dec
xchg
mov
inc
cmp
mov
push
and
inc
cld
inc
cld
inc
cld
inc
sub
jno
(bad)
dec
inc
mov
sub
inc
enter
mov
test
je
je
jb
push
fbld
cld
dec
nop
cmp
dec
cld
push
cld
push
enter
pop
pop
js
mov
leave
js
and
enter
pusha
fs
or
xchg
mov
sbb
ss
in
mov
cld
ins
xchg
xchg
cld
outs
cld
outs
push
cs
jl
ins
cld
ins
sahf
pushf
push
das
in
popf
pushf
in
xor
rcl
cmp
retf
and
mov
inc
sar
dec
mov
xchg
jmp
add
add
cmp
outs
repnz
jo
je
jbe
inc
jmp
xor
mov
jge
dec
xchg
mov
ror
xor
movs
sar
inc
sbb
add
int3
mov
and
repnz
outs
push
mov
mov
test
fmul
int
jmp
shr
cmps
out
(bad)
jmp
mov
das
jno
inc
sbb
out
pop
js
mov
sar
push
xlat
cmp
push
add
fadd
and
ret
add
add
sbb
out
push
ror
(bad)
fimul
xchg
add
push
int
ret
ja
ins
mov
clc
mov
and
push
push
pop
push
inc
int3
(bad)
retf
(bad)
fs
or
add
jl
push
stc
or
mov
cld
test
cld
test
mov
fldcw
pop
inc
inc
pop
jl
sar
add
fdiv
test
fcom
pop
ror
enter
or
or
icebp
out
jmp
icebp
lock
fsubr
jo
sbb
in
and
dec
push
ror
popa
sbb
fs
adc
fs
mul
adc
inc
cmp
or
outs
inc
shl
jle
pop
push
cmps
movs
mov
(bad)
xor
mov
mov
adc
pop
push
loope
ret
jb
pop
mov
arpl
imul
clc
dec
push
add
add
aas
jb
lods
mov
jl
cmp
jae
mov
push
lods
mov
xchg
add
mov
push
mov
and
sahf
lgs
dec
adc
stos
les
push
or
and
popa
xchg
mov
adc
mov
arpl
ins
mov
inc
mov
xor
int3
push
sbb
adc
inc
jge
sahf
adc
push
xchg
out
push
fdivr
xor
add
jo
xchg
mov
jg
lea
and
or
add
xor
add
inc
xor
rol
test
jge
xor
xchg
in
sub
adc
pop
in
mov
cld
adc
stc
xor
aam
fisub
stos
aas
xchg
push
in
test
adc
push
push
adc
or
les
aam
pop
cdq
cmps
add
ficomp
or
and
arpl
addr16
xchg
test
in
mov
pop
pusha
sbb
add
mov
inc
pop
lds
xchg
mov
test
in
mov
leave
test
and
sbb
mov
sbb
or
pop
stos
cld
pushf
sbb
test
in
add
push
jno
and
add
test
clc
add
hlt
mov
pop
mov
les
xor
push
inc
push
repz
sbb
sbb
stos
jae
stc
mov
lea
enter
mov
add
inc
loopne
push
ds
and
xchg
cld
js
jns
cmp
jl
jge
out
enter
loopne
js
test
test
gs
jns
jp
xchg
retf
es
call
or
mov
pop
cdq
adc
loopne
mov
icebp
xor
mov
out
hlt
cmp
mov
(bad)
cld
mov
aaa
nop
idiv
std
cmc
xchg
cld
icebp
out
fst
cwde
mov
and
sbb
add
add
and
(bad)
enter
xchg
sar
call
cmp
enter
clc
fmul
loope
fild
gs
out
leave
fsub
or
fisttp
fisubr
imul
daa
adc
pop
jns
push
fistp
in
sub
cld
in
adc
adc
fistp
sub
cld
push
iret
xchg
in
cld
lock
call
out
or
push
jno
sbb
movs
hlt
clc
cli
jge
pushf
pop
or
fdivr
and
test
std
std
cld
cld
movs
jb
cmp
cld
daa
cld
cmps
push
jns
daa
daa
daa
daa
nop
push
dec
popf
daa
jg
add
fs
mov
mov
cmp
outs
cmp
test
or
sub
inc
sahf
xchg
jbe
sbb
stos
fs
test
sbb
movs
cdq
nop
sbb
lods
das
daa
inc
jmp
retf
test
cld
jl
mov
cmp
push
mov
mov
rcr
aam
sti
dec
add
xor
test
lods
jno
dec
mov
mov
pop
mov
cld
cmp
cmp
test
nop
inc
cli
mov
jl
(bad)
or
xor
aad
je
clc
mov
xor
std
jl
test
cmp
push
test
outs
and
je
or
sbb
inc
mov
movs
pushf
rcr
mov
mov
and
ss
or
std
int3
adc
jns
stc
or
mov
retf
sar
or
sub
xchg
shr
imul
sbb
iret
add
cmp
dec
mov
sub
loope
inc
or
(bad)
in
pop
jmpw
or
stos
pop
add
sub
jg
gs
dec
aaa
jb
fisubr
mov
sbb
push
fbld
add
das
jl
sub
stos
icebp
adc
mov
sub
rcr
jb
shl
movs
rol
mov
cli
sub
es
aaa
pop
xor
and
(bad)
mov
xor
push
pop
mov
push
pusha
dec
push
and
push
into
adc
mov
in
xor
adc
jl
xor
sbb
movs
pop
sbb
loopne
ds
push
xor
cmp
jb
das
nop
cmp
jge
ins
cmps
pop
fwait
nop
inc
popf
sbb
pop
sbb
adc
cmp
dec
mov
mov
add
cld
popa
cmp
and
sub
adc
lea
sub
or
mov
fadd
push
hlt
sub
sub
push
arpl
push
test
out
pop
and
xchg
test
leave
dec
call
inc
cmp
shl
test
mov
and
aad
data16
int3
adc
cmp
xor
sub
sbb
fbstp
sbb
jl
pop
ja
push
xor
pop
xchg
cdq
inc
and
push
xor
rol
(bad)
dec
jmp
and
movs
loope
push
sbb
push
cli
mov
cli
jl
jmp
rol
clc
in
mov
pop
in
jb
or
das
retf
in
mov
mov
inc
jle
adc
shl
test
jo
and
pusha
jne
jecxz
and
sub
fld
mov
mov
sub
cdq
rol
inc
aaa
mov
leave
in
rol
pop
sbb
mov
sbb
mov
sbb
mov
sbb
(bad)
mov
pop
arpl
stos
sub
(bad)
in
sbb
test
push
shl
das
inc
xor
test
loopne
xchg
or
cmp
sub
push
adc
imul
sbb
adc
add
and
dec
pop
mov
dec
dec
add
pop
dec
call
inc
xchg
sbb
sub
out
fidiv
das
cmc
xor
lea
ret
push
mov
mov
call
pop
das
mov
cld
jno
and
sbb
in
cmp
and
mov
aas
lock
mov
add
add
xor
stc
push
cmp
xor
mov
sbb
or
adc
les
adc
add
inc
or
int3
and
pop
and
leave
sub
cs
cs
leave
add
push
sbb
push
popa
mov
push
add
je
(bad)
ficomp
cld
mov
cmp
push
mov
aas
inc
call
out
jnp
add
lock
adc
std
repnz
or
repz
adc
std
adc
in
aaa
cmp
std
adc
add
xor
mov
loopne
and
mov
mov
cdq
adc
stos
stos
int
movs
dec
gs
push
std
adc
push
sahf
or
inc
jecxz
or
inc
mov
in
mov
std
pop
cs
fistp
icebp
sbb
nop
out
mov
xchg
out
aam
jg
dec
dec
xchg
add
dec
dec
fdiv
cmp
fdivr
and
and
and
in
or
push
push
jb
scas
mov
fistp
cmp
mov
es
and
and
push
push
retf
push
test
mov
ja
(bad)
mov
sub
sub
push
and
call
int3
cwde
int3
std
sub
xor
push
repnz
xor
cmp
sub
mov
cmp
pop
adc
mov
inc
cs
inc
cmp
xchg
daa
std
inc
std
dec
std
dec
in
jbe
jle
ins
adc
pop
cwde
les
push
std
push
sbb
inc
sahf
mov
pop
std
pop
in
es
js
adc
stc
mov
sbb
es
xchg
retf
xchg
xchg
xchg
mov
call
cli
mov
push
push
call
inc
xchg
mov
repz
(bad)
jo
je
ins
cmc
lea
nop
cmp
mov
js
mov
jl
jle
sbb
mov
mov
add
std
std
daa
pop
push
cmp
leave
push
test
daa
enter
push
lods
lods
mov
fcomp
jb
jg
in
inc
jl
sbb
cwde
test
sub
mov
imul
jns
pushf
std
mov
jb
lahf
std
xchg
daa
les
leave
ror
in
retf
movs
test
mov
inc
mov
test
int3
fbld
mov
and
repnz
push
sbb
out
sub
mov
pushf
xchg
ret
std
mov
in
sbb
enter
pushf
cwde
pushf
std
enter
sahf
std
int3
std
sar
aam
repnz
std
fdivr
fdivr
loopne
in
xchg
and
enter
ret
leave
in
and
cwde
call
in
enter
xchg
sbb
cmp
cs
xchg
xchg
lock
lock
and
mov
xchg
cwde
nop
push
daa
out
xor
mov
aas
std
clc
std
xchg
and
nop
cld
std
hlt
sub
fisubr
pop
ret
aas
cwde
mov
daa
(bad)
inc
sbb
aas
fsubr
repnz
dec
lock
(bad)
mov
sub
fisttp
repnz
mov
dec
test
(bad)
in
push
sahf
sub
sub
sub
imul
fiadd
cmps
ret
cmp
lock
inc
push
dec
leave
add
mov
sub
ja
lahf
sbb
xchg
xor
ret
aam
lea
rcr
jmp
sub
sahf
cmp
cmp
test
je
mov
not
leave
sbb
push
pop
add
pop
or
mov
nop
and
mov
dec
add
xor
cdq
dec
out
and
popf
sub
mov
ss
mov
movs
ror
and
inc
loopne
(bad)
call
lea
pop
push
aaa
and
es
out
adc
inc
dec
jecxz
add
push
lds
mov
or
xchg
add
cdq
std
push
retf
and
adc
jmp
or
sbb
pop
push
mov
push
inc
inc
cmp
aaa
push
mov
daa
and
test
(bad)
(bad)
(bad)
(bad)
sub
xchg
xchg
(bad)
sub
sub
sub
sub
nop
xchg
add
add
(bad)
(bad)
sub
xchg
mov
jl
and
(bad)
sub
sahf
iret
(bad)
sub
and
in
leave
test
and
(bad)
sub
xchg
sub
sub
scas
xor
push
or
aaa
inc
xor
inc
jbe
gs
mov
dec
dec
scas
das
lods
mov
adc
and
sbb
(bad)
or
xor
xor
sub
(bad)
ins
cmps
xchg
ret
xor
add
dec
mov
mov
push
jmp
das
add
ret
mov
outs
xor
push
mov
shl
jmp
repnz
adc
sbb
hlt
add
sahf
test
sbb
inc
mov
iret
rol
xchg
xchg
xor
mov
lahf
je
retf
and
bound
xchg
pusha
pusha
jo
dec
pop
mov
xchg
xor
(bad)
cmp
cmp
sub
xchg
fsubr
cmp
ins
inc
inc
inc
sti
xor
inc
(bad)
dec
out
sub
jb
pop
mov
dec
inc
ret
ret
sub
ret
int3
and
mov
and
mov
inc
xchg
sbb
test
mov
adc
bound
mul
xor
int3
test
fdivr
and
dec
pop
jbe
pop
add
daa
or
aaa
cld
js
repz
icebp
repz
xor
das
jne
pop
adc
int3
and
js
sub
sub
xor
dec
ret
test
shl
xchg
add
inc
int3
push
mov
sbb
ds
sbb
cmp
and
xchg
adc
inc
pop
sbb
pop
sahf
mov
loope
mov
sub
(bad)
mov
inc
add
cmp
jl
inc
push
aad
iret
xor
push
arpl
mov
aad
cmp
or
jo
stos
push
icebp
mov
cwde
push
mov
add
adc
test
push
popf
jb
mov
stc
pop
retf
pop
int3
(bad)
cli
not
sub
pop
sbb
mov
sub
push
ret
inc
inc
es
fs
cmp
nop
push
retf
imul
retf
xchg
cdq
push
popf
es
cmp
fwait
pushf
cwde
pop
pusha
and
in
pusha
mov
mov
jo
push
jmp
sti
xchg
retf
in
je
jne
jae
gs
retf
and
or
jb
movs
mov
movs
mov
jg
cwde
pop
mov
mov
(bad)
js
jmp
std
mov
(bad)
jl
push
sub
(bad)
movs
jb
cmp
(bad)
sub
cmps
push
jns
sub
sub
inc
push
add
adc
std
push
add
jne
mov
jecxz
sbb
dec
in
or
jmp
das
sbb
adc
(bad)
cwde
push
std
jne
push
repz
fistp
popf
dec
(bad)
stc
pop
mov
test
xchg
(bad)
adc
jb
dec
adc
dec
mov
xchg
add
jb
stc
daa
iret
jg
add
inc
add
sbb
mov
push
add
pop
add
jb
cmc
inc
mov
daa
sub
add
sbb
adc
retf
add
nop
sbb
scas
mov
push
leave
inc
pusha
pop
pop
mov
mov
push
nop
shl
adc
int3
pop
pop
cwde
or
pushf
movs
jb
test
sahf
mov
add
mov
mov
mov
test
sub
mov
neg
stos
out
scas
fsubr
pop
pop
fdivr
sub
mov
xchg
aas
clc
inc
mov
repz
ss
rol
call
jmp
mov
in
das
retf
sahf
pop
mov
inc
in
gs
push
ins
pop
and
mov
add
xchg
adc
int
push
cdq
test
mov
out
and
sbb
add
cmp
and
and
mov
lods
and
clc
cmp
add
and
mov
mov
mov
cs
daa
dec
add
mov
xchg
es
imul
in
mov
sub
xor
cmps
pushf
sbb
sar
mov
in
lock
out
inc
inc
push
icebp
xchg
sub
sub
test
and
pop
mov
enter
inc
push
dec
push
rcr
lods
push
push
mov
sbb
cmps
icebp
cmp
push
and
(bad)
icebp
inc
mov
push
nop
lock
cmp
xchg
add
jo
and
out
and
add
dec
ror
push
pop
mov
fidivr
addr16
xchg
fcom
rol
jno
pusha
std
mov
sub
sbb
cmp
mov
jge
je
dec
add
sbb
mov
jp
inc
pushf
popw
mov
inc
mov
ds
cdq
fild
push
(bad)
and
sbb
jl
dec
pop
xchg
mov
and
sbb
cdq
add
cmp
jnp
cdq
ins
rcr
xchg
adc
cmp
repz
ret
addr16
fst
je
out
inc
and
leave
push
or
pop
xor
out
nop
mov
dec
rcl
mov
or
ret
and
xor
fisttp
hlt
add
js
jecxz
add
cmp
mov
pop
pop
jle
jns
add
mov
add
xlat
xor
test
xchg
stc
add
test
and
sbb
ret
mov
bnd
rol
and
add
movs
(bad)
sbb
rcr
push
pop
lea
push
cmp
mov
stos
push
emms
push
pop
adc
mov
sbb
movs
pop
add
in
pop
fs
mov
push
lock
mov
pop
mov
jp
dec
mov
cmp
dec
or
test
mov
adc
arpl
fcom
and
loopne
push
inc
idiv
sahf
or
xchg
dec
daa
inc
test
sar
or
inc
sar
jmp
sar
mov
xchg
inc
retf
pop
ja
lock
xchg
and
daa
add
cld
lods
add
add
push
sub
(bad)
bound
xor
sbb
add
sbb
movs
adc
push
repnz
add
add
push
repnz
push
sub
repnz
and
and
sbb
and
add
inc
add
dec
and
pop
mov
je
nop
mov
cwde
call
cli
pop
sub
and
(bad)
(bad)
(bad)
sub
call
sub
aas
jb
fild
clc
mov
sar
in
cmp
push
in
aam
iret
aam
mov
rcl
mov
shl
movs
xchg
add
xchg
xchg
pop
sub
add
mov
xchg
fild
inc
pop
lock
push
fcomp
in
pop
fstp
in
mov
and
(bad)
pop
cs
or
push
sbb
mov
mov
sti
pop
in
in
jb
in
jmp
sbb
xchg
and
sbb
sbb
cmp
pop
xor
lock
ficom
icebp
lock
and
jmp
nop
xchg
xor
hlt
mov
(bad)
clc
test
and
and
mul
sub
rol
in
sbb
sub
inc
enter
inc
inc
(bad)
cld
jb
in
sub
sub
inc
xor
xor
adc
sub
cwde
sub
and
pop
or
inc
stc
inc
mov
add
mov
xor
aas
and
enter
and
adc
xchg
retf
adc
push
or
xor
cmp
cmp
retf
ds
cmp
cdq
nop
sbb
adc
pop
cs
sbb
sbb
adc
cmp
adc
sbb
pop
inc
dec
inc
outs
cwde
nop
retf
sbb
sbb
sbb
inc
sbb
and
enter
push
sbb
mov
dec
push
dec
fmul
sbb
sbb
xor
and
in
es
jb
or
and
sbb
in
push
adc
xor
enter
xor
retf
in
cs
jb
or
sub
sbb
in
pop
adc
xor
enter
cmp
retf
in
ss
jb
or
xor
mov
addr16
or
jne
or
sub
mov
(bad)
xor
mov
adc
lock
cld
push
or
arpl
out
icebp
lahf
call
(bad)
call
(bad)
dec
iret
test
sub
sub
repnz
dec
sub
ss
ins
mov
inc
and
popf
ror
cwde
(bad)
xor
rol
leave
sar
add
add
or
or
cdq
pusha
adc
sbb
aas
or
mov
or
(bad)
je
inc
sbb
adc
ja
cs
lea
fcomp
mov
in
js
push
mov
cmp
push
js
cli
pop
repnz
mov
xchg
cld
adc
dec
call
and
mov
mov
sbb
psubb
push
cmp
sbb
retf
add
dec
arpl
mov
xor
adc
shl
inc
jle
ret
cmps
popf
push
mov
or
popa
mov
fsub
aam
cmps
test
stos
scas
xor
dec
push
xchg
or
int
mov
add
add
stos
inc
add
icebp
push
pushf
xchg
cmp
js
stc
bnd
sar
and
repnz
test
(bad)
sti
mov
inc
inc
les
mov
movs
sbb
movs
xchg
clc
and
jb
aas
xchg
clc
xchg
cs
retf
enter
xchg
xchg
xor
inc
les
movs
enter
aaa
xor
ret
mov
and
add
cmp
adc
sbb
jge
jmp
bound
mov
adc
xchg
aas
in
push
mov
dec
or
dec
mov
mov
add
and
ds
dec
retf
nop
or
xchg
xchg
enter
or
pop
jmp
iret
fisttp
imul
jo
repnz
pop
rol
nop
jnp
leave
jae
movs
cmp
call
iret
loopne
xor
pop
and
dec
or
xor
and
xor
lods
and
in
or
push
and
mov
sub
cmp
push
inc
push
and
cmps
push
jbe
in
mov
xchg
mov
imul
stos
sub
bound
movs
pop
sub
xchg
hlt
mov
mov
cmps
cmps
push
sahf
jmp
sahf
popf
cs
sbb
int3
cmp
in
int
adc
stos
jl
aas
xchg
lock
ret
mov
(bad)
stos
test
mov
mov
rcr
rcl
xor
pop
ret
lahf
in
test
cmps
mov
movs
cmps
scas
cmps
push
in
sbb
lods
jb
ret
aam
aam
push
inc
adc
xor
(bad)
stos
jp
shl
je
ret
push
inc
inc
lahf
or
jp
inc
ror
adc
call
loop
rol
into
pop
cmp
push
gs
pop
add
je
seto
test
jo
mov
movs
adc
push
sbb
jnp
or
add
test
pop
pop
mov
push
and
adc
pop
test
mov
aaa
sub
nop
in
sbb
xchg
inc
add
pusha
and
ret
jmp
mov
jne
in
add
pushf
sub
int
dec
imul
arpl
adc
ror
loop
or
pop
cdq
mov
sub
jg
pop
cmps
retf
pop
sub
fmul
leave
jb
popa
xor
or
imul
(bad)
mov
or
cmp
dec
xchg
cmp
cmp
pop
or
mov
add
fs
and
das
push
or
(bad)
or
shl
pop
or
xchg
mov
mov
xchg
sub
dec
and
sub
inc
enter
repnz
or
cmp
adc
test
push
jg
mov
test
aas
jl
fs
mov
test
test
movs
push
test
test
push
jns
fcomp
(bad)
in
and
jge
sub
imul
or
fcom
outs
sbb
pop
add
cmp
jg
fcom
cld
mov
rcr
loopne
mov
jmp
cld
jecxz
enter
sub
inc
xchg
cmp
fsubr
movs
lods
iret
into
int
retf
movs
xor
(bad)
std
sbb
(bad)
cld
fcomp
cld
repnz
xchg
fcom
fucomi
in
aam
mov
scas
jl
inc
fdivr
mov
in
idiv
in
jmp
sub
adc
jb
sbb
mov
retf
dec
jae
lods
jmp
jmp
call
sub
sbb
sbb
sbb
adc
adc
or
in
xor
stc
icebp
mov
cmc
dec
lock
adc
mov
push
add
sbb
sub
add
sti
(bad)
lsl
call
and
int3
mov
repz
stc
sub
add
sub
pop
sub
push
sub
cmp
xor
sub
xor
test
sbb
cmp
adc
push
fwait
loope
inc
sbb
add
add
add
or
xlat
ins
inc
jb
dec
fdiv
mov
xor
shr
sub
mov
mov
and
push
mov
and
push
add
es
lahf
adc
outs
adc
les
in
add
fnsave
addr16
add
ins
mov
add
int
or
or
dec
add
dec
lock
and
mov
mov
pusha
(bad)
nop
mov
ss
jne
test
and
call
add
jno
push
lock
cmp
out
jne
inc
add
mov
inc
fs
sub
imul
dec
mov
sahf
pop
outs
or
inc
and
pop
mov
push
jl
add
and
clc
mov
sbb
call
jle
loope
jle
add
add
and
jp
dec
jne
test
dec
ja
les
dec
or
mov
xchg
mov
adc
dec
imul
cmps
test
adc
sub
adc
nop
int
sub
pop
sub
add
jno
or
sbb
fmul
lods
or
sbb
lgs
or
push
mov
or
in
mov
or
movs
mov
dec
dec
enter
xchg
retf
cmps
test
or
das
dec
xchg
cs
sub
adc
dec
pop
jb
cmp
xchg
cld
or
add
lock
mov
femms
inc
js
mov
dec
in
nop
or
xchg
je
aas
cmp
xchg
rol
pop
push
in
adc
sub
add
sub
sbb
add
xchg
outs
push
loop
and
js
loope
addr16
sub
xor
jg
hlt
pop
test
stos
fs
jge
sub
push
add
fdivr
and
or
cwde
xchg
sbb
pop
xchg
mov
xchg
jmp
pop
or
je
shl
sbb
mov
jne
into
pop
push
xor
repnz
fiadd
and
lods
lahf
sub
repnz
lea
inc
jmp
inc
lea
daa
nop
cmp
loopne
cdq
add
fild
cmp
mov
pop
enter
add
pop
mov
lods
call
fwait
sub
sub
sub
sub
dec
sub
arpl
xor
cmp
jmp
mov
mov
scas
or
cmp
xor
movs
ror
cwde
test
mov
xor
add
pusha
ins
js
ja
jne
popa
mov
jle
ins
xor
in
or
cmc
or
push
lods
or
shl
aaa
and
adc
add
mov
std
jge
pop
add
pusha
cmp
dec
les
adc
imul
jbe
xchg
inc
fsubr
dec
push
add
inc
push
inc
sbb
mov
mov
jg
bound
pop
repnz
out
enter
xor
dec
xor
mov
pop
inc
rol
jo
jns
and
add
and
bound
mov
lea
aas
bound
pushf
mov
mov
call
push
call
lods
sub
mov
lods
scas
aam
aas
push
test
sub
cmp
push
mov
ins
ins
jb
jmp
add
int
inc
hlt
ins
or
ins
sbb
nop
pop
call
mov
fmul
push
mov
mov
xor
add
pop
or
(bad)
mov
cmp
test
cmp
lahf
and
scas
mov
sti
(bad)
fstp
bound
mov
add
or
mov
cmp
add
clc
loope
add
add
cmps
cmp
aam
ret
scas
int3
pop
into
xor
xor
pop
bound
add
into
xor
mov
xchg
je
sub
js
cmp
pop
aas
enter
je
inc
test
adc
add
sbb
cs
inc
jo
push
sahf
pop
jo
dec
mov
pop
mov
sahf
fst
int3
mov
add
xor
push
fisub
outs
cmps
push
scas
sbb
enter
cmovae
lds
aam
nop
lds
xchg
or
cmp
mov
xchg
mov
fs
xor
movs
push
test
xor
pop
dec
in
xor
dec
movs
data16
push
fistp
add
or
aaa
xor
rcl
add
nop
push
(bad)
outs
call
push
lea
and
rol
mov
adc
dec
cmp
and
call
sbb
add
cmp
dec
stos
xchg
les
and
adc
in
(bad)
pusha
sub
loope
nop
clc
and
enter
cld
jo
pop
xchg
stos
sbb
jns
jl
nop
cs
jo
mov
adc
in
push
xlat
adc
mov
pushf
aas
sbb
xor
cdq
add
icebp
push
adc
iret
sub
adc
lock
addr16
jo
scas
cmp
xadd
pop
add
pusha
jne
mov
or
add
cmp
xor
lahf
dec
(bad)
jns
push
xchg
or
out
push
xchg
pop
sub
hlt
add
xchg
push
push
add
sbb
mov
adc
in
sahf
or
div
mov
push
jbe
dec
and
push
jb
and
push
and
test
mov
jnp
or
mov
pusha
add
xlat
and
sbb
sbb
jmp
dec
or
mov
jne
into
movzx
push
call
push
(bad)
dec
leave
or
jae
pusha
jp
jo
and
pushf
gs
mov
loope
and
enter
sbb
(bad)
fst
sbb
push
or
aam
js
add
movs
xor
imul
inc
leave
xlat
and
pusha
sbb
movs
add
and
jb
xor
stos
jge
xor
ret
adc
adc
test
sbb
out
lea
adc
pop
jle
jp
xchg
xchg
cmps
mov
mov
mov
mov
shl
shl
jno
adc
push
shl
jnp
(bad)
sub
push
ja
pop
(bad)
pop
imul
dec
push
push
mov
add
and
and
or
push
pusha
push
in
fstp
cdq
adc
push
(bad)
mov
adc
mov
inc
and
mov
movs
sti
or
xchg
fisttp
(bad)
in
outs
test
pop
adc
and
cmp
inc
xor
sub
movs
ror
std
je
add
push
das
add
jo
xor
addr16
outs
mov
and
or
sbb
mov
sbb
idiv
xchg
push
jle
mov
push
add
adc
inc
or
sub
xor
(bad)
jl
sub
cdq
pop
in
push
test
cwde
and
sbb
add
xor
stos
push
mov
nop
nop
gs
movs
cmps
cmps
jb
nop
retf
movs
movs
aam
dec
in
movs
(bad)
sbb
sahf
dec
push
xchg
sbb
gs
inc
push
adc
and
sbb
repnz
or
sbb
pop
adc
lea
add
push
pop
jns
arpl
xchg
movs
adc
dec
lea
lea
add
sub
add
rcl
mov
push
in
mov
mov
sbb
sub
sub
inc
sub
test
cld
cwde
or
mov
jns
pop
pop
cmps
scas
pop
pop
pop
ja
jno
pop
mov
xor
inc
mov
jns
sbb
sti
push
outs
dec
mov
jo
mov
cmp
js
jmp
lods
retf
aas
push
mov
pop
xchg
call
jb
nop
adc
aas
cwde
lock
mov
aas
mov
in
in
mov
fs
icebp
cwde
pushf
repnz
mov
lahf
jle
mov
mov
and
xor
sub
sbb
mov
outs
aaa
and
leave
pop
jl
adc
adc
or
sub
punpckldq
push
xor
(bad)
mov
(bad)
fmul
cmovb
scas
fs
or
in
lea
mov
pushf
push
jecxz
push
(bad)
scas
pop
xor
add
jns
loope
aam
fistp
dec
test
adc
sbb
and
leave
adc
xchg
sbb
cmp
rol
imul
inc
adc
movs
or
adc
leave
cmp
aaa
push
push
stc
inc
lea
clc
xchg
hlt
push
inc
xchg
out
lock
loopne
sbb
ror
xor
pop
adc
or
mov
cmp
adc
cld
pop
mov
and
jle
add
dec
add
jns
in
nop
mov
dec
jne
test
sbb
or
out
test
sbb
jp
cs
or
inc
cmp
movs
pop
mov
pop
add
shl
adc
adc
add
cmp
popa
xor
and
repnz
adc
fnsave
mov
add
sbb
add
nop
jno
adc
adc
sbb
jno
and
lods
les
mov
jb
push
add
les
outs
add
jo
xchg
mov
add
lods
daa
push
sbb
arpl
mov
mov
sub
inc
jg
xchg
les
sbb
sub
mov
mov
imul
mov
and
pusha
mov
inc
mov
cwde
and
lock
shl
js
out
stos
int3
push
in
ret
and
adc
push
(bad)
shl
leave
push
dec
push
and
push
inc
add
jns
rcr
add
add
das
lahf
dec
aaa
inc
sar
mov
and
add
cmps
sbb
add
shr
or
loop
rcl
xlat
sbb
pop
in
pop
lock
cmp
dec
mov
cmp
xchg
mov
stc
test
mov
push
loopne
in
or
and
jb
sbb
pop
iret
push
cmps
adc
add
loopne
mov
daa
stc
call
in
sbb
inc
nop
shr
mov
pop
rol
push
aaa
daa
(bad)
mov
je
push
cmp
fcom
add
lds
push
fdiv
mov
sahf
mov
aad
pop
test
add
cmp
dec
pushf
or
cmp
sub
or
loope
bound
daa
push
(bad)
in
add
ins
or
add
icebp
pop
adc
(bad)
inc
xchg
sub
das
pop
dec
push
in
aam
aaa
mov
cdq
or
adc
cmp
mov
mov
cmps
shl
cmp
push
and
push
push
push
lods
rol
fs
call
cmp
or
mov
pop
enter
enter
pop
xor
push
push
inc
js
push
sar
or
pop
jmp
push
cmp
fdivr
and
cmp
rol
mov
scas
cmp
je
dec
jno
mov
adc
mov
push
leave
xchg
sub
cld
xor
lahf
fsubp
int3
xrelease
jmp
aad
(bad)
aad
push
or
and
inc
loopne
push
sbb
jle
lock
int
add
sub
dec
adc
push
(bad)
ficomp
cmp
fidiv
and
dec
pop
jne
adc
xchg
sbb
cli
mov
add
scas
fstp
xor
mov
js
xchg
loope
xchg
xor
mov
cmps
inc
pop
xor
sub
sahf
data16
jb
sbb
xchg
xchg
dec
movs
stos
stos
test
test
pop
sub
sub
push
and
out
fisubr
fld
movs
and
pop
lods
xor
int
sub
and
int
and
or
or
and
xor
sub
sub
and
xor
xor
int
and
or
xor
cmp
int
and
push
cmp
push
jo
fwait
inc
mov
int
and
inc
xor
int
inc
adc
int
and
adc
push
and
xor
push
adc
xor
int
push
adc
and
push
pop
pop
pop
pusha
and
xor
pusha
sbb
push
xor
fs
imul
push
xchg
hlt
and
ds
xchg
daa
mov
push
(bad)
out
add
call
cmp
and
or
add
mov
fld
pop
sahf
adc
push
jae
retf
jbe
pop
or
or
pop
ror
xchg
jnp
or
inc
(bad)
cmps
mov
mov
inc
xchg
ret
stc
sub
dec
add
add
or
xchg
xchg
(bad)
or
xchg
pop
jbe
mov
adc
ss
or
sub
sbb
sbb
inc
cs
sbb
sbb
mov
sbb
jb
pop
pop
and
in
enter
and
adc
or
lahf
lods
adc
pop
outs
test
add
cmp
cmps
out
xchg
and
out
xor
add
xchg
(bad)
fisttp
xor
jae
xor
pop
xor
leave
push
jg
out
adc
inc
cs
dec
adc
leave
imul
push
aad
jge
xchg
inc
mov
mov
call
iret
and
jg
xor
push
(bad)
jne
popf
cmp
es
ds
outs
add
pusha
lods
mov
adc
xor
in
cwde
les
cmp
mov
adc
nop
ins
dec
or
(bad)
cmp
enter
jmp
nop
pop
enter
dec
sbb
jg
or
mov
movaps
enter
mov
sub
mov
popf
nop
punpcklbw
frstor
push
out
add
push
add
push
fild
push
inc
mov
cmp
mov
add
and
std
cmp
sub
popf
(bad)
fld
mov
jp
push
sahf
mov
and
mov
jb
cmps
stos
(bad)
lea
mov
or
xchg
popa
or
test
dec
push
fisub
push
fs
xchg
inc
rcr
iret
cmps
ss
cld
sbb
add
jmp
adc
add
mov
lock
movs
mov
add
jmp
or
ins
push
fwait
enter
fild
and
rcl
clc
(bad)
in
mov
lock
mov
xor
lock
add
sbb
aas
sub
sbb
jg
xchg
sbb
ret
or
out
lea
add
or
add
sar
lahf
mov
mov
add
out
clc
cs
js
cmp
jge
xchg
push
fnstenv
leave
mov
sub
push
xchg
jle
adc
daa
sbb
in
xor
sbb
jl
dec
or
gs
fadd
nop
dec
push
repnz
sub
xchg
mov
mov
sub
aas
dec
or
(bad)
mov
movs
xor
adc
hlt
(bad)
movs
aam
into
add
and
gs
add
push
rol
and
add
push
xor
or
inc
xor
add
imul
lods
les
xchg
xlat
and
pop
xchg
add
inc
out
hlt
xor
dec
adc
sbb
sub
inc
test
mov
or
leave
outs
inc
js
clc
add
fucomi
aaa
or
in
xor
mov
adc
test
clc
sub
pop
cwde
cmp
mov
inc
jle
mov
xor
les
and
dec
sbb
adc
xor
retf
inc
jb
scas
xchg
out
cmp
add
mov
pushf
je
nop
cmp
out
push
scas
add
inc
push
test
lock
sti
sub
or
cmp
xchg
imul
cmp
adc
cmp
adc
jae
fldenv
and
cmp
mov
pop
test
dec
xlat
sub
jo
xor
jg
pop
mul
bswap
cmps
fistp
dec
add
test
ja
aam
fadd
or
mov
dec
push
inc
(bad)
pop
pushf
call
or
mov
jge
(bad)
or
or
rol
or
sbb
fstp
or
enter
dec
add
dec
loopne
sub
push
adc
inc
dec
and
push
jae
mov
or
jb
sbb
inc
xchg
xor
pushf
add
lea
imul
dec
lods
je
cmp
inc
ret
cmp
push
or
inc
jb
jns
aas
test
mov
pop
inc
test
sub
call
les
test
push
aad
dec
dec
imul
test
mov
xor
bound
mov
jns
mov
pop
mov
ror
cmps
inc
push
mov
add
xchg
sbb
add
adc
sub
fadd
lock
test
and
and
xchg
push
fsub
and
lea
jge
push
push
stos
inc
mov
mov
sbb
dec
popa
sbb
in
loope
in
nop
sbb
lods
test
xchg
inc
lods
aas
sbb
call
sub
clc
mov
push
cmp
sub
mov
add
clc
in
icebp
adc
daa
lods
repz
adc
aaa
push
fs
in
jne
push
jl
es
add
pop
adc
push
lods
adc
adc
dec
je
cmp
jno
adc
adc
mov
or
cmp
or
bound
pop
rol
inc
ret
ret
push
and
sub
adc
mov
inc
ins
sbb
test
mov
push
add
mov
popa
std
mov
mov
or
inc
adc
dec
mov
lea
or
push
push
mov
mov
xchg
aaa
push
sub
pop
fdivr
rcl
test
inc
movs
pusha
mov
cs
mov
or
mov
push
push
pushf
inc
jne
or
add
or
mov
xchg
mov
pop
sub
sbb
js
popa
sbb
push
mov
add
mov
adc
nop
jge
out
movs
cmps
add
cmp
mov
stc
add
xor
inc
loopne
fld
push
(bad)
loopne
add
test
in
or
loop
mov
dec
inc
mov
and
dec
xchg
movs
mov
and
xchg
sbb
pop
xchg
in
mov
dec
mov
push
inc
xor
mov
and
pop
inc
sub
xor
ror
mov
pop
es
int3
push
clc
mov
cwde
ret
js
push
loope
sbb
pop
xchg
jp
pop
cld
push
cmp
add
repz
inc
mov
pusha
add
dec
push
mov
push
mov
pop
dec
dec
sub
sub
inc
and
or
jmp
cdq
dec
fisubr
dec
dec
sub
dec
call
test
lds
test
sbb
mov
retf
dec
js
shl
xchg
pop
sbb
repz
pushf
xchg
dec
imul
sbb
pop
fsub
xchg
fdiv
out
and
mov
push
and
ficomp
mov
and
lea
fs
outs
adc
leave
add
inc
enter
rcr
test
nop
out
(bad)
mov
test
sbb
mov
jmp
cmp
enter
cmp
jo
xchg
enter
jae
dec
sub
fldcw
scas
adc
mov
xchg
cld
cmp
je
and
mov
push
enter
inc
adc
mov
inc
je
push
jb
push
sub
or
es
test
adc
mov
enter
inc
lods
mov
or
pop
test
aas
out
sbb
retf
in
test
movs
add
xacquire
sub
jne
sub
clc
(bad)
loopne
repz
stos
adc
push
outs
mov
jo
xchg
lods
stc
cmp
jns
inc
inc
xchg
sub
lahf
dec
add
xchg
int3
cmp
loop
xchg
cs
pop
xor
add
shl
fist
(bad)
sti
call
and
pop
or
rcr
cmp
ins
xor
mov
cwde
dec
xor
push
and
inc
adc
pushf
mov
inc
inc
push
es
inc
sub
dec
inc
cmp
popf
je
cmp
stos
dec
gs
mov
xor
dec
push
dec
push
dec
enter
dec
pop
mov
dec
dec
push
pop
aaa
push
dec
dec
pusha
push
mov
or
rcl
fist
test
push
sbb
test
and
add
push
sub
add
push
push
rcl
add
xor
dec
xor
pop
push
push
dec
xor
xor
add
add
sbb
stos
pop
dec
pop
mov
and
xchg
jl
mov
sbb
adc
mov
add
inc
and
pop
xor
mov
xor
push
add
mov
loope
fsub
ds
std
fsubr
mov
or
add
fsubr
push
push
xchg
inc
aas
mov
dec
sub
frstor
push
adc
mov
xchg
jge
add
ror
or
(bad)
adc
out
mov
es
adc
sbb
dec
or
add
and
sub
mov
push
and
call
mov
add
aam
fdivr
jb
and
sub
mov
ret
pop
xchg
jl
in
mov
ftst
mov
shl
jnp
scas
sbb
adc
in
sti
out
jmp
not
ret
out
gs
data16
mov
mov
rcl
adc
xchg
pop
js
js
jb
inc
cld
add
add
retf
movs
(bad)
(bad)
cld
sub
fstp
xor
cs
shr
das
jmp
fbstp
retf
das
sbb
icebp
ror
jmp
div
in
adc
repnz
adc
pusha
shl
retf
in
aas
adc
pop
xchg
push
lds
mov
lock
mov
and
mov
xchg
pop
mov
fwait
call
jg
adc
mov
sub
mov
sub
or
sub
xor
rcr
mov
adc
jmp
push
ret
aas
jg
xor
or
sub
sbb
test
inc
jg
dec
jno
repnz
dec
sbb
in
sahf
xchg
lods
lods
lods
add
add
sub
cmp
dec
movs
out
in
sbb
jnp
mov
add
sbb
in
pusha
cld
jge
xor
imul
add
fbld
int
mov
in
jp
aas
pop
pop
mov
mov
retf
in
mov
scas
lods
push
push
pop
dec
xchg
xchg
push
aas
sub
movs
repnz
sub
das
jle
mov
jne
or
mov
imul
xchg
pop
rcr
jmp
pop
pop
lods
ror
inc
add
jg
cmp
test
test
mov
push
mov
scas
adc
xchg
in
repz
aas
sub
sub
sub
xchg
cmps
push
mov
es
cmp
push
(bad)
mov
outs
ins
pop
add
sahf
pushf
popf
mov
ret
pop
dec
jne
dec
mov
in
pop
and
mov
je
mov
jg
call
jnp
in
repz
jmp
mov
mov
push
sbb
ret
in
jo
sbb
xor
aas
xchg
dec
jb
fidiv
repnz
lock
ror
xchg
mov
xchg
enter
inc
out
das
(bad)
std
xchg
mov
cwde
fst
rcr
xlat
rcr
shl
int
(bad)
(bad)
mov
pop
les
les
dec
inc
lahf
xchg
inc
leave
stos
and
pop
lods
sti
inc
cs
retf
lods
lods
stos
test
retf
and
retf
sbb
fstp
fdivr
leave
add
cmp
fdiv
mov
int
(bad)
mov
and
mov
pop
cs
loop
jecxz
loopne
xchg
out
pop
xor
xor
ret
or
int3
jo
mov
mov
xor
and
clc
or
enter
adc
imul
sbb
aas
fdivr
div
clc
adc
icebp
movs
std
aam
xor
adc
add
sub
or
nop
and
cmps
aaa
adc
pop
aas
jle
ins
jmp
mov
cs
sub
sub
add
daa
jns
mov
mov
pop
popa
test
and
lods
inc
sub
je
shr
sbb
lea
or
mov
nop
add
inc
push
lods
test
outs
add
pusha
push
xchg
adc
adc
lock
cmc
adc
fldenv
sbb
cmp
add
jne
out
test
test
adc
std
shl
arpl
mov
fs
push
push
mov
add
dec
leave
push
or
mov
inc
xor
ins
ds
int
xrelease
push
imul
test
mov
sbb
repnz
sti
mov
and
inc
sahf
mov
adc
mov
add
ret
nop
mov
cdq
cdq
mov
mov
mov
pop
sbb
inc
les
and
or
fs
pop
pop
pusha
call
test
dec
pop
lods
inc
(bad)
push
sbb
inc
loop
(bad)
nop
pop
mov
rol
dec
push
hlt
idiv
imul
into
call
or
sbb
dec
add
xchg
or
sbb
rcr
mov
movs
dec
jb
sub
call
dec
call
xor
or
fwait
xor
jne
test
lea
into
jo
pop
pop
add
unpckhps
sbb
xlat
pop
gs
int3
mov
inc
bound
adc
stos
pusha
sti
out
or
inc
cmc
and
mov
add
push
or
jno
pop
push
in
push
cmp
or
out
inc
adc
pop
jb
push
dec
pop
mov
bound
push
inc
int
daa
mov
dec
(bad)
repz
sub
retf
lea
pop
sti
test
push
adc
fdiv
test
inc
xor
das
xor
call
inc
and
sub
mov
mov
sbb
xchg
cmc
test
inc
mov
(bad)
sbb
sub
pop
xchg
retf
adc
dec
add
add
xchg
and
cmp
xchg
call
add
push
adc
jl
xchg
dec
pmulhw
adc
jecxz
fs
loopne
mov
mov
mov
sub
bound
push
mov
adc
push
mov
sub
(bad)
mov
mov
add
mov
arpl
arpl
add
push
repnz
cwde
inc
addr16
inc
add
adc
push
mov
es
adc
or
xchg
mov
xchg
adc
xlat
xor
inc
in
push
push
cwde
loopne
or
mov
popf
cs
xchg
add
inc
sbb
iret
and
iret
(bad)
jmp
es
iret
(bad)
jmp
push
dec
mov
cs
xchg
sbb
jb
pop
stc
leave
sbb
(bad)
mov
fild
pop
push
add
inc
hlt
add
sub
or
mov
jne
je
fcomp
clc
or
js
cmp
jg
call
or
cmp
mov
call
fsub
jl
add
xchg
icebp
mov
rcr
push
pop
aam
pop
sahf
jnp
clc
jl
shl
sub
xchg
dec
jl
xchg
in
das
push
shl
pop
loopne
and
and
ds
jae
retf
hlt
inc
sbb
or
inc
jmp
push
sub
sbb
(bad)
out
inc
cmps
jl
sbb
adc
and
aad
cmps
add
push
jo
push
sub
or
ds
lods
and
call
outs
test
outs
push
or
loope
cmp
adc
retf
leave
push
mov
leave
enter
inc
loope
push
xor
xor
xchg
cld
dec
or
push
push
push
dec
call
sbb
cmp
pop
jo
fdivr
cmp
enter
push
sbb
fdivr
out
sbb
inc
inc
cmp
inc
in
mov
pusha
movs
add
mov
mov
test
push
cmps
push
mov
jnp
jbe
imul
xchg
call
scas
xchg
clc
mov
pop
mov
test
ret
xor
aad
dec
pop
jb
ja
idiv
cmp
jg
adc
push
or
ret
cmp
cmps
rcr
hlt
mov
aam
(bad)
pusha
pop
cli
mov
xchg
sar
and
fwait
or
(bad)
fcom
dec
and
xchg
inc
leave
jbe
dec
sar
cmp
inc
mov
and
inc
adc
cwde
jmp
or
ins
pop
leave
jbe
or
sub
dec
shr
xor
xor
push
into
sbb
and
and
sub
sbb
(bad)
sbb
mov
pop
mov
xchg
enter
add
xor
sub
lods
mov
stos
sub
or
mov
jmp
or
inc
mov
loopne
popf
lock
sbb
pop
stos
dec
xor
es
leave
xor
add
lods
mov
xchg
xchg
aas
(bad)
mov
push
daa
and
sahf
push
pop
add
and
fisubr
push
sbb
adc
test
and
mov
movs
jecxz
add
fmul
jns
xchg
or
adc
dec
mov
jne
hlt
add
rol
adc
es
push
adc
or
cmp
mov
adc
les
mov
sldt
cmp
cli
dec
mov
cmp
sub
or
cs
sti
aad
push
and
retf
xor
pop
cmp
jle
and
(bad)
daa
sbb
fist
xchg
mov
mov
push
dec
sbb
push
shl
adc
fiadd
int3
iret
adc
dec
and
lea
pop
sub
mov
cmps
cld
call
enter
pushf
test
xor
data16
add
and
pop
test
inc
into
dec
adc
gs
jge
(bad)
fild
add
mov
lea
add
aam
ret
add
jecxz
xchg
ja
imul
inc
dec
(bad)
xor
(bad)
xor
mov
test
popf
cmp
xchg
data16
sti
dec
lods
jnp
inc
jb
inc
push
ret
lods
repz
(bad)
sub
dec
ds
(bad)
loopne
inc
enter
(bad)
stc
or
push
xchg
or
jmp
push
dec
repnz
cmp
aaa
pop
dec
lds
mul
cvtdq2ps
sub
std
push
adc
fdivr
(bad)
mov
add
push
inc
mov
pop
push
cmp
mov
sbb
cwde
mov
inc
mov
xchg
std
cmp
in
cmp
cmp
xor
shl
inc
push
hlt
sub
jae
push
fist
(bad)
jno
std
or
xor
rcr
popf
enter
dec
lds
xor
enter
push
mov
mov
sbb
ror
lds
push
jno
nop
cld
ds
leave
enter
inc
aas
icebp
dec
and
mov
mov
mov
push
sbb
mov
xchg
enter
clc
sti
inc
inc
out
fnstenv
inc
test
sti
inc
inc
jo
nop
mov
push
xchg
pop
xor
jle
cmp
sub
or
inc
mov
and
inc
and
adc
dec
test
inc
jmp
dec
bound
or
add
push
test
and
jb
mov
jecxz
cld
adc
data16
test
retf
jg
mov
retf
(bad)
fdivr
push
adc
xor
add
in
pop
call
sti
dec
hlt
test
daa
cmp
nop
sti
cmp
dec
and
xor
sub
sub
cs
cmp
(bad)
cli
mov
inc
cmp
jp
mov
and
jecxz
out
(bad)
es
cmp
jne
cmp
cwde
neg
push
test
cmp
out
push
and
shl
enter
mov
cmps
mov
mov
sub
push
nop
cwde
push
jnp
pusha
add
add
and
(bad)
pop
cld
jae
mov
add
dec
and
sbb
js
xchg
xchg
nop
std
dec
lock
sub
cdq
xchg
dec
dec
dec
aam
sahf
mov
dec
ror
sbb
dec
cmp
repnz
in
mov
ins
loop
dec
ss
xor
push
mov
cld
dec
push
nop
ins
outs
test
test
sub
lea
dec
push
inc
push
call
cmp
retf
add
add
loop
xchg
dec
cmp
jno
in
nop
dec
dec
inc
std
sub
jo
mov
inc
les
in
pop
adc
ror
jne
mov
add
add
pusha
fsub
and
dec
mov
jns
jle
add
ret
add
loope
test
inc
in
xchg
and
dec
pop
xlat
and
ss
dec
sbb
addr16
fisubr
cld
rcl
(bad)
retf
push
push
push
sbb
cmps
push
jb
out
lock
out
neg
ror
ret
inc
aas
pop
pop
nop
dec
pop
adc
push
dec
shl
push
sub
inc
dec
sete
jl
dec
inc
cmp
push
stos
add
ins
add
and
push
sbb
cmp
mov
sub
fsub
push
mov
leave
or
pusha
cld
push
nop
mov
cmp
pop
dec
in
sbb
sbb
stos
add
xor
pop
jl
add
jl
add
fs
pop
loopne
adc
and
pop
pop
movs
imul
repnz
inc
or
call
jge
pop
pop
and
xor
inc
xchg
jo
mov
inc
pop
and
shl
lods
and
push
push
pop
add
adc
call
add
std
cmp
mov
fwait
cmp
or
mov
add
push
add
pop
mov
xchg
fimul
jb
jp
adc
sahf
sbb
adc
clc
icebp
in
movs
cwde
int3
pop
sbb
popa
push
dec
sahf
inc
and
mov
sbb
fdivr
fs
sti
arpl
sti
sub
add
in
xor
xchg
gs
cld
and
pop
pop
sub
sub
pop
cld
loop
xor
xchg
xor
pop
mov
jl
add
aam
push
leave
and
int3
fisub
xor
push
sbb
push
push
fs
lock
cld
push
inc
rcl
mov
xchg
and
xchg
retf
imul
cmp
and
dec
inc
stos
inc
cmp
adc
and
das
add
dec
push
add
push
ror
adc
mov
pusha
pop
mov
xchg
add
les
adc
lds
test
xchg
adc
imul
or
aad
inc
sub
inc
add
and
add
pop
ja
xchg
jl
xchg
jo
add
xor
loopne
add
jns
xlat
sub
add
xchg
(bad)
rol
aas
fs
sub
ins
mov
inc
xchg
pushf
xchg
ins
mov
pop
inc
push
rcl
repnz
dec
lods
pop
inc
outs
mov
add
push
dec
xchg
mov
mov
mov
loopne
cmp
mov
lods
or
inc
dec
ficom
push
or
lahf
mov
out
pop
add
or
cmp
hlt
outs
xchg
or
movs
push
out
pop
cmp
dec
outs
push
and
or
and
sub
popa
mov
je
ss
xchg
mov
pusha
push
cld
iret
enter
dec
jo
mov
push
or
ficom
outs
ret
aas
test
jnp
cdq
das
pop
mov
pushf
push
cmp
clc
cld
jno
movs
stc
add
add
dec
and
loope
or
test
xor
lock
add
in
cs
and
jmp
test
je
cmp
cmp
sar
ins
jb
leave
enter
cld
jbe
add
popa
ins
scas
mov
xchg
push
(bad)
mov
jo
js
sub
dec
push
enter
into
test
jne
sbb
xor
aad
fnsave
pop
imul
ret
mov
nop
les
or
jl
cmp
cmp
adc
dec
push
add
jns
xchg
jo
dec
jmp
cmp
jns
xchg
hlt
add
call
dec
sbb
mov
push
es
cs
jnp
cmp
adc
sbb
jge
jg
loopne
dec
fwait
dec
or
js
adc
mov
mov
loop
es
push
dec
cmp
xor
pop
ds
sbb
cmp
fstp
cld
test
lock
xchg
imul
xchg
mov
or
pushf
inc
(bad)
jnp
imul
fst
dec
sub
jbe
push
cmp
lea
or
(bad)
cmp
xor
xor
mov
movs
dec
lods
jae
loopne
pop
jne
daa
lahf
or
retf
or
es
pop
(bad)
or
and
sti
or
(bad)
jae
inc
sub
add
push
or
push
sbb
pop
mov
and
imul
or
jns
jns
mov
sbb
dec
sub
aaa
sub
sbb
push
pushf
jns
mov
mov
(bad)
adc
mov
popa
sub
adc
sub
or
dec
mov
sbb
mov
add
or
push
push
or
dec
xor
adc
mov
cmp
cmp
pop
cdq
in
xor
push
sbb
add
dec
pop
xchg
rol
mov
adc
cmp
enter
cld
std
lea
cmp
nop
mov
std
push
or
mov
fisttp
adc
or
in
pop
(bad)
push
or
in
xchg
cmp
(bad)
out
std
or
and
std
sub
mov
ret
push
fs
mov
ja
dec
pop
call
add
add
in
imul
mov
mov
std
jnp
shl
xchg
mov
mov
in
cmps
ss
icebp
or
in
jne
pop
das
enter
std
ret
adc
mov
enter
(bad)
std
xchg
(bad)
push
repnz
sub
push
push
dec
mov
jo
mov
gs
(bad)
in
loopne
inc
sub
test
xor
or
cmp
test
mov
push
lahf
shl
fadd
mov
inc
lea
fld
push
das
mov
push
xor
daa
daa
cmp
into
lock
push
xor
adc
enter
repz
pop
pop
mov
into
xchg
stos
call
pop
popa
imul
dec
jl
sar
cdq
mov
(bad)
pop
test
call
dec
test
mov
xor
mov
popf
pop
and
or
mov
jo
cdq
inc
scas
pushf
adc
xchg
mov
(bad)
jl
add
jo
sahf
test
push
stc
pusha
dec
push
lock
add
popa
mov
xor
ins
adc
rdtsc
stos
out
rcl
mov
xor
lock
cli
loopne
sub
xor
xchg
mov
sbb
mov
je
push
test
push
aaa
jne
cld
(bad)
shl
das
xor
and
cmp
cdq
stos
cmps
cmp
and
mov
call
fst
mov
and
sbb
push
add
push
fnsave
mov
mov
clc
mov
mov
or
sar
cmps
or
xchg
pusha
cwde
outs
inc
out
test
fwait
lods
cld
inc
imul
loopne
xchg
sub
or
adc
inc
rcl
cmps
cdq
inc
imul
mov
rol
jg
popf
push
stos
jb
popf
js
add
stos
adc
es
pop
mov
cmp
(bad)
mov
xchg
nop
cmps
sbb
or
mov
cmp
pop
mov
adc
out
and
add
jmp
stos
or
pop
js
dec
sub
dec
adc
movs
shr
adc
cs
inc
pop
cmp
push
adc
and
xlat
lods
ret
shr
bound
aaa
scas
push
nop
rcr
or
pop
mov
sti
cmp
sub
lock
mov
mov
cmp
mov
mov
ret
outs
push
dec
je
mov
fs
mov
mov
mov
dec
xor
scas
adc
xor
jae
push
adc
fnsave
sub
mov
sub
fistp
lods
inc
xchg
psrad
push
xchg
mov
std
cmp
stos
mov
jg
lea
jle
movs
mov
and
adc
and
cwde
test
and
adc
sbb
sub
cmp
ins
mov
fidiv
movs
mov
shr
icebp
mov
push
jae
mov
jo
dec
imul
test
cmp
fidiv
mov
push
mov
or
sahf
mov
mov
loope
adc
jns
xor
adc
mov
stos
ins
cmp
jo
retf
inc
out
dec
cmp
movs
sbb
dec
adc
arpl
add
pop
sahf
mov
add
and
jo
loop
das
cmp
push
add
xor
ror
or
mov
inc
add
inc
add
or
push
push
gs
in
mov
cmp
xchg
sbb
dec
mov
or
mov
stos
or
stc
push
not
adc
or
out
(bad)
sub
sbb
xchg
pop
in
pop
mov
jae
cld
push
mov
lea
mov
shl
xchg
test
dec
imul
in
ret
mov
jno
int3
adc
enter
(bad)
aam
nop
int
aam
cld
int3
add
pop
lds
cmc
rol
fdivr
lock
fsub
lds
les
ret
(bad)
push
sub
mov
add
fisttp
sbb
rcr
clc
js
push
sbb
in
cmp
and
(bad)
cld
retf
rcl
lock
xchg
xchg
stc
pop
ror
push
dec
test
jne
cmp
int3
shl
je
(bad)
lds
or
mov
jecxz
(bad)
es
mov
int3
mov
inc
leave
mov
pop
xchg
jo
cld
fwait
movs
cld
int
pop
das
daa
into
sbb
cmp
push
dec
call
dec
and
int
sbb
adc
movs
pushf
push
imul
mov
jmp
mov
lock
rol
and
loopne
or
inc
ins
cdq
xchg
dec
inc
sub
add
jge
aas
dec
jno
dec
pop
fild
rol
std
out
ja
and
xchg
xor
cmp
xor
and
sbb
lea
xchg
inc
cwde
xchg
or
inc
cmp
add
test
push
js
jl
rcr
dec
mov
(bad)
stos
clc
cmp
inc
push
fwait
mov
cmps
cmps
pop
cli
shr
xchg
data16
lea
add
rcr
add
and
in
push
nop
data16
or
aad
test
aam
rcl
shl
or
xchg
push
and
add
es
ins
add
fs
dec
in
xchg
hlt
clc
cmp
stc
cmp
sbb
cld
fadd
mov
dec
fld
imul
scas
mov
or
xor
cld
fisttp
(bad)
rcr
pop
push
sub
mov
and
stos
sbb
test
and
inc
loope
mov
aam
xor
movs
in
xor
xchg
cmp
inc
xor
retf
push
inc
jb
or
arpl
pop
push
dec
in
enter
push
out
pushf
in
pop
pop
out
(bad)
pushf
adc
call
movs
dec
and
xor
in
inc
xor
out
xchg
xor
dec
xor
sub
push
dec
xor
and
sbb
xor
fwait
dec
call
xchg
xor
test
call
adc
cli
or
cli
out
sbb
loope
or
clc
in
or
dec
sti
mov
and
sti
xor
and
dec
fdiv
aam
ds
outs
mov
mov
push
mov
std
xor
loopne
sub
mov
pushf
jb
mov
xor
pop
aam
xchg
retf
cmp
xchg
rol
scas
sub
jno
cmps
popa
lods
adc
outs
inc
pop
frstor
shl
stc
(bad)
call
int3
mov
xchg
adc
mov
repnz
cli
ffreep
mov
push
mov
and
enter
adc
cmps
sbb
xlat
mov
and
loop
enter
movs
test
jne
test
aad
dec
mov
test
and
xchg
push
push
aad
xor
cmp
xor
lods
dec
mov
add
xor
add
cmc
add
xor
nop
pop
pop
inc
mov
mov
xor
jmp
mov
jg
cmps
sub
in
cmps
lods
mov
jnp
sub
sub
sub
sub
repnz
sub
sub
enter
sbb
mov
jns
and
jg
hlt
add
jb
sahf
cmp
cld
add
add
leave
and
cmp
sub
sbb
in
retf
add
or
or
cmp
adc
adc
sbb
pop
jle
xor
movs
lea
cmp
adc
sub
repnz
adc
add
sub
cmp
add
sub
sub
loope
imul
ror
rol
push
dec
dec
dec
pop
fcomip
and
mov
add
mov
shl
out
jmp
aaa
cmp
sti
in
cmp
sbb
push
push
dec
sub
dec
or
or
popa
push
sbb
repz
cmp
mov
xchg
or
sahf
out
inc
jae
ins
add
cmp
div
jno
jo
ja
ret
in
xchg
sbb
xchg
inc
es
dec
dec
dec
inc
sbb
movs
xor
jns
jp
fst
ja
inc
fnsave
push
adc
daa
pop
pop
xor
lea
mov
lahf
lock
pusha
mov
popa
pusha
xchg
nop
jb
test
in
inc
or
sbb
xchg
xchg
xchg
xchg
call
fucomip
push
and
cwde
and
ins
retf
retf
ins
ins
popf
pushf
lahf
xchg
xchg
loopne
mov
ins
jns
addr16
mov
or
push
clc
lods
jno
add
mov
retf
mov
fs
xchg
(bad)
je
test
sbb
movs
movs
daa
jp
or
xchg
fcomp
enter
jge
mov
js
dec
sbb
sub
stos
lods
test
mov
aam
mov
nop
retf
leave
xor
nop
retf
rcl
push
cdq
nop
inc
test
pop
mov
push
mov
cs
retf
mov
mov
jb
or
retf
and
mov
mov
repz
dec
push
xchg
enter
shl
fild
adc
aas
adc
mov
std
mov
sti
test
movs
mov
fcomp
int
aaa
adc
inc
push
(bad)
in
inc
inc
lods
mov
je
out
cmp
jmp
mov
adc
sti
add
popf
shl
fmul
or
rcl
enter
shl
cs
into
cdq
int3
in
and
cld
int
sub
(bad)
inc
mov
cdq
nop
aam
fld
fdivr
sahf
pop
xlat
aam
add
aad
and
push
add
xchg
mov
pop
sub
jecxz
daa
pop
mov
ins
jb
mov
or
sbb
push
or
mov
mov
dec
enter
in
mov
loopne
dec
sbb
sub
adc
cdq
in
inc
mov
call
jmp
add
(bad)
(bad)
mov
xchg
lods
push
xchg
in
ror
fist
lock
rcl
inc
dec
xchg
fcomip
scas
leave
xchg
cmps
outs
pop
sub
in
sub
mov
jne
test
pusha
jae
clc
cld
fcmovnbe
mov
add
(bad)
rol
add
mov
sub
jns
pop
xchg
movs
adc
xchg
adc
int
leave
rcl
inc
push
in
int3
fcmovb
mov
enter
adc
and
xchg
mov
sti
mov
sbb
loope
in
add
dec
sbb
add
push
push
sub
cmp
and
jb
loopne
and
and
and
or
gs
and
push
popa
in
test
pop
xor
cmps
fistp
jg
sbb
(bad)
xor
fcmovne
retf
and
ret
xor
fild
fnstenv
repnz
push
pop
mov
xchg
sub
cmp
ror
retf
ror
int3
inc
leave
in
pop
inc
ret
xor
pop
mov
cmp
push
enter
push
or
and
push
dec
js
int
xchg
js
inc
mov
nop
inc
inc
pop
pop
pusha
loopne
xchg
aas
adc
push
out
xor
(bad)
gs
jle
mov
leave
enter
mov
and
and
test
mov
and
test
retf
dec
mov
in
test
mov
mov
pop
sub
sbb
aas
jg
adc
fcmovnbe
nop
xlat
fcomi
pop
retf
movs
jb
jmp
xchg
xchg
cmps
push
mov
sub
sub
xchg
std
mul
icebp
(bad)
cwde
repz
addr16
jmp
jb
enter
frstor
in
ins
jo
sbb
dec
jbe
leave
lods
fdiv
and
cdq
cmp
ins
jne
ins
or
fnsave
push
stc
pop
mov
mov
mov
scas
push
stc
stos
mov
lahf
push
dec
mov
loope
cmp
rol
call
fs
fbld
pop
push
fadd
arpl
xor
enter
ror
gs
outs
nop
(bad)
hlt
sbb
sbb
(bad)
shr
mov
stc
sub
inc
dec
mov
xchg
retf
int3
rcl
rol
ror
int3
cld
and
inc
cs
into
retf
xor
cs
add
bound
mov
into
ffree
int
fmul
fcmovnu
(bad)
in
call
(bad)
in
adc
jmp
cli
adc
sub
adc
sub
cmp
fild
aam
add
xor
enter
pop
pop
lock
nop
retf
cld
sbb
and
add
add
add
dec
xor
xchg
lock
and
daa
and
xchg
xchg
cld
cmp
cmp
aas
add
scas
test
sub
add
add
add
jmp
push
pop
enter
cmp
cs
xlat
not
xchg
push
xchg
push
add
in
xchg
adc
add
add
dec
mov
add
add
cs
lahf
xchg
mov
adc
lahf
dec
dec
cmps
mov
jb
xchg
lods
and
cmps
lods
daa
es
sbb
push
and
push
push
pop
repnz
daa
inc
jle
dec
mov
adc
mov
sub
out
jg
pop
pop
pop
(bad)
dec
or
mov
loopne
sub
add
or
dec
shl
sub
retf
pop
pop
ret
fs
xchg
mov
mov
xor
enter
pusha
cmp
mov
ss
xor
fs
mov
fs
cmp
xor
cmp
pop
cmp
cmp
imul
lea
xor
xor
stc
retf
mov
(bad)
sti
std
inc
jmp
div
cdq
xor
js
stc
or
pusha
or
icebp
repz
imul
cmp
dec
into
dec
pop
cs
adc
jl
leave
adc
xor
add
jg
in
cmc
pop
pusha
cmc
not
fs
mov
push
ins
idiv
out
daa
jo
icebp
in
sti
es
aam
je
sti
inc
retf
enter
std
mov
jmp
sub
enter
add
test
nop
repz
mov
mov
les
std
xchg
fistp
pop
lods
sbb
sub
cwde
pushf
and
imul
xlat
shr
jae
lods
mov
pushf
pushf
sbb
pop
add
enter
xchg
and
iret
pusha
jle
xchg
and
mov
in
out
pop
cs
cmp
mov
enter
cmp
cs
mov
and
in
mov
jmp
out
mov
cmp
pop
and
and
test
cmp
rol
retf
rol
mov
in
mov
push
sbb
icebp
out
lock
imul
adc
ffreep
adc
enter
scas
repnz
stc
int3
sti
out
sbb
mov
mov
xlat
inc
jp
aad
pushf
pop
cs
adc
pop
sbb
fs
dec
sbb
fcomp
ins
push
fdivr
cli
loopne
add
adc
sub
in
pop
call
xchg
shr
sahf
pop
jb
retf
repz
add
das
add
inc
push
cdq
or
call
clc
cld
fsubr
lahf
leave
fsubr
add
pop
add
push
mov
fsub
call
adc
ret
lahf
adc
mov
cmps
sbb
or
add
or
pop
mov
cs
pop
ret
pop
cmp
xchg
or
add
idiv
add
inc
lea
sbb
(bad)
pop
in
or
scas
stos
stos
pop
ins
mov
movs
sbb
dec
add
imul
dec
sbb
fild
cs
push
add
cs
add
lock
mov
ror
and
in
add
sub
sub
push
xchg
pop
aas
dec
adc
leave
test
add
push
mov
push
pop
push
mov
sbb
mov
xchg
cld
push
xchg
xor
sbb
out
inc
xor
fiadd
enter
clc
xchg
clc
in
pop
jns
cmp
nop
sbb
xor
sub
add
ja
xchg
dec
push
xchg
enter
pop
xchg
sbb
and
fs
push
push
xor
daa
add
xchg
cmp
adc
push
mov
pop
ins
mov
push
mov
pushf
pushf
sbb
fist
in
lahf
in
mov
jo
pop
push
mov
mov
mov
inc
cs
pop
je
jne
inc
inc
sub
and
xchg
out
jg
js
cwde
jae
jl
iret
add
aas
jns
in
jmp
mov
cli
mov
scas
pop
les
stc
mov
cmp
icebp
lock
in
retf
pop
(bad)
shl
mov
movs
sar
mov
aas
test
pushf
pop
inc
inc
test
mov
xchg
mov
shr
xchg
test
(bad)
mov
jb
nop
scas
mov
mov
scas
movs
jb
loope
loopne
sub
fdiv
adc
dec
jb
lahf
add
pusha
jg
fdivr
adc
pop
add
jbe
add
sbb
adc
outs
jb
in
inc
mov
pop
xchg
aam
xchg
aam
pop
xchg
push
out
repnz
out
repnz
dec
lahf
into
adc
sar
shr
fbstp
aas
(bad)
mov
jmp
mov
pushf
cld
mov
in
add
mov
leave
add
mov
xor
and
test
das
cld
and
movs
dec
repnz
cld
xchg
rcr
xchg
cmps
cdq
pusha
pop
jge
or
xchg
repnz
or
sub
out
xor
jge
in
in
inc
fdivr
add
add
(bad)
enter
or
clts
leave
or
mov
push
jg
and
dec
lahf
xchg
dec
in
nop
int3
push
push
push
or
xor
or
xchg
enter
sbb
ja
push
sbb
retf
xchg
xor
dec
dec
out
push
mov
xchg
les
push
sbb
cmps
mov
retf
push
sbb
pop
fnsave
dec
fisttp
dec
xchg
ja
mov
leave
push
clc
ja
(bad)
and
sti
lock
push
and
mov
fst
sub
loope
sub
xor
imul
xor
adc
fdivrp
inc
popa
xchg
mov
aas
push
test
mov
and
in
push
jns
cmps
stos
inc
inc
inc
pop
push
or
inc
jb
jo
jb
je
jo
jg
mov
inc
inc
push
push
in
jne
je
jg
out
shr
daa
dec
pop
or
push
xor
jns
push
clc
xchg
pop
push
pop
lock
(bad)
lock
sti
fs
popa
xor
mov
cli
leave
xchg
jg
jo
sti
jmp
cli
sti
and
retf
pop
lahf
push
jl
dec
and
ss
mov
sar
and
test
inc
pop
stc
xor
(bad)
std
nop
mov
aas
js
mov
pop
pop
ret
cld
aaa
jb
jmp
repz
add
mov
loopne
fild
fwait
sub
xchg
test
ret
lahf
sub
in
push
xchg
mov
icebp
pop
movs
sti
xchg
(bad)
dec
mov
jo
inc
or
push
jb
and
test
sti
in
lods
icebp
in
inc
mov
pop
inc
in
mov
mov
call
mov
push
mov
inc
xor
or
pushf
pop
xchg
cli
pop
int
loopne
(bad)
(bad)
inc
rcr
cwde
pop
push
stc
nop
scas
enter
retf
jb
leave
enter
jb
xchg
sti
stc
cli
mov
test
stos
in
test
into
into
loope
test
xor
inc
and
push
xor
add
inc
fdivrp
mov
inc
add
pop
add
mov
test
stos
fistp
and
push
adc
stos
add
sub
rol
inc
dec
leave
xor
add
dec
dec
push
mov
inc
add
mov
push
push
dec
and
push
xor
js
cwde
leave
fdivr
mov
nop
es
loopne
mov
in
les
ins
xor
dec
xor
cwde
add
cwde
sbb
pshufw
mov
mov
test
xchg
mov
stc
cmp
jge
cwde
gs
fidivr
xchg
sub
popf
fs
dec
leave
(bad)
xor
add
rol
jb
xchg
int
pop
lods
lods
iret
sbb
and
adc
add
mov
jp
push
cmps
iret
(bad)
call
lods
je
and
lea
ins
ror
jo
test
xchg
outs
mov
mov
daa
xlat
add
sub
fwait
jno
xchg
add
pop
adc
push
inc
(bad)
jl
pop
ret
mov
outs
or
mov
or
add
or
and
ins
cmps
cwde
sub
retf
push
sbb
in
xor
xor
ret
and
(bad)
and
dec
xchg
adc
adc
dec
dec
jb
push
dec
arpl
mov
fidiv
movs
mov
jmp
xchg
mov
lea
mov
loope
mov
push
sbb
(bad)
in
dec
adc
and
call
jge
sub
dec
add
movs
push
xor
adc
fsubr
sti
mov
sbb
rol
adc
rcr
cmp
test
arpl
cmp
ins
mov
pop
mov
adc
cwde
adc
or
push
cmp
push
add
sub
cmp
add
ds
ja
ret
push
(bad)
cld
mov
popf
inc
mov
or
add
adc
test
add
push
popa
outs
imul
mov
add
add
out
sbb
sbb
test
jl
and
lea
sbb
add
pop
jmp
sub
ins
enter
or
xchg
test
sbb
lea
pop
sub
push
in
push
and
repnz
mul
lods
imul
and
or
and
aam
or
inc
lods
popa
sbb
cmps
add
add
int
aas
imul
lock
push
sub
je
in
jns
and
xor
cdq
add
push
clc
dec
xchg
or
fs
xchg
mul
xor
push
loopne
adc
imul
add
arpl
add
cmp
or
cmp
ds
mov
push
clc
push
out
lods
ret
adc
push
retf
mov
leave
cmps
sbb
pop
dec
and
and
push
aaa
sbb
jns
and
in
or
or
inc
and
sub
inc
add
retf
inc
sub
or
enter
movs
push
stc
sub
adc
mov
in
fiadd
add
push
pop
jmp
sbb
dec
cs
cdq
mov
rdmsr
pusha
shr
push
es
jo
outs
dec
jo
inc
cmp
or
adc
add
adc
adc
adc
sbb
inc
hlt
push
push
mov
in
dec
lods
sub
(bad)
(bad)
push
fcomp
inc
lds
arpl
dec
mul
mov
cmp
cmp
add
daa
cmp
fwait
cld
dec
adc
mov
test
add
jmp
xor
pop
ins
mov
dec
cdq
data16
add
movs
repnz
dec
push
push
or
cld
mov
jb
leave
and
shl
cmp
jne
mov
stos
sub
push
sub
adc
sub
and
inc
syscall
pop
mov
add
add
fs
xor
jb
xchg
or
jns
mov
inc
jb
(bad)
fdivr
push
sar
xchg
lock
mov
cmp
lods
mov
outs
mov
dec
cmps
sbb
mov
and
sbb
rcr
xor
jge
pop
dec
pusha
pop
int3
stos
sub
xlat
jmp
scas
cmp
add
call
pop
es
pop
test
lods
repz
push
inc
call
movs
xor
sub
in
retf
push
add
retf
cmp
aam
push
xchg
mov
fstp
pop
inc
int
popa
cmp
add
sub
push
pop
pop
add
sub
push
dec
iret
add
ins
or
sbb
pop
or
push
xchg
dec
push
push
dec
push
pop
(bad)
pop
push
dec
dec
add
add
jno
add
sbb
rol
mov
sbb
sbb
inc
push
popf
push
jo
mov
push
push
push
sub
or
jmp
inc
cmp
jge
xor
pop
rcl
inc
xlat
adc
mov
pop
add
add
xchg
mov
adc
or
scas
inc
mov
(bad)
rcr
aaa
inc
add
adc
aaa
mov
aas
mov
mov
or
pushf
fisttp
mov
movs
(bad)
and
mov
cmps
xor
mov
sbb
dec
xchg
call
inc
push
test
mov
pusha
dec
sub
push
fadd
in
fmul
stos
cmp
cdq
mov
or
stos
mov
jo
pop
and
cmp
femms
in
and
imul
xor
xchg
mov
movs
sbb
push
push
ds
ret
dec
cwde
aad
mov
mov
stc
mov
dec
xchg
ins
mov
inc
inc
iret
sbb
xor
push
lds
inc
(bad)
push
pop
mov
adc
mov
push
in
je
cwde
add
mov
xor
add
add
add
jmp
adc
mov
inc
dec
or
rol
ret
arpl
fs
ja
mov
cmps
imul
jmp
in
js
inc
xor
and
loope
and
sbb
add
test
inc
stos
sahf
call
inc
mov
fstp
push
pop
mov
or
mov
fldpi
or
cdq
out
push
mov
in
int
pushf
cmp
jo
adc
in
nop
push
aam
mov
push
imul
mov
push
push
outs
pusha
inc
mov
sub
jne
inc
xchg
add
xchg
and
inc
cmp
xor
and
je
inc
ins
mov
popf
adc
mov
outs
out
inc
loopne
cmp
adc
add
mov
int3
sbb
in
xor
adc
mov
ds
cwde
outs
mov
cmps
imul
pop
push
repnz
inc
or
dec
dec
jecxz
shl
inc
sahf
or
xor
cmp
jo
mov
retf
push
scas
mov
test
push
call
je
mov
cmps
add
les
push
mov
loopne
ja
jge
add
popf
jo
dec
ret
ja
sar
xchg
inc
mov
inc
addr16
jne
fstp
add
jae
jno
mov
cs
jbe
jo
pusha
outs
ret
test
retf
and
imul
loopne
ins
sbb
nop
ror
push
xchg
(bad)
retf
mov
in
sar
push
add
clc
gs
loope
pop
inc
lods
or
push
cmp
pop
and
jns
ror
clc
add
jp
pusha
mov
int3
add
daa
loopne
(bad)
(bad)
jns
xlat
push
pop
shr
pop
stos
mov
cmc
cld
cmp
nop
push
test
das
je
mov
test
test
add
jmp
out
aad
or
xor
cmp
out
arpl
jle
ins
mov
push
push
or
ror
jb
sbb
cmp
and
xchg
mov
sub
test
xor
aaa
mov
and
xchg
jns
js
loop
add
outs
adc
cmp
mov
add
xchg
dec
movs
(bad)
int3
push
push
or
add
mov
adc
push
pop
test
cdq
add
or
jae
int3
or
loopne
adc
lahf
dec
ret
xchg
inc
call
ds
xchg
add
adc
lds
js
cs
inc
adc
or
adc
mov
pop
xor
pushf
or
push
mov
or
or
push
dec
enter
push
push
lea
int
xchg
and
mov
adc
(bad)
mov
xor
and
xchg
dec
test
mov
mov
mov
pusha
dec
scas
or
or
mov
adc
cwde
add
fwait
call
retf
pushf
and
push
mov
popf
mov
push
inc
push
sahf
lahf
cmp
and
push
mov
push
inc
mov
inc
movs
movs
pop
jne
pop
adc
add
cmps
pop
pop
and
nop
aaa
cmps
mov
and
mov
ins
(bad)
lea
test
push
repz
dec
cwde
aad
sbb
sub
js
movs
icebp
mov
xchg
sub
sub
loope
mov
dec
jno
movs
les
push
jmp
cmp
sub
test
or
dec
js
int3
movs
inc
mov
je
or
adc
cmp
and
adc
inc
add
sbb
push
test
dec
add
scas
sub
sahf
scas
sub
mov
data16
add
inc
leave
add
(bad)
arpl
(bad)
lock
inc
sub
stos
imul
jl
int3
ins
aas
nop
lods
shl
repnz
rcl
inc
out
out
xor
xor
xor
mov
jne
call
push
aam
fsubr
pop
fsub
sar
push
dec
pushf
(bad)
div
add
aad
xor
xor
xor
xor
xor
and
adc
ss
setns
loopne
in
sahf
mov
push
in
push
lock
ss
daa
push
hlt
sahf
mov
xchg
push
aas
xor
std
inc
test
cld
xchg
daa
out
mov
pop
add
add
repnz
pop
or
or
adc
adc
ret
xchg
jg
jmp
leave
shl
push
jg
ret
inc
add
pop
sbb
sbb
sub
sub
sbb
sbb
sbb
sbb
push
and
out
xchg
imul
mov
pop
and
sub
dec
nop
and
in
(bad)
mov
jns
jne
sub
mov
xchg
cmp
cmp
pop
enter
mov
sar
in
adc
sahf
mov
dec
pop
enter
mov
and
pop
xchg
jo
jo
dec
cs
sub
pop
push
sti
sahf
inc
push
push
dec
nop
pop
sbb
dec
test
dec
jle
and
ja
ret
pop
push
cmp
pop
stc
cs
or
pop
push
push
stc
push
retf
push
test
imul
test
retf
mov
pop
pop
inc
push
repnz
pusha
pop
fs
push
pop
pop
mov
mov
mov
dec
pop
imul
pop
sahf
popa
mov
js
mov
dec
inc
pushf
pusha
pusha
inc
push
cmp
test
cmp
mov
xchg
pop
xchg
pop
cs
xor
mov
pop
pop
lea
mov
mov
arpl
pop
fist
inc
pop
nop
pop
xchg
or
test
cwde
mov
pushf
pop
mov
retf
and
pop
movs
pop
cmps
pop
nop
mov
shl
xchg
push
js
sahf
mov
pop
mov
test
pop
pop
pop
in
jb
pop
xor
xor
xor
xor
xchg
daa
dec
xor
xchg
inc
xchg
inc
sbb
fs
pop
pop
pop
pop
jo
xchg
and
xor
jg
mov
and
cmp
pop
bnd
cmp
test
pop
in
push
sahf
xor
xor
xor
cdq
or
movs
sub
in
in
test
xchg
sbb
or
xor
cmp
mov
pop
lock
repnz
icebp
xchg
push
and
and
pusha
lods
jl
and
ret
jg
in
retf
xchg
sub
hlt
pop
clc
sahf
cmp
repnz
cld
or
or
or
in
dec
or
adc
hlt
sbb
adc
pop
repnz
sub
or
sbb
cmp
or
and
and
sub
leave
xchg
daa
or
xor
xor
dec
sahf
cld
or
xor
or
or
inc
rcr
xor
mov
jb
pop
and
or
cmp
or
push
cli
pop
sub
pusha
pop
xchg
in
or
sahf
(bad)
jl
add
lahf
adc
sbb
and
daa
sbb
retf
or
retf
lahf
or
outs
or
test
pushf
lahf
popf
dec
add
sahf
pushf
sbb
and
call
or
jb
(bad)
in
or
jno
jmp
mov
push
push
pop
jb
adc
sahf
cmp
or
or
in
xchg
daa
or
cmp
repnz
or
daa
cmc
fistp
enter
scas
hlt
lea
or
xchg
test
cmp
mov
mov
dec
ret
sub
mov
es
fmul
or
push
mov
and
jmp
in
add
or
or
and
vmwrite
enter
das
daa
inc
jmp
cld
xchg
cld
dec
(bad)
or
(bad)
adc
inc
xchg
(bad)
aad
or
xor
jl
fwait
add
pop
xor
repnz
fist
clc
(bad)
fsub
fsubr
loopne
icebp
in
call
sub
in
fisttp
retf
add
popa
mov
lahf
xchg
enter
hlt
sub
sub
sub
mov
cmps
xor
xor
lahf
cmp
cmp
lock
xchg
lock
hlt
cmps
stos
in
sbb
xchg
out
rcl
and
add
inc
adc
xor
mul
mov
cmp
push
test
ins
sub
sub
(bad)
in
popa
mov
mov
outs
push
fisttp
dec
ss
pusha
fst
cmp
mov
ins
push
sub
sub
in
add
inc
jbe
add
rcl
mov
cmp
clc
fwait
push
fcmovnb
test
(bad)
cmp
add
dec
and
lods
or
push
add
cmp
push
dec
add
dec
xchg
add
jl
mov
lock
push
or
sub
in
(bad)
push
push
pop
loope
fistp
pop
inc
xor
push
or
lock
dec
es
add
push
sub
cmp
add
and
xchg
pusha
fnsetpm(287
inc
mov
gs
test
lods
lea
mov
push
shl
lock
pusha
mov
cmp
inc
xchg
jo
and
(bad)
das
add
dec
movs
xchg
call
addr16
mov
xor
pop
cwde
ds
cmp
les
mov
sar
mov
outs
push
mov
lock
push
mov
lods
ins
and
and
push
imul
dec
or
loope
xor
pop
pop
call
xlat
jg
imul
retf
cld
rcl
int
xor
add
or
int3
rcr
int3
adc
or
or
mov
dec
retf
fbstp
xor
jns
dec
sbb
sub
pop
sbb
sbb
mov
or
ror
and
cs
sub
into
int3
rcr
stc
enter
int3
(bad)
int
fnsave
(bad)
(bad)
xor
cmp
mov
jmp
(bad)
repnz
std
cmc
stc
in
dec
icebp
jmp
cli
call
std
icebp
repnz
push
mov
mov
jmp
neg
cli
pusha
mov
addr16
fs
idiv
push
enter
mov
cld
je
movs
mov
mov
sub
adc
or
aas
adc
lods
dec
inc
sahf
dec
gs
in
sub
cmp
cmp
adc
dec
xchg
pop
ins
data16
fcmovne
adc
cwde
clc
mov
sahf
lahf
mov
mov
pop
enter
push
(bad)
mul
rol
(bad)
mov
adc
inc
ret
or
mov
fcom
shl
mov
or
stc
jl
test
dec
sub
xor
xchg
xchg
sbb
lods
and
mov
or
dec
repnz
or
jle
add
inc
push
jns
jg
rol
movs
daa
mov
outs
neg
xchg
jno
and
push
jo
xlat
loopne
ins
jmp
mov
push
xor
and
adc
xchg
mov
js
sub
sbb
mov
imul
dec
dec
pusha
test
test
add
js
rol
add
add
jg
cmp
pop
inc
in
mov
push
sbb
add
xchg
or
mov
dec
rcr
push
mov
outs
xchg
push
jb
lods
dec
jo
pop
cdq
or
out
outs
iret
and
inc
xor
mov
enter
enter
or
or
or
add
cmp
lock
stos
or
sub
rol
shr
inc
sub
or
sbb
leave
push
je
sbb
push
shl
cmp
js
jo
cmp
daa
fsub
pop
loope
call
stos
or
jbe
mov
loope
mov
and
push
mov
nop
dec
cmp
or
push
rol
sbb
push
call
sbb
jmp
mov
push
stc
icebp
add
and
sub
and
mov
js
cmp
and
in
cmp
cdq
sub
and
or
mov
daa
jae
outs
or
xchg
inc
mov
pop
pop
xor
and
xor
cmp
mov
push
push
(bad)
cld
mov
adc
adc
or
inc
inc
push
lods
cwde
pushf
dec
enter
cwde
mov
push
xchg
push
je
jmp
mov
push
push
mov
and
dec
fcmovne
or
push
loope
out
or
shl
add
dec
mov
leave
jne
cmp
xchg
out
(bad)
adc
and
jns
sub
or
cld
enter
sti
in
std
enter
xor
(bad)
in
neg
shr
adc
sar
repz
dec
push
sub
jl
inc
ja
push
push
stc
enter
inc
jnp
mov
jmp
and
pop
or
inc
mov
into
push
cmc
push
int
retf
(bad)
mov
enter
mov
xor
and
push
xchg
aam
inc
push
imul
add
cmp
retf
aaa
or
add
and
outs
jb
adc
inc
inc
test
fcom
loopne
mul
inc
push
sbb
lock
fs
hlt
clc
cld
or
xchg
daa
dec
sahf
or
or
or
repnz
or
or
sbb
sbb
dec
sahf
cmp
and
and
sub
and
retf
or
cmp
xor
pop
mov
and
jnp
or
int3
cmp
cmp
repnz
cmp
inc
or
mov
and
lahf
jle
or
repnz
adc
ret
pop
xchg
xchg
mov
or
dec
ds
xchg
pop
or
pop
or
jo
iret
xor
xor
xor
mov
call
stc
xchg
shl
or
xchg
ss
lea
(bad)
mov
(bad)
nop
inc
fs
adc
int3
inc
in
repnz
(bad)
(bad)
shl
enter
(bad)
jle
nop
sbb
mov
in
mov
mov
ucomiss
jb
mov
stos
mov
add
mov
(bad)
(bad)
mov
xchg
mov
mov
fcmovbe
leave
rcl
mov
rcr
out
xor
xchg
ficom
xchg
fcmovnu
(bad)
vmwrite
add
mov
pop
ret
lahf
sbb
nop
xchg
test
movs
cmps
push
in
sbb
pop
mov
ret
aas
mov
movs
test
call
jmp
icebp
mov
lock
cli
mov
mov
in
icebp
jno
jp
sbb
test
fadd
cmp
mov
mov
rol
ret
jb
nop
shl
icebp
test
and
in
pop
xor
cmp
xchg
lahf
lods
cmp
cmc
dec
test
into
inc
adc
pop
jne
mov
jp
adc
push
and
push
into
push
ds
cmp
nop
inc
mov
pop
cs
xchg
adc
(bad)
(bad)
jl
and
adc
jp
or
adc
mov
jg
add
jno
xor
rcr
cli
cmp
mov
mov
adc
rcr
sub
mov
mov
xchg
ins
(bad)
inc
shr
xchg
xchg
or
stc
out
sar
aas
adc
aam
fdiv
mov
lods
jbe
movs
push
ins
jmp
les
dec
test
dec
add
xchg
or
fist
and
add
test
test
sbb
add
push
ret
push
or
shr
pusha
dec
adc
mov
xor
shl
scas
jo
inc
xor
cwde
or
hlt
xchg
fwait
jmp
inc
mov
daa
mov
dec
xor
xchg
es
sub
loope
pushf
adc
(bad)
nop
push
push
sub
mov
inc
add
pop
mov
int
gs
xchg
mov
fist
shr
cs
mov
lods
dec
sbb
xchg
mov
pusha
push
and
call
cmps
sub
adc
or
sub
sub
cwde
cmp
sbb
add
fisubr
and
push
sub
add
scas
push
cmp
movs
dec
xor
sub
retf
call
inc
int
push
sbb
add
xchg
add
push
sub
pusha
es
inc
dec
mov
cwde
cwde
mov
int3
scas
dec
gs
retf
std
cld
cld
mov
sbb
neg
(bad)
jge
in
idiv
loopne
icebp
clc
jmp
sub
out
not
jmp
add
jmp
lods
out
repnz
repnz
repz
cmc
sbb
sub
xor
pop
into
add
mov
lahf
xor
imul
add
pslld
cld
scas
cmps
cmps
imul
movs
cld
(bad)
(bad)
imul
xor
add
fucom
xor
sub
add
rcr
and
adc
stos
xor
push
sub
add
adc
mov
enter
mov
sbb
cs
add
adc
mov
adc
test
xchg
pop
(bad)
sub
sbb
loope
mov
jne
push
xchg
pminsw
mov
pop
push
add
dec
pop
jbe
call
sbb
pop
xor
pop
lods
dec
fstp
ss
mov
adc
xchg
push
or
sbb
or
fistp
shl
push
or
fmul
aaa
and
pop
add
cwde
rol
sbb
mov
lods
or
sub
mov
xchg
mov
in
pop
xor
out
cmp
jecxz
xchg
lea
xchg
lds
add
imul
loope
push
jb
dec
sub
dec
push
pusha
push
mov
rcr
cmp
sbb
xchg
arpl
xor
push
adc
sub
add
imul
fisubr
add
push
sbb
movs
repnz
inc
mov
or
push
sub
cmps
or
xor
in
dec
pop
pop
repz
or
dec
into
or
mov
adc
rcl
xchg
test
fcomip
pop
adc
and
fbstp
es
in
idiv
int3
sub
or
or
and
cmp
fsubr
add
push
fisttp
iret
xchg
pop
movs
pop
xchg
or
push
push
add
inc
or
add
in
or
mov
sbb
xor
outs
pop
ret
lahf
leave
add
nop
ins
mov
add
xchg
mov
inc
jle
sub
push
call
cmp
push
mov
sub
popa
or
jmp
and
sbb
loop
add
jne
mov
enter
retf
movaps
test
jl
mov
xor
pop
sbb
scas
out
out
icebp
or
dec
xor
jo
fs
jns
inc
xor
aas
mov
adc
lock
xchg
add
sub
mov
clc
xchg
fs
data16
jns
push
(bad)
iret
(bad)
lods
xchg
pop
dec
dec
imul
and
and
(bad)
and
mov
add
test
bound
jns
int3
ret
xchg
inc
push
sub
dec
xor
dec
fwait
xor
arpl
(bad)
clc
leave
je
mov
or
cmp
leave
mov
aaa
ret
mov
xchg
sub
push
aam
pushf
stc
xchg
shr
cmp
dec
push
lea
push
ss
push
xchg
or
leave
pop
rol
sbb
sub
inc
bound
adc
add
rcl
or
sub
inc
jo
jno
sbb
pxor
into
cs
fcmovne
pop
mov
addr16
hlt
xchg
add
lock
dec
pop
or
loopne
add
popf
or
pop
jmp
pop
pop
ja
inc
jne
xlat
push
mov
lods
out
adc
pusha
test
out
nop
ss
mov
xor
mov
inc
push
enter
sbb
dec
sub
mov
xor
push
repz
ror
clc
or
lahf
push
add
je
mov
dec
test
ds
ins
shl
das
push
inc
test
(bad)
ret
arpl
pusha
mov
mov
jmp
and
dec
pop
xor
ds
push
lahf
fs
sub
mov
(bad)
popf
lock
sub
fiadd
or
jns
adc
data16
lods
add
retf
in
or
pushf
aaa
inc
test
lds
dec
jmp
add
sbb
pushf
data16
pushf
push
push
das
push
xchg
jb
fist
adc
fsub
mov
shr
xor
test
sbb
sahf
scas
sbb
or
and
push
fisub
pop
imul
shr
xor
and
into
imul
sahf
jmp
add
or
nop
or
add
xor
jbe
push
mov
popf
shl
add
fadd
aad
loopne
mov
shl
lock
(bad)
or
sub
lea
lods
xchg
icebp
push
adc
xor
ss
or
dec
xor
pop
mov
adc
mov
adc
xchg
or
push
push
jnp
add
pusha
pusha
dec
scas
(bad)
sbb
inc
cmp
sar
inc
dec
push
or
add
sub
addr16
and
xor
xchg
pop
inc
ja
xor
shl
or
xor
inc
push
sub
(bad)
cdq
pop
xchg
cmp
inc
jo
iret
sub
adc
sub
jecxz
adc
add
sbb
popf
jl
push
lea
push
loope
mov
push
push
push
sbb
stos
push
js
xor
test
fiadd
in
stc
stos
retf
or
leave
sub
jno
xchg
dec
sahf
js
daa
sbb
leave
test
jae
cmp
mov
dec
sbb
cmc
push
xchg
imul
rol
mov
sub
inc
sbb
add
inc
sub
add
popa
jle
cld
jo
push
aaa
and
xor
sar
push
pop
inc
outs
push
dec
sub
inc
out
and
and
and
pop
and
movs
sbb
pop
es
ins
xchg
push
add
cli
xchg
cmp
xor
call
mov
sub
and
or
popa
mov
jo
adc
add
in
leave
out
or
ja
pop
add
add
and
cmps
sahf
mov
sbb
pop
mov
push
(bad)
cdq
pop
xchg
ins
enter
xchg
mov
es
retf
fadd
rcr
ja
ret
aam
ret
mov
or
inc
scas
adc
sub
push
sar
test
inc
lea
xor
sub
cs
and
dec
lods
xchg
xor
inc
adc
ins
mov
mov
push
sbb
sub
inc
dec
jns
xor
jne
hlt
adc
mov
and
cmp
repnz
inc
dec
sub
movs
or
xor
xor
jns
adc
nop
adc
xchg
ret
leave
or
mov
mov
pop
adc
add
or
jns
or
sub
jl
shr
xor
dec
dec
int3
mov
sub
ins
sub
(bad)
add
sub
pop
dec
popa
adc
loopne
lds
push
and
stc
ror
movs
push
mov
and
xor
lahf
sub
in
mov
cmp
xor
popf
ss
test
aaa
sbb
xchg
pop
and
xor
mov
sub
adc
sbb
mov
in
sbb
jge
test
mov
xor
and
xor
add
cmp
add
jb
(bad)
dec
leave
rcl
cmp
mov
jl
in
aas
inc
cmps
ins
js
enter
fcomp
xchg
dec
adc
daa
test
push
rcl
xor
xchg
or
inc
or
repnz
inc
jns
mov
in
dec
sahf
inc
cmp
xor
push
stos
test
add
adc
mov
or
pop
jne
(bad)
mov
or
scas
inc
data16
leave
test
dec
jmp
bound
dec
xchg
arpl
sbb
push
rcl
sahf
xor
imul
xchg
lods
pop
push
xor
or
dec
xor
jbe
xor
add
xor
loopne
pop
or
cmc
push
test
jmp
leave
inc
sbb
fisttp
nop
pop
and
stos
in
mov
in
in
dec
dec
add
mov
and
or
cmp
push
imul
adc
push
push
and
mov
push
jns
out
or
ret
adc
adc
push
das
or
adc
loope
mov
rol
in
into
cs
pop
dec
sub
stos
inc
outs
cmps
cmp
adc
jge
inc
add
fmul
pavgb
sub
push
lods
or
pop
mov
nop
pop
adc
push
dec
push
mov
add
inc
adc
and
add
sets
add
cmps
xchg
ror
add
xchg
js
js
daa
dec
or
or
pop
aam
pop
aas
or
xor
pop
or
xchg
je
pop
add
pop
or
cmc
stc
in
and
pop
or
ja
add
or
sbb
pop
(bad)
lea
dec
(bad)
mov
jo
inc
sub
cli
mov
fs
cli
clc
push
pop
addr16
cs
and
xchg
and
push
stc
retf
xchg
ins
fidiv
fcmovu
jo
retf
in
jo
outs
ins
test
ins
popf
mov
sahf
lahf
pushf
push
jmp
js
in
cdq
(bad)
js
jbe
push
xchg
xor
jb
cmps
cmps
movs
sbb
mov
fs
pop
test
mov
jl
push
cs
lahf
mov
mov
pop
lahf
pusha
pusha
gs
add
xchg
retf
add
xchg
xor
pop
pop
cmp
repz
or
mov
mov
int
repz
out
sub
xchg
leave
inc
xor
xchg
les
dec
pop
xor
pop
xchg
aas
pop
pop
push
cmp
add
jg
or
adc
xchg
xchg
imul
leave
xchg
test
lods
or
cmp
or
in
ja
xor
xchg
pop
xchg
push
xchg
push
cmps
or
jno
dec
icebp
scas
cmps
scas
sahf
push
ret
ret
xchg
and
shl
icebp
pushf
mov
dec
es
dec
dec
mov
cmp
jb
les
pop
xchg
push
in
hlt
jg
mov
retf
or
push
xchg
addr16
sub
int3
(bad)
enter
cld
mov
sbb
push
pop
jle
add
or
in
inc
repz
fld
repnz
shr
fstp
pop
inc
in
cmp
cmps
mov
add
ret
(bad)
fild
inc
fpatan
ret
jle
call
xor
sub
cmp
dec
call
scas
repz
jb
pop
repnz
lock
and
and
and
push
pop
cmp
mov
mov
in
hlt
mov
add
push
mov
pushf
in
xchg
xor
xor
clc
or
or
pmaxsw
stc
clc
outs
sub
movs
inc
arpl
sub
sub
ret
scas
sub
jg
pusha
push
enter
cld
or
cs
xchg
or
add
cld
jae
sbb
xor
xchg
(bad)
sub
das
pushf
fiadd
jg
sub
daa
inc
mov
fcmovb
mov
or
or
sbb
retf
mov
mov
xor
fild
sub
loope
sbb
bound
jg
sbb
inc
or
fist
nop
xchg
mov
push
pop
jns
or
or
or
push
les
sub
sub
jg
xchg
xchg
pop
xchg
and
inc
or
jg
or
iret
test
ss
repnz
ss
sbb
in
daa
sbb
sub
sbb
add
outs
aas
or
in
mov
aas
or
enter
or
or
ss
mov
pop
sbb
lahf
cmp
cmp
pop
aas
or
or
or
sub
add
or
in
xchg
daa
or
or
or
and
jns
or
or
or
and
nop
js
js
adc
in
or
arpl
cs
bound
nop
pop
sub
nop
aas
cmp
and
or
fs
in
cs
gs
xchg
xchg
or
sahf
mov
aas
or
or
xchg
and
jl
push
out
leave
xchg
add
je
js
jns
add
jle
or
pushf
in
or
jb
adc
add
mov
mov
or
xchg
int
push
neg
push
jg
test
cs
(bad)
mov
and
sub
int
xchg
pop
loope
mov
inc
add
mov
pop
hlt
hlt
cmp
lods
cwde
lods
fwait
or
in
call
test
outs
ds
aam
lock
xchg
lock
clc
mov
stos
cld
scas
jecxz
pushf
in
clc
jecxz
jmp
in
sahf
pushf
cmp
dec
gs
push
pop
popf
int
pop
jno
xchg
into
iret
int3
mov
xchg
in
jne
or
in
movs
frstor
cld
sti
ss
adc
loopne
(bad)
cmp
adc
mov
inc
jp
mov
and
pop
(bad)
ret
sbb
mov
gs
retf
mov
jb
or
lock
out
pop
cs
in
xor
and
push
push
movs
(bad)
aam
inc
sub
adc
mov
loopne
fadd
jae
stos
fcomp
fild
pop
push
aad
fnstenv
repz
or
or
or
or
add
xchg
fcomp
xchg
ror
out
xchg
fmul
add
enter
or
sub
call
inc
cmp
xchg
imul
jns
shl
fcomi
cli
fld
or
arpl
cli
mov
add
push
adc
loopne
inc
jge
or
cli
test
iret
jl
or
jmp
xchg
dec
(bad)
jae
adc
sbb
jg
in
(bad)
and
sub
cli
mov
stc
sub
icebp
in
movs
sub
mov
mov
and
retf
adc
movs
jg
jg
int
push
call
movs
data16
and
cmc
mov
push
jo
out
fild
sti
dec
clc
mov
stc
mov
or
jns
mov
sub
push
sub
push
cs
mov
pop
pop
pop
jbe
ret
and
sub
popa
or
mov
mov
gs
aas
addr16
fist
jg
and
push
je
ret
call
mov
or
inc
push
jb
je
js
jl
pop
cmp
or
mov
mov
cmp
loopne
stc
rcl
or
push
sar
lock
pushf
test
sub
aaa
pushf
xor
pushf
jg
shl
and
mov
imul
add
jno
stc
xlat
pop
(bad)
adc
cmps
inc
cmp
out
nop
adc
add
and
ret
fild
add
daa
sub
fldcw
out
add
lods
jo
and
hlt
inc
add
hlt
add
and
das
adc
push
sub
add
sbb
or
cmp
jbe
pop
push
fild
fdiv
int3
clc
add
fisttp
push
into
xlat
test
mov
inc
loopne
movs
in
mov
cli
or
movs
mov
mov
fld
mov
sbb
loopne
les
cli
fdiv
add
and
adc
repz
shr
ds
aaa
fs
mov
lahf
(bad)
pop
ins
xlat
mov
(bad)
jmp
sbb
push
sub
cmp
add
pop
sub
test
leave
add
retf
pop
pushf
add
and
jmp
xchg
jns
lods
fwait
outs
sbb
fstp
add
sbb
mov
add
add
and
fwait
push
sbb
loopne
ret
dec
push
cmp
in
cmp
das
jg
mov
mov
add
sbb
sbb
sub
push
mov
fstp
push
inc
aam
fadd
and
fwait
aas
inc
pop
xor
fdiv
cld
sub
jmp
clc
fdivr
fld
fadd
out
(bad)
fld
or
fiadd
fstp
add
adc
mov
dec
push
sbb
retf
loope
bound
pop
(bad)
dec
jmp
jns
add
jl
cs
jne
xor
popa
imul
dec
test
mov
pusha
fadd
cmp
imul
push
imul
or
imul
int3
(bad)
adc
lock
sbb
xchg
pop
and
jne
cmp
xchg
movs
xor
in
sub
push
add
or
jmp
mov
cdq
and
cmp
or
pop
ret
fld
mov
jmp
retf
mov
mov
shrd
add
xchg
pusha
imul
pop
cmp
pop
outs
add
dec
test
mov
mov
int3
int3
sub
mov
mov
test
fcom
sub
or
pushf
push
or
push
sahf
aaa
aaa
aaa
aaa
aaa
nop
out
pop
dec
enter
jb
mov
mov
mov
gs
retf
mov
loopne
in
test
jecxz
pushf
sbb
loopne
(bad)
fstp
push
mov
mov
mov
xchg
and
in
jmp
rol
retf
enter
retf
xchg
inc
cs
ret
ret
ror
xor
hlt
repnz
mov
xchg
repz
mov
pop
paddsw
mov
aam
div
jmp
ret
fcomp
mov
add
xchg
das
out
mov
fsub
stc
inc
loopne
repz
arpl
mov
jg
sar
fmul
or
out
pop
jg
mov
mov
in
lock
mov
sbb
add
dec
or
mov
xchg
lods
xchg
lods
xchg
mov
(bad)
cs
pop
cmp
xchg
xchg
aaa
(bad)
jmp
(bad)
std
mov
cmp
push
jne
cmp
cmp
sub
je
ret
or
sub
lock
push
mov
inc
add
scas
enter
(bad)
adc
ins
add
mov
scas
lds
inc
and
jg
repnz
test
jg
add
sti
out
mov
mov
add
add
add
add
add
xor
movs
ret
cmp
xor
mov
push
mov
pop
shr
test
lock
es
add
sbb
mov
and
ffreep
inc
push
inc
gs
mov
lahf
adc
inc
push
mov
jno
mov
mov
push
push
mov
mov
sub
cmp
sub
jb
lock
jmp
cmps
lahf
movs
push
punpcklwd
or
or
adc
in
and
push
cmp
ret
mov
mov
pop
inc
mov
mov
repnz
xchg
lock
fs
div
jmp
call
loope
sub
add
push
adc
jae
stc
xlat
cmp
push
xor
mov
icebp
jmp
cmp
in
push
or
mov
pop
xchg
push
dec
bound
mov
enter
retf
call
jmp
pop
cli
sti
jmp
adc
out
in
icebp
stc
retf
pop
(bad)
fs
in
sti
in
push
ins
repnz
cmc
jl
and
and
mov
shl
js
mov
inc
and
or
sahf
pop
lahf
jno
mov
adc
jge
mov
push
add
sar
fnstcw
loopne
dec
push
sbb
inc
xchg
push
mov
nop
sub
mov
nop
pop
mov
ins
and
and
sar
sub
pop
loope
and
adc
push
imul
and
add
xchg
sub
inc
out
imul
retf
push
push
cs
add
and
dec
sub
rol
or
adc
retf
inc
push
add
ss
jle
js
pushf
popa
xor
push
sbb
rcr
xchg
dec
fs
adc
push
dec
push
add
sbb
push
(bad)
or
or
(bad)
add
es
sub
imul
sbb
pushf
(bad)
jmp
cli
mov
movs
mov
mov
lock
adc
out
cmp
xchg
repnz
add
inc
xchg
(bad)
jmp
aas
or
lahf
mov
lock
stc
push
cmps
cmp
or
push
and
mov
scas
pop
test
add
cdq
test
cwde
mov
jns
push
shr
sub
enter
fstp
in
lahf
aaa
xor
pop
lahf
xchg
xchg
xchg
int
leave
ror
sub
shl
pop
popf
sbb
mov
les
cld
cld
ret
sub
and
or
repnz
jmp
aad
gs
movs
sbb
dec
push
fs
repnz
movs
nop
mov
nop
jae
inc
add
test
imul
test
add
xchg
xchg
xchg
mov
push
popf
mov
pop
mov
mov
or
in
pop
adc
push
lock
xor
cmp
sbb
pop
enter
sar
retf
cmp
scas
adc
add
fiadd
pop
cmps
(bad)
in
pop
sbb
jae
jae
or
stc
push
fnstcw
pop
and
push
sub
xor
mov
stos
push
xchg
and
lds
daa
xchg
lea
cmps
jne
push
or
add
cwde
loope
mov
push
mov
jnp
(bad)
leave
inc
adc
push
es
(bad)
(bad)
xchg
repz
cmps
pusha
sbb
or
cmp
adc
and
adc
inc
sbb
enter
sbb
retf
sbb
cdq
xor
and
imul
add
sub
mov
jb
pop
push
jl
add
dec
mov
movs
xor
add
jp
sub
mov
adc
fldcw
xchg
or
mov
jne
sbb
add
or
icebp
push
dec
xchg
imul
movs
push
movs
push
xchg
loope
pop
mov
std
test
adc
mov
xchg
sbb
cmp
cmp
and
mov
imul
xor
sbb
rcr
ret
jne
push
mov
sub
xchg
dec
inc
test
xchg
cmp
repz
mov
cmps
add
(bad)
push
nop
ficom
test
xchg
xor
fsub
ds
xor
test
mov
loope
aas
and
movs
sbb
xor
add
mov
fistp
sbb
and
movs
das
mov
movaps
jmp
xor
(bad)
mov
inc
loope
call
mov
xchg
pop
dec
ror
mov
test
adc
cmp
mov
cwde
data16
mov
mov
ret
mov
mov
movs
adc
(bad)
pop
call
jecxz
inc
add
add
jmp
scas
nop
add
movs
pusha
inc
jno
mov
add
aad
test
adc
test
in
lds
(bad)
(bad)
loope
sub
cs
cs
jp
push
and
mov
mov
or
shr
cmp
sub
sar
adc
pop
enter
test
push
push
sbb
sti
idiv
push
cmps
inc
mov
cmps
bound
sbb
enter
clc
pop
sbb
jb
sbb
in
enter
fadd
inc
sbb
jno
cmp
cmc
cs
xchg
mov
gs
mov
fstp
inc
mov
sub
or
xor
test
xchg
repnz
sbb
and
repnz
dec
lock
add
add
mov
jne
adc
mov
retf
fwait
mov
call
jl
sbb
pop
dec
ja
dec
xchg
les
xchg
out
mov
jo
xchg
and
jg
jns
dec
js
cli
cmp
push
and
gs
inc
jl
pop
loopne
xlat
shl
(bad)
push
mov
jl
fisubr
out
mov
or
or
lods
xchg
xchg
xchg
adc
sbb
jmp
aad
push
data16
outs
pop
(bad)
cli
pusha
icebp
inc
call
popa
jo
cmp
ror
test
push
push
inc
adc
lods
repnz
push
leave
xchg
add
sti
sub
(bad)
enter
and
pop
and
and
inc
lods
enter
enter
inc
sbb
xor
add
cld
lods
aaa
cmp
sub
adc
std
sub
cmp
mov
lock
(bad)
jecxz
jne
ret
push
and
sub
sub
inc
dec
push
nop
push
sub
adc
xchg
scas
push
sahf
sub
and
mov
pop
and
mov
cmps
std
mov
mov
loope
jns
add
movs
sub
repnz
xor
(bad)
lods
mov
mov
adc
icebp
xor
loopne
repnz
(bad)
lock
or
les
movs
mov
repnz
jb
sub
and
or
push
ret
xchg
arpl
mov
lods
xchg
sbb
les
test
popf
push
(bad)
sbb
pop
jp
movs
das
cmp
std
pop
sub
out
push
dec
push
call
imul
aaa
and
mov
fmul
add
push
ss
ja
and
dec
jno
or
sahf
inc
loopne
nop
rcr
xchg
and
imul
cmp
out
neg
cld
add
or
push
mov
push
gs
push
(bad)
jne
add
sub
dec
sbb
ins
add
push
push
push
cmps
test
and
push
sbb
mul
inc
pop
sub
fwait
test
push
(bad)
cmp
sbb
movs
retf
fxch
adc
leave
retf
fdiv
je
and
jb
(bad)
cmp
sahf
mov
jno
cmp
xchg
or
push
push
addr16
and
test
mov
mov
or
push
jne
fwait
pop
cmp
ja
enter
dec
push
fcom
ds
ja
sub
out
inc
add
test
inc
(bad)
add
stos
inc
ja
xor
inc
imul
mov
jmp
arpl
push
jnp
inc
loop
(bad)
inc
xchg
jge
xchg
out
mov
cmp
dec
mov
pop
ins
push
gs
cwde
pop
pop
xor
inc
jb
mov
pop
inc
loope
cwde
dec
dec
or
dec
lods
sbb
and
push
add
retf
xchg
add
inc
mov
nop
push
fbld
add
push
adc
xor
gs
leave
dec
add
fs
pop
sbb
pop
leave
dec
add
or
and
cwde
or
inc
dec
leave
adc
and
in
mov
inc
pop
add
dec
sub
fsub
push
imul
mov
add
push
push
enter
add
xchg
pop
push
push
test
fsub
lahf
adc
push
loop
push
sbb
mov
push
push
ins
push
xchg
mov
in
push
mov
in
pop
or
inc
fwait
sub
pop
xchg
pop
stos
xchg
sub
mov
ins
lds
mov
(bad)
repz
jmp
dec
mov
push
add
cwde
mov
pop
dec
es
pusha
or
xchg
movs
repnz
gs
popa
aam
dec
dec
mov
in
jp
jns
xchg
or
sbb
into
or
clc
iret
and
out
fs
int3
push
shl
dec
or
adc
ins
mov
pusha
mov
cmc
push
sub
xchg
stos
and
test
ins
mov
pop
jge
call
push
pop
adc
adc
iret
shl
(bad)
lock
js
fild
loopne
push
adc
enter
sub
rcl
je
mov
fnstsw
sbb
mov
inc
imul
bound
dec
shl
jns
test
aas
or
ins
mov
dec
lds
mov
push
adc
dec
loope
mov
pop
test
mov
int
adc
mov
push
jecxz
lds
outs
mov
out
outs
or
jb
or
pop
in
lea
push
lock
xchg
pop
lods
mov
sbb
pop
(bad)
les
in
mov
je
bnd
push
sub
push
test
pop
mov
jb
xchg
sub
imul
enter
jbe
pop
ja
push
in
jl
jno
push
xchg
mov
push
test
jne
movs
cdq
dec
call
call
sub
cld
add
ret
data16
ja
leave
or
ins
jecxz
mov
mov
jl
cdq
pop
rol
js
aaa
je
sub
aas
sti
sti
cs
shl
pop
add
dec
test
cmps
adc
enter
or
push
jmp
add
arpl
pop
push
xor
pushf
jl
ins
pop
push
loope
fisttp
pop
dec
mov
nop
out
mov
js
sub
ins
mov
in
and
push
bnd
daa
push
jb
push
movs
mov
pushf
dec
push
stos
push
sbb
rcr
adc
jo
ins
xor
and
js
lods
sbb
ret
mov
cmp
je
pop
push
test
fld
push
mov
jmp
cmp
xchg
ror
mov
mov
in
imul
out
push
mov
cmp
ret
ror
ins
stos
stos
mov
add
dec
xor
and
and
inc
test
xor
cmps
sbb
cmp
sub
jae
mov
inc
sbb
fdiv
je
fnstenv
je
push
lea
mov
or
sub
movs
cmp
sub
sbb
dec
ss
pop
jo
in
inc
mov
inc
inc
dec
xchg
inc
es
fidiv
pop
pusha
mov
pop
mov
cmp
mov
shl
inc
adc
xor
fnsave
sub
adc
dec
shl
test
pushf
adc
mov
inc
jmp
xchg
add
gs
push
adc
jo
retf
pushf
popf
dec
imul
mov
gs
xor
sbb
stos
sub
xchg
ret
ds
loopne
jo
mov
inc
cs
add
sub
adc
dec
xor
stos
mov
cmp
mov
xchg
icebp
sti
dec
(bad)
adc
xlat
ror
retf
adc
retf
adc
push
loopne
in
fild
adc
retf
shl
fidivr
sub
popf
push
mov
add
xchg
mov
mov
in
sbb
sti
sahf
test
icebp
lock
sbb
cmp
cmp
add
and
stc
ins
cmp
cmp
cmp
cmp
mov
ss
jae
adc
clc
retf
cld
test
add
fidivr
jb
mov
hlt
cmp
xor
ret
fild
invd
(bad)
prefetchw
or
(bad)
ud2
ror
loopne
enter
or
or
mov
cmp
imul
and
pslld
adc
adc
pop
nop
or
prefetcht0
sbb
(bad)
and
(bad)
popa
call
sbb
fild
inc
and
in
jl
jl
jb
or
sub
sub
or
sbb
sub
pop
cs
and
test
test
in
xchg
fcmovnu
adc
fbstp
jl
cmp
push
mov
(bad)
cmovno
xchg
push
ins
pop
jp
pusha
dec
sub
sbb
ins
stc
ficom
loope
fidiv
movs
ror
dec
test
cmp
std
mov
or
iret
sbb
test
push
fcomi
outs
push
sbb
repnz
pop
push
push
mov
cli
cli
in
sti
cmp
pop
in
mov
enter
cmp
repnz
jg
adc
loope
pcmpgtb
push
repnz
int3
fcmovne
jo
adc
je
xchg
inc
push
pusha
nop
nop
fbstp
adc
js
repz
jl
adc
icebp
lock
xchg
jg
mov
mov
(bad)
jmp
hlt
mov
mov
mov
xchg
clc
stos
add
fldcw
xchg
mov
jno
mov
ja
nop
pusha
mov
jmp
repnz
xchg
mov
rep
sti
test
out
xcrypt-ecb
cmps
or
pop
cwde
loope
add
adc
cmp
shrd
ds
and
lss
nop
mov
jg
sbb
mov
cmp
pop
mov
push
(bad)
enter
cmp
sbb
mov
and
aas
xchg
push
inc
aam
adc
loopne
div
in
sti
loopne
icebp
in
sti
stc
out
jmp
sub
mov
jmp
pop
out
push
lods
retf
in
cli
icebp
aas
(bad)
xchg
out
jg
adc
pop
jo
(bad)
push
pop
adc
jns
enter
adc
sub
adc
xlat
adc
inc
cmp
and
leave
and
adc
dec
dec
nop
sbb
or
adc
adc
inc
push
jb
sbb
sbb
and
and
and
adc
adc
adc
cmp
enter
ret
pop
dec
dec
in
nop
sbb
adc
enter
adc
cmp
ret
add
adc
xor
pusha
sbb
pusha
inc
inc
sbb
enter
push
xor
and
xchg
jb
pop
pop
adc
leave
or
adc
dec
cmp
leave
nop
cmp
js
inc
xchg
ins
das
(bad)
pop
pop
adc
je
ins
and
add
cmp
mov
and
js
jp
jnp
rcl
mov
jle
jg
inc
dec
leave
retf
adc
cmp
pop
ret
fistp
xchg
xchg
cmp
mov
mov
fxch
adc
fist
xchg
sbb
inc
push
rcl
cdq
add
sbb
adc
in
cs
xor
inc
xor
mov
pop
sahf
fwait
lahf
jmp
mov
sbb
test
pushf
imul
les
xor
fild
scas
mov
mov
int
js
mov
mov
mov
xor
(bad)
mov
jns
rcr
mov
mov
sub
dec
or
(bad)
mov
xchg
mov
out
ret
aad
sbb
les
out
enter
pop
add
and
in
sub
(bad)
dec
mov
sub
mov
rcl
pop
(bad)
inc
xlat
mov
mov
adc
jmp
sar
pop
int3
jo
add
aas
and
xchg
mov
adc
cmp
adc
ja
in
jecxz
jnp
jl
loop
cmp
sbb
jno
cmp
cmp
adc
xor
fnstsw
adc
adc
and
xchg
and
call
pop
in
pop
in
in
stc
push
mov
sbb
push
sbb
dec
out
fstp
sbb
sbb
repnz
pushf
cmp
sbb
dec
sbb
cmps
mov
hlt
mov
test
cmc
cmp
jmp
stc
sbb
dec
xchg
and
test
pop
lock
(bad)
stos
adc
and
add
mov
xchg
adc
scas
scas
or
retf
mov
add
add
aaa
xor
mov
adc
push
out
or
shl
cmp
repnz
aas
xor
sahf
je
pusha
adc
add
in
mov
or
adc
adc
sub
jg
nop
frstor
aas
push
pop
xor
adc
adc
das
pop
not
inc
inc
mov
jne
fnstcw
and
xchg
sbb
sbb
xor
jl
adc
sub
sub
jb
leave
in
and
daa
push
inc
in
cld
mov
cmp
mov
sub
mov
daa
pop
stc
in
xchg
cld
lahf
xchg
cld
mov
sub
sub
sub
pop
pop
sub
sbb
clc
aas
retf
and
xor
popa
xor
xchg
pusha
pusha
hlt
pop
xchg
repnz
xchg
hlt
xor
neg
repnz
cmp
pop
das
mov
lock
lock
adc
cs
cld
mov
sti
adc
adc
movs
jb
test
repnz
dec
in
adc
cmp
cmp
push
es
xchg
in
in
inc
dec
pop
cs
inc
dec
dec
inc
inc
xchg
inc
xor
retf
movs
xor
jns
xchg
aas
es
js
lahf
xchg
call
xchg
call
test
jl
popf
in
in
push
mov
sbb
push
add
push
mov
lahf
push
push
test
pop
fdivr
xchg
cs
mov
mov
pop
cld
sti
mov
push
pushf
sbb
mov
jb
in
mov
cs
and
add
pop
mov
sti
out
fdiv
pusha
mov
fs
xchg
mov
lds
aas
push
mov
aam
jo
lahf
xchg
dec
je
stos
dec
and
sar
in
retf
jns
test
nop
test
int3
push
mov
jge
lods
pusha
or
pop
outs
daa
mov
lahf
add
mov
les
pop
mov
mov
sub
jg
rcl
(bad)
std
std
xchg
sti
out
jmp
dec
ds
ins
mov
enter
pushf
in
test
cld
pop
mov
cdq
test
test
xor
in
dec
jb
and
enter
fdivr
leave
add
mov
lahf
jb
in
mov
loope
cmp
test
int3
jle
sar
mov
fwait
mov
maxps
(bad)
shl
mov
mov
sti
pop
xchg
cmp
jb
je
push
lahf
cmp
pop
ret
jg
dec
jb
test
les
xchg
(bad)
hlt
hlt
in
or
movs
lahf
xchg
movs
jp
pop
js
mov
repnz
xchg
data16
lods
mov
xchg
sbb
dec
cld
(bad)
shl
aam
push
cld
enter
repnz
(bad)
fsub
cld
in
repz
jmp
in
jmp
in
(bad)
repnz
lock
repz
sub
clc
repz
mov
mov
mov
pop
adc
xchg
aas
lahf
into
jae
or
rol
adc
jg
push
minps
imul
adc
repz
jmp
mov
jmp
mov
sbb
pop
pop
or
jg
push
ret
mov
xchg
cwde
adc
sbb
mov
cld
in
repz
and
div
cli
and
icebp
adc
xchg
mov
mov
mov
addr16
mov
cmp
call
jg
pop
dec
outs
adc
lahf
xchg
xchg
pop
cmp
xchg
cmp
jg
cmp
sub
cmp
cmp
(bad)
ins
jg
inc
mov
mov
inc
mov
inc
inc
jno
movs
stc
nop
nop
jo
mov
mov
mov
jmp
mov
mov
sti
mov
push
cli
sti
lock
pop
or
pop
dec
mov
aas
sahf
aas
je
inc
xor
sbb
mov
bswap
pusha
call
cmp
jmp
mov
pusha
xchg
inc
adc
icebp
iret
inc
aas
xchg
mov
pop
ins
in
fs
push
adc
sub
xchg
dec
adc
adc
sub
cmp
dec
pop
sub
cmp
add
jne
pop
dec
in
movs
movs
movs
jl
and
cmp
xchg
add
nop
js
inc
xor
test
js
imul
pushf
leave
xchg
jl
xchg
lods
mov
sbb
je
movs
movs
push
mov
mov
pop
mov
nop
push
cs
cmp
test
mov
pop
gs
mov
lods
xor
adc
leave
and
in
mov
mov
xchg
retf
mov
add
imul
adc
adc
lock
mov
fs
aas
fs
enter
int3
xlat
push
jmp
shr
fdivr
rcl
mov
ds
jns
sbb
pusha
sbb
clc
pusha
pop
(bad)
cld
(bad)
dec
sbb
(bad)
icebp
lock
lock
mov
in
jmp
cmp
idiv
in
jbe
xchg
jg
hlt
lock
clc
jmp
add
or
add
ins
adc
mov
or
xchg
adc
sbb
pop
adc
movs
xchg
push
sahf
cmp
lods
fbld
adc
das
jg
dec
mov
adc
jmp
jmp
adc
mov
mov
sub
(bad)
jmp
jbe
mul
adc
popa
inc
push
add
cmp
adc
dec
push
inc
sahf
inc
cs
sub
jg
jns
jnp
stos
adc
movs
retf
inc
int3
sti
clc
sti
or
add
inc
in
movs
inc
mov
std
adc
out
pop
dec
sbb
mov
fcomp
jle
xchg
das
ret
mov
out
out
std
cld
pop
std
cmc
jmp
or
gs
pop
stos
adc
xchg
add
and
jmp
outs
and
pop
push
push
adc
xor
push
imul
xor
das
call
outs
sar
lock
jae
(bad)
stc
xor
xchg
retf
int
xchg
addr16
(bad)
push
call
rcl
cld
sahf
push
adc
mov
nop
lock
(bad)
jle
std
xchg
shl
in
cmp
pushf
mov
jo
stos
mov
mov
std
push
sbb
mov
cld
in
mov
mov
movs
mov
cli
mov
repnz
icebp
mov
ror
test
scas
fwait
xchg
aas
push
idiv
int3
mov
xchg
jno
xgetbv
mov
mov
sbb
add
mov
dec
pop
div
enter
lock
pop
inc
shl
mov
or
div
stc
movs
call
test
lock
xchg
rol
inc
hlt
xchg
xchg
(bad)
xor
pop
push
clc
lahf
fdivr
bound
xchg
or
mov
shr
mov
rcl
sub
dec
clc
xchg
add
adc
jp
and
call
xchg
jmp
(bad)
(bad)
bound
jg
movzx
add
mov
lea
call
clc
xor
mov
adc
and
enter
in
pop
fld
mov
cmp
mov
pop
sub
jno
outs
add
jno
adc
mov
mov
sbb
lds
mov
push
fcomp
pop
dec
rol
jne
adc
push
sbb
ins
mov
xor
sbb
sub
das
cmp
xor
inc
jb
iret
jb
lea
dec
popa
jb
push
stc
push
stc
jp
pushf
test
jne
fwait
adc
in
pop
jne
cs
push
pop
and
clc
xchg
cmp
jg
enter
fstp
and
lods
xor
cmp
pop
mov
lea
je
inc
xlat
(bad)
je
aas
push
xchg
rcl
add
adc
ins
add
dec
xchg
out
inc
sbb
ss
push
ja
je
push
mov
enter
cmp
adc
enter
push
cmp
call
dec
pop
add
mov
cwde
call
pop
loope
add
adc
mov
mov
(bad)
fcmovb
mov
loopne
aam
es
and
bound
lea
call
push
push
dec
jp
ret
lahf
inc
inc
adc
fnstsw
repnz
icebp
xlat
lock
jmp
sti
daa
adc
fsubr
aas
repnz
sti
call
jmp
sbb
lock
cld
sbb
daa
les
xchg
lahf
adc
cmp
xchg
add
xor
xor
mov
sub
aas
and
cmps
dec
add
adc
cmp
dec
or
dec
xor
inc
push
jns
add
int3
adc
in
rcl
or
pop
call
mul
(bad)
test
adc
std
sti
sub
ja
fisubr
aam
or
pushf
push
xor
push
scas
sar
leave
dec
adc
adc
push
push
mov
mov
xchg
mov
jne
push
aad
inc
or
cmc
loope
mov
sub
inc
inc
inc
ins
fadd
inc
and
jmp
call
inc
ror
pop
inc
and
lock
fsub
lock
pop
or
sub
lock
push
fisubr
add
leave
xchg
xchg
adc
ds
adc
lea
jno
mov
adc
add
mov
xor
push
pop
adc
lock
mov
mov
adc
(bad)
jmp
pushf
sbb
push
xor
and
data16
or
push
pop
les
jl
xor
lea
sub
add
sbb
add
in
lds
pop
mov
jns
add
push
cmp
jns
or
fisub
into
sub
or
rcr
xchg
xchg
test
dec
push
lods
fidiv
sbb
cdq
dec
repz
and
jns
inc
cld
push
and
sub
dec
es
and
add
xchg
push
sti
inc
push
mov
or
xor
call
rol
or
aas
adc
shr
test
jecxz
addr16
or
cmp
cmp
nop
inc
dec
push
push
movs
mov
adc
sti
adc
push
(bad)
sar
dec
adc
mov
pop
mov
(bad)
jmp
inc
cs
jmp
call
cli
cmp
pop
ds
dec
push
add
mov
mov
inc
in
data16
jmp
xchg
retf
mov
adc
adc
test
adc
adc
push
sahf
or
ds
loopne
aas
xor
xchg
daa
aas
fist
xchg
retf
in
nop
sti
xchg
nop
(bad)
mov
retf
and
leave
mov
dec
in
mov
inc
sbb
xchg
cwde
cmp
lahf
sbb
cmp
in
sub
sub
movs
test
cmps
mov
cmp
adc
mov
clc
inc
xchg
icebp
adc
repnz
push
cmps
jo
cmp
enter
pop
xchg
adc
cmps
jb
js
mov
aam
daa
fsubr
mov
jmp
cmp
mov
pop
outs
leave
sbb
call
jne
xchg
popa
mov
or
xor
mov
pop
test
rol
call
enter
leave
push
push
adc
jno
retf
cdq
adc
mov
cmps
sub
dec
and
adc
sub
pop
xchg
dec
icebp
add
sbb
daa
adc
jo
xchg
adc
fidiv
inc
push
js
push
cwde
pop
adc
add
in
jns
movs
dec
cmp
and
or
dec
push
and
fbstp
out
call
jge
adc
invd
rcl
movs
movs
shl
sti
in
lds
out
adc
int3
sti
call
out
ja
cmp
sbb
ja
dec
imul
pop
jnp
and
dec
cli
adc
icebp
adc
jns
test
sub
adc
push
sub
xor
adc
adc
pop
(bad)
clc
aas
mov
movs
cmp
sub
sub
xor
mov
cmp
sbb
xchg
sub
imul
mov
cmp
inc
sub
sbb
and
push
loopne
mov
sub
or
or
in
sbb
and
adc
sbb
inc
dec
dec
and
pop
xchg
enter
push
ins
jo
jb
and
in
dec
test
inc
es
and
inc
push
jns
mov
dec
mov
push
sti
xor
aam
adc
push
lea
xor
repnz
pop
xor
mov
sar
adc
cmps
jge
(bad)
cwde
inc
add
clc
push
and
push
add
sbb
xor
cmp
mov
dec
sar
mov
rol
push
jge
cmp
add
mov
mov
xor
sub
nop
imul
xor
and
cmp
pop
dec
out
jecxz
in
adc
popa
rol
and
fcmove
ret
daa
ins
add
xchg
ss
jle
(bad)
mov
add
xor
sbb
sti
mov
xchg
lahf
dec
and
mov
mov
fwait
pop
ja
push
fist
mov
(bad)
mov
pop
inc
xchg
lock
mov
clc
sub
adc
daa
lods
hlt
stc
sahf
pop
dec
pop
data16
sub
and
test
clc
int
pop
das
inc
jge
mov
aas
cmps
mov
push
mov
inc
int3
push
sbb
cdq
movs
push
mov
and
inc
sub
inc
cmps
pop
adc
cli
repnz
sub
ret
pop
adc
xchg
out
inc
adc
aas
int3
sbb
and
sahf
pop
mov
into
aas
sar
iret
aas
sar
dec
jg
pop
xchg
adc
mov
jmp
jl
retf
test
cmps
stc
movs
aam
gs
movs
aad
or
jg
(bad)
and
and
xor
push
push
jne
pusha
rcl
data16
mov
push
stos
lock
dec
fidivr
call
shr
sub
mov
xor
xor
lea
(bad)
data16
xor
pop
add
in
pop
jns
push
or
dec
push
or
adc
inc
out
add
jmp
jmp
or
bound
add
jb
pop
push
jecxz
pop
dec
sbb
add
pop
cmp
inc
ud0
push
loopne
cmp
je
mov
mov
mov
js
add
cdq
shl
into
jb
xchg
mov
mov
cmps
lock
xor
into
rcl
jg
(bad)
ds
lea
shl
add
lahf
mov
pop
pop
push
jno
shr
cmp
sub
sub
neg
mov
ret
dec
test
xor
enter
or
cld
lahf
dec
lods
arpl
jno
lock
or
add
mov
fist
push
mov
pop
lea
sub
je
mov
cmp
ret
or
and
add
mov
xchg
scas
ret
stos
pop
inc
jo
ret
and
and
in
and
pop
or
xchg
sbb
xchg
cmps
jge
shl
sbb
jecxz
inc
push
mov
inc
sbb
mov
pop
je
pop
mov
movs
cmp
add
and
and
stos
add
inc
(bad)
cmp
dec
sub
into
and
pushf
pop
lea
xor
es
lods
fs
adc
ins
push
xchg
push
add
or
pop
mov
sahf
cli
dec
fs
xor
mov
cmp
adc
les
dec
test
stos
inc
or
xchg
dec
push
mov
jmp
or
sbb
add
das
jae
cmc
xchg
xchg
test
sbb
sbb
jnp
sar
push
inc
inc
fsubrp
pusha
adc
sbb
adc
or
sbb
mov
fistp
in
mov
rol
mov
dec
mov
int
mov
push
dec
ds
push
mov
cmp
or
mov
jmp
cmp
in
push
and
mov
adc
sub
je
xor
pop
enter
dec
outs
sbb
(bad)
xlat
ins
clc
enter
in
mov
rcl
push
mov
or
ss
dec
outs
ror
test
push
dec
and
in
rcl
xchg
je
inc
fisttp
leave
push
dec
popa
popa
adc
scas
mov
cs
push
or
mov
pop
add
or
mov
inc
jb
or
xor
xchg
inc
retf
and
adc
inc
sbb
arpl
cdq
lahf
pop
imul
inc
and
mov
psrad
or
add
jo
clc
popf
js
sbb
inc
stc
adc
ja
mov
xor
cmp
jo
jge
ja
mov
es
std
push
mov
(bad)
sbb
and
and
push
fs
ret
mov
jmp
in
(bad)
pushf
sub
push
xor
mov
cmc
movs
adc
pop
ins
sub
push
nop
test
and
sub
ficom
lods
mov
cmp
gs
ins
mov
fisub
inc
mov
and
cmps
sub
mov
xchg
cmp
add
sbb
sub
lods
push
push
arpl
inc
popf
dec
push
ror
inc
dec
and
sbb
push
and
add
or
outs
jecxz
push
push
loop
int
sub
push
ins
shl
data16
ja
dec
test
leave
shl
aaa
push
push
mov
jge
int3
or
push
add
xchg
push
shl
push
icebp
das
adc
add
adc
or
jecxz
je
mov
inc
test
mov
mov
cmps
and
das
push
and
push
add
(bad)
or
int
xchg
push
xchg
mov
dec
mov
mov
mov
scas
sbb
outs
push
fwait
jmp
xchg
test
ror
and
jnp
xor
cdq
xor
and
and
pop
and
sbb
xchg
cmp
and
in
mov
mov
ja
cld
mov
pop
or
push
sbb
daa
ret
and
or
jne
jo
jecxz
enter
popa
movs
mov
aad
sub
ins
movs
test
xchg
push
pusha
xor
pop
in
add
clc
fistp
push
lods
sub
pop
jb
and
enter
mov
sub
in
and
and
sub
and
adc
xchg
inc
push
mov
mov
sub
cs
nop
test
push
pusha
push
and
call
ins
adc
adc
mov
xchg
add
mov
xor
xor
ins
mov
pop
jnp
sbb
mov
popa
xlat
cmp
mov
pop
push
aas
push
retf
les
jb
add
and
and
leave
and
inc
das
or
cmp
dec
cmp
adc
push
loopne
arpl
push
fistp
mov
or
sub
mov
dec
xor
loope
dec
inc
inc
ucomiss
lea
sub
xor
adc
push
inc
mov
loopne
or
into
clc
push
adc
mov
inc
ret
fmulp
fwait
add
sub
add
sub
mov
cmovp
add
pushf
mov
div
leave
shl
xor
adc
shl
jecxz
xor
inc
mov
sti
retf
xchg
and
sbb
sbb
add
push
repnz
test
lods
out
shl
cli
shl
push
mov
dec
(bad)
push
stc
push
inc
dec
arpl
push
pop
add
enter
lds
in
mov
sbb
sub
mov
scas
inc
addr16
pusha
in
ss
popa
int
cdq
aaa
cmps
ror
jne
push
xchg
xor
and
fstp
cmp
lahf
or
dec
popa
cmp
loopne
xchg
push
jbe
shl
ss
add
les
adc
retf
jle
into
xchg
push
push
repnz
adc
test
cmp
nop
adc
sub
test
fsub
jl
add
add
fs
ret
push
cmp
js
gs
xor
dec
and
push
xor
sbb
cmp
and
inc
cmp
mov
(bad)
mov
ror
dec
adc
fwait
xchg
daa
inc
sub
enter
in
test
(bad)
repnz
add
dec
add
cdq
xor
nop
pop
push
add
jne
mov
fs
inc
inc
shl
adc
push
rol
push
sub
ror
adc
or
xor
mov
jecxz
ins
add
js
ret
fs
popa
cmp
in
xor
push
add
or
jmp
xchg
mov
pop
inc
jmp
and
(bad)
dec
pop
and
daa
mov
pop
lahf
add
inc
sbb
mov
dec
cmp
fwait
or
cmp
jns
jg
jg
adc
adc
pop
and
sub
repnz
add
inc
test
dec
scas
imul
pop
pop
dec
xor
call
mov
aam
push
shl
and
xchg
aad
sbb
push
icebp
pop
cmp
and
js
aad
pop
int3
pop
sub
fs
mov
gs
and
not
or
xor
jo
in
add
sbb
nop
adc
je
xor
adc
adc
mov
mov
pop
dec
dec
adc
lods
(bad)
cmp
mov
fild
xchg
inc
add
je
push
popa
inc
pop
(bad)
retf
movs
dec
mov
jecxz
stc
or
inc
cs
sbb
bound
dec
and
(bad)
aas
xchg
xchg
jo
in
rcl
fs
cwde
pop
mov
cmps
dec
(bad)
pop
or
sub
push
add
imul
sbb
cmp
imul
adc
add
test
push
popa
iret
sub
dec
push
pop
repnz
dec
adc
pop
sub
add
xchg
pop
adc
sub
xchg
or
mov
lods
adc
adc
in
mov
mov
retf
inc
mov
pop
mov
add
js
jb
jae
aas
fcom
mov
or
adc
cwde
jge
ss
cmps
mov
sahf
push
mov
mov
xor
sub
inc
(bad)
xor
jb
in
dec
(bad)
(bad)
lods
jg
mov
pop
push
jg
mov
sub
enter
mov
sti
sar
cli
out
enter
adc
and
adc
or
adc
je
sub
in
(bad)
fsub
aam
inc
les
mov
pop
xchg
cld
xchg
xchg
cld
mov
mov
loopne
repnz
in
in
inc
mov
lahf
adc
sub
sahf
or
pop
pop
in
inc
inc
xchg
clc
mov
push
imul
std
ins
bndldx
or
call
mov
in
clc
and
mov
ret
jg
fld
movs
lock
mov
loop
pop
lods
div
cli
mov
stc
jae
iret
les
es
pop
adc
cmp
inc
and
jle
popf
push
add
xchg
clc
fdiv
cmp
mov
in
or
xor
pop
inc
retfw
xlat
push
fucomip
jne
retf
or
out
sbb
sti
adc
in
mov
cdq
loopne
add
adc
add
xor
lahf
js
cmp
sbb
fistp
call
data16
ds
push
mov
jle
hlt
dec
xchg
in
xchg
in
into
retf
sub
sub
jo
fxch
push
sub
xor
pop
pop
mov
stc
nop
cwde
loopne
xchg
loopne
mov
ds
ds
sub
(bad)
stc
push
xor
das
fisub
sbb
jns
sub
sbb
aas
inc
inc
sub
inc
inc
bound
fdiv
outs
adc
push
cmp
dec
pusha
mov
sbb
sbb
xor
sbb
shl
imul
cs
nop
inc
dec
fdivr
jb
pop
push
inc
inc
aas
cmp
push
mov
ds
retf
jno
jo
leave
test
aam
and
jb
dec
dec
xchg
inc
cs
dec
inc
inc
je
sbb
jbe
retf
jns
js
daa
jg
call
rcl
retf
and
jl
leave
gs
dec
jge
jle
in
test
je
inc
nop
jle
int3
adc
push
adc
and
pop
sti
mov
push
push
inc
test
ret
aas
and
enter
push
pusha
xchg
retf
leave
cmp
nop
outs
nop
pop
mov
out
shl
mov
xchg
xchg
xchg
xchg
nop
add
jbe
les
imul
scas
repz
push
or
sub
ins
xor
jl
sar
dec
xor
cld
js
cs
dec
in
cld
mov
sbb
lahf
push
test
(bad)
shl
xor
sbb
push
mov
mov
mov
out
nop
jmp
pop
es
fdivr
in
push
inc
mov
(bad)
std
std
pushf
out
jmp
push
cwde
mov
sub
pop
xchg
mov
mov
sar
jmp
inc
sahf
push
pop
sub
cmps
sub
stos
add
and
mov
pop
aas
inc
adc
stc
in
mov
mov
push
mov
repnz
pop
push
mov
mov
in
sbb
mov
enter
mov
mov
nop
sbb
pusha
jle
lock
xor
xor
mov
jle
jno
mov
or
ds
int3
in
in
cmc
movs
repnz
pop
push
push
and
inc
push
cmp
retf
inc
inc
inc
inc
das
daa
push
mov
mov
adc
push
mov
fdiv
mov
sub
mov
movs
xor
lahf
pushf
pushf
int
mov
retf
(bad)
ja
fadd
pop
imul
inc
or
rcl
push
mov
jecxz
xchg
jmp
loopne
call
adc
jo
xchg
xchg
pop
push
hlt
add
inc
or
std
mov
std
jle
repnz
adc
lock
pop
add
into
outs
call
add
xchg
jg
jmp
dec
sbb
and
nop
jle
rep
pop
xchg
nop
repnz
scas
or
(bad)
mov
or
xchg
out
pop
or
or
inc
cmp
sbb
inc
cmp
cmp
leave
test
pop
cmp
cmp
mov
cli
sti
adc
icebp
lock
adc
pop
and
adc
retf
push
inc
adc
push
cs
inc
inc
inc
inc
mov
(bad)
xchg
mov
cdq
loope
add
in
mov
je
adc
loopne
imul
and
sbb
fisttp
xor
ret
call
xor
push
mov
or
jecxz
jle
fwait
sbb
popa
xor
inc
jne
sbb
movs
fisttp
leave
pusha
lods
mov
adc
push
lock
ret
sub
sbb
stos
and
cmp
cli
push
fcomp
nop
pop
ins
pop
inc
fbstp
add
sub
data16
xor
xor
div
sar
imul
leave
leave
or
pop
rol
jb
mov
adc
jl
(bad)
xchg
push
fcom
jecxz
loopne
ret
js
mov
stos
lea
fild
add
push
pop
sub
sub
and
or
add
fist
fs
sbb
cmc
add
icebp
adc
repnz
push
pop
icebp
mov
popf
shl
jnp
xchg
aaa
dec
inc
test
and
or
pushf
xchg
push
mov
xchg
push
fist
push
xchg
and
je
dec
movs
mov
fdivrp
push
or
and
push
xchg
or
sub
(bad)
clc
mov
xchg
(bad)
sub
retf
mov
int
push
push
and
rdmsr
cmp
inc
push
(bad)
pop
mov
fwait
jns
cmp
push
mov
sub
enter
lahf
js
sub
fwait
xor
ins
jmp
shl
mov
(bad)
fld
fcomp
and
mov
sub
inc
push
lahf
fidiv
inc
adc
or
xchg
out
xor
dec
dec
adc
mov
cmps
cmp
xchg
dec
test
fbld
sbb
jecxz
adc
jno
adc
xchg
mov
and
sbb
xor
int3
cmps
movs
pop
pop
data16
dec
test
lods
outs
push
ret
call
in
cmp
push
pop
and
xor
clc
lea
mov
(bad)
sub
jne
adc
inc
sti
ja
std
je
add
jne
jb
into
in
out
inc
outs
push
mov
stos
jne
rol
test
add
scas
repz
scas
sub
mov
jg
iret
dec
sbb
mov
mov
adc
jnp
call
jbe
cmp
fst
pop
js
inc
mov
inc
loopne
dec
lahf
cmp
test
push
adc
rcr
jge
cmp
push
push
add
out
imul
xchg
data16
adc
or
movs
data16
adc
lock
push
stc
jns
out
push
fwait
nop
rcl
or
mov
add
ss
rcl
or
sub
ret
jmp
adc
fwait
inc
dec
ret
pop
inc
pop
in
and
setbe
aas
inc
(bad)
loope
jle
js
hlt
add
jg
(bad)
retf
add
int3
jo
mov
xor
sbb
push
popa
inc
inc
cmp
pop
pop
mov
enter
retf
push
mov
xor
arpl
test
loope
cmp
cmp
adc
inc
add
out
(bad)
dec
push
pop
xchg
sar
lock
cdq
mov
mov
cmp
fsave
ins
sub
add
xor
add
xor
das
or
sbb
pop
xchg
or
and
adc
mov
inc
sbb
ins
adc
adc
out
add
stc
imul
jnp
xchg
nop
sbb
or
jl
pop
rol
or
and
xchg
sar
push
outs
shl
lock
push
lods
sbb
add
fisttp
call
xchg
movs
jbe
nop
xor
xor
add
and
dec
adc
lea
jge
shl
xor
pop
push
push
add
add
jno
dec
pop
push
xor
jns
push
adc
adc
mov
mov
inc
repnz
cmp
jle
jbe
not
sub
cmp
jle
pop
jne
adc
mov
int
fcom
pusha
xor
lds
push
xchg
jl
popf
push
int3
jns
mov
scas
or
dec
inc
loopne
xchg
aam
cld
or
call
neg
std
scas
push
clc
jno
fisubr
cmp
add
cmp
jbe
xchg
inc
stos
frndint
or
and
lock
sub
pop
xlat
dec
adc
dec
popf
and
add
cmp
push
and
push
push
into
pop
dec
push
sbb
call
and
cdq
inc
or
cmp
pop
push
cwde
add
pop
and
stos
adc
adc
or
push
push
cmp
push
add
cdq
push
or
cmp
mov
sbb
stc
cmp
jne
xor
enter
pop
jle
or
dec
add
jb
mov
pop
adc
push
jl
or
xor
and
xchg
mov
ret
push
movs
adc
push
add
push
dec
pop
xchg
xor
or
mov
pop
std
ret
dec
dec
gs
or
scas
and
sbb
lods
imul
sbb
or
ror
and
jl
mov
cmp
push
or
xchg
call
mov
add
adc
mov
mov
jbe
cmp
inc
sbb
daa
mov
fdivp
add
dec
and
sbb
aaa
sub
adc
push
dec
xor
aaa
xchg
out
test
sbb
sub
mov
mov
repnz
ja
push
ret
cdq
add
imul
push
aas
push
mov
pop
mov
push
cmp
repnz
xor
data16
addr16
xchg
dec
mov
pop
adc
xchg
push
div
inc
add
ds
mov
jo
push
add
leave
and
add
(bad)
fiadd
xor
push
adc
inc
or
ins
mov
jne
jb
test
mov
in
push
pop
rcr
jmp
stos
sub
lea
push
lea
push
dec
or
push
arpl
sbb
imul
sbb
push
imul
push
fcomp
js
mov
inc
pop
sahf
not
push
(bad)
retf
mov
adc
movs
cmp
adc
push
enter
mov
push
inc
xchg
and
sbb
fcomp
fiadd
ror
and
loope
pop
mov
adc
call
and
rcr
push
adc
and
push
sub
cmps
ins
sub
push
xchg
inc
add
add
into
inc
dec
in
xchg
mov
adc
adc
push
and
dec
push
pop
cmp
pop
test
or
mov
jp
mov
pop
daa
sbb
sub
sar
or
inc
repz
pop
ds
rcl
lds
or
pop
cmp
sbb
adc
dec
sub
push
mov
fdivr
pop
fdiv
adc
pop
mov
add
mov
xchg
dec
adc
push
mov
jne
dec
sub
sbb
fs
pop
jmp
sub
in
dec
js
daa
cli
inc
cmp
dec
push
xor
push
push
jge
or
daa
push
lea
and
cmp
(bad)
pop
ficom
xor
ret
fcom
les
jo
cdq
(bad)
mov
mov
mov
retf
jge
mov
inc
jmp
fdiv
jns
push
es
cmp
jo
jbe
jp
out
sub
cld
push
push
call
inc
push
pop
inc
test
jne
jne
mov
pop
add
in
inc
pop
add
lahf
mov
dec
xor
shl
cmps
adc
push
(bad)
aaa
and
fadd
ret
sub
dec
ja
jmp
jnp
pop
fdiv
mov
mov
rcl
inc
mov
push
ins
sub
mov
sbb
pop
xchg
psllq
pop
adc
inc
fimul
outs
jle
add
push
(bad)
xor
repnz
jle
mov
or
jne
mov
fisub
je
shl
sub
add
jne
popw
or
aas
pop
and
or
cmp
jne
sbb
push
je
dec
inc
shl
or
movups
sub
pop
cmp
inc
loope
inc
jne
mov
fdivr
mov
add
(bad)
sbb
je
mov
jmp
dec
add
adc
dec
or
push
push
jl
sub
inc
in
sbb
cld
mov
sub
fild
jg
cmp
jne
(bad)
out
xchg
sbb
test
or
loop
add
and
push
jmp
cmp
repnz
and
jg
enter
push
jge
(bad)
mov
mov
inc
xchg
in
call
iret
(bad)
sub
and
rcl
in
loop
xor
pop
sbb
pop
adc
fcmovne
dec
dec
push
outs
jb
movs
mov
mov
enter
adc
cmp
or
add
xchg
mov
jecxz
dec
jl
jg
jae
jne
mov
and
pop
jmp
or
sbb
push
jne
shr
(bad)
js
das
sub
or
pop
fwait
(bad)
pop
sbb
nop
mov
or
and
sti
dec
clc
cmp
mov
sbb
add
sbb
into
xchg
ins
int
and
xchg
or
inc
push
pop
push
pop
pop
out
sbb
jo
xchg
and
lea
repnz
or
dec
xor
and
push
sbb
cmp
inc
mov
mov
push
sti
scas
mov
mov
jge
xor
mov
cmp
paddd
sub
jns
popf
mul
sub
or
stc
jne
int3
dec
adc
call
pop
adc
mov
test
cs
xor
push
stc
in
in
add
push
je
bound
xor
mov
mov
mov
mov
dec
or
ins
fdiv
leave
adc
push
fst
lods
ins
mov
inc
sbb
cmp
pop
neg
or
aad
or
mov
or
aas
sub
add
or
jo
and
popa
adc
dec
cdq
push
(bad)
repz
ror
inc
or
adc
or
scas
pop
pop
mov
adc
cs
cmp
shl
inc
or
cld
push
xor
jle
(bad)
je
cmps
inc
cmps
(bad)
sti
pop
inc
sub
ret
ret
mov
dec
shr
mov
dec
js
mov
cmp
add
cmp
scas
cmp
cmp
or
jb
mov
or
dec
sub
fmul
mov
outs
push
jg
and
fwait
pop
loopne
cmc
fistp
push
stc
call
dec
cmps
pop
(bad)
adc
mov
pusha
pop
les
xor
test
nop
mov
mov
and
mov
retf
int
pusha
call
sub
imul
or
int3
xor
add
add
or
or
add
repnz
pop
das
or
push
repnz
or
mov
pop
and
xchg
sahf
sub
sahf
sub
sahf
dec
sahf
imul
sahf
dec
sahf
dec
cmp
ds
dec
sahf
dec
inc
push
inc
adc
icebp
aas
inc
jmp
xchg
dec
sahf
sub
dec
sahf
sub
dec
pop
jnp
jns
pop
inc
es
fs
dec
and
add
or
test
bound
or
mov
shl
nop
mov
mov
aas
int
adc
mov
or
jg
movs
cmp
sbb
nop
or
nop
push
cmp
out
jg
add
out
prefetchnta
add
cdq
inc
push
nop
add
xor
sbb
sub
jecxz
or
push
add
pusha
mov
es
movs
cmp
and
inc
es
add
call
enter
sbb
sbb
adc
dec
sbb
sbb
sbb
stos
pushf
nop
rcr
aam
sar
(bad)
cdq
inc
xchg
push
nop
inc
push
(bad)
fdivr
adc
neg
push
and
adc
adc
mov
es
and
enter
adc
add
dec
dec
and
int
inc
sbb
sbb
bound
add
push
lahf
es
enter
jl
jl
dec
and
xchg
xchg
xchg
xor
les
enter
xor
and
enter
xchg
mov
imul
clc
cmp
add
sbb
and
and
sbb
inc
call
cmp
(bad)
jo
jb
leave
shr
jae
jae
or
jp
leave
jae
or
push
jle
loopne
leave
adc
add
add
sbb
fsub
sbb
pop
sbb
or
pusha
xchg
fs
inc
es
add
hlt
aam
fild
in
add
sbb
sbb
sbb
or
es
pusha
mov
nop
inc
fbld
jg
add
js
jbe
push
fsubr
sbb
cdq
test
dec
test
jns
arpl
sbb
jmp
neg
in
in
clc
add
in
cli
pop
sti
mov
vmovddup
sbb
or
pmulhuw
and
enter
sbb
sbb
pop
repnz
push
sbb
sbb
sbb
mov
js
jp
aas
dec
pop
or
and
and
and
and
and
and
pslld
daa
pop
sub
inc
push
fs
ds
fs
push
aas
inc
inc
inc
push
fs
inc
inc
sbb
inc
cmp
enter
jge
jg
enter
add
leave
dec
pop
jb
pushf
and
das
jns
lahf
and
xchg
mov
and
sbb
add
and
xor
add
inc
push
int3
int
inc
push
fs
iret
shr
push
fs
shr
nop
add
loopne
sbb
in
xchg
add
stos
push
out
loopne
xlat
jo
and
and
and
and
and
in
das
jns
xor
xor
xor
dec
sbb
xor
and
fs
push
in
add
mov
xchg
leave
and
pop
and
xchg
mov
pop
and
sahf
outs
repnz
pop
or
fadd
pusha
or
repz
fs
push
and
and
fs
and
inc
push
cmp
and
xchg
xchg
bound
fs
cwde
cdq
shl
scas
lahf
and
push
nop
dec
pushf
xchg
movs
dec
or
cmps
cmps
or
or
stos
movs
jb
sub
add
lds
(bad)
enter
sbb
retf
adc
and
in
das
and
inc
and
repnz
xchg
and
and
cmp
and
sar
add
and
pop
pop
pop
and
xor
pop
pusha
xor
add
popa
bound
add
push
fs
push
std
(bad)
dec
repnz
das
jns
and
and
and
nop
add
mul
sbb
and
sbb
add
xchg
push
and
les
mov
nop
add
enter
sbb
in
ret
or
lahf
call
jmp
ss
or
in
mov
pusha
jmp
repnz
xchg
and
gs
jns
dec
and
push
mov
inc
push
fs
jle
fs
push
add
add
and
xchg
and
xchg
pop
and
cmp
and
mov
leave
dec
pop
mov
pop
mul
das
movs
cmps
mov
in
xchg
lahf
es
dec
cs
aaa
mov
aam
add
int3
ret
mov
push
fs
fild
fs
push
loopne
loop
scas
imul
es
add
mul
in
repz
add
and
daa
push
daa
pop
jnp
xchg
mov
daa
or
lods
ret
mov
or
sbb
pop
rol
retf
repz
or
enter
sub
fbld
enter
es
xchg
sub
sub
rol
and
daa
and
xor
daa
daa
xor
add
daa
daa
daa
xchg
retf
daa
daa
daa
and
jb
mov
add
stos
stos
lods
nop
retf
lods
scas
test
in
mov
daa
daa
in
dec
cs
daa
daa
sahf
inc
cs
or
ret
dec
mov
enter
enter
(bad)
fiadd
xchg
loopne
repnz
xchg
sbb
sbb
sbb
sbb
dec
pop
sub
sub
sbb
sub
push
mov
inc
push
push
fs
push
fs
pop
pop
and
push
cmp
xor
add
data16
xor
add
jg
xor
jl
push
imul
and
mov
nop
add
nop
mov
mov
nop
add
mov
mov
sbb
mov
mov
enter
sub
and
mov
lahf
and
adc
adc
adc
cmp
push
mov
lds
or
mov
or
lahf
sub
cmp
or
mov
push
fs
push
mov
fs
rol
in
push
fs
mov
sbb
nop
add
repz
cmc
sub
nop
add
neg
add
sub
repnz
xchg
mov
sub
leave
dec
pop
sub
sub
les
mov
enter
mov
add
lahf
inc
movs
sar
inc
push
fs
inc
push
in
in
out
or
pop
push
call
or
xor
enter
hlt
cmc
mul
or
lock
fs
push
sub
sub
push
fs
sub
in
rcr
xchg
dec
cs
push
mov
sahf
inc
push
in
mov
push
fs
iret
shl
xchg
inc
push
rcl
int3
xor
add
aad
add
and
xlat
fcomp
movs
and
fcmovu
(bad)
pop
dec
aam
sub
sub
pop
jb
sub
test
in
or
and
je
or
call
or
in
in
enter
out
out
lock
sub
leave
dec
pop
jb
pusha
das
popa
das
(bad)
in
das
jns
arpl
fs
gs
cs
das
mov
fsub
fs
fstp
fs
push
(bad)
fimul
les
xor
or
xor
cmp
xor
mov
pop
jb
xor
sbb
xor
xor
mov
sbb
repnz
sbb
or
test
xor
xor
or
xor
add
fistp
and
xor
pop
jb
xor
xor
test
xor
jb
and
test
pop
xor
xor
xor
xor
leave
and
enter
mov
enter
sub
jp
inc
push
in
rcl
fs
push
fs
aam
xchg
inc
push
aad
shl
xor
leave
and
xor
pop
jb
xor
xor
nop
adc
nop
add
push
add
add
add
and
xor
xchg
pop
jb
xor
xor
jns
leave
and
movs
push
jns
aam
aad
mov
xor
pop
xor
pop
repnz
xchg
xor
xor
xor
das
jns
dec
xor
xor
xor
loopne
in
xor
xor
mov
inc
pop
test
xor
add
stos
stos
lods
add
and
lods
scas
scas
sub
xor
mov
test
add
inc
enter
add
retf
add
nop
add
into
xchg
add
nop
iret
rcl
enter
and
xor
in
dec
xor
xor
xchg
dec
cs
jmp
pop
jb
stos
hlt
pop
xor
jns
dec
xor
add
mov
xor
jnp
pop
xor
xor
add
dec
int
add
and
iret
rcl
and
xor
rcl
inc
push
nop
retf
clc
fs
push
fs
cli
sti
push
fs
push
cld
std
(bad)
test
ss
mov
pop
ss
dec
cs
cs
add
sub
ins
ins
and
xor
outs
outs
xor
add
jo
jb
ja
add
je
ins
fild
sbb
add
sbb
nop
add
popf
sahf
lahf
jb
push
push
mov
and
rol
and
xor
(bad)
vpcmpeqd
xor
(bad)
jmp
ret
fist
shl
shl
ror
dec
pop
repnz
shl
aam
aad
mov
aaa
xlat
mov
sbb
nop
add
sti
cld
std
push
sbb
pop
repnz
adc
je
jne
jbe
jns
dec
cmp
js
jns
mov
cmp
mov
sub
cmp
mov
cmp
in
dec
cmp
cmp
add
mov
pop
jns
dec
pop
cmp
mov
mov
pop
repnz
xchg
cmp
mov
repz
cmp
mov
das
mov
cmp
inc
or
les
dec
dec
or
dec
dec
mov
dec
lahf
mov
test
sbb
push
sbb
or
fs
addr16
xchg
push
fs
push
in
xchg
xchg
push
fs
push
xchg
xchg
xchg
dec
pop
repnz
cmp
jge
cmp
aas
sbb
popf
sahf
add
nop
add
nop
mov
add
movs
movs
pushf
or
sbb
mov
or
xor
mov
or
mov
fs
push
rol
inc
push
fs
ret
les
fs
dec
gs
push
enter
xor
pop
int3
int
and
xor
iret
shl
and
xor
rcl
movs
xor
add
aad
dec
scas
add
mov
xchg
cmp
cmp
dec
push
xchg
dec
cmp
nop
add
sbb
cmp
sbb
add
nop
cmp
cmp
push
in
and
push
fs
mov
inc
push
fs
fs
push
retf
int3
int
imul
jb
cmp
cmp
pop
jb
and
nop
dec
fwait
(bad)
loopne
in
push
fs
in
fs
push
fs
jmp
jmp
in
cmp
jb
and
leave
and
dec
push
sbb
mov
daa
cmp
ds
jae
pushf
in
xor
xor
xor
and
push
xor
imul
xor
outs
rep
sub
push
scas
ds
dec
cs
push
mov
ds
lahf
aas
in
dec
cs
aas
aas
nop
dec
cs
push
cwde
jnp
sar
push
fs
push
fs
push
enter
movs
outs
inc
retf
jmp
pop
stc
or
pop
cmp
push
mov
mov
leave
sub
mov
std
xchg
fimul
loopne
dec
call
pop
sbb
jne
popf
pop
pop
sbb
inc
add
add
xchg
xchg
inc
pop
inc
or
pop
jns
dec
inc
or
inc
or
push
sub
and
inc
inc
repnz
leave
inc
inc
inc
inc
inc
push
movs
pop
mov
push
fs
push
push
and
push
jb
adc
leave
and
inc
cmp
pop
jb
inc
inc
inc
enter
(bad)
movs
movs
or
or
test
or
sub
stos
lods
movs
nop
add
nop
mov
mov
nop
add
mov
mov
sbb
mov
or
test
leave
enter
retf
test
int
mov
rol
sub
inc
push
fs
push
inc
inc
inc
dec
pop
fs
inc
inc
or
inc
xchg
hlt
dec
sub
inc
push
mov
std
in
add
sar
inc
jmp
mov
mov
push
xchg
mov
push
sub
sub
push
cmp
mov
es
add
or
push
sbb
mov
or
ins
or
add
mov
(bad)
and
mov
push
sub
jb
cmp
retf
sbb
pop
fstp
push
or
inc
sahf
loopne
in
xchg
jne
jge
inc
add
xor
dec
daa
pop
pop
cmp
je
lea
inc
and
add
sahf
test
add
cmps
pop
add
inc
mov
xor
cmp
iret
std
mov
mov
adc
out
je
movsx
mov
sbb
jl
cld
pop
xor
xchg
fild
dec
adc
pop
or
mov
push
inc
ins
pop
cmp
retf
xor
cmp
cmp
je
loopne
pop
inc
or
xor
jb
or
add
add
sub
sbb
sub
pusha
dec
sbb
inc
xchg
mov
add
sub
jne
and
jbe
inc
repz
and
jbe
add
cmp
iret
add
add
add
sub
ror
pop
dec
lock
and
inc
xchg
mov
inc
out
lahf
loop
pop
fcom
mov
xor
add
adc
lods
mov
retf
shl
daa
add
dec
xor
outs
into
loopne
and
mov
movs
repnz
loopne
mov
nop
enter
jbe
sub
jge
dec
cmp
push
cmp
(bad)
mov
add
mov
xor
cvttps2pi
inc
or
or
ss
ror
add
sub
ret
aam
test
mov
jmp
push
push
sub
(bad)
jmp
sub
(bad)
jbe
inc
xor
push
repz
(bad)
test
add
push
in
pop
or
ror
mov
mov
inc
inc
xor
sub
xlat
call
(bad)
ds
cmp
lahf
stos
pusha
cmp
sub
mov
pusha
cs
and
fisttp
dec
push
cld
inc
adc
ins
cmp
call
add
add
sub
fistp
add
(bad)
jno
pop
sub
cmp
jae
sub
rol
shl
test
add
mov
sub
cmp
je
mov
pop
cmp
sub
add
sub
arpl
int3
lahf
inc
loopne
push
push
inc
pop
test
push
push
int3
push
push
push
adc
mov
mov
mov
mov
mov
add
inc
sub
and
pop
inc
(bad)
call
(bad)
(bad)
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
mov
add
pop
cmp
fs
pop
add
cmp
out
mov
or
or
jl
or
sbb
push
sbb
das
mov
cmps
sbb
xlat
or
mov
mov
add
or
push
adc
add
fisttp
mov
pop
mov
xchg
out
xor
stos
push
enter
movs
ins
mov
or
pop
les
lahf
add
pop
gs
adc
dec
add
pusha
ins
mov
stos
mov
shl
pop
je
sub
and
sub
sbb
das
and
aad
inc
pop
test
into
pusha
adc
aaa
mov
and
aaa
inc
lea
xchg
loopne
and
or
or
jmp
dec
sbb
fldcw
cmp
dec
sub
mov
add
mov
and
mov
rol
push
dec
dec
or
push
jbe
push
sub
inc
or
mov
or
push
sub
add
push
jle
push
fmul
es
out
or
pop
xchg
aas
push
xor
mov
adc
ret
jl
add
fs
ja
add
les
sub
lods
shr
cmp
shr
jb
ret
inc
jmp
add
ret
push
les
ja
cld
and
(bad)
sbb
out
dec
repnz
push
push
jg
out
sahf
inc
sbb
ins
fs
outs
shr
push
lsl
cwde
call
xchg
add
js
inc
ss
inc
pop
in
push
cmp
cmp
jne
adc
int
jo
pop
mov
and
sub
sbb
inc
sbb
and
mov
daa
pop
inc
or
pop
push
sub
jne
adc
mov
inc
gs
data16
and
jmp
add
sbb
aam
cld
fs
xlat
pop
sbb
shr
xor
adc
xchg
inc
pop
(bad)
xor
xchg
sbb
sub
adc
inc
mov
jmp
jne
adc
add
pop
add
adc
sub
mov
ret
std
sar
sbb
aam
lods
inc
in
mov
repz
pusha
call
mov
dec
or
xor
data16
jae
inc
push
ror
fnstsw
cmps
rol
and
test
add
imul
aad
mov
and
or
pop
sub
jne
mov
das
xchg
lea
dec
lea
pop
pusha
call
(bad)
inc
or
ja
ds
jne
adc
cmc
je
sub
inc
sbb
ds
sbb
push
inc
loopne
jnp
or
inc
fadd
add
cmp
sbb
xchg
out
sub
jmp
add
shl
or
adc
sub
add
mov
test
push
jnp
dec
mov
shl
test
adc
push
jo
je
in
les
inc
pop
inc
dec
int3
jmp
dec
and
jb
xor
or
stos
or
scas
or
inc
inc
jl
push
jcxz
or
inc
dec
inc
icebp
je
mov
dec
dec
inc
add
adc
sbb
outs
mov
push
sbb
dec
xchg
cmp
lea
push
and
sub
mov
ins
leave
hlt
or
cmp
push
je
xor
mov
add
jne
lods
xor
enter
mov
pop
ins
push
mov
jle
inc
hlt
dec
inc
mov
xchg
or
clc
lahf
sub
xchg
and
push
lea
call
push
hlt
jge
cs
pop
pop
inc
stos
xor
int3
or
push
cmc
sub
rcr
adc
or
add
aas
cmp
bound
adc
inc
sbb
sub
retf
rcl
xor
xlat
sub
add
nop
and
mov
cmp
mul
sbb
retf
nop
sbb
and
imul
loop
repz
and
xor
cmc
xchg
push
test
pushf
or
inc
xchg
inc
aas
push
rol
mov
cmp
pop
mov
and
xor
dec
sar
push
add
fisttp
cmp
pop
push
push
call
popa
cld
hlt
loopne
jp
add
jg
or
mov
lea
fimul
push
pop
push
icebp
inc
inc
seto
push
add
pushf
daa
cmp
dec
pop
jne
jno
js
outs
inc
imul
or
or
cmps
adc
in
cmp
pop
je
jl
inc
inc
pop
cmp
add
add
or
je
aas
es
cdq
dec
loope
add
add
jne
xor
inc
push
fs
add
or
aas
movs
enter
and
push
fcomp
xchg
mov
mov
scas
pop
std
mov
aam
push
fdivr
rol
in
xchg
inc
mov
rcr
add
add
push
es
cmp
jne
rcr
jg
inc
jmp
cmp
jl
(bad)
ror
mov
sub
xchg
push
call
fist
jl
nop
dec
jg
cmp
loope
jb
outs
shr
inc
lea
out
mov
adc
lea
push
jge
jbe
mov
and
out
add
out
fld
fcmovu
int3
(bad)
adc
enter
cs
add
sub
ss
add
add
or
test
ja
push
mov
cmp
jb
pavgb
add
clc
ins
or
inc
push
outs
or
iret
loopne
(bad)
push
push
xchg
test
clc
adc
sti
add
inc
xlat
adc
mov
mov
retf
inc
(bad)
cmps
retf
mov
inc
out
add
ja
dec
ss
jo
(bad)
cdq
add
jb
jne
cmp
jg
(bad)
mov
icebp
xchg
addr16
sbb
loop
pushf
mov
cmps
jo
cmp
loope
ror
iret
mov
sbb
sub
sar
and
not
cli
inc
loopne
ins
fadd
jbe
jo
inc
fsub
pusha
dec
out
add
sub
add
popf
std
adc
dec
xor
fs
inc
dec
xor
ret
lds
fchs
mov
add
rol
push
jmp
dec
and
or
adc
or
push
imul
loop
call
or
pop
sbb
or
retf
faddp
add
pusha
fstp
fst
inc
or
mov
movs
in
push
(bad)
dec
pop
mov
jne
daa
sub
je
shl
fcomp
pop
out
fld
cs
push
add
cmps
mov
(bad)
loopne
cmps
rcr
fsubr
test
jns
fcomp
ror
push
or
sbb
retf
in
or
dec
leave
loope
xchg
add
and
inc
jmp
adc
jecxz
and
ror
push
jnp
scas
pop
clc
cmp
add
push
add
xor
fisttp
retf
or
or
pop
cmp
jne
xor
or
mov
mov
mov
and
push
outs
push
xlat
adc
test
and
in
sub
btr
sbb
mov
clc
outs
pusha
and
cs
cmp
sbb
xor
aaa
ror
push
dec
inc
cmp
cli
in
jle
lds
movs
jb
aaa
jp
jp
cwde
loopne
jge
xchg
mov
push
jg
je
neg
imul
clc
jle
adc
es
shr
ins
sbb
call
mov
sub
js
fmul
cmovg
out
lea
enter
xchg
rcr
adc
add
rcl
push
aad
sti
scas
sti
das
add
add
jmp
ds
xchg
int
cld
jne
leave
add
fs
mov
pop
fmul
pushf
test
ja
or
add
sbb
inc
mov
popa
aaa
cs
pop
mov
test
fld
push
lock
push
adc
adc
push
or
mov
inc
inc
ins
mov
cmp
iret
dec
(bad)
daa
in
dec
shr
rcl
(bad)
jecxz
sub
add
mov
xor
xor
scas
jg
mov
popf
stos
stos
fild
inc
(bad)
jne
inc
and
sub
inc
mov
sti
xchg
test
adc
push
pop
fdivr
add
push
dec
push
mov
inc
add
je
or
das
sub
mov
mov
or
ds
test
pop
sbb
push
dec
cmp
cmp
inc
pop
lds
xor
push
ret
ror
xor
cmc
jg
dec
dec
mov
or
lock
mov
mov
cmc
shl
nop
inc
xor
or
sbb
push
movs
and
add
sub
pop
add
inc
daa
nop
popa
cmps
mov
add
cmc
jle
dec
add
or
cmp
adc
(bad)
mov
pop
lods
(bad)
std
mov
add
cmp
loopne
(bad)
cmp
shl
out
adc
mov
xor
add
retf
cmp
xor
or
jne
mov
or
shr
fstp
cmp
push
xor
loopne
pop
ss
or
mov
dec
cld
dec
and
or
mov
sub
add
inc
or
xchg
add
add
sub
les
pop
shl
ret
add
xchg
sbb
ret
ins
mov
dec
enter
cld
mul
add
cmp
jbe
mov
retf
ja
fistp
retf
cmp
push
iret
add
cmc
mov
push
loope
mov
stc
push
dec
mov
pop
mov
jns
loopne
add
(bad)
and
sbb
(bad)
adc
dec
dec
mov
movsx
jb
dec
imul
inc
lea
mov
cmp
ja
sub
jmp
sbb
sbb
aaa
jmp
sub
cmp
jmp
mov
movs
or
dec
adc
cs
fs
mov
stos
xor
or
test
aaa
cmp
ss
sbb
jmp
data16
xchg
in
sbb
loopne
ret
jmp
inc
cmp
(bad)
push
pop
mov
rol
jmp
pop
jle
popf
cmp
adc
imul
jmp
daa
mov
mov
pop
(bad)
cmps
cmp
lock
aaa
mov
add
aas
adc
push
and
retf
add
sbb
xchg
sub
push
sub
je
or
or
xor
jmp
inc
loope
inc
mov
clc
call
cmps
scas
add
js
sub
add
pusha
movs
sub
stc
jae
push
lock
sbb
fwait
(bad)
push
or
test
pop
cmp
retf
test
mov
(bad)
aas
test
push
retf
lea
cmp
call
add
cmp
ja
add
mov
jle
sub
mov
adc
call
cmp
jne
or
xor
aad
test
in
inc
inc
ror
jmp
fucomi
cmp
inc
cmp
jae
and
fneni(8087
xor
sub
push
std
pop
sbb
loopne
pop
adc
add
push
and
sub
xchg
push
mov
push
xlat
and
sub
or
add
jl
or
or
or
mov
pop
push
in
fcomp
pop
nop
cmp
pop
pop
pop
xchg
mov
gs
and
sub
inc
stc
xor
and
cmovg
or
and
cmps
test
pushf
and
jg
aas
and
test
mov
cli
loopne
cld
pop
mov
pusha
idiv
add
and
xor
push
rol
fs
jmp
enter
xlat
lods
xor
push
rcl
sbb
jnp
rol
dec
daa
sahf
por
fsubr
fistp
ins
mov
jo
xchg
test
mul
test
out
cld
inc
fs
inc
enter
and
call
push
sub
adc
es
cmp
loopne
loopne
ret
sbb
add
and
cs
aas
jl
inc
adc
js
mov
mov
jl
stc
retf
aas
push
mov
cmps
test
in
jg
mov
stos
mov
test
sub
xor
outs
xor
lahf
adc
pop
mov
or
jmp
cmp
adc
je
push
clc
dec
inc
fild
mov
or
or
adc
mov
ins
adc
and
cmp
test
int3
(bad)
push
adc
or
xchg
outs
adc
js
sar
jle
dec
push
test
jb
cs
rol
xor
xchg
enter
xchg
xor
or
lahf
inc
sub
int
cwde
shl
pop
or
pop
ret
iret
ret
repnz
inc
mov
mov
pop
push
cmp
call
gs
repnz
retf
pop
pop
or
fidivr
outs
int3
arpl
repnz
pop
cs
shr
mov
rol
cmps
movs
mov
add
mov
jl
addr16
in
sahf
inc
lods
mov
mov
mov
ror
jg
mov
or
pop
sbb
ins
xchg
lahf
pop
(bad)
(bad)
mov
xchg
cwde
xchg
adc
mov
or
jne
push
jg
ds
test
sbb
sbb
add
sbb
add
mov
in
ret
mul
ffree
mov
pushf
add
nop
stc
cli
sti
xchg
and
and
clc
ret
mov
mov
add
leave
dec
pop
repnz
add
add
jns
xor
or
or
jmp
inc
or
pop
sbb
enter
sbb
sbb
enter
push
pop
pushf
add
pop
movs
cdq
or
push
cmp
jl
jl
sub
push
ins
xchg
dec
jl
add
or
fdivr
add
adc
dec
loopne
inc
cmp
data16
cmp
ds
sub
sbb
xor
add
mov
rol
pop
push
and
jp
fsubr
dec
pop
jnp
mov
or
(bad)
ror
mov
inc
inc
nop
(bad)
dec
cmovl
lock
fstp
mov
jl
aam
jg
stos
mov
add
mov
shr
or
add
ret
jmp
retf
rol
jmp
shl
shl
add
xor
xor
push
or
imul
out
cli
inc
ins
pop
or
sbb
cmp
ja
push
sar
mov
xor
and
dec
xchg
stos
das
add
pop
test
add
inc
xchg
cs
aas
jnp
das
lods
xchg
ja
mov
clc
sahf
add
mov
mov
mov
test
aam
inc
dec
push
sub
xor
aam
dec
inc
jo
lods
ds
jge
add
mov
push
inc
shl
loope
clc
shl
pop
mov
lea
add
cmc
push
push
out
xchg
ja
xchg
nop
mov
mov
rol
rcl
popa
fadd
mov
js
loop
rol
ret
mov
cwde
and
test
mov
add
or
xor
mov
adc
add
fidiv
dec
inc
xor
pushf
(bad)
mov
pushf
out
dec
fmul
dec
dec
or
jo
call
push
sbb
xor
mov
movsx
inc
retf
push
aam
mov
je
sar
or
je
sub
lea
test
push
pop
lock
jne
inc
xchg
xor
ret
mov
mov
cmp
push
inc
stos
nop
jg
(bad)
mov
or
inc
push
push
dec
mov
jno
push
inc
ds
enter
pop
data16
mov
jp
and
in
dec
mov
mov
sub
or
test
or
rol
test
adc
fiadd
inc
popf
sub
jno
cmp
mov
dec
sbb
mov
adc
mov
cmps
aam
mov
add
push
mov
xchg
mov
push
pop
cmc
dec
and
or
(bad)
or
dec
sub
mov
repnz
mov
dec
stos
test
mov
ficom
dec
adc
pop
pop
xchg
sub
xchg
mov
shl
xchg
das
push
and
call
jge
push
add
push
test
cmp
je
jle
les
mov
ror
push
sub
outs
sub
cwde
sub
add
mov
mov
push
cmp
into
inc
dec
pop
push
mov
leave
sbb
shl
popa
xchg
fstp
pop
rcr
imul
hlt
add
xchg
and
cmp
xchg
ret
pop
out
pusha
adc
pushf
mov
les
pop
sub
cs
adc
push
jmp
xchg
pop
inc
and
data16
mov
mov
mov
mov
lds
push
lods
(bad)
leave
push
push
pop
jnp
sbb
lock
stc
push
push
jl
cs
or
mov
mov
daa
mov
movs
test
or
out
jmp
or
or
add
adc
xlat
adc
imul
sub
dec
push
rol
cld
and
int3
leave
shr
test
sub
int3
(bad)
daa
frstpm(287
mov
adc
dec
xlat
movs
out
sub
lahf
inc
and
mov
ret
jmp
jg
jb
cmp
(bad)
ror
ret
inc
test
retf
mov
adc
rol
dec
into
mov
cmp
jo
pusha
dec
adc
retf
pop
stc
test
les
in
retf
(bad)
mov
xchg
mov
retf
(bad)
pop
rol
xor
inc
and
cwde
dec
and
nop
pop
nop
push
(bad)
adc
stos
aas
aaa
jecxz
push
xchg
ds
adc
ror
push
mov
sbb
push
inc
xlat
jns
jb
or
push
cs
xlat
inc
pop
or
adc
and
in
sub
mov
push
fidiv
movs
mov
push
aas
push
pop
push
push
inc
lds
test
cmp
bsf
pop
adc
(bad)
ja
retf
add
ins
jmp
sbb
mov
mov
and
fimul
xor
ins
mov
(bad)
push
sahf
cmp
(bad)
imul
clc
sbb
or
push
fild
inc
push
std
sub
sub
mov
(bad)
pusha
loope
aaa
xchg
pop
cmp
jbe
or
jne
jp
mov
jne
shr
stc
(bad)
stos
sub
dec
inc
jne
sbb
mov
dec
test
or
cmps
push
aaa
popa
or
jmp
mov
inc
cmp
jno
nop
cmp
jne
and
jae
adc
jl
lds
jne
movs
lods
sub
and
pop
ret
std
sbb
and
cmp
test
or
test
adc
ret
and
mov
jne
in
push
aaa
mov
dec
jnp
pop
and
mov
nop
sub
int3
push
sbb
mov
add
imul
sbb
cmp
cmp
shl
cli
mov
lea
dec
shr
leave
pop
repnz
add
les
lods
add
test
add
add
pop
add
add
test
mov
xor
stos
addr16
xor
test
mov
mov
inc
sub
push
mov
adc
push
scas
or
popf
bswap
in
imul
and
jno
shl
fidiv
mov
fwait
mov
ret
out
pop
mov
inc
jmp
call
in
cmp
sub
inc
adc
out
jg
inc
test
int
retf
mov
rol
mov
ret
and
sub
enter
xor
out
add
sahf
out
sbb
add
test
jbe
dec
cmp
or
cmp
mov
inc
rcr
or
mov
test
dec
and
mov
adc
push
adc
adc
add
adc
movs
mov
ins
mov
cmc
xor
mov
dec
push
xchg
cmp
mov
or
test
cs
add
pop
mov
push
mov
and
lahf
cmps
pop
pop
sub
and
test
in
push
sub
scas
cld
mov
add
adc
add
add
repz
or
mov
pusha
test
ja
das
and
push
jns
mov
je
xchg
daa
inc
dec
repz
push
adc
lock
mov
test
or
sbb
test
jg
repz
aaa
sub
mov
push
ficomp
les
xchg
popa
push
sbb
movs
aaa
jae
adc
xor
push
movs
cmps
icebp
sbb
sub
neg
in
adc
mov
jl
popa
repz
add
and
inc
sub
sbb
xchg
or
sub
fs
retf
jne
xchg
xchg
mov
adc
xor
pushf
mov
push
mov
sahf
inc
outs
inc
test
push
mov
add
dec
sbb
push
add
inc
dec
push
inc
sbb
and
push
cmp
mov
or
add
and
call
xor
cdq
add
adc
mov
adc
adc
out
sub
test
and
xchg
push
mov
pushf
sub
scas
or
sub
scas
sub
mov
mov
hlt
mov
bnd
push
fidivr
mov
loopne
call
retf
sub
sub
test
js
push
mov
push
test
or
dec
sub
or
dec
jmp
inc
cli
add
je
mov
(bad)
jns
add
enter
pop
or
bound
or
inc
cmp
or
movs
jne
nop
int3
lahf
pop
or
inc
push
jb
inc
fs
gs
fs
push
push
mov
rol
mov
imul
xchg
dec
sub
cmp
inc
add
inc
xor
push
pushf
std
cs
push
and
std
pushf
(bad)
sbb
ret
das
das
adc
pop
retf
inc
pop
pop
jl
popa
or
jl
nop
sub
xor
pusha
push
lea
ret
xor
lea
xchg
test
pop
sub
ins
xchg
xor
je
xor
aaa
movs
or
jb
jl
cmp
cmp
add
mul
pop
xchg
and
mov
pop
sub
xchg
xor
cmp
cmp
test
mov
mov
arpl
arpl
pop
(bad)
mov
rcl
mov
shl
or
inc
pop
jb
and
push
repnz
test
and
xchg
add
push
pop
mov
mov
mov
gs
int3
sar
ins
sahf
iret
addr16
mov
inc
movs
mov
in
dec
fcomp
dec
mov
repnz
stc
sub
jae
fcom
(bad)
pop
pop
fdivr
in
cmp
cli
push
push
cwde
mov
imul
(bad)
sub
add
sahf
dec
sub
loopne
jbe
or
jge
fistp
movlhps
fild
stos
mov
call
push
mov
push
daa
and
jl
dec
push
push
imul
dec
adc
inc
stos
nop
cld
clc
push
xor
mov
ffreep
in
loopne
in
mov
mov
cs
cmps
and
(bad)
icebp
icebp
cmc
movs
stc
mov
(bad)
pop
shl
and
ret
in
enter
in
push
mov
sahf
sub
loopne
mov
loopne
shl
adc
push
and
fimul
xor
(bad)
push
mov
jno
je
mov
add
inc
(bad)
inc
mov
lods
addr16
fld
dec
push
mov
rol
popa
and
bound
aas
sbb
aas
xor
cmp
test
test
rcl
add
lods
inc
ja
enter
inc
inc
xchg
retf
inc
jb
jo
movs
adc
scas
out
ror
aas
mov
inc
inc
xor
push
cmp
mov
jo
add
sbb
push
sub
lahf
cmc
mov
fs
adc
pop
adc
inc
jo
push
ret
add
cmp
scas
cld
mov
mov
mov
jo
and
dec
cwde
inc
push
std
inc
int
movs
dec
adc
lods
sub
jo
orps
jo
pop
inc
jo
test
mov
scas
test
inc
(bad)
enter
mov
dec
and
pop
add
sbb
inc
and
fs
lds
inc
xor
sub
add
retf
push
iret
cmc
sbb
rcl
fdiv
test
call
jbe
out
pop
arpl
mov
movs
stos
sub
mov
(bad)
cmp
jl
mov
pop
add
out
stc
cmc
adc
shl
mov
leave
sar
mov
fstp
stc
call
leave
repnz
dec
mov
int3
xlat
rol
int3
retf
xor
dec
and
ffree
fisub
add
push
xor
cs
adc
cmp
nop
inc
loopne
call
in
pop
push
daa
lock
inc
arpl
test
int3
clc
ss
mov
or
daa
cld
stc
ret
inc
add
add
inc
add
push
inc
or
jg
pop
cld
sub
cld
push
fist
leave
and
loope
adc
push
jb
add
sbb
and
cmp
inc
inc
and
sub
inc
(bad)
and
es
mov
cmp
inc
cmp
ds
cmp
leave
inc
or
sub
sub
sbb
shl
ja
inc
sbb
fild
inc
dec
inc
inc
push
jb
push
inc
push
inc
pop
inc
push
cmp
inc
pop
inc
pusha
fs
das
in
push
xor
lahf
jb
xor
dec
dec
jno
jo
and
cmp
sbb
(bad)
leave
push
jmp
inc
in
or
mov
(bad)
mov
xchg
je
test
int3
retf
sar
sahf
ins
and
xlat
rol
sbb
dec
leave
and
ss
ret
pop
enter
inc
lahf
inc
mov
and
cwde
call
arpl
dec
int
enter
stos
mov
repnz
in
aad
leave
int3
(bad)
mov
jnp
(bad)
fstp
mov
les
stc
mov
xor
mov
jg
lods
push
sbb
lods
cmp
xchg
in
xchg
inc
cmp
int3
add
rcl
fadd
jp
fadd
stc
loopne
int
cld
daa
adc
aad
leave
int3
out
repnz
lock
(bad)
hlt
pusha
enter
jp
retf
cld
xchg
cmp
sub
sbb
call
push
sbb
inc
add
inc
add
sbb
or
adc
inc
push
jb
adc
sbb
and
cmp
and
sub
sbb
inc
xor
repnz
push
inc
cmp
and
and
xor
lds
pop
lahf
cmp
aas
inc
inc
pop
cmp
inc
inc
dec
inc
dec
inc
push
sbb
inc
push
inc
pop
inc
inc
push
jb
pop
inc
pusha
inc
and
cmp
inc
push
call
cmp
pop
adc
call
dec
cli
cld
shl
popf
xchg
sahf
inc
mov
inc
mov
mov
repnz
dec
stos
mov
add
aaa
test
sahf
sub
aas
xchg
xchg
cmp
test
sbb
nop
inc
push
inc
inc
inc
(bad)
jle
pop
in
arpl
rcl
cmp
leave
xchg
leave
mov
xlat
mov
int3
rcr
ss
xchg
jl
sub
rol
call
lods
or
jmp
sbb
enter
enter
and
push
xor
inc
cmp
rcl
fcomp
inc
pusha
xchg
in
push
pop
fs
stc
mov
shr
lock
stos
and
inc
pop
in
in
fbld
inc
push
sbb
hlt
loope
push
jb
clc
cld
inc
add
pop
cmp
inc
add
or
nop
sbb
adc
inc
sbb
inc
push
jb
sbb
and
and
jns
sub
dec
adc
push
cdq
in
adc
adc
sub
push
jb
daa
inc
xor
inc
cmp
cmp
inc
inc
cmp
inc
inc
inc
sbb
inc
dec
inc
dec
inc
dec
push
jb
push
inc
push
inc
pop
push
aaa
jns
inc
sub
dec
adc
inc
pop
xchg
push
mov
xor
mov
retf
and
cdq
dec
movs
bound
(bad)
in
movs
mov
dec
sahf
dec
dec
dec
dec
dec
xchg
inc
sahf
add
add
push
enter
rol
xchg
jno
stc
call
ins
cs
retf
ret
sar
bnd
enter
retf
rol
test
ror
add
(bad)
(bad)
mov
(bad)
int3
mov
sbb
mov
inc
xchg
pusha
lock
dec
cwde
leave
pushf
or
int
stc
repnz
test
aad
aas
lods
(bad)
rcl
mov
retf
xor
nop
fild
aaa
movs
inc
mov
adc
es
push
add
les
int
repnz
pop
ror
leave
stc
retf
ror
fadd
retf
mov
push
fistp
inc
sahf
mov
jmp
and
lahf
push
pop
ja
push
push
retf
mov
loopne
mov
inc
in
in
and
mov
loope
mov
jns
add
dec
add
mov
mov
ret
pop
loop
dec
sti
and
mov
movs
mov
sbb
dec
sub
push
in
jg
xchg
push
dec
jge
sub
add
xchg
pop
jns
leave
iret
and
push
add
int3
rol
repz
and
inc
cmp
inc
add
in
jge
movs
iret
popa
fisubr
push
fimul
retf
adc
and
push
call
pavgw
inc
fiadd
push
push
sahf
inc
inc
ss
pusha
sbb
pop
hlt
add
in
lods
cmp
in
out
test
or
lds
push
mov
test
or
cmp
dec
ja
cmp
inc
xchg
dec
dec
fsubr
sub
and
(bad)
jns
shl
nop
add
sbb
cmp
stos
nop
iret
add
nop
mov
inc
jle
nop
rcl
pusha
test
les
xchg
pop
xchg
int3
mov
leave
push
fadd
push
test
inc
sbb
sbb
inc
retf
or
das
mov
int3
test
fstp
mov
cmp
push
xlat
sub
gs
mov
add
test
shl
jmp
js
xchg
fdiv
mov
jge
sub
in
sub
add
add
inc
xor
mov
mov
ss
pop
ror
imul
shr
xchg
inc
sar
dec
mov
dec
jle
mov
or
sbb
cmp
in
cwde
fsub
xor
mov
adc
dec
push
mov
mov
push
and
movs
mov
jns
jb
mov
mov
mov
dec
adc
add
or
jl
nop
and
push
and
movs
add
mov
fcom
pop
dec
add
xchg
mov
or
mov
push
inc
and
gs
inc
dec
repnz
call
in
lock
clc
in
xchg
inc
cld
inc
add
sahf
cmp
repnz
or
inc
adc
push
sbb
pop
dec
sbb
sbb
dec
pop
mov
sub
dec
jb
daa
inc
xor
call
dec
or
js
repz
call
loopne
inc
in
loopne
xchg
dec
dec
fiadd
inc
mov
cmps
call
popa
fimul
leave
lds
mov
inc
inc
test
fs
sub
jg
out
in
in
push
jns
out
push
push
push
jb
or
push
jb
jno
dec
cmps
movs
jo
aam
jecxz
movs
mov
mov
jecxz
pop
pop
pop
pop
add
jle
jge
xchg
sub
mov
and
imul
imul
imul
gs
push
cli
popf
(bad)
aad
mov
loopne
jo
call
into
jno
outs
push
stc
dec
jle
inc
ins
mov
push
pop
outs
lds
pop
cs
nop
mov
repnz
(bad)
jmp
retf
movs
jbe
jne
dec
in
sbb
cmp
pop
rol
js
dec
sahf
cmp
jl
add
cwde
ins
leave
xchg
mov
jle
sbb
cwde
mov
mov
cs
xchg
xchg
nop
mov
and
mov
and
add
xchg
xchg
xchg
retf
sbb
mov
dec
sub
inc
inc
push
in
mov
mov
ror
push
cs
mov
scas
add
lods
lods
into
int3
xchg
sub
sbb
sbb
pop
push
in
mov
push
push
mov
or
rol
mov
mov
pop
mov
dec
gs
fnstsw
fadd
in
inc
cwde
cwde
les
xchg
or
ffreep
vmovntps
in
in
rcr
gs
enter
inc
inc
cmp
and
mov
mov
ss
clc
jg
mov
xchg
dec
pop
inc
mov
push
push
jg
mov
movs
inc
xor
add
sbb
add
fstp
pop
stos
mov
cwde
jns
dec
pop
dec
cdq
dec
call
dec
pushf
xor
sbb
and
mov
dec
pop
xchg
xchg
mov
pop
dec
pop
out
inc
pop
repnz
pop
dec
pop
dec
pop
mov
mov
mov
add
push
ins
nop
retf
ins
outs
push
je
jbe
sbb
xchg
mov
jp
jnp
sbb
movs
je
pop
add
adc
test
enter
enter
mov
xchg
push
in
(bad)
fs
push
(bad)
enter
fs
retf
les
add
rcl
xor
add
rcl
aam
retf
aad
jnp
pop
ins
pop
or
mov
mov
in
jno
add
xchg
or
rcr
mov
push
retf
push
jmp
cmc
popa
sbb
nop
inc
aam
sub
aaa
mov
pushf
add
pop
and
cmp
ret
in
xor
pusha
xchg
push
inc
mov
stos
inc
or
imul
aad
mov
mov
add
mov
mov
and
push
push
or
repnz
cmc
add
or
sbb
sub
inc
in
and
pop
mov
and
ds
sbb
push
dec
test
cmp
scas
push
ficom
gs
add
xchg
dec
hlt
add
aas
call
clc
ret
(bad)
shl
mov
pop
loopne
jl
sbb
jae
out
call
jnp
xor
clc
sbb
jns
ja
pop
fdiv
idiv
xlat
and
jb
cmps
or
pop
and
cmp
or
scas
out
adc
mov
shl
sub
sar
test
pop
dec
cmovne
clc
sbb
ret
dec
stos
imul
(bad)
lahf
repz
pop
add
ins
sbb
retf
fsub
les
mov
out
pop
dec
add
(bad)
ret
leave
aam
enter
(bad)
gs
or
retf
into
shl
adc
cmps
repnz
mov
add
and
or
add
and
std
sbb
push
add
xlat
add
popa
pop
bound
lods
xchg
push
or
push
add
sahf
xor
inc
add
ds
dec
jae
and
sbb
add
gs
loopne
xchg
movs
in
lock
je
dec
ror
loope
inc
in
addr16
xchg
xor
movs
jo
add
pusha
jns
dec
dec
add
enter
inc
lock
and
je
fld
inc
pop
jo
mov
aas
jb
lahf
sahf
and
out
leave
aam
in
mov
in
retf
ret
call
popf
jl
scas
in
leave
(bad)
(bad)
mov
lea
pop
fnstcw
(bad)
lods
(bad)
(bad)
cmp
mov
xchg
push
and
sbb
test
fisttp
xchg
push
leave
mov
test
push
pop
sub
xor
ja
mov
mov
mov
and
enter
aaa
adc
xchg
or
adc
shl
push
pop
nop
jg
dec
ins
jg
push
es
mov
sub
sub
pop
jg
bnd
(bad)
inc
ja
sbb
and
sbb
iret
inc
adc
sbb
shl
mov
mov
and
in
dec
(bad)
(bad)
scas
xchg
syscall
sbb
and
dec
adc
loopne
mov
mov
push
lds
rcr
and
push
push
aam
pop
dec
std
daa
or
icebp
inc
jmp
push
push
or
xchg
cmp
or
pop
inc
imul
push
daa
(bad)
push
jmp
add
enter
aas
imul
xchg
je
lock
xchg
xchg
mov
sahf
fwait
sub
or
or
cmp
adc
shl
push
or
movs
fsubr
imul
imul
add
mov
push
push
pop
int3
and
adc
sub
xchg
jo
jne
jo
(bad)
retf
sub
les
cmp
clc
into
ret
mov
push
jb
xor
adc
xchg
dec
add
push
lock
or
jecxz
movd
inc
fld
retf
rcl
cmp
dec
sub
mov
shl
xor
or
lock
sub
pop
xor
test
push
push
lds
ret
pop
dec
in
cld
sbb
enter
loopne
pop
sbb
adc
aas
mov
jne
pop
pushf
xor
mov
enter
sbb
fnsave
(bad)
popa
xchg
pop
sbb
shl
sbb
jle
adc
test
push
pushf
shr
inc
pop
inc
jae
stc
in
and
mov
lock
or
cmp
rcr
or
repnz
xchg
test
or
lods
cdq
push
fcmovb
add
retf
inc
add
inc
mov
push
xchg
clc
push
add
pop
nop
nop
repnz
test
sbb
or
mov
test
mov
test
sub
push
(bad)
push
push
fcmovne
sbb
mov
and
push
add
add
or
nop
xchg
out
or
imul
mov
je
adc
sub
popf
pushf
sbb
dec
or
pushf
sbb
add
dec
adc
or
and
mov
dec
push
xlat
sahf
nop
or
adc
ret
mov
out
into
ret
dec
dec
dec
mov
dec
add
(bad)
in
push
push
rcl
push
mov
mov
inc
push
xchg
jg
hlt
or
inc
push
mov
call
sbb
(bad)
(bad)
push
loope
loop
add
mov
mov
out
jecxz
fadd
mov
rol
sbb
mov
stc
dec
sbb
inc
adc
inc
rcl
(bad)
(bad)
dec
and
cmp
sahf
inc
idiv
shl
pop
hlt
ret
or
jg
dec
ret
pusha
leave
sub
sbb
sub
hlt
jmp
pop
sub
jnp
cmp
sub
and
pop
icebp
sub
in
and
repz
sub
push
or
fwait
mov
in
daa
push
js
enter
ror
enter
push
test
push
ins
mov
cs
or
ret
add
ins
xor
in
push
mov
xchg
dec
and
sub
pop
xlat
pop
dec
ins
(bad)
or
add
ror
jb
retf
retf
ret
(bad)
retf
test
adc
xor
out
out
sbb
add
push
xor
cdq
sub
inc
adc
or
xor
or
inc
sbb
fcomip
push
pusha
sub
sbb
leave
dec
sub
pusha
(bad)
pop
nop
dec
xchg
mov
in
aaa
xchg
sub
dec
sbb
jae
scas
cld
in
sbb
aad
leave
clc
movs
(bad)
retf
pop
pop
mov
cmp
cmp
or
cmps
push
push
add
or
jmp
add
add
and
inc
sub
mov
int3
imul
xor
rcr
jne
inc
push
sub
cmp
nop
call
mov
cmps
aas
mov
push
aas
jg
add
das
sub
cmp
movs
(bad)
leave
and
sbb
test
mov
push
call
imul
jecxz
push
mov
sbb
jmp
xor
mov
inc
jne
sub
and
jne
jnp
adc
nop
xchg
mov
xor
js
push
int3
adc
sti
adc
xchg
and
jo
jmp
sbb
jbe
sub
inc
int3
fs
xchg
and
add
inc
mov
sbb
adc
adc
push
jae
push
addr16
test
dec
shr
add
mov
sbb
retf
das
aam
ret
sbb
sbb
or
test
mov
adc
je
sub
inc
jo
jmp
sub
dec
shr
inc
mov
mov
nop
sbb
push
scas
mov
out
mov
stos
cbw
wbinvd
dec
es
add
push
sbb
xor
mov
call
ins
outs
fdiv
aam
jne
push
push
add
retf
sbb
out
push
cmp
fs
imul
cmps
xchg
xchg
dec
xchg
or
add
xchg
aaa
push
ret
add
sysret
sbb
push
add
dec
jl
enter
cmp
mov
cmp
jg
cli
mov
xchg
mov
mov
mov
aad
xchg
xchg
mov
cmps
jmp
and
push
inc
cdq
pop
mov
sub
sub
ds
push
sub
push
push
push
push
push
leave
jg
mov
mov
mov
in
cmp
sbb
ret
sbb
jb
or
sbb
in
test
push
test
in
sti
in
repnz
sahf
sti
push
push
loope
sbb
push
cs
cs
mov
repz
mov
and
pop
mov
mov
and
leave
rcr
push
pop
push
push
cdq
in
pop
lahf
jl
and
xchg
and
nop
pop
xor
retf
enter
sub
daa
and
xchg
sub
pop
sbb
dec
push
push
push
pop
mov
jne
nop
je
mov
pop
fidivr
xor
xor
xor
jle
mov
push
cwde
adc
aas
imul
pop
and
ret
lock
cmp
std
cmp
popa
ror
repnz
out
in
pusha
ret
ret
les
rcr
jg
pusha
inc
add
retf
mov
pop
cmps
(bad)
xor
pop
pusha
pop
pop
stc
pop
sbb
leave
add
in
int3
retf
pop
retf
inc
inc
call
je
popf
cld
leave
mov
push
jb
mov
push
aam
aad
inc
push
mov
push
in
aas
daa
push
shl
xlat
cs
retf
enter
jb
xor
inc
fdiv
inc
xchg
retf
movs
loopne
(bad)
cdq
and
jg
dec
retf
cmp
mov
mov
nop
ror
rcr
xchg
xchg
xchg
xchg
nop
addr16
cs
std
mov
(bad)
(bad)
mov
xchg
aas
sbb
shl
retf
shl
sbb
fist
add
cdq
sub
in
add
or
jb
push
push
pop
push
or
in
cmp
test
retf
sub
xor
inc
adc
adc
sbb
pop
adc
hlt
(bad)
in
std
cmp
cmp
xchg
xor
inc
mov
jmp
xchg
xor
mov
leave
out
sbb
push
ror
xor
les
xchg
xchg
jg
dec
xor
adc
cwde
sub
pop
sub
jb
add
retf
in
and
(bad)
int3
retf
or
popa
nop
enter
xor
retf
aaa
rol
pop
cmp
jmp
repnz
nop
and
icebp
fsub
(bad)
into
retf
adc
ret
cld
in
xchg
loopne
xchg
enter
retf
call
(bad)
cmp
in
jo
add
repz
dec
fadd
adc
enter
mov
pop
inc
cmp
xchg
fcomip
div
cs
add
dec
nop
adc
sub
or
aas
cmps
sbb
aad
pop
or
icebp
arpl
mov
fild
adc
sub
popa
or
or
sbb
jle
or
push
mov
ret
cs
or
mov
dec
out
add
test
add
xchg
mov
add
in
jns
and
or
icebp
inc
push
bound
mov
outs
arpl
add
or
jl
int
lock
or
jp
dec
mov
sbb
sub
pop
leave
sub
and
pop
mov
mov
add
cli
dec
push
js
mov
sbb
call
add
sbb
push
or
push
mov
cmp
xchg
jecxz
leave
xor
call
sbb
je
add
cmps
xor
cmps
fild
in
push
cmp
dec
push
outs
les
movs
sub
inc
rcl
sbb
popf
movs
xor
test
mov
add
add
cld
add
adc
and
rcl
loopne
je
test
and
xchg
dec
retf
cwde
cmp
dec
cmps
or
jmp
mov
inc
mov
cli
sub
ror
pop
mov
add
adc
adc
sbb
cld
xor
pop
test
(bad)
sbb
mov
pop
mov
sbb
jecxz
mov
shr
pop
scas
lods
or
mov
popf
xchg
or
adc
push
ret
sub
retf
ret
cmps
popf
dec
movs
add
adc
(bad)
sahf
mov
lea
nop
fwait
xchg
xchg
mov
adc
aam
jge
push
dec
mov
or
out
sbb
pop
jne
inc
leave
or
add
inc
or
shr
test
sub
pop
and
ds
test
xor
adc
sbb
inc
adc
pop
inc
xor
jecxz
adc
fmul
es
sbb
mov
pushf
cld
in
add
mov
mov
inc
ret
inc
xchg
jb
inc
inc
inc
lods
cmp
pop
lods
scas
scas
fcmovnbe
and
mov
stos
lods
dec
sub
enter
and
lds
mov
and
xor
(bad)
or
ss
sub
mov
outs
mov
fs
and
mov
adc
bound
jge
xor
mov
or
ja
adc
shl
xor
test
fiadd
jge
in
mov
add
mov
pop
add
xchg
sti
or
xor
test
inc
fwait
in
test
pop
fcomp
and
clc
les
ss
cld
js
mov
jo
test
sbb
push
sbb
fdivr
xor
ja
inc
or
cmp
sbb
in
pop
lods
outs
jb
push
(bad)
adc
dec
imul
push
jg
aad
out
inc
jb
stc
loopne
aam
dec
cmps
nop
sbb
icebp
add
mov
add
clc
pop
mov
loopne
and
and
mov
pop
fld
xchg
sbb
test
mov
jo
aam
jno
cmp
mov
inc
and
add
inc
dec
adc
xchg
loopne
sub
or
cmp
dec
jecxz
cmps
push
inc
jb
shl
xor
rol
aad
xor
push
scas
(bad)
ret
adc
or
and
or
xor
jb
enter
ss
iret
int
fnstenv
mov
lds
pop
cmp
push
add
test
inc
leave
push
xor
adc
and
pusha
jmp
add
lods
and
mov
and
aam
jae
add
mov
mov
sub
and
inc
and
cwde
pop
jb
add
xchg
test
mov
sub
and
icebp
dec
cmp
dec
sbb
adc
xor
repnz
sub
ss
jle
aaa
es
cmp
xchg
movs
in
les
clc
jle
push
pop
mov
(bad)
popa
and
adc
imul
mov
jne
and
shr
or
push
sbb
sub
adc
xchg
jno
retf
sbb
dec
sub
int3
xchg
int
popa
int3
repnz
out
xchg
daa
aas
cmp
in
mov
nop
xchg
and
and
imul
fwait
fs
cld
sbb
xchg
mov
cmova
loopne
js
in
xchg
xchg
xchg
xchg
push
add
push
add
test
pop
mov
(bad)
mov
push
loopne
sbb
mov
cs
lea
jae
ror
sbb
repz
sub
jge
sbb
inc
popf
dec
sub
xor
movs
and
xchg
ret
lea
adc
and
in
fsubr
push
lods
inc
dec
mov
adc
adc
sub
pop
in
jbe
popa
loop
js
jmp
and
adc
dec
mov
inc
scas
fadd
xchg
or
(bad)
cwde
xchg
(bad)
bnd
in
cwde
push
add
add
pop
lock
mov
in
das
enter
lahf
add
sti
xor
jmp
(bad)
cmp
add
gs
pushf
xchg
push
es
or
push
xchg
nop
sub
rcl
out
mov
test
xor
push
xor
ret
out
jecxz
add
aas
adc
cld
pop
xor
jno
dec
dec
fild
mov
sbb
inc
call
mov
cmp
inc
addr16
fwait
lock
inc
dec
push
mov
icebp
hlt
push
dec
es
les
push
add
es
call
xor
sbb
shr
cmp
xor
dec
mov
popa
ror
and
iret
sbb
or
or
inc
lock
add
xchg
and
das
xor
mov
(bad)
and
sbb
lahf
xchg
aas
push
jge
xchg
shl
clc
mov
or
stc
xchg
clc
mov
imul
gs
push
cmp
(bad)
sbb
mov
mov
inc
std
stc
mov
test
jb
(bad)
std
cld
xchg
retf
not
push
push
mov
cmp
pop
adc
cmps
sub
adc
pop
add
push
into
out
add
add
dec
gs
ins
outs
ins
outs
pop
add
ins
jg
cld
neg
jecxz
rol
adc
(bad)
ror
enter
mov
rcl
retf
ret
adc
xchg
mov
ret
xchg
sbb
mov
jg
add
and
cmps
lock
fisttp
sub
mov
and
push
push
imul
xor
adc
add
ror
sub
ret
xor
cmp
(bad)
xor
ret
cmp
xor
fidivr
loop
repnz
push
xchg
ret
pop
sub
cmp
(bad)
cld
(bad)
cld
dec
inc
dec
inc
mov
inc
loop
inc
inc
mov
xchg
aas
push
pop
mov
and
dec
push
in
(bad)
clc
(bad)
clc
dec
nop
pop
cs
dec
dec
dec
dec
push
cs
retf
mov
mov
repnz
(bad)
hlt
(bad)
hlt
dec
enter
push
push
pop
and
pusha
fs
or
dec
mov
sub
int
push
in
mov
out
(bad)
adc
jmp
daa
aas
push
sub
(bad)
dec
jl
mov
leave
and
ins
mov
jbe
inc
xor
or
sbb
call
mov
cmp
sbb
pop
dec
mov
mov
pop
mov
dec
gs
cmc
clc
div
imul
aam
adc
xor
mov
jns
cmp
test
das
adc
ret
mov
in
mov
add
pop
sub
das
call
aas
adc
daa
inc
mov
xchg
retf
add
(bad)
mov
fistp
mov
mov
sub
sub
shr
xlat
sub
mov
sub
and
or
jmp
mov
ja
and
mov
xor
pop
push
cs
push
sub
test
mov
cli
mov
lea
imul
inc
cmp
jmp
push
push
sub
cmp
cmp
jne
mov
dec
jb
cs
cmps
mov
popa
sub
shr
cmp
jecxz
sbb
test
and
adc
loopne
sbb
mov
mov
adc
test
add
loope
mov
sbb
rol
pop
mov
xor
ror
int3
mov
pop
enter
or
mov
loopne
mov
xor
xchg
dec
add
sbb
(bad)
je
test
dec
les
sub
(bad)
mov
lods
(bad)
(bad)
inc
sahf
inc
xor
inc
cmp
mov
add
mov
leave
mov
sbb
sub
add
mov
std
scas
sbb
and
gs
fcomp
in
pop
mov
shl
outs
sbb
jnp
and
pop
lods
loopne
inc
outs
sbb
inc
jle
or
jne
dec
or
cmp
xchg
addr16
sub
jg
push
ja
dec
lea
mov
adc
hlt
(bad)
xor
adc
xor
jo
adc
mov
dec
mov
movs
xor
push
mov
push
add
dec
repnz
fst
(bad)
adc
sub
jmp
repz
imul
dec
dec
in
jae
stos
les
xchg
ja
enter
push
xor
sar
push
dec
repz
in
pop
in
and
and
sbb
mov
lock
ret
inc
call
sub
push
jns
dec
jb
rol
ror
jns
retf
int
cmp
sahf
retf
jmp
hlt
cs
dec
mov
mov
jns
or
push
(bad)
loopne
repnz
xchg
std
rcl
rcl
cmp
ror
das
(bad)
stc
cmp
lods
dec
jb
cmp
lock
fadd
repnz
in
and
mov
aad
movs
xor
aam
inc
push
and
in
les
es
dec
les
fisttp
and
imul
enter
mov
mov
cmp
(bad)
shl
cmp
inc
jmp
push
cmp
loopne
mov
cmp
retf
push
adc
push
push
jb
dec
call
in
cmpxchg
dec
xor
enter
and
addr16
dec
adc
leave
xor
imul
mov
in
cdq
dec
enter
or
nop
out
sub
or
cs
adc
cmp
xlat
cmp
test
enter
enter
or
mov
jb
fld
cld
push
jns
xchg
cmp
adc
mov
xchg
jb
cmp
pop
iret
leave
test
dec
in
mov
jb
and
sbb
dec
sahf
and
and
daa
in
add
add
xchg
or
in
pop
sbb
in
xchg
ja
mov
arpl
and
xor
mov
pushf
pop
sbb
in
xchg
xlat
sbb
mov
sub
xor
das
int3
and
push
and
fwait
test
mov
gs
arpl
sub
stc
push
dec
cmp
leave
in
ins
sbb
or
sbb
gs
mov
inc
xchg
inc
leave
and
and
add
or
inc
add
sbb
sbb
and
adc
daa
inc
leave
leave
jo
adc
jb
je
mov
movs
xor
cwde
sti
and
add
sbb
add
sub
fild
push
bnd
push
inc
inc
push
or
shr
cmps
rcr
(bad)
fisttp
inc
repnz
inc
adc
out
dec
sahf
retf
or
push
loope
xchg
lahf
ret
(bad)
loopne
ror
dec
add
call
cmp
cmp
rcl
ret
jo
inc
(bad)
pusha
add
or
aam
jl
or
ja
pop
add
or
lea
test
sahf
dec
loop
popa
adc
(bad)
add
or
icebp
xchg
and
cmp
and
psubd
xchg
jecxz
sbb
cmp
leave
add
xor
and
pop
fcomp
inc
push
cmp
enter
fcomp
sub
adc
and
push
aam
add
aam
daa
daa
and
jo
cmp
jae
dec
sbb
sbb
and
in
mov
add
and
add
push
fcomp
test
pop
in
dec
pop
jb
xor
ins
ins
dec
and
ins
dec
and
mov
xlat
jmp
dec
push
xchg
out
daa
int3
bswap
pop
mov
fild
int3
ins
jmp
push
scas
mov
xor
cmp
mov
retf
or
cmp
rol
inc
inc
sub
imul
push
test
outs
aam
inc
adc
fsubr
or
jne
sub
and
repz
cmps
mov
push
mov
in
mov
(bad)
xor
push
loop
add
nop
jp
jmp
std
push
mov
cmps
ss
test
clc
cmp
jne
jp
dec
inc
mov
shl
sbb
xor
dec
not
jg
lods
(bad)
movs
xor
in
mov
loopne
loope
je
jp
push
dec
pop
dec
adc
scas
mov
test
mov
cmp
jb
in
in
push
xchg
and
pushf
sbb
movs
mov
call
test
push
daa
pop
stc
mov
sahf
in
sub
pop
pop
inc
sbb
pushf
mov
in
retf
leave
lock
icebp
lock
dec
xchg
cwde
mov
jb
nop
xchg
hlt
xchg
cmc
hlt
and
pushf
sbb
xchg
xchg
xchg
mov
clc
xchg
stc
test
gs
stc
or
xchg
xchg
inc
cs
std
cld
imul
mov
dec
dec
add
inc
dec
in
ins
ins
ins
mov
cmp
daa
mov
push
mov
jo
outs
jb
adc
dec
xchg
xchg
xchg
or
aas
jne
inc
dec
in
je
xor
sahf
or
or
(bad)
aas
jns
js
outs
jb
jl
sahf
adc
adc
aas
jge
es
inc
dec
jl
js
jb
stc
sahf
adc
adc
push
mov
in
lahf
jge
shl
mov
xor
mov
add
mov
std
data16
std
test
mov
sub
enter
inc
cld
mov
adc
pop
add
add
scas
xchg
std
sbb
shl
inc
push
pop
or
push
adc
ja
mov
lods
and
dec
jle
ret
pop
aas
sub
enter
jl
adc
nop
outs
shr
cld
push
or
jle
sub
sahf
and
mov
adc
push
aad
ror
sub
jge
ret
orps
xor
adc
cmp
jecxz
and
ins
and
leave
mov
mov
fs
adc
sti
pop
outs
dec
test
pop
cmc
loop
clc
adc
push
push
cld
pop
in
loop
xor
inc
or
xor
or
test
and
inc
pop
fld
push
pop
adc
cs
adc
xchg
jo
mov
pop
movs
rol
pop
ins
add
(bad)
sahf
lahf
sub
loope
pop
jp
add
ds
je
mov
mov
aam
movs
sbb
dec
mov
ja
jns
rsqrtps
add
shr
mov
adc
or
cmp
or
fsub
inc
mov
pop
push
enter
ret
int3
movntps
in
dec
adc
add
fadd
cmp
xor
jo
or
dec
sbb
inc
xlat
dec
or
iret
push
inc
retf
cli
and
mov
xlat
pop
(bad)
call
enter
les
movs
pop
add
adc
in
test
push
add
mov
retf
and
iret
xor
sub
inc
int
movs
xor
ret
sub
mov
inc
cs
std
mov
in
(bad)
push
or
repnz
adc
retf
add
adc
retf
shl
rol
mov
mov
sbb
xchg
fcomp
inc
sbb
es
sti
or
scas
inc
add
dec
xchg
mov
scas
mov
xor
push
sti
inc
xor
jo
(bad)
jbe
xchg
std
xchg
inc
add
or
xchg
mov
and
mov
xchg
aad
sbb
das
fsubr
dec
mov
sar
inc
repz
sbb
loopne
inc
xchg
test
or
sti
loope
je
adc
sbb
je
add
test
pop
sti
xor
inc
push
arpl
sbb
xchg
adc
mov
test
xor
fld
(bad)
lods
add
and
int
stos
push
dec
sub
fild
add
in
or
push
push
xor
inc
add
and
cld
dec
fs
sub
sbb
xor
sbb
rcr
loopne
mov
lahf
ja
lds
fwait
sub
enter
pop
push
test
sbb
(bad)
and
and
out
mov
out
(bad)
or
cld
sbb
inc
dec
or
imul
cmp
mov
cmp
and
popa
xor
pop
sbb
fild
cdq
sub
mov
(bad)
mov
and
or
int3
push
mov
das
nop
cmp
push
ret
rol
or
xor
lods
jg
fidivr
stos
pop
iret
js
lea
xchg
gs
adc
cdq
dec
adc
dec
mov
sbb
or
pushf
jmp
jl
je
mov
sar
and
push
inc
cld
mov
xchg
stos
ss
xchg
mov
mov
add
test
jo
aad
adc
sub
into
loopne
stos
mov
mov
nop
add
and
cwde
add
jo
icebp
(bad)
mov
in
inc
ins
pusha
(bad)
jo
(bad)
push
js
and
jle
inc
and
or
dec
push
mov
dec
int3
pop
js
(bad)
movs
jns
les
fcom
es
or
push
leave
xchg
xchg
fcom
(bad)
mov
cmp
push
mov
std
cmps
fwait
adc
aam
sub
cmp
ror
xor
ins
or
ret
cmp
add
xchg
mov
mov
mov
imul
in
xchg
(bad)
and
into
sub
push
and
cmp
or
mov
in
xchg
mov
ins
cmps
inc
gs
adc
(bad)
enter
xchg
sbb
adc
into
leave
pop
cmp
sbb
adc
add
push
sbb
fisub
mov
pop
imul
inc
aam
adc
div
and
retf
sub
add
and
jp
pop
push
mov
jg
imul
mov
jmp
pop
inc
call
call
dec
dec
inc
add
iret
sbb
fisttp
outs
push
mov
and
lea
xor
imul
xor
leave
cmps
xchg
inc
mov
shl
sbb
mov
lds
rcl
fs
dec
outs
hlt
hlt
cmp
ret
xchg
retf
pop
(bad)
iret
push
inc
cmp
xchg
jb
and
jno
loop
fistp
out
add
lods
and
repnz
inc
mov
lock
loop
gs
les
mov
adc
bound
(bad)
loopne
ja
xchg
les
retf
sahf
test
cmp
test
jo
or
cs
jecxz
ror
or
(bad)
and
jmp
ins
jp
ret
(bad)
ds
retf
and
aam
push
sbb
mov
nop
xor
(bad)
adc
rol
addr16
popa
cmp
mov
dec
(bad)
push
ret
cmp
into
inc
shl
jge
add
pop
adc
pop
clc
(bad)
add
(bad)
std
xor
push
and
xchg
jne
mov
(bad)
pop
je
pop
adc
mov
test
xor
inc
mov
mov
adc
add
in
sub
or
nop
xchg
or
cdq
or
push
xlat
xchg
add
retf
mov
xor
adc
xor
enter
cmp
arpl
aaa
and
push
sub
fbld
and
out
cmp
shl
pop
aad
sub
popf
cmp
or
inc
xchg
outs
dec
out
je
je
sbb
ror
push
das
fdivr
data16
cmp
inc
sbb
loope
push
jge
mov
test
les
mov
je
imul
dec
aaa
mov
cmp
xor
dec
and
dec
imul
sbb
enter
std
inc
les
push
movs
or
push
sub
cmp
mov
inc
dec
bound
or
sbb
mov
xor
int
inc
add
push
lock
int3
push
add
push
js
inc
pop
retf
enter
cmps
inc
dec
sahf
dec
leave
dec
adc
in
xor
ins
nop
inc
and
sbb
inc
cld
adc
jg
rol
dec
and
dec
mov
sub
or
jmp
pop
xlat
(bad)
in
inc
push
add
mov
inc
mov
into
jl
fadd
sbb
in
pop
pusha
cs
nop
mov
inc
push
sub
fs
mov
(bad)
add
and
push
inc
stos
dec
pop
sub
movs
sbb
add
mov
je
out
mov
inc
pop
rol
aaa
les
inc
mov
jno
vpsrad
(bad)
rcl
rcl
ret
movs
add
mov
mov
add
iret
sbb
test
add
test
test
std
dec
ret
xchg
xor
xor
loopne
add
test
sbb
push
ins
adc
inc
out
(bad)
pop
inc
or
das
mov
pushf
sub
sub
mov
hlt
dec
adc
shl
or
xchg
sbb
pop
out
or
or
neg
jns
sti
cmps
xchg
sub
std
nop
add
pop
adc
fs
fadd
dec
xor
xchg
pop
adc
(bad)
setno
mov
sub
jo
sbb
pusha
cdq
dec
(bad)
xchg
push
inc
cs
icebp
lea
push
mov
dec
sub
push
cdq
js
inc
cmp
add
push
sbb
push
pop
cmp
call
(bad)
fs
and
iret
ror
sbb
push
inc
push
in
push
and
stos
fs
es
(bad)
adc
aas
sbb
in
inc
ror
test
nop
in
aad
inc
or
xorps
pop
shl
lea
nop
iret
or
loope
jne
shr
xor
and
add
adc
cmp
pop
adc
je
jb
add
pop
int3
daa
and
mov
pop
arpl
xchg
add
in
pop
add
(bad)
std
cmps
xchg
or
mov
nop
pop
mov
call
or
retf
add
or
shr
rcl
or
or
push
leave
xor
pusha
add
(bad)
sti
and
jb
add
shr
mov
adc
hlt
popf
adc
test
adc
xchg
lock
ins
lea
mov
pop
pop
dec
jecxz
xchg
mov
adc
aam
shl
mov
pop
dec
daa
mov
pop
movs
and
inc
or
shl
pusha
les
xchg
and
leave
gs
data16
push
loopne
adc
and
and
add
gs
add
and
popa
sbb
rol
(bad)
ficom
xor
adc
call
push
sbb
sub
push
push
and
pop
mov
lea
aad
add
das
xor
add
imul
and
and
dec
shr
xor
xor
fs
repnz
cmp
aad
imul
inc
es
(bad)
jl
dec
sbb
add
push
dec
xor
je
pop
push
add
mov
or
popa
jne
or
js
ins
push
jp
inc
ss
or
repz
stos
xchg
add
push
cmp
lea
test
pop
inc
sbb
movs
sbb
inc
push
sub
pop
js
popa
pop
mov
lods
lea
pop
repnz
jns
pop
outs
scas
popa
pop
dec
pushf
add
dec
inc
inc
js
or
test
pop
dec
push
xor
icebp
lock
int
lods
mov
ins
clc
jb
stos
push
cmps
and
retf
stos
mov
jae
push
xchg
je
jl
or
sbb
jbe
jo
xor
add
add
sbb
mov
push
push
or
in
pop
std
sub
repnz
inc
or
xchg
(bad)
out
movs
push
sub
rol
aad
fwait
cli
sub
ret
fist
dec
and
in
and
outs
inc
es
lahf
fs
mov
mov
push
jmp
sahf
fwait
cmp
dec
cmp
ds
iret
dec
cmp
cmp
dec
cmp
test
dec
jge
cmp
cmps
push
mov
push
push
pop
inc
imul
pusha
lahf
pusha
dec
in
sub
xchg
xchg
sahf
xchg
inc
inc
cs
retf
inc
inc
inc
inc
movs
xor
lods
inc
lods
mov
and
retf
scas
scas
lods
pop
aas
fadd
pop
cli
add
mov
dec
sahf
cs
xchg
retf
dec
dec
dec
dec
dec
sbb
sub
mov
mov
out
dec
push
push
iret
movs
repnz
pop
clc
retf
iret
int3
retf
retf
xchg
retf
gs
push
sbb
rcr
xchg
retf
iret
int3
mov
dec
aas
dec
push
daa
in
adc
call
jo
jmp
jmp
out
out
out
js
cmp
bound
mov
and
adc
lock
imul
int
xor
mov
in
sbb
add
enter
jmp
in
jmp
inc
inc
test
test
test
xchg
or
lock
gs
jb
in
repnz
in
cs
retf
dec
pushf
pushf
fwait
call
add
push
add
push
or
pop
mov
add
cmp
clc
cmc
adc
adc
mov
repnz
loop
dec
mov
iret
test
xchg
dec
aas
push
adc
cmp
jl
mov
mov
rcr
mov
mov
xchg
xor
mov
and
movs
jb
and
and
inc
inc
push
xor
shl
(bad)
lock
nop
or
sub
adc
lahf
push
xchg
ror
dec
aam
aam
mov
ret
shr
or
mov
jg
fcom
jle
(bad)
iret
(bad)
rol
sub
(bad)
sbb
ds
push
je
icebp
xchg
repnz
int3
test
daa
shl
jmp
and
repnz
ret
xor
bound
leave
gs
retf
cli
clc
fs
div
or
push
jae
push
add
sbb
sbb
cmp
iret
loope
cmps
add
out
jmp
dec
xchg
xchg
xchg
add
add
add
dec
cmp
add
push
cs
retf
outs
outs
ins
repnz
leave
xchg
sbb
fdiv
mov
fadd
rcr
or
jb
in
or
je
mov
js
ja
loope
push
je
adc
out
xchg
jl
(bad)
adc
sti
sti
not
jmp
je
xchg
dec
push
adc
push
nop
jb
add
mov
mov
sbb
test
test
sub
adc
sbb
adc
mov
int
lahf
add
inc
or
sbb
xchg
lea
inc
and
sbb
and
mov
xchg
nop
jg
jg
mov
shl
retf
movs
repnz
ret
dec
inc
xchg
retf
and
retf
sbb
xchg
mov
mov
in
in
repnz
cmp
in
mov
dec
mov
xchg
retf
gs
dec
dec
dec
push
sbb
mov
mov
jg
pop
add
mov
mov
neg
retf
leave
in
rol
leave
cmps
pop
popa
pusha
nop
outs
nop
retf
pop
pop
enter
sbb
gs
pop
inc
imul
push
int
retf
push
int3
push
retf
lahf
pop
rcr
loopne
out
out
retf
leave
inc
(bad)
fs
jmp
xchg
inc
cs
push
sbb
rcl
rcl
sar
out
in
sbb
leave
enter
jno
push
loop
add
and
inc
mov
imul
mov
or
cs
retf
and
jnp
retf
and
in
sbb
cmp
aam
pop
jo
push
add
mov
and
sub
out
lock
repnz
or
aas
mov
mov
mov
mov
leave
ja
ror
jle
push
push
push
fild
or
int3
fild
repz
mov
dec
mov
add
mov
test
push
add
test
jb
retf
stos
aas
mov
mov
nop
push
sbb
xchg
xchg
adc
cld
mov
mov
sub
xchg
xchg
xchg
mov
add
add
mov
mov
ins
jb
fs
cdq
cwde
xchg
add
add
pop
mov
pop
push
jmp
jge
lea
mov
adc
mov
adc
test
jg
movs
ins
and
and
mov
shr
arpl
sbb
bnd
into
ret
stc
sbb
mov
dec
and
dec
ror
cmp
in
sbb
fbstp
aas
mov
les
cs
pop
inc
enter
mov
mov
lds
pop
pop
mov
xor
xor
mov
push
xor
mov
cmp
push
xchg
sub
fsub
sahf
femms
mov
mov
movs
js
aam
fmul
aam
in
push
(bad)
fstp
jmp
push
or
cmp
mov
aas
daa
inc
mov
loopne
xchg
xchg
retf
loop
loope
xchg
retf
gs
dec
dec
dec
dec
jb
push
mov
fistp
xor
call
enter
adc
or
adc
scas
add
in
jl
xor
adc
xchg
mov
loope
movs
repnz
test
lods
xchg
mov
dec
pop
xchg
dec
jg
fwait
xchg
lds
(bad)
sub
das
aas
pop
dec
or
dec
pop
dec
push
sbb
add
sbb
cmp
arpl
mov
pop
pop
nop
call
in
repz
or
out
repz
adc
or
mov
js
sub
arpl
xchg
jp
js
cmp
mov
push
stc
or
dec
adc
xchg
neg
mov
push
lahf
xchg
push
xchg
push
mov
retf
dec
in
xchg
sbb
and
xchg
out
mov
sbb
(bad)
leave
rcl
rol
rol
sar
test
or
int3
jg
jmp
sub
out
call
sub
out
loop
sub
jl
call
adc
iret
dec
rcl
cmp
(bad)
jmp
fmul
les
call
nop
imul
mov
fs
out
call
scas
sbb
idiv
adc
mov
and
mov
je
jmp
push
popa
dec
pop
cwde
sbb
and
dec
pusha
retf
sub
fs
aad
mov
cmps
sbb
pop
rcl
in
rol
xor
jo
mov
je
sub
popa
mov
jp
jnp
inc
popa
in
(bad)
(bad)
jg
mov
dec
sbb
fild
add
loopne
pop
enter
ret
mov
mov
xlat
mov
rcl
(bad)
mov
or
mov
hlt
push
hlt
push
fimul
mov
enter
fadd
pushf
ret
into
mov
add
push
add
jb
mov
pop
ret
mov
pop
(bad)
movs
call
loop
repnz
lods
movs
or
and
pushf
mov
test
pusha
nop
mov
pusha
mov
dec
mov
enter
add
dec
mov
cmps
inc
mov
inc
mov
push
sbb
mov
or
sbb
call
push
and
push
and
inc
jg
pop
pop
mov
mov
mov
stc
call
mov
push
mov
mov
and
xchg
dec
sub
sub
add
pop
mov
cmp
test
ret
ror
or
sub
test
pop
push
fisttp
repnz
(bad)
push
mov
mov
(bad)
aam
ret
jb
pop
dec
leave
enter
push
mov
(bad)
cs
retf
xor
loope
xor
jbe
mov
cmp
dec
aam
fmul
jns
push
jo
mov
mov
cmp
dec
xor
dec
xchg
in
ret
cmps
add
xor
xchg
in
imul
adc
enter
mov
and
jnp
aaa
ret
add
xlat
(bad)
jmp
retf
popa
(bad)
ja
in
lock
dec
hlt
pop
mov
ror
lock
loope
and
loope
push
and
sbb
mov
lea
bound
jmp
inc
imul
jne
add
sbb
in
dec
clc
dec
cld
push
add
stc
jl
clc
and
adc
popa
dec
aas
push
add
test
push
popa
sbb
inc
or
inc
clc
mov
push
cmp
jl
push
sbb
push
fstp
(bad)
je
je
sti
push
fmul
jmp
mov
scas
retf
and
shl
inc
mov
sub
mov
test
ss
dec
push
not
and
pop
add
add
addr16
cwde
repz
sub
and
jnp
or
push
add
imul
sbb
(bad)
adc
rol
and
mov
sbb
push
and
xor
(bad)
fild
push
outs
inc
jae
test
shl
dec
dec
pop
dec
jbe
push
outs
add
adc
adc
push
in
jne
retf
iret
xor
pop
leave
lahf
ret
gs
jb
jmp
dec
je
outs
popa
pop
fs
and
sti
xchg
dec
movs
ins
dec
ins
add
std
movs
rcl
gs
add
mov
sbb
and
jecxz
push
or
or
rcl
xchg
pop
xor
or
push
(bad)
push
mov
bound
or
gs
mov
imul
outs
jo
jno
jae
enter
stc
out
ja
int3
jns
inc
inc
rol
inc
inc
aam
dec
dec
mov
fmul
dec
dec
fmul
push
push
loopne
push
push
push
jmp
fwait
outs
in
pop
pop
pop
call
in
jge
pop
pop
js
add
mov
nop
loopne
add
loopne
adc
adc
mov
ret
sbb
jb
sar
adc
and
xor
and
loope
xor
inc
cmps
push
jne
jb
push
sub
sub
icebp
leave
les
pop
adc
or
mov
inc
mov
push
jb
mov
(bad)
xchg
mov
aas
xor
mov
mov
sbb
rol
mov
push
ds
mov
cmp
data16
es
nop
inc
cmps
femms
and
and
mov
sub
or
sbb
mov
pop
in
cli
in
and
jb
add
xor
shr
ret
add
mov
adc
adc
inc
daa
xchg
adc
push
mov
mov
(bad)
jl
add
xchg
mov
mov
mov
mov
enter
sbb
adc
ret
push
push
and
adc
and
add
bound
xor
sbb
arpl
add
mov
xor
push
adc
test
out
adc
popf
add
cdq
jo
movs
mov
push
adc
jns
sahf
retf
dec
dec
jo
jo
pop
push
sbb
jo
fucomip
xor
xchg
shr
rcl
mov
(bad)
jmp
inc
push
and
and
sub
and
sbb
nop
retf
mov
mov
movs
sbb
and
int
lea
pop
rcr
call
push
mov
and
inc
mov
call
cmp
add
mov
cmp
popf
jecxz
or
xor
in
inc
or
mov
fld
push
js
retf
(bad)
neg
push
inc
mov
jl
out
or
sub
inc
ror
dec
ret
add
and
or
push
sub
nop
and
or
jne
fild
cmp
mov
adc
scas
pop
movs
les
cdq
call
or
sub
repnz
cwde
cdq
call
cwde
test
sub
mov
sbb
inc
push
cmp
and
and
xchg
retf
enter
xor
xor
dec
in
and
push
pushf
sbb
add
add
or
push
xor
push
push
imul
xchg
lahf
mov
and
stos
push
and
pop
ror
(bad)
cmp
xchg
fisubr
retf
jb
add
push
xchg
xchg
dec
movs
push
push
push
push
push
xchg
retf
push
push
push
push
(bad)
enter
cmp
fnstcw
push
test
push
push
push
lea
push
push
xor
gs
jo
sbb
sbb
test
test
jg
inc
push
cmp
or
mov
nop
dec
and
and
push
mov
pop
pop
ret
call
or
or
ret
sub
add
popf
je
mov
add
shl
push
imul
sub
stc
jge
lea
push
push
call
push
fdivr
shr
jmp
jl
xor
retf
sub
dec
push
add
add
dec
arpl
cmp
jge
out
jl
test
movs
sub
loopne
test
jmp
sub
push
popa
push
outs
xchg
fild
push
sbb
jb
add
jp
or
mov
test
(bad)
mov
adc
and
mov
bnd
in
mov
push
xor
push
xor
fdivr
push
mov
add
scas
mov
and
mov
mov
push
or
add
bound
sbb
movs
lock
test
or
add
sbb
mov
mov
sbb
cmp
sbb
xchg
aad
xchg
cmp
xchg
movs
jecxz
rcl
and
fidiv
aaa
cli
push
lds
adc
(bad)
mov
mov
jecxz
xchg
and
mov
cmps
pushf
inc
in
dec
lock
popf
dec
xchg
inc
popf
cld
lods
push
or
ins
dec
retf
add
dec
xchg
cmp
add
sbb
add
mov
push
mov
push
push
mov
mov
repz
call
or
adc
pop
xchg
xchg
inc
cs
enter
fs
leave
add
add
add
cld
gs
dec
sahf
(bad)
cld
push
enter
aad
inc
mov
sub
xchg
sub
push
hlt
in
push
je
int
xchg
jae
jb
xor
je
loopne
leave
sbb
or
out
js
in
adc
and
push
in
or
cmp
push
cdq
add
in
jb
dec
mov
cmp
sbb
clc
stc
or
xor
inc
dec
or
and
fsub
xchg
or
xchg
jae
cwde
push
xor
xchg
xchg
add
add
add
stc
push
add
xchg
inc
cmps
add
aam
jb
in
movs
movs
adc
xchg
pushf
mov
adc
in
enter
pop
adc
xchg
or
add
enter
out
mov
mov
sbb
adc
jl
cmps
fs
adc
mov
les
mov
and
sub
or
fs
push
adc
cdq
mov
sbb
in
leave
enter
dec
cmp
cmps
fs
push
push
mov
aam
daa
and
inc
in
jmp
sbb
lods
lea
adc
leave
stos
rol
xchg
cvtps2pd
sub
shl
cld
pop
sar
sbb
enter
lods
inc
sbb
fs
xchg
xchg
dec
dec
dec
sbb
inc
push
sbb
lahf
retf
leave
(bad)
fsub
pop
add
sbb
movs
movs
in
xchg
mov
in
in
pop
pop
and
test
ds
test
xchg
call
add
mov
or
pushf
pushf
jb
loopne
clc
xchg
sar
clc
xchg
pushf
mov
fs
cmp
enter
lock
ds
dec
push
hlt
mul
cmps
fs
pop
push
sahf
fs
sub
enter
push
add
dec
jb
jo
and
sub
cmps
fs
and
inc
xor
or
jae
xchg
adc
jl
push
imul
or
pushf
lods
in
and
push
adc
and
dec
pop
call
cmps
push
inc
ficomp
mov
or
scas
cld
(bad)
dec
sbb
mov
mov
mov
mov
cmp
enter
pop
sahf
xchg
inc
inc
aas
ds
dec
in
cmp
cmp
repnz
stos
stos
mov
push
mov
dec
pop
mov
mov
dec
xchg
dec
dec
or
mov
mov
xchg
and
and
pop
mov
or
test
mov
push
xchg
xchg
pop
enter
pop
push
push
push
push
xchg
xor
push
rol
movs
jb
ret
add
gs
add
xchg
xchg
retf
gs
arpl
sbb
int
retf
ror
iret
int3
mov
dec
cli
push
xchg
xchg
je
push
pop
cs
pop
out
jo
jno
outs
nop
pop
sbb
ins
add
leave
fldcw
sub
push
push
daa
lahf
sbb
push
lock
js
enter
mov
jl
gs
retf
in
jnp
in
in
enter
out
jb
push
jmp
inc
dec
es
retf
in
pop
mov
retf
and
test
xchg
cmc
dec
dec
in
repz
lock
retf
pop
loopne
retf
or
xchg
nop
retf
and
stc
or
gs
xchg
(bad)
push
add
movs
mov
call
cld
fdiv
pop
mov
jnp
pushf
xchg
(bad)
aad
xchg
or
xchg
pop
mov
daa
lidtd
pop
enter
sahf
push
or
push
or
ja
in
in
rcl
mov
test
mov
mov
lods
lods
stos
push
mov
test
pop
stos
push
sbb
leave
test
adc
lock
js
enter
mov
pop
pop
mov
or
sbb
mov
mov
cs
and
and
leave
inc
loope
pop
rol
dec
xchg
jg
pop
inc
cs
retf
(bad)
rcl
sub
sbb
xor
xor
add
nop
sub
dec
in
mov
cld
leave
enter
pop
push
add
pop
cs
(bad)
stc
cld
push
std
imul
push
cmp
or
pop
push
push
push
pop
push
cmp
enter
push
push
push
push
xor
sub
les
mov
in
add
push
test
popa
push
jmp
cmp
add
cmp
add
sbb
std
sbb
xchg
mov
mov
adc
add
in
push
push
xchg
adc
pusha
xor
lods
nop
lock
push
int3
call
lds
or
xor
jg
cmp
dec
sbb
pop
adc
push
cdq
inc
cmp
or
ss
call
in
mov
std
add
add
sti
add
fisttp
jno
loopne
inc
fmul
add
leave
xchg
out
or
test
sbb
call
push
push
test
test
push
(bad)
jmp
add
inc
xchg
pop
mov
inc
and
lock
sbb
xor
push
push
pop
or
add
rol
out
adc
adc
fbstp
or
jmp
movs
inc
mov
add
lahf
aam
push
push
pop
or
xor
and
add
ret
sbb
push
enter
arpl
(bad)
mov
inc
adc
mov
cmp
pop
icebp
mov
cld
push
add
imul
mov
nop
or
test
and
or
rcr
sub
pusha
or
rol
popa
jl
and
mov
pop
das
adc
iret
int3
add
rol
jl
mov
adc
mov
mov
add
sbb
pop
sbb
pop
add
add
push
repnz
add
ja
call
mov
or
(bad)
and
call
add
cld
dec
ins
into
jno
es
cmp
jg
adc
add
arpl
mov
int
push
hlt
cmp
push
adc
(bad)
fcomp
sub
fadd
popa
shl
movs
adc
pop
push
add
adc
loopne
sub
dec
add
bswap
mov
add
add
ja
repnz
add
(bad)
ror
sbb
push
or
cmp
mov
add
cs
add
jg
xchg
jle
add
ja
(bad)
and
add
shrd
sub
dec
push
(bad)
dec
and
push
inc
fsub
adc
and
movs
call
call
xor
add
push
jmp
pop
ins
sbb
add
mov
test
cmp
add
dec
mov
popf
mov
cmps
loopne
or
mov
jae
loopne
imul
jae
jl
sbb
int3
pop
push
push
cdq
nop
retf
or
xor
xor
sbb
sbb
dec
xor
add
inc
call
mov
sbb
rcl
sub
adc
jbe
jg
sbb
push
xor
sbb
cmp
sub
xor
and
repz
pop
adc
aam
stos
(bad)
cmp
lahf
lea
in
outs
mov
ret
adc
rol
repnz
mov
int3
retf
sub
leave
enter
aad
sar
retf
pop
(bad)
xor
rcl
fistp
(bad)
out
cmp
jecxz
loope
in
jg
loopne
out
in
inc
in
jmp
jmp
cmc
(bad)
repnz
mov
icebp
push
lock
(bad)
std
push
xchg
xchg
xchg
xchg
xchg
icebp
retf
pop
pop
xchg
xchg
xchg
nop
pop
lahf
sahf
xchg
add
and
mov
jl
push
mov
mov
dec
ror
rol
adc
jmp
sar
dec
cs
inc
cmp
jb
cmp
gs
test
pusha
test
add
repnz
popf
stc
dec
or
jge
push
mov
movsx
push
sbb
pop
inc
and
ds
or
push
pop
outs
inc
add
jge
inc
es
dec
push
loop
pop
inc
inc
add
adc
jae
pop
adc
add
mov
cmp
jae
push
lahf
in
cmps
add
cmp
clc
cmp
cli
add
lea
mov
sbb
or
je
pop
cmp
jae
inc
sbb
or
push
sbb
mov
inc
ss
lock
ins
pop
ret
jb
sub
adc
sub
dec
mov
sub
inc
add
cmp
loopne
aam
gs
hlt
mov
ret
loope
xchg
or
and
cdq
shr
xor
nop
and
popa
add
ds
stc
ror
lock
jl
xor
adc
push
cdq
call
and
and
or
inc
movzx
mov
cmp
dec
pusha
nop
lock
and
in
mov
movzx
add
sbb
inc
in
aas
sub
shr
pop
dec
clc
mov
or
xchg
dec
adc
add
pop
xor
push
add
push
xchg
mov
ds
adc
mov
adc
mov
pop
or
dec
push
pop
mov
(bad)
cld
mov
sub
or
jge
push
cs
lea
repnz
add
add
repnz
adc
push
adc
idiv
ja
cmp
rcl
sub
pusha
adc
push
jmp
mov
cmps
inc
sahf
fcomi
push
xor
inc
sahf
inc
sahf
arpl
add
gs
popw
inc
sahf
inc
sahf
or
and
add
imul
movs
cmps
cmps
add
and
test
stos
sbb
cmps
in
test
movs
mov
fs
push
mov
mov
push
fs
mov
mov
push
fs
jmp
ret
fist
mov
sbb
nop
add
or
in
in
or
out
or
or
jmp
inc
sub
add
and
icebp
repnz
xor
hlt
cmc
retf
xor
idiv
in
pop
nop
lock
or
or
push
push
push
rsqrtps
jge
dec
pop
push
adc
push
adc
mov
push
fs
push
push
pop
and
fs
and
add
mov
and
repnz
fild
fs
pop
sub
sub
inc
push
fs
sub
inc
push
fs
add
cmp
sbb
inc
add
nop
add
das
cmp
xchg
inc
cmp
mov
in
push
mov
shl
xchg
rcl
push
push
ret
nop
add
sbb
enter
add
lahf
push
retf
mov
lahf
push
cmp
and
push
ds
aas
jnp
xchg
mov
push
inc
mov
cwde
mov
add
inc
inc
dec
dec
in
add
inc
or
sbb
or
dec
push
repz
pop
ret
push
pop
push
push
repz
ss
retf
push
pop
or
call
enter
pop
pop
pop
or
or
and
shl
pop
xchg
(bad)
or
xchg
xchg
jb
or
call
popf
push
fs
push
sahf
lahf
mov
mov
mov
and
jb
test
add
retf
test
mov
add
ret
sbb
pop
dec
in
rcr
xor
add
(bad)
fild
xor
add
fstp
and
xor
fnstsw
jo
jmp
push
or
xchg
push
fist
push
or
pop
jns
dec
push
or
or
les
adc
or
adc
sub
push
adc
in
cmp
fs
push
cmp
cmp
repnz
cmp
add
inc
nop
add
nop
inc
inc
inc
sbb
inc
jb
xchg
add
push
imul
ins
ins
inc
sub
xor
push
mov
push
mov
mov
imul
inc
fs
push
xchg
xchg
xchg
inc
push
fs
cwde
cdq
xchg
inc
push
fs
and
aas
push
push
jns
dec
pop
push
push
push
push
push
push
mov
push
push
push
push
push
cmp
push
pop
mov
rol
pop
jg
pop
and
pop
push
pop
push
pusha
les
in
popa
retf
ret
mov
fs
or
imul
fadd
push
sub
sbb
jae
sbb
mov
nop
jbe
jmp
ret
lahf
xchg
xchg
mov
cmp
enter
push
cmp
push
cmp
push
ds
or
inc
inc
jb
or
dec
fs
movs
inc
push
push
push
fs
push
push
push
push
push
cmp
push
push
add
and
pop
pop
pop
and
xor
pop
pusha
dec
stos
sbb
popa
bound
test
push
push
nop
mov
cmp
jne
dec
retf
pop
pusha
(bad)
lock
sub
ret
ret
add
call
jne
js
out
jmp
add
or
jnp
pop
and
pop
mov
adc
daa
shr
cs
inc
or
pop
mov
sbb
push
adc
dec
repnz
int
(bad)
inc
shl
sbb
test
xchg
sub
jl
or
cwde
push
or
add
std
sti
adc
test
and
jmp
cdq
popa
adc
lock
inc
add
aaa
fcom
bound
pop
add
mov
pop
xor
and
add
mov
loope
sar
cwde
call
adc
add
or
jbe
mov
push
sub
push
mov
sbb
cmc
and
push
hlt
cmp
movs
outs
push
dec
sbb
add
jge
pop
and
fst
sbb
jne
mov
xor
push
movnti
pusha
fbld
add
mov
jmp
mov
add
pop
or
or
shl
and
ds
adc
xchg
add
cmps
mov
(bad)
movs
sahf
sub
xchg
mov
jno
jecxz
cmp
rcr
lahf
hlt
push
aaa
movs
xchg
arpl
aad
cwde
add
or
or
or
and
ror
jno
adc
fcom
or
cmc
add
xor
pop
pushf
inc
jae
gs
pop
mov
daa
sbb
sbb
pop
or
cld
ja
mul
out
sti
ficomp
div
(bad)
inc
and
jg
retf
inc
enter
imul
call
adc
movs
push
cmps
mov
and
mov
pop
dec
sub
sar
call
mov
and
dec
fistp
jae
rcl
fimul
aaa
add
scas
push
add
xor
dec
push
adc
push
adc
mov
mov
dec
push
test
in
clc
pop
cmp
jne
push
adc
dec
add
push
inc
push
sub
(bad)
sbb
or
or
sbb
sti
xchg
int
mov
fcom
sub
pop
xor
xor
pop
dec
dec
clc
cmps
mov
cmp
daa
jl
add
xor
sbb
mov
rcl
fld
or
(bad)
lea
mov
and
push
lea
push
push
push
ins
add
cmp
cs
cmp
dec
fisubr
imul
pop
pop
mov
test
pop
cmp
or
push
or
or
dec
xchg
mov
ror
in
jle
retf
popa
iret
xor
cdq
jmp
jns
or
xchg
inc
inc
test
call
dec
add
lahf
mov
sahf
push
lods
mov
add
pop
in
pop
dec
leave
(bad)
pop
inc
adc
inc
or
or
dec
ror
mov
dec
or
or
je
ins
jne
hlt
test
gs
dec
fcmovne
pusha
xor
xchg
mov
pop
inc
jle
in
in
push
pop
repnz
imul
leave
xchg
push
in
push
lahf
xlat
push
or
xor
loope
adc
js
add
push
xor
or
mov
pusha
sub
(bad)
sti
add
or
fbstp
adc
aam
jo
sub
pusha
push
inc
stos
pushf
shr
iret
adc
inc
clc
mov
pop
addr16
pop
rcr
adc
add
lahf
xchg
mov
ins
scas
inc
or
ret
mov
pop
push
sub
imul
pop
xor
stos
sub
pop
test
aad
dec
xchg
(bad)
in
adc
test
loope
and
push
daa
jnp
pop
adc
ins
sbb
fmul
xor
or
aas
mov
js
lods
ins
sbb
or
fs
das
jmp
(bad)
(bad)
xchg
lock
push
enter
fist
int3
retf
sub
out
(bad)
adc
stos
mov
mov
fsubr
cmps
or
jne
xor
outs
add
jmp
mov
mov
or
sbb
mov
jmp
call
dec
(bad)
push
and
sub
pop
rol
inc
inc
dec
adc
add
jmp
in
jmp
xchg
popf
sub
dec
lds
mov
popf
lock
hlt
xchg
iret
jmp
pop
cmp
sub
xor
inc
xchg
dec
ret
adc
or
xor
adc
add
mov
mov
js
xchg
in
xor
test
imul
mov
jg
add
add
and
jno
and
xchg
add
add
(bad)
push
adc
xchg
mov
jmp
fnstenv
mov
les
jmp
pop
pop
mov
add
jo
aad
call
ja
mov
call
(bad)
ret
stc
fadd
cmp
test
stc
mov
sbb
push
rcl
push
ror
push
jo
dec
mov
aad
sbb
ins
sub
mov
add
sub
adc
ja
jbe
pushf
push
dec
cwde
sti
jmp
gs
pop
xor
(bad)
jmp
(bad)
leave
or
push
dec
pop
push
inc
cmp
push
and
mov
jns
mov
or
xchg
retf
mov
es
test
mov
test
mov
mov
xchg
out
and
add
or
outs
jmp
out
test
retf
or
jmp
xchg
adc
mov
leave
pop
pop
mov
es
sub
fwait
cmp
call
xchg
imul
push
pop
jmp
push
sbb
cmp
push
jae
mov
sub
daa
test
rcl
inc
jo
daa
or
adc
xor
jnp
dec
sub
pop
push
mov
shl
mov
popf
shl
mov
pop
adc
and
std
and
mov
int3
movs
(bad)
shl
cmp
add
jle
add
lea
test
(bad)
xchg
inc
(bad)
push
dec
mov
mov
fs
and
mov
pop
ss
test
add
test
adc
or
in
sbb
cmp
outs
push
xchg
icebp
popf
adc
int3
into
pop
xchg
mov
jp
jecxz
adc
inc
sbb
push
jae
xor
pop
sub
test
sub
fmul
xchg
push
sbb
inc
sbb
jns
cmps
sub
xor
sbb
dec
pushf
cmp
mov
clc
sbb
dec
fiadd
or
mov
jb
pop
push
xor
das
ret
pop
fldl2t
pop
mov
xor
lahf
pop
out
cmp
mov
repz
cmp
sub
dec
lods
cmp
or
sbb
cmp
call
pop
dec
xor
mov
adc
leave
and
and
cmp
and
dec
sub
inc
push
cmp
mov
ficomp
or
sbb
xor
in
jae
loope
adc
or
push
lahf
loopne
fcomp
mov
arpl
sub
cmp
shr
ja
jno
or
enter
pushf
inc
adc
sahf
daa
out
and
jle
scas
cmps
sbb
add
lahf
imul
cld
inc
ja
pop
call
pop
int3
mov
scas
inc
or
mov
inc
jmp
stos
adc
push
add
sbb
pop
inc
adc
cli
repnz
div
dec
xchg
imul
test
pop
fwait
or
or
and
ret
push
sub
fnstenv
(bad)
jne
test
ds
sbb
outs
test
sar
and
dec
lds
icebp
stos
mov
push
jns
(bad)
aaa
adc
movs
popf
xor
sbb
hlt
data16
gs
sub
push
retf
leave
adc
dec
cmp
sub
or
imul
int
pushf
dec
cs
inc
jb
jne
das
shr
pushf
xor
xor
lock
leave
sub
cmps
xor
dec
sbb
xor
push
sbb
push
cmps
push
push
stos
sbb
push
test
sub
ror
dec
adc
dec
xor
or
dec
xor
sbb
and
icebp
lods
cmp
push
sbb
jae
xor
inc
push
fs
ss
ds
jmp
cmp
xor
shl
or
dec
xor
inc
cmp
jne
cmp
cmp
cmp
dec
jae
cmp
rcr
push
aas
int
pushf
xor
inc
inc
or
xor
pusha
adc
dec
sahf
pop
pop
inc
ror
add
nop
(bad)
out
inc
xor
loopne
inc
call
sbb
adc
pusha
lods
in
rcl
cwde
mov
fstp
bound
jge
pop
jg
or
jmp
fucomi
les
inc
mov
add
mov
aam
dec
pop
fmul
push
(bad)
and
add
xor
call
fld
mov
cmp
fsub
sub
loopne
push
or
inc
pop
dec
add
or
or
inc
je
pop
adc
jb
mov
push
jge
pop
jno
(bad)
aad
data16
dec
addr16
bound
dec
ret
add
aam
xor
push
pop
lea
call
and
imul
enter
mov
les
cmp
dec
mov
ins
dec
clc
mov
call
pop
jo
jns
pop
sbb
mov
(bad)
mov
jge
shl
cmps
retf
inc
fcomp
das
adc
adc
inc
mul
jbe
or
add
data16
add
xchg
push
add
add
sbb
ror
dec
adc
lea
fidivr
call
call
clc
retf
pop
fsub
out
hlt
loopne
loop
out
jno
leave
cmp
push
in
stos
jle
icebp
stos
test
pop
adc
mov
and
xor
fcomp
out
dec
fdiv
in
into
stos
push
test
push
push
push
xchg
inc
mov
sbb
xchg
mov
xor
xor
icebp
sub
sahf
pop
pop
pop
pop
xchg
aas
cmp
je
mov
mov
lock
xchg
cmp
jmp
cmc
hlt
sbb
push
icebp
xor
inc
push
repnz
and
push
push
stc
das
jg
jo
mov
mov
clc
test
(bad)
(bad)
mov
pop
cs
pop
cld
test
cld
sti
sbb
pop
stc
pop
dec
gs
cs
pop
pop
stc
jno
xchg
pop
pop
pop
aas
ins
out
mov
pop
adc
(bad)
fcom
retf
pop
(bad)
sti
add
mov
in
ret
into
add
adc
retf
iret
mov
adc
les
pop
jle
fisttp
mov
arpl
aaa
push
ret
test
sub
loope
ficomp
xchg
les
in
pop
pop
ret
push
arpl
mov
js
xor
xor
pop
xchg
sbb
sbb
push
xchg
or
mov
lea
mov
inc
pop
xor
or
retf
xchg
xor
xchg
(bad)
xchg
xchg
dec
add
fcomip
mov
adc
cmp
and
and
push
repnz
jae
push
pop
int
ret
sbb
jb
pusha
pop
xor
cmp
cwde
fistp
cmp
push
popf
ins
ss
mov
pop
sahf
cmp
mov
(bad)
lds
je
into
enter
test
cmp
sub
jle
rcl
imul
ja
cmp
movs
repz
les
mov
(bad)
stc
out
cwde
out
(bad)
pop
and
pop
lahf
inc
sbb
jge
lds
lea
mov
(bad)
cmp
lahf
mov
inc
xchg
retf
inc
xor
sub
nop
mov
add
sar
add
pop
pop
retf
aas
daa
inc
dec
dec
enter
into
retf
gs
stc
movs
enter
test
test
repnz
xchg
cmps
movs
fld
movs
mov
or
pop
dec
repz
fisttp
rcl
xchg
dec
lods
jp
mov
enter
iret
adc
inc
iret
ds
ror
(bad)
retf
add
retf
pop
enter
fxch
(bad)
xchg
out
mov
mov
pop
jmp
pop
inc
inc
inc
mov
(bad)
ror
into
movs
pop
aaa
test
in
mov
in
(bad)
stc
iret
xchg
adc
mov
fcmovnb
sahf
scas
sub
loopne
(bad)
psrad
jae
loop
adc
xchg
cmp
cwde
mov
in
cwde
cdq
xchg
retf
in
out
in
retf
sbb
inc
inc
dec
push
nop
inc
cmp
jb
sbb
call
xor
in
call
push
xchg
dec
dec
enter
dec
xor
xor
pop
jb
lock
clc
out
lds
push
mov
jae
int3
test
add
pop
cmp
inc
pop
or
pop
adc
aad
push
push
gs
adc
xchg
lods
adc
fistp
push
and
dec
adc
es
push
fbstp
fnstcw
lea
repnz
sbb
cld
repnz
into
enter
frstor
iret
int3
bound
mov
sub
rcpps
push
xchg
push
rcl
and
mov
popa
fisub
and
jg
cld
in
sub
xor
(bad)
fldl2e
clc
pop
dec
cmp
je
(bad)
xchg
jmp
and
mov
mov
mov
pop
cmp
xchg
xchg
xchg
and
pop
ds
cmp
xchg
cmp
lahf
popf
dec
push
nop
retf
and
xor
inc
pop
inc
pop
inc
jmp
in
inc
inc
fbld
jecxz
fbld
test
push
jb
xchg
sbb
dec
pop
dec
pop
push
sbb
enter
pop
pop
jb
and
in
dec
ins
pop
dec
test
fs
es
sbb
js
xchg
or
jo
sar
in
jb
adc
adc
push
test
nop
inc
cs
adc
out
nop
jg
jne
pop
pop
xchg
xlat
dec
xchg
sbb
enter
mov
mov
pop
movs
std
fcmovne
fbstp
mov
fdiv
das
fwait
pop
mov
lds
rol
repnz
retf
mov
into
iret
test
stos
das
push
sub
aas
aas
xchg
mov
iret
and
xor
ret
daa
das
daa
(bad)
fisttp
or
pop
repnz
xchg
int3
pop
rcr
pop
fcomp
pusha
jns
fdiv
ftst
ret
and
call
in
inc
push
pop
lock
enter
hlt
test
sub
popf
sahf
mov
xchg
mov
mov
jmp
push
cwde
cs
div
hlt
xchg
outs
gs
push
pop
push
pop
push
mov
mov
lea
adc
and
cmp
clc
cld
pop
add
and
pop
or
xor
inc
and
jns
pop
and
mov
cmp
cmp
fistp
jmp
inc
push
sbb
xor
mov
fcmovnbe
cmp
int
into
adc
sub
(bad)
sbb
mov
pop
xor
pop
xor
pop
fiadd
jns
aas
jo
jo
cld
sub
inc
aas
mov
add
scas
adc
into
mov
movs
sbb
and
jmp
dec
movs
ret
push
inc
xor
cmp
sub
sub
add
clc
cli
cmc
mov
(bad)
cmp
sbb
outs
inc
adc
scas
mov
jno
inc
dec
cmp
mov
xor
(bad)
pop
(bad)
jl
jnp
sti
cmps
sbb
mov
inc
loope
xor
iret
rcr
cmp
ret
shl
mov
push
ss
inc
loop
sti
inc
sar
dec
outs
inc
out
repnz
add
sti
and
add
repnz
dec
dec
mov
jle
test
fld
xlat
mov
ret
push
push
sbb
fadd
fs
imul
adc
xor
sub
call
int
mov
add
enter
jae
jl
inc
or
leave
adc
repnz
push
imul
int
movs
mov
pop
imul
or
xor
int
mov
je
or
mov
or
test
mov
imul
fmul
add
adc
leave
daa
pop
or
pop
jmp
or
add
jb
jge
adc
sbb
cmps
repnz
cmp
je
or
push
(bad)
(bad)
div
mov
pop
cmp
sbb
cmp
add
xchg
and
mov
mov
das
mov
and
inc
inc
inc
imul
or
jb
push
lods
enter
cmps
ret
mov
imul
mov
ror
pop
and
mov
cmp
mov
jbe
add
test
add
hlt
cmp
jo
cmp
rcl
adc
rcr
adc
movs
loope
jl
or
pop
punpcklbw
xchg
push
sbb
cdq
test
add
mov
push
mov
sbb
cmps
arpl
inc
rol
ss
xchg
push
dec
mov
and
test
popa
mov
jno
and
not
adc
mov
xor
call
inc
std
adc
or
inc
cmp
ret
out
cmp
pop
cmp
inc
xor
inc
enter
ror
and
mov
outs
cmp
mov
mov
adc
shl
rcl
push
ja
cmp
das
gs
and
enter
fst
clc
add
loopne
mov
(bad)
and
add
lods
addr16
ret
sbb
pop
sbb
iret
es
in
jnp
jl
ret
push
or
xor
fsubr
pop
jo
jns
test
outs
call
clc
cmp
sbb
inc
inc
loopne
fs
lds
pop
shl
cli
test
xchg
inc
adc
or
inc
xor
ret
pop
fistp
imul
daa
(bad)
pop
jecxz
(bad)
dec
or
add
(bad)
ror
or
mov
pop
inc
je
in
js
sar
cmps
jno
cmp
or
cwde
push
pop
xchg
sbb
inc
inc
scas
or
int
sub
xor
cmp
bound
(bad)
enter
add
jg
xor
call
pop
ffree
pop
add
shl
or
shl
push
or
add
jnp
add
pop
cmp
fldenv
fistp
push
mov
std
loope
pop
sub
stos
push
mov
sub
mov
(bad)
jl
aaa
xor
pop
cmp
jg
sbb
lock
add
lock
jb
cdq
gs
mov
rcl
xchg
lock
adc
xor
xor
sub
or
retf
ins
enter
sub
or
lock
pop
push
add
adc
push
or
push
nop
fist
sbb
or
or
push
retf
push
mov
dec
jb
mov
stos
mov
pushf
mov
test
push
add
pop
and
pop
lock
adc
and
retf
leave
int3
shl
cdq
pusha
mov
dec
add
fs
(bad)
pushf
(bad)
fisttp
xlat
aam
or
nop
push
or
add
xchg
add
add
fadd
mov
hlt
std
jmp
enter
or
lea
mov
xlat
add
fdivr
push
mov
jp
outs
or
test
shl
add
dec
pop
outs
in
add
xlat
xor
mov
push
mov
or
xbegin
inc
nop
mov
mov
or
nop
inc
mov
or
cmp
push
mov
add
ficomp
les
push
pop
out
or
add
out
mov
and
mov
inc
push
push
inc
or
dec
adc
dec
or
jne
in
xor
add
cmp
xor
push
xor
push
sbb
leave
jmp
mov
pop
sbb
sbb
cmp
adc
lea
cmp
cs
cmp
pop
popa
jne
inc
js
and
addr16
or
add
hlt
je
shr
push
pop
lods
imul
sbb
pusha
inc
outs
hlt
icebp
cli
dec
pop
mov
loopne
repnz
pop
push
cdq
pop
jbe
adc
jne
es
inc
sub
ror
adc
add
cmp
jae
xchg
jg
pop
jg
scas
sub
mov
pop
push
cmp
inc
mov
sbb
dec
les
push
sub
push
inc
dec
push
dec
or
data16
pop
movsx
jmp
lock
aas
adc
std
fwait
fwait
lea
mov
sbb
pop
sub
js
jg
sti
adc
push
jnp
push
lea
ret
in
loop
lea
push
push
cli
lods
xor
push
rcl
inc
outs
enter
mov
or
mov
mov
xchg
dec
jne
sub
mov
jl
je
sbb
push
xchg
adc
cld
xchg
movs
push
adc
ret
inc
rcr
ja
in
jae
rol
push
push
or
push
jl
rcl
add
ret
dec
mov
rol
je
fcom
xor
mov
daa
push
es
sbb
adc
js
enter
add
(bad)
jno
add
cmp
jae
or
in
shl
mov
jbe
and
push
cmps
add
ret
cmp
pop
cmp
adc
xor
adc
sbb
jno
mov
ins
and
sub
je
loop
nop
mov
aas
ins
ins
or
xor
loope
adc
in
test
ins
adc
rcl
or
push
sbb
or
inc
cmp
sub
inc
sub
pop
mov
bound
cmp
sbb
dec
xor
loopne
and
inc
push
ret
in
(bad)
xchg
adc
dec
add
add
xor
inc
repz
xor
jne
push
pop
sub
loope
pop
fnstcw
sbb
inc
(bad)
cmps
cmp
inc
inc
mov
mov
dec
mov
pop
jne
stos
push
imul
add
rcl
push
arpl
popf
dec
inc
xor
mov
pop
mov
cmp
mov
pop
sti
xor
add
jbe
int
add
call
into
jae
push
push
jmp
ret
int3
and
daa
pop
shr
mov
sbb
jge
adc
mov
in
mov
dec
pop
sub
add
sbb
enter
enter
enter
cs
pop
ficomp
pop
add
push
aam
lock
ror
mov
rol
or
xor
test
mov
push
sub
mov
xor
or
test
mov
jne
(bad)
(bad)
pop
sar
inc
cmp
dec
les
imul
jp
sub
and
or
or
pop
ret
xchg
outs
les
inc
aad
sub
pusha
cmp
inc
hlt
pop
sbb
dec
push
mov
xor
pop
push
call
aam
outs
(bad)
dec
adc
pop
push
adc
mov
xchg
or
jne
aam
xchg
push
es
(bad)
adc
or
je
aas
pop
shr
das
xchg
or
jne
imul
aam
push
or
sbb
movs
inc
adc
cli
std
xchg
jbe
pop
add
test
je
push
fstp
dec
sub
js
adc
add
jnp
sub
test
fwait
rcl
mov
ret
sub
pop
mov
ror
sub
push
dec
test
cs
outs
dec
push
jo
cmp
or
xor
jle
clc
je
xchg
sub
pop
or
je
enter
pop
rcl
mov
push
push
cmp
sub
cmp
sbb
mov
and
loop
cs
mov
xchg
mov
add
out
mov
push
hlt
or
jne
mov
and
mov
mov
mov
(bad)
fiadd
test
push
sbb
sbb
adc
jge
add
mov
push
pushf
or
add
pop
dec
add
jae
pop
call
dec
push
inc
push
ror
jnp
and
add
and
shr
mov
or
lock
test
adc
adc
loopne
lock
inc
dec
adc
in
pop
and
add
mov
add
cwde
mov
sbb
dec
dec
push
stos
jbe
fs
pop
mov
imul
sub
dec
cmp
pop
lea
xchg
and
pusha
and
xchg
lahf
lahf
pop
pop
add
sbb
aad
adc
jae
cmps
push
or
or
test
push
jl
and
(bad)
enter
(bad)
inc
or
sub
or
pop
fdiv
sub
xchg
lock
aad
(bad)
jl
cmp
add
call
mov
cmp
jo
push
and
add
outs
aam
data16
or
cs
test
stos
inc
inc
fsub
adc
jg
cmp
cdq
test
int3
aas
ror
and
mov
movs
pop
push
mov
stos
xchg
cmp
fisttp
pop
mov
and
aaa
jp
lods
scas
in
or
sti
and
mov
dec
jl
dec
sbb
inc
lods
jmp
add
push
push
call
pop
je
cmp
pop
loope
mov
iret
and
inc
sub
inc
xchg
jle
pop
in
adc
push
dec
xor
sub
bound
loop
push
sbb
mov
xor
add
cmp
mov
xchg
inc
dec
mov
and
cld
sbb
xchg
jbe
adc
lock
retf
stc
lea
scas
and
stos
fdiv
lea
sub
lea
mov
or
sbb
mov
jmp
xor
es
mov
inc
and
dec
je
les
ins
ins
cdq
xor
push
pusha
and
mov
adc
mov
push
push
inc
bnd
mov
and
or
or
inc
xor
cld
add
pop
dec
xor
adc
mov
mov
pop
(bad)
out
test
add
pop
sbb
jg
pop
inc
jo
sar
add
mov
pop
ret
lods
nop
push
sbb
clc
add
push
(bad)
and
add
inc
pop
scas
jne
pop
or
inc
push
mov
(bad)
in
push
push
add
push
cmp
cmp
ss
popa
aas
add
adc
and
ret
inc
inc
repnz
sbb
xor
inc
icebp
mov
inc
xor
add
ja
dec
push
in
push
mov
ret
mov
and
dec
add
add
push
ret
test
push
fld
xchg
stos
xor
cs
add
mov
cmps
mov
scas
inc
lock
jmp
aas
ret
imul
in
adc
or
lea
xor
(bad)
adc
sub
or
sub
or
aaa
xor
add
repnz
push
adc
cmp
jnp
dec
icebp
int
add
loopne
aas
or
and
sub
imul
sbb
fmul
inc
repnz
fidivr
lock
add
jle
push
adc
loope
push
jns
jg
or
pop
test
cmp
mov
sub
xchg
jnp
mov
inc
in
aaa
jne
mov
popf
sti
mov
mov
je
or
and
sbb
and
push
mov
sbb
js
ins
out
or
push
xor
add
jmp
(bad)
add
push
lock
sbb
es
sub
push
in
dec
out
sbb
fsubr
cmp
pop
aam
lods
sbb
jne
aaa
retf
aad
lock
(bad)
mov
and
add
ficomp
out
pop
or
stos
pop
jns
retf
xor
jns
jns
mov
push
leave
push
retf
push
jns
retf
or
or
je
int
repz
pop
pop
xor
pop
xor
pop
repnz
xchg
pop
xor
xor
leave
dec
pop
aaa
pop
cmp
sbb
mov
or
ds
and
adc
cmp
fild
xchg
xchg
push
mov
push
nop
push
mov
or
xchg
xchg
or
or
xchg
movs
jb
adc
add
fst
fnstsw
sbb
jecxz
adc
call
jmp
xor
in
in
retf
xor
out
lock
and
call
pop
sub
movs
fs
ss
mov
pop
and
sbb
sbb
mov
pop
cmp
bound
or
int
push
das
js
cmp
js
int3
inc
jmp
test
sub
ret
mov
retf
dec
div
push
int3
push
or
adc
fadd
lods
or
cmp
les
add
add
mov
sub
or
add
inc
sar
imul
aam
push
mov
mov
retf
clc
into
mov
(bad)
push
push
lods
adc
pop
xor
loopne
fmul
push
adc
in
pusha
into
sbb
sub
cmp
cdq
adc
add
nop
jp
lods
push
icebp
(bad)
je
adc
mov
sbb
js
ja
lods
pusha
scas
cmp
cmp
jl
or
imul
test
mov
outs
adc
fsubr
jo
add
lods
xchg
sbb
loopne
pop
mov
xchg
jbe
xor
(bad)
sub
or
add
mov
int3
push
or
enter
cmps
or
dec
xchg
seto
sar
out
add
dec
int3
mov
test
push
cmp
rol
mov
dec
mov
push
push
add
jo
pop
inc
mov
xor
loopne
std
dec
dec
mov
xor
shl
or
add
jbe
add
xchg
cmps
and
sbb
adc
outs
mov
es
xchg
aad
inc
call
cmp
jb
stc
sbb
ds
jmp
and
std
or
stos
stc
lock
inc
mov
xor
jecxz
es
sub
cwde
rcr
inc
nop
cmp
or
ss
sub
dec
pop
sbb
lods
inc
cwde
jp
iret
cmp
dec
push
stc
je
iret
test
jae
enter
(bad)
mov
push
add
xchg
sub
pop
(bad)
inc
dec
(bad)
pop
mov
add
jl
stc
xchg
xor
and
sub
adc
cmc
adc
add
push
add
xor
cmp
inc
add
dec
mov
hlt
dec
(bad)
shl
push
xchg
lea
or
test
pusha
adc
aaa
mov
add
push
cmp
xor
sbb
sbb
sar
(bad)
xchg
mov
call
addr16
inc
xchg
mov
inc
adc
cmp
ret
pushf
cmc
loope
nop
or
cdq
jp
(bad)
sub
mov
cli
mov
push
xor
add
add
xchg
ret
inc
dec
xchg
mov
out
jmp
mov
movs
stc
in
jecxz
repnz
and
repnz
hlt
call
lods
fucom
repz
pop
pushf
xor
pop
mov
ret
sub
push
lods
int3
pop
iret
cmps
sub
xor
add
nop
dec
add
sar
pop
xor
in
push
or
add
and
xor
inc
inc
pop
clc
pusha
sub
inc
loopne
sbb
mov
push
dec
xor
or
rcl
pop
lahf
or
cdq
leave
inc
and
add
add
and
jae
adc
xchg
adc
aaa
es
or
or
iret
outs
xor
add
sub
adc
or
push
pop
add
test
push
mov
(bad)
pop
mov
xchg
xchg
pop
fstp
xchg
sub
push
mov
test
pop
ins
push
adc
fwait
jbe
or
enter
cdq
imul
adc
push
mov
or
push
dec
mov
push
pusha
xchg
dec
add
addr16
mov
and
add
clc
adc
adc
mov
jg
cwde
or
xor
bound
dec
xchg
add
loop
ins
rol
or
mov
dec
or
push
addr16
adc
enter
pop
mov
jle
or
ret
mov
stos
lods
or
fisttp
sub
jb
es
push
xchg
scas
jbe
fdivr
adc
div
lods
lods
(bad)
jmp
js
and
sar
sti
mov
jae
mov
loopne
push
push
in
or
mov
pop
inc
fadd
sub
adc
ins
rol
ret
pop
mov
pusha
mov
and
push
sub
retf
jp
neg
out
pop
repnz
test
mov
outs
movs
mov
lock
add
in
popf
std
sub
in
push
adc
and
or
sbb
push
test
je
mov
and
jbe
xchg
lea
jae
add
and
push
nop
cmp
sar
mov
sbb
call
test
mov
sbb
ss
push
neg
and
mov
adc
mov
and
dec
mov
jecxz
sub
mov
mov
mov
jno
and
in
fidivr
cmc
xchg
cs
and
adc
add
es
mov
inc
aam
xchg
jge
test
mov
adc
pushf
push
cmp
dec
or
arpl
loop
lea
sar
aas
xchg
jno
dec
and
and
xor
sbb
mov
in
pop
add
or
loope
repnz
mov
adc
(bad)
mov
(bad)
aad
enter
int3
mov
nop
(bad)
or
enter
les
fcom
xor
icebp
es
mov
inc
adc
fistp
jne
lock
loopne
adc
in
(bad)
fsubp
fmul
stos
fistp
aas
and
pop
pop
or
test
pop
xor
loope
jae
mov
rol
mov
adc
adc
mov
mov
or
test
sub
mov
xor
pop
jne
nop
add
lahf
fcmovbe
and
xor
test
sbb
lods
push
div
pop
cmp
push
jg
dec
pop
rcr
ins
cld
dec
(bad)
(bad)
fbstp
pop
xor
mov
inc
mov
mov
cmp
jl
lods
adc
push
out
add
pusha
adc
dec
push
(bad)
mov
dec
add
xchg
nop
fcomp
outs
jecxz
cmp
aam
xchg
cdq
xor
in
mov
aaa
sbb
cmp
std
jge
test
mov
mov
pop
and
lods
cmp
cmp
and
stos
inc
jmp
sbb
push
add
mov
nop
inc
xchg
nop
and
sbb
imul
or
addr16
sbb
mov
and
xor
dec
aaa
test
ds
popf
pushf
inc
sbb
outs
adc
ss
dec
iret
sbb
call
ins
stos
mov
in
adc
mov
sbb
xor
or
push
add
xor
pop
mov
cwde
pop
push
xchg
cmp
cwde
pop
ret
push
dec
fisub
xchg
add
popf
dec
mov
add
out
les
(bad)
out
sbb
in
mov
push
cs
int
lock
sahf
pop
pop
pop
cmp
mov
adc
push
stc
ins
outs
dec
add
xor
xchg
pop
adc
mov
xchg
lea
inc
and
sbb
popf
je
mov
or
or
cwde
jecxz
xchg
pop
int3
add
pushf
cmp
and
pop
mov
add
jge
aaa
mov
push
add
push
inc
xor
rol
inc
leave
add
jb
mov
hlt
in
cmc
inc
push
cdq
in
jo
imul
xchg
adc
cdq
jo
enter
add
es
or
or
cdq
nop
inc
cwde
or
xlat
inc
or
rcl
sahf
push
in
inc
or
cwde
fwait
push
xchg
in
or
stos
mov
das
mov
push
arpl
add
cmp
retf
push
sar
adc
es
dec
data16
sub
call
inc
or
cmp
mov
add
mov
sub
cmp
dec
les
test
push
mov
fcom
or
test
call
pop
pop
add
movs
xchg
out
push
(bad)
pop
pop
pop
push
imul
nop
inc
mov
in
mov
ret
and
mov
repz
ret
dec
test
push
mov
inc
ret
push
cdq
adc
sub
aam
std
je
mov
push
mov
lea
fisttp
mov
or
repz
sub
enter
jge
sti
fisub
iret
ja
into
xchg
cmp
push
int3
fadd
sti
and
test
aad
aam
add
pop
outs
or
inc
test
push
outs
pop
ror
int
dec
add
pusha
dec
add
inc
push
repnz
push
fdivr
cmp
mov
adc
std
arpl
pop
mov
mov
add
cmp
mov
add
mov
jle
cwde
arpl
fldcw
mov
cmp
inc
fdiv
xor
push
test
pop
je
sub
fdivr
inc
movs
lods
mov
cmp
bound
test
int3
push
mov
inc
inc
pop
fmul
repnz
fdiv
ret
fld
sti
inc
jb
pop
cli
stc
clc
je
mov
jbe
sub
mov
dec
mov
dec
cmp
lahf
cld
std
lods
jl
pop
cld
xor
mov
ret
das
daa
sub
mov
mov
or
cld
mov
mov
mov
pop
add
add
addr16
add
add
pop
add
or
add
push
cmp
pop
pop
ret
or
enter
add
je
or
ror
adc
je
xchg
sbb
or
sbb
push
adc
sub
js
pop
xor
mov
outs
mov
cmps
xor
jne
mov
test
movs
add
(bad)
sar
rcl
mov
or
fwait
mov
les
lea
shld
rcl
nop
out
sbb
xchg
retf
dec
push
sbb
gs
pop
push
pop
xchg
dec
mov
push
mov
or
jne
mov
push
or
or
es
rol
inc
add
sbb
mov
nop
mov
adc
adc
xor
inc
jecxz
adc
and
pop
mov
xor
test
movs
or
sub
cld
test
js
das
das
and
cmps
and
retf
popf
sbb
popa
and
les
or
into
fmul
addr16
shr
cwde
(bad)
fldcw
(bad)
movs
push
adc
dec
push
or
pop
mov
dec
push
jmp
dec
xchg
push
pop
cmps
jo
scas
and
jo
and
sbb
or
jo
and
or
mov
dec
stos
inc
shl
shl
fisttp
xchg
loope
cmps
retf
movs
in
inc
xor
cmp
xchg
adc
fst
pop
pop
sub
push
push
test
xchg
add
xor
ins
and
jae
mov
std
xchg
mov
enter
push
and
jl
(bad)
sbb
xchg
mov
sbb
inc
and
or
xchg
xor
movs
test
mov
add
outs
cwde
lds
daa
sub
add
gs
ficom
ror
mov
pop
retf
sar
mov
push
in
inc
add
ret
js
or
lahf
xchg
test
into
inc
and
push
jno
dec
shld
and
mov
pop
add
jecxz
pop
clc
sbb
or
add
pop
adc
inc
adc
enter
and
jecxz
retf
or
retf
mov
in
mov
pop
push
mov
shl
adc
leave
shl
adc
mov
or
fadd
and
mov
mov
or
std
lea
sbb
test
add
cmp
jno
mov
add
(bad)
xor
push
and
inc
test
movs
mov
xchg
in
add
cmp
push
add
mov
imul
mov
sahf
inc
mov
lds
sub
nop
xor
sub
or
push
inc
pcmpgtb
enter
sar
mov
jnp
and
xchg
nop
not
les
in
jg
or
aad
rcl
rol
fcom
cdq
nop
(bad)
pop
jg
loopne
shr
nop
mov
(bad)
rcl
jle
test
fiadd
adc
(bad)
pop
inc
push
sbb
mov
aam
xor
aad
nop
imul
ffreep
cmp
enter
adc
jne
pop
ds
mov
pop
pushf
call
enter
pop
enter
pop
jns
inc
pop
inc
pop
inc
pop
inc
push
sahf
or
pop
inc
mov
in
mov
enter
les
test
aaa
shr
aas
push
nop
(bad)
rcr
pop
ss
fcomp
call
ffreep
sbb
ret
in
enter
ror
aad
in
jl
sahf
aad
aad
arpl
pusha
fadd
popa
sub
add
ds
pop
jb
repnz
pop
pop
(bad)
mov
mov
sahf
ffree
fldcw
pop
inc
ins
imul
and
call
out
in
cmp
je
mov
jb
xchg
and
lock
in
pop
test
mov
js
retf
pop
inc
mov
jnp
and
jns
pop
cs
cmc
clc
div
hlt
cmp
cmp
add
cld
sub
cld
or
jg
cs
fxch
mov
pop
sahf
pop
mov
mov
retf
pop
add
pop
mov
push
test
fbstp
cli
nop
(bad)
(bad)
aad
mov
icebp
enter
xchg
pop
xchg
xchg
nop
pop
push
jns
or
xchg
or
nop
push
adc
adc
and
push
or
mov
or
pushf
hlt
ffreep
ficomp
stc
in
mov
movs
in
imul
adc
call
fisub
pop
adc
fucomip
add
mov
(bad)
fcom
mov
push
jo
pusha
rcr
fist
or
imul
addr16
in
sbb
sbb
idiv
cmc
std
sbb
movq
loop
pop
mov
cmp
cmp
fistp
pop
cwde
jg
int3
nop
in
lock
out
stc
(bad)
cmc
adc
in
cmc
out
not
hlt
loop
aad
xchg
fbld
(bad)
out
sub
cld
and
jg
(bad)
hlt
out
neg
icebp
stc
cld
in
loop
cmc
sahf
and
dec
sbb
xchg
aas
dec
sub
adc
in
ret
pop
(bad)
lock
ficom
xchg
fdivr
clc
ret
les
addr16
pop
fucomip
xor
enter
lahf
nop
ds
(bad)
cmp
mov
pop
add
mov
jge
jl
add
inc
jg
lock
xchg
add
std
in
call
or
nop
ret
adc
(bad)
aad
mov
sahf
mov
sub
inc
pusha
js
xor
fistp
jg
pushf
sub
or
outs
out
ret
test
mov
push
or
push
push
and
inc
nop
cmp
stos
ins
pop
loopne
nop
es
xchg
dec
sub
push
or
jb
rcl
dec
push
sub
sub
popa
xor
sahf
cmps
(bad)
(bad)
jnp
jge
jne
mov
xchg
dec
mov
dec
rcl
dec
xchg
lock
cmps
adc
icebp
les
add
loop
sbb
dec
mov
push
mov
mov
in
sbb
jp
or
lds
dec
or
ror
push
lods
imul
aam
xchg
(bad)
lock
push
push
cmp
xor
or
xor
das
ins
add
jae
push
gs
or
cmp
cs
push
push
sti
dec
das
loopne
cmps
nop
cli
inc
arpl
popa
fcomp
(bad)
inc
sbb
mov
fadd
call
fcom
push
cmps
cmp
ret
cwde
inc
loopne
mov
xchg
stos
ins
or
add
jecxz
or
mov
mov
lods
push
push
xchg
loope
out
mov
cmp
push
jge
cmp
loop
push
push
dec
mov
sbb
outs
dec
std
add
and
in
lods
push
inc
cmp
(bad)
lds
push
test
lahf
test
imul
shl
xlat
adc
and
scas
sbb
jge
mov
aad
adc
add
mov
mov
push
xor
cmp
das
rol
in
sbb
scas
aad
pop
cwde
push
adc
jmp
repz
dec
push
fldenv
sti
add
pop
push
call
adc
adc
imul
jecxz
mov
mov
loopne
lea
jle
cmps
add
hlt
(bad)
add
popf
fimul
std
jns
and
loope
and
(bad)
in
and
cld
pop
xlat
push
xor
ins
jne
and
enter
sbb
cwde
fwait
dec
test
jmp
mov
pop
and
pop
and
pop
pushf
pop
popf
and
pop
adc
push
pop
add
pop
add
ins
mov
add
pop
and
mov
push
pop
adc
(bad)
lea
int3
mov
and
jmp
push
sar
lods
push
xor
mov
mov
cld
fdivr
and
xchg
jl
cld
jo
add
mov
call
and
lock
pop
icebp
xchg
fwait
mov
js
in
push
es
movs
movs
adc
cmp
dec
add
mov
xor
xchg
pop
movs
mov
mov
sbb
or
cld
in
or
aaa
or
iret
xchg
adc
push
dec
pop
xchg
xor
push
dec
pop
dec
add
pop
cli
in
cwde
sbb
aad
dec
fist
mov
dec
xor
sbb
cdq
mov
mov
inc
inc
add
mov
lock
xor
daa
scas
stos
add
loopne
lock
cld
in
or
push
pop
dec
add
test
addr16
mov
sub
dec
jl
rcr
push
mov
ror
inc
xchg
pop
sbb
in
ficomp
call
xor
xchg
retf
xchg
xchg
xchg
mov
leave
sar
and
sahf
mov
es
add
fs
adc
jg
xor
(bad)
jo
mov
iret
mov
enter
xor
lods
lods
dec
call
dec
sbb
xor
cwde
jo
inc
pop
jns
xchg
xchg
mov
mov
nop
mov
inc
add
jge
cdq
in
test
ins
xor
sbb
cmp
or
pop
add
mov
sub
mov
or
sbb
xchg
cmp
cmp
inc
enter
sbb
mov
push
xor
fdivr
repnz
jmp
test
fdivr
push
popa
add
maxps
pop
inc
hlt
clc
add
(bad)
pop
jmp
jnp
ins
mov
sbb
pushf
in
or
add
daa
arpl
lock
and
inc
nop
in
sub
cmp
cdq
test
les
mov
int3
pop
je
retf
and
sub
stos
test
inc
repnz
test
mov
and
cmp
mov
mov
xor
mov
pop
test
or
add
test
push
and
mov
addr16
push
adc
xchg
push
fdivr
loop
aam
retf
sub
or
inc
and
jne
and
mov
pop
ins
xor
or
addr16
xchg
mov
(bad)
pxor
dec
ins
pop
test
sub
aad
in
push
enter
aad
jo
xor
sti
push
inc
sub
std
leave
cmp
retf
mov
dec
mov
loop
fst
pop
movs
sar
xchg
retf
in
lods
mov
and
inc
inc
imul
fldcw
push
push
scas
mov
push
pushf
mov
inc
adc
push
push
test
mov
jp
call
add
inc
imul
push
xor
mov
xchg
inc
hlt
push
(bad)
mov
mov
and
mov
sub
sub
sar
cmp
inc
(bad)
adc
pop
sar
pop
mov
mov
jne
and
or
cmc
mov
rol
xor
pop
add
jo
push
fisubr
xor
push
imul
stos
cld
add
test
mov
mov
add
mov
sub
lock
lock
inc
sar
ret
push
mov
shr
mov
mov
pop
mov
(bad)
add
cmp
rcl
pop
sub
test
adc
aas
scas
inc
shl
sub
rcl
push
add
xor
ss
not
popf
cwde
and
cld
mov
mov
sub
inc
sar
adc
cmp
stc
hlt
sbb
push
ror
fisttp
or
mov
or
jnp
push
xchg
inc
mov
fild
movs
inc
shl
adc
pop
mov
and
mov
mov
xor
add
add
imul
dec
xchg
cmc
add
or
dec
sub
adc
outs
retf
or
sbb
ret
sub
fsubr
repz
das
mov
retf
ret
inc
pusha
push
mov
jp
hlt
and
jp
or
and
pushf
sub
dec
inc
cmp
mov
adc
adc
mov
ja
push
lock
mov
adc
rcr
mov
imul
(bad)
adc
mov
aaa
xchg
dec
aas
pop
mov
dec
jl
adc
ins
mov
sbb
stc
pop
xchg
dec
sub
mov
mov
push
push
jo
and
pusha
and
pushf
and
and
movs
add
and
test
movs
mov
lods
and
or
mov
mov
add
fnstcw
cmp
jl
mov
xor
in
mov
lock
jge
add
mov
jbe
or
inc
pop
data16
jo
inc
cld
mov
in
or
sbb
ins
mov
pop
pushf
inc
add
sub
cwde
xlat
lock
jmp
push
push
pop
les
jg
jg
mov
mov
enter
pop
stc
enter
int3
mov
aam
xchg
jmp
adc
cmp
ror
pop
adc
jns
sub
pop
mov
inc
loopne
call
stc
enter
fadd
fisub
idiv
ins
fistp
jge
pop
push
rcr
pop
lods
jnp
dec
add
scas
mov
push
leave
nop
xor
mov
xor
dec
sub
stos
xor
cld
into
push
fist
ins
or
or
fild
xor
or
imul
out
fdivr
adc
pop
jmp
pusha
xor
pusha
xchg
jae
xchg
add
add
fld
mov
sub
fs
push
push
cmc
ins
inc
jo
mov
cli
sbb
sbb
pop
sub
mov
jo
mov
sub
js
mov
or
add
sbb
test
pop
adc
mov
push
inc
shr
or
xor
push
cli
pop
pop
pop
xor
mov
das
pop
pop
push
jl
add
add
sbb
jl
cmp
out
sub
jg
push
clc
(bad)
fcmovnbe
ficom
cld
fst
sub
xchg
rcr
(bad)
mov
push
repnz
pop
clc
xor
imul
mov
mov
mov
(bad)
call
sar
inc
sbb
and
xor
push
outs
fcomip
imul
or
pop
nop
adc
adc
pop
test
ins
pop
(bad)
in
mov
mov
test
lea
inc
call
and
iret
xor
cmp
cmp
xchg
inc
pop
adc
or
and
rcl
inc
add
mov
mov
mov
sub
sub
dec
std
mov
lea
xor
jo
dec
inc
lods
xabort
into
inc
add
loopne
arpl
xlat
jne
jmp
xacquire
lea
lods
xor
pushw
or
call
xchg
xchg
mov
add
cmp
and
xor
adc
mov
push
shl
pop
lock
pop
sar
ss
xlat
inc
jecxz
cmp
retf
mov
xor
cwde
pop
ror
sub
add
cmp
fdivr
sub
fstp
movs
mov
push
or
pop
mov
retf
int3
int3
mov
hlt
and
or
push
add
jmp
mov
cld
inc
push
stos
or
inc
test
jbe
add
sub
jle
pop
xchg
mov
sahf
mov
add
add
lods
mov
dec
pop
pop
enter
or
or
push
sub
or
mov
xor
mov
in
cmp
add
lods
pop
add
jge
movs
lods
inc
sahf
dec
jmp
dec
hlt
in
mov
mov
adc
mov
xchg
push
popa
mov
push
in
push
dec
pop
or
and
ds
pop
aas
movs
pop
add
jb
test
add
inc
jne
or
div
xchg
(bad)
mov
(bad)
adc
retf
xchg
rol
retf
(bad)
(bad)
cld
retf
pop
(bad)
sub
aad
fmul
mov
out
push
inc
lods
xor
mov
outs
repnz
xchg
pop
in
push
jle
sbb
in
(bad)
mov
rcl
cmp
xlat
xchg
lds
(bad)
(bad)
(bad)
repnz
mov
or
xchg
xchg
dec
rcl
(bad)
mov
push
ret
push
pop
aad
stc
iret
sahf
xchg
xchg
adc
rol
rcl
fcmovnu
xchg
dec
cs
adc
xlat
fcmovnbe
ins
stc
shr
fcmovb
(bad)
xchg
jo
retf
xchg
jle
inc
push
js
xchg
ffree
mov
rcl
ffree
repnz
call
test
mov
fisttp
lods
xchg
mov
or
test
mov
cmp
mov
mov
iret
addr16
loop
xchg
aaa
pusha
xchg
pusha
xchg
pusha
into
imul
xchg
pusha
mov
adc
sub
call
mov
ins
ins
adc
pop
cmp
pop
ret
aas
cmp
daa
cwde
(bad)
xchg
jmp
rcl
shl
jg
pusha
mov
movs
xchg
xchg
mov
push
adc
fstp
(bad)
sbb
aam
sub
and
mov
rcr
inc
repz
enter
aas
test
int3
ror
aam
out
mov
mov
aas
fcomp
ret
fsubr
in
cwde
xchg
add
inc
ins
sbb
mov
fistp
mov
out
(bad)
sbb
xchg
sbb
out
in
nop
pop
sbb
loope
or
gs
loop
and
ja
ret
inc
cmp
in
stc
cs
or
in
jmp
stc
call
push
xchg
jle
ins
ins
ins
xchg
xchg
mov
sbb
hlt
hlt
xor
in
repz
push
xchg
icebp
jno
jb
mov
sub
pop
add
adc
popf
cld
int
add
push
adc
mov
push
movs
popa
or
xlat
shl
push
(bad)
or
pop
popa
push
mov
clc
and
jns
pop
js
js
pop
in
and
and
adc
gs
adc
popa
adc
adc
mov
adc
pop
cs
xchg
xchg
xchg
xchg
nop
dec
cs
and
and
sbb
xor
(bad)
sbb
sbb
gs
retf
sbb
cwde
sbb
jb
or
pushf
call
cwde
sbb
cld
xchg
fimul
fcmovnu
aad
and
rol
(bad)
(bad)
mov
sub
fisubr
(bad)
popf
dec
xor
(bad)
mov
xlat
rcr
aam
cmp
xlat
pushf
mov
inc
(bad)
cmp
xchg
sbb
push
daa
inc
xor
xchg
dec
pop
(bad)
popa
dec
jb
pop
push
inc
dec
dec
dec
dec
xchg
inc
ds
gs
leave
dec
retf
movs
xor
int
jo
loope
push
ja
adc
lds
lahf
adc
cmp
in
adc
(bad)
pop
jbe
or
cmp
pop
inc
pusha
mov
inc
sahf
inc
push
push
rcl
rol
mov
adc
gs
fs
and
retf
sbb
call
loop
in
lahf
repnz
adc
ins
mov
fnsave
xchg
aam
inc
(bad)
sub
je
and
rol
fstp
inc
fcmovne
xlat
pop
daa
mov
inc
sahf
in
sbb
cli
xchg
dec
pusha
or
nop
(bad)
mov
call
cmp
das
das
pushf
rcl
xchg
hlt
movs
rcl
sbb
retf
xlat
sahf
test
mov
shr
pop
ins
or
xchg
xchg
ins
or
push
dec
add
cld
leave
and
ffree
xlat
mov
imul
loope
rcl
daa
(bad)
hlt
or
mov
xchg
fistp
imul
add
repnz
int3
jmp
(bad)
(bad)
das
xchg
mov
inc
jl
fadd
ins
mov
shl
retf
frstor
in
mov
xor
call
push
inc
sahf
dec
push
dec
ret
pop
mov
dec
enter
clc
hlt
clc
cs
inc
cmp
clc
div
inc
cmp
sbb
mov
sub
sub
out
pushf
sbb
hlt
hlt
sar
jns
nop
shl
add
jb
in
(bad)
cld
jl
xchg
and
sbb
cmp
pop
cmp
lahf
mov
bound
bound
daa
dec
sahf
bound
bound
and
and
bound
retf
or
enter
nop
mov
xor
leave
mov
bound
bound
sub
or
sub
bound
add
sub
sub
in
push
mov
ins
ins
ins
ins
and
pop
in
aas
xor
xor
ret
(bad)
repnz
adc
adc
ret
inc
mov
test
bound
xchg
mov
sbb
or
dec
(bad)
pop
bound
sbb
mov
cmp
xchg
mov
loopne
xchg
xchg
dec
jae
(bad)
push
push
push
sbb
rcl
dec
gs
rcl
rcl
inc
push
add
sar
fmul
sub
bound
cmp
repnz
bound
ins
bound
or
fcom
xor
sbb
jns
enter
ds
test
pop
test
and
sbb
xchg
sti
loope
movs
jb
clc
aam
cmp
nop
xchg
aam
mov
xchg
sbb
mov
jns
mov
outs
add
jg
bound
lods
aas
lods
lods
stos
inc
mov
outs
and
xchg
aas
stos
outs
in
push
mov
outs
pop
jb
mov
enter
xor
enter
pop
sar
stc
mov
push
sbb
test
xor
sbb
sar
(bad)
les
or
enter
(bad)
or
sbb
les
mov
mov
test
pop
or
in
int3
rcr
enter
rcl
iret
int3
jb
in
inc
int
into
mov
dec
inc
dec
cdq
add
push
inc
mov
xchg
add
fcom
fcom
(bad)
stc
aam
aad
movs
xor
pop
xchg
dec
dec
mov
push
imul
loopne
mul
leave
(bad)
in
call
lock
or
rol
jle
xchg
addr16
pop
push
sbb
outs
int3
fbstp
xchg
hlt
clc
sar
pop
movs
mov
push
sti
arpl
push
fist
add
jmp
xchg
int3
xchg
daa
arpl
arpl
mov
pop
ficomp
ins
and
add
arpl
fs
and
arpl
arpl
sbb
cs
xchg
lods
pslld
cmp
dec
test
fsubr
adc
xlat
in
adc
in
iret
push
pop
stos
fistp
pushf
adc
aam
and
xchg
sbb
cmp
xlat
aam
iret
int3
pop
cmc
arpl
adc
dec
pop
lds
arpl
loop
out
arpl
rcl
pop
(bad)
fsubr
(bad)
pushf
inc
inc
(bad)
mov
xlat
rcr
fs
arpl
test
xchg
mov
fnsave
mov
jg
je
fdiv
sar
pushf
ja
xchg
mov
rcr
add
xlat
rol
jne
mov
mov
pop
aam
outs
add
movs
jg
inc
push
jb
arpl
gs
daa
xchg
xchg
xchg
nop
pop
daa
outs
or
add
mov
push
outs
outs
or
ja
enter
mov
out
jb
loopne
pushf
pop
pushf
fwait
call
adc
fisubr
outs
outs
in
shl
pushf
push
add
movs
test
fisubr
bnd
lods
ret
and
mov
imul
cli
test
mov
and
cwde
xor
enter
inc
mov
rcl
xchg
jg
aam
xlat
(bad)
fcom
(bad)
(bad)
(bad)
sbb
(bad)
loopne
dec
in
data16
call
shl
frstor
jne
fcmovnb
lock
and
(bad)
outs
mov
cld
aas
add
xchg
sub
add
daa
fs
(bad)
cld
repnz
lock
or
loopne
retf
jg
adc
out
repz
popf
sbb
repnz
fs
and
push
add
pop
not
sbb
inc
jb
mov
push
ret
aas
cwde
cwde
inc
daa
pmulhuw
sub
(bad)
cmp
sbb
fs
fs
sbb
sbb
xchg
retf
sahf
mov
test
xchg
retf
add
push
fs
xor
xor
cmp
stc
sub
sub
aas
movs
test
nop
out
retf
nop
cmp
mov
cmc
cmp
cmp
in
pop
fs
fs
push
inc
mov
mov
pushf
dec
jle
and
pop
dec
(bad)
fcom
dec
adc
cld
aaa
jp
rcr
daa
pop
(bad)
xlat
popf
ret
and
addr16
popa
imul
pop
outs
fs
ja
jb
and
add
enter
mov
sbb
and
xchg
fwait
sbb
enter
cmps
(bad)
jl
xchg
retf
mov
ret
data16
loop
(bad)
loopne
ror
mov
and
xor
fs
jg
cmp
cmp
in
xchg
mov
pop
fs
dec
sub
jo
jo
push
sub
test
jo
cmp
test
jo
mov
fs
fsub
loopne
mov
daa
fs
mov
jo
jo
cs
leave
addr16
add
adc
lock
leave
xchg
daa
dec
fs
fs
add
add
or
rcl
adc
rcl
xlat
ret
pushf
ret
add
pop
mov
fist
sbb
mov
(bad)
pop
adc
sbb
loopne
stc
adc
stc
cmp
gs
xor
jae
dec
repnz
call
or
dec
push
jo
sbb
daa
pmulhuw
gs
inc
gs
xchg
xchg
inc
gs
gs
add
jno
in
mov
cmp
retf
mov
mov
mov
ja
jl
jl
in
cmp
inc
ror
pop
push
dec
dec
inc
inc
pop
push
mov
inc
cs
retf
sar
mov
enter
pop
pop
gs
retf
in
pop
pop
rol
rcr
movs
jb
push
aad
aam
nop
inc
dec
es
pusha
cs
and
arpl
sbb
movs
xor
fldenv
fst
cmp
in
dec
jmp
adc
jl
inc
cmp
xor
pusha
mov
sub
cmp
adc
ins
inc
cmp
jb
dec
lea
push
add
add
sub
xor
in
(bad)
cmp
movs
popf
push
adc
sub
add
add
loopne
cmps
fdivr
push
scas
repnz
dec
loop
int3
std
add
or
push
or
stc
cwde
or
push
daa
xchg
pop
inc
push
std
adc
aad
icebp
fsubp
xor
and
js
fistp
rcl
cmps
fisub
out
xchg
pusha
fcom
enter
or
mov
push
clts
push
cli
shl
pop
mov
cmp
les
icebp
mov
or
or
or
(bad)
icebp
pop
or
sbb
inc
rcl
enter
xor
in
cmp
std
jl
aas
cmps
loope
leave
adc
adc
repz
sub
push
jns
pop
adc
adc
jb
xor
les
add
movs
cld
push
push
inc
cmps
aad
jbe
(bad)
leave
fcom
and
push
xor
mov
das
adc
xchg
xchg
mov
(bad)
xchg
add
icebp
cmp
pop
mov
pusha
test
dec
sahf
mov
test
call
pop
ret
ja
shr
push
xchg
bound
nop
push
xlat
adc
popf
(bad)
adc
push
sub
inc
mov
lahf
mov
sbb
retf
mov
gs
jno
mov
ins
lahf
xor
mov
dec
and
cld
cmp
xor
pushf
add
lods
lahf
sahf
add
or
jno
pushf
jno
rcl
xor
xor
jo
adc
shl
sub
repz
loope
cli
cwde
shl
(bad)
test
stos
retf
jecxz
xchg
inc
push
mov
mov
jb
fmul
(bad)
enter
(bad)
aas
stc
add
aam
xchg
fild
fadd
ror
and
xchg
adc
or
sbb
and
cmp
add
cmc
mov
gs
in
sbb
lock
sub
push
lods
hlt
retf
clc
retf
in
iret
cli
cld
xchg
xchg
pop
data16
jg
aas
repz
or
adc
faddp
adc
retf
ret
rcr
(bad)
sbb
cdq
cmp
data16
adc
(bad)
repnz
fldenv
adc
retf
xchg
rol
push
inc
mov
sub
xlat
(bad)
xor
mov
ffree
cmp
push
adc
pop
and
les
mov
sbb
ja
mov
xor
fwait
push
xchg
add
pop
xor
pop
inc
rcl
pop
cld
pop
dec
mov
adc
xor
clc
or
ins
mov
dec
mov
adc
(bad)
or
dec
xor
pop
mov
data16
je
idiv
pop
stos
sbb
setp
xlat
ror
(bad)
adc
sbb
xchg
movs
cbw
pushfw
adc
xchg
dec
ins
mov
and
jg
xor
or
sub
mov
fnstenv
in
sbb
inc
mov
mov
mov
mov
in
push
jo
retf
repz
sbb
and
stc
ins
pop
mov
ret
inc
xchg
jb
fdiv
pslld
xchg
and
shl
xchg
in
out
mov
push
mov
pop
and
in
call
aad
dec
outs
push
xlat
call
clc
xlat
fcomip
not
popf
(bad)
rcl
xlat
dec
add
push
add
inc
das
aas
or
fcmovnbe
fimul
xchg
aad
cmp
and
add
fistp
adc
jg
pop
sbb
js
inc
addr16
fbld
sahf
pushf
nop
push
addr16
mov
jg
xchg
adc
mov
aaa
addr16
mov
xor
xor
sahf
pop
cwde
pop
and
(bad)
adc
inc
fsub
dec
push
in
dec
xchg
daa
dec
sahf
addr16
addr16
addr16
jb
out
addr16
addr16
cmp
int
data16
ficomp
fs
mov
xchg
pop
out
inc
or
mov
shl
jo
out
(bad)
ret
adc
js
shl
jl
repnz
enter
xchg
xchg
cmp
sub
mov
adc
fdivr
xchg
cld
leave
cvtpi2ps
xchg
out
loope
pushf
rcr
xchg
mov
sbb
pop
xor
aaa
fbstp
rcr
sar
loopne
popa
(bad)
sbb
or
lods
cs
xchg
retf
ffree
mov
jge
pop
push
loopne
ficom
xchg
xor
rol
aam
daa
(bad)
fcmovnb
pushf
pop
ins
xor
movs
jae
mov
adc
add
mov
enter
rcl
xchg
daa
pop
xor
enter
repnz
ret
mov
pop
lahf
jb
aam
adc
nop
fld
lahf
mov
gs
push
dec
mov
jae
retf
or
cld
fwait
and
cmp
dec
in
(bad)
jg
bound
pop
mov
hlt
jne
hlt
cld
mov
pop
loop
adc
xlat
and
sub
mov
call
ret
idiv
lock
or
repnz
cmp
push
sahf
cmp
push
and
push
sub
and
push
out
push
sbb
sti
ret
dec
cmp
cmp
xchg
jnp
aas
push
jns
pusha
push
fbstp
cmp
pushf
in
or
pop
jo
inc
adc
push
push
fwait
in
pop
push
add
cmp
push
add
adc
push
mov
(bad)
mov
add
mov
mov
cmp
inc
pop
push
mov
and
push
xchg
push
jb
sub
pushf
push
inc
push
leave
enter
clc
push
shl
lahf
fcomp
mov
daa
in
inc
push
mov
pop
xchg
daa
je
push
ret
pop
inc
icebp
fucom
aam
(bad)
mov
enter
int3
add
aam
in
test
mov
or
adc
in
arpl
test
mov
leave
or
je
push
xor
pop
push
jg
jne
les
repz
add
jecxz
mov
imul
push
xchg
enter
pop
sar
test
imul
dec
cs
imul
cdq
test
in
fwait
jno
mov
cmp
imul
imul
lahf
imul
inc
je
adc
ficomp
and
sbb
test
add
push
sub
xchg
(bad)
enter
rcr
xlat
push
mov
jp
in
pop
imul
outs
popa
fs
imul
in
ins
imul
cdq
sbb
ja
(bad)
jl
in
adc
cmps
popa
in
rcr
ins
adc
loop
repnz
mov
sub
imul
call
cmp
mov
fild
jns
loope
lahf
test
test
jo
dec
test
imul
xchg
xchg
mov
sbb
fistp
cmp
les
xor
xor
pop
xchg
int3
pop
rcr
popf
lahf
rcl
(bad)
fsubr
aam
call
dec
dec
aas
fsub
pushf
out
fadd
(bad)
(bad)
test
aam
in
lock
jg
or
(bad)
aam
in
rcr
dec
jno
daa
lock
sbb
pop
clc
rol
seta
pop
in
jns
aam
jne
pop
jne
retf
sub
xchg
push
pop
cmp
push
sbb
mov
push
and
idiv
aas
push
jne
jbe
jmp
adc
sub
sub
sbb
pop
push
push
push
cmp
nop
cmp
push
pusha
dec
xor
push
mov
pusha
xchg
fsubrp
mov
dec
and
repz
in
xchg
push
push
push
push
dec
sahf
cmp
push
push
push
push
in
xchg
daa
push
push
push
das
pop
jns
push
push
push
push
dec
fimul
jl
xchg
push
push
cmp
xchg
daa
push
push
push
loope
movs
dec
call
pop
fs
inc
sahf
rcl
jb
sbb
nop
mov
xchg
stos
mov
jbe
push
pop
add
mov
mov
mov
shr
xor
push
mov
pop
pop
mov
mov
pop
test
mov
lea
mov
repnz
shr
pop
mov
inc
pop
jbe
and
repnz
out
mov
loop
mov
push
or
xchg
or
imul
sub
mov
pop
sahf
mov
sbb
pop
fild
out
add
adc
ins
add
dec
and
mov
retf
add
pop
or
lahf
or
mov
mov
push
and
repz
or
addr16
or
pop
or
aam
cld
and
or
pop
in
out
mov
jo
add
or
ret
imul
jbe
daa
pusha
dec
push
pop
mov
or
adc
int
leave
imul
imul
pop
lods
lods
mov
push
in
daa
rcl
xchg
pop
xor
mov
add
fs
cmp
pop
imul
test
sbb
xchg
arpl
jbe
jbe
lea
jns
mov
or
imul
push
stc
lock
into
and
sub
call
sub
(bad)
shl
(bad)
xlat
div
aam
(bad)
pop
mov
(bad)
out
cmp
mov
imul
imul
inc
pop
and
pop
push
xor
or
ss
rol
rcr
outs
dec
sbb
movs
inc
es
aas
fmul
sbb
bndldx
jnp
sub
sar
ins
imul
cmp
push
cmp
sub
push
cld
rcl
and
pop
retf
add
xor
xchg
ret
push
call
sub
mov
cli
add
retf
imul
sub
push
jne
jp
ins
lahf
in
mov
sub
ret
clc
fistp
or
clc
sar
iret
ja
in
shl
mov
cmp
call
push
movs
out
or
ss
pop
add
jns
and
pop
cmp
add
and
jge
jns
inc
mov
dec
cdq
or
sub
and
fucomi
mov
adc
dec
sbb
cwde
inc
xchg
int3
mov
or
pop
add
mov
pop
push
mov
out
cmp
jne
iret
stos
ins
dec
lea
push
push
xchg
mov
leave
pop
pop
and
cmp
mov
imul
movs
mov
inc
aas
dec
push
iret
and
dec
or
and
push
push
adc
and
(bad)
out
lock
push
ret
fbld
sbb
imul
sub
imul
sbb
sbb
cmp
in
xor
cmp
add
mov
mov
mov
and
xor
and
mov
test
sbb
adc
nop
xchg
pop
xor
enter
xchg
fist
ins
ins
ins
ins
ins
outs
mov
outs
ins
jo
jno
sti
xchg
xchg
ins
jb
jae
mov
mov
sbb
add
nop
mov
fbstp
and
outs
sub
pop
repnz
xchg
outs
sub
outs
sub
outs
outs
das
outs
xor
cmp
jo
das
jns
dec
jo
jo
jo
xchg
mov
jo
jo
jae
nop
retf
jo
sar
or
sbb
loop
or
and
enter
in
out
add
nop
add
in
out
out
add
nop
add
icebp
es
nop
bnd
ret
fcomip
inc
push
fs
cmc
mul
fs
stc
dec
gs
push
cli
sti
hlt
pop
repnz
or
das
jns
dec
jno
jno
jno
cmp
jno
xor
mov
xor
and
xor
sub
retf
xchg
xchg
push
sub
sub
or
sub
das
xor
or
or
fild
or
sbb
or
aaa
cmp
or
cmp
mov
movs
jb
xor
push
and
xor
and
rol
addr16
aaa
and
xor
les
shl
or
pop
mov
jb
pop
jb
jb
repnz
xchg
mov
jb
cmp
and
jb
mov
sar
mov
add
and
mov
mov
add
and
xor
and
mov
push
jae
jae
jae
leave
dec
pop
bnd
jae
jae
mul
jae
jae
mov
or
jae
jae
mov
mov
pop
repnz
xchg
jae
jae
jae
add
dec
inc
mov
enter
or
or
icebp
or
repnz
in
enter
repz
xor
add
je
je
xor
add
and
xor
je
and
in
into
je
call
and
xor
pop
add
and
pop
pop
pop
xchg
xlat
xor
pop
pop
je
push
nop
dec
inc
push
popa
pop
jo
push
fs
jno
fs
push
fs
jne
outs
inc
push
jbe
jmp
ret
inc
xor
adc
and
xor
and
pushf
popf
mov
enter
enter
cli
sti
cld
or
or
xor
clc
jne
pop
repnz
xchg
jne
jne
jne
das
jns
dec
jne
jne
jne
int3
cmp
nop
mov
sub
pop
jne
add
nop
jne
jne
nop
add
jne
jne
rcl
and
and
and
jbe
jbe
jbe
jns
dec
pop
jbe
jbe
jbe
or
and
sub
jns
add
jbe
jbe
xchg
mov
jbe
jbe
pop
repnz
ins
jbe
jbe
and
dec
movs
(bad)
jo
je
and
xor
ja
xor
add
jp
ins
aaa
and
je
fild
and
jbe
fs
push
fs
jbe
fs
push
jbe
jbe
adc
(bad)
mov
cmp
xchg
jmp
enter
sbb
push
adc
popa
add
push
test
pop
es
jge
dec
repnz
or
push
in
sub
lods
sar
(bad)
in
pop
test
inc
adc
shl
ror
popf
test
sub
test
add
adc
sub
loopne
scas
fs
or
adc
shr
mov
mov
iret
add
adc
loope
jmp
fstp
ror
push
jne
mov
pop
sub
or
adc
enter
add
(bad)
push
jge
sbb
inc
cmps
inc
add
mov
mov
mov
cmp
(bad)
cs
shl
test
mov
pop
adc
jbe
outs
leave
stos
add
lock
add
rcl
jbe
jp
sbb
sub
mov
pop
and
push
and
and
clc
add
add
add
(bad)
and
adc
sub
cmp
mov
dec
rol
mov
xchg
in
push
jo
cmp
mov
jmp
sub
es
add
inc
jne
mov
lahf
retf
push
adc
cs
push
push
and
mov
rol
pop
cmp
add
mov
sbb
inc
push
in
xchg
inc
and
xchg
call
sub
das
call
stos
std
push
adc
mov
inc
xchg
(bad)
dec
inc
pop
mov
and
mov
sar
jbe
(bad)
rcr
rcl
jbe
jbe
out
add
sbb
div
xor
icebp
sub
dec
repz
cmp
jbe
jbe
mov
out
aad
jg
out
rcl
icebp
sti
enter
int3
clc
ffree
jbe
lods
cld
rcl
fcmovbe
mov
mov
pusha
fwait
or
jmp
xchg
mov
cmc
push
xchg
xor
pushf
add
aam
push
pop
mov
movs
inc
daa
(bad)
aam
sub
dec
je
add
mov
add
add
dec
jl
pusha
test
mov
repz
cmp
xor
test
mov
add
push
and
loopne
sub
add
or
cmp
pop
nop
or
je
or
push
pop
dec
popa
inc
mov
js
xchg
adc
adc
adc
mov
mov
nop
icebp
xchg
gs
or
je
sub
(bad)
fmul
xor
inc
pusha
adc
or
mov
sub
fsub
inc
inc
movs
fs
inc
mov
sbb
bnd
sub
push
jmp
pop
and
lods
and
sub
js
outs
xchg
nop
or
xor
xchg
je
enter
adc
inc
lock
sub
into
push
mov
js
sbb
pop
or
adc
addr16
fdiv
and
js
js
pop
ror
xchg
mov
mov
dec
aaa
cmp
or
cwde
mov
movs
add
neg
clc
dec
or
popa
call
test
adc
ret
sbb
cwde
mov
je
mov
mov
mov
dec
push
dec
add
sub
test
sub
out
add
jo
cmp
mov
or
ds
add
jno
mov
push
cwde
shl
inc
lea
movs
test
jmp
pusha
and
xchg
cmp
dec
inc
jl
or
add
pop
sub
xor
jle
and
sbb
sbb
jae
mov
mov
cmps
add
push
push
push
jb
clc
adc
xor
jmp
xchg
push
jne
into
enter
lods
mov
push
or
xchg
enter
les
sbb
dec
inc
ja
shl
or
or
mov
mov
nop
fs
push
jl
jns
cs
(bad)
cmp
jge
adc
in
ror
rol
es
(bad)
xchg
and
cmp
mov
inc
in
jge
mov
fimul
xchg
or
mov
xchg
fst
call
(bad)
sbb
iret
jl
mov
xor
pop
sahf
sub
mov
repnz
daa
cmp
mov
sbb
jne
cmp
pop
or
and
jmp
adc
and
div
xchg
sub
ins
add
mov
sub
add
(bad)
sbb
test
add
mov
mov
sub
test
hlt
jp
mov
sub
loop
mul
test
enter
call
scas
rcl
sbb
retf
xor
and
add
jecxz
js
pop
call
lock
mov
xor
sub
pop
and
outs
adc
xchg
jae
mov
xchg
mov
push
in
jb
cmp
in
cmp
lods
jnp
sbb
xchg
adc
loopne
cmp
lahf
mov
pop
mov
int3
and
leave
mov
and
in
arpl
jne
or
jne
in
jne
push
cld
dec
push
xor
pop
pop
mov
xor
xor
fild
and
cmc
push
sar
add
push
push
sub
stos
call
adc
scas
aas
fs
mov
push
inc
ins
or
push
mov
pop
and
push
cs
dec
fild
adc
add
push
shr
add
or
fadd
nop
mov
xchg
add
lods
add
adc
push
push
test
push
(bad)
mov
push
or
sbb
mov
(bad)
stc
xchg
push
mov
mov
jbe
into
(bad)
(bad)
xlat
mov
movs
push
test
mov
jbe
push
stc
ds
jbe
ja
sbb
(bad)
pop
div
xor
icebp
sub
and
ja
ja
ja
iret
leave
adc
push
fmul
daa
outs
cs
rcr
mov
ja
ficom
add
(bad)
cld
in
enter
jns
jb
push
xchg
jnp
xchg
inc
les
out
mov
rcr
xlat
adc
ret
fcom
faddp
or
dec
dec
adc
imul
(bad)
mov
imul
iret
ret
xchg
out
or
push
adc
int3
leave
in
push
inc
inc
sbb
out
xor
sbb
cmp
or
push
repnz
xor
imul
rcl
fld
ret
or
xchg
cmp
cmp
sub
inc
sub
or
cld
cmp
popf
cmp
fcmovnu
rol
xor
vshufps
xchg
xor
and
pop
dec
xor
inc
or
or
and
mov
les
(bad)
jp
jl
adc
sti
(bad)
xchg
xchg
and
test
wrmsr
xor
add
neg
ret
adc
(bad)
sub
call
and
fcom
clc
pop
cmp
sbb
sbb
fisub
pop
dec
mov
xor
jne
push
and
cmps
or
shr
xchg
in
rcr
mov
js
push
mov
cmp
pusha
ins
push
xor
add
adc
pop
lahf
sbb
push
push
cmp
in
sub
sbb
ret
mov
stos
and
or
call
out
aas
repnz
call
pop
rol
iret
jmp
fcom
fldenv
xlat
ret
iret
call
(bad)
rol
pop
inc
(bad)
pop
ja
lds
pop
dec
adc
jg
ret
and
push
adc
ja
nop
out
cmp
xor
add
add
test
xchg
pop
scas
and
(bad)
mov
mov
or
and
mov
mov
nop
xchg
retf
enter
mov
mov
or
cwde
movs
jb
sbb
cs
jg
nop
add
nop
sahf
lahf
mov
mov
inc
movs
pushf
movs
movs
push
fs
push
cmps
cmps
test
push
fs
test
gs
movs
lods
enter
lods
scas
scas
or
or
mov
inc
fiadd
or
dec
pop
pop
lods
mov
pop
mov
or
mov
cmp
rol
fs
push
in
(bad)
fs
push
(bad)
enter
fs
retf
push
ja
or
mov
inc
pop
fcomi
mov
or
cmps
cmc
mov
adc
sbb
and
pusha
jmp
dec
cmp
pop
sub
add
or
cmovs
pop
ds
or
adc
icebp
(bad)
retf
enter
int3
lock
aam
hlt
retf
aaa
sub
or
dec
rol
and
adc
xor
mov
inc
sub
repnz
or
lea
sti
fidiv
push
loope
cmp
movs
ins
cmp
and
enter
push
and
push
xor
cmp
jbe
inc
xchg
cmp
or
ins
dec
jl
test
xor
sbb
xchg
mov
fcmovbe
mov
adc
push
loop
nop
mov
loop
imul
rol
mov
jo
adc
mov
and
sbb
dec
adc
inc
and
sub
inc
(bad)
xor
mov
nop
popa
dec
out
add
loopne
test
and
xchg
shl
add
dec
push
or
add
mov
and
mov
add
test
into
push
push
push
xor
push
inc
adc
ror
cmp
push
mov
sub
xchg
jo
test
rcl
into
fwait
adc
and
dec
sub
mov
sar
movs
jb
dec
xor
sbb
mov
and
add
push
shl
sti
ror
inc
std
lock
enter
xchg
cmp
jle
xor
inc
inc
push
fs
push
pop
das
inc
sahf
mov
xchg
and
push
add
add
xor
or
push
xor
mov
xor
inc
or
jmp
mov
xor
repnz
sbb
mov
cmp
or
aas
retf
rol
mov
pop
push
in
sub
lods
dec
or
inc
adc
fsubr
push
jns
shr
inc
add
cmp
cmp
xchg
xor
and
sub
pusha
sub
mov
cli
lods
jae
test
adc
sub
pop
pop
aad
mov
sbb
pop
in
sub
fistp
sub
icebp
dec
fst
cld
aad
hlt
sar
in
mov
fst
add
retf
or
bound
mov
jle
outs
pop
js
fistp
js
mov
lahf
and
(bad)
fwait
inc
pop
and
adc
imul
stc
sbb
icebp
repnz
enter
aam
mov
and
js
loop
add
pop
lahf
and
mov
(bad)
and
(bad)
retf
call
in
jg
and
int3
sti
fldcw
fcmovnbe
(bad)
sub
int3
fldlg2
sub
fcmovbe
fucom
xor
mov
jo
lahf
pushf
adc
mov
sbb
adc
jo
xchg
cmp
jnp
xlat
fcmovnu
fild
push
jns
rcr
xchg
inc
ror
dec
mov
test
adc
fcmovnbe
aad
leave
fild
js
mov
add
mov
mov
ret
mov
and
jns
push
js
pop
repnz
jb
fs
(bad)
int
push
out
movs
imul
int3
jg
jo
cwde
sbb
mov
js
mov
mov
ret
lahf
add
add
sbb
xor
fild
xor
jns
jg
or
(bad)
sti
add
outs
sbb
popa
xchg
sbb
mov
test
mov
leave
cmp
pop
hlt
(bad)
rcr
clc
iret
mov
lods
cmp
add
dec
pop
add
inc
mov
lahf
rcr
cwde
add
or
cmp
push
push
sbb
pmulhw
mov
(bad)
mov
dec
shl
adc
cmp
mov
ds
pop
and
push
mov
and
rol
jbe
test
add
ret
and
dec
cld
popa
test
push
sbb
lock
pop
xchg
mov
iret
push
xchg
push
fisubr
ret
sahf
inc
sahf
sahf
sub
or
xchg
lea
shl
or
push
imul
or
pop
sub
cmp
cdq
mov
and
aaa
test
test
(bad)
cmp
add
retf
mov
mov
push
cmp
inc
pop
inc
mov
enter
or
adc
dec
mov
mov
push
pop
sbb
imul
mov
inc
pusha
cmp
jb
sub
fisttp
xor
mov
dec
jno
push
out
add
aas
adc
jne
adc
xchg
(bad)
cld
(bad)
aad
rcl
jns
into
fcomp
fcmove
outs
imul
mov
mov
jle
adc
mov
sahf
add
adc
das
jmp
leave
popf
les
enter
(bad)
out
sbb
aam
sbb
aam
and
xchg
pop
(bad)
and
popf
leave
aad
fcomp
(bad)
mov
inc
jle
into
popf
fbstp
ror
xchg
(bad)
cmp
pop
(bad)
sbb
add
cmp
shr
add
push
sub
adc
jmp
aas
or
rcr
fistp
inc
push
and
xchg
push
or
or
or
jp
mov
mov
push
xor
in
push
pop
inc
add
sar
dec
adc
push
inc
pop
push
rcl
ss
pop
pop
inc
jmp
test
mov
aam
push
dec
inc
dec
or
xchg
sbb
dec
push
sbb
gs
pushf
xchg
dec
and
mov
test
or
and
mov
jo
call
pop
mov
loope
daa
push
pop
pop
lock
and
sahf
les
dec
add
push
add
xchg
inc
jl
sbb
jge
or
inc
pop
cmp
and
and
jl
pusha
lods
sub
mov
or
add
dec
stos
sub
mov
scas
jo
add
lods
sub
sub
jge
test
lea
add
cwde
xchg
in
push
fcmovbe
mov
inc
stos
out
push
inc
lods
test
mov
mov
jno
mov
and
inc
or
retf
or
xor
jmp
push
push
xor
cmps
mov
cli
fwait
lock
pop
mov
and
sbb
fcom
cmp
test
jmp
mov
fsubr
add
add
sub
dec
call
sbb
outs
stos
movs
add
popa
adc
and
add
(bad)
(bad)
jmp
(bad)
sub
sub
cwde
dec
imul
adc
add
fld
cmps
in
call
xchg
dec
je
xchg
mov
cmp
(bad)
xor
pop
push
enter
cmp
mov
adc
call
mov
inc
loope
mov
push
ins
xchg
add
fsub
(bad)
nop
jmp
daa
adc
adc
call
push
adc
pop
pop
fisttp
lods
push
adc
imul
cmp
or
iret
cld
in
sub
push
add
test
shl
jne
or
in
and
and
aad
add
js
push
out
in
push
push
shl
cmp
adc
pop
ins
or
lock
gs
aam
dec
outs
xchg
sub
arpl
scas
inc
(bad)
lock
or
(bad)
das
push
adc
mov
mov
or
inc
cmp
stc
sbb
or
jb
inc
or
int3
or
xchg
or
and
mov
adc
push
push
dec
jnp
mov
or
pusha
add
es
mov
mov
push
pop
nop
mov
mov
fwait
ins
jecxz
push
cs
test
jnp
sbb
inc
icebp
or
xor
test
push
dec
sub
cld
icebp
cmp
jg
stos
or
(bad)
inc
or
jp
pop
add
push
inc
hlt
xchg
(bad)
xor
pop
or
repz
dec
xor
push
aad
add
inc
add
cmp
jo
mov
pop
push
sti
push
jae
pop
xor
pop
cmp
inc
mov
rcr
int
dec
jg
and
ins
mov
pop
ret
fisttp
push
adc
scas
es
mov
pop
sbb
inc
enter
fisttp
and
and
pop
mov
test
mov
cmp
jne
mov
ret
dec
mov
xrelease
inc
push
aaa
add
aad
xchg
mov
loope
jne
dec
add
and
in
jae
pop
jb
fisubr
cmps
mov
and
inc
lahf
cmp
jne
test
mov
mov
add
imul
adc
ds
pushf
push
lods
je
sub
mov
and
xor
imul
pop
jnp
aad
add
push
aad
xchg
push
adc
add
dec
mov
mov
or
out
sub
add
das
sbb
jbe
or
cmp
adc
inc
pop
ja
adc
push
sub
addr16
test
push
and
std
je
sub
test
fstp
cmp
push
adc
push
into
pusha
add
pop
lea
dec
mov
call
int
cmp
adc
aas
sub
add
leave
gs
add
popf
ss
je
sub
sahf
jp
pop
jmp
adc
xchg
pusha
or
lock
ja
xchg
fs
add
and
cmp
push
add
movs
retf
stos
fcom
jp
add
pop
and
mov
std
or
mov
ds
mov
adc
bound
xor
pop
cwde
push
clc
or
push
in
add
and
inc
cs
test
(bad)
jmp
out
xor
ins
test
test
ins
test
or
sbb
ins
in
call
xchg
xchg
sahf
ss
nop
ins
nop
mov
pop
and
add
cmp
mov
std
push
or
lds
jmp
pop
fs
dec
dec
sbb
cdq
add
push
jl
ins
push
outs
adc
gs
aad
out
dec
xor
or
xor
in
das
int
add
push
cdq
mov
add
mov
mov
les
jb
or
add
adc
or
aas
or
or
add
aas
ins
popf
and
jb
sub
retf
pop
cmps
lea
pop
adc
pop
adc
cmp
stos
xor
rol
pop
jb
adc
push
push
call
or
rcl
aaa
ret
pmaxsw
lods
mov
xchg
or
dec
(bad)
cmp
lds
add
jno
es
das
cmp
je
inc
test
pop
push
dec
inc
mov
inc
and
(bad)
test
adc
mov
xor
inc
inc
pusha
push
rcr
dec
mov
pop
mov
test
dec
loopne
in
adc
cmp
cdq
ds
loope
jbe
fcmovnb
or
sti
sar
jmp
test
pop
hlt
jge
mov
sbb
sub
popa
js
sub
push
sub
shr
imul
cmp
xor
mov
push
scas
mov
daa
daa
mov
arpl
add
dec
add
dec
test
dec
dec
cmps
push
sbb
mov
pop
pop
inc
sub
in
pushf
sbb
inc
loope
shl
int3
adc
test
pop
movs
push
jns
std
sbb
aaa
lahf
mov
sub
dec
inc
push
fsub
cmp
pop
mov
jo
popa
inc
add
sub
fld
inc
cmps
popf
sub
not
push
mov
jg
or
inc
jnp
(bad)
movs
sti
movs
dec
nop
pop
push
lea
mov
xchg
inc
xchg
aam
inc
fistp
inc
jecxz
mov
push
inc
ret
mov
stos
and
sbb
cmp
loopne
ror
ret
dec
mov
pop
adc
test
and
add
int
dec
mov
pop
pusha
add
lods
mov
ror
dec
cmovo
adc
add
mov
push
pop
cmp
or
push
or
aaa
push
je
inc
xchg
and
xchg
add
ins
pop
jo
retf
test
and
out
ins
cld
push
pusha
pop
add
and
fucom
nop
and
and
and
pop
push
mov
and
cld
push
pop
push
cmp
pop
pusha
push
dec
add
enter
push
ret
xchg
sub
mov
or
xchg
mov
mov
xchg
mov
cmc
jns
jns
pushf
icebp
fwait
out
dec
jns
xor
xor
int3
jl
or
jg
jge
sbb
jle
retf
rcr
mov
mov
mov
xlat
pop
xchg
xor
(bad)
mov
mul
icebp
popa
pusha
pop
pop
pusha
nop
out
cmp
mov
inc
repnz
in
jp
jp
adc
add
add
in
ins
push
jns
push
xchg
xchg
rcl
mov
pop
mov
lahf
mov
mov
daa
aas
stc
(bad)
mov
mov
fs
mov
mov
xchg
and
xchg
xchg
pop
in
add
mov
adc
push
aas
jb
mov
fcmovu
js
rcr
fsin
in
jg
jl
aam
leave
adc
test
aam
into
fstp
and
jns
mov
leave
push
adc
adc
aas
loopne
push
leave
or
xor
adc
inc
popa
inc
and
cmp
mov
mov
test
and
pop
aam
sub
mov
popf
and
sbb
cs
mov
stc
nop
mov
or
sbb
xor
sub
mov
cmp
add
and
xor
in
xchg
cmp
and
cmp
and
and
add
bnd
in
nop
cmps
imul
sub
fmul
int3
adc
in
fcom
adc
jne
cmps
dec
mov
inc
loopne
cmp
lock
push
mov
cmps
mov
call
xor
mov
aaa
add
push
inc
jg
jmp
inc
mov
leave
mov
mov
or
scas
add
mov
adc
ror
xchg
pop
inc
dec
and
enter
or
dec
xchg
adc
xchg
shl
or
adc
and
iret
adc
shl
add
add
call
test
nop
retf
mov
mov
xchg
inc
push
sbb
mov
xchg
(bad)
(bad)
pop
mov
or
enter
add
pusha
fs
mov
std
jmp
or
loopne
inc
in
addr16
ror
push
inc
xchg
push
mov
push
mov
bound
ja
jg
sbb
movs
fcmove
add
pusha
push
push
clc
xchg
fcom
mov
scas
enter
jb
leave
enter
xchg
shl
or
in
jb
clc
test
jp
pusha
add
or
int
sbb
add
out
mov
retf
int3
xor
sub
or
int
pop
pop
test
cmc
in
adc
push
stc
std
(bad)
push
imul
add
push
in
jl
and
ror
jl
jb
dec
sub
test
bound
pop
xchg
in
lea
lods
xor
lods
adc
inc
inc
jbe
cwde
and
movs
and
xchg
dec
int
andps
cwde
out
or
and
(bad)
es
stos
or
add
cmp
mov
rol
add
shr
push
dec
xlat
pop
rcr
cmp
mov
inc
retf
xor
or
xchg
inc
mov
or
cmp
pop
shr
call
leave
jge
mov
cmp
xchg
push
cmc
add
fwait
or
pop
aaa
adc
inc
sbb
test
add
and
xor
jns
pcmpeqb
fs
dec
add
xchg
or
sub
xchg
dec
pop
retf
adc
int3
call
xchg
sbb
jae
xor
or
xchg
push
or
dec
fild
outs
(bad)
aad
inc
and
mov
and
push
pop
add
dec
idiv
nop
out
dec
inc
pop
dec
movs
mov
and
inc
pop
inc
imul
in
or
or
dec
outs
std
xchg
movs
push
es
xchg
test
leave
xchg
stos
and
pop
jne
nop
std
pushf
dec
adc
sub
outs
lea
add
popf
add
mov
cmc
or
(bad)
dec
pop
lds
push
inc
test
sbb
push
push
xor
ficom
je
mov
adc
pop
jo
lock
bound
jl
adc
les
aaa
ret
call
vrsqrtss
pop
xchg
(bad)
sbb
cmp
xor
mov
add
cmp
hlt
add
xor
pop
add
add
xchg
mov
inc
pop
fdiv
inc
sub
xchg
inc
add
dec
inc
retf
push
popa
mov
xchg
mov
scas
mov
inc
add
xor
inc
loopne
(bad)
rol
fiadd
adc
test
mov
jne
test
shl
mov
jle
imul
add
inc
push
jnp
adc
xor
arpl
js
and
push
and
or
test
push
dec
mov
mov
pop
mov
or
push
je
add
jns
lods
sbb
xchg
aas
mov
int3
cli
pop
idiv
adc
jg
std
adc
fdiv
mov
jmp
mov
xchg
inc
or
rcl
iret
clc
retf
into
sar
shl
inc
movs
aam
add
dec
call
pop
and
repnz
mov
les
xchg
retf
(bad)
sub
div
xchg
data16
rcl
sar
aad
shl
aad
ja
add
jnp
sbb
rol
sub
iret
jnp
jnp
jnp
jnp
mov
or
(bad)
mov
mov
dec
inc
lods
push
sbb
mov
mov
adc
cwde
push
ss
ins
sbb
and
jl
pop
cmp
inc
or
dec
add
cdq
dec
add
jmp
xchg
retf
jge
sbb
fcom
loopne
cmps
xchg
test
sub
mov
push
cmps
and
in
add
and
aam
fcom
xor
(bad)
lea
mov
add
out
int3
push
xchg
push
in
shl
das
out
dec
repnz
and
adc
push
adc
and
inc
mov
mov
fsub
xor
fisttp
imul
fcompp
adc
fcomp
fcmovbe
loopne
xlat
(bad)
pop
(bad)
repnz
shl
rcl
ror
call
in
enter
stc
retf
retf
(bad)
(bad)
cld
push
(bad)
stc
clc
sti
clc
cli
retf
scas
cld
in
hlt
idiv
div
lock
repnz
in
out
in
or
or
jmp
std
or
mov
mov
lea
fist
retf
dec
ds
fidivr
pop
inc
sbb
adc
push
xchg
inc
dec
repz
pusha
sub
rcl
jmp
mov
mov
and
or
add
inc
mov
inc
add
mov
xchg
and
lock
jmp
cwd
mov
sbb
iret
sbb
movsx
pop
mov
test
xor
cmps
dec
dec
inc
ins
push
xchg
add
or
cmp
mov
test
or
mov
fcom
jg
fdiv
ins
loopne
mov
mov
add
outs
fnstcw
dec
or
mov
inc
xchg
out
xchg
mov
fcomp
push
pop
pop
aad
inc
lods
adc
adc
mov
cmp
rcl
lock
mov
(bad)
dec
fdiv
loopne
adc
mov
leave
push
stos
adc
or
repnz
jge
in
fdiv
fcom
push
pop
add
daa
xchg
sbb
jp
mov
rcr
mov
add
xor
pop
or
xchg
xchg
rol
sbb
or
lods
and
jp
sbb
jo
sbb
dec
dec
dec
add
push
dec
dec
pop
mov
sub
jp
mov
sub
jp
out
fdivr
sti
aam
leave
pop
aam
fdivr
jp
mov
or
push
(bad)
sbb
adc
or
pop
sbb
nop
daa
push
xor
jp
dec
pop
mov
pop
push
aad
scas
xor
pop
push
push
and
or
and
push
xor
jb
daa
jp
mov
cmp
push
movs
push
sahf
iret
and
fadd
add
dec
loopne
cdq
fs
add
push
ja
call
mov
je
or
xchg
jmp
jno
xchg
xchg
or
call
jno
movs
mov
bnd
mov
movs
imul
mov
mov
pop
cs
dec
aas
ds
nop
ins
outs
ins
outs
cs
push
ins
mov
mov
nop
inc
inc
inc
inc
dec
call
push
jmp
xchg
inc
add
pop
and
adc
sahf
jg
sbb
xchg
(bad)
and
inc
imul
sub
cmp
cmp
mov
pop
or
pop
push
popa
mov
dec
nop
pop
mov
jne
add
adc
mov
inc
add
fadd
mov
cwde
rcr
mov
and
or
mov
push
mov
mov
(bad)
sahf
fidiv
inc
clc
cmp
jne
rcl
add
aaa
adc
and
add
cwde
mov
loopne
inc
add
ret
or
xor
ficom
inc
nop
mov
pop
aam
js
(bad)
int3
cmp
sub
mov
inc
ss
mov
sbb
add
pop
adc
movs
and
adc
pop
inc
add
in
xchg
ds
dec
ret
ss
add
in
pop
jb
data16
jmp
(bad)
jle
loop
cwde
push
adc
enter
sbb
rol
push
adc
inc
sbb
push
or
and
or
mov
cmp
push
sbb
push
mov
fnstenv
pop
adc
jl
adc
xor
cmp
in
data16
out
dec
pop
xor
mov
xor
scas
mov
int3
mov
inc
jbe
pop
adc
mov
xor
fistp
jmp
mov
imul
in
mov
dec
inc
inc
enter
adc
jmp
xchg
mov
inc
sbb
dec
adc
and
add
push
pusha
es
rcr
rcr
nop
and
sub
push
cmp
pusha
sbb
add
xchg
dec
std
xor
lea
dec
movs
imul
and
mov
fcom
xchg
pop
sbb
pop
xlat
fild
inc
jecxz
je
mov
sbb
xchg
sbb
or
mov
pop
dec
push
or
loopne
adc
push
out
retf
lahf
and
mov
push
jb
jg
pop
(bad)
add
jp
or
xchg
lock
push
push
ins
adc
xchg
dec
mov
or
and
arpl
sub
or
nop
pop
lock
inc
pusha
jne
aas
xor
adc
push
fadd
in
sahf
sub
rol
fcom
pusha
add
jne
pop
or
ret
sub
and
dec
or
push
xor
jle
mov
mov
inc
adc
clc
and
pop
dec
cmc
xchg
fcom
(bad)
push
or
add
rol
sbb
fadd
lock
test
clc
and
dec
ins
jmp
inc
push
inc
clc
je
add
sbb
sar
pand
jle
cmp
push
push
and
jecxz
push
pop
cmps
mov
adc
push
je
push
ins
cwde
pop
add
arpl
adc
out
sar
cmps
(bad)
pop
jecxz
neg
push
xchg
(bad)
and
sub
inc
pop
leave
loopne
fidiv
pop
sahf
cld
ret
adc
add
jg
cmovne
jg
inc
cmp
mov
and
jo
ins
push
rcr
fcom
in
pop
ss
rcr
push
icebp
mov
add
sti
cmp
or
and
(bad)
pop
call
push
inc
xor
adc
mov
pop
dec
cmp
jb
cmp
popa
ins
lods
jae
fcom
cmps
enter
xchg
adc
aaa
push
inc
jb
(bad)
fsubp
fidiv
pop
xor
js
fnstcw
push
repz
lods
push
lods
lds
cmps
bound
mov
nop
push
push
clc
cmp
jbe
mov
push
push
ins
pop
xor
or
mov
sub
iret
xchg
jle
lock
call
and
push
movs
xor
mov
outs
and
pop
jae
mov
add
xchg
cli
fisttp
ins
test
test
mov
mov
enter
js
pop
int
push
add
inc
fcom
xchg
aam
test
popa
add
lds
repnz
mov
std
add
inc
dec
sub
inc
cdq
push
pop
add
sub
add
push
sahf
pop
jp
dec
out
push
cld
shl
xor
movs
shl
in
mov
push
cmp
add
push
cld
push
push
loop
xchg
popa
jno
pop
or
les
mov
jo
pop
pcmpgtd
push
push
jmp
in
fs
lods
loopne
test
push
sub
sahf
clc
or
stos
adc
sbb
lock
push
ins
mov
ins
fs
fsubr
or
(bad)
xchg
scas
leave
ror
inc
xor
pop
push
in
ror
or
push
cmp
or
push
or
fcmovnbe
loopne
jo
popa
fwait
cmp
dec
pusha
pop
rol
test
bound
das
or
dec
dec
add
je
clc
mov
dec
arpl
daa
inc
mov
pop
call
cdq
in
add
cmp
jecxz
jmp
pop
jo
push
lock
lds
adc
pop
pushf
mov
mov
sbb
aam
xor
out
xor
mov
sbb
cld
cmp
adc
inc
clc
cs
or
push
or
add
xchg
jae
add
loop
fsubr
push
jo
loope
test
ins
mov
mov
push
push
adc
loop
adc
xor
inc
js
add
ret
jb
in
push
add
imul
mov
inc
adc
push
test
push
enter
and
or
jl
adc
test
test
test
arpl
rol
xor
inc
hlt
push
sti
nop
add
push
mov
cmp
lea
in
add
loopne
ins
push
or
lods
or
xor
(bad)
retf
mov
jmp
add
aad
(bad)
mov
call
sub
rcr
stos
inc
gs
sub
inc
add
lock
add
push
push
pop
aas
or
adc
xchg
mov
xor
in
sbb
mov
or
inc
add
xor
mov
nop
clc
in
je
bound
(bad)
fidivr
mov
clc
push
add
mov
sbb
mov
cwde
dec
es
or
add
into
clc
sbb
push
pusha
mov
aam
dec
fistp
sbb
and
or
dec
sub
lahf
fiadd
add
push
mov
call
clc
call
icebp
in
popf
dec
push
mov
call
sub
jge
jb
(bad)
pushf
dec
fwait
sbb
movs
repnz
clc
dec
(bad)
sbb
push
lea
jnp
mov
stc
fsubp
jle
rcr
cmp
jae
cdq
mov
push
add
dec
push
inc
mov
mov
dec
arpl
or
xchg
and
in
add
add
ret
(bad)
hlt
add
mov
pop
push
cld
lods
add
pop
push
lods
fadd
sbb
je
test
jb
popa
test
call
and
aas
dec
or
jl
cmp
xchg
jmp
ret
xor
or
sahf
test
adc
xor
aam
or
sbb
add
inc
mov
aas
add
and
and
movs
mov
loopne
and
sbb
sub
inc
inc
imul
pop
dec
pop
icebp
ror
(bad)
cmp
mov
mov
shr
adc
mov
push
adc
mov
mov
sub
dec
dec
fld
movs
mov
popa
push
shl
cmps
mov
inc
push
adc
and
pusha
imul
mov
in
sbb
cmp
sbb
fdiv
pop
sub
repnz
jne
xchg
(bad)
jle
lods
jnp
repz
ficom
nop
rcr
pop
(bad)
repnz
call
int
xchg
pushf
clc
fcmovbe
fcmove
(bad)
repnz
(bad)
iret
rcl
fcom
mov
(bad)
shl
mov
int3
(bad)
lss
pop
fild
int
test
add
mov
mov
xchg
call
jmp
imul
pop
xchg
cmps
inc
es
sbb
xchg
out
dec
or
sub
or
sub
or
or
sbb
or
xchg
retf
or
leave
out
xchg
movs
pop
retf
sbb
fcomp
cmovnp
pop
nop
sbb
and
int
sub
push
or
xor
xchg
inc
iret
or
or
sub
std
ret
retf
and
xchg
mov
retf
lock
push
inc
or
ret
inc
cmp
and
add
fcom
push
inc
and
cmp
adc
(bad)
dec
lea
lods
shr
pop
mov
das
dec
xchg
add
(bad)
mov
enter
scas
cmps
in
ret
test
add
mov
fld
pop
and
add
retf
jp
cmp
add
retf
sbb
mov
cmp
adc
ins
adc
sbb
jecxz
mov
daa
cmp
pop
mov
push
dec
cmp
or
mov
aam
fdivr
pop
jge
addr16
lea
repnz
rol
and
sub
pop
or
and
or
inc
and
or
or
inc
push
sbb
inc
dec
pop
dec
punpckhwd
or
sbb
xor
in
test
mov
ret
das
arpl
inc
dec
lods
sbb
dec
push
add
push
lods
rcl
lea
(bad)
call
ror
add
dec
mov
sbb
xor
fwait
add
jbe
mov
out
fs
add
cmp
push
pop
in
jge
inc
fadd
leave
pop
jae
mov
ss
js
ret
cmc
push
push
fs
(bad)
fcom
sub
sub
xor
les
sbb
inc
push
adc
sar
dec
push
jnp
loopne
adc
sar
ds
inc
push
rcr
add
fld
stos
add
xor
clc
cmc
push
jnp
punpckldq
ret
inc
sbb
mov
movs
cmp
add
pop
dec
xchg
mov
push
movs
or
add
aam
push
push
add
mov
inc
fs
cwde
sbb
sub
inc
sbb
in
sbb
or
fiadd
mov
loopne
inc
movs
mov
popa
xor
inc
cmp
nop
mov
inc
mov
daa
clc
dec
cld
rol
jns
dec
int3
pop
push
cmps
lock
js
push
aam
push
sti
push
inc
out
xchg
sbb
test
sub
xchg
aad
in
or
mov
sub
in
int3
sbb
movs
aaa
xlat
and
and
out
jne
and
push
push
sbb
sub
push
mov
push
push
dec
rcr
cmps
div
sbb
mov
je
pop
pop
add
cmp
movs
or
rcl
leave
fwait
or
rol
sub
int3
mov
enter
test
or
mov
mov
out
sub
jge
sbb
and
sub
sbb
iret
sub
mov
test
lods
and
shr
mov
(bad)
inc
or
push
sahf
pusha
enter
sub
ins
sahf
dec
ror
shr
mov
nop
cwde
sub
dec
mov
les
dec
jmp
xchg
jb
sub
stc
out
jg
call
adc
mov
mov
mov
scas
sub
das
hlt
mov
jmp
sahf
jnp
es
aas
xchg
ret
xor
cmp
sub
pop
ret
pop
mov
movs
mov
mov
jnp
loopne
jnp
jns
int
jnp
xor
xor
add
mov
push
call
add
enter
mov
add
add
lods
pop
faddp
mov
push
push
push
ret
xchg
inc
adc
mov
xor
ret
add
xchg
scas
loopne
repnz
push
mov
out
adc
iret
retf
movs
jnp
and
push
add
push
push
jg
cmps
stc
in
cwde
mov
pop
in
adc
xor
rcl
mov
xchg
jg
jle
jae
repz
or
repz
pop
push
or
pop
sub
pop
pop
iret
adc
aas
nop
adc
retf
pop
(bad)
sti
adc
adc
stos
cmps
mov
loop
mov
cld
in
jno
sbb
stos
loop
and
lods
movs
mov
jl
ds
ret
cmp
retf
add
dec
or
mov
sub
mov
in
mov
fucom
jb
loopne
xor
icebp
xor
das
cmp
loope
sbb
xchg
cvtps2pi
jle
or
mov
mov
or
loopne
push
dec
sbb
retf
or
movs
and
and
cmp
lods
movs
inc
add
add
dec
vmwrite
mov
cdq
pusha
pusha
pusha
and
adc
das
or
or
sbb
or
sbb
sbb
inc
push
mov
add
cmps
ds
pop
or
mov
and
pop
add
test
enter
add
push
push
adc
jnp
mov
inc
or
and
int
mul
cwde
ja
je
mov
cld
cmp
dec
shl
or
add
popa
or
adc
retf
(bad)
sub
mov
and
xor
or
or
enter
cmps
xchg
pop
add
add
shl
fidiv
xor
lods
aam
pop
es
dec
fs
xor
or
dec
inc
jl
cmp
ins
lds
jmp
push
int
lods
mov
icebp
sbb
or
add
add
dec
scas
das
mov
jo
inc
test
pop
(bad)
repnz
scas
mov
stos
pusha
loop
pop
dec
in
mov
jns
lods
pop
dec
and
sub
sub
sub
test
rcl
inc
cmp
repz
pop
and
add
call
and
in
adc
inc
js
push
dec
in
add
pop
leave
sub
nop
or
in
and
mov
push
imul
add
xor
inc
inc
sti
ret
rcr
aam
bnd
mov
push
jae
add
or
repnz
cdq
fsubr
repnz
ins
xor
push
or
mov
adc
fsub
enter
mov
loopne
aam
xchg
sub
bnd
(bad)
mov
je
and
icebp
jbe
xchg
or
cmp
shl
or
imul
xor
mov
xor
setns
push
es
popa
push
in
pusha
add
in
lods
jl
fwait
add
or
les
push
sub
in
hlt
(bad)
adc
jge
repz
xor
mov
rcr
pusha
add
dec
add
pop
add
or
retf
ror
dec
lods
and
cmovne
pop
add
int3
nop
and
add
add
pop
stos
mov
ss
sub
stos
and
add
loopne
mov
sar
(bad)
cmp
mov
std
ins
add
sbb
hlt
sbb
push
int3
fsubr
inc
push
imul
mov
aaa
pop
stos
adc
add
adc
push
sub
cmp
shl
ss
adc
or
xor
add
sub
jge
and
inc
push
in
sbb
jae
pushf
aam
add
add
in
pop
test
aas
and
test
push
fbstp
retf
and
xchg
into
mov
pop
pop
pop
test
sub
out
retf
call
retf
movs
iret
push
jns
mov
sbb
pop
xor
dec
imul
push
pushf
sbb
mov
subps
cs
xchg
mov
gs
inc
test
adc
cmps
mov
int
nop
push
imul
test
(bad)
sbb
jne
call
fldenv
loopne
loop
int3
movs
popf
movs
xor
add
mov
mov
cmp
sbb
and
xor
imul
push
jb
jno
mov
dec
sbb
or
xchg
and
add
add
jae
adc
loop
mov
pop
cmp
(bad)
jl
or
and
inc
fisttp
lock
and
adc
int3
xchg
scas
jl
retf
mov
cs
in
push
fdivp
push
cmps
sbb
adc
cwde
shl
cmp
add
push
cmps
jmp
add
jmp
out
jb
mov
mov
inc
dec
pop
inc
sbb
xchg
dec
loopne
sbb
mov
mov
adc
pop
rcr
ds
dec
xor
ds
test
mov
out
bound
sub
inc
pop
fdivr
ins
push
addr16
or
popa
inc
cmp
cmp
cmp
sbb
inc
es
popa
push
test
fs
es
test
out
ret
fwait
xor
push
sbb
mov
scas
adc
leave
ins
sub
enter
sub
pop
push
in
fisubr
xor
cmp
sub
ins
(bad)
or
and
dec
jge
fwait
xchg
sahf
mov
inc
pushf
sbb
or
sub
jo
push
test
clc
mov
sbb
xchg
xor
outs
add
xor
ins
fimul
add
aas
sub
sub
cld
sbb
test
ret
adc
mov
push
xor
sbb
xor
cmps
add
cmp
jbe
xor
dec
movs
rol
iret
xchg
mov
dec
call
add
ds
push
xchg
dec
add
jl
pop
xor
pop
push
and
leave
sub
outs
mov
mov
cmp
xchg
xchg
or
jb
xchg
(bad)
fs
inc
xchg
pop
mov
sbb
adc
mov
jne
test
mov
inc
popf
enter
mov
ret
mov
enter
leave
inc
dec
dec
mov
mov
or
and
pop
enter
(bad)
fdiv
inc
xchg
inc
sahf
int
ror
aam
dec
or
dec
cs
call
mov
sbb
mov
push
or
sub
test
shr
xor
(bad)
cmp
repnz
mov
mov
jl
jl
test
add
test
stos
mov
cmp
xchg
push
sub
cmp
stc
retf
mov
aas
mov
cmp
push
sahf
cmp
scas
inc
sbb
mov
stos
(bad)
sti
xchg
jg
inc
mov
mov
mov
dec
cmps
in
cmps
mov
push
cmps
ret
xchg
sbb
mov
mov
js
test
mov
dec
vmwrite
ins
cmps
xor
dec
cs
int3
jg
je
iret
enter
js
jp
cmp
xchg
ins
jo
jl
addr16
std
test
adc
stos
(bad)
xor
jg
divps
add
or
sbb
movs
adc
cwde
(bad)
jle
fild
stos
mov
jmp
movs
loop
cmps
mov
mov
lods
mov
loop
mov
pop
(bad)
cmp
mov
mov
loop
stos
mov
lock
mov
lods
adc
data16
bound
sub
repnz
ds
mov
push
push
cmp
int3
rcl
(bad)
in
fcomp
loopne
loop
out
out
xchg
add
jmp
jmp
movs
mov
cmps
clc
sub
cmp
cld
jge
jge
(bad)
dec
push
xor
adc
iret
nop
mov
xchg
mov
fs
stos
and
xchg
xchg
adc
xchg
(bad)
(bad)
repnz
lock
cmp
cli
xchg
(bad)
repnz
out
and
and
repz
retf
jg
repnz
xchg
sub
out
repz
hlt
repnz
cmc
das
push
cld
std
xor
repnz
hlt
adc
lock
cmp
es
or
pop
mov
xchg
das
pop
ret
fbld
jo
(bad)
pusha
mov
repz
cmp
(bad)
ret
jge
enter
cmp
mov
sub
mov
(bad)
repnz
dec
es
test
adc
adc
inc
mov
repnz
jmp
dec
mov
lods
lods
dec
stos
lods
movs
loop
and
loopne
push
push
pop
add
mov
pop
nop
sbb
lahf
dec
inc
nop
pop
add
pop
xchg
push
daa
pusha
xchg
lods
mov
sbb
loop
push
mov
adc
loop
jo
mov
enter
loopne
repnz
mov
xchg
jl
cld
jnp
cdq
ins
test
xchg
scas
sub
mov
xchg
mov
and
imul
(bad)
cwde
loop
lods
mov
lods
loop
dec
lods
cmp
cmps
arpl
int
out
lods
lahf
mov
out
into
(bad)
mov
sbb
mov
pop
pusha
test
popa
mov
pop
test
pop
call
sub
or
enter
int3
dec
mov
xorps
mov
fsub
retf
jg
mov
lods
lods
out
loopne
mov
and
in
call
add
pop
outs
jne
lahf
cld
pop
sub
movs
cmp
sti
xor
lahf
push
add
xchg
mov
movs
lock
div
hlt
cmps
clc
cmps
push
repz
jnp
jg
leave
dec
(bad)
fwait
pop
dec
mov
mov
mov
cld
repz
sti
inc
cs
retf
(bad)
(bad)
std
cld
sub
test
test
dec
dec
mov
cli
jle
repz
jle
test
jle
pop
cs
mov
push
in
add
daa
int
sti
add
pop
push
xchg
and
push
add
push
jle
out
inc
inc
mov
mov
or
repz
pop
dec
or
or
mov
pop
pop
pop
add
push
pop
pop
stos
adc
adc
push
or
push
popf
mov
mov
add
and
mov
and
add
out
pop
adc
push
sub
(bad)
pop
add
mov
mov
push
xchg
retf
cmps
sub
pop
add
frstor
add
sbb
push
rcr
xor
add
push
imul
repnz
and
push
add
and
mov
adc
loope
loop
in
cmc
inc
sbb
daa
push
fmul
in
dec
pop
pop
mov
add
rol
je
jp
in
add
nop
or
add
pop
jle
pushf
sbb
inc
inc
or
mov
push
adc
add
adc
addr16
ret
jbe
sbb
mov
or
lods
fisttp
cld
or
inc
jae
imul
fs
sbb
xchg
mov
cmps
dec
sbb
or
and
or
adc
add
mov
into
adc
push
jle
and
test
xor
iret
aam
adc
pushf
xchg
pop
pop
les
sub
or
add
nop
fmul
xor
call
pusha
(bad)
push
add
inc
cmp
sub
movs
or
cmp
and
inc
adc
or
sub
adc
jmp
xchg
and
cmp
mov
mov
mov
jle
repz
sub
push
jle
jle
imul
aaa
or
push
test
in
jne
cmp
push
loop
fist
sbb
mov
scas
sbb
mov
cld
and
cmps
clc
loop
out
mov
inc
mov
fisttp
jg
out
pushf
xor
push
xor
sub
pop
jle
xchg
loop
xor
loop
sahf
mov
cmp
cmp
inc
cmps
cmps
mov
mov
mov
ds
in
adc
mov
push
loop
mov
mov
pop
mov
in
sbb
jg
jl
xchg
mov
jl
or
pusha
fs
dec
xor
jns
ins
mov
movq
jo
jle
call
js
in
jl
cmp
xor
jecxz
stos
lods
mov
rcr
cmp
movs
repnz
test
test
xor
fidiv
nop
jne
aaa
jle
jle
xchg
adc
mov
mov
mov
movs
loop
or
or
les
adc
mov
int3
aas
jle
cmps
in
or
mov
fistp
loopne
mov
add
adc
mov
sub
(bad)
mov
push
stc
retf
pop
mov
rol
cld
iret
xchg
out
pop
(bad)
mov
jb
mov
and
jl
xor
lock
retf
daa
movs
push
test
sbb
test
test
test
xlat
sbb
shl
mov
add
inc
xor
xchg
xor
xlat
int3
pusha
or
retf
pop
dec
rcl
inc
ins
cld
sub
xchg
push
add
or
push
xchg
out
add
(bad)
push
cdq
movs
pop
fld
cmp
out
ins
outs
push
push
push
pop
or
xor
jmp
imul
rol
mov
adc
inc
dec
in
nop
pop
add
pusha
fadd
xor
cmp
cmp
movs
add
rcl
xor
ds
imul
xchg
outs
adc
adc
sub
mov
inc
push
ror
push
shl
inc
loope
xchg
in
mov
mov
movs
jnp
add
or
dec
or
out
jge
ja
mov
jle
movs
ds
inc
mov
mov
inc
sub
add
inc
js
lea
jle
xchg
add
js
or
test
pushf
adc
push
ret
cmp
add
call
xchg
or
inc
rol
rol
les
mov
clc
mov
je
test
jp
test
inc
mov
add
mov
inc
cli
enter
call
adc
push
push
sti
ss
jae
pop
add
clts
sub
nop
inc
push
mov
xor
jmp
test
ins
add
adc
in
or
and
adc
test
jne
call
or
in
add
fsub
add
fcom
or
rcl
mov
lea
dec
es
or
or
daa
nop
xchg
mov
xchg
or
dec
pop
retf
and
les
xor
xor
and
inc
das
and
push
in
dec
add
or
(bad)
std
add
add
pop
pop
lods
add
sub
inc
cmp
sbb
pop
pop
push
(bad)
adc
or
pop
add
int3
ret
je
jnp
cmp
jb
aas
adc
pop
or
and
cmp
add
sub
lock
xor
sbb
push
adc
jp
daa
sub
inc
loope
dec
dec
int3
mov
xchg
cmp
adc
jp
add
sub
inc
adc
xchg
push
mov
xor
jecxz
push
leave
pusha
test
fidiv
add
or
inc
adc
idiv
add
adc
push
pop
das
push
push
clc
fs
lock
push
jmp
inc
je
dec
jmp
fcomp
xchg
or
cmp
add
sub
push
xor
adc
inc
and
data16
and
pop
movs
inc
cmp
jl
cmc
add
add
push
and
jg
int3
js
inc
rcl
loop
sbb
fsub
fdiv
test
cmp
loop
ja
mov
pop
sub
aas
adc
add
sbb
sbb
mov
mov
cmps
and
add
ror
lock
sbb
test
push
mov
(bad)
cmp
adc
mov
ror
lock
rcl
or
xor
add
inc
lea
pop
out
xchg
int3
es
stos
mov
pop
xchg
jge
pop
clc
mov
(bad)
test
pop
bnd
adc
ret
dec
xchg
push
lea
add
fsub
pop
inc
repnz
je
rcl
inc
or
jmp
push
imul
les
mov
push
fsubr
or
xchg
xchg
or
fcomp
fsubr
call
add
xor
test
xchg
out
les
mov
repnz
cld
cs
push
dec
dec
sar
ins
xchg
sahf
add
adc
mov
adc
jle
(bad)
sahf
cmc
mov
xchg
or
or
mov
inc
mov
daa
pop
mov
dec
xchg
call
push
fcomp
dec
cmp
leave
adc
and
push
leave
push
mov
mov
push
or
les
mov
test
cmp
bound
or
lock
stc
sub
movs
or
sahf
stos
or
int3
enter
adc
add
mov
ja
xchg
mov
cmp
(bad)
push
mov
out
sub
or
rcr
clc
mov
or
dec
jg
in
push
xor
add
jg
jl
pop
cmps
inc
inc
adc
loopne
fcom
add
std
adc
adc
mov
dec
daa
jmp
push
cs
inc
lods
mov
mov
inc
movs
and
mov
aam
pop
add
pop
adc
add
dec
sub
sbb
push
ja
shr
mov
adc
test
call
add
or
leave
add
add
lods
int
add
xchg
les
call
loope
mov
push
(bad)
xchg
cmps
daa
add
push
in
push
mov
xor
mov
mov
shl
push
push
sub
or
dec
mov
add
or
xchg
sbb
mov
rol
mov
add
xchg
or
ret
stc
(bad)
push
and
xor
jecxz
rcl
(bad)
push
xlat
and
xor
add
pop
and
enter
in
push
fs
sub
sbb
and
nop
sub
sub
inc
push
nop
int3
sub
js
repnz
lea
xchg
sub
pop
mov
jmp
das
xor
or
xor
or
orps
adc
dec
out
cmps
loopne
hlt
pusha
mov
ret
add
and
movs
mov
pop
pop
(bad)
shl
xor
mov
xor
ror
lods
xlat
inc
mov
mov
push
mov
or
inc
out
sahf
call
cmp
ss
sar
xor
fmul
test
movs
aam
push
pop
ror
sub
push
jo
push
and
fld
aaa
add
xchg
inc
and
cmp
sub
cmp
adc
hlt
add
jbe
ret
xchg
dec
dec
push
lods
test
xchg
out
leave
cmp
push
cmp
mov
push
mov
or
cmp
xchg
xor
movs
cmp
test
push
leave
push
lods
es
push
not
lods
cmp
call
add
mov
push
or
xlat
add
in
mov
mov
adc
add
leave
push
or
mov
or
test
push
shr
cmp
dec
xchg
or
sbb
fadd
or
ds
shl
test
mov
add
cmc
push
add
push
push
mov
mov
push
adc
cmp
mov
aas
pusha
ret
pop
rcr
cmp
inc
xchg
data16
mov
mov
inc
mov
mov
jo
mov
leave
push
xor
adc
xor
or
xchg
and
inc
test
inc
in
dec
cmps
xchg
or
test
inc
movs
jo
xchg
inc
retf
test
jmp
and
inc
xchg
add
mov
pushf
test
sub
cmp
adc
imul
or
adc
adc
sbb
inc
call
mov
xor
sub
adc
or
(bad)
iret
dec
in
leave
xchg
dec
dec
or
inc
es
pop
dec
sub
ss
stos
dec
mov
or
inc
xchg
sub
adc
jmp
push
mov
sbb
repz
jb
dec
in
repz
out
adc
in
xor
ds
jmp
sub
sbb
sti
lock
repnz
icebp
lock
xchg
retf
inc
inc
inc
inc
es
jns
aas
or
or
(bad)
mov
mov
jg
std
mov
xor
jg
mov
out
sub
and
test
mov
mov
movs
jb
or
scas
push
(bad)
rdmsr
and
retf
push
or
retf
movs
pop
pop
pop
pop
and
scas
adc
and
adc
adc
adc
or
pusha
inc
push
cmp
mov
mov
mov
sub
push
sub
mov
adc
mov
(bad)
sbb
repnz
jne
clc
cmps
std
sbb
mov
cmps
pop
inc
sub
add
jae
sbb
icebp
push
clts
imul
ins
test
ins
ret
imul
mov
inc
aas
test
in
lea
dec
and
xor
and
and
xchg
xor
jno
ds
lea
test
test
and
push
lds
lock
in
enter
mov
sub
xchg
retf
sub
sub
sub
jns
js
xlat
pop
inc
std
in
pop
push
sub
mov
icebp
sub
icebp
jmp
jmp
outs
loopne
pop
sub
adc
sub
lahf
aas
mov
mov
cli
mov
int3
ret
xor
in
cdq
loopne
hlt
ret
xor
jb
or
xor
dec
in
cmp
cmp
push
mov
xchg
inc
fld
addr16
mov
xor
aas
cmp
jg
mov
inc
pop
xor
ins
jg
loop
adc
push
jecxz
mov
lods
lods
dec
push
jg
aas
sbb
loop
pop
jg
ret
mov
int3
popf
test
hlt
jbe
pop
adc
jg
xchg
xchg
adc
pop
in
cmp
pop
repz
neg
pop
jb
or
pop
test
test
stos
test
cmp
ret
retf
aas
adc
pop
pusha
cld
xchg
inc
push
fs
dec
dec
popa
cmp
jg
jg
inc
(bad)
xchg
js
jl
loop
xor
das
cmps
jg
mov
inc
push
jg
test
pop
mov
mov
mov
movs
mov
icebp
jb
dec
cmc
jg
cmps
ret
mov
mov
sbb
nop
jl
mov
fstp
repz
cs
jg
xchg
xchg
inc
inc
ins
test
bswap
jg
mov
pushf
jl
xor
push
mov
adc
cmp
test
popf
or
mov
mov
jl
jg
mov
push
inc
sahf
popa
pop
loopne
loopne
jg
mov
idiv
mov
mov
pop
xchg
cmc
xchg
xchg
mov
stos
jg
int3
int3
not
lock
inc
cs
and
enter
in
shl
ret
or
in
rcl
mov
adc
and
push
mov
mov
cdq
push
mov
add
mov
xchg
cmp
lods
fs
xchg
clc
mov
enter
(bad)
sub
mov
adc
sub
fild
or
fild
cmp
dec
adc
jmp
lods
mov
push
mov
dec
cdq
popa
nop
shl
rol
mov
cmp
xor
mov
jo
push
movs
jb
test
test
fs
inc
test
test
lds
fs
or
mov
push
inc
rcl
leave
popf
ret
or
xchg
xchg
sub
inc
enter
or
mov
push
js
cwde
or
adc
sub
sbb
enter
adc
popf
xchg
mov
imul
outs
mov
or
xchg
inc
cwde
repz
pop
add
push
mov
pop
test
imul
mov
push
jbe
sbb
pop
mov
jmp
lahf
iret
addr16
or
sub
gs
pushf
pushf
cwde
cmp
jmp
dec
mov
fcomp
xor
xchg
bound
sahf
cmp
dec
jg
jg
jg
call
ja
adc
mov
retf
jg
jg
xchg
and
dec
int3
dec
repnz
xchg
mov
inc
stc
push
repnz
mov
adc
and
mov
xchg
lock
sub
push
dec
push
jb
push
add
lea
xchg
shl
add
repnz
inc
std
add
add
inc
fistp
cdq
xor
mov
cs
inc
movs
mov
call
mov
out
mov
loop
sub
push
add
or
pop
sbb
dec
sti
adc
call
fnstenv
add
push
add
out
push
dec
push
(bad)
push
sub
and
lock
mov
mov
cmp
(bad)
cld
int
in
lock
mov
jge
pop
mov
add
ror
mov
and
sbb
call
or
mov
daa
fidivr
sub
jo
sub
push
pop
mov
or
inc
movs
movs
inc
pop
or
enter
loopne
retf
jge
mov
sub
pop
enter
push
and
and
cmp
jmp
pusha
adc
repnz
inc
cmp
and
add
ret
cmp
ret
jb
xchg
cmp
(bad)
adc
lds
inc
and
and
push
or
xchg
inc
bound
xchg
mov
stos
add
leave
sub
cmp
and
sbb
xchg
add
adc
mov
cdq
xchg
add
rcl
pushf
dec
sbb
jne
leave
rcl
mov
in
inc
sahf
pushf
sub
or
data16
das
sub
mov
or
adc
bnd
cmp
mov
mov
pusha
add
pop
xchg
inc
dec
call
xor
and
sar
mov
xlat
jmp
retf
inc
pop
nop
xchg
pop
ins
int3
mov
jg
je
ret
ror
lods
xor
les
add
std
pop
das
dec
adc
add
mov
or
dec
inc
sahf
sbb
fs
xor
nop
das
nop
je
in
addr16
je
nop
cld
sbb
xor
or
mov
xor
mov
sbb
cmp
arpl
xor
nop
pop
jb
mov
pop
and
mov
out
ss
pop
adc
push
pop
dec
inc
cmp
nop
cmp
cmp
dec
sub
xchg
mov
cld
jno
ins
cld
(bad)
mov
sub
xchg
shl
inc
int
mov
inc
js
ins
dec
cmp
mov
inc
sbb
rol
(bad)
push
jmp
cmp
in
mov
aas
into
retf
push
pop
repnz
dec
dec
adc
ficom
test
mov
enter
mov
xor
jo
jmp
push
xor
xlat
repz
cs
lock
inc
mov
neg
inc
inc
fdiv
xchg
sub
jmp
cmps
adc
pop
inc
sbb
lahf
push
test
or
xor
inc
and
mov
xchg
dec
inc
jo
ret
inc
popa
imul
iret
adc
dec
out
sbb
lahf
dec
xor
dec
into
enter
dec
push
jg
and
dec
inc
(bad)
data16
lds
call
int3
dec
xor
fs
dec
push
aad
adc
push
dec
and
push
mov
add
test
cmp
mov
dec
movs
stc
add
test
push
pop
popa
movs
cmp
test
inc
daa
int
shl
xchg
sbb
test
test
push
cmp
mov
aad
pop
push
mov
shl
xchg
in
mov
mov
xchg
mov
xor
mov
xchg
jno
push
mov
std
sbb
fs
pop
push
mov
push
mov
inc
add
cs
mov
fadd
popa
mov
ret
mov
xchg
mov
loop
push
push
jne
ret
jo
fimul
rcl
cmp
cmp
push
aad
push
fst
mov
push
rcr
mov
cmp
mov
dec
sti
pop
or
adc
adc
pusha
sbb
jno
push
add
push
rcl
call
(bad)
mov
sbb
adc
or
clc
xor
jmp
in
sbb
xchg
or
dec
cwde
xchg
jmp
cmp
test
es
pop
add
cmc
and
cmp
or
(bad)
dec
mov
pop
(bad)
out
nop
sbb
pop
out
fsubr
imul
mov
mov
push
pop
mov
mov
pop
lods
imul
dec
mov
aaa
ja
je
mov
mov
neg
ins
add
jne
loopne
pop
sub
je
sbb
shl
xchg
idiv
adc
cmp
jle
test
dec
sbb
cmp
mov
pusha
fwait
xor
rcl
cwde
pop
xor
das
movs
xor
pop
ss
jae
pop
mov
add
imul
loopne
push
adc
pusha
test
je
les
pop
inc
leave
push
pop
pop
and
add
pusha
push
dec
aad
sbb
mov
aas
(bad)
(bad)
in
jl
sti
(bad)
lock
mov
in
dec
(bad)
adc
dec
xor
adc
add
mov
mov
int3
or
lods
push
inc
loop
fucomi
ret
add
out
pop
rcr
test
mov
sub
loop
in
adc
cmp
inc
xchg
inc
cmp
test
xor
pop
mov
movs
rol
call
nop
dec
jg
xchg
bound
dec
dec
mov
movs
movs
add
(bad)
mov
add
and
push
xchg
add
movs
jb
push
push
push
jns
nop
xchg
mov
cmps
retf
movs
jb
pop
pop
push
movs
xor
add
adc
mov
pushf
pushf
or
and
or
pop
or
icebp
pop
sbb
sbb
push
sub
xchg
aas
cwde
push
dec
sahf
nop
cwde
adc
mov
adc
adc
or
sbb
popa
adc
and
arpl
or
cld
out
xchg
mov
lods
mov
retf
add
test
adc
pop
xchg
or
xchg
nop
(bad)
inc
inc
adc
test
and
mov
sub
xchg
test
out
lahf
and
xlat
dec
jle
xchg
pop
mov
adc
daa
mov
xor
sbb
xlat
xor
arpl
ret
lahf
mov
repz
push
mov
mov
movs
repnz
mov
leave
gs
jnp
test
or
sbb
iret
xchg
out
addr16
push
test
jno
(bad)
xchg
nop
lea
add
xchg
adc
dec
or
repnz
dec
js
nop
setb
add
push
push
mov
mov
pop
enter
mov
push
in
sbb
xchg
xor
push
movs
push
movs
xchg
jnp
push
test
cmps
mov
mov
js
retf
jg
setg
lea
and
dec
jle
xchg
mov
push
or
push
sub
in
leave
enter
jo
lods
test
jae
jb
test
rol
and
push
ret
ins
cmp
das
daa
lods
je
lods
jbe
dec
movs
push
mov
dec
movs
repnz
(bad)
mov
sbb
push
mov
jl
xchg
dec
movs
jb
jl
js
sub
xchg
enter
jns
xchg
out
int
int3
enter
or
dec
in
jo
add
add
sbb
rcl
ror
xchg
sar
mov
xor
xchg
adc
aam
inc
lahf
test
add
call
or
jg
pop
icebp
les
xchg
or
test
retf
pushf
in
out
in
inc
imul
xchg
xor
and
movs
cmps
icebp
movs
movs
mov
mov
push
inc
repnz
icebp
sub
add
xchg
shl
push
jne
push
test
xor
add
lods
add
cld
imul
adc
ror
xchg
test
sbb
cwde
rcl
ret
lahf
dec
dec
lods
ins
pop
mov
mov
repz
stc
xor
xchg
xchg
sbb
add
push
sbb
int
daa
dec
mov
xor
sbb
(bad)
sub
adc
leave
in
enter
or
inc
repz
push
xchg
mov
adc
lock
pop
mov
or
pop
add
or
aas
sub
add
push
dec
sbb
rcr
lahf
push
cmp
jge
adc
push
and
daa
xor
out
pop
imul
or
fdivr
clc
jbe
adc
imul
iret
fbstp
dec
push
sub
mov
fisubr
mov
ja
and
sub
inc
and
or
adc
js
shr
xor
adc
sub
call
sbb
icebp
shl
lahf
pop
push
xchg
add
jmp
inc
sub
stc
xchg
sbb
pop
fstp
mov
scas
mov
jle
fcmovne
fidiv
add
call
les
rol
loop
mov
fsubr
cmps
or
jle
fcomp
adc
add
aaa
fs
or
and
mov
imul
push
mov
(bad)
pop
jmp
adc
adc
lock
push
dec
sbb
xor
inc
fdivr
or
enter
adc
mov
ins
mov
jg
dec
mov
retf
movs
jb
iret
enter
div
nop
mov
adc
ret
aas
jo
sub
test
pop
add
and
mov
or
inc
and
mov
xchg
add
jg
and
cmp
pushf
imul
(bad)
fimul
adc
add
das
aad
dec
loopne
sbb
pop
or
stos
push
xchg
push
push
jb
add
jns
pop
add
pop
mov
inc
jmp
or
dec
mov
daa
xor
cmp
add
test
mov
arpl
adc
dec
fst
inc
push
sub
and
and
xor
je
mov
lds
pushf
pop
adc
sbb
adc
dec
mov
mov
pop
sub
dec
jmp
mov
push
mov
lds
ficom
jg
and
das
pop
xor
push
icebp
or
jno
sbb
dec
inc
sub
pop
das
cli
push
mov
hlt
mov
push
dec
imul
inc
xor
repnz
mov
sub
jo
outs
and
sub
lock
jo
imul
jae
and
in
in
xor
push
xor
mov
mov
pushf
add
int
test
aad
cdq
call
(bad)
push
or
lea
adc
lahf
or
mov
aaa
mov
sbb
popa
adc
cmp
pop
dec
xor
sub
add
rol
inc
ror
mov
and
push
adc
pop
xor
adc
dec
pop
and
fisub
lahf
and
add
shl
movs
add
push
jl
(bad)
int
jnp
mov
clc
push
clc
out
pop
callw
add
test
add
mov
add
add
push
mov
inc
mov
mov
adc
loopne
lods
in
scas
jecxz
push
push
mov
sbb
add
sbb
sbb
pop
push
jl
nop
out
fwait
push
mov
mov
add
cld
pusha
and
sbb
sbb
push
pop
fnstcw
add
xchg
add
mov
add
push
dec
xchg
in
xchg
and
add
dec
sbb
inc
popa
fadd
or
cmp
mov
fdivr
sub
xchg
sbb
adc
sub
ret
aad
add
mov
and
lods
outs
adc
add
and
sbb
push
cmps
shr
test
sub
cli
jns
stos
xchg
push
sbb
push
inc
jmp
jo
imul
xor
inc
mov
add
cmp
cmp
jmp
mov
or
call
adc
pop
sub
mov
xor
adc
xor
mov
pop
cmp
push
sub
and
push
adc
cli
inc
push
test
loop
cmp
push
sub
pop
lock
cmp
pusha
mov
adc
jo
aam
sbb
push
leave
adc
rcr
pop
pop
adc
or
add
or
inc
mov
shr
or
test
mov
stos
inc
mov
add
xor
and
xacquire
popa
cmp
lea
sahf
pop
rcr
jo
hlt
mov
hlt
popa
push
xchg
add
pop
rcr
xor
xchg
and
and
mov
or
mov
pop
mov
call
les
es
xchg
add
lahf
dec
js
sar
adc
loopne
popf
and
stos
dec
or
jb
xor
and
adc
inc
rol
xor
pop
les
and
hlt
jnp
xchg
lahf
hlt
popf
and
add
test
or
sub
xchg
inc
repnz
xchg
cmp
mov
stos
mov
pop
loopne
inc
scas
imul
adc
in
pop
test
aad
pusha
mov
rcr
push
push
addr16
rcl
mov
fisttp
inc
and
or
mov
dec
jmp
dec
or
mov
mov
xchg
dec
xor
scas
sysenter
dec
push
js
push
ds
add
push
or
mov
test
xor
setle
and
and
in
in
xchg
dec
add
pushf
inc
jl
mov
xor
lahf
cmps
arpl
ja
dec
sbb
xchg
dec
test
jmp
adc
and
test
nop
sbb
leave
adc
sub
and
bound
test
mov
sub
dec
sbb
jmp
mov
xor
inc
push
mov
mov
mov
push
jmp
lods
inc
je
jmp
push
adc
sbb
mov
pop
shl
mov
pop
jmp
xchg
sbb
add
sub
mov
sub
adc
call
inc
add
sbb
xor
das
cs
add
push
push
or
dec
aas
add
inc
cmps
or
or
retf
dec
daa
inc
repnz
dec
gs
xchg
xchg
push
enter
xchg
xor
inc
and
push
xchg
mov
adc
int3
adc
inc
xor
shr
mov
std
cs
or
push
inc
xor
lea
jg
ret
pop
in
mov
cmps
adc
popf
sub
iret
and
cmp
jecxz
sbb
xor
add
loop
jg
movs
inc
and
fdiv
add
or
in
mov
inc
push
xchg
add
cmp
addr16
or
xlat
inc
repz
cmp
inc
cmp
jns
or
ins
dec
push
nop
xchg
inc
cmp
cmp
cmp
data16
loope
iret
in
cmp
add
inc
sbb
dec
hlt
rcr
clc
jne
mov
lea
cmp
in
mov
or
mov
in
pushf
pushf
lock
jo
add
enter
push
or
add
inc
inc
in
in
inc
cs
dec
es
mov
inc
scas
or
dec
inc
and
imul
jb
inc
sti
or
sar
pop
es
add
add
popf
inc
add
lods
mov
sbb
stos
jno
mov
dec
inc
add
push
jg
in
sbb
cmp
sub
add
movs
push
xor
cwde
xlat
cmp
or
pop
xor
dec
xchg
mov
dec
mov
push
xchg
rol
adc
in
movs
movs
shl
xchg
inc
and
xor
mov
enter
jnp
push
sbb
sub
sub
(bad)
jle
dec
sbb
cmp
sti
sahf
mov
lods
and
push
ret
adc
sub
test
mov
sub
inc
or
mov
mov
je
push
stos
scas
mov
add
idiv
pop
imul
push
pop
inc
shl
sahf
nop
push
push
mov
and
inc
push
push
dec
aad
add
pop
mov
cli
stos
dec
and
jge
inc
clc
pop
pop
push
and
add
lea
push
jle
adc
js
ds
inc
jnp
mov
jl
push
and
ins
mov
adc
and
int3
xor
mov
dec
xchg
and
mul
or
mov
or
pusha
push
push
fs
dec
pop
pop
add
repnz
imul
and
cdq
out
mov
adc
pop
or
das
jg
push
aaa
jo
stos
xor
ror
sbb
cli
call
mov
sub
pop
pop
in
sbb
(bad)
pop
imul
mov
dec
scas
pop
pop
pop
or
test
sbb
nop
add
shl
or
push
xchg
dec
mov
xor
fucomip
stos
and
xchg
dec
mov
push
push
sub
and
adc
enter
dec
sbb
sbb
add
pop
mov
pop
cmp
sub
jle
mov
or
rol
push
sahf
cdq
mov
cwde
leave
fcom
add
mov
add
inc
dec
mov
inc
in
movs
ret
into
pop
or
jbe
stos
mov
cmp
loope
pop
add
test
push
sub
or
push
push
adc
add
cld
add
mov
push
add
pop
or
sub
adc
and
sbb
inc
and
push
cli
mov
rcr
mov
cmps
add
push
cmp
xor
inc
loop
inc
push
dec
adc
retf
rol
lock
les
scas
mov
sbb
test
or
adc
(bad)
repnz
pop
add
jle
and
in
adc
pop
repz
fs
repz
loopne
cmc
dec
sub
loopne
xchg
retf
xor
xor
xor
xor
mov
xchg
retf
aas
mov
gs
cs
repnz
lock
sbb
inc
ret
mov
sub
ud0
retf
hlt
in
mov
mov
cld
stos
mov
scas
(bad)
stos
cmps
lock
add
jg
inc
ret
pusha
pop
aas
inc
call
pop
sbb
cmp
sbb
sti
adc
pop
pop
pop
adc
test
arpl
pusha
cmp
test
adc
mov
sahf
cmp
sbb
and
sub
pop
jns
xor
outs
jb
and
sbb
daa
bound
jg
adc
sub
pop
inc
lock
inc
sbb
inc
nop
nop
retf
xchg
xchg
xchg
nop
(bad)
pop
push
mov
inc
cmp
dec
dec
fidiv
cs
lock
cmps
push
cmps
popf
push
dec
cwde
sets
and
or
mov
mov
in
and
stos
mov
fs
retf
arpl
cdq
mov
gs
push
(bad)
popa
mov
ds
sub
xchg
enter
xchg
push
jb
je
push
mov
bound
js
xchg
(bad)
imul
jl
push
or
cmp
dec
pop
ret
jg
hlt
enter
xchg
test
mov
and
aam
aad
and
pop
inc
push
mov
mov
mov
imul
add
mov
nop
cmps
ret
retf
in
xchg
nop
(bad)
mov
and
inc
sbb
sahf
xchg
xchg
enter
in
mov
mov
xchg
repz
pop
pusha
inc
or
jb
or
xchg
in
in
sbb
mov
add
icebp
cwde
adc
retf
mov
mov
mov
mov
mov
call
in
in
in
retf
test
retf
in
repz
movs
xor
sti
stc
cmp
and
xchg
leave
and
or
mov
pop
enter
fsub
add
fadd
enter
cdq
test
(bad)
out
cmp
mov
lds
retf
mov
mov
mov
and
jg
scas
xor
dec
aam
or
mov
fcomp
pop
sahf
daa
mov
mov
mov
rcr
retf
fwait
sub
lock
adc
fst
xchg
mov
mov
in
xchg
div
cli
or
add
pop
sbb
inc
pop
xchg
adc
pop
addr16
enter
jno
lock
hlt
loop
stos
inc
cld
imul
dec
out
cld
cmps
loop
sub
or
sahf
lahf
shl
add
adc
aas
mov
mov
jmp
inc
or
mov
inc
or
add
add
das
or
lea
gs
in
ss
lock
jg
xor
scas
xchg
xor
sbb
cmp
enter
in
dec
retf
cmp
or
inc
rcr
mov
dec
or
add
mov
adc
sbb
inc
inc
inc
sbb
and
xor
mov
sbb
pop
mov
mov
mov
pop
xchg
add
addr16
push
inc
imul
xchg
mov
push
xchg
pop
push
add
and
and
out
fcomp
inc
pop
mov
xchg
out
xor
scas
add
xor
adc
and
adc
mov
push
dec
pop
or
test
push
popa
es
aaa
mov
scas
inc
or
cmc
lea
cs
mov
push
mov
out
imul
jmp
neg
imul
sbb
mov
or
push
mov
cdq
jp
inc
call
inc
call
and
push
mov
pop
imul
and
xor
inc
cmp
cmp
xchg
cli
gs
jb
mov
ja
sub
or
popa
test
mov
test
cmps
arpl
jae
add
pop
mov
add
inc
cmp
lock
lods
add
popf
data16
call
xor
sub
je
les
xchg
add
loope
add
add
stc
jl
add
mov
add
fs
dec
in
push
push
push
jnp
pop
push
mov
repz
call
mov
adc
repnz
rol
loop
mov
lods
loop
and
lods
movs
sub
mov
adc
stos
scas
mov
(bad)
scas
xlat
adc
outs
test
fistp
sub
pop
inc
xchg
mov
movs
test
mov
addr16
cmps
scas
dec
push
sbb
ja
ss
pop
pop
test
mov
xchg
add
mov
xor
mov
cmp
cmp
jne
aas
pop
inc
dec
jb
inc
or
nop
add
ins
loop
pop
into
cmp
add
mov
popa
sbb
(bad)
ins
or
and
or
fldcw
or
sbb
add
or
push
add
inc
cmc
sahf
nop
test
rcr
clc
push
test
stos
sbb
lods
and
mov
(bad)
jb
aad
jmp
pushf
in
and
cmp
jns
push
add
ja
sbb
mov
xor
test
outs
pop
cmp
dec
lahf
xlat
loop
mov
je
mov
add
jbe
out
adc
pop
jo
sub
and
add
pop
and
jb
pop
or
xchg
jbe
call
gs
xor
add
xchg
mov
xchg
cld
xor
xchg
and
inc
xor
mov
mov
cmps
inc
lds
popf
sub
jg
dec
inc
add
pop
int
add
cmp
int3
push
(bad)
rol
add
push
xchg
add
or
pop
xchg
mov
iret
fld
mov
lea
stos
dec
or
or
xchg
inc
push
push
fidiv
cs
dec
aaa
xor
adc
add
and
jnp
add
fisub
dec
push
sub
or
xchg
add
sahf
ret
xor
iret
and
stos
add
iret
lods
add
and
scas
pop
scas
mov
mov
out
mov
sar
push
mov
and
xor
mov
xor
and
pop
mov
enter
rol
or
add
enter
(bad)
nop
retf
enter
fs
push
int3
int
inc
push
fs
iret
shl
fs
ror
inc
push
aam
int3
xchg
mov
pop
test
dec
pop
repnz
inc
test
inc
and
jns
test
inc
test
push
xor
test
sar
test
das
jns
test
dec
test
xchg
mov
dec
test
dec
lods
sti
test
mov
or
push
push
or
or
push
pushf
nop
retf
push
xchg
xchg
mov
sbb
repnz
sbb
das
jns
xchg
xchg
xchg
adc
push
test
enter
enter
sub
cs
jmp
dec
sbb
or
inc
inc
enter
inc
inc
inc
nop
retf
dec
dec
inc
add
or
in
in
add
nop
out
call
jmp
xchg
xchg
pushf
nop
in
cmp
xacquire
xchg
xchg
and
xchg
xchg
mov
xor
test
xor
add
stos
stos
lods
add
and
lods
scas
scas
pop
jb
sub
das
jns
dec
mov
mov
mov
xchg
mov
mov
mov
mov
sub
mov
jne
cli
popa
mov
jo
clc
jo
enter
movaps
xchg
sub
cli
push
jb
fwait
inc
call
push
outs
pop
scas
and
jmp
or
nop
xlat
and
and
mov
adc
je
popf
push
cmp
(bad)
fidivr
test
mov
mov
aaa
lahf
add
adc
jne
xor
repz
pop
mov
or
xchg
add
ret
push
test
mov
aaa
inc
lods
sbb
pop
mov
ins
sub
push
cmp
ror
(bad)
mov
imul
sub
(bad)
push
or
adc
jns
fistp
add
ja
in
adc
adc
push
mov
(bad)
dec
mov
jmp
mov
sti
inc
adc
adc
add
and
sbb
push
xchg
outs
jmp
jl
mov
mov
jne
repnz
mov
in
push
loopne
mov
xor
push
mov
test
mov
inc
pop
pusha
lds
cmp
lea
sbb
cs
loopne
or
mov
adc
push
push
mov
loope
test
xchg
adc
pusha
fcmovnu
push
push
sub
test
fs
or
mov
nop
ficom
jmp
lock
adc
cwde
lock
sti
adc
stc
mov
lock
xchg
icebp
xchg
cli
in
retf
repnz
sub
sti
arpl
pop
mov
mov
mov
cmc
test
stos
movs
loopne
out
and
mov
in
mov
jge
movs
mov
in
mov
stos
mov
mov
add
pusha
call
lea
lahf
add
mov
(bad)
jge
lea
or
xchg
xor
ret
out
push
les
iret
adc
jecxz
into
mov
xchg
or
ss
inc
pop
xchg
adc
gs
fsubr
inc
inc
or
nop
dec
dec
test
cmp
sbb
jl
add
jo
add
mov
fsub
mov
fnsave
mov
scas
mov
cmp
shl
push
sti
sbb
push
sti
cmp
in
pop
cmp
out
inc
data16
pop
pop
jno
gs
mov
call
repz
xchg
mov
push
leave
inc
push
mov
cmp
mov
sub
adc
mov
cmp
mov
cmp
ret
jmp
test
jb
sub
test
jb
add
int3
push
inc
mov
cmp
mov
or
and
or
hlt
add
lea
ds
xchg
mov
mov
stos
adc
cmp
mov
mov
(bad)
adc
mov
pusha
xchg
lock
xor
xchg
int3
xor
popf
inc
and
and
mov
pop
aam
mov
or
or
push
mov
adc
or
fdivr
aam
es
sub
setns
xor
and
or
lds
push
ja
add
or
call
dec
mov
xor
or
mov
je
dec
push
pop
mov
dec
cmps
add
aad
pop
mov
(bad)
stc
pusha
adc
push
or
ret
lock
or
or
xchg
ss
aaa
adc
add
mov
add
pop
xor
and
inc
add
loopne
or
movs
or
add
mul
inc
cmps
cmp
lods
mov
mov
sbb
push
sub
popa
rcl
cdq
int
ret
ror
jae
lea
shr
fcomp
mov
or
fisttp
int
stc
mov
call
enter
xchg
int3
or
ret
push
pop
pop
and
mov
ret
lahf
cmp
das
pop
xchg
hlt
mov
hlt
pop
push
fdivr
mov
or
rcl
xchg
dec
adc
sub
sub
sub
pop
repnz
jge
xchg
mov
aad
hlt
in
mov
aad
xor
xor
and
stc
fs
pushf
mov
fdiv
fldcw
xchg
inc
fdiv
sbb
cwde
mov
in
retf
leave
fdiv
fstp
cmp
nop
retf
xchg
xchg
mov
jb
nop
icebp
loopne
loope
and
pushf
sbb
xchg
nop
nop
mov
in
in
pop
push
mov
pop
stc
or
xchg
inc
cs
jmp
sbb
inc
mov
leave
inc
in
repnz
in
xchg
dec
test
nop
dec
test
movs
jb
in
dec
dec
dec
sbb
xchg
and
cld
pop
push
mov
push
push
in
movs
adc
das
jg
cmp
jne
jl
jmp
(bad)
lock
test
add
les
sbb
pop
push
push
loopne
leave
call
xchg
inc
push
or
or
pop
sub
and
and
and
xor
or
test
xor
aam
test
push
mov
call
pop
rcr
adc
outs
push
sbb
ret
xor
loop
add
dec
push
or
xchg
loopne
sub
or
pop
int3
add
dec
pop
nop
mov
inc
or
add
ins
add
mov
es
(bad)
movs
add
inc
lea
or
cmp
ins
push
imul
adc
jb
push
xlat
jge
or
mov
in
shr
inc
sbb
aaa
mov
out
aad
cmps
inc
cmp
add
pop
rcr
pop
adc
or
cmp
pushf
std
les
and
and
call
mov
rcr
or
or
and
mov
pop
inc
in
or
sbb
or
nop
sub
add
pop
daa
jae
pop
mov
jb
fnstenv
movs
mov
je
pop
rcl
setle
jle
mov
sbb
cmps
sahf
mov
lds
ins
pop
ret
mov
jg
retf
jo
cdq
mov
mov
pop
sahf
aas
sub
shr
push
jl
pop
aas
and
pop
ins
aas
xchg
jne
fwait
lds
xchg
xor
lds
push
push
mov
hlt
cmc
repnz
jl
mov
mov
mov
adc
mov
mov
xchg
cmp
pop
jno
scas
adc
in
cmp
movs
mov
adc
xchg
out
add
rol
aas
jle
xchg
out
pop
mov
loopne
adc
or
mov
nop
inc
jb
mov
cdq
dec
xchg
int3
and
sbb
add
test
adc
rol
adc
xor
imul
mov
movs
sub
add
repnz
nop
inc
xor
sub
mov
sbb
or
lahf
rcl
adc
add
or
or
sbb
mov
mov
or
in
cmp
xor
mov
enter
clc
popf
std
ret
jg
jne
pusha
push
cld
sbb
inc
in
adc
inc
jle
pop
jle
dec
mov
lds
ds
enter
mov
fs
retf
pop
pop
xchg
xchg
or
pop
push
mov
cmp
pop
pop
mov
stc
jl
inc
mov
jg
popa
mov
repnz
push
mov
out
push
fist
pusha
int
in
bound
jne
push
push
repz
xchg
addr16
repnz
enter
mov
jo
dec
movs
rol
dec
or
add
fimul
in
ins
fdivr
mov
pop
ret
push
mov
(bad)
push
jg
mov
mov
and
mov
and
retf
mov
jge
mov
fistp
jno
les
in
sub
cmp
cmp
int
ds
mov
or
aad
and
js
lea
test
sbb
nop
(bad)
retf
add
loopne
xchg
xchg
or
loopne
(bad)
and
add
test
inc
jle
sbb
cmp
cmp
movs
test
dec
add
push
dec
mov
pop
les
mov
or
int3
pop
add
ss
jle
rcl
test
call
inc
aam
mov
loopne
rol
cld
les
push
add
xor
push
test
adc
stos
jl
mov
xchg
fwait
call
adc
mov
jmp
adc
xchg
or
in
push
enter
pop
mov
sahf
push
and
stos
pop
or
fs
sbb
or
cmps
and
sbb
or
dec
sbb
or
push
fidiv
lea
mov
or
sbb
and
inc
repnz
xchg
je
add
mov
or
loopne
mov
and
xchg
movs
xchg
xchg
jmp
push
cmp
repnz
jbe
pop
dec
movs
jne
retf
push
test
lea
fild
loopne
jbe
ret
jge
retf
in
adc
lock
shl
jnp
js
aam
repnz
jo
dec
movs
lea
repnz
fistp
jecxz
cmps
mov
mov
cmps
clc
mov
mov
in
mov
out
inc
sahf
fild
cmp
cmp
mov
mov
mov
mov
jmp
daa
pop
dec
in
call
xchg
nop
jecxz
xchg
sbb
nop
in
nop
retf
out
in
out
in
vmwrite
xor
mov
gs
mov
retf
movs
xor
repz
test
and
add
scas
aas
pop
and
or
nop
add
sbb
jns
adc
sub
clc
push
jge
sbb
inc
and
inc
rol
sbb
scas
xchg
dec
in
cli
and
and
adc
add
adc
adc
add
and
push
ins
cmp
and
push
or
in
cmp
cmps
(bad)
(bad)
mov
lods
cmp
adc
fdiv
add
les
lods
test
adc
ss
and
lock
push
pop
inc
mov
pop
push
push
adc
out
imul
adc
xor
out
sub
ret
and
jb
jne
in
inc
(bad)
jl
lock
xchg
pop
push
xor
call
sub
or
ret
in
jecxz
aam
(bad)
jge
cmp
add
ror
pop
aam
and
add
sub
retf
dec
adc
jl
xor
enter
or
xchg
xor
cdq
sub
pop
adc
or
push
nop
and
adc
rcr
nop
adc
lock
add
adc
loop
push
push
cmp
xor
or
and
mov
adc
test
and
cld
ss
sub
pop
xor
and
es
fmul
lock
and
adc
adc
push
push
add
jb
dec
sub
add
adc
cmp
push
or
or
aad
(bad)
retf
inc
enter
adc
enter
sub
mov
or
sbb
cmps
cdq
cwde
cmc
mov
in
hlt
hlt
sub
enter
mov
pushf
bound
sbb
clc
clc
sar
push
jmp
mov
stos
test
cmps
mov
stos
cmp
push
mov
pop
popf
push
in
cld
mov
pop
jg
mov
movs
mov
jo
push
jb
mov
mov
mov
bound
sbb
sbb
cmps
test
and
adc
je
pop
mov
pop
sbb
lods
in
add
call
repnz
scas
mov
mov
jns
call
add
lea
and
inc
mov
mov
stc
add
push
push
xchg
push
xor
mov
jl
cmp
pop
or
mov
test
lahf
(bad)
adc
loopne
mov
mov
push
adc
adc
pop
pop
lea
test
retf
dec
das
movs
fld
jl
in
mov
fwait
adc
scas
fdiv
mov
in
fmul
xor
rol
adc
dec
int3
or
and
push
sbb
fsubr
and
ja
jns
add
rcr
das
nop
or
dec
adc
push
test
or
jno
and
sbb
xor
mov
inc
add
adc
xor
dec
push
inc
fdiv
add
in
jmp
repnz
sub
cmps
nop
pop
and
mov
pop
movs
or
inc
adc
pop
in
jl
pop
repnz
in
adc
sbb
and
sbb
imul
push
mov
mov
sbb
or
call
int3
or
les
es
mov
fistp
and
pushf
jo
lahf
adc
nop
retf
in
and
mov
in
sbb
lahf
and
xor
or
rcl
pop
mov
test
stos
adc
dec
in
nop
or
vucomiss
and
fild
add
cmps
lahf
leave
enter
and
lahf
or
add
jb
in
int3
sub
mov
fadd
xchg
inc
sbb
mov
stc
pop
inc
(bad)
jle
pop
fsub
into
sbb
int3
push
xchg
divps
add
or
test
sbb
ins
add
sub
mov
retf
jl
sub
retf
cmp
xchg
aas
or
enter
fist
mov
mov
hlt
hlt
aas
retf
xchg
in
in
mov
inc
xchg
xchg
movs
jb
sub
jmp
inc
inc
ret
dec
sahf
dec
inc
inc
inc
push
dec
push
repnz
in
in
mov
in
mov
push
xchg
dec
dec
test
xor
in
lock
lock
inc
add
cmps
dec
dec
sahf
inc
cmp
cdq
in
lahf
hlt
pop
ds
stc
clc
call
mov
mov
cs
leave
aad
hlt
push
or
dec
and
imul
pop
sub
fidiv
xor
int3
test
add
outs
dec
popf
dec
(bad)
and
bound
call
fild
shl
setno
out
daa
mov
and
jne
sbb
popa
in
dec
retf
imul
push
rcl
push
add
mov
cmp
pushf
dec
(bad)
clc
or
or
fs
sbb
adc
fcom
or
movs
dec
push
pop
out
and
ret
fdivr
or
or
push
push
mov
test
push
push
icebp
or
add
dec
ss
inc
aam
adc
pop
adc
jns
mov
(bad)
retf
mov
mov
jne
xor
dec
call
cmp
sbb
adc
repnz
repnz
mov
inc
adc
inc
repnz
dec
and
xlat
int3
or
mov
mov
or
xchg
adc
in
(bad)
std
adc
lods
stos
mov
sbb
test
mov
or
mov
stos
pop
and
aas
adc
jo
sub
adc
or
lahf
dec
sbb
adc
or
xor
push
loope
inc
or
push
pop
in
xor
add
aad
test
ret
ret
xchg
xadd
in
in
cwde
jo
xchg
sub
nop
xchg
retf
dec
sub
stos
enter
pushf
push
dec
sub
mov
xchg
cmp
mov
xor
xor
mov
imul
in
or
in
jno
shr
mov
movs
xor
xor
xor
leave
enter
push
push
nop
sub
mov
prefetch
xchg
or
leave
and
cmp
nop
xchg
and
adc
mov
add
adc
dec
push
sbb
sbb
cwde
cdq
and
push
nop
push
adc
xor
pop
dec
leave
xchg
or
sbb
jle
sbb
sbb
mov
push
or
dec
sbb
xchg
aam
inc
adc
jg
(bad)
ins
jns
mov
add
lods
test
adc
and
mov
dec
lods
stos
aas
fucom
xchg
aam
jg
pushf
pop
ret
in
pop
mov
add
fwait
xchg
xchg
mov
dec
in
dec
dec
dec
test
stos
nop
xchg
test
lods
push
dec
push
sbb
mov
in
xchg
sub
dec
in
push
mov
mov
xchg
push
xor
or
in
xor
pop
inc
leave
enter
or
movs
ror
xchg
mov
les
pop
pop
mov
mov
clc
xchg
rol
out
inc
js
int3
movs
int3
or
xchg
add
and
mov
sub
test
add
xor
das
inc
sbb
pushf
pushf
imul
cmps
cmps
adc
repz
cli
mov
pusha
mov
push
lock
push
push
adc
test
push
dec
xor
add
and
sub
inc
pop
std
mov
add
shl
iret
test
call
lock
mov
daa
or
cmps
xchg
inc
cs
aas
imul
(bad)
in
pop
mov
pop
xor
mov
in
xchg
add
pop
xchg
xchg
daa
xchg
sub
ins
mov
ins
ins
enter
cs
and
sub
mov
jo
in
jno
push
dec
inc
push
int3
int3
int
les
and
or
mov
fs
retf
jne
rcl
xchg
mov
pop
and
inc
and
lock
xchg
mov
dec
inc
push
mov
inc
sub
cmp
sub
jne
and
jl
mov
stos
nop
call
xchg
dec
scas
or
stc
lock
add
push
ret
cdq
pop
push
sbb
pop
and
push
add
test
cmp
sub
dec
mov
sbb
nop
xchg
jl
mov
mov
call
mov
pushf
push
dec
xchg
nop
in
in
xchg
and
sbb
je
in
nop
je
xchg
xchg
and
icebp
dec
push
sbb
sbb
hlt
cmc
inc
add
and
ficom
push
cmp
call
and
add
xchg
mov
pop
sti
mov
add
push
hlt
ret
sbb
inc
push
dec
push
push
int
in
test
add
sub
push
add
add
sbb
mov
fs
retf
add
lods
lods
push
jmp
or
cmp
mov
dec
pusha
retf
add
stos
in
mov
fs
mov
or
pop
scas
and
mov
dec
inc
inc
sub
push
pop
pop
sbb
jb
mov
or
cmp
adc
add
cdq
mov
pop
sbb
pop
jo
adc
pop
jb
loope
mov
and
adc
jns
jmp
push
push
mov
mov
xchg
mov
add
sbb
dec
test
adc
leave
add
and
sbb
adc
inc
and
add
xchg
push
lock
test
mov
jne
push
shr
mov
lods
mov
mov
test
lds
outs
add
xchg
jmp
push
ret
cdq
sub
xor
cdq
adc
and
in
sub
sbb
dec
mov
shl
push
sbb
sub
fsub
add
dec
in
(bad)
add
push
xor
sbb
js
enter
mov
aad
and
xor
sub
in
pusha
and
in
or
mov
add
pop
cs
stos
in
(bad)
xor
adc
and
in
in
or
or
xor
fild
fdiv
or
fdivr
mov
(bad)
leave
cmp
fistp
mov
sub
fbld
fsub
nop
sbb
cmp
cs
cmp
cmps
sub
xchg
xchg
cmp
cmp
push
adc
aam
and
loop
cmp
cmp
mov
in
inc
sub
mov
fbld
push
add
fsub
jmp
sbb
xor
jb
cmp
mov
call
pushf
mov
inc
inc
sbb
xor
jne
or
je
inc
enter
daa
inc
repnz
pop
fdiv
sbb
pop
xor
sbb
sbb
push
sbb
dec
adc
sbb
mov
adc
mov
add
jp
mov
xor
mov
mov
inc
lock
mov
jg
stc
movs
mov
test
and
xchg
dec
sub
pop
(bad)
in
movs
loope
test
(bad)
mov
dec
inc
dec
xchg
mov
retf
leave
out
add
sbb
stos
nop
popa
sub
daa
lahf
and
mov
mov
mov
mov
cs
in
and
or
or
mov
push
and
and
cmp
adc
scas
mov
ins
sbb
enter
mov
adc
mov
jo
pop
sbb
mov
cs
lahf
and
je
test
inc
jne
adc
adc
fistp
adc
mov
and
cmp
mov
cmps
cmps
xor
lds
mov
adc
mov
ud1
js
ret
call
dec
sub
xchg
xor
xor
push
test
enter
cmp
enter
cmp
push
or
cmp
dec
sub
cmp
adc
jb
enter
inc
adc
enter
popf
daa
xchg
mov
inc
mov
adc
jb
cmp
dec
dec
dec
movs
cmps
sub
movs
sbb
test
and
clc
pop
inc
mov
mov
call
push
call
popa
cmp
stos
mov
or
fisub
daa
test
adc
and
xchg
pushf
adc
hlt
pusha
and
popa
mov
stos
nop
xchg
xchg
mov
xchg
cmp
fs
retf
mov
fs
pop
pop
push
add
pop
test
test
enter
mov
imul
les
cmps
test
test
mov
in
mov
ins
(bad)
nop
inc
adc
(bad)
repnz
fld
jmp
stos
adc
int
test
mov
cmp
sub
add
adc
adc
loopne
dec
adc
fisttp
sub
or
js
pop
cmp
cmp
aam
aam
mov
test
cmp
nop
test
jl
jns
cmp
fptan
nop
xchg
and
cmp
cmp
fmul
jns
fld
test
test
jns
cmp
loope
add
mov
ror
add
test
sti
mov
mov
dec
adc
mov
mov
lahf
mov
in
mov
and
lods
repz
ins
dec
(bad)
out
jmp
mov
jg
retf
inc
xor
mov
mov
cmp
jne
push
push
or
sub
imul
int3
test
xchg
iret
xchg
xchg
nop
inc
leave
retf
retf
(bad)
in
(bad)
in
push
mov
adc
push
popa
inc
adc
mov
enter
xor
enter
lock
add
mov
in
xchg
(bad)
les
dec
push
repnz
or
pop
mov
and
test
cmp
xchg
rcr
popf
pushf
clc
clc
mov
je
pop
or
inc
mov
adc
int
push
loope
cld
cmp
lock
add
and
or
sbb
pop
or
inc
enter
call
fldenv
mov
es
mov
inc
pop
adc
movs
adc
mov
retf
inc
xor
inc
scas
lahf
mov
mov
in
mov
movs
mov
movs
dec
sub
xchg
mov
xchg
int
push
mov
dec
sar
add
cmp
sbb
mov
and
mov
nop
stos
nop
xchg
xchg
add
add
add
test
retf
mov
nop
or
push
enter
mov
mov
out
inc
mov
sub
gs
or
or
or
test
jb
jae
mov
mov
adc
repnz
adc
jb
test
mov
and
cmp
adc
test
sbb
sbb
mov
nop
sbb
sbb
pop
mov
shr
stc
add
xchg
movs
les
ror
and
div
adc
jecxz
push
test
dec
les
and
add
inc
shl
rol
xchg
xchg
xchg
or
rol
or
cdq
xor
mov
or
mov
mov
and
xchg
pushf
je
pushf
pushf
enter
xor
in
enter
test
mov
and
retf
add
mov
cwde
or
lods
fxch
pop
and
aas
mov
and
pushf
mov
int3
sub
sub
int3
les
push
jno
shl
aas
in
and
and
pushf
sbb
xchg
rcl
ror
jns
cmp
lea
sub
int3
enter
adc
sbb
mov
push
xchg
nop
nop
aam
adc
xor
in
aam
xor
xchg
bound
adc
xchg
ror
les
sub
adc
fdiv
nop
cmp
xor
adc
adc
adc
popa
xchg
sbb
dec
arpl
adc
mov
dec
inc
push
mov
call
adc
jns
pop
ror
les
leave
enter
push
movs
repz
push
enter
sbb
sbb
sbb
in
sbb
test
xor
or
shl
mov
repnz
repnz
imul
mov
mov
rol
sub
adc
jge
test
test
setne
aam
loopne
mov
sub
adc
pop
icebp
loopne
cmp
dec
fsubr
mov
ins
cmp
or
and
in
call
and
in
mov
pop
ret
fild
sbb
test
cwde
xchg
push
aas
sub
dec
mov
inc
es
adc
mov
mov
and
not
mov
pusha
icebp
pop
xchg
or
mov
aam
test
or
enter
aam
fadd
lahf
ror
(bad)
leave
test
shr
cmp
sbb
stc
pop
mov
mov
mov
xchg
sbb
cmp
jl
scas
rcl
hlt
stc
cmc
into
pop
dec
sub
push
out
inc
or
arpl
mov
jne
stos
pop
(bad)
pop
mov
and
int3
jo
pushf
cmp
xor
push
push
xor
add
add
inc
push
pop
pop
mov
aaa
scas
nop
pop
mov
ror
mov
and
pop
mov
adc
jo
shl
mov
jno
xor
add
pusha
popa
xchg
pop
scas
cwde
inc
mov
stc
mov
pop
cdq
sbb
xor
dec
sub
mov
nop
mov
gs
push
jb
enter
adc
adc
and
and
pop
push
test
push
mov
mov
xchg
(bad)
imul
movs
adc
jb
and
adc
push
jns
cmp
mov
mov
pushf
jl
mov
mov
ins
ins
add
adc
test
dec
test
movs
xor
jno
xor
add
sbb
jb
in
adc
adc
movs
sbb
jno
mov
les
lds
jb
es
rcr
adc
rcl
in
in
imul
dec
pop
pop
or
movs
fs
retf
sbb
je
or
es
push
sbb
add
jmp
cmc
sbb
xchg
retf
neg
xchg
pop
dec
sbb
sbb
and
jns
leave
add
rol
and
imul
dec
sbb
push
enter
mov
cs
aam
and
int3
mov
and
xchg
or
lea
jno
sti
and
xor
aam
xchg
pop
adc
aas
push
jne
push
test
dec
mov
mov
sub
jns
jae
sub
xor
js
jl
push
enter
cmc
jae
call
loopne
fsubr
pushf
es
sub
fsub
pop
inc
or
add
scas
mov
xor
int3
int3
jb
xor
int3
int3
int3
sbb
enter
ret
enter
inc
enter
cmp
push
push
xor
in
push
cdq
push
xor
mov
or
or
sbb
les
add
dec
cmp
retf
cmp
xchg
xchg
nop
test
mov
or
fs
dec
dec
mov
pushf
jl
mov
lea
add
xchg
cmp
mov
sbb
jb
mov
cmp
in
inc
inc
inc
mov
test
xchg
pushf
popf
jnp
and
inc
mov
mov
inc
inc
test
mov
inc
inc
or
cmp
mov
fcom
in
adc
adc
es
pop
aam
cmp
daa
xchg
dec
push
inc
mov
movs
lea
movs
adc
pop
or
sbb
arpl
xor
aam
xchg
retf
cmp
push
mov
dec
dec
dec
test
pop
dec
inc
test
sbb
push
xchg
or
sbb
sbb
dec
enter
movs
xor
outs
js
xor
cmps
sub
and
dec
pop
enter
or
loope
das
sbb
sbb
ror
inc
call
pop
cmp
jae
sahf
data16
rcr
xor
mov
and
and
les
add
push
xchg
fsubr
push
sub
push
inc
stos
mov
int3
test
sub
rcl
xor
or
pop
pop
or
pop
pusha
test
call
mov
cmps
outs
cmps
pop
adc
enter
hlt
cmp
mov
enter
in
xchg
sub
lods
sbb
pushf
jg
mov
nop
rcl
test
enter
int3
and
dec
aam
sub
sbb
xor
test
les
jb
fmul
or
xor
xchg
mov
or
mov
enter
pushf
leave
inc
aam
mov
and
aam
pop
sbb
mov
mov
int3
nop
int3
nop
mov
scas
nop
int
inc
scas
sbb
das
jg
leave
mov
pushf
clc
add
dec
lock
push
icebp
retf
xor
or
push
mov
pop
mov
call
test
cmp
int3
jg
aas
mov
test
pop
je
cmps
stos
test
js
dec
loope
mov
mov
xchg
and
nop
pop
lahf
nop
shl
xchg
pop
popa
jg
mov
rep
pop
repz
sub
mov
cmps
or
leave
into
jne
in
ss
and
(bad)
out
jne
shl
movs
out
sbb
stos
add
int3
aad
fwait
adc
test
add
mov
lahf
sahf
data16
add
popa
xor
push
in
adc
and
cmp
push
xchg
clc
inc
jmp
cmp
push
cmp
xor
xor
retf
je
mov
mov
push
or
retf
push
fadd
and
shl
add
adc
mov
add
mov
mov
inc
aas
test
shr
adc
jo
jne
push
or
pop
loop
adc
mov
xchg
dec
dec
adc
adc
pop
lds
shl
test
nop
loopne
nop
add
xchg
loopne
sub
adc
pop
std
dec
adc
xchg
sbb
imul
test
les
xchg
add
or
cmp
ret
not
mov
ret
sbb
add
shl
or
imul
inc
cmps
pop
or
push
push
stos
movs
sbb
inc
in
adc
mov
mov
mov
push
in
pop
and
adc
in
adc
js
in
in
adc
pop
adc
and
mov
push
icebp
sar
lea
mov
test
jmp
nop
adc
mov
mov
push
es
xor
inc
nop
call
push
nop
call
gs
sbb
lods
push
xchg
stos
sub
pop
adc
cmp
sbb
adc
rcl
sbb
add
imul
push
imul
fdiv
push
sub
mov
dec
adc
inc
jno
and
add
leave
in
and
and
xchg
or
sub
std
sub
xchg
lea
js
das
inc
ror
js
call
call
inc
sbb
cs
and
xchg
mov
dec
push
shl
test
push
(bad)
fs
add
leave
inc
and
daa
push
sub
inc
and
ret
cmp
data16
add
inc
mov
xchg
sub
or
push
shr
mov
cdq
sbb
das
or
data16
es
ret
ror
(bad)
call
sbb
pop
mov
loopne
mov
fild
sub
ins
test
mov
jmp
jb
repz
xchg
or
sub
add
add
mov
cmp
xor
mov
pop
add
and
push
pop
adc
cmps
in
das
inc
push
inc
sub
or
test
push
sbb
popa
adc
mov
nop
xchg
sbb
call
cmp
jne
mov
xchg
rcl
xlat
push
sub
and
mov
pop
or
jmp
inc
les
jmp
nop
int3
test
cmp
push
pop
test
jecxz
das
jns
sbb
iret
imul
or
jae
(bad)
fidivr
ins
pop
test
push
(bad)
sbb
mov
mov
movs
pop
cs
adc
xchg
xchg
xchg
pop
fistp
xchg
retf
sbb
lock
out
stc
add
in
xor
pop
adc
pushf
jmp
jl
test
stos
movs
movs
mov
jmp
clc
mov
adc
fild
test
mov
mov
xchg
shl
xchg
aas
xchg
lahf
jl
jns
lahf
clc
clc
mov
enter
lods
jecxz
lods
and
in
or
call
and
stos
mov
stc
and
jmp
push
pop
jle
jne
(bad)
ss
movs
test
cmp
jae
jge
fild
cs
add
inc
or
pop
(bad)
out
add
out
call
loopne
retf
add
pop
les
movs
or
clc
aaa
mov
mov
fwait
and
sub
out
jle
xor
dec
es
dec
test
test
mov
pop
push
mov
adc
push
lds
std
xor
pop
push
enter
jno
movs
sub
(bad)
mov
mov
pushf
mov
or
call
aas
test
mov
mov
mov
xchg
sbb
rcl
xor
jl
in
mov
shr
rcr
test
rcr
push
out
sbb
mov
nop
retf
leave
inc
les
fs
and
jb
or
add
jb
dec
push
(bad)
mov
enter
in
leave
enter
nop
cmp
adc
inc
xchg
mov
and
leave
fcomp
mov
jb
nop
cmps
int3
cmps
int
push
cmp
sbb
sub
pop
stos
fnstcw
sbb
sbb
and
jo
or
enter
sbb
or
cmp
shl
inc
pushf
mov
bound
add
adc
sub
dec
sbb
sbb
pusha
call
call
or
pop
add
push
dec
js
mov
add
push
and
mov
fs
jb
jae
pop
fdiv
fisub
lods
inc
fst
xor
das
mov
and
sbb
mov
mov
xchg
mov
aam
retf
dec
fsubr
lds
push
jns
(bad)
xlat
aam
push
sbb
shl
inc
xchg
xor
les
add
xor
ja
les
mov
rcr
popa
add
pusha
add
add
test
mov
xor
or
test
and
add
sbb
and
mov
pushf
pop
sar
fsub
sbb
adc
cmps
call
out
push
adc
jp
jne
pop
mov
pop
cmp
dec
aaa
inc
loope
data16
xor
or
sub
aas
inc
aad
xchg
pusha
out
xor
out
add
and
icebp
lea
sub
(bad)
stos
enter
cli
inc
sub
inc
loope
pop
mov
(bad)
xchg
cmp
xchg
cmp
xchg
std
and
in
or
sub
shl
push
sub
(bad)
push
xchg
jo
or
les
dec
push
(bad)
in
inc
stos
xor
in
inc
ds
lds
pushf
dec
es
or
sbb
jns
add
test
jle
jb
dec
repnz
add
call
or
ror
mov
jecxz
xchg
pop
dec
jmp
add
dec
mov
inc
adc
adc
or
add
and
or
cmp
dec
push
and
ss
int3
lods
lds
call
nop
fild
nop
xlat
adc
bound
or
dec
jne
bound
mov
sub
xchg
cmp
push
inc
push
push
push
leave
dec
add
test
(bad)
and
jp
inc
mov
aad
rcl
and
aas
pop
ror
inc
push
lods
rcl
adc
and
mov
gs
cli
icebp
mov
sbb
push
cmp
and
ror
pop
sub
dec
repz
mov
add
inc
in
hlt
adc
daa
xchg
arpl
in
dec
dec
loopne
popf
cmp
mov
and
jg
nop
(bad)
ss
(bad)
jbe
or
and
push
jge
mov
cdq
and
add
das
add
and
sub
adc
push
add
xor
nop
bound
pop
adc
int3
test
xchg
xchg
cmp
or
rcl
rcr
cmp
mov
push
test
jns
retf
pop
lds
mov
inc
(bad)
cmp
sahf
cmp
lea
add
or
push
add
add
mov
mov
call
xchg
inc
lea
popa
lea
or
dec
lea
lods
or
mov
xchg
mov
enter
ret
(bad)
(bad)
or
(bad)
movs
or
push
loop
leave
and
mov
mov
mov
pop
repnz
xchg
mov
mov
mov
mov
mov
xor
add
fcmovnu
and
xor
fstp
xchg
xor
lahf
repnz
lahf
inc
push
movs
lods
(bad)
clc
stc
fs
push
fs
sti
cld
add
(bad)
sahf
push
dec
sbb
or
push
and
and
int
into
(bad)
iret
xchg
xchg
mov
ror
sti
(bad)
sar
sbb
das
jns
nop
sbb
xchg
xchg
mov
and
sti
nop
and
add
nop
push
push
push
sbb
pop
mov
push
ret
xchg
cmp
icebp
pop
rol
and
mov
enter
movs
popf
push
and
loopne
push
jnp
ins
ds
(bad)
or
dec
scas
movs
lock
pop
jge
add
xor
and
mov
push
push
push
adc
inc
int3
push
inc
push
push
in
out
cmp
lea
and
sbb
lock
mov
sub
jmp
add
sub
imul
jno
cmp
(bad)
fbstp
xchg
cmps
movs
jae
popa
xchg
jmp
ins
es
ins
dec
mov
popa
(bad)
sbb
add
or
mov
sar
ja
sbb
fmul
fsubr
jle
add
dec
enter
jle
dec
push
xor
or
xlat
add
xchg
xor
xchg
xor
sar
adc
cmp
ret
add
jne
int3
jmp
scas
ins
mov
mov
dec
pop
loopne
lahf
or
or
pop
inc
push
cmps
xor
or
nop
jnp
call
hlt
jg
mov
das
push
push
mov
jne
adc
mov
pop
mov
or
pop
addr16
pop
sbb
fninit
jo
dec
sbb
fbstp
fdivr
adc
xor
sub
xchg
fdiv
stos
adc
xor
movs
or
pushf
sbb
inc
inc
pop
popf
xchg
imul
or
or
xor
in
xor
push
push
loopne
mov
lock
lea
mov
cs
inc
cwde
xchg
outs
adc
inc
fiadd
jo
retf
xor
mov
add
(bad)
pop
movs
push
sbb
jne
mov
mov
dec
jb
xchg
movs
or
cmps
push
xchg
pop
or
push
add
dec
std
or
sub
push
retf
add
mov
and
out
out
adc
cmp
leave
xor
push
mov
lea
test
out
or
push
(bad)
dec
jecxz
add
int
shl
inc
mov
mov
mov
add
cld
nop
push
add
sub
push
cmp
dec
outs
push
aad
pop
xor
sbb
sbb
cmp
out
inc
es
mov
add
pop
adc
adc
dec
ss
inc
enter
or
sub
pop
inc
inc
lea
adc
mov
test
test
push
adc
pop
and
iret
rcr
mov
or
push
sub
inc
cmps
shl
jno
pop
mov
int3
mov
mov
dec
xchg
out
popf
and
enter
add
pushf
dec
push
pop
and
std
pop
pushf
mov
retf
inc
sub
mov
jb
not
dec
sbb
cs
loopne
sbb
repz
rol
mov
xor
jno
dec
in
stos
fidiv
js
jge
adc
cli
xchg
add
sub
les
or
or
pop
xchg
icebp
adc
test
mov
dec
push
add
lahf
dec
and
and
shl
mov
or
add
push
mov
int
mov
adc
jb
sar
jne
or
ins
xchg
dec
scas
xchg
dec
sbb
enter
test
mov
pop
out
jmp
stos
xchg
ds
xchg
(bad)
fnstenv
inc
mov
retf
jg
ins
mov
mov
jo
test
(bad)
outs
repnz
test
repnz
xchg
movs
pop
jmp
pusha
adc
mov
lahf
push
xchg
je
scas
mov
cmps
lods
out
xchg
stos
jl
xchg
mov
aas
xchg
lahf
sahf
xchg
test
xchg
je
icebp
(bad)
xchg
mov
pop
in
xchg
mov
clc
dec
and
jg
stc
inc
sbb
jbe
inc
or
repnz
cmp
shl
(bad)
sub
sbb
adc
add
fidiv
aam
dec
mov
cmps
in
xchg
and
mov
rol
pop
imul
pushf
or
mov
xchg
out
aam
fsub
aad
test
dec
clc
or
mov
push
and
and
mov
enter
mov
je
push
push
jle
dec
push
(bad)
pop
ret
sbb
cmp
int3
ins
test
int3
dec
jl
mov
inc
add
nop
and
mov
push
sub
push
retf
and
movs
shl
jge
add
movs
pop
lock
and
pcmpeqw
mov
aaa
movs
sbb
push
cs
scas
repnz
mov
or
jae
push
cmp
xor
and
push
ror
out
les
inc
nop
add
xchg
sbb
ins
xchg
dec
in
sbb
sub
push
in
movs
sbb
shl
cmp
dec
inc
mov
sbb
mov
adc
jns
inc
mov
jge
cmp
lea
imul
xor
aam
ins
mov
mov
lods
dec
jle
sahf
push
mov
mov
mov
(bad)
rol
mov
ins
cmp
pop
cmp
dec
sbb
shr
cdq
ss
jne
aaa
in
iret
mov
je
sbb
(bad)
jno
xor
cmp
mov
popa
test
add
or
out
sub
test
jmp
inc
sti
sub
fistp
(bad)
cmp
mov
sbb
je
sub
sub
push
lods
mov
cs
jns
inc
mov
je
cmp
mov
xchg
push
pop
inc
push
mov
cs
mov
push
or
dec
ror
sub
dec
pusha
pop
not
cmp
and
fimul
xor
push
jge
out
push
fadd
add
lea
test
arpl
push
sub
test
add
add
cmp
or
lock
push
or
xchg
push
call
or
mov
push
xchg
pop
ins
sbb
or
mov
test
mov
pop
pop
je
mov
xchg
lods
gs
imul
inc
or
loop
clc
mov
into
call
(bad)
adc
add
ret
and
dec
cmp
push
or
popf
cmp
bound
push
ret
dec
pushf
inc
mov
mov
add
cmp
jae
dec
das
nop
clc
sub
add
std
ret
mov
inc
fisttp
dec
cmps
sbb
sbb
fistp
shr
xchg
and
and
xchg
xchg
sub
add
icebp
test
pop
fild
dec
inc
jle
sub
inc
cld
daa
fst
push
adc
push
add
in
dec
add
jle
xor
push
cmp
add
xor
pop
add
cmp
and
or
fbld
fiadd
(bad)
or
out
mov
sub
sub
add
adc
add
xor
add
or
mov
and
sub
into
add
push
and
into
mov
jb
jle
je
pop
push
ins
or
rol
jmp
or
or
jbe
push
pop
sar
ins
mov
pop
mov
rol
push
aas
and
cmc
or
pop
dec
push
adc
add
fisttp
loope
inc
or
push
or
mul
fidiv
inc
sbb
shr
imul
or
ret
cmp
mov
xchg
clc
xor
sbb
pop
ret
push
push
stos
ins
pop
ds
in
nop
and
cmp
xor
pop
pop
test
fs
out
and
cld
out
push
in
ja
cmp
jbe
cmp
and
mov
aam
jmp
push
xchg
stos
ins
mov
cwde
ds
or
mov
push
cmp
xor
push
mov
rcl
fdivp
jg
jge
sub
pop
adc
jmp
xor
shr
add
je
push
aaa
sbb
push
mov
ja
xor
ss
ss
rcl
jg
cmp
cs
and
cmp
xor
sub
(bad)
test
(bad)
sub
add
test
xor
jbe
cmp
and
adc
ret
leave
sbb
adc
cmp
loopne
dec
xor
add
ds
fld
test
mov
or
idiv
adc
lods
add
lahf
jl
dec
jge
hlt
int
(bad)
jg
jl
xor
mov
sbb
and
cmp
inc
data16
mov
leave
mov
pop
mov
mov
add
cmps
test
push
cdq
jbe
popa
js
add
adc
cmps
jg
loope
(bad)
into
or
mov
add
mov
jbe
je
shl
and
rcl
sbb
test
loopne
adc
push
xchg
loop
and
je
or
imul
or
inc
in
popf
adc
adc
xor
repnz
sbb
adc
xor
adc
push
aam
and
lea
(bad)
xchg
stos
and
lea
aas
daa
jae
fsubr
inc
jmp
adc
(bad)
daa
fnstcw
sbb
fstp
adc
out
add
test
rcl
cmp
je
bound
shl
inc
cmp
add
mov
inc
mov
cmc
inc
movs
test
sbb
inc
stos
inc
adc
dec
sub
pop
ins
push
mov
and
dec
inc
call
(bad)
or
mov
and
sub
movs
inc
or
clc
test
fnsave
xchg
mov
cs
add
fisttp
inc
inc
sbb
and
cmps
jge
or
adc
(bad)
sub
mov
sbb
xor
retf
mov
inc
(bad)
fild
test
pop
enter
mov
loopne
add
inc
rcl
dec
call
add
or
or
mov
nop
in
and
rcl
inc
clc
sub
inc
(bad)
pop
nop
adc
jmp
dec
js
sbb
popf
cmc
lds
fild
add
sbb
sub
push
jmp
mov
femms
inc
and
jge
rcr
push
pop
xlat
adc
retf
cld
shl
cmp
add
adc
cmp
sub
outs
cs
jb
mov
sbb
sbb
add
fisub
jnp
inc
jl
push
ret
mov
out
add
shl
clc
cmp
and
cmp
cmp
je
pop
fimul
pushf
adc
push
push
sub
sar
xor
or
js
test
or
and
mov
lahf
cmps
shr
dec
adc
adc
fimul
ins
mov
add
mov
out
cmp
mov
mov
inc
push
xlat
(bad)
jl
adc
pop
add
xchg
add
and
add
data16
push
add
and
mov
mov
push
rol
(bad)
mov
dec
sbb
mov
(bad)
rol
and
inc
fcom
sub
fmul
xor
xchg
mov
xor
ds
pop
mov
or
fst
push
(bad)
lods
push
push
mov
pushf
inc
sub
jmp
inc
mov
inc
or
adc
adc
add
push
pop
pop
das
ret
push
jl
jne
test
aam
pop
mov
add
mov
add
or
ins
es
rcl
aam
sbb
test
fimul
cmp
pop
push
mov
and
pop
pusha
loopne
and
adc
add
fmul
fld
fucompp
mov
push
mov
lahf
mov
leave
bound
in
mov
jmp
xor
jle
sti
gs
adc
dec
jnp
frstor
fadd
or
sti
pop
test
(bad)
jae
fdivr
add
sbb
rol
add
cmps
cli
scas
sbb
cmp
jb
adc
fistp
add
cmp
imul
adc
fmul
add
stos
stos
lods
fsub
jl
aad
and
icebp
mov
loopne
inc
and
cmp
ret
sbb
inc
pop
cmovge
mov
or
xor
sub
aas
ja
mov
jmp
sbb
mov
cmp
or
mov
mov
inc
dec
rcl
ins
jmp
inc
test
icebp
imul
das
push
mov
jmp
push
repnz
jmp
and
rcl
pop
cs
lods
jmp
pop
pop
cmp
adc
in
idiv
sub
or
sbb
loope
mov
sub
in
das
mov
push
pop
jle
adc
sti
xchg
mov
sti
push
test
add
xchg
dec
add
dec
dec
cld
add
add
adc
xlat
jae
push
push
sub
sbb
clc
adc
push
and
popf
dec
pusha
fadd
dec
adc
rcl
pushf
or
and
inc
and
(bad)
mov
dec
sbb
cmps
(bad)
push
mov
out
jb
and
test
pop
mov
pop
aaa
pop
add
inc
or
mov
iret
pop
ins
sub
mov
sub
push
add
add
add
xchg
push
xor
mov
pop
sbb
(bad)
pop
sub
cmps
fst
and
adc
scas
retf
pop
test
sbb
loopne
dec
mov
pushf
or
dec
xchg
or
xor
mov
movs
sub
sub
sti
add
sbb
jge
imul
xchg
loop
inc
ss
test
test
jne
dec
jbe
ss
mov
push
mov
add
dec
push
test
iret
lock
mov
or
in
and
inc
mov
mov
fbld
in
aam
and
jp
or
je
mov
sub
rcr
(bad)
call
lods
mov
push
push
push
mov
pushw
add
adc
pop
add
mov
add
jge
fidiv
(bad)
or
cmp
and
shr
ss
pop
adc
scas
lods
push
stos
ret
sub
test
jecxz
adc
pop
movs
push
nop
imul
out
sbb
sub
pushf
retf
sub
adc
or
in
cmp
or
(bad)
cmp
sbb
sub
pusha
add
mov
loop
mov
pop
imul
sbb
cmp
add
xor
call
pusha
call
fs
lods
xor
ss
jle
popa
mov
cwde
and
ret
cs
cmp
(bad)
aad
ror
push
or
jle
inc
les
rcl
shl
pusha
ins
jge
dec
mov
mov
jmp
mov
mov
scas
xchg
add
cmp
jl
mov
sbb
enter
mov
test
or
or
ins
push
cmp
loope
loopne
fmul
and
and
and
push
jge
fwait
nop
jp
js
and
and
push
xor
adc
jbe
dec
es
clc
dec
cmp
xor
(bad)
inc
mov
mov
pop
stos
push
push
cmp
aam
es
inc
cmp
sub
push
aas
push
pop
dec
into
movs
ret
push
add
ret
jo
and
out
loopne
mov
ret
jno
add
adc
adc
push
mov
xor
push
sub
adc
pop
add
sbb
fadd
xchg
dec
mov
add
and
loope
pop
repnz
shl
jne
push
(bad)
ins
jp
test
jb
dec
and
lea
ds
mov
js
mov
arpl
inc
adc
mov
mov
or
mov
mov
ror
(bad)
adc
push
fs
push
sbb
nop
loop
push
xchg
mov
mov
xchg
test
not
jb
add
dec
dec
adc
popa
or
cmp
cdq
call
mov
adc
sbb
add
ins
stos
mov
imul
mov
inc
adc
pop
loopne
pop
and
mov
push
cmp
je
mov
inc
jmp
or
dec
ss
pop
test
mov
add
xor
push
int3
dec
jne
mov
pop
mov
ss
pop
out
mov
mov
or
push
add
add
add
rol
pop
sub
retf
cmps
push
push
in
push
movs
xor
mov
loop
cmp
xchg
arpl
sbb
lock
mov
les
lods
enter
ror
dec
cld
addr16
cmps
popa
push
inc
push
adc
xchg
add
popa
cmp
fs
cwde
les
pop
adc
add
in
dec
enter
rcl
or
fdiv
inc
pusha
call
add
ror
ins
inc
int3
data16
ins
enter
push
retf
les
shl
or
mov
xor
inc
xor
cmps
(bad)
fs
aam
push
add
add
or
mov
clc
int3
jge
cmp
(bad)
ja
fsubr
push
add
mov
pop
loopne
loopne
mov
je
cmp
ja
sbb
xor
stos
dec
(bad)
pop
les
xor
xor
sbb
ret
sub
iret
enter
mov
imul
jmp
or
pop
mov
push
call
enter
sub
data16
imul
add
push
push
(bad)
mov
and
or
mov
jg
sbb
loope
inc
push
test
adc
pop
je
adc
pop
fcomp
or
add
jno
mov
jo
ror
jo
mov
pop
inc
or
rcl
xor
aam
inc
(bad)
and
inc
dec
rcr
add
and
xor
add
fisttp
dec
mov
enter
fdiv
fnstenv
jae
push
adc
jo
in
cli
dec
jne
cli
push
sahf
and
pop
rcr
mov
fwait
push
add
and
aas
adc
add
fadd
adc
or
mov
mov
mov
mov
adc
shr
dec
arpl
mov
pop
stc
lahf
adc
inc
and
inc
add
add
mov
adc
and
add
icebp
inc
push
add
xchg
mov
das
cmp
xor
push
aas
sbb
test
int
addr16
add
aaa
fincstp
sub
adc
sub
xor
(bad)
sbb
pop
mov
push
ss
aam
xchg
dec
push
or
inc
and
add
cmp
and
xor
cmp
call
cdq
fs
lahf
xchg
mov
in
daa
pop
xchg
mov
push
push
fadd
pusha
inc
jb
sub
push
xor
pusha
or
pop
cmovo
xchg
les
or
adc
sub
mov
xchg
add
xchg
fs
enter
xchg
enter
add
or
ins
or
imul
sbb
(bad)
jbe
push
clc
fcmovnb
out
inc
add
or
pop
xor
xchg
add
mov
shr
jg
(bad)
jb
int
jo
inc
push
pop
inc
xchg
jle
bound
out
and
push
or
xchg
fadd
lea
pop
and
lea
push
jmp
mov
pop
dec
cmp
fisubr
push
mov
retf
dec
push
aas
jbe
aas
push
enter
or
inc
inc
jmp
push
gs
ins
push
push
jg
mov
adc
and
scas
in
and
mov
sbb
mov
mov
test
les
adc
ins
(bad)
or
jl
scas
mov
aas
mov
pop
dec
or
add
adc
in
and
push
or
rcr
les
or
xchg
(bad)
adc
sub
sar
sub
test
ins
je
retf
fnstcw
ffreep
push
sbb
cmp
outs
add
mov
fdivr
jg
jae
add
jmp
add
and
xor
leave
add
(bad)
retf
and
ret
adc
dec
mov
shl
or
xchg
mov
dec
mov
add
push
or
adc
dec
sub
adc
stc
stos
push
dec
fucomi
mov
lea
js
dec
push
xor
adc
int
push
call
add
inc
inc
ret
pop
dec
movs
pop
cmp
je
xor
cmp
adc
cli
cld
add
aas
rol
inc
and
cmps
imul
cld
mov
movs
test
sub
loop
adc
sbb
jmp
ss
or
fimul
dec
dec
or
mov
jle
dec
retf
(bad)
jno
push
push
push
daa
add
fsub
pop
push
(bad)
fsubrp
mov
enter
pop
in
(bad)
adc
shl
sbb
xor
repz
push
inc
push
sub
add
add
push
pop
in
inc
into
(bad)
retf
test
leave
dec
call
cli
mov
jae
xchg
dec
mov
pop
push
lods
pop
mov
nop
xchg
and
adc
cmp
cmps
adc
push
dec
dec
rol
cdq
cmp
pop
in
add
push
pop
clc
in
movzx
inc
add
push
mov
jb
scas
or
scas
ins
rcr
jne
adc
adc
leave
aam
sub
sbb
xchg
leave
(bad)
retf
mov
or
dec
fdiv
(bad)
fmul
add
adc
dec
add
jnp
inc
jo
stc
shl
or
adc
mov
shl
scas
add
fcom
jbe
jb
int3
mov
add
lods
int
inc
or
pop
imul
adc
jne
fld
xor
clc
nop
pop
enter
stc
sub
dec
dec
out
fdivr
mov
sbb
mov
dec
int3
cmps
hlt
test
cmp
mov
cmp
ret
sub
pop
and
add
push
push
mov
jl
fcomp
bound
fadd
inc
dec
jl
test
push
cmp
push
pushf
push
or
push
xchg
push
inc
call
in
nop
retf
leave
fsub
fstp
cld
jl
xchg
data16
sar
cmp
leave
je
push
in
push
popf
test
pop
pop
adc
ud1
add
in
or
inc
jl
loopne
dec
sbb
sbb
add
fadd
in
test
dec
push
xlat
add
mov
sub
lods
and
nop
xchg
or
test
and
adc
lea
outs
mov
adc
sbb
and
jo
sub
inc
ds
add
inc
adc
add
stc
cmovo
xchg
add
fcom
inc
test
inc
fsub
adc
js
or
dec
(bad)
jge
test
je
xor
es
pusha
cwde
lahf
je
cmp
mov
jne
jnp
and
jle
out
lds
add
push
shl
jle
mov
and
add
mov
mov
add
add
add
mov
sbb
add
shl
mov
gs
gs
add
sbb
je
std
adc
cmp
int3
daa
test
cmp
jo
(bad)
out
inc
sbb
xor
add
(bad)
out
daa
mov
add
(bad)
lods
sbb
rcr
mov
shl
push
ficom
sub
lahf
pop
adc
sub
inc
loopne
cdq
mov
test
push
xor
adc
push
(bad)
push
sub
leave
aam
fadd
xor
sbb
pop
dec
(bad)
nop
call
call
jb
fsubr
call
adc
and
xor
sbb
adc
dec
inc
or
test
add
xchg
xor
push
jl
mov
mov
push
xor
ss
add
adc
ror
xor
lods
push
push
push
ret
cmp
inc
push
scas
aam
ss
leave
mov
sub
and
bound
sbb
sbb
sub
(bad)
stc
mov
add
push
jne
stos
aaa
fsub
cmc
xor
xor
nop
mov
retf
mov
jb
jg
lods
frstor
hlt
int3
loope
int
cmp
jb
loopne
push
in
in
and
cs
in
test
test
loopne
enter
loopne
shl
add
push
aas
inc
xchg
inc
test
adc
jne
add
hlt
or
pop
sbb
push
stos
popf
adc
cmp
mov
ret
xor
ret
in
add
sar
pop
adc
xchg
int
cli
mov
inc
push
push
js
cmc
retf
(bad)
ror
(bad)
jo
push
sub
jnp
js
mov
jle
push
dec
(bad)
push
call
call
test
lea
pop
jo
push
test
pop
(bad)
xor
ror
pop
add
push
add
cmp
pop
lock
in
xor
pop
push
or
sbb
xor
or
cmp
jge
xchg
test
sub
aas
sbb
xchg
or
retf
retf
in
or
retf
mov
add
or
lahf
jb
fs
mov
adc
sbb
sbb
mov
in
(bad)
out
test
mov
outs
fwait
outs
ins
rcl
add
jl
mov
pushf
sbb
jmp
xor
xor
and
je
cmps
mov
pusha
xchg
lea
(bad)
lods
jmp
xor
shr
fdiv
jl
pop
mov
adc
sub
enter
xchg
push
add
pusha
sbb
lock
psubusw
and
inc
sbb
sub
add
gs
add
(bad)
sti
getsec
adc
sbb
sbb
mov
pop
and
xchg
test
cwde
cmc
xchg
jl
adc
xchg
sub
xchg
cmp
in
sbb
adc
jg
fs
xor
sbb
push
leave
enter
push
int3
int3
sbb
leave
int
pushf
js
nop
dec
push
js
xor
xor
mov
enter
je
xchg
das
jg
cmp
mov
add
in
inc
dec
dec
or
mov
inc
es
jno
fs
xchg
inc
fs
ins
pushf
mov
ins
call
in
out
ins
pop
push
mov
push
and
and
dec
xor
aas
push
pop
pop
push
jmp
xchg
test
fs
add
sbb
dec
adc
enter
aam
add
pop
retf
and
in
retf
xchg
test
add
sbb
pusha
in
enter
jo
cmp
sbb
in
in
(bad)
pop
call
cwde
repnz
call
js
cwde
or
mov
pop
je
dec
xchg
lock
lds
jo
(bad)
stc
jns
mov
mov
add
cwde
inc
mov
or
test
mov
push
add
icebp
inc
nop
lea
or
cmp
fst
push
dec
cmps
nop
call
or
add
add
fs
pop
packssdw
add
test
in
dec
lock
imul
test
lock
in
dec
add
cwde
adc
adc
push
mov
xor
inc
ret
stos
test
aam
inc
mov
dec
add
add
mov
jb
aas
jg
invd
cmps
test
dec
mov
leave
jmp
add
inc
push
jmp
lahf
int
in
dec
inc
call
lea
pop
or
adc
jno
pop
in
pop
dec
dec
mov
mov
frstor
jmp
xor
fst
inc
jne
push
fs
test
movs
test
adc
lods
add
lea
fistp
pushf
push
or
shr
mov
lds
test
xchg
sbb
movs
mov
ins
mov
push
cmp
mov
int
jge
add
std
dec
cmp
inc
pop
iret
les
and
push
xchg
xor
jno
mov
(bad)
imul
push
js
fisttp
ret
stc
cld
fcomp
loope
aad
jecxz
mov
xor
mov
push
ins
push
ret
add
sbb
(bad)
adc
mov
retf
xchg
jmp
fld
and
aam
dec
push
mov
loopne
jns
pop
fisttp
je
call
imul
dec
sub
ins
mov
pop
mov
sub
or
ret
sbb
fld
sti
xchg
sub
or
and
dec
loopne
sub
fmul
add
call
bound
add
add
pop
push
mov
xor
call
pop
and
nop
jmp
pusha
jno
sub
adc
outs
shl
mov
add
xor
imul
or
enter
ss
and
add
loop
pop
push
sub
mov
jno
push
inc
jb
add
enter
pusha
test
dec
add
pop
xor
pop
aad
fnsave
pusha
imul
cmp
(bad)
arpl
jmp
mov
iret
inc
xor
inc
push
sub
jp
cwde
adc
fdiv
popa
loope
fcomp
or
inc
and
ins
jo
push
sub
jno
inc
shl
fstp
pop
adc
pop
or
jcxz
adc
out
jnp
xor
sbb
adc
test
add
cli
sbb
pop
dec
je
push
sub
in
adc
pop
xchg
jne
sbb
adc
imul
pop
cs
in
movs
mov
js
pusha
and
das
pusha
add
cld
enter
push
mov
mov
xchg
add
mov
std
scas
mov
mov
sbb
into
mov
xchg
or
into
mov
in
adc
sbb
add
xor
xor
icebp
sub
pop
xchg
xchg
xchg
xchg
test
jmp
mov
stos
mov
mov
add
test
dec
leave
adc
add
add
inc
and
inc
and
jbe
sbb
cmp
lock
inc
out
jg
push
pop
sbb
adc
push
call
mov
sub
call
cmps
pop
test
pop
dec
movs
mov
pop
lods
in
inc
mov
and
inc
jg
or
or
sub
ror
pop
xor
dec
inc
mov
ret
fmul
mov
mov
or
ss
ret
jo
jbe
pop
(bad)
cmp
iret
je
call
test
and
sti
outs
(bad)
int3
xchg
jmp
push
lea
inc
inc
mov
cmp
push
push
sti
xor
dec
cmp
push
dec
push
or
or
and
lods
movs
pop
or
mov
jno
loope
sar
pop
dec
out
cld
ins
fisub
rcl
dec
or
mov
jge
jae
add
dec
cwde
sub
les
or
sub
or
mov
push
test
test
adc
xchg
std
mov
xor
and
(bad)
je
cmp
pop
dec
mov
scas
gs
into
fwait
inc
stos
xchg
push
push
mov
add
mov
ror
inc
adc
dec
call
and
sbb
add
dec
pop
rcl
je
js
mov
(bad)
repnz
or
test
mov
sub
out
call
repnz
push
jmp
xor
mov
mov
jmp
push
js
mov
out
inc
mov
mov
adc
push
(bad)
in
in
dec
mov
in
(bad)
dec
rcl
mov
les
adc
aaa
cmp
mov
jno
(bad)
mov
movq
(bad)
push
cmps
loope
in
push
push
mov
mov
mov
mov
pop
pusha
out
mov
loopne
jnp
in
or
xchg
addr16
push
xchg
ret
pop
std
push
jle
inc
inc
mov
mov
push
mov
mov
jnp
nop
cdq
mov
xor
jl
xchg
ins
xchg
imul
scas
lods
sbb
jns
popa
lock
scas
mov
or
push
scas
mov
ja
inc
les
inc
dec
call
pop
mov
xchg
popf
clc
aas
test
pop
push
mov
fwait
mov
loopne
mov
lea
push
or
and
push
xor
add
es
push
cld
enter
pop
fisttp
cmp
or
mov
fdivr
sbb
mov
sbb
push
add
pop
adc
rcr
add
and
push
mov
cmp
mov
push
mov
mov
std
mov
stos
fbstp
fstp
jp
shl
leave
and
pop
adc
add
sar
inc
movs
push
push
push
in
dec
xor
jb
in
add
push
dec
dec
leave
add
mov
or
and
in
push
mov
test
or
(bad)
clc
lock
mov
mov
mov
in
loopne
or
fadd
sbb
rcl
push
test
xchg
mov
xchg
pop
pop
lods
outs
jge
mov
mov
adc
fisttp
push
xchg
out
dec
mov
xchg
lahf
jmp
ins
shl
mov
mov
mov
mov
daa
enter
int3
mov
in
sti
adc
repnz
mov
repnz
repnz
mov
mov
mov
repnz
xchg
rol
adc
adc
cmp
repnz
inc
in
xchg
mov
adc
xchg
stos
mov
outs
jo
pop
lock
mov
sbb
push
mov
adc
mov
(bad)
mov
xchg
add
xor
or
jp
adc
jns
cdq
mov
sub
std
neg
lods
call
mov
repnz
mov
adc
cmps
mov
(bad)
fistp
mov
cmps
sbb
cwde
pop
xchg
enter
and
repnz
aam
jg
cwde
cmp
ins
inc
jg
sub
sahf
add
mov
nop
les
int3
adc
enter
or
add
dec
push
add
movs
repnz
dec
cmp
inc
pushf
dec
loope
add
lds
add
add
sub
inc
and
xchg
push
mov
mov
push
in
loope
mov
sbb
outs
push
mov
shr
daa
dec
retf
and
enter
inc
mov
lods
push
push
inc
mov
or
stos
les
std
xor
add
inc
cmp
mov
push
leave
mov
stos
push
pop
xor
dec
stc
not
adc
mov
mov
pop
xor
repnz
retf
mov
repz
mov
mov
push
mov
pop
jg
mov
pushf
add
inc
retf
inc
jecxz
jecxz
ds
sub
xchg
inc
xchg
inc
or
rol
mov
xchg
inc
or
out
xchg
or
pop
in
sub
(bad)
dec
mov
cld
add
addr16
mov
mov
repnz
repnz
xor
add
mov
cmp
dec
xchg
xchg
mov
sub
cmp
cmp
cld
xor
pusha
xchg
sub
sti
xchg
dec
and
cmps
xchg
jo
xchg
je
xchg
xchg
and
rol
mov
loopne
aam
mov
stos
mov
adc
cwde
dec
hlt
and
mov
aas
mov
inc
enter
out
les
push
push
hlt
xor
inc
pop
cld
mov
adc
adc
or
add
loope
add
in
or
push
xor
push
add
enter
pop
ins
inc
lock
test
inc
(bad)
fbld
xor
add
mov
xchg
mov
mov
mov
jmp
pop
or
mov
enter
jp
repnz
pop
mov
fld
mov
pop
xor
fild
inc
push
inc
mov
cmp
dec
add
rcl
rcl
inc
sahf
inc
sub
add
sub
sbb
ret
dec
jns
bnd
rcl
xor
adc
push
into
ror
ss
jmp
cmp
adc
lock
push
fild
mov
aas
cmp
pop
outs
mov
es
cmps
rcr
rcr
pop
adc
outs
inc
sub
mov
std
xchg
push
mov
xchg
fsubr
or
lock
push
add
cmc
(bad)
push
mov
cmp
xor
pop
adc
dec
(bad)
xchg
add
fs
push
inc
rcl
xchg
movups
sub
add
add
lea
jno
inc
fstp
dec
mov
dec
or
and
push
adc
inc
mov
ds
adc
push
jl
(bad)
pop
repnz
sub
ret
movs
test
daa
add
dec
cwde
jg
leave
and
push
stos
js
dec
cwde
call
mov
push
jb
dec
jo
mov
add
in
pop
je
or
daa
xchg
and
sbb
push
dec
rcr
sbb
jl
xchg
data16
je
xchg
data16
and
mov
sub
stc
xor
sbb
xchg
jno
push
sbb
adc
mov
jo
test
cwde
test
inc
rcl
ret
sahf
pop
ins
and
dec
(bad)
or
cmp
pop
das
adc
pushf
push
ret
cdq
dec
push
or
sub
sub
stos
or
dec
mov
sti
loope
pusha
add
test
cmp
fs
pushf
add
cmp
aam
aad
scas
sbb
aam
jo
jo
lea
jno
sub
cmp
enter
shl
mov
cmp
shr
sub
sub
xchg
mov
push
ror
sbb
cmc
mov
mov
xor
push
fldl2e
hlt
xchg
sub
jmp
pushf
rcr
or
ror
mov
call
(bad)
popf
cwde
mov
hlt
test
jo
retf
fadd
iret
test
xor
inc
das
cmp
cwde
xor
xor
sub
cmp
retf
mov
arpl
fisub
pusha
lods
ins
enter
sbb
lods
dec
fdivr
cmp
pop
gs
sbb
aaa
push
lods
pusha
and
movs
out
inc
bnd
les
push
inc
pusha
leave
movs
mov
fwait
add
mov
iret
pop
inc
iret
test
dec
dec
xor
les
inc
sahf
loopne
mov
add
dec
cmp
sbb
pop
les
lock
add
nop
lea
sbb
xor
and
scas
and
and
rol
mov
adc
movs
mov
or
jbe
bound
jo
test
ja
dec
retf
dec
icebp
or
xor
adc
fnstenv
dec
lods
cmc
push
dec
xor
dec
daa
pushf
and
and
adc
sbb
xchg
scas
xchg
push
movs
cmc
or
movs
or
sbb
test
aas
sbb
fild
iret
psubq
cmp
retf
mov
hlt
aam
mov
dec
xor
xchg
in
pushf
dec
jnp
loope
adc
nop
inc
push
mov
xchg
inc
xchg
hlt
ret
repnz
adc
mov
sbb
ins
pushf
adc
mov
jmp
je
cli
mov
mov
mov
add
int3
lahf
or
nop
inc
push
mov
and
xchg
xchg
sbb
push
or
mov
mov
adc
fidivr
shl
mov
pushf
or
out
les
(bad)
movs
push
enter
nop
mov
cs
and
jne
add
(bad)
and
cli
mov
adc
retf
lods
mov
aam
dec
or
inc
adc
ret
fild
add
(bad)
enter
cmp
mov
cs
xor
xor
nop
inc
pop
fdivr
fsub
mov
je
ret
or
push
gs
in
cmps
outs
sub
lods
add
rol
add
mov
or
jnp
pop
pop
mov
retf
dec
xor
test
sbb
add
add
adc
(bad)
std
push
retf
xchg
test
mov
mov
and
in
(bad)
imul
ja
hlt
adc
xchg
sub
push
xchg
(bad)
xchg
xchg
(bad)
or
sar
(bad)
xchg
mov
(bad)
xchg
xchg
mov
ficom
inc
dec
or
dec
add
jecxz
rcl
push
in
jge
or
inc
test
add
jo
lock
sbb
or
inc
lock
(bad)
call
adc
or
push
xlat
mov
inc
add
pop
inc
mov
mov
stc
stc
mov
aad
retf
clc
mov
(bad)
jg
push
add
cmp
adc
lahf
xchg
retf
adc
pop
ret
mov
mov
mov
movs
movs
mov
mov
clc
lods
retf
out
mov
mov
rcl
rcl
cmp
iret
(bad)
xchg
(bad)
xchg
xor
add
addr16
popa
nop
addr16
imul
(bad)
mov
cwde
add
dec
or
xchg
add
xor
inc
sbb
jo
inc
xor
or
dec
int
or
imul
and
cmps
imul
cmp
imul
imul
imul
jb
sub
or
retf
nop
xchg
jne
in
inc
or
xchg
mov
mov
in
(bad)
enter
jb
pop
cs
loopne
cs
retf
in
in
lock
clc
jb
mov
add
cs
retf
in
adc
sbb
jb
pop
and
sub
cs
retf
xor
cmp
retf
in
mov
mov
pop
pop
pusha
fs
retf
in
push
fnstcw
test
add
fisubr
jle
add
js
add
mov
cmp
add
outs
sub
adc
stos
nop
enter
push
and
adc
add
cmp
mov
jne
pushf
and
xchg
jecxz
mov
daa
sub
sbb
pushf
mov
mov
shl
sbb
jne
sbb
add
cmp
and
adc
movs
test
stos
enter
xchg
push
add
and
cld
mov
not
adc
movs
xchg
in
mov
mov
xchg
pop
inc
sbb
sub
pop
lods
nop
lods
fist
push
pop
push
push
push
xor
inc
fwait
ror
cmp
fisttp
call
cld
cmp
je
es
sbb
push
push
push
cld
movs
inc
fidivr
and
xor
pop
add
xchg
sbb
and
jle
in
cmp
adc
pusha
or
jo
pop
sub
jmp
push
push
push
add
pop
sub
or
adc
inc
adc
add
dec
call
int
pop
jle
sub
mov
sbb
and
adc
cmp
cmp
inc
mov
push
ins
sub
les
adc
pop
sbb
inc
xchg
inc
xor
adc
pop
push
jp
dec
sub
test
or
push
pop
mov
pushf
movs
dec
inc
fsqrt
mov
xor
inc
sbb
fbld
clc
js
or
(bad)
adc
dec
or
dec
shl
push
sbb
and
add
dec
jg
and
inc
add
cmps
sbb
js
inc
mov
das
and
jmp
dec
push
adc
and
push
jb
push
and
add
adc
jl
pop
mov
or
(bad)
std
aas
push
fld
int3
and
sbb
or
jl
adc
add
loopne
mov
in
or
rcl
ret
xor
push
test
or
and
cmp
or
jb
lahf
or
cmp
outs
or
jb
xlat
inc
mov
inc
or
add
mov
aam
lahf
pop
jp
and
or
mov
ret
adc
xchg
and
call
and
outs
pop
movs
sub
loope
xchg
dec
call
xchg
xchg
outs
ja
mov
jne
mov
mul
or
adc
mov
js
dec
mov
inc
xor
test
dec
adc
or
sbb
sbb
lea
and
ret
(bad)
sahf
jmp
inc
push
js
and
and
mov
or
and
or
rol
cs
dec
pop
fstp
mov
pop
pop
ror
push
lahf
ror
jnp
retf
xor
xor
cmp
pop
lea
or
jbe
cld
sub
pop
cmp
sub
pop
xor
or
rol
mov
dec
mov
test
sbb
xor
cmp
and
fiadd
test
mov
cmp
ins
sbb
stc
aad
das
jns
jne
mov
xor
cmp
and
and
jg
and
adc
add
sub
lock
test
je
mov
jo
xchg
lds
sbb
fmul
xrstors
rol
or
add
nop
leave
lock
rcr
add
cmp
push
cdq
add
test
and
mov
xchg
test
inc
add
adc
stos
js
add
shr
adc
ret
inc
push
add
add
mov
xor
or
enter
and
clc
mov
out
cmps
push
lock
rcl
jecxz
into
adc
and
mul
sbb
arpl
dec
in
dec
div
xchg
cld
mul
imul
add
xchg
out
out
add
add
xchg
out
out
or
push
ja
inc
jecxz
lahf
lock
ficomp
and
push
sub
push
inc
inc
pop
iret
sbb
mov
and
das
mov
sar
mov
cld
xor
sbb
and
sbb
stos
jmp
cmp
or
int3
es
sbb
inc
retf
pop
jge
das
icebp
cmp
push
push
push
ins
fstp
lock
adc
stos
aas
add
sbb
push
or
or
mov
test
mov
mov
pop
fcmovnb
adc
scas
add
lock
pusha
js
sbb
xor
js
sub
std
or
jmp
push
movs
sub
movs
lock
clc
push
push
sbb
je
nop
xchg
test
adc
iret
or
or
push
rol
cmp
popf
sbb
xor
sbb
aam
lods
xchg
outs
push
(bad)
(bad)
aad
jb
push
enter
jl
loope
adc
iret
dec
enter
lahf
cmps
push
jns
push
xlat
popf
and
arpl
out
xor
push
xor
in
add
jb
cmp
fs
gs
and
and
in
inc
pop
shr
jmp
or
pusha
test
rol
pop
test
mov
jno
adc
xlat
cmp
xor
loopne
jb
add
add
pop
loopne
and
add
enter
sbb
stos
cmp
xchg
add
cmp
pop
nop
or
mov
add
mov
pop
test
jl
and
call
xor
xor
cmps
mov
add
fmul
loop
loope
fisttp
daa
xor
test
sub
(bad)
and
xor
or
adc
cmp
dec
or
add
bound
psrlw
xchg
and
jns
and
xor
inc
fild
push
test
sbb
inc
dec
rcr
dec
add
loope
int3
call
or
jge
add
inc
pusha
bound
xchg
popa
pop
pop
rol
adc
and
dec
adc
and
adc
or
loopne
call
popf
mov
add
fst
cmp
ret
mov
retf
jg
mov
lahf
pushf
xchg
mov
and
xchg
fwait
mov
sub
xchg
sub
xchg
xchg
dec
ds
xlat
xchg
sbb
icebp
xlat
pushf
fsubr
loopne
ret
lahf
pop
repnz
xor
or
fld
cmp
aas
mov
popa
mov
mov
in
fist
ret
lahf
aam
out
nop
xchg
add
inc
test
cdq
dec
xchg
sahf
nop
xlat
add
sbb
jle
retfw
enter
clc
(bad)
sbb
jb
cmp
push
push
stc
retf
aas
fcomp
test
cwde
cwde
pop
push
push
pusha
adc
jle
(bad)
mov
adc
lock
sbb
fbld
and
mov
loopne
mov
mov
repnz
mov
clc
or
push
sub
ja
mov
mov
mov
pop
dec
lds
and
mov
fwait
cmp
nop
xchg
adc
jg
pop
mov
xor
pop
retf
cwde
mov
adc
inc
pop
adc
call
nop
xchg
mov
sub
jmp
jg
inc
inc
mov
lods
sbb
enter
mov
cmp
adc
ret
pop
lods
lods
inc
cmp
enter
xchg
int3
push
shl
sar
push
fcom
pop
int3
rcl
add
js
iret
xor
adc
daa
or
fld
xchg
mov
ret
sti
jbe
push
(bad)
daa
add
sub
inc
lds
daa
jmp
xor
xchg
bound
or
repnz
mov
and
or
sub
leave
in
push
add
mov
push
add
and
or
pop
push
pusha
dec
js
sar
mov
das
cs
adc
mov
mov
inc
sbb
mov
pop
and
loopne
neg
shl
lock
outs
dec
xchg
dec
dec
cmp
dec
adc
arpl
out
add
rol
cmp
les
shr
add
and
inc
dec
in
sub
sbb
xchg
pushf
mov
iret
movs
movs
call
clc
xchg
jmp
xor
movs
fnstenv
mov
test
mov
mov
sbb
fmul
add
sbb
loope
or
sub
outs
and
in
aad
pop
xchg
or
jp
les
(bad)
inc
push
repnz
retf
fild
push
call
into
aas
add
fist
call
xchg
ret
mov
sub
xor
out
retf
cwde
push
dec
fild
xor
aas
in
mov
inc
or
popf
push
add
or
call
xchg
adc
xchg
push
pmaddwd
lahf
pop
cli
call
icebp
loopne
xchg
push
push
add
nop
or
dec
add
frstor
and
inc
(bad)
stos
push
cld
sub
jne
call
add
xor
aaa
mov
xor
sub
test
mov
sub
mov
xor
pop
cmp
dec
repz
and
in
xchg
xchg
test
mov
mov
enter
ror
adc
pop
mov
and
or
jmp
adc
pop
cdq
movs
repnz
push
cmp
sbb
sub
or
sub
stos
call
xchg
lock
mov
arpl
je
loopne
dec
es
cs
mov
js
xchg
xchg
inc
js
fnstenv
cs
mov
fdivr
xor
xor
cmp
or
fmul
rcr
sbb
shl
sbb
push
and
sbb
sbb
dec
and
sbb
les
xchg
inc
ss
dec
adc
movs
xchg
inc
or
xor
in
aam
fmul
enter
in
xchg
out
sbb
nop
pop
xor
mov
jb
out
out
in
in
and
jb
test
test
in
xor
inc
push
clc
cld
cwde
add
daa
pop
repnz
add
lods
mov
xor
lods
cwde
cwde
cwde
add
sahf
cmp
cwde
or
adc
popa
outs
and
and
(bad)
jnp
pop
sbb
sbb
sbb
div
mov
mov
mov
mov
mov
retf
mov
mov
xor
test
mov
idiv
mov
mov
neg
div
div
mov
scas
jg
in
mov
push
stc
neg
pop
mov
in
test
xor
rcr
fadd
and
loopne
retf
adc
out
fsub
stc
pusha
jmp
movs
mov
jg
outs
jg
mov
ins
mov
pusha
cli
pop
push
xchg
mov
js
jb
and
jo
and
push
cdq
loope
rcl
xchg
jg
aas
sahf
dec
inc
pop
sahf
xor
adc
aas
jl
cmp
jl
test
cld
mov
mov
mov
mov
or
and
push
ja
mov
cs
int3
shl
sub
and
xlat
jg
jae
inc
fdivr
jo
add
push
sahf
jo
pop
inc
pop
and
sub
mov
cmp
retf
inc
movs
daa
adc
mov
xor
clc
push
lods
and
je
mov
out
ror
(bad)
out
leave
jge
push
test
test
adc
inc
sub
int3
or
add
or
mov
lds
imul
inc
jb
add
add
push
cmp
(bad)
jmp
cdq
cmp
cld
movs
mov
sahf
clc
loopne
test
or
cs
stc
pusha
xlat
cs
(bad)
pusha
mov
dec
call
in
xrelease
adc
mov
push
pop
push
mov
inc
rol
lahf
add
shl
lds
add
lods
sbb
or
or
in
cdq
movs
in
int3
jl
push
dec
cs
in
pop
jb
in
push
dec
or
pop
and
push
jo
ret
cmp
sub
shl
gs
or
pop
lods
dec
mov
popa
jp
pushf
cmp
mov
or
call
scas
xchg
int
daa
inc
sbb
xor
or
push
push
dec
jae
jl
sbb
mov
push
fisubr
mov
mov
cmp
mov
lock
shl
dec
dec
gs
mov
lea
pop
and
(bad)
add
lahf
lea
sbb
or
inc
rcl
test
push
rcl
lods
lahf
js
scas
mov
cmp
adc
imul
fidivr
mov
jl
mov
sbb
mov
dec
les
pop
pop
or
dec
pop
leave
xchg
xchg
xchg
jo
cwde
in
cwde
lock
repnz
hlt
cwde
clc
cwde
cld
xor
stos
mov
jb
or
jg
push
repnz
ins
cdq
add
jae
pop
cdq
or
shl
and
ret
jg
in
leave
push
dec
sahf
mov
cdq
sbb
and
cdq
mov
fbld
jo
enter
jg
cmp
sub
test
jle
loopne
sbb
pop
pop
sub
daa
cdq
cmp
ds
ds
cmp
cdq
cmp
(bad)
sahf
cld
mov
mov
repnz
cdq
inc
cdq
dec
cdq
dec
mov
cdq
push
cdq
push
pop
jo
daa
setns
adc
jg
pop
dec
fistp
repnz
cdq
xchg
jg
sbb
adc
sbb
sbb
lea
ins
jo
xchg
inc
pop
jg
je
mov
sub
pop
ret
lahf
inc
inc
cs
inc
inc
js
leave
or
test
mov
ss
push
lahf
adc
test
nop
in
inc
push
xchg
cwde
pushf
xor
push
pushf
mov
fwait
es
or
mov
push
(bad)
adc
or
push
pop
adc
push
and
sbb
jne
in
pop
sbb
adc
ins
jne
cdq
sub
in
add
in
add
push
and
sub
inc
mov
shl
xchg
mul
rol
sbb
nop
mov
inc
aad
or
xchg
mov
add
leave
sbb
dec
push
in
or
jl
sub
cs
repnz
ds
push
push
(bad)
daa
mov
push
inc
in
lods
jmp
stos
mov
iret
jnp
sub
in
xlat
or
push
lahf
dec
call
cmovnp
pop
xor
mov
pusha
cmp
sub
xchg
inc
aas
cmp
sahf
lods
pushf
cmp
movs
cdq
test
lods
bnd
daa
cdq
mov
mov
mov
enter
movs
lahf
fs
and
mov
mov
(bad)
mov
js
lahf
js
enter
xor
enter
or
rcl
ret
mov
(bad)
fild
xchg
test
xor
and
in
popa
pop
enter
cwde
adc
inc
cwde
sub
sub
inc
push
mov
sbb
fs
cld
(bad)
cdq
in
xchg
in
lods
lods
sub
call
nop
daa
dec
call
enter
shl
repnz
in
repnz
push
cdq
aam
adc
and
call
sub
xor
xor
loopne
loopne
cdq
or
cmp
cmp
and
inc
call
dec
call
and
sub
mov
push
dec
call
rol
std
sbb
xor
xor
dec
imul
retf
and
xor
push
movs
shl
arpl
sbb
push
jne
and
loopne
test
int
cdq
cs
add
fadd
shl
cmp
ret
push
inc
lea
lods
lods
pop
adc
adc
add
lock
fwait
sbb
mov
jp
or
stc
cmp
or
add
inc
add
jg
fdivr
push
adc
xor
(bad)
(bad)
cwde
sar
mov
rol
pop
je
push
in
add
lods
jae
mov
push
xchg
xchg
add
leave
enter
shr
ins
js
repz
rcr
push
pop
mov
loope
pop
movs
and
test
into
inc
cmp
push
sub
inc
jl
test
cmp
test
dec
cmp
inc
scas
loope
or
out
inc
call
pushf
jbe
mov
outs
sbb
into
mov
pusha
push
inc
fild
fadd
int3
es
add
and
stc
popa
add
movs
sar
add
(bad)
cmp
xor
fmul
sbb
jns
fst
lods
lods
pop
vmread
push
xchg
cs
enter
add
sbb
pop
test
pop
xor
rol
jmp
rol
or
cmp
sbb
sahf
or
cmp
pop
leave
jno
pop
fidivr
mov
mov
dec
jbe
mov
push
dec
jp
cmps
adc
mov
ins
mov
mov
adc
pop
xor
push
mov
cmp
cmp
ins
mov
addr16
add
mov
jbe
add
push
mov
fcom
adc
test
out
(bad)
cmp
pushf
int3
(bad)
clc
repnz
pop
movs
sub
dec
retf
fadd
rcl
rcr
movs
mov
dec
loop
cmp
(bad)
xchg
sahf
pop
cmp
or
ror
shl
ja
adc
mov
lahf
dec
lock
pop
add
sub
xor
adc
les
dec
sbb
enter
sbb
jns
mov
pop
or
and
xchg
enter
jmp
movs
ror
add
dec
push
fcom
inc
jb
lods
sub
(bad)
sbb
jle
aam
ins
inc
cmps
or
cld
adc
ja
(bad)
xor
sbb
cld
mov
call
and
mov
mov
cmp
sub
cmps
dec
push
call
sti
xchg
aam
jmp
repnz
mov
jmp
(bad)
push
inc
jb
cmp
(bad)
lea
ins
jge
or
pusha
fsubr
mov
jl
or
or
cmp
or
mov
mov
leave
stos
ret
mov
call
mov
std
mov
call
lahf
xlat
mov
jl
add
sub
mov
das
aas
(bad)
pop
pop
call
cmp
sbb
add
pop
xchg
fs
call
mov
cmps
mov
(bad)
repnz
mov
mov
xchg
mov
mov
mov
sub
test
mov
movs
scas
pop
mov
idiv
movs
mov
cdq
jns
jge
test
test
popf
ret
mov
jg
and
adc
nop
or
adc
mov
data16
push
cmp
and
push
mov
daa
test
mov
lods
clc
into
pop
xor
mov
add
mov
mov
or
mov
mov
cmp
rcl
call
mov
leave
or
aam
mov
xlat
(bad)
aam
nop
pop
push
xchg
aad
leave
push
cs
cwde
xchg
xchg
in
inc
cmps
aas
imul
cmp
mov
dec
pop
xchg
adc
push
mov
mov
retf
cmp
and
add
(bad)
and
in
dec
push
xchg
sbb
in
or
mov
inc
sub
and
loop
idiv
fisttp
fs
add
rcl
in
pop
and
dec
push
jb
pop
xchg
(bad)
jle
outs
popa
xor
mov
jne
lods
mov
inc
xchg
xor
xor
dec
in
in
adc
dec
add
inc
jb
dec
add
nop
lods
add
and
ja
xchg
in
add
pop
inc
or
dec
js
ret
rol
push
retf
inc
ror
or
or
and
and
or
sbb
inc
adc
stos
cmps
loopne
test
mov
sub
(bad)
dec
shl
inc
call
add
shr
movs
rol
and
stos
dec
out
test
or
and
and
in
xor
loopne
fild
daa
xchg
(bad)
pushf
fnstsw
xchg
out
mov
out
add
add
xchg
daa
dec
mov
call
add
call
in
in
movs
adc
mov
cld
adc
clc
sahf
mov
fwait
add
inc
fwait
or
xchg
mov
clc
clc
fwait
or
xchg
fwait
adc
inc
push
enter
fwait
or
dec
pusha
xchg
int3
int3
mov
lahf
sub
sub
fwait
sub
int3
pop
mov
jb
mov
mov
dec
cmp
xor
or
sbb
sub
in
ret
pop
nop
xchg
dec
jae
cmp
cmp
(bad)
loopne
jg
inc
fwait
inc
push
mov
jg
fsub
clc
call
jle
inc
adc
xor
cmp
nop
push
pop
pop
dec
push
repnz
mov
adc
mov
pusha
repnz
shl
fwait
ins
xchg
dec
push
fwait
jo
fbld
sbb
adc
enter
js
dec
and
pop
shl
xor
(bad)
jb
and
cmp
xchg
popa
cwde
test
fistp
pop
test
adc
add
push
repnz
fwait
movs
fwait
test
lods
xchg
sbb
jg
pop
aas
mov
and
and
fwait
mov
pop
mov
or
inc
rcl
shl
mov
repnz
les
sar
ret
pop
jl
mov
sbb
aas
inc
push
cmp
fadd
sbb
xor
aas
mov
inc
push
lods
in
or
cmp
xchg
popa
pop
pop
test
mov
nop
test
push
and
mov
fdivr
pop
fcom
and
rcr
dec
and
mov
xchg
xchg
dec
retf
in
inc
xchg
and
or
popa
cmp
jae
mov
pusha
inc
shl
mov
pop
xor
mov
dec
fcom
in
jp
xchg
retf
int3
cmp
mov
xchg
iret
pushf
ins
pushf
ins
mov
and
mov
xor
add
rol
xchg
or
mov
fdiv
mov
and
mov
pop
sbb
xchg
push
dec
loopne
shr
xor
cmps
adc
xchg
mov
sub
mov
pop
add
int3
cmps
inc
scas
inc
jnp
push
push
cdq
inc
fcom
and
mov
vmovapd
adc
or
outs
fsub
adc
jbe
sbb
add
adc
push
adc
lods
xchg
xchg
aam
dec
jecxz
and
mov
jl
sbb
cmp
sahf
add
movs
mov
stc
or
sbb
fst
in
imul
adc
mov
adc
inc
test
adc
mov
add
cmp
cmc
add
add
adc
add
gs
or
(bad)
rol
cmps
call
mov
add
push
jno
cmps
push
dec
in
sbb
jl
jl
xor
retf
cmp
lea
das
xchg
xor
mov
js
fnstcw
imul
mov
push
cmp
sbb
mov
sbb
enter
mov
mov
and
add
std
js
push
mov
mov
and
sti
dec
out
imul
push
xor
dec
imul
gs
popf
or
popf
cmps
inc
and
fsub
pop
push
and
aam
sahf
xchg
mov
mov
(bad)
mov
ror
test
mov
jmp
retf
and
or
enter
jns
call
fwait
jmp
ja
repz
jmp
sahf
dec
push
mov
mov
jns
ror
sahf
add
lock
dec
sahf
cmp
hlt
fwait
clc
fwait
cld
pushf
stc
dec
cli
test
pushf
add
test
pushf
or
addr16
ds
or
lahf
pushf
adc
leave
xchg
ja
pushf
adc
sbb
pushf
and
in
fcomip
mov
mov
enter
sahf
cmps
shl
pop
cmp
enter
pushf
cmp
and
dec
or
push
pop
jle
ror
daa
pop
cmp
ja
mov
fs
push
call
push
cmp
inc
dec
cmp
mov
jns
pushf
je
je
jae
jb
icebp
cmp
xor
fwait
shl
jns
mov
mov
or
mov
pop
repz
or
loopne
test
rol
inc
inc
inc
push
mov
fsubr
mov
(bad)
add
clc
xchg
inc
cs
add
inc
or
stos
adc
or
inc
sub
cs
pushf
in
mov
xchg
xchg
inc
dec
dec
dec
fnsave
cdq
aam
push
test
or
sbb
xchg
lea
add
(bad)
ins
and
leave
xor
es
daa
and
arpl
ins
nop
push
(bad)
sbb
test
pop
adc
test
in
mov
lea
sbb
push
dec
mov
inc
add
nop
fadd
add
jne
int
jmp
xchg
js
leave
or
int3
aaa
leave
in
inc
lods
cmp
mov
mov
shr
mov
adc
sub
popf
repnz
movs
pop
ja
dec
pushf
mov
pop
xchg
mov
add
mov
mov
xchg
sbb
pop
mov
xchg
in
rcl
mov
cld
mov
push
jns
(bad)
mov
mov
mov
xchg
retf
xlat
mov
mov
mov
xchg
lods
cmps
mov
cwde
sbb
xchg
xchg
xchg
push
push
sbb
pop
add
out
in
push
mov
test
adc
xchg
retf
jg
mov
movs
xchg
mov
idiv
scas
mov
out
loope
xlat
call
popf
cli
pop
mov
adc
ret
fist
nop
mov
mov
jb
pop
mov
mov
cs
and
in
test
jne
cmp
nop
retf
mov
sahf
inc
scas
les
pop
mov
push
adc
js
(bad)
stc
jns
push
cld
lock
inc
cld
push
loopne
fild
(bad)
mov
cmp
je
cmp
add
sub
retf
dec
add
push
add
and
xchg
dec
sbb
cmp
adc
mov
icebp
push
(bad)
test
test
inc
pushf
stos
in
into
icebp
push
stc
enter
(bad)
int3
inc
push
push
adc
ret
js
shr
enter
mov
xchg
fs
inc
xchg
mov
sbb
pop
add
lods
inc
or
and
mov
leave
test
dec
rcl
dec
xor
jl
rcl
lea
push
push
xchg
mov
push
push
nop
in
or
dec
and
mov
push
xor
lods
mov
(bad)
fcomp
dec
enter
or
pop
sbb
xchg
or
(bad)
(bad)
loopne
mov
(bad)
jo
sbb
movs
and
enter
cmp
lock
xchg
sub
nop
or
movs
or
dec
loop
jmp
movzx
or
test
jmp
xchg
pushf
xor
inc
push
mov
adc
and
jae
add
push
push
sbb
ret
xchg
and
mov
daa
ret
js
enter
adc
push
add
enter
and
mov
inc
push
adc
loope
mov
(bad)
dec
pop
adc
xchg
arpl
sahf
xchg
mov
mov
adc
in
sbb
xchg
lods
fwait
xchg
cld
jp
sbb
xchg
dec
movs
sbb
nop
pop
and
inc
dec
cmp
shl
in
pop
lahf
or
mov
mul
jecxz
int3
mov
add
xlat
mov
int3
jg
cld
jb
test
mov
sar
leave
in
inc
sar
dec
and
rol
les
cdq
or
or
mov
arpl
adc
dec
inc
call
xlat
pop
rol
inc
mov
inc
repnz
stos
xchg
out
mov
add
adc
add
dec
pop
dec
int3
pop
mov
sub
pop
mov
xor
pop
in
or
sbb
and
add
int
add
pushf
adc
mov
sbb
add
test
movs
sub
and
push
add
adc
or
(bad)
dec
loopne
and
cmp
es
xchg
dec
movs
addr16
cmps
mov
das
ins
add
mov
push
push
add
out
add
and
in
movs
mov
das
add
and
fcom
or
cmp
sub
add
add
imul
dec
jnp
lods
enter
mov
push
sub
imul
test
cs
push
or
mov
push
imul
sahf
fldlg2
int
push
dec
inc
inc
pop
int3
jo
fstp
add
xor
loope
cmp
lods
rol
dec
sbb
mov
mov
cmp
xor
add
lods
(bad)
sub
push
in
popa
cwde
mov
fs
test
inc
pop
inc
hlt
xor
adc
mov
cs
mov
lock
push
aam
test
or
lods
xlat
dec
dec
mov
inc
aam
mov
or
pop
daa
dec
lods
xor
loope
leave
inc
pop
jl
jl
mov
lahf
adc
int3
cmp
or
sbb
or
loop
adc
xor
xor
add
jns
mov
sub
neg
and
sbb
shl
in
add
aad
push
add
push
inc
stos
inc
cld
sbb
enter
fstp
and
mov
pop
sbb
fwait
movs
add
and
dec
and
mov
xchg
pop
add
iret
leave
inc
add
and
pushf
sbb
sub
add
push
jo
mov
inc
hlt
and
add
mov
add
pop
cmp
mov
sbb
jno
daa
dec
test
inc
xor
dec
sbb
push
mov
xchg
pop
shl
sub
or
in
jg
aam
add
(bad)
mov
bound
xor
xchg
je
(bad)
aam
push
xchg
cld
inc
addr16
xchg
dec
pop
add
or
inc
inc
sbb
ret
iret
inc
loopne
mov
dec
fbstp
in
in
lock
dec
in
test
push
lea
push
push
cmp
inc
push
add
test
inc
mov
push
add
xchg
inc
inc
and
xor
test
dec
hlt
cmp
jl
and
and
mov
outs
dec
and
or
adc
pop
push
push
cmps
jg
inc
add
aad
inc
and
xchg
dec
add
dec
mov
xor
or
or
add
push
and
or
in
scas
push
aad
add
fild
mov
sub
neg
dec
mov
rol
enter
inc
xor
inc
aas
xchg
and
out
rol
or
push
ret
repnz
aas
xlat
sahf
xlat
sahf
sahf
inc
sahf
(bad)
and
and
inc
sahf
inc
and
and
mov
ret
or
mov
or
sub
sub
jge
or
rep
sbb
pop
das
or
sbb
or
pop
pop
jb
or
bound
movs
pop
fs
fs
push
addr16
fs
imul
ins
fs
cwde
cdq
call
popf
in
sub
fs
push
mov
fs
movs
movs
xchg
inc
push
cmps
cmps
test
leave
dec
push
and
and
mov
fld
mov
inc
push
fs
xchg
xchg
push
fs
push
xchg
xchg
xchg
dec
dec
xchg
inc
xchg
nop
push
mov
int
ret
aas
add
adc
cmps
fnstenv
pop
rcr
repnz
sbb
rcr
inc
adc
push
push
jmp
pop
les
sar
adc
xor
aas
jmp
hlt
or
or
xchg
jmp
stos
shl
fadd
repnz
or
xchg
jo
mov
add
fistp
jb
test
jmp
inc
and
popa
stc
fs
imul
and
inc
in
dec
sbb
adc
pop
or
adc
push
lock
or
cmp
add
adc
xor
sbb
daa
fistp
out
pop
push
sbb
cmp
stos
sub
dec
rol
pop
and
push
sbb
push
(bad)
mov
add
mov
cmp
(bad)
adc
cmp
mov
mov
adc
ds
lock
inc
enter
ret
jge
outs
(bad)
fwait
mov
push
aas
enter
jno
leave
mov
or
in
jmp
push
push
cmp
lods
popf
mov
push
and
(bad)
je
push
repz
push
sub
xor
cli
push
test
push
sub
bound
cli
push
stos
jne
pop
or
fsubr
mov
or
sbb
push
sub
hlt
mov
je
push
push
or
imul
xchg
fwait
and
test
inc
push
cmps
jne
jmp
psraw
(bad)
xor
mov
pop
rcl
sbb
adc
sbb
out
adc
mov
stos
push
add
or
clc
(bad)
lods
inc
sub
shl
adc
jg
sbb
je
jmp
jge
mov
or
(bad)
cli
mov
inc
and
daa
jbe
sub
movzx
adc
add
nop
push
out
loope
add
pop
lods
(bad)
sub
sub
push
push
mov
pop
mov
fimul
je
pop
rcl
cld
push
mov
or
leave
xor
ret
outs
cmp
setns
xchg
push
cs
fcomp
mov
mov
lods
fs
xor
in
(bad)
sub
and
mov
stc
cmp
adc
pop
pop
cmp
je
cmp
cmp
push
and
call
or
sub
mov
retf
add
cmp
dec
ficom
faddp
pop
add
add
fs
scas
or
jg
sub
jno
repnz
lea
inc
or
push
out
cmp
sub
mov
dec
push
movs
dec
clc
mov
jecxz
cld
xor
or
or
repnz
dec
lods
(bad)
adc
jmp
lds
add
ret
(bad)
cmp
data16
repnz
mov
cmp
movs
lock
push
mov
mov
jg
and
repnz
fistp
call
mov
scas
adc
mov
mov
fstp
sub
pop
jmp
add
mov
cmp
inc
add
or
movs
xchg
xor
ficom
dec
pop
add
add
dec
or
in
xor
addr16
js
add
inc
jl
and
or
or
or
or
nop
push
xchg
and
nop
xchg
and
nop
xchg
and
lahf
movs
mov
push
cmp
ins
jge
dec
dec
jo
push
mov
les
jns
dec
sahf
je
js
and
and
leave
repz
dec
jl
enter
test
mov
enter
mov
add
sbb
inc
(bad)
sbb
or
push
dec
ins
pop
pop
mov
or
pop
and
and
push
imul
ins
and
inc
mov
xor
and
adc
mov
mov
test
stos
mov
jg
mov
mov
ja
test
les
int3
adc
mov
out
mov
mov
scas
sti
test
pop
jnp
fsub
mov
test
add
test
in
mov
aas
lock
stos
mov
ja
call
hlt
mov
sti
enter
dec
ja
adc
(bad)
lar
pop
repnz
je
mov
repz
push
jns
movs
repz
xchg
jl
jmp
mov
adc
mov
sti
mov
cld
in
sti
mov
mov
scas
mov
test
les
sbb
mov
and
out
mov
scas
mov
mov
in
mov
mov
xor
pusha
adc
and
jg
in
xor
push
jl
repnz
inc
xchg
mov
mov
dec
scas
mov
aas
js
cld
dec
mov
lods
not
in
push
inc
xchg
pop
popf
(bad)
mov
xchg
pusha
call
test
in
sti
mov
out
mov
jo
stos
addr16
test
mov
sub
sub
mov
jno
repz
lods
jnp
mov
nop
mov
cs
cmp
xchg
mov
jle
fwait
out
pushf
dec
mov
fs
movs
test
in
in
sahf
inc
nop
push
in
fs
je
je
stc
xchg
mov
mov
mov
stc
enter
xchg
mov
sti
scas
mov
aas
mov
aas
enter
mov
shr
sti
inc
inc
sahf
xchg
sti
mov
dec
fdivr
fwait
inc
jle
mov
call
in
sbb
lods
mov
mov
mov
aas
in
out
cmp
cld
mov
adc
stc
(bad)
cdq
fstp
out
adc
daa
inc
jecxz
stc
adc
mov
push
xchg
in
icebp
movs
sbb
sahf
and
cmc
add
add
enter
cmp
movs
and
shl
and
movaps
rol
mov
sti
scas
xlat
jae
out
xor
cmp
movs
fsub
jg
cmp
movs
inc
dec
inc
mov
sbb
add
ret
dec
mov
nop
ja
movs
push
movs
pop
dec
pop
mov
movs
pusha
test
adc
leave
lahf
dec
xor
mov
ja
mov
lds
scas
(bad)
je
mov
add
mov
dec
jl
cmc
mov
mov
add
out
mov
ror
cmp
push
and
inc
in
cwde
mov
xchg
addr16
aaa
fbld
mov
jo
aas
dec
cmps
add
inc
movs
inc
xchg
push
jns
add
and
int3
(bad)
adc
mov
jne
je
jmp
(bad)
and
xor
out
aaa
or
lods
or
mov
fcom
enter
rcr
xchg
adc
push
std
pop
pop
jns
sub
lods
sti
mov
mov
scas
mov
ins
or
sub
fmul
and
leave
in
in
fsub
push
inc
push
adc
and
add
sub
retf
jnp
js
inc
and
dec
add
mov
loope
push
ds
fwait
in
pop
sub
add
sti
shl
adc
sub
lock
nop
jmp
push
push
inc
mov
lea
inc
stos
lods
adc
xchg
test
sub
adc
movs
and
xchg
call
dec
sahf
out
or
ins
cdq
pushf
fcom
cwde
or
or
js
pop
xchg
ds
jmp
jo
inc
and
stos
push
lds
push
add
int
xchg
inc
sahf
or
loopne
sahf
add
mov
enter
shr
mov
iret
adc
add
xchg
retf
and
adc
fdivr
int
imul
add
jb
cwde
xchg
lahf
les
repnz
xchg
pop
sbb
into
pop
xchg
dec
cs
sbb
xchg
xchg
int3
add
retf
shl
cmp
pop
mov
retf
sbb
dec
cmp
enter
fwait
inc
or
adc
push
dec
iret
imul
xor
add
xor
test
fdiv
inc
cs
mov
mov
xchg
mov
add
inc
jl
xor
and
mov
inc
and
ja
xor
(bad)
pop
push
pusha
repnz
leave
outs
fdiv
jns
loopne
inc
mov
(bad)
or
nop
or
xchg
mov
sub
cdq
aas
or
imul
in
enter
or
cdq
or
lds
and
sar
adc
outs
xor
leave
dec
(bad)
je
mov
dec
jge
retf
adc
in
lods
xor
xor
nop
sub
add
lods
mov
mov
adc
enter
mov
adc
les
es
inc
jge
dec
and
or
(bad)
rcl
jb
nop
sub
xor
inc
push
ins
mov
mov
pop
sar
sub
add
mov
(bad)
cmp
cmc
mov
call
ror
pusha
lods
inc
in
xor
rcr
fdivr
jbe
sub
test
inc
lock
in
fcom
test
adc
mov
or
mov
pop
add
call
ins
ds
out
xchg
cmp
ror
movs
mov
loope
movs
test
fild
add
pop
sahf
pushf
aas
pop
test
pop
call
mov
mov
cmp
mov
mov
rol
mov
add
fsubrp
xor
adc
mov
rcl
(bad)
sti
mov
cld
enter
mov
cmp
lods
adc
mov
mov
mov
fsubr
jns
jns
add
adc
dec
mov
sbb
pop
ins
and
nop
adc
xchg
pop
jle
daa
pop
in
test
scas
lock
mov
jmp
out
mov
clc
fstp
in
mov
adc
clc
xchg
dec
cmp
xchg
add
xchg
movs
or
cmp
xor
cli
or
fstp
jle
enter
dec
adc
sbb
xor
adc
mov
xchg
pushf
jl
mov
sbb
fs
inc
push
movs
adc
and
push
fbld
call
int3
sub
sub
test
and
fsub
mov
lahf
movs
cmp
and
je
inc
inc
cs
inc
dec
cmp
retf
jg
inc
mov
mov
loopne
xchg
dec
push
ror
cmp
enter
mov
mov
dec
dec
push
rcl
scas
pop
mov
movs
pusha
or
cmp
fs
xor
or
sahf
dec
and
movs
inc
int
movsx
mov
add
enter
mov
jne
test
jb
xor
inc
dec
cmp
mov
adc
jecxz
test
mov
inc
cmp
call
aam
cmp
sbb
mov
mov
mov
mov
fnstsw
lods
mov
repnz
fbld
in
in
sbb
inc
inc
push
mov
cmp
nop
mov
fild
add
in
enter
mov
xor
xchg
je
jg
ror
(bad)
mov
stos
fmul
jns
add
test
loopne
and
dec
call
not
adc
fbstp
outs
jae
ins
xor
in
lock
xor
hlt
lods
mov
clc
mov
push
in
mov
dec
scas
arpl
mov
jnp
fbld
or
mov
loopne
mov
test
adc
lahf
(bad)
sbb
sbb
cmp
push
sub
enter
call
mov
and
std
out
leave
scas
lods
and
sub
sub
add
sub
scas
dec
xor
and
xchg
ret
xor
cmps
cmp
repnz
mov
inc
test
mov
inc
mov
daa
dec
dec
sti
ja
mov
ret
loope
mov
das
pop
mov
mov
test
daa
neg
imul
lods
out
jg
pop
(bad)
mov
sti
fstp
gs
mov
sbb
sbb
out
cwde
mov
xchg
mov
(bad)
sti
ins
xchg
call
sahf
repnz
pop
(bad)
je
stc
xchg
mov
mov
push
pusha
adc
cmp
rcr
pop
nop
movs
and
or
(bad)
and
mov
mov
(bad)
dec
mov
mov
mov
test
data16
jns
lahf
mov
mov
fbld
test
icebp
into
ficomp
repnz
sub
out
(bad)
les
fdivr
aam
ret
aas
adc
neg
mov
stos
adc
xchg
inc
push
std
mov
repnz
mov
sbb
mov
and
rcl
inc
in
loopne
sbb
mov
add
jb
mul
and
hlt
sub
cmp
or
seta
out
cwde
adc
je
and
mov
nop
pop
pop
pop
idiv
fs
jecxz
pop
ret
fisttp
or
cmp
mov
rol
int3
dec
mov
add
xlat
in
adc
test
(bad)
sar
das
aas
add
mov
scas
mov
sub
jmp
(bad)
sub
adc
aas
cmp
iret
cmc
pop
repz
mov
scas
xchg
cld
mov
pop
ffreep
retf
cmps
add
mov
add
stos
sar
jl
or
repz
mov
cmps
fcomip
inc
mov
push
repnz
inc
cmp
call
adc
adc
repz
mov
mov
mov
sahf
jmp
add
and
mov
sub
iret
enter
repz
xor
xor
push
or
adc
nop
aas
sub
push
inc
jo
fild
ror
inc
ffreep
sub
sub
dec
js
lahf
cdq
cmc
adc
mov
mov
cmp
push
pop
mov
dec
adc
popa
mov
repnz
test
mov
cmp
outs
repz
mov
mov
mov
mov
mov
frstor
adc
adc
cld
add
(bad)
fiadd
and
and
and
lock
lock
xchg
mov
xchg
cwde
pushf
mov
movs
test
push
setns
ret
mov
mov
jmp
mov
add
adc
mov
ret
rcr
aam
rcl
sub
rcl
cmps
xchg
(bad)
sub
loopne
cmps
enter
cmps
enter
mov
stc
adc
lds
(bad)
push
stc
add
dec
cmp
add
mov
cmps
int3
rcl
xchg
retf
add
cmps
cmps
rcl
ror
into
dec
cmp
int
xchg
dec
gs
aad
sub
jmp
jne
nop
inc
cmc
mov
jmp
jae
fmul
loopne
sub
stos
mov
in
ins
test
aam
and
push
ret
and
dec
or
loopne
loopne
mov
in
lock
jb
in
out
in
cmp
mov
inc
ds
pop
mov
fdivr
sub
pop
push
cli
mov
jmp
hlt
out
repnz
div
xlat
in
sbb
sub
mov
inc
inc
pop
stc
lock
ret
mov
jg
inc
push
cld
test
stos
adc
mov
lods
mov
and
mov
dec
ret
jg
xlat
aam
cmc
cmp
adc
mov
test
cmc
adc
sahf
adc
jmp
and
mov
test
jl
adc
sahf
xor
sti
lock
dec
jo
jg
mov
outs
cmp
and
loopne
test
test
jb
sbb
test
test
retf
pusha
push
push
cld
mov
pop
mov
pushf
iret
test
test
cmps
or
pushf
mov
jg
stc
dec
push
jns
movs
stc
rcr
(bad)
shl
nop
inc
dec
pusha
fs
ins
jo
inc
push
cmp
js
or
in
test
push
add
test
test
jg
cmp
cld
mov
movs
mov
cld
loopne
xchg
cmp
pop
test
sar
repnz
(bad)
pusha
mov
mov
mov
jmp
fdiv
cmp
mov
or
scas
imul
mov
pop
push
mov
mov
or
and
sbb
adc
cld
ret
dec
jne
enter
adc
mov
(bad)
xor
cmp
int3
add
rcl
sti
out
jmp
mov
in
repnz
adc
cli
adc
jne
or
xchg
dec
(bad)
fcomp
pop
loopne
repz
jmp
out
add
push
(bad)
fsubr
lock
rcr
repnz
hlt
test
rcl
clc
test
cmp
hlt
cli
inc
sbb
add
imul
movs
cmp
sub
inc
cli
dec
cli
sbb
in
pop
mov
push
jb
sub
pop
cmp
inc
test
sbb
sbb
and
and
sub
or
xor
cmp
cmp
inc
test
mov
pop
test
iret
cli
push
push
cli
push
mov
enter
push
jb
and
and
and
js
or
jl
sti
test
in
mov
xchg
sub
test
(bad)
rcl
mulps
mov
pusha
xchg
cmc
pushf
mov
push
cdq
mov
loope
lods
mov
mov
sahf
inc
adc
fild
xlat
test
test
mov
shl
out
retf
adc
adc
adc
call
adc
int3
and
(bad)
fldcw
cmp
nop
or
rcl
fsub
loopne
outs
jb
push
lahf
test
fs
out
fbld
imul
sti
add
in
lock
(bad)
(bad)
enter
hlt
sti
mov
dec
icebp
xchg
aaa
and
cld
mov
stos
add
adc
add
adc
scas
scas
scas
mov
and
jg
or
test
mov
sti
mov
inc
sbb
jnp
adc
mov
mov
in
and
mov
test
stc
xlat
mov
cld
mov
mov
xor
adc
in
sti
mov
mov
lock
inc
sti
mov
gs
popa
add
repnz
xor
pusha
cmp
or
stos
dec
dec
lods
xor
(bad)
repnz
mov
mov
push
cwde
mov
pop
iret
sub
stos
pop
out
sar
hlt
in
sti
mov
push
mov
cld
in
sbb
mov
mov
jl
stc
cmp
pusha
or
push
add
repnz
push
mov
or
pop
pushf
mov
mov
shl
pop
nop
movlps
pushf
out
mov
push
dec
jle
movs
sti
mov
jmp
cmp
push
dec
mov
test
(bad)
les
adc
ins
mov
shl
iret
data16
lock
fcmovu
jmp
sbb
in
fs
loopne
fwait
cmp
sbb
aam
shl
sbb
fsub
fisub
in
and
pushf
fdiv
sbb
sti
out
hlt
jg
retf
mov
add
stc
retf
stos
add
mov
stos
add
shl
call
xchg
mov
dec
xchg
stos
rcl
adc
hlt
mov
mov
repz
jbe
and
daa
and
cld
adc
lock
stos
sub
adc
sbb
sti
adc
sti
cld
cmp
stos
cmp
stos
inc
mov
or
lahf
dec
mov
cmc
push
cmc
aam
mov
bnd
pop
test
shr
pusha
pusha
push
pusha
push
pusha
jb
enter
nop
push
ins
mov
repz
repz
mov
or
fld
div
popf
stos
mov
adc
nop
mov
nop
nop
das
(bad)
cmp
adc
pushf
sti
call
mov
xchg
mov
out
repnz
stos
lods
sub
mov
mov
jg
repnz
xor
sbb
sbb
dec
mov
mov
push
xchg
stos
les
pop
push
in
int3
stos
sar
inc
push
fcomp
loopne
inc
push
cmp
call
in
hlt
test
daa
clc
repnz
out
cld
cmc
stos
(bad)
sbb
lea
repnz
lods
add
(bad)
stos
popa
std
push
fs
mov
mov
pop
jo
or
adc
cld
and
mov
sti
repz
and
lods
sub
and
lods
sub
xor
lods
cmp
inc
clc
inc
cmps
int
cmp
adc
mov
mov
sti
stc
mov
or
stc
sbb
and
lods
or
pop
std
pop
xor
mov
mov
nop
arpl
fs
fs
in
jo
push
cmp
nop
js
add
nop
in
inc
push
xchg
cwde
pushf
clc
mov
lods
mov
lods
test
mov
lods
lods
mov
cmps
and
push
pusha
(bad)
and
mov
ds
xor
loop
and
mov
sbb
enter
aam
sbb
or
fcomp
loopne
jb
and
call
xchg
hlt
clc
clc
sahf
sbb
add
jbe
push
mov
or
fwait
cmp
js
and
int
mov
jl
cmps
dec
lods
adc
and
cmp
lods
sbb
sbb
and
sub
jb
xor
cmp
jmp
sbb
inc
es
int3
push
(bad)
arpl
pop
dec
sbb
inc
pushf
or
lods
push
lods
adc
ror
(bad)
pusha
adc
fimul
or
(bad)
push
pop
adc
in
inc
pop
pusha
fs
nop
inc
push
push
mov
dec
lods
je
jbe
aas
out
jb
nop
fnstcw
(bad)
movs
inc
not
movs
and
movs
mov
je
sbb
xchg
in
jl
add
nop
sbb
and
jb
and
and
jmp
sbb
mov
repz
jmp
and
cmp
lock
pop
jo
jo
in
and
lods
sar
in
inc
aam
fdivr
inc
push
loopne
cmps
sti
mov
mov
jecxz
inc
in
repz
xor
sti
jg
cmps
mul
in
(bad)
enter
das
call
and
fiadd
syscall
clc
xchg
fdivr
adc
pop
retf
sbb
loopne
adc
lods
dec
pop
imul
ret
jmp
dec
enter
push
sbb
xchg
sbb
and
sub
adc
std
adc
xor
(bad)
cmp
stos
cmp
jne
fs
xor
push
xor
cmp
out
jmp
fistp
jl
add
loopne
inc
adc
xchg
push
sbb
push
scas
inc
fidiv
xchg
mov
sti
mov
test
mov
push
test
sub
xchg
adc
enter
mov
sti
push
xor
or
(bad)
aas
nop
dec
or
enter
inc
fsub
cmp
js
nop
push
mov
pop
enter
bsf
sub
stc
cs
retf
jl
fmul
lahf
pop
jmp
pop
ret
xchg
mov
push
push
scas
iret
out
nop
mov
mov
mov
fsub
and
aad
xchg
dec
(bad)
push
fidivr
leave
cmp
xchg
pop
dec
and
scas
fdiv
adc
mov
call
movs
stos
scas
mov
test
test
lods
xlat
mov
mov
xor
cmps
pop
mov
iret
or
fdiv
es
dec
lods
sbb
mov
pusha
dec
sbb
les
lock
stc
scas
enter
inc
lea
inc
cmp
inc
aam
inc
fsub
dec
jle
scas
(bad)
(bad)
stc
cmp
jecxz
test
out
scas
ret
mov
test
scas
pop
cs
jg
mov
sub
jg
out
mov
mov
mov
repnz
mov
clc
cld
mov
jle
mov
scas
add
scas
add
add
out
sbb
scas
adc
xor
adc
jl
sbb
int
sbb
adc
mov
mov
mov
jo
jg
sub
xchg
xchg
addr16
clc
dec
xor
out
nop
sbb
inc
rol
xor
js
jno
push
jmp
cmp
test
scas
fucomi
retf
rol
dec
mov
sbb
dec
data16
jp
scas
dec
and
lds
cld
cmp
pop
jo
pop
pop
fidivr
repnz
scas
xor
inc
add
cmp
cmp
sbb
scas
jo
scas
scas
adc
outs
loopne
ins
gs
scas
sub
mov
outs
ins
sub
or
retf
or
ja
call
nop
out
cmps
cmp
sub
pop
cmp
inc
scas
test
ja
and
xchg
(bad)
cmp
inc
push
scas
xchg
scas
fwait
scas
lahf
aas
in
pop
scas
mov
mov
sti
fist
sbb
inc
cmp
xor
dec
push
jns
xor
xchg
dec
push
shl
jb
and
enter
enter
xchg
aam
fsub
nop
iret
retf
loop
in
(bad)
jle
add
adc
lahf
xor
push
and
xchg
ins
call
sbb
icebp
repz
nop
pop
lahf
hlt
clc
cld
test
add
ffreep
xlat
clc
cli
adc
sahf
mov
or
mov
stc
cmp
fwait
hlt
adc
sbb
bound
xor
jne
je
sub
lahf
mov
pop
cmp
inc
mov
mov
mov
xchg
and
pop
xchg
xchg
xor
hlt
(bad)
stc
outs
jae
aaa
mov
mov
ins
aas
scas
mov
dec
sbb
rcr
and
sub
add
sbb
pop
cmp
into
add
mov
daa
dec
ss
mov
jns
in
mov
mov
mov
mov
xchg
jg
cmp
test
cdq
mov
cld
repnz
and
xchg
mov
mov
sbb
jmp
nop
sti
mov
mov
xchg
cwde
mov
out
pop
(bad)
pop
call
mov
inc
fistp
mov
adc
stc
inc
mov
adc
push
cmp
mov
dec
mov
add
int3
shl
cld
mov
inc
sbb
mov
shl
scas
mov
in
jle
in
mov
test
pop
jno
clc
call
or
clc
jp
out
cld
adc
in
in
popf
nop
loopne
cs
outs
pusha
loopne
sbb
fbstp
pop
mov
and
dec
icebp
repnz
mov
daa
adc
inc
adc
mov
sti
stc
mov
loope
call
cmp
and
sub
int3
xchg
xor
ja
inc
pop
jle
mov
mov
inc
stos
mov
test
or
dec
sti
lahf
mov
mov
add
inc
sahf
sub
adc
adc
push
pop
sahf
push
mov
enter
jmp
stc
pop
mov
mov
pusha
push
scas
(bad)
in
and
fs
mov
and
add
ins
jmp
pop
je
xchg
arpl
sar
cmp
std
mov
nop
add
and
jmp
pushf
mov
cmp
mov
cmps
pop
and
and
mov
adc
shr
dec
dec
gs
adc
or
movs
test
mov
mov
in
xchg
aaa
cmps
mov
mov
mov
out
cmp
repnz
mov
mov
adc
call
lahf
add
cmp
cmp
sbb
loopne
jae
xor
stc
mov
mov
xor
daa
inc
pop
push
xor
lahf
add
ret
add
mov
es
lahf
or
call
gs
out
jb
jmp
leave
jmp
xor
cmp
pop
fild
mov
hlt
repz
mov
lock
sub
dec
inc
inc
inc
inc
(bad)
call
xchg
add
call
sahf
mov
jb
add
mov
adc
ficomp
mov
mov
fidivr
gs
test
popf
adc
ficom
retf
mov
mov
(bad)
and
cld
mov
leave
arpl
adc
cmp
sahf
cmp
daa
fbstp
sub
xchg
daa
dec
mov
mov
mov
out
in
loop
cmp
mov
mov
sbb
dec
fisub
mov
mov
in
xchg
dec
mov
mov
mov
adc
mov
iret
and
jo
clc
out
(bad)
mul
sbb
pusha
retf
mov
xor
loop
adc
jmp
or
je
daa
dec
sahf
mov
mov
mov
jl
in
mov
mov
mov
mov
sti
and
xchg
cwde
xchg
enter
test
sahf
mov
mov
mov
hlt
jne
daa
mov
mov
test
rcr
xor
pop
imul
daa
es
popa
rol
sahf
cmp
mov
mov
mov
mov
div
daa
mov
mov
mov
sbb
cmp
fild
test
xlat
and
test
repnz
hlt
jmp
les
sub
enter
sub
mov
push
test
mov
jb
jb
add
sub
ss
sub
add
add
lds
sub
sub
adc
sahf
cmp
repnz
cld
mov
mov
mov
leave
xchg
daa
dec
mov
mov
mov
cmp
repnz
sbb
and
and
mov
mov
mov
and
cmp
mov
add
add
sahf
mov
and
cmp
dec
mov
mov
mov
cmp
repnz
dec
mov
mov
mov
xchg
daa
dec
sahf
mov
mov
mov
jns
in
mov
mov
mov
mov
daa
dec
sahf
cmp
js
jl
xor
mov
mov
mov
frstor
jns
xchg
mov
clc
jmp
adc
daa
mov
cmp
les
add
adc
ss
and
pop
mov
leave
xchg
daa
dec
mov
mov
mov
cmp
repnz
mov
mov
xchg
daa
dec
sahf
mov
mov
mov
jns
in
mov
mov
mov
mov
cld
pop
sahf
cmp
in
call
test
(bad)
test
(bad)
clc
fist
movs
jns
pop
sbb
sbb
cmp
repnz
mov
mov
mov
leave
xchg
daa
dec
mov
mov
mov
cmp
repnz
adc
sbb
dec
sahf
mov
mov
mov
and
xor
leave
mov
cmp
pop
mov
loopne
push
in
dec
mov
rcr
sub
int
mov
add
(bad)
fcom
sbb
xchg
(bad)
icebp
sbb
mov
mov
cmp
repnz
pop
mov
mov
mov
daa
scas
and
mov
xchg
xchg
jo
je
js
jl
jecxz
jns
xor
mov
add
enter
aam
mov
lahf
and
mov
mov
mov
mov
enter
add
cmp
xor
mov
add
mov
fld
ja
leave
retf
sbb
mov
pop
adc
xchg
pop
xchg
xchg
xchg
and
loopne
test
cs
loope
loop
loopne
pop
pop
les
or
int3
ja
mov
mov
hlt
fwait
call
cwde
call
inc
in
call
movs
dec
sbb
pushf
and
mov
mov
adc
inc
jle
pop
in
lods
mov
scas
mov
mov
and
sahf
xchg
xchg
mov
mov
cmc
jnp
mov
mov
mov
outs
loopne
(bad)
adc
addr16
pop
cmp
push
push
mov
jg
jno
cmp
jmp
push
mov
test
jnp
daa
loopne
cwde
adc
std
mov
popf
cli
call
lock
(bad)
in
out
hlt
out
clc
test
or
adc
dec
jg
add
inc
and
and
adc
cmp
jge
or
ja
mov
mov
mov
enter
mov
mov
mov
and
and
cmp
xor
lock
mov
stos
mov
daa
dec
sahf
cmp
cmp
inc
mov
mov
and
xchg
dec
mov
fist
fistp
fs
out
pop
mov
aas
fs
push
shl
mov
cmp
mov
mov
adc
cmc
mov
out
cmps
mov
mov
lahf
js
xchg
cli
or
xchg
das
jl
sti
or
(bad)
out
test
mov
mov
cmp
mov
and
and
mov
jl
imul
enter
mov
enter
mov
sbb
mov
mov
(bad)
js
xor
enter
mov
rcl
stc
ja
cmp
mov
les
inc
jae
jns
mov
xor
fcomp
loopne
cmp
nop
in
in
lock
call
hlt
pop
cmc
scas
mov
in
xchg
stc
mov
mov
mov
sbb
cmp
mov
mov
push
das
mov
mov
pop
sahf
sub
sub
jle
mov
sbb
nop
sbb
and
cmp
popa
in
sub
ror
adc
sti
xchg
mov
mov
sbb
mov
mov
mov
push
jb
inc
mov
mov
jns
or
mov
add
mov
push
in
pop
mov
mov
mov
mov
ds
out
mov
push
(bad)
daa
outs
(bad)
xchg
js
xor
sub
fist
mov
stc
mov
stc
mov
repnz
in
xchg
imul
repnz
push
sbb
arpl
dec
push
cli
push
sbb
pusha
retf
imul
loop
psubw
pushf
mov
loope
mov
pushf
adc
das
sub
jg
out
es
test
sbb
test
sbb
and
mov
mov
rol
int3
leave
or
aam
push
repnz
fdiv
aaa
arpl
mov
pop
cmp
aam
pop
fild
ins
push
cmp
adc
daa
aas
mov
mov
mov
pushf
add
mov
dec
and
pop
sub
aaa
cwde
mov
xchg
lock
mov
hlt
hlt
or
jno
movs
test
mov
sbb
icebp
mov
sub
pop
mov
xor
and
retf
lods
or
xchg
jns
in
mov
mov
mov
mov
daa
dec
sahf
cmp
cmp
repnz
xchg
inc
mov
mov
mov
dec
sahf
cmp
mov
mov
mov
mov
in
xchg
daa
mov
mov
mov
jb
and
mov
or
js
sub
jo
repnz
xchg
je
js
jl
or
jns
test
nop
in
xchg
daa
mov
mov
mov
sahf
cmp
repnz
mov
mov
mov
jb
and
mov
jo
shl
dec
push
or
mov
mov
mov
xchg
daa
dec
sahf
mov
mov
mov
jns
in
mov
mov
mov
mov
daa
dec
sahf
cmp
in
call
pop
leave
xchg
lock
mov
or
cs
in
or
mov
mov
mov
mov
in
add
or
dec
clc
sahf
mov
mov
repnz
and
and
sub
leave
inc
mov
dec
sahf
mov
mov
xchg
daa
dec
mov
dec
cmp
repnz
dec
mov
pop
xchg
daa
dec
sahf
mov
fs
in
mov
jo
je
dec
sahf
cmp
js
jl
cmp
mov
nop
dec
sahf
cmp
mov
pushf
mov
daa
mov
lods
and
jns
mov
mov
mov
mov
jecxz
pop
add
enter
les
enter
or
ret
mov
jl
add
in
cmp
popa
mov
sahf
cmp
mov
loopne
in
leave
xchg
daa
mov
lock
shl
mov
adc
mov
push
cmps
call
dec
into
mov
in
push
imul
mov
mov
and
fist
and
jmp
je
jb
jae
jo
mov
out
jb
xchg
sub
sub
sub
in
sbb
lds
jp
mov
xor
lahf
fs
repnz
xor
cmp
xchg
es
sub
inc
mov
data16
stos
dec
ror
nop
cmp
adc
pop
lahf
pusha
push
jb
pop
mov
fsubr
pushf
push
leave
inc
fdivrp
or
pop
imul
cdq
sar
or
inc
push
jb
dec
mov
das
jge
mov
sbb
shr
jno
sti
out
pop
mov
mov
(bad)
push
call
or
sbb
mov
inc
jl
fwait
(bad)
popf
cwde
xchg
mov
jns
mov
mov
daa
mov
mov
je
cmp
mov
rcl
pop
int3
jae
cmp
mov
mov
retf
xchg
xlat
mov
fsub
or
stc
mov
ret
pop
arpl
dec
call
push
cmp
(bad)
lock
clc
inc
dec
sahf
cmp
mov
add
fs
and
mov
sbb
adc
out
sbb
(bad)
mov
and
test
jg
fstp
jb
stos
pop
(bad)
call
mov
inc
adc
adc
and
pop
mov
in
xor
cmp
in
xchg
mov
or
jns
in
mov
pop
mov
cmp
fs
dec
adc
outs
rcr
mov
inc
add
inc
sahf
push
scas
push
je
push
cmp
js
or
in
test
mov
add
leave
xchg
daa
mov
test
movs
(bad)
mov
mov
mov
(bad)
in
call
dec
arpl
dec
pop
dec
dec
mov
repnz
xchg
sar
sbb
enter
aam
sbb
inc
xchg
out
loopne
jb
and
mov
clc
cld
pop
cmp
inc
mov
or
or
adc
adc
sbb
mov
and
cmc
mov
sub
xchg
mov
stc
arpl
scas
test
adc
adc
(bad)
xchg
das
daa
mov
jecxz
les
or
xchg
xor
dec
movs
shl
outs
les
mov
cmp
jno
aas
mov
inc
aam
pop
ret
mov
mov
push
adc
pop
push
add
mov
cmp
pop
mov
icebp
in
xchg
push
mov
sbb
mov
sub
adc
add
jg
or
pusha
push
jg
arpl
nop
pop
das
leave
add
ror
mov
cwde
in
inc
push
pushf
mov
cmp
dec
out
cmps
mov
hlt
popf
mov
les
fst
add
enter
add
adc
mov
adc
xor
cmp
xor
mov
mov
pop
push
cmp
enter
or
dec
pop
push
xor
xor
mov
cmp
push
cmp
leave
push
test
sub
xchg
dec
pop
sub
repz
xlat
lock
mov
in
inc
inc
inc
inc
xchg
fwait
aam
pop
sub
test
hlt
mov
clc
lahf
out
(bad)
cld
ret
lods
leave
cld
mov
mov
mov
jle
js
add
sti
mov
cmp
mov
push
pop
adc
sub
dec
add
xchg
repnz
sar
xchg
sbb
sbb
sti
mov
add
out
mov
int3
(bad)
jns
sub
loope
pop
jle
inc
sahf
popa
fild
push
and
mov
mov
jns
xor
cmp
(bad)
repnz
adc
sahf
repz
sti
mov
or
dec
mov
push
mov
call
pop
mov
enter
test
scas
push
xor
mov
cmps
pop
jo
xchg
or
imul
sbb
enter
sbb
cld
and
repnz
push
push
and
mov
xor
sahf
inc
sbb
call
mov
jmp
repz
fcomip
fs
pushf
mov
mov
mov
adc
daa
dec
sahf
mov
mov
iret
mov
mov
std
std
cli
fcmovnb
mov
enter
adc
stc
ror
xchg
int
mov
mov
inc
and
ret
fist
push
jae
adc
aam
fdivr
adc
fdiv
loopne
out
jmp
in
cmps
call
mov
adc
repz
hlt
test
or
cs
pop
mov
xor
sahf
adc
retf
pop
inc
mov
cmps
fsub
enter
aam
and
(bad)
inc
add
adc
pop
xadd
jae
sti
jl
and
mov
cld
add
pop
mov
(bad)
mov
test
outs
sbb
loop
sbb
(bad)
or
mov
lahf
mov
cmp
mov
xor
inc
mov
arpl
pop
jb
dec
test
sahf
lods
dec
push
xchg
xchg
mov
push
sahf
lahf
xchg
mov
pop
xchg
repnz
pusha
cmp
and
repz
cmps
dec
dec
ins
mov
mov
jo
mov
into
in
out
je
xchg
mov
js
cs
mov
dec
push
sbb
pusha
inc
or
mov
cmp
mov
dec
mov
xchg
scas
ja
stos
out
pushf
and
mov
mov
and
into
test
stos
scas
out
stc
pop
mov
lahf
xor
movq
mov
push
mov
fild
inc
sbb
adc
rcl
xchg
add
and
cwde
enter
and
fadd
inc
(bad)
std
loopne
mov
lods
dec
in
popf
scas
call
mov
in
mov
stc
add
(bad)
xchg
hlt
mov
cmp
mov
mov
and
out
nop
xchg
mov
add
pushf
nop
iret
mov
push
rcpps
out
sqrtss
push
xlat
aas
sbb
fld
jg
fistp
add
pop
cs
pop
push
add
and
push
jns
and
push
(bad)
jg
bnd
adc
or
cmp
mov
adc
sbb
scas
imul
mov
mov
xchg
sahf
out
lock
sti
xchg
fs
loope
mov
in
lock
mov
das
mov
mov
jg
adc
cmp
mov
and
mov
dec
mov
or
cmp
mov
nop
iret
xchg
ret
or
ja
sbb
pop
mov
enter
fldcw
int3
push
add
js
test
shr
push
call
ret
fbld
and
jg
xlat
dec
push
(bad)
jle
sti
mov
push
mov
ucomiss
setl
(bad)
pextrw
adc
call
add
jl
hlt
adc
mov
pushf
add
add
and
xrelease
adc
pop
mov
sub
mov
or
nop
dec
(bad)
xchg
push
lahf
cwde
or
or
dec
fsubp
loopne
cmps
mov
pushf
cs
popa
xor
lods
lahf
sahf
popf
movs
xor
jno
in
out
mov
xchg
retf
in
out
fptan
call
cmps
pop
shl
mov
sti
pop
sub
outs
jb
mov
pop
xchg
xchg
inc
and
int
mov
mov
xchg
nop
stos
sbb
cmp
scas
ins
jno
xchg
out
mov
int3
ja
add
sar
lods
mov
ins
xor
hlt
arpl
hlt
jecxz
xchg
pusha
fdivr
das
mov
ins
mov
mov
(bad)
aaa
cld
sbb
xchg
mov
inc
lock
mov
clc
mov
in
lods
cmc
cld
jp
push
fisub
repnz
test
adc
jne
ins
mov
or
in
adc
jne
or
clc
cmp
adc
cs
jg
cld
adc
mov
mov
mov
dec
adc
test
fdivr
int
and
pop
and
enter
inc
cs
fstp
out
(bad)
mov
fcomp
retf
mov
mov
mov
mov
lods
call
jbe
jmp
mov
imul
mov
inc
mov
mov
retf
call
sbb
mov
jg
mov
add
lahf
or
push
push
cdq
mov
jnp
mov
mov
movs
movs
mov
mov
repnz
add
mov
mov
movsx
pop
mov
in
dec
adc
pop
inc
xchg
aas
adc
sahf
pop
sti
(bad)
ins
or
out
stc
add
test
(bad)
js
stc
idiv
push
jmp
sbb
sbb
pop
jns
lods
mov
outs
repz
mov
loope
jmp
cmp
jg
loopne
mov
mov
stc
mov
movs
mov
iret
mov
stc
cmp
out
dec
mov
test
mov
jmp
mov
push
imul
mov
loopne
and
scas
mov
add
shl
pop
mov
adc
xor
int3
push
pop
daa
fcomp
fsub
cmp
pop
not
in
jne
aad
push
call
sti
cmps
jns
jl
pop
les
adc
sahf
xchg
and
adc
movs
stos
xchg
xchg
retf
inc
lock
repnz
mov
dec
lock
adc
jbe
mov
inc
mov
pop
jns
mov
add
hlt
cwde
push
cs
inc
inc
inc
inc
loop
jnp
lahf
jg
adc
clc
cld
test
rol
jnp
push
test
adc
mov
or
adc
or
ffreep
push
sahf
sbb
pop
push
push
mov
adc
cwde
cmps
icebp
jnp
jle
lahf
adc
aas
adc
loope
jmp
inc
adc
cdq
sbb
push
outs
adc
pop
adc
in
pusha
adc
ret
mov
retf
jne
xchg
and
and
adc
pop
shr
sub
ret
ins
adc
jo
call
ret
pop
in
out
nop
nop
cmps
shl
fs
shl
xor
xor
xor
pop
push
add
mov
mov
ins
stc
leave
mov
shl
mov
pop
pop
xor
test
jb
fild
leave
shl
dec
sbb
cmp
cmp
cmp
mov
mov
and
sar
inc
fs
inc
push
dec
dec
push
leave
and
mov
daa
inc
xor
nop
inc
pop
pop
add
nop
pusha
push
movs
jb
mov
mov
sbb
ins
in
jo
jb
pushf
jb
mov
mov
mov
js
clc
cmp
je
(bad)
in
repnz
repz
mov
jl
stos
loope
sub
pop
int3
push
sti
lahf
rcr
in
pop
adc
stc
ins
and
adc
mov
mov
scas
out
mov
xchg
mov
sti
call
pushf
jmp
sbb
adc
mov
fcom
jb
test
mov
add
retf
sbb
icebp
out
dec
sub
ins
ins
pop
push
stc
nop
jmp
cmps
sub
mov
add
pop
cmc
div
mov
leave
push
jb
mov
test
clc
cmp
fs
mov
nop
inc
push
mov
mov
rol
fs
es
cld
pusha
sbb
enter
enter
sar
daa
pop
jb
adc
adc
pop
out
inc
cs
fadd
push
mov
sbb
fbld
adc
mov
in
cmp
nop
inc
in
lock
in
xor
xor
fs
dec
push
push
clc
in
pop
cmp
rol
add
nop
xchg
or
or
fild
mov
call
adc
pop
pop
jns
adc
adc
adc
bound
jne
sub
pusha
adc
pusha
pop
fwait
retf
das
popa
push
mov
jg
mov
mov
mov
sbb
jmp
push
loop
rcr
out
stc
and
add
popf
shl
mov
in
xchg
aas
adc
sti
xchg
test
mov
repnz
mov
sub
cmps
sub
popa
icebp
inc
sti
sbb
inc
sahf
popa
adc
aas
xor
xchg
mov
dec
dec
repz
cmp
ror
ror
out
enter
ror
sbb
push
das
adc
cmp
push
cwde
pop
jg
inc
dec
sahf
lods
sbb
inc
rcr
fs
xchg
daa
shr
shl
jns
shl
mov
lods
pop
sub
repnz
jg
jg
sar
add
cmp
pop
jg
int3
inc
jge
xchg
retf
and
jle
pushf
retf
ror
ror
xor
cmp
test
ror
mov
repnz
mov
mov
cld
enter
lods
xchg
mov
mov
ficom
shl
out
call
enter
aam
ds
push
mov
lods
mov
mov
(bad)
daa
mov
test
fnstsw
in
clc
adc
int3
ja
adc
xor
lds
retf
shl
cmp
enter
int3
dec
sahf
mov
adc
adc
sub
sbb
xchg
sar
aam
jns
and
daa
dec
sahf
cmp
in
call
enter
and
cld
mov
clc
pop
repnz
cld
lods
enter
mov
push
shl
xchg
inc
shr
es
adc
adc
ja
(bad)
fistp
adc
jp
hlt
adc
xchg
mov
(bad)
ds
mov
test
pop
repz
add
and
dec
and
(bad)
data16
scas
test
scas
cmc
xchg
ret
sub
cmp
cs
fidivr
out
xchg
addr16
daa
pop
and
and
mov
cli
lea
cmp
jecxz
sti
cli
inc
jbe
arpl
fsubp
enter
mov
adc
mov
iret
adc
mov
inc
cs
and
scas
jne
add
ret
jecxz
inc
push
pop
pop
pusha
fs
enter
add
sti
cld
mov
ror
sub
sbb
je
and
pop
mov
test
inc
movs
sbb
sbb
shl
adc
js
or
jge
or
mov
stc
stos
and
mov
nop
iret
xor
(bad)
call
int
and
sbb
pop
add
cwde
pop
push
xchg
out
sub
mov
inc
xchg
adc
cwde
arpl
adc
inc
daa
mov
sbb
fidivr
in
(bad)
sub
cmp
adc
aas
mov
loope
ret
enter
es
enter
ret
sbb
and
push
aam
(bad)
aaa
cmp
mov
adc
lea
pop
js
fisttp
mov
mov
enter
mov
ror
in
movs
push
jmp
ret
xchg
retf
adc
cmp
retf
adc
adc
repnz
add
or
in
dec
sbb
call
push
lock
hlt
and
and
cld
loope
scas
sti
ret
test
(bad)
mov
adc
lods
or
ret
or
cmp
in
scas
adc
sti
dec
adc
mov
mov
enter
mov
jmp
push
cmps
je
and
push
ror
pop
adc
adc
ja
sub
mov
cli
sbb
mov
ret
xor
stc
pop
inc
adc
push
cmp
mov
lahf
inc
lods
mov
scas
adc
or
mov
sahf
mov
sub
in
jo
adc
add
loopne
push
leave
ret
push
cmps
xchg
ds
mov
pop
ret
pop
mov
mov
mov
push
ret
ins
popf
ret
jo
ficom
je
pop
(bad)
repnz
std
sti
cli
mov
push
cmp
xor
jo
xchg
stos
pop
ret
adc
js
cmp
xchg
inc
or
or
mov
dec
into
push
add
call
cwde
mov
mov
mov
sahf
(bad)
fcomp
ja
cs
clc
fist
fwait
and
mov
movs
(bad)
xlat
inc
jae
cmp
mov
pop
ret
jmp
mov
nop
xchg
hlt
pop
call
hlt
enter
rol
push
or
sbb
adc
leave
mov
aam
ffreep
adc
dec
call
jle
sbb
jle
ret
fadd
pop
scas
sub
or
and
ret
(bad)
sbb
sbb
fidivr
into
retf
adc
ja
retf
add
aas
adc
enter
in
mov
pop
call
mov
ret
lock
hlt
pusha
cmp
clc
scas
mov
mov
rcr
cmps
mov
push
sbb
add
sub
jb
or
or
adc
popa
push
jb
adc
sbb
sbb
pop
hlt
data16
mov
adc
push
fidivr
push
push
or
fidivr
jle
shl
(bad)
ffreep
sub
les
adc
leave
push
adc
mov
jle
push
int
cmp
pop
aaa
mov
mov
xor
pop
test
adc
mov
les
inc
fucom
adc
sbb
leave
retf
jle
jle
les
sbb
adc
dec
inc
inc
adc
shl
out
xchg
mov
xchg
xchg
xchg
lahf
sub
fmul
in
dec
jb
pop
add
les
push
enter
les
dec
adc
jns
pushf
jle
jle
(bad)
repnz
xchg
pop
les
les
cmp
les
ins
les
mov
pop
adc
das
and
jle
jle
les
dec
lds
sbb
js
je
leave
gs
pmulhw
jbe
jb
or
leave
(bad)
enter
dec
les
int3
aas
int3
jns
add
add
dec
adc
inc
mov
mov
inc
repnz
adc
enter
retf
jne
enter
sbb
push
xor
in
jnp
xchg
xchg
mov
jmp
retf
sbb
mov
cs
in
jecxz
add
mov
jle
push
adc
pop
int
lods
ins
pushf
mov
retf
sti
in
out
jecxz
jle
jb
push
inc
cwde
adc
sub
mov
outs
push
mov
mov
mov
inc
and
mov
sti
mov
inc
mov
aas
les
xchg
fwait
pop
mov
ds
sbb
sar
test
mov
scas
mov
int3
call
daa
shl
mov
stos
loope
hlt
dec
fdiv
or
jmp
test
scas
ret
jmp
call
in
mov
hlt
lock
repnz
pop
lea
hlt
test
mov
in
pop
lahf
ret
cld
hlt
lds
jg
sbb
daa
or
mov
cld
repnz
test
loopne
lods
fadd
lds
rol
sbb
shr
add
sbb
sti
stos
mov
scas
mov
mov
ret
(bad)
cmp
mov
scas
scas
mov
stos
(bad)
jle
ins
sbb
mov
adc
stc
jecxz
cmp
cmp
inc
cmp
cmp
mov
or
inc
jmp
lds
cmp
ins
call
xchg
fnstcw
hlt
icebp
push
sti
fwait
jo
xchg
outs
adc
mov
push
das
fcomip
pop
mov
sti
icebp
hlt
shl
sub
pop
sahf
call
std
pop
lods
test
mov
inc
or
jns
ins
lds
(bad)
ror
adc
js
call
imul
(bad)
ficom
ret
fild
movs
xchg
int
mov
fbstp
int
mov
jmp
mov
retfw
mov
(bad)
pop
adc
push
adc
mov
xor
movs
nop
xchg
sti
stc
pop
push
out
add
into
sbb
jle
mov
mov
movs
sti
stc
addr16
sub
mov
scas
popa
icebp
cdq
sbb
mov
mov
in
xchg
sub
mov
jle
mov
idiv
repnz
mov
ror
sbb
fistp
ret
pushf
pushf
mov
aam
xlat
ret
pushf
nop
pop
clc
(bad)
(bad)
and
out
repz
daa
pop
and
pop
sti
(bad)
aad
cwde
mov
sbb
fdivr
fdiv
loopne
pop
(bad)
in
mov
enter
sub
mov
xchg
jne
xchg
movs
in
mov
cld
enter
test
scas
mov
clc
push
inc
loopne
shr
adc
add
push
xchg
mov
in
fistp
cmp
nop
sahf
daa
dec
push
loope
pop
mov
(bad)
(bad)
(bad)
or
lahf
(bad)
daa
cmp
pop
push
stos
pop
and
pop
ret
adc
mov
cmp
(bad)
sbb
and
in
mov
adc
loopne
sub
sub
daa
daa
(bad)
sbb
push
xor
mov
adc
cmp
xor
fimul
adc
out
fnstcw
sub
in
push
pop
jle
out
xchg
inc
fild
stos
xchg
xchg
mov
sti
dec
repz
add
scas
retf
dec
mov
push
sub
adc
inc
(bad)
in
jg
push
mov
scas
mov
mov
or
cmp
fcom
iret
stos
lea
mov
ins
in
lock
(bad)
push
jo
hlt
mov
les
nop
ret
aas
mov
or
call
(bad)
jl
and
clc
mov
enter
sti
inc
mov
ret
pop
jl
dec
push
jns
jl
stc
test
pop
cwde
stos
sti
cmp
out
scas
mov
sbb
sti
mov
xlat
cdq
popa
push
(bad)
(bad)
mov
mov
or
pop
dec
out
arpl
mov
cmp
xor
rcr
(bad)
enter
sahf
(bad)
int3
scas
sar
(bad)
pop
pop
push
jle
in
pop
js
jne
js
dec
sahf
lods
(bad)
aam
fadd
fadd
(bad)
cmp
loopne
cmp
mov
pushf
mov
sbb
adc
je
repnz
(bad)
in
cwde
mov
test
cmp
hlt
pop
stos
cmp
mov
jg
add
leave
mov
mov
push
jmp
in
data16
(bad)
cmp
cmp
xor
push
pop
jo
(bad)
or
lahf
iret
inc
(bad)
or
or
or
or
addr16
sbb
pop
sbb
dec
mov
mov
ins
xchg
ins
(bad)
or
lock
call
leave
fistp
(bad)
adc
mov
sbb
jle
iret
arpl
mov
scas
test
sub
popa
scas
xchg
pop
(bad)
sub
push
cmp
xchg
jg
xor
scas
mov
mov
cmp
and
sbb
inc
rcr
or
pop
fild
push
mov
jae
mov
scas
mov
add
popf
(bad)
dec
mov
add
add
lahf
je
add
cs
mov
pushf
sbb
fs
push
(bad)
pop
sub
xor
adc
lods
add
adc
ss
fdivr
movs
aas
adc
fxch
je
pusha
pusha
fild
daa
dec
fidivr
(bad)
ins
(bad)
jo
je
mov
leave
(bad)
js
jl
lahf
or
enter
mov
pop
jno
call
mov
stc
sbb
(bad)
mov
and
dec
sbb
sahf
(bad)
ror
out
aaa
pop
fimul
fist
push
test
out
(bad)
pushf
enter
sahf
aas
(bad)
nop
adc
in
loopne
ret
aas
jns
mov
mov
cmp
mov
add
mov
in
mov
aas
(bad)
mov
stos
outs
pop
ret
lahf
push
push
jb
in
mov
mov
pop
enter
sbb
pop
mov
scas
lods
sbb
pop
leave
dec
cmps
inc
jle
dec
jb
sbb
mov
clc
into
in
mov
das
xchg
retf
or
or
pop
mov
inc
rcr
movs
sbb
inc
and
dec
rol
dec
dec
dec
lock
addr16
mov
mov
mov
adc
add
sub
out
shl
push
push
mov
and
mov
call
xchg
mov
in
sub
clc
jl
cs
mov
pushf
imul
add
movs
jp
rol
ss
cmp
(bad)
fxch
xor
push
add
stos
cmp
sbb
shl
inc
adc
or
out
push
cmps
mov
lods
pop
mov
xor
in
push
stos
movs
pushf
out
ins
xchg
dec
adc
or
add
xor
icebp
push
daa
push
out
mov
dec
pop
push
ret
and
xchg
inc
or
inc
pusha
add
call
sbb
call
sahf
push
xchg
inc
call
test
lea
mov
stos
ror
sbb
and
xchg
mov
inc
rcr
mov
dec
push
xor
inc
shl
mov
int
xchg
pop
adc
inc
shl
jb
adc
mov
xchg
mov
jnp
movs
pop
mov
adc
add
mov
or
in
mov
out
sub
mov
test
cmps
mov
xchg
lea
jmp
dec
ds
push
add
mov
adc
dec
pop
jns
mov
adc
xchg
out
sbb
jno
push
push
mov
fcom
ss
(bad)
mov
enter
sbb
adc
mov
ins
mov
ins
rcr
int3
and
adc
je
add
cmp
sbb
(bad)
and
mov
mov
fadd
jnp
lods
xchg
add
sbb
out
jge
(bad)
push
jmp
in
jns
mov
mov
and
sub
das
jns
or
and
call
inc
popa
lods
jl
lods
mov
out
shr
test
xchg
cmp
mov
xor
add
sbb
xor
and
dec
dec
jae
movs
lods
sub
dec
or
shr
add
mov
pop
test
ret
cwde
das
dec
loopne
stc
lea
xor
test
pop
fsubr
or
push
jp
lock
push
jns
ss
xor
jl
mov
pop
push
jle
movs
out
mov
inc
xchg
push
push
cld
fistp
les
push
and
fnstenv
xor
fadd
mov
add
and
mov
daa
in
and
inc
jl
loopne
xor
xchg
stos
push
lock
mov
mov
xlat
leave
lock
ror
lock
xor
sbb
cwde
and
inc
inc
loop
xor
jmp
ja
sub
test
test
dec
fnstenv
call
mov
mov
push
mov
push
xor
cvtpi2ps
leave
shr
and
call
lods
push
or
push
stc
jl
sub
cld
call
push
jns
cmp
cwde
rcl
leave
xchg
jmp
cwde
push
out
daa
push
mov
xchg
nop
xlat
ins
inc
fsubr
cmc
outs
xor
iret
dec
and
sbb
xor
xchg
das
clc
out
dec
ss
dec
mov
test
sub
cmps
xchg
add
jo
and
xor
xor
aam
xor
dec
jae
mov
or
lods
sub
dec
mov
adc
jmp
ins
call
cmp
fisub
inc
lods
push
clc
push
sub
jmp
cmp
adc
add
push
in
call
mov
pop
(bad)
pop
lock
scas
(bad)
or
dec
inc
or
je
jmp
push
or
out
data16
ins
inc
pop
fdivr
fisubr
jo
inc
mov
repnz
inc
push
js
inc
dec
jb
sbb
rol
dec
daa
push
inc
add
cdq
and
sub
xchg
xchg
and
push
push
shr
ins
mov
movs
sbb
inc
xchg
shr
movs
cmp
js
sbb
fwait
inc
loopne
inc
jo
xchg
int
inc
mov
sub
aas
lock
xchg
xor
ds
cmp
mov
cmp
xor
dec
fwait
cmp
cmp
mov
xor
and
aaa
dec
push
je
hlt
dec
aam
test
xor
sar
adc
and
push
repz
addr16
mov
and
inc
or
repz
and
mov
out
sub
je
sub
sbb
dec
shr
dec
pop
xor
cmp
push
xor
push
mov
pop
push
cmp
sub
cmps
dec
xchg
shr
dec
xchg
ins
cmps
xchg
xor
jmp
dec
bnd
and
cs
sbb
test
nop
or
jb
loope
sbb
int
mov
cmp
push
fmul
call
mov
push
movs
cmp
xor
call
fwait
test
xchg
jl
and
nop
sub
pop
pop
call
es
xchg
mov
hlt
xor
pop
mov
inc
loope
sbb
lea
dec
lea
out
pop
cli
xchg
rcl
pushf
arpl
rol
xchg
ins
xchg
pushf
sbb
sub
pop
push
dec
xor
pop
pop
add
shl
fsubr
in
pop
lods
mov
out
inc
rcl
xor
push
leave
out
pop
lock
shr
pushf
sbb
pop
dec
cmp
pop
adc
mov
or
data16
in
arpl
gs
jmp
add
out
in
arpl
lea
out
push
push
xor
cmp
sub
gs
in
mov
lds
in
out
fmul
in
xchg
in
addr16
push
loopne
imul
jecxz
loopne
test
jno
mov
xchg
addr16
or
jno
cdq
sub
ins
push
inc
push
dec
jae
sub
into
push
cmp
mov
push
dec
call
jle
call
leave
stos
in
out
push
scas
enter
inc
jb
ins
rcl
aas
cmp
movs
add
movs
sbb
jb
sahf
sbb
pusha
jmp
outs
outs
dec
scas
outs
mov
aaa
mov
sub
cdq
xchg
mov
jo
nop
xchg
jno
mov
push
sbb
fwait
xchg
push
repnz
sbb
test
jmp
jb
pop
and
adc
add
aam
cmp
jae
mov
fsubr
add
fsub
pop
and
jo
int
mov
push
mov
xor
ja
push
rcr
add
or
mov
add
fdivr
or
test
inc
mov
call
pusha
dec
cwde
js
loope
nop
jns
cld
in
jno
pop
je
test
test
xchg
mov
add
jb
add
add
or
jnp
fwait
retf
ins
xor
jl
dec
add
ss
lock
cmps
lds
jle
fadd
jns
shl
sub
xchg
pop
mov
push
out
mov
enter
xor
jbe
adc
or
test
jmp
dec
push
add
adc
cdq
dec
or
sbb
inc
scas
cmps
xchg
data16
jl
jnp
rcl
xor
call
push
jge
bound
mov
and
movs
clc
xor
mov
sbb
test
add
inc
call
pusha
pop
push
and
push
and
mov
and
es
in
ror
add
add
cmp
lods
add
clc
cmp
repnz
xor
nop
out
fistp
jge
into
test
stos
scas
test
xchg
cmovns
outs
out
scas
fstp
int3
dec
jo
lods
test
sub
or
mov
in
dec
mov
cmp
push
cwde
dec
xchg
(bad)
call
pushf
call
sbb
sbb
inc
sbb
leave
and
cwde
call
xchg
inc
push
test
sub
in
add
mov
or
cmp
mov
pop
hlt
push
sub
cmp
sbb
stos
xchg
xor
mov
pop
dec
and
pop
mov
xchg
jno
dec
scas
sub
push
ds
es
adc
xchg
inc
js
push
xor
stos
lods
mov
push
mov
sub
pop
and
adc
push
ret
in
jp
dec
pop
jne
adc
and
and
test
in
mov
xchg
jns
inc
mov
push
jb
push
dec
xchg
fisttp
xchg
sbb
repnz
arpl
ficom
int3
push
cmp
cmp
sbb
test
sbb
ins
test
pop
sbb
lock
push
dec
ret
in
loope
or
inc
arpl
outs
je
arpl
sbb
add
sbb
call
dec
sbb
sub
fsub
dec
push
or
in
push
bnd
dec
adc
nop
call
nop
out
push
lahf
nop
call
mov
call
ins
xor
add
out
mov
push
lahf
aas
int
pop
enter
daa
movs
mov
mov
jle
lahf
mov
stc
and
mov
test
dec
mov
cmp
adc
xchg
inc
dec
xor
xchg
jl
lods
sbb
cmps
dec
repz
test
in
and
add
call
sub
adc
nop
out
or
ret
mov
or
add
or
sbb
or
jae
retf
ins
inc
stos
inc
in
inc
dec
dec
dec
lahf
fadd
dec
ds
out
and
inc
add
dec
add
inc
call
shl
sub
mov
in
scas
ret
shr
mov
or
sub
lods
loopne
shl
lods
xchg
xchg
mov
call
dec
cs
clc
jmp
fldcw
mov
sub
mov
fnstsw
cdq
clc
mov
push
add
or
and
movs
sbb
inc
leave
ss
clc
in
mov
sub
dec
jae
mov
mov
int
jnp
jmp
sub
dec
mov
out
xchg
ins
cmps
xchg
loopne
lock
scas
fmul
sub
mov
jae
js
sbb
shr
leave
lods
nop
dec
mov
stos
dec
nop
mov
sbb
sub
fsub
movs
pop
pop
mov
inc
cs
jo
mov
xchg
mov
nop
xchg
sub
shl
leave
xchg
mov
enter
inc
push
call
dec
ja
(bad)
dec
dec
ret
xor
out
dec
call
test
int
mov
mov
push
ror
fmul
test
mov
int
(bad)
nop
lahf
popf
xor
sub
in
cwde
scas
nop
imul
enter
enter
leave
sub
in
sbb
sub
or
xchg
inc
cs
or
enter
nop
xchg
nop
into
push
leave
xchg
cwde
rcl
and
xchg
pushf
rol
int
rcl
cwde
mov
call
imul
retf
xchg
xor
leave
dec
out
xor
xor
ror
xchg
cmp
xchg
cs
pusha
call
xor
lahf
dec
ins
es
xor
pop
bnd
lahf
sub
in
dec
pop
in
xlat
jl
or
and
cmps
fnstenv
xor
fstp
nop
fdiv
fnstsw
and
(bad)
mov
push
dec
jmp
cwde
mov
dec
fistp
mov
fidiv
repnz
fsubr
loopne
and
dec
call
daa
aad
aam
push
and
call
dec
in
fistp
cmp
movs
pop
imul
arpl
and
jmp
jecxz
xchg
inc
xchg
pop
push
loope
xor
pop
sbb
cmp
clc
movs
mov
mov
and
in
loopne
jo
pusha
lea
sbb
sar
lods
fsub
push
sub
call
loop
sahf
repnz
mov
jecxz
test
cli
test
mov
add
adc
push
or
int3
cmp
mov
retf
mov
sub
aaa
test
out
fs
pop
sbb
je
jns
inc
aaa
les
iret
xor
cmps
adc
cmp
sub
xlat
add
mov
out
cmp
test
in
jo
dec
repz
mov
repz
test
lea
push
lea
out
adc
adc
add
xor
ffree
out
inc
ss
sub
xor
xchg
sub
mov
xchg
cmp
pop
jmp
or
jmp
cmp
or
in
sub
push
xchg
or
sbb
jnp
out
xchg
xchg
jmp
sbb
add
out
ret
out
in
mov
pop
lock
mov
loopne
sub
jmp
push
pushf
icebp
mov
xor
xchg
rcl
or
repz
in
repz
or
in
icebp
xchg
cwde
jmp
lock
leave
sub
test
out
and
xor
xor
call
jmp
mov
or
enter
shl
cmp
out
mov
jb
jl
inc
add
add
mov
movs
push
xor
cmps
fs
stos
div
mov
dec
mov
inc
jnp
pop
and
clc
push
cdq
xchg
xchg
jmp
stc
clc
or
mov
and
js
(bad)
cli
inc
call
or
push
js
(bad)
mov
fsubr
cld
sub
in
jo
jmp
std
mov
out
(bad)
pop
add
xchg
call
xchg
pop
pop
in
xor
push
mov
pop
pop
(bad)
mov
std
xchg
loopne
ror
inc
call
shl
in
shr
cmp
push
lds
cmp
add
or
call
callw
dec
or
cmp
push
inc
mov
mov
jmp
push
lds
dec
dec
mov
adc
or
je
enter
add
pop
loop
nop
cmp
mov
out
add
test
(bad)
out
add
jne
out
lock
xchg
retf
inc
jo
in
out
in
push
lock
fiadd
pop
dec
or
shl
xor
xchg
inc
sub
mov
or
push
push
pop
ret
and
sahf
ret
mov
mov
pop
xchg
ror
and
aaa
jbe
aad
pop
pop
dec
xlat
push
lds
mov
or
xchg
data16
fsub
and
test
sub
jge
or
push
push
inc
fisttp
xchg
mov
pop
or
stc
fmul
add
cmp
ret
movs
jmp
add
xor
fwait
cwde
pop
jmp
enter
mov
cwde
push
jmp
ret
xor
mov
xchg
test
pop
cwde
movs
(bad)
mov
stc
jl
(bad)
cmp
call
inc
call
sbb
mov
push
arpl
int3
out
enter
adc
cmp
adc
dec
xor
cwde
push
dec
rcl
sub
xor
test
test
daa
inc
loop
push
retf
ror
cdq
or
leave
push
inc
sbb
imul
cmp
fldenv
mov
cmp
and
cmp
fld
movs
mov
xlat
sahf
call
out
and
push
inc
adc
cmp
and
add
jle
add
sbb
ret
scas
test
sub
jo
push
test
pop
jb
sub
add
or
sub
or
mov
test
dec
call
cmp
jmp
sbb
or
jmp
add
test
push
adc
iret
cmp
movups
cmp
add
sbb
sub
inc
jmp
add
mov
jecxz
call
cmps
or
inc
cmc
aas
ins
adc
leave
repz
js
int
jb
push
js
mov
repz
retf
rol
inc
lods
xor
loopne
stos
sub
in
and
add
ficomp
fisubr
or
sub
cmp
fs
inc
sbb
push
cmp
sbb
jmp
(bad)
clc
add
xor
xchg
jmp
nop
sub
fld
pop
sub
xchg
cmp
adc
out
jo
mov
jo
jns
out
dec
xchg
jmp
rcl
data16
daa
pusha
es
xor
leave
xor
and
xor
call
cdq
dec
and
jmp
and
push
mov
inc
jmp
add
jmp
sbb
inc
inc
mov
js
shl
jmp
cmp
fimul
push
mov
xor
jb
adc
xor
push
in
int3
and
dec
fisttp
pop
xor
mov
sub
xor
or
sbb
mov
inc
mov
xchg
cmp
add
nop
push
(bad)
jmp
pop
push
in
and
ss
punpckhwd
adc
xchg
push
leave
mov
and
adc
cmp
xor
jmp
cwde
dec
push
or
in
push
or
push
leave
ret
std
inc
xor
adc
push
cmp
or
inc
or
call
lahf
adc
push
or
(bad)
and
inc
pop
mov
and
push
cmp
movs
pop
jl
cld
les
sub
in
lock
inc
call
jmp
in
dec
lock
mov
mov
jmp
jmpw
inc
cmps
inc
jno
enter
out
inc
push
leave
stos
in
jmp
jmp
xchg
jmp
and
in
jns
enter
push
jb
mov
mov
lods
out
or
cmp
inc
adc
popf
sbb
cmp
pushf
arpl
dec
movs
pusha
nop
test
movs
jns
fadd
mov
dec
cmps
in
xchg
dec
add
ror
dec
push
xchg
pushf
dec
leave
jl
dec
add
enter
test
jb
dec
rcl
sbb
cmp
cmp
fs
fst
xor
push
cmc
je
push
popf
xchg
xor
dec
push
push
je
cmps
xchg
ss
dec
ins
push
add
xchg
xchg
inc
sub
cdq
dec
push
repz
cmp
test
inc
jnp
sub
push
mov
test
dec
(bad)
(bad)
pop
dec
in
and
in
pop
xor
pop
mov
in
cmp
cmp
pop
sub
in
mov
dec
cld
in
(bad)
ja
leave
in
out
pop
or
pop
mov
and
(bad)
das
mov
and
popa
cmp
bound
and
arpl
cld
nop
mov
sub
cdq
dec
call
test
call
add
mov
dec
pop
cld
in
ror
pop
hlt
pop
in
dec
and
pop
add
dec
inc
mov
in
dec
dec
int3
mov
retf
aam
adc
xor
data16
test
cmp
xchg
cmp
les
xor
dec
push
test
mov
xchg
sub
push
lods
mov
add
cdq
push
mov
scas
inc
cmp
in
jo
imul
cmps
xchg
in
popa
ins
pushf
push
sbb
jns
in
mov
and
cdq
sub
dec
call
in
test
adc
jl
enter
jno
push
leave
add
je
sub
and
pusha
ins
xor
and
ficomp
mov
push
arpl
mov
push
and
add
add
sub
stos
mov
out
test
es
xchg
jae
out
add
pop
pop
bnd
pop
in
js
push
dec
xor
je
pop
and
add
xchg
rcl
push
cmp
push
call
push
rcl
jne
lea
adc
or
cmp
popa
pusha
adc
pop
or
add
js
in
jbe
jno
and
in
ja
ja
movs
inc
push
adc
mov
and
cwde
dec
call
dec
pusha
sub
push
xchg
add
dec
call
test
adc
test
dec
sbb
dec
and
mov
adc
retf
mov
ins
xor
mov
dec
es
and
jmp
xchg
sub
lock
cwde
dec
movs
cdq
dec
call
call
les
mov
pop
adc
jl
pop
fiadd
pop
fadd
nop
pop
adc
sub
cmps
and
pop
test
mov
xor
and
lods
int3
sub
daa
mov
pop
cs
sub
cmp
mov
(bad)
xchg
sub
jno
adc
cmp
sbb
adc
jns
dec
data16
cmp
mov
xchg
test
ins
cmc
mov
lea
sub
in
pop
repnz
das
jae
in
(bad)
(bad)
loopne
sub
dec
or
cs
rol
dec
es
xchg
mov
jl
xchg
shr
fcomp
les
in
int3
addr16
sub
ss
sahf
iret
xchg
push
int3
fdivr
in
xchg
dec
in
icebp
mov
shr
dec
xchg
xlat
push
ins
cwde
xchg
dec
dec
inc
out
xchg
mov
push
leave
mov
in
fmul
test
xchg
int3
test
les
push
mov
sub
mov
and
or
cwde
and
push
push
ror
and
and
dec
fisub
dec
lock
dec
call
pop
ficomp
or
dec
adc
push
fcom
das
push
pushf
dec
pushf
dec
dec
daa
add
inc
movs
jnp
jl
js
push
popf
sbb
sub
inc
and
lods
in
xchg
xor
in
movs
dec
sbb
in
iret
dec
sbb
test
add
sbb
push
test
push
xor
sbb
shl
daa
pop
inc
test
dec
add
mov
push
adc
cmp
mov
out
or
dec
mov
fdivr
push
in
sub
daa
lods
out
mov
adc
xchg
xor
adc
adc
subps
dec
xor
push
or
xchg
or
test
out
jns
add
leave
shl
mov
add
or
movs
not
mov
int3
stos
aas
mov
ja
push
or
add
xchg
mov
out
mov
pusha
cwde
adc
in
push
fild
add
pop
call
mov
retf
push
sbb
out
fwait
test
push
int3
xor
call
cld
out
popf
imul
or
add
scas
sub
lahf
xchg
push
pushf
inc
mov
clc
dec
daa
popa
jb
(bad)
mov
and
pop
mov
cld
out
mov
jecxz
ins
movs
ja
stos
push
fst
cmps
aad
sbb
popf
pop
xchg
xor
dec
xor
dec
xor
cmp
sub
popf
cmp
and
out
fwait
iret
pop
xor
push
dec
and
lds
sub
and
cmps
outs
cmps
cmps
test
(bad)
add
rcl
add
cmp
mov
aaa
test
sbb
stos
dec
and
test
dec
adc
dec
scas
xchg
add
shl
jmp
sbb
cld
jmp
cmps
add
sbb
push
jmp
stos
adc
mov
xchg
ds
test
fdiv
sub
dec
daa
add
and
sbb
scas
jo
and
jmp
dec
cmps
in
(bad)
pop
ins
aam
mov
ja
mov
mov
ret
gs
jmp
daa
mov
or
cmovns
cdq
jbe
adc
jae
xlat
sub
push
sbb
sbb
adc
inc
cmp
sub
lods
pop
in
mov
xor
jbe
jmp
lods
pop
popf
repz
push
xchg
pushf
dec
leave
mov
mov
repnz
pop
cmp
cmp
in
dec
ss
push
imul
cmps
loop
xchg
jmp
arpl
out
pushf
jo
and
mov
leave
push
ja
movs
pushf
adc
xchg
mov
jp
inc
cs
test
je
iret
mov
or
push
xor
aam
xor
xor
leave
mov
loope
sahf
sbb
shl
fwait
dec
inc
test
lods
mov
cmp
shl
jo
fs
xchg
mov
ins
cmc
clc
sub
leave
repnz
hlt
fs
jmp
stos
in
push
jmp
push
leave
push
add
cmp
mov
(bad)
cmp
out
hlt
out
(bad)
out
fisubr
lods
xor
cmp
xor
xchg
cmps
xchg
push
push
es
cs
jmp
dec
ja
dec
inc
retf
in
push
stos
dec
xor
pusha
cmps
xchg
iretw
xor
enter
mov
in
cmp
out
dec
ror
dec
push
fldcw
div
mov
in
inc
sbb
sahf
ins
sbb
addr16
in
jno
add
dec
mov
jno
pop
or
dec
scas
lods
shr
and
(bad)
dec
leave
out
or
pusha
cmp
jmp
out
inc
jno
ss
cwde
pushf
lock
jmp
ja
in
nop
hlt
popa
or
in
(bad)
and
jno
ficom
fiadd
cmp
mov
test
stos
shl
xchg
and
ja
js
fcom
fldlg2
add
lods
fsubr
js
dec
push
jmp
add
jnp
in
inc
aam
jle
cmp
jmp
dec
leave
repz
sub
sub
jmp
inc
mov
xor
sub
dec
enter
les
int3
mov
and
pusha
mov
lods
mov
pushf
call
lods
out
mov
lods
jl
dec
xor
push
sub
lea
outs
leave
mov
jmp
jmp
dec
cs
repnz
and
adc
dec
mov
leave
leave
push
loopne
andps
lds
pushf
dec
pop
hlt
jne
push
leave
in
jmp
int
mul
add
ror
cmp
add
daa
sub
pop
leave
in
jne
jmp
and
xchg
dec
je
fs
dec
es
push
dec
in
xchg
imul
sbb
xchg
pusha
aam
movs
call
and
push
shl
dec
inc
js
or
mov
sbb
ds
repnz
popa
fdiv
repnz
push
dec
pop
cmp
fdivr
inc
mov
sbb
xor
jns
out
fidiv
cmps
call
and
xchg
jecxz
adc
fstp
jns
jmp
sbb
and
adc
xor
add
pop
or
mov
call
or
mov
and
out
(bad)
out
lods
and
xlat
leave
dec
fwait
movs
pop
shr
mov
loopne
leave
and
mov
xchg
dec
pop
push
dec
and
pop
movs
(bad)
shr
cmp
out
loope
test
xchg
dec
in
sbb
aam
adc
push
xchg
pop
call
aaa
inc
push
mov
xchg
push
sbb
loopne
and
jbe
pop
(bad)
ror
push
and
or
dec
(bad)
scas
mov
loopne
jo
pop
iret
xchg
inc
inc
xchg
or
xor
sbb
cld
jmp
mov
inc
adc
adc
fsubr
or
outs
rcr
pop
ss
add
mov
in
gs
mov
addr16
addr16
adc
mov
test
shr
in
stos
lds
mov
push
add
xchg
push
cmp
les
add
(bad)
repnz
pop
xchg
shl
vpavgb
mov
xchg
add
mov
or
xor
dec
push
mov
sbb
leave
les
or
cmp
int3
popf
push
or
test
pop
dec
les
and
dec
lds
mov
nop
lds
cmp
push
pop
lods
cmp
or
sbb
shr
xor
jb
push
in
movs
arpl
inc
lea
dec
jmpw
movs
jmp
push
test
inc
mov
test
mov
cs
xor
iret
sbb
cmp
mov
xchg
je
xchg
adc
sbb
adc
sub
test
adc
stos
in
popa
inc
test
push
cmp
jl
adc
(bad)
loopne
or
pop
sub
call
call
neg
repz
imul
pop
in
pop
sbb
data16
aad
fs
sbb
jmp
push
cmp
rol
lods
xchg
add
sbb
call
fs
push
shl
mov
imul
and
jmp
mov
inc
jmp
cmp
sub
push
mov
mov
mov
xchg
or
pop
jb
mov
or
xor
ins
pop
mov
leave
push
sbb
sbb
push
fs
mov
and
and
ins
outs
sub
and
adc
inc
pop
and
jmp
stos
dec
push
adc
test
and
adc
push
popa
ror
bnd
push
dec
loopne
add
add
cmp
or
test
add
ror
test
or
and
clc
hlt
call
and
test
mov
sub
jne
bound
adc
hlt
call
fiadd
ret
xchg
int
cld
fsubr
sbb
inc
leave
test
cmp
aam
add
test
cmp
pushf
int3
mov
sub
repz
add
mov
dec
in
ins
out
nop
sub
retf
and
call
xchg
les
in
sub
les
add
jae
jmp
(bad)
call
mov
mov
xchg
out
cmp
call
cmp
mov
fucomi
pusha
out
inc
xchg
call
call
add
sbb
ror
adc
or
dec
dec
cmps
in
inc
mov
sbb
xor
cmp
sbb
je
push
add
jb
or
adc
sub
shl
sub
leave
inc
mov
push
lock
pushf
pop
pop
repnz
fs
ins
cmp
xor
xchg
ins
cmp
ins
xchg
push
dec
and
cmps
outs
pusha
cmps
or
or
mov
xchg
fisubr
add
xor
inc
jb
out
out
sub
(bad)
jbe
mov
aas
in
mov
mov
pop
cld
retf
movs
push
push
jne
xor
ret
cdq
xchg
sub
(bad)
mov
cmp
cmp
leave
data16
call
pop
push
xor
enter
jo
xor
bound
dec
mov
dec
inc
inc
dec
and
inc
add
or
pop
scas
xor
sub
inc
nop
out
and
jne
sub
sub
in
fidiv
stc
ret
jmp
dec
dec
scas
sub
add
shl
das
cmp
popf
cmps
cld
adc
add
dec
xor
out
out
js
mov
sub
cld
test
lea
dec
cwde
or
push
adc
(bad)
xor
mov
ret
sub
add
int3
add
xor
cld
pop
gs
mov
jae
jl
hlt
out
ret
lea
ins
mov
pop
shr
and
add
pop
fld
jne
imul
movs
fld
in
pop
loop
cld
in
inc
xor
push
in
xchg
xor
push
pushf
pop
xor
cmp
dec
leave
and
clc
xchg
adc
in
out
jmp
out
sub
shl
adc
and
aaa
mov
push
dec
ror
push
fsubr
xchg
out
dec
aam
int3
inc
add
int3
xchg
shr
mov
imul
push
push
xor
imul
and
ins
cmp
ins
out
stos
adc
nop
out
push
out
out
add
pop
jnp
movs
call
and
cmps
(bad)
pop
jp
mov
pop
in
fbstp
dec
mov
xor
xlat
test
pop
push
dec
xor
movs
nop
jp
xchg
sub
xchg
xor
add
or
lahf
adc
mov
xor
int3
adc
mov
in
jg
mov
loope
pushf
mov
mov
loopne
mov
xchg
repz
and
neg
call
jb
mov
ret
inc
inc
jmp
ss
mov
scas
mov
hlt
mov
sti
xchg
daa
test
xchg
xchg
sti
xchg
jns
loop
mov
cmc
jle
add
sbb
sahf
std
cmp
mov
mov
cmp
cmp
adc
neg
mov
popf
add
test
lahf
mov
lock
mov
inc
(bad)
xor
enter
test
int3
xchg
jl
mov
imul
push
jg
jns
push
sbb
and
mov
(bad)
repnz
scas
sti
scas
sub
or
and
enter
(bad)
sub
sti
mov
mov
pop
mov
not
int
ror
not
dec
scas
mov
mov
dec
mov
mov
push
in
push
pop
cld
sti
mov
pop
mov
out
mov
mov
mov
push
out
jle
ins
div
je
mov
in
sti
adc
mov
jl
cld
sti
lods
cmp
sbb
nop
setae
sti
in
mov
addr16
jo
cmp
fs
sub
xchg
in
inc
push
cwde
pushf
mov
movs
test
inc
push
cmp
mov
mov
mov
in
inc
int3
rcl
in
inc
push
fcomp
loopne
inc
push
cmp
call
in
hlt
adc
cli
ret
jns
aas
enter
add
dec
xchg
fs
xor
jb
ret
jge
cmp
fistp
push
mov
leave
or
adc
leave
add
and
jle
adc
push
imul
leave
adc
mov
jl
adc
jo
fcom
jle
jne
sub
es
int3
cmp
adc
xor
xchg
sbb
int3
fbld
mov
imul
xchg
push
and
lahf
sahf
adc
mov
xchg
xchg
sub
xchg
xchg
mov
call
xchg
sahf
mov
cmp
leave
cmp
xchg
mov
sahf
cwde
aas
nop
sahf
lahf
test
xchg
jno
pop
pop
fisubr
sbb
and
int3
xchg
cmp
enter
push
push
sbb
cmps
sbb
arpl
xchg
pusha
cwde
call
cmp
fs
data16
les
dec
sbb
adc
pop
sbb
jb
and
and
sbb
js
cdq
in
retf
jle
add
mov
push
sbb
cmps
icebp
xchg
shr
test
xchg
mov
leave
cwde
cmp
sbb
repnz
aaa
pop
ret
lahf
adc
xchg
das
ins
or
or
int3
leave
movs
ret
test
dec
jl
repnz
lods
out
leave
mov
mov
mov
retf
cdq
lods
leave
mov
scas
leave
xchg
jg
sar
mov
mov
jge
int3
jmp
mov
mov
or
fcomp
adc
test
call
in
lock
inc
(bad)
mov
cld
in
clc
mov
cmp
repnz
add
add
jg
mov
or
scas
mov
sti
out
hlt
pop
sbb
in
mov
test
jns
sbb
ror
(bad)
mov
lock
adc
pop
inc
dec
fist
push
popf
sbb
out
fstp
xchg
inc
and
cmps
cmp
stos
mov
test
cld
call
and
mov
out
cmp
cld
in
movs
je
leave
inc
inc
inc
cmp
fldenv
(bad)
aas
mov
ins
adc
mov
or
addr16
push
cmp
nop
dec
push
push
pop
xchg
pop
popa
jbe
pop
arpl
pusha
stc
repnz
retf
retf
push
ins
mov
ror
cmp
je
in
add
xor
js
mov
add
cwde
xor
enter
or
jo
mov
pop
xor
test
stos
scas
mov
mov
dec
dec
aaa
mov
and
jl
xchg
test
imul
retf
test
pop
mov
out
aas
sbb
cmp
int3
xor
fnstenv
jns
add
sbb
cmps
sbb
stc
sti
outs
mov
mov
sub
mov
mov
retf
(bad)
retf
int3
and
xor
shl
ss
retf
fdiv
enter
sti
adc
loopne
xchg
in
movs
popa
jbe
retf
mov
push
mov
or
jns
repz
outs
jle
clc
mov
aas
std
sbb
retf
add
adc
add
lods
adc
rcr
mov
add
retf
or
adc
inc
push
jb
adc
sbb
sbb
pop
cmp
retf
and
and
sub
and
cmp
retf
sub
xor
xor
inc
sahf
sbb
ss
or
pop
xor
cmp
sbb
jge
call
cmp
add
daa
inc
mov
ror
sub
jmp
dec
std
mov
test
add
mov
push
stos
loopne
push
pop
repz
xchg
pop
pusha
fs
jmp
ins
jmp
xchg
aas
retf
ins
or
retf
jo
mov
sbb
adc
jne
call
inc
push
mov
mov
je
and
mov
mov
pop
retf
js
push
test
retf
retf
dec
in
jb
retf
sbb
dec
movs
repnz
sbb
sbb
sbb
sub
sub
sub
clc
jge
add
or
jmp
movd
jbe
jge
shl
int3
int
jmp
mov
jg
out
mov
(bad)
mul
test
test
mov
pop
repnz
mov
add
mov
ret
lahf
sbb
pop
push
jge
push
xchg
mov
popa
or
aas
retf
nop
xchg
lahf
retf
cwde
in
aaa
cmp
mov
pop
cli
pop
push
xchg
(bad)
jge
adc
fldenv
jge
sub
mov
dec
es
mov
and
mov
mov
ja
pop
inc
push
cmp
lods
mov
push
cmp
nop
mov
mov
jmp
int3
imul
in
rcl
fist
mov
mov
mov
xchg
daa
dec
pop
retf
fmul
fmul
loopne
repnz
retf
in
call
daa
dec
sahf
cmp
hlt
retf
clc
retf
cld
int3
jns
enter
add
or
or
dec
mov
fcomp
test
adc
or
int3
adc
adc
mov
retf
pop
sbb
push
cmp
cld
inc
test
mov
repz
mov
xor
in
and
xchg
mov
mov
xchg
and
nop
int3
call
cs
daa
dec
mov
int3
inc
int3
inc
leave
xchg
xchg
int3
int3
dec
jmp
dec
cmp
repnz
push
int3
push
int3
pop
int3
pop
xor
mov
pusha
pushf
dec
and
jmp
fld
scas
test
jo
es
sahf
jl
int3
je
js
jl
les
adc
int3
test
popf
int3
mov
enter
mov
int3
(bad)
int3
xchg
jbe
gs
mov
es
sbb
and
jns
aam
cwde
cmps
adc
int3
pushf
int3
mov
nop
outs
gs
test
rcl
out
sbb
adc
daa
ss
xchg
mov
enter
int3
ror
lahf
cmp
cmp
daa
repnz
into
int3
sar
aam
sti
mov
xchg
outs
paddusb
int3
in
inc
xor
mov
in
mov
fs
call
xor
shr
shr
enter
icebp
int3
lock
leave
ror
in
out
xchg
out
cmp
push
cmp
cmp
xchg
and
add
cmp
int
stos
lahf
cld
mov
sahf
dec
or
enter
and
adc
jne
pop
cmp
int
int
int
arpl
int
cmp
mov
popa
xchg
jle
pop
fist
test
test
xchg
jl
lahf
push
mov
hlt
ss
xor
mov
jb
xchg
int
and
push
int
xchg
retf
push
push
push
push
mov
rcl
sub
loop
cld
push
inc
adc
inc
adc
repnz
xor
int
jae
xchg
or
js
mov
xchg
mov
repnz
int
int
int
int
in
ins
enter
pop
int
cmp
push
mov
pop
mov
int3
test
imul
pusha
and
cld
xor
fwait
pushf
call
xchg
(bad)
(bad)
jge
adc
mov
in
xlat
push
int
int
test
ds
xor
das
lock
xchg
int
xor
movs
xchg
(bad)
fidivr
aaa
or
sahf
shl
test
addr16
fcom
pushf
movs
dec
and
mov
adc
in
pop
ret
xchg
dec
jae
push
jns
mov
int
or
int
int
dec
inc
int
sahf
mov
pop
lock
lods
push
push
lods
repz
inc
and
ja
les
aaa
and
int
int
pop
push
xor
jmp
int
pop
repnz
int
mov
rcr
adc
out
push
rcr
dec
out
loopne
xchg
call
jg
in
int
adc
int
int
adc
add
pusha
cld
adc
loopne
cmps
fsub
pop
xor
add
jmp
adc
jmp
test
fidivr
ret
into
add
push
xor
call
ret
fbld
mov
into
adc
enter
or
pop
pop
pop
jp
shl
pushf
sahf
inc
pushf
sbb
mov
mov
repnz
sti
adc
mov
mov
addr16
sahf
inc
mov
fistp
push
inc
push
add
test
std
cmp
and
push
push
mov
mov
inc
dec
sub
mov
arpl
enter
mov
arpl
mov
cld
sti
scas
pusha
test
mov
into
fs
outs
jb
push
add
adc
enter
xchg
scas
xchg
test
or
or
ins
sahf
xchg
sbb
inc
out
or
jo
into
cmp
cli
cdq
rcl
js
(bad)
adc
leave
mov
test
repnz
mov
mov
(bad)
mov
xor
xchg
cwde
mov
data16
mov
mov
test
stc
pop
mov
cmps
cmp
push
push
cmp
mov
sbb
mov
test
cmp
adc
cld
lahf
fbstp
and
mov
nop
xchg
nop
inc
push
cmp
int3
rol
cmp
aam
fsub
mov
in
call
shl
in
mov
mov
(bad)
hlt
and
ficomp
clc
mov
jb
or
jns
in
jg
or
sbb
and
iret
or
or
adc
seto
and
push
jl
xor
cmp
cmps
jge
cld
ins
cmp
xor
(bad)
iret
sbb
and
jb
or
iret
sub
sub
cmp
inc
iret
xor
xor
rcl
dec
sub
(bad)
sub
hlt
jnp
adc
sbb
inc
mov
mov
adc
and
adc
addr16
push
mov
jge
push
pop
mov
ds
pop
sbb
inc
repz
stc
pusha
stos
loopne
fistp
in
or
and
adc
xchg
iret
push
ins
xor
push
cs
outs
sub
jo
imul
inc
mov
shl
jg
loop
outs
adc
test
rcr
sbb
cmp
in
in
int3
bswap
mov
fs
mov
nop
popf
mov
xchg
lahf
sahf
mov
cmovne
popf
xchg
xchg
test
mov
aas
mov
push
mov
dec
inc
fsub
cmp
in
and
lods
(bad)
adc
mov
test
jns
pop
stos
jg
fcomip
adc
xor
sbb
jg
pop
fucomip
(bad)
fs
xchg
lea
in
repnz
xchg
mov
vmwrite
xor
mov
or
scas
(bad)
and
(bad)
in
rcl
fcomp
mov
lahf
pop
mov
jns
and
sbb
jb
loopne
call
xchg
pop
in
mov
lock
adc
cs
mov
cwde
sub
enter
xor
adc
cld
mov
add
push
lods
rcl
and
ror
pop
cld
fbstp
xor
dec
push
repnz
push
cmp
adc
(bad)
cmp
pop
adc
xchg
call
adc
ss
xor
sbb
enter
and
jmp
mov
call
movs
jo
xchg
xor
mov
xor
jo
jo
das
out
(bad)
inc
jg
lahf
shl
or
sar
sar
lahf
popf
inc
in
mov
or
test
inc
xchg
daa
outs
(bad)
inc
mov
dec
ror
in
rcl
push
rcr
pop
in
pusha
pop
shl
pop
shl
xchg
and
rol
adc
dec
push
daa
jg
cmp
cmp
daa
outs
aam
fs
push
repnz
cmps
shl
je
js
dec
sahf
cmp
jl
adc
rol
and
cwde
mov
cld
popf
jg
xchg
test
dec
mov
jb
mov
aas
cmp
ds
adc
adc
mov
movs
daa
dec
sahf
mov
lods
shl
xchg
mov
mov
bnd
das
xchg
into
inc
cwde
xchg
mov
mov
push
sbb
int3
xchg
mov
mov
test
fcomp
(bad)
enter
cmp
sbb
and
sub
lock
xchg
xchg
clc
lahf
enter
sahf
push
sbb
sbb
sub
cld
sbb
rol
rol
inc
push
jb
or
or
adc
adc
sbb
sbb
and
sub
sub
sbb
sahf
jl
adc
and
and
pop
(bad)
jmp
scas
adc
test
mov
sub
lock
ret
mov
xor
push
shl
lea
mov
xchg
add
ins
je
inc
sbb
inc
out
add
ror
jle
dec
push
call
ins
xchg
adc
rcl
add
and
push
xchg
rcr
leave
xchg
daa
rcr
shl
jns
shr
ins
shl
je
aad
mov
iret
jo
pushf
sub
inc
pop
cs
dec
and
js
repnz
sar
cwde
mov
in
push
inc
mov
inc
mov
sbb
enter
sbb
jb
nop
xchg
cwde
lahf
jb
and
es
popf
adc
mov
fnstsw
sbb
in
loopne
sbb
lods
jb
and
mov
mov
mov
jb
enter
call
adc
enter
xlat
adc
shl
(bad)
dec
jae
stos
fcom
cmp
mov
adc
in
daa
dec
sahf
shr
shr
shl
mov
aam
xabort
sbb
pop
cld
aas
and
xor
adc
cld
rol
rol
or
xchg
daa
dec
ror
adc
adc
jns
in
sbb
sbb
and
and
fadd
shr
(bad)
pop
sub
leave
dec
dec
dec
daa
cmp
or
shr
xor
in
shl
cmp
cmp
inc
push
xchg
das
icebp
fdivr
rol
pop
mov
jl
adc
jo
push
mov
fist
dec
rcl
push
enter
rcr
pop
shl
sbb
shl
pop
jo
xchg
shl
adc
xor
add
push
shr
mov
daa
dec
sahf
sar
jl
or
nop
sbb
ror
inc
push
rcl
mov
rcr
jae
xor
in
add
shl
cmp
shr
shl
mov
pop
or
rol
ror
cld
and
iret
jo
lock
or
fucom
jl
adc
push
jb
rcl
aam
fdiv
pop
cmp
(bad)
loopne
jmp
aaa
jns
and
in
les
clc
sahf
cmp
jb
call
shl
out
in
dec
sar
sar
sar
sbb
enter
aas
rol
rol
pop
cmp
add
call
mov
in
jl
jl
ror
sahf
cmp
rcl
rcl
sbb
sbb
enter
and
and
sub
bound
sub
ror
pop
push
mov
lock
and
sub
xor
xor
jb
adc
sar
inc
leave
xor
inc
sbb
inc
sbb
add
dec
shr
inc
push
adc
in
sahf
mov
push
lahf
rcl
enter
rcr
cmc
pusha
(bad)
call
fs
data16
and
mov
cs
inc
call
repnz
ins
ins
or
adc
or
jno
adc
sahf
fwait
xchg
dec
inc
mov
dec
inc
sahf
popa
fistp
call
rol
rol
cmp
repnz
rcr
push
mov
add
lea
scas
fistp
adc
add
xor
sar
sar
mov
rol
adc
les
repnz
aas
adc
mov
fwait
ins
or
or
bound
push
jg
addr16
mov
fdivr
add
ror
pop
xor
loopne
andnps
lahf
shl
repnz
pop
push
shl
shl
rcr
sahf
pop
aaa
cmp
fdiv
into
or
pop
fsubr
stc
inc
shr
dec
test
dec
shl
lahf
pop
pop
xchg
retf
cmp
in
je
mov
pop
cmps
mov
sahf
cmp
iret
sar
shl
shl
shl
clc
sbb
and
dec
and
sbb
xor
sar
dec
sahf
lods
sar
aam
aam
aam
in
xchg
or
or
adc
adc
test
jns
sbb
jg
sbb
and
loopne
xchg
int3
aam
and
sahf
cmp
repnz
aam
aam
aam
das
nop
daa
dec
aam
aam
aam
push
je
and
int
(bad)
enter
stc
aam
lds
ds
aam
xchg
push
popa
mov
mov
push
lea
ja
jo
(bad)
les
dec
and
inc
ror
xchg
inc
dec
jo
aam
nop
enter
nop
ret
jg
sar
dec
dec
pop
add
sahf
pushf
popf
mov
mov
cdq
push
mov
ret
in
or
mov
push
xor
mov
xchg
mov
test
mov
fs
aam
aam
aam
cld
jmp
xlat
cwde
adc
adc
xchg
and
in
jg
ins
aam
and
movs
adc
xchg
das
jo
jl
(bad)
jo
mov
pop
jne
aam
vcomisd
jge
test
test
test
fadd
jo
rcl
movs
loopne
shl
jb
mov
cmp
pop
lahf
inc
xor
or
adc
sar
add
(bad)
cld
cwde
test
mov
mov
enter
test
movs
and
sbb
test
mov
xchg
or
movs
hlt
hlt
call
movs
mov
lahf
retf
sub
xchg
inc
es
jg
mov
mov
in
inc
int3
rcl
jns
xchg
sub
jl
cs
pushfw
add
mov
ja
sbb
adc
or
adc
repnz
in
or
adc
xchg
call
xor
and
sub
nop
dec
shr
cwde
push
fs
aad
pop
aad
nop
sbb
add
jno
fbstp
adc
call
rcl
jg
fs
xchg
and
push
mov
cmp
inc
aad
pop
and
in
pop
aad
aad
aad
push
jb
adc
aad
aad
cmp
and
and
ret
in
nop
jecxz
nop
nop
aad
jb
sbb
jns
inc
push
aad
aad
aad
dec
xor
and
inc
xchg
xchg
jns
adc
mov
aad
and
imul
xor
and
dec
es
aad
mov
push
sbb
mov
mov
jb
cdq
popf
or
mov
mov
and
ret
pop
test
fs
test
xchg
mov
and
sbb
mov
adc
leave
test
mov
lahf
add
rcl
aam
fcom
fsub
leave
xchg
daa
aad
aad
aad
sahf
cmp
repnz
aad
aad
aad
leave
xchg
daa
dec
aad
(bad)
add
add
jns
in
or
or
adc
adc
and
sahf
(bad)
sbb
sbb
shl
inc
push
jb
and
and
lea
jg
lahf
(bad)
and
nop
int
(bad)
sub
and
cmp
repnz
js
sub
(bad)
xor
inc
pop
push
(bad)
xor
ss
sub
and
cmp
jl
jl
je
jns
jb
je
cmp
cmp
inc
xchg
daa
dec
sahf
(bad)
inc
(bad)
dec
(bad)
dec
popa
or
leave
(bad)
push
(bad)
push
mov
fbld
mov
mov
enter
jo
pop
repz
lods
sbb
pop
(bad)
pop
(bad)
pop
(bad)
pop
mov
pop
daa
test
pop
(bad)
jge
sub
test
stos
daa
stos
in
stos
sar
test
ins
ins
cmp
repnz
pusha
(bad)
fs
push
dec
sahf
(bad)
jo
je
js
or
leave
(bad)
jl
mov
add
push
aad
add
repnz
mov
nop
(bad)
xchg
(bad)
cwde
or
dec
(bad)
pushf
mov
sbb
pop
fs
dec
xor
jg
(bad)
mov
sub
(bad)
(bad)
(bad)
mov
repnz
sbb
stos
push
lock
mov
xchg
push
jecxz
call
test
lods
mov
movs
daa
hlt
pop
ret
add
cdq
or
pop
cs
xchg
xchg
mov
mov
mov
retf
sub
sub
sub
mov
sbb
pop
pop
imul
mov
mov
jmp
add
retf
push
call
cmp
repnz
mov
(bad)
enter
sahf
(bad)
int3
(bad)
rcl
mov
sub
adc
jns
jb
push
push
(bad)
fcom
fsub
dec
sahf
cmp
loopne
in
call
xchg
in
(bad)
lock
hlt
(bad)
clc
dec
sahf
cmp
(bad)
cld
xlat
add
add
or
leave
xchg
daa
xlat
or
adc
adc
cmp
repnz
sbb
sbb
and
and
in
dec
(bad)
fsubr
sub
sub
(bad)
test
sub
xlat
sub
xor
sub
test
in
dec
dec
push
xor
retf
inc
fdivrp
xlat
cmp
cmp
ds
inc
push
xlat
xor
test
test
inc
xchg
xchg
pusha
rol
mov
pop
cmp
xlat
sub
pop
xor
or
dec
jl
sub
push
xlat
push
xlat
dec
xlat
dec
sbb
sbb
pushf
sbb
cmp
sahf
setg
cdq
push
push
pushf
(bad)
cmp
dec
sahf
cmp
xlat
push
xlat
pop
xlat
pop
xlat
pusha
in
xchg
daa
xlat
xlat
push
jns
xlat
jo
push
sub
movs
cmp
push
sbb
call
jl
sbb
xlat
mov
mov
nop
inc
mov
in
pop
enter
jg
lods
mov
xlat
xchg
xlat
xchg
xlat
xchg
in
sub
rol
xor
xor
xchg
adc
xlat
mov
xchg
xchg
or
call
mov
xlat
movs
xlat
cmps
xlat
cmps
xlat
movs
dec
movs
jb
xlat
movs
div
cmc
hlt
push
xor
sub
xlat
test
or
test
sub
clc
clc
and
dec
mov
xlat
lods
xlat
mov
mov
jns
push
xlat
mov
mov
dec
sahf
xlat
rcl
xlat
leave
outs
jb
enter
lods
sub
adc
cmp
sbb
les
and
xlat
loopne
xor
xlat
xlat
xlat
pop
clc
push
aas
das
call
out
mov
pop
xlat
lock
lds
xlat
cld
or
or
fadd
sti
clc
adc
sbb
xor
mov
or
fmul
hlt
adc
movs
fcom
push
mov
mov
adc
jg
inc
push
jns
jg
dec
sub
or
cmps
sbb
fsub
test
fsub
sbb
pop
mov
sbb
pop
fsubr
nop
xchg
sbb
fdiv
fsubr
dec
enter
js
js
leave
sub
lea
sbb
in
cmp
mov
imul
fs
fadd
inc
fmul
dec
sahf
cmp
dec
fcom
push
fmul
leave
xchg
pop
fcomp
nop
daa
xchg
sbb
pop
sub
inc
jmp
pop
fsubr
xchg
daa
dec
fsubr
fdiv
repnz
js
jl
pusha
jmp
push
jb
mov
mov
das
das
das
mov
fadd
sub
fadd
loop
outs
gs
sub
mov
sbb
mov
pop
fmul
das
sbb
test
aam
jg
sbb
retf
enter
nop
sub
loopne
mov
cs
jnp
jnp
fcom
cwde
pop
cdq
pop
fcomp
fsub
fsubr
fdiv
in
fcom
enter
clc
dec
clc
mov
mov
rcr
leave
fmul
(bad)
fsub
outs
(bad)
jmp
adc
jg
sbb
push
movs
sar
fcom
and
cmp
js
cld
lods
jg
jne
lock
outs
in
or
rcr
test
xchg
lahf
fdivr
pop
mov
jnp
jnp
mov
mov
mov
fsub
jmp
cld
out
in
adc
stc
xchg
fsub
in
push
sahf
fisubr
xor
mov
jnp
mov
call
fsubr
dec
fsubr
fdiv
in
xchg
lock
fdivr
fdivr
(bad)
repnz
add
add
mov
test
scas
mov
retf
pop
or
test
test
mov
mov
sti
mov
jo
cs
fldcw
fldenv
fldenv
sbb
adc
into
inc
dec
push
loope
cmp
ret
pop
in
mov
lock
sti
call
push
pop
fldcw
lahf
loopne
jl
enter
cmp
jno
shl
clc
cmp
pop
ins
jns
fmul
sbb
mov
imul
mov
fnstenv
movs
jb
pop
sub
and
mov
push
cmp
inc
cs
push
aam
pop
adc
push
cmp
mov
jne
jg
fs
push
mov
fst
pop
jnp
xchg
cmp
push
mov
mov
ins
cmp
add
mov
fnstenv
dec
movs
push
mov
and
sub
cmp
retf
sub
sub
jo
xchg
jg
xchg
mov
mov
cld
(bad)
pop
inc
xchg
call
sti
cwde
jg
retf
pop
test
scas
mov
mov
mov
psubusw
push
adc
inc
nop
jb
cmps
outs
mov
(bad)
mov
je
push
fsub
sub
adc
(bad)
out
jle
sbb
adc
mov
mov
mov
adc
mov
mov
cld
adc
shl
cmps
call
leave
mov
shl
adc
add
cmp
jns
inc
in
(bad)
fnop
mov
(bad)
mov
mov
pop
pop
adc
mov
out
inc
add
adc
cwde
cld
pop
push
add
aam
sbb
jo
sar
mov
repnz
and
mov
in
sti
mov
hlt
ss
repnz
mov
daa
clc
lods
mov
mov
fiadd
scas
mov
add
lods
mov
or
call
sahf
sub
ja
xchg
push
sub
adc
adc
adc
mov
stc
sbb
test
mov
mov
scas
mov
stos
jg
jl
fisubr
or
in
adc
pusha
adc
xchg
lahf
mov
(bad)
xor
adc
push
fidiv
cmp
cmp
call
in
inc
jp
cld
sub
dec
cmp
not
mov
rcl
and
lods
jno
movs
jp
xor
in
pop
jl
add
pop
xor
fs
sub
push
mov
jo
in
je
cld
clc
cld
jbe
xchg
je
(bad)
inc
sub
push
cwde
jl
jle
pop
and
daa
test
cmp
shr
and
sahf
cmp
test
mov
mov
repnz
xchg
nop
ficom
sahf
cmp
fisub
fisubr
mov
mov
mov
fidivr
adc
in
rcl
dec
push
pop
shl
std
or
out
lods
fcmovb
fcmovb
fcmovb
lahf
int
jns
fcmovb
sub
sub
sub
dec
test
sub
mov
sbb
(bad)
enter
inc
int3
rcl
dec
xor
mov
or
adc
jg
add
pop
adc
nop
inc
jle
fsub
in
dec
es
in
out
fild
fild
inc
sahf
jmp
adc
cwde
cmps
cmp
nop
xchg
cwde
lock
clc
cmp
inc
push
cld
fild
fild
in
pop
fisttp
fisttp
adc
aam
sbb
in
adc
lods
mov
xchg
mov
lahf
and
sbb
mov
sub
lock
dec
mov
adc
and
pop
jnp
jnp
(bad)
pop
jns
and
jno
xor
add
(bad)
sub
je
push
stc
sbb
fmul
movs
xor
ja
adc
nop
lahf
adc
cvtpi2ps
icebp
cmp
jbe
cmp
mov
sub
stc
mov
sbb
dec
fmul
mov
and
dec
adc
mov
outs
pop
jnp
mov
fist
frstpm(287
push
xor
ret
and
je
mov
stc
cmp
fistp
pop
fist
nop
out
cdq
inc
jnp
movq
repnz
fs
fld
push
jb
(bad)
mov
mov
iret
mov
lahf
fld
mov
jno
(bad)
mov
fstp
ins
sub
jb
push
pop
jnp
dec
sahf
cmp
fstp
fild
pop
mov
lea
cs
leave
fist
or
js
cmp
and
inc
(bad)
fistp
addr16
and
in
call
je
push
sbb
fisttp
fs
inc
fcmovnu
pop
jae
xchg
fld
in
push
fbstp
aas
inc
push
sbb
fist
in
fcmovnu
fstp
cdq
bound
ins
sbb
cmp
fistp
xchg
inc
push
fcmovnu
fcmovne
xor
mov
inc
cs
and
pop
sub
in
xchg
sub
lock
xor
xor
xchg
jno
aas
hlt
clc
stc
nop
daa
outs
xchg
std
fadd
iret
mov
jb
add
int3
shl
jns
fs
pusha
fmul
fmul
adc
adc
mov
or
adc
(bad)
cli
cmps
ret
pop
popf
sbb
aad
in
sbb
adc
jge
push
add
pop
imul
jnp
inc
jg
and
sub
push
mov
push
stc
add
cmp
aas
lock
jl
dec
out
sub
xchg
dec
mov
jg
push
leave
xchg
daa
das
fdiv
fdiv
cmp
repnz
cmp
inc
fadd
xchg
daa
dec
sahf
fmul
fcom
in
fcomp
pop
fsub
cmp
ins
fdivr
arpl
inc
dec
cmps
bound
(bad)
pop
je
fdivr
dec
adc
aas
or
dec
ja
jl
sbb
jl
xor
test
or
inc
imul
push
enter
xchg
fmul
loopne
pop
mov
retf
inc
cwde
pushf
mov
cwde
cld
cmp
iret
and
inc
in
mov
jl
jnp
cmp
mov
jnp
fsubr
daa
dec
sahf
fdivr
add
(bad)
fmul
cmp
lahf
sub
push
sub
leave
xchg
daa
inc
fmul
(bad)
(bad)
pop
push
repnz
fcomp
(bad)
loopne
loop
mov
(bad)
out
xchg
and
nop
jmp
int3
cs
dec
pushf
jp
ret
fbstp
xor
jb
cmc
xchg
lock
hlt
fdiv
mov
fdiv
inc
in
sub
out
jp
sahf
fdivr
fdivr
mov
std
xchg
lahf
mov
fdivr
in
and
cs
sbb
push
push
ds
cs
cs
cs
cs
mov
ja
ret
lahf
jnp
xchg
xchg
ins
push
rcr
add
hlt
leave
fld
rcl
fst
fucom
enter
add
push
pop
ret
lahf
dec
xchg
and
fst
pop
jle
mov
mov
mov
pushf
add
jmp
or
dec
mov
ret
dec
mov
jmp
stc
and
and
fistp
adc
test
mov
addr16
adc
cmp
xchg
fild
adc
int3
or
lea
jp
sar
mov
stos
scas
fldcw
inc
pop
pop
test
mov
shl
sbb
sbb
shl
cmp
fisttp
pop
push
movs
xor
dec
aas
cwde
or
cwde
adc
dec
sahf
mov
pop
fstp
in
xchg
daa
frstor
(bad)
jns
fnsave
je
js
adc
in
jl
test
repnz
pop
fisttp
xchg
daa
dec
sahf
fst
stc
in
frstor
sti
adc
stos
fnsave
mov
lahf
jg
xchg
retf
pop
cs
jb
dec
pop
jnp
fnsave
mov
ffree
in
xchg
daa
(bad)
(bad)
fst
sahf
cmp
repnz
fstp
fstp
fucom
add
and
in
call
fnsave
add
or
in
and
or
lock
dec
sahf
cmp
(bad)
(bad)
fiadd
fiadd
leave
xchg
daa
fimul
fimul
adc
adc
sbb
sbb
and
xchg
daa
dec
fisub
sub
sub
jns
in
xor
xor
cmp
cmp
daa
dec
sahf
fiadd
inc
fimul
lock
adc
mov
aam
ficomp
rol
imul
das
inc
jnp
jnp
dec
sahf
cmp
fisub
fisubr
ins
in
xchg
daa
fidiv
je
js
cmp
repnz
fiadd
dec
fimul
jns
in
cwde
ficomp
daa
dec
sahf
fisubr
jns
in
fidiv
shl
cmp
(bad)
fmulp
fmulp
xor
xor
mov
push
repnz
das
mov
add
in
retf
jnp
(bad)
(bad)
(bad)
dec
sahf
cmp
(bad)
fsubp
fsubp
fsubrp
in
xchg
daa
fsubrp
fdivp
fdivp
sahf
cmp
repnz
fdivrp
fild
fild
xchg
daa
dec
fisttp
fisttp
adc
repnz
adc
sbb
sbb
and
and
sub
sub
repnz
fbstp
fbstp
cmp
cmp
dec
sahf
cmp
inc
fild
push
sahf
mov
pop
xor
jl
push
xchg
add
adc
or
mov
xchg
daa
pop
mov
push
fistp
mov
aam
pop
aas
pusha
rcr
ret
pop
jp
pop
(bad)
and
mov
mov
mov
fbld
in
call
or
fbld
fcomip
fstp
mov
mov
push
cmp
xor
sub
clc
dec
pop
mov
jp
fild
ins
in
xchg
daa
fbstp
je
js
cmp
repnz
fild
dec
fisttp
scas
repz
je
dec
repz
and
mov
pop
div
nop
xchg
repnz
rcl
xchg
cmp
cld
xchg
xchg
sbb
sti
mov
mov
push
cmp
adc
inc
sub
mov
enter
push
enter
int3
dec
mov
dec
ror
xchg
popf
or
(bad)
fisttp
inc
mov
ficomp
sahf
inc
cld
das
cld
jmp
lahf
lock
mov
in
bound
cmps
in
out
xor
shl
fcomip
lahf
inc
xor
adc
bound
cld
pop
sub
enter
add
loopne
inc
test
add
mov
(bad)
dec
addr16
les
adc
stos
cmp
adc
sti
aas
add
in
fdiv
sub
(bad)
cld
jb
lahf
jp
jp
mov
loopne
mov
loopne
loopne
xor
push
(bad)
jmp
and
mov
sbb
in
enter
ins
ins
enter
ins
in
mov
sbb
cmp
and
and
mov
mov
setne
mov
loopne
loopne
sub
loopne
fucom
enter
xor
sub
jp
jle
and
adc
test
jno
cmp
ds
sbb
push
lahf
loopne
xor
cwde
(bad)
fadd
and
sbb
dec
dec
leave
and
enter
xor
nop
pop
jp
push
stc
outs
adc
push
push
dec
sub
test
ds
push
test
loopne
pop
jle
sbb
aas
mov
cmp
fs
mov
mov
arpl
or
loopne
dec
jg
jge
jmp
outs
int3
imul
fist
nop
add
and
jg
and
out
lahf
iret
retf
pop
loopne
jmp
loopne
data16
ds
xor
xor
adc
das
inc
inc
(bad)
sub
xchg
xchg
push
dec
les
scas
(bad)
loopne
jl
xchg
js
jl
adc
repnz
loopne
loopne
loopne
and
daa
xchg
lods
test
retf
repz
loope
pushf
mov
in
cmp
loopne
lock
daa
loopne
loopne
loopne
es
push
sbb
xchg
out
lock
mov
xchg
xchg
shl
loopne
loopne
sahf
cmp
repnz
loopne
loopne
loopne
leave
xchg
daa
dec
loopne
loopne
loopne
cmp
loopne
loopne
loopne
sti
and
add
mov
lock
cmp
loope
mov
cli
and
jg
push
call
xor
cmp
enter
adc
cld
push
jb
and
loope
loope
pop
cmp
inc
loope
loope
loope
mov
sbb
stos
adc
cld
jmp
in
mov
mov
mov
mov
mov
and
adc
xor
cs
push
mov
ja
shl
loope
fdivrp
dec
and
sub
cmp
sub
jle
rol
push
fndisi(8087
inc
int3
adc
dec
pop
sahf
push
enter
jl
add
xchg
dec
dec
mov
lahf
retf
lock
jo
sti
adc
or
stc
xchg
loope
loope
jns
pusha
sti
mov
movs
cmp
fs
in
data16
call
mov
adc
jae
cmp
push
cwde
sub
(bad)
js
(bad)
mov
(bad)
adc
dec
scas
pop
xor
and
ficomp
pop
loope
in
out
dec
movs
jb
loope
loope
cmp
jb
xor
xor
test
and
push
add
jae
pop
rcr
xor
fistp
repnz
jg
movs
movs
mov
mov
mov
loope
jmp
out
loope
loope
loope
loope
mov
aam
xlat
aad
es
mov
push
cmp
jg
nop
cdq
inc
mov
pusha
pop
cwde
inc
(bad)
jmp
dec
dec
mov
mov
inc
add
mov
dec
push
mov
dec
(bad)
dec
or
or
imul
jge
fisub
adc
fs
push
push
pushf
add
enter
push
mov
or
sar
pop
cmp
add
enter
inc
add
inc
and
lods
enter
enter
sub
shl
and
retf
pop
imul
dec
dec
scas
mov
and
aas
pop
call
in
dec
bnd
xchg
or
or
adc
aaa
ret
std
or
lods
push
and
test
retf
inc
dec
mov
popf
xchg
pop
dec
pop
or
jl
ret
mov
pushf
pushf
sahf
out
out
(bad)
ficom
xchg
add
cdq
cwde
cwde
mov
mov
retf
movs
xor
repz
repnz
inc
imul
xchg
ret
movs
test
sti
dec
retf
mov
mov
(bad)
jmp
(bad)
mov
stos
inc
xchg
pop
push
fild
xor
or
sbb
and
push
push
(bad)
jmp
jg
outs
inc
push
les
adc
push
mov
aaa
xor
mov
scas
or
xchg
retf
xor
add
inc
sub
mov
mov
add
(bad)
or
sub
movs
add
test
add
pop
xchg
stc
jnp
jo
adc
mov
adc
mov
mov
je
mov
test
or
in
push
mov
pop
mov
dec
add
inc
inc
sbb
dec
mov
jle
mov
or
add
js
stos
xchg
inc
pushf
add
(bad)
jl
fiadd
pop
sub
ins
inc
push
ja
pop
mov
je
and
and
add
inc
dec
fldcw
mov
ins
cdq
nop
mov
stc
jle
cmp
stos
sub
jnp
(bad)
or
adc
jae
mov
inc
or
(bad)
rol
adc
push
pop
or
pop
movs
dec
dec
loope
sbb
mov
add
enter
rcr
jb
pop
sub
mov
dec
sbb
xor
icebp
sbb
mov
push
scas
or
lahf
xchg
and
inc
fisubr
movs
icebp
push
mov
nop
sub
push
(bad)
leave
push
shl
mov
movs
xchg
push
or
inc
adc
mov
retf
adc
and
push
jns
adc
cmp
inc
adc
dec
test
adc
out
inc
cmp
loop
loop
inc
xor
xor
lock
(bad)
push
(bad)
dec
(bad)
adc
add
adc
cdq
add
daa
pop
imul
nop
xchg
xchg
inc
in
in
add
adc
ins
adc
push
jecxz
or
xchg
push
(bad)
add
inc
mov
retf
sbb
mov
ror
test
cmp
pop
pushf
or
mov
xchg
adc
(bad)
jo
add
cmp
push
xchg
sbb
cmp
je
xor
xor
adc
or
sbb
add
xchg
and
scas
call
add
sti
and
sub
jp
add
and
data16
cmc
cwde
or
inc
add
rol
sbb
mov
mov
stos
adc
out
and
sbb
sbb
pushf
sbb
add
loop
stc
add
or
or
js
mov
and
xor
inc
jb
test
js
lea
or
out
scas
mov
mov
fs
sahf
je
fs
test
lods
test
scas
in
adc
in
in
inc
lds
push
inc
sub
push
in
cwde
or
push
inc
mov
and
fbld
adc
add
ror
add
ret
dec
pushf
and
mov
push
fs
and
pop
and
and
and
pop
adc
cmp
enter
jnp
lds
test
lock
and
dec
shl
jae
mov
lods
sub
push
add
and
out
and
mov
daa
and
sbb
pop
and
inc
or
inc
aaa
and
lods
lods
cs
sub
sbb
nop
pop
lods
mov
mov
frstor
add
pop
out
inc
cmp
mov
int
cmp
push
sbb
add
cs
dec
sahf
iret
xor
ss
dec
bnd
pop
dec
mov
inc
scas
mov
es
mov
dec
push
cmp
movs
dec
dec
sub
test
nop
push
leave
gs
sbb
push
sahf
ja
sub
lods
outs
xor
jo
movs
adc
daa
push
sub
scas
aad
push
push
xor
pushf
jns
cmp
ret
jo
jl
in
repnz
push
jmp
leave
stos
dec
call
xchg
ins
adc
sub
(bad)
js
test
movs
fidiv
cmp
inc
mov
(bad)
icebp
and
mov
ins
inc
cmp
jns
je
enter
pusha
sbb
sbb
mov
or
cmp
cmp
mov
stos
fnsave
mov
ins
fsubr
mov
iret
and
mov
mov
jns
test
mov
inc
shl
inc
fisubr
cs
mov
mov
xchg
add
xor
fist
dec
dec
mov
add
dec
mov
loopne
gs
push
or
stos
inc
dec
mov
aas
add
jb
inc
dec
xor
push
sub
xor
dec
dec
pop
xor
inc
add
add
in
sbb
jne
jge
adc
inc
lods
inc
push
loop
or
xchg
sbb
jnp
and
dec
xor
movs
dec
dec
ret
retf
xchg
jl
push
ret
cdq
nop
push
in
dec
push
mov
xchg
or
push
push
pop
test
cmp
dec
push
js
enter
push
push
je
into
je
pop
jne
ins
ins
adc
ins
pop
dec
add
inc
push
push
ror
enter
enter
push
push
enter
push
push
leave
add
add
pop
and
push
out
mov
es
pop
sub
inc
(bad)
repnz
js
add
scas
inc
pop
or
or
and
pop
pop
enter
sub
pop
pop
add
es
aad
sbb
je
repnz
daa
sbb
shl
xor
mov
sbb
push
pusha
pusha
sub
or
fsubr
test
jns
adc
in
in
in
lock
fstp
xchg
inc
call
and
lds
push
popa
cld
mov
add
ret
dec
mov
fstp
popa
xchg
xor
mov
jg
fs
repz
pushf
sbb
add
xchg
pushf
mov
or
in
imul
gs
mov
call
sbb
inc
push
pusha
dec
ins
mov
mov
mov
enter
inc
lods
xchg
mov
std
jb
xchg
xchg
dec
cli
pop
mov
iret
dec
in
xchg
cmp
pop
inc
int3
mov
mov
nop
inc
push
push
push
mov
mov
gs
data16
test
push
ror
mov
dec
lods
xor
or
cmp
(bad)
xlat
lea
xchg
or
imul
sub
sbb
ins
mov
add
add
dec
ins
mov
pop
dec
push
test
dec
lods
outs
or
arpl
sbb
popf
in
aaa
(bad)
popa
push
movs
outs
cmp
pop
mov
rcl
jl
loop
js
shl
shl
pop
loopne
test
push
xchg
fs
mov
(bad)
xor
xor
shr
cli
iret
cmp
pop
add
scas
ror
jno
xchg
xchg
das
dec
adc
add
add
pusha
xchg
push
(bad)
outs
aam
retf
jge
mov
adc
jb
inc
(bad)
out
push
retf
movs
cmp
jl
cmp
sbb
mov
pop
push
maxps
mov
adc
sub
test
or
jae
inc
inc
aam
add
arpl
je
xchg
adc
imul
call
mov
and
(bad)
popa
xchg
sbb
outs
push
int
mov
mov
sub
dec
mov
rcl
xor
cmp
pusha
and
and
jl
add
nop
sar
(bad)
xchg
adc
(bad)
xchg
jle
lock
sahf
test
(bad)
sahf
adc
and
xchg
pop
loope
std
loope
xor
dec
jnp
adc
mov
fs
rcl
fcom
lock
sahf
pop
call
xor
retf
jg
mov
jns
loopne
loope
loope
xor
mov
xlat
inc
push
(bad)
xchg
(bad)
push
bound
(bad)
jp
repnz
retf
loope
loope
loope
push
and
jns
lock
loope
outs
call
adc
fimul
(bad)
mov
out
popf
adc
loop
and
pop
jle
loop
sahf
sti
loop
loop
fisttp
mov
mov
pop
ret
lahf
jl
sbb
and
loop
loop
loop
add
nop
and
loop
sub
sbb
loop
pop
pop
fistp
xor
js
js
and
leave
and
xor
add
ins
ins
sbb
je
pop
sahf
inc
push
xor
lahf
cmp
call
mov
inc
pop
loop
and
xor
sahf
inc
shl
dec
repz
cmp
daa
push
mov
retf
pop
aad
jg
dec
in
dec
push
pushf
pushf
ins
cmp
sbb
mov
out
pop
mov
mov
pop
fwait
fs
pop
lods
lods
mov
shl
push
jge
loop
loop
xchg
rcl
and
and
mov
mov
jns
jp
jp
std
mov
mov
fwait
cmp
scas
jl
and
loopne
adc
cmp
dec
cli
loop
mov
sbb
add
retf
aam
adc
pop
jmp
add
sbb
std
mov
nop
nop
(bad)
mov
(bad)
fst
(bad)
fdivr
movsx
out
popf
inc
jmp
call
movntq
out
movs
mov
daa
sbb
call
test
shl
loopne
jmp
lods
std
dec
pop
or
in
cld
jg
cld
shl
fimul
movs
mov
mov
mov
mov
shl
mov
jg
fwait
sbb
loop
xor
pop
jg
and
pop
dec
dec
shr
xor
xor
enter
lea
inc
adc
inc
xchg
les
loop
mov
int3
loop
dec
aaa
cmp
loop
xor
pop
lahf
or
inc
jp
outs
mov
mov
test
out
cld
jns
pushf
sbb
test
mul
dec
xchg
pop
jb
call
and
mov
adc
jp
loop
stc
gs
and
fadd
mov
inc
adc
pop
clc
call
(bad)
lahf
js
in
xchg
xchg
cmp
pop
ret
fild
dec
cmp
jecxz
and
cmp
jecxz
jecxz
jecxz
leave
and
add
or
jo
mov
repnz
adc
adc
xchg
pushf
mov
sbb
sub
and
(bad)
fadd
sub
sub
sbb
movs
cdq
fbstp
imul
out
stos
mov
xor
stc
enter
cmp
repnz
jb
dec
sahf
stc
in
adc
test
inc
xor
in
sub
jl
xchg
mov
jl
push
dec
add
sub
pop
pop
jae
in
pop
(bad)
pusha
xchg
out
xchg
jmp
xor
xchg
xchg
xchg
ins
pusha
imul
pushf
pop
sahf
xchg
mov
aas
movs
sbb
sub
sbb
je
loopne
inc
js
daa
cmp
nop
inc
test
seto
cmp
aas
jo
sub
xor
mov
and
and
scas
mov
pushf
pop
xchg
adc
test
aas
movs
call
inc
jo
ret
lods
jecxz
pop
jle
mov
pop
in
adc
and
sbb
mov
pop
cwde
inc
mov
jb
rol
enter
dec
jo
mov
hlt
das
shl
jmp
cmp
add
ror
xor
pop
aam
pop
xchg
mov
pop
xchg
xor
adc
pop
pop
mov
enter
inc
mov
or
inc
outs
out
in
lock
hlt
push
push
lock
clc
cld
xchg
idiv
daa
dec
sahf
mov
add
or
and
rcl
or
fwait
in
scas
ja
out
arpl
adc
in
xchg
mov
repnz
(bad)
out
sbb
mov
and
xchg
sahf
xchg
lahf
dec
fimul
loop
xchg
in
in
out
jle
mov
(bad)
js
cmp
fild
popf
js
inc
lahf
jmp
mov
cmp
inc
in
xchg
push
or
mov
push
adc
test
sti
stos
mov
pop
mov
jb
aas
in
mov
fs
cmp
nop
push
add
jmp
(bad)
out
mov
mov
ret
gs
sub
adc
adc
jns
cmp
sti
test
mov
push
jo
out
mov
mov
idiv
pop
rcl
mov
clc
loop
nop
mov
cmp
hlt
xchg
loopne
in
scas
cld
in
xchg
shl
jmp
frstor
mov
dec
mov
loope
lods
in
jg
and
mov
cmp
fs
adc
mov
in
ja
in
mov
cmp
(bad)
enter
or
out
sar
jg
out
mov
fdivr
clc
mov
fdivr
loopne
in
pop
(bad)
mov
test
scas
test
xchg
add
jo
sbb
in
mov
ds
clc
in
call
add
sti
cld
in
aam
and
push
aas
enter
xchg
xchg
out
aas
adc
adc
xchg
jae
ror
shl
fld
call
adc
stc
mov
adc
daa
pop
dec
clc
in
test
pop
in
in
sbb
pop
in
in
div
in
repnz
mov
push
jge
cmp
dec
adc
fiadd
test
inc
mov
in
in
bound
call
push
call
adc
mov
clc
sub
pop
aas
xchg
out
sbb
ss
add
and
jo
test
in
(bad)
push
inc
push
je
jl
inc
push
cmp
cmp
mov
nop
cwde
pushf
mov
inc
test
jnp
cs
xchg
mov
mov
mov
mov
loopne
sbb
in
mov
repz
mov
arpl
enter
retf
iret
int3
in
dec
sar
cld
repnz
in
fdivr
loopne
inc
int
mov
arpl
pop
stc
call
test
loopne
lock
adc
cmp
clc
cmp
adc
cdq
aaa
std
sbb
cld
cmps
out
pop
or
adc
cmp
(bad)
or
shl
or
into
fbstp
or
or
daa
int
jp
jp
in
adc
in
shl
mov
aad
adc
adc
adc
out
mov
pusha
aaa
arpl
les
xlat
pusha
mov
add
mov
inc
sub
jne
lods
adc
shl
loopne
and
sahf
adc
push
cmp
mov
jmp
enter
repnz
cmp
add
aad
dec
out
data16
cld
mov
inc
out
daa
dec
mov
mov
add
mov
popf
push
nop
hlt
xchg
hlt
lahf
pop
stos
repnz
adc
fsubp
pop
jae
or
je
aaa
push
inc
aaa
push
bnd
pusha
mov
xchg
js
adc
retf
out
out
in
jbe
lahf
pop
mov
mov
pop
enter
sbb
aaa
xor
icebp
jl
mov
int3
pop
aad
stc
repz
in
out
out
out
out
inc
mov
cwde
cld
(bad)
in
pushf
out
mov
mov
xchg
inc
adc
out
mov
jb
and
xor
(bad)
popf
in
nop
xchg
jg
shr
pop
cld
pop
clc
sub
adc
mov
nop
inc
jle
cwde
ja
test
out
mov
jae
mov
repnz
aaa
xchg
cmp
repnz
aaa
sar
in
xchg
xchg
hlt
out
out
out
sahf
cmp
repnz
out
out
out
leave
xchg
daa
dec
out
out
out
cmp
repnz
and
and
sub
sub
sub
out
out
or
jns
out
out
jbe
xchg
daa
out
ret
out
out
jns
in
out
out
out
out
daa
dec
sahf
cmp
fs
out
out
in
xchg
jo
je
js
jl
xchg
cmp
out
out
out
sar
leave
cmp
dec
jns
loope
cmp
cmp
out
out
out
sahf
cmp
adc
xchg
out
out
js
pop
dec
out
nop
scas
adc
aas
test
dec
out
sahf
cmp
repnz
out
out
out
leave
xchg
daa
dec
out
out
out
inc
mov
out
or
out
repnz
cdq
loope
fdivr
and
mov
fcom
fsubr
daa
jg
pusha
pop
in
jg
loopne
nop
inc
push
xchg
in
call
in
hlt
clc
inc
push
jb
cld
call
pop
cmp
call
adc
adc
sbb
sbb
inc
push
jb
and
and
sub
sbb
sub
xor
xor
outs
repnz
cmp
adc
pop
jns
fidivr
call
dec
call
inc
outs
jns
in
dec
call
push
mov
pop
pop
lea
inc
(bad)
es
popf
scas
mov
sub
leave
mov
dec
call
cmp
bnd
jl
add
dec
call
or
inc
jg
pop
mov
jae
enter
mov
loopne
pop
nop
arpl
xchg
call
ret
jae
mov
adc
pusha
lahf
adc
mov
or
lahf
inc
pusha
repz
xchg
stos
xor
mov
(bad)
test
lds
push
aas
dec
lock
push
inc
call
mov
jo
fwait
pushf
or
loopne
ja
mov
test
daa
scas
ret
call
call
call
call
leave
xchg
add
fdivr
sub
dec
xor
fcomp
leave
call
clc
out
xchg
sbb
jmp
in
clc
adc
xchg
jmp
sahf
cmp
jmp
sbb
in
xor
sub
push
cmp
das
jmp
cmp
cmp
mov
sbb
enter
dec
scas
ret
push
push
mov
push
mov
test
mov
adc
lods
enter
daa
jmp
pop
jo
mov
loope
mov
repz
test
mov
test
adc
sti
fisttp
mov
jle
call
cmp
bnd
aam
jmp
dec
sahf
cmp
cwde
jmp
repnz
xchg
movs
jmp
mov
sahf
cmp
jmp
mov
xchg
daa
jmp
int3
sub
dec
sub
shr
aam
fsub
push
cmp
jbe
loopne
jmp
bnd
lock
dec
jmp
add
repnz
add
or
or
adc
adc
sbb
sbb
daa
cmp
nop
cmp
cmp
daa
das
daa
int
cmc
shr
and
daa
das
ret
jmp
call
xor
cmp
cli
mov
adc
stos
adc
loope
dec
lods
adc
pop
jmp
push
jmp
in
pop
jmp
sub
jmp
jmp
js
pop
jmp
and
jo
or
ret
adc
repnz
stc
aas
jmp
and
and
mov
movs
test
mov
jb
and
xchg
(bad)
enter
sbb
ror
xchg
fcomp
sub
and
rcl
jg
pop
dec
call
in
leave
xchg
daa
jmp
outs
jns
jmp
loopne
in
add
add
jmp
sbb
jmp
jmp
jmp
pop
js
adc
sbb
cmp
bnd
jmp
jmp
jmp
jb
daa
dec
jmp
jmp
jmp
in
jb
aas
loopne
xor
in
in
xor
mov
jmp
addr16
pop
sub
lods
sti
adc
rep
and
jmp
(bad)
push
pop
pop
pop
call
pop
mov
xchg
adc
sbb
add
push
stc
push
push
xlat
mov
adc
data16
add
dec
jl
inc
sahf
cmp
jmp
jmp
jmp
pop
or
or
xchg
mov
cmp
dec
cmp
rol
ss
jmp
jmp
stc
dec
pop
(bad)
adc
mov
or
outs
pusha
rcr
xchg
mov
ret
lahf
mov
xchg
mov
lock
stc
out
inc
dec
lods
mov
and
repnz
in
mov
mov
fidiv
mov
mov
mov
enter
push
jns
jmp
fcmovbe
fcomp
add
nop
fsub
pop
jmp
and
mov
jmp
xchg
in
icebp
or
stc
fs
sahf
inc
adc
and
cwde
loopne
mov
ds
in
add
add
or
lea
in
adc
adc
jns
in
sbb
sbb
and
and
cmp
in
sub
sub
xor
xor
xor
in
cmp
lock
mov
cmp
inc
aas
in
ret
pop
cmp
inc
cmp
ficomp
ret
pop
mov
jns
inc
in
dec
enter
into
icebp
enter
mov
inc
push
jne
daa
cmp
jecxz
and
mov
mov
pop
out
xchg
push
mov
in
fs
loope
mov
push
neg
jo
je
js
test
mov
adc
pop
stc
iret
in
test
mov
in
pop
cmp
mov
mov
aas
in
mov
call
lahf
in
in
out
dec
push
cmp
xchg
adc
mov
pop
movs
(bad)
sti
repz
test
mov
test
mov
xchg
mov
mov
scas
popf
xor
js
test
cmp
sti
lods
mov
bound
xor
enter
stc
inc
cmp
adc
scas
cmp
add
cld
sti
retw
fdivr
pop
adc
loopne
jmp
in
sti
jbe
lods
mov
dec
xor
ss
scas
fldenv
adc
sub
xchg
pop
sahf
stc
mov
int3
push
xchg
(bad)
sahf
adc
add
dec
jae
sbb
daa
jns
cmp
test
or
leave
xchg
daa
in
or
adc
adc
cmp
repnz
sbb
sbb
and
and
xchg
daa
dec
in
sub
sub
xor
repnz
xor
cmp
cmp
inc
xchg
daa
dec
sahf
in
inc
in
dec
in
dec
jns
in
in
push
in
push
in
pop
in
pop
daa
dec
sahf
cmp
pusha
in
fs
push
nop
ins
in
jo
jb
or
and
pop
ds
jns
leave
xchg
xchg
xchg
jns
in
js
jl
jns
in
sub
in
mov
mov
nop
in
xchg
in
cwde
jns
in
in
pushf
in
mov
daa
dec
sahf
cmp
lods
in
mov
mov
repnz
xchg
mov
in
les
cmp
in
enter
shr
aam
leave
xchg
daa
in
fsubr
fsubr
loopne
inc
push
repnz
in
call
aaa
cmp
enter
daa
lahf
xchg
pop
jns
jns
out
add
add
add
or
mov
inc
or
pop
jns
daa
dec
mov
xchg
out
or
adc
sbb
leave
xchg
adc
sbb
sbb
and
lock
pop
out
daa
enter
out
sub
or
jne
in
pop
adc
nop
sahf
lods
pushf
xchg
jg
nop
out
xor
xor
xchg
daa
dec
out
cmp
cmp
inc
pop
push
repnz
inc
out
dec
out
dec
out
dec
aaa
cmp
out
xor
adc
inc
inc
jmp
or
mov
push
pop
pop
pusha
nop
retf
leave
and
data16
cdq
in
outs
push
loop
sbb
add
pmulhuw
ins
push
inc
je
mov
js
lahf
xchg
sahf
xchg
es
jl
pop
mov
je
pop
cmp
fcom
fild
adc
into
(bad)
adc
mov
pop
pop
call
adc
outs
pop
fisub
mov
ret
and
mov
mov
int
mov
jle
cdq
(bad)
sahf
mov
jbe
mov
mov
jmp
mov
push
bnd
pushf
(bad)
neg
mov
mov
mov
jns
(bad)
test
(bad)
arpl
dec
dec
fucomp
mov
pop
and
out
mov
scas
out
lods
aas
or
lods
std
scas
out
cmp
ins
aas
inc
aas
jmp
add
out
inc
add
je
or
das
xor
mov
(bad)
ss
enter
mov
shl
mov
or
add
adc
pop
or
jb
jo
mov
rol
mov
mov
push
xchg
mov
movs
jb
or
ins
push
cdq
nop
inc
(bad)
enter
mov
adc
pop
push
mov
cs
retf
pop
sbb
enter
push
adc
rcl
iret
and
int
sbb
and
in
and
mov
adc
aam
jns
es
fsubr
fcomp
loopne
cmp
inc
and
ret
xchg
sbb
sub
enter
fldenv
sbb
or
lock
sbb
dec
or
pop
sbb
push
inc
or
mov
mov
dec
mov
stos
shr
mov
mov
or
and
mov
sub
movs
in
dec
or
pop
cmp
sub
data16
xor
shl
sub
push
sbb
call
mov
xchg
push
or
ret
or
pop
add
xor
pop
cdq
push
in
lock
popa
or
sbb
sub
outs
(bad)
jne
add
add
add
or
lea
ror
sbb
mov
adc
push
push
aam
xchg
rcl
outs
xor
adc
test
dec
push
sub
dec
sbb
jae
lock
or
lock
inc
fwait
push
scas
(bad)
or
rol
jle
lea
push
lds
cwde
sbb
jmp
or
out
xor
call
inc
sbb
fsub
dec
daa
or
xor
mov
pop
int
push
xchg
cmp
sbb
into
jne
mov
aas
sub
or
out
push
mov
nop
sbb
xor
add
xchg
jae
pop
adc
dec
inc
in
xchg
or
sub
stos
imul
shl
or
adc
stos
mov
imul
lock
nop
add
js
aas
mov
jg
(bad)
out
cmp
movzx
cmp
jne
fcomp
pop
call
mov
mov
out
add
in
or
jmp
pop
add
gs
out
daa
fsubr
dec
pop
out
inc
test
jae
push
add
rol
push
mov
in
mov
add
jnp
rol
inc
adc
push
add
push
or
push
test
push
cmp
sar
lea
push
push
pop
scas
sbb
jge
dec
and
cmps
sbb
sub
xlat
add
dec
and
enter
or
push
or
push
push
or
push
mov
push
or
cmp
or
inc
das
pop
pop
pop
jns
jns
rol
out
pop
icebp
(bad)
repz
hlt
mov
xlat
clc
dec
inc
push
sub
idiv
retf
inc
dec
and
div
inc
inc
inc
mov
push
pop
jns
push
sub
(bad)
lahf
cld
std
cld
pop
xchg
retf
jnp
mov
dec
nop
cmp
popa
mov
das
jae
shl
dec
or
mov
xchg
mov
mov
add
sub
in
xchg
push
cmps
mov
cwde
fsub
jg
add
nop
or
gs
ja
cmp
adc
arpl
add
sbb
ds
jns
push
mov
je
adc
mov
mov
pop
je
(bad)
jb
sbb
aaa
or
pushf
pop
loope
sbb
xor
bound
popa
mov
gs
fs
addr16
push
cmps
and
or
loope
jae
push
sbb
xchg
retf
mov
cmovae
sbb
jg
enter
ss
gs
ss
sbb
hlt
repz
mov
aad
mov
out
sbb
popa
adc
or
xchg
add
mov
loopne
iret
or
and
popf
and
push
push
push
(bad)
pop
adc
sub
popa
adc
mov
fild
mov
mov
sub
leave
adc
dec
or
xor
pop
lea
jo
pop
pop
add
push
push
mov
lods
mov
pop
pop
shl
test
dec
or
xchg
jo
test
inc
xchg
xchg
(bad)
jl
out
mov
sub
add
sub
stos
push
add
add
add
and
or
or
cld
or
pop
sar
retf
data16
xor
jns
cld
test
in
xor
add
sub
add
add
xchg
or
jae
pop
call
call
sub
add
push
stc
dec
outs
jne
cmp
scas
mov
mov
inc
mov
sub
inc
cmp
cmp
ds
in
jb
aas
pop
push
test
xchg
movs
sbb
xlat
add
mov
ds
stos
xor
ja
inc
out
scas
out
enter
mov
dec
scas
inc
sbb
leave
inc
or
add
or
and
in
add
lea
or
pop
in
jl
jno
xchg
pop
les
push
and
mov
retf
push
fdivr
adc
mov
mov
(bad)
or
loopne
cmp
mov
push
sub
mov
ins
mov
xor
sub
and
ret
xor
push
or
adc
imul
push
jne
cmp
or
test
retf
add
mov
mov
xchg
and
mov
mov
cld
xor
xchg
add
pop
rol
adc
test
or
mov
mov
out
add
push
inc
push
loope
imul
xor
mov
js
loope
mov
push
cwde
mov
xchg
sbb
int3
jge
push
mov
popf
push
sub
mov
mov
mov
add
movs
mov
dec
and
out
lahf
mov
into
pop
or
and
adc
xchg
sbb
sub
sbb
into
loopne
repnz
fs
enter
xchg
xchg
test
pushf
mov
inc
push
lods
mov
pop
dec
cmp
cdq
and
pusha
lock
add
mov
cld
cmp
mov
fs
js
dec
fwait
arpl
daa
add
push
pusha
add
inc
fadd
jl
dec
xchg
ja
mov
pop
push
pusha
or
push
cs
mov
or
jmp
push
pop
dec
xchg
jns
jns
out
push
jne
jo
inc
cmps
mov
dec
mov
jns
retf
or
jns
out
pop
shl
shl
pop
pop
pop
adc
test
test
stos
jg
jb
cmp
lahf
adc
mov
xchg
fst
pusha
mov
mov
pop
or
jmp
lahf
add
cmp
pop
inc
lods
adc
cmp
inc
enter
or
pushf
enter
or
sub
out
fsub
in
lock
retf
leave
and
jo
mov
jo
pop
cmp
je
sub
out
sub
test
inc
inc
push
test
push
inc
inc
pop
push
jns
sti
sbb
or
mov
imul
mov
mov
mov
cmp
loope
daa
movs
pop
inc
enter
inc
add
out
sbb
adc
push
sub
xchg
xchg
push
aas
pop
sub
mov
or
add
or
mov
aam
inc
dec
jbe
fdiv
in
add
pushf
out
test
retf
in
imul
cmp
inc
nop
adc
sub
mov
push
lock
imul
add
repnz
adc
mov
push
stc
mov
out
(bad)
out
mov
inc
inc
sbb
sbb
call
adc
jle
adc
mov
int
in
or
push
dec
add
adc
leave
push
cmp
(bad)
(bad)
sbb
(bad)
cli
mov
lea
not
or
js
adc
add
jnp
enter
adc
sbb
ins
adc
inc
dec
xchg
rcr
(bad)
mov
push
add
or
sub
movs
icebp
out
test
test
sahf
dec
or
mov
lea
ret
dec
sbb
xor
cld
out
shl
and
dec
jae
add
dec
add
ja
pop
add
aad
inc
push
adc
xor
cmp
rcl
ja
cmp
add
adc
inc
sbb
mov
jg
mov
or
mov
mov
dec
aaa
xor
(bad)
or
les
shr
leave
adc
sub
xor
mov
xchg
adc
and
mov
xor
retf
imul
lods
dec
xor
inc
sub
std
jge
push
cmp
jbe
and
xor
and
push
add
adc
cmp
int3
mov
sbb
lar
pop
sbb
sahf
pop
xchg
cmp
sbb
sbb
js
dec
dec
adc
and
sbb
add
push
leave
push
or
jo
(bad)
js
adc
icebp
add
adc
mov
mov
xchg
mov
in
pop
ss
sbb
test
cmps
fwait
lods
xchg
dec
bound
lods
cmp
pusha
les
in
es
and
repz
clc
adc
jmp
sbb
dec
inc
pop
mov
xchg
xor
or
dec
add
pop
xchg
mov
out
push
xchg
push
sbb
inc
xchg
adc
or
jmp
lea
or
mov
mov
or
xchg
imul
xchg
out
push
pop
push
and
mov
imul
mov
sbb
adc
icebp
lods
stc
and
pop
icebp
scas
or
icebp
lods
sub
pop
repnz
lods
inc
cld
(bad)
(bad)
jns
dec
adc
pusha
sub
and
push
sbb
fsub
pop
dec
dec
inc
inc
cmp
int
jecxz
inc
push
cwde
and
inc
xchg
int3
mov
push
enter
sbb
icebp
sahf
sbb
push
icebp
and
and
fsubrp
stos
not
out
daa
adc
sub
sbb
dec
ds
lods
inc
int
fmul
stos
sub
js
in
pop
mov
cld
cld
jo
and
jno
inc
shl
jb
rcr
xchg
cmc
mov
sub
fisub
pop
dec
inc
xor
xchg
or
sub
sbb
cs
xlat
hlt
xchg
push
inc
add
dec
push
and
call
shl
dec
xchg
ret
jne
test
push
pop
shl
push
lds
fsub
xchg
out
lds
in
dec
adc
mov
cld
adc
xor
and
repz
xor
pop
xor
pushf
xchg
inc
test
dec
outs
repz
sbb
iret
xchg
xor
ret
cmp
pop
les
mov
das
(bad)
adc
push
call
mov
cs
test
pop
push
inc
pop
daa
cmp
inc
and
fs
dec
sub
movs
cmp
dec
mov
xchg
mov
pop
int3
gs
mov
test
pop
jg
push
enter
sbb
dec
loopne
mov
jl
pusha
inc
rol
test
ret
mov
xchg
mov
adc
and
xchg
inc
jl
js
and
or
cmp
into
ins
je
xchg
or
cmp
cmp
push
cmp
or
test
lea
nop
xor
in
add
add
add
xor
mov
sbb
aad
cmp
enter
arpl
sbb
sub
sub
mov
or
cmp
les
jns
movs
jb
mov
inc
add
add
adc
repnz
add
repnz
outs
shr
imul
(bad)
cwde
movs
push
stc
pop
mov
int3
mov
cs
dec
lahf
test
cwde
mov
inc
dec
or
push
daa
add
lods
push
dec
loope
or
mov
(bad)
in
jb
mov
mov
mov
icebp
shr
ss
ret
icebp
ret
xor
mul
icebp
inc
or
mov
in
push
mov
mov
sub
lods
retf
adc
add
and
dec
mov
push
ror
sbb
aaa
enter
adc
push
lds
aam
dec
out
cs
stos
mov
adc
shr
loop
xor
push
cs
sub
shl
xchg
icebp
movs
adc
retf
adc
adc
jo
bnd
ja
jl
jo
ror
outs
or
mov
push
mov
and
nop
movs
or
scas
arpl
mov
shr
test
xchg
xor
push
push
ror
push
ret
push
push
test
pop
mov
jnp
xchg
mov
mov
pusha
push
sub
adc
clc
push
push
or
fadd
or
ins
sbb
cwde
cs
and
push
repnz
jl
mov
sub
lahf
pop
and
aad
pop
fistp
sbb
dec
add
cmp
(bad)
adc
cmp
push
(bad)
into
xchg
cld
and
push
sub
cmps
xchg
test
sub
push
daa
iret
pop
pop
adc
mov
pop
sbb
pop
jno
sbb
pop
js
in
adc
or
mov
cmp
iret
es
shl
dec
jb
mov
pushf
and
shr
xchg
xchg
fldcw
enter
stos
adc
jno
add
fcomp
les
pop
jl
add
es
jl
jl
add
push
in
mov
ins
pop
cs
(bad)
les
add
pop
adc
rol
addr16
daa
lods
jp
rol
push
mov
mov
sub
movs
jo
adc
stos
inc
lods
xor
sbb
lahf
ins
jnp
and
add
clc
outs
push
je
leave
xor
outs
stos
and
aam
imul
popa
sub
inc
dec
je
ss
sub
xchg
int
mov
mov
adc
xor
mov
and
dec
lea
dec
or
pop
mov
mov
push
xor
or
mov
and
sbb
xchg
jno
mov
pcmpgtd
das
jb
pop
in
int
pop
fdivr
shl
mov
iret
fmul
mov
or
aam
or
xchg
out
jne
sub
test
pushf
push
sub
xor
add
adc
mov
cmps
push
pop
inc
loopne
push
xchg
and
clc
push
loope
or
adc
jp
je
mov
pop
jl
or
or
lahf
push
test
adc
push
jmp
lds
xor
cs
jno
push
jb
adc
inc
leave
jg
jge
push
jb
jl
enter
jp
enter
js
leave
add
add
popa
stos
add
jg
and
push
movs
mov
jo
mov
add
sub
fdiv
call
or
arpl
add
sub
aam
jb
jb
stos
dec
push
add
adc
mov
jns
jns
(bad)
mov
movs
jb
pop
out
mov
out
xchg
bound
inc
repnz
sub
mov
sahf
mov
add
lods
movs
repnz
mov
out
out
and
xchg
dec
out
out
inc
cld
sbb
retf
std
scas
pop
(bad)
daa
iret
cmps
mov
add
inc
add
add
xchg
es
sbb
mov
leave
inc
shr
mov
mov
lods
adc
out
loop
(bad)
(bad)
jns
xchg
out
int3
cmp
and
cdq
xchg
fxch
test
dec
shr
ret
out
fisttp
scas
xor
push
jg
fild
dec
push
jns
inc
js
jne
(bad)
lahf
adc
call
xor
in
sti
scas
test
lock
mov
mov
sti
fucomip
out
fwait
pushf
inc
adc
imul
push
pop
adc
(bad)
jmp
test
lock
pop
adc
or
clc
dec
dec
sti
mov
imul
adc
cmc
sti
xchg
push
dec
xchg
aas
adc
test
cmp
mov
jg
push
hlt
repnz
sbb
sbb
mov
leave
xor
es
and
clc
push
sbb
lock
mov
lock
movs
stc
cmp
mov
mov
repnz
mov
mov
test
mov
dec
test
out
dec
mov
mov
jo
push
pop
pop
jns
sub
mov
push
jns
sbb
fsubrp
add
aas
lock
xchg
dec
mov
das
int
mov
push
jno
push
lock
jno
pop
dec
je
cld
js
in
out
push
lock
add
mov
in
mov
nop
clc
sahf
sahf
sahf
xchg
adc
lahf
cld
push
lods
cwde
mov
pushf
scas
mov
jmp
push
adc
adc
lods
scas
or
popa
pop
mov
pop
xor
push
mov
call
call
sbb
mov
jb
(bad)
enter
sbb
and
in
fcomp
or
stc
inc
loopne
popf
popf
popf
in
pop
sbb
call
xchg
inc
cs
stc
test
and
add
add
shr
inc
add
fdivr
mov
jns
fdivr
adc
xchg
daa
dec
icebp
adc
sbb
sbb
jns
in
and
and
sub
icebp
sub
xor
xor
repnz
dec
icebp
cmp
cmp
mov
lahf
cmp
icebp
inc
icebp
dec
icebp
dec
test
adc
push
out
or
and
cmps
mov
inc
pusha
inc
inc
pusha
stc
mov
test
push
mul
(bad)
leave
dec
cmp
ins
outs
mov
pop
mov
sbb
mov
int3
adc
fnsave
popa
mov
or
daa
dec
jbe
sti
icebp
mov
mov
and
xchg
icebp
cwde
cld
push
jns
ins
mov
pushf
nop
push
and
jns
(bad)
les
jns
(bad)
retf
les
sub
cmp
test
mov
sbb
pop
ret
retf
sub
loope
pusha
push
fisub
xor
pusha
aam
in
icebp
push
sub
icebp
icebp
icebp
push
cmp
icebp
push
test
inc
inc
ds
mov
pop
mov
inc
xor
scas
icebp
enter
sub
adc
test
jge
aam
mov
fdivr
cmps
icebp
loopne
mov
stc
or
repnz
icebp
in
aaa
jns
inc
popa
les
adc
lahf
lods
pop
adc
pop
cmp
mov
es
pop
lock
mov
inc
pop
adc
sahf
mov
js
add
inc
repnz
mov
icebp
add
mov
test
mov
mov
test
xor
dec
sbb
mov
pop
ss
scas
and
inc
cld
call
sub
pop
leave
or
xor
repnz
xchg
inc
mov
pop
sbb
inc
mov
stos
dec
ret
dec
mov
pop
cmp
stc
repnz
and
in
mov
mov
pusha
mov
dec
inc
mov
ds
inc
test
cli
pop
enter
xor
in
leave
push
mov
nop
mov
je
adc
jg
xchg
ja
repnz
bound
imul
(bad)
cld
nop
inc
mov
adc
mov
inc
pushf
mov
cld
mov
mov
out
test
scas
pop
xchg
sub
lahf
mov
nop
je
aas
fild
js
xor
stc
mov
dec
mov
dec
pushf
dec
lahf
repnz
add
adc
sbb
jl
aas
adc
mov
(bad)
stc
mov
hlt
int3
mov
jle
out
into
daa
shr
mov
mov
outs
add
adc
mov
stc
sti
(bad)
ins
pop
bound
ror
inc
adc
xchg
loopne
xchg
retf
jne
xchg
in
jne
mov
fsubrp
xchg
aad
shl
sbb
pop
fbstp
dec
xor
xor
dec
fimul
in
hlt
fptan
clc
mov
or
stc
mov
cld
sahf
repz
add
repz
adc
stos
or
repz
sahf
mov
inc
call
ins
xor
jg
adc
mov
adc
(bad)
lods
jns
repz
sbb
jmp
jns
fucomp
jg
fistp
imul
mov
in
in
xor
ror
and
lock
jns
add
sub
xor
jo
cmp
xor
cmp
lahf
neg
repz
in
ds
pop
jo
jo
pop
inc
call
inc
retf
sbb
dec
dec
in
sar
rcr
repz
mov
adc
sub
enter
push
cld
pop
repnz
sbb
repz
ror
cmp
repz
mov
repz
js
xor
xor
push
adc
fwait
sbb
movs
adc
jg
xchg
pop
push
js
js
mov
repz
fsub
leave
out
test
test
aam
mov
sbb
je
mov
mov
fcomp
xor
leave
adc
pop
push
mov
in
pop
or
mov
pop
push
lock
repz
repz
repz
movs
repz
lods
mov
in
adc
repz
repz
mov
xchg
and
in
dec
mov
js
mov
and
mov
iret
sar
or
shl
push
leave
scas
test
xchg
outs
mov
fsub
add
inc
add
jg
pushf
test
js
push
fnop
shl
add
xchg
hlt
aam
out
fsub
stos
xor
shr
pop
pop
pop
push
cdq
in
in
in
fcom
xor
or
cdq
adc
push
setne
mov
dec
mov
adc
mov
mov
lock
(bad)
repz
sbb
repz
xchg
mov
fcomi
enter
fcomi
xor
add
xor
(bad)
sbb
iret
enter
sahf
adc
jns
outs
add
lods
imul
imul
bnd
mov
mov
mov
out
repnz
mov
mov
mov
clc
es
dec
pop
repnz
daa
clc
sub
sub
jge
clc
sub
sub
das
jns
dec
sti
add
xchg
mov
sti
or
or
jl
or
or
or
loope
repnz
daa
jns
lahf
sub
mov
xchg
daa
jns
add
add
sub
add
dec
pop
cmp
in
das
jns
call
adc
add
xor
(bad)
mov
or
mov
enter
mov
movs
mov
repnz
xchg
mov
add
or
inc
pop
add
add
mov
dec
dec
or
xor
and
cmp
cmp
cmp
cmp
or
nop
mov
fdivr
rcr
inc
nop
add
inc
inc
inc
add
nop
add
mov
jmp
fbld
push
or
push
xchg
xchg
mov
pop
or
inc
pop
repnz
pop
or
or
pop
add
or
bound
or
gs
cmp
or
push
imul
ins
ins
dec
or
mov
mov
sbb
jns
dec
or
pop
xchg
mov
or
repnz
and
shl
push
(bad)
sub
push
fs
push
sub
sub
push
fs
sub
outs
das
jmp
pop
adc
adc
adc
fs
push
adc
adc
in
dec
xor
or
jns
in
cmp
push
icebp
adc
mov
jns
dec
pop
adc
adc
adc
dec
add
ss
fist
mov
adc
xchg
mov
adc
xchg
cmps
adc
adc
adc
xor
add
adc
adc
xor
add
adc
mov
dec
dec
pop
jb
adc
adc
adc
and
sbb
adc
sbb
sbb
sbb
sbb
jo
sbb
mov
or
sbb
or
or
sbb
sbb
add
inc
sub
sbb
sbb
sbb
sbb
sbb
push
imul
ins
ins
scas
popa
inc
push
outs
outs
call
jo
mul
fbld
clc
pop
stc
pop
cli
nop
xchg
mov
cld
pop
std
dec
push
lods
jnp
(bad)
mov
dec
and
dec
and
dec
fadd
and
push
mov
lds
or
cmps
cmps
test
sub
fs
push
in
lods
scas
push
fs
push
scas
mov
jb
xchg
inc
mov
mov
xor
add
xor
mov
aaa
jns
mov
inc
pop
sub
mov
and
das
jns
and
xchg
xchg
mov
and
pop
and
sub
repz
call
mov
and
repnz
in
and
test
(bad)
lock
es
es
dec
pop
es
or
or
mov
lahf
ret
fbld
jo
repnz
xchg
daa
jno
jb
jae
jns
dec
daa
je
jne
jbe
mov
daa
js
add
mov
pop
in
das
jns
jns
jp
jnp
xchg
xchg
mov
sub
leave
dec
pop
sub
sub
mov
repz
sub
das
jns
dec
sub
outs
sub
mov
sub
jb
repnz
jae
je
jne
pause
add
pusha
aas
sub
sbb
sub
sbb
imul
sub
or
fild
sbb
sub
sbb
sub
push
xor
fadd
inc
sub
jl
jge
sbb
add
nop
add
add
mov
mov
mov
add
sbb
movs
add
nop
add
nop
cmps
test
lods
and
xor
lods
scas
xor
add
scas
mov
movs
xor
add
inc
sub
in
dec
sub
sub
movs
shl
sahf
mov
mov
sub
sub
repnz
daa
sub
sub
mov
sub
sub
sub
rcl
sub
jmp
sub
sub
sub
in
das
jns
test
out
mov
je
jmp
mov
leave
sub
jp
and
sub
fbstp
push
fs
push
jb
je
push
fs
jne
pop
xchg
mov
ja
bnd
and
rcl
(bad)
lds
and
xor
(bad)
enter
add
retf
xchg
and
(bad)
fist
rcl
sbb
aad
sbb
xchg
pop
and
aas
sub
and
enter
sub
leave
sub
or
xor
enter
clc
stc
cli
in
aad
sti
jmp
pop
cs
repnz
xchg
mov
cs
cmp
inc
cs
cs
mov
lahf
pop
xor
and
xor
xor
into
and
xor
xor
enter
sahf
mov
or
ror
add
xor
in
push
imul
cmp
xchg
xchg
mov
aas
aas
jns
dec
pop
aas
inc
aas
inc
aas
inc
push
mul
das
aas
inc
aas
inc
mov
movs
lods
dec
fs
push
fs
dec
dec
push
fs
push
dec
dec
dec
sbb
ret
fist
add
nop
add
nop
add
nop
push
push
push
or
xchg
sbb
aas
pop
loope
test
lock
nop
cmp
sbb
nop
add
div
clc
(bad)
jns
pop
nop
lock
cmp
and
cmp
lods
jnp
xchg
inc
cmp
ret
mov
mov
and
xchg
out
pop
inc
rep
or
push
xchg
xchg
jo
(bad)
je
xor
add
ja
add
and
retf
xor
jl
inc
push
nop
je
add
add
xchg
arpl
sbb
mov
enter
or
or
call
xchg
inc
push
in
fcomip
cmc
fs
push
fs
clc
add
cli
dec
pop
adc
inc
cs
inc
inc
cwde
sti
xchg
dec
inc
inc
pop
mov
add
sbb
add
nop
lods
scas
scas
mov
inc
mov
mov
repz
inc
int3
pop
inc
int
into
xchg
mov
inc
rol
repnz
rol
sar
nop
mov
(bad)
nop
add
nop
(bad)
loopne
nop
add
loope
jecxz
mov
and
and
xchg
xchg
inc
and
inc
and
jns
dec
inc
and
xchg
push
jmp
enter
sub
or
das
xor
or
xor
jmp
cmp
add
mov
and
pop
and
add
call
in
inc
int3
or
cmp
inc
dec
not
adc
mov
cmp
rol
(bad)
(bad)
adc
lahf
(bad)
ffreep
and
add
or
push
xchg
shl
and
push
xchg
add
add
or
aas
mov
dec
jo
repz
push
popf
and
bound
test
dec
or
adc
sub
sub
push
retf
add
mov
inc
sahf
pushf
int3
add
or
int
mov
xor
or
add
fdiv
jge
loop
dec
es
jbe
or
fmul
sbb
js
call
mov
pop
sub
jb
int
mov
jne
cmp
shr
or
adc
adc
pop
jle
xor
adc
es
fs
rcl
pop
fimul
fisttp
clc
(bad)
mov
fld
xchg
(bad)
or
inc
rcr
pushf
mov
and
dec
jae
push
outs
pop
lods
dec
cmp
jne
adc
(bad)
mov
push
mov
add
rol
ret
test
lods
add
lock
cmp
leave
nop
fidivr
mov
xor
pop
pushf
stc
and
dec
and
add
xchg
(bad)
enter
mov
pop
or
jmp
dec
mov
test
les
add
sbb
mov
adc
in
or
adc
in
loope
cmp
in
push
xor
sub
or
pop
dec
pop
sbb
(bad)
push
test
fisub
or
fistp
or
or
add
add
jmp
out
imul
mov
adc
enter
add
les
xchg
dec
fadd
adc
pop
loopne
push
push
dec
shr
adc
fs
pusha
dec
mov
push
push
sbb
gs
pop
cmp
les
push
data16
lods
xor
popa
or
scas
(bad)
cld
pop
ins
shl
sbb
inc
adc
add
inc
cmp
jl
jmp
jl
sbb
test
bound
push
mov
sbb
out
mov
(bad)
xor
and
es
pop
cmp
dec
add
jmp
xchg
mov
je
mov
and
ret
test
push
sbb
arpl
dec
mov
dec
shl
add
inc
cmps
dec
fnstcw
mov
sbb
add
movs
mov
popf
sbb
xlat
rcl
pop
push
ja
pop
xor
fsubr
dec
inc
sub
push
mov
cdq
dec
scas
adc
sbb
sbb
in
xchg
add
rol
xor
mov
sahf
xchg
sub
js
enter
add
jl
ins
(bad)
shl
sahf
xchg
inc
lock
lahf
and
es
inc
sub
push
push
daa
es
lds
and
and
mov
add
xchg
in
xchg
push
bnd
xchg
pop
sbb
addr16
sub
nop
iret
and
addr16
sub
addr16
sub
sub
add
sub
stos
(bad)
sbb
add
inc
sti
push
in
das
adc
or
fisub
stos
and
jmp
adc
test
movs
adc
mov
push
test
push
inc
dec
aas
jb
jg
push
mov
mov
rcr
xchg
xchg
xchg
push
and
jle
inc
sub
or
jge
inc
loopne
test
push
test
push
xor
mov
shr
lods
sub
int
dec
stos
dec
lods
dec
pop
ficomp
dec
dec
mov
mov
inc
pop
mov
pop
and
pop
push
sbb
mov
inc
out
in
mov
ja
dec
pop
mov
scas
cli
mov
mov
adc
loopne
pop
rcl
inc
jo
mov
ja
xor
loopne
jle
push
sahf
arpl
dec
adc
xchg
cmps
fild
je
(bad)
cld
repnz
fcmovu
mov
or
or
rcl
mov
and
mov
or
pop
xchg
addr16
je
push
mov
jl
inc
pusha
inc
xchg
jb
and
cmp
sbb
test
adc
xchg
mov
cmp
jo
mov
cs
inc
in
inc
inc
mov
addr16
(bad)
int
(bad)
test
mov
call
dec
adc
mov
aas
adc
cmp
push
in
xchg
cmp
aam
pop
(bad)
jnp
fmul
test
aas
cmps
loopne
call
in
cdq
rcr
jo
cmp
push
sbb
aas
int
and
sub
sub
xor
cld
(bad)
jnp
jb
add
xchg
adc
(bad)
lea
pop
or
adc
sub
inc
adc
into
(bad)
movlhps
inc
pop
push
dec
add
pop
call
jg
dec
repz
(bad)
xor
ret
dec
enter
sbb
loope
push
mov
jle
dec
jo
jo
nop
dec
outs
pop
sub
sub
in
enter
jne
inc
pop
or
je
sub
ret
xor
smsw
rcl
xchg
push
inc
sub
es
mov
aas
pop
push
dec
in
or
push
ret
mov
pushf
and
xor
push
fs
cmp
leave
(bad)
lock
mov
dec
push
repnz
inc
test
cdq
cwde
cwde
push
cdq
in
sbb
sbb
inc
push
xchg
pushf
pushf
add
add
xchg
dec
call
push
cdq
dec
sub
sbb
inc
dec
push
push
mov
test
inc
pusha
sar
cld
jnp
adc
xchg
push
hlt
xor
mov
xchg
xchg
mov
aas
popf
mov
adc
mov
adc
repnz
retf
jl
add
das
pop
jns
mov
inc
mov
repnz
jle
aam
aam
cmp
pop
mov
enter
pushf
and
(bad)
repnz
xchg
(bad)
movs
xor
iret
int3
test
ja
test
mov
xor
adc
xchg
xchg
mov
sub
or
cmp
into
shl
or
ret
mov
xchg
mov
aam
shl
call
inc
call
and
fcomp
loopne
daa
xchg
sbb
call
xor
dec
xor
int
jno
in
mov
push
cmp
lock
clc
nop
adc
retf
mov
lea
xchg
rcl
xchg
add
das
jg
xchg
mov
addr16
lods
pop
mov
adc
sbb
inc
sahf
stos
jo
inc
mov
sbb
test
xchg
call
and
test
jo
pop
inc
sub
cmp
adc
rcl
cmp
xchg
xchg
inc
int3
daa
inc
xchg
(bad)
dec
ror
adc
test
push
mov
fdiv
mov
enter
mov
cwde
mov
push
sahf
inc
jbe
dec
and
jo
add
inc
lock
ja
ja
aad
dec
cld
adc
popf
js
(bad)
int
jnp
jns
iret
inc
jp
jns
inc
js
ds
int
ror
dec
ror
aad
inc
movs
nop
pop
pop
ret
call
adc
jl
imul
push
test
in
inc
daa
mov
mov
repnz
or
cwde
mov
or
adc
aam
adc
cmp
dec
aas
ja
ja
inc
pushf
push
jb
add
movs
inc
test
in
inc
inc
lods
inc
scas
inc
pushf
and
leave
and
hlt
pushf
pop
dec
scas
fcomip
lock
mov
in
rcl
mov
mov
stc
mov
dec
or
or
mov
pop
add
adc
jg
mov
xchg
pop
call
nop
xor
add
int3
adc
mov
jns
rcl
xor
push
sbb
adc
leave
retf
xchg
out
call
fsub
repnz
fadd
inc
in
lds
aam
fucomip
push
adc
in
enter
push
xchg
ja
adc
pop
mov
ror
fldcw
lahf
push
adc
rol
push
or
adc
daa
dec
pop
pop
dec
sbb
dec
and
mov
(bad)
dec
xor
in
dec
dec
xor
in
imul
lods
lods
lods
dec
sub
dec
sub
retf
add
dec
sub
or
inc
dec
xor
adc
dec
mov
cmp
sahf
sahf
cmps
sbb
mov
mov
or
dec
icebp
dec
dec
aas
enter
mov
enter
fsub
fdiv
in
cmp
sub
dec
pop
dec
sahf
cmp
dec
pop
dec
pusha
dec
fs
push
call
sbb
test
js
ja
ret
dec
jl
sub
mov
cmp
jno
mov
cwde
cdq
in
inc
pushf
mov
rcr
xor
test
adc
movs
dec
sub
sub
or
xchg
test
aam
out
mov
cmps
pop
loopne
sub
loopne
leave
xor
sbb
sbb
add
add
sbb
sbb
add
rcr
mov
sbb
inc
add
or
stos
dec
add
xor
add
add
pop
inc
mov
or
or
add
jne
add
mov
and
pop
ret
sbb
adc
retf
ds
dec
or
loop
or
sbb
loop
lods
xor
push
sub
mov
push
gs
gs
dec
adc
adc
dec
xor
mov
loopne
adc
xchg
xor
adc
aam
ret
xor
jmp
lea
icebp
out
jae
gs
fcom
in
or
or
fcom
gs
rol
inc
in
push
fld
daa
or
cmp
aad
sbb
sti
add
jmp
adc
inc
popa
movs
add
pop
sbb
push
retf
dec
add
pushf
(bad)
js
sub
cwde
daa
imul
aam
dec
sbb
add
adc
jp
js
mov
ss
in
add
ja
dec
sahf
not
add
sbb
sub
or
iret
out
jbe
test
stc
inc
xchg
cmp
ja
add
outs
adc
dec
fmulp
mov
or
dec
push
mov
repz
mov
mov
pop
les
out
in
outs
xchg
les
ret
inc
mov
xchg
inc
fadd
test
sub
mov
sbb
and
or
pop
adc
inc
cwde
or
cmps
xor
pop
stos
xor
sbb
inc
add
or
cmp
lods
inc
inc
test
bsr
pop
adc
adc
mov
sub
dec
movs
repnz
mov
adc
adc
adc
mov
test
(bad)
mov
(bad)
ret
or
(bad)
dec
movs
shl
rcr
aam
imul
sub
cmp
mov
sbb
mov
adc
lahf
stos
dec
push
cmp
fld
and
lods
dec
xor
test
mov
test
movs
rcl
(bad)
mov
aad
cwde
mov
xchg
sub
aaa
mov
mov
rcl
das
inc
and
add
fwait
mov
pop
mov
inc
aaa
dec
rcl
sbb
dec
(bad)
sbb
mov
or
lods
push
ret
lods
pop
adc
add
loopne
sahf
xadd
stos
mov
jg
xchg
or
and
int
bound
xor
sub
push
mov
ret
mov
imul
xchg
and
adc
xchg
rcr
loop
and
loop
mov
nop
xchg
or
enter
cs
fmulp
mov
xor
lea
cs
add
rcl
mov
mov
push
rcl
mov
lock
fdivr
cmp
or
repz
inc
mov
int3
fisub
xchg
fs
push
repnz
mov
pop
dec
cs
push
repnz
xchg
fwait
jb
xchg
mov
imul
js
or
adc
leave
mov
mov
ss
retf
jne
lods
test
xor
lea
mov
or
int3
sar
mov
lahf
and
pop
add
or
leave
xchg
push
(bad)
adc
xor
das
sahf
ficom
adc
ret
xchg
pop
add
fdivr
nop
loop
ss
xchg
mov
inc
call
and
in
push
popa
sub
inc
das
mov
inc
arpl
add
mov
xchg
jmp
adc
inc
pop
pop
adc
pop
mov
cmp
retf
ror
(bad)
mov
sub
imul
rol
aaa
mov
cmp
jo
(bad)
je
and
push
or
add
test
add
xchg
mov
or
jae
inc
retf
add
cmp
mov
test
add
dec
cmps
mov
dec
in
push
sub
push
addr16
clc
dec
jbe
dec
ja
repnz
sahf
sub
call
xchg
inc
jmp
call
xchg
cdq
xlat
sti
test
jo
inc
add
jno
(bad)
ins
fidivr
ja
or
fstp
jns
or
jns
enter
sbb
int
js
inc
mov
ds
push
jmp
pop
inc
mov
or
cdq
in
sbb
fs
int3
ins
xor
adc
sbb
mov
(bad)
cld
in
call
jl
in
test
lea
lock
icebp
shr
hlt
fldlg2
dec
sub
call
lahf
nop
loopne
mov
xchg
out
enter
mov
loopne
out
pushf
cmp
loopne
xchg
jg
retf
and
xchg
aam
adc
pop
sbb
fadd
cmp
cwde
cwde
sbb
out
pop
pushf
enter
xchg
jb
pop
pushf
clc
adc
inc
pop
pushf
lods
adc
movs
repnz
test
pop
call
mov
lods
adc
ret
push
fld
imul
ins
sub
inc
sbb
ins
mov
sbb
adc
and
inc
ins
mov
pop
mov
mov
push
mov
xlat
pop
nop
pop
shl
adc
scas
jge
mul
pop
and
test
mov
xchg
out
xchg
pop
and
sbb
xor
pop
sub
xchg
xor
lock
loopne
mov
js
mov
je
loope
xchg
mov
xor
daa
sub
inc
push
push
test
test
and
or
xor
xor
xchg
test
push
and
test
add
fstp
pop
(bad)
aam
call
xchg
sub
add
sbb
add
push
and
pop
or
sbb
inc
mov
push
xchg
mov
cmp
adc
dec
inc
adc
verr
sbb
adc
adc
sbb
mov
or
sub
or
or
gs
xchg
jmp
sbb
and
dec
cmp
pop
in
push
pop
lea
les
outs
hlt
dec
mov
ret
mov
mov
inc
inc
add
xor
sbb
movs
mov
fst
and
ins
sub
test
lahf
div
out
movs
cs
fsubr
je
ins
(bad)
retf
and
pop
loop
pop
and
and
(bad)
mov
lock
das
or
outs
call
xchg
mov
test
sub
lea
js
xor
xchg
mov
fsubr
iret
leave
test
mov
pushf
bound
ffreep
xor
iret
xor
and
mov
cmp
loop
inc
sub
xor
test
jle
or
inc
push
cmp
mov
cmp
aaa
sbb
dec
fwait
cmp
inc
cwde
das
cmp
dec
std
xchg
out
rcl
nop
ds
aas
push
enter
cmp
inc
pop
fdiv
fs
jne
or
pop
xchg
nop
or
mov
push
sub
les
adc
add
shl
sub
cmp
cmp
jl
xchg
and
call
in
sub
repnz
invd
sar
or
repnz
xchg
in
dec
call
mov
aam
dec
xlat
dec
arpl
push
adc
push
cmp
inc
pop
inc
jne
test
xchg
inc
pop
mov
inc
mov
inc
iret
inc
or
mov
popa
ds
mov
mov
mov
cmp
cmp
or
mov
icebp
adc
mov
mov
nop
push
rcl
dec
mov
and
cs
sub
and
add
mov
test
sbb
mov
sub
or
mov
test
push
jne
(bad)
or
push
jo
and
inc
inc
xchg
and
out
add
test
sbb
inc
cs
pushf
fdivr
mov
repz
mov
test
mov
pop
sahf
xchg
lea
pop
inc
adc
jmp
cmpxchg
mov
mov
fnsave
mov
repnz
mov
mov
call
sbb
shl
xor
inc
call
mov
mov
push
call
(bad)
cdq
mov
nop
mov
int3
(bad)
sub
nop
xchg
mov
cmc
mov
mov
xchg
sub
push
push
push
add
jns
add
mov
(bad)
add
lahf
clc
mov
cld
mov
leave
xchg
xchg
mov
dec
add
or
pop
inc
mov
or
cwde
(bad)
fucomp
cdq
test
mov
adc
mov
shr
mov
test
cmp
or
lods
jl
cmp
ja
adc
xchg
dec
dec
and
pop
mov
xchg
loop
adc
(bad)
adc
or
push
ss
dec
sbb
add
sub
sbb
nop
outs
in
jg
jl
xor
loopne
out
mov
jg
and
scas
dec
xor
aam
mov
je
xor
dec
dec
xchg
scas
sbb
adc
enter
push
cmp
movs
xor
psubsb
pop
sahf
pop
xchg
aaa
jo
pop
int
loop
in
pop
dec
pusha
dec
lods
cdq
sar
or
fistp
adc
retf
inc
and
pop
shl
xchg
pop
(bad)
cwde
popa
mov
and
add
xchg
dec
leave
out
jg
mov
add
dec
mov
sub
int3
push
xchg
xchg
push
push
mov
mov
jns
and
mov
xchg
dec
dec
les
stos
jl
int3
jg
lods
jg
stos
out
fs
dec
imul
dec
aam
enter
fsub
cmp
xchg
push
dec
rcl
push
jo
xchg
xchg
or
or
cmps
push
in
test
test
cs
push
inc
hlt
mov
in
clc
cld
dec
add
enter
or
xchg
push
retf
dec
adc
rcl
fist
lahf
push
aad
xor
ja
lahf
dec
sbb
sbb
adc
or
leave
push
mov
mov
sbb
inc
mov
lahf
dec
xor
fcom
fild
test
enter
leave
xor
mov
cmp
and
dec
inc
dec
inc
dec
dec
push
or
fcomp
push
fdiv
push
mov
dec
cmp
push
xchg
mov
sub
pop
push
fmulp
stos
xchg
xchg
scas
movs
bnd
cld
and
and
mov
mov
test
mov
pop
mov
sar
or
add
mov
mov
add
jbe
in
xchg
jbe
dec
and
add
xchg
and
sub
dec
es
sub
ret
mov
mov
not
jnp
xchg
cdq
shl
popf
sbb
fmul
xchg
sbb
les
fwait
inc
xchg
add
sahf
out
add
pop
int3
out
add
out
sbb
out
sbb
in
repnz
pusha
test
push
stos
repnz
aam
or
push
adc
jge
(bad)
mov
inc
fsubr
or
mov
or
push
sahf
jl
adc
dec
pushf
dec
popf
fnstcw
dec
sahf
dec
mov
daa
xchg
data16
mov
or
or
mov
xchg
inc
ret
xchg
in
pop
stc
scas
pop
retf
shr
or
movs
and
or
test
stos
jl
dec
mov
retf
and
and
pop
test
js
jl
and
je
in
mov
mov
xor
jb
xchg
mov
or
jmp
mov
adc
push
push
packsswb
and
push
loopne
dec
sub
pop
and
call
xchg
dec
in
push
fcom
sub
jns
xchg
dec
imul
sbb
test
sar
jmp
push
sbb
adc
dec
movs
mov
jl
sti
sbb
xchg
and
sbb
mov
aad
pop
and
push
lods
stos
cs
es
xor
mov
call
push
sub
sub
and
pop
inc
es
movs
mov
(bad)
push
xor
das
xor
cmp
(bad)
xor
xor
jmp
aam
xchg
jae
dec
mov
lds
ss
cmp
push
cmp
cmp
cmp
test
pop
cmp
fs
loopne
and
sbb
mov
lods
add
xor
inc
ror
dec
ss
cs
in
or
sbb
test
and
push
add
aad
jmp
push
push
or
ret
push
call
xchg
movs
dec
in
xchg
test
lods
dec
mov
mov
xor
push
js
inc
(bad)
jge
adc
push
inc
or
mov
push
dec
dec
ror
or
pop
jg
xchg
pop
add
mov
enter
rcr
in
dec
aam
fmul
dec
enter
inc
push
push
movs
xor
sbb
inc
push
call
cmp
xchg
jbe
jbe
xchg
inc
push
test
fmul
xor
hlt
and
xchg
inc
xchg
sete
fisttp
mov
(bad)
dec
or
dec
adc
int3
inc
jb
adc
fbld
movs
call
lahf
enter
rcl
test
and
xor
pop
popa
or
pop
mov
push
int3
test
xor
inc
add
rol
cmps
sar
xor
xor
push
loopne
aaa
jb
and
jnp
sub
data16
in
stos
fadd
iret
dec
adc
jb
fsub
dec
or
cmp
into
lods
int3
in
mov
add
imul
sar
push
mov
lods
fwait
lock
in
pop
sub
push
mov
or
jl
mov
and
sbb
stos
jo
add
repz
scas
mov
sbb
sub
add
pop
push
and
push
das
add
and
test
inc
(bad)
jae
mov
cmp
(bad)
pop
dec
in
ss
ret
sbb
enter
push
or
aad
mov
pop
jecxz
aam
aas
lods
call
ret
dec
xlat
push
pop
call
sub
pop
or
dec
aam
or
and
in
push
leave
add
jo
sub
fcom
fdivr
push
repnz
std
loopne
push
leave
stos
in
std
int3
std
les
add
aam
mov
loopne
adc
fcom
pop
pushf
or
leave
int3
sbb
sbb
sbb
jns
popa
mov
sbb
xchg
sub
cmp
pop
add
push
mov
nop
add
and
xlat
xchg
xor
xchg
inc
fst
std
xchg
and
and
jbe
mov
pop
(bad)
sti
cmp
cmp
scas
lods
mov
scas
es
inc
mov
lods
cmps
mov
scas
sbb
push
mov
scas
mov
das
pop
lea
mov
xchg
xchg
fs
mov
nop
xchg
les
ja
mov
mov
js
adc
mov
adc
lahf
pushf
nop
dec
jae
dec
fdiv
jecxz
jg
push
xchg
adc
xor
test
lahf
dec
and
inc
push
and
ret
lahf
lods
xchg
inc
sahf
fcom
cmps
test
sub
xchg
mov
cmp
cwde
nop
cmp
pushf
test
loope
mov
xchg
sbb
adc
xchg
mov
mov
mov
loop
mov
dec
nop
and
inc
mov
mov
lods
aas
adc
aas
fdiv
and
pop
xor
adc
fs
gs
sbb
cmp
mov
lock
xchg
pop
movs
cld
(bad)
(bad)
popf
sar
aas
pop
jmp
les
jbe
jbe
mov
mov
mov
repz
ror
ror
ror
dec
loop
call
push
inc
sahf
dec
in
push
push
push
push
(bad)
in
je
enter
and
clc
mov
es
lahf
in
adc
lock
jg
daa
inc
rcl
(bad)
les
out
cmp
push
add
stos
adc
sub
push
add
mov
mov
add
lock
dec
add
test
and
int
scas
jno
ss
add
leave
and
xchg
xchg
iret
in
rol
lock
cwde
push
xor
push
inc
mov
mov
dec
push
mov
jge
fisttp
fstp
mov
(bad)
jnp
add
jne
xchg
leave
inc
and
pushf
sbb
leave
add
jns
jmp
push
test
fnstsw
bnd
test
or
mov
dec
adc
mov
sbb
and
mov
cli
add
inc
xchg
or
or
shr
enter
test
popa
out
pop
cs
inc
rcl
adc
leave
xchg
daa
push
sbb
push
and
and
sub
push
xor
xchg
daa
dec
push
xor
cmp
cmp
repnz
inc
push
inc
push
dec
push
dec
cmp
dec
sahf
push
push
push
push
push
adc
test
fistp
adc
ret
outs
push
pop
cmps
jns
adc
lahf
pop
clc
or
in
xchg
clc
mov
in
cmp
push
inc
mov
cmps
nop
nop
lea
xchg
nop
mov
aas
bnd
xchg
xchg
jl
test
xchg
cmp
mov
mov
(bad)
mov
ret
sbb
push
mov
hlt
pop
push
(bad)
scas
or
retf
sub
jbe
push
cmp
or
dec
popf
fld
call
sub
loop
js
repnz
bound
push
xor
rol
cmp
iret
loop
xor
add
sbb
sbb
add
add
loope
loop
in
in
jecxz
in
mov
in
push
inc
push
in
pop
call
fs
in
out
out
push
push
fs
lock
call
push
pop
push
pop
xchg
xchg
mov
pop
push
pusha
test
repnz
popa
push
bound
mov
cmps
pop
loop
fs
sar
push
sub
or
ins
outs
inc
sub
sbb
jbe
sbb
add
nop
jns
jnp
pop
dec
in
je
xor
add
add
test
mov
mov
mov
push
xchg
xchg
xchg
sbb
xchg
inc
xchg
mov
or
loope
enter
jecxz
in
fld
loopne
(bad)
and
push
or
xchg
mov
push
adc
push
push
adc
sbb
add
nop
pop
sbb
sbb
adc
enter
sbb
or
jg
and
jns
dec
push
and
push
and
mov
push
fs
push
sub
sub
fs
sub
fs
push
fs
xor
jb
xor
pop
repnz
xchg
push
xor
das
jns
dec
push
cmp
push
cmp
and
xor
add
inc
inc
xor
add
inc
inc
inc
add
and
inc
inc
inc
push
nop
retf
inc
dec
inc
push
fs
dec
dec
fs
push
fs
push
push
cmp
push
push
push
or
add
pop
pop
or
pop
pop
enter
pop
pop
pop
inc
sub
sbb
add
nop
add
nop
add
nop
imul
ins
shl
add
rol
add
and
(bad)
(bad)
jmp
rcl
out
cs
add
out
lock
in
mov
hlt
push
fs
push
cmc
div
inc
push
fs
clc
stc
shl
cli
hlt
cld
jg
or
(bad)
jmp
and
push
add
icebp
xchg
xchg
mov
push
add
jg
push
adc
adc
push
push
push
pop
push
sbb
sbb
push
push
cwde
jnp
sbb
mov
push
fs
and
fs
push
and
es
sub
add
sub
or
cs
enter
xor
xor
xchg
xor
sbb
cmp
sbb
add
nop
cmp
dec
in
cmp
leave
and
push
and
pop
jb
push
push
xlat
sbb
mov
xchg
or
mov
mov
xor
dec
fstp
add
nop
add
ret
sbb
adc
mov
push
test
dec
pop
repnz
test
xchg
and
push
mov
xchg
xchg
mov
push
lea
xchg
mov
fadd
inc
mov
cli
dec
pop
inc
xor
(bad)
jbe
push
sub
dec
adc
clc
cmp
jbe
mov
mov
jge
sti
jne
or
dec
fstp
jnp
sub
mov
dec
les
push
imul
mov
jb
inc
dec
cld
cmp
sahf
sar
test
jnp
push
push
out
add
dec
push
scas
or
cmp
ret
js
stos
dec
jecxz
inc
cmp
les
in
or
add
loop
cmp
clc
xor
mov
(bad)
mov
push
sti
adc
jp
pop
cmp
sti
in
out
lods
call
clc
push
push
jecxz
inc
dec
pusha
cmp
dec
mov
cmp
sub
mov
sbb
push
call
mov
mov
mov
adc
ret
dec
fwait
mov
mov
pop
jg
ss
add
pusha
push
add
ror
jae
adc
hlt
ficom
retf
ret
jns
cld
mov
ins
imul
jae
sub
dec
jmp
and
push
mov
cmp
xor
pop
ins
and
lock
icebp
or
push
dec
mov
or
mov
xor
stos
push
mov
lock
pop
(bad)
int3
enter
add
dec
or
add
call
sbb
jo
not
push
inc
adc
or
dec
rol
pop
xor
dec
push
or
sti
cmp
(bad)
shl
retf
sub
xor
add
fs
loop
retf
clc
add
sub
leave
sti
es
adc
or
fs
jb
dec
sub
mov
test
call
popa
bound
fld
dec
jmp
movs
iret
shl
aas
add
(bad)
or
inc
scas
mov
or
and
jb
mov
add
aad
imul
or
shr
enter
mov
mov
pcmpeqd
jle
dec
add
push
or
and
adc
and
inc
pop
cmp
out
neg
cmp
add
dec
inc
inc
jne
inc
mov
dec
dec
or
int3
sbb
or
and
outs
dec
pop
dec
mov
cmp
loop
pop
retf
cmp
sub
and
nop
or
or
or
cld
out
ret
jns
clc
mov
sbb
retf
shl
mov
leave
fldenv
add
repz
mov
mov
and
push
movs
xchg
in
hlt
mov
fimul
sbb
idiv
retf
pop
adc
enter
push
rcpps
lock
in
sbb
sub
xchg
inc
in
push
push
mov
sbb
ja
inc
jae
add
cmp
jb
mov
and
add
add
push
loopne
mov
mov
sbb
stos
add
lods
dec
test
ror
(bad)
jmp
pushf
push
xchg
ret
lods
stos
or
push
sahf
xchg
xchg
dec
ficomp
nop
cmp
adc
pop
cmps
popf
or
mov
sbb
out
or
inc
leave
dec
mov
cmps
dec
push
addr16
sbb
jne
iret
xor
lods
loope
dec
or
loopne
ins
clc
inc
dec
imul
sbb
cmps
xchg
add
(bad)
icebp
fs
add
cs
cmp
dec
and
sbb
pop
push
add
mov
shl
mov
lds
arpl
les
push
jmp
std
add
(bad)
pop
jmp
cmp
jbe
mov
scas
fs
or
les
sbb
cmp
je
call
jae
stc
sub
mov
add
jne
jo
lods
add
imul
or
ins
ss
test
cli
(bad)
in
push
enter
data16
retfw
add
adc
adc
cmp
cmp
add
or
adc
pop
dec
and
dec
adc
or
jnp
ds
sub
rol
in
jl
xor
inc
cmp
retf
pop
sbb
and
jl
mov
push
inc
xor
aas
push
test
inc
jle
mov
cmp
imul
push
xor
cmps
push
ins
addr16
and
dec
mov
and
or
out
test
push
pop
xchg
and
and
lahf
pusha
in
mov
push
adc
or
ret
push
sub
xor
rol
fmul
cmp
xor
ret
fdiv
xchg
hlt
(bad)
xor
jns
ror
push
lock
or
retf
add
dec
and
test
cwde
push
loope
aam
push
cmp
add
cmp
mov
push
hlt
mov
adc
sub
ja
mov
add
fs
(bad)
aaa
std
cmp
and
pop
and
shr
sub
lods
add
or
add
ror
into
(bad)
mov
push
js
clc
mov
sub
jo
aad
push
push
mov
rcl
stc
test
dec
fistp
scas
add
add
pop
ja
xor
leave
and
adc
sbb
and
rol
addr16
inc
mov
not
aaa
mov
and
add
push
pop
xchg
mov
xchg
mov
sahf
and
fadd
fisub
push
adc
inc
xchg
rol
and
test
loopne
jae
dec
test
add
cmp
rol
sahf
pop
push
cmp
inc
dec
or
inc
dec
xor
add
lock
mov
xor
loopne
ror
movs
push
adc
fdecstp
outs
cmp
jne
push
scas
shl
push
retf
push
jo
cwde
dec
pop
mov
retf
pop
gs
call
aad
not
add
push
in
ins
ret
push
loopne
push
pop
enter
cmp
and
lock
out
xchg
add
ficomp
rol
xchg
jmp
(bad)
fisttp
and
pop
into
push
push
fwait
mov
adc
(bad)
jns
pop
mov
les
clc
test
or
sub
push
retf
dec
(bad)
xor
out
stos
(bad)
push
mov
push
lods
or
add
aam
js
push
shr
pusha
cmp
or
mov
add
push
adc
daa
out
adc
lea
xchg
loopne
push
or
sbb
sti
mov
fdiv
mov
in
and
and
push
or
mov
xor
add
(bad)
cmp
jb
rcr
xchg
aam
and
les
sbb
adc
ret
mov
dec
or
cld
in
or
into
sahf
mov
rol
and
pop
cmp
pop
or
add
ret
mov
sub
add
cmc
sbb
mov
push
aad
(bad)
in
pop
jbe
and
lea
dec
add
loope
fs
cmp
jae
xchg
lock
cmp
mov
adc
ret
shl
inc
adc
xchg
call
dec
repnz
xchg
cdq
mov
pop
adc
lea
cs
pop
loop
adc
dec
cmp
pusha
(bad)
pop
xor
pop
sub
xor
cmp
adc
clc
pop
imul
add
loopne
rcr
pop
dec
rcl
sbb
in
inc
or
movs
ret
xor
lods
add
js
sbb
add
adc
pop
cld
popa
inc
add
or
xchg
ror
das
xchg
inc
jmp
hlt
mov
sub
int
jmp
xor
icebp
inc
test
stos
inc
inc
add
mov
imul
ins
push
add
adc
jecxz
imul
rol
fmul
mov
inc
dec
imul
(bad)
mov
push
fcom
aam
adc
xchg
cmp
pop
int3
test
xchg
xor
cmp
push
popa
or
adc
xchg
sub
fsub
inc
pop
push
jl
xor
ret
mov
shl
adc
cld
or
sub
mov
mov
mov
adc
hlt
test
nop
mov
xchg
cmps
xchg
inc
sub
or
rol
xchg
test
push
push
xor
lds
cs
stc
add
hlt
jl
adc
adc
sub
jge
mov
not
sub
jl
xchg
push
jmp
push
lods
into
bound
mov
pop
and
std
imul
jmp
dec
sub
or
ret
inc
push
sbb
jne
pop
cmp
mov
or
pop
mov
sbb
shl
or
pop
daa
sub
cmp
lds
mov
test
test
std
jne
pop
or
retf
push
xor
inc
sbb
inc
or
inc
fsubrp
lods
popa
and
and
push
cmps
pop
cmp
add
push
enter
or
or
pop
or
jnp
sbb
(bad)
outs
fdivr
dec
xor
dec
dec
imul
push
push
inc
test
push
fnstcw
das
add
jbe
into
jmp
int
mov
test
popa
shl
cmp
fnstcw
aam
clts
sub
pop
xor
jle
add
sbb
sub
mov
jno
mov
xchg
sub
push
add
movs
sbb
outs
sbb
rcl
dec
mov
push
or
sub
mov
bound
and
popa
push
and
dec
(bad)
dec
and
cmp
add
xchg
mov
icebp
lea
jne
add
rol
call
fmul
mov
test
pop
add
jmp
dec
retf
dec
fimul
inc
lea
cmp
cmp
or
lahf
arpl
adc
pop
xchg
setl
cld
cmp
je
mov
shl
cmp
push
scas
pcmpeqd
shl
or
aaa
in
movs
xchg
je
mov
dec
jne
(bad)
and
add
xchg
test
cmp
fucomip
rcl
pop
sahf
js
(bad)
mov
fiadd
sahf
pusha
dec
or
add
cmps
fstp
add
inc
test
outs
dec
dec
xchg
sub
je
pop
ins
mov
or
ret
add
mov
pop
mov
mov
jb
inc
push
or
sbb
addr16
test
adc
cmp
sbb
jb
dec
cmp
or
(bad)
sub
out
xlat
dec
jmp
dec
mov
pop
pop
std
dec
jg
inc
loopne
dec
xchg
lea
push
mov
jp
cli
rol
aad
mov
das
jmp
mov
les
jnp
adc
lea
push
fadd
fisttp
inc
lea
jg
mov
sti
loopne
mov
call
mov
and
arpl
shl
das
jbe
mov
ins
sbb
mov
sbb
aas
leave
shl
mov
addr16
jle
dec
dec
sub
and
cs
mov
adc
add
mov
dec
jb
sbb
lods
loop
loop
stos
loop
pop
mov
rol
adc
mov
daa
sar
ret
push
xchg
test
or
dec
mov
xor
mov
mov
shr
adc
(bad)
imul
icebp
mov
prefetch
inc
sub
ror
outs
cmp
xchg
or
test
fst
outs
ret
ins
jp
or
jge
test
or
cmc
jnp
jb
(bad)
pop
shr
imul
popf
inc
jno
leave
cmp
out
pusha
aaa
lock
jb
xchg
not
or
push
jl
je
je
pop
fwait
add
inc
shl
push
imul
sub
jae
add
jo
mov
aad
nop
std
dec
mov
add
dec
repnz
jg
mov
je
xor
shr
push
jne
sbb
mov
and
repz
ret
cmp
je
push
fidiv
jno
hlt
(bad)
or
fisttp
test
push
movs
pusha
mov
add
add
mov
pop
out
in
ins
sti
xor
add
mov
fild
sub
loop
push
push
fisub
test
add
ds
(bad)
jne
lea
outs
fs
sub
mov
test
lods
adc
push
inc
ds
aas
rcr
iret
and
mov
movs
xor
inc
cmp
data16
sub
pop
dec
sub
dec
adc
push
push
lock
movs
xchg
adc
out
lock
std
retf
and
mov
call
cmp
mov
jo
repz
pop
adc
sub
xchg
xor
mov
cwde
xchg
sub
mov
or
add
cmp
cmp
jmp
loopne
je
sbb
push
push
sti
out
push
jbe
mov
sti
jne
pop
in
popa
inc
cmp
push
or
cmp
shl
sbb
aam
adc
clc
movs
add
cmps
mov
and
add
sbb
mov
push
jmp
cmp
jo
hlt
sbb
sar
push
sub
xlat
dec
hlt
jmp
mov
adc
clc
adc
and
or
jmp
jo
pop
inc
jl
add
or
inc
jb
mov
and
test
imul
retf
ins
sbb
jne
or
repnz
inc
mov
add
imul
retf
and
pop
sub
ins
xchg
popa
inc
movs
retf
push
jp
sbb
cmp
push
sbb
jecxz
and
arpl
repz
(bad)
pop
xchg
sar
sbb
inc
dec
loopne
in
loopne
adc
sbb
test
mov
xchg
(bad)
add
rol
rcr
aam
call
ror
enter
lods
sbb
sbb
loop
jb
mov
call
sub
js
retf
push
push
push
sub
pop
(bad)
ss
pop
cmp
sub
sub
add
push
fist
cli
jp
loop
cmp
jbe
sub
push
test
rcl
inc
cld
or
lahf
ins
inc
ss
dec
sub
dec
jne
jmp
(bad)
jbe
xor
or
mov
add
imul
add
sub
mov
imul
imul
xchg
mov
inc
mov
hlt
jmp
clc
or
or
ret
inc
jo
push
retf
fadd
sbb
xchg
aam
fnstenv
loopne
sub
fwait
pop
mov
xor
fstp
sub
mov
inc
pop
or
or
sub
jnp
stos
ret
pusha
add
xchg
mov
stos
jge
dec
scas
pop
sahf
xchg
test
loopne
push
mov
mov
push
push
sahf
shl
outs
shr
adc
mov
fmulp
jne
push
not
xor
retf
outs
pop
hlt
fiadd
push
call
js
jb
bound
add
mov
add
sub
add
inc
push
add
nop
add
add
inc
dec
or
dec
add
add
and
rol
mov
retf
bound
enter
inc
sub
pop
adc
and
add
mov
jbe
imul
inc
mov
sbb
shl
adc
sub
mov
rol
retf
xor
xor
pop
icebp
scas
fimul
xor
fdivr
xor
shr
mov
mov
push
imul
mov
mov
xchg
inc
aaa
sbb
and
cli
push
adc
movzx
shr
add
add
mov
adc
sub
ret
cmp
mov
adc
ss
movs
dec
lahf
push
(bad)
(bad)
ret
ficom
push
push
or
add
lar
add
push
xchg
xchg
xchg
xchg
pop
or
or
or
push
jo
ficom
dec
cwde
ja
in
add
push
add
inc
xor
es
ds
fs
fimul
ins
sldt
and
(bad)
xchg
es
cli
cld
jp
(bad)
pop
shl
pop
or
sub
and
push
ds
pop
xchg
or
fcmovne
(bad)
fild
or
or
adc
push
ror
dec
adc
or
dec
or
or
adc
push
sbb
jb
into
cmp
mov
pop
ret
and
or
inc
dec
pop
div
ss
das
push
dec
pop
js
je
es
dec
ja
pop
or
pop
adc
xchg
mov
std
xor
add
xchg
sar
jle
jne
add
pop
jmp
pop
and
mov
rcr
sbb
(bad)
je
mov
cdq
(bad)
mov
mov
push
mov
mov
jae
adc
push
mov
shl
push
mov
mov
mov
push
inc
pop
and
sub
mov
sbb
call
test
call
das
cmp
loop
add
add
fdivr
or
or
pop
movs
push
add
and
dec
sbb
and
ret
jmp
clc
inc
and
xor
cmp
je
cli
mov
jo
ret
js
js
add
add
xchg
out
ror
call
mov
jbe
dec
adc
mov
fist
frstor
enter
lods
rol
pusha
test
outs
pop
add
jne
movs
or
test
mov
or
(bad)
push
js
or
int3
pop
and
dec
shl
ins
add
dec
imul
push
test
xchg
jno
fild
pop
cmp
bound
mov
pusha
xor
mov
xchg
(bad)
rcr
je
shl
mov
test
test
add
pop
scas
pop
or
call
add
mov
cmp
add
add
mov
mov
je
push
dec
inc
loop
mov
and
cmp
xchg
jg
cdq
inc
fsub
cmps
sbb
add
push
mov
jbe
or
or
out
push
int3
out
lea
out
push
inc
inc
shl
test
adc
xor
add
xlat
pusha
mov
sahf
lahf
ret
fild
stos
inc
rol
cmp
pop
ror
mov
add
nop
sahf
addr16
and
push
out
call
ins
out
jns
loopne
leave
push
out
pusha
dec
js
iret
lea
pop
push
ss
iret
fld
pop
jo
xchg
inc
adc
and
aam
sbb
or
es
push
xor
enter
in
push
xchg
ret
or
hlt
xor
pop
add
mov
mov
call
sar
ja
inc
pop
dec
xor
pop
add
inc
movs
pop
in
repz
sbb
xchg
cmc
xchg
fadd
adc
xor
add
call
jo
div
jle
mov
lea
fadd
mov
sbb
push
pusha
push
xor
jp
add
pop
fbstp
(bad)
push
scas
inc
call
int
loopne
es
jne
jmp
sbb
cmp
sbb
clc
mov
int3
and
lea
and
ins
mov
sbb
shl
dec
add
loope
pop
mov
lea
ror
adc
cmp
add
xchg
dec
sbb
jmp
push
push
(bad)
popf
push
dec
sbb
fisttp
into
and
pop
lea
in
jo
lea
dec
cmp
cdq
in
xchg
xchg
sub
retf
stos
cmps
inc
jnp
sub
cmp
jp
inc
jnp
cmp
adc
jns
inc
loopne
inc
xor
je
aaa
sub
mov
mov
sub
inc
js
jp
and
aad
mov
ret
stos
jecxz
add
xor
rol
mov
inc
add
retf
sti
das
js
add
test
hlt
or
pop
pusha
mov
xor
and
jg
add
jmp
nop
idiv
add
hlt
mov
sbb
cmp
ja
mov
sub
rol
fnstsw
sti
lods
jbe
mov
or
fcomp
dec
xchg
add
push
mov
and
add
je
sub
repnz
push
inc
call
sub
mov
sbb
shr
mov
adc
pusha
dec
sbb
push
lahf
repz
cs
repz
std
xor
xor
lock
cmp
(bad)
outs
sbb
cmp
push
or
add
push
(bad)
movs
ins
pop
jns
jmp
add
sub
lock
fs
push
outs
lods
cmp
into
sbb
adc
adc
(bad)
push
pop
ss
push
push
and
xchg
retf
jl
pop
daa
xchg
jmp
jl
inc
push
or
sbb
cmp
sbb
sbb
xchg
inc
ret
push
push
or
inc
adc
cmp
mov
adc
pop
leave
xchg
mov
sub
push
ins
dec
lock
sbb
(bad)
das
sub
cmp
adc
outs
out
lock
push
jo
xor
nop
je
mov
sbb
add
cmp
mov
nop
add
cmp
jb
dec
cmp
jmp
or
push
and
jecxz
(bad)
mov
jge
or
push
cli
ret
xor
sub
mov
xlat
inc
ret
ret
lea
js
in
mov
repz
repnz
mov
jae
push
call
ficomp
jl
pop
clc
jl
clc
pusha
add
sbb
jmp
int
push
mov
mov
mov
or
pop
pop
add
lahf
push
outs
mov
add
mov
add
in
inc
rcl
dec
lods
mov
push
mov
jb
cmps
adc
add
xor
push
aaa
dec
pop
in
and
(bad)
fisttp
fisubr
lds
mov
mov
in
dec
mov
lock
adc
popw
out
push
sbb
and
add
xor
fs
inc
sbb
dec
sub
outs
adc
add
outs
xor
mov
cmp
add
lods
ss
jnp
ficom
enter
mov
cld
enter
adc
rcr
inc
es
jge
fdivr
test
or
clc
xor
sub
gs
add
(bad)
shr
jb
inc
sub
js
ins
pop
fsubr
mov
rol
gs
sbb
jne
jp
xor
loop
into
jmp
aas
imul
ret
jo
not
test
shr
dec
add
jb
int3
out
int3
and
lea
dec
sbb
push
lea
inc
call
xchg
pushf
adc
in
out
jg
mov
push
add
mov
scas
dec
adc
add
and
push
js
push
div
dec
jg
sub
push
cmps
(bad)
dec
inc
js
xor
mov
je
cmp
push
dec
push
adc
or
push
add
add
and
adc
mov
jmp
dec
pop
or
cld
add
push
xor
bound
mov
sub
sbb
ds
push
icebp
cmp
or
or
or
cld
cld
push
pop
mov
adc
ficomp
xchg
push
(bad)
les
dec
cmp
ins
cmp
sub
inc
inc
inc
pop
push
adc
retf
mov
(bad)
sbb
adc
or
pop
dec
(bad)
pop
ret
scas
pop
sbb
sbb
add
sbb
pop
mov
add
rcr
mov
ds
cmp
test
xor
jae
je
push
or
or
jecxz
rol
jnp
hlt
push
and
sti
das
push
or
cdq
ins
or
jno
sub
adc
push
mov
addr16
sub
or
mov
add
add
cwde
xor
mov
add
xor
push
sbb
push
xor
shr
or
pusha
mov
xor
sbb
push
add
or
lea
in
mov
repnz
inc
inc
mov
push
add
int
fmul
mov
and
ins
sub
add
test
je
dec
cmp
(bad)
adc
or
aas
mov
inc
adc
(bad)
mov
push
jo
jl
add
xor
cmps
je
addr16
and
nop
mov
jmp
test
sti
imul
cwde
loop
inc
jne
shl
pop
test
push
push
sbb
fild
enter
or
jb
push
ror
fmul
icebp
push
pop
add
dec
jp
je
cmp
xor
retf
stos
stos
aad
jp
pop
dec
inc
fdivr
mov
inc
cmp
jbe
xor
or
iret
inc
pop
cwde
adc
daa
xchg
or
or
js
dec
push
mov
adc
dec
cmp
jo
push
sbb
push
mov
loope
mov
add
sub
cmp
aam
or
and
jge
cld
sbb
add
cmp
mov
dec
sbb
add
inc
cmp
jb
adc
jl
push
and
(bad)
loopne
cs
cmp
jbe
cmp
mov
sub
sub
sub
mov
cmp
push
test
ret
hlt
fdiv
fwait
pop
gs
mov
jae
and
mov
add
nop
adc
add
lock
mov
push
repz
sub
push
jle
add
adc
jle
jl
int3
inc
sbb
push
add
cld
add
adc
push
gs
mov
mov
sub
lods
xchg
sub
in
lea
mov
xchg
shr
js
xchg
scas
inc
lea
es
mov
fidiv
cmp
jbe
add
test
mov
or
mov
jmp
or
imul
xor
lock
inc
mov
clc
jg
je
popf
cmp
aaa
push
mov
xor
and
divps
push
jmp
dec
das
rsqrtps
inc
cdq
push
adc
jmp
mov
or
pop
xchg
or
fstp
jno
or
add
shl
jmp
(bad)
data16
inc
dec
lods
movs
pshufw
jnp
jmp
rcl
or
dec
jge
mov
add
daa
mov
imul
push
adc
inc
xor
mov
dec
shl
in
add
add
imul
call
test
and
sub
sub
pushf
mov
aas
std
imul
movzx
je
or
je
add
sbb
xor
mov
stos
and
(bad)
and
pop
pop
cmp
imul
mov
jmp
in
in
int3
mov
mov
pop
les
sub
sbb
mov
sub
or
adc
sub
cld
loop
test
pushf
ror
call
aam
jb
cmp
jnp
pop
inc
popa
ins
jge
mov
cmp
jne
pusha
je
mov
ja
jae
mov
push
or
inc
sahf
jmp
dec
add
inc
push
(bad)
add
xchg
or
in
mov
and
xchg
retf
and
sub
mov
pop
jecxz
xor
adc
movs
mov
add
or
inc
sbb
sub
push
and
inc
adc
pop
fdivr
aaa
(bad)
cli
mov
sbb
pop
push
and
lea
retf
add
adc
inc
nop
and
pop
sti
xor
jecxz
add
xchg
add
adc
out
or
xlat
out
mov
adc
(bad)
xchg
mov
cmp
sub
je
mov
dec
and
movs
dec
mov
adc
rol
push
fild
sub
mov
fld
cmp
jg
bound
jg
cmp
fucomp
adc
xor
cmp
add
and
jmp
das
jne
push
cmc
and
fsubr
inc
shr
add
jmp
sub
dec
sub
xchg
cld
sbb
loopne
or
shr
xlat
aas
push
mov
cmps
loopne
add
lock
das
sbb
add
and
push
test
rcr
ja
test
sbb
or
jecxz
aaa
mov
cdq
loopne
stc
pop
je
or
je
push
jne
repnz
ins
nop
shr
mov
fbstp
jmp
and
lock
mov
aad
popf
mov
sbb
shl
fadd
push
cmp
mov
shl
add
jmp
mov
test
test
xchg
xlat
(bad)
pmulhw
adc
shr
enter
xor
test
ins
std
push
mov
cli
(bad)
aad
sbb
add
jb
pop
ds
or
mov
xchg
inc
add
xor
aaa
mov
dec
ret
fldenv
push
loopne
icebp
adc
and
cmp
jne
dec
sbb
push
cmp
jne
mov
xor
jne
mov
inc
lock
lea
lahf
jb
aam
sti
xor
jo
sub
adc
jne
scas
(bad)
jecxz
xchg
loop
lods
imul
dec
dec
add
inc
mov
or
ror
adc
sbb
in
das
dec
xchg
adc
sbb
add
cs
or
sar
aad
movs
xor
jecxz
push
dec
push
jnp
retw
sbb
adc
dec
into
in
or
adc
stc
mov
mov
sub
aas
retf
mov
rep
mov
jo
push
ret
call
add
jg
add
clc
push
add
not
jno
or
adc
add
fisubr
push
data16
dec
pop
jne
inc
add
pop
out
push
add
(bad)
cmp
je
sub
sar
lea
push
cmp
aaa
hlt
ja
xchg
jo
push
xor
add
mov
push
add
out
mov
xor
sti
(bad)
and
(bad)
sub
xor
fs
aas
or
xchg
nop
es
movs
shl
xchg
pop
sub
mov
or
pop
pop
dec
pop
(bad)
hlt
mov
cdq
(bad)
xor
add
movs
xchg
pop
push
pusha
data16
(bad)
pavgw
add
into
test
stc
ret
jg
push
movs
pop
mov
push
mov
pop
add
dec
mov
inc
dec
cmps
and
add
sbb
imul
stc
adc
mov
mov
cmp
push
nop
mov
jb
ds
cmp
xor
imul
shl
sbb
cmps
adc
jp
jl
lock
loope
adc
mov
sbb
dec
div
loop
sub
xchg
adc
or
daa
cmp
push
enter
or
mov
int3
inc
add
push
or
cmp
test
xor
stos
ret
(bad)
mov
fsubr
ret
sub
(bad)
ffreep
and
push
dec
sub
push
fist
mov
lea
pusha
(bad)
xor
mov
mov
mov
and
jnp
mov
push
dec
mov
test
mov
imul
test
mov
in
jbe
wrmsr
mov
into
rol
cmp
jo
dec
ret
loop
retf
sbb
je
pop
movs
sub
sub
cmp
pop
ins
pop
xor
or
in
and
adc
clc
jmp
stos
dec
xchg
cmp
sbb
push
loope
xlat
hlt
lods
es
add
mov
es
les
adc
xchg
push
mov
or
pop
(bad)
mov
push
loopne
adc
jnp
inc
retf
xor
and
je
sbb
jle
mov
lea
dec
movs
stc
add
push
pop
jmp
jae
cld
sub
rol
jnp
jmp
cs
add
adc
stc
fild
xchg
xchg
dec
movs
mov
xor
aas
mov
mov
adc
add
dec
add
push
pop
mov
shl
xchg
mov
sbb
add
rcr
pushf
jle
sbb
test
xor
scas
ret
movs
(bad)
rcl
les
adc
or
add
inc
or
in
add
xchg
xchg
push
push
inc
pop
(bad)
lahf
test
jl
inc
or
push
ret
cmp
cmp
dec
dec
push
or
add
ja
push
addr16
repnz
adc
arpl
sbb
add
rcr
frstor
pop
inc
fwait
pop
mov
add
and
push
or
jbe
mov
test
lock
pop
xor
or
add
jg
inc
fsub
cmp
push
push
test
mov
add
xchg
mov
add
push
push
nop
int
aas
push
or
mov
push
push
xor
push
push
fist
loope
sbb
push
cmp
daa
mov
cmp
int3
idiv
lea
popf
outs
xor
xchg
fisubr
add
jecxz
jnp
addr16
aad
add
shl
hlt
adc
add
mov
mov
mov
add
sub
dec
cs
iret
lods
imul
stc
and
mov
mov
movs
idiv
call
sbb
shr
jb
scas
mov
test
add
ret
mov
mov
shr
jg
sub
sub
cmps
sub
ret
inc
jg
add
jo
xchg
mov
in
lods
jg
sti
xchg
lods
push
dec
fsub
mov
adc
or
aaa
push
shr
dec
jecxz
cmp
add
push
push
add
inc
mov
sbb
add
rcr
js
movs
adc
aaa
add
push
add
nop
or
pop
stos
push
es
add
mov
mov
mov
and
mov
cmp
add
jns
mov
(bad)
std
enter
pop
mov
fmulp
retf
cmp
das
pusha
lea
retf
xchg
push
jg
in
ins
adc
je
xchg
xchg
(bad)
js
pop
sub
leave
out
icebp
in
pushf
adc
sub
movs
push
cdq
jl
mov
stos
mov
movs
mov
mov
shl
out
test
mov
push
adc
pop
ret
aaa
das
(bad)
fbstp
jbe
xor
mov
into
out
push
sub
push
cmp
or
and
and
push
push
add
push
push
push
sbb
inc
rcr
xchg
or
pop
hlt
pop
les
arpl
mov
fucomip
js
cmp
jg
movsx
xor
cmp
xor
rcr
xor
xor
xor
cmp
push
push
add
rol
mov
mov
and
aas
add
sbb
(bad)
je
in
lahf
jns
jns
xor
push
jns
xchg
add
jns
xchg
pop
xchg
or
jns
cwde
or
arpl
out
sub
aad
sar
ret
fwait
or
bnd
out
sub
(bad)
xor
ret
aas
sub
pop
test
rcl
or
jbe
and
jno
mov
je
add
mov
clc
sub
cmp
pop
ins
and
push
test
xchg
in
lock
push
movs
sub
stos
jno
retf
int3
lock
and
mov
(bad)
pop
pop
inc
and
and
and
mov
aas
mov
std
fdiv
int3
xchg
fiadd
add
mov
gs
cmp
add
xchg
adc
scas
pop
mov
enter
lahf
test
add
inc
bound
xchg
cld
pop
mov
call
jecxz
lods
push
dec
mov
cmps
adc
rol
int
xchg
icebp
popa
push
nop
test
add
pusha
dec
not
(bad)
clc
cmp
lahf
enter
arpl
daa
push
mov
push
sbb
push
add
call
in
mov
dec
popa
dec
lock
or
lock
ror
mov
add
pusha
add
gs
mov
push
push
mov
pop
xor
rcl
aad
inc
daa
cmps
push
movs
xor
in
xchg
xchg
lock
mov
xchg
pmaxsw
mov
adc
sbb
and
add
fcom
push
mov
dec
les
out
cmp
xor
push
sbb
adc
sub
jbe
cmp
aam
xchg
rcl
mov
and
jmp
pop
mov
push
enter
sbb
pop
enter
sub
enter
ror
arpl
das
int3
inc
push
nop
push
lock
mov
int3
push
push
dec
sub
in
adc
add
push
pop
sub
rcl
adc
daa
xchg
arpl
pop
mov
dec
aaa
dec
enter
xchg
mov
das
fdivr
inc
add
add
test
retf
cli
ret
es
rcl
mov
dec
mov
nop
sub
fild
pop
shr
cs
clc
xor
rcr
pop
in
or
in
in
dec
mov
ror
in
sbb
nop
in
sbb
adc
sbb
test
sub
push
and
xchg
dec
ret
pop
mov
pop
and
or
ss
aaa
aas
adc
es
xor
imul
push
sbb
in
and
fsubr
mov
out
icebp
out
out
out
jae
arpl
xchg
adc
add
int
ss
cwde
mov
ss
mov
push
and
push
mov
xlat
adc
push
fwait
xchg
and
add
repnz
and
sub
and
movs
xchg
pushf
xchg
xchg
js
mov
in
xor
cmp
retf
in
cmp
cmp
or
cdq
call
cwde
and
adc
push
xor
and
jl
xchg
mov
mov
clc
pop
fwait
xchg
mov
(bad)
xor
push
xor
daa
js
push
xor
mov
mov
dec
xor
push
xchg
xor
dec
xchg
xchg
xchg
xchg
cmp
nop
es
xchg
pop
nop
call
sbb
test
push
push
sbb
sbb
ror
jne
jne
mov
call
pop
sub
je
and
in
sub
in
jmp
add
pushf
xor
mov
sub
cmps
mov
sub
dec
inc
scas
sub
dec
es
xor
xor
ret
dec
pop
mov
inc
(bad)
xchg
or
sbb
push
adc
fsubr
inc
mov
and
push
cmp
inc
inc
push
xchg
push
shr
jns
repnz
sub
int3
int
iret
add
xor
int3
xor
jecxz
int3
mov
mov
jne
sbb
sbb
pusha
(bad)
xor
aaa
loopne
dec
in
jecxz
mov
stos
loop
dec
and
xor
add
push
lods
push
pop
add
mov
and
jno
add
push
cmp
push
mov
add
aad
dec
add
frstor
div
test
cmc
push
xor
adc
stos
ss
xor
scas
push
loopne
das
cmp
lea
xor
adc
dec
popa
ins
rcr
imul
inc
inc
or
xor
mov
cwde
dec
xchg
jmp
xor
and
mov
mov
push
inc
(bad)
leave
pop
jmp
cmp
dec
fisubr
(bad)
into
fcmovb
arpl
cmp
mov
test
sti
lods
and
push
jno
and
stos
or
or
or
leave
movs
aas
adc
outs
pop
scas
out
add
in
dec
lods
rcr
adc
dec
loope
sbb
inc
in
sahf
adc
loope
test
jae
cmps
jo
test
aas
test
push
loop
inc
cmp
xchg
pop
ss
push
shr
sub
push
xor
popa
inc
mov
test
push
xchg
push
lds
sbb
rol
push
adc
push
stc
fisttp
leave
lea
pop
add
cmp
mov
pop
mov
inc
leave
shr
mov
shl
pop
mov
inc
push
and
das
aas
jb
lods
xchg
xchg
push
adc
imul
inc
or
xor
xchg
inc
aad
cwde
rol
mov
inc
jns
push
add
mov
jnp
mov
mov
gs
ret
stc
rcl
fistp
retf
mov
push
fcom
cmp
jp
ss
pop
xor
icebp
sbb
or
lods
push
mov
pop
push
pop
dec
pop
dec
xor
lahf
int
push
mov
dec
adc
out
shr
jmp
pop
rcr
rol
xor
push
mov
push
and
xchg
jmp
jno
push
xor
dec
(bad)
bound
add
xor
fwait
sbb
push
adc
fldenv
add
cmps
aas
mov
dec
retf
sub
stos
dec
rol
cmp
xchg
inc
pop
pop
leave
iret
inc
inc
jae
in
(bad)
enter
dec
cs
fcom
enter
int3
push
or
inc
daa
scas
add
jmp
lds
xlat
ror
mov
push
clc
and
dec
adc
pop
add
jne
pop
mov
pushf
pushf
(bad)
xchg
mov
mov
enter
add
enter
aaa
stc
cld
xchg
push
aam
repnz
xor
mov
fistp
(bad)
mov
(bad)
xor
or
lahf
mov
sbb
inc
or
add
nop
pop
lock
mul
push
mov
mov
mov
movs
cld
mov
mov
fldcw
add
dec
gs
out
add
sbb
or
pop
test
mov
ja
and
mov
ffreep
addr16
test
lahf
and
add
or
push
adc
out
fisttp
test
push
push
jl
lods
mov
xchg
adc
push
mov
adc
test
fsubr
jg
mov
cvttps2pi
jo
pop
or
call
xchg
sub
xchg
xchg
loop
cvttps2pi
xchg
sub
sub
loope
jns
mov
mov
fwait
or
adc
jae
xchg
inc
je
repnz
jg
dec
xchg
mov
push
retf
cdq
mov
pop
movs
jb
push
push
fbstp
(bad)
xor
mov
adc
retf
js
cdq
pop
pop
(bad)
mov
jns
out
fnstcw
push
mov
or
adc
sahf
ins
ins
fs
xchg
inc
push
sbb
sub
mov
mov
fs
fs
enter
js
add
daa
ficomp
retf
and
xor
rcl
rol
int
pusha
sub
test
cdq
inc
mov
repnz
shr
nop
out
lahf
test
repnz
or
and
pop
xchg
cwde
in
mov
xchg
sub
sbb
xchg
cmc
clc
or
push
pop
ret
enter
pop
inc
pop
pushf
dec
mov
sahf
popf
xlat
pushf
sub
std
inc
mov
lds
mov
mov
mov
ror
shl
out
xchg
retf
in
mov
mov
sbb
push
xchg
jle
pop
sub
int
pop
sub
and
xchg
sub
enter
ins
jno
dec
lods
stos
pop
popa
jb
add
adc
fst
int3
pop
and
inc
aas
jge
movs
add
inc
sar
(bad)
enter
xchg
mov
cs
add
mov
pop
xor
jg
sahf
add
pop
mov
or
mov
dec
inc
jb
xchg
pushf
(bad)
jge
popa
jb
ins
or
mov
add
ins
mov
mov
pop
out
clc
inc
mov
xchg
(bad)
fstp
cld
mov
sbb
or
out
test
(bad)
and
lock
add
pop
push
mov
add
test
adc
enter
pop
dec
push
sahf
xor
push
xor
add
fcmovne
into
cmp
or
adc
sbb
cld
hlt
inc
pop
scas
or
retf
xor
xor
mov
xor
das
jg
push
add
pop
xchg
push
or
mov
add
fdivr
js
sub
aas
cmp
adc
mov
data16
movd
inc
pop
jo
mov
mov
rol
jae
xchg
dec
sub
fist
push
sbb
xor
cmp
push
push
push
sbb
or
js
sbb
in
enter
jnp
mov
jl
fwait
iret
daa
mov
pop
jg
imul
js
xor
and
and
ja
xchg
mov
cwde
add
xchg
daa
push
inc
lods
or
dec
in
inc
mov
stc
xchg
into
leave
loopne
in
call
dec
push
jmp
push
call
ret
(bad)
stc
xchg
mov
and
mov
mov
push
sub
xchg
enter
xor
popf
push
sub
sub
sbb
or
cs
mov
dec
movs
repnz
(bad)
nop
mov
jns
dec
pop
out
out
cmp
in
xor
push
cmp
add
add
cmp
push
pop
push
cmp
or
pusha
and
xchg
pop
push
in
das
stc
pop
pop
add
pop
add
xchg
xchg
mov
pop
add
pop
push
pop
pusha
outs
xchg
out
or
add
or
push
add
nop
add
adc
adc
pop
sbb
xchg
mov
mov
inc
push
and
es
push
fs
daa
sub
sub
sub
jmp
sbb
push
add
nop
add
push
push
sbb
enter
pop
pusha
popa
or
or
or
add
nop
add
nop
ins
ins
outs
sbb
jno
sbb
je
nop
je
pop
ins
xor
add
add
add
and
retf
ret
pop
xor
inc
mov
loopne
sbb
pop
loopne
push
mov
add
mov
sub
in
call
pop
pop
pop
jmp
adc
cmp
or
or
pop
push
dec
es
sbb
inc
out
lahf
mov
out
aas
pop
jb
or
pop
jmp
into
push
stos
sbb
xchg
jmp
mov
push
sub
int3
adc
(bad)
fadd
mov
xchg
add
lods
inc
int3
cdq
add
stc
out
aas
and
xchg
scas
mov
mov
xchg
xchg
in
adc
xlat
popf
xchg
xchg
push
pop
mov
mov
stc
pop
and
ret
jl
sbb
pop
jmp
popf
in
mul
enter
test
mov
xchg
nop
mov
retf
neg
mov
stc
stc
sub
mov
pop
movs
push
dec
sbb
mov
popf
loopne
daa
jmp
mov
scas
mov
mov
das
les
mov
mov
loop
cmps
shl
leave
pop
sub
lods
or
retf
pop
and
push
and
jg
adc
lahf
add
fcom
ror
dec
mov
rol
ret
jmp
sbb
in
adc
xor
or
dec
in
in
sbb
or
push
in
jne
push
pop
jge
sub
pop
and
arpl
inc
sub
(bad)
xchg
push
jbe
xlat
fdivr
enter
pushf
lea
mov
call
lahf
sub
pop
fadd
adc
cld
aaa
xor
aas
adc
shl
xchg
pushf
mov
hlt
cwde
sahf
pushf
mov
xchg
mov
sbb
fdivr
or
(bad)
std
outs
movs
or
sbb
adc
xchg
lea
stos
pop
or
jmp
and
adc
or
mov
mov
mov
mov
xchg
js
jle
or
and
mov
cmp
mulps
inc
xor
cli
jl
cmp
push
loop
jbe
outs
push
mov
mov
mov
pop
pop
lahf
add
out
lock
adc
cwde
adc
mov
in
xchg
nop
pop
loope
add
mov
mov
in
xor
jns
retf
out
pop
xor
xor
jns
jns
xor
add
xor
mov
push
aaa
loope
ret
fistp
add
pop
pop
pop
add
nop
add
xor
sbb
fs
stos
cmp
or
repz
(bad)
and
sub
rol
inc
ret
cmps
push
outs
xorps
out
xor
push
xor
fisubr
pop
add
push
movs
cmp
dec
shl
push
fs
sti
sahf
push
cmp
adc
adc
and
jne
jae
stc
inc
push
inc
and
jne
dec
or
jne
rcl
and
jne
and
inc
mov
imul
sbb
sub
mov
mov
pop
push
fmul
dec
pop
adc
and
add
add
cli
pop
shl
movzx
add
fucomi
mov
sbb
inc
push
dec
push
adc
mov
jl
push
inc
add
fsubr
daa
cmc
out
cs
sub
push
inc
or
push
(bad)
mov
mov
data16
and
or
xchg
(bad)
test
xor
pusha
or
jmp
mov
push
and
jl
dec
mov
nop
sbb
into
sbb
inc
or
dec
std
pop
add
add
push
hlt
sbb
and
nop
add
jnp
xor
jbe
inc
hlt
cmps
fsub
fsubrp
aam
pop
push
add
and
in
in
fsubr
inc
mov
push
pop
mov
jle
sbb
sbb
sbb
mov
dec
xor
fsub
fist
cmp
loope
call
mov
sub
add
pop
fidivr
and
les
dec
mov
mov
jmp
pop
hlt
push
adc
mov
adc
add
leave
cmp
push
sub
je
mov
pop
jne
xor
and
xor
mov
inc
pop
les
or
pusha
xor
fs
pop
or
cmp
push
je
xor
and
fadd
pop
and
in
mov
pop
add
fs
push
mov
test
push
cmp
je
les
clc
cmp
mov
jle
push
pop
daa
and
inc
sbb
lea
repnz
(bad)
xchg
movs
push
adc
mov
fcomp
sbb
call
inc
and
xchg
xchg
inc
ror
lds
xor
into
leave
jno
fcmovnbe
push
pop
xchg
and
ins
push
sub
push
push
or
push
jp
nop
mov
outs
call
add
sbb
or
inc
add
adc
popa
sbb
enter
jo
xor
adc
pop
inc
aam
cli
mov
xchg
loope
jmp
or
ins
push
in
imul
cmp
into
(bad)
enter
inc
and
add
les
loopne
dec
mov
mov
or
mov
mov
jl
pushf
lods
dec
cmp
dec
and
das
jmp
in
xor
in
loopne
into
sbb
jne
push
std
mov
out
mov
cwde
rcl
les
sub
sbb
mov
add
inc
lock
and
in
aad
inc
xchg
add
rcr
rcr
dec
add
mov
mov
enter
add
push
and
outs
in
mov
and
push
fnstsw
jbe
dec
mov
sub
pop
and
and
sbb
push
popa
cwde
add
add
movs
inc
cmp
xchg
mov
into
jbe
or
popa
test
xchg
fisttp
js
sti
add
jmp
(bad)
xor
rcr
push
test
movs
sbb
mov
rcr
mov
and
inc
icebp
or
outs
jnp
or
icebp
jmp
xor
jo
and
fstp
jns
push
mov
(bad)
dec
(bad)
and
pop
xchg
pusha
adc
ret
ret
sub
fucomip
ret
mov
sub
push
lahf
les
mov
fistp
mov
out
in
cmps
add
mov
or
out
add
fsub
and
xchg
pop
dec
xchg
iret
sar
xchg
adc
dec
mov
inc
adc
add
fild
(bad)
xchg
mov
inc
(bad)
in
lock
ja
outs
xchg
cmp
or
lods
movs
jns
test
scas
sub
add
adc
sub
test
pusha
pop
and
pop
push
pop
inc
inc
sbb
push
test
adc
sub
das
shr
add
bound
rcl
and
aaa
adc
cpuid
adc
adc
loope
cld
push
or
sub
sub
dec
xor
and
add
jle
pop
cmp
pop
mov
pusha
icebp
test
ror
and
(bad)
cmp
xchg
push
add
call
mov
inc
je
push
arpl
pop
xor
push
icebp
jmp
out
je
adc
mov
inc
pushf
sti
cmp
adc
xor
pop
pop
ret
mov
push
pop
rol
add
nop
pop
or
scas
sub
and
pop
aad
into
ins
adc
mov
add
cmp
xor
or
adc
ins
das
mov
ss
push
shl
push
sbb
ins
mov
adc
icebp
popa
sbb
mov
mov
sbb
rcl
pop
or
and
aaa
jno
xor
(bad)
jno
push
push
and
add
or
push
jnp
add
mov
(bad)
retf
inc
test
popf
fcomp
stc
jl
sbb
mov
xchg
aas
xchg
adc
inc
and
push
and
sbb
or
xor
scas
push
push
push
nop
pop
or
xchg
and
push
rol
lahf
cmp
pop
loope
adc
and
ja
pop
or
or
mov
es
jne
jge
fst
and
or
lea
lds
test
push
push
cld
es
mov
mov
nop
ins
adc
js
mov
stos
cmp
pop
pusha
fsubr
leave
(bad)
mov
add
dec
or
push
add
add
pop
inc
fiadd
in
add
adc
or
pop
push
mov
sbb
(bad)
xchg
mov
adc
pushf
out
sbb
fs
enter
pushf
pop
addr16
pushf
icebp
sbb
movs
mov
jns
popa
sbb
inc
and
retf
das
inc
call
inc
daa
jne
adc
xor
popa
cli
sub
in
add
std
adc
mov
push
aas
dec
lea
xchg
xchg
pop
dec
jbe
(bad)
and
mov
call
push
push
sbb
pop
jo
mov
push
push
and
int
imul
nop
nop
and
mov
mov
cmp
and
movs
push
ror
mov
hlt
cmp
add
call
or
mov
popa
test
push
ja
and
es
or
mov
pop
or
lods
rep
nop
and
bnd
or
or
lods
add
or
or
leave
push
call
les
add
cmp
mov
mov
pop
test
imul
ds
fld
sub
mov
mov
sub
xor
jne
or
and
mov
addr16
(bad)
shr
xor
ficom
mov
add
adc
out
pop
adc
mov
daa
dec
push
adc
and
test
popa
dec
push
xchg
pop
xor
dec
add
pop
xchg
retf
and
and
lods
lods
je
inc
call
dec
xor
into
daa
sbb
call
and
(bad)
dec
mov
xor
or
stos
mov
xor
pop
xor
sub
test
dec
outs
mov
(bad)
fnstcw
push
dec
add
dec
fild
enter
test
and
test
shr
mov
pop
ror
ins
push
sub
stc
popa
mov
jne
adc
aas
fisttp
jnp
rcr
cdq
mov
jb
add
push
cmova
pop
sbb
add
out
mov
sbb
push
add
mov
jno
adc
pop
iret
xor
dec
sub
xor
jp
loope
sbb
xor
scas
in
xchg
or
in
jb
sbb
popa
sub
pop
pop
push
ins
lahf
add
inc
daa
sub
xchg
and
sbb
nop
inc
push
push
sbb
mov
imul
test
and
pop
mov
je
(bad)
std
inc
cmp
pop
sbb
dec
jecxz
shl
sbb
lea
xor
adc
push
pop
cmp
aas
movs
shl
xchg
and
test
xor
cwde
mov
movs
or
push
cwde
and
mov
mov
fnstsw
mov
sbb
daa
nop
nop
aam
and
sbb
sbb
xchg
xlat
pushf
mov
pop
and
aam
and
aad
push
and
or
and
mov
mov
arpl
push
and
sub
ss
inc
mov
call
jmp
rol
and
stc
out
pop
jo
sbb
adc
pop
xchg
call
js
cmp
jg
push
lea
gs
inc
sar
adc
cld
cmp
cld
enter
test
test
rol
or
mov
adc
fcom
push
and
icebp
ja
mov
adc
cmc
sub
push
outs
leave
pushf
test
ret
mov
sub
loopne
iret
movs
sub
mov
mov
inc
ror
mov
loope
mov
inc
stos
ins
push
mov
sti
into
inc
add
pop
xor
xor
neg
data16
test
jle
in
jle
xor
lods
lods
sub
ins
xor
sub
jge
and
data16
shr
ret
(bad)
outs
ror
test
sbb
xor
imul
test
data16
outs
sahf
fcmovnu
lea
push
push
adc
add
mov
inc
int3
xor
mov
mov
stc
xchg
rcl
loope
cmp
dec
or
sub
popa
pop
or
mov
loop
je
lods
ins
inc
cmp
out
movs
jecxz
loop
push
jns
push
or
sub
aam
inc
lea
cwde
jp
sub
dec
pusha
imul
and
or
sbb
pop
and
pop
mov
mov
push
imul
(bad)
(bad)
imul
xchg
test
mov
aam
jecxz
push
movs
jo
cmp
inc
into
push
lds
push
xchg
xchg
imul
add
pushf
inc
jmp
in
inc
jnp
jmp
and
lods
ror
add
or
test
and
mov
out
adc
lods
inc
jmp
or
cmp
frstor
mov
xchg
or
mov
rcl
and
xor
je
xor
adc
lahf
scas
sub
mov
jns
dec
cwde
sub
inc
xchg
inc
cmps
sbb
ja
mov
je
ret
xchg
fmul
jo
xchg
ss
push
lods
nop
shl
xchg
jl
pushf
imul
xchg
or
dec
and
inc
xor
sbb
lods
xor
mov
xor
mov
inc
push
or
push
imul
cmp
fimul
jbe
pop
test
mov
mov
push
stc
dec
jl
mov
mov
mov
dec
pop
repz
ret
or
gs
(bad)
retf
cmp
xchg
push
cmps
jg
cld
push
cli
mov
dec
mov
mov
retf
in
int
nop
mov
xchg
nop
(bad)
and
ja
mov
test
rol
cmps
jb
xchg
dec
push
jne
icebp
in
xchg
add
(bad)
test
(bad)
std
mov
cmp
int3
mov
lods
cwde
(bad)
ret
jle
out
xchg
dec
mov
sbb
pop
enter
lock
mov
fiadd
loopne
retf
mov
bswap
fld
cmp
mov
inc
or
mov
xchg
stos
ret
adc
jo
pop
jne
inc
pop
add
mov
mov
mov
jl
push
mov
lahf
lods
xchg
lods
jl
fsub
call
pushf
call
in
mov
nop
or
in
sbb
mov
repnz
push
mov
retf
mov
(bad)
or
lds
test
out
retf
lahf
mov
cwde
push
adc
rcr
xchg
mov
test
dec
ds
and
dec
repnz
cwde
rol
mov
mov
jmp
rol
sahf
lahf
rol
sbb
inc
ret
push
ret
bound
in
pop
fcomp
fdivr
rol
sub
cmp
push
and
ins
jg
mov
nop
out
aam
lock
ret
jg
bound
sub
lock
aas
jge
fdiv
int3
push
and
ror
jl
mov
mov
mov
xor
(bad)
fucom
mov
data16
ret
mov
enter
sbb
sti
adc
rcl
mov
stos
and
call
in
pop
js
and
adc
jne
les
lahf
lock
adc
pop
(bad)
sub
add
mov
and
fdiv
xchg
mov
jg
imul
sahf
int3
fwait
sahf
xchg
cs
repnz
cwde
test
int3
mov
sahf
cmp
pop
mov
mov
inc
mov
xor
pop
ret
mov
mov
sub
jnp
xor
push
inc
push
inc
and
in
or
fist
cli
xchg
push
mov
mov
mov
pop
dec
(bad)
fsubr
cdq
in
sub
pop
dec
dec
or
inc
rol
inc
dec
xchg
or
retf
in
pop
mov
xor
call
call
int3
pop
mov
pop
(bad)
pop
add
ret
jo
(bad)
js
dec
adc
nop
sub
dec
mov
sub
push
fs
mov
jbe
cmp
outs
lds
and
ret
pop
in
xchg
pushf
adc
pop
std
xchg
sub
cld
aaa
clc
or
xchg
adc
shl
mov
test
(bad)
movs
or
xchg
in
sub
mov
leave
and
inc
es
mov
dec
adc
jns
dec
inc
mov
add
cmps
aaa
sub
movs
pushf
jb
push
std
fild
xchg
push
test
jns
inc
jb
std
sbb
cs
push
push
popf
retf
dec
mov
mov
shl
loopne
or
mov
inc
movs
test
inc
push
pop
xchg
test
mov
call
jmp
push
rcl
dec
lods
je
xor
mov
pushf
movs
inc
imul
push
mov
in
retf
imul
bound
aad
(bad)
rcr
and
inc
jnp
push
or
data16
loopne
mov
leave
jno
aam
stos
adc
mov
sar
add
mov
inc
pop
or
aam
lock
mov
lock
pop
or
dec
dec
add
dec
das
stc
push
nop
jmp
mov
retf
mov
sbb
or
pop
enter
repnz
push
stos
and
cwde
std
mov
dec
pushf
or
and
or
test
adc
dec
adc
mov
add
xchg
inc
fstp
add
mov
int3
mov
push
adc
cmp
mov
std
nop
inc
xchg
or
int3
inc
retf
mov
xor
jno
dec
aaa
imul
dec
xor
cdq
ss
adc
mov
shl
sbb
jne
xor
cmp
xor
mov
xchg
mov
jecxz
xchg
test
or
out
ror
jg
push
enter
test
xchg
xchg
xchg
enter
aam
cmp
and
fmul
enter
inc
rol
jb
enter
loopne
retf
sbb
in
lock
fwait
xchg
jg
hlt
int3
mov
cwde
es
sbb
mov
sahf
dec
or
nop
pop
imul
fcom
fmul
and
pop
adc
sbb
pusha
jb
sbb
and
xchg
inc
mov
add
call
or
addr16
push
loop
test
test
mov
je
addr16
push
daa
fbstp
push
(bad)
leave
xor
fild
sbb
xor
xor
pop
xor
dec
xor
rcl
sub
addr16
sub
mov
fistp
scas
(bad)
test
cmp
push
mov
adc
sbb
inc
lds
js
sub
mov
adc
pop
nop
inc
pop
adc
ret
and
pop
movs
cs
adc
push
or
add
jae
pop
dec
addr16
or
xor
pop
mov
push
rcl
mov
ss
mov
test
xchg
jge
lods
and
dec
add
cmps
mov
daa
daa
xchg
out
xor
cwde
nop
lea
add
in
jge
test
jnp
jae
movs
rcr
js
add
pop
add
out
sub
jge
popa
outs
fimul
push
jge
in
adc
sti
jo
sub
pop
and
cmp
add
movs
ret
inc
sbb
jg
clc
xchg
add
lea
dec
aaa
dec
popa
movs
loope
dec
nop
fs
aad
sbb
pusha
mov
adc
push
fistp
(bad)
pop
add
inc
pop
sub
enter
push
cld
xor
cs
rol
repnz
jp
dec
jns
add
mov
pop
dec
add
je
sub
lock
imul
js
fidivr
push
xor
push
ret
push
xchg
movs
or
add
add
pop
xor
retf
push
dec
retf
pushf
mov
and
xlat
adc
pshufw
pop
and
cmp
dec
dec
jl
fwait
adc
addr16
addr16
addr16
fld
test
addr16
and
in
mov
xor
je
movs
mov
sbb
push
xchg
lock
test
or
xor
mov
jno
adc
scas
in
mov
mov
mov
or
(bad)
sub
in
or
add
add
mov
nop
and
sub
fild
fs
call
sahf
push
and
sub
stc
push
mov
jo
loopne
xor
xchg
or
dec
and
add
pop
and
push
add
inc
cmp
pop
adc
jns
pop
into
ss
iret
cld
test
xchg
mov
xor
add
jecxz
inc
pop
test
cmp
mov
(bad)
jl
dec
aaa
stc
or
and
sahf
sbb
jae
lock
loopne
inc
stos
enter
sbb
(bad)
or
push
ins
inc
out
test
icebp
cmp
mov
mov
adc
movs
jb
pop
fcomp
adc
sub
add
xchg
push
fimul
enter
out
retf
add
and
jb
enter
in
retf
and
add
mov
enter
pop
push
adc
out
push
cs
call
xchg
retf
add
add
and
int3
xor
push
adc
sub
xor
xchg
inc
push
push
push
xor
ss
pop
repnz
pop
in
jb
xchg
push
cmp
mov
and
pop
mov
sbb
cdq
add
and
in
retf
sbb
out
sbb
xchg
stos
mov
pushf
push
mov
repnz
mov
adc
adc
xor
mov
and
mov
je
sbb
adc
jne
and
pop
adc
test
adc
mov
push
jbe
cmp
and
mov
xlat
aam
je
dec
xchg
push
das
pushf
jmp
dec
call
dec
lods
push
ss
adc
push
add
add
adc
mov
test
add
leave
adc
jo
loopne
push
into
pop
add
dec
pop
xor
push
jge
pop
add
and
add
inc
push
dec
ss
push
int3
or
adc
in
add
mov
xor
mov
push
xor
inc
lods
sbb
loop
add
out
fld
xchg
and
push
sub
mov
jns
sbb
outs
and
inc
pusha
out
es
or
das
pusha
out
and
add
out
fs
mov
in
sub
adc
in
aad
stos
mov
mov
leave
pop
add
ja
jecxz
leave
push
repnz
sub
jecxz
repnz
mov
sub
or
in
inc
sahf
sbb
push
out
push
xchg
(bad)
in
out
push
out
or
lods
arpl
and
cmps
mov
dec
mov
cs
in
in
or
nop
dec
xor
call
or
shl
sub
push
add
(bad)
adc
sbb
xor
in
fs
rol
xor
cld
out
xchg
add
xchg
adc
in
pop
mov
cmp
mov
(bad)
imul
push
push
rcl
push
sbb
pop
call
inc
popa
mov
out
sbb
movmskps
fcom
in
je
or
and
int3
cmp
dec
inc
in
ss
sbb
xor
inc
in
pop
stc
sub
retf
and
adc
xor
sbb
mov
cmp
sti
or
shl
sub
fldenv
xor
mov
mov
or
test
call
js
adc
ins
sbb
and
jp
mov
cvtps2pi
enter
dec
imul
and
leave
jno
push
jo
sbb
inc
inc
inc
loop
cmps
or
mov
lods
mov
in
dec
cmps
in
mov
mov
inc
push
sbb
cmp
inc
xchg
arpl
call
in
sbb
enter
and
aad
stos
in
in
jg
leave
push
jb
or
and
xchg
enter
mov
or
push
test
fs
push
fs
sub
inc
xchg
cmp
out
xor
xchg
iret
or
shl
out
in
xchg
pop
dec
sub
out
xchg
xchg
in
out
sub
xor
and
mov
pushf
xor
inc
jb
sbb
lds
sbb
mov
xlat
es
leave
dec
add
sub
or
sbb
cmps
test
cmc
push
mov
xchg
xor
in
cdq
xchg
test
inc
jb
in
push
clc
fs
cmps
xchg
in
push
repnz
mov
xchg
cmp
pop
(bad)
cmp
in
xor
mov
pushf
loop
cmp
and
sahf
test
xor
pop
in
ds
dec
enter
jle
in
mov
call
in
add
sub
sbb
adc
cmp
and
stos
loopne
jmp
cmp
pusha
and
in
mov
sbb
sbb
mov
push
dec
js
sar
shl
arpl
push
cmp
arpl
sbb
ins
xlat
scas
adc
ins
jo
push
xor
daa
sub
add
xchg
add
(bad)
enter
sbb
addr16
fs
and
data16
or
pop
in
jb
xchg
movs
adc
sub
leave
xchg
sbb
imul
and
or
xor
ror
sar
xor
repnz
adc
ins
adc
cwde
imul
ins
cwde
cdq
add
or
out
adc
mov
push
jb
outs
adc
mov
add
jecxz
jns
xor
xchg
sbb
in
jb
mov
leave
jae
in
sub
mov
test
adc
adc
inc
xor
dec
jb
ja
add
test
lea
cmp
and
jb
js
dec
jns
and
or
js
enter
js
cwde
lds
adc
cmp
jb
sbb
add
pop
rcr
lods
jl
lahf
adc
add
jge
push
jp
mov
xchg
iret
push
dec
enter
jb
add
push
xchg
outs
jbe
aaa
xchg
or
jg
bound
test
jnp
lods
cwde
test
fidivr
mov
add
push
out
sar
jns
lods
popa
sub
outs
leave
in
push
adc
or
jge
jo
mov
imul
shl
cmp
retf
(bad)
push
adc
pop
lock
out
fs
(bad)
lods
cld
cmp
into
dec
call
lea
jno
jns
push
cmovns
push
test
mov
push
jecxz
aam
sbb
imul
mov
ja
mov
test
and
xchg
ret
sbb
pushf
out
inc
xor
pop
adc
nop
dec
inc
inc
mov
or
mov
sbb
push
dec
cs
shl
shl
push
mov
in
mov
jecxz
hlt
stos
pause
in
jmp
nop
mov
mov
in
pop
and
or
leave
enter
lea
and
out
fild
jl
test
leave
inc
lea
ror
or
test
jl
leave
enter
test
pushf
or
fiadd
xchg
xchg
xchg
add
xchg
add
mov
and
je
xchg
mov
and
add
fs
xchg
test
retf
nop
mov
and
xchg
xchg
xchg
xchg
ins
loopne
mov
inc
cld
xchg
or
xor
cwde
xchg
cld
out
xor
(bad)
fs
fs
retf
nop
mov
and
xchg
xchg
mov
mov
sbb
pop
and
xor
xchg
xlat
hlt
hlt
test
test
hlt
push
xlat
enter
push
push
mov
adc
call
and
shl
xchg
(bad)
mov
pushf
and
and
in
in
in
mov
mov
xchg
xchg
retf
inc
inc
mov
in
ins
aad
dec
inc
inc
cs
lahf
cmp
cmp
xchg
xchg
xchg
ins
cmc
mov
cmp
aam
es
cmc
mov
inc
xor
gs
fdiv
call
pop
xchg
push
pop
sbb
out
ret
popa
pop
adc
js
sub
adc
xor
sbb
fs
mov
ins
nop
nop
push
cld
out
cmp
mov
mov
mov
push
xor
dec
fiadd
fst
push
and
clc
jecxz
cmp
mov
jecxz
lea
imul
popa
cmp
or
movlps
addr16
and
js
mov
pushf
test
mov
js
pusha
test
xchg
in
jo
pusha
cmp
stos
stos
push
or
add
gs
xchg
cmp
push
jmp
pusha
mov
pop
std
mov
pop
dec
adc
mov
lahf
or
add
or
test
fs
lds
sbb
scas
inc
in
xchg
lods
and
xchg
sbb
push
mov
dec
es
push
in
mov
lock
xor
sbb
in
add
cmp
sub
mov
push
movs
fs
xor
pop
sbb
xchg
mov
jo
jns
pop
fs
mov
jecxz
nop
dec
test
push
in
mov
cdq
iret
sub
les
fs
loope
in
ss
std
fstp
out
in
outs
mov
sar
arpl
cdq
xchg
mov
dec
(bad)
sbb
push
pop
push
add
push
aaa
outs
es
push
xchg
int
fst
mov
cs
popf
xor
jnp
mov
ret
scas
add
daa
dec
add
imul
pop
and
jecxz
es
or
mov
js
push
movs
add
push
das
add
xor
jmp
mov
mov
dec
leave
sbb
shr
sbb
int3
mov
sbb
scas
fs
ins
nop
adc
and
js
xchg
xchg
aaa
mov
xchg
in
js
ins
mov
jo
push
pop
adc
and
cmp
fmul
out
jb
or
xchg
mov
mov
push
push
xchg
add
add
sti
push
in
dec
mov
cmp
or
inc
cmp
cmp
add
mov
inc
add
pusha
xchg
push
mov
xchg
inc
xchg
loope
cmp
dec
ret
in
lods
or
mov
lods
loope
add
lock
fmul
in
sub
pop
or
in
js
sbb
pop
rol
in
dec
push
and
sbb
mov
movs
test
mov
loopne
sub
enter
jecxz
dec
cmps
fs
(bad)
and
jns
enter
and
and
pop
leave
fs
push
dec
in
retf
xchg
mov
in
push
and
xchg
mov
and
xchg
dec
pop
xor
into
test
xchg
adc
pop
xor
xchg
rcl
in
sub
jb
xchg
cwde
shr
cdq
dec
pop
inc
in
jb
xchg
cmp
pop
xor
or
and
leave
xchg
aad
jecxz
das
sbb
mov
leave
xchg
dec
mov
cmp
in
dec
push
and
sbb
mov
dec
cmps
xchg
xchg
cmp
mov
clc
mov
dec
cs
clc
cld
and
xchg
sub
jl
dec
pop
xor
fidivr
leave
xchg
cmp
ins
fbstp
xor
mov
dec
xchg
sub
sub
or
push
jecxz
push
jb
enter
xor
leave
and
pop
sub
out
cmps
fs
ins
cmc
call
push
pushf
jmp
dec
jo
or
cld
test
imul
shl
jno
inc
out
lods
hlt
mov
mov
and
rol
xchg
test
sub
out
pop
xor
shl
xchg
or
mov
fucomp
fldcw
out
pop
dec
dec
test
xor
add
inc
nop
xchg
out
mov
test
xchg
ins
gs
pop
ins
push
sub
xchg
or
out
movs
imul
xchg
xor
in
lahf
(bad)
push
(bad)
call
jb
aas
out
sbb
or
in
or
mov
(bad)
pop
repz
cmp
jns
sub
hlt
xor
lock
jge
repnz
icebp
sbb
lock
xchg
push
inc
rol
push
js
aad
daa
sbb
jl
mov
clc
or
sbb
out
hlt
xchg
fadd
loop
inc
sub
clc
loope
movs
add
cmc
add
test
aam
mov
arpl
push
push
adc
scas
add
sub
cs
test
arpl
sbb
aad
push
aaa
sub
lods
sbb
xlat
ret
idiv
and
sbb
xchg
sbb
dec
out
xlat
or
pop
or
sub
stc
aas
leave
sub
ret
inc
or
cs
and
test
or
dec
mov
sti
mov
sbb
cmp
in
xchg
sub
xchg
stos
cld
std
enter
call
sub
pop
repnz
inc
addr16
sub
loopne
clc
(bad)
addr16
add
pop
leave
mov
add
inc
or
mov
cs
and
jae
in
and
out
icebp
xchg
call
sar
mov
push
in
xor
clc
mov
jl
outs
add
push
not
or
leave
xor
add
xchg
les
movs
jmp
mov
push
cmc
rcl
xor
push
mov
inc
or
add
call
in
hlt
clc
xchg
int
in
sbb
add
fmul
xchg
add
neg
(bad)
xor
int
push
push
lock
sti
cmps
mov
setno
sbb
push
adc
cdq
dec
cmp
pop
cmc
add
jb
test
scas
cld
mov
mov
mov
outs
(bad)
jl
add
mov
fld
je
xchg
adc
sbb
(bad)
rcl
sbb
enter
scas
mov
movs
movs
adc
enter
inc
cs
jb
mov
dec
inc
or
test
sbb
nop
inc
movs
and
pop
sub
in
sar
or
in
dec
cmps
fs
xchg
sub
push
in
dec
leave
test
and
(bad)
adc
sbb
leave
fsub
repz
inc
add
add
jge
test
or
jne
sub
xchg
xor
call
es
jb
in
call
retf
push
ins
(bad)
stos
stos
loope
sahf
cld
xor
cmc
adc
repz
mov
adc
jl
xchg
out
xor
fstp
pop
retf
fst
loopne
aam
xchg
pop
adc
in
lods
pushf
nop
sbb
(bad)
cmps
sbb
cwde
cwde
jbe
mov
sub
jb
fidivr
mov
pop
nop
push
xchg
xchg
retf
xchg
mov
xchg
sbb
cs
add
dec
adc
js
sbb
xor
jo
sbb
fdiv
push
int3
ret
sub
sbb
scas
lods
cmp
xchg
dec
inc
sbb
inc
push
push
mov
push
xor
in
or
xchg
adc
leave
dec
mov
pushf
retf
mov
fwait
loop
inc
xchg
test
stos
adc
lds
add
dec
and
test
push
(bad)
mov
dec
leave
xchg
mov
or
xor
movs
in
add
and
push
xor
mov
and
daa
pushf
and
jo
ror
pushf
xchg
leave
aam
push
add
xor
dec
cmp
inc
call
sub
movs
mov
and
xchg
dec
sahf
push
xor
ins
mov
cmp
sub
cmp
imul
sbb
fs
enter
fs
in
push
xor
nop
add
cmp
jne
nop
cs
mov
enter
inc
fs
leave
push
shl
adc
and
ss
mov
mov
nop
sub
xor
or
cmp
dec
jb
ss
sub
xor
enter
xor
push
add
sub
lds
adc
shl
dec
push
dec
and
cmp
cmp
cmp
imul
push
jb
aaa
in
cmp
enter
les
mov
icebp
cmp
ins
sar
mov
cs
lahf
push
add
add
xchg
inc
leave
add
in
mov
ds
in
aad
and
mov
or
push
iret
imul
push
cld
mov
mov
mov
xchg
retf
xchg
outs
sub
xchg
mov
in
loope
inc
out
xor
call
mov
das
test
xchg
dec
mov
mov
in
cmp
dec
inc
(bad)
push
daa
adc
jl
fwait
call
pop
cmc
sbb
daa
js
add
sahf
dec
pop
jo
stos
out
inc
pop
adc
inc
add
inc
sub
in
inc
adc
pushf
inc
sbb
mov
ret
pusha
pusha
test
pusha
aas
and
xchg
and
mov
inc
enter
mov
push
push
nop
dec
xchg
test
inc
mov
dec
and
xchg
pop
nop
fwait
pop
inc
sti
dec
dec
leave
push
repnz
cld
dec
and
xchg
aam
dec
xchg
push
leave
and
sub
xchg
dec
inc
dec
int3
in
xchg
mov
add
sbb
sub
push
repz
sbb
scas
sub
arpl
xchg
mov
cmp
add
inc
in
mov
mov
and
sti
cmc
inc
mov
adc
push
fild
dec
jmp
xchg
jb
xchg
leave
lock
mov
dec
leave
jp
xchg
icebp
sub
aaa
adc
adc
adc
mov
movs
pop
dec
int3
mov
mov
pop
or
push
or
dec
sub
imul
in
mov
mov
cs
leave
retf
ins
dec
call
or
mov
cmps
or
adc
dec
xchg
dec
out
xchg
repnz
enter
into
ds
pop
mov
and
inc
pop
ret
out
xor
in
into
push
add
fcom
iret
or
jae
pop
test
mov
in
cmp
xor
jo
in
in
push
leave
mov
ins
fnstenv
scas
xchg
in
mov
fs
push
or
mov
in
repnz
fiadd
xchg
arpl
imul
ins
add
xor
shr
fdiv
xor
cmp
mov
out
outs
jmp
add
lods
sub
xor
inc
add
push
fistp
aas
sub
xor
jb
mov
pop
pusha
jmp
leave
mov
outs
inc
into
std
pop
in
addr16
sub
xor
into
cmp
(bad)
push
push
iret
rcl
mov
aas
in
dec
sahf
mov
push
bound
imul
push
data16
push
push
lock
cdq
push
hlt
mov
pushf
dec
leave
repz
pushf
cmp
push
xor
sub
add
lods
jbe
pushf
cmp
or
inc
push
ds
and
mov
inc
fcomp
sub
in
dec
cmp
xor
xchg
xchg
and
ins
xor
sbb
cmps
ins
sub
or
mov
mov
xchg
arpl
pop
sub
inc
push
sub
outs
and
sbb
inc
sbb
imul
gs
xor
popa
and
adc
popa
rol
test
push
and
mov
push
xor
out
out
or
mov
cmp
and
cmp
pop
mov
mov
mov
ss
mul
movs
bound
xchg
sbb
push
pusha
call
xchg
call
mov
ss
cwde
push
lea
push
adc
pop
jl
lods
shl
adc
js
rcr
popf
into
jg
pop
jns
push
push
nop
sbb
xor
fwait
mov
dec
(bad)
imul
lea
dec
sub
and
pusha
add
sub
and
in
xor
dec
jb
adc
push
mov
sbb
cmp
jecxz
addr16
nop
mov
stos
(bad)
push
dec
jne
xchg
add
xchg
add
xchg
ror
xor
(bad)
hlt
mov
or
in
sub
ficom
cmps
xchg
mov
push
shr
ficom
inc
loope
sbb
or
inc
jl
or
mov
inc
pop
jae
mov
adc
sahf
sbb
xchg
retf
adc
inc
sahf
pop
xchg
or
inc
cmp
mov
and
inc
add
sbb
push
mul
or
es
test
mov
in
dec
arpl
int
hlt
das
mov
push
mov
popf
xchg
add
xchg
xchg
movs
cmp
inc
inc
sub
test
inc
leave
cwde
push
cmp
adc
sub
push
ror
pop
adc
add
sahf
lock
jecxz
and
add
cs
aas
test
add
ins
pop
push
fs
inc
pop
pusha
fs
mov
lods
cld
iret
adc
(bad)
vshufps
dec
xor
test
aas
sub
inc
fild
jo
enter
js
jb
xchg
test
adc
jg
inc
lahf
jne
mov
mov
mov
xor
(bad)
sbb
fcmovnu
pop
mov
adc
or
and
xchg
outs
add
add
sbb
in
mov
inc
cwde
pushf
adc
mov
and
push
ret
pop
mov
or
mov
xchg
jne
xchg
loopne
push
or
enter
mov
lock
rcr
xchg
daa
dec
pop
enter
rcr
cld
enter
cwde
sbb
test
clc
xor
fs
fs
cmp
jg
mov
xor
or
in
in
adc
in
aas
ins
sub
rcr
addr16
in
push
push
daa
call
repnz
mov
lock
push
sbb
pop
call
xchg
pop
ret
pop
leave
inc
ds
push
push
mov
clc
(bad)
in
retf
stc
clc
icebp
lock
xchg
dec
cld
or
inc
adc
pop
add
or
mov
inc
sbb
cmp
dec
adc
test
jge
or
adc
pop
adc
adc
sbb
dec
dec
je
sbb
pop
and
or
push
fiadd
inc
and
sbb
enter
xor
xor
xchg
mov
popa
aaa
stc
and
ds
inc
inc
sahf
sbb
sbb
jg
inc
inc
inc
mov
test
test
cdq
dec
mov
xor
jg
inc
push
mov
dec
cmp
enter
push
pop
(bad)
mov
sbb
int3
not
fs
int3
mov
pop
push
and
and
dec
lods
dec
sub
in
jmp
pcmpeqw
or
push
push
mov
lahf
fiadd
or
movs
jg
ret
jg
cld
ror
xor
js
or
mov
jle
js
rcl
xor
cmps
or
mov
and
push
pop
xchg
test
div
cmp
push
adc
sar
jb
mov
inc
pushf
mov
jmp
sub
add
pop
mov
adc
fdiv
mov
aaa
test
mov
cwde
mov
mov
mov
inc
mov
mov
mov
cwde
sbb
mov
retf
jecxz
call
daa
pop
and
pop
test
in
mov
dec
retf
cld
pushf
adc
sahf
and
xor
lods
or
push
mov
lods
cs
retf
test
cmps
repnz
nop
push
movs
sbb
mov
xchg
mov
mov
lods
push
or
jl
lods
lods
lahf
fistp
fadd
mov
stos
mov
mov
lods
mov
loopne
test
js
add
pop
mov
fs
test
adc
push
cmp
shl
or
fcomp
xchg
jl
int3
jmp
mov
rcl
stc
in
out
paddusw
mov
test
pushf
lahf
loopne
inc
pop
pop
in
fcom
sbb
addr16
in
inc
push
hlt
clc
cld
mov
add
int3
push
adc
(bad)
push
sbb
push
push
adc
push
push
add
in
rcl
fsubr
(bad)
fdivrp
call
jle
push
adc
mov
popf
adc
lock
sbb
sbb
pop
and
dec
mov
imul
sahf
cmp
add
and
and
retf
sbb
aas
in
cmp
pop
add
add
xchg
(bad)
jle
test
mov
mov
mov
loopne
popa
xor
pop
nop
xchg
addr16
sub
push
and
sbb
(bad)
(bad)
cmp
cmp
or
pop
inc
jle
imul
add
inc
inc
int3
hlt
jne
vmaxsd
hlt
dec
test
adc
iret
ja
mov
adc
pop
pop
imul
lock
cdq
add
fcmove
and
add
mov
nop
movntq
dec
xchg
out
xchg
adc
in
inc
in
jb
and
push
mov
mov
xchg
pushf
xor
in
les
jg
pusha
imul
call
jg
inc
adc
inc
add
(bad)
sub
nop
sahf
add
jle
dec
sbb
iret
js
js
ds
je
jne
or
mov
gs
lea
test
lea
fwait
cwde
and
push
rcr
inc
lahf
mov
jae
lods
cmp
sbb
daa
sub
dec
mov
popa
cli
out
mov
test
out
fld
xchg
pop
test
cmps
gs
out
enter
pushf
sbb
loop
cmps
movs
imul
lahf
mov
jbe
outs
repnz
pop
cmp
pop
mov
mov
loopne
or
adc
fild
mov
jg
fdiv
js
popf
jecxz
mov
mov
es
gs
cmp
dec
mov
lahf
jns
or
aam
adc
push
int3
mov
xchg
daa
rcr
pop
call
enter
add
je
popf
clc
sahf
pop
mov
dec
int
out
fcomp
mov
mov
push
mov
add
jg
repnz
pop
call
jle
in
jmp
xor
in
call
push
xchg
in
jecxz
shl
adc
enter
lock
lea
add
cld
dec
dec
(bad)
movs
pushf
jnp
add
pop
add
call
call
mov
pop
or
in
pop
or
or
or
pop
shl
pop
or
sbb
sub
lahf
add
push
push
mov
adc
out
lea
daa
jo
mov
adc
mov
pop
sbb
addr16
and
pop
adc
adc
fistp
and
sub
jb
in
es
and
sbb
rcr
mov
push
push
es
pop
or
(bad)
mov
sub
adc
mov
mov
mov
jns
add
pusha
lahf
into
call
xchg
retf
in
mov
cmp
in
and
inc
jb
cmp
jns
fidivr
ret
fbstp
repnz
ins
push
mov
lahf
cdq
add
dec
xor
in
add
push
pop
ret
xchg
push
mov
pop
pop
jb
in
push
push
dec
push
xchg
and
push
add
dec
fiadd
test
lds
pop
lds
dec
pop
call
push
sbb
fist
enter
movs
movs
push
ins
ins
ins
imul
imul
bound
dec
mov
ja
ret
pop
je
jg
lahf
sub
xchg
adc
push
dec
stos
js
pop
jo
adc
sahf
pushf
inc
es
pushf
jl
sbb
cmp
and
inc
cs
jle
retf
movs
xor
ja
je
cmp
cwde
(bad)
sbb
adc
(bad)
repz
dec
daa
pop
and
mov
jb
mov
pop
cs
mov
daa
push
adc
test
mov
push
push
out
(bad)
call
mov
pop
inc
sub
vpmacsdqh
mov
pop
cs
and
xchg
test
mov
mov
mov
add
or
pushf
in
in
cmc
lahf
inc
repnz
cs
popf
xlat
pushf
xchg
dec
mov
xchg
in
mov
xchg
dec
push
in
mov
pop
mov
cs
fwait
cdq
call
fisttp
rcl
lods
lock
sbb
test
lahf
fld
dec
movs
mov
add
lods
mov
retf
adc
and
mov
inc
mov
inc
cs
mov
lods
movs
sbb
inc
movs
lods
scas
cmps
or
jb
test
addr16
jmp
pop
je
push
test
pop
adc
or
sbb
jo
or
daa
inc
pop
(bad)
fild
jb
pop
mov
lods
pop
aas
retf
repz
or
js
xchg
sahf
lea
retf
pop
push
jns
retf
ror
xchg
retf
(bad)
mov
push
rcr
repnz
je
retf
rcl
sub
(bad)
adc
mov
cwde
or
loopne
pop
shr
push
ret
pushf
in
rcr
jo
jo
loopne
pmaxsw
loopne
movs
inc
or
popf
ss
fldcw
pop
and
mov
or
jl
call
(bad)
lock
xchg
xchg
cmp
rcr
inc
repz
push
xor
sar
and
fistp
pop
hlt
inc
xor
in
push
in
and
stc
pop
fbstp
add
gs
or
pop
or
pop
push
mov
sbb
cld
sbb
stc
pushf
std
imul
push
popf
or
cld
pusha
pusha
in
or
pop
inc
adc
adc
adc
in
jb
pop
sbb
pop
or
inc
dec
repnz
pop
jmp
jg
pop
pop
mov
adc
test
fnstenv
sbb
lahf
outs
in
mov
pop
pop
imul
fisubr
sub
into
add
sbb
mov
ss
(bad)
sti
dec
js
mov
xchg
xor
xor
sahf
mov
repnz
lahf
cmp
(bad)
stc
shl
cmp
inc
mov
inc
lahf
outs
dec
out
cdq
mov
mov
add
push
(bad)
push
fistp
mov
pop
push
pop
xor
xor
or
aas
adc
dec
mov
movs
mov
cwde
pop
sbb
xlat
in
lods
pop
pusha
sahf
adc
cdq
push
add
add
enter
fist
push
(bad)
cld
jb
push
dec
mov
pop
jo
and
ds
pop
jno
jo
pop
leave
rcl
daa
pop
stc
in
dec
mov
je
jne
xchg
inc
cs
ins
ins
xchg
out
inc
pop
inc
dec
inc
xchg
fwait
jl
push
mov
or
sbb
sbb
mov
sub
mov
and
sahf
aas
and
repnz
pop
jo
lahf
push
cdq
in
inc
inc
nop
xchg
push
xchg
mov
cmp
adc
call
cwde
call
cwde
dec
and
inc
mov
or
pop
jg
mov
nop
mov
mov
aas
cmc
add
jb
test
pop
lods
xchg
test
mov
leave
dec
and
je
pop
and
pop
pop
pop
nop
cmp
retf
imul
xchg
mov
xor
mov
mov
pop
push
mov
lods
push
arpl
test
jecxz
nop
pop
fistp
push
jns
pop
shr
cld
fisttp
(bad)
mov
mov
mov
mov
xchg
xchg
and
enter
test
rol
out
sub
mov
adc
add
or
mov
pop
int3
imul
add
les
repnz
retf
pop
loopne
in
call
pop
in
pop
mov
vunpcklps
fistp
cmp
inc
sbb
fstp
or
icebp
aaa
lock
pop
imul
test
je
cmps
dec
dec
adc
adc
hlt
pushf
cmp
push
or
jmp
lods
pusha
and
xchg
hlt
lahf
mov
inc
sahf
in
paddw
adc
dec
into
(bad)
adc
mov
dec
xor
xchg
adc
cld
cld
ja
sub
push
inc
pop
add
pusha
sbb
test
retf
pusha
adc
jl
(bad)
cld
ror
or
pushf
sahf
test
retf
xchg
mov
mov
enter
sbb
ret
aas
xchg
mov
sub
mov
in
lahf
xor
dec
es
popa
inc
aas
add
enter
movq
sahf
mov
test
inc
cmps
jle
inc
test
cmp
ret
nop
out
xchg
cld
adc
in
adc
adc
int3
xchg
test
inc
dec
jae
push
cmp
adc
and
dec
jle
xchg
pop
pusha
pusha
mov
cdq
fs
inc
pop
push
push
xor
es
inc
hlt
ins
shl
sbb
je
xchg
sbb
lea
retf
enter
frstor
xor
data16
cmp
test
and
xchg
adc
cld
add
cmp
ins
jle
jl
jl
mov
in
cwde
(bad)
nop
inc
push
pushf
mov
cwde
leave
das
loope
test
loopne
pusha
lods
mov
ins
jle
nop
adc
xchg
call
imul
mov
mov
push
stc
mov
(bad)
cs
adc
add
push
jp
cmp
xchg
stc
ror
pop
int3
into
(bad)
mov
out
mov
and
scas
rcl
pusha
aam
fdivr
lods
test
pusha
(bad)
dec
loopne
mov
in
cwde
xor
or
pop
jae
rcl
ins
enter
dec
push
ins
enter
and
out
movsx
lea
mov
add
pop
pusha
cli
mov
lock
call
push
dec
pop
jae
iret
push
cmp
cld
popa
add
inc
ds
jmp
pusha
cld
ins
hlt
sbb
push
xchg
push
in
push
sub
std
hlt
pop
mov
aam
popa
add
(bad)
(bad)
pushf
cwde
ret
retf
mov
mov
enter
push
mov
inc
xchg
dec
xor
cld
shl
dec
mov
popa
sbb
repnz
xchg
and
popa
sub
xchg
pop
call
xor
xor
popa
cmp
popa
aas
xchg
enter
adc
jae
leave
retf
jae
popa
inc
popa
inc
sahf
cmp
repnz
dec
popa
dec
popa
push
popa
push
add
dec
jle
cmp
retf
or
ins
cmp
jae
leave
out
cmp
pop
xchg
jg
pop
popa
pop
stos
adc
out
push
ins
push
(bad)
push
pop
in
lahf
je
(bad)
les
jb
in
pop
push
push
and
inc
dec
push
rol
in
enter
pop
or
jb
pop
fbstp
mov
push
setne
sbb
push
cwde
xchg
shr
pop
adc
push
mov
out
and
xchg
je
leave
aas
sub
jl
lahf
mov
mov
pop
dec
inc
sahf
loope
ins
or
cmps
mov
mov
test
mov
lea
fwait
adc
mov
test
mov
fbstp
mov
fstp
test
nop
aaa
loopne
jns
jne
lods
pushf
mov
xchg
mov
mov
test
outs
jb
je
popa
pushf
ins
xchg
pop
out
pop
lods
push
aas
sahf
test
retf
jl
lods
mov
xchg
add
pop
mov
cs
mov
aas
movs
pop
push
mov
pushf
aas
out
test
xchg
pushf
rol
mov
popa
mov
sbb
mov
ins
mov
mov
pop
mov
jecxz
jno
jg
movs
les
xchg
enter
int3
cli
popa
(bad)
test
jge
add
repnz
xchg
rol
inc
sti
jl
popa
fcomp
jg
add
cwde
jg
loopne
dec
lods
repnz
call
xchg
call
jge
call
mov
nop
hlt
clc
adc
inc
cld
bound
hlt
inc
jb
and
in
mov
or
enter
or
cli
mov
std
bound
cmp
bound
bound
bound
bound
sbb
in
and
outs
pop
dec
sahf
dec
ins
outs
ins
fimul
mov
adc
adc
adc
push
pop
jb
repnz
or
add
outs
jo
sub
pop
mov
in
(bad)
test
and
mov
call
cwde
sbb
pop
inc
sbb
push
adc
and
adc
pop
cs
(bad)
movs
and
gs
push
or
sahf
out
pushf
sbb
and
pop
leave
gs
retf
push
sbb
sbb
adc
mov
(bad)
jl
mov
cwde
sub
daa
jb
in
es
and
sbb
sbb
pop
js
sbb
push
das
mov
sub
sub
and
imul
popf
mov
xor
test
cmp
fxch
cs
xor
jg
retf
in
jg
jne
jo
iret
ja
cdq
lods
inc
std
bound
cmp
repnz
sbb
ins
aas
jae
pop
ja
dec
bound
or
shl
add
inc
inc
(bad)
mov
in
cmp
stos
inc
jg
push
div
push
mov
or
into
movs
adc
add
jns
sub
inc
jg
and
inc
xchg
mov
or
pop
pusha
lahf
pusha
pop
pop
push
mov
pop
retf
movs
rcl
adc
xchg
push
push
lahf
jae
inc
push
fmul
retf
fs
loopne
mov
es
pop
leave
bound
outs
pop
pop
mov
pop
pop
mov
mov
add
je
out
adc
js
in
out
js
push
mov
add
and
outs
or
in
jno
jo
ja
add
push
jg
pop
pop
jae
movs
xchg
jle
in
nop
retf
jge
jbe
je
or
jae
rcl
bound
cmp
jns
rol
js
pop
jle
dec
test
adc
movs
in
mov
test
adc
in
push
mov
xchg
sahf
mov
in
mov
xchg
add
xchg
test
mov
xchg
pop
push
sub
movs
adc
repnz
mov
jg
mov
outs
cwde
pop
pop
inc
scas
mov
inc
retf
gs
mov
in
sbb
xchg
pushf
dec
dec
lods
inc
inc
mov
mov
nop
retf
sahf
inc
ds
in
cmp
and
mov
adc
cdq
or
mov
push
lds
mov
mov
inc
push
leave
pop
lahf
(bad)
aam
mov
icebp
es
aas
cmp
mov
leave
fcomp
sbb
repnz
or
xor
mov
movs
out
js
adc
(bad)
enter
dec
xor
enter
in
lock
outs
sbb
lods
fld1
test
arpl
lahf
sahf
mov
loopne
adc
outs
pop
mov
fimul
mov
arpl
loopne
or
sbb
adc
arpl
cld
pop
sub
jae
cmp
jae
push
adc
cli
sub
sub
inc
mov
mov
ret
aas
outs
loope
cmp
sub
ficomp
jmp
cdq
pushf
aas
arpl
sub
cmp
and
jns
xor
cmp
arpl
xor
push
jl
jg
mov
inc
or
and
push
mov
(bad)
cmp
mov
dec
dec
mov
mov
dec
jg
repnz
pop
call
push
jg
push
xor
pop
fiadd
fs
jg
adc
pop
xchg
retf
arpl
arpl
test
arpl
in
push
sub
outs
outs
outs
outs
pop
add
inc
and
lahf
mov
xchg
in
cmp
data16
fs
movs
xor
pop
pop
popa
adc
xchg
pop
pop
fild
mov
or
arpl
in
bound
arpl
sub
xchg
arpl
arpl
iret
test
outs
outs
test
outs
dec
pushf
dec
jb
or
jbe
push
jl
jge
push
sub
add
in
dec
adc
js
adc
retf
pop
and
int3
scas
or
jnp
mov
nop
leave
xchg
inc
add
js
jo
xor
nop
pop
das
lds
pusha
push
cmp
cwde
pushf
mov
popf
arpl
rcl
arpl
xchg
call
mov
dec
repz
cmp
push
lods
out
outs
les
cmp
or
xor
cmpsd
cld
aas
jb
mov
or
mov
arpl
adc
jb
or
push
dec
pop
sbb
mov
jp
jmp
xlat
xchg
cmp
aam
inc
leave
in
xlat
mov
push
lock
ds
scas
pushf
fstp
jecxz
ins
out
xchg
xchg
mov
cwde
repnz
ins
mul
lea
inc
push
push
jo
pop
ds
fs
inc
sahf
les
(bad)
hlt
push
sahf
cmp
hlt
add
add
sub
sbb
movs
aas
jb
push
mov
cmps
or
cmps
add
mov
in
in
stos
pop
push
fbld
sub
fs
(bad)
std
movhps
(bad)
cld
jg
cmp
enter
mov
mov
into
xchg
push
jb
jo
call
ret
jg
aad
mov
jo
pop
jl
repnz
adc
lahf
cwde
sahf
xchg
adc
adc
sbb
cmp
jg
outs
jb
fs
add
lahf
jb
leave
jae
in
jb
and
shl
lahf
adc
lahf
fs
cmp
fs
loopne
cli
popf
jle
cmp
mov
add
adc
sahf
mov
rcl
int3
dec
adc
add
pop
dec
xchg
enter
loope
out
adc
or
lahf
test
int3
sub
retf
fs
fs
in
and
push
sbb
sbb
mov
in
inc
push
jl
test
push
cmp
xchg
cwde
pushf
sbb
test
in
push
daa
lods
lahf
int3
add
fbld
adc
ss
and
int3
lahf
test
dec
xor
nop
call
js
jo
jo
cmp
adc
push
pop
add
pusha
repnz
mov
cmps
rcl
cmp
fcom
fmul
jns
dec
push
cmp
in
inc
push
cmp
in
lock
or
adc
inc
inc
ret
jae
add
mov
add
repnz
or
psubb
adc
mov
pop
or
ja
adc
fimul
add
and
in
movs
sahf
fcom
dec
rol
xchg
xchg
adc
jg
aam
aam
inc
push
enter
sub
fist
sub
gs
sbb
and
sbb
jno
jno
mov
jno
jb
cmp
cmp
mov
gs
xor
xor
cmp
(bad)
repnz
adc
int3
pushf
dec
lea
retf
pop
dec
or
mov
and
into
push
ja
inc
(bad)
shr
stos
aas
adc
retf
repz
jno
xor
xchg
mov
or
fidiv
call
pusha
fcmovbe
fisub
or
or
jg
retf
xor
xchg
jmp
sub
add
pop
fadd
mov
push
ret
inc
(bad)
xchg
cdq
int3
push
rcr
pop
and
lock
add
push
int3
or
enter
push
outs
repnz
jb
dec
cmps
cmp
aas
sub
push
mov
pop
mov
je
mov
sar
jl
lahf
ret
es
dec
gs
adc
enter
mov
sub
rol
in
in
rol
add
aad
(bad)
pop
fcomp
dec
sbb
dec
fdiv
call
fstp
sbb
loope
sbb
or
enter
in
fadd
in
call
fs
in
out
out
push
push
fs
lock
call
hlt
cmc
xor
add
div
clc
add
and
stc
cli
sti
sub
xor
cld
std
hlt
xchg
xchg
sbb
pushw
leave
dec
pop
repnz
imul
and
data16
outs
mov
pop
ret
fbstp
sbb
je
sbb
push
fisub
jo
sbb
test
xchg
mov
dec
pop
repnz
fbld
addr16
addr16
addr16
or
pop
ret
nop
mov
ins
aas
or
nop
add
push
nop
add
push
push
sbb
dec
pop
jnp
imul
das
jns
imul
fst
imul
ret
inc
push
fs
fistp
cmp
cmp
cmp
fs
push
cmp
test
inc
or
inc
inc
enter
inc
inc
inc
mov
pop
imul
shl
fild
fbld
imul
mov
ins
push
add
repnz
push
mov
or
jl
jle
enter
add
sub
ret
fild
xor
adc
and
xor
jg
mov
pushf
imul
adc
xchg
xchg
imul
sbb
int3
jge
dec
imul
sbb
sbb
or
mov
enter
nop
add
sbb
mov
sbb
push
fimul
mov
pop
repnz
ins
push
das
jns
dec
ins
(bad)
adc
mov
ins
adc
sti
xchg
adc
adc
or
and
or
sub
or
sub
add
and
xchg
push
jno
mov
mov
ins
mov
push
in
das
ins
ret
ins
les
sar
enter
nop
add
retf
nop
add
nop
int3
int
jge
imul
pop
ins
shr
mov
repz
aam
inc
push
fs
(bad)
xlat
fs
push
fs
fiadd
inc
push
fcmovnu
call
sbb
loop
sbb
add
nop
in
out
add
call
dec
pop
repnz
sub
in
das
jns
xor
outs
xor
adc
mov
ret
fbstp
and
xor
and
cmp
mov
mov
sbb
pop
sbb
dec
sbb
xchg
repnz
xchg
and
outs
outs
daa
outs
sub
outs
sub
(bad)
rcr
outs
sub
sar
pop
jb
xor
movs
stc
es
outs
retf
xor
gs
outs
and
outs
outs
xchg
pop
jb
outs
outs
outs
or
movs
rcr
aas
cmp
sbb
inc
push
sbb
push
mov
jmp
dec
inc
push
fs
dec
dec
fs
push
fs
dec
dec
and
dec
add
adc
mov
xor
imul
xor
push
jo
jo
jo
xchg
xchg
mov
les
inc
sahf
outs
bnd
xor
or
add
jo
dec
or
or
add
mov
dec
or
in
mov
rcr
pop
lahf
and
or
mov
add
push
sub
add
cmp
lods
xchg
adc
xor
xor
xlat
loopne
push
and
dec
push
mulps
mov
(bad)
lock
add
nop
xor
mov
add
frstor
pop
(bad)
jne
sbb
xor
xor
xchg
or
add
movs
or
pop
pop
xchg
stos
push
lods
aam
adc
add
lahf
cmp
cmps
jo
mov
sbb
cmp
ror
cld
add
push
test
inc
push
inc
retf
dec
add
mov
or
adc
aam
mov
fnstcw
dec
inc
ss
pushf
pop
fcomp
dec
je
and
js
xor
mov
fadd
sub
mov
test
inc
mov
mov
dec
mov
cdq
ins
add
jmp
leave
xchg
adc
movs
dec
mov
adc
call
or
leave
jae
add
repnz
and
fcomp
scas
fs
push
pop
pop
or
sbb
lds
add
or
push
add
mov
mov
fist
push
jno
repnz
iret
pop
iret
push
iret
rcr
shl
clc
adc
xchg
jmp
add
add
mov
sub
mov
xchg
and
daa
inc
movs
sbb
popf
dec
or
loop
hlt
cwde
push
nop
cmps
xor
iret
xchg
int3
or
push
adc
mov
and
test
(bad)
int3
inc
(bad)
push
sbb
int3
adc
add
push
push
add
jecxz
ja
add
mov
push
loope
imul
or
adc
das
adc
mov
pop
and
mov
pusha
sbb
push
sti
lock
movs
xchg
xchg
mov
push
and
ins
and
dec
sbb
pop
cmp
je
pop
dec
adc
pop
push
pop
push
dec
jmp
sbb
or
in
lea
or
lock
dec
lods
xchg
sub
xor
ror
ds
xchg
fdivr
add
fstp
(bad)
rdmsr
adc
imul
cwde
mov
nop
lock
and
pop
test
not
cdq
scas
jnp
in
cld
and
dec
sub
inc
push
cs
sbb
and
dec
sub
in
lock
retf
icebp
add
or
adc
movs
jb
in
xor
test
push
fs
js
mov
pushf
mov
xchg
mov
(bad)
rcr
movs
aam
in
cld
dec
sub
stc
repnz
adc
retf
and
cmp
jb
in
push
fs
js
mov
mov
and
in
leave
out
call
nop
cs
ret
adc
xchg
push
cs
cmp
xchg
dec
sub
jo
in
retf
dec
xchg
push
mov
push
mov
cs
fcomp
lock
hlt
add
xchg
retf
adc
movs
jb
and
cmp
test
pop
js
sub
xchg
retf
or
mov
push
mov
ds
push
cs
cld
mov
xchg
dec
movs
and
xor
movs
push
mov
mov
js
mov
and
les
enter
push
mov
aam
push
cs
pop
fdiv
or
sbb
dec
sub
in
retf
push
in
mov
lock
cs
nop
cld
and
ret
add
add
or
repnz
adc
add
pop
sbb
sub
cmp
dec
in
retf
pop
sub
movs
jb
jo
adc
and
adc
in
pop
das
jb
add
popf
fsubr
mov
dec
adc
call
sti
out
push
push
stc
sbb
fdiv
mov
cmp
std
jl
sahf
sahf
xchg
adc
jns
test
aaa
sbb
mov
and
or
test
sub
inc
or
dec
leave
js
pcmpeqw
gs
pop
mov
cmp
lods
xchg
pop
xchg
jg
sti
xchg
xchg
dec
ret
fistp
xchg
pop
and
xchg
xchg
inc
add
jne
sbb
inc
lea
sub
dec
lea
sub
icebp
jae
push
push
adc
test
(bad)
mov
xor
cmp
add
inc
adc
mov
movs
pusha
push
xor
push
push
push
mov
mov
xchg
and
sub
in
adc
dec
sti
adc
pop
adc
and
fcom
xchg
dec
mov
add
jge
mov
adc
jge
pop
push
xor
jbe
test
push
fld
add
call
pop
mov
bound
dec
adc
dec
inc
inc
dec
mov
retf
xchg
add
jl
adc
cwde
sub
jl
cmps
push
stos
push
push
enter
xchg
jl
add
out
fcmovb
leave
push
stos
jecxz
push
adc
ret
push
call
ja
xchg
mov
dec
cmp
sub
imul
pop
push
add
pop
sbb
ror
inc
or
shl
ror
nop
sub
cmp
cmp
xor
xchg
dec
mov
test
mov
push
push
mov
jmp
nop
lock
jl
sbb
nop
out
into
nop
pop
in
shr
sbb
push
fdivr
icebp
mov
je
mov
loop
dec
jae
xchg
jb
jb
cmps
repnz
(bad)
repnz
nop
scas
bnd
or
icebp
repnz
aas
cld
mov
es
pop
push
sub
out
sbb
pop
loopne
and
js
cmp
inc
fistp
jb
inc
mov
mov
retf
lea
add
mov
dec
enter
mov
add
sbb
or
test
and
or
ja
mov
pop
dec
test
adc
jns
push
mov
pop
mov
out
ret
dec
xchg
scas
sbb
mov
push
inc
and
mov
test
mov
mov
mov
cmp
push
adc
sbb
gs
dec
jle
adc
(bad)
jl
dec
push
xchg
jl
(bad)
sti
call
pop
jl
loope
push
push
repz
sbb
jns
cwde
xchg
test
push
add
jmp
and
push
sti
in
mov
pop
or
js
jmp
mov
sbb
sbb
pusha
das
test
hlt
xchg
inc
test
scas
dec
mov
mov
nop
out
jb
add
push
pop
dec
enter
pop
(bad)
lods
pop
lock
inc
lods
pushf
fld
gs
es
loopne
mov
or
jns
repnz
and
xchg
stos
and
js
xor
mov
sti
imul
mov
and
adc
xor
ins
test
jmp
cmp
adc
push
push
adc
jg
add
and
xor
sbb
lahf
aad
ds
mov
sti
mov
cmp
ss
xlat
adc
ds
inc
sbb
adc
sbb
push
and
mov
in
clc
pop
and
pusha
sub
mov
mov
test
and
test
xchg
add
adc
fneni(8087
push
sub
and
cdq
dec
mov
and
cmp
sub
inc
jae
and
mov
mov
mov
sub
push
sbb
and
add
push
jb
mov
mov
mov
test
test
lds
jno
pop
ja
xor
push
mov
jns
repnz
mov
sbb
aas
rol
ret
mov
mov
int3
ror
jg
mov
rol
aas
jno
call
iret
in
xor
div
mov
hlt
aas
mov
jb
sbb
add
cwde
xor
jb
cmp
xchg
pushf
xor
xchg
movs
(bad)
movs
(bad)
cmps
cs
mov
dec
in
xor
jb
mov
jb
sub
add
mov
mov
test
pop
xor
push
lea
movs
arpl
pop
enter
push
cmp
or
mov
pop
out
adc
push
les
stos
push
push
ins
mov
push
mov
mov
inc
cs
add
add
inc
push
jl
xchg
dec
jb
mov
inc
inc
leave
mov
pop
push
jmp
sbb
je
inc
xchg
dec
leave
test
inc
sub
push
xor
or
inc
add
ins
loope
xor
cmp
movs
clc
inc
dec
add
or
and
add
sti
pop
xor
push
add
fisttp
add
xor
cmps
popa
aam
fwait
mov
add
pop
mov
fcom
mov
sbb
jo
and
sbb
adc
mov
mov
adc
push
add
and
cwde
(bad)
adc
sbb
xchg
jne
test
sbb
mov
dec
bound
inc
ror
ret
adc
jmp
dec
sti
push
call
mov
je
adc
jl
sub
ficomp
or
mov
add
cdq
push
je
les
and
in
(bad)
call
push
sub
mov
or
movs
push
add
or
imul
test
sbb
loopne
push
mov
data16
mov
sub
sbb
arpl
sti
push
inc
xor
jl
mov
shl
ret
jle
and
scas
cli
mov
mov
pop
enter
mov
dec
sub
rol
movs
js
jmp
nop
xchg
pop
xchg
mov
enter
xchg
xchg
add
dec
in
xchg
nop
mov
mov
jb
jb
xchg
push
div
sub
add
sub
sbb
rcl
jbe
and
sbb
pushf
xchg
mov
inc
mov
movs
xor
mov
and
add
jl
push
shl
and
and
push
movs
add
pop
repz
and
test
push
cmp
adc
or
std
retf
dec
cmp
mov
mov
popf
xor
cmp
popa
into
mov
jb
test
into
mov
push
aad
test
cs
push
jmp
test
in
inc
test
push
fs
repnz
add
pop
jl
lock
arpl
sub
fbld
imul
retf
gs
test
xchg
sbb
cdq
push
inc
jne
mov
in
leave
enter
xchg
and
xor
test
leave
and
mov
sahf
and
pop
add
daa
xchg
xor
push
es
stc
add
push
jae
inc
cmp
or
sub
dec
add
inc
repnz
jnp
pop
aam
sbb
gs
mov
xchg
push
xchg
rol
shl
xchg
mov
and
enter
sub
repnz
and
jb
adc
stc
jb
inc
(bad)
mov
int3
mov
push
stos
hlt
ror
add
jle
pop
cmp
or
add
mov
inc
cmps
nop
data16
popf
ins
lods
in
cmp
sub
adc
push
jg
mov
xor
pop
sub
stc
mov
or
push
add
test
retf
cs
add
in
xor
ins
and
xchg
inc
push
mov
xor
or
nop
mov
pop
sub
inc
or
nop
xorps
add
je
cmps
test
and
adc
jg
dec
inc
sbb
mov
push
cs
test
mov
adc
enter
pushf
lods
movs
rcr
scas
fild
dec
lods
sbb
sbb
or
ds
xchg
xchg
test
mov
mov
mov
mov
sbb
sbb
push
sbb
mov
rol
inc
sahf
retf
sub
nop
add
sbb
shl
xchg
dec
in
rcl
sar
cmp
jmp
sub
or
and
sbb
add
das
push
xchg
and
call
pop
jg
loopne
xchg
test
(bad)
mov
and
rcr
mov
fistp
mov
jne
xor
pop
cmc
popa
dec
or
inc
fs
cmp
and
lods
leave
pushf
dec
jb
test
inc
jle
test
lea
movs
fild
mov
fmul
and
mov
mov
in
adc
inc
jns
sbb
gs
test
sub
mov
cmc
ins
ins
fsubr
push
fstp
dec
lods
pop
dec
call
xchg
add
mov
push
add
or
sbb
popa
sbb
add
stos
add
add
je
sbb
in
pop
in
mov
push
push
push
push
add
outs
pop
sbb
push
push
mov
stos
loope
dec
sbb
dec
in
push
test
mov
or
ret
pusha
add
pusha
call
cs
xchg
xor
and
push
inc
adc
and
jmp
scas
pop
add
ficomp
pop
(bad)
cmp
fstp
sub
ins
sar
movs
jb
fidivr
inc
pop
(bad)
in
inc
pop
xchg
cmp
xchg
pop
in
scas
gs
in
inc
or
and
mov
sbb
imul
int
sbb
je
es
adc
inc
addr16
leave
push
push
fist
(bad)
(bad)
shl
in
and
cmp
mov
push
test
(bad)
sub
sub
inc
dec
pop
je
test
pop
mov
jmp
je
push
push
add
loope
call
adc
adc
iret
jne
stc
rol
mov
push
push
push
inc
ins
jp
add
pop
in
aas
enter
pop
leave
ret
mov
or
xlat
inc
mov
mov
or
and
sub
jnp
ja
sbb
adc
mov
daa
inc
xchg
pop
in
sti
ds
sbb
pop
pop
mov
adc
inc
inc
adc
and
pop
mov
int3
mov
test
jbe
or
in
add
inc
call
xchg
xor
mov
aam
jmp
sub
jl
(bad)
fwait
lods
popa
fucomp
(bad)
pop
jmp
adc
lods
rcr
mov
or
sbb
int3
adc
sar
dec
adc
out
and
out
and
mov
jecxz
add
cmp
xor
adc
push
daa
retf
jmp
push
js
mov
xor
sub
push
test
or
sbb
push
add
and
pop
ss
(bad)
lods
pop
cdq
dec
xor
adc
out
xchg
lods
jo
lahf
aam
add
sbb
in
and
rcr
cmc
adc
enter
inc
ror
pusha
mov
icebp
ja
jp
ja
(bad)
rol
lock
icebp
pop
pop
shl
call
or
mov
sbb
xor
add
sub
out
pusha
mov
pop
je
ss
mov
ins
retf
xchg
pop
not
loope
pop
jg
bound
lds
setge
adc
xor
ret
call
pop
data16
add
(bad)
clc
(bad)
pop
pop
mov
mov
push
adc
mov
sub
sub
add
mov
and
call
push
fs
(bad)
cwde
inc
sbb
mov
add
jbe
repz
mov
add
adc
shl
sbb
js
ret
and
or
push
js
lds
and
sbb
push
sub
or
ja
sbb
cmp
test
xor
pushf
mov
xlat
mov
and
dec
(bad)
aad
mov
adc
ins
fist
cs
xor
sbb
cmp
test
and
lock
nop
rcl
cdq
fs
shl
pop
add
(bad)
rcl
in
(bad)
in
sub
sub
(bad)
sub
jae
push
scas
push
aas
adc
outs
pop
fsub
add
jno
sahf
mov
dec
in
(bad)
jne
or
jns
test
jl
xchg
inc
or
and
out
loopne
mov
not
inc
xlat
stos
inc
sbb
xor
jns
xchg
xor
add
rcr
cdq
adc
pop
pop
pop
in
call
jle
mov
and
fwait
push
retf
sbb
pusha
adc
ss
xor
xor
push
cld
jo
add
rcl
xor
cli
inc
outs
(bad)
daa
(bad)
push
push
or
cdq
mov
and
inc
cmp
test
jns
fnstsw
push
pop
push
or
pop
call
arpl
mov
js
inc
rol
inc
icebp
adc
or
sub
push
cmp
cwde
movs
sahf
push
jo
pop
stc
sub
mov
jns
shr
cdq
pop
loop
dec
push
xor
jecxz
ror
push
stos
retf
and
and
inc
add
rol
(bad)
sub
mov
and
sub
push
mov
xor
dec
test
push
mov
fidiv
push
dec
jp
test
add
jle
mov
out
sub
repnz
stc
outs
out
fadd
jmp
sub
mov
mov
je
sbb
cwde
repz
and
mov
or
push
push
imul
push
call
push
mov
push
add
loope
xor
add
push
sub
(bad)
lods
in
sbb
cmp
je
cmp
and
repz
ds
and
cmp
aaa
jnp
xor
lock
jmp
adc
in
jge
js
adc
jmp
mov
test
jle
cs
ret
jle
in
imul
jmp
outs
dec
mov
pop
leave
mov
and
mov
and
(bad)
pop
pop
push
sbb
or
or
mov
jge
lods
mov
fwait
xchg
sub
gs
shl
xor
dec
fidiv
push
add
mov
xor
pop
xor
pop
adc
cld
enter
jmp
mov
mov
inc
cmp
out
sub
sbb
mov
pop
mov
inc
xor
pop
xchg
add
dec
cwde
mov
add
xchg
out
data16
jo
pop
inc
movs
lahf
lea
rol
loopne
inc
xor
or
imul
or
add
or
sub
pop
or
jmp
unpckhps
jb
push
add
and
loop
adc
xor
out
sub
hlt
shr
bound
push
dec
in
retf
aad
js
push
int3
add
mov
ret
and
inc
sub
ds
adc
push
addr16
loope
rol
inc
(bad)
inc
push
push
js
rcr
aas
test
dec
repnz
push
push
or
sub
or
mov
test
push
stos
adc
adc
data16
ret
mov
sahf
ds
push
dec
shl
or
adc
nop
sub
pop
enter
loope
sub
je
or
je
mov
je
push
je
inc
sub
hlt
push
stc
imul
pop
jnp
adc
and
cmp
loop
je
loope
fwait
dec
dec
sub
retf
retf
fisttp
pop
(bad)
and
ins
adc
fidiv
popa
cmps
push
push
aam
dec
pop
cdq
xchg
mov
xlat
ds
push
cmp
and
or
cmp
adc
(bad)
(bad)
in
and
dec
fmul
sar
sbb
call
in
push
cmp
loopne
fs
sar
sub
or
sub
adc
call
scas
cmp
shr
jmp
jge
mov
fimul
cmp
in
add
mov
int3
mov
je
inc
jne
jns
add
ficom
fst
add
jp
or
cmovns
pop
add
loopne
jno
ficom
es
ret
push
cmc
push
xchg
xchg
mov
mov
ins
mov
adc
xor
aas
inc
jmp
popf
fist
adc
int3
call
or
pop
fmul
test
mov
jmp
jl
div
mov
imul
jle
cli
movzx
or
cmps
xor
adc
stc
pop
push
or
push
outs
ret
js
jmp
or
xchg
outs
loopne
fwait
leave
or
sbb
loopne
sub
mov
daa
sbb
jg
or
ror
add
movs
shr
sbb
jne
lea
xor
jp
push
jne
mov
je
push
or
ins
mov
dec
push
in
add
add
int3
or
mov
je
or
jne
mov
ins
popa
add
jo
outs
das
dec
sahf
das
add
xor
cmp
jne
push
push
push
out
(bad)
mov
rcr
xor
sahf
fidivr
xor
sub
test
dec
shl
shr
add
inc
dec
cmp
aaa
test
mov
retf
cwde
add
mov
jge
jne
cli
and
and
mov
push
inc
or
add
sub
add
shl
inc
push
or
fistp
mov
shl
sbb
outs
retf
add
sbb
clc
cmp
mov
push
(bad)
dec
ins
inc
test
push
xor
(bad)
(bad)
sbb
or
adc
add
push
adc
and
mov
and
ja
js
rcl
shl
rol
adc
fisttp
jbe
add
xchg
dec
push
and
arpl
xor
das
adc
daa
mov
mov
cmp
mov
sbb
test
mov
cmp
cmp
mov
add
mul
sub
and
inc
bndstx
mov
cmps
mov
sbb
enter
ja
in
sbb
cmovg
and
adc
dec
sbb
add
inc
popaw
aaa
daa
mov
outs
and
pop
jbe
pusha
ja
mov
pop
imul
arpl
lahf
out
push
and
sbb
fnstcw
add
and
sub
popa
fdivrp
adc
scas
test
ret
iret
imul
std
bound
movs
lods
cmp
repz
mov
sahf
out
cmps
adc
inc
dec
movs
rol
jl
mov
and
jne
sbb
jnp
push
jmp
inc
cmp
or
adc
jmp
add
lea
jne
ins
xor
fadd
inc
xor
add
jle
add
cs
dec
loopne
sbb
inc
shl
jl
(bad)
je
and
mov
inc
mov
pop
fdiv
and
push
mov
jl
leave
or
inc
mov
add
repnz
pop
pop
jl
push
scas
pop
jne
loop
jo
pop
out
lock
aaa
outs
add
jmp
ins
push
ja
push
or
loope
jp
call
(bad)
js
sub
sub
hlt
or
pop
mov
push
jmp
mov
leave
bnd
ror
cmp
push
mov
xor
js
fisub
mov
punpcklbw
pop
xor
xor
hlt
cmps
out
in
xor
pusha
shl
mov
mov
add
add
xor
shl
or
sbb
inc
fadd
popf
clc
or
aam
push
mov
cld
data16
or
and
sti
fwait
push
fsub
sbb
adc
pop
or
pop
nop
call
not
inc
iret
cmp
repnz
push
sub
cmp
test
mov
add
rol
xor
aaa
jo
jmp
dec
sbb
into
add
mov
xor
call
add
push
retf
out
sub
fadd
pop
mov
xchg
mov
dec
ror
leave
hlt
add
cmp
mov
pop
pop
push
cmp
jb
push
or
jmp
and
or
sbb
jmp
bound
je
loopne
sub
jmp
inc
or
js
inc
and
push
loopne
je
clc
ja
inc
push
ret
sbb
and
dec
adc
leave
mov
dec
and
pop
jmp
jne
or
pusha
pop
or
push
mov
push
adc
xlat
push
mov
fst
mov
xlat
test
pop
adc
push
adc
pop
cs
jmp
imul
or
push
adc
or
sti
mul
and
loop
sub
pop
ins
inc
jo
sti
xor
lods
cmp
leave
push
ficomp
xor
push
jmp
sar
jns
lahf
inc
dec
dec
cmp
jle
cmp
jg
in
lahf
inc
mov
and
push
pop
inc
lea
cdq
sub
(bad)
jecxz
dec
clc
jno
sar
inc
jmp
test
clc
sub
cmp
jle
pop
sub
in
push
pop
jo
pop
xchg
cmp
je
call
jge
push
std
lea
rcr
inc
and
cmp
push
mov
loopne
pop
stos
iret
push
fisttp
cwde
not
repnz
call
sbb
xchg
fisttp
push
dec
jne
lods
push
push
mov
das
or
lock
loope
(bad)
mov
sbb
push
mov
sub
(bad)
pop
push
push
sar
ss
or
rol
cmp
cmp
test
mov
xor
xor
dec
jbe
cmp
leave
or
call
push
xor
scas
mov
xor
cmp
fcomp
pop
es
hlt
jne
push
xchg
test
mov
and
add
xor
jo
pusha
and
mov
mov
push
clc
rcl
ins
adc
mov
lds
sbb
cmp
iret
clc
std
inc
jl
pop
jmp
sbb
cmps
pop
ret
call
cmp
jl
loope
push
pop
mov
in
mov
mov
mov
hlt
mov
ror
jmp
loopne
(bad)
js
push
sbb
or
clc
dec
push
cld
pop
sbb
push
retf
jge
cld
aas
or
sbb
fimul
cmp
je
ficomp
out
not
and
out
lods
cdq
push
loopne
(bad)
stos
sahf
scas
xchg
jg
add
add
cmp
jne
sbb
pusha
movs
xor
cdq
add
sar
push
cmp
jbe
nop
cmp
adc
add
add
add
nop
pminub
cmp
call
cld
lds
inc
sub
retf
cmp
adc
and
mov
add
mov
div
jo
dec
call
sbb
adc
or
jbe
shl
mov
js
push
xor
pop
je
dec
test
add
jnp
js
push
(bad)
mov
jnp
scas
pop
cmp
pop
movs
add
sar
or
mov
jle
cmp
xor
adc
in
fbld
loopne
xchg
add
push
lods
add
(bad)
jmp
cmp
jecxz
sub
ss
(bad)
call
push
mov
push
lock
daa
dec
pop
cdq
push
push
and
push
sbb
adc
add
push
js
gs
sub
sti
jmp
ss
add
fcmovnbe
clc
loope
in
adc
sbb
cs
add
and
push
adc
leave
sub
inc
add
or
ins
mov
test
sbb
popf
call
je
in
dec
je
sub
je
mov
add
pcmpeqw
cmp
jne
inc
rcl
out
jbe
retf
xor
jbe
xor
fld
pop
ss
push
iret
mov
push
js
fisttp
push
retf
std
or
les
hlt
loope
add
outs
xor
sub
jb
sbb
(bad)
cmp
sbb
call
and
test
adc
sbb
sub
or
xor
dec
nop
mov
sbb
pushf
rcr
sbb
fadd
test
sbb
cmc
movzx
mov
mov
pushf
jbe
loopne
fs
rcl
retf
pop
fldenv
je
inc
je
test
in
push
add
fst
ss
aas
push
es
push
mov
mov
mov
cmp
sti
or
jbe
jne
jle
xor
sbb
xchg
loope
sub
dec
clc
ret
jl
(bad)
push
ins
xchg
call
iret
cmp
xor
das
cwde
sub
in
mov
cmps
and
sub
loope
jo
aaa
mov
mov
sbb
icebp
ret
dec
cmp
scas
push
dec
cmp
mov
dec
imul
push
rcr
jp
push
or
pop
sbb
ret
cmp
dec
arpl
out
bound
sbb
out
sub
cmp
add
(bad)
adc
imul
dec
add
nop
add
pop
(bad)
ins
sbb
and
data16
jge
pop
add
xor
mov
mov
or
out
enter
pop
imul
sub
loope
ds
dec
lea
or
jge
or
push
mov
ja
bsf
les
jmp
inc
push
mov
data16
xchg
ins
scas
pop
jne
xchg
pusha
add
push
lods
fisub
add
adc
and
lea
and
cmc
xor
sbb
mov
cmp
sar
jno
adc
or
adc
cld
add
fst
xchg
dec
mov
and
pop
pop
sti
mov
mov
popa
ret
push
imul
scas
inc
sbb
sub
push
ret
or
mov
dec
sbb
jle
xor
mov
xor
xor
cwde
fstp
inc
mov
call
jnp
add
mul
ror
dec
test
inc
das
adc
retf
in
cdq
loop
aad
sbb
add
(bad)
dec
and
inc
cmp
addr16
jle
push
push
pusha
pop
mov
inc
pop
rcr
push
ror
mov
sar
test
xchg
lock
ror
and
stos
jp
inc
push
jmp
or
loop
add
sbb
outs
mov
fcom
push
mov
mov
jne
cmp
inc
pop
sub
dec
pop
ret
inc
xor
cmp
je
push
ret
lds
sub
nop
pushf
sti
adc
mov
data16
or
mov
xchg
adc
addr16
jb
fild
add
ficomp
int3
cmps
inc
bound
push
cdq
daa
xchg
mov
add
add
sbb
xchg
cmp
ins
pop
call
jp
mov
loop
pop
sub
and
ret
jae
mov
push
call
jge
xor
pop
and
in
ror
nop
pop
repz
test
pushf
das
mov
jo
xchg
mov
mov
xchg
add
mov
jo
loopne
(bad)
out
imul
add
mov
inc
test
cmp
xchg
cwde
mov
adc
xchg
mov
and
and
sbb
inc
xor
lock
fisubr
mov
lahf
sbb
sub
xor
test
and
sub
jnp
pop
and
adc
dec
adc
dec
push
bound
cmp
psubd
leave
dec
jnp
push
pop
fs
ins
push
pop
inc
add
call
or
popa
mov
loopne
lods
push
daa
ins
sub
call
and
cmp
ins
and
in
ins
push
jb
push
sbb
dec
cmp
nop
sub
adc
push
enter
dec
jmp
xchg
lea
nop
push
sbb
test
test
xor
fist
sub
or
adc
test
stos
leave
push
jns
sub
or
pop
sub
adc
xchg
shl
int3
sbb
pop
or
and
(bad)
adc
xor
aad
mov
xor
dec
sbb
pop
ds
push
add
ds
xchg
adc
leave
inc
loopne
xor
sub
xchg
daa
adc
mov
or
mov
mov
fmul
or
sub
pop
inc
and
or
call
(bad)
call
movs
lds
sti
movzx
push
or
in
in
jmp
push
test
mov
out
cmp
je
mov
stos
fsub
bound
bound
xor
inc
adc
dec
or
sbb
pop
push
push
in
mov
jge
sub
(bad)
and
mov
lock
sbb
pop
jmp
cdq
jne
xchg
dec
imul
inc
test
aam
retf
dec
rol
popf
cmp
mov
inc
add
out
sub
into
push
and
sahf
dec
cmp
es
push
not
int3
call
adc
ror
mov
pop
lock
jmp
nop
sub
jle
cwde
pusha
fcomp
or
add
mov
add
add
add
xchg
pushf
fdiv
xor
cli
outs
pushf
mov
jg
outs
dec
pushf
jp
fsub
push
or
test
in
mov
jbe
add
xor
add
pusha
pop
cmp
add
adc
mov
mov
dec
adc
sub
in
scas
mov
pushf
xchg
lea
lock
fbstp
outs
push
pop
rol
dec
not
push
push
cli
addr16
pop
pushf
push
push
xchg
jae
push
or
inc
sahf
xchg
cmp
daa
lock
xor
data16
clc
jbe
add
ficom
add
clc
push
or
jb
or
add
xchg
sbb
je
inc
mov
pusha
rcr
push
add
push
cmp
adc
nop
inc
cwde
pop
out
mov
cmc
cmp
cmp
je
in
mov
adc
adc
inc
push
mov
or
inc
fsub
pop
sbb
ficom
fsubr
test
int
jmp
push
pop
outs
adc
scas
adc
and
mov
stc
xor
or
xor
push
add
je
js
or
push
fnstcw
clc
into
inc
je
jecxz
mov
mov
fsubr
xor
cmp
push
and
push
iret
adc
(bad)
movs
cmp
je
push
push
xchg
fcomp
stos
lock
jno
sub
jmp
jmp
das
push
adc
inc
and
fnstsw
xor
and
int
nop
add
fstp
jo
add
inc
jno
sti
inc
lock
dec
push
loop
ins
inc
and
push
sti
rcl
shr
cmp
enter
add
fistp
sbb
jno
adc
leave
push
pop
es
add
push
and
cmp
stos
rcr
sub
(bad)
fistp
enter
cmp
mov
add
aas
dec
imul
xchg
leave
ror
jo
add
aad
xor
ss
sbb
or
test
mov
inc
xchg
gs
loopne
in
(bad)
mov
adc
aaa
mov
push
cmp
adc
retf
cmps
or
add
rcl
jo
jmp
ret
push
sub
jmp
mov
or
pop
push
ds
pushf
inc
pop
arpl
lock
cmp
lock
retf
adc
inc
ss
push
pop
add
sbb
and
in
add
jmp
fs
add
adc
cmp
not
call
pop
add
push
loopne
adc
cmp
push
add
push
add
cmp
jl
cmp
cmp
jg
(bad)
frstor
retf
jg
mov
dec
shl
add
xchg
or
mov
add
jecxz
pushf
sar
test
mov
dec
adc
(bad)
loopne
lods
ret
bound
jg
cmp
sahf
cld
into
and
push
and
pop
inc
test
call
cmp
fistp
mov
fsubr
pop
mov
or
lea
fmul
push
loope
inc
fs
adc
push
pop
call
in
dec
paddsb
dec
mov
cmps
loopne
mov
or
push
mov
ins
retf
xchg
aam
jbe
loop
sbb
xchg
pop
(bad)
mov
sar
popa
ins
adc
mov
sub
cmp
adc
lahf
and
mov
shr
loope
fisubr
xlat
mov
lock
push
push
jo
imul
dec
cmp
xchg
mov
pop
or
inc
jl
cmp
je
or
adc
xchg
pop
xchg
inc
mov
mov
mov
adc
cmp
in
scas
push
jmp
js
jae
push
in
xchg
xor
jle
mov
je
mov
add
dec
sar
ins
xchg
and
sbb
repnz
xchg
sub
dec
xchg
xor
ds
jmp
xlat
cmp
mov
and
push
mov
jno
div
add
xchg
inc
inc
fsub
outs
push
jg
and
out
pop
xchg
cld
and
jae
enter
daa
and
xor
sub
sub
add
adc
add
xchg
push
dec
lods
aam
adc
pop
sub
add
or
jle
aas
inc
dec
popa
push
jb
or
and
fsub
xor
or
sahf
sbb
arpl
adc
xor
jnp
ds
push
mov
and
dec
xchg
aaa
push
push
shl
pop
mov
stos
shl
add
pop
add
out
pop
pusha
or
mov
pop
cdq
arpl
or
mov
xchg
stos
inc
mov
and
mov
push
rcr
ret
arpl
and
in
jns
es
fwait
loopne
inc
or
adc
xchg
sbb
jne
inc
aas
lds
sub
and
retf
push
arpl
or
push
loope
cmp
jno
(bad)
fiadd
xchg
push
sbb
ret
xor
and
or
mov
push
jmp
inc
or
dec
int
sbb
stc
out
inc
or
xchg
int
mov
arpl
dec
out
rol
add
daa
sub
push
les
sbb
cmp
nop
sahf
push
and
ds
cmp
vmulpd
xchg
mov
sub
popa
xor
(bad)
fcomp
push
pusha
mov
das
or
mov
and
fnstcw
inc
adc
lock
add
es
call
cmc
mov
xor
adc
loopne
pop
pushf
add
test
mov
push
test
inc
and
ret
mov
mov
mul
jne
rol
sub
dec
loopne
add
push
loopne
ret
ja
dec
adc
lock
addr16
and
sub
sbb
lods
ds
xor
pop
inc
cli
cmps
push
cs
loopne
daa
mov
dec
inc
xor
and
clc
adc
test
sub
test
xchg
ror
xchg
js
add
and
mov
in
ret
pop
add
push
pusha
(bad)
aaa
push
xor
inc
xor
sbb
les
add
sub
sbb
js
cdq
xor
inc
cmp
ret
pop
or
add
lahf
mov
or
ds
xor
add
mov
pop
add
cli
add
sbb
pushf
mov
cmp
adc
push
sahf
cli
mov
pop
inc
jecxz
xor
xor
popa
adc
add
test
fist
and
ror
push
addr16
es
sub
inc
sbb
sub
sbb
aaa
adc
shl
cs
mov
xor
mov
mov
dec
cli
sbb
test
movs
add
inc
fucomip
mov
lahf
jnp
jnp
sub
add
pop
shr
(bad)
neg
retf
jae
fld
push
jno
leave
dec
fcomp
pop
dec
adc
or
idiv
popf
sbb
jl
retf
imul
or
movq
sbb
pop
sub
ret
mov
or
hlt
add
push
repnz
js
ror
sti
add
leave
xor
gs
xchg
(bad)
push
xchg
sub
mov
pushf
xor
and
fist
jl
adc
ds
(bad)
sbb
adc
mov
jo
cld
push
mov
fcmove
inc
call
rcl
push
or
adc
push
mov
std
clc
push
cdq
dec
sbb
pop
mov
push
sbb
and
stc
or
lods
and
jmp
fdiv
fsubr
pop
cmc
xor
mov
push
adc
fsubr
push
mov
adc
jno
gs
ret
and
in
fdivr
mov
push
adc
ins
mov
imul
inc
sub
ret
push
or
mov
cld
jg
cmp
sete
mov
jmp
push
mov
mov
int3
popf
sbb
adc
(bad)
adc
arpl
pop
push
int
mov
jmp
mov
add
mov
pop
movs
cdq
retf
adc
adc
shl
jno
pop
lea
or
cmp
(bad)
or
inc
add
loopne
arpl
cmc
and
mov
or
push
or
ror
mov
lea
cmps
add
or
aaa
and
or
dec
sbb
add
(bad)
jp
leave
lea
into
loope
pusha
push
sbb
sbb
mov
icebp
add
add
test
and
cmps
aas
add
popa
adc
test
popf
jecxz
fsubr
add
mov
test
lock
shl
and
test
rcr
xor
shl
outs
test
dec
sub
ror
inc
pop
or
push
inc
push
into
jo
cmp
adc
add
and
push
adc
adc
in
inc
mov
pop
dec
jbe
jmp
rol
mov
or
or
sbb
adc
or
jo
adc
nop
push
inc
add
jmp
data16
mov
bnd
(bad)
cmc
add
adc
sub
and
lods
in
sbb
jmp
push
adc
or
sti
push
aaa
clc
sub
scas
test
sub
sub
loope
inc
clc
hlt
add
and
and
and
mov
or
and
ror
sbb
cmp
scas
and
and
push
sub
add
mov
(bad)
jne
xchg
jne
xchg
push
shl
xchg
lea
lods
xchg
ds
mov
and
test
bound
add
and
unpckhps
repz
movs
mov
add
jg
jle
cmp
jmp
jl
aaa
(bad)
shl
mov
pop
in
test
fild
pop
dec
push
and
adc
rol
cmp
retf
in
jl
sub
or
jmp
(bad)
or
sbb
shr
or
adc
push
sbb
stc
cld
adc
adc
push
in
and
pop
add
sbb
cwde
pushf
sbb
mov
mov
adc
jne
pop
lahf
les
cmp
xor
pop
stos
or
(bad)
xchg
cmp
into
call
jb
inc
xchg
mov
cdq
or
in
jecxz
sub
jno
push
add
nop
cmp
lock
ficom
inc
mov
loop
adc
inc
xor
pop
push
mov
sub
rcl
mov
mov
pop
mov
and
jge
push
and
xchg
jp
call
jnp
cmps
push
sbb
(bad)
pop
cwde
adc
out
lahf
and
xchg
cmps
das
leave
cld
lods
xchg
mov
jmp
inc
adc
imul
cmps
inc
mov
ror
push
adc
xchg
xor
sar
sbb
fimul
bound
mov
pusha
inc
mov
mov
jmp
fistp
cmc
and
std
shl
call
mov
jge
mov
mov
dec
stc
inc
cli
mov
mov
push
icebp
loope
xchg
jmp
xor
push
jo
ret
call
mov
xor
inc
jmp
ret
pop
cmp
jne
mov
into
outs
in
sbb
and
ins
sti
mov
mov
ins
dec
ret
push
inc
push
sub
lock
stos
and
mov
test
cmp
push
add
mov
adc
sub
loopne
jmp
push
cmp
fcmovu
cld
outs
inc
fidiv
inc
jmp
sbb
push
sub
in
or
mov
push
push
femms
or
idiv
sti
pop
push
sahf
push
cmp
cmp
pusha
inc
xor
and
sub
mov
rol
das
icebp
xor
pop
push
and
aam
adc
sbb
adc
xchg
psrlq
push
cmp
dec
and
sbb
test
ss
xchg
cmp
mov
mov
les
jge
jo
pop
add
ret
dec
scas
push
adc
push
lahf
mov
mov
aam
push
call
aam
ret
enter
jne
jnp
aaa
push
addr16
test
test
popa
sub
jne
xchg
mov
mov
push
mov
inc
test
sbb
and
or
push
or
inc
cmps
stos
ret
cwde
retf
data16
imul
push
in
in
out
push
xor
jmp
sbb
push
add
push
adc
inc
push
pop
or
xchg
pop
inc
push
cmp
retf
add
jp
and
ins
and
mov
les
ins
push
sbb
jae
aas
push
adc
lea
add
sub
ffree
out
pop
push
pushf
add
inc
inc
loope
movs
leave
mov
ror
mov
in
and
or
push
sti
in
inc
dec
pushf
out
in
lods
cmp
jbe
ins
ret
add
fisubr
fisubr
clc
xor
pop
mov
adc
or
mov
movs
fwait
shl
mov
pop
sub
add
lea
inc
mov
dec
hlt
jmp
push
sbb
pushf
inc
push
sbb
sbb
add
inc
cmp
mov
lods
mov
jp
sub
pushf
lock
push
mov
imul
aaa
(bad)
fild
push
lahf
add
ret
push
inc
stos
mov
js
data16
xor
call
in
and
jno
cmp
mov
add
adc
or
movs
mov
xor
xchg
adc
add
add
aaa
or
fcmovb
push
test
mov
or
xor
int3
add
loopne
das
cdq
in
sub
mov
pop
mov
movs
add
out
and
data16
push
loopne
xor
or
bound
je
mov
mul
nop
shl
inc
call
ffreep
mov
or
inc
popf
(bad)
mov
ret
and
aad
sbb
sahf
pop
pop
sub
scas
dec
in
push
nop
lock
cld
(bad)
(bad)
adc
mov
pop
clc
push
dec
and
test
mov
inc
rol
cs
repnz
cli
mov
push
shr
ins
pop
add
mov
ds
dec
lea
jb
dec
adc
xchg
dec
pop
xchg
and
xor
or
jmp
or
sub
push
loope
cli
pop
jmp
call
out
loopne
xor
add
sar
inc
sbb
addr16
xor
test
call
dec
push
jne
pmullw
and
daa
mov
xchg
mov
lods
hlt
cmp
jne
cmp
and
or
jge
push
and
rcr
xchg
fld
je
adc
(bad)
fisubr
call
or
add
mov
sbb
in
push
shr
test
or
cmp
out
add
adc
and
pop
ins
pop
xor
push
push
sahf
mov
bound
into
and
ficom
or
lock
iret
cmp
mov
cmp
and
test
lock
add
adc
adc
add
cmp
mov
fld
pop
ret
sbb
(bad)
in
jecxz
cmp
or
ja
pop
add
add
mov
lahf
xor
xor
pop
(bad)
sub
inc
sub
enter
inc
sub
hlt
sub
sbb
lock
and
popf
add
mov
cmp
sub
dec
retf
xor
adc
hlt
or
sub
hlt
add
mov
adc
fdiv
(bad)
cmps
or
fsubr
sbb
shl
push
fs
or
mov
xchg
call
xchg
and
cmp
dec
xor
push
mov
adc
pop
je
mov
cmp
stos
add
push
jne
test
sbb
add
imul
jmp
add
dec
(bad)
xlat
sbb
cmp
push
add
fnsave
push
push
imul
loopne
test
pop
frstor
fild
cmp
adc
mov
mov
push
fmul
idiv
mov
inc
adc
inc
inc
je
or
out
jle
or
push
cld
adc
adc
mov
call
popa
inc
cmp
test
sbb
mov
pop
push
pop
jae
xchg
adc
jmp
mov
xor
aaa
in
test
push
out
mov
fcomp
mov
sar
pop
jl
xor
cmp
mov
adc
loop
inc
push
mov
push
aaa
fcomp
addr16
sbb
dec
dec
sbb
mov
cmc
add
cmp
adc
mov
mov
out
and
and
mov
inc
mov
enter
test
sysret
(bad)
js
addr16
loopne
ret
fidivr
and
lea
sahf
paddsw
sub
or
call
sbb
fsubr
ffree
nop
pusha
stos
inc
add
pusha
scas
stos
je
add
popa
in
in
and
rol
rcr
jmp
jp
xor
ficom
add
or
pop
and
xor
jge
je
push
mov
sbb
mov
or
enter
add
adc
inc
or
imul
es
dec
add
minps
stc
push
cli
jo
sub
sbb
daa
stos
test
sti
sbb
sub
push
sbb
and
mul
xchg
in
push
sub
push
je
dec
dec
push
cmp
fisubr
jl
or
sbb
ror
push
fdiv
adc
inc
cmp
lea
gs
push
xchg
jo
je
push
movs
lea
cmp
inc
(bad)
xchg
in
dec
and
mov
int
ja
out
out
mov
jns
inc
push
shl
es
jb
cmp
fstp
fidivr
mov
das
inc
mov
pop
mov
rep
sub
mov
push
xor
and
leave
fwait
inc
popa
mov
add
aam
imul
pop
add
or
lea
xchg
pop
icebp
cmp
and
loopne
xor
push
gs
inc
jb
fchs
popa
aaa
jmp
push
lahf
pop
dec
adc
pop
and
aas
lock
inc
and
push
inc
das
ret
inc
jle
sub
dec
mov
push
mov
adc
stc
nop
stos
or
jmp
sub
pop
add
dec
mov
shr
repnz
xor
fcmovnu
js
jp
ret
mov
mov
dec
sbb
push
mov
inc
call
(bad)
jmp
rcl
or
adc
cmps
add
sbb
pop
pop
das
pop
ds
popa
add
and
test
dec
aad
imul
popf
psubq
xchg
push
pop
add
mov
xor
hlt
push
in
mov
sub
pop
and
push
and
int3
pop
retf
inc
and
mov
sar
inc
and
aaa
xor
ins
xchg
jbe
inc
sahf
pop
lock
pop
inc
push
call
js
(bad)
loop
ret
push
adc
(bad)
adc
call
test
adc
adc
add
pop
rcl
xor
mov
sub
cmp
push
inc
push
icebp
dec
cmc
dec
push
or
js
int
and
xchg
xchg
mov
push
xor
cs
pop
sub
push
fs
push
cdq
pop
popa
daa
hlt
gs
inc
add
test
imul
sbb
xor
add
inc
xchg
or
add
sub
sbb
clc
sti
xchg
xor
or
shl
jp
loop
in
adc
mov
pop
adc
inc
les
hlt
mov
call
sti
jmp
sbb
cmp
add
fdiv
shl
ss
sbb
in
sar
je
push
lods
es
jbe
adc
shr
sbb
jmp
adc
int
(bad)
cmp
jne
inc
jge
jl
je
or
dec
fiadd
ret
ins
pop
mov
scas
nop
or
shl
push
or
adc
sbb
ret
pusha
out
shl
add
stos
in
xlat
stos
adc
adc
push
xor
or
pusha
sbb
xlat
or
ret
xor
mov
inc
test
add
out
sti
test
jnp
mov
add
adc
xor
je
js
mov
xor
sub
fdivr
(bad)
add
push
shl
ins
les
and
aad
jmp
jns
or
mov
ja
xlat
dec
js
enter
mov
aaa
(bad)
das
je
pop
js
inc
mov
gs
aam
mov
pop
movzx
inc
push
dec
js
test
cmp
test
push
or
mov
sub
and
test
shr
sbb
add
adc
or
add
test
cmp
jne
xchg
add
or
xor
mov
daa
mov
jo
fs
push
pushf
pop
out
jmp
cmp
or
jg
pop
pop
ret
mov
mov
enter
push
aaa
mov
shl
push
std
or
adc
jecxz
jo
dec
sbb
mov
cmp
cmps
add
jbe
(bad)
push
sti
fs
popa
(bad)
shr
pop
or
or
retf
ss
in
pop
(bad)
sbb
xor
inc
add
fdiv
sbb
test
xor
push
mov
movs
jne
pop
cmp
xor
xchg
div
iret
shl
dec
hlt
jo
nop
addr16
sqrtps
lea
lahf
add
push
push
(bad)
aam
popf
mov
orps
repz
jge
inc
pop
aaa
dec
push
inc
push
mov
and
and
jecxz
in
aam
out
mov
loopne
inc
sub
imul
add
pop
xor
movs
loopne
ret
nop
pcmpeqd
shl
cmp
adc
and
inc
fcom
adc
pop
jl
or
mov
mov
mov
inc
not
jp
add
xchg
inc
pop
add
inc
xchg
loop
popf
or
xor
pop
jmp
push
daa
sbb
jnp
shl
icebp
stc
mov
push
sbb
clc
dec
push
push
add
loope
sub
aaa
inc
dec
test
clc
scas
out
dec
lods
addr16
js
mov
jl
aad
jae
or
pusha
mov
das
je
inc
inc
clc
mov
dec
adc
jmp
outs
lea
jo
std
sbb
cmp
lea
fsubr
cmp
es
inc
inc
inc
dec
jne
mov
dec
ins
cld
js
mov
fdiv
adc
mov
push
test
push
push
inc
inc
adc
adc
jmp
test
data16
and
or
movs
adc
pop
push
ins
sbb
adc
lea
mov
inc
jo
and
sbb
fs
cmp
cmps
loop
loopne
popf
fidivr
ficom
xor
cmp
les
xchg
and
sub
icebp
clc
inc
not
adc
mov
es
xlat
arpl
imul
pop
aaa
iret
jo
inc
adc
clc
xchg
mov
inc
call
test
fsubr
mov
(bad)
retf
inc
sbb
mov
jo
mov
push
push
enter
sub
mov
out
lods
and
push
inc
push
lock
or
mov
outs
mov
pusha
inc
pop
adc
cs
mov
push
jb
into
pusha
fsub
hlt
clc
shr
cmp
sub
fisub
int
mov
fcom
cmp
mov
fcomp
xchg
pop
arpl
mov
inc
push
mov
add
ret
mov
je
and
clc
cmp
jge
or
pop
sbb
push
test
mov
and
scas
and
xor
mov
jl
call
cmp
js
mov
call
adc
jbe
jnp
and
loope
pop
xchg
pop
xchg
xchg
push
call
sar
fcom
aas
inc
mov
je
mov
dec
pusha
sbb
xor
or
loopne
popf
jbe
mov
enter
mov
js
mov
icebp
adc
fsub
imul
jmp
cmp
or
push
cmp
add
add
lahf
enter
add
les
adc
pop
push
jno
jle
dec
xor
das
into
sahf
dec
das
retf
push
mov
jns
out
cmp
data16
cmp
aam
or
pusha
and
leave
push
add
and
xor
or
xor
or
movs
push
js
call
inc
test
add
xor
inc
adc
jmp
add
cmps
push
les
push
ret
and
pop
aaa
pop
mov
jl
mov
fmulp
xchg
mov
rol
(bad)
into
cmp
out
pushf
aaa
es
in
push
xor
push
ret
icebp
mov
add
jg
fadd
cmps
inc
and
pop
push
lods
mov
fdivr
sbb
pop
cmp
and
pop
in
mov
inc
sub
(bad)
mov
fadd
int
daa
and
cmc
(bad)
or
imul
add
jmp
and
imul
cwde
add
add
adc
xor
jb
scas
xor
hlt
sub
sbb
xor
pop
jns
add
ds
dec
inc
(bad)
sar
fcomp
cmp
mov
sbb
mov
mov
ror
or
xchg
mov
mov
add
push
push
loope
add
mov
dec
xor
imul
xor
pop
mov
popf
ss
fs
pushf
cld
addr16
iret
cmp
cs
popa
xchg
mov
adc
jb
push
adc
in
jge
das
add
in
xchg
stos
jecxz
xor
sub
test
mov
bound
adc
adc
int3
dec
push
ficom
out
aam
retf
popa
or
sub
pop
or
outs
loope
jae
push
ja
inc
fist
inc
sbb
sar
push
inc
push
inc
jno
add
pop
inc
call
sbb
gs
or
push
cmp
daa
add
xor
loopne
test
jl
es
mov
test
mov
mov
mov
lea
add
outs
cwde
aaa
mul
lods
mov
or
sbb
(bad)
sub
or
mov
scas
sbb
dec
inc
stc
and
into
push
xor
or
sbb
push
std
or
cmps
bound
sbb
push
or
mov
or
sbb
add
add
ror
sub
add
inc
mov
ror
jecxz
sub
or
ret
xchg
and
xchg
aas
and
std
bound
add
xchg
or
push
sub
inc
sbb
mov
push
loopne
mov
mov
sub
pop
pop
sbb
add
stos
je
and
and
xchg
xchg
lock
jne
push
fsubr
lods
out
lea
leave
xor
outs
lea
pop
mov
mov
or
lock
inc
sbb
mov
fidivr
mov
test
lods
sub
or
push
pop
and
inc
sub
or
cmc
add
hlt
jnp
lock
or
xor
cmps
pusha
test
cmp
lahf
pusha
and
fwait
add
hlt
inc
lds
mov
push
mov
pusha
add
ss
xor
sbb
add
cld
aam
fadd
loopne
sbb
in
loope
dec
int3
fild
pop
sbb
popa
dec
pushf
push
adc
mov
in
fsubr
xor
add
in
aam
loop
ins
mov
mov
add
stc
test
fbstp
add
into
adc
jp
and
pop
and
je
add
cdq
mov
mov
aam
cmp
movs
in
push
dec
sbb
fist
cdq
aam
mov
add
dec
jg
fadd
lea
push
loopne
push
ds
or
ins
cmp
icebp
push
mov
sub
loope
cmp
push
dec
mov
inc
xchg
and
sahf
cmp
daa
inc
inc
mov
pop
pop
mov
call
lock
push
fiadd
jmp
xchg
inc
inc
loopne
sub
sti
adc
(bad)
hlt
(bad)
adc
in
cmp
ja
repnz
loopne
div
ins
aam
dec
jmp
push
sbb
fmul
sub
les
sbb
add
mov
mov
xlat
sbb
inc
xchg
call
imul
add
ficomp
movs
pop
bound
xchg
popa
nop
mov
inc
xchg
xchg
pop
enter
xlat
jns
das
in
rol
pusha
or
int3
jge
rcr
cmps
stc
push
movs
xor
in
push
fdivp
in
add
shl
pop
xchg
test
cwde
lods
les
sub
pushf
pop
aaa
push
ret
loopne
cmp
mov
rcr
loopne
mov
xor
mov
call
push
pop
psadbw
fcomp
add
or
mov
mov
js
mov
das
inc
cmp
fs
jl
jns
inc
ret
arpl
imul
inc
mov
fcomp
mov
int
add
data16
inc
rcl
and
and
xchg
loopne
fiadd
mov
ds
out
jo
lock
sbb
xlat
inc
add
aas
inc
inc
or
stos
push
repz
and
sub
sub
gs
mov
enter
(bad)
int3
clc
adc
outs
push
xor
add
(bad)
adc
ins
adc
bound
xchg
push
or
mov
sub
inc
out
push
in
nop
and
arpl
and
and
in
and
add
loope
mov
fiadd
adc
stos
addr16
rcl
jmp
clc
push
hlt
sbb
and
xor
in
call
(bad)
pop
std
pop
dec
cld
popa
mov
lahf
pop
mov
loopne
cwde
in
and
add
sbb
clc
sbb
jb
xor
(bad)
hlt
test
mov
inc
xchg
xor
and
mov
mov
add
dec
or
ret
add
rcl
mov
push
xchg
das
push
je
(bad)
sub
loopne
inc
mov
ror
cdq
rol
scas
or
and
sub
stos
imul
cs
mov
out
mov
add
add
retf
clc
jns
or
mov
jb
xor
das
test
xor
add
lock
loop
and
call
rcl
imul
or
adc
pop
div
jne
add
loop
xchg
cli
in
push
cs
sbb
ds
or
sub
mov
ds
jmp
lock
in
add
sahf
sbb
ins
add
jmp
pop
aad
add
call
fcomp
(bad)
je
push
add
adc
adc
pop
sub
cmp
ds
jmp
mov
out
cmc
mov
stc
(bad)
jecxz
dec
test
or
sub
add
retf
daa
sub
lods
ficom
rcl
pop
inc
sbb
xchg
adc
inc
sbb
test
pop
push
pop
sub
mov
xchg
pop
test
call
sub
loop
adc
add
mov
and
add
sub
sbb
push
bound
push
jo
xchg
dec
jnp
mov
les
arpl
add
mov
push
pop
or
shl
or
inc
(bad)
ror
adc
mov
cmp
add
xor
repz
add
and
sub
pop
pop
jecxz
into
pop
sbb
pop
pushf
sub
jnp
jno
leave
pusha
add
xor
xchg
inc
leave
sar
inc
sub
cmp
jge
jg
or
les
je
sbb
fistp
inc
sub
add
in
adc
pop
cld
daa
sub
mov
adc
push
mov
call
cmp
jb
lea
lock
mov
movs
xor
mov
fst
inc
jmp
xor
xor
jp
cli
cdq
dec
ja
sub
push
mov
push
fdivrp
xor
pushf
inc
pop
sbb
mov
and
or
jmp
mov
push
xor
popa
or
push
xor
aas
and
daa
mov
push
es
ds
xor
mov
and
sub
retf
cld
sbb
mov
and
push
aad
jb
jmp
sbb
add
adc
jecxz
or
je
mov
push
pop
loope
icebp
mov
adc
xchg
add
add
sbb
push
pop
stos
rcl
lock
dec
push
lahf
loope
pop
pushf
cmp
clc
les
psubd
inc
jecxz
push
inc
push
(bad)
jg
sti
ret
jo
pop
sub
pop
pop
jmp
sub
add
add
dec
push
dec
add
sub
jmp
push
add
pop
add
popa
and
mov
or
dec
push
pop
outs
das
push
push
xchg
pop
std
sbb
cmps
in
cdq
adc
mov
lea
xor
add
icebp
(bad)
xchg
ror
or
cmp
jae
inc
pop
mov
inc
adc
addr16
cmp
mov
push
add
push
sub
cmp
jl
cli
ror
retf
loopne
mov
sbb
or
(bad)
test
repz
and
sar
mov
mov
add
and
adc
stc
sbb
out
daa
dec
clc
push
cmp
sub
arpl
ins
cmp
das
and
rol
cmp
sub
hlt
or
or
mov
clc
push
(bad)
adc
dec
clc
jl
fisub
adc
(bad)
fsub
add
dec
je
shr
or
jmp
push
lods
pop
loopne
ret
adc
data16
fmul
push
sbb
loopne
in
pop
aaa
dec
shr
xchg
mov
push
sbb
add
je
fs
js
push
fmul
dec
aaa
xor
bswap
je
repz
cmc
imul
popa
imul
je
adc
movs
in
add
mov
popa
cmp
sbb
push
pop
and
mov
adc
mov
push
test
cmp
jmp
push
jle
loopne
sub
loopne
shl
push
ror
dec
les
xchg
push
call
add
movs
into
in
or
jns
sbb
sbb
xor
loopne
inc
fcom
fmul
fadd
sbb
mov
adc
xchg
out
inc
xor
push
mov
and
call
add
arpl
in
adc
sbb
fidiv
imul
sahf
mov
cmp
xor
sbb
xchg
cmps
es
repnz
in
aas
nop
xor
fdivr
jo
mov
mov
mov
add
pop
aam
jns
jmp
fadd
jg
jmp
outs
xor
dec
sbb
adc
push
aaa
call
or
rol
fsub
xchg
or
or
sub
add
adc
add
or
mov
jmp
jl
ror
add
or
pop
or
add
add
dec
outs
adc
in
leave
add
push
jl
push
fimul
sbb
push
or
mov
jmp
push
inc
dec
cli
ja
pushf
test
cmp
push
push
cmp
pop
(bad)
push
push
xor
pop
mov
xor
push
push
sub
into
dec
push
inc
inc
sub
add
add
fist
dec
or
clc
mov
ins
add
test
push
push
inc
or
mov
inc
push
outs
cli
pop
arpl
xor
cmc
add
cmp
lods
mov
sub
pusha
pop
stos
adc
pusha
mov
lds
dec
sbb
(bad)
jns
cmp
push
outs
xchg
push
(bad)
jns
pop
lods
add
lds
jmp
gs
stc
xchg
in
out
add
aas
mov
movs
sub
mov
outs
jmp
rcl
(bad)
iret
call
aaa
in
fimul
mov
jecxz
jns
xchg
cdq
sub
stos
mov
xchg
and
lock
cmps
pop
mov
icebp
imul
add
mov
push
xor
jb
imul
cmp
ror
push
push
bound
ret
add
sub
leave
clc
add
lods
jge
or
pop
adc
cmp
add
movs
adc
inc
imul
sub
adc
fcmovnu
and
loope
sbb
in
or
jecxz
add
push
adc
lods
jno
and
or
das
in
(bad)
jp
cmp
push
and
aaa
ds
in
movs
data16
add
call
cdq
pop
xchg
jg
test
cmp
rol
xchg
inc
test
pushf
popa
jl
add
add
jl
inc
jae
call
push
pop
dec
adc
add
cdq
xchg
aas
sub
xchg
fadd
dec
mov
pop
stos
and
arpl
jmp
and
mov
leave
repz
mov
push
mov
inc
pusha
mov
loopne
js
or
retf
data16
cdq
cmp
push
or
or
adc
inc
lea
adc
push
cli
mov
push
mov
cmp
dec
xor
fcomp
push
jne
cmp
sar
mov
adc
jo
push
cmps
add
inc
and
cli
add
rol
clc
aad
cmp
or
movs
je
adc
add
mov
out
(bad)
xor
adc
ds
push
in
stc
mov
inc
loop
imul
push
cmc
xor
or
lock
mov
mov
pop
pop
push
jecxz
push
call
aam
xchg
aad
or
ret
cmp
js
jge
jne
pop
or
lea
(bad)
sar
dec
sub
adc
adc
inc
inc
mov
mov
daa
jge
or
xchg
and
int3
stos
sub
cmps
sub
(bad)
sub
sbb
adc
in
xchg
add
lsl
pop
inc
in
inc
pop
cmp
test
retf
dec
dec
push
cwde
xor
push
inc
ds
call
mul
xchg
xchg
(bad)
fadd
add
loope
mov
inc
adc
or
pusha
and
push
xor
adc
test
scas
adc
fwait
movs
pop
call
mov
lea
pop
cli
je
mov
cdq
sbb
jge
xor
xor
mov
ret
ins
mov
icebp
stos
push
in
(bad)
call
sub
fcomp
call
repnz
pusha
add
mov
or
or
jne
(bad)
sub
shr
test
mov
lds
rol
cmps
jo
xchg
popf
sub
xor
or
sbb
inc
(bad)
or
add
shl
push
push
or
adc
jmp
push
adc
mov
aas
dec
clc
xchg
add
test
out
test
sahf
nop
jbe
sbb
jmp
mov
sti
sbb
or
mov
jbe
bound
mov
ss
shl
or
ds
cdq
lea
mov
sub
lods
push
mov
(bad)
loopne
mov
es
cmp
mov
cmps
in
cdq
pop
nop
mov
hlt
enter
test
cmp
mov
sbb
movq
ds
dec
ins
add
aam
or
xlat
add
adc
jbe
pop
push
mov
and
cs
adc
mov
stc
push
add
faddp
(bad)
cmp
sbb
pop
xor
pusha
push
sbb
add
out
add
add
pop
shl
mov
inc
ret
xchg
xchg
pop
xchg
cmp
fst
scas
repnz
rcl
int3
pop
dec
jnp
movs
cs
and
aam
push
dec
adc
loopne
cdq
loope
mov
add
and
mov
addr16
xor
add
push
jns
mov
lea
ror
push
pop
imul
movs
inc
jmp
out
or
push
push
stc
loop
mov
les
lods
test
test
bound
scas
add
loopne
scas
push
sub
push
imul
dec
xor
fst
in
add
jnp
add
cld
push
fs
dec
std
fst
loop
hlt
idiv
mov
in
xor
cmp
xor
scas
mov
lock
test
(bad)
sbb
imul
push
push
add
xchg
jge
daa
and
arpl
adc
fistp
aam
adc
fcomp
xchg
addr16
test
push
iret
or
or
cmp
cmps
xchg
jb
aad
inc
pusha
mov
cmp
sub
and
mov
push
mov
push
cmp
xor
jmp
mov
(bad)
out
test
jbe
cmp
movs
mov
pusha
mov
xchg
and
cmp
movs
mov
adc
shl
adc
xor
xor
jle
pop
and
les
add
cmp
sahf
sbb
(bad)
pop
push
dec
mov
mov
mov
test
inc
bound
add
fst
ret
inc
add
mov
aam
rol
sbb
sub
pop
es
mov
add
cmp
arpl
loopne
push
in
mov
or
mov
sti
mov
jle
add
xor
dec
lock
fs
jle
popa
add
icebp
rol
or
repz
gs
xchg
xchg
rcl
mov
cli
iret
sti
jne
stos
test
fmulp
lods
adc
jge
push
movs
ret
fmul
pop
mov
inc
inc
push
inc
sbb
fisttp
fcomp
aad
push
and
sar
add
add
pop
aas
ror
int
sbb
xor
daa
sahf
inc
inc
shl
mov
xor
std
(bad)
inc
sub
rcr
xor
imul
push
rdpmc
shl
(bad)
jg
xor
scas
call
add
and
xor
sbb
pop
enter
or
and
cmp
push
add
ret
(bad)
mov
loop
inc
shr
call
outs
push
les
xchg
jo
pop
push
fisub
cs
push
push
or
dec
stc
lock
cmp
sbb
lods
addr16
sub
in
jns
jmp
inc
fcom
push
push
nop
adc
or
hlt
push
lea
jno
push
into
loope
imul
add
mov
xchg
dec
pop
inc
pop
dec
adc
and
or
add
je
or
fs
cmp
sbb
dec
cli
xchg
ss
cmp
inc
mul
lahf
cmps
ds
leave
mov
and
or
dec
sbb
nop
mov
lods
or
xor
cmp
je
push
add
sub
sub
dec
es
and
inc
or
or
push
adc
mov
outs
xor
jp
push
mov
jge
mov
cdq
mov
push
movs
xor
push
xchg
mov
ror
loopne
popf
daa
sub
adc
retf
fnsave
in
mov
dec
xor
mov
add
mov
cmp
int3
jae
and
stc
jae
in
add
sub
inc
pusha
sbb
pop
test
outs
lods
loopne
xchg
leave
cdq
nop
test
and
pop
cmp
adc
sbb
push
ins
or
out
sub
sub
retf
mov
dec
cmps
imul
dec
je
add
sub
pop
nop
test
jne
mov
adc
xchg
add
push
sub
and
fistp
add
test
cmp
add
or
and
sbb
add
sbb
inc
inc
sbb
ror
pop
xchg
xor
push
loope
add
in
push
mov
inc
and
add
adc
push
mov
pop
xchg
sbb
mov
dec
push
jnp
adc
jb
xchg
or
outs
sar
pop
je
scas
mov
pop
push
push
nop
and
inc
fbstp
xchg
cmp
pextrw
sub
push
and
pusha
adc
lods
ret
jb
mov
add
shl
cmp
inc
ss
pop
or
scas
jge
inc
popa
adc
lea
sbb
jmp
adc
ja
test
cmp
(bad)
and
ja
jle
push
mov
test
mov
stos
in
lea
xchg
add
dec
push
clc
and
gs
rcl
and
add
ret
ret
add
pop
push
dec
ret
mov
add
xor
mov
test
add
cld
add
in
or
sub
mov
pop
mov
adc
cs
or
bound
lods
dec
jne
mov
movs
loop
hlt
fsub
sub
int3
shl
int
cmp
pop
fimul
inc
xor
imul
in
add
mov
call
and
pop
mov
sub
adc
stos
or
retf
not
push
in
jle
sbb
adc
mov
or
xchg
call
add
stos
mov
dec
not
cmp
mov
bound
sbb
pop
jb
jmp
pop
or
or
dec
sbb
nop
push
pop
fnstenv
xchg
fisub
popa
push
inc
push
and
outs
out
or
cmps
sbb
sahf
(bad)
test
adc
pop
jbe
mov
repnz
add
push
push
jns
mov
pop
jne
pop
ffreep
mov
pop
and
adc
scas
sti
xchg
pop
fbld
xchg
rcl
fadd
mov
add
xor
push
jg
gs
sub
dec
adc
push
jle
pop
inc
add
iret
jbe
inc
(bad)
mov
test
inc
in
and
pop
jmp
mov
mov
xorps
inc
xor
inc
sub
scas
fsub
ins
loop
and
cmp
ja
pushf
add
push
jmp
js
pop
inc
jmp
adc
add
lods
shr
or
sub
inc
ins
push
dec
movs
adc
inc
jo
fst
dec
mov
adc
inc
loope
sbb
mov
add
mov
dec
dec
xchg
xchg
add
data16
neg
rol
adc
push
mov
call
sub
push
push
sahf
fwait
and
adc
or
not
das
inc
outs
dec
mov
ja
pop
cmp
or
cs
out
div
sbb
mov
fild
sbb
fwait
jns
ror
imul
add
sar
aaa
pop
push
pop
sub
sbb
sbb
js
pop
xor
pop
dec
or
ds
jo
pusha
xchg
fcmovbe
jmp
sbb
sbb
dec
cmp
push
shl
pop
sbb
sar
pop
fwait
out
mov
sar
sub
mov
or
xchg
jge
jno
pop
(bad)
fcmovb
sbb
inc
sub
or
jb
ret
push
sti
lock
and
mov
pop
ret
popa
in
movs
mov
pop
mov
xor
fstp
push
or
add
mov
aam
push
push
inc
stc
adc
cmp
mov
xchg
ss
dec
aam
and
adc
fistp
jecxz
sbb
or
mov
bound
xchg
popf
call
rcl
data16
call
push
mov
repnz
dec
mov
inc
sbb
jle
je
or
pop
push
sub
(bad)
je
dec
je
shr
and
xchg
and
(bad)
movs
int3
mov
js
arpl
adc
sub
fdiv
jmp
rcr
push
cdq
jnp
fld
sub
jne
xchg
mov
push
lds
dec
in
in
in
and
add
and
imul
sbb
pop
pushf
ror
test
dec
ror
imul
inc
inc
xchg
enter
add
rol
inc
pop
push
mov
jne
jmp
or
sbb
xor
int
adc
retf
or
xchg
and
pushf
mov
push
push
cwde
jb
mov
mov
into
sub
mov
out
push
add
cs
add
add
xchg
and
cmp
dec
and
inc
fdivr
shl
or
jo
pushf
pusha
sahf
jg
adc
ins
mov
lea
test
rcr
sbb
mov
jp
xchg
xor
mov
movs
adc
mov
add
ficom
sbb
bound
ret
add
inc
xchg
and
fld
or
jo
add
ret
mov
adc
add
sbb
dec
rcl
inc
je
jmp
outs
lea
mov
ins
jb
test
xchg
pop
mov
sub
jb
iret
lahf
aaa
mov
sbb
fisttp
xchg
cmp
ja
cmp
push
dec
clc
mov
hlt
xor
aad
test
iret
mov
ds
cli
rol
cmp
shl
jp
sbb
daa
jp
jecxz
movs
loope
dec
(bad)
cld
pop
movs
arpl
dec
add
cmp
xor
in
or
pop
repnz
jmp
lock
inc
jb
dec
push
test
idiv
cmps
adc
stc
or
inc
dec
call
sbb
or
and
and
sub
push
mov
jns
dec
das
cs
sbb
jo
cmp
movs
ja
inc
ret
sub
and
fstp
adc
shl
sbb
aad
and
mov
xchg
or
out
rcr
ds
push
rol
jmp
dec
ins
rcl
dec
xchg
or
inc
in
xor
icebp
gs
les
pushf
lea
lea
clc
xor
test
push
dec
fcom
call
fmul
jmp
sub
jg
push
mov
mov
push
pop
imul
popa
dec
dec
sbb
movs
xchg
pusha
push
and
pushf
or
sub
push
add
push
ss
into
add
fs
sbb
mov
adc
push
ins
ret
adc
adc
ins
loopne
adc
mov
adc
sbb
(bad)
or
add
and
pop
and
and
jmp
xor
adc
add
dec
(bad)
pop
fcom
xchg
mov
ja
fadd
int3
jmp
popa
mov
pop
fcom
add
inc
cmp
add
icebp
xor
dec
pop
and
jl
pop
pop
cld
jge
jb
jo
mov
lods
xchg
adc
(bad)
dec
add
ret
imul
pop
push
pop
add
jno
out
sbb
jne
add
(bad)
sub
dec
and
mov
push
mov
test
popf
ret
sbb
jle
ja
mov
xchg
and
adc
adc
xchg
pop
fadd
xchg
xchg
stos
sbb
add
sub
repz
hlt
div
or
push
mul
test
and
ins
mov
pop
call
stos
in
push
xor
dec
adc
nop
push
fsub
sbb
in
fsub
sbb
call
cmp
jl
dec
movs
sti
or
and
push
push
and
mov
mov
daa
ror
scas
aad
out
add
mov
das
xchg
push
fadd
jae
adc
sahf
cmp
jne
cdq
gs
mov
push
sub
cmps
xchg
lea
ret
lds
sub
pushf
mov
lea
mov
sti
xchg
adc
adc
ror
outs
shr
mov
popa
mul
loope
pop
mov
enterw
inc
or
scas
add
add
sbb
mov
aam
loopne
shl
enter
sub
iret
aaa
mov
stc
sbb
pusha
adc
or
loope
add
or
ret
mov
nop
sbb
out
test
enter
and
data16
imul
sbb
adc
repnz
call
mov
mov
inc
ds
movs
loopne
daa
jo
add
out
lds
push
cmp
outs
add
cwde
daa
or
imul
pop
inc
sub
fadd
dec
mov
mov
add
cmp
cmp
das
add
iret
inc
mov
adc
jl
imul
cmp
iret
mov
adc
sbb
shr
push
jecxz
pop
loope
sbb
jg
cdq
mov
inc
adc
xchg
mov
sbb
dec
add
call
dec
and
pop
aam
into
call
cmp
sub
add
add
sbb
add
popf
or
shr
cmp
or
or
or
(bad)
pop
cmp
or
add
pop
adc
comiss
and
or
sbb
or
mov
sbb
sahf
mov
cmp
add
add
pop
jmp
add
enter
sbb
dec
test
xor
xor
cs
pop
imul
jmp
test
std
popa
call
jp
push
test
or
adc
lea
out
pop
dec
stos
js
inc
lock
invd
push
jo
js
add
jge
mov
in
lods
cs
jmp
push
pop
dec
and
in
jb
push
sub
dec
add
pop
add
or
add
shr
or
dec
mov
adc
xchg
jo
call
adc
pop
jb
movs
pop
aaa
daa
adc
or
xchg
xchg
and
push
add
lock
mov
push
xor
(bad)
xchg
ret
push
mov
sub
adc
mov
fld
inc
cmc
shr
mov
xor
inc
imul
cmp
jge
or
cmp
push
ret
ins
lds
push
popa
push
test
sbb
or
push
ror
pop
cmp
cvtdq2ps
jo
out
pop
push
fcomp
jmp
adc
scas
dec
sub
inc
push
sub
dec
test
or
ins
fiadd
and
outs
imul
shr
test
cdq
mov
dec
shr
jecxz
movs
mov
jnp
sbb
cmp
inc
in
or
or
xor
jb
or
in
mov
or
pop
cmp
push
mov
shl
in
scas
scas
nop
adc
mov
stc
or
call
ins
push
jecxz
ret
mov
pusha
cmps
adc
mov
adc
or
or
das
std
call
push
lds
cmps
xor
inc
rol
cmp
cmp
dec
dec
xor
inc
jl
stc
push
in
inc
movs
xor
push
or
fcom
(bad)
and
xchg
imul
popa
inc
ret
or
mov
jp
test
mov
add
fcom
add
je
sbb
or
(bad)
adc
test
fdivr
dec
push
adc
jae
jo
and
add
test
pop
add
shl
arpl
jb
jb
in
lds
leave
sbb
xchg
sbb
xor
arpl
sbb
into
sub
mov
cmp
push
out
or
data16
movs
ror
mov
sub
(bad)
in
xchg
pop
int3
(bad)
xchg
ret
ret
div
loope
xchg
(bad)
and
les
loope
dec
(bad)
jle
pushw
test
sar
or
(bad)
fbld
mov
in
std
push
adc
or
inc
pusha
mov
cwde
mov
in
(bad)
in
pop
adc
and
pop
leave
daa
vpmadcsswd
nop
das
aaa
les
arpl
cld
and
add
iret
loope
add
pop
ins
and
nop
cld
sbb
mov
cmp
and
fcmovu
scas
jmp
sub
sbb
mov
cmp
in
push
pop
sub
jp
add
xor
sahf
jns
les
fadd
cwde
mov
sub
mov
xor
fimul
adc
push
mov
mov
test
test
pop
clc
and
and
cmp
xchg
in
call
lods
xchg
pop
pop
enter
arpl
loopne
jb
jp
or
loopne
icebp
rcl
nop
dec
jo
sub
inc
js
inc
loopne
cmp
or
inc
push
out
cmp
xchg
(bad)
mov
add
nop
or
mov
scas
add
jmp
dec
test
ins
push
(bad)
in
imul
retf
jno
inc
add
add
add
rol
add
and
mov
xchg
dec
js
and
aas
adc
jns
(bad)
(bad)
jge
push
adc
adc
dec
add
xchg
ds
add
and
sbb
nop
out
mov
add
adc
loopne
shl
cwde
push
push
push
mov
sub
sub
inc
popa
dec
mov
(bad)
scas
adc
mov
dec
shr
xor
adc
in
pop
pop
and
out
rcl
fdivr
and
mov
mov
test
clc
add
or
push
pop
jp
adc
retf
sub
inc
je
xchg
jne
lds
nop
and
imul
repnz
inc
sub
retf
sbb
jne
jmp
ja
xor
pusha
mov
jb
sbb
add
mov
push
add
into
jns
ds
mov
not
mov
out
je
xchg
les
adc
push
in
sbb
add
fistp
and
sbb
mov
sbb
or
or
lock
les
test
pusha
xor
fld
xchg
xor
pop
neg
mov
sub
mov
or
xchg
in
add
(bad)
ret
inc
cmp
adc
std
pop
shl
fldenv
add
fs
mov
js
into
push
adc
lea
jmp
cmp
div
or
xor
inc
and
les
les
and
lea
jbe
adc
adc
pop
outs
push
cmp
mov
xor
mov
daa
cmps
xchg
sub
or
in
mov
and
mov
jb
mov
sub
inc
outs
mov
xor
jbe
mov
loopne
and
inc
in
add
jge
retf
or
das
retf
(bad)
and
or
das
jo
fadd
leave
adc
cmp
movs
bound
cmp
mov
lahf
(bad)
fsub
or
repz
pop
sub
dec
inc
inc
js
scas
add
add
or
pop
mov
(bad)
in
push
aas
sub
mov
or
movs
cmp
pop
dec
mov
mov
(bad)
fidiv
ins
loop
enter
push
add
mov
imul
nop
icebp
xchg
push
out
pop
nop
and
nop
sahf
pop
cs
push
sbb
and
fmul
mov
sub
popf
xchg
or
mov
mov
push
pop
adc
inc
lods
aam
leave
ror
loop
scas
stos
std
mov
loope
push
add
add
test
push
push
cmp
scas
push
mov
int
cmovnp
cmp
jne
enter
xor
sbb
adc
push
test
push
cli
loopne
(bad)
setl
test
sub
jmp
int3
cmp
mov
sbb
pop
and
xchg
lea
lods
(bad)
and
and
in
push
inc
push
jp
js
mov
xor
fcom
inc
mov
sti
push
mov
lahf
add
gs
fidivr
repz
push
fadd
mov
movs
std
cmp
cmp
xor
cs
ret
(bad)
pop
sbb
enter
add
xchg
adc
test
mov
arpl
sbb
mov
or
and
loopne
sub
push
test
mov
les
call
pop
and
jb
imul
arpl
adc
dec
mov
mov
mov
dec
in
mov
add
inc
les
xchg
xchg
shr
and
mov
xchg
out
pop
cmps
movs
pushf
pop
shl
ins
xor
adc
mov
pop
add
and
call
lds
je
cmp
mov
in
sub
dec
inc
mov
mov
mov
int
popa
dec
shl
push
out
mov
or
fadd
aas
xchg
mov
sub
pop
pop
sub
jb
fdiv
jne
(bad)
sbb
call
pushf
repnz
cmps
ds
shr
push
dec
push
mov
add
out
iret
adc
enter
add
ss
push
popa
mov
mov
pop
loopne
scas
pop
mov
adc
jmp
je
mov
test
inc
pop
sub
adc
test
inc
adc
push
inc
rsqrtps
pop
cmp
mov
push
pushf
sbb
cli
and
add
fwait
mov
daa
dec
or
rcl
cmp
push
or
sub
fcomp
add
jae
mov
pop
jmp
ror
add
inc
je
mov
or
inc
or
fnstsw
dec
or
scas
sub
sub
sub
xchg
push
add
jmp
jge
add
jmp
sub
movs
pop
sar
dec
popa
or
call
adc
xchg
pop
test
xchg
into
xchg
mov
inc
xor
sbb
adc
add
or
push
movs
imul
inc
add
add
push
pop
inc
mov
inc
call
cwde
mov
xlat
pop
out
mov
into
push
or
pop
test
dec
cmps
add
push
in
fwait
mov
fnstenv
sub
sbb
xchg
xor
add
lea
pushf
xchg
es
pop
add
or
push
test
iret
add
push
test
je
test
je
xchg
mov
inc
or
add
mov
shl
lods
xchg
xor
es
xor
cmp
stos
adc
mov
dec
pop
pop
sub
mov
(bad)
jmp
add
bound
mov
int
mov
int
inc
daa
rol
sub
sbb
push
arpl
mov
inc
jmp
jge
xchg
popa
sbb
xor
add
(bad)
popa
das
adc
sar
sbb
or
shr
mov
repnz
inc
inc
shl
xor
push
push
mov
ret
add
dec
jo
mov
add
jns
in
inc
mov
(bad)
cmp
scas
cmp
inc
inc
xor
into
jle
(bad)
fbstp
test
je
push
test
sub
rol
cmp
add
push
push
ja
cmp
movs
pusha
push
js
push
jo
movs
dec
pop
retf
push
adc
ja
ins
jmp
clc
and
jle
dec
in
jae
sub
push
jmp
xchg
jns
int3
xor
jmp
jmp
push
cli
or
jmp
or
jae
and
xor
mov
and
and
cs
sub
mov
adc
push
popa
into
out
cmp
dec
sbb
iret
mov
sahf
xor
push
adc
fnstcw
mov
adc
mov
inc
pop
jbe
jge
out
add
mov
idiv
mov
sub
push
xor
icebp
jnp
cmps
push
or
xchg
cmp
mov
sbb
mov
jb
cmp
pop
mov
xchg
leave
shl
je
es
test
pop
sub
sahf
mov
inc
xor
mov
sbb
xor
pop
inc
mov
inc
and
cmps
imul
fwait
cmps
imul
inc
inc
push
mov
push
bound
push
inc
daa
(bad)
movs
add
shl
mov
pop
std
shl
enter
add
cmp
hlt
jl
adc
ror
out
xor
mov
adc
push
nop
imul
dec
cmps
xor
in
out
add
and
ja
je
add
pusha
pusha
jmp
pushf
ja
mov
and
cs
ins
jl
jbe
xor
cmp
xor
aaa
lahf
lea
jno
jge
sub
push
ror
sbb
push
aas
xchg
jecxz
dec
(bad)
fldcw
rcl
lahf
in
sbb
cmp
jb
add
dec
bound
dec
add
push
and
out
push
cld
add
push
data16
fsubr
popa
or
cmp
ret
push
sub
push
popa
cmp
sub
loopne
sbb
sbb
fsubr
add
sbb
pop
sub
fnstsw
adc
das
lods
imul
add
cld
sbb
je
inc
sbb
icebp
cmp
jne
cmp
jb
dec
or
pop
pusha
rcl
inc
or
inc
pop
mov
cmp
mov
mov
jo
sub
push
sub
mov
push
push
push
sub
add
repz
and
retf
sbb
xor
add
nop
sub
mov
fwait
add
jo
ror
inc
je
mov
sub
call
push
clc
xor
add
mov
fs
pop
fsubr
mov
lods
xchg
or
adc
inc
clc
sub
adc
les
pusha
push
aaa
adc
ret
aaa
inc
data16
push
add
pop
je
(bad)
in
leave
sub
push
add
inc
mov
or
adc
jmp
xchg
add
dec
aas
dec
push
push
push
mov
pusha
xor
adc
sub
stos
jbe
jmp
shr
and
aaa
ror
jmp
sbb
dec
sbb
out
enter
and
ss
push
ret
lea
mov
or
pop
jo
loopne
and
dec
mov
xlat
sahf
loope
cmp
push
pusha
sub
and
pop
jnp
ss
movs
inc
test
mov
sub
adc
loopne
sub
pusha
push
aaa
cmp
add
or
or
pop
pop
xchg
adc
sbb
test
jb
dec
mov
jae
mov
xchg
mov
shl
nop
mov
mov
or
xchg
mov
sbb
dec
leave
adc
adc
ror
add
and
or
icebp
stos
jbe
stc
shl
cdq
xchg
imul
and
out
or
add
push
sbb
jae
dec
mov
nop
mov
and
xchg
call
adc
test
xchg
int3
xor
sbb
in
push
dec
in
ins
xchg
push
lahf
clc
or
pop
cwde
in
adc
pop
ja
ret
repnz
lea
pop
add
mov
lock
mov
fs
dec
js
sub
push
or
inc
out
ficomp
mov
and
ds
push
and
in
or
fidiv
es
and
adc
inc
push
inc
sub
push
inc
push
xor
push
inc
push
cmp
xchg
call
shl
and
inc
or
xlat
mov
dec
dec
rcl
xchg
push
inc
dec
add
push
retf
dec
shr
adc
ja
frstor
and
cmp
xchg
inc
je
movs
lea
or
inc
inc
in
adc
push
sub
mov
cmps
ret
add
push
inc
mov
sbb
test
call
adc
shl
scas
jbe
cmp
sub
icebp
adc
push
pusha
int3
inc
push
out
cld
push
das
fadd
or
or
test
fld
jns
ins
in
jnp
jbe
sbb
pmaxsw
ror
ja
push
(bad)
out
inc
ror
or
pop
jle
ret
mov
add
popa
mov
add
xor
jg
cmp
sbb
inc
(bad)
(bad)
xor
retf
loope
dec
in
jg
adc
test
or
sub
mov
sbb
add
ror
pop
test
xor
pop
pop
fimul
xchg
jl
pop
add
mov
push
push
call
add
shl
push
lods
inc
xchg
dec
rcr
or
mov
fs
or
inc
cld
or
adc
inc
sub
push
push
mov
dec
adc
xchg
pop
mov
inc
adc
fild
inc
xor
pop
nop
test
mov
mov
imul
inc
adc
ja
out
adc
test
pop
xchg
fimul
in
xor
ins
out
push
or
call
fsub
scas
add
jg
lock
shl
(bad)
or
pop
xchg
mov
pop
repnz
mov
pop
shl
xchg
jno
cmp
xor
mov
sbb
sbb
xchg
sbb
adc
adc
sbb
mov
movs
mov
mov
push
push
jmp
cmp
mov
imul
adc
sbb
and
inc
fcmovnb
and
shl
and
jmp
sbb
cli
push
dec
pop
lds
movs
push
dec
push
xchg
popa
aas
and
and
sbb
adc
xchg
xchg
or
xor
retf
lahf
enter
sbb
imul
jo
or
fwait
scas
lds
ja
or
pop
pop
mov
je
loopne
adc
in
adc
push
aam
pop
lods
and
stos
lahf
sub
and
mov
mov
test
mov
pop
je
adc
inc
mov
pop
sub
dec
push
jl
pop
clc
lods
or
ja
test
mov
jbe
xor
sub
push
imul
push
sub
add
(bad)
jle
loopne
sub
imul
lock
mov
jb
jmp
dec
pop
xchg
inc
cmp
cmp
mov
ss
add
out
cmp
pop
cli
enter
cmp
xchg
push
dec
mov
or
push
jbe
sbb
mov
pop
sbb
or
imul
xor
xor
outs
cmp
mov
dec
scas
popa
inc
inc
xlat
mov
add
xor
xor
mov
add
dec
push
mov
call
shr
mov
or
shl
push
mov
push
jg
pop
pushf
sub
lds
add
cld
sbb
cdq
xor
enter
ja
(bad)
into
adc
test
lods
jbe
mov
mov
dec
cdq
push
pop
idiv
jge
cdq
rol
add
inc
mov
push
test
mov
ret
inc
add
cmp
inc
ins
adc
adc
scas
cs
mov
bound
push
pop
add
sub
pop
es
cs
adc
mov
jmp
jmp
xchg
push
push
mov
jns
push
stos
mov
leave
dec
push
mov
adc
sbb
rol
xchg
add
adc
pop
inc
adc
into
push
movs
fwait
pusha
add
xchg
arpl
mov
add
ror
nop
ret
xchg
cmp
cmp
shr
sub
jo
inc
dec
jmp
push
leave
mov
or
pushf
inc
mov
lea
je
out
fcom
lahf
sahf
add
add
push
add
inc
or
rcr
leave
and
sub
test
add
cmp
xor
ins
mov
adc
inc
call
shl
cmp
jne
mov
push
dec
pop
push
dec
or
pop
fadd
add
clc
cmp
adc
test
push
loopne
inc
mov
and
add
adc
loopne
loope
jmp
jmp
outs
daa
test
jle
je
jmp
out
jbe
ss
js
cmp
sbb
add
loope
mov
dec
inc
jne
xchg
hlt
inc
pop
fs
or
hlt
(bad)
and
enter
jl
or
mov
jns
add
sbb
push
sbb
push
xor
add
add
ss
call
xor
outs
ffree
jmp
pusha
in
ret
push
push
push
cmp
stos
lods
test
xchg
nop
fs
jge
lods
ja
or
in
mov
sbb
xchg
pop
in
aaa
test
or
mov
jnp
sbb
imul
(bad)
dec
adc
shl
cmp
loope
mov
mov
jecxz
clc
ret
and
adc
ret
pop
stos
sbb
mov
mov
lock
js
and
movs
sub
dec
stos
cmp
ret
stos
les
test
cdq
je
js
ins
mov
fcomip
xor
add
xor
jmp
and
sahf
ins
add
jne
push
push
sbb
jmp
dec
inc
aam
add
cmp
scas
adc
push
movs
(bad)
(bad)
jl
push
sub
je
xchg
dec
and
shl
and
fsubr
(bad)
fwait
pushf
sub
add
int3
push
loopne
test
add
inc
movs
mov
sar
pop
aam
pop
sub
adc
ror
add
or
stos
cmp
movs
sub
enter
xor
push
or
sub
mov
mov
retf
push
add
push
mov
(bad)
sbb
(bad)
lds
cli
pop
xchg
je
icebp
jp
sbb
pop
enter
jbe
push
or
fisttp
sub
or
cmp
push
add
inc
or
pop
inc
bound
sbb
mov
pop
ror
cwde
dec
push
pop
or
jne
retf
rcl
cs
push
inc
test
or
add
cs
adc
imul
fcomi
jo
jne
(bad)
fild
adc
mov
jg
pop
jne
push
xchg
nop
pop
add
and
mov
dec
hlt
(bad)
xchg
jmp
push
xchg
inc
xor
test
mov
out
push
dec
xchg
div
pusha
mov
test
adc
loopne
sbb
push
xor
sub
push
push
and
dec
pop
xchg
sbb
fs
xor
sub
lods
xchg
mov
les
sbb
mov
mov
fist
mov
pop
stos
xchg
movs
mov
jae
mov
mov
ins
loope
jmp
adc
jne
or
xor
repnz
or
aaa
pop
inc
add
inc
ds
mov
inc
push
and
movs
xlat
inc
adc
add
mov
adc
pushf
dec
pushf
adc
dec
sub
in
in
adc
in
sbb
xor
enter
mov
push
dec
sub
dec
jl
je
adc
hlt
and
or
xchg
push
outs
test
xor
sub
loope
xor
dec
je
mov
mov
js
arpl
sub
push
stc
aaa
ror
adc
adc
pop
xor
xchg
sar
inc
mov
push
xor
fdiv
mov
call
sub
test
sbb
fwait
in
pop
and
fst
nop
shl
inc
rcl
shl
jbe
jmp
push
pop
mov
cmp
int3
mov
jo
dec
ins
lea
leave
push
out
jo
mov
or
mov
(bad)
fwait
into
pop
call
inc
enter
mov
jae
push
in
adc
fmul
stos
xor
xchg
xchg
mov
add
sub
add
mov
or
dec
push
lock
add
adc
sub
mov
mov
fs
fisttp
arpl
imul
sbb
je
arpl
and
adc
ins
mov
push
sbb
pop
scas
xchg
inc
sub
mov
adc
scas
clc
adc
mov
fwait
xor
xchg
adc
and
xor
or
retf
mov
pop
sbb
or
push
loope
call
and
pop
ror
popf
inc
or
jne
inc
inc
imul
inc
das
xor
icebp
das
push
imul
jl
mov
js
hlt
cmp
mov
repnz
dec
pushf
in
xchg
fcom
addr16
mov
pop
mov
or
sbb
push
pop
push
js
daa
mov
cld
push
into
push
popa
mov
and
sbb
fld
xor
(bad)
pusha
and
push
adc
dec
cmp
sbb
ret
inc
sbb
outs
sub
or
pusha
lock
fucom
sub
or
cmp
ret
hlt
pop
adc
movs
or
add
retf
mov
test
jecxz
add
mov
pusha
add
xchg
fiadd
cmps
sbb
mov
jmp
push
les
mov
enter
ja
pop
pop
enter
push
push
pop
sub
test
inc
mov
pop
lods
push
dec
cmp
(bad)
pop
adc
mov
stc
adc
sbb
retf
fs
and
sub
icebp
sbb
test
test
imul
enter
pop
jmp
xor
push
cdq
nop
fs
neg
adc
sbb
xor
fs
pop
jmp
pusha
cmps
retf
sbb
mov
mov
push
inc
(bad)
and
jne
push
adc
push
xchg
and
pop
push
sbb
xlat
lea
push
xor
cmp
push
pop
adc
inc
adc
push
enter
and
dec
jmp
outs
and
xchg
sbb
sub
add
sbb
arpl
push
fmul
xchg
inc
pop
ss
and
cmp
inc
sub
lods
and
call
icebp
and
test
cmp
in
into
std
lock
test
fmul
or
loopne
and
jnp
mov
fnstenv
add
add
in
das
inc
xor
iret
out
inc
inc
sahf
inc
and
push
inc
sbb
aam
lock
push
add
cdq
fmul
dec
lock
or
mov
pop
add
js
jbe
inc
pusha
inc
shl
cmp
push
push
sahf
mov
add
ds
push
jb
lds
lock
outs
jmp
cmp
icebp
mov
xor
mov
and
hlt
adc
pop
adc
mov
inc
das
push
(bad)
mov
push
sub
sbb
test
push
xchg
mov
sub
movs
or
cmp
popf
adc
aas
out
dec
aam
push
adc
xor
sub
jle
pushf
cmp
not
pop
mov
test
pop
in
xlat
jmp
pop
punpckhdq
push
dec
xor
loope
xor
jae
or
sbb
les
std
sbb
sbb
js
inc
fsub
mov
jo
and
jecxz
aam
sbb
adc
jg
mov
or
lea
jb
lock
sub
sub
xchg
xchg
dec
cmp
loopne
js
sahf
inc
jmp
and
or
push
imul
cmp
ins
and
rcl
mov
sbb
push
and
sub
mov
push
pop
fsub
add
cmp
jmp
adc
ss
dec
cld
popa
and
add
or
out
pop
or
dec
add
in
sub
sbb
fwait
or
div
ds
inc
loopne
imul
push
pop
retf
inc
pushf
fdiv
in
and
les
fnstcw
jmp
push
push
je
movs
pushf
sub
loop
fmul
sbb
aaa
push
jl
inc
cdq
mov
call
dec
dec
sahf
out
and
pusha
lods
sbb
xor
shufps
mov
into
and
dec
aaa
movs
dec
gs
jb
pop
test
cmp
adc
add
adc
lock
adc
push
fadd
jno
cmp
dec
mov
fxch
cmp
mov
add
aas
dec
xor
dec
sub
xor
push
jns
jmp
push
xchg
outs
loopne
sub
lds
int
movs
popf
pop
aaa
mov
and
sti
sub
or
mov
mov
js
inc
and
sub
lods
dec
mov
pusha
aam
mov
(bad)
or
leave
adc
mov
repz
ror
add
or
pop
push
fcmove
xor
addr16
nop
add
cmp
or
sbb
inc
sbb
les
and
fs
jge
out
scas
mov
xchg
and
jne
dec
sub
loop
je
mov
inc
aaa
dec
mov
xor
inc
xchg
pop
push
pop
sbb
and
or
add
clc
ins
add
mov
push
pop
dec
ret
jl
dec
or
mov
sar
and
or
xor
sbb
and
push
lods
loop
test
fucompp
add
out
add
icebp
add
inc
sub
and
paddusb
loope
or
sbb
push
bound
les
out
or
imul
sbb
cmp
and
mov
sub
in
in
xor
in
in
cmp
add
sub
push
loop
repz
mov
out
adc
sbb
push
enter
dec
pop
leave
inc
leave
dec
push
adc
sub
push
cmp
cmp
(bad)
out
inc
call
hlt
or
out
mov
mov
jbe
lahf
ja
adc
pop
pop
and
push
in
bound
push
imul
adc
xchg
inc
and
or
xor
jle
adc
adc
outs
ffree
cmp
jo
imul
gs
xchg
xor
sbb
cmp
and
ins
or
adc
adc
push
pop
fst
repz
jae
popa
push
mov
(bad)
adc
fisttp
aam
inc
inc
adc
mov
xor
fdivr
inc
adc
and
add
fs
pop
loope
sbb
and
gs
sbb
or
jg
sub
dec
pop
or
jne
mov
into
ss
xchg
inc
mov
loopne
lock
pop
loope
into
mov
dec
ret
(bad)
add
out
or
outs
stc
pop
(bad)
movs
push
(bad)
pop
push
inc
or
dec
loop
adc
fadd
lock
retf
cmp
add
pop
test
push
push
jnp
push
pop
lea
lea
add
xor
mov
loop
imul
mov
pop
push
xchg
xchg
movs
fs
add
clc
ret
push
push
xor
cmp
add
in
or
cmp
js
xor
ins
push
scas
mov
push
xlat
into
push
out
dec
fmul
mov
rol
aam
sub
bnd
scas
sub
sbb
rcr
sub
jl
shl
mov
int3
lea
pop
lea
and
jmp
sub
or
mov
pop
xchg
jne
push
fcmovu
push
jecxz
in
loope
adc
xchg
add
pop
xchg
sub
add
xor
ja
lea
ds
je
seto
adc
test
dec
sbb
dec
pop
jmp
cmp
inc
ins
or
sub
sbb
sti
pushf
sub
cmp
mov
aad
movs
ss
mov
push
iret
jae
push
mov
pop
sbb
rcl
in
imul
shl
push
test
ret
and
jmp
adc
add
in
rcl
outs
cmp
xlat
retf
mov
pop
push
arpl
cmc
ret
inc
and
push
or
pop
mov
push
stc
mov
sub
ds
rol
dec
je
dec
push
or
jo
mov
lock
mov
mov
sbb
jnp
mov
sbb
xchg
mov
inc
add
inc
mov
and
mov
div
movlps
pop
sbb
pushf
sub
jmp
inc
arpl
xchg
cmp
cmps
add
jmp
mov
dec
push
add
adc
shl
adc
ins
or
(bad)
mov
xor
adc
or
and
pop
xor
and
je
push
and
pop
dec
adc
stos
push
add
dec
in
outs
sbb
jnp
lahf
ret
push
lea
adc
mov
je
jmp
test
out
(bad)
or
sub
adc
push
popf
and
mov
into
dec
and
add
rcl
jp
ret
hlt
and
nop
cs
add
lods
icebp
push
mov
xor
adc
push
adc
push
sbb
push
cmp
mov
jo
xor
sti
push
jne
mov
in
test
jmp
xchg
mov
ins
mov
sbb
pop
rol
hlt
jnp
loop
pop
lahf
and
in
push
push
mov
sub
pop
adc
std
push
add
fcom
push
lock
int
sub
mov
push
sub
sub
enter
popa
dec
outs
int3
sub
and
inc
push
ds
test
add
js
shl
outs
outs
jle
ins
add
je
pop
je
or
loop
xchg
adc
jnp
cmp
dec
js
xor
loope
popa
out
mov
call
and
add
jmp
dec
ds
xor
popf
rol
lea
push
sbb
fnstcw
xchg
dec
nop
adc
inc
cmp
cmp
inc
push
jecxz
stos
dec
jmp
adc
xor
es
das
retf
cmp
das
ja
sub
xor
adc
lea
(bad)
push
mov
pop
test
and
dec
call
in
and
and
cmp
outs
fs
and
jmp
adc
std
or
imul
je
pop
mov
adc
ins
add
or
and
lahf
add
out
sub
in
pop
mov
cmp
or
pop
mov
sbb
repz
cld
rol
popf
cmps
cmp
lds
popa
sbb
test
pop
dec
push
sbb
xchg
push
jp
push
or
sub
or
sbb
xchg
cmp
lock
inc
pop
sub
mov
pop
jbe
sub
cmp
mov
inc
rol
or
or
aam
inc
ret
jle
outs
jp
int3
or
jne
and
push
sub
hlt
xchg
push
and
cmp
push
jo
mov
push
mov
xchg
push
or
punpcklbw
jp
fstp
sub
mov
(bad)
sub
jmp
adc
xor
sbb
aam
inc
add
data16
mov
fst
ins
or
rol
xor
mov
sub
adc
jmp
cld
shl
(bad)
jno
jne
fild
adc
mov
enter
pop
dec
inc
aaa
icebp
and
and
xchg
out
xlat
add
jp
sbb
add
daa
push
cmp
dec
push
jbe
pop
add
dec
or
jmp
push
sbb
jl
les
ret
push
pop
dec
ret
gs
icebp
jo
lock
sub
jbe
inc
add
xchg
and
loop
(bad)
adc
dec
push
or
add
jp
scas
pop
inc
push
(bad)
push
dec
and
imul
and
ins
das
dec
or
sub
shl
cmp
movs
adc
jns
pop
fisub
adc
mov
push
cmp
mov
jnp
stos
shr
adc
or
pop
dec
mov
push
or
mov
lea
xor
push
mov
je
jo
sub
push
sbb
and
and
cmpxchg
mov
jle
xor
adc
dec
adc
sub
loope
sbb
popa
mov
out
pop
or
jo
jne
cmp
leave
xchg
test
test
pusha
inc
mov
outs
push
xor
movs
dec
cld
add
xor
cmp
push
sbb
daa
xor
sbb
(bad)
mov
test
(bad)
push
sahf
retf
out
push
adc
pop
mov
push
push
push
xor
or
jmp
mov
rol
sub
and
into
cmp
scas
cmps
fiadd
or
cmc
cmps
push
xchg
hlt
rol
pop
mov
bound
loope
xor
dec
cmps
adc
and
mov
dec
adc
xchg
or
and
add
add
push
icebp
mov
enter
mov
icebp
(bad)
and
test
loope
call
rcr
stos
mov
jns
mov
jbe
or
aas
xchg
cmp
ins
call
pop
retf
js
push
cmp
outs
ror
add
adc
sub
mov
xlat
(bad)
loope
arpl
repz
jmp
data16
shl
jne
or
ret
or
shl
icebp
push
bsf
call
xor
ja
ds
fadd
adc
add
je
xor
and
cmp
fistp
mov
movs
sub
mov
pop
inc
test
mov
mov
pop
ss
loop
jmp
hlt
daa
dec
push
mov
les
cwde
mov
and
mov
(bad)
jecxz
arpl
push
jnp
call
ror
int
cmp
xchg
mov
bound
push
jp
add
pop
xchg
mov
or
push
sbb
inc
ror
sbb
xchg
inc
mov
xchg
popa
inc
(bad)
sub
jle
and
rcl
push
in
call
aam
lods
sbb
cmp
adc
pop
or
inc
out
(bad)
fdivr
lods
les
je
and
pop
pusha
inc
and
fadd
add
jmp
dec
jmp
pop
adc
push
jl
(bad)
mov
popf
dec
cdq
clc
mov
sbb
sub
jo
mov
inc
and
neg
sub
adc
mov
xor
fild
loopne
call
inc
jle
sbb
push
push
adc
leave
dec
inc
bound
(bad)
sti
or
add
add
add
push
cmp
in
add
push
xchg
cwde
aad
inc
out
mov
retf
push
sbb
adc
sbb
dec
data16
jl
push
or
call
dec
or
cdq
sub
or
imul
or
lods
les
sub
pop
cld
leave
int3
call
or
jmp
stos
retf
inc
adc
stc
mov
add
push
(bad)
inc
inc
retf
sub
cmp
sbb
pop
lea
jecxz
aas
or
mov
sbb
icebp
xor
test
jmp
cmc
mov
cmp
ins
jne
push
pop
and
add
std
icebp
add
pop
sbb
adc
push
jge
mov
and
xchg
ret
push
cmp
cmp
or
mov
push
sbb
test
push
mov
mov
mov
rcr
push
scas
jbe
jnp
fdiv
lock
and
(bad)
and
pop
mov
and
sbb
out
das
out
or
les
movs
xor
and
(bad)
btr
in
mov
mov
xor
popa
jne
fld
xor
loop
push
mov
adc
inc
push
push
cmp
and
daa
lock
sub
inc
or
sbb
mov
pop
jle
jne
xchg
adc
mov
mov
mov
es
inc
jmp
dec
add
test
mov
call
imul
add
aam
out
pusha
adc
jp
lea
inc
rcl
xor
bound
rol
jle
outs
lods
test
retf
cmp
jo
push
xlat
call
hlt
int
imul
cli
cmp
cmps
aam
and
sub
sbb
ds
add
and
add
test
not
pop
ret
lock
rcr
retf
mov
test
push
lds
test
push
mov
lods
sbb
adc
jg
daa
inc
pop
cmp
or
pop
cli
pop
ins
loope
xchg
imul
jnp
mov
mov
xchg
imul
xchg
cmps
cmp
iret
push
mov
cmps
add
shl
bound
or
push
mov
loopne
imul
add
pop
xchg
or
xchg
push
fadd
push
push
adc
cwde
dec
cmp
jle
sub
imul
lods
or
or
push
add
add
lea
dec
cwde
mov
push
push
cmps
pop
mov
push
adc
jnp
data16
or
sti
mov
int3
push
(bad)
or
popa
jnp
hlt
xchg
add
inc
pop
cmp
cmp
xchg
je
push
mov
movs
pop
add
retf
mov
mov
pop
push
or
lock
add
test
mov
mov
call
imul
jbe
and
mul
mov
sbb
cs
ret
fucomp
push
cmps
inc
and
pop
add
pop
adc
movs
lahf
mov
sbb
fmul
jb
add
fsubr
inc
push
add
int
aam
pop
fadd
jae
pop
cmp
stos
popa
sbb
out
shl
mov
or
jmp
sbb
push
ja
pop
and
push
mov
or
ja
cmp
push
xor
pop
fiadd
adc
cmp
mov
jg
adc
(bad)
out
(bad)
clc
sbb
mov
lock
or
push
push
scas
xchg
nop
mov
pop
adc
sbb
je
mov
repnz
pop
popw
imul
aas
add
mov
jmp
push
jmp
stos
cmp
mov
(bad)
fmul
push
jl
add
mov
mov
loop
das
cmp
test
mov
fld
mov
mov
mov
jo
and
jmp
in
outs
or
dec
inc
push
add
leave
mov
cmp
push
sub
dec
fwait
mov
xlat
stc
ror
in
pop
ficom
addr16
fucomp
out
jge
ss
sbb
rol
popa
adc
aaa
adc
mov
dec
ror
mov
sbb
sar
aam
dec
outs
adc
loop
mov
jmp
push
(bad)
mov
outs
sti
jmp
mov
rol
and
add
mov
sub
inc
dec
jns
xchg
jnp
mov
retf
push
sbb
lods
jmp
shr
ror
xor
pop
adc
sbb
inc
repnz
xchg
push
in
mov
aaa
imul
inc
adc
nop
xchg
xor
lods
xor
and
push
mov
mov
sub
inc
sbb
das
pop
stos
ret
shr
pop
jmp
sbb
mov
pop
adc
jne
mov
call
inc
fwait
(bad)
mov
xchg
sbb
sub
mov
sahf
out
ins
jo
mov
(bad)
cs
push
inc
push
imul
jns
out
jbe
pop
mov
push
mov
iret
repz
retf
loopne
in
daa
out
in
fldenv
push
das
pop
and
movs
gs
sahf
or
imul
jnp
push
mov
daa
bound
movs
int
bound
loope
div
clc
iret
push
push
xor
sbb
mov
cmp
aaa
imul
jae
movs
xor
sbb
clc
imul
shl
pop
rcl
mov
mov
add
or
mov
sub
xchg
pop
mov
mov
outs
das
fdiv
ja
je
mov
jb
jno
adc
fmul
cmp
call
stos
sub
mov
cli
mov
mov
std
cli
ret
mov
js
pop
test
add
(bad)
shl
dec
sbb
mov
gs
mov
int3
gs
popa
cmp
adc
mov
cmp
push
or
add
add
aas
lahf
outs
jmp
lea
ja
movs
xor
mov
push
adc
sbb
inc
loop
push
or
xchg
pop
pusha
mov
or
push
aas
pop
push
pop
and
add
and
sar
mov
mov
and
mov
dec
iret
jo
lods
test
xor
ror
(bad)
js
or
adc
pop
and
and
and
xchg
loopne
out
jmp
xor
sbb
pop
(bad)
pop
into
xchg
scas
test
pop
push
aam
inc
stos
mov
push
adc
xor
push
inc
into
push
mov
pop
retf
dec
sub
dec
cs
pop
pop
add
test
pop
cmps
inc
inc
pop
in
push
aas
daa
fs
add
adc
dec
cmp
repnz
lea
add
test
(bad)
mov
sub
test
inc
xor
hlt
mov
sahf
lock
jmp
xor
mov
icebp
idiv
enter
or
test
or
xor
mov
push
inc
loop
scas
mov
hlt
or
push
imul
pop
ja
sub
mov
xor
inc
push
cmp
test
es
add
daa
in
cmps
iret
add
test
jne
mov
pusha
cmp
call
push
daa
pop
jo
outs
adc
sbb
xchg
inc
out
mov
add
push
xchg
lds
xor
jmp
cwde
and
(bad)
(bad)
div
sbb
arpl
cwde
or
xor
sub
push
jne
and
jo
push
inc
ret
jmp
adc
lahf
ret
pop
adc
rol
pop
pop
and
xor
ins
push
(bad)
lods
gs
xchg
jl
pop
int
add
cmp
or
jne
adc
jecxz
shl
stc
sbb
js
(bad)
cmp
fidivr
mov
call
rcr
std
push
fs
arpl
fsub
cmp
inc
mov
imul
inc
sbb
mov
push
inc
imul
aam
repnz
pusha
sbb
cmp
in
xchg
inc
push
adc
(bad)
dec
movs
push
xor
std
cmovae
jo
sub
cmp
inc
ret
mov
xchg
adc
xlat
sub
and
ror
cmp
lds
cmps
pop
xor
xor
sbb
pushf
mov
pop
sbb
fcomp
inc
ss
xor
add
adc
lods
mov
add
add
sbb
push
mov
lea
rep
cld
enter
fcmove
mov
les
or
and
je
fsubr
push
or
stos
sub
aaa
test
mov
jl
mov
push
arpl
mov
inc
pop
add
pop
jmp
mov
ret
adc
dec
in
jg
push
push
push
test
js
mov
sub
jne
lock
jecxz
adc
and
je
jge
dec
push
cs
rol
hlt
or
leave
icebp
pop
pop
aas
sub
dec
xlat
cmp
xor
cld
mov
pop
xor
call
test
jo
xor
and
out
push
loopne
data16
gs
loop
sub
int3
push
cli
jo
or
inc
fwait
popf
adc
mov
lock
fisub
sub
pop
js
je
mov
jp
push
or
jge
cmps
lods
in
ror
je
inc
stc
ficomp
push
or
hlt
xchg
push
out
and
aas
and
lea
or
mov
dec
add
and
jp
push
dec
popa
pop
int3
data16
add
cmp
pop
or
add
mov
dec
scas
clc
adc
cld
add
repz
push
mov
hlt
clc
inc
mov
lock
or
inc
inc
je
push
inc
adc
nop
call
push
pop
retf
push
cmp
xor
adc
ficom
add
pop
push
scas
sub
cmp
in
jge
add
cmp
inc
adc
add
and
add
clc
fild
test
add
cdq
xchg
cmps
cmp
stc
push
sbb
or
rcl
sbb
sbb
adc
jo
cmp
mov
mov
test
adc
mov
push
nop
data16
mov
add
test
(bad)
test
sub
(bad)
les
and
xor
push
leave
gs
sbb
fs
pop
aam
sub
or
jns
test
je
or
push
mov
sub
push
push
mov
pop
lods
addr16
sub
cdq
pop
cmc
xchg
hlt
or
arpl
pcmpgtd
push
and
mov
jne
sbb
(bad)
enter
pop
jb
es
sbb
ret
mov
and
test
mov
and
cmp
add
mov
or
lods
mov
adc
call
sbb
pop
shr
imul
push
xchg
adc
in
mov
std
dec
or
enter
or
dec
and
(bad)
ins
jg
jnp
ret
in
mov
or
pop
or
inc
jl
stc
sub
mov
jge
shr
call
rcl
sbb
movs
mov
xlat
mov
scas
push
popf
ins
int
js
mov
cld
aam
push
and
lods
in
das
pop
je
push
mov
pop
cmps
cdq
add
inc
add
arpl
imul
push
add
dec
sub
jecxz
ins
lods
popa
and
(bad)
call
xor
je
fdiv
pop
xchg
inc
cmp
ficomp
cmovnp
jo
les
daa
lods
sbb
add
dec
jmp
xor
int3
xor
pop
xchg
sub
adc
cmc
test
bound
mov
hlt
xchg
ret
dec
push
pop
test
or
ins
shr
inc
cmp
loope
adc
hlt
or
ins
and
inc
or
inc
inc
push
jb
(bad)
and
push
icebp
loop
clc
bound
jne
imul
pusha
pop
adc
jmp
mov
test
or
(bad)
jmp
fiadd
pop
int3
sbb
inc
inc
inc
test
je
xchg
cmp
sbb
lods
cmp
js
push
push
fs
and
mov
and
push
or
out
jg
pop
xchg
lock
dec
and
add
dec
shl
pop
repz
add
xchg
pusha
and
mov
sbb
inc
or
and
mov
scas
add
inc
add
test
or
xchg
push
xchg
add
lods
ret
cmp
sar
push
push
enter
mov
pop
ror
es
dec
movs
rol
pusha
mov
lods
push
mov
or
nop
xor
ror
je
arpl
add
cdq
push
shr
mov
scas
jecxz
cmp
(bad)
and
mov
cmp
jb
mov
icebp
xor
mov
jb
pop
dec
push
jmp
pop
pushf
std
and
test
mov
ins
jo
popa
push
inc
or
sub
les
xchg
js
cmps
fld
dec
jecxz
pop
mov
outs
and
or
js
mov
sahf
std
sub
out
pop
add
imul
ins
aad
cdq
jge
sbb
push
push
std
fisub
and
adc
mov
mov
xlat
shr
shl
call
jb
ins
jge
cmp
icebp
push
sahf
xor
push
inc
out
sub
aad
sbb
stos
adc
add
sbb
sbb
pop
and
xor
jo
mov
adc
and
inc
movs
xor
jo
sub
jne
xchg
adc
add
push
xchg
shl
hlt
test
or
mov
jnp
dec
cmp
inc
clc
test
jb
xchg
or
push
sbb
push
lock
sub
mov
pop
fmul
hlt
in
jl
scas
mov
icebp
test
dec
jecxz
sub
test
cmps
std
rol
in
je
dec
je
dec
jne
(bad)
repnz
mov
shr
pop
inc
jmp
dec
or
jo
and
daa
call
adc
je
inc
ss
or
mov
pop
jmp
scas
imul
jbe
idiv
nop
add
fwait
or
fst
(bad)
pop
xchg
test
into
push
push
jnp
adc
jmp
xchg
pop
jmp
inc
add
add
add
mov
dec
gs
add
or
adc
jo
cli
jmp
cmc
lock
clc
pop
xchg
aas
adc
push
xchg
or
adc
xchg
hlt
mov
mov
daa
ficomp
retf
or
mov
dec
inc
and
popa
icebp
push
and
cmp
cmps
mov
xchg
cs
mov
mov
fnsave
or
cmps
and
ret
mov
adc
aam
test
mov
ficomp
nop
push
loope
pop
and
add
lahf
pop
push
add
test
adc
sub
or
jnp
pusha
leave
enter
and
sbb
push
dec
push
mov
push
inc
sbb
mov
mov
jmp
push
nop
ret
or
or
pushf
daa
push
repnz
jl
push
pusha
push
enterw
stc
in
mov
mov
jle
sub
mov
push
test
mov
stos
retf
add
push
pop
push
aaa
mov
or
dec
(bad)
ds
mov
xchg
sub
or
shr
pop
neg
xchg
ss
push
mov
leave
mov
pop
cmp
fisttp
xor
cmp
pop
sbb
dec
mov
ret
cli
sbb
xchg
mov
and
rcr
inc
xor
hlt
lea
scas
mov
popa
mov
ins
mov
push
mov
sti
cdq
mov
fidiv
(bad)
and
jne
inc
inc
push
dec
or
adc
(bad)
dec
mov
dec
call
add
inc
cmc
mov
bswap
cmp
adc
jge
call
rcl
out
push
push
pop
inc
xchg
xchg
cmp
in
ror
jae
mov
in
push
clc
(bad)
mov
rol
and
mov
ss
jp
inc
jo
enter
sub
xchg
push
push
(bad)
mov
cmc
test
lds
jmp
ja
inc
push
ret
xor
out
add
adc
icebp
xchg
mov
loopne
mov
sbb
test
fild
lds
sbb
and
or
retf
or
hlt
cli
mov
sub
jae
sti
sti
sahf
mov
lea
mov
dec
int
mov
inc
pop
xchg
movs
push
jno
loope
sbb
aas
push
dec
enter
mov
jnp
mov
fist
xlat
test
cmp
(bad)
sbb
mov
adc
lock
movs
pushf
loop
ins
jmp
and
jmp
mov
cmp
mov
shr
sub
adc
outs
loopne
dec
xor
mov
sub
push
and
sub
pushf
test
inc
add
fisubr
cmp
or
adc
repnz
loope
nop
stc
test
xchg
inc
add
out
ret
dec
xchg
inc
mov
mov
sbb
sub
ret
stos
sbb
daa
adc
cwde
test
stos
mov
lods
sbb
ror
gs
loopne
xchg
sbb
cmp
jne
(bad)
fdivr
push
ins
call
mov
pop
mov
adc
aam
or
sbb
cmp
movs
loopne
push
xor
out
mov
lods
add
nop
std
xchg
and
jmp
push
xor
jge
lock
push
cmp
les
ror
sub
nop
retf
mov
add
repnz
ror
aaa
fdiv
adc
sti
add
dec
in
cli
test
jge
sub
sbb
add
push
mov
pusha
push
cdq
(bad)
xor
dec
inc
xor
adc
fisttp
stc
and
adc
mov
mov
test
xor
or
js
push
ja
jl
cmc
xor
or
sbb
jns
jns
cmp
jns
je
or
add
push
(bad)
and
jl
retf
push
ret
rol
mov
add
jp
or
lock
dec
jo
push
xchg
int3
jecxz
mov
adc
mov
or
push
mov
lds
cmps
jnp
xor
push
nop
fldenv
sub
daa
ror
inc
cmp
xlat
inc
add
retf
add
pop
bound
and
lods
and
in
call
sub
pop
or
mov
or
or
test
in
and
mov
lods
inc
xchg
xlat
sbb
ss
add
xchg
and
sbb
xor
fsub
loope
and
xchg
jns
or
mov
loopne
cmp
in
(bad)
jns
xor
sbb
imul
dec
push
inc
call
movs
adc
je
fwait
or
adc
and
mov
mov
add
ins
mov
sub
adc
lea
or
cs
jo
outs
pop
cld
mov
ins
js
in
shl
and
adc
adc
sbb
mov
sub
mov
adc
mov
add
sbb
adc
inc
ins
je
add
jge
add
movs
or
ins
push
movs
and
out
sbb
clc
ins
push
mov
outs
adc
xchg
push
sbb
jp
ja
scas
add
pop
sub
xor
aad
jg
or
mov
addr16
xor
adc
movs
add
mov
adc
jnp
dec
ins
cmp
add
and
push
pusha
pop
ret
dec
arpl
sbb
xchg
inc
sub
xchg
sbb
out
cmp
pushf
mov
mov
xor
nop
jbe
or
and
push
mov
aaa
and
jg
xchg
retf
call
or
shl
or
or
int3
cmp
mov
mov
xchg
fs
sub
and
jo
pop
xor
mov
adc
inc
scas
push
push
mov
push
jns
add
push
(bad)
ror
lods
daa
std
mov
imul
pop
adc
pop
xor
pop
pop
xchg
dec
leave
repz
push
aaa
mov
sbb
xor
push
dec
push
es
lods
mov
xor
pop
loopne
pop
fmul
sbb
adc
push
rol
pop
mov
push
repnz
nop
inc
jg
sbb
nop
out
or
(bad)
(bad)
jne
jg
cmps
jo
cs
and
sbb
fild
das
jmp
push
adc
sbb
sbb
or
lds
add
mov
dec
pop
mov
sbb
mov
push
pop
psrlw
mov
inc
xor
jle
je
push
je
clc
movs
adc
add
push
les
jmp
add
pop
and
pop
jb
ss
aaa
push
mov
cmp
push
mov
ss
lea
pop
pusha
fild
or
ror
inc
daa
inc
pop
mov
or
dec
xor
mov
jecxz
(bad)
ss
push
and
pop
jo
jle
push
jns
cli
ficom
cmps
mov
push
int
sub
and
cmp
cs
push
inc
cmp
pop
mov
or
cld
push
push
repnz
xchg
lods
pop
pushf
mov
push
addr16
ins
cmp
adc
aam
(bad)
in
xor
jo
retf
or
push
ret
jecxz
shl
je
inc
leave
inc
xor
test
add
xchg
mov
xchg
leave
mov
icebp
adc
sub
stc
push
(bad)
stc
mov
js
jle
cmp
jp
dec
xchg
xor
mov
inc
cmps
cmp
add
es
adc
cdq
adc
pop
jmp
int
push
sbb
lahf
repnz
loop
mov
lock
xchg
add
xor
in
and
lods
shl
xchg
test
cmps
xchg
adc
xchg
cmp
or
push
retf
(bad)
sbb
add
sbb
(bad)
shr
aaa
shr
mov
jne
popa
out
xor
and
jbe
jmp
in
mov
lock
mov
mov
or
jmp
mov
rcl
jmp
inc
xlat
and
lea
les
sub
xchg
ins
push
push
inc
adc
sahf
lock
push
cmp
imul
jmp
out
adc
lahf
dec
xchg
or
add
ret
pop
xor
or
and
sbb
mov
ja
or
add
je
dec
sti
push
sbb
jmp
test
test
sub
retf
dec
neg
nop
ins
pop
ret
(bad)
xor
inc
and
js
movntps
or
dec
xor
sbb
jns
out
mov
aad
es
lahf
jecxz
aam
ins
loopne
xor
lock
cmp
dec
fcom
jno
adc
add
and
loopne
push
xor
cmp
mov
jns
pop
mov
add
fwait
and
adc
pop
push
and
outs
jne
or
shl
sbb
mov
or
in
jp
mov
outs
inc
inc
or
ds
in
lahf
shl
scas
call
dec
loopne
ret
or
mov
pop
xchg
sbb
sbb
sbb
and
mov
inc
lahf
imul
cmp
dec
test
mov
fwait
dec
push
pop
and
stos
jo
jmp
sub
mov
cmps
and
(bad)
xchg
fstp
push
pop
jmp
outs
imul
or
movzx
sbb
jl
mov
lea
shr
add
or
jno
data16
or
and
dec
js
push
repz
or
add
das
add
add
or
inc
mov
call
push
loopne
pop
add
sahf
out
adc
js
jnp
aad
jmp
xor
nop
(bad)
or
frstor
mov
xchg
jg
or
in
adc
ja
movs
and
sub
mov
xor
mov
enter
lock
mov
dec
dec
test
dec
dec
hlt
sub
mov
sub
aam
(bad)
test
or
movs
push
addr16
shl
sub
mov
sar
mov
ret
js
dec
adc
lock
jge
cmp
jge
inc
add
mov
push
push
jne
add
cmp
ror
add
push
dec
mov
jl
sub
iret
dec
int
arpl
add
pop
test
sbb
retf
dec
test
ss
fwait
or
cmp
pop
das
in
out
xor
shl
fisubr
mov
mov
add
lea
loope
rcl
das
loope
mov
inc
test
push
add
mov
in
or
and
mul
fs
xor
mov
lock
add
add
pop
pop
xor
loop
push
sbb
test
test
fcmovb
add
xchg
std
std
(bad)
cmps
xchg
inc
inc
mov
cs
js
or
cmp
cli
mov
and
and
rcl
cmp
sbb
push
shl
adc
lods
mov
rol
push
loope
xor
dec
xor
or
jmp
cwde
es
cmp
test
aad
xchg
mov
cmp
inc
inc
(bad)
sub
add
lds
or
pop
xchg
cmp
adc
add
xchg
lea
push
xchg
arpl
cdq
loopne
push
or
add
repz
ds
push
dec
les
add
test
ins
pushf
enter
pushf
mov
add
inc
cmp
or
imul
(bad)
push
adc
das
jl
or
fs
sahf
les
inc
fidivr
out
xchg
inc
push
push
jecxz
gs
xchg
dec
fldenv
and
cmp
add
adc
sbb
xchg
jl
push
cld
xchg
adc
add
loopne
mov
pusha
jle
add
mov
push
clc
dec
or
cmp
(bad)
or
xor
mov
and
or
lods
add
xlat
into
and
jecxz
xchg
or
jbe
jmp
ja
loope
loop
loopne
leave
and
sub
movs
icebp
out
jl
movs
pop
adc
fist
adc
adc
or
or
xchg
lock
xchg
mov
xchg
daa
dec
les
mov
add
loop
push
jbe
cdq
adc
adc
and
ja
pop
pop
test
or
cmp
cmps
mov
push
sar
cmp
mov
jbe
add
lahf
or
dec
push
push
inc
or
cld
xlat
call
mov
pop
sbb
jne
int
mov
cmp
adc
iret
inc
outs
mov
imul
call
or
iret
cmp
sub
jnp
inc
mov
rcl
add
scas
pop
stc
jbe
cmp
sar
nop
popa
or
mov
stos
sub
popf
add
aad
push
jmp
test
push
xor
jle
adc
xchg
jnp
jg
adc
les
xstore-rng
cmps
ret
sbb
mov
out
sbb
add
push
push
xor
std
cmp
sar
outs
or
or
test
jmp
mov
clc
hlt
pop
jecxz
loopne
jp
sub
add
mov
push
cvtps2pi
mov
push
jne
adc
cmps
or
(bad)
retf
xor
mov
or
add
stos
imul
es
push
hlt
and
and
std
pop
push
mov
pop
mov
stc
adc
jne
fstp
(bad)
push
cmp
ja
cmp
sbb
pop
scas
push
and
fnsave
icebp
mov
inc
adc
cmps
xchg
add
lahf
cmp
mov
pop
popa
xlat
sbb
stos
out
data16
fmul
inc
(bad)
outs
imul
pop
xchg
xchg
fcomp
mov
sbb
mov
fadd
out
or
xor
(bad)
pop
fild
cmp
add
mov
xchg
enter
jb
push
push
push
adc
inc
loopne
mov
xchg
test
cmp
pop
adc
ins
ds
cs
adc
sub
pop
movs
dec
pusha
adc
and
jne
xchg
push
loope
xor
pop
xchg
iret
ret
jecxz
(bad)
jg
and
add
lods
ret
aas
mov
mov
les
repz
dec
imul
push
adc
jmp
mov
imul
fs
aad
bound
and
ret
cmp
retf
adc
lods
test
and
mov
addr16
shl
push
xor
or
adc
sbb
pop
sbb
jge
dec
mov
jge
sbb
push
sub
adc
mov
call
sbb
dec
adc
jmp
push
in
or
sub
arpl
or
int
add
dec
nop
mov
or
jae
and
xchg
and
jne
test
pop
dec
pop
ror
mov
and
push
push
push
dec
and
or
cmp
sbb
out
(bad)
mov
cmps
jecxz
out
add
inc
je
cmp
pop
ret
fidiv
js
mov
pop
ror
or
loopne
call
mov
cmp
jne
mov
mov
dec
adc
pop
add
sub
inc
mov
mov
leave
and
mov
xor
hlt
mov
mov
mov
and
rcl
lds
mov
enter
arpl
push
scas
fisub
push
adc
push
xlat
xor
and
nop
icebp
push
sbb
mov
call
jmp
xor
adc
xchg
fcomp
pop
adc
mov
cmp
cmp
out
and
fwait
pop
movups
and
mov
repnz
xchg
add
popa
or
aam
and
fiadd
push
mov
push
repnz
mov
xor
fistp
mov
inc
mov
ret
xor
xor
adc
fild
arpl
sbb
dec
or
fs
outs
push
push
js
add
sub
inc
pop
inc
cmp
or
push
test
repz
or
pop
pop
fbld
add
push
mov
fst
retf
jmp
int3
push
(bad)
and
mov
add
in
adc
(bad)
xor
js
mov
fwait
sub
sub
cs
inc
pop
adc
jge
jg
cmp
or
inc
sub
push
and
pop
push
outs
inc
loopne
test
mov
jl
mov
jbe
cli
lahf
adc
add
pop
add
call
sub
(bad)
ds
fdivr
mov
mov
pop
mov
or
loopne
ss
hlt
push
or
movs
push
or
pop
scas
aad
data16
xor
dec
push
(bad)
lea
test
js
ror
mov
add
adc
fidivr
and
and
shl
(bad)
mov
test
add
test
lea
fcmovb
loopne
adc
lds
sub
sub
outs
sub
mov
xor
push
or
dec
inc
ins
adc
shr
cmp
sub
push
aam
ins
inc
and
push
lds
sbb
shl
push
lea
imul
and
xchg
mov
or
cmp
jnp
xor
jmp
pop
pop
pop
inc
push
mov
jns
inc
inc
inc
pop
loopne
ins
or
and
jl
fs
cmp
pandn
inc
add
movs
cmp
push
mov
mov
mov
pop
or
inc
mov
lods
xor
movs
mov
xor
inc
or
inc
jns
dec
and
loope
jge
or
dec
jo
jne
int3
pusha
pop
inc
push
cmp
test
lods
sub
enter
adc
adc
mov
inc
pushf
aam
icebp
mov
ds
add
adc
dec
int3
iret
mov
test
add
icebp
ins
sbb
push
daa
ja
je
test
ret
sub
std
test
fnstcw
add
cmp
mov
or
and
dec
jo
scas
dec
inc
pop
push
push
lock
or
ror
or
jmp
ja
mov
ins
retf
inc
ja
in
test
inc
imul
in
addr16
dec
dec
(bad)
cli
add
jmp
push
push
not
loopne
xlat
inc
mov
push
retf
mov
or
mov
data16
je
aam
ja
je
(bad)
xchg
(bad)
pop
ins
hlt
pop
push
push
push
(bad)
(bad)
jbe
push
jmp
cmp
xchg
dec
adc
dec
std
leave
cli
(bad)
scas
call
xor
fsubr
out
or
or
ret
jg
mov
imul
add
push
sub
mov
hlt
sub
call
xchg
or
jecxz
ficomp
and
or
or
mov
jnp
loop
sub
push
ss
fstp
pop
aaa
pop
push
mov
comiss
sbb
jbe
jb
scas
ins
repz
xor
cmps
cmc
in
and
neg
adc
rol
mov
mov
dec
or
adc
lock
imul
ins
das
jle
cmc
test
jae
push
lea
sbb
add
lock
push
cmc
arpl
inc
stos
adc
stc
call
out
sub
arpl
ror
ret
xchg
adc
lods
popf
sbb
push
mov
pop
add
mov
mov
lea
and
pop
(bad)
add
pop
pop
inc
or
add
mov
xor
sbb
scas
mov
in
adc
ret
mov
hlt
mov
icebp
sub
jns
pop
ss
xor
mov
daa
test
popa
inc
and
or
pop
retf
cli
iret
mov
cmp
or
xlat
std
push
sub
sbb
ja
xlat
push
into
adc
adc
mov
sar
je
or
push
mov
and
pop
dec
popa
imul
and
mov
push
sub
sub
add
shr
adc
xor
sbb
imul
iret
aaa
adc
das
inc
cmp
xor
ret
lods
cwde
jbe
call
sbb
pop
gs
or
or
jmp
pop
adc
inc
adc
adc
daa
test
and
and
mov
add
cmp
fbstp
xor
out
xor
aaa
mov
bound
je
jns
adc
stos
nop
adc
jbe
mov
sbb
jns
jb
pop
pusha
(bad)
jmp
inc
pop
pop
int
jmp
sbb
mov
rcl
mov
add
(bad)
neg
(bad)
cmp
pop
xor
or
test
or
cmp
push
and
cwde
and
sbb
cwde
(bad)
or
adc
ja
xchg
jle
or
inc
xchg
sbb
pop
pop
mov
cwde
(bad)
pop
pop
xor
jmp
aaa
push
cmp
loopne
jge
es
push
xor
cmp
inc
es
xchg
pop
imul
es
sub
cdq
pop
fwait
pop
fdivrp
sub
sbb
dec
ret
push
pop
push
adc
sbb
pop
adc
push
mov
xchg
sub
jnp
jns
adc
in
repz
mov
mov
movs
das
ds
or
or
mov
push
enter
pop
daa
js
test
fiadd
lock
test
dec
add
aad
inc
cmp
call
mov
imul
sbb
xchg
mov
repz
test
(bad)
outs
jl
inc
mov
inc
arpl
add
sub
hlt
mov
lea
jmp
addr16
movs
add
iret
push
fistp
jne
lea
lods
add
test
pop
adc
dec
mov
fsubr
movs
adc
and
xchg
sbb
push
and
dec
dec
test
xchg
in
add
jbe
icebp
rol
inc
fisub
ss
js
add
test
xchg
fst
push
sbb
inc
scas
xor
push
inc
ja
cwde
add
cmp
not
xchg
xchg
cld
xor
push
shl
pop
add
add
cld
sbb
jmp
and
outs
sub
js
jle
lock
jb
mov
pop
push
push
daa
xchg
sub
xchg
rcl
or
add
pop
cmp
jl
add
add
pushf
mov
dec
pop
and
pop
mov
sar
pop
push
je
push
push
mov
add
adc
rcl
jne
scas
loopne
xlat
push
jno
add
div
out
ret
lea
push
jp
ss
mov
rcl
push
add
pusha
cmp
not
mov
adc
mov
jmp
outs
mov
sbb
aas
add
stos
xchg
mov
popa
push
(bad)
cmp
inc
xor
sub
inc
scas
dec
add
push
push
fmul
sub
repz
fdivr
push
repnz
popa
pop
and
add
mov
pusha
mov
mov
lods
scas
adc
idiv
xchg
push
fimul
pop
pop
pinsrw
jbe
xlat
and
outs
add
push
mov
add
je
inc
rcl
(bad)
cmps
mov
pop
mov
push
sub
or
daa
inc
jbe
pusha
add
and
rol
clc
jmp
push
or
sub
adc
push
rcl
jmp
(bad)
pushf
cs
push
or
mov
inc
mov
imul
pop
and
in
cmp
popa
jnp
test
jmp
adc
inc
pop
add
or
adc
jnp
inc
shr
jne
xor
dec
sbb
scas
shr
imul
fistp
js
popa
inc
sahf
mov
imul
pop
add
lea
jno
pop
dec
dec
pop
movzx
add
popa
push
nop
push
xchg
addr16
imul
jne
push
sbb
lds
jne
or
lock
data16
mov
or
ret
pop
sbb
or
adc
push
jne
adc
sub
idiv
inc
xor
sub
push
(bad)
(bad)
fst
sbb
rcr
pusha
sub
push
test
in
jbe
pusha
dec
aaa
push
pop
pusha
popf
rcl
smsw
(bad)
sub
mov
push
jecxz
in
pushf
sbb
mov
sysexit
push
fwait
test
add
add
adc
(bad)
and
or
adc
sahf
in
je
jbe
inc
push
and
jecxz
cmp
test
push
call
or
push
dec
dec
or
pop
xchg
add
inc
pop
jecxz
ror
pop
rol
imul
xchg
jns
ins
push
push
pop
loopne
xor
cmp
outs
xor
inc
cmp
jbe
mul
inc
add
into
retf
xchg
dec
mov
jne
pushf
repnz
dec
lds
cs
sub
dec
adc
add
add
test
mov
xchg
mov
rol
call
cdq
loope
xor
dec
paddusb
xchg
pop
cmps
sbb
add
stos
or
cmp
cld
mov
fld
cmp
jb
pop
dec
imul
inc
sbb
and
mov
jecxz
cmps
ss
or
add
or
fucomi
and
inc
mov
mov
sbb
enter
hlt
xchg
rcr
dec
sub
int
push
pushf
fcom
mul
icebp
call
xor
pop
(bad)
mov
push
daa
enter
loopne
pop
das
repz
xor
scas
retf
mov
sti
clc
jo
push
(bad)
jecxz
sbb
and
dec
inc
and
inc
call
adc
aaa
imul
or
pop
js
js
nop
lock
ja
into
add
ror
lahf
popf
test
cmp
les
adc
sub
cmp
imul
ja
stos
mov
push
loopne
in
push
or
ret
dec
dec
stos
retf
popf
xchg
nop
and
or
pop
xor
or
test
pop
je
(bad)
cdq
ins
(bad)
inc
jnp
adc
add
and
dec
imul
push
sbb
aaa
or
in
inc
sbb
pusha
add
cmp
cmp
fwait
mov
call
cmps
loopne
(bad)
sbb
ds
sbb
xchg
adc
cld
pop
shr
das
push
mov
lock
inc
or
dec
push
out
adc
loop
xchg
(bad)
scas
cmp
pop
lea
movs
mov
sbb
or
xor
pop
and
out
(bad)
xchg
cmp
dec
cs
push
test
das
mov
arpl
pusha
dec
push
push
retf
loope
aad
je
aas
xchg
pop
sub
and
xor
inc
and
lods
or
xchg
enter
sbb
leave
push
add
pop
mov
cld
out
inc
std
hlt
adc
mov
and
mov
rol
cmps
repz
pop
push
aad
jle
mov
sub
or
aam
popa
in
xor
adc
or
adc
or
sub
rcl
mov
mov
loopne
dec
fwait
or
xor
xor
mov
mov
ret
mov
repnz
outs
or
cmp
xor
and
nop
mov
mov
repnz
cdq
add
push
mov
fwait
ret
mov
sbb
mov
add
adc
inc
cs
and
add
add
mov
adc
aad
or
add
inc
xchg
jae
scas
dec
add
pop
pop
shr
daa
leave
add
and
mov
xchg
mov
xchg
sub
and
fwait
pop
dec
adc
sub
or
and
pusha
dec
and
dec
xchg
and
add
or
mov
mul
sbb
aaa
arpl
xchg
loopne
push
add
mov
pop
imul
mov
jne
cmps
xor
popa
popa
xor
shl
cmp
add
fwait
push
ret
lds
or
or
or
fwait
imul
popa
mov
mov
jno
(bad)
sbb
jmp
push
push
dec
adc
pushf
push
mov
pop
inc
pusha
pop
push
call
and
xor
mov
mov
dec
mov
test
iret
pop
or
inc
add
add
inc
fild
test
dec
mov
sbb
jae
ja
hlt
xchg
add
sar
dec
inc
mov
cmp
jo
aaa
or
adc
popf
mov
fs
jmp
popa
add
loope
sub
cmp
js
adc
adc
adc
lock
pusha
and
nop
pop
add
in
pusha
or
push
cmp
push
add
xor
pusha
add
push
bound
push
jno
pop
rcl
xor
inc
sub
adc
adc
push
xchg
ins
fs
ins
sar
sahf
and
cmp
jg
push
pop
mov
mov
add
fisub
adc
pop
popa
adc
(bad)
adc
lds
nop
(bad)
sbb
hlt
inc
imul
dec
lea
pop
sub
jle
sub
dec
adc
bnd
inc
ins
test
dec
push
dec
add
jo
mov
pop
fs
mov
add
dec
aam
or
xchg
jmp
dec
or
xor
dec
stos
add
jnp
xlat
and
test
out
adc
mov
mov
test
add
mov
lods
sbb
shr
repz
mov
iret
into
xor
push
dec
mov
sub
ja
mov
sub
push
popf
lea
mov
(bad)
add
or
lods
mov
or
daa
pop
xchg
lea
mov
jmp
or
dec
rol
add
pop
xchg
xchg
data16
popa
push
ja
mov
xor
pusha
sub
into
push
lahf
mov
ret
sbb
jb
jne
mov
jne
mov
das
xor
jae
pusha
cld
add
sub
or
xchg
sbb
cmp
sub
pop
sub
stc
push
pusha
and
inc
repz
push
lea
addr16
sub
mov
sbb
and
out
or
daa
cmp
jge
into
add
cmps
rcr
adc
or
(bad)
aam
push
fwait
adc
push
adc
movs
mov
sbb
jbe
clc
xor
movs
push
or
and
mov
mov
push
cmp
loopne
xchg
xor
out
dec
xchg
adc
xchg
cmp
mov
pop
stos
or
fcmovne
adc
mov
sbb
sub
xor
xlat
mov
push
je
push
cmp
cmovo
(bad)
jne
(bad)
push
sti
mov
push
in
sub
and
cmp
(bad)
popa
clc
clc
call
jmp
es
sub
xor
fld
mov
test
shl
cmp
movs
push
mov
pop
movs
jle
sti
jge
mov
add
push
xchg
mov
fistp
fisubr
mov
or
dec
jl
adc
mov
jl
pushf
xor
pop
jo
call
sahf
stos
sbb
in
push
sub
push
push
pop
mov
iret
dec
inc
aaa
and
fld
add
mov
fsubr
sti
sbb
sub
shr
rol
loop
push
mov
enter
mov
clc
xor
push
(bad)
xchg
xchg
inc
cmp
xchg
cmp
or
mov
adc
cmp
dec
popa
je
pop
int3
or
jo
and
cmp
sub
push
jae
push
int
xchg
or
ss
shl
bound
mov
lea
(bad)
or
sti
push
add
inc
and
adc
mov
ret
and
mov
jmp
push
dec
dec
push
xor
call
sbb
out
inc
mov
sbb
and
mov
sub
xor
fiadd
jge
cmps
dec
bound
mov
fidiv
adc
jne
dec
xor
sub
jmp
or
outs
retf
add
add
dec
sub
dec
add
adc
(bad)
mov
dec
adc
mov
ret
mov
sbb
mov
sbb
lds
pop
sbb
mov
inc
pop
adc
push
or
stos
cwde
push
push
jo
mov
lahf
enter
popa
xchg
jo
or
sub
addr16
inc
sub
jmp
sub
push
sbb
ror
inc
add
add
inc
add
arpl
clc
cmp
popa
ins
loope
dec
cmp
ss
sub
or
mov
inc
cmp
les
xor
sbb
inc
and
push
hlt
pusha
and
pop
lods
sbb
pusha
pop
mov
sti
or
rcr
or
sbb
or
sub
adc
ds
cmp
sbb
js
sar
or
mov
dec
fistp
gs
enter
sub
jne
int3
ss
jne
mov
adc
jecxz
or
push
inc
inc
loop
mov
mov
test
fwait
sar
sbb
pop
jb
push
adc
cmp
xchg
daa
sbb
cmp
push
cmp
sub
add
ja
sahf
push
retf
rol
push
mov
test
js
test
clc
push
xchg
aad
rol
aad
test
adc
cmp
(bad)
sbb
jmp
imul
ret
add
push
sti
stos
adc
inc
stos
lock
ror
or
repz
mov
jno
adc
cmp
and
loope
dec
inc
mov
rcl
sbb
or
sbb
cmp
jl
shl
adc
out
add
mov
dec
mov
push
loopne
pusha
mov
mov
or
sub
xchg
push
jmp
adc
cmp
ja
pop
ret
scas
popf
aas
das
test
ins
jmp
sub
mov
mov
rcr
dec
adc
popa
sbb
and
xor
popa
dec
jno
inc
icebp
es
test
mov
sbb
outs
jg
daa
dec
arpl
jle
mov
add
mov
or
(bad)
mov
inc
bound
call
push
push
jno
loop
scas
test
call
or
adc
mov
xlat
inc
mov
popf
sbb
arpl
les
pop
punpcklbw
xor
xchg
jmp
stos
cmps
test
jns
test
inc
sub
or
mov
add
inc
smsw
scas
popf
fsub
jmp
(bad)
or
arpl
sahf
sub
or
dec
or
(bad)
or
stos
or
or
xchg
push
or
ret
push
sub
add
ret
pop
xchg
fisub
sti
fld
and
pop
fidivr
inc
mov
ret
mov
out
push
xchg
sub
adc
or
sub
sbb
and
repnz
jne
push
test
or
pusha
pop
adc
and
dec
idiv
xor
lods
int
dec
das
cs
pop
xchg
pop
add
adc
cmps
add
sbb
(bad)
and
fild
add
ror
push
and
add
add
imul
dec
push
aad
cmps
test
dec
cmps
adc
test
in
add
push
cmps
adc
lahf
cmps
mov
cmp
jne
popf
add
pop
cs
or
test
or
stos
add
jns
mov
add
aam
dec
mov
mov
fs
dec
lods
call
jp
adc
aaa
movs
aam
repz
inc
or
out
sub
call
or
mov
and
push
mov
adc
dec
push
iret
pop
hlt
repz
dec
or
cmps
enter
and
push
add
pusha
es
push
or
clc
push
enter
dec
adc
test
inc
cdq
mov
pop
in
adc
and
xchg
sti
fwait
clc
xchg
jmp
sbb
adc
sbb
cmp
dec
add
jmp
push
call
ror
les
sub
add
jo
inc
or
or
inc
iret
add
imul
jle
jnp
sbb
iret
push
push
test
push
clc
mov
clc
neg
pop
fs
jmp
add
in
outs
push
cmp
lods
inc
mov
aas
add
fdivr
push
dec
sti
das
inc
inc
iret
pop
mov
inc
mov
out
push
pop
dec
mov
add
or
(bad)
bound
xor
and
stc
add
fidivr
pop
(bad)
sub
dec
adc
icebp
mov
cmp
imul
hlt
mov
jmp
xchg
sbb
sar
ret
push
inc
cmp
fld
pop
inc
adc
inc
test
ja
mov
and
xor
jge
(bad)
add
lea
sub
cmp
ds
ror
pop
xor
(bad)
and
mov
mov
lods
add
or
mov
xor
push
mov
dec
nop
fwait
ror
sub
xchg
and
into
popf
packssdw
jno
addr16
pop
or
cli
adc
push
dec
inc
sub
and
push
or
jge
push
test
or
lock
jp
sbb
sbb
sbb
inc
dec
fprem1
cmp
(bad)
shl
push
pop
ror
sbb
data16
xchg
push
pop
mov
sub
and
test
or
add
rcl
adc
or
add
fisub
or
and
add
mov
xor
outs
sub
jnp
je
ret
ror
nop
aad
sbb
pop
xchg
test
inc
sbb
mov
ins
cmp
sbb
shr
in
ss
jmp
pop
sbb
sbb
cwde
xchg
bound
bnd
aam
or
mov
inc
sub
clc
sbb
and
and
test
sub
dec
and
sub
loop
jbe
push
sub
(bad)
clc
add
sbb
cmc
mov
sar
loopne
(bad)
(bad)
push
pop
inc
ja
sub
push
jmp
jge
ins
pop
call
inc
or
xlat
adc
out
or
lods
and
cdq
jo
clc
mov
clc
popf
add
mov
pop
dec
in
jb
push
and
dec
cmc
dec
pusha
sbb
mov
lea
sub
clc
nop
lahf
ss
push
push
push
adc
push
sub
adc
add
cmps
mov
mov
cmp
xchg
icebp
scas
add
ret
and
or
sbb
push
ror
add
inc
sbb
push
cmp
daa
and
pusha
inc
fld
sub
push
and
lea
shl
push
jmp
push
sub
inc
xchg
sbb
mov
mov
fadd
(bad)
cmc
cmp
js
cmp
call
pusha
hlt
sbb
xor
inc
lock
sub
mov
and
iret
cmp
sub
mov
ds
push
mov
rcl
imul
push
(bad)
cld
or
inc
outs
es
fs
ins
aam
ficom
adc
fdivr
aas
fstp
push
not
ins
xor
jae
add
hlt
push
cmp
test
sti
test
enter
pop
or
xor
iret
mov
and
jmp
loope
push
add
je
ins
lods
push
pop
or
mov
and
sub
fiadd
add
or
mov
jle
pop
test
xor
mov
movs
add
push
mov
sub
imul
or
sbb
add
dec
push
add
mov
nop
pop
mov
add
or
add
lea
cmp
xchg
xor
push
std
jmp
jae
cs
cmp
xor
jp
inc
and
and
ins
add
add
and
pop
push
ins
outs
dec
data16
mov
or
data16
ret
repz
sahf
and
mov
add
adc
and
ss
pop
std
pop
sbb
lods
dec
push
daa
pop
push
xor
pop
sub
test
int
out
out
jae
push
xor
es
cmp
test
iret
outs
fcom
pop
xor
sub
adc
mov
adc
jne
aas
mov
jle
or
adc
lds
push
or
ins
not
dec
and
imul
inc
nop
xchg
rol
js
add
push
and
inc
jae
add
push
sub
fdivr
adc
int
aas
xor
enter
lods
aam
jnp
data16
xor
and
enter
mov
add
rcl
enter
rol
push
cmp
pop
and
add
sub
pop
sbb
dec
dec
xchg
sbb
movaps
push
pop
xchg
je
test
sbb
dec
pop
sub
repz
sub
mov
jecxz
pop
dec
ror
movs
fldenv
xor
mov
in
xor
cld
je
jmp
aaa
dec
and
into
pop
jb
shr
aaa
and
dec
mov
fcom
fstp
fwait
enter
mov
das
loopne
sbb
cmp
adc
mov
push
fisubr
inc
or
loope
sbb
sub
adc
push
sub
test
sub
imul
or
sub
ss
loop
mov
and
push
retf
shl
rcl
sub
adc
or
aad
xor
mov
inc
mov
daa
sub
lock
call
add
add
adc
inc
and
mov
xor
add
cmp
sub
add
pop
out
shl
pop
sub
adc
inc
xor
movs
shl
mov
mov
pop
sub
jge
and
gs
sub
or
cmp
jp
push
adc
mov
push
sub
inc
dec
xor
xor
dec
or
fisttp
or
stc
or
cs
pop
dec
adc
jne
add
stc
jns
outs
jmp
push
push
push
jmp
adc
pop
jmp
mov
fucom
sbb
jmp
adc
sbb
pop
push
loopne
(bad)
out
add
mov
movs
ret
cmp
(bad)
das
push
scas
outs
add
ins
mov
les
mov
mov
inc
pop
lods
or
xchg
push
mov
jl
or
or
nop
pusha
(bad)
out
xchg
data16
lods
and
adc
nop
sbb
or
cmp
retf
jp
sub
jae
xlat
or
or
sbb
or
ret
dec
lock
imul
loopne
cld
fdiv
jmp
sar
push
push
adc
add
cmp
sbb
mov
inc
push
or
cmps
aam
xchg
data16
mov
jo
cli
dec
enter
jns
fmul
scas
cmp
mov
lods
lock
sub
fisttp
into
movs
push
jmp
pop
jmp
jo
inc
dec
xchg
cmp
or
pop
or
(bad)
(bad)
jnp
fimul
js
mov
pop
inc
add
push
das
into
ins
add
loopne
adc
inc
adc
cmc
lods
mov
ins
inc
add
(bad)
push
inc
std
push
sub
xlat
mov
and
xchg
and
sahf
popf
mov
and
or
sahf
out
out
adc
adc
test
sahf
out
neg
js
sbb
jl
sbb
mov
or
or
fwait
push
mov
out
nop
shl
push
loopne
sub
cmp
lea
aad
enter
add
adc
pop
gs
pop
mov
(bad)
jo
ins
je
lds
mov
ds
inc
cmp
xor
cmp
jo
fmul
dec
ret
sub
pop
int
ret
adc
adc
inc
push
test
push
or
sbb
xchg
mov
inc
sub
nop
ja
rol
mov
xchg
and
or
cmp
cmp
daa
adc
sbb
sub
out
les
ja
dec
lds
xchg
cwde
ins
adc
bound
aas
or
jb
loopne
pushf
cmp
pop
mov
sub
sub
add
sub
mov
push
(bad)
jnp
lea
ds
cwde
cmps
xor
(bad)
loop
in
aam
sub
pop
lea
mov
or
add
rol
and
adc
pusha
xchg
xchg
and
adc
sbb
inc
dec
add
sbb
je
sub
inc
pop
or
and
pop
pushf
mov
fldenv
mov
jmp
and
mov
rcl
pop
mov
nop
(bad)
jg
and
pop
inc
push
sbb
dec
lods
inc
jb
loop
rol
pushf
es
dec
sub
and
sbb
mov
shr
add
jbe
mov
nop
cwde
jmp
jo
xchg
mov
lock
mov
push
pop
push
es
xchg
push
inc
fidiv
push
dec
xchg
gs
sub
ds
xor
retf
hlt
xchg
enter
push
pusha
pop
adc
mov
fiadd
ret
push
scas
ins
add
mov
or
es
push
pop
popf
in
scas
pop
mov
sbb
mov
(bad)
jmp
push
xchg
pop
jb
dec
in
in
add
mov
arpl
fdivr
inc
sub
dec
adc
lods
adc
ret
and
add
out
std
shl
inc
pop
cmc
mov
sub
xchg
adc
lea
and
xor
pop
cld
push
cmp
mov
or
cmp
es
aad
sub
pop
cli
and
xor
movs
aas
sbb
add
test
adc
test
inc
(bad)
dec
sbb
adc
and
pop
cmp
pop
jne
dec
jae
sbb
adc
shl
cmp
xchg
or
in
clc
dec
rol
ret
cmp
jne
dec
call
adc
aas
dec
fdivr
push
lods
jecxz
cmp
add
sub
inc
cmp
mov
fwait
or
jne
or
inc
xchg
mov
adc
adc
adc
les
imul
dec
adc
in
clc
pop
enter
xchg
push
add
mov
into
xor
jmp
adc
jmp
push
add
lds
push
add
call
cmp
inc
daa
sbb
xor
lock
and
scas
mov
push
and
movs
push
data16
cmps
jg
and
les
or
(bad)
test
lods
add
mov
das
jl
(bad)
fstp
cmp
dec
mov
pop
das
xor
add
hlt
int
addr16
mov
cdq
stc
cmp
test
xor
fisub
outs
xlat
push
repz
repz
sub
xor
and
in
dec
xor
out
cmp
popa
das
inc
jmp
shl
inc
ins
sar
dec
or
les
inc
push
mov
jl
add
xchg
shl
gs
mov
push
push
pop
les
push
icebp
call
cmp
xor
or
pop
ja
in
push
mov
xlat
into
smsw
adc
cmp
inc
pop
mov
pop
outs
bound
push
jp
sbb
(bad)
jmp
sbb
(bad)
dec
imul
ss
inc
js
cmp
xlat
xor
adc
sub
(bad)
sbb
sti
sub
sbb
je
ins
test
in
gs
les
cmp
dec
imul
movs
xchg
add
cmp
movs
xchg
jecxz
aas
sub
inc
test
mov
jbe
sub
xor
mov
aad
ret
rcl
adc
sbb
int
inc
cmp
stc
imul
add
dec
pop
or
dec
aaa
loopne
and
xchg
inc
jle
or
cmovno
push
push
fwait
(bad)
mov
lods
jo
mov
cmp
push
or
ja
clc
cmp
pslld
push
and
xor
push
xor
push
sbb
in
ror
or
xor
xchg
jbe
cmps
mov
sar
ins
ret
pop
sbb
jne
pop
pop
pop
imul
in
mov
mov
push
cmps
outs
lock
pop
pop
and
add
mov
push
jmp
loop
adc
iret
add
and
pop
pop
jae
push
inc
addr16
add
inc
adc
adc
push
cld
mov
cmps
jmp
or
out
jo
test
call
sbb
fld
push
in
pop
or
inc
adc
test
lods
inc
imul
fucomp
push
nop
mov
and
inc
adc
add
es
and
iret
sub
mov
(bad)
and
das
aad
aas
out
loopne
push
and
in
outs
loope
ret
addr16
push
clc
add
movs
jb
add
adc
inc
xchg
pusha
push
std
test
or
stos
lock
jmp
cmp
sub
push
scas
push
pop
push
call
lock
push
sub
ins
shr
pop
jb
pop
jle
push
inc
push
xchg
out
loope
xor
or
cwde
pop
loopne
adc
dec
shr
cmps
jge
xor
cmp
movs
loope
or
push
ficomp
jo
ins
shl
es
mov
stos
add
xor
xor
loope
or
push
cli
(bad)
loop
inc
movs
mov
inc
cmp
mov
sbb
outs
mov
and
leave
sbb
aad
movs
test
sub
cwde
mov
inc
xor
push
push
(bad)
cmps
and
push
jl
(bad)
addr16
mov
hlt
mov
xor
lock
in
sub
clc
clc
inc
mov
xchg
(bad)
xor
adc
sti
loopne
xor
xor
(bad)
ror
outs
into
xchg
adc
adc
out
ror
and
fcom
mov
pop
fadd
inc
mov
loop
pop
add
clc
push
nop
and
xchg
push
cmp
lods
push
cmp
repnz
jp
inc
adc
movs
and
jp
sub
ja
xchg
adc
or
add
rol
dec
adc
add
or
test
jp
xor
fdivr
rol
ret
mov
pop
adc
add
mov
inc
popf
mov
xchg
mov
mov
ret
sbb
sar
dec
mov
push
push
add
mov
inc
cmp
jl
adc
or
mov
cli
sub
mov
xor
or
in
or
pop
sahf
sbb
pop
je
out
out
mov
add
retf
inc
push
ret
jbe
ret
inc
dec
ja
mov
mov
sbb
jmp
or
jmp
aaa
aaa
aaa
aaa
sub
pop
sub
pop
sbb
push
and
dec
aaa
aaa
aaa
aaa
xor
dec
and
inc
xor
aas
cmp
cmp
aaa
aaa
aaa
fs
push
sub
es
jmp
js
pushf
mov
add
jmp
push
mov
movs
and
in
mov
retf
nop
call
clc
jnp
out
lds
out
daa
iret
jecxz
mov
out
sahf
cwde
mov
repz
popf
fiadd
xlat
call
add
add
sbb
fs
stos
mov
in
fbld
je
cmp
adc
arpl
inc
adc
lea
sub
punpckhbw
jno
dec
test
xchg
fwait
pop
and
hlt
mov
fcmove
sub
xor
xchg
ja
imul
inc
sub
jne
push
ins
fs
iret
and
imul
adc
rol
inc
and
mov
imul
rol
jne
jmp
mov
in
add
(bad)
and
mov
dec
int3
pop
pop
add
or
mov
movs
jp
mov
push
repz
or
shl
inc
out
inc
dec
add
pop
je
or
mov
scas
(bad)
loopne
loope
sub
xchg
sbb
loope
push
cmp
ins
retf
inc
cmp
adc
movs
int3
adc
push
mov
adc
or
mov
pop
inc
ret
jo
test
icebp
cmp
call
ror
sbb
les
add
in
pop
mov
int3
xchg
int3
adc
inc
fiadd
or
jnp
jbe
in
adc
ins
outs
sbb
push
mov
pop
loopne
scas
cdq
js
xchg
mov
adc
mov
std
cmp
aaa
mov
(bad)
cmp
pop
jne
pop
jmp
jl
(bad)
push
stos
(bad)
dec
cmp
into
stos
cwde
cmp
jne
jmp
pop
pop
xor
add
sbb
mov
pop
add
mov
sub
adc
es
dec
jg
add
inc
or
jmp
mov
ficomp
push
daa
and
add
daa
cmp
mov
and
jbe
addr16
lock
fld
sahf
or
adc
loopne
or
dec
or
mul
call
xchg
test
adc
hlt
dec
xor
fild
adc
or
(bad)
adc
jl
add
outs
adc
fisttp
jmp
aad
ds
in
jmp
push
jb
add
dec
aad
push
jnp
shl
xor
mov
jmp
mov
test
jmp
mov
js
jne
test
or
mov
xchg
xchg
je
or
xor
cmp
popa
adc
pop
push
fs
fldenv
cmps
sub
add
push
or
sbb
mov
or
or
xlat
mov
je
dec
sbb
in
cli
jle
add
push
mov
jb
lock
shl
xor
fist
fist
pushf
xor
je
mov
xchg
jmp
dec
(bad)
mov
jmp
rcr
push
jle
icebp
lahf
or
adc
nop
daa
inc
adc
adc
pushf
jmp
aaa
push
pop
or
inc
push
sbb
xor
jo
xchg
pop
(bad)
icebp
lahf
push
mov
scas
jne
push
addr16
pop
cdq
xchg
shl
rcr
stos
push
inc
retf
bound
xor
cwde
dec
mov
add
mov
aas
or
xor
push
and
stc
jo
pop
js
or
jmp
cs
xchg
enter
test
sar
popf
rcr
push
push
and
xchg
push
mov
xchg
xchg
or
cmp
lock
fistp
push
dec
inc
js
push
pop
fld
adc
adc
pop
dec
xor
mov
mov
jle
mov
cmp
inc
sub
inc
push
add
rol
dec
cwde
pop
out
jbe
lea
in
out
pop
cmp
push
icebp
dec
test
or
push
push
(bad)
lods
sub
jl
inc
hlt
cmps
push
mov
icebp
retf
call
cdq
in
dec
add
mov
xor
daa
push
out
(bad)
cmp
repz
mov
jnp
loope
inc
cdq
mov
xchg
and
inc
sub
movs
push
stos
jmp
cmp
mov
inc
(bad)
dec
sar
mov
add
jo
(bad)
adc
dec
or
fdiv
xor
pop
and
jg
add
ds
jmp
sbb
xor
or
mov
inc
cmp
add
in
in
hlt
sub
call
cs
inc
add
dec
push
jl
add
jno
cmp
ins
mov
dec
jl
or
aaa
jo
into
jo
dec
and
add
icebp
(bad)
xor
or
cs
xor
push
cmp
cmps
out
or
jno
mov
mul
retf
push
sbb
jp
mov
lods
push
and
jb
lods
loopne
pusha
push
push
jno
sbb
push
cmp
sbb
in
xor
or
mov
adc
(bad)
jge
loopne
and
in
mov
repnz
popf
or
adc
add
jmp
std
lea
test
mov
mov
or
lea
clc
js
adc
cmp
rol
sbb
xor
sbb
cmp
(bad)
aad
cmp
(bad)
je
mov
sub
mov
and
and
call
rcl
dec
cmp
push
cmp
push
xchg
repz
pop
or
sub
mov
cmps
sub
movs
hlt
out
mov
dec
mov
test
js
aas
cmp
movs
je
jmp
mov
jb
pusha
mov
inc
inc
xchg
movs
ins
fs
fld
add
idiv
repnz
iret
and
inc
out
(bad)
fsub
jno
xchg
ret
fcom
clc
jle
jae
ror
inc
movs
push
outs
setle
or
pop
cmps
test
xchg
push
mov
cli
cmp
push
pushf
jae
pop
push
repnz
pusha
call
push
and
xchg
lock
push
adc
(bad)
dec
cmp
inc
cmp
nop
dec
xchg
test
pop
or
add
in
mov
cmps
adc
mov
lea
sub
mov
enter
sub
dec
xchg
cmp
enter
xor
mov
jb
or
and
xchg
jo
or
das
loopne
out
sbb
sub
fsub
or
in
enter
enter
in
enter
and
add
add
add
in
add
sub
and
add
call
mov
xor
movq
dec
mov
jo
sbb
xor
inc
xor
mov
cmp
inc
xor
inc
sbb
ret
sub
push
fisub
call
mov
addps
adc
add
adc
pusha
sar
or
mov
or
out
scas
dec
adc
or
pop
ins
add
out
jo
je
js
add
or
sbb
or
xchg
mov
cmp
dec
clc
cs
rcr
inc
jmp
push
xor
push
inc
jmp
add
rcr
or
inc
sub
es
or
push
adc
jecxz
xlat
aas
in
imul
sub
inc
inc
enter
mov
xchg
retf
and
mov
xchg
dec
jb
js
cwde
xor
xchg
dec
cs
test
mov
shl
inc
shl
sbb
sbb
push
push
cld
push
rcr
fs
arpl
xor
fsub
pause
inc
push
cmp
sahf
mov
or
cmp
loope
jle
mov
xchg
je
fadd
inc
int3
popa
mov
add
push
rcr
add
neg
sar
add
enter
mov
adc
out
mov
push
inc
push
repz
or
neg
and
push
in
xor
jl
lods
push
and
cdq
cmp
add
dec
xor
inc
push
push
loopne
push
in
or
pop
ret
addr16
loopne
mov
add
enter
and
jmp
xchg
adc
push
stc
sbb
xor
int
xchg
cmp
je
adc
in
shr
popf
pop
inc
in
push
mov
ja
pop
inc
and
sub
mov
xor
stos
push
les
push
sub
inc
and
inc
out
mov
or
in
mov
idiv
out
mov
pop
inc
ss
(bad)
lds
xor
inc
sbb
and
push
jo
push
pop
mov
mov
fcom
inc
cmp
xchg
inc
cmp
ret
sub
sbb
push
pop
cmp
je
adc
or
xchg
leave
sub
inc
pop
jo
test
add
push
mov
out
mov
adc
cmp
dec
ins
retf
add
add
mov
jne
mov
sbb
or
adc
ds
cmp
fld1
and
sbb
add
pop
sub
fdivr
fstp
out
imul
or
jno
dec
dec
dec
push
sti
xlat
sub
popa
ror
inc
and
retf
aad
and
enter
and
mov
and
cmp
cs
aad
dec
pop
add
cdq
inc
push
sbb
(bad)
adc
(bad)
fild
xchg
push
xor
add
or
div
push
arpl
mov
test
or
ja
test
cdq
jbe
std
mov
sub
out
mov
cmp
fninit
loopne
fistp
test
add
cmp
jmp
ss
dec
into
fbstp
xchg
gs
push
fadd
cmp
push
add
test
jge
mov
inc
call
fcomp
or
fcom
and
iret
test
pop
neg
sub
cwde
fadd
mov
mov
push
mov
aas
rcl
lahf
push
xchg
dec
fdivp
ror
sti
mov
sti
fld
xchg
or
cld
xchg
mov
push
mov
outs
inc
jmp
add
sti
dec
repnz
mov
and
push
inc
cld
lock
popa
stos
add
sbb
dec
inc
xchg
cmp
(bad)
loopne
movs
cwde
mov
cmc
(bad)
lahf
sahf
test
push
adc
mov
dec
dec
test
ins
cmp
lea
rcl
sbb
mov
pop
add
mov
sbb
loopne
mov
add
xchg
and
xor
mov
call
push
imul
jne
xchg
adc
cmp
cmp
clc
sub
daa
data16
ss
push
loopne
fnsave
pusha
dec
adc
or
nop
test
add
cmp
pop
clc
mov
mov
test
add
out
or
mov
mov
mov
sbb
lods
xchg
das
sub
push
movs
mov
lods
test
mov
in
mov
int3
mov
fneni(8087
cmp
shr
xchg
retf
ja
pop
fsub
loopne
add
sbb
or
popa
mov
sbb
jb
xor
cmps
push
and
cs
retf
in
xor
xor
jb
pop
inc
cmp
inc
pop
cs
retf
push
dec
pop
push
pusha
xor
sar
xor
cs
data16
or
jo
(bad)
cwde
pop
mov
xor
jecxz
xchg
loopne
push
xchg
jo
and
or
sub
sbb
add
das
ja
or
sub
xchg
rcr
clc
sar
push
push
push
push
sub
loope
add
add
sbb
gs
je
rcl
cmp
clc
nop
or
in
cld
aaa
dec
or
shl
mov
xchg
dec
cmp
clc
cld
add
sub
dec
mov
dec
ss
ror
sbb
xchg
rcr
adc
not
or
pusha
pop
das
pop
in
call
hlt
add
sti
adc
add
dec
das
cld
or
addr16
adc
mov
or
add
stos
cmc
mov
ret
mov
out
pushf
(bad)
cwde
inc
iret
pop
popf
retf
call
push
mov
xor
test
or
add
loop
sub
and
push
sahf
pop
scas
jae
dec
sub
jp
add
add
les
push
pop
push
xor
fisub
mov
xor
ret
jl
(bad)
arpl
sbb
adc
mov
popf
push
inc
adc
dec
push
les
nop
pop
pop
sti
jo
or
sti
pop
popa
dec
or
out
xor
rcl
inc
cmps
pop
sub
pop
mov
jns
jmp
into
add
add
outs
(bad)
add
add
xchg
push
fiadd
inc
fs
jo
call
fcomp
mov
mov
add
fidivr
(bad)
adc
adc
adc
call
(bad)
xchg
ret
dec
ja
gs
scas
into
les
push
or
cld
or
pushf
inc
adc
push
(bad)
enter
push
jmp
xchg
shr
xor
iret
push
xor
pop
retf
mov
cvttps2pi
and
inc
les
out
xor
pop
jne
mov
adc
call
fdiv
es
or
or
adc
jecxz
loopne
sub
pop
pop
dec
cmp
mov
inc
push
adc
inc
add
jno
mov
mov
clc
mov
push
and
inc
and
in
jne
or
rcr
bound
push
loopne
pusha
(bad)
adc
or
xchg
cmp
mov
xchg
leave
adc
mov
or
dec
rol
and
loopne
inc
outs
(bad)
sub
rcl
retf
(bad)
push
loopne
adc
movs
(bad)
xor
popf
idiv
mov
repz
in
(bad)
add
add
sub
jne
jmp
dec
and
in
psrlw
lds
rol
push
pop
cmp
call
mov
and
mov
mov
shr
jmp
leave
adc
push
push
push
aad
pop
out
mov
jmp
cld
jl
(bad)
outs
mov
mov
movs
lds
push
cdq
xchg
push
dec
sub
xor
pusha
mov
xor
or
test
xchg
push
sbb
popa
dec
push
or
xor
add
mov
jne
cmc
xchg
lods
add
xor
jbe
push
push
or
pop
sahf
cmp
add
test
fdiv
jo
push
push
pop
test
add
lods
inc
scas
clc
xchg
push
leave
adc
adc
es
sbb
mov
lods
fwait
in
ror
pop
and
and
iret
sub
push
repnz
ins
or
adc
dec
jmp
lock
or
ret
cmp
push
cmp
popa
xor
shl
out
imul
xchg
loope
cmp
add
xor
cmp
hlt
js
push
mov
movs
out
stc
dec
jns
jle
js
movs
iret
mov
movaps
xchg
dec
pop
mov
xchg
(bad)
(bad)
jnp
ins
push
or
pop
loope
mov
push
dec
sub
mov
xchg
and
les
mov
jno
and
adc
adc
cwde
mov
push
xor
add
test
inc
repnz
push
xchg
push
add
sbb
inc
or
push
cmps
icebp
jb
jmp
popf
dec
add
retf
adc
dec
or
les
mov
mul
fcom
ja
mov
cmc
in
hlt
and
push
dec
adc
fwait
(bad)
xchg
adc
sbb
dec
inc
xor
adc
adc
sar
or
mov
daa
or
pop
mov
mov
push
inc
xlat
not
test
stos
iret
les
(bad)
and
mov
pop
and
in
clc
je
nop
icebp
pop
jne
and
cli
add
or
mov
pop
inc
inc
mov
movups
ins
lods
cmp
iret
je
and
cmovl
sbb
shl
cwde
in
xchg
mov
mov
pop
and
sbb
mov
mov
inc
in
xchg
xor
add
add
ins
dec
call
out
rcr
pop
aam
movs
test
(bad)
popa
sbb
add
and
mov
dec
shr
cli
pop
test
cmp
fmul
and
scas
mov
dec
pop
popf
add
inc
sar
jno
inc
or
cmp
xchg
lock
div
add
fs
add
add
mov
arpl
lock
test
push
mov
add
push
xlat
push
push
nop
push
cmp
cmp
neg
sbb
dec
inc
scas
mov
je
pusha
push
fwait
cli
mov
(bad)
push
ins
adc
mov
in
push
sbb
or
fmul
add
sub
xlat
dec
sbb
iret
cmp
inc
imul
sbb
test
or
adc
ins
xchg
and
pushf
adc
xchg
aaa
cmp
retf
shl
nop
or
xor
outs
dec
arpl
push
out
add
popf
stos
pop
ds
das
daa
jb
and
imul
popa
mov
adc
adc
add
je
sub
ret
outs
inc
add
rol
(bad)
leave
xchg
sub
nop
inc
lods
rcr
inc
jbe
gs
je
mov
test
in
jno
jmp
mov
push
mov
fdivr
push
fisttp
icebp
jo
cmp
push
add
arpl
ins
imul
push
ins
inc
adc
jb
cmp
mov
fstp
jno
pop
jge
push
(bad)
mov
sub
call
lock
cli
neg
or
xor
xor
dec
mov
add
mov
pusha
fsubr
mov
mov
mov
lock
mov
aam
mov
imul
fcomp
pop
jp
jno
jo
stc
cdq
xor
inc
xchg
mov
pop
movs
cmp
not
shl
add
push
mov
adc
xchg
and
sbb
mov
jge
push
mov
retf
push
ja
or
or
add
push
mov
dec
jns
inc
loope
inc
dec
mul
(bad)
dec
pop
and
pusha
add
add
sbb
dec
jne
lea
sbb
mov
jbe
push
jno
push
and
dec
rol
or
jne
stos
dec
stc
je
and
jnp
(bad)
add
jnp
jns
pop
(bad)
xchg
sub
xchg
mov
and
ficomp
sbb
sub
sbb
out
pop
(bad)
outs
fisubr
jns
push
xchg
mov
push
inc
adc
dec
xor
ss
loope
xchg
mov
ror
xor
aaa
jge
enter
ins
cdq
fadd
or
add
add
ins
cmp
mov
push
or
xor
and
inc
pop
fld
call
repnz
popa
add
add
mov
push
sub
mov
loopne
loop
mov
out
dec
cdq
nop
fsub
js
or
fcom
pop
out
mov
aaa
std
adc
call
loopne
imul
mov
cmp
sub
sbb
inc
in
or
jle
jbe
mov
sbb
xor
div
inc
or
adc
or
push
xchg
cmp
xchg
adc
mov
xchg
daa
into
out
jb
pop
adc
pop
pop
adc
push
jne
ffree
or
mov
jno
xor
loop
lock
pop
dec
sbb
les
adc
cmp
lock
sub
lods
add
je
pop
fs
sbb
sub
in
int
shl
call
leave
cmc
stc
and
push
pop
iret
imul
xchg
inc
test
(bad)
into
repnz
and
psadbw
test
add
xor
retf
inc
inc
push
int3
add
lock
pop
(bad)
rcr
push
bound
(bad)
adc
and
or
inc
bound
sbb
or
in
loopne
in
in
lds
pop
retf
push
retf
fmul
push
ret
push
mov
push
pop
dec
mov
cmp
outs
xor
movs
xor
lock
daa
or
lds
add
test
push
or
mov
push
sbb
ret
jmp
push
pusha
and
mov
cs
mov
xor
xor
cdq
lods
pop
pop
ret
pop
pop
in
je
sar
add
jge
mov
xor
jnp
pop
iret
and
jg
pop
fadd
dec
and
sbb
mov
inc
cs
and
mov
push
imul
ret
xchg
out
lock
lods
nop
or
xor
push
int
movs
mov
repnz
sub
out
ror
mov
sbb
out
adc
pop
(bad)
xor
cdq
sub
adc
mov
js
or
out
or
or
push
xor
sub
es
pushf
xor
and
retf
push
pop
inc
addr16
rol
fcom
imul
dec
cmp
je
iret
and
retf
loopne
or
adc
mov
jno
push
loop
pop
cmp
clc
adc
cmps
mov
add
in
xor
adc
pop
push
in
push
cs
pop
cmps
cmps
in
jge
cs
in
iret
xor
mov
sahf
push
add
cmc
lock
dec
push
out
lock
add
push
rcr
add
movs
mov
adc
mov
sbb
shl
lds
and
sahf
cwde
push
mov
cld
js
jmp
je
push
sbb
or
xchg
int
in
ret
ja
push
cmp
pop
enter
inc
or
sub
daa
fild
popf
or
movsx
push
push
jmp
cmps
push
fidivr
out
dec
push
and
push
add
ins
sbb
nop
push
in
sbb
inc
fcomp
jns
sbb
mov
pop
pop
cmps
pop
cs
in
mov
or
dec
pop
add
je
push
xor
(bad)
fadd
test
add
dec
jg
mov
sahf
jmp
push
add
imul
call
and
mov
add
cmp
mov
cmps
cmp
mov
or
fmul
pop
daa
jo
imul
rcl
push
jb
lea
fcomp
mov
push
lahf
sub
hlt
xchg
dec
jg
imul
mov
cli
mov
(bad)
mov
inc
mov
sub
or
xchg
and
or
pop
inc
scas
add
adc
sub
sub
push
mov
xlat
mov
sbb
rcr
cmp
mov
je
or
ret
aaa
push
sbb
and
add
shr
(bad)
cdq
add
mov
xor
sbb
mov
pop
ins
mov
push
pop
lea
xchg
punpcklwd
test
stc
jns
jnp
xor
xchg
jbe
repnz
inc
push
jle
push
bound
dec
pop
jnp
retf
mov
cwde
mov
in
jno
ror
lods
pusha
lods
sbb
jp
sbb
or
mov
and
rol
(bad)
adc
adc
loopne
pop
inc
push
fs
ins
xor
mov
mov
add
out
pop
cmp
push
je
mov
xchg
pop
mov
es
xor
lds
and
cdq
mov
ret
mov
imul
dec
mov
cmp
out
add
rdpmc
sar
unpcklps
add
mov
not
inc
test
dec
stos
js
cmp
cdq
inc
xor
mov
or
xchg
pop
sbb
inc
pop
xor
jmp
push
fmul
sahf
sbb
(bad)
push
pop
jne
dec
mov
cmp
pop
jp
or
dec
fistp
mov
cli
mov
rcl
cwde
mov
std
adc
push
aas
pop
add
cmps
mov
inc
lock
and
xchg
sti
(bad)
pop
arpl
mov
xor
and
jns
xor
pop
inc
shl
mov
inc
cs
mov
scas
or
or
int3
cmp
cmp
adc
push
adc
xor
imul
das
je
sbb
xchg
jmp
out
mov
add
sahf
sbb
ret
in
mov
repz
pop
repz
sbb
scas
test
cmp
inc
shl
pop
sub
es
cmc
sbb
adc
adc
adc
xor
sbb
or
bound
push
inc
or
inc
movs
outs
jmp
test
out
mov
push
dec
cs
icebp
xor
ja
add
and
(bad)
pop
lods
aam
pop
push
(bad)
pop
mov
neg
pop
jnp
das
sub
inc
xchg
enter
in
inc
pop
push
sbb
enter
(bad)
jmp
imul
inc
cli
ja
ins
inc
clc
push
adc
gs
push
adc
push
and
movs
outs
pop
push
push
push
ret
pop
cmp
movs
push
js
ret
repz
sbb
fnstenv
les
inc
jmp
mov
or
xchg
or
add
call
add
or
sub
or
arpl
adc
iret
mov
xor
jle
dec
rcr
dec
jle
cld
ss
or
out
add
sbb
add
ror
xor
mov
mov
fst
jge
and
imul
rcl
xchg
xor
iret
mov
lea
das
mov
or
jmp
shl
push
out
and
es
adc
push
sub
cmp
shl
sar
(bad)
adc
and
aas
enter
push
mov
jo
xor
pop
nop
or
and
loop
sub
add
icebp
sub
xchg
xchg
xchg
mov
es
(bad)
das
inc
jge
xlat
sti
pop
out
adc
jbe
aaa
adc
push
push
fnstsw
sbb
or
xor
jge
add
and
mov
vphsubdq
test
arpl
and
push
push
and
jmp
loopne
sbb
push
and
pop
mov
or
pop
in
xor
pop
cmp
retf
aad
mov
xor
int3
pop
call
jl
and
mov
das
mov
inc
pop
mov
xor
adc
sbb
push
adc
add
and
add
cmc
jmp
xor
fldcw
push
dec
mov
and
sub
fisttp
sbb
fidiv
push
xor
ror
pop
inc
adc
loopne
in
inc
mov
cmp
pop
push
call
push
hlt
jmp
or
xor
push
cmps
xchg
dec
inc
cmp
sub
jne
push
ja
data16
mov
into
sahf
dec
inc
xchg
int3
fisttp
xchg
pop
ins
sbb
hlt
pop
es
xor
or
call
and
cmc
adc
pusha
or
ds
daa
mov
sbb
and
fwait
retf
sar
ja
mov
dec
push
adc
lods
enter
jnp
cmp
shl
lock
bound
push
push
jp
das
xchg
call
sar
or
push
add
je
shr
and
jmp
movs
mov
xor
cmc
pusha
call
rol
pop
fmul
jne
pop
jo
push
popa
enter
xor
retf
retf
inc
lods
push
(bad)
jo
iret
fdiv
jno
xor
or
jbe
and
ss
push
jmp
mov
cmps
push
jmp
pushf
sbb
push
int
jmp
push
pop
adc
test
sbb
imul
retf
or
test
jge
lods
movs
sbb
dec
arpl
push
adc
inc
adc
and
sub
dec
movs
inc
rcr
mov
xor
mov
sub
mov
jmp
mov
sub
jne
sti
mov
add
push
and
outs
mov
push
pop
or
and
cmp
inc
movs
std
fnstenv
add
dec
sbb
push
shl
loope
adc
in
sbb
pop
push
add
xchg
jbe
and
sar
repnz
inc
lods
sub
sbb
add
jl
les
sub
idiv
pop
pop
pusha
pusha
push
add
xchg
gs
popf
adc
add
inc
adc
cs
push
cld
loop
mov
ins
bswap
sub
call
push
jbe
out
fimul
in
retf
xchg
mov
pop
add
fs
jmp
push
push
call
cmp
add
sub
push
ss
test
test
push
stc
xchg
jo
push
dec
pushf
in
inc
add
pop
in
xor
add
add
or
add
mov
xchg
mov
lock
or
jo
or
sub
xchg
jmp
fcomp
xchg
int
shl
xchg
mov
push
loopne
out
nop
ins
push
shl
rol
jo
ror
hlt
mov
add
inc
bswap
and
cmp
mov
es
call
adc
mov
loope
cwde
adc
mov
xchg
rol
sub
pop
test
in
or
xchg
test
ret
or
in
loopne
adc
mov
aam
add
lods
out
add
je
push
sbb
mov
and
inc
arpl
pop
sbb
ret
xor
cmp
jg
add
loop
adc
daa
cmps
ror
jb
movs
xor
fisttp
ret
xor
cmp
jmp
inc
push
push
or
pop
jae
pop
sbb
add
movs
adc
gs
pusha
(bad)
pop
jmp
mov
jne
mov
ds
dec
push
jmp
addr16
retf
push
mov
mov
and
pop
lea
jecxz
sub
hlt
xor
jl
test
and
jbe
mov
mov
sub
or
in
out
jmp
ret
lock
or
sub
fldcw
rcl
sub
popf
jmp
pop
push
stos
mov
out
cmps
push
xor
lods
or
add
cmp
pop
jmp
or
sahf
lods
sahf
pop
adc
xchg
shl
jl
loope
enter
std
pop
pop
mov
(bad)
push
mov
movs
icebp
retf
dec
inc
sub
ror
js
mov
into
test
mov
movs
stc
pop
sub
test
popf
bound
jmp
fild
outs
add
push
mov
adc
in
add
mov
xor
push
adc
inc
add
xlat
test
in
mov
cwde
mov
sbb
shrd
shl
add
jo
leave
xchg
repz
jl
mov
and
add
call
pop
sub
xor
mov
pop
dec
popa
sti
cmp
icebp
cmc
adc
ins
add
push
sub
hlt
sbb
xchg
pop
inc
loopne
out
cmovno
test
adc
ret
jae
ret
add
cmp
outs
sub
dec
jb
jmp
cmps
jo
mov
test
push
push
(bad)
jg
gs
in
inc
test
or
or
add
add
push
ret
or
push
lock
xor
lea
loope
test
lea
dec
pop
(bad)
aam
push
mov
cs
dec
cmp
or
push
cmp
push
push
xor
pop
mov
(bad)
or
loope
hlt
add
adc
mov
adc
and
les
jge
xchg
sar
push
or
ret
jne
daa
xor
ret
cmp
push
xor
add
xchg
sub
ror
xchg
inc
push
pusha
pop
push
addr16
xchg
adc
sub
adc
push
test
mov
mov
add
fwait
pop
cmp
(bad)
mov
or
or
or
push
inc
inc
fmulp
out
adc
fs
int3
jne
push
js
jg
clc
and
je
xor
and
retf
add
xor
push
or
push
mov
cdq
and
dec
out
pop
or
js
ror
sbb
loopne
inc
sbb
inc
loop
and
test
add
test
out
pop
ins
cmp
xor
adc
push
dec
std
es
push
and
imul
data16
xor
xor
and
mov
lods
sbb
loopne
cmp
shl
or
dec
aam
push
rol
ror
jb
mov
enter
cmp
retf
fmul
jmp
sahf
test
dec
add
jl
movs
push
push
movs
cmp
add
or
cmp
jne
or
and
mov
arpl
sbb
inc
nop
xchg
icebp
and
push
and
xor
dec
call
scas
adc
or
sar
sbb
repz
cs
sbb
push
push
pop
dec
pop
idiv
add
inc
sar
adc
popa
and
sbb
jo
lock
fsub
push
retf
jno
jle
add
sub
xchg
into
or
iret
jb
push
rcl
lea
cmc
ror
xor
imul
mov
scas
xor
test
mov
dec
popa
inc
aas
or
jnp
jbe
push
mov
mov
jge
pop
xlat
adc
cmp
inc
xchg
nop
and
fs
je
pushf
aas
nop
adc
dec
jbe
ror
(bad)
into
sar
retf
test
test
push
int3
aad
add
push
inc
jmp
arpl
inc
cmp
or
mov
dec
push
cmp
fisubr
lods
mov
inc
push
xchg
clc
sub
xor
mov
ret
jecxz
aaa
nop
sar
js
push
and
fcom
loopne
(bad)
fcmovbe
sbb
scas
sbb
push
mov
inc
sbb
jmp
sub
dec
aaa
cmp
add
push
inc
push
mov
mov
outs
adc
xor
mov
repz
push
xchg
jmp
inc
pop
sub
sbb
and
adc
sub
loopne
cmps
inc
jmp
aad
lods
sbb
imul
push
add
ins
ins
sub
sub
stos
sub
les
nop
add
retf
cld
push
pop
push
call
fdiv
sub
jno
je
sub
jmp
xchg
pop
fsub
adc
popa
stos
sub
lea
pop
inc
xor
push
jno
push
enter
pop
sar
jae
ror
cmp
aaa
ret
enter
imul
jo
xchg
shl
out
xor
mov
sub
js
adc
lods
leave
test
hlt
mov
add
cmc
ja
push
or
pop
je
jnp
shr
je
and
inc
cdq
addr16
or
cmps
jnp
or
fbld
adc
add
ja
stos
adc
je
ins
call
jmp
mov
inc
push
sub
jl
cmp
and
(bad)
scas
push
jo
jge
dec
adc
jmp
add
add
mov
shl
test
push
daa
mov
xor
les
xchg
push
xlat
adc
jb
test
test
adc
cmp
je
sub
push
aam
or
mov
gs
call
and
call
push
push
xor
js
sbb
pop
out
int3
jne
pop
lods
test
adc
mov
sub
cmp
or
pushf
mov
lods
push
mov
sub
mov
lock
mov
push
test
pop
or
test
cmp
sub
mov
stos
sub
cmp
sub
(bad)
jne
and
sbb
aad
mov
test
add
lods
adc
cmp
dec
jo
popa
and
test
or
popa
loopne
sbb
push
cmp
pop
inc
dec
mov
cmp
xchg
loope
push
cmp
popa
inc
ds
add
test
adc
mov
add
mov
and
ss
jo
pop
adc
push
and
mov
or
pop
jl
imul
loope
pcmpgtd
xchg
inc
push
xchg
mov
adc
cmp
jmp
xchg
sti
inc
adc
popa
js
dec
ror
xchg
pop
or
sub
push
and
or
jle
pop
dec
pop
cwde
gs
or
mov
push
or
xor
repnz
push
sbb
or
mul
push
mov
add
or
les
jne
or
fistp
outs
cdq
pop
or
invlpg
jmp
addr16
(bad)
and
hlt
adc
sbb
mov
jl
sub
or
sbb
outs
js
shl
or
mov
nop
mov
add
adc
push
mov
sbb
sub
push
and
sbb
rcl
add
mov
mov
je
cdq
(bad)
lea
sbb
add
xchg
add
pop
cmp
aam
adc
jmp
dec
bound
xor
fdivr
les
and
dec
adc
imul
jl
(bad)
push
jl
popa
mov
sti
pop
fstp
add
nop
mov
dec
iret
cmp
sub
pop
xchg
rcl
ficom
cli
push
adc
pop
ret
cmps
fs
std
sub
xor
add
lds
test
dec
jecxz
or
test
cmps
ins
ud1
movs
data16
movzx
imul
js
jl
adc
sbb
adc
xlat
xrelease
adc
ror
adc
push
and
out
mov
mov
mov
dec
std
xchg
cld
or
in
add
nop
test
mov
add
xchg
push
mov
test
jb
fwait
in
add
mov
pop
adc
popa
inc
(bad)
or
xchg
sti
xchg
and
xchg
add
lgdtd
lock
ins
adc
xor
cmp
imul
xlat
and
mov
ffree
out
push
shl
add
fsin
ret
cmp
sbb
pop
loope
adc
mov
cmp
into
add
popa
pop
div
rcl
stos
add
cli
adc
add
pusha
das
adc
adc
xchg
push
fild
call
frstor
leave
test
adc
or
pop
add
dec
mov
out
inc
jns
std
ss
xchg
push
ror
push
rcl
add
adc
xchg
mov
int
inc
or
test
inc
or
dec
shl
and
cmp
es
test
mov
inc
jb
imul
push
cwde
pop
neg
push
cmp
mov
push
fisttp
cs
or
inc
push
pcmpgtb
pop
jmp
jb
sub
dec
adc
xor
sbb
rol
sbb
mov
add
pop
sbb
adc
sub
stos
adc
jmp
cmp
and
or
js
rol
stc
mov
xlat
(bad)
shr
(bad)
mov
dec
cmp
push
ror
loopne
push
mov
movs
pop
or
loop
hlt
cmps
aam
push
cmp
push
push
xchg
sub
sub
push
inc
inc
cmps
xor
xor
in
add
xor
pop
jne
adc
aam
out
mov
mov
scas
add
or
out
rcr
imul
add
xor
and
cmps
imul
and
xor
std
int
fwait
and
mov
pushw
sbb
mov
mov
mov
sbb
movs
push
jns
daa
dec
jmp
sbb
inc
mov
shl
inc
sbb
dec
sbb
jmp
call
addr16
jae
sub
or
cmp
rol
jnp
ror
cdq
inc
inc
dec
or
push
sub
xor
xor
(bad)
jb
cwde
iret
int3
add
cs
or
xchg
jne
xchg
xor
dec
adc
mov
ja
sbb
mov
xor
mov
(bad)
add
and
add
scas
adc
xchg
mov
dec
jg
je
je
mov
sbb
push
adc
inc
lea
fwait
push
out
je
dec
je
add
adc
iret
cmovnp
add
jmp
and
nop
push
aaa
imul
inc
imul
adc
aaa
or
inc
scas
mov
ret
jae
shl
and
lea
and
inc
or
mov
enter
lods
xor
and
mov
mov
adc
test
adc
clc
mov
mov
mov
push
lods
cmp
sbb
or
stos
hlt
add
mov
cmps
sub
pop
inc
adc
shl
mov
or
jne
push
addr16
and
and
push
test
mov
les
sub
adc
jns
sbb
jne
push
add
es
and
lea
lea
enter
rol
test
aaa
mov
test
movs
in
and
cmp
push
jb
mov
and
fdiv
inc
jge
inc
stos
inc
mov
shl
test
daa
push
test
sub
fidiv
addr16
xchg
repnz
les
sbb
add
ror
push
fld
pop
fist
out
out
pop
je
dec
push
add
hlt
lea
stos
push
push
mov
pop
push
push
aaa
sbb
pop
daa
lods
add
int3
or
add
clc
jnp
das
inc
jge
add
mov
xchg
or
mov
cmps
jnp
ss
hlt
or
or
adc
loopne
adc
mov
push
loope
mov
pop
fcomp
fidiv
ss
adc
or
rol
or
sbb
inc
movs
loopne
das
cmp
push
call
sbb
hlt
mov
push
add
icebp
adc
sub
ror
loopne
nop
int
pop
push
jecxz
push
dec
ins
imul
js
or
sbb
ret
shr
mov
mov
in
(bad)
rcl
sub
or
push
and
imul
mov
mov
pop
push
or
pop
push
fstp
sar
and
jge
out
or
les
cmp
lock
adc
call
jo
and
xor
pop
dec
(bad)
lock
popa
sbb
in
sub
(bad)
fst
movs
je
sub
icebp
lea
push
lea
out
mov
lock
idiv
adc
adc
xchg
repnz
adc
push
clc
or
adc
and
adc
movs
fs
pop
sbb
sbb
std
jl
sti
push
les
sbb
push
and
jl
and
jmp
sub
xor
sbb
fisubr
push
mov
rcr
sbb
pusha
or
loop
dec
push
adc
pop
scas
js
add
add
or
test
iret
call
xchg
adc
cmp
jo
dec
or
mov
or
push
xor
push
pop
inc
dec
mov
cmpxchg8b
mov
xchg
nop
imul
sbb
sbb
(bad)
arpl
jmp
and
push
dec
iret
xchg
sbb
push
inc
fisttp
in
push
jo
add
and
cmp
je
push
sub
cmp
ins
mov
leave
or
cmp
adc
or
mov
xor
and
leave
sub
cmp
or
cmp
dec
add
inc
add
or
mov
rol
and
dec
and
nop
push
push
pushf
cld
sbb
and
mov
adc
imul
or
outs
pop
push
je
sbb
add
cmp
mov
or
dec
cmp
push
test
enter
or
or
push
jg
aas
and
outs
test
xchg
ret
xor
lea
pushf
mov
test
dec
mov
mov
aad
or
adc
cmp
add
cmp
shl
adc
outs
fs
int3
call
aas
jmp
ins
add
sub
in
ret
movs
lea
cld
inc
push
inc
mov
pop
in
movs
lea
je
or
push
nop
lock
clc
or
cli
retf
sbb
mov
pusha
push
push
fisubr
inc
xchg
repz
gs
in
sete
imul
sbb
xor
xor
movs
push
push
dec
mov
lock
push
out
push
xchg
ret
add
outs
push
ins
ret
ret
sub
loopne
rol
movs
push
dec
cld
ss
loopne
xor
clc
and
mov
add
sub
xor
movs
scas
sbb
and
call
or
and
mov
je
sub
rcl
repnz
out
lock
push
mov
clc
inc
cmps
pushf
jl
add
pop
add
xchg
dec
cmp
pusha
add
div
scas
mov
dec
adc
add
and
lahf
mov
or
and
ret
out
(bad)
mov
and
cli
xor
adc
movs
push
sub
dec
inc
sub
mov
mov
dec
dec
sub
add
dec
stos
sbb
das
outs
test
pop
cmps
cmp
cmps
sbb
push
adc
cmps
inc
inc
sub
sbb
push
mov
dec
or
mov
fidiv
cmps
aaa
mov
jbe
iret
stos
or
pop
ins
call
adc
cmp
mov
sbb
es
pop
das
loope
bound
cld
push
sub
mov
stos
enter
imul
sub
pop
pop
cmps
icebp
dec
adc
sbb
mov
push
jge
dec
xchg
push
push
int
rcr
ins
xor
or
call
jo
bts
into
sti
test
ret
jmp
es
aad
fwait
xor
add
cmp
lods
popa
ins
je
cmp
jmp
mov
sahf
clc
cmp
push
xor
adc
fcomp
sahf
add
(bad)
adc
retf
fldcw
mov
ds
dec
fisttp
dec
js
mov
mov
sub
movs
and
imul
push
cli
cmc
mov
xor
adc
pop
push
pop
xor
mov
loopne
sbb
(bad)
pop
mov
sub
das
nop
xor
xor
sbb
push
sbb
loopne
sub
es
push
and
sbb
adc
fstp
jmp
in
not
call
cld
fstp
fs
pop
jmp
fist
lahf
fld
clc
adc
push
jns
mov
xchg
sbb
sbb
sub
das
loop
dec
jmp
mov
rol
in
movs
adc
xchg
imul
pop
rol
jo
cdq
mov
fwait
or
(bad)
mov
test
mov
dec
push
lahf
xor
mov
push
xor
and
and
data16
movs
or
pop
clc
sbb
and
push
dec
or
pop
call
dec
dec
push
push
sub
mov
and
xor
adc
ret
jne
and
push
call
cmp
sbb
adc
push
xchg
lods
pop
jo
dec
pop
or
movs
adc
or
inc
adc
xchg
cli
or
jbe
sbb
dec
rcr
call
ds
and
jbe
jmp
pop
mov
icebp
dec
dec
xor
sbb
or
jno
dec
or
mul
pop
test
popf
or
mov
adc
push
ror
out
add
sub
jmp
push
cmp
test
push
sbb
or
mov
or
les
imul
adc
ret
xchg
nop
mov
and
or
(bad)
les
xchg
mov
pop
jmp
xchg
cdq
cs
loopne
mov
mov
sbb
xor
mov
sub
ins
shl
(bad)
ficomp
lea
fdivr
nop
test
enter
cld
outs
into
je
push
or
adc
push
aad
pushf
jnp
fist
lea
dec
xchg
pushf
enter
and
aam
jno
rol
and
cmp
and
xor
and
adc
rcl
mov
add
cmp
icebp
add
adc
mov
bound
pop
dec
xor
pop
jle
and
sbb
lea
jmp
daa
test
adc
cli
pop
adc
adc
shr
rcr
mov
xor
pop
add
movs
add
in
adc
and
push
sub
dec
mov
pop
fs
add
pop
add
or
add
or
icebp
call
or
mov
leave
xor
and
test
jne
stos
jne
fisubr
retf
dec
pusha
shl
or
inc
or
mov
add
mul
push
bound
mov
retf
leave
push
mov
mov
push
mov
push
test
ss
repz
or
sub
cmp
sbb
cld
mov
sub
cmp
xor
jmp
inc
adc
rol
cmp
and
dec
push
and
mov
icebp
popa
inc
dec
(bad)
js
dec
cmp
movs
imul
ret
sbb
ss
add
call
cdq
mov
dec
mov
pop
(bad)
push
xchg
inc
sub
xor
sbb
popa
cmp
loopne
mov
mov
jbe
test
or
sub
adc
inc
jbe
xchg
hlt
cld
mov
mov
and
fdiv
mov
mov
ins
hlt
test
dec
cmp
adc
jbe
push
adc
mov
or
push
aas
add
adc
cwde
pop
mov
adc
loop
xchg
in
and
add
push
dec
inc
mov
xor
div
je
cs
mov
repnz
sbb
xchg
inc
cmps
pop
and
enter
loop
sub
and
in
add
mov
jnp
aam
jnp
lea
mov
pop
mul
aam
imul
(bad)
push
dec
fmul
pop
adc
inc
push
aam
pop
sbb
lods
add
add
sbb
push
and
ins
loopne
nop
lock
lea
movs
mov
sub
sahf
imul
fsub
fs
push
repnz
ror
jge
jnp
pop
add
cmp
push
nop
dec
(bad)
fwait
call
mov
ror
cli
or
jmp
mov
push
mov
pop
mov
ds
add
jp
(bad)
xor
add
fidivr
adc
(bad)
in
adc
setl
mov
pop
jo
sub
fcom
jmp
or
pop
sub
aaa
push
in
sbb
cwde
sbb
sbb
fld
repnz
mov
mov
cmp
push
adc
inc
ret
adc
sbb
imul
push
inc
cmp
xchg
adc
loop
adc
xor
repnz
and
push
xchg
mov
retf
inc
sbb
dec
jp
adc
je
ret
or
cmp
jbe
push
inc
sbb
mov
clc
and
xor
jmp
push
sbb
fdiv
sub
jo
push
sbb
mov
rol
outs
dec
fmul
rcr
shr
and
ret
je
movs
int
cmps
pop
test
fmul
nop
inc
dec
jnp
movs
add
mov
mov
push
xchg
mov
xchg
rol
pushf
xor
clc
jbe
imul
icebp
adc
je
sub
std
fnsave
sti
inc
jb
pop
push
sub
pop
push
scas
int3
sub
inc
mov
(bad)
cwde
inc
xor
and
mov
dec
enter
lods
mov
cmp
test
dec
mov
popa
imul
out
push
or
or
cmp
outs
or
cdq
cwd
cmps
pusha
call
aaa
ret
imul
add
sub
and
push
test
push
fdiv
xor
js
push
adc
pop
repnz
or
clc
ins
ret
xor
inc
int
pop
push
inc
push
or
or
cmp
das
pop
icebp
rcr
xor
leave
popa
jp
jo
movs
pop
rol
mov
xor
sbb
add
pushf
sub
xchg
mov
sbb
xchg
xchg
xchg
adc
sbb
neg
dec
iret
jo
stos
or
cmp
or
clc
and
inc
or
hlt
adc
mov
adc
xchg
fnstenv
(bad)
les
mov
ins
and
jne
jg
jb
xor
pop
sar
cmps
push
xchg
push
fsubr
mov
inc
ja
stos
adc
pop
and
pop
cmp
sub
jle
dec
je
(bad)
fstp
cwde
test
cmc
dec
dec
cmp
ficomp
aaa
mov
call
stc
cmps
sbb
cld
adc
inc
adc
mov
enter
test
pop
pop
or
or
mov
push
xor
mov
(bad)
mov
and
add
jae
scas
jg
cwde
call
add
mov
cli
out
cmp
pop
sbb
add
add
mov
pop
mov
in
ins
jl
push
lock
push
adc
in
sbb
sbb
adc
pop
int3
fadd
or
xchg
shl
jl
or
push
cmp
dec
in
pop
jne
adc
es
jle
mov
sbb
pop
out
dec
mov
xor
cwde
je
lods
xlat
rol
es
lock
push
inc
adc
in
mov
push
or
jnp
in
mov
push
push
(bad)
jmp
add
add
push
sub
rol
adc
jnp
aam
push
(bad)
push
sbb
and
mov
sbb
ret
xor
xchg
mov
loopne
add
mov
inc
and
daa
or
(bad)
jo
pop
out
mov
sub
aas
inc
or
add
add
or
push
or
mov
adc
test
rol
test
jns
adc
xor
inc
fmul
xor
jmp
dec
js
(bad)
jns
adc
ror
cmp
jae
ds
fcom
xchg
cwde
sbb
cmp
test
or
add
cs
sbb
add
push
sub
jns
jnp
and
adc
or
je
cs
fild
xor
inc
cmc
mov
ret
push
aad
or
cld
inc
lods
clc
jne
mov
dec
sub
sbb
or
jmp
push
or
sub
mov
add
push
cmp
xor
xor
test
rcr
sbb
lea
mov
js
add
add
mov
xchg
fcompp
pop
test
dec
(bad)
dec
push
mov
call
add
aas
adc
cld
lock
lock
and
call
push
ins
cmp
mov
mov
jmp
fisub
push
in
inc
or
push
out
mov
add
xchg
push
cmp
pop
movs
inc
sbb
xchg
sahf
and
cmp
mov
retw
mov
sub
xchg
mov
(bad)
cmp
pop
xchg
ins
imul
hlt
mov
dec
add
xchg
and
(bad)
popf
sahf
add
mov
adc
add
and
pop
loopne
xchg
jo
add
add
cmp
dec
mov
sbb
sbb
ret
fld
pop
or
adc
mov
push
fdiv
and
(bad)
test
add
xchg
pop
inc
popa
pop
loopne
jge
stos
shr
ds
add
dec
loop
cmovno
and
mov
mov
add
sbb
rcr
fdivr
sub
pop
xor
test
lea
popa
loopne
scas
jmp
push
movs
lods
data16
xor
neg
push
and
push
mov
pop
mov
mov
inc
je
movs
push
lock
int3
add
scas
dec
and
push
or
test
dec
add
(bad)
push
mov
ss
fwait
adc
or
loop
pop
xor
mov
sbb
push
pop
xor
xchg
pop
push
aaa
sbb
lea
pushf
stc
jmp
or
dec
and
gs
add
adc
adc
xchg
std
mov
ret
mov
and
inc
sahf
or
adc
ss
clc
lods
xchg
mov
inc
add
out
loope
dec
fisttp
ja
mov
or
leave
pop
rcl
push
adc
inc
inc
inc
mov
cmp
fst
xchg
xor
xor
repnz
dec
cmc
sub
cwde
push
rol
js
dec
outs
sbb
or
xor
fild
out
jg
lea
dec
xor
pusha
inc
sub
jnp
les
dec
arpl
nop
out
inc
call
push
jle
jne
mov
shr
adc
xchg
inc
push
in
popa
add
stos
imul
add
sbb
push
or
mov
pop
les
xlat
js
dec
mov
cs
rcl
(bad)
xor
and
mov
push
xchg
push
xor
sbb
rol
xlat
sbb
out
add
dec
aam
dec
aam
in
jo
or
mov
sbb
or
sbb
pop
inc
cmp
rcl
int3
mov
xchg
dec
int3
rcl
sahf
js
mov
retf
test
jl
jmp
(bad)
and
retf
call
and
movs
lods
inc
sbb
cdq
push
gs
fsub
sbb
je
cmp
mov
xchg
xchg
sub
mov
fadd
pop
sbb
and
aam
and
xchg
push
mov
movs
jecxz
and
and
popa
sub
xor
je
pop
stos
mov
jno
xor
jno
cmp
not
les
loop
and
adc
jle
adc
and
or
sub
lods
jnp
and
push
pop
cmp
dec
or
mov
cmp
push
call
add
sbb
pop
and
pop
imul
jae
or
jbe
test
(bad)
push
ffree
mov
xchg
inc
and
add
call
pop
fs
mov
call
push
stc
pop
pusha
sbb
add
xor
push
mov
fadd
in
call
hlt
mov
je
nop
mov
pop
push
dec
push
dec
pop
inc
ret
jns
xor
mov
imul
add
pop
pop
add
add
pop
add
add
or
mov
pushf
and
jbe
mov
add
push
dec
sbb
test
cmp
jb
loope
dec
push
mov
push
mov
outs
ror
lds
cmps
cmp
(bad)
jp
pusha
retf
sub
jecxz
(bad)
push
xor
sahf
shl
in
add
xchg
mov
pusha
popf
mov
sub
push
or
dec
int3
mov
ja
dec
xchg
adc
pop
aam
movs
movs
scas
nop
mov
pop
sub
fld
sbb
jnp
test
sub
sbb
sbb
push
or
or
adc
mov
mov
inc
dec
enter
jle
sbb
fld
fstp
fld
ffree
add
dec
outs
mov
js
add
mov
add
icebp
fldcw
sub
arpl
and
and
jl
jnp
mov
jmp
jne
pop
pop
int3
and
adc
mov
mov
lods
push
inc
int3
retf
loopne
adc
push
add
ret
out
or
cs
mov
jbe
or
adc
or
retf
jne
or
repz
pop
int
cs
outs
clc
into
retf
xor
xor
xchg
shl
cmp
ins
xor
les
xor
jmp
add
adc
pop
mov
and
dec
mov
popf
inc
mov
pushf
sbb
and
movs
inc
adc
mov
add
sbb
out
cmp
shr
ret
push
mov
mov
adc
es
repnz
add
cdq
aas
sbb
pop
push
daa
mov
mov
fadd
repnz
sbb
mov
xor
cdq
into
pop
loopne
mov
scas
and
jno
mov
push
dec
out
push
cmp
sti
mov
push
or
test
mov
inc
inc
int3
push
or
(bad)
pop
call
inc
jae
add
push
sub
adc
and
cmp
and
rep
and
ins
cwde
pop
sbb
gs
xchg
cmp
inc
inc
loopne
adc
add
sub
popa
cmc
pushw
test
enter
jle
cmp
je
or
je
add
push
movs
add
ret
and
or
cmp
int
lods
call
fadd
mov
adc
add
sbb
mov
xchg
mov
mov
pop
lea
cmp
or
xchg
jp
fist
fmul
dec
data16
add
add
add
add
or
sub
jbe
in
jecxz
inc
outs
xchg
out
mov
in
pop
je
stos
sub
sbb
mov
push
add
xchg
lods
cmp
dec
retf
dec
enter
adc
add
cdq
add
sub
or
cmp
pusha
or
xor
shr
shr
jmp
push
movs
xchg
or
jp
call
inc
mov
add
xchg
fsub
and
ja
mov
add
xor
mov
or
add
add
repnz
das
add
add
add
jne
sub
sub
dec
fdiv
lock
sub
(bad)
sbb
aam
fadd
in
mov
test
push
adc
in
cdq
xchg
popf
hlt
inc
cli
or
xor
sub
push
sub
cmp
and
in
push
call
cld
addr16
mov
inc
std
sub
push
out
das
rcr
and
aam
or
nop
repnz
frstor
or
fcomp
adc
sub
dec
sbb
cmp
shl
add
push
add
xor
xchg
int
or
jne
fdivr
scas
xor
inc
shl
push
mov
stos
mov
(bad)
xchg
adc
dec
rcl
clc
mov
and
sbb
ret
aad
call
xor
iret
inc
outs
adc
ret
adc
mov
dec
push
pushf
test
or
jns
adc
ret
adc
std
and
push
ins
sub
inc
push
xlat
aaa
pop
jmp
cmp
jns
movs
and
mov
jmp
dec
fcom
adc
pop
sub
add
add
inc
jnp
pop
int3
jge
push
dec
cmps
fdivr
mov
sub
arpl
cmp
adc
test
sbb
adc
xor
adc
and
cmp
outs
jmp
sub
aas
push
mov
push
ret
dec
hlt
inc
xchg
test
inc
call
sbb
cld
adc
xchg
add
mov
pop
pop
add
fstp
cmp
imul
bound
lods
(bad)
jmp
cmp
inc
pop
ds
add
dec
xchg
int
(bad)
add
add
nop
push
sbb
mov
xor
retf
shl
das
xchg
add
shl
sbb
stos
popa
lods
add
inc
(bad)
(bad)
push
or
sub
xlat
in
aam
push
sub
je
ss
jle
inc
mov
lods
inc
mov
jl
sub
ss
and
cmp
jb
sbb
jle
dec
das
sub
pusha
and
add
inc
shr
dec
inc
xchg
cmp
push
pop
add
xchg
push
inc
mov
inc
cmp
call
test
mov
xchg
adc
call
mov
fs
inc
xor
ins
mov
add
inc
into
push
pop
cli
loopne
ins
cmp
lods
test
std
fisub
mov
and
mov
pop
and
and
ins
(bad)
sub
ins
xchg
mov
cmp
nop
shl
jnp
push
adc
inc
hlt
dec
les
sbb
nop
sbb
add
jmp
push
push
jns
or
adc
je
in
xor
push
inc
mov
push
outs
mov
(bad)
les
ret
jo
sbb
adc
inc
lods
retf
nop
inc
(bad)
out
or
mov
adc
xor
lahf
adc
push
push
mov
mov
outs
nop
lea
or
cli
lods
add
stos
inc
add
(bad)
nop
loopne
dec
mov
hlt
sar
scas
adc
sub
cld
dec
mov
mov
jo
add
push
fcomp
hlt
test
add
pop
arpl
and
(bad)
stos
push
fdivr
xor
scas
cmp
and
dec
movs
dec
mov
stos
rol
add
ja
jo
or
loopne
xor
sub
shr
sbb
xchg
shl
adc
mov
adc
jmp
jno
dec
cmc
fmul
push
adc
adc
pop
test
pop
cmp
movs
sbb
push
and
ss
add
and
test
xchg
xor
movs
inc
add
mov
push
enter
add
fsub
mov
pop
pop
sbb
mov
call
mov
push
xor
add
cmc
shl
addr16
fiadd
cmc
sub
xchg
loope
push
pop
aaa
ror
es
pop
or
adc
imul
xchg
push
sbb
sbb
imul
mov
sbb
push
mov
xor
inc
or
add
add
(bad)
mov
or
push
pusha
mov
xchg
push
fadd
jae
cld
xlat
sbb
push
lock
cli
dec
ret
mov
mov
test
pop
inc
sub
add
movs
ror
mov
stos
jo
or
adc
add
das
ret
pushf
jmp
call
aam
dec
psubd
mov
add
inc
push
adc
dec
and
xchg
add
js
or
xchg
cmp
and
gs
lea
push
push
jb
and
inc
add
adc
lahf
adc
test
or
add
and
push
lods
push
inc
mov
push
je
mov
aas
nop
cmp
scas
fistp
or
xor
or
add
inc
add
cmp
pop
rol
lea
dec
add
dec
xor
xor
push
and
and
cmp
mov
dec
push
(bad)
lods
mov
(bad)
adc
add
mov
add
not
fidivr
adc
or
xchg
dec
mov
adc
neg
in
pop
repnz
pop
inc
fdivr
cmp
xchg
bound
call
adc
add
fild
stos
aas
js
mov
and
loope
mov
setb
ret
dec
pop
leave
mov
inc
sbb
mov
or
mov
mov
mov
inc
xor
push
jb
iret
add
call
jge
ficomp
lea
mov
mov
jne
std
repnz
push
nop
or
jmp
outs
xor
rcr
jp
sbb
mov
cmp
sbb
sub
push
xchg
(bad)
sbb
adc
mov
sbb
fisub
(bad)
icebp
jle
add
std
xor
rcr
in
retf
test
call
xchg
clc
jne
adc
add
sub
push
mov
sbb
jbe
inc
push
in
rcl
(bad)
aaa
inc
adc
pop
inc
adc
out
leave
movs
pop
pushf
mov
add
(bad)
or
cmp
ds
ror
adc
leave
inc
or
jbe
inc
push
and
outs
ret
aad
loopne
into
adc
inc
push
sub
xchg
shl
jns
add
inc
sub
jge
ins
dec
or
add
adc
pusha
xor
shl
inc
std
mov
push
pop
adc
xchg
mov
std
push
hlt
mov
mov
push
(bad)
xchg
push
jl
adc
add
sub
fcmovbe
mov
mov
mov
or
or
push
sbb
test
jb
xchg
mov
adc
or
fld1
aad
enter
sbb
jnp
push
out
dec
add
xor
add
gs
or
(bad)
jb
sub
mov
not
xor
cmp
nop
mov
fcomp
js
inc
(bad)
cmp
or
adc
mov
sub
adc
or
dec
adc
push
jl
fst
sub
xchg
xor
xor
adc
test
in
jmp
or
mov
dec
test
ret
xchg
or
jo
outs
lds
rol
inc
(bad)
daa
mov
cmc
outs
rcl
mov
xchg
mov
dec
push
adc
sub
sbb
retf
test
adc
and
or
sub
push
sub
jge
ins
mov
mov
sub
and
push
add
ret
cmp
add
enter
sbb
sbb
scas
pop
jbe
sbb
loope
mov
aad
lods
xchg
jmp
jne
mov
adc
lds
pushf
push
popa
xor
dec
add
call
ret
push
jl
mov
fnstenv
xor
add
fsub
cli
add
ret
mov
push
mov
(bad)
int3
or
fcomp
xchg
bound
iret
rcl
fst
test
jae
sub
dec
jl
jo
adc
mov
jmp
cmc
lods
lahf
jnp
pushf
adc
loope
cmp
add
cmps
pop
mov
push
arpl
loope
dec
mov
ins
loopne
sbb
cmp
mov
xor
ds
mov
test
add
push
jns
aam
lahf
test
push
jo
bound
pop
pop
in
sub
mov
and
push
push
jmp
pop
push
xchg
add
mov
ds
test
push
aaa
lea
test
sub
cs
shl
xor
cwde
test
pushf
mov
inc
aam
je
adc
and
xor
not
add
sub
cwde
and
push
inc
adc
or
mov
cmp
sbb
sar
dec
sbb
cmp
cmps
ss
movs
inc
loopne
data16
add
int
pcmpeqb
mov
imul
sub
dec
or
xor
or
cmp
push
ja
xchg
out
add
sub
adc
add
sahf
jl
ror
sbb
enter
sbb
add
enter
movs
add
in
outs
cmp
fs
push
in
enter
mov
rcl
les
leave
ret
call
xor
or
dec
adc
add
dec
adc
dec
and
jnp
cmp
adc
xchg
es
dec
repz
xchg
jmp
or
mov
push
loopne
je
adc
call
es
jmp
cmp
(bad)
jne
jno
shl
mov
iret
xlat
dec
test
dec
mov
(bad)
fidiv
ror
bound
push
loop
sub
clc
sar
aam
add
mov
call
imul
cmp
ret
mov
jg
sub
mov
add
mov
scas
mov
bound
sub
or
lods
fidivr
push
jle
add
test
jne
lods
xchg
xchg
xchg
lea
ror
or
fldcw
and
add
push
stos
loopne
add
xchg
fnstcw
jmp
(bad)
fadd
aad
clc
je
mov
ret
inc
stos
neg
mov
jge
pop
push
int3
add
or
sbb
clc
xor
jne
push
sub
push
ret
mov
pop
aad
dec
mov
mov
sbb
(bad)
imul
push
test
or
popa
mov
xor
ins
inc
cmp
ins
sbb
mov
lds
xchg
or
mov
adc
xchg
adc
aam
fild
in
mov
aad
(bad)
call
(bad)
loope
je
je
aas
cmps
sbb
mov
sbb
dec
popa
cld
sbb
fsubp
xchg
sbb
aas
mov
or
pop
nop
cmp
je
xchg
test
push
nop
sbb
add
cmp
popf
fcomp
cmp
(bad)
xchg
sub
ds
pop
push
into
push
jecxz
and
icebp
dec
or
push
mov
(bad)
int
add
push
ror
mov
pop
aad
push
jne
mov
mov
fidiv
je
mov
sub
pop
push
bound
add
jbe
cmp
sar
mov
sub
call
loope
(bad)
pop
pop
or
mov
mov
bound
sub
adc
sbb
or
ret
mov
pop
push
shl
(bad)
jle
and
or
dec
inc
and
daa
add
inc
fdivr
test
jne
loop
mov
dec
add
sub
or
ret
add
xor
jns
lds
or
hlt
xchg
push
scas
cmps
push
add
sbb
inc
enter
push
js
pop
stc
call
ret
test
les
pop
jae
or
and
sbb
arpl
xor
push
pusha
sbb
retf
pop
lds
mov
out
mov
icebp
mov
adc
pop
mov
daa
dec
push
je
lar
cmc
mov
(bad)
xchg
lods
fcomp
ret
mov
mov
pusha
ror
or
fiadd
xlat
cli
fidivr
je
call
cmp
jl
xor
sbb
cmp
inc
adc
mov
daa
call
dec
fdivr
sbb
dec
or
js
sub
(bad)
fadd
inc
add
push
pop
(bad)
mov
sbb
mov
mov
push
adc
push
lahf
ss
aam
mov
or
nop
cmp
jmp
lods
xchg
sub
sub
jge
adc
add
xor
fs
bound
mov
pop
ins
dec
out
adc
jecxz
mov
adc
mov
div
adc
aas
sub
dec
repz
ds
inc
fsubr
xor
fdivr
push
loopne
fiadd
sbb
and
mov
dec
inc
sti
pusha
adc
jmp
mov
xchg
push
xchg
add
adc
cmc
movs
push
xor
adc
pop
pop
cdq
sbb
fwait
add
pop
or
pop
xchg
sub
adc
or
jecxz
push
cmp
inc
jmp
aam
adc
push
mov
scas
jp
lods
dec
add
dec
mov
inc
jl
sar
jae
and
js
nop
sbb
jmp
adc
xchg
fcmovnb
or
inc
clc
test
cmp
loopne
adc
and
loopne
mov
xor
inc
dec
movs
mov
adc
mov
mov
mov
popf
repnz
fsubp
jae
dec
add
les
dec
add
out
call
xchg
sbb
add
mov
out
adc
and
inc
push
xchg
cmp
mov
aam
fild
jb
aam
or
(bad)
lock
adc
aam
retf
fsubr
shl
push
mov
jmp
mov
loop
mov
in
mov
(bad)
jmp
xor
mov
es
xchg
pop
pop
data16
daa
and
cmps
add
ficomp
fs
push
out
inc
ins
retf
popf
push
lock
xor
xor
in
lods
cmps
iret
add
ja
xlat
pop
movs
inc
jle
push
adc
(bad)
sbb
call
pop
or
add
jmp
jb
cld
add
dec
gs
pop
xor
sbb
jnp
push
outs
mov
lock
cdq
sub
pop
xor
or
daa
adc
rol
add
scas
stc
movlhps
imul
shl
jae
nop
dec
mov
mov
xchg
push
cld
inc
inc
ret
sbb
je
xor
adc
inc
sbb
out
adc
cmp
cmp
mov
mov
dec
rol
sbb
adc
mov
jle
cwde
inc
cmp
add
cli
xchg
jmp
outs
add
push
or
jge
sub
ins
pop
cmps
dec
sub
mov
dec
(bad)
movs
and
add
add
dec
in
inc
xor
sbb
or
repnz
mov
cmps
punpckhwd
push
call
and
dec
add
aam
cmp
xor
adc
jp
inc
aam
cmps
mov
jno
cmp
aad
je
shr
dec
add
jg
dec
mov
push
sbb
jbe
fstp
es
push
mov
sub
inc
stos
loope
and
(bad)
jb
fdiv
adc
sub
jmp
rol
loopne
add
cmps
jo
pop
or
pop
mov
(bad)
into
nop
je
inc
or
xchg
adc
dec
mov
in
xchg
cmp
inc
in
lahf
sbb
jmp
add
test
sub
sbb
inc
call
and
pop
cli
lods
mov
iret
or
sbb
pop
rol
jmp
sub
(bad)
jmp
xchg
aam
adc
dec
call
inc
or
push
jno
int3
test
adc
dec
movs
push
sub
test
mov
out
xor
js
mov
pop
xchg
shl
cmp
mov
not
inc
not
clc
adc
jmp
addr16
pushf
imul
xor
inc
mov
ins
sbb
xor
fnstenv
add
and
sbb
sub
mov
dec
inc
mov
fld
or
xchg
jp
sub
test
or
or
and
cmp
or
lods
mov
push
mov
xchg
push
mov
ins
or
dec
repz
cmps
in
or
fstp
push
fxch
pop
fxch
pushf
dec
jb
jle
inc
or
xor
adc
cmps
sbb
test
inc
jae
bnd
outs
or
je
adc
push
push
add
xor
push
js
(bad)
mov
leave
leave
or
ds
das
pop
sbb
fs
(bad)
and
in
es
jmp
pop
mov
xchg
or
bound
fbstp
jnp
sbb
push
jmp
pushf
sbb
imul
pop
push
nop
fwait
das
sahf
call
in
and
sbb
mov
or
add
dec
or
jmp
(bad)
aaa
mov
mov
pushf
test
dec
loope
cmp
pop
fwait
push
pop
jmp
cmp
or
loop
jp
test
cmps
xor
std
test
cmps
into
push
dec
int3
push
retf
jge
and
or
sahf
js
sub
inc
test
je
repz
push
or
and
xor
xor
mov
call
fcmovu
pop
enter
push
push
push
dec
pop
mov
cdq
in
repnz
adc
or
fs
mov
repnz
pop
pushf
xchg
pop
adc
(bad)
xor
in
push
mov
sub
(bad)
fild
cmp
jbe
dec
cmp
jge
test
jne
fchs
(bad)
pop
mov
test
push
test
mov
enter
fs
enter
(bad)
lock
je
sub
(bad)
xchg
push
adc
inc
fcmovnb
inc
test
cmp
(bad)
or
push
push
mov
sub
xor
push
sbb
or
add
or
or
sub
jmp
jo
sub
imul
mov
sub
or
sar
adc
enter
add
or
lock
mov
mov
ror
loopne
cs
dec
sub
push
dec
es
add
mov
jb
in
fs
push
and
jp
xchg
inc
repz
or
adc
inc
icebp
add
(bad)
cmp
push
or
sbb
nop
and
movs
nop
xchg
xchg
add
sub
loopne
mov
inc
or
xor
aad
or
pop
push
adc
mov
inc
pop
sbb
dec
jo
sub
cmp
add
test
or
stc
adc
add
fstp
out
dec
sub
into
mov
fs
fiadd
mov
cld
popa
mov
and
xor
push
pop
pop
rcr
xor
ds
cwde
adc
adc
mov
mov
retf
or
aad
aaa
mov
cwde
ror
inc
sar
sahf
pushf
aaa
and
repnz
mov
mov
hlt
xor
or
pop
je
adc
sbb
add
and
xchg
push
and
cmps
sub
lock
pop
sahf
lock
lock
or
add
movs
and
and
fld1
or
push
cmc
jle
in
imul
mov
mov
fsub
adc
xchg
rol
adc
inc
mov
xor
test
jo
jge
adc
adc
xor
and
add
push
hlt
imul
loop
lea
fsub
adc
shl
frstor
add
dec
ins
outs
inc
mov
jge
stc
and
loope
adc
xor
xchg
xchg
pop
fiadd
push
test
test
add
mov
push
or
out
das
gs
inc
jne
add
pop
xlat
rcl
mov
and
mov
and
add
dec
push
mov
ds
inc
(bad)
mov
pop
or
or
inc
std
sbb
jmp
lea
cmp
cmp
scas
mov
shl
cmps
leave
xchg
or
in
and
lock
repz
shl
adc
inc
loope
mov
inc
xor
aaa
ss
xchg
jne
sbb
and
xchg
ret
add
xchg
out
cld
call
lods
adc
push
mov
test
xchg
cli
stos
loopne
push
sub
push
pop
dec
sub
arpl
ret
pushf
js
call
xchg
push
in
(bad)
jo
mov
movs
ja
ss
xor
add
lods
dec
add
jecxz
xchg
dec
mov
mov
pop
jo
movs
lds
adc
es
pop
jo
mov
dec
lock
cmp
push
xchg
out
aas
adc
mov
cmp
retf
push
push
sbb
dec
loopne
adc
sbb
test
add
jnp
or
(bad)
les
push
xchg
mov
cmp
push
inc
iret
xchg
ret
ror
dec
add
sub
sbb
push
mov
sbb
loope
cwde
xor
xchg
dec
jmp
dec
ins
push
mov
repnz
or
sbb
adc
inc
or
or
add
sbb
call
push
icebp
push
inc
ss
pop
cmps
cmp
push
fldpi
and
stos
mov
jge
or
cld
aam
pop
adc
adc
data16
mov
scas
add
add
xchg
xchg
push
pop
test
cmp
push
push
dec
jmp
sbb
ret
das
xchg
mov
lea
repz
jp
rol
and
stc
add
popa
or
stc
rcr
inc
dec
dec
addr16
pusha
loope
dec
int3
mov
cmps
xchg
std
xchg
cld
jp
movs
movs
pop
jne
fwait
popf
(bad)
pop
ins
test
test
pop
fsubr
adc
and
fcmovne
rcr
add
push
xchg
mov
out
and
(bad)
and
xor
cwde
stos
push
outs
add
or
(bad)
rol
push
movs
fbstp
mov
inc
sub
inc
push
dec
cmps
into
(bad)
sti
add
es
sub
and
push
and
push
and
shr
pusha
push
femms
loop
sbb
dec
pop
or
pop
cmc
xchg
repz
inc
mov
inc
add
mov
clc
mov
daa
adc
or
push
arpl
cmp
cmp
and
lods
lods
pop
cmps
push
xor
pop
mov
sbb
addr16
sub
jo
push
shr
test
sbb
push
mov
sbb
sbb
ss
add
xor
movs
push
es
or
mov
ss
and
test
js
inc
mov
sub
nop
adc
retf
inc
test
inc
hlt
cmp
std
icebp
je
dec
sar
cwde
xchg
jmp
sti
mov
fsub
dec
popa
inc
mov
sub
dec
or
mov
out
and
cmp
add
adc
inc
or
jmp
pop
inc
rcr
call
and
scas
fisttp
inc
mov
call
cdq
adc
nop
pop
out
(bad)
dec
xor
cmp
pusha
ret
adc
jo
sub
sub
scas
call
rcr
pop
ins
adc
cmp
jo
cmp
dec
sbb
imul
jmp
jb
inc
pop
dec
int
aam
mov
scas
ja
adc
les
retf
jno
dec
enter
or
jno
add
and
stos
inc
movs
cdq
pop
lea
push
jne
mov
nop
or
add
fstp
add
cmp
pop
xchg
lock
pop
(bad)
mov
dec
and
imul
pusha
cmp
sbb
jne
jp
and
scas
pop
ins
or
loop
or
mov
not
enter
sbb
jne
add
js
or
add
mov
push
sbb
lea
ret
push
dec
add
push
dec
mov
jns
fbstp
cmp
and
push
ins
jns
and
mov
mov
jo
and
add
test
sub
ins
or
dec
stc
or
add
adc
jg
or
add
ds
dec
dec
inc
push
test
cli
ins
in
add
jg
pop
mov
adc
cdq
push
push
or
jo
fdiv
adc
jl
js
adc
pop
xor
push
lods
pushf
call
adc
xchg
sbb
outs
adc
test
dec
mov
jle
call
cmp
fimul
dec
aam
adc
test
mov
push
push
and
addr16
adc
sub
mov
ret
out
add
or
shl
addr16
mov
sbb
ins
je
sbb
dec
jp
and
xor
jne
cdq
cmp
cmc
jp
dec
arpl
add
push
shl
push
or
in
sub
xor
sub
add
pop
mov
push
mov
loopne
xor
pop
jmp
mov
dec
sbb
sbb
or
fsubr
test
test
xor
cmp
aad
adc
popa
cdq
add
fisttp
adc
je
and
test
lds
or
jb
sbb
cmp
pop
nop
cmp
fcomp
sar
jmp
mov
shl
mov
scas
or
xor
xchg
xchg
push
aad
push
inc
retf
nop
sti
jmp
xlat
loopne
jl
push
fmul
xor
nop
pop
les
pop
xchg
ss
cmp
repnz
mov
pop
mov
mov
xor
nop
dec
mov
mov
cmp
es
lods
xor
mov
or
pop
xor
addr16
cmp
fld
mov
adc
ja
lds
push
and
dec
fld
and
push
and
and
adc
xor
push
mov
test
mov
cmp
or
fstp
push
nop
div
pop
jne
mov
outs
fst
sub
mov
sbb
cwde
(bad)
mov
push
fiadd
mov
aam
cmp
and
mov
xchg
xchg
jo
or
jp
cmc
xchg
outs
movs
jb
ja
or
daa
push
lods
call
push
jb
add
and
inc
test
push
lahf
cmp
xor
xor
out
jle
jae
mov
xor
add
mov
push
mov
add
dec
lahf
sub
or
pusha
xor
sahf
xor
sub
cmps
dec
nop
xchg
mov
xchg
push
cmp
or
imul
nop
sub
adc
pop
inc
jg
jmp
xchg
and
add
in
ins
dec
sbb
sub
gs
lock
or
gs
push
add
retf
and
jl
stos
loope
sub
dec
or
and
ja
scas
cmp
mov
add
xor
and
adc
test
xchg
dec
dec
mov
retf
je
inc
(bad)
or
inc
aam
stos
setnp
jmp
lea
lock
sub
xor
jp
or
ror
pusha
mov
mov
push
mov
push
test
iret
jb
lea
push
cmp
push
pop
mov
ss
fild
push
(bad)
and
lds
or
sub
in
loope
add
push
sub
mov
mov
sub
xor
pop
imul
mov
std
(bad)
popf
ss
sub
adc
xor
push
pusha
clc
cmps
pop
cmp
mov
call
cmp
mov
inc
ret
or
dec
or
sbb
stos
mov
ror
and
ss
and
pop
adc
push
and
sbb
push
cmc
push
ucomiss
pop
sbb
dec
rcr
mov
(bad)
not
pop
inc
xchg
dec
(bad)
inc
adc
adc
pop
or
push
push
adc
es
(bad)
(bad)
jmp
or
or
push
cmc
(bad)
jmp
and
dec
pop
mov
ja
mov
jl
add
int3
sahf
inc
mov
add
lods
mov
inc
push
jns
rcl
adc
cmp
sar
outs
outs
aaa
add
mov
lock
pop
push
or
cmp
dec
or
push
sbb
push
je
and
movs
sub
dec
ret
fcompp
int
inc
mov
sub
sub
and
ins
das
or
int
dec
xchg
sub
cmp
cmp
mov
dec
xor
or
adc
dec
cmp
movs
in
aam
xchg
push
(bad)
xor
xchg
inc
sahf
adc
ins
aaa
add
dec
jnp
fstp
rcr
adc
pop
and
jmp
xchg
inc
cmp
in
and
jmp
mov
push
sbb
adc
adc
daa
and
xchg
xor
or
push
gs
popa
jne
rcl
jae
cmp
popf
cli
cmp
inc
adc
pop
js
or
popa
test
fisttp
nop
xor
rol
movs
or
or
(bad)
loope
jne
or
mov
add
sbb
dec
push
dec
jnp
shr
mov
sbb
adc
adc
mov
cmps
add
ins
inc
add
cld
mov
or
or
xor
or
sub
mov
add
xchg
push
es
(bad)
and
add
or
(bad)
sub
ret
inc
mov
adc
add
xor
sub
lds
addr16
add
fadd
lods
lds
sub
enter
aas
push
rcl
add
aad
push
ror
mov
sbb
mov
mov
aad
retf
push
inc
outs
add
or
stos
mov
jg
inc
hlt
jne
rsm
and
test
cmp
mov
(bad)
push
sbb
jns
jp
adc
or
add
imul
je
dec
or
jmp
inc
mov
movs
inc
xchg
push
pusha
lods
dec
(bad)
jl
push
pop
test
xor
je
dec
out
adc
dec
push
call
or
sbb
fild
out
(bad)
out
push
or
pop
push
or
je
ss
dec
stos
stos
retf
retf
cmp
test
push
push
scas
and
js
adc
loop
aaa
rcr
push
cmp
ror
sbb
into
jo
mov
ja
cmp
leave
add
and
loope
inc
fs
jno
popa
xor
mov
pushf
mov
xor
push
loope
in
fs
dec
test
pusha
add
dec
pop
xor
push
mov
xchg
and
mov
adc
neg
pop
outs
mov
push
movzx
mov
data16
add
(bad)
mov
arpl
push
mov
sub
por
sbb
lea
jp
jb
or
loope
pop
test
xor
rcr
aaa
and
je
or
dec
add
inc
(bad)
add
aad
inc
dec
jecxz
popa
popa
lock
ret
or
adc
cli
cmp
xor
mov
push
ret
stos
enter
and
cld
add
fld
sub
push
sub
push
xlat
mov
push
pop
add
add
inc
fld
les
mul
ret
adc
or
mov
or
mov
imul
outs
inc
add
or
arpl
test
mov
and
or
test
push
adc
ror
mov
push
add
dec
pusha
inc
and
stos
(bad)
test
fdiv
push
cli
sbb
sub
mov
xor
stos
fld
test
or
push
mov
xor
inc
mov
pop
dec
mov
sbb
push
in
pop
or
mov
cs
ins
sub
dec
adc
dec
mov
pushf
push
pop
xor
sbb
dec
ja
enter
in
push
sub
mov
fnsave
mov
sbb
xchg
popa
fucom
test
sbb
nop
and
(bad)
(bad)
inc
push
sbb
adc
or
jnp
add
adc
add
test
in
js
or
icebp
sub
jne
mov
cs
mov
mov
mov
cmc
mov
push
and
dec
rcl
or
push
xchg
rcr
shl
xor
lods
pop
jae
or
and
in
pop
sti
adc
xor
retf
adc
add
mov
mov
sub
js
cmp
jge
(bad)
sar
cwde
dec
outs
adc
mov
pusha
sub
sub
adc
and
fwait
dec
push
retf
cmp
xor
enter
hlt
ds
in
clc
pusha
mov
or
inc
nop
(bad)
cmp
je
adc
jno
sbb
push
xor
jne
xchg
cmp
scas
xchg
pop
dec
gs
sub
outs
or
add
jnp
pop
xchg
sub
mov
aad
add
push
adc
push
pop
clc
mov
xor
jle
outs
jmp
adc
pop
adc
sbb
push
icebp
addr16
unpckhps
jne
shr
stos
and
jmp
pop
or
and
xchg
add
aad
pop
inc
or
dec
mov
out
ficom
push
aas
add
jg
dec
adc
add
inc
sbb
lea
and
pushf
jge
arpl
ss
std
test
pusha
xor
pusha
add
and
pop
imul
imul
(bad)
shl
pop
int
es
inc
or
sahf
and
jbe
btc
movs
jae
ins
xchg
xchg
and
pop
and
in
scas
xor
xor
lods
dec
cli
inc
cld
push
mov
inc
add
mov
mov
jae
fld
nop
and
mov
shl
dec
or
inc
mov
mov
xchg
jo
ins
rol
adc
xchg
sbb
inc
mov
jp
sub
nop
cld
pop
push
addr16
je
jle
inc
jmp
pop
pop
test
sar
jns
or
mov
jmp
mov
pop
and
or
cmps
and
mov
imul
adc
hlt
neg
xchg
cmps
dec
add
adc
mov
(bad)
sbb
imul
pop
dec
clc
test
pop
adc
ss
das
sti
mov
jno
sbb
dec
mov
iret
iret
shr
(bad)
cdq
or
loopne
sub
mov
test
or
out
int3
enter
adc
or
pop
rol
inc
call
xor
test
xlat
push
adc
ret
dec
add
adc
shr
push
test
movs
out
inc
add
add
loope
mov
jmp
scas
(bad)
and
iret
jae
cmp
nop
sbb
loope
mul
movs
mov
retf
std
push
cmp
jge
add
sbb
cmp
loope
adc
jmp
cdq
adc
inc
(bad)
fnsave
push
or
js
sti
(bad)
fisubr
jle
mov
(bad)
imul
cmps
push
mov
push
sbb
mov
cmp
push
mov
pop
jbe
add
cdq
sar
call
cmp
adc
pop
add
and
add
adc
push
or
ins
add
xor
pop
mov
loope
mov
loop
(bad)
jle
inc
jmp
xor
jge
fstp
mov
sbb
ja
adc
ud2
test
sar
pop
mov
push
push
mov
enter
aaa
dec
pusha
mov
daa
ror
add
mov
movs
in
cmc
pop
inc
or
popa
loop
push
push
sub
adc
mov
loope
add
inc
outs
pusha
dec
pop
xor
loopne
sti
or
adc
lea
out
fdiv
call
dec
call
(bad)
push
sub
fldenv
and
fist
sbb
sbb
push
sub
jnp
ret
push
push
pop
lods
fadd
inc
jmp
push
dec
inc
dec
adc
mov
and
ds
mov
lods
imul
xor
int3
mov
xor
movs
inc
sbb
imul
fsubr
pop
xor
push
or
mov
loopne
out
inc
cmp
mov
loop
mov
push
sub
and
(bad)
push
inc
enter
sbb
add
adc
cmps
push
sbb
call
dec
jmp
mov
rsqrtps
iret
rcr
cli
xor
bnd
test
retf
inc
lock
adc
sbb
sub
nop
sbb
ficom
add
xor
inc
jnp
cmps
sub
retf
and
inc
add
daa
in
mov
jne
out
shl
imul
loopne
imul
add
aam
nop
retf
sahf
test
mov
sub
jne
dec
add
pop
imul
cmp
adc
jne
test
mov
or
das
add
xchg
mov
sbb
add
rol
(bad)
shl
jg
popa
jmp
mov
xchg
mov
(bad)
and
adc
add
sti
mov
gs
cwde
and
inc
ret
xor
add
ror
mov
xor
outs
enter
fisttp
dec
sub
iret
repz
pop
movs
fcom
xchg
test
scas
ja
jmp
lds
inc
test
nop
push
rol
xchg
mov
(bad)
dec
std
cld
fstp
jecxz
inc
adc
push
pop
inc
or
cmps
nop
call
xor
nop
push
or
cdq
ret
push
cmp
add
sar
jl
push
push
inc
inc
mov
mov
rcl
loopne
push
push
sub
push
mov
aam
data16
ds
jge
les
dec
cli
cmps
(bad)
pop
and
rcl
xchg
inc
jne
mov
adc
out
add
adc
ja
push
aam
or
inc
icebp
cmp
push
je
test
sub
inc
inc
aas
mov
arpl
lock
push
ins
jo
loope
pop
xchg
mov
pusha
jecxz
add
mov
add
mov
pop
jb
loope
cmp
rcl
movs
sbb
repnz
in
or
aam
cs
test
shl
(bad)
stc
push
push
movs
and
add
sbb
adc
inc
pop
dec
jmp
xchg
inc
push
sbb
mov
test
adc
out
int
or
aaa
mov
or
xchg
mov
xchg
pop
aad
mov
adc
dec
mov
inc
inc
mov
test
shl
data16
dec
mov
call
sub
add
jnp
scas
ret
dec
shl
cmp
push
outs
imul
adc
jecxz
add
mul
or
jno
and
imul
push
inc
jmp
(bad)
cdq
mov
xor
sub
adc
aam
pop
push
dec
mov
dec
xchg
push
sub
(bad)
retf
and
addr16
fs
popa
or
cmp
mov
or
push
mov
mov
xor
rcr
(bad)
daa
adc
mov
lds
ror
loopne
and
push
jo
push
lods
imul
lahf
dec
or
dec
mov
aas
(bad)
push
or
mov
loope
jno
test
xor
pop
add
lock
xor
rcl
ror
sbb
adc
xor
aaa
inc
std
sbb
cld
mov
sub
ins
inc
jb
inc
lock
es
adc
repnz
add
pop
mov
neg
sub
sbb
loopne
bound
and
int3
cs
not
les
pusha
adc
and
sbb
jne
push
shl
adc
fidiv
add
je
dec
and
ja
(bad)
movs
repnz
add
pusha
loopne
and
xor
popa
(bad)
fadd
arpl
dec
or
cmps
mov
inc
or
push
mov
fs
leave
jo
mul
(bad)
xchg
and
js
movs
repnz
js
and
in
ret
xchg
je
sbb
add
movs
dec
aad
scas
jl
nop
dec
push
inc
mov
fadd
mov
ins
dec
enter
nop
nop
in
and
rol
dec
xor
pop
jnp
ins
popf
xchg
xchg
and
fnstcw
out
pop
add
pop
jbe
push
add
repnz
sbb
push
(bad)
jge
dec
loop
ret
loop
push
mov
inc
and
pop
ret
push
in
imul
arpl
or
fsub
push
push
adc
dec
mov
rcl
mov
add
aaa
(bad)
mov
fmul
loope
call
sub
pop
pop
mov
jne
xor
mov
mov
or
mov
mov
mov
adc
dec
ror
(bad)
std
add
xchg
mov
or
ror
mov
add
lea
lock
mov
sub
xchg
mov
stc
pop
ja
shl
jg
add
daa
mov
or
es
jo
dec
int3
sbb
enter
jne
push
or
add
lods
jmp
push
and
add
mov
sbb
sti
jle
push
push
or
sbb
pushf
sub
adc
in
or
test
bound
jmp
push
(bad)
cwde
adc
inc
add
and
gs
pop
jmp
lods
cmp
mov
and
push
add
mov
je
mov
sbb
in
mov
in
or
loopne
add
adc
mov
rcl
cmp
cmp
and
pop
loop
aam
shl
jl
ror
xchg
in
add
ins
jo
add
mov
lock
sbb
or
in
and
fistp
cli
add
sbb
fld
ins
enter
leave
test
fdivr
in
lock
mov
fsub
xchg
scas
lea
loopne
in
stc
stc
pop
cs
lock
sub
pop
pop
pop
pop
xchg
xchg
push
mov
cmp
hlt
push
das
mov
fadd
sbb
fmul
out
fst
or
or
mov
outs
or
or
std
adc
fisub
and
and
adc
jb
adc
cmp
pop
or
sti
fld
fucomp
adc
pop
imul
out
loopne
cs
pusha
cmp
add
cmps
not
sub
dec
call
push
sbb
rcr
push
mov
inc
cwde
inc
repnz
ins
adc
push
test
pop
mov
or
push
scas
adc
or
mov
popf
retf
out
mov
pop
mov
fcomp
mov
hlt
add
or
mov
inc
or
add
retf
add
or
adc
dec
or
xchg
jo
gs
pop
push
dec
retf
xor
mov
jmp
or
pop
fimul
push
pop
pop
fst
and
sub
xor
xor
push
ds
adc
lods
fmul
ins
and
xor
mov
sub
mov
test
xchg
stos
rcr
ret
jns
inc
loopne
ret
and
jmp
cmps
dec
jne
sub
add
into
retf
add
mov
movs
jnp
adc
xchg
(bad)
cmp
cmps
mov
sbb
add
retf
call
ror
dec
mov
je
mov
mov
push
xchg
rcr
dec
inc
test
or
mov
cmp
push
clc
add
xor
push
adc
xor
in
pop
or
rcl
mov
in
xor
and
mov
adc
call
xlat
or
xchg
in
and
mov
lods
push
enter
sbb
fwait
adc
pop
(bad)
mov
add
pop
and
loope
xor
and
sub
pop
and
pop
dec
jecxz
ret
dec
or
cs
adc
fild
sbb
imul
cmp
bound
out
dec
add
neg
sbb
and
push
or
mov
cmp
mov
push
aam
xchg
cmp
cmp
retf
adc
xor
movs
mov
sbb
ficomp
mov
push
mov
jg
ret
or
pop
push
je
or
jb
test
dec
loope
xchg
mov
nop
and
mov
cmp
or
sahf
dec
mov
pop
mov
ror
sbb
push
lock
sahf
add
pop
push
push
rcl
add
xchg
cwde
mov
ret
lahf
sbb
inc
add
pop
mov
and
mov
pushf
jmp
xchg
xor
sub
nop
pop
xor
cmp
xchg
movs
inc
in
sbb
shr
mov
sub
pop
jne
shr
fistp
cmp
test
push
test
(bad)
int
ret
adc
lock
repnz
mov
in
or
imul
mov
not
addr16
adc
loopne
jmpw
mov
cwde
mov
sbb
imul
or
pop
mov
push
jge
les
fistp
push
or
out
or
adc
push
jbe
or
movs
add
push
(bad)
int
lea
add
inc
stc
out
add
or
sbb
pop
push
jnp
xor
das
add
leave
jo
mov
ror
mov
mov
and
add
push
push
jmp
mov
call
or
jp
mov
cwde
cwde
jo
mov
add
and
mov
pop
adc
push
mov
inc
(bad)
dec
dec
push
nop
loope
aas
cmps
inc
outs
js
xor
sub
cmp
mov
mov
test
mov
adc
cmp
out
call
pop
mov
mov
xor
xchg
cmp
cmps
mov
add
mov
push
neg
pop
mov
mov
adc
pop
or
xchg
mov
cmps
and
leave
sub
jns
inc
cmp
pop
leave
les
mov
and
jp
(bad)
and
(bad)
es
fadd
cmp
and
into
xchg
sub
outs
and
ins
out
dec
push
in
aaa
ins
and
or
ins
sub
xchg
and
and
mov
pop
mov
and
(bad)
cmp
cmp
dec
mov
pusha
jbe
or
push
jae
in
pop
dec
sub
mov
cwde
or
inc
lea
push
adc
pop
push
ror
or
repnz
call
xor
xchg
cmp
pop
shl
emms
pop
push
(bad)
mov
movs
xor
or
add
add
xchg
aad
cmp
dec
daa
int3
mov
mov
mov
dec
xor
adc
sub
test
or
pop
or
cmps
mov
cdq
pushw
adc
jb
jbe
cmp
stc
push
mov
and
pop
pop
out
fmul
adc
and
cmp
call
shl
mov
sub
jp
or
mov
jnp
loop
mov
sbb
out
iret
jl
and
mov
push
jmp
or
mov
lods
test
fadd
lods
pusha
xchg
inc
leave
xor
pushf
pop
pop
or
test
adc
xchg
mov
push
cld
inc
cmp
inc
lods
call
push
loope
mov
test
sbb
mov
shl
ret
daa
mov
push
adc
dec
add
loopne
pop
lods
test
imul
sbb
enter
rcr
xlat
sbb
dec
jmp
xchg
movs
inc
sub
push
pop
clc
ror
clc
or
je
stos
imul
jnp
or
pusha
cmp
adc
sub
int3
stos
cs
mov
mov
(bad)
sub
sub
nop
push
retf
pop
adc
sub
and
call
fadd
adc
dec
and
or
jnp
push
lock
(bad)
ds
leave
outs
loopne
push
jp
mov
push
push
in
mov
aam
xor
stos
cmp
mov
add
push
test
mov
movs
jg
push
scas
inc
pop
and
sub
int3
cmp
(bad)
aam
retf
std
push
mov
lods
or
pop
nop
call
les
adc
loopne
pop
retf
or
pusha
push
inc
mov
pusha
sub
adc
sar
mov
cdq
mov
cli
xchg
jb
enter
pusha
dec
iret
shl
(bad)
(bad)
(bad)
clc
dec
in
and
loopne
sbb
aas
and
mov
stos
push
xor
dec
daa
add
inc
xor
push
pushf
adc
jl
nop
push
loop
int
mov
push
jne
inc
dec
mov
add
push
and
add
jne
push
enter
and
test
adc
iret
xchg
xor
fld
rol
mov
ret
sbb
cmps
push
lea
les
inc
add
add
rol
dec
in
mov
(bad)
mov
add
int3
and
jne
jg
inc
test
push
aam
clc
xor
mov
xchg
push
mov
daa
inc
out
dec
and
movs
call
lods
xchg
xor
inc
xor
rcl
adc
push
mov
cs
retf
mov
mov
push
and
sub
(bad)
mov
es
push
and
xor
bound
movs
jo
inc
rcr
in
inc
pop
or
sbb
or
rcl
jmp
(bad)
cwde
sbb
cld
xchg
imul
test
xchg
call
jae
push
cli
inc
jmp
fld
shr
fld
out
sub
std
cs
adc
ficom
push
push
(bad)
out
aam
pop
push
leave
cmc
jl
fmulp
mov
les
sub
cs
lea
ins
stc
into
(bad)
cmp
clc
sbb
psubusb
or
test
test
push
push
and
js
loopne
ja
cdq
sub
mov
pop
pop
loop
jo
push
mov
ja
ret
test
inc
daa
or
push
(bad)
in
stos
cwde
out
or
add
mov
cmp
add
add
dec
add
aas
inc
mov
adc
push
adc
dec
mov
les
mov
sti
pop
lsl
add
mov
aas
rcr
cld
cmps
push
les
cmp
push
push
inc
je
cmp
mov
cmp
xchg
fst
cmp
fsub
iret
pop
rcl
fcmovnb
mov
mov
jmp
mov
mov
or
das
je
sbb
adc
dec
mov
ds
sbb
fwait
fs
mov
mov
lea
sub
push
lock
mov
xor
mov
fbstp
cwde
lds
mov
sti
ret
in
sub
cdq
mov
loope
and
push
ror
aaa
mov
jne
popf
cmp
js
sub
and
cmp
mov
mov
ret
leave
sub
push
dec
cmp
test
(bad)
sub
pop
jp
add
add
dec
dec
add
dec
or
loop
mov
sbb
add
dec
daa
fimul
out
and
test
pop
int
aam
cmc
and
and
jo
push
mov
sub
xor
popa
inc
or
pop
sbb
and
dec
jne
add
xor
mov
jo
add
pop
push
sahf
(bad)
pop
mov
mov
cmp
sar
cdq
fisub
mov
cmp
sbb
out
or
add
jns
or
fld1
ins
nop
sub
xor
pop
or
push
pusha
jg
lahf
push
test
jo
ja
mov
(bad)
(bad)
rol
xchg
cmp
mov
sbb
xchg
adc
cld
mov
jmp
add
xchg
mov
or
or
and
xor
jmp
xchg
dec
push
mov
dec
fimul
pop
cmp
sbb
in
and
and
mov
iret
and
adc
xor
xor
push
loopne
jno
pop
adc
scas
dec
adc
fbstp
pop
adc
in
add
(bad)
sahf
jle
dec
jmp
fldcw
stc
je
add
adc
mov
pop
adc
or
hlt
test
jl
pop
icebp
ins
push
add
add
mov
jp
pop
push
adc
xor
mov
jno
jmp
jnp
imul
ins
mov
add
lods
or
mov
aad
fistp
sbb
push
add
xchg
mov
add
mov
sbb
dec
and
movs
popf
imul
cmp
jl
imul
repz
pop
cmp
mov
dec
loopne
or
pop
and
dec
or
fs
pop
(bad)
push
jmp
dec
in
push
retf
ins
pushf
add
rol
jecxz
ins
je
mov
add
inc
je
aam
push
add
xor
in
jle
sub
jb
mov
push
add
sbb
cmp
xchg
add
in
pop
add
sub
jno
daa
add
dec
xchg
imul
div
loope
push
push
and
adc
jmp
or
push
dec
pop
or
inc
sbb
mov
out
in
mov
pop
push
or
mov
and
mov
ret
and
imul
pushf
mov
and
add
movs
xor
das
imul
add
jnp
xchg
xor
push
adc
push
iret
adc
inc
xchg
pop
add
cs
sti
lea
call
sub
sbb
xchg
in
hlt
push
xchg
mov
inc
push
test
sub
shr
pop
xor
and
sub
jmp
sub
mov
mov
inc
push
gs
in
test
jne
cmp
mov
ror
pop
push
inc
fs
es
cs
les
sbb
add
mov
(bad)
push
push
add
retf
cmp
lea
sbb
dec
push
and
sub
adc
xlat
sbb
ins
data16
mov
mov
test
jb
add
rol
leave
iret
or
loopne
xor
pop
out
inc
dec
add
add
lods
xchg
add
loopne
xchg
cmps
pop
fwait
dec
adc
mov
mov
sbb
fld1
cmp
mov
fcomp
cli
add
loope
and
dec
pop
pusha
or
push
push
rol
pop
test
sub
xchg
in
enter
xor
add
sbb
jne
pop
outs
mov
(bad)
dec
loopne
mov
mov
cmp
add
push
aam
adc
sbb
push
cli
ss
jb
and
adc
or
or
lea
sbb
loop
test
or
lahf
out
cs
push
pop
cmp
mov
cmp
pop
and
or
sub
test
pop
push
stos
and
fucomp
mov
aam
add
jnp
fisttp
std
ret
dec
xchg
nop
xchg
test
fcom
popf
inc
add
popf
dec
cmp
lods
jae
mov
xor
sub
fisttp
idiv
or
dec
xor
cmps
movs
and
xor
adc
fld
imul
mov
push
aas
push
stos
inc
outs
pusha
test
adc
add
adc
std
mov
xor
add
ss
scas
ds
or
cli
lea
or
retfw
imul
xor
in
or
jne
sub
xor
sbb
cld
and
push
add
or
out
imul
jecxz
shr
movs
test
sbb
push
add
test
xor
push
neg
bound
inc
loop
pop
mov
mov
pop
inc
jo
push
rcr
mov
cmp
ja
(bad)
(bad)
mov
pop
mov
nop
push
mov
inc
icebp
pop
not
push
xchg
ins
sbb
jmp
sahf
hlt
pop
push
pop
enter
and
cmp
mov
loopne
setl
sbb
test
push
sub
add
mov
sar
xchg
dec
adc
mov
test
push
pop
test
pop
sbb
push
add
cmp
mov
or
dec
inc
cmp
pop
mov
adc
inc
emms
movs
mov
and
push
cmps
popf
mov
sbb
xlat
adc
icebp
jmp
push
xchg
aaa
jns
pop
mov
movs
jge
xor
retf
jne
push
pop
lea
test
aas
adc
gs
or
push
mov
mov
stos
cmp
je
cwde
jns
mov
mov
sub
add
cdq
xchg
or
imul
inc
cs
sbb
dec
(bad)
shr
jmp
and
clc
mov
mov
pop
mov
mov
sbb
in
cmp
pop
jl
or
xor
add
psubusb
loopne
test
imul
add
jbe
outs
aad
and
std
xabort
(bad)
ins
lahf
add
cli
mov
je
aam
ror
mov
push
add
lock
ins
lea
rol
imul
inc
enter
sbb
push
inc
rcr
rol
test
or
mov
sbb
adc
add
shl
dec
jno
sub
adc
jno
(bad)
in
mov
stos
loopne
js
dec
inc
jp
jne
mov
inc
jmp
mov
dec
mov
nop
jns
sbb
ret
adc
outs
inc
jo
add
out
sub
jo
lods
inc
pop
adc
sbb
hlt
or
clc
sub
pop
xchg
sub
mov
test
add
jnp
rcl
out
cmp
icebp
scas
shr
sub
jle
pop
or
mov
test
lods
jecxz
mov
rol
call
jne
das
stos
and
cmp
pop
cmp
cdq
bound
xor
inc
dec
mov
ja
mov
sub
ins
and
cmp
or
jl
mov
and
dec
push
and
mov
aam
and
ins
push
push
test
and
or
fidiv
mov
std
call
aas
push
loop
inc
js
cmp
push
cmps
xchg
add
mov
js
dec
pop
sbb
xchg
mov
adc
call
xor
adc
into
sbb
inc
or
dec
iret
or
or
cmp
push
add
adc
das
dec
cmp
jle
and
popf
out
sti
push
in
out
in
call
or
mov
pop
jecxz
adc
inc
and
xchg
mov
clc
mov
xor
cmp
adc
not
cmp
jb
or
ja
dec
cmp
pop
dec
pop
dec
jns
push
xor
push
and
cmp
sub
sahf
dec
clc
ss
loopne
xchg
add
sub
cmp
jecxz
push
mov
cmp
jo
retf
add
and
jne
(bad)
adc
mov
jle
jo
sbb
add
pop
enter
pop
(bad)
push
jne
dec
pop
or
out
lea
fcom
loope
pop
scas
test
cmp
add
and
arpl
ins
sbb
add
adc
and
push
(bad)
aam
loope
mov
inc
mov
mov
jp
fcom
add
xchg
jne
mov
inc
or
lahf
adc
sbb
and
dec
inc
test
adc
fwait
and
xchg
fadd
xor
xor
test
pop
loopne
pop
lahf
mov
out
xor
jae
loope
aad
inc
jecxz
lods
cmp
adc
mov
xor
mov
pop
and
add
bound
inc
inc
ja
imul
push
retf
push
pop
ror
sti
in
ins
mov
pop
push
call
add
cmp
xor
jb
leave
ret
push
sub
clc
push
sbb
sahf
jns
adc
jmp
retf
imul
test
add
cwde
jmp
push
js
call
or
mov
cdq
jp
adc
jmp
fadd
jp
cwde
sar
loopne
xchg
dec
adc
sbb
xor
sbb
fstp
sbb
pop
mov
add
and
fldenv
mov
sbb
and
or
add
adc
xor
(bad)
add
and
stos
or
cmp
add
xor
repnz
ds
push
les
inc
es
shl
add
retf
cmp
sahf
mov
push
cmp
jo
xchg
mov
dec
sub
sub
pop
inc
xor
mov
aas
cmp
adc
call
mov
sbb
add
pop
or
jae
add
jne
mov
data16
fucomip
xor
(bad)
sub
dec
out
in
adc
mov
or
into
in
add
mov
mov
dec
jo
pop
dec
adc
cmp
and
fild
cmp
adc
push
pusha
mov
push
or
and
jmp
test
push
add
inc
adc
lea
dec
neg
or
jg
(bad)
ror
jge
mov
jo
cdq
mov
ror
mov
ds
add
dec
mov
fsub
test
dec
mov
and
cwde
rol
(bad)
ror
cmp
sub
loope
xchg
int3
cld
aas
ins
loopne
jle
cmp
jg
lea
mov
xor
push
addr16
ds
add
jo
cmps
or
mov
dec
and
cs
(bad)
pop
fmul
out
mov
cmp
jb
mov
dec
push
hlt
push
jo
fidiv
icebp
sbb
jg
xor
and
pop
adc
xor
inc
bnd
sub
shl
adc
or
pop
or
mov
scas
xor
or
adc
add
int3
shl
push
push
jg
add
loop
inc
(bad)
ror
sub
xchg
clc
popf
mov
bnd
mov
mov
fs
sub
out
mov
call
sbb
test
or
inc
pop
(bad)
sar
sar
scas
mov
cmps
ror
lock
inc
aas
xor
inc
add
sub
push
outs
cmp
aas
sub
rol
sub
stc
cmp
pop
jle
inc
push
mov
jmp
addr16
push
sub
fstp
sbb
call
inc
push
and
push
cmp
push
xor
dec
lods
(bad)
and
jle
int3
retf
mov
add
pop
push
adc
push
push
fdiv
sar
cli
sub
dec
lock
ss
or
iret
sub
or
and
loope
jl
leave
pop
cmp
loopne
and
jo
ins
xor
sub
dec
sub
ret
adc
lods
data16
sbb
pop
pop
shr
add
stc
push
xor
add
lods
test
add
lds
jns
jge
adc
cmp
sub
pusha
sub
push
inc
and
adc
adc
ror
int3
sub
mov
xchg
push
adc
ss
mov
inc
and
adc
jmp
out
push
dec
mov
or
mov
cmp
das
frstorw
mov
xor
inc
mov
sbb
in
jo
fld
sub
sbb
repnz
add
rcr
or
cmp
adc
inc
(bad)
or
jmp
pop
rcl
sub
pushf
inc
mov
dec
mov
out
fwait
ret
and
xchg
test
sbb
xor
test
adc
push
inc
jae
or
sahf
loope
mov
and
dec
sbb
jns
add
movs
adc
dec
push
or
push
adc
in
cmovle
shr
and
icebp
xor
js
rol
and
xchg
xor
lock
and
inc
pop
xor
add
sub
dec
xlat
mov
mov
dec
or
cwde
jmp
data16
ret
retf
in
cmp
xchg
pop
repz
sub
add
lea
rep
cmp
je
mov
mov
pop
inc
mov
dec
call
ss
push
push
push
push
xchg
ror
jecxz
ss
add
cli
push
pop
push
jg
(bad)
or
pop
sbb
retf
or
shl
mov
shr
mov
fadd
dec
lea
jne
lds
pop
or
icebp
dec
dec
adc
push
mov
leave
sub
adc
push
cwde
mov
push
xor
into
and
popa
jne
pusha
rcr
sbb
shl
jae
adc
mov
test
or
adc
inc
cmps
dec
push
add
dec
popf
xor
shl
push
inc
sub
inc
ss
or
inc
and
cmp
add
sbb
pop
mov
dec
fldcw
sbb
inc
jns
push
les
or
dec
(bad)
mov
test
add
sar
pop
and
sbb
sbb
push
out
sub
dec
or
dec
shl
mov
xor
mov
push
dec
cdq
or
push
adc
mov
cmp
cmps
cmp
jg
xchg
push
test
mov
call
inc
pop
push
fcom
rol
js
sbb
or
test
push
add
sbb
and
mov
inc
rol
inc
or
dec
dec
add
and
adc
sub
imul
mov
inc
and
arpl
movq
add
in
imul
fisubr
fsubr
inc
hlt
cwde
arpl
pop
test
inc
ficom
les
iret
(bad)
loopne
add
xchg
loopne
(bad)
mov
jo
out
test
or
mov
inc
ins
pusha
adc
ja
push
mov
lock
jp
lods
fdiv
loope
adc
pop
cdq
pop
mov
ret
push
sar
outs
dec
iretw
jnp
cmp
sar
mov
bound
and
jmp
orps
pop
jno
loope
test
dec
out
std
cs
cmp
in
pop
push
push
fsubr
mov
push
cmp
neg
mov
sbb
add
mov
push
sbb
sbb
addps
push
stos
dec
push
int
mov
pop
inc
pop
xchg
push
retf
cmps
jo
rcr
add
xchg
add
rol
arpl
into
sub
jmp
pop
add
mov
push
xor
pop
sbb
call
push
sbb
in
out
add
dec
push
xor
adc
xor
pop
arpl
add
or
mov
in
sbb
or
imul
loopne
ja
ja
adc
and
in
cmp
dec
jmp
xchg
pusha
xchg
fsubr
pop
add
imul
and
push
aaa
sbb
in
dec
call
call
into
sub
pop
test
retf
pop
cmp
sub
mov
hlt
pop
out
adc
das
push
dec
mov
pop
gs
mov
add
mov
pop
ret
fisubr
or
add
adc
inc
out
xor
cmp
ret
repnz
inc
dec
sahf
sub
and
mov
push
pop
aaa
push
pop
inc
add
js
jg
or
or
ds
jne
push
push
jbe
adc
adc
add
push
call
gs
cmp
xor
jmp
daa
pop
push
sub
int
leave
or
xor
adc
data16
jl
cmps
push
push
fsub
push
stos
xchg
jmp
ret
not
cmp
shl
sub
add
inc
adc
add
jmp
or
test
xchg
daa
push
test
lahf
test
inc
rcl
sub
sub
pusha
test
dec
rcl
popa
xor
ja
push
and
loope
xor
pop
pop
jb
out
inc
fld
push
sub
into
push
inc
mov
mov
retf
or
out
and
mov
pop
ins
call
dec
(bad)
int
or
push
add
dec
xlat
movs
fstp
(bad)
clc
mov
or
dec
or
and
fs
fdiv
fistp
inc
jns
or
das
xor
push
setns
pop
pop
or
jmp
aas
pop
mov
dec
js
dec
js
stos
sub
push
lea
mov
loope
push
xchg
ss
pop
and
test
or
jne
push
mov
mov
adc
adc
sub
adc
shl
or
cmp
test
adc
and
push
mov
xor
sbb
les
dec
push
dec
ins
jne
or
add
mov
outs
jg
add
push
mov
scas
add
pop
and
xor
sbb
test
mov
add
lods
xchg
mov
jb
in
sar
inc
cmp
clc
jl
push
and
into
jmp
iret
pop
pusha
inc
xchg
push
push
fstp
mov
call
xchg
mov
push
adc
jns
sbb
adc
outs
cmp
xor
mov
inc
or
adc
and
push
pop
mov
mov
pop
sbb
enter
icebp
pop
pop
lock
xor
mov
imul
je
mov
pop
sbb
add
cmp
xlat
fcmovbe
js
or
les
test
sbb
fs
fmul
xchg
(bad)
add
ffreep
sbb
or
or
ins
xchg
jle
inc
ss
xchg
jb
enter
mov
push
pop
movs
jae
add
jbe
xor
jmp
lods
test
ror
add
pop
or
dec
test
sbb
or
dec
or
cdq
push
push
or
fmul
lods
aam
fmul
fnstenv
push
enter
fsubr
loopne
out
jmp
mov
ret
(bad)
call
rol
js
jp
test
test
push
or
mov
add
jmp
dec
mov
xchg
mov
bound
inc
dec
cmp
dec
mov
mov
xchg
xchg
push
cdq
mov
ror
ror
loope
jne
rcl
jns
cmp
dec
scas
movs
mov
stos
jp
seto
movs
test
fs
cmps
in
sbb
cdq
lea
into
and
jne
xor
mov
sub
leave
movs
mov
jge
sysret
mov
mov
arpl
(bad)
or
mov
sub
or
jo
add
or
jl
or
icebp
addr16
call
test
pop
test
ret
pop
cwde
or
mov
into
cdq
cmp
and
aaa
dec
mov
pop
cmp
adc
adc
and
pop
xchg
inc
(bad)
(bad)
daa
and
sbb
xchg
lods
int
stos
xchg
mov
adc
inc
sti
mov
inc
or
iret
push
add
add
adc
add
push
fist
push
add
ins
call
movs
dec
or
inc
aaa
popa
ror
and
add
fsub
lods
inc
pop
cdq
test
mov
push
and
sub
and
mov
inc
or
rol
nop
shr
test
push
push
pop
icebp
xor
jno
neg
xchg
mov
mov
sbb
push
cli
push
cmp
fcmovbe
adc
retf
and
popa
jecxz
sbb
adc
sahf
and
lds
adc
and
pop
mov
push
jmp
inc
sub
xchg
sar
loope
loop
or
lods
mov
sahf
fadd
adc
push
adc
shr
jmp
repz
lea
add
ret
ficom
push
adc
nop
cmp
add
out
or
sbb
mov
dec
jae
cdq
test
dec
shr
cmc
pusha
rcr
je
(bad)
je
(bad)
pusha
pushf
mov
setge
xor
adc
dec
(bad)
xchg
and
jbe
jo
add
jmp
mov
lock
or
je
rcl
add
pop
inc
sbb
aaa
rcl
add
or
imul
ficom
out
push
push
loop
cmp
retf
add
nop
bound
sbb
enter
js
mov
lds
mov
movs
mov
push
shl
sub
push
xor
jae
cld
movs
ror
call
mov
cld
sub
jle
inc
sbb
add
sahf
jmp
dec
in
sbb
es
and
and
cmp
rcl
xchg
repz
lods
and
ficom
lods
sbb
jl
push
jl
jmp
xor
stos
shl
js
das
cmp
sbb
jp
jge
inc
mov
adc
sbb
gs
push
or
pop
cmps
pop
je
cmp
push
add
xor
lea
nop
adc
test
add
pop
cmp
hlt
adc
(bad)
pop
mov
or
add
add
add
jo
mov
sub
jmp
cmp
mov
sub
push
push
push
outs
aam
nop
sti
mov
inc
pop
mov
ins
daa
sbb
adc
bound
cmp
xor
or
pushf
push
add
and
outs
xchg
fcom
inc
aaa
and
pop
pop
mov
int
ja
cmp
dec
xchg
adc
fmul
aam
xchg
arpl
pusha
cmp
push
add
add
pop
add
jl
ret
xchg
popa
inc
ins
(bad)
push
(bad)
add
push
lds
aad
div
and
mov
ins
xchg
jne
dec
push
lea
arpl
jnp
imul
jno
ss
xor
inc
sbb
shr
sbb
movs
push
cmp
pop
invd
or
fsubr
sbb
mov
mov
add
mul
lds
sbb
ins
cmp
add
sub
test
jae
jbe
or
sub
or
out
inc
ret
xor
jle
inc
mov
adc
push
dec
cmova
xor
push
fld
sbb
adc
jmp
adc
ja
mov
xchg
ja
shl
inc
fmul
and
sub
mov
fimul
and
test
imul
popa
jne
call
adc
add
js
mov
dec
daa
add
pop
pop
daa
mov
xor
retf
mov
ins
sub
pop
xchg
add
fmul
je
mov
mov
test
stc
pop
stc
mov
mov
pop
mov
repz
and
aas
das
std
ss
cmp
add
inc
outs
cmp
daa
retf
mov
in
loope
ror
add
jecxz
xor
add
es
inc
sub
fidiv
mov
mov
jo
adc
test
aad
xchg
xchg
pusha
jb
not
push
aas
or
mov
mov
lock
fdiv
movs
pop
mov
loope
aam
fdivr
fcomp
inc
mov
ret
jns
not
cmp
daa
and
mov
and
mov
or
mov
dec
adc
jg
mov
push
iret
cmp
shl
addr16
xchg
popf
nop
mov
jl
mov
cmp
cmp
add
inc
ret
xrelease
imul
jge
mov
cmps
sub
inc
fmul
into
xor
mov
or
jmp
add
jne
ret
add
not
dec
jo
clc
adc
jno
(bad)
loop
addr16
pop
or
mov
push
lods
shl
adc
fs
and
xor
push
leave
or
fcom
push
sbb
xor
loope
push
ret
movs
rcl
(bad)
sbb
add
out
(bad)
sbb
ja
jecxz
int3
daa
ret
jl
shl
cwde
sbb
xchg
lea
push
scas
lock
jmp
and
or
and
popa
stos
mov
jo
leave
fstp
add
cmps
push
bound
js
xchg
(bad)
je
jmp
and
je
out
push
xchg
adc
iret
sbb
daa
and
inc
jl
push
sub
ins
stos
dec
mov
mov
dec
xor
addr16
mov
repnz
inc
jmp
aas
call
fimul
pop
(bad)
popa
push
stos
or
mov
pop
arpl
inc
push
cld
xchg
or
pop
and
sbb
mov
dec
cmps
push
aad
retf
ja
adc
add
push
push
cmp
push
jl
push
iret
cmp
and
inc
jg
pop
add
pop
mov
js
mov
mov
adc
jl
xor
add
pop
dec
add
test
mov
mov
xlat
retf
es
loopne
sub
jo
xor
cmp
inc
push
mov
retf
add
lea
push
retf
scas
push
push
jno
sbb
jl
pop
push
fiadd
mov
jmp
add
add
sub
adc
aaa
pop
mov
out
and
adc
mov
xor
popa
nop
sti
sbb
cmps
nop
inc
gs
stos
mov
arpl
add
idiv
test
and
scas
dec
dec
sbb
dec
and
mov
xor
dec
js
xor
lock
jae
mov
std
adc
pop
xchg
sub
je
cmp
cdq
aam
ds
xor
mov
cmp
push
jb
jg
jmp
daa
sub
adc
les
xchg
shl
mov
int3
add
pop
jl
imul
es
adc
sub
in
mov
pop
pop
les
pushf
dec
pop
adc
cmp
leave
je
test
adc
mov
jne
(bad)
clc
jl
cmp
push
out
dec
add
pop
xchg
add
outs
loope
and
add
adc
inc
xchg
fucomip
add
ret
push
and
cdq
lock
pop
and
xor
adc
fcom
mov
xchg
test
or
xor
add
lds
xchg
adc
inc
jno
cmp
inc
test
pop
push
or
arpl
push
retf
push
test
or
mov
dec
lds
mov
loopne
inc
aam
inc
stos
pop
mov
out
frstor
mov
and
inc
mov
inc
sub
ret
sbb
retf
xchg
inc
mov
add
jl
es
lahf
add
push
jne
std
push
jne
cmp
js
xor
les
jle
cmp
mov
fdiv
js
in
ret
jmp
arpl
shl
xor
frstpm(287
inc
nop
jg
dec
je
cmp
je
adc
rol
adc
in
test
rol
xchg
into
fs
das
xor
push
mov
pop
jp
jnp
mov
sbb
push
mov
inc
(bad)
(bad)
jnp
loope
gs
mov
mov
add
int
clc
cmp
loope
test
push
add
rcr
pusha
(bad)
scas
xlat
or
xchg
xchg
and
test
jb
and
xor
icebp
test
mov
or
adc
add
inc
adc
in
inc
add
mov
call
and
aad
inc
xchg
mov
out
and
pusha
fisttp
or
xchg
inc
xchg
dec
pop
push
add
ror
(bad)
rcl
loope
cs
pop
loope
mov
adc
out
sub
lock
(bad)
pop
push
pusha
add
add
test
pop
loope
inc
adc
or
or
repz
fld
and
loopne
add
sub
loopne
fist
sbb
xchg
and
clc
adc
push
cmp
xchg
(bad)
(bad)
push
add
ret
push
cmps
and
xchg
pusha
lods
cmp
shr
push
or
sbb
ins
adc
sar
dec
or
dec
xchg
mov
add
inc
mov
or
sbb
push
or
clc
mov
shl
or
icebp
inc
sbb
pop
rol
adc
fistp
xchg
test
xor
mov
adc
add
ret
neg
mov
add
xor
ror
setge
cdq
jmp
and
pmullw
sbb
lea
mov
adc
jg
mov
(bad)
jnp
or
mov
pop
fst
jp
addr16
mov
(bad)
xor
dec
movs
icebp
push
test
xchg
nop
retf
cld
fs
or
xchg
or
or
rol
dec
in
mov
dec
mov
rcl
je
imul
les
pusha
es
xchg
or
adc
or
es
cmp
in
mov
xchg
cmp
out
out
adc
add
out
outs
add
dec
cwde
call
mov
sbb
push
ret
fld
pop
inc
mov
dec
mov
fist
dec
inc
(bad)
mov
mov
dec
les
test
gs
cmp
adc
pop
std
repz
and
sbb
inc
xchg
sar
repz
fnstsw
mov
jbe
cmp
dec
jge
inc
call
sbb
icebp
pop
jge
lds
push
add
icebp
pusha
gs
inc
cmp
pop
nop
cmp
xchg
retf
popa
scas
int
add
xor
sbb
jge
lds
or
rcl
clc
mov
test
sti
mov
add
clc
retf
cmps
aam
dec
ss
mov
and
or
mov
adc
and
push
iret
push
imul
stos
add
mov
arpl
cmp
lahf
stc
inc
rol
mov
cmp
xor
pop
ror
pop
bound
es
mov
inc
add
or
jle
xor
add
pop
jp
mov
push
out
mov
push
ja
cmp
dec
sbb
je
and
out
clc
mov
loopne
sbb
or
mov
jnp
jmp
cdq
clc
xchg
ret
add
jl
jno
js
mov
mov
or
xchg
aad
test
rcl
pop
ss
xor
les
movs
aaa
scas
mov
jmp
cld
mov
call
inc
add
add
aas
shr
mov
sub
cmp
xchg
not
cmp
push
pop
mov
xlat
push
cmc
xor
jne
adc
mov
add
jp
popf
push
or
shl
mov
or
xor
jecxz
or
rcl
dec
mov
jp
or
xor
mov
adc
dec
mov
inc
mov
das
and
cs
ret
test
pop
and
inc
test
mov
ins
add
pop
jb
add
fisubr
jae
add
add
ja
dec
dec
jge
jg
adc
ins
fld
rcr
jg
sub
add
cld
push
add
sub
mov
cmp
aad
xchg
xchg
dec
out
inc
popa
mov
push
inc
xchg
outs
(bad)
xchg
jo
push
fst
mov
lahf
pop
pop
push
popa
sbb
lods
outs
sub
iret
sbb
inc
fsubr
pop
outs
aad
fdiv
xchg
pushf
iret
outs
movs
mov
sbb
sub
int3
inc
cmp
push
cmp
mov
push
add
sub
and
das
jbe
aam
dec
or
or
test
cli
mov
sub
cmp
clc
mov
and
(bad)
jl
mov
call
jbe
mov
xchg
push
adc
adc
jns
sub
popf
push
inc
adc
ret
mov
nop
sbb
add
xchg
add
retf
fidiv
pop
push
jnp
dec
or
lock
in
xchg
add
lock
ins
sbb
test
and
mov
mov
push
add
jp
fidiv
adc
mov
sub
jno
and
inc
xor
rcl
in
or
or
(bad)
xchg
push
mov
sub
call
cmps
inc
inc
pop
mov
fdecstp
push
jecxz
push
jo
adc
and
inc
ficom
test
adc
sub
add
dec
mov
fcom
xor
(bad)
and
sbb
sbb
fwait
loop
add
popa
inc
out
push
mov
or
ss
cmp
repnz
popw
or
push
mov
mov
mov
ss
cmp
add
jmp
sti
loopne
int3
mov
push
fcomp
jo
and
in
push
mov
cmps
cmp
add
cdq
xor
xchg
pusha
enter
add
push
jb
or
push
xchg
pushf
in
pop
adc
pop
aas
jne
dec
cs
or
cs
jo
cmp
lock
add
pop
(bad)
mov
mov
adc
cmp
sub
(bad)
sbb
or
and
mov
(bad)
lock
dec
cmps
jne
xchg
push
inc
sub
push
xchg
loope
sti
mov
aaa
daa
mov
push
sbb
adc
retf
and
adc
sbb
or
xor
repnz
adc
sti
push
dec
sub
pop
aaa
out
(bad)
jmp
aam
ss
push
xchg
enter
sub
jno
test
mov
movs
dec
sub
jg
into
dec
adc
xor
mov
lahf
push
push
xor
popf
mov
fwait
stos
add
pop
iret
fwait
or
nop
push
inc
xor
mov
cdq
cmp
sub
lods
sub
inc
mov
btr
inc
or
add
push
pop
and
push
je
jge
loopne
movs
mov
mov
sbb
pop
or
push
or
cs
(bad)
xlat
loopne
ss
jmp
retf
jbe
mov
jns
xor
sub
add
fldenv
sbb
daa
adc
xor
add
pmaxsw
xor
push
pusha
pop
pop
pop
or
adc
or
mov
imul
popa
mov
xor
add
test
mov
int3
rcl
jp
imul
and
add
adc
jo
daa
fdiv
mov
in
leave
retf
sub
jl
and
mov
xchg
cmps
push
mov
repz
add
add
dec
cmp
out
shr
dec
js
pop
pop
imul
push
mov
add
fdecstp
or
mov
or
lahf
ror
adc
add
xlat
adc
and
jbe
(bad)
cld
jmp
aas
inc
in
ss
sub
inc
imul
adc
xchg
mov
(bad)
and
je
icebp
adc
jmp
dec
sub
aaa
push
scas
fcmovu
pop
mov
mov
aam
adc
ds
fcmovnb
and
pop
int3
loopne
les
mov
rol
sub
add
lahf
lock
xor
(bad)
jp
mov
mov
out
sub
dec
add
lods
out
and
nop
leave
cld
push
sbb
cmp
js
call
push
sbb
iret
iret
mov
ror
pop
adc
les
lea
adc
rcr
adc
cmp
cmps
sbb
pop
or
dec
pop
mov
add
add
(bad)
out
test
jne
push
or
repz
pop
mov
sbb
scas
add
mov
sbb
or
xor
add
cmp
push
scas
je
xchg
and
push
push
jnp
add
arpl
inc
lock
jg
mov
movs
lods
popa
sub
pop
jo
dec
retf
mov
out
dec
or
rcl
or
int3
pop
fcomp
test
test
ror
mov
dec
sbb
call
in
xor
popf
inc
pop
nop
retf
leave
mov
adc
jmp
mov
dec
sbb
add
popf
push
push
out
jmp
push
xor
mov
out
test
or
and
jge
es
nop
and
sahf
add
ins
pop
fwait
ds
int
push
cwde
or
mov
pop
xchg
test
pop
mov
fs
push
scas
cmp
enter
dec
or
mov
and
loope
sbb
mov
adc
imul
sbb
add
jecxz
lods
call
test
les
shl
mov
or
xchg
add
push
mov
dec
cmp
jmp
mov
jnp
mov
xchg
or
push
sbb
and
and
sti
mov
int3
jg
add
and
in
dec
jmp
test
addr16
mov
movs
gs
mov
ja
pop
pop
or
in
nop
add
popa
push
sub
inc
push
cs
xor
lods
popa
inc
cmp
lods
or
movs
les
outs
cmp
(bad)
aam
push
lea
pop
daa
sbb
fwait
call
les
mov
enter
rol
sbb
leave
inc
movs
sub
xchg
sbb
bound
or
minps
cmp
xor
es
fimul
mov
dec
sub
pop
rcr
inc
xor
pop
mov
push
psrad
mov
movs
mov
sbb
dec
shr
cmps
adc
dec
mov
aaa
test
repz
pop
pop
in
xchg
aam
add
xchg
cmp
add
mov
test
sub
bound
jp
sti
cmps
and
pop
punpckhbw
movs
mov
cs
outs
adc
xor
nop
xor
fisttp
jmp
shl
ror
cli
xchg
cmp
nop
pushf
mov
sub
push
daa
imul
cmp
outs
mov
rcr
ins
pusha
loopne
cmps
dec
mov
fcom
leave
rcl
dec
shr
in
cwde
add
cmp
xor
mov
xchg
inc
test
out
rol
jne
mov
test
or
sub
sti
icebp
adc
dec
in
dec
mov
pusha
test
push
test
rcl
outs
or
das
adc
dec
movs
ret
fs
cdq
retf
in
rcr
xchg
xlat
mov
dec
fs
adc
mov
enter
cmp
(bad)
(bad)
xor
xor
xchg
rcr
out
retf
and
pop
sub
jmp
movs
lock
dec
jp
inc
mov
mov
mov
inc
iret
sbb
jne
je
es
fs
mov
add
cs
jbe
or
cmc
ret
push
out
loop
push
sub
jne
add
add
imul
enter
cmc
enter
push
cmp
xchg
fs
dec
inc
ret
in
or
xor
loope
stc
hlt
(bad)
push
dec
clc
dec
sub
lea
les
leave
sbb
jl
adc
push
loopne
push
pop
mov
imul
mov
cmp
jg
jmp
pop
retf
jle
ret
(bad)
xchg
push
rol
add
mov
adc
xor
push
test
or
movs
inc
or
push
retf
cs
idiv
dec
adc
push
cmc
add
les
(bad)
xchg
(bad)
retf
or
pop
cdq
inc
mov
mov
cmps
test
adc
xor
and
or
icebp
out
movs
pushfw
and
inc
dec
sbb
mov
push
pop
xor
add
pop
lods
and
jo
leave
sar
add
and
push
or
add
cdq
ror
fidiv
fidivr
pop
sub
mov
cmp
pusha
clc
test
repz
ja
loopne
not
jp
cli
mov
jg
push
adc
lds
loope
popa
pop
push
push
push
push
push
xlat
dec
inc
les
and
jmp
push
repz
push
mov
in
jo
cmp
pop
sbb
push
test
mov
or
js
daa
imul
or
ror
daa
mov
ja
fist
jne
(bad)
cmp
movs
push
dec
dec
inc
sti
adc
jp
push
xor
(bad)
(bad)
pop
out
ficomp
loope
hlt
test
or
or
push
sub
jno
and
cmp
dec
movs
jle
jbe
lods
adc
repnz
es
psrlq
push
inc
or
cld
clc
lea
xor
push
imul
jne
popa
imul
mov
adc
cmp
xchg
aad
pop
jbe
mov
ret
jmp
pusha
xchg
out
aad
add
cld
in
lock
sub
or
icebp
loop
mov
enter
jmp
push
mov
in
inc
movs
push
pushf
das
sahf
lock
cs
and
cmp
nop
push
push
ins
mov
add
push
mov
cmp
mov
movs
in
xchg
sbb
adc
cmps
add
mov
hlt
jge
jecxz
call
mov
mov
inc
and
vcvtps2pd
sbb
ret
xchg
rcl
mov
inc
or
mov
mov
dec
adc
or
jb
fs
ins
in
adc
mov
add
sbb
iret
test
movs
mov
mov
adc
mov
mov
neg
fisttp
xchg
mov
mov
aam
mov
(bad)
movs
adc
dec
push
sbb
popf
les
cmp
stc
mov
mov
mov
sbb
sbb
xchg
add
pop
cwde
cmp
mov
adc
cmp
stos
mov
dec
cmp
mov
pushf
inc
or
rcl
add
rcl
ficom
std
pop
or
retf
or
add
xor
push
push
adc
adc
xchg
dec
mov
or
xchg
test
or
adc
sbb
adc
push
pop
jne
out
xor
jmp
jmp
mov
inc
icebp
pop
fst
stos
inc
dec
add
in
mov
add
sbb
push
and
loop
jl
int3
fld1
xchg
rcr
sbb
mov
fnstenv
add
mov
xchg
fmul
aaa
adc
in
cmp
mov
or
or
and
pop
xor
sbb
stos
cmp
sub
stos
xor
outs
cld
inc
cmp
add
clc
fiadd
sub
cmovno
dec
dec
lock
mov
stos
loope
adc
(bad)
fs
sub
aam
push
(bad)
sub
add
cdq
mov
call
stos
adc
and
call
xchg
mov
and
add
jp
(bad)
iret
call
or
aas
sub
add
movs
hlt
aaa
ret
pop
call
mov
sbb
in
sub
imul
xchg
sbb
retf
jne
pop
inc
movs
push
xchg
dec
mov
cmps
inc
mov
xor
xchg
lods
push
or
xor
rol
stos
add
cmp
xor
or
(bad)
dec
movs
pop
xor
rol
mov
adc
dec
cli
and
sar
add
pop
cmps
push
ins
jecxz
fwait
jle
call
xchg
add
sbb
cwde
cmp
mov
imul
cmc
out
sbb
pusha
xchg
lods
aaa
repnz
popa
inc
mov
add
fidivr
push
xchg
xor
cmc
test
sbb
push
mov
cmp
scas
or
mov
shl
ror
bound
(bad)
call
std
mov
cmp
cmp
and
and
push
jl
jno
xor
mov
mov
int
push
jg
shr
inc
cmps
xchg
or
hlt
jb
(bad)
adc
dec
mov
call
popf
loopne
mov
ror
popa
jmp
fisttp
jle
jbe
inc
xor
adc
pop
rol
or
jle
in
pop
into
ss
ja
or
cmp
shl
sub
sub
push
scas
push
push
hlt
push
xchg
cmps
(bad)
call
pop
sub
sbb
sub
lea
jo
mov
pop
(bad)
test
fadd
rcl
pop
enter
add
xor
mov
and
clc
or
xor
jg
push
icebp
adc
xor
int3
and
pop
dec
push
add
jge
cwde
xchg
inc
sub
lods
test
push
test
dec
add
mov
in
xchg
dec
add
add
pop
xchg
in
jle
shl
add
adc
leave
test
pop
in
adc
pop
push
or
aas
mov
mov
daa
dec
(bad)
mov
add
loopne
inc
out
ss
pop
lods
pop
dec
push
mov
mov
xor
fdivr
into
(bad)
sub
aam
in
enter
mov
pop
jp
std
inc
ret
shl
xlat
scas
test
xor
sahf
adc
test
ja
(bad)
mov
jl
je
push
imul
sbb
mov
daa
movs
push
inc
mov
fild
mov
bound
inc
sbb
arpl
ror
mov
xor
(bad)
loop
es
inc
mov
cmc
std
jge
jmp
es
loopne
pop
imul
or
mov
imul
jge
push
jnp
or
shl
mov
dec
das
adc
iret
dec
xchg
add
out
adc
jmp
jle
pop
push
or
or
push
cmp
cdq
pop
or
or
enter
pushf
or
add
js
add
mov
cmp
and
retf
daa
xchg
mov
rol
cld
cmps
dec
inc
pop
push
cli
sbb
loope
popa
cmp
imul
std
xor
daa
xchg
daa
aam
add
pop
add
in
or
clc
or
add
mov
push
jmp
(bad)
or
shl
pushf
mov
xchg
movs
test
mov
imul
or
dec
aaa
mov
(bad)
retf
pop
cmp
mov
repnz
and
or
sbb
push
fstp
or
dec
aaa
sbb
or
retf
pusha
fs
jae
je
mov
test
lods
clc
addr16
sbb
mov
cmps
pop
call
shl
test
push
xlat
push
xlat
xchg
add
mov
ins
fidiv
or
enter
xchg
inc
mov
call
dec
not
cwde
sub
or
stc
enter
or
and
mov
jno
add
arpl
xor
test
or
cs
add
dec
or
or
or
je
jo
mov
and
mov
rol
inc
or
push
pop
cs
pushf
mov
push
or
xchg
and
pop
mov
in
rcl
add
imul
jmp
jl
push
mov
fucomip
fcom
jmp
add
aas
mov
push
inc
or
dec
pop
lock
mov
push
sahf
mov
ret
jge
fdiv
bound
clc
and
inc
or
ret
js
scas
mov
cmp
lar
xchg
mov
nop
test
icebp
xor
add
and
mov
dec
xor
push
fcomp
test
inc
sub
popa
cmp
stc
sbb
ss
sar
or
add
sub
cwde
xor
adc
pop
cmp
mov
mov
cmp
push
je
or
repnz
ret
cmp
jge
bnd
inc
mov
xchg
loop
mov
mov
pop
mov
push
call
sub
mov
les
stos
push
mov
pop
xor
fwait
sbb
shr
cmp
pop
dec
xchg
sbb
xchg
(bad)
dec
fist
int3
inc
pop
lods
push
xchg
ret
jo
or
rcl
movs
dec
sub
xor
(bad)
push
movs
push
std
add
add
enter
ror
sub
adc
mov
rcr
mov
or
out
push
push
mov
and
fistp
mov
xlat
sbb
or
dec
add
imul
push
mov
and
ret
es
mov
mov
dec
push
or
movs
xchg
dec
inc
cld
sbb
xchg
js
inc
add
lock
jbe
fdivr
adc
movs
mov
cdq
add
cmp
jb
dec
inc
pop
push
(bad)
(bad)
mov
mov
push
push
adc
mov
mov
add
pushf
adc
sub
sbb
jbe
hlt
pop
push
test
adc
add
sar
jge
or
lock
xchg
adc
ja
outs
repnz
lods
mov
push
leave
ret
cmp
sub
sbb
push
pop
jnp
inc
inc
and
pop
xchg
sub
cmp
inc
fst
jg
ror
test
je
ret
mov
pop
pop
jp
jmp
xchg
and
mov
or
sbb
aam
je
adc
add
iret
mov
and
sub
add
jne
mov
and
push
ret
and
(bad)
out
push
test
dec
sub
mov
call
rcl
hlt
sbb
out
fnstenv
push
or
test
icebp
mov
mov
dec
shl
test
mov
nop
je
cmp
adc
sbb
xchg
or
or
dec
push
push
or
mov
loop
fwait
jo
ins
add
repnz
(bad)
fwait
mov
add
add
sub
ins
je
sbb
push
call
cmp
(bad)
into
pop
mov
adc
pop
push
mov
xchg
lea
push
dec
mov
or
jp
mov
push
cmps
push
daa
pop
sbb
sbb
mov
inc
add
inc
cmps
inc
sub
jecxz
cmp
add
xor
jno
ins
xor
dec
hlt
in
pop
add
xchg
sbb
dec
and
bound
inc
or
pop
add
retf
add
cmp
and
call
out
xchg
pop
or
xchg
mov
pop
xchg
dec
(bad)
xchg
push
cwde
jmp
xor
rcr
mov
or
addr16
test
xor
dec
mov
je
push
mov
aaa
cmps
ret
lock
and
pop
mov
test
jbe
test
or
dec
lds
in
mov
mov
and
mov
xor
or
xchg
xor
test
push
jo
loope
mov
imul
dec
add
mov
xlat
jmp
push
push
rol
adc
imul
test
(bad)
fnstenv
xchg
fisttp
stc
cmp
mov
add
xchg
cmp
fadd
xchg
loopne
scas
and
dec
xchg
adc
or
and
mov
rcr
xchg
jnp
push
fincstp
std
sub
mov
push
loope
push
xchg
add
sub
or
repz
cmp
and
xor
jbe
push
scas
push
dec
inc
rcr
jae
mulps
movs
enter
ror
fwait
bound
jmp
bound
test
mov
add
scas
js
les
into
xchg
pushf
sub
xchg
dec
cmp
push
shl
add
cs
data16
xchg
stos
add
dec
and
inc
imul
add
adc
xchg
pusha
or
imul
aaa
pop
push
ret
cmp
enter
or
add
add
add
dec
pusha
xchg
mov
or
dec
aas
jne
xchg
pop
gs
or
sar
shufps
retf
stos
jne
sub
mov
xlat
mov
xchg
aam
aam
adc
in
retf
jne
push
fadd
mov
retf
les
loop
fs
cli
or
jmp
mov
enter
prefetch
jns
jmp
mov
clc
je
push
sub
and
lods
(bad)
aaa
or
mov
mov
outs
popf
xor
and
xchg
add
arpl
mov
cs
push
fst
mov
or
(bad)
repz
mov
adc
arpl
adc
mov
mov
inc
sbb
jmp
pusha
adc
sub
fbld
(bad)
and
push
pop
mov
inc
leave
add
push
xor
or
add
inc
jb
cwde
xor
ins
test
sahf
and
js
push
ret
pop
sub
adc
jbe
jp
popf
push
mov
ret
retf
or
icebp
cmp
pop
dec
xor
jmp
sub
test
adc
stc
nop
and
in
fldl2t
jmp
cwde
push
push
xchg
dec
mov
xchg
das
or
enter
sbb
and
outs
lea
ret
sbb
add
jnp
ficom
cwde
iret
nop
and
add
mov
add
(bad)
sbb
cmp
or
inc
cmp
add
add
test
add
xor
arpl
ror
jl
xor
add
mov
jne
xor
mov
cmp
xchg
sbb
call
pushf
mov
lahf
fld
push
add
fs
mov
add
ja
je
and
test
jo
mov
cmp
movs
cmp
scas
push
cmp
(bad)
sub
inc
cmp
mov
xor
add
cmp
ja
test
push
movs
popf
push
movs
stos
pop
into
push
mov
push
sar
jne
push
xor
fiadd
pop
cmp
sbb
add
push
or
cmp
ret
add
adc
test
aam
rcr
push
mov
xor
adc
icebp
and
push
lock
les
xchg
lock
mov
lock
push
push
or
shl
or
scas
shr
add
jp
push
or
mov
xor
xchg
inc
outs
push
sbb
sbb
sub
add
cld
and
push
imul
mov
dec
shl
loop
into
xor
xor
cmp
ficom
adc
xor
xor
mov
jmp
add
inc
xor
imul
or
sbb
js
sub
movs
imul
or
adc
lods
popf
mov
and
mov
pop
test
and
mov
je
add
mov
cwde
out
loope
call
or
sbb
les
bound
test
inc
ja
(bad)
and
adc
lds
sub
stc
sbb
(bad)
mov
sub
dec
inc
retf
shr
sbb
ret
(bad)
adc
ins
push
retf
aam
mov
push
and
sub
push
(bad)
xchg
pusha
xor
ja
cmp
mov
call
mov
lea
push
xchg
lods
arpl
and
cmp
dec
sbb
inc
pop
fld
add
je
mov
jle
sub
sbb
adc
fcomp
dec
iret
sbb
dec
and
push
or
ja
jo
fwait
mov
pop
push
mov
pop
push
or
jb
sub
jns
aam
inc
in
test
int3
out
jg
add
loope
test
or
call
dec
hlt
lods
mov
je
or
jmp
jl
cmovg
leave
xor
pop
sub
out
xchg
sbb
xchg
inc
je
push
popf
push
inc
cmc
pop
push
mov
pushf
xchg
in
jns
adc
jle
pop
xor
pop
enter
daa
push
sub
add
ins
sbb
shl
fcomp
push
lock
mov
imul
inc
push
adc
xor
and
push
mov
dec
ffree
pop
imul
add
fdiv
mov
pop
push
popa
and
loopne
add
cmp
add
add
sti
arpl
or
jae
fcmovb
imul
sub
or
xor
xchg
test
or
lea
repz
push
ret
jmp
xor
add
lock
mov
or
pop
pop
xchg
inc
sub
or
or
loope
fisttp
push
dec
sub
pushf
jle
fs
cld
inc
jecxz
and
mov
push
cmp
jp
lea
movs
dec
pop
and
or
dec
and
(bad)
sbb
xor
sbb
shl
add
adc
mov
add
mov
xchg
jb
or
xor
mov
sbb
push
rcr
pop
cmp
loope
fist
inc
(bad)
and
dec
sbb
rcr
push
fist
push
fisttp
(bad)
dec
mov
ins
stos
sbb
rol
popf
jbe
scas
and
daa
or
jp
rcl
dec
fistp
rcr
pop
xchg
enter
cmps
retf
inc
sbb
mov
movs
in
arpl
or
push
lea
ss
push
sub
xor
dec
loope
xor
dec
add
lods
push
cmp
push
retf
pop
fmul
les
nop
out
popa
cmp
enter
pusha
imul
push
sub
push
cs
out
shl
lock
sar
stc
ins
test
add
rcl
xor
out
fcomi
stos
push
mov
enter
pop
or
sbb
sahf
loopne
in
or
int3
je
dec
push
push
inc
sar
jnp
or
cmps
sbb
hlt
bt
outs
pop
add
mov
push
mov
jge
call
jo
fsubr
jb
pop
lock
jmp
pop
call
adc
adc
push
stc
pop
mov
pop
ror
mov
add
xchg
adc
xchg
in
pushf
mov
add
adc
movs
jl
cwde
rol
retf
das
cmp
adc
loopne
sub
and
add
pop
in
mov
jecxz
or
scas
dec
add
pop
sub
adc
jge
add
stos
jae
sbb
sbb
inc
inc
mov
jns
mov
cmp
stc
or
push
dec
sub
jl
jbe
xor
cmp
loope
stos
pop
adc
(bad)
inc
mov
arpl
jbe
fcom
xor
jmp
(bad)
and
dec
push
add
push
lahf
ret
mov
pusha
in
pop
jnp
xor
jle
cmp
add
push
sbb
adc
fimul
add
add
mov
ret
iret
leave
push
push
stos
in
jecxz
sub
sub
xor
sub
and
xchg
push
cmp
adc
xor
cmc
pusha
or
ins
push
outs
aad
mov
test
and
movs
call
adc
xlat
cmp
sub
xchg
push
fisub
xor
(bad)
lods
call
fiadd
xchg
add
jge
ins
retf
jge
ss
dec
add
mov
hlt
cmp
outs
pop
dec
test
fist
xor
ret
xchg
and
cmp
mov
sub
adc
xchg
mov
push
or
loope
fsubr
jmp
mov
mov
ss
adc
cmps
nop
pop
mov
pushf
sub
inc
mov
mov
pop
add
call
sub
xchg
jne
pop
adc
push
pop
pop
adc
mov
jg
jns
loop
loope
inc
inc
in
ret
cdq
lods
add
dec
imul
jmp
lfs
mov
jne
cmp
push
add
jmp
adc
pop
or
xchg
retf
sbb
in
inc
dec
add
and
add
dec
mov
dec
rol
xor
or
ror
and
cmp
mov
aas
jg
mov
and
pop
mov
loopne
mov
push
fwait
out
jnp
push
(bad)
loopne
fneni(8087
xor
add
mov
xor
enter
je
(bad)
shr
push
ja
popa
xchg
fiadd
out
adc
enter
and
inc
jp
push
inc
mov
push
xor
mov
add
pop
xor
push
push
mov
push
shr
fnstenv
pop
jmp
jne
lods
mov
cmp
imul
mov
push
or
ins
mov
fwait
adc
add
aad
xor
dec
adc
cs
retf
or
es
outs
push
popf
jb
inc
aaa
dec
pop
dec
xchg
push
pop
jp
lods
or
or
pop
es
pop
push
mov
dec
push
cmc
or
xchg
add
mov
cs
push
or
push
or
pop
scas
retf
in
mov
jae
or
or
js
pushf
fs
adc
mov
push
gs
mov
xor
push
lods
and
adc
arpl
push
push
add
movs
mov
les
retf
inc
js
sbb
mov
pop
out
add
add
dec
or
iret
je
imul
aas
and
jbe
call
out
imul
push
mov
adc
sub
or
out
outs
or
push
xor
push
shl
adc
push
push
jo
adc
aas
and
fist
dec
jecxz
or
sbb
adc
inc
dec
sub
push
lea
outs
xchg
jl
inc
or
mov
push
push
pop
stos
adc
sub
add
rcl
push
push
or
arpl
sar
aas
sbb
mov
nop
gs
call
shr
mov
mov
and
sar
sahf
int
les
movs
adc
jnp
adc
popa
pop
cmp
pop
retf
es
mov
(bad)
jl
or
cmp
mov
pop
(bad)
jp
sub
out
sub
popf
scas
pop
ret
push
call
nop
inc
adc
lods
and
shl
cmp
pop
jne
fld
and
inc
les
and
ret
div
push
push
jbe
jne
push
popa
lea
add
mov
pop
push
jo
sahf
jns
call
iret
adc
xor
adc
mov
or
xor
or
adc
xchg
out
rcr
push
ror
test
mov
ins
add
ss
push
xchg
test
rol
xchg
pop
or
or
or
inc
retf
xabort
lock
mov
pop
or
hlt
add
mov
push
mov
sub
pop
fs
ret
mov
fwait
add
ret
mov
adc
ds
pop
lods
les
shl
xor
xor
retf
call
add
js
sbb
cmp
jo
outs
cld
clc
jle
out
inc
cmp
inc
dec
add
sub
mov
mov
inc
iret
shl
fiadd
adc
idiv
mov
adc
add
xchg
xor
mov
shr
pusha
sbb
nop
push
setle
xchg
idiv
rol
dec
and
add
inc
mov
sub
xor
into
adc
ret
sahf
jne
push
test
enter
sub
(bad)
bnd
test
adc
mov
mov
jne
clc
fs
dec
aad
movs
mov
js
sub
push
xor
imul
fisub
xchg
sub
aas
cmp
jne
cs
ins
jl
xchg
sub
push
or
sbb
(bad)
outs
aad
jnp
and
mov
and
push
mov
add
mov
ret
mov
add
mov
xor
push
pop
mov
sub
(bad)
out
xchg
jmp
mov
fisttp
pop
mov
fst
mov
or
sub
or
or
pop
shl
add
dec
pop
and
cmps
xchg
and
je
pusha
add
jb
sub
inc
mov
dec
rcr
mov
or
push
mov
shl
les
sub
retf
and
popa
push
dec
lahf
cmp
and
mov
or
les
xor
mov
fwait
add
or
mov
(bad)
mov
mov
inc
(bad)
cmp
xchg
inc
adc
dec
push
lahf
sub
mov
or
mov
shr
jmp
add
out
and
loope
adc
pop
sbb
(bad)
or
fisttp
test
mov
in
out
mov
dec
mov
xor
out
jp
jecxz
xchg
adc
add
mov
cmps
jge
lahf
add
enter
jno
jg
inc
les
(bad)
out
test
mov
sub
jle
inc
xchg
imul
xor
aad
shl
pop
add
push
icebp
xchg
int3
and
loopne
mov
sub
inc
test
cdq
jno
and
imul
fnstenv
int3
stos
test
int3
int3
jb
dec
pop
push
ins
jbe
and
fcom
lods
call
dec
and
push
mov
xor
in
push
xor
scas
adc
inc
mov
jae
shl
popf
pop
(bad)
xchg
jo
jmp
rcl
cmp
mov
cmp
adc
push
jle
popa
mov
aam
jo
jns
push
add
dec
inc
inc
or
in
cmps
jmp
cmps
loopne
into
clc
into
or
test
mov
jo
adc
or
jno
lds
sub
rol
add
js
sbb
mov
adc
stos
jge
call
jge
add
dec
ret
and
lock
test
popa
cmp
bound
pusha
test
jp
ret
xchg
bound
iret
pop
cmps
add
ds
adc
mov
dec
jge
lods
(bad)
fdivr
lea
mov
sbb
sub
sub
les
imul
push
jne
sub
add
or
inc
xor
jne
xchg
sub
inc
jne
inc
xor
xor
retf
add
jp
inc
cmp
nop
popa
sub
lods
sub
loope
std
ds
pop
xchg
and
or
inc
pop
hlt
test
mov
add
movs
push
pusha
push
push
mov
sub
push
adc
and
and
pop
cld
cmp
jge
stc
sbb
cmp
sbb
sub
lock
hlt
pop
mov
nop
js
fadd
mov
fld
inc
sar
or
in
cmp
fisttp
and
xchg
add
mov
lea
mov
cmp
clc
test
or
dec
test
xor
(bad)
jecxz
adc
in
into
cmp
jle
xchg
(bad)
push
outs
clc
dec
daa
cmp
jle
mov
pushf
sahf
and
inc
lock
push
hlt
cmp
in
jne
cmp
scas
cdq
cmps
add
lea
dec
jmp
xor
push
mov
mov
adc
mov
cdq
fisub
je
adc
inc
or
mov
sbb
push
or
add
dec
jle
leave
add
add
inc
pop
add
mov
mov
cmp
jbe
and
and
inc
jne
in
xchg
cmp
xor
push
jo
call
aaa
push
clc
shl
add
mov
fcom
mov
or
les
pusha
push
jp
or
inc
mov
lods
mov
mov
push
(bad)
xchg
pushf
or
push
dec
cmp
cmp
inc
dec
test
(bad)
sbb
nop
mov
cmp
ins
inc
cmps
pcmpeqd
mov
lock
adc
pop
mov
rcr
in
clc
hlt
fxch
mov
add
mov
outs
sub
inc
test
cmp
loope
mov
cmp
je
gs
push
push
pop
ins
movs
jle
mov
jno
and
or
test
push
sub
cmp
int3
jl
mov
rcr
mov
aaa
lea
mov
(bad)
sbb
je
mov
js
push
ror
jae
loope
push
or
cdq
loopne
push
adc
outs
shl
sbb
mov
in
jmp
push
push
adc
clc
or
lea
add
xor
or
cmps
test
call
xchg
xchg
push
sub
test
sub
sbb
push
adc
dec
cwde
mov
mov
adc
mov
mov
and
xor
lods
cld
dec
push
ins
fs
and
pop
sbb
out
and
lahf
ror
pavgw
jecxz
pop
in
xor
adc
xor
cmp
xchg
lock
mov
sub
cmp
movs
sub
jbe
mov
je
push
in
and
es
push
push
das
not
inc
push
je
int
cmp
loope
pusha
add
dec
jno
and
xchg
push
sub
push
xchg
push
cmc
cmp
ret
jecxz
bound
add
pop
dec
jmp
sbb
mov
jo
lea
mov
or
das
or
sbb
cmp
icebp
in
jle
sbb
or
enter
out
lods
scas
inc
iret
clc
xchg
push
mov
sahf
clc
push
push
das
sbb
inc
jne
push
fimul
in
fsubr
push
or
and
test
pop
sbb
in
pop
push
push
mov
out
cmps
and
adc
pop
add
adc
test
mov
fsubr
and
inc
fs
cdq
mov
pop
adc
aaa
push
xor
push
mov
add
gs
cmp
in
sub
ficomp
push
dec
pop
ret
push
add
(bad)
hlt
loop
imul
inc
and
into
ds
xchg
je
add
mov
shl
fdivr
push
and
test
aaa
fdivr
mov
add
mov
mov
sub
jo
pop
into
push
mov
xor
cmp
sbb
jp
add
sbb
sbb
or
cmp
cmps
sahf
xor
cld
and
adc
adc
cli
scas
(bad)
or
push
xchg
jnp
add
sub
mov
jbe
xor
ror
mov
aaa
mov
cmps
fwait
mov
jo
and
lea
and
fdiv
xor
dec
lods
dec
int3
push
push
in
push
and
jl
div
test
mov
addr16
cmp
cli
je
cmp
cmp
jne
repz
add
and
push
movs
sub
or
test
mov
mov
jg
cdq
aas
dec
push
cmp
retf
fsubr
and
rol
(bad)
les
and
adc
mov
jne
je
sbb
imul
sub
gs
inc
mov
mov
cmps
movs
bound
int
add
and
pop
(bad)
push
fidiv
les
int3
push
les
lock
pop
pushf
icebp
lods
call
adc
push
dec
ins
cwde
cmp
loopne
pop
in
pop
adc
cmp
lea
inc
es
push
pusha
sub
xchg
scas
add
cmps
loope
sub
fstp
das
add
je
add
dec
inc
mov
adc
mov
call
jmp
inc
js
call
dec
fadd
mov
clc
daa
push
test
sub
adc
add
pop
in
jb
push
jae
or
pop
and
xor
adc
xor
jo
loope
loopne
aad
cmp
movs
fmul
mov
icebp
popa
mov
sbb
mov
jae
or
or
sub
pushf
rcr
rcl
retf
int3
cmp
imul
imul
loope
lds
adc
push
aam
popa
xchg
test
pop
lahf
fs
neg
call
movs
add
repz
adc
pop
adc
mov
add
loope
dec
cmps
push
popf
(bad)
pop
push
add
push
nop
pusha
(bad)
arpl
add
or
mov
xlat
imul
add
mov
ror
mov
into
and
and
pop
mov
sahf
mov
add
add
dec
mov
cwde
pop
xchg
ror
mov
cmp
jge
cs
and
dec
cmp
test
movs
into
and
cwde
pushw
lock
and
push
cmc
pop
pop
xor
inc
add
xchg
js
hlt
lea
adc
loope
js
and
not
mov
out
and
imul
push
and
xor
jmp
div
and
ins
jl
lea
sub
mov
adc
inc
call
mov
add
xor
cmps
mov
in
rcr
(bad)
adc
mov
mov
pop
or
gs
addr16
mov
jo
pusha
jecxz
in
sbb
ins
pop
jnp
sbb
dec
mov
ficom
jnp
pop
jno
nop
lods
ror
fnsave
mov
int3
mov
sub
fadd
or
fdiv
retf
rol
jle
mov
inc
ret
push
add
xor
and
cmp
dec
ja
ds
shl
adc
adc
fld
(bad)
(bad)
mov
test
add
mov
das
test
jle
cmp
push
(bad)
inc
test
adc
ins
inc
jle
shl
(bad)
sub
sbb
push
cmp
mov
fs
sub
mov
xor
sbb
popa
icebp
dec
movs
jne
adc
jecxz
sub
icebp
stc
adc
popa
fcmovu
jmp
or
addr16
in
or
movs
mov
in
loop
sub
sbb
jae
loopne
mov
push
rcr
into
loope
mov
add
les
mov
aaa
(bad)
jnp
push
out
adc
mov
mov
xchg
mov
ins
retf
shl
add
mov
out
in
dec
(bad)
(bad)
(bad)
inc
jb
ret
and
xchg
dec
pop
ss
inc
and
push
push
adc
fisttp
mov
mov
bound
inc
nop
retf
xor
mov
sub
in
jnp
fwait
mov
jne
jae
jmp
adc
add
rcr
sbb
(bad)
in
fsub
cmovns
(bad)
test
sbb
retf
movs
and
sub
sbb
sbb
lea
fsubr
loopne
or
adc
(bad)
sub
les
jne
jnp
xchg
nop
pop
mov
inc
shl
ins
repnz
pop
or
(bad)
mov
sbb
in
lea
cld
sub
in
aad
mov
add
mov
dec
mov
loopne
enter
inc
ja
setl
mov
push
inc
mov
ins
jmp
rol
sub
xor
test
rol
pop
add
dec
sti
mov
test
fmul
sbb
adc
test
dec
(bad)
les
push
ret
dec
cmps
inc
mov
or
cmp
push
mov
sbb
sub
pop
out
add
mov
test
dec
adc
push
add
ss
dec
add
(bad)
add
xlat
clc
add
movs
push
sub
cmp
cmp
sub
loope
icebp
pusha
or
dec
popa
add
fsub
add
cmp
shl
sbb
gs
cmp
jle
call
adc
sub
xchg
mov
sbb
stc
out
aaa
fsubr
or
in
cmp
fdiv
pop
jmp
rol
or
lock
dec
sbb
dec
add
jmp
(bad)
xor
jl
or
lea
xchg
mov
jb
shr
sbb
xchg
imul
mov
push
imul
mov
pop
pop
pop
add
div
fmul
and
lea
loop
or
ret
cmp
lock
or
dec
sbb
jno
repz
dec
pop
mov
pop
int
mov
inc
scas
aam
mov
push
in
mov
sbb
push
or
js
jmp
lahf
dec
rcr
jae
pop
sub
and
das
shl
and
dec
out
imul
push
cmp
lods
outs
push
pop
xchg
xchg
push
test
inc
or
adc
cmps
fsubr
adc
lock
ret
or
popa
xchg
inc
pop
das
add
push
ret
push
add
xchg
xchg
cmp
test
dec
dec
add
push
daa
cmp
add
pop
sub
push
ds
aam
fmul
xchg
fist
out
sub
sub
or
sub
jae
cmp
inc
jne
mov
add
test
mov
inc
add
dec
test
leave
loopne
in
fdiv
sbb
pop
clc
cmps
mov
stos
dec
movs
xchg
in
and
mov
xor
aam
test
xor
ficomp
mov
mov
mov
jl
push
cmps
add
jb
shr
enter
inc
and
inc
retf
and
aam
fdiv
pop
sbb
ret
stc
clc
test
xor
mov
mov
or
jno
mov
in
sbb
push
rdmsr
loop
movs
mov
test
lock
div
mov
add
xchg
je
sub
add
adc
adc
push
add
sub
pop
jb
jnp
pop
or
rcl
hlt
adc
mov
sub
dec
xchg
(bad)
or
pop
fstp
add
ins
enter
mov
add
adc
mov
mov
cmp
mov
loop
or
stos
adc
xchg
inc
mov
jge
je
pop
pushf
jmp
fst
jecxz
pop
fnstcw
lea
xchg
or
or
ins
sbb
xchg
das
push
adc
mov
or
or
xchg
pop
adc
pop
cmps
popa
mul
mov
mov
into
add
and
push
xchg
jo
adc
lea
dec
push
mov
loopne
cmps
movs
aaa
hlt
sub
push
leave
sar
push
shl
or
xchg
jmp
lea
inc
or
jno
push
add
popf
(bad)
lds
and
mov
mov
icebp
pop
mov
dec
ins
cli
or
push
pop
repnz
xor
dec
xor
jb
dec
cmp
cwde
lea
in
pop
mov
mov
jbe
enter
cmp
popf
xor
add
xor
cmc
xchg
out
push
imul
and
mov
pop
(bad)
pop
sub
repz
mov
mov
jecxz
std
jle
adc
or
shr
mov
ja
out
sub
pop
daa
sbb
lock
fimul
idiv
push
out
push
ret
ror
js
pop
jg
loop
hlt
and
dec
in
test
mov
inc
push
sub
push
and
xchg
les
rol
dec
cld
sbb
sahf
hlt
lock
xchg
outs
retf
loopne
and
sti
jp
or
xor
mov
sub
or
ins
xchg
mov
jo
cmp
mov
sbb
jmp
jl
(bad)
inc
jmp
xor
dec
sbb
or
ins
mov
push
rol
sub
xor
xor
retf
add
(bad)
and
or
enter
mov
and
es
pop
mov
xchg
out
fdivrp
mov
enter
sahf
test
loope
push
aaa
inc
shr
mov
jae
js
pop
pop
js
xor
scas
sub
push
aam
shr
dec
or
push
es
test
nop
push
sub
lods
leave
pop
lock
jae
sbb
js
xchg
inc
imul
loopne
xchg
ss
sub
sbb
or
mov
shl
shl
(bad)
shr
aam
nop
adc
push
sahf
fstp
xor
jmp
clc
test
mov
shl
adc
mov
and
adc
adc
cmp
push
and
mov
fdivr
fsubr
or
jno
add
mov
add
cmps
fs
sub
popa
movs
mov
retf
jne
sub
call
movs
ds
jmp
movs
fdiv
test
or
outs
adc
jle
push
aam
cmp
popf
cmp
sub
std
popa
pop
mov
sar
fnstcw
cwde
push
stos
sub
push
adc
dec
sub
mov
sub
loop
push
inc
mov
inc
adc
inc
imul
xchg
cmp
jne
xlat
inc
sti
out
ss
mov
xchg
iret
or
mov
lods
mov
cmp
aam
pusha
or
sub
stos
xor
jmp
cmp
jmp
add
xor
sbb
fisub
inc
aam
cwde
sbb
sar
adc
add
inc
sbb
add
sbb
rol
and
(bad)
les
pop
mov
out
int3
daa
adc
add
cs
lods
jp
jmp
gs
push
or
dec
inc
leave
je
rol
loopne
clc
xor
push
sahf
leave
cmp
xchg
cwde
test
sub
lock
or
push
div
pop
add
push
rol
cmp
cmps
xor
mov
rol
mov
xchg
adc
sbb
and
sub
daa
mov
test
jns
aas
push
test
je
test
outs
and
and
pop
mov
xor
imul
xchg
adc
lock
jno
cmc
or
cld
add
dec
out
jle
sbb
mov
lahf
mov
push
test
les
pop
sbb
ret
add
or
and
clc
jmp
ds
in
jmp
in
or
imul
and
sbb
and
(bad)
das
push
dec
push
add
repz
add
and
mov
and
fmul
ret
in
push
fadd
punpckhdq
data16
mov
ret
iret
sbb
pop
gs
cmp
movs
retf
push
mov
clc
retf
add
add
lods
(bad)
mov
mov
dec
mov
popa
add
pop
fldenv
pop
clc
into
fisttp
stc
push
cmp
cmp
je
test
movs
push
les
cwde
jae
adc
lods
retf
sar
test
test
adc
mov
jns
loope
rcr
dec
push
add
xor
sti
call
add
xor
pushf
mov
pusha
sub
push
aaa
in
sbb
lahf
inc
push
or
sbb
inc
mov
push
jb
jl
pop
add
push
xchg
popf
fcom
sub
in
cmps
xlat
fwait
dec
cmp
shr
ins
fs
imul
or
cmp
or
mov
cdq
push
xchg
or
pushf
mov
inc
outs
pusha
imul
adc
cmp
push
cs
pop
xchg
or
adc
mov
and
(bad)
add
jbe
movs
outs
pop
pop
xor
adc
and
dec
or
cdq
cdq
adc
mov
ror
int
push
rcl
and
mov
jle
inc
push
aad
mov
jl
or
or
mov
(bad)
mov
xlat
outs
adc
pop
lods
xchg
test
(bad)
sub
xchg
inc
ins
fisttp
fild
xor
adc
fmul
pop
or
adc
or
sub
xchg
mov
dec
push
xchg
clc
add
imul
sar
(bad)
sub
and
mov
or
das
xor
push
fmul
cmps
or
push
pop
adc
and
mov
addr16
cmc
adc
jge
xor
cmp
arpl
out
mov
jle
push
out
dec
add
mov
js
xor
and
test
push
push
add
mov
sub
jae
mov
jp
je
pop
or
adc
stos
add
jne
xor
mov
mov
add
jle
and
mov
ins
jne
add
sub
xchg
mov
jb
test
adc
push
push
jge
pop
dec
leave
jns
inc
pop
pop
adc
test
mov
sbb
mov
add
lods
dec
dec
lock
pop
mov
jno
ret
or
lods
mov
xor
pop
cmp
pusha
fldcw
or
mov
ja
or
je
not
push
jo
xchg
jbe
hlt
ret
iret
out
adc
adc
je
test
jecxz
xchg
mov
jb
jo
adc
ins
or
je
in
xor
je
pusha
ds
or
add
inc
fstp
xchg
fs
lahf
or
lea
pop
or
(bad)
cmp
push
repz
jne
mov
jle
mov
sbb
sbb
sti
repnz
loopne
jbe
and
xchg
mov
pop
mov
sub
or
push
add
sbb
ret
add
mov
push
pop
mov
aaa
scas
(bad)
rol
adc
arpl
mov
sbb
cdq
fcmovnbe
les
and
pop
cmp
ficomp
jge
adc
and
mov
int
push
hlt
lock
loopne
dec
push
cmp
add
pop
fimul
pop
dec
(bad)
sets
mov
mov
aad
fs
sbb
xchg
pop
clc
in
fwait
push
push
adc
call
out
into
push
add
pop
dec
bound
mov
and
or
sbb
mov
adc
mov
xchg
add
ret
pop
daa
outs
jecxz
dec
jnp
mov
inc
inc
xor
push
and
daa
jmp
jmp
sar
add
or
pushf
xchg
xchg
cmp
adc
loop
xchg
and
sub
leave
aaa
adc
mov
jmp
mov
xchg
add
pop
call
or
sub
xchg
sub
shl
jbe
cmp
dec
xor
sub
dec
mov
push
dec
mov
lahf
scas
and
loope
jecxz
mov
lods
pop
xchg
into
test
or
jo
jl
or
les
push
xchg
adc
push
aad
push
push
pop
movs
xor
jmp
imul
sbb
jl
js
loope
mov
sbb
push
enter
dec
jmp
movs
pop
ret
sahf
cmp
inc
ja
dec
jl
xor
and
inc
call
mov
je
pop
mov
ror
xchg
jmp
xor
pop
sar
adc
sbb
and
xchg
popf
clc
ds
mov
or
out
call
jmp
dec
add
loop
repnz
xor
pop
std
jae
cmp
or
mov
push
dec
(bad)
cdq
or
out
daa
sbb
je
or
push
and
push
(bad)
mov
mov
push
icebp
popa
push
int
stos
adc
pop
daa
ins
jbe
mov
xor
mov
loope
mov
adc
ja
jne
push
lea
xlat
mov
call
std
cld
enter
xlat
bnd
add
jb
test
loopne
test
sub
push
imul
adc
xor
xchg
ss
dec
pushf
sub
push
cmp
retf
lock
xchg
pop
push
inc
mov
adc
fsubr
push
inc
ror
mov
xchg
dec
pushf
and
cmps
or
add
adc
add
cld
mov
rcl
jl
add
xchg
add
sahf
dec
(bad)
clc
mov
jbe
or
(bad)
test
cmp
cdq
xor
inc
and
jmp
and
inc
and
pop
cmc
adc
inc
sbb
adc
inc
pusha
add
xchg
cmp
cmp
push
push
pop
rcr
pop
add
jbe
add
addr16
pop
sbb
cmp
fs
shl
jg
adc
sbb
shl
or
mov
adc
mov
popa
pusha
mov
mov
test
popa
xchg
pop
sub
cmp
xchg
movs
jne
sbb
and
stos
sub
push
mov
push
fmul
ins
adc
jnp
sbb
xchg
push
xor
popw
lods
in
test
iret
cmp
xor
xor
xchg
cli
das
outs
mov
add
std
cmp
mov
inc
mov
cld
push
mov
pop
push
call
jne
int3
bound
stos
imul
add
adc
sub
or
icebp
daa
pop
mov
push
jge
or
loopne
les
or
add
cmp
jno
cmps
cmp
dec
(bad)
add
xchg
sbb
dec
ins
fs
xchg
rcl
mov
push
jae
add
push
xchg
add
mov
das
fidivr
popa
int
pop
add
mov
es
ret
push
and
add
enter
hlt
mov
retf
test
ins
pop
call
ins
sbb
sbb
out
and
jmp
push
cmp
arpl
imul
movs
adc
sbb
popa
es
fdiv
or
enter
enter
movs
iret
call
cmp
test
fdiv
jo
adc
call
enter
inc
cmp
ds
enter
inc
or
pop
adc
xor
and
addr16
jae
adc
inc
je
xor
sbb
mov
and
sbb
daa
cmc
sub
push
imul
ret
retf
mov
push
int3
push
loopne
inc
mov
ds
aas
fsub
or
cwde
sbb
rcr
fst
hlt
int3
iret
push
pop
mov
inc
push
cmp
ret
add
addr16
and
sub
loopne
sbb
ret
add
das
add
pop
sub
sti
jmp
push
rol
push
ret
xchg
js
and
mov
add
shl
sahf
add
pop
dec
sbb
mov
push
xor
in
fmul
rcr
mov
push
ja
and
jae
pop
push
add
mov
inc
push
(bad)
in
lock
cmp
fdiv
dec
je
add
add
and
inc
xchg
jg
push
mov
dec
adc
scas
loopne
xchg
sbb
inc
mov
fwait
or
pushf
add
retf
adc
imul
ja
nop
push
sbb
dec
add
xor
sbb
clc
or
out
jo
das
add
add
or
sub
or
adc
pusha
pop
cmp
xor
jp
dec
mov
stc
cs
movs
mov
stc
cs
retf
enter
jecxz
xchg
retf
movs
sbb
loopne
call
das
sbb
jno
nop
fist
inc
or
mov
movs
or
cmp
aad
sub
cmps
add
xor
add
mov
xchg
xor
xor
lods
push
mov
out
fiadd
add
push
mov
loop
push
in
cmps
(bad)
sbb
in
and
pop
inc
movs
xchg
adc
push
(bad)
adc
jo
xlat
scas
mov
ins
or
fstp
mov
mov
aas
jnp
sbb
jb
push
lods
add
mov
add
adc
ret
repz
(bad)
je
inc
sub
xchg
mov
aad
out
push
adc
popa
adc
div
add
cmp
push
dec
std
adc
pop
adc
fwait
aam
mov
dec
je
pop
in
fs
or
mov
or
add
push
mov
inc
mov
loopne
shl
jnp
inc
xchg
push
and
mov
cli
adc
mov
mov
inc
in
adc
test
mov
mov
sbb
(bad)
adc
mov
inc
cmp
arpl
(bad)
bound
xchg
jo
(bad)
push
retf
(bad)
push
cmps
cmp
dec
cmp
mov
not
cmps
mov
leave
or
push
add
pushf
sbb
dec
pushf
or
nop
cwde
mov
lock
aaa
xchg
sbb
out
or
in
add
push
dec
test
fcom
xlat
lea
repnz
xchg
js
mov
or
sub
cmps
xchg
popf
fadd
push
push
mov
(bad)
and
pusha
add
cmps
cmp
jne
push
int3
dec
sub
add
(bad)
das
js
mov
mov
imul
cdq
add
rol
ins
test
mov
cmp
test
mov
mov
mov
inc
add
js
xor
enter
add
retf
jp
retf
data16
and
cmp
stos
inc
inc
push
mov
xchg
mov
idiv
imul
mov
xchg
mov
xor
add
xlat
adc
adc
pop
pop
and
sbb
mov
mov
pop
xchg
push
cmp
mov
xchg
rcr
data16
dec
ins
loop
stc
dec
mov
das
push
fiadd
push
xor
call
mov
jo
cmps
xchg
fs
jno
nop
and
or
add
add
push
pop
adc
jb
add
sbb
fdivr
pop
xor
push
sub
nop
jo
inc
sbb
sbb
xor
adc
inc
pop
xor
cli
xor
xchg
add
mov
inc
cmps
pop
xchg
cmovg
push
push
add
or
add
xchg
cld
inc
inc
or
daa
pop
push
je
or
sbb
pop
jb
ins
sbb
popa
mov
jne
inc
sbb
xor
sub
inc
loope
dec
jge
enter
sbb
js
ds
xchg
or
das
(bad)
jmp
sbb
xchg
lods
sbb
jmp
cmp
std
sbb
pop
sbb
cmp
je
cs
call
sahf
cmp
push
scas
mov
inc
in
cmp
lods
push
add
push
out
sahf
sub
or
pop
sbb
mov
adc
pop
add
scas
add
mov
sar
iret
and
pop
fcmovnb
ds
and
sbb
xor
aad
rcl
sub
sub
test
cmps
fxch
and
jle
xor
xor
sub
push
push
ins
push
sub
enter
fcmovnbe
clc
rol
push
test
mov
aas
mov
dec
add
cmp
mov
push
xor
sub
fnsave
push
pop
retf
or
xchg
data16
rcr
push
popa
nop
add
jns
pusha
or
mov
pop
imul
adc
enter
add
push
rol
sar
inc
imul
sub
jnp
or
imul
and
(bad)
jo
mov
mov
js
ret
nop
push
and
and
(bad)
in
jmp
retf
stc
iret
xor
(bad)
loopne
jae
sbb
cmps
adc
retf
or
retf
xchg
or
inc
jns
or
mov
xor
jno
jmp
or
mov
ins
pop
in
call
cmp
or
mov
mov
imul
shl
jne
jne
sub
mov
imul
inc
xor
push
les
stos
or
test
mov
mov
mov
add
xor
or
(bad)
setb
dec
call
shl
inc
push
inc
mov
ins
and
ins
fwait
sub
and
adc
xchg
push
fmul
xchg
cmp
jbe
dec
jmp
in
add
or
fdivr
sahf
call
adc
out
hlt
or
or
sbb
add
and
cmp
xor
cmp
es
jne
sub
popf
pop
sahf
cmp
or
out
sti
and
lahf
repz
cs
cmc
mov
fimul
adc
test
pop
or
mov
fnsave
pop
les
sub
test
xchg
iret
mov
mov
or
loop
fidiv
fisttp
or
imul
and
mov
jnp
out
adc
mov
popa
aas
movs
out
push
call
pushf
je
pop
popa
add
int
adc
inc
adc
cmp
sub
inc
mov
pop
cmp
dec
js
test
mov
mov
in
sub
lea
xor
lea
fst
xor
cmp
xlat
aad
pushf
and
sbb
(bad)
cmc
inc
test
dec
or
jge
out
in
lock
push
or
dec
fsubr
sbb
pop
jle
and
and
loopne
push
js
fsubr
stos
lods
jne
lock
and
push
aam
iret
push
int3
add
adc
xchg
mov
adc
fmul
fwait
push
int3
sbb
rcl
lahf
sub
jmp
push
jge
inc
pop
xor
and
enter
loope
sub
xor
fmul
add
xor
dec
js
lods
dec
inc
jge
or
adc
cmp
and
push
dec
(bad)
xlat
sahf
fcomp
add
sub
jmp
add
fimul
inc
nop
push
mov
xlat
mov
push
in
call
lods
lock
movs
lock
sub
push
mov
imul
cs
ss
jecxz
push
mov
test
cmp
pop
dec
or
sub
add
pop
call
imul
mov
adc
or
adc
sub
inc
sbb
add
imul
xchg
shr
lea
and
fmul
jge
jo
jge
rcr
(bad)
cwde
add
sub
jo
jno
jmp
add
mov
aaa
mov
call
xor
leave
inc
sbb
or
or
or
jl
ss
or
mov
push
mov
mov
inc
inc
xor
cmp
movs
cmp
cmp
std
call
inc
push
inc
loope
inc
sbb
rol
test
cmps
adc
pop
retf
add
adc
rcr
dec
lods
lods
outs
das
ins
pop
repnz
clc
xchg
mov
jno
mov
test
or
test
(bad)
(bad)
jle
pop
mov
cmp
ror
add
and
cwde
push
adc
and
dec
in
push
push
xchg
xor
(bad)
add
mov
outs
fisubr
std
xor
mov
je
pop
pop
push
adc
add
mov
dec
ins
and
mov
ret
push
push
xlat
ja
mov
cmp
cmps
xchg
sub
sub
or
adc
cmp
clc
adc
pushf
dec
or
pop
add
push
push
add
fs
data16
pop
ds
sbb
lahf
mov
jne
xor
ret
sar
xchg
fdivp
add
mov
add
inc
lods
gs
aas
inc
sub
pop
sub
pop
int3
sar
sub
add
mov
stos
cmps
nop
fcomp
fild
mov
adc
jo
sub
movs
and
loopne
inc
daa
mov
add
dec
daa
xor
push
or
into
or
push
or
cmp
adc
int
adc
leave
repnz
push
adc
and
dec
and
aam
xor
mov
xchg
xor
mov
adc
sub
in
sub
pop
xor
cmp
xor
cmc
sub
lahf
sbb
add
and
inc
aad
(bad)
movs
pop
push
rcl
push
movs
lea
inc
loopne
jb
jge
push
stos
push
in
js
lea
gs
sbb
adc
dec
sar
xchg
daa
loope
mov
add
pop
stc
inc
jl
add
or
lods
adc
xor
push
jno
das
xchg
jbe
sbb
movs
sbb
xor
xlat
mov
xchg
xor
xchg
inc
popf
(bad)
repz
popa
inc
dec
in
or
sbb
outs
in
add
aam
xlat
dec
xchg
add
pop
cmp
aas
push
add
jmp
xor
push
sbb
sbb
or
imul
and
out
mov
mov
xor
mov
arpl
mov
jecxz
enter
adc
mov
add
add
adc
and
mov
inc
and
and
rcl
fs
adc
cwde
mov
jns
adc
xor
cld
and
imul
jnp
mov
jmp
adc
test
pop
(bad)
in
pop
dec
pop
jne
lods
lods
or
mov
ins
movs
mov
outs
test
cmp
ja
xchg
cmp
and
mov
(bad)
hlt
ret
dec
pop
lock
rol
clc
or
push
adc
or
mov
and
add
mov
ret
fcom
cmp
dec
scas
add
jbe
rol
lahf
sbb
jbe
mov
rcr
or
adc
xlat
fsubr
and
das
xlat
rcl
lods
inc
icebp
pop
lea
add
and
dec
inc
clc
sbb
pop
jnp
stos
xchg
jo
movs
(bad)
aad
xor
pop
jo
das
call
xor
sbb
rcl
loop
maxps
push
xchg
jae
fdivrp
jne
mov
adc
push
lods
jmp
inc
add
inc
pop
data16
sbb
mov
imul
xor
mov
mov
js
outs
mov
cmp
icebp
jmp
std
xor
jno
call
and
icebp
or
loop
sub
xor
lods
cmp
outs
sti
dec
jp
push
mov
jp
pop
jmp
xchg
js
inc
or
mov
add
scas
dec
sub
enter
pop
test
add
in
adc
and
and
cmp
pop
(bad)
or
push
pop
mov
(bad)
sbb
xchg
ss
js
add
jno
mov
xchg
pusha
ins
dec
shl
mov
mov
sbb
push
dec
retf
int
ss
fstp
stos
imul
test
cmp
adc
and
mov
(bad)
pop
push
int
mov
(bad)
(bad)
and
mov
push
push
or
adc
xchg
movs
fsubr
or
inc
xchg
sub
lds
dec
sahf
int
push
mov
adc
xor
call
cmp
add
fstp
mov
aad
mov
mov
test
or
sbb
outs
add
push
mov
sub
stc
push
xchg
sub
outs
imul
xchg
out
push
xor
or
fist
mov
adc
pop
jecxz
cmp
mov
in
inc
xchg
add
out
(bad)
push
mov
push
icebp
addr16
call
ret
pop
je
adc
cmc
adc
pop
xchg
aam
imul
fild
rcr
xchg
mov
add
inc
cmp
ret
call
aad
or
icebp
sub
push
loop
mov
popa
ret
mov
(bad)
popa
mov
sbb
pop
inc
jl
lea
int3
clc
or
jecxz
mov
lea
nop
push
and
lahf
dec
js
mov
sbb
(bad)
jb
add
js
dec
mov
adc
js
enter
ins
jo
and
and
add
test
pop
pop
push
mov
je
mov
ds
adc
cmp
popa
ret
inc
xadd
rcr
inc
push
xor
adc
sbb
lods
push
mov
push
inc
fwait
push
add
ins
in
cwde
mov
xchg
cmp
xchg
or
dec
cwde
adc
xor
push
add
sbb
xor
add
in
ds
data16
mov
je
fs
inc
or
bound
ds
xor
adc
push
ja
imul
add
or
adc
lahf
jg
and
and
jne
(bad)
in
loopne
scas
adc
shl
adc
adc
dec
add
sbb
ss
cmps
lock
sub
movs
jnp
cmp
add
or
adc
mov
push
push
inc
push
mov
gs
add
or
cmp
adc
sub
add
push
and
lahf
xchg
ja
mov
add
adc
mov
rol
xchg
inc
push
lea
mov
std
popf
out
je
mov
shr
xor
rcr
in
mov
sbb
(bad)
jb
or
sbb
sub
inc
pavgb
(bad)
sub
xor
pop
xor
iret
call
mov
mov
xchg
pop
inc
and
and
cmp
fdiv
sti
ja
cwde
push
mov
jbe
or
sbb
cmp
adc
rcl
cmp
mov
mov
cld
xor
or
sbb
push
minps
mov
pop
add
dec
sub
call
sar
jg
dec
dec
ret
aaa
sbb
inc
or
inc
add
cvttps2pi
hlt
idiv
icebp
inc
jge
jne
test
je
push
or
and
mov
push
push
jle
pop
in
add
imul
dec
lds
sub
jp
xor
pop
xchg
and
daa
lock
jmp
mov
in
sub
add
(bad)
loop
sbb
rol
inc
dec
jg
cmp
cli
adc
and
or
and
push
mov
cmp
js
call
scas
shr
adc
call
leave
add
push
jmp
xchg
fs
aam
and
daa
ror
cwde
mov
xor
nop
adc
mov
call
cmp
xchg
or
out
mov
jne
push
or
add
dec
addr16
mov
pop
add
lods
shl
xor
sbb
inc
and
stos
pop
add
cmp
inc
sbb
sub
sbb
or
movs
cmp
add
add
jb
xchg
(bad)
fdivr
adc
or
cmps
mov
inc
mov
and
inc
hlt
jb
loopne
les
jecxz
add
enter
xor
dec
xor
xchg
(bad)
and
add
mov
scas
mov
dec
adc
fcomp
add
xchg
pusha
inc
add
sar
es
jg
or
gs
aas
xor
mov
sbb
jle
cmp
add
jbe
loopne
in
jge
mov
js
jge
sahf
push
push
cdq
push
rcr
sbb
sub
dec
push
adc
or
or
test
repz
lds
sbb
push
add
mov
fs
push
jg
sbb
cmp
je
pusha
mov
stos
dec
inc
or
jl
xor
mov
push
leave
add
or
inc
mov
jo
stos
repnz
inc
sub
cmp
dec
inc
mov
jg
popf
fwait
or
or
or
repz
xchg
movs
nop
or
mov
adc
add
dec
jmp
je
pop
out
inc
pop
(bad)
sti
jecxz
clc
lahf
sub
and
repz
ret
jmp
pop
pop
or
clc
xchg
or
push
inc
mov
mov
mov
inc
push
sti
sub
lods
ret
cmp
imul
adc
xor
in
shl
mov
imul
push
jmp
mov
push
rol
xor
fiadd
icebp
dec
xor
call
push
rcl
mov
inc
jns
test
(bad)
retf
cmp
sbb
or
lods
adc
add
push
mov
mov
mov
loope
jecxz
jnp
pop
fmulp
add
xor
rcr
(bad)
das
dec
test
push
pop
dec
retf
ds
retf
adc
push
pop
add
jmp
jbe
cmp
dec
pop
xor
xor
and
fdiv
movs
imul
outs
and
test
sub
inc
jo
adc
push
popa
cli
pop
inc
and
add
add
cdq
fadd
(bad)
fistp
into
test
ins
add
in
push
xor
shr
dec
sbb
imul
cmp
rol
mov
mov
adc
add
mov
mov
(bad)
inc
add
mov
add
adc
repnz
nop
push
outs
mov
cli
add
ss
ins
jno
aad
jge
sub
ja
nop
mov
jbe
cmp
or
mov
inc
dec
push
outs
pushf
cmp
dec
int3
xchg
cmp
out
and
pop
or
pusha
icebp
dec
lock
mov
dec
ror
add
dec
jmp
shl
dec
push
jne
data16
xchg
add
mov
mov
pop
scas
mov
pushf
inc
mov
enter
pop
sbb
mov
jne
xchg
pusha
iret
inc
jl
pop
mov
ins
sbb
push
shr
or
scas
sub
icebp
dec
call
sbb
or
pop
mov
jmp
ret
cmp
pop
add
inc
xor
in
test
rol
ficom
pop
adc
xchg
mov
xchg
xchg
aam
pop
push
cmp
push
or
cmp
cmp
cmp
jno
and
movs
daa
add
adc
xchg
and
add
and
push
in
pop
xchg
sbb
test
cmp
sbb
aas
mov
retf
or
sahf
shr
inc
jbe
mov
cdq
shr
add
add
fmul
adc
mov
mov
or
and
dec
or
pop
fnstenv
es
adc
xor
xor
jae
fmul
rcl
lock
mov
imul
(bad)
je
cmc
add
add
inc
push
pop
xor
sbb
inc
mov
fdivp
imul
xchg
push
dec
js
ror
jmp
fadd
ret
mov
lods
sub
push
push
push
adc
push
test
xchg
nop
mov
call
pop
lock
pop
push
mov
je
not
pop
add
jmp
xchg
mov
dec
dec
loop
xor
cmps
cmc
idiv
and
mov
fiadd
mov
sub
add
push
dec
add
add
pop
mov
enter
dec
enter
jecxz
and
cs
ss
sbb
sbb
or
push
push
xchg
dec
cld
sbb
int3
mov
in
adc
nop
ret
xor
xor
test
sbb
cmp
xchg
loope
cmp
or
sub
out
ret
hlt
lea
xchg
pop
xchg
adc
pop
add
xchg
sub
inc
shl
jae
arpl
je
(bad)
call
fstp
fidiv
mov
sbb
imul
mov
ins
aas
dec
adc
add
adc
mov
dec
inc
cmps
std
mov
xor
adc
(bad)
and
push
jge
imul
loop
cmp
xor
aaa
icebp
sbb
or
popf
inc
or
add
mov
fst
test
test
mov
cmp
pop
sbb
jl
cs
cmp
mov
and
xor
je
imul
gs
xchg
(bad)
pop
xor
rcl
ins
in
test
cmp
push
into
adc
xchg
sbb
aaa
bound
sahf
xor
add
jbe
sbb
xchg
xchg
sbb
add
es
cld
adc
inc
dec
cmp
lea
mov
mov
xor
inc
hlt
jg
jbe
inc
inc
js
rcl
pop
and
shl
sbb
sub
xchg
sub
fsubr
dec
gs
or
fisubr
popa
jo
mov
clc
pop
xor
mov
jle
inc
cdq
imul
test
nop
xchg
inc
adc
popf
mov
push
sbb
add
jns
mov
pop
sbb
push
xchg
and
iret
add
push
adc
adc
dec
cwde
shl
dec
pushf
push
mov
imul
ins
xchg
inc
gs
push
dec
sbb
sbb
fisub
loopne
shr
mov
fild
mov
dec
or
or
pop
cmp
imul
sub
imul
adc
ins
cmp
cmp
push
mov
dec
data16
gs
popa
or
rcr
retf
repz
cmp
ins
popf
inc
mov
and
push
xchg
sti
mov
mov
fnstcw
ins
mov
cli
mov
sub
jns
or
and
(bad)
pop
mov
push
fisttp
lahf
call
shl
aam
mov
add
cmovns
add
xor
jae
bound
xor
jnp
jmp
sbb
ror
sub
sub
xor
adc
mov
out
les
fist
daa
call
cmp
fwait
sub
icebp
out
sub
test
adc
das
sti
pop
bound
push
loopne
out
cmp
jge
adc
gs
adc
jbe
push
jae
nop
(bad)
sub
in
iret
loope
and
imul
mov
loope
push
push
daa
and
add
inc
push
jge
in
sbb
int
inc
mov
adc
out
nop
sub
jbe
ds
ss
add
or
mov
push
adc
push
les
mov
call
push
add
or
mov
and
mov
push
cld
and
mov
adc
dec
addr16
scas
cdq
inc
arpl
ret
aas
jb
mov
test
sbb
jns
xchg
mov
mov
and
add
test
or
sbb
mov
dec
and
nop
xchg
xchg
lock
mov
test
xchg
fiadd
adc
int3
or
push
leave
push
outs
mov
les
aaa
xor
jns
aas
jb
cmp
push
int
fisub
movups
mov
stc
jle
push
jmp
outs
pusha
pop
lea
movs
jg
mov
push
sbb
add
mov
dec
sub
push
mov
add
adc
push
and
dec
mov
add
mov
ret
mov
push
add
push
add
xchg
push
daa
add
ins
xor
jno
add
dec
add
dec
jne
and
rcl
(bad)
adc
mov
sbb
repz
add
sbb
sub
jae
into
repnz
dec
dec
jbe
jne
and
in
mov
jecxz
fdiv
cmp
popa
inc
or
dec
pop
add
out
addr16
sbb
mov
pop
clc
js
stos
push
daa
stos
inc
sahf
(bad)
mov
aad
cwde
nop
ins
mov
test
xchg
dec
jl
in
or
or
jb
push
les
adc
or
dec
fnstcw
add
pop
ret
push
adc
xchg
sub
sub
inc
mov
jno
in
push
and
shl
ds
cdq
push
push
daa
adc
jl
test
mov
jge
comiss
pushf
add
(bad)
mov
sub
jb
cwde
push
cmps
shl
adc
pop
pusha
jnp
fmul
sbb
add
ror
add
mov
inc
mov
cmp
adc
and
mov
xchg
mov
ret
add
out
push
and
inc
add
fcmovbe
sbb
or
(bad)
out
pushf
dec
cmp
add
dec
add
retf
inc
or
or
mov
fwait
adc
mov
pop
cwde
xor
push
sysret
dec
add
aas
add
jmp
dec
sub
inc
push
shl
add
fst
or
inc
cmp
jo
xor
mov
push
or
mov
inc
push
fwait
inc
add
push
lods
add
xor
inc
and
dec
and
lds
xor
icebp
cdq
sbb
adc
ret
or
inc
inc
mov
sub
push
add
into
jg
sub
mov
and
jmp
sbb
jo
sbb
(bad)
mov
or
pop
sbb
ss
pop
sbb
xchg
mov
add
pop
pop
ins
jl
popa
sahf
mov
mov
addr16
jmp
loop
mov
mov
ins
dec
clc
daa
sub
cmp
fs
push
pop
jmp
mov
add
push
xchg
push
es
fld
push
fild
lds
sbb
cld
or
mov
dec
and
scas
mov
adc
adc
dec
pusha
ja
mov
stos
sbb
push
js
sub
test
out
sub
push
iret
cmp
jle
(bad)
sub
xor
jge
sbb
push
xor
cld
and
xchg
mov
push
mov
popa
xchg
and
mov
or
hlt
sub
shl
stos
cmp
dec
dec
xlat
pop
cmp
fld
cli
bound
lahf
mov
jge
adc
cmp
fcom
dec
xor
push
ds
push
xor
and
cmp
adc
push
out
mov
xlat
adc
adc
xchg
leave
cmp
dec
sbb
call
push
push
or
sub
sub
jb
lds
mov
stos
popa
cmp
sub
outs
jle
inc
or
jp
ret
in
jb
jmp
movlps
mov
das
xor
adc
cwde
or
mov
mov
mov
inc
pop
pop
push
jge
in
mov
jbe
xchg
pusha
inc
xor
sbb
push
or
sbb
jne
dec
mov
inc
or
adc
sbb
cld
add
cli
pop
adc
fstp
jno
or
ret
push
push
sbb
popa
nop
push
arpl
dec
sar
pop
mov
je
push
ds
mov
push
and
push
add
retf
xor
inc
nop
sahf
and
enter
fwait
(bad)
adc
push
jle
sar
dec
sbb
jbe
cmc
mov
push
xchg
cld
scas
mov
test
mov
fistp
jp
(bad)
jne
or
enter
adc
nop
inc
push
push
ret
sub
mov
aas
cmp
popf
js
jmp
in
lea
or
xor
xor
fldcw
lods
adc
add
sub
inc
or
push
cld
xor
or
and
mov
sar
push
fst
hlt
xchg
mov
lea
push
rol
push
adc
ret
fidiv
adc
loope
adc
icebp
adc
pop
push
and
sub
pop
mov
pop
(bad)
push
dec
sub
jmp
sub
daa
sub
add
mov
shr
fadd
pop
ret
pop
outs
fwait
xchg
and
cdq
dec
xchg
push
test
inc
sahf
idiv
lods
cmp
push
or
ud0
add
cwde
js
loope
lds
pop
adc
jle
stc
rol
push
sbb
jno
(bad)
rcl
fmul
add
daa
shl
xor
sbb
jb
inc
sbb
push
pop
jbe
add
xchg
pop
adc
repnz
test
adc
sub
push
adc
mov
adc
push
cmp
sbb
int
push
fwait
sbb
push
imul
jle
add
mov
inc
mov
sub
dec
push
mov
rol
pop
push
xor
add
ins
and
mov
inc
jmp
mov
cmp
xchg
mov
push
mov
adc
cli
push
push
push
lsl
imul
inc
xor
xchg
xchg
dec
fs
jbe
mov
cmp
int3
and
ret
add
sub
push
pop
leave
mov
sub
sbb
sub
loopne
mov
inc
loope
inc
add
pop
pop
xchg
pushf
or
in
hlt
std
dec
inc
jbe
sbb
push
ret
xchg
jg
(bad)
je
jmp
adc
retf
dec
icebp
pop
adc
ins
add
jne
inc
int
sti
push
(bad)
ds
dec
and
sub
adc
xlat
mov
rcl
aad
call
adc
call
stos
adc
mov
push
jae
xchg
fimul
or
or
movs
add
xchg
add
push
aam
(bad)
xchg
mov
mov
sahf
mov
sub
push
sbb
jmp
add
dec
mov
addr16
ins
xor
xchg
add
push
xchg
push
and
adc
cmp
imul
popa
and
adc
dec
shl
rcl
sub
or
inc
loop
mov
jmp
loopne
cli
rcr
adc
sahf
mov
xor
adc
and
dec
out
rcr
xor
xor
xchg
push
fadd
bound
fwait
push
xor
push
sbb
adc
or
bound
ss
or
fiadd
cmp
add
add
or
pop
shl
sbb
push
sbb
or
shr
xlat
jne
sbb
ins
jg
or
sbb
pop
pop
dec
sub
sbb
imul
adc
cmp
out
and
push
repz
inc
jmp
sub
les
and
(bad)
jl
call
std
or
pop
inc
into
in
push
add
pop
in
xchg
ds
push
add
inc
xlat
add
jle
dec
rcl
call
push
push
enter
lahf
ret
inc
sub
stos
loopne
add
add
fdivr
inc
(bad)
lea
lods
ror
data16
xchg
xchg
mov
push
push
mov
sar
mov
sbb
add
icebp
or
push
pop
lock
jle
and
pop
push
cmp
or
sub
and
inc
cmp
pushf
xchg
dec
push
push
dec
sub
rol
cmp
sub
pop
add
sbb
xchg
repz
push
mov
mov
ins
stos
xor
sub
pop
sub
stos
pop
fsub
add
rcl
adc
push
cmps
inc
add
iret
sbb
adc
popf
sbb
scas
sbb
jmp
adc
into
dec
inc
push
in
sub
fs
sahf
and
test
rol
int
aas
dec
fisub
movs
mov
dec
add
mov
popf
mov
or
sti
adc
shl
leave
shl
(bad)
jecxz
call
scas
loopne
outs
sbb
pusha
fld
fbstp
inc
cmp
movs
fld
mov
adc
mov
and
fidivr
mov
jb
mov
test
ret
imul
xchg
mov
cdq
shr
sbb
fcom
xor
jecxz
cmp
mov
ret
fmulp
inc
dec
(bad)
shr
inc
pop
pop
ja
mov
adc
cmc
or
push
fisubr
xor
or
test
(bad)
xlat
or
test
xchg
je
test
jne
aad
xchg
or
mov
fistp
mov
sub
fcomi
add
and
or
push
iret
or
jo
shl
mov
ds
cmp
and
xor
cwde
leave
inc
ins
sbb
int
mov
inc
sub
sbb
call
sub
cmp
and
sub
inc
clc
mov
add
or
cmp
pop
push
adc
sbb
sub
jmp
mov
add
sar
push
je
cmp
push
addr16
or
cmp
shl
into
push
or
mov
dec
call
aaa
fsubrp
(bad)
nop
push
mov
xor
and
call
xchg
cmp
not
popa
push
pop
repnz
xor
pop
arpl
lea
inc
rol
enter
add
mov
jmp
test
mov
and
addr16
sbb
add
xchg
mov
jmp
and
or
mov
rol
ret
cmps
test
call
sub
add
or
adc
dec
jmp
lahf
ret
sub
addr16
jmp
xchg
(bad)
retf
or
std
xchg
jo
adc
jb
cmp
inc
push
cmp
push
sbb
mov
push
xor
jnp
sub
pusha
cs
sbb
and
movs
mov
mov
sbb
push
or
fnsave
data16
dec
outs
jmp
fadd
xor
in
mov
stc
pop
mov
shr
pop
or
pop
inc
and
add
cmp
adc
or
add
adc
jmp
in
pop
shr
cmp
lea
or
dec
test
add
or
or
lock
jl
(bad)
fnstcw
sub
sub
adc
push
(bad)
jmp
add
sbb
xchg
call
loopne
sub
lock
sub
cmp
xor
cli
clc
add
push
fmul
and
add
inc
nop
retf
call
add
mov
sbb
(bad)
sbb
imul
test
xchg
pop
mov
dec
cli
or
retf
adc
pop
or
push
dec
(bad)
rol
adc
movs
bound
test
fisttp
lea
jne
push
pop
inc
mov
imul
pop
push
bound
stc
add
popa
dec
cmp
sbb
pusha
(bad)
mov
into
sbb
xchg
pop
dec
xchg
push
sbb
add
or
ins
and
retf
sbb
or
ins
jne
or
dec
sub
mov
daa
ja
fsubr
fcom
push
push
js
cmp
data16
mov
gs
loope
add
adc
adc
and
addr16
dec
outs
dec
add
pop
add
mov
loopne
mov
mov
(bad)
fnsave
mov
ds
sub
pop
jmp
add
sbb
inc
inc
add
mov
mov
push
mov
test
xchg
add
xor
dec
and
push
repz
push
push
mov
and
sub
xor
xchg
push
icebp
lea
mov
sbb
mov
imul
mov
aam
in
add
mov
sbb
pop
adc
mov
pusha
jp
lods
not
cmp
or
pop
sbb
sbb
jecxz
shl
rol
mov
cmp
add
mov
pop
inc
xor
or
(bad)
mov
dec
ficom
out
xor
imul
imul
or
sbb
cld
xor
int3
push
dec
movs
or
pop
or
out
arpl
sub
cld
push
mov
scas
cmp
xor
and
dec
sti
call
mov
xor
and
adc
clc
push
ds
mov
sub
clc
or
and
xlat
push
sbb
mov
popf
ret
or
xchg
outs
fmul
stc
movs
(bad)
cwde
div
add
in
add
cmps
mov
sub
push
jbe
out
das
or
mov
dec
jb
das
cld
sub
popa
pop
adc
in
xchg
ror
js
rol
adc
push
or
push
outs
mov
lock
fld
or
or
add
add
sbb
test
xor
pop
retf
jnp
push
push
push
movs
push
test
inc
xor
push
movs
jge
jne
pop
je
sbb
sub
or
or
movs
sbb
fbstp
sbb
inc
jmp
sub
mov
push
inc
lea
gs
(bad)
jne
xchg
sbb
push
jne
mov
inc
and
add
aas
xor
mov
jnp
xchg
enter
push
add
mov
int
iret
add
lahf
test
adc
mov
sbb
push
fcmovbe
imul
mov
loopne
push
xchg
paddq
into
mov
arpl
xor
iret
xlat
push
ficom
outs
ins
and
mov
sub
cmp
sti
mov
test
cmps
(bad)
inc
pop
adc
mov
mov
mov
cmp
and
or
loopne
retf
mov
mov
mov
mov
push
imul
xor
fistp
pop
jl
cmps
xor
punpcklbw
or
add
cmp
lock
push
jne
lea
mov
lock
mov
push
in
add
js
or
jmp
mov
and
inc
js
push
sbb
sbb
or
or
and
mov
lock
push
movs
sbb
pop
xchg
xlat
aas
out
jne
in
and
jp
retf
xlat
jae
cmp
and
cmps
shl
add
lock
dec
push
xor
or
mov
and
shr
pop
movs
fldcw
dec
xchg
jecxz
mov
push
dec
push
sbb
push
popa
ins
add
and
arpl
adc
je
push
sbb
xor
inc
cmps
adc
pusha
xchg
jbe
adc
div
and
or
and
imul
mov
pop
gs
ins
outs
sbb
mov
je
mov
xchg
movs
xor
add
jnp
js
push
shl
retf
int3
xchg
mov
xchg
or
retf
xacquire
dec
pop
jp
mov
and
xor
jno
imul
ins
test
stos
jo
xchg
or
pop
mov
out
mov
stc
popf
and
dec
test
es
pop
cmps
cdq
or
xchg
xchg
push
sub
stos
aaa
jle
cmp
cmp
ficom
cmp
hlt
fwait
or
push
cmp
or
pop
mov
ror
mov
or
or
shl
iret
jmp
lock
pop
jp
jbe
scas
add
or
xchg
push
or
(bad)
es
clc
dec
jge
(bad)
adc
sub
and
mov
add
sbb
inc
mov
and
and
mov
and
xchg
loope
rcl
gs
mov
jecxz
sbb
std
and
popf
sar
mov
adc
and
mov
mov
js
ins
push
push
adc
and
(bad)
fnstsw
mov
pop
hlt
test
adc
jbe
fwait
adc
mov
sar
into
or
pop
arpl
lods
dec
and
sub
jae
int3
adc
or
int
call
or
lahf
out
xor
mov
fmul
cmp
pushf
xchg
adc
add
aaa
pop
cld
clc
loope
jno
mov
add
sbb
jne
push
push
(bad)
sbb
test
loope
sahf
xchg
add
mov
add
and
xor
and
adc
stos
repz
jne
lds
nop
movs
lds
cmp
das
xchg
adc
pop
and
adc
cmp
das
cmps
add
xor
and
in
sub
inc
xlat
inc
or
adc
jmp
jmp
jno
push
and
and
dec
test
test
sub
jmp
cmp
jl
push
out
mov
cmp
xchg
mov
cdq
mov
xchg
or
push
es
mov
or
aad
test
inc
and
xchg
mov
mov
cmp
arpl
imul
inc
mov
rcr
xor
add
movnti
inc
mov
push
enter
add
mov
mov
sub
fdivr
inc
mov
(bad)
jmp
fdiv
and
mov
shr
add
mov
icebp
add
cmp
ret
push
and
inc
nop
fiadd
leave
imul
leave
out
add
dec
pop
call
push
xchg
jo
cmp
mov
pop
inc
sbb
jge
pop
push
mov
and
xor
sbb
add
mov
bound
call
xchg
xchg
dec
mov
adc
sbb
or
xchg
push
ja
pushf
icebp
fs
cmp
les
pop
and
jg
daa
mov
out
stc
inc
jne
push
sbb
push
sbb
push
xor
and
je
adc
rol
xlat
add
in
add
sbb
cmps
sbb
or
xor
push
mov
je
call
xor
push
add
push
ja
loopne
or
and
fwait
adc
test
push
sub
imul
or
inc
pop
repnz
je
sbb
and
fisub
jne
mov
add
mov
sub
test
adc
fwait
mov
ins
push
inc
add
retf
sub
(bad)
cmp
push
jo
or
inc
mov
call
icebp
js
push
loopne
pushf
mov
xor
dec
sar
and
inc
je
sbb
movs
push
popa
sub
into
fstp
sbb
adc
(bad)
sub
movs
adc
or
and
arpl
addr16
adc
adc
push
xchg
mov
push
(bad)
cld
jecxz
loopne
inc
daa
mov
sbb
into
xchg
mov
xor
jo
enter
movs
imul
je
arpl
imul
in
dec
jmp
cld
pop
cs
jmp
test
or
nop
ds
and
stos
and
or
push
mov
(bad)
mov
pcmpgtd
or
inc
mov
ret
or
push
fcom
mov
jg
add
sbb
inc
(bad)
add
and
fld
in
xor
and
pop
jg
jge
stc
addr16
test
push
dec
pop
add
sti
das
xor
add
jmp
(bad)
or
cdq
mov
push
in
pop
and
sbb
add
sbb
adc
movs
cmp
imul
cwde
pushf
jne
ret
jb
mov
(bad)
and
push
daa
xlat
push
jb
xchg
sahf
and
sbb
lea
push
xchg
jnp
fstp
out
push
js
scas
ins
sub
(bad)
dec
sbb
loopne
cmp
push
aam
jno
popa
mov
call
jmp
fs
sbb
mov
mov
es
or
add
in
add
mov
fisub
adc
popa
arpl
or
out
sahf
lods
or
jno
push
jmp
adc
and
jmp
es
fisttp
clc
movs
fnsave
sub
add
arpl
mul
movs
and
and
inc
call
scas
dec
inc
icebp
rcl
mov
push
rol
mov
xor
cdq
push
mov
ror
xlat
xchg
js
add
jp
inc
cmp
ror
jne
add
or
test
nop
dec
mov
and
sbb
retf
xchg
out
cmp
push
test
dec
push
mov
adc
xchg
rol
push
jmp
sar
push
mov
pop
mov
pusha
jecxz
cmp
sbb
loop
mov
add
jp
push
mov
icebp
push
push
adc
inc
jp
push
xchg
call
std
dec
into
fsubp
lea
in
jb
pop
ret
pop
out
adc
or
pusha
and
or
popa
xor
sbb
push
mov
mov
aam
(bad)
push
fcmovnb
jge
adc
fdivr
pop
je
clc
and
pop
shr
mov
mov
push
hlt
mov
or
mov
push
cmc
lock
or
or
push
aaa
mov
sub
neg
push
inc
sbb
bndldx
jnp
ja
rol
or
mov
arpl
and
cmp
inc
loopne
or
and
bound
sbb
mov
pop
xchg
xchg
mov
jb
popa
(bad)
inc
or
dec
dec
xor
mov
inc
dec
loope
mov
movs
retf
mov
das
pusha
xchg
cmp
pusha
sbb
xor
and
jne
shr
jge
jmp
add
repz
pop
add
mov
cs
imul
xchg
cli
add
mov
(bad)
shl
call
inc
xchg
mov
jl
jmp
aas
rcr
add
enter
xchg
xor
or
fdiv
push
mov
or
imul
(bad)
mov
leave
xor
cmp
xor
cmp
dec
xor
(bad)
lds
and
neg
push
push
inc
imul
xor
fidivr
dec
jnp
imul
pop
sbb
sbb
push
adc
add
js
xchg
shr
jno
les
push
(bad)
xchg
xchg
push
(bad)
jecxz
or
inc
aaa
es
pushf
mov
push
pop
lods
adc
jno
adc
cmps
aaa
lods
cmova
jg
and
xor
in
ins
push
fcomp
cmp
xor
shr
xchg
clc
xor
inc
sub
and
xchg
jo
call
push
fsubr
or
and
test
and
pop
ss
sbb
and
xor
xor
adc
push
lea
stc
mov
sbb
and
ins
sub
xor
outs
imul
inc
sub
mov
jo
or
stc
hlt
push
sub
inc
or
xchg
movs
sbb
inc
aaa
jmp
sub
dec
fistp
add
sub
pop
sbb
aad
sub
mov
mov
sub
or
add
arpl
jnp
xor
sbb
ret
sub
addr16
mov
ret
dec
shl
push
sahf
push
scas
popa
push
push
hlt
hlt
stos
dec
push
sub
stc
inc
dec
dec
adc
or
inc
xchg
pop
or
outs
lods
sar
mov
xor
ret
loopne
and
leave
cmp
mov
mov
lods
shl
loope
or
or
dec
ins
daa
xor
(bad)
aad
push
scas
and
add
and
and
push
sub
sub
fist
cli
in
leave
inc
jmp
push
mov
dec
cmp
cdq
loop
sahf
bound
das
jnp
inc
(bad)
mov
fwait
aam
or
xchg
ss
jo
add
add
movs
sti
ss
outs
jg
leave
xchg
(bad)
add
ror
inc
js
or
fcomp
sbb
sbb
or
pop
sub
pop
dec
stos
push
stos
inc
enter
popf
dec
jge
aaa
and
xor
pushf
mov
pop
ror
sub
jmp
xor
sbb
mov
les
ror
ror
js
imul
xchg
aad
mov
cmc
outs
mov
imul
pop
xchg
test
xchg
push
and
jge
popa
add
ds
pop
loopne
cmp
and
push
and
std
and
cli
pusha
mov
sub
and
data16
sbb
cmp
jo
dec
fdiv
out
and
adc
sub
cmp
jo
sub
add
jae
fwait
pushf
lods
cmp
jne
test
pop
sbb
mov
movs
dec
mov
scas
inc
mov
add
outs
adc
add
sbb
loope
retf
and
fwait
jae
mov
pop
aam
es
dec
fldenv
push
in
push
sub
fadd
add
and
je
loopne
push
fidivr
jmp
cmp
lea
sbb
stc
xor
sbb
cmps
adc
pop
xchg
adc
into
dec
dec
imul
sbb
lods
adc
xchg
cwde
mov
pop
xchg
push
jmp
fldcw
ins
popa
fnstenv
xchg
ret
push
ror
xchg
xor
xor
stos
scas
dec
xchg
enter
sbb
mov
inc
jg
enter
arpl
or
hlt
mov
sub
mov
leave
dec
and
in
push
dec
xor
dec
popf
and
and
push
mov
cmp
imul
repz
test
fisub
popf
or
cmovge
pop
fbstp
push
pop
mov
cmps
or
ss
mov
enter
cmp
mov
push
lods
and
movs
fld
adc
dec
push
inc
push
push
in
out
sbb
cmp
lock
push
imul
sar
in
inc
push
cwde
and
jb
sbb
mov
push
enter
add
and
pop
je
mov
retf
adc
and
adc
add
push
add
push
or
and
inc
dec
dec
add
fisttp
and
pop
movs
cmp
pop
inc
loop
sub
pop
popf
test
ja
call
mov
adc
and
adc
mov
pusha
dec
mov
cwde
or
jl
add
ror
xchg
rcl
cmps
or
sub
mov
mov
(bad)
out
sub
je
and
popa
cmp
jecxz
push
mov
xlat
es
and
pop
pop
xchg
popa
popa
jl
jno
inc
xchg
inc
pop
sub
fidivr
jb
pop
mov
or
sbb
ret
retf
push
sbb
leave
mov
jecxz
inc
loope
cmp
mov
retf
mov
sub
outs
adc
adc
push
outs
movs
cmps
push
or
push
mov
mov
movs
or
jae
pop
adc
mov
sub
push
bound
std
mov
nop
cmp
mov
movs
sub
arpl
add
xor
je
cmp
pop
test
mov
jge
sbb
dec
stc
mov
push
xchg
pop
add
mov
cmp
loop
call
lock
pop
lock
imul
jns
gs
cmp
std
mov
push
ja
inc
clc
adc
les
mov
jae
xor
call
sub
and
sbb
jbe
pop
mov
jo
bound
xchg
es
dec
xchg
imul
pop
clc
push
pushf
scas
dec
lods
les
clc
mov
inc
int
je
outs
ja
in
and
cmp
not
sahf
imul
out
sar
inc
and
add
dec
jne
lock
mov
push
jmp
inc
test
shl
adc
dec
mov
xor
mov
rcl
pop
sbb
lods
or
adc
push
and
ds
mov
pop
adc
jb
aaa
xlat
and
sbb
(bad)
push
add
stos
inc
imul
mov
push
sbb
cmp
adc
add
push
mov
push
outs
mov
dec
adc
adc
mov
mov
sti
and
push
icebp
lea
inc
cld
xchg
in
fs
and
inc
pushf
and
mov
test
imul
sub
inc
jp
ja
add
pushf
out
jbe
nop
xchg
xor
jmp
inc
daa
mov
imul
leave
push
cmp
adc
pusha
fst
fbld
fisttp
add
jp
loopne
ins
in
dec
mov
test
dec
cwde
ins
test
push
pop
add
cmp
adc
mov
xchg
cmps
xor
neg
cwde
pushf
push
or
cmps
in
cdq
cwde
cwde
cwde
in
cmp
pushf
or
inc
cs
pushf
mov
pushf
pushf
or
xchg
or
sbb
and
les
dec
stos
hlt
sub
push
pop
and
movaps
cmp
push
loop
dec
cmp
je
sub
mov
add
sub
and
popf
rcr
inc
mov
adc
pushf
pushf
xchg
inc
enter
and
sbb
std
cwde
and
nop
sbb
cwde
sbb
add
lahf
pop
cmps
push
mov
xchg
stos
add
or
cmp
add
or
in
add
push
push
mov
and
add
or
or
test
repnz
xchg
xchg
adc
mov
outs
nop
add
nop
and
movs
jno
loope
cmps
aas
ins
je
pop
mov
add
add
sub
push
jo
mov
dec
push
push
jp
xor
dec
sub
adc
sbb
repnz
or
xchg
mov
pop
cmp
jmp
sub
jecxz
icebp
lahf
in
push
sub
test
adc
ret
iret
adc
jns
add
jmp
adc
or
sub
leave
lock
inc
push
xor
dec
in
je
inc
pop
or
icebp
jb
or
push
xchg
push
sahf
dec
add
push
inc
push
lea
ret
paddsb
loope
mov
or
or
add
sub
inc
loope
fwait
xchg
pop
mov
cwde
inc
jmp
aad
inc
push
mov
adc
adc
cmp
pop
or
cmp
mov
push
and
dec
push
into
add
xchg
jo
sbb
stos
out
retf
xchg
std
(bad)
test
xor
adc
fmul
mov
(bad)
aaa
push
xor
add
mov
je
pusha
xchg
rcl
xchg
gs
popa
add
dec
loopne
js
and
sub
mov
loope
xchg
data16
dec
add
mov
adc
inc
je
add
call
mov
sbb
adc
dec
loope
mov
ror
cmp
in
cmp
pop
pop
lods
stc
cmp
stc
sbb
stc
adc
dec
add
or
gs
add
cmp
popf
mov
xchg
push
dec
mov
std
pop
add
dec
jne
ins
xchg
out
aas
add
adc
push
sbb
add
sbb
push
add
mov
aaa
in
or
leave
mov
inc
sub
add
push
adc
jns
xchg
sahf
pusha
leave
xor
add
cdq
sbb
pop
pusha
and
bound
sub
in
lock
dec
add
and
and
push
pop
dec
(bad)
xchg
mov
pop
or
fsub
dec
push
retf
sbb
(bad)
mov
adc
js
jp
inc
shr
es
mov
sbb
or
mov
add
(bad)
in
jecxz
arpl
js
test
test
mov
sub
fidivr
test
xor
les
retf
or
cmp
or
xchg
add
movs
mov
jmp
xchg
in
retf
jno
sub
bound
add
test
or
xchg
sbb
adc
sub
dec
ds
ins
nop
push
dec
addr16
pop
es
mov
and
and
cmp
jno
popf
mov
fisubr
xchg
pop
std
add
js
test
aaa
dec
ss
das
xor
in
add
mov
daa
es
fist
js
icebp
push
pop
xchg
dec
fadd
daa
xor
test
ret
jmp
mov
(bad)
xchg
jne
scas
xchg
add
sbb
jle
arpl
push
pop
ins
shl
inc
gs
sbb
cmp
sbb
je
jl
and
xor
sub
(bad)
pop
or
and
test
retf
push
pop
push
in
xor
xchg
jp
ret
cmp
dec
pop
push
(bad)
shl
add
or
mov
dec
xor
adc
shr
daa
stos
jge
lods
clc
sbb
jmp
jecxz
fstp
clc
mov
adc
loopne
mov
sbb
and
je
outs
inc
ficom
(bad)
std
dec
fstp
jb
jns
aas
jno
loope
or
cmp
fnstenv
cmps
xor
pop
sub
mov
sub
test
rol
mov
push
xchg
jns
sti
xor
cmp
icebp
xor
leave
mov
inc
shr
mov
cmp
push
jno
scas
and
or
out
lds
inc
shr
push
inc
cs
shl
popf
xor
rcl
fidiv
imul
and
ins
loop
mov
fsub
dec
add
cmps
mov
adc
sbb
jbe
sub
jne
or
xchg
repz
mov
movs
fcomp
xlat
jno
push
rol
test
or
retf
cmp
adc
or
jne
mov
loop
movs
imul
or
xchg
js
jne
inc
mov
adc
scas
pusha
dec
nop
mov
cdq
sbb
(bad)
mov
dec
bound
pop
in
jmp
pop
adc
cmp
ret
mov
call
sub
inc
rcr
sub
and
stc
cld
imul
out
sub
adc
loop
nop
stos
mov
jge
sbb
mov
adc
mul
inc
lea
mov
lods
test
js
div
xchg
sbb
xchg
and
jmp
dec
jmp
loopne
adc
push
test
test
jbe
add
mov
dec
hlt
shl
inc
mov
or
adc
add
push
fwait
imul
retf
push
jle
mul
cmp
pusha
fwait
dec
pop
mov
adc
mov
inc
pop
mov
jae
pushf
inc
ror
add
and
aaa
test
jae
icebp
adc
inc
and
pop
push
and
ror
cld
ds
call
adc
dec
lds
rol
xchg
fmul
addr16
loop
shl
push
mov
xchg
mov
mov
sbb
ss
xchg
imul
in
jne
lea
add
dec
inc
and
ins
inc
or
adc
lock
fsub
xor
into
cmp
movs
mov
xchg
cld
ret
sub
popf
push
imul
call
imul
rcl
push
out
mov
sub
dec
dec
sbb
ds
adc
movs
inc
xchg
jecxz
or
jnp
imul
push
or
jne
popa
push
push
xor
sub
imul
pusha
or
dec
sub
or
add
fistp
pop
cmp
imul
push
add
cmp
sbb
stos
push
or
or
xchg
fs
mov
pop
cmps
shl
cmps
dec
or
(bad)
jmp
xchg
cmp
inc
or
movs
add
jns
push
xlat
out
push
and
xor
xchg
pop
or
jo
popf
adc
ja
lea
mov
imul
pusha
add
adc
rol
dec
xor
clc
ja
icebp
push
aam
xor
pop
inc
cmp
daa
test
xchg
mov
(bad)
push
in
sbb
inc
movs
inc
(bad)
or
mov
jecxz
out
dec
cli
mov
mov
jno
add
sbb
cmp
inc
ret
adc
add
add
sub
or
hlt
add
hlt
mov
pop
lock
in
jo
std
jp
or
add
mov
xor
jne
adc
and
xchg
mov
and
ret
add
inc
arpl
dec
enter
jmp
pop
mov
and
push
stos
inc
popa
add
push
daa
cmp
push
sub
push
(bad)
xor
mov
inc
repz
enter
cmp
cmp
ret
or
push
or
xchg
or
inc
mov
jnp
adc
sub
loopne
inc
sbb
fcomp
cmp
cmp
adc
test
test
inc
pop
(bad)
push
outs
mov
retf
mov
sbb
mov
out
dec
inc
cmp
sub
push
xor
pusha
fld
shr
inc
jae
out
push
and
mov
fcomp
ror
loopne
cli
sti
sbb
mov
cwde
pusha
add
sub
test
in
inc
inc
mov
add
test
aas
mov
mov
pop
add
add
push
mov
and
enter
push
stos
(bad)
ffreep
push
popf
retf
sub
fwait
mov
or
fwait
pop
cdq
pop
mov
cmp
adc
adc
push
imul
inc
or
mov
add
mov
sub
add
push
mov
mov
rol
ins
sub
cmp
mov
sub
es
repnz
pop
adc
pop
and
stos
xor
das
sahf
call
daa
test
out
dec
add
call
sbb
mov
xor
out
xlat
rcl
aaa
dec
sbb
sar
add
mov
jmp
mov
adc
das
sahf
sub
xor
add
xor
xchg
int
sbb
mov
dec
xor
enter
push
jmp
push
adc
retf
and
clc
dec
fwait
xchg
or
add
js
mov
les
jno
movs
xor
push
(bad)
adc
adc
dec
add
loop
xchg
jb
sbb
xor
aad
adc
and
cmp
jno
mov
cdq
clc
xor
add
outs
or
(bad)
push
dec
mov
ss
stos
lock
and
movs
cmc
imul
es
lock
inc
mov
adc
cmp
call
and
icebp
and
add
arpl
mov
xchg
cld
stos
jno
jmp
mov
push
and
hlt
add
loopne
jp
cmp
push
push
cmc
mov
dec
js
adc
loope
sub
jp
lock
and
jne
lahf
inc
mov
call
push
les
xlat
and
or
xchg
sub
pop
inc
xchg
cli
cmps
or
popf
sbb
xchg
sbb
jge
push
scas
inc
cmp
add
orps
mov
mov
je
leave
test
sbb
std
mov
fistp
loopne
int3
jbe
add
or
pushf
or
sbb
cmp
and
imul
outs
add
mov
sti
push
repnz
lea
dec
fld
jne
or
jne
jge
add
fbstp
adc
pop
outs
push
push
jmp
xor
xor
mov
jmp
rol
xchg
fstp
ds
into
mov
dec
les
das
push
push
and
xchg
fs
or
cdq
pop
aam
xor
and
sub
xchg
xor
xchg
mov
cwde
call
and
sub
cmp
push
and
mov
add
mov
push
inc
fs
je
idiv
push
xlat
bound
and
loopne
jmp
(bad)
adc
add
test
mov
push
or
aaa
or
or
add
fmul
push
and
in
lods
sub
jb
mov
mov
ins
adc
dec
adc
mov
mov
or
stos
lods
out
cmp
pop
push
push
jns
in
mov
xchg
mov
rol
sbb
ror
int
xor
scas
in
cmps
lea
adc
push
retf
js
xchg
or
sbb
jmp
fcmovu
not
xor
xchg
adc
inc
push
adc
mov
sub
mov
js
call
scas
daa
movs
ret
pop
mov
or
call
lea
pop
cmp
inc
das
jo
les
push
das
pop
add
nop
iret
(bad)
js
add
stos
aas
mov
jo
adc
lock
mov
sbb
xor
idiv
lock
inc
fadd
push
mov
dec
daa
pushf
pop
inc
and
pop
sbb
jmp
mov
and
pop
or
adc
xchg
dec
or
leave
into
cwde
mov
adc
adc
inc
jg
and
xor
mov
or
sub
loope
ds
(bad)
mov
xchg
sbb
or
std
add
mov
fld
and
and
pop
and
shl
pop
test
add
sbb
or
jle
xor
loope
sub
mov
test
imul
mov
mov
aam
jo
jmp
mov
in
add
adc
and
popa
xchg
xchg
pushf
sub
and
pushf
mov
xchg
push
loope
scas
sbb
add
mov
mov
mov
add
add
and
nop
pop
jo
and
and
mov
in
sub
sub
sub
or
dec
sub
rcr
test
dec
out
and
repnz
fld1
dec
mov
nop
js
and
in
pusha
add
mov
mov
movs
and
inc
arpl
retf
inc
movs
dec
push
dec
fidiv
and
sub
sbb
pusha
je
scas
in
(bad)
les
sub
add
push
pop
fstp
mov
cmc
js
add
aaa
xchg
imul
dec
jne
xor
jo
dec
xchg
and
dec
cmps
dec
inc
lahf
sub
xor
fld
add
pop
and
and
and
add
movs
dec
js
pop
lahf
test
sub
sbb
push
enter
push
test
fist
inc
inc
sbb
inc
in
out
dec
in
jbe
push
sbb
js
xor
or
pop
add
retf
or
push
add
mov
imul
nop
jne
mov
push
cmc
enter
inc
ror
fisttp
dec
jmp
inc
jne
xor
in
or
lahf
hlt
add
test
fadd
loopne
adc
cmp
leave
inc
clc
lods
and
test
pop
push
enter
dec
js
add
adc
ret
inc
pop
jb
add
clc
clc
dec
cmps
in
rol
hlt
clc
and
repnz
rol
cmp
pop
in
hlt
jmp
leave
pop
and
in
mov
sbb
std
and
enter
enter
lock
sbb
popf
jae
int3
and
pop
addr16
hlt
and
lock
fdiv
stos
lock
dec
repnz
add
xchg
mov
and
pop
xchg
jecxz
pop
or
add
pop
xchg
lock
add
and
and
sbb
pushf
mov
add
(bad)
es
in
ins
mov
adc
jecxz
test
sub
sbb
and
adc
aaa
dec
sahf
sbb
jl
sub
sub
test
pop
test
sub
inc
jnp
fisttp
arpl
and
pop
mov
add
jns
pop
nop
add
push
add
dec
in
lods
xor
test
cli
pop
add
dec
add
mov
add
loopne
ja
sub
pop
mov
xor
fcmovne
(bad)
add
pop
and
or
retf
push
add
add
sub
add
ja
cmp
xchg
mov
and
ret
inc
iret
int
push
dec
and
and
sbb
and
and
sub
add
adc
in
gs
clc
lods
dec
fcom
sub
dec
xchg
(bad)
dec
or
xchg
lea
xchg
inc
les
mov
or
ins
cmp
or
jmp
pop
pop
gs
jle
pop
push
inc
cmp
push
jb
sub
sbb
push
sbb
and
and
add
add
adc
adc
mov
push
ficom
call
inc
or
sub
and
ret
mov
pop
and
pop
jns
pop
dec
add
mov
retf
or
or
or
inc
add
push
loopne
je
xchg
push
(bad)
out
sub
xchg
sub
mov
inc
ss
mov
in
and
and
add
add
add
sub
xchg
xlat
or
rol
add
ffreep
push
fucom
mov
nop
sub
cdq
cmp
jbe
rol
repz
adc
cs
jne
shl
cmps
and
mov
jbe
adc
cwde
mov
push
push
mov
mov
out
sbb
test
popf
mov
and
mov
cmp
imul
xlat
dec
movs
push
mov
xchg
jp
in
push
xchg
(bad)
sbb
xor
or
jl
dec
ret
sub
cwde
ins
loopne
pop
ret
xchg
les
mov
pop
inc
daa
or
or
pop
dec
inc
mov
xor
cli
icebp
or
sub
push
mov
inc
int
nop
sbb
sub
sbb
sub
ret
add
imul
or
pop
shl
sbb
or
and
and
cmps
imul
cmp
lods
pop
fs
jns
and
add
adc
cmp
and
dec
xchg
push
je
or
sbb
or
leave
pop
jo
mov
add
sbb
push
and
jo
xchg
rol
mov
jbe
scas
jmp
and
or
inc
fisub
fsubr
add
mov
jnp
pop
mov
aam
dec
sbb
xor
adc
loopne
movs
sub
or
xchg
add
add
inc
sub
dec
push
sub
add
or
or
adc
jns
enter
inc
adc
movs
daa
(bad)
xor
push
inc
adc
push
stc
and
sbb
or
or
test
rol
test
cmp
sbb
das
xor
outs
sbb
cmp
fisubr
sar
std
push
popf
dec
fcom
and
inc
adc
dec
movs
in
add
jae
ds
push
inc
inc
adc
gs
xor
sbb
xchg
add
sbb
push
mov
inc
retf
cmp
loopne
adc
jmp
pop
cmp
dec
jnp
xchg
ret
adc
sti
sahf
(bad)
sub
cmps
ret
pop
ds
or
push
mov
pop
lahf
lea
adc
or
imul
xchg
xchg
add
and
pusha
dec
xor
sar
add
fcomp
aad
test
or
outs
mov
jbe
sbb
dec
inc
sbb
push
xor
scas
inc
scas
js
ins
or
fist
inc
xlat
leave
mov
dec
sbb
fcom
mov
mov
cmp
adc
mov
(bad)
lock
add
test
jmp
fwait
adc
dec
or
adc
lahf
loop
sub
ret
or
jb
ror
lock
and
shl
nop
add
push
cmc
cs
je
jle
(bad)
sti
or
push
cmp
inc
mov
lods
call
adc
nop
and
cmps
add
dec
fwait
mov
inc
adc
shr
pop
dec
les
punpckhwd
jmp
ret
sbb
outs
or
sub
xor
pop
sbb
inc
mov
ffreep
leave
and
push
jno
add
cwde
std
pop
mov
jmp
or
adc
inc
es
dec
div
retf
mov
div
and
cmp
and
sbb
cwde
scas
push
push
call
data16
rol
mov
pop
sbb
xchg
xor
add
xchg
pop
sbb
dec
add
jne
or
sub
jno
adc
ret
js
les
ss
xchg
add
lock
sub
jmp
(bad)
add
cmp
inc
cmp
in
push
int
xor
sbb
sar
xor
push
dec
add
cwde
cld
add
fcmovb
xor
pusha
push
or
cmp
sub
fdivr
add
cld
jae
je
or
push
jae
jne
adc
add
add
cmp
pop
and
add
xor
in
and
sbb
or
xchg
mov
add
add
jge
outs
adc
sar
lea
icebp
inc
or
mov
stos
nop
rol
jne
je
cmp
sbb
dec
inc
inc
cmp
adc
cmp
inc
mov
xor
inc
ret
test
or
xchg
js
cli
pushf
add
xchg
xchg
push
adc
pop
jne
rcl
shl
push
and
dec
xchg
or
push
xor
lods
rol
xor
fild
push
dec
add
pop
and
inc
adc
add
push
add
xchg
daa
inc
and
adc
mov
out
add
inc
loopne
xchg
add
(bad)
aam
jg
sub
push
push
cmp
jmp
mov
fcom
stos
fisttp
out
push
fcom
add
add
push
add
pusha
pusha
ret
pop
stos
es
push
xor
(bad)
nop
rol
push
lds
adc
sti
pusha
movs
jmp
enter
or
mov
into
sar
lock
ins
je
std
push
add
cmps
xor
and
loope
jnp
jmp
lods
adc
dec
add
jnp
inc
inc
push
fsub
fadd
sub
(bad)
movs
cmp
aad
or
cmp
scas
out
cmp
aad
dec
pop
iret
test
xchg
and
fist
loopne
popa
cmp
cs
cmps
xchg
sub
sbb
pop
mov
fsubr
test
push
pop
push
mov
adc
cmp
xor
inc
push
imul
cmp
movs
aam
or
imul
call
mov
adc
clc
adc
inc
pop
pop
rcl
in
cmp
pusha
adc
add
mov
xor
fld
xor
jo
sub
adc
sub
ja
cli
xor
push
jmp
push
cmp
dec
jmp
ja
inc
sahf
pop
inc
jmp
jge
sub
sbb
hlt
dec
jmp
dec
iret
add
movs
adc
(bad)
adc
mov
xor
add
iret
push
popf
xchg
fadd
jmp
gs
loop
inc
cmp
aas
cld
mov
dec
pop
mov
inc
loopne
pop
cmp
mov
dec
and
(bad)
leave
push
mov
adc
pop
add
imul
mov
pop
and
sbb
aam
inc
mov
cmp
push
mov
cmps
and
push
pusha
aad
mov
add
jmp
adc
ins
mov
jl
xchg
cmp
add
shl
mov
arpl
test
xchg
xchg
mov
(bad)
mov
xor
and
cmp
sbb
and
sbb
sub
dec
maxps
add
push
shl
push
mov
ret
push
retf
pop
dec
leave
adc
mov
out
or
imul
movs
pop
mov
add
sbb
jecxz
loopne
mov
inc
dec
and
mov
pop
cs
nop
sti
dec
jmp
jne
push
mov
rcr
cmp
add
data16
sbb
sbb
jmp
mov
sahf
sbb
push
or
mov
lds
inc
dec
cmp
push
mov
and
rol
lea
push
inc
sub
shl
sbb
sar
call
fcomp
push
jno
sbb
pop
jmp
mov
sbb
or
add
mov
or
adc
sbb
sub
xchg
xor
out
in
xor
imul
fmul
add
call
pop
call
sbb
jae
sbb
dec
and
xor
loop
scas
xor
daa
add
push
or
mov
rol
sub
imul
ja
and
adc
and
add
dec
mov
pushf
dec
cmp
leave
or
inc
fild
pop
adc
sbb
mov
xchg
push
cld
push
popa
or
mov
push
fisttp
mov
lods
or
add
pop
pop
call
sbb
or
or
inc
in
or
xchg
adc
push
je
test
ins
push
stos
dec
sub
cwde
xor
addr16
fstp
add
push
add
mov
cmps
mov
sbb
shl
adc
ins
cmp
jmp
and
shr
cmps
push
pop
call
mov
test
dec
add
sub
push
dec
add
mov
sbb
add
(bad)
jo
dec
ins
cmp
inc
add
dec
sub
mov
je
or
je
sub
mov
add
jmp
cmp
adc
xor
inc
jmp
dec
pop
jmp
movs
jae
fcom
or
and
cmp
jecxz
push
sub
movs
popf
dec
sbb
push
adc
cmp
popf
sahf
and
xchg
sub
or
aad
adc
or
and
mov
adc
and
xchg
xchg
inc
(bad)
imul
inc
test
dec
xchg
pop
rol
and
aaa
mov
dec
adc
jns
or
test
ins
xor
sub
rol
pinsrw
add
scas
std
shl
xchg
sbb
or
adc
push
sub
mov
rcr
fs
jnp
push
les
retf
je
pop
mov
sar
frstor
adc
cwde
scas
movs
add
inc
xchg
xor
mov
xor
xor
or
ror
sbb
sbb
je
pop
ret
cmp
xor
cmp
cmp
pushf
dec
add
adc
int3
hlt
arpl
and
scas
sbb
adc
inc
shr
sbb
fmul
pop
xor
jo
test
mov
mov
test
icebp
dec
ror
enter
rcl
repnz
shl
sbb
ret
push
icebp
xchg
cmp
jmp
scas
pop
pushf
cmps
sub
les
arpl
mov
enter
mov
sub
mov
xor
in
add
loopne
adc
loopne
loopne
mov
xor
pop
mov
adc
shl
loop
mov
mov
retf
mov
nop
adc
and
mov
jg
jae
add
push
test
cmp
or
push
inc
cmc
mov
xchg
pop
fcomi
mov
(bad)
fldcw
stos
jno
fst
ins
dec
dec
rcr
pop
je
add
sub
outs
jp
xor
or
mov
jbe
jb
jl
int
loopne
outs
mov
mov
mov
int
fistp
out
mov
mov
cmps
imul
jmp
add
das
inc
add
popf
mul
and
push
outs
neg
sbb
dec
add
xor
add
test
or
sub
sub
dec
in
push
xor
daa
(bad)
rol
push
mov
mov
xor
xchg
clc
call
mov
adc
xor
cli
adc
inc
and
add
int3
add
into
loopne
lahf
or
movs
jmp
and
pusha
adc
icebp
fimul
js
inc
add
das
push
and
adc
jns
in
leave
add
mov
jbe
out
pop
retf
inc
jb
add
(bad)
jnp
sbb
lods
xor
call
add
push
push
and
sub
ins
xchg
loope
push
or
dec
ret
cmp
lock
or
xchg
cmp
enter
sub
sub
and
loope
mov
push
add
lahf
dec
je
pop
(bad)
test
(bad)
push
xchg
sbb
and
pop
imul
xchg
and
dec
push
loop
push
icebp
add
test
rcl
or
push
dec
es
movs
adc
adc
es
fs
sbb
and
fs
dec
sub
fs
dec
es
cmp
dec
es
inc
inc
dec
dec
loopne
je
ret
or
jecxz
and
sbb
shl
sbb
sbb
xchg
add
cwde
ret
scas
xor
movs
mov
sub
or
sub
call
mov
sub
js
rol
pop
ret
shl
test
fucomp
daa
push
and
ror
or
jge
enter
cmp
dec
cmp
test
aas
leave
adc
adc
inc
mov
pop
pop
xchg
ins
adc
inc
xor
repz
sbb
icebp
pusha
sbb
ins
ss
retf
push
es
jo
lock
add
mov
sbb
nop
rcl
push
(bad)
inc
aaa
sbb
imul
sar
pop
xchg
dec
push
and
add
lock
xchg
pop
loopne
dec
aam
addr16
mov
adc
xchg
in
xchg
mov
fadd
add
push
push
or
cmp
add
xchg
jo
jecxz
push
adc
push
or
push
aas
shl
sbb
and
jp
outs
sbb
fdiv
not
mov
adc
pop
out
mov
mov
adc
fwait
test
sti
add
mov
gs
loopne
push
ds
and
jmp
inc
retf
mov
cmp
sub
jp
dec
inc
add
movs
stos
add
xlat
or
ins
lock
call
in
xchg
sub
call
cld
shr
xor
dec
pop
jp
in
push
push
inc
push
and
test
xlat
add
push
xchg
inc
aad
mov
sub
and
idiv
inc
sub
cmp
hlt
cmp
add
jmp
mov
dec
push
stc
sub
loope
mov
(bad)
inc
adc
xor
cmovo
adc
pop
push
aaa
test
or
mov
fcmovnb
dec
inc
shl
and
dec
fwait
inc
pop
fiadd
aad
inc
sub
push
lahf
out
adc
lock
or
cmps
in
aas
cmp
sub
xchg
add
mov
mov
arpl
add
pop
and
push
add
or
cmp
xchg
push
mov
mov
jne
jb
or
int3
adc
(bad)
push
mov
jne
(bad)
jne
int3
add
cmps
test
or
mov
dec
mov
add
sub
cmc
lods
jmp
push
sahf
push
push
push
and
gs
and
xor
inc
mov
push
mov
in
mov
adc
pop
cmps
push
adc
cmp
dec
cs
pop
push
and
or
aas
stos
xlat
xchg
and
jge
es
arpl
adc
data16
mov
and
imul
pop
fisttp
mov
xor
test
pusha
push
add
adc
arpl
test
leave
inc
dec
mov
sub
lods
and
shl
aam
xchg
push
mov
jge
pop
aad
sbb
push
push
inc
sbb
ja
push
jno
push
inc
repz
adc
push
int
push
popa
outs
(bad)
cmp
imul
jmp
pop
pusha
push
xor
push
and
sbb
shr
jge
mov
icebp
or
test
add
pop
push
push
push
xor
cmps
std
pop
jne
push
fadd
mov
jno
aaa
xchg
adc
xchg
icebp
push
aad
push
test
adc
(bad)
fucomi
add
inc
test
cmps
adc
xchg
leave
out
pop
jp
push
push
add
dec
(bad)
dec
fdiv
pusha
mulps
xchg
push
stc
rcl
stc
sbb
adc
call
add
add
adc
movs
(bad)
lds
or
inc
add
sbb
inc
sbb
fst
fstp
xor
test
cmp
ret
call
dec
or
popa
fwait
inc
mov
pop
jo
pop
add
iret
sub
imul
or
xor
inc
sbb
lock
add
bound
xor
cmp
xor
mov
add
jns
shl
dec
or
add
cdq
mov
pop
xchg
mov
movs
imul
xlat
inc
xchg
inc
add
pop
pop
mov
lods
clc
push
icebp
pop
inc
dec
add
cmp
add
adc
xor
clc
mov
add
cs
inc
push
inc
jecxz
inc
sbb
mov
or
sbb
xor
mov
ror
or
push
dec
inc
ror
adc
rol
das
inc
adc
adc
sbb
mov
mov
push
sub
repnz
sbb
inc
push
lods
pop
push
and
out
sub
add
or
jecxz
cli
pop
push
or
inc
mov
movs
sub
add
sbb
aam
inc
add
push
add
jle
inc
and
lea
es
neg
add
adc
jb
mov
push
cmps
jbe
jae
in
push
sti
push
pop
adc
inc
and
ret
fiadd
push
inc
mov
(bad)
rol
es
fidivr
mov
pop
cmp
sbb
fwait
outs
cmps
icebp
pop
xchg
adc
cmp
add
stos
adc
mov
inc
test
push
cs
xor
jp
enter
push
test
xlat
xor
and
retf
popf
add
add
test
scas
sahf
pusha
sbb
ss
or
rcl
inc
std
loopne
imul
loopne
sub
mov
sbb
mov
sbb
mov
push
dec
jno
jb
dec
jo
mov
adc
push
push
idiv
xchg
bound
mov
movs
imul
push
xor
outs
dec
cmps
mov
inc
ret
clc
(bad)
adc
adc
retf
xchg
and
pop
cld
and
adc
test
xchg
into
rcr
pusha
test
push
mov
adc
xor
or
loopne
jl
push
mov
sub
or
lds
test
ret
loopne
sti
rol
adc
imul
jmp
mov
xchg
loopne
sub
fs
jo
or
and
popa
and
movs
in
cdq
mov
cs
adc
pop
fidiv
pop
and
jle
xchg
ins
das
mov
lock
adc
sub
push
(bad)
xchg
ret
mov
pop
bound
test
loope
and
mov
in
fdiv
add
lock
sub
push
cmp
les
and
push
out
lea
loopne
lods
xor
rol
call
and
mov
jno
les
xor
mov
imul
cmp
sub
lods
lea
adc
adc
popa
lds
jmp
iret
call
cmp
and
push
push
and
push
mov
pop
mov
daa
push
cmc
pop
or
mov
loopne
loopne
mov
and
(bad)
icebp
bound
or
je
dec
out
pop
add
xchg
adc
(bad)
mov
dec
xor
pusha
test
fcom
xchg
adc
sbb
push
sbb
sahf
push
or
rcr
cmc
fsub
mov
sbb
dec
adc
rcr
ret
or
out
and
xchg
jb
(bad)
dec
sahf
jno
loope
je
or
pop
dec
ror
push
inc
cs
adc
call
fsincos
adc
xchg
adc
pop
cmp
and
int3
sbb
dec
inc
and
xchg
mov
add
ret
push
neg
dec
mov
inc
fs
pop
push
ins
data16
sbb
adc
lahf
out
dec
mov
dec
adc
retf
sub
xlat
aam
sbb
cmp
and
aam
scas
out
rcl
push
and
and
mov
or
adc
or
or
leave
dec
cmp
movs
fimul
cmp
retf
ja
rol
sub
dec
test
xor
mov
jmp
add
xchg
test
mov
jecxz
or
stc
pop
ficomp
inc
or
xchg
ss
mov
sbb
mov
js
icebp
jmp
jecxz
jl
imul
cmp
or
mov
mov
daa
adc
dec
stc
push
sbb
stos
cmc
ror
js
lahf
mov
call
mov
sub
sub
(bad)
retf
in
aas
es
jmp
xor
jmp
mov
addr16
cmp
adc
xchg
call
push
loopne
sbb
add
(bad)
leave
xor
jl
mov
push
add
dec
xchg
cmp
hlt
cmp
retf
and
push
push
aaa
mov
jne
sbb
adc
adc
push
jbe
cmp
(bad)
jo
push
int
test
mov
xor
sub
je
(bad)
adc
xor
and
fadd
cmp
push
xor
push
shl
jno
push
push
fild
add
lock
pop
ret
inc
cdq
cmps
popf
cmps
mov
adc
jns
mov
add
or
jnp
push
mov
nop
xchg
pop
or
aam
or
int3
adc
mov
(bad)
or
call
or
xor
inc
pop
enter
and
or
sub
xchg
and
fs
xchg
and
xor
cmp
or
sbb
jge
nop
mov
inc
xor
jecxz
jmp
stos
cmps
sbb
xor
rep
inc
or
mov
inc
call
cmp
adc
add
stos
jae
shl
lahf
mov
ds
mov
popf
sub
mov
xchg
into
or
add
push
faddp
popa
jg
xor
ins
lods
mov
cwde
enter
push
dec
jo
pop
mov
and
cmps
mov
rol
or
mov
or
mov
cld
xor
rol
jl
add
call
jo
ins
(bad)
test
and
cmp
pop
pop
mov
in
add
gs
push
inc
xor
loope
mov
or
mov
sbb
out
test
push
sbb
cmp
dec
shl
jae
jne
or
sub
mov
sbb
mov
sbb
xor
mov
inc
pusha
mov
and
mov
call
jbe
clc
sbb
sub
movs
inc
add
pop
fistp
popa
mov
and
jle
out
dec
mov
aaa
mov
fisubr
call
xchg
or
das
in
xor
pusha
imul
sub
sbb
xchg
xor
fst
scas
or
pop
dec
mov
jb
dec
dec
pop
dec
not
shl
push
cmps
cs
jmp
inc
xor
test
pop
adc
pop
icebp
test
and
mov
push
adc
jns
add
xchg
jno
aad
jle
cwde
inc
xor
inc
(bad)
wrmsr
jnp
push
aad
cwde
jne
imul
jmp
cmp
cmp
jmp
add
sbb
push
fisttp
mov
dec
and
jno
(bad)
pop
add
sbb
and
sbb
inc
aas
xchg
outs
scas
cmps
into
setne
dec
jne
sub
mov
imul
xchg
add
in
sub
loope
imul
cli
shr
add
jg
retf
rcl
repnz
leave
clc
push
sub
and
jmp
or
dec
adc
and
es
cld
(bad)
or
inc
xor
pop
mov
xchg
pop
jmp
push
push
(bad)
push
sub
inc
push
lea
pop
movs
jge
push
push
fs
cmp
rol
in
sbb
inc
clc
and
movs
shl
imul
call
cmp
repnz
add
mov
and
loope
jmp
sub
cld
popa
mov
dec
xchg
xchg
dec
mov
xchg
add
mov
js
(bad)
adc
ret
push
ins
mov
mov
mov
push
adc
mov
jmp
rcl
hlt
loope
mov
xlat
sahf
adc
mov
pop
pop
push
cwde
aaa
and
inc
sbb
mov
fcom
jecxz
push
mov
adc
jnp
dec
adc
jo
adc
mov
xlat
(bad)
call
aaa
sbb
push
or
jb
mov
loopne
lea
xor
fs
cld
mov
sbb
xor
adc
push
cmp
adc
sahf
test
fmul
test
ficom
adc
mov
fmul
cmp
and
xchg
(bad)
aad
dec
add
test
pushf
dec
jnp
or
fcomp
push
sub
rcl
je
js
sub
push
adc
iret
in
mov
mov
ja
mov
mov
sub
shl
add
cmp
xchg
jbe
pop
mov
push
mov
sub
and
adc
inc
sbb
add
pop
and
xchg
xchg
add
pop
loope
movs
or
stc
movs
cmp
xchg
in
add
loope
mov
xchg
cmp
mov
or
inc
cmp
adc
xor
test
call
sub
cmc
(bad)
xchg
sub
stc
add
push
popf
push
or
sbb
sbb
fild
in
sbb
pop
aam
cmc
or
cmp
test
fs
cwde
outs
cwde
or
push
jmp
or
sub
jge
mov
pop
jmp
addr16
lds
cmps
daa
nop
rcl
aam
or
shr
icebp
add
add
xchg
enter
jmp
cmc
je
inc
arpl
add
test
movs
cdq
add
add
mov
mov
mov
pop
sbb
(bad)
ins
mov
stc
or
push
(bad)
cmp
add
sub
add
adc
iret
mov
pushf
ins
call
in
jo
adc
and
sub
push
fcmovnb
mov
mov
adc
mov
add
mov
mov
mov
sti
lods
mov
sbb
mov
pusha
and
aam
cmps
lock
and
adc
add
xchg
add
adc
mov
mov
mov
mov
cwde
adc
cmp
repnz
inc
pop
sub
pop
adc
jns
lods
push
loopne
inc
jge
adc
movs
inc
hlt
mov
xchg
popf
adc
xchg
sub
cmp
inc
ins
and
je
outs
(bad)
lods
adc
or
sub
addr16
add
pop
shr
add
add
jle
xor
jo
mov
jo
cmp
or
jns
scas
pusha
push
sbb
push
jnp
jmp
adc
mov
scas
mov
mov
(bad)
or
mov
ror
push
repz
add
inc
and
dec
call
or
in
add
push
aam
data16
lds
test
dec
ss
inc
icebp
mov
dec
sub
push
xchg
shl
dec
jns
sub
retf
and
or
test
out
test
add
ss
and
outs
dec
js
test
pop
add
jnp
neg
test
add
sub
jns
fcom
shr
sub
mov
popf
cmps
call
enter
or
mov
loopne
xor
jno
js
cs
ins
jmp
push
xchg
jb
loop
push
imul
inc
(bad)
int
push
sar
aam
rol
xor
dec
or
sub
icebp
xor
add
push
cmp
sub
ins
pop
push
fmul
test
shl
mov
pop
inc
ror
add
add
mov
fcom
push
add
dec
push
add
dec
push
dec
pop
ror
or
xor
mov
add
dec
(bad)
rcr
cmps
xchg
sbb
or
sbb
sub
ss
mov
add
enter
and
scas
int3
add
popf
mov
or
dec
and
add
ja
movs
cmp
mov
mov
push
push
pop
push
cmp
jge
push
or
xchg
and
sbb
pop
adc
in
mov
jne
add
add
pushf
sub
hlt
add
popa
and
iret
das
ficom
add
fadd
sbb
add
add
push
sub
lock
sub
in
push
cwde
loopne
pusha
or
jae
ja
push
movs
push
call
pop
xor
add
cdq
ret
cmp
push
es
(bad)
mov
lock
sbb
dec
cmps
cmp
test
and
sbb
clc
adc
cmp
cmp
jmp
ins
inc
in
push
fst
cmovo
pusha
shl
and
imul
movs
sub
mov
pop
cmp
inc
sbb
rcr
pusha
(bad)
mov
xor
mov
push
nop
sub
aam
mov
test
push
movs
mov
adc
int3
mov
les
lds
je
push
(bad)
repnz
adc
dec
lods
(bad)
and
push
cmp
dec
push
shl
dec
es
(bad)
lahf
pusha
and
arpl
enter
adc
ins
or
and
add
xchg
push
sbb
nop
test
sbb
jl
jno
or
jle
mov
cld
adc
cwde
xchg
add
sbb
xchg
int3
sbb
in
shl
add
jle
xor
test
sbb
int3
xor
inc
and
mov
adc
sub
inc
mov
movs
out
cmp
sbb
das
inc
retf
dec
xor
outs
mov
adc
sbb
inc
ret
fimul
push
jmp
inc
pop
inc
out
pop
pop
push
and
xor
cld
add
je
gs
push
shl
add
jl
add
jbe
cwde
adc
(bad)
sbb
dec
sbb
fdivr
pop
jns
lea
push
adc
jp
into
imul
jo
es
outs
push
adc
cmp
int3
pop
add
adc
inc
sub
or
repz
pop
xor
push
push
fsub
mov
add
call
call
pop
push
rol
js
and
inc
sbb
push
push
or
adc
sub
fisttp
cmps
jle
mov
es
fdiv
jmp
rcl
push
and
xor
add
cld
adc
movs
push
inc
fcom
xchg
mov
sub
and
idiv
mov
in
push
data16
aam
sbb
cmc
add
xor
mov
je
fsubr
push
push
fadd
mov
add
stos
call
je
sub
imul
push
loopne
icebp
call
pop
dec
pop
retf
add
xchg
mov
push
mov
inc
jp
dec
je
and
clc
or
(bad)
into
mov
out
mov
fs
mov
jne
sub
push
test
dec
mov
add
push
call
aaa
xor
or
add
mov
inc
dec
dec
popa
outs
lods
mov
cs
mov
cmp
jne
adc
inc
and
sub
dec
or
dec
sub
sub
adc
pushf
or
sbb
les
xor
add
cmp
adc
test
out
push
lock
and
loop
or
xchg
movs
cmp
std
add
lea
aad
xchg
push
arpl
and
or
call
xor
pushf
sbb
jmp
pop
js
outs
cmp
and
or
(bad)
push
stos
icebp
sub
movs
sbb
out
sub
add
sub
fs
retf
push
mov
ss
(bad)
loop
sbb
adc
xlat
mov
daa
(bad)
push
sbb
and
push
ret
in
lea
out
pop
xor
inc
inc
lea
dec
mov
pop
add
les
pop
mov
sub
cmp
sbb
fldcw
xor
pop
dec
loopne
ins
dec
push
test
in
push
push
lea
movs
loopne
sub
lea
cmp
repz
idiv
dec
inc
lea
sbb
sub
adc
gs
push
pop
jge
adc
iret
dec
push
nop
add
movs
and
sub
jb
xchg
dec
call
add
dec
fstp
fdiv
mov
jmp
movs
sbb
shr
and
out
(bad)
pop
inc
popa
add
es
pushf
sbb
add
inc
sub
(bad)
push
mov
test
dec
push
popa
and
iret
dec
das
add
xor
jp
shl
or
pop
(bad)
xchg
mov
call
adc
pushf
adc
std
mov
and
lods
ins
mov
and
pop
sub
dec
sar
push
xchg
ficomp
cmp
or
pop
add
inc
sub
mov
cmp
(bad)
and
js
inc
imul
push
mov
push
das
cmp
mov
ins
loopne
imul
cmp
in
mov
jge
(bad)
cld
inc
lods
jmp
add
inc
push
mov
cmp
pushf
lods
sbb
shl
add
hlt
fstp
pop
ret
(bad)
lds
and
mov
call
mov
jmp
sbb
daa
dec
jno
xor
enter
cmc
xchg
in
push
sub
or
adc
retf
mov
add
rol
mov
jns
push
sbb
in
movs
or
adc
mov
jmp
sti
xor
jae
and
mov
or
pusha
movs
test
push
into
add
or
xchg
dec
mov
push
stc
xor
mov
mov
(bad)
cmp
rcl
push
jle
or
mov
jbe
dec
inc
pusha
push
(bad)
and
in
or
mov
and
aas
(bad)
pop
daa
call
inc
mov
addr16
add
sbb
xor
sbb
mov
dec
ret
and
jp
fwait
and
add
aam
push
pop
movs
mov
sbb
popf
jns
inc
mov
adc
sub
aam
cwde
test
cmp
pusha
jmp
inc
test
and
blcfill
adc
push
test
mov
mov
int3
pop
dec
and
dec
int
cmp
inc
mov
outs
call
push
inc
cmp
mov
cmp
outs
or
sub
push
dec
fisub
mov
xchg
dec
and
(bad)
icebp
adc
xchg
scas
jne
pop
mov
cmp
xor
xchg
les
pop
aas
mov
mov
push
sub
in
or
lea
xchg
push
test
jge
sahf
push
xchg
bound
add
aaa
and
xlat
mov
xor
push
pop
ds
pop
ficom
jmp
divps
ins
stc
cmp
loopne
jo
ret
fisubr
cwde
jl
lock
and
sub
and
xchg
(bad)
(bad)
xchg
test
mov
cmp
sahf
adc
pop
inc
adc
sub
jmp
inc
mov
sbb
rcl
or
pop
adc
xor
adc
adc
out
stc
mov
imul
ss
mov
mov
add
fwait
mov
hlt
scas
xor
inc
push
imul
daa
jp
das
inc
cdq
mov
das
or
or
xchg
add
hlt
(bad)
sbb
(bad)
daa
ret
fstp
gs
enter
fwait
or
xchg
push
test
xor
push
cmp
cmp
xor
push
xor
pop
ins
and
inc
mov
(bad)
cwde
cmp
cmp
and
bound
add
add
in
push
add
inc
rcr
cs
mov
add
inc
cmps
sub
inc
cld
cwde
les
pop
cmps
lods
xchg
cwde
xor
les
push
cmps
femms
scas
push
sub
cmp
rcl
and
sub
mov
add
xor
in
enter
fidiv
cmp
sub
sbb
int3
sbb
mov
xor
icebp
mov
sbb
adc
(bad)
push
mov
adc
xor
movs
jmp
cmc
or
movs
test
fldcw
test
adc
or
mov
clc
jge
xchg
push
repnz
mov
add
add
repnz
add
repnz
stc
adc
inc
cs
(bad)
adc
or
sbb
cmp
pop
adc
mov
das
jmp
jmp
add
imul
or
sub
test
ret
add
cmp
hlt
inc
loop
mov
mov
in
pop
test
push
sub
add
dec
adc
jmp
push
(bad)
sbb
pusha
xchg
adc
inc
out
push
add
mov
cdq
sbb
add
sub
sub
mov
push
add
jo
cdq
daa
loope
push
test
lahf
add
je
xchg
mov
lock
jp
add
hlt
daa
mov
push
dec
inc
gs
mov
movs
arpl
scas
jmp
dec
or
jb
daa
(bad)
enter
cwde
sub
cmp
call
push
je
daa
scas
sar
mov
mov
fnsave
out
xlat
sub
adc
hlt
jno
dec
xor
inc
scas
(bad)
aam
dec
pop
sbb
pop
mov
mov
xor
fmul
gs
mov
jecxz
ss
iret
test
sub
loopne
sbb
sub
fcom
mov
rcr
inc
add
or
xchg
aaa
call
addps
mov
jmp
inc
cmp
test
pop
xchg
dec
or
aad
and
mov
add
or
inc
mov
push
add
movs
test
outs
mov
and
push
lods
xchg
pop
pop
or
les
sbb
pop
push
fs
adc
dec
call
fsub
cwde
mov
cmps
or
loop
sbb
sub
addr16
cwde
sbb
aad
daa
pop
lds
dec
scas
(bad)
loop
adc
add
loope
add
adc
adc
pop
inc
popa
push
cmp
hlt
jne
push
adc
or
rcl
inc
jmp
inc
daa
imul
or
mov
fld
mov
shl
push
add
adc
and
jb
sbb
add
xor
add
(bad)
hlt
sub
test
shr
xor
and
int3
pop
sbb
loopne
mov
aaa
and
ins
imul
mov
inc
xchg
jns
cmps
scas
dec
cwde
jmp
or
mov
cmp
mov
xchg
ins
shr
xor
push
(bad)
je
clc
or
call
cmp
pop
mov
arpl
sub
test
xor
sbb
mov
mov
sti
lods
cli
sub
push
mov
dec
aaa
icebp
call
ja
dec
call
icebp
call
retf
dec
jo
in
dec
in
mov
mov
enter
jl
jmp
cmp
mov
ja
popa
mov
jmp
inc
add
mov
add
dec
cmp
xor
cmp
loopne
or
dec
or
dec
mov
sbb
adc
xlat
mov
fsub
(bad)
or
mov
push
dec
xchg
inc
adc
cmp
sbb
pop
rol
add
adc
or
adc
inc
(bad)
pop
loope
cmp
ret
push
add
and
iret
mov
inc
push
xchg
push
stos
mov
lock
push
movs
call
xor
ret
sub
push
shr
adc
int3
pop
cmps
popa
add
push
sbb
sbb
sbb
push
add
(bad)
and
inc
sbb
gs
shr
or
sti
xchg
in
int
pop
xor
dec
push
pop
sbb
inc
ret
mov
dec
icebp
outs
inc
xor
mov
movs
movs
into
call
jae
inc
pop
and
mov
push
cmps
inc
adc
adc
pop
or
dec
cmp
mov
call
test
sub
and
ror
repz
icebp
push
sub
push
add
int3
test
stos
inc
or
(bad)
xor
(bad)
push
cmp
or
movs
jmp
lods
test
scas
jne
mov
mov
mov
jmp
add
fisttp
dec
xchg
adc
mov
xlat
xchg
xchg
mov
repz
push
jo
test
nop
xchg
cmp
jnp
and
inc
ins
ret
aas
push
ja
outs
jg
sub
dec
cmp
mov
es
xchg
mov
bound
data16
sbb
jne
lods
cmps
add
repnz
fild
push
bound
mov
sbb
(bad)
nop
xor
push
ss
movlps
pop
add
loopne
in
imul
lock
sbb
ret
fmul
(bad)
dec
xchg
dec
inc
enter
inc
cs
scas
dec
sub
imul
mov
(bad)
and
mov
int3
sar
adc
ror
fs
sbb
out
lds
inc
(bad)
movs
loopne
adc
mov
mov
sbb
lods
inc
pop
in
push
cwde
cmp
and
in
pop
mov
ret
js
lods
fcom
and
push
outs
add
pusha
cmps
adc
dec
cmc
in
push
adc
pop
daa
push
xor
add
jp
jae
push
out
xor
jl
gs
sub
adc
ret
mov
jno
ss
xchg
pushf
or
retf
cmp
push
xchg
pop
pop
or
dec
push
clc
or
or
add
pop
inc
adc
mov
mov
jmp
add
test
push
test
mov
jp
icebp
sub
call
xor
nop
call
push
test
and
and
inc
dec
rcr
mov
pop
add
es
mov
sar
lds
lea
fcomp
and
jne
or
push
mov
sbb
push
std
xor
(bad)
adc
inc
shl
retf
mov
test
mov
icebp
loope
adc
je
retf
xchg
ret
mov
adc
xchg
lock
xchg
cmp
sub
dec
push
dec
test
and
sar
je
adc
sbb
sub
adc
cwde
cmp
inc
loope
sete
inc
xchg
pop
stos
xlat
(bad)
sub
pop
push
mov
add
pop
inc
xchg
jecxz
sub
inc
out
jecxz
in
movs
xor
rol
sub
test
adc
mov
sahf
sbb
sub
add
popa
dec
movs
mov
push
jae
in
rol
inc
arpl
push
sub
xchg
xchg
in
push
rol
stos
inc
pop
stos
mov
or
pop
mov
adc
adc
adc
jmp
sar
and
mov
mov
bndstx
sar
push
shl
sub
xchg
mov
popf
mov
mov
lea
mov
adc
lea
jb
sub
ror
cmps
cmp
jns
inc
imul
loopne
xchg
out
push
enter
add
sbb
push
mov
mov
and
mov
push
push
mov
aas
mov
aas
ds
(bad)
mov
xor
xor
sub
inc
into
lods
pop
or
popa
add
(bad)
rcl
dec
mov
and
nop
ret
jl
int3
gs
and
jmp
push
sbb
sbb
inc
push
in
fwait
pop
sub
test
mov
mov
test
pop
dec
test
mov
adc
push
sbb
jl
in
cmps
push
test
add
push
or
pusha
or
sbb
nop
or
ins
stos
pop
loop
loope
ror
int3
or
push
pop
es
lock
ins
push
mov
xor
sbb
jno
dec
pop
test
rcl
test
mov
popf
retf
pop
cmp
sahf
sqrtps
jne
rol
test
mov
jne
push
xchg
shr
inc
inc
dec
xchg
or
sbb
cmp
cmp
pop
outs
cmps
cmp
cdq
lahf
fsub
mov
inc
cmp
sub
mov
je
mov
dec
test
clc
into
inc
cmc
pop
rol
xchg
sbb
and
adc
push
and
push
jg
inc
sub
push
mov
inc
dec
mov
ins
inc
xchg
enter
das
and
xor
je
loope
add
adc
mov
or
repnz
cmps
push
push
test
les
popa
out
dec
sbb
mov
neg
mov
add
imul
xor
or
inc
in
fs
mov
and
pop
nop
and
or
ror
add
dec
xlat
or
lock
ins
add
or
mov
pop
add
call
add
leave
outs
stos
adc
mov
sti
push
xchg
ins
int3
push
pop
or
mov
not
in
sbb
out
push
add
xchg
or
hlt
push
mov
adc
movs
movs
and
adc
pusha
and
xor
scas
(bad)
adc
push
xchg
inc
(bad)
sbb
mov
and
fsub
add
and
mov
push
pushf
cmc
and
mov
xchg
mov
xchg
mov
outs
mov
dec
gs
and
inc
je
sub
or
pusha
inc
in
and
dec
les
push
(bad)
(bad)
pop
add
dec
jg
leave
pusha
in
imul
in
mov
push
and
add
adc
inc
mov
dec
push
mov
add
add
rol
pop
stc
mov
imul
mov
add
xor
mov
mov
inc
lods
xor
cmp
sti
inc
inc
call
sub
mov
rcl
sub
aad
sti
call
and
imul
sti
ins
lods
jae
jno
push
dec
or
sub
dec
ret
ror
or
pushf
neg
scas
push
pop
xor
movs
aaa
daa
js
test
popf
and
outs
mov
xchg
pop
cmps
jge
movs
cli
dec
jle
mov
push
mov
sti
or
scas
cmp
push
retf
or
jmp
dec
jne
les
dec
popa
dec
in
push
pop
jmp
cmp
jb
xlat
test
adc
xor
push
jae
aas
and
add
in
rol
into
sub
lds
inc
cmp
push
add
sbb
jmp
mov
sbb
adc
scas
pushf
or
xor
jmp
add
adc
rol
loop
sbb
adc
inc
add
ins
cmp
sbb
xchg
jl
xor
push
fistp
jb
dec
jle
add
inc
cs
or
push
in
ins
shl
push
dec
push
or
sub
inc
push
test
sti
jns
cmp
push
adc
xor
sub
adc
cdq
add
inc
mov
xor
aaa
add
ja
add
inc
push
fstp
and
xor
jbe
push
dec
or
lock
mov
pop
jmp
jnp
xchg
or
or
rcl
dec
cmp
call
shl
inc
or
lock
sbb
lock
hlt
push
push
jae
hlt
pop
mov
rol
retf
push
lock
push
mov
push
clc
fs
jae
pop
sub
inc
nop
push
mov
dec
lea
lods
out
xchg
add
in
aas
xchg
sbb
mov
mov
cmp
je
inc
push
rcr
inc
push
cmp
jl
out
sub
jmp
jnp
test
mov
jo
inc
aam
pop
out
mov
jl
pop
cmps
push
push
and
clc
sub
jne
mov
cmp
xor
adc
sti
ret
xor
iret
cmp
in
or
mov
ret
xlat
aaa
mov
pusha
outs
add
jne
cmps
xor
outs
call
mov
cmps
out
(bad)
add
mov
xchg
jbe
(bad)
and
jo
sbb
adc
cmp
popa
pop
push
or
adc
es
fs
cmp
or
pop
push
repnz
xchg
or
retf
fnstenv
xor
inc
shl
icebp
jmp
sub
loopne
(bad)
cld
jne
pop
jnp
cmps
and
push
or
pop
popf
or
aas
xchg
mov
push
inc
ja
or
leave
arpl
xor
sbb
ins
fs
or
dec
movs
fsub
arpl
loopne
adc
or
mov
mov
shl
repnz
mov
adc
xor
test
jnp
pusha
add
scas
jbe
into
jo
dec
push
stc
jmp
std
pop
mov
sbb
add
add
mov
aad
pushf
cmp
sbb
add
ja
mov
outs
adc
aaa
pop
cld
rol
xchg
fcmovnbe
push
add
test
xchg
lock
jns
or
jmp
add
pop
loope
pop
jle
dec
jecxz
aam
push
mov
cmp
ja
inc
shld
sbb
sbb
jns
shr
adc
inc
inc
add
sub
push
movs
nop
add
mov
mov
jae
shl
test
inc
pop
(bad)
nop
xchg
fnsave
int
inc
sbb
call
sub
jmp
dec
jp
ss
sti
xchg
push
mov
icebp
jmp
and
pop
and
test
daa
pop
aaa
je
sub
and
sbb
sbb
(bad)
xor
xor
dec
(bad)
xlat
xchg
adc
cmp
push
or
out
ret
popf
call
dec
inc
or
pop
sbb
call
test
pop
jmp
js
push
push
adc
sti
fsubr
adc
and
adc
pushf
xchg
mov
xchg
out
je
sub
cmp
test
retf
in
mov
mov
in
mov
ss
xor
outs
mov
inc
cmps
sbb
dec
jmp
loopne
nop
ret
adc
mov
mov
fisttp
lock
mov
ss
mov
sub
add
mov
or
js
push
(bad)
jmp
xor
je
add
outs
or
or
outs
call
adc
test
sar
mov
adc
mov
push
xchg
adc
inc
adc
jle
push
jnp
pop
dec
xchg
sbb
pop
cmp
inc
xchg
dec
xchg
pop
xchg
push
jmp
xchg
test
sbb
iret
and
and
mov
call
lock
push
jle
push
mov
jge
inc
mov
outs
push
scas
jno
std
shl
aas
repnz
or
cli
pop
jmp
(bad)
test
sbb
shl
add
push
xlat
xchg
popf
pop
lods
mov
push
sub
rol
dec
mov
cmc
push
pop
stos
clc
push
pop
rcl
mov
cdq
dec
lahf
fld1
je
mov
fstp
fst
fld
ret
add
arpl
cmp
sbb
mov
dec
push
inc
test
sub
sbb
pop
push
push
mov
je
fdiv
or
pop
mov
es
pop
pop
cmp
mov
aam
movs
nop
cmps
fcom
dec
xchg
nop
sbb
ins
jo
out
stc
inc
mov
xchg
or
imul
adc
outs
pop
adc
push
sbb
mov
jmp
push
pop
movs
stc
movs
jns
cmp
daa
add
sub
sbb
pop
push
dec
sbb
mov
imul
jmp
add
fadd
push
xchg
push
jo
mov
mov
add
loope
xchg
popf
inc
and
repnz
mov
cli
add
nop
push
adc
mov
mov
or
sbb
es
dec
in
xchg
sahf
add
xor
mov
sub
add
sti
jmp
add
add
and
jno
cs
pop
nop
or
cmp
aaa
xor
aad
push
xor
stos
dec
sub
add
and
and
xor
mov
lahf
test
or
pusha
sub
lock
pusha
or
or
jmp
loopne
jle
aad
cld
je
push
mov
xor
sub
pop
les
in
vmaxpd
outs
int
(bad)
test
push
lahf
sbb
and
loop
jbe
or
and
xor
xor
sub
add
es
mov
inc
mov
(bad)
scas
inc
or
add
push
in
mov
adc
scas
add
add
push
mov
xchg
test
or
mov
(bad)
xchg
mov
ja
jp
xlat
je
or
push
sub
mov
xchg
xor
inc
jg
or
call
shl
cmp
fstp
lods
adc
xchg
dec
add
cmp
pop
mov
scas
mov
xor
pusha
xchg
loope
scas
mov
fld
or
ins
aam
lock
jl
das
cmp
push
sar
and
ret
jmp
push
retf
and
mov
test
stos
sbb
push
mov
cld
das
push
dec
pop
xchg
add
push
adc
scas
adc
dec
shl
push
jl
in
add
sbb
push
push
jmp
mov
xchg
loopne
jge
rcl
xchg
cmp
shl
loope
inc
and
pop
pop
inc
nop
add
mov
bound
fild
not
pop
push
push
call
in
jle
mov
inc
inc
add
ror
cdq
adc
xchg
pop
push
out
(bad)
xchg
mov
fadd
ss
or
inc
fnstenv
pop
dec
jae
pushf
fucom
je
sbb
loop
dec
mov
inc
lds
dec
push
cli
imul
fsubr
dec
push
cli
mov
jecxz
jecxz
or
jnp
inc
call
pop
dec
inc
and
and
aam
mov
out
mov
sahf
and
cmp
jno
mov
push
retf
aad
dec
aas
sbb
ficomp
les
cmp
mov
test
mov
push
lods
bound
adc
sar
arpl
ror
xlat
mov
or
mov
inc
lock
add
add
or
mov
dec
nop
add
xor
xor
push
add
add
add
add
mov
jae
pusha
or
mov
or
jne
pop
call
sbb
add
sbb
sbb
ret
mov
sub
dec
adc
push
push
xor
cmp
(bad)
daa
jbe
ja
mov
push
leave
dec
scas
xchg
adc
inc
mov
xchg
xchg
jae
sbb
or
cmc
sbb
mov
sub
or
dec
dec
cmp
pop
adc
jge
or
mov
push
repz
adc
sbb
dec
outs
add
adc
push
lea
sbb
inc
add
movs
cdq
mov
dec
aaa
mov
cmp
pop
add
pop
jmp
jae
pop
test
pop
test
xor
push
(bad)
and
jne
push
popa
clc
mov
repz
xchg
and
dec
aam
pop
push
loope
adc
out
jno
push
adc
mov
xchg
jmp
pop
push
add
mov
mov
in
mov
dec
cmp
sbb
dec
ss
in
jmp
or
cmps
mov
add
or
cli
stos
jmp
inc
jne
mov
sbb
es
add
mov
cmp
or
fadd
inc
dec
xchg
sbb
js
jle
push
clc
dec
out
dec
add
and
push
adc
mov
xchg
icebp
lock
pop
push
lods
not
pop
sbb
cdq
or
add
ins
sub
cmp
fild
and
ret
mov
das
dec
add
mov
or
add
jne
inc
cmp
inc
adc
pop
dec
dec
inc
mov
sub
dec
or
std
or
add
xchg
or
adc
fbstp
adc
add
sbb
loopne
pop
add
sub
out
test
jg
fnstsw
fdivr
mov
sbb
(bad)
push
and
jg
xchg
mov
fidivr
xor
add
inc
clc
lock
mov
(bad)
int
outs
lock
ds
adc
push
pop
push
inc
aas
push
mov
push
sub
mov
rol
or
cmp
lahf
inc
adc
xor
movs
add
jbe
xor
jmp
adc
fwait
sbb
xor
and
and
(bad)
add
xor
loop
cmp
bound
out
push
jle
enter
pop
ja
les
outs
dec
jae
stc
pushf
inc
sbb
dec
or
sub
cmp
das
adc
fcom
xlat
pop
pop
dec
nop
imul
adc
ror
mov
cmp
enter
add
jp
les
imul
sub
outs
inc
add
rcl
cmp
push
push
push
or
test
mov
add
and
rol
mov
add
shl
out
dec
iret
jo
xlat
add
xchg
pusha
and
pmulhw
popa
adc
test
adc
imul
and
or
inc
repz
cli
pop
test
push
lea
add
pop
mov
pop
js
je
inc
dec
xor
iret
sub
rol
ins
je
inc
add
pop
cmp
or
add
mov
mov
or
jne
adc
pop
aam
cmp
test
pop
push
leave
test
push
retf
xchg
in
or
push
jecxz
pop
lea
adc
sbb
movs
push
in
sub
out
imul
rol
(bad)
scas
test
xor
mov
inc
mov
pop
js
pop
je
xchg
inc
inc
mov
mov
push
mov
in
adc
mov
dec
dec
test
mov
or
push
push
pushf
mov
fucompp
mov
jns
clc
or
cmps
push
retf
pop
jl
popf
sub
add
dec
dec
push
dec
js
loop
pop
aad
fcom
mov
mov
or
clc
adc
enter
mov
push
push
sbb
adc
mov
ja
mov
xchg
jo
dec
xchg
jns
xchg
loop
lock
mov
sbb
and
pop
sub
shr
shl
or
sbb
fsubr
jno
xchg
xchg
pop
xor
xor
cmps
(bad)
mov
pop
pop
push
popa
pop
sbb
(bad)
ret
je
add
ja
ins
(bad)
je
xor
and
add
or
sbb
or
adc
iret
jno
sub
test
(bad)
mov
sub
cmp
cmp
sub
jno
pop
and
mov
call
fiadd
jae
cmp
inc
add
push
cdq
lods
cmps
xor
sbb
fs
popa
push
loope
sar
add
shr
xor
or
push
outs
mov
inc
sub
outs
pop
scas
(bad)
mov
cmp
adc
fistp
fild
je
or
or
mov
(bad)
je
push
and
addr16
ret
jmp
js
idiv
adc
ror
je
or
jae
and
and
mov
xchg
adc
adc
xchg
jns
or
inc
in
mov
push
in
mov
or
xchg
push
rcr
push
enter
mov
cdq
inc
xchg
jecxz
rcr
cdq
xor
xor
sbb
pusha
inc
adc
xor
mov
xchg
pop
push
out
and
or
fst
add
outs
adc
mov
cmp
ss
or
(bad)
mov
inc
pop
out
cld
dec
push
jmp
nop
sbb
adc
jae
cmp
add
and
xor
sub
push
movs
ja
add
in
jnp
or
or
dec
and
sub
movs
push
test
enter
and
mov
push
scas
rcr
xchg
(bad)
sahf
scas
lea
fdivr
movs
loop
or
leave
test
fwait
out
outs
imul
sub
adc
inc
loop
cdq
push
xor
cdq
adc
xchg
sahf
data16
movs
jl
cmp
xchg
xchg
pop
inc
push
and
lahf
out
retf
std
jo
add
loopne
shr
pushf
pop
add
fiadd
js
jp
jge
outs
loopne
mov
dec
add
imul
add
mov
xchg
mov
dec
add
push
ins
loopne
lock
add
mov
dec
pusha
cmp
gs
aam
sbb
mov
icebp
fadd
mov
push
pop
mov
into
sysret
outs
mov
hlt
aas
sub
xor
adc
push
loop
int
adc
shl
push
add
jbe
fld
pop
and
inc
or
jmp
or
setl
sub
mov
adc
jne
and
inc
and
sub
ss
arpl
lahf
mov
pop
movs
daa
xlat
lea
test
je
jmp
retf
sub
bswap
push
popf
jl
jnp
mov
mov
ja
cmp
aas
lods
pop
jp
cmp
fcmovb
inc
jl
ins
xlat
fwait
clc
add
cmps
push
adc
sbb
adc
sub
lods
clc
outs
movs
pop
dec
mov
or
out
cmps
rcr
inc
(bad)
cmp
mov
neg
add
mov
(bad)
aam
mov
xor
aam
and
mov
rcl
pushf
and
mov
daa
mov
mov
jne
aam
mov
push
movs
mov
xlat
xchg
push
fcom
outs
movs
fnsave
push
lahf
f2xm1
ds
jbe
add
pop
push
movs
test
jecxz
sub
movs
idiv
adc
stos
sbb
cs
cmp
push
add
es
cmps
sahf
add
jbe
mov
push
push
adc
pop
dec
adc
lock
and
das
or
xchg
cmp
push
loope
push
ret
push
ins
test
(bad)
mov
lods
add
test
xchg
out
or
and
mov
cmc
sub
push
arpl
add
mov
mov
add
(bad)
mov
popa
lods
add
inc
gs
shl
and
(bad)
jo
iret
inc
sahf
sub
ins
loope
pop
mov
mov
cmp
xchg
stc
add
pop
add
and
and
sub
cmp
in
mov
push
mov
fcmovbe
adc
adc
bndstx
push
ret
pop
fimul
outs
adc
pop
dec
jo
pusha
cmps
inc
mov
mov
aas
jno
inc
jo
push
retf
clc
clc
cmps
mov
mov
mov
xchg
test
mov
ins
out
jmp
push
jb
push
sbb
in
adc
aam
add
mov
adc
xor
push
xchg
xchg
cmp
mov
pop
jne
daa
in
jne
add
imul
sub
ret
jne
xor
sbb
(bad)
loop
loope
mov
sbb
or
in
push
dec
outs
and
xlat
test
jmp
adc
pop
dec
ret
sbb
movs
(bad)
jne
dec
pop
add
ror
stos
mov
bound
jb
sar
xor
jge
nop
push
cmp
pop
outs
rcl
mov
and
or
jmp
movs
loope
inc
fstp
or
dec
mov
cmps
mov
push
jb
lods
mov
mov
int3
movs
push
repnz
add
or
cli
rol
fistp
jno
inc
lahf
xor
inc
sbb
pop
inc
and
fs
adc
shl
imul
push
add
adc
(bad)
or
jno
std
or
jle
cmp
popa
cmps
mov
(bad)
mov
pop
lock
pop
ds
adc
and
mov
outs
mov
mov
and
add
out
in
adc
jnp
shl
pop
and
xor
pop
push
jge
jne
add
jae
stc
jbe
lock
(bad)
xchg
sub
xor
pop
sub
inc
and
cmp
pop
int3
and
mov
das
jne
sub
scas
lea
sbb
or
xor
sbb
adc
push
push
call
mov
test
mov
jl
test
push
and
xchg
xor
js
mov
or
jo
inc
xchg
xor
sub
xchg
mov
add
test
add
push
dec
in
add
aam
movs
xchg
cmp
sub
jmp
inc
xor
xchg
sbb
lea
aaa
in
mov
pop
jne
addr16
rol
ds
mov
jo
dec
jae
mov
sbb
adc
mov
push
test
std
pop
jmp
icebp
pop
mov
inc
es
or
mov
shr
pop
sbb
jae
mov
ja
push
nop
mov
nop
mov
or
adc
test
inc
mov
adc
cli
sub
in
(bad)
pop
int
push
mov
sub
dec
cmp
add
add
push
ins
aam
pusha
in
out
xor
mov
loope
outs
(bad)
xchg
sub
mov
sbb
xchg
add
jno
mov
nop
div
clc
sub
hlt
adc
cmc
cmp
mov
add
rcl
enter
pushf
call
sub
and
nop
adc
inc
mov
and
cmps
cmp
or
pusha
loopne
cmp
(bad)
int3
out
cmp
mov
add
add
inc
xor
mov
sar
pop
xchg
and
fadd
arpl
jmp
pop
dec
adc
pop
dec
cmp
add
inc
addr16
out
xchg
and
cld
movs
xor
ror
push
xchg
inc
mov
mov
daa
push
loope
xchg
hlt
add
add
imul
mov
adc
je
pop
and
and
push
xchg
mov
add
std
pop
in
call
push
fsubr
sar
out
sub
cmp
cdq
mov
dec
dec
push
(bad)
xchg
jmp
dec
aas
xor
stos
push
aam
(bad)
xor
xchg
add
pop
lods
scas
mov
movs
sbb
cmc
jo
sahf
les
sub
cmp
push
faddp
ss
push
or
jno
push
test
in
pushf
jne
xchg
jg
and
and
and
xor
push
sub
sbb
mov
mov
sub
and
and
cmp
stos
sub
inc
ret
adc
mov
dec
dec
lods
dec
mov
in
sbb
repnz
test
mov
cmp
or
pop
adc
or
mov
test
push
gs
lods
sub
shl
pop
outs
inc
daa
inc
push
nop
pop
rol
ins
lock
shr
cdq
xchg
or
sub
clc
fadd
push
nop
and
push
adc
mov
add
por
aad
sbb
cs
push
ja
pop
in
jbe
push
adc
xor
ror
inc
lock
xchg
cs
add
sahf
mov
mov
jns
leave
leave
mov
out
outs
rcr
clc
shl
outs
call
jno
cmc
cwde
in
lds
ret
sbb
out
imul
mov
or
jmp
int
sub
and
xor
adc
sbb
in
je
cli
xchg
mov
or
arpl
xor
stc
mov
popa
jle
add
iret
in
or
mov
cmp
mov
pop
test
or
mov
mov
adc
addr16
sub
push
xor
inc
push
loop
jmp
(bad)
scas
test
mov
bound
hlt
inc
mov
std
sub
sbb
adc
test
fdivp
push
outs
enter
clc
(bad)
iret
add
mov
movs
pushf
inc
stc
rol
jns
add
cmp
xor
sbb
mov
xor
dec
js
jne
pop
int3
or
xchg
es
cmps
adc
fsubr
movs
or
mov
and
pop
cmp
shr
mov
mov
add
movs
je
shr
cs
pushf
jne
cli
push
dec
inc
dec
rcl
dec
jne
adc
clc
inc
repnz
call
loop
push
add
retf
dec
mov
mov
sub
add
mov
adc
(bad)
push
xchg
daa
inc
cmp
enter
mov
pop
test
inc
popf
pop
ret
xchg
enter
xor
dec
push
cmps
jae
or
jmp
push
test
and
mov
cmp
or
pusha
mov
mov
mov
adc
cs
movs
(bad)
movs
je
fs
push
sbb
or
pusha
mov
inc
sub
dec
stos
and
sub
pop
pop
or
or
jno
push
(bad)
push
adc
add
arpl
sahf
inc
push
inc
es
addr16
and
mov
jns
jne
jb
and
lahf
in
and
imul
shr
sub
mov
fcmovu
or
add
push
fcom
adc
cmp
cmp
and
test
push
in
ret
push
mov
pop
fadd
lds
sub
push
push
push
sub
and
or
les
mov
fwait
inc
sub
jns
push
(bad)
loopne
stos
in
push
jne
add
push
push
test
jge
jp
adc
repz
xor
cmp
cdq
arpl
inc
mov
je
fs
test
sub
(bad)
or
cmp
jno
ret
out
xchg
push
push
(bad)
dec
call
xchg
push
cmp
std
adc
pop
add
or
adc
and
jecxz
xchg
stos
or
or
cdq
add
sub
sub
dec
sbb
call
xor
xor
adc
adc
mov
mov
and
sti
or
inc
rcl
xchg
mov
ds
fadd
push
adc
cmps
lods
jno
les
nop
sub
test
cmps
and
(bad)
push
adc
add
adc
adc
pop
(bad)
cmp
or
lock
popf
mov
xchg
mov
push
xor
lods
adc
sbb
jne
retf
add
xchg
ins
xor
in
mov
mov
mov
les
js
repnz
pop
or
push
xor
clc
clc
aam
sbb
push
push
cld
fs
inc
mov
fmul
sub
jp
sbb
loopne
xor
push
shl
mov
fcom
jp
aas
cmp
adc
es
sub
jo
adc
jne
leave
cmc
pop
fisttp
test
sbb
push
xor
pusha
popf
popf
pop
or
or
popa
inc
dec
stc
data16
sub
js
adc
adc
popf
jmp
retf
dec
ret
arpl
push
mov
pop
mov
xchg
retf
sbb
ret
mov
xchg
or
ins
dec
add
and
adc
pop
push
and
add
sbb
pop
sahf
pop
push
add
adc
add
ficomp
push
sub
out
jmp
enter
movs
inc
or
sbb
jne
mov
or
popa
xor
movs
xlat
ins
mov
pop
into
(bad)
daa
test
xor
adc
or
mov
pop
test
or
sub
pop
xchg
jl
in
imul
fmul
pop
sti
aaa
int3
sbb
stos
fdiv
mov
retf
push
sub
mov
adc
and
add
addr16
xor
dec
mov
and
call
mov
cmc
outs
sbb
jecxz
sbb
xor
out
in
pop
test
dec
and
sub
les
mov
cmp
xor
adc
or
test
pushf
sbb
or
xor
movs
movs
and
mov
cmp
punpckhbw
adc
mov
nop
ret
outs
dec
mov
push
fcmovbe
clc
ins
push
sbb
test
add
mov
or
test
aas
and
nop
mov
dec
stos
cwde
bound
or
int3
mov
rol
xchg
jns
movs
mov
mov
and
es
and
adc
dec
jo
mov
test
outs
retf
nop
jno
pushf
jns
add
add
xchg
cmp
adc
add
or
mov
pusha
ret
(bad)
nop
mov
xchg
jmp
jb
pusha
stos
pop
pop
sbb
ret
jmp
xor
nop
xor
push
mov
test
xchg
in
xchg
popf
sbb
jo
jb
xchg
fld
ds
ins
inc
mov
rcl
push
hlt
lock
adc
addr16
and
adc
add
cmp
jmp
loope
xor
or
xor
push
test
ret
push
loope
jns
ret
sbb
dec
sub
pop
adc
iret
iret
fcmove
mov
imul
inc
cmp
sbb
mul
mov
add
or
out
mov
sbb
shr
ins
and
dec
or
and
out
loope
add
xor
add
in
xor
push
push
call
(bad)
sbb
(bad)
sti
add
push
cmps
push
sbb
sub
fild
push
or
movs
std
rcl
stc
add
push
repnz
test
stos
mov
bound
adc
sub
mov
repz
fcomp
jmp
cmp
jno
aam
call
loope
cmp
xlat
aad
mov
(bad)
and
fistp
xchg
jns
add
sbb
pusha
or
mov
xor
push
cmp
jnp
inc
imul
inc
loop
fneni(8087
scas
loope
push
or
mov
dec
rcl
and
call
inc
mov
ins
imul
sbb
popa
mov
les
cmp
outs
sub
je
inc
sbb
retf
mov
mov
pop
(bad)
or
mov
dec
or
js
or
xor
add
cmp
add
pop
push
and
imul
push
ret
mov
mov
xlat
aam
ss
jecxz
add
pop
push
rcl
jmp
or
inc
or
leave
and
fsub
data16
xchg
jno
dec
stos
push
xchg
loopne
out
cld
jmp
in
fmul
cmp
sbb
in
or
or
push
adc
inc
nop
sbb
mov
pop
test
sbb
inc
mov
loopne
or
mov
xor
push
pop
pop
ds
in
arpl
add
push
dec
mov
pop
hlt
push
lahf
dec
shl
adc
iret
rsqrtps
sti
xchg
mov
add
ins
leave
dec
cmp
das
aaa
icebp
add
stos
ins
inc
or
loop
loopne
test
or
ss
mov
and
adc
jmp
push
sbb
sbb
or
and
dec
(bad)
and
sbb
xchg
add
and
mov
inc
mov
fld
inc
les
rol
fild
mov
adc
test
jbe
sub
xor
icebp
pop
les
add
pop
inc
and
sbb
ds
mov
mov
ret
lds
mov
aas
cmp
pop
push
adc
fisub
daa
push
or
mov
or
sub
out
mov
rcl
lods
(bad)
cmp
push
pop
lods
gs
xchg
xor
(bad)
data16
push
add
rcl
(bad)
push
jne
sbb
jne
jae
test
mov
pop
loop
dec
xchg
pop
mov
add
dec
sbb
arpl
sbb
aaa
ret
add
xlat
imul
inc
add
sar
les
mov
inc
les
jp
in
into
sbb
mov
jecxz
mov
lea
(bad)
stc
push
sub
mov
loopne
add
push
push
sbb
in
rcl
mov
test
sub
arpl
je
inc
dec
pusha
jmp
jno
jl
push
les
and
push
and
push
adc
popf
push
int
push
lock
pop
pop
inc
and
fadd
xor
add
xor
push
mov
sub
(bad)
nop
popa
pop
mov
and
adc
inc
mov
add
mov
push
xchg
(bad)
movs
xchg
and
or
dec
xor
outs
dec
cs
xor
cwde
pop
xchg
jmp
push
mov
hlt
dec
jge
clc
or
or
push
jmp
pop
jb
loope
cmp
sbb
jbe
inc
and
pop
retf
ins
lock
repnz
repnz
push
dec
xlat
test
and
mov
mov
ja
inc
sub
(bad)
jmp
adc
js
(bad)
call
sub
push
adc
inc
xor
mov
inc
stos
xchg
pop
push
pop
inc
cwde
fist
ror
scas
xchg
popa
xor
add
movs
xchg
mov
sub
imul
mov
(bad)
jo
dec
jmp
test
adc
inc
and
out
(bad)
xor
sub
sbb
int3
test
out
test
test
cs
pop
jae
gs
push
das
cmp
sbb
xchg
add
hlt
rol
inc
dec
data16
sbb
dec
add
les
mov
push
push
lods
or
push
add
ins
dec
jnp
xor
dec
xchg
jg
adc
lahf
inc
aaa
dec
jae
push
xchg
ds
jo
xchg
loopne
sub
sub
xchg
jl
and
sub
and
ins
jge
cs
fldenv
dec
jo
mov
sub
sbb
fcmove
dec
xchg
mov
add
sbb
adc
fisttp
ins
loop
cli
xor
xchg
ficom
xor
out
xchg
mov
pop
mov
mov
and
ret
mov
or
jo
fild
shl
dec
mov
push
leave
mov
in
in
add
gs
mov
xchg
das
adc
mov
add
push
dec
pop
adc
mov
out
out
inc
dec
repnz
daa
rcl
js
enter
xor
ror
outs
jmp
xor
popa
jl
outs
shl
or
pushf
push
lea
(bad)
bound
mov
push
xor
push
inc
add
pop
dec
mov
stc
adc
dec
imul
mov
fs
mov
(bad)
pop
push
mov
add
in
xchg
sub
out
mov
inc
pop
adc
vmaxpd
pop
ret
fnstenv
shl
and
es
add
adc
enter
push
dec
test
shl
aad
mov
rol
js
xor
mov
je
pinsrw
pop
int
arpl
add
inc
xor
mov
push
sbb
hlt
inc
into
cmc
inc
imul
add
sub
lods
adc
fst
adc
push
mov
fdivr
lods
loop
sbb
loopne
sub
mov
add
add
mov
mov
sub
jge
sub
sbb
sbb
mov
xchg
xor
mov
push
fidiv
(bad)
popf
add
pop
jle
mov
je
pop
and
dec
ins
inc
test
es
and
sbb
mov
(bad)
pop
inc
inc
out
push
adc
bound
jae
iret
xorps
into
sbb
iret
mov
xchg
jne
xchg
cmp
sbb
cmc
retf
dec
mov
add
mov
aad
pop
push
lahf
jmp
pop
mov
sbb
sub
lea
icebp
cmp
and
pop
mov
arpl
dec
add
jb
ret
fwait
push
and
mov
mov
dec
scas
inc
rcr
jns
jb
and
adc
sti
lea
pop
repnz
shr
mov
shl
out
jecxz
adc
inc
xor
inc
call
(bad)
movs
test
cmp
cli
aaa
outs
lock
mov
add
test
inc
gs
dec
mov
int3
pop
inc
pop
test
in
add
and
and
xlat
cmp
icebp
xchg
mov
addr16
xchg
jg
dec
push
dec
scas
dec
popa
dec
push
mov
and
test
(bad)
jbe
push
xor
sbb
mov
or
cmp
add
jp
(bad)
cld
popa
inc
jb
mov
mov
jl
retf
or
cmc
loop
mov
inc
cmc
ficom
xchg
int
sub
pushf
push
mov
mov
mov
enter
mov
push
fwait
ror
je
loopne
mov
call
add
adc
call
pop
xchg
cmp
out
ror
test
loop
push
or
mul
enter
ins
sub
test
adc
mov
dec
add
pop
jmp
sbb
sub
adc
(bad)
push
call
xor
std
js
fs
xchg
cmp
jo
pop
fnstsw
sub
sub
adc
js
jns
lods
dec
test
push
push
pop
inc
inc
and
jbe
sbb
inc
xor
mov
cmps
sub
inc
(bad)
clc
daa
pushf
out
inc
je
adc
sbb
int3
and
aaa
cs
js
adc
sar
inc
add
ret
(bad)
xchg
pusha
and
push
ret
add
xlat
ds
rcl
test
lock
xchg
lods
jmp
in
(bad)
jmp
mov
inc
mov
add
or
arpl
sti
inc
xchg
in
adc
ret
or
and
add
sub
xor
scas
dec
fld
add
mov
jl
nop
xor
adc
cmp
adc
je
pop
add
push
and
and
rcl
rcr
add
mov
jb
and
icebp
std
clc
push
add
mov
in
sbb
xlat
xchg
jns
(bad)
sbb
cmps
jae
mov
ficom
sti
or
inc
vcvtss2sd
repz
and
jl
test
inc
imul
inc
(bad)
adc
fcomp
mov
addr16
and
scas
adc
mov
cs
and
and
out
and
aas
jg
mov
aaa
mov
cmp
xchg
hlt
xor
push
push
jmp
dec
cmp
jl
test
pop
or
add
push
sub
mov
loopne
iret
inc
add
dec
pop
push
push
test
jnp
xor
or
push
add
mov
mov
push
dec
pop
(bad)
popf
mov
inc
push
xchg
addr16
xor
sub
and
cmp
(bad)
aad
jnp
lods
inc
imul
xchg
inc
pop
jne
push
dec
or
jmp
jmp
ret
popf
enter
sbb
fst
fsub
mov
rol
cmps
aaa
xor
fld
mov
imul
inc
xchg
xor
imul
mov
and
pop
or
xchg
and
inc
adc
lods
adc
or
stos
call
in
(bad)
es
popa
dec
inc
add
es
jl
adc
cmp
shl
sub
cmps
xchg
pop
inc
pop
pop
mov
inc
dec
imul
leave
xchg
and
adc
test
sbb
jbe
xchg
xchg
aaa
push
xchg
or
lock
adc
rol
shl
adc
push
mov
xor
mov
aaa
pop
imul
aam
or
sbb
mov
or
adc
sub
jge
xlat
pop
test
push
out
xor
push
dec
repnz
jns
xchg
cmp
dec
cmp
call
push
(bad)
ror
fs
jno
fs
mov
mov
loopne
cdq
(bad)
popf
cmp
popa
imul
jmp
fs
lea
xchg
in
jns
gs
pop
add
or
mov
test
imul
std
inc
xchg
sub
cmp
loope
jp
(bad)
and
adc
dec
sub
inc
fdivr
add
push
clc
mov
lea
adc
or
les
and
lods
js
push
fld
dec
pop
fisttp
mov
addr16
mov
adc
add
sbb
push
xchg
ss
sbb
and
jge
lea
jp
xor
div
pop
and
push
xor
push
fild
dec
lock
fsubr
mov
xchg
loop
mov
add
fstp
cmp
pop
and
xchg
mov
ror
repnz
cmp
daa
fsubr
iret
inc
xor
and
cmps
sub
mov
jb
rcr
mov
jno
jmp
sbb
inc
and
push
or
add
xor
adc
mov
dec
rol
gs
pop
inc
pop
ins
int3
int3
mov
push
in
xchg
mov
inc
add
adc
pop
sahf
test
add
mov
test
xor
inc
cmp
hlt
cmp
sub
jmp
or
dec
push
inc
mov
sbb
retf
test
ret
add
jecxz
and
mov
adc
xchg
push
adc
lods
mov
jne
xchg
add
jg
cmp
mov
daa
mov
push
mov
dec
stc
in
jle
btr
lea
jne
or
add
gs
sub
mov
mov
ret
in
ret
adc
xor
bound
adc
cmps
dec
xor
fisub
dec
pop
ret
cmp
pop
inc
xor
jl
cmps
hlt
sbb
mov
popa
sub
mov
inc
add
fmul
push
sahf
xchg
loop
jmp
cmp
or
mov
adc
and
and
data16
in
rol
sub
or
add
leave
pushf
loope
push
and
jnp
add
add
jmp
mov
aaa
or
and
push
rcr
adc
adc
adc
retf
sbb
sub
and
inc
test
add
jge
or
fiadd
add
or
sbb
movs
push
mov
les
add
mov
ins
add
retf
(bad)
cmp
mov
dec
sbb
es
je
or
sbb
sbb
cmp
iret
push
push
ret
in
loope
xchg
pop
push
push
mov
xchg
das
sbb
aam
aam
xor
movs
push
jno
loope
call
mov
call
jmp
adc
push
ret
and
dec
test
xchg
out
add
mov
(bad)
sbb
je
lahf
sbb
int
mov
push
and
cmp
loop
dec
loop
pop
sahf
mov
lds
xor
jge
sbb
and
popa
call
pop
pop
popa
lock
and
jmp
and
mov
adc
inc
test
inc
and
xor
jmp
xchg
add
inc
jmp
push
dec
arpl
fistp
or
dec
jno
test
pushf
ror
xor
inc
lds
or
ds
mov
sub
outs
add
xchg
rcl
nop
pop
xchg
inc
sbb
jno
mov
(bad)
bound
jmp
ins
ja
and
or
rcr
inc
cwde
xlat
mov
ret
test
cmp
cmp
sub
or
jns
jae
and
movs
mov
adc
or
xor
sbb
jp
mov
pop
rcl
mov
dec
push
push
pop
and
jbe
dec
je
dec
xchg
and
add
les
xor
mov
lahf
shl
mov
test
dec
xor
sbb
cmc
popa
icebp
repnz
shr
xor
shl
or
add
sbb
jmp
into
dec
mov
adc
add
or
inc
ret
je
(bad)
adc
dec
dec
fisttp
pop
and
sub
push
sbb
mov
dec
mov
clc
mov
pop
idiv
mov
dec
js
ret
fld
aaa
add
adc
mov
out
popf
ficomp
jl
sub
ficom
clc
repnz
push
xor
outs
jle
sub
add
aaa
push
or
pop
pop
add
pop
mov
inc
jecxz
push
pop
inc
adc
neg
cmc
push
xchg
fidiv
adc
cmp
fiadd
ss
jmp
pop
dec
add
or
mov
mov
dec
pusha
sbb
fisttp
scas
sub
lods
mov
sti
gs
cmps
arpl
xor
push
add
xor
cmp
fsubr
out
cmp
or
jo
and
sahf
out
xchg
and
sub
sub
ret
push
jne
xlat
add
sbb
xchg
mov
sub
cmps
imul
mov
pusha
mov
adc
ret
ret
aam
into
loop
add
or
pop
scas
mov
jl
hlt
xor
out
scas
imul
xchg
xor
repnz
xchg
jne
adc
adc
(bad)
scas
fnstcw
pop
retf
sub
push
add
js
hlt
(bad)
js
pop
div
imul
add
cwde
pop
outs
add
mov
cdq
sahf
jne
adc
retf
inc
xor
mov
sub
push
or
repz
fst
mov
(bad)
aaa
into
pop
icebp
imul
pushf
adc
fimul
jbe
rcr
mov
loope
or
(bad)
imul
cmc
push
pop
pop
rcl
dec
adc
loopne
add
mov
mov
fst
in
adc
jnp
or
fs
int3
adc
rol
sub
or
js
and
sub
les
mov
sbb
daa
and
lock
pop
fadd
stos
cld
xchg
dec
pop
xchg
popa
ret
outs
retf
adc
and
lds
push
mov
xor
icebp
pop
es
xor
push
pop
sub
adc
sbb
or
push
scas
(bad)
mov
sbb
dec
lods
jmp
adc
sbb
inc
cmp
inc
mov
mov
neg
and
mov
mov
add
or
and
(bad)
call
mov
mov
mov
mov
push
push
xchg
pop
inc
pusha
dec
push
call
jo
add
push
pop
xchg
adc
sub
xor
and
leave
mov
push
mov
xor
push
int3
int3
or
xchg
inc
repnz
mov
mov
dec
fcom
inc
add
jg
mov
mov
push
in
xrelease
imul
sti
xchg
(bad)
mov
mov
sti
iret
lods
dec
movs
icebp
jle
pop
sbb
aad
mov
adc
leave
in
pop
inc
imul
inc
cmp
or
mov
or
cmps
xchg
sbb
push
push
sti
sbb
adc
xor
retf
push
clc
jge
aam
jge
call
and
inc
out
out
jbe
dec
or
push
and
push
push
adc
enter
push
inc
jmp
add
lods
rcr
xchg
sbb
test
adc
or
push
mov
aam
add
cmp
popa
sbb
fmul
dec
mov
cwde
and
inc
icebp
and
mov
test
pop
adc
loopne
jmp
enter
sub
push
test
fst
xchg
or
out
cmp
ds
shl
pop
iret
xor
inc
jmp
adc
add
inc
and
fisub
cs
xor
push
adc
sbb
test
and
in
pop
inc
js
mov
push
mov
loopne
and
cld
outs
test
jb
sbb
or
popf
xchg
xor
pop
ins
add
cmp
jnp
fsubr
inc
dec
push
arpl
xor
inc
popa
wrmsr
push
mov
inc
cli
inc
iret
leave
loop
leave
mov
mov
push
rcr
push
out
in
shl
jecxz
and
mov
leave
arpl
cmp
int3
sbb
in
inc
and
rcl
test
mov
leave
cmp
jmp
cmp
nop
jl
push
pop
test
inc
ds
jg
jge
data16
add
mov
mov
push
lock
adc
push
test
xchg
cwde
jl
leave
jle
out
mov
xchg
les
mov
ret
outs
out
inc
xor
fwait
jl
loopne
mov
xor
mov
adc
add
push
push
add
push
cmovne
push
cwde
sub
and
xor
ja
and
dec
mov
or
or
out
int3
xor
pusha
in
sbb
and
xor
or
fprem1
ins
add
dec
add
xor
add
pop
neg
adc
popa
or
jg
call
call
cld
sbb
sbb
xor
jns
push
ss
jle
sbb
sub
sbb
enter
scas
fwait
mov
outs
jmp
rol
cmp
pop
ss
mov
or
xchg
jno
xor
add
loopne
or
fdiv
int
mov
dec
in
push
adc
xchg
push
xor
ficom
call
mov
dec
mov
add
and
jb
(bad)
cmps
inc
pop
cmp
popa
ins
fdecstp
inc
cmps
inc
sub
jmp
(bad)
xor
sub
hlt
je
ret
psubb
push
sub
enter
fsubr
or
sub
lds
inc
les
shl
loope
(bad)
rcl
xchg
sbb
ins
loope
xchg
push
mov
into
adc
sti
jecxz
fcmovnb
cli
add
ss
bound
call
mov
ja
movs
movs
push
(bad)
in
xchg
mov
je
inc
xor
cmp
pop
inc
fild
or
sub
xchg
lods
push
shl
add
add
sbb
dec
je
cmp
mov
call
loopne
adc
ret
sub
data16
gs
push
push
movs
test
and
popa
adc
call
lods
sbb
push
pop
jmp
pop
rcl
adc
cdq
sbb
dec
push
mov
es
cwde
(bad)
sub
cmp
test
or
outs
std
(bad)
xor
enter
add
sbb
push
inc
fwait
dec
or
push
mov
mov
xchg
popf
arpl
xchg
mov
cmp
inc
cmp
shl
xchg
cmps
add
mov
adc
push
fild
sti
push
addr16
and
sbb
mov
cmps
pop
or
paddw
push
lock
icebp
inc
dec
jmp
call
hlt
ins
scas
shl
add
call
jns
js
sub
lock
pop
pusha
jb
jnp
sub
add
adc
sar
les
pop
add
aam
ror
cli
dec
jmp
sbb
jmp
push
or
adc
mov
jne
or
aaa
mov
pusha
cld
adc
ret
sbb
in
nop
inc
add
les
sbb
or
and
cmp
and
mov
pop
push
pop
mov
sub
xor
data16
sar
adc
cmps
sbb
cmps
das
mov
mov
shl
cmp
sub
push
ret
mov
sbb
jmp
dec
cmp
jne
add
cmp
retf
dec
fwait
xchg
int3
adc
je
mov
xchg
cmp
jecxz
das
inc
les
mov
scas
int3
mov
xlat
sub
jbe
clc
xchg
mov
push
leave
mov
test
dec
mov
add
repnz
das
add
pop
or
lfs
cmp
(bad)
aam
hlt
ss
pop
(bad)
sbb
cmps
adc
lock
gs
pop
shl
pop
pop
aaa
arpl
xor
push
popa
loopne
cmp
mov
xor
cmp
mov
xor
xchg
fcom
and
cmps
inc
or
(bad)
rol
mov
mov
dec
mov
ins
ret
mov
xor
or
nop
arpl
fdiv
inc
lea
jl
push
xchg
mov
add
or
dec
pop
addr16
push
pop
int3
jne
inc
iret
push
pop
jmp
mov
push
jle
add
sbb
sbb
jmp
ret
cmp
cmp
cmp
pop
jmp
or
sub
jo
movs
pop
pop
(bad)
pop
add
jo
je
mov
je
and
and
repnz
push
add
adc
shr
xor
test
and
push
push
test
cmp
or
lahf
pop
fnstcw
pop
or
pop
or
push
push
jne
jmp
add
dec
popf
pusha
test
jbe
es
mov
imul
or
loopne
(bad)
mov
sbb
rcl
and
sbb
inc
xchg
pop
iret
pop
sbb
nop
dec
cdq
pop
mov
push
cmp
int3
add
lods
xor
inc
xor
pusha
outs
jne
(bad)
or
pop
sahf
int3
fisttp
ret
sti
es
sahf
cmp
sub
(bad)
pop
pop
jmp
push
pusha
pushf
nop
mov
sbb
push
or
sbb
loopne
add
in
(bad)
fadd
jp
cmp
adc
mov
sbb
cli
push
xor
pop
test
cmp
pop
sub
xchg
out
xor
inc
fsub
inc
cmc
and
and
cmp
clc
es
or
xchg
inc
jmp
pop
xor
ret
outs
scas
and
aas
or
inc
in
pop
loop
and
inc
and
jbe
sbb
fst
mov
shl
inc
stos
push
ret
cmp
mov
sbb
xchg
add
scas
imul
imul
test
mov
xlat
jne
push
add
and
retf
adc
xchg
call
dec
or
imul
push
test
sub
(bad)
mov
cmp
sbb
pop
dec
js
jl
add
push
lds
stos
mov
ja
add
jmp
int
cmc
pop
nop
and
jp
xlat
dec
pop
popa
dec
pop
imul
jle
(bad)
sub
ret
push
jo
xlat
enter
jl
adc
lods
cmps
test
mov
int
cmp
cmp
loopne
or
fwait
push
ror
lock
lock
jnp
adc
ins
iret
in
xchg
out
and
pushf
iret
lea
xchg
mov
and
xchg
fwait
lods
ret
fwait
nop
(bad)
fcomp
popf
mul
or
adc
lods
dec
push
mov
mov
aam
add
ins
mov
add
xor
adc
aaa
mov
push
cli
push
loope
push
dec
xor
jl
push
xchg
sub
cmp
adc
xor
shl
xor
mov
ja
inc
jecxz
dec
inc
mov
or
sbb
mov
adc
pop
mov
jo
ficom
shl
leave
pushf
mov
and
mov
imul
popa
jne
leave
add
cmc
dec
and
or
and
(bad)
fwait
xlat
in
fcmovnb
and
retf
adc
mov
mov
iret
outs
int
xor
rcr
xchg
(bad)
stos
xor
and
je
inc
push
nop
test
xchg
(bad)
loop
mov
dec
pop
into
push
into
push
fmul
movs
mov
jg
push
addr16
mov
pop
mov
cmps
push
or
dec
dec
push
adc
xchg
inc
dec
mov
and
repnz
xchg
clc
mov
rcl
shl
or
xchg
sub
loop
push
cmp
inc
or
jmp
mov
test
loopne
movnti
jnp
test
and
sbb
lds
xchg
into
adc
sbb
add
add
rcr
test
stc
aas
push
xchg
add
das
xchg
push
or
jle
sar
push
scas
mov
adc
pop
jmp
cdq
push
and
push
push
sbb
inc
pop
lds
dec
dec
ret
jmp
add
adc
or
pop
(bad)
std
call
add
push
dec
mov
adc
inc
and
shl
and
test
dec
popa
mov
ds
jo
add
dec
or
fild
jne
lahf
sbb
xor
addr16
shl
enter
push
push
or
adc
dec
call
ret
or
leave
test
sbb
ja
push
push
pop
outs
dec
or
and
aaa
sbb
push
dec
mov
jge
inc
adc
sub
mov
mov
dec
mov
sbb
ret
ds
mov
adc
sbb
or
jo
icebp
lods
mov
pop
dec
cli
dec
push
stos
ins
push
test
sbb
dec
sar
jmp
imul
jge
and
and
lea
push
mov
shl
or
cwde
inc
cmp
sub
pop
inc
and
clc
jg
ror
xchg
(bad)
pushf
stos
jbe
or
xchg
jmp
fs
xor
or
and
adc
sbb
adc
test
dec
xor
mov
sbb
je
push
sub
dec
cmp
repnz
push
add
ficom
mov
sub
xchg
dec
dec
sub
xchg
xchg
add
and
push
push
jg
jo
dec
pop
mov
cmp
enter
push
cmp
jl
nop
mov
jmp
dec
and
add
enter
std
test
daa
or
mov
dec
cmp
fld
push
adc
daa
pop
aaa
out
neg
je
outs
mov
xchg
push
rcr
mov
jmp
ins
mov
xor
pusha
jne
iret
imul
pop
and
xchg
mov
push
pusha
inc
ins
add
cmp
jne
mov
cmp
loopne
adc
stos
push
aad
inc
fild
fmul
enter
sbb
jbe
popa
and
and
faddp
pop
push
int
shl
mov
xchg
push
xor
lea
inc
push
test
and
inc
pop
cmps
sub
cld
dec
push
push
pop
les
adc
mov
mov
je
movs
pop
pop
add
jle
rcl
sbb
in
cmp
sbb
scas
fld
sub
ins
xor
stos
and
ins
test
jg
(bad)
js
sub
je
ror
icebp
rcr
or
xor
lods
arpl
pop
test
or
fs
or
add
in
fadd
out
or
stos
loopne
cmp
cmp
push
sbb
fmul
sub
inc
and
sbb
dec
or
or
jmp
jmp
xor
dec
shl
and
sahf
jb
popa
out
jl
(bad)
leave
test
je
(bad)
call
outs
icebp
mov
xchg
adc
xchg
fs
pop
inc
aas
push
push
fild
adc
cmp
(bad)
and
xor
in
das
dec
aaa
test
cmp
mov
and
and
ret
jmp
mov
cwde
mov
jl
adc
test
mov
mov
lahf
mov
les
xchg
nop
sbb
and
into
sub
mov
sbb
sar
push
and
and
lds
add
mov
retf
sar
pushf
sub
das
daa
sbb
xchg
adc
jne
stos
mov
push
pop
pop
inc
movs
sub
or
add
cmp
sub
inc
loope
arpl
dec
stos
iret
push
xchg
rcl
push
add
pop
mov
adc
mov
add
inc
add
(bad)
add
mov
test
lock
mov
adc
shr
push
sub
add
gs
add
movs
fdivr
and
push
jg
icebp
imul
inc
pop
mov
push
sub
movs
(bad)
test
clc
adc
jno
sbb
and
ss
adc
popf
jnp
in
pushf
(bad)
lods
or
in
jne
add
ins
test
js
mov
dec
mov
les
loope
inc
pop
rcl
push
or
jge
call
loopne
imul
sbb
add
sbb
jecxz
aad
addr16
push
push
add
(bad)
add
dec
in
sbb
mov
(bad)
hlt
add
rcl
ret
pop
add
mov
cwde
pop
adc
add
ss
push
sahf
or
stos
sub
xor
pop
cmp
out
leave
sbb
push
ret
xor
and
ss
push
ret
stos
adc
jl
sbb
cmp
ror
(bad)
out
test
popf
les
and
pop
dec
dec
mov
add
mov
mov
pop
or
push
mov
stos
cs
and
adc
jmp
data16
add
adc
push
jne
mov
cmp
fst
or
movs
pusha
xchg
jge
jne
scas
inc
js
gs
test
mov
mov
pop
in
jb
xchg
mov
call
xor
cwde
rcl
into
push
scas
add
arpl
and
das
jno
(bad)
pusha
jmp
and
retf
sbb
add
cli
xchg
add
add
lods
dec
repnz
sbb
sub
je
or
jno
inc
cwde
fnsave
popa
test
mov
add
and
push
iret
jg
mov
ror
inc
mov
mov
rcr
mov
jne
pushf
cwde
outs
popa
xor
mov
add
imul
and
push
mov
xor
popf
sbb
neg
jg
das
jne
dec
sbb
jle
jb
inc
or
xchg
sbb
je
popa
ret
daa
xchg
sbb
int3
and
sub
push
lds
xor
and
mov
push
xchg
mov
dec
adc
ss
mov
push
xor
sub
imul
movs
in
pop
add
push
hlt
mov
cwde
cli
mov
sub
sar
js
pop
test
adc
mov
jno
cmp
mov
fwait
mov
test
or
push
(bad)
add
retf
sub
scas
mov
sar
mov
sub
or
mov
shl
sbb
dec
loope
pusha
pop
test
(bad)
xchg
jae
push
adc
ret
adc
and
push
dec
fdivr
sub
pop
mov
or
in
adc
ret
mov
dec
loopne
mov
and
and
sub
sbb
icebp
add
cmp
add
mov
adc
inc
mov
into
ins
sub
pop
or
push
add
jle
or
push
jmp
dec
fadd
push
xlat
outs
mov
inc
mov
int
adc
and
push
inc
pop
jnp
inc
and
sbb
jg
adc
jae
rol
add
pop
and
test
sbb
les
mov
sub
nop
adc
or
xor
pop
mov
fld
mov
shl
addr16
loopne
(bad)
and
add
popa
pop
and
xor
outs
adc
pop
bound
mov
cmps
add
cmp
add
and
push
push
jg
mov
and
push
pop
mov
iret
push
fstp
stc
mov
mov
mov
jl
jmp
dec
cmp
inc
push
js
mov
fild
sbb
ret
cmp
into
test
(bad)
je
and
mov
repz
sbb
jno
outs
xor
mov
mov
loope
stos
fdiv
xor
int3
adc
push
lock
adc
push
adc
rol
icebp
imul
push
and
pop
cwde
sub
push
(bad)
mov
pop
adc
push
push
xchg
adc
mov
retf
outs
xchg
pop
mov
pusha
aaa
pop
sbb
fs
cs
dec
pop
(bad)
jmp
jmp
mov
inc
fld
push
jp
int3
imul
xor
adc
and
or
imul
pop
inc
sub
ret
add
push
(bad)
xor
dec
push
mov
adc
js
cmps
fs
(bad)
mov
and
and
or
cmp
or
jno
shr
dec
pop
xor
add
inc
ss
or
outs
fwait
add
pop
ret
xchg
mov
jl
(bad)
cli
movs
or
enter
test
jle
or
add
fdiv
call
cmp
pop
inc
mov
call
adc
mov
scas
std
mov
neg
xchg
fidiv
scas
or
add
add
ins
cwde
or
and
mov
add
popf
push
push
cmp
cmp
cmp
mov
test
inc
repnz
inc
mov
test
adc
jle
or
lea
push
aad
cmp
add
mov
sub
out
lods
fwait
sbb
sbb
pop
xchg
add
and
and
paddq
add
das
add
clc
fldenv
lea
mov
or
adc
jnp
fdivr
mov
mov
inc
push
pushf
mov
aam
inc
push
xor
rcr
cmp
push
dec
sbb
add
or
inc
dec
mov
test
push
mov
repnz
call
push
xchg
retf
loopne
in
test
inc
inc
inc
ret
lods
out
scas
or
cmps
cs
pop
add
add
jns
push
or
call
ror
mov
cmp
sbb
cmps
and
fs
push
xor
pop
push
daa
aaa
repnz
aad
adc
sbb
(bad)
jno
cmc
push
cmp
test
loopne
jo
das
or
sub
cmp
fmul
enter
push
(bad)
and
movs
jns
fdiv
cmp
xor
cmp
pop
cmps
adc
lock
mov
sbb
lods
xor
dec
pop
clc
push
out
push
call
(bad)
adc
imul
adc
nop
call
or
push
ficomp
pop
xchg
dec
cmp
not
add
push
mov
add
add
imul
jmp
les
in
cmp
or
aaa
movs
adc
clc
vpperm
jns
mov
aam
enter
mov
lea
jae
adc
add
xor
xchg
out
xor
ins
adc
test
adc
mov
jbe
outs
dec
lea
test
adc
inc
loopne
mov
or
xor
into
ja
movs
mov
push
fiadd
pop
sbb
sub
pop
cld
mov
repz
push
inc
ins
addps
mov
pop
pop
test
or
jo
fld
imul
push
popa
aas
xor
mov
clc
xchg
dec
sub
mov
test
lea
inc
popa
xor
cli
xchg
cmps
or
dec
cmp
cmp
adc
iret
xchg
jbe
loope
out
mov
push
aaa
mov
loopne
mov
(bad)
push
dec
dec
lea
jle
jns
add
push
push
xor
add
add
adc
pop
add
push
xor
out
fadd
in
mov
push
cmp
lahf
add
sub
imul
inc
pop
fild
jmp
and
inc
inc
add
push
ret
loop
add
push
sbb
push
std
or
mov
sbb
test
mov
data16
loopne
adc
nop
call
cmp
mov
lods
adc
icebp
jecxz
jnp
jo
mov
xchg
mov
movs
push
add
aaa
lea
adc
add
push
scas
mov
lahf
add
test
aam
xor
sbb
xor
jns
mov
or
loopne
push
jmp
dec
dec
leave
daa
pop
test
call
or
xchg
(bad)
xor
sub
out
int3
repnz
sub
push
leave
push
xor
aam
pushf
push
or
pop
mov
mov
jmp
shl
adc
rol
mov
adc
sub
int3
xchg
mov
repz
jmp
inc
enter
adc
jle
int3
cmp
pop
jp
pop
mov
and
test
mov
sar
aad
xchg
mov
nop
add
repnz
ret
push
fwait
mov
ret
jp
scas
aaa
pop
movs
hlt
inc
movs
test
add
jmp
inc
dec
mov
jl
pop
inc
xor
inc
ret
sbb
mov
cmp
pop
call
inc
sbb
lea
test
sahf
xchg
sub
test
sbb
or
jmp
pop
(bad)
outs
sbb
add
adc
pop
and
xor
cmp
xchg
xchg
push
sbb
jmp
(bad)
jp
loop
add
cwde
into
popf
and
mov
movs
movs
sbb
fs
jnp
mov
in
mov
int
dec
inc
ret
mov
pop
inc
not
inc
cmps
push
test
or
mov
cwde
pushf
jle
push
jno
cdq
loop
push
stc
aad
add
mov
push
jo
inc
enter
push
push
jp
mov
out
je
cwde
push
popf
mov
jmp
push
inc
inc
sbb
aam
pop
jae
fwait
addr16
jnp
mov
call
loopne
sbb
je
inc
cmps
add
add
fst
shl
and
dec
call
xchg
and
add
sar
mov
xchg
dec
add
icebp
ins
ja
pop
arpl
enter
inc
loope
pop
imul
add
scas
rol
popf
aaa
movs
push
and
jmp
lods
sub
(bad)
xchg
jecxz
pop
mov
les
jmp
pushf
push
adc
cmp
lds
out
std
fwait
loop
test
add
ins
jo
jecxz
fmul
inc
sti
(bad)
lea
xchg
push
rcr
or
xchg
ret
mov
iret
mov
adc
in
stos
fadd
je
dec
mov
jne
push
dec
cwde
aas
add
sub
inc
xor
loopne
sete
cmp
sbb
sbb
jmp
jne
cdq
pushf
adc
or
loope
cwde
pushf
inc
or
pop
movs
adc
xchg
add
sub
rcr
adc
sbb
push
es
iret
add
rcr
xchg
jo
or
jp
or
imul
mov
and
inc
loopne
add
lds
mov
sbb
inc
retf
std
xchg
mov
daa
pop
sub
and
sbb
xor
cmp
sub
adc
pop
movs
mov
outs
add
or
adc
mov
push
leave
adc
pop
lahf
xor
sbb
xchg
mov
pushf
add
push
lds
jle
xchg
pop
inc
mov
mov
sti
jle
addr16
jecxz
(bad)
cmps
lahf
add
adc
pop
xor
pop
pop
sbb
adc
aad
stos
mov
cmp
popf
outs
movs
push
jecxz
shl
add
add
les
mov
repz
inc
repz
dec
sbb
inc
xor
xor
je
push
(bad)
and
push
test
ja
push
and
test
fisubr
cmp
adc
mov
ret
cmc
push
lahf
and
les
inc
push
add
adc
add
out
mov
and
mov
xchg
cdq
or
push
sbb
xchg
pop
pop
and
inc
cwde
pop
mov
xor
or
enter
or
cmp
or
jne
jno
adc
test
xchg
jns
push
xchg
xchg
jno
xchg
and
adc
add
mov
rcl
adc
(bad)
and
xchg
xchg
es
test
arpl
or
jmp
adc
inc
test
sbb
sbb
je
or
add
stc
jns
aaa
add
sbb
and
cmp
test
daa
stc
test
pop
push
push
imul
mov
adc
mov
add
ins
fcom
xchg
and
mov
add
clc
dec
add
push
int
mov
test
and
jne
scas
test
pop
xchg
icebp
push
xlat
or
std
outs
test
sub
mov
mov
fist
nop
retf
shl
adc
inc
mov
cmp
out
cmp
int3
out
pushf
test
push
jmp
in
cmp
loop
fs
add
mov
sub
lea
js
ret
pop
out
or
cmp
adc
mov
leave
xchg
mov
xor
lods
push
aaa
cmp
jg
sbb
jb
jne
je
rcl
int3
mov
mov
popa
jne
imul
rol
dec
js
add
sub
xor
jbe
pop
adc
out
mov
xchg
xor
pop
imul
pop
xchg
mov
add
xchg
sub
jb
cwde
xor
gs
mov
adc
shl
add
add
shl
and
jne
loope
test
add
xchg
pop
adc
fldcw
add
mov
call
mov
je
xor
sbb
call
aaa
mov
mov
mov
dec
adc
aad
test
mov
pop
mov
adc
add
mov
jae
pop
sti
mov
in
mov
mov
es
clc
cdq
sti
out
in
add
inc
xor
push
push
mov
push
adc
dec
std
aaa
jne
mov
inc
mov
shl
mov
xlat
jns
sub
and
dec
adc
or
mov
xchg
lods
adc
and
sahf
and
adc
lahf
mov
in
ja
push
and
add
sbb
les
sbb
shr
push
imul
add
mov
nop
pusha
and
ins
xor
inc
les
pop
adc
iret
adc
retf
mov
pop
cmp
pushf
es
pop
add
jne
jb
dec
ror
add
push
ds
shl
pop
jb
xor
or
fist
pop
add
lods
shl
push
retf
popa
xchg
cmp
loopne
aaa
lods
dec
dec
dec
or
xchg
push
or
rsm
add
xor
cmps
dec
jno
add
stos
(bad)
cmps
xchg
or
xchg
adc
add
jp
pop
adc
fstp
fiadd
call
ror
inc
add
sbb
movs
pop
and
icebp
cs
and
add
retf
cmp
jmp
lds
mov
jl
mov
fwait
mov
test
adc
ret
dec
add
sbb
cdq
jne
inc
sahf
lea
jg
and
(bad)
data16
call
bound
hlt
ret
inc
or
and
ret
daa
xchg
mov
inc
popa
pusha
jne
inc
fcmovbe
imul
xor
sub
pop
ins
jmp
das
add
dec
push
pop
push
pop
mov
hlt
push
sub
pop
or
add
push
pop
jae
outs
adc
jnp
and
push
adc
dec
ja
data16
dec
mov
stc
cwde
or
cmc
ja
scas
movs
xchg
xchg
add
je
mov
mov
sub
adc
or
je
(bad)
xor
outs
js
cmp
movs
sti
addr16
sbb
mov
sbb
pop
adc
mov
inc
add
add
add
xor
stos
dec
arpl
xchg
add
lods
dec
cmp
sub
mov
mov
shl
test
adc
push
cmp
pop
cmps
xchg
add
ret
inc
sbb
inc
ret
cmp
xor
push
or
cmc
or
add
ret
or
lods
push
and
sbb
add
loope
xchg
mov
or
sbb
jo
adc
fsub
and
dec
pop
sub
ror
jns
inc
add
mov
rcr
dec
or
sbb
cmp
cld
leave
and
scas
mov
and
mov
or
in
jns
or
jnp
test
add
jle
cmp
jg
add
lea
imul
pop
mov
inc
sti
cdq
push
mov
xor
add
mov
adc
inc
add
push
test
mov
or
sar
lods
rcl
inc
popf
push
fidiv
jmp
(bad)
xor
and
sbb
ret
(bad)
(bad)
fmul
mov
leave
mov
stos
pop
ins
sub
out
inc
inc
mov
imul
aam
or
mov
mov
popa
loope
popa
inc
push
add
cmp
pop
and
arpl
nop
add
in
loopne
call
add
pop
add
add
call
xchg
adc
pop
call
xchg
and
push
add
add
mov
push
in
sbb
vmwrite
jle
cs
pop
cld
outs
add
jmp
out
or
dec
push
xor
gs
xor
aam
inc
test
mov
push
loope
sub
mov
pop
bnd
adc
iret
ror
cmp
nop
arpl
push
inc
push
pop
pop
push
sbb
rol
xor
dec
jae
push
sub
mov
push
popa
inc
or
push
in
xchg
add
popf
scas
scas
push
or
inc
add
xor
push
(bad)
js
mov
jl
test
lods
pop
rol
jne
loopne
je
jge
xor
or
xchg
and
sbb
adc
retf
shl
sbb
rcl
(bad)
sub
clc
xchg
pop
test
in
dec
sar
xchg
ins
ja
or
repnz
xor
enter
iret
mov
or
rcl
or
lea
mov
add
adc
mov
push
dec
or
cmp
js
dec
je
iret
pop
sbb
imul
fnstenv
imul
call
je
mov
ret
idiv
adc
jle
inc
pop
(bad)
pop
pop
xchg
aad
jge
fimul
test
sbb
add
rol
xor
push
sbb
push
inc
out
mov
idiv
mov
inc
cs
test
xor
xchg
dec
call
pusha
in
add
add
rol
jae
cdq
div
je
mov
gs
and
inc
in
xchg
jle
test
mov
push
in
dec
dec
shr
or
mov
add
add
(bad)
cli
sub
loop
xor
jmp
jecxz
adc
aaa
sub
adc
dec
arpl
and
out
sbb
push
stos
sahf
out
sahf
dec
mov
rep
push
mov
adc
mov
or
xor
xor
iret
push
sub
hlt
pop
movs
pusha
dec
push
jne
push
adc
push
addr16
push
hlt
in
inc
sbb
imul
cmp
cmps
imul
shl
inc
ins
inc
add
dec
test
and
mov
sbb
dec
fs
add
inc
cmp
or
call
cmp
add
test
pop
xor
xor
ror
xor
sub
loope
fisttp
ja
mov
pusha
movs
or
int3
adc
and
jne
ror
mov
mov
pop
cli
pushf
push
jg
adc
pushf
mov
pop
iret
stc
adc
lea
or
adc
cmc
xchg
daa
push
aas
jmp
push
push
test
add
mov
add
xchg
shr
fwait
sub
mov
inc
add
nop
xchg
loopne
mov
iret
je
cli
mov
popa
pop
sub
dec
and
or
mov
push
dec
sbb
sti
aas
or
in
mov
and
mov
mov
test
add
xor
sbb
sbb
imul
push
sbb
cmp
add
and
jmp
dec
add
popa
and
enter
jns
jge
and
xchg
fwait
and
addr16
and
mov
mov
or
xchg
js
es
and
xlat
add
leave
push
sbb
push
stc
inc
cmp
clc
and
stc
mov
push
mov
or
or
pop
sub
or
clc
push
xor
push
iret
aaa
stos
inc
sub
pop
cmp
int
pop
and
movs
and
or
dec
fs
jns
cmp
push
push
jns
jo
sbb
and
div
pop
jle
fs
xchg
lock
dec
loop
adc
add
xlat
sub
mov
mov
adc
fisub
sbb
adc
push
mov
pop
xor
and
or
mov
jb
shr
mov
fistp
adc
cmps
sbb
sbb
mov
popa
(bad)
pop
ret
scas
js
dec
movs
loopne
pop
popa
pop
cmp
jne
mov
aaa
xor
jns
push
mov
rcl
int3
push
dec
cmp
lea
add
pop
and
jne
jge
dec
cmp
sbb
push
inc
push
mov
mov
cmp
sbb
mov
test
and
outs
paddw
sub
xchg
mov
je
ja
lock
sbb
hlt
pop
nop
retf
add
out
ds
aas
sub
and
cmp
add
fmul
or
add
les
fidiv
mov
and
push
add
push
je
sbb
cld
imul
add
push
push
into
loop
add
loope
sub
jp
shr
mov
out
add
mov
out
dec
nop
sbb
mov
icebp
mov
not
mul
mov
dec
mov
cmp
push
icebp
push
daa
dec
add
xchg
push
dec
adc
and
xchg
adc
adc
sub
and
sti
enter
scas
cmp
retf
and
cmps
adc
or
sbb
add
cdq
xchg
repz
dec
or
sbb
stc
jmp
inc
jo
pop
inc
xchg
adc
dec
adc
add
pop
and
adc
mov
pop
add
and
cdq
sbb
sbb
mov
data16
cmps
pop
or
xor
push
mov
mov
xor
mov
fs
dec
push
mov
out
or
shl
inc
jnp
cmp
in
jne
xchg
jl
sbb
mov
hlt
outs
fnstcw
and
jo
pop
das
push
es
add
adc
movs
or
add
es
in
dec
jmp
jb
push
iret
add
mov
or
sbb
and
dec
popf
cmps
arpl
repz
rcl
pop
add
in
sahf
inc
int3
jl
outs
cmp
inc
add
jp
sub
xor
cmps
push
xor
xor
pop
and
dec
add
dec
inc
adc
dec
shl
pop
sub
stos
xchg
nop
adc
jg
fistp
out
mov
or
lea
movs
mov
mov
mov
inc
xchg
push
push
ja
dec
and
call
or
xor
jno
leave
pop
and
(bad)
or
sub
cwde
add
xchg
fisttp
xor
addr16
add
adc
imul
pop
rcl
adc
ret
sbb
adc
lds
mov
adc
fiadd
cmp
add
das
add
add
xor
mov
inc
or
pop
adc
and
loopne
jle
inc
inc
je
xor
daa
lock
sbb
cmp
inc
pop
adc
js
hlt
or
jge
mov
sub
mov
mov
ins
lods
clc
mov
rcl
mov
fisttp
adc
jge
fnstcw
mov
sub
pop
pop
ja
std
lock
pop
inc
ret
sbb
push
outs
retf
inc
push
nop
or
dec
mov
in
xor
sub
inc
pop
out
leave
inc
mov
dec
call
sbb
ror
cmp
rol
jno
pop
and
ja
loope
(bad)
cmp
cmp
das
(bad)
es
mov
jl
mov
push
push
xor
jo
in
outs
movs
inc
or
mov
sub
adc
stos
or
cdq
outs
mov
ds
pushf
jns
push
add
mov
add
mov
mov
inc
pop
inc
mov
cmp
adc
push
mov
and
or
inc
push
mov
enter
jo
les
jo
(bad)
adc
lds
adc
adc
mov
dec
jge
je
sbb
outs
aaa
ds
loope
ds
xchg
push
clc
xor
mov
ds
add
or
xchg
iret
xchg
mov
dec
dec
pusha
mov
sub
pop
dec
xchg
fsubrp
or
movs
inc
and
sub
dec
pop
xchg
mov
add
shl
shl
or
sbb
adc
bound
js
add
movs
cmp
xlat
and
shr
sub
add
jg
and
ror
mov
cdq
and
sbb
adc
cmps
mov
add
std
and
inc
je
mov
xor
mov
pop
lods
add
movs
add
or
dec
movs
push
push
and
rdtsc
sahf
je
and
or
inc
test
adc
push
enter
cmp
popa
pop
rcl
(bad)
push
dec
dec
inc
loopne
pop
push
sub
aaa
es
dec
push
pop
out
add
(bad)
dec
in
or
lds
loopne
pop
or
or
or
call
mov
mov
outs
enter
add
cmp
adc
sbb
push
xchg
cli
mov
mov
push
cmps
inc
and
sub
rol
jmp
sub
jp
inc
xchg
icebp
test
and
in
and
lods
adc
mov
pop
test
cmps
lods
outs
ds
cmp
adc
mov
mov
adc
pop
sbb
mov
xchg
mov
movs
mov
fsubr
jnp
mov
mov
and
push
xor
xor
xchg
add
pushf
dec
lahf
adc
adc
ins
sbb
arpl
xor
rcl
dec
pop
imul
movs
xchg
lods
in
das
pop
fist
and
xchg
push
mov
inc
loopne
cmc
sub
dec
adc
cmp
add
out
mov
and
(bad)
add
es
mov
sub
lahf
rcr
call
sbb
xor
dec
outs
ror
sub
dec
js
sbb
xor
sub
adc
pusha
mov
das
ror
outs
lea
add
or
loopne
data16
xchg
les
int3
push
and
and
sbb
xlat
xchg
cmp
mov
push
sqrtps
fwait
adc
daa
loopne
sub
push
push
pushf
outs
pusha
sbb
pop
mov
adc
inc
lods
je
mov
push
push
pop
add
inc
sbb
iret
iret
xchg
sub
add
or
(bad)
sub
stos
rcl
fbld
sub
sti
leave
dec
add
add
mov
add
inc
mov
mov
retf
pop
je
shl
pop
mov
test
inc
int3
out
mov
xchg
mov
pop
dec
psubsw
scas
pusha
fst
mov
and
mov
nop
adc
or
imul
dec
add
loopne
lea
mov
daa
or
or
stos
je
inc
xor
or
and
dec
push
mov
test
jmp
div
rcr
add
ret
adc
adc
adc
inc
ins
or
cmps
movs
inc
mov
xchg
outs
inc
dec
adc
cmps
hlt
in
ret
push
dec
push
xchg
pop
je
or
or
jp
test
or
sbb
mov
cmp
sbb
pusha
sbb
jge
or
lahf
jb
(bad)
loop
cs
ins
mov
xor
mov
divps
jmp
fldcw
mov
in
out
dec
inc
cmp
rcr
rcl
add
sbb
jecxz
ret
and
addr16
xchg
test
mov
sbb
std
movs
add
xchg
jno
test
push
and
sbb
pop
add
or
imul
mov
jne
jecxz
push
jo
(bad)
push
ins
outs
sbb
add
sar
sbb
dec
cmp
loope
mov
test
sub
push
adc
and
sub
fsubr
push
mov
sbb
pushf
sbb
xor
pusha
adc
adc
or
adc
mov
movs
ret
or
inc
fdivr
ja
push
fild
cmp
add
sub
jecxz
imul
cmp
or
stos
es
xor
pop
mov
je
cmp
add
xchg
out
jp
sub
dec
jno
or
adc
rcl
sbb
dec
call
sub
mov
aam
inc
aas
pop
pop
clc
and
ret
sbb
mov
or
shr
sbb
test
fadd
pop
jp
adc
test
cmp
outs
sub
cmp
jno
mov
pop
add
xor
dec
dec
pop
retfw
ret
int
js
add
add
xor
adc
mov
movs
test
adc
jne
jle
dec
gs
mov
cmp
inc
das
fisttp
and
mov
sar
in
add
nop
sub
sbb
inc
(bad)
pop
ret
cwde
cmp
adc
ret
scas
mov
inc
xlat
xor
mov
mov
mov
fwait
in
and
fs
mov
mov
mov
aad
rcr
in
sbb
mov
jae
cmp
add
and
mov
pop
hlt
jae
xchg
adc
cmp
mov
fdiv
inc
je
and
inc
test
hlt
jb
sbb
cmp
and
xchg
cmp
xchg
loope
or
and
vmovhlps
and
jl
arpl
pop
inc
add
add
push
adc
fadd
mov
mov
jmp
je
loopne
pop
add
ror
std
retf
pop
inc
jle
nop
push
ins
add
mov
lea
mov
fst
jns
movs
fist
adc
call
jb
(bad)
sub
sub
daa
and
sbb
fiadd
pop
mov
jno
les
xchg
mov
(bad)
out
add
out
and
xchg
adc
mov
aaa
inc
lock
xor
iret
pop
or
or
mov
mov
sbb
mov
test
adc
sub
mov
push
dec
loopne
ret
add
daa
mov
es
aas
push
fwait
rol
lods
sti
addr16
test
mov
add
xchg
stos
imul
xchg
and
sub
fsubr
mov
jne
adc
push
shl
call
xor
adc
out
imul
test
inc
sbb
push
fstp
cmps
adc
or
adc
mov
adc
inc
iret
adc
sar
push
cmps
push
push
dec
add
or
jne
lahf
mov
loope
cwde
test
add
xchg
push
xchg
bound
inc
sub
lock
push
sbb
xor
sub
pop
push
addr16
loop
add
icebp
sbb
pop
adc
cmps
sub
add
in
sbb
cs
pop
ja
sbb
pusha
pop
inc
or
sbb
pop
pop
push
test
fmul
inc
(bad)
fbstp
mov
hlt
pop
jl
gs
add
and
pusha
mov
add
(bad)
test
push
adc
adc
inc
inc
sub
test
(bad)
cmps
lods
inc
push
sbb
sbb
mov
push
or
rcl
add
fwait
js
imul
movs
dec
dec
adc
adc
adc
daa
cmp
push
and
jmp
xor
out
(bad)
and
xor
cmp
rol
mov
sub
aam
xchg
inc
imul
imul
push
cdq
push
sbb
mov
test
movs
retf
push
lods
and
(bad)
dec
or
and
into
add
(bad)
ret
into
sub
mov
rcr
cmps
mov
mov
pop
or
push
inc
push
scas
ins
movs
call
push
or
sub
sbb
loopne
mov
mov
pushf
movs
stos
pop
aaa
imul
push
push
add
lods
add
pop
sbb
and
push
add
cmp
adc
loope
sbb
xchg
mov
add
or
jmp
push
das
push
xor
out
or
xlat
add
outs
push
or
js
mov
(bad)
dec
jnp
adc
rcl
sub
mov
in
jge
push
dec
inc
popf
cmp
and
sub
(bad)
enter
sbb
sub
add
jno
imul
inc
cli
pop
dec
jne
mov
inc
sbb
fild
xchg
loopne
or
xchg
or
pusha
in
out
sbb
or
and
rol
jo
mov
add
or
cmp
sub
and
add
or
or
rcr
mov
xchg
adc
sbb
push
pop
jge
cmc
into
sbb
je
pop
pop
xchg
add
push
pop
sbb
or
add
xchg
imul
add
xchg
or
imul
(bad)
mov
enter
xor
movs
leave
or
add
and
mov
les
mov
push
nop
or
js
leave
cli
xchg
inc
ja
shl
adc
and
lahf
lods
ss
pop
(bad)
inc
mov
xchg
or
mov
add
lock
mov
add
scas
xchg
call
xchg
inc
dec
mov
pop
inc
aam
aam
test
adc
and
push
retf
adc
into
pop
fcom
sbb
mov
movs
mov
pop
sbb
setg
adc
add
mov
cli
or
fiadd
add
fadd
jno
mov
xchg
mov
or
and
fcomp
sub
add
sbb
mov
push
add
xor
xor
je
stc
mov
js
jge
rol
call
xchg
pushf
adc
scas
fdivr
adc
sahf
arpl
sub
sahf
add
push
shl
mov
xor
imul
sbb
push
imul
add
fild
and
adc
test
ret
pop
clc
fwait
add
xor
pop
or
les
daa
adc
rcr
inc
push
sbb
aam
push
adc
jmp
xchg
add
and
pop
movs
or
outs
xlat
fist
inc
mov
add
adc
inc
mov
add
add
add
int
popa
push
lods
push
out
not
inc
inc
scas
xchg
add
mov
mov
mov
xchg
jge
mov
imul
out
push
adc
cmp
push
sti
cmp
and
jl
pop
pop
mov
je
jo
sbb
stos
(bad)
out
push
push
fsub
and
adc
cmp
mov
mov
xor
das
push
inc
adc
pop
mov
mov
je
pop
mov
aad
bound
push
test
and
or
int3
cmp
mov
cwde
mov
int
jmp
add
jle
shl
jnp
mov
mov
mov
movs
jns
sbb
imul
jg
adc
daa
stos
xor
cmp
mov
std
or
mov
addr16
sbb
mov
push
(bad)
xor
std
inc
les
adc
adc
pushf
push
cmp
xchg
push
cmp
pusha
jno
loop
adc
mov
jnp
scas
add
or
sbb
and
fadd
fcom
jns
and
push
mov
int3
cmp
adc
cmp
push
mov
cmp
and
clc
out
dec
xor
(bad)
imul
add
pop
test
in
sbb
or
call
aam
cs
outs
nop
jle
or
int3
rcl
jb
pop
fcomp
mov
fwait
xchg
les
dec
mov
xchg
xor
xchg
mov
push
lods
(bad)
rcr
mov
pop
mov
mov
je
pop
mov
lods
xor
push
movs
pop
icebp
adc
das
sbb
adc
nop
push
out
add
jno
stos
aam
fs
mov
mov
(bad)
push
or
je
mov
inc
aam
test
xchg
jp
adc
cmp
and
xchg
add
and
mov
mov
inc
test
stos
loope
or
std
clc
cmp
jbe
(bad)
push
add
cmp
adc
mov
adc
inc
jno
rol
dec
fmul
pop
cmp
inc
and
sbb
add
push
icebp
xchg
xor
adc
pop
push
lea
cli
mov
call
dec
sbb
fwait
out
push
jge
sub
mov
sub
dec
cmp
xchg
jecxz
add
fiadd
and
(bad)
jne
pop
sub
jne
outs
or
and
pop
outs
adc
dec
add
or
fimul
xchg
inc
xchg
aad
and
lea
arpl
and
jl
rcl
and
add
push
fst
jmp
ss
or
cdq
jnp
call
daa
xchg
imul
repz
loop
mov
push
add
into
dec
rcr
movs
mov
popf
inc
sbb
(bad)
lods
ds
pusha
loopne
fst
pop
dec
lods
mov
dec
cwde
mov
and
lahf
pusha
mov
push
hlt
shr
and
mov
and
in
or
outs
and
outs
mov
add
test
popf
xchg
jne
stc
push
jbe
inc
rol
mov
push
popf
lods
mov
scas
in
sbb
sbb
fwait
mov
push
xchg
adc
add
add
not
add
mov
in
jle
aam
test
es
xor
adc
rol
in
add
mov
and
or
pushf
fs
test
adc
xor
pop
add
fdiv
lock
int3
push
fsubr
jno
and
add
mov
xchg
dec
and
mov
dec
pop
ror
adc
loopne
xchg
(bad)
jo
es
aas
xor
retf
mov
sub
sbb
fidivr
fdiv
stos
adc
cmp
add
push
retf
pop
loope
xchg
add
les
jb
vpunpckldq
or
enter
add
sub
int
jmp
nop
xchg
pop
adc
movs
xchg
add
jne
movs
cmp
movs
not
cmps
and
xlat
inc
adc
mov
pusha
or
or
mov
jo
inc
sub
stc
ja
ins
push
sbb
cdq
or
or
sbb
test
sahf
jl
push
inc
ins
cmp
sub
push
popf
(bad)
and
sbb
push
mov
out
mov
pop
push
sar
adc
jae
sbb
(bad)
into
test
pop
div
daa
add
jbe
test
push
pop
in
ins
dec
add
jo
scas
and
bound
or
mov
ja
mov
adc
sbb
out
and
ins
xchg
cmps
pop
in
inc
cld
icebp
mov
test
rcl
inc
xchg
push
sbb
inc
and
pop
inc
arpl
cmps
cmp
neg
or
mov
add
cmp
cld
scas
mov
(bad)
sub
int3
sbb
mov
and
out
push
rcr
sub
cmp
loope
push
icebp
pop
or
in
push
adc
dec
mov
adc
cmp
popa
cmp
sbb
imul
sub
and
out
and
and
pop
shl
mov
or
div
cmp
push
cmp
inc
js
adc
(bad)
add
cwde
lea
jbe
sbb
outs
add
sub
mov
ins
daa
mov
dec
push
jecxz
pusha
pop
sub
lea
mov
inc
cld
pop
inc
xor
in
cmps
dec
or
enter
in
cwde
add
ret
outs
enter
push
and
and
mov
fmul
frstor
inc
dec
xchg
pop
nop
pop
in
jl
imul
inc
jmp
mov
out
xor
add
lock
push
mov
jge
jmp
sbb
cmp
data16
mov
sub
push
pop
mov
cmp
push
mov
iret
mov
cmp
jbe
cmp
cmps
add
cmp
add
jge
mov
or
mov
cmp
add
add
pop
aaa
add
xor
xor
jne
mov
loopne
test
test
das
loope
lods
dec
sbb
jb
sub
and
mov
or
lods
inc
pop
js
popa
test
dec
jb
push
and
js
sub
xchg
ss
mov
outs
mov
add
and
adc
adc
ja
add
or
and
mov
pop
adc
ins
add
or
or
test
mov
gs
sar
xchg
sub
loope
loope
cmc
push
add
or
pushf
jo
sub
jae
(bad)
push
rol
xchg
sub
ret
or
add
xchg
push
(bad)
jno
dec
and
mov
mov
sub
and
std
add
push
repnz
add
cld
sar
sbb
adc
inc
push
or
nop
inc
cmps
cmp
mov
xchg
push
jno
and
and
or
inc
enter
xor
xchg
cmp
mov
es
dec
sbb
dec
add
movs
adc
mov
sub
(bad)
dec
sbb
cmps
in
sub
adc
mov
jge
xchg
sub
adc
jns
bound
imul
adc
jno
outs
stc
rol
add
shl
add
add
fistp
or
ja
sub
or
cmp
cmps
pop
cmp
idiv
pop
pushf
cs
dec
pop
mov
mov
add
add
cwde
cmps
repz
sub
jmp
sub
push
lea
and
sbb
pop
adc
pop
and
adc
shl
or
dec
push
mov
div
or
dec
add
fnsave
dec
and
jle
and
xchg
mov
mov
add
add
mov
mul
sbb
rcl
xchg
cdq
jge
imul
sbb
and
inc
cmps
xchg
sub
(bad)
das
mov
and
test
xchg
mov
int
shl
in
sbb
cmp
out
inc
test
and
adc
fadd
pop
ins
test
rcl
icebp
aas
sahf
and
mov
mov
sbb
sub
xor
or
popf
jne
xor
int3
addps
push
popa
repz
xor
shl
pop
cmps
dec
mov
enter
adc
pop
dec
out
sub
add
jo
je
fwait
out
mov
jne
add
sbb
shl
mov
fimul
cmp
adc
lea
addr16
push
pop
sub
cmps
fidivr
or
test
daa
and
xor
xchg
adc
inc
stos
xchg
inc
or
cmps
loopne
ja
in
je
dec
mov
push
dec
outs
push
call
vphadduwd
mov
add
jmp
icebp
xchg
add
push
in
fiadd
jne
mov
(bad)
daa
loop
adc
dec
loope
es
xchg
push
in
inc
push
jg
test
pop
or
mov
loope
je
xlat
xchg
dec
jmp
or
adc
pop
ss
cmc
les
aam
push
or
or
sub
inc
push
push
in
imul
mov
push
enter
cs
inc
cmp
jae
test
dec
clc
pop
cmps
or
mov
and
jno
bound
lock
cli
push
inc
lds
shr
test
jp
sub
imul
xchg
pop
outs
je
fisttp
hlt
sub
mov
add
adc
add
outs
pushf
jbe
cmp
sbb
and
mov
rol
jecxz
test
(bad)
aam
out
(bad)
inc
xlat
int
addr16
inc
or
in
xor
sbb
fsubr
or
jae
pop
cdq
or
cmps
push
mov
mov
push
add
sbb
pop
add
pop
pop
and
mov
dec
mov
lods
lock
and
in
cmps
fisub
pop
push
mov
cmc
pop
and
iret
add
mov
mov
(bad)
fisubr
dec
jae
pop
loopne
mov
push
and
sub
fnstsw
stos
adc
rol
sub
lock
(bad)
test
idiv
pusha
test
out
sbb
xchg
inc
cmp
jbe
mov
mov
adc
push
cmps
xlat
imul
jo
jne
or
sub
or
jmp
adc
mov
jg
es
cmp
jmp
sub
inc
lea
js
or
mov
add
xchg
mov
loopne
mov
jbe
cmp
pop
cld
or
cmp
mov
and
inc
imul
addr16
or
jmp
sub
inc
adc
push
movs
pop
js
or
fdivr
inc
sub
pop
retf
push
sbb
and
xchg
add
imul
xor
inc
inc
jmp
add
movs
das
or
lods
mov
dec
imul
sub
add
stc
(bad)
mov
and
je
sbb
lods
or
pop
addr16
pop
mov
(bad)
adc
js
(bad)
(bad)
std
adc
xor
adc
add
dec
loope
inc
xor
and
mov
jnp
fdiv
test
and
cmp
sahf
sbb
into
add
mov
or
xor
inc
stos
inc
ja
push
sub
enter
test
mov
cmps
xchg
xor
mov
xchg
and
sbb
stos
rol
and
or
ins
pop
inc
inc
xchg
adc
pop
shl
outs
(bad)
add
add
add
retf
test
sub
push
cld
clc
popa
popa
push
mov
sub
and
jmp
mov
jb
xor
mov
add
(bad)
mov
es
gs
mov
jo
jge
ret
mov
inc
cmp
ins
or
xchg
mov
loop
mov
jmp
add
xchg
jmp
in
add
sbb
(bad)
lea
fdiv
xchg
xchg
or
jmp
out
rcr
cmp
mov
inc
xor
popa
retf
jo
mov
fisubr
mov
jne
(bad)
push
rep
retf
pop
xchg
add
adc
sbb
lea
sbb
cmp
je
push
add
call
add
and
cs
ror
out
add
shl
lea
add
push
nop
out
mov
sub
and
cmc
adc
mov
push
add
std
mov
jle
pop
call
and
fistp
add
mov
push
pop
ss
sub
and
sub
add
push
jmp
sub
aaa
add
mov
mov
pop
(bad)
mov
sbb
test
cmps
rol
xchg
movs
je
and
xchg
adc
sbb
xchg
dec
outs
int
scas
retf
fs
mov
push
nop
ret
and
push
cdq
lea
cmps
fs
jmp
sub
enter
jb
mov
pandn
adc
enter
loope
sbb
(bad)
std
add
popf
gs
add
push
test
dec
dec
movs
inc
xor
inc
push
push
fimul
les
adc
push
jl
adc
adc
xor
call
mov
leave
call
test
push
inc
sub
inc
in
push
sbb
and
cmps
or
into
xchg
ret
cmp
dec
push
sbb
jbe
in
das
pop
inc
fidiv
sub
xor
call
sar
cmp
inc
and
inc
add
aas
add
or
loopne
mov
ret
(bad)
add
add
sar
fmul
rcl
(bad)
add
in
adc
clc
aam
add
(bad)
add
sub
aaa
inc
enter
and
test
dec
adc
xor
xor
jo
lock
mov
dec
mov
pop
and
es
push
fild
fdiv
sub
adc
xchg
and
cmps
mov
inc
bound
mov
fdivr
mov
push
cmp
adc
in
push
dec
push
push
jge
js
lock
inc
imul
or
retf
sbb
sub
sub
mov
cmp
add
push
sub
sbb
sbb
fdiv
lea
fs
pusha
pop
sbb
fdivr
ins
add
push
jae
ficomp
adc
stos
mov
mov
xor
cld
les
inc
jb
sbb
ror
test
shr
or
and
int3
and
aaa
dec
xchg
ret
or
mov
xor
and
cmp
mov
(bad)
aam
inc
hlt
movs
inc
jmp
sub
fdiv
das
dec
hlt
and
or
cmp
cs
cmp
and
pop
mov
test
test
mov
push
call
xor
mov
cld
add
leave
je
push
cmp
dec
je
inc
mov
jmp
into
and
rol
push
jae
(bad)
out
push
scas
and
pop
bound
sub
mov
add
xchg
repnz
lods
sar
sub
inc
inc
imul
sbb
rcl
test
cmps
int
mov
mov
add
adc
ins
leave
sub
jmp
cmps
int3
daa
add
popf
push
dec
dec
or
mov
xchg
and
xchg
fimul
mov
rol
shl
cmps
sub
pop
jbe
add
lods
stos
inc
out
movs
xchg
fmul
pop
mov
inc
ss
pop
add
xchg
stos
adc
mov
pop
cmp
movs
inc
jne
add
aam
lods
call
add
jge
add
sub
cwde
fsubr
add
or
mov
in
(bad)
nop
clc
sar
xchg
add
or
inc
test
mov
or
or
dec
add
sbb
add
adc
jle
ret
pushf
adc
cmp
int3
adc
cmp
xchg
mov
mov
inc
aam
jmp
jmp
lahf
mov
stos
stos
or
push
and
or
pop
loopne
mov
cmp
mov
and
dec
scas
popa
test
add
pop
add
test
add
mov
xchg
fwait
cmp
leave
stos
add
or
cmp
xchg
pop
sahf
adc
bound
cmps
pop
fwait
dec
rol
inc
xor
cmp
push
dec
or
sub
test
jge
movs
(bad)
mov
push
add
pop
ss
(bad)
(bad)
or
jl
sysexit
ins
movs
movs
or
xchg
and
sbb
add
stos
add
arpl
push
and
mov
das
or
add
or
sub
cwde
xor
cmp
or
sbb
loopne
xor
fiadd
push
dec
mov
dec
sbb
add
adc
mov
push
test
adc
sub
ret
xor
adc
sti
or
ins
xor
je
add
jmp
push
mov
(bad)
adc
pop
xor
push
sbb
adc
inc
jle
dec
rcl
and
adc
inc
push
rcr
mov
test
mov
xchg
cmp
or
movs
pop
rcr
repnz
cmp
add
adc
jne
push
cmps
aad
outs
mov
adc
or
add
and
sbb
mov
mov
inc
cmp
mov
test
mov
mov
fisub
sub
push
pop
cmp
xchg
loopne
xor
add
or
ins
inc
ja
out
aaa
jmp
add
cli
enter
ja
sub
icebp
pop
movs
xor
scas
ds
addr16
xor
mov
ds
push
add
inc
fidiv
fcmovne
fcomp
and
fstp
jmp
fisttp
in
add
xchg
mov
movs
add
add
(bad)
pop
cmp
dec
pushf
sub
dec
jle
jne
cmc
add
adc
push
inc
dec
add
call
int
cmovbe
neg
daa
iret
repz
leave
sar
popf
mov
pop
mov
es
outs
mov
das
jmp
mov
push
call
call
fld
adc
or
mov
or
sub
inc
sub
add
(bad)
sbb
inc
sub
je
lea
push
xchg
loope
pusha
jmp
pop
and
cmp
sub
adc
pop
arpl
js
push
sub
fidivr
adc
mov
mov
mov
and
rol
xchg
inc
xor
scas
jbe
jno
push
mov
test
dec
pop
ja
shl
mov
add
scas
fsub
add
into
lea
jo
add
pusha
ds
push
add
sbb
fiadd
and
call
jle
mov
sbb
pushf
or
fs
mov
cli
out
adc
push
add
cli
ins
inc
xor
nop
push
push
cmp
xor
and
push
outs
pop
ss
in
enter
jns
call
jmp
sbb
sub
sbb
(bad)
movs
or
aam
inc
add
aaa
pusha
aad
or
cmp
add
inc
push
push
inc
fist
sub
stc
lods
je
pop
push
clc
shr
adc
mov
lods
ret
push
pushf
les
mov
mov
enter
ins
adc
lock
mov
dec
jl
arpl
outs
lock
sub
leave
add
adc
xchg
sbb
adc
lods
leave
pop
push
jbe
or
inc
inc
push
or
fidiv
fldcw
pop
fisttp
fst
add
popa
pusha
rcr
inc
lea
cmp
jns
push
push
xor
mov
movs
push
fcomp
sbb
adc
push
movs
or
jmp
imul
mov
add
sub
adc
pop
push
in
push
cmc
out
pop
jns
fbld
pop
push
std
ins
xchg
mov
or
pop
push
mov
outs
fistp
and
movs
push
dec
dec
rol
ret
cmp
xchg
je
push
lea
sbb
ss
and
mov
or
test
adc
jne
int3
ds
push
mov
cmc
fmul
or
inc
cmc
add
and
imul
into
clc
dec
or
fs
lods
test
das
jge
fstp
das
data16
mov
or
mov
inc
sbb
inc
adc
daa
movs
pop
and
sbb
sahf
xchg
dec
ror
std
adc
jg
dec
lea
fs
cmp
push
add
xlat
out
bound
shr
add
dec
push
mov
jp
or
loopne
sbb
mov
(bad)
rcr
sub
icebp
or
xor
and
cmp
add
pop
dec
ss
xor
ins
xor
inc
xor
push
mov
cwde
aam
mov
add
add
cmc
or
jb
sub
pop
pop
or
sub
push
xor
ret
in
xchg
and
inc
push
mov
jb
ja
xchg
and
xchg
je
out
enter
push
add
stos
scas
enter
test
imul
fs
lds
movs
sahf
test
pop
adc
imul
add
mov
movs
push
test
add
ret
rol
ss
cmp
cwde
add
inc
in
in
push
data16
jg
add
sub
les
cmp
es
push
sbb
enter
or
xor
add
(bad)
jp
in
dec
dec
ret
jmp
mov
dec
inc
jge
or
mov
or
dec
xor
enter
loopne
ror
and
ja
mov
call
gs
iret
pop
fadd
sbb
mov
aad
rcl
and
xchg
add
add
inc
sub
and
nop
dec
cmps
adc
xchg
or
and
push
iret
cmp
push
movs
outs
js
rol
or
lahf
mov
dec
add
inc
sub
cmps
mov
xor
adc
pop
dec
mov
pop
adc
test
push
inc
add
mov
pop
fs
ffree
mov
imul
mov
fld
outs
aaa
mov
dec
call
and
jg
outs
es
out
(bad)
push
add
and
xor
inc
dec
push
push
aam
push
pop
sub
cmp
mov
int3
push
sbb
mov
mov
push
ja
rcl
ret
mov
and
loopne
cmp
xchg
dec
and
jo
popa
add
xlat
adc
retf
push
pop
or
lock
es
sbb
call
or
mov
mov
lods
pusha
mov
jnp
jge
in
adc
sahf
imul
add
sbb
arpl
jne
dec
lahf
mov
and
in
and
shl
cmp
lea
outs
mov
or
adc
sbb
jp
cld
push
clc
push
fstp
or
cdq
icebp
push
aaa
push
call
add
and
je
mov
inc
pop
adc
int
and
mov
sbb
push
xor
mov
add
sbb
add
jg
adc
and
ret
or
dec
sub
cmp
add
push
and
fstp
xchg
xchg
ret
xchg
rcl
or
xor
ss
push
inc
fstp
add
or
or
xor
push
push
arpl
mov
loope
pop
mov
jno
sbb
sbb
rcr
cmp
sahf
or
inc
xor
pushf
inc
fcmovb
jle
jge
dec
je
jmp
cmp
inc
or
adc
xor
sbb
xor
xor
les
xor
not
rcr
and
ror
(bad)
or
xchg
adc
add
or
or
push
es
pop
mov
ins
dec
cwde
(bad)
push
ins
push
xor
add
jnp
xor
sbb
jbe
popa
fadd
sbb
sbb
sbb
and
push
xchg
movs
loopne
shl
inc
jne
push
push
nop
jb
(bad)
(bad)
and
int3
loopne
das
dec
and
je
js
sub
js
inc
mov
ror
pop
fst
sbb
loop
rcl
and
push
hlt
imul
sbb
ja
jl
je
or
cmp
pop
aam
cmp
movs
or
xor
xchg
adc
(bad)
push
mov
adc
cwde
sbb
out
mov
xor
call
cwde
mov
and
push
call
add
mov
push
arpl
sub
mov
xor
xchg
sub
mov
or
ins
adc
ins
and
pusha
push
sbb
int3
mov
push
fld
fstp
jmp
fst
fld
shr
xchg
adc
jge
mov
jmp
cmp
test
daa
fmul
push
sbb
or
jmp
je
scas
lds
push
dec
xor
pop
mov
mov
pop
ins
arpl
(bad)
jo
iret
stos
mov
push
jno
push
sub
inc
mov
xlat
ins
das
pop
outs
push
jle
pop
jo
outs
xchg
loop
jo
pop
jno
push
in
lods
pop
cmps
pop
xchg
push
jae
fidiv
(bad)
push
je
into
jae
push
shl
addr16
out
retf
das
pop
or
sbb
pop
jae
pop
loopne
es
sar
pop
sub
sbb
in
sub
mov
dec
xor
jl
adc
xor
int
or
adc
cdq
aam
rcr
xor
lods
and
xor
sub
add
das
cmp
mov
mov
adc
sub
jb
cmc
ins
add
mov
repnz
cmp
pusha
cmp
pop
das
inc
pop
out
mov
shr
adc
les
xor
jne
jmp
cmps
aas
add
and
iret
in
jne
and
mov
jl
sub
and
or
or
shl
lds
fcmovne
icebp
cmp
or
pusha
add
popf
rol
rcr
add
and
cmp
xchg
push
daa
test
or
inc
jne
push
test
(bad)
jle
in
inc
ins
dec
inc
and
lahf
loopne
sub
jae
mov
pop
mov
add
inc
pop
and
retf
(bad)
loopne
and
sbb
sbb
jmp
sub
loop
in
add
(bad)
push
dec
push
sub
xchg
icebp
scas
or
dec
jns
rol
xor
dec
mov
push
add
enter
sub
mov
jge
cwde
push
inc
lods
add
in
jmp
aas
movs
into
int3
add
sbb
out
push
lds
mov
adc
add
rol
pushf
xor
cwde
adc
push
mov
pop
call
call
or
and
inc
push
adc
sbb
or
test
mov
int
jns
add
xchg
xor
adc
gs
cmps
cdq
iret
in
mov
retf
push
iret
add
adc
inc
xor
sub
out
inc
xor
data16
leave
xchg
cmp
aam
aam
js
pusha
or
push
imul
jecxz
imul
in
and
loop
push
in
mov
mov
aaa
xor
mov
out
retf
mov
imul
lock
lods
xor
mov
pushf
or
add
shl
xchg
or
xchg
dec
cmp
dec
push
imul
inc
loopne
dec
jmp
lds
fwait
imul
aaa
mov
lods
push
adc
sub
stc
sub
pop
add
add
cmp
or
pusha
popa
pop
xchg
mov
push
or
cmps
push
push
pop
inc
xor
sti
push
in
adc
inc
inc
mov
hlt
pop
int3
jne
cmps
stc
(bad)
pop
mov
pop
mov
inc
mov
xor
repz
aas
bound
xchg
ret
(bad)
in
add
or
adc
and
loope
sub
and
xor
mov
add
sub
jnp
xchg
xor
sub
sar
and
push
jne
inc
ins
sbb
call
pop
adc
mov
xlat
mov
xchg
sub
frstor
adc
and
add
push
xor
int
je
cmp
inc
ins
mov
inc
inc
push
sbb
sub
sbb
add
or
cmp
push
das
push
sbb
sbb
add
imul
inc
sbb
push
aas
and
xchg
nop
xchg
cmp
test
adc
cmp
pop
sbb
xchg
mov
mov
ss
adc
or
inc
fst
or
mov
or
daa
or
adc
add
cli
pop
cmc
mov
cdq
sbb
or
ins
or
inc
mov
push
dec
aas
add
add
shr
add
scas
jae
dec
leave
enter
push
jg
fsubr
movs
shr
adc
push
or
stc
jle
or
inc
pop
sub
mov
xor
jp
dec
out
cli
test
cmp
xchg
mov
cmp
scas
loop
cwde
sub
dec
mov
xchg
in
add
xchg
ret
div
sbb
pusha
popf
fs
mov
cmp
mov
pop
sbb
test
adc
pop
and
xchg
add
leave
call
test
mov
pop
add
test
inc
test
add
sub
inc
mov
add
inc
retf
xchg
clc
jbe
imul
ins
je
fisubr
mov
inc
test
jns
int
imul
movs
rcr
or
pop
ins
lods
mov
sbb
sub
adc
mov
and
movs
adc
aam
inc
push
and
lock
mov
icebp
popa
jmp
xor
xchg
fld
mov
mov
mov
and
rol
fs
pop
xchg
sub
push
push
and
add
test
out
call
rol
lahf
mov
dec
lea
bound
or
retf
in
imul
pop
cs
xchg
test
stc
(bad)
enter
jae
rcl
cmp
dec
push
je
dec
out
adc
dec
mov
test
push
cmovnp
pop
loope
adc
cmp
adc
push
push
shr
cmp
fsub
and
stc
xor
mov
ss
pop
sti
xchg
fs
dec
adc
ss
loopne
or
xchg
mov
ss
std
xor
xchg
fsubr
icebp
push
sub
mov
imul
jb
shl
xchg
push
js
repnz
pop
sub
push
inc
mov
pusha
ja
hlt
push
clc
push
push
lock
aas
push
ret
sub
sub
sub
out
pop
inc
je
ror
cmp
hlt
test
add
mov
jmp
push
sahf
pop
(bad)
fcmovnu
jle
lock
and
loopne
push
test
jmp
inc
xchg
push
ins
inc
out
in
aam
stos
loop
xor
bnd
bound
shr
pop
sub
or
add
pushf
dec
inc
rcl
add
fbld
mov
sbb
cwde
rol
xlat
ss
mov
lods
in
outs
inc
ror
pushf
clc
push
dec
repz
in
clc
fmul
add
repnz
dec
cli
or
je
rcl
test
add
pop
adc
aaa
loop
and
rol
cmp
push
and
push
add
mov
mov
movs
lock
push
das
or
sahf
push
xor
and
test
enter
pop
js
adc
daa
push
and
mov
mov
dec
pop
pop
add
icebp
rcr
clc
out
data16
xchg
xor
jmp
shr
mov
and
gs
or
retf
adc
mov
js
shl
push
sub
popa
sbb
imul
adc
out
pop
xor
add
retf
inc
aas
add
and
int
or
xlat
in
sti
test
and
lea
xchg
sub
or
fcmovb
and
jge
sub
sbb
xchg
add
adc
or
xor
aam
push
sahf
or
mov
xchg
mov
cld
(bad)
mov
out
test
pushf
pushf
cmp
mov
xor
pop
(bad)
push
loop
sub
push
call
ds
push
fs
push
add
test
and
imul
pop
push
pop
add
jmp
dec
enter
xor
mov
popf
push
pop
inc
and
mov
and
les
sbb
test
mov
jb
push
fcom
arpl
ret
mov
jb
mov
inc
gs
rcl
add
sub
inc
sub
not
sahf
xor
mov
test
arpl
movs
add
sar
add
pop
test
adc
sbb
add
push
call
(bad)
icebp
add
sbb
dec
push
ja
pusha
and
xchg
inc
cmp
ins
mov
js
shl
mov
sub
inc
loopne
rol
js
les
repz
fsub
loopne
cmp
clc
mov
out
dec
enter
idiv
in
test
xor
and
and
pop
aam
xlat
test
dec
lock
fst
rcr
sbb
inc
add
jmp
pop
mov
add
and
adc
or
dec
mov
push
dec
test
mov
mov
mov
push
mov
out
out
xchg
push
mov
xchg
or
test
dec
test
lods
movs
mov
lock
mov
adc
jb
in
push
push
push
pop
inc
sbb
fst
xchg
pop
test
inc
cwde
cdq
add
fcmovbe
or
inc
nop
test
jmp
fwait
and
or
mov
add
adc
mov
pop
sub
push
or
dec
das
pushf
sbb
sub
xor
shl
mov
(bad)
repz
in
ror
in
push
xor
cwde
or
mov
movs
pop
xor
xor
test
push
add
lock
push
sbb
push
sti
fadd
add
shr
sbb
xor
hlt
sbb
shr
pop
add
dec
movs
adc
mov
les
sub
in
xchg
add
and
push
popa
adc
jge
test
(bad)
shr
push
xchg
dec
xlat
push
mov
dec
and
call
jmp
xor
sar
xor
or
add
rol
push
imul
add
mov
cmp
fs
arpl
cmp
jb
pusha
cmp
xchg
adc
or
sbb
mov
xor
mov
adc
push
and
fcmovb
je
outs
sbb
or
cmp
dec
std
push
push
test
inc
xchg
push
inc
(bad)
sub
les
or
adc
scas
sub
test
pop
dec
outs
mov
fistp
sbb
aam
push
xchg
retf
scas
pop
les
and
mov
lock
inc
pop
and
jmp
jp
pop
stos
fldenv
mov
fcmovnb
bound
je
and
fisttp
mov
je
jecxz
stc
cmp
sub
fcmovne
mov
ins
loopne
out
jmp
sub
cmp
scas
es
rol
mov
or
(bad)
enter
mov
and
adc
nop
pusha
mov
inc
sub
sub
fcmovbe
lea
jne
test
xchg
ins
cmp
sbb
sti
lea
fst
push
jmp
xchg
pushf
or
iret
mov
cmp
mov
adc
inc
ror
cli
add
fwait
jb
cmps
adc
pop
jbe
and
mov
sbb
loopne
aaa
inc
cdq
cwde
or
adc
shl
mov
mov
bound
inc
mov
or
adc
push
out
mov
and
cmp
pop
loope
push
test
cdq
test
mov
push
in
stos
add
push
mov
and
jnp
mov
test
add
js
push
gs
and
cli
dec
mov
dec
nop
xor
enter
cmp
push
mov
jb
jns
sbb
fs
xor
cwde
js
mov
mov
rcr
jecxz
ss
add
inc
call
jg
or
pop
loopne
and
push
mov
lahf
push
test
add
push
adc
test
sub
sbb
cld
test
test
outs
and
cmp
(bad)
xor
add
ret
mov
dec
add
mov
or
arpl
sub
jmp
add
ja
cmp
sar
pop
pop
nop
das
xchg
test
sar
and
and
cmp
lock
mov
mov
sub
cld
fwait
push
sbb
mov
or
aad
ret
icebp
push
xor
push
xor
xchg
pop
dec
xor
xor
(bad)
pop
xchg
in
loop
rcr
or
cmp
xchg
pop
inc
inc
les
or
dec
jno
fxch
cmp
test
sub
into
dec
cmp
clc
jne
cmp
stos
add
push
jge
push
add
mov
cli
call
cmp
cmps
xor
or
push
ficom
int3
and
or
inc
cmp
cld
lea
jmp
pushf
enter
cmp
fdivr
cwde
dec
jmp
ds
ins
loopne
in
fdivr
mov
aam
les
adc
stos
push
aas
js
sbb
jge
(bad)
sub
lea
fcmove
jg
mov
jnp
mov
adc
or
add
call
xor
jns
or
jp
rcl
movs
sar
mov
lea
mov
jle
jo
ror
or
aad
(bad)
out
rcl
adc
cdq
rol
cwde
add
sbb
loopne
retf
sbb
nop
and
and
in
int3
enter
retf
and
ret
movs
jb
loopne
mov
repnz
pop
pop
in
xor
(bad)
daa
movs
or
sub
outs
mov
adc
dec
ret
dec
inc
call
pop
es
push
pusha
xchg
dec
fcom
imul
or
adc
loopne
mov
adc
(bad)
scas
sub
xor
xchg
push
pusha
dec
dec
and
test
loope
enter
jnp
pop
pusha
pop
push
cmps
movs
mov
es
cmp
add
sbb
frstor
jmp
and
or
jo
repz
je
adc
movs
sub
ror
imul
push
sbb
push
adc
ret
stos
mov
xchg
cmps
imul
xor
mov
rol
sbb
mov
mov
mov
inc
push
adc
pop
dec
pusha
popf
jbe
add
inc
push
jae
aaa
sbb
fs
xor
fs
inc
push
pusha
(bad)
movs
shr
mov
outs
je
outs
dec
shl
mov
push
or
(bad)
out
cmp
(bad)
(bad)
movs
jo
push
mov
and
xchg
or
into
adc
imul
or
inc
(bad)
mov
xchg
call
cmp
test
and
ss
jnp
(bad)
xor
xor
daa
inc
add
aas
xor
inc
sbb
add
inc
fs
movs
xchg
ss
arpl
outs
(bad)
adc
jge
test
loope
cmps
cli
push
movs
shl
cmps
mov
or
nop
iret
arpl
sbb
and
add
enter
test
jnp
sub
mov
es
mov
sub
xchg
dec
push
dec
or
jmp
mov
mov
mov
dec
xchg
fmul
das
and
push
call
xchg
mov
mov
jmp
neg
sub
jb
pop
loopne
movups
ins
push
jle
(bad)
jns
mov
test
cmps
mov
dec
push
sub
je
add
pop
test
cmp
dec
or
mov
xchg
pop
push
add
xor
jmp
jno
and
aas
inc
sub
(bad)
rol
add
dec
dec
ins
add
shl
add
jle
retf
adc
jb
cdq
or
js
jae
adc
loopne
push
xor
xor
out
xchg
rcl
pop
inc
(bad)
or
sub
cwde
(bad)
fndisi(8087
and
xchg
add
inc
inc
or
push
and
rcl
test
mov
adc
mov
xchg
shr
ins
inc
hlt
inc
iret
xchg
add
xchg
out
jbe
xor
inc
mov
adc
mov
jmp
cld
pusha
fsub
and
mov
jno
add
add
loope
xchg
daa
and
mov
xlat
mov
xchg
add
ja
icebp
nop
icebp
add
mov
fst
cmps
adc
xor
stos
clc
xchg
jmp
sbb
dec
ret
cld
pop
adc
dec
sub
imul
bound
(bad)
mov
mov
adc
ss
scas
dec
jnp
inc
fs
rcl
push
push
xor
or
out
or
mov
test
cmp
pop
inc
xor
sbb
iret
test
popf
ss
ret
popf
retf
xor
lods
or
repz
fbstp
or
xchg
js
test
adc
inc
iret
pop
jmp
mov
pop
rol
das
add
pop
arpl
inc
cs
pop
push
adc
adc
xchg
loopne
xchg
and
inc
movs
sbb
sar
sbb
push
add
sub
add
xor
pop
pop
fnstenv
daa
xchg
push
and
xor
xchg
push
stc
out
rcl
or
sbb
adc
movs
es
jmp
or
mov
push
and
pop
cmp
and
xchg
cmc
loope
dec
or
mov
dec
and
xchg
push
nop
aas
pusha
push
push
push
and
cmp
jno
xor
add
loopne
pop
(bad)
cld
sub
lods
pop
scas
aaa
adc
test
jg
dec
cwde
call
jle
pop
(bad)
inc
mov
repz
neg
push
or
adc
push
lods
pop
sbb
add
pop
pop
and
cmp
pusha
cmc
and
mov
ror
dec
cmc
lods
push
mov
dec
imul
jmp
and
pop
lahf
push
xor
ret
aad
movs
sub
xchg
sahf
test
push
cmps
or
stos
in
mov
scas
lea
jp
cmps
cwde
or
push
add
push
or
xchg
(bad)
cmp
lock
into
sub
push
sub
add
adc
inc
jle
in
mov
or
add
fdivr
push
retf
or
mov
mov
inc
jp
call
sub
jmp
or
mov
pop
pop
mov
rol
pop
sbb
movs
stc
push
dec
jne
int
adc
sub
push
call
add
xchg
add
push
add
aad
inc
mov
push
mov
stos
adc
(bad)
pop
mov
cmpps
xor
and
push
add
and
clc
movs
mov
mov
and
mov
xchg
pusha
mov
sbb
mov
cmp
inc
es
xor
call
and
add
cmps
gs
cdq
popf
sbb
in
or
mov
push
sub
test
adc
cli
add
sub
movs
xor
push
mov
mov
repz
stc
or
pop
push
out
mov
leave
das
push
lea
or
add
shl
jne
jnp
and
hlt
lock
loopne
pop
xchg
ja
adc
aas
dec
mov
sub
push
dec
jno
or
dec
xchg
(bad)
fdivrp
or
inc
hlt
cmp
add
dec
cdq
add
adc
dec
add
loope
inc
push
add
stos
mov
or
imul
stos
xchg
dec
xchg
inc
jle
mov
je
mov
call
sub
mov
and
call
mov
xor
adc
xchg
mov
push
and
repz
dec
ja
and
add
xor
or
inc
xor
and
dec
xchg
popf
jecxz
inc
xchg
ja
sahf
enter
addr16
addr16
adc
or
cmp
lods
cwde
(bad)
bnd
dec
or
je
vmovsldup
cmp
movs
ds
sbb
sub
and
ins
push
repnz
add
adc
fistp
or
pop
outs
cs
cmp
fsubr
shl
rcr
sbb
das
xchg
pop
lock
dec
dec
stc
xor
xchg
sbb
add
pushf
ror
dec
lock
pusha
pop
dec
sub
push
in
daa
popa
add
stos
mov
popa
jo
jne
pop
add
fucomip
cmps
mov
xchg
xchg
dec
sub
inc
jnp
sahf
mov
mov
lahf
push
mov
lods
push
xor
xor
sbb
popa
sbb
shl
ins
mul
lahf
pop
loopne
xchg
sbb
int3
imul
inc
dec
cmc
pop
call
or
test
add
jns
pushf
mov
push
iret
mov
loop
adc
sar
inc
aas
scas
and
xor
ss
add
sub
aad
aam
add
movs
in
mov
or
mov
inc
stos
jl
scas
push
in
mov
push
sub
and
retf
inc
add
adc
aad
push
addr16
loope
xor
daa
add
xchg
(bad)
or
mov
fstp
push
cmp
jb
inc
movs
stos
icebp
add
push
sub
xor
push
mov
mov
mov
in
test
push
scas
xchg
push
jmp
loopne
add
clc
mov
call
sub
dec
cmp
push
retf
or
push
push
sbb
mov
add
inc
fldpi
push
dec
jle
je
fstp
pop
sub
lods
sub
sbb
into
fisttp
and
push
loopne
test
iret
es
dec
inc
enter
adc
inc
imul
xchg
int
push
and
adc
jno
inc
and
inc
cmps
outs
retf
pop
mov
es
outs
jge
call
lock
cmps
push
sub
ins
mov
imul
stc
inc
pop
push
add
or
imul
xor
push
inc
or
pop
and
push
cli
sbb
xor
mov
(bad)
pop
xor
in
xchg
dec
xchg
dec
push
ins
mov
data16
add
jns
call
or
sub
add
inc
lods
cmc
data16
test
push
les
add
inc
ret
call
ror
mov
add
lods
fisttp
mov
movs
adc
pop
lock
push
jo
movs
push
mov
mov
inc
dec
out
push
inc
movs
movs
jnp
dec
mov
pop
mov
push
adc
es
push
test
mov
push
or
add
js
or
inc
lods
retf
clc
sub
cmp
je
xchg
pop
imul
data16
jmp
mov
fild
pop
cmp
outs
mov
add
adc
xchg
les
xchg
pop
js
sub
inc
inc
sahf
stos
inc
ret
add
dec
mov
mov
and
jbe
pop
sti
pop
sub
xchg
je
adc
adc
sub
cld
or
cmp
and
add
lds
pop
add
fmul
sub
iret
cmp
add
sbb
lods
adc
cmp
pop
imul
nop
push
aaa
pop
imul
push
pop
bound
jle
es
mov
rcr
inc
stos
mov
inc
add
stos
aas
dec
mov
div
xchg
ds
jo
adc
push
cmp
je
xchg
mov
repnz
in
or
and
iret
inc
adc
rol
jbe
leave
stos
inc
mov
in
inc
je
push
xchg
and
add
push
mov
sub
popf
and
push
popa
jmp
movs
and
je
push
xor
sbb
xchg
sub
and
popa
retf
inc
rcl
jl
and
push
fs
or
adc
loope
repz
lea
cmp
sbb
sti
test
ins
adc
inc
or
test
loopne
inc
jmp
inc
pop
xchg
and
or
test
lods
mov
dec
call
lock
in
xchg
jl
ins
in
push
in
adc
jne
enter
or
loopne
fsub
ror
loopne
add
in
fs
(bad)
repnz
fs
dec
mov
fsub
lods
stos
hlt
scas
lock
test
xor
xchg
outs
jl
sub
add
sbb
fwait
and
inc
fwait
repnz
aaa
fiadd
push
jmp
jne
or
cwde
mov
pusha
inc
imul
sbb
add
push
in
jl
std
jmp
sbb
and
ret
jno
retf
adc
(bad)
div
pop
popa
jne
icebp
adc
sbb
aad
sar
inc
mov
pushf
inc
add
mov
mov
cmp
adc
fisttp
adc
je
mov
jl
xor
stos
test
xchg
retf
and
xchg
es
inc
lea
scas
mov
pusha
lahf
std
mov
push
pop
and
push
jo
inc
cmp
dec
add
mov
shl
dec
add
retf
test
test
xchg
xor
push
dec
add
fdiv
push
js
pusha
xor
test
hlt
pop
lahf
push
outs
xchg
jp
cmps
push
or
adc
mov
es
imul
hlt
add
hlt
sbb
pop
adc
sbb
out
push
xchg
dec
fisub
mov
ins
cli
cmp
cmp
pushf
sub
xor
out
mov
jmp
fs
in
movs
js
jne
neg
popf
icebp
and
inc
mov
pop
or
mov
into
in
fs
push
mov
adc
lea
or
inc
add
dec
outs
mov
aas
cdq
mov
jge
addr16
jg
mov
push
inc
add
cmp
sub
call
outs
or
jbe
push
idiv
fstp
outs
and
push
mov
sub
mov
or
sbb
out
cli
in
or
aas
xor
jns
imul
ss
mov
and
xchg
sar
scas
js
inc
or
pop
add
inc
cmp
push
mov
or
and
aad
push
cmp
sub
icebp
not
mul
je
xor
ret
mov
lock
jp
and
pop
out
push
xchg
ins
daa
xor
aam
or
and
aad
imul
jmp
mov
push
sbb
add
cmc
sub
jmp
mov
addr16
jno
je
test
je
loopne
enter
jnp
ins
jecxz
jo
pusha
adc
add
outs
add
pop
add
cmp
cld
nop
xchg
mov
inc
fcom
icebp
gs
adc
push
jns
xor
rep
push
inc
adc
or
test
push
lods
sar
movs
push
dec
icebp
add
sbb
repz
pop
inc
pop
cmp
adc
push
arpl
cwde
push
or
or
add
(bad)
in
mov
push
aad
adc
push
mov
out
ins
in
sub
in
pop
push
mov
sub
int3
jo
sbb
fadd
cmp
lods
enter
add
and
repz
aam
pop
push
adc
mov
sub
xchg
sahf
nop
pop
(bad)
and
popa
icebp
mov
jecxz
push
enter
push
mov
movs
outs
adc
ss
int
sub
xchg
loopne
pop
xchg
cld
daa
jl
cdq
push
xchg
mov
xchg
call
sbb
mov
mov
jmp
fld
and
push
rol
dec
iret
xor
lods
leave
nop
int
push
leave
and
adc
sub
sub
mov
adc
sub
fs
adc
cmps
scas
sbb
mov
xor
les
and
adc
leave
mov
and
sbb
mov
mov
push
push
mov
jmp
push
add
btc
xor
adc
sbb
repz
add
fs
inc
adc
dec
inc
push
inc
xchg
pop
outs
sbb
invlpg
or
adc
and
lock
jns
add
adc
fcmovb
fs
push
sub
xor
inc
sub
(bad)
aam
sbb
cmp
retf
es
stc
je
mov
clc
add
pop
fs
push
xor
sbb
int
xor
mov
aad
inc
retf
jno
push
ds
(bad)
xor
push
data16
call
and
call
xchg
in
fcom
retf
xchg
inc
mov
pop
stos
test
iret
adc
dec
add
ja
inc
cli
mov
in
push
mov
test
(bad)
sbb
or
push
aam
hlt
inc
cmp
inc
or
sbb
jge
xlat
shr
jmp
movs
in
push
mov
(bad)
xor
jb
push
scas
fcomp
sub
pop
xchg
mov
push
push
cmp
es
mov
push
push
and
push
inc
popf
fcom
or
inc
sub
scas
jp
jo
push
enter
cmps
jmp
and
mov
add
test
dec
push
shl
mov
pop
cdq
stos
or
cmp
cmp
add
sbb
nop
inc
jle
and
rcr
pop
es
arpl
shl
sub
xchg
adc
aas
dec
jl
test
sbb
sub
daa
fcom
pop
je
daa
push
push
sbb
mov
jne
adc
jecxz
mov
xchg
ja
(bad)
lds
push
lea
adc
ficom
push
js
jge
push
inc
push
aas
pop
jmp
jns
push
push
jo
popa
push
push
add
or
gs
(bad)
xor
inc
add
nop
add
or
daa
imul
or
enter
enter
dec
or
fiadd
mov
pop
jbe
movs
inc
dec
mov
dec
fisttp
or
xor
jmp
lods
sbb
add
(bad)
cld
push
sbb
fwait
inc
aad
inc
bound
mov
enter
push
and
outs
adc
and
int3
and
push
ja
and
mov
jne
inc
ss
dec
sbb
fs
add
mov
sbb
lock
out
inc
sub
mov
ins
pop
ret
scas
lods
lods
out
add
imul
or
push
inc
out
sub
add
and
sbb
add
dec
ret
les
inc
ins
sbb
or
lea
dec
outs
loope
sahf
cwde
or
adc
jmp
sub
mov
aas
lock
ds
xlat
dec
sub
push
gs
push
dec
pop
add
aaa
mov
jg
idiv
push
push
push
push
and
ja
test
mov
ds
and
pop
and
repz
jp
gs
mov
and
fadd
mov
fs
adc
movs
xor
cmp
mov
loopne
pop
xchg
push
sbb
popa
mov
mov
adc
sub
jmp
and
jmp
or
faddp
xor
jle
xchg
sub
cmps
nop
pop
jnp
adc
push
mov
sar
mov
add
daa
xor
loop
adc
cwde
xor
sbb
stos
dec
or
ss
fild
dec
xor
push
fist
pusha
pushf
xchg
test
popf
icebp
arpl
test
cmp
push
dec
pop
fistp
lods
(bad)
cli
inc
rol
dec
or
xlat
adc
inc
pop
xor
mov
test
dec
aam
shr
sub
scas
fsub
and
mov
in
stos
sbb
push
ret
(bad)
cmp
mov
add
mov
sbb
loopne
add
xchg
arpl
xor
add
add
and
and
imul
xor
cmc
push
dec
sti
ss
inc
js
lds
lock
add
sbb
dec
push
fwait
push
cmps
and
jle
xor
dec
sbb
or
dec
aam
adc
add
ret
cmp
xor
pop
not
mov
add
fcom
mov
mov
xor
jle
add
dec
xchg
pop
sbb
mov
add
push
cmp
lock
dec
div
aas
lds
or
sbb
in
imul
or
mov
inc
mov
add
out
adc
cmp
das
es
sub
xor
add
push
movs
push
pop
push
loope
iret
lock
pop
movs
aam
enter
sahf
dec
stos
retf
pop
add
inc
sub
in
push
arpl
sub
xchg
xor
movs
push
iret
push
cmp
dec
fs
shl
and
enter
(bad)
icebp
or
mov
loop
jnp
(bad)
add
repz
les
in
cmp
mov
cmp
sub
pop
jbe
js
add
or
stos
stos
mov
(bad)
ret
rol
imul
add
sti
and
cmp
mov
sub
dec
inc
add
cs
cmps
mov
dec
bnd
inc
cmp
mov
adc
inc
mov
cmp
dec
test
jae
push
mov
xchg
add
and
in
mov
xor
scas
inc
dec
mov
test
inc
sub
dec
je
cmp
or
inc
cmps
sbb
mov
test
jg
jmp
push
mov
cdq
sub
int3
mov
(bad)
mov
pop
lods
dec
in
push
enter
cmp
(bad)
outs
add
sbb
push
repz
cmp
ficom
or
es
xor
xor
sub
loope
inc
call
ror
mov
and
ret
jp
push
(bad)
or
inc
je
push
mov
dec
jns
pop
mov
inc
fwait
or
stos
enter
jne
int3
dec
pop
nop
add
mov
rol
mov
or
imul
je
test
add
outs
sbb
jecxz
jmp
inc
inc
push
test
das
inc
inc
sub
push
popf
pop
dec
sub
xchg
xchg
sbb
mov
test
push
and
pop
sub
test
inc
push
call
movs
cmc
add
jb
clc
or
shl
into
push
cmp
adc
je
add
lahf
rcl
lds
inc
mov
xor
dec
jno
sub
adc
out
xchg
icebp
add
pop
iret
inc
cmp
mov
xchg
clc
sub
inc
mov
retf
jnp
lock
xchg
add
lods
test
bound
icebp
mov
(bad)
sbb
or
dec
pop
mov
add
add
mov
mov
stc
or
test
cs
pop
add
pop
pop
inc
inc
xchg
fimul
jne
cmps
cmp
adc
xor
iret
or
out
inc
jae
jne
mov
adc
mov
xchg
mov
cli
push
mov
(bad)
sub
shl
aas
sub
cmp
retf
dec
cmc
mov
add
movs
std
push
sbb
movs
fld
or
push
xchg
cmps
adc
xor
xchg
lea
ins
jecxz
jne
cwde
push
repnz
jb
(bad)
xchg
mov
push
add
adc
popa
loopne
nop
jge
lods
(bad)
cwde
jno
int3
sbb
cmps
mov
add
add
push
mov
movs
add
mov
xor
data16
xchg
scas
and
fs
jle
add
in
dec
sti
nop
lea
ins
sbb
scas
ror
add
jne
rol
or
xor
mov
add
call
mov
add
dec
gs
adc
xor
inc
and
mov
das
inc
hlt
or
inc
or
in
pusha
push
les
shl
jge
retf
ror
push
pusha
or
mov
push
xor
leave
out
adc
mov
push
push
dec
add
xchg
stos
dec
pop
sbb
inc
pop
pop
aaa
retf
add
add
dec
adc
mov
inc
adc
imul
xlat
or
or
add
add
mov
adc
pop
adc
ror
push
fs
add
adc
push
mov
cmp
mov
sub
and
imul
cld
iret
in
jo
sbb
push
add
jg
or
dec
mov
xor
jp
test
pop
out
sub
sbb
ret
lahf
sub
test
pop
add
push
dec
(bad)
aaa
scas
loopne
adc
mov
je
pop
cmp
jg
pop
push
or
mov
xchg
cli
xchg
test
popf
addr16
cwde
mov
cmps
(bad)
aad
add
cmp
add
add
inc
lahf
mov
push
add
mov
xchg
sub
pop
push
push
push
mov
or
inc
shl
cmps
fsubr
jmp
jmp
jo
inc
adc
arpl
enter
xor
inc
push
dec
into
sbb
sub
retf
retf
shr
cmp
int3
dec
adc
adc
inc
pop
and
dec
xor
sbb
out
mov
jmp
sahf
push
pop
or
jmp
cdq
jns
inc
call
fadd
push
dec
jmp
push
jns
ds
and
xor
rol
inc
loopne
mov
push
pusha
inc
inc
scas
mov
add
fmul
sbb
(bad)
les
inc
bnd
inc
sbb
xchg
int3
into
(bad)
inc
inc
lods
ror
and
xor
mov
jle
inc
nop
push
mov
lea
mov
add
mov
pusha
daa
(bad)
mov
pop
lea
or
or
jne
data16
xor
loope
ja
ret
sbb
pop
jnp
loop
adc
sub
mov
mov
mov
nop
in
add
mov
mov
adc
dec
cmc
push
and
scas
pop
xor
xchg
add
mov
inc
dec
inc
in
push
adc
repnz
push
cmp
inc
sub
dec
mov
dec
push
movs
inc
or
repz
xchg
leave
sub
xor
inc
sub
xchg
push
pop
ror
lods
fwait
aam
push
or
or
frstor
xchg
adc
sub
sub
shl
in
adc
pop
or
mul
scas
pusha
ret
cmp
mov
sub
gs
aas
std
aaa
icebp
push
add
es
inc
(bad)
pop
ins
es
sbb
add
inc
imul
push
sub
into
stos
ret
fild
push
ret
xchg
add
jmp
pop
ins
and
dec
sbb
call
mov
enter
add
mov
ret
and
mov
and
test
pop
sub
push
and
sbb
or
sbb
and
fsub
inc
add
pop
je
add
inc
fld
add
loopne
mov
daa
cmp
jb
or
sub
jb
adc
in
xchg
fs
shl
adc
not
test
je
add
push
sub
lea
test
sub
and
pop
inc
dec
sub
dec
sub
(bad)
lahf
scas
pop
and
rol
cmp
nop
bound
mov
or
pusha
add
cmp
inc
jne
mov
jb
imul
sar
test
adc
sub
sbb
jno
je
or
adc
jle
jge
inc
jno
(bad)
in
pop
pusha
mov
mov
and
jg
test
jl
cmp
push
retf
shl
xor
sub
retf
xchg
inc
(bad)
inc
add
cmp
mov
shr
push
addr16
or
pop
sbb
or
clc
lds
mov
push
sub
sub
lock
xchg
add
jnp
sub
ret
jg
mov
clc
jb
ror
ins
or
jmp
sbb
inc
lds
rcl
sub
xor
pop
inc
jno
and
jne
int
mov
push
xchg
xor
int
xchg
cmp
inc
test
scas
mov
push
rcr
fiadd
sti
shl
add
add
popf
xor
push
adc
jne
sahf
xor
xchg
xchg
jp
movs
fnstcw
push
or
or
dec
add
xchg
mov
test
jnp
hlt
inc
in
push
jbe
mov
push
sub
sub
jo
cmc
inc
dec
jmp
push
jmp
jp
fdivp
pop
jmp
push
lock
and
push
pop
or
addr16
pop
adc
inc
ins
xchg
out
mov
mov
add
hlt
sub
or
add
dec
leave
or
(bad)
iret
(bad)
rol
and
sbb
addps
adc
in
adc
pop
cmc
push
xchg
push
xchg
pop
adc
cdq
inc
mov
mov
popa
adc
xchg
inc
mov
sub
sub
pop
stc
mov
mov
clc
sub
cmp
xor
fwait
xchg
mov
push
inc
out
lea
jl
jecxz
add
in
inc
mov
mov
js
xlat
into
mov
mov
mov
stos
ret
cmp
call
mov
or
push
add
loope
add
and
fs
dec
enter
pop
push
(bad)
lahf
movs
cmp
jg
xchg
jmp
aam
cmp
pop
push
push
add
push
outs
dec
xor
mov
(bad)
add
push
add
mov
adc
nop
xchg
xchg
mov
aas
push
and
pop
rol
fsub
(bad)
cmp
pop
daa
popa
std
pusha
sub
mov
adc
in
outs
adc
push
je
cmps
pop
cdq
add
ja
add
nop
xchg
cs
mov
inc
lods
mov
shl
push
add
mov
jecxz
ins
push
ins
pusha
cwde
sbb
xor
ss
xchg
frstor
es
xchg
push
sbb
jmp
pushf
cmp
movs
adc
stc
cmp
je
push
push
add
movs
call
dec
jae
prefetcht2
pop
fisubr
push
xchg
in
cmp
push
cmp
jle
nop
mov
or
in
mov
in
lods
mov
ins
lock
or
push
dec
fisttp
popa
loop
mov
adc
pop
movs
cmp
popf
movs
dec
call
out
movs
or
mov
mov
cmp
jmp
in
ret
jmp
fsubr
adc
xor
push
jno
loope
and
ja
sbb
cs
pop
push
mov
nop
push
shl
mov
xor
(bad)
enter
icebp
lahf
mov
or
inc
or
jbe
cwde
jns
dec
inc
push
repnz
mov
mov
cmp
xchg
addr16
popa
sub
rcl
cmp
nop
cmp
sub
push
dec
mov
jp
pop
mov
add
pop
(bad)
fs
sub
cdq
mov
or
pop
sbb
mov
scas
clc
imul
mov
add
inc
je
enter
dec
je
xchg
inc
ds
adc
push
dec
ret
add
push
(bad)
jp
and
inc
lea
add
add
inc
mov
retf
inc
jecxz
pushw
es
fcom
jmp
or
adc
mov
call
fadd
(bad)
add
movs
cmps
push
xor
sbb
xor
mov
cmp
adc
imul
or
add
or
jmp
sub
movs
nop
sub
nop
dec
xchg
mov
inc
test
fild
out
jne
mov
rol
xchg
and
push
cdq
ficom
xor
in
push
cdq
in
or
mov
into
dec
cmp
mov
imul
push
cmp
jg
jg
xchg
aas
sar
xor
(bad)
push
sub
jo
loop
mov
in
dec
hlt
push
rcl
outs
mov
push
loopne
inc
sbb
call
imul
adc
and
pushf
add
pop
loope
dec
in
xchg
add
mov
push
inc
inc
push
fisubr
add
xchg
movs
or
lfs
add
push
into
push
dec
or
dec
sbb
xchg
cmp
xchg
enter
jno
xchg
sub
push
push
mov
imul
sub
shr
nop
cwde
sbb
push
dec
inc
in
mov
sar
adc
aam
bound
pop
nop
cmp
ja
sub
inc
retf
jne
test
jo
rol
gs
dec
xor
push
xchg
mov
neg
sub
mov
and
movs
push
ficom
cs
sbb
or
inc
iret
shl
xor
cs
fadd
add
retf
(bad)
test
xchg
imul
mov
mov
dec
dec
jecxz
les
daa
cdq
add
pusha
ficomp
test
adc
and
adc
jns
xchg
shl
adc
add
dec
xor
mov
adc
push
push
dec
out
cmp
retf
enter
mov
fs
mov
mov
mov
push
push
pop
imul
inc
mov
jo
sbb
clc
call
and
shl
adc
mov
clc
mov
in
adc
sbb
call
push
cwde
pop
dec
cmp
pop
test
add
inc
lock
(bad)
mov
movs
lods
add
sbb
dec
add
push
movs
and
repz
pop
mov
push
add
das
dec
or
jmp
stc
pop
ja
movs
(bad)
jmp
sbb
(bad)
cmp
aam
ret
jge
loopne
sbb
add
mov
inc
pop
mov
std
or
js
leave
ins
xchg
and
nop
and
shl
scas
add
xor
rol
adc
sbb
addr16
dec
ins
or
shr
out
nop
mov
jle
(bad)
adc
outs
jae
pop
or
ret
popf
out
fiadd
pop
call
bound
cdq
sahf
xchg
jb
push
rol
push
sub
or
jle
xor
inc
test
mov
inc
int3
cmp
pushf
ret
adc
and
loopne
xor
bnd
pop
sub
mov
sub
xchg
xchg
mov
xor
mov
sbb
(bad)
(bad)
fidiv
in
into
and
mov
xchg
sar
fwait
aam
movs
cmp
jl
sub
lahf
nop
loope
cmc
jg
cmp
fmul
cmp
adc
push
mov
cmp
dec
adc
pop
mov
sub
sti
and
ss
push
stos
aad
push
sbb
mov
rol
into
retf
add
in
adc
sbb
cld
js
(bad)
fldcw
shl
add
jne
mov
mov
mov
daa
add
je
pop
jne
and
pop
mov
xlat
fs
adc
aas
gs
pop
add
sbb
cmp
cdq
inc
out
mov
xchg
adc
test
push
xor
cmp
add
inc
adc
rol
dec
jno
pop
or
das
push
mov
lods
pop
cmps
add
push
adc
push
out
aaa
js
inc
and
push
inc
lea
mov
movs
dec
lods
add
jae
lea
sub
nop
push
inc
cs
ror
enter
call
shr
push
loop
ror
mov
shr
xor
ret
adc
fidivr
rcr
mov
mov
sub
inc
ins
mov
pop
mov
push
ins
mov
pop
add
in
call
loopne
sub
xor
jle
jmp
fdiv
dec
repz
or
(bad)
data16
shl
das
call
cmc
shl
sub
dec
fld
cmp
gs
adc
push
add
sub
push
fmul
xchg
mov
fst
or
adc
push
rol
and
es
jno
add
imul
popf
push
les
jae
pop
or
sbb
cmp
imul
cmp
jne
sub
jne
xor
push
sub
xor
shl
dec
and
mov
mov
mov
pop
add
cmp
sbb
cmps
out
or
xchg
mov
test
mov
aaa
add
pop
add
popa
and
dec
sub
sub
add
sbb
sub
dec
outs
retf
ret
and
mov
xor
mov
and
ins
ins
pusha
pusha
gs
jmp
lahf
sub
and
mov
out
pusha
jp
mov
mov
sbb
add
xchg
inc
pushf
enter
xlat
push
push
xor
add
xor
pop
ret
or
and
mov
daa
jns
shl
inc
pop
cmp
imul
sbb
ins
jb
imul
or
retf
cmp
retf
cmps
mov
mov
xchg
rol
mov
mov
out
stos
dec
popf
shr
loopne
fild
in
add
ds
push
cmp
int3
dec
enter
sar
inc
test
rcr
cmp
pop
mov
inc
mov
and
jns
jmp
sbb
or
test
cmp
mov
push
or
dec
retf
imul
dec
fnstcw
inc
cmp
jp
adc
inc
jb
add
mov
ret
cmp
cmp
dec
dec
lea
dec
or
arpl
loop
stos
xor
xchg
inc
fbstp
sbb
pop
into
jne
test
jmp
xor
cwde
dec
and
xor
jmp
jmp
and
cmp
add
or
push
stc
xor
add
sbb
repnz
mov
inc
push
push
enter
sub
into
clc
xor
cmp
shl
mov
adc
fnsetpm(287
dec
jmp
jne
cmp
mov
(bad)
popa
jmp
pusha
inc
call
test
loop
dec
mov
lahf
aad
inc
int
sbb
iret
mov
sub
add
daa
sbb
or
ret
and
xchg
pop
in
dec
fcom
daa
inc
dec
(bad)
xchg
push
pop
add
call
dec
add
data16
push
ret
and
icebp
ja
or
les
out
push
inc
loope
mov
pop
push
sbb
(bad)
mov
int3
test
mov
sbb
pop
push
pop
fiadd
aam
enter
pusha
add
inc
adc
adc
repnz
scas
add
inc
(bad)
sub
in
or
or
cmp
(bad)
fadd
fstp
inc
mov
clc
push
jmp
imul
dec
out
add
rol
cmp
add
nop
rcl
add
rol
imul
dec
add
sbb
add
fs
sbb
fistp
xor
xchg
adc
or
imul
adc
int3
or
mov
mov
xor
std
and
push
or
push
call
push
ret
mov
mov
push
pop
ins
add
mov
cmp
cmps
mov
jl
push
pusha
xchg
icebp
and
adc
les
cmp
rcr
cdq
xchg
out
or
ficom
inc
add
dec
and
icebp
sub
inc
movs
or
jae
mov
imul
and
ss
iret
aaa
jbe
rol
jmp
add
inc
fiadd
dec
cmp
push
add
push
add
into
pop
add
cld
mov
mov
sbb
cmp
nop
or
add
add
movs
xchg
or
dec
shl
push
or
xlat
in
jne
pop
sbb
pushf
test
mov
or
retf
imul
xchg
aad
xor
mov
lahf
sti
ins
cmp
xchg
into
mov
jl
xchg
repnz
dec
lods
outs
(bad)
cmp
adc
dec
xor
mov
and
adc
test
inc
cwde
mov
push
adc
cmps
dec
push
mov
mov
std
shr
outs
add
and
cwde
mov
pop
(bad)
xor
inc
push
fisttp
mov
add
loop
lods
(bad)
ret
or
jg
add
(bad)
jmp
push
push
jne
cmp
and
sbb
lods
and
fidiv
mov
dec
push
or
inc
mov
cmp
fwait
lds
mov
les
inc
cmp
push
xlat
push
lods
mov
xchg
dec
sbb
sbb
movs
lahf
das
sbb
jo
mov
dec
inc
repz
cld
rol
enter
loope
int3
(bad)
xor
xchg
push
mov
test
call
cmp
rol
scas
add
xchg
lods
pop
xor
pop
call
sbb
mov
cmp
lahf
jns
pop
dec
or
add
in
test
fsubr
cmp
ins
clc
and
jbe
jmp
stc
pusha
mov
adc
aam
(bad)
lds
sub
cmps
and
sbb
movs
shl
or
xchg
ss
mov
xchg
mov
mov
popf
xchg
mov
mov
loope
rol
push
xor
jae
or
mov
xchg
push
movs
arpl
cmp
push
hlt
adc
iret
sub
lods
test
in
push
in
ror
std
aad
xchg
and
xor
(bad)
jl
(bad)
inc
pop
ffreep
mov
sbb
dec
sbb
pop
sbb
mov
sub
dec
and
or
js
loop
xchg
shl
jp
fwait
test
cmp
rcr
dec
push
shr
aaa
and
mov
add
jne
or
addr16
loopne
mov
mov
jnp
fst
arpl
xor
dec
pop
pop
es
jecxz
call
add
mov
mov
popa
and
pop
jo
pop
adc
push
in
pop
inc
mov
sbb
fwait
sbb
xor
cmp
les
popf
lods
push
mov
dec
adc
adc
rol
je
ja
and
shl
adc
pop
loope
jno
iret
or
iret
aam
hlt
add
add
es
ret
ror
lods
es
push
and
aas
movs
std
lods
cs
sbb
mov
dec
in
add
outs
daa
fidiv
and
mov
or
mov
sbb
(bad)
mov
scas
ins
add
out
push
enter
add
(bad)
cmp
mul
mov
mov
js
jl
je
mov
call
mov
xor
pop
je
mov
add
inc
sbb
push
add
lods
shl
ror
mov
lods
or
enter
test
sub
and
retf
addr16
pusha
arpl
or
push
hlt
movs
sbb
fnstcw
call
inc
call
call
cli
imul
add
add
dec
sub
push
movs
rol
icebp
mov
imul
inc
je
mov
pop
mov
movs
or
sub
das
aad
cs
jmp
xor
test
inc
scas
add
add
inc
bound
fisttp
dec
add
imul
popa
jl
sub
xor
jnp
call
sbb
fwait
mov
movs
and
and
sahf
pop
sbb
mov
cmc
adc
push
and
adc
cmps
fst
mov
push
daa
and
jae
(bad)
shl
add
pop
mov
inc
sub
mov
xlat
push
push
and
or
nop
xchg
shl
loopne
push
and
mov
ret
and
cmp
xchg
inc
sar
and
and
add
jl
sub
inc
retf
cmp
in
mov
mov
or
xchg
jl
sbb
out
sub
adc
popf
xchg
test
or
or
inc
adc
mov
dec
mov
push
mov
cmps
icebp
or
mov
nop
lods
sub
push
add
or
les
sbb
jge
xor
mov
ret
push
xchg
pop
ins
and
xor
push
xor
in
cmp
push
inc
or
mov
inc
add
shr
data16
retf
jb
xchg
adc
and
in
add
add
push
jb
bndldx
push
inc
push
je
add
xchg
je
jae
dec
add
cld
jo
sbb
jnp
mov
xlat
or
in
xor
es
clc
add
scas
mov
mov
or
push
xchg
dec
add
mov
sbb
mov
outs
or
jmp
(bad)
mov
mov
mov
or
popf
and
pop
mov
les
dec
std
mov
push
(bad)
enter
les
xchg
or
add
add
and
pop
xchg
retf
cmp
shl
data16
ror
push
inc
pop
pusha
add
shl
or
ja
ds
sbb
pop
(bad)
aad
dec
cmp
or
dec
imul
iret
sbb
mov
adc
push
and
and
or
sbb
adc
cmp
mov
sbb
jnp
loopne
mov
inc
jb
cmp
into
add
cdq
mov
mov
or
movs
mov
sub
(bad)
cs
add
retf
push
ret
fistp
mov
pop
movs
sub
call
sub
addr16
or
adc
inc
ins
add
or
movs
push
loop
sbb
imul
rcr
and
dec
aas
dec
je
dec
sub
mov
jbe
in
les
inc
push
or
movs
mov
pop
or
pusha
stc
ss
add
mov
pushf
mov
(bad)
or
pop
movs
dec
xchg
jno
or
pop
leave
sub
shl
or
mov
and
es
or
popa
mov
sbb
out
fs
or
and
inc
sub
(bad)
pop
sahf
clc
xchg
std
out
stc
mov
xchg
xchg
add
mov
ret
addr16
push
mov
add
leave
xchg
or
and
jl
jp
outs
fbld
test
ins
setne
pop
pop
mov
push
loope
add
push
rcl
jnp
dec
xchg
xchg
inc
cs
inc
xchg
xchg
push
call
push
lock
push
xor
and
cmp
add
push
or
mov
(bad)
jmp
adc
pushf
dec
outs
xchg
retf
sbb
cmps
shl
rcr
inc
into
gs
sub
or
mov
inc
push
adc
and
add
cmp
xlat
nop
or
daa
mov
in
mov
and
lock
xchg
or
div
sbb
or
daa
and
or
and
or
fcom
lock
sar
push
mov
nop
xor
enter
mov
pop
pop
push
push
add
jns
dec
test
mov
leave
fsub
cwde
xlat
xchg
push
adc
or
add
add
iret
adc
movs
clc
adc
pushf
ret
(bad)
jne
int
fucomp
push
mov
adc
sub
and
(bad)
xlat
or
iret
add
enter
cmp
pop
or
sar
mov
mov
adc
and
add
add
test
add
das
or
cdq
loopne
in
les
clc
lea
shr
test
loop
inc
dec
push
and
std
mov
inc
sub
push
test
xor
and
push
enter
mov
xchg
jge
movs
jmp
sbb
dec
leave
push
cmp
or
and
dec
lds
in
lock
dec
jo
inc
popa
and
cmovnp
rcr
sub
rol
push
mov
adc
jns
arpl
popf
add
push
or
imul
imul
xchg
mov
shl
add
xchg
mov
fild
daa
pop
rol
jno
popf
mov
aam
adc
retf
jb
and
test
(bad)
idiv
or
xor
bnd
ins
push
pusha
sbb
or
inc
xor
repnz
jl
movs
ins
popa
sbb
rol
mov
cmp
xchg
sahf
and
lock
int
mov
add
pop
test
out
mov
test
add
push
cwde
dec
push
int
out
mov
sbb
loope
call
data16
sub
or
xchg
retf
in
and
push
add
(bad)
sar
sub
mov
ins
xchg
je
dec
bound
and
fcomp
mov
dec
or
lods
mov
mov
in
pop
or
ffreep
or
sub
mov
adc
shl
adc
repnz
test
enter
addr16
pushf
mov
rol
(bad)
or
adc
loop
cmp
jo
(bad)
jmp
ss
mov
inc
cdq
cmps
push
xchg
pop
xor
cmp
retf
xchg
dec
adc
or
push
push
mov
pop
lods
retf
add
gs
pop
xchg
adc
cmova
fs
or
xor
and
jno
fs
sub
inc
pusha
repnz
pop
in
stc
sub
push
retf
fs
popa
mov
adc
pop
mov
es
cmp
mov
and
retf
pushf
dec
rcr
add
pop
sub
or
or
add
xchg
sti
push
jnp
xor
dec
push
es
fmul
cmp
push
movs
pop
(bad)
ins
rcr
cmp
add
div
mov
hlt
or
out
dec
mov
ror
outs
mov
arpl
std
sub
adc
and
sbb
adc
cmp
rcr
lods
ds
push
shl
dec
or
in
adc
lahf
inc
add
js
add
and
adc
sub
bound
call
enter
loopne
dec
imul
jnp
test
inc
jecxz
jno
push
test
retf
call
mov
fisub
or
or
add
push
adc
retf
dec
push
push
xchg
fwait
sub
pop
hlt
mov
mov
mov
dec
xor
stos
or
inc
pop
mov
xor
ret
xor
or
cmp
dec
leave
pusha
inc
mov
rol
sbb
xor
jmp
cmp
fisttp
pop
dec
lods
test
mov
es
jo
add
and
add
xchg
clc
mov
push
adc
pop
popa
test
movs
inc
dec
inc
imul
add
sbb
adc
dec
je
mov
mov
push
enter
mov
pop
adc
mov
push
push
imul
inc
sub
pop
(bad)
push
add
movs
or
or
dec
test
in
fisubr
push
inc
and
inc
adc
inc
add
scas
xor
jmp
or
jmp
xor
push
adc
and
xchg
and
inc
addr16
jmp
sub
dec
add
pop
sbb
mov
push
push
or
mov
inc
sbb
mov
jmp
pusha
add
addr16
lock
inc
ret
fisttp
add
xor
xchg
add
mov
out
mov
in
pop
call
retf
movs
mov
loopne
out
xchg
xchg
loopne
fcomp
cs
adc
(bad)
pop
add
cmovle
inc
ins
aam
sub
add
pusha
add
inc
aam
mov
cmp
inc
jg
(bad)
call
pusha
sub
and
lea
es
adc
and
and
je
fmul
stc
add
adc
fstp
nop
popa
je
je
xchg
sub
jne
jmp
arpl
sbb
rol
out
xchg
or
add
in
arpl
sbb
mov
dec
jl
and
je
add
fldenv
mov
test
push
shl
shr
sub
mov
nop
test
in
mov
inc
retf
jns
sbb
outs
xor
fisub
cwde
or
rcl
xor
mov
mov
adc
daa
sbb
mov
cmp
ins
rol
popf
and
push
(bad)
aas
adc
mov
cmp
jg
test
inc
(bad)
push
cmp
and
pop
mov
add
outs
dec
(bad)
aam
jp
adc
pop
sahf
push
call
cdq
stos
or
jmp
shl
sbb
call
adc
test
push
pusha
xor
cmp
lea
jl
cmp
jg
adc
add
xchg
mov
dec
xchg
cmp
pop
div
pop
je
adc
shl
ret
dec
fild
out
push
jl
add
mov
pop
(bad)
push
mov
loope
xchg
or
xchg
or
(bad)
shl
les
mov
or
int
push
icebp
inc
call
in
shl
dec
pop
sar
xor
adc
xchg
mov
add
cmps
dec
mov
jmp
hlt
jmp
pop
adc
aam
fs
es
je
push
inc
(bad)
mov
dec
jbe
jmp
inc
cmp
lods
mov
mov
pushf
out
add
dec
sbb
shl
inc
(bad)
sahf
test
stc
adc
ins
cmp
and
neg
ins
inc
mov
dec
push
push
dec
sub
sbb
or
ins
jmp
add
pop
mov
push
push
inc
push
dec
mov
add
ja
lods
push
pop
mov
sub
add
add
lds
mov
push
push
shl
nop
imul
imul
and
dec
add
lock
cmp
mov
jg
sahf
xor
ror
cmp
or
adc
and
mov
cs
add
xchg
jo
add
pop
enter
add
sub
cli
inc
push
jmp
inc
rol
inc
xor
ss
retf
sbb
popa
adc
fdivr
sbb
and
cld
push
imul
cmp
add
cmp
and
mov
ins
mov
nop
loop
and
mov
test
or
or
rcl
sbb
cmp
pop
jmp
repnz
ret
cmp
pop
add
or
and
push
add
test
jnp
sar
cli
pop
push
enter
dec
frstor
fiadd
mov
pop
add
lea
inc
mov
sbb
aaa
loop
rol
ret
pop
inc
inc
dec
mov
arpl
ror
and
(bad)
cdq
pop
inc
adc
je
rcr
cmp
pop
call
test
je
lea
bound
sbb
adc
sub
test
push
sbb
sub
adc
jnp
dec
test
loopne
jno
sbb
iret
retf
fcomp
cs
enter
popa
in
push
cmc
aam
mov
cmp
je
aam
mov
daa
imul
icebp
mov
(bad)
mov
gs
call
sbb
lock
inc
mov
inc
sahf
addr16
jne
fdivr
add
jnp
shl
jae
jle
add
sbb
pop
xor
sub
xor
pop
pop
adc
test
jmp
push
pop
das
ret
lods
(bad)
xchg
fs
mov
loopne
shl
push
sbb
or
(bad)
sbb
dec
jne
mov
adc
jb
xchg
(bad)
vmovlps
inc
xchg
dec
and
dec
in
lock
(bad)
jmp
mov
push
popa
jns
and
sbb
loop
push
cmp
sbb
xor
loope
adc
inc
inc
(bad)
stos
add
xor
vcvttsd2si
fadd
loope
sbb
imul
enter
test
lock
mov
mov
jg
mov
sub
jnp
sub
sahf
call
adc
sbb
fwait
push
xchg
jbe
add
sahf
into
fdivr
xor
push
pop
cmp
addr16
xor
mov
xor
cmps
or
mov
es
dec
sbb
xor
cld
outs
ret
xchg
pop
dec
int3
test
mov
add
lahf
fnstcw
or
shr
ret
adc
fwait
test
mov
ret
xor
mov
ins
arpl
test
rcr
jbe
out
xlat
ss
jmp
lods
sbb
popf
bound
loope
or
push
inc
sub
(bad)
(bad)
mov
and
imul
dec
add
sub
inc
pop
fwait
test
rcl
pop
mov
sbb
popa
test
aam
add
dec
sbb
fisub
jp
cmp
inc
and
das
js
pop
add
xor
add
or
rol
lods
adc
jmp
dec
test
push
or
rcr
push
jns
xchg
adc
push
inc
jno
xchg
in
outs
lods
dec
cwde
rcl
cmps
mov
loop
pop
jmp
jge
movs
pusha
test
js
xchg
push
push
aad
sub
retf
adc
or
or
adc
jge
fadd
sbb
cmp
add
and
popf
push
or
adc
imul
push
imul
pop
adc
jge
push
cmp
adc
adc
lahf
fs
xchg
push
icebp
and
(bad)
sub
pop
mov
and
dec
cmp
dec
jo
sbb
test
add
sbb
sub
mov
mov
add
aas
and
xchg
sbb
into
mov
popa
pop
or
addps
dec
add
push
in
push
aam
mov
jle
add
inc
hlt
jge
mov
stos
dec
rcr
inc
es
shl
jb
mov
dec
nop
and
sub
cmp
dec
or
fwait
adc
inc
fwait
jle
je
mov
cwde
jbe
jg
pushf
add
cwde
ins
or
xchg
sub
shr
sub
imul
sbb
xchg
shl
popa
test
lods
jp
sbb
adc
test
out
sub
adc
cli
iret
fwait
sbb
dec
sahf
jmp
test
(bad)
sbb
jmp
fs
pop
mov
iret
dec
call
pusha
mov
movs
in
adc
jg
mov
mov
mov
int
clc
push
fidiv
adc
and
fld
and
dec
and
mov
xchg
mov
dec
fidiv
jl
mov
mov
adc
or
mov
fsubr
sub
sbb
cmp
sbb
push
test
xor
push
dec
mov
mov
ins
cs
cmps
hlt
jl
ret
mov
xchg
inc
sub
cdq
xor
dec
pop
fsub
cmp
test
sub
pop
add
lock
mov
ja
sbb
neg
mov
cmps
push
fnsave
jne
mov
sbb
das
std
or
xor
push
cmp
shl
mov
js
mov
push
iret
les
test
loopne
jae
movs
pop
add
cmp
cmp
jg
inc
(bad)
loope
and
cmp
inc
add
dec
add
(bad)
or
inc
cmp
mov
cmp
add
or
inc
dec
xor
cwde
adc
mov
sub
xor
mov
shl
loopne
loopne
pop
push
push
scas
mov
xor
xor
sub
mov
enter
ror
rcr
dec
sub
mov
sbb
mov
hlt
and
inc
or
ds
nop
pop
shr
in
jge
mov
xchg
xchg
pop
sub
push
mov
xchg
pop
or
int3
ret
jne
sub
sti
mov
fcomp
repz
fucom
or
lods
add
imul
dec
(bad)
mov
jl
(bad)
cmps
jecxz
sbb
aaa
sbb
lock
aam
sub
out
pop
sub
inc
or
mov
call
cmp
loopne
jmp
ins
push
hlt
(bad)
mov
(bad)
and
sahf
cmp
out
scas
js
sbb
inc
sbb
retf
push
sub
loopne
dec
push
xlat
ss
push
rol
test
mov
push
pushf
add
jecxz
dec
inc
add
cs
loopne
cld
push
fs
inc
add
xchg
js
daa
xor
outs
xchg
lock
xor
adc
add
sub
sbb
cmp
ficom
cmp
xchg
repnz
rcl
ins
fdivr
mov
scas
push
pop
sbb
dec
retf
(bad)
pusha
rcr
ins
or
xchg
movaps
jg
mov
(bad)
and
movs
sbb
push
shr
aas
mov
mov
add
push
push
clc
lock
cmp
add
cmp
fdiv
lock
push
or
dec
push
out
mov
daa
or
inc
push
fnstcw
inc
xor
sub
mov
push
test
ds
jg
xchg
mov
xchg
mov
stos
add
dec
cmp
jp
or
jmp
imul
and
dec
rcr
int
lds
ret
out
ja
outs
or
add
push
jne
inc
inc
pop
in
sub
inc
push
outs
jne
sub
cmp
jle
add
xor
push
adc
add
call
test
jle
hlt
call
jno
dec
leave
dec
or
and
aam
mov
xor
add
add
test
push
test
push
jl
push
push
jb
and
pop
std
xlat
in
in
push
inc
arpl
repnz
aam
aam
dec
call
cmp
mov
test
pop
imul
and
or
jp
pop
sbb
call
jae
jle
call
xchg
cmps
ret
jns
add
jne
xor
rol
pop
mov
add
mov
mov
dec
repz
imul
mov
ror
mov
xor
add
push
das
cmp
push
mov
int3
mov
int3
sub
call
iret
mov
add
dec
jb
pop
es
int3
cmp
pop
in
cs
adc
push
xchg
scas
daa
inc
inc
pop
xor
jne
sub
fmul
and
add
in
ja
add
int3
in
lock
fsub
ftst
push
retf
jne
push
and
sbb
or
jl
leave
fdivr
xor
jne
int3
das
xor
mov
js
arpl
(bad)
shl
outs
mov
jns
int3
fmul
imul
retf
repz
int3
rol
cs
xor
out
pop
ret
push
push
imul
loopne
mov
xchg
aam
sub
enter
int3
in
jb
or
in
sbb
xor
ror
xor
in
fsubr
rol
xor
call
rol
mov
iret
mov
(bad)
push
fs
xor
inc
loopne
jg
add
clc
and
sbb
xor
shr
adc
fst
push
add
jmp
mov
mov
inc
jne
xor
into
sub
sub
pop
or
ja
push
xor
mov
sub
add
inc
cmp
movs
dec
add
sbb
xor
xchg
ss
sbb
arpl
lock
neg
push
or
mov
jno
jmp
xor
jns
sub
in
add
mov
sbb
xchg
xor
es
cld
je
push
idiv
fwait
movs
dec
cmp
jne
xchg
loopne
pop
dec
push
int
je
movs
jo
mov
cmp
clc
xchg
dec
ins
les
xor
int
shl
jbe
sub
je
cs
adc
cmps
hlt
out
cs
jecxz
out
ficomp
invd
lds
cmp
out
xor
or
clc
lods
aad
sbb
adc
adc
cmp
sub
xchg
xor
jl
ins
push
sub
inc
cmp
pop
dec
mov
dec
jae
jno
popf
rsqrtps
stc
mov
mov
adc
pop
or
or
pop
nop
push
js
and
push
call
popa
mov
cli
push
hlt
dec
cmp
cli
inc
push
cmps
xchg
imul
lods
pop
cli
mov
fild
xchg
dec
inc
sub
call
xchg
mov
mov
js
aaa
dec
mov
into
nop
mov
shl
int3
jmp
cmp
or
jne
adc
ins
add
lahf
movaps
mov
ret
daa
pop
mov
sar
retf
ror
mov
inc
in
mov
add
push
les
pusha
cld
nop
mov
mov
or
pusha
pop
xchg
sub
fs
dec
xor
mov
sub
add
stc
inc
pop
sahf
pop
jg
fs
sub
loope
fs
or
retf
pop
jmp
mov
mov
in
ins
(bad)
stos
and
add
add
fadd
mov
push
scas
clc
pop
jo
loop
dec
jmp
shl
cmc
and
cmp
pop
fcomp
test
or
(bad)
mov
frstor
jg
adc
adc
adc
ins
push
fidiv
fdiv
dec
jge
lods
sbb
movs
imul
dec
loope
retf
fsub
ror
push
xchg
out
imul
aaa
and
aam
and
fcomip
test
clc
sub
and
pusha
push
cmp
cmp
and
adc
std
xchg
jl
adc
out
inc
das
sbb
mov
adc
cmp
(bad)
ins
arpl
mov
imul
shl
push
mov
push
adc
aad
lea
or
cwde
mov
or
rcr
iret
sbb
mov
pusha
pusha
mov
lds
or
jbe
adc
push
iret
dec
and
sar
nop
je
movs
and
ret
pusha
dec
dec
in
push
jae
popa
adc
pop
and
fdiv
ins
jne
push
es
cs
(bad)
lods
sub
les
out
jne
mov
ja
ret
out
scas
dec
xchg
jbe
sub
cmps
add
add
ins
out
mov
cld
les
dec
cmp
cmp
and
mov
ins
retf
aaa
stos
mov
mov
lock
push
adc
add
jbe
xor
(bad)
loope
sbb
push
add
push
and
and
add
dec
mov
ret
jnp
jmp
lods
sbb
jne
sbb
mov
and
cdq
ins
adc
or
icebp
mov
xor
je
mov
out
ret
ins
jno
mov
mov
shl
inc
inc
in
dec
mov
mov
xor
jb
loopne
mov
inc
in
mov
lea
or
lahf
mov
and
bound
cmp
call
and
sub
in
add
dec
jo
xchg
lods
dec
ret
push
pop
mul
add
loope
int3
pop
add
in
pop
add
ret
sti
sbb
jno
in
repz
dec
cmp
fldcw
fcmovu
sbb
add
cmp
mov
int
dec
jae
jg
cmp
jo
adc
and
mov
push
inc
pop
pusha
and
push
mov
pop
inc
jae
sbb
adc
mov
xor
or
add
adc
or
dec
pop
test
adc
ins
adc
int
push
push
mov
push
or
sub
adc
mov
cmc
push
and
adc
xor
enter
or
xor
xor
imul
push
retf
xchg
loopne
sbb
inc
dec
pop
adc
(bad)
or
push
inc
ret
pop
scas
xor
and
fisttp
adc
ins
and
xor
adc
xchg
push
xchg
test
jecxz
mov
jl
movs
pop
inc
mov
mov
sbb
or
std
xchg
adc
call
div
cmp
jl
(bad)
dec
pop
sbb
jecxz
pop
pop
inc
and
adc
add
sub
sahf
imul
sbb
add
or
push
lods
add
xor
or
push
dec
arpl
enter
lods
mov
mov
ret
sub
call
push
add
test
push
jbe
cwde
push
inc
imul
ret
push
dec
pop
and
jl
mov
adc
pop
pop
in
mov
adc
inc
pop
inc
adc
jno
add
mov
jge
je
dec
pushf
fdiv
fwait
mov
inc
enter
pop
cmp
adc
xchg
outs
(bad)
or
imul
or
add
loopne
in
or
movs
js
and
je
mov
xor
repz
fwait
mov
adc
iret
mov
mov
jmp
adc
push
push
sub
push
pop
(bad)
call
sub
inc
mov
jo
xchg
pop
add
push
sar
sbb
mov
push
ret
push
xchg
(bad)
push
loopne
std
(bad)
xor
in
jmp
sub
or
push
mov
push
clc
fwait
call
pusha
js
pop
mov
sbb
jno
xchg
cmc
or
mov
movs
push
(bad)
lods
jge
test
enter
push
ins
dec
scas
inc
and
jb
lods
(bad)
fadd
cdq
or
in
or
push
pusha
pop
add
icebp
test
mov
sbb
push
adc
xor
test
or
popf
mov
retf
inc
pop
jecxz
pop
movs
ja
and
mov
scas
add
mov
outs
fist
sub
mov
mov
and
adc
fwait
ror
mov
fnstcw
test
jl
inc
ret
ficomp
add
pop
icebp
cld
pop
inc
addr16
fist
sbb
push
test
retf
jecxz
fistp
popf
call
(bad)
outs
rol
mov
call
ret
fwait
jnp
test
add
mov
pop
fcmovne
push
sbb
fs
inc
mov
inc
dec
pop
and
pop
jecxz
cmp
push
push
xchg
sbb
daa
js
and
cmp
jl
je
xor
gs
jmp
inc
test
pop
repnz
lea
or
inc
int
mov
daa
and
in
pop
pop
inc
cs
(bad)
call
je
push
in
add
ret
sbb
fist
mov
mov
and
inc
adc
cmp
ja
dec
dec
dec
imul
pop
nop
cmps
test
pop
push
inc
mov
and
aam
and
inc
aas
pop
add
mov
xlat
sbb
jne
jmp
sbb
push
pop
jl
inc
or
sti
inc
shl
sub
cmp
and
xor
add
mov
fsubr
sbb
retf
sbb
gs
out
aad
int
mov
adc
push
jmp
push
ins
and
dec
sbb
jmp
jo
xor
mov
sbb
sub
nop
ins
sub
and
pop
dec
and
sub
bnd
sbb
leave
and
lods
and
dec
fimul
dec
and
push
push
jbe
ret
adc
jb
jge
movs
pop
mov
mov
inc
loopne
sbb
mov
fwait
cmp
imul
sub
inc
or
inc
adc
push
sub
(bad)
dec
leave
sar
jo
mov
pop
pop
nop
and
mov
ror
inc
pop
or
xchg
test
mov
pop
arpl
pop
cmp
stos
push
push
pop
nop
je
xchg
es
or
mov
fisttp
mov
test
adc
addr16
enter
sub
mov
dec
adc
cdq
nop
sub
sub
or
push
or
jp
aas
xor
xchg
or
and
jbe
(bad)
mov
add
mov
call
inc
movs
cdq
nop
or
cmps
dec
xchg
dec
imul
or
xchg
sub
or
fdivr
jp
mov
inc
dec
mov
in
mov
add
dec
les
sub
dec
adc
and
add
rol
jns
or
cmc
hlt
cdq
and
push
adc
sbb
sbb
cli
mov
inc
mov
and
loope
xchg
mov
mov
clc
and
loopne
push
or
mov
sbb
adc
fild
es
and
xchg
add
test
mov
mov
xchg
add
sub
xor
loopne
imul
add
ja
stos
or
das
add
sub
pop
pop
fstp
pop
and
ins
inc
push
add
and
add
ss
dec
enter
lea
sbb
ins
aam
mov
and
dec
mov
mov
push
sub
lods
loope
pusha
sub
xor
mov
adc
retf
loopne
mov
shr
sbb
adc
mov
push
dec
pop
lock
add
add
or
and
add
dec
and
lock
xor
push
jb
pusha
outs
sbb
mov
sub
dec
xor
lea
leave
push
enter
xor
imul
rcl
test
push
mov
dec
jle
adc
pop
or
add
test
and
ins
inc
xor
xchg
(bad)
sub
xor
adc
pushf
push
push
xchg
ror
adc
pop
and
add
and
inc
sbb
inc
aad
push
movlps
ficom
jl
daa
hlt
aaa
push
outs
add
or
push
rcr
and
add
test
rcr
adc
push
add
and
mov
pusha
(bad)
pop
or
pop
cmps
adc
inc
and
pusha
test
mov
loopne
adc
ret
ja
stos
or
(bad)
jb
pop
push
sub
and
or
xor
aaa
and
cs
push
dec
pop
dec
push
outs
or
cli
mov
sub
sbb
fs
push
jmp
and
test
xchg
ins
(bad)
xor
mov
sub
dec
loope
or
mov
xor
pop
and
mov
pop
add
xor
dec
add
(bad)
xchg
in
or
mov
ds
pop
dec
je
je
out
xor
(bad)
push
add
inc
je
add
inc
push
loopne
lea
mov
add
jp
push
mov
loopne
xlat
cmp
and
adc
pushf
xor
data16
mov
push
jmp
push
movs
test
jl
or
loopne
sub
movs
ins
bound
pop
lds
cmp
lea
mov
xchg
xchg
ret
sbb
movs
sbb
movs
or
sub
add
call
shl
adc
add
(bad)
jge
cmp
dec
add
js
cmp
add
ror
cmovno
sbb
add
test
enter
cmps
int
sahf
inc
test
add
in
and
add
add
inc
xchg
ds
inc
jmp
sbb
mov
std
mov
inc
push
jecxz
in
ins
dec
dec
movs
adc
sbb
sub
icebp
add
adc
in
(bad)
push
push
mov
sbb
imul
pushf
mov
pop
cmp
push
jmp
jmp
lock
sbb
sbb
les
or
sub
inc
xchg
mov
rcl
das
adc
(bad)
mov
adc
movs
cli
cmp
fisubr
sub
sbb
adc
or
cmp
mov
cmp
ret
and
mov
out
and
inc
sbb
pusha
or
push
add
aam
loopne
dec
loope
inc
push
cmp
imul
cwde
cli
adc
inc
stc
dec
cmp
add
das
mov
mov
sahf
inc
dec
pop
dec
lods
fld
add
(bad)
and
cwde
sbb
add
sbb
sahf
inc
cmp
pop
rcl
adc
dec
hlt
enter
js
add
retf
inc
and
push
js
adc
dec
ret
sub
xor
mov
shl
adc
stos
aam
pushf
mov
test
(bad)
mov
(bad)
call
mov
rcr
dec
sti
inc
je
mov
jecxz
inc
mov
xchg
sbb
add
inc
sbb
(bad)
stos
ins
out
dec
pop
rol
push
movs
fwait
(bad)
dec
push
push
les
mov
mov
push
mov
sub
inc
dec
aas
pop
fisubr
popa
push
stc
push
fwait
and
and
cmp
movs
xor
movs
add
ins
adc
cmp
jecxz
enter
ret
push
push
or
mov
sub
call
fist
gs
push
enter
and
sub
sar
enter
test
cld
and
clc
movs
pop
sub
add
push
mov
and
sub
dec
(bad)
je
add
sub
mov
add
retf
cld
fstp
loop
je
ror
mov
adc
dec
lods
mov
xchg
sub
xor
xor
inc
sbb
or
xchg
dec
aam
scas
xor
xor
or
pop
mov
pusha
outs
ins
cmp
jmp
mov
movs
hlt
sbb
cmp
inc
cmps
pushf
push
nop
mov
popf
lahf
mov
mov
push
cmp
movs
lock
stc
mov
cmp
pop
mov
mov
das
add
add
jbe
pusha
xchg
sbb
add
add
push
imul
or
xchg
jmp
jno
adc
rol
sub
cdq
and
or
dec
inc
fwait
inc
mov
or
mov
nop
nop
dec
push
adc
sub
pop
ja
inc
pop
or
push
jg
je
sbb
dec
jo
(bad)
dec
xchg
movs
push
jo
mov
nop
push
mov
dec
daa
adc
push
sbb
or
add
push
cld
push
add
and
inc
dec
mov
sbb
pop
nop
sbb
push
or
mov
cmc
arpl
aaa
cmp
pop
retf
push
mov
push
repz
sbb
dec
cmp
jo
outs
and
fs
xchg
pushf
mov
or
lods
in
mov
pop
xchg
or
dec
movs
pop
rcl
cdq
imul
out
mov
and
pushf
sbb
sbb
pusha
pop
movs
pop
push
aad
mov
dec
add
adc
cmp
pop
adc
xchg
dec
mov
sub
popa
push
cmp
cmp
add
retf
pop
add
push
mov
xor
lock
mov
jno
ret
push
cmp
es
jne
ficom
dec
xchg
frstor
mov
push
arpl
(bad)
and
add
push
add
fwait
jmp
xor
sbb
cmp
push
and
inc
or
dec
xor
movzx
ret
popa
aas
test
add
int
ror
pop
sbb
into
cmp
mov
sub
mov
loopne
xchg
inc
mov
dec
ret
popa
and
jmp
pop
push
sbb
mov
test
test
push
int3
je
jb
mov
dec
mov
adc
aad
test
and
fcom
sbb
inc
stos
push
push
mov
bound
adc
and
std
movs
inc
sbb
or
cmp
push
inc
sub
daa
mov
cwde
sub
cmp
xor
inc
in
dec
sahf
arpl
sub
imul
test
in
pushf
adc
adc
mov
cmp
jne
pop
inc
into
or
sbb
cmp
cld
xor
lea
hlt
mov
(bad)
mov
sbb
pop
dec
mov
mov
adc
mov
loopne
popa
sub
les
jno
int3
pop
stos
add
js
pop
push
adc
adc
retf
jl
stos
adc
test
add
dec
cmc
clc
sbb
adc
and
add
jl
mov
(bad)
or
cmp
addr16
inc
push
fs
movs
push
push
cdq
nop
or
in
mov
inc
in
dec
fdiv
retf
inc
fadd
xchg
es
sahf
push
mov
call
add
jo
bound
in
movs
inc
push
push
leave
loopne
mov
add
ret
cdq
add
push
aas
adc
xchg
leave
nop
js
inc
sbb
xchg
sbb
xchg
adc
xchg
adc
xchg
and
call
enter
jl
push
adc
cmp
cmp
mov
xchg
push
jle
xor
push
xor
jmp
(bad)
(bad)
and
add
repnz
(bad)
adc
adc
cmps
fadd
inc
and
push
jmp
adc
movs
or
mov
int3
ds
(bad)
out
or
dec
inc
js
push
clc
or
movs
xchg
jb
inc
pop
or
inc
cmp
punpcklbw
pop
popf
adc
cmp
test
and
adc
jl
in
mov
movs
mov
mov
xchg
fisub
ins
frstor
jae
xor
inc
and
mov
xor
cmp
dec
push
das
aas
dec
pushf
and
cmp
mov
ror
int3
sar
cmp
inc
push
mov
mov
dec
pop
(bad)
retf
jae
pop
or
inc
add
dec
push
mov
jmp
sub
stos
and
les
xor
mov
sub
mov
jle
fldcw
sbb
xchg
iret
push
test
in
cmp
stos
rol
cld
xlat
cmc
inc
pushf
ss
test
in
xchg
push
and
jp
mov
push
xchg
mov
xchg
in
sub
test
int
push
dec
lods
pop
and
and
push
stos
mov
jne
ds
je
shl
inc
add
adc
movs
add
xor
lods
jne
adc
enter
lods
inc
iret
inc
jle
mov
xchg
dec
inc
adc
ror
jbe
mov
ins
or
or
add
push
sbb
xor
mov
add
(bad)
dec
jl
loope
push
pop
lods
aam
stos
int3
outs
jmp
cmp
or
dec
cmps
xchg
cmp
icebp
shl
dec
test
or
dec
jno
pop
xor
push
xor
push
das
sub
sar
imul
adc
sbb
sub
add
mov
fs
gs
jle
xor
pop
aam
sar
mov
mov
mov
add
add
repnz
sbb
adc
add
ret
and
add
xor
aam
rol
sbb
pmullw
pop
and
dec
mov
mov
or
mov
push
cdq
sub
xchg
jge
mov
inc
dec
or
cdq
xor
loope
mov
(bad)
lods
imul
nop
mov
mov
pop
sar
rol
mov
and
jmp
nop
fld
sub
enter
fxch
addr16
mov
add
xor
pop
mov
movups
xor
lock
stos
sar
xorps
push
pop
je
dec
addr16
dec
cmp
mov
fbstp
js
bound
ins
(bad)
retf
cmp
rcr
lock
xor
push
add
rcl
sar
adc
inc
js
adc
hlt
cmps
sbb
sub
mov
dec
mov
js
jmp
mov
fs
jmp
lods
test
or
adc
addr16
gs
or
xchg
sbb
fs
movs
mov
inc
dec
push
xchg
and
or
jg
fcmovb
jne
daa
jnp
rcr
sub
dec
adc
in
scas
inc
mov
dec
mov
push
call
les
xor
pop
lods
lods
jecxz
inc
ret
xlat
data16
vpconflictd
int3
je
call
jo
jmp
sub
icebp
inc
mov
hlt
mov
fcomp
jnp
dec
fstp
fisubr
jmp
addps
popa
push
pop
inc
and
iret
pop
sbb
lock
add
aam
mov
loopne
push
cmp
mov
rol
push
mov
sub
add
xor
inc
shr
cmp
push
xor
dec
push
xchg
xor
mov
cwde
fiadd
outs
retf
movs
inc
or
jge
fmul
cs
xchg
stos
ja
ins
mov
mov
jge
jmp
mov
mov
cmp
ret
mov
rcr
rol
xchg
cmp
xchg
aam
adc
add
inc
push
mov
test
adc
retf
retf
mov
or
cmp
mov
xor
xor
mov
and
adc
fadd
inc
fidiv
jmp
test
mov
popa
add
cs
sbb
imul
mov
and
add
pushf
xchg
jno
imul
dec
sbb
dec
cld
sbb
sbb
(bad)
cmp
xchg
mov
push
and
xchg
fdivr
pop
mov
jmp
jne
jl
out
or
xor
fsubr
popa
loop
xor
fstp
xchg
cmp
shl
ins
inc
jnp
adc
mov
cmps
adc
fmul
outs
and
push
call
aaa
loopne
push
and
mov
mov
push
adc
lds
mov
das
xor
ins
jne
mov
test
hlt
inc
call
sub
pop
dec
jecxz
adc
test
adc
adc
xchg
sbb
fiadd
sub
cli
cmps
(bad)
data16
or
mov
mov
pop
mov
push
adc
test
xlat
pop
sub
outs
jmp
pop
data16
mov
daa
fisub
cli
fcom
or
les
add
pop
cmp
xor
push
outs
repnz
adc
clc
adc
fsubr
mov
in
fidiv
push
ins
jnp
pop
aas
mov
mov
sub
push
push
xchg
mov
sub
jmp
stos
inc
xchg
fwait
test
inc
cli
and
dec
push
mov
sbb
pop
sbb
mov
fwait
sub
adc
fld1
jge
(bad)
dec
rcr
pop
dec
cmp
cmps
push
fisub
adc
movs
inc
movs
inc
sahf
je
xor
repz
aas
jns
retf
sbb
mov
add
pop
mov
pop
jne
cmps
push
imul
pop
xchg
adc
inc
pop
sbb
pop
or
addr16
xor
xor
aas
sbb
pop
popf
scas
shl
into
push
jno
lods
inc
or
leave
add
addr16
push
nop
scas
imul
pop
dec
adc
dec
push
ret
out
fwait
(bad)
movs
pop
pop
dec
or
int
inc
and
cmps
mov
les
ins
test
dec
push
lock
push
jl
push
add
inc
mov
mov
lods
das
mov
inc
push
cmc
cmps
sahf
ins
push
or
jl
push
aad
sub
fs
mov
cmp
stos
jbe
test
arpl
push
pop
pop
add
jno
cmp
fst
inc
add
les
push
cmp
mov
adc
int
add
inc
jno
pusha
call
or
sbb
mov
mov
mov
mul
sar
and
test
mov
iret
push
cmps
mov
jne
push
add
push
nop
aas
pop
push
test
add
(bad)
sub
pop
cmps
inc
js
je
pop
jmp
(bad)
add
or
add
sbb
das
mov
adc
orps
xlat
clc
sub
lahf
push
add
fwait
cmp
mov
and
ins
xchg
dec
dec
daa
pusha
loopne
pop
push
fimul
stos
add
(bad)
xchg
add
das
and
sub
push
movs
add
cmp
std
dec
inc
push
ror
cmp
add
pop
movhps
and
mov
fstp
ins
cld
jge
add
cmc
cmp
leave
jecxz
cs
int
cmp
ds
inc
mov
add
shl
icebp
dec
cmp
mov
inc
cvtps2pd
mov
dec
les
rcl
icebp
fwait
add
jle
inc
sub
push
push
nop
push
mov
jb
mov
xchg
push
push
add
xor
inc
js
adc
pop
mov
xchg
and
or
cmp
mov
jmp
pop
push
outs
cld
add
(bad)
cmp
pop
push
push
mov
popf
mov
jo
and
rcr
xchg
xlat
mov
or
stc
pop
add
fsub
dec
pop
aas
adc
daa
pop
push
popa
test
push
sub
add
push
pop
xor
bound
mov
dec
lahf
push
cdq
or
repnz
or
push
mov
xor
(bad)
xchg
(bad)
loopne
or
cs
mov
dec
adc
ja
mov
sar
loope
and
enter
jbe
adc
and
sar
mov
sar
in
mov
(bad)
mov
mov
neg
xor
xchg
es
mov
test
sbb
or
jo
add
push
inc
pusha
jo
inc
clc
aad
and
clc
fwait
sbb
and
data16
dec
aas
inc
and
jmp
js
jle
mov
pop
mov
add
push
test
je
sbb
pop
aam
movs
dec
aaa
xor
dec
add
stc
imul
push
add
add
push
push
xchg
or
jge
loopne
pop
gs
cmp
push
or
push
out
pop
mov
adc
ret
ins
imul
inc
call
and
sbb
add
or
push
cmc
push
jne
pop
mov
mov
mov
imul
mov
test
ret
push
xchg
jns
lods
and
ss
push
adc
jmp
mov
mov
imul
mov
xor
lods
mov
push
fdivr
mov
jo
mov
push
adc
rol
adc
jne
add
fmul
(bad)
stc
imul
push
jl
fadd
sbb
jno
jo
sbb
cld
xor
lock
jmp
xchg
popf
adc
dec
and
mov
pop
cdq
cmp
mov
and
xor
fcomi
ss
and
add
sub
pop
xor
xchg
inc
xor
sub
cmp
xchg
or
nop
add
adc
xor
neg
inc
aaa
pop
sub
sub
ret
outs
dec
aam
ror
pop
inc
dec
or
or
xor
lods
and
aam
cwde
dec
or
mov
jmp
xor
push
or
adc
pop
push
outs
xor
(bad)
mov
pusha
jne
icebp
add
lods
pusha
sub
dec
xchg
or
adc
les
and
cmp
add
lock
nop
push
push
nop
clc
push
cdq
iret
inc
js
mov
or
xor
pop
push
add
nop
xchg
or
sbb
dec
mov
in
xor
jo
ret
add
ret
int3
test
cmps
push
je
jb
sub
add
add
sub
add
nop
xchg
add
xchg
in
dec
jb
idiv
pop
cmps
cmps
pop
nop
add
xchg
jbe
mov
xor
or
mov
adc
mov
or
lock
loop
mov
dec
sub
or
add
ror
bound
call
ret
movs
adc
xor
iret
push
ror
sbb
adc
inc
add
dec
test
jne
sbb
sbb
push
inc
push
lea
out
mov
int
sbb
sub
sbb
and
ret
jl
mov
jmp
addr16
add
lock
in
mov
add
xchg
ret
inc
push
sbb
les
sar
dec
push
cwde
push
mov
or
into
ror
daa
mov
imul
jle
dec
ret
adc
add
lea
and
mov
nop
bswap
xor
movs
pushf
mov
adc
mov
mov
pop
inc
and
into
pushf
mov
call
xor
js
and
ret
fs
movs
and
pushf
test
js
push
dec
xchg
pop
push
ins
dec
ins
push
jl
rcl
fadd
inc
fdiv
pop
mov
mov
inc
jl
(bad)
mov
je
imul
xor
fadd
sbb
add
or
mov
out
in
mov
call
adc
adc
jo
call
pop
fdivr
and
add
outs
popf
(bad)
fs
and
mov
fisttp
fadd
jp
aam
fadd
sahf
pop
nop
fsub
aam
fadd
imul
mov
addr16
leave
mov
add
adc
bound
ds
inc
fnstenv
js
enter
sbb
stos
inc
bound
mov
popa
mov
and
pop
mov
xchg
push
xchg
ja
or
sbb
sahf
dec
dec
or
mov
sbb
repnz
push
push
push
neg
or
push
movs
push
or
pop
add
stc
popa
sbb
and
out
stc
pop
enter
(bad)
lea
push
adc
or
into
inc
inc
daa
cmp
test
xor
jl
popa
sbb
in
inc
jecxz
adc
popf
adc
fdiv
lock
test
es
fcomp
cs
mov
add
int3
inc
call
pop
add
add
repz
xchg
cmp
in
iret
cs
xor
xlat
xchg
sub
cwde
das
add
and
sbb
aaa
cmp
fmul
dec
int
push
mov
push
leave
enter
out
cdq
push
(bad)
test
(bad)
call
ds
ret
sbb
xchg
push
inc
pop
sub
or
pop
jns
mov
fild
sbb
jmp
adc
fild
cmp
jne
xor
shl
stos
daa
movzx
xor
in
cmp
xchg
fisttp
cwde
inc
inc
aas
pop
loop
pop
push
adc
and
dec
iret
push
xor
and
mov
scas
inc
shl
push
sbb
lock
or
sbb
inc
jl
mov
adc
mov
ins
enter
jo
into
pusha
jmp
test
mov
repz
xlat
pop
inc
out
jo
jp
add
arpl
shr
and
inc
dec
ins
jb
add
or
or
xchg
add
imul
nop
popa
jl
xchg
push
mov
cmp
mov
add
and
shr
xchg
add
les
adc
bound
into
xchg
clc
retf
das
push
jmp
inc
mov
pusha
mov
ss
pop
cmps
add
sbb
xor
rol
lock
xor
dec
cmp
and
dec
jne
add
add
and
inc
push
push
pop
test
scas
or
jo
or
cs
inc
push
and
cs
mov
pop
test
mov
xchg
test
add
or
cmp
mov
jno
js
mov
dec
and
xchg
pop
dec
or
ret
cwde
adc
out
pop
xchg
push
sub
inc
push
call
dec
xor
cwde
or
add
jge
jmp
or
or
mov
sbb
inc
and
adc
xchg
lahf
scas
add
push
xchg
pusha
add
pusha
inc
jmp
stos
xchg
jb
dec
fwait
mov
mov
push
dec
jmp
adc
adc
mov
into
add
pop
mov
mov
or
stc
add
enter
xor
mov
test
movs
inc
jg
add
js
push
xor
dec
lods
dec
js
xor
push
and
mov
add
or
adc
dec
inc
loop
dec
bound
out
adc
pop
xor
xor
cmc
cmp
dec
dec
jo
pop
dec
sub
ins
jmp
mov
add
mov
sub
jae
aas
sub
jp
jne
adc
ins
push
xor
or
loop
fimul
pop
push
push
add
push
cld
sub
fisub
les
popa
add
aas
dec
loopne
fnstenv
mov
push
pop
je
or
pop
aaa
es
pop
add
jl
or
fs
nop
sub
mov
jne
push
cmp
or
sbb
ins
jecxz
push
mov
enter
add
fadd
out
mov
fisubr
hlt
dec
push
les
add
push
add
bnd
or
add
add
sub
in
inc
clc
inc
or
fs
push
jl
adc
xchg
mov
sub
or
adc
out
push
jp
cmp
adc
and
xor
add
add
add
call
data16
inc
sub
cli
mov
push
sbb
out
leave
cdq
rol
ret
into
xchg
or
jo
add
sub
dec
dec
(bad)
jg
and
sbb
xchg
mov
sti
mov
nop
(bad)
inc
xchg
imul
dec
pusha
add
push
pusha
cmp
xchg
push
inc
inc
loope
les
cmc
inc
loope
mov
dec
push
ds
je
and
sahf
cmp
fisub
pusha
push
nop
fnstenv
jle
inc
cmp
lock
mov
and
sub
scas
mov
rcr
or
dec
sub
add
jl
sbb
adc
movsx
push
jmp
sbb
or
push
jg
adc
rcr
and
fnsave
sbb
cmps
pop
mov
loopne
sbb
out
sbb
outs
inc
mov
imul
rol
(bad)
movs
add
jne
movsx
bound
cld
inc
mov
mov
mov
inc
inc
mov
enter
movs
add
xor
xchg
or
add
add
sbb
xchg
mov
inc
lods
adc
icebp
scas
call
sbb
xor
lds
mov
pop
push
(bad)
mov
sub
ds
xchg
(bad)
clc
sub
xchg
and
adc
dec
push
mov
add
or
add
ins
mov
int
push
push
sub
mov
aas
ret
je
or
dec
push
(bad)
stos
push
push
pop
ja
fist
push
push
sub
shr
fcmovbe
sub
add
add
nop
xchg
test
sbb
movs
push
repz
inc
je
ret
mov
jl
and
mul
add
test
add
(bad)
or
icebp
into
dec
dec
rcr
jo
mov
sub
cmp
loope
mov
add
or
mov
(bad)
shl
cs
mov
push
(bad)
out
and
lods
push
pop
lahf
mov
(bad)
cdq
fwait
ror
retf
cmp
pop
mov
xchg
mov
xor
sub
mov
xor
fisttp
leave
pmulhw
call
xor
sbb
fs
out
popa
dec
lods
push
nop
ficom
xor
mov
pop
aaa
sbb
or
add
jne
push
dec
add
or
sub
xchg
pop
or
sub
stos
ja
aam
test
fidiv
lods
jo
and
loopne
and
dec
js
add
push
add
(bad)
adc
jmp
jge
shl
mov
xchg
mov
aaa
adc
test
rcl
retf
pop
mov
bound
aam
push
jge
inc
push
cmps
ins
ror
xor
add
xchg
adc
jecxz
cmp
ret
jbe
mov
jl
adc
sub
cwde
ror
cmp
int
push
shr
int3
push
mov
adc
add
jns
out
cmp
rcr
adc
jmp
cli
fcmovnb
repz
mov
sub
xchg
call
sub
add
enter
add
ret
adc
daa
popa
cwde
mov
pushf
push
inc
inc
popa
xor
mov
(bad)
push
or
push
or
mov
dec
or
(bad)
rcl
pop
sub
xchg
push
sub
pop
das
lahf
pop
push
sbb
push
fisttp
out
ffree
and
add
push
ins
mov
ss
push
add
push
int3
mov
in
sbb
loopne
or
push
aam
daa
out
pusha
fisttp
or
mov
cmp
lock
and
icebp
sbb
sbb
je
push
push
pop
daa
mov
inc
iret
adc
add
push
or
xchg
das
arpl
scas
and
push
xor
pushf
aaa
dec
jmp
mov
fisttp
adc
add
dec
xchg
sbb
add
fcomp
add
jecxz
scas
int3
scas
dec
xor
adc
sar
push
pop
sysenter
ins
jbe
in
sbb
push
sar
leave
dec
addr16
add
daa
adc
push
mov
std
rcl
aad
call
aaa
outs
xlat
dec
(bad)
repz
in
gs
popf
jbe
inc
push
jecxz
mov
xchg
and
je
or
cld
(bad)
rcl
add
in
dec
or
adc
add
jo
cwde
dec
cmp
mov
add
adc
mov
inc
dec
mov
call
and
pop
fsub
sub
add
repnz
dec
push
lods
cdq
jmp
xor
xor
ss
(bad)
push
or
(bad)
push
imul
je
rol
mov
and
adc
retf
xor
cld
sub
push
inc
pop
fwait
push
push
mov
and
inc
jae
sbb
sahf
cmp
in
or
mov
xchg
sub
sbb
mov
cmps
fstp
mov
xor
pop
sbb
popa
xor
push
or
cmps
pop
fnstcw
fidivr
dec
sub
inc
and
push
sub
inc
stos
add
lea
mov
sbb
push
add
ror
(bad)
sbb
inc
adc
and
or
adc
adc
(bad)
movs
shl
sbb
ss
push
loopne
pop
inc
or
outs
mov
push
push
sbb
sub
cwde
sbb
dec
push
rcl
popf
ins
lock
adc
xlat
out
loopne
cwde
aam
pop
sub
push
inc
adc
ds
xchg
rol
(bad)
push
or
or
inc
sub
ins
sub
addr16
nop
cmp
ins
js
(bad)
neg
fadd
jne
cld
inc
stos
test
imul
ins
or
dec
dec
add
mov
ret
fiadd
clc
cmps
jge
dec
push
push
nop
push
push
mov
and
bound
fst
fwait
xchg
sbb
jg
and
pusha
cmp
add
sti
ja
push
add
add
push
jo
test
jge
retf
nop
pop
cmp
jmp
cdq
mov
jmp
add
sub
mov
add
xor
mov
push
das
sbb
xchg
cmp
inc
xor
inc
sbb
adc
xor
ss
push
adc
mov
inc
dec
xchg
ins
test
jne
xchg
jne
sbb
lea
add
push
pop
jne
mov
adc
je
push
popa
mov
xor
push
sub
xchg
sub
sub
je
fild
frstor
mov
jae
inc
dec
mov
dec
xchg
or
inc
scas
mov
js
out
jno
push
jp
sbb
pop
inc
sbb
adc
add
fsubr
sbb
and
push
add
or
cld
push
(bad)
mov
lock
jbe
or
je
sbb
and
aaa
or
xchg
mov
mov
nop
sbb
fisubr
mov
xor
xor
sbb
push
mov
sar
cmp
jae
push
lock
outs
(bad)
jne
idiv
sub
push
or
retf
xlat
test
lock
mov
iret
popa
push
xor
or
push
add
pop
iret
test
sub
jmp
inc
push
das
icebp
jmp
(bad)
and
jmp
add
ja
cmp
je
or
add
lock
inc
dec
jle
loope
mov
push
lds
add
(bad)
and
aad
or
cmovae
and
push
(bad)
call
xchg
das
push
xlat
add
xor
xor
jg
mov
jae
sar
lods
pop
outs
push
stos
sub
jg
pusha
sub
push
mov
or
shr
pop
rcr
outs
adc
mov
sbb
inc
inc
or
add
shr
popf
cmp
sbb
and
or
xor
pusha
and
or
or
or
fsubr
inc
test
push
or
and
mov
addr16
ss
add
add
adc
cmp
ins
dec
aas
push
jmp
fcmovnb
pop
lock
je
sub
sub
dec
pop
and
rol
(bad)
(bad)
ret
push
cdq
stc
cmp
mov
inc
outs
dec
les
ja
mov
or
test
push
sub
mov
mov
mov
adc
xor
movs
push
ins
add
add
sar
jbe
pushf
or
jmp
and
pop
mov
mov
xchg
pushf
jmp
sbb
movs
add
cmp
movs
lea
loopne
aad
pop
jecxz
add
add
out
xchg
jno
jo
xor
sub
adc
xor
cmp
sbb
mov
sbb
or
adc
add
adc
mov
loopne
push
scas
add
xor
je
mov
mov
sbb
and
push
mov
jmp
add
and
or
hlt
jmp
adc
mov
push
add
rcr
add
dec
scas
sub
sbb
imul
mov
test
mov
xor
adc
call
into
cmp
mov
popf
ss
cmp
btr
or
out
ficomp
aad
(bad)
je
ror
pop
or
dec
dec
ins
jecxz
adc
call
add
ds
or
sbb
push
mov
or
pop
cmps
lea
ret
add
xor
(bad)
adc
cmp
test
add
mov
pop
add
xchg
sub
cli
and
mov
aad
(bad)
push
dec
inc
ins
(bad)
fcmovbe
xchg
cmp
cdq
or
cmp
loopne
popf
pusha
add
sahf
inc
fmul
shl
pushf
cmp
sub
rcl
sti
sub
je
sbb
lods
sbb
sub
daa
push
loope
dec
imul
or
pop
jne
rol
and
inc
dec
add
dec
xchg
gs
dec
inc
xchg
inc
sub
xchg
js
jns
scas
and
adc
mov
inc
pop
inc
(bad)
jae
aam
lods
jmp
sbb
inc
or
mov
jmp
stc
out
cmps
sub
pop
mov
jl
test
in
or
frstor
outs
aam
jmp
push
xchg
les
pop
fadd
mov
mov
aas
pusha
scas
imul
int3
mov
inc
dec
and
mov
enter
sub
dec
into
push
inc
es
aam
adc
inc
dec
jno
loopne
mov
loopne
add
or
leave
xchg
push
rcr
imul
movs
adc
in
mov
sbb
sub
inc
rol
push
mov
jle
shr
inc
push
push
xor
mov
push
cwde
or
dec
inc
adc
sub
ja
sub
add
cli
mov
aad
frstor
pop
inc
loope
ret
push
pushf
fdiv
pop
pushf
fld1
pop
ins
add
(bad)
fadd
adc
fdivr
ss
adc
pop
xchg
call
popa
dec
cmp
mov
fcmovu
jmp
cmp
adc
rcr
mov
cmp
shl
fadd
and
jle
xor
fadd
fsubr
jl
repnz
mov
fcmovnu
mov
leave
fmul
inc
shl
mov
adc
jb
cwde
fadd
add
aad
iret
adc
pop
shl
xor
out
ffree
fcom
push
jmp
sti
push
fdiv
add
jge
imul
out
clc
push
sbb
dec
clc
ds
test
add
fild
test
sub
jo
loopne
mov
adc
inc
push
mov
mov
imul
mov
imul
pop
(bad)
xor
fdivr
cmp
in
fmulp
fidiv
lds
(bad)
fxch
xor
ret
aas
push
rcr
fadd
xchg
loope
ret
adc
jbe
mov
bound
push
mov
out
loope
fdivr
(bad)
push
mov
(bad)
and
sbb
adc
(bad)
fxch
retf
pop
or
lldt
push
fmulp
fsubr
fdivp
loopne
jo
add
inc
inc
mov
dec
inc
arpl
rcl
pusha
rcr
lea
cmp
jbe
pushf
outs
add
dec
mov
out
call
test
mov
movs
add
sbb
sub
xlat
mov
mov
pop
adc
inc
cmp
push
fild
call
jbe
add
or
mov
and
retf
add
or
sub
rcr
data16
loop
fnsave
jmp
jno
jbe
mov
fs
loopne
fdiv
jmp
lods
and
lods
fbld
mov
bound
sub
neg
push
or
scas
xor
and
pop
psubsw
sub
daa
fsubr
jb
inc
or
mov
push
mov
xor
push
mov
dec
fcomp
or
out
adc
xchg
dec
and
pop
add
or
jp
or
inc
xchg
mov
mov
mov
fiadd
or
mov
adc
cdq
idiv
cmp
lods
add
jp
or
cmc
inc
je
inc
mov
jmp
pop
mov
xchg
dec
mov
xor
push
ins
fwait
push
aaa
retf
cmp
shr
mov
jp
jnp
movs
outs
sbb
shl
or
retf
push
sub
add
dec
add
mov
mov
ret
sub
ret
gs
sub
push
cwde
or
enter
shr
sbb
sub
data16
fstp
fld
repz
ss
xchg
lods
imul
jmp
jmp
cli
(bad)
in
fwait
stos
movs
fmul
ds
fsub
stos
out
nop
push
mov
push
and
call
lds
test
inc
or
shl
rol
shl
or
in
and
jns
xchg
sar
sub
adc
popa
push
test
or
mov
xchg
mov
pop
inc
cmp
cwde
repnz
es
fild
xacquire
dec
inc
mov
push
jecxz
ror
mov
mov
leave
jl
push
mov
sbb
ficom
out
and
adc
adc
inc
add
fwait
fwait
adc
ja
dec
js
xchg
and
bnd
jmp
inc
inc
mov
jb
mov
sbb
adc
sub
std
ins
inc
pop
bound
sti
mov
retf
jnp
adc
sbb
add
(bad)
(bad)
idiv
nop
add
cs
mov
mov
sub
mov
push
lea
adc
je
mov
pop
(bad)
ins
push
shl
or
test
cmp
ins
or
push
xor
mov
mov
mov
push
push
inc
mov
and
jns
add
cdq
cmp
push
enter
xchg
mov
jle
(bad)
movs
test
(bad)
mov
inc
pop
jns
sbb
pop
(bad)
or
pop
sbb
in
not
push
cli
sub
or
adc
data16
xor
vfnmadd213ss
adc
pop
int3
mov
outs
xor
mov
(bad)
std
push
sar
inc
fdiv
dec
adc
inc
js
jbe
cmp
cmp
xchg
jl
(bad)
out
mov
push
loop
gs
into
sbb
jle
push
int3
(bad)
and
loop
test
jp
pop
pop
pop
sub
adc
fmul
popa
push
gs
mov
out
test
lods
sub
add
aam
jne
cmp
mov
inc
cmp
ja
add
push
adc
(bad)
not
add
arpl
mov
ret
push
hlt
sub
push
or
in
mov
jne
xchg
sub
xchg
outs
or
cmp
push
xlat
and
pop
imul
hlt
fadd
jl
fcmovbe
adc
or
in
(bad)
sbb
jbe
dec
add
dec
add
mov
sub
fxch
jmp
imul
jle
xor
or
or
mov
mov
adc
hlt
mov
out
push
ret
xor
and
in
mov
add
mov
sbb
cmp
or
adc
mov
pop
or
or
adc
fadd
pop
jmp
dec
or
add
cmc
push
xchg
jg
add
shl
dec
test
mov
inc
ror
ret
sbb
inc
and
sbb
adc
ds
fidivr
adc
shr
and
jo
xchg
jne
sti
mov
cmc
fld
(bad)
sbb
push
into
jmp
push
sub
xchg
sbb
pop
je
nop
dec
dec
addr16
int3
ins
or
xor
and
or
cmp
pop
pop
retf
jl
or
push
push
hlt
xor
push
pop
shl
aam
movs
and
mov
cmp
pop
mul
sbb
clc
push
adc
test
(bad)
fnstenv
pop
into
les
mov
mov
pop
xchg
inc
loopne
dec
inc
push
mov
jge
sbb
hlt
je
push
adc
aam
mov
aad
pop
repnz
mov
mov
sub
add
add
push
mov
mov
add
push
push
mov
push
movs
and
in
push
push
sbb
sub
inc
sub
dec
mov
adc
and
push
mov
xchg
or
push
push
xchg
sti
mov
mul
push
dec
in
lahf
sbb
jle
pop
loopne
adc
xlat
mov
inc
mov
cmp
xchg
mov
add
test
adc
fs
in
arpl
mov
dec
cmp
adc
xchg
add
jge
push
aaa
cmps
loope
push
push
loopne
jnp
shr
into
imul
push
sub
sbb
adc
xor
mov
cmp
aad
hlt
xor
add
mov
adc
xor
int3
in
add
mov
mov
inc
sub
sbb
sbb
inc
popa
jle
xlat
cmp
jo
rcl
push
jne
inc
daa
test
loop
es
ds
jnp
scas
push
les
or
adc
stos
loope
adc
pop
mov
xchg
dec
pop
jbe
lahf
loopne
inc
imul
jl
shl
and
js
jo
xchg
shr
jge
pop
fisubr
loopne
test
aam
and
or
cld
pop
add
cmp
mov
test
add
push
ror
clc
push
dec
mov
adc
fdivr
repnz
push
mov
xor
push
push
in
inc
mov
mov
mov
ss
int3
mov
mov
aam
shr
ins
lahf
or
push
mov
je
sbb
movs
xrelease
mov
jbe
clc
sbb
adc
call
(bad)
add
fcmovb
dec
and
inc
or
ss
in
test
enter
xchg
jp
inc
les
fs
jl
xchg
mov
xchg
cmp
or
sub
add
cmps
push
mov
sti
adc
xor
loop
test
xor
test
popf
mov
sub
and
mov
lea
and
mov
lods
test
add
push
sti
add
sbb
and
and
pop
popf
cmp
mov
rcr
pop
shr
push
dec
in
jecxz
movs
lods
(bad)
sbb
dec
aas
hlt
push
push
mov
xor
xor
pop
pop
pop
mov
mov
sub
adc
or
pop
fmul
dec
fwait
hlt
mov
add
out
mov
lock
es
mov
push
mov
mov
add
cmp
dec
or
push
push
arpl
mov
cmp
ins
xchg
sub
adc
(bad)
movs
sbb
movs
jmp
jbe
(bad)
jo
rol
ins
or
div
aas
dec
adc
loopne
fldcw
mov
mov
xor
push
cmps
aaa
mov
in
push
mov
push
push
test
mov
fwait
push
(bad)
cmp
mov
lock
and
xor
jb
popa
mov
push
fs
jae
dec
mov
adc
imul
inc
push
addr16
jmp
xchg
mov
cmp
pop
ins
daa
test
loop
xchg
test
mov
or
adc
inc
sbb
pop
mov
jo
mov
popa
adc
add
dec
dec
sub
jae
repz
pop
mov
je
xor
push
arpl
mov
xlat
sbb
mov
std
test
lea
xor
mov
movs
sub
adc
inc
dec
adc
and
cmp
sahf
xchg
frstor
(bad)
stos
in
push
sub
and
cmps
(bad)
sbb
adc
or
lods
hlt
fidivr
leave
sbb
retf
add
sub
rcr
movs
idiv
das
mov
mov
mov
mov
test
sti
pop
test
xor
jo
inc
and
mov
cmp
loop
icebp
fisttp
retf
cmp
push
dec
sub
stos
sbb
sbb
and
mov
fwait
hlt
out
sbb
pop
cmp
push
sti
mov
cmp
test
mov
aaa
jnp
lods
mov
inc
test
and
push
inc
add
inc
enter
leave
jecxz
pop
sbb
sub
call
int
fidiv
mov
(bad)
not
mov
lea
and
xchg
push
xor
jp
fbstp
cmp
mov
and
or
mov
loopne
xchg
ss
mov
shl
push
or
imul
ss
adc
nop
outs
mov
repnz
pop
cld
ins
push
(bad)
mov
or
mov
xor
jmp
push
and
xor
clc
sbb
pusha
popf
add
mov
test
mov
(bad)
xor
pop
das
cmp
scas
popf
ss
inc
pushf
xor
adc
je
add
dec
or
pushf
addr16
mov
push
cmp
sbb
movs
pop
out
mov
cmps
sbb
mov
test
mov
aad
push
xchg
xor
push
nop
rcl
daa
sbb
(bad)
stc
xchg
sbb
test
(bad)
sbb
and
xor
in
pop
or
retf
mov
add
push
cmp
popf
jmp
lods
loopne
or
sahf
in
dec
or
bt
and
cmps
call
ds
and
or
xor
nop
inc
xchg
xor
jmp
aaa
pop
mov
js
movs
jecxz
push
hlt
(bad)
adc
(bad)
sbb
retf
imul
cmp
mov
aad
dec
aaa
mov
mov
add
sti
add
sbb
test
je
loop
popf
add
enter
xor
fidiv
lock
addr16
jno
lods
jb
sub
js
js
xchg
sti
int3
repz
pop
mov
enter
push
inc
dec
fdiv
inc
jne
or
push
popa
pop
nop
mov
pop
dec
sub
les
into
mov
(bad)
call
adc
bnd
(bad)
int
sar
push
inc
fs
xor
test
push
rcr
push
(bad)
in
jns
inc
mov
sub
arpl
pop
xchg
ror
(bad)
dec
call
push
rcl
mov
push
cmp
fcom
push
add
adc
jb
mov
xchg
lods
pop
inc
add
cmc
jne
cmp
and
add
pop
jbe
daa
sar
es
sbb
ror
and
arpl
inc
bound
loop
in
(bad)
xor
cmp
hlt
inc
in
push
jecxz
cmp
sbb
fstp
rcr
and
retf
mov
lea
std
out
mov
xchg
push
adc
xchg
scas
cmp
dec
jo
cmps
mov
fdivr
mov
sbb
add
lods
pop
push
fs
cmp
fst
xchg
sub
ins
dec
(bad)
adc
or
push
dec
push
dec
cli
add
lods
test
test
push
sub
xor
stc
or
pop
fnstenv
jp
dec
jae
ja
fxch
fxch
jmp
seto
and
rcr
dec
sub
or
mov
rcl
or
outs
sbb
jmp
fstp
xchg
test
push
fild
push
popf
xor
ins
out
xor
push
xchg
cmp
loope
or
sbb
cdq
rcl
test
push
push
push
mov
mov
cli
xor
push
in
mov
cli
xchg
lods
sub
out
enter
xor
add
xor
fwait
adc
stos
movs
call
xor
xchg
inc
fisttp
cmp
nop
(bad)
fmul
dec
mov
cmp
add
sbb
shl
pop
jb
push
ins
test
jnp
sbb
jne
mov
fld
call
sub
mov
jmp
imul
push
nop
mov
cmp
pushf
push
push
imul
mov
sti
inc
leave
push
or
(bad)
sbb
sbb
mov
sbb
(bad)
push
sbb
add
xor
cwde
dec
pop
or
cmp
cs
loop
in
lahf
sbb
xchg
leave
mov
movs
mov
retf
les
test
push
cmps
movs
sbb
in
add
push
stos
pop
test
adc
xor
loope
and
je
xor
jmp
cmp
inc
sub
xor
cmp
or
and
bound
imul
jmp
mov
or
call
adc
loopne
repnz
push
jbe
or
(bad)
fidiv
adc
xchg
mov
dec
dec
sub
xchg
xchg
adc
and
ret
nop
mov
dec
xchg
retf
or
push
and
ins
xchg
test
push
in
(bad)
pop
inc
adc
outs
pop
jle
xchg
(bad)
dec
sub
add
mov
dec
jge
or
cmp
out
add
inc
add
mov
and
adc
dec
or
or
sub
xor
or
cmp
sbb
sbb
rol
add
mov
inc
scas
in
jecxz
push
and
add
pushf
add
int3
data16
add
adc
and
push
cmc
and
adc
stc
push
test
jnp
sub
and
cmp
je
js
and
adc
fisttp
sbb
mov
pop
out
fnstsw
add
and
inc
xor
and
add
adc
jo
add
xor
sete
lea
mov
(bad)
xchg
and
sbb
je
cdq
bound
movs
or
adc
mov
movs
pop
ror
fld
sub
or
js
repz
retf
or
cmp
mov
mov
fmul
cmc
aad
cmp
mov
pop
push
aas
push
add
xchg
adc
clc
lods
movq
dec
push
aas
dec
pop
push
xor
dec
xor
pop
lea
or
adc
mov
jbe
cmp
push
fsub
push
data16
or
xor
adc
(bad)
loopne
adc
daa
fiadd
inc
dec
and
push
rcl
(bad)
mov
push
mov
cmp
pop
mov
hlt
or
fxtract
pushf
outs
popa
imul
xchg
adc
pop
and
push
sbb
mov
add
mov
mov
and
mov
and
xchg
test
aam
cvttps2pi
pop
push
or
sbb
and
or
sbb
or
jmp
or
test
js
lahf
repnz
ret
fcomp
fisttp
mov
ret
test
cwde
mov
(bad)
repnz
or
in
sub
jno
push
sbb
sahf
sbb
cs
jge
sub
wbinvd
stos
or
call
sub
adc
add
mov
cmp
sbb
in
cmp
mov
xchg
es
test
(bad)
in
dec
call
sar
and
jo
fld
(bad)
fucomp
js
add
mov
sbb
pop
fstp
or
sub
sar
jp
test
add
int
rcl
pop
rcr
adc
push
jne
xor
push
pusha
pusha
fs
sub
sti
or
mov
fdiv
add
fisubr
jo
lds
sub
mov
adc
enter
cmp
jmp
and
stos
test
fs
rol
fild
xor
push
icebp
mov
(bad)
mov
pop
xchg
add
dec
in
mov
cmp
jle
bnd
add
xchg
jle
in
jle
and
lock
popf
push
daa
sbb
mov
fwait
sub
push
xchg
add
or
shr
fstp
xchg
cmp
push
xlat
loopne
mov
imul
mov
retf
movs
xlat
jae
pop
test
mov
pusha
rcl
out
pop
sub
cmp
imul
ror
sub
xor
stos
xchg
test
jp
pop
or
enter
or
xor
add
ret
into
jge
pop
punpcklwd
pop
sahf
jb
je
mov
retf
in
imul
mov
pop
fs
inc
or
ret
push
mov
jne
mov
clc
dec
in
jmp
adc
xchg
adc
and
inc
(bad)
(bad)
xchg
test
(bad)
stos
rcr
mov
add
lods
pop
inc
cmps
xchg
inc
push
adc
imul
pushaw
js
adc
dec
call
inc
sub
loope
pusha
inc
mov
inc
push
push
push
cmp
mov
and
xor
push
dec
loope
out
rcl
ds
aaa
scas
test
pop
push
mov
cmp
add
inc
sbb
jbe
fdiv
mov
es
call
inc
enter
sub
inc
in
mov
adc
(bad)
cdq
cmp
lea
jne
jmp
push
pop
inc
xchg
enter
sar
dec
xchg
jb
popf
sub
sbb
dec
pop
call
mov
popf
or
fadd
popf
inc
mov
stos
sar
jbe
pop
adc
mov
adc
mov
js
add
adc
cmp
jbe
dec
fcomp
sub
sbb
xchg
scas
xchg
lods
push
pop
inc
(bad)
bound
js
shl
(bad)
test
xchg
mov
out
inc
mov
sahf
mov
sbb
mov
fcom
fadd
fstp
mov
dec
mov
jo
repz
mov
in
jo
jb
aad
(bad)
mov
sbb
sbb
add
add
fstp
sub
add
sbb
sub
and
dec
adc
xchg
cli
in
or
and
pop
rcl
adc
sbb
inc
add
xchg
test
push
push
jecxz
ret
ret
loopne
repnz
pop
mov
or
add
and
stc
lock
ret
mov
imul
mov
fadd
std
push
aam
or
call
and
push
shr
mov
cmp
pop
shl
push
ss
pop
and
ds
dec
xor
adc
out
mov
pop
xor
popa
iret
mov
xchg
dec
or
pusha
lea
clc
aaa
inc
cmp
adc
adc
push
dec
jecxz
or
ficomp
add
neg
sbb
popa
movs
cli
and
xor
fiadd
popf
or
or
mov
pop
aaa
pop
adc
clc
inc
sub
and
in
data16
sbb
pop
xlat
sahf
or
es
int
out
in
pop
add
daa
scas
push
push
je
aad
mov
push
xchg
sub
fisttp
xchg
fadd
clc
out
mov
or
sub
xchg
popa
jge
cmps
dec
mov
add
inc
push
xor
sbb
and
or
fistp
or
cmp
dec
ror
mov
jo
fnstenv
pop
mov
(bad)
out
pop
and
stos
clc
push
retf
hlt
retf
push
mov
pop
and
(bad)
or
mov
xchg
inc
in
jnp
or
test
xor
repz
push
xchg
test
(bad)
xor
push
mov
and
or
cdq
adc
mov
imul
mov
xor
test
pop
mov
dec
ror
mov
ins
movs
inc
imul
adc
xor
cmp
mov
div
inc
xchg
pushf
adc
aam
nop
mov
rol
lock
pop
rcl
into
mov
sbb
jle
push
fst
loopne
xchg
push
jae
aaa
add
aas
mov
mov
push
add
sub
sti
imul
pop
(bad)
rcr
lea
arpl
fiadd
push
or
mov
daa
int
jnp
daa
push
and
xchg
rcr
cmc
ja
lea
fs
test
dec
sbb
(bad)
ins
inc
cmp
test
inc
jnp
dec
add
jno
jne
out
sahf
fsubr
xor
int3
mov
sbb
xchg
or
cmc
sub
and
push
add
movs
nop
xor
add
cmp
loop
dec
inc
das
push
test
jo
inc
scas
into
mov
into
push
rol
mov
gs
push
or
sar
ret
or
ret
dec
ja
xor
(bad)
ss
mov
aas
mov
xor
or
add
lock
adc
rcl
adc
push
int
(bad)
aam
sub
jge
mov
mov
xchg
pusha
and
mov
ror
jbe
or
push
sub
push
jmp
test
ds
dec
adc
iret
xchg
jmp
cmps
jle
ficomp
push
push
pop
push
call
sbb
pop
enter
les
xor
popf
sub
je
imul
call
into
mov
mov
jo
mov
xchg
xchg
add
pop
dec
dec
in
push
ret
cmc
add
pusha
jp
mov
mov
dec
pop
retf
cwde
je
push
xor
mov
and
adc
xor
sar
ins
cmp
sbb
adc
out
push
inc
sbb
sbb
add
add
push
fcomp
xchg
fbstp
sub
loope
push
or
mov
test
cmps
je
mov
mov
mov
daa
inc
movs
push
ins
dec
loopne
stos
(bad)
outs
xor
sub
cmp
mov
or
mov
ror
xor
call
pop
mov
xchg
push
push
sbb
mov
push
fwait
mov
push
add
inc
xchg
pop
fidiv
xlat
and
pop
call
adc
lahf
ret
mov
mov
push
call
push
scas
push
or
sbb
pop
sbb
mov
xor
jae
add
dec
test
ins
xor
mov
adc
lea
shr
rol
test
add
xor
outs
xchg
lahf
ret
ret
and
push
inc
mov
and
pop
retf
cmps
movs
cmp
in
and
dec
pop
sub
mov
clc
pop
dec
lea
(bad)
neg
fcomp
daa
popa
jmp
mov
sahf
fdivr
inc
jmp
lds
cmps
sub
in
nop
jne
push
jmp
inc
test
pop
sbb
test
inc
push
cmp
mov
mov
inc
push
or
call
adc
xchg
xchg
shl
add
ss
and
sbb
pop
mov
mov
hlt
xchg
mov
or
push
lock
and
in
std
mov
cmc
or
lea
lea
jmp
lea
mov
jmp
or
jmp
daa
jmp
jmp
sub
and
in
arpl
fs
lods
dec
sbb
add
push
rcl
movs
sbb
enter
fisttp
test
dec
mov
push
in
inc
loope
ins
and
or
and
cmps
mov
and
shr
push
xchg
mov
and
pop
mov
add
mov
pop
dec
daa
ins
or
add
add
nop
cmp
cmp
add
nop
enter
or
cmp
in
or
mov
mov
mov
inc
cmp
adc
cmp
je
leave
mov
add
jmp
pop
jmp
sbb
add
pop
and
dec
rcr
loopne
in
addr16
scas
dec
inc
sbb
test
sar
aaa
pop
hlt
int3
dec
pop
sbb
jb
xor
jbe
mov
mov
jnp
mov
mov
inc
rcr
jno
xor
inc
cmp
pop
fnstenv
pop
push
and
sar
inc
movs
mov
xor
std
in
fsubr
int3
test
sub
sub
cmp
out
clc
cmp
ror
adc
js
(bad)
jb
popa
mov
mov
test
push
in
jb
and
js
cmp
xor
les
cmp
loope
fisttp
inc
call
in
jle
shr
pop
or
inc
loopne
les
es
sub
and
pop
xchg
add
test
aam
add
adc
sbb
aam
jb
pop
pusha
jl
push
in
jl
mov
jl
push
jo
dec
jbe
test
jo
sbb
outs
push
mov
jle
xchg
sbb
mov
les
imul
mov
(bad)
aam
sbb
xchg
add
aaa
je
xchg
xchg
push
push
xor
adc
inc
xchg
push
xchg
cli
pop
ds
cmp
xor
dec
dec
sub
and
in
ret
xchg
dec
jecxz
in
add
cmp
dec
and
cmp
(bad)
inc
and
mov
xor
mov
jp
cmps
sub
jae
rol
es
and
jo
adc
fcomp
mov
inc
sbb
dec
popf
les
mov
inc
in
mov
and
cs
push
movs
jne
fxch
jo
out
call
dec
ret
jbe
stos
inc
nop
mov
dec
(bad)
test
sbb
jae
jno
push
cmps
ins
fisttp
out
xchg
ss
add
ud2
in
fs
outs
mov
sbb
push
movs
and
dec
mov
mov
pop
test
push
jns
jmp
lods
push
or
xor
inc
les
cmp
add
push
and
add
in
cmp
cmp
je
cmp
inc
add
adc
add
rcr
jo
inc
or
sub
add
dec
and
xacquire
push
test
mov
dec
adc
jl
sbb
dec
sbb
mov
dec
fdiv
sbb
xchg
jbe
inc
je
adc
mov
jo
or
cmp
ficomp
ins
jp
(bad)
pushw
mov
je
add
mov
pop
adc
cmp
xchg
or
lea
pop
jae
sub
mov
fwait
leave
adc
inc
mov
ret
inc
dec
cwde
mov
mov
pop
jl
adc
fmul
fcom
mov
pop
ret
xor
xchg
push
popf
mov
das
jno
sbb
sub
mov
add
clc
adc
adc
and
dec
loope
inc
mov
(bad)
lds
ret
ficom
out
test
xor
sub
sbb
pop
dec
cmp
popa
das
in
pop
out
or
and
add
rcr
fcom
and
push
cmps
outs
enter
jle
movs
dec
or
or
dec
or
jb
inc
dec
movs
and
pop
or
nop
into
jo
cmp
sar
das
pop
lahf
inc
daa
jns
repz
daa
push
push
push
pop
test
inc
aas
repnz
sbb
push
das
inc
lods
add
pop
dec
fsub
push
sbb
cwde
shl
or
adc
xchg
rcr
mov
jge
jl
pop
inc
cmp
jb
div
rcl
mov
sub
sbb
xchg
xor
shl
cmp
lods
dec
mov
les
pushf
pop
(bad)
daa
push
adc
stc
imul
add
daa
push
push
and
pop
lods
cmp
sub
mov
xor
push
es
test
xor
ret
stos
leave
or
test
dec
mov
sbb
xchg
push
sub
xchg
lock
je
fs
test
es
stos
aad
dec
call
add
inc
push
pop
out
ins
and
mov
aaa
jbe
addr16
mov
push
adc
jae
fisubr
je
mov
mov
fild
call
xchg
sub
and
ja
push
test
(bad)
repz
mov
hlt
inc
mov
mov
adc
out
(bad)
add
push
jmp
rdpmc
inc
outs
in
mov
stos
mov
push
jecxz
dec
mov
jnp
mov
(bad)
je
adc
inc
loope
dec
mov
cmp
mov
ret
in
xchg
sub
into
inc
or
push
outs
sub
add
mov
inc
jae
mov
fmul
jge
jmp
xchg
xchg
les
pop
dec
or
or
std
inc
test
mov
or
dec
repz
and
xor
jmp
daa
lock
fstp
into
jbe
loopne
xor
shr
dec
sub
and
jno
dec
pusha
hlt
popa
or
rcl
jnp
inc
mov
ret
call
(bad)
in
and
push
sub
inc
stos
out
mov
mov
lods
mov
and
nop
xor
lock
test
aaa
and
xor
pop
aaa
popa
jo
and
in
sub
and
clc
fbld
xor
aaa
clc
lock
(bad)
mov
int3
sub
aaa
adc
xor
jbe
xchg
sub
and
in
pushf
sbb
xchg
stos
ins
add
inc
fdiv
inc
cmp
loopne
dec
push
(bad)
cmp
test
adc
mov
popa
xor
lahf
sub
les
add
sbb
push
or
popa
int3
popa
or
push
push
sbb
inc
fmul
pop
cdq
ds
test
push
and
hlt
mov
ret
or
add
xlat
push
xchg
retf
movs
mov
test
cwde
(bad)
sub
int
test
push
jmp
bound
cmp
push
dec
pop
or
fadd
push
mov
adc
push
pop
inc
xor
cmp
jnp
push
and
mov
movs
xchg
fadd
pop
(bad)
lock
mov
inc
movs
sub
popf
ret
dec
cmps
push
loop
cs
mov
push
inc
and
add
and
and
add
sub
gs
push
loop
cmp
arpl
mov
adc
aam
cmp
add
adc
ja
fnsave
lahf
jo
mov
sub
dec
push
fst
int3
test
inc
fsubr
dec
push
in
cmp
nop
push
mov
std
xchg
movs
xor
sbb
push
mov
ja
addr16
xor
adc
rol
call
test
loop
inc
sbb
push
sbb
jno
add
push
jmp
sbb
les
or
fsub
enter
mov
adc
push
or
pop
add
mov
or
sbb
test
add
adc
fild
icebp
mov
pop
pop
xor
aam
push
mov
xchg
push
jle
mov
dec
lds
fistp
pop
xor
movs
and
call
add
cmp
xchg
aas
pop
pusha
cmp
ds
adc
sahf
adc
out
jl
sbb
fdiv
inc
or
addr16
dec
inc
aas
xchg
(bad)
loopne
shl
xor
in
push
enter
inc
add
pop
rcl
pop
mov
jmp
cdq
dec
out
pop
jmp
cmp
pushf
int
pop
cld
cmp
xor
dec
movs
xor
loop
or
sbb
ret
icebp
push
fist
mov
sbb
xor
(bad)
cmp
shr
add
xchg
cmp
mov
aaa
mov
loopne
lea
mov
pop
add
xor
push
jge
pop
and
push
dec
and
jbe
adc
inc
jge
cli
sub
cmp
(bad)
xchg
sub
aad
jbe
sub
movs
mov
cmc
mov
rcl
xchg
mov
mov
xchg
mov
or
test
loop
add
mov
cmp
imul
loopne
cwde
das
pminub
(bad)
inc
nop
neg
int3
jae
hlt
pushf
pop
repnz
(bad)
xchg
inc
dec
cmc
shr
mov
popa
es
outs
sub
jmp
les
mov
addr16
das
and
jle
jb
dec
outs
pushf
cmp
cmc
mov
enter
mov
pop
adc
shr
lahf
cmp
push
(bad)
pop
inc
xchg
mov
cmp
(bad)
pop
xor
(bad)
out
mov
ret
pop
jne
aad
push
xor
jb
shr
int3
cmp
or
icebp
into
addr16
js
test
push
ins
or
sbb
pop
jae
movs
sahf
adc
cmc
pop
pop
mov
jb
push
cmp
sub
enter
mov
cmc
or
pop
aas
jno
leave
pop
retf
loope
inc
add
pushf
inc
pop
rcr
add
js
xor
call
and
xchg
movups
fnstsw
mov
inc
stos
push
lods
pop
sub
in
mov
push
cmp
xor
xchg
pop
jg
pop
mov
aad
mov
sbb
or
mov
jle
mov
bnd
(bad)
(bad)
mov
jle
repnz
lock
cmp
je
add
aaa
push
retf
test
(bad)
sub
push
fidiv
enter
rcr
shl
fisubr
push
and
pop
retf
test
cwde
lods
shl
ins
cmp
call
adc
xchg
mov
mov
and
nop
fiadd
mov
xor
shl
push
sbb
or
or
xchg
sbb
xor
call
ret
mov
daa
je
lock
arpl
call
cld
cmp
jno
add
cmps
loopne
loope
cdq
jp
popf
xor
outs
mov
rcr
dec
call
or
mov
repz
push
mov
and
xlat
nop
or
ret
loopne
imul
cmp
adc
jmp
imul
shr
add
outs
and
push
jmp
push
sub
test
mov
xor
int3
adc
push
shl
jle
push
call
enter
add
cmp
push
loop
sub
xchg
(bad)
cdq
push
ss
imul
call
(bad)
mov
int3
jl
push
mov
imul
push
xor
(bad)
ds
inc
sti
mov
cmc
xchg
adc
imul
jp
dec
or
psrad
add
adc
test
push
adc
add
mov
jp
lods
cmps
pop
pop
sbb
or
mov
shr
cmps
add
or
es
jl
dec
pushf
data16
or
mov
and
or
mov
movs
sti
xchg
lock
sbb
dec
shl
or
icebp
push
mov
rcl
jne
push
xlat
or
mov
aas
pusha
add
lods
loopne
mov
mov
push
and
loop
and
test
(bad)
cmp
jecxz
sbb
movs
xor
rol
sbb
xor
cmpps
pop
push
push
mov
jl
jle
dec
push
inc
retf
push
fs
xor
aas
xor
inc
adc
or
call
int3
stos
dec
pusha
leave
cs
daa
mov
inc
div
sbb
cwde
dec
xor
test
or
push
test
or
mov
cmp
and
adc
loopne
push
je
push
sub
push
dec
xor
or
test
test
inc
and
inc
or
dec
xor
add
cmp
pop
push
push
ja
scas
ins
inc
add
mov
jbe
into
bound
cmp
and
inc
xchg
outs
add
and
jns
ss
cmp
adc
mov
movs
mov
pop
mov
adc
inc
inc
sti
ror
nop
or
repz
nop
in
push
xchg
aam
in
or
popa
xor
cmps
dec
jle
ds
(bad)
(bad)
stc
loopne
add
repz
loopne
loopne
inc
pop
xor
leave
rcr
jmp
mov
sub
xchg
data16
inc
xor
adc
jmp
aam
pop
push
lea
mov
sti
xchg
imul
lods
loopne
xor
and
adc
sub
das
and
mov
sub
ror
jmp
pop
mov
lds
inc
fwait
mov
test
enter
add
adc
movs
loopne
pop
xor
and
or
dec
mov
jne
aad
sub
add
mov
or
loope
shl
test
jbe
cmp
pop
and
nop
cmp
push
sbb
mov
xchg
jbe
dec
ins
je
sbb
jl
xor
cmp
jl
push
loopne
fstp
mov
adc
push
ret
in
daa
bound
mov
inc
fsub
icebp
es
xor
cmp
js
cmps
jmp
dec
and
pop
clc
jne
pop
or
mov
(bad)
loopne
sbb
jp
xor
test
sub
mov
and
mov
shl
or
sar
rcr
js
sub
pusha
jmp
mov
dec
mov
lock
pusha
pushf
push
xchg
push
xor
pop
nop
icebp
sbb
jle
ja
xor
or
js
push
xor
(bad)
cdq
mov
stos
fidiv
test
sbb
shr
in
test
mov
dec
pop
add
push
adc
pop
and
push
and
fstp
js
or
das
jle
out
jmp
pop
add
mov
ins
pushf
sub
push
lea
and
lahf
adc
loope
mov
enter
pop
add
push
outs
cmp
daa
and
mov
add
push
lahf
ja
add
add
pop
add
xor
mov
adc
(bad)
jge
lds
movs
cs
mov
and
xchg
stos
js
and
pop
scas
ss
jne
sbb
mov
xor
xor
pop
sbb
test
loope
mov
inc
nop
add
xor
xor
scas
pop
les
inc
adc
dec
add
lods
add
sbb
or
xchg
or
sub
je
cs
test
and
retf
adc
xor
loopne
ins
mov
add
jle
cmp
and
push
pop
ins
lods
rol
les
or
lods
dec
pop
sbb
inc
add
cmp
inc
or
mov
rcr
lock
lock
inc
or
xchg
call
popa
jle
and
mov
sub
add
mov
dec
sbb
jo
push
xor
sbb
push
xchg
aam
add
xchg
push
nop
shl
dec
dec
mov
pop
sbb
rcl
add
mov
movs
test
xor
sub
fistp
lock
test
and
das
or
adc
sbb
adc
into
sti
add
jmp
or
rol
imul
or
or
cwde
push
mov
sbb
(bad)
cmc
or
add
in
cmp
lods
cmp
loopne
inc
call
jb
loopne
adc
nop
xchg
imul
lock
call
mov
pop
ret
scas
imul
inc
call
cmp
cmp
or
sbb
adc
fmul
push
and
shl
sbb
sub
sbb
xchg
push
fsubr
add
mov
push
dec
add
fcmove
xchg
dec
sbb
or
rol
enter
add
jo
jno
add
adc
ins
mov
mov
inc
add
jnp
hlt
and
jns
xor
xor
das
or
pushf
add
(bad)
in
cmp
xchg
mov
ficomp
fadd
sbb
add
pop
push
push
sar
inc
dec
inc
push
daa
sbb
shl
in
and
inc
mov
aam
div
neg
cmp
or
cwde
fcmovnu
xchg
jl
movs
or
cmp
mov
add
aad
adc
je
add
jmp
fsubr
sub
ret
cdq
sub
inc
and
cwde
sub
pop
mov
adc
sub
imul
mov
add
inc
push
mov
and
or
cmp
dec
(bad)
sub
mov
add
cmp
add
ret
ins
ins
sbb
popa
cmp
icebp
(bad)
je
dec
mov
and
ret
or
cmp
cmp
sub
inc
fidiv
adc
push
cmp
dec
into
inc
or
and
jo
jmp
sbb
mov
ins
xchg
inc
rcl
into
mov
ins
dec
push
add
sub
add
test
mov
pop
dec
push
cmp
sahf
je
and
adc
inc
sti
sub
rol
sub
push
lods
adc
cmp
lock
xchg
ins
sub
mov
aad
and
or
xor
ret
and
xchg
dec
bound
les
dec
ins
sub
stos
adc
fs
xor
cmp
xor
addr16
imul
push
cmp
jl
or
xor
add
xlat
inc
xor
adc
aaa
xor
mov
jmp
dec
rcl
pop
ins
dec
adc
lock
jo
pop
jl
xchg
pusha
call
jmp
(bad)
push
push
aaa
and
add
xchg
cmps
je
adc
jge
fsubr
cmovno
shr
mov
outs
lods
leave
mov
mov
sub
xlat
out
add
dec
xor
pop
inc
and
cmp
add
lahf
fimul
dec
(bad)
(bad)
pusha
retf
push
dec
aam
mov
and
punpcklwd
adc
pop
and
dec
fsub
das
add
arpl
js
loop
aad
aad
jb
push
sub
push
in
ret
and
arpl
mov
push
fiadd
jbe
adc
xchg
mov
dec
imul
adc
or
aas
inc
xchg
xor
and
mov
and
rol
adc
mov
std
pushf
mov
push
not
add
hlt
adc
ins
call
mov
jo
cs
test
mov
xchg
cwde
movs
xor
add
fsubr
xor
mov
or
xor
push
cmp
in
icebp
dec
jle
inc
sbb
cld
jecxz
movs
pop
outs
or
dec
data16
inc
or
jnp
inc
jge
add
and
pop
sbb
and
nop
or
xchg
or
and
xor
movs
pop
adc
je
pop
js
xchg
or
pushf
int3
sub
or
xor
xor
and
adc
ret
cs
pusha
jge
call
mov
push
xor
push
sub
pop
ret
lock
push
push
arpl
lock
sbb
mov
xchg
rcr
sbb
inc
xchg
mov
mov
or
sub
mov
dec
shr
push
ja
repnz
inc
inc
adc
ss
mov
adc
push
sub
fiadd
fld
aam
mov
push
gs
dec
mov
inc
push
push
or
pushf
add
mov
jns
jno
push
icebp
xchg
mov
mov
inc
push
mov
pop
(bad)
dec
dec
lea
or
test
jge
and
adc
jno
mov
cmp
mov
sbb
sbb
sub
sub
pusha
or
hlt
dec
push
push
sub
cmp
or
cmp
sub
gs
add
pop
movs
adc
inc
les
push
imul
sbb
xchg
data16
(bad)
dec
sub
data16
repz
pop
call
inc
jo
xchg
cmc
movzx
icebp
xor
retf
adc
je
out
push
xor
adc
lahf
add
xlat
push
rol
ret
mov
cmps
or
cwde
das
cwde
xchg
sbb
rcr
sub
xchg
or
jo
enter
ds
retf
mov
popa
iret
or
xchg
lea
inc
jo
xchg
ret
inc
adc
test
(bad)
fld
pop
sub
and
(bad)
mov
and
call
jle
xor
inc
dec
out
adc
sub
test
push
hlt
ret
jmp
jp
pusha
mov
(bad)
xchg
jno
cmp
push
add
jne
push
mov
pop
sbb
in
add
push
cmc
inc
dec
adc
mov
int
loopne
inc
data16
pusha
jbe
into
stos
mov
leave
jmp
rcl
in
or
ret
push
sar
(bad)
push
push
ret
jge
iret
adc
add
dec
loope
shr
or
jnp
jmp
test
add
inc
fiadd
inc
ja
mov
in
and
outs
cwde
sbb
jae
imul
inc
pop
add
dec
inc
mov
nop
ret
out
adc
mov
cmps
add
push
and
push
imul
add
aaa
push
cmp
shl
pop
sub
ss
sbb
add
ficomp
jnp
sbb
lea
jge
jle
xchg
cmps
add
sbb
or
movs
clc
in
lock
cmp
cmp
push
cmp
sub
pop
std
add
add
adc
dec
sbb
push
add
mov
sub
ret
push
or
outs
jmp
mov
call
imul
mov
and
cs
(bad)
jle
sbb
mov
dec
in
mov
sbb
adc
popf
mov
sbb
iret
jmp
mov
lahf
stos
mov
sbb
xchg
aad
lock
jle
mov
adc
add
inc
popa
adc
in
mov
mov
and
pop
pop
ins
mov
or
cmovnp
mov
out
add
test
das
or
call
add
sbb
add
and
xor
inc
dec
shl
inc
sbb
mov
mov
jno
add
xchg
xor
push
jb
adc
inc
xlat
xchg
inc
adc
std
mov
addr16
clc
jne
lods
stos
inc
int
cmp
lods
adc
loop
push
pop
inc
add
lock
or
push
push
inc
sub
jne
adc
test
test
sahf
mov
fcmovnb
imul
or
and
ss
ret
call
add
popf
retw
push
js
or
movs
call
test
mov
pop
mov
jne
or
inc
sbb
cmp
mov
mov
ja
sub
sbb
nop
stos
iret
iret
mov
fwait
retf
loope
add
mov
sbb
xchg
push
inc
mov
sar
outs
daa
or
pusha
jmp
aaa
or
popa
cmp
retf
clc
sahf
shr
sub
xor
imul
js
lods
sar
test
pop
add
push
jg
xor
add
push
mov
sub
mov
bswap
fidiv
cs
dec
xchg
fucomi
ins
push
mov
scas
add
js
push
mov
sbb
push
pop
loop
fstp
xchg
jo
ror
ret
pop
push
push
adc
mov
lea
dec
jl
add
jge
mov
movs
xor
cmp
jne
xchg
inc
dec
cmp
add
dec
and
xchg
add
ins
test
(bad)
jl
fbstp
out
cmps
mov
or
test
pop
nop
and
dec
imul
(bad)
imul
inc
jmp
push
pop
iret
add
sar
popf
outs
jge
(bad)
into
mov
jmp
clc
in
xor
outs
in
dec
pop
jo
js
call
sub
inc
push
repnz
mov
inc
inc
push
cwde
dec
sahf
enter
add
mov
sbb
pusha
dec
jmp
lods
and
mov
xor
sub
xor
imul
add
ja
pop
ret
jne
xor
cmp
fs
sbb
test
push
jo
adc
xchg
jmp
dec
dec
test
xchg
and
ret
or
in
sbb
out
or
pop
lods
jo
and
inc
or
jnp
lods
ror
gs
ss
mov
mov
mov
sub
xchg
dec
xor
dec
sub
push
lods
and
imul
inc
mov
adc
dec
sbb
popa
inc
out
and
imul
mov
add
mov
sets
push
jecxz
mov
test
sbb
pop
adc
ret
jge
sbb
pop
fadd
pop
sbb
add
and
sbb
add
mov
cmp
fmul
push
jmp
in
mov
sbb
stos
retf
xchg
sub
or
or
or
push
pop
sbb
jecxz
outs
bound
inc
xor
pop
push
xchg
mov
mov
add
lock
sbb
imul
push
xor
inc
xor
fdivr
repz
pop
cmp
jecxz
add
idiv
add
cmps
add
add
ret
xlat
add
mov
add
add
shr
inc
sub
test
add
mov
adc
jge
mov
and
xlat
sbb
xchg
mov
mov
add
jecxz
mov
sub
add
std
test
loope
mov
xchg
cli
adc
pop
adc
pop
ds
not
test
test
or
repz
rcr
push
lea
lea
or
jnp
icebp
push
inc
cmps
adc
popf
mov
push
sar
mov
fs
xor
adc
xor
mov
and
les
push
pop
fsubp
cmp
fs
push
aad
xchg
cmp
in
and
pusha
jl
cmp
out
in
daa
mov
cs
inc
xor
xchg
loope
inc
cwde
dec
cmp
ret
and
lea
aad
add
sbb
sub
sahf
mov
fst
cdq
and
call
cmp
out
movs
(bad)
enter
adc
mov
jp
dec
jnp
mov
and
jae
inc
push
aam
pop
xor
fbld
push
daa
jbe
mov
dec
je
ds
xor
pop
xor
jmp
imul
or
push
cmps
mov
xor
test
push
adc
mov
adc
push
ret
or
fisub
mov
jl
jecxz
adc
test
ins
pushf
xchg
dec
mov
out
sbb
add
dec
xchg
mov
dec
rcl
sbb
mov
and
dec
fist
push
dec
popf
cmp
adc
dec
adc
retf
pop
adc
retf
js
mov
or
inc
xor
push
cmp
cmps
adc
cmp
stos
and
xchg
add
xor
and
rcl
dec
hlt
or
xor
sbb
or
dec
pushf
rcr
int
sub
xor
es
loopne
ins
adc
and
rol
xor
add
sbb
aaa
cmp
out
and
adc
adc
jo
je
sbb
or
or
popa
test
es
pop
mov
sub
inc
fstp
out
push
fucomi
rcr
push
sub
cwde
or
ins
rcl
sbb
or
pop
iret
repnz
adc
ret
movs
jne
mov
or
sub
inc
mov
xor
les
js
or
ins
and
das
or
inc
aad
sub
adc
inc
mov
ins
inc
cmp
mov
fist
ds
adc
mov
pop
sub
cs
mov
cmp
sbb
fadd
adc
sub
jp
or
cmps
test
mov
lods
(bad)
inc
adc
aam
call
xor
inc
and
(bad)
pop
aam
sbb
and
xor
add
cmp
adc
or
daa
sbb
pop
sbb
add
ret
push
cmp
daa
lock
ja
inc
jne
mov
imul
loopne
ret
cld
or
je
fcom
idiv
add
clc
retf
xchg
pop
les
fdiv
sahf
add
xor
inc
cmp
push
and
add
adc
pushf
sahf
inc
cdq
cmp
sub
int3
mov
movs
sub
shl
outs
call
push
movs
jge
sub
mov
pop
push
sbb
mov
or
shl
add
add
daa
popa
enter
pop
mov
push
and
pushf
add
mov
imul
push
nop
adc
in
or
or
push
xchg
nop
pop
xchg
shl
test
outs
or
push
clc
imul
push
xor
repz
adc
sbb
aaa
mov
inc
inc
inc
xchg
cmp
leave
ret
daa
sbb
outs
pop
shl
push
adc
sbb
jae
cs
adc
or
mov
push
or
sbb
pop
inc
(bad)
fld
or
hlt
aaa
pusha
sbb
xchg
lahf
lds
sub
sub
add
sbb
mov
bound
aad
push
mov
stos
or
call
cmc
dec
(bad)
jne
rcl
(bad)
cmps
nop
lods
sbb
push
adc
or
and
pop
nop
inc
mov
cmp
test
jge
xchg
mov
xchg
fsubr
test
push
inc
and
push
add
dec
inc
pop
sub
adc
outs
adc
xor
adc
ret
js
xlat
cmp
lds
or
push
movs
retf
nop
mov
loope
int3
popf
mov
push
out
mov
mov
ins
cmp
xor
test
(bad)
mov
sbb
inc
jmp
lods
movs
mov
pop
ja
push
inc
xlat
(bad)
xor
enter
test
stc
pushf
lock
or
sbb
out
fisub
mov
add
sub
mov
mov
or
or
cmp
pop
inc
inc
sub
dec
repz
sbb
inc
or
mov
ins
pop
sti
add
shl
jo
ret
stos
cmp
xor
fistp
push
pop
jmp
jno
sbb
fiadd
add
pop
lds
xchg
sub
mov
mov
movs
mov
cwde
es
aad
xor
loop
inc
jg
mov
mov
pop
cmp
cmps
stos
dec
dec
adc
mov
ja
cwd
test
lea
jmp
cmp
adc
pushf
push
xchg
push
pusha
jmp
data16
mov
js
pop
dec
les
aam
int3
dec
or
div
add
or
shl
aaa
or
adc
xor
(bad)
cmp
mov
call
mov
xor
test
shl
or
fadd
adc
push
adc
gs
and
fs
push
fist
shl
inc
push
adc
xchg
xor
add
push
out
mov
dec
push
sub
xchg
xor
sbb
xchg
xor
and
shl
call
push
sti
or
mov
mov
or
mov
or
lea
jmp
mov
mov
aam
mov
(bad)
jle
loopne
xor
and
inc
add
cvtdq2ps
lods
inc
inc
push
sub
ret
test
imul
xor
inc
gs
ret
jne
push
push
adc
pop
pop
xchg
loope
fwait
push
dec
push
shl
push
jne
inc
enter
arpl
cmp
aad
xchg
movs
mov
test
pop
test
add
call
and
(bad)
xlat
sahf
push
repz
movs
dec
cmp
mov
pop
sti
or
add
test
xor
pusha
inc
gs
pop
mov
mov
push
and
pop
jae
jge
in
jb
fcomp
or
add
mov
repz
and
ret
popf
and
jmp
nop
(bad)
sar
test
or
mov
sahf
mov
mov
or
jle
jno
outs
cdq
or
and
inc
mov
mov
outs
cwde
js
lock
adc
xor
int
repz
pop
xor
outs
dec
ret
adc
jp
rcl
les
aad
add
push
inc
test
jmp
sub
lahf
adc
cmp
push
or
rol
(bad)
movs
and
jmp
(bad)
in
das
xor
inc
mov
cmp
movs
cmp
cmp
xor
push
inc
shl
cwde
sbb
push
imul
add
or
pusha
mov
test
enter
movzx
or
sbb
sahf
sbb
mov
push
movs
push
inc
add
mov
sub
xlat
or
inc
mov
ficomp
inc
imul
push
rol
xchg
rcr
xor
shl
xor
and
and
rcr
pop
dec
bound
pop
test
adc
retf
pop
xor
retf
and
(bad)
and
add
test
and
lods
sub
cmp
inc
loopne
sub
pop
xchg
add
jmp
adc
retf
sbb
and
loop
(bad)
or
xor
mov
clc
jmp
push
fild
sub
add
rcr
xor
mov
sub
stos
inc
bound
mov
fcmovnbe
popa
and
cld
nop
add
jge
xor
mov
xor
mov
(bad)
das
jl
fs
mov
adc
xchg
and
mov
mov
jge
lahf
xor
out
rol
cdq
les
cmp
or
or
call
xor
scas
pop
lds
jno
sbb
je
ror
cmp
sbb
fstp
(bad)
and
mov
push
lock
cmp
inc
sbb
dec
push
nop
mov
sbb
xchg
out
mov
push
cdq
and
je
add
mov
int3
cs
cmps
cmp
dec
or
out
pop
(bad)
inc
or
mov
and
pusha
xor
idiv
cs
enter
pop
nop
outs
xchg
mov
add
add
setae
inc
mov
and
sbb
or
ror
lods
in
das
lods
fist
int3
add
xor
xor
cdq
and
cmc
push
sar
in
jge
push
icebp
and
in
rcl
cli
push
mov
xchg
(bad)
aaa
enter
pop
sub
lock
inc
jmp
and
add
push
xchg
cmp
xor
cmps
or
icebp
pop
push
sar
xchg
inc
lahf
int
push
push
(bad)
and
aam
cmp
enter
enter
push
popa
inc
pop
cdq
ins
and
ins
movs
push
and
xchg
xor
popa
pop
dec
inc
mov
pop
and
retf
test
outs
adc
inc
aad
les
push
sahf
adc
sbb
push
hlt
inc
push
mov
fist
cmps
mov
mov
in
loope
sub
xchg
pop
xor
mov
jno
rcl
push
sub
pop
pushf
and
inc
shl
mov
pop
mov
mov
popa
mov
and
ret
jbe
cmps
imul
lock
nop
xchg
clc
sbb
sbb
sbb
adc
or
push
sub
ins
div
add
mov
test
shr
or
rol
add
cdq
jg
jmp
xchg
jge
mov
sbb
push
inc
or
or
in
inc
hlt
push
xchg
inc
cdq
dec
xchg
call
sub
mov
ffreep
int
in
jno
add
xor
fsubr
inc
mov
fsubr
jge
inc
(bad)
xchg
or
jne
mov
pop
xchg
sar
xchg
xor
jnp
adc
dec
xchg
stos
pop
not
mov
adc
inc
arpl
add
sbb
or
imul
inc
jmp
push
push
push
jecxz
fmul
mov
ins
xor
jmp
or
xor
mov
push
mov
xor
or
ret
or
add
je
xor
adc
xor
xor
sbb
and
mov
dec
in
pop
add
mov
sub
push
sbb
jge
push
push
arpl
sub
adc
mov
pop
loop
cmp
inc
mov
jmp
or
mov
adc
rol
lock
or
add
call
cmp
push
push
clc
add
xchg
scas
int
cmc
icebp
movs
outs
or
xor
mov
aaa
adc
or
sub
mov
push
repz
loopne
in
repnz
rcl
rol
add
push
sub
or
or
push
mov
jne
sbb
stos
push
in
jno
ret
or
mov
ins
scas
sub
add
sti
in
arpl
sbb
movs
or
and
test
push
inc
sub
or
stc
mov
call
iret
je
fnstenv
pop
sbb
mov
(bad)
and
sub
cs
sti
sti
sub
(bad)
jg
mov
sahf
and
sbb
push
mov
inc
inc
mov
mov
(bad)
in
sbb
cwde
imul
shl
xchg
adc
dec
loope
mov
mov
cmps
jmp
mov
mov
sbb
movs
stc
jae
pop
xchg
ficomp
mov
pop
shl
push
test
mov
inc
dec
push
push
xor
fstp
push
push
cmp
cmp
pusha
leave
repnz
add
push
mov
push
push
push
push
mov
sar
dec
pop
pop
rol
mov
loope
pop
call
sub
dec
xor
push
xchg
xchg
pop
inc
add
shr
adc
rcl
(bad)
call
push
jo
adc
loopne
adc
sti
or
cmps
scas
and
xchg
push
shl
repnz
cmp
fs
lea
inc
add
imul
sbb
inc
(bad)
dec
xchg
xchg
jmp
or
push
pusha
les
int3
xor
mov
test
dec
dec
test
add
pop
sub
mov
sub
add
out
jle
mov
jmp
add
sahf
test
push
pushf
imul
sbb
ds
ja
add
sub
mov
jle
sub
pop
cmc
pop
jmp
pop
adc
add
test
inc
(bad)
add
inc
inc
push
mov
push
and
pop
js
cmp
dec
xchg
sub
inc
ja
inc
js
adc
outs
and
shl
mov
push
adc
(bad)
push
mov
and
sub
cs
lds
and
pusha
aad
mov
jne
pop
jno
push
or
or
adc
in
fstp
cmp
add
mov
adc
push
inc
adc
leave
leave
pop
adc
lea
arpl
bound
rcl
clc
inc
(bad)
mov
test
xor
ret
mov
jne
push
cli
cs
sub
stos
cmps
enter
pop
mov
add
mov
out
mov
jno
inc
test
cs
adc
inc
ret
fs
mov
push
add
dec
push
cmp
test
call
mov
jmp
dec
lock
pop
dec
rcr
clc
dec
pushf
out
sbb
das
push
cmp
and
xor
inc
xor
(bad)
inc
sub
add
add
movs
test
mov
(bad)
fiadd
and
mov
mov
sar
sbb
adc
sbb
test
fmul
sbb
fcomp
das
out
inc
dec
data16
fst
dec
retf
fdivrp
loop
jne
mov
leave
jmp
fsub
lock
pop
xor
ficom
sub
xchg
and
loopne
push
aad
xchg
mov
inc
jmp
fstp
fcmovnu
dec
inc
je
les
not
push
and
ret
mov
inc
lods
mov
mov
iret
in
pushf
dec
mov
or
test
iret
lock
(bad)
add
inc
adc
ins
out
lock
sub
adc
loopne
mov
or
jnp
(bad)
movs
jmp
push
aad
fstp
xchg
push
and
sbb
dec
mov
add
push
imul
jg
movs
stos
cmp
fs
fmul
push
and
sbb
nop
sbb
sub
jl
push
pinsrw
or
mov
cmp
xor
or
test
and
sub
pop
or
jno
mov
dec
inc
jl
pop
inc
xor
mov
mov
out
jmp
jbe
cmp
cmp
icebp
shl
in
pop
mov
fwait
dec
pop
mov
pop
test
or
fdiv
push
imul
ja
lock
mov
mov
inc
sub
and
pop
push
push
test
ss
(bad)
and
adc
add
jo
jecxz
and
jne
pop
pop
sbb
add
out
pop
or
inc
adc
aas
adc
nop
in
(bad)
or
enter
mov
push
inc
(bad)
mov
xor
push
je
ds
mov
jp
rcl
xchg
jns
add
(bad)
push
inc
push
xchg
es
fnstenv
sbb
or
push
shl
push
lods
movs
int3
call
and
xchg
xor
in
dec
cwde
sbb
dec
dec
pop
xchg
and
cdq
or
outs
xchg
push
mov
pop
nop
cdq
jb
mov
pop
ror
outs
add
xchg
add
dec
xor
and
push
xlat
ins
push
sub
jmp
ret
fiadd
imul
xchg
add
xchg
mov
cdq
push
(bad)
(bad)
bnd
xor
add
or
in
cmp
mov
xchg
add
lods
nop
jmp
jno
es
xor
fcom
xchg
out
mov
xchg
aaa
cwde
and
in
call
or
push
push
mov
bound
inc
pushf
mov
lahf
jns
mov
inc
jp
mov
pushf
xchg
mov
jae
inc
in
ret
dec
jle
in
enter
mov
xor
(bad)
dec
pop
add
jl
mov
and
xor
adc
jne
imul
add
test
lods
inc
je
dec
bound
retf
mov
fsub
adc
mov
pop
inc
push
adc
popa
clc
and
push
mov
mov
add
adc
cdq
pop
add
es
or
cmp
shl
sbb
add
and
rcl
fadd
cmc
inc
xor
sbb
popa
mov
mov
aam
fst
cmp
not
mov
dec
ins
arpl
retf
or
sbb
mov
adc
pop
cmp
daa
dec
fcomp
push
jg
xchg
out
dec
add
inc
shr
pop
dec
and
mov
sub
mov
in
push
inc
xor
icebp
lods
push
cmp
add
cmp
mov
xchg
mov
mov
add
out
push
sub
mov
ins
add
icebp
(bad)
mov
jbe
shr
xor
je
add
mov
out
scas
leave
jne
push
pop
add
dec
add
and
and
pop
pusha
imul
push
push
cs
adc
dec
pop
cmc
sbb
ret
shl
jp
adc
add
enter
sbb
out
push
and
and
hlt
xor
mov
mov
xchg
jo
sub
and
mov
fs
mov
sub
mov
and
ins
add
or
and
dec
xchg
sbb
cmp
cmp
in
in
cmp
mov
loopne
push
jl
jmp
or
fist
fnsave
(bad)
retf
push
mov
sti
and
mov
and
mov
(bad)
sub
in
test
mov
adc
movs
xchg
add
xchg
popa
sub
es
adc
cmp
shl
push
or
or
cmp
fisttp
dec
pop
xchg
inc
ret
es
jne
je
pop
push
sbb
scas
mov
dec
lea
jmp
ficomp
in
jmp
ss
aaa
sbb
(bad)
ds
xchg
or
or
stos
xlat
loop
mov
xchg
sub
popf
adc
pop
dec
imul
(bad)
dec
add
cmp
mov
(bad)
mov
hlt
and
and
stos
das
lea
aas
call
pop
(bad)
mov
and
aas
push
inc
cmps
xchg
xchg
lds
and
jno
ret
fcom
dec
xchg
icebp
add
mov
add
inc
and
shl
push
mov
imul
mov
in
or
sar
in
add
push
cdq
mov
lods
jp
or
retf
add
or
jb
in
xchg
jl
lock
jb
mov
je
dec
add
mov
jl
add
cld
ds
cs
aam
(bad)
js
push
push
cmp
adc
pop
into
cmp
not
add
fs
pushf
add
mov
add
mov
sahf
test
xchg
mov
dec
push
sub
or
inc
add
and
icebp
iret
xchg
push
dec
loope
(bad)
jecxz
test
adc
and
mov
icebp
add
fadd
icebp
inc
dec
mov
cmp
(bad)
add
mov
enter
xchg
ss
xchg
mov
js
in
ficom
push
int
pusha
popa
scas
ja
add
int
shl
xchg
mov
cmp
xchg
mov
fimul
or
xchg
dec
adc
sbb
loope
cmp
outs
loop
or
xchg
xchg
cmps
test
lahf
cmp
mov
push
movs
test
push
adc
xor
pop
jbe
cmp
pop
fadd
and
mov
popa
push
cmp
jne
sbb
sub
inc
push
mov
and
dec
pop
leave
inc
xor
or
xchg
and
fstp
mov
call
jo
xor
cmp
imul
mov
lahf
dec
inc
or
sti
mov
sub
jno
and
pop
pop
dec
push
imul
add
imul
push
cdq
fbld
outs
mov
popf
pop
jmp
cs
cmp
mov
or
adc
fild
xchg
pop
sub
mov
ds
cli
rcr
cli
js
sub
and
icebp
or
sub
test
(bad)
sbb
adc
mov
popa
test
out
cmps
(bad)
pop
inc
les
xchg
aam
pusha
je
push
ds
or
xor
inc
sbb
lods
cwde
cmp
imul
cwde
xchg
cmp
mov
ja
hlt
dec
jle
push
push
and
dec
or
daa
push
mov
arpl
clc
xor
jmp
add
add
adc
stos
add
jnp
jmp
(bad)
movs
shl
jp
fld
pop
adc
test
or
push
clc
jb
cli
test
and
ret
pop
(bad)
jb
push
movs
ss
inc
(bad)
mov
push
jae
cmc
xchg
ss
sahf
dec
jge
cli
hlt
(bad)
cmp
pushf
outs
out
cmp
push
add
and
cmps
ret
push
mov
push
int
push
or
mov
lock
xor
inc
jmp
cmp
or
ret
pop
arpl
das
inc
push
or
aas
xor
call
or
pop
inc
not
jne
sbb
outs
xor
xchg
fwait
lods
inc
pop
sub
dec
repz
int3
enter
inc
cdq
in
adc
rcr
into
xor
jne
mov
js
sar
je
and
sbb
daa
lea
pop
les
add
popf
push
adc
xchg
test
test
pop
add
jg
and
ret
xchg
loope
cmp
jns
pop
jmp
add
inc
sar
fisttp
mov
outs
imul
xor
shl
mov
jne
out
mov
lds
jbe
rol
stc
xor
imul
movs
add
sbb
adc
xor
mov
sub
dec
cmp
sbb
sbb
xchg
lahf
je
or
mov
test
cmp
push
adc
ins
mov
outs
xchg
xchg
mov
ret
(bad)
fldcw
or
pusha
nop
enter
rol
ficom
ret
jb
push
fiadd
sub
int3
jne
pop
lea
xchg
or
inc
cmc
adc
scas
mov
arpl
rcr
jmp
mov
jl
push
in
sub
and
jne
retf
sbb
mov
and
xor
add
ret
xchg
(bad)
push
js
xor
ins
addr16
xchg
dec
and
push
lods
mov
movs
repz
lds
adc
(bad)
popw
and
sbb
dec
mov
loop
sub
xchg
cld
xchg
sub
enter
push
icebp
call
pop
outs
jp
loope
arpl
popf
es
js
mov
lock
out
xchg
jmp
test
fcomp
in
loope
mov
or
inc
fsubr
shl
add
pop
fsub
push
push
cmp
push
xor
rcr
inc
mov
lock
xor
cwde
cmp
push
lods
sub
mov
loopne
and
das
in
fdivr
test
xor
loope
and
xor
xchg
sub
xor
inc
jbe
iret
lea
(bad)
call
add
add
dec
retf
inc
jnp
pop
dec
out
or
das
in
loopne
test
cmp
inc
pop
rcl
out
pop
push
cvttps2pi
out
mov
cmps
test
imul
test
outs
push
hlt
dec
jge
jg
push
adc
xor
pxor
pusha
(bad)
jmp
or
add
rol
inc
test
inc
in
push
out
in
test
loope
pop
adc
ret
call
mov
xchg
call
out
mov
xor
test
push
jne
xchg
inc
retf
jne
test
xlat
pop
mov
aad
add
dec
les
movs
ja
lods
mov
add
push
test
rcr
jmp
or
or
adc
inc
inc
aad
popa
xor
fstp
je
ror
jmp
add
test
loope
imul
push
xchg
sub
mov
(bad)
movs
sbb
add
test
push
sbb
push
xchg
(bad)
jle
jle
js
test
xchg
xor
mov
push
xchg
das
outs
fcomp
dec
out
icebp
(bad)
inc
ds
dec
movs
jmp
push
in
and
adc
shr
jne
sbb
shl
icebp
gs
mov
jg
mov
and
pop
mov
xchg
dec
push
cmp
out
sahf
add
in
leave
mov
mov
add
push
push
or
add
clc
mov
enter
cmps
mov
sbb
scas
dec
jmp
sbb
push
ret
out
ins
mov
jle
lea
mov
sbb
add
cld
pusha
sub
mov
cmp
lods
loopne
xchg
mov
gs
cwde
pushf
stos
add
xchg
mov
dec
sub
fnstenv
into
mov
inc
sbb
mov
(bad)
in
sbb
mov
pop
imul
loopne
mov
pop
mov
sbb
sbb
push
mov
mov
jl
out
mov
adc
loop
sub
outs
sbb
xchg
push
gs
fidivr
arpl
jb
call
xchg
push
xor
retf
movs
lea
test
mov
lods
(bad)
les
mov
shl
pop
xor
dec
jl
or
push
dec
popf
pop
(bad)
add
sub
jg
jmp
leave
fcom
and
add
add
xor
lods
cmp
out
nop
push
push
mov
dec
ret
js
sub
pop
or
mov
ja
loope
rcl
ret
add
tzcnt
sbb
inc
or
mov
xor
imul
lds
jmp
mov
adc
mov
jbe
add
mov
out
sti
rcl
pop
test
inc
xor
or
aad
or
repz
cmp
cdq
add
or
or
cmc
or
sub
pusha
and
ret
xor
pop
add
leave
dec
mov
pop
shl
xchg
fild
add
lock
or
cmp
add
push
rcl
gs
sub
rol
(bad)
loope
fs
mov
sbb
xor
jp
add
push
(bad)
add
or
and
adc
adc
sub
ret
cmp
push
(bad)
pop
test
jl
ss
mov
scas
xor
and
sub
stos
inc
xchg
adc
sub
adc
shl
dec
test
cmps
ds
mov
jo
xchg
ins
or
mov
(bad)
mov
hlt
xchg
push
xchg
dec
mov
movs
mov
shl
fs
sbb
and
movs
sub
hlt
mov
pop
in
nop
or
sub
icebp
outs
retf
pop
xor
leave
xchg
(bad)
jecxz
mov
dec
test
pushf
sbb
inc
add
mov
je
add
sub
and
jmp
mov
cmovge
mul
mov
jmp
js
xchg
push
and
cwde
leave
jp
adc
or
sti
cmp
adc
leave
jmp
jbe
adc
aam
popa
sub
inc
push
jle
jmp
push
ja
jnp
je
jne
sub
sub
aam
(bad)
in
and
call
sub
sub
pop
xor
pop
dec
xor
and
xor
retf
cmp
and
and
cdq
cmp
push
and
dec
ret
add
(bad)
fs
lods
lea
pop
jmp
mov
dec
pushf
ins
add
cmp
add
jo
cmp
shl
cmc
outs
cwde
mov
mov
and
xchg
mov
inc
in
cmp
aad
mov
imul
ja
test
jmp
inc
dec
jmp
ins
or
xchg
sub
test
js
fcmovne
dec
test
adc
pop
add
adc
mov
jge
iret
std
(bad)
mov
adc
and
mov
jmp
add
jnp
xchg
push
popa
jmp
add
sub
iret
add
or
xor
and
dec
push
or
sbb
into
into
mov
fsubr
and
movs
and
sbb
aas
and
dec
aas
and
adc
movs
ss
and
mov
loop
and
jge
and
shl
push
or
jle
and
or
(bad)
push
outs
or
inc
int3
sbb
out
dec
ins
or
mov
js
jns
dec
inc
mov
or
push
test
jl
test
mov
out
push
add
je
mov
add
xor
push
cmp
jge
movs
or
ret
aam
sbb
and
add
jnp
jl
sbb
add
or
add
pop
repnz
cmp
cli
call
dec
cmp
addr16
dec
sar
loop
lock
mov
sar
cmp
push
pusha
push
dec
pop
cmp
or
addr16
inc
movs
ja
mov
pop
lods
xor
fcomp
in
adc
push
xchg
xchg
xchg
adc
(bad)
xchg
xor
and
sub
test
push
cs
shl
lea
inc
movs
push
mov
inc
inc
arpl
loopne
sbb
dec
dec
fwait
or
aad
cld
mov
push
lods
sub
repnz
rol
aas
xor
jno
pop
mov
dec
xchg
sbb
test
xor
jge
je
inc
repz
mov
adc
test
xchg
or
sub
push
adc
or
jg
jns
nop
push
or
pop
mov
sub
add
jno
arpl
jl
or
sub
ret
and
mov
and
add
mov
arpl
xor
add
xchg
inc
ins
xchg
cld
mov
je
mov
lods
sub
pop
shr
adc
(bad)
loopne
sub
jmp
xlat
inc
adc
in
push
xchg
fs
sbb
lock
and
sahf
add
wrmsr
test
dec
ins
adc
stos
xor
pop
push
xchg
fcom
inc
lock
mov
jns
(bad)
adc
and
add
out
(bad)
clc
or
add
cmp
(bad)
nop
adc
dec
sub
pop
test
dec
add
lock
inc
sar
pop
mov
and
fcomp
cmp
pop
nop
movs
push
xor
sub
add
retf
rol
sbb
add
fcom
aas
mov
adc
(bad)
push
jp
jo
mov
jne
cmp
mov
and
ret
push
repz
cmps
and
in
dec
sbb
mov
and
pop
or
mov
call
mov
inc
add
fmul
jb
mov
mov
(bad)
jo
add
push
sbb
xor
(bad)
ret
stc
test
out
(bad)
repz
adc
sub
call
push
scas
cmp
mov
sbb
int3
jp
(bad)
mov
lods
push
xchg
je
adc
mov
and
mov
xlat
xor
inc
dec
movs
and
sub
fst
imul
sahf
ins
lock
(bad)
in
dec
fld
in
jno
and
jb
cmp
lahf
icebp
adc
cmps
ficom
add
mov
xchg
imul
ins
stos
push
hlt
sub
lea
jmp
inc
sbb
add
cmc
je
sub
add
fiadd
adc
xor
lods
add
xor
sub
(bad)
mov
(bad)
dec
cmp
mov
and
mov
inc
mov
psubd
mov
mov
adc
jge
fwait
loopne
add
and
popa
hlt
adc
or
jmp
shl
xchg
sbb
jecxz
adc
inc
es
pop
xor
mov
popa
push
push
hlt
adc
or
js
cmp
mov
cmp
dec
push
pop
xchg
cmp
add
sub
adc
and
imul
xlat
mov
hlt
inc
cmps
push
sub
jmp
pop
push
sbb
and
mov
adc
push
push
add
pop
hlt
mov
sub
push
mov
sar
fs
add
sbb
les
adc
bound
rol
dec
xor
outs
cmp
fisttp
mov
nop
xor
(bad)
pop
mov
mov
mov
leave
ror
repz
mov
(bad)
pop
jnp
ds
xor
retf
mov
or
sbb
and
loope
dec
dec
inc
adc
add
rcl
(bad)
fisub
push
mov
push
add
and
xchg
add
hlt
inc
push
sub
dec
lods
sub
jmp
push
push
pop
mov
or
pusha
sub
pop
xor
xchg
repz
movs
retf
sub
pop
xchg
add
(bad)
and
add
and
add
sub
dec
or
xchg
adc
enter
movs
or
xchg
add
pushf
push
je
gs
bound
sbb
push
mov
push
arpl
aam
dec
inc
outs
jg
mov
dec
fmul
or
fsub
mov
push
xor
test
or
mov
mov
push
or
cmp
addr16
add
lock
xchg
push
inc
add
pop
pusha
adc
ins
fs
fld
xchg
jg
inc
add
mov
jb
scas
or
mov
jg
gs
jae
push
(bad)
retf
inc
sbb
pop
jmp
(bad)
in
(bad)
push
xchg
jge
test
jne
fmul
add
add
or
ret
push
mov
lds
jnp
mov
fnstsw
sub
cs
clc
mov
mov
ins
loopne
inc
mov
inc
cmp
test
push
(bad)
std
jb
mov
add
cs
inc
inc
enter
cmp
adc
lods
fistp
sbb
push
xchg
mov
jb
cmp
push
lahf
jg
mov
daa
mov
mov
cmp
mov
mov
or
xor
xor
fist
sti
inc
nop
and
int3
and
xor
outs
add
data16
fist
xchg
pop
imul
fadd
loopne
ror
xor
sub
movs
inc
sbb
push
push
dec
bound
pop
jne
inc
push
lahf
imul
xchg
mov
out
jno
rcl
and
or
or
mov
xor
das
inc
mov
in
inc
mov
mov
jne
pop
test
hlt
jmp
add
mov
and
xor
or
pop
xor
mov
push
ud1
and
and
xchg
dec
jge
xchg
sahf
adc
cmp
cmp
push
mov
cmps
xchg
add
mov
adc
retf
bt
shl
fdivr
es
or
cdq
sbb
xor
pop
or
icebp
cmc
arpl
sbb
rol
add
(bad)
pusha
pusha
cmp
cmp
inc
pushf
sub
loopne
sbb
popa
xor
mov
jge
cmps
mov
cmp
mov
test
or
scas
pop
nop
push
lea
mov
add
pop
and
popa
mov
cwde
push
lahf
(bad)
test
add
sbb
mov
xchg
fld1
add
imul
cmp
cdq
je
add
cmp
adc
mov
inc
push
fwait
dec
add
adc
add
call
sbb
dec
push
aaa
shl
pusha
mov
jb
cmp
mov
stc
sub
dec
outs
add
dec
imul
out
pusha
and
jl
in
fisubr
dec
mov
sub
pop
mov
retf
and
(bad)
and
sbb
(bad)
ret
movs
mov
imul
cmp
je
js
loopne
imul
je
mov
jno
mov
push
cmp
fisub
push
add
das
cmp
cmp
sbb
or
sub
pusha
(bad)
mov
nop
data16
test
jmp
add
fild
stc
(bad)
add
mov
movs
pop
push
pushf
loopne
xor
or
mov
adc
clc
dec
ins
cmp
ja
inc
jmp
sub
add
nop
mov
mov
add
pop
dec
ja
jns
adc
push
cmp
mov
adc
sub
rcl
pop
mov
test
stos
stos
repz
jge
jae
add
aam
mov
out
mov
fwait
mov
inc
and
mov
or
cmps
mov
into
mov
add
add
je
cmc
sub
in
pop
mov
add
xor
in
dec
das
fsub
push
push
add
stc
cmove
or
xor
stc
cmp
adc
cmp
sub
mov
jmp
adc
jns
pop
add
mov
mov
push
or
and
sub
and
pop
stos
xor
adc
mov
lods
push
sbb
test
cmp
lods
and
sbb
dec
xchg
push
fcomp
push
ret
dec
xlat
nop
mov
cs
sub
sub
or
cdq
enter
sbb
in
mov
pop
mov
or
pop
or
push
call
lock
sbb
mov
shl
pop
push
sar
jo
adc
sbb
cmp
(bad)
not
dec
mov
stos
mov
dec
fdiv
dec
sub
cli
add
dec
dec
inc
pop
and
aas
inc
aad
mov
cwde
cwde
pop
inc
push
dec
xor
mov
add
aaa
add
shr
(bad)
cmps
scas
ins
gs
adc
add
sbb
fwait
and
cmp
movs
sbb
loopne
adc
and
gs
dec
push
push
(bad)
xor
mov
jle
sub
jle
add
xor
push
xor
dec
je
daa
movs
pop
mov
rcl
cmp
or
push
les
fld
or
mov
push
daa
test
test
push
mov
or
and
in
pusha
ds
mov
mov
hlt
sub
ins
loopne
leave
mov
dec
add
jl
cld
mov
dec
inc
dec
push
scas
inc
je
aas
repnz
enter
jge
loopne
pop
lahf
fsub
jne
add
inc
jp
pusha
ds
inc
pop
cmp
in
inc
mov
push
mov
es
sbb
xchg
mov
call
push
sub
popf
and
jge
je
inc
xor
nop
data16
rol
out
cmp
dec
push
push
push
inc
sbb
adc
or
adc
mov
and
jne
add
movs
mov
xchg
out
inc
mov
fadd
out
add
fcom
add
mov
es
data16
daa
mov
mov
loope
inc
and
dec
push
pop
adc
adc
pop
retf
sub
pop
xchg
xchg
adc
movs
pop
movs
je
(bad)
adc
lods
in
in
push
jl
add
rol
cmp
or
aam
sub
scas
dec
aaa
cdq
mov
add
retf
cmp
je
inc
loop
inc
jl
xchg
jmp
dec
pop
pop
fadd
dec
xor
sub
inc
aam
ret
sbb
xchg
xchg
mov
push
xchg
mov
add
pop
enter
fsub
dec
sub
lods
cld
shl
mov
cmp
stos
or
retf
push
pop
jnp
xchg
jle
nop
aaa
dec
inc
ins
or
mov
arpl
mov
movs
sub
movs
(bad)
push
jle
enter
jb
int
and
push
imul
int3
jne
cmp
jae
dec
push
mov
and
dec
jb
faddp
je
sbb
add
dec
cmp
push
ret
leave
enter
sbb
xchg
mov
sbb
test
jo
xor
fs
daa
pop
inc
mov
sbb
cdq
(bad)
pop
or
mov
or
test
xor
movs
mov
push
mov
dec
test
jl
xchg
clc
les
movs
adc
push
inc
jne
les
retf
popa
test
dec
pushf
push
cmp
inc
sti
push
loopne
dec
(bad)
std
bsr
mov
jae
in
dec
fistp
jle
mov
addr16
bswap
pop
inc
xchg
adc
pop
mov
fsubr
push
jne
and
mov
or
addr16
mov
loopne
jmp
cdq
xor
push
loope
paddusb
pop
pop
or
mov
pop
mov
adc
mov
movs
ror
sbb
pushf
ins
pop
and
and
test
stos
jns
fstp
mov
cwde
call
(bad)
loopne
sbb
jge
inc
xor
into
loope
inc
or
shr
and
push
stos
in
sbb
test
call
lsl
pop
jle
pop
shl
jmp
pop
dec
push
inc
pop
inc
loopne
dec
sub
push
dec
add
and
psrad
dec
and
cmp
mov
and
dec
ss
dec
xor
loope
jno
inc
dec
and
fsub
push
pop
test
mov
sub
ret
or
js
sub
xchg
add
inc
add
ins
imul
adc
push
jnp
xor
pop
int3
add
push
out
adc
clc
loopne
popa
push
imul
adc
add
jne
lahf
ret
sar
cmp
imul
push
cmc
push
push
enter
popa
xchg
ret
shr
cmp
cwde
cmp
xchg
add
retf
mov
ss
dec
add
push
jb
mov
and
xor
add
movs
adc
cmps
call
push
aaa
call
xchg
movs
mov
dec
push
(bad)
setb
push
std
push
xor
aam
fild
adc
test
and
nop
shr
xchg
fst
inc
mov
xchg
pop
jo
inc
inc
cmps
mov
ret
sub
xchg
fs
out
dec
cmp
cdq
or
adc
icebp
push
push
mov
dec
fsubr
cmp
mov
ret
or
repnz
cmp
adc
iret
aam
adc
mov
mov
xchg
pop
add
popf
xchg
add
sub
pop
and
sbb
adc
and
popa
pop
xchg
mov
mul
fidivr
(bad)
add
loope
add
dec
movs
add
call
pop
shr
jne
mov
dec
aas
cld
pop
push
call
cmp
jne
sbb
inc
adc
sbb
shl
pop
xor
repz
mov
push
loope
push
ret
jmp
int3
xchg
add
adc
adc
iret
ja
aam
pusha
jmp
push
pop
xor
adc
cmc
pop
mov
mov
sti
inc
inc
sbb
loopne
pop
movups
xor
ins
jg
test
jl
sbb
or
ret
cld
xchg
xchg
rcl
xchg
jecxz
cld
aas
push
rcl
inc
mov
jbe
je
test
adc
in
aad
dec
cmp
test
or
and
cmc
sti
inc
or
retf
or
cmp
pop
gs
pop
adc
fidiv
loope
push
(bad)
ins
push
ds
push
xchg
add
push
mov
cmp
hlt
or
mov
lods
push
inc
push
push
push
jmp
mov
mov
rcr
push
ror
scas
add
mov
pop
inc
rol
dec
cmps
sbb
or
xor
jno
xchg
add
jl
not
dec
add
pop
dec
or
jo
test
lods
dec
mov
call
push
mov
cmp
jle
aaa
sub
mov
(bad)
mov
pop
sub
lea
add
fsubr
mov
dec
push
jmp
sbb
movs
(bad)
je
stos
and
mov
xor
test
pmulhuw
inc
leave
jge
and
inc
pusha
inc
jo
xchg
inc
lods
mov
mov
clc
dec
sbb
retf
rcr
sub
or
ficom
and
jnp
sub
jmp
or
push
jae
shl
in
or
xor
test
sub
pop
and
cwde
jno
rcr
jne
add
test
popf
or
mov
inc
lea
adc
lock
sbb
mov
or
test
xchg
dec
and
rol
aam
push
cmp
dec
pop
nop/reserved
cmp
pop
(bad)
dec
loope
cwde
pusha
xchg
push
dec
call
fnstcw
xor
sub
push
fcomp
fild
int3
mov
mov
popa
dec
mov
adc
mov
push
jle
pusha
retf
push
jmp
and
push
mov
sub
push
addr16
or
or
in
cdq
ret
jnp
adc
adc
movs
or
add
scas
icebp
pop
dec
add
iret
or
test
ret
cmps
or
iret
aad
sbb
scas
sub
add
or
lea
pop
fcom
push
mov
or
push
cmp
xchg
mov
sbb
inc
sbb
mov
or
and
mov
(bad)
and
shr
mov
add
cdq
push
jbe
xor
ss
push
sub
inc
sub
mov
xchg
push
cmp
sbb
sbb
lahf
adc
nop
add
cmp
outs
add
fcmovnb
mov
push
and
push
jo
bound
or
push
sbb
es
cmp
daa
sbb
inc
mov
sub
cmp
sub
jmp
fs
inc
push
xchg
imul
and
adc
mov
mov
test
adc
mov
cdq
mov
mov
lods
in
push
xchg
loop
outs
out
retf
push
cmp
xor
dec
js
inc
xor
fisttp
push
call
push
imul
(bad)
dec
or
pop
adc
cli
adc
pop
inc
push
fs
ss
aad
adc
inc
es
adc
fs
pop
aaa
sar
and
cdq
shl
add
push
dec
pop
sbb
(bad)
mov
and
sub
mov
inc
gs
add
sti
add
and
out
psrlw
pop
xchg
push
push
cmps
enter
mov
adc
jne
inc
pop
fcomp
xlat
test
psrlw
push
or
test
xor
aam
pop
in
xchg
out
inc
lods
retf
and
push
mov
mov
jno
hlt
and
inc
ffree
xchg
inc
call
mov
(bad)
adc
loop
push
in
mov
mov
scas
cmp
dec
pop
shl
pop
and
sbb
cmp
(bad)
cmps
push
mov
int
mov
inc
hlt
mov
mov
mov
adc
jbe
xor
je
adc
setne
lods
inc
dec
mov
push
jg
push
es
lods
test
jbe
or
mov
test
xlat
js
add
xor
mov
xchg
cs
and
popf
mov
push
into
inc
sbb
in
push
out
inc
mov
add
rcr
popa
inc
add
aaa
pop
mov
push
inc
and
leave
and
hlt
or
sbb
push
rcl
ins
cmp
adc
push
inc
add
add
add
mov
pop
xor
jge
cs
je
and
jmp
inc
mov
cli
add
mov
or
sbb
jns
in
mov
pop
pop
enter
pop
aam
lods
pop
repnz
loopne
mov
or
pop
cs
cs
retf
in
lods
aam
fdiv
jae
pop
mov
mov
pushf
es
mov
sub
out
repz
test
es
lock
gs
(bad)
in
cmps
dec
ret
xor
sbb
fist
sub
sbb
add
ret
push
sub
out
(bad)
movs
or
push
test
inc
sbb
sub
xchg
iret
cld
or
add
or
mov
or
sbb
mov
enter
or
in
daa
sub
movs
adc
cmps
scas
sub
and
fisttp
shr
xor
dec
rol
jns
jo
js
jl
sub
dec
sbb
test
mov
lahf
or
push
fldenv
arpl
and
dec
je
push
inc
mov
loopne
pop
rcr
push
lock
xor
mov
cmps
hlt
mov
test
je
retf
in
cmp
stos
pop
sbb
lock
aam
test
(bad)
or
inc
push
pop
movs
sar
(bad)
lock
xor
jb
pop
mov
js
dec
add
fsub
push
xor
add
sub
dec
adc
cmps
out
push
inc
push
fdivr
add
mov
xchg
mov
in
lods
call
popa
dec
push
mov
push
stos
xchg
jl
mov
inc
ss
lods
dec
fdiv
dec
mov
movs
ret
fnsave
pushf
and
(bad)
fdiv
inc
in
and
push
in
pop
dec
and
lock
push
inc
rol
and
movs
rol
ror
or
mov
push
add
dec
pop
daa
sbb
xchg
mov
imul
push
dec
rol
call
dec
loop
dec
ror
add
dec
xlat
loopne
add
fsub
(bad)
sub
dec
cmp
mov
push
(bad)
nop
inc
dec
and
push
ss
cmc
call
out
sub
pop
ja
into
xor
int3
push
mov
popa
mov
xchg
fsubr
or
in
sub
and
shl
cld
and
call
mov
mov
cwde
shr
fwait
pop
pop
lock
xor
cmp
add
mov
push
xor
and
nop
or
test
add
sub
movs
loopne
or
dec
scas
jns
xor
dec
leave
lock
daa
sub
iret
push
fld
mov
rcr
inc
out
inc
je
bound
mov
lock
cwde
add
pop
jmp
and
cmp
fs
mov
pop
out
dec
sbb
mov
test
adc
jne
inc
pop
nop
jp
iret
xor
rol
imul
sub
push
fcomp
pusha
and
and
dec
xor
arpl
in
jb
push
adc
imul
push
lds
rol
mov
add
pop
mov
xchg
and
repz
sub
shr
in
and
xor
movs
adc
or
pop
xor
or
dec
cli
dec
arpl
test
sub
dec
pop
mov
pop
loopne
xchg
adc
push
mov
popa
or
xchg
inc
pop
pop
jmp
test
imul
inc
(bad)
icebp
and
shl
arpl
mov
adc
sbb
sbb
or
push
jmp
mov
aaa
fwait
shr
push
shl
pop
leave
out
xchg
inc
jmp
popa
clc
cmps
lea
pop
adc
sbb
imul
cmp
sbb
jmp
rcl
stos
call
jge
push
push
and
push
ds
add
jo
dec
sbb
ins
mov
dec
adc
or
fst
in
jns
outs
and
jmp
sbb
ficom
and
movs
dec
cmps
cld
inc
ret
lds
repnz
adc
mov
cmps
fadd
das
jmp
or
inc
add
or
cdq
fs
mov
or
aad
mov
and
je
lahf
dec
mov
or
sub
rol
jb
test
and
call
lock
sbb
and
test
int3
jl
xchg
adc
scas
loope
retf
or
dec
xor
fwait
out
jmp
mov
bts
push
arpl
inc
aas
test
stc
imul
xchg
jbe
or
rol
inc
sbb
shl
repnz
enter
pop
loope
xor
inc
test
dec
xchg
xor
test
pop
add
jne
add
loope
inc
gs
fdivr
fstp
mov
push
cdq
rcr
xor
jnp
test
and
mov
popf
pop
xor
or
test
add
cmp
pop
jl
mov
hlt
push
lds
cmps
mov
data16
pop
mov
jmp
xor
pop
outs
and
mov
sub
es
mov
(bad)
das
and
inc
pop
xchg
inc
pop
add
mov
fwait
lea
bound
pop
sbb
push
je
push
sti
(bad)
bound
fld
jb
imul
push
ffreep
xor
rcr
int
mov
retf
in
call
mov
adc
mov
xor
pushf
pushf
add
popf
adc
cmp
add
test
nop
stc
pop
sub
xchg
push
inc
add
sbb
arpl
mov
out
scas
in
adc
add
in
dec
sbb
dec
push
pop
data16
or
pop
cmp
cmovo
push
and
pop
push
or
pop
inc
push
pop
jae
mov
je
dec
je
test
ds
(bad)
ins
pushf
ins
in
or
and
jle
adc
xor
ins
pop
ins
pop
dec
inc
jmp
or
sub
gs
in
jmp
adc
add
sbb
add
clc
or
sub
addr16
push
mov
nop
inc
xor
mov
inc
test
rol
mov
push
popa
pop
repnz
mov
pop
(bad)
add
pusha
and
or
sub
ret
xor
xchg
aam
in
inc
daa
push
jo
push
add
jae
mov
add
sbb
addr16
cmc
xor
inc
mov
sbb
pop
or
ret
add
jmp
or
retf
mov
cmp
lea
mov
stos
mov
and
out
enter
jg
dec
push
and
ret
dec
mov
ins
ret
pusha
sbb
or
cmc
test
jns
add
inc
cwde
sbb
inc
movs
pop
nop
lock
adc
and
push
in
inc
and
or
push
les
lods
shl
add
test
lods
fistp
xor
jmp
mov
xchg
movs
or
fst
mov
bound
retf
lods
es
out
int3
ins
inc
sbb
xchg
push
into
cdq
push
fbld
fstp
loope
pop
loopne
push
add
hlt
and
mov
sbb
nop
loop
jno
sbb
in
adc
lea
repnz
mov
rol
sbb
xchg
mov
xor
cmp
pop
cmps
dec
or
xor
jmp
cmps
mov
(bad)
mov
add
and
push
push
je
push
sub
pusha
stos
push
rcl
lea
push
xor
inc
or
add
(bad)
enter
fst
cmp
sbb
sub
push
scas
les
or
daa
jecxz
or
add
int3
add
push
dec
pop
dec
sbb
mov
popf
pushf
inc
and
or
and
ficom
fstp
ret
mov
adc
jno
or
xchg
aam
mov
pop
push
lods
out
popa
and
or
adc
push
add
(bad)
jmp
(bad)
cwde
push
inc
enter
or
cmp
mov
inc
and
pop
adc
xchg
es
and
sub
push
push
push
nop
clc
scas
or
pop
fild
mov
xor
aam
sub
ins
test
add
mov
jmp
dec
mov
fsub
push
push
aaa
adc
test
ins
fucom
jb
rol
or
push
mov
add
cmp
jecxz
stos
xor
jne
imul
adc
cdq
xor
sbb
call
cmp
add
add
gs
int
add
cmp
xor
in
add
sub
jo
mov
sub
test
dec
mov
jno
daa
cmp
push
mov
mov
test
stos
jae
add
push
sub
mov
push
lds
xor
popa
aam
leave
ret
mov
jmp
rcr
mov
push
pop
fadd
pop
push
(bad)
dec
pusha
sub
jb
stos
xchg
mov
jae
push
ret
push
and
ins
ret
add
fwait
adc
inc
js
jmp
dec
add
movs
xchg
cmp
call
add
scas
jp
stc
fcomp
rcr
and
fcomp
ds
test
cmp
aam
mov
dec
cli
xchg
pop
jo
add
les
xchg
arpl
inc
data16
imul
call
call
ror
and
mov
cmp
xor
xor
and
(bad)
and
rol
aaa
sub
cli
xor
and
sub
loope
jae
nop
ficomp
mov
add
outs
imul
adc
hlt
sbb
dec
adc
dec
popa
xor
pusha
add
call
pop
and
dec
je
xchg
test
adc
pop
sub
ds
dec
push
imul
xor
sbb
retf
sbb
repnz
add
jge
js
jl
test
sub
dec
sbb
dec
add
add
fs
pop
dec
adc
xchg
jae
test
out
or
dec
xor
pop
js
mov
ret
or
push
test
push
outs
dec
cmc
pop
movs
mov
aaa
iret
mov
jecxz
aam
push
pop
iret
jb
xor
or
sub
pop
inc
nop
push
inc
fcomp
push
push
(bad)
fist
div
das
popa
stos
ins
nop
sub
aad
fnstenv
push
fwait
adc
mov
xchg
inc
sub
add
pop
stos
dec
sbb
lock
push
inc
mov
fs
in
fstp
es
push
es
dec
shr
retf
sbb
mov
inc
push
jne
pop
stos
push
aam
push
and
mov
enter
inc
pop
adc
and
test
je
or
pop
enter
ror
inc
js
adc
or
add
imul
inc
pushf
js
cmp
enter
or
outs
or
add
shl
in
int
adc
inc
add
fstp
(bad)
mov
ret
aaa
push
adc
(bad)
mov
popf
cdq
dec
mov
xchg
xchg
mov
cmp
mov
and
pop
cdq
nop
inc
mov
sub
retf
and
jmp
popa
xor
and
push
mov
cs
mov
push
or
jecxz
pop
dec
add
les
stos
or
or
pop
scas
adc
jmp
dec
das
mov
and
aad
fs
add
cmc
test
nop
imul
or
adc
mov
dec
inc
add
sbb
inc
cwde
mov
rcr
and
or
pop
sar
add
sub
add
shr
les
sub
shr
push
add
mov
add
adc
pusha
fisub
push
dec
in
sbb
add
adc
sub
adc
loope
adc
jo
sbb
out
lahf
add
add
ins
mov
daa
je
ins
push
jb
into
sub
int3
je
fsub
fist
mov
adc
mov
in
test
cwde
cmp
pop
sbb
daa
add
or
aam
mov
push
ror
or
cmc
and
sub
pop
or
mov
mov
pop
das
mov
fst
and
mov
sub
adc
pop
pop
es
sbb
mov
aad
scas
push
sub
sub
in
jge
push
inc
adc
add
push
adc
stc
push
push
cmps
push
mov
lods
or
fstp
sub
add
or
xchg
mov
push
jb
push
add
add
retf
push
gs
jmp
mov
test
leave
mov
dec
and
in
xchg
lods
sbb
xchg
stc
sub
and
das
popf
mov
mov
or
lock
les
add
ins
mov
movs
push
in
hlt
sub
inc
scas
mov
sar
cmp
push
xchg
add
popf
out
jecxz
or
push
int3
nop
fidivr
fbstp
js
jge
push
mov
adc
sbb
mov
jmp
cmc
add
mov
adc
adc
push
mov
push
or
push
cmp
xchg
sbb
fisttp
inc
inc
arpl
push
push
pop
or
push
mov
and
(bad)
inc
jns
push
sbb
push
in
stc
imul
test
(bad)
(bad)
and
lahf
xor
add
inc
pusha
and
lods
jl
xor
push
or
mov
push
lods
xchg
fwait
and
jb
test
or
jmp
mov
cwde
or
adc
clc
stos
sahf
enter
or
sub
adc
mov
xchg
mov
sub
xor
add
je
add
rol
or
jnp
out
mov
ret
cs
jo
jmp
sbb
or
jo
dec
std
(bad)
fdivp
mov
jne
jnp
mov
fwait
sbb
xor
dec
fsub
rol
cli
push
mov
fbstp
add
(bad)
and
cmp
stc
fimul
mov
call
sub
add
xor
fidiv
dec
mov
sbb
mov
lds
ins
imul
cmp
adc
push
push
xchg
pop
jne
xchg
xchg
inc
out
xor
xor
xchg
jo
xor
clc
(bad)
xchg
test
jne
mov
leave
shl
ins
movs
icebp
jno
cmp
lods
inc
call
fs
int3
add
(bad)
scas
ins
push
jnp
mov
lea
je
test
cli
cmp
gs
jne
push
mov
sub
outs
pop
add
daa
lahf
nop
in
jne
sub
inc
adc
call
arpl
adc
xchg
adc
and
xchg
or
inc
push
add
push
in
in
pusha
mov
pop
pop
arpl
add
rcl
sbb
push
or
add
jb
or
and
add
sub
adc
lods
jno
xchg
loopne
mov
sub
push
pop
xchg
outs
or
jo
loope
add
lods
imul
jp
sub
call
xor
push
add
sbb
mov
sbb
add
mov
enter
add
sub
test
arpl
sub
add
inc
xor
les
sub
add
or
mov
mov
pushf
ds
add
add
mov
dec
push
cli
push
add
(bad)
rol
push
add
push
mov
add
inc
dec
add
add
dec
rcr
adc
push
aaa
mov
(bad)
ins
mov
dec
dec
mov
movs
cmp
cmp
clc
mov
fst
or
inc
add
mov
jb
sbb
xchg
jp
push
push
cwde
inc
sbb
adc
movs
fimul
sub
jmp
stos
and
es
xor
push
rol
js
sbb
ss
push
xchg
inc
adc
dec
popf
repz
push
hlt
call
fist
inc
jo
adc
dec
cmp
mov
add
popf
xchg
jmp
rcl
sbb
pop
adc
or
sbb
test
adc
js
sbb
xchg
push
sbb
cmc
adc
xchg
jecxz
inc
add
dec
adc
es
xor
sbb
push
adc
rcr
push
popa
mov
mov
jne
test
lahf
and
or
out
ins
xor
xor
inc
jmp
mov
xor
int
mov
mov
inc
fs
push
daa
mov
sub
push
ret
adc
in
sti
in
inc
push
pop
cld
add
add
jmp
and
dec
push
imul
inc
mov
xor
fbstp
and
jbe
gs
xchg
hlt
sbb
js
mov
out
dec
inc
pmulhw
cmp
push
lahf
(bad)
enter
das
mov
mov
outs
test
rol
inc
mov
mov
xlat
sahf
mov
clc
dec
iret
mov
fucomip
sbb
ret
xor
dec
xor
dec
les
(bad)
es
ror
adc
inc
jbe
leave
xor
or
jne
ror
aad
inc
arpl
push
(bad)
mov
ret
xor
bound
out
dec
es
(bad)
(bad)
inc
ds
cmp
mov
mov
hlt
xor
add
scas
adc
popf
xchg
xchg
arpl
ins
mov
cmp
xchg
movs
xchg
add
sub
(bad)
cmps
push
mov
cmp
outs
dec
xchg
sbb
ud2
mov
jne
pop
sbb
push
jmp
sub
jo
pop
add
lods
gs
mov
div
fs
(bad)
push
sbb
add
clc
mov
or
rcl
gs
dec
mov
push
push
and
ds
aam
gs
lea
push
mov
lods
fst
jmp
test
dec
aam
and
(bad)
rol
in
xchg
scas
and
ja
es
jecxz
js
jp
or
or
jno
stc
imul
adc
add
xor
sub
movs
xchg
sbb
sub
retf
xor
rol
cmp
mov
add
inc
sub
and
mov
xor
xchg
add
leave
in
add
and
and
sbb
rcl
loope
enter
iret
sbb
jmp
sbb
jo
in
sub
out
push
jp
inc
sub
mov
mov
inc
lahf
sbb
xchg
pop
aas
adc
lods
xchg
movs
sbb
ret
push
add
and
mov
call
ret
addr16
sbb
pusha
jle
mov
inc
mov
and
lds
call
or
(bad)
dec
xor
mov
sbb
shl
adc
inc
or
add
add
in
mov
in
jmp
add
push
pop
mov
push
dec
push
xor
xchg
inc
lea
das
mov
shr
mov
ret
mov
jo
(bad)
adc
mov
or
jmp
dec
and
out
scas
daa
mov
jl
test
jmp
jbe
cmp
call
add
add
push
(bad)
int3
dec
sbb
inc
test
in
pusha
push
push
or
int3
das
test
push
sub
movs
xchg
(bad)
and
and
inc
inc
inc
inc
js
xor
ficom
pop
sbb
pop
int
xchg
jo
jge
xchg
dec
ret
aaa
aas
ja
jle
and
xor
or
and
push
sbb
add
adc
mov
jbe
ret
jmp
pop
mov
mov
mov
sbb
sub
sbb
fucomi
mov
jmp
cmp
cmp
rcr
dec
imul
or
push
retf
or
dec
xor
lea
inc
dec
xor
pop
setl
popaw
pop
arpl
ucomiss
hlt
popf
cmps
sub
movs
push
adc
dec
sbb
loope
es
mov
enter
or
add
mov
mov
js
xchg
xchg
mov
push
rol
inc
ret
cmp
or
push
ss
mov
cmc
push
add
xor
mov
and
leave
cmp
je
pop
mov
add
and
pop
pop
inc
or
or
mov
adc
imul
xchg
nop
in
mov
and
add
nop
bound
lods
fld
cmp
adc
inc
ret
test
retf
push
or
popa
pop
(bad)
in
inc
mov
sti
test
push
inc
and
mov
mov
xchg
mov
jle
ret
lahf
sub
pop
and
js
mov
add
mov
push
leave
or
xlat
pop
add
xor
cmp
out
idiv
push
and
ret
call
jmp
jl
jo
cmps
jae
push
push
adc
adc
xlat
lds
pop
cmove
mov
call
lods
add
inc
add
adc
rcr
jp
jl
mov
mov
and
dec
add
sar
mov
ret
sub
out
and
jo
jno
xlat
xor
jle
adc
adc
stc
or
mov
push
in
lods
mov
jno
ja
push
cmp
rcl
mov
popa
aaa
push
mov
mov
fild
lods
inc
xchg
sahf
add
xor
sub
(bad)
cmp
jl
push
xlat
fadd
xchg
push
pop
test
inc
push
not
imul
add
out
jmp
sbb
add
(bad)
cli
push
mov
ja
push
xor
mov
lea
(bad)
jno
je
dec
jne
push
fbld
data16
les
jb
mov
mov
in
dec
push
hlt
add
sar
xchg
cmp
aad
mov
rol
and
movs
or
push
popa
or
je
pusha
cld
ficomp
mov
sbb
push
add
daa
or
sbb
ucomiss
sar
jmp
inc
add
aaa
xchg
jle
mov
mov
popa
or
(bad)
and
fwait
mov
add
sbb
clc
sub
mov
sub
nop
sbb
or
pop
mov
add
sahf
test
add
mul
in
dec
add
dec
pop
inc
shufps
mov
mov
adc
sub
jnp
or
icebp
inc
rol
out
retf
movs
ss
jne
pop
out
adc
ficom
mov
add
dec
ret
mov
stos
outs
sbb
das
or
(bad)
jge
test
loopne
lahf
das
add
js
or
add
bound
mov
mov
pop
push
pop
inc
shl
sbb
xor
cmp
ins
and
je
or
pop
int3
push
pop
pop
and
push
mov
nop
or
cmp
in
pop
cwde
nop
iret
push
xor
(bad)
or
mov
push
rcl
ss
mov
in
out
pop
inc
lods
mov
sbb
xchg
pop
xor
clc
cs
push
inc
mov
lahf
shl
fsub
enter
add
adc
(bad)
sar
or
cdq
mov
sub
leave
aam
loope
out
push
inc
sbb
adc
add
in
ds
pop
es
pop
pop
cs
in
loope
ret
and
dec
or
and
mov
lea
sar
jo
xor
add
je
pop
pop
sbb
aas
loopne
(bad)
les
xor
jp
shl
push
mov
sub
sub
adc
pop
popa
(bad)
mov
push
sbb
cmp
fcmovbe
xor
xchg
mov
sub
jno
movs
pop
dec
fwait
dec
pop
jmp
inc
sub
out
sub
cmp
dec
mov
sub
add
adc
xchg
push
and
loop
add
adc
retf
sbb
aam
icebp
dec
add
pop
dec
sbb
xchg
push
xor
sbb
int
and
fcom
stc
mov
add
lods
add
lock
shl
xchg
push
push
cmps
pop
xchg
lds
lds
xor
out
and
xor
mov
fdiv
adc
xor
loope
sub
enter
mov
test
cmc
bound
in
push
add
jg
mov
inc
push
test
mul
rol
sbb
mov
pop
test
xor
inc
jl
imul
nop
sbb
(bad)
pop
pop
and
dec
movs
pop
jmp
test
mov
out
sahf
leave
pop
mov
mov
daa
mov
push
rol
dec
sbb
mov
or
enter
xor
jo
mov
enter
imul
mov
mov
hlt
loopne
popa
xchg
push
test
gs
xchg
add
and
retf
rol
leave
aam
out
dec
fwait
xor
leave
dec
and
sbb
xor
cmp
int3
out
je
adc
or
lea
cmp
loopne
mov
push
test
pop
ror
pop
pop
jp
xor
ins
mov
cmp
add
retf
es
adc
cmp
dec
xchg
mov
jge
add
cld
inc
stc
push
sbb
jae
inc
pop
push
xchg
mov
imul
je
push
pusha
or
push
mov
jecxz
sub
push
icebp
aam
dec
and
add
sub
retf
jne
fistp
cmp
or
les
bswap
movs
jle
sbb
retf
popf
mov
sub
add
inc
mov
mov
fadd
into
mov
fist
or
je
shl
aaa
or
je
and
stos
xor
std
push
in
pop
add
or
arpl
mov
mov
das
ins
sub
xor
xchg
adc
les
sub
pop
jmp
cmp
or
shl
ret
not
push
mov
xchg
lock
pop
push
rol
pop
push
adc
ret
or
or
ss
js
pop
shl
jno
ror
ins
and
retf
ja
mov
mov
pop
jge
ja
sub
(bad)
push
xor
fisttp
call
fucomip
or
xchg
icebp
or
push
in
xor
(bad)
push
sbb
mov
push
cmps
lea
fsubr
dec
adc
(bad)
sub
movs
ins
xor
nop
ins
push
add
call
cmp
(bad)
fdiv
and
fdivr
add
mov
sub
adc
jne
iret
sbb
adc
daa
or
push
xor
hlt
pop
push
jb
sub
enter
and
jo
int
stc
cmp
aam
add
push
adc
xor
xchg
out
repz
adc
nop
das
mov
push
data16
add
(bad)
adc
add
pop
inc
cmp
dec
sub
nop
mov
xchg
dec
lea
inc
xchg
sub
dec
push
jo
and
or
inc
mov
mov
rol
mov
icebp
inc
call
push
js
xor
lock
test
cmp
movs
pop
and
push
inc
aaa
shr
fld
cmps
push
repnz
add
push
pusha
(bad)
mov
jne
addr16
pop
rcr
cwde
add
movs
loopne
lea
dec
or
sbb
cmp
mov
popa
pop
mov
inc
out
cmp
iret
movs
cld
ficomp
xchg
test
push
inc
mov
mov
jns
nop
imul
cmc
add
sahf
or
and
lock
cli
retf
mov
clc
xor
sbb
mov
es
pushf
jo
dec
xlat
jmp
xor
pusha
or
xchg
jge
movs
test
test
sbb
pop
mov
mov
adc
push
aam
add
lea
sub
test
and
push
cmp
pusha
daa
sbb
dec
pop
adc
je
inc
pop
ins
mov
dec
test
fistp
xchg
daa
dec
out
add
and
cmp
cmp
adc
call
inc
add
and
ficom
and
mov
or
and
add
pop
mov
mov
adc
push
lock
fmul
jle
cmp
dec
ja
jno
pop
jmp
sub
and
and
inc
sub
rcl
cmp
stos
cwde
adc
int
jmp
and
jge
mov
jl
and
inc
in
and
add
add
dec
imul
and
iret
inc
pop
in
call
mov
jae
sahf
nop
jge
cmp
xor
hlt
add
cmp
(bad)
or
pop
pop
jmp
and
cmp
pop
je
adc
shl
lock
mov
mov
or
mov
imul
inc
hlt
push
pusha
lock
inc
out
xchg
fwait
jmp
add
xchg
test
add
invd
jmp
or
pop
jmp
je
jo
popa
or
ins
sbb
aad
shl
xchg
lods
adc
xor
ror
dec
push
xlat
sub
mov
call
retf
out
pusha
sti
add
scas
inc
cmp
dec
jmp
dec
or
imul
mov
sub
shl
shr
ret
(bad)
mov
sub
rol
xchg
push
inc
mov
ficom
sti
jae
ror
das
repz
fdiv
arpl
dec
rcl
dec
pop
inc
icebp
shl
xor
adc
fmul
aad
retf
retf
into
fdiv
(bad)
xor
add
clc
cmp
mov
imul
inc
xchg
cmps
xchg
icebp
or
pop
adc
retf
test
or
mov
std
add
sar
adc
sar
dec
cdq
add
enter
add
xor
mov
mov
jge
sbb
and
mov
hlt
mov
and
push
stos
and
and
add
add
lods
and
cwde
mov
push
add
jnp
pop
enter
or
xor
adc
xor
popa
or
lds
pop
lea
and
jmp
arpl
cmp
rcr
or
push
sub
es
add
ds
sub
fstp
xor
mov
test
cmps
jmp
push
fidivr
ins
mov
inc
iret
mov
mov
push
mov
shl
ins
jmp
cmp
push
sub
shl
add
int
mov
add
mov
icebp
cmp
lods
xcrypt-cfb
cmps
gs
fcom
mov
pop
add
loop
lock
fnstenv
xor
and
leave
pop
xor
aam
jbe
push
or
and
sub
mov
xor
iret
and
cmp
pop
ret
rol
or
sbb
mov
and
imul
push
xchg
daa
xchg
sbb
or
push
mov
push
add
fsubr
sub
lock
mov
xor
imul
sub
loope
imul
stos
cmp
ret
cli
in
or
jmp
mov
lea
inc
sbb
(bad)
lock
mov
push
in
loopne
inc
call
xor
adc
xchg
mov
add
adc
std
stos
cwde
je
movs
xor
shr
test
sar
rol
cmp
aaa
test
mov
push
pop
cs
push
lahf
cmp
nop
jo
inc
inc
dec
dec
rcl
sub
out
mov
dec
xchg
mov
sbb
sub
in
call
xchg
pop
dec
imul
or
or
jns
out
push
sbb
mov
fisttp
xor
dec
test
sbb
pop
icebp
cmp
push
add
dec
stos
sub
push
pop
pop
mov
sub
and
es
cwde
sub
int3
cmc
retf
lods
mov
sbb
je
ins
jmp
rcl
cmp
and
movs
sbb
dec
inc
ret
dec
xchg
lock
aas
fwait
ss
adc
pop
movs
(bad)
xchg
lahf
push
add
fcom
cmp
jnp
shld
inc
push
cmc
push
pop
or
sbb
push
and
lock
sbb
pop
(bad)
out
push
jno
jno
add
test
shl
adc
jnp
push
shl
aad
xchg
fs
fadd
mov
and
sbb
add
add
push
les
ret
jle
jnp
stos
inc
xor
or
push
pop
push
sbb
dec
add
pop
retf
fisubr
cdq
inc
xor
pop
adc
repnz
add
xchg
cmc
xchg
mov
dec
xchg
adc
mov
imul
pop
ins
adc
add
test
or
cmp
cmps
xor
jl
cmc
or
pop
push
nop
(bad)
xor
lods
adc
in
imul
dec
sub
arpl
ret
and
mov
mov
loopne
push
stc
je
pusha
jo
mov
adc
and
xor
lock
sbb
push
enter
add
scas
add
movs
push
sti
add
bound
lock
jmp
test
out
mov
in
hlt
sub
or
sub
sar
sar
add
xor
stos
and
adc
fdivr
pushf
xchg
call
pusha
sbb
clc
and
pop
inc
pop
sub
or
retf
dec
shr
pusha
leave
cmp
test
inc
or
lods
fwait
xor
mov
dec
jge
or
sbb
inc
fwait
sbb
jmp
shr
(bad)
call
xor
mov
adc
cmp
push
mov
xchg
fcom
iret
adc
add
ret
popf
mov
sbb
push
cmp
jne
mov
inc
jge
(bad)
push
jmp
mov
mov
inc
imul
sub
dec
adc
and
repnz
push
fs
add
sbb
and
push
cmp
cmp
jmp
inc
cmp
aam
in
adc
mov
inc
(bad)
mov
pop
test
sbb
or
add
jl
sub
pop
pop
push
ret
add
add
js
mov
add
pop
sbb
sub
xor
inc
xor
imul
into
xchg
inc
jne
(bad)
or
pop
cli
sub
mov
and
or
fs
push
or
mov
xchg
outs
addr16
inc
ja
in
inc
jbe
(bad)
adc
add
ins
bound
ss
xchg
inc
cmp
test
add
inc
inc
sbb
aam
adc
adc
xor
jmp
or
push
sbb
push
pop
stos
in
or
out
iret
ds
push
cmp
pop
xor
add
or
inc
imul
add
test
pop
sub
mov
inc
sbb
cs
(bad)
cmp
pusha
sbb
sub
sti
cmps
sti
dec
sbb
adc
dec
loop
and
aaa
ins
lods
outs
push
mov
xchg
cmp
xchg
fs
adc
dec
jo
not
and
or
and
xchg
test
or
call
jle
les
xor
or
or
xchg
or
je
frstor
xor
mov
movs
jo
xor
fwait
xor
and
shl
jbe
ror
bound
je
jae
jp
cs
pop
out
push
jmp
and
adc
arpl
mov
les
aaa
adc
jne
mov
ror
cmp
sbb
popf
or
jmp
jmp
push
mov
and
push
rcl
rcl
dec
dec
or
ja
adc
inc
call
dec
sub
shl
mov
xor
je
lock
mov
fisttp
add
jle
cmp
loopne
mov
fdivr
xor
jae
jl
dec
imul
mov
pcmpeqb
or
adc
test
xor
gs
push
loope
sbb
adc
mov
xchg
jmp
cs
adc
dec
test
(bad)
retf
popf
mov
and
push
jnp
imul
lock
shl
movs
inc
sub
mov
mov
ror
ret
stc
dec
call
(bad)
je
call
out
xor
sub
xor
jmp
adc
pop
adc
inc
push
and
or
adc
or
pop
inc
pop
stos
es
jge
dec
fmul
movs
dec
push
js
out
ror
push
and
int
xor
imul
adc
loopne
and
dec
dec
lods
sub
nop
mov
xchg
sub
add
push
add
xchg
mov
inc
pop
inc
jge
inc
adc
cmp
xchg
push
push
mov
mov
pop
gs
mov
and
imul
movs
sub
adc
add
push
add
repz
sahf
mov
dec
inc
sub
icebp
push
inc
add
sbb
sub
cmp
mov
pop
(bad)
ins
push
lods
sar
data16
sti
add
or
stc
add
shl
mov
ret
mov
jne
inc
aaa
les
inc
ins
inc
pop
enter
loop
jae
test
cmp
pop
fcom
sbb
cwde
div
jne
push
jne
int3
out
push
movs
jg
sbb
inc
sub
daa
sbb
inc
outs
xor
xor
shl
jl
push
pop
and
lods
fdivr
inc
or
jp
aam
jp
jmp
adc
pop
mov
inc
cmps
loopne
stc
pop
dec
push
or
inc
pop
enter
sub
loopne
or
or
js
movs
(bad)
jo
jp
or
retf
lods
inc
push
lods
pop
ret
ds
sbb
daa
fisttp
aad
rcl
test
mov
aam
push
mov
or
mov
aaa
or
xor
and
fsub
add
test
call
ja
mov
add
in
sub
out
mov
add
pop
repz
int3
scas
adc
mov
push
mov
and
daa
mov
push
sub
or
pop
sbb
rol
jl
adc
push
push
mov
sub
scas
mov
add
pop
mov
xchg
sub
fsub
inc
add
sbb
sub
mov
jo
adc
retf
je
dec
out
jb
xor
imul
lods
sbb
jbe
sbb
push
xor
adc
xchg
pop
loope
mov
sar
xor
pop
or
inc
sbb
repnz
xor
or
loopne
loope
in
icebp
adc
push
xchg
push
clc
fcom
inc
int3
ins
call
je
(bad)
adc
aad
popa
pop
ret
inc
stos
sahf
pusha
sub
or
shr
or
mov
pop
or
loope
call
test
cld
or
jmp
inc
xchg
cmp
out
ret
pop
call
in
loope
(bad)
rcr
test
cmp
mov
sbb
xor
sub
pusha
jg
or
(bad)
aad
inc
sub
and
movs
or
ror
add
or
jl
call
inc
inc
sub
xor
xchg
data16
push
(bad)
push
xor
pusha
imul
les
mov
pop
movs
inc
or
into
jnp
clc
pusha
sbb
cmp
outs
arpl
into
imul
pop
or
arpl
in
dec
call
adc
adc
rcr
popf
and
dec
test
xchg
mov
push
stos
movs
push
jo
or
fwait
imul
pop
enter
add
pushf
scas
rcl
sbb
mov
add
sbb
and
pop
(bad)
or
xchg
mov
jl
aam
cmp
sbb
or
imul
jle
(bad)
call
mov
jne
and
aam
ret
ins
ja
xor
out
mov
adc
or
mov
mov
fadd
mov
add
mov
pop
das
iret
jg
dec
call
xchg
shr
out
inc
mov
push
or
sbb
inc
pop
mov
xor
xchg
(bad)
adc
aaa
fs
iret
dec
arpl
or
fnsave
xchg
or
jae
call
push
and
cwde
xchg
cmp
pop
mov
ins
jne
jge
in
cmp
sub
and
and
fistp
xchg
or
shl
xchg
test
and
dec
jne
mov
mov
fdiv
into
outs
sub
add
adc
adc
add
ror
mov
or
adc
pop
or
bound
pusha
inc
or
aam
or
mov
add
das
sbb
sbb
cmp
jo
pop
jo
cmp
aaa
fld
test
cli
sub
adc
ret
jmp
ficomp
aaa
outs
test
cmps
rol
mov
and
in
cli
sub
push
out
icebp
(bad)
imul
dec
fistp
jbe
push
pop
jle
in
xor
mov
adc
lea
sbb
sub
test
mov
xchg
pushf
test
lods
ror
or
jne
js
nop
jo
mov
in
sbb
arpl
jae
sbb
inc
and
push
ins
pop
add
adc
push
inc
int
xor
ror
push
out
or
fst
pop
aaa
pop
stos
or
in
sub
sub
sbb
fdiv
mov
std
adc
call
xchg
dec
mov
dec
mov
push
jge
call
popa
jg
add
xchg
retf
shr
inc
mov
ror
cmp
retf
movs
dec
sbb
dec
imul
inc
sbb
in
adc
add
lods
sbb
jo
add
int
adc
push
ror
add
pop
adc
cmc
jl
push
std
push
jmp
mov
xchg
and
inc
add
inc
dec
sub
ret
data16
sub
xor
dec
call
in
loope
mov
lock
and
adc
jecxz
outs
fimul
jne
adc
(bad)
ror
out
sahf
inc
lds
call
cmp
adc
mov
xchg
mov
add
repz
retf
(bad)
adc
xchg
mov
rol
rcl
pop
push
out
retf
xor
adc
je
mov
inc
and
repnz
or
sbb
adc
rcr
shl
dec
mov
rol
add
adc
mov
mov
jg
jge
mov
sbb
add
outs
sub
pusha
push
cmp
add
sub
pop
lahf
adc
adc
add
or
mov
ficomp
xor
call
mov
and
aad
pop
sbb
psubusb
jge
add
jle
dec
and
enter
std
pusha
add
mov
push
xchg
fcom
das
add
xor
mov
add
adc
inc
repz
dec
adc
pop
jo
aam
loopne
or
cmps
jecxz
or
inc
and
fsubr
imul
int3
or
push
xor
dec
cmp
std
push
push
clc
jo
mov
jg
test
(bad)
aad
xchg
adc
add
jne
xchg
sub
test
adc
and
push
popf
jle
lea
add
push
test
test
repnz
jae
inc
sbb
inc
xchg
push
ret
repnz
xor
xor
jbe
and
test
cmps
sbb
dec
ret
inc
int
or
jle
or
movs
jmp
push
dec
and
sub
add
xor
lods
and
movs
sbb
pop
xor
(bad)
cmp
pop
pop
push
test
arpl
inc
cs
add
add
adc
movs
xchg
scas
add
out
xchg
outs
pusha
arpl
fimul
sbb
mov
sar
pop
mov
inc
sbb
aam
and
xor
cmp
pop
sub
fdiv
xor
push
bound
jne
push
push
and
sbb
mov
adc
(bad)
arpl
and
mov
jmp
outs
pop
pop
and
mov
jne
mov
jae
inc
mov
and
jbe
loopne
and
daa
or
test
mov
hlt
push
fist
or
sub
add
rol
(bad)
adc
or
push
inc
mov
push
add
and
in
jne
and
adc
shl
mov
xor
cmp
js
mov
cmps
and
pop
jb
jo
aam
sbb
repnz
adc
inc
sbb
inc
je
mov
sbb
or
inc
sbb
test
mov
aam
fcmovb
jbe
bound
sub
sub
sub
adc
in
mov
sub
push
cmc
inc
add
mov
push
push
cmp
push
inc
inc
loopne
lock
inc
inc
jle
inc
sub
sbb
and
pop
push
pop
xor
jp
pushf
inc
sbb
jp
xchg
hlt
movs
aas
push
inc
sub
inc
dec
cmps
xchg
xor
jo
add
cwde
or
dec
jbe
imul
pop
sub
cmp
(bad)
ror
xor
in
jbe
or
adc
rol
je
fdiv
inc
cs
inc
dec
or
ror
lods
mov
pop
sub
sbb
stos
mov
dec
fsubrp
push
jb
je
sbb
or
dec
neg
xchg
mov
out
push
add
stos
add
or
je
adc
das
shl
sub
mov
jl
push
push
sbb
ds
push
aas
inc
inc
aad
test
rcl
aas
cmp
outs
and
mov
sar
push
clc
mov
aaa
int
inc
push
les
sbb
inc
sub
push
and
add
jmp
lock
out
and
xchg
cmp
not
jl
test
movs
xchg
clc
icebp
cmp
jmp
fcom
sub
pop
and
xchg
mov
sub
sub
nop
icebp
jle
xor
ins
xchg
bound
mov
xchg
or
ficom
add
call
push
push
ins
cmp
dec
lods
mov
mov
test
mov
mov
add
test
je
push
push
add
cdq
add
imul
cmps
cmp
movs
push
pop
loop
mov
ror
lock
int3
pushf
call
dec
movs
test
daa
mov
bound
sbb
cmp
mov
xor
rcr
mov
sbb
rcr
inc
fadd
bound
retf
dec
mov
push
inc
xchg
or
jp
or
test
das
adc
jne
pop
test
push
xchg
cmp
dec
sar
cmc
add
ja
xor
pop
mov
test
adc
rcl
rol
rcr
xor
dec
inc
gs
nop
mov
scas
or
lock
and
adc
shl
add
pop
mov
xor
repz
lea
add
xor
and
cmp
pop
push
fstp
test
xor
lods
mov
add
(bad)
xchg
sub
cmps
jne
sub
push
or
arpl
pop
sub
dec
imul
lock
jge
shl
add
fst
rol
pop
fdivr
mov
pusha
dec
mov
daa
sub
jg
xor
shl
inc
sbb
mov
sub
or
adc
ret
inc
in
sub
inc
js
aas
jge
mov
mov
cdq
jo
inc
or
sbb
dec
fiadd
test
pop
sbb
lods
loopne
or
and
xor
pop
and
mov
push
push
call
sub
test
leave
push
loopne
inc
push
inc
jle
cmp
cmc
repnz
lods
mov
call
in
in
mov
ret
pop
add
(bad)
xchg
push
sbb
dec
sub
and
inc
pusha
sub
or
add
lock
mov
lahf
xor
cmp
pusha
dec
pxor
inc
lock
popa
lods
iret
push
in
pop
imul
mov
sbb
and
ret
mov
add
or
test
mov
lock
cs
xor
or
cli
and
mov
les
mov
mov
mov
add
out
adc
xor
mov
inc
mov
test
add
and
adc
bound
adc
shl
jne
push
(bad)
int
enter
add
xchg
mov
fld
loopne
xor
movs
and
in
(bad)
cld
xchg
lock
imul
sbb
sub
pop
mov
pop
into
push
mov
mov
inc
mov
mov
cmp
add
sbb
and
cmp
sub
cmp
daa
ror
outs
push
loop
repz
xor
jle
hlt
imul
pop
lock
repnz
push
push
or
clc
jle
imul
cs
xor
pop
pop
ins
push
jne
add
jnp
nop
lods
adc
sbb
sub
push
lahf
xchg
dec
add
fxch
or
and
and
mov
mov
movs
add
mov
shl
cmc
std
mov
fidivr
pop
in
push
jno
sub
ja
push
push
push
je
pop
lahf
(bad)
test
sub
or
xchg
js
mov
sbb
loopne
repnz
(bad)
jmp
cmp
add
push
push
and
xor
adc
clc
jecxz
int
adc
sahf
mov
or
cmp
push
add
fisubr
mov
ins
push
lea
sbb
movs
nop
cmp
or
iret
push
push
cmp
push
push
adc
div
ds
mov
push
rcl
or
pop
cmp
mov
ins
mov
jb
push
xchg
out
movs
inc
inc
test
ins
shr
mov
mov
test
dec
stc
mov
mov
retf
add
pop
clc
loopne
push
ds
jne
sub
jnp
and
mov
xor
add
out
data16
xor
mov
inc
cmp
lods
sbb
imul
retf
lods
adc
unpcklps
movs
adc
push
xor
sbb
(bad)
jo
fidiv
fbstp
bound
pusha
sub
xchg
fsub
loopne
daa
retf
inc
cmp
retf
mov
add
arpl
xor
adc
and
jno
push
cmp
or
mov
(bad)
imul
add
lea
mov
inc
je
fs
add
in
xor
int3
mov
mov
xchg
outs
cld
mov
push
mov
mov
shl
jg
mov
fidivr
jg
lea
mov
shl
test
in
xor
bound
add
lahf
mov
sti
cmc
mov
xchg
add
mov
dec
jo
xchg
data16
repnz
cmp
jne
sub
dec
arpl
push
jl
jl
pusha
inc
fdiv
push
call
movs
in
push
out
sbb
and
inc
in
mov
mov
test
movs
adc
out
dec
inc
or
and
dec
scas
aaa
stc
push
push
ins
(bad)
mov
add
xchg
inc
mov
cmps
xor
xchg
dec
test
push
adc
or
mov
inc
xor
push
xchg
test
xchg
out
(bad)
mov
push
test
fidiv
xchg
jne
es
pop
cs
fnstcw
jmp
adc
int
or
leave
ret
lods
repnz
push
mov
sub
and
cmp
adc
xor
lods
push
pop
clc
adc
pop
mov
outs
repnz
mov
pop
add
add
sbb
jo
pusha
ret
shr
iret
push
mov
outs
inc
out
add
sub
fucom
mov
dec
(bad)
fsubr
daa
test
not
popa
mov
and
repnz
mov
jmp
pop
js
push
bound
mov
dec
push
dec
pusha
iret
outs
push
mov
jg
mov
xor
xchg
dec
adc
ficom
out
mov
ss
int
outs
data16
mov
arpl
jl
test
sbb
inc
mov
xor
ret
pop
std
fisttp
pop
mov
dec
scas
icebp
push
xor
mov
mov
inc
sub
push
mov
loop
dec
adc
mov
pop
loope
xchg
in
neg
daa
sub
and
sub
add
pop
add
pop
and
sbb
fdiv
push
jae
or
sahf
mov
sub
or
cmp
mov
adc
popf
inc
lods
add
(bad)
push
leave
xchg
test
loopne
push
sbb
sub
imul
and
pop
xchg
xor
push
sub
daa
and
iret
and
mov
out
ins
push
mov
mov
mov
push
push
sub
adc
and
cwde
in
cmp
test
ret
out
add
push
leave
cmp
or
ja
push
sub
dec
adc
mov
into
add
cmp
pop
or
mov
dec
cmp
adc
in
rcr
sub
push
sub
ror
mov
inc
dec
es
dec
les
cmp
stos
mov
sbb
pusha
retf
enter
mov
push
dec
adc
jb
push
stc
stos
mov
add
add
es
and
call
or
push
ds
and
add
push
clc
ins
sbb
push
mov
cmps
inc
arpl
pop
push
into
ret
add
and
add
pusha
sbb
out
rcl
shl
ss
inc
test
pop
lea
mov
sub
retf
inc
not
lock
adc
inc
add
mov
add
mov
ror
or
mov
add
sub
jp
inc
jp
cmp
sub
or
xchg
nop
jno
or
sub
cs
fstp
cmc
sub
mov
rcl
jmp
je
dec
iret
add
add
iret
xor
cmp
mov
mov
loopne
push
test
add
inc
mov
gs
sbb
sar
aas
push
movs
imul
(bad)
scas
aam
cmp
inc
call
call
and
into
mov
mov
jmp
(bad)
in
loopne
or
jns
in
scas
or
jo
lahf
add
mov
adc
jmp
jmp
rol
cmc
add
mov
sahf
(bad)
imul
fsub
inc
or
jge
rcr
or
push
pusha
pop
xchg
movs
push
sub
inc
sar
xchg
push
sbb
dec
(bad)
aam
dec
inc
cmp
push
inc
(bad)
jmp
fs
mov
pop
stos
dec
and
sub
in
inc
(bad)
xchg
nop
sub
push
fisub
jmp
add
hlt
add
movs
xchg
dec
jmp
inc
fist
or
or
and
nop
dec
adc
adc
sbb
movs
mov
pop
les
loope
rcr
imul
lods
push
pop
dec
inc
add
and
jo
popa
mov
call
add
xchg
jo
sbb
sub
leave
test
pop
ret
pop
dec
cwde
fcom
ja
in
and
or
adc
sbb
mov
xchg
sub
xchg
and
sbb
repnz
add
pop
and
popa
in
in
aaa
add
adc
sub
or
mov
push
stos
dec
rol
pop
(bad)
ret
inc
popf
or
icebp
imul
or
inc
jne
pop
out
push
xlat
cmp
sub
push
jmp
push
jmp
and
sbb
loop
ret
add
icebp
pop
leave
sti
mov
retf
daa
mov
push
dec
neg
bound
jecxz
outs
out
add
and
in
dec
dec
pop
scas
test
inc
and
mov
call
pop
or
ret
inc
cmp
pushf
xor
push
cmp
push
lahf
repz
(bad)
js
sub
es
add
add
les
js
xchg
fnstenv
clc
push
jns
adc
xchg
pop
push
mov
mov
and
bound
and
lahf
test
movs
sub
in
lahf
std
loopne
mov
mov
repz
aaa
mov
lock
push
das
imul
lock
test
sub
jne
es
popa
cdq
sub
mov
test
dec
dec
pop
sub
mov
sbb
test
pop
shl
push
dec
inc
jbe
repnz
imul
xor
pop
sub
jg
retf
or
jecxz
lods
dec
or
ret
mov
les
shr
add
jle
mov
xchg
outs
jo
mov
push
call
mov
sub
push
outs
aam
fsub
sbb
adc
mov
jmp
cmp
mov
jo
ffreep
adc
fsub
xor
xchg
dec
stc
rcl
les
movs
add
int
inc
inc
int3
lods
xchg
push
push
test
pop
inc
adc
(bad)
or
xchg
mov
push
pusha
cmps
mov
lock
popf
adc
pop
mov
xor
adc
pusha
pop
cmp
or
xor
lahf
test
pop
movs
and
dec
push
ins
ins
mov
mov
sbb
clc
add
dec
add
push
movs
xchg
es
(bad)
or
sub
xor
and
out
xor
gs
sub
add
pushf
pop
or
add
enter
int
cmp
(bad)
rol
xchg
and
and
fmul
cwde
popf
mov
jne
mov
jge
push
push
arpl
shr
fdiv
add
or
and
cmp
push
mov
out
js
xor
(bad)
out
adc
add
sar
add
push
movs
les
xlat
int
xchg
and
jmp
inc
neg
or
aam
push
or
(bad)
mov
dec
lea
pop
push
inc
ds
sub
mov
aad
jl
scas
dec
inc
pop
into
pusha
fcomp
test
push
aam
mov
inc
and
xor
push
mov
or
jne
iret
out
and
mov
jl
int3
mov
fwait
shl
jmp
sbb
aad
pop
add
adc
ins
fs
call
pop
retf
sbb
jne
imul
add
sub
sub
shl
mov
cmp
rcl
pop
sbb
add
or
shr
(bad)
and
and
(bad)
cmp
jle
sbb
xor
adc
adc
rol
pop
jnp
push
das
jne
push
cmp
fwait
jo
push
inc
pop
sub
add
inc
ja
call
jno
out
jae
ret
jo
pop
jne
jmp
pusha
pop
add
push
lahf
lock
sbb
je
cmp
jmp
cmp
mov
(bad)
daa
inc
mov
rep
loope
add
ja
jmp
add
sub
es
add
add
ror
add
pop
fisttp
neg
xor
add
bound
add
rcl
push
or
sbb
ror
jae
sbb
scas
popa
sbb
mov
pusha
das
ror
mov
add
sub
add
and
and
mov
data16
stos
adc
fwait
or
xchg
push
mov
sub
shl
add
mov
stos
adc
mov
outs
sub
je
pop
adc
push
pop
jp
xchg
inc
movs
cmp
je
adc
push
(bad)
dec
inc
shr
imul
ss
pop
push
repz
stos
mov
mov
mov
mov
int3
loope
retf
loope
push
or
or
xchg
test
nop
adc
inc
xor
pop
mov
jmp
or
inc
adc
in
mov
lea
shl
fnstenv
cdq
lea
retf
lea
idiv
pusha
mov
inc
outs
inc
rcl
sbb
nop
inc
or
cmp
push
adc
mov
dec
jmp
xchg
inc
(bad)
repnz
inc
sbb
inc
jae
fisub
bound
je
pop
fadd
fimul
or
rcl
adc
int3
mov
(bad)
retf
mov
push
jp
xor
mov
adc
or
inc
xor
push
dec
fwait
sti
fsubr
sbb
ja
hlt
jno
loopne
or
test
loopne
inc
aam
dec
mov
mov
or
movs
xor
ret
pop
xchg
test
inc
in
pop
movs
inc
push
arpl
and
cli
lock
or
inc
push
xchg
jle
mov
shl
pop
sbb
pop
shl
add
add
stc
mov
gs
sbb
in
adc
add
adc
pop
mov
xchg
in
arpl
fwait
pop
scas
outs
or
or
adc
dec
mov
push
pop
add
xchg
and
add
xor
(bad)
adc
fcos
ss
mov
imul
out
adc
movs
xchg
adc
or
mov
push
lock
dec
scas
or
inc
jno
mov
mov
(bad)
sbb
cmp
xor
mov
mov
jo
or
retf
inc
jl
pop
xor
or
cmp
inc
sub
or
add
idiv
or
mov
into
sar
shl
cmp
mov
jns
sbb
and
jge
rep
pop
mov
add
jns
dec
dec
adc
adc
fld
arpl
cmp
outs
dec
outs
add
cmp
dec
test
mov
dec
and
inc
cmp
leave
dec
push
retf
clc
push
pop
add
das
sbb
or
shl
ins
sbb
jge
nop
jno
dec
sbb
pusha
pop
pop
xchg
fidiv
cmp
adc
mov
retf
sbb
inc
sbb
popf
test
adc
and
xor
inc
sbb
xchg
adc
repnz
repz
lds
inc
int3
mov
pop
cs
retf
jl
test
mov
mov
movs
test
mov
retf
in
mov
mov
pop
cs
mov
rcl
or
push
mov
cs
sub
pop
sub
in
push
and
sahf
mov
add
in
pop
sub
hlt
adc
mov
sub
sbb
fldcw
add
retf
push
scas
cmp
adc
mov
cmp
stos
xor
pusha
mov
in
jns
or
sbb
inc
pop
shl
jno
mov
sbb
pop
pusha
mov
in
push
sub
add
inc
xor
mov
mov
or
cmp
cmp
in
mov
pop
ss
rcl
ds
push
imul
dec
add
out
sbb
jns
mov
and
dec
and
push
test
add
pop
mov
dec
dec
stos
or
add
xchg
inc
sahf
pop
jb
sti
or
add
mov
xor
lds
out
retf
and
cmp
nop
and
stc
sub
mov
mov
xchg
add
into
xchg
je
test
add
retf
popf
mov
or
sbb
add
inc
xchg
add
inc
pop
push
lea
rcr
mov
pop
push
mov
inc
push
adc
adc
xchg
cmp
imul
mov
xor
xchg
jo
imul
sbb
inc
ds
mov
sbb
mov
sti
or
push
cmps
cwde
xchg
jne
mov
cmp
jbe
or
ret
push
call
ins
sbb
fnsave
mov
sub
push
fisubr
test
mov
mov
lods
inc
(bad)
add
and
scas
scas
data16
dec
pop
and
push
dec
add
test
dec
add
enter
sub
push
add
test
cmp
pop
inc
cmp
sbb
or
and
inc
stos
mov
clc
sar
cmps
test
or
jmp
mov
dec
movs
inc
cmps
jbe
sahf
jbe
mov
pusha
or
aas
dec
or
sbb
mov
sub
sbb
ror
dec
mov
xor
add
inc
stos
js
cmp
jge
dec
jo
sar
lds
(bad)
ficom
xor
clc
push
cmp
inc
std
add
es
aad
cmp
jmp
test
adc
mov
out
push
imul
mov
or
jle
std
rol
lea
fnstsw
jmp
imul
ror
sbb
fld
adc
les
add
shl
push
mov
xor
and
cmp
jns
dec
inc
loopne
add
adc
jb
and
add
mov
iret
retf
scas
dec
cmp
bound
dec
push
(bad)
cmp
inc
push
push
mov
dec
xchg
nop
nop
retf
dec
inc
mov
mov
pop
inc
cmp
adc
fucomip
call
mov
adc
and
cmp
loope
cdq
mov
or
rcl
nop
nop
popf
lea
xor
enter
cmp
test
or
mov
jle
push
jmp
sbb
or
xor
mov
adc
xor
mov
xchg
add
or
adc
jnp
cmp
in
scas
ins
inc
adc
(bad)
(bad)
cld
or
ins
xchg
and
sbb
cmp
cmp
xchg
xchg
dec
and
int3
clc
push
jb
xor
pop
adc
mov
pop
sahf
je
or
jns
jmp
rcl
push
add
(bad)
out
int3
add
and
mov
popf
xchg
rcl
js
movs
lea
push
ja
rcr
retf
rcl
shl
inc
in
icebp
lea
in
sub
ror
aaa
ss
lock
or
sub
pushf
dec
jmp
inc
mov
fst
call
adc
clc
imul
mov
and
movs
jmp
push
adc
ss
mov
adc
icebp
ret
sub
add
and
push
add
adc
cmp
pop
cdq
test
bswap
ds
cs
aam
loopne
pop
movs
or
int
jle
fdivr
sbb
mov
or
fadd
dec
shl
inc
inc
jae
pop
int
mov
js
xchg
sub
or
fs
(bad)
cs
dec
pusha
xor
retf
inc
mov
xor
sar
bound
mov
dec
add
sub
loope
nop
cmp
clc
ret
dec
sbb
test
jne
xchg
push
xchg
js
hlt
jg
adc
add
mov
inc
add
xor
jae
cs
test
js
retf
scas
enter
(bad)
fst
xchg
dec
jnp
mov
inc
or
int3
nop
aam
ds
or
enter
xor
icebp
(bad)
xchg
sub
sbb
inc
popa
xor
or
dec
jne
pop
xchg
push
and
xchg
mov
xchg
(bad)
pop
cmp
add
jnp
repz
jmp
add
test
jb
and
mov
mov
movs
mov
jg
ins
mov
repz
lds
push
inc
cwde
xor
add
dec
lahf
jmp
clc
movs
ficom
push
xor
pop
mov
mov
mov
js
jle
ss
fs
pop
inc
cmp
and
xchg
push
(bad)
das
mov
inc
pop
add
sbb
pusha
dec
xchg
loopne
mov
pop
push
mov
mov
pop
test
push
ror
pop
adc
xchg
add
cld
add
xchg
inc
loop
lea
dec
sub
xchg
jmp
inc
dec
or
xor
movs
jnp
rcr
mov
cmps
(bad)
pushf
pop
ret
inc
jne
adc
or
or
or
xchg
add
xchg
pop
pop
push
fcom
add
or
into
cmp
loope
xlat
add
sub
push
mov
xor
arpl
movs
rol
cmp
add
imul
test
and
js
add
xchg
pushf
enter
rcl
pop
stos
mov
sbb
retf
add
or
popf
pop
shl
adc
out
push
sti
mov
pop
movs
cmp
mov
adc
sub
mov
mov
push
push
push
or
pop
movs
test
clc
pop
mov
movs
mov
sub
add
dec
cmp
push
xor
mov
cmps
clc
hlt
pop
cmc
sub
adc
or
add
pop
pop
test
pushf
mov
and
or
movs
dec
mov
mov
cmps
nop
sub
add
lahf
mov
js
sub
clc
add
cs
add
lods
sti
fwait
add
push
in
iret
and
repnz
mov
jle
jle
and
mov
xchg
xchg
mov
sbb
loopne
push
mov
cli
jl
aas
int3
dec
dec
sub
jge
xor
mov
mov
imul
push
adc
mov
pop
add
jo
xchg
outs
or
dec
cmc
mov
fldenv
pop
imul
xor
adc
or
enter
sub
add
mov
nop
add
add
push
push
mov
dec
popf
loopne
adc
and
push
sbb
inc
add
inc
fisttp
sub
and
add
repz
mov
je
xor
pop
adc
adc
ud0
movups
adc
test
outs
clc
push
sub
sti
jne
sbb
adc
outs
scas
sub
imul
jmp
mov
adc
xchg
imul
xor
pop
enter
dec
adc
pop
push
cmp
test
int3
adc
sbb
cmp
dec
push
xor
jno
(bad)
mov
mov
jge
cmp
add
cmp
nop
jp
mov
inc
out
aam
jmp
xchg
jnp
add
into
dec
out
mov
mov
add
js
mov
cmp
cwde
or
jl
rol
and
xchg
xor
jb
das
cmp
sahf
sahf
sahf
sbb
iret
sub
iret
rcr
pop
popf
mov
push
add
cmp
lods
jne
dec
loope
mov
pop
ret
sbb
jg
sbb
mov
out
sub
add
imul
shl
adc
fmul
dec
ror
add
pop
mov
add
mov
jecxz
and
loopne
rol
push
add
push
repz
add
mov
xchg
push
je
push
push
enter
inc
add
sbb
pop
xchg
adc
cmps
ja
xor
inc
mov
inc
inc
or
popf
adc
les
loop
scas
or
mov
pop
mov
or
and
daa
push
adc
push
(bad)
push
add
inc
test
xchg
mov
cmp
push
sbb
sbb
jp
out
mov
xchg
in
stos
inc
jo
lds
adc
retf
mov
nop
repnz
mov
cwde
add
popa
andps
pusha
add
imul
jnp
cmp
dec
mov
adc
sub
pop
add
jg
sbb
and
shl
mov
aam
pop
adc
adc
or
and
jp
mov
adc
dec
es
inc
jb
cmp
inc
fld
push
movs
nop
ret
imul
pusha
test
cli
fld
ror
add
and
sub
add
stos
ja
cmp
mov
push
call
test
sub
fdiv
imul
aaa
aaa
cld
je
in
jno
stos
sbb
or
lods
pop
xchg
jl
mov
shl
jecxz
xchg
or
sub
mov
outs
out
popa
arpl
add
jp
movs
ror
cmp
pop
adc
adc
inc
fidivr
inc
inc
ins
ins
stos
es
mov
or
scas
test
test
adc
or
pop
loop
adc
xor
cmp
cmc
dec
and
test
enter
inc
ins
je
sbb
test
(bad)
xor
jl
inc
jmp
xor
push
or
out
cmc
cdq
outs
cli
mov
cmp
out
push
mov
pop
dec
ss
or
jne
lahf
mov
ret
scas
adc
adc
jp
mov
imul
xor
dec
popa
jo
push
call
push
sub
jle
mov
mov
adc
pop
daa
push
movups
inc
ins
popa
mov
lods
push
jns
push
jne
mov
or
push
mov
test
push
jle
outs
push
out
cmps
inc
or
pop
push
stos
xor
and
and
inc
push
call
aas
ins
cwde
xor
inc
xchg
cmp
bound
mov
or
push
je
sbb
loope
repz
add
add
pop
repz
(bad)
aas
xor
imul
mov
mov
jne
mov
aam
push
cmp
shl
mov
add
imul
lgdtd
push
iret
mov
sar
dec
pop
pop
ins
enter
xchg
add
sub
fmul
mov
cmp
dec
les
pop
clc
jae
test
and
mov
test
jmp
aaa
xlat
clc
cmp
push
xchg
xchg
hlt
and
lock
push
pop
pop
lock
add
cmp
push
pop
lea
jge
mov
int3
add
stos
in
clc
(bad)
mov
daa
mov
push
sub
or
inc
add
inc
and
or
icebp
mov
mov
jbe
(bad)
shl
loope
rol
xchg
in
ret
add
rol
pop
inc
outs
add
inc
out
mov
add
cmp
xchg
add
jge
jle
inc
add
or
jmp
cmp
and
fwait
sbb
dec
jmp
sbb
dec
clc
out
cmp
mov
jo
ja
push
dec
mov
(bad)
pop
sbb
lods
mov
mov
lock
add
inc
xor
ret
adc
xchg
xchg
imul
inc
iretw
xchg
xchg
pop
(bad)
jne
xor
push
std
ffreep
add
jnp
syscall
adc
xchg
xchg
push
(bad)
push
js
mov
or
out
adc
movs
jns
sub
push
lock
dec
xchg
jle
rol
push
mov
sub
popa
pop
mov
push
dec
fs
add
lods
(bad)
mov
xlat
test
pop
daa
sar
je
push
add
(bad)
jmp
cwde
sub
push
add
call
xor
add
es
and
sub
add
outs
mov
add
push
and
in
mov
imul
dec
and
mov
mov
and
sbb
mov
in
sub
sbb
xor
jge
inc
test
fwait
xchg
push
xchg
push
repz
popa
xor
lods
dec
rol
and
es
stos
adc
cmp
outs
push
inc
dec
adc
leave
arpl
stc
or
add
xchg
pushf
loopne
and
xor
fistp
aaa
bound
retf
js
pusha
in
clc
jmp
mov
inc
pop
fnstcw
adc
mov
add
fstp
inc
or
in
sbb
sub
pop
leave
add
jne
add
daa
and
sahf
push
sbb
pusha
fcomip
pop
cmp
push
sbb
mov
add
loopne
xor
repz
mov
sub
ds
rol
js
repnz
add
fsubr
push
arpl
(bad)
jg
sbb
jle
lea
xor
add
jg
je
adc
and
ror
enter
mov
push
adc
or
and
sub
push
pop
or
mov
pop
lahf
pop
sub
push
push
cmp
or
pushf
fadd
inc
loope
pop
mov
or
and
push
es
add
imul
xor
xchg
inc
sahf
das
pop
jne
loope
sti
push
add
or
je
out
and
jl
push
mov
lds
mov
movs
dec
dec
bound
imul
(bad)
fyl2xp1
sub
dec
push
idiv
xor
xchg
jle
fdiv
mov
mov
mov
mov
sub
dec
imul
mov
pop
sti
inc
mov
jne
pop
push
mov
bound
cs
shr
or
sub
mov
xor
xor
or
and
xor
(bad)
lock
sub
enter
cmps
lods
push
dec
scas
gs
inc
inc
add
mov
add
or
adc
sub
lea
fist
push
sub
dec
or
inc
xor
test
cmp
push
sahf
jno
mov
pop
icebp
mov
sub
inc
add
and
xchg
xchg
cs
dec
cmp
(bad)
lods
(bad)
les
outs
cmp
or
aam
xor
adc
push
jmp
mov
pop
in
inc
js
or
in
add
int
addr16
dec
xchg
mov
sbb
add
fadd
test
jmp
sbb
sbb
xor
scas
or
push
lahf
add
jl
dec
dec
adc
adc
push
pushf
mov
jns
(bad)
es
loop
xchg
pushf
sbb
cwde
add
mov
mov
test
and
sub
sahf
pop
jbe
pop
sbb
inc
inc
sbb
lods
mov
cmp
fld
xchg
loopne
pop
dec
(bad)
mov
jbe
sub
(bad)
sub
mov
popf
adc
push
mov
fdiv
addr16
rcr
rol
rcl
movs
mov
daa
cli
not
pop
sbb
mov
add
test
popa
sbb
xor
sub
add
ja
or
das
or
or
sbb
je
gs
cmp
adc
loopne
adc
pop
iret
pop
dec
dec
inc
int3
jb
test
sbb
mov
adc
xchg
dec
loop
aas
jbe
(bad)
jge
jbe
je
pushf
movs
pop
mov
ret
mov
add
mov
dec
push
and
fild
(bad)
idiv
nop
add
leave
ror
sbb
aas
push
ins
add
jmp
push
mov
add
cmps
sbb
xor
push
sub
jle
jg
sub
dec
jl
movs
jmp
mov
inc
cli
inc
inc
cmp
push
and
popa
push
jb
xchg
fsub
push
bound
push
pushf
or
jmp
out
fsub
fwait
cwde
jp
fdiv
enter
and
add
inc
call
sbb
lea
dec
jbe
inc
stos
sub
push
push
adc
xchg
nop
or
push
aad
lock
sub
popa
or
jne
in
pop
mov
sub
pop
clc
std
outs
outs
mov
jne
(bad)
adc
cmp
cmp
je
add
loop
adc
cmp
and
aam
sti
call
xor
ret
jmp
adc
mov
addr16
scas
add
in
and
mov
or
and
adc
into
xchg
loop
pop
mov
fidiv
daa
dec
call
mov
inc
push
scas
jae
adc
xor
xchg
push
mov
xchg
add
inc
lods
or
adc
xlat
jecxz
shl
call
pop
sbb
sbb
add
and
jae
sbb
jbe
push
enter
and
cmp
or
inc
sub
ret
adc
inc
add
adc
sub
fnstenv
and
xchg
jge
or
imul
data16
inc
sbb
xchg
adc
jge
dec
jns
sbb
pop
jno
pop
loop
pavgb
ror
jae
fnop
rol
nop
and
js
adc
cmp
push
xchg
cwde
xor
dec
xor
js
jl
movs
inc
test
xchg
retf
cmp
mov
cmp
cmp
push
and
inc
pop
loopne
enter
add
jo
loopne
ja
adc
add
jmp
pop
dec
jecxz
or
mov
push
adc
dec
ja
pop
jnp
out
movs
les
inc
call
xor
add
je
call
lods
or
sti
aad
mov
outs
xchg
and
fs
sti
hlt
and
push
sub
cmp
cmc
sub
cmp
shl
popa
or
mov
or
das
inc
add
add
pop
jle
or
add
jmp
and
xchg
dec
movs
pop
ror
fst
xor
bound
xor
and
inc
dec
mov
mov
dec
or
mov
add
add
test
aam
dec
ror
cmp
pop
dec
adc
add
push
not
ins
sub
xor
push
mov
add
xchg
adc
cmp
push
or
movs
hlt
mov
jns
lahf
or
inc
pop
xor
inc
rcl
nop
shl
cmps
sbb
mov
xchg
xchg
sub
call
sbb
iret
push
xor
xchg
inc
xor
push
cmp
adc
add
push
and
push
or
cmp
(bad)
fadd
dec
add
pusha
jmp
dec
std
iret
mov
cmp
dec
and
adc
sub
push
pusha
or
mov
imul
add
sbb
inc
or
ds
xchg
jo
leave
pop
cmp
(bad)
movs
xor
dec
test
pop
jo
xor
inc
and
(bad)
and
sub
ins
js
add
add
inc
sub
xor
mov
fs
mov
fbstp
push
add
add
rcr
add
xor
es
push
adc
shr
hlt
es
cli
stos
es
movs
jne
loope
shr
adc
pop
pushf
xchg
adc
pushf
mov
sub
and
out
and
and
gs
and
sub
dec
nop
ins
pusha
aam
popf
lods
jmp
add
mov
lods
and
dec
(bad)
jge
sbb
ins
push
hlt
pop
mov
add
xchg
xor
dec
in
les
rol
sbb
(bad)
xlat
dec
inc
jne
mov
mov
pop
cmc
mov
repnz
push
xchg
push
mov
clc
add
call
lahf
push
jg
mov
jle
xor
aad
mov
and
push
pop
sub
cmp
adc
in
push
sbb
mov
lds
xchg
fidiv
dec
and
push
dec
xchg
sbb
inc
adc
rol
cmps
shr
xor
sub
movs
pusha
call
mov
lea
mov
jle
imul
es
cld
dec
jnp
lock
mov
sar
add
aad
sbb
pop
cmp
retf
dec
fbld
sbb
xor
clc
add
(bad)
les
or
pop
mov
mov
sub
dec
call
cwde
(bad)
cdq
pop
not
shl
adc
dec
push
test
pop
mov
add
pushf
inc
add
add
inc
test
lods
aad
adc
xlat
dec
mov
push
sti
xchg
stc
cli
or
pop
or
and
dec
push
in
ret
inc
mov
dec
pushf
inc
and
jecxz
xchg
jl
cmp
add
and
push
add
or
add
adc
(bad)
cli
mov
or
hlt
jne
xchg
jmp
cmps
adc
sub
pop
cwde
add
dec
fnstsw
adc
or
add
js
dec
mov
sub
rcr
sub
lahf
ret
ds
mov
cmp
mov
pop
inc
add
cmp
jge
std
add
cmp
movs
add
nop
sbb
push
add
jp
loop
xchg
movs
and
cmp
pushf
sbb
pop
fsub
pop
test
or
dec
push
(bad)
or
push
mov
mov
aad
add
jl
or
cwde
push
or
push
jge
clc
movs
scas
mov
lock
les
add
xchg
lods
sti
xchg
dec
cs
pop
neg
adc
scas
icebp
(bad)
sahf
cmps
push
rcr
cwde
inc
pop
cwde
es
out
adc
sbb
pushf
(bad)
rol
(bad)
fistp
imul
adc
sbb
or
aaa
and
push
or
pop
or
in
sub
push
and
dec
push
add
push
out
inc
or
cmps
add
imul
push
mov
repnz
or
add
jmp
adc
(bad)
fdiv
je
loopne
imul
cmps
add
imul
idiv
lock
and
sub
mov
enter
push
cld
test
lock
and
inc
xor
sub
cwde
ror
pop
jmp
in
push
ins
call
mov
sbb
adc
jns
mov
cwde
sbb
xchg
push
add
adc
xor
scas
retf
pusha
or
adc
or
mov
rcl
dec
mov
adc
mov
out
int3
movs
push
add
push
jae
pop
imul
add
pusha
mov
inc
jmp
bound
inc
and
dec
mov
jb
lods
cmp
add
add
jge
push
push
gs
push
push
stos
xchg
adc
push
push
movs
or
call
push
inc
jo
and
sub
sub
lahf
adc
test
push
inc
sbb
pop
jns
adc
sbb
pushf
xchg
and
jecxz
and
and
add
cdq
inc
hlt
and
pop
(bad)
hlt
push
dec
dec
mov
mov
daa
cmps
pop
push
stos
(bad)
imul
inc
pop
jnp
xchg
test
xor
jne
cmp
je
bound
je
pop
imul
test
ins
pop
adc
push
sub
sbb
leave
les
int3
cmp
pop
lea
sahf
je
dec
and
sub
fild
retf
sub
and
cmp
mov
jb
test
je
jne
test
gs
and
mov
cmps
push
test
adc
mov
jmp
or
adc
jp
(bad)
mov
ret
and
mov
adc
iret
in
pop
sbb
or
jno
test
dec
inc
out
gs
jo
push
push
mov
and
inc
jp
sbb
cmp
push
test
mul
test
push
push
push
scas
sub
cld
jne
out
push
(bad)
jge
lea
ins
xor
mov
ja
xlat
and
add
ret
and
mov
dec
sbb
xchg
xchg
fldcw
or
fcomp
and
adc
mov
lahf
mov
js
jge
sbb
bound
add
aad
xchg
or
lss
mov
es
es
push
test
or
rol
dec
adc
xor
loopne
sbb
dec
lods
test
xor
or
sub
aam
fdiv
lds
mov
aaa
and
jae
fiadd
popf
mov
mov
fwait
adc
add
test
ret
outs
push
loope
and
ins
shl
rcl
inc
push
shl
mov
lea
loopne
lahf
scas
in
mov
adc
ror
push
pop
loopne
adc
test
(bad)
cmp
xor
mov
adc
ja
sbb
in
es
sbb
and
jle
jnp
or
in
sbb
xchg
cdq
(bad)
jne
ror
xor
in
and
and
pop
fadd
retf
icebp
aaa
add
mov
add
mov
test
push
xor
cmp
and
jecxz
loope
and
dec
push
inc
push
dec
push
fistp
xchg
dec
cdq
inc
push
xchg
adc
mov
push
jne
daa
fidiv
cmp
cmp
push
movs
jl
(bad)
push
add
ret
rol
mov
rol
or
mov
scas
shr
fs
call
movs
sbb
pop
xor
arpl
mov
mov
push
jnp
ins
cmp
mov
xchg
sbb
sub
repz
gs
push
shr
sub
sub
movs
mov
dec
(bad)
xor
daa
pop
jnp
imul
pop
push
inc
pop
(bad)
push
das
push
xlat
xchg
dec
cmp
add
in
or
loopne
lods
xor
(bad)
fcomp
add
jb
push
push
sub
pop
add
mov
call
hlt
mov
lahf
sub
and
mov
adc
vmread
adc
sbb
popa
stos
jle
jnp
adc
adc
loop
inc
cli
xor
mov
add
xchg
push
arpl
ret
popa
sysret
dec
xchg
shr
les
pop
addr16
inc
cld
push
ret
fcomp
fimul
sbb
mov
jno
rol
inc
sub
in
and
hlt
(bad)
clc
adc
popa
lea
mov
jmp
push
add
ja
sub
mov
xor
xor
mov
movs
movs
je
inc
ss
sub
sub
adc
aad
cli
sub
mov
clc
cld
mov
push
clc
mov
xor
mov
pop
mov
push
push
cli
push
ret
xchg
push
nop
imul
dec
sub
ror
ins
or
in
push
hlt
mov
xchg
hlt
popa
or
inc
in
pop
out
pop
scas
rcr
xor
mov
loopne
int
or
rol
mov
sub
pushf
and
push
rcl
pop
ja
(bad)
push
ds
dec
outs
adc
mov
or
push
arpl
outs
inc
adc
sbb
push
imul
dec
sbb
add
std
or
inc
and
sbb
jno
or
into
inc
ja
pop
test
adc
sbb
sub
pop
ja
imul
(bad)
ins
rcr
aad
adc
loopne
push
and
sub
lods
pop
nop
cs
adc
pop
sub
mov
mov
dec
cmc
mov
cmp
sbb
push
lods
add
(bad)
sub
ret
or
push
ficom
gs
outs
adc
gs
mov
retf
loope
test
sub
dec
push
push
in
mov
enter
fild
cmp
fsub
adc
aam
cmp
mov
aas
jmp
and
cs
cli
jmp
movs
mov
sub
in
mov
or
lods
xchg
inc
xchg
or
loopne
outs
pushf
not
je
and
jae
iret
mov
outs
mov
cs
cdq
adc
sub
add
call
add
dec
test
imul
sub
or
not
ret
push
aam
fwait
and
cs
add
push
mov
test
movs
xchg
in
or
aam
add
mov
jmp
inc
int
inc
movs
fiadd
(bad)
pop
add
push
int
cmp
xchg
hlt
push
inc
push
pop
sub
add
mov
inc
lock
xor
and
fadd
fucomip
dec
or
ret
add
div
cmp
and
or
push
frstor
aam
inc
add
mov
call
sbb
repnz
add
imul
mov
add
loopne
or
fdivr
addr16
bound
jg
push
adc
ins
jo
push
fsubr
sub
add
cli
pop
in
jmp
pop
push
adc
neg
cmp
push
popa
inc
sahf
mov
pop
xchg
and
push
mov
stos
test
pop
cwde
jo
test
ja
sbb
fcomp
ss
mov
sub
push
js
cmp
mov
xchg
adc
leave
loope
push
add
test
mov
fs
cmps
or
nop
jnp
or
mov
scas
sbb
popa
jnp
nop
ja
add
call
cdq
ret
jmp
pop
sbb
mov
imul
xor
pop
sbb
cmp
push
int3
mov
adc
leave
sub
pop
rcl
cmp
mov
mov
leave
test
mov
mov
cmp
sbb
pop
ret
dec
lock
nop
push
call
jmp
mov
je
mov
aaa
call
cmp
mov
ret
add
jmp
and
jmp
xor
ins
or
outs
xor
sub
xchg
dec
and
test
add
inc
inc
or
clc
imul
or
xor
aam
pop
sub
push
dec
rcl
pop
rcl
or
cmp
fisubr
cs
sub
xchg
mov
loop
inc
sub
and
outs
push
mov
push
xchg
cmp
mov
dec
(bad)
push
js
mov
ret
sar
rol
shl
mov
imul
adc
mov
add
popa
xor
int3
retf
cmps
inc
sbb
mov
push
test
popf
loopne
adc
mov
inc
int
xchg
fwait
icebp
sub
out
cli
xor
jle
push
ins
cld
cmp
mov
push
scas
sbb
mov
or
daa
repz
sahf
push
add
fs
add
mov
push
popf
pop
adc
mov
es
pop
add
push
and
push
iret
ja
or
pop
sub
test
cmp
inc
xor
dec
mov
pop
bound
clc
cmp
adc
cmp
dec
sub
mov
adc
mov
or
sbb
daa
ret
push
cwde
push
lahf
lods
pusha
cmc
push
mov
cmp
call
xchg
aad
jnp
in
int
push
aad
add
mov
push
shl
xchg
sub
jno
xor
sbb
shl
jp
push
shl
bound
rol
or
sbb
retf
and
icebp
or
add
push
sti
in
add
pop
retf
pop
or
cmp
adc
pusha
lods
jmp
add
mov
mov
rcl
sbb
push
int
xor
ror
gs
test
(bad)
and
sub
jmp
xlat
(bad)
leave
lock
clc
cmp
pop
add
or
sbb
or
cmps
pushf
push
sub
jecxz
mov
jb
rcl
icebp
sub
push
pop
mov
popa
sbb
jg
inc
cli
pop
or
inc
cmp
jl
dec
mov
bound
push
push
dec
xor
xchg
or
mov
cwde
outs
cmp
xor
add
pusha
test
dec
xor
cwde
and
xchg
lock
sti
cmp
adc
add
sub
or
or
gs
xchg
retf
fild
xor
sub
pop
jmp
dec
jl
adc
jmp
pop
cmc
sub
in
cld
or
cmp
jecxz
jg
and
dec
jns
adc
or
inc
push
or
and
sub
pop
cmp
ins
jl
or
mov
sbb
add
adc
lea
pusha
mov
mov
popa
popf
and
sub
sbb
xor
push
jp
adc
jecxz
inc
adc
jb
cmp
inc
push
add
test
inc
test
outs
adc
in
xor
sbb
mov
jbe
pop
jno
xchg
pop
xchg
xchg
jp
jmp
adc
add
dec
retf
imul
leave
leave
adc
test
pop
mov
shl
icebp
pop
(bad)
or
enter
or
mov
(bad)
hlt
dec
sub
out
xchg
mov
xor
call
mov
dec
(bad)
mov
fwait
sti
xor
sbb
and
mov
clc
push
sub
mov
out
xor
cmp
cmp
push
imul
adc
xchg
in
push
cmp
adc
xor
ins
std
xchg
or
inc
xchg
xchg
fist
sub
adc
sbb
fild
fs
or
add
adc
add
ret
and
cmp
push
(bad)
add
or
arpl
cli
add
scas
jp
es
mov
xchg
nop
cmp
inc
jno
mov
lsl
jg
inc
push
and
and
add
shr
sar
push
test
sbb
retf
cmps
push
nop
data16
add
push
sbb
inc
xchg
mov
ror
mov
mov
jg
jo
add
inc
lods
sbb
retf
jle
movs
ds
cmp
xchg
data16
hlt
es
mov
jecxz
mov
jo
mov
nop
ss
setbe
cmp
xchg
mov
mov
push
mov
xchg
lds
jle
inc
and
push
stos
inc
push
push
pusha
push
retf
or
or
pop
ror
mov
push
push
imul
fist
daa
lock
sbb
adc
xchg
lods
push
jbe
xor
aaa
(bad)
nop
jmp
je
dec
out
dec
not
and
adc
movs
sbb
je
inc
and
popa
or
jl
jno
movs
rcl
cmps
pop
xor
arpl
fs
cmps
jmp
or
pop
call
call
sbb
cmp
in
enter
dec
jnp
ret
dec
mov
je
sub
inc
mov
sar
fcmovbe
adc
mov
jl
mov
cwde
imul
imul
inc
nop
aas
push
sbb
rcl
ret
mov
cli
mov
add
add
adc
jge
movs
mov
rcl
xor
add
jb
hlt
add
xchg
movs
cmps
or
dec
xchg
shr
jne
sub
outs
adc
and
and
jo
add
mov
pop
(bad)
dec
xchg
mov
lock
xor
sub
in
test
sub
lods
mov
and
add
shl
push
sbb
jne
add
sub
leave
sub
rcl
mov
out
(bad)
fdiv
jmp
add
mov
dec
xor
or
adc
cmp
and
sub
pop
push
mov
pop
cmps
nop
adc
inc
and
ins
jnp
mov
sbb
sub
sbb
xor
or
inc
or
les
push
sbb
xchg
jmp
adc
pop
and
clc
sbb
xor
or
cwde
ins
cmc
ret
sbb
loopne
enter
js
jl
popa
jns
cld
jl
dec
(bad)
sbb
mov
inc
mov
inc
je
retf
add
add
fistp
push
lods
inc
(bad)
fistp
jl
arpl
pusha
gs
sahf
mov
push
xchg
dec
xor
xchg
push
call
and
mov
inc
xchg
mov
pop
inc
add
mov
cmp
rol
inc
and
push
ror
std
lods
movs
test
mov
dec
dec
daa
or
pop
push
loopne
test
mov
cli
mov
fidiv
dec
sub
adc
pop
movs
aas
dec
dec
arpl
pop
add
call
ins
fstp
and
enter
xchg
pop
repnz
adc
stos
ins
cmps
sub
fadd
jb
pusha
or
push
aam
sub
or
add
push
inc
adc
outs
dec
add
stos
jnp
gs
hlt
hlt
hlt
lea
and
sub
mov
xchg
push
mov
cmps
ds
pop
adc
jo
pop
movs
mov
lods
shr
inc
cs
adc
aad
mov
or
cld
sub
cmp
jp
push
dec
jg
mov
jle
dec
mov
mov
or
adc
adc
mov
adc
sti
frstor
pop
in
push
rcl
aad
or
cli
jg
add
or
pop
push
push
nop
xchg
bound
pop
push
and
std
xchg
das
jbe
dec
adc
retf
push
ret
adc
xchg
or
popa
bound
pop
dec
lods
dec
test
shl
or
sub
jmp
adc
aam
add
inc
imul
and
and
daa
cmps
outs
mov
enter
xor
and
stc
push
retf
fdiv
pop
jo
shl
shl
and
(bad)
lds
pop
and
popa
cwde
mov
sti
inc
add
test
leave
adc
rcl
add
fmul
and
test
pop
and
test
xor
mov
push
ror
dec
dec
cli
or
mov
inc
jne
add
adc
test
xchg
and
popa
inc
test
dec
xor
aam
test
mov
jb
push
fmul
mov
push
pop
adc
adc
mov
jae
xor
shl
add
push
jnp
add
ror
shr
popf
push
icebp
pop
dec
inc
(bad)
fdiv
imul
or
xor
mov
jmp
dec
add
dec
dec
pop
and
(bad)
stc
jns
ret
dec
xchg
sbb
jl
jb
test
pop
mov
push
dec
sub
dec
push
xlat
ret
or
enter
push
(bad)
movs
or
push
scas
mov
adc
mov
shr
sbb
inc
test
pop
adc
push
cmp
pop
or
test
inc
or
sbb
out
mov
mov
fwait
(bad)
push
mov
cmp
xchg
mov
nop
inc
shr
or
add
pop
push
jno
and
clc
bound
mov
mov
clc
jne
iret
shl
xor
icebp
pop
ficom
nop
sbb
lds
pop
sub
jmp
add
out
and
and
or
hlt
test
mov
leave
nop
inc
mov
jbe
rcl
and
add
push
mov
imul
dec
loopne
sbb
or
xchg
or
cdq
inc
or
scas
test
push
rol
inc
add
mov
jmp
fild
sbb
adc
aas
test
add
and
int
pop
sbb
mov
cmc
lock
arpl
and
shl
and
ret
pusha
bound
jne
sub
test
adc
sbb
and
adc
fsub
imul
mov
xchg
nop
and
ficom
mov
dec
lods
dec
les
ret
adc
sub
shl
mov
test
inc
sar
add
outs
or
xchg
fnstcw
bound
test
fcomp
add
imul
sub
or
mov
push
(bad)
mov
mov
adc
xchg
movs
push
retf
cmc
xor
dec
loope
fs
adc
sti
xor
or
xchg
stos
add
mov
mov
inc
rol
and
push
xor
mov
mov
mov
cmp
push
mov
mov
test
xchg
rcr
cmp
(bad)
inc
or
stc
xchg
rcl
push
retf
cmps
arpl
push
mov
or
xor
dec
xbegin
mov
xchg
cmp
int3
popf
adc
push
sbb
xchg
sahf
ds
jns
pop
(bad)
in
mov
pop
push
rol
out
or
repnz
xchg
in
add
and
push
push
add
loope
and
shl
mov
push
scas
mov
dec
daa
dec
clc
add
ficomp
push
and
pop
adc
sub
and
add
lods
scas
or
and
add
or
dec
ss
je
jo
and
sub
adc
pop
mov
in
rol
add
mov
or
imul
add
or
sub
dec
sbb
xlat
inc
je
mov
sbb
mov
push
lahf
xor
push
hlt
adc
das
push
mov
mov
mov
add
test
mov
pop
mov
mov
call
retf
mov
xor
add
sar
inc
and
dec
inc
(bad)
sbb
nop
pop
cdq
ror
push
lea
and
inc
push
imul
int
and
inc
jecxz
jmp
or
dec
loope
pop
pop
leave
add
movs
cmp
adc
les
inc
arpl
and
add
(bad)
rcr
addr16
movs
popa
and
sub
or
fisubr
inc
sbb
and
or
mov
dec
dec
ss
retf
dec
imul
jnp
sub
sbb
cs
imul
xchg
pop
push
sub
sbb
sub
xchg
jo
add
or
mov
fcomp
inc
gs
mov
adc
aaa
xor
inc
lods
lock
add
jns
loope
popa
(bad)
jmp
inc
jno
cli
pop
xor
jnp
pop
cmp
inc
test
adc
xchg
inc
or
sti
enter
aas
dec
rcl
sbb
jl
fst
mov
jl
out
shl
pop
test
mov
add
xchg
cmp
mov
rcl
cld
push
xor
or
popa
add
jmp
and
xchg
push
cs
xchg
pop
push
xor
mov
test
pop
lea
iret
popf
test
xor
fs
pop
movs
and
or
xchg
inc
and
add
movs
mov
test
or
test
loop
mov
inc
(bad)
cmp
jnp
adc
aam
adc
cmp
mov
cwde
test
into
push
mov
sbb
xchg
(bad)
fiadd
push
movs
sbb
retf
imul
les
fsubr
adc
loope
dec
mov
popf
mov
adc
cld
loopne
inc
cdq
cmp
lods
dec
shl
or
sbb
adc
mov
bswap
inc
imul
scas
adc
lds
je
js
mov
cmp
dec
jno
inc
adc
inc
mov
xchg
sub
add
cmp
pop
sbb
dec
pop
jne
mov
cmp
jno
xor
cld
inc
dec
xor
jmp
ror
sub
dec
inc
cwde
dec
test
outs
sub
cmp
dec
mov
jne
aaa
xor
add
scas
hlt
inc
push
xor
cmp
pcmpeqw
adc
add
sbb
push
sub
or
je
xor
or
stc
popa
fild
das
aad
repz
adc
sbb
or
jge
test
(bad)
mov
mov
inc
sbb
icebp
rcl
push
pop
cmps
or
jne
(bad)
je
test
mov
add
test
jmp
and
xor
icebp
das
push
inc
or
adc
mov
mov
hlt
mov
cs
and
lea
mov
dec
and
fsubr
and
out
shl
pop
add
inc
imul
dec
xchg
mov
adc
inc
gs
xchg
fdiv
and
mov
sti
lds
mov
mov
das
mov
jl
mov
imul
push
xchg
sub
sbb
jno
jge
imul
xchg
jo
sub
cmp
pop
inc
mov
aas
push
cmovne
(bad)
add
pop
(bad)
mov
out
(bad)
or
or
push
pusha
adc
and
xor
sub
add
xor
je
cmps
inc
cmp
imul
mov
cdq
pop
adc
add
push
outs
shl
ror
comiss
add
inc
dec
outs
iret
aam
or
out
repnz
and
xchg
xchg
xchg
mov
mov
cmc
cli
mov
aad
shl
test
mov
sbb
gs
sbb
inc
push
mov
js
mov
jmp
push
push
sar
add
jbe
sub
sub
jl
test
std
lea
push
pop
clc
fadd
pop
xor
jno
js
add
add
mov
jge
jo
or
inc
ins
xor
repnz
inc
pop
add
jge
fcomp
pop
dec
push
cmp
cmp
jge
sbb
nop
popf
push
popf
rol
mov
cmps
call
pop
cmp
adc
inc
rol
xor
mov
popa
xchg
test
es
pop
cmps
sbb
sub
mov
mov
cmp
mov
and
rol
jno
jle
ja
add
cdq
nop
jp
loopne
ja
jl
sbb
out
mov
cmp
rol
dec
xor
adc
cli
or
add
aaa
adc
cmp
mov
inc
cmp
(bad)
movs
hlt
jge
mov
sbb
dec
or
inc
sbb
sbb
xor
mov
inc
and
daa
or
addr16
push
xchg
xorps
shl
push
inc
pop
and
nop
enter
ror
mov
inc
add
dec
inc
rol
lods
pop
and
or
mov
enter
popa
call
aam
aam
mov
pushw
js
inc
jle
sbb
mov
and
enter
loope
shl
mov
movs
cmp
bswap
ret
cmps
mov
add
xor
jge
jmp
maxps
iret
rol
retf
add
inc
retf
fadd
sbb
rol
inc
or
dec
gs
movs
clc
inc
(bad)
and
jl
mov
dec
mov
or
retf
test
in
in
aaa
shl
loope
test
adc
xor
jmp
mov
xor
xchg
sahf
jno
inc
or
sub
push
sub
mov
adc
dec
addr16
or
mov
test
or
inc
inc
sub
std
add
shl
push
xchg
jp
test
jnp
lock
pop
addr16
sbb
push
call
or
mov
mov
or
inc
and
rcl
jmp
shl
in
push
test
mov
push
mov
add
popf
inc
sbb
in
xor
aam
cmps
mov
and
jo
xchg
mov
dec
or
add
cmc
popa
adc
and
cmps
shl
ror
sub
ret
mov
mov
je
mov
dec
jmp
cmp
dec
pop
add
xchg
push
inc
in
nop
inc
imul
and
mov
sbb
lahf
sbb
je
xchg
aad
mov
mov
outs
sub
mov
sub
adc
int3
cld
lahf
nop
cmp
ins
lds
mov
ins
int3
mov
inc
add
jbe
pop
pop
xchg
push
inc
mov
ja
sbb
xor
addr16
enter
add
mov
not
sbb
aaa
sub
add
add
push
add
cmp
shr
and
or
pop
mov
xor
inc
movs
movs
(bad)
or
les
jns
cmp
and
(bad)
test
xor
or
adc
test
int3
mov
repnz
and
mov
mov
mov
mov
jl
(bad)
xor
in
dec
add
ret
das
push
push
int
jl
retf
ja
cld
or
mov
mov
enter
test
aam
and
or
push
call
push
mov
dec
test
hlt
push
mov
iret
sbb
mov
or
stos
push
hlt
ja
imul
repnz
sub
je
js
je
rol
and
call
xlat
add
cmp
inc
dec
sub
xor
lahf
int3
push
movs
out
repnz
adc
aam
and
sbb
addr16
dec
pop
adc
inc
test
jmp
and
inc
pop
adc
or
ja
(bad)
fwait
fwait
sbb
push
mov
test
dec
and
mov
and
mov
popa
mov
adc
cmp
mov
jns
lock
add
pop
lea
and
push
pop
cmp
retf
sbb
pop
call
cmp
and
dec
jmp
js
jns
bound
imul
push
sbb
mov
cwde
mov
adc
add
and
test
test
xor
sbb
lea
and
inc
push
test
dec
xchg
pop
pop
xor
mov
mov
and
push
add
mov
mov
add
sbb
lods
test
out
adc
xor
ud0
popa
or
adc
dec
xchg
das
and
sbb
adc
shl
cmp
and
pop
int3
adc
fild
scas
es
gs
test
add
mov
xor
push
dec
les
gs
dec
aaa
inc
sub
int
push
dec
pop
iret
inc
sbb
iret
aad
mov
cmp
iret
arpl
sbb
push
in
and
addr16
and
and
or
loopne
and
cwde
xor
ret
adc
sti
or
or
test
add
mov
jo
fwait
movs
or
jp
(bad)
enter
mov
inc
fisub
inc
sub
arpl
sbb
add
call
mov
mov
dec
dec
pop
xor
xor
nop
push
jbe
jnp
je
idiv
adc
test
jo
or
adc
fnsave
in
cmp
in
jle
inc
fidiv
test
inc
jne
xor
add
mov
fstp
inc
mov
adc
cmps
fld
add
and
out
sbb
and
pop
in
inc
lods
daa
sub
arpl
add
adc
xor
add
add
sub
mov
fcmovne
cmp
leave
leave
leave
leave
or
leave
enter
push
bound
or
bound
xchg
inc
jle
dec
sbb
adc
inc
jo
pop
sub
sub
data16
inc
mov
sub
adc
mov
daa
pop
arpl
cmp
lock
jp
outs
cmps
ret
pop
and
and
sbb
cmps
ret
add
dec
sub
sub
or
inc
sbb
sbb
sti
shr
add
movs
or
sbb
and
enter
ja
push
call
mov
xchg
ret
sub
jmp
pop
dec
in
inc
(bad)
jmp
fcomp
jge
inc
adc
sub
aas
cmp
cmc
into
mov
les
into
ja
stos
fnstenv
or
leave
xchg
inc
or
xor
add
dec
add
mov
adc
fwait
add
pop
cmp
sub
mov
xor
inc
sbb
iret
inc
jg
in
inc
add
xor
xchg
dec
enter
inc
xor
and
sbb
adc
and
sbb
test
inc
cmp
cmp
adc
jp
push
or
add
retf
sbb
xchg
mov
xor
sub
inc
push
cmp
sbb
rol
add
dec
add
push
push
cmp
inc
call
cmps
push
adc
adc
gs
xor
sahf
or
shl
mov
and
dec
loopne
sbb
push
and
and
enter
movs
inc
call
or
pop
lock
gs
sahf
test
and
mov
retf
add
mov
cmp
movs
aam
(bad)
aas
and
sub
lock
std
loopne
ret
adc
add
les
test
add
dec
inc
bound
outs
lods
jb
pop
ss
mov
pop
bound
inc
sub
mov
sbb
pop
mov
cmps
xor
sbb
cmp
or
xor
xchg
sub
or
mov
adc
pop
mov
outs
lea
retf
sbb
sub
adc
shl
fist
imul
push
add
fild
pusha
mov
adc
xchg
pop
mov
jl
retf
hlt
add
(bad)
adc
jmp
jp
(bad)
adc
add
sbb
push
sbb
or
push
jg
stos
pop
inc
dec
xchg
mov
adc
ret
or
or
pop
mov
mov
xor
fld
xor
jl
rcl
pushf
sar
dec
jmp
xchg
invd
add
shr
push
cmp
mov
dec
call
adc
or
cmp
iret
push
cs
fld
cmp
jmp
sub
retf
add
cmp
sbb
aad
add
les
test
pop
shl
mov
shr
cmp
mov
and
add
push
lea
push
sub
clc
and
nop
sub
nop
pop
sbb
pop
push
cmp
(bad)
cmp
arpl
inc
push
retf
add
loop
stc
inc
add
or
xchg
pusha
dec
or
dec
xchg
and
sub
push
cwde
dec
clc
cmp
xchg
ja
add
cmp
inc
dec
and
adc
dec
pusha
inc
or
inc
push
pop
push
inc
mov
xchg
(bad)
mov
imul
mov
xor
mov
inc
add
call
jno
xor
test
cmp
test
inc
add
and
and
push
nop
jbe
push
shr
add
iret
add
test
ds
cmp
fcom
sub
loopne
xchg
pop
adc
mov
enter
push
sti
adc
xchg
iret
in
lods
jmp
mov
cmp
sbb
and
push
aas
add
lock
cmps
mov
call
inc
leave
mov
sti
mov
or
and
mov
add
repnz
add
inc
sar
push
call
iret
push
push
fisub
(bad)
push
inc
or
push
push
fmulp
or
xchg
add
sub
mov
fs
dec
movzx
jnp
and
sub
sbb
xchg
retf
retf
mov
sub
test
lods
and
pop
dec
or
leave
imul
or
ins
in
xor
inc
xchg
call
pop
adc
movs
push
jae
popa
mov
or
jge
dec
mov
or
nop
dec
sub
retf
xor
xchg
icebp
pop
sub
dec
imul
aam
mov
lea
adc
ret
daa
add
jmp
push
adc
movs
inc
fdivr
push
popa
sub
adc
pop
dec
lods
inc
mov
sti
pop
mov
and
push
and
and
or
add
xchg
push
adc
and
mov
inc
shl
(bad)
(bad)
call
add
xchg
mov
test
test
mul
push
stc
clc
xchg
xchg
adc
sbb
sbb
sbb
xchg
and
jecxz
mov
pop
scas
sub
adc
and
mov
shr
and
jnp
adc
cld
push
push
add
and
movs
inc
das
sbb
mov
or
mov
test
dec
in
and
cmp
neg
add
inc
mov
add
fmul
inc
sbb
(bad)
into
push
dec
jge
ja
adc
inc
inc
inc
pop
adc
jo
xor
inc
push
pop
mov
inc
sub
rcr
retf
and
add
jl
neg
loope
cld
pusha
inc
or
inc
mov
dec
xlat
mov
xor
test
cmp
ja
repnz
out
sub
cmp
leave
inc
sub
pushf
sbb
mov
cwde
jecxz
mov
imul
sub
push
mov
loopne
push
jne
mov
sbb
jns
inc
mov
gs
add
cs
ret
push
and
adc
xor
sub
movs
pop
lods
xor
add
inc
lods
adc
mov
mov
add
lods
mov
ss
xor
xchg
adc
sbb
fsubr
dec
ret
jne
fs
cmp
sti
add
shl
xchg
cmp
bound
and
les
jb
jmp
sbb
xchg
xchg
test
mov
fild
das
mov
inc
bswap
sahf
daa
fdivr
pop
adc
in
mov
or
or
test
adc
inc
mov
xor
shl
add
jb
adc
add
loope
jno
sub
jns
jns
fisttp
call
cmps
add
rol
sar
jecxz
stos
in
xor
arpl
icebp
pop
add
dec
pop
nop
ja
or
sub
mov
and
in
sbb
std
push
adc
inc
call
loop
int
and
rcr
add
ins
inc
(bad)
popa
cmp
and
fst
aad
aam
or
add
and
leave
and
jae
inc
xor
adc
loope
adc
jae
and
cwde
pop
jb
in
lock
repnz
call
add
add
mov
jns
inc
fdivr
in
pop
fs
daa
push
ret
pop
(bad)
movs
xor
mov
push
adc
daa
jmp
sbb
add
cmp
sbb
sub
mov
loopne
sub
jno
jb
or
ja
xor
pop
mov
add
or
inc
inc
and
pop
sub
hlt
inc
test
inc
push
aas
cmp
leave
mov
or
adc
outs
add
pusha
push
dec
add
pusha
or
mov
push
dec
and
sbb
lock
xor
dec
and
inc
pushf
or
push
in
add
mov
sub
add
leave
xchg
ss
pusha
mov
pop
mov
and
sbb
pop
add
mov
inc
lods
movs
mov
retf
jno
into
push
outs
mov
jge
cli
xor
add
ret
gs
mov
out
or
inc
sbb
sbb
sub
sub
or
cmp
jle
adc
mov
inc
pop
pop
or
push
dec
xor
add
(bad)
xor
push
lock
add
and
adc
rol
nop
pop
or
popf
ret
adc
in
or
sbb
dec
sub
loope
push
push
and
aaa
fld
pusha
mov
addr16
mov
adc
mov
inc
sub
cmc
adc
dec
fild
and
pop
mov
adc
pop
add
ins
add
or
inc
mov
cli
pop
cwde
inc
add
scas
mov
push
stc
add
imul
xor
push
mul
aaa
pop
sti
cmc
adc
push
rol
imul
adc
inc
bound
ret
jo
push
xor
arpl
div
and
stc
mov
mov
shl
mov
push
in
sub
xchg
das
mov
push
and
dec
or
arpl
inc
das
ins
jne
popf
mov
imul
adc
inc
add
push
pop
sbb
push
dec
fdiv
emms
or
inc
lea
rol
xor
xor
popf
aad
pop
loopne
and
ret
retf
ret
push
cmp
rol
cmp
movs
inc
jl
pusha
inc
daa
or
and
cmp
popa
inc
pop
loopne
mov
aam
push
mov
push
dec
sbb
fwait
push
xor
dec
gs
inc
adc
dec
or
inc
jle
fcomp
lods
add
repnz
inc
enter
and
and
das
adc
pushf
jle
sbb
sub
or
loope
dec
aaa
or
loope
xor
lea
loopne
dec
les
push
sbb
dec
sbb
nop
pop
adc
int
inc
add
mov
inc
inc
test
ja
mov
mov
dec
push
(bad)
pushf
sbb
mov
inc
inc
or
leave
and
sbb
das
pusha
push
shl
add
cmp
mov
mov
xchg
les
js
fisub
mov
loope
and
mov
or
mov
add
(bad)
adc
jnp
add
jge
lea
ror
push
popa
dec
aam
outs
mov
sbb
nop
js
add
pop
js
mov
daa
mov
mov
fld
in
test
imul
mov
adc
sar
dec
lock
xchg
shr
mov
mov
cmp
ficom
inc
sbb
push
nop
add
mov
loop
sub
sbb
cmp
loopne
add
push
mov
or
and
data16
ror
cmp
aad
and
test
movs
push
cmp
fs
push
mov
jne
inc
sub
lds
jl
or
dec
mov
clc
sub
cmp
and
mov
pusha
stos
fstp
or
cmp
and
fist
dec
bnd
fnstenv
ins
mov
cmp
inc
popa
add
push
movs
(bad)
jge
pop
jo
xchg
aam
and
imul
xor
cmp
es
sub
aaa
xchg
inc
mov
inc
add
les
sbb
mov
mov
movzx
shr
nop
push
or
xchg
aam
adc
jg
xchg
or
dec
and
imul
push
mov
mov
dec
dec
pop
ror
add
popf
fimul
push
call
push
inc
outs
or
add
pop
pop
bswap
retf
out
inc
and
sbb
add
or
adc
fnstenv
push
cmp
fs
or
fmul
adc
adc
stos
dec
dec
cmps
cmp
dec
js
popf
pusha
jbe
popa
adc
xor
sub
add
mov
sti
repz
and
ds
ds
and
push
push
inc
daa
in
lods
cmp
and
pushf
loope
xchg
cmps
inc
test
inc
push
jp
leave
mov
mov
and
mov
je
push
and
sbb
mov
shl
sub
ror
inc
lods
inc
jo
cld
jecxz
pusha
lock
sahf
xchg
and
push
pop
ficom
adc
sbb
mov
enter
out
mov
out
or
shr
test
ins
mov
pop
(bad)
cdq
ficom
out
dec
vmwrite
mov
jno
mov
repnz
clc
fisttp
int
mov
iret
mov
sbb
cmp
mov
sbb
ret
add
pusha
aaa
push
sub
ret
inc
push
sbb
push
xchg
push
inc
(bad)
or
dec
call
add
cmp
sub
add
and
fs
cld
sub
pop
adc
nop
or
inc
or
cmp
jb
pop
jmp
aam
push
cmps
push
daa
pop
cmps
mov
dec
std
add
push
cmp
bound
int3
pop
pushf
or
add
pop
call
push
cmp
adc
push
call
or
fild
jb
adc
(bad)
inc
and
or
retf
stos
(bad)
cli
call
pop
add
data16
inc
push
aaa
bound
(bad)
or
sub
test
xlat
jno
leave
jmp
test
adc
rol
dec
adc
or
xchg
inc
xor
mov
or
push
jp
sub
mov
das
add
loopne
ds
push
pop
js
and
inc
adc
loop
ret
xor
push
test
lods
cmp
lods
outs
cmp
push
adc
ins
dec
out
sub
mov
add
add
out
xor
push
mov
out
rcl
mov
jp
mov
dec
jnp
cmp
and
sbb
adc
mov
mov
ja
cmp
sbb
fisub
xor
fdiv
push
lods
sti
mov
aaa
aas
xor
loopne
loopne
fcomp
jbe
test
outs
push
std
mov
not
xchg
lods
jle
popa
pop
add
cmp
and
int
iret
jg
add
cdq
and
nop
jge
xchg
add
and
xor
push
cs
int
push
xor
push
test
rcr
ds
ror
lock
mov
fist
jle
jnp
push
and
cmp
push
push
or
leave
adc
rcl
test
push
ret
add
mov
dec
sbb
call
pushf
(bad)
sti
jg
add
pop
pop
push
popa
dec
mov
mov
and
aaa
adc
mov
aaa
or
inc
and
fst
adc
aas
cmp
dec
popa
cmps
adc
jmp
or
jnp
ins
dec
adc
stos
and
add
ret
mov
dec
push
and
sub
sub
pusha
and
outs
mov
call
imul
push
mov
sub
in
jp
push
mov
push
mov
inc
adc
sbb
pop
push
es
scas
add
sbb
pop
rcr
lock
add
in
pop
add
jbe
xchg
(bad)
xlat
daa
jo
sbb
sub
dec
mov
dec
nop
jo
inc
arpl
stc
loop
aad
rcl
mov
xor
sub
push
and
lds
or
mov
jbe
test
xor
sti
es
(bad)
sbb
and
dec
and
push
das
dec
adc
enter
lds
ds
rcl
inc
mov
dec
popf
in
mov
test
retf
div
or
adc
rcl
or
(bad)
cmps
mov
and
shr
xchg
adc
arpl
inc
gs
rcl
(bad)
leave
js
sbb
and
mov
inc
jmp
and
fdivrp
stos
pushf
pop
dec
mov
add
mov
ins
cmp
pop
cmp
xchg
xchg
jge
hlt
cs
inc
pop
adc
popa
mov
or
ret
loopne
sub
xchg
xadd
loope
imul
mov
pop
push
in
arpl
inc
add
push
jmp
sbb
clc
mov
jge
and
fdivr
sub
xchg
loope
push
push
mov
out
inc
or
dec
pop
add
adc
inc
or
push
aas
adc
cmp
jo
movs
in
mov
ins
push
mov
mov
jne
pop
push
stos
push
mov
jno
scas
pop
jmp
clc
jae
dec
mov
cdq
outs
sub
test
movs
mov
neg
je
sbb
rcr
and
dec
cmp
and
cli
lds
xor
add
(bad)
aad
mov
or
pop
push
sub
inc
or
jne
mov
pop
mov
sbb
dec
lock
inc
add
js
ds
lock
lds
test
add
push
xchg
mov
jp
cwde
enter
enter
or
data16
loope
push
jb
add
clc
sti
test
push
imul
mov
push
mov
dec
in
iret
xchg
add
jne
or
loopne
push
fs
xor
add
loopne
rcl
sub
sbb
in
cmp
pop
test
loopne
xchg
pop
xor
xor
dec
rcr
pop
test
aad
mov
and
jns
or
push
cmp
add
adc
and
push
mov
ins
bound
mov
lods
or
ficom
sbb
repnz
or
jo
pcmpgtb
add
ret
mov
and
test
pop
mov
cmp
add
add
psrld
call
cmp
add
xor
sub
les
pusha
jbe
ret
mov
shl
pop
adc
mov
push
adc
xor
inc
aad
in
xchg
or
ret
and
and
add
jne
(bad)
push
(bad)
sbb
pop
add
inc
lahf
fs
jns
movs
out
push
adc
loope
nop
ret
shl
sbb
pop
and
pusha
mov
push
add
or
push
push
dec
inc
rcl
frstor
and
mov
jne
test
push
lea
push
push
es
mov
sbb
cmp
test
or
sbb
int
push
(bad)
femms
mov
mov
lss
pop
mov
sbb
fidivr
cdq
push
or
jo
mov
dec
movs
lods
lods
jmp
movs
jmp
mov
jmp
dec
outs
sbb
repnz
cli
loope
call
add
adc
sub
(bad)
sbb
sbb
imul
sub
push
push
push
inc
movups
aas
adc
sub
les
js
pop
mov
std
jne
fs
aaa
mov
ret
ss
cmp
push
or
stc
ret
mov
push
pop
mov
xor
das
aaa
adc
jmp
jl
pop
sub
lahf
ret
and
sbb
cmp
adc
cdq
adc
sbb
inc
sub
aad
test
shl
sub
push
push
jp
popa
pusha
jmp
lock
inc
push
fiadd
sub
add
mov
push
push
popw
mov
sub
and
mov
out
cmp
sub
scas
and
add
rol
sub
js
div
gs
test
retf
xchg
mov
or
retf
pop
aaa
push
pop
dec
icebp
xchg
mov
inc
movs
pop
mov
rcl
sbb
inc
cmp
jmp
xchg
cmp
jbe
inc
lock
xor
in
(bad)
ins
inc
push
dec
jns
sbb
movs
fmul
mov
xor
mov
fmul
jae
test
inc
out
jl
popf
icebp
xor
pop
call
mov
or
pop
mov
js
xchg
jns
push
dec
push
push
push
lahf
mov
test
test
pusha
imul
dec
push
fsub
jge
(bad)
sub
add
jo
ins
add
and
jl
lock
pop
add
pop
into
jmp
sbb
imul
dec
or
in
xchg
jne
ret
cmc
out
cmp
push
pop
rcr
cmp
push
sahf
js
sbb
cwde
mov
inc
adc
mov
test
add
stc
retf
push
fs
fld
and
pop
lods
xchg
mov
rcl
mov
adc
(bad)
or
xor
cdq
in
test
push
xor
mov
add
add
in
pop
push
(bad)
bound
lods
imul
rol
loop
lea
and
test
add
inc
mov
cmp
(bad)
mov
ds
lods
nop
and
lds
xchg
and
pop
sub
xor
or
sbb
xchg
lea
lds
or
repz
sub
fsub
lds
add
ja
adc
dec
adc
shl
fiadd
shl
stc
or
jp
or
es
xchg
rol
pop
xchg
hlt
inc
mov
adc
adc
inc
jmp
cmp
enter
sbb
out
mov
jp
push
mov
ds
sti
out
enter
push
imul
addr16
adc
and
fdivrp
fcmovnbe
or
mov
sti
ja
xor
inc
jmp
dec
in
xchg
xor
dec
sub
sbb
mov
push
or
xor
je
mov
lea
fldenv
int
cmp
or
icebp
in
xor
mov
mov
pop
inc
sbb
cs
ret
or
add
les
push
push
pop
adc
or
test
bound
sbb
mov
loope
scas
or
cmp
jo
xchg
pop
add
js
call
outs
xlat
je
push
jne
sub
or
es
arpl
sbb
mov
jae
mov
repnz
or
xchg
add
inc
pop
adc
out
pop
(bad)
inc
push
loopne
or
(bad)
and
or
add
push
pop
cmp
lods
xchg
and
xchg
mov
or
scas
pop
int
push
and
xchg
xchg
dec
push
pop
shl
mov
mov
cwde
mov
(bad)
cmps
retf
icebp
push
xchg
std
xor
pop
(bad)
rol
mov
scas
shr
cmp
adc
sbb
inc
loopne
ret
and
dec
cmps
sub
nop
sbb
out
push
mov
dec
push
nop
push
out
or
neg
(bad)
cmp
jo
je
add
or
inc
or
retf
mov
inc
inc
jne
cmp
push
sahf
dec
jne
test
mov
call
inc
push
ds
sbb
mov
xor
pop
mov
aam
ss
add
jl
rcl
jne
(bad)
shl
retf
pusha
push
sar
shl
fldcw
retf
mov
mov
sbb
int
xor
call
nop
adc
sbb
out
adc
ret
or
and
jge
hlt
pop
mov
inc
es
push
push
adc
sub
adc
xor
xchg
or
push
mov
dec
jne
or
popa
dec
inc
js
and
lock
mov
int
xor
test
ret
test
fdiv
jne
pop
jo
or
sub
push
out
loopne
fmul
inc
xlat
push
lahf
and
fst
cmp
jecxz
cwde
out
xor
fisttp
cld
(bad)
jl
cmps
lods
add
cmp
jne
je
push
push
imul
push
add
fst
dec
push
inc
pop
cmp
jns
mov
movs
dec
push
imul
aad
sbb
nop
pop
xchg
mov
and
push
adc
aam
imul
(bad)
aad
shl
mov
leave
pop
jmp
mov
movs
pop
or
in
clc
mov
or
xor
mov
xor
and
lods
adc
in
xor
js
fisub
neg
je
jmp
and
mov
push
js
aam
inc
or
jo
mov
test
adc
leave
mov
movs
jecxz
shl
scas
pusha
or
jle
rdmsr
ins
(bad)
or
add
dec
or
add
aam
lock
sbb
push
ret
movs
sub
xor
push
in
xchg
outs
add
mov
xchg
call
aam
push
mov
in
dec
sbb
sub
mov
dec
fld
or
mov
cmp
add
lea
cwde
mov
js
jo
or
inc
mov
popa
push
inc
and
sub
int
jmp
in
jb
outs
pop
call
push
jns
add
or
ins
push
ficom
aam
test
xchg
dec
jle
mov
or
adc
jne
push
add
add
sub
pop
dec
jno
punpcklbw
xor
into
add
push
sbb
adc
mov
sbb
cmp
daa
dec
mov
and
ror
pop
push
loopne
fwait
clc
jg
mov
push
add
and
fidiv
jae
pop
ss
inc
sbb
cmp
leave
out
xchg
adc
xchg
hlt
or
mov
js
fimul
sbb
adc
add
out
add
or
or
ins
add
movs
add
mov
pusha
jbe
inc
test
pop
adc
add
mov
cmps
fmul
push
test
cmc
jo
or
(bad)
and
inc
in
add
(bad)
int
or
pushf
push
xor
xchg
or
adc
test
adc
loopne
rol
mov
add
jge
jle
inc
xchg
jo
adc
pop
mov
mov
cmp
dec
jge
and
or
jmp
adc
cwde
pop
add
shr
adc
jge
rol
and
inc
dec
adc
dec
fcom
push
xchg
fmul
sti
loop
jp
add
in
xor
cmp
push
fcmovne
push
sbb
xor
fild
push
pop
pop
call
(bad)
fsubr
jb
xchg
xchg
mov
test
mov
xchg
inc
inc
xchg
hlt
mov
xchg
pop
dec
les
push
mov
jle
shl
fxtract
adc
add
sbb
jns
pop
and
sub
sbb
cwde
in
je
jl
psubw
xchg
cld
add
sbb
xchg
add
mov
mov
push
aaa
nop
sub
loope
xchg
popf
scas
lods
les
lahf
(bad)
jb
mov
sbb
out
mov
add
sbb
push
push
push
inc
jmp
or
movs
pushf
jo
leave
mov
or
ret
add
sub
enter
add
lock
and
and
add
clc
pop
pop
sahf
cld
shl
lods
adc
xchg
xor
ret
mov
lock
push
stc
(bad)
pop
sbb
test
sbb
jno
mov
ds
dec
cmp
mov
dec
lods
das
ret
mov
xchg
fwait
inc
mov
and
movs
or
or
daa
fadd
inc
dec
mov
mov
rol
mov
mov
dec
sub
xchg
test
mov
sbb
mov
fs
xor
adc
(bad)
stos
retf
loope
imul
mov
cdq
inc
scas
or
scas
rcl
xlat
xchg
ja
out
sbb
jnp
adc
test
mov
mov
jmp
xchg
sub
jmp
cdq
xor
xchg
fwait
call
and
cmps
ds
push
push
push
mov
repz
xor
mov
adc
mov
pushf
add
sar
or
rcr
retf
inc
rcl
adc
sbb
aaa
test
push
cmp
or
add
add
jmp
mov
out
hlt
fisubr
aas
mov
aaa
idiv
xchg
sub
cmp
(bad)
and
ins
pop
out
dec
dec
inc
das
les
ret
sub
lea
fstp
or
xor
push
and
imul
ins
adc
rcl
les
hlt
call
inc
jle
or
xchg
or
add
mov
push
mov
cdq
add
push
add
mov
push
jne
xchg
popf
fwait
and
mov
jmp
call
sbb
and
aad
dec
push
sub
lds
sub
xchg
add
or
add
pop
cs
add
mov
xor
in
jmp
jmp
jmp
hlt
mov
xor
adc
mov
(bad)
fidivr
gs
mov
add
lds
pop
xchg
movs
xor
test
popa
imul
mov
movs
pop
sbb
jl
fwait
out
pusha
in
stos
jo
or
sub
adc
pop
jo
mov
sbb
jbe
push
add
(bad)
push
cmp
(bad)
aad
push
in
or
add
mov
pusha
sub
mov
and
enter
jb
xchg
pop
fs
add
dec
enter
or
xchg
push
or
or
fld
push
into
cli
arpl
push
mov
and
nop
or
loope
jmp
adc
test
loope
inc
mov
cld
rol
movs
ret
and
xor
dec
or
jl
pop
push
jne
jmp
xchg
or
rcl
mov
jmp
inc
xor
pusha
adc
xor
loopne
test
mov
and
cmp
movs
cs
mov
(bad)
in
sbb
xchg
popa
mov
mov
adc
imul
sub
cmp
pop
xchg
cs
iret
push
cdq
movs
stc
pusha
mov
clc
adc
inc
in
stos
jmp
push
sub
iret
(bad)
sbb
lahf
mov
push
mov
ja
sub
test
popf
push
cmps
or
xchg
sub
mov
ins
jns
inc
pop
inc
add
push
pop
mov
xor
pop
mov
lea
ins
outs
imul
add
add
jns
or
or
lea
arpl
mov
push
popa
cmp
push
dec
fs
cmp
push
add
jge
adc
lock
or
add
(bad)
rcl
sub
sbb
add
push
and
jge
je
js
mov
sub
mov
arpl
dec
inc
push
sub
int3
pusha
dec
pop
xchg
sbb
lods
xor
adc
xchg
mov
mov
gs
ins
test
pushf
adc
cmps
mov
pusha
dec
mov
dec
inc
cmps
ja
mov
xchg
es
test
mov
or
add
mov
into
shl
adc
jb
sbb
daa
or
jb
leave
or
pop
dec
das
(bad)
cmp
jnp
push
inc
imul
adc
pop
pop
jnp
and
popf
jmp
or
popa
cmp
push
sub
ret
xchg
cmp
sub
femms
mov
and
sub
call
xlat
xchg
aas
sbb
retw
jmp
daa
inc
lods
adc
outs
rcl
add
inc
inc
(bad)
xor
add
or
mov
or
es
popa
adc
fstp
mov
dec
add
cld
jnp
jmp
cmp
and
push
stc
add
jl
and
(bad)
cmp
addr16
lahf
add
and
cmp
test
cmp
inc
mov
add
jo
fwait
daa
mov
pop
sbb
in
mov
outs
adc
ror
inc
push
mov
ror
add
adc
sbb
loopne
stc
sbb
add
cmp
sub
cmp
and
aam
adc
popa
adc
stos
lahf
xchg
mov
and
dec
pop
fs
adc
shr
cmp
je
add
add
test
push
pop
pop
in
xchg
fs
add
push
loope
jnp
imul
dec
xor
cdq
ret
mov
dec
dec
or
dec
jb
(bad)
nop
add
cmp
push
pop
add
shl
cdq
test
xchg
mov
gs
fs
xchg
xor
jmp
or
sbb
(bad)
loopne
jmp
jecxz
and
imul
jmp
sbb
pop
dec
push
test
push
adc
and
ret
pop
mov
fwait
and
and
push
push
xchg
in
daa
popa
test
lea
mov
inc
clc
push
and
ss
sbb
out
dec
dec
xor
and
adc
call
(bad)
sbb
imul
xchg
rol
les
adc
dec
loopne
adc
mov
inc
mov
sbb
xchg
jge
out
dec
add
jo
add
sbb
nop
push
add
outs
or
push
jmp
mov
mov
test
push
dec
sbb
jle
lea
scas
movs
pusha
and
xor
and
mov
add
adc
sbb
cmc
cmp
shr
inc
mov
add
lock
sahf
and
mov
and
and
jmp
outs
adc
jae
mov
or
cmp
adc
lods
mov
loop
aam
ret
(bad)
and
push
pop
cdq
add
sub
add
xchg
std
inc
ret
sbb
pusha
ins
mov
or
test
neg
sub
push
pop
adc
test
or
test
leave
rcl
sub
test
stos
rep
(bad)
and
call
fcom
add
fiadd
sub
fild
add
ins
sbb
dec
nop
push
add
or
shl
movs
retf
xchg
adc
xor
dec
mov
(bad)
popa
xchg
mov
bound
ret
psraw
imul
aaa
movs
sbb
cmps
jne
retf
(bad)
call
ret
test
inc
sbb
repnz
and
inc
push
popa
bound
cmp
adc
std
(bad)
pop
xchg
test
jns
add
mov
push
xchg
adc
add
add
inc
ror
lods
push
xchg
ss
and
daa
adc
ins
pop
add
or
sbb
push
ds
leave
or
sub
and
dec
xor
nop
push
scas
sbb
xchg
enter
push
jmp
add
mov
je
fisubr
int3
mov
pop
jl
jbe
jmp
loopne
jle
sbb
outs
adc
inc
mov
xchg
push
inc
jle
dec
in
retf
or
fisub
inc
fcomp
mov
adc
jo
fimul
repz
imul
icebp
ja
xchg
push
mov
jle
test
mov
loop
xchg
mov
xchg
and
test
mov
add
dec
imul
or
or
leave
ret
pop
lea
push
xchg
xchg
outs
shl
or
adc
es
cli
and
pop
stc
sbb
mov
in
out
add
cld
mov
and
enter
cmps
cmp
xchg
cmp
cmp
push
xchg
inc
cmp
jle
jecxz
lock
xchg
sub
or
sub
cmp
push
jmp
(bad)
adc
dec
adc
or
jmp
add
or
movs
xchg
sbb
mov
jns
pop
inc
fcom
sti
sar
loop
iret
sbb
aaa
(bad)
fdiv
inc
pop
inc
cmc
movs
xchg
mov
or
paddb
pop
sub
repz
clc
or
add
adc
mov
add
test
mov
add
mov
mov
jnp
mov
loopne
icebp
push
dec
mov
inc
mov
adc
js
imul
or
fdiv
push
add
xchg
fsub
mov
mov
daa
frstor
dec
je
push
push
mov
imul
nop
jae
aas
pop
cmp
or
test
jns
mov
adc
or
or
inc
out
inc
cmp
ret
and
xor
jg
xor
adc
sbb
dec
outs
mov
cmp
lock
dec
enter
add
retf
ja
je
xchg
cwde
dec
add
xor
inc
push
pop
call
pop
push
cmp
(bad)
sbb
(bad)
jmp
sbb
or
inc
add
sbb
pop
sar
add
jmp
mov
movs
popa
or
in
or
movs
mov
jle
mov
sahf
fcomp
lods
push
mov
sub
and
sahf
dec
jl
adc
rcl
enter
adc
sti
shl
adc
sbb
aam
push
push
in
cs
add
and
ret
sbb
(bad)
aas
add
and
add
pop
rcr
dec
fisttp
xchg
mov
add
and
push
push
sub
cmps
scas
(bad)
das
ins
pop
out
(bad)
daa
aaa
mov
jmp
add
mov
dec
push
imul
dec
add
dec
push
sbb
call
in
sbb
xbegin
jno
mov
clc
(bad)
in
xchg
es
or
and
popa
fwait
xchg
push
add
sbb
out
push
sbb
push
add
aam
lock
or
and
ins
xor
xor
cmc
enter
pushf
add
and
and
les
cmp
test
mov
(bad)
enter
shl
out
mov
or
int
pop
add
cmp
sbb
loopne
add
sbb
or
arpl
je
and
and
js
dec
cli
hlt
pop
mov
and
cmp
sub
lods
or
xor
je
in
mov
ins
jmp
sub
loop
and
cwde
rcr
adc
pop
mov
push
xchg
push
sar
fnstcw
pop
(bad)
int3
cmp
xchg
scas
cwde
push
sar
add
aaa
mov
fcom
xchg
sub
and
rcr
les
pop
xor
shr
ret
jge
and
test
sub
in
dec
add
(bad)
leave
cs
cmp
jo
gs
xor
or
and
cmp
mov
cdq
pop
les
jmp
stos
xchg
mov
jmp
jo
test
dec
pop
and
pop
adc
or
push
mov
sub
imul
mov
test
pop
push
out
push
sbb
inc
dec
xchg
push
push
xchg
jne
mov
and
push
or
in
xor
add
jp
pop
cmp
and
mov
jmp
push
xor
pop
mov
or
imul
adc
jo
push
or
ss
rcl
cmps
sub
mov
leave
ror
sub
mov
sbb
mov
add
sub
and
aad
ss
adc
lods
cmp
jno
pusha
cmp
in
pop
mov
movs
cmps
jmp
or
stos
(bad)
stc
rol
js
jo
mov
jl
add
sbb
push
cmp
pop
push
push
es
inc
call
mov
aam
ss
xor
es
in
jmp
icebp
rol
popa
hlt
cmp
cdq
arpl
or
mov
and
scas
lock
addr16
test
sti
mov
adc
les
pop
push
push
or
and
lock
sub
jle
pop
scas
out
rcl
pop
jge
and
and
mov
mov
ds
push
and
and
movhps
push
add
or
sub
and
inc
mov
adc
inc
in
(bad)
push
add
cmc
push
xor
lds
add
bound
jecxz
(bad)
add
rcr
push
adc
jmp
fs
leave
ror
pop
inc
outs
pop
mov
mov
aaa
or
pop
mov
scas
xchg
cmp
adc
jns
mov
cmp
inc
ss
or
stos
sar
sub
push
xchg
sbb
sbb
pop
pop
test
inc
sub
repnz
adc
sub
add
(bad)
out
fldenv
jo
or
aaa
add
mov
add
pop
mov
add
xchg
mov
jno
dec
inc
rcr
and
mov
daa
bnd
inc
pop
fild
and
and
adc
cmps
or
dec
dec
je
add
cwde
jno
xor
mov
ret
add
loopne
jle
outs
punpckhdq
call
pop
dec
jl
cmps
sqrtps
mov
mov
test
inc
sub
xor
jmp
dec
mov
mov
and
and
add
and
data16
lea
sub
xchg
cmp
sub
xor
dec
in
dec
add
call
or
sub
sbb
fnstsw
push
and
dec
xor
push
push
xchg
and
stos
into
jl
in
or
push
lods
gs
jg
mov
data16
inc
movs
dec
pop
jg
inc
inc
shl
or
add
and
dec
fcomp
cld
retf
xor
lods
stc
jne
mov
inc
adc
lea
fild
cdq
add
sbb
sar
pop
mov
push
xor
mov
add
lods
cld
fdiv
sbb
mov
cwde
lock
add
inc
imul
push
add
bnd
stc
pop
xor
mov
mov
sbb
pop
neg
pop
sbb
pop
or
and
xor
lahf
jns
push
ror
mov
add
dec
pusha
enter
sub
dec
add
add
pop
ds
inc
add
imul
mov
add
xor
ss
mov
xchg
xor
es
cmp
ret
and
adc
sub
push
shr
pop
push
mov
fisttp
add
jmp
js
or
xor
int
xchg
add
push
in
add
jne
mov
sbb
adc
push
xor
mov
popf
pop
pop
cs
in
mov
cmp
aas
push
push
xor
rol
push
popf
and
enter
cmp
or
or
xor
out
adc
or
pop
mov
fdivr
pop
call
push
ret
adc
xchg
sbb
fwait
xlat
add
je
in
adc
test
jne
inc
add
jns
inc
ror
leave
or
pop
and
and
inc
jbe
xchg
xor
sub
loopne
nop
(bad)
aas
je
daa
jg
pop
js
dec
enter
add
and
jb
cld
push
add
sub
loope
(bad)
jmp
pop
imul
sub
outs
pop
outs
sbb
sub
add
fld
or
jmp
xlat
shl
mov
cmp
jl
and
sbb
test
ror
xchg
push
or
aas
push
js
or
xchg
sahf
sub
inc
mov
add
(bad)
cmp
test
cmp
adc
mov
xchg
mov
and
sbb
test
fimul
pop
scas
movs
es
inc
xchg
xor
in
and
or
cmp
stos
or
or
in
xchg
retf
in
lock
adc
das
call
xor
or
add
lods
adc
(bad)
mov
dec
mov
retf
push
rcl
rcl
jnp
dec
adc
adc
or
aam
je
cmp
sub
add
pop
mov
jmp
jnp
jne
or
repnz
inc
ss
cmp
xor
sub
xchg
outs
leave
shl
and
cs
adc
mov
sar
ins
loopne
pop
mov
bound
stos
mov
sbb
and
push
sbb
jg
or
inc
cmp
inc
push
gs
pop
inc
adc
and
and
mov
add
pop
mov
push
gs
gs
push
mov
mov
inc
pop
xchg
mov
dec
dec
or
mov
add
imul
in
xchg
je
xchg
rcr
pop
aaa
loop
push
push
add
loope
push
fisttp
call
jb
(bad)
nop
fmul
mov
ds
rcl
push
push
adc
jnp
sub
daa
jmp
in
inc
clc
sbb
sbb
xchg
add
mov
cmp
or
sbb
fs
inc
and
push
lds
mov
sub
int
pop
aas
add
mov
push
retf
sub
bound
jmp
cmpxchg
add
push
and
push
je
add
pusha
inc
push
pop
jge
(bad)
xor
pop
and
inc
or
sbb
xchg
fs
add
mov
fstp
pop
inc
push
lea
add
rcl
mov
pop
add
test
xor
sub
inc
popf
xor
fnsave
sub
arpl
adc
mov
xor
dec
arpl
cmp
ret
push
loop
mov
repnz
cmp
jno
add
out
jmp
je
repnz
adc
outs
in
popa
in
pop
inc
daa
adc
cmp
xchg
or
adc
addr16
imul
pop
mov
jne
inc
push
mov
aam
inc
pop
ins
inc
sbb
sub
adc
into
adc
in
nop
or
cmp
push
push
imul
pusha
dec
xchg
pop
sbb
shl
cmp
(bad)
lahf
add
mov
sub
dec
sbb
loop
xor
movs
dec
test
adc
mov
loopne
add
or
sbb
or
into
xor
rcl
dec
jg
fwait
shr
xchg
fistp
and
das
inc
in
out
or
lock
adc
mov
dec
pop
and
loope
(bad)
mov
aas
xor
daa
or
iret
push
or
fdiv
ret
shr
add
or
xchg
inc
mov
or
rcl
push
fisubr
retf
cli
dec
mov
inc
dec
inc
lea
mov
jo
cmp
jmp
leave
add
lods
inc
jns
nop
add
div
xchg
(bad)
loop
and
stc
mov
jmp
(bad)
sub
sbb
je
jnp
rol
push
lock
push
and
mov
adc
pop
js
iret
rcl
call
add
push
(bad)
(bad)
or
fs
test
into
push
ret
inc
or
or
fstp
and
sbb
and
adc
les
add
lds
push
add
and
mov
mov
adc
cmp
aam
test
into
scas
fmul
push
sbb
add
test
ss
xchg
icebp
ds
daa
inc
fistp
cmc
push
in
aaa
mov
inc
punpcklwd
sbb
adc
pop
aas
fst
inc
sbb
push
sub
das
cmp
mov
adc
xchg
cmp
or
mov
imul
jo
jecxz
shr
push
shl
mov
xchg
mov
xor
mov
adc
xchg
dec
pop
mov
out
cli
push
add
xchg
sub
fcmovne
mov
and
rol
fiadd
xchg
xchg
cdq
fs
fadd
xchg
lods
pop
jne
jns
cdq
es
mov
les
cmp
arpl
(bad)
(bad)
in
ins
xchg
push
pop
push
mov
mov
add
push
mov
and
add
jmp
dec
adc
icebp
gs
dec
and
sub
repnz
adc
lods
mov
les
aad
sub
and
pop
add
add
(bad)
jne
(bad)
shr
xchg
dec
add
das
adc
mov
pusha
ss
test
(bad)
dec
test
lahf
and
sub
adc
xor
sahf
in
mov
es
push
das
sub
add
(bad)
cmp
and
je
and
push
lods
or
push
lock
inc
jo
mov
(bad)
aam
jne
mov
pop
cmps
push
push
aad
and
jno
mov
sbb
xor
daa
push
fadd
dec
fnstsw
lock
add
add
in
xchg
sbb
push
fdivr
push
aam
jo
jns
sub
xchg
inc
pop
adc
add
add
and
iret
ret
adc
push
ins
popa
in
xor
ret
add
adc
mov
jo
pop
add
add
and
mov
fist
add
shl
mov
inc
cmp
push
bound
lods
add
push
icebp
dec
adc
cmps
sub
mov
xor
mov
mov
imul
mov
or
or
xor
ja
jmp
cwde
dec
add
or
or
js
into
das
sbb
xor
jo
or
push
jns
adc
pushf
popf
movs
cmp
mov
inc
popa
out
mov
xor
cmp
cmp
sbb
push
xor
add
or
cmps
inc
xor
cmp
mov
add
movs
mov
dec
pop
sbb
add
aam
or
pop
sbb
jmp
aas
push
or
or
xchg
add
test
mov
push
or
push
sub
call
popa
dec
out
lahf
sub
inc
hlt
adc
fs
in
data16
je
add
xchg
jge
adc
push
or
sub
mov
dec
pop
int3
add
cmp
xor
dec
push
add
add
mov
or
mov
mov
pop
sti
fisttp
cmp
cmp
sub
xor
xchg
and
cmp
xchg
repnz
call
dec
fcmovnb
pop
add
mov
and
pop
inc
add
inc
sub
mov
cli
or
push
add
add
push
push
push
adc
push
and
xor
pop
mov
dec
xor
adc
hlt
imul
push
jl
push
and
aas
ins
and
pop
cdq
stc
clc
cmp
sbb
hlt
mov
push
popf
sbb
pop
(bad)
or
dec
adc
out
pop
adc
adc
and
popf
dec
dec
push
out
test
adc
add
push
push
movs
add
scas
push
fadd
xchg
popa
pop
loop
push
imul
push
adc
push
nop
ror
sub
mov
test
cdq
mov
cmp
add
addr16
es
aam
inc
repnz
int
test
jne
push
push
pop
or
leave
and
or
pop
push
scas
jo
inc
mov
mov
loopne
sub
inc
dec
dec
les
xor
add
cmps
xor
jb
add
push
pop
sbb
inc
sbb
ror
aad
lods
or
test
and
icebp
pusha
movs
scas
je
sbb
arpl
add
push
sbb
add
and
aas
inc
mov
rcl
sti
mov
sbb
sti
imul
xor
or
xchg
mov
push
lock
lea
sub
sbb
lods
cmp
cmp
jecxz
loopne
jnp
dec
mov
ret
mov
sbb
jbe
repnz
sbb
or
sbb
sbb
outs
adc
xor
inc
out
and
dec
inc
fidiv
lods
mov
jmp
div
dec
ffree
pop
leave
js
lea
je
pop
sbb
jae
in
mov
push
inc
push
sub
ret
push
push
adc
pop
jmp
adc
dec
repnz
inc
sub
adc
imul
add
in
jns
add
add
push
adc
pushf
push
sub
xor
std
psrlw
sub
xchg
dec
jge
inc
adc
add
inc
pop
shr
shl
xor
mov
adc
inc
sub
or
adc
popa
jne
cmp
outs
mov
sbb
mov
xchg
cmp
adc
add
nop
pop
add
inc
or
test
imul
sbb
inc
add
shl
rol
adc
jg
imul
xor
cld
push
and
loop
pop
sbb
jo
lods
mov
sub
je
xchg
(bad)
icebp
pusha
cwde
sub
cmp
and
add
fiadd
inc
clc
dec
xor
dec
sti
or
push
sbb
imul
cmps
sbb
and
dec
push
and
mov
in
jge
pusha
push
test
ficomp
sub
in
imul
int
call
xchg
loop
aaa
(bad)
stc
push
les
inc
jecxz
arpl
pop
and
add
jne
inc
bound
test
int3
push
inc
and
test
add
outs
sbb
xor
jl
or
jle
xchg
icebp
sti
add
cmp
push
jle
fisubr
mov
and
mov
push
or
sbb
inc
daa
sub
dec
dec
sub
(bad)
inc
loope
mov
mov
jmp
rcl
or
retf
jmp
push
push
rol
imul
mov
ret
sub
jb
push
xor
test
and
shl
sub
jle
sub
cmps
cmps
push
mov
pop
add
sub
xor
daa
imul
jl
leave
mov
cmp
cmp
shl
and
test
push
in
push
add
inc
add
push
fiadd
dec
xchg
es
pop
adc
or
test
xor
loope
pusha
loopne
sbb
cmps
sbb
fs
add
fist
adc
fsub
nop
mov
and
nop
add
pop
push
stos
adc
adc
sbb
and
stc
loopne
rcr
push
push
add
popf
dec
ret
push
mov
xor
iret
addr16
data16
adc
xor
and
mov
adc
into
push
push
mov
xor
test
aam
adc
(bad)
stos
movs
outs
sti
and
jae
dec
dec
loope
dec
mov
sbb
mov
adc
or
inc
stos
std
(bad)
add
or
dec
jmp
or
sub
aaa
pusha
std
mov
cli
or
pop
sbb
fstp
out
pop
inc
nop
cmp
cld
leave
mov
sbb
aam
dec
ror
popa
leave
sbb
mov
inc
in
pop
mov
push
or
push
push
push
add
ret
fadd
push
xchg
daa
test
push
pop
stos
mov
dec
mov
lods
push
push
(bad)
push
pop
imul
pop
and
les
cmp
add
sbb
jnp
cmp
movs
ins
sbb
imul
inc
clc
adc
shl
fst
test
loopne
xchg
shl
sub
jp
inc
sub
mov
pop
(bad)
sub
outs
imul
adc
(bad)
or
push
lea
imul
lahf
shr
xchg
mov
add
sbb
popa
test
xchg
or
out
movs
and
(bad)
fisub
rol
les
push
lods
xchg
push
inc
enter
cmp
sub
add
add
sub
je
mov
sub
mov
cmpxchg
and
mov
jne
idiv
jbe
ins
cmp
push
es
inc
mov
xchg
movs
popa
ins
mov
push
mov
xor
pushf
sub
je
sub
mov
jne
dec
inc
push
push
icebp
pop
inc
cmp
or
add
mov
fwait
bound
add
cmp
(bad)
shl
enter
mov
pop
sahf
mov
gs
sub
pop
test
adc
adc
xor
inc
cmps
cmp
(bad)
jae
push
call
push
nop
adc
adc
cwde
and
xor
lock
mov
and
pop
and
sbb
lock
mov
adc
mov
(bad)
daa
repnz
jo
cmps
fsubr
inc
pop
adc
int
add
sbb
sbb
mov
jo
add
in
(bad)
mov
fsubr
sbb
iret
adc
push
nop
idiv
inc
pop
inc
or
aam
pop
je
enter
pusha
cmp
push
fs
and
rcr
mov
push
data16
mov
adc
jmp
push
in
push
sbb
in
mov
fsubr
jne
adc
add
jns
pusha
fcmovnbe
jle
arpl
add
inc
dec
jnp
ret
fist
call
shl
sbb
add
mov
icebp
stos
mov
xchg
rcr
cmp
bnd
xor
xor
add
cld
sar
jno
test
inc
shl
cmp
inc
sar
ret
mov
sti
sub
cmps
gs
add
inc
push
push
xchg
shl
sahf
xor
mov
cmp
ficomp
or
outs
xor
push
pop
sbb
sbb
xchg
hlt
or
mov
xor
retf
adc
jl
mov
mov
scas
mov
fs
xchg
inc
xchg
mov
(bad)
sub
add
call
and
xor
jmp
fdivr
mov
xor
test
shl
pop
xor
inc
push
popa
xor
fst
mov
cdq
sub
jl
or
clc
lea
sbb
xchg
lea
mov
pop
xor
adc
retf
loope
mov
sub
mov
jae
mov
pop
ret
fs
xchg
dec
mov
sub
mov
and
jnp
fcom
mov
or
test
addr16
call
arpl
pop
aam
inc
add
pop
ins
mov
cdq
ins
adc
mov
adc
(bad)
pop
nop
pop
outs
mov
ret
arpl
push
loope
inc
test
out
icebp
movs
lods
mov
add
clc
pop
test
jmp
xchg
push
adc
inc
push
push
sti
push
inc
or
mov
sbb
cld
or
loopne
or
jo
lea
je
call
call
test
adc
nop
int3
sub
loope
popa
mov
rcl
mov
xchg
mov
test
cli
aam
pop
sbb
popa
sbb
cmp
out
(bad)
sub
test
jle
add
mov
and
mov
movs
lock
adc
xchg
movs
lods
xchg
fdivr
add
and
cmp
pop
jle
fidiv
xlat
std
push
pusha
sub
jbe
shl
push
ins
push
fcom
popa
pusha
add
mov
(bad)
call
movs
enter
out
call
pop
and
mov
or
inc
add
lods
adc
xchg
pushf
mov
hlt
push
int3
aam
sbb
mov
push
call
call
popa
out
ret
jmp
xchg
push
add
inc
or
(bad)
fadd
cmps
repnz
fsub
add
mov
or
jle
lods
shl
xchg
cmp
sbb
xchg
cmps
fsubr
movs
int3
dec
inc
sub
cmps
(bad)
lahf
in
int3
imul
dec
(bad)
test
sbb
xchg
add
or
push
and
lods
add
hlt
test
xlat
or
sub
repz
les
jecxz
lods
test
mov
add
adc
loopne
push
add
sub
mov
inc
sbb
push
dec
inc
jmp
js
and
dec
pushf
adc
add
cmp
xchg
xchg
ret
pusha
in
sbb
and
or
aaa
in
xor
jmp
add
pop
xchg
dec
popa
jge
cli
dec
xlat
lea
sbb
sbb
sub
cmp
adc
dec
pop
add
ret
dec
inc
sbb
pushf
mov
imul
jnp
fs
mov
xchg
call
pop
aaa
sbb
adc
mov
mov
setle
ret
inc
rcr
pop
cmp
jb
add
push
xor
jnp
cmp
push
data16
and
inc
mov
test
push
or
jnp
dec
xor
stos
pusha
jne
lea
in
sbb
add
pop
push
sbb
ins
pop
add
xchg
sub
gs
das
mov
mov
inc
xchg
xor
lock
retf
xchg
cmp
dec
inc
(bad)
popf
mov
push
call
inc
mov
inc
(bad)
push
retf
outs
adc
das
mov
xor
jp
or
ret
xor
xor
or
adc
ds
das
mov
push
pushw
xchg
(bad)
xchg
or
adc
push
adc
sbb
fxch
sbb
jnp
(bad)
fld
jmp
dec
or
sub
enter
fld
js
or
and
mov
enter
stc
mov
sub
adc
push
add
sbb
test
movs
adc
shl
dec
bound
push
nop
mov
aaa
fcom
fs
cmp
cmp
(bad)
jmp
ins
fs
xor
dec
loope
pop
test
adc
cmp
push
sub
add
xchg
loop
push
mov
add
push
pop
clc
shl
xor
jbe
or
sbb
dec
lds
test
and
push
lods
pop
fadd
jo
push
inc
mov
in
mov
mov
push
push
mov
rcr
and
add
call
add
pop
inc
mov
add
xchg
ds
movs
aam
xchg
pop
and
and
cmp
movs
push
sbb
or
dec
inc
add
aam
push
xchg
adc
xchg
cdq
add
pop
xchg
inc
push
aas
jae
push
ret
pop
rcr
push
outs
arpl
sub
les
retf
fmul
movs
fs
and
ins
add
adc
aam
pop
push
stos
(bad)
rol
mov
call
sbb
scas
adc
push
rcr
jl
mov
push
mov
or
inc
loope
fwait
sar
fimul
fstp
add
push
xchg
push
xchg
movs
xchg
lea
retf
sub
cmp
addr16
(bad)
fistp
fwait
mov
or
test
and
ss
mov
inc
inc
pop
or
add
pop
jne
inc
aas
das
pop
pusha
add
push
push
push
or
mov
push
lock
add
jle
cmp
jne
inc
inc
pop
or
or
push
dec
shr
cdq
dec
add
test
mov
pop
lods
dec
xchg
ss
and
loope
ror
ja
int
inc
add
popa
sbb
les
inc
je
rcr
mov
ret
scas
movs
mov
in
push
jnp
dec
add
fimul
sar
sbb
push
in
fcomip
pop
mov
add
test
imul
mov
jmp
call
sbb
ins
pop
fcomi
adc
xor
jae
jle
(bad)
rol
jbe
push
mov
or
cwde
dec
mov
sub
loope
nop
mov
sbb
mov
(bad)
push
cwde
imul
push
ret
sbb
add
adc
or
(bad)
jp
jnp
data16
test
test
outs
test
ss
push
inc
cmp
adc
mov
sub
xor
dec
sbb
adc
sbb
rol
push
aam
pop
or
hlt
fsub
popf
aaa
out
push
sbb
and
mov
add
nop
inc
sub
call
pusha
loope
dec
hlt
cmp
and
shl
inc
daa
inc
pop
in
add
pop
push
fisttp
cmps
gs
inc
call
retf
adc
inc
xor
mov
call
and
fist
dec
mov
movs
pop
jp
or
jne
jno
test
or
sbb
push
xor
sbb
sbb
ret
inc
aaa
mov
add
mov
data16
cmp
lock
pop
and
mov
ins
jnp
xor
dec
and
mov
adc
add
mov
push
fwait
sub
fstp
and
xor
add
or
mov
shl
cmp
dec
add
sbb
cmp
les
cmp
aam
mov
aas
push
outs
add
dec
jb
jp
js
stc
scas
fcmovnb
xor
icebp
mov
ins
cmp
sub
or
sbb
(bad)
fwait
dec
dec
xor
mov
add
shl
mov
sahf
jb
cmp
mov
inc
mov
adc
jl
dec
loopne
enter
jl
iret
retf
iret
fcomp
sar
lds
jae
shl
add
xor
xchg
(bad)
call
push
pop
push
dec
pop
out
jne
bound
jb
pop
hlt
adc
das
adc
jnp
xchg
inc
sbb
fs
gs
inc
ds
mov
add
jl
jne
jge
push
daa
popf
xor
fild
add
lods
lods
fstp
clc
dec
frstor
mov
sub
adc
adc
push
adc
mov
arpl
int3
adc
add
call
loop
adc
sbb
push
push
int3
daa
sbb
fwait
adc
mov
cmps
or
lock
or
mov
dec
xor
fadd
aas
xchg
mov
jo
loopne
dec
push
push
inc
clc
dec
adc
or
jne
or
in
lds
push
lds
xor
xchg
xor
mov
xchg
mov
lods
inc
add
adc
in
xor
gs
ja
cmp
sub
(bad)
and
arpl
jns
dec
ret
lahf
neg
jmp
(bad)
rol
int3
or
iret
add
pop
and
aaa
adc
xchg
jmp
or
push
dec
ret
mov
push
mov
aaa
xchg
xchg
xchg
mov
dec
and
dec
sahf
mov
test
fdivr
hlt
xchg
dec
test
nop
push
and
sub
adc
sar
test
or
xchg
xchg
pop
push
xor
or
imul
or
sub
mov
add
mov
jne
jnp
sbb
sbb
push
xchg
mov
nop
xor
call
mov
mov
dec
or
cmp
stc
and
icebp
sbb
sub
in
inc
mov
rol
es
sub
in
xor
sti
mov
inc
cmp
js
call
lea
add
pop
sub
nop
cli
and
popf
sbb
inc
das
sub
add
lods
mov
inc
sub
jl
sub
sub
dec
cmp
shl
mov
not
adc
mov
mov
aaa
test
xchg
xor
cmp
xor
and
inc
sub
sbb
fsub
mov
idiv
xor
pop
int
or
cmp
adc
push
mov
pop
mov
cdq
jp
mov
loope
xor
daa
rcl
das
xchg
push
inc
sub
(bad)
and
jmp
imul
jne
push
test
sub
je
jp
adc
inc
adc
sbb
pop
inc
sti
xor
add
in
xor
loope
(bad)
and
retf
popf
in
push
jp
scas
or
call
jo
arpl
invd
adc
push
ins
adc
add
mov
jnp
es
cmp
test
js
xor
jno
push
inc
shl
sbb
and
adc
loope
and
or
pop
dec
xor
mov
or
outs
mov
or
cmp
ror
sar
pushf
inc
leave
lods
add
xor
out
add
adc
add
and
(bad)
jl
xor
push
adc
or
mov
cld
xchg
dec
fild
movs
xor
mov
sub
sbb
or
add
and
xchg
jns
in
add
loopne
pop
push
push
add
mov
dec
adc
mov
and
in
call
cmps
or
inc
sub
mov
pop
ret
sti
sub
inc
pusha
dec
inc
mov
sub
push
and
popa
add
xor
nop
xor
cwde
push
cmp
inc
bound
cdq
add
mov
inc
test
sbb
daa
push
je
cmp
pop
imul
jle
movs
xchg
mov
fidiv
and
jo
pop
into
xchg
and
xchg
rcr
and
pusha
add
and
mov
mov
push
and
add
xor
or
cmp
pop
and
inc
xor
dec
add
dec
push
lea
jecxz
cmp
mov
or
div
jmp
add
push
dec
sbb
jle
cmovae
sbb
mov
mov
int
sub
or
je
add
xchg
and
outs
das
xchg
jbe
xor
jne
loope
(bad)
cli
or
test
outs
out
loop
adc
into
lods
das
adc
dec
scas
test
rol
int3
cmp
jg
ins
sbb
pop
adc
add
and
push
push
dec
and
push
push
inc
movs
dec
pop
push
sub
loopne
push
shl
push
push
dec
popf
sbb
push
push
out
ins
add
and
fnstsw
mov
or
push
scas
movs
cmc
jmp
retf
xor
rol
push
inc
xchg
xchg
cwde
or
mov
rol
fstp
mov
adc
sub
or
daa
or
and
mov
dec
ret
das
mov
xor
mov
add
mov
nop
sbb
pop
iret
push
faddp
inc
jae
jno
add
fldcw
jmp
dec
cmp
push
adc
rcl
mov
pop
dec
dec
pop
or
cmp
xor
pop
movs
pop
pop
pop
add
loope
cmp
ret
and
dec
dec
push
ja
sub
xchg
pusha
pusha
jecxz
and
cmp
mov
and
add
push
js
sbb
mov
dec
jns
or
mov
and
mov
out
dec
or
push
mov
xchg
mov
sub
add
lahf
xchg
rol
push
pop
adc
sub
add
add
es
pop
push
jo
jb
jnp
mov
or
or
and
xor
stos
mov
in
and
pushf
imul
sar
sbb
movs
sub
dec
loopne
inc
jnp
push
sub
mov
mov
das
add
pop
xchg
fwait
call
sub
mov
imul
mov
adc
and
mov
or
ins
push
jo
jl
enter
mov
inc
adc
xor
ds
ss
xor
jmp
and
adc
mov
push
pusha
fdivr
ins
fdivrp
pop
mov
and
adc
push
les
sub
retf
test
test
cmp
adc
pusha
mov
rol
adc
push
pop
and
sbb
data16
or
les
push
pop
jmp
mov
jns
pop
adc
cwde
cmp
push
or
mov
inc
mov
xchg
rcl
and
mov
test
add
mov
dec
jmp
xor
or
adc
das
and
ret
pusha
add
popf
push
and
or
and
int3
shr
push
jo
mov
pop
xchg
sub
popa
sub
dec
pop
and
pop
and
push
mov
dec
fcom
mov
sub
aad
mov
dec
test
push
sub
dec
and
add
push
loopne
adc
or
test
inc
popf
adc
ret
movs
adc
mov
ds
dec
mov
hlt
adc
push
inc
js
sub
pop
pusha
scas
ds
xchg
loopne
dec
and
retf
in
inc
or
push
jae
inc
push
xchg
sbb
cmp
inc
jp
push
xlat
imul
add
xchg
loopne
xor
mov
hlt
push
xchg
fmul
xchg
inc
xlat
lea
aam
push
pop
lods
add
inc
push
add
or
dec
fadd
fdivr
and
hlt
aaa
gs
adc
pop
ror
push
add
movs
dec
dec
xor
sub
mov
sub
inc
sbb
xchg
lock
or
cmp
sbb
jbe
dec
mov
add
out
cmp
ins
loope
mov
icebp
pop
push
or
or
mov
div
adc
mov
mov
lea
sbb
test
sbb
add
jno
add
test
add
and
pop
mov
sub
mov
dec
(bad)
fcmovbe
jp
jecxz
test
cmp
mov
push
ret
outs
lock
movs
xor
mov
or
add
xchg
mov
shl
or
or
adc
push
mov
or
repnz
cmp
or
sub
mov
xor
ins
lds
and
xor
pushf
push
imul
sbb
adc
mov
not
jge
pop
sbb
xchg
lods
lods
push
lods
or
mov
jnp
jns
dec
ss
dec
dec
ja
jne
mov
sub
xchg
int3
sub
push
push
xlat
or
ja
push
add
adc
lock
sbb
push
sbb
inc
in
je
sbb
or
lock
xor
and
dec
retf
adc
rcr
mov
repnz
adc
inc
mov
sbb
mov
adc
mov
scas
sub
and
je
fwait
loope
sub
push
mov
dec
add
outs
dec
(bad)
fist
add
ret
xlat
hlt
adc
inc
add
inc
out
in
add
sbb
sbb
cmp
or
sbb
adc
or
in
pusha
sub
push
es
ror
nop
add
clc
lea
inc
or
push
sbb
sub
scas
inc
mov
cmp
and
in
add
push
mov
mov
mov
aam
mov
(bad)
das
pop
mov
jp
xchg
es
sahf
sub
mov
or
add
inc
pushf
hlt
(bad)
push
sar
add
or
jp
movs
punpckhdq
jle
and
nop
or
xor
dec
scas
mov
or
xchg
mov
xor
add
or
loope
inc
lock
inc
push
add
mov
les
or
mov
push
je
inc
push
fidivr
or
mov
cs
mov
push
cmp
movs
xchg
sti
sub
dec
and
int
xchg
push
sbb
xor
call
sub
add
test
mov
fld
mov
pop
fwait
rol
jae
inc
es
xchg
or
inc
cli
fcomp
and
pop
or
daa
inc
lahf
int
outs
jmp
pushf
outs
popa
mov
sbb
rol
mov
iret
mov
mov
in
add
cmp
mov
adc
call
jle
lods
or
repz
movs
out
add
dec
out
xchg
scas
lea
adc
inc
xor
jle
retf
imul
adc
ret
jle
xchg
movs
pop
lds
shl
and
cmp
xchg
mov
dec
and
push
lock
and
cmp
or
xchg
push
adc
xchg
pop
push
daa
or
push
gs
sub
cdq
aaa
and
sbb
mov
jb
sbb
xchg
mov
adc
pop
ficomp
or
mov
ret
xor
sbb
xchg
fs
in
or
out
gs
sub
pop
adc
pop
mov
sbb
inc
inc
adc
dec
add
shl
jno
call
int
out
or
pusha
or
xor
mov
or
pop
push
dec
add
dec
mov
je
add
inc
dec
and
ror
inc
add
(bad)
sub
movs
mov
stos
les
pop
or
adc
sbb
gs
push
adc
ficom
mov
push
push
sbb
arpl
jg
inc
cmp
pop
clc
adc
sbb
js
jmp
into
dec
adc
jb
push
jo
push
push
push
mov
sbb
jmp
pop
call
retf
push
adc
loope
aaa
es
push
in
inc
les
adc
inc
cmp
(bad)
les
lock
sbb
inc
stos
xor
push
sbb
ret
push
ja
or
xchg
repz
cdq
xor
adc
push
test
or
jae
sub
cmp
inc
imul
mov
push
mov
dec
inc
mov
std
inc
mov
sub
adc
mov
imul
push
or
push
test
push
and
ins
imul
adc
jecxz
and
sub
shr
call
xor
or
fistp
mov
and
pop
pop
add
adc
inc
or
inc
inc
sub
xchg
sub
ss
mov
mov
ins
inc
into
xchg
int3
pop
cmp
and
addr16
jmp
add
mov
push
mov
mov
push
pop
sbb
mov
inc
add
or
lock
call
popa
pop
dec
xor
jl
add
mov
out
addr16
push
xor
cmp
sbb
sbb
mov
or
add
ret
ret
and
fcomp
push
or
pop
and
loopne
push
add
pop
pop
int3
vmaxps
adc
ror
(bad)
into
cmps
or
push
and
jl
das
es
xchg
sbb
movzx
(bad)
sub
fist
add
out
imul
push
inc
rol
call
jmp
ja
adc
ins
xor
pop
pop
in
dec
pop
or
jo
jne
inc
ror
jo
sbb
fdiv
mov
xchg
jne
fldenv
sahf
mov
inc
xor
ret
and
or
mov
loopne
(bad)
(bad)
push
adc
sbb
(bad)
jle
and
in
lock
inc
fiadd
push
xor
shl
cmp
out
fxch
ror
push
ds
sub
inc
or
cmps
or
sbb
mov
or
or
fs
(bad)
ret
add
add
ins
ja
add
jmp
inc
jge
scas
adc
jp
dec
test
or
pop
add
clc
scas
into
add
std
aaa
addr16
pop
xor
sbb
jl
inc
sbb
je
add
adc
jnp
or
sub
or
adc
or
aaa
mov
dec
fld
dec
lock
fimul
mov
sub
jne
cmp
cmp
xchg
or
std
clc
fsubp
jmp
push
push
or
sbb
xchg
mov
inc
sti
jge
fsub
mov
lods
ss
mov
call
cmp
clc
data16
mov
fdiv
cmp
push
test
mov
mov
xor
frstor
xor
xor
jmp
(bad)
push
or
pusha
dec
adc
xchg
or
cmps
cli
jbe
push
mov
in
add
jbe
adc
sub
cmp
frstor
mov
leave
(bad)
leave
jmp
test
nop
call
mov
ret
xor
fmulp
inc
mov
sar
sbb
fist
pop
and
or
add
push
sbb
sbb
push
dec
cmp
sbb
fist
xchg
loopne
push
in
mov
push
retf
pop
xor
fstp
retf
lock
lea
push
xor
loope
push
das
sbb
enter
pusha
mov
cmp
pop
outs
aas
push
cli
and
pop
ret
jmp
das
fst
fstp
xchg
adc
das
enter
rcl
cld
bound
or
ja
sbb
call
inc
sbb
ds
enter
or
shl
mov
mov
add
cs
retf
cvtdq2ps
mov
adc
push
mov
pcmpgtb
mov
stc
push
xor
std
ins
shl
fdiv
push
fdivp
fxch
and
push
push
ret
push
add
adc
fxch
pop
sbb
scas
xor
mov
add
mov
inc
mov
fadd
adc
loope
cmps
vmovntpd
nop
lds
jb
fild
sbb
jge
xor
test
js
add
sbb
pop
fucom
or
push
mov
fsubp
fld
fdivp
fld
retw
fsub
mov
hlt
shl
in
popa
ins
xchg
inc
hlt
cli
xchg
movs
cmc
stos
adc
lock
pop
mov
(bad)
xlat
fsubrp
pushf
(bad)
lock
or
enter
or
(bad)
int3
imul
hlt
fstp
fld
shl
adc
sub
daa
dec
mov
stos
cmp
mov
dec
mov
and
js
add
or
and
clc
rcl
and
sti
and
int
nop
es
idiv
aas
sub
(bad)
aam
ins
jmp
and
and
(bad)
(bad)
cmps
cmp
fisttp
pop
cmc
xchg
xchg
in
or
adc
mov
imul
(bad)
mov
inc
int3
stos
mov
mov
cmp
xor
xchg
pop
dec
fisub
leave
push
cmp
in
rcr
xor
fadd
nop
int3
pop
pop
movs
mov
cdq
out
push
fdiv
jp
mov
push
or
lock
and
fcomp
push
inc
sti
pop
pop
cmp
cmp
sbb
add
mov
adc
jo
mov
sahf
sub
or
mov
add
adc
mov
mov
adc
dec
push
shr
shr
call
or
nop
lock
jmp
dec
popa
jl
int
inc
or
add
retf
cmps
fidiv
retf
push
fmul
test
push
push
add
dec
push
adc
les
movs
movs
pop
jnp
jne
or
xor
ret
add
add
jae
inc
dec
add
test
mov
sbb
inc
test
ret
cmp
je
(bad)
sbb
mov
mov
movs
jbe
dec
aam
mov
cmp
inc
push
inc
(bad)
pop
in
inc
inc
and
inc
lods
jp
pushf
add
xor
imul
mov
out
sbb
ret
push
mov
dec
jl
inc
mov
push
cwde
dec
push
add
inc
shr
pop
mov
push
aam
jbe
test
xlat
add
loopne
lods
sbb
dec
push
xor
fidivr
out
lock
adc
cmp
or
shl
icebp
imul
or
in
mov
mov
inc
add
or
lock
fmul
dec
sub
leave
imul
jbe
repnz
loopne
xor
jae
pop
xchg
mov
or
les
xchg
(bad)
jle
ins
imul
loop
adc
and
pop
jle
sub
mov
add
cmp
ret
push
sub
push
jp
int3
add
pop
outs
cli
mul
mov
push
cli
scas
ins
shr
movs
movs
icebp
loope
or
test
xchg
loop
mov
movs
outs
ret
xchg
dec
in
and
cmp
jmp
je
fcom
sub
fnsave
fwait
cmp
movs
lds
mov
sbb
or
or
dec
ins
call
imul
int3
xor
push
repnz
adc
sbb
inc
cwde
call
push
and
adc
dec
cdq
out
push
add
push
scas
jp
push
and
jmp
psrld
push
adc
jl
jb
adc
ins
add
outs
aaa
sbb
xchg
scas
sbb
and
push
add
push
or
or
sub
mov
cmp
mov
sbb
aad
test
sub
and
adc
push
mov
leave
jns
ins
xor
shl
push
mov
add
or
fisub
pusha
dec
(bad)
out
(bad)
adc
ins
dec
or
inc
adc
es
jmp
pop
or
sbb
clc
adc
mov
add
scas
call
jb
and
push
out
cmp
movs
arpl
mov
mov
cmc
adc
and
dec
jmp
cwde
and
movs
jle
jno
out
stos
test
imul
push
leave
jmp
dec
or
sub
not
push
fcom
call
pop
push
leave
popf
fcom
push
push
pop
cmp
sbb
data16
add
inc
ins
or
mov
aam
xchg
mov
cmps
mov
shl
adc
jae
jp
xlat
mov
sub
lahf
les
outs
push
jge
(bad)
cmp
(bad)
mov
cmc
add
aam
push
adc
and
rol
jge
scas
aad
pop
cmp
mov
dec
call
mov
popa
jnp
inc
sbb
pop
mov
shl
jbe
test
jb
xchg
test
loop
nop
mov
pop
mov
in
cmp
push
inc
mov
inc
mov
ds
add
cmp
add
(bad)
pop
js
adc
and
jne
fisttp
pop
data16
push
push
or
inc
out
iret
sub
ds
jo
in
mov
ror
xor
and
fldcw
jecxz
mov
xchg
out
fcom
xlat
add
adc
nop
mov
jmp
mov
push
daa
dec
and
sub
test
fdiv
fadd
push
inc
pop
in
lods
xor
dec
pop
and
in
in
cmp
or
and
add
mov
loop
dec
add
push
mov
xor
js
or
mov
mov
ret
and
xchg
cmc
call
add
mov
cwde
jno
and
repnz
rcl
sbb
mov
xor
xchg
clc
add
sub
or
add
push
arpl
std
dec
ror
pop
retf
cdq
and
or
ss
ror
xchg
xchg
adc
sub
push
xchg
xor
jne
hlt
jl
xchg
add
bound
push
int
push
cmp
imul
imul
dec
push
fdiv
jns
int3
mov
mov
jbe
fwait
pop
popf
push
fidivr
jmp
jmp
dec
push
sbb
sbb
sub
cmp
sar
mov
and
neg
lea
test
add
mov
int3
jl
push
mov
dec
sbb
lock
mov
push
(bad)
push
movs
mov
std
out
pmulhuw
lea
mov
mov
mov
out
inc
mov
out
cmp
mov
dec
int3
jle
push
add
jno
adc
dec
dec
pop
sub
pop
sar
shr
jmp
ret
clc
int3
push
les
fs
add
int3
add
mov
or
mov
and
or
loope
or
add
shr
cwde
push
outs
mov
inc
ja
pop
push
fs
mov
push
ins
int
pop
inc
xchg
pop
test
sbb
pop
pop
dec
adc
test
sub
jbe
inc
mov
cmp
pop
jg
xor
aad
mov
mov
jne
push
push
add
call
sbb
scas
or
sub
xchg
int3
sub
mov
adc
xchg
shr
cs
pushf
enter
sbb
add
in
adc
add
(bad)
add
add
or
and
sub
or
xor
adc
add
ror
cmps
pushf
xchg
jecxz
movs
cmp
push
mov
sbb
xor
sub
add
mov
inc
or
jnp
stc
sub
pop
add
sbb
cmps
mov
rcl
and
loopne
cmp
and
mov
xor
push
out
mov
cmp
cmps
aaa
(bad)
mov
inc
mov
mov
jnp
cdq
add
cmp
enter
adc
int3
sbb
sbb
mov
and
ins
shl
push
sbb
push
sbb
xor
mov
sbb
sub
xor
or
push
movs
je
mov
push
dec
jecxz
and
push
dec
push
fs
or
xor
or
push
and
lock
loopne
mov
stos
sbb
add
add
push
das
jmp
repnz
cmps
shr
adc
add
jmp
aam
popa
call
adc
(bad)
cmp
add
push
shr
int3
data16
ret
cmp
data16
dec
(bad)
sub
pop
pop
int3
shl
inc
push
add
xor
clc
aam
inc
add
ins
ss
loop
or
loopne
fcom
pop
dec
jae
and
add
sar
sar
mov
adc
cld
adc
leave
lods
xor
xor
xchg
jmp
cli
add
push
cld
inc
cmp
adc
dec
shr
into
add
adc
add
(bad)
fadd
push
rcr
push
xor
les
dec
inc
push
or
mov
xlat
cmp
stc
add
adc
jne
xchg
add
pop
add
mov
shr
daa
cwde
mov
dec
test
mov
fcom
jnp
cs
shl
inc
xchg
sub
xor
lea
cmp
lea
or
xchg
sbb
call
lock
pop
loope
in
add
je
push
add
mov
int3
cmp
add
hlt
add
aam
sbb
adc
mov
and
pop
mov
(bad)
pushf
sbb
xor
adc
sbb
nop
adc
sub
dec
xchg
(bad)
sbb
scas
or
adc
xchg
ret
add
lods
xlat
leave
enter
shl
xchg
nop
retf
popa
add
and
or
push
rcl
push
sbb
mov
inc
loopne
add
daa
sub
jae
sub
inc
call
enter
jmp
sbb
pop
pop
sub
adc
add
xchg
xchg
into
psrad
fld
mov
xor
or
sti
nop
dec
adc
nop
fstp
das
outs
jne
leave
pop
push
push
js
sub
or
popf
or
adc
data16
loop
push
bound
aas
cmp
gs
mov
iret
push
out
adc
adc
and
nop
(bad)
add
ror
(bad)
xor
fidiv
fnstenv
les
pop
adc
sub
mov
sbb
jle
fimul
xor
xor
push
push
mov
push
int3
int3
outs
fnstsw
or
push
into
into
fsubr
jl
push
call
and
bound
mov
dec
xchg
js
add
call
retf
mov
add
dec
retf
lods
retf
pop
js
nop
jg
fdiv
ret
push
or
mov
push
push
add
mov
fs
and
sbb
fwait
cdq
add
cld
(bad)
sub
pop
enter
add
adc
push
sahf
ret
inc
ins
add
dec
call
in
xchg
cmp
xor
mov
or
cdq
popa
rol
add
mov
and
pushf
sti
add
pop
sbb
or
xor
jnp
pop
xchg
je
mov
add
push
mov
and
movs
add
mov
ret
lea
push
push
push
mov
ss
neg
cwde
adc
push
or
loopne
pop
lods
es
mov
dec
stos
push
or
jmp
add
pop
sub
sub
mov
cdq
test
test
mov
or
movs
les
xchg
push
shl
mov
sbb
shl
inc
scas
or
pop
fs
adc
je
loopne
xor
shr
cli
mov
add
jmp
push
push
inc
mov
test
add
sub
bound
pop
scas
sti
call
inc
push
dec
in
mov
movs
jbe
add
ret
int3
sbb
cmp
repz
xor
pop
xchg
xchg
mov
sub
gs
out
add
push
push
mov
push
xor
push
jecxz
lfs
mov
inc
cwde
jo
fwait
inc
cmp
inc
movs
mov
rcr
adc
push
dec
sub
jmp
cmps
cmp
call
adc
mov
sub
outs
add
mov
push
push
sub
xchg
jo
fcomp
sub
inc
mov
loopne
movs
js
inc
inc
pusha
int3
cmp
enter
sbb
adc
push
jge
sub
inc
fdivr
jle
push
enter
push
and
or
mov
call
lods
test
sbb
mov
and
add
pop
inc
mov
sub
mov
dec
adc
nop
je
ins
movs
pop
test
pop
inc
icebp
outs
jl
pop
lods
mov
es
aaa
(bad)
enter
push
bound
loopne
mov
ja
fdivr
enter
sub
bound
jl
push
rcl
xchg
jno
(bad)
pop
int3
jl
movs
add
xor
or
jp
push
nop
lods
and
in
xor
test
inc
jno
scas
mov
sbb
out
js
rol
xor
(bad)
mov
push
sub
ret
outs
dec
add
or
arpl
loope
rol
add
inc
(bad)
fst
mov
loopne
cmc
cwde
mov
or
in
jmp
lea
leave
cmp
stc
push
ffree
gs
rcl
push
in
jge
push
push
mov
xor
jno
loop
push
adc
inc
and
fsubr
xchg
pop
pop
jg
push
sub
push
sbb
shl
add
ins
inc
mov
sbb
dec
inc
mov
nop
mov
icebp
mov
sbb
sbb
add
aad
icebp
int3
pop
shr
pushf
loopne
call
jae
push
xor
or
les
aaa
and
cmps
scas
mov
(bad)
mov
inc
mov
in
sar
mov
ins
xor
lods
mov
and
or
or
rcl
push
fcomip
pushf
fdivr
jno
add
jmp
ret
mov
test
(bad)
retf
(bad)
push
jno
jl
repnz
pop
data16
and
(bad)
aam
daa
mov
sub
mov
call
lock
add
js
imul
rcr
mov
imul
ret
cmps
sbb
es
enter
cmp
push
lods
(bad)
test
les
mov
cmp
scas
add
sub
xor
test
add
mov
fstp
inc
shr
bnd
cmp
cmp
adc
adc
dec
pop
or
push
jo
cmp
div
ret
xchg
cdq
ret
lock
hlt
adc
mov
ret
cmp
mov
sar
cs
je
ret
mov
pop
aam
lahf
(bad)
mov
cdq
bound
sbb
leave
pushf
mov
xor
adc
mov
jne
push
mov
sub
ret
cld
or
out
sbb
pop
and
popf
mov
jge
mov
cmp
fdiv
out
cmp
mov
dec
mov
inc
inc
test
or
push
test
mov
cmc
or
and
test
rcr
dec
xor
and
xchg
ret
and
or
add
or
pop
sub
cs
sub
imul
repz
push
cmp
inc
fcomip
push
int3
popa
mov
popa
and
jle
add
xchg
int
shl
dec
push
ror
mov
gs
fldz
lea
fnstenv
dec
fld
dec
pop
inc
sub
jecxz
cmps
aam
xchg
ret
ret
sbb
mov
pusha
fsub
sbb
mov
pop
fxch
push
push
shr
push
or
jecxz
pop
nop
or
test
les
icebp
pop
xor
xchg
sub
jp
mov
(bad)
sub
aam
test
and
pop
fld
sub
fadd
sub
mov
inc
xchg
stc
xchg
pop
into
fidiv
(bad)
call
shr
dec
or
cdq
shr
push
xor
lea
xchg
and
(bad)
int3
sub
ins
mov
mov
dec
and
cli
sbb
loop
push
retf
sahf
dec
int
push
xor
(bad)
jg
mov
mov
inc
je
sahf
dec
jne
pop
and
and
lea
push
xchg
xchg
and
ja
inc
mov
rep
neg
push
sbb
and
ins
call
fwait
inc
outs
inc
and
fs
xor
dec
test
pop
adc
inc
xor
sub
inc
gs
lock
(bad)
retf
fmul
mov
imul
shl
or
ja
jbe
push
push
arpl
sub
fcomp
pop
or
aam
int3
pusha
ins
or
dec
test
dec
adc
add
jl
push
add
test
clc
and
lock
bound
in
fadd
dec
(bad)
adc
nop
fidiv
fild
xor
ret
into
in
xor
fist
and
and
adc
jmp
ss
mov
sub
in
ins
ror
mov
sub
rcl
inc
in
rcr
dec
mov
mov
pop
inc
xor
add
lock
push
pop
pop
movs
mov
mov
jmp
adc
pop
lahf
or
mov
enter
xchg
xor
rol
sub
aas
add
dec
inc
or
dec
dec
ret
xchg
push
add
out
push
and
pop
call
jns
jns
and
xlat
mov
or
and
dec
or
loop
aad
in
push
inc
inc
dec
outs
mov
xor
or
add
xchg
and
scas
inc
jmp
adc
std
sbb
loop
dec
std
ror
inc
inc
int
dec
or
adc
push
inc
and
or
xor
les
push
mov
push
xchg
sbb
adc
fild
loop
sub
add
xchg
fadd
push
daa
aad
sbb
adc
dec
push
dec
push
xchg
push
ins
push
call
loopne
and
mov
xor
clc
adc
cs
daa
add
jmp
push
add
fisub
nop
xchg
cdq
and
adc
cmp
rol
jns
mov
jne
out
sbb
sbb
shl
les
pusha
sti
fmul
in
test
test
leave
sbb
pop
or
stos
or
jmp
jecxz
daa
adc
mov
shl
dec
xor
mov
test
mov
jmp
mov
sub
push
or
jle
and
dec
jl
push
jl
pop
aaa
cld
cmps
dec
add
or
lea
dec
mov
pop
sbb
nop
rol
cmp
aad
sub
or
sub
cmp
inc
sbb
or
(bad)
jg
cmp
mov
or
(bad)
mov
push
pop
in
loopne
jo
sub
inc
(bad)
(bad)
push
jecxz
lods
inc
jo
add
neg
mov
je
pop
mov
xor
inc
movs
mov
add
fwait
retf
jmp
cmc
call
xor
lea
mov
mov
dec
call
daa
inc
xor
adc
rcl
mov
inc
inc
jp
sbb
pop
mov
scas
movs
push
test
sbb
mov
pop
or
ja
(bad)
fnstenv
push
or
cs
retf
inc
push
cmp
sub
mov
movs
jbe
and
cmp
sbb
popa
inc
dec
imul
push
push
xlat
mov
or
push
mov
dec
fwait
pop
in
repz
push
sub
pop
adc
or
add
jnp
or
pop
imul
ret
imul
int
or
pop
movs
ja
pop
shl
popa
pop
mov
pcmpeqb
lods
je
or
or
mov
mov
scas
pop
mov
fwait
push
lods
cmpps
add
and
loop
add
mov
pop
(bad)
mov
add
adc
pop
ja
cwde
loop
add
jl
sub
(bad)
inc
jg
sbb
push
and
jge
icebp
inc
adc
out
or
add
mov
adc
xor
add
sub
sar
add
push
retf
mov
lods
aas
ficom
fild
shl
stc
outs
inc
xor
sub
or
mov
cmps
jbe
ins
ror
dec
fild
pusha
ins
fisttp
fisub
fdiv
dec
rol
push
outs
sbb
inc
jmp
push
push
cmc
mov
add
mov
sub
add
inc
int3
xchg
test
ss
cwde
inc
mov
or
jno
adc
aas
and
in
cld
or
xchg
mov
cmc
jmp
mov
add
sub
cdq
rcr
je
sub
and
or
mov
jns
lahf
aam
and
js
retf
and
mov
dec
neg
pop
xlat
cs
nop
jl
dec
add
test
out
and
add
xor
nop
jp
and
imul
or
stos
xor
push
sbb
pop
rep
add
or
movs
lods
mov
movs
sbb
in
xor
lock
inc
shr
jo
add
add
xchg
adc
mov
cmp
sbb
fisub
add
jno
shr
imul
mov
arpl
(bad)
and
push
je
adc
inc
sub
xchg
pop
fiadd
inc
adc
fadd
pop
adc
pop
call
leave
mov
sbb
and
rcl
ret
sub
loop
shl
jb
push
jno
jmp
push
and
and
push
dec
les
jns
add
dec
dec
inc
inc
add
add
retf
jnp
fisttp
push
or
iret
sahf
into
xchg
aad
inc
dec
in
push
inc
add
in
(bad)
xlat
sub
sbb
jbe
add
nop
aam
push
sbb
inc
(bad)
xchg
pop
inc
addr16
add
cmps
dec
loope
and
cwde
out
cmp
(bad)
push
jge
mov
out
xor
out
aas
pop
push
sbb
xor
out
xchg
or
call
xchg
or
xchg
xor
pshufw
ss
dec
addr16
cs
pop
add
or
inc
push
std
lods
int
pop
loopne
sbb
rcl
and
jb
cmps
inc
cmp
push
push
sub
push
xor
xchg
ins
leave
sub
add
mul
jecxz
mov
fwait
sbb
aam
pop
push
repnz
sbb
xor
jb
add
add
(bad)
aam
das
nop
and
sbb
xchg
inc
pusha
push
pusha
(bad)
test
rcl
fldenv
fild
cwde
dec
cmp
nop
jb
cmp
imul
push
push
push
mov
sbb
mov
imul
ror
ret
dec
push
push
sub
pusha
adc
or
xchg
jns
aam
add
push
xor
aas
add
adc
repnz
repz
shl
cmps
xchg
(bad)
movs
push
xchg
dec
pop
pushf
push
jno
push
pop
xchg
jno
jp
sbb
in
sub
lahf
adc
sub
cmp
setno
jge
push
ret
movs
hlt
xor
or
pop
fadd
adc
sub
mov
push
mov
or
fcomp
add
movzx
clc
out
in
xchg
push
mov
lds
push
shr
sbb
mov
mov
pop
pop
clc
and
and
jns
imul
mov
add
clc
fsub
or
(bad)
ror
push
popf
and
push
or
data16
mov
inc
iret
xor
pusha
and
mov
xor
sub
sub
ins
in
jae
mov
sbb
sub
and
mov
sbb
cli
push
add
adc
and
xchg
and
xchg
jmp
fs
in
and
add
push
mov
imul
push
aas
cmp
and
or
lahf
clc
out
test
ins
xchg
sbb
mov
ins
pop
cs
sub
add
lds
daa
(bad)
retf
push
add
sbb
pop
xchg
imul
mov
jmp
or
add
pop
xor
cmp
cs
inc
cwde
mov
(bad)
imul
dec
and
in
test
pop
cmp
mov
int3
inc
jno
inc
or
in
mov
adc
and
not
or
pop
add
jo
push
leave
fdiv
push
ss
push
jnp
xchg
repnz
and
push
push
mov
jg
shl
fcmovne
push
push
jae
ins
sub
(bad)
jns
pop
push
dec
je
xchg
xchg
mov
sbb
adc
bound
and
inc
fucomip
dec
mov
xor
cmp
pslld
mov
cmp
fdiv
mov
pop
aad
rol
cld
pusha
sub
adc
les
push
js
retf
loope
add
cmp
or
lock
add
inc
xchg
(bad)
das
nop
sub
mov
adc
adc
inc
mov
xchg
aaa
add
test
adc
aad
lods
add
popa
dec
dec
adc
push
in
mov
fs
pop
mov
and
or
xor
and
scas
sbb
pusha
ret
xlat
dec
ins
and
xchg
xchg
sub
cdq
pop
lock
adc
loopne
xor
push
mov
cmc
add
rcl
dec
pop
(bad)
fsub
adc
mov
and
sbb
cmps
fdivr
push
daa
mov
jns
cwde
iret
(bad)
and
mov
cmp
jge
inc
add
pop
inc
sbb
sub
dec
cmp
idiv
je
cmp
add
mov
dec
pop
mov
shl
xor
sbb
add
push
add
ret
imul
inc
jge
push
cmp
add
xor
or
addr16
sub
xor
test
jmp
pop
bound
or
fwait
or
fcom
adc
or
dec
xor
lods
shl
fdivr
lock
out
repz
cmp
xchg
loop
add
push
iret
push
lds
in
loopne
adc
xchg
cs
mov
leave
popf
ss
push
in
out
jl
bound
jmp
imul
and
popa
mov
sub
ret
fwait
or
es
test
dec
cmps
push
add
mov
(bad)
pop
and
(bad)
mov
inc
xor
sbb
pop
cmp
cmps
cmp
jmp
ja
test
push
mov
push
sub
loopne
ds
adc
ins
test
std
stc
sub
jb
mov
add
mov
je
arpl
jecxz
ins
mov
inc
scas
jmp
sbb
ror
and
popa
add
mov
push
mov
sbb
mov
in
jmp
jne
retf
sub
push
jmp
xor
clc
sub
jne
adc
adc
ret
jle
rcl
in
loope
jns
dec
add
xchg
push
sbb
add
jns
push
dec
cmp
dec
ficom
sbb
in
add
pop
lea
xor
loopne
fwait
cmc
mov
rcl
mov
add
push
sahf
or
and
cdq
test
fiadd
stos
and
and
and
adc
pusha
add
cld
fistp
ret
sub
inc
inc
jle
es
cmp
jmp
shl
cmp
lods
inc
cmp
jl
pop
imul
test
sub
and
cli
inc
push
fs
aas
cmps
adc
jb
adc
(bad)
cmp
ja
sub
js
adc
xor
pop
rol
(bad)
call
lea
add
push
adc
sar
adc
repnz
jge
shl
add
xchg
mov
movs
enter
shr
mov
pusha
mov
jbe
jle
ror
pop
add
xchg
xor
add
pop
add
mov
push
inc
dec
inc
inc
sbb
sub
add
xor
fs
mov
xchg
scas
push
popa
and
pop
shl
ins
popa
aad
sub
or
push
aam
mov
or
stc
lea
xchg
inc
sbb
cli
in
sub
inc
(bad)
fsubr
and
cli
imul
add
sti
dec
add
data16
push
sbb
push
inc
loope
mov
shl
(bad)
in
das
xchg
adc
sar
cli
xchg
sub
xor
add
or
pop
inc
adc
jne
push
jmp
mov
test
pop
add
dec
xor
pop
inc
mov
push
add
adc
call
lock
jecxz
test
repz
in
pop
or
sbb
or
cmp
xchg
xor
push
daa
fs
retf
or
inc
xor
into
(bad)
sub
or
jo
test
mov
cbw
push
sbb
retf
(bad)
in
dec
push
test
mov
loopne
xchg
dec
repz
push
sub
push
aas
pop
in
mov
retf
and
mov
movs
jno
sbb
inc
pop
movs
cwde
mov
fnstsw
and
inc
loopne
and
in
xchg
test
call
mov
mov
sub
nop
xor
add
add
xchg
add
and
shr
les
push
sbb
fs
mov
mov
test
push
jle
ror
loope
cld
mov
add
fst
or
or
push
fist
jmp
test
daa
xchg
mov
stos
mov
dec
jmp
iret
and
es
xlat
dec
or
add
leave
mov
and
add
or
js
stc
sar
(bad)
cmp
pop
shr
push
arpl
add
clc
mov
adc
lea
push
sbb
sub
mov
add
iret
inc
jmp
sbb
aad
add
stc
add
xor
fstp
add
push
mov
cmp
icebp
mov
pop
pop
pop
and
sub
pusha
mov
ins
nop
mov
dec
call
nop
inc
pop
pop
js
outs
cdq
jb
add
inc
mov
fld
mov
add
xor
rcl
cmp
push
mov
inc
jl
mov
push
loope
dec
in
das
cmp
es
rol
or
inc
add
xchg
mov
add
inc
sub
cmp
xchg
inc
lea
and
mov
add
dec
inc
cmc
out
add
dec
ds
fist
and
retf
mov
pop
cmp
add
xchg
ss
mov
cmp
adc
sub
xchg
sub
adc
aam
xchg
js
xor
cmps
add
cdq
adc
sbb
adc
bound
xor
sbb
pushf
rcl
(bad)
push
push
and
mov
mov
sub
(bad)
and
add
cld
sbb
mov
adc
cmp
aas
jbe
ud2
or
nop
mov
mov
adc
call
or
push
mov
jmp
inc
push
jno
add
sbb
inc
or
adc
icebp
sbb
mov
aad
ins
stc
xor
fsubr
or
pop
rol
(bad)
adc
adc
out
loope
and
sub
adc
push
or
push
push
xor
cmp
cmp
inc
add
jmp
pop
mov
push
jecxz
and
dec
or
sub
pop
cmp
pop
and
jo
xor
aaa
mov
sub
inc
mov
or
or
adc
dec
or
cmp
xchg
xor
xor
mov
mov
push
jecxz
sbb
and
repz
in
loope
jmp
sbb
cmp
daa
pusha
aam
xor
mov
imul
adc
ss
adc
int
lea
xchg
mov
pop
push
and
push
adc
and
ror
mov
sub
sub
push
inc
fdivr
xor
add
dec
or
fsub
call
sbb
push
mov
shl
enter
enter
sahf
jb
push
fld
mov
mov
jecxz
bound
push
in
mov
loopne
in
add
leave
cmps
in
cmp
xor
mov
inc
sbb
or
or
movs
iret
mov
cmp
ins
push
lds
sub
sbb
aam
jmp
mov
xor
or
mov
mov
pop
push
push
fadd
jbe
jmp
lahf
xchg
or
imul
cmp
sbb
daa
mov
adc
sbb
imul
fist
leave
shl
popa
mov
mov
(bad)
sbb
sbb
sub
dec
inc
ror
jp
jmp
(bad)
sub
push
or
and
push
arpl
cmp
xchg
xchg
dec
add
add
sub
xchg
sub
pop
mov
sub
sti
nop
adc
xchg
dec
aam
lds
add
adc
mov
mov
repz
jne
mov
dec
add
mov
inc
js
sub
int3
push
mov
retf
pop
jb
and
inc
mov
dec
or
mov
xchg
popf
test
sbb
or
shl
test
sbb
mov
lock
adc
xchg
jne
and
cmps
and
jmp
adc
or
push
inc
inc
in
imul
jg
and
jle
lock
fiadd
mov
add
icebp
not
xchg
mov
adc
mov
sub
push
jns
mov
add
fwait
xchg
pop
xor
sub
ret
repnz
jmp
push
dec
mov
fwait
sub
in
inc
dec
(bad)
dec
cmp
inc
hlt
xor
mov
sub
fcomi
aam
ror
enter
or
pop
(bad)
jo
adc
cwde
pop
mov
and
mov
inc
adc
inc
xchg
mov
outs
and
jmp
mov
daa
or
push
sub
mov
cmp
bswap
add
push
and
bound
or
xchg
int3
fsubrp
jne
inc
lahf
jno
or
stos
ins
mov
push
sbb
ja
add
pop
fstp
sbb
setb
xchg
pop
or
inc
and
add
add
pop
jae
ret
add
fimul
outs
mov
call
xchg
jmp
jb
jmp
sbb
mov
nop
cmc
mov
aas
mov
add
adc
push
aas
xchg
cmps
int
mov
pop
ror
cmp
movs
add
les
mov
in
popf
and
jp
imul
iret
fmul
add
mov
pop
xchg
or
iret
dec
jbe
or
ret
push
mov
lock
mov
pop
nop
mov
retf
xchg
sub
rol
cmp
or
xchg
mov
cmp
enter
repnz
popa
fucomp
test
sub
frstor
sub
sub
or
loope
adc
pop
inc
or
push
pop
cmp
adc
imul
pushf
inc
push
inc
and
dec
(bad)
sub
iret
sub
imul
mov
mov
dec
ror
pop
cmp
xor
or
dec
add
sbb
jns
adc
jne
test
or
jg
jb
add
mov
mov
(bad)
out
or
xor
or
dec
mov
sbb
cmc
out
lods
xchg
es
xchg
js
mov
sub
mov
pop
stos
dec
int3
sub
jecxz
shl
push
xor
leave
sbb
jne
pop
popa
cmp
add
jbe
shl
or
push
or
or
and
jmp
call
push
out
xor
push
push
sub
fsubr
or
and
xchg
sub
xchg
ja
mov
lsl
pop
pop
mov
mov
jl
xor
ja
push
js
outs
mov
pop
mov
out
in
sbb
inc
lea
dec
clc
sub
adc
adc
fsub
mov
add
ss
adc
enter
or
sub
rol
cmc
pop
mov
cld
xchg
pushf
je
sub
pop
(bad)
fdiv
mov
fdivr
inc
shl
inc
dec
xchg
push
mov
rol
xor
movs
mov
sub
test
sub
jbe
fmul
mov
cs
sbb
sbb
xor
pushf
mov
xor
cld
mov
(bad)
and
push
xor
fdivr
sub
loopne
int
cmp
adc
mov
sahf
pop
push
aas
or
nop
adc
test
mov
inc
bound
dec
mov
push
push
push
push
xchg
push
xor
adc
jge
test
(bad)
ds
jmp
pop
adc
fldenv
or
(bad)
arpl
fld
stc
aas
and
jge
mov
leave
adc
mov
aad
rcl
sbb
xor
sar
aam
(bad)
push
int
xor
(bad)
retf
and
dec
push
out
clc
scas
xchg
fmul
in
fucomip
outs
xchg
xchg
sbb
cmp
adc
push
cmp
fwait
cmp
or
sub
fmul
iret
inc
adc
sbb
cmp
push
and
int
lods
add
sbb
push
and
mov
jle
jmp
popa
xor
cmp
cmps
jge
popa
fisub
add
xchg
ror
dec
adc
push
imul
or
jo
xor
lock
ins
adc
outs
lea
fldenv
push
lods
sbb
adc
pop
retf
sub
sti
mov
sbb
add
adc
cmps
movs
test
mov
adc
cmp
or
daa
pop
sbb
jmp
pop
jmp
(bad)
jmp
sbb
add
test
dec
mov
test
mov
xor
xlat
xchg
call
pop
sti
push
inc
jns
push
jmp
(bad)
dec
ins
sbb
rcl
retf
cmp
jns
loopne
(bad)
shr
mov
or
inc
xor
int3
adc
xor
adc
add
and
fsub
sub
mov
xor
(bad)
cmp
and
sbb
xchg
push
adc
inc
mov
call
xor
aas
inc
pop
js
mov
es
rol
clc
sub
ret
inc
and
pop
add
nop
add
jo
aam
pop
dec
add
adc
inc
inc
adc
fldcw
ds
ss
mov
sbb
dec
push
mov
shl
mov
cmps
fnstsw
mov
pop
sbb
inc
pusha
hlt
lods
enter
pop
xor
enter
push
dec
movs
mov
mov
fstp
dec
mov
sub
das
xor
repz
inc
push
push
sub
mov
push
jbe
or
jmp
popf
and
pop
mov
fmul
shr
pop
rol
cwde
sub
push
and
mov
and
adc
add
daa
add
xchg
add
in
xchg
es
aam
in
sub
or
pop
adc
cmc
jb
fadd
push
mov
shl
jne
or
dec
and
push
cmc
pop
fcmove
(bad)
jnp
add
stos
mov
sub
sub
push
mov
daa
cdq
add
sub
cmp
add
ss
repnz
mov
or
pop
movs
jo
bound
mov
adc
pop
dec
and
and
ror
mov
mov
push
and
cmp
jmp
add
jecxz
xchg
pop
push
adc
retf
in
sbb
test
div
mov
dec
or
or
pop
push
js
mov
jns
or
push
shr
and
sub
push
in
fld
adc
pop
es
fldenv
pop
daa
es
test
fsubr
xor
sub
dec
jnp
sub
and
shr
xor
mov
cmp
pop
pop
xor
call
add
xor
add
push
rol
daa
and
fwait
sbb
cwde
mov
lea
inc
add
sub
sub
mov
aas
add
or
push
cmc
mov
outs
aas
sbb
sbb
or
xlat
fnstenv
mov
sbb
enter
and
push
mov
mov
dec
shr
dec
adc
or
cmp
sbb
mov
aam
out
xchg
fst
push
cmp
push
adc
shl
dec
cli
iret
mov
bound
pop
add
inc
cdq
sahf
add
adc
pop
sbb
dec
push
dec
xchg
jbe
shl
mov
xor
inc
cmc
mov
adc
add
push
fistp
or
dec
cdq
dec
hlt
jae
fs
mov
pop
dec
mov
or
cmps
jno
push
pop
xor
rcl
add
sbb
add
dec
add
push
sbb
push
sbb
mov
fs
xchg
imul
add
pop
mov
mov
inc
dec
adc
dec
jge
mov
jp
push
popa
add
xchg
cwde
pop
add
sar
jge
sbb
(bad)
pop
pop
push
add
lahf
cmp
or
ja
xchg
dec
mov
mov
mov
mov
dec
xchg
and
and
jg
adc
lods
inc
stos
and
lods
adc
loopne
test
test
inc
mov
data16
fild
jge
stc
push
jno
test
clc
jbe
mov
pop
ss
jne
lock
add
jnp
jl
fld
xor
cmps
arpl
stos
aam
mov
mov
pusha
cmp
je
push
sbb
popa
push
add
fild
frstor
mov
nop
gs
and
dec
ss
inc
mov
leave
push
push
mov
and
setg
inc
imul
or
iret
dec
push
jb
pop
shl
dec
xchg
push
fimul
neg
dec
push
into
je
and
sub
and
inc
out
je
or
mov
push
and
sub
adc
test
test
dec
push
jns
es
mov
jns
or
fcmovb
out
adc
xchg
inc
fdivr
test
shl
mov
mov
mov
sti
and
add
push
cmp
jmp
xor
adc
jae
loope
ins
adc
mov
xor
or
xchg
sub
push
lock
mov
jmp
and
jecxz
inc
sbb
in
mov
popa
rol
cwde
sbb
scas
or
dec
inc
movs
popa
imul
pop
sub
xor
in
add
mov
test
cmps
sbb
call
mov
adc
fiadd
pop
push
call
pop
and
push
js
adc
add
loopne
sbb
push
retf
je
cmps
movs
retf
pop
sbb
mov
into
inc
hlt
jge
(bad)
mov
add
or
ins
dec
mov
dec
adc
push
and
add
call
adc
out
sbb
stc
add
mov
add
xor
mov
retf
ja
dec
sbb
add
mov
mov
popf
ds
adc
in
and
bound
sbb
pop
inc
movs
inc
call
or
(bad)
push
lea
adc
dec
xchg
int
dec
pop
add
and
movs
add
adc
jne
adc
test
and
or
mov
outs
sbb
rcr
push
loopne
lock
mov
add
ins
xchg
cmp
jmp
ret
dec
add
or
mov
mov
aaa
loopne
mov
mov
inc
sub
adc
sbb
sub
pushf
retf
stc
xor
ret
je
xchg
jo
pop
xor
add
pop
adc
lods
inc
dec
dec
jns
rcl
mov
and
add
add
xor
xchg
or
and
and
(bad)
xor
xchg
cs
aad
add
add
mov
not
mov
or
xor
clc
mov
push
inc
cmp
scas
cmp
adc
pusha
add
jle
push
outs
xor
sbb
jle
(bad)
fcomp
jnp
pop
jg
adc
fld
ins
test
push
xor
xchg
mov
nop
inc
idiv
test
dec
ss
or
dec
inc
inc
jmp
dec
mov
dec
sar
ins
daa
adc
cmps
popa
inc
shr
stos
clc
add
push
js
adc
vcmpsd
popf
jne
or
inc
xchg
mov
test
jne
jl
leave
pop
sub
scas
aam
xchg
xchg
and
sar
movs
les
inc
(bad)
add
inc
je
xchg
inc
repnz
inc
xor
sbb
in
sub
xor
sbb
push
and
jmp
stos
mov
popa
lds
sbb
pop
inc
mov
mov
xor
sbb
popa
and
test
push
inc
xor
inc
inc
sbb
add
test
out
xor
jbe
add
or
xor
push
sbb
rcl
movs
mov
jecxz
lods
dec
fiadd
or
dec
es
xchg
sub
mov
push
mov
xchg
retf
mov
inc
call
popf
push
int
std
xchg
icebp
push
adc
fisttp
pop
or
movs
movs
mov
mov
stos
xor
push
and
fist
inc
shl
xor
loope
lock
sub
sub
call
add
jp
mov
lods
or
sar
test
shr
jle
in
mov
mov
icebp
pop
out
add
inc
out
mov
xor
test
je
test
movs
mov
pusha
push
cmp
and
lods
pop
push
ret
in
outs
cmp
or
lods
sub
dec
and
dec
pushf
and
xlat
adc
in
daa
pop
das
cmp
or
push
jne
test
sub
sub
rdpmc
sbb
or
ja
aad
dec
fs
mov
push
ds
test
and
cmp
arpl
daa
or
test
and
(bad)
sbb
pop
loop
push
arpl
push
test
daa
loope
outs
mov
jne
inc
or
fs
xchg
xchg
xor
mov
repz
ret
cmp
shr
pusha
cmp
jae
cmp
cs
lahf
adc
pop
or
pop
nop
dec
add
shl
dec
add
out
outs
sbb
call
lods
test
retf
and
lods
es
iret
mov
(bad)
das
dec
imul
inc
mov
xor
and
or
sbb
int3
mov
or
or
push
sub
aaa
loopne
push
cwde
xor
jmp
dec
sbb
xor
or
push
push
push
jne
or
repnz
loopne
push
ins
movs
inc
add
sbb
pop
sub
cs
adc
mov
inc
test
sbb
or
mov
mov
in
adc
sbb
rcl
sbb
hlt
adc
and
sahf
pusha
ret
or
inc
les
xchg
jecxz
mov
and
rcl
and
sub
pop
mov
xor
aad
push
pop
sub
mov
fmul
stc
xor
loopne
mov
dec
movs
jne
je
sub
jns
xlat
ins
stos
mov
jb
and
or
mov
mov
or
movs
cmp
add
(bad)
jmp
fadd
dec
xor
pusha
cmp
adc
xor
xchg
and
movs
pop
test
adc
retf
fwait
sbb
cdq
dec
cmp
cs
gs
fild
or
jmp
or
add
movs
adc
dec
jnp
add
fmul
sbb
push
mov
or
push
pop
rol
xor
xor
mov
or
xchg
adc
cmp
imul
xchg
test
ret
dec
or
dec
imul
add
in
add
ret
ror
lods
mov
adc
js
mov
aaa
dec
add
or
and
push
mov
int
daa
movs
push
inc
fdiv
push
add
(bad)
jnp
jo
cmc
pusha
movs
je
std
movs
stos
or
mov
add
adc
fadd
add
mov
or
rol
mov
dec
dec
xor
test
aam
lods
jbe
and
in
and
dec
or
retf
cdq
xchg
pop
test
push
push
or
mov
jno
push
push
xchg
dec
mov
in
push
adc
mov
mov
add
pop
add
add
xor
push
dec
mov
cmps
add
gs
sbb
xor
jmp
push
test
imul
xchg
aaa
inc
ss
or
int
mov
inc
sub
jmp
hlt
add
push
sub
popa
lahf
fst
in
push
adc
js
sbb
mov
fdivr
and
sti
lds
inc
adc
ficom
sbb
mov
and
test
ret
pop
inc
(bad)
cmps
adc
pop
inc
inc
xchg
clc
push
sbb
fneni(8087
push
add
sbb
repnz
pop
fsubr
pop
mov
in
out
push
cmp
ret
aaa
mov
(bad)
mov
(bad)
or
ror
ret
rol
add
ror
lods
lea
enter
shr
push
add
test
mov
xor
mov
pop
dec
mov
adc
add
xchg
lahf
inc
lock
mov
add
imul
add
adc
es
enter
add
mov
xor
lock
xchg
push
ins
lods
das
popa
push
rcl
repnz
mov
xchg
sbb
inc
add
lods
sbb
rcl
mov
mov
retf
movntps
jle
mov
jmp
enter
add
addr16
cwde
js
jns
mov
cmp
(bad)
cs
or
dec
in
and
xor
add
add
ret
call
ror
sbb
adc
xchg
dec
inc
jp
xlat
push
outs
xor
shl
jg
mov
sbb
vmovntpd
mov
cmp
sahf
adc
add
stos
or
push
mov
outs
and
mov
mov
mov
mov
jge
or
add
jmp
lods
cmp
sub
push
sub
sbb
inc
prefetcht1
pop
sub
sbb
mov
daa
mov
cmp
loope
leave
je
mov
jo
xchg
dec
push
or
sbb
or
add
retf
jae
lds
xchg
sbb
inc
jae
lods
and
outs
xchg
hlt
jmp
shl
sub
pop
mov
fiadd
out
je
xor
mov
js
inc
and
xor
xchg
jmp
dec
loop
fsubrp
xchg
scas
pop
pop
and
fcomi
loop
gs
cmp
test
or
or
push
retf
add
sbb
dec
sub
fadd
ret
inc
cmp
fistp
dec
adc
xor
xor
js
adc
gs
cmp
dec
movs
sub
sbb
inc
mov
adc
ret
pop
sbb
mov
xor
test
pushf
and
cmp
cmp
add
xor
push
cmp
movs
mov
movs
mov
push
test
sub
test
loope
or
mov
push
push
xadd
or
and
shl
adc
fadd
pop
ret
lods
fstp
repz
ror
jmp
xchg
push
and
add
mov
inc
stos
fs
sub
xor
and
or
jae
mov
jbe
xchg
or
mov
push
hlt
push
lds
add
mov
daa
add
jns
mov
mov
inc
loopne
sti
ja
cmp
push
mov
in
adc
pusha
ror
jmp
lock
aas
jne
mov
imul
sar
lock
mov
ss
or
aas
mov
adc
(bad)
cld
mov
add
sar
icebp
or
cmp
add
aas
dec
mov
test
nop
adc
push
sahf
pusha
leave
push
fist
shr
jmp
pop
mov
push
pop
loopne
retf
pushf
dec
or
mov
dec
push
lock
shl
fs
or
adc
xor
add
adc
mov
mov
sub
loop
mov
pusha
add
jge
mov
mov
adc
icebp
dec
lds
sub
das
lds
sahf
shl
or
sbb
push
icebp
ror
sbb
in
push
test
jnp
sti
push
mov
mov
(bad)
add
lods
aam
pop
leave
cmp
push
test
jg
dec
cmp
jbe
and
out
push
dec
data16
sbb
lock
das
cmp
xor
xchg
sub
add
lods
mov
aam
inc
jbe
ins
or
dec
xchg
call
and
jl
icebp
add
mov
jae
mov
in
test
loopne
adc
or
lods
mov
or
mov
pushf
push
sahf
or
sbb
leave
lock
shl
and
mov
mov
add
nop
xchg
stc
je
pop
and
sbb
push
daa
mov
pop
push
mov
jno
mov
call
int3
jne
cli
jmp
push
pmaxub
mov
add
test
loop
cmc
inc
mov
loopne
jne
mov
push
pop
aaa
adc
xchg
test
loopne
retf
xor
sub
inc
adc
daa
std
add
xchg
add
or
shl
add
outs
add
ins
and
shl
mov
or
sbb
and
sub
dec
cdq
fstp
imul
fild
xchg
mov
add
adc
arpl
bound
or
cmp
fstp
adc
(bad)
jnp
setns
adc
ret
dec
push
test
xchg
mov
nop
xlat
(bad)
jo
mov
inc
push
ds
jns
icebp
call
pop
mov
and
or
push
stc
or
or
movs
add
inc
es
sbb
sbb
push
dec
xlat
fadd
shl
add
and
popa
(bad)
enter
cs
sub
mov
cmp
sbb
cmp
mov
rcr
sub
ret
jmp
std
imul
push
aam
mov
push
ins
aas
pop
cmp
cmp
fcomip
jne
jne
lods
xchg
add
(bad)
xchg
rol
dec
or
fdiv
into
add
and
gs
sbb
fsubr
inc
sub
push
or
lods
xchg
inc
sbb
test
int
mov
jb
pop
pop
test
jmp
mov
or
aas
jmp
dec
daa
enter
jno
int3
mov
fs
mov
ds
pcmpgtb
lds
in
stos
ret
fs
xchg
pop
jo
cwde
(bad)
cmp
adc
ja
mov
add
test
inc
pusha
or
push
js
aas
inc
adc
push
jno
push
repnz
dec
inc
mov
cmp
stc
inc
lock
nop
sbb
mov
push
push
mov
cmp
inc
mov
xor
mov
into
das
mov
fimul
fadd
fucomp
sub
sub
aam
or
shl
dec
inc
and
aaa
xor
xchg
mov
sbb
and
or
sub
js
dec
push
(bad)
push
cmp
lods
inc
xchg
adc
lods
call
adc
test
retf
add
push
loope
pop
int3
mov
push
movs
xor
pushf
or
inc
or
scas
test
push
adc
xor
fmul
sbb
xchg
sbb
inc
xlat
xor
in
cli
rol
in
ret
lds
and
jmp
test
mov
daa
outs
mov
dec
enter
jb
adc
pop
push
pop
add
out
test
dec
push
inc
in
loopne
sbb
jno
call
movs
adc
lahf
add
sbb
adc
hlt
test
jmp
inc
or
and
cmp
ss
xor
ret
xor
mov
ins
cwd
push
xchg
test
dec
push
adc
shr
inc
mov
inc
mov
sbb
adc
or
leave
and
or
(bad)
dec
outs
or
adc
shl
jb
sub
jne
test
jb
add
or
fldenv
mov
inc
in
sub
movs
pop
daa
adc
data16
mov
jb
xor
pop
inc
mov
xchg
mov
enter
and
ror
add
inc
aam
xchg
adc
repz
xchg
xor
ins
ror
sbb
sbb
push
or
popa
mov
mov
fdivr
inc
pop
dec
xor
cmp
sbb
mov
sahf
cmc
jb
pop
push
into
sbb
push
push
dec
movs
adc
xor
fld
outs
mov
rcr
movs
(bad)
or
test
or
rcl
adc
push
lea
mov
inc
cmps
jne
or
rcl
pop
mov
outs
add
cmp
or
jmp
sub
or
add
push
xchg
push
pop
call
cli
cmovg
xor
push
mov
and
popf
pop
mov
or
mov
adc
(bad)
mov
jne
test
xor
and
push
or
movs
or
std
push
fs
inc
test
dec
leave
mov
dec
mov
fucomp
add
aam
loopne
or
xchg
push
cdq
repnz
push
ret
popa
jb
push
sbb
jns
ins
pop
out
jle
xchg
cmps
or
aad
mov
lock
push
leave
pop
fnsave
cmp
out
lock
mov
stos
lds
(bad)
leave
sbb
(bad)
(bad)
iret
or
sbb
mov
dec
stc
fadd
scas
je
cdq
xor
movaps
mov
push
sub
push
pop
mov
push
lock
int
retf
push
sbb
push
xchg
js
(bad)
jo
imul
ss
rcl
and
mov
or
push
cld
push
mov
push
push
mov
mov
pop
add
and
pop
inc
push
push
dec
sub
inc
push
in
(bad)
dec
test
pop
jns
sbb
retf
xor
aam
add
mov
int
retf
test
adc
bound
sti
xor
mov
loopne
or
lea
pop
test
or
retf
mov
push
ret
retf
shl
lods
or
push
push
jmp
sub
and
pushf
push
popa
add
pop
xor
lea
in
aam
dec
xchg
aas
jbe
inc
in
sbb
jecxz
ror
test
and
mov
push
movs
lods
inc
lock
inc
(bad)
mov
sti
popa
sbb
idiv
bound
jnp
sbb
mov
xchg
loop
mov
scas
xchg
xor
pop
test
mov
xlat
push
fsubr
call
or
push
mov
into
(bad)
int
dec
call
adc
lea
or
ror
ins
and
daa
arpl
ret
mov
adc
pop
or
pop
imul
or
add
mov
sub
cs
fmul
add
rcl
lods
pushf
mov
mov
je
mov
in
or
push
call
mov
xchg
add
inc
inc
push
and
mov
xchg
es
mov
ret
sysret
icebp
push
add
les
test
mov
punpckhwd
rol
ss
ins
int3
or
dec
sbb
fs
xchg
and
xchg
scas
inc
dec
jo
addr16
cmp
mov
push
mov
mov
pop
push
add
ret
lods
add
and
or
sub
mov
cdq
and
add
jb
in
add
xor
xor
int3
int3
out
add
jno
or
pop
clc
xchg
cs
not
xchg
cmp
fs
shl
and
adc
ret
hlt
xchg
xchg
sbb
test
stos
xor
xchg
mov
jo
and
gs
push
xchg
mov
inc
pop
add
or
popa
xor
or
cwde
xor
jnp
dec
cwde
cmc
sbb
js
hlt
shl
or
les
xchg
inc
push
add
push
dec
nop
and
jno
lods
in
pop
rcl
fmul
cmp
mov
call
data16
mov
js
push
popf
inc
sahf
mov
loop
dec
shl
add
pushf
ins
dec
add
xchg
add
sub
jle
cpuid
int3
retf
dec
mov
fcmovnb
add
js
fcomp
gs
adc
pushf
or
and
enter
mov
pusha
jns
shl
pop
cmp
les
mov
push
loope
xchg
xchg
int3
(bad)
push
iret
mov
sub
dec
add
xchg
sub
ret
jbe
jnp
mov
mov
movs
and
mov
pop
add
daa
dec
and
push
sbb
(bad)
leave
mov
push
sbb
push
hlt
add
out
add
push
and
rol
movs
add
xor
push
jmp
push
in
rcl
jmp
fidivr
push
pop
inc
mov
(bad)
ror
imul
imul
dec
mov
iret
jne
and
dec
cmp
lods
xor
cs
cmp
adc
cwde
cmp
xchg
mov
inc
xor
cmp
mov
sbb
ds
je
xchg
test
mov
ja
les
cli
xchg
pop
test
adc
cwde
(bad)
mov
xor
inc
sub
mov
sub
mov
rcl
lock
sub
imul
ds
cmp
adc
ret
pop
and
sub
or
push
push
mov
pusha
sub
stos
mov
sub
push
or
imul
mov
add
movs
mov
test
imul
loop
lods
mov
lods
jmp
push
nop
cmps
mov
mov
mul
mov
xchg
xor
jbe
pop
push
add
es
movs
out
pop
lock
pop
xor
cmp
je
mov
push
cmp
or
fld
and
cmp
les
push
add
data16
inc
test
jb
sub
mov
add
and
or
xchg
add
mov
loop
xlat
mov
cmps
loop
mov
jp
adc
mov
dec
mov
cmp
mov
or
(bad)
cwde
mov
lock
or
js
push
sbb
or
add
push
push
xor
lods
add
xor
lods
xor
movs
pop
add
dec
sub
mov
movs
sub
add
sbb
and
push
push
movs
add
in
pop
add
sahf
jl
mov
push
sbb
sbb
sbb
pop
xor
rcr
sbb
add
stc
shl
xor
push
add
push
sbb
sub
mov
mov
fcomp
jne
mov
mov
xor
test
or
push
outs
rcr
push
lods
push
jo
or
xor
or
js
cmp
sahf
add
add
push
inc
lds
mov
daa
mov
fwait
xor
movs
jnp
sub
jo
lods
fild
fwait
jmp
mov
dec
ret
test
mov
imul
call
cld
xchg
push
ret
fldcw
xor
or
lahf
or
dec
dec
xor
jne
push
lock
jp
stc
cmps
je
sub
pop
je
cmp
push
popa
mov
(bad)
clc
cmp
xchg
jmp
sbb
hlt
jmp
sub
inc
pop
or
jmp
push
ins
or
fisub
cmc
inc
add
xchg
call
out
or
push
mov
pop
mov
push
js
adc
jmp
sbb
mov
jmp
retf
mov
and
dec
adc
inc
xchg
cmp
adc
sar
push
dec
rol
or
inc
loop
xchg
mov
jmp
xor
adc
mov
mov
test
fld
imul
and
fcom
int3
shl
push
sbb
test
test
cld
add
mov
xlat
loope
or
ret
adc
pusha
and
pop
cmps
mov
test
lods
jmp
sub
imul
lea
push
sbb
ins
and
push
test
or
add
add
inc
dec
add
xchg
test
push
push
add
inc
add
mov
std
pop
sbb
(bad)
jge
div
dec
jmp
mov
in
adc
inc
xor
xchg
sub
and
xchg
xor
daa
jns
add
imul
xor
les
pop
inc
push
dec
outs
xchg
push
es
sbb
mov
push
cmp
push
psrad
inc
or
add
das
adc
xor
adc
mov
cs
mov
push
mov
jo
dec
add
sub
jecxz
adc
mov
push
retf
push
pop
fcmovbe
jp
push
add
push
test
adc
and
out
lock
adc
cmp
dec
or
add
push
jecxz
inc
scas
xor
pop
in
add
cwde
xchg
sub
cmps
add
push
cs
aaa
mov
dec
inc
add
and
sahf
push
bound
sar
les
mov
mov
lods
adc
add
xchg
lods
ins
mov
aas
mov
inc
leave
pop
or
mov
adc
test
mov
and
and
adc
sub
mov
mov
aam
std
cmp
je
adc
and
push
jbe
fcmovb
imul
ficomp
frstor
push
jne
or
dec
les
lock
mov
mov
mov
add
test
movs
gs
retf
add
imul
sbb
xor
inc
imul
test
sbb
adc
cmp
add
and
jnp
push
repz
pop
and
fiadd
push
and
inc
pushf
mov
push
adc
ss
leave
push
jle
retf
push
loopne
push
movs
inc
imul
xor
js
xchg
jp
enter
jmp
or
dec
push
or
inc
call
retf
test
or
pop
rcr
ins
in
sbb
pusha
mov
inc
call
call
or
inc
repnz
cmp
dec
rol
imul
add
(bad)
or
in
pop
adc
(bad)
sub
idiv
lds
cwde
and
sub
push
mov
adc
add
xor
je
sbb
pusha
call
xchg
adc
sti
aaa
ret
call
sbb
or
rol
mov
(bad)
jmp
data16
pop
sbb
int
popa
jmp
push
xchg
hlt
mov
cmp
push
cmp
and
add
pop
add
mov
sub
es
sbb
pop
dec
mov
scas
loop
pop
ror
outs
push
ins
imul
xlat
jmp
push
add
dec
add
and
add
int3
push
cmp
pop
or
lock
xor
scas
retf
stos
push
pop
cld
arpl
movs
push
xor
cmp
ficom
jne
xchg
jnp
or
add
push
rol
push
ret
nop
loopne
xchg
xchg
scas
popa
jmp
adc
mov
lock
lods
test
cmps
add
ds
lods
jne
fild
arpl
pusha
add
sub
out
repz
(bad)
aad
dec
cmps
dec
daa
dec
jnp
add
ds
pop
mov
arpl
add
ss
push
lahf
push
inc
adc
inc
push
arpl
and
dec
test
sbb
push
int
inc
ss
enter
popa
cmp
sub
sbb
test
jne
jp
add
or
cmc
gs
push
imul
ins
mov
xor
outs
mov
inc
or
dec
cmp
jb
pop
sbb
sbb
sub
dec
dec
mov
xor
sbb
cmp
sti
les
add
inc
xor
sahf
jge
add
sbb
dec
mov
cmp
addr16
sbb
mov
enter
add
and
ss
or
xor
lds
test
mov
jo
out
xor
cli
dec
mov
mov
lock
fsubr
mov
test
push
cmp
push
cmps
adc
cmp
ficom
cmc
ins
push
mov
xchg
mov
and
sbb
sub
test
add
sbb
and
sbb
push
popa
ret
mov
push
fs
jnp
rol
jb
sbb
mov
push
xlat
pop
push
les
das
je
rcl
push
push
add
ror
adc
xchg
(bad)
pop
sub
add
dec
mov
test
mov
jb
dec
add
xor
add
dec
inc
popf
je
lods
mov
aaa
jns
push
dec
rcr
jno
enter
mov
fwait
pop
sub
je
imul
pop
jno
push
and
xchg
adc
das
mul
imul
dec
jle
add
dec
je
cmp
fwait
rcl
and
adc
add
add
stos
sbb
pop
or
ror
or
stc
test
lock
push
adc
pop
(bad)
cld
sub
pop
push
dec
mov
push
imul
(bad)
jmp
add
ss
and
ja
cmp
add
pop
xor
dec
sub
mov
sbb
out
js
ins
aad
mov
dec
or
faddp
out
and
rol
rol
or
rol
in
ficom
ffree
push
xchg
jo
or
add
adc
cmp
add
scas
or
in
jp
adc
xchg
(bad)
pop
ffreep
imul
daa
mov
arpl
bound
xchg
das
adc
shl
stos
cmps
icebp
cs
inc
mov
mov
repnz
mov
pushf
mov
scas
(bad)
sbb
or
and
push
repz
mov
jl
xchg
xchg
(bad)
pop
mov
jo
cmp
pop
jne
movs
rol
nop
push
mov
mov
ins
int
mov
lock
xchg
add
inc
mov
test
lahf
sub
dec
movs
aad
dec
arpl
inc
push
jno
iret
push
loop
sar
jge
pop
aam
int3
push
hlt
jae
mov
sub
and
xchg
inc
inc
arpl
add
xchg
pop
mov
push
int3
enter
jg
jmp
sub
or
mov
cmp
push
mov
jae
or
adc
push
xor
inc
adc
and
or
dec
and
mov
sbb
mov
bound
(bad)
popf
or
sub
mov
adc
popa
das
adc
push
and
jl
mov
push
dec
pusha
add
jne
add
add
stc
shl
adc
sbb
and
push
add
inc
sbb
xor
or
and
or
outs
ret
inc
jmp
or
add
dec
sbb
imul
sub
xor
mov
adc
jne
add
mov
or
int
cdq
and
sub
cs
fist
sbb
fist
cdq
adc
dec
xor
outs
bnd
movs
(bad)
pop
call
xchg
fsubr
xlat
cwde
jmp
xor
retf
retf
inc
mov
xchg
pop
cs
cmp
adc
cmp
daa
ret
repnz
or
stos
call
inc
xor
rol
and
ror
(bad)
fisttp
jg
icebp
mov
outs
or
aad
pop
push
add
dec
inc
clc
add
xchg
mov
mov
or
dec
inc
add
add
mov
psubusb
mov
sub
dec
imul
pop
sbb
sbb
cmp
sbb
loope
mov
mov
test
outs
loope
data16
or
cwde
sahf
adc
stos
add
sub
cmp
das
fist
cdq
dec
xchg
mov
add
pop
aam
and
inc
rol
and
outs
pop
sbb
or
shl
or
repz
jmp
sahf
dec
dec
mov
mov
cmp
dec
jnp
pop
sahf
fs
repnz
(bad)
ds
cmp
jae
inc
sub
gs
xchg
mov
jns
sbb
stos
xchg
xchg
jge
test
adc
sub
push
test
retf
and
sbb
ficomp
stos
sahf
sbb
popa
and
dec
cmp
pop
adc
fs
push
sbb
inc
test
mov
iret
or
inc
adc
cmp
mov
cmp
sub
shl
nop
ret
shr
sub
mov
sub
add
cmp
out
jmp
mov
in
cmc
fchs
xchg
and
xor
pop
pop
leave
or
pop
pop
ins
lea
jmp
sub
fcom
sub
push
push
xchg
(bad)
dec
xor
daa
retf
xor
jecxz
jb
push
test
push
dec
(bad)
arpl
div
pop
test
push
test
in
cmp
mov
add
jns
dec
mov
push
xor
scas
cdq
xor
dec
dec
push
push
pop
dec
fadd
cmp
jne
cmp
sub
or
sahf
mov
mov
cld
or
or
in
adc
pop
mov
inc
(bad)
aas
or
dec
mov
arpl
je
mov
call
pop
adc
int
push
mov
push
popf
mov
mov
cwde
or
mov
mov
daa
in
mov
sub
mov
jmp
imul
movs
lea
stos
lahf
mov
and
cmp
push
xchg
std
or
dec
or
in
ds
arpl
xchg
adc
dec
dec
mov
movs
loope
pusha
adc
les
push
cmp
je
fcom
add
movs
add
dec
mov
cmp
push
pop
cwde
adc
arpl
dec
mov
popf
add
mov
add
add
pop
push
retf
push
or
jb
or
outs
dec
push
fst
fiadd
cmp
inc
dec
and
push
pop
or
test
(bad)
lfs
inc
jmp
leave
sar
cld
or
lahf
je
push
loopne
xchg
loopne
in
and
daa
cwde
inc
iret
sub
pop
lock
mov
push
movs
jge
and
dec
jne
sbb
mov
sbb
adc
movs
xor
call
(bad)
dec
sbb
shl
sub
repz
and
mov
mov
cmp
xchg
jo
mov
shr
and
jne
sbb
mov
xchg
out
mov
cmp
loope
js
jge
lock
mov
js
push
sbb
cmp
sub
or
ins
or
add
jmp
imul
hlt
or
xchg
push
add
daa
out
ss
add
ret
mov
jmp
xor
jle
push
push
adc
inc
add
mov
xchg
mov
inc
add
add
add
and
lods
pop
and
addr16
pushf
inc
and
lods
xor
add
(bad)
sbb
mov
or
dec
and
cmp
mov
or
faddp
cmp
fwait
std
add
mov
inc
pop
cs
inc
xchg
mov
adc
test
lea
inc
(bad)
shl
sub
sub
and
sub
pop
dec
aas
lea
popf
push
sub
push
mov
jns
mov
xchg
pop
ins
pop
popf
inc
xchg
sub
ds
into
mov
sub
fadd
mov
adc
xor
or
les
fwait
sub
loopne
fwait
jne
pusha
fcmovb
ss
sbb
(bad)
ja
fst
mov
repnz
xchg
push
mov
mov
push
push
push
cmps
sbb
xchg
inc
in
jns
popa
mov
mov
sbb
dec
push
shl
pop
pop
push
es
pop
mov
xchg
loopne
push
push
enter
jmp
xor
movs
xchg
xchg
sbb
popf
out
dec
xchg
sbb
rep
dec
fdivr
rol
cs
(bad)
stos
push
ins
adc
adc
into
push
pop
xlat
jmp
and
push
cmp
daa
jmp
ss
xor
push
jo
adc
adc
adc
sub
sbb
ss
pop
test
rol
add
dec
mov
lods
cwde
dec
dec
les
(bad)
push
add
xor
xor
les
inc
mov
and
inc
lods
add
pop
adc
pop
ins
imul
stos
and
jno
daa
and
adc
pop
mov
out
retf
add
pop
test
or
jae
push
cdq
(bad)
pop
adc
xchg
cmp
add
stc
or
add
add
js
cmp
dec
jl
pop
mov
mov
jge
lea
pop
cmp
sbb
pop
cdq
sbb
test
push
inc
mov
fisub
sub
and
dec
bound
rol
push
es
not
push
push
push
sub
enter
test
bound
jl
daa
or
dec
sbb
inc
daa
or
inc
adc
mov
sbb
cmps
ins
mov
mov
adc
adc
mov
mov
rcr
mov
test
mov
test
loopne
sbb
pusha
pushf
jo
pop
in
mov
mov
retf
int
movs
add
sub
enter
mov
ret
shr
rcr
test
or
mov
psrlw
cmova
xor
mov
and
js
cmp
pop
hlt
fwait
cmp
mov
inc
sbb
xlat
(bad)
push
mov
js
cmp
cwde
mov
jae
cmps
add
into
addr16
pop
cmp
imul
cmp
and
(bad)
xchg
pusha
in
pop
push
jp
rol
mov
and
ret
movs
test
sbb
shl
cmp
lods
sbb
ins
mov
call
and
pop
add
inc
pusha
inc
or
inc
and
sbb
ja
adc
xor
int
push
pop
mov
popa
ficom
jmp
sub
mov
stos
cwde
push
dec
or
add
inc
stos
sub
movs
mov
and
push
sub
jmp
cdq
pop
push
mov
sub
fs
loopne
inc
mov
xchg
hlt
mov
sub
imul
or
dec
xor
adc
add
scas
xchg
xor
or
adc
mov
pop
je
in
ins
adc
add
mov
lods
xor
push
add
pop
fist
rol
gs
xor
push
lock
jb
pop
adc
xor
and
xor
aad
cs
imul
fistp
sub
adc
enter
sbb
adc
dec
daa
sar
lock
mov
add
and
mov
es
test
je
out
test
add
push
cld
pop
iret
mov
retf
nop
sub
jb
int
mov
(bad)
arpl
add
mov
mov
cmp
push
xchg
mov
add
jo
pop
enter
std
sub
ja
mov
retf
inc
xchg
xchg
ss
and
test
sbb
add
xchg
inc
lea
push
adc
mov
dec
and
push
enter
jne
add
dec
inc
dec
(bad)
divps
mov
inc
jae
sbb
jae
into
rcl
stc
mov
and
sub
shl
int3
rol
adc
sub
je
ret
pop
xchg
or
dec
lds
or
and
mov
or
movs
xor
and
add
sar
push
call
xor
mov
sub
mov
out
sar
ins
add
inc
imul
popf
jmp
jnp
sub
or
gs
dec
xchg
mov
cmp
stc
dec
mov
fs
mov
xchg
nop
push
test
pop
jmp
rol
add
and
cmp
add
sub
clc
scas
cmp
xor
cmp
pop
imul
or
js
icebp
test
enter
mov
sub
sub
ror
dec
xor
and
in
or
push
or
test
scas
and
clc
sbb
inc
and
jle
mov
shr
test
sub
mov
clc
pusha
mov
rcl
leave
dec
mov
cmps
ret
mov
clc
pusha
push
inc
icebp
inc
xchg
retf
or
cdq
pop
or
xor
jecxz
pusha
inc
popa
xchg
mov
mov
push
mov
mov
cmp
inc
aaa
mov
pop
enter
inc
cmp
aas
pop
dec
pop
jae
lea
xor
inc
pusha
mov
outs
add
add
push
dec
jo
neg
cmp
jl
pushf
jno
sub
pop
adc
lods
mov
or
cmp
mov
jmp
add
test
in
mov
mov
scas
in
jae
sbb
sbb
mov
mov
pop
sar
jg
shl
gs
push
sbb
add
dec
mov
shl
aad
add
sti
sub
inc
sub
dec
mov
add
js
and
pop
leave
push
jle
add
sbb
jne
cmp
add
arpl
or
jne
pop
dec
test
sub
test
jmp
pop
add
dec
int
dec
xlat
les
arpl
hlt
js
cmp
inc
mov
mov
pop
or
add
or
add
in
or
add
adc
loope
fcomp
lgs
jmp
ret
idiv
mov
repz
dec
cmp
jge
call
ror
enter
xchg
in
jbe
inc
pop
jl
jecxz
add
sbb
shr
popa
das
add
retf
outs
mov
adc
movs
or
or
daa
dec
inc
or
fcomp
dec
out
fst
add
into
dec
and
bound
add
scas
push
fsqrt
xor
or
in
(bad)
pop
or
(bad)
jmp
loope
dec
gs
in
and
and
jmp
mov
les
sahf
fcom
and
inc
cmps
mov
inc
mov
inc
popf
mov
inc
xchg
or
adc
sbb
mov
aam
xchg
sbb
mov
jmp
les
pop
sbb
sub
add
mov
lods
cdq
dec
sbb
enter
test
dec
and
loope
push
xchg
push
mov
js
and
and
adc
inc
adc
retf
xor
push
or
jl
push
test
pop
inc
dec
mov
mov
add
add
sbb
in
fnstcw
(bad)
adc
js
pop
sbb
sbb
ror
rcr
xchg
jo
xor
es
add
dec
pop
push
push
ins
enter
xlat
mov
pop
sub
inc
sub
add
push
sbb
in
mov
mov
test
int
data16
mov
nop
or
arpl
rol
test
inc
mov
jbe
pusha
xor
or
icebp
dec
sub
scas
mov
dec
push
dec
add
add
add
leave
dec
or
push
pop
pop
dec
fidiv
test
xchg
or
adc
(bad)
hlt
addr16
or
nop
dec
js
mov
sbb
test
cmp
push
push
push
adc
inc
pop
add
push
xor
mov
and
mov
mov
movs
and
xrstors
push
cmps
fcomp
pusha
jo
mov
bound
adc
sub
dec
adc
movs
xor
or
dec
jo
adc
test
lahf
arpl
(bad)
add
lds
mov
push
or
push
pop
add
mov
jge
sbb
adc
jbe
dec
sbb
lds
xchg
cmp
xchg
arpl
les
add
gs
test
push
gs
xor
push
xchg
pop
in
mov
imul
sub
aaa
enter
sub
add
pop
cli
add
jecxz
lds
out
sbb
sub
pop
dec
pop
mov
sub
pop
adc
xor
sar
into
icebp
add
fdiv
inc
test
imul
xor
neg
imul
(bad)
fadd
mov
dec
add
lock
xchg
add
xchg
jp
sbb
mov
ins
ins
mov
and
sbb
mov
push
sbb
aam
pop
pop
mov
das
cmp
sti
jl
add
inc
inc
ins
sbb
and
popf
sub
arpl
or
fwait
and
inc
cmp
fstp
and
jmp
icebp
mov
fst
mov
mov
pop
jmp
fst
or
daa
cmp
jl
cmp
cld
xor
nop
sub
inc
and
cwde
lock
push
xchg
add
push
test
int
les
mov
xor
xchg
push
or
sub
add
pop
adc
mov
ret
mov
sub
or
mov
adc
pop
das
adc
icebp
test
int
addr16
and
ds
and
sbb
add
push
(bad)
ds
xchg
fnsave
or
sub
and
scas
jne
and
lds
adc
outs
daa
gs
xchg
jnp
or
or
mov
add
inc
cmp
adc
retf
clc
shr
push
and
sbb
inc
adc
ins
mov
cmps
jecxz
fisttp
inc
jp
in
adc
jne
jae
jne
inc
mov
leave
and
adc
mov
or
add
inc
inc
loop
test
xchg
cmp
adc
ss
and
sbb
push
sahf
sub
adc
dec
add
and
sub
push
mov
inc
je
mov
add
xor
push
out
inc
sbb
push
add
sbb
ds
jg
sbb
in
div
dec
xchg
rol
sub
mov
in
iret
fidiv
enter
or
jns
pop
push
cmp
je
inc
jecxz
pop
fsubr
mov
mov
movs
enter
mov
jns
or
test
or
xchg
or
mov
das
dec
out
scas
mov
push
cmp
lods
test
in
and
sub
fdivr
pop
and
call
jl
cmp
icebp
out
or
or
(bad)
xor
push
push
dec
add
dec
and
inc
jne
dec
cmp
loopne
retf
add
das
push
xchg
mov
xor
rep
push
sbb
jecxz
and
jecxz
fmul
and
dec
test
into
mov
adc
test
sbb
dec
cmc
shl
jl
dec
dec
or
adc
aam
ficom
add
ins
add
xchg
mov
lods
sahf
sub
lods
cmps
adc
imul
in
cwde
xchg
arpl
sahf
lods
sbb
iret
dec
(bad)
inc
sub
mov
cwde
pop
and
bound
inc
add
call
fbstp
mov
xor
jae
mov
xchg
dec
jnp
adc
icebp
or
add
stc
push
pop
inc
sar
sub
les
mov
mov
es
sbb
dec
and
and
enter
popf
test
push
add
call
ret
js
xor
nop
out
sub
add
daa
push
ins
pop
add
je
and
ss
add
sbb
pop
cmp
jg
jmp
test
adc
push
mov
mov
add
pop
(bad)
mov
cmp
jne
inc
jmp
mov
and
lock
lods
in
int
aam
(bad)
sti
movs
xchg
daa
jne
sbb
(bad)
jle
dec
lods
mov
int3
push
jmp
cmp
cmp
push
jb
xor
fcom
fidivr
xchg
adc
arpl
sub
mov
jl
or
sbb
dec
inc
add
add
stos
cmps
fdiv
add
jle
nop
cmp
mov
mov
push
push
xchg
inc
cmp
pmulhw
jmp
pushf
pop
mov
fs
enterw
cld
push
cld
call
cmp
daa
outs
push
inc
pop
fadd
inc
sbb
icebp
fs
jne
mov
mov
xor
int3
sub
pop
or
add
retf
rol
popf
cmp
add
rcr
and
mov
add
jg
dec
into
mov
xor
sub
ror
lods
pop
or
adc
xor
xchg
mov
pop
rcl
cmc
out
sub
icebp
cmp
int
jo
mov
mov
pop
aam
push
inc
mov
aam
xchg
adc
pop
push
mov
imul
test
cwde
dec
cs
popa
cmp
or
sbb
sub
mov
jg
pop
shl
cmp
in
gs
dec
ins
xor
je
jne
aaa
dec
mov
inc
mov
xchg
push
or
test
cmp
fisubr
mov
dec
(bad)
ss
push
je
scas
mov
mov
lock
movs
fdivr
es
sbb
mov
xchg
add
test
cmp
mov
adc
pop
push
xor
(bad)
outs
test
pushf
jp
pop
sub
xor
pop
xor
cmp
jne
sub
add
or
jmp
fld
add
cmp
jmp
xor
mov
ds
cmp
repz
les
and
add
stc
pop
ret
add
adc
fdivr
jb
cmp
jmp
pop
ror
inc
fistp
sub
je
clc
test
and
repz
xchg
sahf
or
and
add
push
jecxz
(bad)
test
push
sti
push
mov
pop
retf
jg
xor
aam
cmp
push
sub
inc
mov
sub
fnstsw
out
add
xchg
into
popf
icebp
jl
cmp
add
pop
adc
xor
sbb
js
(bad)
xor
popa
push
pop
popa
pop
(bad)
inc
lods
jl
ror
jg
xchg
fst
mov
ins
mov
out
test
daa
push
into
inc
sub
mov
and
jmp
mov
adc
call
ret
(bad)
(bad)
mov
dec
(bad)
jnp
nop
cli
int
es
xchg
xchg
nop
adc
mov
dec
xchg
ins
xor
add
adc
xor
je
dec
popa
enter
loop
inc
jle
mov
add
mov
inc
push
add
in
add
sub
push
mov
mov
lahf
hlt
jmp
scas
mov
iret
pop
sub
add
and
nop
sbb
push
in
add
out
jbe
xchg
jle
xchg
mov
mov
mov
xchg
lods
int3
adc
xchg
mov
mov
sub
sub
jl
gs
scas
and
rcr
lds
call
jno
push
in
mov
adc
sbb
mov
mov
jle
add
add
add
mov
and
and
in
in
sub
cwde
(bad)
in
add
test
add
nop
dec
sbb
push
fmul
ins
dec
jmp
repz
cmp
sub
inc
adc
xchg
stos
mov
inc
and
add
adc
push
test
jo
pusha
and
pop
inc
xor
mov
das
push
cmp
and
fwait
lock
ret
lods
ds
adc
and
pop
test
sub
pop
retf
lahf
mov
jae
es
dec
add
push
jmp
cdq
aaa
mov
fbld
gs
xchg
cmp
jno
or
mov
mov
mov
mov
or
sbb
fucomi
or
sub
and
sub
mov
mov
loopne
inc
push
rol
loope
popf
push
sbb
push
mov
fwait
or
loopne
jae
push
and
or
xor
add
sbb
out
(bad)
xchg
movs
inc
movs
add
push
mov
pop
das
xlat
inc
xor
pop
mov
inc
pop
add
fwait
sbb
adc
pushf
mov
nop
inc
mov
xchg
or
pop
leave
les
pusha
jge
out
sub
add
inc
inc
sbb
mov
and
sbb
sub
inc
mov
mov
lods
sbb
xlat
dec
mov
adc
leave
sbb
adc
mov
xor
push
hlt
xchg
cld
shr
jne
lods
sbb
aaa
movs
and
pop
sbb
nop
dec
loope
push
out
push
xor
sub
popf
mov
or
repnz
add
clc
ror
out
inc
push
xor
push
dec
jo
push
lods
inc
mov
pop
inc
mov
or
push
fnsave
sbb
xor
inc
and
movs
enter
adc
jmp
mov
jno
stos
push
adc
mov
jne
inc
das
add
xchg
push
push
add
or
adc
xor
out
sbb
xchg
stos
loope
mov
dec
xchg
pop
xchg
adc
push
pop
or
pop
lods
js
pop
or
push
adc
mov
xchg
or
and
sub
pop
es
push
sbb
and
cmp
in
cmp
add
or
pop
das
sub
pop
(bad)
mov
add
jb
push
fs
jno
sbb
push
cmp
loop
daa
clc
cmc
mov
or
pushw
cmp
pusha
xor
pop
enter
(bad)
pop
fld
sbb
loope
and
cmp
xor
dec
test
lock
xchg
imul
and
icebp
das
xchg
pop
sbb
push
sbb
push
out
je
adc
test
or
inc
outs
bound
dec
and
rcr
test
les
xor
push
mov
push
test
pusha
push
sub
aas
retf
push
or
or
ror
cmp
or
in
mov
dec
jnp
xchg
inc
inc
dec
push
sbb
pop
xchg
push
lds
imul
leave
movs
mov
in
add
test
and
cld
enter
jmp
xor
inc
adc
nop
shr
pop
add
psubusw
arpl
(bad)
in
sbb
and
sub
add
add
adc
push
push
int3
xchg
push
add
and
bound
mov
add
mov
loopne
loop
add
xchg
mov
and
push
lea
inc
or
mov
js
add
jne
hlt
jmp
mov
je
mov
mov
adc
jbe
mov
mov
xor
adc
es
xchg
cmp
push
push
nop
rcr
or
xchg
pop
adc
sub
or
xor
sbb
xor
dec
pushf
and
fdiv
test
cs
mov
inc
xlat
movs
pushf
and
cdq
jno
cmc
jbe
push
js
dec
xchg
mov
jge
lods
and
gs
jo
nop
mov
out
pop
mov
inc
add
loope
add
mov
pop
rol
cmp
fidiv
mov
jb
nop
test
mov
inc
pop
sbb
cmp
jb
xor
shr
sub
xchg
les
push
aam
ret
lods
not
push
cmps
cmp
jbe
add
test
add
push
or
push
cmp
lock
leave
jno
add
mov
push
aam
js
xor
adc
lods
pop
movntps
and
sbb
dec
enter
cmp
loopne
pop
repz
cdq
push
or
add
xchg
enter
push
aaa
mov
add
div
mov
adc
in
push
fwait
iret
jmp
push
mov
cmp
movs
imul
loope
add
les
ror
inc
push
(bad)
cmp
add
sbb
jmp
or
outs
sub
ja
stos
xor
mov
iret
movs
sahf
add
or
cmps
aaa
inc
loopne
mov
xor
cmc
push
and
inc
push
mov
sbb
add
jno
imul
sbb
pop
mov
jmp
mov
xchg
frstpm(287
xchg
mov
test
imul
mov
push
test
in
jle
push
mov
adc
jge
dec
mov
fs
ret
das
fs
or
loopne
mov
xlat
jb
xor
shr
adc
sbb
inc
arpl
dec
cmp
loope
dec
pop
cwde
jnp
jmp
ror
jbe
pop
or
mov
ret
or
bound
iret
dec
sti
mov
cmp
jmp
loope
lock
loope
out
push
rol
add
push
aam
dec
adc
mov
sub
(bad)
dec
int3
add
fsub
int
sti
popf
mov
add
aam
(bad)
nop
jmp
push
pop
xchg
cmp
xor
jp
jg
arpl
or
not
outs
mov
pop
call
mov
es
fs
nop
imul
adc
adc
dec
adc
fs
(bad)
out
lea
add
or
push
dec
pushf
lea
sbb
sbb
or
pusha
ins
stos
add
sbb
vmovaps
pop
or
sbb
in
mov
and
jae
jno
stos
xor
and
push
jp
rcl
jo
jle
gs
into
xchg
mov
mov
cmp
jp
xchg
dec
push
sub
fbld
ss
dec
or
jo
ret
mov
jae
inc
rol
adc
imul
push
bndstx
icebp
fs
mov
inc
push
or
and
adc
adc
shr
push
outs
movs
or
fcomp
movs
jo
xchg
and
sub
xlat
ins
js
mov
xor
pusha
push
push
xchg
jno
pop
cmp
push
out
push
imul
or
(bad)
and
sahf
lahf
lods
add
push
and
leave
mov
hlt
loopne
or
push
jno
retf
mov
mov
dec
test
and
xor
sub
ins
mov
or
mov
loope
add
mov
loop
or
mov
xor
mov
call
data16
loop
cmp
rol
fs
(bad)
dec
sub
in
jge
loopne
and
cs
mov
rcl
mov
add
inc
push
push
mov
jnp
lods
cmps
and
das
rcr
sti
pop
add
nop
stos
rol
es
pushf
push
and
(bad)
test
dec
and
cld
pop
jns
xor
and
mov
cmps
add
inc
lods
jl
cmp
dec
adc
push
mov
sbb
mov
xor
mov
inc
xchg
mov
dec
or
sub
sbb
jno
or
or
pop
aas
xor
xchg
add
xor
dec
add
(bad)
mov
add
mov
add
call
loop
or
xlat
jp
add
jae
loop
push
add
jne
movs
imul
and
clc
mov
push
sahf
sub
sbb
ret
cmp
mov
adc
pop
add
jae
std
or
ja
dec
dec
outs
inc
sub
and
xchg
push
ret
push
mov
dec
push
sbb
add
out
adc
aad
or
das
adc
dec
(bad)
xchg
or
pop
ret
push
cmps
jo
nop
lock
call
mov
loopne
in
ins
and
xor
jnp
or
or
fadd
les
push
mov
push
sbb
inc
retf
sbb
(bad)
inc
sbb
and
mov
mov
push
add
js
test
mov
and
pop
push
mov
sub
cmp
push
push
jo
mul
fsubr
add
ja
mov
lds
xchg
pop
jae
addr16
imul
or
or
(bad)
ins
push
adc
mov
or
test
cld
lods
inc
movs
jge
xchg
sbb
and
or
push
test
cmp
pop
adc
sbb
mov
in
ret
adc
out
push
add
cmps
leave
jo
lea
mov
inc
sub
ret
pop
js
lahf
and
or
sahf
xlat
inc
mov
test
lds
(bad)
pavgb
popf
and
push
adc
dec
sbb
hlt
push
sbb
fild
add
or
and
sbb
out
jns
xchg
jle
cmp
mov
adc
inc
and
nop
adc
cmps
test
ret
push
jg
jp
and
stc
xchg
pop
int3
mov
push
push
add
sahf
xchg
pop
loope
(bad)
cmps
sub
shl
(bad)
dec
fwait
leave
adc
or
push
imul
xor
je
cli
loope
cmp
jge
cmc
add
mov
inc
int
lock
mov
cdq
ret
xchg
dec
sub
xchg
xor
sub
sub
pop
mov
call
inc
lods
xchg
in
or
xchg
mov
or
add
cmp
sbb
adc
pusha
popf
icebp
daa
lea
inc
and
lahf
and
and
mov
mov
fwait
add
mov
stos
mov
xchg
mov
mov
ja
mov
or
call
sbb
test
sub
or
push
push
add
push
shr
and
aam
daa
(bad)
dec
push
fwait
jbe
dec
mov
mov
xor
pop
sub
push
xchg
lods
jbe
or
js
inc
call
bswap
add
mov
pop
(bad)
mov
sub
retf
push
add
sti
push
adc
scas
cmc
sub
add
(bad)
fadd
adc
xchg
xchg
pop
scas
and
add
adc
pushf
dec
cmps
and
movs
lea
and
and
inc
sbb
and
mov
das
cmp
inc
jle
and
es
sbb
jmp
mov
xor
add
or
mov
ror
aam
mov
push
pop
push
jmp
sub
lahf
shr
leave
call
inc
pusha
or
dec
fistp
add
and
cmps
push
dec
jo
or
dec
in
or
push
pushf
push
jle
fs
ret
pop
or
mov
enter
test
add
ret
mov
add
or
mov
and
imul
mov
jl
add
loope
mov
not
sub
into
and
nop
test
int3
ja
xlat
xor
test
push
adc
push
and
adc
dec
and
fnstcw
cmc
push
push
cld
sbb
pop
sbb
add
mov
cmp
es
sub
mov
and
fidiv
cs
mov
lock
cmp
or
add
add
out
and
inc
and
les
sbb
pop
rcr
xor
inc
sbb
adc
ret
(bad)
aam
(bad)
mov
adc
inc
pop
rcl
pusha
pop
sub
mov
dec
sahf
int3
clc
push
or
push
je
push
sbb
xor
mov
mov
adc
xor
or
xchg
add
or
call
cld
add
and
push
mov
lds
dec
add
scas
inc
lock
inc
sbb
and
rcl
adc
add
and
push
sbb
sub
fnstenv
xchg
adc
or
mov
adc
xchg
add
popa
test
mov
and
(bad)
inc
xchg
iret
stos
repz
add
mov
ss
jp
cmp
jne
sbb
add
sub
neg
mov
cmp
or
adc
hlt
imul
add
test
je
jae
xor
inc
inc
push
xchg
loop
xchg
xor
enter
cmc
push
or
fbstp
jno
(bad)
hlt
call
in
dec
mov
jmp
sbb
(bad)
mov
mov
fsub
outs
xor
inc
movs
xchg
iret
cmp
or
call
lea
dec
rcl
inc
test
(bad)
lea
fistp
pop
loop
sub
push
add
mov
aam
push
mov
sub
inc
fnstcw
hlt
xor
adc
push
pusha
adc
jbe
mov
mov
xchg
lock
imul
jo
lods
test
popa
sbb
jmp
xchg
pop
push
mov
sub
sbb
sub
add
sub
or
inc
or
icebp
fcom
sahf
or
movs
or
mov
test
int
pop
mov
sub
push
dec
adc
sub
fild
rcr
add
jmp
cmps
push
leave
shr
add
pop
jge
add
jle
jmp
mov
or
in
movs
lea
mov
sbb
adc
add
dec
pop
dec
cmp
sbb
adc
xor
push
adc
shl
inc
std
mov
pop
bound
(bad)
aam
pop
fdiv
out
add
cmp
movs
mov
or
xor
mov
dec
sbb
add
rol
mov
xchg
jns
movs
jae
test
or
xchg
inc
add
aad
lahf
shl
inc
or
jmp
shl
pop
mov
imul
fcomi
nop
ret
iret
mov
nop
push
div
movs
shl
retf
sbb
call
mov
or
enter
and
adc
out
dec
mov
add
pusha
mov
mov
inc
push
popa
call
adc
and
jbe
(bad)
and
pop
call
push
dec
dec
mov
add
jmp
xor
mov
std
dec
outs
loop
push
push
fisub
xor
inc
push
sub
adc
mov
hlt
add
mov
add
or
enter
mov
add
xor
shl
pop
dec
rol
cmps
cmp
movs
push
or
xchg
cmps
push
mov
xchg
push
adc
js
packsswb
jecxz
imul
xor
jle
cmp
aaa
add
sbb
and
or
adc
pop
pop
sub
push
adc
std
shl
mov
out
repnz
movs
test
xchg
jns
push
pop
in
xchg
push
mov
daa
push
les
pop
mov
pop
jg
cs
jmp
add
shl
rcr
int3
or
popa
pop
fcom
test
ja
jo
pop
and
je
pop
cwde
push
pop
enter
and
sub
or
jns
push
mov
sbb
push
and
mov
add
jno
fs
or
fwait
int3
inc
add
jns
or
inc
pop
ror
movs
or
inc
inc
push
xchg
aam
std
push
jle
jbe
dec
clc
cld
or
add
adc
xor
imul
cmp
pop
fisub
or
rcl
add
je
in
xchg
retf
ja
or
lock
sbb
jne
int3
mov
cdq
mov
pop
pop
pusha
(bad)
mov
add
retf
clc
add
dec
or
inc
cmp
fst
and
add
ins
cmps
add
stos
in
adc
mov
mov
xchg
into
or
or
xchg
cmp
xchg
sbb
fild
and
popf
cwde
fidivr
movs
mov
push
inc
or
ret
cmc
or
xchg
in
add
mov
not
rol
and
dec
mov
add
inc
or
cmp
jl
stos
mov
addr16
cmp
test
mov
or
adc
les
adc
and
neg
cwde
or
dec
imul
push
pop
inc
dec
mov
xor
dec
xchg
dec
ds
adc
jmp
out
mov
sub
bound
test
outs
xchg
(bad)
aad
dec
cmp
cld
test
add
mov
cmp
ret
popf
call
rcpps
inc
push
dec
ja
xchg
les
movs
sahf
cmp
sbb
mov
jl
sub
mov
ror
fwait
cmp
enter
hlt
xor
mov
add
fld
lock
sub
retf
movs
daa
imul
adc
test
add
movs
das
cmps
add
jmp
daa
ret
adc
sub
adc
movs
inc
cld
inc
push
and
and
push
mov
gs
js
jb
pop
or
movs
push
pop
ror
clc
or
sub
dec
inc
cwde
sub
push
jnp
loopne
cdq
cmp
mov
mov
lods
ja
and
dec
jecxz
daa
mov
adc
mov
push
cmp
mov
scas
hlt
mov
cwde
or
or
mov
fnsave
xlat
push
stc
std
fst
ins
cld
push
fs
cmp
jne
adc
xchg
xor
mov
std
inc
sbb
inc
sbb
ds
ret
hlt
mov
sub
jl
xor
cmp
fiadd
add
fimul
dec
loop
cs
pushf
shr
shl
ror
push
pop
pop
push
daa
inc
leave
pushf
xor
add
pusha
push
inc
add
std
nop
xchg
in
pop
cmp
sub
cmp
cmp
and
sub
pop
data16
mov
sub
int3
mov
mov
cli
loope
cmps
jmp
mov
or
jle
mov
std
int
iret
imul
adc
inc
mov
xor
shl
jg
push
imul
pop
sbb
push
in
add
xchg
(bad)
mov
sar
cmp
(bad)
sub
and
lock
inc
mov
movs
add
nop
or
cmp
dec
scas
mov
mov
mov
mov
adc
std
sbb
jne
jmp
xor
lahf
enter
jo
mov
inc
jbe
mov
adc
(bad)
les
je
lds
outs
ret
cmp
or
gs
push
ins
cdq
mov
iret
test
cli
leave
jle
mov
jmp
sub
mov
add
or
sub
arpl
hlt
inc
push
pop
mov
and
aad
push
push
or
add
loope
shr
add
mov
popa
push
mov
mov
xchg
push
xor
or
retf
push
cmps
mov
das
lds
ins
mov
(bad)
cmp
pop
rol
xor
jno
popa
push
sbb
lods
enter
xor
mov
and
add
mov
dec
sti
in
sbb
xor
icebp
and
dec
and
arpl
inc
sbb
pusha
xchg
and
sub
jmp
push
in
ins
or
arpl
leave
cmps
(bad)
sub
aad
div
dec
xchg
rcr
loopne
movs
push
add
add
pop
ret
(bad)
fld
or
push
test
jns
sub
stc
push
xor
sub
mov
hlt
add
xor
adc
pop
je
xor
sbb
enter
push
push
sbb
dec
add
pop
les
icebp
outs
or
pop
or
mov
xchg
outs
rol
inc
xor
xor
xchg
xor
lods
sti
pop
movs
out
mov
call
sub
or
loopne
and
mov
push
mov
jno
ror
popa
ja
xchg
jge
adc
pop
and
sub
mov
push
out
dec
movs
dec
dec
add
jg
push
sbb
loopne
dec
cmp
xor
xchg
jecxz
rol
and
fld
dec
shr
inc
mov
add
mov
cwde
mov
jmp
dec
movs
data16
xchg
lds
cmp
and
push
jmp
imul
sbb
fmul
shl
sub
add
(bad)
inc
add
imul
enter
out
xchg
dec
xchg
test
push
aas
inc
add
push
adc
mov
jns
adc
pusha
mov
mov
sub
xlat
push
or
arpl
xor
nop
dec
lds
xor
cwde
add
push
fdivr
ret
test
and
push
pop
ret
adc
sbb
arpl
pusha
add
ins
add
inc
dec
cmp
lods
pop
add
lahf
aam
add
xor
add
dec
and
inc
and
jp
mov
cmp
loope
bsr
jo
add
push
or
in
sbb
add
sbb
call
xor
adc
les
lock
xlat
stos
push
xchg
mov
rcl
xchg
push
mov
pop
stos
adc
push
outs
call
lds
bound
inc
jle
push
rcl
cmp
or
daa
jno
xor
mov
nop
adc
enter
sub
pop
mov
imul
pop
enter
dec
push
jno
sbb
and
xor
popa
add
scas
and
cld
jmp
fimul
pop
(bad)
jmp
or
pushf
jecxz
or
sbb
(bad)
mov
inc
cs
daa
mov
dec
xchg
dec
dec
or
add
inc
pop
faddp
ret
ret
out
push
movs
ret
xor
aad
push
cmc
inc
inc
sbb
paddusb
push
jae
jne
rcr
rol
sbb
movs
jae
cmp
mov
push
or
inc
in
xor
adc
add
cmc
xchg
lahf
or
mov
adc
movs
sbb
lea
stc
movs
mov
mov
add
les
push
adc
pop
(bad)
adc
or
jmp
cmps
mov
sbb
daa
inc
jb
lea
add
push
adc
popa
pushf
sar
mov
bound
or
leave
popf
sbb
sti
les
(bad)
jne
or
xor
or
adc
mov
sbb
sub
push
enter
inc
push
icebp
adc
xor
pop
adc
or
enter
dec
cdq
fwait
add
fcom
popa
daa
mov
dec
mov
adc
add
add
stos
mov
add
inc
xchg
add
pusha
inc
adc
cmps
cmp
or
add
or
imul
xor
xchg
add
enter
in
add
mov
sar
pop
sub
(bad)
pop
int
outs
fadd
sar
in
in
cdq
sbb
push
jmp
sub
test
nop
and
mov
inc
xor
dec
jmp
test
adc
adc
or
xor
dec
mov
mov
cmp
xchg
int3
icebp
loopne
jmp
sahf
inc
xchg
mov
adc
add
xchg
sbb
and
and
mov
push
inc
adc
dec
mov
sbb
sub
dec
jnp
mov
cmp
adc
hlt
or
add
sub
dec
mov
jge
and
in
sbb
adc
(bad)
int
or
jmp
popa
iret
jmp
dec
mov
add
retf
mov
push
scas
push
xchg
xchg
cli
sub
aam
cmp
adc
call
mov
add
or
std
movs
adc
movs
inc
mov
and
adc
cmps
mov
in
icebp
xchg
add
xchg
je
xor
pusha
inc
xchg
cli
or
jmp
jmp
pop
fnstcw
aad
adc
or
lahf
or
fild
dec
adc
pop
add
mov
jne
push
pop
rcl
mov
xor
add
and
xchg
mov
adc
jnp
iret
or
push
mov
push
loopne
add
jmp
imul
mov
pop
add
(bad)
pop
dec
push
sub
popa
nop
mov
les
idiv
xchg
jne
mov
and
xchg
pop
adc
xor
pop
data16
fcomp
fs
sub
retf
adc
or
jle
sbb
fiadd
sub
mov
adc
(bad)
das
jge
cmp
mov
das
jnp
add
mov
sbb
rcl
pusha
and
adc
pusha
jmp
xchg
sbb
fs
jge
or
push
test
push
mov
rcl
shl
jl
or
xor
xchg
test
jmp
lods
or
test
add
xchg
push
pop
xchg
dec
add
jne
sbb
pop
(bad)
or
push
imul
sbb
cmp
in
loop
gs
jb
and
or
adc
call
nop
loopne
lahf
or
pop
mov
add
dec
js
add
test
imul
xor
cmp
sub
sbb
sub
(bad)
push
sbb
fucomp
cmps
js
call
add
ja
(bad)
iret
jne
inc
jmp
and
(bad)
sbb
push
cmp
pop
daa
pusha
cmp
pop
adc
mov
sbb
in
bound
dec
or
ret
xor
gs
jecxz
adc
ret
in
xor
push
push
ins
call
lods
repz
mov
aas
test
mov
por
sbb
xchg
popa
sub
sbb
test
xchg
out
mov
jb
shl
sub
pop
xor
fsubr
mov
sbb
xor
add
arpl
in
cdq
(bad)
lds
push
nop
shl
sbb
or
dec
cs
cwde
adc
push
mov
inc
inc
push
mov
fsub
or
mov
xor
fcom
ret
adc
sub
dec
out
or
cwde
mov
sub
xchg
aam
ret
test
add
bound
bound
push
xchg
sti
jmp
sbb
js
xor
fldenv
mov
fs
ss
inc
or
scas
inc
xchg
mov
pop
xor
icebp
fsubr
in
xor
ret
push
or
unpcklps
add
xchg
outs
nop
push
inc
(bad)
fmul
add
call
xor
mov
les
adc
sub
outs
icebp
pop
fsubr
jl
je
inc
or
dec
jp
adc
xor
fmul
ja
jmp
adc
rcl
inc
cmp
push
push
add
jp
fs
mov
xor
fiadd
or
fcom
movs
adc
pusha
fwait
dec
fs
sub
adc
xor
shr
clc
adc
je
and
jb
adc
xchg
shl
in
pop
adc
or
gs
or
iret
ins
rol
add
or
add
jmp
inc
mov
fs
fdivr
nop
mov
popa
shl
bound
inc
push
mov
inc
and
je
sbb
rol
ret
dec
inc
dec
cmp
xor
xor
pushf
loop
(bad)
into
jmp
fist
adc
or
xchg
(bad)
jmp
adc
xchg
into
test
inc
loop
(bad)
adc
and
pop
xor
add
or
xor
dec
dec
jl
sahf
add
and
fdiv
pop
inc
jecxz
push
or
jl
jmp
inc
imul
fimul
push
xlat
aas
mov
or
sub
inc
cmps
nop
or
mov
nop
inc
xchg
ret
lods
mov
xlat
aad
dec
sbb
scas
and
add
jmp
push
push
pusha
sub
sbb
adc
inc
icebp
add
jmp
or
jae
add
ins
fadd
add
mov
dec
inc
mov
sbb
mov
jns
std
sbb
sar
mov
and
inc
adc
inc
lock
add
sbb
mov
jo
es
dec
cmp
jmp
add
mov
mov
bound
(bad)
cdq
sub
int
adc
xchg
dec
inc
cmp
mov
outs
and
pop
push
sar
mov
push
in
cwde
fcmovbe
mov
ds
mov
cwde
sbb
sub
aad
sub
pop
cmp
add
pop
pop
scas
cs
ud0
cmp
repz
clc
idiv
adc
retf
or
xor
add
dec
dec
inc
add
jns
jno
popa
out
add
ret
mov
sbb
mov
cs
es
mov
and
adc
mov
mov
clc
mov
adc
in
test
and
or
popf
inc
ror
in
add
cmp
mov
das
add
loop
dec
mov
push
adc
mov
mov
imul
cmp
mov
fst
enter
mov
sub
or
push
push
shl
imul
mov
xor
or
sbb
iret
sbb
imul
adc
cmp
js
push
dec
xor
xor
dec
outs
popa
adc
clc
adc
sbb
rcl
ucomiss
outs
loope
push
inc
push
mov
mov
jmp
adc
inc
enter
dec
call
sub
dec
cmp
call
mov
mov
push
lahf
xor
dec
leave
cmp
inc
jge
inc
ret
dec
rcr
push
and
push
cmc
and
xor
popf
push
in
sub
call
jmp
adc
xchg
fnstenv
sbb
enter
es
add
cmp
ret
cs
imul
addr16
sub
je
mov
pop
push
lea
inc
daa
or
retf
inc
in
mov
daa
xchg
mov
es
dec
inc
and
dec
mov
dec
and
or
test
fwait
dec
add
pop
fistp
mov
fmul
sbb
jno
sub
add
leave
fs
cmp
push
mov
xor
add
fld
adc
mov
sbb
and
or
arpl
rcr
pop
xchg
push
retf
xchg
outs
inc
mov
inc
xor
add
xor
outs
push
cmps
enter
in
cmp
fiadd
outs
sbb
push
push
fsincos
lahf
scas
lea
and
dec
hlt
std
pop
ja
addr16
mov
mov
retf
fs
sbb
xor
retf
dec
scas
xchg
movs
jmp
lock
mov
xchg
pusha
daa
sti
pop
or
adc
ins
mov
add
mov
loopne
pusha
cmp
adc
mov
scas
add
inc
call
fiadd
sub
adc
add
jecxz
push
cmp
inc
pop
mov
dec
rol
sar
or
mov
movs
call
inc
cmp
or
loope
and
dec
sbb
sub
xchg
inc
loopne
mov
cmp
js
xchg
dec
push
cmp
cwde
ret
mov
pop
adc
jmp
inc
or
and
xchg
fild
call
jo
jge
xor
and
mov
sub
fist
or
nop
or
sub
nop
sbb
pop
and
sub
jmp
bound
and
aaa
test
jo
push
xchg
dec
inc
adc
sub
pop
dec
cmp
mov
pusha
scas
mov
retf
and
pop
add
add
add
fdiv
sti
nop
cmp
sbb
pop
sub
sbb
dec
mov
mov
cmps
(bad)
and
enter
sub
(bad)
(bad)
or
(bad)
(bad)
sbb
(bad)
retf
je
test
fwait
or
push
jne
movs
mov
and
xchg
shl
xor
sbb
inc
mov
inc
mov
dec
xchg
adc
pop
and
sbb
push
sbb
dec
sbb
in
imul
int3
adc
sbb
xor
stos
sub
dec
leave
xlat
push
xor
push
fisttp
sub
dec
cld
dec
push
adc
jbe
ins
xor
mov
cs
clc
lods
and
sub
dec
or
imul
pop
ret
push
push
or
or
sbb
xor
sbb
leave
ror
xchg
lea
adc
ss
std
and
push
adc
aas
jg
pop
mov
add
push
mov
add
ret
movs
pop
sti
sbb
push
ret
int
mov
and
mov
sub
sti
adc
shl
neg
or
xchg
pop
fdiv
mov
mov
std
mov
ret
clc
aaa
sbb
mov
pop
cmp
call
sub
push
add
push
popa
loope
jo
add
std
mov
add
scas
push
imul
sub
loope
sbb
dec
call
and
pop
pop
cmp
and
fiadd
push
add
nop
(bad)
pop
sub
push
mov
pop
add
add
mov
and
or
lock
ja
inc
call
daa
test
sub
pop
or
rol
cwde
dec
push
or
dec
pop
sbb
push
mov
and
dec
bound
popa
or
xchg
adc
xchg
add
push
adc
pop
jns
shl
mov
add
outs
cmp
(bad)
call
inc
aas
sbb
mov
or
out
stos
xor
cmp
mov
(bad)
test
test
aam
add
mov
sub
sbb
dec
dec
sub
nop
jbe
push
cmp
mov
mov
or
lahf
xor
stos
addr16
and
cmps
cmp
inc
mov
fwait
adc
mov
cmp
dec
or
jmp
or
scas
or
cmp
xchg
cdq
fdivr
and
rcl
and
mov
add
dec
cmp
or
sub
add
cmp
sbb
adc
add
xor
push
or
in
lods
inc
sub
packuswb
or
inc
add
inc
xchg
call
jg
cmps
add
xlat
out
cmp
cmps
mov
jmp
ficom
or
and
jns
adc
cmp
mov
jo
(bad)
cmps
cs
or
iret
in
add
mov
out
add
gs
push
cmps
push
xchg
or
mov
cmp
aaa
and
pusha
call
sbb
in
lods
xchg
fst
call
or
mov
jne
fsubr
dec
cmp
push
jmp
add
mov
mov
add
fcom
div
xchg
mov
xchg
push
pop
xor
sub
ret
sbb
sbb
aam
(bad)
pop
sub
and
add
sub
daa
push
sub
loope
cmp
jmp
xchg
inc
mov
repz
sbb
jno
sbb
mov
adc
xor
nop
push
int
jbe
jge
fstp
xchg
adc
shl
or
or
imul
stos
arpl
test
call
dec
add
add
jo
mov
xchg
mov
add
mov
sahf
xor
push
add
mov
mov
ins
ret
pop
dec
in
xor
cmp
cmp
imul
ds
cmps
fs
push
mov
das
xor
adc
push
inc
xor
fs
pushf
cmps
bound
sbb
mov
and
clc
xchg
inc
pop
out
aam
dec
shl
and
sbb
push
xor
and
ret
inc
in
xchg
and
and
ja
inc
xor
adc
out
inc
imul
mov
cwde
lea
(bad)
pop
jmp
popf
inc
fdivr
and
push
inc
stc
pop
lea
xor
jbe
lods
pop
pop
or
fs
fs
mov
in
push
fcmovnbe
push
push
sbb
push
fs
jmp
leave
rol
imul
or
jne
fld
and
jnp
xchg
and
dec
dec
or
add
mov
jo
fcom
xrelease
sub
sbb
adc
jmp
lock
dec
add
pop
push
sbb
add
ds
jecxz
jns
popf
addr16
sub
cmp
adc
lock
leave
sti
cmp
retf
jmp
sti
mov
jmp
cmps
retf
add
and
shl
mov
leave
mov
and
test
loope
test
add
leave
jle
add
add
leave
imul
inc
mov
test
aad
nop
push
loope
je
or
test
dec
xchg
and
imul
enter
dec
dec
shl
or
xchg
icebp
(bad)
fdiv
add
or
aam
mov
pop
adc
add
int3
and
aad
dec
or
adc
mov
retf
cmps
fldenv
push
jmp
dec
inc
dec
adc
jp
adc
jne
aam
xchg
add
js
mov
cld
icebp
pop
mov
push
es
retf
xor
sbb
inc
jecxz
std
xchg
add
sbb
movs
mov
add
dec
mov
stc
or
sbb
ds
jmp
popf
pushf
retf
nop
xchg
cmp
mov
or
ret
dec
paddb
inc
loope
in
nop
inc
shr
add
mov
add
sar
dec
jmp
mov
imul
adc
imul
adc
shl
leave
xchg
push
pop
test
mov
mov
jne
and
cdq
mov
lock
cmps
cwde
pusha
adc
loope
inc
add
pop
mov
cmp
xchg
pop
nop
repnz
add
mov
add
add
jns
add
push
kmovw
movs
and
and
push
sbb
cdq
xor
test
add
xchg
inc
pop
push
jno
push
and
mov
icebp
in
lods
xor
mov
or
(bad)
movs
add
mov
retf
inc
mov
(bad)
inc
or
lea
xlat
fadd
pop
nop
test
test
imul
jg
push
cwde
mov
sub
lds
sbb
xor
jg
jle
ret
mov
add
test
add
pop
pop
test
and
(bad)
xchg
dec
xor
in
dec
inc
inc
movzx
paddusb
dec
lahf
jo
push
adc
rol
(bad)
retf
add
or
repnz
pop
lds
aaa
push
icebp
push
push
cmp
dec
sbb
out
sub
fadd
and
and
add
daa
sub
fwait
imul
mov
cmc
dec
push
out
sub
test
dec
dec
dec
in
sbb
js
scas
je
repz
cld
mov
adc
jp
adc
mov
or
imul
loope
fild
xor
add
and
loopne
je
or
nop
outs
xchg
retf
or
test
add
xchg
(bad)
dec
add
clc
dec
cmp
push
xor
mov
xor
push
dec
jo
aaa
sbb
cmp
sub
push
and
dec
js
sub
loop
cmp
push
in
and
js
xchg
push
push
mov
imul
dec
ror
dec
mov
fisttp
pop
pop
and
push
inc
inc
sub
mov
test
sti
arpl
fs
ja
jge
sbb
and
test
xchg
retf
js
jl
ror
outs
ja
movs
mov
or
xchg
jae
mov
sahf
gs
add
adc
dec
bound
rcr
cld
and
jmp
xchg
test
jno
push
pop
sub
add
adc
sub
sahf
sub
mov
dec
rol
fisubr
retf
add
push
aas
sbb
sbb
aaa
sub
cmps
inc
jge
daa
mov
test
ror
sbb
fs
das
dec
retf
mov
inc
push
ins
adc
jne
sub
lahf
shl
or
push
inc
out
out
mov
push
sbb
mov
add
mov
pop
int3
rol
outs
add
push
xor
push
dec
xchg
or
jo
adc
jecxz
das
inc
pop
(bad)
fcmovbe
shl
sub
push
pop
into
adc
(bad)
(bad)
mov
inc
sbb
or
popa
cmovo
outs
sbb
adc
push
adc
popa
imul
fmul
repnz
fs
pop
hlt
fld
add
aas
adc
mov
les
inc
xor
rol
and
dec
push
in
cli
aam
ins
jmp
jmp
mov
lock
push
idiv
xor
rcr
mov
xor
js
cmp
in
out
cmps
xor
push
clc
adc
sub
push
mov
add
cwde
sbb
movs
in
rcr
ret
xchg
push
stc
movs
rcl
hlt
cmp
cwde
retf
repz
out
or
loopne
cmp
cld
xor
xchg
cdq
adc
sbb
dec
movs
gs
push
and
or
mov
xor
test
rol
arpl
and
add
mov
inc
jl
cmp
lock
mov
call
test
push
cmc
xor
xchg
or
aas
fdivr
mov
stos
dec
mov
adc
and
sar
mov
shl
fild
nop
push
push
mov
and
cmp
mov
dec
xor
dec
push
lea
outs
lea
push
and
and
mov
repz
movs
lea
popa
sub
jne
mov
lea
cdq
jo
add
xor
dec
inc
(bad)
mov
xor
fstp
xor
retf
cmps
cmp
sahf
fstp
clc
gs
shl
lea
sbb
and
ret
popa
aam
sub
sub
sahf
call
arpl
push
rcl
pop
add
or
out
adc
inc
add
int
in
xchg
lods
(bad)
or
and
jo
or
fcomp
mov
cmp
jge
adc
mov
sbb
clc
loop
pop
push
lods
inc
ins
cs
push
sbb
pop
dec
pop
fmulp
shr
pop
aaa
cmc
pop
mov
mov
repnz
mov
adc
mov
xor
or
cmp
lock
or
cmp
xor
out
dec
dec
mov
sbb
mov
mov
and
das
dec
mov
and
aad
sbb
adc
movs
mov
mov
or
fwait
or
ret
push
cmp
sti
dec
and
add
xchg
lods
adc
in
arpl
jge
sub
movs
(bad)
add
sti
jl
imul
add
mov
clc
jo
and
aam
jne
movs
xchg
add
shl
fs
or
or
dec
sbb
sbb
xor
cwde
adc
test
inc
pop
div
and
cs
sub
adc
push
nop
jo
leave
and
add
fst
into
sbb
push
dec
jae
das
sub
dec
pop
inc
push
and
jo
cmp
push
dec
loop
or
cld
leave
dec
retf
inc
sub
sti
inc
or
jo
add
push
or
test
cmp
adc
cmp
jnp
loop
dec
push
mov
or
sbb
and
(bad)
cmp
xor
xor
push
mov
or
jge
je
test
js
daa
adc
or
pop
adc
lods
call
add
div
push
jl
sub
lock
iret
dec
add
jo
test
push
pop
mov
add
sbb
inc
js
dec
dec
adc
scas
loopne
fs
push
arpl
mov
add
dec
jl
mov
add
inc
pusha
js
or
daa
aaa
push
scas
sbb
xor
pop
add
adc
lods
inc
sbb
ret
push
inc
pop
ins
imul
push
and
and
add
out
ret
fadd
lock
test
sbb
adc
popa
or
mov
inc
or
mov
xlat
cmp
xchg
cld
mov
je
push
ret
sbb
mov
sub
aas
mov
rcl
das
inc
sub
add
xor
in
push
push
mov
pop
pop
loopne
mov
fnstenv
dec
arpl
or
es
adc
(bad)
mov
cmp
ret
sbb
in
sti
cmps
test
mov
inc
inc
mov
push
adc
sbb
xor
mov
xor
pop
ja
add
dec
add
and
popa
adc
adc
test
xor
add
aam
sbb
cmp
mov
push
xchg
and
jae
dec
retf
lods
cmp
mov
ins
sbb
add
inc
inc
scas
imul
jne
jo
xchg
and
inc
ret
add
mov
mov
mov
cmp
nop
xor
lock
scas
data16
fcom
jae
or
adc
add
mov
jmp
jne
clc
arpl
add
add
mov
jne
imul
sub
cli
push
lock
imul
sbb
cmp
jmp
into
and
xchg
nop
jne
mov
setno
jne
or
mov
add
cmp
xor
adc
movs
cmp
add
jo
push
push
bound
lea
sar
inc
adc
nop
mov
push
dec
inc
dec
xor
mov
push
(bad)
push
dec
xchg
js
(bad)
imul
cmp
cwde
addr16
mov
jo
call
cs
inc
retf
adc
sbb
jae
movs
dec
xor
int
sbb
dec
mov
jecxz
mov
lea
mov
mov
ror
add
fst
push
not
ret
test
adc
cmps
aaa
add
mov
adc
push
cmp
add
dec
arpl
adc
xchg
push
push
push
or
adc
sbb
cmp
dec
jno
or
or
push
xchg
sub
sbb
idiv
in
popa
adc
shl
ret
test
or
je
push
stos
sub
jge
test
nop
cmp
into
in
test
loopne
shr
mov
ins
out
int
cwde
(bad)
retf
out
loopne
sbb
dec
or
pop
cmp
cmp
ins
or
pop
adc
add
adc
enter
mov
inc
push
or
dec
mov
rcr
adc
shl
loopne
mov
jp
enter
mov
and
cld
cdq
dec
mov
fldcw
dec
sub
adc
int
rcl
fcom
add
gs
or
mov
jae
ja
pop
and
fisttp
push
in
cdq
ret
mov
shl
adc
pop
and
xor
(bad)
ins
pop
jmp
mov
jbe
mov
clc
in
lods
sbb
ror
xor
push
fmul
in
inc
call
cmp
mov
in
pop
fisub
in
inc
add
push
sbb
add
daa
cmps
xor
jmp
adc
sbb
sbb
das
sub
mov
sti
aaa
and
sub
icebp
add
lea
jl
dec
or
js
sbb
inc
sbb
popa
cmp
push
aas
adc
lea
push
ret
mov
mov
push
inc
mov
adc
mov
rcr
jae
jle
add
(bad)
jmp
retf
popa
das
cmps
push
das
or
or
ret
mov
inc
add
out
ins
or
addr16
pop
or
mov
movs
es
mov
mov
inc
cmps
and
jae
jg
xor
mov
cmp
je
xor
jnp
lock
mov
pop
clc
inc
jbe
das
xchg
dec
in
int
pop
add
shr
sti
mov
loope
jns
icebp
lods
and
xor
lods
xor
xor
pop
es
fst
push
xchg
and
outs
imul
pop
dec
cmp
mov
push
leave
and
and
repnz
and
inc
xchg
test
or
mov
inc
and
lock
jno
dec
ret
mov
jae
movs
mov
(bad)
add
add
(bad)
sbb
and
lock
add
and
outs
into
mov
dec
cmp
in
jns
push
sbb
xchg
lock
cld
or
repz
add
shl
mov
xlat
cmp
or
loop
or
lahf
enter
push
push
sub
ret
add
and
fsub
inc
mov
and
inc
and
or
daa
iret
repz
mov
rcl
test
sbb
clc
inc
adc
or
mov
pop
ficomp
pop
xchg
pop
add
es
xor
inc
add
pop
ret
pop
add
push
clc
adc
pop
clc
add
ret
mov
mov
jmp
push
in
lock
xchg
out
ss
mov
ret
jae
retf
ss
push
jne
xor
push
dec
fadd
fidiv
jp
sub
mov
adc
mov
pop
xor
sbb
leave
loopne
lea
ins
push
shl
push
pop
add
or
push
mov
test
fsubr
or
arpl
mov
push
ins
dec
enter
clc
and
inc
push
push
xor
adc
adc
sub
je
sub
fist
ror
mov
sti
adc
fwait
sub
jp
sbb
inc
enter
imul
add
xor
aam
add
iret
cmp
pop
mov
mov
icebp
mov
cmp
sbb
mov
mov
or
addr16
inc
mov
int
arpl
and
test
lea
ret
cmc
pop
push
jmp
pop
or
imul
or
and
inc
push
pop
adc
jo
mov
xor
cli
gs
sub
mov
popa
xor
add
outs
mov
adc
add
pop
or
nop
push
add
add
gs
xchg
inc
nop
fwait
push
sub
in
and
cli
pop
push
xlat
xchg
add
xchg
aam
cdq
call
sub
lods
retf
sub
xchg
out
mov
repz
call
push
sbb
mov
jne
dec
lds
cmp
mov
sar
jecxz
jne
in
sub
adc
stos
retf
aad
xchg
jns
and
push
cs
jne
lods
mov
mov
sbb
xor
sbb
leave
adc
(bad)
std
or
push
and
jo
sub
cmp
push
mov
fstp
xor
pop
xchg
neg
add
sbb
xor
sub
or
jmp
int
and
loope
mov
les
int3
add
in
inc
dec
(bad)
push
sbb
or
sub
push
and
adc
shr
cmp
gs
jl
and
ins
push
or
push
sbb
add
adc
dec
xor
push
inc
cmc
imul
adc
(bad)
sbb
fnstcw
ds
and
hlt
aam
stc
(bad)
call
sbb
push
mov
and
sbb
jns
dec
add
rol
pop
jno
js
jmp
nop
sbb
sbb
repnz
or
xor
repnz
inc
xchg
sbb
adc
pusha
fld
and
inc
mov
sub
cmps
aam
dec
jmp
add
mov
cmc
clc
hlt
jl
cmc
or
mov
xchg
movs
into
inc
inc
sbb
ja
movs
xor
pop
rcr
sbb
adc
mov
imul
lock
xchg
add
jge
mov
sub
mov
(bad)
cmp
test
mov
mov
push
mov
ins
lea
pop
add
scas
sbb
fs
add
fadd
test
xchg
call
add
(bad)
(bad)
fiadd
mov
sub
mov
sub
and
outs
or
pop
or
je
cmp
addr16
mov
mov
fimul
pop
cs
pop
jo
jo
dec
sub
or
fadd
push
jle
popa
inc
and
adc
mov
mov
adc
xchg
xchg
aad
pop
call
and
psubd
push
pop
cmp
les
and
push
push
and
in
dec
ror
or
sbb
push
ds
addr16
jmp
cmp
pop
loop
push
or
in
lds
xchg
xchg
add
fcomp
mov
rcl
loopne
sbb
fistp
dec
lock
sub
mov
adc
dec
xor
outs
inc
cdq
pop
adc
nop
ret
mov
in
pop
jmp
mov
dec
push
lea
or
pop
pop
dec
add
xor
in
add
mov
and
lea
sub
or
mov
les
fadd
shr
adc
mov
pop
ror
xchg
bound
je
adc
sub
test
sbb
sub
cmc
cmp
fwait
jp
das
aad
mov
int3
push
jp
ficomp
push
mov
add
test
shl
xchg
mov
fwait
cwde
in
jg
pushf
les
mov
cmp
jl
les
dec
pop
ins
pop
push
inc
dec
push
mov
adc
push
dec
mov
dec
cmp
dec
sbb
nop
xchg
int
sahf
movs
fistp
fistp
(bad)
ins
jmp
nop
in
push
lea
push
int
test
mov
mov
inc
loope
enter
adc
sub
aam
and
push
push
les
mov
push
pop
std
add
sub
js
sub
movs
imul
jge
xor
push
sbb
mov
bound
inc
pop
cdq
popf
loop
sub
or
inc
add
sbb
xchg
jno
(bad)
cmp
jb
pop
es
imul
pop
ds
lahf
jo
xor
mov
test
loopne
add
out
xor
cwde
pop
mov
outs
mov
pusha
cmp
retf
push
mov
add
movs
dec
xor
sub
jno
add
pop
aaa
sbb
push
push
pop
push
imul
test
jecxz
or
adc
pop
jmp
adc
xchg
mov
cmp
push
cmp
enter
and
xor
lock
clc
les
jno
fild
rol
arpl
dec
add
sub
dec
aaa
dec
fistp
aam
or
lock
popf
pop
or
push
add
cmp
xchg
cwde
mov
test
add
ror
sub
pop
xchg
push
xchg
popf
mov
mov
xor
dec
or
cdq
mov
and
(bad)
daa
lods
mov
cmps
jno
popa
ret
dec
imul
add
enter
retf
in
shl
adc
fcom
dec
mul
call
inc
pop
sub
outs
loopne
(bad)
loope
inc
sbb
retf
sub
pop
pushf
int
movs
pop
scas
sbb
xor
inc
lahf
adc
or
sub
jne
inc
push
arpl
pusha
mov
sar
push
sbb
push
or
and
lea
dec
and
nop
gs
add
outs
pop
mov
pop
in
mov
pop
int3
dec
stc
(bad)
pop
xor
jge
push
inc
xchg
jmp
dec
fmul
sbb
pop
aas
pop
rcl
push
test
iret
ret
and
and
das
inc
fld
daa
mov
lods
shl
test
add
adc
xor
shl
lea
cmp
pop
add
outs
push
sahf
cmps
push
mov
out
jne
ss
inc
push
push
dec
adc
sub
xor
popa
mov
loope
adc
fimul
and
push
lock
dec
xchg
mov
sbb
sbb
outs
xchg
dec
sub
push
mov
and
mov
jo
and
(bad)
xchg
out
bound
mov
or
sub
dec
mov
inc
xor
push
xor
pusha
jge
ins
fldz
jge
fadd
fmul
push
fs
ret
jmp
mov
ror
add
add
jb
ds
jg
cmp
cmp
ins
push
sbb
push
adc
shl
loope
xor
and
arpl
leave
xchg
cmp
or
push
mov
mov
adc
fcomp
push
(bad)
leave
lods
and
outs
mov
push
pop
in
ins
lahf
fst
test
nop
mov
or
or
cwde
ins
mov
movs
or
pop
in
add
popa
pushf
nop
movs
add
int3
out
loope
and
pop
fild
xlat
loope
stos
and
fnstcw
mov
xchg
xchg
aaa
cmps
sbb
lods
iret
sahf
adc
(bad)
push
fadd
inc
sbb
hlt
inc
mov
or
sbb
push
outs
jnp
mov
add
out
mov
popa
jmp
add
mov
xchg
sub
sbb
push
sbb
cmp
adc
mov
add
or
lock
imul
xchg
pop
fmul
push
push
or
mov
adc
pop
repnz
fs
lock
push
out
dec
push
mov
push
leave
and
pop
lods
pop
lods
mov
dec
pop
lods
lods
(bad)
lods
mov
add
popa
lea
sub
sbb
add
mov
push
jl
retf
pop
adc
xchg
out
mov
or
pop
mov
xlat
sbb
(bad)
xor
push
jg
xchg
inc
call
or
pop
push
inc
fwait
sub
push
push
ret
int
stos
and
adc
push
xchg
loopne
(bad)
rol
cmp
icebp
push
or
and
xor
sub
mov
xchg
mov
mov
add
outs
mov
and
repz
fucompp
iret
fadd
aam
or
shl
ja
fmul
sti
and
mov
fmul
pop
dec
imul
cmp
inc
retf
mov
lods
and
rcr
xchg
or
adc
xchg
lock
and
lods
in
push
ja
push
pusha
test
loop
dec
dec
fnstsw
ret
(bad)
ficom
adc
nop
add
push
xchg
and
jmp
test
ror
gs
sub
xor
or
and
call
pop
enter
push
and
adc
ins
test
and
std
stos
cmp
cdq
pop
sar
ret
mov
lods
add
inc
mov
mov
or
inc
and
add
loop
jp
mov
and
jp
movs
dec
adc
inc
ret
std
lahf
jg
or
pushf
stc
retf
or
sub
inc
rcl
sub
movs
xor
stc
xor
mov
mov
stos
imul
xchg
(bad)
hlt
lea
push
imul
hlt
push
movs
inc
dec
dec
add
sub
pop
popf
popf
push
push
add
and
mov
pcmpgtw
jle
nop
sbb
pop
adc
cwde
push
add
test
mov
pop
xor
ror
jbe
xacquire
inc
in
retf
xchg
shl
and
mov
out
mov
inc
sbb
push
pop
push
fcom
rcr
popa
or
popf
xor
aas
or
xchg
test
sar
jo
popa
xor
int
pop
ret
adc
ret
(bad)
sbb
push
fild
in
adc
lock
sub
sub
fwait
sbb
xchg
pop
ja
or
cwde
dec
in
add
dec
push
push
test
xor
cmp
or
jmp
xchg
mov
rcr
xchg
xor
in
clc
or
sbb
mov
pop
fmulp
xor
mov
aad
xor
xor
sti
cwde
xor
aaa
aaa
push
sbb
int3
cwde
cwde
push
xchg
cmp
sbb
pop
jge
push
dec
dec
mov
mov
xor
inc
push
rep
stc
dec
test
add
add
mov
cmp
xlat
xor
dec
in
mov
inc
adc
push
test
add
je
nop
or
shl
dec
sub
sub
push
es
std
lock
xchg
push
sub
or
cmps
pusha
ds
adc
(bad)
mov
in
jmp
ins
cwde
push
mov
loopne
inc
sub
adc
or
cld
sub
add
rcr
out
sub
push
dec
ror
fwait
sbb
sub
sbb
add
retf
es
scas
pop
arpl
stos
jno
add
adc
inc
xor
sti
xor
fisub
out
mov
fild
jecxz
popa
sbb
mov
add
nop
sbb
mov
jl
ins
das
pop
or
mov
mov
or
mov
cmp
addr16
je
cdq
adc
aaa
lds
pop
cmps
pop
in
dec
or
inc
iret
(bad)
push
or
and
add
pop
or
mov
inc
retf
es
movs
lods
inc
sub
adc
mov
push
and
adc
rol
and
sub
or
fiadd
inc
and
jge
in
sbb
add
ins
in
and
jp
sub
push
fist
mov
push
rcr
add
outs
dec
aas
dec
mov
mov
gs
leave
(bad)
fs
xor
mov
popa
add
jge
mov
push
push
push
dec
call
adc
adc
add
adc
lods
(bad)
pop
outs
mov
(bad)
sbb
shl
sub
dec
inc
cmp
(bad)
lods
in
addr16
cmps
lds
push
or
test
dec
and
shl
fst
mov
pusha
aad
or
ret
mov
aaa
mov
or
lea
retf
retf
mov
adc
pop
push
or
ret
mov
mul
sub
popf
popa
pop
push
sub
jmp
dec
inc
sbb
pop
in
arpl
bound
jmp
push
pop
push
jno
(bad)
ret
mov
xor
out
psrld
xchg
je
and
mov
cdq
in
shl
cli
xor
test
cmp
pop
movs
xchg
call
add
xchg
imul
jbe
jecxz
jbe
neg
unpckhps
dec
cdq
pop
dec
movs
push
in
fild
push
xor
mov
test
pop
mov
dec
fs
test
lods
cmc
mov
xor
shr
aad
mov
ins
movs
xlat
test
cmps
push
iret
bound
pop
(bad)
frstor
mov
cmp
scas
sbb
gs
add
or
enter
sub
dec
xor
retf
pop
and
sahf
xchg
inc
test
movs
mov
(bad)
dec
sbb
(bad)
fild
pop
push
fild
loopne
or
lock
(bad)
pusha
sub
cmp
nop
xchg
mov
into
push
cmp
add
inc
inc
cmp
inc
dec
cmc
push
dec
ss
dec
xor
mov
in
cmps
push
add
xchg
in
adc
data16
inc
sbb
cmp
mov
cmp
ins
test
sbb
shl
je
inc
cmp
jp
out
retf
dec
ins
loope
sbb
sbb
fstp
jne
push
rcl
jb
shl
add
enter
xchg
data16
movs
inc
inc
shl
stc
fcom
or
popa
and
cmp
inc
jne
mov
jg
and
xor
(bad)
pop
add
push
mov
pop
fidiv
loop
aad
mov
push
xor
add
mov
in
daa
js
fisttp
movs
mov
cdq
xchg
pop
cdq
dec
xor
sub
push
push
push
cs
dec
or
pop
movs
mov
jmp
enter
test
retf
cdq
xor
add
sar
mov
test
and
rol
xor
mov
fmul
mov
mov
stos
pop
push
dec
(bad)
mov
popa
inc
adc
xor
sbb
dec
mov
mov
hlt
int3
sbb
push
retf
push
(bad)
daa
es
fcompp
push
movs
sbb
push
or
clc
pop
dec
mov
adc
in
shr
xchg
retf
adc
cmp
inc
sub
xchg
and
add
adc
pop
xchg
adc
push
movs
cmps
and
jg
cmp
adc
in
and
imul
shr
mov
int
push
das
lock
pusha
add
inc
mov
dec
sbb
xor
jno
inc
call
mov
pop
out
adc
adc
ja
jle
jecxz
or
(bad)
push
add
in
mov
push
pop
xchg
cmp
xor
nop
push
call
cmp
inc
in
jmp
pop
rcl
jle
ret
push
lock
sbb
ins
loop
js
sbb
or
adc
sub
loop
xchg
dec
mov
mov
scas
inc
push
inc
mov
and
(bad)
push
mov
cmp
mov
and
jmp
sub
sbb
cmps
lahf
inc
adc
sub
add
div
mov
mov
mov
or
shl
pop
mov
movs
fldenv
jne
cmp
or
mov
das
cld
add
lea
test
or
mov
inc
mov
cmp
push
mov
and
mov
lods
adc
pusha
int
or
fs
xchg
push
fs
cmp
outs
adc
mov
ss
aam
stos
inc
outs
adc
ret
push
js
pushf
test
sbb
or
outs
adc
inc
loopne
fiadd
shr
sbb
xlat
cmps
je
inc
mov
div
mov
add
rcl
pushf
cli
ror
imul
jg
shr
cmp
sub
and
sahf
lods
jp
add
or
xchg
call
repnz
mov
jmp
adc
inc
test
mov
dec
jmp
retf
mov
in
(bad)
xor
loopne
test
pop
popa
popa
repnz
loope
ss
xchg
call
les
fidivr
pop
das
dec
inc
test
mov
test
push
nop
push
jbe
push
movs
pop
push
inc
je
inc
fisttp
jecxz
xor
mov
jl
inc
outs
xchg
adc
por
popf
cmp
pushf
or
daa
lock
lock
inc
int
nop
or
and
nop
je
inc
js
fwait
and
xor
add
fs
aaa
add
cwde
sbb
cld
mul
cs
jb
aam
and
add
lods
push
xor
push
pop
jo
jbe
inc
movs
pop
mov
sbb
inc
clc
clc
loopne
mov
or
ins
je
add
mov
mov
push
data16
mov
fld
test
mov
xchg
leave
or
fwait
pop
frstor
in
cdq
in
dec
nop
mov
push
sti
test
adc
mov
dec
imul
bound
push
lods
(bad)
(bad)
xor
repnz
repnz
xor
cmp
xchg
ja
dec
fwait
ins
or
add
ret
push
mov
scas
xchg
les
sub
fwait
adc
and
push
cmp
or
push
mov
dec
or
pushf
mov
push
test
jecxz
dec
rsqrtps
push
xor
inc
adc
int3
mov
pop
rol
push
dec
adc
sahf
mov
inc
ins
and
into
mov
lods
add
std
mov
push
add
test
and
into
mov
push
add
mov
xor
inc
or
mov
inc
adc
popf
xchg
in
aaa
dec
push
ss
or
or
xchg
and
sub
jbe
retf
and
mov
mov
jge
jne
inc
sbb
mov
push
shl
xor
push
call
and
outs
push
add
add
add
cmp
repnz
ss
sti
push
push
push
es
or
xchg
popf
and
fld
fwait
lods
lds
in
clc
(bad)
je
push
push
test
(bad)
loope
sub
neg
cdq
mov
retf
sbb
std
ret
lods
gs
pushf
punpckhbw
jne
add
loopne
mov
or
mov
inc
ror
dec
add
shr
push
enter
retf
and
xor
movs
add
test
shl
and
inc
inc
ret
push
(bad)
xlat
push
adc
lods
dec
scas
call
retf
je
inc
xchg
push
mov
sbb
mov
push
mov
lods
mov
retf
add
or
jae
and
or
cmps
sub
sub
pop
retf
ss
data16
push
cdq
inc
(bad)
jge
sbb
xchg
adc
add
or
call
cmps
lea
and
mov
dec
js
fisttp
bound
imul
in
inc
movs
or
inc
dec
sub
mov
mov
jo
iret
mov
push
cmovae
push
push
push
sub
inc
ds
scas
imul
cmp
mov
imul
inc
(bad)
jmp
push
push
sub
push
test
ret
movs
and
sbb
or
adc
add
push
pusha
mov
pusha
loopne
sbb
gs
dec
mov
push
ret
and
sar
mov
sub
jnp
mov
bound
gs
data16
movs
sub
pop
xor
dec
jmp
pop
nop
dec
ror
or
xchg
ret
repnz
pop
xor
mov
adc
xor
dec
dec
or
ret
fisub
sub
push
jg
test
retf
sbb
mov
movs
cs
dec
icebp
fs
inc
dec
ins
dec
mov
hlt
test
jle
jle
add
test
stc
daa
aam
xchg
add
and
pop
es
mov
scas
and
xchg
or
js
mov
xchg
or
imul
add
and
xor
xchg
jnp
push
jo
cwde
js
jmp
shl
xchg
inc
mov
ret
or
jnp
fwait
enter
inc
cld
lock
inc
mov
aaa
dec
fisttp
lock
lahf
inc
ret
xchg
sub
xchg
mov
or
sbb
mov
inc
dec
rol
adc
adc
sti
add
fmul
push
add
dec
xor
xchg
dec
jnp
repz
movs
xchg
add
and
xor
and
xchg
inc
fisttp
test
imul
xchg
push
mov
das
add
and
outs
rcl
sahf
push
(bad)
jb
dec
and
das
mov
xchg
test
test
cmps
sub
and
mov
inc
pop
es
xor
push
sbb
hlt
sub
push
add
mov
icebp
popa
add
add
adc
push
sahf
add
mov
xor
adc
xor
aas
sbb
shr
add
jbe
pop
push
mov
mov
popf
and
xchg
dec
inc
loope
inc
mov
and
add
sbb
daa
fmul
cmp
and
popf
inc
and
adc
sub
mov
cwde
mov
sbb
movs
arpl
daa
mov
add
add
mov
js
add
push
push
dec
cmps
pusha
xor
push
mov
ss
aaa
mov
inc
and
or
inc
out
fs
ficomp
add
xor
int
cs
pop
xlat
pop
mov
bound
ror
enter
mov
pusha
inc
sbb
movs
inc
stos
mov
(bad)
mov
inc
inc
mov
adc
jecxz
fwait
loopne
push
mov
inc
(bad)
push
or
and
dec
in
add
test
arpl
mov
or
sub
loope
dec
lods
rol
je
cmp
mov
xor
push
jns
sub
mov
les
push
or
popa
add
fucom
push
enter
imul
xor
or
loopne
add
addr16
mov
sub
jge
xchg
or
aad
ss
dec
fmul
stc
and
pop
push
sbb
and
jp
cmp
jle
enter
jns
mov
jmp
or
push
outs
push
xchg
xchg
inc
push
or
bnd
movs
mov
and
das
xor
sahf
cld
in
cmp
adc
mov
mov
sub
push
dec
mov
jbe
mov
mov
or
jge
mov
or
mov
jmp
(bad)
es
adc
leave
pop
xor
pop
or
retf
sub
outs
lock
jno
push
pop
adc
ret
mov
sub
mov
and
and
in
adc
add
or
mov
stos
les
add
das
mov
or
inc
push
sbb
mov
fcom
xchg
sub
jmp
aas
sub
push
cs
and
imul
jne
sbb
jno
cmps
int3
or
aam
cwde
dec
mov
and
inc
xchg
dec
xor
les
fcom
jp
rcl
xchg
pop
sti
jmp
and
lea
jne
daa
outs
fbld
pop
jle
gs
pop
(bad)
push
fdiv
pop
mov
dec
jb
mov
cmc
dec
xchg
xchg
xchg
sbb
dec
xor
mov
jle
shl
mov
push
into
or
shl
imul
lock
int
sbb
loopne
adc
sub
int
add
adc
cmps
hlt
inc
inc
xor
push
mov
cmp
fwait
loop
inc
add
cmp
pop
mov
ss
mov
inc
inc
mov
lods
mov
int3
push
cmp
xor
ins
cpuid
xchg
in
mov
std
dec
das
pop
ja
test
sub
and
or
mov
adc
xchg
mov
xchg
ror
retf
and
pop
mov
fisub
(bad)
int3
cmp
xor
int3
outs
push
add
mov
fdiv
jno
jmp
outs
pop
test
xlat
sbb
xchg
add
cwde
sub
imul
mov
sbb
imul
je
push
aad
ror
and
lods
sub
das
ror
push
sbb
fwait
push
adc
ror
rcr
or
outs
cmp
or
mov
sub
cmp
sbb
xlat
or
movs
pop
gs
or
push
movs
sub
sbb
ficomp
loope
and
jnp
and
or
les
mov
dec
inc
in
shl
mov
and
sub
mov
daa
lds
mov
xstore-rng
cmps
add
ins
sbb
iret
pop
movd
cdq
daa
adc
test
cmp
add
lds
adc
add
add
clc
not
iret
mov
iret
push
mov
aaa
bound
sub
jo
scas
xor
add
xchg
ror
or
adc
sub
in
sbb
call
or
pop
push
mov
cmp
je
inc
jmp
ja
inc
popf
or
shl
xor
and
jg
sbb
push
xor
cmps
dec
sbb
mov
mov
adc
(bad)
push
dec
sub
repz
push
stos
or
cmp
inc
mov
add
inc
fistp
jl
out
mov
pop
xor
sbb
pop
jmp
or
add
into
add
mov
or
or
(bad)
aas
dec
mov
ins
or
sbb
or
pusha
outs
jg
pop
(bad)
cld
jl
adc
jl
enter
outs
ins
mov
jne
mov
(bad)
mov
or
imul
fisttp
movs
xchg
sub
cmp
add
dec
in
add
and
and
mov
pop
inc
inc
mov
push
mov
lahf
cmp
int
mov
or
and
inc
or
aaa
out
ror
jns
and
jge
mov
cmc
pop
add
in
and
in
fld
add
call
xor
adc
mov
dec
(bad)
(bad)
sbb
push
cwde
inc
xchg
ins
jge
call
popa
push
rcr
inc
int
sub
sbb
and
outs
daa
jne
es
add
mov
pop
clc
ret
mov
push
sbb
jmp
xor
sub
pop
push
movs
xchg
xor
sti
in
and
xor
leave
ja
add
jecxz
dec
sbb
push
out
pop
jmp
ins
adc
rcl
and
dec
adc
icebp
adc
dec
or
pushf
and
xor
mov
inc
add
sub
add
mov
ins
or
sub
push
nop
adc
xchg
arpl
mov
in
dec
mov
fisttp
fwait
push
imul
add
adc
mov
push
ficomp
ss
or
and
sub
out
or
jg
dec
mov
mov
enter
inc
nop
jb
inc
cmp
cli
mov
fst
ror
ss
pusha
fnstenv
sbb
jne
mov
xchg
sbb
rcl
sbb
sub
and
inc
rol
push
das
out
arpl
or
dec
mov
xor
mov
test
add
push
rcr
aam
je
sbb
xchg
xor
popa
or
cmps
test
xchg
inc
loopne
fst
sub
mov
adc
sbb
sbb
arpl
xchg
pop
sahf
je
mov
mov
push
int
add
out
test
lock
test
sbb
sub
fdiv
(bad)
xchg
adc
xchg
sbb
and
adc
fcmove
cmp
rcl
mov
pusha
call
(bad)
enter
mov
dec
jo
out
push
inc
mov
rol
mov
adc
je
(bad)
test
sbb
js
dec
pushf
in
fcomi
or
mov
dec
xor
jnp
fadd
je
sub
push
or
sub
jne
movs
fild
dec
push
push
inc
or
xchg
icebp
retf
mov
test
mov
jmp
aad
rcr
ret
cmp
cdq
stc
loope
push
cmc
sbb
retf
sbb
pop
inc
add
cmp
dec
dec
jns
push
gs
dec
adc
in
test
add
and
jle
xchg
sbb
add
inc
popf
cmp
pop
shl
sub
mov
mov
adc
push
dec
std
xchg
les
mov
mov
and
inc
jl
stos
lods
ja
mov
mov
and
sbb
ins
push
fsubr
or
es
sbb
cmp
or
dec
mov
movs
mov
ins
sub
mov
mov
je
(bad)
push
pop
jo
inc
adc
aam
loop
jl
nop
not
or
xchg
add
es
lock
into
pop
or
sbb
or
lahf
sbb
fld
jp
jb
dec
jecxz
mov
inc
loop
xchg
test
xchg
nop
popf
adc
inc
mov
pushf
lods
ins
xchg
pusha
mul
adc
jmp
add
jo
adc
cwde
adc
cmps
sub
bound
adc
or
loope
cmp
aaa
push
aaa
in
clc
mov
adc
outs
dec
sub
pop
and
ret
cmp
fndisi(8087
mov
pop
cmp
inc
xchg
add
mov
mov
ret
add
rol
in
add
push
sbb
sbb
sub
in
shl
jmp
pop
jnp
sbb
fsub
sub
popf
pusha
inc
fisub
nop
ret
es
add
xchg
popa
je
and
or
lahf
cwde
push
inc
ins
cmp
jle
es
xor
rcr
mov
inc
inc
add
out
mov
outs
mov
dec
xchg
or
mov
lea
dec
inc
mov
mov
inc
faddp
push
adc
and
es
xchg
jp
push
mov
jl
(bad)
rcr
inc
push
pop
or
inc
mov
aas
ins
arpl
arpl
xor
mov
mov
stos
cmps
sbb
push
dec
or
out
pop
(bad)
or
and
mov
mov
dec
xor
dec
mov
cmp
sub
adc
add
push
(bad)
ror
or
mov
mov
pop
mov
dec
fs
sbb
dec
and
mov
jle
cdq
fmul
push
dec
hlt
sbb
test
call
stos
int3
add
call
or
popf
iret
pop
dec
add
mov
push
ret
sub
adc
push
add
ja
xchg
fstp
cs
(bad)
inc
clc
push
movs
loopne
jle
jo
mov
add
shr
lahf
xchg
or
fiadd
inc
aam
ins
dec
or
daa
sbb
dec
mov
bound
or
adc
sbb
add
inc
ins
je
mov
inc
or
bnd
and
inc
inc
call
adc
mov
outs
sbb
dec
hlt
jle
mov
mov
sbb
sbb
mov
(bad)
int3
fidiv
add
jne
and
test
xchg
sub
mov
loop
add
es
mov
rcr
test
or
cli
mov
mov
cli
jo
pop
or
mov
sbb
test
ss
fisubr
pop
movs
mov
in
mov
adc
iret
arpl
xchg
out
addr16
fsubr
mov
xchg
pop
pusha
iret
cdq
sub
cdq
test
pop
dec
cmp
jne
inc
lods
cmps
imul
jle
rcr
lds
in
ror
sbb
adc
inc
sti
aas
mov
fisubr
adc
and
(bad)
push
aam
or
jmp
and
repz
dec
les
mov
stc
mov
xor
out
enter
ss
jmp
sub
and
stc
fisub
add
cmp
pop
jge
push
mov
or
xor
stos
push
aas
add
sbb
not
ror
shr
mov
inc
inc
and
call
mov
clc
cmp
rcl
adc
std
sar
sbb
xor
sub
imul
pusha
mov
mov
pop
ret
(bad)
mov
pop
adc
pop
cmps
addr16
mov
push
push
jo
loopne
nop
sub
bound
sub
xchg
mov
and
sub
mov
push
pop
adc
mov
je
aam
mov
jmp
or
call
jmp
and
and
or
mov
jmp
loopne
mov
or
mov
cmp
adc
imul
pop
xchg
sbb
cmps
inc
mov
cmp
push
xor
leave
push
cmp
dec
jo
push
dec
xchg
mov
inc
add
push
(bad)
lds
call
dec
pusha
mov
clc
push
call
int
jo
jo
add
ror
and
call
jecxz
xlat
pop
or
cmp
inc
pop
cmps
or
xchg
push
xor
outs
push
or
mov
test
fiadd
sub
mov
jo
push
mov
push
std
pop
mov
les
popf
adc
out
lahf
ss
icebp
or
inc
sub
daa
(bad)
cmp
push
pop
mov
ins
sbb
jmp
adc
mov
push
out
inc
pop
(bad)
cs
add
bswap
sub
cli
retf
add
rdpmc
xor
ror
dec
cwde
xor
sub
jb
jo
sbb
jmp
dec
jne
xchg
cmp
inc
mov
adc
les
popa
adc
out
dec
jmp
push
jne
sub
jmp
jl
int3
push
and
add
data16
sbb
dec
xchg
imul
jmp
dec
add
xchg
rol
jnp
mov
and
xchg
cld
and
add
inc
fld
shl
pop
inc
push
rol
mov
inc
ret
or
sub
data16
sub
dec
fwait
mov
loope
sbb
add
imul
scas
cs
push
into
sbb
mov
cmp
sbb
mov
jb
dec
jno
sbb
dec
jo
inc
jnp
add
es
and
js
inc
xlat
lock
jecxz
loope
test
mov
inc
push
call
mov
adc
sbb
add
ffree
sub
sub
push
mov
xor
std
push
jnp
ret
(bad)
mov
sbb
aaa
adc
rol
pop
mov
add
xor
add
leave
add
(bad)
test
or
loopne
xchg
add
fadd
lea
mov
adc
(bad)
mov
cmp
adc
test
mov
dec
xor
fcmovnbe
push
test
dec
shl
fs
dec
cmp
lea
loopne
cmp
and
push
xor
jns
inc
mov
cmp
out
mov
inc
jns
sbb
test
cmp
mov
mov
inc
sub
rol
mov
std
pushf
mov
icebp
adc
(bad)
popf
jecxz
push
div
cs
jne
sbb
ins
xor
adc
iret
shl
xchg
(bad)
enter
mov
cmc
enter
mov
imul
adc
adc
sbb
cs
imul
mov
xchg
retf
call
mov
rol
int3
jno
mov
xchg
enter
fmul
fmul
dec
cmp
or
out
xchg
add
push
jl
add
inc
add
js
mov
in
dec
dec
push
jmp
inc
jo
or
jo
pop
mov
movs
and
outs
les
add
cs
(bad)
or
retf
in
pop
pusha
pusha
js
lahf
sub
fwait
mov
xor
or
push
adc
xchg
xchg
ds
inc
cs
push
pop
mov
mov
add
push
aam
ret
aam
dec
xor
es
mov
leave
aam
xchg
fsub
add
int
mov
inc
nop
inc
push
scas
pop
or
jl
xchg
out
add
jle
aad
pop
add
xchg
pop
xchg
loopne
test
std
or
sbb
sbb
popa
jl
add
pop
sbb
cmp
jne
fsub
pop
fistp
retf
xchg
mov
pop
fld
ror
scas
xlat
push
inc
push
add
add
sbb
stos
sub
sub
add
push
popf
or
xchg
sub
imul
out
rcr
sbb
test
adc
sbb
mov
je
jb
xchg
sbb
add
ror
push
pop
mov
xor
sbb
sbb
shl
adc
jo
outs
retf
out
push
inc
or
xchg
fld
or
inc
add
cmp
cmp
jo
test
jmp
rol
sbb
add
xor
mov
popf
mov
mov
mov
add
sbb
jmp
adc
sbb
lods
cmc
cli
xchg
and
and
jle
ret
cmp
jo
and
and
fisub
cmp
mov
or
sub
inc
ret
ins
arpl
cwde
mov
sub
xor
push
cmps
push
dec
jnp
and
xor
fs
test
dec
nop
loope
fiadd
or
add
stos
sub
lock
lds
outs
pusha
push
push
jno
mov
and
ins
push
ja
add
push
xchg
adc
outs
xor
ret
or
clc
and
maxps
(bad)
pop
aam
pop
add
rol
inc
pop
(bad)
call
(bad)
mov
test
add
inc
sub
inc
xor
int
gs
rol
mov
adc
cmp
dec
call
lds
jg
sahf
sub
push
neg
push
sbb
inc
push
inc
dec
adc
xor
jnp
ja
bound
mov
rcl
shl
inc
fisttp
shl
(bad)
push
mov
fadd
push
inc
or
test
sbb
fnstsw
push
dec
mov
mov
repnz
adc
lahf
into
movs
call
xor
lahf
adc
inc
cmp
aad
adc
add
jmp
and
fxch
(bad)
jmp
push
ins
rcl
(bad)
jg
jno
sar
adc
mov
push
push
jmp
push
sbb
push
push
dec
mov
enter
lods
adc
dec
loope
add
adc
aas
aam
cmp
ficomp
neg
in
xchg
pusha
sbb
fdivr
nop
out
setns
mov
sub
js
add
dec
inc
sbb
mov
lods
and
jle
lods
in
test
out
pusha
shl
xchg
dec
xchg
mov
push
clc
mov
xchg
pushf
jl
push
jae
ret
sbb
or
jb
inc
cmc
pop
or
sbb
and
loopne
add
fadd
cmps
push
xchg
cwde
sar
test
fs
test
nop
jmp
(bad)
jl
hlt
jmp
aam
test
jmp
mov
shl
cmp
xchg
call
mov
sbb
mov
add
fs
add
or
popa
adc
inc
jne
pop
movs
leave
arpl
call
mov
pop
lock
pop
std
dec
mov
jno
out
adc
mov
cwde
push
sbb
and
xchg
loop
adc
gs
push
ret
aas
or
daa
pop
sahf
and
sahf
inc
sub
sahf
call
sub
lds
popf
adc
dec
fcomp
ss
sbb
and
repnz
mov
sti
and
adc
les
into
in
sbb
xchg
dec
mov
mov
add
inc
(bad)
mov
sti
lea
sahf
xor
retf
sbb
mov
dec
add
add
data16
ins
add
jl
adc
or
sbb
sbb
stc
xor
fcomp
cwde
movs
pop
js
imul
push
mov
stc
js
lock
sbb
test
rol
outs
cwde
mov
jl
div
add
push
sbb
lahf
or
mov
add
or
cli
js
add
outs
pop
or
dec
out
cmp
jge
push
adc
ds
ret
leave
lea
push
lahf
push
pop
addr16
adc
pusha
jno
fwait
imul
adc
cmp
cmp
dec
xor
inc
adc
add
fnstenv
pop
(bad)
xor
(bad)
inc
xor
pop
push
out
pop
or
add
inc
add
dec
or
push
popa
push
rcr
mov
arpl
fwait
or
and
lods
mov
jo
xor
rcl
or
ret
push
fld
lds
ins
inc
nop
dec
call
and
ja
mov
and
fadd
add
xchg
stc
sub
push
lods
adc
xor
pop
ret
stos
mov
mov
bound
movs
pop
and
jne
cs
movs
xchg
push
xchg
mov
stc
sbb
add
mov
in
cmp
cmp
int
add
mov
add
lods
jb
nop
mov
sbb
sbb
dec
mov
ins
loop
xor
mov
and
sub
cli
add
xchg
pop
pop
jmp
leave
pop
rol
clc
dec
mov
inc
shr
pop
rcr
cmp
and
lea
(bad)
add
xchg
mov
dec
rcr
adc
push
dec
adc
shl
je
add
rol
add
pop
add
mov
sub
in
push
pop
outs
sub
mov
jge
cmc
es
sub
inc
out
dec
fwait
test
ret
shl
jbe
push
dec
jne
push
mov
lea
push
iret
ss
shl
push
mov
jge
or
xchg
dec
fsubr
sub
push
iret
enter
push
lea
or
or
(bad)
inc
or
js
mov
loope
mov
add
stos
and
int3
pop
sar
fisttp
mov
jl
enter
xor
inc
xor
jne
or
cmp
sbb
or
dec
xor
unpckhps
(bad)
rol
js
sbb
js
dec
jbe
clc
rol
and
leave
mov
mov
ret
cs
push
adc
cmp
add
and
imul
scas
pop
pop
cmp
ins
push
push
in
xor
adc
adc
jmp
inc
mov
shl
movs
imul
xor
icebp
add
xor
push
test
dec
dec
mov
dec
imul
and
fisub
(bad)
pop
(bad)
hlt
mov
cmps
in
rcl
cmp
sub
call
mov
dec
xchg
les
dec
xor
loopne
add
add
sbb
les
add
inc
dec
mov
add
ss
adc
dec
add
pop
xchg
loopne
sub
mov
or
fsub
int3
xor
arpl
xor
sahf
rcr
push
(bad)
mov
dec
push
jo
sub
sbb
loopne
xor
dec
dec
mov
pop
and
inc
adc
jb
ins
sbb
xor
sbb
(bad)
and
in
sbb
add
add
movs
mov
mov
mov
fild
push
fadd
push
loopne
pop
adc
test
lock
cmp
sub
bound
and
adc
das
fdivr
xchg
cmp
(bad)
inc
and
and
mov
nop
xor
aas
xor
je
jmp
gs
and
mov
mov
sbb
movs
test
inc
xor
add
push
add
stos
xchg
mov
mov
cli
(bad)
in
pop
push
js
loope
dec
jmp
rol
add
ret
clc
sub
cld
cmp
dec
adc
ja
outs
sbb
sub
inc
mov
fisttp
mov
outs
adc
cmp
and
adc
cmp
in
sti
xchg
push
pop
pop
mov
inc
dec
jl
pop
or
and
jae
add
fs
adc
jns
das
daa
sub
lods
pop
cmps
jle
loop
inc
and
stos
push
and
pop
cdq
xor
xor
in
and
ins
fs
xor
into
or
add
adc
cmp
and
sbb
mov
mov
and
jbe
and
adc
lods
les
add
jl
pop
xchg
sub
sti
xor
(bad)
out
and
dec
and
daa
pop
inc
loopne
shl
sub
sbb
xchg
or
adc
sbb
mov
pop
or
cdq
cmp
ficom
rol
sub
pop
(bad)
jmp
xor
ja
lock
push
movs
mov
pop
inc
test
cmp
inc
or
add
bound
loopne
ja
jne
pop
mov
sub
lock
idiv
pop
jge
test
fwait
or
ja
dec
jmp
aam
dec
push
push
mov
xor
xor
fdiv
fs
fstp
adc
xor
adc
sub
lahf
sub
rol
xor
es
int
fnstenv
fidivr
add
dec
adc
or
icebp
and
fcmovnb
or
mov
mov
ret
cmps
mov
pop
dec
je
inc
cmp
dec
sub
dec
push
push
sub
or
add
push
pcmpeqd
jns
arpl
mov
mov
sbb
das
xor
pop
cmp
lock
push
mov
bound
inc
jl
bnd
mov
mov
loopne
jb
sbb
movs
(bad)
adc
inc
scas
aam
sub
or
and
push
mov
sub
sub
das
inc
test
fwait
and
jae
fcom
or
(bad)
and
cmp
stc
sub
dec
(bad)
adc
mov
or
push
ins
das
fidiv
das
daa
pop
adc
dec
jne
push
mov
xlat
mov
jns
stc
mov
bound
ins
cmp
cmc
dec
cmp
mov
bound
inc
stos
mov
jmp
sub
add
or
xor
cmp
test
or
add
pusha
rol
ins
xlat
jbe
adc
xchg
and
ja
sahf
jo
leave
nop
rcr
icebp
dec
ret
pop
mov
ja
inc
inc
add
(bad)
(bad)
or
jnp
add
lock
es
scas
push
sbb
inc
int3
inc
jmp
inc
and
and
test
mov
jae
sti
xor
mov
fdivr
cmp
std
mov
mov
scas
mov
jge
xchg
gs
out
cmp
add
cmp
or
rol
xchg
add
nop
je
mov
add
loopne
mov
pusha
inc
mov
mov
scas
xor
mov
movs
(bad)
ins
push
mov
xadd
push
out
repnz
jle
fucomi
jae
xchg
loopne
imul
lea
push
scas
(bad)
rol
je
inc
dec
jne
inc
inc
and
movs
mov
push
test
and
mov
cmp
inc
xor
shl
xor
mov
adc
cmp
add
imul
ss
out
call
xor
or
sbb
movs
inc
mov
(bad)
mov
dec
mov
sub
mov
mov
jmp
mov
pop
add
rcl
cwde
dec
mov
lahf
pop
adc
inc
adc
inc
fs
outs
aas
out
out
dec
push
push
test
(bad)
mov
mov
xlat
mov
pop
shl
cld
push
xor
mov
xor
cmp
aaa
mov
mov
and
xor
mov
and
repnz
pop
mov
mov
shr
call
add
jp
hlt
mov
jnp
push
pusha
pusha
ror
ss
ficom
push
jbe
inc
retf
mov
pop
adc
sbb
shl
(bad)
test
xchg
add
push
xchg
dec
fistp
add
or
lock
jge
jmp
shr
xchg
and
mov
and
cmp
rcl
shl
xor
push
mov
cmp
add
mov
(bad)
fwait
es
je
outs
add
mov
jne
cs
adc
push
adc
je
push
test
jnp
push
pusha
xchg
ds
inc
cmp
inc
adc
cmps
rol
pop
test
adc
adc
dec
ins
nop
aad
ins
sub
lods
lock
pop
ja
and
and
aam
vcmpss
gs
dec
or
and
and
push
fcom
ss
jne
std
adc
inc
add
mov
and
mov
push
retf
dec
dec
lods
inc
stc
inc
mov
inc
push
and
sub
push
or
mov
popa
loop
and
xor
xor
mov
xchg
fstp
xchg
rcr
pop
or
fdiv
push
xor
fwait
retf
or
push
push
sub
mov
jl
mov
push
dec
xchg
nop
cmc
push
dec
fsub
mov
call
ins
rcr
sahf
inc
jmp
push
xchg
add
mov
xchg
(bad)
das
push
les
gs
jg
mov
pop
rol
mov
sub
add
sbb
jbe
ret
les
icebp
push
sub
sub
inc
aas
cmp
push
dec
inc
nop
imul
imul
rol
lock
or
jl
cli
pop
repnz
call
add
in
retf
in
xor
cmps
or
in
push
dec
jl
dec
dec
inc
mov
push
push
ins
xor
pop
jmp
add
loopne
pop
sbb
ins
pop
add
neg
add
in
mov
add
scas
sub
xor
adc
xor
or
sbb
jp
push
cmp
cmps
ins
fild
mov
or
cmp
pop
jl
mov
pusha
xor
hlt
sbb
add
out
pop
fchs
les
(bad)
xlat
xor
sub
jmp
xchg
pop
add
jl
push
test
sub
ins
and
adc
adc
pop
test
imul
mov
dec
xor
or
das
push
mov
cmp
dec
and
sbb
out
and
mov
push
mov
imul
add
and
dec
sbb
mov
xchg
rsqrtps
imul
ins
aad
mov
jbe
mov
rcl
push
xor
scas
and
pop
cmp
and
and
popf
mov
xor
cmp
aad
add
ret
xor
retf
sbb
sbb
jmp
icebp
mov
pop
and
xor
mov
mov
in
add
and
rcl
ftst
test
in
sbb
jbe
mov
mov
mov
test
mov
dec
je
cmp
push
adc
jne
stos
or
xor
mov
mov
nop
jl
loopne
jge
jo
push
inc
mov
xlat
jp
push
jmp
cwde
add
push
add
cmp
dec
sbb
enter
(bad)
sbb
(bad)
retf
jnp
enter
adc
push
hlt
pop
pop
mov
mov
push
jo
dec
(bad)
imul
call
mov
mov
ins
inc
mov
sub
sbb
xchg
movs
sahf
or
mov
addr16
and
xchg
int
addr16
pop
in
dec
mov
mov
jmp
ret
xchg
jo
fcomp
dec
xchg
sti
fwait
mov
in
mov
pusha
and
xchg
xor
sub
sbb
aad
fwait
jbe
adc
mov
jl
inc
lock
dec
lock
jns
inc
dec
and
movs
popf
sub
mov
loopne
dec
inc
inc
jmp
imul
into
inc
xchg
jbe
adc
inc
mov
retf
cmp
mov
into
fisub
lock
mov
inc
dec
jl
xor
pop
xchg
jl
shl
add
sub
sub
xchg
ja
imul
push
pusha
sbb
push
cmp
jecxz
push
sub
aad
popf
shr
and
add
xor
imul
or
sar
pop
inc
and
mov
movs
addr16
ja
daa
adc
test
xchg
or
arpl
in
aad
push
inc
loopne
add
add
xor
inc
aam
inc
pushf
in
call
add
add
rcr
add
push
neg
int
je
inc
dec
sbb
inc
xor
outs
sbb
push
push
sbb
cmps
xor
jecxz
inc
fdivr
neg
mov
scas
pop
fsub
push
add
dec
inc
pop
test
dec
push
dec
js
add
add
mov
pop
rcl
push
xor
or
and
(bad)
fst
sbb
retf
or
mov
pop
or
clc
cmps
pop
or
inc
jl
loope
(bad)
mov
or
adc
or
leave
retf
push
stc
addr16
add
add
add
out
xchg
scas
cmp
add
sbb
xor
lea
fld
mov
gs
and
or
xor
push
sub
jmp
loope
test
mov
or
mov
inc
or
add
add
xorps
mov
adc
clc
sbb
iret
add
inc
xchg
xchg
call
mov
mov
or
mov
cwde
xor
test
sub
xchg
sbb
add
cmp
in
jb
adc
adc
dec
aaa
and
hlt
mov
jmp
mov
cmp
push
arpl
je
push
sub
stos
cmp
xor
or
ja
(bad)
mov
jne
or
mov
cwde
test
and
xchg
call
or
or
cmp
fild
ror
inc
xor
test
adc
push
cmp
jg
(bad)
call
push
imul
idiv
dec
cmp
jge
movzx
ja
ins
mov
dec
add
aad
icebp
retf
jae
sbb
and
adc
cmp
xchg
jo
pop
inc
mov
imul
test
dec
dec
and
imul
sub
cmp
push
or
mov
cmp
(bad)
adc
sub
loop
add
out
ret
movs
dec
aas
dec
add
pop
add
sub
(bad)
js
pusha
sub
ret
das
mov
cmp
sbb
movs
or
push
nop
xlat
or
addr16
add
add
or
sub
in
push
add
mov
mov
or
jne
or
cs
pop
fst
and
dec
dec
imul
cmp
clc
push
mov
sub
cmp
jl
lea
or
sub
in
ds
sbb
mov
es
push
or
mov
pop
das
dec
xor
and
mov
mov
nop
lock
add
push
push
test
pushf
pop
test
test
or
adc
sbb
dec
mov
or
aam
dec
jnp
inc
loopne
ins
sub
lock
cmp
call
sbb
enter
sbb
jbe
ins
mov
or
sbb
sub
push
arpl
bound
cdq
inc
(bad)
lahf
cmp
popf
dec
mov
xchg
test
dec
sub
lahf
and
mov
cmps
jecxz
cmp
imul
mov
jne
mov
push
push
pushf
xchg
xchg
(bad)
mov
adc
jo
push
pop
stos
add
dec
jo
shr
xchg
retf
dec
pop
add
mov
mov
jl
push
cmp
out
je
mov
sbb
inc
shl
das
and
imul
pop
sub
sar
imul
les
jl
adc
mov
adc
daa
imul
sub
xor
pop
pop
xchg
nop
nop
xchg
push
ret
nop
fs
fidivr
test
rol
cmp
je
push
inc
sub
cs
adc
sbb
cmp
mov
xor
inc
adc
and
adc
mov
add
icebp
dec
cmps
cs
sbb
or
dec
leave
fistp
add
and
or
push
cmps
sub
push
out
adc
(bad)
rol
rol
mov
sahf
lods
xor
std
dec
jb
xchg
mov
mov
popf
sbb
sub
imul
(bad)
pop
fs
xchg
test
sub
(bad)
or
inc
test
in
ja
mov
sbb
xchg
aaa
fimul
cs
shl
scas
dec
loope
xchg
sub
sbb
add
inc
inc
adc
pushf
xchg
mov
push
popa
shl
jge
sub
jno
add
hlt
jb
jg
sbb
push
mov
add
gs
mov
cmp
loope
dec
fcom
les
mov
pop
test
out
test
dec
add
imul
lods
push
fisub
test
inc
xor
push
adc
out
mov
mov
stos
mov
jl
push
jno
add
call
adc
inc
push
jp
cmp
in
frstor
test
addr16
ins
push
ret
inc
in
adc
sub
loopne
ins
inc
fs
dec
jnp
push
xor
retf
lea
add
repnz
pop
in
jb
push
call
cmp
jne
test
and
leave
fsubr
adc
icebp
mov
push
cmp
inc
aaa
add
add
test
xor
add
lds
inc
jle
and
add
pop
jmp
push
mov
iret
or
jmp
xchg
mov
xchg
pusha
add
retf
cmp
imul
movs
push
call
lea
add
pusha
stos
cmp
lods
jnp
dec
pop
and
add
lock
ret
mov
adc
hlt
xchg
retf
adc
pop
test
lods
add
inc
push
xchg
jo
pop
scas
pop
push
aam
in
clc
in
pop
pop
cmp
mov
adc
add
push
or
add
or
sbb
in
cli
add
and
rol
lahf
pusha
xchg
add
pop
lea
sbb
sbb
aaa
pop
les
pop
call
add
bound
inc
or
mov
add
or
push
xchg
inc
or
dec
push
lods
adc
push
add
cdq
adc
int3
(bad)
jns
push
mov
pushf
mov
mov
and
dec
mov
jecxz
pushf
test
dec
mov
ret
mov
lods
cmps
sub
pop
(bad)
jle
xchg
xchg
cmp
push
fisub
add
sbb
mov
jo
inc
xchg
and
inc
dec
mov
add
push
nop
push
push
popa
popf
adc
and
in
ins
push
push
sub
and
jno
add
jb
movs
inc
add
push
mov
inc
fld
pop
mov
push
adc
jb
jne
adc
bswap
pmulhuw
sbb
(bad)
add
fcomp
out
cmp
ror
scas
test
sahf
mov
dec
lock
dec
clc
inc
dec
jmp
mov
or
add
hlt
adc
cs
call
sbb
inc
retf
mov
call
pusha
nop
cmp
fldenv
les
loop
mov
out
or
push
mov
stos
dec
cwde
mov
ret
mov
pop
retf
dec
jne
xchg
xchg
ins
movs
inc
daa
test
mov
bound
loop
xor
test
popa
xchg
add
mov
ins
and
gs
or
das
push
xchg
inc
ror
daa
xor
cmps
(bad)
adc
adc
lods
sbb
or
cmp
sbb
std
dec
movs
push
push
xchg
and
adc
xlat
pop
xor
push
ins
pop
xchg
pop
pop
xchg
pop
aas
xchg
jo
dec
fld
and
add
js
jmp
push
popf
div
push
fcmovnbe
in
or
inc
js
jp
test
pop
adc
dec
push
mov
cld
lods
cwde
cdq
push
je
and
repz
dec
ss
xchg
or
cdq
jmp
ja
pop
and
in
and
and
push
daa
xchg
push
or
xor
fwait
dec
gs
jo
fld
xchg
push
nop
add
add
icebp
xor
add
add
sub
xchg
sub
in
xor
sbb
jae
push
popf
stos
or
jmp
fcom
sub
jno
stos
add
ss
mov
mov
ins
dec
pop
dec
xchg
je
mov
push
cmp
ss
cli
sub
mov
push
xor
jge
addr16
cli
ror
jmp
push
cs
fidivr
pop
xor
jne
and
xor
mov
mov
sub
sub
sbb
jmp
cmps
or
cmp
and
inc
adc
add
sub
call
xchg
mov
aas
fadd
cmp
and
mov
outs
xchg
mov
push
xchg
push
xor
mov
cmp
push
or
jno
and
inc
dec
pushf
mov
pushf
test
rcr
arpl
and
push
or
movs
adc
cdq
movs
aas
mov
and
aas
mov
fimul
push
xlat
ds
inc
mov
aam
(bad)
adc
xchg
xchg
enter
xchg
ins
aad
test
sbb
lds
cmps
dec
jmp
jmp
shl
ins
push
sub
and
pop
or
ins
jo
adc
ss
mov
mov
add
and
mov
sbb
or
push
inc
xchg
sbb
or
push
adc
sub
stc
call
xchg
add
movs
xor
add
cmp
popa
add
retf
push
xchg
movs
xor
or
loope
or
loopne
jl
imul
dec
push
jnp
sar
push
mov
shr
es
add
sub
lock
mov
sar
daa
mov
ret
mov
sub
cmp
sbb
imul
push
out
dec
arpl
mov
(bad)
adc
or
mov
mov
inc
mov
test
jg
inc
or
mov
push
and
add
icebp
mov
int
(bad)
dec
sub
adc
pop
outs
fdivr
test
mov
adc
(bad)
dec
mov
inc
iret
ja
ins
push
test
sub
or
leave
xor
loopne
inc
add
inc
or
(bad)
loope
das
pop
sar
push
add
rol
movs
dec
push
adc
in
loopne
add
mov
pop
(bad)
daa
mul
dec
mov
sub
pop
movs
push
push
cmp
jbe
adc
int
pop
mov
cmps
in
(bad)
inc
sub
jbe
shl
mov
icebp
mov
push
fstp
lds
xchg
add
scas
sbb
js
imul
or
cmp
js
sub
cmp
scas
das
push
or
inc
inc
loopne
loope
or
and
mov
sbb
push
je
imul
test
ins
sbb
mov
clc
jno
in
push
mov
sub
add
js
push
add
dec
and
bound
add
dec
scas
lock
and
test
popf
pop
sub
mov
fisttp
mov
xor
inc
cmp
fisttp
or
leave
clc
mov
mov
and
inc
xor
push
popf
pusha
loopne
pop
es
adc
adc
test
sbb
pop
mov
nop
xchg
adc
push
aaa
or
pop
cld
cdq
pop
cmp
loopne
or
movntps
icebp
add
xchg
les
lock
cdq
mov
sub
sbb
ficom
add
loope
or
aas
jmp
ja
test
sbb
out
pop
xchg
cmp
jg
xor
or
sbb
dec
sbb
je
add
adc
jne
push
xor
sub
inc
syscall
push
in
adc
in
inc
and
mov
add
(bad)
mov
jle
movs
mov
dec
test
lahf
jmp
sub
xor
lea
add
movs
cs
sbb
ins
imul
push
add
retf
ins
ins
jo
je
xor
js
js
fnsave
popa
repnz
scas
pop
loopne
adc
lahf
jecxz
repnz
test
push
sub
jns
dec
js
sub
dec
in
mov
sub
pop
mov
jp
inc
adc
or
mov
sbb
add
adc
or
imul
popf
pusha
pushf
add
xchg
and
mov
push
inc
add
daa
jge
lods
cmp
loope
mov
sar
test
jne
mov
ds
mov
js
in
add
clc
xor
and
(bad)
rcr
int3
jbe
jb
les
cmc
hlt
arpl
sub
std
ret
mov
pop
mov
in
xlat
arpl
fldenv
adc
jge
push
outs
ds
les
jns
mov
push
push
add
call
xor
and
jp
sti
add
jmp
xor
dec
mov
test
adc
push
sbb
and
xchg
and
ins
xchg
ins
mov
add
(bad)
daa
mov
test
mov
pop
push
aaa
jp
jno
push
rol
stos
movs
retf
inc
adc
imul
icebp
push
adc
pop
je
xchg
mov
cmps
sbb
push
or
dec
add
lock
push
xchg
mov
mov
sbb
cmp
sbb
add
gs
push
or
pop
pusha
xlat
pop
nop
cmp
fwait
pop
rol
cld
pop
fbld
xchg
adc
and
xchg
or
jmp
and
cmp
rol
nop
jecxz
add
add
jmp
mov
cmp
jmp
in
cmp
adc
mov
pusha
add
xor
test
popf
add
dec
adc
xchg
sbb
cmps
jecxz
lock
in
push
mov
movs
in
mov
or
jo
push
and
mov
adc
sahf
push
xor
push
adc
lds
adc
or
and
push
test
sub
ins
std
jo
sti
jo
(bad)
xchg
sbb
das
cmp
add
mov
sbb
sbb
ret
mov
pop
jmp
or
xchg
dec
fs
jmp
lea
loopne
dec
retf
inc
daa
mov
xor
movs
mov
loopne
push
subps
jnp
and
jge
pusha
loop
dec
pop
cdq
mov
ins
or
or
(bad)
leave
or
add
mov
mov
push
sbb
pushf
or
inc
pop
mov
in
fs
sbb
ins
cmp
test
imul
add
sbb
dec
ins
adc
dec
mov
add
add
(bad)
lods
shl
add
dec
mov
cmps
mov
dec
addr16
inc
or
mov
push
adc
xchg
push
out
repnz
cmp
jmp
push
mov
scas
(bad)
(bad)
lsl
push
sbb
adc
add
mov
or
arpl
adc
sbb
and
std
jne
and
adc
rcl
push
mov
adc
pop
and
or
fcom
add
xor
cs
xor
setne
inc
xchg
mov
sti
dec
or
(bad)
ja
loope
and
std
push
sbb
mov
or
xchg
mov
shl
(bad)
aad
and
int3
mov
inc
jl
sbb
cli
pop
movs
aad
mov
push
xchg
xchg
xchg
mov
and
add
sbb
mov
cmp
(bad)
ror
out
rcl
fldcw
add
icebp
push
ret
out
push
fsub
pop
jecxz
mov
add
push
adc
sub
push
adc
call
pop
mov
in
or
in
or
rcl
fdiv
hlt
ror
adc
call
pop
retf
jae
push
clc
cld
add
or
out
mov
js
iret
mov
xor
add
test
pop
test
add
in
push
sbb
mov
push
cmp
xchg
outs
cmps
cmp
xchg
imul
inc
fstp
mov
xor
jl
not
out
jge
dec
loop
les
jge
push
xchg
pop
mov
and
leave
push
push
and
xchg
cmp
or
test
test
inc
into
sub
sub
in
movs
in
iret
jl
adc
inc
pop
ss
mov
bound
cmp
clc
mov
cmp
gs
mov
inc
cmp
xchg
xadd
mov
(bad)
sbb
push
lock
sbb
add
es
jmp
push
add
adc
add
add
inc
and
call
aas
sbb
test
inc
pop
loope
addr16
fdivr
inc
dec
cmp
aad
fisttp
xor
(bad)
fsub
sahf
pop
imul
dec
jge
mov
mov
jge
ret
jecxz
test
ficom
(bad)
jno
ins
and
pusha
sbb
jmp
pushf
lods
xchg
scas
xchg
sbb
xchg
jge
loopne
add
cmp
xchg
pop
xor
int
jnp
js
push
pusha
mov
pop
cs
cwde
xchg
mov
popf
lods
add
mov
bnd
pop
rcl
dec
sbb
cld
xchg
add
fisub
cmp
or
lahf
cwde
imul
mov
adc
sbb
scas
adc
or
and
dec
mov
ret
(bad)
movs
xchg
or
xchg
push
loope
ret
push
xchg
les
es
push
sub
ret
xchg
inc
enter
add
dec
sub
imul
pop
sbb
(bad)
jo
cld
mov
adc
add
adc
and
in
inc
mov
jge
aaa
inc
xor
ins
aad
push
xchg
add
add
mov
imul
push
and
sub
or
or
add
popa
(bad)
call
std
jbe
add
pop
xor
js
or
add
mov
(bad)
aas
test
in
lea
cmp
in
loopne
mov
sub
or
cld
or
cmp
jl
cmp
push
out
add
rcr
daa
adc
ret
cmp
sub
mov
push
movs
inc
mov
sub
cmp
and
cmps
call
in
xchg
test
dec
ss
adc
dec
fld
repz
rol
push
push
das
(bad)
inc
inc
ret
enter
cmp
inc
test
jno
adc
xchg
mov
cmp
add
popa
pop
push
daa
popa
pop
fsqrt
test
mov
cmps
mov
mov
fstp
loop
or
jge
loop
loop
daa
mov
js
enter
addr16
(bad)
mov
shr
repnz
imul
mov
nop
push
and
inc
pusha
ss
dec
mov
in
cmp
(bad)
add
call
sbb
adc
shr
xor
push
ror
add
pop
inc
xchg
call
(bad)
hlt
xor
hlt
lea
push
push
cmp
mov
dec
je
dec
hlt
inc
int3
mov
dec
dec
loope
xchg
sub
or
popf
not
inc
pop
je
daa
inc
cmp
jmp
add
xor
rcr
test
jbe
inc
mov
inc
or
test
shl
adc
iret
enter
push
mov
in
jne
sbb
mov
cmp
sbb
movs
movs
and
je
test
aam
inc
in
or
push
rol
fnstcw
idiv
mov
outs
dec
and
nop
push
add
std
in
mov
or
jb
add
sub
pop
jb
and
add
pushf
scas
ins
add
test
sub
inc
jb
push
test
sub
adc
lahf
inc
bound
sub
pop
sbb
push
mov
mov
aam
mov
xchg
add
pop
pop
jns
dec
dec
and
ret
fnstenv
movs
jp
leave
inc
sub
sub
push
pop
inc
pop
cdq
sub
pop
(bad)
aas
cmp
mov
and
xchg
and
(bad)
adc
pop
mov
and
sbb
imul
stc
and
xchg
daa
xor
push
js
sbb
sub
lods
cmp
or
push
or
popf
mov
push
jno
adc
push
add
pop
mov
rol
mov
sub
movs
jne
lock
adc
or
sbb
cwde
pop
and
cwde
sub
in
xchg
sahf
mov
popa
pop
rcl
jle
lea
rol
push
cmp
loop
movs
push
jmp
cmp
pop
or
pusha
cmps
adc
mov
pshufw
sar
(bad)
(bad)
push
add
xchg
pop
call
dec
icebp
and
pusha
xor
movs
retf
add
adc
mov
fcmovb
pop
add
xor
pop
push
cwde
aas
mov
mov
fst
mov
popa
adc
int
mov
icebp
mov
or
mov
mov
int
jmp
push
jnp
sbb
or
leave
adc
sbb
imul
push
add
pop
dec
test
cmp
(bad)
rol
add
pop
adc
inc
das
clc
(bad)
jns
sub
push
xchg
stos
adc
xchg
call
mov
or
xchg
fmul
adc
in
and
add
fs
fld
sub
pop
hlt
gs
mov
into
pop
inc
ja
jnp
inc
jmp
shl
add
aaa
cmp
call
adc
clc
mov
sbb
and
movs
xchg
outs
pop
dec
add
nop
adc
loopne
mov
mov
das
int
xchg
push
sahf
sub
sar
sub
pop
lea
test
push
and
cdq
rol
imul
dec
push
adc
sub
mov
je
outs
lods
sbb
(bad)
jmp
push
and
jo
pop
nop
adc
dec
les
xor
xchg
jo
or
jbe
inc
adc
mov
mov
add
pop
sub
pushf
and
pop
add
pop
sbb
push
cmp
add
or
adc
in
dec
jb
mov
mov
inc
inc
cmp
sub
adc
dec
pop
add
dec
loop
inc
sbb
je
test
mov
mov
ins
not
or
and
push
cmps
(bad)
out
stc
mov
adc
push
inc
ja
push
jmp
push
stos
dec
xchg
jns
int
adc
mov
dec
and
std
xor
(bad)
hlt
rcr
or
sbb
sar
jns
into
call
test
loopne
loopne
pop
dec
adc
and
js
arpl
and
add
std
aam
sbb
cmp
enter
xchg
fadd
dec
sub
add
loop
scas
rcr
add
ss
pop
dec
pop
jmp
jecxz
cdq
dec
jns
or
sbb
inc
mul
and
and
mov
nop
popa
nop
ror
jnp
mov
push
test
jo
dec
xor
inc
sbb
cmp
sub
inc
xor
mov
push
mov
mov
sub
out
add
mov
imul
loope
rol
xchg
sbb
add
pusha
jg
mov
inc
add
loopne
xchg
enter
mov
mov
imul
inc
out
dec
addr16
push
les
or
pop
imul
cli
retf
mov
inc
add
stos
rol
test
mov
inc
lock
xor
movs
add
pop
sub
enter
leave
in
add
jmp
sub
jg
ins
inc
xchg
mov
or
lods
inc
idiv
or
adc
rcl
add
or
pop
mov
scas
(bad)
ret
ret
and
ins
adc
jb
(bad)
sar
inc
fst
and
lea
js
aas
loopne
pop
leave
cmp
push
(bad)
push
icebp
dec
push
sbb
in
xchg
js
jmp
xor
imul
pop
fwait
pusha
dec
mov
jbe
and
jmp
daa
xchg
out
pop
fcomp
xchg
xchg
push
fcomp
jb
pop
cs
hlt
cs
retf
in
shl
fsub
jb
pop
fmul
enter
xchg
retf
clc
cld
cld
loopne
push
xchg
push
xor
sub
jle
dec
(bad)
jp
add
sbb
pop
movs
jo
mov
push
test
test
push
jmp
cs
loopne
jmp
pop
pop
adc
lock
pusha
enter
or
add
pop
mov
jmp
into
mov
inc
jl
(bad)
push
pop
mov
sub
add
xor
stc
mov
cmp
cmovno
xor
lods
and
and
mov
jnp
sahf
icebp
add
lods
inc
dec
mov
stos
cmp
mov
mov
ror
cwde
leave
xchg
pop
dec
cmp
(bad)
jns
rcr
mov
add
jmp
ret
shr
or
xor
push
leave
push
mov
jg
adc
movs
or
sar
adc
adc
jns
sbb
(bad)
iret
xor
ds
les
loop
add
inc
and
test
bnd
xchg
(bad)
pop
pop
je
int3
out
mov
mov
mov
loopne
call
and
rcr
jno
shl
push
sbb
and
or
xor
js
push
push
sub
cmp
dec
add
cmp
push
sub
push
inc
cmp
or
pop
push
out
push
in
jg
push
test
shl
cmps
add
lock
mov
int3
jecxz
push
mov
push
push
dec
loop
or
add
movs
int
imul
add
pop
add
jno
or
sahf
sub
sbb
aad
jmp
nop
shl
sub
call
sub
hlt
in
(bad)
and
sbb
repnz
cmp
pushf
or
js
out
inc
aaa
gs
mov
dec
and
cmp
aas
xchg
mov
fild
das
dec
or
add
xchg
or
pusha
jns
adc
jmp
sub
or
add
sub
mov
dec
lock
sbb
or
repz
cld
setle
mov
sbb
fsub
cmp
mov
adc
cmp
lds
sub
or
mov
sti
mov
pop
sar
dec
push
in
inc
into
xor
rcl
push
jo
adc
adc
jg
push
(bad)
fnstenv
mov
dec
nop
or
pop
sub
push
sbb
xor
sub
jp
inc
add
jl
(bad)
mov
inc
cld
lea
or
cmp
and
ret
adc
sub
and
aad
dec
ret
js
adc
cmp
shl
push
add
ds
loope
xchg
test
inc
movs
sahf
clc
(bad)
mov
sub
dec
dec
xchg
leave
or
aam
dec
sbb
dec
cli
dec
ret
jnp
loop
sub
cmps
shl
push
test
(bad)
mov
lods
and
rol
xor
aaa
imul
adc
xchg
test
popa
enter
ret
stos
mov
adc
jmp
jns
nop
test
cmp
push
sub
push
shl
loopne
cs
cwde
in
mov
jg
inc
sub
mov
pop
icebp
icebp
add
fisttp
es
lds
test
not
jl
cmp
or
test
ret
cmc
mov
xor
adc
push
push
mov
xor
ins
xor
int3
popa
and
xor
push
xor
test
push
jmp
sub
sub
mov
iret
movs
sti
inc
push
dec
fwait
cmp
pop
mov
push
adc
jne
test
add
inc
scas
frstor
sub
pop
or
add
daa
add
mov
xchg
sub
in
aaa
aaa
pop
push
pop
inc
xor
inc
push
xchg
outs
test
sbb
push
and
clc
xchg
pop
cmp
pop
jmp
jecxz
rcr
test
mov
inc
adc
xchg
add
add
movs
retf
in
movs
das
mov
hlt
das
inc
dec
cld
xor
stos
xor
mov
sbb
imul
movs
ins
and
pop
jb
or
pop
sbb
dec
fld
add
(bad)
and
lods
mov
dec
arpl
inc
add
inc
ins
or
xchg
add
sar
in
loop
clc
cmp
mov
loopne
sbb
jle
add
xor
xor
pushf
jmp
adc
add
xor
xchg
inc
cmp
jne
or
vmwrite
cmp
sbb
inc
pop
(bad)
sbb
jbe
push
dec
inc
jge
rol
inc
mov
sbb
fldenv
fmul
push
fsubp
cmps
mov
daa
daa
pop
xor
and
bnd
test
add
pop
jne
mov
sub
leave
push
pop
cmp
dec
cs
outs
fnstsw
mov
mov
inc
mov
retf
shl
push
push
pop
and
mov
xchg
push
fisttp
imul
jl
push
xchg
adc
cmp
add
cmp
sub
lock
repz
adc
jmp
mov
mov
sub
arpl
mov
cmp
mov
call
xchg
sbb
rcr
test
xor
rcl
rcl
push
and
jno
(bad)
xchg
leave
pop
(bad)
push
or
ficom
retf
cmc
ret
test
inc
movs
add
pop
mov
jge
xchg
jae
adc
movs
dec
lods
mov
popf
out
mov
xor
sub
sub
call
push
mov
sub
xor
imul
xchg
sub
(bad)
es
je
fisub
mov
inc
ins
inc
mov
aaa
stos
shr
inc
inc
mov
in
int
push
and
clc
xor
(bad)
std
sbb
mov
mov
cs
ret
adc
push
jl
in
test
(bad)
cmp
outs
push
pop
or
pop
xor
mov
js
repz
dec
sahf
sbb
inc
cmp
jbe
jns
jo
xor
jne
loope
enter
cmove
add
sbb
xchg
jp
mov
pop
test
push
inc
mov
ret
pusha
outs
adc
mov
push
mov
and
xor
push
cld
or
pop
inc
div
les
xchg
popf
ja
pop
pop
adc
xor
lods
fnstenv
push
push
jmp
inc
fs
or
mov
or
sbb
push
(bad)
or
sar
ror
add
push
inc
adc
add
or
push
cmc
adc
jnp
or
repnz
adc
sub
push
dec
sub
aas
xor
sbb
push
xor
pop
ret
leave
imul
jle
ins
dec
inc
mov
inc
iret
ins
jmp
xchg
push
(bad)
adc
and
and
test
push
cld
xchg
shr
sbb
test
dec
add
dec
sub
or
je
rol
and
mov
pop
xchg
cwde
adc
lods
and
mov
mov
xchg
les
in
mov
inc
jecxz
and
rcr
push
xlat
pop
hlt
dec
pop
xchg
push
add
sub
or
adc
xchg
jo
sahf
jne
push
mov
and
fidiv
out
in
je
adc
call
add
arpl
mov
cmp
inc
push
xchg
or
jmp
jne
mov
ss
ret
jo
pop
repnz
push
xlat
push
call
je
adc
push
je
nop
ins
test
xor
dec
add
xor
xlat
xchg
mov
sbb
mov
rcl
sbb
ret
ret
je
cmps
add
inc
cmps
xor
push
outs
aad
jl
test
jo
or
mov
add
push
(bad)
jecxz
dec
push
ja
mov
and
ret
pop
je
pop
js
sub
mov
pop
xchg
es
mov
adc
add
fild
shl
out
or
ds
sub
rcr
mov
push
or
jl
lds
sub
add
add
loope
sbb
sub
inc
push
sbb
mov
rol
and
stos
and
sbb
std
or
aam
ins
leave
sahf
idiv
push
mov
sub
imul
push
add
sbb
xchg
test
inc
mov
jne
adc
mov
bound
dec
ret
shl
add
sub
enter
into
and
iret
or
xchg
pop
xchg
sti
push
popa
lods
arpl
jmp
add
in
push
xchg
inc
cmp
mov
movs
dec
or
sub
pop
and
lods
fdivr
or
imul
dec
adc
imul
sub
jnp
sbb
push
mov
and
adc
mov
pushf
push
lahf
dec
rcr
push
or
test
jg
xor
xchg
aaa
test
ret
repnz
mov
ds
xchg
mov
cs
aas
mov
cmp
push
lods
(bad)
cmp
push
loopne
leave
jmp
sub
imul
jl
sub
jg
push
inc
(bad)
add
xor
retf
movs
or
clc
mov
push
adc
ins
or
or
stc
test
adc
mov
stos
mov
push
pop
pop
xchg
push
bound
jns
cmp
(bad)
pop
add
imul
pop
xor
cmp
adc
mov
mov
je
mov
dec
arpl
aas
and
mov
rcl
pop
sbb
push
das
inc
neg
dec
and
add
xchg
cmp
scas
(bad)
cmp
jg
ds
das
or
cmp
pop
pop
jo
cmp
inc
retf
pop
jle
inc
stos
push
cmp
sahf
stc
dec
fdivr
stos
and
sbb
push
pop
and
mov
jb
fiadd
mov
push
mov
push
dec
test
scas
fldenv
inc
fcom
or
push
push
push
(bad)
add
adc
loopne
scas
pop
add
xchg
or
pop
pop
mov
add
cmp
inc
lods
fadd
jge
test
rol
jb
(bad)
push
mov
push
dec
xchg
lock
fisttp
dec
and
inc
pop
in
add
cmp
dec
adc
mov
or
lods
mov
jo
jmp
mov
ds
nop
mov
and
cdq
xchg
hlt
in
or
sub
inc
dec
pop
add
push
add
jl
mov
rol
sub
test
movs
push
inc
fwait
push
pushf
xchg
add
mov
dec
mov
test
or
pop
and
stos
jbe
sub
dec
fadd
mov
sub
lock
push
rcr
les
jp
inc
dec
jae
je
inc
push
mov
stos
or
mov
and
dec
test
add
movs
(bad)
fcom
inc
shl
jle
or
inc
sbb
adc
mov
mov
repz
loopne
sbb
dec
out
stos
mov
ret
cdq
loop
jnp
and
xchg
dec
jo
dec
xchg
inc
ins
mov
js
sahf
je
ins
sub
inc
cmp
push
add
cmp
mov
or
push
shl
jae
xchg
and
inc
movs
dec
jl
loopne
push
or
out
in
lea
mov
dec
dec
add
xchg
rol
mov
js
push
pop
(bad)
out
adc
dec
cmp
sbb
jbe
sub
icebp
in
popa
add
iret
pop
mov
adc
xchg
jno
adc
pop
push
inc
xor
test
das
outs
fdiv
(bad)
loope
cmp
ins
dec
sbb
cdq
mov
ret
inc
jo
or
or
sbb
dec
and
mov
push
sub
sub
loopne
xchg
in
cdq
ret
push
or
ret
cmp
in
mov
movs
cmp
imul
xor
pop
adc
fidiv
adc
adc
inc
jecxz
adc
jno
pusha
loopne
push
mov
inc
shl
arpl
mov
xchg
mov
repnz
mov
or
retf
sbb
sbb
and
scas
cmp
call
xchg
push
or
xchg
inc
imul
push
jl
pop
lock
test
push
in
sbb
jno
push
imul
sti
sbb
or
ins
(bad)
or
push
mov
stos
mov
shr
jo
push
pop
shl
or
daa
retf
sub
add
inc
ficom
sbb
sub
fnsave
adc
add
add
push
mov
ret
sub
mov
mov
dec
push
leave
dec
ret
or
jecxz
or
mov
inc
add
shr
sub
gs
jmp
movs
movs
sub
nop
add
cmp
test
ss
aaa
ins
and
jns
add
cmp
add
adc
xor
jno
xor
fldcw
das
pop
lea
push
xchg
and
mov
pop
cmp
mov
cmp
repz
leave
dec
or
push
loopne
dec
mov
adc
sar
or
(bad)
push
jl
jbe
and
sbb
leave
and
arpl
shl
sbb
jno
push
ss
and
(bad)
push
test
sar
rcr
in
shl
sub
das
or
aad
cmps
cmps
fnstsw
sahf
and
cmp
pop
add
mov
ss
cmp
add
and
rol
daa
inc
fcom
or
pop
adc
leave
sbb
(bad)
cmps
jns
xchg
or
stc
adc
xor
dec
iret
add
lds
movs
mov
cmp
pop
add
add
xor
in
add
rcr
adc
jbe
cmp
and
iret
and
xchg
rol
xlat
mov
xlat
ret
mov
stos
fs
jno
pop
(bad)
sar
movs
test
nop
and
in
fnsave
or
pop
jmp
pushf
mov
pusha
int
pop
xchg
pop
cmps
jl
mov
imul
and
push
pop
pusha
sbb
shr
in
sub
xor
pop
leave
pop
cdq
pusha
push
mov
and
jmp
push
dec
pop
jb
xchg
push
stos
push
shl
fsubrp
adc
scas
mov
push
not
es
dec
out
xor
and
mov
push
fild
nop
xchg
jg
jnp
in
sbb
in
daa
dec
xor
(bad)
xor
movs
add
jbe
xchg
popa
dec
sbb
pop
sub
scas
sti
push
or
push
cmp
cld
xlat
adc
jecxz
dec
loopne
mov
mov
fnstcw
push
ret
xor
int
mov
xchg
add
outs
mov
push
stos
sti
push
leave
add
pusha
inc
adc
out
pop
icebp
and
mov
fs
xchg
pop
jmp
adc
adc
or
mov
imul
pop
sub
or
add
and
es
add
ror
in
dec
pop
mov
push
sub
xorps
cs
movs
pushf
scas
shl
out
push
push
add
jo
enter
sbb
fld
add
enter
lds
pop
and
sub
jmp
push
fadd
xchg
inc
xor
(bad)
stc
cmps
inc
push
add
mov
pop
lock
call
jmp
and
push
cdq
loopne
ror
cmp
and
ins
in
or
popf
inc
add
rol
xor
push
sub
xlat
add
and
mov
fnstenv
loope
cmc
cmp
push
mov
cmp
enter
push
push
ins
test
or
cdq
nop
jp
cmp
add
ds
sbb
sbb
adc
cmps
cmp
mov
and
imul
xor
ret
push
mov
push
fistp
mov
inc
xor
inc
imul
icebp
icebp
sbb
jmp
add
and
push
xchg
xor
sub
test
dec
mov
sbb
and
lods
pop
sbb
adc
aas
xchg
cmp
xchg
sbb
push
adc
out
or
xchg
adc
cdq
add
stos
push
add
inc
push
sbb
scas
dec
inc
or
mov
div
add
idiv
push
fidivr
push
mov
lea
loope
and
pop
dec
and
cmps
or
sbb
adc
inc
adc
mov
dec
out
push
add
mov
in
adc
mov
push
loopne
adc
cmp
loop
inc
sub
adc
push
cli
jmp
sub
enter
es
jl
ins
call
push
push
inc
cmc
jecxz
clc
add
xchg
outs
fiadd
xchg
or
and
lods
push
movs
shl
and
push
jg
and
add
mov
inc
in
lods
pop
test
nop
adc
pop
pop
sub
test
retf
dec
mov
js
cmp
pop
dec
mov
xor
dec
fld
or
jle
add
shl
push
(bad)
js
and
sbb
add
sbb
push
mov
popa
inc
dec
push
scas
sbb
sbb
inc
retf
shl
dec
stos
test
mov
push
inc
rcr
or
test
sub
call
test
rcl
shr
inc
lock
xor
or
mov
hlt
into
in
int3
sbb
sbb
and
rcl
cmps
adc
dec
sbb
lods
ret
and
or
lds
(bad)
pop
movs
fiadd
lea
inc
cmp
int3
ret
jg
mov
and
add
push
fldcw
sub
sub
sub
call
xchg
adc
aam
cmovo
jle
cmp
jl
loopne
pop
inc
mov
fadd
pop
std
xchg
lea
dec
popa
push
dec
js
adc
jnp
jne
add
daa
pusha
jmp
bound
or
push
ja
(bad)
mov
jl
adc
or
into
inc
jle
mov
xor
das
lahf
aam
push
push
in
xor
or
mov
inc
xchg
int
add
(bad)
test
outs
icebp
lahf
jmp
xchg
xchg
mov
mov
pop
jne
push
xor
bound
push
popa
movs
xor
inc
das
mov
adc
test
movs
and
push
scas
inc
push
xor
popf
mov
shl
clc
and
inc
fcom
and
xchg
ja
fs
loop
pop
inc
ficomp
rcr
xchg
jecxz
addr16
dec
jmp
mov
test
jg
lea
cmp
jle
dec
add
sbb
jo
mov
cmps
addr16
hlt
mov
hlt
jo
pop
xchg
inc
lea
add
stc
pop
mov
arpl
das
or
adc
pusha
dec
es
and
lahf
jl
add
mov
jmp
call
cmp
mov
jno
imul
repz
mov
rcl
(bad)
xor
pop
sar
les
cmp
mov
push
loopne
ror
pop
push
adc
inc
pop
das
lds
push
mov
bts
stos
push
subps
add
jecxz
or
sbb
test
sbb
ins
adc
lock
adc
cmp
aam
jnp
add
adc
mov
ret
adc
sar
adc
sub
mov
and
or
cld
mov
in
ins
arpl
fld
pop
repz
mov
adc
dec
fcom
pusha
femms
jno
stos
dec
mov
adc
cmp
dec
and
dec
cld
pushf
std
in
inc
xor
pop
adc
sub
cmps
loopne
scas
test
imul
neg
dec
lock
jg
dec
xor
mov
arpl
js
mov
cmps
pop
das
imul
pop
gs
test
dec
cmp
jno
sti
pop
push
jns
cdq
pusha
cmp
add
sti
and
in
or
cmp
push
rcr
clc
add
cmp
dec
or
aad
lea
mov
dec
fisttp
add
mov
jb
inc
jl
jo
dec
adc
loopne
mov
push
pusha
ins
leave
cmp
movs
xor
xchg
push
jmp
dec
sub
ins
loope
ret
dec
addr16
jo
jp
xor
or
add
sahf
stc
enter
nop
nop
or
and
xor
sar
push
mov
sub
adc
xor
dec
and
ins
std
cmp
or
scas
loopne
(bad)
or
mov
(bad)
mov
call
mov
aas
cmp
add
test
loopne
test
sbb
add
stc
add
lea
addr16
pop
clc
mov
pop
es
mov
cmp
mov
push
ins
loope
mov
push
add
xchg
sbb
mov
add
sub
xor
je
cmp
in
pop
xor
or
and
xchg
out
xchg
sub
push
in
imul
push
cmp
not
and
or
movs
mov
loopne
movs
mov
cmp
jne
add
add
mov
cld
popa
arpl
inc
ror
das
pop
adc
lds
push
neg
int3
test
retf
mov
adc
loop
push
jmp
push
js
mov
bswap
sti
xor
sbb
mov
dec
pop
aas
and
cmp
je
pop
push
push
pusha
dec
in
mov
cmp
push
sbb
and
push
sub
add
fcom
inc
das
loope
ror
icebp
mov
mov
xchg
and
xor
sub
sbb
jp
mov
hlt
add
push
int
pushf
add
dec
lods
stos
arpl
mov
test
ret
adc
std
adc
push
mov
or
shl
mov
and
scas
mov
fstp
inc
cmc
adc
push
gs
push
jae
and
ins
jne
sar
and
and
xchg
or
sbb
rol
mov
adc
xchg
mov
mov
or
(bad)
push
dec
mov
mov
push
dec
lahf
ds
mov
fwait
jmp
xor
dec
add
jnp
adc
add
cld
hlt
dec
pop
mov
jnp
dec
xlat
call
jb
mov
add
cmp
out
push
or
push
cmp
aad
loope
cwde
jl
push
sahf
jg
push
xchg
push
sub
retf
jg
(bad)
jae
mov
imul
inc
ins
xor
ret
inc
cmps
cmp
dec
push
push
or
cmp
push
icebp
and
js
les
fadd
mov
or
test
push
je
jmp
cmp
or
or
xchg
add
mov
adc
dec
add
mov
xchg
add
mov
jae
mov
retf
inc
pop
out
fcom
cmp
push
cwde
and
js
inc
push
jl
cwde
retf
cmp
sub
aad
inc
cmp
das
mov
jl
adc
jge
jns
repnz
xchg
adc
call
lock
pop
fwait
jnp
out
jge
mov
or
xchg
int
in
jbe
or
aas
je
adc
dec
adc
loope
and
add
pushf
arpl
call
clc
(bad)
push
aas
xor
add
mov
inc
jge
into
add
je
cwde
push
xor
sbb
push
xor
icebp
or
std
push
call
mov
test
test
inc
sbb
in
mov
jl
add
retf
jl
pop
and
ror
inc
stos
(bad)
jecxz
dec
add
sbb
retf
(bad)
jmp
scas
shr
ret
mov
mov
mov
xor
imul
shl
push
test
sub
add
adc
pop
cmp
cs
jmp
(bad)
je
lea
(bad)
mov
add
mov
ins
push
sub
pop
jb
test
add
mov
or
sbb
mov
xlat
inc
loope
xchg
rcr
int3
sub
sub
jno
addr16
cmp
popa
adc
pusha
or
push
call
xor
add
iret
cmp
cmp
in
dec
test
movs
jns
popa
mov
xchg
xor
push
xchg
je
inc
jp
jae
fistp
mov
ins
retf
add
sbb
je
sbb
sbb
inc
imul
pop
mov
jg
mov
cmp
test
mov
inc
mov
pop
mov
out
sbb
cmp
jg
add
hlt
stos
test
(bad)
repnz
dec
cs
xlat
iret
jb
push
rcl
push
inc
out
sbb
inc
dec
dec
xor
add
sub
icebp
xchg
mov
lock
xor
push
lahf
jle
icebp
lahf
add
cs
xchg
mov
jmp
cmp
cmp
inc
jmp
shr
dec
icebp
inc
pop
and
pop
mov
and
daa
push
scas
dec
inc
shl
loopne
mov
jns
in
pop
pop
rol
pop
or
jge
(bad)
inc
outs
rcl
lock
mov
mov
sbb
and
test
sub
retf
adc
js
sar
ficom
xchg
movs
add
pusha
add
cs
into
dec
or
sub
(bad)
jmp
call
dec
mov
cwde
add
jnp
jnp
pop
outs
cmp
cwde
dec
cmp
nop
dec
outs
sbb
xchg
dec
dec
shl
sbb
lahf
pop
adc
addr16
ins
mov
xor
or
or
icebp
pop
jnp
xchg
call
push
lods
jl
pop
push
cmp
sub
sub
les
pop
daa
jl
push
sbb
jnp
aad
rcl
mov
cmp
xchg
test
mov
mov
cld
pop
and
pop
push
cmps
punpcklbw
test
in
lea
iret
aam
dec
pop
into
inc
xchg
or
xor
fmul
imul
cmps
lea
mov
add
lea
jo
test
add
lock
ret
xchg
mov
xchg
add
add
rol
dec
jl
(bad)
adc
and
sub
jle
hlt
pop
popa
fisttp
add
xor
xchg
pop
rcl
ins
jmp
add
dec
sbb
push
mov
push
and
iret
aam
and
pop
xlat
push
and
or
push
dec
test
inc
jae
jbe
lds
(bad)
jnp
fst
cmps
std
retf
or
inc
push
and
ss
pusha
lods
iret
add
ja
nop
clc
mov
dec
jmp
xlat
rcl
daa
test
mov
jne
sbb
(bad)
jmp
jo
adc
inc
and
pop
cmp
retf
sbb
or
inc
fdiv
test
push
jne
cmp
pop
sub
mov
call
(bad)
jecxz
test
jecxz
jle
pop
lods
aad
pop
push
(bad)
pushf
in
sub
ret
xchg
fwait
sbb
sbb
or
push
call
sbb
xor
xchg
mov
loopne
xor
aam
retf
pop
push
sub
inc
add
mov
sbb
inc
add
jl
test
xchg
(bad)
or
ret
and
mov
test
in
(bad)
les
cs
inc
cmps
shl
add
movs
jo
add
push
fstp
mov
in
sub
and
rcl
sub
sahf
and
jmp
jecxz
adc
xor
add
into
inc
inc
dec
pop
mov
test
push
clc
push
push
or
fimul
sbb
push
mov
push
or
call
adc
or
mov
lea
mov
push
scas
in
dec
push
test
mov
jmp
lock
xchg
inc
pusha
sti
sbb
or
xchg
test
jo
sub
mov
and
rol
(bad)
aam
dec
repz
mov
neg
inc
sub
je
adc
sub
adc
lock
jecxz
in
mov
aad
test
aas
leave
rcr
std
cmp
push
mov
sahf
cwde
rol
clc
add
test
rcl
test
mov
and
sub
ret
sbb
arpl
movs
pop
jmp
xchg
xor
jmp
mov
in
cmp
xchg
fwait
xchg
outs
ror
sar
nop
in
sbb
mov
ret
shl
popa
je
stc
popf
jb
mov
jne
xor
cmp
pop
loopne
loopne
adc
or
mov
movs
lods
mov
xlat
(bad)
mov
mov
dec
fsubr
aam
cmp
and
ja
pop
sbb
push
jecxz
es
inc
sbb
inc
push
icebp
loope
adc
jne
nop
test
pop
aam
movs
inc
sbb
inc
mov
or
ins
and
or
fiadd
jmp
or
dec
adc
inc
push
mov
and
daa
daa
dec
dec
adc
mov
inc
ret
inc
inc
popa
loopne
icebp
mov
pop
mov
ins
or
jl
add
popa
sti
test
jo
fstp
push
mov
dec
lock
xchg
loop
mov
pop
lock
mov
les
ret
jecxz
push
add
or
xchg
xchg
sub
and
shl
and
and
sbb
or
xchg
inc
mov
add
inc
push
dec
pop
xchg
add
push
mov
imul
stos
xchg
jl
mov
mov
movs
push
pop
xchg
xor
add
xor
push
pop
or
enter
dec
adc
cmps
inc
call
xor
add
test
adc
or
mov
push
cmps
nop
test
sbb
xchg
lock
and
cmps
sub
sub
push
push
jno
adc
test
pcmpgtw
mov
arpl
inc
sbb
jno
pop
mov
(bad)
ficom
push
xor
pusha
adc
movs
int
lods
add
and
xlat
add
nop
mov
into
inc
enter
pop
in
adc
pop
pop
sub
les
xor
(bad)
ror
add
dec
les
add
add
sbb
add
cmp
inc
hlt
add
sbb
xchg
pop
inc
inc
int
or
ins
xchg
add
fwait
adc
inc
ins
inc
(bad)
js
lea
push
and
inc
sub
xor
xor
and
or
ins
(bad)
xchg
imul
movs
push
push
rcl
mov
add
sub
push
or
dec
das
in
inc
push
and
fwait
cmp
sar
pop
sbb
mov
xchg
push
inc
push
mov
arpl
mov
adc
xchg
cmp
inc
mov
dec
push
ret
or
mov
or
shl
push
xor
and
inc
cmp
xor
or
push
arpl
and
fild
jg
lods
dec
push
cmp
xor
inc
jmp
cmp
mov
xchg
je
lahf
or
test
dec
cmp
les
add
retf
(bad)
adc
jmp
xchg
and
sbb
sub
stos
add
and
das
rol
stos
iret
mov
pushf
inc
mov
(bad)
retf
xor
dec
nop
add
int
addr16
mov
sbb
jo
loopne
mov
dec
mov
mov
pop
mov
test
xlat
sbb
je
xor
adc
sti
push
cmp
pop
sbb
loopne
mov
dec
push
pop
adc
je
lods
push
int
and
xchg
xor
mov
dec
dec
or
xchg
mov
dec
popa
sbb
add
pop
adc
mov
xchg
and
push
test
fld
xchg
popa
es
push
add
mov
and
mov
jmp
jne
test
adc
test
mov
ins
sbb
inc
cld
dec
mov
iret
mov
out
adc
popf
dec
or
mov
loop
mov
pop
add
and
push
(bad)
into
movs
daa
push
xor
sub
or
adc
or
push
mov
in
sbb
pop
dec
fcmovb
push
xchg
out
or
sub
sti
shl
adc
cmp
es
sub
push
add
inc
push
mov
pushf
sbb
rcr
inc
cmp
sbb
aad
nop
add
xchg
dec
lea
and
inc
push
jne
movs
sbb
movs
and
dec
add
lods
jne
dec
jmp
mov
jb
fwait
add
fld
test
xor
out
mov
dec
and
add
mov
loopne
cmp
test
jns
adc
push
test
pop
sub
pusha
mov
lods
sbb
push
xchg
dec
test
fwait
pusha
(bad)
inc
dec
cmp
dec
add
xor
inc
sbb
test
mov
into
js
inc
mul
and
sub
div
add
add
je
sub
sbb
lock
fdiv
add
jo
popa
jle
icebp
test
and
fmul
lods
in
pop
and
pop
movs
(bad)
cld
mov
test
or
sahf
pop
das
test
dec
iret
add
or
ret
cmp
xor
ins
mov
push
ins
test
sub
sub
or
js
pop
add
lea
push
add
cwde
lock
fist
cmp
push
jp
in
mov
fisubr
mov
cmp
sahf
pop
loopne
js
mov
inc
mov
jge
mul
mov
mov
pop
pop
cmp
add
cmp
jle
sahf
add
add
and
push
xchg
cmp
and
pusha
xchg
pop
aad
xor
and
inc
lahf
cmp
add
inc
shl
push
jmp
pushf
mov
mov
dec
cmp
rcl
push
or
sar
jo
xchg
nop
jp
retf
mov
xchg
jo
dec
imul
push
(bad)
out
add
int
shl
rol
popa
movs
mov
push
push
push
xchg
pushf
in
inc
repz
cli
fdivrp
or
add
sub
cmps
xchg
jns
push
aad
jae
cs
jecxz
cdq
adc
xchg
xor
jecxz
test
xchg
movs
cs
in
popf
dec
push
jae
dec
add
outs
pop
sbb
test
push
pop
add
dec
nop
xchg
cmp
add
shl
nop
(bad)
jmp
jbe
pop
or
js
inc
popf
jno
mov
mov
pop
pop
add
movs
cmp
rcr
adc
or
sbb
lods
idiv
push
aad
imul
test
imul
jo
outs
jb
or
jo
imul
jb
(bad)
fs
push
pop
je
imul
pop
bound
adc
(bad)
(bad)
nop
mov
adc
(bad)
rcl
je
mov
xor
or
es
xchg
jo
das
shr
lock
pusha
add
xchg
popa
push
push
lods
xor
xchg
nop
idiv
test
mov
daa
dec
jo
push
sub
mov
fiadd
retf
and
enter
add
cmp
js
lods
push
cmp
xor
sbb
out
cmp
aad
sbb
pop
cmp
add
mov
push
adc
outs
inc
sub
push
sbb
js
lock
or
or
cdq
and
std
fneni(8087
cmp
(bad)
and
dec
je
or
mov
adc
je
or
je
ins
mov
xor
sbb
fisttp
test
cli
lahf
jb
(bad)
fldcw
xchg
inc
stc
add
and
dec
loopne
mov
js
mov
xor
dec
or
add
sbb
stc
into
sbb
push
outs
mov
sbb
xchg
nop
cmp
pop
cmps
add
sahf
mov
xchg
sbb
and
inc
mov
and
mov
lods
mov
mov
dec
inc
jns
jp
adc
push
ja
pop
dec
aas
sub
cmp
jg
sbb
mov
enter
repnz
enter
push
dec
pop
movs
cmp
or
inc
and
fs
int3
adc
ins
aas
imul
and
and
sbb
add
and
xor
lods
or
inc
inc
push
jno
adc
jne
cs
pop
enter
mov
fld
lock
xchg
xor
sbb
inc
loop
and
sub
dec
or
inc
movs
rol
shr
dec
addr16
gs
gs
xchg
mov
cs
and
add
lahf
dec
xor
sbb
adc
jmp
shl
aas
dec
inc
jae
outs
(bad)
sub
or
enter
leave
ja
ins
mov
(bad)
enter
and
jae
add
inc
adc
adc
mov
fdivr
jne
xchg
push
inc
add
and
aas
sub
outs
push
mov
adc
add
jmp
push
fucom
jg
popa
nop
mov
popf
out
lods
and
push
xor
mov
push
mov
and
jo
movs
xchg
pop
mov
and
js
xlat
adc
jp
(bad)
ins
mov
out
enter
and
dec
ss
retf
add
jno
sbb
mov
jle
pop
inc
xchg
jmp
leave
inc
sbb
loopne
out
loop
inc
cmp
push
daa
je
xchg
add
mov
dec
dec
mov
je
retf
arpl
int3
jns
xor
inc
and
add
xchg
(bad)
adc
dec
push
je
sub
mov
xchg
dec
sub
push
cmp
test
or
sbb
les
jb
cmp
call
(bad)
xchg
scas
dec
dec
loopne
loope
rol
mov
cdq
cmp
rol
mov
xchg
lods
in
sub
enter
mov
cmps
int3
cmp
jno
cmp
mov
push
inc
push
sbb
shl
in
mov
xor
ss
jecxz
mov
daa
mov
cmp
leave
les
push
push
pop
push
pop
xchg
mov
(bad)
jmp
mov
pop
ror
adc
push
icebp
jge
dec
dec
loopne
jae
not
repz
icebp
es
movs
xchg
dec
call
inc
jmp
jmp
mov
cmp
in
jge
mov
sbb
and
call
mov
add
add
or
test
inc
shr
imul
mov
sbb
inc
jl
fsub
ret
add
and
es
imul
jle
jecxz
mov
pop
sbb
rol
cmp
xchg
and
add
jno
mov
mov
fwait
cmp
test
xor
fdiv
in
ret
push
test
adc
add
leave
push
add
pop
adc
(bad)
and
jmp
ins
xchg
mov
xchg
add
mov
(bad)
add
mov
jbe
mov
xchg
mov
jbe
xlat
push
cmps
sbb
pop
fisub
or
fnstcw
pusha
dec
jnp
or
jo
cmp
inc
outs
outs
outs
outs
or
je
adc
adc
sbb
je
or
sbb
inc
and
or
nop
push
push
add
add
hlt
dec
sbb
retf
lea
clc
rcl
and
mov
das
add
mov
push
loopne
dec
pop
pop
sbb
sbb
inc
dec
push
push
mov
shr
jmp
push
lods
lds
dec
and
add
das
rcl
add
and
jmp
or
sbb
sub
cmp
or
js
pop
add
pop
adc
inc
nop
mov
pop
dec
int
pusha
rol
sbb
dec
movs
dec
ss
jge
xchg
xor
push
lock
les
in
adc
popf
pop
rol
push
je
dec
add
cmps
aaa
xor
ins
adc
in
sbb
cmp
add
fmul
fst
jo
adc
nop
rcr
adc
lods
fisubr
xchg
ss
xchg
push
fs
mov
cmp
add
push
cmp
aad
and
movs
je
jno
dec
test
add
call
movs
nop
dec
fidivr
enter
adc
xchg
and
or
movs
(bad)
push
nop
or
add
pop
mov
sbb
ss
(bad)
xchg
sbb
repz
or
imul
(bad)
es
adc
mov
add
pop
pop
sub
and
mov
jl
outs
icebp
popa
popa
adc
jmp
repnz
aam
lahf
or
push
rcr
jp
push
push
and
adc
sub
mov
xor
jecxz
test
test
sbb
mov
loope
jae
add
jae
lahf
mov
in
imul
jne
and
aam
push
mov
and
adc
cmp
lahf
sub
mov
sbb
lods
bound
lods
and
sub
mov
jmp
add
pop
push
imul
dec
and
jno
xchg
xchg
inc
mov
es
pushf
call
outs
adc
in
dec
jl
ret
outs
pop
rcr
cli
mov
jae
mov
push
in
xor
repz
or
in
pushf
or
(bad)
push
adc
or
push
fild
jnp
mov
retf
inc
push
mov
(bad)
mov
mov
ret
es
pop
leave
xchg
dec
retf
xchg
test
add
push
xor
pop
inc
add
adc
push
inc
sbb
test
mov
cmp
dec
int
cmc
push
pop
mov
mov
mov
fmul
and
sub
enter
popa
mov
clc
adc
push
push
cmp
arpl
leave
xor
dec
mov
clc
jl
sub
and
push
and
hlt
push
push
ins
xor
jne
or
jne
nop
inc
adc
xchg
cli
mov
pusha
mov
fndisi(8087
pop
scas
and
ret
push
leave
les
cmps
or
cmps
sahf
push
add
in
push
retf
xchg
xrelease
push
mov
retf
mov
add
inc
call
mov
cli
add
clc
cmps
sbb
cmp
add
pop
(bad)
pop
mov
adc
loop
and
stc
add
cmp
into
push
mov
mov
cdq
test
(bad)
call
xlat
iret
sahf
mov
jl
inc
or
xlat
mov
sahf
aas
call
aad
mov
(bad)
cli
cmp
or
add
add
outs
sub
mov
cmp
jg
adc
xchg
xor
and
pop
out
push
inc
(bad)
cmp
cld
stc
pop
(bad)
jle
test
rol
pushf
push
xchg
xchg
jbe
and
sbb
inc
xchg
dec
pop
mov
jg
xchg
add
mov
into
es
jmp
add
and
and
cmps
jne
call
mov
inc
pop
inc
outs
xchg
xchg
(bad)
jmp
sar
cmc
(bad)
mov
mov
sub
push
xchg
aam
hlt
retf
ja
and
and
ja
add
push
xor
lock
loope
sbb
inc
and
fwait
mov
dec
mov
mov
jae
jmp
mov
mov
or
sbb
or
imul
push
add
call
and
(bad)
inc
(bad)
lock
je
je
or
sbb
jns
fcomp
mov
sbb
and
fcmovu
adc
(bad)
dec
repz
(bad)
aam
and
test
ins
jmp
inc
ret
rcl
xor
rcl
or
fidiv
loope
pop
outs
push
push
mov
or
adc
or
inc
std
sbb
ja
cmp
addr16
neg
sbb
add
dec
cmp
ins
pop
or
pop
aas
mov
fmul
adc
(bad)
repz
pop
(bad)
xchg
dec
jmp
and
les
add
xchg
adc
scas
loop
out
inc
pop
fild
push
pop
adc
dec
push
je
adc
cmp
lea
push
inc
add
fadd
xchg
pop
cmp
adc
push
rol
clc
cmp
es
adc
sbb
mov
mov
adc
jp
cmp
xchg
call
adc
xchg
pop
add
xor
(bad)
fild
xor
push
mov
jmp
in
outs
adc
(bad)
add
add
lock
movs
cmp
enter
mov
dec
mov
ins
rsqrtps
add
bound
cmp
add
xlat
xchg
add
xchg
test
inc
xor
cwde
push
pop
ja
mov
and
sub
sub
cmp
or
or
xor
data16
push
add
or
sbb
test
cmp
movaps
cwde
ror
loop
in
rol
fild
push
inc
adc
pop
jbe
str
add
cmp
sub
push
and
in
push
sbb
mov
stc
cli
cmps
es
repz
and
push
bound
clc
mov
jno
adc
inc
push
clc
push
pusha
cmps
sbb
fisubr
je
sar
retf
enter
add
cdq
out
adc
jo
lea
or
jnp
add
cdq
ror
and
jnp
call
dec
cmps
push
jle
(bad)
in
clc
xchg
not
jne
ins
arpl
jmp
pusha
in
and
xor
mov
pop
ja
xchg
rcr
test
mov
add
(bad)
outs
cmps
sar
out
jle
dec
mov
cs
pop
push
jmp
shr
mov
xchg
popa
inc
loope
div
call
or
push
xchg
ins
ins
push
ss
push
sbb
xor
mov
cli
mov
add
pop
popa
xchg
mov
repz
ret
pop
adc
mov
mov
gs
stos
or
push
loopne
les
add
cmp
cs
and
jo
mov
sti
neg
dec
pop
mov
adc
les
or
add
push
sti
gs
das
stc
inc
cmp
xchg
lock
mov
and
or
push
outs
or
nop
mov
sbb
fs
sbb
popa
or
daa
adc
call
out
cmp
and
add
mov
dec
test
leave
pop
push
sub
add
icebp
xchg
jl
add
js
xchg
ss
xchg
aad
pop
pop
or
mov
mov
cs
retf
int3
rcl
fcomp
and
cmp
retf
movs
mov
dec
dec
movs
jo
pushf
inc
jbe
sub
movs
movs
arpl
push
pusha
or
movs
or
movs
and
arpl
test
adc
inc
neg
mov
push
or
test
lea
and
sub
adc
cmps
gs
adc
mov
aas
jb
dec
out
dec
add
imul
mov
out
push
dec
(bad)
xor
and
mov
sbb
bound
push
add
cmp
or
inc
jmp
inc
sub
push
call
imul
mov
push
or
adc
fcmove
scas
cmp
dec
xor
push
pop
shl
inc
fst
test
add
sub
fadd
out
pop
lods
push
shl
adc
retf
bound
or
xchg
xor
test
popa
jne
xor
mov
add
inc
enter
sub
mov
dec
push
cmp
jo
and
ins
daa
push
push
gs
pop
cmp
xor
out
jmp
mov
sub
mov
and
in
icebp
inc
add
cmp
mov
jmp
mov
mov
bound
pcmpeqb
push
jg
adc
je
call
adc
adc
lods
lods
adc
shr
out
mov
pop
or
out
cmp
push
dec
cli
cli
add
pop
fs
mov
pop
inc
pop
pusha
inc
cli
retf
int3
nop
ret
pop
ret
sbb
push
les
(bad)
and
and
(bad)
sub
sti
jl
adc
xchg
push
dec
clc
jbe
xor
cli
mov
sar
icebp
mov
jne
pop
mov
or
pop
pop
push
add
or
mov
lock
sbb
adc
jge
enter
call
lock
adc
mov
mov
pop
sbb
mov
push
pushf
mul
mov
test
mov
jnp
sub
aaa
inc
outs
rol
xchg
test
dec
cmp
push
xor
nop
add
ins
dec
inc
add
sbb
std
inc
jle
lea
and
push
jo
pop
cmp
nop
rcl
push
adc
lea
inc
or
lock
adc
jle
fdivrp
add
mov
add
pop
test
adc
arpl
daa
sbb
inc
jmp
sahf
jne
fcom
(bad)
inc
add
and
push
adc
inc
or
stc
jle
add
popf
adc
add
mov
push
jg
pop
inc
xor
push
xchg
mov
dec
out
call
lock
sub
scas
push
jmp
cmp
cmp
ret
test
dec
out
outs
inc
cwde
pusha
dec
dec
popf
sub
xchg
add
push
test
push
pop
sbb
pusha
push
mov
test
cmps
jmp
retf
fadd
add
test
enter
in
add
popa
aam
daa
push
mov
or
iret
pop
inc
push
push
leave
and
adc
aas
aaa
shl
push
loopne
retf
fild
xor
jmp
(bad)
xchg
lock
sti
xchg
jecxz
or
jmp
retf
inc
sub
sub
out
inc
or
or
lea
adc
dec
rcr
outs
pop
push
lock
add
or
xchg
mov
es
les
bound
mov
adc
pop
pop
sbb
cdq
xchg
sub
add
inc
mov
inc
mov
cmp
or
fsub
popa
mov
and
add
adc
jmp
sbb
mov
jne
adc
add
test
stos
rol
add
pop
lods
pop
std
xchg
sbb
fadd
mov
add
dec
or
push
pop
add
sbb
test
or
cmp
jge
daa
cmp
les
or
outs
jmp
test
inc
mov
fst
or
aaa
jne
(bad)
jl
iret
push
in
(bad)
mov
pop
jno
div
or
aas
push
dec
sub
or
mov
add
dec
mov
mov
and
pop
mov
rol
cld
leave
pop
call
add
push
loopne
loope
js
enter
lea
jl
cmp
add
sbb
cmp
and
pop
pop
leave
enter
pop
lds
adc
dec
add
push
push
loop
sbb
iret
xor
sub
dec
pop
add
fild
movs
add
jne
stc
popa
loope
push
pop
push
push
or
push
clc
sbb
mov
jo
inc
pop
mov
pop
mov
push
cmps
sub
push
inc
leave
mov
inc
sub
xor
push
push
leave
add
iret
or
add
dec
ret
and
pop
lds
adc
arpl
or
mov
test
mov
aam
inc
sub
movs
xchg
mov
dec
add
pop
and
outs
test
pop
push
dec
jp
push
pop
mov
cmps
pop
pop
and
out
or
lods
cmp
dec
sbb
sub
ds
xor
test
je
mov
adc
ret
add
outs
pop
lahf
repnz
push
iret
mov
sbb
jo
lea
das
stos
mov
push
test
rcl
in
push
sub
rol
ret
pop
fld
mov
and
jb
popf
imul
addr16
(bad)
and
js
fmul
inc
js
push
push
add
mov
dec
xchg
dec
cwde
bound
cwde
loopne
or
enter
and
mov
in
inc
in
loopne
dec
push
and
add
int3
cmp
mov
inc
movs
xor
(bad)
jns
and
mov
inc
or
or
jne
addr16
call
mov
adc
ja
fcom
es
cmp
jbe
mov
es
pusha
and
sbb
pop
jne
fldpi
cmps
add
push
mov
sbb
sbb
push
icebp
adc
dec
mov
int
xor
add
jge
or
arpl
dec
pop
push
nop
jb
rol
xchg
fdivr
add
dec
fwait
call
dec
fwait
jl
lods
movs
nop
or
rcl
mov
repnz
or
cmp
and
daa
mov
jno
retf
inc
xchg
into
in
retw
xlat
clc
movs
ins
fcom
cld
mov
mov
or
mov
lock
push
or
and
and
jb
jl
and
sub
ret
sub
cmp
clc
cmc
stos
or
cmp
jge
clc
test
cmp
sti
cwde
push
adc
(bad)
or
push
push
dec
(bad)
xor
xchg
or
xchg
scas
in
mov
loope
xor
pop
or
gs
push
push
cmp
jge
pusha
inc
xchg
push
hlt
adc
pop
add
call
sub
add
xchg
and
test
das
or
xchg
je
cmp
add
mov
stos
and
pop
xor
out
mov
retf
and
sar
add
imul
daa
cld
lea
mov
retf
dec
or
out
cmp
sbb
retf
and
and
jmp
sbb
mul
pop
cdq
data16
mov
loopne
push
dec
(bad)
ins
pop
inc
mov
ror
push
or
xor
or
cmp
xor
imul
add
fild
pop
mov
jge
enter
retf
mov
clc
fwait
ret
inc
dec
mov
add
clc
jmp
push
mov
retf
test
sub
pop
or
pushf
aaa
rol
inc
popa
rcr
test
int
lods
lds
mov
imul
mov
int
sbb
jnp
jecxz
dec
push
pop
stos
mov
inc
sar
test
aad
pop
retf
pop
outs
jae
or
push
or
fcmovnu
adc
ror
or
mov
adc
add
nop
mov
arpl
cmp
paddb
sar
and
adc
rcr
add
pop
and
lock
dec
mov
gs
mov
xchg
xor
sbb
das
movs
mov
fdiv
xchg
or
inc
(bad)
jnp
dec
retf
push
pop
xchg
adc
fadd
sub
arpl
xchg
bound
cmp
ss
sub
lods
inc
fldpi
pop
mov
add
xor
inc
inc
xor
push
lea
add
test
movs
in
pop
cwde
retf
sbb
push
retf
ins
xchg
jno
or
jl
dec
pusha
mov
pusha
js
cmp
ds
pusha
mov
pop
sbb
adc
outs
dec
xchg
sahf
push
mov
and
(bad)
mov
add
jo
clc
and
pop
icebp
loop
push
xor
pop
adc
adc
mov
mov
push
in
push
add
sbb
xor
or
xchg
and
mov
inc
push
popa
loope
lods
or
lods
jo
out
add
clc
cmp
je
add
push
mov
push
push
fidivr
imul
dec
adc
or
cmp
popa
mov
xchg
inc
or
inc
shl
mov
(bad)
adc
push
sbb
inc
in
sub
dec
(bad)
and
mov
sbb
addr16
xor
mov
or
mov
repnz
sahf
dec
mov
mov
jne
inc
(bad)
pop
push
or
xchg
push
cmp
mov
mov
mov
ficomp
xor
add
hlt
ret
sub
inc
xchg
mov
fsubr
mov
pop
sbb
sbb
jo
jmp
mov
mov
es
ret
xlat
inc
inc
lea
inc
mov
mov
clc
or
sar
mov
pushf
rcl
push
aas
pop
push
outs
xor
dec
push
push
loopne
mov
pushf
sub
test
ds
pusha
xor
push
dec
push
dec
and
rcr
mov
(bad)
cmc
das
sbb
loope
add
je
xor
lea
jns
adc
and
sbb
shr
call
push
pop
add
and
aaa
and
add
mov
inc
stc
inc
and
cwde
imul
(bad)
jb
and
pop
xchg
into
das
inc
inc
sar
push
push
sub
mov
int3
jbe
push
adc
movs
mov
mov
addr16
add
sub
inc
movs
sub
sbb
ins
push
push
pop
cwde
xor
retf
xor
daa
popa
arpl
push
or
lea
inc
and
mov
mov
and
push
push
test
lds
(bad)
fst
dec
sbb
(bad)
icebp
add
adc
nop
es
mov
pop
or
mov
mov
ins
inc
add
rcl
mov
cmp
push
pop
add
test
ds
dec
pop
add
xchg
add
pcmpeqw
lahf
pop
fnsave
pushf
test
bound
gs
jmp
fstp
fcom
xchg
icebp
and
dec
mov
mov
pusha
mov
xor
(bad)
jge
xchg
into
or
or
out
inc
pop
inc
push
xchg
ret
test
sub
ins
popa
jg
xchg
rcl
dec
ins
loop
(bad)
push
fcmovb
dec
loop
stos
jecxz
push
push
push
ror
inc
imul
add
push
mov
or
into
mov
push
cmp
add
and
aas
sahf
pop
xor
mov
sahf
sbb
cmp
push
pop
lods
mov
or
lods
lods
mov
add
popf
ds
jle
lock
add
inc
add
xor
call
repz
add
cmps
push
imul
dec
push
loopne
pusha
pusha
dec
push
ins
call
mov
inc
cmp
push
cs
ss
movs
pop
aam
and
je
sub
push
pop
and
imul
mov
daa
inc
inc
shl
pop
pop
jne
fist
sub
and
adc
pop
fimul
icebp
push
mov
inc
out
sub
out
loope
xchg
jo
inc
aad
sub
fisubr
sar
push
sub
add
ins
xchg
push
push
pusha
push
cmp
push
lock
hlt
ins
out
mov
sbb
xchg
fwait
dec
cwde
jne
push
jmp
lea
xchg
jge
inc
hlt
sub
jb
xchg
push
sbb
or
and
outs
loop
div
pop
inc
(bad)
lods
mov
fs
ins
or
sbb
test
pop
and
mov
pop
xor
mov
lds
lods
dec
inc
sub
cmp
nop
push
adc
cmp
push
xor
or
pop
test
adc
sar
ret
les
xlat
inc
xchg
loopne
aas
pop
sub
pop
dec
cli
imul
sub
add
imul
aam
popa
add
xchg
add
mov
shl
jbe
sbb
jb
add
dec
push
(bad)
mov
adc
fcomp
lods
add
or
fadd
push
inc
sub
sbb
int
lods
addr16
inc
loop
neg
in
adc
data16
ins
or
jg
fld
imul
xor
jne
xor
xlat
or
mov
outs
cmp
fcomp
js
xor
jmp
loopne
sub
xchg
mov
add
push
inc
sbb
inc
jmp
leave
call
sbb
inc
xchg
rcl
add
mov
cmp
adc
jo
sbb
mov
call
loop
xchg
push
add
ins
adc
cmp
jnp
and
test
repnz
rcl
xchg
pop
sbb
dec
adc
jne
mov
and
or
xchg
ins
add
dec
mov
loop
sbb
xchg
push
inc
or
cmp
pushf
std
jo
(bad)
xor
repnz
in
mov
ffreep
push
dec
mov
push
sar
dec
pop
or
add
jae
add
jno
push
ja
sbb
fmul
mov
inc
cmp
pop
stos
mov
adc
mov
add
rcr
jp
cmp
fwait
xchg
jmp
ret
popf
pop
adc
rol
xor
inc
cmp
pop
int3
jae
ja
(bad)
mov
add
push
leave
jo
add
push
or
es
movs
pop
xchg
enter
ins
mov
pop
test
xchg
ss
push
pushf
sbb
fldenv
cld
cmp
sub
cli
xchg
adc
pop
push
and
mov
out
loopne
imul
sub
mov
retf
out
and
jmp
jmp
loopne
jns
lea
loope
cmp
xor
fs
scas
and
jne
sar
mov
sub
push
pop
pop
push
cmp
(bad)
jne
loope
(bad)
push
shl
push
cli
xor
xchg
movs
dec
and
xchg
add
out
jbe
inc
xlat
sbb
aaa
mov
add
shr
test
outs
jnp
out
xchg
xlat
inc
mov
jnp
sbb
pop
pushw
jne
or
cmp
jle
push
mov
je
cmp
mov
fwait
inc
mov
jmp
mov
or
scas
fcomp
in
ss
test
pop
and
lock
jnp
add
mov
(bad)
popf
xchg
sub
ror
jecxz
push
pop
sub
pop
mov
popa
xor
sub
mov
dec
sub
xor
test
or
mov
xor
or
out
mov
push
xor
mov
lods
rol
push
fwait
dec
test
ror
rcl
in
adc
and
push
fmulp
jne
dec
add
scas
movs
fidivr
fsubr
xor
popa
add
cwde
movs
cmp
and
pop
jno
int3
sbb
in
lds
jg
inc
pop
pop
test
xchg
jno
jne
dec
ss
inc
ficom
sbb
add
sbb
inc
in
and
dec
mov
hlt
add
popa
std
sub
bound
jbe
call
nop
and
add
mov
and
or
in
inc
xor
cmp
icebp
xor
or
jp
test
enter
shl
or
or
dec
movs
and
dec
int3
ja
dec
call
mov
and
xor
adc
popf
xchg
cmp
jmp
movs
test
sbb
inc
pop
mov
dec
add
cwde
(bad)
jmp
mov
sub
adc
xor
sub
sub
pushf
add
mov
mov
inc
cmp
mov
lea
mov
adc
jae
data16
fadd
add
std
gs
(bad)
xchg
test
xchg
test
rol
cmp
ret
imul
out
or
cmp
je
retf
push
sub
jo
inc
lea
lea
push
cmps
add
xor
dec
pop
cmp
aad
or
push
sub
cmp
or
or
cmp
push
xchg
lea
mov
inc
xchg
jns
les
cmp
loopne
push
fcmovb
test
mov
ror
inc
ret
mov
movs
test
mov
ja
and
add
push
inc
inc
push
jmp
lock
and
inc
sbb
pop
mov
cmps
inc
add
add
mov
cli
and
add
daa
retf
pop
(bad)
xchg
adc
xchg
popa
fsub
or
and
or
lock
mov
movs
pop
push
add
push
js
pop
popa
cmps
dec
jp
test
mov
rcr
mov
or
add
loope
add
xchg
add
arpl
or
mov
fdiv
inc
push
mov
(bad)
lds
inc
xchg
jg
sbb
xor
mov
loop
adc
or
mov
mov
loope
inc
fldenv
push
outs
cmp
mov
fnstenv
pop
inc
es
ret
fsub
jo
mov
lea
cmp
in
nop
ins
mov
jb
xchg
cmp
jns
pop
add
jg
movs
sbb
inc
inc
adc
sub
mov
push
cmp
rol
inc
bound
test
sar
scas
movs
mov
pop
dec
or
and
dec
pop
leave
mov
mov
push
or
sbb
sbb
or
xor
aas
xchg
aas
cld
movs
push
mov
aas
cmc
dec
hlt
cmp
push
rol
inc
xchg
push
xor
and
or
enter
mov
jmp
adc
mov
xchg
(bad)
shl
mov
dec
jg
and
and
test
cs
sbb
call
sbb
daa
xchg
cmp
not
jbe
and
push
push
cmp
fwait
scas
dec
lods
or
ficomp
mov
adc
cmp
rol
adc
or
mov
add
or
xor
push
jl
push
mov
jmp
sbb
cmp
jge
jmp
or
clc
mov
and
add
or
mov
hlt
mov
mov
jg
sub
iret
add
sub
fsub
loopne
cmp
and
jle
inc
push
push
or
sar
cli
cwde
jle
inc
dec
enter
pop
sbb
rol
push
push
cld
mov
xor
add
sbb
adc
sbb
std
jnp
dec
aam
pop
and
das
xchg
and
xchg
or
fucomi
mov
and
adc
aas
jne
ss
dec
mov
add
push
jge
lahf
mov
fdiv
or
cld
adc
cmp
retf
push
pop
mov
or
inc
add
sub
rol
ds
xor
popa
or
shl
xchg
aam
add
or
sbb
popa
pop
adc
push
lds
add
bound
inc
ficomp
add
rcl
fist
test
mov
and
pop
mov
adc
dec
in
push
add
popf
adc
adc
adc
xor
test
mov
push
pusha
pop
push
mov
leave
dec
nop
hlt
inc
or
cmps
push
push
xor
jge
test
push
inc
call
mov
push
out
sub
jmp
jmp
movs
movs
lods
pop
pop
dec
inc
add
add
dec
or
add
in
push
sub
pop
mov
mov
xlat
mov
mov
jl
sub
enter
fs
or
bound
adc
lock
and
neg
cmp
jbe
dec
loope
mov
shl
ret
sbb
dec
lods
mov
adc
rcl
fwait
in
push
push
in
hlt
jmp
fild
push
enter
xor
loope
ror
jge
push
xchg
int
fcom
aam
inc
xchg
dec
ror
adc
or
add
adc
test
mov
inc
cli
xor
iret
sbb
cmp
add
mov
ins
add
test
push
cdq
in
repnz
and
mov
mov
mov
dec
mov
push
mov
xchg
adc
lock
xor
sbb
cmp
clc
sub
push
push
jg
inc
fwait
les
add
(bad)
lds
sbb
sbb
push
adc
add
int3
sbb
pop
dec
frndint
push
xor
pusha
jmp
cld
or
adc
jmp
mov
mov
sub
inc
push
(bad)
and
hlt
mov
es
adc
adc
sub
and
xchg
in
fnsave
or
sbb
je
sub
inc
add
xchg
xor
add
(bad)
ds
xor
and
sbb
mov
or
mov
or
cmp
sub
adc
pop
add
xor
xchg
cwde
fmul
xchg
pusha
and
jae
xor
fiadd
neg
fnstenv
mov
enter
xchg
add
test
stos
or
xchg
mov
fwait
dec
out
bound
repnz
xchg
push
(bad)
adc
in
or
shr
xor
test
and
mov
xchg
xor
cmp
and
mov
push
mov
push
xchg
add
mov
xor
pop
(bad)
push
add
or
shl
push
mov
rol
test
sub
pop
add
cs
std
sbb
fdiv
stos
mov
xchg
cmp
pusha
dec
dec
inc
mov
push
ins
loope
rol
sbb
rcl
loop
add
and
mov
test
sbb
lahf
or
xor
sbb
dec
push
cmp
push
std
hlt
fs
mov
cmp
mov
cmp
cmps
pop
and
pop
mov
push
retf
inc
add
sub
ds
repnz
cmp
jp
inc
ins
loopne
retf
mov
(bad)
std
jno
xchg
jno
sbb
hlt
push
add
rcr
fld
jb
jne
add
sub
push
fs
add
adc
add
sub
or
and
sbb
hlt
xlat
sbb
and
enter
and
xor
stc
cs
dec
dec
movs
xchg
retf
in
nop
xchg
cwde
add
mov
xchg
push
out
or
mov
repnz
pop
cmp
lods
jbe
mov
into
out
sti
mov
cmp
int3
das
xchg
push
enter
pop
fistp
or
push
pop
jns
jno
out
pusha
or
or
inc
ficom
sbb
add
xor
sub
mov
mov
mov
repnz
xchg
add
sbb
lahf
add
in
add
sbb
mov
sub
push
lods
jno
xlat
xor
cmp
lods
scas
add
dec
sbb
mov
mov
(bad)
lea
retf
mov
add
or
xor
loopne
cmp
inc
loope
xchg
mov
push
adc
into
loope
fwait
adc
hlt
pop
cmp
and
das
out
xchg
movs
addr16
sub
cmp
add
mov
lea
rol
and
ror
inc
push
sbb
dec
jb
loopne
push
cmp
xchg
pop
enter
and
xor
(bad)
loopne
pusha
lods
xchg
loop
sub
dec
test
fcom
or
xchg
jb
pop
sbb
add
int3
leave
dec
ret
test
mov
push
add
add
push
cmp
cvtdq2ps
lods
dec
xor
add
imul
sahf
pop
cmp
pusha
rol
add
add
or
inc
ret
add
scas
or
adc
or
push
gs
add
dec
and
lock
mov
mov
xchg
adc
movs
mov
xchg
stc
lahf
sub
adc
mov
pop
cmp
pop
pop
push
add
movs
dec
sub
jge
js
fild
xchg
adc
scas
rep
popf
ss
pop
in
add
xor
sti
imul
sbb
adc
or
sub
pop
mov
pop
cmp
test
cmc
pushf
add
inc
enter
xchg
add
arpl
gs
xchg
pop
mov
je
aaa
xchg
loope
add
dec
inc
push
mov
(bad)
movs
adc
sub
dec
mov
and
cmp
add
(bad)
jl
sub
das
adc
(bad)
pop
das
jl
or
add
hlt
or
jne
clc
(bad)
imul
inc
or
push
(bad)
add
neg
retf
xchg
add
pop
mov
mov
xor
push
jae
in
xor
ja
add
ss
inc
call
xor
popf
add
jg
rcl
(bad)
or
xor
retf
popf
add
imul
jb
mov
ins
loopne
retf
in
dec
push
mov
xor
dec
add
pusha
sub
es
fcmovnb
pop
add
(bad)
push
mov
les
test
std
cmp
push
retf
sbb
rcr
inc
(bad)
jge
dec
jno
lea
dec
pop
mov
jmp
nop
add
adc
jnp
iret
retf
and
cli
test
and
call
pop
pop
clc
inc
cmp
in
xchg
inc
cmps
test
add
or
mov
dec
imul
movs
xchg
dec
push
push
ins
jle
add
xchg
mov
push
mov
ror
pushf
xor
mov
pop
sbb
pop
add
jae
inc
cmps
sahf
pop
ins
mov
jnp
fnstenv
inc
jmp
xchg
pop
stos
sub
(bad)
retf
ret
or
js
sbb
inc
sbb
imul
pop
adc
mov
(bad)
adc
pop
shl
push
imul
sbb
jne
pop
and
imul
pop
jno
mul
sub
inc
clc
add
nop
inc
jle
sbb
aaa
cmp
or
sub
leave
mov
xchg
or
xor
(bad)
sub
aam
retf
push
retf
imul
push
pop
in
lods
jmp
rcl
adc
jp
push
bound
push
mov
push
xchg
xchg
cmp
dec
mov
inc
fcmovb
dec
add
inc
adc
mov
or
add
adc
cmp
xchg
sub
sub
lds
mov
jne
cmps
or
shl
test
cmp
sbb
xchg
jae
sub
mov
push
or
xchg
jl
(bad)
and
xor
jmp
and
not
lea
and
mov
retf
lea
lahf
clc
adc
sub
push
pop
add
dec
and
mov
cmp
sbb
ret
add
inc
ds
lds
scas
inc
push
lea
pop
dec
loop
mov
sbb
popa
jmp
je
sbb
lock
mov
and
js
popf
ja
popa
jo
mov
adc
stos
scas
or
or
enter
pop
jae
ss
xchg
add
loopne
or
push
jl
pop
cmp
iret
cli
lds
popf
loopne
sbb
cmp
rcr
push
jmp
adc
ja
call
test
out
icebp
mov
xchg
(bad)
fst
xchg
sti
lea
pop
xchg
test
xchg
lahf
cmp
adc
jne
xchg
push
rcr
ins
mov
xchg
shl
test
or
push
add
inc
pop
and
aas
or
sub
xchg
shl
cmp
mov
cmp
js
xor
cmovno
cmp
rol
adc
jno
pop
xor
outs
push
or
xchg
or
sub
mov
nop
iret
xchg
pop
pusha
add
inc
outs
sub
push
in
and
xor
aam
movs
ins
dec
popa
mov
gs
mov
push
and
add
push
sar
add
seto
adc
into
rcr
and
shl
test
or
std
mov
stos
pop
adc
mov
cs
test
and
adc
jmp
inc
fcom
int3
add
into
inc
enter
add
inc
int3
cdq
add
sbb
add
fisub
into
sar
mov
test
enter
xlat
or
dec
les
xor
aam
add
adc
cdq
dec
pusha
pop
fimul
aaa
xor
and
hlt
pop
sar
dec
or
inc
mov
fcom
adc
and
ret
dec
mov
pop
(bad)
push
es
cmps
mov
dec
test
mov
test
shr
test
or
pop
ss
jnp
adc
add
dec
addr16
and
fadd
cmp
sub
mov
pop
add
and
xchg
fsub
inc
inc
adc
xor
fxch
test
mov
les
sbb
and
or
xchg
aad
pusha
inc
push
js
fisttp
push
pushf
inc
bound
les
add
ret
test
lods
push
call
sbb
sbb
out
sbb
enter
jmp
sub
add
retf
push
scas
mov
inc
cmp
or
daa
mov
mov
mov
xor
mov
add
adc
jmp
lods
leave
shr
sub
push
(bad)
xchg
(bad)
sub
sbb
lea
adc
sub
mov
adc
jmp
inc
jmp
xchg
les
sbb
(bad)
dec
and
or
xchg
adc
mov
or
mov
adc
add
jae
nop
or
sbb
xor
ror
mov
fmul
push
movs
push
shl
xor
push
test
or
xchg
xchg
out
movs
pusha
adc
movs
adc
cs
cmp
pop
nop
xchg
or
mov
call
and
addr16
or
push
aad
add
lods
les
shl
lods
pusha
out
sbb
jmp
push
pushf
mov
cdq
push
xchg
rol
sbb
and
clc
mov
test
lods
dec
cmc
push
push
and
adc
test
sbb
sbb
(bad)
daa
sub
test
push
push
add
xchg
aam
sbb
leave
push
mov
inc
bound
adc
sbb
and
bound
adc
js
or
push
ret
jnp
push
or
ins
push
xor
in
add
jbe
lods
inc
add
hlt
or
add
and
or
sub
aam
adc
test
push
mov
repz
fwait
sbb
movs
fistp
add
rcl
mov
cmp
hlt
dec
call
leave
pop
mov
mov
aas
lahf
and
jmp
lods
cmps
push
adc
pusha
ror
push
or
add
cmp
and
and
jo
fs
call
lahf
dec
mov
sub
pop
mov
call
xor
popa
inc
dec
push
adc
stos
cld
mov
call
rcl
(bad)
jo
sub
pop
test
mov
jmp
sar
inc
leave
mov
dec
movs
pop
xchg
mov
aas
jmp
das
sbb
sub
es
ja
cld
adc
sbb
push
test
adc
or
push
leave
and
test
cwde
aad
shl
xor
scas
mov
pop
inc
adc
xor
and
cli
imul
add
dec
sub
xchg
jecxz
dec
mov
rol
repz
dec
adc
xor
xor
js
(bad)
xor
inc
adc
or
push
mov
arpl
(bad)
mov
sub
out
mov
repz
lods
sub
adc
push
add
fucom
or
sub
push
or
adc
rcl
shr
push
xchg
lods
add
rol
(bad)
daa
call
or
sbb
popa
sbb
xor
loopne
call
dec
sub
add
test
or
mov
sub
add
cmps
mov
mov
pop
mov
mov
sbb
cmp
xchg
and
mov
mov
into
or
scas
ret
lods
push
mov
or
mov
sub
loopne
sbb
ins
jb
add
fs
add
mov
or
shr
add
add
mov
jb
push
push
sub
push
das
add
scas
retf
mov
retf
shr
or
imul
cmp
jge
sub
inc
adc
les
mov
das
loopne
mov
test
xor
sbb
jg
mov
or
mov
add
dec
(bad)
jl
xchg
add
and
stc
imul
adc
pop
in
int
iret
xchg
repnz
push
int
push
jmp
cmp
ins
sub
pop
mov
inc
fmul
in
adc
sbb
pop
xor
cmp
or
jge
in
test
out
stos
sbb
xor
inc
mov
adc
daa
movs
cmp
imul
push
push
je
mov
adc
stc
pop
mov
sbb
and
dec
(bad)
loope
dec
in
inc
dec
rcl
fbld
shr
stos
xor
or
(bad)
(bad)
lea
mov
fst
add
add
movs
cld
int3
mov
lods
daa
and
mov
fcom
mov
sbb
pop
scas
cdq
outs
xor
mov
dec
push
and
push
sar
cmps
jg
and
aaa
loope
sbb
retf
jb
mov
cmp
lods
and
xor
outs
xchg
mov
inc
or
push
dec
cld
mov
out
mov
lea
pop
mov
popf
pop
cmps
add
test
push
push
test
adc
sub
fldl2t
xchg
push
fwait
icebp
test
add
sbb
add
push
stos
shr
iret
lods
push
mov
sub
jne
cld
mov
and
pop
push
cmp
mov
xchg
push
add
or
getsec
push
xchg
nop
or
or
jmp
(bad)
sti
rol
push
add
fdivr
dec
(bad)
pop
sbb
mov
jae
or
mov
dec
imul
push
pusha
ins
push
or
dec
ins
shl
push
cmps
adc
fs
gs
je
sub
xor
mov
cmp
xchg
add
sbb
dec
mov
adc
test
add
mov
add
pop
mov
jb
or
std
ret
xchg
dec
movs
sub
sub
cmp
mov
cmp
add
dec
jne
push
xchg
mov
add
adc
cmp
push
push
mov
leave
push
or
push
or
popf
inc
test
popf
or
popa
jo
fisubr
mov
cwde
pop
xchg
pusha
sub
mov
or
mov
add
sub
jecxz
pop
pop
fcmovu
lahf
pop
mov
dec
loopne
daa
add
push
xchg
sub
rol
lods
popf
jmp
xchg
or
mov
push
xchg
and
ss
idiv
outs
mov
adc
lds
leave
fsubr
and
ins
repz
dec
test
cwde
mov
add
push
inc
les
push
(bad)
adc
ret
push
add
cdq
clc
pcmpgtw
mov
pop
js
mov
retf
and
push
pop
aas
adc
xchg
pop
shl
push
fcomp
adc
test
call
and
mov
xor
mov
pusha
inc
sub
or
add
xchg
js
push
ret
int
xchg
xor
sbb
sub
ja
mul
fsubr
xchg
lods
mov
sar
out
xchg
push
loop
enter
mov
mov
and
arpl
or
xor
xchg
dec
xchg
test
or
movs
add
pop
or
or
adc
xchg
into
xor
push
inc
test
cmp
sbb
mov
mov
mov
call
sub
cdq
add
idiv
and
ror
div
sahf
sahf
mov
dec
and
inc
inc
cwde
je
jae
fsub
dec
push
je
dec
into
cmp
sbb
or
test
dec
xor
cs
push
xor
ss
jle
mov
mov
repz
jbe
cmp
jge
and
mov
adc
dec
and
je
xchg
nop
cdq
jbe
add
pop
outs
and
dec
xor
test
aam
shl
or
(bad)
add
mov
ja
test
ins
inc
ds
adc
mov
inc
and
cmp
in
sub
fadd
dec
dec
stc
jne
push
(bad)
or
fdivr
sub
jmp
inc
or
add
in
movs
sub
icebp
pop
adc
adc
add
add
cmc
or
inc
aam
test
ret
add
sbb
je
in
dec
mov
mov
push
aas
mov
dec
test
fld
fst
adc
pop
sub
adc
stos
adc
add
jmp
add
xor
jmp
and
leave
lock
fiadd
or
lods
imul
out
movs
mov
inc
stos
popa
sub
hlt
cdq
loope
stos
dec
mov
xchg
xchg
fs
cmp
fst
push
xlat
and
inc
pop
sbb
pusha
add
and
mov
lahf
nop
cdq
in
hlt
lock
jno
fmul
push
inc
mov
and
push
push
push
jp
jp
loop
(bad)
jmp
push
or
cld
pusha
aam
es
push
lock
xor
jl
pop
cs
or
or
(bad)
(bad)
(bad)
data16
repz
sub
push
pop
sub
or
js
popa
or
sbb
or
sub
xor
and
push
addr16
mov
and
stos
push
setge
sub
push
sub
cmp
jle
shl
outs
pop
inc
add
xlat
retf
xlat
adc
mov
xor
adc
xor
inc
ss
or
jg
sbb
jbe
popf
sub
cld
sti
push
jmp
push
cmp
loopne
xor
mov
add
push
nop
lahf
adc
sar
in
xchg
pushf
dec
add
sub
push
sahf
and
jns
mov
leave
or
fadd
loopne
xchg
shr
test
jge
or
and
pop
icebp
sbb
and
cmp
inc
add
mov
pop
pop
mov
(bad)
shl
jb
sbb
enter
fiadd
pop
int3
or
scas
pop
iret
movs
ror
shr
test
rcl
mov
inc
inc
das
xor
pop
popa
inc
sbb
mov
call
das
call
cmp
retf
adc
add
sbb
or
jmp
push
daa
add
lock
dec
and
inc
sub
mov
fldenv
(bad)
mov
rcl
adc
ds
adc
pop
adc
iret
xchg
push
adc
pop
mov
in
shl
in
inc
adc
aad
jmp
mov
inc
loopne
int3
sbb
mov
pop
test
nop
arpl
sbb
stos
enter
ror
or
mov
mov
dec
push
xchg
sbb
(bad)
pop
or
or
or
seto
xchg
add
dec
and
ds
and
nop
xchg
mov
inc
mov
push
sbb
xlat
pop
add
fld
test
mov
dec
add
sbb
mov
inc
icebp
jne
cmc
or
cwde
cmps
jp
pop
sbb
xchg
xchg
ret
or
push
mov
add
sahf
cwde
sbb
das
cwde
inc
in
add
(bad)
xchg
lea
imul
out
or
arpl
push
sbb
or
add
leave
aad
sub
jle
aam
cld
inc
adc
or
repnz
gs
pusha
jmp
pop
aas
jle
dec
xchg
stc
bound
sbb
xchg
ret
add
push
cmp
ret
sbb
shl
push
mov
movs
pushf
inc
lds
push
fimul
aam
fmul
popa
ret
retf
mov
push
xchg
mov
xlat
add
dec
in
lahf
(bad)
hlt
or
or
sahf
ret
mov
cli
jp
and
and
mov
sbb
push
mov
or
outs
mov
add
mov
and
jge
xor
xor
jne
mov
pop
mov
sub
shr
dec
retf
add
jo
fist
cmp
test
iret
push
cmovb
je
sub
imul
cmps
xchg
neg
shl
hlt
hlt
inc
popa
xor
inc
add
add
je
push
pop
rol
sbb
xlat
mov
push
jg
(bad)
mov
fmul
mov
or
sbb
pop
add
inc
fcmove
sub
pop
inc
dec
outs
jae
pop
adc
mov
xchg
rol
sbb
add
sub
jmp
cmp
fmul
jb
mov
mov
loope
rol
sbb
adc
and
pop
and
int
lods
mov
jb
jns
mov
pop
(bad)
sub
cdq
aam
lds
dec
or
pop
xchg
leave
(bad)
sti
or
sub
dec
out
jae
rol
mov
test
popa
sbb
or
or
or
scas
out
popa
or
rcr
push
sbb
mov
push
cmps
int3
pop
cmps
inc
add
ret
inc
in
lods
lods
iret
add
mov
add
stos
arpl
shl
movs
sbb
sbb
ds
or
add
in
inc
xchg
xadd
and
add
and
jnp
adc
push
and
shl
shr
dec
sub
sbb
pop
and
mov
inc
les
jo
sbb
rol
js
lahf
aam
mov
ss
fsubr
and
in
xchg
ins
adc
ret
and
pop
(bad)
scas
jp
push
or
mov
lahf
adc
add
xchg
or
add
pop
sbb
pop
mov
pop
xlat
xchg
adc
push
adc
push
sub
pop
loope
cmp
popa
add
push
push
add
les
and
mov
mov
setbe
mov
or
call
and
imul
push
jmp
shr
mov
ja
jp
add
add
mov
sbb
push
and
outs
fld
jno
add
cdq
cmps
jae
les
jo
lea
nop
iret
popf
les
outs
ret
sub
add
rcr
mov
pop
ficomp
sub
sbb
push
mov
push
(bad)
pop
popa
fs
in
adc
or
or
push
add
lds
sub
push
mov
arpl
in
cmps
popa
sar
or
sub
inc
imul
movs
pop
sbb
mov
pusha
mov
cmp
or
pop
sub
adc
mov
or
jne
inc
imul
inc
add
mov
adc
pop
sub
adc
and
push
cmp
push
inc
pusha
add
js
popf
dec
inc
mov
add
adc
dec
and
fiadd
daa
inc
or
pop
sbb
push
add
push
jge
lahf
or
jge
ret
into
push
mov
push
adc
loop
mov
rol
imul
mov
sar
lods
mov
test
jecxz
or
je
cmp
jae
add
fstp
dec
jecxz
cmp
jne
mov
inc
gs
push
push
fdiv
inc
shr
jne
sbb
outs
add
pop
or
jb
cmp
jmp
or
jbe
cmp
inc
or
call
icebp
div
repz
pop
(bad)
arpl
inc
hlt
cld
(bad)
das
add
out
pusha
mov
jle
pop
mov
mov
test
mov
pop
retf
dec
sbb
sbb
sub
add
push
aaa
pop
sbb
push
ror
inc
adc
add
adc
push
inc
jmp
das
cdq
adc
dec
cmc
imul
nop
dec
mov
pop
cs
pop
pop
jb
adc
add
fcom
adc
out
inc
hlt
sub
jmp
data16
sbb
movsx
sub
ins
xor
aas
jg
lea
rol
cdq
adc
pop
sbb
dec
frstor
and
push
dec
pop
push
xchg
pop
fcomp
add
push
icebp
or
cs
inc
push
mov
or
nop
movs
pop
push
adc
arpl
mov
pop
dec
add
inc
retf
and
sub
mov
fcom
sub
and
les
or
xor
push
xchg
push
sub
add
sub
mov
or
dec
bound
and
push
lea
xchg
sbb
add
add
out
add
stos
mov
lock
outs
adc
add
lea
pop
jbe
ret
or
dec
cmp
test
or
bound
pop
dec
aam
pop
gs
or
cmc
dec
call
inc
jl
mov
inc
or
inc
pusha
adc
jecxz
dec
jno
test
add
pop
adc
cwde
in
dec
push
mov
out
push
add
loope
adc
data16
jo
dec
cmc
cmp
xor
xchg
mov
sbb
push
enter
sbb
cmp
loop
mov
xor
push
jecxz
shr
mov
or
add
retf
lock
add
loopne
jmp
cmc
retf
add
xor
lea
lea
push
xor
jo
jp
(bad)
rol
invd
mov
cmp
mov
xor
adc
xchg
push
pop
mov
test
pop
in
fcom
and
fdivr
ret
pusha
inc
bnd
push
inc
mov
adc
xlat
push
dec
mov
mov
pop
cmp
jno
shr
cdq
ror
add
test
xor
ret
loopne
rcl
push
shl
or
adc
and
outs
push
les
ss
cld
push
push
adc
cmp
push
cmp
inc
push
(bad)
or
sbb
addr16
aam
push
(bad)
dec
sti
jbe
ja
jno
jae
and
push
jne
aaa
push
aas
cmp
mov
into
xchg
adc
test
sbb
sub
iret
shl
repz
call
sbb
lods
imul
pop
xor
fld
push
shl
cmps
adc
jno
xor
into
cmps
cmp
clc
jno
gs
xchg
test
shl
mov
push
cwde
cmp
push
sub
mov
inc
test
push
pop
pop
sub
shl
adc
adc
mov
retf
sbb
out
sub
fisub
push
sub
mov
mov
inc
(bad)
or
loop
dec
cmp
pop
dec
fild
or
ins
dec
inc
aaa
shl
add
fldenv
jae
loope
inc
jno
or
or
ret
rcl
and
or
retf
push
inc
or
add
adc
mov
call
adc
ins
and
fwait
dec
sbb
(bad)
rol
dec
xchg
pop
mov
in
jbe
sbb
or
adc
and
and
adc
and
push
mov
inc
shl
cvtps2pd
mov
add
and
xchg
sub
push
scas
ins
and
ficom
cmp
fwait
rcl
push
mov
push
jns
push
in
ror
in
push
fcomp
(bad)
sbb
push
lods
adc
sub
test
ret
xchg
jne
sbb
dec
lods
arpl
sbb
dec
imul
dec
sbb
jle
pop
push
ret
mov
xor
sub
outs
rol
into
push
inc
pop
cmp
and
int
push
int3
mov
jnp
cli
(bad)
adc
dec
adc
push
imul
adc
push
xchg
push
(bad)
xchg
dec
fcom
dec
mov
inc
sbb
push
inc
inc
ds
rcl
mov
movs
mov
adc
scas
or
dec
sbb
xchg
push
retf
and
or
or
mov
push
dec
psubq
jge
imul
or
inc
imul
loopne
sbb
dec
dec
rcr
adc
shl
inc
mov
es
mov
rol
inc
mov
cmps
push
inc
jne
jae
sub
fsub
test
or
sub
push
mov
and
fmul
and
xor
dec
xchg
dec
add
shl
or
rcl
or
or
sbb
(bad)
into
adc
retf
xchg
add
cmp
loope
cmps
loopne
sbb
inc
sbb
loopne
mov
ja
jg
movs
imul
lods
dec
sbb
pop
(bad)
inc
mov
pop
mov
push
push
mov
imul
pop
sbb
retf
or
ret
sub
sbb
cmp
xlat
xchg
mov
and
gs
mov
ds
jmp
dec
dec
dec
xchg
cmps
sbb
xor
cmps
ins
cmp
push
aaa
das
sahf
ss
rcl
or
add
sahf
and
mov
mov
stos
aaa
adc
into
mov
ror
adc
push
or
movs
mov
cmp
(bad)
jnp
cwde
shr
xor
in
(bad)
mov
and
adc
cli
push
mul
addr16
movs
int
push
mov
xor
push
jge
and
loop
lahf
enter
cmp
test
retf
repnz
mov
ss
sbb
mov
or
xor
pop
fdiv
bound
mov
push
jne
pop
or
lahf
push
leave
call
mov
cmp
sub
sbb
cmp
inc
(bad)
ret
rol
call
clc
ret
jmp
fstp
or
or
add
or
fs
sbb
mov
inc
inc
sub
adc
xor
or
mov
ror
pop
cmp
or
mov
pop
sbb
aaa
pusha
push
push
adc
mov
add
push
inc
and
mov
shl
ins
call
and
bound
push
xlat
add
xor
nop
lock
dec
jecxz
and
not
mov
sub
dec
mov
inc
fadd
sub
sub
or
sbb
mov
jl
jno
inc
and
test
jo
movs
xchg
pop
repnz
sbb
js
adc
push
adc
clc
je
mov
pop
or
dec
(bad)
test
mov
sbb
iret
add
adc
test
adc
rcr
jecxz
add
mov
inc
sub
test
mov
xchg
shl
pop
xchg
sbb
popa
mul
cmp
add
imul
push
les
fidiv
sub
add
adc
pop
and
inc
jmp
xor
pop
lock
inc
inc
sbb
movs
fstp
fnstenv
outs
aaa
test
mov
push
mov
adc
cmps
std
mov
stos
mov
push
mov
add
pushf
xchg
xchg
or
dec
adc
neg
adc
mov
inc
mov
ins
push
lods
add
adc
pop
in
add
ins
add
pusha
lea
xor
mov
and
popf
adc
pushf
jmp
or
and
cmp
ss
mov
adc
imul
xlat
dec
cdq
fsub
clc
ins
pusha
test
hlt
pop
and
sub
xor
sub
aaa
clc
cmp
cmp
pop
std
and
inc
daa
inc
push
rol
sbb
into
push
popa
mov
test
pop
ret
jp
sub
ins
push
and
push
or
ror
rcl
sub
lock
les
cdq
cmp
shr
dec
and
inc
mov
adc
cmp
adc
popf
imul
push
lods
dec
nop
pop
xor
ins
and
pop
pop
mov
inc
stos
mov
push
push
loopne
add
xchg
scas
(bad)
or
push
mov
dec
loop
aad
push
cmps
pop
inc
push
stc
inc
ins
pop
mov
push
and
cs
scas
adc
xor
aam
xchg
cmps
adc
mov
pusha
retf
retf
or
xchg
or
mov
cmp
add
cmc
add
mov
inc
stos
jae
retf
and
js
ret
test
inc
sub
mov
lods
push
pop
mov
push
retf
mov
push
scas
(bad)
xor
or
push
stc
push
dec
mov
jno
pop
lea
imul
imul
je
cmc
shl
movhps
or
gs
xchg
adc
mov
add
rol
js
dec
push
rcr
mov
add
push
lods
inc
cmp
mov
mov
mov
and
inc
repz
add
mov
sbb
cmp
(bad)
mov
mov
adc
dec
adc
xchg
outs
mov
mov
inc
test
test
mov
call
sub
and
inc
test
aad
rcl
call
popf
or
sub
xchg
push
fnstcw
fwait
xchg
test
mov
mov
fs
cmp
xchg
sbb
rcl
inc
mov
aaa
icebp
push
test
mov
scas
jp
sahf
xchg
sbb
and
or
ss
sub
add
sbb
and
das
lahf
add
pop
dec
pop
nop
pop
xor
mov
lods
shl
sbb
lea
mov
jne
fcomp
cld
mov
fdivr
xor
add
xchg
mov
lods
out
ret
mov
xor
add
adc
test
or
jecxz
lds
and
xchg
inc
cdq
add
pop
push
jo
or
push
add
cwde
ret
xchg
inc
mov
inc
fadd
sahf
dec
in
rcl
dec
jecxz
int3
mov
add
inc
gs
pop
popf
movs
inc
cs
fdiv
aad
test
fidivr
fwait
xor
mov
out
(bad)
or
inc
jecxz
cmps
and
xchg
xchg
push
xchg
test
or
mov
imul
out
xchg
sbb
inc
push
cmp
test
xor
or
aad
adc
mov
add
clc
cmp
pop
sbb
pop
inc
call
inc
adc
xor
repz
sbb
fcomp
fdiv
les
xor
and
(bad)
rol
pushf
cmp
inc
ficomp
call
cwde
mov
or
inc
rol
dec
or
and
pop
sub
dec
js
jmp
sti
les
lahf
popa
pop
jo
movs
push
bound
bound
icebp
add
aaa
lock
inc
xor
adc
push
xor
push
ret
push
adc
push
das
inc
inc
ret
rcr
ret
push
add
push
(bad)
test
scas
ficomp
push
adc
mov
ja
jnp
gs
add
add
push
or
loopne
and
jl
jl
inc
stos
or
and
dec
lock
xor
pop
push
or
cmp
dec
xchg
aad
rcr
push
mov
lods
sbb
jo
dec
rol
or
mov
clc
push
xor
out
je
and
sub
scas
imul
push
sub
adc
jne
mov
(bad)
test
jb
rcr
inc
pop
test
or
add
arpl
aaa
push
xor
mov
jg
lea
fldenv
aaa
push
and
sbb
inc
mov
add
push
xchg
adc
or
or
push
test
nop
mov
jge
jmp
mov
frstpm(287
fnstsw
loopne
outs
scas
adc
loopne
fs
mov
pop
or
in
mov
(bad)
sahf
push
adc
pop
dec
mov
xchg
jns
mov
inc
lock
fild
or
aam
sbb
xor
push
jecxz
ret
inc
rol
mov
add
sbb
sub
pop
(bad)
jo
inc
gs
pop
add
in
pop
add
xor
sub
loopne
adc
mov
repnz
ds
inc
(bad)
mov
adc
leave
and
push
test
add
jo
shl
xchg
sbb
push
ds
adc
mov
test
push
push
xor
pop
test
or
into
xchg
pop
call
push
lods
cmp
test
mov
jno
retf
lea
sbb
out
inc
add
push
jge
aam
or
movs
add
pop
or
mov
cs
sbb
and
add
lock
push
nop
cmp
and
sub
push
repnz
cmovl
sbb
jne
xor
aaa
or
jno
scas
mov
sbb
cmp
jmp
pop
inc
sahf
sbb
clc
outs
inc
push
in
mov
into
dec
and
enter
adc
jle
test
add
enter
shl
pop
out
test
aas
mov
bound
sub
inc
push
or
add
add
adc
push
xchg
inc
dec
or
loope
adc
mov
xchg
xor
dec
add
ret
adc
mov
ret
or
xchg
and
add
loop
movs
inc
(bad)
stos
mov
or
sbb
les
pop
dec
shl
sub
test
or
jmp
inc
adc
jne
pop
cmp
retf
adc
pop
dec
dec
dec
and
(bad)
xor
int3
cdq
nop
push
adc
sub
mov
pushf
je
dec
mov
pop
es
dec
pop
cmp
les
shl
xchg
mov
fs
call
fs
jb
js
pusha
pop
and
mov
sub
mov
adc
push
jo
jmp
aad
adc
cmc
outs
sub
cmp
rcr
enter
inc
mov
jne
clc
test
std
and
and
imul
fwait
lahf
sub
adc
ds
or
es
jle
mov
sub
inc
jge
ja
and
add
push
pop
and
jp
push
and
mov
cmp
and
les
add
cmp
push
mov
clc
and
inc
lea
lea
aad
mov
inc
lods
adc
or
jo
inc
sub
pop
inc
xchg
nop
outs
sub
ds
xor
jns
cmp
sub
(bad)
retf
les
dec
mov
pop
fstp
or
lahf
or
loop
add
nop
aaa
jne
adc
jmp
retf
mov
loopne
les
dec
adc
xchg
ret
add
pusha
dec
mov
add
mov
lds
cmp
(bad)
imul
push
xor
nop
xlat
inc
cmp
pushf
bound
xchg
fldcw
je
dec
push
test
and
xchg
jle
mov
ss
add
push
mov
inc
fnsave
and
mov
or
dec
cmp
ror
push
das
sti
xor
sbb
push
retf
scas
leave
add
cdq
sbb
push
xchg
xor
or
jmp
pop
dec
js
stos
loopne
cmp
adc
or
or
stos
push
mov
or
scas
push
push
xchg
popa
sub
push
or
fisttp
test
push
push
mov
jne
cmp
jae
mov
sahf
sub
pop
ret
data16
xor
sbb
fdiv
push
mov
sub
push
xor
sbb
stos
adc
push
mov
xchg
lods
xor
cvttps2pi
sub
dec
mov
and
clc
mov
ds
add
es
loopne
pop
loope
cmps
mov
hlt
test
push
add
or
or
jle
sub
add
cmp
cmp
pushf
jno
push
mov
sub
clc
fcmovnb
or
add
mov
mov
cmp
in
dec
rol
sbb
out
shl
or
imul
mov
xchg
outs
call
mov
jmp
shl
inc
cmp
dec
stos
movs
addr16
sub
adc
repz
push
pushf
and
jae
cmps
jne
pop
dec
sbb
shl
and
or
xor
or
es
loop
xchg
iret
xlat
sub
aas
cdq
xchg
push
mov
jne
push
push
in
inc
adc
push
shr
jae
ins
adc
inc
sahf
enter
pop
cmps
push
mov
fld
pusha
or
jmp
inc
movs
dec
add
pop
push
mov
xchg
popa
dec
dec
pop
xchg
and
or
fcmovb
sub
scas
cmps
test
aas
mov
imul
cs
(bad)
adc
mov
nop
dec
ss
gs
pop
pop
pop
or
loope
out
mov
dec
cmp
adc
sbb
add
push
movs
mov
xor
add
xor
clc
cmps
add
daa
cmp
sahf
jns
add
add
arpl
fisub
dec
cmc
inc
dec
popf
jne
fdivr
enter
xchg
cmp
rol
push
xchg
(bad)
ja
or
test
rol
pop
push
pop
jp
dec
inc
add
cmp
or
add
std
fwait
dec
adc
ret
xor
std
or
inc
dec
adc
nop
mov
inc
sete
push
push
pop
inc
xchg
xchg
cmp
cs
add
jbe
ins
pushf
add
xor
or
jo
loopne
xor
xchg
pop
and
inc
mov
mov
dec
popf
sub
xchg
add
pop
or
mov
or
sub
adc
je
mov
sub
mov
sbb
sub
mov
mov
dec
push
push
inc
add
in
add
or
movs
loope
int3
sbb
inc
div
pop
jl
inc
mov
and
dec
out
sub
mov
jae
jbe
call
mov
or
mov
adc
add
sbb
sbb
retf
mov
cmp
add
arpl
add
fiadd
sub
adc
stos
and
xor
add
jmp
jp
or
sub
enter
cld
and
les
push
ins
out
outs
push
fdiv
add
mov
jno
push
sub
daa
sbb
adc
sbb
mov
stc
add
fbld
inc
fadd
pop
dec
lods
sub
imul
sar
and
out
xor
fwait
test
push
add
add
neg
add
adc
gs
xchg
test
adc
pop
nop
adc
pop
adc
pop
cs
jb
sub
or
pop
fstp
cmps
jb
sub
and
rcr
ss
adc
dec
add
pop
loopne
ins
btc
xor
xor
dec
addr16
jmp
lds
or
cmp
dec
push
dec
add
cmp
adc
hlt
movs
retf
or
or
mov
adc
shl
dec
hlt
in
sbb
or
retf
mov
add
leave
dec
push
push
add
and
adc
mov
mov
and
dec
or
dec
push
icebp
das
or
cdq
cmp
or
sbb
aas
ficom
xchg
jmp
sub
dec
add
xchg
fwait
mov
sbb
and
inc
iret
sbb
jnp
cmps
mov
pop
jnp
lock
add
mov
jg
imul
cmps
test
movs
adc
adc
sar
mov
adc
dec
sub
jge
ins
pop
daa
or
test
pusha
stc
push
sub
adc
mov
jnp
xchg
push
iret
push
xor
jge
shl
inc
hlt
jae
xchg
jbe
dec
add
add
pushf
aam
and
pop
add
jmp
adc
ror
and
das
adc
jle
lods
dec
xchg
shl
inc
fadd
push
push
addr16
fnsave
cmc
test
imul
sbb
leave
mov
das
add
jge
lock
cmp
div
adc
and
push
sbb
and
or
jae
dec
mov
jle
xor
or
or
and
repz
(bad)
or
jl
xor
and
add
scas
int
mov
shl
xor
repnz
and
and
aad
adc
push
dec
jl
cdq
add
inc
jae
fcom
hlt
(bad)
int3
ret
gs
nop
ret
mov
sub
bound
pop
mov
adc
inc
mov
fstp
sub
rcl
jl
aam
iret
add
enter
movs
jmp
dec
mov
ins
inc
jns
or
mov
scas
cmp
xor
dec
clc
add
in
and
fbld
dec
(bad)
out
sar
dec
cmp
cmp
scas
add
sbb
inc
into
sbb
mov
inc
push
aam
out
iret
retf
inc
mov
mov
xchg
and
mov
sub
mov
add
and
pushf
stos
cld
sub
std
or
loop
mov
jecxz
mov
xchg
push
shr
(bad)
adc
call
and
xlat
xchg
jo
mov
aas
push
nop
ret
and
fwait
inc
or
dec
jns
dec
and
sbb
sbb
push
add
popa
loope
mov
mov
mov
mov
dec
mov
cs
repnz
mov
test
and
push
push
cdq
rcl
adc
aam
mov
lea
icebp
adc
and
and
xor
mov
push
scas
mov
jp
jmp
inc
push
jmp
or
sbb
hlt
push
add
mov
push
and
fild
add
jne
dec
push
adc
inc
popa
mov
push
dec
mov
sub
add
fcomip
test
iret
aas
jne
ss
test
jbe
inc
mov
test
mov
out
test
add
sbb
test
jo
and
add
popa
ins
add
loop
xor
inc
cmp
inc
mov
sub
retf
and
inc
push
std
jge
jge
ror
arpl
dec
dec
mov
cmp
daa
dec
pop
inc
sub
cmp
mov
cmp
(bad)
jno
jmp
cmp
shl
jae
mov
jne
mov
adc
sbb
(bad)
xor
ret
xor
pop
loope
and
cmp
test
daa
lods
imul
shufps
stos
adc
outs
or
outs
out
mov
loop
and
inc
(bad)
aam
bndstx
adc
jae
mov
sbb
dec
xchg
fst
xchg
mov
or
cmp
lea
out
inc
sub
or
sub
ror
mov
mov
ins
push
inc
hlt
mov
jmp
add
cmps
sti
mov
or
jge
mul
inc
iret
xor
ror
imul
push
(bad)
push
or
imul
aam
push
mov
sub
jmp
or
adc
adc
sub
add
inc
sbb
push
jnp
lds
push
add
jmp
nop
lods
stos
dec
(bad)
or
and
cli
rcr
es
xor
mov
dec
add
or
cmp
cwde
stos
test
cdq
adc
or
mov
repz
cmp
call
push
sbb
or
ret
and
push
out
lods
mov
mov
aam
xabort
cs
cdq
and
loope
out
ins
outs
int3
dec
push
test
pop
adc
sub
add
icebp
loop
mov
test
mov
arpl
inc
imul
sbb
div
dec
pop
mov
mov
mov
push
push
mov
cs
sub
adc
or
xchg
adc
pop
inc
adc
adc
or
sbb
ret
pop
and
clc
imul
inc
or
push
mov
shl
in
cs
test
and
or
or
push
dec
jge
or
sub
adc
adc
dec
aad
ins
loop
shr
dec
add
pop
imul
sub
sbb
repnz
pop
xor
das
jge
mov
mov
or
test
adc
xor
fbstp
add
xchg
fld
xor
fiadd
(bad)
or
mov
das
cmp
add
or
cdq
adc
pop
rol
sbb
fnstcw
mov
inc
push
cmp
or
pop
shl
pop
inc
inc
add
mov
hlt
sbb
xor
fmul
dec
sbb
cdq
dec
and
rcr
ret
dec
dec
mov
loopne
jp
fld
jp
inc
shr
or
pop
cld
jns
icebp
sub
scas
fcmovb
push
call
push
inc
jle
mov
popa
call
addr16
cwde
je
and
pusha
sbb
icebp
jmp
mov
push
mov
push
push
ds
inc
ss
popa
pop
jne
jne
inc
inc
cmp
mov
mov
sbb
loop
fisubr
cmp
sbb
inc
popf
out
or
push
push
lea
aad
inc
ror
pop
adc
mov
retf
shl
jecxz
sar
mov
pusha
mov
adc
daa
sbb
sbb
shl
push
add
call
mov
cmps
into
sbb
call
or
rol
or
pop
movs
mov
test
mov
fcom
call
jl
adc
dec
sbb
rol
in
shl
pusha
xor
jecxz
(bad)
(bad)
test
(bad)
fbld
push
sbb
movs
mov
dec
and
dec
xchg
sbb
rcl
test
retf
fst
and
xchg
stc
pop
and
cwde
lock
test
mov
cmc
loopne
js
int3
or
xchg
or
or
clc
and
out
loope
xchg
rol
clc
adc
lds
(bad)
sub
cs
xor
xchg
pusha
cmp
adc
inc
loope
xchg
(bad)
xor
push
pop
ss
xchg
jns
ror
inc
mov
jns
jno
mov
mov
lods
ss
sbb
push
clc
mov
cmp
inc
(bad)
test
lahf
adc
scas
aam
(bad)
pop
jl
in
pushf
cmp
lock
shl
pop
int
rcl
add
lahf
and
inc
xchg
call
(bad)
add
fcomp
or
add
shr
repz
mov
fwait
push
dec
shl
dec
xchg
jo
push
xor
fisub
(bad)
push
adc
pop
xor
add
les
popa
test
and
rol
and
cdq
push
js
js
or
and
sbb
stc
daa
in
enter
popa
xchg
dec
ins
mov
mov
xchg
pop
add
push
movs
pusha
movs
xchg
dec
inc
test
xor
or
(bad)
call
dec
movs
lea
add
ret
fstp
leave
mov
scas
or
outs
push
cmp
(bad)
rol
rcl
add
cld
jmp
xchg
add
push
fwait
mov
or
jne
sbb
mov
inc
xor
mov
jl
add
xor
sbb
mov
and
cmps
push
jno
dec
push
cmp
inc
adc
ins
push
fild
jne
mov
leave
push
and
enter
or
shl
leave
xchg
dec
sbb
ror
and
add
mov
call
and
pusha
dec
mov
xlat
or
call
mov
les
or
xor
xchg
sub
in
mov
mov
and
push
aas
or
dec
stos
cmp
pop
inc
test
mov
and
pop
dec
or
sbb
xor
pop
adc
or
dec
xchg
push
out
inc
inc
or
mov
jne
mov
dec
or
push
xchg
int3
shl
xor
enter
ror
or
call
pop
jo
mov
inc
cdq
mov
push
jo
add
repz
aam
adc
int3
into
test
call
out
push
mov
adc
jmp
sbb
mov
je
fwait
mov
ins
xchg
movs
int
das
sub
ja
addr16
xchg
aas
jno
mov
xor
add
mov
xor
jmp
movs
loopne
and
sub
dec
test
in
retf
add
lock
test
add
scas
dec
in
and
cwde
adc
je
push
jae
aaa
les
ret
adc
add
inc
dec
cmps
out
push
cmp
jecxz
xchg
jb
sub
test
lock
sub
movs
mov
(bad)
dec
cmp
dec
ret
sub
or
rcl
jne
aad
pushf
fs
sti
push
gs
xor
add
jne
outs
inc
xchg
mov
or
test
lock
and
or
push
ror
jg
inc
and
and
sub
ret
(bad)
pop
cmp
xchg
pop
push
rol
bound
sbb
inc
arpl
aam
add
(bad)
dec
arpl
adc
test
push
inc
scas
push
adc
dec
pop
add
imul
push
mov
fnstsw
int
and
ret
xchg
mov
out
or
sub
call
push
add
mov
push
and
jns
or
sbb
push
inc
movs
add
add
add
or
pop
adc
sbb
mov
and
push
call
adc
or
cmc
mov
xchg
shr
ror
ja
and
xchg
and
arpl
add
inc
pop
mov
sbb
push
in
shr
cmp
mov
mov
mov
or
movs
add
dec
div
ja
sub
mov
sub
push
push
add
cmp
adc
mov
call
jns
mov
ss
jmp
sahf
lods
in
jne
jns
or
xchg
xchg
jne
xchg
jmp
pushf
xor
dec
add
unpcklps
and
nop
add
nop
jl
cmps
jge
pop
shl
js
mov
mov
shl
pushf
movs
adc
ins
test
adc
pop
add
lahf
cmp
adc
inc
cwde
ret
add
mov
pop
or
add
nop
(bad)
fs
(bad)
fisttp
dec
ret
sub
int
cmps
dec
pop
or
and
jns
or
call
or
cmp
inc
daa
mov
cli
pop
shr
cmp
add
jb
pusha
dec
sub
jns
test
shr
jne
pop
and
sbb
jbe
xor
jmp
push
das
int3
or
mov
and
test
ins
or
sub
xchg
lods
mov
inc
mov
push
mov
jne
pop
retf
xchg
inc
push
adc
or
mov
push
pop
sysexit
and
sti
adc
push
dec
add
in
mov
sbb
ds
dec
or
movs
sbb
mov
xchg
and
pushf
and
or
push
sub
rcl
lahf
add
js
mov
dec
or
mov
push
rcl
pusha
push
inc
stos
add
imul
les
cmp
aas
(bad)
in
retf
mov
icebp
inc
lods
mov
inc
inc
cdq
pop
or
and
popa
and
xchg
iret
(bad)
in
push
pop
push
and
cmp
inc
fs
inc
mov
movs
xchg
or
inc
(bad)
push
or
test
dec
pushf
mov
inc
dec
pop
push
xor
sbb
(bad)
call
or
push
loope
mov
cmp
(bad)
adc
popf
adc
mov
inc
mov
mov
lds
sub
(bad)
sub
sahf
add
fwait
in
pop
mov
test
add
jb
jo
adc
push
add
mov
bound
mov
sbb
xor
sbb
nop
jbe
fwait
les
ficom
sahf
and
es
or
dec
jp
pop
add
jnp
(bad)
lock
adc
xchg
mov
lahf
dec
mov
push
add
push
sub
pop
jmp
adc
out
rol
sbb
les
movs
mov
fst
pop
mov
jmp
out
sub
jge
stos
pop
inc
dec
add
add
adc
(bad)
xchg
xchg
int3
adc
aaa
mov
call
xor
dec
les
sub
repnz
mov
cmp
or
stos
or
jge
xor
mov
bound
dec
sub
cmps
rcl
mov
sbb
jmp
mov
mov
rcl
adc
adc
pop
adc
or
aam
jno
add
sub
xchg
push
jbe
push
jns
ret
sub
mov
push
dec
pop
push
nop
rol
xor
pushf
stc
push
xchg
lea
paddusb
mov
int
adc
cmp
lock
(bad)
cmp
add
dec
jbe
stos
inc
bndstx
pusha
mov
std
sub
push
sbb
icebp
push
push
and
xchg
mov
add
popf
jno
ds
ror
sete
mov
nop
in
mov
add
add
pusha
sub
mov
push
(bad)
or
jge
retf
dec
in
push
add
inc
pushf
cmps
mov
sub
loop
pop
in
fst
inc
adc
mov
(bad)
xor
cwde
cmp
icebp
scas
imul
adc
push
xor
nop
mov
add
adc
mov
dec
adc
lds
dec
add
jmp
sbb
jb
ret
mov
jb
pop
push
xchg
jns
sub
shl
add
pop
xor
inc
mov
push
or
out
mov
push
adc
cmp
mov
or
and
test
push
add
inc
xchg
shr
dec
cmp
ret
inc
xlat
ins
jg
les
xor
pusha
or
jo
data16
mov
adc
(bad)
mov
int3
or
pop
enter
(bad)
(bad)
or
add
adc
sbb
sbb
sbb
sahf
xor
and
add
loope
arpl
push
mov
adc
or
addr16
push
ja
push
lds
out
jmp
icebp
sbb
jg
push
movs
mov
jne
inc
js
add
adc
out
mov
jmp
xlat
push
push
cmps
push
nop
push
hlt
pop
pusha
or
(bad)
push
or
or
dec
adc
pop
cs
adc
push
imul
xchg
cli
mov
pop
adc
inc
pop
or
cmps
xor
push
jp
add
or
out
aam
fisub
xchg
mov
pop
dec
les
fistp
ror
daa
sbb
xor
adc
mov
xchg
shl
arpl
xor
adc
pop
mov
out
dec
and
bnd
mov
mov
mov
xor
mov
xor
xchg
lods
fmul
aam
(bad)
aam
push
scas
or
mov
sub
xor
sub
mov
add
adc
xchg
fmul
push
jne
adc
inc
mov
shl
(bad)
in
lds
test
cld
jb
shr
mov
pop
push
push
outs
push
gs
xor
push
dec
and
push
loope
push
stc
pop
imul
and
pop
inc
sbb
sub
push
cdq
add
sbb
adc
xor
mov
dec
ins
shr
cmp
pop
push
inc
xchg
pop
sub
adc
fisttp
add
and
and
iret
jge
lods
inc
arpl
mov
push
mov
pop
adc
lods
lds
lods
inc
add
jb
add
sub
je
arpl
(bad)
loope
mov
and
adc
ins
push
ret
push
dec
sub
xor
test
call
adc
imul
mov
cmp
sbb
push
add
cmp
xor
or
imul
loope
inc
mov
push
mov
jmp
test
loope
loopne
sub
jmp
daa
sub
cmc
add
ins
pop
mov
call
test
ret
add
add
test
inc
and
push
sbb
cmps
add
sub
outs
add
push
push
xchg
and
je
or
add
ss
mov
add
mov
xor
xor
add
loope
push
sub
xor
cld
cmp
mov
jo
es
or
rcl
sbb
jmp
arpl
inc
and
in
cmp
fst
push
push
push
sub
in
inc
jne
sbb
fwait
or
pop
jb
push
lds
xor
lock
nop
dec
movs
movs
jge
inc
pop
adc
adc
xor
in
pop
add
ds
scas
jmp
jg
sbb
test
rcr
push
push
lea
and
push
xchg
(bad)
hlt
dec
cmp
imul
sub
pop
inc
jmp
cmp
arpl
push
enter
daa
mov
push
lods
ret
mov
adc
jno
(bad)
xchg
xchg
or
bound
test
clc
xchg
lods
not
pop
loope
add
push
cli
add
stos
pop
enter
rcl
shl
ret
fwait
pop
ins
sti
xor
std
add
push
xchg
pop
mov
imul
ror
ins
mov
rol
push
ror
or
jno
sbb
dec
push
xchg
or
adc
adc
sbb
inc
aaa
inc
aaa
ss
outs
fadd
adc
aam
mov
(bad)
sbb
or
call
dec
inc
fs
or
jp
movs
sbb
or
add
xlat
mov
jmp
or
xor
and
pop
lods
call
call
ficomp
test
ss
pop
xchg
inc
jbe
pop
js
cld
add
mov
inc
int3
in
mov
test
sbb
mov
outs
shl
nop
mov
in
pop
(bad)
je
sub
(bad)
mov
adc
push
ds
push
mov
call
retf
xor
pop
sar
inc
into
dec
pop
inc
mov
mov
xor
push
test
pop
ret
or
xchg
dec
cmps
add
inc
and
sub
push
xor
xor
pop
sahf
dec
sub
fucomp
or
icebp
retf
inc
int
test
add
ins
jo
es
pusha
dec
test
push
and
xchg
shl
xor
sbb
in
ret
xlat
dec
or
jo
xchg
dec
dec
(bad)
sub
add
retf
pop
pop
mov
cmp
push
test
dec
imul
retf
inc
les
or
sar
push
inc
push
lds
dec
stos
xor
mov
push
(bad)
and
inc
mov
xor
jb
outs
inc
xor
inc
adc
pop
mov
xchg
jne
leave
mov
pop
ret
fmul
sti
cld
adc
aam
mov
cmp
xor
adc
xchg
mov
cld
xor
pop
hlt
mov
lahf
push
and
and
in
or
sbb
mov
sub
push
test
xor
pop
mov
fcom
jecxz
test
pop
fdivr
mov
pop
xchg
push
pushf
mov
(bad)
fidiv
gs
jmp
mov
xor
adc
pop
cs
mov
jae
and
add
ficom
je
mov
xchg
popa
add
jmp
stos
xchg
jnp
dec
mov
cmc
xlat
call
mov
(bad)
aad
xchg
enter
outs
or
test
add
es
pop
sub
and
test
enter
mov
inc
push
inc
daa
push
mov
dec
or
shl
adc
mov
jo
xchg
nop
sar
mov
inc
xchg
in
xchg
add
xor
cmp
ficomp
js
xor
movs
push
jp
mov
push
sbb
xchg
mov
int
jge
add
sbb
and
and
mov
xchg
and
add
sbb
sub
push
cmp
and
push
lods
retw
adc
adc
in
xchg
retf
cmp
inc
mov
mov
dec
inc
movs
stc
and
add
adc
adc
mov
mov
mov
sbb
and
mov
pop
push
and
sub
or
add
xor
push
cs
add
fisttp
and
in
ins
sub
sub
jmp
sub
add
fnstenv
pop
xchg
clc
out
adc
sbb
lods
popa
jmp
cmp
jne
ins
shr
dec
inc
sbb
or
xlat
test
xchg
pop
fwait
test
je
jmp
sbb
add
add
ja
push
jmp
push
or
push
dec
pop
lods
js
in
shl
adc
jno
or
mov
loopne
adc
add
add
call
push
in
or
inc
or
movups
add
pop
adc
adc
or
aad
add
dec
js
add
inc
sbb
adc
or
inc
nop
movups
mov
inc
add
mov
bound
adc
mov
pop
dec
inc
xor
mov
sub
add
xchg
dec
mov
pop
xchg
xchg
lods
jecxz
rol
add
call
inc
in
ins
sub
setge
xor
into
inc
dec
sbb
and
pop
push
retf
pop
push
jl
pop
dec
jne
ins
cmps
lods
add
jmp
or
mov
add
xchg
sub
mov
in
xor
or
sbb
xor
call
push
and
xor
inc
aam
sbb
mov
jno
hlt
add
loop
adc
inc
ss
xor
xchg
movs
mov
into
add
fprem
std
dec
jmp
iret
mov
movs
adc
mov
lods
mov
jns
loopne
add
xor
ret
popa
and
and
sahf
mov
jns
outs
mov
neg
and
pushf
add
loope
loope
ficom
gs
or
pop
jne
and
pop
shr
sbb
push
adc
push
inc
push
scas
jae
or
imul
pop
fisub
jge
push
pop
dec
test
inc
mov
add
push
(bad)
lds
shl
movs
(bad)
push
adc
lea
inc
aad
retf
mov
jge
loop
adc
push
inc
xor
or
pop
mov
or
adc
or
or
fwait
add
xor
or
xchg
dec
xchg
or
push
test
loop
pop
pop
add
add
adc
ins
jmp
add
sbb
pop
sbb
or
popa
xchg
add
mov
jmp
imul
and
movs
aas
fisttp
jg
sub
jmp
sbb
dec
inc
cli
inc
(bad)
loope
or
das
lea
pop
sbb
cli
jg
or
or
sar
mov
popa
data16
add
pop
mov
jge
jmp
sbb
add
cmp
add
add
nop
inc
or
jns
and
pop
and
mov
adc
cli
or
dec
add
mov
mov
push
dec
rcl
mov
jmp
ficom
and
dec
pop
clc
mov
cmps
xchg
push
dec
mov
cdq
scas
push
jmp
js
jb
icebp
push
push
pop
lods
mov
push
out
jne
sub
or
movs
push
mov
or
sub
push
fisub
cdq
cmps
or
adc
mov
pop
lods
in
mov
ss
adc
je
pop
lea
and
movs
mov
fs
les
das
or
sbb
imul
sub
mov
add
fnsave
add
cmp
nop
xor
sbb
push
retf
adc
mov
push
ins
xor
pop
mov
or
mov
adc
jg
adc
sbb
nop
add
lods
xchg
retf
mov
nop
sbb
sbb
cmp
ror
or
repnz
cmc
sbb
push
cmc
loopne
mov
sub
mov
cdq
push
push
lods
gs
mov
sub
push
fwait
or
imul
test
inc
in
int3
or
js
jne
xor
pop
mov
les
dec
xlat
in
or
sbb
or
daa
xchg
out
in
hlt
clc
lock
xchg
and
jno
sub
stos
inc
sub
test
stos
push
lock
xor
inc
int3
pop
gs
sub
pop
dec
sbb
dec
and
retf
mov
and
push
xor
sbb
mov
xchg
mov
sub
mov
add
mov
pop
das
mov
sysenter
mov
push
xchg
gs
adc
or
pop
sbb
call
test
dec
adc
cmp
icebp
jecxz
dec
pop
or
adc
into
mov
ret
or
pop
je
add
not
call
call
movs
xchg
es
cld
imul
xchg
test
cld
cld
mov
pop
cmp
jnp
jbe
or
jmp
out
push
push
mov
mov
or
mov
adc
cmc
into
test
shl
jo
pop
add
inc
sar
inc
lods
mov
inc
dec
lds
lock
mov
fstp
fist
clc
add
jl
pop
or
std
hlt
xchg
sub
pop
or
fs
xchg
adc
dec
test
test
movs
(bad)
mov
sub
push
es
daa
mov
sub
xor
mov
out
and
aam
ins
pusha
test
mov
xor
or
xchg
popa
retf
push
in
xchg
mov
jae
cmp
push
nop
adc
mov
cwde
stos
rcr
xor
xchg
mov
sbb
test
js
test
lods
or
arpl
mov
sbb
xor
push
nop
dec
mov
xchg
pop
pop
add
test
push
cwde
inc
sub
in
out
into
dec
ret
sub
add
and
repz
sub
shl
cwde
and
sahf
mov
movs
pop
test
sbb
test
clc
ss
loopne
add
cmp
push
inc
and
lahf
cmc
push
shl
or
in
and
je
sbb
push
mov
fisttp
cmps
sbb
jle
jb
adc
ret
push
cmc
adc
adc
lock
pop
xchg
rcl
sar
test
sub
es
and
xchg
aad
rcr
sub
xlat
es
scas
cmp
in
clc
pop
and
fsubr
or
push
jmp
push
inc
in
or
adc
mov
xchg
push
fwait
mov
stos
adc
xchg
dec
mov
pushf
mov
lock
lea
cmp
es
xchg
test
ret
nop
cmps
fldenv
mov
mov
test
mov
je
dec
loop
ins
ret
adc
add
pop
push
shr
inc
in
scas
fsubr
inc
jns
inc
jns
cdq
jo
cs
or
add
sub
pushf
or
movs
mov
sub
fist
push
dec
jp
pmovmskb
push
lock
scas
adc
or
pop
mov
imul
sbb
add
sbb
mov
mov
sub
int3
mov
lea
mov
pop
test
add
fnstenv
adc
xor
dec
call
loopne
sbb
adc
mov
aam
push
inc
or
stos
add
punpckhwd
dec
mov
push
adc
(bad)
pop
fwait
pop
mov
imul
and
inc
das
imul
shr
leave
sar
test
scas
add
pop
jmp
mov
test
jo
add
aaa
pop
movs
adc
dec
call
add
jo
mov
pusha
ret
jo
cmp
cmp
or
and
jo
pop
xchg
pop
dec
fxam
xor
mov
adc
mov
dec
sub
retf
sahf
movs
imul
imul
xchg
fs
inc
cmp
aam
sub
push
dec
inc
enter
pusha
xor
int3
arpl
jo
nop
xchg
aad
pop
ins
pop
mov
xchg
mov
loop
xchg
dec
push
and
mov
sub
pop
or
mov
sub
inc
or
jno
push
je
inc
pusha
push
retf
in
(bad)
mov
cmp
aad
aad
inc
imul
add
push
int3
dec
jle
adc
aad
mov
jl
jmp
adc
or
(bad)
sub
xlat
jmp
fidivr
inc
or
add
and
in
sbb
xchg
sbb
jb
imul
dec
imul
sub
sbb
in
hlt
movs
xor
cmp
cmp
sbb
aam
xchg
and
adc
push
xchg
test
push
sahf
and
sbb
jmp
add
rcr
add
xlat
adc
pushf
mov
or
popa
addr16
mov
or
mov
daa
jnp
lock
in
mov
push
retf
mov
jmp
or
pop
adc
push
in
fwait
pop
mov
into
jae
in
sar
adc
(bad)
sub
push
push
sbb
or
call
ins
and
cmp
sub
xor
retf
adc
add
jp
test
fwait
int3
sbb
cmp
xchg
dec
push
test
adc
call
or
dec
fdivr
dec
and
pop
inc
sqrtps
push
and
dec
imul
sub
or
sub
jns
int3
or
or
icebp
xlat
sbb
adc
lods
jl
sahf
add
cli
rcl
test
rol
sub
push
push
adc
add
dec
inc
sbb
cmp
and
sbb
adc
movs
test
xor
loopne
add
imul
leave
test
es
pop
arpl
mov
(bad)
popf
cli
push
lock
clc
sub
or
sbb
push
loop
xchg
test
out
inc
xor
mov
mov
push
and
push
mov
pop
ss
das
add
add
pop
mov
aam
pop
fwait
jmp
fcom
jne
mov
and
rol
pop
imul
mov
or
sbb
out
xchg
test
fucomip
call
jecxz
cdq
or
add
xchg
cmp
xchg
xchg
popa
or
add
cmp
sbb
jns
aam
adc
(bad)
test
and
sbb
int3
mov
es
jnp
cmp
pop
adc
call
pop
mov
call
(bad)
cmp
xor
pop
pop
push
retf
mov
adc
push
(bad)
add
mov
fisttp
adc
rcr
adc
or
clc
jmp
lock
imul
mov
mov
xchg
jne
and
or
call
sub
adc
pop
test
or
fiadd
lods
fld
test
sub
pop
dec
inc
pop
dec
add
inc
push
xlat
mov
or
mov
cmps
xchg
push
call
dec
enter
cmp
in
or
push
aam
adc
in
inc
mov
adc
jns
pop
je
mov
mov
cmp
xor
adc
cmp
fild
xchg
call
call
and
pop
les
in
xor
in
in
in
clc
fs
inc
cmp
sbb
clc
sub
fdivr
jno
inc
xchg
es
les
push
mov
adc
fmul
pop
lea
push
dec
pop
pushf
dec
and
or
in
es
(bad)
adc
mov
add
push
and
stos
test
or
jge
loop
inc
xor
pop
jmp
outs
push
call
mov
adc
sbb
pop
jo
push
push
jl
pop
stos
jl
jno
dec
or
div
mov
cmp
dec
xor
stos
rcl
inc
sbb
pcmpgtw
clc
and
and
test
test
push
add
dec
sbb
cmp
inc
movs
mov
sbb
ror
jnp
add
aad
out
mov
test
test
fadd
rcl
mov
mov
xor
mov
jge
push
dec
sub
sub
sbb
dec
cwde
ins
adc
push
push
nop
xor
or
sbb
push
(bad)
mov
xor
xor
sub
adc
xchg
add
popa
or
adc
and
ins
ins
xor
les
push
pushf
dec
pusha
cwde
(bad)
xor
add
xor
push
hlt
pop
test
movs
in
xor
pop
and
mov
add
shl
loopne
das
inc
and
int3
or
push
xor
and
sbb
retf
or
cwde
dec
or
cli
xor
sbb
stos
xchg
or
jge
not
shr
sub
push
push
sub
jmp
and
idiv
fcomp
lahf
(bad)
nop
jne
ret
sbb
adc
xchg
cmp
adc
call
push
test
mov
inc
sbb
jmp
sbb
imul
(bad)
lods
mov
adc
xchg
loopne
sbb
xchg
sbb
sub
imul
dec
push
sbb
ins
out
add
inc
(bad)
jo
and
ss
or
adc
shl
xchg
bound
fimul
or
add
or
inc
cdq
or
sbb
sbb
add
call
adc
out
nop
add
pushf
cmp
shr
mov
or
or
movs
sbb
mov
or
dec
arpl
gs
jp
lods
in
loopne
pusha
or
dec
ret
add
lahf
pop
or
or
dec
inc
xor
push
jg
aad
add
test
rcl
xchg
jo
and
xor
stc
rol
pop
mov
mov
iret
nop
ss
test
dec
shl
jl
and
adc
imul
dec
xchg
xchg
sbb
cmp
sbb
dec
fcom
fstp
or
dec
gs
aad
or
add
pop
popa
mov
jmp
mov
ja
cmp
iret
xchg
cdq
dec
sub
jne
xor
sub
pop
sub
popa
and
and
call
(bad)
adc
test
dec
sbb
iret
or
dec
adc
ss
test
mov
pop
sub
jmp
bound
and
add
mov
jg
push
xor
ins
pusha
cmp
add
sub
xor
adc
or
sbb
or
jge
push
in
(bad)
enter
adc
loop
je
or
fadd
shr
enter
xchg
jmp
ins
mov
or
fs
mov
add
movs
push
mov
or
int3
or
lods
cs
and
int3
das
jmp
xchg
icebp
lods
push
test
popf
enter
jne
adc
sub
test
fcmovbe
mov
pusha
mov
sbb
jmp
popa
test
stc
js
aaa
jne
or
xchg
retf
stos
js
imul
test
ror
dec
inc
scas
dec
push
cwde
inc
pop
mov
popa
push
in
push
ror
imul
sub
mov
sti
mov
xchg
mov
sub
jmp
jae
jbe
shl
sbb
jl
jmp
push
sbb
test
enter
mov
or
clc
into
pop
mov
cmp
sub
dec
shr
jl
cmps
and
mov
leave
data16
mov
js
jnp
or
add
outs
sub
loopne
es
fidiv
jmp
cmc
xchg
adc
sbb
or
and
mov
pop
xor
mov
enter
jns
cld
sbb
imul
pop
popa
add
add
ss
sbb
and
xchg
adc
sti
mov
repnz
div
js
pop
sbb
mov
jns
(bad)
popa
or
test
cmp
call
jecxz
cmp
mov
enter
xor
scas
add
xor
jbe
adc
cmp
inc
and
(bad)
pop
dec
sahf
pop
adc
sbb
jnp
cmp
inc
and
add
daa
mov
adc
daa
mov
push
cmp
mov
xor
dec
imul
or
mov
imul
push
arpl
enter
into
or
dec
jmp
data16
add
xchg
xor
add
fldenv
jno
enter
lods
int
add
xchg
cmp
jmp
push
dec
repnz
and
push
mov
cld
sub
push
lods
push
dec
test
mov
or
sub
or
or
adc
outs
xlat
mov
adc
nop
mov
push
je
sar
and
push
test
or
call
sub
(bad)
mov
cmps
and
fs
bound
repnz
jge
xor
add
push
xor
adc
xor
clc
(bad)
xchg
pop
inc
ror
fldlg2
pop
outs
push
adc
pop
mov
out
mov
add
jl
inc
addps
mov
mov
jne
sqrtps
adc
(bad)
out
pop
cmp
and
scas
loopne
popa
std
pop
jae
test
pop
stos
push
or
lods
mov
dec
rcl
inc
jle
or
ret
sbb
add
adc
add
mov
mov
retf
fst
fmul
adc
je
neg
das
std
(bad)
dec
loop
sub
add
mov
sbb
cmp
dec
adc
enter
and
enter
outs
sbb
pop
add
(bad)
xchg
dec
adc
shr
xor
mov
mov
rol
sub
or
mov
ja
mov
sbb
outs
mov
add
js
je
or
(bad)
dec
pop
add
mov
fdiv
jge
push
aam
mov
fld
mov
sub
lods
inc
dec
add
add
and
mov
add
adc
pop
das
cdq
mov
js
cld
rol
add
fild
mov
cwde
or
gs
popa
mov
mov
call
mov
xor
test
adc
popf
shl
aam
cs
adc
(bad)
call
rol
icebp
cmp
aas
sub
add
pop
add
gs
jmp
stos
pop
jno
sbb
iret
or
fcmovne
mov
ficom
dec
rdmsr
or
mov
push
nop
push
sub
rol
cmps
data16
fdiv
and
mov
loope
loopne
imul
mov
sub
sub
jge
add
adc
or
xchg
test
loop
push
push
out
sbb
pushf
pop
mov
or
hlt
add
mov
cwde
fmulp
inc
sahf
dec
mov
in
xlat
sbb
neg
sbb
pop
enter
or
jmp
pushf
fs
mov
enter
(bad)
ret
cmps
(bad)
mov
jae
movs
test
pop
stos
or
ror
leave
pop
fs
push
ror
push
rol
test
test
jbe
out
pushf
push
pop
pop
or
mov
fnstenv
mov
cmps
ror
cmp
and
add
mov
call
mov
fcomp
or
adc
add
mov
sbb
mov
dec
push
es
rol
(bad)
xchg
call
mov
add
enter
into
push
xchg
repz
mov
fidivr
(bad)
leave
adc
int3
test
std
leave
cmps
jbe
jo
add
or
jl
jo
fcom
int3
add
and
mov
dec
dec
fxch
adc
aam
popa
add
sub
sar
addr16
sbb
cmp
xchg
pop
and
sahf
sti
ds
inc
add
jo
dec
sbb
mov
sub
dec
(bad)
and
cdq
inc
cmp
fs
xchg
jge
into
shl
adc
pop
test
cli
and
daa
sub
and
sub
dec
cdq
xor
xor
aaa
adc
imul
push
(bad)
repz
lods
iret
lods
xchg
clc
loope
mov
adc
mov
cmp
popa
dec
das
add
or
inc
add
xchg
inc
test
mov
outs
cmp
js
mov
mov
popa
sar
push
push
(bad)
or
pop
inc
fdiv
inc
(bad)
sub
fadd
dec
(bad)
rol
push
dec
jmp
xchg
push
and
jmp
je
cmp
cmp
and
popa
xchg
add
cmps
test
clc
xor
pop
aad
in
cwde
jne
(bad)
sbb
adc
test
rdmsr
mov
push
mov
cs
add
push
daa
push
or
fstp
push
jle
mov
ins
adc
loope
movs
retf
dec
cmp
outs
mov
inc
bnd
inc
imul
lahf
mov
push
mov
add
adc
stos
push
xchg
cld
cmp
adc
inc
add
push
test
pop
sub
inc
inc
popa
adc
cmp
call
sbb
dec
shl
shr
fisttp
ss
loopne
sub
ret
fldenv
add
lods
arpl
mov
sbb
push
dec
pop
add
or
and
inc
or
jbe
inc
movs
sub
ffreep
inc
sbb
adc
mov
aaa
jbe
out
and
(bad)
mov
adc
adc
dec
cmp
fmul
push
ret
or
xchg
mov
les
lahf
sbb
and
loope
adc
xor
mov
cmps
fsub
sbb
xor
mov
and
dec
repz
loope
(bad)
cmps
rcl
mov
icebp
xchg
xchg
je
jnp
test
mov
aas
retf
push
cmp
je
sub
ins
push
mov
stos
xor
add
aaa
ret
sub
mov
jns
movs
hlt
(bad)
stos
inc
jmp
push
inc
push
sbb
out
aad
ficomp
dec
enter
and
add
popa
adc
cmp
dec
outs
aam
mov
xor
retf
js
push
rcr
push
add
and
pop
loope
push
dec
pop
das
add
out
test
pop
je
and
push
dec
jne
cmp
pop
inc
mov
mov
push
add
sbb
xor
jae
test
add
les
fnstsw
sbb
mov
es
cmp
scas
sbb
fsub
ss
arpl
adc
ja
mov
or
mov
mov
mov
dec
imul
mov
adc
es
push
shl
push
inc
mov
push
(bad)
in
adc
jmp
and
call
cmps
and
inc
xchg
add
mov
int3
add
jp
mov
movs
jmp
jecxz
dec
or
xchg
mov
or
jo
jl
dec
ret
xchg
add
in
and
cmps
mov
and
push
test
imul
jl
sbb
enter
js
aad
or
enter
inc
cmp
dec
mov
pop
add
push
shl
dec
fild
cmp
lods
xor
push
sbb
fist
add
sbb
in
adc
or
fdiv
cmps
popf
add
fdivr
mov
push
ret
and
mov
movs
add
movs
adc
les
mov
adc
sti
mov
ret
mov
cmp
dec
sub
dec
xor
fstp
loope
dec
iret
imul
cmp
adc
mov
ss
inc
mov
aaa
xor
and
js
sub
mov
inc
(bad)
push
mov
push
jge
jb
lahf
sbb
fsubr
dec
add
add
lock
push
int3
in
xchg
xor
ds
(bad)
je
push
cmp
and
xor
in
leave
mov
fdivr
inc
in
mov
adc
cmp
repnz
gs
xor
push
xchg
hlt
jno
ret
adc
or
sahf
xchg
(bad)
cmp
cmp
push
mov
sbb
nop
mov
sbb
(bad)
sti
inc
inc
sti
scas
(bad)
pop
dec
popa
and
sub
and
adc
pop
ins
or
dec
repz
sub
pushf
add
inc
add
in
ficomp
add
or
test
inc
or
push
aad
dec
or
adc
es
test
mov
sbb
xchg
sub
xchg
jo
popf
push
aam
or
enter
sub
mov
add
push
inc
cmc
dec
nop
cmp
cwde
les
mov
cmp
je
mov
rol
and
add
lds
cmp
imul
and
bound
(bad)
xchg
mov
ret
sbb
pop
pop
push
and
sbb
aad
loope
xor
in
push
jb
test
sbb
xor
xchg
lods
lock
sbb
cli
jle
adc
add
call
shl
psrad
test
jo
std
xchg
retf
sub
mov
into
xchg
sbb
rol
adc
inc
je
xor
sbb
(bad)
lock
pop
add
les
imul
cmp
inc
push
shl
mov
shr
rol
adc
push
pushf
pusha
mov
mov
sub
fcom
loop
fs
jp
mov
mov
xchg
and
adc
mov
sbb
and
push
ja
sub
xor
pop
push
aaa
and
mov
cld
das
fld
xchg
mov
pop
es
fiadd
movs
add
mov
inc
ficom
rol
shl
sahf
rol
cmc
popa
jl
adc
sahf
sbb
je
(bad)
pushf
push
push
ins
cwde
pop
mov
ins
or
dec
sar
mov
mov
add
loope
movs
pop
add
cmps
push
dec
push
loop
mov
loop
sti
and
sbb
imul
rol
push
mov
push
xlat
or
in
call
pop
adc
cmp
cmp
dec
scas
add
lods
adc
bound
scas
gs
jg
leave
xchg
xchg
sub
inc
push
shr
push
pop
ror
xor
mov
aad
mov
popa
pop
jno
mov
inc
sbb
xchg
mov
push
fisubr
push
jo
leave
adc
pop
inc
mov
add
inc
inc
push
xor
enter
ja
push
and
dec
sub
pop
js
mov
pop
dec
jne
aam
jmp
sbb
sub
jae
xchg
adc
sub
ja
inc
pop
jne
xor
cmp
xchg
mov
mov
sar
in
adc
jo
popa
ja
ins
xor
out
push
cmps
rol
mov
dec
adc
push
lea
xchg
mov
sub
arpl
inc
push
pop
and
sub
dec
jg
inc
sub
dec
mov
xlat
pop
jnp
rol
test
je
outs
popa
add
push
cmp
mov
shr
aas
sbb
(bad)
jp
mov
aas
mov
ds
cmp
fcomp
sub
mov
cs
in
mov
pop
sbb
add
dec
dec
dec
pop
lahf
xor
(bad)
xor
call
nop
sub
loopne
mov
sub
sub
add
push
and
jmp
test
xor
pop
add
retf
mov
aam
aam
mov
add
lods
push
push
shr
push
xchg
ss
ud0
add
pop
adc
lods
mov
inc
jmp
cmp
test
inc
ror
xchg
or
pop
add
movs
cmp
xor
ss
mov
out
fnstenv
push
adc
ins
test
add
cmp
mov
add
das
sub
repnz
ret
and
add
jns
mov
(bad)
rcr
mov
push
outs
adc
dec
inc
pop
out
xchg
fs
cmp
rol
ret
rol
sbb
dec
add
out
mov
and
pop
xchg
fdivr
jp
adc
sbb
scas
inc
loop
ins
sbb
daa
mov
inc
mov
es
sbb
xchg
rol
sbb
xor
nop
push
pop
add
mov
(bad)
and
dec
sar
call
iret
and
sub
in
lea
or
cs
sbb
push
inc
jmp
pop
or
fidivr
out
mov
test
pop
sbb
and
fsubr
xchg
fcom
shl
cmp
je
mov
mov
fwait
inc
test
cmc
adc
xor
imul
lock
xor
addr16
cs
cmp
test
inc
add
sbb
test
add
mov
pop
enter
jmp
mov
lea
mov
cld
loop
xchg
xchg
push
cld
test
mov
cmp
adc
sbb
sub
inc
cdq
xlat
push
test
cmp
or
jo
lea
popf
nop
jne
icebp
ds
lock
push
out
add
pop
pop
nop
je
lods
gs
fld
lock
xchg
mov
js
sbb
cld
lods
dec
lock
fadd
popf
enter
push
dec
sub
cli
xchg
or
push
and
or
stc
mov
dec
mov
inc
xchg
xchg
rol
add
xchg
pop
ret
jl
xchg
inc
mov
inc
mov
cmp
or
add
jmp
pop
dec
arpl
add
not
push
das
out
push
adc
push
add
or
or
push
test
fadd
add
push
test
adc
sbb
inc
loope
dec
shl
jl
ror
sbb
sub
popf
or
arpl
scas
and
fidiv
pop
outs
or
xor
cmp
or
fwait
add
add
sbb
pop
mov
or
cmp
outs
mov
popa
call
shl
ins
adc
(bad)
retf
js
xchg
ror
jo
adc
dec
or
xor
stos
cdq
push
icebp
xchg
or
push
push
mov
mov
mov
and
cmc
retf
jp
adc
inc
es
and
dec
push
xchg
push
push
sub
sub
jae
or
xor
icebp
adc
inc
xor
mov
frstor
xor
aas
cmp
pop
not
xchg
pusha
sub
es
loopne
sbb
clc
and
es
jle
leave
push
mov
mov
inc
mov
sub
add
fidiv
call
add
or
fsub
dec
adc
push
mov
jno
das
mov
retf
mov
test
pop
mov
leave
(bad)
jns
cmps
mov
and
or
outs
icebp
push
rcl
adc
cmp
and
sub
dec
loop
(bad)
fstp
dec
cmp
mov
mov
(bad)
or
movs
mov
inc
and
mov
dec
shl
(bad)
nop
sub
js
or
test
adc
lock
pop
mov
mov
dec
aaa
ud1
repnz
lods
mov
xor
sub
mov
call
push
ret
scas
jne
mov
sbb
fadd
ffreep
shl
add
jno
inc
rcl
pop
dec
adc
loope
dec
mov
ins
push
inc
dec
cmp
(bad)
lods
inc
pop
je
inc
pop
wbinvd
mov
sbb
xor
jne
sub
and
xchg
fnstenv
mov
add
mov
jmp
mov
sub
jo
stos
shl
cmp
or
ss
dec
mov
outs
inc
std
pop
pop
pop
add
mov
sub
mov
pop
call
xor
lods
shl
add
or
outs
dec
test
sbb
inc
adc
and
pop
adc
in
xchg
data16
cmp
mov
mov
cmp
inc
and
and
call
in
mov
imul
mov
jns
push
and
repnz
lahf
push
inc
pop
push
sub
and
and
inc
lods
in
jp
push
mov
cld
and
and
add
sbb
fwait
inc
jmp
or
(bad)
outs
xchg
lods
int3
lar
xor
add
or
fsubr
movs
jmp
xchg
push
and
inc
jmp
aam
jo
aad
sub
rol
adc
aam
jl
and
xchg
les
movs
lea
cmp
mov
mov
and
mov
adc
rol
mov
js
inc
jne
in
cmp
adc
daa
jns
jne
scas
sbb
cwde
fstp
fldcw
push
pop
or
ror
inc
clc
xor
mov
or
mov
jmp
rcr
neg
clc
dec
ret
sbb
pop
xor
or
mov
add
pop
add
call
sbb
sbb
and
aad
pop
sbb
add
pushf
ret
rcl
add
xchg
pusha
pop
inc
mov
add
popa
push
sub
ja
cmp
call
add
hlt
ror
mov
loopne
hlt
jmp
cmp
sub
jle
leave
xor
pusha
pop
add
jbe
and
bound
cs
inc
mov
adc
push
xor
(bad)
add
push
scas
jmp
xor
pusha
stos
mov
lea
jmp
or
jae
shl
cmp
sub
sbb
gs
outs
inc
or
pop
mov
mov
in
xor
daa
cmp
pop
cmp
add
mov
aaa
mov
jg
push
pop
jns
outs
rol
sbb
sti
inc
xchg
sbb
or
sub
pop
ret
pop
dec
bound
ret
push
sahf
and
xchg
icebp
mov
(bad)
test
pop
mov
or
add
loop
and
or
fwait
into
dec
cmp
and
and
and
test
or
or
arpl
mov
and
movzx
mov
outs
xchg
int
sahf
xchg
xchg
(bad)
sbb
sub
fwait
add
pop
mov
lea
xlat
mov
sbb
or
mov
ror
lods
ficomp
sub
in
dec
(bad)
shr
sub
mov
pop
loopne
adc
dec
add
and
mov
sub
pop
cmp
or
lahf
sbb
rol
push
fadd
neg
xor
sbb
or
sub
sub
sbb
cmp
push
and
dec
add
js
fsub
test
leave
rcl
pop
adc
pop
cmp
or
mov
cmp
push
xor
mov
mov
inc
and
es
rol
cmp
and
fisub
je
xor
xor
sbb
leave
sub
inc
outs
xor
inc
fdivr
dec
mov
ret
je
jns
xchg
mov
loope
or
test
push
push
mov
pop
sbb
mov
jno
ins
sbb
movs
dec
aaa
push
mov
loope
sub
push
ins
inc
inc
xchg
(bad)
and
stos
cmps
xchg
dec
xor
(bad)
(bad)
adc
and
ror
inc
jl
popa
push
cmp
add
push
pop
xchg
test
test
sbb
pushf
mov
sbb
or
lock
xor
sub
xor
jo
dec
shl
fbld
movs
lods
push
xlat
scas
mov
pop
cwde
pop
jo
mov
dec
or
adc
ret
inc
mov
xor
pop
mov
add
mov
lods
int3
inc
dec
mov
pusha
es
rcr
sub
xchg
dec
pop
or
fdiv
mov
mov
aaa
cmp
jp
sub
adc
fwait
add
push
add
movs
in
xchg
ins
mov
sar
cs
test
jo
xor
(bad)
rcl
xor
aaa
xor
add
pop
aam
les
mov
popa
dec
adc
bound
cmp
push
or
inc
xchg
or
and
pop
sub
xor
add
cmp
push
jnp
push
rol
add
rcr
and
adc
popf
adc
xchg
adc
xchg
leave
pop
sbb
mov
push
pop
std
inc
cmp
xchg
xchg
stos
std
hlt
push
pusha
sar
or
push
test
add
dec
sbb
push
push
sub
pusha
sar
add
arpl
push
xor
loop
mov
and
mov
adc
mov
inc
jns
or
add
and
test
cs
lea
sbb
push
es
ins
loope
ins
inc
imul
add
fnstenv
je
add
movs
ins
push
add
xor
mov
aad
popf
sbb
rol
and
and
dec
test
sub
dec
push
and
test
out
or
sbb
loope
mov
out
retf
call
pusha
add
adc
pop
sbb
js
or
pop
call
mov
inc
push
push
sub
push
pop
add
adc
or
adc
jmp
dec
je
sbb
mov
jb
cmp
mov
inc
cdq
fadd
sbb
xchg
mov
add
add
nop
retf
mov
xchg
popa
pop
adc
imul
retf
sbb
dec
rcr
leave
pop
adc
and
mov
ret
mov
cmps
or
or
ret
dec
add
imul
adc
ror
pop
xchg
add
pop
jle
cmp
enter
movzx
movs
pop
adc
jo
dec
add
nop
test
push
es
ins
lods
and
(bad)
pop
rol
fadd
add
je
daa
lock
jge
idiv
fcom
es
aaa
pusha
mul
push
sub
push
pop
xor
pop
mov
icebp
adc
fcom
and
xchg
mov
dec
mov
xlat
mov
aad
repz
adc
mov
retf
sub
adc
cld
adc
outs
add
pop
or
add
pop
repnz
into
adc
xor
sbb
sub
inc
pop
or
in
push
push
and
xor
into
gs
dec
test
mov
enter
cmp
nop
test
mov
mov
das
push
ss
sub
sbb
mov
push
lahf
cld
rcl
cdq
push
xchg
mov
mov
xchg
daa
(bad)
stos
pushf
push
sbb
(bad)
cld
xor
les
push
fdivr
mov
pop
and
sbb
sbb
and
mov
jmp
inc
loop
mov
and
lods
fwait
xchg
ds
inc
test
and
push
add
or
xor
jbe
xchg
add
(bad)
pop
dec
fs
mov
hlt
cmp
pop
pop
push
adc
mov
lds
fwait
nop
xor
out
cli
cmps
movs
scas
mov
xchg
inc
dec
mov
inc
cmp
out
inc
sbb
mov
dec
jg
mov
adc
jnp
push
pop
sbb
inc
and
dec
push
add
pop
adc
pop
mov
imul
pop
adc
push
sub
pop
aad
pop
cmp
xchg
sbb
ins
sbb
sub
das
inc
call
jo
dec
fadd
and
(bad)
shl
pop
push
dec
jecxz
shl
mov
push
mov
inc
fstp
xchg
rol
add
jl
or
arpl
add
pop
dec
mov
and
aas
inc
mov
ins
pop
aas
nop
adc
into
adc
push
movs
or
push
xchg
cwde
xchg
sbb
shr
sub
and
jle
add
in
jmp
sub
daa
lods
mov
and
adc
or
pop
mov
loopne
jmp
test
sub
lea
sbb
(bad)
icebp
sbb
push
pop
and
or
ss
jae
ret
cmp
fs
in
mov
ret
icebp
jmp
xchg
mov
icebp
jo
movs
or
or
add
ins
je
fs
sub
push
gs
mov
adc
jg
test
lods
add
or
xchg
add
ret
mov
sub
cwde
inc
sub
jo
jo
push
(bad)
retf
push
lods
mov
push
pop
dec
mov
gs
mov
xchg
jo
int
push
(bad)
pop
mov
shr
loopne
adc
adc
add
test
test
and
inc
add
aaa
push
adc
cmc
mov
jmp
and
imul
les
ins
cmp
stos
push
adc
add
cdq
dec
or
inc
sbb
inc
sbb
add
mov
test
and
jns
movs
mov
sub
inc
cmp
xor
adc
dec
test
and
push
jno
xor
neg
in
cdq
cmp
mov
jge
push
add
fmul
mov
fnop
inc
add
jno
sub
adc
dec
rcr
adc
ror
inc
mov
je
mov
mov
cmps
test
add
push
jae
add
sub
dec
push
push
bound
pushf
out
cdq
inc
add
add
or
mov
mov
sbb
(bad)
hlt
clc
(bad)
jmp
sub
xchg
pop
jbe
sbb
sub
adc
sub
ins
mov
pop
jge
shl
adc
sar
xchg
aaa
adc
into
mov
int3
jp
call
fs
sbb
cdq
adc
jmp
inc
or
xor
rcl
push
fs
dec
aam
movs
(bad)
or
and
add
adc
add
bound
inc
das
mov
mov
add
mov
cs
outs
jo
fsub
jnp
repz
pop
adc
jo
cmp
ss
les
mov
xchg
and
stos
enter
push
or
std
(bad)
and
add
push
pop
add
or
mov
nop
ror
pop
inc
sbb
cmp
pusha
xchg
or
dec
or
xchg
int
or
xor
xchg
push
inc
or
or
mov
jne
inc
test
add
ret
or
sbb
dec
pop
adc
add
sbb
or
push
and
je
cld
daa
lea
fadd
xchg
lahf
mov
int
sub
movs
add
loopne
push
inc
sbb
and
repnz
fisttp
(bad)
jge
push
ror
add
xchg
add
pop
mov
inc
mov
sub
das
pop
pop
sbb
clc
push
mov
inc
xor
pop
fwait
lods
(bad)
xor
xor
out
pushf
push
shr
loop
pop
mov
sub
or
adc
ret
push
mov
sub
icebp
jl
cmps
and
ret
jo
and
pop
nop
dec
fld
push
out
int3
cmps
or
xor
add
sub
jle
(bad)
enter
cwde
xchg
test
add
jmp
shr
imul
(bad)
call
add
dec
retf
mov
push
mov
enter
enter
test
or
inc
loope
push
sbb
ret
cmp
cmp
xchg
jne
pushf
jb
jb
jge
and
add
les
cmp
into
nop
push
mov
test
xchg
call
push
(bad)
cmp
adc
fadd
and
imul
aam
aas
add
push
test
push
xor
or
mov
mov
inc
ret
nop
jmp
movs
test
mov
push
mov
test
inc
add
dec
loopne
ret
and
mov
(bad)
out
add
xchg
nop
popf
sbb
bound
mov
or
loopne
pop
and
loope
jge
mov
push
dec
sbb
inc
mov
(bad)
jge
call
scas
add
sbb
xor
out
mov
add
pop
jge
or
(bad)
mov
push
adc
or
push
cs
sbb
sub
test
mov
shr
movs
ins
xor
int
lea
gs
(bad)
sti
jp
cli
ja
xchg
add
fs
loop
and
in
and
cld
xchg
mov
add
and
mov
mov
and
je
lods
jo
dec
lea
sub
sbb
movs
ret
pop
repz
sbb
or
pusha
ins
and
mov
sbb
jmp
or
leave
out
test
jo
stc
adc
sub
(bad)
not
sub
xchg
sub
dec
cmp
mov
and
outs
add
je
dec
mov
jne
leave
js
nop
add
or
fcom
mov
xchg
jmp
and
and
popa
daa
jo
adc
cs
scas
push
add
fldenv
test
imul
add
data16
inc
cmp
lods
add
mov
jle
push
push
mov
lock
out
fwait
push
xchg
xor
adc
fcom
sar
and
sub
pusha
loope
inc
out
dec
popa
mov
ret
(bad)
bound
sahf
call
imul
mov
das
jo
jecxz
dec
fucomi
add
pop
lods
push
mov
adc
pop
xchg
rcr
dec
addr16
xchg
outs
push
jne
pop
test
add
retf
xchg
sbb
inc
inc
nop
push
jmp
jae
inc
imul
add
sub
add
adc
movs
sub
or
test
nop
shr
sub
push
mov
push
cmp
movs
mov
add
inc
int
les
in
pop
mov
dec
imul
lock
movs
sahf
fmul
or
sub
mov
fadd
add
es
dec
ins
sub
inc
or
xchg
scas
je
int3
shl
cmp
shl
pop
xchg
and
jmp
push
sub
dec
aas
inc
rcl
sub
push
shr
inc
pop
pop
jns
or
adc
pop
adc
mov
or
retf
shl
adc
xchg
adc
popf
call
test
jl
mov
mov
jle
mov
fild
fild
cmc
xor
ret
pusha
push
cmp
push
outs
adc
jae
push
sbb
aad
in
mov
jbe
fidivr
cwde
add
das
ret
adc
xchg
adc
dec
cmp
pop
clc
clc
je
cmp
aas
fisubr
sbb
dec
and
outs
icebp
icebp
cwde
mov
je
push
xor
adc
add
mov
pusha
or
add
loop
add
movs
or
adc
mov
imul
data16
and
and
xchg
out
sbb
adc
add
add
add
jne
and
mov
stos
sub
inc
js
pusha
shl
movs
xor
leave
(bad)
shld
test
push
add
dec
xchg
push
mov
cmps
adc
xor
imul
mov
xchg
or
icebp
cwde
sub
outs
push
shr
sbb
push
push
icebp
inc
sbb
shr
mov
std
jle
iret
gs
or
jmp
mov
push
xchg
jmp
add
sub
and
or
mov
test
pusha
test
sub
lock
mov
neg
adc
sub
sbb
addr16
fdiv
or
push
dec
add
shr
and
or
mov
js
mov
cmp
mov
xor
add
lea
add
mov
lahf
cmp
adc
mov
les
inc
push
mov
cmps
jl
dec
lea
sbb
sbb
pop
mov
popf
push
mov
dec
(bad)
and
or
xchg
xor
ret
inc
hlt
add
and
out
imul
mov
mov
dec
scas
aaa
mov
cmp
fadd
cmps
movs
mov
sub
or
mov
mov
cs
adc
ffree
test
dec
or
add
mov
sahf
xchg
lods
jbe
es
push
lock
sti
xor
pusha
in
mov
nop
xor
movs
inc
dec
test
popf
cmp
or
mov
in
xchg
push
(bad)
ror
push
sub
adc
jp
push
add
rcl
adc
ror
imul
xchg
dec
mov
jp
pop
enter
add
cmp
leave
jmp
in
test
jle
pop
xlat
inc
and
add
sub
dec
outs
nop
xor
push
or
inc
xor
mov
pop
push
iret
add
aam
aas
adc
or
je
mov
or
dec
sbb
jp
(bad)
(bad)
push
(bad)
mov
jnp
jno
inc
or
lds
push
and
dec
push
cmp
xchg
push
and
or
mov
push
dec
adc
fdivr
mov
add
cs
in
push
jo
setp
pop
adc
sbb
dec
jmp
sbb
push
mov
and
add
cmp
cld
push
mov
fs
pop
mov
or
mov
aad
sbb
test
or
ins
push
dec
sbb
inc
push
mov
or
fdivr
aas
mov
xor
nop
sub
repnz
add
and
or
test
and
xchg
pop
adc
cmp
mov
push
and
xchg
sbb
dec
add
addr16
xor
sbb
adc
mov
dec
xor
dec
mov
add
addr16
shr
sldt
xor
jb
fnstcw
ins
jne
adc
xor
movs
ss
scas
inc
mov
leave
push
jo
jle
(bad)
cmp
jmp
jmp
push
jmp
in
push
punpcklwd
and
pop
add
mov
cmps
fcomp
outs
rcr
xor
je
nop
(bad)
pop
cs
or
sbb
add
pop
ror
add
sub
jl
bound
or
call
adc
jle
dec
mov
sub
repnz
stos
inc
push
popa
jae
inc
sti
test
jl
add
push
cli
and
sbb
dec
add
xchg
add
inc
dec
ins
xchg
sub
retf
dec
stc
push
test
fcmovu
xor
data16
pop
dec
and
add
inc
or
fwait
cld
push
sahf
rol
sbb
lods
sbb
out
sbb
xor
int3
mov
dec
adc
xchg
js
leave
adc
cdq
push
sub
push
adc
jp
js
push
ss
add
lea
add
cmp
popa
enter
xor
add
mov
sub
xor
test
(bad)
adc
add
retf
sub
test
lock
cwde
dec
ret
add
dec
pop
imul
cmps
sub
adc
mov
es
adc
dec
push
sub
xchg
jmp
mov
mov
mov
pop
in
test
in
cs
xor
lods
rcl
gs
mov
jo
and
xchg
dec
call
adc
mov
xchg
xor
test
or
daa
inc
imul
push
mov
inc
ds
cmps
lock
adc
pop
mov
sbb
sbb
push
je
sub
aaa
sbb
call
mov
shr
pop
test
retf
inc
imul
sbb
jge
push
or
rcr
ds
je
and
test
inc
mov
push
add
or
jo
scas
add
je
pop
in
cwde
push
shl
cmp
mov
rcl
or
test
add
dec
push
dec
test
in
cmp
fadd
and
adc
mov
xchg
mov
adc
jle
jnp
push
ja
and
xor
cdq
lods
cwde
mov
dec
inc
sub
mov
sub
icebp
or
mov
or
xchg
ror
sbb
and
and
int
xor
xor
cwde
inc
adc
sbb
int3
pop
xchg
push
or
lods
add
and
push
mov
(bad)
and
ins
xchg
push
add
mov
dec
lods
shl
movs
mov
dec
je
enter
lods
add
or
or
xor
sbb
and
loope
clc
add
or
inc
add
aaa
pop
aaa
(bad)
in
xchg
ins
fs
cwd
inc
pop
dec
mov
adc
mov
push
pop
sub
jns
mov
xor
neg
push
add
push
xchg
jae
add
enter
sbb
dec
push
pop
jns
push
pop
pop
mov
pop
rcr
loope
fcom
xor
sar
das
xor
es
add
fsubrp
mov
or
pop
inc
addr16
xor
push
daa
jmp
dec
xor
aad
add
inc
or
mov
add
prefetch
adc
fs
leave
xor
outs
rcr
xchg
pop
mov
mov
sahf
dec
cmp
cmps
add
pushf
or
or
iret
add
dec
fwait
js
xchg
adc
test
test
sbb
pop
popa
aaa
int3
add
cmp
retf
(bad)
xchg
mov
in
xchg
or
push
test
dec
mov
movs
cs
loopne
mov
mul
rol
sahf
push
in
into
mov
dec
mov
fidivr
push
dec
lods
and
(bad)
sbb
dec
cmp
mov
sbb
jne
add
sbb
cmp
stc
fcmovbe
lods
ret
gs
mov
and
mov
xchg
leave
test
or
hlt
add
ffree
and
retf
inc
and
mov
sub
inc
jo
mov
inc
add
rcl
fbld
sbb
(bad)
in
and
inc
cmp
test
pusha
sub
xchg
nop
adc
sub
add
add
ret
adc
daa
test
mov
inc
js
ds
mov
add
aaa
or
adc
and
test
jae
add
push
dec
inc
inc
js
loopne
bound
mov
xor
or
pop
loopne
add
movs
mov
sub
popf
inc
xchg
dec
cmp
xchg
add
sub
rol
and
cmp
mov
daa
push
mov
adc
dec
loopne
fcom
sbb
push
add
daa
aam
push
and
xor
sbb
mov
inc
mov
mov
and
or
(bad)
mov
gs
push
retf
pop
repz
fsubr
sbb
and
std
mov
dec
mov
je
jle
fs
sbb
dec
pop
fdivr
pop
fwait
jae
sbb
fisttp
in
int3
adc
addr16
ins
xor
daa
sbb
hlt
cwde
dec
inc
je
mov
xor
adc
and
add
lahf
lods
add
out
fisubr
lods
xchg
sbb
daa
adc
rol
sbb
inc
in
sub
mov
ret
leave
push
xor
lods
jbe
sub
test
xchg
mov
pusha
jnp
adc
jmp
or
xchg
or
adc
dec
je
xor
hlt
push
push
pop
adc
mov
sub
and
je
es
cwde
add
jl
or
int
pop
and
cmp
in
push
add
rcl
shr
mov
repnz
cmps
dec
sub
dec
push
mov
sbb
retf
ja
pop
add
lds
mov
iret
inc
mov
mov
mov
inc
mov
scas
xor
test
xchg
push
inc
xchg
aam
imul
cwde
mov
xchg
mov
push
add
sbb
xchg
or
inc
mov
dec
str
or
push
adc
add
xor
test
cmp
jns
xchg
xor
enter
retf
xchg
mov
jp
cmps
sbb
lods
or
dec
pop
popa
xor
popf
xor
or
or
mov
je
pop
push
and
xor
and
jmp
push
push
jno
add
adc
sti
xor
sbb
ins
pop
push
dec
and
popf
or
movs
bound
xchg
mov
enter
mov
es
nop
test
movs
inc
push
push
sbb
scas
rol
inc
sub
mov
fs
lods
(bad)
sub
xchg
fwait
inc
push
(bad)
mov
(bad)
scas
inc
clc
js
aas
mov
cmp
mov
mov
and
js
adc
or
and
pop
adc
xor
add
stos
movntq
pop
cmp
inc
pop
inc
push
in
adc
arpl
push
shl
icebp
cmp
and
mov
outs
pop
mov
cs
add
inc
add
sahf
fbstp
mov
inc
test
inc
push
add
shl
test
add
dec
push
and
sbb
lock
push
add
jo
call
push
add
sub
pop
rcr
adc
lods
adc
add
push
xor
aaa
cmp
pop
add
or
data16
aaa
jle
inc
jno
(bad)
ror
pop
push
jbe
inc
xor
fstp
mov
aaa
pop
sbb
sub
pop
inc
cmps
in
retf
sbb
adc
imul
cs
jo
push
xchg
mov
fldcw
test
jg
xchg
cmp
or
shl
fsub
jg
pop
push
out
jmp
push
xor
stos
arpl
dec
or
ret
leave
push
push
sbb
mov
inc
arpl
pop
adc
movs
cmp
mov
adc
mov
pusha
sub
or
xchg
sub
in
and
imul
mov
jle
sbb
push
dec
adc
mov
idiv
push
push
out
in
addr16
add
dec
or
or
cmp
xchg
mov
cmp
daa
push
mov
mov
es
jge
dec
clc
(bad)
push
jnp
pop
dec
sbb
mov
and
inc
sar
cmp
loopne
and
xchg
pop
pop
aad
adc
jle
pop
std
lds
test
repnz
xor
or
cmp
or
inc
or
loope
jns
xor
in
out
pop
mov
outs
dec
jne
xchg
jmp
push
push
jmp
mov
mov
pop
loop
call
push
dec
and
stos
or
and
cmps
pop
and
rol
mov
and
mov
xor
cwde
add
mov
sbb
mov
mov
loope
mov
or
cmps
int
fidiv
mov
sbb
cmp
leave
xchg
dec
mov
adc
shl
jnp
or
push
data16
dec
dec
(bad)
cmovo
scas
sub
jmp
dec
add
pop
mov
push
and
loopne
stc
test
icebp
stos
shl
push
ds
je
sub
and
loopne
fprem
or
push
mov
xchg
cwde
add
sbb
hlt
pusha
sbb
or
or
mov
imul
sbb
stc
sub
or
pop
sti
add
jmp
sub
dec
sbb
sub
sbb
dec
pop
jne
xor
jb
loop
clc
sub
inc
push
ret
nop
outs
sbb
out
dec
inc
ret
mov
xor
pop
test
jge
dec
pusha
loopne
lods
add
loope
push
and
push
xlat
jl
aad
add
pop
inc
add
jne
div
sub
add
mov
mov
aaa
iret
adc
mov
inc
ja
push
and
ins
and
add
sub
movs
adc
jl
imul
cmp
xor
test
cmps
inc
daa
jo
push
scas
xor
aas
test
mov
xlat
push
add
jb
adc
rol
cwde
dec
adc
mov
adc
inc
or
ins
mov
imul
mov
push
aad
test
adc
or
arpl
in
test
test
sub
or
add
ret
and
or
jmp
daa
sub
adc
push
daa
sub
imul
add
add
nop
loopne
adc
call
push
dec
push
xchg
add
inc
sbb
rol
sbb
push
lock
and
mov
jge
xor
sbb
addr16
lock
out
cmp
jmp
jnp
inc
sbb
mov
and
and
ret
js
fild
je
cmp
jne
test
push
enter
push
xor
das
jl
adc
mov
inc
dec
sbb
add
imul
xchg
xor
push
sbb
push
pop
xchg
inc
je
push
pop
add
mov
sbb
dec
sbb
pop
outs
or
add
(bad)
sbb
add
sbb
retf
jmp
or
ret
icebp
sbb
out
xchg
ss
mov
mov
lahf
test
add
daa
retf
xor
stos
adc
and
jecxz
push
push
fsubr
out
cdq
xchg
or
cmp
cmp
sub
jge
jmp
jl
add
xor
prefetchnta
inc
addr16
xchg
pusha
outs
adc
stos
mov
sub
outs
dec
ficom
pop
les
repnz
mov
test
movs
test
fistp
mov
imul
sbb
sub
push
nop
add
je
mov
mov
xchg
sbb
imul
test
or
sbb
sbb
jl
retf
ja
iret
push
cmp
pop
add
push
stc
add
test
push
mov
iret
enter
xor
sbb
not
push
js
jmp
or
inc
test
pop
jmp
push
fs
mov
and
inc
iret
pop
hlt
or
pop
pusha
pusha
out
sub
inc
pop
or
cmps
cdq
xor
jbe
jle
loope
in
cdq
adc
lods
push
mov
pushf
or
or
mov
and
or
dec
or
inc
pop
dec
add
sub
sbb
cmps
push
movs
add
pop
mov
inc
inc
push
shr
sbb
leave
dec
rcr
pop
mov
cmp
inc
sbb
push
and
xchg
into
xor
je
adc
sbb
sub
mov
cdq
xchg
lock
xlat
jmp
jp
jns
pop
rcl
sub
adc
retf
test
push
xor
push
add
es
dec
adc
push
sbb
xor
and
xchg
ss
push
(bad)
imul
loope
pop
add
loopne
stos
out
lock
ret
push
mov
daa
movs
data16
cld
lds
add
xor
xor
loop
popa
xor
pop
out
adc
xlat
jo
pushf
and
aas
aaa
pop
mov
fisttp
push
adc
in
mov
dec
push
cmp
nop
test
sbb
aas
xchg
cmp
mov
in
cmp
add
inc
dec
imul
test
lea
(bad)
popa
add
sbb
movs
mov
popa
or
mov
xlat
or
shl
mov
lods
add
ins
or
push
cmp
shl
mov
dec
outs
into
inc
jns
push
nop
test
pop
loope
or
call
aaa
pop
inc
int3
xlat
xchg
popa
cmp
pop
stc
jns
test
nop
leave
or
leave
push
add
mov
lea
adc
or
sbb
pop
pop
cmp
jbe
push
jne
test
and
cmp
push
sti
xor
mov
nop
jb
retf
pop
push
jg
xchg
jno
retf
xor
es
jnp
cmp
test
jecxz
jo
imul
pop
inc
test
pushf
adc
dec
cs
cmp
pop
dec
repnz
cmp
sbb
in
jg
adc
jbe
dec
arpl
add
gs
pop
clc
cmp
fld
sar
jge
(bad)
retf
inc
adc
push
fiadd
jp
stos
pop
outs
add
pop
push
and
push
jp
loopne
jbe
xlat
push
mov
cmc
pushw
xor
nop
push
xchg
ins
lods
lea
add
je
inc
xchg
retf
xchg
test
fild
cwde
dec
aam
mov
sub
jno
sbb
ret
sar
xor
push
adc
sub
xor
xchg
ins
pop
leave
leave
call
and
rcr
jo
retf
jo
pop
dec
(bad)
sub
adc
add
add
dec
mov
or
call
sub
add
jle
clc
fbstp
fs
je
add
(bad)
push
xchg
fld
dec
cmp
add
call
sbb
xor
sbb
jg
fcom
cs
call
or
(bad)
jmp
or
daa
lods
or
ins
mov
lahf
or
dec
dec
aaa
ss
loop
cmp
xchg
(bad)
xor
gs
es
sahf
xor
ja
add
lods
outs
retf
jae
mov
mov
popf
push
xor
cs
loope
pop
dec
sub
loopne
push
or
call
and
xchg
popa
xor
mov
or
inc
and
mov
les
mov
adc
push
mov
cdq
mov
icebp
pop
loop
fdiv
loope
jmp
cs
cmp
mov
dec
pop
dec
loopne
movs
jle
or
jo
and
push
dec
cdq
sbb
icebp
sbb
in
xchg
(bad)
shl
rol
adc
pop
xchg
shr
dec
mov
xchg
push
into
add
adc
push
push
cmp
ins
(bad)
xchg
imul
dec
sbb
loop
sbb
pop
and
add
rcl
hlt
pushf
cmc
pop
inc
into
pop
sti
push
stos
shl
inc
ins
inc
pop
or
adc
adc
call
push
inc
out
dec
pop
mov
xor
les
popf
xor
xchg
sbb
sbb
and
and
or
sub
imul
call
clc
leave
sub
jo
int3
push
jo
ss
xor
push
into
xchg
mov
mov
leave
inc
aam
les
sbb
ret
mov
scas
pop
mov
or
xor
or
les
cmc
inc
call
movs
mov
push
add
mov
inc
push
push
mov
xor
xchg
or
add
les
mov
or
xchg
call
jnp
mov
sbb
sbb
out
pop
and
cld
dec
or
add
loopne
cmp
test
xor
es
sbb
jle
stc
call
scas
mov
(bad)
call
lock
imul
lea
or
mov
adc
lods
(bad)
in
test
push
pop
mov
in
jne
add
pop
ror
cmp
jle
in
pusha
call
add
xor
adc
cmps
cmp
add
movs
pusha
shr
lock
cmps
mov
mov
dec
jo
xchg
mov
mov
and
scas
adc
xchg
hlt
dec
dec
sub
popf
add
cmp
sbb
mov
mov
add
mov
xor
push
xchg
add
fsub
data16
enter
call
push
adc
sub
push
sbb
xchg
push
or
cmp
jl
inc
jb
push
js
push
or
je
sahf
jmp
cwde
xchg
inc
loopne
adc
mov
ss
or
cmp
add
push
adc
test
jbe
jmp
or
or
loopne
sub
lds
(bad)
fcom
ss
push
pinsrw
in
inc
or
iret
mov
aas
std
dec
and
loop
in
rol
mov
inc
mov
mov
jno
mov
jno
mov
and
rcr
sub
xor
add
push
stc
aaa
popa
jl
js
cdq
mov
add
pushf
adc
jns
rcl
jmp
ins
mov
cmp
and
mov
xor
(bad)
jge
mov
jmp
fild
cmp
pop
inc
hlt
xchg
mov
push
jb
rcl
(bad)
jmp
fcmovu
jo
sbb
mov
dec
stos
mov
ret
xor
popa
(bad)
mov
or
imul
lock
jp
aaa
mov
xor
inc
pop
std
adc
mov
dec
sar
mov
mov
dec
sub
imul
xchg
fst
dec
pop
jb
add
add
in
sub
mov
xchg
and
xor
adc
push
inc
sbb
sub
add
sub
(bad)
repnz
fcom
or
ror
inc
mov
push
push
adc
cmp
push
add
rcl
push
and
xchg
inc
pusha
adc
push
and
loop
or
add
in
in
and
or
ja
pop
pushf
pop
nop
inc
or
adc
jns
push
add
xchg
popf
and
and
jo
sbb
inc
sub
push
add
inc
mov
jmp
loope
test
in
das
jmp
sbb
mov
dec
cdq
ret
jg
and
loopne
dec
adc
adc
(bad)
into
sbb
or
adc
mov
xchg
or
push
and
xchg
fdivr
out
int
add
dec
cmp
(bad)
or
and
jl
fwait
pop
sub
out
call
or
mov
dec
aam
sub
fwait
pop
jle
pop
add
inc
fdiv
dec
or
mov
and
mov
add
inc
or
mov
inc
call
cmp
jmp
add
add
aas
sar
retf
xchg
inc
mov
pusha
add
inc
sbb
ror
jg
and
sbb
enter
xchg
das
stos
sub
sub
je
add
pop
call
or
fcmovbe
inc
ror
into
pop
je
mov
add
movs
jle
cmps
push
push
inc
movs
jp
add
push
inc
fs
pop
add
cmc
and
sbb
leave
push
arpl
fisubr
sub
fwait
jle
push
sbb
clc
int3
xchg
dec
nop
pushf
mov
in
stc
xchg
xchg
push
and
loopne
setb
fdivr
or
xor
loopne
cmp
inc
movs
cmp
cmp
sbb
add
pop
je
jne
or
das
xor
mov
in
push
into
mov
stos
or
ret
add
rcr
les
inc
icebp
pop
push
add
dec
or
mov
xrelease
jmp
imul
aad
add
fldenv
add
idiv
push
jae
push
or
(bad)
lds
dec
lea
nop
addr16
xor
jle
jmp
xchg
mov
neg
jo
call
pop
and
xchg
adc
sbb
jl
dec
or
xlat
bound
sbb
aam
aam
and
or
jb
mov
sbb
jnp
imul
fwait
push
add
in
and
add
and
test
xchg
xor
sub
std
xchg
xor
sbb
sub
cmp
arpl
inc
cdq
lea
les
mov
add
test
arpl
push
pop
jb
fsubr
gs
sbb
pop
dec
fdivr
adc
mov
loopne
sbb
mov
pushf
outs
xlat
stc
loope
or
sub
sub
dec
imul
dec
adc
test
cld
fcom
mov
xor
add
mov
xchg
push
pop
pusha
mov
dec
loop
inc
inc
xchg
shl
add
ins
mov
adc
cmp
or
bound
add
xchg
inc
shl
dec
clc
(bad)
mov
cmp
add
adc
inc
test
and
xchg
and
jns
hlt
xor
xor
xchg
mov
and
inc
les
lods
js
mov
adc
(bad)
add
or
not
adc
push
movs
xchg
and
int
inc
sbb
pushw
(bad)
ins
pop
pop
movs
lods
xor
sub
pop
push
(bad)
sbb
push
adc
add
sbb
sub
adc
add
test
cwde
mov
or
imul
inc
mov
mov
ret
test
add
push
adc
cmp
mov
mov
push
sub
add
and
retf
fs
add
loopne
in
movs
outs
sbb
retf
adc
cdq
mov
xor
pusha
sbb
mov
inc
cmp
enter
add
xchg
retf
xor
je
jp
fs
fild
test
pop
cmp
and
push
add
push
fild
enter
in
inc
fs
mov
mov
xchg
xchg
sub
xchg
add
pop
(bad)
pushf
lock
adc
in
scas
retf
fiadd
enter
nop
in
push
fcomp
adc
add
int
aam
aam
and
mov
cs
xchg
inc
add
pushf
(bad)
jo
cmp
shr
and
xlat
int3
sub
pop
push
mov
inc
pop
add
rol
adc
nop
aas
shl
inc
lea
pushf
dec
inc
push
and
dec
push
jo
ss
imul
or
retf
mov
ret
arpl
shl
cmps
jge
sub
push
int3
sahf
dec
fstp
mov
xchg
ds
dec
xchg
push
add
or
and
xor
loope
arpl
push
dec
jnp
jo
test
xor
mov
mov
inc
cdq
jno
push
sub
jns
neg
add
(bad)
in
mov
and
adc
shl
and
dec
sbb
push
mov
test
mov
pushf
xor
mov
jg
add
or
sbb
xor
push
inc
xchg
inc
sbb
cmp
xchg
or
jnp
dec
sub
imul
xor
jns
ja
mov
shl
jbe
xchg
jge
in
inc
adc
shl
jo
ja
nop
pop
mov
jge
fwait
cmp
or
xor
push
cmp
fs
shl
mov
and
add
jg
ror
xchg
inc
cld
and
je
call
repz
xchg
xor
xor
test
pusha
lods
sbb
cmp
enter
movs
jae
es
jmp
and
rcr
or
and
rol
movs
mov
pusha
(bad)
iret
push
ins
or
pop
leave
or
inc
daa
test
mov
pop
mwait
lods
js
scas
pop
mov
fcomp
jo
add
jno
sbb
movs
fadd
mov
jmp
and
sbb
mov
fs
ret
or
push
shl
sub
je
dec
je
add
inc
and
or
cmovns
adc
adc
sahf
shl
gs
sbb
xchg
push
shr
dec
fistp
imul
cmp
sar
sub
outs
xchg
aad
fiadd
fild
add
sbb
jmp
sbb
push
jg
dec
je
js
push
adc
mov
iret
sub
(bad)
std
mov
adc
adc
mov
push
and
mov
pushf
add
sbb
inc
test
cli
mov
ins
inc
push
sub
mov
rcr
xchg
jo
shr
mov
pop
cmp
pop
and
aas
xchg
adc
dec
add
cwde
add
push
xlat
data16
aaa
jmp
aaa
xor
mov
cwde
jmp
push
mov
mov
int3
sub
pop
fidiv
inc
cmp
pop
mov
jl
adc
add
lods
pop
es
pop
mov
idiv
pop
and
push
xor
fdivr
test
inc
xchg
cmp
test
and
sbb
add
fadd
mov
pusha
icebp
les
push
sub
dec
pushf
mov
bound
jmp
ds
jl
adc
shl
push
sbb
call
nop
pop
shr
test
sub
pop
push
mov
sub
cmps
movs
sbb
popa
stos
xchg
out
sub
push
daa
loopne
mov
jg
fisubr
push
fadd
retf
mov
call
add
jae
retf
sbb
add
sub
add
xchg
mov
(bad)
mov
pop
sar
push
push
xor
test
xchg
push
fdivr
mov
pusha
add
push
fadd
pop
pop
sub
mov
jbe
jmp
cmp
addr16
outs
or
pop
es
mov
mov
sbb
and
test
adc
pop
jle
dec
shl
and
movs
or
in
push
inc
xchg
and
xor
ret
push
or
call
inc
js
sub
pop
gs
imul
cmps
lea
adc
mov
and
or
sbb
ficomp
ss
aas
jns
mov
(bad)
and
mov
mov
pop
(bad)
addr16
pop
scas
pop
mov
mov
jns
inc
cdq
pop
dec
pop
xor
xchg
movs
and
enter
cmps
lea
loope
cmp
add
or
test
aas
and
and
jnp
and
pop
or
jmp
mov
adc
fiadd
dec
and
jmp
loopne
cs
rcr
hlt
sar
dec
adc
mov
mov
call
or
pop
mov
icebp
cli
xor
ins
sbb
xchg
mul
ins
pushf
xor
test
pop
jmp
and
add
cmc
push
jo
push
cmps
movs
ret
shr
es
nop
add
arpl
xchg
mov
sub
mov
and
and
mov
test
jle
push
shl
add
icebp
adc
cmps
sbb
mov
sub
pop
add
mov
push
add
xor
lods
jne
push
test
js
push
lock
dec
xchg
into
(bad)
hlt
dec
dec
or
fdiv
mov
inc
iret
adc
mov
mov
dec
jb
push
push
push
sbb
mov
je
xchg
repz
fwait
mov
push
mov
sub
jmp
push
dec
cmps
pop
jo
cmp
add
jne
lods
sar
lsl
imul
shr
pop
push
nop
jge
push
push
push
add
mov
ins
aam
cmps
mov
dec
fld
sbb
xor
add
test
cmovp
and
cwde
rep
sub
mov
and
and
sbb
jp
shl
(bad)
shl
fiadd
cmp
movs
push
sub
and
je
or
das
jbe
push
hlt
pop
inc
cld
ss
int3
cmp
lahf
retf
out
push
sbb
sub
or
stc
sbb
add
movs
jmp
popa
call
and
int3
add
not
or
(bad)
nop
call
push
fnstenv
jg
mov
mov
cmp
sbb
in
and
push
and
mov
dec
js
repnz
and
sbb
sbb
addr16
(bad)
cmps
aam
in
sbb
out
adc
sbb
cld
arpl
(bad)
int
arpl
sub
iret
loopne
add
add
mov
push
and
outs
sub
jne
pop
arpl
push
push
or
sar
and
ret
ret
mov
push
mov
mov
retf
mov
push
clc
mov
sbb
shl
or
inc
popa
jne
cdq
idiv
cmps
pusha
add
rcr
hlt
retf
fistp
cli
retf
add
cmp
adc
cld
cld
sti
xchg
ror
cmp
mov
cmp
rol
repz
mov
add
stos
int
add
or
push
fstp
xor
sbb
out
xor
mov
or
or
aam
jbe
push
mov
lea
xlat
pop
jne
lds
mov
ret
add
fs
or
inc
mov
xlat
in
popa
aaa
add
mov
sahf
xchg
sub
jl
xchg
adc
mov
dec
enter
or
xchg
mov
sub
or
inc
or
xlat
cmc
add
dec
push
cmp
inc
outs
mov
sub
sub
mov
mov
inc
mul
fcmovne
inc
sti
stos
loope
popa
and
xchg
shl
or
adc
or
ins
(bad)
je
popa
mov
lods
inc
xor
sbb
xor
(bad)
not
xor
adc
aam
sub
mov
retf
repz
imul
scas
mov
mov
test
mov
lock
mov
pop
add
xchg
lock
(bad)
sub
push
lahf
stos
adc
ror
push
or
es
out
mov
imul
lods
daa
leave
in
sub
mov
ss
(bad)
rol
add
movs
std
or
jg
jne
xchg
es
mov
imul
lods
push
test
push
dec
test
cld
pop
push
pop
adc
push
sbb
sbb
pusha
outs
xchg
test
fs
and
lods
or
cmp
fs
dec
adc
ins
jmp
xchg
repz
dec
sub
cmp
cdq
les
test
mov
mov
repz
inc
sub
clc
xor
sbb
sub
xchg
retf
mov
cmp
push
jno
sub
add
adc
mov
add
(bad)
push
les
xlat
xlat
add
sbb
or
loopne
fisttp
ret
pop
popa
ss
adc
retf
scas
clc
lahf
dec
dec
inc
inc
jge
leave
arpl
mov
hlt
push
push
leave
or
dec
gs
cmp
pop
adc
pop
pop
ins
pop
enter
ret
push
shl
adc
push
xchg
xor
outs
adc
jb
or
retf
shl
push
sub
pop
cmp
lea
ins
adc
retf
add
pop
sub
das
push
loop
(bad)
cs
popa
pop
(bad)
push
cmp
or
jne
lahf
cmp
cmp
shrd
jo
fistp
add
(bad)
fmul
pop
mov
pop
in
ret
or
sbb
fs
xor
fprem
cli
or
imul
pusha
add
push
arpl
rcl
or
dec
mov
cmp
les
int3
jo
adc
pop
xor
in
or
inc
rcr
punpcklbw
pop
rol
push
pop
cmp
retf
jne
mov
or
pop
rcl
inc
mov
out
and
xchg
int3
and
or
or
imul
dec
xlat
xor
rcl
pushf
pushf
cld
pop
enter
ror
xchg
cmps
xor
(bad)
movs
xor
add
test
add
inc
dec
push
add
js
inc
or
or
and
mov
and
pushf
push
retfw
fisubr
pop
js
mov
add
repz
les
mov
sar
push
or
dec
mov
mov
add
cmp
add
arpl
inc
mov
add
fwait
xlat
sub
dec
dec
or
sub
and
add
scas
xchg
xor
jecxz
mov
loop
test
or
rcl
les
pop
in
jp
pushf
cmp
cwde
mov
or
adc
aam
push
mov
adc
(bad)
ds
adc
add
add
cmp
add
mov
mov
or
into
aam
adc
xchg
pop
sbb
cmp
add
push
mov
lock
loope
push
sbb
push
fld
sti
jecxz
mov
xor
sbb
cmc
test
cld
or
and
cmp
loope
mov
mov
pop
adc
xchg
aam
in
retf
fadd
pushf
(bad)
sub
cs
and
add
cmp
pop
stos
push
push
ins
cmps
push
pop
lods
mov
movs
inc
sbb
out
inc
add
push
inc
push
push
inc
pop
xor
test
inc
xor
aad
adc
cmp
dec
add
jb
enter
and
adc
dec
repnz
loop
mov
and
(bad)
mov
aad
cli
or
sub
movs
or
mov
rol
std
adc
add
imul
in
mov
cmps
test
pop
mov
add
or
out
lods
outs
inc
adc
arpl
(bad)
scas
mov
adc
mov
adc
jne
sti
add
sub
sub
sub
sbb
pop
xor
mov
(bad)
movs
icebp
jne
les
sbb
mov
jns
(bad)
mov
rol
cmp
daa
and
nop
inc
sub
loopne
sbb
scas
push
xchg
pop
fadd
xchg
xchg
test
xor
loope
jge
imul
mov
xor
aam
test
xchg
fmul
dec
cmc
pop
fwait
(bad)
adc
xor
dec
sti
sub
or
mov
shl
cmps
add
cmps
gs
or
mov
aaa
sub
mov
and
fs
popa
cld
hlt
dec
sbb
sub
shr
sbb
adc
lahf
dec
sbb
mov
cmp
xchg
test
add
add
ret
adc
jmp
push
adc
sbb
cld
clc
cmp
sbb
sub
pushf
and
and
add
scas
xchg
out
cld
sbb
pop
hlt
cld
cmp
sbb
sbb
jne
adc
dec
fadd
inc
dec
add
fmul
in
sbb
aas
arpl
or
daa
jl
and
sbb
mov
xlat
hlt
ss
or
mov
and
lea
in
inc
dec
repz
call
cmc
sub
popa
pushf
xor
adc
and
scas
sub
js
inc
ret
aam
int
xchg
cdq
add
cmp
mov
(bad)
adc
cld
je
test
daa
or
add
jp
sub
push
pop
stc
fwait
push
jp
out
xchg
call
jnp
xchg
int3
adc
popf
and
add
add
xor
mov
mov
mov
or
xchg
add
xor
test
mov
cmp
inc
xchg
xor
inc
add
cwde
(bad)
mov
test
jns
and
inc
cs
je
xchg
mov
lds
and
sub
mov
nop
and
cwde
mov
aad
push
and
call
rcl
rcr
cmps
push
xchg
pushf
imul
or
mov
lea
int
mov
rol
sub
mov
xlat
push
jecxz
dec
les
cmp
inc
dec
dec
(bad)
cld
fwait
shl
popa
jmp
jo
scas
clc
mov
inc
mov
or
ins
test
mov
and
push
cmc
icebp
sbb
gs
adc
cmp
(bad)
out
jmp
dec
sub
loopne
rcr
adc
adc
ror
jnp
dec
cmp
(bad)
cmp
adc
and
call
push
jmp
push
test
(bad)
clc
ins
sub
test
mov
push
mov
mov
push
pop
lods
mov
sbb
push
je
mov
or
sbb
mov
xor
nop
test
push
in
or
nop
sub
shl
mov
ins
or
xor
mov
cmp
inc
adc
or
popa
popf
and
jle
ss
jge
push
mov
rol
push
(bad)
mov
sbb
push
pop
movs
pop
or
rol
push
mov
mov
jmp
inc
push
cmc
sbb
shl
jge
imul
add
push
aaa
(bad)
mov
neg
inc
add
nop
in
add
pushf
lock
dec
mov
inc
or
and
xor
call
cld
and
inc
adc
sar
push
inc
ror
push
dec
push
and
sub
adc
or
sub
push
lahf
dec
sbb
les
inc
fdivr
lea
xchg
mov
mov
inc
test
loopne
aam
dec
cwde
sbb
ins
mov
sbb
getsec
shr
xchg
inc
arpl
sub
or
push
push
push
outs
shr
push
movs
in
popf
mov
xchg
xor
mov
nop
fist
or
sbb
sub
js
pop
xchg
jle
pop
gs
sub
sbb
lock
gs
shl
dec
xor
pop
js
cdq
xor
dec
ins
cmps
xlat
in
mov
inc
cmp
push
push
dec
xor
push
cli
inc
adc
and
push
ror
sbb
js
sar
ret
loopne
mov
xor
mov
mov
and
mov
mov
inc
inc
adc
or
shl
mov
add
inc
xor
mov
adc
add
mov
adc
pop
xor
popf
jmp
inc
mov
mov
inc
ins
or
gs
lods
fwait
jl
jle
and
cmp
push
lea
or
jecxz
add
dec
pop
xchg
xor
cmp
andnps
mov
mov
sbb
mov
push
push
mov
adc
mov
fwait
push
sub
mov
cmp
push
inc
xor
add
in
test
addr16
xor
sbb
lea
jl
add
mov
add
or
inc
shl
push
xchg
shl
inc
retf
dec
pop
sbb
clc
sahf
xor
and
push
mov
add
adc
sbb
xor
gs
dec
add
rcr
jns
dec
add
das
push
hlt
shl
imul
push
loope
xchg
in
arpl
xor
jmp
xor
in
xchg
mov
lahf
bound
push
pop
or
pushf
fs
imul
mov
fs
jge
sbb
std
adc
xor
adc
inc
popa
push
and
test
outs
aad
jns
mov
cli
mov
mov
cs
out
push
sbb
mov
call
cmp
loope
lods
add
out
pop
adc
sbb
sub
and
test
repnz
addr16
mov
jecxz
and
mov
pop
dec
icebp
test
adc
jo
add
or
cmps
scas
(bad)
sti
sub
test
sub
inc
stos
pop
pusha
(bad)
fcmovbe
inc
cwde
dec
adc
adc
mov
icebp
fs
sbb
ret
jmp
aas
jnp
clc
popa
icebp
cmp
loop
popa
mov
jmp
fistp
add
fs
add
jmp
jl
neg
mov
lock
dec
pusha
add
inc
inc
(bad)
stos
mov
aaa
rcl
lods
ins
rcl
inc
in
addr16
pop
test
sub
jo
and
into
cmp
fistp
fs
or
les
and
loope
int3
or
mov
jl
into
enter
ja
and
or
jne
push
jnp
les
test
jb
js
ror
mov
push
push
ret
(bad)
adc
inc
inc
pop
popa
mov
test
lods
adc
sbb
xchg
sahf
imul
cdq
pop
sub
mov
or
inc
adc
xchg
dec
sub
mov
mov
jle
shr
mov
pop
sub
jne
push
xchg
mov
lods
push
jge
and
lahf
fwait
call
jl
add
mov
ror
inc
push
mov
test
adc
jl
or
test
xchg
enter
ret
sub
adc
dec
sub
jo
sub
pop
and
rcr
push
push
aaa
push
outs
add
loope
or
push
jo
add
cmp
add
and
retf
addr16
loope
and
fdiv
bound
ret
jle
mov
call
cmp
rol
push
or
pop
and
sub
cmp
jbe
xchg
pop
fcomp
dec
push
push
inc
nop
push
adc
jnp
ret
jle
int
data16
cmps
loopne
inc
jne
pop
pop
and
imul
add
or
or
add
cmc
mov
jbe
jne
and
sub
in
lods
pop
cmp
ins
xor
jp
sub
push
sbb
loope
sub
sub
mov
nop
mov
dec
sbb
rol
call
jb
out
xor
out
pushf
dec
or
push
das
js
ins
inc
mov
xor
lods
dec
jnp
aad
popa
dec
push
push
je
mov
outs
std
jg
sar
xchg
sbb
pop
popf
gs
push
add
call
xchg
(bad)
pop
sbb
ret
dec
outs
mov
outs
dec
mov
test
shl
nop
add
cmp
pop
cdq
dec
cs
sbb
sbb
dec
adc
sbb
sbb
or
jo
inc
jae
sbb
mov
add
push
mov
push
cmp
sub
sar
mov
bound
inc
hlt
jae
jl
pop
neg
push
sbb
push
jmp
div
das
(bad)
mov
or
xchg
cmp
scas
add
jmp
mov
and
and
push
sub
int3
mov
or
cwde
mov
jae
xchg
push
div
das
sbb
push
push
dec
cmp
mov
clc
fiadd
add
mov
fsub
sbb
arpl
in
aas
pop
punpcklwd
addr16
cmps
and
nop
pop
push
in
psubd
sub
shl
or
cdq
adc
daa
mov
fst
dec
les
jnp
push
lods
xor
scas
aam
xchg
int
jne
or
jo
xor
rcl
sbb
(bad)
mov
aam
push
cmps
lea
repnz
and
call
pop
pop
add
dec
int
lds
pop
inc
fisub
mov
nop
add
add
dec
inc
push
pop
dec
add
test
sub
(bad)
mov
sub
gs
mov
jnp
inc
xchg
popf
mov
or
sbb
movs
xor
pushf
adc
cmp
lea
xchg
mov
push
xor
mov
das
call
jo
push
add
daa
or
mov
sub
and
adc
int3
inc
or
xchg
test
push
retf
popa
inc
fnstcw
push
xor
retf
test
push
add
add
or
xchg
inc
push
lds
mov
mov
adc
add
movs
pop
push
pop
sub
sub
stos
push
xchg
outs
ret
sbb
(bad)
mov
xchg
stc
dec
cdq
dec
and
xchg
pop
sub
(bad)
sbb
inc
sbb
retf
cmp
inc
and
cdq
and
sti
mov
test
mov
mov
sbb
js
hlt
js
mov
enter
add
add
inc
pusha
sub
(bad)
and
in
push
xchg
inc
dec
adc
ss
aam
mov
dec
pop
or
movs
and
mov
inc
push
inc
and
rcr
sub
xchg
lods
add
movzx
sub
out
adc
cmp
jo
add
test
jne
cwde
dec
push
je
pop
mov
les
arpl
stos
cli
js
xchg
out
cmp
sbb
xor
and
int3
ret
sub
rol
sub
jmp
cmp
pop
inc
scas
outs
mov
(bad)
adc
dec
xchg
xchg
je
clc
fwait
test
xchg
jge
movs
inc
mov
(bad)
rcl
mov
jl
adc
add
dec
mov
jae
daa
sbb
mov
popa
adc
(bad)
das
sbb
mov
pop
aas
jno
and
dec
push
adc
dec
dec
fmul
dec
es
lock
push
mov
test
(bad)
hlt
sbb
and
aas
mov
pop
push
push
adc
push
xor
add
dec
inc
popf
fadd
retf
and
pop
xchg
sbb
stos
adc
inc
pop
adc
enter
pop
or
jmp
aad
dec
adc
jecxz
cmp
mov
add
aad
push
sub
loope
and
pusha
cdq
inc
shl
jnp
dec
sub
aas
pushf
and
test
ror
mov
rcr
cmp
gs
cmp
repz
jno
sub
dec
imul
bound
jmp
cmp
hlt
call
inc
inc
cmovne
jo
rcl
dec
dec
sbb
sbb
cmp
mov
xor
mov
rcl
pop
cld
pop
call
mov
jb
adc
push
sbb
test
dec
or
inc
inc
jns
icebp
dec
mov
or
push
mov
shl
xor
dec
mov
clc
mov
cmp
xor
stc
jle
add
xor
push
sub
xchg
dec
fldenv
xchg
js
aaa
popa
je
adc
ins
dec
mov
sar
icebp
shl
mov
add
movs
repz
and
add
jg
ret
mov
cmp
xlat
jbe
sub
test
test
les
mov
push
or
push
push
std
cmp
jns
imul
push
and
jne
add
jle
adc
xchg
iret
pop
scas
inc
imul
rol
nop
jbe
outs
push
push
cmc
add
push
(bad)
xchg
mov
fnstcw
cmp
and
cli
imul
sbb
aaa
mov
jns
xor
out
jmp
xchg
mov
adc
fild
adc
jns
cmps
imul
imul
xchg
pop
nop
push
push
jb
or
inc
push
retf
aas
or
adc
inc
mov
popa
arpl
or
add
sar
push
inc
xor
imul
sbb
repz
inc
pop
dec
fwait
dec
lds
rol
mov
gs
or
push
xor
imul
mov
mov
in
jne
push
arpl
mov
test
cmp
xor
iret
sub
gs
mov
pop
(bad)
repz
mov
repnz
sub
mov
scas
dec
pop
rol
or
call
inc
dec
xchg
sub
pop
mov
jl
mov
mov
fdiv
push
or
or
fs
(bad)
aam
mov
daa
sahf
fcom
jb
(bad)
ror
aam
or
ds
repz
popa
adc
in
rol
mov
sbb
xor
aad
jmp
pop
push
xchg
das
lds
pop
cs
adc
add
inc
out
movs
push
ret
add
mov
xchg
(bad)
into
test
or
shl
inc
bound
push
mov
cmp
(bad)
ja
add
fbstp
and
dec
imul
jecxz
push
pop
add
push
sub
push
movs
pusha
push
lods
jl
push
xchg
mov
mov
sub
add
repz
retf
cmp
sub
and
dec
inc
stc
push
jns
adc
push
or
add
dec
mov
add
mov
pop
sub
sbb
ins
int
dec
std
mov
adc
pop
int
sbb
mov
sbb
dec
pop
or
or
inc
sub
fs
or
int3
jle
or
fs
and
push
ins
pusha
xor
cmp
rol
jo
(bad)
dec
mov
mov
pop
nop
mov
or
push
and
push
mov
mov
imul
cmp
or
sbb
enter
pop
out
(bad)
sub
dec
cmp
pop
pop
pop
push
mov
jne
xchg
sub
jmp
mov
push
push
je
int3
jne
or
add
mov
pop
sub
add
les
mov
pop
add
hlt
jmp
dec
push
xor
inc
xlat
popa
adc
xor
inc
push
pop
paddsw
mov
test
mov
add
aaa
fistp
and
nop
mov
or
test
pop
dec
mov
push
and
adc
push
or
add
inc
sahf
enter
inc
dec
loop
popf
push
(bad)
jb
stos
loope
iret
cmp
push
imul
dec
or
mov
pop
cmps
xchg
and
mov
sbb
repz
enter
adc
xor
icebp
mov
mov
xor
add
mov
adc
dec
xchg
cs
push
dec
pop
mov
mov
add
push
sub
fistp
or
xor
leave
xor
push
les
adc
mov
xor
xor
ins
ja
jl
sub
aam
mov
xchg
jl
dec
in
push
xor
inc
push
(bad)
cmp
test
or
adc
(bad)
es
add
dec
ret
pop
data16
xor
lock
sub
jmp
dec
ins
fsubr
fsubr
adc
ins
add
(bad)
mov
mov
or
pop
sub
es
sub
ret
pop
push
and
not
sub
push
lods
nop
xor
adc
or
fld
sub
push
mov
ins
xor
xor
adc
sub
into
sub
mov
inc
dec
or
sbb
sub
xor
xchg
push
add
pop
add
mov
mov
or
mov
mov
ret
add
xor
aad
loope
mov
test
sbb
push
cmp
sar
xor
dec
ror
xchg
mov
test
add
outs
adc
dec
cwde
fidiv
outs
stos
push
aam
and
push
sub
ret
and
push
xchg
or
ja
and
push
push
test
push
nop
rol
mov
push
xlat
imul
hlt
and
dec
fistp
inc
sub
movs
sub
xchg
movs
sub
push
ffreep
adc
jo
add
fld
test
imul
dec
sbb
inc
adc
enter
cli
std
mov
sbb
mov
add
push
and
cmp
ror
cld
pop
or
push
mov
pop
add
inc
fsubr
fcmove
dec
daa
inc
push
sbb
add
mov
loopne
cmp
loope
imul
mov
rcl
in
aaa
add
push
rcl
adc
cmp
push
data16
clc
out
clc
ins
addr16
or
ins
inc
inc
fwait
movs
sub
add
push
cld
pop
sub
ja
movs
inc
aas
fcom
push
pop
addr16
mul
clc
push
sub
adc
ret
pop
repz
push
arpl
xor
push
xor
dec
mov
add
adc
mov
mov
pop
mov
sub
jo
push
pusha
nop
sbb
mov
sbb
ror
dec
daa
dec
pop
adc
add
jbe
inc
xchg
or
or
je
or
and
loope
push
mov
sub
add
mov
call
or
jnp
dec
xchg
sub
push
shl
or
adc
sbb
xchg
add
ins
add
sbb
push
ret
add
js
retf
fwait
sbb
cwde
test
mov
add
xor
push
and
cmps
ds
pop
push
imul
call
jle
adc
js
lock
and
mov
retf
out
test
jecxz
gs
add
xlat
xor
pop
in
sbb
xor
xor
xor
sub
and
nop
push
add
aam
ja
fst
aam
mov
stc
stc
ficom
fisub
add
or
imul
ss
xchg
sbb
push
sbb
push
mov
add
add
or
sub
ret
js
adc
cmp
push
outs
mov
leave
pushf
push
ins
call
and
in
retf
and
addr16
jecxz
jl
iret
add
sub
mov
cwde
sub
or
cmp
mov
idiv
cmp
inc
icebp
dec
jb
loope
mov
sbb
test
(bad)
fimul
dec
cmp
cld
cdq
fwait
xchg
sbb
arpl
pop
push
mov
lods
aas
das
sub
xor
jae
dec
(bad)
in
mov
add
add
(bad)
nop
outs
adc
push
jge
add
fisttp
adc
fstp
adc
test
icebp
jno
cmp
and
shr
add
and
gs
push
cmp
test
push
bound
cld
add
push
push
mov
inc
xchg
mov
dec
mov
add
mov
inc
ins
inc
push
je
sub
jmp
add
and
sbb
mov
gs
xor
mov
inc
jle
imul
inc
push
aas
cmp
pop
push
mov
sub
pop
and
jo
jb
dec
push
and
lock
jbe
das
sbb
sahf
inc
fwait
cmp
adc
push
sub
leave
mov
enter
add
adc
sub
les
in
outs
add
jge
cmp
imul
jmp
dec
push
push
push
stos
in
xchg
push
xchg
in
sbb
pop
sbb
sbb
mov
jecxz
xchg
test
jmp
inc
add
xchg
test
xor
and
in
xor
pop
bound
mov
jno
ins
fild
(bad)
ins
mov
and
gs
fwait
shl
sbb
jl
xchg
ret
sub
sbb
pop
push
in
jo
hlt
or
mov
retf
call
add
mov
(bad)
add
xchg
retf
je
fs
sub
or
cmp
(bad)
sar
push
ds
and
add
sbb
xchg
jno
ins
(bad)
lock
jmp
push
xchg
add
or
aad
daa
retf
sub
jp
ret
and
test
jp
cwde
shr
dec
or
sbb
arpl
cdq
popa
xor
jl
xchg
push
xor
mov
cmp
sub
rsm
add
or
push
and
leave
out
pop
je
add
add
add
or
mov
(bad)
pop
test
inc
xchg
rol
sub
xchg
xlat
and
and
out
push
sub
stc
imul
mov
cmp
sbb
sub
or
cmc
nop
sbb
lods
mov
sti
or
adc
clc
ss
je
push
xchg
ds
dec
cwde
lea
or
push
retf
clc
imul
ds
add
rol
xchg
cmps
(bad)
adc
pop
dec
or
test
add
pop
jbe
xor
adc
and
test
ds
push
add
xor
call
cmp
adc
mov
fnstenv
(bad)
jle
dec
xchg
push
push
mov
sbb
outs
repnz
and
mov
mov
push
and
aam
pop
movs
js
mov
pushf
ins
lahf
mov
rol
xor
ins
in
out
lahf
xchg
pop
in
cmp
push
jmp
in
lods
shl
nop
xchg
add
add
stos
mov
sub
push
sbb
enter
xchg
inc
and
sbb
and
adc
shl
add
mov
pop
or
and
int
test
mov
leave
push
loopne
mov
loope
xlat
mov
sub
xor
and
mov
imul
cmps
cmp
ret
stos
test
js
and
cmp
(bad)
or
mov
idiv
cwde
add
inc
push
movs
adc
cmps
daa
push
add
out
adc
inc
and
and
(bad)
adc
lds
pop
test
dec
iret
xchg
sub
lods
and
sbb
jbe
(bad)
dec
retf
dec
pushf
add
push
std
fild
add
test
test
sub
sub
and
jmp
outs
xchg
stos
jp
ret
adc
mov
pop
pop
jl
test
rol
push
pop
stc
adc
or
adc
push
jl
add
inc
push
pop
or
lods
xlat
fcom
test
xchg
or
inc
sti
int3
add
push
xchg
pop
pop
pop
inc
mov
call
shl
push
sbb
call
(bad)
in
and
inc
mov
imul
ret
les
mov
je
adc
mov
sbb
dec
scas
xor
pop
or
pop
add
(bad)
sbb
sbb
pop
in
fisttp
mov
popa
sbb
push
mov
ret
add
mov
mov
sbb
push
dec
ror
fsubr
xor
mov
jne
mov
and
dec
movs
ins
inc
push
sub
push
movs
out
movs
aam
mov
fdiv
push
test
imul
or
test
mov
xor
adc
and
stc
sbb
js
nop
mov
leave
xchg
cli
mov
or
cmp
pop
nop
sbb
inc
and
out
sbb
imul
pop
push
cmp
add
inc
xchg
xchg
mov
pusha
add
or
dec
sub
nop
pop
fmul
and
sub
xor
jbe
push
pop
jo
cdq
mov
sub
push
or
pmulhuw
lods
stc
xchg
inc
push
dec
cs
dec
inc
arpl
(bad)
push
jbe
jp
cld
add
fcomp
aam
add
jo
aam
or
js
sbb
add
nop
mov
pop
repnz
add
mov
xchg
pop
and
or
ret
or
popa
fst
xchg
add
pusha
jecxz
pop
pop
mov
retf
sbb
mov
(bad)
test
cdq
and
xchg
xor
and
lods
outs
mov
inc
sub
push
add
mov
or
rcr
cwde
or
mov
rol
and
xor
prefetch
cmps
mov
out
cs
loopne
cmp
popa
adc
xor
jmp
aas
xchg
inc
mov
dec
and
lea
push
push
and
or
fnsave
push
cmp
sub
xor
or
int3
add
aas
add
lds
dec
push
xchg
xchg
mov
dec
inc
test
cld
adc
xchg
and
inc
aaa
lock
cmc
(bad)
lock
mov
mul
mov
je
push
fs
or
and
mov
sub
lods
sbb
cs
nop
mov
sub
jp
rcl
add
jmp
inc
sar
sub
inc
push
push
call
jno
inc
cli
cmp
xchg
sbb
sub
sar
mov
cmovno
lods
jnp
mov
adc
es
dec
shl
add
mov
push
pop
ins
(bad)
sbb
lahf
mov
mov
pop
xchg
and
repnz
(bad)
push
enter
mov
scas
add
jb
clc
push
dec
jno
push
add
inc
sbb
sar
cmps
add
nop
adc
sbb
imul
cs
add
add
popa
adc
adc
jne
and
pusha
ja
add
dec
cmp
adc
xor
and
mov
xor
xor
jmp
repz
test
mov
and
repnz
out
push
lock
and
lock
movs
cmp
mov
jmp
jne
sar
add
and
xor
leave
dec
cld
adc
inc
retf
adc
popa
inc
jmp
add
pop
pop
mov
push
cmc
cmc
jns
or
mov
add
xchg
add
loop
ins
stc
pop
cld
inc
pop
fist
jb
sub
add
or
add
daa
into
sub
adc
jb
int
daa
adc
add
loopne
int
and
in
retf
data16
(bad)
cmp
mov
gs
ds
in
push
or
retf
cwde
inc
mov
xchg
add
pop
ret
jnp
in
and
jg
or
sub
and
inc
add
fadd
and
pop
or
mov
add
aam
pop
ds
sub
enter
push
call
xchg
pop
pop
leave
or
aas
dec
clc
mov
mov
inc
mov
add
test
add
cdq
sbb
(bad)
add
sahf
daa
aas
lods
or
int3
loope
daa
xchg
stc
lods
or
xchg
sbb
fstp
or
sub
sbb
push
mov
fadd
pop
inc
jl
add
sub
jne
stos
and
enter
pop
adc
aam
fst
xor
xor
pop
enter
test
jb
call
arpl
scas
mov
outs
mov
mov
ins
js
addr16
(bad)
(bad)
iret
push
sub
push
loopne
mov
dec
adc
call
neg
cmp
out
add
(bad)
loopne
or
sbb
mul
adc
sbb
mov
in
jb
and
enter
push
jmp
lock
lahf
in
imul
mov
cmp
mov
jne
in
in
pop
rol
in
inc
and
push
push
sub
pusha
jp
push
aaa
and
adc
mov
dec
cdq
in
call
xor
sub
repnz
xor
inc
jo
inc
push
inc
sbb
or
imul
dec
add
inc
jns
fidivr
dec
in
es
sbb
xchg
push
push
ficomp
jns
add
jecxz
hlt
or
pop
add
push
loope
rcl
pushf
cmp
push
mov
or
out
(bad)
xor
bound
push
cmp
jne
mov
in
adc
test
jne
cmp
or
add
fmul
dec
inc
jmp
add
add
icebp
int3
jo
jg
shl
mov
mov
adc
add
retf
leave
lds
jno
gs
push
(bad)
jmp
push
add
inc
adc
xchg
add
pop
sti
test
pop
icebp
xor
retf
sub
ret
lea
nop
or
sub
push
int3
or
xor
mov
xor
xchg
(bad)
cld
jb
add
leave
push
push
pop
push
push
mov
inc
test
add
mov
lods
outs
xchg
fnstcw
inc
mov
lock
(bad)
fst
add
pusha
cdq
icebp
inc
rcr
je
dec
add
add
xchg
add
and
xor
xchg
loope
pop
scas
in
mov
push
add
hlt
stos
xchg
aaa
mov
icebp
out
sbb
xchg
adc
mov
mov
and
shr
rcl
dec
jbe
pop
cmp
inc
ds
mov
jno
lods
sahf
add
push
inc
or
stc
in
(bad)
fidiv
fs
(bad)
mov
cmp
mov
or
stc
adc
add
je
sbb
mov
mov
sbb
push
div
ficom
xchg
pop
call
je
xchg
xor
add
jne
pop
inc
mov
leave
test
xlat
and
leave
mov
xchg
sahf
xchg
mov
pop
test
loope
in
mov
imul
or
xchg
fmul
loopne
fmul
adc
call
imul
or
adc
mov
ins
dec
xchg
out
call
pusha
int3
cmp
jnp
push
dec
ror
repz
or
mov
fcom
in
xchg
adc
popa
inc
push
test
xchg
lea
pop
xor
in
sbb
sub
cmp
jne
mov
test
xor
add
js
pop
jb
js
in
sub
test
imul
imul
fs
xchg
mov
lea
pop
fiadd
repz
sub
xchg
push
aam
adc
sbb
push
adc
xchg
xor
xor
push
(bad)
rol
icebp
add
aam
stos
pop
mov
mov
sub
je
sub
movs
dec
in
imul
sbb
cld
push
and
xor
dec
retf
xlat
jmp
or
add
test
das
or
cmps
stc
dec
push
cld
or
icebp
pusha
shl
adc
xchg
dec
test
and
add
jns
jmp
add
unpcklps
sbb
sbb
or
mov
jmp
out
sub
pusha
pop
or
daa
dec
push
adc
loope
(bad)
push
sub
int
xor
sar
ins
mov
bound
in
into
add
inc
sub
mov
mov
adc
push
push
inc
in
push
stos
jecxz
sub
popa
shl
add
adc
retf
stc
pop
cmp
adc
xor
mov
bound
push
enter
add
and
inc
cmp
popa
xlat
aas
push
sbb
sbb
adc
xor
lods
inc
and
pushf
fild
pop
adc
add
cdq
imul
adc
repnz
cld
in
test
push
sub
leave
sbb
int3
leave
leave
mov
pop
and
pop
repnz
fsub
sbb
sbb
cmp
sbb
xchg
mov
mov
and
sub
movs
rcl
jmp
sub
xor
shl
jne
ficom
aam
xchg
push
ret
push
add
sub
sbb
push
shr
cmp
or
xchg
out
test
mov
jmp
inc
stos
or
lds
jb
sub
cmps
xchg
pop
cwde
mov
lea
xor
shr
mov
sbb
ss
test
aad
xor
add
adc
add
nop
dec
push
mov
or
jae
sbb
dec
ret
sub
gs
inc
jecxz
push
or
xlat
or
mov
lock
jo
ins
or
test
pop
mov
add
mov
inc
adc
mov
pusha
sbb
xor
das
pop
das
rol
jo
xor
sbb
and
mov
or
sub
adc
and
push
pushw
sub
fldcw
mov
mov
adc
lods
stos
dec
cmp
call
jle
xor
push
dec
jle
scas
rol
or
test
pop
xor
or
es
pop
xchg
cmp
add
js
or
je
and
and
int3
xchg
test
sbb
inc
add
adc
mov
pop
adc
jl
and
add
push
pop
xor
jo
dec
and
push
push
mov
psubsw
jbe
and
xor
aas
and
adc
xor
in
pop
sub
xor
mov
enter
mov
push
add
sub
mov
sbb
mov
mov
or
push
sbb
jnp
mov
pop
mov
pop
inc
out
sub
adc
xor
adc
xor
mul
mov
jmp
imul
push
lock
pop
movs
xchg
retf
dec
pop
sub
or
or
lock
scas
sub
std
jno
sub
inc
cmp
jne
out
cmp
adc
push
adc
lea
adc
jecxz
call
fisttp
enter
clc
and
push
rol
adc
lods
imul
addr16
mov
lods
retf
or
daa
mov
mov
jb
ror
icebp
sbb
clc
push
sbb
inc
dec
pop
and
jb
xor
or
cmps
dec
sbb
call
and
sub
sub
popf
push
in
test
in
or
cmp
sub
push
pop
or
or
jmp
loope
push
sub
outs
mov
imul
lods
mov
inc
test
popf
dec
xor
in
mov
jg
bound
jns
or
xor
push
mov
jmp
sub
cld
adc
retf
rcr
arpl
dec
pop
and
ret
pop
adc
cmps
xchg
movs
cld
xor
addr16
ret
add
dec
pop
mov
loopne
repnz
pushf
cmp
cs
sub
and
pushf
cmps
popa
sub
push
les
xor
add
mov
add
or
jge
cmp
nop
stos
jno
or
nop
sbb
dec
adc
cdq
sbb
ret
adc
inc
imul
popa
push
push
(bad)
jmp
and
sar
or
push
or
pop
jp
mov
pop
mov
sub
push
inc
pop
add
sub
push
mov
add
retf
pop
xchg
cmps
loopne
daa
sbb
jo
push
pop
scas
loopne
arpl
mov
push
push
pop
loope
push
sbb
ret
pop
mov
cmp
outs
cmp
xlat
ins
push
sub
xchg
mov
(bad)
rol
mov
repnz
mov
mov
loope
out
cmp
dec
popa
sub
push
lock
pop
cmps
adc
pop
outs
outs
pop
or
movs
pop
jg
mov
(bad)
ret
add
ds
nop
dec
mov
test
ins
push
add
je
or
movs
fcomp
cmps
jns
jle
add
das
push
aas
add
dec
ret
movs
daa
fild
movs
pop
fs
sbb
sub
cmp
test
dec
test
hlt
repnz
das
mov
jmp
xchg
mov
and
mov
pusha
in
push
xor
mov
cdq
(bad)
outs
retf
and
adc
std
pop
cmp
repz
cs
push
inc
pusha
call
mov
jp
nop
loope
jecxz
push
call
leave
sbb
das
pop
gs
or
xor
ret
clc
xchg
test
test
adc
push
popa
dec
cs
mov
les
test
mov
movs
rol
dec
iret
dec
xor
cmp
push
mov
popa
jno
lods
fs
xchg
add
pushfw
and
push
xchg
sbb
(bad)
push
and
xchg
shl
cwde
call
mov
imul
inc
lods
pop
cmp
sub
inc
fwait
lods
aas
sbb
add
xchg
inc
push
dec
aas
push
add
mov
sub
hlt
ss
jo
pop
test
pop
adc
or
ror
push
sub
cmp
or
mov
in
sub
mov
imul
fcom
test
inc
mov
test
push
mov
popa
dec
mul
stos
or
jmp
jmp
mov
inc
add
add
or
rol
les
pop
add
mov
sbb
int
cmc
inc
mov
mov
push
int3
push
cmps
sbb
lds
cwde
retf
cdq
cmp
rol
je
and
and
imul
adc
(bad)
and
cdq
nop
lahf
cmp
das
pop
inc
add
add
setns
mov
mov
mov
aas
mov
sub
pushf
xor
push
sbb
daa
pushf
or
and
in
add
add
fld
cmp
test
je
or
inc
bound
popa
adc
fwait
call
adc
add
movs
jo
retf
out
fs
and
fcomp
and
and
imul
test
mov
mov
or
xor
es
adc
lods
adc
pop
push
dec
sub
and
rcr
xchg
sbb
(bad)
inc
(bad)
and
dec
out
mov
jmp
mov
std
push
cdq
stos
pop
jle
cmp
push
add
popa
popf
push
add
int3
or
loopne
jp
test
mov
sub
cmc
enter
jne
adc
pop
xchg
cdq
rcl
lock
sbb
jne
mov
lea
or
cmps
lea
pop
adc
mov
mov
lods
xlat
add
push
inc
shl
ficomp
mov
sbb
pop
enter
mov
cmc
pushf
add
add
and
jbe
fs
ja
add
mov
sub
adc
push
in
pop
push
ja
sbb
mov
jbe
push
inc
movs
push
pop
add
lods
cwde
std
sub
imul
mov
push
pusha
sub
sub
mov
addr16
cmp
mov
pusha
outs
inc
and
pop
cmc
cmp
inc
add
pop
mov
add
sbb
rcl
mov
push
sbb
mov
cmps
arpl
adc
and
jge
push
adc
call
outs
cld
movs
inc
push
hlt
jge
cmp
dec
inc
push
push
ret
dec
jge
push
add
ror
adc
xor
mov
fs
jmp
enter
mov
mov
mov
and
fwait
test
(bad)
mov
in
les
and
dec
xchg
ret
call
ja
push
push
test
shl
pop
movs
das
xor
sub
lods
cmp
xchg
jecxz
mov
fisubr
xor
adc
sub
adc
imul
or
sub
pusha
adc
xchg
aaa
mov
add
sub
sub
dec
fidiv
nop
ror
add
cmc
cld
call
xor
outs
sub
enter
push
jmp
mov
sbb
(bad)
and
or
jno
or
push
adc
outs
and
xor
add
dec
push
adc
jb
adc
adc
cmp
ror
adc
sub
sub
arpl
xchg
cmp
pushf
xchg
add
add
pop
xchg
jmp
lds
cwde
retf
movs
xchg
dec
dec
dec
xor
dec
or
mov
or
push
push
pop
cmp
sub
adc
es
or
push
sbb
adc
jle
push
sti
or
pop
fdiv
sbb
cmp
(bad)
lea
out
push
out
inc
cmp
fcomp
nop
xchg
cmp
adc
adc
dec
loope
loop
sub
jl
xchg
xor
imul
sub
push
cmps
xor
mov
dec
pop
or
das
xor
sbb
push
dec
cmp
jle
popa
test
xor
sbb
push
mov
mov
push
(bad)
lods
cmpxchg
xlat
push
push
mov
mov
and
pusha
push
pop
test
cmp
add
push
adc
jb
test
mov
mov
loop
xor
aam
cmp
rcl
mov
cmp
xor
(bad)
jnp
inc
js
je
push
xchg
or
pop
or
and
inc
add
mov
mov
and
push
mov
iret
bound
rol
add
inc
adc
(bad)
xor
test
test
fidiv
push
sbb
sub
sbb
mov
fiadd
push
pop
xchg
stos
es
and
cmp
(bad)
adc
ret
inc
sub
inc
cmp
test
add
pop
pop
test
cs
jg
push
popa
jnp
add
push
ror
jnp
add
nop
pop
or
and
out
rcr
mov
and
fcmovbe
mov
sbb
inc
push
inc
jmp
inc
sub
enter
adc
xchg
mov
inc
cmp
adc
or
cmps
inc
add
pop
pop
inc
mov
js
aaa
pop
imul
fdivr
mov
and
sub
leave
xor
scas
and
popa
cmps
jb
in
popa
pop
cmp
inc
jne
or
sbb
sub
je
and
pop
push
inc
sbb
leave
sbb
xchg
pop
xchg
dec
test
lods
dec
and
call
add
xchg
lods
(bad)
mov
sub
sbb
adc
jle
jge
daa
in
or
imul
mov
out
pop
popa
movs
and
sbb
xor
mov
push
adc
push
dec
mov
(bad)
jp
les
mov
pop
add
or
dec
call
test
jge
sbb
arpl
das
loopne
dec
out
ins
inc
xor
push
scas
sub
xchg
scas
arpl
ds
inc
sbb
repnz
je
dec
je
cdq
ror
push
or
dec
pop
push
mov
adc
adc
dec
and
jge
push
lods
inc
adc
inc
rcr
inc
sbb
in
gs
(bad)
les
mov
int
bound
jecxz
aam
and
mov
shl
sub
push
and
js
adc
and
mov
adc
test
sqrtps
or
jb
sub
icebp
xlat
sbb
gs
or
not
and
and
jge
(bad)
push
add
or
adc
lds
dec
mov
mov
mov
cmp
mov
push
or
mov
jge
mov
jo
nop
mov
loop
aam
mov
mov
and
arpl
lea
push
icebp
fldenv
das
pop
in
sub
push
stos
(bad)
data16
mov
rcl
pop
push
mov
add
mov
rcl
or
loopne
rol
xchg
fsubr
xchg
cmps
jge
sub
jmp
inc
aam
in
ror
retf
test
adc
xchg
add
xor
add
dec
cmp
jle
push
dec
outs
pop
add
clc
jl
or
dec
int3
fwait
js
add
xor
pop
mov
or
or
push
and
xchg
es
and
cmc
ss
jne
jp
movs
fisubr
and
adc
sbb
ret
sar
mov
mov
jb
push
add
inc
sar
xchg
les
test
sbb
pop
sbb
jne
outs
xchg
dec
or
aas
xchg
dec
dec
movs
xchg
arpl
retf
cmp
in
adc
fmul
mov
jl
inc
dec
and
push
mov
popf
movs
cmp
xor
cmp
pop
pop
jno
mov
push
neg
xor
or
retf
xor
mov
std
jbe
sub
push
inc
outs
jae
fcomp
fld
fidiv
aam
adc
call
push
int
(bad)
jmp
xor
sbb
aam
movs
inc
adc
loopne
sub
pop
add
enter
(bad)
mov
int3
pop
xor
push
xor
loop
stos
mov
xor
call
add
dec
add
mov
and
imul
xchg
dec
cmps
jne
add
pop
dec
and
jmp
mov
push
(bad)
popa
adc
push
rcl
fnstcw
lahf
ret
shl
sbb
stos
inc
lea
cld
clc
dec
adc
cmp
(bad)
adc
pop
in
ins
mov
rcr
inc
xchg
repnz
fs
add
adc
pusha
and
push
ss
clc
jle
cmp
jl
xchg
ret
cmp
pop
fld
push
dec
popf
cld
sub
xor
aaa
loope
pop
add
pop
je
cdq
(bad)
das
or
mov
mov
aas
iret
push
cmps
or
add
jl
mov
jo
ins
sub
push
mov
test
sbb
lock
and
jmp
or
inc
push
(bad)
iret
mov
or
and
adc
sub
js
pop
pop
mov
sbb
and
pop
adc
push
fadd
ins
xchg
and
pop
sbb
add
sbb
addr16
and
cmp
xchg
jmp
test
movs
pop
lods
push
add
scas
push
rcl
lds
push
xor
add
ss
arpl
or
fist
mov
inc
pop
gs
push
adc
cmps
cmp
sti
outs
xor
cdq
add
or
push
sbb
jge
sahf
out
repnz
jne
jne
div
lock
xor
rol
hlt
xchg
aaa
push
add
mov
loopne
mov
ds
xor
push
ret
and
add
ins
in
nop
mov
or
push
push
pop
pop
test
mov
dec
and
dec
dec
pop
dec
push
add
xor
xor
add
and
and
adc
dec
xchg
adc
out
jbe
outs
pop
call
leave
sub
lea
dec
push
loope
and
or
mov
xlat
je
jno
adc
call
xor
out
mov
iret
push
in
lods
add
or
push
xor
mov
cwde
push
fldenv
xor
or
push
pcmpeqw
or
nop
ret
dec
mov
push
and
adc
cs
arpl
or
ss
jb
js
pop
js
in
adc
stos
(bad)
fisubr
inc
push
xchg
sub
mov
pop
push
sbb
xor
les
lock
xchg
jns
into
ror
rcr
neg
data16
pop
ror
jmp
stos
adc
add
pop
cmps
sbb
cwde
pop
lock
bswap
les
imul
sti
jp
sar
xchg
ror
ins
mov
stos
es
jnp
push
pop
mov
pusha
mov
sbb
lock
test
adc
ffreep
xchg
push
xchg
push
pop
inc
sahf
dec
mov
inc
ds
add
jp
lock
daa
add
or
test
add
adc
mov
scas
cmps
push
je
jo
adc
fcmove
int3
xor
push
push
or
push
push
and
xor
mov
aam
or
pop
xor
dec
fs
call
loop
or
mov
adc
and
sbb
push
push
sub
imul
lods
not
scas
push
cmp
mov
or
add
adc
push
ja
mov
or
push
clc
add
add
mov
(bad)
nop
call
fwait
mov
pop
fadd
mov
sar
mov
loop
mov
and
mov
mov
adc
sub
add
aad
movs
(bad)
fcomp
inc
popf
push
cdq
push
mov
idiv
xor
add
ror
retf
adc
add
pop
adc
sbb
inc
push
add
adc
rcr
imul
and
mov
cs
jb
nop
jns
stc
push
aaa
test
clc
pop
scas
(bad)
in
mov
dec
pop
and
clc
add
mov
jo
js
xchg
retf
mov
fdiv
popa
xchg
mov
or
das
xor
dec
add
and
jecxz
shr
test
stc
dec
hlt
or
dec
outs
sbb
je
xchg
pop
add
in
xchg
inc
push
mov
push
pop
push
mov
iret
or
mov
outs
call
arpl
dec
sbb
ror
xor
xor
dec
dec
mov
adc
cs
(bad)
aad
daa
in
and
jmp
add
xchg
xchg
xchg
iret
femms
add
xor
dec
fnsave
inc
sbb
rcl
lods
dec
dec
call
dec
dec
mov
rol
psrad
inc
mov
adc
or
sbb
mov
add
sub
push
mov
xchg
retf
adc
xor
pop
push
and
cmp
dec
repz
shl
jnp
and
call
(bad)
and
jne
jecxz
mov
in
mov
jmp
sbb
jle
push
dec
and
nop
mov
or
pop
pop
pop
ins
sbb
das
mov
hlt
jle
mov
mov
sbb
or
lds
adc
pop
rcr
or
call
jnp
xchg
cmp
jmp
adc
ins
sub
call
in
mov
loopne
sub
and
jo
or
mov
stc
cmp
inc
movs
test
call
or
ins
pop
or
test
(bad)
and
in
cli
jne
push
jo
mov
dec
gs
inc
push
inc
add
cmps
inc
cwde
dec
call
sub
loope
mov
mov
ror
dec
popa
test
jecxz
push
or
and
adc
push
lea
adc
cmp
xchg
test
xor
add
retf
add
pop
add
or
add
popa
das
jl
add
adc
(bad)
das
and
call
ror
lea
call
int
or
or
sub
into
sub
xchg
xor
out
and
movs
in
stos
jge
js
ins
sti
not
mov
popa
stos
test
inc
sahf
xchg
inc
adc
mov
sbb
jbe
(bad)
jnp
pushf
mov
push
and
add
in
idiv
and
or
vmovsd
push
xor
loope
or
add
hlt
mov
mov
xchg
pop
add
fcomip
sti
pushf
inc
add
ss
fwait
dec
shr
mov
add
repnz
rcr
outs
jne
dec
jp
out
mov
xchg
cld
jmp
cdq
push
inc
push
das
das
je
lea
jmp
les
xlat
mov
adc
xor
imul
add
ret
sub
dec
inc
and
sbb
dec
xchg
fiadd
test
test
mov
pop
add
jge
fdiv
or
daa
test
push
call
mov
jnp
mov
cmp
sbb
mov
and
movs
ja
push
mov
mov
ret
rol
xor
or
xor
xchg
inc
sbb
mov
ret
jp
pop
movs
jl
shr
lock
push
nop
std
mov
es
test
cwde
cmp
or
lods
scas
loopne
push
pop
es
and
std
cmp
enter
add
and
cmp
sbb
and
fld
aad
aam
int3
and
sub
pop
xor
add
inc
sub
inc
push
outs
or
add
and
or
pushf
outs
sahf
push
jp
int3
push
push
add
in
push
pushf
add
xor
xor
loope
in
stos
and
in
push
jno
inc
in
cmps
push
push
adc
xor
fcom
(bad)
in
sahf
cmp
inc
sub
mov
aad
je
add
je
jp
sub
popa
fwait
or
ins
or
or
mov
(bad)
mov
adc
inc
aam
shl
clc
loopne
dec
cdq
test
movs
add
scas
jmp
sbb
mov
push
cdq
ins
or
mov
cmp
cmp
(bad)
or
and
aam
push
adc
and
in
add
jle
in
mov
dec
in
sti
clc
xchg
mov
mov
pop
pop
mov
adc
dec
mov
in
push
adc
dec
sbb
xor
add
into
jle
mov
adc
and
movs
test
shl
aas
inc
clc
xlat
leave
mov
xor
inc
mov
inc
pop
in
push
mov
inc
mov
push
push
inc
movs
data16
jmp
inc
xor
movs
inc
dec
loopne
lea
cli
popa
rcr
pop
(bad)
push
adc
xchg
jb
mov
xchg
aad
sbb
(bad)
pop
(bad)
shr
sbb
push
lahf
xor
psadbw
stc
mov
add
and
fstp
and
and
mov
fst
mov
iret
mov
xor
xchg
pop
sub
inc
pop
lods
cmp
or
pop
cwde
sub
dec
push
inc
xchg
sbb
icebp
cmp
mov
std
sub
mov
dec
pop
add
out
jmp
nop
cli
push
xor
jb
je
pop
adc
and
and
fldl2e
mov
jb
pop
push
mov
adc
xor
aaa
push
jle
dec
movs
jne
push
mov
jl
sbb
ja
jl
sbb
xchg
test
and
das
jb
shl
fmul
mov
outs
or
sub
in
mov
mov
sbb
mov
popf
xchg
sub
add
popa
lods
sub
or
pop
mov
or
sub
pop
mov
int
mov
dec
es
add
pusha
arpl
dec
push
inc
pop
sub
xchg
test
mov
fs
jle
je
push
cmps
cmp
popa
loopne
jp
inc
push
je
scas
in
xchg
cmp
daa
add
es
cmps
xchg
push
jl
push
dec
add
dec
lock
or
(bad)
jmp
pop
sub
sbb
xor
or
push
adc
xor
ret
inc
out
push
and
test
mov
xchg
clc
stos
je
and
sbb
or
addr16
push
adc
fiadd
jo
mov
cmp
aam
in
xchg
les
add
shl
mov
sbb
inc
sbb
enter
ss
fs
xchg
mov
sub
sbb
loope
push
jbe
add
sbb
push
imul
push
add
add
and
out
lahf
scas
xchg
dec
add
(bad)
dec
and
fild
mov
cmp
jne
dec
cdq
test
cmp
mov
loopne
and
and
xor
stos
sub
cmp
and
enter
mov
icebp
push
or
push
retf
sar
add
adc
rcl
mov
and
pop
test
or
loope
jg
and
nop
add
lahf
cmp
dec
call
push
lea
xor
or
and
and
and
clc
fs
ins
loopne
or
push
push
xchg
push
jl
push
push
mov
movs
ror
jne
lock
popf
rcl
(bad)
pop
add
xor
add
retf
inc
sub
jae
sub
inc
or
pop
mov
or
add
loopne
adc
test
fs
sbb
(bad)
jae
add
scas
inc
loope
pop
(bad)
ss
add
sar
inc
lds
add
lods
inc
imul
iret
mov
lock
add
or
inc
dec
mov
push
(bad)
dec
adc
outs
popa
loop
xor
mov
inc
dec
fstp
adc
out
sub
cwde
cmp
adc
retf
sbb
imul
or
sbb
mov
add
sbb
sbb
mov
inc
inc
mov
cli
add
jmp
xchg
mov
mov
dec
push
push
cmp
jbe
mov
frstor
fdivr
xchg
jae
verr
add
xor
adc
push
loope
jnp
and
test
mov
cmps
sbb
xchg
call
test
ret
mov
test
mov
mov
mov
sahf
mov
pop
arpl
xchg
enter
xchg
adc
pop
mov
test
mov
mov
sbb
mov
cmps
jo
and
jl
inc
test
movs
sar
rol
or
xor
mov
addr16
jne
xchg
add
sbb
cli
jae
or
loopne
pop
jl
add
stos
xchg
popf
dec
or
test
xchg
loop
inc
ret
xchg
out
sub
adc
and
xchg
inc
xchg
test
or
adc
pop
pushf
jmp
in
jns
xchg
and
rcr
in
pop
or
mov
sub
xchg
lods
pop
pop
mov
cdq
in
int3
add
jb
sbb
pop
add
jp
mov
sub
push
popf
or
lods
and
sahf
pop
sar
adc
(bad)
xchg
test
push
pop
or
ret
xor
add
lea
add
mov
xor
or
pop
hlt
nop
nop
xchg
jo
push
xchg
mov
fabs
sub
mov
or
mov
repnz
cmp
and
lods
sbb
sub
mov
mov
lea
push
adc
in
or
ror
cmp
arpl
or
sbb
jb
jmp
xor
nop
inc
push
push
push
sbb
sbb
sub
mov
ins
hlt
div
add
push
add
xchg
repnz
add
hlt
adc
sbb
dec
push
nop
mov
mov
pop
iret
dec
shr
ja
iret
adc
xor
(bad)
daa
mov
pop
pop
mov
iret
push
sub
mov
fild
xchg
mov
add
and
leave
dec
xor
add
adc
mov
aam
jmp
or
pushf
cs
mov
or
xor
pop
(bad)
test
jbe
addr16
adc
inc
push
test
or
and
adc
test
add
sbb
data16
dec
add
add
mul
or
jmp
(bad)
jne
sbb
push
cmp
or
out
fcmovbe
and
adc
adc
add
adc
mov
sbb
mov
call
adc
ins
xchg
fwait
or
adc
push
jle
xor
cmp
sub
dec
or
(bad)
(bad)
int
mov
pop
adc
push
movs
(bad)
pushf
mov
sahf
inc
and
xchg
inc
mov
popa
cmp
and
jecxz
daa
test
push
ret
or
dec
ins
jecxz
or
mov
mov
lea
xchg
mov
sbb
mov
movs
or
inc
je
pop
sub
jns
push
les
repnz
push
sbb
and
sbb
push
aaa
mov
test
test
mov
jbe
xor
jle
inc
push
dec
dec
pop
add
add
sti
push
rcr
dec
push
adc
pop
ret
or
cld
sub
add
inc
xor
mov
daa
jbe
xchg
inc
mov
and
ss
dec
jge
pop
ret
dec
pop
sbb
jp
daa
loop
add
add
lea
cmc
std
and
or
inc
push
ja
cmp
ja
sar
pushf
and
adc
mov
inc
add
xor
(bad)
cld
call
and
mov
mov
fistp
mov
sub
pop
add
add
lea
adc
jno
mov
sbb
sub
inc
pop
xchg
sbb
jae
or
dec
add
xor
mov
ins
push
stos
movs
loopne
pop
js
in
push
pop
mov
imul
arpl
sbb
aaa
push
dec
add
lods
mov
inc
pop
fstp
outs
xor
jne
repnz
and
mov
add
adc
mov
add
and
mov
and
pop
xchg
test
add
xchg
and
rol
push
cmp
jb
daa
inc
add
push
push
pop
mov
ja
mov
sar
dec
adc
and
jo
inc
js
mov
or
push
fbld
cmp
inc
test
push
cmp
add
mov
sub
add
add
cmp
add
adc
and
pop
add
mov
or
ret
dec
loop
retf
repz
adc
xor
fdiv
add
add
mov
or
sub
les
pop
aas
rcr
dec
aaa
xor
push
adc
mov
ss
xchg
xchg
push
dec
lea
inc
sub
and
cmc
pop
and
or
fs
xor
arpl
xchg
ins
or
das
and
jp
pop
sub
les
or
fnop
add
sbb
sbb
jp
(bad)
pusha
add
xchg
or
and
ins
iret
sbb
adc
pop
clc
js
pop
adc
pop
pop
add
pop
dec
mov
ja
aam
pusha
or
les
test
div
fild
mov
adc
xchg
repnz
push
push
sub
mov
xor
dec
xchg
jae
dec
mov
add
sbb
jne
cdq
lods
jne
xlat
sahf
or
push
int3
sub
call
stc
mov
push
shr
mov
imul
sbb
jne
je
loop
mov
sbb
nop
push
jmp
add
push
jno
sbb
mov
mov
sub
pop
addr16
stos
call
push
clc
push
rcl
sbb
and
movs
push
push
push
dec
dec
push
sbb
pop
push
or
mov
sub
and
add
jg
inc
ds
adc
adc
mov
mov
and
jns
ins
popa
lds
ja
cmp
jecxz
js
add
mov
add
or
sti
and
inc
call
adc
and
push
mov
push
push
popa
popa
adc
mov
fs
leave
pop
inc
jmp
adc
xchg
inc
out
pop
fisub
dec
and
dec
push
mov
mov
loop
jmp
and
lock
aad
popf
mov
ja
fs
mov
pop
and
pusha
inc
outs
daa
or
jecxz
mov
sbb
call
or
ret
dec
or
or
lods
sub
adc
daa
popf
sub
mov
push
pusha
add
xchg
pop
je
mov
add
mov
cmps
imul
pop
pop
jg
fcom
xchg
ins
or
out
dec
inc
dec
xchg
les
std
fs
mov
mov
div
inc
mov
call
and
movs
inc
push
loop
fisttp
and
mov
push
outs
les
pushf
sub
pusha
add
inc
push
mov
mov
pop
adc
mov
pop
mov
mov
xchg
adc
mov
shl
loop
cmp
das
je
hlt
and
lock
ret
imul
test
push
movs
mov
dec
and
call
mov
push
loopne
loopne
xchg
xor
rcl
imul
in
inc
dec
adc
ja
sub
(bad)
jb
cmp
mov
aam
cmc
push
xchg
or
mov
fimul
sub
mov
adc
movups
mov
dec
lds
pushf
sbb
or
fmul
ror
mov
xchg
dec
cmpps
or
mov
ins
dec
addr16
push
mov
and
pop
sbb
or
xor
xor
cmc
adc
xchg
fwait
or
adc
mov
or
jl
and
test
adc
dec
das
sbb
cli
xchg
mov
iret
ror
mov
and
fsub
push
adc
cs
xchg
fidiv
test
cmps
daa
popa
mov
retf
jl
pop
jo
fisttp
jl
pop
in
ss
repz
mov
pop
jne
jno
fiadd
inc
jl
add
icebp
mov
inc
je
test
and
mov
push
pop
leave
mov
sti
pop
fisttp
test
sub
movs
call
dec
fiadd
mov
pushf
and
xor
mov
aas
xlat
cmps
sbb
fisub
mov
push
and
or
xchg
popa
push
and
stos
test
mov
sub
lods
sbb
fmul
push
inc
mov
dec
imul
sbb
mov
jg
sbb
and
or
xor
mov
lea
sbb
out
popa
call
jno
sbb
or
pop
push
inc
ret
lock
sbb
inc
mov
sbb
js
arpl
dec
pushf
lds
xor
fadd
test
shl
lahf
mov
xor
add
sbb
add
out
es
inc
push
xchg
retf
xor
add
and
push
or
dec
out
pusha
(bad)
lods
les
sub
dec
pop
xor
mov
pop
push
movs
cmp
xor
push
mov
and
and
sbb
sar
outs
cwde
mov
sar
nop
sub
adc
imul
mov
inc
sbb
outs
and
xor
rol
adc
imul
push
test
rol
lock
adc
test
pop
mov
push
in
mov
mov
xor
scas
cmp
add
push
add
xor
xchg
push
add
jne
cmp
ss
or
inc
or
pop
les
mov
adc
nop
xchg
xor
sub
dec
sub
lock
push
pop
cmp
push
adc
stos
hlt
cwde
(bad)
add
or
or
or
ret
or
(bad)
ret
neg
mov
push
jp
cwde
popw
mov
adc
sub
movs
xor
mov
sub
adc
movs
xchg
nop
sub
push
jo
dec
test
xor
ds
jecxz
rcl
adc
pop
jmp
push
pop
sbb
mov
(bad)
call
add
push
push
sbb
mov
sahf
ins
pop
pop
add
and
pop
dec
xor
retf
(bad)
inc
jl
movs
es
int3
or
sub
clc
pop
out
cmps
dec
arpl
jl
sub
imul
mov
push
popa
inc
mov
and
dec
jne
push
clc
xchg
jmp
sar
sar
mov
in
lea
(bad)
inc
aas
or
mov
mov
sahf
jmp
dec
xor
jbe
mov
mov
(bad)
pop
sub
add
inc
loope
ror
shl
inc
mov
mov
in
and
and
mov
repz
xchg
fnop
in
xchg
test
sbb
lods
js
mov
dec
dec
or
push
ins
mov
jo
jae
adc
inc
cmp
sbb
lock
(bad)
fmul
jl
mov
or
iret
mov
or
sbb
shl
mov
enter
test
or
int3
or
sbb
mov
in
pop
rcr
push
sub
dec
or
aam
sbb
mov
cmps
outs
mov
or
pop
mov
inc
add
nop
jp
or
xor
jmp
sbb
js
sbb
sub
xor
sbb
(bad)
mov
fsubr
outs
inc
mov
inc
std
cmp
jecxz
pop
mov
jg
xor
cmp
mov
mov
mov
push
clc
pop
sbb
mov
or
mov
jmp
push
add
push
cs
dec
les
scas
sub
inc
xchg
add
imul
retf
and
fsubr
xor
into
rcl
es
and
(bad)
push
call
add
xor
mov
adc
inc
dec
or
add
dec
mov
push
and
pop
mov
out
sbb
fadd
inc
adc
ret
mov
sub
add
mov
adc
mov
sbb
cwde
dec
(bad)
enter
adc
cmps
cmc
add
test
in
ss
xor
cmp
add
and
aam
pop
jg
(bad)
xchg
adc
lods
imul
sbb
or
sub
ret
and
xchg
add
movs
arpl
sbb
sub
push
lods
daa
rol
lods
push
sub
and
jg
xor
or
fcomp
shl
es
mov
pop
xor
loop
dec
scas
gs
push
sbb
pop
and
add
(bad)
or
dec
push
mov
mov
inc
mov
cmp
push
js
xchg
inc
(bad)
ror
fmul
add
(bad)
xchg
mov
push
lahf
aam
mov
mov
and
jbe
push
mov
inc
adc
into
or
xor
mov
pop
mov
cdq
dec
fs
push
fadd
aas
pushf
add
xor
cmps
in
lock
mov
rcl
mov
lods
xor
sbb
xlat
icebp
icebp
lds
mov
mov
or
nop
dec
sbb
mov
push
inc
push
in
fstp
dec
pop
cmp
stos
sbb
sbb
jne
jecxz
ins
jmp
sub
mov
jbe
and
xchg
movs
and
jnp
mov
mov
adc
or
fst
push
and
test
jl
xchg
fs
or
aaa
out
cmp
xchg
ret
imul
aad
pop
nop
jo
mov
lock
dec
mov
push
pop
adc
cmp
in
or
nop
and
inc
inc
or
adc
or
mov
ds
push
outs
nop
ss
cmp
mov
inc
push
rol
sar
fmul
inc
jbe
sbb
in
cmp
dec
jb
jb
imul
lahf
aaa
das
inc
cwde
jl
ret
add
pop
enter
and
iret
and
adc
das
and
in
mov
mov
and
nop
fisub
das
ret
js
pop
jmp
mov
pop
push
pop
mov
cli
mov
leave
retf
daa
nop
xor
into
add
push
in
int3
mov
cmp
add
mov
enter
sar
and
repz
adc
pop
push
inc
jecxz
add
pop
mov
mov
jnp
push
int
sbb
sahf
push
push
jne
inc
mov
mov
dec
shl
jmp
adc
and
sub
jge
or
je
dec
add
pop
xchg
inc
or
xchg
fnsetpm(287
add
in
sbb
jbe
sbb
lock
cld
mov
mov
les
imul
int
shr
clc
jmp
and
in
in
pop
and
or
cmc
xchg
dec
cmp
jnp
outs
sbb
xor
iret
ins
hlt
hlt
mov
clc
adc
add
arpl
in
xchg
add
(bad)
cmps
popa
add
sub
dec
inc
nop
mov
adc
fild
cmp
les
movs
lds
cli
sar
inc
or
fwait
or
xchg
arpl
imul
mov
out
xor
pop
pop
xchg
and
mov
or
dec
cld
std
xchg
cli
add
punpckhwd
mov
sbb
jmp
enter
xchg
adc
sbb
sub
rol
shl
or
fisttp
mov
cmp
dec
pop
xor
ins
loopne
mov
inc
jg
and
jne
mov
add
push
or
sub
and
gs
adc
adc
dec
jecxz
cmp
pusha
push
push
or
xor
sbb
aas
inc
jmp
xor
test
and
sbb
ror
rcl
aad
popa
xor
push
jno
je
cmovg
les
enter
mov
sbb
mov
(bad)
retf
or
rep
or
lea
mov
or
jmp
stos
ret
pop
loopne
lea
test
mov
into
mov
lea
mov
out
adc
in
xor
mov
mov
add
bound
sbb
dec
or
inc
cwde
aad
cmps
popa
cmp
jl
add
popf
sbb
sub
add
fmul
cmp
inc
jne
pusha
xchg
sub
sbb
js
lock
dec
sbb
jp
sar
jae
dec
push
dec
sub
add
sub
outs
(bad)
enter
jns
ss
pop
ret
test
ror
dec
sbb
xchg
cwde
lds
outs
inc
xchg
xlat
xchg
mov
adc
cs
add
jae
inc
aas
sar
pop
sar
push
out
add
mov
sahf
dec
or
test
ja
mov
jg
data16
xor
mov
xchg
xchg
enter
mov
push
fs
lods
cwde
aam
pusha
add
cdq
ret
cmps
dec
and
movs
mov
ret
push
mov
xor
xor
popa
push
mov
call
aad
mov
add
cwde
call
mov
dec
pop
lods
or
and
jge
push
shl
les
add
ret
xor
push
inc
sbb
enter
rol
ret
les
inc
mov
inc
mov
sbb
ja
mov
and
bound
sub
enter
and
enter
or
fbstp
cmp
sub
xchg
sbb
xchg
mov
mov
and
push
mov
test
movs
std
sbb
push
ret
inc
js
push
ror
push
leave
sub
sub
xchg
push
pusha
jo
shr
cmp
mov
sar
add
test
dec
xchg
retf
aam
push
pusha
jmp
clc
push
es
jl
or
mov
push
or
cs
lea
push
dec
inc
mov
ret
sbb
xchg
gs
fistp
je
leave
sub
jb
add
lds
sahf
lea
jnp
cmp
push
int
sub
adc
mov
rol
(bad)
retf
outs
sub
xor
push
push
pop
dec
lods
cwde
paddusb
cdq
ror
sti
sub
sub
pop
popa
ret
push
sbb
fild
push
and
mov
jmp
imul
mov
sub
movs
dec
cmp
xchg
mov
mov
or
cmps
or
adc
push
mov
add
stos
xchg
(bad)
mov
aam
mov
nop
xlat
xor
lea
pushf
shl
adc
sbb
push
(bad)
pusha
sub
mov
pushf
inc
shl
leave
mov
pop
lea
add
or
jmp
and
mov
adc
in
adc
or
mov
inc
dec
add
jl
add
out
jmp
neg
or
mov
sbb
sub
sub
test
sbb
lahf
leave
test
sbb
outs
push
mov
inc
sbb
push
xchg
sub
adc
test
data16
adc
cmp
add
retf
sbb
adc
inc
adc
xchg
jmp
dec
pop
fadd
adc
call
mov
movs
or
xchg
mov
imul
pop
(bad)
and
out
cmp
lods
ins
mov
dec
add
jne
mul
push
cmp
mov
mov
xlat
jl
xchg
cs
sbb
dec
add
(bad)
retf
out
loope
add
push
int3
inc
and
pop
push
fcomp
sbb
adc
adc
inc
sbb
sbb
bound
in
dec
(bad)
or
mov
or
jne
mov
adc
adc
lods
int3
(bad)
rol
in
xor
sbb
sbb
ficomp
pop
cld
pop
js
and
pop
sub
int3
and
or
stos
outs
std
add
push
mov
das
test
pop
xor
pop
adc
rcr
cmp
dec
mov
mov
dec
rol
loopne
mov
mov
fnsave
fmul
xor
fisub
clc
or
adc
push
pop
nop
lock
dec
daa
int3
ss
cli
cmps
clc
and
(bad)
pop
pop
call
mov
dec
or
adc
mov
xchg
jbe
popf
push
inc
nop
lahf
xlat
cmp
dec
(bad)
cmps
push
xor
add
push
mov
cmp
push
push
sti
pop
jl
loop
cmc
push
mov
fsub
jnp
arpl
push
in
sbb
inc
push
mov
fisub
or
js
ret
rol
xchg
nop
inc
test
mov
mov
jnp
dec
cli
inc
cmp
ins
mov
push
or
sahf
adc
pop
and
ins
loope
or
jge
sub
cs
sub
inc
pop
loopne
jno
out
adc
shl
push
test
pusha
jmp
retf
cdq
inc
jmp
aam
js
xor
pusha
nop
inc
dec
adc
dec
mov
or
mov
mov
cwde
sub
pop
jl
xchg
push
out
add
push
std
xor
das
inc
ret
inc
jmp
mov
and
adc
retf
(bad)
cmp
and
add
(bad)
mov
pop
and
mov
and
dec
add
test
lea
fst
out
(bad)
dec
push
cmc
sub
sbb
and
xchg
movs
cmp
or
(bad)
sbb
and
call
or
out
dec
mov
jnp
push
sub
call
or
imul
add
jmp
xchg
push
mov
bound
dec
mov
call
sbb
xor
jg
sbb
adc
add
sbb
and
inc
xor
(bad)
test
or
jmp
ret
mov
aaa
and
cmp
xchg
inc
push
cmovle
inc
and
pusha
call
sbb
pop
dec
bnd
push
mul
adc
mov
inc
xchg
xor
add
push
fwait
das
pop
leave
add
mov
add
push
clc
xchg
(bad)
cmp
mov
call
call
adc
xor
cli
dec
pop
inc
push
jne
call
pop
popa
mov
adc
add
jnp
adc
jmp
cmp
pop
jmp
add
movaps
pop
(bad)
dec
ficom
dec
adc
aaa
add
sar
mov
pop
add
stc
popa
mov
xchg
movs
call
and
sbb
add
or
or
mov
mov
and
ss
fld
pop
dec
loope
adc
xor
rol
into
je
adc
stos
add
sbb
sbb
fsub
adc
movs
aas
pusha
in
in
and
push
mov
sub
push
sub
mov
mov
pop
(bad)
call
mov
and
sub
lahf
push
es
ins
and
push
or
pop
add
fild
cld
xchg
adc
push
sbb
test
popf
adc
sbb
inc
sub
xchg
push
mov
in
adc
lods
inc
icebp
neg
test
rcl
mov
add
in
pop
fwait
dec
jno
xor
add
xor
fstp
jo
ja
dec
iret
push
jo
(bad)
test
pop
cdq
sbb
pop
xor
add
mov
mov
ret
in
leave
add
mov
mov
push
or
cmps
sub
outs
jmp
adc
pop
repz
sbb
xor
xor
and
adc
retf
(bad)
jmp
xchg
test
cmps
adc
pop
cmps
add
jne
mov
push
sub
xor
push
sub
daa
dec
test
scas
ss
lea
(bad)
fwait
push
cs
ins
or
cs
stos
test
push
sahf
add
lea
fsubr
inc
xchg
sbb
jmp
push
push
push
dec
and
add
add
or
sbb
cmps
jecxz
jp
cmp
inc
push
pop
icebp
dec
es
mov
mov
cmps
mov
mov
xor
mov
fiadd
sbb
push
pusha
and
inc
cmc
shl
push
js
ror
xor
loopne
mov
mov
in
push
adc
test
mov
xor
mov
pop
push
sub
cmc
xor
fimul
mov
icebp
nop
add
jp
rol
nop
fnstsw
adc
pop
adc
aas
mov
push
lea
iret
sbb
mov
ins
sub
xchg
jp
xchg
inc
js
popa
push
and
js
jmp
mov
fs
call
xor
pop
movs
mov
js
mov
mov
lea
mov
dec
jg
xor
ret
or
jge
mov
js
xor
xchg
fild
adc
lods
push
xchg
mov
scas
test
fcomp
mov
sub
and
mov
ins
dec
in
lahf
add
xchg
and
icebp
cmc
pop
inc
or
fsub
popf
push
add
sub
test
xor
and
push
xor
loop
mov
or
cmp
or
loop
ja
pop
ins
nop
adc
jl
call
add
mov
call
adc
mov
mov
add
push
push
mov
(bad)
jmp
(bad)
adc
sbb
adc
xor
add
adc
pop
add
adc
and
dec
(bad)
in
sub
add
add
and
outs
aas
shl
out
fiadd
sbb
mov
add
push
inc
inc
sbb
mov
push
cld
test
loope
sub
or
sub
xor
add
inc
out
mov
sub
in
push
movs
add
fst
jnp
pop
repnz
xchg
add
adc
jne
add
in
fld
sub
xchg
into
adc
cmp
push
pushf
sti
test
into
fdiv
or
mov
push
lahf
cld
mov
adc
inc
out
dec
scas
jno
add
test
fwait
test
jg
adc
scas
and
jecxz
inc
js
push
cmp
add
pop
or
ret
jle
xor
lods
(bad)
(bad)
js
and
xchg
mov
enter
add
jl
cld
mov
or
cmp
jge
sbb
clc
movs
inc
add
add
std
mov
push
dec
rcr
jmp
xor
out
iret
adc
(bad)
sbb
and
or
pop
mov
mov
mov
imul
sub
mov
and
cmc
cmps
mov
and
sbb
sbb
xchg
or
(bad)
mov
push
jo
mov
pop
add
inc
or
pop
shl
sbb
pop
outs
dec
or
clc
mov
test
lods
lahf
fisubr
add
imul
add
adc
add
mov
jmp
cmc
dec
lods
les
add
test
add
push
and
and
pop
push
jl
fwait
outs
pop
les
int3
aam
(bad)
loopne
repz
xchg
mov
sub
mov
aad
sar
pop
or
ror
adc
dec
or
fdiv
fwait
jge
or
nop
adc
sub
push
jg
std
sbb
add
(bad)
push
sbb
pop
push
jmp
and
dec
mov
mov
push
aad
pop
mov
add
inc
fidivr
cmp
je
add
sub
add
sub
or
stos
adc
cmps
cdq
test
sbb
ret
dec
xchg
lea
nop
sub
inc
push
or
and
shl
add
pusha
or
ror
inc
or
adc
push
retf
loop
mov
push
jmp
push
clc
inc
mov
aam
dec
sbb
mov
add
stos
adc
add
jmp
add
ficom
js
cs
pop
and
push
cmp
or
sbb
mov
and
out
sub
ror
mov
jnp
outs
add
and
xchg
or
inc
mov
mov
movs
ja
inc
mov
movs
in
adc
test
or
sbb
enter
add
outs
mov
dec
pop
sbb
movs
jo
test
inc
jnp
and
sbb
push
mov
pop
dec
lock
add
adc
loopne
mov
push
hlt
push
les
mov
adc
test
mov
mov
ror
mov
pushf
mov
in
loope
mov
and
cmp
mov
test
push
push
jp
push
(bad)
stos
sub
sbb
jmp
dec
xor
js
lock
js
mov
mov
pop
dec
and
stc
mov
adc
or
ret
ficomp
(bad)
dec
arpl
cmc
or
or
nop
inc
mov
xchg
in
call
cmp
jle
push
push
or
xchg
jg
repnz
dec
imul
pop
inc
mov
jle
pop
(bad)
xor
pop
or
cli
sub
or
out
in
movs
nop
ret
dec
pop
xchg
hlt
sbb
adc
push
push
ins
xchg
or
test
jl
pop
mov
js
dec
pop
push
call
adc
inc
sub
rol
jo
add
push
adc
mov
bound
shl
iret
sub
or
add
arpl
sub
xor
xchg
adc
xlat
dec
(bad)
jmp
mov
ror
test
add
pop
jnp
mov
inc
add
idiv
inc
cmps
fmul
lea
inc
daa
repnz
sbb
rcl
or
and
lock
push
fcom
adc
adc
jle
push
icebp
jns
mov
rcl
mov
add
jge
es
es
push
inc
inc
and
rcr
jmp
cmp
popf
lods
pop
jle
dec
ret
cwde
push
or
arpl
add
leave
dec
in
add
add
add
imul
enter
std
adc
in
pop
popf
xor
scas
or
mov
add
rol
fcomp
in
arpl
ror
repz
push
dec
cmc
mov
mov
(bad)
pop
mov
dec
mov
mov
push
outs
movs
sbb
xchg
test
or
push
call
ret
mov
or
cld
shl
repnz
dec
cmp
push
ror
pop
mov
adc
movs
scas
and
add
retf
add
gs
cmp
loop
test
and
cmp
mov
int3
(bad)
call
movs
and
add
xor
adc
push
mov
std
or
and
xchg
dec
pusha
aaa
xchg
add
adc
sahf
xchg
jl
pop
out
mov
jnp
pop
mov
mov
mov
movs
inc
(bad)
and
fs
cmp
fild
fidivr
mov
loope
push
jb
mov
inc
dec
cmp
sub
mov
pusha
test
pop
(bad)
ror
(bad)
and
push
nop
test
push
cwde
movs
sahf
inc
nop
dec
mov
push
push
adc
mov
arpl
or
ss
mov
ins
push
xor
sbb
mov
stos
stc
cmp
push
or
or
ret
pop
ror
push
nop
add
lods
imul
cwde
mov
je
inc
cli
in
xchg
push
xor
pop
adc
jbe
dec
lea
pusha
push
pop
or
xchg
cmp
outs
adc
and
sub
and
mov
in
sar
pushf
jle
aam
shr
xchg
mov
pop
popa
dec
std
mov
call
add
cmps
or
imul
sub
out
push
pusha
arpl
sbb
dec
sbb
mov
mov
push
mov
xor
sbb
les
xchg
cmps
imul
and
mov
xor
ss
jno
pop
sbb
hlt
ror
(bad)
adc
mov
out
sub
les
inc
and
nop
add
and
or
mov
jns
loop
nop
movq
fdivr
sbb
retf
nop
sbb
scas
mov
loope
inc
fist
retf
cli
push
add
push
leave
cmp
stos
shl
dec
rcl
jne
inc
xor
inc
mov
push
jae
stos
add
push
outs
inc
push
fld
inc
add
pop
fnstenv
cld
scas
inc
test
cld
dec
shl
shr
mov
inc
or
je
mov
popf
call
cmp
add
retf
cmp
cmc
mov
sar
add
push
sub
sub
cmp
dec
loopne
sub
jp
jmp
mov
add
cmp
inc
fisub
or
aaa
xor
inc
adc
inc
adc
mov
int
loope
jp
je
adc
add
mov
hlt
dec
loopne
sbb
add
adc
push
cwde
hlt
lea
push
cmps
pusha
mov
jo
xchg
push
test
push
loop
pusha
mov
adc
sbb
test
push
xchg
test
or
cmp
dec
add
ins
sbb
out
shr
in
movs
js
stos
ret
xor
loopne
cmp
mov
test
inc
mov
inc
stc
inc
rcl
jp
cmps
and
inc
(bad)
hlt
sbb
jl
aam
pop
dec
adc
cmc
nop
jg
call
je
call
std
jl
(bad)
cmps
sbb
jmp
stc
bnd
inc
mov
dec
adc
mov
push
xchg
sub
jmp
(bad)
nop
cmc
in
jecxz
xor
jo
push
pop
mov
retf
dec
or
inc
sbb
in
inc
(bad)
inc
xor
mov
jle
and
scas
mov
and
jg
xor
adc
jecxz
sbb
fsub
sub
jmp
add
shr
add
add
mov
aad
arpl
js
jne
sbb
jl
inc
sub
iret
mov
js
into
lea
add
dec
add
sbb
sahf
popa
push
loopne
sub
or
dec
ret
and
hlt
jnp
and
add
and
sbb
jl
dec
(bad)
xor
xlat
in
push
dec
sar
rcl
sbb
add
cmps
ret
mov
test
arpl
or
inc
(bad)
xchg
mov
jo
fsub
jbe
cmp
xchg
adc
fs
test
push
ret
adc
pop
mov
loope
mov
push
mov
mov
lds
mov
or
sbb
mov
xchg
mov
push
xchg
test
jg
push
jmp
dec
jmp
les
test
bound
or
push
or
test
xlat
adc
push
or
sahf
pop
add
and
mov
movs
je
sbb
loopne
stc
push
call
pop
jl
and
sbb
lea
xchg
sbb
jno
fstp
and
xor
cmp
cmp
test
jo
into
gs
shr
cmps
xchg
sbb
add
cmp
(bad)
mov
repz
add
xor
popa
mov
ins
pop
cdq
mov
movs
xchg
inc
les
sbb
fcomp
inc
push
push
ror
dec
jmp
rol
mov
fcom
and
add
cld
push
push
jmp
sbb
sub
inc
pop
sbb
adc
or
fsub
lea
imul
pop
fisttp
inc
adc
adc
xchg
adc
inc
ror
adc
adc
xchg
push
popa
retf
push
repz
sbb
sub
jmp
mov
xchg
jecxz
push
iret
imul
and
movs
adc
(bad)
dec
or
push
dec
add
loop
sar
mov
aas
shr
pop
ins
inc
mov
add
push
dec
pop
dec
and
pusha
add
call
xor
or
and
and
inc
or
and
pop
and
sub
dec
mov
inc
mov
jb
sbb
jmp
mov
and
push
inc
dec
jo
popf
xchg
xchg
jmp
les
mov
das
inc
mov
stc
arpl
mov
sbb
mov
fst
dec
sti
mov
adc
push
cmps
aam
or
les
sbb
cwde
inc
sbb
mov
cmp
lods
adc
push
cmp
mov
retf
pushf
push
pop
add
sub
inc
adc
ret
xchg
push
or
into
arpl
sahf
ret
neg
int
int3
sub
mov
shr
mov
movs
push
imul
or
ja
adc
data16
xchg
sub
lds
sahf
inc
xor
cwde
(bad)
shl
icebp
(bad)
aad
(bad)
pop
lahf
and
or
nop
daa
test
xchg
xor
and
adc
inc
cdq
mov
adc
inc
and
fcom
inc
inc
cdq
out
cmp
rol
cs
cmp
cs
bound
mov
mov
add
ret
push
daa
sbb
or
and
sbb
ret
lods
sub
cmp
dec
xor
(bad)
(bad)
or
loopne
jmp
int3
outs
and
xchg
and
push
push
adc
sbb
js
in
inc
inc
xor
xor
in
test
sbb
mov
or
add
fbstp
jb
ror
xchg
je
ss
xchg
mul
jmp
and
lods
or
mov
xor
int
pop
test
or
sub
and
push
imul
icebp
xchg
test
sbb
jno
mov
push
push
push
jge
push
and
and
retf
add
and
push
inc
fwait
adc
or
ins
sbb
push
xor
xor
and
mov
(bad)
sbb
add
mov
jge
push
lods
xchg
adc
or
xchg
clc
or
rol
and
push
ja
push
imul
add
add
jp
bound
add
pop
add
mov
jb
pusha
int
stc
into
and
cmp
out
cs
or
loopne
sbb
inc
push
cmp
sub
push
hlt
jb
inc
lds
xor
push
push
fadd
ret
bswap
lds
retf
inc
cmps
cs
dec
add
loope
adc
stos
mov
and
outs
ss
jns
adc
inc
or
mov
(bad)
in
es
xchg
cmps
cmc
out
mov
test
sahf
mov
and
and
and
and
adc
test
and
and
sub
dec
shr
shr
add
adc
or
cmp
inc
js
out
xor
pop
or
inc
inc
push
inc
or
sbb
mov
lods
inc
xchg
add
int
xchg
jb
iret
push
int
in
sub
push
cld
push
lods
cmp
fwait
lea
mov
sub
sbb
ret
or
popa
scas
movs
or
mov
dec
mov
les
leave
pop
daa
pop
and
data16
or
add
or
mov
push
and
and
movs
sub
call
or
mov
fwait
and
ret
lods
or
ror
cdq
je
addr16
add
sbb
mov
xor
fsubr
adc
fnstsw
bound
jo
pop
and
clc
popa
loope
push
add
out
or
mov
adc
mov
scas
popa
adc
xchg
pop
adc
daa
or
nop
test
cmovs
cmp
sub
mov
ja
fcom
push
movs
inc
xor
mov
cmp
or
push
ret
sub
dec
and
in
or
retf
xchg
or
adc
sbb
js
xchg
sbb
xor
mov
pop
push
pop
cli
jecxz
or
xor
inc
cdq
je
inc
ss
xor
and
lock
into
test
xchg
dec
or
pop
cwde
mov
add
inc
loop
imul
inc
adc
or
sub
cwde
or
fcom
dec
adc
jg
add
imul
or
paddb
sbb
out
and
stc
adc
push
dec
inc
dec
jne
pop
push
imul
dec
pop
jmp
and
adc
pop
sbb
or
add
and
hlt
cmc
scas
push
cmp
cmc
inc
push
or
jle
and
mul
mov
test
mov
fdiv
cmp
bound
jb
arpl
inc
pop
repnz
xchg
bound
pop
mov
imul
mov
mov
aam
mov
fisubr
sbb
es
and
adc
lea
out
rol
lock
popa
fwait
or
bound
adc
call
cmp
inc
sub
mov
lock
mov
(bad)
lock
imul
sbb
cmp
fstp
mov
stos
xchg
or
imul
adc
and
mov
outs
and
inc
ins
test
or
add
xor
enter
or
inc
push
xchg
das
leave
lock
push
ror
or
clc
xchg
jo
stos
xor
mov
test
dec
adc
sub
sub
inc
add
int3
push
mov
add
popa
adc
sbb
sar
cld
clc
or
fs
enter
and
sub
sub
adc
fwait
or
mov
xchg
pop
adc
adc
nop
xchg
pushf
ins
and
add
call
push
adc
popf
xor
cmp
fsub
mov
add
adc
stos
leave
push
sahf
push
call
rol
test
outs
fstp
add
gs
shr
adc
rol
fnstenv
push
and
add
fwait
std
push
mov
stc
mov
call
fcomp
imul
sub
ret
shl
push
pop
and
lea
jg
xchg
shl
sub
pop
in
test
fidivr
(bad)
adc
or
push
inc
push
ss
in
cdq
popa
inc
loope
adc
rcl
push
in
xor
rcl
push
mov
adc
ins
inc
and
(bad)
or
pop
adc
mov
add
test
das
jno
cmp
adc
add
adc
hlt
add
push
enter
call
movs
lods
or
sub
or
push
(bad)
fsubr
mov
pusha
lock
retf
mov
retf
mov
mov
jae
add
fucomi
push
push
push
psubusw
ins
inc
sbb
gs
xor
sbb
adc
push
(bad)
dec
inc
push
lea
jno
fsub
or
add
jmp
int
inc
mov
mov
push
retf
sahf
pushf
stos
add
(bad)
add
shl
retf
sar
add
clc
add
hlt
add
add
jl
add
cmp
clc
sbb
sbb
into
mov
es
lea
mov
sbb
pop
mov
or
pop
adc
ss
adc
int
add
add
add
adc
pop
adc
add
rcl
dec
push
cmp
arpl
and
and
ins
mov
add
fcmovbe
push
mov
inc
sbb
sbb
push
pop
adc
adc
mov
es
repnz
sbb
push
in
and
and
cmp
sub
scas
sub
dec
repnz
mov
shl
icebp
xor
out
push
aas
bound
ret
jbe
add
retf
nop
test
fwait
call
sbb
push
sbb
xchg
and
pop
popf
cmp
jge
outs
push
bound
(bad)
test
and
(bad)
sbb
sbb
or
push
and
sbb
jl
sbb
in
add
xor
mov
jmp
je
push
pop
movs
pop
adc
jl
sbb
test
add
xor
pop
aas
daa
and
jmp
je
shr
inc
xor
add
add
sbb
push
adc
or
cmp
dec
and
je
dec
and
and
and
pop
sbb
imul
fld1
push
stc
jo
test
and
push
outs
ss
(bad)
and
test
or
loope
xchg
test
sbb
es
fstp
mov
mov
push
fisub
dec
or
fs
or
add
push
inc
lock
hlt
mov
cmp
sti
and
mov
mov
pop
inc
test
add
mov
test
es
inc
addr16
dec
enter
fld
push
or
pop
or
(bad)
cmp
inc
nop
sbb
push
pop
mov
adc
sub
jo
mov
inc
test
mov
push
or
dec
or
pop
dec
or
iret
call
and
fist
sbb
and
cs
xchg
les
stos
mov
xchg
mov
loope
or
cld
mov
cmp
add
xchg
mov
xchg
dec
test
xor
fiadd
push
sub
mov
mov
fs
pop
or
les
sub
push
es
gs
imul
cmp
xchg
lods
rcr
push
add
cvtdq2ps
and
pop
sti
add
sub
push
dec
je
or
sbb
and
fst
pop
pop
shl
fiadd
lods
pop
ret
mov
mov
gs
adc
add
mov
add
out
adc
mov
mov
mov
sbb
pop
iret
retf
mov
(bad)
lock
je
inc
imul
repnz
mov
mov
mov
xor
or
jle
mov
fisub
mov
imul
sbb
ror
js
add
and
imul
or
xor
ds
and
adc
clc
test
adc
ins
mov
pop
or
xchg
test
hlt
and
add
pop
inc
push
in
stc
sub
mov
cli
inc
pop
ror
xchg
inc
popa
stc
mov
into
jmp
xchg
cmp
ret
mov
es
and
pop
or
je
add
mov
dec
sub
jbe
(bad)
in
imul
mov
and
push
lds
dec
jmp
add
jno
inc
cmps
push
ins
enter
and
fs
ror
mov
int3
rol
push
jo
pop
mov
mov
and
in
in
or
cli
test
mov
push
loopne
and
mov
dec
les
jp
jbe
stos
(bad)
in
inc
add
dec
lea
add
mov
inc
fmul
ins
add
pop
and
push
jo
push
push
mov
push
movs
ins
shl
or
scas
or
pop
dec
xor
push
dec
test
sub
sub
mov
(bad)
and
pop
loop
mov
adc
(bad)
aam
inc
fcmovu
adc
dec
push
in
pushf
xchg
icebp
mov
mov
xchg
mul
push
sub
mov
add
jo
jo
nop
adc
test
rcl
jbe
or
mov
dec
rol
or
mov
adc
cmp
pop
xchg
xchg
sub
sbb
cmp
in
push
mov
shl
pop
pusha
push
push
push
adc
in
mov
add
sub
mov
jl
add
dec
adc
pop
nop
sub
and
mov
add
fsub
sbb
xchg
ins
fiadd
in
xchg
mov
add
xchg
push
xor
arpl
movs
rcl
adc
ins
bound
or
push
in
pop
mov
sub
ds
inc
add
xchg
and
not
pop
js
test
es
aam
pop
dec
or
xchg
rol
sbb
ja
cmp
out
outs
fadd
mov
sub
adc
fucomip
xrelease
cmp
mov
lea
fdivr
pop
popa
sti
pop
jge
enter
mov
mov
cmp
jl
mov
add
cmp
arpl
jl
mov
jle
dec
sbb
ficom
stos
jne
dec
pop
or
mov
push
or
add
shl
movs
cwde
loop
push
lock
movs
jg
or
mov
pop
cdq
outs
dec
je
inc
adc
js
rol
pop
pop
test
push
pop
ins
nop
dec
(bad)
pop
(bad)
shr
fistp
mov
std
pop
jbe
adc
mov
sbb
mov
jo
and
outs
or
or
xor
cmp
xchg
out
shr
inc
push
or
in
or
ins
add
leave
and
sub
xchg
or
pop
jl
cmps
daa
sub
repz
add
addr16
push
mov
pop
pop
and
nop
add
and
xchg
call
push
adc
pop
xor
or
sbb
dec
sub
pop
push
or
xor
cmps
mov
mov
imul
cwde
clc
and
sbb
add
shl
add
nop
sub
in
xor
push
arpl
and
dec
sbb
fist
iret
cmp
sub
mov
cmp
jne
mov
mov
fstp
lods
or
dec
iret
shr
pop
push
jmp
aas
leave
gs
push
aas
mov
add
ret
xchg
mov
xor
imul
inc
pop
sub
fs
(bad)
push
or
add
jns
or
push
add
sbb
or
push
rol
and
dec
fisttp
dec
shl
sbb
cmps
ret
fld
jns
mov
or
adc
or
jmp
pop
pop
aaa
and
cmp
mov
jg
inc
call
dec
cmps
les
push
xor
sbb
jae
aam
sub
add
int3
jnp
jb
movs
dec
inc
dec
xor
inc
inc
dec
dec
jae
outs
scas
ja
push
pop
mov
cs
pop
pop
pop
pusha
or
pushf
mov
lea
push
call
and
je
enter
js
jl
cs
mov
mov
imul
mov
sub
pushf
dec
pop
sbb
call
comiss
push
or
dec
jl
es
mov
lock
arpl
mov
arpl
adc
dec
in
or
fst
adc
popa
test
fst
or
ret
dec
push
inc
or
push
rol
outs
sbb
aaa
jae
fstp
loope
xor
sub
or
int3
or
sub
inc
jecxz
sub
push
sahf
cmp
dec
jle
xor
add
mov
and
lea
rcr
es
sub
xchg
add
mov
push
mov
xchg
jo
lds
mov
clc
(bad)
clc
add
cld
sub
sub
push
ret
rol
ss
add
sub
or
jb
mov
or
add
inc
test
push
mov
call
(bad)
fcomi
cmp
push
add
adc
mov
shr
pop
test
lock
dec
pop
and
add
ins
mov
sbb
inc
adc
cmp
mov
daa
or
add
loopne
xor
arpl
test
push
mov
mov
adc
imul
cdq
imul
vfmaddps
cdq
add
loopne
xchg
cmp
dec
pusha
add
in
mov
je
push
addr16
dec
mov
adc
cmp
push
xchg
ss
fs
pop
mov
pusha
push
sti
and
js
out
pop
or
pop
je
fld
mov
rol
fs
fstp
or
sub
or
sahf
xchg
sbb
sub
sub
fs
jmp
add
add
cmovle
je
lahf
aam
sbb
jno
inc
mov
retf
dec
adc
scas
push
add
adc
cmp
add
cmovno
mov
add
popf
xor
imul
sbb
push
mov
mov
add
lods
imul
xor
add
inc
js
aad
push
add
inc
ret
jo
inc
jp
stc
lahf
pop
in
aam
xor
(bad)
das
xchg
or
jne
in
cmps
test
sub
push
adc
push
fisub
jle
push
inc
movs
js
je
pusha
sbb
sub
leave
xchg
mov
and
jne
pop
mov
aam
pop
or
and
fisubr
ins
and
test
stos
aam
jnp
mov
bnd
cmps
ret
aaa
mov
push
in
xchg
(bad)
pop
or
in
mov
fbld
inc
(bad)
jns
daa
push
adc
inc
inc
test
add
and
add
add
scas
mov
div
jb
cdq
xchg
(bad)
lock
mov
inc
sar
arpl
push
and
add
or
inc
dec
mov
pop
inc
fdiv
iret
pop
pop
pop
or
movs
or
adc
push
mov
mov
inc
xor
fimul
lahf
dec
xchg
and
outs
dec
lea
jmp
dec
and
ins
inc
out
scas
mov
push
adc
fiadd
data16
mov
add
xlat
movs
nop
xor
mov
add
mov
cmc
dec
das
and
add
ja
or
push
xchg
xor
xchg
out
add
stc
adc
mov
dec
test
add
les
jg
mov
xor
aam
lea
dec
mov
mov
lea
cwde
push
or
mov
inc
and
adc
add
mov
test
jne
arpl
dec
mov
mov
test
adc
sub
cmp
adc
lock
stc
cmp
adc
push
imul
retf
jge
jns
aaa
dec
loopne
dec
cmc
push
cmp
mov
sub
sub
pop
lahf
fst
call
cmp
test
test
add
mov
xchg
sahf
and
call
add
or
enter
and
add
mov
mov
das
xchg
sub
xor
in
icebp
mov
mov
add
out
and
add
xor
popf
and
xlat
rcl
pop
mov
aad
shl
mov
and
mov
adc
repz
lock
test
pop
es
outs
(bad)
adc
jmp
lea
or
dec
push
aas
adc
xor
xor
mov
xchg
ins
addr16
xchg
add
sub
push
test
adc
sub
mov
mov
and
in
push
retf
ror
xor
xchg
mov
dec
ret
sub
pop
mov
iret
add
call
mov
sbb
sahf
adc
sub
mov
(bad)
cld
loopne
ins
or
inc
les
aaa
sbb
cmova
int3
sahf
test
inc
ja
mov
sub
or
mov
inc
sub
sbb
sub
and
pop
sbb
dec
(bad)
xlat
cmps
cmp
cmp
fld
push
bound
xor
add
sub
push
daa
gs
jne
sbb
sbb
enter
fs
push
xchg
rcl
fadd
out
push
dec
sub
and
imul
loopne
mov
dec
mov
inc
call
shr
or
push
adc
sbb
pop
jbe
sub
jmp
dec
in
mov
cmps
dec
add
add
add
inc
mov
cmps
movs
leave
xchg
retf
adc
mov
in
mov
xor
cmp
daa
adc
pop
ret
and
cdq
push
jg
sbb
test
cwde
test
add
add
sub
mov
dec
mov
ss
xor
test
xchg
je
xchg
or
jno
jmp
pushf
into
dec
adc
mov
xor
mov
sbb
jae
and
add
xchg
push
mov
cmp
or
ja
ins
imul
and
adc
cwde
pop
jg
es
dec
imul
outs
pop
test
je
push
jne
inc
jne
inc
fcmovne
add
push
pop
or
dec
sbb
and
ja
loopne
les
dec
jo
push
pop
xchg
mov
outs
dec
loopne
or
aad
fnstenv
inc
adc
loope
imul
mov
and
inc
movs
xor
test
enter
mov
inc
sub
dec
es
sub
dec
sub
or
add
dec
sub
fnstcw
xchg
hlt
and
or
(bad)
jmp
test
call
dec
xchg
test
ins
adc
xor
pop
loopne
and
loopne
scas
adc
js
adc
xor
dec
jnp
push
and
xor
add
inc
jle
inc
push
ins
enter
test
pop
cmp
add
or
jmp
xor
mov
iret
adc
fst
mov
push
xchg
add
in
xor
inc
add
sahf
jnp
or
clc
fnstenv
fld
test
nop
add
adc
sub
fiadd
add
aam
aam
push
push
cdq
push
dec
inc
inc
nop
call
shr
inc
(bad)
scas
sub
mov
add
mov
lea
adc
jnp
pushf
or
push
(bad)
mov
xor
leave
and
dec
inc
rcl
xor
push
sbb
fadd
adc
dec
das
jl
push
pusha
xlat
cmc
push
dec
push
sub
mov
jle
mov
lahf
adc
das
(bad)
ret
je
xchg
adc
xchg
dec
mov
or
adc
fld
and
and
mov
push
test
xor
shl
mov
icebp
adc
cs
(bad)
js
push
cs
movs
cmp
mov
cmp
xor
mov
adc
push
rol
ror
mov
cmp
add
sub
or
mov
(bad)
sub
cmps
xor
push
jno
or
aas
mov
and
arpl
cs
ins
mov
stc
sub
in
sub
call
movs
jno
and
and
lsl
js
int3
inc
or
xor
cmp
ins
addr16
retf
ss
sub
adc
mov
hlt
add
mov
test
or
cmc
fisttp
mov
mov
sub
dec
jo
shl
inc
or
mov
add
or
mov
dec
pop
push
sub
or
lods
inc
pop
inc
and
mov
add
cdq
mov
add
es
or
ds
or
cmp
and
jns
mov
movs
adc
sbb
inc
mov
push
pop
push
push
and
xor
aaa
lea
call
xchg
mov
ret
loop
mov
add
test
and
imul
inc
(bad)
mov
sbb
dec
sahf
aam
inc
out
jmp
iret
int
fnstcw
div
daa
or
stc
pushf
inc
or
mov
mov
adc
ror
rcr
repnz
push
ror
push
push
inc
inc
lea
shl
mov
or
inc
mov
push
rcl
xchg
call
(bad)
push
mov
fadd
jno
test
push
push
inc
lock
aam
pop
inc
jmp
mov
pop
xchg
iret
jns
jne
dec
stos
mov
js
ds
or
je
sbb
ficom
call
push
(bad)
jecxz
add
sbb
mov
ret
xor
jl
enter
inc
sub
cmp
xchg
ret
dec
or
adc
sub
pop
dec
and
enter
scas
cmp
push
fnstcw
ja
and
push
inc
mov
mov
je
rol
mov
clc
push
and
xor
add
aad
and
sbb
xchg
mov
dec
mov
out
cwde
popa
retf
mov
test
push
sbb
loop
mov
dec
add
inc
sub
stc
outs
dec
repz
sub
cmp
lds
mov
mov
sbb
adc
jne
add
inc
xchg
mov
push
pop
and
push
ret
mov
addr16
xchg
and
lods
adc
pop
mov
or
rol
les
xor
pop
inc
pavgb
push
shl
mov
or
cmp
and
popf
fld
in
push
pop
cmp
inc
or
and
push
pop
inc
pop
mov
test
mul
lea
inc
daa
(bad)
mov
ds
or
cmp
mov
cmc
scas
inc
js
sub
add
(bad)
idiv
cli
mov
pop
xchg
setle
pop
mov
or
xlat
mov
jecxz
push
pop
pop
push
adc
cwde
into
cmp
aad
arpl
ror
push
sub
sub
mov
loopne
adc
or
xor
inc
sub
scas
(bad)
mov
inc
jo
es
dec
gs
nop
push
popf
or
ja
jmp
mov
je
stos
adc
xor
lock
mov
pushf
pusha
or
dec
(bad)
or
aam
push
add
leave
(bad)
retf
jb
jp
mov
inc
enter
sar
xor
inc
or
loop
mov
inc
add
add
xchg
jecxz
pop
fsubr
movs
fnstcw
(bad)
jmp
push
in
push
pop
cmp
mov
sub
jno
mov
popa
jmp
mov
pusha
mov
add
fwait
ins
in
adc
and
add
sub
add
pop
int
mov
arpl
cmps
movs
dec
cmps
mov
and
fadd
push
xor
push
push
inc
push
add
add
movs
mov
ja
mov
clc
sub
push
dec
std
out
(bad)
and
je
and
or
xchg
sub
mov
inc
test
cmp
movs
repnz
sbb
sbb
test
push
push
add
mov
xor
mov
add
rol
cmps
xchg
in
sahf
mov
dec
lds
enter
or
aam
ins
push
mov
adc
jae
in
lahf
mov
sbb
je
sbb
lea
cdq
shr
xor
adc
enter
jnp
add
sub
(bad)
inc
jne
in
(bad)
sti
lea
jle
dec
mov
push
cdq
inc
inc
xor
and
aaa
push
jp
loopne
mov
pop
pusha
or
dec
leave
add
mov
fsubr
xor
fld
add
push
mov
mov
push
pop
xchg
ret
push
inc
ins
sub
aas
mov
sbb
out
push
(bad)
adc
call
or
and
in
sub
dec
cs
adc
sbb
pop
(bad)
fidivr
inc
popa
push
ror
outs
dec
test
or
leave
push
mov
arpl
stos
xor
pusha
adc
aas
enter
popf
es
push
and
lock
rcl
mov
jp
aas
or
ret
dec
js
xor
js
pop
cwde
cmp
push
push
ins
js
inc
fs
push
rcr
jns
movs
sub
dec
loopne
lea
movs
in
data16
out
mov
fnstcw
cmp
std
xor
arpl
ret
clc
scas
hlt
pop
add
dec
lock
push
in
jmp
stos
ficom
dec
sub
push
xor
dec
(bad)
imul
fs
ret
xor
jns
sbb
inc
push
sub
jle
mov
xlat
push
lods
scas
inc
gs
push
sub
xchg
js
fisttp
or
inc
sbb
bnd
add
sbb
or
adc
xor
or
inc
xor
retf
jae
push
mov
dec
cmp
add
and
(bad)
sbb
push
imul
xor
lods
rol
sbb
mov
sub
pop
pop
pop
dec
mov
les
sub
sti
ss
xchg
jo
dec
das
aam
pop
xchg
add
imul
mov
or
daa
mov
mov
jnp
sar
cmp
adc
call
dec
outs
mov
out
sbb
xor
out
jmp
xor
sti
mov
mov
les
add
push
lea
sub
pop
and
outs
test
cmp
xchg
imul
xor
punpckhwd
cmp
and
sub
push
repnz
leave
js
test
sbb
test
adc
sar
inc
sbb
rcl
call
and
add
test
ror
adc
pop
inc
mov
shl
frstor
test
pop
les
sbb
fcom
fwait
xchg
mov
inc
bound
ins
popa
push
sbb
xchg
scas
dec
pop
xor
out
mov
dec
and
outs
mov
pop
imul
test
std
inc
fstp
cmp
jge
and
jge
cmp
mov
add
cmp
cmp
mov
jno
sbb
jns
retf
adc
not
sub
dec
cs
sbb
movs
mov
ror
add
adc
jmp
in
(bad)
push
test
dec
mov
fst
in
loope
jns
inc
stos
xchg
mov
ret
fdivr
test
and
adc
pusha
jecxz
neg
xor
popf
and
or
mov
sti
push
add
pusha
inc
add
das
mov
dec
lea
loopne
(bad)
in
sbb
and
pop
mov
lea
inc
pop
add
inc
xor
pop
xchg
inc
(bad)
ss
xchg
cmp
or
hlt
mov
ins
cmp
es
jl
xchg
xor
xor
push
xor
loope
cmp
and
or
call
mov
jmp
fs
inc
arpl
pusha
test
add
sbb
mov
sbb
dec
lods
cs
jb
pusha
aaa
mov
mov
shl
rol
adc
sbb
adc
mov
sbb
je
into
push
xchg
pusha
fcomi
mov
imul
(bad)
(bad)
cmp
aad
fsub
shr
pop
mov
loope
mov
ficom
rol
mov
and
out
popa
jnp
ins
mov
inc
or
push
(bad)
jbe
mov
aaa
and
pop
fwait
adc
ins
mov
and
or
push
movs
cdq
or
ins
push
jle
add
movs
leave
pop
ror
sbb
push
gs
push
shl
mov
loopne
es
push
inc
lea
and
sub
dec
sbb
add
add
mov
push
push
fiadd
pusha
ret
scas
cmp
cld
sbb
sbb
aaa
add
fs
cdq
es
xchg
dec
hlt
dec
mov
pop
or
arpl
hlt
loopne
lea
adc
push
popf
stos
inc
call
push
cmp
xor
sub
fs
xchg
imul
xor
jno
aam
mov
ror
mov
aas
jne
push
adc
lds
push
sbb
and
pop
fs
jnp
inc
sub
sbb
mov
pop
repnz
xor
push
rcl
shl
sub
fwait
test
aas
inc
ret
sub
jmp
adc
jmp
xchg
mov
std
outs
arpl
or
stc
cmp
sub
dec
inc
pop
pop
jnp
pusha
jb
pop
lods
xchg
cmp
mov
xor
dec
popa
xchg
pop
adc
pop
push
dec
add
cmp
adc
mov
jo
lock
xchg
repnz
mov
xlat
jmp
pop
jbe
adc
sbb
lock
sbb
xor
cmps
pop
pop
sti
sbb
jl
rcr
pop
pop
sbb
and
cmp
and
movs
in
pushf
add
and
cmp
sbb
cli
add
into
ja
mov
xor
add
loop
mov
cmp
out
pop
outs
sub
adc
add
adc
addr16
mov
jns
test
cmp
sub
push
sub
das
add
ror
enter
pop
adc
adc
sbb
push
add
sub
xor
lahf
push
inc
(bad)
xchg
cmc
mov
adc
or
and
mov
mov
add
or
pop
cmp
test
and
repnz
mov
mov
push
adc
sbb
xor
dec
adc
xchg
xchg
call
dec
and
adc
retf
or
sahf
daa
sbb
and
fadd
test
xchg
popf
enter
inc
inc
out
inc
xchg
imul
sub
sbb
arpl
hlt
mov
ja
scas
es
mov
mov
xchg
fwait
xchg
xor
push
outs
add
pop
and
ins
or
add
pushf
push
xor
fist
rcr
mov
and
fstp
cmp
sub
add
mov
lock
sub
cdq
adc
inc
or
xchg
shl
dec
mov
or
test
dec
imul
cmp
lock
dec
pop
jbe
xor
rcl
inc
xchg
(bad)
ss
xchg
cs
and
iret
jns
xchg
inc
stc
mov
mov
into
adc
xchg
daa
rol
xor
mov
mov
cs
add
dec
clc
dec
retf
jl
sub
adc
fdivr
imul
rcl
push
cmp
add
out
dec
stos
es
stos
jmp
push
xchg
test
rcr
sub
pusha
les
daa
cs
push
mov
pushf
xor
in
xor
or
dec
add
dec
or
sbb
adc
add
dec
das
in
or
adc
in
cmps
xchg
stos
ss
call
lods
jae
cwde
daa
xchg
pop
sub
mov
in
mov
sbb
mov
xor
js
or
in
es
fs
push
cmp
dec
sbb
jecxz
lea
aam
cmp
mov
xor
xchg
mov
mov
mov
jno
inc
pop
lds
add
pusha
ss
cmps
adc
cli
inc
les
sbb
jecxz
adc
cmp
inc
push
inc
loopne
adc
mov
sbb
add
shr
mov
fsub
dec
sub
cmp
dec
dec
(bad)
inc
and
pusha
xchg
xchg
sub
or
outs
and
gs
cmp
hlt
fldenv
mov
xchg
xchg
retf
cmp
sub
scas
lods
xor
pop
sbb
inc
xchg
cmp
push
and
and
div
mov
or
dec
jbe
cmp
dec
repnz
pop
push
lock
les
and
or
into
not
pop
or
sbb
mov
int3
fcom
fmul
cs
retf
in
in
in
lock
pop
hlt
clc
cld
add
or
cmps
add
cs
dec
pop
or
sub
xor
jmp
pop
cmp
xchg
pop
pop
inc
and
sbb
retf
enter
push
push
dec
pop
test
mov
mov
inc
pop
dec
mov
inc
mov
add
xor
fist
or
sub
adc
add
push
sar
xchg
push
lods
jo
xor
jae
pop
xchg
or
mov
jae
sub
mov
loope
or
inc
and
scas
mov
sbb
mov
imul
add
mov
mov
add
push
pop
ins
icebp
mov
lock
add
sbb
call
add
retf
sbb
push
and
jo
outs
ins
push
not
cmovb
pop
dec
inc
mov
call
mov
imul
adc
or
pop
dec
or
cli
clc
loopne
xor
rol
mov
fld
repnz
add
jmp
mov
arpl
mov
enter
adc
sub
pop
fs
dec
loop
cmp
cdq
(bad)
mov
das
adc
add
imul
push
sbb
xor
xor
jo
or
adc
int
mov
cmp
jp
inc
imul
leave
push
ins
ins
jecxz
fstp
fcmovb
cmp
push
adc
pop
and
test
sbb
jl
cli
add
sbb
in
xchg
cmp
and
lock
je
test
mov
inc
mov
cmp
pusha
push
pop
mov
fimul
lea
stos
ja
cmp
and
push
add
dec
loopne
fst
add
and
jbe
mov
js
mov
dec
sub
add
or
stos
fadd
cmps
(bad)
call
mov
rcl
fwait
mov
add
pusha
and
ret
enter
add
dec
arpl
das
sbb
push
fidiv
adc
mov
and
push
xor
sub
ins
iret
je
lods
sbb
xchg
movs
push
jle
mov
mov
push
or
sub
add
adc
xchg
inc
jecxz
(bad)
rcl
or
cmp
push
cld
adc
popf
and
xor
mov
mov
fstp
sbb
cmp
out
push
fs
sbb
sub
fld
dec
and
push
test
ret
js
sub
add
xchg
pop
adc
lods
mov
or
sub
pop
mov
xchg
cmp
loope
jl
pushf
mov
sbb
sti
add
jmp
mov
add
add
fisttp
add
pop
cmp
inc
(bad)
fldenv
push
push
outs
cmp
inc
js
popf
xor
cmp
cmp
repnz
daa
xor
inc
add
test
inc
fdiv
mov
xchg
push
pop
push
xchg
je
or
inc
dec
adc
add
das
inc
inc
in
rol
pop
or
dec
ins
adc
fs
and
addr16
outs
xchg
imul
ret
inc
sbb
pusha
mov
dec
arpl
cmp
loopne
movs
dec
xchg
movs
fdiv
fldcw
shr
cmc
dec
pop
cmp
or
lea
and
jnp
add
pop
or
inc
movs
inc
call
xchg
xor
push
lock
pop
leave
dec
inc
add
call
dec
mov
push
push
jbe
pusha
inc
sti
jne
adc
push
mov
popa
mov
scas
hlt
outs
xor
js
icebp
pop
add
push
xchg
and
or
mov
(bad)
cmp
lods
fwait
dec
mov
(bad)
pop
jo
sub
icebp
push
popf
les
lea
iret
and
cmp
mov
into
das
inc
or
sub
aas
in
xchg
call
xor
pushf
pop
mov
xor
push
fisttp
xchg
mov
xchg
jg
and
mov
loope
xchg
shr
dec
push
mov
push
aaa
imul
std
loope
mov
sub
adc
fcmovu
xlat
push
inc
push
xchg
jae
and
inc
loop
add
dec
mov
(bad)
aad
mov
jnp
and
leave
clc
popa
jmp
inc
lea
sbb
lahf
adc
sbb
adc
xchg
inc
pop
test
retf
add
add
push
enter
jmp
jne
pop
mov
test
das
dec
push
mov
sub
and
jb
pushf
sbb
jb
lods
mov
and
pop
mov
push
outs
push
jno
pop
mov
ret
jl
mov
dec
or
adc
push
push
nop
inc
cmps
ret
aas
out
(bad)
xchg
and
mov
pop
mul
test
and
mov
nop
dec
mov
adc
lea
adc
shr
mov
pop
icebp
xchg
retf
push
mov
ins
cmp
je
add
dec
jp
outs
mov
cwde
add
add
and
or
or
jne
jmp
mov
sub
jne
push
out
loopne
push
pop
(bad)
push
sbb
mov
mov
pusha
adc
sub
pop
adc
and
cmp
mov
cmp
mov
psubusb
inc
mov
test
xor
mov
mov
push
and
push
cmp
jmp
gs
add
xor
imul
or
and
or
or
add
fld1
push
fwait
mov
add
add
xor
sbb
out
fstp
fs
add
sbb
jmp
fld
ins
fld
add
add
dec
fsubr
das
or
call
ret
xchg
xor
inc
ins
pop
jnp
jae
ds
int3
xchg
cmc
inc
aad
loopne
movs
cdq
fs
jnp
lds
scas
(bad)
aas
xor
xor
fstp
push
lea
add
push
jae
xchg
mov
dec
lods
gs
inc
test
fadd
xor
test
or
sbb
fucomi
hlt
and
or
cmps
fld1
stos
adc
call
add
movs
dec
cld
jmp
mov
jmp
aam
retf
or
sbb
mov
inc
jp
adc
adc
jge
je
jae
jb
repnz
add
and
jb
xchg
jg
jb
daa
add
push
mov
push
scas
loop
(bad)
adc
adc
sub
sub
xchg
or
loope
push
push
loop
sahf
and
in
test
and
js
sub
push
ins
in
mov
pop
ja
in
push
adc
push
sub
xchg
retf
push
shl
pop
add
or
mov
push
test
push
aad
jae
push
call
push
xor
xchg
test
jbe
xchg
mov
lds
jns
iretw
xchg
iret
and
aam
push
push
sbb
in
movs
or
jno
ret
ds
loop
xchg
por
sahf
sub
repnz
test
sub
ds
inc
xor
or
sbb
mov
jae
push
mov
fadd
push
adc
mov
mov
jp
cmp
ins
add
adc
push
mov
push
cwde
adc
lea
jle
cmp
jge
(bad)
sub
lea
nop
xor
lea
mov
fidiv
mov
jge
dec
hlt
repnz
push
je
sbb
xchg
jl
pop
jge
adc
adc
mov
push
xchg
es
in
xor
adc
push
cmp
mov
jo
xor
push
or
call
pop
ja
lahf
sar
push
xchg
shl
dec
nop
cmp
imul
or
pop
les
data16
add
les
xchg
add
adc
add
sub
pop
fwait
arpl
push
adc
sub
loope
js
and
adc
adc
adc
jne
hlt
mov
mov
inc
loopne
retf
xchg
xor
xor
jle
add
push
sbb
sahf
aam
outs
aaa
or
sbb
lahf
shr
les
imul
rcl
add
or
(bad)
pop
mov
pop
fcom
sti
push
push
adc
add
or
inc
or
jns
and
push
mov
dec
or
pop
mov
sub
loope
inc
adc
adc
lahf
inc
in
test
push
mov
cld
pop
adc
gs
mov
jmp
ss
rol
jne
mov
ds
call
add
fs
fucomp
jne
add
mov
push
push
mov
jl
xor
les
test
add
mov
and
mov
dec
enter
stc
xchg
mov
inc
mov
inc
out
xchg
adc
cmp
loope
cld
adc
adc
ja
sub
jp
lahf
mov
test
inc
xchg
and
adc
add
or
adc
push
cmps
mov
push
xor
and
and
fwait
cmp
add
push
adc
js
and
sbb
inc
add
sbb
dec
sbb
test
lods
and
mov
inc
dec
ins
ret
ret
retf
and
fiadd
xchg
cs
mov
lahf
dec
add
mov
sub
push
pop
push
xchg
jno
and
add
mov
mov
add
sub
mov
push
push
jnp
aaa
push
out
and
and
stos
xor
xor
sar
pushf
mov
or
shr
lds
popf
pop
sub
dec
rol
mov
mov
add
sub
adc
jno
mov
out
cli
sbb
sahf
sub
pop
xor
sub
fimul
sub
jo
sar
mov
in
mov
mov
xchg
sbb
inc
sar
xchg
push
xchg
or
sub
or
cdq
pusha
iret
(bad)
inc
call
and
or
pop
cmp
or
or
or
pop
and
jns
jp
stos
test
sbb
mov
inc
fmul
cld
ins
mov
sbb
ja
leave
add
pop
ins
xchg
sbb
inc
sti
xchg
dec
pop
pop
sbb
sar
and
test
test
push
dec
lock
pop
pusha
push
push
cmp
add
fwait
mov
ror
push
out
aad
cmp
mov
dec
dec
sbb
and
push
mov
cdq
add
jmp
aaa
in
pop
ret
add
cs
les
jl
ins
in
add
mov
push
xor
sbb
dec
out
and
adc
sub
imul
pop
add
mov
rcl
or
imul
adc
inc
or
cmp
rcl
and
sahf
and
movsx
mov
push
mov
xor
stos
add
bound
jg
mov
(bad)
add
add
sub
out
test
ret
fstp
add
push
shr
jnp
add
xchg
popa
or
cmpxchg
stc
lock
icebp
and
and
(bad)
mov
in
adc
mov
mov
sub
add
and
mov
sub
imul
mov
and
xor
or
rcl
ret
dec
xchg
pop
cld
inc
push
sub
aaa
add
and
hlt
or
out
fidivr
add
adc
mov
movs
lods
mov
cld
sub
leave
add
jle
add
mov
cmp
xchg
inc
(bad)
jmp
and
sbb
ja
push
mov
movs
mov
push
leave
nop
or
mov
push
pop
or
stc
neg
xor
jmp
push
fwait
shl
lods
pop
and
xlat
int3
test
gs
nop
ds
dec
xor
xchg
popa
pop
mov
lar
loope
push
or
add
xor
(bad)
call
sub
(bad)
retf
inc
ins
push
inc
test
xchg
loop
icebp
jae
mov
jne
jne
add
jb
lods
lahf
retf
inc
adc
or
or
inc
adc
ds
sub
pop
jbe
out
dec
pop
jge
jbe
enter
pusha
cmp
sbb
jo
jmp
xchg
pusha
adc
inc
dec
imul
mov
push
js
add
imul
adc
aaa
test
inc
mov
inc
adc
pusha
mov
mov
inc
daa
mov
call
jb
cld
inc
pop
cmps
push
dec
inc
adc
dec
inc
cmp
inc
dec
inc
cmp
rcl
scas
sub
cmp
pop
stc
mov
inc
pop
sub
and
(bad)
and
jg
(bad)
test
mov
pop
fwait
inc
imul
pusha
dec
or
fist
sub
inc
js
push
enter
dec
ins
xorps
jnp
add
push
jle
pushf
sbb
lock
or
mov
adc
add
and
push
push
jno
in
shl
ret
adc
sub
xchg
adc
pop
xchg
cli
mov
push
js
fimul
or
inc
mov
in
iret
dec
mov
add
jmp
mov
test
ins
aad
dec
and
jns
popf
dec
fidivr
pop
in
ja
and
mov
jb
movs
sbb
in
add
mov
dec
pop
sbb
xor
mov
add
xchg
mov
add
mov
adc
loop
iret
call
add
(bad)
test
stos
xchg
adc
je
and
jle
cmp
pop
fiadd
push
pop
or
cmps
loope
daa
xor
push
jmp
mov
pop
mov
or
movs
dec
push
add
push
std
push
sub
xor
sbb
(bad)
test
test
in
(bad)
cdq
inc
js
(bad)
out
hlt
jmp
adc
push
dec
jge
hlt
add
sbb
test
or
or
xchg
popa
aas
or
push
popa
and
mov
xor
dec
inc
loop
or
mov
xchg
or
pushf
adc
lds
aas
lods
add
inc
push
mov
or
(bad)
cmp
loopne
inc
daa
fdiv
ror
xor
fsub
push
mov
ss
adc
pusha
or
mov
xor
mov
adc
jecxz
ret
data16
push
push
pushf
mov
test
mov
rcl
add
add
shl
mov
leave
mul
adc
cmp
ss
clc
adc
mov
dec
dec
into
mov
pusha
shr
cld
pop
mov
xchg
mov
sbb
fdiv
mov
and
out
not
loop
jo
push
sbb
pop
pop
imul
sub
in
mov
mov
xchg
ret
or
push
push
rol
lods
or
mov
stos
and
hlt
sbb
sbb
add
sbb
xor
and
sub
add
inc
daa
push
and
sbb
js
inc
adc
mov
imul
xchg
nop
stos
cmp
push
sub
cdq
ret
mov
mov
ret
pop
adc
icebp
xor
ss
mov
pop
(bad)
sub
xor
mov
test
mov
sbb
xchg
push
push
lock
adc
ins
xchg
cmc
mov
push
xchg
scas
mov
in
sbb
clc
into
xchg
inc
bound
outs
loope
and
jb
sbb
enter
add
mov
push
test
test
dec
pop
js
div
sub
or
aaa
dec
sbb
sbb
or
adc
pop
or
mov
shr
push
inc
fs
cmp
dec
enter
inc
pop
clc
add
mov
and
mov
rcr
jo
adc
mov
(bad)
bound
ins
add
iret
das
dec
inc
and
and
jmp
test
je
cmp
xchg
or
and
ja
scas
adc
pop
xchg
and
call
pop
cmpxchg
mov
punpckhbw
xchg
or
dec
xchg
shr
add
fwait
sub
cmp
fcomp
cmc
daa
inc
adc
mov
dec
push
add
pop
dec
adc
add
xchg
dec
enter
pop
mov
add
(bad)
push
cmc
push
fcomp
jmp
daa
gs
hlt
push
xchg
ins
test
fdiv
inc
js
jmp
mov
jbe
adc
mov
or
jmp
add
movs
fnop
and
or
bound
mov
mov
sub
sub
movs
pop
in
ins
cmp
mov
mov
je
mov
jno
cmp
pop
cdq
addr16
pop
or
mov
pop
pop
repnz
push
das
push
dec
sub
pop
jo
sbb
arpl
jne
inc
sahf
mov
dec
xor
gs
aam
push
and
movs
nop
xchg
push
xor
je
rcr
and
jne
push
test
sub
xchg
ds
mov
or
pop
mov
loope
add
inc
jp
and
sbb
movs
ins
nop
je
sbb
scas
jb
and
jmp
add
mov
push
mov
sbb
sbb
or
(bad)
push
and
jl
cmp
cmp
sub
dec
mov
mov
mov
or
(bad)
loope
bound
mov
and
popf
add
jne
mov
jno
aas
jno
cmp
and
add
sbb
mov
adc
cmp
ins
mov
mov
(bad)
push
cld
adc
add
fist
ja
cdq
dec
xor
sub
sbb
les
les
shrd
sar
and
or
jne
xchg
ds
ficomp
cdq
jmp
ss
jmp
imul
retf
add
test
sbb
neg
adc
scas
dec
add
imul
xor
pop
jmp
or
adc
sub
outs
mov
mov
(bad)
in
sbb
pop
cmps
ret
mov
xor
lahf
jecxz
jmp
aaa
enter
mov
imul
push
test
xchg
iret
or
dec
dec
lahf
jb
fidiv
jg
adc
pop
mov
shl
jmp
or
fadd
fiadd
int3
fistp
add
adc
ja
pop
push
ss
sti
lea
mov
into
add
dec
sbb
nop
push
pop
mov
cmp
adc
ss
test
jecxz
adc
add
mov
jmp
adc
aaa
mov
ror
mov
jl
xchg
xchg
repnz
xor
out
hlt
mov
idiv
int
mov
cmp
fiadd
dec
xor
jae
add
xchg
(bad)
idiv
adc
div
mov
call
mov
xchg
pop
shl
push
pop
cmp
std
jnp
cmp
adc
jo
or
adc
pop
imul
fmul
fld
pop
sbb
pusha
sub
cli
daa
jge
ins
or
and
cmp
or
add
push
add
rol
out
or
loope
outs
sbb
jo
cli
stos
test
ds
sub
mov
cmp
or
stos
out
sub
push
lods
lods
or
lea
int3
or
cmp
inc
pop
mov
push
push
add
sub
add
lock
inc
add
xor
pop
push
sbb
or
je
pop
pop
jo
cmp
call
sub
jo
outs
fcmovnb
ins
inc
mov
pop
inc
and
or
mov
pop
aam
xchg
adc
push
push
fadd
pop
cmp
mul
sbb
stos
inc
pop
jmp
cmp
hlt
or
mov
ficom
add
add
mov
div
das
jg
cmp
xor
(bad)
ss
jge
scas
(bad)
sub
add
dec
sub
or
jg
inc
nop
mov
pop
lods
ror
js
jae
pop
mov
xchg
mov
and
xchg
pop
xor
push
pop
pop
sbb
icebp
fadd
cmp
sub
and
shl
dec
and
lods
fcomp
ror
scas
enter
or
pop
jl
cmp
addr16
xchg
(bad)
cmp
mov
enter
aaa
mov
xchg
push
mov
or
pop
or
xchg
outs
add
or
sub
inc
dec
cld
sahf
daa
inc
dec
pop
xchg
jbe
loopne
dec
not
inc
mov
or
scas
fst
pop
pop
xor
fidivr
sbb
adc
and
mov
icebp
jg
sub
jmp
stos
dec
loop
mov
adc
pop
jo
(bad)
retf
(bad)
or
push
mov
adc
nop
nop
fmul
lods
or
rcr
pusha
pop
mov
xchg
sahf
adc
iret
(bad)
adc
lea
or
add
sbb
ficomp
pop
(bad)
neg
and
pop
mov
push
add
mov
rcr
and
or
mov
and
mov
mov
cdq
out
out
fsub
fmul
fdiv
ins
cmp
sbb
inc
(bad)
mov
clc
mov
movups
adc
pop
add
je
inc
fwait
and
or
or
test
mov
push
adc
lea
xchg
loopne
xchg
imul
fiadd
inc
push
xchg
mov
mov
lock
ins
or
jb
mov
adc
xor
add
pop
rcr
sub
cmp
add
dec
call
div
add
popf
pop
push
and
or
in
jecxz
push
pop
ret
(bad)
or
pop
pop
or
movs
imul
mov
mov
mov
stos
dec
xchg
xchg
out
inc
add
add
xor
rcl
adc
xchg
jne
jl
xchg
push
test
cdq
jbe
sub
fbld
enter
ds
rcl
pusha
(bad)
ror
clc
or
adc
add
push
inc
enter
in
xchg
(bad)
or
sbb
push
sbb
clc
pop
int
pushf
lahf
cwde
sti
inc
add
sbb
pop
inc
lods
mov
shl
inc
ds
ror
movsx
adc
push
shr
push
cmp
movs
mov
loopne
jmp
push
mov
jbe
sahf
retf
xlat
push
cmc
adc
jno
rol
mov
inc
dec
int3
jne
aad
and
stos
mov
adc
push
jl
cmp
cs
ror
push
inc
outs
icebp
pop
sub
lea
mov
sbb
cmp
add
(bad)
(bad)
push
and
and
xchg
out
sbb
lock
jl
xchg
sub
rcr
inc
push
pushf
fs
dec
scas
popf
daa
mov
nop
jecxz
stc
fadd
or
mov
adc
call
add
ret
push
movs
or
call
movs
xchg
and
inc
push
push
mov
add
ficom
ja
xchg
gs
arpl
loope
add
sar
jle
clc
and
sbb
push
sbb
call
ret
inc
sbb
test
sub
cmp
pop
mov
test
hlt
cmps
(bad)
aam
and
fld
mov
mov
ret
inc
jns
sahf
or
outs
inc
add
dec
sbb
ds
fdiv
mov
pop
movs
xchg
mov
adc
lds
aam
dec
mov
inc
mov
mov
xor
lods
call
cmp
jno
add
sbb
inc
add
loopne
sbb
lods
add
mov
nop
sbb
js
inc
sub
jmp
pop
in
jne
cmp
mov
(bad)
cdq
arpl
inc
cmovo
inc
pop
and
cmc
or
jns
xor
inc
adc
pop
call
adc
cmp
sub
push
fstp
fld
fwait
xchg
and
add
sbb
push
xor
pop
or
imul
or
add
add
sbb
sbb
ror
(bad)
iret
push
gs
leave
ret
pop
adc
lea
xchg
push
mov
and
mov
rcl
push
fld
test
mov
jmp
mov
and
or
mov
stos
pop
mov
lds
aaa
add
cmp
cs
sub
cmpxchg
mov
cmp
jg
xor
data16
adc
or
imul
add
add
xor
stc
and
aad
add
cmps
cmp
out
ficom
sub
add
dec
sbb
add
mov
je
push
shr
pop
pop
sbb
cmp
xlat
out
cmps
or
inc
dec
iret
fcomp
adc
mov
jmp
fld
pop
aas
xor
mov
push
mov
xchg
pusha
or
sub
pop
xchg
or
aam
adc
mov
cld
jb
add
rcl
mov
mov
adc
sbb
lock
retf
or
dec
clc
inc
loopne
pop
xchg
call
mov
inc
int3
ret
sbb
mov
add
jnp
push
fcmovb
adc
movzx
or
pop
fisub
jmp
sbb
add
inc
adc
mov
push
mov
jns
pop
or
in
in
jo
xor
pop
cdq
xor
xchg
scas
and
addr16
inc
cmp
and
rcr
jno
push
mov
adc
mov
dec
fldz
fist
fdiv
mov
xchg
sub
add
adc
dec
div
loopne
mov
leave
push
lods
nop
mov
mov
fstp
sbb
jmp
sbb
lods
sub
and
mov
cld
jmp
movaps
dec
inc
jp
sbb
mov
js
add
inc
mov
or
add
(bad)
ja
js
push
rcl
or
daa
pop
xchg
popa
xchg
iret
and
mov
xchg
pushf
add
arpl
pop
sbb
ret
pop
xchg
out
or
(bad)
jne
xchg
push
int
test
rcl
ror
js
je
push
popa
sbb
add
adc
jnp
pop
test
mov
jns
add
icebp
ret
jae
cmp
in
push
sbb
and
add
in
adc
jne
push
push
test
je
jo
int3
loopne
ficomp
xor
rcr
and
loopne
cdq
or
sar
xor
icebp
cmp
es
sbb
aaa
adc
xchg
jo
xchg
loopne
mov
mov
ja
dec
pop
sub
ja
xchg
mov
imul
mov
fnsave
push
cmp
mov
and
aaa
jns
mov
pop
push
xor
rol
nop
ss
movs
inc
stc
inc
inc
dec
adc
sbb
cmc
sbb
int3
jmp
call
es
add
or
ret
ficomp
nop
mov
inc
mov
mov
ss
inc
push
xchg
dec
inc
ror
enter
dec
dec
adc
and
xchg
sti
and
or
out
fwait
mov
sub
test
inc
pusha
mov
xchg
pop
daa
dec
add
push
dec
fwait
push
sahf
xchg
shl
dec
add
leave
dec
imul
pop
popa
loope
or
xchg
lahf
and
sub
icebp
mov
nop
cwde
adc
adc
mov
inc
pushf
sub
(bad)
dec
pop
js
mov
fdivr
cmp
movs
arpl
sub
jl
imul
fadd
dec
push
fistp
stos
enter
fs
inc
sub
pop
movs
push
sti
adc
xor
data16
adc
jae
xchg
push
dec
xchg
and
push
push
push
push
mov
push
pop
adc
adc
adc
add
xchg
dec
inc
btr
xor
in
xchg
adc
or
cli
dec
inc
cmps
push
pop
mov
xor
jo
sahf
sub
mov
sub
jge
loopne
and
jge
rcl
test
movs
je
or
push
add
bound
and
fild
out
ret
or
rcr
sbb
cmps
xor
jmp
pusha
les
out
mov
and
xchg
rol
lock
mov
sahf
ret
lock
gs
add
or
add
inc
add
add
add
sbb
int3
sti
pop
push
enter
fstp
adc
lods
rcr
mov
inc
test
gs
mov
mov
mov
push
jle
int3
inc
fild
xchg
daa
(bad)
jp
mov
ret
bnd
cmp
lods
mov
push
aad
dec
loopne
shr
sub
ja
sub
rol
int3
push
add
popf
ins
jmp
loope
jg
xchg
sbb
mov
push
inc
or
loop
cmp
loope
xchg
pusha
push
sbb
loope
call
mov
ins
ss
adc
adc
sbb
add
dec
and
adc
retf
mov
mov
mov
in
and
dec
mov
push
mov
mov
mov
fs
fndisi(8087
and
cmp
fisub
pop
aam
pop
ss
add
daa
add
sar
neg
sub
push
rol
dec
add
sti
dec
stos
inc
or
cs
push
mov
inc
mov
add
sub
pusha
dec
xor
xor
push
mov
xchg
shr
mov
in
add
or
fmul
dec
and
test
pop
dec
ins
dec
dec
push
dec
out
pop
inc
cmp
loope
sub
or
(bad)
rcr
cli
lea
jmp
clc
mov
cdq
inc
dec
jae
push
xor
stos
add
sub
icebp
movs
adc
xor
test
cdq
push
dec
add
fnstsw
dec
shl
cmp
(bad)
cmp
test
or
push
inc
lock
clc
adc
adc
xchg
push
jl
(bad)
add
cmps
xor
push
xchg
mov
fs
test
push
xor
adc
mov
xor
mov
addr16
xchg
(bad)
push
pop
adc
mov
dec
inc
mov
push
shr
sub
in
or
pop
sti
inc
das
cmps
sbb
dec
fdivrp
sbb
adc
mov
dec
test
mov
dec
nop
push
and
jg
jmp
dec
lds
pop
cmp
mov
sub
jmp
mov
sbb
fcom
shr
xchg
cmp
add
pusha
cld
sub
push
push
adc
sub
push
iret
mov
sar
adc
movs
lock
sub
mov
lods
pop
mov
cmp
add
jge
dec
aas
out
adc
shl
or
nop
xchg
out
cmps
dec
jo
xchg
and
mov
out
scas
fs
pop
les
lods
dec
pushf
(bad)
mov
dec
nop
popa
cmp
pop
pop
sub
lods
xchg
or
add
test
in
mov
ins
jg
pushf
add
pushf
adc
mov
ins
ds
add
out
adc
in
aas
and
adc
pushf
adc
cwde
rol
inc
stos
fisubr
push
push
sub
out
mov
dec
fmul
or
add
xchg
pop
dec
mov
fbld
mov
jmp
(bad)
jo
or
mov
xchg
data16
add
cmp
xor
adc
cmp
mov
movs
sub
cmps
cmp
stos
pop
xchg
push
cli
xor
stos
ret
inc
call
or
imul
mov
or
bnd
inc
rol
bound
dec
call
pop
xor
add
je
mov
imul
add
jb
jmp
push
dec
or
or
mov
add
sub
inc
pop
lea
jno
xchg
pop
scas
and
repnz
xor
push
dec
push
mov
shr
fild
fimul
or
inc
xor
jne
pop
mov
jmp
adc
inc
inc
add
pop
and
add
test
and
and
sahf
clc
call
inc
inc
push
xchg
shr
pop
sbb
cmps
cmc
adc
data16
or
arpl
or
mov
movs
test
mov
push
pop
push
and
add
shr
movs
add
nop
fstp
mov
repz
into
(bad)
mov
sahf
or
dec
lock
add
clc
xor
sub
push
xchg
inc
push
or
fwait
push
pop
aaa
and
cmps
mov
outs
loopne
mov
xor
int
xchg
mov
xor
sbb
mov
xchg
dec
xor
sahf
ins
dec
fstp
mov
gs
cmp
push
adc
test
lahf
lock
out
nop
movs
sahf
dec
mov
push
inc
rcr
inc
hlt
mov
sub
in
sub
xor
push
mov
mov
aas
pop
add
ficomp
add
in
push
mov
mov
enter
push
jmp
mov
and
pop
add
fld
push
cmp
in
sub
pop
sahf
and
pop
sahf
les
aam
lea
dec
mov
inc
add
inc
jbe
hlt
adc
add
dec
lea
scas
or
push
jge
lock
std
push
call
jo
lods
retf
aaa
jo
call
ins
cmp
add
cmp
dec
adc
add
and
xchg
sbb
loope
xor
inc
cmps
xor
mov
retf
aas
imul
std
add
test
xchg
add
enter
jo
clc
popa
xchg
mov
rcl
sbb
into
test
add
inc
push
dec
fsubr
and
cmps
mov
jle
or
mov
mov
ds
jmp
pop
inc
fist
xchg
sbb
lds
mov
pop
xor
xor
fucomi
or
ret
rcl
out
stos
pop
ds
add
js
mov
stc
inc
inc
aas
je
das
inc
or
adc
push
mov
mov
add
retf
sub
arpl
lods
push
and
sub
jo
and
mov
cs
imul
jg
adc
push
adc
inc
or
js
inc
div
xchg
add
call
add
xchg
cmp
fdiv
mov
pop
mov
mov
dec
or
repnz
mov
mov
jg
jb
test
sti
cmp
mov
mov
pop
das
inc
jae
sbb
cmps
mov
stos
test
add
add
ret
xchg
loopne
ins
popa
imul
adc
movs
sub
push
sub
add
inc
xchg
sbb
xchg
in
dec
mov
sbb
sub
iret
stos
adc
hlt
add
xchg
sub
arpl
aaa
mov
fsubr
sbb
or
es
sub
icebp
or
popa
inc
mov
pop
push
sbb
push
or
jns
test
add
pop
push
and
mov
xchg
sub
cmovle
bound
sbb
(bad)
cmp
inc
xlat
add
bound
jmp
out
clc
push
sbb
mov
aas
mov
cld
xlat
push
jecxz
mov
leave
and
stos
ins
call
and
sahf
cmp
cmps
ret
ret
shl
add
pop
push
lods
add
mov
cli
push
or
in
or
add
mov
push
popa
test
shr
push
xor
xor
or
mov
rcl
add
mov
sbb
inc
movs
inc
add
and
cmp
push
ins
cmc
dec
mov
and
mov
add
xchg
mov
test
add
add
scas
cmp
xor
int3
mov
es
xor
inc
ror
or
sbb
and
test
mov
xor
sbb
pop
cmc
push
pop
or
and
mov
mov
add
xchg
(bad)
dec
dec
retf
sub
push
push
push
jnp
mov
fild
clc
lods
or
out
jb
ins
ret
dec
dec
arpl
add
aam
ret
les
mov
in
rcl
xchg
mov
leave
les
stos
xchg
ror
dec
retf
sbb
inc
or
xchg
imul
push
sub
pop
add
mov
xchg
or
imul
movs
outs
add
movs
mov
stc
dec
shl
iret
push
cmp
sub
push
push
in
ds
xor
jo
and
adc
ja
push
xchg
js
pop
enter
push
jno
neg
xchg
nop
jns
scas
(bad)
cmp
loopne
jne
mov
xchg
mov
das
push
sbb
es
mov
mov
je
add
and
mov
mov
fidivr
lock
xor
push
jbe
lahf
(bad)
pop
scas
and
and
ret
gs
ins
cmp
ret
sub
adc
ss
xor
jns
inc
sbb
inc
movs
pop
mov
sub
sub
mov
pop
fimul
and
lds
fsub
and
test
inc
adc
jbe
mov
pop
or
js
pop
dec
dec
xor
es
push
pusha
ret
xchg
rol
ja
push
pop
cmp
gs
out
push
ds
add
pop
dec
pop
pop
nop
pusha
cdq
jbe
pushf
or
pop
push
in
je
clc
mov
mov
(bad)
icebp
in
ret
or
pop
pop
jl
cwde
and
push
or
xchg
(bad)
retf
ret
and
inc
xchg
adc
add
jno
push
fbld
cmp
and
jo
xchg
ds
rol
out
shl
outs
dec
cmp
leave
add
cmp
popf
push
addr16
dec
sbb
imul
leave
pusha
jl
loop
test
and
nop
cwde
in
dec
cli
movs
dec
repnz
pop
je
fild
adc
xor
retf
inc
mov
arpl
jo
(bad)
fsubr
movs
jns
pop
mov
jge
push
jbe
(bad)
into
ret
fild
pop
adc
sbb
xor
push
xchg
sbb
adc
xor
xchg
pop
push
sub
out
adc
push
pushf
jae
cmp
pop
mov
data16
fsubrp
lahf
(bad)
int3
inc
fwait
dec
adc
imul
test
push
sbb
and
push
pop
test
nop
and
sub
xor
gs
jnp
call
and
scas
dec
(bad)
and
inc
aam
and
out
add
call
or
adc
sbb
shr
xchg
push
jmp
sbb
(bad)
pop
jns
jnp
dec
inc
fidivr
js
or
mov
mov
push
int
jne
jne
jns
dec
sub
and
push
mov
inc
ror
xchg
dec
mov
mov
add
mov
mov
jae
cld
dec
popa
cwde
and
sbb
(bad)
or
cmp
add
and
mov
movs
stos
mov
fwait
mov
leave
in
mov
xchg
jb
cmps
mov
cs
push
cmp
out
out
std
jge
nop
bswap
aam
or
mov
ror
push
mov
mov
mov
or
lods
adc
mov
dec
sar
dec
add
add
inc
add
add
jnp
test
and
lahf
int
cmp
or
enter
cmp
repz
mov
push
call
cmp
repz
hlt
clc
xchg
add
cld
inc
xchg
sbb
push
pop
and
popa
inc
ds
ins
rcr
and
or
inc
and
and
fcomp
lea
jl
cld
pop
and
int
loopne
std
(bad)
cld
out
retf
(bad)
fs
retf
daa
stc
sub
mov
inc
fcom
push
cmp
add
mov
mov
add
sahf
inc
push
out
lods
pop
push
jns
add
sbb
dec
addr16
add
les
and
inc
mov
sahf
out
or
push
cwde
mov
sahf
out
rcl
sbb
out
sahf
out
sbb
adc
or
or
add
push
and
inc
or
push
inc
sbb
sbb
push
push
mov
pop
shufps
cmp
or
je
dec
sub
or
sub
adc
or
dec
jno
jns
sbb
data16
adc
ss
add
arpl
(bad)
in
sub
xchg
sub
pop
mov
sbb
stos
pop
mov
and
mov
pop
int3
mov
es
dec
je
mov
inc
jne
jb
jo
movs
out
xchg
neg
push
and
cmp
add
mov
or
jle
jmp
mov
inc
mov
mul
jne
push
sbb
sar
adc
gs
add
mov
loopne
test
pusha
add
push
add
dec
jp
pop
or
jge
adc
mov
push
stc
inc
popf
add
jb
xor
inc
(bad)
gs
iret
jo
imul
adc
and
ja
jns
test
jg
and
push
push
push
call
test
shl
fucomip
stos
clc
jno
test
je
div
adc
mov
ret
test
jb
or
or
inc
shl
inc
idiv
retf
and
jle
mov
test
je
add
les
mov
mul
mov
and
stos
bound
ds
mov
cmps
sti
xchg
xchg
xor
or
add
mov
(bad)
push
or
mov
ret
mov
fild
add
retf
je
sub
je
sub
sbb
dec
mov
xchg
add
or
mov
mov
je
arpl
mov
(bad)
out
repnz
ret
push
in
or
retf
mov
add
xor
xor
inc
add
jo
inc
push
add
xor
xor
dec
ss
lahf
cmps
call
enter
(bad)
jp
(bad)
pop
sub
std
cld
xlat
jb
xor
add
and
fs
push
sub
or
pop
xor
mov
or
cmp
mov
or
cs
jae
push
ret
rcl
sar
mov
push
popa
mov
pusha
fild
es
int3
aad
dec
lds
dec
ret
adc
into
sbb
or
shr
dec
inc
xor
hlt
lahf
sbb
loopne
dec
movs
ja
and
rcr
or
sub
ins
jg
adc
dec
inc
inc
push
pop
cmp
jae
repz
jge
add
cmp
jb
jle
xchg
cmp
sahf
and
and
je
sar
xor
cmp
arpl
mov
test
sbb
out
xlat
retf
aad
movs
pop
test
mov
retf
jle
mov
add
shl
or
push
mov
pop
xchg
loope
sbb
inc
(bad)
stc
jge
pop
dec
pushf
or
pop
int
test
push
movs
jg
inc
rcr
inc
(bad)
lods
push
dec
push
enter
jp
pop
mov
les
ficomp
sbb
hlt
push
and
dec
jmp
xchg
add
neg
hlt
sbb
sbb
cwde
push
dec
in
inc
mov
or
and
add
dec
and
test
(bad)
jno
mov
and
in
pop
les
jo
mov
pop
inc
dec
xchg
dec
xchg
cmps
add
in
pop
ds
popf
rcr
add
dec
xor
xor
shl
ins
mov
add
pusha
xchg
or
ret
inc
inc
mov
rcl
cmc
outs
fcom
and
stos
and
ror
sub
pusha
add
sbb
mov
and
pop
repnz
out
cmp
data16
cmp
sub
add
pop
(bad)
popa
xchg
outs
into
das
and
pop
in
int3
adc
sbb
pop
mov
lods
and
test
and
xchg
enter
out
mov
movs
fisttp
ret
xchg
mov
shr
inc
pusha
xchg
add
mov
add
xchg
fild
adc
and
aas
or
dec
jne
(bad)
fadd
popa
arpl
shl
stos
pop
inc
out
ret
dec
aas
jmp
repz
sub
pop
pop
adc
cs
popa
jno
push
mov
adc
pop
xor
and
cmp
scas
sbb
or
movs
add
mov
lea
jp
mov
sbb
ret
js
adc
xor
(bad)
dec
jmp
mov
rol
inc
test
cmp
call
into
jnp
jbe
mov
adc
jecxz
adc
push
add
mov
pop
cmp
lahf
mov
in
addr16
push
out
sub
cdq
push
or
and
test
add
sub
pcmpgtb
sub
add
aam
push
mov
out
or
imul
in
push
sub
mov
jb
into
add
jmp
mov
ror
or
or
or
or
pusha
xor
pop
inc
test
jnp
or
adc
or
ins
rcr
dec
adc
xor
push
pop
cmp
cwde
add
inc
mov
cs
dec
mov
and
cwde
add
sub
adc
out
(bad)
lock
adc
add
(bad)
push
add
dec
cmp
jbe
add
jmp
or
mov
cli
mov
xor
out
add
push
mov
sbb
push
inc
cmp
jb
(bad)
ret
adc
cmps
mov
adc
or
test
or
(bad)
ror
fcomp
mov
jne
addr16
dec
shl
and
je
pop
sbb
adc
leave
and
stos
stos
fcmovbe
xchg
ja
(bad)
dec
xor
jne
mov
loop
aam
movs
inc
cmp
or
mov
ja
mov
or
push
sub
dec
add
add
dec
xchg
fcmovnb
push
je
in
loope
add
inc
sbb
cmp
mov
adc
add
ror
bound
inc
cmp
push
cld
hlt
xchg
adc
xchg
jo
xor
push
aam
jmp
(bad)
rcr
mov
pop
sbb
sbb
mov
out
daa
pop
nop
push
pop
adc
inc
and
rol
in
push
adc
adc
jge
push
dec
inc
cli
add
cmp
ja
cmp
(bad)
adc
fs
push
add
xor
lods
add
mov
ret
xor
sar
ror
adc
pop
or
xchg
mov
loopne
test
scas
or
(bad)
mov
fwait
xor
pop
pop
push
imul
adc
cdq
xchg
jno
fwait
and
iret
adc
push
and
push
cld
ins
jl
rol
mul
lock
loop
js
mov
jle
add
lods
or
jne
cmp
add
or
mov
mov
jno
jnp
xor
cmps
pop
xchg
lea
adc
mov
cmp
dec
mov
test
xor
inc
add
push
hlt
cld
das
fimul
and
cmp
aas
imul
push
push
push
dec
js
xor
in
or
pusha
push
ret
pop
in
(bad)
out
add
std
sbb
mov
mov
loopne
jbe
mov
or
loope
call
sbb
fcom
push
inc
mov
or
adc
mov
or
add
xor
pop
fimul
and
sbb
mov
das
sub
or
add
mov
clc
xor
adc
fadd
sbb
scas
jns
inc
cwde
ins
mov
push
sub
addr16
xchg
sti
out
nop
(bad)
scas
xchg
push
sbb
mov
cmp
mov
push
jb
ret
jmp
adc
adc
cmp
add
inc
mov
imul
xchg
and
mov
iret
add
cmp
xor
add
ins
ins
lds
dec
cld
cmp
or
pop
test
mov
(bad)
test
cld
push
clc
mov
sub
enter
cmps
(bad)
mov
sub
repnz
lock
(bad)
mov
gs
pushf
jle
or
(bad)
leave
mov
lock
add
jmp
sbb
inc
jb
or
pusha
xchg
call
xchg
xor
or
push
gs
add
cmps
dec
sbb
in
or
push
pop
scas
sub
test
sar
fst
or
inc
out
pop
div
lock
lea
nop
mov
or
mov
icebp
or
int3
int3
adc
int
add
and
fstp
js
push
and
add
or
adc
add
push
dec
dec
jp
sub
adc
pop
xor
xor
arpl
mov
or
dec
mov
retf
adc
jo
mov
cmp
dec
lods
add
leave
aaa
add
xchg
pop
fsub
add
cmp
and
and
gs
pop
sbb
dec
ficomp
sbb
sub
push
sbb
mov
or
xchg
cmps
adc
mov
jo
inc
mov
mov
pop
cmp
ret
jo
inc
sbb
dec
mov
adc
sub
sub
jne
push
or
or
jne
and
pop
fst
jne
rcl
or
jmp
jg
adc
inc
dec
sar
or
mov
xchg
inc
cs
ret
adc
or
in
and
lea
pop
arpl
mov
inc
loope
pusha
clc
lods
push
or
xchg
fcomp
add
leave
aam
repnz
and
and
or
sub
jo
pop
out
aam
jmp
sbb
mov
cmp
lods
test
fist
or
push
and
push
inc
mov
jne
mov
in
outs
sbb
fsubrp
sar
pop
lea
mov
in
cmps
cmp
ror
(bad)
xor
push
js
(bad)
pop
adc
pop
ins
jne
mov
or
cmp
test
sahf
dec
push
jmp
add
or
pop
add
or
inc
push
mov
(bad)
loopne
retf
push
or
cli
imul
loop
mov
pushf
dec
sub
jle
stc
inc
sub
ja
push
sbb
cmps
enter
(bad)
pushf
push
dec
cmp
es
enter
pshufw
pop
inc
inc
stos
mov
push
inc
loope
std
push
inc
push
xchg
add
add
adc
dec
loop
add
add
add
and
push
leave
(bad)
push
ja
push
jo
add
and
add
adc
push
sbb
dec
pop
add
add
push
addr16
arpl
int
and
inc
pusha
add
or
xor
in
test
sbb
pop
das
jno
add
lds
jne
sub
sub
add
or
pop
and
lock
pop
push
loopne
jmp
xor
loop
inc
dec
cmp
lock
adc
(bad)
xor
sbb
out
out
dec
inc
push
pop
add
and
adc
outs
imul
(bad)
sub
das
pop
popa
movs
xchg
jo
popa
gs
sbb
sbb
js
xchg
xor
test
rol
pop
outs
lock
(bad)
je
ret
or
jmp
push
xor
call
add
inc
jmp
retf
and
sbb
mov
ret
je
lea
in
pop
mov
pusha
pop
push
cmp
adc
test
scas
mov
push
ucomiss
and
or
and
xor
xchg
and
je
outs
inc
or
fcom
ins
mov
xor
js
or
jmp
shl
adc
sbb
xor
mov
and
adc
mov
cmp
adc
mov
das
or
test
mov
int3
jmp
loopne
inc
call
sti
into
pop
dec
mov
jne
push
adc
add
push
add
jne
out
push
mov
outs
rol
in
add
aad
in
test
lea
and
ret
loopne
jo
test
test
arpl
jl
nop
sti
addr16
inc
cmp
in
out
mov
fisubr
stc
and
dec
fwait
sub
hlt
add
cmps
push
and
jl
lds
(bad)
pop
and
out
push
add
clc
cmp
fbstp
push
mov
iret
sub
cmp
sub
movs
push
xor
rol
pop
outs
push
push
adc
popf
mov
mov
mov
xor
mov
lock
bound
cmps
jns
xchg
or
mov
sub
ficom
add
sub
jle
sbb
out
test
loopne
fdivr
jne
enter
pusha
dec
or
outs
(bad)
fcom
sar
sahf
inc
mov
push
mov
leave
lock
sbb
cmp
sar
sub
lods
or
sub
aaa
jmp
in
test
jb
mov
mov
stos
sbb
into
mov
jmp
adc
dec
fwait
pushf
pushf
cmp
in
jmp
popa
push
push
mov
push
push
movs
push
mov
jbe
es
call
sub
xchg
xchg
cmps
sbb
pushf
sub
cwde
mov
cmps
mov
add
imul
sub
xchg
das
data16
cmps
or
dec
sub
mov
outs
push
mov
or
sub
adc
inc
add
or
cmps
std
jmp
mov
push
adc
sbb
ror
in
fld
sub
fwait
ret
(bad)
dec
sbb
mov
icebp
mov
loope
dec
inc
test
lods
or
loop
or
push
enter
arpl
xor
push
add
pop
mov
or
je
mov
or
add
xor
sub
add
mov
fmul
dec
in
sti
sbb
jae
push
sbb
jmp
sub
lods
repnz
jmp
sbb
jbe
mov
sar
xlat
outs
cli
cs
mov
fcomi
and
adc
inc
jbe
movs
add
push
ret
fidivr
xchg
push
dec
push
cmp
retf
xor
test
in
xor
clc
pop
cmp
jne
or
jno
adc
call
sbb
and
ret
sub
je
or
pop
ret
push
(bad)
mov
cmp
ja
cmp
jne
or
mov
jb
and
cwde
iret
inc
or
xchg
sar
jmp
mov
imul
bnd
xchg
pop
les
mov
and
mov
cs
push
push
or
push
enter
mov
inc
jne
je
jbe
hlt
xor
inc
popf
or
mov
aam
cmp
inc
pop
dec
xor
div
(bad)
cmp
fidiv
inc
jle
data16
jl
je
mov
and
ja
aaa
cld
xor
cli
je
sub
sar
cli
sub
outs
and
push
push
mov
in
sub
cmp
jmp
push
or
call
div
and
mov
sbb
and
sub
and
mov
jnp
push
and
call
mov
inc
inc
or
and
xor
and
adc
xor
jp
int
sbb
adc
and
dec
inc
fwait
in
push
pushf
bound
jmp
mov
sub
adc
addr16
inc
test
fisttp
cmp
fmul
(bad)
js
in
add
(bad)
into
rcl
xchg
les
out
pop
sbb
pusha
cdq
stos
mov
and
push
jmp
jno
push
adc
lock
dec
shr
push
fidivr
out
dec
sbb
mov
outs
dec
inc
and
popa
jl
inc
loopne
fldz
or
inc
mov
jl
stos
push
xlat
push
push
push
mov
lods
sub
out
test
push
push
in
(bad)
fld
pop
mov
aad
push
inc
cmp
out
stos
out
imul
ret
jmp
adc
nop
mov
stc
jge
test
adc
js
sub
push
jo
adc
sar
aaa
lock
dec
cmp
inc
mov
jae
and
mov
dec
push
mov
scas
shr
adc
sbb
sub
(bad)
mov
xor
inc
dec
mov
push
and
mov
xor
add
adc
pop
push
sub
or
call
pop
stc
sub
enter
(bad)
pop
inc
pop
push
pusha
ret
sbb
adc
test
sbb
in
cli
and
out
sbb
xor
adc
xchg
ss
mov
jl
jns
mov
imul
mov
add
xor
add
push
out
mov
cmp
jb
cmp
mov
sub
std
aam
mov
or
mov
and
and
(bad)
and
bound
rcr
pop
xchg
and
arpl
mov
cmp
push
arpl
push
sar
shl
in
ficom
sbb
ins
lods
xor
dec
pushf
and
pop
push
pop
or
in
jo
mov
push
sar
add
(bad)
std
and
sbb
hlt
sub
or
(bad)
mov
ret
lock
sbb
add
retf
outs
ror
inc
setp
stos
jecxz
pop
adc
in
pop
mov
sbb
fidiv
hlt
dec
push
sar
push
mov
sbb
and
mov
sbb
lods
xor
out
dec
push
cmp
fcomp
daa
and
or
pop
push
dec
cmp
dec
xchg
arpl
mov
fadd
xchg
sub
hlt
sbb
or
and
add
xor
and
sbb
dec
dec
mov
and
and
push
test
dec
add
xor
icebp
sbb
push
pop
push
outs
call
sti
call
push
out
imul
mov
dec
cld
jmp
test
mov
test
test
cmp
retf
add
mov
jnp
jmp
push
sub
sbb
jmp
jns
int
xchg
mov
pop
and
inc
xchg
fcmovb
icebp
or
jg
and
xchg
push
push
pop
ret
test
aaa
inc
fild
add
cmp
inc
test
xchg
cmp
mov
mov
push
xchg
sbb
or
in
call
xchg
pop
jo
sbb
stos
sbb
cmps
test
dec
pusha
xchg
mov
cdq
imul
ror
repnz
dec
out
sbb
inc
adc
ret
in
daa
pop
inc
or
pusha
ins
dec
pop
jge
add
xor
fadd
cmp
lods
add
outs
push
mov
jl
push
mov
mov
add
add
pop
test
(bad)
adc
xchg
xor
push
sbb
outs
mov
(bad)
dec
jne
or
jmp
mov
and
popf
push
push
(bad)
mov
neg
mov
icebp
cmp
mov
or
and
or
imul
lock
and
and
nop
test
clc
arpl
and
test
(bad)
loop
mov
inc
test
pusha
add
movs
repnz
jo
in
mov
lahf
icebp
push
xor
and
into
hlt
adc
xor
sbb
inc
jne
enter
mov
mov
call
sub
or
cld
push
jns
adc
xlat
add
(bad)
clc
std
adc
jg
add
out
adc
push
fcomp
fbld
sbb
xchg
and
and
clc
pop
lock
push
pop
jmp
cmps
(bad)
or
nop
jo
js
push
fdiv
pop
jmp
jb
and
xchg
dec
or
inc
cmp
adc
pusha
sbb
or
cmps
retf
dec
or
adc
dec
or
jmp
mov
or
or
and
mov
outs
xchg
or
add
icebp
test
mov
dec
cmp
jmp
pop
mov
mov
jmp
mov
push
xchg
loop
cmp
ds
test
add
dec
cmp
jb
mov
or
jb
or
movs
add
jne
sub
arpl
loopne
imul
jl
outs
sbb
clc
cld
sub
adc
mov
in
js
movsx
test
test
sub
add
fcmovu
sub
push
dec
adc
pop
push
ret
xor
inc
and
jmp
call
dec
xor
lock
mov
(bad)
cmp
mov
mov
int
sti
ins
jmp
dec
push
jp
scas
cmp
inc
or
mov
and
out
je
lock
cmp
iret
test
shl
fcom
ret
push
(bad)
(bad)
popa
and
mov
out
(bad)
push
sbb
div
retf
add
idiv
mov
xor
add
test
or
pop
xchg
es
jne
(bad)
mov
mov
cmp
je
test
je
cmp
je
out
call
ret
jns
aam
xchg
pop
pop
sbb
and
outs
or
cld
dec
xchg
add
sub
mov
enter
xchg
sbb
std
inc
ins
add
fstp
shl
mov
shl
cmp
jb
lea
push
adc
push
pop
sbb
rcl
aaa
aam
add
enter
and
lds
mov
outs
cmp
es
xchg
stos
inc
lods
xor
pop
or
ss
adc
mov
out
cmp
(bad)
sbb
shl
out
push
cmps
push
in
pop
out
push
push
pop
mov
sub
sti
mov
test
je
add
shr
test
rcl
mov
adc
loop
inc
enter
inc
retf
jne
add
repz
or
pop
mov
rol
fnsave
mov
mov
les
ja
hlt
jg
jle
or
push
mov
pop
mov
inc
test
rol
and
lods
xor
and
shr
nop
and
adc
add
cmp
test
xchg
sar
jbe
popa
inc
imul
dec
mov
dec
cmps
dec
xchg
loopne
and
jb
(bad)
std
xor
inc
pusha
or
push
mov
mov
sahf
movs
sbb
adc
or
test
xchg
push
add
ins
loop
mov
fimul
stos
add
jmp
dec
repz
jnp
leave
jmp
add
mov
xor
add
fisub
pop
aas
cs
dec
div
jmp
cwde
dec
jmp
test
xlat
xor
out
(bad)
and
mov
dec
stos
xor
dec
mov
rcl
push
xchg
dec
add
sub
sub
push
mov
in
outs
mov
cs
arpl
out
scas
sub
pop
pusha
jno
xor
inc
sbb
mov
outs
fwait
sbb
popa
movs
fnstenv
je
sbb
daa
int3
add
sub
clc
dec
push
cli
pop
test
scas
pop
and
(bad)
mov
cli
test
sbb
shr
bound
and
js
adc
div
scas
adc
jnp
movq
movaps
sahf
ins
mov
shl
jle
xor
push
dec
fisubr
ror
aas
dec
(bad)
jge
repz
fwait
in
cmp
or
dec
mov
xchg
ret
adc
jmp
daa
or
jnp
mov
and
jle
mov
adc
push
add
adc
fisubr
pop
add
pusha
fadd
mov
mov
pop
xor
pop
enter
shl
out
sti
fcmovb
sbb
sbb
pop
les
xor
stos
pop
push
(bad)
xchg
enter
mov
dec
imul
push
sub
sub
dec
push
jl
cmp
jb
inc
and
cli
sbb
cmp
cmc
or
out
add
fist
call
clc
fild
and
jb
pop
push
add
inc
adc
mov
loop
push
jl
mov
pusha
popf
and
sbb
push
popa
shr
(bad)
cmp
dec
fnstenv
mov
test
cdq
or
sbb
push
arpl
pop
xor
pusha
aaa
sbb
push
cmp
(bad)
jge
cmp
je
popf
je
add
sub
call
mov
push
clc
sub
sbb
fld
sub
and
inc
add
push
sbb
mov
xor
ins
and
(bad)
retf
aaa
jbe
mov
add
xchg
addr16
fild
clc
sub
fisub
data16
inc
cmps
data16
sbb
mov
call
mov
sub
adc
pop
fs
add
push
or
dec
cmp
add
mov
lods
not
adc
retf
dec
jg
jl
data16
jae
lea
dec
popf
jns
pushf
push
push
rcl
shr
adc
adc
or
sbb
icebp
mov
push
adc
aaa
sbb
(bad)
(bad)
(bad)
sar
scas
pushf
test
cmps
and
add
inc
pushf
call
sbb
mov
mov
pop
pop
fidivr
add
test
mov
jb
and
je
and
nop
fisttp
or
call
retf
hlt
ret
adc
std
cld
mov
xchg
add
aas
sub
mov
add
ins
pop
inc
mov
ret
cmp
stos
push
ret
or
dec
or
jo
add
std
clc
lods
test
xchg
inc
cmp
cmp
jle
mov
pusha
mov
pusha
xor
mov
and
inc
fimul
ret
fs
outs
pop
loopne
sar
jb
or
into
ja
mov
add
dec
mov
js
adc
push
imul
pop
add
sub
ja
mov
jo
sbb
mov
push
push
fsub
add
shr
aas
imul
and
pop
adc
lock
mov
push
mov
mov
mov
add
in
jge
not
inc
dec
jmp
push
fld
rcl
cmp
or
xchg
rcl
sbb
mov
pop
sub
out
xchg
mov
or
cdq
adc
dec
maskmovq
mul
xor
retf
data16
xor
cmp
mov
sub
add
and
or
shl
gs
fs
js
ja
add
mov
shl
loopne
push
cmp
arpl
imul
stos
sub
ja
test
cmp
movs
sub
or
ret
pop
inc
dec
dec
mov
inc
hlt
movs
and
cld
fisttp
fidivr
xchg
jle
aas
or
add
xor
ret
aaa
add
adc
fsubr
cmp
ja
jbe
xor
ins
jge
outs
jo
or
retf
test
mov
mov
in
add
jo
sbb
repnz
pop
fimul
dec
inc
jg
mov
retf
dec
add
mov
pusha
dec
xchg
cmp
push
shl
imul
sbb
mov
mov
aaa
aam
xchg
xor
sbb
adc
fadd
in
add
add
lds
or
stos
mov
or
mov
adc
daa
or
retf
scas
mov
das
in
sub
mov
mov
add
sub
in
rcr
add
imul
pop
mov
fld
jle
push
jne
push
push
ret
into
aam
sbb
dec
add
sbb
push
cwde
outs
or
push
enter
jecxz
pop
mov
add
loope
jnp
loopne
add
add
adc
movs
gs
and
popa
jmp
ror
ret
mov
ror
push
mov
cmp
sbb
add
shr
fisttp
sbb
mov
cmp
and
cmp
daa
fistp
and
jmp
push
cs
(bad)
cmps
adc
xor
dec
xchg
mov
dec
jne
mov
adc
sahf
xchg
adc
fimul
pop
or
add
or
daa
call
mov
add
xchg
test
jecxz
mov
jg
mov
outs
retf
xchg
(bad)
dec
fcomp
jmp
mov
aad
ins
and
adc
and
sbb
jo
(bad)
xor
xor
mov
sbb
repz
dec
fsubr
(bad)
retf
sar
adc
xor
push
xor
mov
add
add
dec
rcl
cmps
cmp
retf
sub
add
xchg
aaa
jb
mov
cmp
mov
mov
pop
pop
inc
xchg
mov
or
enter
or
add
mov
fisttp
cmps
repnz
push
or
jns
or
xchg
or
sbb
or
scas
in
push
(bad)
(bad)
int
add
adc
pop
adc
adc
sahf
retf
stos
cmp
or
popa
in
adc
adc
pop
call
xchg
adc
push
inc
scas
adc
in
push
push
inc
xchg
or
sbb
pop
and
pop
leave
mov
sbb
add
in
sbb
fcomp
adc
push
outs
sub
nop
sbb
push
pop
enter
sbb
ja
cmps
in
xor
sbb
cmps
in
inc
neg
pop
pop
add
sub
into
add
fld
jbe
iret
cmp
xchg
add
jbe
pop
mov
and
adc
je
call
push
in
repnz
adc
in
in
out
xchg
out
out
out
pop
mov
out
sub
pusha
and
call
adc
ficom
cmp
xchg
cmp
push
cmp
ror
jmp
jmp
inc
call
in
xchg
ja
mov
xchg
aad
in
cmp
scas
in
mov
mov
or
je
xor
lock
enter
icebp
icebp
das
xor
iret
repnz
xor
in
std
hlt
hlt
in
sahf
cmp
pop
hlt
xchg
(bad)
std
addr16
iret
cmc
cmc
cmp
mov
sbb
nop
cmps
repnz
clc
clc
sahf
xchg
stos
pusha
clc
or
addr16
and
cli
or
sbb
xchg
fwait
retf
cld
cld
je
cld
push
sub
aaa
push
nop
shl
mov
xor
sub
mov
xor
js
jmp
inc
add
hlt
and
out
jb
out
or
add
std
or
inc
call
jecxz
repnz
and
xor
aad
and
cmp
ins
nop
or
sti
out
out
xchg
pop
push
lea
cdq
(bad)
sti
or
or
dec
jmp
jmp
stos
xchg
stos
xchg
daa
in
cdq
rcl
cli
or
(bad)
cli
out
out
mov
xchg
mov
nop
mov
movs
mov
repz
and
repz
sbb
inc
cli
stc
(bad)
push
dec
jo
imul
mov
xchg
dec
pop
push
(bad)
clc
cdq
jb
daa
sbb
xor
aad
imul
repnz
fmulp
or
cmp
jmp
adc
cmp
jo
or
jmp
movs
pusha
lods
mov
push
and
loop
arpl
loope
setb
inc
clc
and
or
out
stos
or
fdiv
pop
leave
or
sahf
in
rcl
sub
pop
push
retf
push
mul
test
test
xchg
das
test
adc
mul
scas
test
and
test
repnz
inc
mul
sub
test
rcl
mov
mov
jo
dec
leave
xor
clc
clc
xor
pop
cmp
push
pop
pop
cmc
cli
cli
inc
mov
mov
pop
repnz
cmc
cli
hlt
pusha
rcr
push
(bad)
rep
fiadd
push
push
stos
into
jo
adc
push
mov
shl
loope
loope
(bad)
jns
xor
pop
hlt
pusha
pop
repnz
mov
hlt
in
sub
pop
repz
inc
repnz
mov
dec
push
cmp
xchg
repz
sbb
mov
cs
jae
and
jb
sbb
mov
cmps
bnd
test
icebp
cmp
in
push
arpl
inc
xlat
cmp
push
cmp
mov
cld
icebp
cmc
jb
sbb
mov
in
mov
icebp
push
or
jne
(bad)
rcr
mov
dec
icebp
xor
(bad)
or
out
lock
in
pop
pop
mov
test
xchg
pop
loope
and
mov
aaa
retf
pop
inc
push
(bad)
push
sub
ffreep
and
xor
scas
xor
push
add
pop
leave
add
mov
push
mov
enter
add
jne
neg
(bad)
xor
jmp
xchg
xchg
mov
dec
add
pop
and
add
and
and
lock
mov
ins
fwait
int
int
lahf
push
mov
adc
iret
sbb
adc
cmp
sbb
mov
or
ins
sahf
int
add
sbb
fwait
int
sub
pop
sti
sbb
pmuludq
mov
iret
je
jge
(bad)
in
aad
dec
xor
adc
mov
ja
(bad)
cmp
retf
push
add
xor
jb
neg
and
je
sub
mov
jl
add
mov
lock
mov
or
and
out
je
rep
ins
popf
xor
or
shl
shr
xabort
adc
or
push
jbe
lods
adc
shr
cmc
fnsave
jmp
adc
push
les
inc
push
pusha
cmps
mov
fldcw
aas
sub
call
dec
inc
dec
je
jle
test
vmread
or
add
shr
or
mov
sbb
push
int3
push
call
lods
out
(bad)
mov
cmp
ror
and
ds
pop
lea
inc
push
pop
iret
lods
mov
cwde
out
(bad)
jae
dec
imul
outs
xchg
(bad)
jb
jmp
out
xor
sbb
rcr
xor
or
inc
sbb
mov
arpl
mov
adc
xchg
test
test
(bad)
mov
div
test
iret
mov
addr16
inc
mov
mov
and
mov
jg
pop
sbb
out
add
cmp
jb
mov
enter
push
ins
in
add
js
sub
and
test
push
mov
stos
sub
add
std
loopne
push
les
adc
outs
sbb
adc
jmp
inc
loopne
test
fsub
loopne
sub
jo
and
test
jmp
or
mov
imul
push
fnstcw
ret
aaa
jns
mov
jmp
cmp
enter
pop
dec
rcr
add
mov
and
and
dec
dec
mov
ins
push
lea
loopne
and
adc
leave
and
(bad)
loopne
jnp
imul
xor
cmps
jb
movs
mov
cwde
mov
icebp
mov
jnp
push
or
iret
xor
aad
pop
cmp
or
dec
push
cli
imul
(bad)
xchg
adc
test
inc
cmp
inc
ins
sbb
cld
dec
xchg
xchg
ss
inc
push
cmp
and
xlat
push
loope
push
inc
jg
loopne
pop
inc
adc
and
and
jb
hlt
mov
loopne
push
out
cmp
inc
(bad)
sbb
cdq
add
push
dec
xor
cmp
or
psrad
clc
and
nop
inc
or
xor
adc
jle
inc
shr
inc
icebp
add
sub
or
bound
xlat
jae
mov
xor
test
aam
mov
aad
sbb
test
fucom
imul
pop
pop
daa
pop
dec
or
add
aaa
dec
loopne
jg
dec
outs
inc
cmp
jnp
movzx
push
loopne
mov
retf
in
cmp
dec
inc
add
pushf
adc
push
sub
jl
xor
pop
sub
jno
mov
inc
inc
jmp
xchg
sub
adc
sub
outs
psubw
pop
jne
push
add
jne
ja
cmp
jno
or
xchg
push
dec
sub
pop
fld
and
or
or
sbb
xor
or
push
out
lock
sbb
jge
add
jb
ss
iret
mov
jae
jbe
and
and
or
or
cs
jg
inc
mov
xchg
jmp
cld
scas
push
out
mov
outs
add
pop
pop
es
test
jne
ret
sbb
cmp
dec
push
cld
es
pop
mov
cld
jbe
and
sub
(bad)
arpl
lgs
pop
inc
add
dec
loope
movs
call
cmp
xchg
fadd
imul
jno
add
adc
and
inc
movs
add
add
dec
adc
ds
ss
addr16
sub
or
push
pop
jo
sbb
mov
mov
dec
inc
push
pusha
xchg
push
mov
in
lods
lea
and
ret
fld
ins
jmp
in
cmp
cmps
xchg
push
and
jne
shl
js
pop
and
pushf
pop
dec
inc
scas
and
int3
jno
fimul
mov
dec
sub
pop
nop
es
enter
lods
and
cmp
ret
sub
clc
(bad)
sub
mov
fxtract
mov
jae
js
pusha
xchg
(bad)
push
inc
jecxz
or
nop
sbb
in
xor
push
fcom
sbb
pop
jmp
ins
imul
out
fisub
jne
pop
enter
or
lods
mov
and
cs
pop
xchg
sbb
add
ret
sub
xor
mov
jo
add
dec
mov
je
bound
dec
push
sub
test
or
pop
inc
mov
(bad)
rol
dec
xchg
jbe
pusha
mov
fadd
and
mov
sbb
ins
sbb
data16
push
push
mov
or
add
push
add
or
scas
pop
data16
and
add
pop
dec
jl
xor
and
pop
dec
scas
cmps
inc
lods
or
popa
addr16
or
dec
cmp
add
push
ret
cli
and
repz
sbb
enter
stos
fisttp
ins
sbb
adc
mov
inc
scas
and
or
adc
ret
adc
and
cmp
jns
iret
mov
sbb
popf
imul
fnsave
push
pop
hlt
clc
jbe
xor
and
cmp
sbb
adc
sub
or
int
addr16
loop
push
mov
sub
call
mov
fs
or
(bad)
xor
adc
(bad)
fadd
outs
xor
imul
je
(bad)
push
pop
fs
adc
push
mov
add
add
aam
jbe
or
add
fadd
lods
pop
int3
add
pop
xor
ror
(bad)
lock
and
ret
repz
jb
imul
xchg
inc
ret
mov
and
push
jmp
pushf
lahf
cs
jmp
mov
inc
sub
in
mov
imul
sub
dec
jmp
leave
or
nop
arpl
pop
or
push
dec
push
sub
push
jne
sub
adc
lea
sub
movs
inc
es
xchg
add
or
clc
retf
cmc
add
pop
or
xor
ficom
sbb
push
aaa
sbb
gs
push
pop
push
ret
(bad)
fidiv
add
fcom
mov
push
nop
mov
sbb
aad
je
or
xchg
push
js
push
retf
adc
ret
das
cmc
mov
int3
ret
and
add
xchg
lock
push
retf
loop
or
stc
adc
sbb
lods
arpl
add
cmc
xor
js
sub
dec
dec
adc
push
cdq
xlat
ds
cwde
retf
jge
or
push
jmp
xor
and
stos
ins
pushf
add
add
test
pop
aam
push
shl
icebp
inc
xchg
adc
test
ss
ret
push
sti
push
mul
das
mov
xchg
add
push
mov
adc
lahf
add
das
push
mov
or
add
adc
js
pop
adc
add
call
push
add
push
inc
jl
sub
mov
fmul
mov
sbb
int3
cdq
fnstsw
add
adc
nop
int3
aas
sbb
sub
push
dec
pusha
aam
data16
outs
fild
jl
add
dec
adc
pop
push
sub
das
push
loopne
(bad)
push
push
inc
es
mov
pop
enter
mov
add
ror
fisubr
push
es
sub
push
add
icebp
dec
in
outs
add
in
push
sbb
push
sbb
inc
mov
dec
mov
cmc
lahf
xchg
jne
test
pop
jge
fadd
dec
jnp
jle
push
shr
push
add
enter
aaa
xor
fbstp
or
jne
rep
jmp
sbb
addr16
inc
and
add
mov
sub
or
jl
je
add
jmp
mov
in
and
jne
or
(bad)
(bad)
in
pop
fild
or
jae
shld
shl
inc
rcl
or
clc
and
shl
sti
arpl
xchg
mov
pop
pop
cmp
jl
jae
cmp
aam
and
cmps
cmp
push
xor
push
cmp
add
sub
add
push
inc
inc
les
adc
push
adc
or
jmp
xlat
pusha
fnstcw
inc
pop
jmp
lods
xchg
cdq
push
or
and
mov
dec
jle
pop
cmp
pop
mov
clc
mov
inc
xor
sub
ss
push
sbb
imul
or
inc
cmp
into
adc
and
sbb
add
inc
inc
pop
scas
inc
retf
pop
in
enter
inc
or
ja
ins
and
push
jo
data16
retf
inc
sbb
dec
js
sbb
(bad)
leave
div
or
iret
in
xchg
js
lods
fsubr
adc
cld
pop
sbb
test
(bad)
lods
ins
add
movs
mov
xor
add
sub
add
dec
sbb
rol
xchg
push
sbb
dec
fdivr
out
or
ret
push
daa
sub
xchg
pop
sub
inc
jge
xor
mov
and
add
cld
pop
xchg
pusha
push
mov
and
or
inc
daa
sbb
fdiv
sub
dec
sbb
aam
xor
sbb
lea
push
out
cmps
je
add
aaa
int
sbb
inc
jmp
shr
(bad)
pusha
inc
popa
out
dec
add
sahf
mov
inc
cwde
loopne
xchg
adc
aam
jns
xor
push
sti
aaa
pusha
test
popa
lea
sbb
in
mov
into
adc
adc
ret
fidiv
jl
imul
inc
push
es
ds
cmps
adc
mov
pop
(bad)
jno
cmps
ret
stos
xor
add
int
push
inc
call
test
xor
mov
jmp
add
test
out
inc
imul
adc
sbb
cmp
xchg
adc
push
xchg
sub
test
add
or
cmps
or
popa
ror
pop
sub
jmp
loopne
retf
(bad)
mov
push
xchg
(bad)
xor
cmp
add
add
jecxz
pop
and
and
and
test
push
icebp
and
jne
imul
into
jno
sub
mov
into
mov
out
lea
xchg
loopne
push
stos
xchg
enter
cld
inc
adc
or
nop
mov
scas
pop
push
stc
ss
pop
or
pop
jmp
dec
xor
and
and
out
adc
and
out
xor
or
(bad)
inc
cld
push
add
cmp
je
mov
cmp
nop
cmp
je
cmp
jne
dec
enter
mov
shl
push
or
cmp
test
test
or
lock
cmp
sbb
je
mov
stos
daa
sbb
mov
push
lock
mov
and
xlat
lock
iret
sti
inc
jmp
sbb
retf
sbb
adc
test
mov
inc
push
movs
call
cmp
sbb
adc
ds
test
hlt
popa
and
shr
or
cwde
mov
mov
or
adc
jmp
xor
nop
pop
or
sub
lock
and
test
and
mov
pop
(bad)
je
fbstp
cdq
movs
(bad)
pop
fild
fcomp
dec
dec
loope
mov
xor
rcl
lods
arpl
jg
fadd
jp
jge
mov
dec
adc
movs
add
xor
mov
and
lods
(bad)
mov
xchg
sbb
sub
mov
or
adc
and
and
leave
jle
xchg
mov
shl
mov
xor
iret
adc
hlt
hlt
fimul
das
sbb
js
and
and
jne
repnz
ret
pop
scas
sub
sar
popa
lods
mov
inc
mov
sbb
outs
cmp
jb
(bad)
dec
cmp
aad
mov
fadd
jbe
mov
div
or
mov
adc
jne
push
ret
sub
dec
jmp
ja
cmp
ja
push
mov
adc
and
sub
xchg
jnp
add
fsubr
dec
jmp
and
pop
inc
jmp
push
fistp
adc
add
sbb
lock
cmp
xor
cmp
pop
adc
dec
out
mov
outs
inc
ss
jle
adc
in
jg
lock
push
push
jp
sbb
sub
cmc
mov
dec
cmps
and
push
and
inc
cmps
and
inc
ins
cmp
inc
xor
push
mov
popa
xor
retf
xchg
je
(bad)
or
sbb
or
fisttp
add
push
sub
or
or
inc
ja
mov
dec
sub
jo
adc
jns
adc
adc
int
bound
push
jne
pop
push
and
mul
sbb
sbb
sbb
adc
jo
imul
cmp
mov
pushf
push
rol
push
adc
sub
dec
js
dec
jmp
dec
enter
jp
adc
fdiv
into
push
mov
mov
cmp
rcl
and
mov
(bad)
jge
mov
or
mov
or
adc
mov
ucomiss
pop
aas
movs
sub
repnz
add
cdq
fs
ret
jne
test
jge
pop
jle
add
sbb
call
cmp
inc
xor
xchg
sub
xchg
je
mov
push
sub
add
sti
or
(bad)
jb
data16
je
clc
xlat
dec
ret
cdq
test
js
dec
daa
push
mov
or
add
test
fadd
push
scas
repnz
dec
dec
imul
jmp
popf
jl
mov
adc
dec
cdq
mov
jne
sahf
push
add
jmp
cmp
dec
mov
push
add
bound
repz
mov
inc
arpl
call
cmp
jb
leave
nop
sub
rcl
dec
je
jne
cmp
movs
sbb
jmp
fucomi
fist
hlt
add
dec
xor
pop
aam
enter
push
pop
adc
pop
inc
dec
push
jl
cmp
movs
add
cmc
xchg
data16
push
mov
sbb
mov
pop
ja
call
push
add
enter
jne
jnp
and
aas
mov
jmp
inc
jbe
and
sub
add
jb
rol
jl
leave
add
and
add
dec
push
inc
loopne
fist
cmp
int3
ss
imul
xor
dec
out
add
sub
loopne
adc
cli
and
pop
inc
ret
inc
push
inc
dec
movs
pop
fistp
test
inc
and
and
in
fidivr
lahf
(bad)
loopne
pcmpgtb
push
inc
repnz
and
mov
repnz
and
xchg
jns
test
pushf
push
inc
js
xchg
mov
sbb
jmp
popa
repz
inc
or
add
inc
ins
and
out
mov
push
jo
ins
nop
push
add
repnz
adc
inc
ins
dec
test
and
mov
out
das
or
push
sub
cmp
test
jns
push
arpl
fidivr
add
jl
test
loope
xchg
test
pop
sbb
inc
rol
jns
push
popa
push
push
inc
inc
retf
movs
cdq
inc
cmp
es
sbb
push
repnz
enter
and
lods
and
add
and
shl
popf
cli
sbb
data16
xlat
dec
inc
and
mov
inc
shl
cmp
sub
daa
push
push
rol
test
(bad)
imul
or
jmp
inc
cmc
fld
xor
shl
(bad)
inc
mov
sub
inc
(bad)
mov
imul
je
jg
adc
shr
adc
sub
jg
ja
cmp
es
and
xchg
lahf
xchg
inc
lahf
cli
(bad)
jb
push
push
push
mov
and
jle
inc
xchg
fisttp
in
dec
js
pop
pop
(bad)
sub
sbb
sub
mov
cvttps2pi
cmp
adc
add
pop
sbb
test
and
lea
pop
popa
add
fist
xchg
rcl
mov
call
in
fsubrp
dec
ret
sub
fstp
icebp
dec
mov
adc
lods
loopne
push
dec
dec
adc
rcr
cmp
xor
ficom
test
mov
cmps
pop
int
and
or
cmp
ror
(bad)
xor
loope
inc
or
mul
adc
add
pop
xchg
push
inc
enter
xor
ror
sar
and
(bad)
jb
(bad)
mov
mov
sbb
fnstenv
leave
sbb
cs
fist
and
sbb
loope
fistp
jmp
push
xor
jmp
(bad)
out
push
icebp
jmp
lock
enter
outs
movs
out
shl
cmp
mov
jle
jbe
dec
in
dec
mov
dec
sbb
add
adc
aas
aaa
add
xchg
inc
das
xlat
lds
push
inc
push
xor
inc
lea
adc
sbb
xor
push
scas
ins
test
and
or
sbb
inc
fwait
es
xchg
ins
push
pop
or
sbb
jo
xor
adc
mov
xchg
or
cmps
mov
iret
xor
(bad)
aam
iret
leave
ret
push
add
add
jo
and
jg
cwde
sbb
and
push
loopne
stos
or
cmp
aam
sub
daa
test
jbe
push
and
pop
jo
mov
add
jmp
jmp
cmp
xor
inc
push
inc
dec
stos
push
add
aaa
dec
test
(bad)
inc
mov
cmp
adc
jno
jg
shr
fstp
call
mov
test
xchg
nop
(bad)
enter
mov
dec
mov
add
dec
jae
ret
adc
dec
xor
push
push
pop
cmovnp
add
ins
stos
sbb
sbb
dec
mov
xchg
cmp
jae
mov
pop
dec
mov
les
pop
xor
cmp
and
loopne
enter
dec
cmps
add
leave
push
repnz
dec
ins
es
and
and
and
test
and
xor
sbb
inc
and
cs
mov
or
call
inc
fild
jl
add
pop
xor
test
rcl
dec
or
sub
ret
daa
push
sbb
aad
xor
mov
jle
mov
dec
add
push
push
sbb
shl
adc
mov
std
mov
out
cmps
mov
leave
sub
std
add
adc
inc
fisttp
sub
push
push
retf
nop
xchg
push
imul
or
cmp
adc
stc
dec
pop
push
retf
lock
ret
lea
add
ja
enter
(bad)
loopne
and
shl
imul
cwde
or
ror
dec
or
sub
push
imul
fwait
mov
jbe
xor
jge
jae
in
and
sub
and
sub
mov
ins
cmp
jmp
popf
dec
inc
pop
retf
xchg
push
movs
push
xor
clc
hlt
or
adc
push
nop
lea
lahf
popf
sub
sub
mov
cmp
adc
gs
mov
sbb
pop
and
or
adc
clc
lock
mov
xchg
jne
push
sub
add
mov
jmp
mov
les
rol
dec
sbb
jmp
add
xchg
mov
jmp
push
pop
dec
mov
mov
and
add
push
mov
mov
cmps
inc
and
jg
ja
add
add
adc
dec
xor
push
xor
div
out
mov
fwait
jo
push
or
or
add
outs
or
(bad)
fstsw
sahf
jp
mov
fdivr
mov
test
clc
mov
pop
sub
xchg
push
fist
mov
cmc
pop
clc
fstp
ins
jmp
test
fld
cwde
adc
repnz
fstp
in
add
aad
ins
mov
mov
adc
jb
push
pop
ret
cmp
repnz
stc
nop
adc
or
push
jo
cmp
imul
pop
xchg
(bad)
and
aas
push
cmps
mov
repnz
subps
out
aaa
push
pusha
repnz
mov
add
push
inc
push
push
add
cmps
add
xchg
pop
pop
add
push
dec
loop
dec
imul
pushf
jne
pop
push
in
and
add
push
adc
arpl
cmp
and
dec
push
sbb
leave
nop
and
jle
dec
rcl
add
sbb
adc
and
mov
dec
pop
xor
loop
clc
pop
popf
push
pop
sub
pop
add
dec
push
hlt
xor
int3
(bad)
fmul
inc
enter
test
fs
ins
mov
jmp
push
nop
push
and
push
les
pop
jb
pushf
push
test
pushf
xchg
sar
scas
les
inc
inc
test
sub
push
cmp
inc
or
das
adc
js
shr
mov
repz
jne
js
sub
and
outs
inc
and
mov
fadd
shl
adc
movs
xor
adc
sub
js
add
in
and
cmp
and
pop
pop
sub
cmp
fimul
sti
xlat
dec
push
hlt
cmp
add
aad
cmp
or
out
leave
add
cld
pusha
cwde
mov
add
stos
xchg
or
xor
xchg
xchg
sub
loop
nop
adc
repnz
call
pusha
loopne
push
and
sbb
les
jne
inc
ss
sbb
dec
aad
sub
add
movs
je
dec
hlt
xlat
fwait
adc
data16
pop
xchg
enter
inc
xchg
ss
pop
xor
hlt
ror
ds
gs
inc
sub
sub
lea
sahf
test
test
ss
daa
sub
int
mov
mov
hlt
mov
fwait
xchg
shr
adc
push
add
pusha
daa
xchg
push
js
scas
test
and
retf
sbb
movs
pop
sub
push
xchg
rol
adc
cmp
inc
clc
or
mov
ins
test
inc
je
sbb
sub
hlt
add
push
iret
or
mov
pusha
pop
outs
or
pop
and
enter
in
sbb
cmc
push
in
pop
xchg
loopne
sub
push
push
sub
in
inc
add
(bad)
mov
movs
push
arpl
xlat
push
fst
or
ror
out
push
out
add
jmp
pop
mov
mov
mov
mov
aam
add
jno
ss
fcomp
mov
dec
add
fs
rol
inc
cld
mov
and
mov
mov
cmp
sbb
fs
popa
aas
jle
nop
pop
sub
xor
cmp
and
leave
sub
mov
cmp
in
lea
cmp
adc
mov
ins
pop
cs
sub
sbb
inc
add
les
ror
mov
and
bound
scas
loop
sbb
popa
mov
nop
xor
jo
data16
or
cmp
cmps
jo
inc
jg
dec
sub
add
and
dec
inc
adc
cmp
sub
fcmovu
out
inc
push
ficom
and
pushf
addr16
dec
xchg
and
add
and
push
jbe
add
das
jnp
ds
add
fs
and
es
lea
pop
cwde
mov
inc
sub
mov
aas
adc
stc
or
dec
pushf
pushf
imul
adc
pusha
fcom
xchg
adc
pop
sbb
mov
jle
xor
adc
loope
loope
push
push
pop
pop
hlt
push
push
dec
sub
sbb
rcr
ret
(bad)
xchg
xchg
lods
cmp
enter
out
mov
push
or
jne
dec
push
cmps
dec
inc
add
and
cmp
dec
add
dec
or
out
mov
mul
fidivr
movs
adc
inc
cmp
add
clc
cs
je
cmp
and
pop
clc
cld
pop
arpl
push
xlat
inc
pop
and
sub
cs
outs
lock
push
shr
jmp
dec
popa
push
pop
push
dec
sub
jle
in
daa
and
sbb
or
sbb
xor
inc
pushaw
ins
push
mov
and
nop
sub
lock
xor
push
ss
std
ds
push
mov
(bad)
test
pop
mov
sar
mov
pop
or
sbb
dec
adc
int3
or
fcomp
mov
je
sti
mov
inc
test
lea
add
dec
adc
enter
mov
ja
and
daa
or
mov
dec
pop
fmul
test
cmps
adc
pusha
sbb
rcr
std
fstp
inc
or
(bad)
push
sub
lea
gs
dec
push
fnstenv
or
dec
or
ss
add
iret
or
push
int
fmul
shl
test
mov
xchg
js
ret
mov
repz
lock
mov
adc
mov
out
and
hlt
xor
lock
and
add
daa
push
(bad)
out
inc
call
(bad)
xor
add
add
mov
ja
mov
sbb
or
sub
movs
cdq
add
jmp
mov
retf
std
scas
add
and
push
xor
xor
dec
aas
cmp
or
ror
and
adc
rol
sub
shl
jo
sbb
adc
jb
adc
mov
arpl
les
push
mov
outs
and
mov
or
or
into
test
or
jns
mov
mov
ja
xchg
add
push
sbb
and
aaa
jo
jl
repz
mov
or
jmp
dec
add
mov
push
push
add
adc
fld
sbb
aaa
xor
adc
bound
jmp
shl
or
je
push
les
mov
push
add
push
ffreep
jmp
lods
inc
addr16
pop
xor
cmp
mov
movs
push
pop
aam
test
pop
pop
dec
clc
dec
or
int3
fsub
xchg
add
cli
sub
xor
bound
xor
scas
xor
sbb
sbb
xor
fwait
xchg
add
inc
enter
sbb
lods
cmp
cmp
sbb
xor
aas
xor
cmps
outs
xchg
jmp
jecxz
dec
dec
dec
imul
lea
and
pop
fs
cli
mul
add
ds
mov
inc
or
add
nop
pusha
jecxz
push
shr
dec
push
adc
bound
push
ror
lea
mov
push
bound
mov
arpl
iret
ret
in
push
mov
outs
pop
push
inc
call
jge
js
adc
loopne
dec
xor
mov
push
push
jns
mov
pop
je
(bad)
inc
out
mov
not
or
or
mov
xchg
sbb
mov
(bad)
fdiv
pop
lock
adc
movs
movs
adc
in
push
xor
inc
inc
push
in
inc
dec
push
xor
pop
cmp
enter
push
xchg
or
push
pop
inc
nop
push
dec
arpl
cmp
rol
jns
ins
sbb
mov
add
jg
lock
adc
fisttp
aam
dec
shl
pusha
mov
dec
push
mov
imul
sub
cmp
imul
push
sbb
pop
loopne
les
xlat
add
enter
dec
inc
or
sub
ret
test
and
unpcklps
fs
add
push
ret
add
inc
ins
push
push
in
ret
je
rcr
clc
add
sar
adc
mov
jno
mov
xor
mov
test
mov
je
xor
jl
mov
mov
and
pop
call
xor
pop
(bad)
repz
add
sbb
push
pop
bound
or
inc
jnp
and
dec
adc
jae
jo
daa
inc
sub
ret
jbe
adc
mov
or
mov
sub
dec
out
mov
add
inc
xor
gs
xchg
sub
sar
xor
inc
fsubp
cmp
sbb
and
cmp
dec
mov
adc
inc
stos
or
mov
lock
not
shld
and
xor
jg
cld
hlt
rcr
or
adc
jle
mov
data16
xor
and
add
call
(bad)
movs
jge
sub
lods
sbb
add
lea
test
(bad)
jno
xor
mov
xlat
pop
sbb
adc
lods
rcl
inc
daa
add
pop
outs
or
shl
fcom
jge
push
(bad)
and
ja
adc
adc
iret
or
mov
movs
xchg
ds
cld
mov
test
shl
mov
jno
jl
and
fs
dec
mov
idiv
cmps
mov
cmp
jb
and
and
cmp
aas
ss
sahf
add
or
xchg
push
mov
fadd
movs
push
mov
xor
test
pop
loope
leave
push
sbb
loopne
aad
repnz
je
adc
les
test
push
push
imul
in
dec
je
push
sbb
mov
shl
xchg
clc
and
jecxz
push
or
mov
or
lea
dec
xchg
cmp
loop
lea
loopne
outs
dec
add
(bad)
(bad)
push
mov
je
and
outs
jmp
sbb
je
xor
adc
sbb
ss
mov
jne
jmp
jo
cmp
aam
or
xor
and
pop
and
or
add
xchg
xchg
sub
jmp
fcom
xor
add
mov
dec
cmp
cmp
je
pop
xor
out
jmp
add
aas
xchg
(bad)
push
scas
ds
dec
pusha
jne
jge
mov
cmp
bound
pminub
push
or
or
add
xchg
or
aam
dec
adc
inc
sub
and
pop
sbb
jmp
popf
push
pushf
pop
xor
fldenv
sub
adc
and
pop
xchg
(bad)
push
xchg
mov
js
sub
iret
jnp
mov
sar
pop
sub
lds
adc
sub
or
retf
dec
push
fs
pop
retf
or
mov
dec
inc
lea
sbb
movs
and
les
call
or
fcmovnb
fcmovnb
ss
div
mov
gs
cld
pop
cmc
aad
inc
jmp
inc
in
arpl
gs
or
xchg
fs
dec
mov
jne
mov
dec
mov
shr
cmp
fsubr
sbb
jne
mov
mov
or
addr16
push
and
mov
dec
adc
sbb
aas
push
imul
sub
lods
jo
xor
mov
xor
(bad)
pop
push
imul
and
adc
add
lea
(bad)
outs
retf
adc
dec
out
add
sub
xchg
loop
fcom
retf
retf
int3
data16
std
popf
enter
retf
test
movs
shr
js
mov
add
hlt
(bad)
fistp
jecxz
cld
mov
pop
and
cld
xor
rcl
pop
in
pop
loopne
adc
je
dec
lea
or
loop
add
jmp
dec
mov
mov
add
les
xor
shr
xor
mov
shl
lock
int3
mov
les
jmp
xchg
sub
mov
ins
mov
pop
or
sub
(bad)
mov
xor
mov
fs
sbb
pop
ficom
lea
lea
into
movs
mov
xchg
shl
stos
enter
mul
mov
mov
ins
or
es
aam
pop
inc
add
ror
pushf
ret
rol
(bad)
enter
sbb
xor
arpl
push
or
pop
and
pop
inc
mov
push
xchg
or
dec
dec
les
(bad)
and
push
add
sub
or
and
les
dec
fcomp
sbb
rcr
and
or
gs
cmp
xor
ret
push
test
out
push
sub
jo
lock
inc
push
int
push
ins
fiadd
enter
js
adc
jmp
dec
xor
scas
xor
and
out
cmp
es
rol
mov
xchg
pop
dec
(bad)
or
add
mov
lock
inc
outs
xchg
rcr
rcl
das
fwait
rcl
cdq
add
test
fld
cmp
out
mov
inc
adc
lods
mov
sub
or
or
mov
mov
pop
ds
rol
(bad)
push
into
sbb
clc
dec
push
mov
jle
push
xor
loope
dec
ret
mov
sar
and
push
stc
loope
xchg
jp
rep
adc
mov
push
add
mov
pop
sbb
pop
mov
cmp
pop
shr
ror
fisttp
or
les
jmp
dec
add
push
pusha
push
jo
and
je
dec
or
push
loope
and
mov
cs
out
cmc
and
mov
retf
retf
popf
mov
jae
pop
fdivr
or
xchg
mov
popf
push
or
xor
push
mov
cmp
push
dec
or
rcr
test
lods
call
in
or
(bad)
in
out
das
mov
shl
cmp
add
push
lea
(bad)
pop
ret
les
lods
mov
pusha
push
nop
xcrypt-cfb
jg
in
test
sbb
push
sar
pop
inc
mov
adc
popf
push
sbb
xchg
lea
in
jmp
clc
addr16
sub
xor
dec
or
je
or
sbb
enter
mov
push
pop
add
ret
addr16
add
stos
add
adc
rcl
push
adc
shl
mov
loope
push
sub
push
in
sub
or
enter
xchg
or
hlt
pop
jb
xchg
adc
movs
hlt
hlt
mov
dec
je
or
inc
les
push
xchg
pop
imul
test
outs
loope
ins
repnz
sub
into
sbb
pop
dec
loope
jbe
mov
in
leave
mov
add
enter
add
pusha
das
or
movs
inc
inc
shl
jecxz
ins
aaa
or
imul
outs
and
cmp
movs
adc
mov
mov
push
lea
jae
xchg
outs
ret
adc
test
out
dec
mov
test
mov
inc
je
pop
push
or
push
imul
nop
cwde
mov
repz
adc
lea
cmp
adc
mov
out
dec
test
lea
arpl
xor
test
pusha
call
sbb
pop
adc
push
add
sbb
or
dec
and
stos
lock
xchg
not
or
sub
cmp
ror
into
jle
push
jmp
adc
sahf
and
xchg
add
push
ins
aad
loopne
cmp
pop
xor
jno
xchg
add
(bad)
jne
mov
dec
mov
repnz
adc
movs
cmps
cmps
jo
test
test
ja
and
mov
fbstp
cld
lahf
jbe
push
adc
cmp
call
fisub
aaa
inc
(bad)
mov
dec
mov
dec
loope
inc
call
outs
push
cdq
jecxz
mov
mov
cmp
test
pushf
push
sbb
and
icebp
push
adc
dec
push
je
mov
add
addr16
mov
ss
retf
xor
sub
mov
fwait
sbb
cmp
or
ins
xor
push
mov
gs
sbb
pusha
ret
mov
dec
call
jmp
sub
jnp
sbb
or
adc
or
and
sbb
xchg
rol
push
shl
ins
inc
cwde
mov
cmc
fild
cmp
push
cmp
jle
iret
icebp
jmp
xor
sbb
xor
push
imul
xchg
and
adc
retf
jmp
pop
mov
adc
repz
push
fiadd
pop
xor
lea
push
call
and
test
pop
xor
jne
movs
push
sbb
cmp
iret
sbb
and
cmp
inc
add
dec
loope
and
and
push
icebp
mov
jae
imul
cli
mov
jo
inc
mov
push
inc
daa
add
adc
push
push
xor
xor
or
xor
int3
push
sub
into
jbe
pop
mov
bound
dec
mov
lock
and
inc
xchg
int3
fisttp
cdq
jmp
mov
add
push
dec
sbb
push
fst
loop
adc
mov
add
fidivr
and
cli
push
ficomp
jge
bndldx
daa
mov
jl
lahf
daa
mov
jnp
dec
clc
or
jne
and
das
sbb
ret
fstp
or
call
mov
push
arpl
adc
ret
mov
push
cld
jae
repnz
sahf
add
jmp
sub
dec
(bad)
sub
cmp
popf
test
pop
ffreep
cmp
je
rol
jg
cmp
lock
mov
jmp
push
movs
cdq
and
inc
aas
mov
es
push
mov
cli
repnz
sar
add
js
push
mov
xlat
mov
mov
or
push
jmp
xor
sub
fadd
jmp
jno
adc
(bad)
int3
mov
lock
mov
test
jne
sbb
outs
and
and
push
mov
shld
(bad)
mov
test
or
sbb
aad
xchg
loope
movs
lods
lods
mov
push
das
adc
push
in
pusha
mov
dec
and
xor
inc
aam
rol
imul
push
xor
ror
push
push
dec
stc
inc
mov
add
mov
and
xor
fsubr
xlat
add
jmp
rcl
add
icebp
test
mov
ins
push
lock
mov
xchg
and
je
fwait
pushf
bound
out
sub
adc
pop
or
movs
daa
pop
mov
and
mov
mov
or
ror
mov
push
mov
pusha
(bad)
aaa
adc
cmp
add
push
jae
push
jno
dec
cmps
hlt
rcl
jnp
jb
inc
ss
push
sub
dec
clc
pop
jno
mov
jmp
je
lock
or
gs
sbb
add
cmp
push
xor
xlat
xor
push
adc
loope
shr
je
aaa
int
sti
push
movq
push
dec
adc
push
and
jg
out
mov
jg
jg
outs
inc
or
idiv
lahf
push
jbe
jle
xor
jg
jg
jmp
lahf
ja
jg
lea
dec
jne
outs
add
mov
daa
fnstcw
jle
loopne
fidivr
inc
out
push
imul
jmp
xor
dec
add
inc
test
dec
fld
fsubr
pop
movs
add
adc
adc
sbb
in
inc
push
mov
shr
dec
das
dec
pop
shr
es
xchg
cmp
mov
or
add
xchg
mov
fstp
in
popf
inc
sub
test
jne
push
push
mov
ret
cmp
test
xor
rcr
mov
aaa
pop
dec
inc
xchg
xchg
mov
dec
aas
mov
inc
jno
ret
fcom
push
dec
jmp
stc
inc
daa
adc
scas
add
push
ror
push
(bad)
out
fsub
mov
daa
rcr
leave
jbe
test
ror
ror
rcl
mov
and
loope
lods
add
int3
dec
les
dec
jmp
sub
lahf
cdq
clc
imul
fiadd
daa
mov
and
mov
jbe
xchg
inc
(bad)
mov
int3
or
and
dec
mov
lock
inc
adc
sti
jns
push
jecxz
push
xor
xchg
ret
jecxz
pop
outs
xchg
pop
jne
dec
cs
and
(bad)
loopne
xor
icebp
das
sbb
mov
inc
push
sub
cwde
dec
cmp
xchg
sub
jmp
and
or
and
jle
mov
adc
mov
mov
jnp
inc
in
nop
mov
or
jne
es
sub
xor
inc
jmp
in
nop
add
outs
mov
mov
xchg
retf
test
jp
mov
pop
nop
je
jmp
cld
sar
sbb
lods
std
movs
test
pop
sub
mov
mov
lock
fwait
mov
or
mov
pop
jnp
mov
mov
stos
or
lahf
dec
fdivr
rol
loopne
pop
int
inc
out
inc
fld
jp
mov
and
loopne
and
cmp
mov
imul
ror
sub
lock
in
test
pop
mov
idiv
gs
push
pop
add
shl
sbb
in
inc
pop
add
xor
jbe
ins
mov
fdiv
dec
pop
div
xor
push
xchg
fs
mov
call
or
inc
pop
imul
(bad)
lock
test
ins
jne
inc
sub
pop
das
xlat
scas
and
adc
and
(bad)
cmp
jne
cmp
ret
add
aam
stc
push
cmp
inc
xor
add
inc
cmp
xor
cmps
ror
outs
ss
cmp
test
ret
test
and
ret
dec
cmc
fdiv
mov
rol
rcl
fisttp
jae
dec
and
mov
repnz
cmp
mov
pop
mov
add
push
sub
and
inc
stos
data16
xchg
push
xchg
xchg
jmp
jecxz
test
jne
xor
addr16
or
adc
loopne
push
(bad)
data16
and
mov
imul
mov
and
jg
push
push
or
mov
shl
in
push
mov
pop
hlt
std
daa
ins
in
fdivr
mov
aam
jmp
xchg
neg
adc
fdiv
enter
jb
fsub
std
aaa
cs
jae
add
inc
je
xchg
pop
jp
es
repz
in
std
mov
cmp
ror
mov
push
dec
in
out
adc
jns
ins
xor
xchg
das
and
cmp
or
loope
jo
mov
das
or
jl
mov
fldenv
sti
mov
fist
push
enter
imul
std
push
xor
(bad)
fst
call
jne
call
iret
das
mov
pop
cld
call
ficom
std
mov
or
leave
xchg
call
pusha
stos
inc
test
popa
sti
out
jecxz
(bad)
dec
or
xchg
lea
in
test
lock
call
and
add
jmp
pop
push
loopne
test
movs
stc
lea
arpl
or
dec
daa
sub
retf
lock
fdivr
xor
push
mov
inc
ds
adc
xchg
leave
add
in
movs
xor
std
sbb
(bad)
and
push
(bad)
push
lock
lock
mov
add
cmp
inc
daa
movs
lea
jmp
std
cmp
std
mov
inc
repz
es
stc
cmps
xchg
fdivr
bound
mov
sub
push
fisub
or
add
inc
jmp
dec
cs
xlat
xchg
in
stos
leave
jne
add
bswap
adc
inc
jmp
dec
sub
enter
inc
push
cmc
sar
icebp
popa
ror
mov
xchg
push
add
push
sub
es
sub
in
sbb
sbb
int3
aad
pop
and
pop
xor
std
(bad)
xlat
sbb
popf
aam
push
rol
pop
leave
int3
cmp
sub
mov
fs
iret
jmp
mov
test
mov
mov
sbb
je
scas
jno
adc
cwde
std
ficom
push
mov
in
sbb
pop
add
sub
push
ins
add
dec
ficomp
dec
jne
jmp
sbb
jmp
repnz
and
std
xor
stos
popa
imul
pop
mov
adc
(bad)
push
mov
pop
mov
inc
xor
push
jno
scas
cs
push
sub
(bad)
sar
add
inc
(bad)
jns
dec
js
sbb
add
inc
add
cmps
pushw
push
jl
mov
aaa
std
push
inc
jo
or
inc
xor
movs
pushf
or
add
sbb
push
fcom
mov
in
jge
mov
xchg
pushf
push
adc
mov
lods
nop
test
cs
adc
cmp
adc
pop
pop
movs
cwde
and
mov
xchg
ficomp
enter
test
iret
enter
xor
stos
inc
pmuludq
adc
leave
cmp
mov
js
pop
push
movs
pop
mov
xor
pop
movs
test
adc
movs
call
jecxz
scas
adc
(bad)
push
pop
leave
and
cwde
adc
leave
and
test
sbb
mov
and
cwde
adc
xchg
xchg
cmp
xchg
sahf
sbb
fnstsw
lea
stos
xchg
xchg
adc
xchg
cwde
adc
and
mov
and
dec
in
enter
sbb
push
xor
mov
movs
xchg
add
add
fimul
cmc
pop
dec
in
aaa
lods
xchg
sub
iret
enter
inc
mov
sub
inc
sub
(bad)
mov
dec
xor
repnz
movs
xchg
hlt
ffree
jle
jg
dec
xchg
xchg
cmc
imul
enter
xchg
mov
cwde
lods
inc
and
enter
dec
sbb
(bad)
movs
xchg
jmp
je
mov
and
mov
pop
popa
les
mov
sbb
push
repnz
outs
cwde
test
xchg
arpl
mov
cmp
push
movs
repnz
movs
mov
pushf
xchg
xchg
adc
mov
and
add
sbb
mov
mov
mov
ret
jbe
cs
hlt
or
jo
xor
jnp
jmp
inc
(bad)
sti
mov
mov
loope
daa
nop
and
adc
push
adc
dec
(bad)
rcl
cmp
std
adc
lea
pusha
pop
inc
push
and
ret
xchg
jno
mov
inc
jmp
aam
push
jge
adc
or
jmp
and
adc
jle
push
jg
addr16
int
mov
sti
test
xchg
push
inc
pop
neg
xchg
add
pop
inc
push
push
lods
sbb
pop
push
dec
inc
ficom
push
jne
aas
inc
or
in
mov
test
sub
xor
mov
gs
es
fistp
std
sub
adc
or
inc
popa
sbb
or
call
jo
xor
shl
ficomp
xor
jae
and
mov
aas
add
mov
aaa
jg
mov
inc
clc
jo
rol
xchg
fiadd
bound
jl
rcl
xchg
in
call
pop
xor
loop
lods
or
nop
xor
push
jmp
pop
jae
mov
dec
push
and
xor
adc
sub
test
dec
add
dec
and
gs
jmp
mov
xor
and
xchg
dec
mov
cmp
jne
or
cmp
and
or
repz
sub
add
jne
jne
ja
mov
sbb
shl
add
xchg
neg
imul
out
add
add
mov
mov
sub
mov
push
rcr
(bad)
xor
push
mov
test
mov
shl
sbb
inc
inc
pop
jmp
addr16
retf
mov
jg
lock
or
dec
inc
(bad)
fst
push
movs
pop
(bad)
into
add
mov
add
xchg
(bad)
jne
imul
pushf
repz
inc
and
bound
aaa
adc
cmp
repz
add
mov
mov
daa
idiv
or
sti
pusha
neg
daa
fwait
movs
adc
and
jmp
mov
dec
pushf
cld
mov
mov
call
retf
and
push
sbb
mov
dec
or
inc
push
imul
sub
sub
or
mov
fs
add
jmp
add
push
inc
shr
rcr
push
test
repz
fsincos
fisttp
(bad)
push
jbe
dec
sub
sbb
cmp
fs
adc
or
adc
cmp
mov
sbb
iret
mov
aad
push
pop
shl
shr
push
(bad)
mov
sbb
add
push
or
dec
add
clc
ret
jo
jecxz
or
push
or
fild
(bad)
and
outs
xchg
push
stc
adc
mov
xor
mov
xor
fwait
xchg
frstor
out
repnz
push
push
push
xchg
cld
pop
inc
cmps
cdq
imul
mov
adc
mov
and
mov
ja
dec
cmp
add
aaa
js
cld
imul
scas
sbb
aaa
daa
jl
and
lods
pop
push
pop
pop
cmp
sub
adc
xchg
movs
fld
adc
fcom
addr16
jl
cmp
dec
pop
in
das
je
sub
test
enter
adc
fcomp
pop
iret
xor
ret
cdq
xchg
pop
push
loope
jo
js
jne
cmp
dec
xchg
inc
mov
inc
popa
dec
or
sbb
sar
jle
jne
lea
cmp
clc
enter
sbb
sbb
sub
inc
sub
push
add
jge
push
ret
ss
inc
sahf
fnsave
dec
out
and
lock
xor
or
or
jmp
sub
push
lea
and
in
ds
push
mov
xor
or
and
call
sub
ja
jno
jle
sbb
cwde
lea
jmp
push
into
xchg
cmc
nop
lock
fsub
aad
out
mov
sub
out
pop
retf
mov
mov
cmp
hlt
jns
test
imul
mov
sub
lods
repz
push
push
mov
mov
sbb
stos
mov
add
push
jecxz
mov
jbe
mov
add
das
retf
or
xchg
mov
sbb
cs
scas
push
and
lock
inc
add
mov
mov
pushf
mov
inc
dec
inc
push
jge
mov
lea
stos
sub
xchg
shr
dec
fsubr
xor
outs
xor
jge
lea
clc
add
jge
push
jge
jmp
repnz
leave
jle
mov
push
mov
and
ins
jbe
clc
scas
sbb
cmps
(bad)
imul
xchg
dec
sbb
xchg
sbb
sub
push
push
add
adc
lock
movs
jp
loop
jmp
mov
adc
cwde
aam
fs
mov
test
push
inc
or
cmp
repz
and
inc
sub
push
cli
cmp
jbe
jno
les
scas
xchg
xchg
mov
cmp
push
daa
sbb
nop
lea
cmp
jne
push
inc
cmp
or
or
push
ss
shl
outs
add
sbb
jmp
sub
retf
in
pop
adc
sub
add
push
div
add
adc
cmp
add
je
sub
mov
hlt
int3
dec
pop
loope
push
jns
jae
popf
add
fild
pop
fisttp
jecxz
inc
sbb
movs
je
in
and
add
mov
add
or
or
jno
shl
add
pop
jne
fmul
loop
adc
das
pop
(bad)
and
js
imul
adc
xchg
sub
clc
je
sbb
nop
adc
imul
sar
sti
mov
pop
lea
fisub
ret
sub
inc
or
pop
stc
add
dec
xchg
loopne
je
push
pop
aam
mov
xchg
arpl
inc
jl
add
mov
sti
add
sti
dec
sub
add
test
or
imul
mov
pop
and
cs
movs
sub
mov
add
clc
push
imul
jns
mov
mov
sbb
lea
sub
mov
sub
rol
adc
sbb
fsub
add
retf
ss
push
or
and
jl
arpl
out
pop
bound
mov
fistp
ins
out
xlat
xor
dec
jp
or
aas
inc
mov
pop
and
adc
xchg
fwait
jg
add
cmp
ins
or
xor
dec
cmp
sbb
push
dec
dec
dec
sub
sbb
mov
push
rcr
xor
sub
inc
xor
sbb
shl
ror
loope
push
sub
lds
inc
daa
xor
mov
mov
pop
repnz
retf
push
scas
in
lds
sbb
ret
popf
in
cld
mov
repnz
jle
test
scas
jg
xor
push
ffreep
movs
xchg
pop
test
and
hlt
inc
shr
in
add
sub
mov
xchg
and
add
inc
rol
jb
xsaveopt
movs
shr
in
jns
int
sub
sbb
pusha
sbb
push
jae
and
pop
sbb
mov
inc
push
jns
test
hlt
add
(bad)
cdq
fimul
mov
inc
loop
addr16
inc
add
and
add
and
mov
xchg
xor
es
sbb
in
shl
xchg
xchg
dec
cs
popf
jecxz
es
mov
loopne
nop
sbb
loopne
movs
sbb
push
sahf
mov
je
lock
jg
fcomp
push
cmp
xor
je
enter
jl
mov
in
(bad)
fsubr
cmps
pop
jge
mov
sbb
in
enter
mov
cmp
pop
aaa
mov
xor
dec
xchg
mov
push
sbb
inc
cmp
fcmovnbe
aam
cmps
cmp
dec
jmp
add
fsub
loopne
repnz
and
xchg
aam
cs
inc
push
scas
push
shl
aam
in
jns
int3
aam
seto
les
leave
test
test
inc
cmp
int
sub
cmp
arpl
pop
(bad)
mov
movs
in
mov
add
add
or
pop
mov
mov
xchg
imul
(bad)
out
jns
jo
movs
add
and
or
cmps
je
cmps
repnz
pop
jb
adc
or
ss
ins
pop
fbld
sbb
mov
nop
lea
add
adc
jle
stos
add
ja
pop
sub
mov
mov
inc
dec
jne
lea
mov
pop
pop
jne
and
movs
sbb
push
and
add
mov
mov
fs
add
mov
xor
hlt
mov
mov
movs
(bad)
jmp
inc
cli
push
mov
cmp
ja
or
lds
lea
out
mov
ins
pop
jne
scas
cmp
shl
or
cld
fidiv
pop
jno
xchg
xlat
popf
add
jb
ret
sbb
add
fcom
push
push
leave
ins
inc
inc
cld
mov
mov
mov
and
mov
or
push
or
mov
jge
test
mov
cmps
mov
loope
jmp
(bad)
ror
sti
sub
mov
cmp
neg
cmp
ja
enter
adc
lea
cli
or
loopne
jmp
stos
sub
cdq
inc
sar
add
inc
jo
iret
inc
sbb
(bad)
xchg
es
mov
adc
add
pushf
xor
cs
push
add
popa
adc
(bad)
and
ins
push
or
xchg
(bad)
in
add
pop
cmp
retf
or
jno
cmp
pop
ja
mov
sub
xchg
cmp
std
jne
or
fld
adc
add
jmp
test
sub
pop
and
mov
mov
aam
cli
xchg
jne
xchg
mov
jmp
cs
mov
adc
jl
xor
or
out
dec
je
push
jmp
xchg
and
in
dec
sub
pusha
aaa
push
push
movs
scas
inc
jmp
rol
jnp
es
cmp
mov
out
mov
pusha
mov
js
cmp
leave
loopne
mov
dec
in
leave
xor
mov
mov
shr
test
ret
nop
call
loopne
cmp
add
sti
mov
inc
cmp
jmp
lods
add
dec
test
(bad)
sbb
jge
add
jb
mov
ss
or
shr
ins
add
lock
mov
xchg
pop
xor
jne
mov
lea
mov
jle
pop
or
add
mov
cmp
xor
inc
push
mov
inc
dec
jmp
stc
xor
popa
fiadd
push
or
sub
pusha
push
jnp
cmps
aaa
pusha
ss
adc
push
call
je
inc
sbb
sub
popa
inc
inc
pop
in
loop
and
add
sahf
test
sub
adc
xor
and
pop
ret
and
test
pop
add
fcomp
dec
adc
ret
add
xchg
push
mov
cmp
gs
add
xor
and
push
add
mov
add
cmps
ror
or
or
lock
add
jp
and
out
inc
sub
in
(bad)
imul
cmp
dec
sbb
mov
xor
push
inc
call
ins
jbe
ret
aaa
xor
out
imul
aad
ins
adc
shl
mov
mov
jmp
popf
jmp
les
cmp
imul
test
test
das
cmps
mov
or
shr
and
mov
jecxz
push
add
and
mov
mov
add
lea
mov
sahf
xchg
inc
cmp
fistp
aaa
cmp
or
retw
adc
out
ja
adc
movs
sub
xor
and
rol
and
push
sub
scas
pop
inc
pop
mov
ins
popf
outs
je
sub
xchg
or
dec
stos
push
lock
pop
sbb
pop
adc
(bad)
and
ficomp
sbb
sbb
jno
inc
inc
sbb
sub
xchg
xchg
or
(bad)
and
adc
std
loopne
pop
test
mov
cwde
mov
and
enter
jmp
popf
and
or
pop
cld
ret
cmp
cmps
(bad)
and
push
and
(bad)
or
sub
fiadd
add
lahf
xor
je
push
mov
mov
int3
push
xchg
or
add
stc
or
lock
rol
pop
stc
xchg
dec
mov
inc
jo
and
lods
sbb
jo
or
lods
lods
xchg
cmp
lods
mov
imul
mov
add
and
jmp
pop
data16
xchg
dec
lahf
stos
test
adc
and
sbb
dec
pop
push
add
loopne
stos
pop
sbb
add
ss
and
add
js
pop
sub
ja
lea
add
xchg
test
cmc
add
cmps
and
imul
push
push
mov
or
mov
push
xchg
adc
xor
in
aaa
lock
lock
mov
xchg
inc
push
push
fld
lods
dec
lahf
xchg
push
or
and
mov
dec
xor
or
gs
iret
or
hlt
sub
push
les
push
je
push
cmp
test
jne
add
sub
push
mov
push
popa
or
in
add
ret
pusha
ret
les
xchg
or
pushf
inc
dec
sbb
jmp
pop
lock
popa
xor
add
sub
jl
inc
outs
jmp
outs
lahf
pop
rol
jae
xor
arpl
jmp
ss
add
ret
icebp
or
jae
mov
ins
add
jne
or
call
sbb
mov
or
push
cmp
lea
sub
dec
mov
aaa
inc
add
push
xor
mov
add
adc
pop
dec
mov
cmps
sbb
push
sahf
rcr
add
pop
fnstenv
ds
or
cdq
cmps
inc
ret
je
and
inc
push
push
xchg
movs
or
cmp
pop
jo
mov
push
dec
dec
adc
pop
mov
shl
pop
inc
jo
test
(bad)
cmp
sbb
aaa
or
xor
sbb
xor
add
imul
mov
add
cmp
push
inc
xor
push
add
test
pop
ror
sub
push
mov
push
ret
cmp
imul
add
pop
jae
inc
mov
mov
cmp
and
xlat
sub
pop
push
movs
sub
dec
outs
mov
pop
int3
xor
aad
pop
push
mov
lods
test
lea
xor
push
enter
jl
pop
push
add
pop
push
lea
mov
or
(bad)
dec
sar
xor
adc
daa
push
or
ins
sub
inc
add
add
or
lods
inc
cmp
cmp
dec
ret
in
mov
mov
adc
xchg
test
sub
mov
mov
pop
sub
int3
movs
rcl
xor
mov
enter
push
push
push
mov
pop
sbb
dec
adc
jmp
addr16
in
dec
jne
and
or
iret
mov
out
inc
loopne
pop
rcr
stos
imul
sti
leave
(bad)
mov
lds
push
pop
shl
iret
xor
push
push
cs
cmp
mov
mov
stos
xchg
add
mov
push
add
adc
leave
xor
fst
cwde
xor
test
shl
push
xchg
mov
stos
sti
ins
cld
mov
imul
adc
xlat
in
pop
sub
popa
jnp
xor
jmp
sub
lods
add
pop
das
pop
xchg
je
ret
and
push
pusha
mov
lea
pusha
add
mov
in
add
dec
inc
push
adc
addr16
rol
mov
icebp
mov
movs
jne
push
mov
mov
mov
jmp
sbb
add
pop
leave
lds
add
dec
ins
xor
adc
dec
adc
mov
xchg
les
pop
(bad)
and
or
push
inc
xchg
and
add
ins
fimul
inc
sbb
lea
cwde
enter
push
jbe
cmp
sbb
inc
or
and
add
stos
mov
ins
cmp
fwait
and
not
mov
jp
xor
jmp
(bad)
fldcw
inc
inc
sbb
inc
inc
xlat
jo
les
out
push
fmul
in
test
aam
movs
inc
test
popa
jmp
push
lock
lods
mov
das
mov
xor
mov
and
add
loope
adc
shl
shr
icebp
loop
rcr
or
dec
daa
fdivr
cmp
mov
shl
sbb
jns
arpl
mov
sahf
jo
leavew
sub
into
mov
dec
add
scas
mov
(bad)
dec
mov
(bad)
clc
sbb
or
add
stos
mov
adc
or
xchg
(bad)
jbe
sar
dec
xchg
adc
inc
adc
add
cld
mov
test
inc
int3
mov
xor
lea
dec
dec
sub
add
jbe
xor
push
test
pop
adc
(bad)
int3
push
xor
clc
cs
lods
or
(bad)
scas
xor
in
in
leave
inc
mov
dec
mov
jne
int
sbb
push
push
xchg
cmp
xchg
je
cmp
xor
xchg
mov
jns
push
push
push
shr
add
or
mov
pop
test
and
test
or
clc
inc
or
sbb
dec
inc
xlat
inc
sbb
aaa
call
pop
dec
sub
pavgw
test
inc
cmp
push
xor
inc
ins
add
arpl
sub
dec
add
mov
add
adc
and
jecxz
push
adc
and
dec
sbb
push
sbb
dec
add
add
xchg
movs
fs
dec
leave
mov
cmp
(bad)
loopne
rcl
les
into
jmp
xor
test
mov
xor
mov
inc
push
push
push
aam
sbb
jne
xchg
push
mov
fstp
sub
or
or
aam
sub
adc
arpl
push
aam
sbb
mov
push
icebp
push
outs
jno
jb
jne
sbb
test
imul
jmp
inc
mov
mov
pop
sbb
mov
daa
mov
fsubr
das
add
mov
loop
cmp
dec
scas
sbb
ror
adc
dec
pop
call
pusha
pusha
dec
aaa
add
outs
mov
jne
test
mov
stc
mov
dec
add
xor
clc
mov
push
push
outs
mov
out
movs
es
pop
dec
cmp
loopne
aam
dec
loopne
add
and
sub
dec
sbb
mov
sub
ins
lahf
add
dec
add
cmp
cli
das
mov
pop
xor
outs
push
jb
xchg
xor
fs
sub
inc
inc
adc
not
push
adc
sub
or
js
push
fsubrp
or
in
pop
sbb
push
mov
push
xor
call
and
adc
popa
sub
call
push
loopne
mov
dec
push
pop
or
pop
push
jge
sbb
into
xchg
mov
test
push
je
mov
adc
clc
mov
dec
shr
and
mov
jmp
imul
pop
dec
loopne
data16
cmp
sar
scas
sub
add
test
add
cmp
xchg
int
pop
add
xchg
test
inc
shl
ss
pushf
inc
push
jae
ja
cmp
jnp
shl
pop
into
pop
mov
jno
fwait
cmp
outs
mov
fadd
cmp
cmp
add
nop
dec
fcomp
and
push
push
ds
loope
loopne
jge
push
or
and
cmp
jne
mov
fisub
add
xor
imul
pusha
inc
bnd
jle
adc
and
pop
stos
cwde
mov
pop
dec
enter
push
push
or
cmp
inc
or
mov
sbb
push
dec
push
mov
neg
pop
add
and
push
or
mov
xchg
and
hlt
adc
mov
retf
mov
add
push
aaa
mov
mov
jns
sbb
or
fsub
(bad)
aam
lahf
mov
sbb
inc
adc
mov
push
sbb
nop
dec
xchg
lods
pop
inc
movs
imul
fs
retf
dec
test
sub
or
cmp
stos
sbb
sub
aam
stos
or
xchg
jecxz
loop
test
outs
cmp
fidiv
xchg
add
adc
sub
or
test
fs
or
mov
pusha
test
jmp
xchg
lea
fisubr
mov
loop
sub
inc
pop
pop
mov
dec
cwde
dec
add
and
es
neg
sar
inc
fbld
push
push
or
mov
jne
into
ret
dec
add
sbb
icebp
in
sub
sub
pushf
mov
repz
mov
out
aaa
push
sub
jnp
into
sbb
cmp
and
lahf
mov
dec
in
(bad)
sub
add
ficom
inc
sub
dec
dec
jg
and
mov
adc
and
data16
dec
sbb
push
or
addr16
xor
sub
adc
xchg
dec
xchg
jmp
push
add
or
sub
fnstenv
add
pcmpeqw
jmp
adc
push
lock
push
call
mov
and
test
js
popa
mov
imul
adc
ror
pushf
in
add
xor
nop
or
test
pop
aas
or
or
dec
ficomp
adc
push
pop
dec
sub
adc
lea
mov
movs
push
enter
into
rcl
les
adc
out
adc
gs
daa
lods
in
jns
push
or
hlt
hlt
stos
mov
mov
add
sub
adc
jge
jecxz
(bad)
jno
mov
ins
or
or
push
sub
cmp
fs
dec
(bad)
aam
and
xchg
outs
out
xor
sbb
lods
or
xchg
dec
call
pop
or
and
enter
movs
rcl
(bad)
shl
pop
pop
mov
add
sub
sar
cmp
add
mov
add
in
gs
dec
or
jg
rol
inc
add
xor
loopne
jne
push
jecxz
sbb
cmp
fwait
movs
dec
cmp
xchg
lods
jno
xor
add
adc
inc
pop
or
sbb
cdq
push
xor
fist
es
and
mov
inc
mov
inc
cwde
jge
fsub
nop
je
stos
pop
or
dec
or
push
sub
and
inc
and
add
xor
and
add
or
enter
push
ret
xchg
ror
adc
fsubrp
or
add
add
add
sar
clc
xchg
xor
push
inc
arpl
jmp
inc
popf
out
and
mov
cwde
xchg
cmp
rol
inc
jns
jnp
mov
jbe
or
sub
imul
xor
test
fs
inc
pop
push
sbb
js
(bad)
jns
xor
jl
sar
inc
fsubr
mov
or
int3
push
and
pop
rcl
or
jbe
xor
(bad)
push
xchg
mov
jp
mov
push
jmp
jns
mov
ja
(bad)
sbb
ds
or
test
push
imul
push
jne
pop
test
cdq
or
push
(bad)
sar
ret
ds
sub
cmp
int3
pop
inc
icebp
sub
or
fisttp
mov
fistp
push
scas
jmp
and
mov
xor
or
adc
cli
dec
movs
jbe
loope
and
or
cmp
mov
adc
sub
push
imul
cmp
or
xchg
test
xchg
jle
ins
xchg
cmc
cli
lock
push
cmc
pusha
xor
xor
jne
cli
sbb
ss
aam
imul
ror
xchg
or
(bad)
dec
sbb
sbb
in
sbb
adc
lods
add
sub
fwait
mov
lods
sub
fcomp
add
and
ins
fdiv
imul
adc
jb
int
out
cdq
inc
mov
mov
stos
and
(bad)
test
cmp
loopne
lods
pusha
rcr
lahf
jecxz
xor
sub
rcr
movs
jne
mov
xor
repz
(bad)
call
clc
js
outs
pop
or
cmp
mov
add
ror
or
adc
pop
call
fcmovb
lahf
xor
les
lea
test
pop
nop
lods
dec
test
lods
or
cld
inc
cwde
push
pop
sbb
fs
add
(bad)
out
and
push
xchg
sub
pop
mov
cmp
cmp
add
and
jae
shl
(bad)
pop
xchg
fbld
iret
adc
stc
bswap
sbb
jne
into
aam
cdq
add
int3
pop
(bad)
out
repnz
add
add
lods
fs
sub
gs
movs
and
(bad)
and
sub
test
push
lock
(bad)
sub
inc
cmp
or
mov
cdq
sbb
sbb
pop
push
fs
inc
adc
leave
mov
and
sbb
fbstp
dec
dec
sbb
shl
cmps
les
mov
or
add
scas
jge
push
in
jecxz
(bad)
ins
adc
jne
loope
(bad)
mul
fs
lods
adc
sbb
rol
mov
mov
and
lods
sbb
stos
cmp
add
or
rcr
add
mov
lea
sbb
sub
scas
retf
loopne
sbb
movs
arpl
and
inc
jne
mov
test
imul
sbb
xor
dec
xchg
pop
pusha
jmp
and
and
add
jb
ret
ret
and
adc
loopne
js
mov
je
push
xchg
movs
test
sbb
pop
leave
ror
loop
test
xor
xchg
in
ret
jmp
(bad)
add
in
(bad)
fidivr
jae
or
jl
and
and
test
mov
add
jne
add
outs
ror
ret
inc
xchg
rcr
mov
jmp
pop
inc
jmp
cmp
(bad)
inc
sbb
pusha
sub
sub
mov
(bad)
outs
inc
inc
adc
shl
sbb
push
xor
mov
mov
cmp
mov
pop
and
or
mov
pop
xchg
dec
adc
aad
add
mov
ins
loop
add
not
push
mov
dec
sbb
push
adc
or
mov
prefetch
loope
ins
loop
mov
lahf
cmp
sub
test
fistp
add
cmp
sbb
into
in
xchg
jb
jne
push
clc
jbe
mov
test
inc
dec
out
in
js
cmp
pop
mov
mov
dec
adc
loopne
std
mov
adc
es
sbb
les
and
sbb
out
inc
xor
cmp
int
and
stc
pop
gs
jbe
jmp
push
cmp
nop
adc
and
aam
push
adc
push
add
test
mov
xchg
fstp
lea
shl
scas
les
js
jmp
das
mov
xor
js
not
push
aad
sbb
add
fdivr
adc
dec
jmp
push
loopne
mov
fst
push
or
cs
out
call
sub
adc
lods
mov
and
cwde
or
xor
mov
lahf
or
dec
and
cld
pop
(bad)
or
sub
lods
mov
call
adc
das
push
test
jmp
mov
cs
stc
arpl
or
sbb
pop
sbb
jl
cmp
or
data16
repnz
dec
in
mov
xor
push
or
mul
sti
xor
sbb
mov
scas
jmp
cmp
call
cmps
movs
push
jo
cmp
mov
xor
fidiv
popf
repnz
mov
xchg
and
cmp
jmp
cwde
cmp
jle
sub
cmp
outs
gs
xchg
push
jmp
mov
inc
dec
cmp
xchg
xchg
and
mov
out
(bad)
lock
cmp
push
scas
sar
or
mov
add
ins
and
mov
pop
jge
(bad)
fdivp
sbb
push
fcomp
shr
add
jne
mov
je
push
in
inc
push
mov
or
cmp
adc
mov
push
pusha
call
xchg
daa
or
bound
pop
push
sub
push
je
or
mov
xchg
pop
or
and
inc
ret
daa
pop
stc
sub
cmp
mov
add
(bad)
sub
mov
cmps
gs
loopne
je
mov
outs
jge
push
sub
dec
add
inc
adc
fsubr
pop
cmp
mov
adc
test
push
pop
add
jmp
xor
dec
dec
or
pushf
mov
xor
(bad)
lods
or
xor
cmp
or
jecxz
mov
xlat
cwde
push
push
inc
jmp
push
jg
pop
int3
xor
mov
dec
mov
ret
hlt
sbb
xchg
or
lahf
pop
sahf
xor
adc
push
push
cwde
dec
aam
enter
adc
mov
xor
cmps
sbb
xlat
test
dec
sbb
pop
cmp
add
xchg
jmp
add
add
frstor
fdivr
aas
and
jle
imul
xchg
pop
les
inc
sbb
or
test
pop
lods
sar
mov
xor
jmp
lea
sub
clc
pop
inc
cmp
jb
mov
popf
xor
icebp
add
into
mov
or
push
je
cmp
mov
shl
sbb
push
and
leave
xor
jae
in
fisttp
cmps
std
mov
or
sub
ja
pop
and
and
loopne
rsqrtps
inc
neg
push
dec
mov
fdivr
jne
test
(bad)
jne
xchg
adc
inc
or
mov
push
shr
jne
xchg
nop
fmul
ds
xchg
push
or
cwde
xchg
test
mov
pushf
and
lea
imul
test
pusha
mov
xor
rol
sub
add
cmp
jb
dec
dec
sbb
ins
jl
cdq
inc
ja
inc
or
mov
js
inc
inc
jg
xchg
cmp
test
jg
clc
or
nop
add
jle
shl
out
and
js
mov
clc
(bad)
cmp
gs
call
test
shr
fwait
pop
enter
ret
das
jmp
inc
(bad)
into
or
adc
or
adc
lock
push
into
test
lods
lock
xchg
push
cmps
les
scas
pop
shr
or
loop
call
pop
jne
xor
xchg
sub
add
dec
mov
mov
inc
cmp
and
ins
scas
or
adc
sub
(bad)
add
ficomp
cmps
add
fiadd
mov
xchg
jp
dec
lock
push
out
jmp
or
lods
(bad)
pusha
pop
push
xor
add
nop
mov
pop
les
loope
int3
sahf
inc
xchg
push
dec
lea
fcmovne
cmp
pusha
or
daa
mov
(bad)
dec
push
dec
sbb
shl
jmp
lods
xchg
int
scas
add
dec
and
les
sub
int3
test
cmp
xor
sub
retf
push
pop
dec
add
test
sbb
jne
sub
movups
ret
and
nop
ficomp
and
mov
inc
mov
cpuid
pop
popa
dec
inc
ss
add
arpl
or
and
iret
mov
sahf
jae
out
fnsave
cmp
fiadd
push
in
sub
inc
push
ja
jae
movs
or
push
push
and
mov
mov
push
jge
mov
push
adc
jbe
cmp
inc
int
or
bts
popa
cmp
cmps
call
sub
or
and
cmc
push
add
add
loop
mov
mov
dec
adc
cmp
fcom
loope
push
cmp
xchg
mov
mov
sbb
loopne
add
and
(bad)
sti
and
and
add
sbb
icebp
in
and
jb
adc
daa
and
sbb
adc
adc
rcl
pop
arpl
clc
jl
push
mov
ins
push
jne
push
movs
or
call
pop
sbb
adc
or
loopne
rcr
dec
mov
sbb
push
adc
or
jl
loop
popa
cmp
movs
xor
add
xchg
xor
mov
out
pop
popa
clc
and
pop
push
xsha1
cmps
mov
adc
clc
and
test
repz
or
add
inc
jo
dec
retf
inc
and
cmp
js
jmp
and
in
jle
or
mov
add
inc
adc
and
enter
adc
jp
dec
add
ins
and
prefetch
or
popf
xchg
js
(bad)
call
inc
cmp
jle
pop
inc
jg
clc
mov
std
cmp
adc
or
call
ss
test
dec
add
inc
adc
aaa
cmp
add
mov
add
sar
add
or
(bad)
sti
xor
lea
sbb
retf
imul
(bad)
stc
sub
or
hlt
add
push
mov
mov
push
push
xor
jno
adc
movs
inc
daa
mov
add
test
jle
xchg
mov
sub
cmp
fbld
test
mov
cmp
cmps
xor
inc
sti
push
jl
sbb
sub
rcr
cmp
push
cld
bound
xchg
sub
dec
cmp
(bad)
add
iret
or
idiv
ret
lods
ret
scas
inc
push
jl
pop
faddp
adc
adc
movaps
enter
xchg
repz
mov
ret
inc
cmps
adc
xchg
dec
test
xor
pop
dec
dec
shl
fld
dec
cmp
add
mov
mov
inc
xchg
pop
in
add
inc
jp
xor
or
(bad)
adc
loope
call
adc
push
pop
sub
out
inc
into
inc
arpl
push
out
xchg
cmp
bound
out
sub
xor
repz
nop
jecxz
pop
test
imul
pop
adc
dec
or
lea
inc
pushf
xchg
aam
add
adc
cmp
sbb
xor
pusha
retf
(bad)
and
cmp
inc
cmp
test
xchg
xchg
std
mov
push
mov
lea
mov
rol
jle
mov
test
ins
xchg
push
(bad)
jne
dec
sub
pop
ins
or
lods
xor
sub
cmp
xchg
les
adc
js
add
pop
pop
int
test
fucom
sti
jne
mov
call
xor
(bad)
test
sbb
mov
push
inc
fmul
push
xchg
push
dec
adc
dec
inc
pop
clc
or
clc
push
and
push
sti
adc
iret
mov
jmp
and
add
rcr
mov
jmp
sar
push
imul
add
xchg
out
and
sbb
fiadd
cmc
and
push
or
add
inc
adc
fucomp
pop
add
retf
inc
dec
ss
dec
in
add
dec
push
mov
or
ret
sub
fcomi
lods
in
mov
pop
pop
lahf
rol
push
lea
adc
mov
mov
sti
cmps
mov
or
lds
push
(bad)
lock
(bad)
push
scas
mov
in
xchg
push
or
es
add
sbb
ins
mov
mov
jmp
into
pop
or
xchg
add
pusha
(bad)
je
sub
add
ror
inc
call
jl
test
and
cmp
mov
adc
or
or
movs
jno
fsub
jg
cli
cmp
push
xor
push
hlt
mov
and
cld
mov
stos
js
dec
and
jbe
movs
sbb
adc
(bad)
out
retf
imul
add
enter
into
les
mov
test
xlat
test
gs
aas
xchg
sub
cdq
xchg
sbb
bound
adc
hlt
jbe
inc
and
lea
mov
pusha
xor
xor
cmp
xchg
sub
loope
in
xor
and
je
in
lock
shl
or
(bad)
repnz
xor
jbe
mov
add
lods
lods
cmp
sbb
int
cmps
push
test
(bad)
push
or
cmp
loopne
add
add
jg
in
jb
add
add
mov
es
xchg
rol
inc
or
shl
ficomp
mov
mov
daa
scas
loop
pop
sub
inc
pop
cmp
dec
iret
mov
add
sub
sbb
mov
push
enter
mov
sub
adc
push
sysenter
ror
ficomp
mov
xor
cmp
lods
mov
add
addr16
mov
dec
mov
ror
cli
je
dec
std
add
imul
dec
sub
fs
xor
jae
pop
cwde
mov
mov
cmp
jne
or
inc
inc
inc
inc
leave
push
inc
inc
clc
adc
pop
movs
lds
xchg
and
out
sub
jne
jge
(bad)
adc
daa
ret
sub
clc
and
les
push
xor
jne
push
inc
pop
jne
sub
jbe
fs
pop
jns
jl
and
add
jg
adc
sub
sbb
mov
pop
cwd
mov
inc
out
sub
or
cmp
imul
jb
inc
mov
push
mov
jne
lea
or
inc
push
add
shl
test
ds
adc
or
(bad)
or
or
or
stos
popa
pusha
sbb
xor
test
push
push
jo
retf
jmp
or
sahf
inc
mov
mov
test
outs
sbb
stos
xchg
aas
push
jae
sbb
pushf
xchg
ins
inc
lods
cmp
cmps
sub
imul
jecxz
xlat
sub
push
fldenv
inc
mov
xor
cmp
jno
xchg
cwde
inc
xchg
sahf
loop
je
xor
fs
icebp
sbb
movs
inc
xor
mov
adc
add
js
icebp
loope
jbe
adc
stos
ret
jmp
test
fcomi
jmp
adc
repnz
inc
cs
push
into
sub
xor
push
sbb
cmc
cwde
or
mov
pop
in
rol
pop
ja
or
mov
(bad)
bnd
orps
out
add
cdq
mov
inc
test
push
mov
mov
ins
xchg
or
fiadd
xchg
pop
ret
or
sub
push
lds
mov
add
outs
and
int
xor
je
jecxz
and
push
and
or
push
sbb
aam
add
pop
pop
adc
out
pop
mov
and
cmp
sbb
pusha
pushf
sbb
or
dec
adc
adc
push
or
push
push
ror
xchg
lock
je
inc
adc
xchg
inc
call
and
sub
bound
add
inc
inc
push
jmp
pop
xchg
cmp
es
mov
dec
adc
lea
mov
cmp
mov
add
and
clc
dec
sub
xor
popf
push
xchg
inc
pusha
pop
scas
sbb
hlt
loope
sbb
inc
test
push
and
mov
rol
adc
pop
out
ret
out
push
cwde
xor
push
and
add
adc
inc
loop
xchg
xor
adc
adc
or
xchg
push
scas
movs
jge
sbb
sbb
ss
pop
fild
(bad)
rcr
add
js
je
imul
adc
clc
adc
cmps
clc
push
pop
push
test
popa
cmp
mov
or
adc
sub
into
inc
jmp
push
dec
addr16
rcr
les
dec
test
or
xchg
pop
jbe
fs
mov
mov
outs
pusha
add
fcmovne
adc
call
lock
cmp
int3
push
add
clc
pop
jnp
mov
cmp
add
arpl
mov
jmp
xor
lock
div
ins
cmp
in
fild
neg
pop
lods
jmp
das
lods
or
call
(bad)
sbb
dec
mov
add
add
cmp
je
or
in
mov
gs
movs
jmp
ffree
pusha
js
jmp
add
push
lahf
movs
out
test
mov
adc
inc
sbb
add
xchg
sbb
or
or
adc
fadd
test
and
fwait
repnz
or
jmp
dec
pop
xor
test
and
jl
mov
xchg
jo
adc
jmp
push
fmul
dec
loope
ror
pop
mov
xchg
jne
adc
xchg
lods
and
push
pop
sahf
out
jnp
test
jns
xor
out
rcr
jno
adc
adc
js
sub
add
adc
int3
fcom
sbb
lock
and
adc
mov
mov
sbb
pop
mov
or
icebp
ficom
icebp
jl
sahf
and
inc
ds
xchg
and
cs
push
add
mov
inc
iret
push
fdivr
ret
dec
and
or
adc
pop
pop
lahf
arpl
loope
xchg
and
push
aaa
mov
ret
and
push
push
test
jmp
fsub
mov
movs
and
enter
or
pop
inc
cmp
ret
add
or
ss
mov
cmp
inc
adc
dec
mov
inc
cmp
add
lods
cmp
or
rol
push
cmp
cs
les
aaa
js
cmp
je
mov
inc
mov
fiadd
movs
mov
icebp
gs
pop
jecxz
push
and
lods
xchg
push
xor
pop
cmp
or
mov
mov
cmps
stos
add
and
xor
mov
sbb
mov
mov
ret
imul
add
pop
neg
push
adc
cmp
ret
je
fild
jmp
mov
add
(bad)
jmp
fstp
dec
(bad)
daa
aas
push
xor
mov
cmps
cmp
add
movhps
or
mov
inc
adc
outs
jo
push
adc
xor
or
or
sub
sub
jnp
cmp
fsubr
jne
shl
and
mov
jg
push
add
inc
fidiv
dec
mov
xchg
je
mov
cmp
(bad)
and
enterw
dec
pop
imul
lock
mov
push
or
gs
adc
out
adc
test
sbb
aaa
icebp
adc
jbe
jne
imul
sbb
jo
jge
aas
sbb
or
xchg
add
movsx
inc
sbb
pop
dec
je
rol
pop
(bad)
cli
jbe
(bad)
lock
dec
mov
xor
xchg
in
sbb
jnp
mov
lock
bound
test
add
or
pop
cmp
sbb
lea
adc
mov
scas
dec
jmp
sbb
mul
lods
test
pop
sub
inc
sbb
cmp
sbb
inc
adc
clc
lock
test
dec
loope
mov
jmp
jle
xchg
inc
xlat
imul
and
pushf
dec
shr
dec
sbb
push
sbb
imul
jmp
daa
push
cli
xor
add
movs
cmp
sbb
push
inc
xor
sbb
or
adc
cmc
xchg
sbb
mov
jp
mov
pop
adc
cmps
cmp
imul
dec
and
and
add
out
imul
sbb
jne
rcl
mov
or
fidiv
jecxz
xor
(bad)
into
xor
scas
test
add
verw
scas
jnp
pop
es
sbb
or
movaps
xchg
cmc
jmp
add
adc
add
push
jmp
iret
inc
outs
popa
pusha
pop
xor
(bad)
cmp
iret
pusha
rcl
adc
pushf
and
ret
test
lods
aad
sub
retf
jle
or
js
sbb
push
jo
adc
and
jbe
push
push
jmp
pop
push
push
push
push
fs
inc
jb
cld
dec
stos
sub
add
pop
mov
imul
and
out
mov
and
mov
mov
push
push
pushf
jmp
jo
and
arpl
hlt
or
mov
cli
imul
mov
or
int
inc
inc
data16
push
adc
or
pop
jnp
daa
outs
jmp
rol
das
stos
dec
stos
shl
daa
or
push
fild
push
cmp
jl
adc
push
jle
jge
in
(bad)
and
jl
jg
push
jle
jge
mov
and
call
je
add
pop
jmp
jne
add
mov
mov
sbb
sbb
cmovg
dec
test
or
div
mov
adc
mov
push
mov
and
jl
stc
cmp
sbb
and
cdq
fwait
mov
daa
push
js
mov
mov
mov
mov
inc
loope
(bad)
adc
pop
mov
mov
adc
es
pop
stos
fwait
repnz
or
sbb
or
and
and
xchg
fistp
repnz
xchg
inc
push
(bad)
push
jmp
xor
jl
jg
or
xchg
ja
push
jmp
and
test
loope
push
add
cwde
jp
jmp
push
xor
mov
push
sbb
nop
jmp
clc
inc
add
(bad)
lea
xor
sub
sbb
mov
push
and
xor
hlt
out
dec
pop
sub
mov
cmp
pop
test
or
icebp
mov
sbb
add
mov
sti
outs
jmp
ss
add
and
or
call
and
and
ret
push
inc
in
cs
int3
add
push
sub
imul
mov
add
jl
loop
inc
add
or
jl
xchg
fld
add
test
movs
mov
loopne
fld
movs
cdq
mov
sbb
div
xchg
(bad)
cld
jmp
icebp
(bad)
in
mov
push
dec
inc
inc
push
xchg
or
and
ss
push
pop
leave
and
add
xlat
pop
sub
and
mov
scas
je
and
dec
pushf
adc
jne
sahf
retf
dec
pop
pushf
xor
imul
sbb
ret
jns
jmp
mov
(bad)
mov
enter
adc
imul
push
or
mov
cs
popa
iret
or
call
mov
gs
sub
(bad)
pop
and
and
xchg
sub
inc
lea
cmp
je
inc
dec
(bad)
sahf
adc
jmp
pusha
lods
xchg
jbe
xchg
les
or
add
fcomp
or
test
or
test
sbb
push
inc
inc
loopne
pop
cmp
dec
dec
or
cmp
movs
xchg
mov
adc
and
mov
pop
mov
loope
retf
jns
pop
add
test
movsx
xchg
popf
or
or
and
cwde
test
add
jle
cmp
fsub
jmp
(bad)
mov
jb
ror
cmp
or
jb
jmp
inc
ins
jecxz
push
jo
xchg
xchg
mov
in
sbb
lods
inc
retf
es
add
mov
add
add
test
dec
mov
ret
add
dec
or
fimul
imul
ins
movs
mov
sbb
add
sbb
push
pop
cmp
or
xor
sub
and
push
pushf
xor
or
shl
xchg
int
mov
jno
add
sbb
cmp
mov
ja
add
sbb
fs
adc
test
loop
push
or
add
add
fisub
cmp
mov
and
or
mov
inc
mov
call
push
xor
shl
nop
pusha
and
repnz
xor
push
xchg
jg
aas
push
ja
jo
or
or
fcomp
inc
mov
dec
fdivr
cmp
jl
pop
pop
mov
out
into
mov
lahf
arpl
in
and
adc
icebp
and
lods
out
or
loope
and
push
rol
push
icebp
mov
les
addr16
test
pop
xor
hlt
sub
mov
pop
push
fdiv
cmps
xchg
lea
retf
aaa
mov
add
inc
int
dec
cmp
pop
ss
push
stos
pop
sti
iret
mov
in
add
inc
add
(bad)
jno
test
jle
dec
mov
adc
cmp
jae
imul
sbb
inc
cld
push
cmps
retf
cmp
jg
mov
shl
adc
mov
push
sahf
add
in
aam
xchg
retf
jbe
or
jmp
imul
sbb
mov
outs
stc
pop
test
pop
mov
rcl
fwait
pop
call
jle
mov
mov
pop
cmp
adc
ret
adc
lods
xor
adc
push
push
push
aas
pop
jne
enter
clc
adc
push
adc
in
(bad)
sbb
adc
or
add
imul
and
xchg
sub
inc
sbb
and
imul
and
cmp
inc
push
sub
dec
sub
int
and
mov
data16
mov
fwait
popf
cdq
aam
push
sbb
jg
add
lsl
pop
clc
jl
scas
cmp
cmp
and
je
xchg
je
mov
xor
dec
xchg
sbb
add
xor
jmp
outs
sub
jle
pop
imul
ror
mov
hlt
dec
mov
push
test
retf
pop
or
shr
add
sbb
repnz
add
and
mov
jnp
scas
inc
mov
je
shl
mov
and
push
and
sbb
push
inc
and
(bad)
jo
aas
adc
test
sar
sbb
add
xchg
mov
and
cwde
ja
icebp
call
inc
fidiv
adc
movs
arpl
mov
lea
dec
add
retf
add
fdivr
pop
or
rcl
stos
jl
sub
loope
inc
sbb
fnsave
mov
add
push
cmp
pop
push
jge
xor
test
mov
add
ja
mov
push
jb
loop
nop
mov
jecxz
sub
and
jae
test
sub
shl
inc
mov
shl
cmp
push
cmps
add
inc
jp
ja
cld
pop
xchg
pop
lock
jne
add
xchg
rcr
dec
int
fld
(bad)
rcl
ficom
mov
retf
add
outs
inc
xor
and
adc
sbb
xor
cmp
or
jl
fwait
loopne
sar
mov
not
cmp
pop
mov
sets
test
inc
or
pop
das
or
push
mov
loope
mov
xor
mov
lods
jne
sub
xor
add
lock
pusha
jne
adc
fisttp
inc
outs
fwait
mov
xchg
mov
(bad)
loope
and
adc
popf
sub
xor
inc
sbb
sbb
sbb
add
shr
or
or
cmp
jne
mov
xor
sub
jp
inc
test
rcl
jg
add
jl
xchg
fdivr
and
jmp
clc
push
rcl
jae
add
sub
test
retf
outs
stos
cld
mov
dec
hlt
adc
mov
push
mov
sub
or
and
and
jbe
test
mov
rcl
mov
add
ret
idiv
adc
or
call
adc
sub
mov
or
and
and
or
(bad)
adc
or
les
xchg
dec
sbb
adc
and
jae
push
iret
rol
pop
xchg
test
pushf
and
jno
lds
test
inc
scas
or
ret
nop
jns
mov
bound
ret
adc
gs
xlat
popa
adc
or
add
es
sub
xor
xchg
pop
sti
ins
or
sub
xchg
dec
cmp
jmp
cmps
imul
mov
test
into
push
(bad)
mov
add
int3
cmp
adc
(bad)
cmp
pop
push
(bad)
shl
test
mov
inc
add
or
add
dec
jo
out
and
push
out
dec
daa
jmp
push
and
data16
jns
mov
sub
pop
adc
daa
clc
push
push
or
dec
adc
add
add
loop
and
loop
jmp
das
xor
in
mov
cmp
mov
scas
or
cmc
add
push
ss
or
imul
mov
or
mov
fstp
pop
jmp
or
push
mov
pop
pop
aad
pxor
push
push
das
inc
dec
adc
dec
jg
movs
jg
loop
shr
je
movs
sti
mov
add
inc
adc
and
xchg
dec
xor
pusha
jo
sbb
dec
jne
retf
dec
add
test
adc
div
mov
shr
or
sub
mov
xchg
adc
xchg
je
mov
inc
inc
cli
pop
pop
mov
retf
out
xor
aaa
add
xor
cmp
shr
add
out
je
mov
nop
or
xchg
xchg
cwde
pushf
add
pop
cld
push
cmp
ins
leave
clc
shl
test
push
shl
pusha
add
pop
test
sahf
inc
pop
add
and
mov
mov
xchg
fcomp
or
mov
add
into
cmp
push
jne
and
jle
pop
clc
push
xor
xchg
adc
mov
pop
ror
jmp
ja
jo
adc
xchg
nop
add
jle
push
rcr
ficom
lea
mov
rcr
jmp
pop
xchg
inc
push
movs
jb
jmp
pushf
pushf
and
cwde
cmp
aaa
fadd
mov
xchg
and
adc
in
loope
or
loopne
mul
add
mov
sbb
inc
pusha
cs
sbb
inc
fs
xchg
loope
sub
lock
nop
add
std
adc
add
cmps
fimul
mov
inc
adc
sbb
inc
jmp
test
xchg
ja
xchg
mov
pop
jmp
xor
das
mov
xor
push
mov
xor
dec
add
ins
(bad)
sub
and
iret
fs
mov
sbb
or
ss
das
inc
fwait
mov
das
lock
jb
and
imul
xchg
inc
cmp
rol
jmp
xor
xlat
dec
sbb
pop
pop
outs
addr16
or
bound
inc
fisttp
inc
dec
or
push
jecxz
nop
sar
jl
dec
enter
sub
mov
rol
fnop
or
sub
push
pushf
(bad)
jb
aam
lahf
stc
leave
es
jp
cmp
gs
out
loopne
jo
push
cs
ret
lods
das
inc
and
push
adc
fs
dec
jno
daa
and
inc
and
or
popa
push
pop
or
xor
fild
mov
adc
jae
lods
call
inc
mov
cmps
cdq
sbb
pusha
push
sbb
lea
push
ret
push
js
lock
inc
xchg
inc
jb
mov
nop
dec
mov
jbe
pop
mov
add
xor
xchg
fist
scas
popf
mov
pusha
ror
xor
pop
sbb
test
xchg
xchg
imul
pop
aas
cmp
rcl
fild
push
add
jnp
inc
cmp
fld
loopne
daa
jg
cwde
dec
in
(bad)
xor
add
popa
add
xor
dec
daa
lea
test
imul
add
and
sbb
leave
inc
and
imul
outs
enter
pop
cmps
mov
and
pop
pop
mov
fdivr
xchg
or
je
add
push
pop
jg
mov
mov
cs
dec
or
mov
je
or
mov
add
out
push
cmp
ja
add
cmp
adc
dec
data16
mov
pop
pusha
sub
shl
add
xchg
ss
jb
neg
mov
cs
(bad)
cs
xor
mov
cs
fsub
add
sbb
jmp
inc
xor
mov
mov
cmp
adc
push
or
mov
ror
xchg
cmp
sbb
and
mov
pop
push
jbe
pop
ficom
xchg
pop
adc
retf
cs
or
mov
or
or
out
mov
dec
jg
scas
or
mov
push
mov
cmp
pop
jne
or
inc
inc
mov
mov
add
out
sbb
es
xchg
mov
adc
xor
jae
mov
ret
fs
rcl
xor
xchg
sub
mov
push
mov
add
or
lods
push
xchg
mov
fbld
xchg
sbb
inc
and
mov
in
and
imul
jne
push
ins
push
retf
nop
rol
and
inc
add
mov
or
add
sar
cmp
mov
jo
call
in
xor
cmp
out
add
mov
cmps
push
sub
mov
aad
inc
push
mov
add
arpl
lds
bound
inc
push
adc
or
shr
jp
in
(bad)
icebp
sub
add
rcr
iret
gs
test
dec
daa
shl
imul
sbb
mov
neg
mov
jl
push
in
push
add
int3
movs
rcr
push
or
add
mov
or
(bad)
pop
into
push
dec
in
mov
inc
imul
add
dec
jne
cli
popf
mov
lods
fmul
sbb
pop
push
adc
xchg
xchg
cmp
push
xchg
sub
sahf
jg
movs
lahf
test
adc
sub
jmp
mov
jmp
cmp
aam
dec
leave
(bad)
nop
loop
xchg
mov
loope
cmc
adc
shl
enter
aam
clc
mov
inc
adc
xor
xchg
mov
(bad)
push
jmp
add
dec
fst
mov
sbb
push
or
dec
add
add
dec
icebp
ret
fdivr
xor
gs
repz
and
cmp
xor
and
fadd
or
mov
mov
mov
inc
adc
popa
pop
jg
hlt
push
and
xor
daa
and
xchg
add
imul
add
push
imul
dec
push
sub
pusha
mov
or
(bad)
fisubr
push
xor
add
loopne
js
hlt
cs
push
mov
out
js
mov
loope
add
ins
sti
aaa
mov
in
xchg
imul
sar
xchg
dec
push
mov
xor
loopne
lock
mov
pop
nop
ret
daa
xor
or
jne
bound
xor
xor
es
daa
push
loop
add
es
inc
pop
and
pusha
out
inc
xor
mov
(bad)
sbb
add
dec
add
packssdw
or
mov
mov
shl
repnz
push
mov
rcl
sub
adc
call
and
pop
movsx
and
jmp
fsub
mov
int
jbe
add
pop
dec
fmul
ins
cld
rcr
shrd
pop
pushf
lods
add
adc
cmp
mov
scas
sbb
clc
cwde
xor
and
sbb
data16
icebp
pop
pop
dec
inc
and
xor
out
xchg
ficom
es
sub
sub
inc
mov
mov
jo
inc
call
push
or
add
test
add
sbb
xor
jo
mov
in
and
pop
inc
loopne
jl
pop
sbb
js
jg
jb
adc
mov
jmp
adc
push
shl
fimul
jl
mov
or
jb
push
sbb
out
dec
xchg
movs
cmp
xor
sbb
or
shr
add
xlat
(bad)
cld
dec
dec
inc
dec
pop
or
ror
or
rol
add
daa
retf
xchg
scas
inc
popa
adc
test
(bad)
push
xchg
mov
cld
clc
pop
test
jbe
xor
xor
cmp
std
add
cmp
mov
mov
jp
loopne
xor
jmp
sbb
jle
in
push
or
cmp
sbb
mov
and
push
inc
ret
bound
sahf
fwait
adc
fs
(bad)
inc
iret
cs
xchg
inc
or
or
sub
push
ret
aaa
push
lods
push
add
xchg
cld
sub
rcr
sub
ins
xor
push
push
add
movs
add
aad
loopne
shl
rcl
enter
rol
push
jle
mov
or
dec
inc
jecxz
cmp
jge
dec
cmps
inc
add
out
add
or
cmc
add
jl
pop
nop
and
and
mov
and
add
aam
pop
aaa
sbb
push
xor
adc
add
xor
sub
add
or
mov
pusha
mov
pop
xlat
add
popf
jmp
xor
movs
add
pop
sahf
clc
gs
or
pop
data16
push
scas
add
lods
and
out
inc
popa
je
inc
je
dec
leave
psubusb
and
xor
sbb
popa
inc
pop
pop
popf
sbb
add
and
push
push
push
and
mov
je
clc
bound
or
rcl
mov
popa
mov
cwde
cmp
or
inc
(bad)
aad
sub
xchg
repz
retf
(bad)
shl
mov
adc
dec
xor
dec
add
cmp
xor
inc
pop
es
test
adc
dec
xor
rcl
mov
mov
dec
pushf
or
push
mov
pop
push
and
dec
add
xchg
cmp
add
jp
cmp
inc
push
mov
ss
xor
adc
(bad)
adc
into
cmp
nop
jl
push
imul
mov
inc
xchg
xchg
mov
sbb
jns
push
push
sub
enter
add
mov
in
dec
(bad)
or
ins
(bad)
fsub
or
push
dec
or
jb
inc
push
and
mov
and
ucomiss
jmp
add
in
mov
add
adc
or
mov
pop
sub
pop
js
dec
jo
inc
loop
mov
add
fs
add
lea
(bad)
adc
ror
repnz
stos
repz
test
or
add
les
pop
shl
sti
lock
mov
xor
and
adc
or
fdiv
sbb
and
add
jno
jge
sub
or
enter
jo
mov
in
or
clc
addr16
xor
add
jmp
(bad)
jmp
inc
ror
imul
adc
(bad)
jns
call
inc
push
repnz
mov
pop
or
ins
jmp
mov
and
xor
fnstsw
pop
add
inc
rol
inc
and
mov
test
cmp
push
add
loop
lock
in
outs
xor
add
mov
inc
mov
push
dec
pop
jbe
sbb
psrld
out
enter
jb
dec
push
or
mov
cmp
mov
sbb
jmp
or
and
xchg
lea
aad
jo
movs
xor
imul
xor
sbb
and
sbb
inc
sub
adc
mov
mov
and
test
fwait
js
adc
xchg
mov
fdiv
mov
mov
lock
(bad)
pusha
loopne
mov
mov
test
add
cmp
jmp
outs
mov
sub
(bad)
rol
sub
dec
push
add
(bad)
test
or
sar
imul
ds
lea
stos
cmp
in
cmp
sub
and
dec
mov
clc
pop
push
push
inc
and
in
mov
jmp
add
adc
fs
stc
and
pop
repnz
jae
pop
test
mov
and
or
sbb
cmps
je
add
mov
sub
dec
sbb
dec
dec
xchg
sub
adc
and
imul
add
add
jp
sub
xor
dec
mov
add
mov
and
add
inc
sub
mov
adc
sub
or
or
sbb
out
pusha
retf
rcr
in
add
add
jns
pop
xchg
xor
add
outs
pop
mov
jb
icebp
aam
xchg
ja
pop
pop
xor
lock
adc
ficom
inc
push
mov
and
inc
inc
cld
add
test
and
je
xor
pop
sbb
add
mov
mov
and
hlt
mov
cmc
or
and
xchg
xor
ss
je
lods
js
push
sahf
add
aad
sub
fimul
es
je
xor
scas
loope
fs
inc
sahf
jmp
inc
add
into
inc
int
pop
cmp
rcl
dec
xor
push
fdiv
push
push
repz
pop
add
dec
lahf
and
pop
popf
lock
ja
mov
mov
lahf
shl
push
pop
mov
sub
or
inc
push
push
test
retf
lods
or
rol
es
mov
push
jmp
rcl
sbb
sbb
sub
and
inc
shl
dec
mov
nop
and
xor
clc
stos
xor
xor
je
sub
xchg
(bad)
aaa
lods
cmovns
imul
jg
or
shl
or
cmp
imul
pop
mov
sub
mov
lods
sub
or
inc
inc
adc
fs
mov
cmp
das
push
jnp
loope
mov
dec
pop
data16
ins
gs
push
or
arpl
fisub
add
and
(bad)
fdiv
inc
fstp
lea
cmps
or
sqrtps
and
push
mov
jle
jbe
or
rcl
xor
int3
jo
jo
pusha
movs
mov
pop
and
push
in
xchg
scas
mov
mov
mov
push
stos
cmp
(bad)
dec
test
xchg
push
je
pusha
loopne
mov
inc
push
sar
into
pop
lea
fdivr
mov
adc
adc
movs
jmp
dec
inc
ret
inc
and
push
ins
jmp
pxor
jo
or
mov
cs
hlt
sub
jp
inc
inc
inc
call
jg
inc
aaa
daa
add
push
aas
xor
jne
iret
sub
add
push
jle
push
cmp
out
ror
and
dec
inc
or
xchg
inc
sti
sub
inc
sbb
rcr
dec
jne
(bad)
(bad)
movs
adc
xor
mov
cmp
or
jno
xor
dec
inc
cli
pop
xor
jmp
cmp
aaa
aaa
mov
or
push
outs
je
js
dec
pop
jne
out
jmp
jmp
mov
push
je
(bad)
stc
sub
ja
sbb
mov
ins
ja
and
xor
or
lea
add
retf
mov
in
jns
das
cmp
xchg
push
pop
adc
and
jb
xchg
push
jns
jo
dec
jecxz
lock
push
add
push
jle
add
inc
and
mov
jne
ret
iret
jno
jnp
fsubrp
xchg
jmp
push
or
sbb
adc
in
ror
test
rol
jp
and
retf
push
or
add
mov
pop
jo
add
jne
jecxz
in
sbb
je
or
ffree
mov
xor
popa
or
pop
shr
adc
ins
outs
jmp
or
push
pop
retf
sub
or
mov
push
es
dec
or
aam
push
cmp
add
or
mov
clc
nop
(bad)
xor
push
scas
push
pop
data16
test
cmp
out
inc
loop
xor
js
or
mov
push
pop
das
and
pusha
cmp
xchg
pushf
sub
adc
sub
in
fwait
dec
shl
jecxz
or
mov
inc
imul
add
sbb
cmp
inc
and
sbb
in
sub
out
push
scas
or
inc
test
and
aas
jmp
out
pop
inc
xor
xor
pusha
cmp
js
mov
sbb
pop
push
push
mov
adc
mov
sbb
imul
inc
xor
inc
addr16
sbb
jne
adc
adc
inc
gs
imul
pop
dec
js
test
sub
or
xor
push
ss
fld
jne
push
mov
je
xor
push
adc
xor
and
and
dec
jo
push
cmp
outs
les
das
or
dec
rcr
fdivr
or
(bad)
or
loope
add
mov
or
xor
fld
and
(bad)
dec
imul
adc
pop
jae
add
clc
push
mov
adc
outs
dec
push
out
fistp
xchg
xchg
ins
aam
aaa
fs
xstore-rng
adc
(bad)
icebp
jle
loopne
lock
add
loopne
mov
cdq
cmc
in
icebp
bound
lds
cdq
ror
cmps
xchg
ret
mov
outs
or
adc
or
sbb
adc
jne
cmps
outs
sbb
lods
sbb
or
aam
xor
loope
inc
shl
aas
xlat
push
push
mov
add
sub
lock
add
rol
add
xchg
mov
test
xchg
pop
ja
shl
sbb
cmp
cmc
ret
and
scas
ss
imul
loope
pop
jecxz
shl
fwait
in
dec
push
sub
cmp
(bad)
repnz
dec
fsubr
daa
and
push
test
push
inc
jle
inc
add
cmps
or
lock
sub
add
and
xchg
test
mov
ror
jecxz
adc
hlt
pop
pop
jne
push
pop
push
(bad)
ficom
jg
inc
or
fadd
xchg
(bad)
adc
mov
scas
jo
xor
jge
imul
pop
(bad)
cmps
mov
xor
jae
sub
mov
lea
pop
shl
shr
sub
jp
fidivr
or
and
js
sbb
inc
or
xchg
imul
inc
imul
xor
and
jecxz
ret
mov
sbb
test
(bad)
sti
adc
or
jno
add
jmp
aad
ret
jne
fbstp
xlat
inc
mov
cmps
in
int3
add
or
loopne
add
fsubr
pop
push
data16
or
(bad)
push
pop
je
cdq
cmps
adc
aam
std
xchg
mov
push
sti
push
xor
pusha
dec
cmp
jnp
ss
jbe
js
add
fadd
dec
mov
lods
mov
fld
jge
cmp
or
call
rol
gs
mov
sbb
inc
test
mov
mov
test
mov
add
sub
loope
xchg
bswap
xor
or
push
or
mov
popa
add
add
dec
inc
add
push
lea
mov
repnz
inc
and
inc
jno
ins
sbb
fs
pop
dec
or
sbb
aas
and
clc
imul
dec
or
sbb
inc
cld
or
add
cmp
pop
ret
push
shld
lock
jmp
cmp
test
pop
or
fsub
out
xchg
dec
in
inc
mov
mov
add
push
mov
or
sbb
jnp
cdq
add
adc
adc
adc
or
cmc
dec
pop
cwde
sub
loope
pusha
std
dec
push
adc
add
adc
xor
add
inc
mov
push
cmp
sahf
pop
lea
mov
ds
pop
ret
adc
outs
pop
popa
shl
inc
das
popa
cmp
adc
xor
retf
dec
nop
inc
xor
popf
fwait
add
je
cwde
popa
test
aam
mov
je
cmp
inc
pop
or
push
mov
mov
mov
enter
ins
daa
rol
loopne
or
push
xchg
or
or
cmp
cmp
sub
mov
xor
inc
sbb
in
and
out
jo
fld
push
dec
xchg
nop
cmp
stos
add
mov
mov
stc
xchg
adc
int3
pop
out
or
or
imul
loop
paddq
test
adc
inc
jbe
loopne
sbb
mov
movs
push
push
sub
push
js
jg
enter
pop
pop
mov
adc
rcr
fsub
mov
stos
ret
cmps
mov
pop
xor
lds
mov
xor
daa
leave
sbb
xchg
paddusw
inc
adc
mov
push
jge
sbb
cmps
and
ss
ficom
sub
inc
scas
cmp
jecxz
hlt
int
mov
push
jmp
outs
xchg
retf
fwait
jne
adc
jmp
sub
hlt
inc
aas
popa
jge
cdq
lea
xchg
jo
sbb
test
pop
arpl
mov
xor
test
sbb
mov
jmp
mov
sbb
bound
popf
inc
test
lahf
jp
leave
(bad)
xchg
ror
inc
call
jge
gs
(bad)
add
jle
push
or
adc
cdq
nop
add
and
adc
add
test
ja
jmp
lea
inc
jne
sub
xor
cdq
mov
pusha
inc
gs
push
and
dec
xchg
sbb
jle
sub
retf
or
rcl
not
push
fwait
xor
xor
push
sbb
pop
and
cmp
shl
loopne
popa
sbb
sub
cmc
and
pop
push
xchg
mov
and
leave
ror
lock
and
mov
test
aas
(bad)
xchg
xchg
or
int
push
or
lods
adc
mov
push
fld
or
mov
mov
es
clc
nop
inc
cmp
inc
jne
sar
jl
push
add
mov
jno
jno
call
inc
jns
or
ss
ja
jae
ret
loopne
xchg
pop
jae
add
xchg
out
sbb
sbb
xchg
push
aas
enter
mov
jp
xor
add
jmp
loopne
push
or
dec
mov
test
pop
adc
mov
mov
and
or
xor
mov
and
pop
inc
ror
add
mov
add
mov
jae
adc
push
js
inc
mov
dec
movlpd
(bad)
xchg
lock
inc
mov
cmp
stos
fdivr
sbb
iret
fisttp
pop
enter
sub
fstp
pop
retf
push
pop
sub
mov
fst
push
jbe
es
mov
sbb
loopne
loop
cmp
adc
loop
and
fdivp
mov
pop
mov
js
js
iret
imul
dec
call
inc
out
imul
fcom
rcr
adc
retf
pop
sbb
sar
repnz
push
mov
ror
out
sahf
push
and
mov
outs
pop
out
mov
iret
sbb
jecxz
cmc
mov
mov
sub
pop
repnz
push
int
sub
cmp
into
unpckhpd
pusha
sbb
add
push
add
jg
sub
je
nop
in
idiv
or
push
retf
mov
inc
in
out
fst
fmul
test
pop
sub
mov
scas
or
inc
adc
cmp
and
mov
jmp
mov
add
xlat
jge
fldcw
fxam
nop
test
aaa
mov
(bad)
sub
add
mov
jg
loope
stc
rol
mov
and
xlat
fadd
test
mul
int
data16
das
and
icebp
in
std
rol
mov
mov
or
in
push
sub
add
les
and
fucomip
adc
jmp
mov
ret
or
inc
fld
or
dec
pop
int3
jbe
cmp
ret
stgi
sti
in
mov
mov
add
jmp
pop
faddp
test
and
sub
ss
mov
add
ror
dec
pop
mov
dec
inc
cld
fsub
les
shl
f2xm1
cwde
je
std
fstp
ret
push
rcl
enter
mov
xor
push
fldcw
push
fiadd
ret
test
aam
sub
xor
inc
add
cs
inc
out
add
add
add
shl
lods
nop
push
inc
je
mov
shld
shl
push
into
fisttp
mov
fld
or
xchg
movs
add
xchg
and
movs
in
fadd
pop
ret
out
add
mov
and
js
dec
cmp
aam
sahf
or
dec
jne
jp
push
loop
mov
test
jmp
daa
je
xlat
xor
retf
mov
jne
sbb
sbb
mov
add
(bad)
(bad)
jle
xchg
sbb
sahf
mov
fmul
and
mov
js
mov
jmp
pop
(bad)
loopne
adc
and
xor
into
jp
or
cmp
adc
sbb
repz
and
inc
or
cmp
(bad)
outs
jge
jns
pop
pop
ins
or
push
cmp
mov
or
add
sub
pop
pusha
jb
mov
jns
adc
mov
xor
rcr
pop
xchg
lea
ja
pop
mov
hlt
imul
rol
clc
add
pushf
and
out
stc
jnp
add
and
cmp
fldcw
inc
pop
sub
aas
pop
sar
ins
fidiv
sub
pop
xchg
outs
add
(bad)
jo
ror
in
repnz
stos
adc
rol
jo
(bad)
sub
not
aam
imul
pusha
lds
push
xlat
pop
scas
or
out
imul
dec
jl
ja
inc
sbb
ret
sub
sub
fld
int3
push
sbb
je
pop
ror
adc
xchg
aad
fcomip
add
inc
out
fdiv
xor
repz
and
loop
adc
fld
je
mov
fmul
push
ret
(bad)
fmulp
or
adc
imul
idiv
inc
adc
mov
stc
or
cmp
fadd
mov
pop
sbb
jb
sar
cmc
outs
push
sub
xchg
jb
ja
jmp
(bad)
jb
fidiv
inc
ja
mov
xchg
xchg
mov
xlat
adc
or
loope
lods
fucom
out
push
call
scas
adc
jae
mov
cmp
xor
rcr
cmp
mov
ja
int
sbb
test
jne
fst
ret
or
add
shr
push
inc
out
dec
inc
mov
hlt
nop
inc
jae
or
add
das
loopne
inc
out
dec
std
cmc
or
jne
inc
icebp
jmp
and
in
fldl2e
pushf
(bad)
lock
test
mov
inc
jne
call
out
dec
aam
mov
data16
pop
sub
aad
loope
scas
cmp
or
and
rol
dec
js
mov
inc
in
fwait
rol
lods
loopne
jne
push
ret
inc
popa
pop
mov
jne
pop
in
jmp
sbb
jle
in
mov
push
fldz
pop
push
xchg
ror
xchg
xor
(bad)
cmp
cmp
jmp
pop
ja
or
adc
add
rcl
add
lea
cmp
sbb
ret
mov
cmps
lea
adc
xchg
aam
mov
cmp
fsub
daa
jbe
lock
fcomp
cmp
and
daa
fidiv
fcomp
call
or
loopne
mov
mov
or
movs
jbe
pop
mov
mov
(bad)
frstor
arpl
(bad)
and
push
out
add
mov
ret
aas
add
sub
jmp
test
adc
ins
pop
or
push
out
out
push
jp
push
push
sub
jnp
dec
test
add
and
in
sbb
sbb
imul
mov
mov
add
xchg
call
scas
(bad)
outs
jne
ss
pop
popf
mov
mov
xchg
cmp
mov
(bad)
je
push
xor
mov
aam
je
xor
test
jge
popf
lock
out
fldcw
shl
pop
ss
and
cmp
mov
push
and
add
nop
dec
cmp
jae
jae
inc
mov
xor
fsubr
sub
add
mov
push
rcl
popf
(bad)
sbb
jbe
mov
cld
sub
push
test
xchg
cmps
lea
mov
mov
pop
mov
push
cmp
inc
push
push
push
pop
pop
pop
fld
push
test
sbb
inc
sbb
sub
or
adc
mov
mov
mov
hlt
or
sbb
fild
or
or
mov
inc
enter
call
in
jl
jl
and
jl
adc
adc
jl
nop
push
and
add
loopne
cmps
lea
mov
les
push
call
enter
push
jb
push
jnp
push
mov
loope
fxch
cmp
sbb
fisttp
or
xchg
ret
inc
and
lods
lahf
sbb
or
loop
ret
cwde
and
je
pop
fsub
adc
test
and
mov
and
(bad)
jns
adc
loope
scas
not
xor
loope
xor
and
add
and
shr
add
xchg
fild
add
and
and
mov
ret
xchg
cmp
ret
mov
test
adc
test
and
add
push
xlat
mov
mov
xor
sub
xor
mov
jo
sub
clc
pop
leave
add
push
ins
dec
je
sbb
lock
in
shr
inc
and
mov
and
push
adc
jg
jecxz
sbb
jno
mov
jmp
sbb
loopne
test
sub
loopne
push
adc
xor
sub
sub
aaa
stos
es
mov
int
loope
fld
and
pop
adc
push
movs
out
mov
loope
pop
sub
cmps
adc
loop
and
adc
cmp
push
fnstsw
pusha
pusha
(bad)
mov
cmps
(bad)
test
pop
fdivr
and
inc
test
and
adc
push
sahf
retf
add
add
test
push
push
jg
fisttp
cli
dec
and
sub
rcr
inc
push
idiv
shl
xor
and
pop
test
mov
pop
pop
(bad)
mov
inc
jb
sbb
in
dec
mov
inc
add
adc
mov
inc
push
fstp
jmp
fisttp
xchg
sti
push
pop
stos
sub
pop
add
jnp
rcl
adc
dec
ja
or
pop
sbb
nop
mov
jg
sti
test
fadd
gs
jmp
enter
jo
push
aaa
test
dec
iret
sbb
dec
or
sbb
mov
cmc
sub
paddusb
sub
sub
jmp
push
in
shr
push
push
or
jmp
fldcw
xchg
out
add
adc
loop
jl
xor
hlt
add
add
test
xchg
and
(bad)
push
mov
outs
enter
in
bound
inc
pop
push
cli
jge
stc
shr
or
rcr
sahf
div
inc
test
add
xchg
add
shl
dec
repnz
cmps
movs
enter
leave
call
test
std
dec
adc
cli
shr
sbb
mov
in
xchg
sbb
sar
mov
and
mov
push
pop
ret
ud2
sbb
cld
mov
mov
push
call
inc
sbb
or
out
mov
dec
mov
mov
push
add
outs
mov
push
sbb
mov
call
pop
shl
add
repnz
aad
mov
jbe
and
fs
scas
add
push
mov
sub
push
sub
test
sbb
je
test
pop
or
in
hlt
rol
rdpmc
hlt
or
inc
mov
or
cdq
mov
inc
add
jne
popf
cld
jge
dec
cli
aaa
leave
adc
sti
ror
cmp
clc
mov
add
xchg
jmp
jno
ret
bound
mov
fcmove
push
mov
or
dec
xchg
sbb
pusha
pop
or
fst
pusha
inc
add
gs
scas
adc
icebp
test
lahf
leave
push
mov
fwait
adc
retf
imul
es
jmp
inc
ins
lock
add
jae
pop
push
mov
add
mov
jp
fcmovbe
fcom
adc
and
xchg
mov
movs
aaa
arpl
sbb
jne
pushf
or
pop
enter
inc
adc
and
mov
in
or
add
int3
or
and
adc
mov
pop
xchg
sbb
lds
jb
fld
pop
cwde
add
and
fimul
sar
xchg
push
pusha
imul
(bad)
or
aam
inc
and
and
(bad)
push
mov
sbb
push
mov
and
pop
or
test
xor
xor
mov
out
jle
(bad)
jmp
mov
sbb
pop
movs
push
jecxz
out
nop
pop
stos
mov
push
mov
jne
or
xor
leave
pop
clc
add
jge
jmp
shl
sbb
(bad)
ret
pushf
js
mov
cmp
push
or
push
out
mov
sbb
and
pop
dec
cmc
in
aaa
test
scas
jge
inc
stc
pop
sub
sbb
sub
push
push
shr
xchg
inc
scas
test
xchg
icebp
push
adc
retf
mov
sti
sbb
loop
inc
fldenv
and
ror
sbb
fsubr
sub
ins
or
mov
mov
mov
mov
fcmovnbe
fwait
pop
fs
adc
dec
ficomp
inc
adc
and
lock
push
ret
xor
pop
jp
and
push
pop
cmc
push
dec
jl
jl
push
fisttp
lds
je
xchg
scas
ss
add
jo
nop
repnz
adc
inc
sub
inc
push
and
cdq
mov
inc
sbb
pop
or
or
dec
dec
and
jmp
push
xor
(bad)
pop
repz
pop
fsubp
dec
jo
xchg
jno
rol
cmp
xchg
mov
leave
fld
sar
ret
pop
inc
xor
loopne
jl
or
xchg
xchg
dec
mov
outs
adc
not
mov
mov
int
leave
pop
cmp
lahf
ret
pop
add
out
(bad)
aam
add
add
pop
inc
loop
lds
jne
mov
js
lea
shr
cmp
sahf
sbb
xor
repz
jno
out
add
xor
pop
xchg
pop
xchg
mov
fsubr
mov
push
daa
loopne
and
mov
fcmovu
jge
dec
inc
cmp
or
adc
lea
mov
inc
call
sbb
mov
mov
or
ins
js
add
cmps
cmp
aas
dec
out
and
in
ja
mov
scas
dec
xchg
(bad)
in
cmp
lods
add
imul
push
les
xor
sbb
push
inc
push
xchg
in
ret
or
gs
shl
mov
jo
or
add
inc
jge
xor
xchg
jbe
add
or
push
int3
pop
cli
or
(bad)
imul
mov
bound
pop
and
and
xor
adc
ret
pop
hlt
inc
aam
aaa
add
aas
ret
jmp
dec
rol
add
pop
pop
adc
out
sbb
scas
or
outs
enter
pop
jns
rol
lahf
arpl
or
ret
adc
daa
lahf
(bad)
push
movs
shr
mov
enter
add
pop
daa
aaa
inc
add
mov
or
cdq
push
fiadd
and
bound
mov
ret
push
push
push
leave
shl
pop
adc
not
inc
and
mov
sub
add
sti
jl
sub
push
cmp
nop
add
pop
jmp
add
mov
pop
cmp
add
inc
mov
adc
jmp
xor
mov
icebp
repnz
cmp
sbb
inc
push
or
push
add
xchg
or
test
fwait
cdq
sub
adc
xchg
push
das
imul
enter
xor
cmps
test
ins
dec
xor
imul
retf
add
repz
xor
cmp
cli
adc
push
jne
add
mov
les
out
fisttp
mov
dec
rcl
push
push
sub
xor
cld
dec
xor
mov
add
and
sbb
sar
sbb
xor
jne
and
add
int3
ret
pop
pop
push
cmp
and
pop
pop
mul
ret
fcom
inc
dec
cmps
jbe
push
add
mov
fucomp
mov
rcl
shl
fwait
jmp
fisttp
test
add
inc
sbb
icebp
xchg
xchg
add
xor
mov
sbb
mul
pushf
sbb
mov
adc
call
js
mov
and
or
add
lea
iret
or
push
ja
es
daa
test
push
mov
push
sbb
cmps
cmp
lea
push
mov
adc
pop
xor
fisub
mov
je
shr
mov
dec
adc
popa
mov
mov
sti
jbe
sbb
mov
fld
imul
or
fwait
sub
lods
sub
adc
mov
ins
dec
dec
xor
addr16
pop
out
xchg
fdivr
xchg
dec
push
stc
fidiv
add
(bad)
xchg
into
and
push
adc
sbb
rcl
fsubr
dec
fldenv
repnz
add
jmp
loope
call
sbb
mov
ret
sbb
data16
fldcw
call
lock
test
mov
inc
loop
adc
out
add
mov
adc
mov
aad
mov
mov
inc
test
xchg
cmp
jb
mov
test
push
add
(bad)
pop
loope
and
hlt
mov
pop
adc
push
hlt
push
add
adc
cmp
dec
pop
and
cmp
mov
scas
test
sbb
sbb
in
dec
push
and
clc
ins
aad
or
test
add
fwait
je
and
inc
inc
jne
cmp
aaa
sub
push
push
xor
add
inc
and
pop
adc
scas
loope
cmp
add
push
je
push
dec
inc
or
cmp
daa
dec
pop
mov
sbb
dec
or
rcl
shl
add
jne
inc
pusha
jne
fs
sub
ds
sti
sbb
mov
add
pusha
je
fs
test
stos
test
sbb
mov
daa
add
movs
jo
adc
sti
mov
imul
or
fidivr
xor
rol
dec
dec
dec
xlat
ror
cmp
xchg
push
and
fstp
mov
inc
aaa
push
and
push
loope
mov
xor
jmp
mov
mov
hlt
dec
hlt
mov
sub
call
adc
ror
(bad)
add
mov
xor
clc
mov
and
jne
and
adc
and
aad
sbb
clc
inc
out
push
lds
push
fmul
gs
shr
loop
rcl
cmp
(bad)
push
add
loop
shl
cmp
push
dec
dec
js
xchg
sub
push
mov
ss
shl
xor
add
sbb
fdivr
call
add
dec
adc
and
inc
mov
cmps
lods
imul
or
mov
jle
rol
push
add
xchg
dec
fldenv
or
cmps
aam
rcl
clc
pushf
sbb
mov
dec
add
into
cmp
icebp
xor
pop
cmp
cs
iret
in
bound
inc
push
jmp
mov
popa
movs
hlt
sbb
cld
adc
hlt
add
mov
push
adc
loop
retf
test
jbe
and
cmp
xchg
cmp
jmp
jne
adc
in
push
movs
movs
xor
adc
pop
daa
(bad)
inc
aaa
or
mov
dec
retf
xor
or
inc
lea
adc
or
mov
mov
xor
fnstcw
jl
adc
dec
mov
inc
jp
or
pop
test
lahf
push
(bad)
and
pop
les
adc
push
pop
and
and
add
mov
scas
adc
jp
lock
cli
sbb
or
ins
scas
ret
mov
jecxz
and
or
out
push
cmp
mov
rol
sbb
jo
push
pop
pop
inc
mov
jl
push
outs
pop
add
push
mov
sbb
pop
push
mov
sbb
push
mov
imul
jg
rol
pop
sti
push
jo
call
adc
jle
xchg
mov
cmp
je
push
or
dec
push
popf
inc
or
shr
sahf
movs
movs
mov
xchg
push
mov
or
mov
dec
je
sub
cmp
or
cmp
(bad)
pop
call
pop
lea
add
lods
xchg
and
pop
pop
sub
adc
retf
ss
popa
jo
inc
mov
dec
fcomp
push
push
pop
movs
ss
push
jge
shl
xchg
dec
in
aad
fcmovb
inc
or
test
lods
pop
xchg
push
popa
cmp
cmp
xchg
pop
(bad)
aaa
sub
sbb
jp
push
xchg
stos
pop
xor
lock
mov
jmp
int3
les
mov
xor
mov
xchg
invd
(bad)
jmp
cmp
and
xor
push
xchg
push
push
inc
ror
cmp
add
ret
std
push
aaa
cmp
jne
rol
dec
je
dec
pushf
xor
popa
xchg
push
sbb
xor
adc
add
cmp
jne
mov
or
mov
add
push
stos
test
frstor
or
stc
adc
adc
push
mov
dec
adc
sbb
popa
hlt
xor
lods
mov
push
or
aad
add
cmp
jbe
int
push
icebp
aas
bound
popa
aam
mov
jp
mov
xor
daa
push
or
mov
or
inc
dec
or
push
shl
lea
dec
jo
xchg
adc
es
pop
pushf
mov
xchg
mov
test
mov
xchg
jle
push
loopne
shl
outs
cs
std
lds
inc
mov
fidiv
dec
mov
std
pop
int
mov
cmp
dec
pop
rcl
jne
das
nop
jp
rol
or
mov
pop
pop
sbb
and
and
(bad)
lahf
sbb
jg
cmp
push
into
xor
inc
push
sbb
add
sbb
mov
push
in
pop
xchg
shl
shl
push
cwde
inc
(bad)
in
cwde
add
inc
push
lods
in
shl
lds
test
mov
adc
mov
inc
and
xchg
inc
add
movs
das
nop
adc
mov
retf
lods
add
hlt
push
mov
xor
jg
dec
repz
or
repz
or
adc
or
shl
push
push
adc
rol
imul
push
cs
and
imul
xor
ficom
sub
sub
xor
or
sbb
xor
inc
int
xor
cmp
inc
inc
or
xor
inc
dec
xchg
xor
ror
dec
dec
xor
xor
ror
dec
pop
dec
xor
inc
ror
dec
push
xchg
xor
jo
ror
xor
cmp
xchg
xor
jl
pop
inc
call
xchg
retf
nop
pop
aas
mov
scas
jbe
mov
nop
inc
sbb
cwde
dec
cs
jb
pushf
sub
ss
pop
jo
movs
xor
xchg
mov
mov
pop
mov
and
mov
mov
mov
add
sub
and
xor
jl
add
xor
int3
mov
nop
shl
mov
aaa
fsubr
mov
sub
sub
and
and
sub
in
in
das
jb
xchg
retf
aam
lock
out
dec
cs
hlt
inc
clc
popa
xchg
sbb
add
fisub
sub
dec
mov
or
or
xor
mov
and
scas
in
sbb
push
sub
xchg
sbb
shl
cs
mov
repnz
leave
cmp
popa
cmp
fist
mov
xor
retf
nop
cmp
inc
dec
cs
jb
inc
inc
in
xchg
out
dec
popa
inc
dec
sub
xchg
sub
mov
push
pop
pop
add
das
pop
and
cmc
mov
add
pusha
jge
dec
fwait
cmp
(bad)
fcmovnbe
add
xchg
xchg
mov
repz
or
xchg
xchg
xchg
adc
ss
outs
(bad)
sub
dec
dec
dec
dec
xor
cmp
and
inc
bswap
leave
leave
leave
dec
dec
push
push
sbb
leave
pop
pop
lds
add
jo
movs
and
daa
js
dec
rcr
test
mov
dec
cwde
pushf
mov
movs
test
xchg
dec
es
rol
dec
xor
fs
sar
adc
dec
es
in
in
dec
es
fs
hlt
xchg
add
pusha
and
or
xchg
imul
sbb
and
es
sub
es
fs
xor
cmp
add
dec
dec
xor
mov
mov
pop
cmp
and
pop
pusha
sbb
mov
(bad)
(bad)
mov
xor
and
vmovaps
jno
mov
pop
ret
fwait
jb
adc
add
jno
cmp
sub
push
faddp
sub
rol
ret
or
rcl
dec
inc
mov
sbb
shl
cwde
push
je
xor
mov
mov
and
out
pop
xor
xor
xor
jl
adc
inc
lods
icebp
in
push
xor
sub
xchg
ret
and
cwde
adc
arpl
fwait
mov
and
shr
fdiv
hlt
loope
mov
sub
cmps
sti
push
rep
inc
rol
call
cmp
cmps
in
xchg
mov
push
push
dec
dec
cld
sbb
xchg
sub
fcom
xor
sbb
ja
mov
sbb
push
push
lods
inc
push
mov
(bad)
or
or
or
imul
sbb
and
(bad)
xchg
jle
pop
mov
into
(bad)
jg
mov
mov
jbe
or
jg
sub
mov
inc
call
and
push
lock
add
add
sub
loope
xor
cmc
jmp
mov
shl
dec
jl
push
or
xchg
cmps
js
jl
add
mov
cmc
cmp
fnop
stc
sub
in
push
pop
xchg
sbb
test
fbld
clc
mov
inc
pop
cdq
jmp
in
adc
pop
adc
mov
pusha
sbb
cs
pop
and
retf
and
cmp
test
cs
pop
cs
mov
sbb
dec
dec
xchg
and
sbb
mov
test
and
inc
inc
loopne
sbb
hlt
call
jmp
stos
cmp
push
push
or
sbb
push
sbb
add
push
sbb
nop
mov
and
xor
sbb
cdq
jbe
cmp
sbb
xor
and
mov
push
daa
sub
mov
push
sub
movs
or
push
mov
mov
xchg
popa
outs
add
push
je
dec
xor
dec
push
xor
and
lods
inc
mov
sbb
int3
jmp
add
and
loope
loop
mov
fistp
add
mov
adc
sbb
test
dec
add
push
or
xchg
xlat
sub
push
int3
add
cmp
adc
and
pop
xchg
xchg
mov
mov
xor
or
ins
sbb
xchg
inc
adc
adc
xor
dec
loope
rcr
fucom
cmp
ficom
adc
or
hlt
mov
mov
xchg
call
jmp
jg
xor
movs
icebp
pusha
mov
call
call
fadd
call
imul
adc
jbe
neg
adc
and
adc
jecxz
loopne
pop
mov
(bad)
fmul
cmps
dec
add
and
rol
add
xor
pop
add
add
cmovns
cmp
cmp
inc
add
mov
out
dec
cmp
not
(bad)
xor
sahf
mov
add
push
mov
jle
and
jbe
xchg
cmp
fidivr
jge
xor
add
and
fcom
call
and
inc
shr
and
and
add
outs
sub
add
adc
(bad)
in
fnsave
or
push
push
push
jp
add
or
(bad)
in
leave
pop
shl
mov
add
shl
xor
imul
mov
sbb
ins
dec
mov
adc
sbb
in
add
and
adc
or
rcl
lock
jg
lea
lea
dec
cdq
or
dec
(bad)
mov
add
jle
adc
in
mov
mov
pop
xor
or
pop
push
cmp
pop
push
sbb
mov
mov
xchg
sbb
mov
push
and
and
ror
inc
jle
enter
rcr
int3
enter
adc
movs
jmp
jmp
mov
in
loopne
cld
dec
retf
fsubr
inc
jmp
push
lods
sar
pop
movs
in
test
int3
push
les
mov
mov
inc
pop
xor
daa
shl
inc
add
scas
sub
push
pop
ret
dec
jg
add
push
push
adc
sub
add
add
outs
outs
lea
inc
(bad)
push
and
data16
xor
xor
and
push
dec
mov
mov
inc
mov
ins
xchg
push
lea
sub
pop
mov
or
push
call
and
icebp
test
je
lods
jne
adc
xchg
dec
nop
fbld
push
dec
sbb
push
jge
or
ror
sub
push
add
aam
(bad)
cmps
imul
push
cdq
cmp
sbb
fiadd
movs
(bad)
cmp
(bad)
cmps
cmp
and
jmp
dec
adc
inc
lahf
inc
cmp
ja
xor
mov
into
sbb
lock
inc
add
test
cmp
dec
fcmovu
fistp
cmp
jl
stc
pop
jle
sub
push
sbb
ret
pop
repnz
test
mov
and
xlat
test
aaa
adc
movs
cld
test
sbb
fisttp
inc
add
add
nop
inc
and
movs
lods
inc
pop
adc
dec
jmp
xchg
adc
les
add
aam
repz
fbstp
or
inc
fs
ins
mov
clc
push
nop
xchg
push
add
push
and
add
pop
sbb
xchg
cmc
inc
pop
(bad)
stc
rol
clc
cmp
pop
es
rcr
add
xor
pusha
xor
test
sbb
(bad)
sbb
adc
xor
fcom
mov
xor
jg
adc
jnp
in
add
test
xlat
jle
jmp
mov
loope
test
in
push
sub
mov
and
enter
inc
imul
pop
add
push
jne
ss
aas
adc
or
mov
push
mov
sub
fs
mov
pushf
push
stos
inc
dec
sub
icebp
or
pop
jl
pop
jnp
and
nop
lea
fcom
fs
pop
mov
das
add
sbb
pusha
sub
aaa
das
out
test
cmp
cwde
pusha
add
push
lds
pop
aad
movs
lahf
mov
inc
clc
retf
cmps
or
inc
jbe
and
mov
cmp
inc
in
xchg
sbb
gs
sub
sub
push
add
xor
jp
sbb
adc
cmp
dec
call
imul
pop
dec
xchg
xchg
cmp
in
dec
rcl
ret
or
add
repnz
xchg
mov
jno
or
ins
lea
test
inc
inc
ret
int
scas
in
(bad)
xchg
adc
int
add
shr
and
push
aas
cmp
push
dec
fdivr
nop
or
inc
xchg
pop
es
push
pop
sbb
imul
xchg
loopne
mov
in
mov
cmp
adc
mov
shl
test
cmp
test
xchg
das
fs
mov
mov
push
mov
cmp
sub
pop
sbb
jg
loopne
ror
sbb
dec
sbb
lods
jne
sbb
pop
fimul
xchg
(bad)
test
dec
mov
(bad)
not
lods
dec
mov
mov
retf
stc
mov
mov
xor
mov
leave
ja
and
or
test
(bad)
cmp
dec
add
jo
sbb
mov
pop
ss
cmps
mov
cs
cmps
enter
je
jge
mov
pop
xor
out
or
and
fdiv
xchg
sbb
adc
mov
test
popf
inc
(bad)
push
mov
xchg
(bad)
push
mov
mov
lea
mov
pop
les
mov
neg
inc
jl
repnz
cmp
jne
mov
push
mov
std
jne
(bad)
es
jne
or
cmps
call
les
inc
xor
jb
dec
adc
cld
mov
jmp
std
std
jmp
(bad)
adc
iret
cld
cld
jmp
fist
adc
in
push
jg
adc
adc
inc
cmp
jb
ds
rol
jl
pop
or
pop
mov
add
ins
add
es
scas
inc
and
dec
imul
ins
cmp
or
mov
cmp
inc
aaa
mov
ret
frstor
retf
inc
mov
or
js
add
movs
add
mov
adc
xchg
xchg
sub
mov
inc
(bad)
xor
movs
ins
push
movs
popa
xchg
shl
mov
and
sbb
aad
ret
fs
xor
ss
sti
js
jg
push
imul
xchg
or
bound
scas
fucompp
xor
popf
add
bound
rcl
mov
mov
jl
jae
push
stos
inc
or
inc
add
inc
xlat
sbb
sub
adc
cdq
call
sub
out
pop
scas
and
mov
push
and
ficom
aam
ds
cmp
stos
sbb
mov
or
into
mov
push
xor
xor
mov
xor
repz
je
push
add
test
mov
or
xchg
shl
rol
mov
les
xchg
jmp
sub
js
call
xor
shl
adc
cmc
adc
daa
pusha
out
mov
sub
inc
movs
and
jmp
and
push
or
add
xchg
xor
jle
enter
jmp
aas
sub
add
add
push
jmp
sub
xchg
sar
and
cdq
mov
ret
rcl
cmps
icebp
pop
pop
(bad)
ret
dec
ss
or
fisttp
dec
lea
dec
mov
inc
or
adc
mov
(bad)
jbe
aam
inc
fsub
inc
lea
pop
cwde
pop
sub
inc
ror
pop
push
and
retf
inc
jne
or
shl
not
test
or
sbb
or
scas
nop
repz
(bad)
cdq
ins
pop
and
fwait
push
mov
mov
inc
push
xor
ficom
sub
push
jbe
jle
inc
ins
mov
mov
cmp
dec
fmul
jb
cmp
out
lahf
sti
and
dec
cmp
cmp
jb
inc
(bad)
fmul
jmp
mov
sub
sahf
adc
cs
xchg
push
ds
xor
lea
sub
ss
xchg
stos
imul
in
cmp
inc
or
or
xchg
or
or
(bad)
shl
sbb
pop
ror
loop
das
mov
popf
iret
cmp
cmp
out
and
add
xor
mov
lea
dec
mov
iret
add
mov
push
or
sub
int
and
aam
out
xor
(bad)
mov
add
dec
and
push
dec
dec
clc
pop
sub
sbb
lods
ret
cmp
mov
or
sbb
or
jns
mov
(bad)
inc
push
push
rcr
inc
lods
pop
mov
test
mov
imul
mov
out
sub
mov
loopne
rcr
popa
xor
cmp
shl
sahf
es
fadd
xchg
dec
jecxz
int3
pop
pop
mov
push
jb
mov
movs
mov
out
inc
mov
mov
jns
cmp
and
mov
hlt
push
ss
mov
aas
pop
jns
mov
lea
mov
xor
fld
daa
clc
movs
addr16
lock
mov
(bad)
mov
shl
add
mov
sbb
inc
retf
add
mov
add
add
jg
test
out
mov
jl
dec
iret
and
dec
out
and
xor
mov
aam
add
inc
lods
push
jge
aas
sbb
shl
and
test
add
push
mov
(bad)
add
pop
lock
inc
arpl
cwde
out
hlt
jge
pop
dec
push
and
mov
sbb
xchg
pop
repnz
push
xchg
cmp
adc
or
and
in
adc
jns
adc
adc
or
lahf
push
das
ds
add
sbb
or
adc
add
ds
movs
dec
push
mov
lea
dec
inc
retf
sbb
inc
push
aad
je
out
adc
sbb
or
hlt
or
or
or
pop
pusha
mov
clc
nop
test
leave
xchg
rol
lock
ret
shr
or
call
hlt
adc
mul
jmp
retf
add
add
add
sbb
or
sar
cs
adc
xchg
adc
xor
jo
add
in
outs
imul
inc
jbe
add
jl
in
cdq
fcom
das
sbb
cmp
lods
fimul
push
push
loopne
add
ds
sti
shl
mov
inc
fisttp
loopne
ja
fidivr
adc
push
lahf
mov
mov
retf
push
mov
mov
stos
cmp
cmp
cli
add
pop
lahf
sub
in
or
rol
inc
push
dec
cwde
sbb
jp
ds
add
xchg
or
leave
rol
nop
hlt
pusha
sub
adc
scas
retf
icebp
mov
mov
sbb
shl
out
adc
loope
pusha
lods
test
or
or
test
jne
repnz
sbb
shl
add
or
xchg
or
or
xchg
shl
push
or
fwait
sbb
loopne
or
mov
push
mov
sub
ins
add
cmp
les
jl
pop
sbb
or
jo
sub
frstor
rol
pop
and
fs
jp
cwde
ss
adc
sub
pop
fdivr
repnz
add
mov
dec
mov
mov
adc
fld
retf
fs
adc
pop
xchg
add
fldenv
sub
inc
add
sbb
les
lea
cmp
push
add
jge
pop
pop
or
and
add
add
call
pusha
push
jmp
pusha
jno
dec
adc
fdivr
and
mov
mov
push
cmps
cmp
pop
(bad)
push
cwde
les
mov
js
sub
ja
push
sub
imul
sub
pop
ficom
call
ins
xchg
xor
leave
and
xor
outs
inc
fld
adc
cmp
fist
in
xor
cmp
je
(bad)
mov
xor
inc
popa
bound
or
mov
dec
fwait
mov
fmul
add
mov
int3
jmp
push
add
cmp
push
push
add
or
and
add
dec
xchg
test
or
sub
cmp
xchg
xchg
mov
les
cmp
adc
shr
je
outs
scas
rcl
inc
dec
add
mov
pop
neg
adc
ror
push
and
ror
xchg
sbb
fprem
mov
ror
add
mov
in
mov
xor
mov
and
(bad)
fsub
inc
xor
dec
rcl
xchg
cli
enter
movs
std
mov
cmp
xor
add
data16
inc
rol
mov
arpl
inc
adc
loopne
sub
mov
enter
and
loop
and
call
int
add
inc
test
inc
add
inc
add
pop
leave
push
sub
cmp
jae
sbb
mov
and
je
sbb
and
mov
dec
jns
adc
inc
call
add
pop
pop
lods
xor
cmp
rcl
jmp
shr
pop
into
(bad)
push
idiv
and
maskmovq
idiv
xchg
pop
fdivr
lock
je
and
bound
lock
fidivr
push
or
or
add
imul
cmc
dec
sub
adc
leave
pop
lods
mov
jbe
lods
sub
push
pop
sub
pop
mov
ret
or
xchg
pop
mov
test
dec
xchg
and
inc
and
or
pop
sub
sub
aas
les
mov
sti
and
cwde
mov
(bad)
bound
jl
add
xchg
test
test
mov
repz
inc
xchg
add
mov
test
inc
add
or
pop
cmp
cdq
or
mov
loope
or
pop
or
adc
shl
add
jo
rcr
or
xor
mov
fwait
out
cmc
imul
sbb
add
loopne
leave
push
push
jmp
cmc
push
jmp
ja
jmp
pop
fadd
enter
ins
lods
add
mov
outs
push
js
dec
cmp
dec
mov
mov
mov
jns
xor
lahf
and
mov
es
push
jae
mov
pop
int3
add
ja
add
pop
sbb
sbb
test
adc
dec
dec
pop
imul
test
mov
push
mov
xor
push
ret
inc
inc
mov
lds
push
stos
dec
addr16
xor
loopne
mov
inc
jge
and
jne
aam
jbe
loope
ret
jo
adc
mov
add
adc
mov
and
rcl
cmp
(bad)
pop
jbe
inc
sahf
ret
xor
cmp
jne
mov
pop
(bad)
fld
daa
fcmovnb
adc
jne
stos
ror
sub
dec
ror
mov
or
ja
and
popa
mov
sub
dec
call
fdivr
pop
dec
mov
sub
cdq
pop
jnp
jmp
bsr
int3
stos
lea
int3
pop
add
aaa
push
sar
int3
imul
call
addr16
shl
mov
mov
xchg
push
adc
lahf
jne
mov
out
aaa
test
jle
mov
rcl
retf
cmp
jp
inc
cmp
sar
loop
sbb
pop
ja
fcom
out
pop
sub
or
sub
and
or
jmp
imul
sub
cmp
clc
loopne
push
and
(bad)
(bad)
inc
fld
push
push
push
dec
push
inc
sub
test
push
cs
inc
push
add
add
icebp
pop
mov
js
and
clc
bound
pop
leave
jne
addr16
dec
inc
mov
xor
mov
ret
punpcklbw
clc
icebp
(bad)
cmps
nop
fs
mov
sahf
test
idiv
lds
add
push
lods
pop
stos
adc
movs
or
pusha
dec
pusha
push
sahf
adc
stos
jnp
pop
or
add
out
movs
imul
and
fcomp
and
shl
stos
xrelease
add
test
or
and
add
and
inc
jle
add
lds
inc
mov
mov
in
scas
test
push
dec
mov
or
ins
jmp
push
jge
sbb
(bad)
outs
(bad)
retf
or
je
sbb
es
ret
xchg
loope
fstp
or
mov
or
pop
ins
cmp
xor
cmc
ins
sbb
shr
ds
xor
lock
or
add
cmp
pop
push
dec
xor
sbb
dec
imul
jne
shr
and
pop
add
pop
xchg
xor
mov
push
test
push
adc
or
(bad)
jbe
jb
mov
(bad)
mov
mov
xchg
fdivr
call
jp
psraw
ror
sub
xchg
lock
mov
cmp
retf
rcr
and
push
imul
inc
cmp
pop
retf
(bad)
in
aas
push
ja
outs
call
sbb
int3
pusha
sbb
(bad)
sub
lods
jge
jge
fcomp
dec
mov
je
lods
call
mov
dec
adc
inc
or
push
test
and
out
pop
ja
sbb
push
aas
cwde
jmp
lods
dec
adc
sahf
pop
adc
cmp
cmps
sub
pop
in
cld
and
xor
add
rol
and
sub
cmp
outs
and
cmp
xchg
mov
add
clc
pop
adc
rsqrtps
clc
inc
test
sahf
mov
and
(bad)
mov
and
out
mov
icebp
inc
inc
cmp
jb
or
jle
dec
add
jo
jmp
and
jb
adc
ja
sbb
pop
pop
push
cld
mov
das
cld
or
inc
sbb
add
retf
or
and
repnz
inc
mov
dec
retf
in
or
dec
pop
dec
cs
dec
dec
dec
test
sahf
jp
jne
data16
push
push
imul
lods
add
adc
arpl
add
test
add
out
or
js
mov
or
sbb
xor
cmp
jmp
cmp
xor
lock
or
ret
push
outs
push
jb
mov
cmp
dec
sub
lea
jl
mov
jno
out
pushf
push
mov
pop
or
mov
inc
add
mov
lahf
push
xor
iret
xlat
or
adc
xchg
inc
rol
(bad)
push
sub
or
or
mov
inc
aam
jge
inc
mov
or
pusha
mov
je
lods
mov
add
loopne
mov
jl
les
stc
call
pop
or
jle
leave
rcl
sbb
movnti
xchg
jne
sub
push
(bad)
jle
add
mov
cmp
je
mov
or
gs
push
retf
cmp
jb
cmp
jbe
mov
push
in
mov
pushf
sbb
ror
push
or
push
jp
pop
xor
ret
push
sbb
or
popa
jmp
mov
jecxz
dec
jle
sub
xor
push
mov
imul
test
fst
ret
test
je
fcom
mov
pavgb
pop
push
je
in
push
push
pop
test
mov
sub
sbb
fsubr
or
add
cmp
or
and
push
jl
inc
and
inc
lods
jecxz
rcr
cmp
or
dec
pop
sbb
jo
cmp
sub
js
adc
add
cs
sub
in
sub
sti
ins
inc
mov
jmp
xchg
(bad)
outs
inc
mov
cmp
sbb
cmp
fld
ret
adc
mov
neg
mov
rcr
out
cmp
test
jno
dec
lock
pop
and
cs
push
not
sub
push
in
imul
pop
test
sub
lahf
leave
mov
add
mov
(bad)
push
popa
popf
inc
mov
mov
pop
adc
ret
ins
sbb
aam
mov
push
push
inc
dec
call
jmp
inc
cmp
cmp
add
imul
mov
(bad)
mov
and
sbb
arpl
dec
test
aam
cwde
sbb
test
test
in
mov
je
mov
jg
xor
pushf
ret
sti
push
lock
sub
sub
push
fs
je
push
push
outs
add
dec
lea
sub
enter
mov
xor
mov
xor
sbb
pop
nop
loope
in
and
mov
fneni(8087
push
jmp
dec
pop
add
fisttp
movs
add
fst
sbb
ja
scas
gs
stc
mov
mov
sbb
test
pop
leave
inc
ins
mov
aam
test
pushf
fcmovb
mov
push
xor
or
and
and
dec
cmp
mov
inc
jle
pop
cwde
add
xor
pusha
sbb
hlt
int
jne
add
adc
cmps
add
mov
das
aas
pop
pop
pop
popa
enter
sub
inc
stc
fwait
mov
or
inc
adc
add
clc
(bad)
fisub
mov
inc
jmp
aaa
and
test
add
scas
add
or
sub
imul
add
shr
mov
cmc
push
xor
xor
push
fst
mov
inc
jmp
adc
add
daa
lock
xchg
enter
pop
jmp
scas
out
ret
cmps
pop
je
or
push
adc
mov
pusha
leave
and
dec
nop
adc
scas
mov
shl
dec
and
adc
or
fdivr
aas
and
mov
sub
mov
pop
inc
sbb
mov
ret
(bad)
xor
sub
push
and
add
xor
pop
sub
pushf
imul
mov
pop
shr
test
outs
mov
rcr
jecxz
jmp
sub
stos
add
adc
jle
push
mov
mov
sub
and
sbb
loopne
mov
(bad)
mov
sbb
fcomp
(bad)
push
ret
imul
pop
add
fild
mov
imul
cli
or
mov
inc
xchg
call
movsx
repz
lods
adc
pop
add
hlt
loop
cwde
fild
or
aas
adc
test
sub
mov
fdivr
ins
shl
sar
loope
and
add
xchg
dec
cwde
pop
pusha
pop
sbb
mov
cmp
les
dec
adc
js
mov
mov
mov
xor
mov
add
(bad)
and
scas
cmp
loop
and
scas
inc
(bad)
xor
and
into
jae
xchg
(bad)
ja
mov
xchg
mov
rol
daa
lahf
inc
cmc
inc
test
jecxz
jmp
xchg
mov
jmp
cs
lock
in
xor
sub
push
adc
push
lea
pop
add
adc
nop
push
test
or
adc
enter
mov
fadd
movs
fwait
out
pop
movs
add
nop
xchg
mov
and
or
mov
outs
call
ror
sbb
jle
cmp
push
xchg
ret
shl
shl
mov
jl
aam
and
or
xor
adc
and
in
mov
out
jg
dec
(bad)
inc
rol
test
mov
movs
mov
ins
test
inc
sar
loope
shr
or
mov
dec
inc
rol
dec
jbe
mov
inc
mov
and
stc
repnz
in
add
cli
not
call
and
or
out
test
inc
in
inc
dec
dec
loopne
sub
mov
push
or
aam
xchg
lahf
cwde
pop
sub
ficom
inc
mov
popf
push
sbb
fidiv
fldenv
enter
jg
mov
inc
scas
or
mov
rcr
dec
rol
adc
xor
jge
xchg
pop
ret
rol
jo
jge
pushw
sbb
inc
shl
jge
or
jne
ins
ins
and
lods
mov
and
daa
mov
cmp
cmp
and
ret
push
shl
inc
shl
fmul
jbe
push
and
int
inc
sub
inc
dec
ror
cmp
call
adc
(bad)
mov
or
push
hlt
adc
cli
retf
fiadd
mov
loop
sti
ins
test
pop
mov
mov
xchg
sbb
or
adc
rol
adc
jg
or
(bad)
xor
enter
lock
inc
mov
stc
jge
add
mov
(bad)
nop
mov
movs
jmp
or
add
jne
jo
xchg
xchg
fnsetpm(287
loopne
and
rcl
dec
movs
push
retf
mov
pusha
fst
sbb
sub
jno
mov
sbb
mov
mov
into
adc
pop
outs
call
mov
adc
or
in
xchg
xchg
daa
mov
adc
push
pop
mov
rcr
popf
jne
adc
neg
mov
jle
inc
imul
push
frstor
adc
and
addr16
fmul
lea
push
fnsave
test
jae
or
les
pushf
or
out
movs
sti
out
push
(bad)
xor
mov
and
call
or
(bad)
pop
or
into
or
lea
or
push
inc
daa
daa
sbb
cmps
pop
js
les
fcom
inc
js
enter
ja
adc
sahf
mov
jae
add
or
push
test
clc
pop
add
add
inc
call
lock
inc
outs
enter
pop
or
add
std
rcl
pop
mov
stos
aas
sub
cmp
or
add
dec
cmp
xlat
aam
(bad)
inc
dec
add
add
fadd
test
pop
add
and
ret
or
cmp
add
or
push
push
pop
push
pushf
adc
inc
add
mov
add
push
mov
fcom
mov
dec
push
in
inc
push
lock
enter
or
test
movs
mov
cmp
call
retf
jnp
mov
push
je
mov
or
mov
hlt
(bad)
in
movs
adc
nop
push
or
retf
push
add
or
add
sub
rcr
inc
stos
sub
ret
xor
pop
fstp
push
pop
es
or
xchg
adc
or
add
stos
add
test
inc
pop
(bad)
mov
mov
iret
sbb
into
pusha
inc
rcl
sbb
cld
pop
and
pop
pop
xor
sub
ret
cvtpi2ps
out
ret
or
and
outs
xor
shl
push
pop
jne
dec
movs
test
add
add
movs
sub
sub
movs
adc
xchg
or
lock
mov
inc
sub
push
push
into
cmc
adc
xlat
push
pop
aam
sbb
xchg
hlt
jl
int
jne
and
mov
mov
jge
outs
ret
out
and
push
dec
or
cmp
sbb
xlat
bound
adc
inc
scas
(bad)
nop
clc
pop
nop
and
mov
test
jnp
es
or
inc
scas
add
or
out
cmp
sbb
xchg
test
adc
sbb
add
or
or
mov
xrstor
sbb
bound
xchg
ss
sub
add
imul
add
loopne
jmp
mov
sbb
jns
int3
addr16
jg
into
mov
into
mov
(bad)
popa
je
pop
sub
push
pop
xor
adc
sbb
sbb
mov
rcr
pop
ds
iret
enter
push
adc
aas
adc
push
pop
call
add
leave
lahf
pop
xchg
jns
faddp
out
adc
add
inc
popa
in
add
add
loop
movs
into
and
je
dec
mov
ret
jne
or
(bad)
sub
jmp
mul
and
mov
mov
pushf
jl
retf
push
mov
mov
fiadd
out
(bad)
pop
mov
lea
ja
push
push
mov
dec
xchg
sub
mov
dec
call
and
and
xor
pusha
xchg
(bad)
out
js
xchg
gs
sbb
mov
sbb
push
fnstenv
jp
aaa
inc
push
test
push
inc
dec
mov
and
ds
or
inc
pop
cmps
aas
jnp
cs
js
out
sbb
mov
lock
mov
xchg
push
sub
dec
xor
cmp
sub
sub
psubw
(bad)
sbb
push
xor
pusha
loopne
mov
push
test
dec
push
gs
push
in
inc
call
or
sar
popa
inc
pop
loopne
loopne
push
ret
or
sbb
jmp
sub
or
and
adc
push
ret
push
mov
outs
cmp
adc
pop
cwde
mov
sub
js
or
daa
push
inc
sbb
mov
mov
xchg
je
in
add
jns
arpl
cmps
jge
sbb
pushf
and
mov
jecxz
ror
jecxz
jecxz
inc
pavgw
movs
je
cmp
jne
mov
push
arpl
and
(bad)
sbb
test
fist
inc
or
and
das
jb
test
add
sbb
or
push
add
dec
(bad)
mov
cwde
mov
rcl
imul
push
out
lea
stc
sti
sub
or
sub
cwde
cmp
imul
mov
sub
dec
dec
sub
xchg
adc
fld
or
inc
mov
fsubr
(bad)
sbb
int
cmp
cmp
in
mov
sub
ins
jge
jmp
or
popf
jne
push
and
or
pop
push
fcomp
push
int
mov
mov
sub
pop
js
pop
mov
in
stc
int3
fs
fs
retf
jo
js
pop
retf
in
mov
mov
inc
inc
cmp
xchg
retf
in
xor
sub
and
mov
add
add
sbb
in
shl
pushw
pushf
mov
js
fiadd
xor
mov
outs
pop
sbb
push
sub
add
add
add
sbb
test
mov
add
xor
add
adc
fld
out
cmp
add
push
add
or
sub
jo
lods
jl
mov
xor
fldenv
jo
pop
pop
mov
xor
add
stos
inc
add
xor
mov
push
pop
and
or
add
add
xchg
pop
das
js
add
jbe
fadd
mov
ror
cwde
test
push
and
int3
and
and
cdq
and
mov
mov
push
inc
inc
ror
movs
cmp
push
add
sbb
les
je
mov
inc
adc
add
shl
and
dec
or
sahf
imul
cmps
jmp
and
je
loopne
les
stc
pusha
push
pop
es
addps
lea
jmp
dec
jo
ret
xor
call
jnp
jg
sbb
gs
xchg
pusha
pop
push
retf
icebp
cmp
fdivr
mov
mov
jns
scas
xchg
icebp
fxtract
retf
jnp
and
hlt
pusha
pop
ret
jb
in
cdq
pop
jl
and
dec
push
(bad)
push
xchg
push
and
or
or
add
mov
inc
nop
or
and
sbb
stos
mov
call
movs
pop
inc
add
or
jns
inc
inc
or
in
or
aaa
and
stos
pop
mov
dec
lods
rcl
or
adc
daa
mov
shr
pop
push
pusha
pop
push
movs
lahf
ss
xlat
cs
mov
test
push
dec
mov
pusha
sar
ror
push
test
repnz
sub
aad
add
pop
mov
cmp
hlt
xchg
cli
jbe
add
cmp
jp
cdq
mov
mov
out
push
sbb
sub
out
dec
add
pop
jmp
movs
sub
adc
or
sar
mov
cmps
inc
popf
ror
xor
icebp
jnp
dec
ret
outs
mov
sti
aam
and
leave
ret
mov
xor
cmp
mov
call
dec
fcmovnbe
pop
fcmovb
and
mov
pusha
jns
lahf
add
cmp
inc
or
aam
dec
adc
rcl
fimul
les
sub
(bad)
ja
inc
pop
jae
pop
lock
in
push
pop
mov
mov
dec
add
rcr
loopne
fwait
xor
int3
xor
push
add
inc
adc
xchg
cs
scas
les
push
or
and
mov
ja
call
push
test
sub
xchg
inc
dec
pop
inc
xor
or
push
mov
aaa
pop
pop
mov
dec
or
test
cmp
xlat
and
xchg
dec
push
jo
xchg
dec
mov
dec
or
jbe
sbb
ins
push
(bad)
stos
mov
xchg
mov
mov
mov
adc
rcr
dec
imul
add
ss
pop
pop
repz
ss
push
data16
xchg
pop
and
push
popa
cdq
mov
shr
jns
test
mov
movs
aad
cmps
scas
push
pop
mov
(bad)
sbb
push
mov
aas
add
sub
into
mov
popf
mov
or
fisttp
pop
add
inc
jl
sbb
scas
mov
pop
loopne
(bad)
xor
(bad)
mov
mov
pop
or
inc
or
mov
push
jp
leave
into
jge
add
push
push
add
aam
mov
cmp
add
inc
push
je
push
sbb
cmp
jmp
out
xchg
mov
or
loope
xchg
shl
sbb
fmul
dec
push
and
inc
cli
sub
test
or
push
das
gs
int3
add
enter
add
loope
mov
mov
sbb
add
nop
shr
ffree
lea
lods
add
push
(bad)
and
je
loop
aam
fs
jo
sar
movs
or
push
fcom
jg
movs
ins
loop
lods
dec
pop
sbb
or
adc
retf
inc
dec
or
jo
jae
mov
rcl
push
outs
cmp
inc
outs
push
outs
xchg
clc
or
mov
and
sbb
cdq
xchg
repz
rcr
movs
xchg
icebp
cdq
add
jmp
xchg
adc
sbb
xchg
shl
adc
inc
add
mov
cmp
sub
stos
clc
sar
test
push
nop
shl
clc
xor
cmp
movsx
retf
add
sbb
jg
sti
clc
or
pop
or
pop
fdiv
ins
or
push
or
mov
ss
push
xchg
stos
das
inc
pop
int3
hlt
pop
(bad)
xchg
xor
jne
mov
jmp
cld
nop
dec
inc
test
add
add
and
retf
fimul
dec
push
inc
in
pop
adc
push
sbb
xor
lock
and
lahf
fnstcw
int
fstp
or
and
xor
push
aas
cmps
aad
sbb
pop
frstor
ret
ret
and
sbb
jo
add
adc
inc
sub
loopne
cmp
push
and
out
mov
jg
mov
pop
mov
xchg
lock
push
aam
push
or
ins
test
shl
psadbw
rcr
in
add
pop
jb
sbb
dec
inc
out
or
nop
mov
sbb
or
add
xor
in
push
xchg
les
imul
ret
adc
enter
shl
sbb
ret
pop
enter
xchg
dec
or
jb
mov
xor
dec
push
(bad)
adc
xor
out
xor
adc
xchg
push
stos
jmp
shl
sub
and
mov
mov
adc
xor
add
int
dec
adc
das
push
pop
push
and
adc
or
push
loopne
call
adc
adc
add
adc
inc
or
xlat
aas
push
nop
daa
mov
xchg
sub
lds
or
adc
or
bound
cli
adc
ins
loopne
adc
sub
or
ret
jne
shl
push
call
es
fistp
mov
or
push
mov
enter
or
or
mov
mov
lea
adc
(bad)
aad
mov
add
in
aam
outs
inc
inc
push
mov
and
shl
add
mov
jge
loop
and
daa
nop
inc
mov
retf
add
mov
push
in
nop
fwait
dec
in
pop
pand
in
inc
lods
or
jb
icebp
leave
and
dec
sbb
sti
fdivr
pop
dec
dec
jb
fwait
add
push
jns
leave
dec
fcom
fadd
pop
add
adc
enter
xor
fwait
in
add
fmul
xchg
loopne
mov
in
out
fistp
enter
fmul
(bad)
test
loopne
adc
movs
enter
sbb
jmp
mov
in
call
movs
icebp
dec
movs
mul
push
ret
es
call
or
enter
call
sbb
test
nop
xchg
jo
inc
xor
cmp
mov
aad
enter
hlt
ins
inc
dec
shl
sub
jbe
mov
js
push
aam
popf
pushf
pushf
in
fsub
or
xchg
imul
sbb
jbe
sahf
push
inc
and
mov
sub
ret
inc
lock
or
pushf
sub
dec
push
(bad)
aam
inc
xchg
dec
mov
xor
xchg
ret
mov
push
shl
cmp
je
sbb
jl
lods
mov
shl
inc
mov
adc
pop
mov
mov
push
daa
cdq
inc
mov
or
in
push
call
cmp
inc
lock
inc
je
push
dec
sti
add
push
shl
push
pop
xor
mov
sbb
and
fist
loope
xchg
xchg
mov
mov
push
loopne
fisub
(bad)
in
and
popf
loop
mov
adc
retf
inc
sahf
jbe
xchg
movs
cmp
or
fs
aad
sub
and
and
movs
adc
xor
retf
imul
mov
jmp
test
dec
inc
je
cwde
test
inc
adc
xchg
adc
sbb
pop
pop
movs
int3
add
sbb
xor
mov
pop
inc
in
push
cmp
cmps
adc
or
mov
jge
jae
fidiv
mov
aad
mov
mov
cmp
inc
daa
and
mov
fadd
cwde
mov
pop
cmp
mov
test
and
js
mov
cmp
and
sbb
inc
movs
mov
retf
test
cwde
jge
aam
prefetcht2
add
mov
imul
sub
add
in
push
pushf
sbb
test
fsub
es
stos
and
stos
js
cmp
dec
movs
andps
ins
dec
push
push
rcr
nop
push
xor
xor
cdq
movs
stos
mov
inc
mov
or
stos
mov
jbe
fcom
push
movs
pusha
push
and
jnp
stos
clc
inc
xor
mov
dec
and
lods
test
inc
sbb
cmps
lods
in
jb
stos
add
lods
or
call
inc
xor
add
or
inc
xor
js
pushf
stos
pushf
(bad)
lods
enter
mov
cmps
sti
inc
jmp
mov
adc
and
or
mov
scas
or
pop
add
sar
ret
mov
mov
in
fstp
mov
mov
mov
loopne
mov
enter
test
enter
popf
adc
xchg
inc
inc
enter
mov
ret
sti
pop
jb
adc
xchg
stos
scas
rol
enter
mov
and
adc
mov
movs
add
mov
sub
mov
hlt
lahf
mov
(bad)
call
inc
add
mov
push
jle
xor
data16
add
mov
in
adc
adc
mov
sub
dec
ret
inc
pop
mov
imul
call
mov
mov
mov
add
mov
mov
xor
and
test
xor
pop
push
lea
daa
mov
(bad)
int
sbb
mov
imul
shl
stc
or
mov
pop
jmp
mov
or
jbe
leave
popa
repnz
adc
adc
mov
mov
mov
fwait
lea
ss
push
shl
sub
sbb
pusha
cwde
(bad)
mov
jo
fsub
je
stc
es
cwde
add
nop
add
nop
mov
rcl
dec
fcomp
add
cmp
enter
xor
sbb
xchg
push
pop
idiv
lea
rcl
stos
adc
jns
int3
jg
cmc
movs
fnsave
mov
lds
xchg
add
push
retf
mov
inc
lahf
and
inc
test
mov
ror
mov
fcomp
push
adc
nop
or
nop
and
leave
nop
or
xor
inc
or
nop
or
push
pop
xchg
push
repz
pop
pop
adc
in
mov
pusha
enter
pop
je
mov
cdq
in
in
in
cmp
fs
in
in
adc
adc
inc
lahf
in
aad
sbb
and
dec
push
das
lock
add
es
inc
imul
inc
cmp
inc
pop
mov
fwait
or
cdq
adc
loop
(bad)
nop
jbe
scas
sub
jne
sbb
sub
or
pop
push
pop
push
lods
push
test
ret
push
gs
popa
mov
retf
retf
aam
ret
push
enter
movs
loopne
ret
push
add
pop
loopne
imul
jo
mov
ss
sub
leave
mov
pushf
inc
xchg
add
pop
lock
pop
ret
and
movs
movs
sbb
jmp
scas
mov
jecxz
pusha
retf
aad
mov
bound
cld
(bad)
mov
mov
or
in
rcr
dec
adc
loopne
dec
out
adc
add
leave
test
and
daa
lock
cli
xor
shl
and
pushf
rcr
add
xlat
fcom
mov
xor
cld
mov
rcl
inc
adc
ret
pushf
or
ret
sbb
fsubr
fsub
pop
dec
es
inc
mov
les
pop
add
icebp
add
les
ja
fisub
sub
inc
or
es
mov
jl
(bad)
int3
nop
test
xor
daa
pop
cs
mov
loopne
add
pop
sub
push
or
movs
ins
leave
sbb
dec
or
mov
push
fmul
(bad)
push
mov
(bad)
pushf
jnp
dec
xchg
pusha
xchg
sub
dec
repnz
and
xchg
(bad)
movs
and
jns
or
fwait
in
nop
in
fs
(bad)
in
jbe
jno
enter
ror
popf
sar
test
test
test
xchg
pushf
pushf
call
inc
or
adc
dec
enter
enter
xchg
cmp
sub
inc
mov
enter
xor
sbb
hlt
xor
inc
enter
or
xchg
add
test
inc
mov
pop
and
imul
je
nop
or
jb
xchg
mov
enter
cmp
je
xchg
test
nop
xchg
inc
pop
leave
lock
pusha
nop
xchg
arpl
retf
push
es
jo
xchg
inc
es
js
nop
xchg
inc
es
xchg
inc
es
mov
retf
and
adc
pusha
cdq
add
js
cwde
lods
push
pop
push
ror
stc
enter
and
add
cmps
or
adc
mov
int3
es
or
sub
inc
rol
mov
lods
push
nop
test
iret
pop
in
xor
push
push
sbb
mov
push
leave
les
adc
push
lea
stos
and
sbb
or
or
bound
cmp
mov
mov
mov
(bad)
jmp
or
test
adc
repnz
(bad)
cwde
pusha
sub
push
loope
xor
or
enter
inc
cmps
mov
icebp
nop
pop
or
inc
mov
cmp
ret
xchg
pop
pop
mov
aam
push
mov
outs
xchg
and
mov
in
int3
jnp
mov
ret
pop
xchg
dec
loopne
mov
jecxz
push
mov
repnz
iret
mov
mov
sbb
add
nop
add
and
or
mov
push
sbb
jb
add
adc
stos
xchg
iret
cmp
ins
add
sbb
dec
dec
and
adc
sbb
inc
int
inc
xor
sbb
sar
inc
enter
shr
mov
stos
xlat
repnz
test
inc
cs
arpl
ror
fadd
test
leave
aam
sub
sbb
xchg
addr16
push
or
call
adc
xor
dec
push
loopne
xor
or
and
inc
repnz
cmp
popf
fbld
jb
sbb
fs
ror
imul
test
leave
and
retf
adc
dec
cld
and
push
(bad)
adc
popf
jmp
push
(bad)
leave
or
or
movs
inc
mov
call
enter
and
mov
fs
nop
test
inc
cmp
and
sub
js
icebp
rcl
inc
add
mov
outs
sub
adc
jb
inc
daa
movs
lods
jae
pop
jb
int3
lock
mov
cmp
aam
in
sahf
adc
cmp
nop
adc
add
nop
aam
mov
pop
mov
call
fldcw
aad
pop
push
add
adc
es
pop
push
adc
and
and
aad
rcl
std
adc
in
aad
stos
pusha
jb
jg
dec
mov
mov
and
(bad)
fcom
adc
mov
adc
and
repz
pop
pop
jmp
xor
sbb
test
sbb
in
push
adc
lock
mov
fxch
outs
sub
inc
mov
ins
mov
pushf
shl
rol
push
add
mov
pusha
(bad)
or
sbb
jb
sbb
cld
stos
sbb
xchg
mov
fldcw
arpl
sub
inc
pop
or
and
movs
popa
fcomp
and
push
adc
and
xor
es
loopne
push
ins
in
stc
sub
cmp
and
push
adc
add
das
ficom
in
mov
lock
and
fcmovb
and
test
pushf
inc
push
cld
std
(bad)
arpl
sub
xor
dec
(bad)
repnz
jge
cmp
and
mov
sbb
nop
mov
rcl
aam
clc
rcr
and
add
mov
and
adc
test
int3
dec
sbb
adc
enter
pushf
pushf
test
pushf
rol
xchg
in
(bad)
in
dec
outs
xlat
inc
pop
scas
mov
shl
es
adc
(bad)
enter
mov
hlt
and
sbb
xor
fisub
outs
mov
pop
dec
cdq
les
js
and
inc
sbb
arpl
mov
adc
jae
cmp
dec
inc
and
pop
xchg
add
hlt
(bad)
push
adc
pop
enter
fmulp
cmp
add
mov
push
not
cmp
push
pusha
test
in
iret
popa
and
dec
mov
call
inc
fsub
and
shl
ret
loopne
mov
daa
loopne
pop
fld
enter
pop
xchg
cmovle
daa
xchg
enter
sbb
in
mov
mov
sbb
(bad)
sub
dec
adc
ror
loope
fnstcw
nop
push
inc
push
in
loopne
mov
pop
pop
cmp
lock
mov
cmp
in
mov
adc
in
stc
int
lock
xor
sbb
das
adc
jo
adc
jl
pop
cs
adc
retf
pop
das
adc
retf
mov
scas
dec
sbb
dec
dec
sub
push
sbb
jnp
xor
ins
pop
push
sbb
add
add
ror
and
sbb
outs
pop
fs
mov
and
pop
sbb
push
rcr
loopne
mov
icebp
(bad)
xchg
daa
ficomp
(bad)
mov
adc
adc
xchg
mov
jns
inc
inc
dec
mov
sbb
adc
mov
sub
cmp
pop
xchg
dec
clc
(bad)
adc
popa
(bad)
fmul
call
scas
in
(bad)
jnp
in
mov
mov
mov
cwde
icebp
pop
xor
and
in
adc
fisub
mov
jmp
ja
loop
cwde
nop
xchg
lods
adc
add
adc
mov
imul
pop
das
sbb
dec
sbb
xor
add
mov
and
xor
ret
nop
stos
push
xor
out
test
mov
cmp
sub
sub
pusha
jb
dec
loopne
bound
in
pushf
mov
sar
or
imul
and
push
call
rcr
dec
and
mov
in
inc
cmovb
or
jns
call
cdq
xor
and
push
adc
shl
ret
ret
and
addr16
xchg
fiadd
pop
les
std
or
fnstenv
jecxz
leave
rcl
mov
add
(bad)
cmps
jmp
or
sub
pop
nop
mov
and
sub
dec
ror
and
dec
repnz
dec
xor
fs
inc
dec
(bad)
jmp
mov
adc
jmp
adc
sbb
mov
pop
enter
xor
add
hlt
cdq
movs
cmp
sahf
adc
or
xor
rcr
(bad)
ficom
loope
or
jmp
outs
pusha
shl
pop
xor
inc
cmp
push
lods
adc
mov
shl
test
ins
xchg
add
adc
mov
pushf
(bad)
jnp
sbb
and
pop
loope
in
pusha
call
popa
and
sbb
je
mov
xor
mov
adc
pop
mov
push
and
xor
pop
int
les
mov
pushf
fldln2
loopne
sbb
cmp
or
jne
pop
mov
gs
out
pop
pop
lock
pop
imul
push
call
pop
add
push
and
repz
pushf
inc
jae
test
mov
sub
outs
inc
pushf
sbb
or
pop
xchg
mov
(bad)
inc
int3
adc
cdq
push
xor
jbe
add
xor
jmp
sar
jnp
adc
mov
jge
loop
loopne
shl
xor
cs
mov
dec
mov
dec
xchg
mov
add
js
mov
xor
js
inc
cdq
jne
sub
sbb
xor
imul
adc
retf
xchg
ror
mov
pop
aad
out
int3
xchg
repnz
cs
(bad)
daa
int
repnz
enter
mov
cli
repz
test
es
dec
fs
mov
push
nop
out
mov
adc
mov
push
or
jge
xor
sub
add
outs
popf
push
cwde
mov
hlt
inc
aaa
xchg
enter
pop
ins
xor
adc
gs
es
adc
(bad)
cmp
mov
cmp
cmc
test
xchg
cdq
inc
aad
ret
out
dec
sub
add
inc
add
mov
and
and
out
sbb
loopne
gs
jb
pusha
add
adc
push
jmp
outs
cmc
pusha
and
xor
fmul
fmul
sub
neg
dec
enter
enter
mov
sub
sub
stc
mov
iret
mov
das
in
mov
jmp
call
push
add
sbb
adc
xor
push
jl
sbb
(bad)
movs
push
add
pusha
and
lods
mov
and
sub
push
pusha
mov
fisttp
fcom
test
aad
sbb
in
pop
mov
inc
popf
mov
stc
es
lea
gs
jo
inc
dec
adc
add
ins
push
sbb
mov
pop
jge
test
in
cli
test
xchg
pop
cmp
test
fs
mov
(bad)
adc
cli
jecxz
add
mov
sub
and
pop
sub
adc
imul
cmp
push
jbe
sbb
inc
cld
add
lock
push
xchg
sub
pop
pop
lods
ret
rol
repnz
xor
pop
inc
sti
add
into
outs
xchg
test
cwde
ins
push
loopne
ror
inc
jne
mov
fcom
movs
stos
xchg
scas
push
in
cmp
jne
sbb
xchg
movs
out
sbb
std
mov
cmp
cmp
scas
push
mov
dec
xor
cli
xchg
adc
and
nop
test
jmp
and
(bad)
push
mov
push
mov
test
cmp
mov
push
scas
(bad)
sub
mov
fnsave
push
pop
xchg
sub
jae
dec
pop
pop
ja
pop
call
mov
mov
push
sub
(bad)
pop
xor
js
xchg
dec
ins
cdq
lock
and
add
mov
xchg
dec
and
add
push
js
sub
inc
inc
test
aad
inc
cmp
call
mov
add
jmp
pop
push
daa
daa
enter
test
test
in
fs
jmp
cmp
paddusb
adc
add
jecxz
repnz
pushf
push
test
mov
cwde
(bad)
aam
sub
dec
xor
inc
test
xor
add
mov
hlt
(bad)
cld
inc
adc
mov
cmp
sub
sub
jmp
jns
(bad)
pop
stc
call
mov
jne
enter
adc
add
adc
xchg
lahf
inc
aas
movs
or
add
popa
mov
jmp
imul
push
scas
mov
xchg
jb
sub
es
sbb
mov
jb
sbb
call
sbb
cwde
loopne
(bad)
lods
mov
int3
shrd
ins
mov
test
pop
inc
imul
imul
and
sar
xor
sbb
cdq
call
leave
cmp
jne
(bad)
clc
jns
xchg
int
cmc
dec
cmc
mov
jecxz
cmp
cmc
pusha
cmc
inc
test
leave
add
add
ret
jo
aas
outs
in
mov
mov
les
push
jmp
inc
dec
test
fs
addr16
dec
ds
jnp
mov
shl
sub
jg
dec
and
dec
or
xchg
inc
pushf
dec
enter
adc
clc
ret
ins
add
add
xchg
ja
pop
jo
ficomp
ret
pop
je
js
push
es
jo
imul
xor
cmp
jb
daa
loopne
or
mov
pusha
lock
in
shr
adc
xor
dec
add
pop
shl
inc
pusha
scas
call
loopne
or
stos
adc
pop
mov
xlat
push
fsub
aam
sub
or
or
cmp
aam
or
mov
xchg
aad
fs
xchg
push
test
or
sbb
adc
fimul
mov
push
mul
fcomp
jmp
cld
test
add
add
js
sbb
arpl
sbb
add
and
mov
sub
cld
cmp
daa
cmp
mov
mov
in
xor
sbb
or
fadd
mov
in
loope
push
cmp
fsub
hlt
adc
mov
leave
nop
loope
hlt
jns
adc
xchg
dec
cld
or
add
enter
je
add
xor
push
cmp
fwait
test
push
cmp
xor
rcl
and
add
aaa
xchg
xchg
dec
mov
fucomip
xor
out
lea
inc
pop
mov
cli
ret
sub
mov
push
or
rcr
sub
stos
pop
sub
sub
sbb
and
add
cmp
sub
movs
(bad)
aad
push
out
pop
pop
jb
outs
mov
add
(bad)
cmp
lods
push
retf
push
inc
jno
xor
pop
mov
jno
jnp
shl
add
mov
jbe
xlat
enter
lods
push
shr
adc
scas
mov
sub
fisttp
push
xor
jmp
adc
inc
adc
add
jmp
sbb
adc
ror
lock
adc
sbb
mov
movs
loopne
add
sbb
add
and
adc
movs
lods
sub
xor
and
xchg
inc
dec
ret
and
rol
adc
jb
jns
mov
daa
pop
enter
xor
test
ret
adc
shl
dec
dec
ins
xor
mov
aam
and
jo
mov
or
xchg
dec
out
aam
cmp
xor
shl
outs
and
and
nop
sbb
pusha
xchg
fcomp
dec
cmps
cmc
movs
mov
add
mov
add
ret
inc
push
mov
mov
inc
mov
mov
rcl
in
and
lea
or
adc
or
jg
ins
xor
adc
mov
sti
pusha
cmp
and
xchg
mov
adc
stos
(bad)
fst
mov
xlat
es
aam
mov
sbb
push
inc
loopne
mov
dec
in
push
xor
ja
bound
call
sub
hlt
cmp
or
push
adc
loop
call
loop
mov
loop
adc
fs
les
stc
pop
dec
push
test
call
xchg
scas
xchg
fistp
cli
mov
cmp
pusha
and
jmp
rcl
sbb
pop
push
dec
inc
call
inc
popf
sub
add
(bad)
jge
inc
cmp
inc
and
mov
jecxz
sub
das
jmp
(bad)
icebp
and
jmp
and
pusha
sbb
fst
sub
cmp
retf
enter
loopne
push
inc
rcr
shl
fadd
pop
aaa
lock
xchg
xchg
adc
shl
sub
xor
sbb
sub
sbb
iret
pop
ins
leave
xchg
push
push
xor
adc
jo
sbb
push
push
lahf
mov
sbb
add
jl
pop
clc
xchg
pop
sbb
pusha
sbb
in
xor
mov
mov
mov
cdq
dec
adc
mov
push
jmp
fs
jo
push
add
ins
(bad)
mov
mov
xor
fnstsw
lea
icebp
xor
jmp
cmp
test
cmp
inc
mov
push
cmp
sbb
mov
and
add
and
hlt
popa
sbb
mov
popa
repnz
ret
push
(bad)
and
rcl
adc
int3
stos
pop
jp
sbb
push
sub
adc
or
mov
dec
cdq
fadd
hlt
and
loopne
mov
aas
adc
push
int3
jbe
adc
sti
rcr
stos
add
push
pop
jo
jns
or
retf
test
ins
xchg
fdivr
sbb
sbb
push
arpl
call
das
cmp
sti
sub
and
movs
shl
loopne
jecxz
xor
push
dec
jl
pop
xchg
cdq
dec
mov
mov
test
jnp
add
ror
xor
or
add
(bad)
push
inc
mov
and
xchg
dec
rol
and
sbb
mov
imul
(bad)
std
pop
ror
int3
pop
sub
add
push
adc
add
or
push
gs
mov
or
test
xlat
sub
lods
loope
or
xchg
loopne
adc
ss
push
movs
imul
mov
fwait
xchg
loopne
nop
test
mov
sbb
leave
dec
fcom
punpckhbw
int3
add
pushf
push
inc
adc
mov
mov
nop
movs
xor
xchg
cmp
or
mov
pop
mov
pop
std
pushf
std
push
xor
and
int3
push
or
mov
mov
push
enter
stos
movs
push
xor
dec
and
bound
pop
jb
jo
xor
jns
xlat
sbb
mov
pusha
mov
aam
mov
dec
shr
inc
fmul
movs
or
mov
scas
sbb
sbb
add
cmps
es
push
lock
jns
mov
mov
retf
daa
cmp
leave
(bad)
sub
fs
adc
or
loope
mov
call
leave
dec
jbe
sub
sub
sub
in
sbb
add
inc
leave
in
adc
adc
sub
call
call
pop
jb
call
pop
sbb
push
in
push
and
nop
fsub
aam
sub
ret
xchg
add
push
sub
inc
xchg
adc
push
cmp
nop
xchg
inc
nop
pushf
outs
sbb
and
or
pop
push
sub
lahf
fdivr
dec
sbb
(bad)
(bad)
(bad)
jb
inc
sub
mov
sbb
das
mov
inc
and
jmp
data16
fcmovnu
lahf
wrmsr
push
sub
jmp
aad
dec
mov
je
add
push
sub
sbb
xchg
xor
leave
push
test
repnz
cmp
mov
pusha
nop
inc
fiadd
xor
pop
ins
xor
lock
fimul
mov
daa
test
scas
pop
lock
mov
stos
enter
inc
call
lods
cmp
adc
add
and
or
pop
dec
fsub
int3
popa
imul
movs
lock
imul
movs
add
cmp
int3
iret
inc
fisttp
fs
int3
enter
dec
das
and
(bad)
ror
cmp
mov
push
push
nop
mov
xchg
push
add
jmp
mov
mov
add
ins
jno
jo
push
test
inc
push
xchg
xor
dec
repnz
sub
inc
inc
jecxz
test
fadd
push
dec
ds
sti
push
xchg
xchg
pushf
aam
inc
sub
push
jecxz
add
xor
jecxz
(bad)
sub
cmps
or
mov
fs
fs
adc
push
sbb
outs
rol
call
push
xor
inc
or
cmp
iret
lock
and
and
xor
imul
popa
mov
ret
bswap
cld
sub
lods
nop
pushf
xchg
jae
or
sub
das
int3
popa
xor
push
pusha
add
cmp
cmps
cli
pop
inc
sbb
cwde
adc
xor
mov
sub
fnstcw
in
jb
sub
test
adc
sbb
popa
or
sbb
sbb
and
adc
dec
sysenter
(bad)
repz
mov
movs
mov
push
lock
enter
jecxz
xor
mov
aad
pushf
xor
je
add
int3
sub
jo
sub
adc
add
rcl
inc
sahf
sub
add
or
mov
adc
add
or
cmp
ffree
ror
dec
and
adc
scas
jmp
(bad)
xchg
je
cmc
push
rol
retf
inc
jmp
jnp
cmc
test
cmp
inc
aam
(bad)
int3
fs
test
push
push
mov
inc
or
add
(bad)
movs
cmp
out
xchg
or
or
fmul
fmul
and
xor
rol
xor
sub
aam
pop
sbb
clc
test
(bad)
stos
rcl
add
push
mov
fadd
cmc
xor
sbb
add
repnz
in
sbb
push
add
scas
into
int3
add
loop
fld
jp
pop
push
clc
add
cmp
pop
popa
pop
cmp
xlat
cmp
sbb
push
dec
loope
xchg
(bad)
ins
pop
cmp
add
das
jecxz
push
fdivr
dec
in
pop
or
push
adc
sbb
inc
push
cmp
rep
push
xor
cmp
test
inc
je
sbb
sbb
js
mov
repz
add
es
ror
sub
mov
jecxz
adc
cmp
jno
mov
enter
movs
mov
push
sbb
es
ror
cmp
add
jne
or
mov
pusha
jae
jmp
mov
shl
lods
adc
xor
cmp
call
mov
clc
mov
jmp
xor
shl
scas
sub
lods
xchg
pop
test
mul
rol
jo
xchg
(bad)
outs
inc
add
xor
test
mov
and
lods
loope
push
mov
test
stos
ds
xor
pushf
jae
nop
fld
mov
inc
rcr
mov
lods
ds
sbb
imul
nop
xlat
mov
daa
push
add
test
pusha
adc
nop
xlat
aam
es
ret
call
sub
xchg
inc
aas
sbb
fdivr
pusha
push
movs
ins
dec
inc
bound
pop
xchg
cs
mov
jl
jns
mov
ret
mov
mov
fbld
lahf
pop
iret
inc
mov
xor
adc
sub
test
sar
inc
pop
movs
mov
mov
xor
add
inc
jl
cmp
cdq
inc
setp
cld
and
or
or
nop
pop
es
cmps
sbb
adc
pop
inc
inc
cdq
stos
and
sar
movs
adc
adc
scas
mov
aam
xchg
(bad)
dec
fst
push
mov
fbld
inc
jb
les
sub
pop
sbb
arpl
push
pusha
cmp
cmp
ror
mov
jo
xor
in
stos
ror
pop
mov
add
cmc
pop
xchg
sbb
inc
sbb
cwde
mov
push
loop
inc
inc
pop
in
shl
movs
sbb
mov
or
int
ds
fs
shl
dec
xor
cmps
movs
add
inc
sub
bound
xor
mov
xor
adc
pop
and
test
and
lods
inc
add
cmp
inc
stos
add
cmps
or
adc
mov
rol
les
(bad)
ror
rol
lock
mov
mov
push
inc
and
pop
movs
jb
aam
ja
pop
retf
mov
push
mov
fmul
cmp
push
and
lods
popf
fs
xor
pop
jg
pusha
imul
xor
mov
sub
push
xor
add
inc
dec
imul
shl
dec
or
add
jecxz
imul
xor
aaa
xchg
and
mov
fsubr
sub
mov
add
push
inc
mov
adc
xchg
jae
push
mov
call
push
adc
add
jne
sti
dec
or
add
inc
cmp
xor
pusha
xchg
xor
adc
(bad)
loopne
xchg
cmp
stc
mov
iret
inc
int3
sbb
push
(bad)
loopne
repnz
hlt
dec
and
adc
test
or
adc
mov
or
cmc
nop
pusha
mov
jb
add
gs
or
pop
mov
movs
sub
pop
inc
and
adc
dec
fadd
dec
add
jb
inc
js
jl
jl
push
sbb
push
and
dec
mov
fcomp
adc
pop
es
or
mov
mov
pop
or
mov
add
and
and
enter
cdq
sbb
pop
mov
dec
push
dec
xchg
or
jl
xor
ja
and
and
shl
or
adc
inc
dec
loopne
cmp
(bad)
and
push
xchg
jl
mov
ror
call
jnp
sbb
and
jne
or
pusha
imul
jb
inc
xchg
ja
cmp
and
fiadd
dec
loopne
add
adc
xchg
push
pushf
cwde
pop
pop
div
lea
aaa
push
pop
push
retf
fsub
add
xor
mov
dec
or
and
pop
adc
dec
inc
pusha
hlt
mov
adc
stos
pusha
ins
and
int3
sbb
push
cmp
ret
or
add
adc
movs
loop
dec
sub
mov
call
fs
add
sbb
imul
imul
push
or
shr
in
popfw
data16
movs
fwait
pop
or
adc
ror
and
sbb
loopne
sbb
aam
inc
shl
ins
and
push
enter
cmp
push
inc
cmp
cdq
cwde
push
add
repnz
jnp
test
push
sbb
sub
xor
inc
in
fmul
stos
test
jae
pop
mov
cwde
and
and
mov
test
jge
(bad)
xor
add
mov
nop
add
test
add
popa
fs
xchg
loopne
and
ds
fsubr
dec
mov
fcomp
or
pop
xor
sbb
add
(bad)
and
xor
inc
ret
add
adc
call
(bad)
loopne
fs
pop
lock
int3
aaa
add
sbb
add
add
nop
add
sar
(bad)
mul
in
add
nop
add
or
add
scas
nop
add
add
loope
add
push
add
loop
loope
leave
rcr
push
lods
in
push
adc
in
pop
and
stos
call
xor
push
add
bswap
pop
inc
push
popa
mov
xchg
adc
ja
rol
and
in
(bad)
addr16
adc
sbb
pop
in
or
cmp
cld
sbb
in
in
retf
pop
adc
arpl
adc
enter
sbb
adc
adc
cmps
in
pop
adc
dec
and
cld
pop
inc
push
mov
and
xor
dec
sbb
push
loopne
cmp
or
dec
pop
je
in
icebp
(bad)
ret
mov
push
mov
cmp
pushf
and
adc
pop
aam
xchg
mov
fldenv
adc
cmp
mov
xchg
std
pop
repnz
pop
mov
es
add
and
and
pop
cmp
pop
cmp
(bad)
pop
push
pop
fstp
shl
jo
sbb
enter
sub
pop
pop
mov
xchg
hlt
push
mov
in
sub
dec
and
or
mov
cmp
pop
mov
mov
cdq
fld1
in
mov
inc
enter
pop
loopne
(bad)
leave
inc
sub
xchg
inc
dec
mov
mul
adc
leave
int3
shr
scas
xor
or
or
push
call
add
mov
jo
ret
add
int3
pusha
clc
jmp
sbb
mov
mov
jmp
fiadd
push
pop
dec
fisubr
mov
adc
rcl
inc
inc
ins
cmps
or
or
arpl
in
pop
xor
ret
add
cmp
shr
gs
in
arpl
shr
sbb
mov
cmp
aam
lods
mov
mov
adc
mov
inc
fild
inc
and
mov
sub
nop
adc
mov
rcr
repz
push
lock
rol
ffree
xor
enter
add
test
mov
shr
das
pushf
pop
pusha
adc
mov
jl
xor
jecxz
xchg
cmp
fwait
pusha
adc
rol
xor
daa
push
sub
jecxz
and
pop
dec
adc
gs
inc
push
out
in
fnstcw
gs
pop
add
lock
movs
xor
fcmove
inc
shl
cmp
mov
cld
inc
dec
lods
adc
fadd
pop
inc
add
or
sbb
pusha
push
hlt
leave
inc
jbe
mov
xchg
add
dec
add
loope
or
std
fsub
dec
daa
nop
fsub
sub
sbb
in
push
push
add
aam
xchg
addr16
inc
lock
jl
add
addr16
sub
push
cmp
adc
rcl
add
jne
sub
sub
sub
jo
jns
imul
or
in
leave
retf
int
sbb
and
imul
retf
inc
pop
sbb
ins
cmp
je
scas
mov
inc
sub
jne
dec
stos
and
mov
daa
mov
lods
repz
js
mov
pusha
stos
push
(bad)
stos
push
popa
inc
and
sbb
les
nop
dec
and
imul
fsubr
cmp
add
sbb
add
xor
aam
push
fild
mov
(bad)
scas
xchg
js
cmps
add
aad
add
or
sbb
adc
sbb
mov
add
ins
dec
aad
inc
pop
mov
jne
ins
test
in
fucomi
les
sbb
push
mov
cmp
(bad)
call
lods
in
ins
fcom
add
push
ins
jo
pop
xor
sbb
xor
push
and
mov
int3
and
loopne
inc
jle
lock
outs
add
ret
popf
or
popf
(bad)
adc
test
mov
inc
pop
xor
sub
jmp
lahf
inc
pusha
loopne
outs
hlt
aas
adc
jns
inc
outs
and
mov
push
inc
ins
popa
inc
ins
mov
outs
shl
mov
lods
int
ret
aaa
outs
sub
and
dec
outs
leave
push
pop
cmp
mov
adc
inc
lea
or
or
and
test
call
test
and
mov
and
jecxz
ror
adc
mov
jmp
xor
push
jno
add
xor
pop
jno
xor
jns
int3
cmp
rcr
push
inc
js
sub
inc
and
rol
ins
jmp
cmp
cmp
jnp
push
call
adc
sbb
hlt
cmps
stos
cmc
adc
xor
fimul
cmc
(bad)
in
out
add
mov
adc
jne
xor
jbe
mov
push
shl
repz
ret
adc
test
and
in
or
fild
cmp
(bad)
cmps
or
sub
test
push
lds
adc
dec
pop
dec
scas
fcomp
xchg
mov
adc
jg
jmp
push
and
inc
xlat
pop
adc
push
pushf
fild
dec
ds
push
push
or
push
jne
stos
daa
jl
adc
stos
inc
lock
cmp
nop
call
pushf
mov
rcr
jb
jp
jbe
mov
stos
cmp
and
aaa
jns
sbb
lock
imul
shr
in
xor
adc
les
jg
or
sub
pop
pop
(bad)
push
pop
inc
inc
ret
rcl
cmc
shl
lods
and
xor
dec
fdivr
mov
or
outs
xor
das
sub
inc
rcl
push
test
jns
mov
lods
or
push
test
(bad)
xlat
sbb
popa
xor
aas
jmp
sbb
pusha
pop
test
rcl
dec
dec
stos
xor
adc
and
cli
sbb
sub
adc
pushf
jg
or
rcr
aad
jmp
adc
mov
mov
mov
and
adc
push
push
dec
scas
sbb
dec
loopne
mov
fisub
ins
pop
ins
ins
cmp
and
mov
inc
or
lahf
xchg
add
les
movs
rcl
(bad)
nop
push
push
sub
dec
sub
sub
mov
sbb
mov
sbb
mov
mov
(bad)
sbb
pushf
fistp
or
int3
xchg
nop
sub
and
enter
mov
imul
sbb
jmp
scas
pop
enter
or
js
adc
data16
shl
scas
xchg
mov
jb
mov
pop
dec
xor
adc
js
mov
mov
sub
dec
ds
movs
lea
inc
(bad)
stos
add
dec
xchg
in
fs
mov
cmps
jo
dec
mov
imul
pop
jae
or
add
mov
rol
sub
dec
xor
mov
cmp
xor
and
inc
dec
dec
test
mov
push
ret
add
test
or
data16
cmp
mov
or
imul
fdivr
xchg
aad
loop
outs
cmp
adc
inc
mov
clc
and
xor
aas
push
loopne
xchg
test
fs
aam
ins
movs
and
mov
mov
call
push
call
adc
adc
and
sbb
sub
leave
and
sub
sub
xor
cmp
nop
cmp
mov
je
adc
inc
adc
push
and
and
ins
xor
mov
jg
enter
mov
xchg
xchg
stos
dec
mov
sub
add
sar
dec
jne
pop
xchg
jl
mov
lods
inc
mov
fcomp
enter
aas
fdivr
xchg
add
call
add
sahf
clc
cmp
dec
cmp
sbb
in
push
in
je
(bad)
in
push
jl
jle
pushf
jge
add
enter
dec
jl
xchg
mov
sbb
ror
rcl
cld
fnstsw
jl
lock
sbb
xchg
int
sbb
pop
ret
sbb
fdiv
xor
inc
mov
push
in
push
dec
dec
push
ret
inc
push
lahf
mov
add
sbb
sbb
into
mov
sbb
pop
sbb
xchg
(bad)
mov
mov
cmp
rcr
enter
es
xchg
(bad)
jge
and
movs
scas
add
pop
fs
leave
xchg
in
mov
xchg
xchg
sub
sbb
cmp
push
or
and
and
aam
ret
out
or
enter
sub
or
out
call
push
cmp
push
sbb
in
mov
hlt
pop
les
das
(bad)
push
mov
or
(bad)
sub
pop
sbb
sbb
sbb
or
lidtd
sar
jae
cwde
stos
add
sub
aas
rol
loop
test
daa
adc
and
test
adc
mov
inc
xor
ins
pop
dec
sbb
aas
pop
cwde
dec
push
inc
pop
mov
test
jno
push
mov
call
mov
jg
call
cwde
sbb
dec
push
in
mov
leave
inc
mov
jecxz
ret
mov
stc
add
shl
sbb
movs
pop
adc
jg
or
nop
add
inc
inc
dec
sbb
dec
pop
adc
fwait
mov
scas
or
pop
cmp
adc
mov
mov
inc
and
loope
and
mov
xor
mov
pushf
pop
jg
mov
xor
xchg
stos
or
pushf
test
jb
mov
hlt
and
daa
xchg
(bad)
enter
sbb
les
pop
mov
cmp
cwde
pop
jmp
sbb
into
sbb
xor
xchg
pusha
sti
adc
dec
mov
adc
add
sahf
pop
nop
aas
add
fistp
sbb
sahf
mov
push
mov
in
push
sub
inc
test
lods
ret
and
jno
aad
lahf
and
cmp
pop
lahf
pusha
xchg
pop
ficomp
leave
adc
or
or
rol
dec
xor
fldlg2
cmp
xor
push
inc
mov
pop
stc
mov
pop
pop
xchg
xor
add
or
loope
sbb
sahf
xor
mov
shl
inc
jb
mov
mov
daa
mov
ret
shr
push
add
hlt
xchg
shl
xchg
dec
dec
jno
add
(bad)
int
lods
adc
fs
fmul
popa
not
cmp
jno
cmp
ins
pop
dec
pop
pop
lahf
mov
push
inc
or
and
call
inc
jno
hlt
nop
inc
lods
pushf
pop
mov
sbb
mov
add
cld
repnz
sbb
js
je
nop
mov
ins
jmp
pop
add
or
xchg
lods
jo
or
dec
shl
pop
jne
popa
add
dec
dec
mov
sub
push
xchg
mov
cmp
ins
adc
sub
cmp
push
sbb
sub
pop
test
cdq
pop
inc
fsubr
jge
sub
aam
pop
xor
mov
mov
xor
cmp
and
push
jbe
adc
dec
push
popa
xchg
dec
es
pusha
push
cmc
jo
xor
fmul
mov
xchg
mov
mov
ror
and
push
xchg
in
xor
xchg
fmul
push
xor
leave
and
je
inc
cmps
xor
sbb
cmps
or
xchg
outs
pop
jl
test
bound
xchg
xor
mov
ret
stos
ss
jmp
(bad)
xlat
mov
sbb
sbb
adc
or
movs
inc
test
or
adc
loopne
fdiv
push
pop
pop
and
aam
fcomp
test
inc
mov
add
aam
inc
pop
or
in
mov
enter
inc
push
push
cmp
inc
hlt
sub
add
inc
inc
(bad)
nop
push
mov
nop
hlt
stos
add
and
ins
adc
and
inc
enter
movs
imul
mov
xchg
sub
pop
and
mov
aam
pop
sub
mov
fiadd
cdq
lods
ins
lods
aad
mov
mov
adc
push
dec
fld
jb
movs
stos
rcl
add
aam
sbb
loopne
cmp
movs
sbb
dec
inc
or
int3
adc
fld
icebp
mov
movs
push
add
lods
call
pop
leave
fdivr
sbb
scas
adc
in
lahf
and
das
movlps
add
pop
mov
lods
rol
inc
(bad)
jb
adc
adc
scas
inc
push
shl
and
adc
dec
es
nop
movs
xchg
dec
es
push
cdq
fs
js
es
fs
jo
je
cmp
xchg
dec
xor
mov
lock
xor
and
test
pushf
leave
and
dec
mov
dec
xor
enter
cmc
pop
push
nop
add
popa
add
in
(bad)
(bad)
std
pop
rol
mov
lods
std
jno
push
imul
mov
add
xor
sub
stc
xchg
cmp
cwde
lahf
or
xor
sub
mov
jne
and
mov
psubsb
(bad)
fadd
xor
aam
fild
mov
sub
mov
or
inc
lods
and
ja
pop
and
mov
aam
add
aam
sbb
pop
xchg
fdiv
push
mov
mov
dec
mov
dec
and
sbb
enter
in
scas
in
fs
scas
sbb
enter
(bad)
mov
leave
test
adc
add
out
ret
outs
les
xchg
shr
mov
(bad)
mov
ret
test
sbb
pop
adc
mov
stos
dec
dec
jg
dec
in
or
(bad)
xor
cmps
adc
std
ins
and
in
xchg
fcom
mov
out
enter
pop
and
int3
inc
or
and
out
pop
xor
cmp
cmp
add
or
sub
jae
rcr
adc
push
and
mov
jp
add
mov
pop
add
nop
stos
xchg
aaa
xor
jle
add
adc
cld
add
lods
or
loope
add
sbb
sbb
inc
add
ins
and
mov
adc
fadd
sti
mov
sti
ror
inc
ins
mov
hlt
fadd
leave
push
jb
loopne
in
pop
and
dec
fwait
mov
dec
mov
ins
or
sub
pop
sbb
xor
xchg
inc
es
fs
nop
mov
test
dec
mov
dec
shr
cwde
icebp
jl
pop
or
inc
push
adc
xor
sbb
or
aam
fcom
sbb
pop
ins
enter
rol
mov
scas
pushf
mov
adc
xchg
xchg
std
sbb
inc
pop
mov
sbb
ret
add
dec
mov
cmc
adc
ins
in
mov
inc
ds
xchg
mov
add
shr
add
adc
daa
cmp
fs
sub
xchg
mov
inc
(bad)
dec
fcomp
mov
inc
js
jg
mov
xor
outs
fst
lahf
pusha
xor
leave
dec
mov
sub
cmp
xor
push
inc
aas
mov
sub
and
ret
jno
in
aad
xchg
cmp
mov
in
adc
mov
push
jns
and
les
adc
and
mov
pop
leave
xor
lock
call
or
adc
xchg
mov
or
sbb
xchg
mov
inc
sub
sbb
imul
and
or
fiadd
xchg
int3
inc
add
add
add
lea
xor
mul
ret
cmp
(bad)
(bad)
adc
mov
sub
jbe
inc
xchg
out
inc
ret
pop
mov
and
(bad)
and
nop
inc
mov
mov
pop
cmp
add
loope
push
lea
fcomp
xor
mov
sbb
cmp
adc
pop
pop
pop
fucomp
in
ins
test
or
psubusb
or
sbb
xchg
scas
mov
(bad)
add
xchg
pop
enter
mov
stos
jge
mov
popa
jo
test
cmp
push
push
or
xchg
dec
dec
push
call
add
and
out
xor
ror
ins
sub
dec
pop
ror
or
mov
test
in
bound
cmp
sub
add
push
shr
adc
push
mov
dec
ficomp
adc
sbb
mov
xor
pop
ins
int3
cmp
ret
in
jnp
leave
or
fsubr
jl
xchg
test
mov
add
das
call
in
adc
ret
dec
pop
or
or
inc
pop
mov
aas
ret
xchg
imul
mov
js
das
pop
mov
mov
rcl
inc
pushf
mov
mov
xor
xchg
xchg
xor
imul
sbb
mov
nop
inc
es
inc
xor
xchg
mov
mov
or
stc
and
mov
dec
sahf
(bad)
push
popa
shl
les
fwait
mov
pop
add
add
stos
or
or
mov
xor
push
dec
pop
test
stos
pop
in
add
ins
add
mov
aad
movs
aas
dec
mov
ror
dec
inc
dec
and
xchg
push
xchg
xchg
sbb
repnz
jo
js
or
add
mov
xchg
cwde
mov
gs
mov
jbe
enter
push
mov
mov
lock
inc
dec
(bad)
loopne
leave
pusha
adc
xchg
or
or
add
push
xchg
inc
adc
xchg
and
nop
xchg
jo
add
movs
pop
pop
push
js
ret
retf
lock
xchg
pop
das
lods
dec
inc
pop
pop
retf
cmp
fs
in
sbb
in
repnz
nop
hlt
or
mov
dec
pop
push
ret
retf
fisttp
int
push
imul
nop
ins
ss
jmp
or
in
nop
shl
cdq
movs
adc
add
leave
and
inc
es
fidivr
fs
dec
jl
pop
shl
in
arpl
xor
int3
enter
test
jbe
popf
mov
add
lods
aad
adc
outs
test
jne
in
jg
cmp
nop
xor
pop
pushf
xchg
in
movs
rcl
or
xchg
inc
add
aas
or
sbb
aad
adc
add
ins
xor
mov
mov
loopne
adc
adc
lods
and
iret
inc
jae
loopne
lods
sub
in
sub
aad
adc
cdq
ret
mov
sub
iret
or
mov
shl
sbb
fdivr
(bad)
fdivr
fcomp
ins
das
mov
fiadd
adc
bound
das
fadd
xor
enter
mov
sar
cmps
in
rcl
pop
cs
aas
mov
adc
lahf
enter
adc
test
inc
dec
outs
pop
rol
jecxz
loop
fild
int3
dec
push
mov
call
cwde
in
rcl
leave
adc
outs
dec
das
les
aas
outs
inc
mov
jmp
pop
nop
daa
nop
rol
adc
pop
pop
pop
or
or
adc
sbb
and
rol
in
and
fisubr
xor
sar
xchg
sbb
mov
stos
adc
nop
lahf
sbb
push
xor
mov
(bad)
pusha
lahf
in
mov
mov
rol
stc
mov
sbb
xchg
dec
shl
(bad)
call
sbb
das
ins
adc
sub
lahf
das
mov
fbstp
adc
mov
das
push
mov
and
or
add
iret
(bad)
add
or
test
jo
add
add
adc
mov
adc
push
scas
lahf
push
and
(bad)
das
(bad)
push
ret
add
adc
sbb
fmul
push
inc
xchg
push
pop
test
pop
ret
das
adc
pop
inc
xor
pop
add
xor
and
mov
in
push
add
push
mov
and
lock
imul
add
cmp
fidivr
int
mov
cmc
mov
pushf
sbb
es
adc
jmp
rcl
inc
fild
iret
loopne
jl
xlat
pop
mov
or
cmp
add
or
sbb
test
cmp
fisttp
or
dec
sub
outs
fild
cmp
sar
ror
imul
xor
ins
and
cmp
add
nop
xor
loopne
aas
push
mov
aas
mov
xchg
push
and
add
mov
xor
hlt
dec
xchg
sub
daa
aaa
pop
test
and
test
bsf
test
pop
iret
shr
push
add
mov
test
cwde
push
inc
stc
cmps
test
mov
mov
or
loop
stos
pop
scas
adc
xchg
inc
add
test
das
xchg
hlt
and
mov
push
aam
adc
pop
das
or
aad
or
cwde
dec
lods
pop
(bad)
fsub
nop
mov
pusha
mov
push
movs
ja
shl
ret
xchg
dec
scas
rcl
mov
xchg
sbb
in
les
xor
int3
adc
mov
nop
inc
in
jg
fisttp
pop
aas
(bad)
mov
add
mov
mov
lahf
or
movs
sbb
lds
push
or
xchg
pushf
iret
in
lea
add
add
out
nop
shl
jl
cwde
jo
add
or
cmp
cmp
inc
mov
jns
and
xor
jl
ins
pushf
and
sbb
xchg
cmp
scas
inc
push
dec
inc
adc
pop
enter
stos
and
mov
and
slwpcb
mov
call
mov
pop
xchg
or
or
and
inc
jns
xor
outs
adc
push
enter
add
add
adc
add
js
jo
adc
mov
je
sub
in
rcl
mov
dec
push
or
or
cmp
and
push
push
jmp
mov
cdq
jno
add
les
les
nop
aas
movs
or
lds
cmpxchg
jmp
pop
popa
rol
jmp
mov
inc
test
xor
pop
jl
lods
jbe
jmp
ins
loopne
xlat
aad
je
in
sub
xchg
mov
psubusw
adc
or
jge
jmp
test
outs
sub
xchg
imul
test
nop
imul
ss
pusha
ins
inc
push
cdq
fs
dec
sub
sbb
and
xor
inc
dec
jo
mov
push
pop
call
and
(bad)
xor
leave
and
dec
or
add
rol
adc
xor
rol
cmp
stos
fcomp
scas
cmp
and
loop
outs
pusha
jecxz
in
and
cmp
cmp
add
dec
and
add
push
and
enter
xchg
sbb
mov
ins
adc
in
xchg
(bad)
cdq
add
mov
loopne
inc
mov
aam
test
adc
fsubr
sub
add
push
mov
adc
cdq
fadd
sbb
adc
xor
scas
push
push
inc
leave
pop
ins
push
nop
add
xchg
pusha
sub
int3
inc
shr
mov
leave
add
ins
fdiv
(bad)
add
push
add
inc
lods
add
int
push
cwde
push
repnz
xchg
repnz
mov
adc
inc
pop
mov
inc
es
adc
dec
lods
inc
lock
or
loope
jb
repz
pop
lea
pop
jns
repnz
repnz
loope
dec
cmps
adc
dec
push
push
enter
repnz
and
nop
stos
pop
add
mov
sti
or
push
nop
add
inc
adc
dec
call
jbe
or
inc
pop
mov
mov
mov
inc
stc
shl
and
sbb
(bad)
(bad)
mov
sbb
inc
enter
sti
xchg
or
mov
lds
or
sub
and
mov
lods
leave
xchg
pop
enter
inc
ja
push
and
rcl
test
cs
push
jmp
pushf
pop
les
cld
shl
mov
test
mov
aam
scas
fcmovne
fild
sbb
adc
xchg
mov
push
je
cmps
dec
xor
pop
pusha
pop
fist
mov
dec
lods
scas
js
cdq
jbe
push
mov
fs
dec
sub
or
ins
xor
push
jo
pop
je
pushf
icebp
adc
add
fs
push
femms
fsubr
int
sub
pusha
push
pop
or
les
repnz
pop
enter
clc
nop
aam
jb
fisttp
inc
mov
mov
rcr
fistp
stc
sbb
nop
add
push
xchg
les
aam
rcr
mov
add
sbb
jne
(bad)
movs
push
add
shl
rcr
retf
mov
or
mov
or
movs
push
ins
or
or
mov
adc
xchg
cli
js
mov
mov
arpl
sbb
inc
cli
movs
pop
mov
or
ins
bound
stos
mov
pop
nop
jp
dec
nop
add
stc
adc
mov
adc
add
cwde
lahf
aad
push
out
lahf
add
mov
mov
xchg
adc
mov
xchg
dec
das
fdivr
adc
push
ins
leave
xchg
out
in
mov
and
and
add
adc
push
sbb
cmp
mov
pop
cs
ret
shl
ins
sub
pop
test
pop
adc
nop
dec
ret
push
repnz
cmp
or
cmp
es
push
or
enter
mov
data16
jmp
stc
jge
or
xor
aas
test
scas
push
(bad)
jmp
enter
sbb
fild
adc
xor
sub
pcmpgtb
fstp
iret
test
movs
pop
call
xchg
data16
ret
enter
mov
scas
or
jmp
mov
dec
sbb
lahf
sub
or
lods
popa
add
or
jl
dec
or
sub
aam
repnz
mov
inc
mov
push
jb
push
sub
push
mov
popa
and
add
pusha
nop
or
xor
pop
test
cmps
add
in
pusha
stos
or
sub
test
cli
pushf
add
pop
jo
or
or
push
cdq
push
push
and
pop
enter
fs
shl
scas
pop
mov
ins
xchg
in
cli
pop
fnstsw
add
sub
inc
cmp
mov
xchg
sahf
sub
ja
sub
and
jno
lahf
in
je
jne
xor
je
xor
cmp
inc
ins
mov
pusha
cdq
add
shl
push
fild
bound
sets
push
test
xchg
int3
ror
stc
(bad)
pusha
jl
pop
jecxz
in
fdiv
add
jecxz
mov
int3
aam
jecxz
push
cmp
add
mov
jbe
imul
cdq
fsubr
out
xchg
inc
dec
xor
clc
out
and
cdq
fs
cwde
jecxz
cdq
ss
nop
mov
cmp
xchg
dec
pushf
cdq
les
jo
mov
pushf
in
add
in
mov
and
add
rcl
xchg
dec
jb
shl
lods
loopne
repnz
add
fadd
sub
cld
out
pop
in
jmp
call
nop
popa
ret
ins
ret
inc
add
sbb
out
cmp
and
scas
pusha
shl
inc
xor
dec
ror
enter
pushf
adc
sbb
out
fisttp
dec
fwait
sub
or
shl
nop
adc
scas
add
seto
mov
dec
and
les
arpl
fdiv
loopne
in
pusha
adc
mov
ins
shl
shr
mov
shl
or
or
test
cmp
mov
jb
cwde
mov
sub
cmp
mov
cmps
scas
xchg
out
jl
xchg
dec
push
out
dec
call
pop
call
mov
push
adc
xchg
rcl
dec
mov
or
rcl
leave
test
leave
mov
adc
xchg
imul
fs
hlt
push
es
fs
ror
fs
dec
test
in
jns
imul
enter
clc
dec
push
xor
mov
js
adc
jnp
fwait
jo
sub
dec
xor
push
pop
ins
xor
(bad)
sbb
add
jmp
add
rcr
ss
cmp
cmp
cdq
push
xor
sub
add
add
jecxz
and
xor
push
dec
in
sbb
pop
enter
enter
or
sbb
add
add
add
sub
jb
sbb
ins
and
enter
add
cmp
dec
out
in
mov
sbb
out
scas
xor
sbb
imul
or
fsub
rol
adc
call
sub
jns
in
hlt
in
ficomp
loope
sub
movs
out
out
lds
push
fadd
in
fdiv
jb
add
out
fwait
movs
popf
dec
lods
fadd
nop
adc
mov
xor
pop
(bad)
enter
mov
xor
and
movs
xchg
pushf
dec
xor
add
cmps
sub
enter
push
pop
dec
cdq
ss
and
inc
sub
inc
es
push
adc
sbb
xchg
sbb
cld
mov
in
in
hlt
inc
add
in
mov
and
in
pusha
adc
sbb
sub
les
call
xchg
inc
dec
pop
sub
xchg
xchg
dec
xor
adc
fs
imul
jl
or
xor
pop
cmp
lods
inc
xor
imul
cmp
shl
cdq
inc
cmp
fidiv
mov
and
xchg
sbb
in
jecxz
cld
add
jmp
in
shl
adc
push
mov
sub
(bad)
mov
add
push
pushf
xor
cwde
mov
mov
or
cwde
add
stos
add
pop
std
and
adc
add
pop
and
fwait
dec
fs
adc
add
mov
movs
fsubr
add
xchg
add
push
inc
mov
mov
rcl
dec
xlat
movs
adc
aam
aam
mov
rcr
pop
jne
xor
movs
mov
mov
mov
fmul
cmp
dec
pop
mov
loopne
(bad)
and
outs
enter
sbb
jb
jb
mov
push
inc
loopne
mov
lods
in
mov
lds
pop
loopne
and
aad
xchg
fild
ret
rcr
aam
jne
pop
push
xchg
and
sub
mov
inc
nop
gs
imul
loopne
sub
add
xchg
cmp
shl
xchg
push
pop
adc
add
aam
push
loopne
loopne
outs
or
data16
inc
pop
add
bound
push
test
lods
lahf
mov
(bad)
leave
and
dec
outs
aad
fsub
jns
pusha
cwde
icebp
dec
add
dec
pop
push
xor
test
test
cmps
mov
pop
fadd
sar
xchg
and
push
rol
mov
dec
or
mov
adc
add
outs
pop
xchg
leave
dec
push
xchg
(bad)
loop
cmp
add
jb
call
popa
or
or
adc
push
and
das
mov
aas
das
jae
push
sub
inc
scas
or
cmp
dec
lahf
sub
dec
inc
pop
add
jmp
add
mov
push
cmp
inc
js
add
popf
lods
add
cmp
xor
jmp
pop
sbb
pop
les
cdq
enter
cdq
jg
push
test
sub
xchg
xlat
out
lods
aas
shl
mov
add
cmp
and
or
mov
or
xchg
adc
ss
dec
xor
je
dec
adc
and
fs
leave
and
dec
loopne
lods
and
adc
jl
je
cwde
push
or
sub
pop
shr
or
jo
push
adc
xor
adc
xor
lock
daa
or
lds
and
cmp
dec
and
rcr
push
lods
xchg
mov
xchg
dec
fmul
cmp
and
sbb
icebp
push
fs
xchg
scas
xor
xchg
imul
mov
push
cmp
push
lock
cs
ins
xchg
mov
daa
cdq
xchg
push
rol
out
out
in
and
mov
lods
mov
add
xor
pop
xor
imul
leave
push
dec
fcom
mov
and
out
outs
sub
xor
(bad)
cs
add
adc
in
call
or
cdq
imul
cdq
ss
mov
(bad)
push
js
cmps
dec
es
shl
cdq
mov
push
pop
sub
out
stos
fcomp
mov
push
pushf
and
fidivr
cmp
dec
mov
mov
dec
mov
adc
dec
es
add
(bad)
dec
xor
mov
scas
push
imul
lahf
inc
adc
xor
rcr
in
xchg
arpl
dec
out
dec
lock
xchg
dec
pop
jb
cdq
sbb
sub
jmp
dec
fwait
ss
enter
shl
sbb
and
or
rcl
lock
inc
rcl
add
cdq
lock
test
imul
xchg
inc
dec
dec
lds
fdiv
cdq
fs
mov
fisubr
cmps
adc
das
test
add
dec
sbb
mov
dec
es
push
push
call
cdq
and
es
pop
pop
mov
pop
rcr
sub
xchg
mov
test
fisub
cmps
adc
sub
test
jo
add
imul
pop
dec
dec
sub
jb
dec
cmps
push
nop
and
sbb
cwde
xor
call
dec
es
add
enter
test
cmp
dec
sahf
jo
mov
sub
dec
fcmovu
mov
push
or
adc
lods
imul
rcl
shl
xchg
dec
cmps
movs
jns
pop
mov
mov
jg
dec
adc
dec
inc
cmps
and
imul
mov
stos
call
imul
dec
cmps
movs
jnp
dec
sub
cdq
fs
sbb
aaa
xor
xchg
or
lds
mov
ins
add
inc
adc
test
xchg
push
call
imul
xor
xchg
dec
adc
adc
push
pop
xchg
mov
xchg
les
mov
cmc
sub
mov
fucomip
fidiv
pushf
adc
movs
mov
test
fs
dec
fs
je
xchg
dec
es
dec
cmp
nop
xchg
xchg
dec
es
in
hlt
cld
and
sbb
add
or
xchg
dec
xor
sbb
sub
es
and
in
aam
fwait
fs
dec
les
dec
test
pushf
movs
je
dec
xor
jl
fs
dec
xor
and
inc
dec
cmp
and
push
sub
lock
dec
push
and
adc
cmps
sub
in
xchg
dec
xor
cld
mov
les
leave
and
aam
fs
dec
cmps
cdq
in
xchg
xchg
dec
es
pushf
movs
lods
and
sbb
add
jl
push
pop
xor
mov
inc
push
jns
out
pusha
clc
adc
xadd
sub
inc
dec
adc
push
pop
cmps
lods
dec
xor
adc
dec
or
sbb
leave
and
hlt
jmp
int3
fidiv
fcom
in
mov
les
add
xchg
dec
cmps
adc
sbb
jno
jl
dec
sub
jmp
inc
pop
sub
ins
jmp
es
mov
hlt
push
icebp
xor
fwait
fs
dec
inc
dec
in
fs
inc
dec
and
sbb
enter
or
cld
jmp
in
movs
fidiv
int3
xchg
dec
es
les
lods
xchg
pushf
es
fs
movs
dec
push
pop
cdq
fs
dec
fs
je
xchg
dec
es
mov
xor
rcl
out
ins
sbb
xor
and
or
fadd
mov
jmp
in
in
xchg
dec
push
fdiv
jmp
es
fs
enter
xchg
adc
pushf
movs
jmp
jne
and
sub
or
fs
xor
and
inc
(bad)
or
sbb
add
cmp
and
add
call
jg
(bad)
xor
mov
push
adc
les
mov
sbb
test
jl
popf
les
dec
arpl
inc
xchg
call
push
out
loop
imul
and
mov
add
inc
adc
and
stos
xchg
and
sub
mov
add
push
xor
dec
xchg
in
pop
adc
xchg
int3
aam
nop
and
test
sub
cmp
movs
daa
lods
mov
cmp
out
xchg
je
das
lea
test
das
lock
aad
loopne
(bad)
jg
adc
loopne
lock
jg
push
push
ss
ror
ret
or
mov
cs
adc
add
sbb
xor
sub
or
add
ins
mov
mov
fcom
loope
out
rol
shl
push
lods
xchg
mov
or
inc
aam
cmp
ins
test
rcl
in
jl
or
and
int
jns
es
in
jo
dec
retf
cmp
cmp
(bad)
mov
aad
jno
mov
sub
add
adc
sar
jno
dec
int3
lods
cmp
repz
icebp
scas
aam
leave
rol
mov
pop
pop
jle
rcr
sub
jg
push
add
xor
xor
in
iret
inc
add
ror
mov
add
dec
fild
mov
in
jg
aam
nop
int3
mov
ss
inc
inc
adc
fisubr
clc
fdiv
push
jmp
pop
mov
bound
enter
adc
sbb
hlt
ror
aad
loopne
mov
jle
dec
mov
cmc
cmps
mov
jne
push
jo
pop
in
call
mov
sbb
xor
push
pop
add
ins
out
in
pop
test
in
cdq
sub
adc
sar
or
cdq
rcr
ror
push
loopne
pushf
jbe
inc
in
inc
jmp
and
dec
inc
inc
fs
dec
adc
add
xor
pop
ins
xor
push
sbb
sbb
call
cwde
pop
adc
imul
cmp
es
pop
and
xchg
js
sub
loope
push
lods
sub
lods
xchg
jo
adc
loopne
lods
retf
add
addr16
in
ins
pop
aas
das
popf
fisubr
dec
mov
inc
das
xchg
mov
sar
sbb
(bad)
ffreep
xor
std
xchg
movs
cmp
or
add
sti
les
nop
or
adc
xor
push
cdq
and
push
add
mov
aam
pop
setno
and
addr16
or
xor
test
jno
mov
mov
fwait
mov
and
pop
aas
and
push
sbb
or
pop
cmp
xor
dec
test
je
or
mov
(bad)
scas
adc
cmp
in
pop
and
call
nop
sub
imul
in
ret
inc
add
test
sub
or
add
adc
and
or
popa
cwde
imul
adc
outs
cmp
add
and
fisubr
sbb
fild
js
sbb
adc
sbb
adc
sbb
mov
and
inc
mov
pop
cmps
pop
push
or
pop
cwde
std
mov
pop
repnz
dec
add
mov
nop
or
add
or
and
inc
test
out
and
js
pop
fbstp
push
sbb
pop
sbb
add
sub
inc
mov
pop
mov
and
cmp
cs
cmp
add
cld
mov
ret
dec
add
enter
push
test
pop
xor
pusha
and
pusha
push
jo
stos
out
test
sbb
sub
fild
mov
pushf
inc
add
(bad)
(bad)
mov
mov
fwait
adc
test
or
jo
div
js
sub
cmp
dec
ret
adc
out
dec
and
xor
fild
es
mov
add
jg
add
xchg
sub
add
sbb
inc
fistp
and
add
or
enter
xchg
je
cmp
dec
cdq
div
mov
fisttp
imul
inc
rcl
cdq
movs
fisttp
out
das
inc
les
xchg
fild
ret
xor
pushf
and
xor
cmps
in
in
or
cmp
test
add
jb
gs
nop
add
sbb
idiv
test
adc
or
jge
push
in
retf
inc
mov
je
jg
and
add
(bad)
sahf
xchg
pushf
nop
ins
add
(bad)
std
xchg
jns
fs
add
jl
sbb
nop
addr16
push
adc
js
sbb
and
pushf
xchg
rcl
dec
push
adc
cwde
xor
pop
cs
call
dec
shl
ret
or
xor
mov
pop
fistp
push
xor
dec
add
in
bound
aam
push
push
push
adc
sar
jg
push
jne
mov
adc
or
ss
pop
push
add
adc
ins
in
dec
sub
bound
xchg
mov
mov
and
add
imul
cmp
mov
mov
inc
push
inc
sbb
bound
mov
jae
sbb
mov
mov
add
and
xor
pop
add
adc
jb
xor
xor
adc
mov
add
add
add
adc
sub
adc
sbb
mov
sbb
shr
adc
cmp
imul
lods
dec
cs
sub
test
push
push
sub
ins
push
xchg
dec
fwait
and
in
adc
jo
in
cmp
and
add
mov
shl
out
pop
je
test
lea
xchg
add
test
outs
test
sbb
movs
maxps
shr
push
and
lods
mov
popf
jp
sub
mov
push
jb
mov
xor
add
into
pusha
xor
dec
sbb
adc
sub
mov
mov
jo
push
les
pusha
add
or
ins
mov
mov
or
jbe
adc
repnz
cmp
daa
cmp
test
push
add
dec
and
adc
or
mov
mov
pop
inc
xor
shl
movaps
push
sbb
xchg
xor
pop
mov
add
mov
or
or
retf
lahf
(bad)
call
call
pop
sbb
inc
pop
pusha
sti
mov
fstp
adc
jns
(bad)
mov
add
add
sbb
push
and
dec
fwait
mov
cmp
cdq
xchg
in
cld
sub
inc
cdq
fs
dec
enter
and
es
mov
leave
mov
cmps
ins
ror
mov
adc
add
jl
or
or
dec
cld
test
jge
xchg
ins
mov
adc
dec
push
sub
enter
imul
xchg
jb
mov
aas
or
nop
iret
pop
je
cld
stos
test
fld
(bad)
popa
js
repnz
(bad)
sub
cld
dec
dec
cmps
push
iret
push
les
or
(bad)
xor
pop
sub
xlat
or
mov
pop
inc
sti
and
scas
bound
xor
ret
mov
jbe
push
cmp
and
fs
xor
es
ss
mov
fcmovnbe
sbb
xchg
dec
inc
ret
and
call
or
push
in
test
pushf
ficom
dec
lds
scas
dec
sbb
ss
and
adc
jo
xor
cmp
cdq
fs
inc
and
inc
add
leave
add
dec
dec
inc
adc
in
and
jb
in
std
mov
sahf
inc
(bad)
aam
int3
add
mov
pop
or
(bad)
std
mov
xor
add
sbb
loopne
push
ins
pop
pop
cdq
in
push
fs
push
mov
ret
sub
xchg
leave
stos
add
sub
sti
cld
inc
mov
lahf
adc
fs
sub
ret
push
adc
sbb
or
add
xchg
sbb
in
adc
cmp
cld
test
int3
mov
sbb
cld
aam
cld
fild
jae
iret
add
fild
imul
pushf
xor
or
mov
dec
xor
fs
pop
ret
and
push
leave
adc
xor
add
or
test
adc
es
adc
fs
dec
cmp
dec
sbb
push
jns
outs
test
(bad)
adc
xor
cmp
mov
mov
popf
jns
sti
inc
gs
push
jo
hlt
adc
movs
xchg
(bad)
mov
xor
sub
call
jmp
adc
mov
stos
add
sub
sbb
push
mov
jecxz
nop
mov
pop
add
and
pop
push
stos
movs
xor
call
pop
add
or
(bad)
add
inc
enter
outs
aas
pop
jg
or
push
jns
movs
inc
and
(bad)
mov
and
mov
pop
lods
xchg
push
cmp
ss
imul
xor
ffree
and
lock
mov
test
or
dec
mov
and
in
fistp
lea
cmp
mov
imul
mov
jl
adc
mov
pop
pop
adc
movs
push
pushf
bnd
pusha
ror
mov
aam
add
fcom
movs
inc
mov
iret
inc
arpl
add
pop
or
and
xor
scas
rol
add
mov
sub
in
or
iret
or
xor
and
pop
cs
add
inc
mov
mov
iret
fiadd
cmps
xor
js
ret
lahf
or
xchg
pop
loopne
xchg
fild
fdiv
scas
pop
push
ficomp
(bad)
out
outs
mov
pop
scas
inc
add
pop
mov
dec
or
xchg
mov
pop
push
lds
je
into
jg
pop
(bad)
fmul
pop
mov
adc
outs
call
fucomp
lds
dec
outs
adc
mov
call
xor
call
mov
rcl
stos
push
(bad)
pop
mov
mov
or
ror
rol
jbe
dec
aas
jb
stos
imul
inc
mov
movs
lahf
outs
lahf
test
mov
test
inc
fisttp
pop
xor
or
in
pusha
inc
pop
jecxz
adc
xchg
fadd
jbe
and
test
mov
sub
inc
inc
adc
mov
adc
cwde
sub
add
enter
dec
popa
add
add
shr
cmp
pop
and
aam
jae
mov
lods
dec
pop
push
xchg
sbb
or
inc
(bad)
aad
xor
mov
leave
daa
mov
push
pop
rol
push
and
int3
out
cmc
nop
sbb
and
cmp
shl
test
add
mov
scas
fsubr
enter
(bad)
push
aad
pop
iret
stos
inc
(bad)
outs
daa
jecxz
add
add
cwde
or
sbb
enter
inc
test
xor
(bad)
stc
enter
sbb
mov
sub
inc
xchg
sub
mov
sbb
pop
je
inc
or
push
out
hlt
sub
cmc
nop
cmp
adc
in
daa
mov
cdq
out
shr
and
repnz
loopne
push
pop
enter
add
mov
stos
pop
inc
jo
shld
push
rcl
or
mov
iret
sbb
mov
pop
mov
jmp
scas
dec
add
sub
mov
push
enter
or
sub
adc
enter
std
inc
add
and
inc
(bad)
or
fld
rcl
mov
xor
xchg
mov
std
adc
xchg
ror
adc
push
mov
inc
and
pop
rcr
or
ror
sbb
scas
xchg
sbb
adc
sbb
add
fdivr
sub
fcmovnu
inc
int3
cmp
pusha
add
push
clc
cld
pusha
stos
adc
inc
xor
pop
xor
iret
je
jnp
and
cld
push
xchg
pop
fld
ins
and
loope
lods
lods
sbb
sbb
sbb
push
mov
sub
enter
push
xor
push
test
imul
lahf
shl
pop
int
cmp
rcl
lock
cmp
mov
jo
scas
xchg
dec
js
pusha
lock
(bad)
push
ret
mov
xchg
dec
scas
fisttp
and
adc
jo
dec
jl
popa
pop
lods
or
pusha
add
push
sub
pop
add
pusha
mov
xchg
mov
inc
mov
imul
fadd
rcl
lds
in
jae
or
or
push
pusha
inc
or
cdq
and
inc
cmp
aad
mov
nop
jge
cmps
pusha
push
adc
mov
pusha
mov
ror
cmp
fisttp
stc
jo
mov
or
daa
push
inc
or
lahf
lock
lock
loop
scas
inc
mov
repnz
scas
aad
ret
xchg
xchg
inc
add
movlps
je
enter
and
sbb
test
mov
mov
inc
cmps
test
push
in
push
adc
add
cmp
pop
jo
push
sub
(bad)
call
pop
aad
bswap
loopne
or
inc
xor
paddq
pop
add
add
aam
in
push
imul
sub
aam
in
les
dec
dec
in
in
shl
pop
rcl
or
loopne
adc
adc
shl
jae
lahf
in
inc
mov
jmp
inc
aad
dec
mov
ins
bound
pop
fcomp
push
mov
fmul
push
dec
rcl
pop
pop
xchg
and
jb
aam
push
xchg
mov
aam
stc
cmp
loopne
pop
mov
bound
mov
mov
xor
cmps
fbstp
mov
cdq
adc
push
sub
(bad)
sbb
stos
pop
jbe
lahf
dec
sahf
inc
or
(bad)
push
cmp
pop
popf
sbb
imul
mov
adc
leave
repz
or
pushf
push
adc
push
adc
push
and
fdiv
aam
dec
adc
ins
sub
fs
cmp
inc
js
jg
stos
adc
scas
data16
sub
cwde
pop
test
add
push
jb
imul
jp
dec
push
add
scas
pop
fdivr
dec
pop
movs
jo
push
fcomp
nop
aam
add
mov
bound
cwde
scas
call
cwde
mov
adc
aam
mov
add
fild
dec
adc
cwde
add
mov
add
leave
mov
sbb
sbb
jl
movs
and
mov
pop
or
les
add
or
push
mov
add
or
pusha
mov
sub
mov
stos
cmp
sbb
and
and
gs
mov
movs
add
clc
ret
sahf
in
fcom
adc
push
adc
mov
ins
shr
cld
cld
or
nop
sub
adc
lock
adc
jne
adc
adc
int
push
movs
in
sbb
adc
and
cmp
xor
or
in
out
adc
lock
xchg
pop
or
lock
push
(bad)
ins
inc
adc
inc
test
push
inc
and
nop
xchg
sbb
jg
sahf
test
xchg
(bad)
xchg
js
js
push
xchg
add
dec
mov
push
push
popa
sub
(bad)
or
test
es
sbb
mov
mov
push
mov
enter
scas
test
xchg
adc
cmp
or
adc
mov
imul
mov
mov
inc
rep
push
add
push
sub
jmp
or
jo
adc
pop
ins
std
push
pop
sbb
push
test
stos
xchg
mov
les
add
add
rol
pop
stos
add
and
mov
test
scas
add
fdiv
xchg
mov
imul
sbb
lahf
pop
mov
inc
mov
push
mov
cmp
sub
mov
dec
test
push
mov
rol
sbb
dec
sahf
ins
sub
adc
pushf
lock
or
add
movs
xchg
cmp
lds
dec
push
inc
pop
push
lock
inc
xchg
hlt
dec
or
stos
jmp
xlat
jmp
scas
add
mov
jb
sub
push
pop
xchg
mov
jnp
(bad)
adc
add
sbb
sbb
shr
stos
test
push
(bad)
mov
mov
push
das
cmp
push
iret
mov
ficom
adc
(bad)
int3
aam
cdq
fs
fsub
in
hlt
sbb
xchg
dec
cld
add
or
leave
and
adc
and
and
dec
sub
cmp
xchg
dec
xor
xchg
dec
xor
pop
fs
je
xor
and
test
pushf
movs
dec
sbb
es
fs
clc
clc
clc
clc
cdq
fs
dec
clc
clc
clc
fs
dec
es
clc
stc
xchg
dec
es
stc
stc
stc
dec
es
fs
stc
stc
es
fs
stc
stc
stc
stc
cdq
fs
dec
stc
stc
stc
fs
dec
es
stc
stc
xchg
dec
es
stc
stc
stc
dec
es
fs
stc
stc
es
fs
stc
stc
stc
stc
xchg
cmp
dec
stc
stc
stc
dec
xor
and
stc
cli
xor
and
cli
cli
cli
leave
and
dec
cli
cli
cli
and
dec
xor
cli
cli
xchg
dec
xor
cli
cli
cli
cli
dec
xor
and
cli
cli
es
xchg
cli
cli
cli
cdq
fs
dec
cli
cli
cli
fs
dec
es
cli
cli
xchg
dec
es
cli
cli
cli
dec
es
fs
cli
cli
es
fs
sti
sti
sti
sti
xchg
addr16
sti
sti
dec
es
fs
sti
sti
pop
sahf
sub
mov
in
fs
add
mov
xchg
sbb
movs
mov
xchg
push
test
cmp
sub
jmp
popf
rcr
(bad)
inc
sub
cld
sub
add
xlat
sbb
in
add
jmp
sbb
mov
fisttp
out
std
inc
inc
pop
aam
lods
mov
cmp
test
inc
cmps
push
inc
sub
sbb
pop
sbb
push
mov
push
push
lods
in
ins
je
and
inc
adc
loope
push
push
and
jmp
jmp
rcl
sar
sub
pop
scas
clc
div
(bad)
stc
call
or
and
adc
aam
jns
clc
call
cmps
pop
sar
stos
stc
fst
stos
fwait
das
fdiv
fild
inc
clc
aad
mov
push
es
fimul
pop
or
fs
dec
loopne
adc
(bad)
es
push
js
dec
xor
sbb
leave
and
nop
push
xor
and
cwde
sub
lock
dec
push
mov
not
scas
sar
cdq
fs
imul
dec
fmul
ficom
stc
push
scas
(bad)
es
fs
fnsetpm(287
jno
rcl
and
stc
inc
imul
pusha
push
adc
jg
cdq
push
push
shl
cli
repnz
mov
inc
pop
xchg
cmp
jb
xchg
mov
or
push
fcomp
rol
hlt
and
ret
inc
popf
mov
rcr
(bad)
xchg
add
xchg
pushf
stos
mov
mov
scas
mov
dec
push
pop
pop
add
cwde
jo
push
or
add
pusha
loopne
xchg
loopne
mov
arpl
aas
add
dec
mov
popa
call
int
cld
mov
dec
pop
push
mov
lahf
dec
sar
aam
and
pminsw
lahf
(bad)
std
fdivr
lahf
xchg
xchg
mov
mov
clc
xchg
bound
mov
sbb
adc
xlat
add
inc
popa
inc
or
pop
add
sbb
test
mov
rol
push
nop
mov
jns
aas
fisttp
mov
das
sub
jns
xor
fist
cld
add
jl
push
cdq
push
lock
cld
aam
pop
(bad)
jne
push
les
(bad)
sub
sub
and
pop
lods
add
das
dec
in
sub
aas
or
add
in
dec
mov
test
sub
out
pushf
int
cmc
xchg
mov
mov
(bad)
movs
fild
xchg
lods
jb
jnp
test
int3
mov
jb
xchg
pop
lods
movs
push
es
mov
cld
call
mov
xchg
sbb
dec
push
jns
lods
(bad)
or
lods
dec
sub
test
cmps
pop
mov
sar
pop
mov
push
push
jmp
and
pushf
dec
sub
xchg
sbb
dec
in
xchg
lods
cwde
xchg
pop
int3
repz
inc
mov
out
fcomp
push
mov
fld
mov
nop
arpl
mov
enter
loopne
mov
pop
cmp
and
enter
enter
mov
and
dec
rol
add
nop
dec
xor
mov
pusha
inc
lds
pop
pop
inc
sbb
(bad)
sbb
ret
inc
push
stc
mov
push
popa
adc
xchg
je
int3
fld
or
int3
movs
(bad)
fwait
xor
cmp
test
dec
out
fstp
nop
add
mov
xor
add
(bad)
rcl
or
out
cmps
mov
mov
sub
add
popf
(bad)
shr
retf
or
(bad)
mov
or
mov
dec
push
cs
jns
and
add
sbb
aam
push
fstp
test
stc
cld
push
sub
aam
adc
fadd
mov
jl
jmp
in
adc
mov
in
mov
sub
pop
in
xchg
loopne
fdiv
sub
fmul
or
cld
repnz
jo
test
or
movs
add
adc
lea
or
gs
jae
inc
movs
mov
(bad)
adc
jmp
push
xor
repz
and
sahf
outs
xor
fs
sub
leave
stos
mov
retf
fisub
cmp
adc
cdq
movs
push
retf
inc
cmp
sub
retf
shr
adc
repnz
push
call
fcom
mov
fs
int3
ins
and
repnz
sbb
je
push
ret
sbb
mov
or
fcmovbe
push
retf
adc
rcl
or
sbb
jl
sbb
and
or
jle
adc
mov
lea
dec
test
nop
outs
in
sbb
push
push
gs
data16
fisttp
fimul
adc
mov
add
jge
movs
mov
pushf
push
movs
repnz
enter
loopne
and
pop
xchg
xchg
retf
fdivr
dec
mov
dec
sub
ror
and
movs
cmp
cmp
dec
and
scas
es
push
out
enter
sub
sub
stc
inc
jp
lock
cmp
(bad)
cmps
dec
aaa
(bad)
dec
call
enter
mov
sub
jmp
(bad)
leave
pop
sub
cmp
dec
or
dec
push
out
jecxz
es
adc
push
dec
mov
in
in
and
push
xchg
out
in
or
mov
in
xor
psubsw
xor
cwde
push
mov
pushf
pushf
loopne
ss
cmp
xor
imul
pop
fisub
mov
fistp
cmp
mov
cmp
mov
add
adc
adc
inc
test
adc
(bad)
jo
mov
or
push
mov
in
push
push
leave
stos
pusha
inc
enter
shr
data16
(bad)
call
xchg
sub
add
retf
sub
(bad)
push
daa
and
popa
cmps
inc
add
add
and
xchg
sbb
and
push
leave
push
jb
sbb
inc
sbb
or
sbb
or
pop
push
or
adc
or
jns
mov
xor
in
repnz
and
xchg
dec
mov
sbb
or
push
leave
cmps
or
test
mov
test
mov
hlt
or
popa
shr
jb
adc
call
repnz
dec
inc
dec
rol
inc
and
or
mov
sbb
or
push
sub
call
jmp
xchg
lahf
or
test
push
mov
ins
repz
lock
pop
jge
stos
pop
push
or
xor
or
jg
ja
xchg
inc
add
ins
(bad)
mov
jbe
mov
(bad)
call
ja
jl
xchg
adc
gs
std
vpmacssww
fst
(bad)
retf
je
mov
push
mov
ins
daa
outs
shl
jno
mov
gs
sub
jo
push
jns
jae
mov
ins
mov
push
es
in
fsub
repnz
jb
in
js
push
es
xchg
nop
dec
popf
sbb
enter
adc
pop
jmp
sub
cmp
loopne
or
daa
test
dec
in
bnd
cld
lock
or
clc
fmul
out
lods
or
cmp
xchg
fs
in
bnd
fcom
mov
bswap
ins
or
mov
adc
sub
mov
jl
mov
addr16
xlat
xor
adc
pushf
jae
xchg
cmp
in
xor
movs
inc
int3
adc
sbb
xor
xor
ds
and
pop
fisttp
lods
sbb
pusha
add
xchg
mov
and
std
push
sbb
mov
mov
retf
dec
fmulp
les
call
ins
ds
and
sub
sbb
fsubr
inc
es
in
sbb
dec
imul
push
pop
stc
je
sbb
outs
jns
sub
bound
repnz
fisttp
xchg
dec
sahf
(bad)
nop
in
cwde
fs
out
mov
movs
mov
lods
xchg
push
stc
sar
pop
xor
shl
jo
movs
ror
es
add
call
sub
xchg
pop
or
sub
inc
fild
and
mov
xor
dec
sub
daa
sub
pushf
pushf
fdiv
mov
pop
movs
xor
xor
push
outs
retf
pop
mov
pushf
pushf
xor
add
push
push
cmp
xor
xchg
rol
aaa
imul
mov
cmp
jl
in
cmp
xor
dec
hlt
dec
outs
xchg
cmp
les
sbb
xor
cmc
mov
sbb
aad
inc
scas
mov
inc
into
add
push
inc
push
ins
int3
and
cld
inc
movs
dec
push
or
inc
sbb
mov
sub
inc
cmp
add
sub
sub
mov
and
sub
dec
and
dec
mov
in
cmp
push
cmp
xchg
sbb
shr
into
jo
sbb
sbb
add
add
pop
push
add
add
dec
inc
add
add
cmp
add
add
sub
add
add
sbb
add
add
or
add
sbb
(bad)
lock
add
call
xor
rol
xor
xor
shl
push
xor
(bad)
mov
add
inc
mov
fs
push
pusha
inc
call
in
sub
nop
sbb
lahf
mov
add
ds
je
jne
movs
in
jbe
xor
out
jg
sbb
test
in
dec
ret
(bad)
les
(bad)
out
inc
call
stc
fist
adc
jmp
fild
pop
cs
inc
inc
dec
adc
push
(bad)
pusha
dec
test
push
shl
fadd
outs
in
cld
lods
in
mov
imul
addr16
inc
xchg
retf
icebp
repnz
addr16
pmaxsw
clc
adc
pushf
and
test
setno
dec
hlt
clc
sub
mov
mov
or
xchg
mov
or
cld
and
fiadd
stos
mov
or
jae
pop
ror
loope
stc
push
fcom
mov
push
mov
in
cmp
addr16
sub
out
or
and
sar
sub
dec
sahf
pop
pop
push
mov
lods
xor
push
sahf
xchg
add
idiv
jns
pop
add
mov
inc
and
pmulhw
retf
lods
adc
cs
outs
data16
or
clc
ins
jo
test
lods
stos
data16
sbb
loopne
test
inc
loopne
cmc
int3
dec
repz
push
adc
out
ja
cmp
inc
xchg
add
dec
xchg
cli
adc
dec
adc
stc
std
inc
pop
cld
int
and
nop
out
and
hlt
sbb
pushf
xor
in
lahf
inc
inc
fucom
xchg
scas
mov
rcl
(bad)
(bad)
icebp
gs
add
rcr
sbb
(bad)
adc
mov
gs
retf
mov
sbb
(bad)
popa
xchg
adc
pop
data16
gs
std
mov
add
shl
or
pop
sbb
sar
in
test
fld
cmp
loop
inc
mov
inc
rcl
mov
and
xchg
punpcklwd
addr16
out
and
aam
fmul
mov
push
dec
mov
(bad)
add
xchg
outs
mov
out
add
and
lock
mov
in
adc
xor
repnz
sub
sub
aam
or
ja
xchg
gs
xchg
xchg
outs
adc
mov
test
leave
leave
dec
in
js
xor
aam
jge
mov
popa
fsub
and
iret
enter
mov
sub
xor
test
and
js
push
enter
lock
and
dec
ret
jns
and
pop
and
xchg
cmps
enter
in
sbb
jo
add
add
mov
sub
mov
or
sub
popa
add
or
xchg
mov
in
cmp
and
xchg
mov
sub
pop
push
cmp
xchg
sbb
in
sbb
add
dec
mov
pop
add
add
push
adc
adc
xor
jb
adc
xor
xor
adc
xor
xor
push
or
or
xor
xor
or
xor
xor
or
xor
xor
push
add
add
xor
xor
add
inc
sahf
test
les
cdq
dec
cs
ret
add
push
cmp
sub
je
dec
ds
mov
imul
cmp
sbb
xchg
fcomip
imul
js
mov
jne
mov
sbb
xchg
aaa
or
xchg
inc
call
imul
fcomp
pop
pop
loopne
cmp
jl
add
mov
lock
or
cmp
clflush
in
cmp
jnp
ficomp
fdivr
or
push
cmp
add
xor
sbb
or
cs
add
outs
stc
pop
push
add
mov
add
add
xor
and
(bad)
call
mov
pop
mov
inc
ret
sbb
sub
push
or
pop
or
add
adc
or
cs
jns
int3
dec
push
and
cmp
add
sub
and
cli
pop
imul
fld
or
imul
mov
xor
pop
add
or
mov
mov
ucomiss
and
push
jns
inc
and
xchg
out
dec
fcom
add
pusha
daa
ror
xchg
inc
cmp
enter
loopne
psubb
shl
in
clc
dec
cmps
sbb
mov
enter
js
sahf
push
ror
mov
mov
imul
(bad)
loopne
mov
or
xor
es
sbb
jb
popa
xchg
in
test
cld
adc
mov
fstp
(bad)
lods
xlat
movs
cmp
xor
mov
dec
push
push
xor
sub
jmp
out
xchg
addr16
in
rcr
enter
jns
push
icebp
rcr
cs
fsubr
xchg
pop
loopne
daa
and
adc
and
jns
add
daa
popf
push
xchg
and
enter
std
mov
dec
inc
fdivr
add
sbb
imul
and
lods
sub
aaa
gs
xchg
xchg
adc
dec
cli
dec
or
mov
sbb
xor
pushf
mov
xor
dec
(bad)
pusha
sub
dec
mov
fs
(bad)
sbb
inc
pop
into
mov
or
xchg
dec
and
and
and
and
and
hlt
je
add
add
sbb
and
fsub
in
shl
and
retf
and
push
jb
sbb
and
pop
leave
push
jb
push
sbb
sbb
inc
leave
push
jb
sbb
jb
sbb
pop
push
enter
adc
add
adc
add
add
adc
add
add
push
enter
or
add
or
add
add
or
add
add
push
enter
add
add
add
enter
enter
dec
and
movs
jb
adc
sahf
pop
test
sbb
inc
cmp
jb
sbb
test
sbb
mov
adc
cmp
inc
les
push
outs
mov
inc
bound
popf
movs
in
push
push
jl
inc
imul
fcom
dec
adc
retf
dec
pop
pop
mov
pop
nop
mov
xchg
ds
jb
add
adc
add
add
add
push
add
jo
add
cmp
add
add
in
pusha
jl
in
cmp
or
cmp
ins
fisttp
lock
lds
mov
(bad)
jb
mov
inc
nop
jb
add
lods
mov
fbld
ins
and
shl
data16
js
ins
sub
push
jmp
mov
lahf
fadd
mov
test
outs
lock
add
call
cmp
xor
add
sub
dec
pop
(bad)
cwde
ds
and
and
cwde
sub
or
stos
call
jp
add
fcomp
fcomp
or
fsub
seto
pop
leave
sub
or
jl
add
mov
and
pop
loopne
cmp
push
inc
or
add
(bad)
arpl
push
nop
rcl
sti
out
imul
sbb
pop
xor
rcl
sub
popa
idiv
adc
inc
sub
add
in
mov
retf
iret
inc
ins
les
add
xchg
xchg
mov
stc
add
out
es
dec
add
xlat
iret
aaa
xor
add
(bad)
and
push
xor
jl
daa
push
hlt
xchg
xlat
lea
xor
lahf
outs
mov
imul
xchg
cmp
enter
lods
or
dec
repnz
adc
cmp
repz
cmp
enter
or
xchg
xchg
cmp
push
xor
cld
sub
clc
jl
push
js
aaa
xor
stos
sbb
cmp
adc
enter
lods
inc
adc
dec
jl
daa
jns
dec
sub
adc
(bad)
lea
mov
fs
pop
mov
fs
xor
test
pop
cmp
pop
in
cdq
cwde
sbb
jl
dec
sahf
outs
fs
push
int3
test
cmps
xchg
mov
sti
mov
repnz
cmp
rol
jbe
pushf
in
pop
(bad)
mov
stc
sbb
cld
xchg
(bad)
sbb
ss
push
cs
jns
mov
sbb
repnz
xor
shl
sti
enter
dec
mov
mov
pushf
xor
push
add
fcmovnb
mul
jb
or
mov
and
and
cld
(bad)
shl
pushf
or
imul
cmp
and
dec
jae
es
mov
sti
out
mov
in
sar
xchg
cmp
ror
and
dec
repnz
aaa
xor
stos
pop
push
shl
xor
in
iret
xor
in
js
daa
sub
xchg
mov
sub
cld
enter
cmps
sbb
fs
loopne
xor
xchg
or
stc
imul
pushf
adc
lahf
xchg
dec
call
sbb
push
cs
sar
sub
inc
sbb
iret
in
xlat
sbb
das
cs
cmp
xchg
dec
clc
xor
and
inc
imul
mov
sub
dec
xchg
out
cmp
xor
cld
push
xchg
mov
xor
dec
bnd
xor
adc
sub
push
mov
sbb
mov
push
repnz
xlat
call
cmp
mov
lods
mov
cmp
xchg
push
sbb
xchg
sub
je
fild
cmps
mov
test
(bad)
add
fnstsw
inc
mov
fcomp
lock
cmp
in
push
mov
stos
ror
lahf
retf
leave
rcl
int3
das
fsub
sahf
iret
enter
and
pop
dec
or
and
push
jns
and
mov
clc
cli
inc
and
in
mov
and
repz
and
dec
inc
xor
fsubr
push
sahf
retf
add
inc
push
in
dec
bnd
inc
xor
fsubr
mov
xor
stos
pop
inc
or
hlt
pop
fs
out
dec
sbb
cld
or
xor
pusha
das
cs
dec
xor
jo
mov
sbb
mov
sbb
stos
lods
pushf
xor
test
jnp
in
stc
dec
je
adc
imul
pushf
adc
xchg
cmps
jb
pop
adc
or
(bad)
jnp
js
inc
data16
repnz
add
or
pop
dec
or
mov
jae
pushf
adc
dec
loopne
sbb
dec
fidiv
xor
xor
fsubr
xchg
cmp
retf
and
dec
sbb
dec
repnz
jl
cmp
xor
repz
pop
pushf
inc
xor
xor
mov
and
out
adc
es
push
xor
push
sbb
fsub
and
cmp
sbb
loope
hlt
xor
jns
leave
stos
sbb
ins
clc
das
push
lahf
repnz
in
call
stos
jmp
add
mov
or
sub
sbb
lods
push
mov
pop
adc
cli
jo
call
enter
pop
adc
and
jl
daa
jns
push
pushf
lods
shl
pop
lea
or
inc
cmps
jns
xor
sbb
mov
iret
in
scas
cmp
int3
js
arpl
lahf
xchg
dec
sahf
lods
aam
fs
sbb
xchg
cmp
inc
gs
xor
test
imul
xor
jl
cmps
push
in
xlat
cwde
clc
addr16
ins
stc
mov
fsubr
lods
xchg
sbb
xor
fstp
adc
mov
imul
lock
inc
jl
icebp
fs
and
sub
mov
sti
ins
xor
pushf
(bad)
pop
sbb
ins
aaa
xor
repz
outs
xor
in
iret
add
inc
cmps
jne
xor
clc
jo
lods
ror
jno
sbb
cs
ss
sti
jb
fwait
retf
imul
or
jns
shr
push
imul
xor
out
cdq
push
pop
xlat
pusha
jne
cld
fcom
fs
adc
(bad)
stc
hlt
shr
clc
pop
ja
and
push
lods
sbb
and
push
lea
retf
mov
sub
push
push
(bad)
je
js
sub
adc
rcr
dec
dec
and
imul
jns
ror
sti
pop
test
jp
cmp
sti
xor
mov
nop
stc
jnp
fs
out
mov
xchg
dec
fdivrp
(bad)
pushf
jo
xor
repnz
xor
add
inc
scas
fs
push
scas
imul
in
pop
dec
lock
mov
xor
push
dec
sahf
iret
in
sti
xor
mov
sub
int3
cwde
stc
xor
aam
dec
xchg
dec
pop
aaa
test
inc
es
test
in
in
xchg
leave
jmp
cmp
in
test
xchg
xchg
out
int3
hlt
pop
mov
dec
(bad)
cld
mov
push
pop
add
pusha
mov
in
mov
cld
jne
fs
adc
mov
cmps
imul
leave
repz
mov
retf
xor
(bad)
in
xor
dec
sahf
iret
enter
cmp
(bad)
scas
sahf
xchg
cwde
xchg
jmp
mov
sub
test
aaa
dec
in
xchg
call
xchg
cmp
xchg
out
pop
mov
jl
out
fs
pushf
xchg
sbb
ins
mov
call
retf
cwde
cwde
jecxz
out
es
test
xor
dec
test
mov
xchg
das
mov
stos
add
cmp
call
test
mov
sahf
inc
dec
inc
or
pop
rcr
fsubr
pusha
jns
push
fsub
bnd
cmps
cmp
movs
dec
pop
in
test
sahf
dec
lods
es
xchg
sti
lahf
(bad)
mov
in
popf
repnz
mov
faddp
mov
lods
repnz
gs
mov
retf
fsub
movs
retf
in
pusha
dec
fcom
aaa
dec
in
cmps
ret
sahf
outs
fs
hlt
leave
stos
mov
ins
retf
xchg
out
clc
test
ds
out
stos
fdivr
or
xor
mov
inc
gs
push
jns
loopne
lods
xlat
sbb
sar
leave
repz
call
xchg
scas
jl
sub
scas
jg
cmp
mov
rcl
stos
repnz
(bad)
cli
adc
div
ja
aam
xchg
ja
bound
std
mov
aad
or
shl
jb
mov
mov
sar
frstor
call
sub
outs
daa
mov
sar
mov
popf
je
loopne
fs
enter
cmp
fsub
cmp
pop
je
sbb
dec
jl
fistp
mov
xor
dec
mov
xchg
mov
stc
adc
in
movs
mov
es
mov
idiv
popa
les
jb
int3
adc
dec
ret
add
int
jae
push
aam
fadd
fnsetpm(287
std
xchg
pop
push
jb
in
std
(bad)
ja
pushf
cmp
ins
dec
hlt
(bad)
sub
cld
enter
sbb
dec
mov
das
xchg
outs
adc
adc
outs
daa
mov
mov
mov
dec
jns
sub
test
jmp
into
adc
cmp
iret
cwde
cmp
shl
movs
jnp
clc
pop
inc
shl
xor
xor
dec
shl
in
jbe
mov
dec
or
pop
aam
int3
push
cmp
fs
das
ins
or
(bad)
in
or
cmp
mov
jl
xchg
xchg
xchg
xchg
fcomp
fnstenv
leave
leave
enter
ficom
leave
leave
in
in
fcmovnb
sbb
test
cwde
lods
ficomp
mov
pop
pushf
mov
dec
dec
imul
(bad)
dec
dec
dec
inc
int3
loop
aam
dec
dec
dec
jecxz
fsub
in
in
ss
leave
enter
out
(bad)
in
hlt
out
cld
popf
(bad)
or
call
and
and
mov
aaa
mov
fwait
xchg
adc
je
fwait
sub
or
and
or
mov
out
in
repnz
mov
xor
lds
add
in
lock
clc
pop
nop
fwait
es
sbb
add
inc
dec
inc
repz
das
hlt
push
arpl
dec
stos
cmc
sti
add
lea
(bad)
mul
and
sbb
adc
fmul
inc
test
xchg
sub
mov
xchg
mov
inc
dec
inc
jle
cdq
cld
enter
mov
sub
lods
add
xor
or
leave
mov
inc
xchg
add
sub
xor
add
xchg
mov
shl
add
mov
inc
mov
lods
xor
mov
add
imul
add
pushf
hlt
mov
pop
sub
inc
sahf
cmp
or
daa
and
nop
enter
imul
or
cmp
mov
mov
push
jo
push
jnp
lock
mul
fwait
js
clc
adc
clc
cmp
cmp
fcom
jo
cld
int3
sahf
pushf
mov
adc
clc
pop
adc
pushf
pushf
pushf
push
ss
and
in
adc
or
mov
pop
sbb
test
dec
test
xchg
xchg
pop
mov
fwait
adc
sub
cmc
mov
push
or
pop
xor
stos
test
in
cli
mul
and
and
idiv
fist
or
xchg
xchg
inc
and
clc
daa
pop
test
lea
daa
daa
push
add
push
leave
leave
sub
daa
movs
or
call
push
dec
sbb
pop
sub
or
cmp
cmp
loopne
outs
loope
sub
mov
and
stc
adc
and
add
jo
fmul
in
add
int3
add
dec
es
test
sbb
xor
cmp
push
xchg
add
dec
dec
pop
inc
(bad)
call
and
stc
and
loopne
daa
daa
daa
nop
aaa
enter
outs
daa
cmp
cwde
in
fmulp
xchg
cmp
cmp
sub
daa
mov
and
shr
daa
lock
pop
test
ins
mov
(bad)
stc
(bad)
xor
mov
pop
mov
aas
sub
cmp
mov
popa
daa
mov
gs
cmp
mov
daa
inc
and
in
and
inc
das
rol
dec
cs
xor
dec
dec
inc
inc
and
fmul
rol
dec
pop
pushf
pushf
fdiv
xchg
cwde
fmul
pushf
pushf
pushf
jo
dec
jno
xchg
xchg
fstp
fwait
in
add
dec
mov
lahf
retf
dec
mov
cli
in
and
in
or
in
in
clc
push
adc
mov
lds
std
push
repnz
push
jb
leave
ins
pop
or
and
in
jb
push
pop
pusha
adc
fadd
in
rcr
clc
cmp
sbb
add
or
cmp
cmp
cmp
adc
cmp
cmp
pop
sbb
add
mov
and
nop
cdq
push
mov
pusha
retf
sti
and
push
movs
sub
mov
test
and
push
mov
push
xor
jo
(bad)
sub
xchg
cld
sub
test
pop
push
repnz
mov
int
pusha
clc
push
mov
push
push
cli
push
mov
dec
push
dec
stc
das
ror
push
add
jae
cld
push
push
mov
dec
add
add
dec
dec
cs
data16
push
dec
mov
inc
leave
add
dec
mov
call
sub
dec
clc
and
xchg
sub
ins
hlt
sar
inc
cli
stos
in
repnz
add
cmp
dec
ss
add
ror
aas
mov
sub
push
cmp
cwde
mov
xor
push
ror
cmp
stos
fs
leave
sub
push
clc
nop
cld
and
cli
mov
xchg
mov
cmp
repnz
cli
js
dec
mov
in
clc
jo
in
mov
jmp
leave
stos
loopne
pusha
idiv
dec
ss
sub
cli
sub
sub
iret
push
rcr
push
es
xchg
data16
sti
and
xchg
arpl
sub
xchg
add
pop
jae
ins
cmps
and
neg
dec
ss
dec
xor
lock
ror
sbb
shl
push
mov
cld
xchg
push
leave
stos
call
pop
and
cld
push
and
repnz
cld
enter
stos
in
cld
fdivr
clc
pop
and
div
sti
jns
mov
sti
in
repnz
clc
loopne
push
leave
stos
enter
test
mov
xchg
mov
add
mov
xor
test
adc
push
pusha
add
mov
pusha
inc
(bad)
and
cld
push
jb
sbb
cli
add
inc
leave
stc
clc
test
cmc
add
add
hlt
repz
add
repnz
add
add
lock
add
add
out
in
add
add
in
jmp
and
and
jmp
call
and
in
and
and
jecxz
and
and
loope
and
and
fistp
and
adc
fmul
test
xchg
xchg
dec
and
mov
mov
cmps
fmul
test
repnz
aad
cmps
xchg
dec
and
ror
test
test
dec
call
call
sub
xchg
dec
and
int3
mov
sbb
mov
test
push
dec
add
sbb
mov
enter
sub
push
repnz
mov
in
pusha
add
in
dec
fdivr
aam
and
std
(bad)
std
xchg
mov
mov
push
repnz
std
movs
std
aam
or
pushf
sub
mov
repnz
mov
push
mov
jo
std
ins
pop
and
std
pop
inc
test
add
dec
ds
stos
dec
mov
test
and
cmp
mov
cmps
scas
mov
and
push
repnz
stos
mov
sub
sub
test
cld
repnz
test
cmps
mov
push
movs
mov
fcomp
mov
int3
cmps
xchg
dec
and
mov
leave
test
stc
push
repnz
mov
movs
dec
ds
jl
mov
xchg
xchg
dec
and
mov
push
leave
cmps
cwde
mov
je
add
sbb
inc
cmp
xor
xor
xor
xor
xor
add
add
add
fisttp
mov
and
or
int3
or
test
dec
jle
test
xchg
xor
jl
xchg
in
push
and
pusha
jmp
jns
sti
test
enter
js
es
(bad)
ja
imul
jbe
mov
add
inc
je
sbb
or
dec
dec
cdq
dec
call
test
ror
outs
mov
and
imul
or
cmps
xchg
dec
imul
xchg
addr16
dec
xor
xor
arpl
(bad)
int3
xor
dec
xor
pusha
mov
mov
and
movs
cli
dec
pop
and
cli
xchg
sbb
mov
repnz
cli
je
stos
in
enter
scas
xchg
push
leave
pop
cli
push
cli
dec
pop
and
cmp
jb
mov
repnz
add
sbb
nop
stos
in
adc
or
push
leave
add
cld
stc
dec
pop
and
stc
sub
mov
stos
in
repnz
int3
stc
scas
xchg
push
leave
(bad)
stc
mov
dec
pop
and
repnz
pushf
stc
xchg
stc
leave
stos
in
mov
test
and
stc
je
xchg
mov
fs
push
repnz
stc
push
stc
push
leave
stos
in
stc
inc
stc
cmp
and
stc
sub
jns
mov
stc
in
repnz
or
and
stos
add
cld
movs
cdq
push
hlt
dec
es
cdq
dec
call
test
call
les
mov
pop
mov
lods
cdq
dec
call
test
call
test
jl
cdq
dec
call
add
scas
xchg
push
pop
clc
push
clc
xchg
mov
inc
clc
push
repnz
clc
xor
push
leave
stos
in
clc
and
sbb
and
clc
or
jns
mov
mul
push
repnz
imul
not
neg
test
int3
test
idiv
mov
(bad)
xor
stos
rol
ds
movs
xchg
or
push
das
nop
pop
nop
cld
or
or
nop
pop
nop
in
or
push
pusha
xor
xor
int3
retf
or
push
inc
mov
or
rol
aaa
inc
xor
mov
or
dec
in
or
dec
or
dec
ins
dec
mov
mov
aam
mov
fcom
fsub
cmp
out
fdiv
dec
cmp
out
neg
mov
in
sub
clc
xor
xchg
cvtdq2ps
or
aaa
adc
int3
cmp
test
int3
adc
pop
cs
nop
adc
lods
cmp
scas
repnz
aam
adc
push
or
inc
cmp
stc
add
jmp
js
pop
call
fchs
fwait
sbb
in
inc
pop
dec
mov
fadd
(bad)
sbb
mov
adc
mov
sub
push
jmp
mov
mov
xchg
sbb
inc
push
sbb
sbb
shl
add
mov
aam
mov
dec
fsub
push
cs
addr16
and
push
jno
sbb
and
sub
arpl
stos
mov
and
push
repnz
(bad)
pusha
push
or
in
add
movs
repnz
and
dec
mov
scas
cld
shl
mov
in
adc
loop
rol
mov
add
loope
lods
cmp
xor
add
inc
xchg
xlat
(bad)
int3
je
add
leave
repz
enter
push
in
test
aaa
xor
xor
inc
xchg
xchg
add
adc
fs
pusha
pushf
pushf
push
adc
fdiv
or
test
sub
mov
or
pop
lods
jecxz
mov
mov
mov
int3
jo
pop
pop
xchg
ja
cwde
inc
psubd
push
jns
imul
add
mov
in
das
or
mov
in
mov
pop
pushf
fld
adc
sub
xchg
and
jne
call
mov
xchg
mov
mov
pop
lods
adc
or
iret
inc
push
imul
out
and
or
sub
and
aaa
fs
xor
dec
pop
addr16
das
pop
retf
cmp
cmp
sbb
sub
fcomp
push
mov
fiadd
loopne
pop
sbb
retf
and
xor
gs
nop
push
pop
clc
cs
int3
test
bound
fsub
xor
jge
xchg
pushw
call
fimul
xor
int3
aam
iret
pushf
daa
movs
cmp
sbb
lods
daa
imul
jne
and
mov
or
xchg
cmp
es
int3
sub
push
add
retf
mov
popf
je
in
dec
xor
sbb
mov
sub
cmp
jno
dec
test
nop
pusha
ret
outs
push
pop
xor
xor
mov
cmp
mov
sub
cwde
js
add
mov
pop
and
stos
sar
or
adc
ins
pop
dec
cmp
mov
sbb
(bad)
cmp
xchg
pop
cmp
(bad)
js
xchg
fist
gs
and
add
xchg
sub
dec
xchg
loope
or
adc
in
nop
inc
mov
or
loopne
repnz
pusha
jmp
leave
stos
in
pop
(bad)
fdivr
lock
xchg
push
push
call
push
dec
xchg
mov
cmps
inc
add
inc
js
jb
fs
inc
enter
nop
push
dec
inc
leave
sub
and
xor
sbb
dec
mov
xor
test
inc
leave
push
sub
push
jb
sbb
es
inc
leave
and
or
and
or
or
and
or
or
push
sbb
sbb
or
or
sbb
or
or
sbb
or
or
push
adc
adc
or
or
adc
or
or
adc
or
or
push
or
or
or
or
or
or
or
or
or
or
push
add
add
or
or
add
cmp
test
xchg
pop
pop
nop
pushf
dec
xchg
test
mov
enter
aas
mov
add
and
mov
in
mov
add
or
push
dec
or
mov
pop
loopne
jl
imul
adc
jg
sbb
in
cmp
mov
(bad)
jb
sbb
loopne
add
sbb
sbb
pusha
cs
lea
mov
mov
fstp
sbb
fwait
lock
or
or
mov
add
imul
and
adc
lock
sbb
pop
pop
push
bound
sub
pop
sbb
cs
xchg
cwde
arpl
aas
xlat
pop
fldenv
xchg
lock
cmp
jnp
push
push
mov
push
cmp
retf
jl
nop
retf
adc
test
dec
scas
loope
and
jb
add
loope
cmp
std
dec
repnz
in
inc
not
aaa
sub
jge
cmps
mov
adc
sbb
daa
rcr
xor
cmp
sbb
and
jb
in
dec
cmp
pop
dec
push
test
dec
ret
and
pop
push
jns
mov
push
sbb
mov
xchg
retf
cmp
xor
sbb
mov
es
cdq
in
adc
add
dec
cs
pop
and
xchg
retf
and
and
leave
fisub
mov
mov
xor
dec
or
cmc
xchg
cld
or
dec
cmp
sub
mov
pop
cdq
mov
cli
sbb
xchg
sbb
xchg
mov
xchg
add
daa
cmp
and
adc
mov
push
cmp
and
mov
fild
enter
jmp
xchg
std
retf
adc
inc
std
push
pop
repz
neg
lea
arpl
jl
push
in
xchg
or
pop
shr
xchg
jg
in
cmp
or
(bad)
je
fcomp
adc
mov
test
push
cmp
cmp
inc
mov
shr
push
adc
mov
mov
xchg
sbb
jmp
sub
pushf
in
xchg
cmp
nop
xchg
sbb
xchg
dec
int3
or
in
xchg
push
out
test
push
shl
pop
mov
mov
inc
cwde
or
pusha
dec
xor
daa
jmp
lods
daa
imul
push
push
ds
int3
in
test
inc
mov
shr
loopne
mov
pushf
xor
(bad)
pop
cdq
sbb
mov
cdq
shl
cmp
les
add
push
cmp
in
mov
shr
retf
mov
mov
fcom
repnz
sub
int3
jmp
cwde
out
(bad)
loopne
iret
cmc
add
out
pushf
sub
pop
cmp
sub
jb
ja
and
xor
fisttp
inc
xor
in
sub
in
pop
mov
in
dec
pop
hlt
mov
pop
add
popf
imul
(bad)
jecxz
adc
sub
adc
mov
sub
aad
mov
jo
jns
pusha
clc
movs
(bad)
push
jmp
cmp
xchg
dec
add
jbe
stc
test
int3
sub
je
sub
retf
and
pusha
jl
mov
leave
nop
add
ror
xchg
fsub
dec
add
and
xchg
clc
add
cwde
in
nop
sub
add
pushf
jbe
arpl
pop
jecxz
or
fwait
dec
mov
nop
out
es
xor
retf
test
push
mov
cmp
inc
sub
jb
in
inc
pop
dec
dec
dec
push
test
jb
and
xchg
sub
movs
pop
jns
or
adc
popa
mov
xchg
dec
fsub
dec
ds
cmp
mov
lods
mov
inc
lds
sbb
cmp
xor
mov
ds
or
test
inc
nop
movs
push
dec
push
es
and
push
inc
add
retf
and
pop
inc
pop
nop
leave
and
gs
loopne
fs
cmp
enter
iret
or
inc
popf
inc
call
push
mov
mov
movs
dec
pop
lods
movs
dec
pop
push
jnp
push
xor
loopne
push
out
push
fwait
in
es
and
mov
loopne
pop
inc
pop
or
test
jb
fwait
dec
push
mov
test
push
rol
cs
mov
pop
arpl
cmp
int
sub
xor
and
out
inc
push
add
mov
adc
sbb
sbb
and
pop
sbb
shr
in
xchg
push
jo
pop
sbb
dec
repnz
out
xor
sub
(bad)
dec
fsubp
and
dec
push
jmp
clc
dec
cmp
cmp
xchg
imul
push
repnz
sar
xchg
jae
dec
mov
dec
jb
xchg
es
jno
cmps
jmp
aad
fistp
pop
icebp
nop
sbb
daa
je
mov
repnz
repz
dec
ficom
mov
les
sub
ror
icebp
mov
and
inc
rcr
sbb
rol
repz
sub
test
and
mov
cmp
dec
fucomp
jo
mov
inc
iret
xchg
push
in
dec
cmp
es
cmp
push
xor
mov
xor
jmp
fs
mov
dec
scas
pop
jl
xchg
cmps
add
in
nop
dec
mov
mov
jb
retf
sbb
adc
and
sti
rcl
add
inc
and
sbb
xor
push
sub
xor
pop
mov
nop
outs
add
or
adc
pop
jl
adc
jb
nop
push
fdiv
xchg
or
xor
add
ret
les
and
pop
test
xor
pop
test
test
inc
inc
test
dec
dec
test
je
test
push
js
pop
test
test
add
sbb
cli
pop
mov
mov
(bad)
(bad)
and
and
and
pusha
fs
and
push
in
je
in
in
jl
and
rcr
and
in
jae
jmp
dec
mov
in
in
lods
cwde
in
in
pushf
movs
in
in
test
in
in
mov
in
in
mov
and
enter
and
(bad)
in
in
rcl
in
in
fcomp
in
in
loopne
sbb
inc
sar
adc
jns
loop
jecxz
push
test
cmp
cmp
jmp
ficom
ret
jge
push
jge
mov
xchg
sbb
movs
in
rol
or
pop
dec
mov
push
cmp
dec
movs
adc
inc
aas
ret
daa
jle
xor
pop
push
mov
fsubr
add
nop
out
sbb
fcom
loopne
lock
dec
push
cmp
cmp
mov
imul
pop
sbb
outs
int3
sbb
in
pop
cmp
adc
sbb
mov
mov
xchg
repz
xor
in
and
add
mov
and
and
gs
out
sbb
pop
daa
cmp
lahf
sbb
mov
test
sbb
and
(bad)
je
cmp
xor
ss
adc
mov
outs
mov
sbb
xchg
cmp
jb
adc
push
fild
test
push
in
pop
std
sub
mov
adc
inc
gs
arpl
sbb
sbb
add
nop
sbb
enter
nop
int3
rcl
push
nop
add
fsub
sub
add
jmp
loop
pop
(bad)
push
ror
pushf
sub
sbb
ins
inc
jno
pop
in
das
in
mov
movs
sbb
pop
or
loopne
sbb
mov
xor
dec
adc
das
cmp
mov
pop
lahf
mov
mov
jb
pop
jb
inc
inc
pop
jb
pop
dec
dec
push
and
jb
push
pop
cs
popa
pop
punpcklbw
adc
pop
test
mov
push
enter
int3
mov
cmp
and
cmp
fs
mov
movs
pop
cmps
cmp
push
imul
pop
hlt
push
in
push
cmps
mov
xor
inc
xchg
int
sbb
loope
xchg
pop
mov
jecxz
movs
adc
sbb
lock
inc
fadd
inc
xchg
inc
jno
test
jmp
cmp
push
jb
scas
sbb
pop
jl
cmp
clc
mov
mov
dec
xchg
daa
mov
pop
mov
mov
fadd
mov
adc
mov
xchg
mov
adc
lock
adc
xchg
mov
imul
jp
xor
das
mov
in
sti
add
popa
sti
push
cmp
push
int
push
ins
jge
aas
sub
leave
in
fldenv
add
or
xor
aam
or
xchg
(bad)
dec
xor
sbb
stc
adc
ror
and
or
mov
cmp
inc
sub
adc
cmp
addr16
popa
mov
jnp
xchg
stos
pop
add
or
pop
pop
push
iret
repz
addr16
mov
lods
and
sahf
out
xchg
ins
sahf
out
in
(bad)
lods
adc
iret
repz
dec
sbb
cmp
scas
add
and
jns
out
inc
push
push
sahf
out
lods
mov
cmp
scas
add
sub
iret
repz
fwait
cmps
mov
jns
iret
repz
sti
mov
and
jns
out
inc
bound
iret
out
sahf
call
cmp
repz
dec
pop
je
repz
repz
out
sahf
int
mov
sbb
xor
inc
push
jb
test
fwait
out
ret
fdivrp
mov
and
xor
ins
mov
repz
xchg
scas
retf
mov
out
sahf
add
jns
out
jne
fwait
mov
repz
out
repz
adc
iret
aaa
dec
pop
push
cmp
mov
(bad)
jns
int
icebp
cld
mov
xor
jns
out
sbb
fwait
out
mov
adc
iret
repz
ins
mov
repz
(bad)
mov
sahf
out
xor
push
jno
out
sahf
mov
cmp
out
icebp
std
mov
cmp
repz
addr16
repz
jle
mov
out
cmp
mov
jns
out
push
pop
js
scas
rep
sahf
out
shr
mov
cmp
cmp
call
rcr
out
sahf
int
repnz
mov
jns
out
rcr
call
mov
shl
xor
repz
lock
out
sahf
out
and
inc
push
popf
out
sahf
pusha
jo
nop
mov
pop
mov
inc
out
sahf
out
pusha
jo
nop
sahf
out
sahf
mov
lock
rep
jmp
inc
out
cmp
repz
and
mov
push
and
inc
pusha
or
iret
mov
cli
rep
mov
or
adc
cmp
data16
lock
and
loopne
add
push
fwait
out
sahf
jo
mov
lock
repz
cmp
sub
sub
cmp
jbe
mov
sub
sub
jbe
cs
into
repz
inc
test
test
movs
push
and
stos
out
iret
rep
stos
stos
stos
mov
cmps
stc
in
popa
add
iret
xchg
push
icebp
sub
jge
ins
repz
add
fdivr
mov
jmp
outs
mov
adc
pop
push
cwde
push
push
outs
mov
adc
dec
(bad)
jmp
popa
ins
imul
gs
imul
push
jne
jo
mov
sti
outs
jb
gs
gs
es
jl
mov
push
imul
and
ins
or
mov
push
push
(bad)
jmp
pop
sbb
or
js
nop
sub
xchg
xchg
sub
ins
fdiv
push
hlt
fwait
push
jle
aas
mov
ins
fstp
push
call
ss
inc
and
xchg
cld
pop
add
inc
(bad)
cwde
pop
loope
repnz
in
gs
dec
adc
pop
lods
xor
bnd
add
and
(bad)
add
lahf
std
sahf
jg
push
push
cld
inc
ins
fs
popa
dec
mov
(bad)
sti
ficom
add
in
push
jae
xchg
or
inc
outs
clc
mov
leave
aam
xor
scas
das
mov
cmp
inc
cmps
es
test
into
fiadd
sldt
xchg
mov
and
nop
test
fwait
int
stos
scas
stos
sbb
inc
and
ja
xlat
mov
imul
pop
neg
mov
jbe
or
popa
xor
pusha
clc
mov
aaa
into
sar
pop
sbb
adc
and
std
popw
cmp
les
out
es
pop
ss
inc
das
maxps
pop
cmp
inc
add
(bad)
movs
dec
add
cmp
cmp
jle
add
dec
jb
fld
and
arpl
cs
mov
push
mov
pop
jb
neg
jnp
inc
pop
outs
ds
push
jb
imul
loope
push
push
ins
mov
pop
inc
add
jo
outs
addr16
dec
push
mov
aaa
or
loope
imul
push
div
push
dec
out
lods
popf
out
fld
arpl
daa
ja
lea
inc
push
jo
lock
je
jns
inc
or
jns
jae
ja
(bad)
xchg
ja
imul
add
das
lock
nop
mov
jle
jb
add
in
jne
pop
das
push
dec
popa
inc
inc
jmp
cmp
inc
sub
jne
stos
xchg
outs
icebp
fidivr
inc
cmps
ins
bound
jne
imul
gs
ins
imul
jbe
add
outs
and
popa
ins
ins
bound
imul
div
loop
dec
cmp
pop
pop
cmp
or
mov
aaa
aad
cmps
inc
dec
xchg
push
cmp
push
jb
addr16
jecxz
dec
in
mov
push
push
or
jb
push
dec
dec
popa
outs
addr16
inc
aaa
lock
inc
pop
out
sub
fwait
sub
mov
xor
push
add
xchg
push
cmps
retf
pop
sbb
pop
rcl
jnp
push
lods
xor
test
push
mov
mov
(bad)
fild
xchg
push
push
mov
fsubrp
push
loope
(bad)
fsubr
xlat
fwait
addr16
cld
push
fistp
jno
rcl
jmp
imul
fnstenv
ret
lds
push
xchg
lods
jmp
bound
les
push
xor
fwait
jecxz
daa
scas
sub
loope
xchg
sahf
lahf
addr16
jl
adc
add
in
pop
loopne
xor
mov
cmps
call
adc
cmp
jecxz
mov
sbb
jae
out
mov
jecxz
jecxz
pop
push
push
mov
mov
jp
das
jb
pop
ja
repnz
cmp
arpl
adc
(bad)
xor
das
xor
mov
and
outs
sbb
ja
jb
add
fstp
adc
xor
push
test
push
pcmpgtd
cmp
test
cmove
call
test
shl
mov
stos
mov
shr
pop
aaa
pop
paddsb
gs
shl
xchg
push
sti
xor
shl
(bad)
data16
add
(bad)
int
push
shl
sub
iret
imul
cmp
ret
push
into
iret
sbb
fmul
test
int3
sbb
jbe
xchg
push
cld
sbb
stos
fiadd
jmp
mov
repz
cld
fs
stc
xor
fiadd
outs
add
imul
cmp
pusha
cli
inc
fld
fadd
and
in
stos
fdivrp
pop
xchg
ins
cmps
inc
cmp
in
dec
js
adc
jns
daa
mov
xor
ds
pop
adc
int
repz
out
imul
int
call
inc
push
push
imul
and
iret
repz
arpl
jp
movs
leave
sahf
out
cmp
bound
cmp
cmp
out
cmps
iret
hlt
arpl
push
repz
repz
push
mov
enter
push
test
xchg
mov
ins
push
iret
xchg
dec
add
push
jg
and
lock
mov
(bad)
cmc
push
dec
lahf
jb
xchg
mov
sbb
lock
shl
scas
sub
mov
xchg
pop
pminsw
mov
std
push
adc
push
xor
scas
nop
call
lds
shr
scas
out
mov
add
dec
push
mov
dec
test
fdivp
std
and
popf
fild
pop
xchg
fsub
fbstp
add
das
push
and
call
pop
jmp
add
jl
call
subps
xchg
or
in
adc
out
push
adc
inc
das
pop
push
pop
outs
dec
je
ins
jns
(bad)
hlt
mov
mov
enter
adc
push
arpl
test
rcr
sbb
sbb
aad
scas
in
or
push
jmp
(bad)
fucomp
and
push
jb
sbb
inc
(bad)
pusha
add
sbb
inc
push
push
xor
stos
add
in
or
pop
inc
mov
ins
rol
ja
pop
(bad)
ret
pop
xchg
out
in
xor
xlat
xchg
pop
orps
cs
push
or
push
jnp
lock
push
sti
dec
sub
dec
cmp
repz
or
and
cmp
repz
mov
out
sahf
out
cmp
call
hlt
(bad)
std
inc
jbe
cmp
in
adc
iret
(bad)
xlat
mov
mov
out
ins
ss
mov
int
cmp
movs
or
lods
movs
int
ins
sahf
popa
mov
cmps
mov
pop
mov
push
mov
int
fldcw
jmp
ss
mov
int
cli
(bad)
mov
mov
mov
dec
xor
pop
or
jl
(bad)
test
cmps
stos
fcmovne
push
jecxz
dec
mov
fsin
jo
(bad)
adc
cmc
dec
push
pop
cs
sahf
das
inc
push
leave
inc
adc
pop
out
fistp
dec
push
and
inc
adc
sbb
inc
push
cs
jg
(bad)
sbb
adc
push
imul
sti
pop
adc
adc
loop
out
push
ret
push
xchg
in
dec
pusha
imul
inc
mov
add
mov
mov
mov
into
fs
add
adc
stos
add
adc
lea
sub
shl
fdiv
or
sub
adc
pop
push
add
add
mov
jo
outs
outs
outs
arpl
push
sbb
fld
xchg
sbb
push
movs
jge
ins
xchg
add
add
push
push
or
mov
or
inc
cli
push
push
neg
shr
aaa
push
pop
push
push
dec
ss
scas
mov
push
aaa
test
mov
test
add
jo
sahf
out
pop
ds
push
ins
pusha
pop
dec
loopne
out
cmp
sbb
dec
and
enter
dec
and
pop
repnz
push
add
lock
pop
push
jmp
enter
sbb
cld
pop
test
mov
add
and
push
arpl
cld
(bad)
sahf
outs
push
jae
inc
or
jo
pop
not
lahf
pop
outs
mov
ret
dec
int3
inc
sbb
xchg
out
fucomi
push
push
adc
in
sbb
pop
mov
mov
sub
xor
into
int
fxch
das
out
dec
push
loope
loop
loope
mov
cmp
xchg
mov
mov
dec
or
jbe
and
es
fld
cwde
out
iret
es
into
sub
xchg
out
ss
add
pop
out
fnstcw
and
sub
add
sub
retf
jnp
(bad)
das
sbb
dec
ss
jbe
inc
cmp
dec
in
(bad)
fmul
push
mov
ror
push
mov
cs
add
aaa
arpl
ins
ins
inc
popa
jb
push
out
(bad)
imul
outs
js
push
fbstp
dec
in
adc
cld
shl
push
je
imul
scas
nop
sub
xchg
mov
je
repz
pop
scas
inc
push
dec
mov
push
add
mov
and
adc
jns
jns
xor
loop
sbb
xor
adc
cmps
inc
popa
jnp
add
add
add
and
repz
dec
push
dec
xor
push
push
add
out
cmp
inc
nop
rol
push
in
mov
mov
cmp
nop
adc
and
sub
stc
das
(bad)
mov
inc
dec
dec
xchg
pushf
xor
xor
stos
push
dec
push
cmove
repnz
add
fld
adc
sbb
stos
adc
inc
add
xor
inc
push
out
adc
iret
mov
cmp
ds
js
mov
sub
pop
pop
inc
push
addr16
push
call
stos
and
gs
je
popa
jo
mov
outs
outs
je
jb
jae
inc
xchg
inc
aas
imul
dec
inc
jno
add
ja
test
aas
sahf
ins
imul
jae
jb
(bad)
addr16
outs
jne
push
test
and
adc
sbb
ss
repnz
adc
aaa
int3
rcl
cmps
mov
fbstp
or
in
test
nop
pushf
xchg
mov
push
fcomp
push
cmp
sar
cmp
xchg
call
sbb
repz
(bad)
aaa
adc
pop
xor
imul
push
lods
cmp
int
push
cmp
cmp
cmp
rep
ds
fild
cmp
idiv
outs
test
pop
ror
dec
sahf
adc
mov
add
sub
ins
sub
inc
mov
or
mov
cmps
pusha
pop
add
adc
push
sahf
cmps
sub
push
mov
pop
pop
pop
aaa
add
add
inc
cli
js
push
xor
pop
or
xor
test
and
das
iret
daa
inc
imul
ret
dec
dec
dec
mov
ins
xor
ins
add
mov
inc
out
lds
dec
data16
test
sub
jae
dec
arpl
sbb
das
outs
loopne
stos
jle
rcl
and
xchg
arpl
test
loopne
test
mov
sub
dec
mov
adc
mov
gs
inc
pop
jo
ret
imul
mov
mov
ja
xchg
jo
sbb
jo
and
mov
mov
fs
push
fidiv
sub
jae
push
scas
adc
dec
(bad)
fisubr
pop
pushw
bound
inc
jg
(bad)
fcmove
dec
popa
pop
ja
loopne
dec
pop
fisttp
push
push
mov
push
pop
adc
in
mov
outs
pop
repz
or
xor
outs
lods
test
inc
bound
sahf
out
mov
or
sahf
int
ins
pop
dec
mov
ss
mov
out
sub
ret
cmp
rcr
stos
int
ins
out
out
push
std
push
pusha
cmp
popa
jbe
jmp
pop
xchg
xor
(bad)
mov
out
mov
cld
scas
mov
pop
and
xchg
cmp
adc
jmp
imul
aaa
je
mov
out
iret
popf
jge
mov
xor
mov
push
outs
jb
push
outs
jne
push
js
(bad)
test
jmp
sub
outs
imul
outs
outs
inc
mov
jbe
daa
inc
js
dec
gs
outs
jb
inc
fs
in
sub
outs
jae
outs
popa
sti
mul
dec
jo
je
popa
jmp
mov
or
es
aam
push
sti
and
wbinvd
lahf
adc
loopne
out
inc
fwait
mov
jnp
jo
jne
gs
ins
jbe
jae
sub
pushf
xchg
call
jl
mov
mov
pop
jnp
out
fisttp
movs
cs
or
push
out
mov
push
je
mov
sahf
idiv
test
pop
cdq
fstp
test
test
xchg
idiv
out
xchg
cmp
mov
jb
and
push
sbb
add
and
and
hlt
and
or
inc
loopne
test
dec
gs
jo
aas
sbb
loop
push
imul
clc
add
add
sub
pop
push
push
out
cmp
push
mov
clc
push
out
or
ins
lock
mov
aas
xchg
pop
cmp
in
push
xchg
jg
jp
xor
xor
xor
and
enter
repnz
pop
pop
add
and
seto
pop
cs
sahf
sub
mov
stc
jb
sbb
mov
das
loopne
add
and
in
lds
sub
add
das
or
mov
das
sbb
test
push
pop
in
add
mov
das
sub
loopne
mov
jg
sbb
enter
mov
jns
(bad)
outs
pop
outs
inc
jle
inc
xor
add
cmp
loop
scas
add
inc
add
add
imul
jnp
outs
push
aad
push
das
es
mov
mov
arpl
ins
out
mov
sub
lods
fistp
addr16
scas
pop
ja
call
push
xor
shr
shl
push
out
or
mov
dec
pop
push
add
adc
pop
into
test
or
pop
(bad)
and
or
inc
or
test
add
and
push
push
mov
push
outs
ss
push
mov
ds
mov
mov
repz
adc
mov
jns
add
fnstenv
ds
sahf
mov
cs
inc
clc
int
cmp
jg
add
test
test
cmps
adc
cmp
push
xchg
pop
repnz
and
inc
mov
test
mov
push
push
pop
adc
lea
cmps
outs
jne
repnz
mov
inc
jle
retf
aaa
call
add
jmp
or
int
mov
ret
sbb
pop
rcr
adc
cmps
or
rcr
(bad)
add
adc
sub
ror
ror
sub
arpl
std
sub
and
bound
out
sub
mov
xchg
add
sub
adc
add
clc
js
out
(bad)
and
lock
aad
fild
sbb
aad
add
out
movs
les
sahf
jl
mov
xchg
mov
out
bound
mov
fcmovu
fcmovu
xor
inc
jb
jns
shl
adc
out
(bad)
xor
loopne
ss
and
push
dec
dec
jg
adc
mov
xlat
iret
fldenv
dec
call
push
je
mov
lock
lock
das
out
jne
out
(bad)
dec
js
aam
in
push
xchg
das
in
(bad)
fidivr
sar
jo
fwait
das
in
aad
cli
push
adc
add
inc
js
(bad)
jnp
xor
and
rol
iret
and
cli
add
push
adc
push
js
jo
jb
daa
push
push
push
push
loopne
rcr
push
(bad)
mov
xchg
add
inc
mov
imul
mov
inc
inc
push
pop
mov
sbb
gs
push
sbb
pop
dec
test
sbb
sbb
sar
aaa
push
jo
jo
out
push
out
and
push
rol
mov
and
adc
test
das
and
sub
outs
inc
data16
mov
stos
aas
loope
mov
mov
ins
mov
iret
xor
aas
push
xchg
fsubp
ins
call
inc
push
repnz
call
add
push
andps
adc
scas
xadd
enter
add
mov
pop
xchg
outs
or
repz
jmp
jg
enter
adc
mov
iret
mov
push
nop
movs
and
adc
add
cmps
cmp
jmp
mov
jb
push
add
or
movaps
pop
fidivr
sub
xchg
int
and
push
adc
or
in
jle
push
inc
gs
jb
jns
outs
popa
lods
xchg
cli
sbb
and
cmp
adc
add
cmp
fadd
sbb
ds
pop
xor
push
dec
xchg
adc
push
es
jb
iret
adc
loopne
jo
inc
dec
popa
jo
je
loopne
(bad)
jno
outs
xor
sbb
mov
pop
push
adc
mov
mov
pop
and
jg
mov
nop
mov
pop
xchg
out
enter
outs
mov
and
lds
jns
ss
rcl
sbb
fidiv
sahf
push
push
push
inc
pop
push
add
repz
idiv
out
push
test
inc
loop
loop
repz
imul
fdivr
out
fwait
add
icebp
daa
cmps
add
add
cld
clc
lock
mov
xchg
div
add
push
icebp
push
sub
add
mov
fwait
mov
retf
inc
lock
aad
sub
inc
inc
jb
imul
fidiv
data16
outs
outs
call
sub
ins
push
add
jae
cli
outs
xor
jo
xchg
outs
arpl
(bad)
ins
inc
xchg
jmp
out
dec
sbb
xchg
(bad)
js
add
jmp
outs
and
pop
mov
sub
dec
jmp
out
scas
inc
ja
dec
fs
jo
jae
into
add
sbb
mov
push
mov
loope
pushf
movs
mov
bound
fidiv
jae
punpckhwd
aas
push
fidiv
imul
push
push
inc
xchg
fs
jbe
outs
shl
outs
sub
call
mov
gs
rcr
ds
inc
xchg
hlt
int3
inc
(bad)
addr16
out
jmp
fisubr
adc
jbe
push
dec
mov
inc
cmp
dec
scas
je
(bad)
adc
pusha
ss
ins
retf
mov
dec
pop
out
pop
mov
mov
xchg
fisttp
push
jb
jl
jmp
das
mov
je
mov
xor
imul
je
adc
inc
fcmovbe
inc
and
inc
xchg
inc
adc
out
cmp
dec
mov
or
scas
jae
mov
mov
lods
ins
shr
mov
icebp
aas
(bad)
(bad)
or
hlt
pop
inc
inc
ficom
fistp
out
dec
subps
jae
jb
mov
aas
je
cmp
jp
daa
push
lods
hlt
adc
inc
out
arpl
jl
xlat
or
adc
outs
and
daa
dec
sub
push
mov
jae
gs
xchg
ret
jle
adc
ror
loopne
(bad)
sub
dec
dec
fbld
push
adc
push
pusha
xlat
jns
push
adc
jg
cld
pop
sub
sbb
push
xchg
push
add
jp
loopne
inc
ds
jbe
sub
bound
push
adc
or
fiadd
jae
fiadd
lock
mul
pop
push
ins
es
push
ja
fwait
int
pop
outs
pop
arpl
neg
ins
(bad)
push
jno
je
cmps
inc
mov
mov
sbb
pop
dec
outs
ret
push
movs
fisub
cwde
xchg
test
xor
movs
adc
xchg
push
dec
(bad)
lahf
fs
cmovo
mov
mov
pop
add
xchg
mov
adc
cwde
push
(bad)
mov
in
into
js
clc
jl
ficom
push
bnd
test
sub
xchg
das
cmp
fild
adc
(bad)
jmp
pop
mov
mov
ins
cs
inc
outs
faddp
adc
mov
out
adc
xchg
sub
ins
data16
inc
mov
push
(bad)
loopne
sbb
pop
dec
mov
mov
mov
iret
pop
out
lahf
out
cli
xchg
repz
xchg
jae
scas
push
xchg
mov
adc
mov
xchg
dec
dec
call
push
mov
das
popa
repz
leave
xchg
movs
mov
test
jnp
adc
outs
cmps
xor
rol
xchg
push
jnp
mov
jns
pop
or
rol
es
nop
push
dec
int3
inc
push
cmp
push
js
stc
lds
in
pushf
enter
cli
das
mov
(bad)
test
rcr
call
mov
cmp
push
adc
add
add
out
aaa
or
sahf
out
add
sbb
into
scas
and
bound
lods
inc
data16
ins
push
lods
sub
or
call
fistp
sbb
push
lods
in
ja
push
pop
mov
pop
enter
scas
inc
mov
mov
dec
cmp
outs
jbe
aad
dec
lds
dec
mov
ret
loope
mov
out
cmc
xchg
adc
sbb
stos
add
repz
out
out
in
ds
dec
rep
pop
adc
dec
les
outs
ins
outs
ds
sbb
test
repz
out
sbb
es
(bad)
xchg
addr16
dec
push
nop
cld
int
fldcw
push
into
sbb
adc
dec
into
popa
xor
fsub
adc
pop
in
xchg
das
mov
xor
sbb
sub
(bad)
hlt
push
addr16
ss
jnp
sub
mov
(bad)
jnp
push
push
shl
mov
sahf
addr16
jb
jmp
fild
push
jmp
out
ss
ud0
mov
jg
rcl
sub
or
mov
ins
adc
aas
push
test
inc
outs
and
adc
outs
out
mov
pop
leave
inc
ret
push
mov
aaa
rcl
arpl
push
retf
jp
mov
xor
inc
mov
push
mov
ficom
push
je
sbb
mov
and
bndstx
rol
adc
mov
push
inc
push
addr16
aaa
add
pop
aaa
dec
lods
ins
add
sbb
(bad)
jo
je
dec
sbb
test
fs
dec
lods
lods
inc
push
xor
inc
push
imul
fidiv
imul
xor
cwde
cdq
mov
or
and
cs
arpl
mov
aaa
push
push
rol
and
push
es
cmps
inc
adc
(bad)
push
aaa
jo
xor
mov
arpl
inc
inc
sahf
sbb
ins
push
sar
inc
and
iret
sbb
mov
push
out
iret
or
inc
nop
gs
inc
or
out
inc
aas
or
outs
inc
or
inc
pop
or
add
dec
push
xchg
sbb
push
outs
outs
nop
pop
repnz
mov
push
ror
cwde
push
gs
rcr
jmp
(bad)
mov
outs
adc
(bad)
adc
and
pop
cwde
aad
push
imul
jae
cmp
and
jo
dec
ret
and
cmovbe
add
int
add
pop
fnstenv
or
js
cmps
arpl
addr16
fimul
dec
dec
ins
out
aaa
repz
int
(bad)
cli
cmp
outs
mov
pushf
inc
add
jbe
xchg
push
push
call
pop
fwait
adc
cmp
fwait
mov
(bad)
outs
ins
sti
mul
imul
xor
dec
fstp
mov
in
pusha
push
jle
retf
mov
loopne
ret
add
jb
out
sbb
add
cs
rol
push
call
cmp
(bad)
pusha
pop
mov
out
sahf
in
push
popa
push
ret
enter
pop
mov
repz
rol
mov
push
bnd
jb
jge
inc
ja
pop
mov
sbb
adc
add
cmp
adc
push
pop
mov
idiv
aas
retf
push
test
mov
cld
mov
lds
js
das
outs
fiadd
mov
adc
adc
arpl
fnstcw
sbb
pop
sbb
out
(bad)
shl
fild
(bad)
out
lock
sub
and
cwde
outs
inc
dec
push
rol
lahf
pop
sub
push
xor
xsave
xchg
xchg
jle
mov
inc
adc
mov
fild
mov
add
stos
icebp
cmps
icebp
push
fld
mov
jae
mov
mov
cs
aaa
mov
in
enter
mov
les
and
ins
cs
jmp
into
fidivr
pop
cmp
push
repz
dec
mov
jg
ds
mov
not
and
push
push
add
sub
adc
fstp
mov
cmp
cmp
addr16
inc
push
push
sub
mov
aas
mov
push
push
ror
fwait
lea
inc
adc
jnp
test
inc
mov
dec
fimul
leave
inc
sub
push
mov
jnp
shl
xor
push
push
jno
sti
inc
jns
fwait
ins
pushf
mov
out
movs
jmp
nop
aaa
movs
repz
xor
mov
mov
mov
clc
push
mov
mov
jge
mov
inc
imul
stos
and
cmp
fwait
in
sub
push
or
jb
cmps
clc
xor
mov
(bad)
ds
mov
data16
mov
xor
int
popf
mov
push
lock
xor
push
cmc
push
jp
push
ss
cmps
inc
pop
adc
pop
sub
cmp
lods
push
fimul
mov
jle
dec
arpl
sbb
ins
mov
xchg
cld
aaa
out
imul
pop
cs
call
adc
mov
jnp
and
pop
adc
fs
xor
add
test
push
xor
push
pop
add
pusha
pop
and
cld
add
xchg
add
mov
ds
add
or
or
mov
in
fisub
add
fld
out
ret
mov
xchg
pop
add
shr
push
cmp
pop
jle
loop
jb
inc
inc
outs
or
lods
pop
or
stos
cmp
ds
sbb
je
test
push
adc
add
jne
cmp
das
aas
adc
cmp
xchg
(bad)
adc
xchg
aaa
pop
adc
sbb
fs
xchg
cmp
xor
adc
nop
xor
adc
push
push
xchg
addr16
xchg
mov
clc
nop
push
imul
aas
nop
mov
mov
add
daa
nop
pop
aas
mov
push
and
outs
icebp
dec
retf
leave
imul
out
test
cs
jp
ins
fwait
xchg
and
std
scas
ror
mov
inc
les
popa
(bad)
mov
and
cmp
cmps
push
push
bound
push
inc
or
push
inc
sub
call
inc
inc
add
out
scas
neg
pop
push
xchg
push
mov
xor
push
in
lods
adc
mov
ins
out
jge
inc
inc
dec
das
pop
cmps
mov
inc
les
sti
sahf
mov
dec
sub
push
adc
daa
push
cld
xor
add
push
outs
jo
jo
add
dec
iret
sub
pusha
mov
not
push
test
jg
and
retf
movlps
clc
sbb
in
dec
(bad)
adc
xor
adc
mov
adc
push
adc
cs
sar
push
jo
fild
aas
adc
and
push
add
push
cmp
das
mov
xor
jmp
push
mov
ds
mov
xor
cmc
mov
adc
push
inc
sbb
pop
sbb
sub
sbb
add
in
mov
pop
(bad)
shl
or
and
add
or
scas
and
or
add
mov
mov
or
adc
loopne
retf
adc
pushf
lahf
in
add
cmp
or
mov
add
adc
or
ret
aaa
das
(bad)
cmp
push
sar
add
or
sbb
adc
das
minps
cs
das
es
test
pop
mov
mov
scas
stc
aad
aad
inc
cmps
popf
xlat
scas
adc
and
inc
jb
invd
adc
leave
neg
adc
aad
sbb
iret
cmp
xor
aaa
dec
mov
mov
mov
mov
iret
push
imul
(bad)
in
into
xchg
push
adc
sbb
scas
div
pop
outs
outs
and
push
mov
push
js
aas
loopne
mov
pop
jo
(bad)
(bad)
jb
push
iret
out
shl
outs
out
mul
call
cmp
call
dec
repz
and
push
je
neg
inc
push
test
adc
adc
stos
xchg
pop
inc
sbb
shl
rol
daa
call
xor
inc
stc
sub
(bad)
sub
jmp
shl
push
mov
mov
jns
xor
sub
push
aas
jo
fisubr
das
xchg
push
inc
rol
mov
adc
adc
push
jnp
ror
cmp
dec
int
dec
stc
inc
lods
xor
dec
mov
push
mov
or
xor
sbb
push
or
imul
add
test
stos
rcr
cmova
test
stos
outs
cmps
jmp
add
das
dec
lahf
das
call
movs
cs
add
dec
add
les
inc
push
arpl
adc
stos
jg
cmp
test
jg
rol
push
out
add
mov
aaa
and
dec
outs
adc
fucomip
push
cwde
push
retf
ficom
push
ins
pop
sbb
or
push
aaa
stos
sti
cmp
inc
inc
jns
gs
mov
pusha
call
fldenv
push
and
ss
push
push
es
das
xor
adc
les
jl
fnstenv
loop
or
push
(bad)
push
mov
cwde
xor
fs
fild
lahf
bound
xor
lahf
lahf
mov
xchg
stos
sbb
xor
sbb
jbe
xchg
aas
sbb
sub
movs
mov
mov
fld
ins
cs
pusha
mov
push
outs
in
mov
sub
push
xor
xor
ror
addr16
dec
sub
cs
scas
call
pop
(bad)
xor
mov
adc
sbb
pop
push
sub
aaa
aas
push
push
or
dec
jb
push
sbb
test
into
mov
push
xor
arpl
push
lods
imul
pop
mov
or
push
das
inc
popf
arpl
mov
jg
inc
cmp
cmp
pop
push
jl
sahf
rep
pop
cmp
pop
xor
sub
push
dec
(bad)
test
cmp
lock
push
push
or
xlat
dec
in
push
clc
aaa
pop
pusha
das
pop
mov
inc
daa
fs
adc
repz
push
and
and
in
jns
cmp
push
pop
enter
dec
inc
dec
push
popa
(bad)
fstp
jns
pop
inc
in
shl
push
inc
js
popa
call
nop
jg
sub
es
popa
fdivr
jg
mov
add
lods
es
mov
repnz
and
push
mov
cmp
push
movlps
and
fdiv
sbb
and
fnstsw
push
add
add
repz
add
xor
in
jns
push
sbb
xchg
cld
add
iret
adc
adc
repnz
nop
adc
add
in
aad
mov
push
out
adc
jno
in
mov
push
test
jecxz
xor
push
outs
ds
mov
(bad)
dec
test
xor
data16
and
mov
jp
mov
jg
push
inc
cmp
cs
jl
jmp
arpl
imul
pop
push
mov
(bad)
call
dec
push
sbb
jae
push
popa
jo
dec
mov
sbb
inc
jbe
gs
jmp
(bad)
(bad)
ds
(bad)
cmp
dec
nop
xor
sbb
aas
pusha
xchg
imul
add
pop
outs
and
jb
(bad)
dec
adc
ss
out
push
mov
add
retf
leave
sub
out
jmp
xchg
sar
pop
adc
mov
lahf
jnp
das
call
pop
outs
xor
pusha
pop
adc
jl
movs
mov
add
rcr
das
ffreep
test
mov
jbe
das
push
ja
adc
xchg
stos
test
data16
cs
rol
in
mov
out
ror
pushfw
aas
(bad)
mov
mov
pop
xor
out
mov
lahf
pop
jp
ds
es
mov
dec
stos
das
inc
pop
scas
(bad)
adc
cs
cmp
push
mov
add
pop
push
cwde
movs
dec
and
cdq
xor
push
push
out
add
xchg
mov
push
push
or
fisubr
dec
inc
outs
arpl
aas
and
or
imul
ja
sbb
je
(bad)
mov
inc
out
call
xchg
das
cdq
js
add
adc
xor
cmp
popf
ror
test
adc
rcr
jl
adc
add
xchg
pusha
push
cmp
in
retf
xchg
jns
imul
int
fnstenv
push
mov
add
cmp
jmp
loope
nop
adc
in
push
fisubr
xchg
sbb
dec
out
movs
xchg
and
aas
mov
cmp
xchg
xor
cwde
imul
xchg
cmp
outs
popa
cdq
ret
pop
das
repnz
pop
xchg
and
push
repnz
add
pop
jnp
jns
add
das
pop
xchg
pop
scas
xor
sbb
or
stos
out
xchg
sbb
jle
mov
mov
call
dec
cmc
scas
dec
and
mov
xchg
pushf
inc
mov
jb
inc
call
fstp
in
sub
in
cmc
ss
in
xor
ins
cmp
in
shr
add
outs
cwde
call
sub
inc
dec
and
add
sbb
mov
adc
nop
adc
imul
sub
mov
adc
mov
pop
popa
addr16
add
leave
clc
or
add
sub
stos
stos
mov
ds
nop
or
daa
nop
push
scas
push
push
xor
mov
or
sbb
or
in
repz
and
out
cmc
sbb
or
pop
mov
mov
push
movs
test
jmp
icebp
jmp
scas
sahf
cmps
and
mov
mov
(bad)
push
lods
and
stos
mov
push
xchg
iret
or
movs
fisttp
jnp
sahf
rol
in
push
mov
add
stc
push
pop
bound
and
push
push
jecxz
xor
dec
and
scas
jns
pop
rol
or
outs
add
cmp
mov
mov
dec
cs
jns
cmp
out
test
test
in
repnz
pop
leave
add
test
in
mov
add
nop
sbb
and
mov
cmps
mov
test
add
adc
fiadd
loope
cmp
add
movs
fidiv
pop
mov
mov
xchg
cmp
push
mov
mov
xchg
mov
dec
xor
mov
sbb
stos
mov
xor
pop
pop
clc
pop
in
add
and
cmp
lahf
test
add
cmc
inc
xor
sbb
sub
or
or
enter
and
aad
ret
and
push
mov
push
rol
inc
cmp
ret
and
xchg
ffreep
paddq
push
ret
mov
jge
push
fsubr
rol
cld
push
mov
(bad)
enter
mov
sub
(bad)
mov
push
jns
mov
shl
jns
cmp
call
mov
rcr
add
cmp
aaa
shl
inc
push
push
xsavec
cmps
mov
sar
aas
add
cmp
inc
sar
shl
ror
add
or
enter
aas
and
sub
rcl
outs
ret
aas
cmp
sar
in
sub
add
add
and
int
(bad)
jns
cmp
int3
(bad)
loopne
repnz
pop
(bad)
inc
enter
ret
push
enter
scas
xor
mov
push
add
xor
clc
aas
lahf
inc
sbb
out
pop
scas
or
push
cmp
jecxz
cs
push
inc
mov
push
ds
leave
sbb
mov
xlat
ret
inc
retf
pop
pop
sbb
shl
aaa
pop
push
xchg
ret
cwde
call
mov
xchg
add
xor
xchg
dec
mov
cmc
pop
out
imul
cmp
adc
enter
loopne
aam
jbe
push
sub
mov
jbe
sbb
aas
daa
and
ja
or
repz
ror
push
or
adc
shl
movups
push
dec
ins
sahf
inc
xor
rcl
popa
idiv
xchg
mov
push
pop
inc
inc
mov
push
or
sub
call
push
fcmovnb
loope
jg
bound
scas
mov
outs
jnp
pop
push
dec
mov
addr16
ss
xor
adc
pushf
adc
imul
cmc
push
push
neg
jnp
fmul
repz
add
fmul
data16
fcom
call
out
dec
add
add
pop
std
jecxz
cli
xchg
into
jnp
idiv
xor
mov
imul
fidiv
xlat
jbe
push
push
push
mov
lahf
fnstcw
into
xor
fcmovnu
fsincos
xchg
fisub
lods
mov
push
xor
push
mov
(bad)
jno
ror
cld
fstp
add
data16
add
push
and
clc
dec
push
adc
data16
stc
dec
fimul
out
(bad)
mov
aad
(bad)
stc
push
repz
(bad)
pop
shr
pop
fidivr
loopne
push
loope
mov
jecxz
inc
mov
fcmovnu
scas
adc
mov
cmp
addr16
jecxz
push
sbb
adc
(bad)
cmp
fs
cvttps2pi
mov
test
add
out
cmp
jbe
and
push
cmc
dec
adc
push
pop
adc
push
jno
out
iret
lsl
cmp
stos
rol
out
mov
add
inc
cmp
jmp
cmp
outs
add
out
jmp
push
mov
pop
out
jmp
push
or
push
xor
ja
xor
xchg
in
pxor
jl
cmp
pop
shl
lea
out
mov
imul
scas
out
inc
cs
icebp
push
lea
jnp
or
and
pop
cvtdq2ps
push
jbe
push
mov
inc
mov
adc
fdiv
sub
jge
out
popa
inc
pop
arpl
pop
dec
mov
jmp
jne
mov
aam
and
outs
aaa
push
jns
mov
int
ins
outs
jge
and
addr16
inc
sbb
in
adc
jns
popa
push
mov
shl
ins
aas
dec
mov
and
es
xlat
dec
jp
outs
adc
arpl
sbb
cmps
add
dec
xchg
jne
xlat
dec
dec
lea
mov
inc
and
pop
dec
or
sub
inc
adc
mov
push
cdq
xchg
cmp
and
nop
out
adc
shl
push
jl
fcom
pop
add
ror
gs
push
add
sub
fwait
inc
fild
jo
ins
ds
mov
fwait
pushf
lods
mov
unpcklps
cmp
push
inc
js
fiadd
sbb
add
inc
mov
repnz
sub
adc
call
pusha
sbb
out
fwait
not
push
jp
mov
mov
pop
pop
sbb
push
xchg
xchg
push
mov
sbb
mov
jg
sbb
jp
outs
int
imul
shl
in
(bad)
mov
ss
out
popa
shr
jp
mov
int
adc
fbstp
test
dec
jnp
fwait
ins
lea
ja
push
ja
cmp
or
imul
push
cmp
xor
pop
aas
test
jae
add
das
adc
das
icebp
add
add
add
push
test
mov
iret
sbb
aad
pop
adc
lds
(bad)
fisttp
adc
push
push
and
ficom
(bad)
(bad)
lds
out
sahf
shr
add
fist
movs
pop
fild
rol
idiv
enter
aas
sbb
stos
add
add
outs
sti
and
iret
cmp
inc
pop
das
arpl
scas
and
xor
ds
fist
in
or
adc
inc
add
add
cli
jmp
add
je
call
or
jg
cwde
test
inc
or
(bad)
call
movs
aas
hlt
add
cs
pop
ins
sbb
or
add
out
adc
dec
pop
add
cmp
jg
and
adc
xlat
dec
push
mov
arpl
dec
jecxz
jne
fistp
dec
inc
not
or
sbb
push
movs
test
sbb
sbb
inc
cmps
les
(bad)
ins
push
sub
mov
ins
pop
popf
pushf
mov
cmp
mov
mov
inc
pop
in
es
ins
mov
repz
fsubr
fwait
neg
nop
mov
mov
mov
fwait
int
jae
mov
retf
sbb
cmp
ss
pop
lock
push
in
push
adc
data16
out
icebp
add
gs
inc
add
cmp
sbb
jbe
bound
mov
ja
aam
inc
jnp
or
or
inc
jae
mov
fimul
cmp
popa
jae
movhlps
push
aam
mov
nop
jp
lock
outs
imul
push
or
scas
fcom
push
sub
sub
adc
outs
iret
scas
mov
fadd
xchg
lahf
pop
repz
lods
(bad)
aas
push
sub
ins
add
loopne
inc
in
push
add
pop
cmp
mov
mov
mov
repnz
inc
jbe
ja
jnp
out
xor
push
clc
push
adc
popf
pop
outs
pop
cmc
retf
gs
inc
ja
inc
adc
jecxz
lock
inc
and
adc
js
add
das
add
push
(bad)
lds
push
mov
and
hlt
gs
loope
stc
jb
pop
adc
das
and
test
or
push
out
dec
sbb
jne
cs
add
(bad)
bound
pop
repnz
lods
in
cs
popa
add
sti
pop
js
or
adc
jo
jb
push
scas
cmp
adc
popa
xor
sbb
add
pop
cs
pop
pop
stos
adc
adc
xor
ins
xor
mov
pop
adc
pop
les
add
push
nop
fucomi
pop
pop
sbb
or
cwde
cdq
mov
mov
das
and
sar
mov
das
push
sbb
js
and
pop
add
adc
iret
aad
das
pop
add
dec
inc
push
das
pop
push
out
leave
xor
and
das
add
cmp
repnz
add
push
push
outs
mov
jbe
fst
fild
aaa
retf
clc
xchg
ds
iret
enter
and
fucom
jo
mov
sbb
or
add
mov
push
pop
add
or
sbb
lock
xchg
adc
or
xchg
out
js
mov
fldcw
sub
ja
or
push
or
aas
and
add
ja
add
(bad)
jmp
pop
mov
aad
aam
inc
mov
xor
pusha
and
mov
dec
adc
(bad)
jmp
cmp
std
out
push
jne
pushf
mov
xor
cmp
xchg
stos
aam
dec
dec
(bad)
cmp
xchg
es
popa
jbe
mov
xchg
(bad)
stos
push
fbld
jns
push
dec
push
fisttp
mov
cmp
push
mov
push
dec
dec
loope
fnstcw
push
push
push
xchg
ror
dec
cmps
test
clc
shr
std
jl
and
adc
movs
add
pop
xchg
adc
arpl
push
pop
loop
(bad)
jnp
sub
pop
out
add
(bad)
(bad)
dec
ss
clc
inc
jle
pushf
inc
test
in
pop
adc
push
ins
add
out
inc
mov
ret
popa
ret
jnp
(bad)
movs
add
push
addr16
and
add
aad
adc
mov
ins
pop
outs
add
fcom
add
add
mov
fs
mov
je
sbb
arpl
push
(bad)
les
and
lock
xchg
push
fcomp
adc
dec
adc
mov
inc
inc
scas
out
cs
push
jae
ss
repz
dec
pop
out
jl
ds
push
daa
loopne
push
and
call
jae
adc
shr
and
push
mov
ja
push
inc
sub
fsubr
sbb
cmp
or
(bad)
push
daa
add
mov
push
push
inc
repz
arpl
mov
ja
jmp
pop
pop
dec
test
out
fisubr
jmp
mov
mov
jmp
mov
pop
ja
jb
dec
add
dec
ud2
jbe
cmp
das
push
jg
pusha
inc
outs
mov
jb
push
sahf
ins
jae
outs
dec
aas
push
jl
mov
jg
jle
push
jo
clc
arpl
call
es
jnp
sysexit
sbb
jg
out
adc
pop
and
push
adc
jnp
mov
inc
xor
jg
and
fcmovnu
jl
add
push
push
push
jl
test
int
fldcw
jle
mov
jno
inc
lahf
inc
mov
push
adc
out
add
push
(bad)
jmp
jp
pop
bound
test
inc
pop
fiadd
jmp
push
stos
(bad)
addr16
or
popf
pusha
or
add
pop
enter
test
mov
gs
in
aam
mov
jge
xchg
push
push
dec
std
or
stos
adc
out
mov
ficomp
inc
xchg
mov
pop
sbb
inc
ja
or
pop
dec
popa
sub
ins
lods
fisubr
fimul
iret
sbb
xchg
mov
inc
pop
push
or
(bad)
and
dec
jmp
pop
push
cmp
ret
daa
pop
fidivr
pushf
mov
add
scas
lods
mov
mov
adc
test
jle
rol
inc
popa
jnp
inc
sub
jbe
test
mov
adc
add
jg
ret
mov
mov
xchg
mov
cmp
mov
iret
adc
push
add
jbe
add
dec
mov
out
jmp
inc
inc
inc
fiadd
(bad)
aaa
pop
ret
daa
dec
inc
pop
mov
test
push
inc
mov
ret
pop
fist
movs
(bad)
test
das
push
ja
mov
mov
push
(bad)
loopne
sub
pop
(bad)
pop
xchg
add
mov
pop
push
push
repnz
push
outs
(bad)
xor
gs
lahf
push
mov
jg
xchg
imul
lock
push
mov
xor
add
scas
mov
sub
dec
into
dec
mov
sub
inc
daa
out
fmul
adc
int3
add
daa
fdiv
push
add
lock
(bad)
and
mov
scas
into
xchg
pop
ret
mov
outs
add
aam
loopne
or
adc
wrmsr
or
pop
push
push
int
loop
and
dec
jmp
adc
lock
or
sbb
mov
mov
xor
add
adc
pusha
adc
inc
adc
in
sub
sbb
int
xchg
push
stos
shl
pop
pop
xchg
das
inc
jne
dec
mov
jl
cs
xchg
pushf
scas
pushf
adc
pop
adc
fwait
mov
cmp
dec
push
jae
push
or
jns
jp
(bad)
lahf
push
and
dec
data16
xchg
cmp
cmps
cwde
outs
mov
pop
test
cmps
mov
inc
pop
mov
adc
fild
es
xchg
repnz
dec
mov
xchg
xor
dec
cs
bound
push
or
enter
addr16
loopne
and
push
sub
mov
invd
push
xor
dec
jo
push
push
loopne
arpl
and
sbb
addr16
ja
lods
xchg
and
pop
pop
adc
call
les
test
jmp
setg
push
jns
pop
dec
mov
in
sahf
inc
fwait
aad
enter
scas
dec
push
dec
or
not
out
push
test
inc
sbb
mov
fsubr
and
mov
nop
pop
mov
xchg
pop
inc
outs
adc
fcomp
mov
mov
fidiv
xor
or
out
xchg
inc
xchg
adc
xchg
ds
and
bound
inc
(bad)
dec
push
mov
mov
dec
test
ja
and
mov
mov
(bad)
mov
or
dec
ins
sar
gs
jns
jb
movs
das
mov
fcomp
add
cmps
mov
lods
pop
in
cmp
mov
lods
je
enter
test
ja
jl
add
mov
popa
iret
push
and
sbb
pop
mov
xchg
and
fmul
adc
pop
sub
jne
out
sub
push
add
and
fistp
sbb
pop
retf
sub
imul
add
cs
daa
jae
inc
cmp
push
in
div
mov
jg
or
outs
dec
push
sbb
jo
mov
ret
jg
push
test
clc
push
iret
xor
dec
scas
add
push
lods
push
cmp
push
push
int
mov
xchg
pop
inc
adc
scas
add
ror
jmp
(bad)
push
stos
push
in
ret
imul
imul
jno
mov
inc
enter
fild
shr
push
and
adc
push
(bad)
ins
ss
ja
movs
in
pop
loop
out
lahf
data16
fiadd
or
ins
pop
inc
out
idiv
push
rcl
sub
int
int3
dec
mov
cs
(bad)
in
mov
add
pop
inc
add
mov
dec
fdivr
lods
mov
pop
jo
lea
rol
pop
nop
pop
cwde
iret
out
mov
movs
inc
add
movs
add
aad
rcr
adc
daa
lods
push
push
cmp
jp
xlat
icebp
fist
cs
add
jle
fadd
jne
cwde
inc
sbb
cmp
fstp
jecxz
add
fist
push
pop
fld
test
ret
repnz
fldenv
rol
add
loope
xor
shr
add
les
idiv
pop
ret
pop
enter
icebp
dec
mov
retf
das
mov
cmps
pop
cdq
lea
std
add
sub
lock
(bad)
outs
mov
imul
push
push
leave
or
shl
mov
aas
add
in
ret
xchg
add
aas
and
xor
data16
adc
xor
cmps
or
ins
rol
cld
adc
adc
pop
pop
test
xor
add
dec
(bad)
push
adc
add
adc
push
push
inc
inc
push
xchg
pop
push
ja
push
ja
push
and
adc
outs
ss
add
arpl
push
ja
pop
int
mov
add
push
je
jae
adc
mov
fwait
ins
jg
push
push
addr16
fwait
adc
pop
sub
jne
jae
pop
sbb
inc
shr
dec
mov
push
popa
ror
test
inc
out
test
jmp
cs
xchg
dec
push
test
add
outs
adc
pop
sbb
mov
das
das
adc
psubusb
add
mov
jns
push
scas
push
adc
jecxz
ss
inc
mov
sub
adc
xor
sbb
push
movhps
jb
rcl
mov
xor
fisttp
popa
aas
mov
push
inc
push
mov
sub
arpl
push
fiadd
mov
pop
push
ins
jg
bound
sub
nop
sbb
inc
add
loope
mov
jo
mov
hlt
cmp
add
js
sbb
in
push
in
adc
mov
and
add
add
jns
mov
or
sbb
push
fisttp
sbb
adc
(bad)
mov
push
scas
rcr
dec
push
xor
ds
cmp
jg
js
inc
jle
push
cmp
push
jo
dec
mov
sub
ins
adc
push
retf
ins
jecxz
ror
or
repnz
js
shl
mov
push
xor
enter
inc
leave
xchg
add
ds
push
adc
add
inc
sub
inc
jmp
push
ds
push
inc
out
inc
movs
mov
aas
mov
xchg
ss
inc
(bad)
sbb
pop
mov
pop
cmovno
pop
ss
fcomp
ret
cli
or
or
jg
add
jg
arpl
mov
idiv
jbe
dec
mov
add
mov
das
shr
inc
or
inc
mov
inc
iret
mov
jecxz
push
gs
popa
arpl
and
or
je
pop
rcr
push
sub
push
iret
xor
push
aad
dec
mov
mov
dec
je
xchg
push
mov
mov
(bad)
jo
and
pusha
push
push
jg
fadd
mul
das
dec
inc
add
cs
pop
cs
pop
add
aas
push
neg
test
aas
cmps
add
inc
inc
fisttp
jmp
lods
ss
dec
pop
xchg
push
push
push
pop
out
das
xchg
inc
inc
repnz
push
fdivr
sahf
push
inc
pop
push
stos
fcomp
test
aaa
push
pop
and
aaa
push
js
std
mov
mov
xchg
and
jae
adc
dec
pop
(bad)
call
lahf
aam
and
xor
and
push
scas
imul
retf
aas
cmp
xchg
cmp
outs
pop
inc
nop
pop
fdivr
rcr
pop
cwde
ds
pop
retf
xor
jge
mov
push
ja
pop
int3
aaa
(bad)
arpl
or
and
dec
ret
imul
push
ror
cwde
pop
jle
add
outs
jmp
and
push
xchg
pop
jnp
test
inc
add
mov
dec
in
jmp
fist
add
sub
sub
pop
idiv
xlat
loopne
mov
into
push
pop
pop
pop
or
jo
pop
or
ret
scas
js
push
inc
cmp
(bad)
push
jb
iret
xchg
call
push
and
hlt
arpl
or
ss
ja
addr16
jl
mov
xor
gs
lock
add
cmp
lock
add
mul
xor
sbb
adc
add
push
and
test
pop
aaa
xchg
dec
xchg
xchg
sbb
icebp
or
rol
add
nop
jns
mov
arpl
jecxz
xchg
sub
push
and
push
mov
pop
in
mov
add
mov
add
mov
fucomip
pop
enter
(bad)
std
mov
mov
add
mov
add
sub
das
or
popa
lods
scas
add
mov
inc
mov
lods
adc
and
shl
add
jnp
aaa
loopne
out
push
lahf
cwde
jo
jo
push
ja
lahf
cld
jbe
mov
ins
movs
add
mov
fcom
cmp
and
sub
inc
inc
and
mov
xchg
mov
mov
not
mov
pop
push
mov
loope
adc
sub
jle
das
bswap
push
and
sub
pop
inc
repnz
inc
repnz
dec
lea
mov
ins
(bad)
out
ja
ja
sub
mov
and
mov
sub
in
xor
push
inc
rcl
inc
out
in
pop
push
test
pop
int
mov
push
inc
jle
mov
call
out
das
add
in
cmp
pushf
int3
sahf
fmul
dec
sub
das
xor
out
enter
(bad)
push
sbb
rol
sub
push
neg
call
shr
push
scas
popf
popf
aam
cmps
add
call
mov
sbb
inc
je
das
fstp
jnp
scas
inc
loope
test
scas
cmp
mov
pop
cmp
loopne
pop
push
mov
cmps
imul
mov
mov
aam
outs
shl
cli
cs
pop
push
call
or
retf
mov
and
aaa
jno
scas
inc
push
outs
pop
jg
xlat
push
sbb
push
arpl
div
and
cmp
(bad)
(bad)
push
stos
idiv
or
jg
enter
ss
or
dec
jle
cmp
cld
mov
inc
xor
(bad)
add
adc
and
stos
leave
or
fmul
out
push
jmp
cmp
daa
je
nop
cmp
and
add
movs
pop
xchg
cmp
enter
sub
loopne
leave
add
dec
jo
sub
call
fld
dec
outs
pop
xor
add
add
add
add
jmp
sub
fs
pop
sub
adc
inc
test
test
inc
cmp
pop
imul
mov
mov
inc
jecxz
mov
xchg
rcl
les
push
inc
add
cmps
je
sub
out
inc
cmps
dec
sbb
adc
sub
ret
mov
xor
jnp
jp
call
mov
je
dec
inc
mov
inc
ins
xor
mov
das
rcr
adc
xchg
add
mov
push
ss
adc
push
jne
inc
inc
das
sbb
pop
pop
inc
inc
repnz
daa
out
pop
fsub
adc
add
push
cmc
dec
out
or
arpl
xor
pusha
jg
aas
int
jge
pop
cmp
mov
xor
inc
sahf
jle
popa
adc
jns
jl
stos
jns
and
and
pop
bound
xor
xor
js
jp
inc
push
repnz
xchg
pop
test
xchg
xchg
jmp
pop
sub
sbb
lods
sbb
cs
xchg
jne
mov
mov
iret
imul
adc
(bad)
fsubr
push
xchg
xchg
mov
sbb
xlat
xchg
mov
jae
iret
pop
jae
loop
nop
mov
jbe
sub
push
jp
pop
je
mov
cmp
outs
fbstp
push
cmps
test
mov
dec
js
jne
pop
cwde
add
inc
ret
or
mov
mov
jmp
jmp
popf
push
mov
inc
mov
inc
sbb
and
test
pop
inc
(bad)
fcmovnu
(bad)
cmp
sahf
xchg
push
adc
add
dec
pop
mov
adc
dec
add
adc
das
pop
xchg
rol
pop
xchg
icebp
push
pusha
add
pushf
popf
sti
bound
sbb
lahf
out
pop
add
add
cwde
pop
out
cmp
sysexit
adc
cmp
cmp
enter
mov
cmps
mov
cmp
mov
jg
cmp
cmp
xchg
loop
xchg
sub
pop
xchg
pusha
iret
cs
push
lods
push
add
push
cwde
inc
shr
mov
mov
loop
fmul
ss
ins
dec
mov
fwait
cmps
mov
and
adc
pushf
dec
jbe
pop
push
retf
pop
mov
enter
mov
dec
stos
dec
sub
cmp
test
inc
push
push
out
(bad)
call
mov
push
das
add
xlat
out
test
or
add
pop
cmps
setbe
mov
add
(bad)
or
cmc
aas
out
mov
in
xor
pushf
mov
jg
outs
add
ror
mov
or
add
xchg
(bad)
mov
add
mov
cmp
nop
pop
pop
mov
cs
pop
call
sub
jns
test
cmps
fdivr
add
jae
je
xor
mov
inc
pop
test
out
std
(bad)
pop
sub
out
dec
fsubrp
xchg
shr
out
sti
push
mov
adc
xor
clc
imul
jae
outs
ja
dec
ror
out
pushf
dec
ss
scas
outs
mov
adc
gs
add
mov
imul
inc
ret
push
test
aas
mov
xor
or
and
inc
fstp
mov
pop
push
jl
adc
sbb
sbb
cs
dec
repnz
ror
push
imul
in
xchg
cmp
sub
es
lahf
mov
sbb
jne
or
jns
sub
push
fsubr
nop/reserved
jl
pop
or
imul
add
xor
push
sub
cmp
push
sub
xchg
sub
iret
test
dec
int3
call
adc
es
xor
daa
xor
push
cmp
adc
lahf
repnz
out
xor
mov
sub
jb
leave
pop
sbb
sub
loopne
push
imul
arpl
or
arpl
pushf
pop
inc
popa
(bad)
in
fwait
cmp
repnz
add
pop
pop
sti
in
add
mov
push
pop
add
push
imul
mov
sbb
ds
shl
mov
push
pop
inc
rol
pop
call
nop
cmp
(bad)
(bad)
sbb
add
addr16
inc
cmp
mov
fild
push
inc
icebp
ds
mov
iret
push
ins
inc
inc
sub
pusha
and
push
mov
(bad)
rcr
jecxz
movs
lea
iret
data16
les
push
cwde
cs
ins
sahf
arpl
cdq
inc
fwait
neg
fcom
cld
push
(bad)
mov
ss
(bad)
cmp
ins
sahf
and
hlt
sar
jnp
sub
sbb
xchg
pop
outs
xor
fldcw
cmps
dec
xchg
pushf
pop
push
or
fmulp
inc
push
push
popa
jb
inc
mov
cmps
scas
mov
(bad)
push
dec
retf
inc
jmp
ss
inc
mov
(bad)
mov
mov
sbb
push
ds
xor
out
jns
push
mov
xchg
xchg
jmp
sahf
in
mov
imul
xlat
sbb
in
int
in
pop
xchg
(bad)
icebp
lock
ds
ja
inc
cmp
dec
ins
pop
int3
daa
adc
pusha
xor
daa
sbb
pop
and
or
popa
(bad)
sbb
add
(bad)
adc
push
mov
nop
or
add
mov
sbb
add
xchg
jg
dec
ins
add
push
xor
gs
das
dec
xor
nop
fld
out
cs
dec
adc
aaa
pop
into
xchg
adc
sbb
xlat
aas
loop
jb
cs
arpl
mov
(bad)
mov
sbb
aas
dec
add
inc
lahf
add
and
xchg
fcom
add
inc
scas
push
lahf
xor
pop
ins
aad
iret
pop
add
push
pop
arpl
mov
ldmxcsr
push
push
outs
call
dec
fdiv
cmp
popf
inc
sub
out
sub
or
repz
(bad)
nop
push
test
shl
cmp
add
sbb
lea
jbe
out
nop
add
and
sbb
xchg
dec
popf
shr
std
or
add
cmp
js
jg
add
mov
jae
sbb
push
pop
bound
mov
xchg
stc
or
push
lock
sbb
ficom
add
push
fadd
push
into
not
mov
jmp
add
fidivr
sbb
add
int
lock
add
mov
aaa
popa
ror
into
push
lahf
pop
fwait
mov
loope
lahf
outs
mov
out
push
lahf
popf
and
test
scas
pop
sahf
adc
push
js
xchg
pop
mov
pop
lahf
cwde
mov
push
cmps
push
and
mov
mov
add
stos
out
add
or
sbb
(bad)
lods
cs
cmp
(bad)
mov
pop
push
cmp
inc
cmp
dec
push
pop
sub
sbb
inc
(bad)
cwde
and
inc
cmp
add
sar
dec
iret
outs
and
nop
ficom
push
jnp
out
inc
push
push
outs
imul
mov
mov
push
or
scas
inc
inc
pop
mov
or
and
push
cmp
add
cmp
jne
je
ins
imul
outs
les
xlat
out
fmul
fdiv
aam
outs
lods
and
add
push
xor
jp
enter
or
mov
fild
rcl
dec
mov
adc
aam
out
inc
and
outs
add
jg
unpcklps
sub
add
adc
aad
push
es
test
sbb
sbb
es
fadd
jle
mov
fstp
mov
sbb
movs
and
sbb
retf
xor
das
and
add
adc
or
sbb
aad
repnz
fdivp
inc
push
sbb
iret
inc
or
repz
or
data16
push
cmc
jle
or
out
jns
mov
ja
clc
xchg
fwait
mov
in
das
stc
mov
xchg
fisub
icebp
xor
dec
outs
jo
ds
push
jns
mov
out
cli
dec
push
and
dec
in
push
mov
movs
stos
(bad)
fs
sbb
inc
dec
das
inc
retf
sub
enter
ins
cld
push
cli
push
stc
fdiv
clts
sub
or
jo
sbb
outs
(bad)
mov
jl
inc
mov
mul
into
out
inc
fadd
sbb
leave
scas
dec
call
push
daa
xor
dec
shr
push
add
seta
and
and
scas
es
push
nop
add
pop
add
add
push
cmp
dec
sbb
enter
dec
mov
sub
push
pop
je
rcl
inc
(bad)
arpl
jge
movs
sbb
pop
adc
ins
lahf
add
nop
pop
in
dec
adc
jge
add
fistp
mov
add
stos
push
popa
adc
fwait
int
outs
pusha
or
adc
mov
xor
or
xchg
ss
and
pop
xor
or
mov
push
sbb
or
jmp
aas
mov
out
shl
xchg
or
mov
mov
mov
sub
imul
cmps
push
ret
pop
jae
sbb
jp
mov
das
mov
addr16
push
fidivr
fs
movs
sbb
jmp
add
sbb
jo
jns
out
push
jb
push
mov
stc
sbb
gs
jae
lahf
mov
push
or
fwait
(bad)
and
cs
mov
add
push
push
in
int
ss
and
mov
jnp
neg
es
and
neg
dec
ds
lea
pusha
outs
add
push
ret
pop
xchg
push
add
add
lahf
bound
mov
daa
cs
pop
add
mov
xor
sbb
xor
test
in
or
push
fcomp
sbb
clc
push
inc
stos
inc
les
sbb
push
scas
sbb
or
aas
adc
add
mov
in
xor
jmp
enter
stos
add
aas
push
cld
sub
(bad)
scas
adc
(bad)
fbstp
sub
sbb
inc
sub
sbb
inc
(bad)
jmp
int3
xor
push
sbb
call
mov
js
dec
fs
dec
jle
cmp
push
dec
mov
fisttp
div
dec
push
test
pushf
repnz
mov
push
ins
retf
mov
jae
dec
jg
mov
xchg
fstp
mov
pop
das
lahf
sbb
sub
sbb
sub
faddp
leave
push
adc
sar
and
sbb
add
repnz
js
div
jbe
aaa
mov
add
fstp
out
loopne
jne
sbb
(bad)
test
add
sbb
mov
add
mov
(bad)
mov
inc
test
jg
ret
inc
hlt
add
mov
push
lods
sar
sbb
add
dec
(bad)
push
les
test
or
push
pop
in
fnstenv
out
inc
dec
inc
mov
jnp
push
mov
mov
push
cs
jg
adc
adc
add
sub
push
sbb
or
xchg
ds
add
sbb
pop
sbb
or
dec
pop
pop
fmul
lods
push
pop
sbb
popa
rcr
(bad)
aam
jbe
das
push
inc
dec
mov
call
pop
or
add
inc
sbb
push
enter
inc
test
mov
shl
push
mov
call
or
rcl
add
cmps
nop
inc
aas
pop
sub
in
or
push
inc
push
cmp
pop
xor
pop
(bad)
(bad)
fistp
push
cs
push
jnp
fwait
neg
dec
push
ret
(bad)
jmp
ins
iret
and
pop
inc
dec
or
xor
rcl
pop
xchg
add
test
push
aaa
stc
add
hlt
rol
or
cmps
add
cmp
aas
inc
cwde
mov
jge
push
dec
adc
dec
jno
mov
je
and
push
ins
loopne
mov
push
pop
cmp
fdivp
push
and
ss
push
jg
push
add
push
push
and
sbb
rcr
(bad)
outs
sahf
inc
sub
pop
ins
lahf
outs
dec
or
add
lea
aaa
push
(bad)
sbb
sbb
loopne
jne
xchg
sar
cmp
dec
cmp
fldenv
jno
push
jb
jns
xchg
push
add
pop
sbb
jg
loop
inc
je
sbb
lods
out
imul
adc
ins
sub
mov
push
gs
xchg
popa
or
lods
mov
fnstenv
je
js
mov
cmp
push
(bad)
ror
fidiv
mov
scas
push
int
jne
ins
shl
jns
jle
test
in
or
cmps
push
push
pop
fbld
xchg
ficomp
imul
or
push
mov
fisub
push
sbb
jle
jmp
test
lds
mov
es
jge
mov
gs
push
retf
push
xchg
ins
mov
jnp
sbb
pop
pop
xchg
or
(bad)
cmp
and
dec
xchg
test
mov
sbb
xlat
fiadd
push
ja
fwait
scas
loopne
lock
mov
xchg
int
jbe
cmp
pop
sar
test
fwait
cwde
js
add
or
(bad)
pop
mov
sub
pop
add
xchg
icebp
dec
imul
leavew
das
jle
mov
pop
fdivr
sbb
mov
xchg
repnz
pop
int
xchg
adc
xchg
and
jge
add
and
das
sahf
adc
mov
dec
pop
rol
sub
ins
sbb
daa
outs
push
push
push
call
sub
xchg
xchg
sub
adc
fisubr
lock
pop
mov
xchg
mov
inc
aas
outs
popf
lea
dec
dec
jl
lock
push
(bad)
movs
and
outs
inc
push
xor
dec
push
jo
fxch
xchg
aam
mov
inc
arpl
inc
addr16
jns
adc
adc
iret
(bad)
ss
repnz
push
add
int3
sub
test
xor
sbb
scas
ja
pop
sbb
mov
sbb
push
push
test
ins
mov
jmp
outs
in
push
pop
push
dec
js
sbb
jp
dec
fnstenv
pop
aaa
outs
and
jmp
aas
jg
pop
jecxz
test
and
and
and
daa
mov
sub
arpl
xlat
cmc
push
add
sbb
ins
sbb
dec
les
push
lea
jecxz
sbb
in
mov
push
and
fsub
add
rcl
(bad)
sbb
das
ficom
and
and
out
sar
nop
xchg
add
out
aam
mov
nop
addr16
jg
jb
rol
and
es
rol
push
repz
or
inc
adc
(bad)
jno
cli
bound
and
push
or
call
or
sub
push
xor
dec
mov
mov
sub
inc
addr16
or
aaa
add
jl
push
jb
sbb
out
and
or
mov
xlat
dec
add
push
sbb
cmp
push
test
inc
sti
(bad)
jmp
shr
add
cmp
and
xor
sbb
add
add
sbb
outs
adc
pop
pop
lahf
sbb
mov
jb
in
je
add
inc
cmp
iret
mov
iret
pop
and
and
in
mov
repz
(bad)
sbb
or
xor
pop
das
iret
and
jl
stc
adc
or
xlat
bound
daa
add
inc
sbb
(bad)
push
iret
xlat
popf
popa
sbb
pop
inc
das
scas
in
in
xchg
xor
dec
sahf
sub
xor
and
out
(bad)
jmp
dec
inc
xchg
cmp
lods
test
out
das
out
das
cdq
pusha
ins
pop
out
das
pop
xor
xor
rol
adc
jmp
icebp
mov
inc
jg
sbb
fsubr
adc
pop
movs
push
test
mov
mov
retf
or
adc
xchg
(bad)
scas
cli
or
xor
push
adc
mov
call
div
out
cs
mov
or
fisubr
dec
xor
dec
and
cmp
xor
and
sub
dec
je
sbb
in
add
les
cmps
xor
ins
or
adc
neg
leave
push
inc
mov
and
push
pop
sbb
sbb
add
add
das
push
bndldx
xchg
dec
and
(bad)
jae
das
popa
add
aas
inc
inc
mov
fisub
pop
push
adc
jns
dec
cs
jmp
sbb
sar
adc
mov
scas
pop
jne
stc
add
sub
sub
pop
jbe
cmp
gs
mov
ss
or
fwait
sub
pop
je
mov
adc
and
cmps
int
ins
xor
sbb
or
jmp
dec
das
and
dec
scas
pusha
fiadd
cmps
ret
les
sahf
imul
cld
fisub
xor
es
ins
aad
retf
push
jb
inc
loop
aad
cwde
cld
pop
rcr
wrmsr
sar
push
add
cmp
lea
xchg
xchg
out
(bad)
xor
sbb
fsubr
inc
push
in
in
test
(bad)
das
(bad)
lods
in
ss
push
push
inc
and
fist
dec
sbb
sbb
dec
lods
mov
dec
cmp
aas
scas
or
mov
mov
inc
mov
mov
(bad)
xor
cld
mov
outs
repz
push
aam
rol
pusha
scas
sbb
fbld
push
fisubr
add
in
ss
js
xor
dec
push
sbb
lahf
loopne
std
xchg
outs
xor
enter
pop
repnz
pop
jl
push
add
add
sbb
add
pop
adc
(bad)
out
pop
adc
jmp
pop
pushf
jg
fdivr
jb
outs
pop
in
sbb
add
or
(bad)
mov
push
imul
sbb
push
inc
fistp
xchg
xchg
mov
cmp
ss
ds
(bad)
push
sahf
sub
cmps
push
push
aas
(bad)
psubusw
addr16
pop
push
aad
push
fild
hlt
adc
es
cmp
adc
mov
je
sbb
sbb
mov
scas
call
(bad)
pop
xchg
xor
pusha
push
jmp
retf
pop
and
pop
loop
jecxz
test
inc
jecxz
pop
aas
ss
mov
repnz
fisub
cmp
add
popa
inc
pop
add
xor
addr16
js
dec
mov
pop
idiv
jno
cmp
and
sbb
sbb
pushf
rol
sbb
mov
sbb
push
push
ss
test
dec
dec
neg
dec
pop
pop
cmp
adc
shr
sbb
pushf
sbb
sbb
inc
cmp
fwait
stos
push
leave
arpl
hlt
callw
dec
ss
add
add
rol
and
pop
inc
or
add
jo
outs
push
(bad)
shr
xchg
loope
adc
cs
fs
pusha
pop
xor
fs
bound
js
das
data16
das
and
and
sbb
gs
ficomp
pop
das
pop
hlt
jne
push
pushw
dec
call
bound
pop
jbe
sar
xor
call
add
outs
imul
in
in
jae
sbb
cmc
and
jns
outs
(bad)
jo
stos
test
inc
push
iret
push
sbb
sub
rcr
outs
test
scas
jbe
dec
and
push
pop
mov
inc
popa
cmp
test
push
out
dec
add
xchg
mov
movs
adc
lahf
mov
mov
sbb
jae
fstp
addr16
push
xor
in
jle
cmp
cmp
scas
sbb
cmp
xchg
cmp
jae
sbb
mov
clc
push
inc
repz
xchg
(bad)
imul
mov
mov
sbb
dec
push
dec
or
aas
sbb
pop
pop
push
push
outs
dec
add
sbb
mov
push
adc
sbb
add
push
test
adc
pop
je
xchg
ins
push
xlat
inc
sbb
mov
aas
sbb
mov
into
pop
push
push
arpl
mov
mov
sbb
shl
dec
push
cs
mov
adc
ret
ret
mov
ror
mov
(bad)
cmps
xchg
jns
inc
pusha
xchg
sahf
popa
push
loopne
push
xor
adc
dec
test
mov
rol
push
push
dec
push
pop
cs
push
mov
jmp
xor
aaa
push
pop
xchg
xor
xchg
movs
aam
jae
mov
mov
jmp
mov
push
lahf
xor
mov
sbb
inc
inc
inc
test
imul
cwde
add
iret
mov
push
(bad)
bound
stos
pop
mov
mov
jae
shr
push
cs
clc
int3
dec
jecxz
or
(bad)
aas
inc
imul
mov
fild
pushf
scas
push
mov
xor
pop
repnz
sbb
adc
xchg
cmp
nop
mov
sbb
mov
nop
fist
sub
push
lahf
into
xchg
and
data16
mov
and
ds
push
sahf
mov
cwde
pushf
(bad)
es
adc
sub
inc
dec
mov
add
cs
or
xchg
xor
mov
pusha
dec
outs
cdq
ja
adc
add
ds
mov
pushf
dec
pop
sbb
sbb
cwde
test
jo
mov
xchg
jo
fnstsw
mov
adc
aaa
jnp
lock
outs
mov
sub
fstp
push
jl
aad
mov
in
add
add
push
(bad)
sbb
pop
add
adc
inc
loopne
jg
retf
stos
dec
not
or
push
mov
mov
aas
sbb
out
stos
nop
and
fld
(bad)
sbb
cmp
int
push
push
(bad)
cmc
or
ss
aas
sbb
adc
lock
jmp
push
push
bound
sbb
into
(bad)
cmp
aas
adc
mov
add
mov
push
outs
xchg
sub
aas
pusha
fld
pop
mov
add
out
scas
cld
out
add
lods
and
mov
lods
or
fidiv
mov
pop
mov
fist
add
or
mov
mov
ret
ss
push
fild
repz
mov
mov
mov
xor
in
ja
ror
jmp
mov
mov
loopne
push
push
mov
sub
and
mov
sbb
inc
shl
pusha
jbe
jg
pop
xor
fld
repnz
or
add
mov
add
jmp
pop
and
ret
pop
in
add
mov
aam
sbb
enter
pop
imul
mov
lods
sub
push
adc
mov
(bad)
mov
stos
ds
lock
pop
sbb
je
push
and
sbb
jbe
adc
sar
(bad)
dec
xchg
push
push
ins
and
xchg
xchg
outs
dec
outs
add
ins
jmp
jg
jae
hlt
shr
stos
test
lods
cs
int3
cmp
add
jns
or
mov
jmp
push
fcomp
cmc
jle
aam
imul
scas
add
push
xchg
sbb
inc
add
test
sbb
dec
bswap
adc
sbb
outs
mov
jns
sbb
cmp
sbb
scas
sbb
add
pop
jmp
sbb
inc
push
add
mov
fisubr
test
ins
push
clc
push
adc
iret
cmp
xchg
cmp
pop
aaa
adc
jmp
push
xchg
xchg
(bad)
pop
mov
das
push
mov
icebp
add
lahf
sbb
push
add
cmp
sbb
add
clc
pop
ror
and
fadd
mov
cld
int
das
jmp
and
nop
add
iret
xchg
dec
and
cs
idiv
pop
sbb
add
push
adc
sbb
dec
cmp
mov
sbb
xor
pop
dec
or
add
jne
jp
mov
(bad)
push
(bad)
ja
and
pusha
outs
sbb
loop
dec
jne
ins
outs
outs
imul
mov
dec
dec
xchg
push
pop
sub
and
leave
int
pop
mov
in
and
stos
cvtdq2ps
or
call
(bad)
and
inc
and
jo
sbb
and
pusha
xchg
cmp
inc
and
lods
aas
inc
inc
dec
fistp
pop
mov
sbb
out
or
retf
and
xchg
add
inc
dec
sbb
push
or
dec
les
daa
dec
lahf
cmovno
bndstx
cmps
sbb
mov
add
in
cdq
sbb
sub
sub
pop
push
xor
and
jne
scas
sbb
inc
nop
cmp
sbb
sbb
imul
and
sbb
repnz
inc
sbb
add
sub
leave
add
sbb
in
sub
push
leave
add
and
sbb
in
xchg
pop
mov
and
rol
pandn
pop
xor
cs
sub
das
sbb
dec
add
jns
sbb
push
push
mov
sbb
jo
aaa
xor
xor
jo
xor
packuswb
add
lahf
ficomp
lods
in
rcr
xchg
int3
cmps
add
aaa
jnp
aam
loopne
sbb
cmp
test
retf
xor
or
nop
out
add
mov
sbb
inc
pop
ss
adc
enter
cs
test
xor
inc
in
sub
cmp
or
data16
sub
mov
xchg
pop
sahf
pop
(bad)
out
imul
das
and
ror
sub
pop
mov
(bad)
mov
lods
add
mov
lods
add
daa
es
je
gs
sbb
xchg
imul
push
loopne
add
repnz
pop
cs
(bad)
push
das
mov
daa
nop
add
add
add
(bad)
jmp
pop
clc
int
sbb
imul
inc
add
sbb
enter
pop
aad
add
inc
sbb
sbb
inc
inc
repnz
sbb
adc
repnz
adc
sbb
pop
in
aas
sbb
add
and
loop
sbb
pop
nop
mov
pop
dec
jmp
ins
pop
dec
ja
push
add
jns
stos
add
mov
mov
enter
addr16
sbb
push
pop
cmp
push
dec
sub
sbb
je
pop
sbb
ins
sub
jge
dec
leave
cmp
fld
gs
add
add
inc
jo
mov
push
ja
jl
push
mov
mov
sbb
push
and
out
sbb
in
dec
sbb
mov
mov
(bad)
in
dec
push
sbb
sbb
inc
pop
jo
and
nop
xchg
inc
xchg
out
sbb
adc
inc
mov
or
mov
sbb
adc
cld
adc
jl
scas
in
cmp
iret
sbb
mov
jnp
pop
inc
push
mov
inc
inc
add
add
sbb
jnp
or
pop
daa
jle
inc
loopne
jbe
inc
cs
mov
push
xchg
aas
push
xor
iret
mov
push
cwde
add
data16
test
gs
cdq
rol
ror
cmp
or
aam
jnp
pop
pop
imul
pusha
imul
je
mov
imul
je
mov
imul
jb
hlt
sbb
mov
mov
(bad)
lods
jo
push
loopne
pop
xchg
out
inc
xor
adc
pop
sbb
lock
mov
mov
stos
xchg
out
(bad)
bndstx
mov
or
jl
sbb
or
jp
pop
es
scas
popf
push
mov
push
imul
add
lods
repz
push
das
and
popf
(bad)
bndstx
mov
sbb
mov
pop
icebp
cmp
rcl
repz
dec
out
cmp
inc
(bad)
es
jl
and
xchg
mov
jp
push
sub
jp
ds
or
mov
test
scas
or
adc
cld
or
sub
mov
pop
mov
pop
cmp
mov
data16
cs
push
add
cmp
out
(bad)
push
gs
mov
aam
jmp
inc
out
inc
jnp
jl
mov
or
cmp
or
les
rcr
push
ror
int
cmp
adc
push
pop
jg
mov
xchg
sbb
adc
mov
jns
fmul
mov
jl
or
cmp
and
into
mov
iret
lock
shl
xchg
inc
adc
sahf
repz
(bad)
mov
fiadd
add
rcr
adc
into
shr
fcom
popa
jnp
das
push
test
(bad)
cmps
das
mov
xchg
ret
out
aaa
retf
fiadd
leave
aam
lds
mov
push
pop
(bad)
sbb
pushf
push
retf
(bad)
movd
xchg
mov
sub
sbb
jl
push
aas
sbb
xlat
das
mov
(bad)
retf
push
into
dec
mov
stos
pop
xor
fist
sbb
mov
inc
enter
movs
add
gs
cli
ss
lahf
mov
jno
das
call
fidivr
or
loope
and
adc
sbb
xor
inc
enter
xchg
sbb
mov
bswap
(bad)
push
pusha
fst
pop
adc
sub
add
and
pop
adc
jle
shl
loopne
dec
das
add
sbb
les
sub
lods
nop
pop
loopne
nop
pop
dec
fadd
pop
movs
jg
add
aad
je
jne
je
sbb
cld
push
repz
pushf
ins
pavgw
test
stc
xchg
into
mov
cmp
movs
push
inc
mov
pop
jbe
lds
fisttp
sub
cmp
sbb
icebp
mov
jg
jmp
xchg
pop
repnz
loope
popa
nop
pop
add
sub
mov
sbb
retf
xchg
loop
push
js
lds
inc
pop
loope
iret
xor
pop
fwait
not
sbb
adc
repz
push
hlt
mov
sbb
fwait
mov
out
push
inc
in
or
xor
jle
pushf
popa
in
ror
and
push
outs
out
pop
add
repnz
ss
jnp
push
mov
sbb
xor
das
mov
jo
push
call
inc
stos
push
mov
push
cmp
ret
sbb
push
ss
sub
xchg
shl
and
or
xor
pop
pop
outs
jl
cmp
loop
jg
and
cmp
add
and
inc
add
sbb
data16
mov
ffreep
xchg
mov
mov
iret
inc
pop
int3
jg
cmp
mov
mov
push
pushf
push
das
add
outs
leave
aaa
ret
push
adc
test
add
lea
loop
add
lahf
ror
loopne
pushw
sub
xor
cwde
int
jns
dec
sbb
cwde
pop
add
sbb
pop
add
or
sbb
push
sbb
adc
add
push
shl
jo
mov
xor
mov
xchg
or
adc
add
sbb
mov
pop
outs
adc
mov
add
push
test
js
jl
adc
xchg
and
sbb
xchg
sbb
enter
test
pshufw
sbb
test
pop
and
inc
add
cmp
push
push
mov
push
popf
into
(bad)
sbb
add
test
sbb
mov
repnz
sbb
enter
and
(bad)
jns
nop
jg
sahf
loope
sbb
fstp
or
sbb
jmp
sub
stos
sbb
nop
xchg
stc
mov
sbb
lock
xchg
mov
stc
bound
sbb
iret
sbb
jmp
inc
cs
ds
jle
lods
xchg
rol
add
cmp
jg
push
mov
fwait
imul
cmp
shl
pop
xor
scas
stos
mov
aas
call
inc
or
mov
jo
cli
xchg
xchg
es
push
mov
bound
ins
cmp
dec
push
mov
jns
mov
int
aas
sbb
inc
add
and
cmps
and
in
int
sbb
add
and
sbb
retf
sbb
sahf
add
pop
sbb
jle
mov
add
push
in
nop
std
sbb
dec
sbb
scas
adc
imul
or
je
cmp
push
push
jae
out
push
fisub
fstp
or
scas
shr
ss
int
jmp
inc
into
sbb
mov
mov
push
mov
jbe
sbb
ror
mov
repnz
add
cmc
pop
inc
jne
outs
dec
imul
cmp
sbb
xor
mov
jnp
push
sahf
dec
cs
pop
mov
fdivp
(bad)
adc
(bad)
pop
repz
xchg
rcl
into
pusha
xor
clc
push
gs
sub
cs
push
mov
cmp
add
arpl
out
mov
sbb
jne
scas
push
pop
fsubrp
jbe
mov
ins
mov
les
cmps
idiv
outs
jmp
inc
push
mov
adc
stos
dec
nop
aaa
xor
push
repnz
jb
rol
mov
and
sbb
mov
mov
bound
cmps
fld
xchg
inc
sbb
sub
pop
inc
and
push
lea
pop
iret
outs
or
add
imul
loope
inc
jp
pop
retf
mov
push
rol
div
(bad)
mov
(bad)
xlat
mov
cmp
outs
mov
mov
pop
and
jmp
xchg
repnz
call
or
loopne
dec
ds
pop
ds
scas
inc
adc
inc
enter
shl
add
push
test
out
and
jo
call
add
jne
out
push
xchg
jno
jb
dec
mov
dec
popa
imul
pop
or
push
ins
loope
push
pop
push
into
(bad)
(bad)
data16
mov
rcr
js
cmc
inc
ins
mov
mov
sub
call
(bad)
idiv
cs
push
int
ins
iret
stc
add
mov
sahf
cmp
in
repnz
ins
push
add
fidivr
or
inc
cli
cs
add
out
cs
push
inc
(bad)
mov
pushf
jbe
and
adc
adc
jg
and
xchg
mov
mov
or
out
push
xlat
sub
inc
in
fistp
mov
sbb
push
jo
push
retf
jmp
imul
(bad)
sbb
sbb
sbb
nop
push
pop
cmp
int
and
push
add
aas
mov
outs
inc
jle
push
or
or
mov
int
sbb
fild
sbb
sbb
repz
push
xchg
adc
inc
les
daa
test
fild
add
add
push
repnz
sbb
jbe
mov
outs
clc
pop
pusha
jne
cmp
or
aad
jmp
and
bnd
cmps
es
mov
xor
hlt
test
(bad)
jnp
push
push
mov
jns
sub
daa
js
in
sub
mov
(bad)
pshufw
(bad)
lods
sbb
ret
nop
xor
and
push
lods
mov
pusha
data16
push
pop
inc
addr16
xor
in
cmp
das
in
adc
fldcw
inc
fld
inc
or
fldcw
push
inc
sub
in
daa
popa
dec
pop
mov
add
lods
pusha
or
sbb
out
test
fstp
mov
scas
push
sub
jns
arpl
pop
or
pop
nop
scas
sbb
push
sub
sbb
sbb
sbb
cld
enter
sbb
sbb
outs
repnz
xor
jg
retf
(bad)
jno
dec
aaa
ins
fwait
xchg
push
push
mov
add
lds
add
aas
test
and
(bad)
and
pop
pop
mov
adc
ja
or
mov
sub
dec
and
(bad)
mov
in
push
push
stc
xchg
aas
sbb
adc
cmp
cmp
iret
add
aam
add
push
mov
push
cdq
outs
inc
leave
sbb
push
mov
outs
pop
xchg
mov
popf
fist
push
cmp
push
outs
fistp
xchg
push
into
add
sbb
inc
xrelease
popf
cs
mov
ins
and
pop
nop
test
aas
imul
lods
pop
push
bswap
push
outs
push
jg
xchg
out
inc
enter
imul
pop
lods
sti
add
cmp
call
cmp
icebp
(bad)
and
es
adc
jne
js
xchg
aas
cs
pop
test
enter
dec
outs
test
aas
add
xor
sub
mov
xchg
loope
mov
inc
mov
adc
(bad)
sbb
bound
push
pop
call
mov
jl
pop
das
push
test
pop
neg
jo
push
imul
jo
dec
aam
dec
lock
inc
pop
fwait
and
push
lahf
cmps
ret
pop
ins
pop
add
push
inc
cmp
inc
jae
jmp
cmp
je
adc
fadd
mov
mov
push
adc
loop
imul
pop
mul
cmps
add
push
or
mov
push
test
into
es
jge
jnp
jns
sbb
inc
push
stc
in
cmp
dec
in
push
jl
add
bound
out
out
pop
push
xor
jne
neg
xor
push
outs
scas
dec
cmp
scas
mov
es
fsubr
push
ss
in
or
sbb
jns
sbb
dec
aam
sbb
call
add
xlat
mov
aas
or
es
mov
add
ror
aad
xchg
add
sub
das
jg
adc
dec
pop
xor
add
imul
sub
or
push
in
test
inc
push
dec
scas
sbb
daa
mov
adc
(bad)
icebp
mov
adc
ins
adc
add
pop
pop
pusha
shl
mov
ds
sub
imul
mov
cmp
mov
sub
dec
dec
and
add
sbb
xchg
cmp
inc
shl
in
(bad)
daa
mov
inc
rol
cmp
shr
mov
adc
xchg
jp
nop
xchg
dec
sbb
add
sbb
mov
es
add
add
popa
jmp
xchg
and
add
test
add
sahf
or
add
pop
xchg
xor
cmp
ret
outs
xchg
dec
das
in
ror
xchg
out
dec
xchg
mov
jmp
hlt
std
aam
jmp
push
bound
pushf
dec
iret
arpl
mov
dec
mov
int
or
movs
add
int
inc
call
mov
sbb
sbb
cmps
dec
test
and
(bad)
or
add
jg
jl
in
push
mov
fistp
sbb
data16
mov
cwde
cmps
inc
push
xchg
(bad)
aaa
das
ins
ss
sub
int3
sar
push
leave
pushfw
mov
ret
adc
(bad)
sbb
mov
dec
leave
out
cs
or
pop
add
sbb
imul
enter
xchg
add
das
je
add
push
sub
sbb
push
or
int
rcr
jg
rcr
sbb
shr
push
pop
cs
rcr
jmp
pop
lahf
inc
fs
jge
inc
adc
pusha
ds
nop
mov
not
js
pop
test
push
sbb
data16
sub
sbb
add
sbb
dec
mov
push
add
inc
adc
add
sub
ret
movs
shr
(bad)
sub
mov
jecxz
jne
xor
gs
(bad)
test
outs
mov
ja
xor
pop
rcl
fsub
push
cmp
push
fsub
fimul
loopne
fist
mov
sar
jle
iret
clc
in
mov
mov
stos
rol
fdivr
cs
je
in
mov
std
in
das
neg
push
jmp
fisubr
out
data16
jmp
leave
add
sbb
cmovno
add
jmp
wrmsr
inc
js
mov
add
inc
sbb
mov
sbb
cmp
mov
sbb
nop
lds
in
xor
jo
push
push
inc
jns
in
push
or
sbb
sub
sbb
xchg
aam
lahf
cmp
(bad)
cld
mov
sub
push
bound
add
sbb
stos
sub
enter
fadd
push
or
dec
mov
dec
addr16
outs
add
outs
push
push
sar
dec
push
push
push
repnz
or
push
adc
aas
rol
cs
inc
inc
mov
iret
dec
fdiv
fwait
mov
pop
cmp
or
inc
push
repnz
or
not
rol
or
nop
or
sbb
or
and
or
jae
add
jle
or
xor
xchg
cmp
pop
pop
pushf
or
and
or
cmps
dec
and
and
inc
das
mov
in
and
mov
aam
das
mov
pop
das
or
and
push
sbb
cmp
loop
sbb
pop
push
fld
movs
jle
call
mov
pop
add
sub
enter
rcr
and
push
jns
aad
lock
into
sbb
push
movs
mov
sbb
inc
sbb
test
imul
jbe
mov
loope
cmp
add
adc
sahf
push
and
push
into
xor
test
jne
add
aas
bound
js
inc
pop
cmps
inc
and
push
fisttp
loopne
or
mov
jae
push
outs
xchg
pop
out
out
adc
push
and
(bad)
loope
fiadd
adc
jo
out
aad
xchg
adc
movs
fild
enter
scas
push
add
out
jae
or
push
pop
jecxz
cwde
sbb
sbb
mov
iret
and
and
ss
add
jns
fistp
and
add
psubsw
xchg
loope
pop
phaddw
pop
push
and
push
mov
push
add
imul
fdivr
inc
pop
mov
in
add
sub
fistp
cmp
hlt
cmp
push
jns
dec
push
push
xor
inc
push
add
sbb
push
sub
je
or
gs
rol
lods
inc
jae
and
sbb
jecxz
test
push
inc
mov
ss
add
cmp
fldcw
dec
cmp
cmp
enter
dec
in
push
cmp
jl
cmp
push
inc
movs
ins
sahf
mov
pop
test
inc
mov
xchg
jno
repz
xchg
jns
push
cmp
push
dec
cmp
and
add
nop
cmps
jecxz
cmp
adc
cmp
lahf
cs
sbb
out
inc
lds
jmp
nop
addr16
inc
lods
call
call
adc
rol
pop
vmwrite
fisubr
dec
push
mov
das
(bad)
inc
rcr
nop
or
ss
outs
push
xlat
cmp
ss
add
fimul
imul
jb
dec
dec
pop
or
dec
dec
inc
push
(bad)
aas
add
xchg
jmp
add
enter
inc
sahf
push
push
dec
pop
inc
pop
jmp
push
push
das
in
es
push
add
fs
cmp
add
dec
xlat
add
xchg
dec
add
inc
pop
sbb
jns
mov
sub
or
sub
push
pop
movs
rcl
pop
out
and
xor
inc
xchg
cmp
divps
pop
loope
and
pusha
outs
dec
or
xor
and
or
dec
repnz
cmp
adc
xchg
cmp
(bad)
je
adc
mov
cmp
leave
or
dec
call
cmp
imul
outs
arpl
push
fnstenv
dec
pop
movs
cmc
inc
and
outs
push
push
dec
add
aas
outs
rep
or
dec
push
lahf
push
dec
jmp
movs
push
les
add
sahf
mov
addr16
cmovle
leave
test
in
test
push
add
or
icebp
mov
sub
fistp
sbb
mov
jb
adc
out
push
ja
cs
loope
xchg
cmp
repnz
adc
leave
fwait
xor
adc
sbb
(bad)
in
pop
je
mov
je
aas
dec
push
adc
je
ins
push
jno
hlt
xor
clc
outs
out
jne
sbb
push
cli
mov
in
cli
ins
sar
repnz
cmp
mov
cwde
add
loop
dec
pop
sbb
mov
lahf
ins
jbe
and
xor
ja
pop
push
js
fwait
out
nop
push
cwde
(bad)
jmp
repz
test
movs
neg
lds
push
test
enter
(bad)
out
fwait
ins
mov
or
push
sbb
arpl
bound
or
retf
cli
imul
test
(bad)
fistp
pop
push
rol
das
nop
ja
test
ins
push
cmps
push
jns
adc
mov
inc
rol
adc
inc
mov
xlat
mov
fistp
(bad)
enter
rol
idiv
pop
lods
call
das
test
dec
push
cdq
or
adc
cld
popf
xor
jmp
inc
enter
adc
xchg
lods
sbb
pop
sar
pushf
mov
mov
mov
stos
xchg
mov
jg
xchg
rol
mov
push
mov
pop
push
scas
push
xchg
xor
icebp
add
adc
sub
pop
ds
pop
nop
scas
in
pop
add
popf
xor
pop
lahf
pop
xchg
xchg
mov
outs
test
out
test
leave
fbstp
sar
add
xor
ss
repnz
xchg
cld
cld
pop
test
add
rol
test
(bad)
movs
cwde
nop
and
ds
es
(bad)
out
jne
enter
jmp
outs
movs
lods
adc
push
jecxz
das
jns
xor
sahf
mov
inc
es
add
xchg
addr16
dec
sahf
add
movs
add
or
nop
add
jae
add
test
push
add
stos
in
inc
ficom
add
das
mov
add
out
movs
mov
sub
enter
das
mov
adc
or
stos
lods
push
stos
mov
(bad)
mov
retf
push
gs
add
mov
cmp
je
xchg
fstp
cmp
jle
popa
bound
pop
outs
pop
movs
test
movs
mov
inc
xorps
stos
inc
xchg
ins
fisub
mov
pop
sahf
jo
add
sbb
ficom
pop
dec
scas
bound
dec
jmp
jne
or
push
sub
aaa
ja
mov
scas
in
rcl
sub
outs
xor
gs
dec
inc
pop
idiv
push
ja
bound
das
sbb
sub
movs
push
pusha
or
mul
neg
sbb
push
pop
das
push
pop
cmp
mov
aaa
xor
add
pushf
xchg
data16
fwait
push
dec
xor
jmp
fisubr
push
push
cmps
aaa
cmps
arpl
mov
es
out
sub
adc
push
fisttp
or
push
pop
add
pop
mov
inc
xchg
inc
dec
ins
outs
pop
pop
inc
fiadd
(bad)
push
xor
or
aas
dec
xor
add
or
inc
pop
add
pop
adc
mov
push
pop
jb
jmp
push
inc
and
push
das
inc
add
ins
inc
adc
out
call
push
xchg
js
push
mov
lahf
dec
pop
in
loopne
iret
mov
pop
push
push
sub
mov
cwde
out
sbb
fnsave
add
dec
jg
bound
icebp
loopne
pop
push
dec
ret
xor
inc
scas
dec
adc
dec
push
and
jnp
inc
push
dec
iret
pop
jb
je
test
push
fist
add
ret
dec
mov
push
aaa
ins
inc
add
adc
add
dec
xchg
daa
pop
mov
movs
xchg
pop
daa
inc
jnp
mov
fist
not
loopne
push
dec
fwait
iret
jb
jmp
xchg
inc
cmps
inc
dec
ret
in
dec
pop
pop
add
inc
inc
add
out
(bad)
sbb
pop
xchg
cmp
dec
mov
xor
ins
adc
jg
push
add
and
push
sbb
pop
or
adc
iret
add
sub
push
adc
shl
ja
jmp
mov
test
inc
add
(bad)
pop
sub
cmp
(bad)
xchg
call
pop
(bad)
inc
sbb
dec
retf
inc
dec
shl
cmp
push
mov
rcl
mov
fisttp
mov
daa
fbld
adc
push
add
lock
repz
mov
ja
cwde
add
(bad)
xchg
and
push
xchg
push
xchg
push
push
adc
ja
or
jecxz
xchg
add
data16
xor
aas
push
ja
or
(bad)
and
push
mov
mov
dec
popa
bound
daa
or
add
mov
jg
or
cmp
ss
sbb
pop
loop
in
add
adc
call
mov
repnz
inc
adc
call
mov
and
fwait
mov
mov
sbb
stos
mov
cld
aas
mov
mov
mov
or
in
xor
sbb
xchg
xchg
push
enter
cwde
xchg
inc
jmp
sub
add
xor
loope
jo
gs
scas
pop
push
xor
pusha
outs
add
int
enter
fbstp
pusha
xor
inc
cmp
jb
scas
mov
dec
and
aad
(bad)
hlt
mov
mul
rol
out
mov
mov
(bad)
popa
push
call
jb
cmp
scas
(bad)
mov
outs
xchg
shr
mov
cmps
mov
push
cs
lds
enter
es
lds
outs
in
sahf
(bad)
rcl
ss
in
mov
mov
adc
add
sar
add
mov
inc
movs
mov
aas
lods
inc
fs
gs
xor
(bad)
enter
push
loope
push
fisttp
outs
imul
adc
dec
push
fmul
or
jns
ret
dec
push
fadd
xor
sub
aad
add
(bad)
adc
fsub
(bad)
ret
push
loop
in
push
ss
lods
push
daa
push
fbld
xor
in
out
push
loop
push
xlat
push
data16
mov
xchg
jnp
(bad)
push
xlat
popf
push
ffree
cmp
push
fcmovb
push
fdivr
push
fnstcw
(bad)
out
mov
pop
(bad)
lods
shr
push
jecxz
scas
cdq
loopne
mov
jmp
in
enter
(bad)
xor
pop
pop
push
out
nop
pop
repnz
cmp
pop
push
lock
push
(bad)
aas
setno
push
cli
cwde
push
call
repnz
clc
jns
ror
xor
dec
and
push
mov
xor
mov
aam
add
push
out
aas
rol
in
pop
cs
and
add
add
das
sub
inc
sbb
(bad)
push
xor
scas
lock
pusha
mov
pop
call
test
mov
sbb
add
and
dec
xor
mov
mov
adc
nop
add
pusha
jg
daa
nop
psubusb
mov
pop
and
and
cmp
pop
js
out
push
call
neg
fbstp
pop
pop
add
add
pop
add
stos
enter
or
mov
cs
push
cmp
imul
das
rol
js
sub
inc
mov
push
xlat
sub
inc
mov
cmp
mov
daa
or
pop
add
add
xchg
mov
sub
pop
add
mov
push
sub
movaps
in
das
jb
pop
or
add
push
in
xchg
(bad)
fstp
add
sub
add
push
push
push
adc
add
scas
mov
in
mov
push
outs
fcomp
int3
sbb
push
mov
imul
mov
pop
or
ja
inc
sub
out
jae
loopne
add
push
pop
outs
fs
push
push
adc
jg
call
adc
add
adc
or
dec
xchg
leave
add
pop
rdmsr
pop
adc
rol
es
cmp
inc
dec
push
push
or
sti
adc
das
pop
sbb
das
leave
test
add
repnz
repnz
sbb
ss
add
mov
and
out
jnp
je
sbb
leave
add
(bad)
pop
sbb
pop
push
mov
popf
cmp
mov
and
rcl
mov
pop
pop
bound
inc
push
pop
and
aas
sbb
cmp
inc
pop
pop
imul
es
push
fs
mov
adc
sub
pop
sbb
mov
int
(bad)
imul
mov
adc
pop
dec
addr16
and
das
dec
ss
or
(bad)
movs
xor
das
dec
popa
jbe
fisub
mov
push
jns
dec
imul
pop
pop
push
sbb
sub
inc
pop
ror
add
das
cmp
pusha
and
cmps
pop
jmp
outs
jl
loop
mov
or
int3
sub
repnz
push
pop
gs
sub
cmp
or
jbe
lock
adc
nop
test
div
add
daa
das
pop
ja
xlat
in
sar
xor
pop
aas
in
push
or
or
cwde
sbb
lods
adc
dec
imul
dec
pop
jbe
sub
mov
jmp
call
js
pop
xor
test
push
or
cmp
pop
sub
add
pop
sbb
push
adc
(bad)
pop
inc
loopne
jns
dec
cmp
aaa
bswap
aas
push
inc
call
sub
add
cmp
div
xchg
data16
iret
jnp
call
ins
fs
and
dec
jp
push
ror
push
add
fs
pop
push
or
pop
push
or
push
sub
pop
std
mov
out
pop
pop
cmps
add
push
loop
lock
xor
outs
pop
jne
or
jo
outs
xor
inc
ds
push
inc
dec
inc
in
pusha
jne
sbb
sbb
enter
ds
push
inc
pop
xor
aam
and
pop
sub
pop
mov
jg
push
or
push
loopne
pop
cmp
sub
das
pop
cs
cmp
outs
stos
sbb
pop
mov
pop
jne
enter
out
pop
pop
jl
pop
xchg
addr16
out
jne
das
jge
cmp
sbb
jle
mov
jg
test
sahf
add
popa
out
inc
pop
mov
out
xchg
test
pop
inc
test
sub
adc
cwde
jne
call
movs
dec
push
pop
sub
xlat
retf
push
xor
add
jns
xor
test
out
xor
leave
les
push
push
js
mov
test
push
jge
stc
inc
add
pop
loop
add
jnp
add
pop
jns
xchg
pop
or
jle
pop
jns
add
jns
pop
jp
dec
stos
adc
push
movs
inc
pop
es
aas
mov
lods
rol
jmp
pop
js
xchg
push
sub
mov
push
mov
icebp
outs
add
xor
pop
cmp
jg
mov
inc
jne
jns
pop
pop
inc
inc
loope
sahf
dec
cwde
out
ficom
push
push
lods
xor
pop
mov
mov
sbb
pop
inc
sbb
add
inc
push
xlat
inc
add
cmp
pop
nop
cmovo
sbb
daa
add
or
or
jmp
inc
div
pop
cmp
add
mov
mov
pop
mov
inc
xor
lods
aas
push
and
add
xchg
setbe
outs
daa
inc
sbb
adc
aad
add
lea
and
pop
mov
cmps
mov
pop
lea
and
xchg
iret
(bad)
int3
out
aad
das
jp
(bad)
inc
popf
ror
mov
and
adc
lods
push
inc
inc
pop
ficom
nop
adc
mov
dec
jnp
push
xchg
mov
add
push
aas
(bad)
mov
add
pop
pop
aas
int
cmps
jns
aas
adc
xor
xchg
call
lahf
(bad)
out
add
sub
pop
pop
mov
xchg
pop
inc
push
pop
mov
pop
cwde
out
mov
leave
pop
mov
push
push
and
lods
lahf
pop
dec
js
enter
add
or
mov
adc
das
das
pop
sbb
in
mov
in
jbe
das
cwde
pop
loopne
stc
lods
pop
mov
add
adc
push
mov
add
push
movhps
daa
dec
enter
and
jg
mov
jnp
mov
add
fidivr
xchg
xchg
mov
mov
mov
sub
jecxz
daa
dec
rcl
inc
cs
jbe
inc
mov
sub
cmp
inc
and
mov
cmps
sbb
add
push
repnz
dec
mov
push
inc
pop
das
inc
(bad)
movs
repnz
iret
mov
xchg
add
rcl
dec
mov
mov
mov
sar
leave
or
mov
cmp
xor
and
dec
dec
mov
dec
aaa
leave
dec
rcr
ins
mov
scas
das
pop
cs
aam
loope
ror
xchg
push
or
inc
or
dec
repnz
cmp
(bad)
fdivr
or
int
inc
rol
xchg
xchg
ret
sub
ret
and
pop
rcl
xor
pop
ret
xchg
enter
mov
cs
pushf
(bad)
addr16
ja
outs
imul
add
outs
pop
nop
mov
mov
cld
shr
arpl
(bad)
add
fs
adc
arpl
dec
push
push
sub
add
cs
fmul
push
mov
shl
aas
paddsb
pop
jbe
add
(bad)
inc
sub
or
or
inc
mov
mov
mov
js
les
push
and
ror
xor
mov
and
sub
push
pop
mov
(bad)
sbb
arpl
jne
outs
je
mov
lock
pop
nop
inc
movq
dec
dec
add
sub
das
imul
push
sbb
mov
push
xor
mov
jp
dec
adc
mov
adc
add
push
add
scas
sub
or
je
push
and
aam
cs
push
dec
fisttp
out
fwait
xchg
fs
cmps
pop
and
cmp
xchg
mov
mov
and
test
outs
in
jge
test
xor
ins
popa
mov
or
mov
imul
retf
aas
jmp
out
outs
jmp
jo
mov
cs
stos
ins
sub
or
scas
ja
loopne
jge
cmp
jne
inc
push
retw
jmp
out
mov
in
push
cs
sub
or
fs
scas
lods
xchg
sub
jnp
xor
or
lahf
popa
push
(bad)
jns
sbb
inc
arpl
lods
sub
jae
daa
inc
mov
xor
out
arpl
jnp
fidiv
lods
jbe
ret
stos
lds
fist
pop
ret
ins
xor
scas
dec
adc
sub
lods
xor
push
pop
xchg
aas
cs
rol
inc
or
daa
outs
add
add
cmp
daa
or
aas
xchg
lahf
or
push
aaa
jg
ret
sbb
cmps
iret
fbstp
inc
imul
sbb
scas
jne
jbe
stos
aad
mov
pop
test
mov
in
pop
pop
stos
and
das
mov
sbb
jg
test
pop
jmp
stos
mov
fs
add
cmp
xchg
push
mov
push
sbb
ins
retf
imul
jb
fs
imul
rcr
lods
push
test
mov
xor
push
mov
rcr
stos
pop
(bad)
xchg
sbb
add
pop
je
or
inc
pop
outs
mov
xchg
mov
add
mov
jae
scas
cwde
and
nop
xor
and
jmp
inc
outs
pop
fidivr
lods
loopne
add
imul
das
addr16
daa
pop
cwde
or
inc
or
or
repnz
mov
call
inc
mov
fcomp
mov
sbb
enter
test
pop
push
sbb
inc
mov
and
and
js
jns
xchg
and
mov
cmp
(bad)
cmp
or
mov
add
sub
push
sub
dec
jns
push
out
(bad)
fcmovne
or
aaa
inc
cmps
jo
xchg
ds
or
imul
jge
or
mov
adc
sbb
push
fwait
cmp
outs
mov
xlat
ror
push
add
and
or
(bad)
nop
xchg
xchg
es
and
lahf
mov
dec
add
ins
mov
inc
jb
gs
push
popa
ins
jne
inc
add
pop
dec
mov
add
imul
jae
imul
ds
cmp
add
es
call
adc
aaa
inc
and
pop
xor
ins
inc
jmp
and
jge
add
adc
push
add
add
lock
push
movs
add
and
push
pop
pop
sbb
add
aaa
xor
and
or
pusha
push
js
js
pop
outs
ja
out
pop
add
sbb
add
add
add
(bad)
pop
inc
mov
pop
(bad)
daa
push
cmp
iret
mov
retf
jb
int3
pcmpgtd
push
jo
add
push
inc
in
out
fst
arpl
punpckldq
pop
ins
fs
pop
dec
mov
ins
das
cmp
add
fs
in
sbb
jns
add
das
pushf
je
fld
and
cmovno
or
mov
adc
imul
dec
jbe
dec
jbe
sub
and
je
ret
push
inc
imul
mov
mov
pop
and
jg
fisttp
add
iret
test
jecxz
daa
outs
popa
and
rol
das
fcmovnu
adc
pop
imul
sbb
(bad)
outs
iret
jns
out
out
sti
ret
(bad)
push
and
push
outs
inc
pop
pop
jp
add
mov
push
ret
add
imul
addr16
ds
neg
fdiv
mov
iret
mov
(bad)
(bad)
hlt
pop
arpl
dec
cmp
cmp
idiv
sub
dec
and
jns
add
lahf
(bad)
loop
das
das
adc
dec
push
inc
inc
gs
adc
arpl
(bad)
std
dec
outs
jbe
dec
xchg
cmp
pop
pop
adc
xor
inc
jne
inc
inc
cmp
dec
in
xchg
les
shr
jle
jo
imul
mov
popa
outs
adc
iret
cmp
cmps
xchg
pop
sub
pushf
ja
inc
in
std
int3
fnsave
xor
and
daa
mov
gs
sbb
dec
outs
outs
and
cmp
pushf
ins
jbe
mov
pop
into
inc
aas
mov
dec
dec
inc
cmovle
(bad)
popf
imul
pop
dec
dec
dec
inc
push
inc
push
pop
inc
push
pop
in
repnz
scas
push
in
pop
dec
dec
dec
inc
push
inc
inc
adc
push
out
pop
cmps
(bad)
lock
pop
push
in
enter
sub
test
and
xchg
out
sbb
jle
ret
push
icebp
dec
add
add
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
push
clc
(bad)
jmp
das
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
adc
sbb
je
or
outs
push
bound
add
pop
pop
pop
pop
pusha
inc
add
inc
popa
or
push
pop
push
mov
sub
adc
dec
hlt
jns
jnp
jge
jg
pop
cs
call
cmp
adc
das
ins
add
and
xchg
fxch
jg
pop
loopne
imul
mov
rcr
das
retf
jno
icebp
pusha
inc
mov
aas
fdivrp
repz
ret
movs
add
xor
lock
or
xchg
mov
cmp
jle
cld
jae
push
gs
xor
pusha
das
jae
out
fld
inc
push
pop
sbb
es
pop
sub
icebp
js
cmp
mov
ja
sub
xor
lea
push
bound
mov
call
fisttp
push
add
xchg
bound
sub
(bad)
iret
sub
add
jmp
adc
mov
sub
enter
loopne
daa
ds
push
lods
xchg
mov
mov
clc
enter
bound
popf
xchg
jmp
inc
xchg
shl
xchg
imul
dec
cmps
loop
fdivr
jns
cli
jae
cmp
and
push
cmp
fisub
mov
lds
xchg
(bad)
das
(bad)
mov
cmp
loope
and
push
dec
int
(bad)
sbb
in
pop
push
jns
repnz
inc
jg
sahf
mov
mov
and
stc
bnd
pop
adc
loope
add
out
mov
lods
aas
mov
fwait
jmp
aas
dec
and
jg
dec
popf
mov
mov
in
xor
push
inc
gs
mov
iret
imul
in
(bad)
aas
sub
mov
(bad)
push
inc
lahf
out
mov
xchg
out
(bad)
call
aas
aad
pop
push
pop
sbb
test
pop
bound
in
xchg
(bad)
jg
das
pop
pcmpgtw
shl
jge
call
push
mov
rcr
add
jbe
fdivr
mov
or
jg
xchg
in
mov
in
or
aas
mov
mov
mov
in
mov
in
or
aas
mov
mov
cmps
or
mov
jg
cmps
or
aas
mov
stos
or
mov
add
pop
in
cmp
mov
es
mov
xor
mov
(bad)
mov
mov
xchg
es
mov
cmp
(bad)
mov
mov
jg
ins
jb
(bad)
mov
mov
call
mov
aas
jg
cmp
mov
mov
push
inc
add
jg
mov
adc
(bad)
jg
(bad)
adc
(bad)
call
sub
inc
cmp
push
jg
and
lods
and
jmp
xor
adc
or
sub
jg
jo
fidivr
push
add
adc
cmp
add
mov
push
mov
jbe
jg
jecxz
(bad)
ds
cli
ds
ins
xor
inc
jg
inc
push
push
adc
mov
cmp
imul
out
jae
add
mov
arpl
dec
pusha
add
adc
out
jo
pop
rol
push
leave
(bad)
aas
test
ror
add
push
add
mov
mov
(bad)
jg
pop
ds
(bad)
dec
fmul
ror
cmp
add
ficomp
add
pop
invd
cmp
wrmsr
cmp
cmp
inc
push
inc
add
cli
inc
xchg
(bad)
and
inc
cmp
sahf
mov
in
shl
mov
ds
movs
outs
aas
sub
es
dec
jnp
call
push
(bad)
fistp
jne
push
mov
(bad)
cmp
xor
sub
adc
addr16
je
adc
enter
jmp
popa
dec
mul
enter
inc
xchg
pop
cmps
call
pop
mov
int
outs
rcr
cmp
rcl
xor
jecxz
mov
mov
xor
pop
adc
add
push
lds
push
mov
push
bound
test
cmp
jb
push
adc
mov
call
jne
outs
jmp
mov
imul
call
aam
(bad)
(bad)
jg
ret
cmps
inc
inc
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
dec
jmp
out
cwde
sub
cmp
jl
gs
imul
or
test
cmc
popf
sahf
mov
or
xor
cmp
add
cmps
test
mov
mov
(bad)
(bad)
dec
dec
cmp
add
dec
clc
rcr
fisttp
mov
cmp
(bad)
jmp
jge
int3
mov
mov
aaa
cmps
jno
pop
mov
shl
xor
jg
call
cmps
dec
lahf
test
xor
dec
cmps
fiadd
mov
(bad)
cmp
mul
or
add
adc
cmp
mov
or
add
jmp
int3
outs
cmp
cmp
mov
xchg
nop
jbe
daa
sub
aad
mov
or
sub
cmps
sub
jbe
stc
pop
out
shl
popf
jmp
(bad)
call
xor
add
xor
mov
inc
outs
or
loope
nop
cmp
(bad)
(bad)
sub
pop
stos
xor
xor
outs
out
mov
dec
std
div
cdq
test
sahf
test
mov
and
fdiv
xchg
cld
data16
cmp
and
pushw
jno
mov
fwait
(bad)
fisttp
lahf
push
xchg
xchg
sbb
mov
stos
or
outs
and
in
call
cmps
cmps
pop
mov
popa
sahf
enter
stc
(bad)
in
push
jmp
push
xchg
mov
jae
mov
loope
(bad)
push
jmp
bound
ss
addr16
mov
adc
dec
cdq
mov
enter
call
pop
xchg
cmp
xchg
inc
fldcw
jmp
(bad)
and
repz
xor
cmp
ja
cdq
scas
icebp
cmp
push
(bad)
in
int
aaa
aaa
or
stos
(bad)
stc
and
call
jle
dec
ficomp
into
xchg
sub
scas
jno
nop
lock
fist
jmp
call
in
jnp
or
add
pop
pop
and
ds
push
push
mov
jae
test
cmp
std
jns
imul
(bad)
call
lods
rcr
lahf
call
data16
cmp
adc
or
scas
add
xchg
mov
adc
bnd
int
pop
or
push
ror
int3
(bad)
(bad)
jmp
or
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
mov
addr16
imul
nop
out
fsub
mov
cdq
fbstp
or
sar
adc
dec
sub
pop
cmp
movs
(bad)
push
sti
fcomp
pop
push
lods
xchg
rcl
pop
mov
test
jae
out
(bad)
mov
jnp
xchg
cld
pop
ror
idiv
mov
cs
std
jg
and
dec
or
fst
jmp
or
stos
inc
mov
pop
popa
out
sbb
out
test
xor
mov
pop
jbe
ltr
mov
fcom
psubb
add
xlat
out
cmp
add
bound
or
fild
mov
fs
add
mov
or
arpl
jmp
jno
or
ss
or
sbb
xchg
std
aas
dec
mov
add
adc
and
dec
in
repnz
jno
aaa
or
and
dec
sbb
pop
outs
push
popa
data16
add
pop
fsub
jns
push
add
xor
data16
popw
lock
iret
mov
jns
outs
je
arpl
pop
fiadd
aas
sbb
je
pushf
addr16
xor
push
dec
(bad)
(bad)
imul
fcom
adc
and
popa
imul
pop
inc
pop
pop
jl
mov
inc
orps
xchg
imul
out
out
cmp
popa
dec
add
not
adc
xor
(bad)
popf
mov
jae
inc
xor
fimul
mov
daa
pop
lea
inc
adc
enter
and
sbb
fisub
and
mov
in
imul
xchg
jae
dec
imul
jo
cmp
mov
jb
jo
ds
bound
daa
xor
and
gs
fisttp
ins
and
arpl
je
aaa
mov
jne
ins
cmp
sbb
inc
or
loop
fiadd
outs
pop
jb
and
div
aam
pusha
inc
jbe
(bad)
push
ror
aaa
push
lahf
fs
ins
cwde
mov
sub
and
cdq
popa
in
out
pushw
inc
inc
lods
inc
int3
add
cmp
or
gs
rcl
and
lahf
xchg
loopne
add
fcomp
ja
xchg
pop
pop
pop
push
push
jae
mov
cmp
cmp
je
loopne
call
addr16
ret
arpl
lock
das
mov
inc
or
or
out
push
push
dec
test
dec
aad
pop
jae
aam
enter
sbb
xchg
scas
dec
sbb
add
xor
imul
call
mov
xor
inc
in
push
lods
sbb
push
or
in
mov
adc
lods
sbb
or
xlat
arpl
das
je
outs
xchg
daa
xchg
fisub
or
cmp
(bad)
jns
cmp
cmp
push
das
push
sub
sub
inc
jl
push
addr16
sbb
out
sub
jnp
int3
sub
push
cmps
cmp
mul
mov
stc
and
add
aad
jo
call
outs
push
sbb
ins
popf
imul
das
jo
ss
or
pop
imul
jnp
js
mov
sbb
je
imul
fs
jo
sub
or
jl
cmps
fs
repz
and
or
out
fnstcw
xor
push
loopne
neg
test
push
cmp
jnp
mov
push
movs
mov
repz
lock
xchg
push
nop
mov
repz
(bad)
in
iret
cmps
stc
into
fdivr
shl
fs
sahf
out
js
je
ins
push
fs
pop
pop
push
sahf
out
sahf
push
dec
dec
inc
inc
cmp
sahf
out
xor
adc
repz
fdivr
cmp
pop
cmp
clc
aam
out
sahf
mov
jo
pop
push
ins
sahf
out
inc
and
or
cld
repz
repz
cwde
jo
out
ss
sbb
jle
mov
sahf
pusha
inc
jg
xor
adc
clc
xchg
add
fst
leave
push
aad
inc
and
xchg
and
adc
xchg
sbb
test
pop
and
add
and
cmp
add
rol
add
loopne
rol
add
fcom
xor
ja
push
mov
mov
imul
mov
mov
pop
rol
inc
pop
inc
out
and
(bad)
(bad)
jg
fld
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
(bad)
(bad)
(bad)
call
popf
sahf
lahf
mov
movs
cmps
cmps
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
(bad)
(bad)
(bad)
(bad)
mov
mov
ret
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
(bad)
(bad)
(bad)
(bad)
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
mov
cli
sti
cld
std
(bad)
inc
and
inc
push
adc
stos
sbb
and
mov
aas
call
push
call
fs
scas
add
cli
mov
add
movs
fwait
mov
and
outs
mov
outs
jne
push
popa
sbb
mov
aaa
and
push
imul
popa
imul
jne
iret
pop
ins
fsubr
sub
jb
arpl
aas
and
imul
dec
push
fs
add
out
imul
in
ss
ins
daa
addr16
add
mov
test
jbe
push
add
jae
clc
shl
jae
imul
dec
xchg
jne
jae
or
jbe
gs
ins
mov
jb
add
xchg
daa
and
xchg
push
test
sub
xor
popa
pop
dec
test
dec
inc
ins
xchg
outs
mov
js
pop
les
jne
jae
adc
and
jbe
fsubr
push
cld
test
daa
arpl
and
bound
loopne
mov
add
jg
outs
mov
jge
ins
bound
and
adc
daa
push
jbe
bound
inc
pop
shl
push
cmp
sub
out
gs
test
pop
test
dec
outs
imul
sbb
mov
jns
jae
daa
mov
fidiv
sub
lahf
imul
xchg
out
jmp
call
daa
xor
push
fld
pcmpgtd
popa
jne
shr
data16
outs
cmp
pop
(bad)
xor
nop
mov
xor
je
push
pop
add
in
xchg
(bad)
jns
cmps
mov
adc
das
jbe
data16
arpl
push
cmp
imul
(bad)
gs
imul
xor
sbb
or
or
add
shl
out
test
(bad)
xlat
mov
pop
dec
pop
daa
jae
aad
mov
daa
sbb
pop
movs
test
fild
into
movs
pop
fisttp
push
call
jmp
into
ins
adc
std
daa
(bad)
xchg
push
jb
aas
xchg
int3
inc
dec
push
dec
jae
jmp
cwde
inc
retf
repnz
dec
dec
inc
test
sbb
dec
sub
call
push
pusha
dec
xchg
scas
mov
and
(bad)
adc
rcl
hlt
push
in
xor
cmps
mov
inc
mov
test
test
push
jle
push
push
scas
inc
sysenter
inc
push
inc
and
xchg
cmps
rol
dec
add
imul
enter
dec
dec
mov
cwde
dec
push
xor
dec
dec
push
vmread
cs
fimul
push
push
inc
cmp
sub
inc
stc
xor
cmps
sbb
mov
imul
inc
les
call
mov
dec
push
test
xor
and
push
xchg
cmps
sar
pop
call
pop
in
push
inc
shl
fiadd
out
sahf
push
call
cs
pop
jns
inc
inc
push
lods
inc
dec
dec
movs
inc
pop
inc
pushf
mov
je
dec
dec
fisttp
jno
cmp
punpckhbw
shl
mov
cmove
dec
pop
cmp
das
xchg
ja
mov
dec
sahf
push
adc
sti
xchg
add
lock
push
dec
(bad)
mov
js
dec
enter
sbb
adc
cmps
lock
dec
sub
adc
sbb
ret
and
push
dec
lahf
dec
xchg
pop
shl
and
and
dec
cmovns
cli
cmove
push
in
pop
in
loopne
pop
out
hlt
call
test
test
mov
mov
push
jnp
clc
(bad)
dec
(bad)
retf
xchg
adc
push
cmp
dec
or
(bad)
call
repnz
dec
mov
inc
sti
xchg
and
pop
add
(bad)
jg
adc
add
sti
in
and
xor
jmp
mov
or
push
into
inc
sahf
sbb
lds
lahf
and
(bad)
(bad)
jg
cmp
mov
jmp
(bad)
std
ins
dec
add
loop
(bad)
(bad)
(bad)
jmp
jecxz
xor
xchg
or
mov
mov
push
dec
loope
cmp
pusha
clc
pop
adc
(bad)
fisttp
mul
(bad)
dec
sub
fadd
aas
push
dec
xchg
mov
xor
loope
(bad)
(bad)
call
mov
mov
and
mov
sbb
(bad)
dec
jmp
jmp
in
inc
mov
sbb
leave
dec
mov
cmp
inc
test
(bad)
(bad)
jmp
outs
sub
lea
clc
xchg
int
jbe
pop
xchg
cli
inc
mov
(bad)
call
or
add
fs
ret
bound
mov
mov
inc
(bad)
aas
mov
inc
mov
(bad)
(bad)
push
dec
push
adc
gs
xor
hlt
adc
es
cmp
call
mov
(bad)
(bad)
(bad)
jmp
mov
mov
xchg
lahf
mov
dec
fwait
into
jle
sti
jg
int
(bad)
rcl
(bad)
(bad)
jmp
outs
cmps
lock
add
sbb
inc
imul
pop
scas
mov
push
dec
pop
movs
test
ret
adc
pushf
ja
xlat
test
pop
(bad)
xchg
mov
ret
test
(bad)
(bad)
scas
mov
inc
cmp
mov
clc
ror
out
add
sub
inc
(bad)
(bad)
(bad)
push
or
loope
xchg
sti
or
inc
lea
mov
xchg
cld
fcom
dec
(bad)
(bad)
(bad)
jmp
addr16
push
outs
xor
cmp
inc
xchg
xlat
fidivr
daa
dec
(bad)
inc
nop
rcr
mov
inc
enter
clc
inc
xchg
fldcw
(bad)
(bad)
jmp
lea
ins
repnz
ret
mov
inc
mov
js
add
aas
cs
(bad)
(bad)
push
mov
sahf
mov
cmp
inc
scas
pop
(bad)
push
enter
adc
xchg
jg
sub
jne
test
sub
repnz
adc
xchg
dec
fwait
xor
std
test
inc
push
ins
std
rcl
xchg
mov
pusha
xchg
(bad)
out
clc
dec
mov
fmul
mov
div
loop
shl
jae
cmp
mov
jmp
fdivr
add
sbb
nop
or
daa
dec
cmp
mov
jmp
mov
dec
sbb
mov
sbb
pop
adc
adc
or
and
and
es
outs
sbb
fld
sbb
inc
shl
mov
cmp
imul
mov
popa
push
or
scas
int
mov
mov
outs
mov
gs
xchg
dec
add
mov
ins
jmp
or
test
popf
fdivr
inc
ror
adc
mov
push
jmp
mov
ins
push
fist
mov
sbb
test
aaa
test
bound
sar
cmp
retf
push
mov
mov
mov
adc
in
mov
and
mov
mov
mov
add
inc
std
imul
loopne
sbb
aaa
push
inc
add
scas
cdq
(bad)
push
and
jg
jle
sub
(bad)
adc
loopne
mov
mov
mov
pop
int3
push
and
pop
sbb
cld
call
enter
sub
adc
mov
enter
in
push
iret
(bad)
bound
or
or
inc
xchg
jl
mov
pop
test
mov
pusha
lds
xchg
or
ds
mov
mov
pop
call
fwait
dec
es
jg
pop
pop
jb
pop
or
and
jb
pop
jb
es
jb
pop
daa
adc
pop
jb
adc
pop
push
mov
jb
pop
mov
and
jb
push
pop
imul
int3
jl
dec
sbb
pop
mov
pop
cmps
jb
pop
jb
cmps
test
stos
and
jb
je
jb
pop
jb
pop
pusha
pop
jb
pop
mov
jb
movs
mov
stos
mov
pop
jb
pop
scas
scas
mov
pop
jb
mov
jb
pop
jb
mov
pop
mov
jb
mov
jle
inc
sub
mov
add
das
adc
mov
sbb
pop
daa
pop
das
mov
(bad)
mov
test
push
or
cmp
rcl
cmp
jns
mov
test
add
nop
add
into
pop
adc
test
and
dec
addr16
push
gs
cmp
sahf
hlt
mov
rol
xchg
push
fdiv
cmps
popf
jle
das
or
mov
rcr
iret
inc
mov
iret
hlt
shr
dec
adc
(bad)
test
outs
xchg
pop
pusha
inc
ss
pusha
inc
lods
imul
adc
leave
(bad)
and
pop
scas
sbb
mov
or
adc
xor
mov
outs
or
mov
sbb
fidiv
cmps
lods
mov
cmp
movs
lods
mov
les
mov
punpckldq
popa
(bad)
add
pushf
je
xchg
ja
das
bound
inc
push
pushf
(bad)
out
out
movs
imul
add
adc
dec
and
aas
lahf
and
sub
push
push
cmp
xchg
clc
lea
mov
jne
push
pop
dec
mov
jo
das
popa
dec
and
pop
add
cmp
and
sbb
cmp
gs
inc
es
pop
out
or
cmp
sar
jne
push
js
cmp
push
jp
stc
pop
xchg
push
pop
clc
dec
xor
and
call
sar
adc
icebp
test
cmp
addr16
popa
fs
mov
outs
imul
jb
ds
push
cmp
xor
inc
push
imul
push
push
(bad)
ficomp
imul
and
repnz
or
in
mov
mov
xor
dec
data16
fdiv
sbb
sti
outs
popa
jo
cld
loopne
fisttp
dec
das
dec
push
ud2
cmp
and
je
pop
and
in
jnp
outs
out
jae
xchg
mov
retf
ret
jo
dec
jb
jmp
inc
je
fiadd
and
push
pop
ins
cmp
or
or
jle
lods
mov
jae
dec
ret
mov
pop
pop
mov
sub
loop
dec
add
rol
sbb
imul
add
mov
mov
mov
lock
in
mov
div
xlat
sbb
loopne
cmc
add
test
jae
pusha
cmp
in
and
jp
out
dec
daa
inc
fmul
imul
fidiv
mov
es
cmp
out
(bad)
push
lods
sbb
adc
mov
add
je
popa
mov
cmps
mov
push
packsswb
push
push
inc
sub
std
push
xor
dec
sub
dec
dec
inc
dec
inc
inc
and
je
(bad)
xlat
push
sbb
inc
adc
iret
push
dec
aam
dec
mul
clc
and
les
daa
js
xor
cmp
pop
cmp
pop
mov
fild
jp
idiv
sub
mov
cmp
push
imul
repz
or
mov
and
mov
push
lahf
inc
xor
shl
neg
add
cmp
(bad)
push
aam
xor
mov
cs
or
and
xchg
imul
cmp
ds
jne
inc
and
and
out
mov
mov
in
mov
and
add
inc
jl
xchg
and
(bad)
jmp
jae
sub
cmc
mov
add
pop
push
aam
pop
imul
mov
pop
dec
inc
sbb
lods
dec
aam
sub
pop
rcr
popa
xlat
or
xor
mov
mov
std
(bad)
(bad)
pusha
outs
push
or
aaa
test
and
jae
push
gs
jb
in
push
pop
cmovo
jle
push
add
xlat
cld
stc
retf
gs
and
add
jbe
aaa
repz
aas
scas
mov
in
xor
(bad)
(bad)
push
cmc
imul
and
jns
inc
mov
jbe
dec
(bad)
(bad)
jg
ins
shr
loope
inc
mov
inc
push
out
loop
in
dec
inc
(bad)
push
xchg
aad
push
iret
lock
test
add
fnstcw
js
inc
xchg
add
icebp
(bad)
(bad)
jmp
mov
inc
xor
lods
push
inc
add
inc
adc
shr
test
xor
inc
jmp
jmp
mov
lea
pop
outs
add
inc
pushf
leave
inc
call
jmp
jecxz
enter
fsubr
fwait
sar
inc
or
inc
xor
and
stc
adc
call
push
pop
sahf
inc
mov
push
sub
into
rol
dec
pushf
hlt
xchg
dec
pop
ret
icebp
sub
dec
out
sbb
cli
pop
jb
popa
mov
cmps
dec
jns
sbb
(bad)
mov
(bad)
(bad)
(bad)
dec
jge
pop
(bad)
out
adc
pop
inc
lock
inc
dec
(bad)
xor
push
jl
pop
mov
mov
(bad)
dec
enter
in
dec
(bad)
cmp
or
sbb
fs
push
sbb
sar
cmp
fnsave
popa
test
jge
adc
mov
fnstsw
leave
(bad)
(bad)
(bad)
call
xchg
and
inc
cld
sbb
sbb
test
push
nop
dec
adc
pop
ds
pusha
(bad)
(bad)
(bad)
call
dec
ins
mov
das
dec
inc
repz
jmp
repz
sbb
movs
jne
iret
dec
xchg
popa
xchg
add
stc
aas
jmp
jb
(bad)
jecxz
bound
inc
sti
(bad)
(bad)
(bad)
(bad)
cmp
mov
jp
shr
mov
cmp
lods
or
stos
(bad)
push
dec
dec
dec
cmp
cs
or
xchg
mov
lods
dec
cmps
inc
(bad)
(bad)
(bad)
(bad)
(bad)
sbb
jne
mov
dec
adc
adc
in
(bad)
scas
or
call
cmps
int3
sbb
sar
mov
push
jg
daa
(bad)
xchg
push
push
pop
sti
lock
out
cld
mov
popf
ss
adc
inc
add
call
mov
out
clc
(bad)
call
push
ins
push
ret
adc
js
push
enter
sbb
cmp
mov
(bad)
jmp
retf
or
add
icebp
cs
cmp
imul
imul
(bad)
call
gs
dec
sub
lods
popa
repnz
mov
push
in
pop
sub
jae
dec
pop
lods
call
arpl
fst
jo
pop
or
cmp
sub
push
cs
xchg
jge
xchg
and
pop
hlt
stc
outs
sbb
out
jae
(bad)
(bad)
push
mov
xchg
sbb
call
fist
mov
push
xchg
push
js
stos
out
push
aas
(bad)
(bad)
(bad)
call
sub
icebp
push
push
fdiv
push
adc
int3
cmp
adc
lahf
or
(bad)
call
push
cmp
pushf
cli
push
data16
mov
sub
(bad)
jmp
mov
popf
out
paddw
cmc
sub
rcl
pop
fcomip
dec
push
jae
dec
add
imul
lds
imul
cmp
shl
fcmove
fcomp
inc
dec
js
sti
push
pop
shr
(bad)
mov
(bad)
pop
icebp
mov
pop
lods
(bad)
jbe
das
inc
scas
pop
int3
(bad)
(bad)
(bad)
call
stos
imul
mov
sbb
cmps
mov
xor
sbb
lea
sbb
sahf
sub
in
pop
sub
(bad)
(bad)
cld
pop
inc
jge
and
cmp
xchg
pushf
mov
mov
cmp
xchg
out
push
(bad)
(bad)
(bad)
mov
and
pop
dec
test
and
sub
into
xchg
mov
fild
(bad)
(bad)
(bad)
dec
xchg
pop
pop
push
adc
sbb
retf
jae
shl
add
push
fiadd
dec
(bad)
xor
ins
in
dec
inc
push
les
mov
cmp
aam
adc
push
ins
mov
clc
pop
stos
jl
and
inc
pop
(bad)
(bad)
je
int3
adc
(bad)
(bad)
(bad)
call
push
out
push
dec
fistp
xchg
push
cs
mov
dec
pop
jb
pop
sbb
(bad)
call
mov
out
in
mov
icebp
pop
or
fucom
pop
in
mov
inc
push
aad
pusha
hlt
push
lahf
mov
push
(bad)
jg
cli
pusha
mov
xchg
pop
xchg
sub
push
and
test
aaa
(bad)
(bad)
push
pusha
ret
cld
outs
and
hlt
sti
retf
mov
popa
js
aas
mov
(bad)
cld
add
jmp
cmp
popa
or
mov
ror
sti
popa
xchg
jp
pop
xor
outs
sub
(bad)
aam
push
and
inc
shl
call
add
inc
push
jg
arpl
test
arpl
(bad)
(bad)
push
addr16
inc
js
movs
arpl
inc
inc
pop
push
loopne
arpl
sub
fs
je
aaa
inc
fs
dec
outs
xor
inc
jns
mov
fs
loopne
mov
inc
dec
jmp
lods
sbb
jae
dec
rcr
dec
gs
(bad)
hlt
adc
and
xor
push
jle
mov
or
(bad)
(bad)
jmp
data16
mov
int3
mov
pop
lea
mov
out
fbld
data16
pop
icebp
(bad)
push
data16
jge
sub
aam
and
mov
addr16
(bad)
(bad)
jmp
icebp
push
push
int3
adc
push
ror
retf
jmp
push
retf
push
inc
sahf
pop
mov
sti
test
push
ror
scas
dec
lods
lods
loopne
inc
imul
xlat
xlat
sbb
je
icebp
cmp
or
inc
mov
imul
(bad)
jmp
imul
test
jae
pop
dec
and
jg
or
(bad)
jg
add
call
xchg
and
jmp
push
sub
cwde
ja
imul
mov
jg
fisubr
imul
call
cli
outs
pop
retf
add
cld
shl
jle
daa
ins
or
pop
mov
ins
(bad)
(bad)
(bad)
call
(bad)
cmp
(bad)
stc
mov
(bad)
ins
aaa
mov
std
ins
and
cmp
xor
(bad)
call
inc
leave
stos
test
xchg
mov
jo
cmp
or
mov
(bad)
(bad)
inc
mov
push
outs
(bad)
jb
xor
stos
cmp
addr16
fist
jno
jg
sti
xchg
out
movs
outs
fbld
dec
(bad)
(bad)
jge
add
outs
sub
mov
outs
jbe
add
sbb
xchg
add
or
(bad)
(bad)
(bad)
jp
cmp
jge
outs
int3
push
ins
int
pushf
in
jg
enter
sbb
cmp
push
sbb
(bad)
(bad)
call
inc
mov
push
stos
ret
adc
jmp
jae
jo
fld
(bad)
(bad)
jmp
int3
test
jno
adc
xor
xchg
pop
jno
pop
xchg
std
mov
xlat
jp
xor
ret
jno
(bad)
(bad)
(bad)
dec
div
icebp
lahf
fwait
jb
sub
mov
mov
xchg
mov
outs
xchg
jb
(bad)
(bad)
(bad)
push
cli
jmp
dec
int
or
jae
dec
add
jbe
shl
loop
jae
push
jb
mov
cmp
push
mov
mov
stos
jecxz
(bad)
jae
cmps
push
xchg
sbb
or
(bad)
(bad)
call
jno
inc
je
jp
push
into
shl
sahf
cwde
shr
add
xor
(bad)
(bad)
(bad)
(bad)
mov
adc
(bad)
mov
xchg
or
xor
ja
dec
mov
icebp
icebp
(bad)
(bad)
dec
adc
std
add
jne
dec
inc
and
mov
jbe
dec
enter
(bad)
(bad)
fisttp
push
sar
sub
repz
pushf
das
mov
sub
cmp
(bad)
(bad)
(bad)
call
ja
xor
ja
jle
ret
cdq
cmp
ja
sahf
out
inc
dec
(bad)
ja
ret
(bad)
(bad)
(bad)
dec
in
xor
repz
sub
test
stos
mov
xchg
popf
js
pop
dec
jo
jl
js
neg
(bad)
mov
(bad)
xor
loop
jns
mov
jb
cmp
nop
cmps
adc
dec
jp
or
xor
jns
lods
mov
mov
sub
inc
lods
(bad)
(bad)
cmp
cmp
mov
adc
mov
jg
sub
add
in
pop
pop
mul
inc
(bad)
(bad)
(bad)
jmp
sbb
xchg
cmp
sar
test
lea
sbb
mov
mov
push
fdivr
jmp
jnp
push
jp
into
test
test
push
(bad)
(bad)
cli
push
iret
imul
ret
(bad)
stos
or
jl
jae
push
or
nop
sbb
lods
push
das
jge
xchg
sbb
imul
mov
ja
jge
mov
and
inc
neg
jle
jne
mov
aaa
jle
xchg
add
loop
(bad)
(bad)
call
dec
dec
stos
mov
sbb
push
xlat
jle
pop
sbb
or
outs
push
cmp
sub
pop
lock
mov
in
jbe
in
lods
cmp
jnp
jg
enter
int3
loope
adc
cmps
xor
lock
sub
jbe
inc
les
str
(bad)
imul
or
pop
aas
ficom
mov
mov
aas
punpckldq
push
jns
cdq
pop
add
punpckldq
sbb
popa
mov
sbb
cmp
test
pop
imul
pop
mov
or
ins
sub
mov
outs
arpl
xchg
out
ss
add
push
xlat
js
cli
hlt
jo
mov
mov
fisttp
daa
ins
pop
and
and
mov
daa
retw
lods
rcl
sub
jl
mov
pop
mov
popa
ret
ins
mov
pop
bswap
es
dec
addr16
fs
outs
or
js
push
bound
(bad)
imul
lods
sbb
mov
retf
push
outs
mov
cmp
add
xor
xor
pop
dec
dec
xor
iret
and
bound
ret
daa
add
fsub
retf
das
ret
outs
ins
mov
gs
es
ins
fild
mov
pextrw
add
push
push
arpl
not
lds
divps
ins
mov
ficom
gs
mov
sbb
fwait
test
fbld
mov
pop
mov
pop
pop
sbb
fsubr
bound
pusha
cmp
punpcklwd
(bad)
adc
cwde
outs
pop
add
mov
jmp
arpl
sub
aas
mov
adc
inc
ds
xor
cwde
inc
inc
stos
inc
pop
fcmovbe
ins
jecxz
outs
xor
and
or
push
jae
cmp
and
cmp
cmp
add
add
jno
add
adc
das
lods
sbb
mul
add
pop
aad
dec
mov
add
loopne
sub
add
aas
add
rcl
and
and
aas
inc
pop
or
sub
out
push
inc
dec
sbb
add
shl
and
inc
add
xor
and
add
das
pop
cwde
sbb
enter
call
mov
movs
jmp
mov
cs
outs
aam
inc
das
aam
jne
jb
imul
push
cmp
adc
add
(bad)
push
adc
lods
movs
and
or
cmp
jecxz
sub
aaa
jle
sahf
imul
xor
and
jbe
sub
pop
jb
addr16
mov
add
je
and
mov
mov
cmc
push
aas
push
mov
cmps
mov
sub
data16
pop
jmp
push
jae
lahf
and
lods
loope
pop
repz
pop
cmp
fsubr
push
(bad)
jp
mov
cmp
jae
je
xor
add
jb
ss
add
add
sub
das
outs
scas
inc
call
add
push
sti
jg
cli
pop
sub
loopne
rol
add
aas
add
and
outs
cmp
sbb
mov
add
jmp
push
sub
pop
add
push
add
inc
push
add
and
inc
inc
add
cmp
xor
jns
sub
mov
cmp
add
sub
ss
adc
sldt
je
bound
lods
push
(bad)
fisttp
mov
sub
fild
push
data16
and
cmp
test
ds
es
sbb
out
xor
(bad)
js
call
shr
int
jg
cmp
push
add
mov
add
and
fiadd
sahf
adc
daa
push
inc
push
push
inc
inc
mov
lahf
loopne
ret
inc
leave
jmp
aaa
dec
test
imul
and
dec
outs
cmp
xor
pop
xor
jo
dec
das
retfw
pop
repnz
outs
data16
mov
pop
pop
mov
mov
sahf
xchg
ins
push
xchg
add
xor
xchg
out
push
pusha
jo
jns
int
mov
nop
pop
jo
shr
sahf
int
loopne
jle
in
adc
imul
je
adc
mov
bound
dec
data16
push
sub
jns
mov
pop
sar
inc
inc
sub
pop
adc
pusha
shl
mov
movhps
scas
push
sub
adc
loop
cmp
inc
pusha
daa
rol
out
sahf
ret
(bad)
jns
out
enter
int3
out
sahf
out
into
iret
rcl
sahf
out
sahf
rcl
aam
(bad)
xlat
jns
out
fcomp
fcmovu
fsub
jns
out
(bad)
loopne
sahf
out
sahf
loop
in
out
jns
out
call
out
sahf
out
out
out
lock
sahf
out
sahf
repnz
cmc
div
jns
out
clc
stc
cli
sti
cld
shl
std
(bad)
(bad)
mov
cmp
pop
sbb
push
ret
pop
dec
arpl
jmp
daa
test
sahf
movq
mov
mov
xor
push
mov
fild
(bad)
shl
and
mov
out
and
push
(bad)
and
enter
pop
dec
push
sub
push
mov
push
(bad)
nop
jbe
arpl
xchg
cmp
cmp
add
dec
inc
das
jmp
push
es
push
add
call
lock
sbb
fdivr
(bad)
sub
out
and
sub
cmp
and
pop
dec
xor
dec
and
inc
xchg
pop
dec
shl
fldenv
(bad)
cmpps
xor
inc
leave
or
lock
adc
loopne
mov
pop
push
jle
fadd
sub
test
lahf
(bad)
test
(bad)
retf
and
adc
dec
dec
inc
cmps
cmps
or
pop
jo
jp
pop
or
mov
or
jo
das
sub
pusha
add
in
add
add
add
adc
pop
cmp
inc
xor
iret
les
nop
dec
xor
das
iret
nop
dec
mov
or
inc
mov
nop
mov
xchg
cmc
pop
pop
stos
inc
sub
sahf
push
jne
dec
dec
and
jg
outs
gs
call
das
or
scas
cld
cmps
rol
or
or
(bad)
stos
add
jle
jbe
cmp
sahf
push
inc
pop
or
repz
mov
add
mov
mov
fstp
mov
xor
push
ret
shl
les
and
mov
sbb
xchg
cmp
int
mov
pop
push
(bad)
and
add
fistp
es
dec
repz
int
ds
xor
xor
pusha
cmp
dec
adc
cmp
test
out
shl
rcl
mov
push
and
pop
rcl
push
aas
jae
shr
lock
addr16
mov
cs
ret
js
(bad)
cmp
(bad)
push
mov
and
lds
add
or
loopne
leave
mov
push
xchg
mov
jnp
iret
out
int3
es
and
das
and
loopne
or
mov
call
adc
out
stos
jae
and
leave
js
out
test
or
shr
push
scas
push
retf
add
dec
nop
xchg
pusha
or
sub
outs
jg
mov
push
xor
add
(bad)
xor
cmp
(bad)
aas
ds
dec
and
inc
push
inc
ret
movs
cmp
xchg
jo
mov
sbb
xchg
xchg
mov
dec
arpl
das
ins
sbb
(bad)
test
inc
jge
ja
sti
pop
inc
xchg
rol
xchg
in
dec
inc
cmp
add
mov
movsx
mov
cmps
dec
outs
sub
inc
add
and
imul
nop
lock
dec
jne
push
add
fidiv
addr16
fiadd
jmp
imul
mov
add
pop
add
jecxz
daa
pop
call
imul
cli
and
ret
sbb
jmp
cmps
and
sbb
ins
test
lahf
inc
mov
into
aaa
sub
dec
aam
fs
mov
and
mov
rol
mov
repz
xor
pop
cmp
dec
arpl
push
pop
(bad)
cmp
repz
aas
jg
inc
sahf
out
sahf
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
jns
jle
imul
das
clc
push
add
jns
imul
cmp
inc
pop
push
loope
sub
pop
loope
jl
repz
push
adc
push
pop
rcl
(bad)
or
cmp
aas
push
or
in
sbb
mov
in
in
inc
loopne
aas
pop
cmp
leave
sbb
xchg
out
cmp
rcl
xchg
xchg
xchg
xchg
push
xchg
xchg
xchg
mov
add
idiv
push
unpcklps
jmp
in
in
je
enter
in
fs
add
in
in
inc
call
leave
leave
pop
sbb
push
push
push
pushf
pushf
pushf
jl
fdivr
pop
leave
leave
leave
add
leave
leave
leave
leave
or
dec
clc
leave
leave
leave
leave
add
mov
and
(bad)
leave
leave
leave
leave
or
movs
leave
leave
leave
leave
add
leave
leave
pop
pop
sbb
jp
aam
leave
leave
leave
adc
mov
leave
leave
leave
or
leave
leave
add
pushf
pushf
pushf
pushf
xor
int3
pushf
pushf
pushf
pushf
pcmpgtd
lods
pushf
pushf
pushf
pushf
push
xchg
pushf
pushf
pushf
pushf
or
pushf
pushf
pushf
pushf
pushf
arpl
fdivr
cmp
cs
jbe
aas
mov
add
lds
call
or
leave
inc
push
ret
pushf
pop
popa
and
pushf
add
pop
sbb
pushf
cmp
imul
mov
mov
repnz
adc
das
inc
add
jb
and
retf
jb
jb
stos
add
pop
jb
pop
sbb
and
fisub
daa
daa
pop
ins
sub
daa
daa
lea
pop
jb
jb
adc
jae
and
daa
xor
arpl
jb
and
jb
inc
out
sbb
and
xchg
jnp
daa
daa
pop
jb
imul
daa
daa
daa
daa
or
jb
push
pop
pop
enter
aaa
into
addr16
pushf
pushf
pushf
daa
scas
pop
xchg
test
pop
enter
jg
xchg
fild
das
dec
dec
outs
mov
pop
(bad)
(bad)
dec
inc
and
test
inc
es
mov
xchg
and
mov
cdq
dec
es
fs
fnstcw
stc
lds
in
cdq
dec
es
aad
xchg
mov
cdq
dec
es
int
in
xchg
mov
(bad)
cdq
dec
es
cdq
ret
mov
jecxz
rcl
repz
es
mov
stos
mov
jmp
cdq
dec
es
fstp
sub
cmps
dec
es
mov
xchg
mov
xlat
mov
xchg
mov
and
es
mov
mov
(bad)
inc
dec
push
jns
push
adc
push
add
pop
add
inc
pop
call
push
pop
add
in
and
or
cmps
repnz
or
shl
fs
pusha
inc
sbb
sbb
push
popa
fs
xchg
inc
pusha
add
push
sbb
xor
or
inc
rol
adc
fisttp
inc
mov
or
stos
cmp
cmps
add
add
data16
movs
xor
inc
mov
add
cmc
xor
sar
imul
fs
in
jbe
sahf
in
xchg
add
push
test
fisttp
out
or
shl
and
dec
shl
arpl
dec
shl
mov
in
cmps
add
pop
add
mov
fnsetpm(287
mov
mov
(bad)
pop
dec
ficomp
jle
xor
adc
scas
or
ds
pop
fild
sbb
data16
iret
or
pop
cmp
cmp
or
cmp
cmp
or
add
(bad)
(bad)
jg
xor
ja
popa
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
dec
movs
mov
aad
mov
rcl
mov
sub
mov
(bad)
(bad)
(bad)
call
dec
jno
repz
test
ficomp
jmp
(bad)
mov
hlt
mov
call
shr
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
(bad)
(bad)
(bad)
(bad)
cmp
imul
addr16
add
aam
dec
std
test
movs
cli
test
(bad)
(bad)
(bad)
push
(bad)
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
(bad)
(bad)
jmp
cmp
ficom
push
xlat
enter
mov
and
mov
cdq
xchg
mov
mov
(bad)
(bad)
jmp
or
or
and
or
adc
stos
sbb
data16
inc
fdivr
(bad)
(bad)
push
jno
add
aad
mov
mov
movs
in
lahf
xor
mov
push
add
js
stc
xchg
or
(bad)
dec
loope
or
ins
or
pop
arpl
hlt
push
imul
ins
sbb
xor
dec
add
(bad)
(bad)
jmp
in
xchg
push
ins
jnp
add
shl
adc
cmc
(bad)
fnstenv
adc
mov
sbb
(bad)
(bad)
mov
bound
ficom
gs
aam
pop
popa
mov
into
pop
std
jg
and
xor
dec
xlat
xchg
fdivr
(bad)
(bad)
mov
sti
hlt
(bad)
shr
imul
mov
sar
add
in
add
(bad)
(bad)
push
pop
dec
or
cmp
add
daa
adc
or
and
test
(bad)
(bad)
jmp
or
mov
popa
into
push
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
(bad)
(bad)
jmp
cmp
lods
ins
mov
in
mov
mov
add
inc
aad
scas
ja
(bad)
(bad)
(bad)
call
adc
jae
or
test
fs
ds
or
or
push
in
dec
(bad)
(bad)
mov
lods
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
(bad)
test
ss
sbb
push
imul
aam
loopne
ror
int3
dec
frstor
(bad)
(bad)
(bad)
(bad)
mov
mov
mov
aad
mov
call
xchg
shl
push
repnz
addr16
(bad)
(bad)
(bad)
mov
cmps
fld
mov
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
(bad)
(bad)
(bad)
jmp
push
fbld
out
mov
jns
imul
and
shr
ss
push
xchg
ja
(bad)
(bad)
dec
add
mov
das
es
lds
or
sub
mov
cmps
(bad)
(bad)
(bad)
(bad)
call
ret
shl
sbb
ret
es
pushf
mov
ins
add
dec
pushf
aas
ss
jmp
addr16
jb
push
les
jp
loop
sub
(bad)
call
mov
fwait
mov
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
inc
mov
mul
ja
outs
ja
mov
out
cli
jo
ud0
(bad)
dec
cmp
pop
or
adc
sahf
gs
clc
sar
imul
push
js
or
(bad)
(bad)
jmp
push
add
mov
cmp
cmps
not
pusha
ror
imul
push
(bad)
(bad)
(bad)
jmp
or
inc
lock
aaa
push
scas
mov
fidivr
mov
jmp
repnz
mov
xor
mov
add
push
xlat
int
push
ficom
fldenv
cs
clc
(bad)
(bad)
push
add
push
sub
mov
or
sbb
add
sub
ja
arpl
nop
mov
push
dec
mov
jecxz
test
arpl
xchg
call
push
(bad)
stos
and
dec
je
data16
ror
jns
imul
scas
push
xchg
ret
mov
sub
cwde
mov
sar
push
adc
or
pop
sub
inc
xchg
cmc
sub
(bad)
fiadd
aas
xchg
cmp
(bad)
aam
aaa
retf
sub
and
mov
jne
xchg
xor
ins
call
xlat
ja
call
out
jb
mov
cmc
mov
push
fiadd
xor
sub
mov
add
pop
jno
xchg
retf
das
das
inc
push
push
or
nop
mov
fisubr
aam
pop
enter
push
push
ror
enter
xor
jle
add
push
outs
push
dec
nop
xchg
inc
sbb
lahf
rcl
scas
xor
gs
mov
or
inc
cmp
out
push
dec
jns
inc
rcl
add
addr16
outs
or
pop
ins
iret
rcr
or
sti
xor
jo
not
test
pop
add
xchg
daa
and
jae
push
dec
pop
add
retf
sub
adc
inc
cmp
xchg
sbb
cmp
stc
mov
add
mov
outs
call
ins
push
cmp
push
jmp
imul
mov
mov
mov
dec
mov
pop
aaa
dec
movs
arpl
movs
jns
xchg
cmps
pop
ds
iret
ja
dec
iret
jae
leave
add
shr
fmul
mov
inc
stos
jo
in
test
data16
stos
(bad)
popa
jl
scas
fld
sub
in
mov
addr16
scas
ins
push
stc
outs
(bad)
ja
mov
fs
nop
push
or
mov
sti
and
xor
push
pushf
pop
jb
xor
inc
out
mov
je
test
fsubr
inc
sbb
dec
lea
into
(bad)
xlat
mov
sbb
dec
mov
jb
leave
mov
inc
pop
push
mov
in
mov
push
mov
mov
mov
or
cmp
pop
(bad)
xor
imul
sbb
fwait
out
jbe
jae
mov
imul
out
arpl
and
movs
arpl
(bad)
inc
popw
dec
add
inc
fwait
pop
inc
pop
enter
inc
inc
push
jb
mov
dec
(bad)
push
jb
dec
pop
leave
add
dec
dec
or
dec
loope
sbb
jae
jb
dec
out
push
pop
jb
push
push
mov
xor
pop
rol
repnz
add
enter
push
popa
popa
pop
enter
popa
popa
and
add
pop
leave
push
jo
pop
gs
mov
imul
sub
dec
push
aad
outs
iret
outs
outs
jno
fadd
push
xor
fbstp
in
inc
scas
jne
mov
pushf
mov
outs
data16
jns
mov
jmp
or
xadd
sbb
inc
add
mov
inc
cdq
mov
clc
mov
imul
dec
iret
xchg
xchg
inc
(bad)
pavgb
aas
(bad)
xchg
dec
cmp
push
push
inc
push
cmps
xor
push
imul
fwait
(bad)
jmp
pop
push
xchg
(bad)
pop
jae
push
outs
pop
pop
in
adc
mov
dec
jne
pop
inc
imul
retf
inc
mov
dec
pop
enter
out
xchg
lahf
std
fs
shr
inc
les
cmps
clc
mov
fiadd
movs
rol
adc
es
out
outs
xor
(bad)
pushw
pop
sahf
in
(bad)
cld
out
lods
add
or
sbb
sub
push
sbb
iret
ja
loope
repnz
fdivp
es
inc
add
cmps
jl
adc
push
loope
add
pop
enter
mov
push
cmp
in
popf
nop
int
cli
add
adc
and
imul
pop
fs
(bad)
dec
or
in
push
xchg
cli
iret
je
inc
es
daa
in
add
lds
adc
(bad)
cli
mov
mov
aas
(bad)
movs
div
pop
jnp
inc
int3
test
sti
add
adc
sbb
mov
bound
(bad)
fmul
and
jns
sti
pop
xchg
fadd
nop
out
dec
dec
out
xchg
mov
loop
movs
mov
xor
iret
test
xchg
and
outs
lds
lock
cmova
loopne
cld
sub
sar
cld
cmp
dec
das
push
retf
sub
mov
daa
inc
les
pop
nop
test
mov
add
xchg
dec
mov
mov
std
adc
and
daa
nop
mov
or
lahf
push
inc
fs
imul
iret
sbb
mov
sub
add
fadd
cmp
out
push
out
inc
xor
(bad)
inc
adc
inc
pop
nop
imul
inc
sahf
stos
loope
aad
jbe
das
minps
cs
daa
xchg
dec
and
mov
push
mov
mov
xchg
das
(bad)
loopne
mov
dec
cmps
daa
nop
or
jmp
add
cmp
(bad)
cmp
fiadd
push
sbb
xchg
cmp
cs
jns
mov
enter
cmps
xadd
sub
pop
push
xchg
pop
push
pop
adc
dec
pavgb
cs
pusha
pop
cwde
sbb
in
inc
iret
repz
xchg
push
push
push
leave
imul
add
call
lahf
aaa
mov
sahf
xchg
mov
sbb
fdiv
outs
in
push
jnp
fs
xor
or
sbb
sub
mov
sbb
into
push
inc
sahf
js
adc
or
mov
es
add
dec
mov
xor
test
fs
out
add
add
and
sbb
mov
xchg
lods
dec
inc
pusha
das
or
add
inc
lods
add
cmp
movs
mov
add
mov
add
daa
in
add
push
sbb
loopne
test
hlt
jle
jb
iret
lds
scas
mov
adc
inc
mov
mov
inc
es
add
in
in
cld
add
xlat
enter
push
aas
in
jns
in
pop
push
push
and
nop
sub
inc
jmp
mov
inc
push
enter
mov
mov
xchg
mov
inc
adc
or
sahf
add
cmp
xor
cs
mov
xor
iret
test
adc
int3
or
cmp
in
loopne
cs
dec
xchg
sbb
push
and
add
neg
push
xor
cmp
(bad)
pop
repnz
enter
push
cmp
pop
enter
mov
xchg
sbb
(bad)
icebp
les
aam
loopne
or
mov
inc
pop
outs
xchg
out
test
or
adc
and
sub
xor
pop
adc
pop
ins
pop
mov
loop
cmova
ret
movs
push
shl
or
push
xor
(bad)
es
add
inc
fimul
or
(bad)
add
dec
movs
pusha
jbe
add
push
ins
in
popf
or
or
ins
cmps
outs
xchg
fadd
enter
ret
icebp
xchg
or
addr16
push
cld
or
je
fsub
or
ins
xchg
mov
pop
mov
fwait
or
or
inc
out
dec
sahf
ins
adc
dec
add
fimul
mov
nop
outs
and
add
neg
fbld
inc
mov
inc
push
dec
adc
xor
inc
push
add
push
(bad)
outs
add
adc
lods
jbe
daa
out
sbb
fisubr
iret
(bad)
in
(bad)
fdivr
or
clc
addr16
repz
aaa
ja
in
add
js
or
or
push
dec
pop
xchg
xchg
pusha
outs
dec
lahf
ja
or
into
scas
pop
adc
xchg
sub
or
out
adc
sub
or
push
lock
pusha
add
pop
or
aam
jmp
movs
bound
jl
or
inc
sub
push
mov
iret
mov
cwde
cmp
and
or
push
movs
addr16
add
xor
in
mov
out
cs
or
dec
or
enter
pushf
or
pop
leave
jae
mov
jb
out
add
sbb
jb
and
push
and
push
popf
push
xor
inc
xchg
xchg
adc
sbb
movs
or
sub
cmp
pusha
outs
adc
inc
mov
test
adc
mov
pop
sub
out
push
loopne
nop
clc
invd
push
adc
cs
fadd
clc
xchg
mov
outs
inc
addr16
or
cmp
mov
ficomp
out
xchg
dec
daa
push
adc
(bad)
dec
sub
daa
or
jmp
jns
push
push
in
clc
adc
outs
and
push
add
in
or
adc
add
inc
lahf
ja
and
addr16
and
out
rol
cwde
ins
shr
pop
enter
movs
cs
ss
aas
(bad)
jno
dec
adc
adc
add
daa
sar
ret
adc
outs
inc
adc
or
in
nop
test
nop
dec
sahf
mov
nop
out
lock
adc
add
xchg
lock
jns
test
outs
inc
xchg
push
pop
inc
dec
and
icebp
pop
adc
inc
and
mov
pushf
push
mov
daa
add
ja
mov
movs
add
fmul
loopne
scas
clc
aas
(bad)
xchg
in
cmp
out
xchg
clc
mov
push
jmp
jne
jle
or
sub
inc
push
nop
cmps
repnz
pop
jo
and
lods
inc
mov
aaa
dec
inc
lods
ja
sahf
or
adc
push
mov
cmp
lahf
push
add
cld
fild
pop
scas
push
xchg
adc
aaa
adc
outs
movs
(bad)
loopne
mov
mov
das
add
adc
(bad)
dec
aaa
pop
dec
sbb
mov
ret
adc
mov
xor
daa
sbb
adc
outs
ins
and
mov
(bad)
sahf
xchg
add
xor
ror
add
fwait
inc
pop
shr
js
int3
call
pushw
sbb
sub
mov
push
fistp
jbe
enter
or
rol
cmps
or
cs
call
add
cmp
pop
enter
pop
or
pmuludq
jmp
jmp
(bad)
adc
ja
fs
jns
bnd
push
cwde
mov
enter
fs
cwde
push
mov
loopne
adc
sbb
sbb
adc
cs
ficomp
lahf
call
mov
push
jo
call
jbe
cmc
pop
sbb
cmps
mov
iret
test
call
add
dec
psubusb
push
push
dec
cmp
in
fs
push
enter
sbb
dec
nop
scas
mov
mov
repz
push
push
rol
clc
sbb
jl
addr16
pop
enter
fadd
push
in
rol
not
popa
sbb
sbb
or
add
and
mov
test
ret
out
in
daa
out
fisubr
inc
mov
lock
test
sbb
pop
dec
pop
xor
bound
loopne
pop
jbe
or
dec
aas
(bad)
push
cmp
repnz
js
out
adc
sar
mov
xchg
daa
push
loope
hlt
adc
fs
and
add
push
movs
sbb
cmp
pusha
inc
sbb
les
enter
aas
div
push
add
dec
sbb
push
xor
div
ss
outs
xchg
xchg
jnp
mov
fs
repnz
enter
mov
xchg
cmp
ror
and
test
cld
or
fidivr
sbb
int3
cmp
popf
nop
cld
clc
add
dec
xchg
pop
sbb
js
fsub
push
and
push
and
push
mov
fnstenv
and
rol
rol
bound
in
clc
push
or
loopne
push
cmp
dec
jg
fwait
sbb
push
cwde
inc
je
leave
idiv
mov
cwde
inc
pop
cwde
add
pop
jb
push
fsubr
mov
sar
add
mov
lock
mov
scas
mov
mov
sub
pop
pop
pop
xor
fiadd
xchg
mov
jp
and
(bad)
or
xor
sub
pop
(bad)
cld
fisttp
mov
pop
(bad)
jo
enter
pop
fs
dec
fld
mov
mov
mov
sub
push
lahf
jle
sub
and
stos
jne
call
sbb
popf
or
inc
(bad)
and
enter
cli
adc
je
cs
lock
daa
inc
iret
je
and
lds
ja
ret
clc
inc
xchg
shl
mov
and
jno
and
and
push
mov
add
adc
ins
push
jl
dec
dec
jo
jg
dec
cmp
lods
mov
lea
(bad)
lods
loopne
ja
js
(bad)
and
sbb
cmp
mov
cmps
sti
xchg
stos
mov
repz
pop
xchg
inc
subps
vmovdqu
xlat
repz
and
jbe
in
sub
jb
jmp
and
mov
aas
cs
loopne
fiadd
fs
push
repnz
xchg
ss
enter
ja
daa
or
xchg
lods
test
and
test
xchg
sar
jl
and
push
dec
pop
or
cs
lods
(bad)
mov
jl
inc
cs
push
test
mov
cmp
cld
or
loopne
pusha
imul
dec
enter
jbe
sbb
sub
inc
ja
adc
lods
pop
inc
es
add
mov
in
out
pusha
pushf
scas
add
fild
xchg
fild
call
rcl
enter
iret
les
pop
mul
inc
jl
xor
mov
arpl
daa
ins
push
je
fbld
add
les
mov
inc
cs
shr
repnz
lock
jne
or
(bad)
lock
push
lock
cmp
(bad)
outs
loopne
pop
std
add
xchg
movs
test
(bad)
sub
dec
add
and
cmp
hlt
xchg
fadd
int
dec
and
cld
sub
popf
nop
and
xor
inc
xchg
cld
cmp
mov
sbb
and
test
mov
mov
int3
fcomp
fwait
or
or
fidivr
sub
push
and
test
repnz
enter
push
fs
and
jae
iret
test
mov
leave
mov
jns
inc
cld
sub
nop
or
and
add
repnz
fdivr
sub
or
sbb
popf
pusha
jg
inc
xchg
sahf
movs
fwait
inc
pop
repnz
(bad)
pop
add
enter
in
mov
add
cmps
cmpxchg
or
es
sub
add
and
call
rcr
rcr
mov
daa
xchg
sub
les
aam
stos
mov
push
in
add
dec
xor
jbe
scas
fmul
pop
sub
inc
xor
push
ss
seta
fstp
ins
push
mov
jns
and
cs
mov
(bad)
enter
pop
aam
push
in
mov
add
xor
mov
mov
mov
pop
or
daa
cs
push
dec
xchg
pushf
imul
inc
js
sub
mov
pushf
pop
add
pop
dec
pop
ja
sub
jbe
iret
fld
add
lock
cmp
jg
(bad)
in
pop
out
loopne
jmp
cmp
mov
add
fld
aad
pop
out
xchg
js
mov
out
pop
jl
aam
out
mov
daa
das
fadd
hlt
xor
lahf
cs
loope
addr16
inc
cmc
add
ss
add
sub
cmp
cmp
aas
add
push
and
pop
outs
daa
and
fdiv
jecxz
push
loopne
xchg
xlat
mov
cld
mov
jb
xlat
xor
xor
mov
aas
add
push
fmul
xor
adc
outs
xchg
dec
pop
repnz
enter
dec
cmp
jb
mov
int
cld
xor
push
in
test
aas
dec
ss
pusha
dec
pop
pop
mov
xor
jns
movs
add
mov
in
cld
sbb
pop
addr16
enter
xchg
xor
scas
loopne
xlat
pop
add
add
outs
mov
inc
mov
add
sub
sbb
xor
xor
or
adc
imul
mov
dec
outs
cmp
dec
pop
cs
jb
xor
mov
push
fdivr
pop
xor
push
lods
and
in
push
xlat
mov
cmps
mov
fcom
or
lods
fs
mov
sub
pop
enter
ss
add
and
push
cs
add
call
fsubrp
jp
(bad)
pop
jmp
jno
pop
add
jae
out
xor
enter
add
fimul
ss
push
pop
scas
(bad)
fcom
add
xor
sar
data16
mov
lahf
sub
js
aas
cld
ja
sbb
daa
ss
or
or
aaa
adc
jo
pop
enter
mov
(bad)
(bad)
jnp
push
push
fs
sbb
aaa
int3
dec
cmp
sti
cmps
(bad)
mov
sbb
mov
aaa
mov
jns
imul
and
fimul
cmp
adc
pop
hlt
iret
and
ja
xchg
push
mov
inc
fs
aas
mov
jns
(bad)
pop
xor
(bad)
sahf
lods
mov
(bad)
pushf
jae
cmp
cwde
in
hlt
cdq
pusha
fbld
inc
add
or
outs
xor
adc
and
aam
mov
loopne
mov
push
mov
dec
adc
jg
pop
cmp
sahf
or
loopne
mov
in
jb
cmp
rol
outs
jmp
inc
ja
(bad)
cmp
(bad)
out
cmp
pop
scas
mov
test
pop
inc
cdq
test
xchg
cwde
push
test
cmp
mov
(bad)
cmp
add
push
hlt
xchg
rol
fsub
ss
or
and
sbb
idiv
xor
mov
or
xor
inc
cwde
push
pusha
ins
inc
test
sahf
or
enter
cmp
cmp
or
pop
rcr
and
ja
sahf
and
pop
push
pop
fimul
add
xchg
mov
add
out
cmp
push
lods
cs
out
push
es
clc
pop
enter
and
inc
mov
push
out
cmp
push
out
pop
sub
pop
out
xchg
js
out
cmp
loope
lods
das
add
out
adc
cmp
dec
cmp
iret
jae
ds
rol
add
mov
mov
mov
or
sbb
pusha
xchg
mov
push
out
inc
ss
mov
adc
or
cmp
add
shl
imul
add
or
addr16
inc
jae
dec
push
(bad)
outs
xchg
mov
lock
pop
or
mov
dec
addr16
add
leave
jae
ins
call
outs
xchg
or
pushf
or
and
lods
mov
mov
clc
pop
and
call
movs
outs
xor
inc
inc
and
js
or
ss
add
add
xchg
mov
pop
repnz
outs
int3
fdivr
iret
push
out
push
popf
fadd
pop
inc
and
xor
inc
pop
jg
aaa
inc
push
or
jbe
cmp
or
xor
or
cmps
mov
pop
push
lock
enter
scas
cs
lock
push
lahf
js
fimul
jns
inc
or
sbb
cs
sub
push
jb
inc
push
cmps
pusha
or
add
scas
shl
seto
scas
shl
movs
and
fcomp
shr
out
jno
lahf
shl
dec
enter
xor
inc
iret
xchg
xchg
loopne
push
cmps
jg
les
test
sbb
push
cmps
je
bound
ins
enter
push
nop
or
mov
xchg
ins
add
cmp
inc
adc
inc
and
push
push
loop
dec
fisttp
ficomp
pop
ret
repz
inc
mov
pushf
mov
dec
and
push
dec
sbb
inc
aam
scas
in
repz
pop
push
cmp
push
inc
js
inc
sbb
sub
push
cmp
ss
jg
js
cmp
inc
inc
push
js
icebp
adc
(bad)
(bad)
outs
and
cmp
push
fsub
mov
int3
loopne
inc
pusha
test
ja
ss
mov
adc
push
pop
add
outs
inc
inc
pushf
imul
sahf
jl
add
lods
push
aad
out
push
inc
mov
shr
cmp
add
dec
add
and
or
dec
dec
dec
pop
push
jo
mov
sbb
dec
push
nop
or
mov
xchg
jl
mov
mov
sahf
dec
or
add
mov
loop
les
dec
dec
or
sub
pusha
ffreep
xchg
je
ins
jg
in
and
push
lods
xchg
in
and
dec
nop
adc
add
in
push
dec
adc
add
call
add
push
dec
inc
dec
sbb
into
pop
pop
rcr
test
jp
ins
or
test
sub
push
dec
call
add
add
mov
mov
dec
inc
push
push
dec
dec
and
mov
enter
nop
pushf
pop
jb
pop
aam
lock
fsubr
mov
dec
jno
or
loopne
ins
(bad)
inc
addr16
or
jnp
sub
push
push
pop
aas
fbstp
not
(bad)
adc
jae
adc
add
pop
enter
pusha
xor
jb
aam
dec
sub
inc
dec
dec
fild
enter
cmps
mov
out
(bad)
lock
dec
test
mov
or
fwait
pusha
(bad)
je
fadd
cmp
inc
dec
dec
test
inc
scas
in
hlt
dec
push
cmc
dec
push
dec
jg
outs
in
jnp
and
inc
add
push
push
pusha
pop
or
cmps
ja
loopne
fcomp
push
cmp
push
(bad)
div
test
(bad)
nop
push
add
add
and
fwait
inc
sahf
bound
push
daa
mov
sbb
mov
bound
shr
cmps
rcr
cmp
push
pop
pop
cs
movs
xchg
test
(bad)
fdivr
and
jle
sbb
sub
dec
fild
scas
les
cmp
sub
dec
pop
stos
ret
out
pop
or
push
mov
push
int3
aas
into
lds
fmul
mov
xor
push
or
sbb
or
inc
add
cs
outs
dec
jg
pop
shl
xchg
push
call
mov
jg
test
push
lods
push
(bad)
call
cmp
xor
scas
pushf
mov
call
push
adc
nop
add
adc
and
push
pusha
fisubr
div
adc
lds
stos
ja
mov
add
add
ins
es
ss
and
or
push
and
pop
mov
out
or
lods
adc
dec
das
adc
pop
jge
lds
xchg
push
ficom
add
and
pop
xchg
sbb
mov
loopne
push
rol
in
jg
enter
add
adc
rcl
push
cmp
xchg
outs
mov
cmp
or
mov
push
push
pushf
out
jbe
(bad)
or
test
int3
(bad)
push
pop
lock
push
cmps
push
hlt
(bad)
pop
enter
add
int3
dec
daa
fimul
fst
push
xor
dec
(bad)
push
pop
scas
push
and
or
pop
test
push
mov
imul
jp
cwde
inc
xchg
and
mov
add
push
inc
xchg
and
push
and
adc
add
push
daa
dec
dec
push
and
imul
out
inc
inc
call
push
pushf
pop
test
dec
add
iret
test
fsubr
enter
dec
int3
adc
call
(bad)
push
inc
cmps
push
mov
jg
les
repnz
and
push
mov
enter
mov
int3
fdivr
mov
jno
mov
or
cmc
mov
xor
iret
cs
addr16
mov
inc
add
ss
add
or
sbb
loop
push
and
pop
pop
push
jg
mov
cld
(bad)
ficomp
push
and
pop
add
or
xchg
mov
js
outs
imul
aam
sahf
or
mov
in
test
sub
fimul
push
and
pusha
(bad)
pop
add
cld
out
mov
pop
sub
sbb
push
into
mov
cmp
in
ja
mov
add
in
nop
test
hlt
pop
add
sbb
popf
or
enter
push
ins
and
enter
nop
out
lahf
sbb
nop
mov
mov
dec
lahf
ss
rcl
call
xlat
(bad)
xor
xlat
pop
add
push
mov
xlat
out
fst
adc
mov
lock
pusha
test
bound
(bad)
sbb
int
nop
addr16
les
call
mov
jbe
mov
ss
push
pop
and
inc
in
rcl
iret
pop
dec
test
pop
adc
rcr
fist
repnz
outs
xchg
push
mov
pop
and
add
jl
(bad)
xor
(bad)
ficomp
push
adc
(bad)
cld
je
js
pushf
inc
inc
(bad)
push
sbb
icebp
je
outs
fucomip
cdq
mov
xchg
mov
fimul
(bad)
(bad)
sbb
mov
pop
cld
adc
mov
call
mov
xor
xlat
pop
adc
(bad)
mov
leave
jae
pushf
adc
pop
pop
or
xchg
fs
sub
push
fcom
lods
pop
adc
mov
push
jo
jl
pusha
pusha
ins
inc
sub
sbb
xor
cwd
mov
or
(bad)
mov
scas
mov
je
adc
and
push
cmc
dec
push
mul
push
in
inc
pop
add
sbb
lahf
(bad)
jp
fs
popa
adc
and
cmp
jo
sub
xchg
xchg
mov
js
popa
jl
cwde
movhps
rcr
add
cmp
cmp
push
call
mov
popf
ja
bound
bound
push
cmp
dec
lahf
les
(bad)
test
(bad)
fcomp
dec
sbb
sub
cld
inc
pop
pop
jmp
pop
add
cmp
test
bound
mov
ror
arpl
sub
stos
add
push
inc
inc
pop
jns
and
sbb
in
test
pop
scas
pop
and
xlat
es
pop
mov
arpl
shl
ins
fs
sbb
add
fdivr
cmps
enter
fs
pop
fdiv
mov
push
or
cwde
lods
push
pop
enter
cmps
mov
daa
and
jmp
clc
xchg
or
(bad)
cmp
fwait
dec
sub
push
inc
xchg
pop
enter
sub
pop
inc
test
movs
es
dec
adc
outs
push
mov
inc
mov
mov
push
js
cld
outs
pop
add
cs
push
out
test
push
push
iret
cs
jae
scas
data16
inc
sahf
or
xchg
lods
daa
in
mov
fwait
mov
jmp
adc
fisubr
(bad)
adc
pop
xor
dec
sahf
inc
cmps
cmps
ss
addr16
push
push
xchg
push
cmps
(bad)
mov
ins
pushf
pop
inc
and
mov
mov
xchg
ins
ja
cwde
add
push
sbb
(bad)
aas
mul
(bad)
and
add
shr
loope
sbb
enter
push
enter
pop
enter
ror
add
hlt
test
mov
sbb
inc
sahf
or
imul
nop
out
mov
mov
out
inc
jmp
push
in
xchg
mov
adc
cld
push
sbb
xchg
cld
add
imul
xchg
and
push
out
js
cwde
mov
dec
mov
outs
push
mov
into
cmp
push
push
add
sub
mov
fstp
imul
(bad)
xor
push
mov
xor
in
and
push
nop
push
mov
es
add
pop
adc
imul
in
fs
xchg
inc
jmp
test
and
ins
ins
ins
nop
or
and
sbb
addr16
js
or
inc
ret
mov
add
push
nop
sub
and
adc
xchg
mov
popa
inc
xchg
dec
outs
and
ins
cmp
push
pop
inc
icebp
ss
xlat
dec
outs
inc
add
cs
sub
sbb
aam
cmps
mov
cmovl
shl
das
and
ins
mov
sahf
outs
or
mov
push
xor
movs
repnz
push
jg
les
push
cmp
jo
inc
push
cmp
jb
cmps
pusha
lock
and
lock
enter
pop
outs
dec
call
pop
and
(bad)
outs
xchg
out
inc
add
rcr
aaa
push
add
push
mov
enter
outs
mov
out
cwde
inc
test
fsubr
jo
push
adc
fcom
mov
repz
jo
xchg
push
push
jo
push
push
dec
pop
es
into
(bad)
fimul
dec
xchg
push
push
ror
cdq
pusha
fisttp
lahf
mov
js
xlat
jno
sbb
cmp
pop
add
or
inc
es
xchg
in
repnz
jno
mov
xchg
add
jno
mov
push
push
shl
nop
or
inc
add
es
jb
dec
mov
lock
nop
mov
dec
mov
push
shl
add
test
mov
daa
sbb
sbb
jecxz
jb
push
mov
es
add
ss
xchg
(bad)
jb
jae
mov
add
mov
jae
push
fild
jns
(bad)
daa
pop
(bad)
pushf
or
dec
jae
xor
nop
add
push
mov
out
add
loopne
je
cmps
push
sbb
pop
dec
daa
in
out
aaa
inc
jg
sub
xor
push
xor
mov
xor
dec
inc
cmp
je
push
cld
add
push
xor
add
sbb
pop
enter
sub
(bad)
cmp
push
jne
push
pusha
lahf
sub
out
ins
and
dec
xor
push
test
dec
add
into
sub
jne
and
lods
lods
push
add
ja
jle
cmps
jbe
pop
test
loope
sub
js
jbe
push
movs
cdq
pusha
fld
inc
add
or
xchg
je
ds
push
js
cdq
pusha
mov
fimul
push
push
xchg
shl
xchg
in
adc
cmp
ja
push
or
push
shl
call
add
inc
pop
adc
add
int
cdq
ja
inc
js
sub
jnp
cmp
pusha
ja
dec
fist
inc
call
add
(bad)
js
push
ror
xor
fdiv
jbe
xchg
mov
add
or
mov
aaa
adc
pop
inc
jns
test
into
mov
(bad)
mov
call
mov
call
sti
inc
add
push
(bad)
jns
or
(bad)
lods
inc
daa
pop
add
dec
in
popf
nop
loopne
adc
cmp
sub
neg
inc
sahf
or
jp
cmp
mov
(bad)
rol
pushf
imul
xlat
fs
(bad)
jnp
push
sbb
bound
cld
xchg
jl
dec
outs
and
sahf
outs
xchg
pop
jo
mov
cmp
xchg
mov
push
int3
adc
mov
dec
enter
cld
jl
cs
sub
push
sub
out
inc
cld
mov
mov
pusha
xchg
cld
fld
add
mov
test
and
dec
jmp
in
mov
loopne
cwde
inc
out
push
jo
jl
sub
push
dec
ret
daa
jge
push
sub
mov
addr16
cmp
add
daa
jge
push
je
adc
sar
xchg
out
sahf
xor
jb
xor
lock
or
lock
sahf
mov
push
pusha
pop
enter
jle
nop
arpl
(bad)
lock
(bad)
jle
push
test
popf
or
and
jle
xchg
hlt
mov
add
loopne
mov
jg
push
inc
xchg
loopne
mov
inc
outs
xchg
inc
or
cmp
(bad)
jg
push
nop
aaa
and
in
pop
dec
add
jae
(bad)
jg
cdq
pusha
ret
mov
add
or
or
adc
xlat
push
push
or
nop
or
pop
(bad)
fiadd
(bad)
mov
inc
mov
jecxz
mov
daa
cs
nop
mov
or
test
pushf
pop
mov
xor
add
(bad)
pop
lock
aam
inc
mov
xchg
mov
les
pusha
(bad)
ss
lock
adc
jbe
dec
and
sub
mov
mov
adc
or
daa
sbb
movs
outs
nop
jl
cmp
enter
movs
pop
call
fmul
or
pop
or
sub
mov
mov
add
sbb
pop
dec
fidivr
loopne
test
repz
xor
nop
out
push
out
test
add
les
cmp
add
ss
fmul
or
inc
cld
xchg
iret
repnz
test
fild
push
jns
movs
cdq
test
ss
cwde
and
push
jo
add
in
add
add
xchg
movs
push
enter
add
imul
pusha
mov
add
ja
add
out
xor
cmp
scas
nop
add
repnz
enter
dec
xchg
or
add
dec
push
mov
fadd
inc
je
in
out
scas
mov
sbb
sub
clc
or
cmps
xchg
aaa
inc
dec
sahf
ins
sbb
sahf
or
inc
dec
jo
xor
test
sub
outs
das
imul
adc
ja
ret
xchg
xchg
push
dec
nop
adc
lods
dec
dec
lahf
xchg
sbb
mov
test
mov
ss
int
ss
adc
dec
push
imul
mov
adc
(bad)
cmp
sub
mov
ja
xlat
in
movs
and
nop
sub
ins
add
cs
pop
mov
jge
js
mov
push
shl
add
sbb
(bad)
out
test
je
pop
enter
movs
push
mov
cmp
pusha
test
dec
dec
and
sahf
mov
or
cmp
pushf
movs
pmulhuw
fadd
mov
push
ffreep
nop
or
les
pop
dec
and
psubusb
out
test
jbe
jp
repz
or
pop
jnp
ja
pop
add
(bad)
repz
cmps
lahf
rcl
xor
push
add
sub
inc
mov
fcmovnu
dec
pop
sub
ja
shl
pop
push
fs
rcl
ins
leave
lods
lahf
ja
add
bound
mov
xor
fadd
outs
loopne
or
jg
data16
inc
dec
dec
mov
add
(bad)
movs
ins
fsubrp
test
add
lea
popa
iret
repz
inc
and
sahf
imul
mov
out
popf
or
mov
push
rcl
adc
outs
or
loop
data16
arpl
cmp
ja
cmps
mov
jl
test
aaa
inc
xchg
add
mov
lock
adc
dec
daa
dec
pop
test
or
daa
lea
or
fld
mov
adc
addr16
lock
jno
call
inc
push
outs
dec
sahf
mov
lahf
data16
call
aaa
sub
xchg
scas
lahf
lock
div
daa
xchg
outs
pop
sub
lods
lea
out
xchg
call
iret
inc
hlt
push
sahf
(bad)
dec
test
ins
dec
xchg
or
pop
(bad)
js
push
mov
mov
sub
adc
or
call
push
repnz
adc
xor
pop
pop
sahf
or
mov
pop
nop
enter
dec
add
cdq
inc
mov
ds
call
and
test
pop
xchg
mov
xchg
or
xchg
je
pop
push
dec
enter
xchg
movs
xchg
mov
mov
lock
int3
dec
pop
add
jns
enter
cmp
jge
fimul
xchg
or
sbb
adc
(bad)
xchg
xchg
pop
je
and
xchg
(bad)
push
sbb
mov
push
inc
aaa
xchg
daa
les
add
sbb
fimul
xchg
add
adc
test
(bad)
dec
lahf
hlt
ss
(bad)
outs
inc
lahf
push
fs
call
lock
dec
xchg
sar
call
xchg
inc
add
test
lock
or
push
iret
inc
xchg
loopne
test
dec
into
xchg
sub
cmp
dec
xchg
inc
dec
add
pop
dec
ja
nop
out
lahf
ins
jl
mov
ins
jl
nop
jb
ja
adc
or
fmul
and
data16
js
fisubr
xchg
xchg
push
xchg
pusha
call
sahf
xlat
pop
add
call
cwde
js
adc
mov
push
mov
jg
cmp
cmps
push
cmp
call
in
sbb
xchg
xchg
and
inc
lock
add
pop
mov
mov
xor
push
cmps
add
in
pusha
aam
or
int3
aas
pop
cs
into
cld
or
mov
xchg
or
sbb
popf
nop
cld
pusha
sub
dec
daa
psubusb
rcl
xchg
dec
sub
fbld
xchg
cmp
fadd
jb
mov
xchg
in
sahf
cwde
xor
pop
rcl
rol
jmp
movs
or
out
(bad)
adc
and
out
push
mov
jns
add
shr
sub
pusha
pop
mov
dec
mov
bswap
push
call
cdq
add
cmp
iret
cld
stc
fild
loopne
pop
and
outs
inc
xchg
mov
lods
in
aaa
mov
jns
push
add
mov
retf
stos
in
lock
add
icebp
mov
fild
add
dec
push
fist
jb
aaa
dec
dec
xchg
(bad)
add
mov
(bad)
movs
lds
or
jbe
mov
ins
add
adc
in
xchg
ja
lahf
xchg
fisttp
pop
fist
iret
and
shl
cmps
push
fwait
jb
pop
outs
iret
lds
int
aad
jbe
jb
fucom
in
pop
loopne
(bad)
xchg
xchg
out
and
add
inc
and
or
lock
adc
scas
pop
(bad)
std
fstp
scas
das
mov
jge
mov
test
and
push
cmp
mov
dec
(bad)
int3
add
xlat
add
pushf
ins
enter
jmp
or
out
aam
mov
fcomp
mov
push
in
pop
imul
pop
push
and
pop
imul
mov
(bad)
fcmove
pop
sbb
fs
sbb
call
mov
lods
pusha
emms
add
sbb
daa
mov
push
add
daa
js
mov
sahf
cmp
je
leave
test
sahf
fcomp
bound
je
aam
js
jl
inc
add
outs
fwait
std
and
add
iret
add
xchg
out
pop
cmp
sbb
cmp
jb
inc
jne
dec
in
sbb
fiadd
pmaddwd
push
sub
pushf
push
push
add
pop
jb
enter
add
jae
push
outs
sahf
(bad)
mov
pop
mov
xchg
test
add
test
adc
jbe
cmp
add
out
pop
rol
cmps
jnp
cld
in
cmp
in
in
mov
ror
xchg
out
enter
mov
je
dec
movs
or
pop
leave
and
or
outs
in
popf
in
mov
test
mov
pop
pop
cmp
loope
add
pop
mov
in
add
pop
jb
xchg
add
call
(bad)
push
push
mov
pop
jp
in
mov
push
pop
les
pop
lds
outs
and
retf
int3
push
xchg
xchg
loopne
mov
mov
mov
sbb
push
mov
lods
daa
(bad)
leave
leave
ret
pop
mov
(bad)
sbb
pop
iret
aaa
cmp
xor
pop
push
icebp
add
pop
(bad)
movs
cwde
inc
push
xchg
(bad)
dec
movs
lods
sub
xchg
push
in
cmp
inc
aas
add
fisubr
xchg
enter
add
jnp
dec
inc
sbb
mov
iret
ror
xchg
mov
fs
fisubr
jg
lock
pushf
dec
out
out
daa
push
xchg
fcmovne
enter
inc
(bad)
inc
cmp
fbld
loop
cwde
push
push
out
cmps
nop
in
in
(bad)
cmps
test
pusha
or
imul
jmp
mov
in
cmps
or
push
loopne
adc
xor
add
dec
or
sahf
mov
cmp
jnp
push
add
add
add
pop
sbb
cld
imul
or
and
mov
dec
aas
jecxz
adc
mov
push
mov
sbb
add
push
lea
addr16
fisttp
mov
fild
xor
jmp
sbb
mov
aas
int3
in
daa
xchg
(bad)
xchg
inc
daa
cmp
jo
sbb
int
and
adc
push
stos
inc
stos
push
daa
fs
sub
stos
pushf
inc
leave
and
jno
adc
cdq
sub
ja
mov
jmp
stos
sbb
xchg
xchg
int3
fwait
outs
stos
push
cmp
(bad)
in
stos
fs
je
jmp
jmp
xchg
pop
push
call
xchg
fmul
cmps
lods
sbb
imul
jge
or
daa
out
and
sbb
pop
add
jb
and
lock
push
jmp
pushf
mov
hlt
pop
cmp
repnz
lods
sub
mov
xchg
lods
pop
lahf
sub
mov
cmp
xchg
lods
jl
push
pop
(bad)
rcr
mul
inc
in
dec
jb
inc
in
and
sub
mov
push
mov
xchg
mov
mov
pushf
dec
cs
(bad)
in
add
push
xcrypt-cfb
cmps
in
enter
retf
scas
push
fisttp
and
jg
je
in
or
in
mov
scas
mov
scas
hlt
add
push
lea
or
inc
adc
lock
mov
fucomp
call
mov
addr16
int3
xchg
pop
mov
adc
push
aas
ftst
and
cmp
mov
in
enter
adc
sbb
adc
dec
mov
push
sub
or
inc
in
adc
retf
add
xchg
pushf
mov
mov
daa
cwde
outs
jb
cld
inc
scas
push
(bad)
dec
jo
pop
loopne
out
out
mov
push
and
inc
out
jmp
btr
mov
out
daa
pop
in
xchg
xor
addr16
or
leave
and
dec
mov
mov
out
sbb
xchg
pushf
dec
mov
mov
daa
push
pop
sti
mov
inc
lock
push
sub
int3
leave
inc
in
mov
add
outs
pop
jb
jp
or
xchg
mov
(bad)
mov
fild
jo
cs
das
pmulhuw
mov
lock
call
mov
lods
daa
add
cmp
or
mov
push
sub
pop
push
jb
adc
in
and
nop
jo
xor
add
call
push
xchg
cld
xchg
jae
and
mov
ret
mov
sub
jb
inc
repnz
and
mov
dec
push
mov
(bad)
adc
pushf
cmp
pop
add
inc
mov
push
sbb
jb
out
cmc
or
add
adc
xchg
and
pop
or
jb
enter
pcmpgtw
jae
or
sbb
adc
pushf
in
repz
repz
mov
sbb
push
das
repz
mov
hlt
adc
pop
mov
push
mov
cmp
or
hlt
je
test
xchg
and
sbb
cmps
hlt
mov
in
xchg
(bad)
jmp
cld
cmc
or
cmc
push
cmc
das
cmc
inc
cmc
push
stc
xchg
xchg
and
(bad)
cmc
push
test
pop
sbb
add
pushf
dec
cmc
fisttp
jmp
add
add
or
leave
mov
xor
cmp
mul
in
inc
push
pop
add
push
cmp
test
mov
mov
sbb
xor
jbe
clc
xchg
add
dec
and
cmp
adc
sub
ja
add
mov
nop
popf
mov
aas
mov
data16
mov
pop
fimul
psubw
clc
add
or
movs
sub
push
xor
dec
sbb
iret
mov
xchg
in
add
outs
(bad)
ja
mov
adc
or
loopne
loopne
in
mov
cdq
cmp
pop
retf
pop
in
adc
fidivr
dec
xlat
std
in
enter
or
stc
adc
push
add
mul
add
aas
push
pop
dec
movs
dec
vhsubpd
lahf
mov
in
stc
mov
push
and
iret
mov
adc
or
push
repnz
pop
cli
pop
mov
add
pop
mov
jb
adc
scas
enter
and
les
dec
mov
jb
push
jnp
mov
bndldx
lea
scas
test
cs
enter
cli
mov
mov
popf
in
iret
mov
and
xchg
push
mov
loopne
dec
mov
leave
dec
into
je
push
jg
push
mov
push
inc
dec
add
push
fild
in
xchg
pushf
ja
jg
ffreep
out
xlat
dec
and
shl
sub
shr
nop
scas
pushf
push
test
leave
push
bnd
movs
xchg
ror
jb
rol
stos
test
(bad)
movs
push
aaa
movs
adc
cmp
sub
fmul
aam
add
cmc
dec
sar
scas
fmul
stos
mov
and
les
daa
cmps
and
cmps
dec
mov
ins
adc
adc
add
lahf
adc
ret
pop
pop
pop
jb
jo
(bad)
call
mov
or
sbb
test
ret
daa
test
iret
ret
inc
push
in
pop
xchg
(bad)
cld
mov
dec
imul
les
std
add
iret
mov
xor
retf
mov
pop
mov
mov
rcl
mov
(bad)
les
out
lds
add
push
sbb
jmp
je
daa
mov
daa
js
daa
mov
cmps
daa
pop
stos
loopne
ins
pop
pop
push
sub
push
mov
add
iret
pop
and
loop
das
lds
mov
add
es
dec
mov
xchg
por
xor
pop
jb
(bad)
adc
push
loop
ss
inc
and
jmp
cdq
cmp
push
mov
add
into
mov
add
pop
test
popf
cmp
cmp
xchg
xchg
cmp
cmp
imul
retf
pop
cmp
in
outs
push
repnz
(bad)
cmp
je
int3
dec
call
inc
mov
add
xchg
int3
adc
hlt
pop
in
in
enter
inc
pusha
sub
pop
aas
enter
jb
stc
pop
or
enter
pusha
sbb
push
push
add
pop
enter
mov
and
aas
leave
or
loop
rcl
iret
jo
leave
cmp
cdq
or
leave
leave
in
in
sahf
(bad)
mov
leave
leave
leave
mov
leave
leave
leave
fucom
out
clc
(bad)
sub
adc
add
and
sub
xor
cmp
movs
mov
cmp
pop
leave
mov
push
push
leave
xchg
in
mov
xchg
adc
or
xchg
ss
sbb
leave
inc
jb
mov
jb
inc
mov
in
jb
loope
add
in
mov
xchg
pop
jb
outs
dec
leave
dec
in
xchg
mov
fisub
(bad)
and
xchg
dec
fadd
in
mov
int
pop
xor
pop
dec
inc
sub
mov
mov
cmp
add
mov
pop
cld
shr
dec
add
aas
jno
jo
into
ins
daa
xor
sbb
dec
test
nop
fst
cwde
mov
fst
xchg
add
shl
add
xor
int
test
pop
jnp
pushf
mov
add
stc
xchg
sbb
fld
loope
cs
sbb
mov
mov
pop
adc
and
enter
xor
add
cmp
pop
add
test
xchg
and
xchg
or
leave
dec
cmp
mov
in
add
sti
add
or
sbb
jb
pop
add
add
xchg
and
dec
or
imul
jb
enter
or
or
ficomp
mov
push
(bad)
(bad)
xchg
out
inc
jb
ins
or
push
add
cmp
cs
dec
outs
clc
mov
call
mov
popa
das
add
daa
mov
ret
push
xchg
add
(bad)
add
pop
adc
push
rol
test
add
movsx
push
or
add
mov
xor
pop
lds
in
sbb
mov
bound
mov
fld
push
xor
xchg
fiadd
call
(bad)
inc
stos
mov
pop
ins
aam
dec
rcr
mov
and
pminsw
loop
or
pop
cmc
cmps
or
sbb
fimul
inc
add
xchg
and
pop
add
jnp
ss
enter
pop
movs
or
les
not
mov
add
cmp
in
push
lea
jb
pushf
aad
mov
addr16
pop
leave
dec
add
fsub
xchg
adc
and
dec
ja
push
adc
ja
mov
dec
push
(bad)
dec
jle
stos
push
fcom
push
inc
scas
add
not
adc
and
and
pushf
sets
(bad)
jo
push
jne
add
pop
push
push
(bad)
movs
adc
mov
les
daa
mov
dec
cld
xlat
or
cs
and
sbb
and
xchg
pushf
xlat
push
fs
mov
lods
mov
int3
daa
push
xor
arpl
dec
(bad)
fadd
leave
dec
sbb
jl
movs
lea
jo
iret
mov
mov
jecxz
fxch
enter
nop
or
cmp
pop
fmul
fldenv
add
scas
cmp
jbe
push
dec
add
pop
out
in
repnz
add
xlat
dec
cs
xchg
add
les
sbb
dec
shl
mov
mov
adc
enter
ficom
add
cmps
sub
dec
fisubr
scas
fidivr
das
mov
jp
js
and
aad
je
daa
jecxz
xlat
add
mov
and
xor
ja
in
jbe
dec
ret
imul
xchg
mov
xchg
addr16
iret
mov
ret
jmp
mov
adc
push
add
mov
fcomp
mov
and
xorps
xchg
mov
dec
mov
test
scas
push
repz
(bad)
cmp
lock
cpuid
popf
push
scas
fstp
in
and
in
dec
mov
or
leave
js
das
fnstsw
dec
dec
lods
mov
pop
mov
cs
push
sti
and
sbb
leave
and
jo
shl
inc
rol
in
fwait
(bad)
mov
dec
aas
push
scas
add
sbb
aas
iret
iret
adc
bnd
in
in
or
or
fimul
adc
mov
cmp
pop
jbe
in
sbb
shr
ja
pop
ror
call
xchg
mov
cli
loopne
push
and
nop
leave
and
pop
jl
outs
daa
pop
jge
seto
add
in
sbb
and
xchg
ror
mov
and
leave
dec
movs
push
xor
pop
pop
dec
inc
sub
mov
mov
cmp
xchg
pop
jo
imul
loop
fucomip
es
dec
sbb
sbb
addr16
pop
(bad)
in
dec
outs
adc
add
xlat
popa
test
cmova
cwde
mov
scas
xchg
or
aam
scas
idiv
dec
lods
jbe
shr
jns
jbe
out
loopne
xchg
fmul
rol
popf
add
and
inc
inc
push
pop
ror
pop
das
cmp
add
xchg
and
pop
and
mov
leave
pop
rol
fst
sbb
sbb
jbe
cmp
sbb
jecxz
sbb
mov
cmps
in
outs
cdq
dec
mov
in
in
dec
shl
xchg
pushf
add
dec
aaa
jb
cmps
add
addr16
pop
leave
cld
lock
bndldx
enter
adc
add
add
xor
pop
aas
dec
or
out
mov
add
ins
push
out
(bad)
mov
lahf
sbb
xchg
add
or
sti
ffreep
out
sbb
(bad)
out
sbb
push
xor
add
xchg
outs
in
push
add
add
dec
cs
jo
movs
scas
dec
dec
dec
dec
mov
enter
pxor
std
or
or
or
or
in
out
mov
adc
inc
add
add
push
jo
mov
daa
adc
sbb
cmp
sahf
sbb
add
add
adc
cdq
movzx
mov
add
les
hlt
mov
int3
repnz
mov
repz
push
js
daa
daa
pop
dec
out
test
push
cmp
in
shl
(bad)
sbb
es
push
mov
xlat
in
xchg
je
push
pop
leave
dec
add
cmp
loopne
jmp
cmps
push
mul
jge
push
mov
inc
add
sub
dec
data16
lahf
and
jmp
add
push
jo
stc
push
movs
xchg
lahf
or
mov
xchg
and
push
daa
add
add
enter
add
sub
lahf
(bad)
mov
inc
adc
dec
or
mov
sbb
(bad)
jmp
pop
in
push
dec
mov
xchg
pushf
xlat
and
sbb
xchg
stos
ret
add
sbb
ja
push
pop
pushf
daa
fs
stos
xchg
xchg
or
sbb
(bad)
das
mov
cmps
loope
daa
jmp
test
in
add
push
pop
das
and
aaa
in
and
and
fcom
fucomip
test
inc
mov
inc
and
inc
add
in
xchg
and
push
dec
(bad)
ins
jle
mov
in
mov
dec
daa
add
cli
iret
fisub
and
in
and
xchg
pop
jb
and
and
pop
gs
jbe
cvtdq2ps
pop
leave
dec
add
mov
out
shr
out
sub
mov
daa
ins
stc
iret
and
frndint
daa
lods
sbb
cmp
push
dec
movs
jmp
out
in
push
dec
jg
jl
and
push
test
out
mov
ret
push
and
mov
push
out
in
pop
push
shl
out
inc
repnz
mov
xchg
push
out
pusha
and
mov
push
jo
mov
mov
jb
in
outs
(bad)
dec
and
cmps
lock
lock
mov
push
xor
stc
mov
jmp
add
or
call
and
push
cmp
xchg
fild
les
arpl
inc
mov
iret
mov
in
and
icebp
sub
bswap
cmova
or
pop
aaa
jmp
mov
(bad)
movhps
icebp
xchg
fld
pop
push
iret
hlt
mov
daa
daa
and
cvtdq2ps
imul
popf
sub
push
into
cs
xchg
add
mov
xchg
dec
test
sub
xor
mov
ja
add
in
xchg
outs
out
ja
push
scas
repz
dec
cs
pushf
dec
mov
sbb
loopne
xchg
xchg
pop
imul
xchg
dec
cmp
retf
imul
xchg
mul
push
inc
dec
and
(bad)
push
iret
add
mov
int3
push
pop
and
mov
clc
mov
cmc
sub
fst
scas
ret
retf
add
stc
jb
enter
add
add
add
push
push
sbb
sub
cmp
sub
aam
jo
cmp
test
mov
mov
ja
sub
mov
test
xlat
sahf
sub
fbstp
mov
sub
xor
inc
fimul
das
inc
add
push
(bad)
xchg
daa
pop
push
popa
pop
imul
das
idiv
sahf
pushf
pushf
pushf
pushf
cmps
scas
mov
shr
loope
jmp
inc
xor
inc
or
les
inc
mov
sub
adc
pop
add
add
add
add
sbb
gs
jae
or
(bad)
clc
sbb
call
jmp
push
fidivr
data16
push
pop
and
frstor
or
daa
xchg
xchg
ins
cmp
imul
push
push
add
in
push
add
add
out
scas
in
lods
cs
sub
adc
test
jg
nop
xchg
mov
pop
cmps
pop
scas
add
mov
xchg
xchg
mov
mov
xlat
pop
pop
fxch
xlat
pop
fisttp
in
or
iret
stc
fdiv
cmp
popf
cmp
andnps
test
in
jb
mov
dec
gs
(bad)
rol
lods
leave
jmp
call
cs
ucomiss
sti
adc
jb
shl
fs
and
dec
push
scas
mov
xchg
push
xchg
add
cmp
add
xlat
cs
push
iret
sti
shl
push
cld
leave
xchg
adc
and
leave
inc
cmp
sub
push
add
xchg
xchg
retf
pop
pop
movs
cwde
push
jmp
loope
add
inc
jno
push
dec
cmp
xchg
out
inc
retf
dec
pop
xor
popf
test
sbb
das
add
mov
pop
jg
ss
pushf
std
mov
scas
loopne
mov
mov
fs
fldenv
mov
pushf
jecxz
inc
xor
stos
sub
cmp
popa
add
pushf
fadd
jge
mov
mov
(bad)
xlat
add
out
fdivr
sub
out
imul
pop
push
sbb
aaa
jb
enter
add
push
cmps
daa
pop
leave
dec
pop
cmp
daa
daa
daa
xchg
mov
sub
xor
outs
hlt
mov
dec
xor
push
in
xchg
ud1
adc
jl
mov
jns
add
pop
and
scas
xchg
cmps
scas
add
mov
mov
pusha
in
into
add
xor
inc
dec
and
aam
cs
adc
out
fild
rcr
mov
aas
jmp
mov
outs
je
dec
gs
xchg
cdq
add
add
daa
pop
leave
test
fsub
leave
mov
cmp
inc
cmp
and
scas
xor
daa
add
xor
stos
outs
repnz
iret
jb
ins
mov
inc
mov
adc
pop
add
and
pop
ss
je
mov
out
inc
les
cmp
lahf
stos
ja
mov
xchg
push
stos
dec
scas
loopne
xchg
xchg
xchg
or
cmp
std
inc
aaa
and
sub
xor
jbe
push
jecxz
in
pop
pop
imul
pop
icebp
xor
movs
fld
cwde
ja
iret
add
daa
nop
mov
sub
sysret
pushf
add
movs
mov
lods
ds
(bad)
cmp
in
lock
mov
sub
xor
in
push
mov
daa
daa
arpl
movq
add
add
pop
les
iret
pop
mov
leave
ficomp
jb
fxch
cmp
and
leave
leave
leave
inc
push
pop
pusha
xchg
push
or
push
xor
mov
lds
shl
pop
add
mov
push
dec
imul
outs
aad
adc
aaa
ja
enter
ja
mov
lock
pop
jne
xchg
pop
pop
xor
push
ret
fcmove
retf
sbb
(bad)
cmp
adc
pop
or
scas
pop
cwde
test
pop
cmps
cmp
push
adc
sbb
rcr
mov
loopne
fcmovne
inc
xchg
mov
popf
cmp
out
mov
or
dec
ja
in
cmp
sub
add
pop
leave
mov
fist
addr16
cld
loopne
pop
and
jg
xor
in
mov
sub
pop
lahf
mov
and
push
push
push
add
add
add
add
add
push
push
bound
jo
loopne
jb
jle
mov
call
xlat
or
lock
dec
push
xchg
jmp
or
jb
mov
and
in
xchg
and
add
add
lock
test
rcr
and
ja
shr
or
add
out
test
dec
dec
dec
(bad)
call
dec
fmul
loopne
or
add
push
addr16
jb
jl
daa
mov
inc
mov
sbb
sub
push
pop
pop
push
fisttp
add
or
sti
pop
and
addr16
outs
data16
mov
or
mov
out
pmaxsw
leave
xchg
xchg
add
aas
add
add
leave
adc
xchg
dec
or
and
and
jl
test
mov
jbe
xchg
or
xchg
xchg
mov
or
xchg
out
sub
test
sbb
inc
sub
in
mov
orps
ja
or
push
push
aaa
or
cmovo
dec
fimul
es
xchg
out
jmp
pusha
mov
outs
pop
in
unpcklps
push
xchg
fcmovne
xchg
popa
ins
add
stos
mov
cmp
push
push
repz
add
inc
and
sub
and
jmp
enter
loopne
aaa
adc
jnp
push
lock
cwde
add
inc
mov
cmps
add
and
jmp
mov
jnp
add
pf2id
add
add
add
inc
cmp
movs
or
mov
adc
cmp
cmp
xchg
push
stos
aas
sahf
mov
inc
mov
out
push
cmp
inc
add
in
xchg
add
fs
leave
leave
mov
xchg
mov
in
fnsave
mov
xor
or
leave
inc
cmp
fisub
imul
add
add
add
enter
add
or
loope
and
pushf
test
and
enter
push
cmp
test
jl
adc
lahf
add
ret
movs
loopne
daa
push
(bad)
adc
xchg
adc
cmova
inc
cmp
push
ja
pop
and
or
push
sbb
enter
pop
and
aas
adc
test
in
xchg
ins
push
push
add
xor
jo
cmp
add
add
mov
(bad)
mov
mov
out
or
fcmovne
leave
loopne
lock
inc
daa
jns
pop
dec
out
dec
and
xor
inc
repnz
push
or
daa
and
push
int3
add
loop
pop
add
daa
and
addr16
fcmovne
xchg
jge
or
adc
dec
adc
add
sbb
test
jb
jb
pop
add
add
jb
xchg
mov
jns
(bad)
fmul
out
imul
test
or
pop
and
push
les
and
jbe
lahf
imul
hlt
mov
xchg
push
sbb
scas
in
fst
mov
inc
dec
scas
enter
adc
dec
mov
inc
lods
inc
sbb
dec
shl
and
sbb
push
adc
daa
xchg
cmp
sub
dec
and
movs
fld
int
dec
xchg
mov
inc
jb
xchg
scas
mov
sbb
mov
dec
dec
cmc
dec
push
jmp
or
mov
push
movd
xor
das
dec
orps
popa
push
ins
pop
ja
mov
cwde
or
mov
inc
scas
mov
adc
enter
adc
adc
add
pop
sar
aas
sbb
and
sbb
outs
(bad)
in
dec
cs
sbb
xchg
aam
in
add
push
inc
loopne
push
out
pop
addr16
movs
inc
add
sar
and
sbb
iret
nop
or
in
sbb
addr16
mov
sbb
and
jb
mov
out
ror
inc
dec
and
mov
jns
(bad)
bnd
sbb
cmp
out
and
sbb
and
pop
punpckhdq
shr
xchg
in
ror
(bad)
xchg
or
enter
push
push
and
dec
xchg
dec
cs
outs
mov
in
or
pcmpeqd
lods
xchg
daa
daa
pop
call
xchg
add
xlat
fbld
mov
push
or
outs
das
push
adc
sbb
cmps
in
enter
push
pop
pushf
fnstsw
in
lods
aas
or
add
push
add
or
mov
and
rol
mov
cs
pop
and
je
and
add
leave
mov
arpl
inc
mov
mov
and
dec
outs
mov
movs
lods
pop
mov
mov
xlat
xchg
pushf
icebp
cld
add
inc
dec
push
pop
add
add
in
inc
iret
data16
inc
sub
jns
lock
cmp
cmp
pop
out
rcr
ja
mov
pop
sti
adc
mov
push
add
or
push
inc
mov
push
shl
ror
pop
jg
add
jl
dec
inc
pop
aaa
test
mov
xor
and
pop
scas
mov
ins
pop
in
xchg
mov
mov
xchg
and
int3
addr16
inc
jb
xchg
sub
and
inc
jb
leave
pop
gs
test
add
ret
pop
add
push
sti
adc
xchg
and
loopne
push
inc
jb
xchg
sub
and
leave
push
pop
dec
inc
jb
leave
test
(bad)
mov
and
pop
mov
es
jl
jb
fadd
pminsw
clc
add
add
and
adc
and
xor
and
(bad)
or
je
and
push
jne
jge
mov
leave
leave
leave
push
cdq
cmps
mov
in
leave
leave
rcr
in
or
sti
or
cmp
pop
or
pop
or
xlat
shl
jns
or
(bad)
cmp
out
pop
movd
leave
dec
ja
cmps
add
mov
cs
imul
fstp
cs
mov
jg
add
and
mov
mov
or
xchg
xchg
pop
sub
inc
inc
mov
add
add
mov
xchg
mov
mov
cmp
push
cmp
cmp
out
cld
pop
or
daa
in
call
inc
aaa
xor
xchg
xor
pop
js
sub
and
mov
sub
iret
mov
lock
ja
fild
daa
aam
sub
or
adc
fnstenv
add
ficom
sub
movs
jmp
mov
enter
sub
bound
enter
pop
iret
aaa
xchg
xchg
xchg
pop
sbb
pop
cvtdq2ps
pop
sub
fist
das
mov
leave
in
outs
pop
pusha
punpckhbw
inc
mov
push
add
enter
jnp
cmp
add
push
lahf
xor
jbe
scas
pop
mov
mov
in
into
dec
sti
pop
push
femms
das
mov
xlat
add
ja
mov
pop
inc
rcl
test
ret
nop
fcomp
out
push
imul
sub
lahf
adc
mov
jle
jmp
cmp
sub
pop
retf
sub
aaa
cdq
sub
pop
push
mov
xchg
mov
pop
push
mov
add
or
adc
in
xchg
pushf
ins
out
sub
mov
ja
fs
daa
cmp
sub
and
fcom
aaa
adc
push
push
fisttp
or
(bad)
leave
mov
cmp
inc
addr16
and
or
add
push
add
mov
and
hlt
das
sbb
inc
jb
pop
and
rcr
inc
jb
jnp
data16
mov
mov
add
mov
xor
push
jb
pop
jb
pop
cmp
pop
jb
pop
push
jb
xchg
rcl
mov
dec
cs
in
jmp
sub
mov
and
and
(bad)
add
xchg
aaa
cdq
retf
pop
inc
popa
addr16
xchg
cdq
cmp
scas
xor
mov
stc
bound
xor
cmp
inc
jb
jbe
andnps
sar
(bad)
jbe
add
in
sbb
mov
xchg
xchg
retf
xchg
add
adc
jne
inc
xor
arpl
fst
add
pushf
pop
dec
push
mov
jge
out
pop
in
and
arpl
jb
inc
daa
in
mov
cs
dec
xor
fbld
cmp
rcl
fbld
imul
mov
call
mov
mov
sbb
push
xlat
outs
pop
dec
ins
dec
xorps
jb
mov
setge
leave
dec
ja
xchg
fcmovne
enter
add
add
in
and
sbb
getsec
cs
xchg
out
inc
ja
pop
jne
sbb
cwde
sub
push
add
jb
jo
cmps
ss
jp
sub
aaa
pop
repnz
addr16
repnz
addr16
addr16
in
jbe
popa
outs
mov
xchg
xchg
add
mov
sbb
sbb
mov
(bad)
push
pushf
adc
cmp
push
dec
dec
push
pusha
dec
sbb
jb
jnp
lea
push
cwde
add
cmp
add
xchg
and
pop
neg
and
xchg
xchg
adc
fiadd
dec
addr16
mov
jo
leave
inc
mov
addr16
inc
jb
jecxz
push
mov
adc
add
mov
cmp
sub
iret
cmp
daa
pop
dec
mov
stos
dec
ror
xchg
add
or
lock
imul
jmp
adc
and
cmps
pop
fidiv
sbb
push
push
mov
jnp
pop
test
xor
inc
fsubr
xchg
xchg
out
xlat
push
and
daa
cmp
ins
or
push
ja
daa
pop
leave
dec
add
arpl
and
add
mov
xchg
pushf
cmp
mov
adc
(bad)
and
push
lock
getsec
mov
cmp
push
sub
ss
sahf
mov
addr16
mov
mov
jb
add
out
outs
add
outs
cmp
xor
hlt
addr16
inc
cmp
pusha
xchg
je
aas
push
fs
push
into
or
out
mov
outs
pop
int3
push
mov
fild
movmskps
outs
pop
xchg
dec
inc
sub
fwait
push
lds
movs
(bad)
aas
cmp
sub
in
aas
xchg
scas
shl
ficomp
sbb
loop
jmp
pop
jo
sub
dec
xchg
mov
xchg
dec
ror
xchg
inc
dec
es
lds
mov
pop
repnz
add
jno
add
add
jno
imul
dec
lods
push
ret
mov
xor
inc
and
cli
cmps
jb
jb
inc
dec
movs
and
add
and
int3
pop
leave
and
mov
out
addr16
dec
jb
test
jbe
test
mov
xchg
pop
mov
in
pushf
in
push
scas
inc
adc
pop
jb
cmp
cmp
xchg
dec
cs
dec
cs
in
and
iret
je
inc
sbb
and
dec
cmc
in
jb
jne
js
es
inc
mov
dec
jb
inc
adc
outs
jb
push
cmp
lods
push
xchg
dec
cs
cmp
fs
xchg
dec
cs
nop
jbe
and
cmp
mov
dec
inc
adc
mov
dec
ret
retf
into
cs
dec
jl
emms
add
and
addr16
mov
xchg
mul
push
sbb
cs
jo
inc
mov
aad
inc
dec
jb
inc
pushf
pop
adc
in
pop
in
cmp
sbb
pop
lock
test
test
dec
adc
js
jg
adc
cmp
inc
js
add
and
pop
das
sbb
xchg
pop
cs
gs
xchg
les
jecxz
xor
mov
xor
sub
rcl
ins
add
gs
leave
jne
add
dec
(bad)
leave
mov
mov
and
sbb
cmp
scas
jmp
dec
cs
dec
push
leave
adc
adc
pushf
in
shl
leave
and
xor
xchg
out
mov
xchg
xchg
add
dec
cs
nop
jmp
fisub
es
pop
leave
dec
cs
dec
sbb
dec
cs
das
jp
jp
dec
fimul
iret
mov
cs
out
mov
in
add
xchg
xchg
out
enter
xchg
daa
and
jo
add
and
sub
dec
mov
push
ins
cld
(bad)
adc
imul
add
fistp
jl
fcom
popf
in
sub
jae
jnp
or
sahf
scas
jbe
dec
mov
hlt
fbstp
mov
pop
or
cmp
mov
mov
int
add
or
enter
xor
clc
test
push
outs
emms
gs
and
addr16
or
inc
fistp
mov
test
fld
push
jns
mov
jge
jle
add
adc
(bad)
bswap
jle
dec
adc
jle
inc
mov
xchg
xchg
dec
push
push
pop
dec
mov
(bad)
fistp
daa
mov
shl
xchg
fsubrp
lahf
jmp
addr16
push
add
in
and
xor
mov
and
inc
jb
inc
mov
leave
ret
in
lock
sbb
jg
add
adc
and
ficom
xchg
dec
inc
mov
jb
je
cmps
iret
cwde
test
mov
add
ficom
add
or
leave
inc
jb
ds
imul
mov
mov
and
shr
adc
gs
scas
push
push
cmp
add
in
add
call
ss
cmps
nop
fs
outs
add
add
mov
dec
push
ror
outs
das
sub
pop
addr16
in
lahf
test
pop
xor
push
adc
iret
sbb
dec
push
push
aam
jb
(bad)
push
stos
cmp
daa
push
mov
mov
mov
pop
lahf
push
and
sub
jns
xor
or
or
mov
pushf
daa
lods
cmp
push
mov
sub
and
push
outs
add
and
sahf
pushf
mov
mov
int3
add
test
adc
cmp
or
test
(bad)
in
cmp
mov
in
pop
add
add
ja
sbb
add
push
add
(bad)
mov
jb
mov
call
popa
daa
pop
sbb
inc
popa
popf
pop
test
and
xchg
mov
mov
pextrw
add
add
ins
in
add
pop
xchg
xchg
inc
sbb
xchg
xchg
das
add
xchg
(bad)
sbb
cmps
pop
in
movs
or
sbb
jb
ja
jne
push
xchg
and
scas
pop
mov
arpl
enter
or
jg
cmp
enter
mov
dec
push
add
add
jbe
mov
jl
test
lock
cmp
pop
pop
push
daa
cmps
scas
add
mov
sbb
add
add
add
add
mov
mov
mov
sbb
pop
mov
pop
shl
addr16
leave
inc
jnp
xor
mov
jb
mov
add
add
fld
out
cmc
or
add
adc
pop
pop
or
mov
add
xchg
and
add
add
cmp
mov
mov
xchg
and
ror
or
or
cmp
jmp
xchg
sub
fbld
movs
xor
mov
add
xchg
xchg
mov
test
mov
pop
cwde
scas
mov
clc
ja
inc
inc
inc
inc
mov
mov
aas
add
cmp
pop
pop
sub
sbb
shr
out
mov
ins
and
lahf
mov
arpl
jb
xchg
xchg
mov
push
imul
xor
nop
cmp
test
neg
or
in
add
pop
sub
out
and
mov
loopne
daa
jg
add
scas
in
push
fcom
sbb
cmps
pushf
sub
fisttp
(bad)
sub
xor
jo
shr
push
test
xchg
pop
fdivr
es
in
and
add
fidivr
cmp
fs
pop
jb
mov
nop
jmp
mov
scas
loopne
xchg
pop
lock
and
mov
inc
xor
popf
in
add
pop
jb
(bad)
adc
push
jo
daa
mov
outs
jb
cmp
addr16
mov
lods
mov
bound
repnz
and
dec
cmp
movs
fwait
mov
nop
addr16
in
xchg
mov
in
xchg
mov
xchg
mov
fnstenv
nop
hlt
pushf
push
arpl
xchg
sub
dec
mov
retf
pusha
push
dec
dec
cs
movs
popf
movs
lods
dec
cs
dec
loopne
in
leave
dec
dec
in
fs
and
adc
aam
outs
xchg
(bad)
cs
jnp
xchg
dec
or
sahf
in
dec
dec
cs
adc
not
in
mov
inc
mov
imul
(bad)
hlt
inc
inc
cmps
sar
xchg
xchg
xchg
mov
leave
dec
data16
daa
daa
pop
and
and
(bad)
push
jbe
mov
add
je
push
leave
dec
in
add
cmp
ss
mov
cmp
pop
mov
xchg
add
in
mov
push
xchg
mov
xchg
pop
in
sbb
dec
inc
jnp
xchg
scas
push
shl
sbb
cmp
push
call
dec
or
mov
daa
daa
dec
pop
add
imul
ja
test
cmps
loope
sbb
punpckhwd
dec
and
or
mov
in
mov
add
dec
mov
ins
test
pop
cmps
pop
ja
sub
fsubr
jno
push
daa
cmp
mov
inc
(bad)
adc
xchg
mov
mov
(bad)
neg
mov
mov
pop
inc
sub
dec
push
xchg
pop
imul
push
sbb
pop
repnz
add
or
adc
(bad)
dec
pop
fs
or
mov
cwde
cwde
cwde
leave
leave
leave
leave
cwde
cwde
cwde
cwde
inc
mov
push
scas
or
jb
and
pop
loopne
sbb
ficomp
sbb
es
xchg
and
add
add
jb
pop
pop
ins
or
mov
dec
mov
ja
inc
inc
dec
or
in
hlt
call
add
pmulhuw
jo
ja
ins
test
xchg
ins
mov
mov
(bad)
pop
add
push
add
xor
popf
cmps
scas
retf
add
ins
mov
daa
cmp
fwait
pop
push
smsw
cmp
xchg
repnz
in
loopne
outs
sub
ja
cmp
jg
jge
daa
mov
push
dec
test
addr16
imul
pushf
imul
mov
push
cmp
mov
aaa
jo
gs
pushf
ins
pop
and
in
iret
fsub
sbb
iret
xchg
mov
aaa
outs
inc
mov
in
js
popf
push
movs
mov
xchg
mov
pop
jb
outs
outs
popf
ja
addr16
(bad)
in
lahf
popf
mov
daa
pop
in
jo
ja
jmp
mov
sahf
and
and
ror
pop
sahf
addr16
cmp
leave
test
push
cmp
loop
movs
cs
push
mov
push
popf
aas
sbb
xchg
lahf
out
and
sbb
inc
push
imul
ds
iret
sti
pushf
dec
dec
and
or
xor
mov
fimul
(bad)
mov
adc
cmc
pop
adc
int3
idiv
in
sti
pop
imul
iret
div
push
aas
stc
lahf
jg
jo
bswap
add
and
ins
xor
sub
nop
and
xor
push
in
ja
pop
xor
fisub
sbb
aaa
add
movs
or
inc
pop
(bad)
push
adc
lahf
ds
mov
iret
dec
adc
push
push
aas
push
push
mov
(bad)
xlat
pop
push
dec
arpl
pop
aad
bound
fbld
jle
sbb
aas
outs
jae
ror
daa
fwait
or
std
jg
loop
cmp
mov
fs
mov
dec
enter
leave
fst
(bad)
fucomi
jg
adc
and
js
cmp
daa
xchg
pop
or
jp
mov
lods
(bad)
jmp
jmp
repnz
loop
mov
ret
sti
mov
pop
mov
ds
jmp
add
out
add
push
stos
iret
and
xchg
(bad)
mov
and
jns
add
enter
push
daa
mov
jmp
or
inc
lock
sub
and
cwde
push
pushf
(bad)
sti
mov
or
push
xor
sub
adc
and
jl
cmps
add
pop
adc
dec
and
mov
adc
adc
lock
sahf
jmp
cmps
aas
sub
loop
and
leave
adc
pop
xchg
mov
xlat
push
jb
js
(bad)
popf
in
sbb
sub
cmp
dec
fidiv
test
inc
adc
rol
jbe
mov
(bad)
lahf
rol
outs
lds
jns
add
push
test
ja
test
adc
pop
jb
and
cmc
nop
xchg
(bad)
cmps
lahf
dec
lahf
push
jl
in
(bad)
lahf
jns
jo
fiadd
(bad)
mov
inc
adc
add
mov
mov
(bad)
push
lahf
push
aam
pusha
stc
nop
xchg
push
push
lock
adc
sbb
or
add
mov
mov
sub
pusha
fadd
inc
daa
jge
ins
repnz
stos
iret
mov
inc
test
(bad)
pop
inc
and
sub
xor
pop
fdiv
inc
adc
xchg
push
pop
dec
mov
jle
jge
daa
adc
add
out
push
inc
int
shl
pop
leave
or
daa
ror
psrlq
shl
aam
fiadd
jmp
push
mov
inc
rol
xlat
pop
ror
mov
push
mov
inc
push
inc
push
push
mov
lock
dec
aas
jg
xlat
sbb
push
and
or
clc
add
sub
jg
pop
xchg
daa
mov
inc
push
sbb
rcr
mov
sub
cmp
xchg
mov
mov
dec
ror
cmp
push
add
and
cwde
pop
jle
pop
mov
mov
dec
mov
vprotd
addr16
in
mov
cmps
pop
cmp
js
push
daa
mov
in
rol
loopne
loop
in
mov
mov
xchg
sbb
cwde
adc
and
xor
jmp
or
mov
pop
sub
cmp
call
mov
add
add
out
mov
je
xchg
dec
lock
leave
and
pop
leave
clc
add
push
mov
xor
(bad)
movs
movs
add
test
push
cmp
enter
add
pop
add
push
cdq
sbb
pop
mov
cmps
test
sbb
movs
and
sbb
movs
movs
test
jmp
cmp
mov
jns
push
repnz
xchg
mov
mov
scas
hlt
daa
adc
fsubr
bound
pop
sbb
gs
popa
adc
xchg
es
ret
lock
mov
addr16
and
xor
push
xchg
pop
ss
lds
push
sub
retf
cmps
loopne
push
adc
xchg
cmps
mov
cs
imul
sbb
nop
cwde
fild
rol
adc
jns
xchg
sbb
test
add
push
out
xor
mov
jl
or
imul
mov
cmp
xchg
push
jb
pop
mov
lock
cmp
and
xchg
cmp
ret
jo
pop
xchg
cpuid
mov
rcr
xchg
pushf
mov
mov
in
and
adc
es
sbb
and
ins
cdq
add
daa
test
mov
add
mov
xchg
pushf
stos
xor
push
mov
push
xchg
push
push
add
add
add
leave
dec
pop
mov
ror
loopne
loope
add
jg
fisttp
mov
iret
push
(bad)
or
adc
mov
jbe
call
out
dec
jb
ds
test
frstor
push
scas
daa
adc
in
cwde
mov
sbb
mov
stos
xor
leave
dec
lea
dec
sar
or
lea
mov
call
xchg
lods
lods
lods
lods
mov
xchg
lods
push
outs
push
jp
test
enter
nop
or
cmp
mov
mov
setno
inc
mov
adc
adc
adc
jb
retf
(bad)
adc
pop
push
and
sbb
pop
xor
xchg
dec
stos
xchg
sbb
sbb
test
cs
jbe
imul
jle
inc
add
leave
add
pushf
cmp
jns
mov
push
and
mov
daa
hlt
mov
pop
dec
pop
enter
pop
repnz
(bad)
pop
(bad)
sub
(bad)
mov
daa
cmp
scas
adc
sbb
cmp
cmp
add
and
add
cmp
push
ds
or
popf
push
js
sbb
ja
mov
ret
pop
enter
in
or
adc
dec
aaa
jb
push
add
add
cmps
push
mov
out
js
cmp
leave
push
call
cmp
pop
cdq
add
sbb
inc
inc
out
scas
(bad)
scas
scas
scas
cmp
gs
push
stc
add
add
clts
and
sbb
pop
and
jb
enter
or
pop
or
addr16
jb
jge
adc
mov
sbb
xchg
xchg
xor
push
daa
cmp
dec
mov
mov
push
and
add
pop
and
pop
xor
pusha
dec
cs
xchg
xchg
adc
cmp
push
lock
fist
jb
jl
shl
mov
pusha
xchg
inc
push
cwde
add
sbb
cmps
add
in
xchg
and
push
in
pop
cli
or
or
push
or
xor
xchg
and
or
sbb
jb
push
adc
mov
push
cmp
enter
sbb
sbb
sbb
inc
mov
sbb
sbb
sbb
xchg
push
cmp
dec
and
cmp
jb
cmp
cmovs
sub
and
xchg
test
adc
mov
mov
leave
test
int3
mov
ins
cdq
add
in
in
sub
xor
add
das
or
inc
fisttp
xchg
or
dec
sbb
leave
leave
leave
xchg
cdq
mov
leave
mov
mov
in
or
leave
or
dec
ror
fst
js
mov
xchg
mov
mov
mov
push
adc
sbb
and
add
pop
xor
in
in
cmp
inc
or
or
test
push
xchg
cmp
dec
jnp
xchg
je
mov
test
cmova
mov
add
in
repz
mov
leave
leave
leave
leave
or
sbb
mov
(bad)
mov
mov
cwde
jl
lods
add
out
dec
cwde
imul
leave
inc
shl
rcr
add
out
icebp
add
in
enter
xor
sub
push
jo
cs
nop
and
mov
fcom
mov
cmp
add
adc
outs
daa
cdq
lock
and
popf
in
jl
jbe
call
mov
mov
mov
aaa
mov
xchg
add
fistp
fsub
and
pushf
hlt
mov
add
xchg
push
sub
or
sbb
push
or
jae
or
adc
sub
mov
sbb
stc
mov
rol
mov
inc
inc
mov
xchg
xchg
dec
pushw
pushf
add
mov
push
inc
out
in
in
(bad)
in
xchg
sub
cmp
sub
xor
ds
xchg
jb
xchg
pop
int3
jo
pop
mov
jne
fistp
cmp
(bad)
popf
push
iret
lock
enter
add
adc
and
popf
mov
add
jb
inc
xor
lea
jb
xchg
lahf
popf
in
stos
push
push
out
add
add
dec
mov
mov
fisubr
xchg
imul
push
je
cli
lahf
iret
mov
dec
push
push
pop
mov
popf
sahf
fsub
adc
nop
pop
test
cwde
mov
vmwrite
out
mov
fwait
mov
mov
mov
inc
mov
pop
leave
dec
mov
push
leave
cmp
mov
mov
push
shl
push
mov
cs
xchg
mov
add
fiadd
pop
push
icebp
ds
into
dec
stc
xadd
sbb
push
and
das
xor
dec
leave
leave
leave
in
push
or
pop
arpl
ins
in
push
mov
xchg
lods
adc
shr
bsr
adc
cmp
in
push
shl
stc
pop
add
daa
daa
ins
push
or
sub
mov
imul
mov
xchg
ret
popf
mov
sub
push
test
leave
inc
xor
iret
add
jbe
push
ret
xor
and
xchg
xchg
add
mov
xadd
enter
xor
cmps
fadd
pusha
pop
cmp
scas
les
leave
xchg
xchg
dec
push
sbb
and
add
cmp
mov
jbe
push
addps
mov
movs
sbb
pop
mov
scas
pop
sbb
xchg
retf
(bad)
retf
les
loope
in
add
and
test
enter
or
or
or
inc
mov
or
or
in
xchg
cvtdq2ps
arpl
imul
mov
jae
jnp
adc
and
sbb
sbb
sbb
aam
fcomp
out
jb
jb
out
and
and
push
jb
jb
sbb
jb
jb
sbb
push
jb
jb
adc
jb
jb
adc
push
jb
jb
or
jb
jb
or
push
jb
jb
add
arpl
add
aas
push
inc
xchg
xchg
push
das
mov
inc
nop
xchg
mov
cmps
(bad)
xor
cmp
inc
add
enter
orps
add
sbb
jno
jns
or
xchg
and
or
test
adc
adc
xchg
and
adc
adc
adc
cmp
loope
jmp
sbb
daa
inc
mov
sbb
push
daa
daa
daa
daa
adc
daa
daa
daa
adc
femms
daa
daa
daa
daa
or
daa
daa
daa
or
pop
push
daa
daa
daa
daa
add
repnz
call
xor
ins
nop
push
mov
inc
fcmovne
enter
add
(bad)
xchg
mov
ja
push
test
cmp
jns
mov
add
enter
cmp
dec
fadd
imul
outs
cmp
psubb
enter
mov
xchg
or
(bad)
push
sbb
lea
test
mov
mov
enter
fcmovne
fnstenv
(bad)
add
pop
xchg
push
add
fcmovb
popf
das
push
test
or
leave
dec
gs
or
or
xchg
xchg
popa
push
leave
ud2
push
and
and
push
sub
aaa
add
outs
aas
dec
addps
das
arpl
sbb
fcmovne
ins
in
add
xchg
xchg
retf
add
imul
retf
sub
in
in
add
add
sbb
ins
pop
js
or
inc
cdq
or
cmps
xchg
daa
lds
sar
fist
mov
icebp
adc
adc
retf
pop
xchg
in
adc
pop
movs
(bad)
sub
sbb
lahf
sbb
clc
outs
add
inc
sahf
mov
add
adc
and
push
mov
fwait
in
enter
outs
inc
into
jo
out
int3
push
int3
adc
sbb
dec
outs
daa
and
xor
cmp
dec
push
pop
imul
xchg
or
jg
lods
jo
retf
or
ror
push
loopne
jns
or
aas
dec
inc
mov
int
adc
sbb
add
outs
daa
and
xor
cmp
dec
dec
dec
dec
push
pop
or
in
xchg
or
or
inc
xor
inc
adc
mov
(bad)
stos
pop
xlat
mov
rol
or
retf
and
mov
scas
sbb
lods
in
adc
loop
out
int
int
in
and
lahf
push
or
push
add
mov
and
add
dec
dec
dec
add
add
xchg
and
or
cmp
jb
arpl
outs
adc
(bad)
cmp
cmp
or
mov
sbb
in
enter
sbb
sbb
in
in
sbb
pop
and
and
and
and
inc
dec
daa
repnz
daa
leave
in
enter
or
adc
push
fs
in
sub
sysenter
sub
aas
and
xor
iret
or
daa
push
cwde
mov
mov
in
jge
nop
sbb
xchg
outs
in
add
xchg
fwait
dec
inc
sub
shl
xchg
mov
cmp
add
mov
dec
inc
mov
push
enter
add
enter
or
or
sbb
repnz
or
movups
and
aas
sub
xor
daa
and
adc
sbb
xchg
daa
and
sbb
jmp
sbb
sbb
jbe
sbb
shl
daa
push
rol
ja
retf
and
add
outs
cmps
jecxz
cmp
mov
daa
dec
out
call
(bad)
xchg
adc
psrld
push
sub
in
and
addr16
xchg
mov
in
or
and
jo
lahf
loopne
cmovbe
add
add
add
bound
sbb
cmps
push
mov
daa
daa
daa
out
dec
push
dec
push
pop
gs
sub
jne
fcom
jno
dec
mov
ins
xchg
sbb
out
fsub
enter
psllw
aam
add
add
sbb
jb
add
push
or
or
movs
jb
or
aam
push
sar
shl
sub
mov
addr16
bnd
mov
das
mov
lods
movzx
jle
push
adc
(bad)
sbb
daa
mov
lds
mov
outs
pusha
add
pop
jbe
add
mov
mov
inc
dec
dec
icebp
cld
xlat
pop
ins
retf
test
mov
mov
mov
add
aas
xlat
inc
add
dec
enter
pop
push
push
popa
(bad)
ds
or
leave
ja
or
in
in
mov
les
in
iret
pminub
in
adc
mov
clc
push
fadd
pop
push
sbb
xchg
and
sbb
and
das
adc
repnz
sbb
push
push
pop
pushf
cmp
jno
and
xchg
xor
and
and
fimul
fucomip
sub
cmc
dec
sub
mov
fnstcw
cmp
movs
push
cmp
push
add
pop
add
jb
sbb
(bad)
mov
daa
push
leave
dec
or
das
dec
outs
(bad)
loope
fiadd
push
leave
leave
enter
push
cmp
jb
in
or
or
push
mov
xor
mov
fidiv
xor
dec
mov
and
push
or
dec
(bad)
ficomp
sub
add
sbb
adc
mov
mov
cmpxchg
jb
xor
or
loop
leave
retf
clc
es
add
(bad)
mov
fcom
ins
cmps
fdiv
xor
xchg
mov
jb
mov
mov
repnz
loope
jmp
sbb
icebp
or
or
frstor
(bad)
push
xor
aas
inc
bswap
in
dec
mov
pop
pop
pusha
leave
push
jb
push
in
enter
mov
jns
repnz
or
loopne
call
inc
inc
clc
fiadd
push
fimul
fs
enter
and
sub
jns
repnz
inc
push
dec
inc
sahf
mov
sbb
sbb
daa
and
sbb
sbb
leave
enter
and
dec
pusha
test
and
mov
cs
(bad)
fimul
loopne
and
inc
call
cmps
mov
(bad)
and
sub
ds
push
dec
popa
lahf
fild
nop
push
cmp
repnz
or
or
jmp
or
add
or
mov
das
and
aaa
adc
dec
addps
xchg
xchg
xchg
test
(bad)
test
loope
in
test
push
add
jb
gs
xchg
test
or
xor
jb
loopne
jb
jbe
lock
psrad
or
sbb
and
sub
daa
daa
and
or
inc
dec
(bad)
push
daa
daa
push
pop
fistp
and
out
pusha
fisub
jo
jle
aas
loop
add
aad
loop
push
lock
daa
inc
dec
sti
jecxz
adc
sbb
dec
dec
dec
daa
xor
xchg
daa
push
or
or
enter
dec
adc
jnp
imul
mov
fadd
loopne
call
daa
mov
inc
clc
in
or
or
xchg
fst
or
sub
enter
(bad)
inc
adc
pushf
cmp
pop
pusha
adc
push
mov
js
or
nop
sbb
cmp
test
mov
mov
mov
jo
lock
bndldx
sbb
and
daa
and
add
xchg
fst
push
pop
or
push
or
jb
jp
dec
and
ffreep
mov
xchg
inc
mov
xchg
dec
nop
in
cmps
test
repnz
push
sbb
hlt
xchg
push
mov
shl
mov
jge
mov
inc
add
xchg
xchg
mov
in
enter
add
or
add
in
in
and
pop
xor
pop
je
repnz
or
mov
or
fstp
ja
ret
ins
pop
pushf
pop
and
mov
scas
xchg
add
dec
ret
test
and
ins
mov
sti
out
add
in
leave
enter
and
push
in
in
fs
pop
inc
dec
or
repnz
pop
push
fs
push
sahf
mov
je
adc
inc
xchg
pushf
adc
lods
enter
push
das
mov
rcr
jmp
call
sbb
sbb
sbb
in
in
jbe
dec
sub
xor
das
cmp
jb
and
and
and
cwde
mov
and
dec
mov
sub
enter
fsubr
loopne
xor
out
leave
lock
xor
jmp
inc
mov
adc
xor
in
xchg
and
cmp
push
cmp
cmp
cmp
enter
mov
inc
cdq
inc
sbb
jb
mov
inc
mov
mov
inc
aad
loopne
cmp
in
jmp
test
dec
or
and
sbb
dec
pop
dec
sub
jb
enter
push
dec
push
push
push
into
mov
popa
push
ins
push
ja
mov
dec
inc
lea
pop
xchg
xchg
daa
and
leave
enter
psrlq
out
enter
idiv
jmp
jns
repnz
push
imul
cmp
xor
inc
dec
outs
pushf
pushf
pushf
mov
popa
imul
jne
in
out
call
mov
jb
add
add
add
das
inc
cli
pop
in
add
cmp
sbb
sub
aaa
or
or
push
push
popa
movq
xor
enter
adc
jb
scas
mov
(bad)
jb
jb
iret
xlat
(bad)
cmp
jb
idiv
in
pop
mov
pop
jg
mov
in
inc
push
dec
add
leave
leave
enter
data16
das
lock
jbe
jle
xchg
dec
setbe
sahf
or
add
jbe
xchg
rcr
(bad)
fs
es
in
push
lock
add
out
add
pop
adc
sbb
xchg
and
or
or
or
or
enter
das
leave
mov
jo
js
xchg
xchg
retf
add
dec
dec
cs
ror
dec
inc
ficomp
rol
loopne
out
inc
sub
dec
lock
or
cmp
es
out
push
xor
out
jb
dec
xor
retf
or
push
leave
dec
ja
add
mov
stos
mov
das
or
mov
imul
in
add
sub
ss
push
cmp
cmp
pop
push
or
pop
mov
jns
or
inc
sahf
pushf
movs
scas
adc
and
rcl
(bad)
adc
add
cld
jg
(bad)
and
pop
mov
shl
int3
jg
es
mov
outs
sbb
pop
dec
xor
icebp
xor
cmp
cmp
cmp
add
push
pop
add
pusha
push
push
xchg
and
or
fst
test
mov
sub
adc
enter
outs
loopne
psllq
jnp
repnz
add
add
adc
pop
sahf
mov
sbb
and
sub
or
inc
cmovnp
sahf
pop
push
arpl
jae
xchg
xchg
daa
jnp
or
xchg
fwait
push
mov
jns
mov
push
ret
sbb
and
sahf
rcr
fninit
push
jmp
enter
repz
repz
and
jns
cmp
and
sub
inc
mov
sub
sub
sub
fst
inc
dec
das
(bad)
arpl
enter
xor
xor
pause
push
cwde
enter
mov
add
jb
leave
mov
rol
sbb
fild
jecxz
jmp
repz
fnstenv
pop
hlt
add
ud2
cmp
enter
adc
adc
adc
add
xor
adc
push
hlt
pusha
push
push
xor
jnp
add
mov
sbb
pop
mov
enter
mov
xor
leave
rcr
add
adc
inc
mov
sti
adc
add
enter
adc
sbb
and
xor
leave
sub
add
sbb
mov
dec
add
pop
pop
arpl
test
(bad)
and
dec
call
mov
and
iretw
mov
add
daa
fild
pavgw
add
repnz
sti
test
or
adc
add
adc
xchg
xchg
and
add
adc
fs
dec
add
pop
arpl
sahf
mov
imul
sbb
add
sbb
jb
enter
and
sub
ror
and
test
test
in
add
add
and
inc
sahf
mov
pop
xor
add
enter
dec
push
add
cmp
fs
push
imul
adc
mov
adc
enter
mov
cmp
fs
sbb
retf
add
sbb
inc
mov
sbb
mul
clc
push
push
jb
enter
add
add
mov
xor
add
arpl
and
imul
or
in
enter
or
sbb
jb
adc
and
mov
adc
rol
(bad)
enter
sbb
sbb
leave
push
repnz
sbb
call
leave
stc
stc
stc
stc
leave
leave
leave
leave
stc
stc
stc
stc
mov
stc
stc
push
jnp
and
inc
sahf
mov
xchg
push
fwait
mov
add
adc
jb
xor
lahf
adc
sub
stc
cli
cli
cmp
cmp
cli
cli
cli
cli
outs
cmp
cmp
cli
cli
push
dec
mov
pop
aas
out
dec
jo
xchg
cli
cs
lahf
cli
xor
inc
cli
mov
xchg
aad
jb
in
cli
sar
rcr
cmp
fninit
add
jmp
repz
inc
mov
add
or
add
xchg
xchg
and
or
sub
xor
xor
cmp
inc
dec
add
sahf
mov
adc
add
adc
jae
add
sbb
xor
mov
xchg
sbb
sub
mov
sti
in
in
sti
sti
sti
sti
in
in
sti
sti
cld
cld
in
in
cld
cld
cld
cld
in
in
cld
cld
cld
cld
in
in
cld
cld
cld
cld
mov
cld
cld
push
mov
add
sbb
enter
push
pop
xlat
nop
fs
cld
cld
cld
sahf
mov
fs
std
push
or
add
pop
and
add
leave
enter
inc
add
mov
cmp
pop
arpl
imul
and
jae
add
enter
push
prefetcht1
mov
std
repnz
xchg
xchg
std
std
std
push
jmp
mov
sti
pop
inc
or
xchg
daa
and
or
and
repnz
sub
add
adc
add
or
dec
inc
imul
pop
cmp
in
inc
fstp
inc
(bad)
(bad)
cmp
(bad)
(bad)
cmp
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
dec
(bad)
ds
(bad)
jmp
inc
cmp
pushf
dec
mov
cmps
xchg
xchg
sbb
arpl
cwde
call
setnp
jg
dec
mov
dec
mov
mov
xchg
and
or
jecxz
stc
cmp
xor
add
add
xchg
xchg
ins
push
or
adc
add
repnz
adc
xor
adc
inc
dec
add
sbb
push
adc
fild
pop
nop
(bad)
(bad)
outs
cmp
add
add
mov
xchg
xchg
and
ret
add
pop
shr
fs
fild
jecxz
jmp
das
dec
fdivp
loope
or
adc
enter
sbb
and
add
cmp
xor
adc
push
mov
leave
enter
push
js
add
nop
add
add
xchg
and
mov
mov
in
enter
or
or
push
adc
ficom
adc
pop
add
inc
mov
push
or
adc
sbb
es
xchg
xchg
and
add
daa
mov
das
push
pop
or
adc
leave
ins
je
ficomp
mov
and
mov
out
lods
shl
repnz
jecxz
out
add
pushf
cmp
push
push
pop
pop
push
or
or
sbb
or
adc
pop
pusha
pandn
ins
addr16
ficom
push
daa
push
cwde
mov
pop
test
mov
add
adc
cmp
add
add
add
add
and
sub
xor
add
dec
cmp
das
push
or
xchg
inc
inc
pop
or
(bad)
jb
enter
je
jb
or
mov
inc
jge
(bad)
xor
retf
jle
test
sub
pop
adc
xor
lahf
add
cmovge
je
out
das
in
rol
push
lock
and
cmp
mov
add
mov
add
push
push
pop
pop
pusha
push
mov
loope
in
movs
test
mov
in
in
ror
add
repnz
jecxz
jmp
add
dec
pop
mov
or
add
add
in
xchg
xchg
push
sbb
add
adc
cmp
xor
add
dec
dec
inc
mov
add
arpl
leave
enter
sbb
sbb
jb
mov
xchg
push
fwait
pop
mov
pop
and
push
inc
popf
int3
sahf
mov
mov
xchg
adc
push
clc
dec
push
invd
pop
in
xchg
and
or
or
or
cmp
jb
or
or
or
cmp
cmp
push
adc
mov
cmp
push
adc
xchg
and
pusha
push
in
xchg
js
adc
shl
cwde
aas
pop
jecxz
and
in
ror
add
add
test
(bad)
sbb
repnz
pop
or
or
inc
mov
and
cs
or
push
and
push
ja
and
or
out
outs
(bad)
pop
js
mov
mov
add
test
or
sbb
jb
cmps
or
mov
das
mov
mov
add
mov
retf
dec
or
sahf
retf
pop
push
in
adc
xchg
psubsb
jo
or
sbb
xchg
push
push
pop
add
inc
and
nop
pop
mov
push
add
add
mov
lahf
mov
mov
mov
ss
out
daa
or
daa
inc
daa
add
lock
and
add
stos
invd
add
(bad)
mov
add
and
(bad)
jb
enter
or
or
xchg
xchg
and
dec
outs
cwde
xchg
push
(bad)
adc
out
sub
clc
(bad)
jo
repnz
push
jnp
xchg
add
mov
test
xchg
and
add
or
pop
in
leave
enter
cmp
pop
inc
(bad)
sbb
jb
adc
outs
adc
and
jp
test
xchg
mov
(bad)
sbb
leave
mov
lock
pop
dec
clc
add
push
or
add
and
sub
enter
xor
cmp
inc
add
push
or
daa
call
inc
mov
mov
repnz
mov
dec
mov
push
adc
in
xchg
and
daa
or
add
repnz
adc
mov
xor
adc
adc
mov
xchg
mov
in
xchg
sbb
int3
xchg
in
xlat
loop
jmp
and
into
pop
clc
and
push
add
push
and
push
ror
xchg
and
and
push
repnz
push
push
pop
es
daa
enter
and
es
push
js
js
and
xchg
mov
js
push
jb
xor
pop
test
mov
lahf
or
dec
aas
dec
cs
dec
push
push
clc
add
cvtdq2ps
dec
(bad)
(bad)
femms
mul
mov
cmovo
ins
add
dec
or
pmaxsw
fst
add
xchg
add
add
call
pop
(bad)
mov
mov
jb
or
adc
xchg
mov
jmp
call
ret
xor
adc
adc
adc
cmp
xchg
std
or
push
jp
xlat
pop
jmp
daa
sbb
in
or
adc
packssdw
pop
jb
fs
add
sbb
jb
mov
xchg
xchg
enter
call
mov
xchg
adc
adc
adc
adc
jb
in
adc
adc
cli
adc
adc
push
icebp
push
in
inc
test
dec
in
push
daa
sbb
and
jb
push
pop
add
leave
leave
leave
enter
xchg
mov
or
aad
fs
in
shl
por
in
jbe
add
or
mov
adc
in
fs
and
sub
nop
jb
dec
pop
pop
sbb
sbb
sbb
fwait
jb
enter
pop
mov
mov
xor
shl
paddusw
and
repz
daa
adc
sub
jb
enter
sub
sub
sbb
sub
popa
jb
enter
xor
xor
mov
lea
xor
in
xchg
and
cmp
cmp
cmp
cmp
and
push
aas
adc
inc
sbb
jb
daa
inc
xor
and
sahf
mov
push
pop
inc
imul
jg
mov
mov
bts
dec
in
in
mul
add
add
sub
aaa
add
sahf
dec
pop
pop
pop
or
outs
leave
enter
jns
or
leave
leave
leave
in
call
leave
leave
leave
(bad)
rcr
out
in
leave
repnz
pop
push
or
sbb
repnz
sub
xor
aas
sbb
dec
push
pusha
imul
xchg
pushf
pushf
pushf
pushf
mov
pushf
pushf
pushf
into
ftst
out
dec
dec
mov
dec
dec
dec
dec
xor
dec
dec
dec
dec
push
pop
push
dec
jle
sbb
lahf
fs
xchg
cmp
shl
in
retf
(bad)
loope
cmp
jns
neg
add
or
inc
mov
dec
cs
cmp
push
dec
in
dec
out
jbe
add
mov
add
in
and
and
out
in
in
add
adc
cmps
movs
or
inc
push
(bad)
pop
repz
ins
aam
outs
sbb
and
push
xchg
add
fs
mov
push
in
push
or
jns
repnz
xor
ds
or
cdq
cmp
imul
add
and
adc
xor
add
push
jb
xor
cdq
add
inc
mov
or
pop
leave
enter
and
jns
jb
and
and
mov
sbb
daa
mov
sub
xchg
and
adc
sbb
mul
xor
ds
dec
push
xor
mov
jb
xor
jne
add
xchg
and
ss
aaa
mov
lods
cmp
jnp
jb
cmp
stc
cmp
cmp
nop
inc
das
and
sbb
cmp
inc
inc
pop
push
pushf
cmp
addr16
das
jge
cdq
mov
setle
test
mov
mov
push
cld
fimul
loopne
psadbw
pop
add
or
pop
and
outs
cmps
mov
cdq
mov
inc
dec
pop
bound
arpl
jp
jb
in
enter
addr16
fwait
push
jnp
mov
imul
ins
ror
mov
(bad)
in
xchg
inc
and
jb
jae
je
sbb
jb
jne
jbe
ja
imul
and
jns
jp
jnp
in
leave
leave
ja
lea
cwde
jg
sbb
jb
sub
and
inc
iret
fiadd
test
xchg
xchg
mov
push
and
mov
cmp
fs
mov
xor
mov
(bad)
push
nop
pop
xchg
imul
xchg
jg
mov
xchg
xchg
mov
pushf
pushf
pushf
xchg
xchg
nop
(bad)
cwde
pushf
pushf
pushf
mov
movd
enter
call
cmp
repnz
add
add
adc
and
mov
and
sub
xor
and
mov
daa
and
push
jae
mov
enter
or
or
ror
in
aam
fmul
push
push
stc
into
adc
and
enter
and
and
push
dec
add
and
jno
or
enter
cdq
sahf
push
xchg
ss
sub
cmps
rcl
rol
xchg
fadd
loopne
pop
dec
and
cli
jl
adc
sbb
jb
sbb
and
sub
xor
dec
inc
mov
add
xchg
daa
daa
daa
popa
imul
jns
mov
cdq
mov
mov
jb
adc
adc
xchg
push
and
sbb
out
dec
dec
es
enter
and
sub
jg
mov
xchg
pusha
push
inc
sahf
js
cmp
mov
add
inc
sahf
mov
add
dec
mov
or
or
xchg
and
or
(bad)
rcl
pusha
push
imul
sbb
add
mov
jnp
push
pop
lods
pop
mov
inc
sahf
into
pop
(bad)
in
xchg
and
outs
jg
(bad)
add
leave
dec
sbb
adc
daa
in
in
push
push
cmp
add
nop
push
cwde
push
repnz
cwde
xchg
xchg
cdq
or
xchg
xchg
daa
daa
daa
les
fst
pop
adc
sbb
aas
mul
and
sub
xor
or
jb
push
dec
movmskps
push
dec
in
adc
data16
xor
mov
mov
mov
lea
push
shl
enter
loope
in
push
rcr
cld
sub
out
popa
mov
and
repnz
fbld
sub
inc
add
dec
outs
daa
jb
jp
mov
sub
iret
or
pusha
shl
in
rcr
rol
fadd
xor
loopne
push
iret
lock
mov
call
sub
push
cmp
dec
shl
mov
add
inc
inc
jmp
sub
push
leave
in
leave
dec
lods
mov
push
das
int
xor
fmul
jecxz
out
stc
or
sahf
mov
sub
prefetch
and
inc
xor
cmp
inc
mov
leave
inc
add
push
das
sub
mov
sub
lods
mov
pmulhuw
enter
pop
fsub
or
lahf
sub
or
or
femms
sbb
enter
adc
adc
enter
pop
pop
push
aas
addr16
jb
xor
fs
sbb
xchg
sbb
test
retf
inc
mov
mul
and
cvtps2pi
or
pop
and
enter
sub
sub
mov
xor
or
push
daa
and
xor
xchg
xchg
xor
push
sub
mov
fild
out
icebp
add
add
pop
add
leave
enter
or
dec
or
jb
push
or
and
mov
or
xchg
adc
jb
in
fs
fcom
sbb
sbb
das
add
cmova
and
leave
enter
and
pop
and
pop
les
daa
sub
adc
fwait
mov
das
data16
es
mov
fisttp
out
leave
in
pop
das
cld
add
fst
sbb
daa
daa
daa
mov
cmovns
daa
daa
daa
daa
jne
mov
mov
daa
daa
daa
int
jecxz
enter
stc
xor
sbb
sbb
jb
rcr
push
and
in
addr16
jge
das
mov
mul
jbe
xchg
sahf
pop
mov
das
in
xor
sub
jbe
repnz
div
xor
or
sbb
repnz
and
sub
jb
jno
jl
cmp
xchg
cmp
sahf
mov
mov
and
aam
fucomip
inc
leave
enter
inc
xor
cmp
jb
in
leave
push
and
sub
aaa
dec
in
jbe
inc
dec
addps
in
in
jns
(bad)
in
in
call
in
rcr
out
stc
repnz
std
pop
xor
dec
adc
cmp
push
sub
arpl
inc
sahf
mov
dec
pusha
imul
xchg
daa
jbe
sub
xchg
dec
mov
inc
sahf
mov
outs
into
(bad)
jb
xchg
daa
and
cli
dec
xor
in
adc
dec
es
mov
jns
dec
inc
push
jl
jge
daa
and
jle
jle
in
xchg
xchg
jge
lahf
sub
mov
ror
cmp
jb
in
div
add
cmp
cmp
cmp
cmp
inc
dec
pop
cmp
cmp
gs
xchg
cmp
cmp
cmp
cmp
cmp
cmp
hlt
push
or
pop
and
and
inc
dec
stos
push
bound
ins
js
xchg
fcmovne
enter
movs
imul
(bad)
in
leave
enter
cld
mov
in
adc
sbb
cmp
jns
ds
rcl
jb
jb
jne
mov
jb
xchg
mov
jb
ret
jecxz
cmp
out
stc
cmp
cmp
cmp
sbb
cmp
inc
push
pop
cmp
cmp
jb
mov
sahf
test
cmp
retf
jmp
pushf
sbb
idiv
add
dec
inc
sahf
pushf
and
enter
dec
lock
fs
cmp
leave
outs
jp
test
nop
idiv
cmp
sbb
cmp
cmp
rcr
call
mov
(bad)
inc
add
or
fs
adc
add
cmc
sub
sbb
inc
push
dec
pop
push
popa
pushf
pushf
pushf
pushf
ins
ja
lea
mov
and
(bad)
iret
adc
adc
enter
adc
leave
leave
leave
in
adc
sbb
xor
leave
leave
leave
cmp
jns
repnz
cmp
xchg
mov
daa
and
ror
xlat
loop
das
dec
outs
paddsw
cs
mov
push
sbb
and
das
fs
enter
push
adc
repnz
adc
cmp
cmp
test
mov
pushf
mov
adc
aam
inc
xchg
xchg
and
inc
cmc
inc
add
push
and
xchg
xchg
xchg
aaa
inc
dec
pop
enter
arpl
test
in
leave
(bad)
call
inc
mov
mov
pop
fcom
pop
pslld
aas
cmp
enter
pop
push
push
sub
inc
mov
bound
arpl
push
in
leave
enter
imul
repnz
or
ins
mov
ds
in
add
cli
je
lea
jne
jbe
add
push
jns
js
mov
jge
push
add
pop
add
addr16
inc
into
pop
jl
test
in
xchg
and
or
fs
ror
fsubr
(bad)
cmp
out
pxor
cli
adc
adc
push
inc
mov
adc
pop
fs
push
jle
cmp
jo
push
sahf
sub
push
pop
adc
add
pushf
cmp
add
jbe
jle
inc
into
sahf
xchg
jle
xchg
daa
mov
test
or
enter
leave
push
paddq
fdivr
jb
leave
in
adc
adc
adc
inc
mov
adc
and
enter
sbb
xchg
xor
sbb
sbb
mul
and
jbe
jle
inc
into
fcom
and
and
iret
int3
sub
sub
jmp
into
sahf
mov
setbe
sahf
test
outs
inc
add
in
scas
sbb
push
and
sub
adc
xor
fs
dec
push
fild
push
dec
add
repnz
pop
add
push
mov
pop
or
nop
or
in
in
pop
add
jb
adc
cmp
sbb
rcr
jecxz
das
dec
inc
mov
add
sti
sbb
and
or
adc
sbb
leave
enter
sub
and
in
enter
dec
and
xor
arpl
jae
pop
sbb
repnz
sub
mov
mov
and
retf
xor
leave
enter
cmp
repz
leave
in
in
enter
ud2
cmp
jb
sbb
and
sub
inc
and
mov
inc
inc
dec
inc
push
enter
inc
pop
dec
movd
in
leave
jbe
dec
pop
mov
xchg
dec
sahf
dec
cmps
scas
push
inc
lods
and
push
sub
scas
inc
loopne
sbb
mov
jmp
repz
add
add
xchg
and
add
cmp
dec
or
pop
or
xchg
and
je
jg
mov
mov
movq
mov
enter
mov
adc
rcl
fcom
loopne
call
mov
sbb
sbb
sbb
jb
enter
push
push
pop
and
inc
mov
and
and
jb
enter
and
mov
cmp
jge
sub
inc
xchg
sub
sub
jb
mov
mov
xor
xor
xor
xor
icebp
ss
aaa
dec
add
(bad)
and
sbb
cmp
cmp
cmp
jb
enter
ds
aas
push
inc
inc
mov
pop
inc
arpl
inc
jbe
in
xchg
and
xchg
inc
mov
jb
dec
sahf
dec
cmps
dec
scas
dec
sbb
and
add
sub
sub
dec
dec
dec
inc
into
pop
mov
adc
and
dec
and
xor
cmp
leave
enter
or
or
jnp
jb
pop
or
adc
pushf
cmp
or
and
cwde
adc
dec
dec
dec
outs
(bad)
ror
sbb
xchg
and
fcomp
pop
inc
fs
and
stos
and
cmp
enter
and
and
jns
sub
adc
sub
enter
dec
sub
pop
sub
pusha
push
enter
and
xor
xor
dec
dec
dec
dec
bswap
pop
xor
out
pop
sub
mov
push
jo
enter
xchg
or
das
add
jb
dec
push
add
adc
jb
inc
mov
or
add
mov
das
mov
das
sbb
popa
mov
ja
daa
pusha
xchg
dec
jns
dec
dec
jo
js
leave
enter
mov
in
mov
imul
shr
ficomp
dec
das
push
or
add
dec
add
and
movaps
mov
in
dec
dec
outs
movs
(bad)
jl
xchg
mov
jo
stos
out
sub
cwde
outs
jb
pop
cmp
mov
add
cdq
sbb
add
cmp
in
mov
fimul
mov
hlt
or
or
enter
adc
adc
jb
adc
dec
adc
pushf
mov
js
cmp
cmp
addr16
inc
mov
pand
in
xchg
and
and
and
and
dec
pop
adc
pop
sbb
cmp
cmovns
sub
jg
cs
jne
leave
in
leave
enter
xchg
xor
mov
lods
xor
aaa
int
and
sbb
cmp
cmp
cmp
in
enter
add
(bad)
pop
sbb
mov
jb
inc
xor
inc
inc
inc
enter
push
inc
pop
inc
addr16
sbb
jb
jb
jge
mov
inc
mov
dec
mov
mov
and
dec
aad
loopne
cmp
mul
push
(bad)
add
or
sahf
int3
mov
push
and
sub
sahf
int3
pop
inc
dec
pop
pop
pop
fs
enter
pop
jp
test
jb
in
nop
popa
setnp
arpl
sbb
gs
data16
jb
enter
imul
pushf
sbb
adc
pop
pop
outs
sub
dec
inc
sahf
xor
push
enter
popa
je
ja
jnp
jb
and
js
mov
sbb
scas
jnp
jl
jge
jle
enter
jg
xor
mov
jb
adc
adc
test
xchg
and
xchg
xchg
in
dec
mov
pop
mov
sbb
jnp
lea
jg
mov
sahf
mov
xchg
xadd
xchg
xlat
xchg
loop
sbb
fs
cwde
clc
push
add
inc
mov
pushf
and
das
pushf
xchg
xchg
xchg
xchg
fwait
call
cmp
leave
leave
leave
data16
xchg
leave
leave
leave
xchg
popf
test
scas
mov
jb
scas
leave
mov
mov
mov
xchg
and
mov
mov
add
or
sub
mov
aaa
inc
mov
enter
arpl
rcr
in
ror
cmp
popf
mov
enter
mov
leave
out
repnz
cmp
retf
std
int3
push
or
adc
push
iret
and
sbb
shl
aas
enter
xchg
daa
push
aam
aad
(bad)
lahf
sbb
jb
jbe
sbb
xchg
and
mov
frstor
daa
mov
ret
into
psubusw
out
jb
retf
xchg
loop
jecxz
add
mov
sbb
es
call
xchg
and
push
jmp
in
pushf
sbb
jae
jle
mov
inc
mov
daa
mov
xchg
mov
bswap
neg
(bad)
loope
fist
cli
xorps
call
or
(bad)
cs
cmp
ds
dec
cmp
pop
dec
pop
nop
jnp
gs
dec
jnp
xchg
inc
into
mov
aas
cmps
or
bsr
enter
fidiv
enter
adc
adc
adc
or
adc
and
and
pop
inc
sbb
leave
enter
ins
sbb
cmp
repnz
cdq
and
movs
and
inc
mov
and
jb
enter
es
icebp
sub
jl
cld
sub
sub
sub
and
xor
pop
ds
leave
enter
push
pop
xor
jb
in
jne
dec
xor
cdq
cmp
pop
mov
cmova
fdivr
in
xchg
and
inc
pop
add
cmovb
inc
and
inc
xchg
xchg
and
inc
push
cmp
leave
enter
dec
pop
jb
dec
mov
fs
dec
sahf
test
sahf
mov
mov
loopne
inc
sahf
popf
int3
pop
jmp
cvtdq2ps
pop
or
in
xchg
and
pop
and
pop
mov
jb
pop
inc
pop
dec
pop
pop
pusha
fst
outs
bound
mov
test
mul
leave
mov
imul
sbb
jb
ins
call
xchg
and
pop
or
adc
pop
cmp
in
xchg
sub
jbe
pop
push
cmp
popa
jecxz
ins
mov
enter
xor
jl
jge
jb
jb
jl
jp
cmp
in
push
or
imul
xchg
dec
outs
pop
cwde
mov
mov
and
iret
(bad)
pminub
in
lock
sti
xchg
dec
push
xchg
enter
adc
cmp
in
xchg
cwde
push
cdq
stos
call
rcr
in
xchg
lahf
in
mov
mov
push
mov
fwait
das
cmps
and
inc
cmp
pop
push
test
xchg
stos
data16
jl
cmp
xchg
test
dec
inc
mov
pop
aam
daa
and
mov
cmc
mov
enter
or
mov
sub
aaa
mov
inc
mov
outs
ret
jns
fst
(bad)
setp
jb
enter
leave
mov
pushf
pushf
sbb
retf
(bad)
dec
inc
mov
daa
daa
inc
dec
std
pusha
or
push
and
daa
daa
sub
popa
jb
in
enter
fcomp
cmp
inc
fidiv
jns
push
push
(bad)
das
ror
in
in
cmp
dec
call
jb
cmp
jbe
mov
lock
icebp
mov
ret
repz
hlt
fprem1
in
in
xchg
imul
idiv
clc
popa
add
cmp
cli
pop
sbb
add
inc
sahf
lahf
(bad)
stos
lgs
add
add
add
pop
loope
pop
in
fst
push
bound
pop
or
in
sbb
add
or
(bad)
or
jnp
jb
inc
or
adc
sahf
mov
adc
inc
into
setl
jb
in
enter
sbb
jl
jnp
jmp
push
arpl
pop
retf
and
adc
push
add
in
ss
and
dec
and
in
bound
ins
vmread
mov
add
cs
jns
mov
sub
dec
inc
mov
xor
cld
xor
enter
aaa
sbb
cmp
xor
cmp
push
cmp
pop
ds
jne
leave
in
in
add
in
leave
cmp
inc
xchg
dec
div
mov
outs
ret
in
int
fmul
cmp
cmp
xor
stc
gs
andps
push
and
sbb
cmp
pop
(bad)
pop
inc
pop
push
pop
mov
pop
outs
dec
out
(bad)
xlat
cld
add
add
pop
add
rcr
shl
rcr
in
aaa
gs
sbb
repnz
mov
add
add
mov
push
rcr
pavgb
mov
or
add
or
data16
or
cmp
in
movlps
adc
adc
sbb
adc
sbb
sbb
sbb
in
dec
sbb
sbb
pop
pop
mov
cmp
and
jo
dec
dec
inc
dec
and
or
nop
and
cwde
jb
in
mov
mov
mov
cmp
enter
inc
dec
xor
xor
xor
enter
aaa
call
rcr
addr16
out
jle
sub
addr16
fs
std
push
cmp
inc
push
pop
jb
leave
leave
pop
addr16
jge
sahf
mov
mov
xchg
or
into
dec
or
test
enter
retf
aad
loopne
in
out
leave
jmp
adc
push
sbb
jb
pop
and
sub
xchg
and
sbb
sbb
pop
adc
jle
lods
xchg
pop
fs
and
xor
sbb
cmp
push
sbb
ror
daa
daa
daa
daa
fsub
call
daa
clc
imul
movs
rcl
rdpmc
pusha
popf
mov
inc
push
dec
add
mov
mov
push
lea
xchg
xchg
and
or
fxch
scas
pop
or
mov
mul
adc
in
adc
jns
jnp
sti
push
adc
adc
xchg
mov
sbb
enter
push
push
push
leave
leave
leave
js
mov
cwde
mov
dec
dec
scas
xchg
call
pushf
fmul
(bad)
clc
imul
xchg
and
pop
adc
sbb
sbb
or
or
or
or
jg
push
dec
push
adc
in
xchg
and
push
sbb
jb
adc
sbb
inc
mov
test
mov
in
xchg
sbb
sbb
xchg
xchg
or
xor
inc
inc
imul
or
adc
mov
ins
ins
ins
xor
ins
cmp
into
jo
fs
jnp
xchg
xchg
pushf
add
sbb
cmps
mov
mov
cmp
jmp
inc
mov
or
adc
fst
adc
jb
in
dec
adc
push
adc
inc
sahf
mov
sbb
and
movs
sbb
scas
sbb
and
rcl
repnz
cld
outs
pop
and
cmp
sbb
ds
dec
dec
dec
push
pop
sub
xchg
xchg
and
or
daa
mov
pop
fs
xchg
ret
fdivr
jecxz
jns
imul
cmp
stc
outs
add
nop
cmp
inc
mov
pop
inc
addr16
xchg
daa
jb
jge
mov
jnp
jb
dec
sahf
test
int3
sahf
mov
dec
retf
pop
loopne
push
mov
jo
push
or
addr16
ficomp
pop
push
and
aas
sub
enter
pop
dec
sub
sahf
mov
fs
outs
pop
jp
pop
xchg
retf
nop
mov
cmp
push
fild
jecxz
das
inc
mov
add
add
add
enter
pop
sbb
and
mov
cmp
or
cmp
addr16
inc
sahf
dec
push
push
pop
adc
popa
adc
jno
vmwrite
xchg
mov
or
leave
mov
test
jb
sbb
and
inc
sahf
mov
fldenv
in
in
enter
and
cld
es
add
xor
(bad)
jb
sub
and
mov
sub
xor
cmp
das
xchg
xchg
and
xor
jle
fs
xchg
xor
(bad)
mov
mov
sar
jmp
outs
and
or
adc
sbb
sub
leave
enter
aas
cmp
sbb
xor
inc
push
pop
inc
pusha
inc
and
mov
jo
dec
sub
enter
dec
xchg
fwait
dec
aas
jnp
jb
mov
mov
jnp
ret
retf
push
das
rcl
and
cmp
push
out
push
not
xchg
mov
and
push
pop
pop
push
pop
enter
push
ucomiss
pop
xchg
add
inc
pusha
dec
bound
fs
dec
and
add
repnz
xchg
mov
sbb
jnp
push
das
int
fsub
or
xlat
cmp
or
push
jne
push
mov
fst
pop
addr16
jb
xchg
xchg
daa
jge
lahf
ror
fs
int3
xlat
or
in
or
clc
jbe
(bad)
femms
add
sahf
int3
sahf
pushf
and
adc
push
jae
xchg
xchg
and
push
mov
xchg
xchg
daa
mov
mov
into
lock
leave
in
xchg
sti
ja
push
movups
jb
in
daa
and
xor
cmp
xor
and
je
jnp
cmp
mov
mov
pop
mov
fimul
xor
cmp
xchg
daa
and
xor
xchg
mov
jg
pop
cmp
adc
sbb
in
sub
cmp
jns
jnp
inc
pop
pop
push
jne
addr16
inc
mov
psubusw
enter
dec
out
dec
cli
dec
jns
cmp
jp
add
dec
pop
aaa
pop
add
sahf
mov
dec
nop
mov
pop
ret
xchg
and
push
fcom
fs
leave
out
stc
push
(bad)
and
inc
mul
outs
pop
xchg
pop
mov
sbb
bnd
add
pop
cmp
inc
popa
enter
push
bound
push
in
gs
mov
xchg
jns
xor
imul
adc
dec
inc
push
jge
ins
inc
push
outs
subps
xchg
and
jno
jb
jae
cmp
mov
sahf
jbe
mov
js
lock
rcl
add
and
cmp
add
enter
inc
or
or
fs
jg
or
test
pop
mov
ror
adc
adc
adc
enter
adc
jo
mov
jb
push
scas
pop
rcr
out
sbb
xchg
and
bndldx
cmp
ins
sbb
mov
daa
and
mov
(bad)
xchg
xchg
daa
daa
fsubp
add
fild
inc
fadd
push
push
pop
arpl
pop
jl
sbb
jnp
add
popf
add
and
inc
mov
or
or
outs
daa
mov
aad
paddusw
pop
in
mov
and
adc
add
xchg
adc
cs
sbb
jb
dec
pop
push
sbb
sbb
sahf
mov
pop
jg
push
daa
mov
and
cmps
and
outs
imul
mul
xchg
add
movaps
xor
in
pop
daa
das
sub
sbb
jb
inc
dec
xor
bnd
jo
mov
mov
inc
mov
xlat
aaa
fistp
out
xchg
xchg
push
out
cmp
xor
mov
jns
jb
out
push
std
pop
xchg
and
test
or
or
or
in
enter
or
or
jb
in
add
adc
jb
jb
pusha
imul
inc
mov
pop
mov
xchg
sbb
sbb
sbb
into
sbb
sbb
sbb
cmp
sbb
add
and
in
cli
test
adc
sbb
xor
enter
push
das
pop
mov
repnz
xor
inc
xchg
xor
xor
and
daa
daa
sub
enter
lahf
stos
ds
repnz
inc
retf
(bad)
cmp
inc
inc
mov
inc
xchg
inc
or
and
cmp
cs
jle
inc
inc
xchg
ins
retf
xchg
add
add
and
enter
or
or
or
jl
cld
or
pop
or
enter
das
sub
xor
adc
jb
inc
adc
push
adc
inc
mov
je
sbb
xchg
dec
(bad)
sbb
xchg
mov
es
and
fimul
add
pmaxsw
dec
dec
dec
pop
mov
movhps
dec
dec
dec
dec
daa
das
aaa
aas
sub
inc
dec
push
pop
xchg
xchg
xchg
daa
xor
in
enter
dec
lea
cwde
mov
fs
mov
mov
and
sar
enter
inc
psubd
inc
mov
in
inc
sbb
inc
sub
and
xor
dec
inc
dec
cmp
enter
dec
addr16
jb
and
sbb
dec
test
push
fwait
jb
enter
push
mov
mov
cmp
push
push
push
push
cmp
cmp
push
dec
dec
dec
cmp
cmp
dec
dec
dec
dec
sbb
cmp
dec
inc
fs
gs
and
xlat
inc
loop
in
push
clc
imul
xor
sbb
outs
movntps
jo
pushf
cmp
jg
jae
je
xchg
and
jne
jbe
in
leave
enter
je
das
xor
leave
lods
mov
sar
jnp
jnp
sbb
add
sbb
clc
test
enter
pop
push
mov
mov
sbb
jb
aaa
mov
mov
push
mov
(bad)
xchg
xor
enter
xchg
xchg
xchg
lahf
cmp
cmp
xchg
xchg
nop
(bad)
cmp
cmp
mov
cmp
mov
cmp
xchg
mov
cmps
scas
mov
mov
and
stos
iret
xlat
pandn
enter
scas
repnz
mov
in
pop
inc
ror
inc
add
pop
add
leave
leave
enter
jge
cmp
leave
stos
int3
or
or
or
in
adc
mov
push
lea
inc
mov
adc
adc
das
in
xchg
daa
cmp
jns
jb
pop
data16
jl
inc
into
sahf
mov
sbb
dec
mov
das
mov
leave
enter
and
cmc
lahf
inc
into
ficomp
ud2
daa
pop
push
sub
daa
and
sub
das
aaa
sub
in
leave
enter
arpl
pop
jb
fs
xor
sahf
mov
movs
xor
cmp
dec
inc
into
das
sar
fsub
cmp
in
xchg
xchg
cmp
(bad)
adc
xor
ins
push
das
sub
inc
aas
inc
mov
dec
adc
inc
add
daa
and
jb
in
leave
scas
mov
iret
dec
in
jbe
(bad)
(bad)
sti
cmp
sbb
push
push
adc
push
inc
sahf
pushf
mov
cmp
and
pop
imul
mov
daa
daa
mov
int3
xlat
add
in
dec
mov
pop
pop
sbb
and
das
pop
cmp
jo
in
leave
enter
data16
jno
mov
jb
jne
jbe
ja
and
sahf
test
btr
jnp
in
enter
jge
jl
jb
in
jp
sub
into
mov
test
pop
push
xchg
and
and
aaa
inc
fs
xchg
mov
pop
lea
jnp
repnz
(bad)
jns
xchg
jg
call
mov
cmp
fcomp
and
fwait
std
pushf
xchg
or
adc
mov
mov
mov
movs
dec
dec
inc
mov
jbe
mov
and
xchg
mov
enter
jg
scas
into
scas
fnstenv
in
out
cli
sete
cmp
jns
daa
pop
xor
into
sahf
mov
mov
mov
jg
mov
in
mov
sbb
jb
mov
mov
mov
leave
loop
add
and
and
pop
sbb
das
and
xchg
daa
cmp
inc
mov
mov
jb
shl
jb
jge
sahf
int3
sahf
mov
pop
xchg
sahf
(bad)
test
inc
mov
mov
cmp
aad
loopne
jmp
mul
and
mov
jecxz
pop
in
jb
enter
out
out
call
dec
dec
out
in
cmp
cmp
loop
loopne
cmp
cmp
(bad)
fdivr
cmp
cmp
fcmovu
rcr
pop
cli
outs
cld
xchg
and
(bad)
mov
cmp
sbb
xchg
dec
cmp
out
leave
leave
xchg
out
xchg
pop
movaps
mov
jb
pop
cmp
inc
or
enter
push
or
or
fs
push
jns
call
movs
adc
inc
dec
into
sahf
lds
(bad)
push
sbb
sbb
sub
xchg
and
fistp
push
popw
in
ins
in
jno
jl
xchg
cmp
enter
and
mov
inc
mov
daa
sub
sub
xchg
fst
sub
in
xchg
movs
add
xor
jb
jb
xor
jbe
jg
(bad)
mov
cmp
xchg
and
shufps
fld
jb
enter
inc
cli
inc
cdq
add
sbb
inc
sbb
dec
xor
enter
dec
inc
dec
push
dec
pushf
pushf
sbb
pop
dec
push
pushf
pushf
pushf
dec
dec
dec
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
pop
out
xchg
jo
jnp
mov
aaa
add
cwde
nop
mov
cwde
daa
test
call
mov
and
enter
fmul
or
pop
out
aad
fsub
and
xchg
push
call
(bad)
in
pop
packsswb
push
outs
add
cmp
movs
or
or
xchg
pop
add
fdiv
push
xchg
pop
fwait
inc
fwait
sub
popf
pop
and
cld
push
pop
inc
mov
jo
aas
js
dec
dec
add
mov
mov
xchg
and
mov
xadd
enter
fcom
adc
call
leave
retf
clc
adc
adc
xor
sbb
and
sbb
sbb
imul
pop
fs
mov
add
ss
add
cwde
add
mov
repnz
sbb
mov
push
in
leave
push
lock
popf
add
or
pop
adc
add
dec
inc
sub
add
add
daa
daa
daa
add
or
xchg
push
cmp
inc
dec
adc
repnz
pop
adc
adc
cmp
js
sbb
inc
nop
cwde
sbb
mov
adc
shl
daa
out
push
ja
call
xchg
xchg
add
inc
into
sahf
mov
movaps
xor
in
or
cmp
pop
lock
mov
pusha
add
jo
jge
daa
and
aas
outs
xor
repnz
nop
push
cwde
mov
sbb
jb
mov
or
inc
dec
push
rcr
adc
loopne
rcl
lock
adc
and
in
push
or
adc
sbb
sub
aas
xor
mul
cmp
sbb
div
jb
and
(bad)
jo
jle
and
and
xchg
mov
inc
cwde
sub
leave
leave
leave
xchg
mov
sub
es
and
mul
xor
shl
sbb
shl
fsub
psubsb
push
pop
mov
cmp
cmp
and
cld
invd
adc
sbb
and
inc
pop
js
movs
repnz
mov
lods
jge
xchg
mov
mov
nop
add
dec
je
jb
mov
jb
and
shl
stc
ficom
push
or
push
add
dec
inc
mov
add
pop
inc
push
xchg
daa
and
pop
pop
arpl
leave
enter
jns
outs
test
sbb
jb
call
adc
and
(bad)
adc
adc
out
retf
xchg
mov
pslld
std
pop
mov
cmp
sbb
sbb
out
sbb
xor
push
imul
pop
jle
mov
in
enter
lahf
add
cmp
in
or
sahf
mov
or
rcl
xchg
xchg
and
adc
adc
jbe
retf
fptan
adc
cli
adc
pop
pop
cmp
or
sbb
sub
dec
inc
mov
inc
dec
pop
pushf
fmul
pop
push
pop
punpckldq
mov
cdq
mov
test
repnz
ror
rcr
cs
sbb
loope
xor
movs
add
daa
and
or
jb
enter
aaa
cmp
inc
cmp
sbb
dec
cmp
pop
cmp
cmp
jno
jl
xchg
sbb
jb
inc
popf
or
lods
inc
inc
into
sahf
mov
inc
int
outs
daa
and
fisttp
in
pop
in
and
dec
cmc
paddw
add
enter
push
sbb
cdq
sbb
push
outs
cmp
mov
arpl
in
fst
test
pop
mov
jb
pop
mov
bound
arpl
retf
ror
xchg
mov
fisub
loop
jmp
push
imul
and
adc
or
jo
jb
enter
jb
jae
je
inc
mov
ja
jb
enter
jns
jp
jnp
mov
xchg
jl
jge
jle
xor
enter
cmp
jo
sahf
test
xchg
ins
sbb
cmps
cmps
push
adc
jb
enter
das
and
sub
sbb
cmp
inc
or
or
xchg
and
or
imul
push
jnp
adc
mov
inc
mov
xchg
adc
adc
mov
mov
xchg
fist
das
sbb
sbb
sbb
cmp
fs
push
jecxz
jmp
mov
psubq
test
sbb
and
daa
mov
adc
jb
leave
enter
cmp
inc
sub
jnp
dec
push
sub
das
and
mov
xor
sub
enter
xor
fwait
ss
cmp
fs
aaa
stos
mov
mov
sbb
cmp
ror
fild
cmp
jecxz
inc
repz
sti
inc
in
xchg
das
test
adc
xor
sbb
and
xor
sbb
jnp
cmp
cmovnp
dec
pop
sbb
mov
test
mov
jb
add
sahf
pushf
pushf
pushf
enter
or
add
test
stos
add
invd
adc
sub
pop
stos
stos
daa
and
push
inc
add
pop
addr16
enter
jb
pop
lahf
or
bswap
xlat
in
xchg
xchg
test
add
pslld
in
add
and
aas
das
adc
sbb
cmp
sbb
data16
jl
sbb
jb
xchg
das
popf
test
mov
daa
and
mov
(bad)
retf
xchg
mov
pminsw
xchg
test
and
aas
jns
jb
sub
aaa
sub
sub
pop
arpl
outs
jns
lea
xor
push
push
ds
cmp
cmp
lods
add
adc
xor
scas
xor
sub
xor
or
sbb
cmp
lods
lods
dec
outs
daa
ins
mov
mov
shr
add
or
and
or
jmp
in
lea
stc
movhps
inc
mov
inc
scas
xor
cmp
push
cdq
sbb
dec
add
inc
xor
scas
push
mov
mov
mov
aas
mov
dec
outs
daa
ret
out
or
jb
enter
or
or
or
pushf
sbb
es
inc
mov
inc
adc
push
push
pop
repnz
push
mov
xor
inc
push
cmp
xlat
loop
add
mov
fimul
das
and
enter
inc
sub
push
sub
leave
in
leave
addr16
pop
jge
cs
leave
in
fs
das
sahf
test
fs
xor
aad
loopne
mov
idiv
mov
cmp
jl
xchg
and
cmp
and
cmp
inc
aas
dec
pop
fs
xchg
inc
fs
outs
inc
jp
xor
test
nop
inc
fwait
cmps
dec
pop
cmp
jns
mov
inc
(bad)
ror
sahf
mov
call
(bad)
mov
outs
inc
mov
unpcklps
push
das
sub
(bad)
es
push
inc
push
dec
xchg
fst
pop
pop
ins
in
enter
das
sbb
cmp
pop
push
ins
cmp
sub
btr
xchg
daa
daa
daa
adc
push
add
pusha
imul
jbe
or
mov
sbb
xchg
push
mov
adc
dec
inc
mov
fst
aas
in
out
pop
cli
mov
in
fld
sbb
add
cmp
inc
pop
push
sbb
outs
mov
cwde
pop
jg
xchg
xchg
daa
ins
push
mov
add
or
cwde
in
test
sbb
jb
add
add
add
and
pop
push
js
sbb
jb
xchg
xchg
or
and
mov
adc
repnz
out
hlt
adc
and
sbb
adc
dec
jb
enter
sbb
sbb
sbb
sbb
pushf
push
stos
pop
in
xchg
and
and
lock
and
pushf
pushf
push
push
push
sub
dec
inc
cs
pushf
pushf
pushf
fdivr
dec
push
pop
inc
sahf
pushf
pushf
outs
jbe
xor
xchg
and
sbb
jb
cmps
cmp
pop
mov
aas
out
mov
xchg
and
inc
and
inc
aas
fs
leave
xor
inc
pop
inc
inc
pop
sbb
jb
jae
aas
jnp
or
inc
mov
dec
fwait
dec
mov
xchg
xchg
push
mov
push
ret
push
cmp
cmp
push
rcl
jecxz
imul
pop
cmp
jns
or
inc
mov
ss
jb
enter
outs
mov
mov
mov
mov
ret
in
xchg
and
in
addr16
cmp
mov
das
adc
push
adc
xchg
and
push
adc
adc
jb
enter
sbb
dec
sbb
pop
sbb
sbb
ret
dec
inc
into
mov
jmp
enter
test
mov
in
es
daa
rcl
mov
pop
and
dec
xor
pop
mov
adc
sub
sub
or
js
fadd
and
mov
pop
sar
gs
or
mov
mov
jo
js
or
nop
push
cwde
pop
mov
pxor
pushf
mov
rcr
add
icebp
daa
out
pop
sahf
cld
add
int
adc
pop
sub
ds
dec
in
xchg
daa
push
add
push
fs
fs
jnp
jb
mov
mov
ret
and
int
fcomp
jecxz
in
xchg
mov
psubw
mov
sbb
cmp
push
and
cmp
pushf
cmp
and
xchg
xchg
and
and
mov
leave
enter
lahf
sahf
sub
enter
das
jmp
div
in
xor
(bad)
xor
inc
mov
push
cmp
inc
xchg
mov
out
and
jo
xchg
daa
mov
jo
xchg
fist
inc
pop
invd
in
jbe
or
or
or
and
in
push
movups
leave
in
push
pop
pop
sbb
lods
push
inc
mov
pop
jb
rcr
pop
and
and
pop
jb
and
jb
sub
ucomiss
(bad)
and
inc
ins
add
mov
xchg
xchg
ss
pusha
inc
repnz
push
add
xchg
and
ret
mov
and
xor
enter
add
add
jns
pop
push
or
pusha
xchg
and
push
js
mov
mov
or
mov
leave
enter
adc
leave
movhps
repnz
repnz
cli
xadd
or
sbb
(bad)
and
and
jb
xor
cmp
inc
dec
and
mov
cmp
pop
bound
sub
jp
sub
jb
enter
sub
dec
sahf
mov
xor
pushf
pushf
fsubr
sub
sub
inc
mov
retf
mov
sar
fidivr
inc
shr
inc
jp
xchg
cmps
pushf
rcl
sbb
cmp
sbb
inc
mov
fdiv
dec
rol
retf
leave
sbb
sar
jns
or
push
and
mov
lahf
dec
scas
xchg
xchg
adc
add
xchg
inc
psadbw
add
or
fs
leave
pop
and
das
sub
fucomi
inc
cmovle
pop
fs
xchg
xchg
xchg
outs
jp
nop
enter
fwait
cmps
mov
adc
xor
(bad)
adc
adc
repz
ret
or
unpcklps
xchg
xchg
and
add
xor
in
and
popa
in
in
ins
ja
(bad)
in
in
cwde
mov
in
(bad)
iret
(bad)
add
jl
xor
sti
xor
push
add
and
sahf
sbb
pop
daa
xor
enter
cmp
pop
cmp
mul
cmp
jg
ds
xor
jb
aas
mov
cmp
cmp
inc
psubd
adc
and
sbb
add
cmp
es
daa
inc
push
test
fimul
dec
call
mov
lods
fild
xlat
mov
aam
mov
cmp
sbb
or
xor
cmp
jb
cmp
imul
cmp
stos
pop
enter
mov
rcl
leave
xlat
loop
aas
in
in
enter
psubb
mov
sbb
jb
sbb
and
das
and
and
sahf
mov
pop
push
add
push
daa
pop
sub
jno
(bad)
xchg
xchg
in
add
outs
popf
cs
xchg
xchg
fcmovne
mov
pavgb
cmp
retf
div
add
mov
aas
cmp
inc
cmp
pop
daa
fs
outs
aas
jp
test
cmp
inc
mov
mov
in
xchg
xchg
daa
repz
dec
or
xor
jb
adc
pop
dec
sub
xor
inc
push
dec
daa
scas
leave
push
cvtpi2ps
je
mov
or
fs
xchg
mov
rol
int3
add
add
loop
in
pop
clc
or
add
xchg
and
push
or
or
cmp
enter
push
inc
(bad)
adc
inc
mov
adc
jno
jl
in
xchg
adc
adc
inc
mov
test
mov
mov
enter
sbb
sbb
cmp
pop
hlt
and
and
add
enter
or
adc
sbb
sbb
jb
and
sub
xor
cmp
xchg
and
inc
sub
sub
jb
enter
cs
xor
inc
mov
xor
jb
enter
xor
in
sbb
fstp
jecxz
cmp
xchg
push
dec
or
push
sbb
and
sbb
add
add
inc
jb
enter
push
pop
pop
push
cmp
jle
mov
xchg
or
enter
or
mov
jb
adc
adc
adc
adc
xchg
and
adc
adc
cmp
or
sbb
sbb
sbb
sbb
push
push
pop
pop
and
and
sbb
and
xchg
jb
enter
es
daa
cmps
sub
sbb
scas
sub
sub
enter
sub
mov
repz
xor
or
adc
enter
pop
xor
xor
jb
inc
aaa
dec
cmp
popa
cmp
pop
lea
test
cmp
cmp
cmp
cmp
into
into
into
into
cmp
cmp
into
iret
iret
iret
cmp
cmp
iret
iret
iret
iret
cmp
cmp
iret
iret
iret
iret
cmp
cmp
iret
iret
iret
iret
mov
cmp
iret
iret
mov
and
retf
iret
ror
fistp
jb
iret
jecxz
jmp
repz
sti
xchg
and
rol
ror
rcl
cmp
enter
and
sub
ss
pushf
mov
inc
rcl
rcr
rcl
in
mov
ror
mov
in
push
mov
mov
call
test
rol
add
and
rcr
iret
or
dec
rol
dec
rcl
leave
leave
leave
shl
ja
cmp
in
lea
sets
mov
inc
mov
or
or
or
xchg
push
in
lock
adc
sbb
rol
adc
adc
daa
adc
xor
cmp
sbb
jb
sbb
imul
and
sbb
sbb
jb
mov
and
and
and
and
in
in
daa
clc
sub
add
push
sub
inc
mov
sub
das
sub
xchg
cs
das
push
xor
inc
mov
data16
jl
xchg
xchg
ss
aaa
test
mov
jb
cmp
cmp
xchg
and
cmp
sbb
jb
aam
inc
or
inc
and
and
sub
aaa
inc
inc
inc
cmp
enter
dec
arpl
dec
and
sbb
dec
test
call
dec
mov
mov
cmp
push
rcl
push
out
in
xchg
and
push
std
push
aad
pop
mov
jb
pop
push
pop
sub
pop
enter
aas
pop
dec
pop
push
pop
sbb
jb
pusha
pusha
imul
and
fs
mov
enter
push
and
sbb
imul
out
ins
cli
jb
enter
add
jno
mov
es
jae
je
jne
enter
jbe
ja
js
sbb
jb
jns
jp
jnp
jl
xchg
and
jge
jle
jg
cmp
rol
adc
test
xchg
mov
mov
mov
inc
mov
mov
lea
in
xchg
mov
jo
jnp
inc
mov
xchg
cmps
xchg
in
xchg
and
cwde
mov
jb
cdq
ficomp
enter
call
lahf
sbb
jb
and
inc
mov
dec
movs
push
movs
bound
ins
cmps
js
sub
sbb
stos
movs
lods
scas
lods
mov
scas
lds
pop
mov
out
icebp
mov
mov
pop
mov
enter
mov
mov
mov
xor
push
mov
pop
mov
sbb
jb
add
rcl
inc
mov
cmp
enter
enter
retf
mov
add
bswap
sbb
enter
iret
xor
cmp
inc
mov
inc
rcl
pop
aam
aad
enter
(bad)
jge
mov
mov
jb
fstp
fmul
xchg
and
(bad)
(bad)
fistp
in
loopne
loope
loop
add
xchg
and
or
pop
in
out
jb
enter
call
and
sbb
jmp
in
outs
in
jp
in
xchg
out
test
nop
lock
icebp
inc
mov
cmps
repnz
mov
enter
neg
imul
clc
mov
repz
(bad)
cli
fadd
sti
push
cld
enter
push
std
push
(bad)
call
repnz
add
add
xchg
and
dec
add
add
in
popw
outs
or
or
mov
xchg
or
or
xchg
push
mov
adc
sbb
fst
in
out
adc
adc
fld
sbb
sbb
sbb
inc
sbb
xchg
and
sbb
sbb
jb
jae
jle
mov
xchg
and
and
and
in
shl
sub
sub
sub
pop
mov
sub
sub
add
xchg
sbb
and
xor
sbb
cmp
inc
xor
pop
xor
gs
jnp
mov
jb
cmp
cmp
xchg
and
cmp
sbb
jb
rol
inc
jmp
and
inc
inc
adc
enter
dec
ss
inc
dec
and
sbb
dec
push
dec
bound
jb
enter
dec
adc
inc
mov
cdq
push
movs
push
scas
push
mov
and
push
rcl
pop
mov
pop
icebp
pop
cld
pop
loopne
pop
enter
adc
pop
sub
ds
xor
outs
bound
mov
jns
jns
loopne
loopne
loopne
jns
jns
loopne
loopne
loopne
loopne
jns
jns
loopne
loopne
loopne
loopne
jns
jns
loopne
loopne
loopne
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loope
loope
jns
jns
loope
loope
loop
loop
jns
jns
loop
loop
loop
loop
xor
jns
dec
loop
loop
and
outs
jle
xchg
pusha
mov
loop
mov
mov
jecxz
mov
mov
jecxz
mov
mov
jecxz
pop
mov
jecxz
pop
pop
pop
pop
in
in
in
in
pop
pop
pop
pop
in
in
in
in
pop
pop
pop
pop
in
in
in
in
pop
pop
pop
pop
in
in
in
in
pop
pop
pop
pop
in
in
in
in
mov
in
enter
push
out
icebp
cmp
cmp
pop
cmp
cmp
and
aas
xor
inc
sbb
jb
dec
inc
push
inc
pop
inc
push
lock
sbb
sub
sbb
add
add
or
add
sub
test
xchg
lock
les
in
popa
pop
fisubr
aas
inc
push
inc
inc
data16
mov
cmc
dec
addr16
aaa
push
adc
repnz
inc
je
inc
push
dec
aas
and
xor
movups
mov
jbe
leave
aaa
ins
aas
xlat
fidiv
pop
sub
push
fisubr
test
sbb
fsub
mov
aas
pop
sbb
adc
inc
add
xchg
add
lock
das
inc
and
and
test
dec
mov
shl
inc
xchg
or
add
pop
out
ss
push
push
cmc
mov
into
idiv
imul
jb
enter
or
and
or
and
cmp
nop
mov
sbb
jo
jbe
pop
mov
bswap
add
in
adc
sbb
enter
loope
push
cwde
sbb
push
bound
arpl
or
xchg
shl
movs
and
inc
push
in
adc
xor
inc
lahf
push
sbb
add
xchg
add
int3
mov
xor
popa
imul
xchg
aas
test
inc
jbe
dec
xchg
jle
jae
cmc
pop
popa
sub
aas
in
cwde
pusha
xchg
(bad)
dec
outs
fcom
and
cmps
xor
or
or
pop
push
inc
add
dec
adc
add
and
add
push
cmp
bt
addr16
push
pusha
nop
pusha
inc
jg
sub
outs
or
push
pop
pop
add
pop
test
or
mov
adc
dec
mov
mov
push
xor
push
mov
inc
mov
add
mov
pop
(bad)
adc
mov
inc
ret
or
sub
xchg
inc
shr
lahf
jg
in
fwait
sbb
push
pop
mov
or
pop
jmp
push
js
ja
jbe
je
sahf
out
jae
jno
outs
out
sahf
out
ins
ins
imul
jns
imul
sti
or
or
sbb
dec
pop
iret
repz
jo
mov
out
sbb
sbb
pop
jo
and
mov
dec
out
inc
cmp
out
mov
cdq
in
aas
jmp
xchg
in
dec
dec
pop
inc
inc
pop
pop
dec
jo
sar
push
dec
dec
dec
inc
dec
push
pop
push
push
sub
jae
jg
gs
or
sbb
std
push
lock
sbb
add
add
aam
push
cmp
add
dec
pop
sub
popf
push
xchg
fcmovb
mov
movs
or
sub
ja
inc
push
sbb
bound
psllw
dec
mov
mov
nop
push
loopne
pop
addr16
add
outs
push
ins
rol
dec
add
add
pop
inc
mov
jg
pop
push
xchg
test
add
dec
pushf
xchg
xor
call
imul
loop
lea
and
xchg
push
adc
outs
out
sub
or
ja
(bad)
test
das
mov
cmp
fild
mov
cmps
add
add
aam
sbb
mov
jnp
movs
inc
aaa
push
scas
mov
retf
cmovns
sub
mov
ret
pop
xchg
loopne
sbb
xchg
scas
cmp
mov
and
pop
push
sbb
mov
mov
mov
lods
mov
and
inc
inc
inc
pop
iret
sub
adc
inc
push
and
mov
push
test
mov
push
inc
inc
xor
jg
mov
dec
lahf
dec
in
adc
pushf
xor
or
sar
push
mov
add
scas
add
movs
out
in
in
lea
(bad)
xor
sbb
or
jo
push
dec
pop
dec
les
adc
mov
adc
das
lea
fs
pop
sub
(bad)
fnstcw
arpl
add
push
cmp
xchg
test
rcl
ins
cmp
or
cli
bound
mov
fcmovnbe
dec
outs
push
adc
imul
push
or
push
shl
push
and
cmps
pop
and
imul
xchg
pop
bound
mov
and
pop
push
lahf
or
fcomi
ins
(bad)
fist
mov
pusha
stos
fwait
push
fiadd
jbe
out
call
add
jo
adc
ja
push
inc
clc
ret
clc
mov
add
pop
loope
or
jg
nop
sbb
cmp
imul
push
lahf
mov
push
imul
fadd
and
fimul
call
and
mov
arpl
pop
sbb
pusha
shr
scas
shl
pop
add
data16
inc
inc
pop
ss
(bad)
pop
ins
push
jno
inc
outs
addr16
dec
lds
sub
adc
or
dec
(bad)
mov
movs
push
lock
outs
lods
jmp
out
sbb
call
dec
rcr
getsec
inc
inc
inc
retf
sub
mov
pop
xor
mov
aaa
push
sbb
xor
push
fcomp
fbld
maxps
call
les
jo
dec
imul
sub
stc
inc
lea
push
fisttp
aaa
das
mov
adc
pop
lock
stos
test
aaa
adc
push
cmp
and
push
loopne
pop
xor
sub
dec
ja
push
cmc
inc
xor
xor
pop
lds
loope
fiadd
cmp
les
jns
push
sbb
add
ins
xor
xchg
and
mov
adc
pop
cmp
pusha
pop
adc
push
mov
arpl
or
lods
inc
imul
dec
or
and
and
gs
les
inc
inc
imul
fsubr
push
sub
jg
mov
sub
push
inc
bound
daa
inc
cld
push
add
push
dec
push
dec
inc
pop
pop
fild
add
inc
ins
(bad)
ficomp
xchg
iret
aas
ja
inc
cdq
sbb
sbb
dec
aas
xchg
rol
and
aas
add
inc
inc
xchg
and
shr
rol
inc
addr16
dec
dec
dec
push
or
nop
adc
adc
popf
pusha
popa
and
dec
push
sahf
jmp
adc
add
inc
push
and
push
cli
or
ds
push
arpl
add
mov
or
pop
jmp
stc
pop
inc
push
add
popa
push
(bad)
fiadd
mov
dec
outs
push
pop
xor
adc
pusha
pop
push
cdq
(bad)
pop
jo
es
dec
dec
dec
inc
inc
pop
inc
dec
inc
dec
push
sahf
push
mov
lods
adc
or
dec
bound
mov
scas
mov
cwde
and
sbb
dec
xchg
mul
lahf
pop
test
adc
movs
in
enter
mov
aas
pop
mov
dec
mov
imul
inc
xor
bound
inc
scas
(bad)
jo
inc
inc
rcl
leave
sbb
add
shl
xchg
into
fild
dec
mov
adc
fwait
and
push
and
xor
mov
cmps
addr16
fimul
dec
push
add
call
sub
sub
and
inc
lods
dec
add
dec
stos
in
inc
push
stos
push
shl
cmp
pop
sbb
mov
enter
mov
adc
xchg
xchg
sbb
arpl
or
mov
xor
dec
pusha
test
xor
(bad)
mov
add
cmp
cld
lock
enter
cmps
ss
hlt
mov
je
cld
repz
ins
push
inc
or
cmp
pop
push
dec
cmp
sbb
sahf
out
ss
cld
call
sahf
out
xchg
jo
xor
repz
mov
clc
loopne
mov
shl
aaa
add
pop
push
push
and
dec
cmp
add
inc
(bad)
lods
add
jp
sub
aas
xor
push
dec
dec
(bad)
jle
dec
popf
xor
cmp
and
fdiv
aaa
xlat
add
(bad)
mov
dec
or
push
adc
ffreep
push
inc
(bad)
leave
add
ins
pop
dec
adc
inc
push
or
xchg
mov
sub
fadd
adc
lds
xor
stos
fld
leave
inc
jne
pusha
not
xchg
sub
inc
dec
sbb
(bad)
adc
movs
dec
stos
dec
xchg
lods
jl
xchg
add
jg
cmps
and
and
addr16
dec
lock
lahf
xchg
dec
mov
test
arpl
outs
or
das
or
pop
pop
pop
jmp
outs
mov
jmp
dec
push
mov
stos
dec
push
aas
sbb
sbb
jg
jae
fiadd
adc
xor
(bad)
call
sar
pop
adc
(bad)
pushf
es
push
jmp
adc
push
out
cld
and
push
call
sub
cld
call
xchg
add
pop
pop
test
pop
push
jmp
loope
hlt
jnp
inc
into
pop
xchg
cmp
push
jl
in
daa
pop
mov
mov
movs
daa
popf
bound
and
test
inc
mov
inc
bound
leave
out
sub
push
mov
test
xor
xor
daa
push
fdivp
lods
sub
mov
xchg
outs
test
loop
das
dec
fimul
xor
icebp
(bad)
scas
arpl
test
pop
mov
sbb
dec
xchg
mov
mov
pop
pop
pop
sbb
and
test
out
cwde
mov
cmp
sbb
aas
icebp
dec
pop
or
jo
mov
test
add
(bad)
push
aas
mov
pop
or
aaa
mov
xor
(bad)
xlat
push
sbb
xor
inc
test
inc
je
dec
xchg
dec
sbb
jbe
popf
or
jo
xchg
neg
sub
push
emms
cmp
cmp
sbb
cmp
iret
sbb
mov
cmps
pop
(bad)
xlat
xchg
and
jmp
std
or
inc
lahf
cld
sub
inc
sub
xchg
fwait
cmp
cmp
add
sbb
loopne
mov
dec
sbb
loopne
addr16
mov
mov
inc
(bad)
call
xlat
push
and
aaa
loope
es
sbb
sbb
jae
cmp
xchg
fimul
dec
pop
nop
test
je
call
cmp
push
pop
shl
mov
sub
pop
iret
inc
pop
or
fsub
cmps
outs
(bad)
and
popa
pop
movaps
xor
push
pop
push
mov
mov
xchg
scas
adc
mov
push
fs
xlat
test
stos
(bad)
int3
xlat
out
inc
pop
mov
outs
jne
fadd
(bad)
adc
ret
pop
aas
(bad)
ror
(bad)
stc
daa
bound
xor
xor
xchg
inc
ins
test
ins
push
je
aas
xor
movs
push
fist
enter
aas
sub
mov
adc
and
dec
mov
mov
mov
nop
dec
cmps
xchg
pop
or
mov
dec
and
sub
pop
test
inc
mov
movs
cwde
xlat
inc
aas
sub
sbb
push
cwde
sbb
push
inc
in
xchg
(bad)
jne
push
aam
aas
jae
add
pop
mov
ds
addr16
int
xor
push
add
sbb
pop
inc
bound
pop
lock
pop
push
add
sbb
jmp
or
fild
movs
push
add
pop
add
sbb
push
inc
pop
out
xchg
shl
test
xlat
sub
loope
shr
test
add
inc
adc
movs
les
dec
xlat
inc
ins
cmp
push
test
sbb
sbb
cmps
lods
ss
lock
dec
dec
lods
and
add
test
adc
inc
sub
ja
adc
mov
shl
les
scas
cmps
(bad)
test
pop
cs
out
(bad)
dec
sub
test
sbb
pusha
stos
sub
lea
call
sub
inc
dec
sbb
ds
pop
jg
test
sbb
sub
push
fcompp
std
pusha
cmps
mov
add
nop
xchg
movs
push
xor
test
jbe
push
rol
mov
and
push
add
aas
repnz
jge
test
sbb
pop
mov
dec
adc
sbb
(bad)
sbb
jns
call
dec
test
push
push
inc
xchg
lods
scas
dec
call
es
mov
sbb
in
mov
or
out
int3
push
adc
test
or
(bad)
adc
mov
inc
cmps
inc
(bad)
jecxz
and
hlt
pop
sbb
gs
dec
push
lods
push
lds
std
scas
inc
loop
pcmpeqw
jns
das
mov
xor
mov
cld
ja
push
pop
jns
(bad)
enter
outs
pop
dec
cmps
xor
xchg
nop
xchg
cmp
adc
or
push
aad
inc
imul
sub
pop
lock
lods
dec
cwde
add
arpl
loop
adc
lods
or
outs
cmps
movs
push
and
xchg
add
mov
pop
mov
cmp
and
mov
inc
push
aad
and
push
ret
xor
mov
push
and
hlt
dec
pop
mov
sub
imul
ret
or
xor
out
loop
or
push
adc
xor
and
dec
sbb
in
dec
rcr
dec
mov
clc
add
cs
xor
or
or
ins
or
addr16
inc
and
rol
adc
pusha
or
leave
test
adc
fwait
add
loopne
jb
push
mov
add
push
rol
cld
jp
lea
xchg
jl
imul
test
xchg
pop
xor
sub
and
ror
cmp
ficom
aaa
and
out
xchg
or
or
pop
or
mov
and
pop
xlat
add
jp
(bad)
cli
dec
mov
lods
push
mov
out
test
mov
call
push
push
test
ja
push
push
imul
adc
dec
aaa
xchg
hlt
add
dec
inc
jge
aas
in
xchg
outs
xchg
call
pop
jno
fistp
loop
xchg
out
dec
dec
push
push
inc
add
test
in
loope
sar
loopne
aam
sahf
int
mov
nop
fnstsw
xor
iret
repz
push
(bad)
data16
(bad)
push
sahf
out
fisubr
push
cmp
out
and
push
cld
fadd
repz
repz
pusha
dec
inc
out
sahf
add
add
add
lock
aam
movs
or
mov
sahf
out
je
cmp
add
iret
repz
int3
movs
js
pop
dec
sahf
addr16
or
clc
in
out
stc
out
jns
test
fiadd
cwde
and
cmp
inc
pop
push
inc
neg
add
aam
push
push
sahf
imul
movs
and
push
cmp
out
xor
add
fdivr
mov
cmps
sbb
xchg
push
test
add
jns
out
fs
inc
xor
dec
jl
lods
adc
in
add
out
sbb
mul
fidiv
cwde
push
mov
clc
inc
pop
and
dec
inc
dec
inc
inc
dec
push
sbb
inc
aas
push
aaa
pusha
lods
(bad)
xlat
inc
fbld
je
xchg
aas
mov
cmps
sbb
inc
dec
or
scas
inc
sbb
dec
mov
repz
push
pop
mov
lea
mov
iret
repz
(bad)
fstp
push
sub
iret
nop
cs
or
sub
push
xchg
mov
movlps
aaa
xor
and
push
loope
mov
das
add
dec
inc
inc
xor
jmp
jge
or
and
mov
xchg
push
out
arpl
rcl
bound
cmps
add
pusha
inc
sub
add
in
inc
inc
dec
iret
ffreep
inc
lods
data16
out
std
push
xchg
test
add
pop
jns
and
xor
pop
xor
enter
les
mov
adc
popa
mov
addr16
dec
(bad)
xlat
push
ins
push
xchg
call
and
pop
sub
cmp
ror
add
shr
aaa
cmp
xchg
sbb
cmp
ins
shl
scas
cmp
adc
mov
mov
test
dec
dec
dec
adc
les
inc
dec
push
sub
push
add
and
push
aaa
mov
outs
inc
pop
aaa
and
dec
pop
inc
pop
leave
inc
test
cmp
outs
push
adc
enter
pop
scas
mov
jns
or
dec
jg
add
ret
leave
jg
call
pop
push
push
dec
push
push
inc
inc
inc
inc
dec
dec
push
adc
mov
sub
push
xchg
mov
addr16
inc
and
ds
dec
add
aaa
push
imul
push
lahf
push
add
jno
(bad)
sbb
in
test
or
push
pop
imul
inc
in
sub
cmps
(bad)
add
or
and
iret
in
xchg
pop
xchg
add
add
cmp
repz
or
leave
leave
repz
or
aaa
(bad)
xchg
or
adc
leave
mov
das
and
pop
inc
inc
push
addr16
das
mov
in
jbe
xorps
ins
leave
repz
push
and
jb
in
sbb
pop
and
cmp
out
xchg
add
dec
dec
mov
or
into
aas
xlat
sbb
data16
repz
xor
jl
repz
jg
pop
inc
add
mov
movs
and
ds
mov
dec
push
fiadd
dec
push
and
or
jp
add
push
ins
dec
jnp
ror
pop
pop
push
push
cs
pop
and
mov
adc
and
bound
mov
push
mov
aad
add
inc
cmps
cmp
adc
(bad)
pusha
add
add
movs
add
cmp
cmps
fisttp
mov
movs
sbb
cmp
mov
dec
inc
out
in
jbe
pop
inc
mov
iret
mov
in
sbb
in
call
adc
aas
and
pop
fidivr
xor
fcomp
loopne
loopne
mov
jle
inc
sahf
out
cmp
mov
mov
test
jns
out
mov
iret
repz
fs
push
push
cmp
repz
dec
inc
inc
cmp
cmp
repz
sub
cmp
cmp
and
add
cld
push
iret
repz
hlt
in
loopne
int3
sar
repz
mov
add
scas
movs
sbb
test
jl
repz
rep
fs
push
inc
out
cmp
xor
adc
in
sahf
out
sahf
fcom
enter
repz
out
test
cwde
nop
pop
mov
repz
cmp
dec
cmp
out
daa
xor
and
add
cmp
repz
enter
and
add
push
cmp
loop
mov
enter
cmps
out
mov
aaa
lock
das
adc
mov
xchg
(bad)
add
aas
rcl
mov
lahf
add
jmp
dec
push
mov
jo
inc
in
f2xm1
icebp
das
push
push
push
fist
push
mov
pop
aam
cmp
push
jo
inc
or
(bad)
hlt
pop
gs
jae
shr
xchg
and
inc
iret
pop
lock
push
dec
iret
repz
pop
push
js
mov
repz
out
adc
xor
cmp
xrelease
push
pop
ja
mov
call
das
dec
xchg
stos
sbb
ins
add
add
mov
aam
dec
(bad)
call
mov
daa
fs
lods
sbb
pop
jge
adc
lock
aas
in
in
enter
setl
mov
aas
call
in
in
loopne
das
jo
(bad)
and
pushf
popf
sbb
adc
je
and
mov
adc
enter
mov
pop
mov
lods
and
cmp
mov
push
(bad)
jmp
inc
jg
xor
repnz
add
and
push
xchg
out
cs
test
jbe
shl
add
sbb
cmp
and
cli
nop
psubw
push
ret
(bad)
enter
hlt
adc
mov
repnz
add
leave
sbb
into
sbb
ror
and
sahf
mov
(bad)
(bad)
(bad)
jmp
test
lds
std
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
push
(bad)
(bad)
mov
adc
mov
dec
js
inc
outs
(bad)
loopne
jmp
(bad)
inc
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
(bad)
jmp
int3
repnz
test
pop
stos
clc
scas
adc
(bad)
(bad)
mov
repz
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
cmp
jne
leave
dec
dec
pop
inc
in
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
(bad)
(bad)
jmp
push
movs
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
inc
push
hlt
inc
xchg
and
mov
add
int3
add
aas
jno
(bad)
jmp
imul
aas
pop
fs
dec
lea
aas
ret
shr
(bad)
call
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
mov
xchg
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
(bad)
(bad)
dec
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
fbld
mov
mov
popa
push
pop
sar
jl
mov
(bad)
(bad)
out
das
lea
mov
inc
inc
aas
movs
jmp
jg
sub
jge
mov
push
inc
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
(bad)
(bad)
jmp
add
add
xlat
cmp
mov
sbb
add
mov
(bad)
call
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
mov
cmps
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
(bad)
push
sahf
out
pop
push
xchg
cmp
push
and
dec
dec
gs
std
or
pop
ficomp
into
ror
add
cmps
fmul
xchg
es
mov
data16
cmp
jmp
sub
or
add
mov
pop
fimul
and
in
add
imul
arpl
fld
pop
inc
(bad)
jg
jne
pop
outs
pop
jb
outs
addr16
push
adc
adc
or
inc
push
mov
pop
push
dec
pop
mov
mov
adc
sahf
out
cmps
movs
push
cwde
fmul
push
cld
xchg
add
lock
mov
push
push
inc
push
sub
pop
mov
xlat
or
cli
test
jns
arpl
xchg
or
imul
xor
test
mov
dec
or
dec
sub
sub
test
test
dec
cdq
xor
ja
cs
stos
dec
fs
and
push
push
or
lock
es
push
push
inc
inc
cs
sahf
out
fisub
xor
cmp
rep
movs
in
mov
iret
repz
dec
cmp
out
cmp
sbb
add
sahf
sar
ss
repz
adc
mov
jns
aam
push
mov
cmp
cs
sub
push
data16
push
xchg
push
push
cwde
xor
mov
arpl
out
gs
rcl
jnp
das
mov
and
or
into
adc
aas
add
cmp
or
or
out
push
mov
test
stos
lea
test
lahf
inc
(bad)
in
ins
sub
xor
sbb
or
and
inc
mov
inc
adc
test
fbstp
aas
or
sub
ret
dec
xor
test
pop
ins
daa
mov
das
ins
outs
adc
shl
das
inc
or
lahf
or
sub
call
inc
push
add
fwait
int
mov
add
mov
xor
sti
mov
xor
test
int
add
xor
sbb
push
adc
sub
movhps
adc
imul
lahf
inc
das
and
nop
call
mov
inc
cmps
pop
pop
push
or
pop
push
loopne
adc
mov
mov
pop
lods
sub
popa
fs
mov
add
call
arpl
inc
inc
inc
dec
push
dec
int
(bad)
ds
cmp
push
test
pop
loopne
test
and
aas
mov
sub
push
idiv
mov
add
add
shr
pop
je
sub
data16
jne
xchg
add
jne
(bad)
in
push
ja
lock
icebp
adc
bound
xor
(bad)
cmp
add
and
ss
xor
aas
push
in
adc
mov
and
sub
xchg
jmp
ins
push
(bad)
sbb
jne
call
dec
cdq
aaa
lahf
lds
shr
mov
out
jo
je
js
inc
dec
aas
pop
inc
cmp
outs
lods
adc
jecxz
pop
jmp
imul
icebp
xchg
mov
hlt
xchg
cmp
add
pop
push
fild
lods
lea
mov
cmps
lahf
dec
mov
mov
xor
ret
dec
sbb
mov
inc
inc
push
inc
pop
sbb
and
dec
movs
push
jo
out
inc
jo
sub
push
dec
push
inc
inc
inc
jge
xchg
(bad)
mov
mov
sbb
stc
out
ins
into
aam
xor
outs
ins
icebp
dec
aam
loope
mov
stos
or
push
jb
jg
sub
dec
fwait
nop
dec
mov
push
rol
xor
mov
pop
dec
dec
push
dec
inc
pop
xor
test
inc
cmps
pop
pop
test
cmps
add
or
aaa
xor
mov
add
xor
push
inc
sti
aam
push
cmps
push
bound
(bad)
shr
aaa
push
mov
add
sub
shl
and
push
add
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
adc
adc
nop
inc
add
add
sub
inc
add
fs
add
nop
push
add
add
xor
inc
add
add
add
and
add
out
mov
inc
inc
push
dec
inc
dec
adc
push
mov
leave
push
inc
outs
fs
push
ret
add
or
cmp
pop
mov
cwde
bound
(bad)
ss
inc
jg
fs
rcl
gs
ss
push
imul
jecxz
(bad)
jle
or
adc
cmp
cs
jne
pusha
sbb
loope
pop
sub
fistp
add
inc
popa
sub
lods
fstp
jg
xchg
jo
push
adc
daa
or
pop
adc
data16
inc
outs
jmp
dec
sbb
ins
bound
ror
cmp
mov
inc
inc
xor
ret
inc
jo
xor
outs
mov
outs
sbb
mov
addr16
inc
pushf
sbb
push
sub
inc
xor
repnz
popa
sbb
sub
outs
push
and
jae
add
popa
lods
popa
inc
sub
hlt
add
mov
dec
pop
add
jecxz
xchg
sbb
sub
ins
dec
inc
dec
mov
outs
push
ret
shl
outs
ret
push
(bad)
dec
ins
shr
outs
popfw
imul
cs
pop
cmp
fidiv
outs
jo
ret
lock
dec
shr
dec
and
pop
pop
es
cmp
stos
mov
arpl
inc
lea
add
sar
dec
into
imul
sbb
inc
pop
stos
jae
pop
ret
fldcw
inc
push
adc
jo
movs
push
jae
cmp
pop
sbb
int3
outs
pushf
xor
xchg
mov
adc
shr
dec
pop
dec
jb
outs
push
inc
gs
nop
xor
gs
pop
sbb
repz
and
mov
xor
jno
jbe
inc
mov
mov
fild
mov
std
pop
fwait
call
jb
jns
push
jne
and
push
push
sub
jb
clc
push
lahf
sbb
sbb
jae
push
repz
rcr
xchg
mov
xchg
mov
popa
pop
jnp
sbb
jne
sbb
sbb
ret
and
jne
stos
jmp
je
mov
xor
fnstenv
add
pop
dec
push
inc
push
mov
adc
scas
mov
inc
mov
or
mov
ror
sub
dec
inc
ja
and
aad
mov
jmp
out
push
lds
je
dec
mov
bound
retf
add
jecxz
adc
dec
mov
rol
mov
mov
ins
xchg
pop
xor
ja
rol
cmp
or
out
sub
or
xchg
adc
mov
jae
popf
inc
dec
cmps
mov
push
pop
lods
jmp
fsubr
xor
mov
xor
push
or
outs
cwde
sbb
inc
fs
mov
sbb
dec
adc
jae
adc
lods
jae
loopne
(bad)
sti
ins
jo
int
inc
lods
cmp
mov
rol
inc
lds
xor
inc
icebp
sub
pop
aad
push
inc
dec
sub
cmp
lods
cmp
xor
imul
mov
fs
add
fnstenv
fwait
xchg
jno
adc
xchg
loope
inc
dec
ins
sbb
pop
out
je
jo
fs
test
aaa
nop
imul
int
ror
pop
adc
bound
sbb
je
rcl
adc
aad
cmc
inc
xchg
dec
mov
(bad)
retf
inc
mov
enter
pop
mov
cmps
mov
lods
dec
jbe
jne
pop
stos
sbb
fsub
lods
add
std
mov
lahf
dec
das
pop
lds
jl
sbb
imul
out
dec
xchg
pop
ror
push
mov
jb
inc
inc
inc
stos
or
fwait
loopne
xor
arpl
push
data16
inc
pop
ins
loopne
mov
adc
jae
popa
daa
ret
int
pop
and
popa
scas
cmp
leave
cdq
scas
ret
adc
sbb
ins
push
(bad)
cwde
sbb
bound
sbb
add
xchg
fcomi
pusha
jae
mov
pushf
adc
cmp
mov
inc
dec
sbb
inc
pop
mov
xchg
ins
push
push
cmp
mov
pop
lds
or
sub
jl
popa
push
(bad)
cmp
xor
sub
sbb
xor
jnp
or
ja
sbb
jns
js
jo
sti
jne
sti
(bad)
dec
ror
inc
ss
add
cs
les
pushf
jb
lds
ins
and
and
mov
inc
fdiv
sub
inc
ins
cs
and
fcomp
adc
adc
sbb
xchg
push
sbb
pop
push
xchg
and
mov
in
dec
and
xor
popa
sbb
mov
cmp
xchg
sub
mov
adc
call
sbb
popa
ror
or
add
test
imul
enter
add
pusha
push
xchg
test
rcl
mov
mov
mov
push
sahf
mov
add
add
cwde
imul
test
ins
dec
inc
push
cmp
pop
mov
xor
inc
retf
xor
push
mov
(bad)
jno
or
push
sbb
xor
stc
push
jb
push
push
xor
neg
call
imul
repz
js
xor
sahf
mov
inc
js
mov
pop
and
fmul
mov
jb
ins
ins
mov
or
data16
dec
sbb
mov
inc
js
data16
(bad)
(bad)
push
fstp
xchg
and
ror
sub
(bad)
push
addr16
test
test
inc
outs
jecxz
and
stos
daa
inc
outs
aaa
add
sbb
push
stos
imul
shl
or
xchg
std
je
ror
push
push
push
jo
aaa
adc
mov
ret
inc
ins
je
dec
mov
add
das
mov
mov
xor
rol
pop
inc
out
inc
jo
mov
out
test
jo
fs
inc
imul
fcom
xchg
pop
nop
loope
outs
mov
js
(bad)
cld
pop
loope
loopne
ss
inc
push
dec
push
mov
mov
push
jnp
mov
mov
mov
mov
das
ins
adc
and
imul
sub
outs
imul
inc
(bad)
cdq
sbb
sbb
cmps
out
in
cmp
cdq
mov
pcmpeqw
add
adc
jp
cmps
cmps
xchg
adc
mov
ins
mov
imul
movs
(bad)
adc
jo
xor
dec
je
cmp
add
push
pop
xchg
push
pop
out
test
nop
and
push
adc
xchg
sbb
popf
sbb
adc
mov
imul
movs
(bad)
xor
mov
inc
dec
cmc
fldenv
cmp
dec
jo
or
adc
and
pushf
data16
dec
mov
adc
jae
mov
push
jecxz
dec
ins
jne
and
cmp
push
js
lahf
and
mov
xchg
dec
or
push
ret
call
mov
or
and
ret
cmp
aad
fimul
dec
sbb
inc
push
mov
mov
test
fs
retf
ret
push
loope
cmp
loope
push
jnp
pushw
xlat
hlt
repnz
or
pop
jae
daa
sbb
loopne
mov
jo
adc
movs
int3
sbb
jge
inc
sbb
mov
dec
lock
ja
jecxz
ret
pusha
add
jae
dec
daa
inc
fild
outs
xor
cwde
xchg
add
sbb
rcl
pop
xor
xor
mov
dec
gs
push
push
sbb
push
or
or
div
pop
test
dec
out
shl
dec
es
stos
push
push
inc
js
pminub
adc
arpl
daa
test
sbb
inc
dec
push
dec
inc
push
rcl
push
jno
xor
dec
xor
loope
outs
mov
push
out
sbb
dec
sar
aam
in
push
imul
xor
or
popa
adc
loopne
bound
or
lods
adc
dec
dec
sti
dec
js
test
push
and
sub
jbe
lods
xchg
add
mov
push
adc
enter
jbe
das
pop
popa
ins
adc
pop
or
imul
ret
sub
dec
push
dec
inc
cmp
addr16
jnp
call
pop
test
stos
jae
fadd
sbb
dec
outs
dec
jae
lods
fs
sahf
mov
jnp
cmp
movs
mov
xor
xor
sbb
push
sub
iret
test
(bad)
es
pop
xor
lods
xor
pop
cmps
mov
add
or
movs
int
iret
adc
jno
mov
and
cmp
inc
adc
sub
loope
or
pop
push
loope
pop
fimul
and
lock
sbb
nop
bound
fwait
movs
mov
sub
daa
outs
rol
stc
pop
push
out
sbb
sbb
adc
test
test
outs
jns
scas
imul
test
rol
out
adc
sbb
aaa
addr16
imul
imul
or
mov
imul
imul
imul
inc
or
pop
xchg
test
push
dec
pop
push
mov
or
cmp
xor
cmp
mov
rol
mov
xor
dec
push
jo
inc
popa
movs
and
mov
pop
pop
cmp
sub
push
pushf
je
mov
lock
cmp
fisubr
rcr
dec
xor
pop
addr16
sbb
mov
push
push
and
mov
pop
sub
sbb
ss
out
inc
pop
dec
aaa
or
push
(bad)
imul
mov
push
loop
sub
pop
call
push
pop
retf
and
mov
xor
pop
cmps
adc
jb
gs
mov
adc
jo
push
outs
pusha
mov
aam
dec
inc
pop
pop
sbb
cmp
or
scas
pop
mov
cdq
mov
push
or
inc
lahf
jbe
push
cmp
rcl
push
pop
sbb
cmc
adc
sub
mov
inc
inc
ins
jnp
dec
dec
rcr
inc
pop
repz
xchg
movs
jae
or
and
imul
jo
cmp
cmc
nop
or
add
push
cmp
adc
xchg
outs
and
sub
arpl
xor
mov
les
ja
fs
adc
rcr
das
xor
sbb
gs
ja
dec
lock
inc
gs
push
inc
inc
push
sbb
loopne
dec
pop
mov
outs
pop
cmp
push
mov
sub
and
loope
jb
mov
sbb
add
fisub
cmps
(bad)
scas
xor
dec
mov
xchg
retf
push
adc
jno
add
push
mov
or
loopne
and
(bad)
or
pop
jbe
in
mov
std
in
test
inc
pop
shr
shr
dec
sbb
mov
inc
sbb
mov
cmp
cmp
inc
cld
cmp
mov
adc
xchg
jo
adc
jae
pop
mov
mov
or
or
ret
xchg
leave
rol
add
sbb
xchg
and
jmp
or
add
push
in
loopne
mov
inc
lea
in
inc
and
mov
cmp
aam
mov
cmp
les
inc
imul
jne
ins
inc
pop
mov
mov
mov
adc
push
xlat
mov
and
ins
dec
dec
sbb
sub
aad
or
imul
pop
inc
push
inc
xchg
sub
pop
(bad)
push
dec
push
mov
hlt
mov
fisttp
and
fucomi
imul
sbb
pop
dec
arpl
ins
fsubr
mov
test
pop
xlat
stos
pushf
add
add
outs
adc
jecxz
add
ins
sbb
mov
daa
jae
imul
shr
popa
and
inc
je
xchg
inc
fs
mov
data16
add
mov
xor
nop
inc
sbb
iret
push
arpl
inc
push
mov
mov
pop
aas
ins
mov
xor
lds
mov
arpl
or
daa
gs
imul
scas
jg
dec
or
addr16
stos
jp
cmp
out
sti
mov
dec
pop
mov
sub
add
fcom
mov
push
ret
push
jge
das
dec
inc
jns
xlat
(bad)
ins
dec
push
sbb
xchg
xchg
jo
cmc
rol
ss
adc
js
cmp
xchg
mov
sbb
xchg
xor
push
push
mov
pop
jbe
mov
aaa
add
cmp
jae
outs
outs
imul
and
(bad)
es
ret
or
add
shl
jo
test
jno
nop
imul
jne
test
push
out
ja
sbb
mov
cmps
test
add
aaa
sbb
and
scas
inc
push
push
mov
sub
jo
test
sbb
push
fnsave
(bad)
(bad)
mov
sbb
inc
je
mov
pop
in
test
bound
cmp
add
inc
pop
push
jnp
sti
mov
pop
mov
sbb
ret
bound
mov
xchg
xchg
add
xlat
sbb
fs
loopne
inc
test
and
(bad)
add
pop
jb
popa
add
lea
sbb
sbb
popa
fistp
push
pusha
mov
jmp
mov
mul
cmp
xchg
je
lds
jae
outs
arpl
sub
data16
fild
fcmovu
mov
into
mov
add
ds
lock
cmc
jnp
xlat
dec
sbb
add
jg
or
add
or
xchg
push
and
sub
or
test
stos
jne
sbb
jns
mov
call
cmp
xchg
jo
je
test
test
out
push
or
fwait
pusha
in
and
push
cmp
(bad)
push
sti
pop
jne
dec
or
pop
jnp
lea
inc
mov
pop
push
cmp
cmp
(bad)
ins
push
xchg
jecxz
xchg
sub
jne
test
aaa
(bad)
(bad)
jp
outs
ja
inc
add
jmp
gs
jmp
int
les
les
aaa
inc
je
ins
dec
(bad)
fiadd
sub
jnp
test
or
mov
stos
xor
mov
in
push
dec
sbb
lods
add
xchg
adc
push
fld
push
inc
ja
lea
inc
gs
lods
add
fisub
ss
lea
ins
ror
mov
mov
fs
and
sub
arpl
jns
mov
in
sub
push
adc
sub
emms
lock
sbb
adc
push
emms
mov
inc
add
jmp
mov
add
adc
pop
sub
adc
or
push
xor
(bad)
dec
sbb
cmp
or
ja
inc
and
inc
or
pop
or
or
pop
xchg
(bad)
dec
or
or
adc
add
or
ud2
(bad)
mov
inc
or
push
or
adc
inc
lock
add
or
(bad)
xor
aaa
out
mov
pop
adc
and
sar
adc
or
adc
push
add
aad
in
(bad)
sbb
or
or
pop
pop
hlt
xor
stos
movs
or
pop
jle
or
mov
mov
movs
or
(bad)
sbb
adc
dec
or
adc
cmp
push
mov
xor
push
push
es
dec
mov
stos
scas
mov
mov
add
sahf
or
add
lock
mov
and
fistp
add
sbb
in
fmul
das
adc
dec
mov
gs
or
leave
or
or
and
std
or
sbb
pop
mov
lds
or
cld
in
fcomip
inc
dec
add
rol
ja
jne
adc
add
push
sub
clts
adc
adc
or
adc
outs
int
push
mul
and
ins
cmp
bound
add
fisttp
pop
pusha
retf
mov
popa
adc
out
ret
test
and
jbe
mov
jne
out
push
out
mov
rol
adc
adc
ins
outs
imul
lea
xlat
or
fsubr
or
jle
jmp
sbb
pop
push
(bad)
outs
pusha
xor
add
sbb
jg
cli
arpl
adc
lock
add
xor
jmp
add
push
stos
lock
push
sbb
adc
call
cmp
or
gs
jmp
xlat
or
jbe
adc
or
pop
cmp
or
adc
pcmpgtd
sti
mov
addr16
outs
ins
adc
fcomi
fist
adc
arpl
push
mov
push
push
lock
mov
or
and
mov
arpl
inc
and
add
in
lock
call
dec
jnp
fwait
add
add
add
cmc
(bad)
sub
adc
push
or
push
movntps
xchg
adc
pusha
push
add
cmc
push
and
movs
sbb
pop
pop
adc
bound
pop
mov
pop
not
das
jb
add
arpl
sub
jmp
sub
xor
mov
sbb
jo
ins
fldcw
or
mov
mov
xor
jo
add
push
jo
adc
out
in
or
xchg
mov
dec
ins
adc
add
jb
popf
xchg
or
add
and
stos
out
add
or
add
jl
add
or
pop
js
nop
neg
push
add
mov
stos
bound
mov
add
fnsave
pusha
mov
dec
clc
fbstp
add
adc
or
ins
add
pop
add
sti
inc
inc
fld
inc
inc
inc
add
xor
jns
inc
(bad)
sti
dec
mov
or
pop
or
inc
add
clc
in
(bad)
cmp
add
cmp
lock
add
xor
adc
popa
sbb
adc
inc
or
repz
or
adc
stc
and
arpl
jmp
adc
and
out
xor
lock
adc
lgs
add
imul
movs
lds
in
test
inc
sbb
xor
sub
xor
(bad)
call
pop
out
and
xor
mov
push
add
mov
push
mov
push
sub
inc
stos
adc
ret
add
push
inc
pop
push
pop
adc
ror
inc
nop
or
adc
loope
add
or
(bad)
jmp
xchg
adc
or
lods
sbb
or
outs
lock
push
adc
xor
inc
ins
add
shl
add
outs
or
push
or
add
push
inc
mov
push
test
xchg
sbb
fdivp
mov
adc
out
sbb
dec
add
sbb
mov
add
or
js
adc
(bad)
in
xchg
pop
mov
push
or
cmp
cmp
aad
test
cmp
repnz
pusha
mov
xchg
push
or
pusha
fmul
adc
adc
xchg
pop
cmp
push
adc
jo
loope
jecxz
inc
dec
or
push
aas
xor
sub
call
jmp
add
adc
adc
ds
(bad)
loope
lock
add
cmp
sub
jnp
and
in
or
(bad)
out
call
or
fs
pop
dec
sbb
push
ins
inc
bound
fisttp
iret
push
xor
ja
repz
imul
shl
sbb
inc
jbe
mov
fst
add
pusha
jo
ins
adc
(bad)
cli
add
mov
(bad)
lock
add
push
inc
aam
and
scas
dec
imul
xlat
push
mov
sbb
movs
imul
jp
bound
sbb
aaa
in
movs
push
gs
pop
add
cmp
ss
xor
sub
call
or
push
add
adc
pop
mov
mov
or
packuswb
xor
cld
sub
mov
lock
add
cmp
cmp
adc
or
mov
stos
shr
cmc
and
dec
addr16
mov
add
cmp
lock
mov
mov
mov
inc
inc
ins
jae
or
stos
inc
popf
sbb
movs
(bad)
sbb
call
mov
inc
adc
adc
ins
push
jmp
(bad)
push
adc
xchg
jl
adc
adc
ins
or
and
lahf
adc
jg
test
ins
movs
add
sub
sub
xor
shl
daa
sub
mov
or
lock
add
repz
push
push
mov
cs
or
cmps
in
xor
inc
adc
push
adc
jne
sub
push
jmp
(bad)
adc
or
or
mov
pop
inc
pop
dec
adc
idiv
and
jle
lock
ja
pop
add
data16
xor
or
mov
mov
xor
pop
fnstenv
jge
cld
xchg
fisub
lock
sbb
add
scas
push
add
repz
call
sub
popa
sbb
pop
or
test
mov
adc
pop
adc
mov
or
nop
sub
or
xor
rcl
js
(bad)
jle
add
lock
add
and
lods
pusha
(bad)
cmp
and
mov
mov
sub
fst
clc
fs
fwait
(bad)
or
scas
add
xchg
clc
cmp
lock
add
pop
pop
xchg
push
rcl
outs
int
movs
bound
push
push
push
in
add
mov
mov
add
pusha
dec
sbb
mov
pop
push
pop
push
inc
adc
sbb
call
mov
ret
aas
sbb
inc
popf
cmps
xor
xor
sub
add
mov
mov
adc
adc
int
pop
mov
and
adc
test
mov
add
hlt
or
js
cmp
popf
rcl
sub
jnp
loope
add
inc
adc
aad
mov
add
mov
fcom
cmp
rcr
jge
adc
xor
loop
iret
and
adc
rol
adc
pmulhw
in
je
fwait
inc
adc
sub
test
cmps
call
pop
add
lock
push
test
and
mov
aaa
add
and
dec
adc
lock
add
loop
sbb
xor
jno
unpckhps
adc
add
mov
mov
neg
add
call
dec
sbb
call
fwait
jle
xor
sbb
lock
sub
add
push
shl
das
cs
aaa
or
jns
pop
ret
shr
stc
adc
rol
fild
adc
aaa
movs
push
adc
inc
jle
jns
add
rcr
push
dec
(bad)
pop
add
hlt
aas
add
pop
add
inc
add
sub
lds
lock
(bad)
pop
std
out
shl
std
adc
into
adc
pop
aas
fld
add
lock
inc
lock
xor
adc
jne
lods
add
add
jmp
adc
retf
or
pushf
add
stc
pop
push
push
or
add
push
inc
aam
adc
sbb
or
scas
pop
jbe
xlat
mov
or
cmp
sub
jg
cmps
fdiv
lea
or
or
adc
test
addr16
test
push
or
lods
inc
fld
or
cli
ret
call
repnz
pop
pop
lock
lahf
aaa
lahf
lock
inc
mov
and
lock
aam
or
add
lock
add
inc
loope
dec
cwde
js
lock
inc
or
mov
in
fild
jl
adc
adc
lock
jle
sub
add
add
add
ins
or
cmp
int
cvtpi2ps
or
lods
push
test
push
xor
mov
pop
fadd
push
sbb
nop
sbb
or
pop
enter
cdq
adc
adc
mov
or
daa
jl
mov
adc
gs
or
add
push
push
xchg
xchg
mov
nop
fidiv
(bad)
and
inc
add
daa
mov
adc
adc
adc
mov
mov
imul
addr16
push
ret
mov
push
and
test
jl
xchg
lods
sub
imul
jne
retf
shl
or
lods
adc
xchg
loopne
mov
daa
(bad)
mov
mov
dec
call
or
adc
xchg
add
lock
add
cmp
lock
sbb
add
(bad)
push
cmp
ins
jb
and
adc
aaa
add
adc
pop
pop
es
fstcw
je
add
add
and
add
adc
mov
mov
sub
or
bound
xor
loope
push
push
fist
add
int3
leave
int
push
inc
xor
adc
sub
mov
test
test
or
xchg
mov
and
fcmovu
or
adc
pand
pop
(bad)
pop
in
test
or
dec
adc
cmps
sbb
aas
add
inc
push
femms
in
xchg
xchg
dec
adc
jle
lock
inc
fistp
push
retf
ret
pusha
mov
or
jae
jl
(bad)
nop
int3
jmp
push
out
pop
jbe
adc
adc
jne
and
adc
jmp
jmp
test
jnp
cmp
add
xor
mov
aas
sub
mov
or
push
jo
inc
xor
daa
sub
and
push
cmp
rcl
aad
sbb
add
mov
cmps
(bad)
cmp
and
adc
push
and
ret
adc
push
adc
sbb
gs
rep
sbb
pop
adc
imul
adc
sbb
or
inc
mov
adc
jge
fistp
push
ja
adc
adc
sbb
push
add
or
mov
mov
add
stos
xlat
or
or
cmp
push
pop
dec
mov
adc
popf
cmp
in
lods
ret
loop
shl
or
adc
pushf
out
jmp
sbb
div
lock
add
and
lock
lock
push
lock
or
ror
fxsave
lods
push
cdq
adc
mov
cs
mov
mov
jl
mov
(bad)
pop
inc
(bad)
sbb
xor
aaa
bound
mov
add
gs
push
or
movs
adc
out
sbb
adc
inc
sub
(bad)
cwde
popa
xor
mov
mov
sub
adc
(bad)
sbb
sub
push
sbb
cmps
int
ror
jnp
xor
push
in
cmp
adc
or
or
or
les
sub
pop
and
nop
lods
(bad)
out
or
sbb
or
add
cdq
cmps
push
comiss
pop
mov
mov
(bad)
ss
add
fadd
lods
adc
add
jmp
mov
xor
xor
add
add
ds
gs
adc
outs
xchg
ficomp
and
lods
inc
test
lahf
inc
inc
xor
and
jns
les
add
push
in
dec
lahf
or
adc
fst
stos
pushw
push
xor
(bad)
(bad)
dec
ds
adc
fwait
push
lock
add
ss
mov
mov
popa
and
idiv
jg
add
jl
sbb
xchg
cmp
xor
out
data16
xor
sub
add
loopne
adc
push
add
xor
sub
pusha
lock
jnp
jno
in
jl
sbb
jmp
mov
clc
adc
and
jo
or
pop
sbb
push
and
lods
mov
lahf
dec
rol
daa
jns
or
and
shl
leave
pop
or
mov
pop
adc
adc
lock
add
cmps
xor
lock
pop
cld
lahf
push
jecxz
pop
xchg
out
popf
add
adc
push
rcl
push
jbe
sub
ret
imul
clc
push
adc
(bad)
adc
pusha
stos
sub
and
add
sub
es
pop
pop
or
adc
push
adc
cmp
dec
and
ss
and
mov
sub
push
ins
push
xor
mov
shr
and
ss
inc
push
xor
push
imul
iret
adc
xlat
and
adc
add
movs
or
imul
pop
mov
punpcklwd
int
lock
or
or
lock
ins
adc
(bad)
rcl
or
adc
(bad)
aas
mov
or
nop
sbb
add
inc
lock
mov
in
mov
imul
int
or
(bad)
mov
pop
dec
ins
xlat
or
xchg
test
and
mov
sbb
pop
inc
test
mov
mov
jo
add
lock
jmp
bound
and
sub
and
aas
inc
jbe
push
int
xor
aaa
bound
push
les
sub
pop
adc
or
cld
adc
xchg
jg
pop
(bad)
mov
out
sbb
out
out
das
or
lock
sahf
or
das
xchg
or
pop
imul
sbb
push
test
sbb
inc
inc
inc
adc
push
mov
xchg
dec
ror
adc
inc
scas
sbb
xrelease
add
mov
and
mov
adc
test
mov
xchg
add
test
jnp
xor
and
or
dec
adc
push
popa
cmp
fs
call
add
adc
dec
cs
loope
clc
adc
cs
jl
test
jns
pop
or
or
mov
sbb
jmp
dec
retf
punpcklbw
pop
xor
imul
fbstp
sub
pop
jg
pop
or
jnp
bswap
add
add
and
ja
lahf
add
xchg
cmps
add
adc
sub
movs
and
mov
mov
push
mov
stc
and
add
sbb
xor
inc
push
adc
push
push
and
(bad)
std
cs
sub
sbb
push
je
jmp
lods
popa
fadd
pop
sub
add
sbb
or
adc
add
or
sbb
rcr
push
jo
or
jno
add
das
das
push
ret
xchg
adc
repnz
jge
or
ins
nop
popa
aas
retf
test
pusha
popa
adc
dec
pop
xor
pop
jb
xor
and
adc
and
repnz
add
lahf
jmp
cmps
lock
add
mov
pop
loope
jae
add
mov
add
sti
xchg
and
inc
mov
and
lds
iret
inc
xchg
cld
add
dec
sub
mov
fprem1
add
jp
call
inc
lock
jmp
sub
sub
xor
xor
pop
or
inc
sub
call
adc
mov
pop
dec
xor
arpl
dec
xor
and
xor
add
adc
test
mov
movs
es
sbb
push
enter
mov
(bad)
pop
stos
loope
test
xor
cmps
cmps
fiadd
adc
sbb
test
in
pop
scas
pop
push
push
push
pop
or
retf
dec
sbb
pop
inc
or
lock
add
sbb
lock
cmp
mov
adc
jle
psadbw
adc
mov
stos
or
jns
sbb
sbb
imul
in
jno
push
add
fwait
mov
adc
(bad)
retf
add
adc
push
out
push
rcl
loope
adc
test
mov
test
mov
ror
idiv
adc
xor
dec
outs
dec
or
daa
test
adc
std
cmp
adc
push
inc
mov
pop
mov
nop
ror
(bad)
dec
mov
lock
es
sub
sbb
mov
jno
inc
inc
movs
setne
xchg
push
or
jge
and
loopne
sbb
iret
leave
push
pop
or
sbb
stos
xchg
sub
pop
pop
sub
jnp
push
xor
xor
lahf
or
out
inc
cld
pop
adc
pop
and
sub
sbb
add
lea
xor
sbb
adc
push
inc
adc
idiv
(bad)
in
lock
push
sub
dec
adc
or
pop
mov
mov
sti
pop
sub
adc
or
mov
adc
lds
adc
lods
push
inc
loop
pmaxsw
adc
clc
outs
cmp
add
mov
or
push
or
lods
xchg
mov
jmp
aas
adc
lock
xchg
or
subps
mov
aaa
retf
adc
adc
ja
(bad)
(bad)
mov
adc
xor
jge
and
adc
sar
sahf
adc
das
pop
or
cdq
jne
and
das
lock
mov
(bad)
mov
jno
call
inc
inc
mov
fidivr
lock
cmps
adc
sbb
pushf
adc
add
ror
cmp
mov
or
pop
inc
mov
shr
xor
pop
mov
dec
(bad)
pop
fistp
sub
and
and
or
or
push
sub
inc
jbe
pop
ret
iret
clc
pop
aaa
adc
sbb
shr
inc
add
pop
iret
add
adc
es
seto
fst
(bad)
lahf
adc
dec
adc
adc
jecxz
and
inc
xor
or
ss
push
cmps
or
sbb
stos
mov
cmp
mov
push
adc
sar
sub
add
test
pop
or
call
es
ss
sub
jg
rcr
mov
ficomp
adc
push
sub
mov
or
ror
cwde
push
je
and
stc
push
lods
add
popf
push
mov
sub
lahf
cmp
mov
sbb
push
sbb
leave
or
or
ins
lahf
sub
or
push
push
or
lock
test
push
fistp
push
sub
aaa
ja
rol
push
dec
or
ins
ret
aad
popa
pop
(bad)
add
ret
jne
cs
mov
or
mov
lods
cmps
in
xor
dec
addr16
push
mov
or
mov
and
pop
retf
sbb
gs
mov
sbb
or
adc
mov
test
xor
(bad)
ficom
cld
dec
pop
shr
or
dec
(bad)
imul
or
mov
sbb
mov
adc
mov
aas
or
or
(bad)
pop
bound
sbb
sub
lock
nop
(bad)
mov
adc
or
xor
xor
sbb
in
sub
add
adc
fbstp
or
xor
and
push
push
or
adc
lock
add
sbb
mov
adc
sti
dec
repz
adc
ds
add
push
stos
outs
dec
xor
(bad)
les
inc
lock
jmp
pop
jmp
inc
fisttp
push
pop
daa
sbb
adc
cdq
inc
mov
adc
push
add
mov
mov
test
or
call
add
push
adc
pop
and
adc
lock
mov
adc
jle
xor
bound
sbb
(bad)
adc
sbb
or
mov
ror
mov
inc
adc
add
adc
aad
cmp
sub
test
lock
adc
ret
lock
sbb
xchg
or
das
clc
push
fiadd
into
or
or
sub
daa
test
fiadd
add
ja
sbb
mov
stos
lock
cmp
mov
sahf
pop
add
aas
push
retf
pop
adc
xchg
sub
push
lock
add
push
cmp
pop
push
call
adc
clc
pop
and
add
daa
push
in
mov
sub
fwait
pop
mov
pusha
mov
inc
test
mov
xor
(bad)
sbb
xor
mov
sub
lar
js
repnz
sub
in
(bad)
inc
jnp
and
test
mov
imul
sbb
adc
mov
sbb
cmp
rep
push
inc
or
aaa
or
sbb
sub
jbe
rcl
pop
pop
or
sbb
arpl
jge
push
add
push
imul
pop
dec
and
dec
out
jo
mov
(bad)
xor
add
sub
out
cwde
aas
movups
and
adc
inc
sbb
fild
sbb
(bad)
std
fnsave
push
add
inc
mov
mov
loope
out
test
pusha
cmc
add
adc
ds
adc
and
add
push
dec
inc
add
xchg
add
fcom
sub
and
popa
xor
sub
jbe
popa
push
sbb
lds
inc
mov
mov
aam
sub
test
or
dec
test
push
xchg
sbb
dec
movs
les
or
add
xchg
jecxz
jg
rcl
add
rol
mov
jp
add
pop
or
inc
jge
adc
adc
or
fmul
add
mov
ja
mov
lds
cmp
push
inc
adc
sbb
adc
in
inc
pop
and
xor
push
sti
mov
mov
lahf
lds
pop
fs
inc
(bad)
mov
sub
sbb
cli
add
je
movs
rol
push
inc
pop
or
and
add
in
add
pop
adc
sub
repz
lahf
dec
pop
in
out
push
inc
jp
fwait
(bad)
jp
cmp
and
xor
dec
std
mov
retf
and
sbb
mov
rcl
stc
pop
adc
pusha
push
push
push
bound
dec
xor
sub
and
mov
adc
fild
adc
lods
ss
pop
add
or
sub
or
fadd
dec
sbb
mov
sub
aas
jno
in
inc
or
inc
adc
mov
add
jno
ror
pop
sar
add
dec
xchg
pop
or
xor
mov
xor
push
lock
push
push
pop
adc
call
or
and
in
pop
push
test
fsubr
fisubr
and
in
jge
or
ficom
mov
ficom
adc
pop
jg
lock
mov
xor
outs
adc
cs
cld
mov
cdq
std
das
push
jge
lods
xor
jmp
lea
pop
jns
pushf
fsub
adc
mov
or
cmp
dec
jo
mov
pop
adc
push
xor
xchg
mov
(bad)
aas
sar
pop
call
packssdw
pop
sbb
pop
cmc
add
mov
and
jno
mov
add
mov
or
movs
mov
outs
adc
xor
sbb
jns
movs
and
popa
pushf
or
xlat
push
jmp
iret
or
sbb
jbe
clc
stos
mov
sysenter
retf
ret
ins
mov
fisttp
or
xchg
mov
push
int3
xchg
ja
inc
rol
mov
push
pop
adc
fwait
jg
push
mov
add
sub
imul
fs
add
xchg
fcmovb
sub
jbe
add
adc
hlt
add
mov
bswap
xchg
xchg
add
sbb
dec
add
loop
enter
push
(bad)
lock
push
push
and
(bad)
xor
inc
and
sti
mov
push
sub
add
add
add
sub
aas
mov
and
jmp
es
adc
pop
adc
pop
sub
sbb
sub
jo
xor
retf
push
push
or
push
imul
test
xor
and
daa
pop
daa
pop
test
or
xchg
or
push
sbb
sbb
lock
lock
test
ror
mov
inc
adc
pusha
mov
cmp
adc
or
jbe
cmc
dec
adc
ja
push
jns
cmp
xor
pusha
push
xchg
xchg
add
pop
fld
das
adc
lods
add
cmp
or
adc
pusha
add
repnz
xor
sbb
push
pop
retf
sub
dec
sbb
loopne
(bad)
dec
xor
and
xor
or
(bad)
pusha
(bad)
jl
push
mov
aas
pop
and
add
popf
dec
sbb
push
dec
dec
sub
cdq
pop
mov
pop
pop
lea
(bad)
and
pop
test
jl
push
sub
push
sbb
mov
dec
push
add
push
cmp
cmp
popa
sub
(bad)
aam
aad
push
cmp
pop
cmp
loopne
adc
or
sbb
and
inc
adc
fld
sub
push
cmp
pop
xchg
mov
add
mov
into
movsx
bound
fbstp
sbb
or
lock
popf
or
(bad)
inc
lods
inc
dec
scas
adc
(bad)
cmps
add
sbb
jnp
and
mov
push
adc
inc
lock
add
adc
and
add
sub
push
bound
sbb
push
pop
test
sub
mov
inc
and
call
sub
sbb
cmp
pop
push
adc
sbb
ret
icebp
psadbw
cmp
xor
es
sub
aas
sbb
inc
sbb
inc
jns
inc
sbb
sub
sub
add
in
push
test
inc
add
movs
sbb
lods
sub
rol
xchg
(bad)
das
fimul
pop
stos
xchg
add
adc
mov
adc
add
lods
ret
les
and
mov
jns
sbb
dec
pop
jmp
jbe
xor
or
sbb
sbb
adc
sub
fisubr
mov
popf
imul
dec
add
xor
push
dec
push
ror
add
or
sbb
and
mov
pop
and
cli
mov
add
and
mov
adc
addr16
or
xchg
out
and
adc
rol
cwde
ja
mov
or
sbb
inc
test
pop
int3
add
aam
add
and
ins
push
sub
or
leave
ja
test
daa
mov
call
pop
add
sbb
xchg
inc
dec
adc
xor
sar
daa
adc
jo
add
stos
xor
dec
jo
add
add
sbb
mov
sbb
mov
and
mov
not
pop
sbb
pop
adc
jle
inc
xchg
add
push
ins
std
(bad)
cmp
imul
imul
push
lock
nop
or
or
mov
mov
pop
sub
push
adc
xor
lock
aam
lea
dec
push
inc
outs
or
jo
shr
add
(bad)
add
push
or
mov
rcl
pop
cli
pop
add
int3
sub
cmc
(bad)
mov
cs
std
add
daa
or
cmp
add
pusha
dec
es
leave
cs
adc
mov
jne
jae
mov
mov
xchg
cmp
add
movs
mov
pop
and
movs
mov
loop
push
or
sub
dec
add
mov
adc
fidiv
or
(bad)
push
nop
ins
mov
xchg
push
pop
les
xor
je
(bad)
jge
dec
or
adc
sbb
pushf
pop
(bad)
or
xor
lds
add
nop
pusha
push
fld
xchg
mov
jbe
xor
mov
push
in
and
ret
or
test
push
cli
mov
and
adc
mov
in
imul
out
push
dec
rcr
repnz
adc
movs
shr
pop
fcmovbe
xor
sub
adc
jbe
xor
push
fistp
and
in
sahf
inc
jne
dec
sub
cmp
lds
icebp
cdq
sub
push
dec
test
aaa
adc
test
add
push
pop
sahf
mov
mov
adc
xchg
or
sbb
int3
pop
adc
pop
add
mov
push
popf
mov
movs
add
mov
sub
jg
push
cmp
jno
cmp
mov
mov
add
and
scas
arpl
push
dec
or
(bad)
jl
imul
push
shl
cmps
sbb
adc
mov
push
sub
mov
mov
mov
popf
enter
stos
jne
aaa
pop
add
pusha
push
pusha
jne
xchg
fmul
cli
movs
adc
fsub
cmp
xor
mov
add
sti
jmp
mov
mov
and
comiss
and
(bad)
mov
push
or
arpl
aad
popa
sub
or
adc
in
lsl
dec
movs
es
lods
and
dec
pop
xchg
add
mov
mov
lods
and
gs
push
push
inc
aaa
movs
and
sub
and
sbb
xor
and
repnz
push
sub
or
push
add
and
(bad)
mov
mov
cmp
and
adc
in
xor
(bad)
and
or
stos
fld
mov
fwait
adc
jne
not
inc
push
add
sar
fild
inc
lock
lock
lock
xchg
push
add
fistp
pop
sub
adc
idiv
add
cmp
lock
or
mov
xor
push
add
retf
lock
add
addr16
fiadd
mov
stos
add
inc
xor
lock
sub
dec
fadd
mov
mov
repz
loopne
adc
lock
pop
lods
call
pop
adc
sbb
inc
add
push
dec
or
stos
ja
fld
int
bound
mov
arpl
sub
mov
or
dec
or
mov
adc
sbb
dec
test
or
add
lea
cmc
jno
and
jg
or
sub
dec
xor
fwait
push
nop
xor
push
mov
dec
mov
(bad)
(bad)
loop
movs
popa
popf
pop
xchg
aad
int
or
cmp
adc
sbb
pop
pop
xlat
and
pop
sbb
mov
and
adc
in
ret
xchg
mov
mov
push
xor
and
lods
and
or
and
(bad)
push
add
xchg
mov
jmp
and
jns
aam
jno
cmp
and
or
mov
jmp
inc
adc
or
cmp
fwait
push
sub
xor
(bad)
in
out
imul
push
jae
cmp
or
pop
push
mov
dec
jg
push
mov
adc
or
ja
shr
or
or
push
add
pop
push
arpl
mov
(bad)
jecxz
add
test
(bad)
push
daa
jns
or
pop
or
lahf
arpl
mov
adc
scas
push
movs
push
and
xor
cmp
(bad)
and
sub
cs
jnp
dec
adc
and
loope
xor
mov
lods
sbb
mov
add
and
or
aam
fcomp
adc
inc
xor
push
push
mov
popf
xor
pop
pop
and
adc
cmp
retf
and
sub
and
jae
arpl
les
scas
fnsave
inc
dec
or
es
fisttp
pop
mov
mov
das
jnp
das
mov
and
lock
add
mov
pop
inc
mov
imul
out
sub
mov
mov
and
add
dec
lock
add
shr
cmp
std
push
movaps
fwait
or
pop
add
dec
sbb
mov
or
dec
mov
jno
adc
and
test
xchg
add
jne
(bad)
push
adc
test
pop
or
in
or
and
push
sbb
adc
shr
and
and
retf
add
nop
stos
bound
or
and
pop
rcl
inc
push
dec
outs
adc
xchg
pusha
mov
xor
stos
sbb
inc
sbb
in
sbb
add
cmps
push
and
or
mov
outs
lock
add
add
imul
cs
lock
or
aad
mov
jns
cmp
movs
cmps
ror
inc
mov
cmp
or
mov
jnp
adc
add
mov
adc
lock
out
push
inc
mov
xor
xor
mov
adc
or
sub
push
inc
jg
add
lock
inc
inc
lods
push
pop
pop
adc
rcr
push
ja
mov
xchg
stos
cmp
shr
add
mov
fsubr
mov
test
xor
sbb
fs
inc
mov
lea
(bad)
scas
mov
adc
or
xor
sub
mov
add
dec
ins
push
fcom
adc
push
pop
push
cmp
arpl
test
xor
pusha
stos
xor
gs
movs
jmp
cs
out
xchg
push
in
lea
loopne
test
stos
imul
and
lahf
bound
test
imul
sbb
lahf
fwait
clc
aas
push
push
sbb
rdmsr
sub
mov
mov
lock
adc
or
add
aaa
push
cmp
lock
sbb
or
test
punpckhdq
and
in
and
jmp
stos
ror
lds
push
pop
xchg
jo
mov
pop
sbb
imul
(bad)
xor
arpl
adc
adc
bound
mov
pop
xor
push
mov
adc
jge
cld
and
adc
sbb
or
pop
pop
fadd
pinsrw
loope
std
mov
les
dec
xor
sti
and
sbb
and
push
xchg
test
mov
adc
adc
sbb
lods
mov
test
aas
add
dec
icebp
add
dec
pop
inc
sub
sar
test
pop
push
int3
push
out
das
sbb
rcl
arpl
scas
dec
mov
and
ins
sub
sub
xor
jle
inc
add
out
rol
clc
pop
stos
daa
sbb
lock
xlat
call
add
repz
mov
adc
mov
dec
add
and
arpl
mov
stos
adc
jnp
dec
sub
mov
push
xchg
lock
add
out
pop
push
xor
adc
push
and
sahf
add
mov
cmp
in
add
mov
sub
add
push
pop
or
push
pop
jg
mov
daa
and
inc
sbb
add
inc
jge
sub
fadd
add
cmp
(bad)
test
(bad)
sbb
ins
push
add
arpl
in
push
jmp
pop
add
and
retf
aad
and
inc
jmp
je
push
mov
xor
pop
stos
adc
adc
adc
add
lods
sub
add
fdiv
test
adc
sub
inc
mov
xchg
adc
adc
cmovs
push
sbb
(bad)
cmp
xchg
mov
and
jo
sbb
pop
in
or
jns
add
xor
mov
mov
call
mov
push
inc
mov
xor
pop
push
mov
add
aaa
mov
rol
dec
or
sbb
sub
stos
or
sbb
sub
xor
dec
and
jns
fwait
xor
adc
and
jno
push
lods
sbb
mov
shl
(bad)
aas
xor
and
adc
mov
pop
dec
jmp
pushf
push
pop
bound
or
push
sbb
movs
add
or
or
sub
call
sti
inc
arpl
and
cmp
lahf
add
push
popa
add
mov
outs
add
loope
out
push
add
push
addr16
sub
lock
inc
imul
or
out
jbe
and
mov
shr
adc
push
movs
les
cmc
sub
push
iret
cdq
add
xlat
cmp
sar
hlt
scas
hlt
sbb
sub
add
or
mov
scas
(bad)
adc
dec
mov
push
test
mov
cmp
retf
add
idiv
lahf
lock
dec
xor
sub
aaa
(bad)
lock
sub
add
lock
inc
lock
clc
stos
jl
add
cmp
lock
adc
mov
jge
(bad)
call
or
dec
shr
xor
mov
adc
push
(bad)
inc
add
push
pusha
gs
add
or
mov
mov
or
or
add
inc
gs
push
fistp
adc
test
adc
loope
push
fsub
sbb
adc
jne
fimul
mov
add
mov
jne
dec
mov
jmp
xchg
scas
or
dec
add
ss
inc
adc
push
imul
ret
lds
lahf
mov
loope
pusha
adc
xchg
or
adc
mov
movs
jne
test
adc
out
push
je
mov
xchg
push
add
jo
mov
mov
add
dec
pusha
out
and
or
push
stc
jae
or
sub
and
fsub
gs
and
lods
arpl
std
add
int
rcr
nop
setno
retf
adc
inc
push
ins
sub
push
xchg
pop
jne
pop
fwait
or
adc
cmc
adc
sub
adc
add
adc
or
imul
sub
add
add
or
stos
or
add
rol
popa
and
mov
push
cmp
adc
or
mov
and
sbb
or
into
rcl
(bad)
add
call
inc
add
adc
jno
adc
ds
and
ins
adc
jnp
outs
fld
aaa
js
adc
test
cmps
and
mov
mov
call
jne
sub
(bad)
loopne
nop
sbb
cld
add
or
test
jle
outs
jp
dec
and
dec
cmp
mov
adc
ds
outs
fld
das
psrad
lea
or
adc
adc
das
adc
push
das
movs
adc
and
nop
mov
out
(bad)
aaa
(bad)
(bad)
call
mov
cmp
and
adc
sbb
sbb
cs
inc
add
(bad)
cmp
and
push
xchg
or
pusha
push
jmp
retf
call
inc
xor
xchg
outs
inc
push
push
adc
popa
and
push
mov
in
fisub
sub
and
inc
sbb
adc
lock
or
or
cmp
pop
out
(bad)
(bad)
mov
pop
movs
push
cmp
pusha
push
push
or
inc
(bad)
push
lahf
adc
pop
(bad)
(bad)
fistp
adc
xor
push
adc
dec
adc
push
outs
adc
pop
sub
shl
inc
push
adc
or
aas
pop
psubb
inc
or
push
ficom
test
xchg
pop
enter
(bad)
jg
pop
push
inc
and
dec
sub
inc
adc
sbb
cdq
cmp
call
and
pop
pusha
test
sbb
lock
mov
pop
or
cs
movs
das
add
pop
adc
push
(bad)
sbb
xor
(bad)
jecxz
mov
pop
ror
test
and
jnp
push
(bad)
jmp
ror
sub
fs
(bad)
add
sbb
and
pop
pop
add
loop
add
test
or
push
mov
sub
dec
mov
and
lods
sub
push
inc
inc
and
push
and
(bad)
adc
add
adc
or
and
das
dec
adc
cmp
adc
push
sbb
lock
or
dec
sbb
or
and
(bad)
mov
push
inc
lock
add
jp
xor
push
or
(bad)
(bad)
(bad)
call
sbb
pop
adc
or
dec
xor
bound
adc
movs
jns
(bad)
(bad)
call
dec
xor
mov
pop
mov
adc
sahf
pop
xchg
sub
inc
shr
outs
xchg
jmp
push
inc
inc
adc
pop
daa
cmp
jne
cmp
push
imul
(bad)
dec
addr16
inc
xor
or
or
adc
jmp
push
test
and
or
sbb
or
adc
das
cs
mov
or
push
jno
bound
ss
(bad)
scas
mov
pop
daa
outs
sbb
inc
xchg
and
xor
xor
(bad)
call
bound
inc
sbb
pop
mov
cmp
pop
sub
sub
dec
sar
inc
pop
xor
xor
sbb
pop
cmp
adc
add
les
ss
std
fs
and
xor
xor
das
adc
bndstx
or
or
push
xor
push
adc
and
push
sbb
push
pop
cmp
xor
or
ins
imul
push
pop
sbb
ror
data16
ss
push
adc
xor
sbb
or
or
sbb
and
push
xor
sti
(bad)
push
dec
push
and
shld
cmp
jb
lock
jne
(bad)
add
or
dec
in
pop
sbb
adc
adc
mov
mov
sub
cmp
inc
nop
inc
inc
push
add
(bad)
jle
push
push
adc
push
push
xor
or
or
jo
scas
pop
pushf
or
(bad)
mov
cmp
retf
sub
ror
pop
(bad)
fwait
push
or
in
jg
(bad)
jmp
sbb
and
push
xor
xor
mov
xchg
add
mov
int3
adc
cmp
je
cli
dec
addr16
sub
or
and
or
pop
scas
or
push
add
sbb
sub
in
sub
pop
sti
sar
or
outs
sub
and
or
std
loop
xor
or
enter
or
ja
and
jb
adc
dec
pop
lock
add
or
dec
mov
dec
add
jp
fild
shr
adc
daa
cmp
lods
push
dec
push
sub
(bad)
fistp
and
aam
push
fnstsw
pop
rol
add
cmps
or
mov
nop
aas
dec
push
cmp
lods
movs
(bad)
adc
adc
push
ins
daa
or
xor
clc
stos
out
inc
and
xchg
es
or
mov
dec
add
add
sbb
sub
add
jg
sbb
sbb
push
sub
bound
inc
xchg
cmp
imul
or
xor
xor
pop
sbb
and
and
adc
sbb
adc
(bad)
dec
aas
comiss
sub
jb
sbb
out
xchg
adc
pop
mov
inc
jl
xor
push
adc
xor
adc
cmp
mov
inc
sbb
push
es
or
push
pop
push
and
dec
xchg
xor
stos
scas
xor
ss
inc
jmp
push
cs
and
sub
push
sbb
sar
call
and
and
movs
inc
arpl
mov
inc
neg
(bad)
push
add
out
sub
sbb
adc
xchg
or
dec
aaa
rcl
pop
dec
push
adc
pop
or
or
ucomiss
or
sub
sbb
adc
sbb
mov
clc
sbb
sbb
xor
adc
push
and
into
or
and
adc
pop
inc
fild
adc
and
sbb
loope
or
clc
fwait
mov
add
pop
into
adc
outs
es
mov
inc
add
add
stos
xor
(bad)
aas
sti
movs
add
aas
nop
pop
adc
sbb
adc
mov
inc
sub
sbb
call
push
mov
adc
inc
dec
dec
push
adc
adc
adc
push
sub
xor
movups
aas
sbb
cmc
inc
adc
dec
cmp
out
int3
rcr
pop
and
inc
jno
jno
xchg
loope
arpl
push
cmp
sbb
sub
sbb
and
xchg
sbb
mov
dec
sub
sbb
push
pop
loope
pop
cmc
push
xor
sub
xor
mov
adc
push
xor
mov
dec
pop
adc
cmp
or
clc
push
jmp
add
aad
jmp
je
adc
cmp
jp
push
push
std
adc
cdq
dec
or
pop
xor
adc
add
push
cmc
ja
inc
sub
mov
pop
xchg
cmc
(bad)
dec
sub
adc
ins
das
pop
or
or
xor
dec
jmp
loop
sbb
push
xchg
xor
push
cdq
mov
and
or
dec
dec
loop
and
adc
cmp
or
sbb
adc
adc
sbb
fwait
dec
xor
adc
pop
mov
aaa
stos
stc
push
sti
push
pop
ins
or
or
sub
call
add
outs
dec
cmp
jnp
pop
xor
push
sub
or
sbb
mov
pop
or
out
add
or
sub
add
repz
dec
jns
inc
xor
dec
sbb
pop
icebp
and
and
sub
push
sbb
scas
cmp
mov
jmp
mov
fs
and
sub
xor
cmp
add
or
or
ret
push
xor
push
sub
xchg
inc
sub
outs
xor
out
mov
outs
rol
pop
test
(bad)
sbb
(bad)
(bad)
sub
iret
fs
mov
pusha
fild
add
pop
out
adc
and
rcl
int3
mov
push
cld
and
adc
sbb
sbb
sbb
inc
(bad)
fidiv
gs
dec
jp
push
and
mov
push
ds
lock
cmp
jg
adc
sbb
add
sbb
push
dec
push
stos
cmps
pop
push
xchg
jne
sbb
and
movzx
loop
sbb
add
unpcklps
and
les
pop
pop
or
inc
arpl
sbb
fisttp
xor
adc
pop
(bad)
(bad)
js
scas
inc
fwait
mov
xchg
or
test
dec
(bad)
dec
sbb
jb
mov
adc
jns
xchg
mov
xor
add
data16
sahf
sbb
cs
ja
loop
sbb
xor
pop
scas
in
inc
icebp
xchg
xor
push
ss
pop
add
loope
jmp
out
push
scas
ds
adc
and
scas
call
popf
adc
dec
inc
or
inc
(bad)
jmp
inc
dec
push
sub
sbb
sbb
cs
or
aaa
sbb
xor
cld
outs
pop
or
mov
push
lock
and
mov
(bad)
sub
pop
push
and
and
aad
fimul
push
and
dec
punpckhbw
inc
(bad)
data16
pop
out
dec
or
sbb
sbb
sbb
mov
pusha
std
push
scas
clc
pop
add
test
add
pop
addr16
pop
or
sysenter
(bad)
inc
mov
cld
xor
mov
and
into
pop
adc
sbb
add
or
les
add
cmp
adc
and
stc
scas
push
push
ins
pop
xchg
push
or
ret
inc
xchg
mov
and
sbb
scas
xor
xor
dec
adc
mov
je
in
sbb
dec
sbb
and
sub
ds
gs
inc
sbb
jnp
inc
es
scas
mov
and
test
pop
add
adc
lds
mov
shr
stos
sbb
mov
(bad)
or
mov
jb
sub
lods
call
jmp
test
jp
cmp
add
xor
sub
(bad)
dec
popa
cmp
xor
xor
sbb
daa
adc
jg
or
mov
or
and
pop
ins
std
call
push
push
or
or
sub
push
or
sub
sbb
scas
mov
cli
xor
enter
mov
pop
aas
inc
dec
jne
lods
or
adc
sbb
stc
or
outs
xor
cmovnp
pop
clc
or
pop
dec
pushf
pusha
shl
loop
pop
push
cld
push
fild
retf
sbb
inc
lods
cs
pop
or
nop
mov
test
inc
nop
nop
adc
mov
jg
or
mov
add
pop
cmp
adc
(bad)
ins
dec
cmp
dec
push
mov
cs
mov
scas
jb
xor
ins
jl
sub
pop
sbb
and
adc
popa
lock
mov
clc
pop
gs
fimul
daa
cmp
sub
jmp
call
adc
mov
sbb
movs
cmp
push
ror
or
pop
(bad)
(bad)
out
push
add
adc
and
sub
push
mov
push
push
shl
dec
lock
cs
or
pop
add
xchg
push
xor
push
cld
or
and
outs
and
push
dec
or
and
pop
sub
sub
xchg
arpl
(bad)
(bad)
push
inc
cmp
aaa
or
adc
pop
xchg
adc
pop
dec
push
or
push
call
mov
pop
sub
jb
and
add
add
inc
push
jnp
xchg
int3
or
or
adc
xchg
push
sbb
jae
push
cld
mov
add
and
xor
push
or
adc
pop
das
dec
sbb
sbb
(bad)
jmp
pop
push
cmp
push
or
pop
push
or
daa
cmp
adc
pop
or
ss
dec
dec
cld
push
sbb
daa
xor
pop
clc
call
dec
push
adc
mov
xchg
rcr
cmp
push
push
adc
xchg
clc
add
or
sub
adc
outs
mov
sbb
outs
pusha
sbb
push
sub
sub
sbb
sbb
sbb
mov
inc
sub
hlt
call
aaa
and
push
and
cmp
sbb
ja
test
add
inc
inc
pop
pop
ins
pop
dec
sbb
inc
lock
sahf
adc
xor
push
add
jg
fisub
sbb
dec
add
pop
pop
jp
adc
mov
and
sbb
dec
jbe
push
push
mov
(bad)
sti
(bad)
dec
push
adc
inc
sbb
adc
fs
inc
sbb
in
clc
scas
dec
mov
and
and
xor
adc
std
push
jmp
or
adc
mov
sub
pop
dec
std
xor
aaa
test
inc
add
ja
add
dec
or
lds
adc
inc
retf
xor
pop
inc
popa
add
push
adc
dec
or
jnp
data16
mov
out
cmp
or
pop
das
adc
test
mov
mov
and
sbb
cmp
jmp
and
retf
or
push
adc
sbb
add
es
es
aaa
add
xchg
sub
add
push
daa
lock
pop
lock
mov
dec
daa
or
ds
pop
dec
adc
sbb
ja
outs
add
xor
sub
mov
cmp
sub
ds
dec
fdivr
js
sub
movs
aaa
pusha
adc
and
cmp
adc
push
mov
das
push
sub
push
das
and
jae
(bad)
(bad)
jg
es
cmp
xor
cmp
xchg
or
xor
xor
push
and
ds
mov
fisubr
push
adc
test
or
(bad)
scas
jl
inc
push
es
and
popa
push
mov
push
pop
and
and
pop
(bad)
mov
xor
or
sbb
mov
dec
movntps
push
ret
ror
mov
adc
sbb
shr
pop
mov
or
(bad)
into
push
mov
cmps
xor
push
mov
outs
add
mov
push
or
shl
sbb
fcomip
jmp
and
adc
pop
cs
(bad)
mov
adc
xchg
mov
clc
call
jle
or
push
dec
push
dec
sbb
stos
(bad)
pop
in
jb
pop
or
or
lock
add
cmp
adc
sub
pop
push
dec
sub
mov
call
cmp
and
popf
and
or
je
cmp
sbb
mov
neg
es
adc
pushf
test
mov
or
push
pop
or
adc
sub
or
cld
in
adc
or
sbb
call
or
or
sbb
inc
aas
sub
ins
cli
fnstcw
push
adc
pop
cs
push
ret
daa
xor
das
inc
inc
and
or
mov
dec
aaa
push
mov
ss
push
cmp
push
pop
pop
push
and
xsavec
xchg
push
cmp
and
and
and
sub
or
jecxz
test
or
cmp
xor
and
daa
dec
mov
jmp
inc
and
jmp
outs
jge
test
adc
push
push
adc
jg
jg
add
lods
xor
push
adc
pop
sbb
pop
mov
sbb
xor
inc
daa
adc
(bad)
pop
pop
inc
sbb
pop
sbb
aas
adc
call
adc
sbb
sub
daa
push
push
xor
push
sbb
cmp
call
push
adc
ins
dec
xchg
xor
mov
add
xor
pop
push
push
nop
dec
or
ds
xor
push
sub
dec
and
ss
and
jmp
add
aaa
cmp
push
pop
push
add
and
mov
pop
adc
or
jno
inc
sbb
xor
fist
add
sbb
out
pop
cmp
sbb
inc
and
jg
inc
push
jne
or
xor
or
xor
sar
pop
js
pmulhw
fsubr
or
adc
imul
and
pop
or
pop
imul
push
inc
imul
adc
fwait
or
cld
push
bound
sub
nop
add
push
call
push
ret
or
jl
adc
mov
xor
or
sub
dec
sub
inc
and
sub
popa
sub
sub
sbb
and
cmp
sbb
xor
ja
pop
xchg
dec
or
or
pop
jbe
pop
push
ror
pop
mov
ficom
mov
adc
mov
adc
jecxz
or
loop
loopne
sub
aaa
mov
fcom
je
adc
cmp
or
pop
xor
adc
xor
adc
push
clc
or
and
pop
adc
idiv
dec
xchg
push
movups
push
adc
push
and
out
sbb
pop
or
push
minps
push
add
stos
mov
sub
pusha
and
sbb
frstor
xchg
das
adc
lds
xor
or
push
sbb
dec
add
or
and
fcomp
pop
shr
imul
push
adc
sub
add
adc
push
in
or
dec
push
inc
or
retf
or
pusha
cs
jle
and
sbb
or
and
adc
sbb
ja
inc
cmp
loopne
popw
add
pop
lock
sub
adc
adc
es
or
sbb
loopne
and
adc
add
in
adc
jns
ins
fwait
shl
out
or
or
mov
xlat
icebp
sub
inc
pop
clc
sub
cmp
bound
adc
sar
adc
push
adc
xor
outs
or
push
xor
jmp
inc
add
push
push
pop
adc
mov
cmp
push
sti
sti
add
call
sub
ss
ret
fcomp
or
cmp
xor
xor
sbb
adc
es
adc
sbb
sbb
dec
inc
jae
scas
sahf
sbb
sbb
or
xor
sbb
cmp
rcr
cmps
sub
adc
push
sbb
nop
sbb
inc
and
js
icebp
xor
xor
inc
es
cmp
dec
mov
or
add
push
dec
loopne
sbb
adc
mov
lods
fdiv
pop
std
push
pop
aas
push
mov
cwde
sbb
xor
pop
les
or
outs
push
out
pop
or
or
bound
inc
or
or
push
pop
push
and
pop
mov
sub
jg
rcr
push
cmp
frstor
lahf
popa
push
out
sub
pop
add
and
out
mov
pop
dec
test
dec
ja
cmp
not
sbb
pop
push
or
sub
and
fbstp
out
pop
adc
sbb
push
mov
pop
push
push
mov
or
aaa
pop
inc
adc
les
mov
pop
xchg
pop
pop
jne
sub
fdivr
int
push
sbb
adc
daa
mov
cld
pop
pop
lods
js
adc
sbb
sbb
push
xor
or
mov
out
sub
sbb
ficom
mov
dec
sub
or
or
xor
sar
jmp
add
sub
sub
and
xor
cmp
inc
adc
and
dec
adc
or
xor
inc
dec
and
sub
rcl
and
add
sub
push
or
nop
fcomp
adc
cmp
mov
add
test
daa
or
mov
xor
or
pop
mov
xor
cld
(bad)
mov
enter
pop
leave
and
sbb
xor
and
jb
inc
sub
push
sub
sbb
sbb
outs
clc
cmp
push
pop
sub
pop
cmp
sbb
push
fld
adc
mov
ins
mov
dec
outs
cmp
inc
dec
inc
sub
add
movaps
adc
dec
in
push
outs
pop
dec
sub
dec
es
stos
add
or
sbb
sbb
ss
imul
jbe
adc
xchg
push
adc
push
mov
cmp
cmp
or
mov
or
aaa
sbb
pop
mov
jg
rcr
ss
and
xor
push
sbb
das
cli
cmp
sub
sbb
popa
dec
sub
mov
adc
pop
sbb
push
dec
cmp
pusha
dec
pop
cvtps2pi
and
sub
sub
inc
mov
sbb
push
adc
and
sbb
dec
cwde
push
push
and
and
sti
(bad)
(bad)
jmp
popa
adc
cmp
and
or
xor
xor
cs
cs
lods
push
(bad)
jg
das
xchg
cmp
dec
sbb
pop
push
adc
xor
cli
outs
pop
jmp
push
inc
or
imul
add
jle
inc
push
lods
inc
sbb
sbb
lock
add
clc
mov
push
daa
sbb
out
dec
and
sbb
call
daa
sub
push
aaa
dec
or
inc
movs
inc
es
aad
xchg
dec
das
push
sbb
mov
push
in
sbb
adc
push
sub
or
xchg
cld
jmp
inc
iret
pop
adc
and
adc
push
dec
popa
push
sbb
(bad)
inc
mov
sbb
ins
or
cvtps2pd
pop
push
sbb
cmps
sbb
pop
pop
and
adc
movs
xor
punpckhdq
jno
cmp
pop
lock
jg
pop
adc
adc
sub
push
pop
movlps
mov
pop
(bad)
and
in
or
sub
inc
or
(bad)
in
jmp
adc
dec
adc
sub
mov
adc
or
add
data16
or
add
mov
inc
jo
pushf
adc
sub
adc
xchg
dec
fmul
pop
fadd
inc
or
out
clc
in
mov
cmp
and
sub
inc
sbb
xor
das
data16
(bad)
(bad)
jmp
push
and
cmp
cmp
sbb
pop
mov
pop
dec
inc
and
and
(bad)
out
mov
sub
cmp
mov
and
cmp
push
lock
cmps
pop
aam
lock
pushf
mov
jmp
jl
in
cmp
test
xor
(bad)
lock
add
cmp
adc
dec
sub
cmp
push
mov
jne
and
mov
in
xor
mov
xchg
inc
jle
mov
dec
sbb
pop
sbb
xor
mov
cmp
sbb
adc
inc
push
jne
push
adc
cdq
adc
push
ins
aaa
pop
retf
popf
push
mov
iret
pop
out
clc
(bad)
mov
inc
outs
popa
xor
adc
adc
push
lea
jnp
sub
jo
das
(bad)
sti
(bad)
mov
sub
jg
and
test
jmp
daa
call
cmp
push
jge
inc
adc
ss
dec
jle
or
push
xchg
loop
push
lock
mov
mov
es
or
inc
dec
scas
ret
mov
cmp
sub
add
push
sbb
cmps
cwde
push
pop
aaa
and
add
jb
cmp
retf
(bad)
call
cld
pop
cmp
push
sub
and
jae
mov
inc
sub
sbb
or
hlt
inc
add
scas
pop
push
and
or
(bad)
call
dec
or
ror
push
mov
add
xor
sbb
sbb
cmp
sbb
xor
adc
mov
push
std
(bad)
(bad)
aas
pop
sbb
sbb
(bad)
xlat
push
xchg
das
pop
add
imul
jge
cs
fwait
dec
push
xor
cmp
cmp
std
scas
mov
cld
push
xchg
inc
pop
sub
push
adc
std
jmp
and
cmp
xchg
inc
or
pop
hlt
int
sub
xchg
dec
push
or
adc
(bad)
(bad)
mov
push
daa
push
jp
test
dec
jo
or
mov
cmp
das
popf
or
pushf
pop
push
mov
cmp
push
retf
pop
push
sbb
adc
jge
xor
fisttp
push
and
aas
xor
das
pop
(bad)
mov
cmp
and
adc
sbb
mov
jg
clc
and
push
es
sbb
and
popa
adc
es
push
mov
cs
pop
daa
cmovb
and
xor
(bad)
std
(bad)
jg
or
je
cwde
adc
adc
xor
cmp
lds
xor
jg
cmp
arpl
gs
push
jne
cs
out
daa
adc
sbb
(bad)
(bad)
dec
adc
push
xor
dec
sbb
and
push
inc
sbb
aas
and
push
adc
inc
(bad)
dec
ins
push
fwait
and
or
or
pop
sub
pop
es
fwait
(bad)
(bad)
pop
hlt
inc
dec
or
push
sbb
ins
sub
or
pop
or
shr
clc
dec
jbe
imul
pop
sahf
fwait
and
pusha
pop
sbb
pop
add
inc
cld
and
jl
clc
call
js
data16
dec
sbb
push
or
or
and
(bad)
out
or
addr16
punpckhdq
mov
push
mov
jg
inc
sub
imul
sub
sbb
mov
fimul
adc
sub
retf
or
leave
or
adc
dec
lock
cmp
sub
xor
and
push
push
sub
shr
adc
aad
aas
sub
xor
adc
inc
sbb
adc
aam
push
push
push
or
or
dec
imul
dec
xchg
or
adc
and
and
aaa
pop
sti
pop
icebp
sbb
cmp
ss
cmovg
sbb
and
add
push
pusha
dec
push
cli
jl
mov
pop
scas
mov
test
aaa
cmp
outs
neg
daa
cmp
out
pop
fistp
cmp
(bad)
into
js
push
or
or
jb
xchg
lock
mov
inc
inc
jg
das
cli
cmp
leave
mov
and
jl
sbb
(bad)
in
dec
sub
mov
lods
push
xor
and
and
pop
cvtpi2ps
jno
call
dec
es
push
xor
outs
adc
dec
adc
aam
adc
sbb
dec
(bad)
or
and
aas
sbb
pop
pop
ja
or
sbb
inc
sbb
push
push
sbb
and
adc
ja
iret
rcr
push
mov
mov
inc
pop
jno
pop
and
push
cmp
push
and
push
pop
movs
inc
push
xor
push
outs
jl
pop
je
mov
push
dec
lods
xchg
data16
sub
or
sub
jg
jmp
xchg
adc
or
inc
xor
inc
or
sbb
adc
or
xchg
and
pop
push
outs
push
mov
add
sbb
sub
adc
cmp
mov
sub
adc
dec
or
or
xor
xor
outs
adc
adc
sbb
xor
sub
pop
dec
push
adc
adc
ja
call
push
cmp
es
or
sub
sub
adc
retf
push
sbb
push
xor
mov
push
inc
inc
ret
and
das
bound
and
jp
fwait
sub
stos
xor
push
push
or
mov
stos
icebp
push
adc
mov
test
std
add
and
daa
or
push
pop
and
dec
clc
mov
retf
sub
sbb
push
push
dec
or
addr16
test
loope
lahf
jae
push
or
sbb
sub
sub
mov
push
pusha
rcl
out
cdq
adc
add
test
and
aaa
mov
add
jle
adc
push
cmp
sbb
xor
and
mov
jmp
pop
lock
cmp
adc
pop
or
or
sub
push
cmp
cmps
nop
or
push
mov
out
push
cs
push
outs
nop
test
xchg
or
dec
and
or
cmp
and
unpckhps
clc
or
push
sub
and
push
mov
aaa
aad
jno
test
movhps
adc
out
dec
pusha
pop
sub
pop
mov
ds
inc
push
and
sbb
jp
out
sub
push
mov
pusha
imul
ficomp
ss
pop
js
loop
pop
sub
adc
pop
xchg
clc
jg
pop
es
and
xor
adc
in
inc
ins
pusha
pusha
and
push
push
les
or
and
push
and
pop
inc
clc
retf
dec
pop
pop
int3
ret
test
inc
and
imul
adc
add
sbb
sub
push
movups
adc
xor
adc
(bad)
jg
bound
sub
bound
xor
and
pop
inc
ds
icebp
mov
fcom
push
adc
sub
jne
cmp
(bad)
jmp
imul
or
push
push
adc
and
and
adc
jg
call
sbb
sbb
inc
adc
inc
and
xor
push
jns
xor
sbb
push
sbb
bound
pop
push
pop
inc
or
jg
mov
dec
daa
mov
sub
pop
dec
cmp
sub
push
xor
rol
(bad)
push
inc
or
adc
and
cmp
movs
es
xor
and
inc
lock
or
sbb
jge
sbb
adc
inc
inc
inc
pop
js
dec
xor
jno
aaa
adc
pop
pop
in
std
in
push
fmul
xor
jae
cmp
sub
idiv
dec
cmp
inc
gs
or
adc
test
gs
dec
add
and
sub
scas
push
fmul
(bad)
jbe
push
sub
or
cs
pop
retf
sbb
sbb
inc
xor
add
mov
loopne
mov
cmp
call
aaa
add
and
pop
(bad)
aad
nop
lock
add
ds
ror
mov
xor
and
aaa
std
unpcklps
sub
and
sbb
mov
push
or
imul
andnps
xor
cmp
pop
xchg
pop
pop
pop
pop
pop
push
test
jo
dec
and
call
cmp
cmp
cmp
nop
bound
adc
cmp
adc
(bad)
xlat
or
out
sub
cmp
xor
or
lock
adc
sub
popa
inc
cmp
xor
and
into
push
add
sbb
adc
or
inc
std
inc
popa
imul
pusha
or
dec
inc
cmp
adc
or
or
ss
xor
jge
adc
adc
movs
das
lods
and
dec
push
adc
pop
push
sub
sbb
aam
mov
jecxz
xchg
loopne
xor
(bad)
mov
push
hlt
mov
push
push
pop
xor
sar
pop
sbb
stos
fisubr
inc
pop
mov
pusha
sbb
and
push
mov
inc
push
xor
inc
(bad)
fistp
pop
push
inc
pop
ds
cmp
es
dec
inc
push
mov
sbb
daa
sbb
pusha
or
jg
dec
dec
inc
inc
or
pop
push
xlat
cs
jbe
dec
mov
clc
mov
xchg
jnp
or
adc
pop
arpl
pop
aas
or
inc
add
(bad)
shr
push
cld
outs
inc
or
pop
inc
push
sbb
pop
jno
adc
mov
sbb
mov
sbb
sbb
pop
push
lock
sbb
jae
push
mov
mov
add
or
ss
xor
mov
xchg
in
pop
sub
push
mov
es
das
cmps
sub
sub
push
sbb
jp
inc
call
jno
mov
(bad)
cmp
add
dec
push
dec
or
and
es
adc
aas
dec
or
push
or
std
cmp
push
xor
das
dec
ins
pop
dec
mov
cmp
inc
rep
rcl
cmp
sub
inc
mov
and
dec
sbb
or
and
add
jmp
sbb
sub
fcmovb
mov
fisttp
sub
inc
or
(bad)
fstp
das
or
cs
xor
pusha
or
sbb
or
aaa
adc
arpl
sbb
cdq
cmp
push
inc
imul
hlt
loop
add
loope
push
outs
push
adc
test
dec
inc
pop
ins
and
aas
inc
cmp
push
lea
(bad)
push
js
xor
push
jbe
push
das
pop
(bad)
lock
shr
sbb
mov
aam
push
js
push
xchg
cmp
jp
push
mov
(bad)
das
jmp
add
out
push
ss
jb
inc
ja
or
and
adc
daa
sbb
xlat
mov
sub
sbb
jae
fcomp
pop
push
cmp
xor
xor
ins
push
push
loop
pop
cs
cmp
and
adc
and
dec
sbb
inc
and
adc
ss
push
adc
push
movaps
and
mov
pop
cmp
and
adc
push
sbb
cwde
adc
push
mov
sub
cmp
and
and
jno
or
sbb
adc
dec
cmp
inc
sub
jmp
mov
(bad)
call
outs
xor
dec
sub
xor
push
jae
or
pusha
adc
add
sub
mov
sbb
adc
cwde
outs
popa
jp
dec
dec
rol
xor
sbb
mov
es
sbb
aaa
pop
cmp
retf
lock
add
leave
xor
sbb
mov
test
adc
pop
js
inc
fdiv
jo
add
adc
push
sbb
inc
or
mov
sub
sti
scas
cli
inc
cmps
dec
or
dec
sbb
outs
cmps
pusha
js
add
push
mov
cmp
cmp
push
adc
lock
add
jae
in
jmp
rcl
adc
ret
adc
pop
xor
or
mov
mov
adc
sub
(bad)
sub
pop
stos
test
and
xor
cmps
pusha
xchg
std
mov
idiv
and
or
push
or
(bad)
jg
add
push
sub
movs
mov
(bad)
jmp
or
ror
or
sbb
push
adc
inc
adc
or
dec
push
inc
adc
ret
mov
push
or
mov
sub
sub
das
xor
push
pop
bound
xor
(bad)
(bad)
call
movs
rcr
call
and
dec
push
sub
and
and
or
sbb
or
mov
aas
dec
and
xor
cmp
inc
sub
dec
mov
inc
xchg
xor
dec
adc
stos
scas
push
jg
mov
jl
sbb
sbb
mov
inc
aas
je
inc
pop
sbb
cs
jo
(bad)
dec
or
movs
xchg
adc
nop
and
jg
adc
dec
or
push
push
xor
dec
cmp
xor
sub
aas
sbb
lock
sbb
mov
or
ss
js
add
shr
and
mov
test
adc
fstp
dec
in
adc
adc
mov
das
or
dec
dec
out
adc
inc
adc
adc
lock
pop
cmp
cmp
pop
aaa
sub
jo
push
mov
pop
adc
mov
or
sbb
or
dec
or
hlt
(bad)
dec
ss
adc
sbb
pop
and
jmp
out
or
adc
add
cli
and
lock
data16
in
and
call
dec
sbb
and
mov
dec
push
push
xor
adc
adc
pop
and
or
adc
clc
imul
xor
and
push
ret
sbb
cmp
inc
or
aaa
nop
outs
outs
call
or
fs
cmp
xchg
pusha
test
ds
rol
fstp
jo
mov
in
adc
shl
adc
repz
data16
pop
pop
jo
ret
add
les
and
and
or
les
rcl
stos
push
adc
push
ins
mov
call
scas
sbb
or
jecxz
aam
cdq
shl
(bad)
mov
adc
add
aas
push
outs
aaa
unpckhps
jae
sbb
pop
and
(bad)
mov
xor
push
push
and
dec
loopne
xor
sbb
adc
adc
or
mov
pop
and
sbb
or
add
jne
addps
cmp
sbb
pop
pop
inc
pop
sub
mov
inc
xor
push
push
pop
push
inc
sbb
(bad)
fild
and
es
dec
aam
push
dec
jno
das
dec
test
jne
aad
push
cld
and
movs
sub
pop
jl
out
pop
pop
imul
lock
add
adc
xor
ror
and
out
test
retf
adc
adc
inc
fadd
jnp
mov
sub
test
inc
stos
xor
push
dec
jmp
(bad)
call
push
pop
cmps
push
xor
mov
or
pop
mov
xchg
jg
cmp
adc
loopne
les
fwait
aam
pop
inc
das
adc
imul
int
sbb
fwait
sub
and
sub
and
sub
sub
xor
push
push
lods
or
xchg
sub
and
adc
cmp
pop
mov
sub
or
movhps
cmp
test
pop
mov
sbb
inc
and
popf
and
pop
adc
cmp
push
and
pop
add
aas
mov
jb
cmp
sub
int
dec
adc
jbe
pop
push
aaa
adc
dec
push
je
dec
inc
sbb
aas
add
inc
jg
jmp
or
ss
or
adc
jns
push
push
or
jmp
aaa
dec
push
mov
lock
cdq
inc
pop
mov
add
mov
sub
dec
sub
retf
or
sbb
sar
inc
adc
sub
adc
inc
push
and
pop
sbb
push
pop
add
or
push
mov
add
sub
pop
cli
pop
and
mov
jl
sbb
fwait
icebp
out
ret
enter
adc
sbb
js
adc
and
push
sbb
or
push
add
adc
jp
stos
das
xor
int3
adc
lock
sbb
gs
mov
shl
arpl
(bad)
fidiv
scas
sbb
mov
es
movs
call
arpl
or
cmp
push
pop
dec
dec
bound
cmps
ins
xor
cmp
jns
jae
dec
mov
pop
addr16
ds
and
clc
inc
aad
mov
inc
xor
and
sbb
ja
ins
and
adc
cmp
gs
sub
or
outs
pop
call
aas
adc
pop
or
and
or
(bad)
jmp
and
or
pop
jb
aas
sub
sub
sbb
(bad)
xor
xchg
in
sbb
movs
xchg
push
push
jmp
retf
das
adc
sbb
pop
push
inc
jl
inc
dec
add
(bad)
dec
popf
and
xor
inc
or
adc
es
push
mov
pushf
or
adc
adc
(bad)
adc
and
and
sub
(bad)
adc
call
pop
inc
test
sbb
je
inc
pop
xchg
xor
xor
mov
cld
sub
jmp
cs
fisttp
dec
cmp
inc
lock
outs
adc
(bad)
mov
sub
outs
push
sbb
sbb
mov
cs
dec
cdq
bound
dec
push
sbb
mov
push
movhps
stos
test
pusha
and
xor
or
sbb
(bad)
mov
xor
cmp
pusha
cwde
dec
jne
adc
sahf
or
push
mov
loopne
sbb
mov
push
aas
sbb
inc
jl
dec
mov
or
mov
sub
and
sub
test
inc
es
sbb
push
(bad)
int
out
push
and
popa
ins
ins
bound
sbb
(bad)
dec
adc
push
xor
push
aaa
jle
pop
push
es
(bad)
mov
and
xor
inc
dec
aaa
xor
int3
xchg
push
sbb
mov
adc
js
xchg
cmp
data16
inc
jns
popf
jg
aam
in
adc
mov
invd
jmp
sbb
and
out
adc
cmp
dec
xor
das
cmp
aas
mov
clc
lock
test
loope
jle
or
mov
mov
sub
adc
sar
and
xor
xor
sbb
test
(bad)
jg
sbb
inc
inc
imul
sbb
push
sbb
stos
inc
add
fild
jb
push
add
dec
or
fisttp
inc
sbb
fs
inc
or
pop
fidivr
mov
mov
jns
sub
cmovns
push
sub
push
and
popa
adc
inc
cmp
imul
dec
cs
inc
pop
je
or
inc
or
call
inc
cmp
sbb
sbb
push
push
mov
aaa
imul
sar
or
pop
push
inc
mov
ss
adc
mov
inc
dec
push
or
cld
pop
push
test
adc
sbb
dec
nop
sub
(bad)
cmp
ins
add
push
push
push
and
sbb
or
sbb
jp
push
addr16
cmp
(bad)
push
jp
sbb
mov
adc
inc
xchg
es
int3
pushf
add
sbb
cmp
push
and
icebp
jmp
jmp
dec
mov
push
ret
pop
sub
mov
cmp
adc
loope
adc
inc
add
out
or
and
adc
xor
(bad)
inc
aaa
inc
pop
adc
cmp
or
(bad)
outs
or
or
add
add
jmp
test
and
sbb
xchg
xor
(bad)
out
adc
movs
sbb
stos
mov
or
das
and
adc
mov
icebp
push
xchg
pop
popa
adc
lods
dec
add
cmp
add
mov
xor
sub
(bad)
jg
scas
and
lods
pop
push
das
jl
cmp
xor
adc
daa
xor
or
ret
xor
push
or
push
das
(bad)
(bad)
(bad)
call
sub
xor
push
cvtpi2ps
popa
xor
or
ss
or
pop
sbb
cmp
jmp
jmp
cmp
push
and
or
inc
jmp
sub
or
dec
cwde
cmp
and
lock
(bad)
aas
clc
and
or
push
inc
sub
cld
(bad)
(bad)
jmp
das
pushf
cmp
and
inc
dec
fwait
adc
cmp
xchg
mov
xor
or
mov
inc
xor
cld
mul
aaa
inc
js
ss
push
inc
and
ins
lock
mov
push
popf
add
test
dec
and
mov
adc
ds
fsubr
push
or
or
cli
adc
aaa
push
sbb
cmps
dec
dec
mov
lea
fst
adc
fidiv
xor
pop
sahf
push
call
mov
cs
push
mov
adc
test
adc
adc
mov
add
ds
mov
outs
dec
push
dec
adc
fs
cmp
dec
mov
sub
adc
shl
sub
and
add
cmp
mov
pop
adc
adc
aad
xchg
test
pop
sbb
or
sbb
jp
dec
adc
mov
dec
cmp
cmps
pop
add
dec
sub
cmc
aaa
cdq
inc
cli
mov
imul
and
jg
cmp
or
(bad)
sbb
pop
cmp
or
push
ret
sub
add
aas
imul
sbb
cmp
or
jne
pop
test
or
or
and
dec
les
or
pop
mov
jp
jge
jg
add
cmp
mov
pop
cmps
cld
mov
jl
out
sbb
ins
sbb
xchg
sbb
ja
or
or
adc
mov
mov
pop
adc
cmc
mov
pushf
or
outs
sub
push
sub
bound
out
add
or
loope
neg
jge
sbb
call
mov
adc
popf
adc
push
ds
sub
call
dec
daa
mov
or
or
or
hlt
jg
or
sub
addr16
fs
stos
jbe
push
adc
mov
(bad)
call
sub
ja
sbb
sub
lock
lock
or
sub
mov
movs
inc
stos
adc
daa
and
test
inc
repnz
clc
fwait
or
sub
sub
cmp
int
push
inc
(bad)
(bad)
mov
adc
pop
cmp
push
sbb
and
adc
push
lock
(bad)
jg
cld
jns
gs
call
inc
sub
lods
dec
daa
sub
adc
adc
movs
jge
xchg
pop
mov
mov
jo
sbb
addr16
inc
les
out
xor
call
cmp
lock
(bad)
jmp
sbb
add
push
sbb
xor
sbb
mov
mov
push
das
sar
sbb
cmp
lahf
or
push
sub
inc
dec
or
or
push
inc
or
sbb
es
fnclex
jbe
mov
movs
jg
adc
jnp
jno
sub
stos
jb
push
xor
sbb
test
xor
push
outs
dec
jge
adc
mov
pusha
xor
adc
xchg
inc
(bad)
jmp
sub
mov
and
mov
push
je
jecxz
and
xor
and
pop
pusha
jp
inc
jl
fild
xor
adc
arpl
push
fs
xor
dec
and
pop
cwde
add
add
and
mov
fild
mov
sbb
js
or
ss
jmp
imul
imul
xchg
mov
repnz
or
cmp
das
and
mov
dec
and
mov
mov
and
sar
int3
out
dec
sbb
cmp
pop
adc
pop
hlt
out
and
dec
dec
lock
cdq
and
or
sar
jmp
or
sbb
fadd
jb
pop
adc
cmp
cwde
push
test
int
lds
jo
inc
lea
(bad)
jno
pusha
xor
xchg
or
cld
push
jo
lea
(bad)
add
cld
(bad)
dec
or
xor
xor
and
adc
sbb
adc
cld
test
and
push
inc
sub
pop
mov
dec
push
aam
push
adc
mov
imul
sub
and
xor
ret
lods
inc
pop
(bad)
call
xor
inc
mov
mov
xor
jge
sbb
sbb
aaa
and
sbb
std
or
lock
adc
adc
push
test
cmp
lock
add
dec
loop
sbb
pop
test
sub
shl
sub
mov
lock
jmp
inc
push
cmp
lock
test
add
es
pop
or
add
jmp
enter
rol
xchg
sbb
mov
rol
dec
mov
xchg
sbb
sbb
lods
adc
mov
add
or
sub
sub
and
mov
add
popa
or
and
sub
iret
pop
scas
data16
(bad)
out
push
inc
sub
pop
mov
pop
inc
inc
orps
push
std
call
aam
sbb
loopne
dec
or
xor
gs
loopne
(bad)
sub
or
adc
and
adc
push
daa
sub
pop
cmp
ret
mov
and
inc
mov
and
adc
inc
dec
pop
xor
and
jecxz
cli
add
pop
stos
test
adc
sbb
sbb
inc
daa
adc
lock
jl
adc
adc
js
ds
dec
test
push
hlt
mov
adc
or
or
xor
sbb
loop
std
fisttp
mov
test
or
inc
adc
jl
es
inc
inc
bndstx
inc
xor
loopne
call
and
xor
and
inc
jno
call
or
xor
arpl
mov
pop
sub
or
cmp
xor
das
cmp
and
(bad)
call
or
add
cmp
dec
cmp
sub
jmp
sub
or
xor
adc
or
imul
(bad)
dec
pop
sub
pop
inc
sub
push
cs
pop
xchg
icebp
inc
shl
arpl
dec
adc
outs
jg
adc
push
sbb
jb
or
push
dec
call
cld
jmp
cmp
or
ds
sub
mov
push
xchg
dec
xor
inc
inc
imul
arpl
cmp
mov
or
ds
mov
shl
jo
ss
push
sub
popa
inc
inc
and
sbb
repnz
ss
(bad)
(bad)
push
popf
cmps
pop
cs
xor
pusha
pop
push
mov
into
sub
cmp
sub
add
dec
(bad)
(bad)
push
xor
push
add
push
mov
xor
and
pushf
or
outs
out
sbb
inc
adc
ret
out
daa
adc
adc
clc
cmp
or
stos
inc
cmp
mov
push
cmp
sbb
mov
adc
cmp
sbb
mov
call
or
push
inc
ins
cwde
or
pop
and
sbb
ins
mov
sbb
dec
and
or
(bad)
outs
mov
pop
sbb
sub
ss
es
mov
sbb
popa
loop
push
leave
push
add
daa
or
jg
call
jns
seta
pop
cvtps2pi
xor
sbb
sbb
pop
adc
pop
adc
pop
xor
dec
and
(bad)
jg
cli
xchg
jp
(bad)
cmovge
ins
aas
lock
pop
das
xlat
xlat
dec
int
ret
inc
outs
lock
pop
sbb
sbb
dec
inc
adc
xor
bound
call
adc
ds
pop
movs
dec
sbb
pop
sbb
xchg
sbb
jno
mov
or
sub
ret
and
shl
pop
adc
add
(bad)
(bad)
call
jl
mov
adc
and
aas
sbb
and
pop
or
push
sahf
mov
pop
cs
jo
inc
pop
jae
or
or
inc
inc
inc
sub
adc
sub
(bad)
dec
push
cmps
push
jmp
push
and
sbb
adc
inc
dec
mov
(bad)
dec
or
inc
sbb
dec
or
push
inc
push
add
das
add
or
and
and
mov
push
push
sub
cmp
or
(bad)
call
pusha
or
outs
inc
pop
das
or
jne
jne
pop
cs
push
mov
das
sbb
push
clc
adc
xor
jp
adc
or
xor
pop
jle
push
add
pop
enter
sub
and
or
imul
sub
mov
adc
(bad)
fwait
mov
rcr
cmp
cmp
xor
stos
bound
or
dec
aaa
cli
inc
xor
dec
jg
mov
mov
adc
inc
sub
or
sub
sbb
adc
inc
sub
rcr
pop
jns
xor
or
mov
jmp
es
adc
xor
push
ss
xchg
call
addr16
xchg
in
pop
cmp
xor
or
push
push
inc
or
mov
mov
pop
dec
ja
mov
pop
push
movups
sbb
lea
mov
push
arpl
push
or
sbb
sub
call
js
mov
mov
cmp
addr16
add
inc
mov
sub
push
mov
add
xchg
pop
aaa
inc
cmp
or
leave
push
aaa
dec
sbb
xor
pop
sub
jbe
jno
inc
and
and
call
femms
adc
adc
cmp
add
and
mov
(bad)
ffree
adc
clc
sbb
dec
cmp
lock
out
out
push
pop
jp
lock
push
ins
lods
mov
sbb
jae
add
push
or
mov
hlt
or
push
cs
lods
push
arpl
gs
and
pop
jno
addr16
inc
xor
aam
and
and
pop
hlt
aaa
cmp
cmp
xor
or
or
loope
mov
or
adc
lea
or
aaa
loope
icebp
fistp
or
cmp
(bad)
movs
adc
xor
adc
or
sub
mov
(bad)
adc
inc
push
mov
adc
and
push
push
or
es
xor
adc
pop
cmp
sub
adc
inc
jl
inc
push
ffreep
mov
xor
adc
push
sub
int
mov
sbb
inc
std
(bad)
pusha
loop
inc
push
(bad)
adc
inc
sub
mov
mov
cmp
push
sub
sbb
jmp
adc
outs
sbb
xor
jle
sub
adc
or
aaa
or
and
call
pop
xchg
dec
add
cmp
inc
jmp
and
jb
sahf
fs
sbb
jle
int
sbb
sub
inc
jo
data16
outs
or
adc
inc
sbb
sbb
mov
in
rcl
test
sub
cmp
and
adc
sub
xor
or
adc
inc
(bad)
or
push
bswap
or
xor
mov
sub
adc
jmp
push
js
imul
cmp
jmp
out
data16
lods
or
push
or
(bad)
ins
ror
push
arpl
and
sub
pop
sub
push
sub
mov
adc
or
inc
or
(bad)
dec
mov
loope
jp
pusha
pop
push
sbb
and
push
sbb
and
or
sub
sub
imul
or
scas
or
sbb
aam
or
jae
imul
sub
sbb
inc
inc
push
or
bound
inc
das
push
pop
xchg
and
add
xor
fcomip
or
or
xor
adc
jmp
sub
(bad)
call
into
or
sub
sbb
or
push
push
je
adc
cld
(bad)
push
or
and
and
das
adc
ss
pop
mov
inc
push
or
sub
xor
es
xor
mov
and
je
or
sub
dec
xor
and
jmp
aas
or
push
and
mov
ds
(bad)
fidivr
push
inc
push
aaa
stos
inc
push
in
and
pop
xchg
mov
sbb
imul
mov
shl
scas
ja
sahf
sub
loop
adc
push
sbb
nop
fdiv
sbb
xchg
or
sbb
push
out
call
cmp
ins
or
and
add
jmp
pop
pop
or
lock
mov
xchg
mov
dec
and
inc
add
push
mov
mov
fld
mov
fwait
add
push
hlt
mov
(bad)
push
xchg
mov
fdivr
adc
mov
sbb
cli
cmp
and
sbb
or
push
popa
or
jmp
pop
hlt
adc
pop
ins
aad
aaa
or
aas
sbb
push
and
ja
fwait
push
pop
das
sbb
inc
adc
add
ja
fs
and
adc
movaps
es
sbb
or
and
aad
add
xchg
adc
inc
dec
movs
inc
sbb
push
shl
push
pop
xor
adc
rcr
(bad)
adc
adc
pop
adc
pcmpgtb
adc
xchg
push
enter
mov
test
loop
fcomp
push
jnp
je
sub
jg
jb
sbb
cmp
pusha
cmp
fnstsw
pop
add
and
sbb
and
jge
or
mov
lods
push
dec
dec
sub
add
sub
es
add
fistp
(bad)
and
imul
sub
adc
pop
test
pop
adc
aaa
inc
adc
(bad)
adc
dec
xchg
sbb
pop
push
mov
ficomp
pop
or
ror
sbb
sbb
pop
push
add
sub
and
adc
pop
or
ins
ds
in
adc
sub
sub
fs
pop
add
call
sbb
cmp
push
add
inc
adc
dec
sbb
xchg
jae
or
in
push
pop
popa
cld
or
sbb
jae
mov
xchg
shr
arpl
test
(bad)
jg
or
adc
sbb
and
adc
push
adc
xchg
icebp
inc
lods
and
xor
xchg
adc
cld
mov
cmp
daa
jb
scas
push
inc
xchg
or
pop
xlat
adc
sbb
cmp
cmp
xor
ret
test
or
sub
cmp
and
sub
adc
adc
jb
pop
ds
push
call
(bad)
(bad)
or
jb
inc
dec
or
fs
dec
lock
adc
xchg
dec
and
xor
add
pop
add
das
(bad)
mov
gs
adc
ss
cmp
pop
push
cmp
sbb
and
sbb
xor
and
jecxz
mov
sub
and
inc
cwde
add
lods
data16
push
addr16
pop
pop
loop
push
fdivr
xor
lods
push
arpl
adc
std
mov
adc
xor
aas
sbb
cmp
add
push
inc
push
sbb
jo
(bad)
inc
cmovne
mov
push
jl
dec
bound
or
push
and
push
idiv
jl
xor
and
pop
sub
sbb
ud2
ret
or
es
fistp
jo
adc
sbb
jnp
shl
mov
(bad)
add
loopne
or
cmp
push
mov
xor
xchg
(bad)
aam
sub
js
or
push
inc
cld
add
js
pop
sbb
push
push
ss
pop
jmp
rcl
inc
adc
inc
xor
sub
or
fisttp
adc
xor
sub
or
sub
rcr
(bad)
adc
inc
or
inc
xchg
inc
inc
add
add
inc
js
pop
aas
cmp
adc
lds
or
pusha
sub
push
mov
pop
pop
mov
add
add
jae
gs
push
inc
and
cmp
(bad)
push
cld
sbb
push
pushw
sbb
daa
dec
dec
add
push
aas
push
and
sub
inc
pop
hlt
add
xor
sbb
jle
pop
add
call
sbb
inc
and
mov
or
call
inc
sub
inc
push
xor
adc
adc
aas
or
adc
sbb
push
adc
add
cmp
adc
mov
and
ret
in
aam
jp
sub
push
aas
nop
pop
and
mov
aaa
sub
sub
adc
inc
sbb
mov
or
push
adc
es
clc
(bad)
mov
cmp
push
inc
pop
sub
sbb
or
(bad)
push
std
scas
push
and
xor
pop
ss
adc
sub
xor
dec
sub
std
mov
outs
or
cmp
das
inc
daa
pop
dec
sub
lock
(bad)
jmp
sub
jle
and
es
or
leave
enter
push
dec
cli
mov
push
push
pop
or
xor
adc
fisubr
es
pop
icebp
sbb
out
out
dec
push
or
sbb
sub
sub
fild
dec
shl
and
push
pop
push
jg
test
add
add
or
pushf
mov
jb
cdq
fsub
(bad)
out
adc
pop
cmp
sub
add
fisttp
aaa
sbb
jae
js
cld
imul
lea
inc
arpl
cld
mov
jp
push
pop
jp
add
gs
gs
sbb
clc
fcomip
pop
jb
pop
(bad)
or
xor
or
and
call
or
dec
cmp
lods
cmp
add
mov
scas
pop
cmp
or
mov
ss
push
lock
dec
xor
ss
lds
dec
adc
and
cmp
pop
dec
dec
mov
or
pop
or
adc
adc
or
sub
sbb
inc
add
cli
ins
pop
push
xchg
or
xchg
add
daa
and
or
push
adc
mov
mov
(bad)
cmp
sbb
push
sub
sbb
sub
or
and
or
cmp
or
loope
jmp
dec
and
stos
das
pop
movs
cmp
stos
movs
cmp
mov
ds
jl
adc
test
cmp
rcl
loopne
sbb
loope
or
sub
mov
lock
(bad)
xor
dec
push
adc
ja
ds
clc
adc
sbb
cmp
jl
psubq
cmp
adc
push
adc
and
inc
inc
repnz
adc
mov
cwde
xor
adc
imul
or
shl
jg
arpl
(bad)
push
sub
inc
or
sbb
and
jbe
mov
adc
and
and
pop
adc
dec
aam
xor
adc
adc
and
iret
sub
adc
sbb
jp
ins
jmp
sti
or
or
push
pusha
push
cmp
add
sub
mov
cmp
add
add
xor
dec
aaa
sbb
and
fdiv
ret
push
xchg
and
sub
add
or
inc
pop
jbe
jmp
out
mov
pop
pop
arpl
and
adc
adc
add
clc
adc
or
or
pop
xchg
jmp
add
or
scas
mov
sub
mov
jne
add
adc
shl
cmp
test
adc
add
and
in
call
sbb
lock
xchg
sbb
rcr
pop
sub
dec
retf
das
sub
cmp
lock
xor
jbe
int
adc
dec
add
das
xchg
inc
or
pop
push
jmp
ret
dec
inc
in
(bad)
cmp
and
jmp
in
mov
sbb
jmp
and
xor
outs
pop
jne
add
shl
sub
in
inc
call
adc
dec
dec
push
ret
cs
pushf
push
adc
sub
jmp
push
and
or
adc
cmp
clc
das
inc
mov
push
push
jo
aaa
or
or
mov
jae
(bad)
retf
ins
and
ss
push
or
inc
mov
imul
or
and
or
and
(bad)
les
add
stos
xor
ins
test
add
add
inc
adc
das
pop
or
pop
push
rol
adc
sub
out
(bad)
mov
push
push
pop
fild
cmp
xchg
pop
mov
pop
sahf
sub
fcmovbe
xor
inc
pop
popf
test
adc
or
pop
rcl
shl
imul
xlat
mov
push
sub
add
or
outs
xchg
js
arpl
or
pop
sbb
push
push
push
push
cli
add
push
or
xor
or
push
mov
xor
inc
sub
cmp
jo
xchg
adc
push
push
stos
inc
xchg
gs
add
ss
pop
lods
mov
mov
test
jp
dec
or
jg
inc
ror
xor
xor
or
and
adc
je
add
fidiv
push
fs
lods
push
loopne
rcr
push
add
pushf
add
or
les
pusha
lock
cmc
or
sub
mov
mov
push
push
or
aaa
ins
cli
sub
sar
and
adc
test
pop
ds
add
arpl
jmp
push
sbb
imul
sub
sub
adc
dec
mov
ins
adc
jg
cmp
sbb
push
or
test
scas
push
es
ins
dec
loopne
add
push
xor
inc
rcl
jns
add
ds
sbb
inc
shr
or
or
(bad)
fadd
outs
cmp
push
push
call
jb
or
adc
adc
push
pop
inc
mov
jnp
lahf
enter
cdq
outs
or
add
loopne
sbb
imul
fild
imul
pusha
(bad)
push
std
push
dec
scas
or
sub
ins
cmp
(bad)
mov
cmp
dec
inc
dec
or
push
adc
pop
loop
stos
mov
pop
sub
push
or
loopne
push
mov
sbb
cld
or
outs
aam
xor
pop
pop
pop
fs
and
in
and
cmp
arpl
data16
test
(bad)
sub
mov
cwde
or
rcr
mov
cmp
xor
or
cmp
pop
adc
call
push
je
mov
lock
add
fdivr
(bad)
dec
sbb
pop
pop
pop
sbb
sbb
jle
stos
add
sahf
add
adc
push
jg
lock
inc
push
adc
sbb
inc
sbb
or
mov
adc
clc
aad
and
or
and
mov
stos
sbb
loopne
or
sub
xchg
adc
sbb
add
add
dec
push
add
daa
or
fsub
xor
fcmovnu
hlt
cmp
xor
xor
sub
sub
cs
pop
xor
or
and
adc
and
cs
and
inc
push
and
pop
sbb
mov
(bad)
ja
add
sub
and
and
xor
adc
xor
inc
xor
jbe
and
es
xor
sub
cmp
rcr
xor
cmp
cmp
mov
jl
push
inc
sub
inc
xor
arpl
or
mov
inc
and
inc
sub
out
add
mov
mov
iret
adc
cmp
xor
jnp
add
repnz
xor
pop
push
dec
retf
xchg
jle
sub
sub
(bad)
div
xor
mov
sub
inc
sub
xor
push
xor
loopne
dec
dec
sub
sub
push
cmp
or
test
inc
xor
cs
(bad)
mov
les
pop
cdq
cs
sub
retf
sub
ret
and
ins
in
xor
pusha
inc
jne
inc
cmp
xor
xor
xor
xor
or
int
mov
xor
dec
sub
jg
fld
test
dec
and
ret
dec
xor
imul
xor
dec
mov
dec
ins
cmp
jle
sti
dec
cmp
ss
pop
xor
and
mov
xor
sub
sub
je
aas
and
ss
cwde
sub
stos
test
loop
cmp
test
ins
mov
into
enter
and
adc
push
pop
push
add
cmp
fcomp
(bad)
xor
cmp
push
and
or
ds
push
push
jp
cwde
jl
cwde
pop
push
sub
jne
jnp
jb
fld
es
aaa
sub
xor
or
mov
ins
out
aas
sub
cmp
in
or
pop
ret
ja
cmp
xor
call
jle
shl
push
dec
xchg
(bad)
mov
xor
shl
sub
xchg
sub
outs
mov
je
sub
scas
les
cwde
shr
sahf
cmp
sbb
push
pop
aam
pusha
in
fisttp
add
adc
inc
dec
xor
fmul
cmp
push
mov
sbb
imul
and
outs
aas
sub
dec
imul
cmp
mov
imul
es
cmp
cmp
jmp
xor
cmp
xor
cmp
mov
sub
add
mov
xchg
pop
xchg
les
(bad)
mov
cmp
repnz
dec
cmp
(bad)
cmp
in
dec
pop
push
daa
cmp
push
das
sub
dec
push
xchg
inc
sub
dec
sub
pop
inc
mov
cs
inc
inc
pop
hlt
dec
scas
sbb
aaa
push
inc
pusha
dec
xor
push
cmp
jmp
ficom
and
inc
cmp
sub
arpl
inc
and
sub
scas
xchg
lods
jmp
cmp
push
cdq
mov
xor
sub
cmp
daa
jae
pop
sub
add
or
push
xor
xor
xor
xor
cmp
mov
ja
jle
ins
ss
dec
dec
push
cmp
inc
aaa
or
mov
jg
jp
fbstp
cmp
push
aam
add
xor
popa
pop
aas
std
vprotb
fsub
lock
add
scas
push
daa
lock
outs
mov
lods
mov
sbb
test
inc
int
sti
jg
cdq
add
push
dec
ds
jmp
or
jb
push
xor
add
rcl
push
call
inc
adc
mov
pop
fnstenv
daa
mov
cmps
(bad)
mov
mov
mov
test
out
add
lock
mov
or
ja
lock
mov
test
(bad)
nop
push
dec
add
xor
add
lahf
adc
stos
les
inc
pop
lea
or
sub
jno
fild
popa
push
mov
mov
or
ins
dec
pop
adc
jmp
add
fld
jo
pop
movs
addr16
mov
cmp
xor
add
ret
pop
xor
stos
inc
fistp
or
pop
mov
xor
cmp
lods
(bad)
lock
cwde
push
jb
mov
push
pop
lock
xor
pop
inc
xor
mov
mov
xor
sbb
pop
and
add
adc
in
test
add
mov
mov
add
pushf
adc
or
int3
mov
lea
jmp
lock
or
sub
push
sbb
push
add
push
or
push
add
ret
xchg
add
adc
enter
xor
or
push
or
mov
aaa
stos
mov
or
call
sub
leave
sbb
cmp
pop
sub
mov
mov
cmp
imul
mov
retf
cmps
push
(bad)
cmp
aaa
int
inc
dec
call
scas
or
add
sbb
push
out
ja
xchg
or
test
adc
push
and
adc
loop
mov
rcr
jb
or
or
or
test
rol
jge
xor
and
add
arpl
mov
jmp
pop
adc
aam
pop
sub
inc
(bad)
jb
es
(bad)
add
add
jae
imul
mov
mov
in
xor
mov
push
je
jbe
mov
add
or
lahf
fcmovu
inc
imul
add
dec
lods
add
sbb
xchg
adc
imul
xor
lea
add
mov
stos
adc
daa
jp
adc
test
ins
pop
jnp
stos
pop
das
xor
dec
cmp
mov
push
hlt
or
fstp
adc
mov
sbb
pop
mov
dec
add
or
sub
or
or
data16
mov
xor
xor
push
cmp
cmp
add
sbb
pushf
scas
neg
add
add
inc
add
lods
ror
pop
xchg
pop
add
add
enter
xor
adc
jmp
arpl
pop
or
fild
sbb
push
mov
or
or
pop
jp
aam
jge
fadd
repnz
sbb
cmpxchg
xlat
in
push
cmp
adc
xor
sbb
pop
adc
adc
sbb
add
cmp
xor
mov
push
lds
jge
out
push
sbb
xchg
add
and
cmp
adc
jl
test
lds
pop
inc
in
push
xor
add
sub
sbb
add
inc
nop
gs
aad
ficom
xchg
popf
test
jo
or
adc
or
cmp
aam
pop
adc
and
int3
mov
stos
jmp
inc
sub
ficom
inc
mov
stos
nop
mov
add
sbb
adc
mov
mov
mov
ret
dec
xor
sub
and
inc
add
leave
test
mov
nop
repnz
or
sub
mov
add
outs
imul
bound
mov
or
lahf
mov
sbb
or
add
push
sti
add
in
mov
mov
xchg
sub
leave
adc
or
add
and
or
jo
push
inc
push
shr
pop
sbb
xor
xchg
inc
xor
and
xchg
sbb
add
mov
or
or
pop
or
mov
ret
or
movs
stos
cmp
out
and
xor
or
push
xor
inc
stos
fldcw
add
dec
push
ret
sbb
cmps
push
dec
mov
pop
adc
or
sbb
sbb
or
sbb
sub
fild
mov
sti
and
aam
push
test
les
add
sbb
sbb
sub
xor
inc
xchg
fcmovnb
dec
addr16
call
movs
sub
adc
or
sbb
dec
fisub
jge
out
movs
(bad)
and
push
js
jo
sub
adc
shl
dec
dec
xor
sahf
cmp
(bad)
int
xlat
stos
adc
push
jg
stc
mov
into
sbb
push
or
cmp
sub
adc
mov
inc
mov
and
jle
inc
adc
adc
add
add
sub
je
push
or
test
sbb
clc
loope
cwde
test
aaa
pop
mov
adc
dec
or
repz
add
cwde
pop
js
or
jmp
push
lahf
xlat
or
push
ins
push
or
sub
push
sub
or
sub
sbb
test
inc
jae
mov
dec
and
inc
push
or
mov
push
xor
gs
call
or
fld
add
inc
movs
(bad)
stos
adc
mov
inc
daa
stos
sbb
stos
ficom
mov
out
add
adc
jno
sbb
adc
mov
mov
mov
xor
cmp
dec
jae
or
fdiv
and
xor
sub
stc
xor
pop
mov
mov
mov
mov
add
stos
les
mov
clc
outs
inc
add
adc
jno
push
inc
and
adc
bound
stos
dec
cmp
mov
jo
add
adc
mov
adc
xchg
push
push
rcl
and
mov
or
lods
or
inc
mov
or
adc
ja
adc
or
push
cmps
push
push
aad
add
mov
xor
in
push
adc
cmp
cmps
adc
push
sbb
add
dec
xor
sub
inc
inc
add
sbb
push
xor
add
(bad)
into
sbb
inc
push
xor
adc
sub
ins
sub
test
add
xor
sbb
xor
inc
add
and
sub
and
(bad)
repz
aam
(bad)
sub
shr
loop
sub
adc
mov
and
adc
mov
pop
fwait
inc
add
cmp
push
rcl
pop
push
add
sbb
sub
inc
rcr
retf
adc
add
and
sub
xchg
test
ds
push
pop
or
push
jo
inc
rcl
in
and
je
or
sub
mov
dec
add
call
mov
add
mov
xlat
and
push
and
sbb
stos
push
pop
sbb
add
(bad)
lock
cmp
adc
add
ins
pop
or
mov
add
or
adc
not
and
push
sub
add
adc
add
test
stos
jo
add
or
mov
jl
stos
mov
rol
mov
pop
ror
cmp
sub
cmp
add
mov
adc
and
inc
dec
pop
or
adc
repz
xor
or
mov
lock
or
lea
lock
retf
add
mov
jp
cmp
add
icebp
mov
add
mov
cmp
ins
sub
retf
add
inc
adc
push
push
pop
int3
jb
loopne
leave
je
outs
xchg
or
xchg
or
or
push
mov
sbb
cmp
push
mov
mov
inc
pop
pushf
aam
xchg
sbb
jne
cmps
sbb
dec
sub
out
push
cmp
mov
adc
adc
jnp
jbe
adc
or
sbb
add
add
fcmovnu
repz
das
lds
sbb
pop
add
fnstsw
xlat
xor
mov
shl
punpcklwd
mov
jnp
add
popa
ins
sub
pop
dec
imul
inc
adc
adc
mov
adc
push
ins
rcl
jecxz
mul
mov
sub
mov
cdq
sub
and
stc
pop
packssdw
and
adc
imul
fwait
mov
ins
or
std
jns
jne
test
push
sub
pop
or
(bad)
mov
pusha
aam
or
dec
adc
les
mov
add
mov
(bad)
in
sub
stos
popa
jne
sub
sti
scas
aad
adc
sub
and
inc
stos
and
xchg
and
vmwrite
jns
mov
push
dec
mov
add
(bad)
pop
mov
sbb
dec
or
dec
mov
sbb
xor
inc
lea
ud2
adc
dec
shl
sub
mov
pop
dec
dec
jmp
adc
cmp
sbb
sub
cwde
push
das
sub
mov
xor
lods
fisubr
or
adc
gs
mov
aad
inc
mov
inc
mov
(bad)
ror
adc
mov
imul
adc
(bad)
jecxz
adc
aad
pop
push
push
pop
sbb
or
int
dec
rcr
ret
jg
and
xor
push
dec
mul
inc
ret
pop
mov
cmc
xor
cmp
sbb
sub
addr16
and
cdq
(bad)
(bad)
or
xor
and
adc
sbb
pop
jnp
push
add
cmp
adc
xchg
adc
fidivr
ja
sub
sbb
inc
or
jno
(bad)
std
sub
sub
add
mov
and
adc
outs
sbb
and
in
pop
dec
mov
imul
lods
sbb
push
fistp
and
pop
retf
xchg
and
add
js
sbb
fst
sub
add
dec
add
or
mov
sti
push
xor
xor
mov
pop
pop
daa
icebp
xchg
cdq
fcmovb
pop
xchg
out
jno
add
cmp
(bad)
and
loopne
rcr
sub
and
ret
pop
in
lods
or
mov
sub
jbe
inc
sub
sbb
inc
inc
out
inc
mov
jnp
or
fld
sar
mov
xchg
mov
sbb
mov
jb
jge
adc
in
push
push
mov
sub
sub
inc
or
or
and
sbb
imul
dec
pop
ins
sub
loope
add
jge
lods
movs
movs
lods
(bad)
or
mov
push
sub
add
xchg
inc
xchg
and
dec
lds
xor
ins
leave
lods
sbb
adc
inc
imul
rol
push
xor
lods
arpl
in
lods
jmp
xor
or
daa
jb
xor
inc
fild
pop
cmp
sbb
adc
imul
ins
and
sbb
pop
push
cmps
pop
mov
mov
sbb
cmps
ins
adc
sub
push
leave
(bad)
mov
(bad)
aad
int
push
mov
mov
(bad)
sbb
adc
mov
aad
fidiv
jne
mov
inc
and
je
mov
sub
ins
ins
cdq
push
pop
sub
adc
ret
sar
sub
sub
std
or
mov
ins
jo
scas
xor
inc
sbb
sub
ja
scas
fcmovnu
jbe
and
sub
mov
add
or
pop
scas
cmp
sub
push
shl
mov
shl
iret
movs
add
pop
or
and
mov
(bad)
ins
push
ins
stos
xor
pop
ins
adc
lods
and
lods
mov
pop
sub
mov
or
es
rol
das
xor
mov
pop
add
sbb
loopne
loopne
cdq
pop
add
sbb
xor
push
or
arpl
cmc
sbb
adc
imul
push
and
popf
cwde
lock
loope
sbb
mov
xchg
mov
add
push
enter
in
les
adc
sbb
and
(bad)
arpl
lea
lahf
xchg
mov
test
add
sbb
add
or
div
or
xor
pusha
jbe
js
or
jns
adc
adc
in
fisttp
adc
xor
or
or
add
mov
imul
sub
sbb
pop
fwait
jmp
add
shr
pop
sbb
pop
jae
mov
call
add
test
inc
mov
dec
and
ss
mov
cmp
pop
sbb
inc
das
mov
aam
xor
mov
add
test
sbb
(bad)
sar
and
test
adc
and
pop
xchg
push
rcl
lods
pop
pop
or
adc
push
mov
jo
lea
xchg
sbb
mov
(bad)
unpckhps
push
adc
push
push
rcr
pop
popa
adc
aad
dec
mov
xchg
mov
adc
xchg
mov
movs
mov
push
or
mov
leave
loope
jl
dec
jns
adc
fbstp
and
push
lock
cmc
xchg
fisttp
fdiv
std
dec
add
xor
or
add
pop
stos
test
aaa
pop
xor
leave
aas
inc
adc
xor
pop
and
mov
mov
fist
add
out
aas
(bad)
shl
inc
retf
repz
neg
and
pop
add
mov
(bad)
push
mov
mov
rol
xor
dec
cdq
push
add
sbb
and
and
add
rol
adc
ins
mov
test
adc
cmp
push
std
fimul
push
in
adc
and
push
je
adc
and
dec
add
pop
mov
inc
mov
mov
cmps
add
dec
dec
movs
bound
xlat
mov
ja
adc
add
bound
stos
inc
mov
adc
test
inc
jno
mov
stos
inc
push
mov
xor
mov
fnstcw
add
dec
in
mov
sbb
jge
xchg
xor
jo
sub
rol
adc
cmovo
adc
dec
dec
mov
aaa
push
movs
add
inc
les
sbb
or
mov
sub
adc
sbb
sub
and
and
sbb
dec
pop
movs
sub
fidivr
sub
dec
sbb
sbb
add
xchg
ins
pop
fist
adc
add
int3
outs
mov
retf
inc
sbb
jg
cmp
cmp
sub
sbb
jo
mov
out
ins
sub
inc
and
and
call
imul
sub
call
push
mov
adc
xchg
and
and
fsubp
sahf
in
adc
jp
and
les
nop
jae
xor
inc
pushf
gs
add
pusha
lods
mov
nop
sub
xor
in
lods
and
sbb
je
mov
add
shl
(bad)
sbb
add
and
xor
fsub
test
ficomp
ins
lock
lods
push
retf
dec
arpl
in
hlt
push
pop
outs
jno
push
or
xor
cmp
sbb
jb
and
or
sub
inc
and
in
push
mov
pop
jmp
pop
jl
xor
enter
mov
ds
pop
or
mov
in
ds
loop
sub
out
pop
mov
push
push
or
inc
sbb
mov
pushf
add
ficom
(bad)
leave
cmp
cmp
shl
sbb
mov
mov
das
arpl
ret
sub
push
daa
sar
push
pop
sub
sbb
sbb
lock
add
sbb
lock
xor
push
mov
in
jns
add
and
retf
ins
or
or
nop
loop
or
or
and
pop
xor
add
and
aas
or
or
hlt
rcl
push
(bad)
cmp
cli
sbb
xchg
inc
jmp
adc
xor
sbb
dec
sub
pop
cdq
dec
cmp
xor
pop
jnp
mov
pop
push
or
cmp
jp
jge
inc
inc
movs
cmp
sti
out
add
add
push
add
loopne
add
or
ins
fild
or
shl
xor
daa
(bad)
aam
ss
shl
and
pop
add
js
imul
divps
jbe
fisttp
push
add
or
fist
sub
sbb
adc
shr
jg
add
sbb
add
pusha
add
imul
dec
iret
shl
bound
push
and
add
fld
or
add
jb
dec
lock
pop
outs
cmc
add
and
cmp
test
dec
int3
iret
add
into
pop
pop
xlat
sbb
dec
shr
jae
arpl
ds
xlat
out
mov
lahf
into
out
sti
jb
ins
outs
push
(bad)
fiadd
push
fadd
pop
rcl
inc
dec
xor
xchg
and
scas
sar
xor
add
sub
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
