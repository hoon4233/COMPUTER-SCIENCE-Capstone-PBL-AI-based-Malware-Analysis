stos
test
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
push
and
add
add
add
mov
pop
cmps
aaa
gs
push
(bad)
dec
hlt
movs
xchg
sub
stos
in
int
push
jge
inc
jae
cmc
aaa
sahf
mov
cmp
adc
ja
jb
jmp
retf
loopne
or
dec
and
retf
fdiv
jbe
out
mov
jbe
loop
and
fcmovnb
int3
or
repnz
xor
push
(bad)
pop
test
adc
inc
dec
pop
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
and
jb
outs
addr16
add
add
add
and
add
add
add
and
dec
inc
add
add
add
add
and
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
add
add
add
mov
add
outs
add
add
add
add
add
add
add
fiadd
add
mov
add
add
add
adc
add
pop
in
add
add
add
add
pop
call
add
jge
add
shr
add
add
add
mov
add
sbb
add
add
add
out
add
add
add
add
add
add
add
add
add
mov
add
add
add
push
adc
add
add
add
push
add
add
add
into
add
add
sbb
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
push
aas
add
add
add
pushf
add
add
inc
add
add
add
rol
add
add
add
xor
cmp
xor
sub
sub
sub
sub
xor
popa
xor
bound
jge
cmp
outs
fs
gs
jp
jo
push
ins
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
cs
jae
jne
arpl
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
push
jae
addr16
imul
jae
jne
arpl
cs
jne
je
imul
add
sbb
inc
das
mov
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
mov
add
add
add
add
leave
inc
test
add
and
ins
outs
cs
or
and
add
add
add
sbb
or
xchg
adc
iret
add
imul
or
xchg
adc
iret
add
jl
js
push
mov
dec
es
ss
fwait
mov
rcl
not
out
cdq
mov
shl
jge
xchg
leave
int3
xor
jbe
cmp
pop
add
sbb
pop
jp
add
cmp
shl
and
pop
adc
mov
test
xlat
fidivr
(bad)
cld
jnp
adc
mov
std
ins
cmp
lods
cmc
scas
xlat
mov
pop
imul
sbb
out
xchg
sbb
cmp
(bad)
ins
pusha
jae
cmp
lahf
mov
div
mov
repz
push
jg
inc
jae
cwde
sbb
dec
cmps
or
in
cs
push
mov
jmp
idiv
ins
cmc
popf
ins
div
test
(bad)
das
mov
jo
fbld
int
fst
retf
test
ror
dec
ja
loop
push
mov
ffree
pop
movs
stos
lods
call
das
(bad)
aad
stos
pop
loop
add
mov
out
xor
cmps
pop
sub
mov
inc
pop
and
ss
jle
retf
addr16
xchg
loope
imul
repz
jne
mov
push
dec
jae
cmp
fdivr
mov
into
test
stos
mov
pop
xor
cmp
mov
iret
(bad)
mov
js
mov
cmp
les
xor
jge
std
popf
sub
dec
mov
push
shl
pop
clc
mov
into
pop
push
sub
lds
cmp
in
adc
adc
mov
sub
js
fisubr
ja
cmp
int
cdq
xor
mov
xor
mov
pop
mov
scas
sahf
jbe
imul
and
lahf
jo
(bad)
xor
add
in
test
scas
fld
jmp
loop
imul
dec
lods
pop
and
xor
jnp
adc
loope
out
adc
loop
lock
repz
pop
jmp
jge
jp
(bad)
jmp
mov
xor
dec
and
in
inc
sbb
out
inc
xchg
push
ror
adc
(bad)
and
cld
pop
test
js
scas
fild
jne
ret
ins
ffree
cmp
outs
cmp
call
xor
daa
out
pushf
ja
jno
jg
mov
clc
mov
out
lea
daa
int
sbb
pop
adc
dec
fsubr
es
mov
jnp
push
daa
out
shl
mov
out
sahf
gs
imul
mov
pop
fimul
fdivr
ds
pop
sti
adc
in
pushf
mov
out
sar
dec
(bad)
ss
outs
pop
leave
mov
stc
ds
outs
retf
or
dec
sti
mov
popf
mov
outs
in
dec
pop
ja
mov
mov
mov
out
xchg
idiv
out
repz
scas
jno
jle
loopne
cmp
idiv
jb
(bad)
cmc
adc
out
scas
pop
popf
mov
jo
pop
call
adc
jno
out
sbb
mov
ret
aaa
cmp
push
dec
(bad)
jle
outs
pop
ror
icebp
addr16
mov
fcmovu
cmp
das
outs
je
dec
pop
out
les
je
mov
cmp
mov
ror
iret
cmp
into
jae
jle
out
jge
mov
dec
fsub
out
je
out
cld
sahf
adc
shl
popf
mov
jo
lea
jno
in
jno
fidiv
adc
std
inc
daa
outs
loop
dec
fsubr
dec
pushf
mov
fmul
pop
daa
cs
jae
(bad)
pop
jecxz
sub
loop
cmc
jl
mov
pushf
adc
(bad)
loop
mov
popf
cmp
cs
out
iret
inc
pushf
mov
jnp
mov
(bad)
jnp
adc
or
pop
mov
jnp
call
mov
push
sub
popf
jecxz
pop
push
ficom
pop
mov
out
mov
push
pop
clc
std
xchg
or
sbb
fidiv
out
mov
rcr
rcr
test
push
cmp
push
outs
cs
xchg
sahf
repz
mov
fs
out
leave
lea
pop
aam
mov
repz
pop
jle
leave
out
dec
jo
movs
test
mov
in
imul
dec
(bad)
push
jnp
jecxz
push
repnz
fucomip
push
ret
xor
cmc
ss
icebp
mov
jg
cs
pop
adc
int3
(bad)
lock
push
aaa
je
cmp
scas
push
out
xlat
add
daa
outs
sub
out
clc
outs
jmp
std
mov
and
out
mov
push
cmp
sub
imul
add
cmp
clc
jmp
dec
push
jne
inc
sbb
std
mov
adc
scas
fucomp
mov
jbe
test
dec
(bad)
movs
pop
retf
or
mov
sbb
xchg
arpl
cdq
dec
mov
fwait
sahf
retf
cmp
push
jmp
sbb
arpl
dec
mov
or
lods
lea
mov
je
mov
jnp
mov
pop
das
mov
test
rcl
les
mov
cmps
cmp
les
or
popa
xor
jmp
test
push
bound
pop
fdiv
mov
dec
push
dec
mov
out
imul
scas
xchg
out
lock
cdq
test
pop
and
pop
push
retf
leave
mov
scas
ret
mov
mov
mov
test
mov
jnp
ret
nop
sahf
sbb
xlat
or
ret
mov
shl
jo
mov
lds
jmp
hlt
sti
lods
mov
pop
jne
fstp
mov
scas
frstor
inc
shr
pop
mov
idiv
(bad)
out
xlat
mov
repnz
sub
add
mov
mov
loop
inc
mov
and
fstp
(bad)
pop
daa
mov
rcl
or
mov
pop
pop
out
pand
clc
and
movs
or
push
jns
cmp
add
rol
fdivr
push
mov
sub
and
sbb
jb
jbe
pop
jg
push
and
dec
sub
xor
sbb
fwait
ror
xchg
out
push
call
mov
pop
faddp
xchg
sub
cmp
lods
jne
jg
lods
bound
sbb
call
imul
dec
cld
test
out
fs
sbb
retf
xor
out
pop
addr16
clc
jmp
outs
loop
shl
es
loope
dec
std
cmp
inc
and
lock
pop
rcr
push
push
nop
dec
push
lock
and
repnz
int
fidivr
nop
xchg
mov
jmp
fld
mov
jae
adc
retf
push
sub
mov
mov
popa
iret
push
mov
mov
stos
sub
call
push
pop
cmp
dec
sbb
test
call
add
add
push
jnp
or
pop
out
inc
mov
out
das
add
cs
out
inc
mov
inc
add
inc
mov
sub
xchg
push
inc
icebp
arpl
xchg
mov
xchg
pop
pushf
nop
adc
inc
jmp
aaa
jno
sbb
jb
jmp
fs
jns
pushf
xchg
sbb
(bad)
xchg
mov
(bad)
div
sbb
addr16
aas
fwait
dec
daa
div
dec
js
cmps
popf
jmp
scas
rol
jb
jns
or
hlt
mov
out
push
push
jo
cmp
pop
jns
pop
push
inc
mov
sbb
pop
sub
add
xchg
popf
add
mov
cs
jae
mov
gs
(bad)
mov
push
(bad)
push
mov
call
add
leave
loop
jne
sbb
fstp
cmp
jle
push
mov
jb
add
or
xor
addr16
test
adc
push
cmp
retf
out
adc
jmp
jbe
xlat
add
scas
repnz
mov
adc
mov
dec
xchg
inc
cmp
mov
nop
stos
bound
xchg
pop
out
inc
add
jl
xor
imul
nop
pmulhw
xlat
dec
or
xchg
int3
enter
pop
cdq
and
lahf
outs
ret
inc
pop
push
push
xchg
pop
inc
xor
ret
pop
mov
sbb
inc
cs
retf
int
xchg
cmp
dec
mov
jns
mov
xlat
xchg
outs
adc
jae
movs
fistp
jge
outs
ret
sub
inc
(bad)
sub
out
sub
jmp
out
mov
mov
pop
(bad)
jg
shl
(bad)
aam
or
jae
addr16
push
mov
es
ds
sbb
ror
mov
lock
xchg
out
test
xor
mov
pusha
mov
rcl
(bad)
cmps
xchg
jae
jne
mov
mov
in
mov
add
jl
sub
test
ja
repnz
stc
ret
inc
push
jle
sub
sub
adc
dec
push
jle
sub
stos
xchg
ja
repnz
push
mov
pop
xor
or
ja
in
mov
mov
sahf
ds
mov
fwait
xlat
icebp
shl
cmc
inc
nop
jns
fsubr
jle
mov
mov
push
jp
jl
movs
adc
adc
mov
sar
(bad)
mov
cdq
mov
pop
push
lock
sbb
mov
in
sub
into
push
mov
(bad)
adc
repz
call
psubq
out
add
fdiv
dec
fidiv
in
dec
dec
loopne
mov
popf
adc
into
xor
std
adc
and
in
inc
stos
shr
lds
jecxz
or
mov
sbb
mov
imul
(bad)
and
sub
imul
gs
sar
jle
outs
arpl
cmp
jp
fmul
or
xor
jge
xor
mov
inc
das
(bad)
imul
add
xchg
mov
xlat
loopne
(bad)
ss
popa
add
cmp
ins
or
xor
fld
sbb
mov
js
rcl
cmp
pushf
mov
retf
cs
mov
clc
call
out
imul
jp
lock
(bad)
jmp
jl
xchg
and
je
(bad)
pop
pop
jmp
jecxz
ins
outs
repz
mov
addr16
add
push
xor
or
push
jns
pop
or
or
pushf
stos
out
pop
jp
retf
mov
fcmovnbe
ret
adc
add
push
call
lahf
adc
pop
add
add
or
dec
inc
test
xchg
(bad)
lods
pop
mov
shl
ins
mov
aas
ror
cmp
mov
std
stos
pop
mov
push
mov
mov
sbb
jle
(bad)
test
ja
mov
sar
add
mov
cmc
xor
cmps
cld
mov
jl
scas
cwde
iret
jnp
nop
or
mov
stos
add
or
sub
fild
add
jno
jge
add
fst
lods
xchg
gs
call
mov
sbb
jns
shl
aaa
fnstcw
adc
mov
dec
in
or
in
rol
arpl
and
fnstcw
pop
idiv
mov
test
inc
in
or
sub
cld
xor
(bad)
push
jmp
clc
adc
data16
add
mov
pop
rol
pop
pop
add
jmp
jo
sti
data16
lea
hlt
cmp
jmp
out
cmp
inc
out
cdq
add
lock
add
sar
pop
or
ret
test
sti
pop
ret
add
inc
jle
sysret
mov
push
pop
hlt
mov
inc
out
xor
aam
mov
xor
popf
push
mov
push
pmulhuw
ret
fmul
jge
dec
inc
out
xlat
and
mov
xor
sbb
sbb
retf
jmp
enter
in
mov
repnz
ins
adc
jbe
xchg
pop
mov
(bad)
xchg
jl
jbe
clc
repnz
jae
dec
retf
out
shl
retf
jb
in
ds
push
enter
and
jnp
and
or
test
icebp
push
push
int
mov
mov
xchg
or
mov
or
sbb
ja
sbb
neg
sub
jbe
xchg
enter
mov
adc
sar
(bad)
call
out
and
cmp
sti
mov
push
std
push
int
mov
inc
in
cmp
jns
hlt
out
iret
inc
push
xor
cmps
add
ja
mov
lods
sub
mov
lock
push
test
dec
mov
push
lock
or
repz
push
fst
pop
gs
cmc
cmp
mul
mov
fild
or
dec
ss
cmc
mov
push
out
aad
fwait
iret
repz
out
imul
mov
jmp
pop
inc
out
addr16
push
out
pop
xor
pop
in
mov
mov
lods
mov
mov
mov
ds
mov
fnstenv
out
ins
or
fst
cmps
fldenv
inc
fst
fld
sti
xor
inc
scas
add
jp
cs
inc
and
pop
(bad)
shl
fs
lds
je
jge
jno
sbb
ds
jnp
imul
bound
pop
aas
fist
into
fs
mov
or
mov
mov
cmps
pop
mov
fisttp
mov
jns
int
mov
clc
fistp
push
sahf
stc
repz
sbb
sub
mov
and
adc
lar
movzx
mov
ds
or
or
push
sti
jmp
sbb
jo
or
sub
or
(bad)
out
mov
rcl
push
jp
xor
cld
lods
hlt
add
outs
pop
das
das
popa
pop
cvttps2pi
(bad)
push
mov
fwait
jp
ret
in
xchg
adc
and
jmp
add
test
or
clc
or
lahf
pusha
iret
or
pop
add
pop
retf
jbe
adc
in
adc
das
xchg
fsubrp
jnp
pop
sub
in
jnp
mov
lock
mov
or
dec
popa
pop
icebp
cmp
pop
pop
jmp
sahf
repz
mov
iret
xor
int
mov
add
ds
sub
arpl
cli
outs
push
jo
dec
add
call
retf
ins
ss
rcl
test
aad
jbe
mov
mov
dec
and
mov
int
mov
jae
jecxz
into
iret
dec
pop
push
jmp
cld
mov
outs
mov
add
scas
in
xlat
mul
aam
jae
(bad)
mov
mov
pop
leave
ss
mov
into
jae
sbb
sub
out
adc
xchg
adc
daa
loopne
add
push
sub
mov
scas
add
in
fisttp
fdiv
add
rol
jg
xor
cmc
out
es
jecxz
in
inc
call
(bad)
das
imul
jmp
pop
repz
fist
fistp
ror
xor
bound
shl
mov
mov
xchg
mov
jmp
push
in
mov
sbb
out
add
std
out
fwait
movs
xor
fucomp
pop
cs
xor
mov
mov
shr
movs
das
mov
add
jnp
lods
retf
not
fwait
out
ret
out
call
pause
mov
inc
scas
iret
jae
push
bnd
xchg
xchg
pop
adc
jbe
aas
and
iret
or
inc
add
stc
sbb
or
ds
xlat
pop
xor
xor
dec
mov
(bad)
pop
sahf
inc
jb
dec
mov
addr16
int3
mov
outs
add
sub
jl
inc
sahf
sub
fcomip
fmul
cmc
out
fild
inc
std
iret
or
xor
clc
add
mov
fs
ds
pop
lock
jne
sub
and
cmp
dec
div
add
lock
out
dec
sbb
or
sbb
push
sbb
cmps
mov
scas
mov
jne
test
and
inc
outs
das
dec
imul
in
scas
adc
sub
in
pop
add
sub
retf
leave
dec
outs
add
ret
cmps
add
jge
cdq
xacquire
test
cmp
xor
sbb
cmp
test
ins
adc
xchg
out
jnp
retf
add
xor
mov
fidiv
and
xchg
xchg
sbb
jp
adc
outs
cmc
add
dec
fisub
data16
inc
out
retf
in
out
mov
add
fsubr
mov
sbb
add
sahf
lahf
add
jnp
xlat
neg
mov
(bad)
mov
jge
xchg
or
sub
out
mov
lds
push
nop
xchg
adc
sti
pop
repnz
mov
jne
jl
shl
mov
xlat
scas
pop
popf
out
jno
cmc
out
idiv
sti
jl
jmp
sahf
sbb
jp
mov
lock
stos
cmp
movs
ja
cmp
frstor
pop
or
data16
mov
push
aas
jae
popa
adc
and
or
ret
or
fadd
lock
dec
jecxz
and
pop
or
pop
into
add
into
add
rcl
cli
aaa
add
in
add
retf
lock
push
mov
inc
hlt
or
pusha
mov
mov
pop
or
xchg
pop
sbb
adc
arpl
pop
xor
loopne
pop
add
or
outs
add
or
leave
mov
mov
xor
ret
fbstp
(bad)
jae
add
mov
jl
sub
stos
pushf
sbb
jnp
pop
out
inc
(bad)
adc
sub
(bad)
in
outs
mov
int
pop
adc
cmp
mov
cld
dec
jns
jnp
jl
mov
stos
pop
outs
xor
xchg
stc
in
inc
ins
mov
fmul
fist
mov
scas
xor
retf
movs
pop
call
mov
or
jl
mov
sub
push
enter
ficom
cmps
jb
ins
mov
int3
push
push
jbe
or
xchg
mov
ret
rcr
not
dec
or
ror
(bad)
mov
xchg
sbb
pop
sbb
shl
fst
sbb
cmp
dec
setp
push
jecxz
stc
sub
enter
out
adc
verw
lods
(bad)
mov
cmp
gs
dec
jnp
imul
test
jl
test
out
stos
(bad)
sbb
test
xlat
js
out
popf
sbb
mov
dec
sbb
aaa
arpl
ins
cmp
outs
movs
pop
cmp
cwde
leave
jp
in
test
fs
hlt
inc
xchg
and
div
adc
mov
scas
push
sub
popa
xchg
mov
dec
retf
xchg
es
ror
bound
je
rol
cmps
xchg
adc
dec
movs
inc
and
cmp
bound
push
mov
fsub
mov
and
adc
inc
push
xchg
mov
(bad)
pop
xor
test
dec
push
scas
div
in
sub
sbb
add
add
mov
cmp
mov
rol
lea
xor
movs
push
test
mov
rcr
xor
pop
rcl
dec
inc
mov
test
iret
pop
fbld
std
pop
pop
push
outs
fidiv
adc
mov
sti
inc
push
add
ret
leave
leave
ret
icebp
shr
xchg
(bad)
ins
ss
push
shr
mov
jmp
cmps
mov
pop
jbe
sbb
je
sbb
cs
push
fcomp
ds
mov
pop
std
jnp
outs
das
sub
je
cdq
into
(bad)
adc
in
fidiv
fcomp
(bad)
adc
pop
stos
mov
test
pmuludq
in
add
adc
jp
cmp
xor
jbe
test
push
(bad)
pop
stos
ja
mov
mov
imul
out
lods
inc
jp
mov
mov
dec
jb
shl
icebp
je
jl
dec
enter
xor
jge
ss
aaa
inc
jae
ins
nop
pop
fbld
bound
(bad)
jnp
xor
xor
xchg
sbb
ins
bound
mov
cmps
jg
dec
push
xchg
inc
inc
jne
xor
call
adc
stos
dec
mov
push
in
(bad)
cmp
jmp
xchg
ror
ds
sub
jl
fist
repz
adc
cmp
cmp
xchg
push
cmp
sti
mov
std
pusha
cmp
hlt
push
and
mov
ins
fs
mov
sbb
outs
(bad)
inc
cmps
imul
ins
pushf
sbb
(bad)
adc
xchg
mov
and
popa
cdq
test
mov
(bad)
cmp
gs
ret
movs
jne
sub
ret
mov
xchg
mov
mov
out
arpl
in
shr
gs
rcr
jmp
call
jmp
adc
lahf
cmp
dec
inc
push
mov
push
inc
dec
mul
xchg
sub
mov
xchg
inc
bound
cmps
pop
or
sar
pop
push
int
or
xor
aas
retf
in
ss
cmp
fdivr
cmp
dec
cmp
add
xchg
retf
mov
push
retf
dec
mov
adc
aad
xchg
movs
pop
sar
push
aam
add
lods
xchg
push
imul
or
xor
mov
cmp
and
mov
push
and
call
adc
pop
sahf
sbb
mov
add
cmps
adc
xor
test
mov
ss
lods
push
aad
ins
dec
adc
lds
push
mov
ss
jns
xor
sub
sti
or
int
sbb
cmps
inc
cmp
retf
mov
dec
dec
iret
in
pushf
and
adc
and
push
sbb
jno
cs
add
xchg
imul
cs
add
in
int3
gs
inc
lods
push
pop
pop
sbb
inc
es
int3
pop
push
dec
lods
cmp
jo
test
lds
dec
jl
aaa
pop
pusha
sbb
xchg
(bad)
(bad)
shl
mov
shr
ins
mov
adc
in
cs
je
push
call
fistp
xor
mov
stos
dec
fdiv
fstp
daa
daa
xchg
nop
aaa
sbb
add
xchg
sub
arpl
mov
lods
popa
sub
test
xchg
dec
mov
into
test
int3
or
mov
out
fs
ret
stos
aad
and
jbe
int3
add
lods
jb
ret
inc
dec
adc
cdq
sbb
mov
pop
xor
lods
fisttp
pop
push
jmp
mov
jb
fld
xor
ins
pop
push
dec
xchg
push
mov
(bad)
ror
shl
push
fmul
ins
sub
int
add
or
sbb
test
(bad)
(bad)
pop
cli
sbb
fmul
xchg
and
jmp
mov
bound
add
and
hlt
fs
mov
jl
stos
repz
sub
xchg
retf
push
jmp
(bad)
lods
(bad)
stos
xchg
fld
inc
mov
mov
sub
mov
mov
sti
popa
or
push
mov
cmp
movs
or
mov
mov
xchg
inc
mov
dec
rcl
jae
cmp
jg
xlat
addr16
cmp
jmp
int
daa
addr16
fbstp
add
nop
dec
(bad)
xlat
sub
cmp
adc
scas
es
adc
rol
push
rol
mov
jo
push
xchg
sub
jae
or
inc
or
imul
mov
sbb
stc
inc
lock
je
lea
mov
xor
lods
jmp
out
aad
mov
or
lea
test
ds
jne
xchg
into
xchg
cmps
fnop
fs
cmp
daa
retf
xchg
dec
xor
popf
addr16
push
or
aad
out
pop
pusha
push
and
or
ins
xchg
and
int
push
sahf
into
adc
loopne
into
call
mov
pop
xchg
mov
push
push
pushf
pop
rcr
mov
cwde
fs
pushf
and
mov
and
pop
call
add
gs
jno
pop
fmul
jle
call
(bad)
arpl
(bad)
and
xor
jae
inc
into
in
outs
dec
iret
push
and
movs
call
and
add
mov
jg
adc
xor
aad
xor
adc
dec
(bad)
leave
pop
jmp
icebp
sbb
inc
mov
mov
inc
push
xchg
mov
sbb
jo
jbe
sub
in
or
mov
jns
jns
add
(bad)
data16
pusha
aam
idiv
cdq
sbb
cdq
add
push
into
fwait
imul
mov
fnstcw
ss
sbb
mov
push
lahf
retf
sti
xor
sub
xor
out
icebp
mov
call
jae
out
cmp
xlat
sbb
xor
push
cmp
add
rcr
test
clc
add
jge
dec
loope
cmp
popa
not
test
ret
mov
pop
push
pushf
lahf
sub
imul
xchg
sub
stos
mov
sbb
in
cwde
test
aaa
pushf
inc
jbe
cmp
pop
push
loope
sub
rol
pushf
cwde
cs
(bad)
retf
pop
call
rcr
inc
popf
xor
lods
retf
push
leave
mov
fimul
mov
cmps
mov
jo
dec
mov
push
cmp
xchg
(bad)
outs
mov
push
cmp
clc
fwait
xchg
xor
mov
aam
daa
(bad)
mov
(bad)
sub
push
xor
lock
(bad)
dec
sar
cld
or
pop
sahf
or
(bad)
pop
in
fdivr
pushf
fcmovu
jmp
jl
shl
stos
lods
xor
aaa
add
scas
fwait
lods
push
das
ins
xchg
inc
in
cli
adc
add
fdiv
or
cmp
mov
lods
mov
pop
scas
xchg
outs
ret
out
daa
inc
ficom
or
ja
cmc
sbb
jmp
inc
call
movs
popf
inc
out
and
push
test
stos
pop
(bad)
pop
and
dec
mov
push
pop
test
loope
nop
ins
jmp
xchg
cmp
pusha
mov
mov
inc
cli
dec
cmp
int
jge
cmps
inc
(bad)
hlt
pop
loopne
push
call
pop
ret
sbb
push
inc
jnp
sahf
gs
std
scas
add
xchg
outs
call
lods
dec
hlt
cmp
xchg
cmps
push
in
push
sbb
ror
out
mov
lahf
shr
pop
stos
(bad)
jne
fstp
sti
sub
pop
inc
jle
lds
(bad)
inc
out
iret
add
mov
cmps
bound
jg
jl
test
xchg
xor
mov
cld
sbb
jnp
mov
or
cmps
(bad)
fild
lods
pop
add
(bad)
dec
loop
push
dec
popa
ins
pop
lea
adc
leave
ffreep
cli
add
pop
(bad)
stos
push
addr16
cmp
mov
pop
cdq
test
bound
push
dec
and
lods
int3
jb
stos
call
aas
(bad)
mov
loopne
je
imul
jl
test
(bad)
imul
mov
adc
cli
dec
(bad)
jp
sbb
and
jg
fisubr
jae
push
jmp
dec
mov
sub
mov
sbb
pop
iret
jp
add
sub
scas
xor
int
xor
jl
daa
jmp
jbe
in
jbe
inc
sti
lods
nop
clc
adc
pop
dec
xor
call
loop
js
lock
(bad)
mov
ds
int3
push
dec
and
ds
push
aam
dec
sbb
(bad)
aad
sub
popa
adc
mov
xchg
jbe
jno
mov
pop
gs
pop
cmp
xchg
jl
sti
push
out
push
xchg
enter
pop
or
out
call
int
scas
adc
stos
in
call
movs
mov
mov
pop
push
adc
and
fisubr
hlt
pop
hlt
push
call
jmpw
sbb
setno
jae
sbb
popa
rcr
in
div
enter
jnp
mov
bound
bswap
popa
out
dec
(bad)
pop
cld
das
inc
xchg
cmp
pop
adc
pop
inc
out
push
cwde
dec
dec
cld
mov
and
ja
pop
movs
mov
fldcw
pop
push
cmp
icebp
push
fcos
leave
ds
cmp
es
ss
call
lahf
xor
stc
and
daa
mov
jmp
cmp
popf
arpl
sahf
push
mov
aam
adc
push
sbb
movs
pop
lods
adc
pusha
add
pop
jl
ret
sti
movs
mov
shl
loop
(bad)
in
outs
sbb
mov
jbe
clc
push
scas
addr16
retf
add
adc
dec
xchg
mov
shl
mov
fld
popf
mov
adc
daa
push
cmps
pop
add
mov
clc
and
das
push
into
aaa
xchg
jp
mov
adc
jl
icebp
je
mov
hlt
dec
cmp
mov
loope
and
test
(bad)
jmp
sbb
sbb
in
push
jmp
outs
sti
fld
cmp
enter
jnp
adc
pop
or
jne
and
sub
aaa
mov
lods
push
adc
inc
adc
lea
and
retf
jb
push
aad
pop
inc
loop
inc
fbstp
stos
loop
in
mov
cli
dec
les
ret
and
pop
sbb
je
scas
and
pop
imul
cmp
sahf
rcl
add
jne
sahf
dec
ret
loop
cmp
nop
inc
jmp
jb
xchg
lock
(bad)
loop
pop
sub
outs
and
push
(bad)
out
mov
stc
mov
xor
cwde
and
aaa
cmp
push
push
sahf
fs
pop
or
xor
repnz
dec
in
fwait
repz
pop
adc
mov
or
mov
pop
call
arpl
mov
mov
pop
xchg
adc
retf
sub
cdq
inc
adc
jb
cmp
ret
or
call
and
jge
enter
pop
sbb
call
push
pop
mov
sbb
retf
xchg
xchg
sbb
sbb
push
xchg
(bad)
enter
cdq
and
adc
pop
adc
jae
push
push
clc
int
dec
ins
adc
mov
pop
and
xchg
std
movs
iret
mov
les
and
test
cmp
pop
(bad)
or
and
mov
inc
inc
mov
xchg
int3
inc
jge
nop
jle
mov
mov
shr
xor
into
dec
sahf
add
sbb
mov
outs
popf
call
nop
dec
mov
xchg
xchg
or
(bad)
xlat
cmp
outs
jnp
in
inc
adc
lods
(bad)
or
mov
sahf
xchg
bound
clc
mov
stc
adc
mov
pusha
push
pop
inc
sti
pop
inc
jnp
adc
daa
mov
call
or
jns
(bad)
retf
adc
add
dec
pop
or
mov
pop
pop
sbb
(bad)
and
or
xor
and
inc
jl
and
jmp
(bad)
not
cdq
or
fisttp
jle
or
loope
fs
xor
jmp
sbb
xor
cmp
xor
lea
jne
call
mov
idiv
inc
hlt
push
pushf
cmp
vhaddps
inc
fild
add
ss
jl
les
add
dec
cld
(bad)
retf
rcr
and
cld
bound
pop
xchg
(bad)
adc
push
daa
dec
in
cmp
dec
lea
nop
outs
test
inc
mov
mov
loop
(bad)
mov
xchg
push
mov
cmp
sub
xor
cwde
iret
and
xchg
or
xor
pop
mov
and
aas
inc
cld
shl
push
mov
add
sub
retf
push
fidivr
cmp
shl
inc
sub
popa
sbb
vmovss
popa
add
cmps
adc
imul
adc
nop
sar
pushf
loopne
mov
mov
xchg
and
jns
call
mov
aas
fcmove
sbb
push
mov
addr16
sbb
add
and
aas
in
jnp
sbb
jo
cwde
clc
add
or
cmp
inc
jle
mov
clc
mov
popf
cmps
pop
inc
jb
aam
or
adc
pop
inc
mov
mov
push
inc
je
rcr
lahf
cmp
xchg
push
sub
jl
cmc
mov
mov
loop
sbb
ror
sbb
(bad)
jno
pop
movlps
vpcmpgtw
mov
mov
adc
popa
mov
loope
cmc
and
push
fwait
movs
aas
sbb
lods
inc
je
mov
jmp
aaa
popf
fadd
add
rol
cmp
add
mov
and
cmp
ret
mov
sar
hlt
stc
sbb
cmp
cmps
inc
xchg
jg
xchg
repz
inc
mov
out
jl
or
sub
xor
mov
sub
dec
lods
sub
icebp
adc
dec
loop
popa
(bad)
ja
lahf
pop
sub
inc
adc
adc
mov
test
adc
mov
aas
cld
adc
and
inc
enter
fdivr
test
cmp
ins
inc
add
or
imul
out
push
mov
dec
in
imul
in
out
hlt
push
mov
dec
xchg
mov
cmp
adc
adc
stos
out
inc
ins
mov
jno
jl
sub
adc
lahf
sbb
adc
xor
jmp
lods
into
sbb
inc
cmp
dec
loop
or
stos
(bad)
xor
push
add
(bad)
cmps
icebp
sub
inc
loop
or
lahf
clc
mov
test
je
dec
neg
and
and
push
xchg
mov
bound
xor
jmp
cmp
clc
aam
bound
xor
clc
popa
xor
sar
mov
add
pop
sbb
mov
cmp
fstp
icebp
aas
jne
pop
sbb
and
jbe
adc
call
inc
and
mov
and
cmps
xchg
mov
add
inc
mov
pop
jo
ds
ins
or
fs
cmp
jp
mov
aas
add
xchg
inc
sahf
pop
lds
or
add
sbb
rcr
inc
scas
push
xor
jno
pop
inc
ins
lock
mov
rcl
dec
jmp
mul
call
aam
aaa
inc
clc
fsub
mov
cld
rcr
and
inc
xor
ret
inc
leave
cdq
aam
not
dec
xor
pop
dec
adc
inc
jnp
and
das
inc
out
jbe
inc
sahf
xor
push
pop
push
(bad)
mov
pop
loop
mov
test
jb
adc
fldcw
adc
jp
lahf
mov
out
push
jno
xor
jno
sub
ret
ja
dec
popf
repz
mov
repnz
addr16
mov
jmp
xchg
cmp
aad
jmp
es
enter
test
fnstcw
inc
cmp
sub
and
stos
inc
out
dec
or
into
pushf
clc
or
inc
jecxz
mov
xchg
cmp
jl
xchg
adc
mov
jp
mov
jle
xor
je
aaa
xchg
jp
popf
clc
mov
(bad)
or
test
call
adc
or
test
mov
in
in
mov
dec
lods
and
inc
push
and
ret
or
(bad)
sbb
push
aas
or
jecxz
shl
cld
bound
stos
shl
cld
jmp
mov
push
push
inc
scas
nop
adc
xchg
pop
cmp
xchg
test
mov
adc
in
adc
xlat
push
jle
inc
jno
mov
jb
sbb
out
test
(bad)
les
loop
lds
xor
pop
xchg
dec
sbb
mov
adc
xchg
jne
mov
loop
jecxz
sub
cmp
test
push
inc
adc
sbb
and
cmps
call
movs
mov
les
nop
imul
jbe
repnz
pop
(bad)
fisttp
adc
leave
scas
cmps
adc
sahf
inc
outs
dec
xchg
pop
dec
pusha
xor
cld
sbb
aas
test
data16
mov
shl
add
test
dec
je
icebp
push
xchg
test
les
iret
repnz
and
lahf
mov
stos
pop
aas
jno
and
cmp
mov
sub
(bad)
cmp
jno
xor
scas
mov
sar
cmp
jl
(bad)
scas
or
and
out
xor
mov
sbb
mov
cmp
mov
mov
add
cmp
ins
pop
nop
pop
movs
imul
mov
outs
imul
and
pop
mov
xor
sub
aad
fwait
loopne
lock
test
mov
add
push
not
(bad)
hlt
outs
mov
repnz
and
xor
xchg
sub
cmp
dec
out
xchg
jmp
xchg
hlt
stos
xchg
jmp
add
imul
xor
(bad)
xchg
iret
and
mov
inc
jmp
and
adc
jne
adc
push
mov
adc
mov
sub
aas
or
mov
fiadd
leave
xchg
mov
in
push
stos
jae
scas
nop
arpl
out
movs
xor
and
(bad)
out
jb
arpl
ss
enter
cmp
push
enter
push
or
lahf
push
inc
hlt
xchg
push
jmp
adc
cmp
mov
add
sub
pop
retf
jmp
sub
mov
jge
and
jecxz
ja
xlat
not
repnz
xchg
sub
ds
stos
dec
(bad)
call
dec
mov
sbb
add
inc
sbb
push
leave
scas
(bad)
mov
mov
fld
mov
scas
or
dec
xchg
jne
mov
mov
inc
and
sub
outs
jmp
xchg
xor
pop
and
adc
das
dec
sahf
cmps
sub
jmp
js
mov
aam
pop
jmp
and
lods
nop
std
not
jns
and
cli
mov
inc
into
popa
xor
fidiv
pop
fisttp
xchg
or
stos
pop
add
mov
test
das
push
jno
sub
jmp
and
sti
cmp
popf
jmp
mov
adc
int
repnz
and
mov
mov
sahf
and
mov
repnz
sub
retf
pop
pop
mov
pusha
jg
and
inc
fcomp
rcl
dec
jle
mov
ror
jecxz
sbb
pop
out
adc
xchg
and
cmps
push
cmp
jmp
and
sbb
call
jbe
cmp
xchg
inc
push
movs
enter
lahf
mov
iret
cmp
mov
adc
push
(bad)
shl
mov
dec
mov
data16
aad
push
push
call
mov
cmp
push
push
inc
pop
addr16
xchg
test
pushf
xchg
or
cmc
rcl
mov
xchg
imul
sub
mov
dec
adc
xor
out
jp
mov
sub
adc
std
xchg
popf
and
add
cmovns
inc
fs
fiadd
mov
stos
cmps
std
fwait
icebp
test
jg
iret
cmp
dec
dec
aas
ja
pop
inc
(bad)
mov
xor
iret
cld
cmp
addr16
xor
adc
inc
cmp
rcr
dec
cmc
popa
inc
ja
and
pop
rcl
mov
pop
adc
mov
int
mov
clc
pop
inc
mov
retf
and
in
les
outs
mov
sub
jg
iret
jne
cmp
pop
mov
aas
sbb
loope
and
mov
xchg
dec
dec
daa
in
xchg
inc
je
rcr
cmp
(bad)
mov
mov
retf
jmp
imul
outs
xchg
mov
inc
mov
adc
pop
jno
adc
jg
lods
xchg
daa
cmp
xchg
movs
add
pop
mov
(bad)
sbb
stos
fiadd
push
cwde
pop
adc
shl
out
aam
pop
push
add
aad
xchg
dec
and
mov
into
jmp
cld
inc
fstp
and
adc
mov
mov
jmp
cs
mov
sbb
mov
sbb
daa
mov
fs
fild
out
xchg
imul
(bad)
add
xchg
jl
retf
rcl
xor
rcr
mov
xchg
les
jp
lods
sub
mov
dec
repnz
push
test
adc
mov
jbe
push
int
ss
sub
aam
mov
fadd
scas
jo
outs
mov
inc
call
mov
mov
inc
xor
pop
imul
pushf
cli
pop
dec
pop
sbb
int
cmp
and
in
mov
and
dec
jge
stc
push
dec
mov
out
jge
out
pop
enter
and
sub
mov
mov
aas
aad
aas
loope
shl
outs
in
xchg
in
xchg
jp
inc
ja
icebp
aam
adc
retf
hlt
xchg
int
or
mov
dec
xchg
dec
popf
pop
les
lea
mov
jns
inc
push
push
aad
xor
loop
sub
dec
loope
inc
pop
dec
(bad)
out
pop
clc
pop
jl
lods
sbb
jge
cld
jns
push
movs
out
dec
or
out
and
dec
cdq
push
xchg
cld
fst
es
std
jmp
mov
dec
mov
sbb
retf
retf
data16
sbb
movs
dec
les
dec
cmp
pop
adc
xor
xchg
inc
out
loopne
xor
fdiv
xchg
enter
in
pop
(bad)
jp
dec
shl
outs
dec
popa
xchg
je
nop
mov
pop
mov
push
out
sub
aam
in
jg
mov
adc
dec
mov
push
jecxz
aad
stos
fs
loope
in
icebp
jmp
rcr
and
lods
mov
call
adc
xchg
mov
dec
sub
(bad)
pop
sbb
sub
shl
daa
xchg
mov
xchg
stos
sbb
add
inc
sbb
push
out
xchg
test
adc
(bad)
xchg
stos
fwait
dec
es
sbb
sub
jmp
je
push
jnp
ret
out
mov
cmp
ins
inc
push
jnp
xchg
add
scas
adc
xchg
adc
(bad)
leave
sub
mov
mov
jmp
xor
mov
cs
sub
and
mov
cdq
or
sti
stc
pop
dec
ficomp
add
ficom
iret
jg
es
fdivr
dec
or
movs
cmp
cmp
cs
push
dec
pop
int
cli
cmp
ja
mov
in
and
test
fist
ds
js
out
inc
mov
jmp
mov
inc
mov
xchg
push
data16
pop
push
pop
ret
aaa
sbb
cmp
cmp
stos
cmc
pushf
sbb
test
int3
jno
push
xchg
mov
dec
mov
inc
jp
xor
pushf
mov
int3
dec
out
xchg
stos
mov
data16
inc
mov
and
arpl
stos
out
jl
scas
(bad)
sti
inc
dec
out
int
call
aad
pop
push
outs
lahf
mov
and
jmp
fst
add
fcmovbe
retf
dec
sub
sar
in
push
mov
daa
rcl
in
xchg
test
cmp
out
ds
xor
sbb
faddp
jne
push
(bad)
fsubr
or
mov
cmps
hlt
mov
pop
adc
xor
adc
pop
jae
push
sub
pop
or
shl
test
je
test
mov
lahf
lods
int
pop
je
dec
aad
xchg
pop
call
cmp
es
jge
rcl
and
inc
in
loopne
jmp
push
jmp
pop
jp
xchg
xor
inc
jg
pop
xchg
mov
cs
cs
popf
jmp
mov
dec
cdq
jb
push
mov
sub
loope
pop
out
and
xchg
sar
inc
(bad)
fmul
adc
into
cmp
jle
jo
dec
out
frstor
out
jecxz
std
and
je
mov
jl
popf
stos
push
fwait
cmp
call
arpl
fbld
sub
jns
sub
dec
sub
push
aaa
mov
jnp
movs
daa
push
shr
mov
movs
test
mov
sub
lods
popa
xchg
push
xor
in
xor
mov
jno
adc
jmp
push
xlat
iret
jle
rcr
mov
xchg
sbb
xchg
imul
mov
jmp
fsub
cmp
call
jl
mov
sti
add
xchg
mov
mov
mov
in
xchg
xor
xor
hlt
mov
dec
mov
add
jmp
push
adc
cmp
popf
push
pop
(bad)
les
shr
aad
pop
clc
and
popa
mov
mov
or
jmp
ja
call
push
movs
push
js
sbb
dec
and
mov
test
gs
outs
jmp
jle
xchg
xchg
push
movs
lock
or
sahf
and
cs
mov
add
add
sub
lods
test
outs
(bad)
dec
(bad)
gs
clc
dec
dec
cmp
ret
pop
arpl
ins
pop
pop
xchg
and
test
jmp
pop
pop
rcr
dec
and
mov
fwait
in
movs
loopne
out
loop
cmp
ror
rol
add
mov
outs
stos
mov
add
cwde
adc
jle
dec
xchg
in
lahf
js
ds
pop
mov
rcr
dec
dec
ficom
xchg
inc
jmp
adc
jno
jp
popa
adc
dec
clc
cmps
dec
sahf
loope
aam
jb
and
es
(bad)
fld
mov
xchg
xor
icebp
mov
mov
inc
mov
das
in
loop
pop
retf
dec
cmc
lods
push
addr16
mov
sub
arpl
test
mov
push
fidiv
ja
cld
(bad)
fdivp
fdivr
sub
mov
stos
jge
aaa
js
inc
iret
xor
out
sahf
sub
xlat
nop
test
jmp
out
jnp
pop
mov
cld
mov
cmp
xchg
pop
push
outs
xlat
and
cld
fcom
dec
(bad)
out
fsub
fbstp
ja
stc
cmp
je
jmp
fidivr
jl
xchg
jecxz
sar
mov
mov
inc
(bad)
adc
cmp
jmp
lods
pop
fimul
push
xchg
gs
dec
loop
dec
fxtract
jp
(bad)
cmp
xchg
lock
inc
jge
lds
xchg
push
fcomp
mov
aad
repz
jae
push
aaa
adc
cmp
popf
stos
jmp
bound
std
pop
fld
jmp
into
jmp
xchg
sahf
add
sbb
mov
nop
jns
leave
dec
xchg
iret
xchg
je
fst
mov
jecxz
lods
or
jecxz
sbb
shl
mov
in
mov
cdq
cmps
movs
aad
and
cmp
mov
shl
sbb
mov
inc
jo
lods
jecxz
retf
mov
push
je
xchg
mov
cmp
push
mov
test
xchg
and
jp
test
movs
and
adc
mov
jecxz
push
lfs
in
push
mul
retf
push
iret
dec
sub
dec
pop
xor
or
lahf
lock
cmp
gs
push
mov
inc
inc
push
mov
lods
xchg
mov
jns
test
popf
test
popf
xchg
sahf
mov
xchg
aam
cmps
into
pop
movq
and
xor
popa
test
and
movs
mov
cmp
xchg
test
push
dec
inc
retf
pop
daa
mov
xchg
pushf
inc
cmp
mov
mov
mov
push
jo
mov
pop
jne
jns
dec
adc
mov
(bad)
into
cmps
and
outs
adc
imul
and
mov
into
jp
scas
fs
or
scas
adc
jnp
cld
iret
mov
jnp
movs
jg
mov
outs
gs
jae
cli
clc
or
in
retf
xchg
mov
lods
fnstcw
nop
mov
adc
jne
ss
std
and
sub
mov
and
test
and
xchg
call
loop
dec
loope
hlt
dec
mov
mov
push
into
jb
inc
mov
retf
retf
mov
and
repnz
dec
pop
mov
cdq
dec
xchg
xchg
mov
add
xchg
dec
mov
sub
cmps
div
adc
mov
mov
repnz
icebp
fstp
pop
stos
xor
push
jp
pop
ret
pop
mov
retf
es
jb
push
std
outs
aaa
jne
sahf
mov
dec
push
std
aaa
jl
sub
xchg
ret
push
ror
aam
push
xor
push
fstp
inc
and
pop
retf
sbb
inc
cs
pop
je
mov
cmp
ds
pop
mov
jmp
sbb
scas
(bad)
(bad)
test
sbb
sub
jne
inc
push
xchg
ja
push
add
ret
lahf
xchg
jmp
xchg
or
sbb
inc
mov
ins
dec
cli
jg
xlat
cmp
outs
enter
retf
mov
or
sbb
add
pop
xchg
jns
mov
sub
in
or
idiv
mov
jl
(bad)
mov
push
push
(bad)
and
push
add
ret
aaa
in
push
lahf
xor
ja
scas
mov
out
repnz
int3
xchg
dec
mov
push
pop
sbb
dec
adc
stos
and
jl
in
rol
xchg
fs
popf
sahf
and
sub
dec
jge
rcr
(bad)
jno
lea
mov
jne
shl
fst
mov
jmp
popf
mov
cmp
rol
jmp
push
xchg
push
outs
data16
add
sbb
js
xchg
xlat
addr16
pop
pop
cld
sbb
hlt
xchg
aam
add
push
fcomp
je
lds
pop
stos
pop
sub
test
adc
pop
addr16
iret
addr16
pop
xor
and
cmp
ins
test
sub
jl
ret
call
nop
pop
xlat
push
push
xchg
inc
cmps
movs
cmp
ins
nop
inc
iret
pushf
mov
stos
xchg
nop
scas
cmps
dec
(bad)
ins
neg
adc
std
jmp
(bad)
fisubr
cmps
add
lock
mov
push
xchg
and
push
ss
shr
daa
jmp
mov
stos
mov
push
cmc
ret
jge
cmp
push
pop
mov
adc
lock
mov
mov
push
pop
test
adc
mov
int
fwait
pop
stos
pop
push
fadd
push
add
push
jl
dec
sbb
or
inc
sbb
pop
xchg
jmp
mov
sbb
sub
sbb
in
jg
outs
mov
mov
cmc
std
dec
xchg
jmp
mov
push
mov
pop
call
imul
mov
(bad)
mov
ins
pop
mov
cmp
dec
test
ret
sub
les
ror
fldcw
retf
test
ret
aaa
pop
mov
rcr
or
fs
setb
addr16
out
(bad)
push
lods
pop
ret
aaa
in
arpl
movs
mov
cmp
sti
aam
dec
fdiv
push
int
test
ret
or
fwait
enter
push
and
dec
mov
retf
test
popf
sti
test
das
fiadd
pushf
call
or
outs
push
pop
mov
lahf
addr16
xchg
dec
icebp
inc
push
mov
ret
out
ror
mov
push
pop
mov
add
ret
ficomp
mov
das
bnd
dec
ss
dec
mov
int3
out
xchg
int3
movs
or
cmp
fisttp
fsub
fld
cmc
sbb
ss
sahf
js
adc
ins
xchg
dec
in
cli
scas
ret
repz
shl
pop
mov
lock
jbe
in
pop
and
or
cld
mov
test
mov
cmps
pop
pop
mov
ins
pop
cmp
daa
outs
push
mov
mov
push
sbb
pop
shl
pop
pop
into
push
push
jp
mov
(bad)
jmp
jns
std
aaa
popf
cwde
cmps
ror
adc
ins
rol
mov
xchg
test
mov
test
(bad)
mov
ret
mov
xchg
cmp
or
pop
aad
icebp
or
pop
cmps
test
xlat
cs
sbb
xchg
pop
lea
inc
aad
sub
or
cdq
call
(bad)
sub
rcl
stos
sub
lds
movs
dec
pop
add
sub
dec
push
ret
sbb
into
int3
stos
imul
inc
aaa
je
jns
(bad)
sub
mov
push
mov
sub
pop
nop
pop
rcr
sub
mov
pop
or
nop
add
cmp
sbb
sbb
es
ret
push
adc
call
xchg
mov
sub
outs
mov
push
popa
daa
in
inc
lds
cmps
or
add
pop
sub
fwait
pusha
in
repnz
or
shl
sbb
xchg
or
sub
add
lahf
cmc
enter
mov
pop
lods
jmp
mov
mov
cs
test
xchg
xlat
lods
sti
fcom
jnp
or
adc
push
mov
mov
call
inc
aad
rcr
inc
iret
clc
cmp
mov
scas
dec
retf
movs
mov
jmp
test
ja
stos
iret
fucom
outs
out
pop
push
(bad)
adc
or
sub
jo
int3
sub
or
lea
scas
test
leave
jecxz
cmc
mov
xchg
mov
adc
loopne
mov
loope
mov
push
mov
jecxz
in
xchg
out
add
jle
rol
addr16
aas
je
out
out
inc
call
lods
lahf
mov
int3
out
fisttp
mov
sbb
fisub
stos
jmp
fadd
cmps
jmp
out
push
sahf
or
cmp
inc
inc
cmps
sbb
mov
pop
jo
cmp
xor
jne
in
dec
xchg
retf
dec
push
sub
bound
imul
dec
mov
inc
push
cmc
dec
mov
jmp
sbb
mov
cmp
push
xor
inc
ror
pusha
out
(bad)
jle
sahf
jae
jbe
out
jecxz
dec
sbb
imul
or
inc
cwde
cmc
adc
popf
add
stos
(bad)
imul
sub
loope
xor
xchg
pop
cs
clc
or
sub
daa
in
dec
jbe
push
or
mov
dec
xchg
sbb
jne
adc
mov
mov
test
cs
fist
push
add
popf
xor
sub
mov
jmp
mov
(bad)
arpl
cmp
retf
mov
xchg
jnp
or
mov
dec
xor
in
scas
into
jmp
movs
retf
call
mov
fdivr
not
pop
sbb
xchg
sub
mov
cmp
mov
inc
xchg
cmp
cmp
pop
stos
movs
pop
call
lahf
mov
loope
xchg
fdivr
movs
stos
bswap
mov
daa
(bad)
mov
dec
push
repnz
aaa
mov
adc
jmp
mov
xor
jns
mov
xchg
add
and
mov
fistp
js
je
in
jae
cwde
mov
fwait
sub
cmp
and
jp
mov
adc
int
js
ret
fld
jnp
push
movs
loopne
lds
pop
xlat
or
cmp
add
add
(bad)
jl
dec
xchg
in
cmp
add
push
and
mov
iret
cli
loop
in
adc
xchg
jl
ficomp
xor
adc
jmp
iret
xlat
stc
div
sti
div
idiv
out
stos
std
jge
out
out
pop
(bad)
stc
jmp
push
adc
ffreep
(bad)
(bad)
(bad)
pop
std
sti
popf
clc
div
out
jnp
lahf
mov
std
int
iret
jl
jle
(bad)
std
mov
sti
out
jmp
imul
fbstp
jg
xlat
(bad)
jle
cld
std
sti
div
jmp
mul
jle
idiv
cmps
mov
jg
repnz
jle
mov
mov
mov
sti
(bad)
sti
lods
or
push
lock
repz
sub
jge
mov
(bad)
in
leave
std
neg
in
out
sbb
sti
mov
jle
jmp
xchg
idiv
mov
or
rcr
call
pop
or
cmc
jnp
div
sub
fcomip
retf
dec
popf
stos
mov
pop
fwait
hlt
div
mov
or
mov
(bad)
fbld
jg
ds
fcmovnu
out
push
pushf
ret
test
jo
jg
pop
(bad)
sahf
xchg
ja
jbe
sti
outs
aas
aaa
popf
scas
dec
out
jecxz
cld
into
call
(bad)
mov
add
out
stc
mov
fcom
out
mov
sub
sub
jg
popf
jo
push
into
aam
int3
adc
(bad)
dec
fadd
push
cld
sahf
cmp
fnstenv
push
lods
out
lahf
mov
jge
(bad)
std
(bad)
clc
rcr
lods
mov
cmp
pop
in
shr
mov
fisttp
inc
sbb
mov
lods
jnp
stc
std
popf
rol
push
mov
out
jle
pusha
das
mov
or
leave
out
ja
(bad)
xor
ja
into
fiadd
test
cmp
jno
pop
int3
mov
mov
or
addr16
fwait
mov
or
(bad)
sti
out
jae
out
out
xchg
(bad)
fld
sbb
dec
pop
push
popa
push
xor
imul
div
ret
mov
lahf
push
in
pop
(bad)
xchg
addr16
imul
add
leave
cmp
popa
xchg
call
cli
repnz
cmp
pusha
loopne
outs
fcomp
out
dec
aas
adc
out
std
stc
popf
xchg
push
pushf
dec
cmp
arpl
sahf
icebp
or
pop
cmp
xchg
ss
sti
aaa
fld
add
neg
mov
fistp
sbb
stc
ja
cmp
cmp
aas
mov
jno
sbb
mov
or
cwde
jo
mov
fdiv
mov
in
sub
loopne
xor
popf
cmp
mov
dec
mov
loope
addr16
or
add
adc
or
pop
fistp
ret
cmp
jb
clc
popf
push
repz
or
sub
or
cmps
mov
xchg
pop
pop
icebp
mov
jl
or
outs
cdq
jmp
sti
mul
mov
jg
jnp
retf
mov
(bad)
in
imul
pushf
aad
iret
jle
cli
push
test
fistp
jg
push
mov
jo
cmp
in
loop
mov
into
aad
mov
jno
push
xchg
add
or
cmp
add
sti
loopne
and
jnp
sahf
ins
mov
popa
pop
push
movs
sub
lock
or
loope
pop
cwde
cmp
sbb
pop
mov
imul
cwde
mov
sub
push
(bad)
mov
mov
inc
push
mov
xor
lahf
pop
or
clc
aaa
in
inc
xchg
out
push
mov
xchg
or
cwde
push
gs
aaa
pushf
scas
cmp
fcomp
mov
and
pushf
or
fidivr
test
pop
inc
adc
sub
pusha
jae
cld
addr16
mov
sub
push
fcom
xchg
dec
cdq
or
jnp
loopne
adc
push
dec
push
lock
cld
jl
xchg
pop
into
xor
or
mov
fdiv
les
in
mov
xchg
mov
jg
add
dec
leave
aaa
movs
rol
cs
push
dec
jae
in
xchg
loope
dec
idiv
pop
test
dec
(bad)
test
test
pop
pop
into
pop
inc
enter
(bad)
cmp
push
or
mov
xchg
fidiv
imul
aas
ins
fimul
icebp
cmp
sub
cld
(bad)
pop
(bad)
mov
fisttp
data16
xchg
pop
inc
fwait
ds
mov
loopne
xchg
mov
cdq
push
jg
xchg
xchg
(bad)
cld
dec
lds
mov
and
mov
mov
push
movs
(bad)
(bad)
rcl
repz
test
ds
push
pushf
mov
mov
push
iret
pusha
(bad)
ds
lods
jnp
outs
test
cmps
xchg
jp
jl
popa
aaa
outs
rol
xor
jge
stc
ret
pop
pusha
dec
js
push
pushf
xor
sbb
loope
xchg
in
adc
cwde
inc
xor
ins
fbstp
fadd
scas
and
clc
cdq
mov
or
push
jp
jne
pop
in
or
or
cld
pop
mov
adc
jnp
es
ins
cld
and
stc
(bad)
pop
cmp
cmp
nop
frstor
sub
mov
iret
js
xchg
adc
les
lea
into
cmp
or
cmp
dec
adc
lock
jnp
repz
mov
pop
cmp
inc
in
stc
add
clc
jnp
sub
fbstp
aaa
(bad)
xor
and
out
inc
test
ins
cmp
nop
add
shr
jecxz
pushf
fiadd
lds
cld
int
es
and
dec
ret
mov
cld
(bad)
lock
xor
fisttp
addr16
cmps
ret
shr
jge
iret
push
lock
inc
cmp
cld
and
pushf
js
lods
pop
and
pop
ret
inc
pushf
loope
in
rcr
mov
jno
cmps
in
out
(bad)
jno
cmp
xor
xor
stc
pop
shl
scas
or
mov
pop
fisttp
jmp
ret
xor
dec
daa
bound
sti
xchg
jmp
sti
fnstsw
(bad)
loop
dec
popa
adc
std
and
cld
cmp
mov
xor
out
(bad)
sti
ja
push
or
adc
cmps
push
pushf
mov
mov
push
mov
addr16
mov
out
adc
nop
pop
ds
(bad)
jle
js
dec
add
mov
cmp
in
addr16
leave
(bad)
in
inc
in
out
shl
fild
lahf
sbb
es
mov
dec
out
sub
popa
xor
pop
sti
dec
sub
stos
mov
loope
inc
loopne
inc
icebp
cmp
mov
cwde
fild
adc
repz
mov
or
mov
addr16
mov
fwait
cmp
mov
addr16
add
cmps
loop
sbb
mov
push
scas
dec
pop
jns
cmp
xchg
fimul
sti
rcr
sub
cmp
pmaxsw
(bad)
repz
imul
mov
jne
adc
jg
inc
cli
or
dec
sub
xchg
out
aaa
pushf
inc
mov
ficom
ins
(bad)
sar
out
shl
push
cmp
mov
xchg
adc
ins
dec
call
(bad)
cmp
push
sub
retf
aaa
xor
dec
mov
out
popa
xor
fst
mov
fiadd
push
out
ss
cmp
(bad)
jmp
add
fld
cmp
popa
xchg
movs
dec
popf
mov
push
(bad)
mov
bsf
stos
jo
or
call
retf
xchg
sub
test
sbb
xor
sti
sub
jl
and
cli
mov
jmp
pop
cmp
push
sbb
xchg
bound
ja
lock
mov
cld
push
mov
rcr
mov
sub
add
mov
and
cmp
push
dec
je
inc
rol
cdq
jecxz
cmp
(bad)
lock
aaa
out
idiv
ret
es
sti
sub
shl
cmp
es
(bad)
mov
ret
push
js
mov
xor
push
cwde
fld
inc
test
mov
xchg
adc
in
or
jb
mov
adc
dec
xor
call
cwde
xchg
pop
add
pop
sub
ud1
pusha
cmp
mov
jmp
mov
cmps
pop
add
popf
dec
mov
push
pop
adc
fwait
lods
and
pop
push
or
bound
pop
gs
dec
and
push
stc
scas
mov
loop
push
arpl
sub
or
xchg
fst
or
outs
cmp
and
pushf
dec
inc
mov
loopne
imul
mov
adc
sahf
jno
mov
test
aad
or
ret
jb
in
ins
pop
and
int3
in
fcmovbe
and
sub
into
mov
mov
retf
sub
sub
aad
jg
call
mov
imul
(bad)
outs
fdiv
jge
add
sbb
jl
adc
inc
idiv
test
outs
push
jmp
(bad)
(bad)
(bad)
fldcw
lahf
xchg
jp
sbb
movs
das
push
xchg
test
xchg
and
cli
lea
stos
into
cs
mov
cmp
ins
xchg
stos
loop
in
push
popf
into
push
sub
fs
inc
ins
xchg
or
in
jmp
inc
shr
lods
clc
sti
dec
push
aaa
xchg
(bad)
pop
mov
outs
ja
les
retf
out
aaa
sahf
mov
cmp
int
mov
scas
mov
push
les
lahf
or
inc
cs
mov
(bad)
(bad)
repnz
dec
jo
(bad)
bound
pop
pop
inc
jbe
jg
sahf
xchg
ja
adc
dec
cmc
adc
xor
adc
or
inc
xchg
push
xchg
ror
enter
dec
pop
in
mov
push
sub
loop
mov
sti
(bad)
pusha
pop
mov
xchg
or
xchg
popf
and
dec
aam
jno
les
mov
(bad)
movs
shl
mov
pop
test
xchg
push
mov
pop
add
pushf
inc
jae
push
gs
fldenv
(bad)
nop
jbe
(bad)
cli
xchg
add
push
bound
fdiv
xchg
xchg
mov
and
es
int3
and
dec
addr16
sub
call
fimul
sbb
xchg
xchg
pop
out
jmp
jne
push
test
repz
fistp
mov
fidiv
stos
or
and
ret
sbb
(bad)
fiadd
add
or
out
in
jmp
push
enter
or
cmp
out
jmp
js
(bad)
out
adc
in
adc
cmp
sub
ja
xchg
xchg
fwait
in
fcom
ds
and
punpcklwd
dec
outs
fnstcw
(bad)
sar
sub
frstor
test
lea
cmp
adc
inc
jge
mov
pop
xchg
or
inc
cdq
js
scas
pop
push
jmp
inc
cdq
loope
pop
xor
jmp
out
dec
mov
pop
jb
mov
push
jmp
and
jmp
cli
fisub
pop
test
lds
sub
xchg
jp
sub
mov
and
les
or
(bad)
mov
xchg
jo
clc
mov
pushf
in
xchg
cli
jo
add
inc
adc
loop
inc
mov
mov
fcmovb
xchg
pop
dec
sub
(bad)
inc
sub
in
movs
sbb
nop
xor
xor
and
gs
mov
sub
(bad)
xchg
cmpxchg8b
cmps
retf
inc
mov
nop
ret
push
mov
adc
and
(bad)
xchg
jp
jmp
iret
inc
cmps
inc
(bad)
mov
pop
mov
bound
mov
inc
(bad)
fucomip
pop
mov
mov
(bad)
repnz
arpl
xchg
cmc
cs
jge
inc
icebp
popf
sub
jle
sub
aaa
dec
sar
stos
jl
das
repnz
stos
repnz
mov
ins
into
and
aas
icebp
scas
inc
and
inc
cmp
sub
xchg
fs
mov
int3
add
mov
xchg
outs
sub
adc
inc
jno
sar
clc
cdq
es
fucom
inc
jbe
jbe
stc
aad
push
push
pop
in
xchg
jns
test
xor
neg
cmp
mov
dec
leave
iret
xchg
mov
mov
or
bound
fidiv
ror
cmc
mov
adc
(bad)
push
push
cli
or
mov
xchg
or
push
movs
push
arpl
add
xchg
jne
or
jne
jbe
mov
mov
pop
clc
pop
test
mov
sub
repz
popa
sbb
mov
fwait
pushfw
out
sbb
imul
in
mov
movs
push
xchg
repnz
pop
sbb
jae
inc
cmp
imul
outs
xor
movs
pop
cmps
int3
mov
mov
push
and
(bad)
bound
movs
mov
addr16
lods
jns
ja
mov
mov
xchg
paddusb
mov
loopne
push
les
and
fld
jecxz
fisttp
fadd
retf
push
in
cmps
test
xchg
test
inc
repnz
aaa
dec
fiadd
icebp
mov
retf
xchg
jmp
mov
mov
inc
out
mov
adc
cmp
fwait
pop
imul
test
xor
test
jl
(bad)
stos
xchg
and
sbb
test
xchg
push
pop
xchg
jmp
mov
push
push
ss
jnp
jbe
mov
dec
pop
outs
shl
out
outs
inc
cmp
repz
cs
cmp
scas
ret
push
cdq
inc
or
call
and
sub
ds
push
(bad)
scas
mov
xchg
stos
aam
in
rol
and
xor
ds
xchg
sbb
es
mov
fist
add
retf
mov
cmp
mov
xchg
mov
cmp
inc
push
movs
cmp
sub
inc
sub
xchg
add
sub
lock
jmp
mov
jnp
or
jmp
out
inc
adc
out
js
add
xor
pop
ja
ja
loopne
fstp
jmp
xor
fcmovnb
mov
fs
out
data16
xor
push
rcr
xor
mov
xchg
ja
dec
cmc
xor
mov
pushf
push
and
cwde
outs
sub
test
cmp
movs
outs
fiadd
movs
add
add
cs
sub
je
mov
mov
push
or
jb
inc
cs
and
cmp
mov
test
and
adc
jl
gs
clc
sar
mov
daa
dec
sbb
out
repnz
xchg
xchg
je
xchg
push
mov
(bad)
call
sub
or
es
fstp
je
mul
mov
or
fnsave
arpl
addr16
out
or
sbb
or
aad
stc
clc
push
jo
push
or
jle
mov
xchg
sub
inc
mov
rcr
sub
cwde
out
pop
jbe
adc
push
aam
add
jle
sahf
cmps
lock
clc
je
mov
push
jle
cmc
pop
xchg
call
in
cs
test
or
outs
inc
pop
mov
push
movs
dec
and
bound
test
mov
lods
mov
dec
push
das
mov
(bad)
test
sbb
popf
dec
jecxz
sub
mov
add
out
cmp
loopne
push
push
loopne
cmps
sti
inc
cmp
nop
call
inc
idiv
push
jmp
xor
sti
jae
push
(bad)
adc
inc
clc
jbe
fadd
inc
sar
imul
push
cmp
mov
repnz
imul
mov
pop
shl
retf
push
imul
imul
js
add
mov
dec
lea
stc
in
mov
xchg
inc
and
test
out
cs
fwait
loop
mov
fisubr
or
loop
mov
cmp
(bad)
or
shr
outs
push
imul
es
test
sub
test
daa
xchg
stos
mov
or
mov
aam
adc
jbe
(bad)
push
cld
or
adc
add
outs
mov
push
clc
dec
inc
mov
and
mov
inc
inc
lock
jns
loope
int3
(bad)
pop
inc
mov
call
and
int3
and
in
je
mov
xlat
and
sbb
outs
shl
addr16
fwait
mov
mov
sub
inc
dec
in
cs
lds
dec
fadd
jmp
xor
and
mov
enter
push
inc
clc
jbe
pusha
or
fnsave
mov
add
pop
pop
adc
jl
sbb
sahf
sub
cdq
out
dec
call
fsub
sub
xchg
stos
not
jl
outs
mov
test
ja
pop
in
scas
ret
lds
inc
adc
mov
adc
rcr
jge
sahf
inc
fistp
push
fidivr
push
fidivr
inc
aaa
jnp
xchg
jmp
push
pop
sub
retf
out
mov
pop
xor
sub
cmp
cmp
jb
mov
mov
cmp
and
cmp
mov
leave
(bad)
adc
fsub
mov
and
shl
mov
call
lds
inc
(bad)
in
imul
sbb
pinsrw
cmps
fisttp
jno
out
ja
test
inc
bnd
bound
lods
pop
lea
call
xchg
push
aaa
push
jl
(bad)
rcr
loop
dec
xor
ins
(bad)
and
fwait
repnz
idiv
push
mov
int3
pop
xchg
cs
mov
jl
rol
ficom
arpl
sub
cmps
add
xchg
jge
int
mov
inc
and
sar
push
mov
cmps
sub
xchg
stc
cmp
idiv
std
jmp
clc
and
cmp
jg
ss
daa
pop
cmp
mov
xchg
cmp
sbb
arpl
mov
sbb
dec
jle
dec
cmp
dec
retf
loop
jp
adc
jo
fdivr
pop
adc
mov
dec
mov
mov
mov
std
je
into
mov
push
push
test
mov
out
sub
scas
cmp
test
hlt
fcomp
add
add
lea
out
nop
(bad)
pop
leave
sub
jae
mov
push
fidivr
jno
push
sti
test
mov
cmp
in
mov
addr16
cmps
fisub
dec
push
and
ret
call
inc
adc
movs
es
xor
in
xchg
inc
outs
cwde
inc
xor
test
dec
dec
loope
push
icebp
sti
sub
sbb
(bad)
(bad)
xchg
mov
and
ja
jge
mov
add
or
out
dec
dec
jne
inc
jne
stos
fcmovu
mov
sbb
xchg
lods
dec
repnz
mov
or
push
mov
or
loope
mov
dec
adc
adc
mov
push
lahf
adc
cdq
mov
push
stos
out
fnsave
xor
dec
xchg
inc
or
sub
fldenv
xchg
loopne
out
and
inc
ins
push
mov
popa
sbb
cmp
push
fcmovne
lock
push
mov
dec
gs
sti
mov
ja
mov
mov
int3
xor
iret
xlat
pop
test
sahf
lock
mov
jmp
movs
jmp
retf
sahf
dec
lock
rcr
clc
ss
xor
outs
inc
popa
push
pop
sbb
push
pop
mov
jne
cmp
fs
inc
xchg
retf
sbb
sub
retf
or
out
dec
push
mov
imul
push
xor
cmps
pop
imul
sahf
xor
mov
cmc
cmp
mov
fnsave
or
lods
(bad)
sub
sub
in
int3
mov
push
fcom
int
sub
push
mov
mov
push
out
cmps
xchg
mov
jmp
in
mov
push
fst
xchg
loop
mov
ret
adc
scas
jae
out
adc
xchg
sahf
xchg
add
jge
retf
(bad)
fst
sbb
mov
dec
in
mov
movs
dec
dec
popa
adc
fild
(bad)
lock
inc
fwait
movs
or
inc
popf
popa
cwde
jnp
jb
add
popa
fcomp
add
data16
mov
add
jecxz
fmul
and
rcl
outs
inc
dec
inc
dec
out
push
ficomp
clc
mov
out
dec
js
mov
lods
pop
retf
lds
xor
outs
xor
mov
cld
adc
mov
inc
dec
(bad)
xchg
adc
stos
outs
shl
shr
xchg
push
(bad)
push
cld
ins
xchg
or
push
mov
je
adc
sbb
fimul
dec
sub
jmp
push
js
mov
sub
inc
ret
mov
fsubr
test
fwait
repnz
popf
out
pop
aaa
aad
mov
in
push
hlt
mov
pop
repnz
dec
jbe
popa
and
sub
test
call
mov
lahf
cs
xchg
sub
jbe
dec
pop
mov
mov
mov
dec
in
dec
jno
pop
fwait
jp
(bad)
push
ret
xchg
mov
ret
push
jp
jl
mov
into
repnz
cli
fcom
ds
push
push
aaa
push
ja
imul
mov
sub
les
shr
jns
dec
cdq
int3
sar
movs
fsubr
mov
mov
push
mov
cdq
mov
fldenv
fadd
pop
sahf
push
pop
imul
jmp
cmp
mov
adc
popf
ret
dec
aaa
xchg
in
push
lea
(bad)
lock
(bad)
icebp
mov
inc
pop
sub
xor
dec
mov
mov
inc
lods
cmp
lds
ja
mov
push
jmp
popa
cdq
addr16
je
xchg
rcr
and
sub
mov
xchg
pop
mov
lock
sub
xor
mov
or
push
mov
in
cmp
jmp
mov
jle
push
arpl
ret
pushf
xor
xchg
jno
test
test
adc
fst
scas
and
sbb
out
inc
push
cs
xchg
loope
dec
scas
mov
push
repz
test
push
xchg
movs
lock
arpl
dec
or
lods
or
sub
and
push
dec
imul
jns
sub
outs
xchg
or
or
nop
pop
addr16
imul
mov
jns
jecxz
retf
inc
push
fmul
jb
inc
adc
xchg
(bad)
icebp
rcr
sbb
pop
test
cs
jae
test
sbb
add
and
and
mov
dec
repnz
popa
(bad)
dec
aam
cmp
and
call
cwde
inc
ror
fs
push
popa
pop
or
popa
popf
mov
xchg
aad
cdq
ret
push
cmc
ret
push
loopne
mov
ins
lahf
mov
aas
dec
sub
and
mov
fs
dec
sbb
cmp
fs
nop
lods
mov
cs
mov
xor
aaa
aad
cs
xchg
and
test
pop
stc
pop
pusha
mov
loope
sbb
fidiv
frstor
gs
or
stos
xchg
pusha
xchg
into
dec
in
in
popf
popfw
or
leave
(bad)
sub
push
xor
pop
mov
push
push
xor
loope
sub
cmc
cmps
mov
xchg
sti
ja
loop
jne
fld
dec
addr16
(bad)
mov
mov
aam
mov
in
(bad)
cmp
add
cs
cmps
(bad)
jb
rol
lds
pop
cli
fnstcw
(bad)
xchg
nop
test
xor
pop
mov
rcr
sub
push
mov
cmc
cs
(bad)
lock
mov
dec
lods
cmps
repnz
mov
test
lock
ds
mov
push
jmp
jne
leave
adc
mov
jno
cs
xchg
iret
mov
sti
int3
pop
cmps
cld
jns
mov
lock
sbb
shr
ins
jns
test
outs
jne
pop
mov
xor
push
nop
sbb
cmp
(bad)
hlt
or
cmp
out
fld
out
ret
jo
shr
mov
sbb
push
xchg
mov
test
xor
mov
enter
jge
mov
fwait
fs
mov
rcr
and
loope
cmp
sub
enter
jmp
push
loope
pop
sar
ins
push
sub
ds
aaa
popf
arpl
rol
ja
std
and
adc
push
aam
stos
movs
dec
cmps
xor
int3
jae
cmp
loope
xchg
pop
push
sub
(bad)
popf
jb
dec
and
mov
pop
loope
int
xchg
cmp
je
sub
cdq
shr
fcomp
push
shl
shl
mov
rcl
fiadd
xchg
mov
cld
sbb
cli
cs
sar
mov
imul
das
pushf
fld
leave
mov
lods
jmp
mov
mov
nop
gs
xchg
cmp
and
fist
mov
in
outs
inc
push
xchg
shl
jp
mov
mov
rol
test
fdivp
cmp
push
push
lock
aam
in
cmp
xchg
loopne
push
shl
test
retf
inc
pop
mov
add
std
mov
aad
xchg
push
repnz
shl
push
sub
cmp
cld
xchg
(bad)
in
out
clc
or
test
jbe
and
mov
and
xchg
and
aaa
xchg
inc
cmp
loope
shl
inc
xor
mov
adc
hlt
out
cmp
rcl
out
mov
repnz
xor
xor
and
fldenv
or
adc
iret
add
pop
mov
mov
outs
cs
cmc
mov
push
push
stc
iret
jmp
sbb
push
fstp
jecxz
pushf
jecxz
imul
imul
cwde
bound
fild
adc
movs
scas
hlt
adc
aad
and
ror
inc
mov
dec
xor
dec
inc
test
pop
fisttp
add
shl
mov
cmp
mov
out
pushf
loope
jle
xchg
push
xchg
das
mov
sub
xor
mov
ret
test
ret
out
sbb
lds
lahf
movs
mov
scas
inc
push
push
adc
(bad)
xlat
cmp
and
aas
xchg
sub
adc
stos
les
mov
pop
aam
push
jmp
repnz
int3
sbb
js
push
repnz
jns
repz
(bad)
xchg
movs
ins
test
jle
pop
dec
xchg
dec
xor
push
test
retf
popa
or
jl
cmp
push
push
mov
fidivr
stos
mov
fnstenv
outs
add
jg
xchg
pop
pop
test
pop
jns
lods
shr
ins
data16
mov
sbb
sbb
fwait
sub
cwde
mov
adc
dec
xchg
fsub
xchg
lds
shl
pop
mov
imul
ficom
pop
sub
inc
loope
pushf
test
test
xchg
push
pop
xchg
xchg
inc
icebp
(bad)
es
cmp
or
cs
not
pop
dec
hlt
jp
out
mov
pushf
pop
mov
nop
inc
adc
aaa
sar
js
shr
movs
test
cli
sti
or
and
je
sbb
xchg
rcr
adc
mov
in
cmp
ret
jge
jle
mov
pop
jmp
mov
or
sub
mov
cmp
out
jg
jp
sub
lock
mov
mov
out
cmp
inc
fdivr
mov
rcl
push
dec
pusha
mov
daa
add
test
pop
cmp
xchg
jp
xor
adc
and
shr
jnp
leave
mov
lahf
push
mov
das
loope
les
fild
bound
test
or
sub
pop
cmps
mov
ret
mov
(bad)
repnz
jge
push
cmps
ins
or
mov
into
inc
pop
mov
mul
hlt
sub
dec
mov
add
push
jmp
mov
push
push
or
iret
pop
ret
mov
outs
pxor
xor
sub
mov
fisttp
mov
jp
push
out
dec
fcmove
cs
dec
inc
mov
std
sub
(bad)
sub
aas
or
cmp
mov
sub
pop
fnstsw
sbb
pop
and
mov
push
mov
mov
mov
cmp
adc
push
fldcw
dec
int3
retf
mov
stos
inc
cmc
lock
adc
sbb
xchg
pop
gs
inc
inc
mov
jno
loop
jae
adc
icebp
je
sbb
xor
jne
lods
addr16
mov
pop
cmps
repnz
pop
out
ret
xchg
jbe
movs
fadd
ss
lds
dec
cdq
sub
lock
clc
(bad)
pop
jb
push
repz
iret
pop
stos
repz
ja
jne
(bad)
mov
js
sub
gs
fcom
jge
not
dec
rcl
adc
leave
aaa
inc
aad
cmp
mov
scas
jnp
sti
push
js
pop
leave
retf
repnz
mov
popf
daa
mov
push
and
sub
test
cmps
fsub
push
(bad)
xchg
les
jmp
pop
aam
inc
mov
or
loope
mov
cmps
sub
jns
xlat
and
jmp
xchg
test
movs
push
cmp
or
mov
clc
xor
repz
sbb
pop
rcr
jnp
jae
test
arpl
pop
mov
xor
out
js
push
pop
and
and
rol
sbb
dec
jne
clc
mov
fld
sar
aas
shl
pop
push
mov
xchg
outs
xor
sub
xchg
retf
popa
xchg
popa
jb
cmp
mov
mov
repz
nop
cmp
pop
xchg
and
test
mov
mov
fnstcw
xchg
inc
sar
sti
mov
or
and
pop
jo
je
pushf
xchg
sahf
adc
cmps
inc
fld
push
lahf
mov
out
mov
dec
out
loop
mov
mov
sub
pop
js
mov
xchg
jnp
imul
adc
mov
pop
adc
sbb
int3
stc
cs
xchg
bound
or
enter
sub
pop
cmp
int3
mov
dec
hlt
mov
retf
fiadd
ins
jmp
fs
movs
xor
nop
fidivr
pop
dec
test
and
cs
lahf
dec
lods
stos
loopne
cmps
bound
pop
and
imul
(bad)
inc
retf
fidiv
mov
pushf
out
out
or
cwde
loop
loope
inc
jb
pop
stos
sbb
jne
ficomp
mov
pop
push
or
ret
icebp
test
and
xchg
fst
hlt
test
mov
adc
mov
mov
sbb
enter
cli
adc
cli
push
mov
bound
test
inc
jne
xchg
outs
addr16
les
test
or
mov
xchg
repnz
shl
cmps
push
retf
fcomp
jmp
cli
push
adc
shl
sub
test
jmp
es
xchg
sbb
push
push
adc
sbb
enter
ror
fcom
xor
je
jns
hlt
cmp
sbb
and
push
ds
cs
mov
push
sub
cdq
pop
pop
sub
mov
enter
pop
std
push
addr16
or
and
dec
aam
xchg
cwde
or
test
and
dec
xor
rcr
rcr
sub
push
inc
dec
ins
mov
in
cmp
push
test
loope
pop
stos
cwde
into
lock
cmp
sub
mov
pop
mov
mov
mov
push
pop
cmp
movs
fidiv
push
stos
ds
xchg
adc
dec
xchg
xor
cli
xor
test
(bad)
pop
push
inc
and
out
fwait
test
outs
rcr
push
movs
add
and
mov
sub
iret
out
inc
stos
not
mov
push
xchg
push
mov
dec
movs
sub
jp
lds
fsub
scas
cmp
mov
int3
gs
rcr
adc
sbb
ins
cmp
push
push
jbe
add
dec
test
fcom
xlat
fcom
push
mov
movs
popa
mov
xchg
das
scas
sub
add
loope
sub
jno
or
lods
cmp
nop
fcmovbe
jns
pop
add
inc
fisub
daa
jl
cmp
dec
push
xchg
lods
sub
popa
cld
dec
pushf
in
push
retf
dec
stc
dec
jns
or
out
push
push
scas
jnp
pop
push
int3
jge
pop
movs
(bad)
fld
push
sub
loope
and
pushf
fdivr
std
adc
ror
fldcw
mov
(bad)
test
leave
dec
and
mov
dec
xchg
xor
mov
ins
retf
shr
sub
adc
(bad)
test
ja
and
mov
or
in
dec
arpl
inc
inc
cmp
shl
cs
sub
or
sbb
fmulp
fist
leave
or
mov
packuswb
(bad)
dec
lods
out
loope
dec
xlat
std
(bad)
retf
cld
std
and
shr
and
mov
push
outs
push
in
sbb
out
rcl
std
cmps
sub
dec
pop
add
add
dec
loop
pop
js
sub
loope
les
cs
sub
(bad)
stos
cmp
sahf
mov
es
jnp
xor
sbb
xlat
add
mov
in
mov
dec
jne
out
pop
push
xchg
adc
fwait
and
xor
push
stos
daa
mov
pop
fild
dec
xchg
jbe
adc
call
fwait
in
dec
sub
inc
jmp
stos
fdivr
or
ret
clc
js
leave
xchg
popf
xor
mov
scas
push
in
sbb
cmp
mov
aas
leave
mov
(bad)
into
(bad)
out
scas
clc
(bad)
(bad)
adc
mov
mov
xchg
mov
leave
por
ss
cmp
mov
bound
in
popf
loop
out
scas
adc
inc
add
fisubr
std
scas
xchg
jne
lds
mov
in
(bad)
clc
jbe
ficom
arpl
or
xchg
mov
je
sahf
xchg
push
pop
fwait
cli
mov
push
inc
jns
jmp
adc
xchg
add
push
adc
dec
mov
out
cmps
cmp
add
out
out
or
inc
dec
mov
xor
pusha
or
sub
xor
inc
sbb
jmp
sub
inc
adc
ret
pop
push
daa
in
push
push
pushf
fwait
push
cmps
loop
mov
pop
aam
xchg
xor
jno
daa
clc
push
sti
mov
test
repnz
jbe
push
aaa
(bad)
ins
cmp
mov
push
cmp
inc
cmc
loope
nop
loop
out
lea
mov
(bad)
fistp
xor
xchg
xor
or
popa
fs
mov
pushf
add
icebp
fmul
lock
adc
ret
jnp
cmps
pop
ror
pop
test
loope
scas
in
xchg
cs
mov
dec
js
adc
cmp
sub
lea
pushf
pop
xor
cmp
lock
push
cmp
add
jl
ret
and
mov
test
dec
rcl
outs
xchg
stos
addr16
iretw
(bad)
dec
sub
mov
out
pusha
xor
xchg
cmps
retf
scas
xchg
cmc
jge
das
pop
out
cmp
std
adc
int
stos
push
or
jo
pop
mov
xchg
cmp
mov
add
mov
jge
repnz
and
mov
or
inc
dec
fwait
inc
aaa
call
or
sub
in
sub
xchg
out
ss
imul
int
rcl
cmp
scas
inc
sub
stc
mov
or
adc
in
div
outs
enter
in
jns
xlat
jmp
ja
popa
rol
push
jmp
dec
or
iret
aam
xchg
lods
(bad)
sub
mov
mov
clc
lods
jns
fcom
mov
pop
test
ja
sar
cmps
imul
dec
dec
pop
push
mov
fdivr
xchg
xchg
mov
mov
sbb
lods
jnp
jnp
or
test
lds
test
sbb
xchg
addr16
sar
popa
xchg
jp
mov
jns
cs
mov
jle
cs
js
xchg
js
sub
mov
cmp
movs
jl
outs
ror
push
mov
push
in
enter
gs
movs
cmp
ret
mov
gs
adc
push
out
inc
cmp
jmp
sbb
out
bound
jp
push
xor
inc
jmp
xor
inc
xchg
arpl
sub
push
mov
mov
inc
ret
jecxz
sbb
xlat
fwait
(bad)
pushf
or
or
cmp
add
jbe
cmp
push
daa
in
dec
js
jp
sub
push
mov
add
outs
mov
popf
add
pushf
pop
aaa
out
jle
ret
lds
xchg
mov
cmps
movs
mov
or
popf
mov
push
cmc
fdivr
je
and
sub
push
fdivr
adc
out
cli
not
cmp
add
jns
ss
push
mov
hlt
adc
jl
inc
cwde
inc
mov
jge
fld
mov
jns
clc
into
xchg
mov
cmps
jmp
imul
sbb
fld
mov
sub
cmp
sub
pop
loop
push
dec
hlt
mov
das
lds
pop
mov
call
leave
(bad)
repz
jns
push
outs
xchg
(bad)
xchg
ret
or
sbb
inc
(bad)
jg
(bad)
out
sub
xchg
pop
and
mov
nop
stos
xchg
jo
sar
lds
mov
dec
fcom
test
in
xor
dec
sub
lods
dec
mov
scas
ja
retf
mov
cmp
mov
hlt
mov
inc
pop
call
dec
push
ror
(bad)
cmp
or
outs
cdq
fwait
bound
mov
out
mov
popa
sbb
mov
sbb
sub
push
mov
js
scas
mov
(bad)
div
popf
dec
fdiv
push
mov
xchg
pop
fdiv
dec
pop
ret
lods
test
dec
xchg
out
mov
arpl
in
mov
mov
retf
adc
mov
fs
rep
sbb
icebp
jnp
xchg
ins
mov
adc
dec
cli
jo
adc
sub
loop
in
add
shr
das
shr
movs
jae
es
aad
xor
dec
out
into
sahf
xchg
lock
rcr
shl
loop
push
mov
mov
jmp
pop
push
out
inc
je
daa
mov
dec
pop
in
cmps
pop
outs
adc
stos
clc
mov
lods
ret
leave
sub
out
jmp
movs
mov
test
xchg
xchg
sbb
loop
dec
hlt
xchg
adc
mov
js
sub
data16
mov
push
nop
pop
nop
and
aas
and
adc
ja
jmp
push
and
call
adc
add
push
shr
ret
test
pop
(bad)
retf
push
jno
pop
push
mov
loope
int
retf
ret
leave
xchg
cld
jo
out
cs
cmp
dec
pushf
mov
out
mov
push
add
je
sbb
out
dec
mov
aad
mov
(bad)
sbb
cmp
mov
repnz
mov
mov
push
mov
xchg
inc
pop
leave
jbe
rol
aad
stos
call
jmp
pop
adc
pop
xor
(bad)
sbb
jmp
jg
inc
jg
ret
push
es
pop
dec
leave
push
loope
pop
jne
xcrypt-cfb
cmps
mov
sub
lahf
mov
dec
subps
daa
or
in
rcr
retf
bound
leave
jae
sub
loop
or
mov
sub
jmp
mov
sbb
mov
loopne
jmp
sub
ds
push
push
pushf
xchg
adc
mov
pop
clc
push
outs
loope
setge
ja
loopne
fadd
jbe
mov
xchg
dec
(bad)
in
pop
push
ss
mov
jbe
adc
push
cmc
pop
dec
arpl
(bad)
mov
dec
rcl
inc
inc
popa
pop
dec
adc
jbe
lods
ret
mov
stos
fsubr
inc
(bad)
mov
jne
prefetch
or
cmp
repz
or
mov
dec
dec
xchg
sub
stos
push
fnstsw
or
pop
dec
jecxz
inc
pop
fstp
cs
or
jns
or
add
mov
mov
lock
sub
mov
imul
and
stos
jb
xor
scas
loope
out
xchg
sbb
jmp
xchg
xchg
cmc
push
(bad)
leave
mov
inc
enter
or
add
pop
ret
push
call
or
pop
cli
sub
fucomp
cwde
add
lock
inc
inc
call
test
mov
shl
jl
shr
repz
xor
gs
pop
jb
jmp
jmp
push
and
and
xchg
call
xchg
push
fiadd
jne
movs
jno
push
xchg
inc
lea
jmp
mov
jb
jno
movs
mov
mov
cmp
ss
push
test
pop
cmps
push
inc
nop
push
adc
ins
mov
iret
rcr
mov
xchg
jne
dec
jmp
dec
retf
mov
movs
xor
sub
repnz
push
cld
or
out
mov
out
cmc
cmp
sub
xchg
xor
ins
nop
aaa
inc
popa
mov
into
outs
fwait
das
push
inc
add
(bad)
call
mov
jmp
or
jmp
popa
mov
inc
and
(bad)
dec
mov
pop
ror
clc
lahf
jo
dec
jecxz
pop
xlat
aas
mov
lahf
pop
iret
aas
mov
out
hlt
iret
scas
sti
lahf
pop
in
repz
out
sahf
iret
mov
rep
jg
cmp
(bad)
jg
(bad)
jl
jle
(bad)
stos
lahf
iret
cmp
lahf
repz
sar
out
jne
(bad)
jl
mov
iret
out
(bad)
out
sti
out
cli
out
out
out
cmc
repz
repz
in
int
out
out
xlat
cli
cld
ffreep
sti
repz
inc
jl
(bad)
retf
out
cmp
jge
out
fld
dec
mov
mov
sti
cld
(bad)
div
or
xchg
imul
call
mov
ds
jmp
out
jg
loop
fstp
mov
mov
ds
out
repz
sahf
lahf
mov
sti
std
shl
mov
sti
mov
jo
(bad)
jb
jne
lahf
imul
iret
cmp
mul
mov
lods
stc
stc
mov
jnp
loop
jo
ss
test
jmp
mov
(bad)
div
pop
pop
pop
(bad)
aaa
fidivr
jge
out
sahf
and
mov
aas
lock
(bad)
imul
stos
addr16
adc
arpl
(bad)
jl
mov
cs
jmp
imul
mov
out
mov
mov
mov
cmp
mov
(bad)
cmp
fist
sti
xor
cli
pop
fsubr
jecxz
xor
iret
inc
jne
fsubr
pop
iret
and
ja
movs
sbb
jg
xchg
push
test
cmp
fdivp
das
(bad)
push
fld
and
jns
test
jle
jmp
jmp
(bad)
mov
mov
iret
xchg
sub
sti
sti
inc
lods
cli
pop
pop
into
jno
xlat
aad
cmp
(bad)
stc
cmp
cmp
out
addr16
jge
mov
bound
or
mov
(bad)
mov
mov
fsubrp
sar
or
out
sar
pusha
push
mov
mov
adc
xor
(bad)
sbb
jge
ja
je
add
daa
in
stos
xchg
pop
pop
lods
xchg
or
jmp
xchg
xchg
aaa
sbb
sti
shl
xchg
jle
jns
imul
fidivr
inc
push
jl
mov
jecxz
inc
into
pop
clc
out
adc
in
sar
retf
mov
xor
lods
lea
fisubr
push
cld
outs
clc
cs
loop
mul
xlat
or
pop
inc
sbb
in
ja
mov
xor
repz
xor
mov
js
(bad)
repz
mov
popa
das
loop
(bad)
jnp
les
mov
cld
into
cwde
jmp
cmp
jb
push
pop
sbb
adc
inc
sbb
pop
ja
sahf
aad
cmp
ja
pop
out
ffreep
fidivr
mov
pop
sti
lods
scas
xchg
loop
in
sbb
loop
pop
pop
jmp
ins
jo
std
std
lds
jecxz
call
jnp
mov
push
sub
aaa
pop
mov
jmp
ins
scas
jns
ja
pop
iret
pmaxsw
rep
mov
inc
ret
call
mov
icebp
out
sbb
jne
outs
(bad)
or
cmps
mov
sti
lods
pop
movs
call
mov
in
rol
in
sbb
xchg
mov
daa
scas
stos
and
pop
sub
aad
jg
mov
cmp
jae
pop
dec
dec
xlat
pop
nop
(bad)
cs
xor
icebp
inc
xor
lds
mov
imul
cmp
repnz
cmp
(bad)
jmp
push
popf
xor
outs
lods
in
inc
icebp
lock
ja
icebp
call
imul
arpl
pop
js
ret
xor
fistp
lahf
dec
jl
mov
push
jge
xchg
xlat
daa
loop
push
in
fcom
pop
call
fnstenv
iret
cs
int
fcom
jno
cwde
jae
inc
sti
jbe
dec
pop
add
ja
add
jne
mov
repnz
ret
ds
ret
lods
or
lahf
mov
pop
test
jae
dec
mov
xor
adc
dec
aam
or
push
fistp
jmp
mov
adc
test
dec
jo
fs
les
mov
sub
(bad)
cmp
mov
aaa
int3
sub
movs
mov
test
popf
mov
jmp
jecxz
sahf
fdiv
or
xchg
push
jae
in
xor
out
fdivr
inc
push
retf
dec
cmc
int3
xor
out
lea
and
jno
(bad)
call
add
cdq
std
shr
cs
inc
das
xor
cmp
pop
inc
pushf
dec
retf
xor
dec
dec
stc
inc
iret
fld
jo
sbb
fcom
loop
(bad)
dec
push
(bad)
mov
xchg
out
jecxz
jmp
add
pushf
jno
pop
les
cmp
js
mov
sti
jns
xlat
aas
aaa
jns
jne
lea
loop
aam
gs
mov
mov
dec
stos
test
sub
test
and
aaa
push
cld
add
push
push
cmps
inc
cmp
(bad)
mov
cmc
pop
mov
(bad)
daa
lods
mov
fisub
cld
out
adc
aad
adc
xchg
jp
movs
mov
movs
mov
add
jle
(bad)
fbld
adc
push
pop
jl
mov
aas
sub
or
mov
sub
and
dec
and
ret
and
adc
adc
dec
(bad)
(bad)
sbb
sub
sbb
inc
jns
cs
or
int
div
cmps
pusha
jmp
xor
push
adc
mov
adc
pop
xor
add
movs
sbb
out
addr16
pop
gs
data16
adc
retf
pop
mul
(bad)
cmp
push
add
dec
test
mov
test
dec
inc
mov
inc
cmp
addr16
cld
cmp
loope
iret
test
(bad)
imul
adc
fidivr
jle
mov
neg
push
rol
push
mov
out
and
cmps
popa
lahf
(bad)
mov
mov
lods
dec
cmp
lods
cmps
dec
shl
je
sahf
lock
xor
inc
cdq
dec
clc
ins
and
push
rcl
dec
jmp
mov
inc
or
dec
fiadd
test
jmp
mov
mov
je
sbb
lds
adc
push
out
in
mov
arpl
cmp
call
cmp
jns
jp
inc
aam
push
push
mov
mov
sbb
mov
iret
or
inc
sahf
pop
pop
stos
movs
mov
in
jge
jp
iret
cdq
or
fdivp
dec
dec
rcl
ja
rcl
movs
jb
mov
js
sub
sbb
pop
pop
pop
pop
adc
inc
(bad)
jb
cmc
sbb
sbb
push
add
dec
idiv
adc
jns
aas
mov
pop
xchg
or
push
movlps
rcr
sahf
leave
and
mov
das
push
cmp
retf
dec
mov
lahf
xor
stos
in
fdivr
xchg
pop
inc
mov
aad
lock
sar
(bad)
push
dec
das
shl
dec
aad
or
aad
pop
test
mov
outs
js
(bad)
pop
cmp
rol
sbb
loope
test
loop
pop
sub
push
fistp
cs
inc
mov
adc
(bad)
jnp
mov
jmp
movs
pop
lahf
rol
(bad)
pop
iret
cmps
sahf
cmp
jne
pop
adc
pop
and
pop
sbb
dec
adc
xor
xor
and
pop
cmc
jl
pop
cmc
pop
scas
ins
js
ret
mov
cmp
sub
mov
test
imul
mov
add
inc
clc
rcl
in
sbb
ret
js
xchg
or
leave
push
xchg
bound
push
cmp
neg
hlt
xlat
xchg
and
cli
mov
int3
jmp
fiadd
jmp
xchg
scas
mov
clc
stos
data16
jg
ins
xor
mov
xor
(bad)
adc
inc
fdivr
les
in
add
adc
ins
mov
pop
sahf
push
inc
in
push
shr
lahf
sti
imul
push
shl
cmp
mov
loop
popa
cli
dec
std
rcl
call
and
retf
ret
jmp
lods
lds
loope
pop
xor
push
xchg
call
and
push
les
xor
sub
outs
les
pop
imul
pop
int3
rol
dec
xchg
pop
adc
pop
xor
aad
jno
adc
jnp
pop
pinsrw
cmps
sub
or
jp
mov
js
inc
jb
test
push
scas
sub
sbb
jns
sbb
mov
test
dec
int3
arpl
xchg
punpckldq
and
cwde
push
imul
mov
jl
jnp
mov
leave
mov
outs
out
dec
mov
push
icebp
popf
test
rcl
dec
push
cmp
outs
cli
rcr
mul
dec
push
pop
repnz
rcl
xor
les
scas
loope
iret
enter
pop
ss
push
stc
(bad)
jnp
mov
jmp
int3
pop
xchg
mov
jp
push
xor
test
mov
movs
aas
pop
xchg
cmp
nop
scas
cmp
mov
fwait
cli
mov
xchg
hlt
inc
aad
mul
and
xchg
(bad)
outs
push
cld
cmp
xor
mov
pop
xchg
ret
popa
sub
mov
jle
push
(bad)
test
sahf
es
jp
mov
xlat
ficomp
mov
repnz
out
jno
xor
inc
retf
push
dec
xlat
mov
add
and
movs
dec
popf
std
cs
(bad)
mov
fnstsw
pop
shr
adc
pop
cmc
xchg
sbb
retf
xchg
mov
leave
adc
icebp
xchg
xchg
int
jns
jl
xchg
mov
inc
sbb
clc
ds
cmp
add
mov
inc
fsubr
ja
rol
fisttp
rcl
(bad)
add
jnp
jno
pop
cmc
cmp
lds
mov
mov
jge
or
sub
mov
mov
fs
and
push
retf
leave
xor
icebp
(bad)
xchg
movs
in
and
(bad)
rcl
sub
dec
fadd
imul
xlat
xchg
in
iret
(bad)
out
lds
push
fist
imul
shr
ficom
nop
fs
lods
add
shr
nop
adc
imul
cmps
repnz
cmp
stos
xor
cli
jmp
clc
jb
jb
in
sbb
pop
std
push
dec
mov
gs
pop
dec
cmp
xchg
outs
inc
fcomp
mov
xchg
mov
retf
jecxz
add
repz
movs
or
cdq
sbb
xchg
imul
xchg
cmc
xchg
shl
push
sub
push
add
test
sbb
xor
arpl
xchg
rcl
les
shr
dec
mov
inc
xchg
movs
and
xlat
mov
pop
mov
out
cmps
retf
dec
push
inc
inc
push
pop
les
dec
sbb
ins
repz
push
sub
movs
ds
push
mov
inc
xor
ins
jmp
adc
test
dec
daa
pop
adc
mov
jge
xchg
push
test
dec
push
mov
add
mov
repnz
adc
test
inc
sub
mov
dec
adc
in
loope
add
xor
push
scas
ja
not
push
adc
stc
outs
test
push
push
dec
stos
inc
lods
adc
fucompp
push
jmp
mov
jnp
jbe
dec
xchg
outs
cld
loop
mov
push
cld
jg
imul
mov
or
mov
push
div
cmp
cmp
jp
bswap
jb
das
xchg
push
gs
pop
test
pop
movs
mov
retf
jno
xchg
hlt
sub
out
mov
cmc
xchg
add
mov
pop
pop
pminsw
pop
lods
cmps
daa
mov
add
(bad)
sub
ss
cld
inc
cmp
or
fadd
push
mov
out
cwde
ins
dec
push
lahf
and
dec
mov
jg
mov
adc
lea
dec
push
gs
in
push
sub
mov
scas
outs
push
aam
xchg
pop
das
rcr
adc
mov
dec
mov
(bad)
and
cmps
cdq
pop
loop
and
movs
(bad)
out
outs
jno
pop
and
sub
mov
nop
nop
inc
push
dec
ins
jb
jb
adc
aam
mov
mov
push
pop
xor
leave
arpl
sub
pop
pop
cmp
inc
dec
icebp
push
int3
mov
ror
shr
xchg
cli
lahf
sub
or
fist
cs
dec
rol
sub
push
inc
lods
movs
ret
mov
cdq
hlt
dec
ficom
sub
cmp
dec
sar
or
shr
imul
in
sbb
dec
cwde
xchg
pushf
test
les
jb
adc
stos
dec
jge
ins
add
xor
ja
mov
pop
dec
aaa
nop
(bad)
mov
fs
loopne
inc
mov
xchg
sbb
sub
rcr
(bad)
in
push
stos
mov
mov
icebp
(bad)
push
pop
dec
or
push
pushf
repnz
sub
lahf
jne
outs
sti
dec
pop
fiadd
add
lds
xor
ds
ja
mov
pop
das
loope
mov
pop
mov
and
lea
cmps
and
call
jnp
push
push
and
mov
jnp
or
push
sub
mov
lods
jb
pop
call
xchg
iret
pop
or
femms
std
fist
jle
sbb
imul
and
push
mov
(bad)
fiadd
js
cmps
push
fistp
call
mov
pop
jmp
test
test
cmp
and
popf
mov
shr
adc
mov
cmp
lds
arpl
cmp
jecxz
dec
std
cs
push
out
cmp
(bad)
pushf
loope
or
sbb
in
push
xchg
adc
test
xlat
and
or
aam
adc
push
fisub
in
jmp
sbb
xor
es
push
fist
cli
mov
mov
or
popa
cmp
mov
sar
movs
rol
out
ins
pandn
pop
stos
sub
lods
mov
cmp
push
push
xchg
push
xor
or
lea
jns
fsubr
adc
cmp
clc
jns
(bad)
cmps
movs
mov
dec
out
inc
(bad)
daa
pop
stc
xchg
and
and
pop
xchg
mov
(bad)
call
sub
ret
loope
xchg
fist
xor
loope
js
xchg
ins
adc
popf
mov
dec
jne
mov
cmp
jp
sub
ret
pop
daa
stos
add
xor
mov
imul
movs
mov
loope
mov
pop
xor
popf
inc
ins
dec
jle
push
cmps
adc
pop
mov
and
ret
mov
gs
push
(bad)
lods
lea
(bad)
arpl
in
xchg
mov
aad
pushf
or
xor
jle
jmp
mov
pop
rcr
and
xchg
jg
xchg
lock
dec
jns
iret
dec
pop
arpl
dec
mov
mov
mov
enter
xor
retf
dec
loope
or
xor
lods
and
cmp
mov
stos
loope
jo
enter
push
jg
dec
out
fisubr
xchg
pop
sbb
xchg
adc
dec
(bad)
cmp
or
cmp
pop
or
sbb
xor
cmp
jecxz
scas
in
mov
hlt
mov
mov
icebp
adc
jnp
ins
in
push
clc
popf
jl
mov
cmp
sbb
retf
call
sbb
std
mov
and
pusha
push
in
push
cmp
sbb
adc
(bad)
sub
jmp
push
ss
or
adc
repz
sub
jmp
cmp
sub
dec
aaa
test
sbb
lds
lods
enter
lods
dec
sub
adc
dec
popa
aas
dec
lds
ins
stos
ins
enter
mov
imul
push
mov
mov
xchg
push
ror
sub
jae
outs
push
sar
shl
(bad)
loope
sub
icebp
xchg
mov
arpl
push
mov
sub
xlat
sahf
pop
ficom
aad
mov
pop
pushf
add
call
fdiv
jecxz
call
aad
inc
ins
cmc
sub
and
mov
mov
dec
cmc
jl
xor
sbb
dec
dec
scas
pop
mov
mov
jbe
mov
adc
push
(bad)
fcom
test
mov
sti
dec
push
xlat
fdivr
pop
mov
or
mov
mov
mov
inc
jmp
dec
in
(bad)
push
sbb
mov
sbb
aad
push
fild
ror
fimul
loope
jno
push
cmp
int
in
hlt
add
icebp
enter
sub
mov
in
xor
push
jge
stos
or
imul
pop
sar
mov
xchg
mov
movs
jmp
push
or
xor
imul
inc
std
xor
dec
or
test
mov
push
or
imul
xchg
addr16
sahf
push
rol
mul
sub
ins
and
cmp
push
in
adc
outs
loopne
stos
cli
mov
mov
and
jbe
mov
jnp
or
rcl
(bad)
repnz
dec
and
out
test
mov
mov
xchg
pop
fisubr
sahf
sbb
pop
outs
leave
xchg
push
movs
cmp
popf
and
call
out
xchg
fdiv
lds
dec
adc
adc
dec
lock
dec
pop
pop
fsub
ja
fist
inc
jne
mov
sub
inc
sub
or
mov
push
cmps
(bad)
pop
adc
xchg
jae
dec
mov
pop
mov
out
sub
cmp
push
add
repz
fist
xor
(bad)
fs
(bad)
sub
pop
scas
aad
stc
js
xor
fmul
call
or
add
mov
mov
outs
movs
out
mov
movs
pushf
pop
aaa
adc
mov
stos
cmp
rol
jnp
jb
ret
bnd
sbb
ss
mov
xchg
jbe
mov
es
inc
fst
pop
daa
repz
fld
mov
imul
sub
jo
dec
pop
mov
fs
iret
out
sar
enter
cmc
push
push
pop
(bad)
jmp
sub
inc
push
aas
xchg
aaa
scas
es
xchg
fidiv
fbld
pop
outs
call
andnpd
pop
int
jp
stos
das
imul
mov
mov
push
aad
xchg
out
(bad)
lea
or
inc
inc
push
mov
xchg
cmp
retf
mov
mov
adc
leave
iret
addr16
ds
xchg
(bad)
stos
sahf
test
xchg
cs
scas
aad
(bad)
repnz
pop
fmul
jle
cmp
and
mov
mov
aad
adc
fisttp
cmc
ins
mov
cmps
push
nop
mov
and
ret
lods
pop
push
imul
cmp
stos
lahf
out
jmp
sub
push
cmp
adc
fnstenv
inc
adc
(bad)
pushf
xchg
enter
add
fisttp
sahf
xchg
loopne
cmp
ficom
jecxz
and
jnp
jge
push
dec
pop
inc
repz
es
nop
ins
xchg
pop
mov
mov
xor
scas
movs
cmp
cli
arpl
lods
sbb
jns
cmc
fdiv
xchg
call
push
and
loop
pop
mov
mul
scas
call
mov
sbb
aam
jp
or
jb
mov
inc
sub
ds
iret
out
not
lea
sub
xchg
mov
cld
push
inc
stc
test
test
jl
lock
ret
leave
mov
fsubr
sti
mov
aas
hlt
cmp
mov
cmp
push
pop
loope
and
push
add
or
cmc
mov
retf
dec
clc
cmp
mov
neg
loopne
je
ja
and
inc
push
out
jmp
sbb
push
in
adc
mov
mov
cmp
lea
ds
mov
test
(bad)
jmp
and
cmps
xor
mov
push
call
in
push
sbb
les
sbb
cmp
jl
fild
sub
mov
loop
cmp
xor
daa
jl
cmp
test
shl
(bad)
or
stc
adc
ffreep
arpl
mov
(bad)
push
jge
movs
cld
cdq
sub
push
(bad)
push
dec
stos
xor
imul
repnz
repnz
out
lock
ja
mov
cmp
dec
mov
mov
loopne
pop
pop
dec
jle
dec
xlat
push
push
jo
lock
(bad)
dec
es
aam
js
pop
pop
outs
jp
push
jno
adc
retf
div
popf
cmc
fnstenv
cmp
sub
push
dec
inc
int3
mov
add
xor
add
mov
cmps
xor
fldcw
lock
mov
xchg
fild
out
sub
(bad)
fdivr
ret
mov
shr
retf
ins
jmp
lock
shr
mov
outs
sar
inc
imul
stos
in
cs
mov
sar
ret
and
(bad)
cmp
jl
ret
dec
push
sbb
jle
fild
les
lds
mov
stos
lods
mov
popa
cmp
cs
dec
lds
lods
ss
daa
lahf
mov
ss
pop
shr
mov
jo
pop
mov
ds
mov
inc
nop
es
push
push
out
bound
or
sub
iret
jae
xchg
(bad)
adc
sub
mov
push
inc
push
test
mov
lods
push
sbb
cld
adc
add
pop
xchg
bound
iret
and
pop
and
retf
ins
enter
inc
push
mov
push
repnz
jle
jmp
and
call
nop
xchg
imul
jl
cmc
gs
movs
ins
test
inc
dec
mov
dec
push
sahf
std
imul
add
mov
ror
jns
ss
out
add
mov
ret
div
jecxz
sub
add
std
fmul
xchg
(bad)
je
pushf
retf
mov
dec
adc
xchg
and
rcr
and
mov
cmp
jnp
pop
jp
fild
popa
enter
aas
inc
cmp
dec
int3
mov
in
xchg
mov
cmp
sub
mov
push
into
push
shr
in
lods
cmp
fwait
lock
inc
push
mov
out
data16
push
push
jmp
dec
xor
pop
loope
scas
sub
cmp
push
jnp
fwait
pop
pop
mov
mov
jp
pusha
and
imul
sahf
or
imul
xchg
sub
adc
sbb
sbb
sbb
mov
cmp
dec
mov
js
xchg
push
fistp
mov
xor
jb
dec
add
nop
stos
(bad)
mov
mov
ret
sahf
into
mov
jns
mov
sub
adc
(bad)
sahf
jno
pop
mov
mov
jmp
outs
test
ret
mov
push
fiadd
out
mov
hlt
dec
dec
jg
jle
add
push
mul
icebp
dec
jle
leave
pusha
push
dec
cmps
sub
rdpmc
mov
out
pop
stos
imul
lods
pop
add
pop
nop
int
sti
jge
loopne
pop
fdiv
rol
xchg
jle
je
enter
out
test
movs
lods
jmp
pop
pop
fcom
and
in
rol
sahf
or
dec
(bad)
aad
clc
add
mov
fstp
mov
dec
stc
sub
clc
push
int3
dec
xchg
sbb
cmp
fisttp
and
mov
mov
add
adc
xchg
sbb
je
push
outs
jg
inc
in
stos
jae
sub
push
and
push
repnz
jmp
ret
jnp
pop
pop
and
xadd
add
fwait
jo
aaa
cld
push
xor
or
xchg
inc
push
shl
xchg
popf
sub
jle
jmp
sub
push
jns
outs
sub
mov
js
sub
mov
test
pop
fwait
cmps
or
cld
dec
fbld
xor
sub
cmp
fcomi
ror
mov
ss
xchg
or
in
imul
cmp
and
pop
xor
jb
cmp
push
mov
cwde
sbb
test
mov
and
stos
cmps
sbb
fsubp
(bad)
jecxz
(bad)
pushf
xor
movs
xor
test
mov
in
fcomp
movs
out
xor
mov
inc
aad
push
push
adc
gs
mov
es
xchg
not
aas
xchg
mov
mov
out
add
jmp
std
or
icebp
and
bound
fadd
and
je
aaa
dec
lds
cmp
jmp
and
dec
(bad)
adc
iret
mov
es
ret
lods
(bad)
fmul
xor
or
mov
pop
clc
rcr
dec
scas
xchg
inc
(bad)
(bad)
in
jg
outs
cmp
sub
rcr
ins
stos
dec
cdq
xchg
sar
adc
sbb
cdq
imul
ret
cmp
xchg
cmp
cmp
cli
les
fdiv
and
jmp
mov
lods
movs
jle
mov
icebp
aam
mov
stos
cdq
sbb
mov
pop
adc
mov
fisubr
and
ret
call
or
xchg
dec
xchg
mov
mov
aam
pop
enter
mov
mov
iret
out
xor
xchg
es
rcr
ins
in
and
aam
jno
leave
rcr
not
mov
fs
popa
xor
into
xchg
jae
jb
movs
ficom
xchg
inc
jne
icebp
mov
push
mov
jno
adc
dec
add
mov
pop
outs
or
fsubr
or
xchg
sub
pop
jae
inc
mov
in
imul
(bad)
retf
cmps
ds
test
add
pop
loope
inc
mov
retf
repnz
movs
fsubr
mov
je
ds
out
push
jle
sub
add
mov
sub
in
xor
in
ins
in
mov
mov
mov
sub
retf
sub
fsubr
push
pop
dec
sti
leave
or
pop
stos
ss
pop
imul
ret
retf
sub
cmp
test
jne
test
das
sub
inc
mov
push
mov
aaa
jp
ins
(bad)
inc
mov
call
test
fldl2e
scas
or
pop
inc
and
cmp
in
add
cmps
mov
pop
inc
in
and
out
cmp
ss
fwait
and
xor
mov
mov
fidivr
fld
pop
movs
lahf
pop
cs
push
ror
scas
pusha
xchg
sbb
bound
fld
enter
movs
inc
es
mov
xchg
mov
repz
lock
lods
repnz
ss
int
stc
dec
xchg
pop
std
or
add
or
jbe
mov
lea
mov
(bad)
xchg
cmp
ja
cdq
cmp
mov
sbb
imul
pslld
cmp
out
icebp
cs
sub
inc
xchg
inc
cli
adc
jbe
dec
int3
imul
xchg
sub
mov
mov
push
enter
cmp
retf
pop
(bad)
mov
dec
mov
dec
leave
int
cdq
pusha
xchg
sub
or
out
loope
xor
shl
dec
cmp
dec
test
popf
xor
cmp
inc
sbb
sar
xchg
xchg
lock
xchg
mov
mov
retf
pop
cmp
jmp
movs
fsubr
and
sub
nop
repnz
cld
push
push
add
inc
push
jno
cld
dec
adc
movs
je
ins
fisub
xlat
cmp
push
cmp
xchg
rcr
cmc
jmp
sub
fisttp
cmp
xchg
pop
aad
xor
movs
sub
cwde
daa
mov
mov
sub
adc
ds
out
dec
push
inc
je
sar
xchg
retf
inc
mov
fs
mov
dec
je
movs
call
lods
lea
ret
xchg
cmp
pop
xor
add
ret
test
aam
aam
repz
nop
idiv
cmps
inc
rcl
xchg
arpl
mov
aaa
xchg
aam
imul
dec
mov
pop
push
sub
inc
je
and
dec
out
or
ja
fsubp
xchg
sbb
mov
mov
push
adc
pop
icebp
cmp
push
and
mov
iret
mov
xchg
inc
imul
and
adc
mov
mov
pop
xchg
icebp
out
adc
or
sar
ret
inc
cmp
push
sbb
popa
mov
ds
jl
inc
push
pop
cmp
repnz
mov
xchg
call
sbb
push
mov
inc
addr16
sahf
and
jne
jge
mov
aaa
jmp
jmp
cmp
test
rol
jo
fimul
cmps
pop
imul
sbb
js
dec
dec
loope
pop
out
mov
cmp
hlt
and
dec
dec
jbe
xor
push
push
inc
aaa
push
pop
mov
int3
jmp
push
mov
cmps
pushf
xchg
aaa
lahf
xchg
fs
sub
mov
jl
inc
push
mov
sub
inc
add
dec
mov
sahf
xchg
xchg
ret
out
xor
out
cmp
call
popa
in
xchg
lods
cld
push
in
test
dec
lods
in
fild
movs
sbb
cmp
xchg
jb
sar
in
ret
push
not
sub
jne
mov
js
loope
mov
xchg
sub
loope
cmp
add
jo
imul
ins
sub
mov
xor
dec
dec
xlat
lds
pop
fistp
ins
mov
rol
cmp
ret
test
mov
outs
mov
out
retf
pop
pop
hlt
outs
les
cmps
jb
and
fsub
xchg
ret
cmp
(bad)
int3
call
jl
adc
cmps
inc
je
inc
call
mov
mov
dec
in
pop
mov
cmp
xchg
rcr
pop
jecxz
rdmsr
call
(bad)
fdiv
xchg
lock
js
vlddqu
mov
stc
jmp
ds
mul
loope
mov
je
sub
cmp
and
not
out
inc
ds
jg
clc
push
les
(bad)
test
int
ss
dec
sar
stos
mov
cmp
jmp
gs
into
pop
not
call
xor
out
test
popa
lea
and
icebp
cmps
fistp
out
and
jmp
push
in
jbe
test
jne
inc
or
and
dec
repz
adc
or
xor
xchg
pop
mov
pop
sbb
enter
and
dec
mov
xor
sti
push
nop
test
retf
or
iret
pop
dec
pause
dec
push
pushf
jge
scas
mov
repnz
fwait
xor
dec
stos
xor
sahf
int
mov
mov
inc
mov
or
adc
jmp
test
sahf
or
mov
mov
xchg
cmp
pop
dec
aaa
pop
loop
cmps
in
sbb
add
or
aaa
dec
xchg
in
jp
aam
ds
pop
test
pop
sbb
push
lds
pop
lock
scas
sbb
call
test
test
xchg
mov
push
call
popf
pop
loope
xor
aaa
fs
imul
aaa
add
xchg
rcl
dec
scas
cld
dec
outs
xchg
and
retf
loop
js
adc
xchg
lods
shl
aas
jmp
cwde
push
test
mov
mov
push
xor
out
adc
iret
(bad)
cs
adc
pop
xchg
dec
ret
jae
gs
and
xchg
jle
xor
jne
fsubr
adc
jge
mov
cwde
adc
adc
mov
lock
pushf
pop
cmp
push
inc
out
push
mov
retf
inc
jno
fsubp
nop
xor
cmp
sub
push
mov
dec
ins
dec
aad
push
jp
sbb
sub
push
adc
mov
xchg
cwde
lock
sahf
jb
adc
mov
fst
ds
test
and
xchg
jnp
push
adc
xlat
aad
adc
loope
inc
data16
jl
push
fnstcw
fbld
imul
push
adc
sbb
inc
mov
mov
jne
adc
int
push
push
mov
push
leave
sub
das
fstp
dec
imul
inc
inc
lock
sti
leave
xchg
sbb
jnp
stc
adc
loope
push
push
ret
xlat
rol
hlt
das
mov
xchg
inc
test
mov
push
push
fcom
push
inc
stc
inc
in
(bad)
cdq
and
mov
sbb
icebp
lock
test
test
test
xchg
fcom
pop
je
dec
ficom
adc
and
test
add
sub
jns
fmul
inc
outs
rol
mov
xchg
popf
movs
ret
stos
jno
and
retf
loopne
sbb
pop
xor
jge
pop
jno
push
int
add
add
mov
sar
test
pusha
sub
dec
cs
dec
push
jle
sub
sbb
pop
push
outs
aas
pop
call
jle
xchg
aas
add
(bad)
push
and
mov
or
ja
jmp
mov
js
lahf
jne
jbe
cmp
mov
xchg
std
ret
lods
jmp
fwait
push
sbb
ss
scas
leave
pop
jno
icebp
sar
sar
clc
sahf
pusha
aad
adc
call
xchg
sbb
mov
rcl
mov
out
movs
data16
xchg
pop
sub
jge
mov
scas
daa
adc
aam
fidiv
inc
leave
clc
sub
push
nop
enter
and
sub
or
enter
inc
fiadd
pop
out
in
stos
mov
dec
mov
adc
mov
out
mov
mov
out
xchg
xlat
(bad)
mov
outs
retf
cmp
or
out
jb
mov
cmp
xchg
xchg
outs
mov
or
call
(bad)
adc
cmc
cmp
inc
popf
xor
mov
in
popf
loope
cmp
movs
pop
mov
outs
dec
and
cmp
mov
aas
lahf
fcmovne
mov
add
mov
outs
addr16
adc
repz
jns
ins
cli
fwait
inc
adc
mov
pop
xchg
cmp
push
jmp
and
and
mov
mul
sub
in
test
push
loope
inc
imul
push
bound
jl
je
(bad)
lock
jns
in
jl
iret
daa
push
es
and
leave
dec
cmp
out
in
iret
inc
ficomp
shl
mov
retf
shr
mov
cli
mov
scas
in
sub
iret
pop
xchg
adc
ins
ret
fmul
jo
shl
xor
inc
push
mov
dec
test
imul
xchg
mov
cmc
inc
not
push
push
aas
cmp
inc
in
dec
fnstsw
pop
pusha
pop
mov
mov
mov
stc
push
stc
repz
retf
not
das
mov
ins
push
pop
adc
dec
rcl
mov
mov
add
cmp
adc
repnz
test
push
fild
or
lock
jae
into
pop
loope
inc
mov
cmps
cwde
adc
mov
adc
mov
sub
jnp
sub
xchg
xor
stos
into
stos
sbb
js
and
add
mul
in
imul
ja
sub
jge
xor
adc
ins
ins
cli
clc
nop
int
fistp
jae
loope
loop
cmovs
lods
sub
xchg
add
pop
push
xchg
cmp
dec
jp
lds
sbb
dec
and
pop
and
inc
pusha
(bad)
ja
shl
add
inc
imul
pop
cmp
(bad)
fld
div
jl
popa
lea
popa
jmp
add
sub
dec
mov
loopne
lock
ficom
pop
jno
push
icebp
sub
xchg
ret
outs
xchg
and
or
pop
jle
jb
pushf
aam
test
stos
pop
enter
loope
xchg
dec
or
jns
dec
sbb
(bad)
ret
out
xor
pop
mov
xor
mov
ficomp
sub
mov
cli
mov
sar
jmp
in
pop
push
adc
add
dec
pop
pusha
cmp
ins
in
mov
shl
ret
out
je
pop
mov
xchg
daa
cmc
scas
lods
jmp
in
pushf
shl
mov
push
clc
sahf
adc
push
jnp
xchg
xor
xchg
sub
jp
fs
movs
loop
sub
scas
sahf
fild
dec
loop
fdivp
cmp
movs
adc
mov
mov
imul
pop
rol
mul
push
xchg
in
ret
inc
sti
movs
pop
popf
adc
mov
add
into
dec
imul
ins
xchg
dec
jecxz
mov
cmps
in
sbb
stos
sub
sbb
loopne
cmp
mov
jnp
ficomp
adc
xor
out
stos
sub
mov
test
pop
push
or
mov
cdq
mov
push
sbb
or
cld
jg
mov
sbb
rcl
xchg
xchg
dec
or
mov
jle
repz
mov
rcl
stos
inc
jmp
addr16
sub
sub
in
mov
into
cmps
call
shl
jge
or
lahf
repnz
popa
lahf
mov
cwde
push
sub
fwait
push
jp
aam
scas
fs
xchg
adc
mov
adc
(bad)
movs
hlt
mov
jae
or
push
imul
mov
push
clc
sahf
mov
or
addr16
push
xor
pop
xor
rcl
repnz
in
(bad)
cmp
fidivr
(bad)
push
cmp
push
pop
and
cmp
dec
mov
push
jp
xor
xchg
loop
cmp
lock
add
pop
adc
and
lods
jbe
sub
(bad)
lods
xchg
and
push
adc
dec
xor
push
lods
ds
and
mov
lods
dec
lods
frstor
retf
cmp
jmp
sub
push
clc
sbb
test
fsub
push
lock
nop
mov
push
inc
mov
fs
xchg
sub
jo
sbb
lds
dec
or
pop
push
test
cmps
and
loopne
mov
adc
xchg
pushf
jecxz
mov
or
mov
test
push
jle
and
(bad)
in
int3
adc
push
sti
inc
jns
cmps
cs
push
mov
xchg
lea
pusha
sbb
mov
dec
jge
out
add
mov
popa
cmp
xlat
push
xchg
sub
mov
push
int3
cli
ins
movs
cmps
xchg
pop
std
test
call
xor
aaa
push
outs
das
cmp
clc
sahf
mov
sub
xchg
mov
cs
adc
rol
js
sahf
sub
and
pop
mov
and
out
fwait
push
jnp
dec
enter
adc
adc
out
mov
push
push
jne
or
mov
pop
cmp
pmulhw
mov
xchg
jo
inc
mov
and
lahf
loope
add
pop
and
cmp
mov
out
inc
mov
push
repnz
cmc
xor
cmps
jp
fnstsw
test
stos
xchg
pop
arpl
rcl
mov
test
jno
adc
into
inc
adc
adc
dec
data16
xchg
xchg
jge
aaa
(bad)
and
or
push
(bad)
xchg
std
fst
fdiv
xchg
in
sub
imul
and
dec
jb
ret
push
inc
lock
xchg
sub
pop
cmps
push
sub
fwait
xchg
outs
pop
sbb
enter
jmp
fmul
sbb
dec
pop
dec
sbb
das
push
vxorps
pushf
dec
aam
and
cli
test
nop
outs
scas
cmps
and
test
jno
adc
and
clc
leave
push
repz
add
cmp
mov
in
xor
mov
ret
addr16
imul
jmp
jbe
fldcw
push
mov
into
retf
jmp
(bad)
(bad)
adc
or
sub
or
arpl
ds
push
fdivr
mov
xchg
fs
xchg
retf
inc
push
outs
(bad)
ss
sub
push
(bad)
jmp
not
in
out
(bad)
and
pushf
mov
add
stos
dec
cs
cmp
loope
ror
pusha
jmp
sti
fbstp
mov
and
jns
jne
jne
in
mov
sahf
jo
call
jno
lods
mov
cmps
cmps
xchg
(bad)
into
int3
adc
cmps
(bad)
cmc
lock
jo
(bad)
mov
sbb
xchg
pop
in
xchg
pushf
repz
retf
lods
dec
repnz
rcr
outs
frstor
ins
repz
inc
outs
test
ret
shr
imul
jmp
scas
jmp
mov
pop
mov
jb
iret
lea
in
sub
mov
bound
sbb
inc
enter
aad
fwait
cmp
sub
push
(bad)
addr16
jl
fcmovb
adc
inc
fdivr
add
add
dec
shl
mov
and
inc
lds
inc
fdivrp
mov
test
sub
cmp
adc
mov
jg
xlat
icebp
mov
clc
out
cld
out
std
repz
stc
mov
(bad)
std
mov
iret
iret
sti
iret
dec
std
out
cld
repz
ds
aas
scas
mov
lahf
out
pop
loope
ja
repz
scas
jg
jmp
repz
aaa
pop
sbb
aas
iret
out
retf
out
out
sbb
push
cli
hlt
stc
mov
addr16
scas
dec
lahf
aas
(bad)
iret
ja
lahf
lahf
clc
jns
repz
ds
sbb
cmc
stc
popf
sti
repz
stc
repz
iret
mov
lahf
iret
clc
jnp
repz
repz
repz
arpl
sahf
xor
popa
scas
loop
jge
out
ret
out
in
(bad)
jns
fistp
jmp
xor
cmp
sbb
into
ja
mov
mov
std
(bad)
sahf
xor
cdq
xor
out
(bad)
fmul
lahf
mov
aaa
imul
loope
call
and
arpl
pop
repz
int3
cmp
in
(bad)
jg
test
div
popa
popf
dec
cmp
sti
stc
test
outs
aaa
out
arpl
aaa
pop
out
out
dec
arpl
scas
adc
jne
push
movs
iret
jmp
mov
icebp
sbb
or
fwait
lahf
dec
fucomip
cld
mov
lock
lahf
xor
out
mov
adc
mov
mov
out
adc
imul
cmps
jo
pop
cld
pop
clc
std
pop
repz
mov
push
pushf
cwde
imul
fistp
int3
cmps
(bad)
cdq
jnp
bound
loop
les
cld
outs
ret
pop
repz
push
pop
imul
cmp
sbb
clc
vorps
(bad)
cli
jmp
adc
adc
cli
outs
cmp
or
adc
jp
js
test
cmp
push
mov
adc
cmp
sub
std
(bad)
fdivp
inc
pop
js
xbegin
loope
dec
call
sub
xor
mov
xchg
inc
and
out
icebp
add
ret
cmp
and
js
or
or
popf
pop
out
add
sbb
mov
mov
movs
aaa
pop
and
adc
mov
xchg
into
ret
ins
cmp
jno
xor
loope
(bad)
pop
cmovl
setbe
jno
and
mov
loopne
or
jo
jnp
movs
outs
dec
popa
ret
stos
in
out
dec
xor
push
out
pop
ds
rcr
repz
dec
cwde
fistp
arpl
push
int3
in
stc
mov
lods
pop
jnp
loopne
outs
movs
fs
lock
and
das
ins
sti
or
or
jmp
push
aaa
inc
xor
xor
loop
sar
repnz
data16
lds
es
pop
iret
sbb
pop
int3
jg
mov
mov
pop
pop
jnp
out
call
mov
fcomp
in
jp
js
mov
dec
dec
sbb
shl
(bad)
cmp
push
aad
cmp
fwait
aaa
(bad)
out
push
lods
stos
fdivr
retf
jmp
popa
jg
iret
out
js
mov
pop
cmps
and
push
sbb
leave
js
cmps
cmp
xchg
movs
pop
les
cmp
popa
call
stc
lea
push
call
fstp
mov
sti
pop
int3
ret
xor
js
mov
pop
in
(bad)
or
jecxz
mov
or
leave
pushf
lahf
cmp
sbb
pop
jg
inc
fdivr
movs
mov
mov
imul
sbb
in
lea
mov
cmp
into
pop
les
js
sbb
mov
pop
pop
aaa
lock
das
(bad)
and
jne
movs
rol
pop
pop
mov
jecxz
loop
xor
mov
out
iret
iret
adc
and
sub
or
push
xor
add
loop
stos
xor
inc
jp
adc
cdq
dec
or
jmp
js
cmp
mov
es
retf
(bad)
mov
push
adc
pop
popf
add
pop
or
dec
iret
sbb
loope
xchg
clc
fdivr
adc
and
cmp
mov
fucomip
rcr
sub
imul
and
loop
ret
sbb
mov
jnp
movs
xor
adc
sahf
nop
imul
cmp
mov
icebp
sbb
clc
ret
adc
push
inc
pop
jg
(bad)
mov
dec
jno
je
pop
sti
daa
dec
fisubr
or
(bad)
in
pop
mov
cld
push
jae
pop
imul
fmulp
fsub
fmul
xor
cli
sbb
(bad)
out
lods
sub
pop
aaa
sahf
ins
and
aas
sbb
xor
cmp
jmp
fsubr
aam
aaa
bound
scas
adc
adc
pop
cwde
mov
cld
jmp
arpl
ret
xor
inc
mov
or
cmp
ja
in
push
repnz
jmp
pop
lea
lds
push
pop
jl
jle
jl
fcmovbe
lock
imul
or
mov
cld
in
mov
hlt
loopne
sub
dec
inc
cmp
pop
das
sbb
dec
push
inc
pop
sahf
push
add
fstp
sbb
int3
sbb
out
cmp
cdq
jmp
(bad)
ins
cmp
outs
aad
add
jne
or
sahf
mov
sub
cmp
stos
push
(bad)
cli
les
cwde
aaa
daa
in
out
mov
mov
out
xor
mov
sub
les
out
icebp
retf
test
mov
sub
out
push
sahf
mov
es
mov
pop
sub
ins
adc
outs
adc
ins
push
mov
sahf
stos
xor
pop
inc
lea
jnp
(bad)
fmul
(bad)
and
scas
fidivr
cmps
(bad)
outs
bound
icebp
out
pop
xor
out
xchg
repz
adc
pop
loope
or
jo
repz
add
push
push
pop
shl
inc
fmul
jno
push
ds
jle
add
xor
addr16
outs
(bad)
jns
je
jbe
aad
jmp
loope
jnp
jbe
lods
mov
inc
in
aad
sbb
js
jno
test
dec
call
mov
fwait
pop
lahf
pop
js
ret
loopne
push
mov
arpl
jp
fdivr
or
pusha
rcr
ss
repnz
cmp
repz
push
inc
repz
jecxz
lds
(bad)
mov
mov
and
arpl
(bad)
and
push
das
imul
daa
outs
sbb
stc
add
outs
aaa
push
fstp
shl
imul
mov
cmps
or
mov
icebp
iret
pop
stc
jecxz
mov
mov
pop
icebp
and
push
mov
push
inc
sub
mov
adc
adc
(bad)
jle
sbb
sbb
popa
in
dec
popa
outs
add
sbb
scas
ins
and
cmps
mov
and
and
(bad)
cmp
mov
in
pushf
ficomp
pushf
imul
fidivr
add
sub
lds
inc
or
sub
cmp
bound
xchg
icebp
addr16
(bad)
xor
dec
push
cmp
push
aam
jmp
(bad)
jno
cmc
aaa
xor
sahf
xor
jno
gs
adc
fisubr
shrd
mov
push
adc
mov
cld
ret
adc
sahf
popf
loop
pop
jno
(bad)
xchg
sbb
fbstp
scas
mov
adc
fcomp
jb
cmps
repz
mov
in
adc
xor
or
iret
jl
ret
lods
popf
mov
shl
mov
iret
mov
pop
jg
mov
ins
cld
rcr
jo
sbb
test
and
test
aaa
cmps
jb
or
out
sub
sub
and
je
adc
call
daa
icebp
inc
(bad)
mov
mov
inc
int3
das
aas
stos
pusha
in
push
int
aam
mov
pop
shl
aad
or
adc
jmp
mov
repnz
cli
pop
dec
mov
clc
pop
dec
out
cmp
cs
mov
(bad)
cmps
out
sbb
(bad)
icebp
lahf
inc
popa
rcl
or
xchg
mov
jp
sub
or
into
or
ja
dec
lds
adc
pop
icebp
out
cmp
aam
test
in
adc
and
or
xchg
pop
inc
aam
adc
lods
fadd
movs
xchg
or
push
dec
push
sub
jl
movs
(bad)
cli
mov
or
ins
fwait
push
and
cli
not
push
lods
(bad)
int
push
xor
stc
dec
mov
and
aas
xlat
rcl
test
dec
stos
dec
inc
xor
fld
jecxz
push
adc
in
dec
inc
sbb
jg
dec
adc
(bad)
out
fldlg2
nop
mov
sub
xchg
add
dec
dec
pusha
and
sbb
je
stos
hlt
icebp
(bad)
sub
add
pop
lea
dec
js
call
arpl
add
jl
jmp
sub
or
sub
fimul
inc
aas
mov
repz
xor
loope
xor
sahf
ss
lods
cmp
cs
dec
mov
inc
adc
ficomp
push
mov
pop
pop
dec
mov
shr
daa
(bad)
xrelease
int3
stos
js
sar
(bad)
ja
popf
xchg
(bad)
frstor
push
retf
out
pop
jo
adc
or
outs
pop
push
cmp
and
jmp
pushf
leave
cmps
pusha
mov
push
push
jmp
and
js
jne
ins
(bad)
pop
adc
pop
je
fimul
xor
and
and
mov
pop
fwait
mov
adc
fwait
loop
neg
jnp
shl
mov
push
or
inc
arpl
les
outs
rol
or
pop
cmp
outs
xchg
jg
in
xor
dec
pop
push
(bad)
(bad)
pop
addr16
pop
pop
test
ins
aaa
adc
outs
shl
pop
jp
stos
pushf
and
lods
xchg
es
pushf
outs
or
and
les
inc
push
xchg
mov
sti
das
in
mov
in
xchg
sub
std
mov
inc
mov
jno
pop
fst
sar
mov
xchg
outs
in
scas
pop
cmp
mov
cwde
xchg
lods
popa
in
mov
inc
lds
jb
pop
jb
fcom
cli
inc
cmps
push
jne
fs
jns
hlt
inc
test
test
add
sub
add
sbb
sbb
and
inc
stos
cmp
push
and
stos
mov
rcl
lds
mov
or
das
out
repnz
dec
into
test
add
mov
xor
in
daa
(bad)
xor
stos
mov
test
or
and
and
and
xor
in
jl
stos
fidivr
lock
lds
push
mov
(bad)
push
push
addr16
sbb
retf
fsubr
(bad)
in
xor
jnp
stos
xchg
push
sbb
jmp
pusha
mov
jno
test
pop
in
push
push
(bad)
jae
xchg
loope
cld
not
push
gs
not
sahf
mov
mov
call
(bad)
cmps
jnp
jmp
out
mov
dec
mov
cmp
sar
dec
aad
adc
sub
mov
cdq
dec
pop
and
adc
push
fdivp
xchg
stos
xor
xchg
mov
cmp
inc
(bad)
mov
push
sbb
push
and
push
cmps
test
sbb
aaa
bound
ja
mov
(bad)
sbb
mov
pop
lods
lds
push
shl
add
xchg
pop
js
(bad)
inc
int
mov
and
sbb
fnstenv
sbb
push
dec
jecxz
fs
mov
inc
mov
xchg
push
mov
idiv
sub
ja
xor
jp
jae
sub
pop
fwait
xlat
pop
cmp
mov
jne
mov
(bad)
pop
dec
jle
pop
jmp
mov
addr16
sbb
sahf
pop
xchg
repz
(bad)
xor
in
das
repnz
mov
adc
loop
movs
mov
dec
jb
call
repz
sub
jb
(bad)
dec
dec
(bad)
dec
retf
pop
leave
push
pop
jae
pop
cs
dec
sbb
fcmovnbe
mov
push
mov
test
imul
mov
push
cmp
imul
dec
xchg
cmp
arpl
imul
xchg
and
mov
cmp
sub
push
ret
test
push
sbb
and
or
mov
or
adc
jle
loope
push
cmps
sbb
in
pop
jae
and
sbb
xchg
ins
push
inc
push
push
std
dec
xor
mov
xor
icebp
frstor
repz
mov
pop
xchg
scas
jno
ret
jns
adc
cmp
xchg
xchg
push
fst
fst
mov
cmp
sub
cmp
or
cmp
in
ret
sub
out
icebp
fstp
in
push
adc
iret
or
jl
push
es
push
cmp
sbb
(bad)
(bad)
mov
inc
xchg
into
into
xor
fwait
gs
adc
dec
stos
inc
mov
scas
leave
retf
rcr
mov
pop
cmps
xor
and
aad
int3
loop
xchg
push
xchg
mov
ins
adc
jo
pop
call
ds
xchg
dec
cmp
pop
iret
jg
mov
sub
mov
jns
shl
lahf
push
inc
inc
test
daa
push
xchg
jl
rcr
and
cwde
(bad)
rcr
call
enter
test
out
in
repnz
sub
mov
pushf
repnz
jb
movs
and
adc
adc
xor
pusha
outs
cwde
inc
pop
adc
push
popf
dec
dec
mov
pop
mov
adc
test
dec
test
mov
scas
and
mov
sbb
out
xchg
or
inc
(bad)
test
(bad)
fild
push
imul
mov
stos
fist
sub
or
xor
inc
in
out
test
es
fisub
xchg
add
mov
rcl
inc
addr16
and
dec
push
fild
in
push
xchg
int
outs
sub
sbb
xchg
mov
xchg
rol
cld
mov
mov
adc
jnp
fild
stos
push
into
jb
rol
sbb
pop
ret
(bad)
cs
mov
jmp
fisub
movs
dec
fdiv
cmp
sbb
sub
daa
sbb
hlt
test
movs
mov
aad
mov
adc
addr16
dec
fwait
jo
and
and
nop
cmps
dec
pop
inc
sbb
mov
xchg
sub
out
adc
shl
cmp
fwait
scas
ror
push
and
shl
mov
cdq
mov
jmp
jb
movs
imul
push
imul
xor
mov
xchg
sbb
ja
sbb
and
fsub
mov
adc
pusha
adc
cmp
inc
cmc
shl
jns
sub
sub
pop
xchg
stos
or
and
je
nop
retf
sbb
and
sbb
sti
nop
fs
not
cmp
mov
dec
and
xchg
push
pop
xchg
iret
movs
xchg
sub
push
stc
dec
pop
push
adc
lods
addr16
xchg
xchg
shr
outs
pushf
cmp
cmp
int3
or
jge
and
test
mov
fisub
sub
xchg
pop
cdq
push
mov
idiv
out
mov
in
imul
xchg
bswap
mov
in
cmp
lods
cmps
mov
push
popf
sub
mov
dec
adc
mov
push
in
dec
shl
iret
adc
sti
dec
xchg
mov
dec
outs
jb
jbe
xor
and
je
cmp
rcr
push
lods
iret
cs
cwde
je
ds
por
out
dec
test
push
xchg
imul
pop
push
pop
jb
into
sbb
xchg
jbe
jbe
mov
cmps
jecxz
mov
js
sbb
sub
adc
sbb
and
adc
dec
je
adc
mov
enter
fist
adc
sahf
ins
jb
mov
inc
mov
xchg
cmp
call
mov
scas
loopne
and
cmp
fisubr
xor
push
ret
push
cmp
mov
xchg
inc
lahf
xchg
dec
aaa
leave
mov
or
sub
sub
lea
std
out
int3
jge
ds
aas
sub
jmp
push
movs
pushf
repnz
mov
hlt
les
mov
jae
aas
jne
mov
xchg
inc
int
fcomp
dec
out
mov
out
mov
xor
mov
cwde
test
cs
out
jp
out
push
lods
or
call
mov
sbb
jl
ins
mov
test
ins
xchg
or
stc
or
jb
and
or
movs
mov
sbb
dec
and
ror
stos
mov
out
stos
jge
loop
push
popf
lds
pop
sub
mov
xchg
dec
xchg
xlat
and
inc
jns
push
push
retf
outs
pop
dec
xchg
xchg
movs
cld
cmp
(bad)
and
inc
add
out
mov
repz
imul
sbb
in
loopne
and
mov
ret
call
imul
push
(bad)
dec
sub
mov
fistp
jmp
outs
popa
or
cmps
push
dec
addr16
test
in
scas
leave
push
shr
cs
sbb
icebp
(bad)
jb
daa
sub
inc
scas
add
jns
cmp
mov
push
(bad)
shr
sbb
loopne
pop
mov
jae
push
adc
jmp
sub
mov
jl
jb
mov
jge
out
scas
sbb
and
dec
in
jp
lds
sub
das
(bad)
movs
cmps
lods
pop
sbb
test
mov
loope
out
sahf
sbb
sbb
xchg
and
aad
popf
inc
in
push
mov
icebp
scas
stos
ret
outs
(bad)
icebp
adc
push
shl
in
cs
cmp
jmp
fmul
sub
and
mov
pop
pop
test
addr16
xchg
mov
mov
ret
call
movs
es
xor
sub
int3
call
add
jnp
adc
adc
int3
imul
cmp
xor
sahf
xchg
adc
sub
fsub
push
adc
popa
imul
xlat
movs
sahf
mov
or
jnp
or
test
(bad)
test
iret
or
pop
xchg
xchg
inc
pop
pushf
das
pushf
or
pop
pop
stos
outs
repz
push
les
ins
cmps
fs
xchg
test
fisttp
fwait
mov
mov
push
in
mov
mov
es
push
fwait
(bad)
ja
xchg
push
mov
rcl
lahf
imul
mov
push
pop
pop
mov
shr
cmp
stos
jbe
push
out
jb
int3
dec
imul
or
push
fcom
(bad)
jmp
(bad)
jb
push
leave
stc
push
xchg
push
add
enter
hlt
movs
and
sub
int3
push
out
pop
pop
sbb
imul
sub
sub
fidiv
and
mov
mov
cmps
xlat
dec
dec
adc
push
jnp
in
cmp
push
cmp
mov
cmp
sub
fstp
or
dec
or
jp
fcmovne
or
pusha
dec
fsubr
fwait
xchg
cld
test
in
sub
sub
xchg
fst
xchg
push
mov
(bad)
adc
(bad)
test
mov
cwde
and
push
mov
or
fcomp
lock
repnz
aaa
push
aaa
mov
pop
inc
xchg
popf
or
les
push
xchg
mov
into
rol
aam
out
mov
gs
jne
jle
sub
add
mov
loope
push
dec
push
scas
push
mov
xor
cwde
sbb
test
(bad)
cmps
lea
push
(bad)
pop
stos
push
lds
push
sub
adc
cmp
jb
ins
dec
jb
das
lods
pop
ret
mov
add
or
cdq
xchg
xchg
jbe
fst
push
xchg
or
fisub
ins
inc
xchg
sub
pusha
nop
pop
mov
cmc
aam
push
pop
or
in
test
retf
ja
and
in
fisttp
jns
sub
ins
cmc
push
fisttp
dec
push
and
inc
leave
inc
adc
sub
out
inc
mov
das
push
mov
jmp
sbb
pop
cmps
(bad)
and
pop
int3
xchg
jecxz
jp
mov
ret
sar
retf
out
(bad)
outs
adc
jl
and
pop
outs
push
sahf
ror
movs
jl
fst
fsubr
movs
cdq
sub
jcxz
dec
sub
jmp
ss
jb
(bad)
retf
inc
cs
iret
dec
add
xor
xor
mov
(bad)
outs
je
sub
movs
pop
test
retf
ret
mov
call
mov
test
rcl
push
cmp
sub
push
test
cs
je
inc
inc
fistp
mov
scas
retf
icebp
fild
xacquire
(bad)
out
stos
cmp
sub
inc
jmp
pushf
stc
add
cmp
push
cmp
outs
call
mov
inc
movs
dec
leave
adc
cdq
call
js
sub
lods
js
sbb
jae
scas
addr16
push
adc
mov
sub
xor
mov
push
mov
push
aad
out
fcom
inc
iret
ror
sbb
dec
shl
movs
aad
loop
sub
es
je
mov
aaa
adc
adc
in
pop
into
fbld
jns
and
and
lahf
in
dec
jb
cs
inc
sbb
xchg
lods
repz
sub
push
retf
jecxz
jnp
nop
sbb
dec
faddp
scas
xor
pop
push
fistp
stos
(bad)
lahf
mov
adc
je
dec
rol
or
jmp
and
movs
ds
icebp
jnp
retf
das
xor
jae
int3
push
mov
fidivr
dec
push
icebp
es
mov
cli
mov
adc
rcl
fsub
enter
or
mov
clc
cli
sub
ficom
cmp
sub
mov
xor
fadd
stos
mov
popf
cld
push
mov
xchg
xor
scas
mov
shl
mov
xchg
leave
pop
fwait
js
stos
(bad)
imul
sub
mov
mov
cmps
jmp
xor
in
test
pop
add
xchg
mov
stos
jle
pop
cmps
les
dec
fisub
scas
das
xor
out
int
or
and
(bad)
movs
add
in
mov
xor
pushf
mov
jno
xchg
in
push
xor
dec
lea
mov
push
inc
pushf
call
(bad)
pop
jne
xor
xor
popf
jnp
call
mov
ss
arpl
movs
adc
mov
addr16
std
xchg
sbb
and
and
cmp
mov
dec
mov
jmp
push
rcr
xlat
sti
xchg
add
xor
mov
inc
xor
cmp
aad
push
xchg
enter
out
push
xor
icebp
(bad)
cdq
sbb
enter
adc
sahf
push
les
dec
loope
test
sbb
mov
dec
fnstenv
aaa
push
fcomp
test
fcmovbe
scas
int3
push
cs
sbb
(bad)
push
jmp
mov
aad
pop
movs
cld
pop
clc
pop
xchg
je
retf
pop
fnsave
out
cmps
(bad)
fst
push
fidiv
lock
cmp
cmp
(bad)
pop
outs
inc
mov
stos
out
sub
pusha
ja
inc
mul
pop
mov
das
lods
jno
imul
inc
call
sahf
adc
sahf
dec
cmp
xchg
in
dec
push
(bad)
retf
xchg
or
cdq
test
or
add
dec
dec
nop
sub
mov
push
xchg
sub
lods
adc
shl
icebp
push
out
test
cs
inc
sbb
aaa
iret
or
loop
cli
mov
into
mov
dec
movs
sbb
fild
jmp
out
mov
xor
cmp
pop
test
out
sub
sub
jmp
xlat
sub
outs
adc
imul
dec
lea
jno
adc
jne
fdivr
jne
fidivr
push
mov
lods
dec
inc
cmp
pop
movs
mov
push
inc
push
xchg
sbb
push
int
in
jle
jl
mov
jno
test
shl
loope
mov
nop
and
mov
sub
retf
cmp
mov
and
fisub
in
jae
shr
repnz
sub
push
and
dec
add
aaa
gs
sar
and
lahf
in
or
pop
jb
fist
jbe
out
mov
vsubpd
in
or
xor
dec
out
cmps
std
cli
ins
and
ins
push
push
retf
movs
cmp
and
mov
out
jmp
xchg
sar
adc
outs
test
and
push
ror
lea
mov
mov
mov
fst
enter
sub
fisttp
test
inc
lods
xchg
xor
(bad)
loopne
stos
cwde
les
fcomp
cmp
in
sub
dec
jbe
pop
fistp
fidivr
icebp
stos
push
mov
mov
or
push
sub
popa
mov
icebp
lahf
test
push
xor
inc
xchg
sub
or
test
pop
ret
scas
shl
fcomi
nop
jnp
jmp
jge
test
dec
xchg
nop
rcr
ret
mov
je
adc
cdq
hlt
call
sub
jae
movs
mov
frstor
or
repnz
ja
or
mov
int
mov
add
int3
out
jb
push
dec
mov
jle
mov
(bad)
js
not
sbb
in
into
push
mov
in
sub
jge
xchg
fisubr
stc
repz
sbb
rol
retf
mov
jmp
and
outs
fsub
jbe
sub
mov
cdq
sub
pushf
sbb
clc
mov
xor
cld
xchg
loopne
sub
cmps
retf
imul
cmp
ja
cli
test
push
xchg
imul
repz
pop
jmp
xchg
or
xchg
mov
int
lds
aaa
or
call
jecxz
sbb
sbb
inc
fs
add
mov
xchg
sbb
repz
lahf
mov
aad
xchg
push
xor
xchg
pop
nop
je
adc
dec
mov
mov
sub
inc
cmp
sbb
inc
in
(bad)
out
stos
sbb
adc
fsub
jns
mov
shl
jmp
ffree
mov
sub
dec
xchg
scas
sub
xor
scas
jae
sbb
iret
jb
out
mov
and
mov
scas
add
popf
jmp
jmp
pop
leave
fist
cmps
cmc
mov
push
dec
cs
pop
fcom
mov
dec
scas
fsubr
sbb
mov
mov
xor
mov
or
push
mov
xchg
inc
imul
inc
test
cmps
fstp
xchg
jmp
gs
jp
xor
mov
fidivr
or
sub
scas
pop
lds
jmp
cmp
outs
jns
sti
mov
pop
(bad)
mov
jmp
cs
mov
in
cs
jmp
cmp
icebp
(bad)
jno
cmps
sub
mov
call
out
bound
mov
mov
lea
setb
scas
sbb
jnp
ins
fs
inc
xlat
mov
dec
stos
popf
xchg
dec
daa
pop
jg
cmps
(bad)
js
push
aam
cld
jbe
jmp
pop
(bad)
jecxz
inc
enter
in
pop
adc
(bad)
push
or
pop
and
cmpps
inc
mov
jbe
sahf
cdq
push
xor
stos
push
ins
ins
dec
adc
xchg
inc
icebp
ret
xor
cmp
cmp
lods
inc
pop
add
mov
mov
push
iret
pop
push
sti
dec
les
jno
fcomp
(bad)
dec
push
inc
cmp
ds
sbb
mov
sbb
ret
dec
dec
add
hlt
dec
(bad)
fist
fild
and
jb
aad
dec
adc
xlat
lea
gs
sub
sti
scas
imul
out
push
sbb
pop
stc
clc
outs
mov
sub
xor
jl
retf
icebp
iret
retf
mov
mov
fst
into
ja
pop
xchg
push
sub
xchg
xchg
call
pushf
pusha
int3
jbe
(bad)
out
jmp
movs
clc
adc
aad
movs
dec
imul
dec
aad
push
jns
das
dec
lahf
sbb
jecxz
fnsave
jae
repnz
lds
push
pop
add
fs
cmp
dec
jl
jmp
idiv
fdiv
cmp
outs
fcomi
clc
mov
call
(bad)
push
mov
test
inc
mov
cdq
mov
add
into
mov
cmps
inc
mov
js
ja
aas
mov
jno
cmp
xchg
cmp
xor
ds
stc
daa
mov
test
pushf
mov
adc
dec
pop
cmp
inc
int3
jp
dec
mov
sbb
test
dec
loope
xchg
jecxz
out
cmc
dec
std
test
jp
stos
scas
shl
dec
jno
pop
jb
and
push
mov
xchg
mov
fisttp
push
rol
(bad)
push
lahf
inc
cmp
dec
sbb
aad
jbe
sub
cmp
sbb
xchg
sub
mov
sub
jg
stos
pushf
idiv
push
xchg
fistp
jle
pop
lock
mov
mov
aaa
inc
xchg
push
repnz
mov
mov
movs
jmp
mov
std
outs
pop
stos
jae
and
sbb
ffree
xor
cdq
and
jge
sub
dec
xchg
push
fwait
gs
sbb
in
pop
push
sbb
sbb
mov
sar
js
out
xchg
dec
lea
cmp
jno
icebp
jnp
inc
rcl
mov
or
xchg
xchg
data16
movs
(bad)
cmps
push
inc
pop
pop
dec
xchg
in
fwait
mov
mov
pop
jae
cs
adc
lods
popa
out
sub
adc
mov
in
sub
(bad)
adc
out
and
in
rcl
or
lea
fwait
mov
stc
mov
fdiv
outs
and
sub
mov
inc
aas
mov
imul
dec
ds
and
dec
jb
fs
shl
outs
xchg
and
add
jp
in
push
xor
lds
mov
xor
cwde
and
rep
hlt
and
fs
iret
xchg
mov
push
repnz
ror
call
std
cmp
dec
jmp
aaa
rcr
pushf
jne
sbb
je
sti
mov
and
mov
and
or
jp
mov
inc
out
jnp
(bad)
das
stos
jnp
inc
jno
mul
aaa
ret
and
mov
mov
outs
fiadd
push
aam
and
stos
into
mov
inc
or
or
pop
and
pop
xchg
stos
mov
pop
pop
inc
ins
(bad)
into
jne
mov
rcr
stos
into
cld
or
pop
xor
das
bound
das
sub
mov
popf
adc
push
test
out
push
(bad)
pop
jmp
sbb
or
xchg
repnz
adc
hlt
xchg
int3
and
mov
mov
xchg
xchg
inc
out
inc
out
sbb
fnstenv
mov
cs
xlat
stos
push
aas
outs
call
jae
jmp
mov
cmps
test
push
retf
stos
xchg
jle
xchg
mov
cmp
cmp
adc
sti
adc
dec
xchg
push
dec
fdivr
inc
jecxz
in
iret
inc
repnz
repnz
aam
adc
arpl
leave
adc
(bad)
ficom
movs
retf
cmp
mov
xchg
es
sub
mov
retf
fwait
push
push
adc
inc
in
xchg
fs
cmps
and
and
and
les
aas
mov
scas
sbb
pop
out
dec
pop
jg
xchg
xor
mul
js
xor
cmp
fstp
xchg
in
cwde
sbb
jmp
rol
jbe
(bad)
int
rcr
test
jbe
jbe
loop
xchg
or
mov
cmp
add
fimul
jecxz
stos
jb
rcl
pop
add
push
shl
cmp
pop
dec
stos
scas
pop
addr16
xor
jl
sbb
ss
das
mov
scas
cs
mov
sbb
into
retf
scas
inc
inc
jns
and
pop
push
les
out
mov
clc
mov
jbe
or
ins
push
dec
inc
mov
test
inc
jmp
mov
mov
pop
xor
fwait
xor
ja
push
mov
pop
(bad)
out
and
adc
jo
sub
ret
(bad)
popa
push
push
js
mov
ins
inc
cmp
clc
shr
dec
push
xlat
mov
mov
int
fstp
mov
pop
das
or
xchg
repnz
mov
fcmove
popf
mov
xor
arpl
mov
jo
and
por
rcr
call
leave
cdq
imul
sbb
mov
cld
mov
pop
mov
xchg
or
sbb
mov
or
or
dec
jns
movs
push
dec
mov
sub
cmp
mov
hlt
sub
cmp
fwait
es
cmp
push
iret
cmp
das
push
mov
lods
mov
mov
test
or
ret
div
cmp
pop
lahf
imul
pop
and
ja
ss
in
scas
fidivr
dec
repnz
dec
pop
leave
add
and
sub
loope
or
sub
ret
mov
mov
mov
and
xchg
mov
rcl
inc
dec
sub
mov
jg
mov
push
in
inc
test
and
in
cmp
adc
mov
mov
lods
fld
xchg
rep
pushf
test
push
jno
enter
cmps
lea
and
icebp
cmp
mov
cmp
mov
cs
pushf
jg
xchg
jnp
sbb
pop
xor
xchg
mov
ja
mov
mov
fdivr
mov
mov
lahf
jecxz
xor
leave
inc
adc
cmp
test
push
mov
mov
mov
and
cmc
cmps
ins
pop
mov
fadd
(bad)
fsubr
leave
movs
ins
jnp
retf
fs
push
or
add
pop
sbb
aam
push
icebp
pop
or
sbb
arpl
pusha
adc
fnstenv
pop
cmp
add
fbld
mov
xor
mov
(bad)
cmps
adc
adc
xchg
xchg
iret
icebp
fst
adc
js
out
dec
jmp
(bad)
fistp
push
mov
sub
xchg
shr
cmps
test
push
movs
inc
adc
ss
enter
je
lods
rcl
les
sahf
pop
jb
out
enter
mov
and
(bad)
in
push
jmp
out
cmps
call
call
inc
xchg
imul
mov
cmps
push
std
and
mov
push
jmp
leave
fsub
enter
mov
xor
push
sbb
sub
das
cmps
pop
xchg
pop
push
movs
cmc
push
xor
adc
fild
je
mov
jne
(bad)
enter
pop
ror
call
push
pushf
int
fcomi
jnp
jb
fnstcw
jns
mov
(bad)
nop
jmp
ins
pusha
inc
clc
bound
xor
mov
inc
adc
jg
test
js
xor
push
mov
cmps
jmp
scas
mov
outs
ds
imul
xchg
cli
nop
and
aam
jle
dec
mov
retf
jb
aad
mov
push
xchg
mov
mov
popa
push
lea
add
xchg
mov
inc
xchg
repz
ja
clc
ins
cmp
jnp
jns
cmc
jge
jbe
dec
xchg
and
clc
sub
fsubr
stos
fisub
js
dec
or
test
xor
lods
sbb
jmp
aam
adc
push
mov
push
jbe
(bad)
jmp
mov
das
push
jo
push
push
inc
div
xor
ins
ds
aaa
cmp
pop
pop
mov
add
mov
mov
mov
cmp
or
xchg
arpl
rcr
je
add
fbstp
pop
(bad)
mov
daa
neg
test
xchg
pop
cld
(bad)
add
inc
jge
cs
cmp
out
sub
and
jmp
jle
and
jns
dec
cmp
fidiv
daa
or
push
les
inc
mov
jmp
ins
sub
in
mov
fild
les
retf
pop
mov
lea
mov
fdiv
mov
daa
jl
mov
and
out
inc
aaa
aaa
sub
sbb
inc
mov
and
push
cli
inc
cmps
and
movs
jae
push
test
push
cs
pop
xor
inc
push
pop
ja
loop
mov
dec
(bad)
outs
xor
loop
imul
push
stc
aaa
arpl
sub
mov
fld
popf
dec
popf
sub
sbb
daa
mov
push
cmp
xchg
in
ds
cmp
cmps
loop
xchg
or
sub
sub
div
frstor
retf
rcr
in
dec
cli
mov
adc
dec
jb
push
mov
cli
jmp
idiv
and
lds
ret
cmps
jecxz
mov
fisubr
js
sar
inc
cdq
dec
cmp
jle
xor
loopne
pushf
jle
dec
enter
and
fnsave
retf
fwait
in
es
movs
jecxz
or
imul
fmulp
pop
das
cmp
push
popa
or
loop
in
push
aaa
add
xor
pusha
call
lods
aaa
sub
iret
jo
mov
pushf
push
shl
(bad)
jmp
fmul
add
sub
in
leave
mov
cmps
mov
inc
rol
dec
les
cdq
add
adc
fstp
out
es
int3
pop
fwait
loopne
stos
cmp
jg
mov
push
cmps
sbb
xor
mov
cmps
and
mov
cmp
stc
mov
hlt
jecxz
repnz
sbb
ss
stos
jge
mov
cmp
xlat
lods
pause
ja
fist
and
mov
sub
mov
cmp
(bad)
int
or
xor
stos
jmp
push
pop
sbb
outs
popa
cmp
ret
cmp
dec
loope
dec
push
xchg
mov
push
int
or
jle
fcmove
dec
xchg
push
leave
ss
or
int3
retf
xor
sub
xchg
jp
xchg
cmp
pop
loop
call
mov
push
loop
or
add
icebp
fst
sub
aaa
or
xchg
push
cmp
jae
jbe
jge
fldenv
cwde
sub
and
pop
adc
ins
ret
and
inc
xor
cli
mov
retf
outs
scas
(bad)
aad
xor
cmp
loop
into
stc
clc
mov
lds
cmc
inc
cmp
dec
out
rcr
and
ja
inc
out
fidiv
ins
dec
(bad)
out
in
fdiv
mov
xchg
xchg
pop
test
push
scas
or
push
ins
outs
xchg
xor
enter
sbb
in
xchg
mov
cwde
mov
xor
cdq
mov
push
xchg
push
rcr
xor
jp
xchg
mov
sbb
icebp
frstor
lea
fwait
pop
lahf
xchg
xor
das
test
icebp
jb
xchg
jl
pop
xchg
inc
mov
jp
ficom
pop
ja
mov
out
adc
aad
in
mov
ret
jb
jnp
jnp
test
retf
in
xchg
popf
outs
dec
call
inc
into
in
into
lock
jl
adc
fwait
and
jae
gs
mov
xchg
popf
sub
into
scas
mov
sti
pop
mov
dec
pop
mov
sti
jmp
int3
cmps
enter
mov
repnz
sbb
xchg
pop
jns
mov
xor
dec
cmp
pop
xchg
push
add
(bad)
adc
push
dec
push
jb
outs
inc
mov
dec
dec
sahf
fld
pop
adc
test
pop
mov
xchg
xchg
test
(bad)
cmp
sub
rol
(bad)
jmp
int
das
shl
adc
mov
or
xor
push
fimul
fidiv
dec
jnp
fwait
loopne
mov
xchg
push
adc
(bad)
outs
cmp
fmul
shl
pusha
mov
push
mov
push
(bad)
adc
nop
jp
sub
jg
and
jb
push
rcl
xor
movs
aam
retf
mov
test
mov
dec
jmp
jnp
push
nop
ret
ror
dec
in
mov
jb
(bad)
or
mov
dec
or
pmaddwd
shl
fdiv
dec
mov
fwait
cwde
pop
out
sbb
inc
retf
adc
stos
clc
mov
fistp
aaa
sbb
retf
cdq
scas
sub
mov
aam
push
int3
nop
mov
jnp
stc
fstp
push
out
(bad)
fiadd
out
clc
xor
ins
cmps
jp
retf
fxch
je
dec
pop
mov
pop
call
in
(bad)
test
jle
lea
repz
ja
mov
icebp
sti
xchg
loope
scas
push
ins
sar
neg
fisttp
jmp
push
pop
cmp
push
or
sub
mov
sbb
into
ret
stos
cmp
sti
sahf
out
xchg
pushf
xor
ret
fisttp
sub
movs
jnp
mul
mov
outs
or
lea
out
jnp
xor
in
jno
ja
loope
icebp
bound
call
sub
ficomp
push
mov
scas
(bad)
fbstp
cmc
inc
add
(bad)
call
mov
cdq
retf
popf
add
mov
fs
(bad)
punpckhwd
and
jno
jle
lock
loope
call
out
mov
(bad)
jl
iret
mul
aas
pop
cmc
repz
cld
(bad)
mov
sti
repz
stc
jl
div
jmp
(bad)
stc
jp
scas
(bad)
out
jnp
lahf
out
jmp
out
clc
jns
add
pop
(bad)
stc
sub
adc
aas
mov
aas
mov
repz
mov
ins
mov
icebp
inc
outs
std
mov
jl
(bad)
cld
in
stc
cld
cmp
jnp
mov
stc
push
icebp
lods
(bad)
ds
jge
lahf
imul
ss
repz
repz
sahf
iret
sti
push
cld
mov
xlat
stc
stc
int3
jmp
lods
jg
cmp
(bad)
scas
popa
mov
out
in
call
js
ret
mov
loopne
ds
ds
test
scas
loope
bswap
xchg
mov
jg
mov
idiv
jnp
or
loop
repz
fsub
stc
stc
ds
call
mov
jo
jg
je
mov
pop
sbb
je
sbb
mov
cmp
mov
int
lahf
jmp
lahf
(bad)
aas
sbb
mov
cwde
push
mov
mov
icebp
pop
es
out
ret
mov
call
dec
ret
lods
outs
lods
xchg
(bad)
jns
ret
mov
repz
add
cmp
pop
sbb
loopne
cmp
loop
ret
cld
std
fwait
add
lods
bound
push
push
jno
lfence
lds
or
loop
ret
fdivr
xor
jge
sbb
cmc
fistp
fwait
sbb
sahf
ja
clc
mov
out
call
push
stc
test
jne
mov
(bad)
sahf
fld
mov
xchg
jmp
shl
mov
jne
jno
or
repz
fimul
(bad)
(bad)
ret
js
scas
mul
mov
lock
mov
dec
mov
fdiv
or
ja
ds
pop
idiv
jecxz
out
rcr
stos
add
movs
pusha
push
push
in
mov
jmp
and
in
or
out
cmp
aas
add
jo
enter
repz
ss
sbb
clc
pop
lds
sub
call
jnp
shl
out
daa
out
mov
sbb
or
(bad)
xlat
sbb
xlat
test
loopne
adc
aas
xor
(bad)
pop
js
pop
pop
fwait
adc
sub
loop
or
cwde
dec
add
stc
out
test
das
clc
mov
std
ret
xchg
and
mov
pop
jnp
jecxz
cld
ffree
pop
jbe
mov
int
std
mov
cdq
push
(bad)
(bad)
mov
adc
cmp
int3
leave
bsf
les
jae
ret
pop
ret
pop
jmp
jecxz
loop
cmp
fst
(bad)
inc
inc
int
ja
jg
das
sub
js
lods
jl
push
cmp
mov
dec
in
jno
xlat
sbb
jg
jp
idiv
mov
lock
xchg
scas
cmp
rcl
jb
test
adc
inc
test
pushf
pop
lds
jae
clc
fld
fwait
stos
lods
cmp
xchg
xor
(bad)
fild
pop
iret
sub
fs
js
push
dec
in
pop
or
push
loop
mov
cmc
push
not
ja
outs
ins
mov
xor
das
sahf
dec
(bad)
pop
xor
xor
pop
xchg
mov
ja
rcl
out
mov
(bad)
shl
das
cld
sub
out
pop
mov
mov
adc
iret
das
aam
push
jecxz
mov
adc
js
adc
aaa
sub
jnp
mov
add
cwde
xor
fcomp
adc
mov
jle
xor
gs
jnp
ret
addr16
or
mov
ds
xor
arpl
fisub
cmp
(bad)
ret
aas
adc
(bad)
int
sbb
loop
xchg
neg
sbb
in
mov
iret
in
inc
outs
jb
mov
out
pop
jle
mov
sbb
int3
xor
daa
repnz
movs
pop
nop
jnp
ret
ret
(bad)
call
iret
mov
push
mov
or
sub
dec
fidiv
out
loopne
inc
lds
fnstenv
xlat
sbb
pop
ret
addr16
ror
jnp
pop
dec
call
test
es
pop
push
pop
pop
mov
outs
or
pop
out
jnp
xor
fsubr
pop
out
ret
cwde
pop
sbb
outs
add
das
in
inc
pop
clc
rol
mov
adc
retf
neg
js
lods
sub
jecxz
xchg
pop
cmp
(bad)
into
(bad)
std
nop
jnp
shl
pusha
mov
mov
int3
xchg
jle
adc
or
cmp
icebp
fild
(bad)
cli
mul
jl
push
jnp
repnz
inc
cli
and
sub
jg
and
pop
fdivr
outs
or
sar
xor
xor
adc
test
adc
adc
or
daa
ds
rcl
and
cdq
cs
xchg
mov
addr16
pop
and
and
test
xor
pop
xchg
inc
(bad)
iret
dec
rol
loop
imul
mov
mov
push
test
jp
dec
sbb
dec
jo
test
push
mov
jl
jae
push
push
lods
test
in
xor
mov
add
xor
retf
das
sahf
aas
out
ret
cwde
pop
mov
test
inc
mov
pop
aaa
fsubr
shld
pmaxub
and
xchg
push
nop
fst
daa
sub
dec
aad
sbb
lahf
nop
inc
inc
les
jnp
or
test
pop
psrad
loope
sbb
xchg
test
lods
test
jbe
add
and
adc
or
xor
sar
adc
retf
mov
and
in
fidiv
dec
sub
jae
sub
pop
mov
sbb
cdq
jmp
mov
pusha
out
cmp
dec
jae
and
cmp
adc
fdiv
xor
pushf
(bad)
ret
bnd
ins
push
cmps
movs
fld
and
int
mov
inc
cld
jle
mov
mov
mov
shl
sbb
test
mov
stc
cmp
adc
out
push
jp
or
adc
push
pop
shr
outs
pusha
iret
push
jnp
inc
(bad)
je
push
push
(bad)
cmc
jp
xor
and
loop
mov
stos
mov
lds
call
cmp
(bad)
jl
jmp
mov
sahf
ffree
cmp
mov
pop
rcr
and
lahf
fbld
xchg
mov
(bad)
inc
fld
int3
inc
or
push
push
gs
enter
pop
test
jecxz
ror
cld
and
dec
call
neg
mov
ficomp
in
push
xor
es
jne
jl
cwde
mov
jp
fisttp
jb
and
xlat
inc
push
jo
fst
mov
add
arpl
push
icebp
pop
adc
les
jno
bound
cmp
enter
(bad)
fwait
cwde
jecxz
inc
into
out
sub
mov
sbb
mov
xor
sub
sub
cmp
shl
xor
and
dec
push
enter
jmp
mov
das
cli
ds
out
xor
ins
push
push
inc
cli
mov
lahf
int
ja
das
xchg
jae
(bad)
rol
sub
push
xchg
jnp
fadd
mov
push
xor
inc
je
fucomp
xlat
jae
inc
mov
cmp
movs
push
sub
push
scas
xchg
push
cmp
scas
imul
inc
aam
dec
jne
call
stc
repnz
imul
mov
fmul
js
xchg
add
adc
call
mov
sub
xchg
mov
shl
gs
sbb
sub
adc
in
jae
loop
push
jl
lahf
sub
fmul
faddp
push
sbb
outs
in
mov
lds
sbb
push
cmp
dec
lahf
pop
sbb
std
outs
mov
xchg
push
fwait
ds
cmps
hlt
xor
xor
stos
xchg
sub
pop
loop
xlat
sbb
(bad)
leave
mov
add
iret
cwde
stos
int
in
pop
icebp
and
mov
movs
sub
mov
ss
fmul
(bad)
dec
cmp
sub
arpl
in
cmps
(bad)
cmc
and
pop
xchg
sbb
jae
xchg
fs
jne
xchg
cmps
and
arpl
fisttp
lea
aam
lods
mov
mov
push
mov
out
mov
ficomp
fistp
fld
or
push
adc
xor
jo
sbb
retf
icebp
sahf
pop
mov
mov
mov
cmp
jmp
dec
adc
and
fmul
push
sub
loop
dec
cld
int
cmps
pop
and
sub
push
into
je
push
mov
add
jg
push
sahf
dec
push
pop
xchg
lods
nop
mov
retf
or
xchg
clc
jbe
pop
retf
(bad)
clc
pushf
mov
daa
lods
fst
dec
inc
out
shl
cmp
in
mov
jp
jp
push
pop
cmp
push
icebp
xchg
lock
sti
shr
(bad)
fist
hlt
push
dec
cwde
or
nop
mov
int
in
adc
in
out
(bad)
stc
test
ds
or
jl
jb
(bad)
retf
aas
cmps
idiv
repz
ja
out
jg
mov
sbb
inc
pop
loop
sub
movs
push
in
mov
and
sbb
in
(bad)
ds
mov
mov
movs
or
mov
push
mov
jns
lea
inc
not
das
icebp
pop
inc
mov
jb
add
ret
sub
sub
inc
jnp
lods
cmp
cld
daa
(bad)
xor
mov
push
leave
loopne
test
repz
push
and
in
mov
xchg
popa
adc
jbe
inc
dec
jmp
stos
dec
cs
adc
cmps
push
js
stos
fidivr
sbb
repnz
out
or
mov
cmps
xchg
inc
push
push
xchg
es
shl
movs
xor
inc
xor
dec
push
mov
sbb
pop
or
push
(bad)
xor
xchg
add
les
cmp
pop
xchg
dec
mov
jno
(bad)
and
or
adc
push
xchg
mov
test
adc
mov
push
dec
mov
pop
arpl
aam
shl
mov
push
mov
pop
(bad)
jbe
pop
cmp
cmps
leave
test
mov
jl
mov
and
jmp
add
mov
mov
inc
enter
test
stos
loop
inc
fdiv
dec
pop
sbb
dec
fwait
and
push
dec
fwait
jcxz
sub
dec
into
int
iret
dec
xchg
(bad)
jns
push
inc
lods
mov
adc
clc
cmp
jb
outs
pushf
retf
(bad)
jnp
pop
and
outs
mov
test
adc
imul
call
icebp
mov
dec
push
inc
call
add
dec
shl
adc
test
movs
xor
adc
lds
stc
adc
sub
mov
xor
xchg
xchg
test
gs
call
cdq
sub
push
push
movs
rcl
les
xor
icebp
sub
sti
adc
cmp
aad
daa
adc
int
mov
(bad)
pop
rcl
stc
test
movs
arpl
cmp
pop
lahf
mov
xchg
xchg
ret
sbb
push
push
mov
movs
inc
(bad)
scas
outs
dec
jl
not
mov
int
or
xchg
inc
in
les
inc
rcr
xor
fdivr
push
mov
nop
dec
imul
xlat
movs
imul
dec
icebp
mov
std
push
mov
add
iret
xchg
xchg
mov
stc
adc
mov
push
xor
out
sub
mov
xchg
ret
out
hlt
push
inc
sbb
(bad)
int
sbb
movs
jg
repz
and
in
mov
pop
inc
popf
jne
mov
xor
movs
fld
repnz
mov
ret
xor
icebp
mov
jnp
idiv
movs
jge
leave
int
sub
jp
pop
ss
mov
mov
ret
(bad)
mov
sti
cs
adc
and
jnp
inc
mov
dec
(bad)
fsub
inc
leave
pop
xchg
mov
xchg
repz
inc
mov
cmp
mov
dec
cmp
(bad)
into
fwait
xchg
xchg
repnz
cmps
sub
ret
xchg
ss
shl
mov
sahf
lock
mov
scas
in
je
dec
int3
mov
push
push
pop
xchg
fs
popa
outs
and
sbb
std
aam
popa
xchg
lea
pop
mov
dec
movs
xchg
fisubr
scas
inc
sbb
push
mov
mov
sbb
push
push
test
cmp
push
and
jl
div
mov
xchg
mov
mov
loope
fiadd
inc
mov
mov
jns
push
lea
leave
sub
push
ror
mov
xchg
push
stos
mov
iret
mov
fucomip
cmp
or
ret
mov
xchg
nop
or
lea
out
aad
xchg
mov
mov
inc
xchg
add
imul
jae
mov
sub
scas
jp
nop
push
mov
xchg
mov
in
imul
push
adc
call
push
imul
or
sbb
lods
sbb
frstor
pushf
call
scas
jp
retf
pusha
scas
std
mov
jo
pop
jg
fwait
call
sub
cli
cmp
xor
mov
sub
push
push
std
inc
cdq
stos
pop
xchg
(bad)
clc
xchg
sub
sar
dec
lods
and
movs
retf
cmp
lods
sub
sbb
rcr
jp
rcl
aas
pop
mov
inc
dec
ins
pop
loop
push
mov
(bad)
mov
push
js
mov
leave
pop
cs
push
js
jecxz
mov
push
enter
(bad)
dec
jle
out
test
imul
imul
jecxz
in
add
push
jmp
xchg
xchg
das
xchg
outs
sbb
fimul
sti
mov
dec
leave
clc
mov
loopne
inc
jmp
mov
inc
push
bound
test
mov
into
push
xchg
lock
repnz
shl
rol
(bad)
mov
shl
dec
dec
mov
ret
pop
xor
fcom
xchg
xlat
and
mov
push
xchg
xchg
adc
inc
xor
cmp
or
movs
jecxz
leave
into
icebp
dec
sahf
iret
mov
jnp
cmp
movs
ficomp
mov
jle
mul
ffree
sbb
test
xor
jmp
fucomip
xchg
(bad)
cmp
jnp
cmp
les
(bad)
and
inc
pop
leave
jl
dec
pop
fst
push
bound
(bad)
jo
xchg
mov
dec
pop
xchg
jl
shl
lea
mov
jno
xchg
and
jl
mov
sub
loop
xchg
call
and
in
lods
dec
das
in
fisttp
cld
and
loope
pop
sbb
dec
fstp
xchg
in
es
ret
outs
(bad)
lods
sub
xchg
pushf
lds
out
mov
into
mov
sbb
and
out
shl
pushf
sub
mov
adc
call
xchg
cmp
mov
mov
loope
add
cmp
in
sub
jne
repz
inc
sbb
(bad)
cmp
and
mov
cmps
jg
dec
fdiv
jbe
push
sahf
ret
outs
mov
jmp
inc
adc
adc
movs
(bad)
mov
sahf
pop
mov
push
push
and
(bad)
and
(bad)
mov
push
jne
(bad)
movs
xor
nop
sbb
lea
lock
inc
cmp
stos
out
push
xor
sub
fidivr
pop
call
movs
and
push
add
lods
pop
jo
xchg
jecxz
mov
test
pop
push
mov
dec
mov
ss
hlt
mov
ja
call
ins
sbb
jl
fucomip
pop
jb
dec
das
ret
add
push
push
int
mov
or
fwait
sub
fmul
dec
pop
jae
out
scas
or
dec
(bad)
xchg
sti
sahf
jmp
inc
xlat
aam
call
cmp
rcl
add
pop
mov
aaa
scas
stos
mov
not
push
fwait
sub
js
int
xchg
mov
test
cmp
push
into
cmc
popf
cld
mov
shr
sub
mov
ins
xchg
mov
lock
pushf
jmp
xchg
mov
ds
shr
xchg
mov
dec
adc
mov
sub
pusha
pop
ds
lahf
sub
test
xchg
push
push
dec
xchg
ret
and
mov
mov
jno
ins
pop
dec
cmps
and
xchg
aad
imul
leave
sbb
cli
or
cdq
jb
mov
mov
jo
pop
dec
mov
or
gs
cmp
push
lods
mov
cdq
retf
inc
cmp
test
or
jnp
outs
adc
xchg
shl
(bad)
cmp
aam
xchg
inc
shl
mov
mov
cmps
jmp
push
out
mov
jle
mov
jmp
loope
push
mov
xchg
sub
xchg
movs
xchg
call
mov
int
mov
cmc
lock
jmp
inc
dec
in
loop
aaa
push
mov
cdq
mov
in
mov
or
mov
xchg
aas
loope
inc
push
adc
sub
lea
leave
pop
retf
adc
(bad)
xor
and
sbb
push
mov
jbe
mov
dec
in
push
test
out
cld
fsubr
cmp
and
pop
adc
ss
das
leave
ret
push
xchg
(bad)
call
ins
cmp
pusha
les
daa
(bad)
mov
mov
dec
int
cmp
fucom
nop
xchg
pop
orps
and
xchg
ss
xchg
sti
push
int
daa
pop
xchg
jmp
mov
push
xor
iret
cmp
nop
mov
pop
clc
xor
shl
xor
push
imul
ins
inc
jl
stos
pop
sbb
pop
sub
mov
jmp
test
mov
mov
movs
mov
sar
mov
repz
adc
in
cmp
adc
in
xchg
push
ret
inc
jae
mov
sbb
xlat
lea
in
push
clc
nop
punpckhwd
ret
ja
out
sub
scas
imul
dec
ds
fild
pop
push
nop
sbb
fidiv
icebp
push
scas
adc
stc
lods
cdq
outs
mov
js
loope
and
dec
out
leave
dec
pmullw
xchg
fistp
sti
and
pop
leave
mov
sahf
cmp
int3
hlt
out
and
dec
push
mov
dec
add
adc
inc
clc
out
cmps
(bad)
sbb
loop
xchg
inc
cmc
adc
jbe
xor
pop
pop
je
clc
ja
or
jo
cdq
fild
ss
fild
in
aam
out
fcmovnbe
nop
je
xor
mov
push
adc
mov
loopne
fst
leave
ja
xor
jne
adc
sub
(bad)
in
mov
inc
mov
cmps
inc
or
pop
pusha
sbb
fs
fmul
pop
push
scas
rcl
fsubr
mov
ret
sbb
cmp
imul
adc
pop
push
dec
jb
(bad)
jmp
stc
adc
pop
out
ss
les
leave
push
rol
sahf
repnz
ret
ja
lods
adc
jnp
aad
dec
sti
adc
and
dec
adc
inc
mov
jmp
jbe
and
in
(bad)
int3
dec
adc
out
sub
sub
iret
jg
(bad)
in
js
jne
fs
stos
mov
mov
loope
sahf
js
into
sti
loopne
adc
lods
xchg
lods
test
nop
jne
pop
aas
xlat
es
cmp
cmp
es
enter
xor
scas
push
movs
inc
mov
shl
sbb
sbb
loope
retf
adc
dec
pop
xchg
sub
scas
pop
jecxz
cmp
ss
lds
mov
fadd
pmuludq
pop
xchg
leave
xor
dec
enter
mov
jecxz
dec
xor
fldenv
sub
lea
jbe
cmp
cmc
add
in
mov
daa
scas
aad
leave
jae
popa
xchg
scas
push
(bad)
lahf
popf
inc
addr16
and
or
in
jg
jl
(bad)
in
fcom
pop
xchg
push
pop
in
(bad)
sub
mov
ja
push
jbe
and
pop
mov
fdivr
mov
stos
mov
repz
mov
push
push
xor
dec
int3
and
loopne
call
scas
jo
in
push
fucom
or
int
and
arpl
mov
xchg
xchg
push
mov
ja
and
gs
push
mov
xor
push
clc
in
pusha
fist
push
mov
cmp
jne
xchg
into
dec
cmps
repnz
and
shl
repnz
std
jnp
loope
(bad)
ds
(bad)
loope
sbb
test
fisubr
(bad)
ins
in
ret
mov
shl
sbb
ja
and
sbb
pop
sub
sub
int3
dec
sub
xchg
out
dec
fucomi
mov
add
push
dec
sub
jge
mov
out
gs
mov
add
or
in
xor
lea
xchg
push
sahf
sub
mov
push
addr16
push
pop
mov
sbb
jb
fdivr
fwait
lahf
icebp
mov
sbb
mov
loop
shl
ja
js
ja
fwait
sub
jo
stc
(bad)
(bad)
ror
mov
(bad)
in
dec
loopne
outs
call
cmp
xchg
mov
cmp
mul
je
sbb
out
xor
and
gs
inc
hlt
jmp
outs
xchg
mov
mov
retf
jle
lods
xchg
stos
stc
dec
jne
sub
or
sar
aaa
movs
call
loopne
cmp
jo
retf
mov
shl
pop
xchg
les
jl
sbb
cmps
fs
inc
sub
inc
xchg
sbb
sbb
cmp
pop
cmp
mov
adc
pop
xchg
es
lock
loop
adc
add
cmps
retf
test
xchg
dec
ins
sub
fisubr
out
and
bound
lahf
cmps
mov
test
add
cmc
movs
dec
int
mov
xor
xlat
lock
mov
adc
cmps
aam
mov
pop
imul
jno
je
test
push
leave
adc
shr
sub
fst
mov
popf
enter
in
dec
adc
sub
push
in
xor
aaa
js
sub
jae
stos
cld
pop
iret
test
mov
mov
or
das
xchg
push
test
mov
ror
mov
fcomip
jge
aad
call
lidtd
in
mov
outs
repnz
stos
or
mov
fcmovnu
pop
cmps
cmp
aam
popa
push
sbb
mov
push
in
pop
sbb
and
push
fisttp
xchg
pusha
fsub
leave
outs
sub
xor
dec
push
fisubr
(bad)
fcom
popf
outs
sub
fstp
jecxz
ins
and
das
retf
or
or
popf
xor
mov
mov
pop
push
dec
cmp
sub
aam
std
out
xor
test
sti
sub
call
repnz
aad
dec
bound
mov
popf
out
xchg
iret
push
jb
daa
leave
pushf
jns
jbe
int3
mov
das
mov
jl
call
pop
loope
or
sbb
outs
jns
pop
fist
cmp
mov
repz
outs
ja
js
(bad)
cmp
inc
jmp
out
gs
mov
or
fnstsw
clc
cmp
hlt
pop
repnz
or
mov
aaa
push
pusha
xor
(bad)
std
call
leave
jnp
repnz
mov
xchg
inc
imul
jnp
jno
in
jnp
xor
pop
inc
sub
pop
xor
je
loope
ror
adc
addr16
lods
mov
pop
xchg
aam
mov
xchg
adc
fnsave
in
xchg
dec
(bad)
int
(bad)
not
jne
sahf
in
call
jmp
(bad)
aas
and
mov
xor
dec
shr
sbb
jns
or
cdq
mov
lods
xor
mul
jge
mov
ret
cmp
push
jns
in
or
sbb
out
mov
jmp
sbb
xchg
sub
jne
cmp
bound
in
enter
int
inc
test
mov
or
xor
ss
imul
out
fadd
add
jmp
cld
push
inc
inc
stos
fcomp
test
sub
aaa
push
(bad)
mov
sub
sub
clc
rcr
adc
xchg
pop
xchg
push
(bad)
cdq
arpl
xor
arpl
jne
fisub
sub
dec
sbb
jbe
mov
rcr
mov
out
mov
xor
mov
pop
sbb
sub
cmp
shl
push
inc
cmp
lahf
fnstcw
loopne
jbe
data16
mov
fimul
out
mov
ja
sub
leave
gs
dec
mov
sbb
mov
loope
fisub
jl
adc
mul
(bad)
lock
fiadd
pushf
cdq
push
es
pop
test
xchg
xchg
out
(bad)
inc
mov
into
push
push
xchg
mov
aas
mov
leave
popf
(bad)
clc
in
int3
retf
jne
mov
sub
movs
cmp
sti
ret
in
and
mov
fisttp
pop
push
in
scas
ret
push
push
xchg
(bad)
pop
icebp
test
bound
push
sbb
dec
mov
loop
fdiv
sub
xor
int
dec
pop
sub
jbe
das
jae
push
cmps
jge
leave
push
ret
out
cmp
clc
jp
ja
loope
or
mov
xchg
add
(bad)
jecxz
jle
outs
mov
xchg
cmp
call
fs
sbb
and
rcl
minps
cmp
sti
and
push
shl
ficomp
lds
lods
mov
sub
test
out
test
pop
arpl
lock
xor
dec
repnz
dec
mov
or
in
mov
mov
jge
inc
fisttp
outs
int3
stc
sbb
xor
jmp
pop
out
sub
mov
loopne
out
outs
jb
nop
stos
popa
arpl
stos
push
dec
scas
sar
and
mov
dec
ja
imul
iret
adc
imul
fmul
popa
jb
dec
dec
mov
pop
push
sbb
outs
xchg
lods
cmps
mov
jg
sbb
popa
mov
test
adc
pop
jge
(bad)
or
pop
or
and
imul
in
xchg
jae
mov
jl
mov
mov
out
xchg
pop
and
loope
sar
es
aad
daa
shl
xchg
sbb
adc
pop
popa
leave
cmp
fidivr
ja
xor
add
jmp
test
(bad)
test
lock
mov
cmps
sub
repnz
pop
xchg
xchg
sub
dec
pop
xchg
mov
mov
add
(bad)
mov
xchg
push
les
aaa
test
(bad)
es
pusha
adc
lahf
rol
retf
mov
mov
sub
add
sbb
xor
es
xchg
adc
xor
es
or
lds
pop
jmp
retf
scas
daa
sar
xchg
arpl
lock
dec
sub
mov
(bad)
ja
adc
mov
retf
rcl
ror
mov
xchg
pop
mov
push
repz
sti
push
ja
xchg
nop
mov
mov
fcmovbe
adc
jecxz
jb
adc
mov
jns
mov
shl
inc
out
and
cs
mov
xor
dec
shl
into
scas
push
xchg
lods
daa
dec
call
jno
ins
and
in
div
cmp
fdiv
and
aam
and
and
mov
adc
fiadd
retf
jl
dec
push
xor
push
xchg
xchg
jns
mov
clc
cld
sub
mov
jmp
xchg
fsubr
xchg
cmp
mov
movs
sub
pop
adc
btc
enter
stos
test
retf
dec
or
push
fsubr
push
rcl
jno
test
je
adc
inc
mov
std
rcr
xchg
in
jl
out
in
pop
stc
jmp
int3
hlt
xchg
les
gs
cmc
cdq
(bad)
xchg
and
cmp
aam
xor
mov
stc
push
mov
in
xchg
pop
ja
or
mov
cmp
adc
imul
mov
out
mov
ficomp
or
xchg
dec
mov
inc
cmps
out
pop
push
and
push
push
(bad)
setbe
test
aaa
xchg
mov
mov
xchg
cmp
and
mov
inc
in
pop
jecxz
aaa
outs
inc
mov
push
rcl
sub
pop
mov
fcom
out
jle
and
and
sbb
xor
push
push
jne
(bad)
pop
mov
retf
jae
es
push
popa
push
xchg
imul
repz
out
jbe
mov
and
rol
ja
in
push
aad
xchg
mov
adc
lods
cmp
jecxz
movs
fdivr
mov
inc
fild
cmp
data16
out
sub
dec
jno
mov
test
push
adc
pop
jb
adc
je
(bad)
or
inc
push
(bad)
xchg
mov
retf
xor
push
mov
stc
es
xchg
and
xchg
ins
aaa
or
xor
jbe
jle
cmc
fadd
aad
lds
not
jmp
hlt
dec
movs
lahf
lock
int
(bad)
fstp
sub
add
xchg
jne
(bad)
hlt
dec
arpl
fld
pop
ret
loope
test
adc
std
nop
repz
dec
dec
dec
jge
inc
mov
cmp
push
bswap
push
fild
push
jne
mov
retf
(bad)
gs
mov
pop
inc
xchg
jge
or
pop
loope
jae
cmp
fadd
xor
xchg
test
xchg
cmp
cmps
bound
dec
(bad)
lahf
cmp
adc
xor
jae
cmps
mov
adc
and
push
fwait
rol
mov
jno
jae
jle
sahf
mov
not
call
sbb
add
add
and
jmp
lds
out
push
ror
and
sbb
das
neg
mov
mov
xor
xchg
sbb
jp
dec
xor
pushf
sub
sub
jb
out
in
scas
mov
inc
repz
lods
in
xor
cmp
test
fs
cmps
sub
scas
aam
int
in
out
call
fsub
xchg
xor
inc
cmps
ins
push
dec
cld
popa
xchg
hlt
ds
ds
jmp
dec
mov
repz
and
cmp
lock
pop
jbe
fs
xchg
dec
shl
dec
sbb
movs
fisttp
jmp
jecxz
jo
ja
and
dec
repnz
dec
(bad)
jg
imul
retf
adc
xchg
or
jb
test
test
test
mov
call
outs
ja
or
(bad)
cwde
imul
mov
(bad)
les
cld
push
fs
fsubr
cmp
lock
or
mov
or
inc
loope
xchg
jb
and
and
mov
loope
jmp
fld
mov
cdq
sbb
lock
sub
out
mov
(bad)
out
dec
lahf
pop
rcl
mov
and
mov
adc
xchg
movs
jb
pop
mov
adc
dec
hlt
aam
jno
mov
shr
xchg
movs
jmp
dec
clc
cmp
and
ins
push
jns
in
sbb
daa
jne
aam
dec
jb
fbstp
loopne
mov
pusha
sub
xchg
outs
fs
inc
std
sbb
cmp
(bad)
lock
aam
xor
fwait
mul
test
mov
inc
xor
cdq
dec
movs
xchg
je
ss
push
loop
xor
in
shl
xchg
jb
inc
jb
retf
xchg
xchg
stos
scas
or
pop
adc
fadd
popf
or
xchg
jb
pushf
test
inc
(bad)
in
jmp
aaa
pop
out
in
jge
pop
push
and
call
scas
and
and
or
push
mov
and
jecxz
(bad)
in
cs
mov
sar
adc
sbb
jo
jmp
cmps
stos
ds
or
nop
shr
fdivr
xchg
inc
jae
out
imul
jno
inc
outs
mov
push
or
and
sub
sbb
mov
rcr
push
in
hlt
push
test
jge
sub
rcl
sub
mov
sbb
xlat
push
and
out
push
mov
push
jb
inc
dec
and
mov
stc
xor
pop
jno
or
(bad)
js
push
das
adc
or
adc
xchg
ret
cmps
xchg
dec
iret
sub
in
test
inc
gs
sub
sahf
test
lods
sub
aad
mov
cs
dec
aam
adc
lds
cmp
jb
lea
ins
pop
inc
shl
in
loope
pop
pop
movsx
xchg
sbb
aas
ins
repnz
adc
push
add
and
js
adc
and
sbb
ds
pop
push
mov
mov
xchg
jmp
pop
nop
retf
pop
das
inc
mov
adc
aas
adc
jno
lahf
sub
mul
in
imul
jmp
shl
push
data16
out
xchg
pop
push
jge
popf
jnp
std
jecxz
push
sub
lock
in
adc
addr16
stc
test
je
jbe
dec
sub
mov
mov
dec
sub
adc
inc
int
imul
xor
mov
lods
jmp
adc
push
cmp
cmps
movs
xor
sbb
lds
outs
sbb
(bad)
push
loopne
cmp
outs
pusha
(bad)
and
aam
mov
inc
outs
shr
inc
and
out
inc
mov
jp
out
dec
jne
iret
jns
jge
pop
lds
movs
xchg
leave
popf
fsub
sub
shr
add
adc
iret
dec
out
sub
add
push
aas
pop
cmp
repnz
and
test
mov
rcr
add
popf
xchg
mov
sub
dec
clc
out
cwde
jno
out
out
scas
and
dec
push
jb
movs
xor
xor
jo
pop
cdq
xchg
sub
inc
pushf
sub
jbe
dec
mov
fmul
test
mov
mov
xor
or
fwait
(bad)
arpl
xchg
cmp
nop
add
mov
jg
outs
cmps
test
xchg
xor
leave
out
add
dec
neg
xchg
xor
(bad)
pop
xchg
mov
cmp
dec
ror
add
into
lock
sti
xchg
int3
rcr
pmuludq
sub
xor
push
xchg
gs
fistp
mov
dec
dec
add
(bad)
rcr
push
pop
loop
outs
clc
out
or
mov
scas
lock
bound
ficomp
jnp
icebp
adc
xlat
xchg
stos
fcom
je
fcmovb
add
xchg
movs
in
xchg
fisttp
adc
cmp
jo
arpl
fwait
cmp
jmp
retf
inc
mov
xlat
popf
sbb
mov
(bad)
fidivr
ins
fs
push
mov
cld
jbe
loope
push
sub
(bad)
lahf
outs
pop
sar
xchg
test
or
mov
sbb
pushf
enter
imul
mov
lahf
cs
pop
cmps
and
inc
repnz
ss
les
xchg
jne
popf
or
add
inc
scas
repnz
inc
xchg
or
sahf
fnsave
je
jecxz
jno
jbe
movs
dec
sti
aam
push
jp
xchg
jge
leave
push
ins
cmp
push
mov
idiv
arpl
mov
adc
sub
xchg
xor
popf
cmp
mov
les
and
mov
xchg
popf
jae
je
mov
push
dec
or
mov
push
test
fdivr
pushf
push
and
mov
mov
fmulp
mov
jb
xlat
push
inc
cwde
cmp
push
jb
fcmovb
cs
(bad)
das
loope
xchg
scas
rcr
inc
cmp
(bad)
test
(bad)
jo
xchg
add
mov
pop
retf
mov
loopne
cmp
cwde
or
jne
mov
int3
ret
jl
cmp
dec
(bad)
ret
and
xor
gs
cmp
dec
inc
sub
jnp
xchg
int
pop
or
cmp
(bad)
sbb
adc
cmp
add
fidiv
jae
fild
aaa
das
dec
scas
data16
cmp
push
loope
fwait
iret
sub
push
cmp
push
les
outs
xor
cmps
(bad)
sbb
and
ja
(bad)
push
and
cmps
sub
jl
pop
push
push
inc
es
outs
in
pextrw
fwait
mov
push
dec
sbb
sub
dec
pop
out
and
adc
and
loop
push
rol
lock
jg
rcl
and
les
mov
xor
sbb
clc
pop
ficom
mov
xchg
sub
ja
aad
test
and
repz
fwait
loopne
sub
and
movs
mov
push
inc
jle
inc
dec
adc
sub
test
out
ins
(bad)
cld
dec
adc
adc
jl
xchg
xchg
mov
ret
lds
inc
scas
lock
and
test
mov
sbb
inc
stos
inc
inc
imul
or
test
jmp
das
ins
aas
dec
push
ss
jb
cmp
xchg
mov
and
xor
mov
cmp
outs
mov
inc
jmp
inc
xchg
nop
and
stos
test
inc
aad
push
mov
dec
xchg
ins
sub
mov
sub
dec
clc
outs
sbb
ins
loopne
inc
test
adc
adc
ret
inc
(bad)
xchg
shr
sub
sub
sub
and
ins
ja
movs
cmp
sub
and
fistp
xlat
mov
ds
jb
mov
sub
test
shr
shl
sbb
scas
sbb
iret
sub
mov
cmp
daa
push
jle
jmp
pop
fbstp
mov
cdq
ret
mov
inc
ins
adc
pop
out
push
in
adc
pop
sub
mov
lahf
daa
dec
add
(bad)
cmp
scas
test
daa
cs
mov
xchg
add
retf
push
dec
adc
in
ds
dec
fwait
xchg
dec
ret
inc
out
pop
pop
jp
cs
cmp
ins
ins
fsubr
inc
hlt
sub
rcr
xor
ja
sbb
test
mov
out
cmp
push
mov
sub
mov
data16
es
sub
push
mov
popa
jns
arpl
add
jmp
hlt
aad
out
lahf
aas
add
mov
fucomi
fs
push
xchg
aaa
jecxz
push
das
adc
into
xchg
adc
shl
dec
(bad)
dec
stos
mul
push
out
fldenv
call
leave
sahf
jmp
mov
iret
mov
pop
fs
lock
mov
jns
jb
jmp
scas
pop
sbb
stos
xor
outs
push
cs
push
pop
mov
jmp
mov
xchg
pop
(bad)
push
out
loopne
in
cmps
add
pop
ficomp
xchg
movs
ins
dec
xchg
in
ds
ficom
fcomp
cmp
ja
ds
lock
loope
jne
adc
retf
lea
sub
fcomi
pop
xor
mov
lods
jg
inc
stos
xor
rcl
daa
cld
sahf
sbb
jne
inc
sar
ins
mov
adc
push
cmps
shr
jmp
iret
imul
mov
cmp
ja
xchg
stc
es
xlat
mov
and
js
sub
push
leave
std
pop
sub
xchg
imul
call
sbb
xlat
push
jmp
sbb
(bad)
js
sub
outs
or
and
xor
push
add
sbb
or
jge
mov
or
sub
ins
stos
aas
mov
out
retf
sahf
jne
adc
inc
cmp
movs
jns
cmps
loop
push
jno
pop
and
retf
imul
out
fs
adc
clc
mov
enter
sub
push
xchg
ins
lds
retf
sub
mov
xor
test
mov
test
jmp
pop
stos
jmp
hlt
sub
jnp
sub
out
mov
pop
test
iret
lods
sbb
outs
pop
mov
out
dec
add
cmc
xchg
xor
and
sbb
imul
mov
(bad)
dec
mov
in
int3
pop
inc
clc
in
sahf
inc
retf
or
dec
or
data16
sbb
xchg
fsubr
outs
cmp
push
repnz
sub
lea
cs
mov
xchg
push
dec
out
dec
fwait
jl
in
dec
dec
jns
push
jge
ss
(bad)
into
frstor
mov
cwde
test
push
cmps
dec
pop
cli
mov
cmp
add
jl
push
fistp
dec
mov
fimul
call
inc
xchg
xchg
lock
pop
xchg
cwde
pop
repnz
sti
pusha
sub
push
cmps
loop
repz
pop
jbe
jnp
imul
sub
mov
test
mov
aaa
dec
call
movs
xor
fsub
retf
mov
sub
loop
add
add
dec
xchg
inc
xor
or
cmps
add
iret
sbb
mov
sub
xlat
cli
and
adc
(bad)
in
jnp
xlat
in
jg
std
iret
dec
(bad)
repz
cld
cmp
jle
lahf
lahf
repz
dec
push
xchg
ds
out
retf
out
jecxz
mul
repz
xlat
(bad)
iret
imul
jns
iret
iret
cmc
stc
mov
jns
stc
cld
jnp
jl
idiv
repz
out
cmp
cmc
fcomp
(bad)
jl
repz
mov
ins
jl
cmps
loop
push
ds
cld
(bad)
clc
mov
clc
pushf
out
jnp
out
ja
xbegin
push
ds
fcomip
jg
(bad)
jnp
sti
out
mov
setle
cmc
stc
cld
(bad)
stc
loope
pop
lahf
iret
cmp
out
retf
lahf
iret
cmp
jle
clc
fild
ret
cli
scas
out
cmp
out
(bad)
scas
pop
sar
jg
clc
sahf
mov
jge
lods
es
sub
sahf
mov
fbld
xlat
sbb
add
inc
fcomp
jne
lahf
imul
and
iret
cld
mov
jnp
loop
inc
lods
iret
neg
ds
mov
pushf
cmps
lock
pushf
out
jmp
out
xchg
in
clc
pop
iret
icebp
stc
leave
clc
cs
(bad)
jns
pop
mov
daa
loopne
jmp
sti
jge
or
fdivr
adc
(bad)
lahf
jns
out
push
lods
loope
xor
sahf
repz
jl
iret
mul
jge
jle
cmp
(bad)
(bad)
movs
loopne
imul
dec
scas
push
aad
sti
out
xchg
in
lahf
jg
sbb
mov
out
call
fmul
adc
add
iret
fild
mov
sub
sub
pop
jp
pop
icebp
repz
inc
cdq
mov
push
dec
in
shl
in
jecxz
icebp
mov
out
pop
mov
inc
addr16
jnp
mov
test
push
data16
imul
jnp
jns
lock
mov
mov
mov
cli
out
pop
mov
retf
mov
fwait
rcl
ss
outs
xchg
jmp
sahf
jmp
aas
adc
xchg
sbb
jb
xor
loop
jg
mov
pop
mov
fnstsw
push
std
out
aad
mov
jno
dec
fmul
mov
xor
dec
cmps
mov
cmp
int3
dec
test
movs
sub
fdiv
int3
retf
or
jecxz
jno
add
xor
lods
aas
cmp
int3
xlat
push
pop
repz
sub
fidiv
fisttp
push
and
xor
test
lds
mov
loope
outs
in
xchg
xor
into
or
sbb
loop
sahf
jge
sti
mov
fld
sbb
push
outs
pushf
fwait
push
fistp
mov
es
(bad)
cmp
jmp
(bad)
arpl
pop
cmp
xchg
adc
aam
inc
nop
mov
or
cmp
inc
ret
repz
adc
pop
lds
iret
std
inc
call
mov
ret
xchg
dec
ins
jbe
ins
fist
ret
push
jge
(bad)
xchg
ins
jmp
test
sbb
jno
paddsb
mov
dec
lock
or
pop
jl
and
leave
fidiv
sbb
adc
jns
clc
pop
lock
mov
enter
js
xchg
cmp
fs
jg
cwde
jg
push
mov
sahf
or
add
xor
and
pop
jmp
fwait
jl
outs
lock
ror
xor
xor
mov
dec
jmp
ins
jmp
out
xchg
dec
add
mov
mov
xchg
cmp
mov
dec
jnp
and
mov
inc
jns
push
xor
fsub
add
das
jecxz
cmp
and
mov
out
add
inc
pushf
aad
ds
in
sub
fwait
xor
push
pop
adc
xor
pop
cld
in
add
push
rol
(bad)
pushf
mov
shl
(bad)
out
les
cli
outs
(bad)
push
dec
add
iret
mov
sbb
in
add
stos
or
mov
sbb
loopne
or
imul
pushf
fdiv
add
jmp
push
mov
ins
retf
test
std
nop
jmp
jnp
sub
cmp
adc
pop
adc
imul
mov
jmp
push
mov
adc
jmp
aaa
repz
jnp
sar
cdq
ins
or
rol
xlat
cdq
adc
and
dec
sbb
cmp
sets
adc
mov
int3
fnstenv
mov
ins
pop
jno
(bad)
sahf
cmp
aam
mov
sahf
out
mov
mov
jge
mov
stos
cld
pusha
(bad)
jne
cmp
ret
and
jecxz
cmc
or
dec
lds
test
pop
cmps
ins
outs
lds
sti
loope
cmp
into
adc
xchg
pop
stc
std
test
fwait
pop
pop
inc
jle
xor
test
dec
in
stc
cs
jne
sahf
mov
ret
(bad)
push
icebp
jmp
jge
jno
pop
sbb
cvttps2pi
xchg
jmp
sbb
data16
sbb
xchg
nop
dec
push
in
push
xor
jecxz
mov
xchg
stos
cmp
push
cmp
or
cli
ret
mov
repz
pop
jmp
ret
ds
pop
lahf
pop
fisttp
call
mov
cmps
(bad)
and
adc
sbb
pop
bound
pop
xchg
nop
or
mov
ins
fdiv
imul
mov
inc
js
cdq
jnp
mov
outs
popa
add
mov
in
out
pop
jl
mov
mov
push
outs
lock
hlt
xchg
inc
sbb
dec
ret
enter
gs
bound
imul
repz
retf
clc
test
outs
or
and
push
push
imul
push
push
and
dec
pop
lods
loopne
mov
xor
sub
jno
in
mov
mov
int3
dec
fmul
test
enter
(bad)
xchg
retf
movs
jecxz
out
loop
movs
or
sahf
(bad)
pop
push
jle
test
gs
daa
into
out
push
dec
inc
mov
repnz
xchg
aaa
into
push
mov
es
push
sbb
cld
push
mov
inc
es
test
pop
and
push
add
xchg
movs
loop
neg
push
into
dec
ins
out
push
scas
repz
out
pop
fcom
mov
xchg
and
(bad)
popf
icebp
in
push
int3
cmp
fmul
or
popa
arpl
or
cmc
data16
aas
push
mov
lock
loop
dec
(bad)
push
xchg
retf
ret
mov
mov
iret
imul
ja
pop
or
cs
xchg
mov
lods
jns
in
pop
jle
aad
or
xor
mov
cmp
adc
xor
mov
mov
dec
xor
(bad)
(bad)
pop
pop
inc
lds
arpl
jmp
int3
ja
cld
shr
in
and
loopne
mov
jbe
cwd
mov
sbb
imul
iret
dec
cmps
js
iret
mov
sbb
pop
cs
adc
push
in
sbb
cmp
rol
jnp
mov
push
lods
sti
pop
in
pop
repnz
(bad)
adc
cdq
repnz
push
cwde
and
adc
sub
push
outs
mov
clc
lds
jp
pop
cmpps
ss
pop
jmp
les
ins
inc
adc
mov
jge
ret
push
or
imul
fadd
cmp
add
cmp
jp
add
pop
inc
cmp
(bad)
jnp
dec
jns
cwde
sbb
jmp
icebp
les
scas
cmp
mov
sbb
cmps
push
pop
ins
xchg
sub
dec
xchg
adc
sub
mov
mov
inc
pop
xchg
test
or
xchg
mov
call
jnp
jp
adc
out
test
inc
mov
cmps
xchg
js
mov
mov
arpl
mov
xchg
inc
out
es
adc
push
push
and
jne
inc
push
mov
je
xchg
inc
es
stos
hlt
adc
mov
mov
and
sub
(bad)
aam
adc
cdq
out
or
cmps
sub
mov
int3
jge
inc
sub
adc
bound
pop
dec
rcl
mov
cmp
sub
mov
push
mov
cli
jae
test
mov
lods
pop
adc
dec
out
dec
js
dec
and
mov
or
fwait
or
test
test
pop
xlat
add
test
xor
jge
div
mov
sar
clc
fmul
dec
sbb
push
adc
and
mov
adc
xchg
fadd
shr
push
movs
sbb
sti
popa
push
fyl2x
(bad)
ja
mov
sbb
in
mov
sub
lods
cmc
clc
dec
mov
push
jne
and
jbe
rcr
dec
gs
shl
in
inc
inc
xor
cmp
push
push
dec
mov
stos
int3
pop
pop
mov
(bad)
jo
xor
dec
lock
test
adc
sub
sti
adc
in
call
ret
fst
jge
sub
adc
adc
daa
mov
push
mov
adc
sub
add
push
and
xchg
push
mov
or
and
adc
and
jbe
push
fcom
popf
mov
addr16
jo
sbb
dec
mov
mov
(bad)
mov
inc
mov
add
dec
imul
cmc
cmc
adc
adc
mov
push
xchg
mov
ror
push
mov
inc
shl
mov
inc
outs
inc
jno
retf
stos
push
gs
test
mov
jle
inc
jmp
addr16
push
mov
in
popf
jno
mov
sbb
fsub
push
add
fstp
push
pop
xchg
lock
adc
mov
cs
xor
test
sub
push
fst
(bad)
lock
xchg
rol
cdq
push
adc
test
out
jns
jp
mov
dec
jb
push
ss
in
out
mov
adc
ret
sbb
cs
out
mov
jmp
pop
je
dec
mov
or
ins
adc
fistp
add
jl
mov
adc
sahf
mov
pop
fwait
into
or
cmp
in
cdq
dec
push
pop
pusha
retf
jl
iret
lds
iret
jg
jl
jo
das
fnstcw
call
sub
rol
sub
cdq
das
push
loopne
pop
jns
in
mov
(bad)
dec
sbb
add
fiadd
scas
mov
ss
sub
sub
or
sbb
outs
push
lds
cmp
sbb
mov
ss
(bad)
fdiv
lds
mov
test
xor
pop
xchg
sub
call
mov
jl
mov
test
fdivr
sub
rcl
mov
push
movs
dec
aas
dec
xchg
cdq
fmul
sub
movs
sub
into
enter
in
xchg
jl
je
cs
fisub
aas
push
call
ins
jge
dec
bound
pop
and
iret
sbb
outs
lds
adc
movs
or
push
stos
inc
ja
test
fdivp
test
ja
out
push
jbe
push
fisttp
pop
fisub
mov
pop
xchg
jbe
dec
jmp
mov
iret
mov
dec
into
mov
loope
movs
inc
xor
jmp
push
jp
gs
test
scas
or
adc
repz
cmp
out
lods
pop
nop
mov
sub
hlt
lods
jb
xchg
mov
mov
out
out
push
in
cmp
in
je
inc
out
nop
pop
dec
cmp
cmp
dec
cmp
in
cmp
mov
jmp
rcr
daa
popf
xor
adc
sub
repnz
pop
inc
lds
imul
cmp
pop
cmp
jge
shr
pop
and
cmps
sub
mov
hlt
jge
mov
mov
dec
mov
jno
es
scas
jne
ret
jne
and
popf
ret
into
xchg
xor
aaa
or
dec
mov
pop
dec
neg
test
ds
dec
mov
mov
neg
pop
loop
inc
lahf
xchg
inc
out
jl
inc
sbb
mov
int3
cmp
dec
mov
mov
fistp
sub
repnz
xchg
fisttp
inc
push
mov
and
jle
bnd
in
push
fsub
sub
cmp
iret
mov
dec
xchg
fnstenv
mov
pushf
pusha
dec
inc
inc
mov
and
mov
mov
and
push
rcr
(bad)
out
pop
add
jo
inc
jnp
or
cmp
sub
iret
push
repnz
mov
test
inc
xor
ror
inc
movs
pop
sub
mov
(bad)
push
mov
pop
loope
xchg
xchg
and
xor
ins
test
loope
inc
mov
and
(bad)
out
sub
mov
adc
dec
cmp
mov
in
scas
jb
sub
push
push
stos
shl
or
movs
xchg
popa
clc
dec
cwde
das
mov
dec
jbe
loope
or
fwait
mov
sbb
iret
stos
xlat
(bad)
out
or
stos
xchg
or
jmp
sbb
inc
mov
sbb
daa
call
pop
adc
or
popf
mov
and
mov
ficomp
movs
out
bound
iret
mov
ret
aam
push
inc
shld
adc
test
sub
test
pop
sub
sub
xchg
rcr
sub
sbb
gs
stos
push
dec
pop
or
xchg
out
or
jbe
test
jmp
movs
and
add
pop
(bad)
pop
cld
ds
push
mov
leave
cmp
in
(bad)
bound
sub
mov
push
int3
pop
xchg
mov
xor
xchg
iret
retf
ss
push
xchg
cmp
nop
inc
jmp
out
sub
sub
test
push
call
test
push
add
mov
pop
adc
movs
sbb
movs
pushf
push
or
outs
shr
push
lock
std
mov
stos
movs
call
daa
(bad)
jnp
fbld
push
xchg
fild
sub
dec
pop
push
dec
retf
sub
push
xchg
xor
in
jmp
sub
(bad)
inc
xor
sub
push
test
movs
cli
sub
test
or
rcl
adc
mov
mov
xor
pop
dec
nop
das
cmp
adc
inc
(bad)
sahf
push
pop
les
and
jne
xchg
call
and
jns
mov
push
mov
inc
push
and
sbb
ds
in
das
push
movs
xlat
mov
aam
dec
mov
in
jbe
frstor
mov
sub
push
xlat
stc
int3
or
mov
cmc
push
stc
lods
dec
sub
test
lahf
popf
cmc
lods
outs
push
out
mov
pop
cmp
test
jp
mov
sub
xor
mov
test
dec
push
adc
push
add
call
sub
jne
fisubr
loope
or
mov
ins
cmp
ins
dec
adc
jbe
push
cmc
scas
clc
scas
mov
push
add
sbb
pop
jns
jbe
mov
push
mov
or
mov
not
dec
or
dec
inc
ja
xchg
sbb
pop
mov
inc
shl
mov
add
jb
push
jbe
fcmove
cmp
fcmove
lods
pop
je
out
mov
out
xchg
jo
repnz
scas
mov
stos
mov
xchg
neg
push
movs
or
rol
fnstcw
es
inc
and
jl
aad
pop
clc
shl
outs
out
mov
jno
movs
bnd
and
mov
xor
std
daa
jle
sub
pop
push
or
ins
adc
aad
pop
sub
and
fistp
cmp
jbe
int
mov
sub
mov
sahf
pop
push
and
in
dec
push
and
sar
mov
pop
jae
cmps
push
hlt
adc
dec
lods
mov
push
cmp
cmc
sar
sub
iret
imul
push
mov
ss
mov
les
xor
inc
pop
xchg
mov
or
pushf
jl
idiv
mov
xlat
sahf
xchg
jg
stc
jge
ins
mov
cmc
es
push
imul
retf
into
sbb
out
push
sub
sbb
retf
push
fisub
aaa
adc
es
movs
fs
jle
pusha
xor
lea
mov
test
xchg
test
or
xchg
fwait
jnp
ja
movs
mov
mov
sub
out
sahf
mov
inc
mov
jno
cli
push
push
and
and
mov
cmps
dec
mov
leave
aaa
sub
outs
or
push
xchg
jb
sar
sbb
sub
std
sub
push
inc
loopne
pop
(bad)
in
cmp
arpl
retf
jmp
int3
test
nop
lods
push
cmp
lods
dec
arpl
enter
cmp
cli
push
and
sar
je
popf
push
sbb
and
push
jg
mov
fldenv
arpl
lds
push
mov
call
xchg
or
sub
cwde
aam
pop
hlt
icebp
mov
js
fisttp
pop
leave
push
jmp
jge
cmp
xchg
fdiv
sub
jmp
ret
push
pop
and
pop
mov
sub
scas
gs
mov
push
in
cmp
mov
jnp
retf
es
mov
dec
inc
popa
addr16
pop
cwde
sub
push
stc
fist
xor
cmps
push
je
cs
retf
stos
pop
or
adc
adc
call
stos
mov
xchg
xchg
jo
cmps
movs
pop
inc
jns
push
in
fld
enter
xor
pop
xlat
or
icebp
test
adc
bt
dec
mov
push
test
jbe
retf
in
dec
cmp
cmp
push
les
into
sub
push
sbb
cs
jmp
cli
jg
(bad)
imul
mov
in
scas
jo
in
(bad)
sub
push
fadd
and
mov
mov
cdq
in
jnp
lds
clc
call
push
inc
fisubr
inc
stos
fwait
iret
fbld
sbb
out
push
(bad)
pop
jmp
cmp
fs
fild
sub
fidivr
jl
pop
loope
push
test
sbb
or
push
in
cs
lds
mov
popf
movs
mov
inc
and
sub
pusha
(bad)
pop
jnp
fisttp
pop
pop
or
(bad)
sub
add
ins
push
fidiv
frstor
inc
sub
adc
lahf
jmp
xchg
mov
mov
stos
jnp
fild
fs
out
cmp
pop
push
push
in
fstp
test
and
mov
lea
adc
call
push
stc
cmp
pop
mov
push
shl
icebp
addr16
jmp
cmp
cmp
jne
mov
push
xlat
sub
xchg
(bad)
stos
adc
loope
jne
iret
cmp
push
xor
pop
mov
je
sub
sbb
xor
popf
xchg
(bad)
je
push
push
lods
jle
(bad)
fld
call
mov
or
adc
dec
lock
and
mov
mov
jbe
call
and
sub
cmp
mov
push
mov
jo
inc
sbb
out
sub
rcl
sub
jecxz
nop
push
aad
pop
in
and
ret
cdq
or
pop
mov
outs
dec
and
pop
fstp
jnp
and
in
and
mov
sub
mov
xor
adc
dec
fstp
jno
sub
jmp
mov
dec
shr
or
xchg
in
frstor
sub
movs
cmp
or
aam
cs
(bad)
mov
movs
inc
push
inc
fstp
or
imul
mov
adc
sub
fnsave
pusha
fdivr
mul
inc
mov
add
sbb
loope
fcomp
shl
pop
test
sbb
daa
push
cmp
sbb
push
xchg
push
(bad)
and
fistp
cmp
mov
into
mov
xchg
lahf
dec
lahf
int
outs
in
hlt
mov
into
push
punpckhwd
mov
mov
sub
and
jl
js
dec
cmp
push
test
imul
push
mov
mov
outs
pop
jle
or
push
icebp
inc
and
(bad)
in
cmp
mov
sahf
movs
mov
ss
in
mov
sub
mov
inc
fwait
retf
mov
sahf
cpuid
les
out
push
out
push
gs
jae
aam
jge
ja
sbb
adc
mov
jle
lea
or
mov
call
or
sbb
mov
inc
jno
scas
xchg
push
inc
mov
bound
pushf
mov
pop
popa
aaa
inc
imul
cmps
and
push
xor
cs
ja
stos
and
dec
pop
movs
ret
pop
fld
mov
xchg
test
pop
mov
push
fmul
rcl
pop
dec
mov
fidivr
es
fild
cli
int
mov
pop
pop
pop
test
inc
xor
ja
lods
mov
jl
stos
movs
jb
out
inc
fcomp
sbb
and
adc
xchg
retf
in
fnstenv
sar
sub
std
(bad)
mov
sub
push
cmp
fdivr
xor
test
jmp
loopne
dec
movs
jnp
fmul
jecxz
mov
rol
xchg
push
or
fstp
mov
jmp
out
movs
cld
sbb
aad
xor
pop
hlt
mov
mul
gs
cld
xor
mov
outs
jbe
jne
out
setb
inc
mov
test
test
adc
dec
cmp
pop
mov
in
fnstsw
push
cmps
loop
ficom
push
sbb
mov
lods
jl
sub
and
jb
cmps
adc
cmp
mov
into
repz
fs
hlt
movs
pop
mov
mov
scas
pop
(bad)
icebp
xchg
sub
std
jne
addr16
sub
xchg
lahf
inc
leave
sahf
sub
dec
popf
out
fdivr
and
fldenv
loop
ret
rcl
stc
pusha
ss
test
push
adc
out
loope
add
pusha
outs
mov
ja
sub
dec
mov
scas
ins
out
mov
popa
das
dec
cli
inc
sbb
pop
inc
stc
sbb
fucom
adc
sub
addr16
and
cmps
jb
cmp
das
xchg
std
cmps
loop
shl
repz
cdq
mov
dec
fadd
and
jp
push
or
cs
mov
test
push
mov
mov
cs
lods
outs
es
pmulhw
xchg
test
push
sar
push
jbe
retf
cmc
pop
scas
or
pop
repnz
fmul
stos
and
stos
add
(bad)
out
and
xor
aas
cmp
adc
in
dec
iret
aad
adc
cmp
sbb
xchg
and
adc
movs
sbb
enter
stos
stos
jecxz
test
das
cld
inc
xchg
xor
mov
adc
iret
shr
jle
and
jmp
les
adc
inc
jge
dec
popf
mov
enter
sbb
jo
ins
jbe
inc
jne
push
out
cmp
sub
dec
sar
push
mov
lods
mov
(bad)
imul
push
adc
sar
push
inc
not
(bad)
jns
adc
stos
ins
mov
mov
or
xor
sbb
sub
out
fstp
inc
adc
mov
jl
mov
data16
imul
sub
addr16
pop
ret
hlt
loopne
je
xor
jp
mov
inc
cmp
adc
scas
inc
xor
(bad)
jmp
retf
fnstenv
push
sub
retf
cmp
out
inc
xor
xor
popf
sub
int3
je
dec
adc
mov
push
jnp
jmp
pop
push
add
es
and
xchg
leave
dec
mov
retf
lods
mov
movs
bound
pop
xchg
sub
lods
and
mov
fs
in
fld
out
fcmovu
lds
dec
mov
pop
imul
gs
aam
scas
or
sahf
mov
fnstcw
adc
xor
sub
ret
xchg
push
dec
je
push
out
loop
cmp
div
pop
retf
iret
xchg
stos
xor
in
mov
shr
jns
pushf
inc
cwde
mov
lods
lds
inc
jmp
cmp
xor
mov
test
ins
jnp
mov
push
push
fidiv
push
scas
or
popa
xchg
sub
adc
enter
cdq
mov
arpl
jo
push
cmp
and
shl
stos
hlt
jb
mov
(bad)
es
xor
cld
sub
fbld
or
or
xor
xor
outs
test
xchg
xchg
cli
lock
mov
jge
mov
xchg
sub
mov
call
xor
popf
pushf
cmc
jns
pop
adc
movs
into
movs
inc
fidivr
mov
adc
imul
pop
(bad)
pusha
cmp
jbe
jne
mov
jo
inc
xchg
add
pusha
(bad)
mov
shr
pop
adc
ins
push
mov
push
mov
and
es
mov
shl
test
iret
movs
mov
(bad)
out
xchg
dec
push
sub
pop
xchg
test
ds
pop
inc
sbb
or
sbb
cmp
jmp
mov
sahf
jnp
xchg
jae
aas
mov
call
push
ficomp
sub
pop
sahf
mov
or
pop
inc
cmp
in
inc
jne
and
in
outs
test
mov
xchg
cs
add
dec
or
mov
sub
sub
dec
pusha
dec
adc
push
out
sub
jno
sbb
xchg
lahf
mov
xchg
push
sbb
adc
addr16
repnz
cmp
loope
cmp
aam
pop
in
mov
mov
call
cmps
in
mov
aas
sub
jl
call
cmp
sbb
ja
popa
cmps
xor
or
cmp
mov
xchg
push
dec
popf
push
movs
mov
hlt
pop
jbe
push
mov
inc
shr
xchg
inc
jmp
inc
lods
ss
xchg
shrd
(bad)
je
push
sar
fist
pusha
mov
inc
fistp
inc
jge
xchg
mov
scas
arpl
test
in
sub
cli
in
sub
fisttp
push
fwait
lahf
cmp
clc
sbb
or
xchg
xchg
mov
or
adc
scas
ret
cld
jbe
sahf
jge
daa
call
ret
and
call
mov
fistp
and
in
aam
xor
mov
mov
sbb
lahf
pop
mov
dec
scas
in
ffree
scas
dec
push
ds
pushf
mov
in
sti
stos
retf
and
inc
fcmovu
popf
push
xchg
retf
into
in
cmp
cmps
push
or
retf
mov
in
pop
mov
clc
dec
cmp
jbe
sub
(bad)
inc
inc
sub
aaa
retf
cmps
test
gs
dec
arpl
push
mov
mov
push
psubusw
adc
mov
cmp
xchg
mov
mov
leave
or
pop
repnz
inc
fcomp
sub
sti
ins
push
iret
fadd
(bad)
xor
inc
fidivr
mov
cmp
cs
dec
adc
ja
cs
or
nop
movs
sbb
jl
push
movs
(bad)
fnstcw
xchg
jecxz
ror
sbb
pop
dec
mov
call
mov
jo
adc
stos
(bad)
add
dec
or
mov
fisub
cmp
mov
adc
dec
cmp
cwde
mov
sbb
test
and
dec
mov
adc
std
adc
inc
xor
gs
push
push
jmp
pop
in
xchg
iret
push
(bad)
cmp
pop
push
cdq
mov
test
aad
dec
aad
cmp
cmp
mov
gs
out
(bad)
jae
pushf
xchg
push
icebp
frstor
or
pop
shl
cmps
jb
es
jo
dec
out
xchg
(bad)
cmps
lods
popa
cs
scas
cmp
mov
mov
inc
daa
out
out
jle
hlt
jp
and
(bad)
adc
clc
stos
dec
push
inc
mov
shr
pop
and
aam
sti
mov
fs
movs
mov
pop
dec
les
(bad)
out
daa
ins
ret
mov
pop
sti
and
in
ret
jge
sub
push
push
aas
dec
fimul
pop
xchg
sub
mov
lea
cmp
and
cwde
(bad)
test
push
or
loop
data16
mov
cmp
lock
inc
cs
gs
or
pop
push
xchg
push
pop
jb
bound
pop
push
fnstenv
xor
cmp
rcl
inc
inc
shl
adc
push
push
outs
jg
ror
enter
cmp
imul
int3
inc
ret
sti
popf
and
out
arpl
cmp
sub
mov
and
jne
sbb
inc
inc
mov
push
xchg
adc
push
dec
xchg
mov
mov
mov
ror
fs
es
pop
push
ret
ret
repnz
mov
cmp
push
test
sbb
xchg
cmp
jl
sub
cmps
sti
sti
sub
push
xchg
iret
push
stos
dec
test
xchg
fnstcw
js
test
mov
mov
mov
call
or
xchg
inc
(bad)
comiss
ficomp
movs
and
cs
jb
push
out
push
dec
jae
cdq
lock
movs
in
fst
es
js
mov
fucomi
add
inc
pop
push
frstor
scas
(bad)
imul
and
ror
jecxz
mov
retf
inc
jb
pop
cmp
hlt
mov
and
scas
arpl
in
lahf
jmp
dec
add
fldenv
(bad)
jmp
(bad)
jns
adc
pop
scas
or
xchg
dec
(bad)
adc
xor
les
mov
js
out
and
xor
ret
pop
iret
ds
lds
gs
mov
mov
pop
xchg
pop
not
call
pop
mov
fadd
inc
mov
sub
add
pop
xchg
fidiv
icebp
pop
ror
popa
fisub
icebp
lods
jae
or
jp
fucomip
cmp
fsubr
outs
dec
xor
or
mov
cs
pop
mov
mov
sub
stos
loop
call
adc
jns
mov
or
dec
repnz
mov
outs
enter
popf
sub
sbb
rol
test
adc
xchg
bound
(bad)
std
mov
and
cmp
fwait
gs
jnp
jno
push
mov
mov
aam
mov
fild
jmp
push
xchg
and
movs
clc
xor
xchg
mov
xor
ret
pusha
std
and
mov
xchg
sahf
cmp
popa
push
dec
adc
push
adc
xor
sub
ja
loope
in
push
sub
mov
js
stc
cli
and
jno
mov
outs
je
sar
out
sub
popf
iret
dec
out
fistp
cmps
jne
mov
and
mov
dec
adc
mov
mov
sub
xchg
test
fmul
loope
push
push
stc
out
adc
in
mov
cmp
adc
ret
fcom
int
xchg
cld
clc
lea
retf
fs
jnp
push
(bad)
xchg
movs
fidivr
inc
test
lods
or
or
call
call
mov
and
mov
mov
pop
aas
ret
stc
imul
cs
push
fstp
sbb
dec
jno
imul
mov
dec
fstp
ret
cmp
push
jno
add
sub
push
stos
test
dec
stos
les
mov
fcom
div
out
ins
xchg
movs
adc
addr16
es
pop
in
mov
rol
daa
pop
adc
rcl
pop
xchg
rcr
inc
in
in
pop
pusha
mov
jne
pusha
inc
aam
push
mov
bound
xchg
in
bound
das
jbe
lods
retf
jb
sahf
sti
mov
lods
pop
adc
les
out
not
out
inc
xchg
mov
adc
and
adc
and
xlat
cs
bound
cdq
lahf
xor
shl
mov
mov
cs
stc
das
cmp
mov
inc
sub
stos
retf
rcr
or
test
xchg
push
add
jg
lock
sub
shr
jecxz
and
fs
in
ja
sub
retf
movs
mov
dec
in
sbb
inc
lahf
into
pop
xchg
pusha
xchg
hlt
hlt
pop
rcl
or
adc
ret
or
mov
out
jae
(bad)
mov
lods
sbb
(bad)
arpl
in
xor
dec
retf
imul
jne
mov
pop
push
popa
sahf
movs
push
push
into
lds
push
and
mov
xchg
pop
xchg
call
mov
jmp
(bad)
ret
das
cmp
mov
sbb
cmp
mov
in
mov
repz
mov
repnz
mov
inc
out
push
inc
in
scas
inc
pop
cmc
sub
mov
test
sbb
xor
adc
stos
mov
icebp
inc
mov
jbe
jmp
cmp
add
and
shl
cld
(bad)
popf
sbb
lods
sbb
mov
dec
xor
mov
pop
pop
aam
retf
jo
or
push
(bad)
aad
dec
push
leave
test
sbb
jb
mov
inc
retf
and
push
loope
xchg
push
push
aad
fwait
mov
mov
jne
jnp
scas
popa
xlat
dec
push
xchg
and
call
mov
movs
cwde
add
bswap
loop
mov
mov
xor
cs
fist
sub
rcr
(bad)
stc
aaa
sub
sub
(bad)
cmp
loopne
je
push
in
cli
and
sbb
cmp
push
and
mov
adc
ffreep
mov
mov
xchg
fadd
popa
sti
popf
mov
mov
push
push
adc
jb
fdivr
ret
les
cmp
push
je
movs
mov
jecxz
stos
call
es
lods
jo
popa
mov
fs
sub
push
xchg
inc
test
arpl
xchg
stc
mov
or
mul
data16
ins
mov
fstp
(bad)
xor
movs
retf
inc
inc
adc
sbb
movs
ficom
sti
clc
mov
sub
(bad)
jae
mov
lods
mov
mov
and
sub
lds
pop
cli
imul
pop
popa
ret
movs
push
mov
adc
(bad)
ins
ss
stos
or
mov
pop
push
mov
loop
push
fst
push
(bad)
push
jle
int3
ret
and
aam
clc
out
inc
pop
fidiv
popa
(bad)
idiv
xor
xchg
mov
or
or
cmps
add
in
pop
fstp
out
into
or
jnp
sbb
arpl
and
cs
xlat
call
fs
outs
ficom
sbb
mov
push
test
(bad)
or
cmp
mov
movs
iret
dec
or
pop
popa
sbb
test
(bad)
imul
cmp
mov
lods
push
repnz
mov
or
stc
cmp
cmp
pop
movs
in
mov
jmp
sbb
add
mov
ins
mov
pop
fbld
shr
pop
fidivr
mov
int3
jnp
in
inc
imul
mov
lods
fadd
stos
pop
mov
gs
inc
dec
into
mov
les
ror
jle
inc
mov
xor
ret
jno
fistp
xchg
mov
xchg
push
test
int
mov
and
out
call
inc
gs
movs
in
mov
popf
test
retf
inc
(bad)
jmp
pop
pop
mov
loopne
dec
xor
jecxz
fisttp
fstp
push
nop
fcmovbe
inc
int
mov
mov
xchg
mov
int3
outs
lods
fwait
jmp
mov
dec
cmp
push
fwait
mov
mov
lds
(bad)
nop
fistp
or
cdq
add
imul
hlt
ret
sub
iret
mov
mov
mov
dec
mov
xor
scas
sbb
or
and
push
add
out
in
jo
scas
(bad)
(bad)
imul
pop
fcmovnu
ret
popa
sbb
mov
adc
add
jle
pop
test
and
push
jb
mov
(bad)
mov
mov
shl
call
stos
mov
mov
shl
fs
fwait
mov
mov
loopne
(bad)
out
test
sbb
or
sbb
dec
adc
out
or
sbb
jns
pop
push
push
in
ficomp
xchg
in
movs
outs
add
in
scas
adc
ja
and
xchg
sahf
or
or
sti
in
stos
inc
cmc
repnz
frstor
movs
mov
xchg
jbe
xchg
movs
mov
imul
fist
fwait
push
loope
sahf
pop
dec
mov
in
(bad)
ss
xchg
ret
inc
lea
jmp
sub
adc
in
add
pusha
push
retf
xor
ret
dec
test
movs
imul
jo
xchg
xchg
add
adc
dec
outs
std
out
mov
test
pop
jb
adc
mov
fldcw
js
aam
retf
call
and
sbb
in
mov
xchg
and
dec
sqrtps
fdivr
enter
neg
inc
addr16
pop
out
loopne
mov
and
jbe
pusha
hlt
cs
jb
in
adc
jg
ret
bound
add
cwde
cmp
add
jne
sub
fstp
adc
js
ins
mov
in
(bad)
movs
loopne
in
fnsave
cdq
push
mov
ja
hlt
and
sub
push
in
js
mov
int
test
imul
adc
mov
fild
push
fcom
retf
nop
(bad)
je
xchg
mov
mov
fcomp
leave
out
inc
loope
inc
push
mov
dec
mov
das
mov
fcom
addr16
lock
add
push
in
pop
mov
jnp
iret
mov
in
hlt
ins
mov
inc
jno
xchg
mov
(bad)
loope
jno
ja
test
(bad)
cmp
xchg
push
jle
jg
movs
lods
or
jle
(bad)
pop
ja
pop
(bad)
cld
xchg
cmp
adc
loop
pop
push
jnp
ret
jo
dec
hlt
lods
cmps
cmp
sbb
jns
retf
(bad)
mov
repnz
pop
push
pushf
adc
movs
pop
cmp
das
jp
pop
adc
ja
stos
xchg
dec
js
je
sub
ret
scas
cdq
cmp
in
shl
fstp
sub
jmp
pop
test
adc
std
push
pop
out
xchg
neg
(bad)
jo
jne
ins
mov
fs
stos
repz
xchg
rcr
arpl
fdiv
mov
jo
cmc
sahf
xchg
sahf
and
mov
popf
adc
mov
push
lock
imul
push
xchg
ins
push
jl
and
push
int
lahf
jg
sbb
arpl
push
aaa
inc
and
dec
aaa
cmp
pop
movs
cmp
cmp
lds
push
repnz
push
xor
stos
call
int
mov
sbb
(bad)
push
or
xor
mov
loop
xchg
inc
div
test
out
mov
retf
movs
popf
dec
gs
ret
shr
cmc
push
shr
jnp
inc
xor
aam
jge
adc
or
adc
cmp
int
pusha
pushf
cs
popa
xchg
dec
or
fsub
mov
fldenv
mov
or
sub
mov
ja
add
add
ins
ret
mov
js
mov
outs
test
push
cs
leave
pop
sub
sahf
in
fucom
loop
fnstenv
xchg
mov
mov
adc
mov
mov
and
cmp
push
daa
ja
outs
push
imul
and
scas
nop
and
mov
idiv
pop
fwait
ss
(bad)
call
cmc
out
mov
outs
out
into
and
xchg
inc
add
shl
push
jnp
inc
xchg
mov
push
xor
ins
and
cmp
rcl
dec
fnstcw
push
les
test
js
jne
fisub
fwait
inc
sbb
pop
rol
fsub
lods
mov
ins
and
fstp
push
std
repnz
adc
in
and
mov
call
push
cmps
xor
retf
mov
xor
loope
nop
xchg
movs
dec
stos
aam
neg
and
adc
cdq
jo
pop
clc
rol
mov
adc
cmp
add
mov
popf
mov
pop
cmp
(bad)
pop
mov
push
mov
div
xchg
lahf
jne
in
hlt
mov
cwde
mov
push
jno
inc
sub
mov
xchg
add
adc
hlt
or
out
add
fadd
les
cmp
jo
jbe
add
daa
and
movs
es
scas
cmps
push
dec
push
gs
mov
add
call
mov
cdq
retf
popf
add
inc
and
jae
inc
cwde
sub
pop
sar
adc
iret
idiv
popa
cld
out
(bad)
cld
sti
cld
out
jge
jg
dec
lahf
cld
stc
idiv
test
cld
and
mov
(bad)
sti
cld
mov
mov
stc
mov
loop
iret
out
repz
(bad)
std
sti
icebp
stc
fsub
repz
addr16
aas
ds
cdq
lahf
lahf
hlt
stc
mov
jl
(bad)
sti
(bad)
out
test
inc
fdivr
cld
out
sti
cmp
ja
fdivrp
pop
mov
fcomip
fidiv
ja
cmp
jl
(bad)
xor
aas
out
out
lahf
mov
scas
outs
clc
scas
out
sbb
jg
cmp
(bad)
sti
cli
cld
ins
(bad)
mov
mov
out
outs
mov
jecxz
jl
(bad)
mov
pop
out
hlt
stc
int3
or
sar
cmps
or
repnz
cmp
std
scas
xor
cmc
mov
mov
and
dec
ret
js
fistp
jmp
lock
jle
lahf
idiv
iret
out
sti
out
mov
aas
aas
stc
repz
out
cmp
cmp
fmul
cmp
mov
mov
mov
jge
ja
mov
mov
daa
add
daa
sahf
push
shr
ins
(bad)
jno
repz
ja
int
mov
fbstp
fadd
push
xlat
clc
pop
mov
jmp
je
cs
test
cmp
jp
les
pusha
or
out
(bad)
jne
fbld
cmp
out
std
dec
jge
test
lods
js
pop
into
fld
pop
jnp
jge
fmul
jle
(bad)
mov
scas
rcl
rcl
lahf
mov
pop
test
mov
call
(bad)
adc
fbstp
inc
clc
sub
adc
mov
xlat
les
div
or
mov
sbb
jmp
icebp
or
jl
sbb
(bad)
scas
pop
mov
out
outs
pop
fwait
xchg
shl
xlat
fdiv
(bad)
sti
dec
fsubr
ret
sbb
mov
in
shl
fdivr
aas
stos
and
imul
in
add
cld
retf
lea
mov
scas
and
stos
rol
jl
es
xlat
das
cmp
in
ins
mov
or
push
mov
cld
jg
mov
(bad)
fistp
pop
pop
xchg
mov
shl
popa
cmp
repz
push
fdivr
imul
rcr
js
adc
cmc
call
adc
and
les
js
sbb
inc
inc
cmp
clc
jbe
fnstenv
or
aaa
loope
pop
sahf
pop
arpl
xchg
mov
push
mov
aaa
lds
aaa
test
mov
inc
jge
cmp
ss
or
popf
xchg
cmp
popa
sbb
sti
sub
in
fild
lahf
in
jmp
scas
mov
adc
psubb
ds
cli
ret
jne
cwde
push
in
repnz
(bad)
jno
paddsb
mov
cmp
repz
(bad)
mov
hlt
test
sbb
push
test
fidiv
aaa
les
or
jge
ficomp
in
sar
mov
cmps
(bad)
jmp
not
xlat
ss
push
(bad)
(bad)
fimul
fst
(bad)
jmp
test
sbb
adc
icebp
(bad)
imul
lahf
or
retf
xlat
dec
fsub
mov
shl
sti
push
pop
daa
div
ins
inc
rcr
lock
push
jl
xlat
xor
mov
shl
pushf
stos
repnz
movs
sbb
imul
pop
(bad)
mov
out
mov
inc
(bad)
mul
push
loopne
mov
mov
pop
into
sbb
xor
cmp
jl
test
daa
out
std
mov
mov
jnp
maxps
xor
int
pop
mov
pusha
jg
les
loop
sbb
mov
retw
cmc
push
fdivr
adc
mov
cmps
jb
add
xchg
mov
push
jle
loopne
push
fdiv
xchg
adc
jno
adc
push
lds
pop
daa
in
adc
aad
pop
xor
jl
into
ja
int3
enter
lods
push
clc
mov
scas
pop
mov
outs
fadd
fild
shl
rcl
cmps
xchg
ins
or
movs
dec
mov
clc
pop
fs
or
fstp
stos
test
cmps
pusha
sub
jg
mov
ins
mov
xor
leave
mov
jne
jmp
test
(bad)
out
fwait
mov
nop
pop
mov
popa
mov
jecxz
mov
cmp
dec
popa
leave
or
pop
xchg
pop
push
jmp
sub
les
or
arpl
mov
nop
mov
dec
jge
ins
(bad)
int3
stc
test
cmc
shl
xchg
inc
or
xor
inc
jb
jmp
push
repnz
addr16
inc
pop
cdq
mov
cmp
fsubr
cmp
jmp
repz
cli
cmp
sub
cmp
pop
test
push
ja
ror
outs
ja
jp
repnz
or
out
push
loope
xchg
pop
mov
int
and
jle
or
cmp
scas
pop
sbb
bound
pusha
xchg
inc
scas
ds
cmp
pop
dec
stc
call
xor
or
ret
idiv
(bad)
popf
dec
xchg
or
lods
loope
sti
jl
xchg
adc
sbb
mov
test
jbe
loop
push
in
int
push
cdq
lock
les
sub
mov
cmp
push
inc
stc
mov
jmp
loopne
push
pop
(bad)
push
push
jnp
mov
xchg
popf
cmp
sar
daa
test
das
xchg
daa
dec
fcom
jge
pop
clc
or
repnz
mov
rcl
je
xchg
into
fimul
loopne
push
xchg
mov
int
pop
and
imul
movs
sub
sub
ret
dec
cmp
mov
inc
out
push
shl
out
cmp
movs
pop
rol
mov
sbb
rcr
push
ds
cwde
cwde
xor
(bad)
jmp
jo
or
xchg
dec
and
xchg
mov
pushf
mov
xchg
inc
test
xor
sbb
add
inc
sbb
inc
ins
rcl
dec
pop
outs
inc
int3
inc
xor
(bad)
mov
dec
mov
aas
lock
cwde
sub
sub
xchg
sub
inc
adc
pop
or
add
(bad)
test
iret
popf
cli
cs
and
repnz
jae
push
mov
cmp
dec
jno
movs
addr16
loopne
dec
pushf
icebp
mov
ds
pop
loop
mov
sub
pop
lock
jl
test
outs
movs
cli
inc
test
div
test
adc
sar
or
rcl
out
cmp
push
idiv
xor
cs
clc
leave
cmps
mov
and
ret
jge
mov
cmps
dec
jbe
addr16
pop
xchg
xchg
jbe
jecxz
nop
adc
inc
and
push
sti
shl
mul
mov
xor
popf
mov
sub
pop
xor
cmp
xor
xlat
sahf
mov
cmp
clc
or
aam
pushf
popf
sbb
leave
js
movs
pop
cmp
ins
push
outs
sbb
call
pop
rcr
dec
sub
imul
hlt
stos
sub
dec
fsub
lea
or
xor
mov
out
cmp
jnp
nop
bound
stc
loopne
dec
mov
xchg
pop
into
mov
cmp
mov
pop
jmp
loope
jbe
out
pop
jnp
(bad)
out
ds
clc
mov
and
in
mov
popa
jmp
add
fiadd
mov
or
fnsave
sub
ds
out
fdivr
inc
imul
popa
jg
dec
jae
out
jl
das
cmp
xlat
les
push
les
jno
test
sub
jno
jl
pop
(bad)
test
icebp
mov
cli
js
mov
fld
push
aad
dec
clc
cmp
ret
stos
ror
dec
fcmovb
fld
pushf
iret
sub
cli
or
lahf
mov
pushf
daa
xchg
xchg
lods
test
xchg
gs
(bad)
mov
pop
jbe
cs
loop
test
scas
retf
ins
jp
imul
cmp
mov
bound
fld
ret
in
les
cmp
dec
(bad)
mov
sbb
retf
pop
jecxz
cmp
loope
mov
mov
daa
sahf
outs
xchg
jge
cs
neg
stos
shr
xor
push
pop
not
das
or
jae
(bad)
jns
not
xchg
in
lods
daa
xchg
push
std
push
pusha
inc
das
loope
inc
out
lea
int3
cmp
aaa
xor
mov
and
lods
pop
inc
cmp
mov
scas
fdivr
adc
sti
sar
(bad)
cmp
push
xor
call
mov
push
inc
pop
cmp
mov
lods
sahf
loopne
dec
popa
enter
rol
mov
mov
retf
jge
push
jle
jl
xchg
ins
and
pushf
dec
(bad)
or
xor
adc
sbb
push
les
je
dec
pop
mov
ss
int3
call
mov
out
and
iret
aas
dec
(bad)
movs
pop
je
jl
lds
mov
out
xchg
jmp
mov
test
push
inc
movs
enter
aam
push
clc
jmp
dec
jmp
jnp
retf
daa
xor
inc
aad
mov
push
pop
loope
mov
mov
jne
stos
out
ja
(bad)
je
into
add
int3
retf
jecxz
and
ficom
mov
mov
cmp
call
and
mov
out
out
xchg
sub
inc
pop
pop
pop
lea
xchg
sub
xor
int3
mov
nop
repz
mov
clc
pusha
fbstp
jg
sub
rep
aad
js
sub
dec
jg
fimul
jae
sub
mov
push
popf
or
sbb
dec
test
es
mov
ins
repz
adc
ja
xchg
data16
lods
jecxz
xor
loope
fimul
mov
xchg
ret
pop
call
pop
push
push
retf
and
mov
movs
cmp
or
push
aas
frstor
retf
jne
dec
call
frstor
(bad)
sub
leave
rcr
push
loopne
xor
jo
inc
popa
stos
sbb
push
xchg
popa
imul
movs
mov
addr16
or
dec
and
nop
jl
in
dec
and
clc
jge
loope
pop
in
retf
sub
dec
dec
retf
mov
in
jg
xchg
dec
leave
sar
imul
mov
and
ja
sub
xor
mov
or
clc
test
push
(bad)
call
sub
das
not
xor
fstp
imul
xor
push
push
cmp
jb
add
mov
inc
lock
mov
daa
mov
jmp
sahf
or
add
sub
pop
lods
cmp
sub
psrlw
pop
sub
push
sub
xchg
or
mov
dec
or
jle
cmp
xchg
cmp
inc
dec
cmps
call
movs
jno
sbb
aam
loopne
call
sub
test
mov
mov
lods
mov
adc
gs
dec
jne
jge
adc
lods
retf
ds
mov
sub
popf
mov
stc
sub
das
xchg
fsub
dec
and
mov
xchg
lds
jns
or
mov
and
mov
mov
test
out
mov
pop
dec
inc
js
push
rcr
jmp
push
movs
push
inc
in
sub
enter
mov
jecxz
test
and
shl
neg
cli
xchg
xor
sti
pop
pushf
iret
pop
hlt
mov
je
mov
aas
dec
retf
push
and
or
fbstp
xchg
movs
(bad)
movs
es
push
pop
mov
test
pop
sbb
sub
push
imul
sub
add
sahf
ins
pop
movs
int3
cs
outs
mov
sub
pop
adc
cdq
mov
cs
and
test
pusha
jl
pop
fild
jno
xchg
xor
and
cld
inc
xchg
cli
mov
jne
loop
out
xor
stc
add
pop
push
dec
xor
jns
jnp
inc
rol
(bad)
dec
mov
fucomp
or
dec
inc
cmp
rol
mov
cmp
and
cmps
dec
lods
mov
out
dec
xchg
test
enter
jl
mov
dec
xor
ja
and
call
cmp
cmp
outs
ja
pop
retf
fcmovu
cdq
loope
les
frstor
fdiv
sbb
out
sbb
sub
rcr
shl
pop
and
stc
aad
jnp
add
dec
popf
xlat
inc
jecxz
movs
adc
js
cdq
es
inc
outs
lds
ins
cs
dec
pushf
int
mov
les
sbb
lds
aas
cmp
aas
mov
mov
outs
jno
adc
aas
mul
push
inc
dec
and
mov
inc
adc
ret
mov
pop
xchg
and
(bad)
stc
setp
pop
enter
fdivr
test
jae
cld
repnz
push
ret
aad
cmp
and
mov
mov
movs
cmp
test
es
jmp
sar
dec
mov
movs
push
inc
pop
imul
movs
xchg
sbb
pop
jns
push
inc
dec
test
xchg
ficom
imul
daa
int3
lahf
mov
pop
mov
jl
pop
cwde
ret
outs
(bad)
lods
sub
imul
cmp
outs
cmp
pop
(bad)
jb
test
and
pop
mov
shl
mov
jl
(bad)
sub
pop
js
and
test
and
retf
mov
cmps
adc
dec
adc
pop
icebp
sub
fisub
xchg
pop
inc
in
xchg
scas
sbb
mov
inc
fwait
aam
dec
hlt
lds
out
adc
(bad)
sub
ret
xchg
(bad)
js
sub
popf
ret
inc
mov
ret
jae
(bad)
aas
xchg
scas
in
mov
and
cmp
fisubr
call
fwait
retf
cwde
jmp
ror
jg
mov
jns
out
mov
jg
call
adc
jg
(bad)
cwde
jo
jae
push
in
mov
xchg
xor
sub
fcmovbe
and
mov
out
push
scas
in
mov
pop
shl
xchg
ror
pushf
mov
jmp
push
fwait
stos
mov
mov
jbe
or
jne
adc
(bad)
pop
aam
push
push
ds
mov
sbb
sub
adc
cmps
inc
icebp
adc
mov
stc
mov
call
dec
fpatan
mov
push
in
and
xor
nop
cmc
push
bound
mov
sub
inc
push
pop
push
test
retf
into
adc
mov
push
retf
out
or
push
imul
xchg
out
push
mov
push
jecxz
les
mov
jns
and
and
mov
pop
mov
pop
mov
sar
jl
adc
pop
sub
or
stos
stos
(bad)
neg
ins
push
jnp
not
repz
push
repnz
sub
and
adc
sbb
mov
call
(bad)
ret
xchg
sbb
cmp
nop
(bad)
and
cmc
xchg
rcr
js
push
or
mov
fsub
sub
les
add
xchg
daa
cmps
ror
out
test
es
out
sbb
sbb
fs
pop
pushaw
push
stc
push
add
hlt
mov
mov
test
stos
jb
xchg
push
test
xchg
adc
pop
test
icebp
sbb
mov
imul
mov
mov
dec
cmc
shr
test
test
sub
ror
in
xchg
and
and
mov
add
sub
or
fcomp
ret
int3
pop
ss
jnp
push
sub
enter
(bad)
in
retf
ja
sbb
mov
sti
dec
je
push
and
mov
shl
ret
mov
inc
jp
jb
sbb
mov
sbb
mov
xchg
sbb
xchg
push
nop
pusha
add
or
xchg
or
xchg
sbb
stc
cli
sub
in
xlat
add
mov
mov
mov
out
repnz
jmp
imul
pusha
stc
jo
mov
pop
fwait
sbb
jno
test
retf
mov
mov
or
cmp
cmp
mov
loop
mov
cs
ss
jmp
lds
sbb
(bad)
retf
(bad)
loopne
inc
lahf
jecxz
into
movs
cmps
lods
dec
loopne
push
push
stos
inc
mov
xor
mov
jle
out
out
xchg
add
xchg
dec
das
imul
fsub
push
push
mov
jne
mov
inc
cmp
into
icebp
call
add
hlt
mov
mov
push
jmp
dec
mov
and
inc
or
outs
sbb
shl
and
dec
hlt
in
mov
push
cdq
lock
ret
add
ja
xor
mov
push
dec
adc
bound
inc
jo
cmp
sar
push
movs
xchg
pop
gs
mov
jmp
pop
fmul
and
cmp
movs
jb
push
call
fstp
inc
jno
mov
fsub
std
push
jp
inc
sub
mov
sub
pop
jmp
in
into
inc
jp
sub
lods
pop
dec
jne
cmps
nop
ficom
fwait
cld
outs
xchg
pmaxub
arpl
jbe
xchg
fbld
sbb
xchg
or
push
inc
mov
jl
gs
cmps
loop
ror
popf
sbb
(bad)
test
push
mov
inc
gs
loope
int
adc
dec
rcl
retf
adc
cld
jbe
lock
and
in
adc
sub
push
(bad)
dec
shl
imul
outs
xchg
test
pop
sub
mov
sub
push
mov
add
in
test
loop
call
jae
inc
pop
xor
dec
ja
dec
ret
sbb
xor
pop
fnstenv
push
xchg
and
xchg
cmp
(bad)
icebp
xchg
mov
sub
retf
jp
scas
in
repnz
dec
push
adc
mov
nop
jb
mov
mov
es
icebp
cmp
in
dec
gs
cmp
test
push
je
fist
into
outs
sub
into
add
loop
sub
gs
mov
mov
or
aaa
stc
outs
mov
pop
retf
std
inc
adc
test
jg
test
out
outs
add
push
push
lods
dec
push
std
mov
pop
push
jp
push
mov
push
xor
xchg
and
lock
push
pop
push
ret
mov
xchg
inc
cmc
enter
pop
data16
mov
cdq
xchg
outs
leave
push
mov
outs
or
inc
jae
cwde
bound
js
mov
mov
cdq
and
jbe
jns
gs
int3
adc
pop
sub
or
or
sub
mov
dec
mov
xchg
cmp
sub
loop
test
clc
sahf
cmp
lods
das
retf
data16
mov
mov
not
pushf
mov
mov
in
dec
repnz
(bad)
or
adc
stc
push
mov
daa
in
imul
jl
sub
out
mov
not
and
push
and
cdq
shl
push
jl
test
xchg
jnp
xor
ficom
xchg
das
jbe
and
pop
ds
sbb
clc
cld
jbe
inc
push
stc
std
test
push
test
mov
dec
pxor
push
in
and
xor
and
ss
adc
aad
lds
push
adc
push
pop
iret
out
loope
fldcw
stos
inc
pushf
push
fcomp
jns
nop
repz
fcmove
mov
leave
sub
fwait
and
into
imul
ret
shl
or
pop
xor
addr16
gs
loope
cmp
mov
and
cmp
popf
retf
dec
ret
addr16
dec
js
sbb
inc
or
xchg
push
push
int
push
push
clc
ins
pop
rol
outs
push
fbld
jp
nop
cld
addr16
lock
mov
ret
adc
(bad)
retf
scas
fsub
xchg
dec
ins
mov
cs
or
inc
dec
sbb
mov
ins
xchg
js
adc
into
inc
pop
xchg
ror
into
aam
shrd
push
retf
call
or
xor
mov
pop
ins
push
(bad)
or
xor
mov
mov
inc
in
int3
cmp
ss
outs
loope
outs
in
adc
pop
push
jmp
inc
stos
mov
mov
add
xchg
sbb
loope
fwait
mov
movs
call
jo
jmp
aad
outs
ss
adc
imul
xchg
(bad)
xchg
shl
push
mov
adc
xadd
sar
imul
lods
push
outs
pop
mov
shr
dec
mov
or
pusha
mov
sub
pop
in
xor
inc
add
sub
stos
inc
repz
iret
adc
retf
pop
lods
call
js
hlt
mov
xor
fidiv
mov
jmp
mov
stos
out
sbb
mov
mov
jmp
fimul
inc
jo
dec
repnz
stos
pop
loope
test
movs
(bad)
movs
hlt
mov
aam
push
and
test
ror
mov
stos
aam
dec
sub
lahf
ror
and
xor
ret
xor
dec
and
sbb
jne
cmps
sbb
mov
xchg
out
adc
inc
push
mov
mov
retf
aas
je
ins
sbb
xor
pushf
loope
test
pusha
pop
stos
std
setne
pop
push
(bad)
push
or
out
and
fdiv
in
out
mov
mov
inc
push
dec
popf
ret
mov
out
add
lock
and
leave
adc
sub
mov
repz
sub
and
push
gs
pop
dec
out
out
push
(bad)
cmps
mov
test
sub
ret
mov
inc
dec
sub
jmp
lds
(bad)
dec
js
or
inc
sahf
hlt
(bad)
sub
fldcw
shl
jle
push
bound
cmp
add
inc
adc
or
out
fsub
jmp
lea
dec
sub
mov
mov
cmp
scas
jae
cmp
aam
sub
test
mov
push
xchg
or
(bad)
or
xchg
je
ss
mov
mov
cmp
sub
pushf
dec
call
xor
adc
repnz
pushf
adc
sbb
adc
sub
jno
add
push
rcr
pop
mov
stos
sahf
movs
pop
adc
rcl
mov
jo
mov
mov
sbb
push
sti
mov
das
cmp
fimul
in
lock
push
xchg
call
inc
stos
loope
mov
rol
pusha
mov
jno
dec
dec
pop
test
shl
xchg
int3
inc
cli
cmp
push
nop
push
adc
inc
push
dec
pop
push
int3
retf
rcl
mov
pop
(bad)
clc
in
jbe
sub
fcmovu
and
mov
repnz
cmp
inc
cwde
or
int3
test
xchg
iret
(bad)
sub
adc
not
out
xchg
pop
in
mov
std
sub
(bad)
xor
loopne
scas
repz
mov
jbe
lds
cld
jbe
jecxz
movs
sub
icebp
(bad)
cmps
out
cwde
retf
xchg
lds
jmp
shl
jl
xchg
adc
dec
fsub
mov
stc
in
sub
pop
ret
outs
jecxz
dec
xor
lods
mov
cmp
push
cmp
std
sub
aad
out
dec
lds
xchg
pushf
arpl
repnz
mov
mov
call
push
lods
dec
mov
xchg
std
movs
pop
nop
hlt
mov
movs
jnp
cmp
in
dec
addr16
pop
gs
je
push
push
aas
stos
leave
outs
sar
cwde
dec
jp
jle
jno
push
ins
jb
out
mov
mov
dec
adc
xor
pushw
mov
stos
jae
(bad)
adc
out
cs
push
cwde
inc
cmp
push
fistp
dec
popa
cmps
mov
ins
movs
mov
iret
cwde
jmp
jb
test
loopne
test
fsub
jne
ss
or
fld
pop
xor
call
je
aaa
gs
sbb
adc
pusha
leave
movs
mov
dec
mov
mov
jno
into
rol
and
mov
sbb
fs
out
mov
jmp
cwde
adc
pusha
pop
paddw
mov
cmp
lock
aas
into
test
push
or
loope
xchg
bound
cli
mov
cmps
(bad)
dec
(bad)
adc
in
mov
clc
in
in
pop
jns
adc
pop
mov
push
rcl
mov
push
pop
mov
push
aam
mov
jne
adc
clc
in
fcomp
xor
aas
je
dec
xor
(bad)
inc
js
mov
ja
ret
sbb
inc
sub
in
jne
into
repz
cmps
fbld
lods
xchg
popf
inc
pop
push
les
call
mov
push
retf
and
mov
jno
mov
sub
and
or
push
mov
cli
dec
dec
cmp
fldenv
inc
xchg
data16
mov
fxch
(bad)
adc
(bad)
stc
xchg
movs
inc
idiv
sub
es
sar
xchg
iret
call
lods
or
movs
jae
test
push
(bad)
pop
aaa
mov
pop
in
xchg
or
inc
inc
leave
bound
(bad)
push
aad
cmp
movs
int3
in
movs
in
push
pop
jp
push
jecxz
stos
in
aam
push
icebp
imul
gs
push
or
in
pop
repnz
jle
cmc
mov
or
xchg
xor
stos
pop
push
int
fild
gs
neg
(bad)
stc
idiv
inc
dec
jno
add
push
nop
and
clc
push
push
ret
jne
mov
push
stos
rcl
lods
or
adc
mul
xchg
(bad)
hlt
in
mov
movs
sbb
xor
pop
jne
repnz
gs
xlat
(bad)
nop
push
or
popa
sbb
mov
fsub
test
aaa
mov
jae
enter
mov
ins
data16
xor
mov
mov
pop
xchg
retf
stos
stc
sub
xor
lods
dec
cli
int3
and
call
add
aam
pop
fbld
and
sub
or
in
push
pop
push
out
cmp
cmp
jno
movs
sub
lds
loope
aaa
push
arpl
ss
mov
iret
inc
mov
test
out
fcomp
xor
cmp
in
jbe
mov
loope
stos
push
pop
xchg
sub
jmp
jl
inc
test
fld
ja
cdq
mov
mov
push
xor
ret
aad
adc
dec
hlt
xchg
sub
push
hlt
jo
in
call
gs
repnz
out
mov
pop
hlt
mov
fldenv
in
(bad)
jmp
xchg
mov
test
in
add
jl
cmc
mov
lahf
inc
and
repnz
jne
fist
in
mov
mov
sbb
(bad)
repnz
xor
pop
movs
call
xor
pop
pop
pop
movs
lods
cmps
pop
xor
clc
popf
ja
(bad)
(bad)
daa
mov
cmp
sahf
fwait
movs
int3
movs
bound
lods
inc
js
jne
loope
test
fimul
leave
mov
and
xlat
sub
cmp
stos
in
mov
xchg
iret
arpl
inc
lock
shl
xchg
out
cmps
add
call
fsincos
cs
fsub
jmp
cli
jmp
mov
add
or
enter
mov
mov
fisttp
xchg
shr
or
mov
xchg
jge
arpl
xor
js
dec
and
sub
pop
stos
ror
and
jge
sub
sub
movs
mov
js
or
mov
cmc
iret
sbb
adc
xchg
xchg
pop
mov
cmps
xchg
jmp
jle
nop
sub
mov
idiv
shr
fisub
out
mov
leave
mov
adc
and
ror
rcr
dec
mov
fcom
cmps
mov
pop
fs
dec
rol
sti
sub
sub
addr16
popf
cmp
popa
push
stos
mov
adc
lahf
stos
bound
xor
sahf
and
pop
pop
test
das
stc
hlt
inc
mov
hlt
lock
cmp
popf
xor
mov
popf
inc
jmp
xchg
mov
sub
stos
jnp
jmp
xchg
add
aaa
loope
cmps
test
pop
gs
stos
int
push
jbe
test
jmp
dec
daa
sub
mov
js
jnp
or
imul
test
add
ror
cmp
adc
mov
xchg
int3
sbb
and
push
ret
in
rcr
gs
adc
pop
outs
xor
mov
imul
fistp
pop
shr
cld
xchg
fdivr
sbb
shl
(bad)
adc
test
jle
cs
dec
push
pop
xchg
sub
je
mov
pop
adc
jb
dec
adc
and
test
sahf
sar
loope
vpcomub
jmp
out
lods
ret
xchg
mov
inc
clc
push
les
and
mov
push
shr
inc
scas
dec
mov
xor
mov
jb
dec
popf
in
mov
cmp
xor
out
out
ins
pause
(bad)
movs
call
leave
into
xor
pop
stos
test
mov
dec
arpl
cmps
jo
ja
mov
cmp
xchg
pop
iret
inc
in
lods
push
cmp
inc
xchg
bound
sar
test
push
jne
push
jmp
xchg
mov
in
movs
mov
xor
(bad)
pushf
loope
in
repnz
fidiv
test
out
or
movs
sti
out
mov
dec
in
sahf
pop
pop
jb
ja
cmp
aaa
push
test
mov
xlat
sub
lea
jbe
sbb
data16
sbb
pop
in
jno
pop
pop
pop
dec
sub
fisttp
cld
cmp
adc
mov
test
into
inc
mov
ret
and
(bad)
adc
push
adc
dec
repnz
xor
mov
push
iret
and
ds
cmp
dec
dec
sbb
out
outs
mov
and
cmp
push
mov
daa
jp
out
push
lds
cld
jbe
pop
mov
scas
pop
mov
xchg
push
dec
adc
ficom
dec
inc
cli
sub
sbb
aas
mov
dec
movsx
sahf
fmul
and
mov
(bad)
and
sbb
and
cmp
lock
dec
shl
or
and
mov
out
sbb
jbe
out
cmp
xchg
push
push
sbb
pop
arpl
jle
adc
push
loope
xchg
cmp
int
cmp
mov
sub
add
cmp
and
das
mov
test
cmp
add
jle
cmp
rep
push
stc
loope
imul
sbb
mov
cmp
inc
cmp
push
jg
jnp
sub
test
mov
mov
scas
out
cmps
test
cwde
add
dec
or
or
imul
bound
call
sahf
jns
or
mov
ret
pop
dec
(bad)
mov
xchg
sub
hlt
xchg
sbb
push
mov
shl
fs
mov
popf
retf
aam
pop
push
xchg
push
jmp
push
jnp
adc
in
pop
les
scas
mov
push
imul
ja
cli
and
out
xor
out
neg
jle
mov
jo
inc
mov
addr16
ins
jns
mov
or
adc
cmp
jl
mov
cld
mov
rcl
retf
cmp
cdq
mov
mov
ja
fstp
jle
adc
test
xchg
cld
ins
shr
test
stos
dec
and
rcr
mov
sbb
or
fcomp
or
popa
sbb
aam
mov
dec
xchg
adc
or
adc
mov
not
mov
(bad)
(bad)
mov
cld
into
pusha
cmp
repnz
fucom
mov
inc
inc
jne
sub
cmps
ffreep
mov
mov
inc
gs
add
in
imul
daa
in
retf
push
adc
dec
and
shr
lea
sbb
sub
or
out
mov
fldenv
pop
dec
push
retf
mov
retf
mov
ret
xor
adc
pop
sahf
push
push
mov
fld
sub
shl
adc
xchg
sub
retf
jmp
frstor
mov
push
jb
mov
xchg
mov
stos
mov
pop
in
cs
es
cld
push
gs
xchg
dec
adc
arpl
push
push
push
fxch
sub
xchg
sti
nop
sti
xchg
stos
jae
jne
test
in
push
xor
mov
pushf
fstp
outs
rcr
and
rcr
dec
fisttp
fild
mov
pop
inc
enter
popa
sub
movs
pop
dec
enter
push
lea
jmp
sub
cmp
jge
xchg
mov
dec
gs
cmp
(bad)
cmp
bnd
or
dec
gs
push
je
adc
xchg
mov
dec
sub
cmps
out
cmps
aad
ret
pop
retf
xlat
cs
mov
retf
loope
dec
cmp
dec
pop
sub
repz
dec
stc
loopne
not
push
fnstenv
cwde
mov
(bad)
mov
mov
xlat
loop
dec
xchg
pop
mov
push
imul
shr
mov
pop
xchg
sub
retf
bound
mov
add
adc
xor
fst
cmp
xchg
mov
mov
nop
pop
and
add
pop
outs
ss
out
dec
mov
and
adc
ficom
pop
ins
cmp
shl
push
pop
pop
xchg
nop
enter
mov
out
push
in
stos
fsub
bound
(bad)
cmps
push
shl
sbb
mov
mov
or
cs
or
mov
cdq
push
(bad)
xor
and
cmps
sar
in
push
or
sbb
dec
jle
fild
mov
jmp
mov
cmp
sub
push
pushf
fisttp
(bad)
mov
outs
out
retf
add
pop
in
imul
inc
rol
shl
sub
push
out
mov
ins
xor
daa
sub
call
mov
dec
stos
jb
shl
lds
jo
and
adc
iret
jae
sub
stos
enter
cmp
fnstenv
imul
clc
sbb
dec
mov
shr
xchg
stos
outs
mov
js
test
xchg
mov
ret
out
adc
retf
(bad)
in
ret
fldln2
mov
imul
mov
lods
xchg
xchg
inc
xchg
fistp
mov
jmp
jmp
pop
shr
stc
nop
sbb
or
popf
cs
stc
shr
adc
imul
lock
lods
clc
xchg
sar
xchg
aam
movs
fdivr
dec
gs
repz
dec
sub
jnp
loope
aad
sub
fbstp
cli
mov
in
retf
lods
pop
(bad)
jp
(bad)
mov
lahf
call
sbb
movs
dec
cmp
mov
inc
xor
dec
cmc
pushf
arpl
fcom
push
push
mov
(bad)
mov
nop
jmp
mov
xchg
pop
hlt
mov
fcom
call
jle
mov
loop
xchg
mov
into
push
sub
lahf
nop
retf
ret
inc
xacquire
fwait
jne
and
(bad)
scas
sbb
mov
in
in
and
jmp
cld
jbe
movs
adc
or
dec
and
daa
mov
gs
repnz
mov
and
mov
dec
hlt
lods
pop
jne
and
sbb
ja
ret
pop
jg
ret
lock
mov
mov
cs
es
inc
sub
jo
sbb
popf
jl
stos
dec
loope
sbb
jnp
stos
sti
lds
je
or
ja
int
pop
inc
dec
jmp
push
or
dec
popa
xor
or
cld
cmp
hlt
cmp
mov
xchg
loopne
aad
les
mov
icebp
xchg
add
xor
xchg
xor
in
xor
sub
mov
pop
mov
fabs
loope
dec
mov
lock
cdq
sub
pop
test
sub
das
xor
bound
mov
add
leave
cmp
test
cmc
lock
jmp
cmp
ins
les
js
inc
ret
or
sub
cs
inc
push
xchg
cli
clc
adc
popf
xor
sub
mov
push
xchg
push
sub
ja
sub
stos
push
pop
in
repnz
ja
popa
iret
or
push
clc
jb
loope
jne
mov
push
xchg
dec
(bad)
and
add
aam
add
lds
sub
stos
jl
movs
ds
dec
cmc
push
fnstenv
mov
add
cmp
in
jbe
movs
jo
or
add
out
lods
rcr
ret
fs
call
push
mov
es
push
and
sbb
mov
imul
sub
fdivr
mov
movs
into
leave
jp
dec
jo
xchg
and
hlt
jb
test
jge
inc
jae
aas
mov
lds
fwait
dec
adc
cmp
xchg
loopne
aaa
jecxz
les
mov
or
add
mov
std
inc
or
retf
das
fild
shl
jb
add
call
repz
gs
fiadd
ret
mov
div
out
xchg
push
xchg
jo
mov
pop
in
pop
iret
test
hlt
mov
adc
loope
sub
pop
(bad)
aas
and
stos
mov
lahf
fld
repnz
pop
push
mov
sub
jb
mov
cmps
lds
cmps
mov
mov
aad
jmp
aas
fstp
xchg
jge
movs
iret
fs
sub
or
adc
xchg
push
mov
call
mov
mov
mov
stos
mov
sub
sbb
int3
xchg
sub
pop
aam
sub
sub
movs
retf
and
ins
jp
fwait
nop
ss
lods
fwait
rcl
pop
hlt
jb
dec
push
add
mov
sti
mov
test
retf
shl
mov
sbb
pushf
sub
je
sahf
push
gs
cld
popf
icebp
mov
xchg
lods
push
aam
cli
cmp
pop
inc
mov
sbb
pop
out
mov
jecxz
stc
lock
fs
stc
dec
js
push
mov
or
popa
cs
sbb
pop
xor
push
cmp
mov
pop
mov
mov
dec
xchg
cmp
(bad)
loop
les
enter
test
test
ja
mov
es
stos
shl
cmp
int3
inc
fild
push
pop
(bad)
les
adc
test
(bad)
pop
sti
xchg
int
pop
in
sub
hlt
inc
xor
xchg
sub
dec
mov
mov
mov
call
push
les
xor
jle
jne
mov
sub
in
xchg
mov
lods
call
or
fwait
xchg
(bad)
mov
pop
adc
inc
in
dec
ss
dec
mov
jmp
mov
push
sar
push
nop
pop
jmp
pop
in
scas
cmp
pushf
sub
into
mov
ret
(bad)
push
stc
xor
cmp
xchg
arpl
out
xor
add
push
dec
dec
xor
xlat
sub
inc
adc
push
jmp
aas
fild
mov
ror
loop
push
sub
xchg
mov
pop
movs
push
cmps
aas
dec
repnz
sub
mov
cs
fwait
test
pop
movs
in
xchg
mov
(bad)
or
lock
scas
fsubr
retf
mov
jmp
pop
adc
mov
inc
xchg
fnstsw
fld
mov
push
(bad)
aas
test
dec
dec
add
call
clc
imul
call
lock
pusha
push
scas
pop
inc
out
mov
add
inc
fisttp
dec
push
cmp
and
int3
xchg
adc
xchg
cmp
loope
and
sub
and
jg
leave
std
push
push
rol
sub
jge
mov
icebp
stos
jo
sub
pop
push
adc
pop
cmc
xchg
adc
inc
or
pop
cwde
pop
push
push
mov
cdq
jmp
mov
leave
addr16
sbb
in
push
clc
dec
adc
push
mov
repz
sub
jns
cmps
dec
mov
(bad)
stc
fdiv
(bad)
xlat
mov
sbb
stos
push
test
sbb
jl
dec
out
pop
push
cli
es
fsubr
fld
xchg
push
inc
popa
loope
es
xchg
(bad)
out
or
sar
sbb
loop
jae
push
mov
dec
cmps
xor
add
mov
add
(bad)
dec
xchg
data16
shl
sbb
xor
neg
lods
test
clc
jno
movs
pop
inc
outs
data16
sub
push
jmp
aam
jle
aas
aas
out
aas
aas
(bad)
out
stc
iret
dec
cld
out
std
repz
(bad)
std
iret
(bad)
aas
(bad)
cld
pop
lahf
out
out
std
repz
call
(bad)
std
iret
mov
jns
repz
iret
out
stc
out
cld
mov
iret
jae
iret
repz
out
dec
jg
ds
icebp
repz
test
push
aas
iret
pop
js
(bad)
(bad)
out
jmp
stc
inc
in
jnp
(bad)
sar
jns
stc
stc
sti
jg
daa
jg
cli
out
std
repz
jecxz
aas
arpl
fisubr
sahf
xor
push
stc
repz
repz
mov
std
mov
sti
mov
int3
iret
sti
jns
std
jns
bnd
(bad)
jmp
jg
out
jecxz
fistp
(bad)
(bad)
jl
mov
jg
cmp
outs
jg
jmp
(bad)
fdivp
lds
iret
mov
(bad)
pop
int3
sbb
mov
scas
jmp
(bad)
cld
pop
jle
repz
jg
lahf
mov
(bad)
out
or
aas
pop
bound
mul
idiv
lods
bound
shl
jge
xchg
dec
les
cld
sub
imul
push
xor
iret
out
cmp
out
mov
pop
jg
cmc
out
repz
clc
in
pop
out
sti
aaa
dec
aaa
cmps
out
les
call
imul
push
mov
sub
iret
jae
mov
(bad)
cmp
(bad)
mov
call
ds
fbstp
push
add
gs
and
aaa
lock
(bad)
retf
call
sbb
rcl
fld
push
or
(bad)
mov
fcmovne
cmps
mov
fcomip
(bad)
fdivr
fistp
mov
xor
add
enter
adc
jl
pop
loope
bound
imul
loop
inc
or
(bad)
mov
pop
adc
call
into
cmp
jbe
clc
les
mov
inc
rol
or
cmp
sti
rcr
mov
(bad)
mov
xor
jle
bound
or
sbb
or
loope
ins
cmp
fbstp
or
mov
imul
pop
jae
xor
cmp
cwde
mov
(bad)
ffree
idiv
sbb
lahf
dec
jl
dec
jno
and
retf
mov
inc
imul
shl
popf
das
in
test
or
das
jecxz
stc
cld
scas
loopne
mov
xor
popa
dec
push
movs
ins
inc
test
cmp
movs
ins
pop
jmp
cwde
repz
mov
jl
int
mov
jg
sbb
test
xor
fstp
xor
ja
sahf
jo
dec
jle
cmps
adc
fcomp
aaa
ds
cwde
mov
loop
std
outs
in
add
iret
inc
cli
sti
pusha
mov
jg
xlat
dec
out
arpl
lea
dec
xchg
and
out
xor
push
pushf
(bad)
(bad)
out
out
daa
test
iret
sahf
mov
cdq
mov
out
(bad)
out
sbb
(bad)
pop
mov
popf
push
pushf
iret
stos
mov
(bad)
pushf
lods
dec
cmps
jmp
bound
mov
sti
test
cs
mov
iret
xchg
loop
push
jle
push
adc
jmp
(bad)
xor
dec
(bad)
cmp
rol
aaa
neg
jp
enter
jg
sahf
outs
clc
pop
sbb
jle
pop
pop
mov
push
aaa
jb
xchg
mov
stos
aam
cdq
fst
xchg
ins
dec
stc
jnp
mov
addr16
sar
sub
xchg
lds
lock
jne
in
sbb
movs
sar
pop
mov
jmp
mov
je
pushf
sbb
jno
push
jl
clc
lods
jg
sbb
jge
cli
sbb
cmp
inc
inc
int3
call
xchg
mov
enter
bound
jae
mov
lea
addr16
fisubr
push
inc
mov
out
out
lods
mov
nop
mov
iret
js
es
outs
mov
call
sbb
adc
push
add
mov
test
fisub
mov
lods
pop
stos
jnp
in
scas
pop
ret
xor
jmp
fwait
pop
daa
pushf
fisttp
mov
mov
sbb
daa
mov
imul
cwde
jmp
xor
adc
lods
shl
cmp
cmp
push
lods
cmps
test
jno
sti
call
pop
punpckldq
jmp
jl
test
in
xchg
xor
pushf
mov
push
add
loop
cmp
mov
cmc
inc
mov
mov
retf
(bad)
mov
jmp
add
pusha
push
push
icebp
jp
stc
pop
jmp
mov
(bad)
adc
ror
mov
retf
ret
pushf
or
iret
retf
out
js
(bad)
and
sub
pushf
retf
into
in
mov
push
pop
jmp
mov
mov
mov
les
fs
and
adc
in
loope
out
ds
sbb
std
je
idiv
cs
jne
jecxz
in
stc
test
sbb
and
(bad)
mov
repz
aas
lock
adc
lods
mov
jne
test
cmp
fistp
cs
xchg
je
jnp
mov
repnz
cmp
scas
cmp
xchg
mov
pop
test
rcr
les
(bad)
ror
neg
int
std
aam
repz
push
test
les
adc
lea
jge
push
cmp
sbb
mov
(bad)
and
xor
(bad)
fisttp
pushf
xor
(bad)
pop
dec
loope
pop
imul
jmp
sub
outs
and
js
ret
aas
xor
sub
unpckhps
jmp
aas
jne
iret
jbe
movs
or
jns
fstp
push
lahf
dec
jl
add
mov
lds
push
xor
ss
and
loop
push
push
mov
repnz
jns
ror
hlt
bound
popa
stc
or
push
les
daa
xchg
xchg
aaa
repz
ffree
fcomp
test
inc
mov
fs
and
jae
dec
mov
sbb
add
mov
jge
cmovnp
adc
mov
imul
cmp
push
aam
bswap
inc
out
or
lods
push
movs
call
cs
lods
div
inc
lds
cmp
test
ja
jmp
fwait
sti
xor
pop
and
call
(bad)
dec
ret
lds
sbb
iret
mov
pushf
out
inc
mov
pop
leave
aas
push
clc
jl
icebp
test
mov
jmp
pop
(bad)
jmp
ja
sbb
out
mov
xlat
cmp
pop
dec
fsub
test
cmp
sub
xchg
ja
dec
xchg
retf
jmp
fisubr
sub
ficomp
push
jb
scas
xchg
rep
mov
(bad)
jmp
push
mov
psllq
idiv
mov
cmps
push
arpl
pop
sub
hlt
inc
rcl
xor
repnz
inc
cmp
pop
ret
idiv
and
popa
or
aas
stos
je
xchg
cmps
in
jno
xchg
and
jp
mov
ss
rol
dec
gs
sbb
rcr
stos
add
sub
fsub
jb
mov
lahf
adc
push
ret
xchg
jecxz
push
icebp
mov
jns
adc
xor
ins
push
test
repnz
ret
jb
(bad)
cli
push
call
cs
push
cwde
sbb
imul
jne
push
xor
iret
js
fisubr
xor
syscall
imul
jae
xchg
jno
pop
mov
adc
mov
daa
ds
mov
sbb
(bad)
es
cmp
inc
sub
into
stos
or
mov
adc
xchg
jmp
rcr
(bad)
or
mov
mov
out
and
cwde
sub
xadd
push
or
sbb
push
sti
jmp
mov
repz
movs
retf
mov
add
add
push
add
aam
sar
repnz
fst
add
push
test
lods
xchg
test
iret
mov
gs
adc
repz
jae
js
adc
cmp
inc
push
mov
cmp
mov
es
and
add
call
mov
mov
jg
div
xchg
cs
dec
dec
pop
in
lea
jo
push
jl
sub
jb
imul
sub
imul
sub
retf
gs
lds
adc
push
mov
lock
xchg
int3
and
call
lods
xchg
fcomp
mov
repnz
ins
js
mov
push
dec
aaa
leave
ja
(bad)
in
mov
jle
andps
(bad)
fld
mov
cmp
dec
fidiv
push
and
fisub
(bad)
enter
xchg
mov
jnp
push
adc
and
into
(bad)
lods
sbb
addr16
rcr
push
jo
push
cli
cmp
pop
push
mov
dec
and
(bad)
dec
xor
adc
in
adc
mov
and
cmps
popa
inc
retf
jle
xchg
sbb
mov
outs
push
pop
into
out
popf
(bad)
sbb
inc
push
mov
std
je
mov
in
js
mov
retf
repnz
ja
call
inc
mov
adc
mov
jae
sub
fbld
and
push
cwde
mov
jns
mov
xchg
and
push
cmp
sar
and
push
ret
in
mov
push
pop
(bad)
imul
(bad)
push
pop
lock
nop
jne
iret
xor
lea
jae
fcomp
out
sub
dec
stc
jmp
mov
(bad)
dec
cld
xor
(bad)
ret
stc
push
xor
dec
jb
inc
xor
and
sub
xchg
dec
retf
adc
mov
(bad)
ins
sbb
retf
dec
inc
rol
bound
inc
push
lea
sbb
je
dec
cmp
xchg
in
and
jno
xor
cmp
mov
and
jg
data16
lahf
sub
mov
jmp
ror
pop
xchg
je
push
push
dec
test
pop
and
mov
ss
mov
mov
xor
push
js
repz
call
test
inc
int3
mov
xchg
shr
(bad)
cmps
push
repz
js
mov
xchg
dec
pop
in
cld
xlat
dec
inc
scas
dec
(bad)
das
mov
frstor
mov
push
push
mov
icebp
xchg
jmp
dec
push
test
inc
ins
mov
add
lods
sub
in
mov
stc
xlat
inc
(bad)
mov
icebp
es
jb
fwait
dec
dec
cwde
stos
and
or
cmp
inc
mov
sub
xchg
cld
jns
mov
into
out
mov
sbb
(bad)
fidivr
push
in
xchg
in
fwait
call
pop
inc
int3
imul
xchg
mov
popf
xor
push
aad
push
into
shl
jne
aas
pop
(bad)
cmp
enter
jb
retf
and
pushf
pushf
sbb
mov
jb
mov
inc
in
sti
sub
sub
movs
jne
mov
pop
in
add
push
loop
mov
inc
les
sbb
cmp
aad
(bad)
jl
loope
mov
sub
iret
jbe
addr16
xor
mov
bound
loopne
imul
mov
dec
popa
xor
aam
rcr
lahf
and
je
daa
loope
dec
jbe
test
mov
mov
das
pop
mov
shr
stos
in
inc
jae
adc
(bad)
xlat
mov
enter
xlat
or
sbb
popf
fwait
pop
cwde
pop
sbb
ins
repz
out
sub
inc
cmp
xor
jle
xlat
sahf
cmp
mov
dec
mov
mov
dec
daa
cmp
push
sahf
test
mov
pop
fwait
das
mov
cmps
leave
inc
dec
pop
cld
rcr
jnp
mov
fcmovu
sar
cmps
icebp
jl
or
ds
repz
inc
xchg
mov
mov
mov
or
mov
mov
mov
jno
and
leave
sbb
stos
repz
push
aad
adc
fisub
cmp
out
mov
mov
sahf
and
add
adc
stos
repnz
jnp
(bad)
xlat
and
repnz
(bad)
hlt
xchg
hlt
daa
mov
xchg
(bad)
int3
jmp
sti
enter
cli
out
lds
xchg
cmp
push
cmp
pop
cmps
loopne
xchg
inc
test
or
pop
les
dec
stos
out
mov
into
and
dec
cwde
mov
push
je
adc
inc
push
in
xor
adc
into
idiv
mov
pop
mov
jbe
je
or
mov
lahf
add
cld
adc
adc
movs
ret
inc
jo
xlat
mov
sbb
ins
(bad)
adc
and
stos
jae
cmovl
aaa
mov
ret
(bad)
in
push
jp
xchg
mov
dec
push
xchg
and
ja
jb
adc
mov
out
add
and
cmp
lods
xchg
push
inc
pusha
xchg
in
call
mov
mov
dec
cmps
cmc
sub
adc
mov
jbe
loopne
(bad)
cmp
mov
lods
push
ret
ja
or
or
jecxz
or
mov
loope
dec
test
adc
cmp
sti
push
stos
ret
mov
mov
add
fnstsw
adc
hlt
xchg
imul
push
fild
ja
jp
cmc
mov
test
sbb
ret
mov
xlat
adc
xor
mov
cld
loopne
or
jnp
mov
in
mov
scas
push
in
adc
sbb
pusha
pusha
jl
or
jo
sbb
pandn
js
sub
cmp
cs
ins
ins
fs
(bad)
cmp
cmp
sahf
push
jne
inc
dec
sub
sbb
dec
xchg
test
mov
(bad)
mov
outs
or
aas
sub
enter
mov
clc
mov
mov
push
stos
push
out
pop
dec
xchg
cmp
push
dec
sbb
repnz
mov
sub
cmp
nop
in
outs
mov
les
test
push
(bad)
push
mov
cmps
inc
push
push
cmp
pop
je
push
movs
ins
dec
sub
mov
enter
je
fnstcw
mov
xor
push
inc
(bad)
fdiv
or
mov
mov
test
jecxz
cdq
cmc
sub
nop
aam
retf
popf
jp
ins
mov
sbb
test
movs
xchg
test
mov
sbb
lock
xchg
xor
jb
dec
mov
cmp
in
imul
(bad)
and
inc
rcr
lea
retf
push
ds
sahf
retf
mov
in
arpl
arpl
fdiv
cld
sbb
sub
mov
push
je
pushf
and
icebp
movs
imul
and
loop
adc
mov
mov
movs
sbb
sub
or
push
(bad)
out
or
nop
jecxz
mov
in
mov
je
cmp
cmp
pop
mov
in
pop
mov
push
(bad)
dec
mov
ret
mov
mov
cmps
pushf
out
mov
or
popf
inc
dec
or
push
(bad)
repnz
cli
rol
sub
addr16
in
popa
lods
cmp
ficom
stc
sub
lea
or
fild
inc
fst
ja
dec
xchg
pop
xlat
(bad)
es
adc
rol
jo
sbb
ret
iret
push
outs
pop
jbe
fs
mov
xor
mov
inc
jae
fisub
jb
add
jg
fsubr
call
inc
push
fild
jnp
ds
mov
dec
mov
movs
cmp
add
in
jmp
cmp
mov
inc
sar
mov
enter
cmp
jno
push
ss
mov
push
data16
out
push
and
mov
push
fwait
cmp
(bad)
sub
mov
mov
(bad)
sub
pop
in
cmps
adc
inc
sti
sub
cmp
fist
mov
fst
imul
stos
jo
retf
dec
ins
sbb
cmp
mov
push
out
push
mov
mov
mov
aam
xchg
add
sub
es
(bad)
fmul
outs
leave
jle
outs
mov
push
jno
sub
call
jge
push
sub
dec
cmps
std
adc
jno
aaa
imul
test
mov
icebp
clc
sub
loop
sbb
ss
mov
xor
addr16
xchg
gs
psubsw
fistp
adc
data16
mov
(bad)
cli
fmul
retf
and
mov
mov
mov
sti
stos
sbb
xor
push
jb
mov
mov
clc
out
cmp
dec
popa
or
xchg
imul
js
ins
sub
sbb
inc
fdiv
div
mov
mov
mov
outs
xor
pop
call
loop
mov
jne
sbb
sub
mov
cmp
retf
xchg
mov
mov
cmp
pop
aad
mov
cmps
mov
in
(bad)
sbb
pushf
dec
pop
aas
push
jb
mov
xchg
ret
imul
push
ret
outs
pop
jb
mov
aad
stos
es
ja
repz
repnz
int3
mov
adc
out
retf
fs
gs
out
xor
and
in
loopne
int3
mov
(bad)
rcl
mov
fnstsw
call
sbb
jnp
or
pop
xchg
xchg
push
out
jnp
push
mov
dec
pop
jno
lods
pop
pop
bound
mov
jno
call
scas
lock
adc
es
sbb
xchg
daa
dec
repz
(bad)
cmp
fadd
or
fld
iret
and
mov
not
xchg
push
test
inc
inc
jp
(bad)
push
cmp
jb
push
popa
iret
or
sub
add
stos
and
push
or
mov
dec
mov
icebp
push
ss
(bad)
or
stos
jns
lds
test
xchg
pop
pop
mov
xchg
push
and
cmc
aam
inc
inc
inc
imul
inc
xchg
sub
jmp
fidiv
retf
mov
pop
lea
mov
(bad)
ins
call
xchg
sbb
leave
push
out
mov
jp
lds
pop
imul
pop
cmp
push
inc
in
aad
adc
sub
inc
jno
aam
push
dec
jne
test
js
mov
iret
lea
xor
push
jp
push
pop
shl
mov
inc
aaa
les
dec
or
rcl
enter
outs
mov
aaa
push
fst
inc
xchg
inc
stc
fdivr
repz
and
and
in
cmp
jl
xor
ja
shl
pop
push
clc
outs
xchg
pop
push
dec
movs
lock
pop
jmp
ret
jb
scas
lock
mov
imul
loope
fwait
aam
or
scas
mov
cmp
jno
mov
mov
push
adc
inc
sti
movs
or
mov
inc
pop
repz
call
inc
pop
dec
or
in
xor
loope
adc
test
out
mov
dec
jg
xchg
out
xchg
sbb
pusha
outs
leave
int
mov
pushf
mov
cmp
inc
(bad)
sub
das
aaa
cmp
inc
inc
xchg
add
movs
fadd
lods
mov
jbe
repz
or
das
pop
xchg
addr16
xchg
retf
lock
mov
stos
mov
fdivr
dec
ins
jbe
fld
imul
dec
shl
sub
xchg
or
int
fwait
int3
and
jg
pop
xchg
dec
jnp
shl
mov
xchg
xchg
cld
mov
out
cmps
lahf
je
repnz
popf
scas
jae
mov
mov
sbb
push
leave
jbe
leave
push
push
mov
das
sbb
mov
mov
(bad)
xchg
sti
repnz
pop
xor
out
sub
or
mov
xchg
jmp
aaa
lds
stos
mov
sub
jo
sbb
je
mov
cmp
adc
sub
ror
je
ss
xchg
out
jae
cmp
inc
jbe
xchg
je
push
shl
dec
push
les
or
sbb
and
inc
mov
aam
in
test
mov
jge
retf
cmps
xchg
outs
or
xchg
cmps
mov
xor
test
mov
arpl
data16
add
mov
adc
fwait
add
dec
in
and
jb
jnp
mov
adc
enter
das
xor
mov
ins
fimul
data16
bound
dec
xchg
sahf
sbb
ss
cmps
push
sub
ins
xchg
pop
push
int
(bad)
faddp
ja
fldcw
cli
mov
dec
test
fadd
out
and
clc
ins
out
int
arpl
push
inc
fild
repz
leave
scas
sub
retf
scas
lock
in
sub
nop
sub
popa
push
int3
xchg
(bad)
clc
out
out
inc
xchg
imul
pop
in
mov
ja
jle
es
stos
fnsave
and
pop
dec
ds
mov
mov
pop
js
out
cmps
pushf
add
sub
in
mov
sbb
cmc
cli
jb
pop
out
pop
out
adc
and
dec
leave
pop
cmps
in
pop
push
mov
push
sub
mov
xchg
leave
push
loope
in
jbe
mov
gs
cs
push
into
lea
ins
push
or
xchg
jbe
lahf
xchg
mov
jb
jbe
imul
in
push
mov
sub
sbb
jns
sub
sub
jbe
inc
fst
(bad)
jo
mov
pop
mov
test
ja
sbb
imul
sub
add
ja
jb
mov
outs
imul
cmp
xchg
retf
ins
mov
jle
mov
cmp
and
stos
push
ss
pop
gs
outs
cwde
jnp
fwait
out
ins
adc
push
push
inc
cmp
std
xchg
and
enter
sub
cmp
push
mov
jbe
inc
mov
add
dec
repnz
push
cmps
mov
sahf
gs
dec
xchg
popa
pop
jb
xchg
repnz
loop
mov
xor
mov
pushf
xchg
jp
loope
outs
clc
in
cli
push
ret
out
and
or
cli
xchg
xor
out
in
xor
js
idiv
not
pop
sbb
scas
iret
lods
pop
cwde
xlat
mov
cmps
mov
pop
xor
call
mov
xchg
sub
xchg
in
movs
xchg
out
shl
cmps
sub
dec
mov
into
inc
mov
xchg
pop
dec
(bad)
dec
jno
cmp
js
daa
leave
push
bound
pop
aam
ret
fisttp
sti
jb
push
ins
ja
dec
xchg
hlt
sahf
popf
jge
lds
ins
lock
ja
out
test
mov
jb
inc
fcom
stc
pusha
scas
pop
lahf
or
mov
mov
jecxz
loop
pop
popa
jne
icebp
outs
jno
dec
cmp
popf
cmps
popf
retf
jno
xchg
dec
ja
dec
(bad)
sbb
xor
inc
pop
jle
push
ja
(bad)
cmps
arpl
pop
fistp
inc
out
sti
mov
sar
es
shl
jmp
popf
push
mov
push
ja
jne
xor
pop
dec
xchg
inc
fistp
frstor
push
cmp
(bad)
jecxz
inc
mov
jae
lods
in
mov
push
ins
(bad)
mov
outs
(bad)
loopne
imul
xchg
or
ror
and
pop
push
xor
retf
dec
ins
add
jns
xchg
sbb
out
dec
(bad)
mov
das
jnp
lds
add
sbb
movs
and
xor
movs
xchg
pop
inc
push
mov
push
xchg
pop
inc
and
adc
ins
fdivr
xor
cmps
pusha
push
(bad)
cmps
jge
lds
shl
movs
mov
stos
shl
mov
cmps
sub
ja
mov
cmp
js
and
fbld
cwde
stos
or
jg
add
jge
shl
mov
or
pop
jo
inc
stos
ins
sar
outs
fcomp
sub
pop
cmp
inc
gs
sub
addr16
add
imul
outs
rcr
test
mov
add
(bad)
sbb
xchg
rcl
sub
mov
repz
loopne
sbb
sti
xadd
dec
into
xlat
inc
test
xchg
lods
test
pop
dec
adc
arpl
sub
add
test
repz
(bad)
and
adc
div
jnp
pop
(bad)
cmp
dec
test
dec
lea
out
xchg
fstp
imul
cdq
fsub
jge
outs
(bad)
cmp
ret
outs
pop
movs
sub
add
and
adc
or
daa
add
mov
mov
push
pop
adc
push
cmp
mov
ud1
gs
test
fwait
mov
dec
push
mov
leave
sub
push
ror
lock
mov
jns
xchg
fst
fild
retf
or
mov
cwde
mov
inc
jge
mov
push
inc
push
in
fs
mov
shr
int3
adc
pop
mov
mov
pusha
fnstsw
pop
mov
mov
mov
mov
and
sbb
adc
js
or
xor
ret
cmp
adc
arpl
sbb
dec
fcomp
stc
and
popf
cs
scas
or
enter
loope
xchg
out
xor
or
sub
sub
imul
and
jl
daa
xchg
dec
hlt
add
push
mov
ins
mov
movs
xor
push
sub
in
sbb
push
or
xor
rol
in
inc
jecxz
fld
and
mov
cs
outs
das
cmp
dec
(bad)
and
or
inc
xor
and
sub
fsub
pop
and
pop
mov
push
jge
xchg
mov
nop
pop
jmp
add
and
aaa
ret
ja
sub
ror
xor
sbb
push
pushf
jp
aaa
cld
jbe
pop
jb
daa
popa
dec
xchg
lds
call
shl
jno
sar
ret
mov
adc
scas
xchg
mov
in
dec
hlt
sub
pop
push
or
cmp
cmp
mov
mov
inc
cmps
lods
or
jb
(bad)
xor
and
popf
ret
add
fucomi
and
jmp
mov
bound
pop
dec
pop
cs
cmp
pop
jo
or
and
ss
dec
jae
inc
jno
xchg
pop
mov
mov
push
ror
stos
js
aaa
shl
retf
mov
aad
(bad)
in
pop
out
clc
and
sub
aam
rol
push
pop
dec
push
or
xor
mov
add
(bad)
push
nop
and
out
mov
pushf
aaa
loope
cmps
ds
ds
mov
cmps
xor
jge
ret
ja
push
retf
arpl
call
jae
sar
xchg
pop
in
movs
dec
jo
inc
pop
sbb
jb
out
pop
scas
xor
arpl
ret
fbstp
mov
pop
jbe
mov
xchg
lock
ja
mov
mov
into
mov
mul
lods
out
lea
enter
xchg
div
push
in
sbb
retf
mov
lock
or
pop
retf
pop
pop
mov
adc
nop
xchg
retf
push
xchg
sub
imul
ret
mov
imul
scas
loop
rcr
pop
adc
ret
mov
jbe
(bad)
xchg
scas
fsubr
(bad)
sbb
or
cmps
bound
imul
jno
push
ins
dec
cdq
pop
lods
sbb
icebp
xchg
addr16
test
mov
fsubr
shl
lds
mov
call
and
mov
ss
mov
or
int
xor
ja
dec
fidiv
out
and
cmps
movs
call
retf
xor
test
xor
pop
out
dec
xor
popf
das
leave
mov
lahf
js
and
outs
in
cmps
clc
loopne
mov
and
mov
pop
xor
loop
inc
clc
mov
mov
cmp
pop
(bad)
ret
mov
or
adc
inc
leave
dec
mov
adc
(bad)
shl
mov
(bad)
fmul
fistp
xchg
idiv
mov
cli
adc
call
xor
fcmovnbe
dec
mov
arpl
sub
xchg
jecxz
lea
fs
lods
aas
das
jno
cmp
outs
test
out
(bad)
retf
mov
add
xor
add
pop
or
popf
add
xchg
or
jae
fsubr
popf
jb
lock
cmp
aas
jge
pop
sbb
movs
pop
jmp
mov
std
lea
pop
mov
mov
pop
shr
push
or
scas
iret
dec
sub
imul
pushf
mov
movs
addr16
pop
push
test
retf
adc
mov
and
cmp
dec
fsubr
int3
xor
imul
pop
jl
dec
inc
out
jecxz
ins
mov
adc
das
je
mov
int
js
inc
xchg
jb
lea
jge
inc
xchg
jmp
or
addr16
push
loope
adc
pop
sub
pop
dec
xchg
mov
mov
push
ret
jecxz
in
mov
inc
addr16
imul
mov
adc
and
fucomi
in
ret
scas
inc
je
adc
inc
cmp
push
stos
in
dec
into
pop
sub
mov
rcr
scas
pop
mov
mov
xchg
shr
xchg
inc
mov
xchg
push
jb
and
mov
jmp
inc
shrd
or
xchg
retf
data16
mov
dec
rol
ins
jle
aam
adc
retf
mov
retf
in
pop
xchg
sbb
jns
es
and
inc
jle
test
int
sqrtps
ds
(bad)
test
pop
ret
test
xor
adc
retf
and
rcl
mov
pusha
mov
idiv
lahf
aaa
mov
mov
test
test
or
mov
mov
inc
jb
das
popf
movs
push
addr16
out
ins
and
inc
cmps
ja
fist
sub
mov
jb
push
push
ror
cmp
xchg
mov
xchg
loopne
pop
out
sbb
loope
push
jge
push
cmp
ror
stos
std
ret
push
jo
dec
clc
retf
mov
adc
mov
dec
cmp
out
movs
xchg
in
mov
outs
jl
dec
mov
dec
and
xor
jno
outs
fistp
jle
fldcw
inc
mov
mov
aaa
fs
or
push
push
adc
ja
xor
retf
sahf
dec
out
fiadd
cmp
push
mov
xor
push
mov
enter
rcl
cmp
xchg
xchg
ret
cmp
and
out
xchg
mov
out
inc
mov
ins
ins
retf
xchg
dec
push
popf
xor
pop
sar
leave
imul
inc
ror
fnop
pop
shl
jns
movs
(bad)
ins
mov
mov
mov
add
adc
jp
icebp
pop
hlt
popf
sub
in
pop
mov
dec
lock
fs
mov
dec
cmp
sub
sbb
stos
xchg
adc
push
fucom
sti
xchg
imul
lock
ret
mov
mov
xchg
mov
nop
pop
jmp
fwait
repz
int
hlt
cmp
push
jmp
shl
and
mov
push
(bad)
sbb
and
icebp
bound
test
ja
popa
push
dec
pop
leave
xchg
imul
and
push
xchg
les
in
sub
inc
jge
and
pop
jge
les
ret
lock
and
cmc
sub
mov
(bad)
jae
jbe
mov
stc
mov
sar
push
ins
push
into
rol
sub
cmc
mov
aam
leave
shl
pop
in
je
push
shr
mov
int3
lock
jmp
iret
push
leave
push
xchg
sub
xchg
(bad)
lea
sti
or
sbb
mov
sbb
jge
xor
das
xchg
push
retf
in
int3
jnp
call
and
leave
jno
dec
(bad)
sti
sub
repnz
adc
cmp
rol
jp
mov
sbb
sub
cmp
nop
jp
sar
adc
push
push
jnp
fist
sbb
leave
dec
lahf
lock
aaa
lods
jnp
jecxz
sbb
sub
arpl
je
pop
loop
pop
dec
sub
xchg
mov
mov
xor
das
sbb
jmp
xchg
dec
aad
jne
inc
stos
inc
xchg
fisubr
daa
push
ror
jnp
aaa
int
loop
mov
dec
fwait
cli
xchg
adc
add
xchg
xchg
sub
xchg
inc
jbe
std
mov
mov
and
xchg
in
jnp
jmp
or
in
pop
jno
movs
or
imul
jne
add
ds
xchg
and
dec
sub
(bad)
or
mov
fsub
cs
sbb
imul
cmp
adc
les
push
cmp
rcr
ja
mov
add
(bad)
stos
jl
data16
sub
mov
(bad)
and
add
dec
adc
ret
xchg
imul
jno
sub
or
mov
(bad)
repz
test
push
push
fnstsw
jbe
dec
xor
inc
shl
sbb
(bad)
pusha
scas
cmp
lock
popf
movs
fwait
(bad)
(bad)
sub
aas
push
xchg
sbb
fwait
enter
mov
mov
ss
jecxz
popa
push
in
mov
scas
mov
(bad)
test
jae
dec
jecxz
pop
mov
dec
xchg
mov
fnsave
daa
repnz
dec
fsub
mov
jnp
movs
movs
(bad)
js
retf
imul
idiv
sub
ins
xor
jns
xchg
add
ins
into
sbb
clc
mov
pop
loop
push
xor
cwde
loop
fild
repnz
lea
test
cs
sbb
(bad)
cwde
fimul
jg
hlt
mov
jb
or
test
mov
test
sub
jns
push
sub
mov
fwait
jo
movs
retfw
fst
sbb
sub
or
aaa
out
test
xor
sahf
sub
xchg
pop
dec
mov
or
mov
std
mov
repz
pop
sub
cmp
adc
pop
mov
push
fistp
(bad)
adc
ds
retf
es
push
mov
push
push
xchg
lods
(bad)
popf
mov
inc
enter
inc
rol
pop
push
sbb
xlat
aas
add
inc
inc
xor
(bad)
sub
sub
adc
loopne
mov
ret
cmp
scas
popf
imul
xchg
movs
test
fld
jmp
call
xchg
dec
xchg
add
jbe
pusha
pop
cmps
ins
pop
mov
lds
retf
das
mov
mov
sub
ror
cmps
movs
inc
cmp
jmp
mov
sbb
mov
push
cmp
mov
rcl
adc
fs
scas
test
dec
loopne
test
xchg
out
xchg
or
xor
test
clc
es
sti
push
ja
mov
mov
fldenv
sbb
jle
and
jge
cmps
sbb
dec
lock
mov
xlat
out
ss
xchg
out
int3
inc
or
xor
scas
lock
mov
popf
mov
jae
cmp
mov
lock
test
ds
xchg
adc
sub
aam
cmps
inc
leave
imul
jl
lahf
movs
repz
jnp
(bad)
xchg
mov
sub
leave
xchg
sbb
cmps
push
push
xor
mov
loopne
cmp
in
pop
daa
mov
xor
jp
pop
dec
aaa
dec
ret
addr16
rcl
mov
dec
movs
fdivr
mov
out
add
sub
sub
stc
push
xchg
cmp
fwait
retf
xchg
rol
les
test
adc
call
cdq
cmp
jb
(bad)
inc
fst
dec
jbe
aaa
nop
sbb
inc
outs
mov
cmps
jl
dec
jmp
sbb
ins
pushf
(bad)
rol
arpl
and
cld
(bad)
xchg
ret
mov
ds
(bad)
mov
psubusb
pop
xchg
jecxz
pop
lock
xchg
pop
pushf
hlt
enter
pop
je
in
sbb
sahf
cmp
push
int
sbb
aad
cmp
or
xchg
arpl
js
arpl
pop
push
ins
dec
iret
jnp
jns
sbb
sbb
popf
daa
rcl
stos
daa
fwait
in
test
es
in
mov
xchg
xchg
or
push
pop
retf
imul
int
push
adc
imul
je
sub
sti
push
jle
adc
adc
pextrw
lahf
ret
popf
push
cmp
push
imul
loope
aam
inc
push
mov
dec
xchg
out
ins
inc
cmp
dec
cmp
dec
adc
repnz
mov
fisub
add
out
jb
outs
jnp
add
int
xchg
int3
call
mov
mov
xchg
mov
ja
xchg
int3
mov
ins
jo
jbe
dec
stos
cmc
mov
loop
out
leave
call
jge
into
out
mov
bound
pop
pop
mov
fsub
les
or
mov
sti
(bad)
xchg
jmp
and
sub
cdq
repz
mov
fs
xchg
mov
cmp
xor
and
ja
(bad)
sbb
jae
push
icebp
jg
pop
cmp
mov
xchg
fst
mov
jl
dec
jbe
out
or
and
cli
test
jmp
pop
(bad)
nop
pop
xchg
xchg
test
fld
mov
ds
movs
mov
ins
adc
pop
cmp
or
(bad)
iret
mov
mov
xchg
xchg
push
mov
pop
sbb
sbb
addr16
pop
xor
lock
sub
js
add
xor
test
pop
leave
xor
push
jae
inc
popf
ss
pop
dec
jae
lock
cmp
jp
mov
mov
es
sub
cwde
mov
cmp
dec
jecxz
lock
into
and
pop
movs
xchg
cmps
and
dec
push
out
lock
or
stos
loop
jbe
adc
mov
popf
jmp
sub
fimul
loop
push
xor
sti
push
icebp
xchg
push
jns
cmp
push
cwde
jecxz
retf
rcl
out
cmp
fcomp
and
(bad)
sbb
test
test
mov
cmp
in
stos
jae
push
mov
into
clc
sahf
lods
(bad)
fldl2t
adc
sub
cmp
xchg
shl
inc
aad
dec
repnz
jbe
xor
fld
mov
inc
cmp
stos
xor
xor
in
rcr
mov
pushf
lahf
fmul
pop
sti
ins
xchg
(bad)
loope
or
jl
enter
mov
lods
in
mov
jnp
lea
aaa
mov
out
xchg
into
in
cs
ret
inc
jb
push
in
pop
jne
xchg
fs
mov
fisttp
sub
dec
mov
mov
push
jle
pop
sbb
mov
ret
ja
aas
dec
inc
cmps
ins
enter
mov
jg
jno
nop
sub
jg
outs
xor
pop
movs
xor
shl
movs
fisub
fnstcw
xchg
sti
out
movs
adc
fild
xor
(bad)
dec
retf
mov
xchg
scas
mov
pop
jb
pop
dec
inc
push
movs
push
dec
xchg
cmps
push
mov
mov
jnp
jbe
xor
fdivr
dec
cmc
xchg
dec
call
in
inc
xchg
inc
xor
sub
lea
jl
mov
shl
gs
scas
mov
push
jmp
ins
mov
pusha
jecxz
xchg
fwait
sahf
push
or
xchg
sub
push
push
and
out
lock
fmul
fimul
dec
xchg
inc
push
jo
popf
outs
ins
data16
idiv
and
cmp
xchg
xchg
push
push
scas
mov
bound
add
mov
lods
fbstp
inc
ja
mov
jb
test
test
(bad)
movs
pop
push
mov
adc
sub
pop
jbe
popa
pop
bound
sub
cmp
out
je
jbe
adc
cmp
je
sub
mov
mov
fwait
push
(bad)
mov
jmp
outs
les
cld
ficom
jecxz
or
xor
clc
ins
inc
retf
imul
lds
test
int
sbb
adc
mov
fisubr
push
inc
xchg
pop
mov
(bad)
sbb
je
popf
jb
clc
mov
sub
ins
ffree
test
jmp
cld
jnp
and
inc
cmp
cmp
clc
sub
idiv
jecxz
cmp
push
jbe
lds
iret
push
rol
pop
cmp
pop
test
mov
cdq
xchg
push
push
scas
xchg
stos
and
sub
mov
xor
fisub
out
or
dec
imul
cli
adc
mov
xchg
xchg
lahf
mov
adc
pandn
sub
clc
out
test
push
and
in
or
ja
jbe
adc
ja
sub
and
xchg
test
stos
jb
ss
cmp
sbb
xchg
mov
fwait
call
dec
lea
enter
jne
in
das
xchg
or
cli
fdivp
adc
and
inc
and
neg
jecxz
sbb
jb
adc
jnp
mov
dec
outs
cmp
fwait
push
mov
pop
repnz
loop
cld
pop
fisub
mov
xchg
arpl
stos
fsubr
mov
test
add
add
dec
mov
jmp
adc
sub
pop
mov
sbb
stos
(bad)
mov
mov
cmp
inc
clc
aas
loope
out
stc
out
(bad)
jle
jg
scas
jg
out
aas
idiv
aas
in
lahf
lahf
hlt
sti
repz
mov
dec
dec
jmp
cmps
cld
repz
in
mov
iret
(bad)
repz
sti
jge
repz
fdivr
idiv
aaa
(bad)
call
jne
jl
(bad)
(bad)
out
out
jecxz
inc
mov
mov
(bad)
mov
cld
mov
scas
out
jge
fbstp
mov
or
jnp
dec
mov
adc
jne
jae
scas
aaa
call
in
pop
sti
cld
mov
jl
fistp
mov
mov
lods
mov
add
loop
jle
mov
cld
mov
cld
cmp
or
sub
cmp
mov
pop
in
movs
out
sbb
outs
pop
repz
retf
fsubr
lahf
jnp
jle
out
ja
xlat
sti
test
mov
bound
clc
repz
mov
std
std
out
fdivrp
into
into
shl
js
pop
(bad)
in
outs
push
(bad)
mov
addr16
jo
sbb
loope
mov
icebp
sahf
sbb
push
in
fild
iret
mov
sti
xchg
addr16
xlat
je
lahf
mov
lods
repz
lods
icebp
lahf
sbb
out
mov
(bad)
dec
fmul
push
xor
retf
xchg
ins
fdiv
pop
ds
jmp
push
cld
sti
rcr
cmp
jg
sub
(bad)
(bad)
jge
mov
jne
jg
jecxz
out
clc
std
mov
gs
cmp
jecxz
jae
cmp
sbb
pushf
mov
pop
adc
ret
xor
pusha
mov
jle
das
out
ja
xor
jo
or
cdq
add
into
clc
lahf
cmp
(bad)
stc
ret
fdiv
aaa
scas
sub
jecxz
(bad)
fidiv
jmp
sti
std
sub
fcomp
lahf
fbstp
mov
rcl
fsub
cmps
ja
mov
fst
div
ror
jns
lock
not
xor
pop
cmp
jnp
jo
pop
in
cmc
(bad)
clc
out
or
iret
sub
push
fadd
jge
mov
jge
in
mov
push
les
(bad)
stos
retf
mov
add
in
std
stos
pop
fisttp
ja
mov
xlat
adc
push
fisub
xchg
mov
xchg
fistp
dec
fcom
cmp
jp
popf
xchg
lock
or
out
js
mov
outs
jl
les
mov
fxch
js
hlt
cmp
jnp
loop
aaa
mov
pop
pop
pop
iret
mov
ins
mov
(bad)
ja
clc
mov
fwait
out
sahf
inc
aam
outs
js
add
es
test
push
adc
es
jge
ja
mov
add
push
je
cmp
in
sub
sbb
xchg
cmp
xor
mov
xchg
add
test
jne
pop
test
fidiv
sbb
xor
xor
out
shl
mov
add
and
cmc
inc
fistp
loope
rol
idiv
stc
out
sti
mov
aas
adc
jg
and
mov
xlat
and
cmp
clc
repz
idiv
mov
inc
pop
imul
add
(bad)
xor
fisttp
ins
fld
dec
cli
pushf
xchg
cmp
out
mov
fdiv
fcom
jle
ret
in
push
ds
jl
(bad)
pop
cmps
cmp
je
sbb
or
out
or
pop
mov
psubusb
sub
ins
mov
mov
jnp
xlat
stc
pushf
mov
pushf
sub
jp
into
sbb
jno
sbb
inc
clc
(bad)
and
idiv
ficom
(bad)
repz
add
cmc
mov
fwait
rcl
pop
inc
mov
dec
mov
fld
or
sub
scas
mov
(bad)
mov
mov
ins
lds
stos
or
popa
dec
jns
or
out
sbb
xchg
ret
movs
test
sub
mov
cmp
add
mov
cmp
jmp
ins
cmp
(bad)
mov
sub
pusha
dec
pop
adc
out
jo
sbb
repz
add
shr
lock
push
mov
push
in
shr
adc
xchg
or
sbb
adc
loope
adc
or
cmps
arpl
or
pop
or
and
cmp
test
ret
fdiv
mov
adc
ret
enter
mov
cmovno
fadd
cs
mov
pop
ret
leave
sbb
into
lea
or
cmp
not
mov
cmp
pop
adc
xor
sbb
mov
jle
push
icebp
mov
imul
aas
add
fidivr
push
mov
cs
mov
ficom
out
loope
fadd
ins
into
xchg
adc
ins
test
xor
fiadd
aam
inc
in
push
xchg
ret
addr16
fcmovnbe
xchg
sbb
fbstp
out
movs
sub
push
fisttp
loope
add
loop
fdiv
scas
imul
jg
cmp
(bad)
es
retf
cmp
adc
inc
pop
jp
sub
pop
push
ret
sti
or
(bad)
push
jle
and
sub
cmovb
adc
push
rol
jo
dec
outs
pop
(bad)
mov
rcl
ja
jge
in
adc
mov
mov
and
inc
pop
mov
in
or
scas
dec
xchg
cmp
aaa
or
xchg
mov
(bad)
sub
dec
call
adc
(bad)
mov
jno
inc
int3
push
jno
push
sti
je
add
imul
adc
clc
xchg
test
pusha
xchg
(bad)
leave
sub
rcr
in
push
lock
ins
sub
push
icebp
aad
in
stos
mov
data16
cmp
xchg
mov
cld
jne
imul
jb
mov
pusha
fild
ins
aad
pop
cmp
mov
cdq
jno
push
inc
xor
add
xor
mov
sub
aas
cmp
pop
nop
jne
int
sub
inc
mov
sub
sar
pushf
rol
repnz
pop
mov
scas
pushf
mov
jbe
out
idiv
xchg
fist
cs
stos
inc
dec
mov
mov
push
jno
fild
inc
xchg
movs
jbe
pop
dec
cmp
fbld
jo
ss
mov
mov
xchg
add
int3
mov
shl
sbb
mov
mov
adc
call
pop
es
(bad)
sub
push
sar
jl
sti
fld
cwde
inc
jno
add
leave
jae
mov
or
lods
in
push
ret
mov
mov
ss
arpl
inc
jo
cdq
adc
popa
sbb
lods
retf
push
dec
lods
jmp
or
add
loop
cmps
mov
dec
jecxz
and
sub
mov
pop
into
push
popa
ror
jle
std
test
std
fdivr
mov
jge
and
bound
bound
push
(bad)
call
sub
rcr
aaa
bound
sbb
inc
aaa
sub
ret
mov
pop
dec
xchg
adc
movs
or
jb
int3
call
jle
push
xor
push
or
push
cmp
cs
inc
sti
icebp
sub
fidiv
jno
mov
cmp
aas
adc
lods
ret
(bad)
(bad)
jge
ss
sbb
pushf
sub
mov
std
(bad)
cwde
sub
retf
clc
fild
jecxz
pextrw
and
into
popa
push
or
test
xchg
push
sahf
stc
or
ja
repz
push
std
pop
std
shl
push
xchg
jae
fs
push
add
fucom
inc
pop
rcr
(bad)
pop
mov
imul
adc
fcomp
xlat
jae
pop
push
add
clc
push
xlat
jae
js
ins
xchg
xchg
ja
cmp
adc
jno
xchg
test
fwait
push
xlat
call
dec
rcl
or
pop
cdq
add
ret
loop
xchg
cwde
ja
frstor
xchg
sub
fisub
in
cmp
jno
cmp
push
jp
mov
mov
les
sub
pop
lahf
inc
sbb
and
stos
das
cld
arpl
push
scas
jecxz
push
fcom
retf
mov
inc
pushf
rcr
out
(bad)
bnd
pop
ins
xlat
sub
add
mov
mov
jb
mov
pop
test
xor
stc
movs
std
jnp
fwait
cmp
and
xchg
pop
in
mov
dec
icebp
fld
pushf
mov
cli
mov
sub
retf
jo
mov
jo
addr16
lods
sbb
ds
ja
outs
mov
(bad)
enter
iret
in
fwait
mov
cmps
mov
add
jg
cli
sbb
mov
jl
std
or
or
gs
rcr
lods
test
inc
sbb
inc
fcom
and
pop
adc
std
adc
pop
adc
rol
pop
jle
cli
scas
mov
cli
pop
inc
int3
cmp
jbe
or
outs
outs
rol
dec
sub
xchg
pop
jne
sti
sar
sahf
mov
mov
dec
jne
mov
in
mov
push
adc
push
push
dec
test
lds
cld
add
xor
mov
pop
pop
ror
dec
mov
or
xlat
fldcw
mov
dec
rol
or
(bad)
jne
pop
xor
icebp
aas
mov
outs
dec
ret
aam
sbb
lea
add
and
adc
repnz
dec
xchg
xchg
mov
arpl
xor
mov
repz
(bad)
jo
adc
gs
es
xchg
pop
mov
sbb
fidivr
xchg
dec
leave
dec
or
inc
xor
es
loop
xchg
inc
fmul
addr16
add
adc
xchg
in
xlat
xchg
data16
call
pusha
test
add
in
aaa
test
and
jnp
dec
and
out
jb
xlat
jp
sar
stos
inc
push
dec
ret
xchg
fcomi
xrelease
mov
inc
and
push
nop
xchg
jmp
adc
mov
out
popa
push
mov
and
jnp
je
mov
scas
and
xchg
cmp
ja
or
movs
ins
mov
dec
dec
mov
cmc
mov
dec
or
rcl
mov
inc
or
inc
or
xchg
sahf
jmp
loop
jmp
sahf
jb
mov
lods
push
cs
(bad)
push
adc
xchg
data16
aad
mov
mov
rol
not
leave
push
shr
adc
pop
dec
(bad)
mov
sub
(bad)
call
data16
lods
xor
push
push
aaa
aaa
xchg
inc
cwde
or
mov
aaa
test
adc
inc
dec
cmp
cdq
mov
cmps
push
movs
imul
pop
jmp
call
jl
xchg
ins
iret
adc
aam
js
out
xchg
mov
movs
xchg
sub
mov
push
movs
mov
lods
push
push
sti
dec
inc
jns
jbe
mov
or
daa
fldcw
ret
jmp
fdiv
and
mov
dec
fild
div
push
xchg
or
jne
push
inc
pop
int3
xchg
aam
sahf
int
ins
nop
repnz
mov
sbb
and
cmps
mov
xor
pop
or
sub
call
retf
dec
mov
pop
ss
sbb
and
xchg
adc
retf
rcr
mov
fmul
mov
adc
cmp
pop
inc
iret
mov
(bad)
and
into
mov
xor
stc
jl
test
aad
mov
cmp
mov
test
push
jle
pushf
xor
and
rcl
mov
sub
pop
pop
in
out
fdivp
fwait
repnz
fldenv
call
pop
icebp
mov
in
hlt
adc
imul
sbb
cmp
ins
and
or
ret
cmp
mov
out
and
ss
xor
mov
popa
int
push
pop
in
push
push
(bad)
push
movs
cmp
clc
mov
fcmovb
aam
cmp
xor
stos
dec
ror
push
and
jle
call
imul
stos
add
mov
sar
lods
dec
in
je
ja
aaa
mov
lods
es
push
pop
test
pop
call
out
jo
push
and
sub
sbb
mov
nop
jne
jns
aaa
faddp
fadd
stos
mov
adc
in
pop
mov
xchg
push
adc
mov
pop
xchg
push
pop
sub
ss
popf
jecxz
mov
mov
xchg
(bad)
lock
cmc
in
and
mov
lods
push
pop
mov
inc
pop
pushf
pop
scas
inc
push
leave
mov
clc
cmp
js
xchg
inc
mov
icebp
std
cmp
xor
pop
(bad)
pop
push
neg
sub
jne
or
aam
mul
mov
out
repnz
mov
cmps
push
stc
pop
adc
sub
ret
ins
inc
test
gs
pop
inc
test
(bad)
fistp
mov
and
enter
popf
aad
js
jle
repnz
mov
repz
loope
adc
test
or
scas
imul
inc
ficom
iret
sub
out
lock
dec
ss
xchg
mov
mov
mov
call
and
outs
jno
sub
aaa
imul
pop
jns
ja
xor
je
and
cmps
movs
add
pusha
or
push
push
bound
out
jmp
sbb
(bad)
pop
retf
shld
inc
xor
(bad)
cld
repnz
ja
ja
es
loopne
shr
mov
in
jbe
pop
dec
sub
xchg
dec
mov
push
mov
pop
iret
xor
ja
xchg
clc
cmp
mov
cmc
dec
out
rol
popf
sub
push
into
pop
rcr
xchg
les
jne
out
inc
xchg
cmc
xchg
jl
push
xchg
add
mov
push
mov
jb
xchg
js
xchg
inc
or
and
ret
stc
aam
sbb
pop
retf
adc
sti
or
ret
loop
adc
pop
push
dec
loope
hlt
or
xchg
and
in
push
movs
xlat
ins
cmp
lods
mov
xor
mov
xor
ds
(bad)
lahf
mov
pushf
mov
lock
js
and
test
mov
out
es
ret
mov
xor
out
retf
movs
xor
sar
ss
pop
cli
mov
rol
out
mov
push
into
inc
mov
mov
pop
sar
aaa
leave
(bad)
das
push
jns
or
dec
push
and
dec
or
mov
clc
iret
jg
pushf
retf
and
in
aad
adc
(bad)
sahf
bound
mov
xchg
leave
outs
dec
or
sub
popa
pandn
lods
pop
dec
mov
stos
outs
xchg
pop
test
fst
aam
push
scas
adc
cmps
dec
fadd
outs
scas
push
mov
out
add
hlt
adc
in
adc
in
push
mov
int
ficom
movs
test
adc
push
bound
test
mov
jne
(bad)
push
movs
mov
ret
arpl
mov
lea
ret
ins
fs
cmp
mov
test
sub
je
into
push
xchg
adc
lahf
mov
iret
mov
mov
sub
out
fst
(bad)
jecxz
push
dec
sub
dec
mov
pop
ror
out
and
jbe
out
inc
push
(bad)
rol
and
data16
iret
mov
ins
iret
mov
stos
int
outs
xor
movs
jmp
sbb
jns
pop
es
pop
movs
cli
pushf
mov
dec
test
js
sbb
imul
daa
test
xlat
and
jnp
test
pop
lds
fdiv
lods
int
push
or
cmp
adc
push
xlat
inc
adc
adc
leave
xor
pop
push
ins
push
mov
out
dec
mov
jns
pop
jbe
add
movs
inc
xlat
jne
xchg
out
ins
adc
stc
inc
aaa
push
scas
loope
mov
inc
aaa
xor
push
inc
gs
test
ds
pop
xchg
push
js
or
sbb
movs
imul
clc
mov
mov
mov
jmp
in
clc
std
adc
or
gs
leave
das
fst
pop
mov
xchg
or
aam
popf
or
push
dec
dec
addr16
adc
js
dec
test
push
dec
mov
mov
pop
imul
arpl
mov
pop
push
call
sbb
dec
sub
pusha
fcom
push
dec
gs
arpl
xlat
outs
in
push
jno
es
out
push
xor
test
push
lods
rol
mov
xor
daa
popf
test
and
xchg
and
shr
sub
sahf
adc
sub
or
div
nop
loop
adc
sahf
sti
xchg
mov
test
xchg
test
fisttp
cmps
retf
mov
and
popa
xchg
retf
outs
pop
and
pop
push
hlt
jnp
mov
jae
enter
mov
scas
call
push
jb
push
or
arpl
xchg
jmp
pop
or
repnz
popw
push
pop
add
pop
mov
push
mov
ins
pop
rcl
lods
xchg
arpl
mov
mov
mov
push
mov
pop
inc
sub
xchg
push
xchg
ffree
mov
or
push
sub
push
jbe
push
mov
pop
inc
pop
mov
pop
add
aaa
lods
jmp
gs
sbb
bound
ja
xchg
fwait
cld
(bad)
or
out
jns
hlt
mov
cmps
xchg
js
fldenv
mov
dec
xchg
iret
add
cmps
in
shl
popf
pop
fnstenv
jno
cs
push
pandn
jo
mov
sub
jnp
gs
jl
fild
test
dec
bound
ficomp
nop
popf
cmp
xchg
and
ja
sub
and
popa
mov
ja
stos
movs
fnstsw
mov
mov
pusha
mov
lds
mov
retf
inc
push
jbe
cmps
leave
loope
xor
or
scas
ret
xchg
bound
(bad)
mov
push
dec
lds
iret
pushf
icebp
pop
pop
gs
pusha
ja
lahf
sbb
add
xchg
retf
pushf
mov
ins
test
mov
lahf
mov
xchg
ret
mov
jmp
outs
xchg
sbb
ror
jl
inc
xchg
and
mov
out
cmp
jp
jbe
push
jae
rcr
(bad)
out
push
jnp
outs
cmps
push
jbe
pusha
addr16
or
test
ret
push
clc
mov
sub
psubusb
test
js
jb
std
pop
adc
enter
xor
sar
aaa
lds
ror
and
btr
enter
mov
rcr
pop
xor
js
les
mov
pop
push
into
dec
sbb
imul
push
fxch
dec
hlt
fmul
inc
xchg
out
sbb
dec
jbe
xchg
in
xchg
cli
lahf
xchg
mov
inc
jl
pop
jle
or
lahf
push
loope
jne
push
sbb
or
cdq
xchg
push
and
dec
aam
outs
mov
push
mov
fst
mov
stos
imul
dec
repnz
repz
(bad)
xor
and
lahf
mov
cmps
sbb
imul
pop
out
push
div
xchg
adc
jp
jmp
add
mov
ret
mov
rol
xchg
in
mov
outs
sub
push
stos
cmp
xchg
mov
faddp
xchg
fsub
sub
sub
xlat
inc
inc
shl
ror
xor
mov
mov
ja
cmp
(bad)
or
mov
push
sbb
push
xchg
mov
or
mov
pop
jbe
dec
cmp
xchg
rcr
loope
xor
mul
pop
sub
mov
in
cmps
xor
imul
div
xchg
sbb
jne
pop
xor
or
push
pop
xchg
jo
add
fwait
or
inc
sub
mov
sub
ret
mov
xor
pop
cmps
fs
sbb
stos
adc
push
(bad)
mov
jp
ret
push
dec
pusha
sub
mov
sub
(bad)
lock
sub
inc
sahf
jb
cmps
and
push
jp
sub
cld
nop
cli
in
cwde
xchg
sub
pop
adc
or
jbe
cmp
ins
lds
adc
imul
xchg
adc
cmps
je
pop
cwde
or
pop
clc
push
xor
mov
out
test
ins
outs
cmp
push
cmp
lods
push
bound
push
shl
mov
in
ffree
mov
inc
dec
aaa
movs
(bad)
loope
arpl
cmp
cmps
(bad)
les
stos
test
fstp
mov
sbb
mov
push
mov
mov
xor
fcom
das
adc
xchg
cmp
pusha
push
cmp
mov
xchg
mov
xchg
pusha
lods
push
(bad)
or
jns
hlt
daa
ss
ds
sub
xchg
(bad)
fld
cmp
xor
std
scas
cmp
sbb
loopne
cwde
mov
scas
aas
or
popf
jmp
lds
ds
xor
fwait
sahf
dec
loopne
mov
and
aam
fadd
push
mov
xchg
out
test
mov
xchg
out
mov
pop
sti
cmp
inc
ret
mov
push
cmp
ret
xchg
push
xchg
retf
pushf
inc
jp
test
loopne
sub
xchg
inc
jge
pop
jmp
popf
cmp
ins
cmp
adc
mov
fldenv
test
loop
add
fcom
jno
das
mov
cmps
loopne
sahf
loope
stos
fnstcw
std
test
clc
lods
jmp
popf
mov
xchg
cld
push
movs
push
inc
add
(bad)
jmp
aaa
push
xor
cmp
loopne
fldcw
repnz
std
aam
icebp
(bad)
mov
out
jbe
mov
mov
adc
cs
hlt
shl
sub
fild
stos
push
jp
xchg
hlt
dec
jmp
inc
mov
sub
movs
sar
push
push
loope
test
mov
mov
push
adc
jle
repnz
pop
push
add
jp
fwait
cmp
in
mov
cmp
mov
sub
and
dec
stos
pushf
cmps
retf
push
xor
shr
dec
add
dec
mov
loopne
mov
(bad)
lea
addr16
mul
stos
sub
(bad)
and
inc
or
scas
das
dec
js
es
jmp
aam
repz
inc
icebp
dec
adc
fs
mov
jno
ins
mov
mov
cdq
arpl
push
cmp
push
outs
mov
xor
loop
or
inc
adc
bound
push
or
fist
nop
mov
out
pop
fst
sub
mov
mov
or
push
cli
iret
xchg
mov
push
adc
cli
mov
jb
ins
std
sub
lea
dec
push
push
sub
loope
mov
push
adc
mov
mov
fbld
push
int3
or
push
iret
mov
cmp
dec
rcr
push
dec
xor
(bad)
jmp
pop
sar
dec
in
mov
jge
sub
test
test
(bad)
ja
jecxz
(bad)
iret
or
xchg
arpl
adc
fld
sub
push
cwde
sub
fstp
popa
xchg
sub
push
adc
fwait
sub
pop
ins
loope
lahf
fiadd
push
dec
mov
mov
mov
push
shl
icebp
std
sbb
popf
arpl
dec
imul
add
sub
ss
imul
add
ins
jmp
ficomp
mov
ret
outs
pandn
pop
clc
cmc
es
shl
and
mov
mov
inc
or
dec
ss
test
mov
mov
mov
fs
imul
pop
fidivr
jl
loop
call
dec
push
(bad)
in
sbb
push
jae
cld
fist
mov
imul
int
scas
pushf
or
cmp
in
mov
pop
mov
fcom
jecxz
cmc
mov
addr16
xchg
test
mov
add
mov
mov
gs
cs
xchg
dec
aad
push
xchg
outs
dec
std
jle
out
mov
loop
test
jge
add
dec
dec
gs
ins
ins
or
je
fucomip
lock
icebp
cmp
mov
mov
pop
cmp
loope
int3
into
cmc
inc
retf
pop
mov
fwait
cdq
repz
out
xchg
sub
dec
pop
enter
call
pushf
hlt
push
int3
inc
pop
jle
(bad)
mov
test
push
ss
movs
ss
sub
cmp
int3
and
xchg
das
jne
out
and
xchg
jmp
jp
das
xchg
cli
mov
sub
inc
fwait
movs
adc
jle
sahf
jae
push
addr16
mov
in
cli
dec
jns
pop
in
dec
je
cmp
pop
mov
idiv
scas
mov
test
sahf
mov
nop
sbb
adc
jne
retf
mov
mov
sub
cld
or
pop
(bad)
shl
push
out
push
fwait
fs
imul
jb
dec
jle
pop
enter
fld
xor
fs
mov
dec
xor
cmp
ja
cmp
fsubr
push
shl
aas
cld
out
push
mov
xor
fnsave
jae
leave
add
arpl
repz
pop
cld
shl
fldlg2
push
scas
xchg
or
ficomp
cli
or
out
shl
clc
repz
sub
jbe
inc
mov
adc
stos
je
ret
mov
add
and
xorps
std
test
mov
test
addr16
mov
ret
mov
or
sahf
or
(bad)
cmps
dec
rol
outs
pop
fwait
aam
push
add
inc
js
adc
int3
mov
outs
arpl
pop
in
mov
pop
ret
mov
or
stc
ffreep
push
mov
mov
pop
leave
xchg
lea
movs
nop
movs
mov
or
dec
movs
or
scas
jo
sub
shl
add
jb
rol
lods
repnz
popa
test
xchg
mov
push
dec
out
mov
aam
aam
stc
xor
cmc
popa
inc
xchg
lods
xor
sub
je
mov
addr16
xor
mov
les
ins
mov
out
ins
cmp
cmp
retf
gs
jae
test
fstp
lods
pop
sub
dec
nop
clc
or
mov
and
pop
jbe
std
and
mov
jg
sbb
fwait
mov
sub
mov
ins
cmps
cld
and
add
fs
mov
sbb
stos
sbb
test
fcom
and
or
bound
inc
jb
call
mov
jo
xchg
in
(bad)
push
lods
adc
int
cmp
stos
aad
push
cmc
push
out
scas
dec
outs
xchg
fdiv
fsubr
in
nop
sbb
out
pop
mov
outs
xor
cmps
jae
movs
and
push
fcom
das
test
push
sbb
xchg
pop
xchg
sbb
cmps
or
xchg
xor
sub
dec
idiv
es
popw
add
push
mov
cmc
inc
push
cli
sahf
sub
inc
dec
cmp
pop
movs
jmp
jl
out
push
fincstp
pop
dec
jp
inc
cmps
ins
movs
mov
lock
dec
jl
out
sub
and
dec
push
sub
mov
adc
mov
inc
push
je
pushf
mov
pop
out
xchg
add
call
push
jge
cmp
push
es
xchg
cmp
in
fiadd
rcl
xchg
jle
retf
scas
push
rcr
icebp
sbb
xchg
dec
adc
push
popf
pop
lds
push
and
aad
pushf
mov
out
mov
sub
inc
sub
call
adc
fiadd
iret
pop
lock
les
cmp
push
mov
pop
push
mov
int3
sbb
in
rcr
cli
(bad)
sbb
ret
shl
fdivr
jl
xor
je
stc
neg
mov
adc
push
out
mov
mov
pop
iret
sbb
sub
repnz
mov
xchg
mov
adc
stos
fmul
push
push
sub
push
mul
mov
cdq
test
test
fdiv
ds
jb
adc
inc
pop
loope
mov
bound
shl
rcl
lock
adc
xchg
lahf
lock
scas
dec
fwait
jle
div
aas
cvtps2pi
push
cli
movs
push
mov
ja
push
mov
daa
in
mov
or
or
xchg
or
int3
and
pop
xchg
ret
daa
retf
sub
loopne
adc
mov
and
dec
add
pop
mov
and
push
(bad)
jno
inc
pop
push
(bad)
and
mov
les
cmp
dec
stos
inc
outs
rcl
jb
jbe
gs
inc
movs
mov
fcom
shl
shr
(bad)
push
pusha
cmps
fwait
inc
mov
pop
cli
mov
fmul
lock
mov
test
and
imul
cli
mov
mov
fwait
inc
xchg
inc
jbe
and
sar
loopne
jnp
mov
inc
add
xor
sub
sub
jb
lods
jb
iret
jecxz
gs
push
fmulp
out
lea
movs
lods
sub
cmp
jnp
pop
retf
xchg
mov
int
dec
sahf
aam
sub
test
das
mov
mov
sub
int3
pop
lahf
rcl
xor
add
adc
sub
retf
and
ret
retf
adc
in
or
mov
hlt
rcl
or
jbe
dec
loopne
push
or
imul
cmp
or
and
push
and
mov
and
xor
ins
inc
pop
sbb
in
cs
push
xor
out
out
les
adc
sbb
add
popf
sbb
push
out
dec
adc
in
push
xchg
pushf
cwde
fs
hlt
jns
fild
pop
dec
out
mov
mov
ror
dec
js
pop
jbe
push
cwde
shl
pop
ret
cdq
js
sub
lock
xchg
adc
ficomp
das
pop
adc
js
xchg
or
xchg
cmps
sub
outs
xor
mov
mov
mov
les
nop
xchg
mov
adc
xchg
xchg
fisubr
fsub
ja
inc
push
popf
and
cli
gs
gs
fild
mov
xchg
lods
mov
cmps
sub
mov
or
imul
mov
outs
sti
and
jno
push
icebp
add
out
dec
mov
xchg
call
popa
sbb
dec
ret
scas
imul
aad
push
clc
push
pop
mov
out
int3
dec
jg
(bad)
inc
call
jp
leave
cmps
aam
push
movs
fisubr
lds
inc
pop
sbb
jnp
clc
movs
adc
and
jmp
adc
aam
mov
pop
push
rcr
mov
push
push
ret
xchg
sub
stos
out
daa
fwait
and
mov
and
fsubr
add
push
push
setne
outs
shr
jb
pushf
sub
movs
mov
sbb
sbb
out
push
and
mov
mov
or
fild
jae
jb
lock
js
sbb
sub
dec
addr16
jl
out
pop
jb
int3
sub
out
lods
xchg
test
mov
gs
retfw
(bad)
neg
movs
loopne
out
pop
pop
ret
not
push
in
in
fst
mov
sbb
jmp
add
xchg
dec
loopne
stos
xchg
sub
shr
sbb
push
cdq
in
(bad)
loope
xchg
adc
(bad)
mov
dec
inc
movs
push
gs
js
retf
mov
outs
pop
mov
dec
bound
movs
pop
mov
test
or
cs
stos
mov
xchg
mov
jns
sub
pusha
xchg
ss
sbb
cmp
mov
cdq
ret
aad
xchg
jns
test
pop
pop
mov
lods
das
aam
push
xor
xchg
pushf
les
inc
inc
call
popf
rcr
pop
ret
sbb
inc
fld
xor
and
out
gs
addr16
mov
mov
ins
jp
scas
imul
gs
adc
adc
jmp
push
mov
test
stc
test
fisubr
call
dec
adc
inc
mov
test
test
lock
mul
shl
push
cmp
dec
(bad)
jg
out
mov
adc
ret
mov
mov
(bad)
movs
imul
cmp
in
or
push
xor
xchg
mov
sub
bound
ds
adc
int
jmp
push
fcmovu
add
mov
(bad)
push
test
push
sub
leave
mov
push
and
sub
push
sub
add
or
out
shr
fwait
xchg
mov
pop
adc
cs
push
mov
pop
aad
push
int3
pop
in
popa
cwde
in
jb
and
test
sub
and
xor
scas
pop
dec
mov
not
mov
clc
add
call
dec
xchg
xchg
inc
and
inc
repz
inc
dec
cwde
cmp
fld
fld
cmp
inc
pop
sbb
test
enter
push
imul
xchg
popf
push
int3
cmp
cwde
mov
test
fild
push
adc
fisubr
sub
lahf
sbb
je
sub
(bad)
add
jns
mov
and
sub
mov
mov
lea
push
and
out
imul
and
mov
pop
call
ja
adc
jns
cmp
cld
jmp
or
xchg
jmp
mov
das
stc
push
and
cld
lds
out
push
ret
cmps
(bad)
(bad)
pop
jb
push
sbb
inc
enter
adc
xchg
pop
in
sub
cld
stos
mov
and
adc
movs
cmp
push
movs
stos
into
ds
movs
cli
nop
sub
pop
or
xor
mov
lods
push
fmul
pop
shl
jmp
fcomp
jl
or
cs
xchg
call
sar
cmp
repz
sub
inc
(bad)
mov
sbb
test
ins
(bad)
in
add
fs
mov
arpl
and
jae
out
inc
push
add
fist
xor
mov
movs
inc
push
dec
loop
and
mov
gs
cmps
xchg
adc
xchg
push
(bad)
and
and
test
int3
lock
div
in
mov
mov
push
sahf
pop
movs
cld
(bad)
das
xchg
dec
mov
adc
xor
pop
sbb
(bad)
mov
sub
and
movs
call
jae
cmp
jae
fcomp
icebp
arpl
pusha
xlat
or
and
xchg
push
popa
cmp
ja
fidivr
pop
popa
cld
jecxz
sub
xor
dec
mov
inc
mov
push
adc
das
ds
cli
daa
mov
jp
dec
jns
xchg
pushf
inc
jne
xchg
dec
outs
lds
pop
mov
ja
scas
mov
mov
push
fnstcw
frstor
jnp
xor
mov
mov
or
mov
jno
jae
paddusw
gs
adc
popa
mov
daa
fisub
call
movs
push
out
ret
mov
iret
scas
inc
movs
mov
pop
mov
std
inc
adc
jl
das
mov
cmp
lds
sbb
jbe
mov
and
push
sar
lea
cs
mov
push
popf
(bad)
jns
repz
jecxz
(bad)
and
sub
cmp
push
sub
fldenv
cmp
jl
xchg
ffreep
cmc
retf
ficom
push
mov
pop
pop
jmp
add
div
adc
inc
xlat
and
cs
in
fiadd
shr
test
test
mov
mov
push
pmullw
pop
leave
int
call
ds
movs
pusha
ss
clc
mov
jecxz
push
dec
and
sahf
and
xor
sbb
xchg
enter
les
mov
pop
xlat
ja
(bad)
jo
push
push
jmp
movs
jl
pushf
cmp
sbb
mov
or
imul
shl
(bad)
cmp
stos
xchg
push
out
or
ss
int3
daa
sbb
xchg
xchg
inc
(bad)
pop
push
test
push
stos
sbb
arpl
lock
test
or
enter
pop
pop
or
cmp
xchg
pop
fs
div
jg
in
fs
push
xchg
mov
inc
mov
call
fdivr
xchg
or
sbb
mov
push
movs
test
lods
sub
arpl
cmp
sbb
test
movs
or
(bad)
repnz
or
adc
in
jae
shl
xchg
in
(bad)
mov
cmc
pop
pop
xchg
cmp
fwait
inc
(bad)
sub
(bad)
shl
ret
and
sub
pop
xchg
mov
sub
int3
or
inc
scas
loope
test
iret
lock
cmp
out
test
cmp
jbe
jae
sbb
jnp
or
(bad)
and
inc
sub
js
loop
pop
out
movs
inc
push
inc
fmul
mov
cmp
je
out
sub
pop
mov
(bad)
dec
imul
inc
xchg
shl
sub
xchg
push
sbb
jmp
or
sub
dec
mov
mov
dec
sbb
sub
(bad)
mov
retf
loope
sub
pop
loope
sub
pop
aas
aaa
xchg
enter
pop
push
test
mov
hlt
xor
sbb
test
push
ds
(bad)
dec
mov
sub
cmp
ss
push
pop
rcl
or
fsub
cmps
or
pop
movs
repz
xchg
mov
aam
adc
out
rcr
movs
iret
test
cli
stos
sub
pop
mov
lahf
sti
sub
add
loope
mov
addr16
xor
sar
aad
push
mov
xlat
pushf
cmovge
movs
push
aad
push
mov
and
mov
xchg
add
dec
xor
out
ss
mov
lds
xchg
and
cmp
jo
stos
shl
mov
shl
stc
mov
lods
jne
fidivr
jecxz
push
cmp
outs
jbe
sub
and
xor
ret
xchg
jge
or
test
movs
mov
jle
sub
iret
mov
xchg
xchg
or
(bad)
test
retf
xor
xor
dec
dec
mov
mov
(bad)
push
mov
out
mov
in
cs
cld
loope
out
or
in
ins
xlat
in
dec
cmp
dec
pop
xchg
dec
sub
mov
adc
fldcw
retf
nop
mov
push
rcr
mov
or
addr16
cs
push
push
pop
call
mov
xchg
mov
mov
imul
retf
mov
cs
cdq
leave
fadd
inc
push
push
clc
jbe
loop
add
or
mov
inc
jp
xchg
jl
adc
and
mov
fist
in
aaa
inc
pop
sbb
push
call
lods
addr16
or
jae
scas
fdiv
fild
loope
pop
xchg
sbb
push
cmp
or
loope
cmps
mov
xchg
sbb
xor
pextrw
jnp
mov
add
sbb
jl
xchg
shr
mov
test
pop
gs
test
jmp
mov
int
xchg
sbb
pop
imul
sub
nop
out
sub
fs
mov
sahf
mov
adc
mov
aam
out
jp
mov
cmp
ja
loopne
pushf
imul
sbb
(bad)
cmp
jge
add
nop
xchg
mov
call
jno
jmp
inc
xchg
rcr
fld
daa
mov
xlat
sbb
sbb
dec
push
dec
iret
mov
xchg
loop
in
mov
in
out
jo
test
xchg
ds
pop
movs
test
push
xor
xor
sti
fwait
movs
fwait
movs
cs
sub
mov
out
xchg
shr
sub
push
inc
lods
loope
lea
lahf
movs
mov
js
xchg
mov
call
imul
push
repz
sub
add
jno
fsubr
pop
xchg
popa
dec
adc
mov
pop
adc
dec
test
fdiv
fcomp
(bad)
out
scas
inc
les
stos
gs
(bad)
fadd
mov
sbb
push
jle
ret
mov
out
jmp
repnz
in
pop
pop
mov
mov
sub
fucomi
gs
lock
in
jmp
inc
movs
test
dec
dec
lds
lds
jne
retf
sub
stos
cmps
call
mov
sub
fist
cmc
gs
add
ret
addr16
jae
push
or
mov
popa
fwait
sub
jl
cwde
fwait
es
sbb
arpl
and
inc
clc
loop
or
cmps
mov
or
lock
movs
sub
loope
js
pop
jnp
ja
data16
out
xor
lds
xchg
mov
dec
mov
mov
dec
into
add
fisttp
fyl2xp1
sub
push
mov
std
aad
jae
xchg
outs
sar
jae
(bad)
fcom
cmp
mov
sub
push
mov
push
dec
stc
fnstsw
cld
pop
add
add
(bad)
jl
pop
xchg
hlt
stos
xchg
outs
xor
daa
js
and
jns
jns
out
cs
mov
sub
mul
in
outs
xor
and
mov
sbb
jl
jg
scas
jg
out
pop
jmp
scas
icebp
stc
idiv
iret
push
std
cld
pop
stc
cld
(bad)
(bad)
cld
out
out
out
(bad)
imul
(bad)
jg
(bad)
repz
out
scas
lock
jnp
cld
mov
pop
sar
pop
out
mov
outs
mov
sub
jle
push
(bad)
inc
jne
out
adc
sahf
lahf
inc
mov
mov
iret
idiv
jge
mov
sti
stc
hlt
stc
mov
sti
out
out
jecxz
dec
add
mov
aas
xor
lahf
std
sbb
xlat
cli
sbb
lahf
cmp
lahf
out
js
out
mov
repz
repz
icebp
stc
cld
fistp
jl
(bad)
cld
mov
mov
sbb
ds
jle
sahf
daa
jge
(bad)
mov
iret
lahf
sbb
out
js
das
(bad)
pop
aas
mov
fstp
fistp
cwde
das
shufps
sti
into
cwde
loop
sahf
cmc
sar
lahf
scas
sbb
mov
cmps
(bad)
out
cld
pop
(bad)
(bad)
fsub
cmc
stc
stc
sbb
(bad)
(bad)
cmp
cwde
scas
jg
xor
sahf
aas
jg
jnp
add
movs
iret
iret
push
sub
mov
lock
mov
repz
(bad)
leave
ror
test
frstor
into
test
jne
mov
pop
cld
fimul
mov
repz
pop
enter
imul
test
dec
lods
lds
lods
or
cmp
(bad)
jl
out
daa
(bad)
scas
bound
pop
mov
out
xor
mov
mov
imul
mov
fimul
add
ins
outs
jle
jg
fnstsw
xlat
call
sbb
fwait
pop
push
mov
les
push
adc
dec
inc
sub
xor
movs
test
ja
loop
es
fnstcw
dec
jnp
fistp
push
(bad)
iret
mov
mov
pop
int
lock
inc
loopne
stc
mov
sbb
or
cwde
sbb
push
out
ret
mov
and
push
mov
cmp
adc
out
cli
or
mov
daa
jmp
(bad)
iret
ss
fstp
aas
mov
adc
mov
jno
(bad)
sahf
xchg
adc
les
aas
ins
js
punpckldq
shl
outs
popa
pop
mov
fst
pop
xchg
(bad)
std
aad
stos
mov
inc
pop
mov
fistp
pop
jecxz
pushf
jns
pop
adc
jecxz
xor
mov
mov
xchg
add
cmp
daa
xchg
pop
icebp
mov
in
jg
iret
inc
or
xor
cmp
ret
in
adc
out
(bad)
ds
xlat
inc
pop
aaa
bound
not
xchg
jmp
in
mov
retf
test
icebp
cs
in
pop
icebp
and
push
int3
iret
mov
jno
cmps
(bad)
cmp
sub
pop
enter
sub
ror
imul
cmps
add
pusha
cmp
fcomp
jmp
jae
lds
pop
das
(bad)
imul
cmp
popa
popa
sbb
cmp
ror
mov
and
rep
popa
lea
std
add
(bad)
js
add
loope
and
nop
xchg
repz
xor
test
push
push
in
dec
sbb
cld
sub
jle
dec
sbb
cmp
inc
out
sbb
or
cmp
imul
in
movs
inc
mov
adc
adc
scas
mov
punpckldq
mov
pop
loop
push
cmp
(bad)
fidiv
jge
inc
leave
sbb
out
or
cs
adc
cmp
loope
pushf
pop
add
sahf
js
mov
xchg
adc
mov
retf
jb
out
fisttp
or
retf
inc
mov
pushf
sub
mov
dec
sbb
pop
loop
aaa
(bad)
shl
inc
pop
mov
daa
fdiv
(bad)
movs
and
mov
cmp
mov
cs
mov
or
inc
es
mov
mov
pop
les
call
mov
outs
in
test
pushf
mov
jge
mov
(bad)
cld
cmp
adc
aad
aaa
ficom
ins
pop
mov
cmc
retf
stc
inc
ins
pusha
imul
dec
es
dec
repz
add
pmullw
or
out
sbb
jbe
es
clc
mov
out
scas
mov
enter
(bad)
cmc
pop
les
pop
pop
int3
mov
out
mov
test
in
retf
fist
add
add
mov
aas
mov
int
arpl
neg
pop
not
jo
or
(bad)
mov
out
jecxz
inc
mov
das
xchg
(bad)
xchg
jns
lds
mov
and
test
stos
and
aam
fstp
out
loope
push
into
(bad)
push
cmp
pop
jle
(bad)
or
adc
int3
sub
dec
int3
mov
mov
and
idiv
out
ret
inc
mov
lock
bound
(bad)
mul
sub
inc
(bad)
js
lea
mov
iret
push
loope
psrad
lods
fidivr
(bad)
iret
ins
ret
aad
int3
xchg
pop
mov
not
aaa
adc
xchg
xor
stos
cmp
lds
mov
mov
(bad)
call
inc
(bad)
iret
jno
jno
repnz
mov
jl
inc
sbb
ret
fst
mov
les
pop
pop
cwde
push
sar
mov
push
mov
inc
(bad)
ds
jmp
ja
sbb
cmps
mov
lods
fidivr
into
jae
push
push
mov
scas
sahf
in
test
xor
mov
(bad)
cmp
jnp
mov
bound
call
stos
out
ss
enter
stc
sub
loopne
call
ret
adc
mov
adc
pop
(bad)
cld
xor
dec
cmp
sbb
iret
cmp
mov
mov
dec
push
wrmsr
fistp
fbstp
sbb
js
pop
sbb
cmp
pop
aas
add
push
ret
daa
xor
xor
ret
dec
dec
in
pop
jb
pop
arpl
cli
sub
call
xchg
inc
inc
jl
push
xor
and
repz
mov
clc
ss
call
les
dec
lods
xor
ret
popa
add
pop
aad
jns
mov
cmp
mov
push
(bad)
fidiv
pop
sti
sbb
mov
stc
xor
daa
jae
mov
xchg
jmp
repnz
push
pop
call
daa
loop
imul
movs
test
push
sub
lods
ds
fst
adc
dec
push
mov
cwde
iret
fsub
out
and
(bad)
out
icebp
lahf
push
test
and
and
cmp
les
popa
cmc
push
pop
(bad)
adc
mov
mov
or
and
sub
sub
push
sub
cmp
rcl
(bad)
push
cmp
adc
arpl
js
dec
mov
inc
or
inc
outs
pop
fidiv
mov
xchg
jmp
mov
clc
push
sub
dec
pop
cmps
loopne
mov
(bad)
push
retf
mov
xor
adc
ja
sub
pusha
pop
dec
enter
lods
jg
scas
or
xchg
bound
stos
popa
jnp
mov
cld
das
push
pop
adc
inc
cmp
clc
dec
inc
or
lods
test
icebp
sub
in
faddp
sub
dec
inc
or
into
xchg
and
aaa
mov
retf
sub
fdiv
pop
pop
or
fidiv
dec
das
into
adc
cmps
dec
lahf
adc
xchg
xor
test
push
lea
and
mov
movs
mov
in
dec
dec
dec
pop
pop
fcmovb
mov
push
adc
ds
mov
pop
bound
pop
inc
lods
call
sub
imul
push
mov
outs
movs
dec
push
nop
aad
cmp
xor
push
stos
or
aam
sub
fiadd
sbb
add
mov
cmc
aas
add
mov
sub
sbb
and
rcr
mov
adc
push
adc
inc
push
punpckldq
das
pop
xor
scas
repz
xchg
repnz
retf
pop
fwait
ror
retf
into
mov
fild
dec
in
push
rol
sub
icebp
sar
or
jl
pop
ins
enter
stos
test
sub
inc
sub
(bad)
xchg
and
add
mov
aaa
jb
and
dec
xor
stc
les
xor
xor
out
movs
out
or
sar
pop
jnp
div
pop
xor
mov
cmps
jns
fwait
fwait
jle
add
mov
dec
gs
loop
out
pop
mov
xchg
inc
nop
out
jmp
cmp
add
mov
das
jp
(bad)
sub
ins
or
sub
lds
ror
cmc
push
mov
push
jo
adc
push
and
pop
push
mov
xor
out
je
mov
hlt
and
mov
mov
jns
dec
inc
sar
push
outs
sbb
lods
sub
sub
cs
std
or
loope
int3
clc
push
mov
fadd
out
les
idiv
scas
test
fbld
clc
xchg
sti
js
add
add
sub
inc
xchg
hlt
aaa
dec
scas
xchg
inc
mov
push
movs
mov
sti
push
div
push
loop
ins
or
pop
pop
jnp
sub
imul
mov
mov
adc
jb
popf
aas
xchg
adc
daa
out
test
sub
lea
and
mov
adc
call
popa
jl
cmp
adc
lock
lods
ret
inc
mov
imul
mov
push
scas
adc
imul
xchg
fadd
dec
(bad)
cwde
lock
das
dec
xchg
jae
not
imul
fwait
or
sub
outs
xor
jb
test
pop
fwait
jl
push
jne
ss
xchg
xor
enter
mov
sti
push
(bad)
mov
pop
adc
push
in
(bad)
pusha
iret
es
adc
or
mov
les
ret
sub
out
int3
out
xor
cs
sub
int
mov
jle
ja
fidivr
es
ds
sub
add
adc
mov
fldpi
push
dec
pushf
cwde
cmps
leavew
cmp
and
mov
fsubr
dec
(bad)
pop
inc
inc
ins
sbb
fs
jne
mov
jb
sub
fcmovnbe
test
adc
(bad)
pushf
out
sbb
loop
dec
repnz
sbb
aas
sub
pushf
das
dec
adc
and
xchg
cs
jno
pop
mov
mov
movs
and
movs
sbb
retf
and
mov
pop
xor
xchg
(bad)
jb
mov
gs
xchg
and
cdq
enter
loop
jmp
mov
fdiv
leave
clc
call
mov
mul
sbb
mov
mov
test
push
push
jle
inc
xchg
inc
mov
dec
inc
repnz
imul
pop
jb
push
ss
outs
retf
outs
in
inc
xor
je
jno
and
imul
stos
outs
add
in
(bad)
jne
popf
and
lahf
js
js
movs
lock
mov
sti
popa
(bad)
pop
loop
adc
xchg
and
or
mov
xor
inc
adc
(bad)
adc
mul
fldcw
popa
pushf
and
mov
xor
jmp
out
mov
adc
cs
sbb
dec
push
mov
xchg
popa
arpl
and
fbld
shl
in
xchg
pusha
push
sbb
(bad)
add
mov
fs
jb
cmps
cmp
inc
jb
and
gs
lea
jecxz
pop
adc
(bad)
xor
pop
sbb
cwde
pop
cwde
dec
pop
cwde
mov
lock
inc
test
jno
sahf
dec
cdq
jl
sbb
push
mov
or
ins
cmp
iret
sub
out
sbb
js
js
xchg
and
leave
cs
vorpd
push
imul
aaa
xchg
mov
pushf
xchg
pop
xor
cmp
and
movs
shl
clc
mov
sub
ficomp
add
shr
and
dec
jns
popf
and
push
xor
mov
jmp
stos
adc
dec
pop
outs
rcl
into
in
push
push
add
out
jb
movs
pop
cmp
mov
lea
push
jecxz
loopne
fiadd
adc
xchg
loopne
sbb
aad
iret
jp
call
mov
mov
repnz
out
out
push
pushf
jb
inc
rcl
movs
aam
sbb
(bad)
xchg
test
loop
ret
test
mov
dec
jmp
sub
pop
push
lea
in
mov
shl
outs
inc
xchg
out
xchg
ins
bound
push
pop
fwait
adc
xchg
test
repz
and
setbe
int
ja
adc
inc
cs
push
sub
cmp
xchg
int
pop
out
adc
inc
mov
test
xor
mov
sub
mov
xchg
lock
dec
rcl
jecxz
add
mov
pusha
mov
jge
sbb
adc
into
xchg
std
fdiv
xchg
lea
jmp
cmps
sbb
push
popa
rcr
adc
dec
jmp
xchg
test
dec
repnz
mov
dec
dec
xlat
and
int
xchg
hlt
rcr
xor
in
scas
push
xor
je
pop
inc
jae
scas
or
not
cli
jl
dec
mov
stos
test
shr
dec
inc
nop
dec
adc
xor
sub
popf
sbb
es
shl
mov
dec
sub
sar
sti
shr
adc
movs
les
retf
push
outs
adc
dec
stos
dec
popf
mov
and
jo
push
sahf
push
mov
pop
sbb
push
movs
inc
push
scas
jo
cli
(bad)
xchg
jnp
dec
adc
add
xchg
dec
je
push
jmp
sar
clc
out
mov
and
shr
sti
lea
nop
jl
jmp
fld
mov
or
pop
and
push
out
aam
sar
es
nop
cld
jecxz
cmp
pop
in
lahf
push
lahf
das
retf
mul
push
mov
and
cs
mov
pop
cs
mov
push
jae
and
dec
retf
(bad)
cmp
fsubr
push
dec
addr16
aas
call
cld
ss
outs
jne
pop
mov
sti
es
ficom
mov
cmps
loopne
mov
ss
inc
stc
inc
push
sub
push
cmp
adc
jmp
sbb
dec
adc
fstp
and
pushf
adc
sbb
jno
and
jne
retf
icebp
adc
mov
call
dec
ror
enter
push
cmps
sub
sar
cwde
pop
xor
stc
inc
xchg
jne
ja
sub
mov
xchg
lea
pop
daa
in
cmp
inc
dec
xchg
shl
dec
retf
cmps
popf
lock
and
idiv
mov
inc
int3
leave
or
jae
hlt
dec
push
fsub
jle
enter
out
inc
scas
cmp
rcl
sub
ins
push
dec
jno
push
xchg
dec
repnz
stos
cli
xchg
lea
pop
fistp
dec
mov
dec
arpl
sub
es
add
faddp
sub
jbe
or
gs
test
xchg
cs
pop
(bad)
aad
cmp
sar
push
push
out
dec
cmp
inc
push
adc
xchg
add
xchg
mov
jge
lods
pop
cmp
sbb
and
ins
add
(bad)
ja
sub
sbb
out
(bad)
pop
cmp
lods
jb
jb
(bad)
sbb
add
jbe
push
push
mov
push
lods
cmps
sub
mov
add
daa
and
shr
dec
push
and
sbb
pop
cmp
repz
lahf
mov
pop
retf
sbb
leave
inc
outs
ins
jns
cmps
xchg
movaps
out
(bad)
loop
mov
mov
push
out
push
inc
mov
add
xchg
imul
pop
jmp
ins
adc
daa
push
push
(bad)
loope
cmp
cmp
sar
jo
cs
fcom
jle
and
jb
jbe
jno
cdq
out
out
xor
mov
sbb
test
pop
in
gs
outs
mov
daa
sub
xchg
mov
xchg
imul
into
test
sub
mov
outs
adc
in
jg
jecxz
movs
jmp
push
mov
sub
adc
pop
test
ficom
inc
in
xor
xor
inc
pop
jbe
push
mov
pop
mov
push
dec
mov
adc
(bad)
(bad)
fisub
push
(bad)
fild
es
fcomp
jns
out
ins
mov
sub
outs
xchg
pop
das
dec
xchg
xchg
out
scas
mov
ret
repnz
and
dec
jae
cmp
mov
xchg
fwait
jbe
sub
cwde
sbb
and
icebp
fst
neg
lds
push
ss
sub
push
iret
cmps
ds
pop
sub
cmps
xor
loop
out
pop
mov
xchg
mov
mov
movs
lods
cld
push
push
xor
push
mov
fs
imul
cmp
ins
pop
mov
lahf
fst
mov
and
dec
sbb
movs
stos
test
mov
xchg
arpl
mov
or
outs
stos
sbb
jecxz
xchg
adc
gs
(bad)
and
in
cld
dec
sub
dec
mov
or
shl
cli
dec
(bad)
outs
mov
ins
movs
sub
jecxz
arpl
adc
dec
jnp
icebp
fucom
aas
dec
mov
in
xchg
(bad)
bound
shl
sub
in
fsubr
sbb
test
dec
xchg
mov
or
in
push
mov
test
mov
mov
push
jno
rol
movs
xor
ins
mov
test
xor
movs
call
imul
xchg
mov
in
pop
daa
pop
rcl
icebp
pop
movs
push
dec
add
and
(bad)
das
test
cmp
xchg
in
sbb
xchg
dec
(bad)
pushf
pop
pop
outs
(bad)
pop
cmc
dec
mov
inc
inc
cmc
dec
push
inc
nop
inc
ss
pop
push
gs
pop
clc
stos
jl
sbb
iret
dec
mov
movs
sbb
inc
cwde
outs
mov
dec
jecxz
test
sub
inc
dec
and
aaa
sbb
inc
shl
xor
xchg
xor
cmps
push
jns
retf
xchg
inc
fadd
ja
fidiv
pop
push
inc
dec
or
cmp
das
cmp
sub
imul
dec
in
outs
add
push
mov
pop
in
das
mov
push
out
js
jb
sub
adc
add
xchg
jecxz
jmp
xor
sbb
push
retf
xchg
push
xor
sbb
mov
mov
daa
lds
mov
cmp
retf
add
ret
push
call
adc
sub
jmp
outs
adc
in
movs
jge
inc
jno
in
mov
mov
add
pop
push
jl
ja
in
push
dec
sar
xchg
or
(bad)
mov
pop
mov
aam
push
mov
cmp
aaa
out
adc
mov
adc
dec
leave
xlat
inc
mov
clc
in
xor
push
rcr
adc
test
in
cwde
sbb
out
(bad)
inc
jp
or
sahf
and
imul
mov
or
in
dec
push
and
bound
enter
movs
adc
sub
sbb
aaa
sbb
cmp
sbb
cmp
(bad)
fwait
icebp
sub
in
je
xchg
dec
pushf
xchg
adc
sub
push
jle
cwde
ja
dec
mov
sbb
shl
push
dec
adc
fs
xor
adc
aad
xchg
dec
nop
mov
loopne
jle
mov
jecxz
adc
mov
or
in
push
xchg
and
in
mov
inc
xchg
sub
adc
imul
cmc
xchg
pushf
call
ds
sbb
xchg
ja
lds
mov
xchg
inc
stc
cmps
mov
aas
push
push
test
arpl
icebp
jnp
leave
sub
js
in
push
xchg
dec
ret
mov
pop
mov
outs
js
mov
mov
and
gs
mov
mov
cmp
mov
pop
dec
scas
movs
cmp
xchg
sbb
dec
(bad)
out
ror
dec
ja
mov
adc
loopne
inc
int3
mov
icebp
jnp
fstp
(bad)
hlt
popf
and
div
movs
dec
lods
mov
push
pop
inc
call
icebp
clc
in
ins
inc
call
sbb
pop
push
adc
or
xchg
lods
psubusw
fs
cld
fs
in
pop
lods
int
pushf
xor
call
stos
(bad)
div
jo
mov
mov
jmp
mov
les
dec
add
fs
int3
data16
jb
xor
jnp
aas
(bad)
test
(bad)
sub
ret
aam
movs
and
sbb
sbb
cmp
outs
push
mov
inc
rcl
jge
lds
sub
ret
sub
xchg
xchg
repnz
stos
std
int3
shl
pop
sbb
jmp
xor
loop
test
sub
adc
stos
pop
(bad)
pop
aam
xchg
jecxz
cld
mov
dec
mov
xchg
mov
adc
dec
int
test
psubsb
jb
sti
rcr
mov
test
xchg
shl
out
data16
mov
shr
out
bound
xchg
out
outs
out
push
fiadd
lahf
and
sub
push
in
xchg
sub
pop
in
icebp
jge
es
nop
dec
xchg
xor
lods
mov
movs
jae
adc
lods
ins
jb
retf
ret
fwait
push
ja
lods
mov
xor
cmps
mov
xchg
fs
sub
mov
sub
jbe
fisub
sub
popa
fidivr
sbb
ror
iret
cwde
ret
dec
xor
inc
(bad)
out
test
jmp
icebp
push
out
icebp
jge
pop
adc
mov
pop
addr16
cmp
lods
jp
sub
nop
in
ins
leave
ss
mov
(bad)
sub
ret
pop
mov
enter
jg
push
mov
cdq
pop
mov
sahf
dec
jbe
push
out
enter
push
xchg
clc
xchg
sub
les
pop
cmp
mov
fiadd
push
lods
sbb
mov
sub
clc
dec
int3
jbe
mov
fild
cmps
xor
hlt
jecxz
jl
and
sub
cmp
shl
cmps
es
mov
mov
inc
inc
dec
jge
inc
(bad)
retf
push
loopne
jle
movs
mov
div
test
jecxz
sub
xchg
movups
clc
dec
out
cmp
jo
in
cmp
lea
xlat
scas
mov
test
pop
push
pop
inc
int3
lock
pop
js
sti
ins
push
jmp
sahf
inc
push
adc
fnstsw
mov
call
movs
retf
sub
addr16
ss
mov
outs
inc
sbb
push
outs
pop
push
dec
push
inc
push
std
clc
outs
nop
jns
in
rol
xchg
aam
test
mov
xchg
push
and
in
push
push
movs
cmp
clc
addr16
gs
rol
mov
add
repnz
call
sbb
mul
sbb
jno
cmps
fisub
pop
pusha
aad
cmp
sti
es
adc
push
ret
test
call
sbb
adc
xchg
add
clc
push
push
cmp
push
pushf
jb
icebp
jge
movs
test
or
inc
mov
mov
cmp
jle
xor
mov
push
fsubr
sbb
jmp
mov
sub
jo
fild
loop
and
sub
jb
ja
mov
mov
call
mov
bound
test
popf
cli
pop
imul
sub
inc
xchg
sbb
sub
xor
fwait
fwait
xchg
mov
lahf
xchg
sub
mov
mov
les
mov
jecxz
jnp
adc
mov
sbb
xlat
mov
pop
test
dec
and
mov
rol
pop
inc
jns
jmp
cmc
into
sahf
lea
push
fist
mov
jae
cmp
xor
mov
sahf
and
int3
sbb
pop
add
or
xor
test
bound
push
xor
ss
sbb
sbb
mov
sar
jl
xchg
jl
jnp
and
sub
out
jecxz
mov
ffree
rcl
push
retf
mov
xchg
or
lds
jecxz
xchg
inc
mov
cmp
xchg
xchg
mov
xchg
mov
push
dec
aam
iret
sbb
movs
pop
push
(bad)
into
mov
in
dec
repz
imul
pop
fild
cmps
lods
cld
int
cli
mov
mov
cdq
or
ins
jbe
mov
inc
sbb
sub
imul
icebp
stos
in
push
mov
sbb
push
adc
xor
cmp
test
cmp
leave
outs
fwait
push
pop
stos
xor
ret
push
out
fstp
or
mov
push
inc
std
stc
add
sbb
out
ror
jp
jecxz
sbb
into
cmps
test
rol
cmp
icebp
fst
ss
xchg
mov
dec
leave
test
pop
mov
icebp
mov
pop
cmps
inc
out
xchg
mov
fwait
in
and
repnz
sub
adc
push
mov
movs
and
fsubrp
or
into
mov
pushf
sbb
dec
sbb
out
shr
test
jge
dec
xchg
adc
not
loop
cmps
pop
push
es
cs
inc
mov
(bad)
pusha
mov
sub
mov
stos
jnp
jp
std
jle
sahf
mov
out
and
jecxz
dec
mov
push
push
mov
ins
idiv
push
je
(bad)
cli
and
mov
fistp
das
mov
out
sbb
push
mov
int3
js
and
jmp
out
cs
xchg
pop
repz
jle
fwait
retf
lahf
push
into
out
inc
mov
pusha
cmps
fist
pop
push
popf
shl
aam
xchg
sbb
mov
and
xchg
aaa
outs
in
cmps
jge
xor
xchg
jae
or
neg
xchg
mov
pushf
sbb
xchg
jne
sahf
lds
push
sar
sub
sub
in
out
push
cmps
(bad)
sbb
fs
lods
mov
sbb
fsubp
sti
shl
cwde
(bad)
pop
popf
(bad)
retf
ja
mov
test
int
mov
mov
(bad)
or
ja
in
mov
shr
enter
lods
or
loop
push
adc
pop
ja
push
test
xchg
lea
mov
and
cmps
mov
retf
xchg
aaa
push
dec
ret
cwde
and
mov
xlat
je
pop
and
(bad)
out
scas
push
inc
adc
arpl
movs
std
in
adc
and
(bad)
jecxz
stos
dec
xchg
hlt
sub
mov
icebp
jge
into
jne
jbe
sub
daa
mov
pop
in
sbb
push
leave
scas
fdiv
mov
mov
or
ins
pop
mov
es
sub
cs
in
xchg
mov
mov
in
loopne
aam
xchg
pop
cmps
dec
jle
pop
cmp
ret
dec
rol
and
test
xor
dec
xor
rcl
jg
mov
xchg
ins
mov
push
mov
cmp
lahf
cmp
adc
xor
stc
iret
mov
mov
dec
mov
pop
inc
dec
cmps
mov
(bad)
je
ja
pop
pop
inc
xchg
(bad)
pop
adc
xchg
aaa
mov
pop
repnz
mov
das
scas
jmp
mov
ret
jb
sub
leave
adc
test
mov
lds
call
xchg
out
lea
cld
int3
xchg
xchg
inc
xchg
jns
mov
loop
sub
lods
sbb
xchg
sbb
dec
outs
mov
xchg
push
push
lods
and
and
cmps
gs
pop
iret
sbb
jl
cmp
dec
aad
in
cwde
push
xchg
dec
cmp
repz
sub
popf
push
leave
cmc
int
push
or
adc
test
inc
push
lods
and
push
mov
clc
ds
in
fwait
call
hlt
hlt
push
dec
rcl
xchg
loopne
inc
dec
add
jae
xchg
cwde
dec
dec
mov
cld
in
mov
dec
das
push
leave
pop
call
adc
dec
xor
xor
cld
mov
xchg
inc
jb
test
xchg
add
jne
ss
rol
lds
sbb
sbb
push
stos
mov
das
sub
js
sbb
mov
nop
sbb
sbb
mov
bound
ret
cmp
gs
fmul
cmp
and
sub
sbb
fild
test
gs
pop
xor
leave
jne
scas
aaa
dec
cs
jl
sar
out
(bad)
cmp
mov
int
scas
fmul
mov
ss
sahf
or
inc
inc
jmp
pop
iret
scas
xchg
loopne
ins
mov
sbb
movs
add
mov
xchg
mov
push
inc
inc
adc
ss
push
push
popf
dec
adc
xor
(bad)
sub
sub
popf
push
xor
mov
dec
mov
or
xor
lods
iret
popa
aas
in
cmc
add
out
in
pop
and
int3
xchg
push
out
push
int3
out
or
sbb
(bad)
ins
jo
ret
(bad)
mov
mov
dec
popf
jns
or
push
pop
xchg
and
mov
jae
pop
xchg
mov
mov
sub
cmp
dec
cmps
pushf
cmp
pop
imul
ins
and
scas
test
inc
pop
xchg
je
sbb
and
pop
out
and
ja
imul
mul
out
test
pop
stos
sti
ins
(bad)
pop
rol
mov
jns
mov
adc
xchg
cld
xchg
mov
fcomp
sar
adc
call
cmp
icebp
fisttp
cs
leave
mov
cmc
sbb
xor
ror
jmp
clflush
fisttp
jb
(bad)
dec
loop
push
sub
hlt
jp
jb
pop
leave
xor
lock
or
jns
dec
mov
in
push
mov
xchg
outs
shr
xchg
shl
pop
daa
push
mov
mov
xor
jmp
fwait
fwait
jmp
mov
mov
cdq
jmp
gs
(bad)
out
outs
pop
scas
and
dec
repz
xor
pop
rol
stc
outs
adc
loop
mov
arpl
repnz
rcr
push
dec
sbb
xchg
jne
cmp
daa
rcr
(bad)
test
scas
mov
xor
fwait
jo
jbe
and
into
cmp
adc
idiv
push
hlt
cmp
iret
retf
mov
stos
lods
mov
add
push
std
test
movs
popf
cld
sbb
jbe
add
and
dec
adc
mov
cmps
rcl
inc
cmp
mov
les
call
ds
mov
sub
xchg
xor
pop
shl
sbb
xchg
push
clc
xchg
mov
pop
push
icebp
cdq
sub
fwait
call
clc
adc
sub
sbb
jno
(bad)
out
xchg
pop
xor
js
inc
mov
mov
push
xor
mov
imul
dec
cmp
ret
push
cmps
std
sub
mov
pop
sub
(bad)
out
sbb
loope
out
ficom
cs
push
xor
cmp
xchg
pop
lahf
retf
icebp
jge
cmp
test
push
lods
arpl
icebp
jge
push
xchg
fsubr
push
popf
(bad)
ins
push
dec
rol
jne
ja
mov
(bad)
or
popfw
out
out
(bad)
inc
mov
xor
loope
xchg
push
fdivr
push
das
mov
and
jnp
nop
xchg
and
lock
sbb
repnz
jbe
es
cmc
dec
call
mov
aas
dec
dec
add
or
push
xchg
xchg
movs
cwde
dec
leave
daa
div
push
xlat
retf
mov
movs
gs
icebp
mov
div
push
xchg
mov
cmp
mov
(bad)
mov
stos
jl
out
out
jl
mov
fsubr
popf
out
fcomp
mov
pmulhw
jne
cdq
push
cs
cmp
leave
ret
inc
push
in
gs
fs
lahf
jecxz
fisttp
jae
inc
hlt
scas
imul
outs
scas
(bad)
inc
xchg
dec
scas
or
or
ret
fcom
xchg
cmp
fs
mov
mov
repnz
icebp
jnp
int3
and
mov
push
call
pop
loop
movs
and
sub
mov
stos
(bad)
pop
xor
fld
jno
pop
jmp
rol
sti
clc
cmp
fadd
pop
push
loope
scas
and
xchg
test
ja
(bad)
std
push
test
add
aad
inc
mov
dec
es
into
ins
dec
cld
inc
xchg
int
sbb
scas
neg
sub
addr16
aaa
leave
mov
or
lods
int
pop
fisubr
in
out
sub
dec
xchg
ror
out
xor
out
jmp
fdiv
push
pushf
out
sub
xor
or
xchg
xchg
fisttp
and
dec
outs
stc
sub
pop
add
icebp
jnp
xor
fwait
inc
jb
mov
clc
jo
jb
push
cwde
sbb
jecxz
add
dec
lds
adc
push
shl
fst
sub
call
inc
mov
jno
mov
jo
inc
jecxz
push
mov
sti
loopne
dec
add
pop
(bad)
leave
inc
popa
xchg
scas
xchg
and
mov
aaa
pop
jnp
out
jp
inc
ret
int
lds
imul
(bad)
aaa
fnstsw
sub
push
xchg
jle
xor
leave
inc
scas
and
and
test
pop
movs
mov
xchg
call
dec
cmps
inc
mov
and
mov
pop
cmc
jg
ja
out
test
stc
test
outs
fidivr
and
push
in
jno
in
ss
jecxz
mov
rep
fwait
test
and
popa
call
adc
nop
in
cmp
(bad)
cwde
cli
pop
aas
mov
add
xor
imul
popf
aaa
test
cmps
dec
ds
xchg
inc
push
ins
inc
repnz
and
repnz
pop
arpl
movs
clc
iret
sbb
pop
inc
sub
inc
pop
popa
mul
bnd
repz
(bad)
aad
jg
lahf
pop
ss
cmp
push
mov
pop
xchg
sbb
mov
inc
test
mov
dec
fisubr
mov
sbb
jmp
push
xchg
shl
cmp
rcr
inc
test
mov
ins
dec
hlt
call
jns
push
adc
stc
mov
daa
lea
and
loope
or
sub
mov
adc
ds
xchg
jo
xchg
jnp
pop
mov
jmp
in
adc
or
pop
in
test
ss
ds
lea
mov
pop
repnz
or
out
gs
xor
mov
sahf
je
push
leave
aaa
and
inc
(bad)
pop
sti
inc
pop
xor
and
dec
(bad)
out
shl
lods
addr16
mov
imul
test
and
push
mov
fsubr
pop
je
inc
sbb
fnstcw
scas
inc
leave
inc
sub
jle
imul
adc
inc
ja
mov
in
xor
jle
pop
ds
mov
cmp
ret
or
xchg
adc
(bad)
pop
jns
and
jne
out
(bad)
rcl
cmp
fmul
(bad)
test
into
fadd
mov
jle
xor
sub
jmp
pop
push
adc
dec
xchg
gs
ds
xchg
repnz
push
(bad)
out
imul
dec
add
cmps
leave
push
and
(bad)
test
sub
scas
out
fcom
push
jb
test
push
mov
lods
xor
dec
das
stos
lds
aaa
retf
inc
in
(bad)
repnz
xchg
es
adc
loope
or
push
or
xchg
sub
mov
xchg
movs
test
outs
sbb
mov
out
mov
pop
int
retf
sub
xchg
jl
in
fdiv
pop
stos
loope
and
int3
lahf
sti
icebp
fld
sbb
and
inc
repnz
repnz
imul
sub
test
jo
jnp
clc
outs
push
cs
test
dec
stc
retf
lods
cmp
fwait
mov
test
and
sub
(bad)
and
sub
mov
cld
xchg
push
daa
and
jle
adc
mov
inc
jne
and
imul
mov
stos
mov
push
sti
cmp
jg
popf
(bad)
cwde
jae
sar
jo
and
mov
fidivr
in
xlat
pushf
jmp
into
icebp
sub
dec
or
mov
lods
std
mov
mov
or
movs
sbb
hlt
inc
xor
dec
cs
in
in
jb
pop
xlat
pop
pop
aas
retf
(bad)
clc
and
(bad)
movs
cmp
js
mov
mov
pop
gs
imul
jmp
jecxz
xor
movs
pop
cmp
(bad)
psrad
std
icebp
pushf
jnp
ret
fcom
xrelease
add
cmp
mov
loope
in
in
mov
and
(bad)
and
pushf
add
lods
mov
imul
idiv
out
out
add
push
scas
cmp
(bad)
dec
jbe
pusha
out
ja
lods
mov
ss
dec
(bad)
or
push
adc
aaa
and
pop
(bad)
test
inc
jle
(bad)
ja
ss
fild
(bad)
out
inc
pop
or
ficom
dec
jb
stos
mov
lods
pop
scas
(bad)
dec
repnz
jecxz
add
dec
cmc
in
sub
sub
dec
fs
leave
(bad)
aam
ja
out
inc
leave
sub
les
xchg
repz
ds
mov
jg
js
push
cld
push
(bad)
mul
xor
std
jns
pop
cmps
fwait
and
sti
mov
rcr
push
pop
(bad)
pop
jle
leave
repz
xchg
aaa
sti
sub
jbe
loopne
inc
cmp
jmp
adc
mov
popf
ret
loop
stc
mov
imul
mov
outs
and
in
cmps
fdiv
jae
dec
or
cdq
mov
cli
ja
out
loopne
jae
out
pop
out
jnp
ja
push
dec
int3
or
retf
sub
or
adc
cmp
adc
imul
mov
ret
cmp
adc
xchg
and
pop
jb
mov
dec
mov
sbb
test
adc
stos
mov
aaa
imul
push
fsub
popa
xchg
xor
mov
test
inc
cmp
cmp
fld
fsub
nop
jns
sub
push
sbb
inc
push
jbe
or
bound
xchg
push
xor
xchg
or
dec
xchg
push
aaa
adc
inc
icebp
jg
pop
and
dec
sub
pop
test
and
sbb
xchg
ins
call
mov
xchg
frndint
lods
popf
jecxz
dec
jl
retf
pop
mov
cmps
out
jge
rcl
mov
sub
or
or
ja
stos
or
inc
xor
xor
rcl
xchg
movs
dec
jle
out
jae
xlat
push
mov
jp
inc
clc
mov
outs
or
inc
or
lahf
out
xchg
and
sub
mov
pusha
lahf
dec
adc
ins
test
mov
mov
(bad)
outs
inc
ins
mov
(bad)
rcl
jno
mov
es
sub
pop
test
lds
pop
add
mov
(bad)
repz
fs
push
sub
pop
pop
xor
xchg
fisubr
(bad)
aam
and
shl
ror
dec
jbe
es
shl
dec
outs
out
xchg
push
retf
pusha
mov
mov
ret
sbb
icebp
jnp
fs
mov
push
jp
add
jns
mov
xchg
shl
aam
and
imul
cmp
jnp
pushf
imul
adc
xchg
mov
sub
jb
dec
stc
mov
fldcw
dec
or
and
cdq
sbb
sahf
pop
dec
xchg
adc
cmp
jl
lods
dec
sub
mov
das
scas
pop
ret
add
jecxz
and
mov
jnp
mov
sub
fbld
aas
mov
xchg
and
push
in
sbb
mov
add
dec
test
mov
pop
inc
scas
push
push
addr16
sub
(bad)
shl
dec
fnstcw
inc
inc
mov
pop
jnp
enter
gs
xlat
xor
cmp
push
fstp
pop
mov
clc
push
mov
(bad)
outs
ret
into
dec
movs
dec
aad
fs
stos
xchg
xchg
mov
out
cmp
mov
fisttp
cli
data16
(bad)
fimul
jge
aaa
mov
add
(bad)
dec
retf
std
jmp
push
ins
push
jae
mov
addr16
retf
int
out
cmps
sub
cwde
or
call
xchg
adc
ins
sahf
mov
fnstsw
out
inc
scas
push
mov
out
pop
mov
mov
dec
shl
pop
mov
(bad)
push
jno
popf
popa
jns
jne
lahf
cdq
jnp
neg
mov
sbb
retf
movs
mov
jle
in
xor
adc
je
xchg
loop
sbb
add
jae
xchg
test
addr16
(bad)
push
ret
cwde
or
xor
or
rcl
jae
ror
clc
ds
push
fst
out
dec
stc
aad
pop
arpl
inc
sub
div
xor
test
pop
push
cmp
push
aas
icebp
nop
mov
dec
push
sbb
loope
dec
adc
inc
std
inc
cmp
arpl
and
ftst
out
add
xor
mov
(bad)
daa
out
lods
std
xchg
neg
cmp
repz
rcr
jge
pcmpeqb
jbe
aas
add
add
(bad)
jl
dec
xchg
jecxz
nop
inc
jno
mov
sub
add
shl
cdq
cmp
push
push
pop
adc
inc
jl
fsub
(bad)
daa
in
aas
loope
out
daa
(bad)
div
std
jnp
out
out
out
cmps
(bad)
not
(bad)
sti
fnstcw
call
lahf
xlat
fstp
fistp
xlat
pop
lahf
jg
(bad)
jle
out
push
out
stc
mov
iret
mov
fdivp
mov
(bad)
mov
jge
cmp
scas
lahf
mov
in
repz
mov
idiv
idiv
out
ss
fcomip
cmp
xchg
jecxz
scas
fcomip
cmp
(bad)
sub
xchg
iret
jge
lahf
mov
mov
out
dec
lahf
sti
mov
jmp
dec
fistp
(bad)
dec
(bad)
iret
sti
shl
call
mov
pop
(bad)
call
lahf
fbstp
ds
jge
mov
repz
repz
sub
out
sbb
popa
iret
jne
pop
ret
out
mov
(bad)
out
sub
sahf
jmp
mov
fistp
(bad)
mov
lahf
sti
enter
lahf
lahf
out
fnstcw
aas
add
mov
xchg
push
pop
out
out
adc
ja
sti
pop
js
jecxz
addr16
(bad)
cld
fiadd
mov
idiv
and
sahf
jecxz
stc
pushf
mov
neg
jle
neg
jmp
iret
mov
in
xchg
stos
jge
jge
fnsave
(bad)
fcomi
sbb
mov
push
adc
and
mov
cmp
add
xor
fcom
sahf
jmp
fisttp
pusha
std
xor
jne
stc
sahf
pop
out
fcmovnbe
jo
adc
cmp
(bad)
cmp
mov
aaa
out
stc
imul
ret
clc
dec
aaa
(bad)
cmp
lods
setl
xchg
mov
cmp
pop
fisub
adc
daa
bound
pop
mov
daa
ins
std
add
mov
or
sub
loopne
push
jl
sar
jae
js
pop
jg
icebp
pop
cmp
pop
mov
out
fistp
mov
jge
ret
sahf
out
pop
mov
sbb
cmps
xor
xchg
lock
add
jno
popf
xor
push
ret
(bad)
movs
std
retf
fdivr
dec
(bad)
mov
cmp
xchg
pop
xchg
and
repz
pushf
sbb
lahf
out
mov
clc
xor
icebp
mov
mov
out
lock
or
mov
stc
adc
aaa
popf
ins
out
lahf
test
cs
inc
mov
bswap
out
or
xor
ret
cmp
or
outs
enter
xchg
scas
clc
outs
enter
adc
sti
lods
jmp
push
jge
lea
gs
cmps
test
test
xchg
(bad)
jns
not
loope
jmp
pushf
icebp
or
into
loop
sub
ss
lahf
in
clc
fmul
(bad)
mov
jle
fisttp
in
sar
mov
fild
push
lds
inc
or
sar
jmp
aas
mov
mov
jns
arpl
mov
call
xchg
sbb
push
fsubr
adc
out
sbb
pop
(bad)
repnz
xchg
stc
test
popf
enter
dec
push
in
jbe
xchg
shl
sti
mov
xchg
loopne
jge
lahf
aaa
fcom
cmps
jl
jecxz
sbb
fisubr
neg
jecxz
out
mov
jae
cmp
in
inc
mov
in
sub
movs
mov
fistp
repnz
mov
push
mov
jg
or
jl
fadd
mov
sbb
mov
cmp
xchg
icebp
mov
mov
data16
pusha
xchg
inc
fist
xchg
je
(bad)
pop
and
js
movs
ins
je
dec
pop
lock
clc
les
pop
scas
mov
test
mov
sbb
ret
xchg
fnstenv
(bad)
jge
adc
fidiv
pop
(bad)
mov
or
test
dec
stc
test
cmp
jae
lock
dec
cmps
sub
es
shl
stos
aaa
push
sub
pop
sahf
dec
ret
xor
xor
in
adc
js
in
out
or
jne
jnp
pusha
pop
inc
movs
jge
into
outs
sar
jno
or
lahf
xchg
(bad)
int3
call
sti
test
pushf
scas
mov
mov
mov
cld
sahf
pop
dec
jmp
push
xor
call
cwde
push
sahf
fdiv
adc
sbb
fnstsw
jnp
cwde
lods
imul
push
fst
adc
stos
or
stc
in
es
push
fcmovnb
cli
lods
inc
sbb
cmp
pushf
xchg
jno
adc
lock
cmp
inc
mov
imul
push
fmul
adc
leave
outs
fisttp
jbe
fs
or
lahf
pop
jecxz
sti
mov
outs
adc
mov
and
test
pop
test
pop
(bad)
clc
push
jmp
cmp
adc
and
sbb
push
js
xor
add
repz
test
je
loop
test
pop
iret
test
add
stc
mov
sub
add
pop
daa
jl
push
mov
pusha
dec
popf
js
aaa
out
add
jecxz
or
jl
pop
and
add
xchg
mov
dec
in
or
mov
push
test
jnp
jo
sbb
js
lahf
or
ret
sar
adc
scas
fucom
das
pop
in
add
inc
out
inc
sbb
push
push
jp
ret
ss
loop
or
mov
add
fist
mov
call
test
and
pop
mov
out
inc
mov
xor
jmp
nop
xchg
jnp
pop
hlt
xor
out
je
test
loop
sbb
loop
sar
sbb
jo
push
lahf
cmp
mov
sbb
xchg
fdivp
fisttp
cmp
int3
dec
test
stos
mov
mov
and
scas
jns
iret
mov
dec
lds
nop
xor
or
add
daa
les
aaa
push
rcr
jnp
loop
adc
push
xchg
in
mov
xor
xchg
adc
sub
mov
aaa
daa
loop
cmps
mov
ins
cmp
jg
adc
mov
adc
dec
inc
or
push
pushf
mov
inc
cmp
mul
in
cmp
data16
scas
cs
mov
fcomp
pop
in
sbb
add
in
iret
or
pop
push
add
(bad)
xchg
adc
xor
icebp
sub
pop
fs
loope
jge
push
sbb
cmps
ja
mov
daa
fs
mov
pop
jo
adc
mov
dec
js
inc
mov
icebp
cdq
adc
mov
repnz
sub
sub
lods
jns
(bad)
ins
cmp
ins
pop
dec
jmp
cld
inc
fimul
jae
pop
sbb
jno
xor
inc
push
cdq
lahf
xrelease
sahf
jg
jg
shl
jnp
(bad)
clc
adc
sbb
cdq
repnz
pop
push
scas
xor
mov
ret
mov
sub
ins
retf
sahf
jmp
mov
int3
mov
mov
mov
neg
sub
ds
test
les
jnp
ret
mov
mov
clc
push
cmps
adc
sbb
stc
jl
mov
xor
ins
mov
xlat
repz
mov
push
jno
dec
clc
or
jae
dec
arpl
adc
ins
cmp
inc
pop
lock
adc
pop
sahf
fild
lock
adc
lods
push
pop
sub
mov
pop
(bad)
mov
jo
adc
dec
adc
(bad)
cmp
icebp
xchg
jg
mov
adc
mov
dec
ffreep
rcl
push
cld
xchg
test
lods
aad
cwde
sti
push
and
ret
popa
jnp
movs
sub
not
outs
pop
push
dec
cmp
mov
js
(bad)
cwde
mov
jb
or
jle
sub
inc
push
mov
movs
hlt
or
jg
(bad)
xchg
lahf
or
push
push
jge
or
push
(bad)
in
mov
xchg
fild
dec
aam
test
inc
lds
in
daa
out
sbb
xchg
test
mov
add
dec
xchg
mov
push
inc
mov
repz
cmp
aad
cmp
sahf
pop
mov
or
jmp
jge
dec
adc
jge
es
out
cli
mov
jno
das
shl
lock
in
mov
in
paddd
aaa
xchg
retf
ins
ja
and
sbb
inc
in
mov
push
int3
aad
popa
dec
adc
jge
jg
push
pushf
out
ins
into
sbb
push
jge
dec
xor
pop
aam
(bad)
add
xchg
aas
imul
dec
clc
shr
enter
or
(bad)
xchg
idiv
jle
push
sub
jecxz
push
pop
clc
shl
data16
hlt
lods
xor
pop
retf
sbb
push
mov
jmp
sar
test
ret
in
dec
bound
out
pop
test
aas
stos
retf
ss
pextrw
push
fild
cs
adc
cmp
outs
ret
bound
into
ss
out
jnp
xchg
aaa
sbb
fld
mov
js
xchg
out
mov
or
jnp
or
stos
sbb
pop
fs
adc
xor
cld
pop
adc
fdiv
rcr
repnz
leave
xchg
or
test
mov
(bad)
xor
clc
jg
mov
inc
xor
pop
inc
push
je
add
fsub
push
mov
imul
xor
ins
mov
leave
push
ins
sbb
fbstp
dec
pop
dec
pop
xlat
pop
int3
mov
repz
mov
mov
mov
stos
mov
fadd
js
fmul
sub
jmp
test
add
mov
or
das
stos
pop
and
and
shl
cmp
mov
xor
cmc
outs
xor
cdq
bound
push
pop
xor
cmps
cmps
inc
jmp
mov
inc
out
shl
mov
xor
sub
(bad)
mov
adc
movs
ret
cmp
mov
add
sub
inc
in
sub
jb
push
in
stos
and
test
push
jbe
(bad)
fcmove
add
dec
daa
inc
jo
adc
ret
push
mov
cmps
test
ins
sbb
inc
ds
push
and
mov
test
js
and
aad
dec
imul
das
inc
jo
and
jae
inc
add
pop
push
jns
adc
xchg
gs
xchg
ins
dec
je
sub
out
out
cwde
mov
daa
sahf
lea
pop
xchg
xchg
mov
stos
or
mov
dec
xor
in
xchg
xor
rcr
cmc
or
inc
push
(bad)
es
nop
mov
outs
inc
clc
xor
mov
movs
int3
jl
(bad)
mov
or
adc
(bad)
jns
gs
xchg
sub
mov
enter
aam
fcmovbe
mov
dec
fwait
dec
inc
cld
ffree
fldcw
clc
ds
add
pop
xchg
ret
mov
jp
call
cmp
jnp
push
je
adc
ins
dec
leave
mov
pop
dec
ror
push
bound
cmp
sbb
(bad)
in
dec
dec
sahf
or
inc
cmp
ins
cmp
push
in
xchg
xor
pusha
and
lock
push
repnz
pop
and
xchg
outs
repnz
pop
jnp
stc
shl
sbb
adc
imul
jo
(bad)
ds
xlat
ficom
mov
mov
cdq
in
mov
mov
loope
jge
add
sub
push
mov
test
pop
call
stos
bound
das
mov
push
jmp
jnp
adc
adc
adc
inc
out
icebp
sub
push
mov
ror
sub
xor
es
sub
jbe
sub
ja
sub
dec
mov
loope
mov
sar
call
iret
into
ret
dec
pop
adc
cmc
or
fnsave
sahf
ins
adc
jmp
movs
int3
aas
in
rcr
lds
push
popf
stos
cs
call
test
iret
mov
push
lock
xchg
jge
cmp
test
jle
sub
stc
mov
and
jne
adc
in
cli
(bad)
inc
pop
push
adc
ret
stc
call
addr16
shl
push
jle
cli
add
add
mov
retf
jmp
jge
cli
loopne
push
retf
and
std
mov
imul
adc
mov
inc
cmp
gs
jb
(bad)
xor
xchg
js
shl
call
aas
int3
ret
mul
lock
cli
jae
push
call
mov
addr16
not
popf
mov
push
addr16
cmps
pop
mov
cmps
test
dec
je
inc
clc
ret
les
jmp
js
(bad)
loopne
test
push
adc
(bad)
push
test
ficom
push
jmp
jnp
or
mov
mov
inc
retf
push
xchg
inc
jg
mov
in
out
xchg
xchg
in
push
retf
jne
sub
je
div
out
nop
rcl
pop
jb
lods
scas
dec
push
sbb
add
mov
xor
dec
push
cdq
stos
pop
push
mov
mov
mov
mov
jnp
ds
pop
mov
jo
ficom
outs
cmp
std
test
test
es
mov
aaa
fidiv
sbb
mov
cs
mov
lods
pop
xor
jo
pop
cwde
pop
push
cmp
inc
ins
jmp
out
fcmovnu
fs
(bad)
jg
mov
call
push
sbb
jp
cs
shl
pop
jmp
rcl
jl
aaa
sub
or
mov
sub
sub
je
or
dec
xchg
sub
pop
pop
ror
pop
mov
inc
adc
cmp
arpl
ret
loop
sti
mov
mul
sub
movs
pop
inc
xchg
cli
call
repz
ja
dec
jg
mov
std
icebp
sub
sub
inc
leave
pushf
outs
loope
in
sub
imul
dec
out
mov
cmp
fabs
cmp
xor
je
jbe
xchg
out
cld
out
nop
xchg
jl
jbe
add
cmp
popf
dec
jae
(bad)
xchg
call
hlt
dec
jbe
stos
stos
in
gs
xor
add
rcl
aad
shl
cmps
aas
pop
jno
jmp
pop
adc
sub
sub
push
jle
dec
push
jbe
jp
mov
int3
pop
pextrw
and
xchg
lea
jne
dec
inc
pop
rol
jnp
ja
fnstenv
mov
push
and
jbe
sub
cmp
fbld
test
aad
xchg
stc
and
mov
and
ret
mov
mov
pop
sub
test
xor
dec
loop
add
xchg
aas
sub
or
or
xor
ss
add
pop
push
cmps
lods
inc
push
sub
mov
jbe
out
into
adc
dec
fst
cmp
cli
stos
xchg
imul
rcl
push
dec
jbe
and
add
inc
test
adc
xchg
loop
cmc
dec
xchg
push
loop
test
push
xor
leave
xchg
mov
fcom
jmp
sub
bound
ficomp
sub
mov
fisttp
push
push
ins
push
test
ror
cmc
mov
sti
cmp
xor
jns
push
ss
jne
movs
mov
add
iret
sbb
mov
mov
arpl
fdivr
jb
data16
xlat
dec
loope
push
stc
inc
gs
(bad)
call
xchg
cwde
call
in
test
xchg
into
jg
sbb
sti
push
test
dec
push
xor
sub
mov
pop
push
jp
loope
push
or
push
sbb
loop
sbb
or
or
xchg
pop
test
mov
mov
mov
and
iret
cmc
sub
enter
adc
cmps
push
and
push
push
push
ss
movs
mov
dec
adc
rol
fst
and
and
jmp
call
xor
mov
cmc
and
push
sahf
push
sub
lods
stos
addr16
ja
pop
shl
xor
and
loope
dec
sbb
fdiv
push
mov
sub
dec
xor
lahf
dec
mov
mov
pop
xchg
inc
mov
movs
sub
push
scas
repnz
xchg
dec
ret
pusha
stos
sbb
fucom
sub
mov
ss
xchg
push
fxch
lock
test
jmp
pop
jmp
dec
int
repz
ss
push
stc
mov
test
test
pop
cmps
imul
mov
cmp
mov
retf
test
xor
ss
xor
test
test
in
(bad)
les
aam
scas
pop
movs
jp
test
xor
xchg
sub
ret
fst
test
fwait
and
cwde
push
and
dec
gs
cmp
adc
pop
inc
sub
cdq
into
jmp
popf
sbb
xchg
adc
gs
std
mov
sbb
adc
sbb
push
cli
inc
add
adc
jbe
jno
les
and
inc
aas
mov
push
xchg
or
dec
xor
add
xor
repz
ins
push
mov
pop
aam
sub
mov
fs
jl
xchg
es
in
and
jb
sbb
loop
cld
sbb
sub
lods
movs
fwait
xor
add
(bad)
mov
xor
loope
sti
add
pop
and
movs
nop
test
in
xchg
outs
push
or
sar
ins
mov
ret
jnp
int
ficomp
mov
pop
xchg
sub
and
cld
mov
popf
mov
cld
mov
xchg
jns
mov
dec
mov
into
rcl
pop
xchg
mov
popf
mov
stc
xchg
cmp
push
sub
not
push
adc
jnp
xchg
arpl
mov
fild
scas
daa
push
sbb
cmp
leave
repnz
cs
lods
dec
mov
movs
sub
lahf
jo
(bad)
and
xlat
pop
jb
xchg
lock
out
add
out
enter
dec
mov
out
ret
sbb
and
pop
lock
gs
mov
call
ret
ins
xchg
mov
mov
dec
mov
xchg
cvttps2pi
mov
jmp
mov
cmp
(bad)
fbstp
test
jmp
sbb
(bad)
fisubr
stos
inc
xor
mov
jecxz
shl
ins
out
inc
clc
mov
ficom
in
rcr
popf
cmp
repnz
adc
shl
bound
cli
xor
and
or
sar
mov
sbb
test
cmp
sahf
xchg
mov
pop
mov
mov
data16
sbb
pop
xor
lahf
and
cmp
push
mov
xchg
fimul
das
jbe
div
test
out
adc
or
cmp
ficom
xchg
jecxz
ret
stos
sub
push
lods
lock
jns
(bad)
push
mov
pop
mov
sub
adc
test
xchg
sub
ret
adc
inc
push
cwde
in
cmp
and
fst
inc
in
fwait
neg
cmps
mov
clc
in
sar
addr16
mov
mov
in
fcom
and
cld
dec
or
sar
cwde
data16
in
ss
je
mov
sub
push
xchg
lea
and
ja
cmps
lea
xchg
mov
pop
lds
in
inc
js
loop
retf
pop
movq
inc
sub
push
jecxz
in
push
cmc
daa
cli
fbld
addr16
push
push
hlt
mov
xchg
nop
and
push
(bad)
adc
mov
mov
mov
loope
sti
push
stos
push
std
lods
push
fs
data16
fisttp
fsubp
fisttp
dec
jns
xor
mov
aad
jae
lds
or
sbb
loopne
sub
adc
arpl
mov
mov
push
jmp
loope
leave
adc
push
push
cmp
pop
ja
cmp
arpl
adc
(bad)
fdiv
and
retf
xor
push
lods
xor
movs
mov
je
pop
ret
out
lods
and
cmp
fwait
xchg
and
xchg
aaa
lds
ss
xlat
cmp
dec
in
ret
mov
enter
arpl
or
cmp
pop
js
fsub
mov
ja
push
xchg
dec
(bad)
loop
ret
out
push
(bad)
fnsave
xchg
mov
inc
pop
xor
add
jnp
xchg
xor
sub
test
mov
mov
les
xchg
je
push
shl
pusha
aas
ja
ja
clc
in
jp
repnz
push
cdq
not
mov
movs
xor
rcl
popf
xchg
xchg
fsub
mov
mov
adc
pop
push
mov
std
jge
xchg
fs
aad
push
idiv
cmps
popf
loope
cwde
push
xlat
fmul
mov
xchg
in
mov
fcom
sbb
jecxz
inc
or
rol
pop
mov
int
xchg
js
fcomp
pop
hlt
popf
test
int3
data16
push
imul
ds
and
and
shl
imul
mov
fcmovnb
mov
sub
mov
or
xchg
in
dec
pop
(bad)
dec
sbb
aas
aaa
lgs
dec
jp
je
mov
mov
into
cmps
cmps
mov
mov
mov
sbb
mov
enter
test
mulps
pop
pavgw
xor
mov
cdq
mov
xchg
aam
(bad)
jl
jecxz
mov
push
cmp
pop
lds
xor
mov
mov
addr16
push
lea
xchg
dec
jno
les
pop
ror
shl
lahf
sti
cdq
mov
(bad)
fidivr
adc
dec
rcr
mov
sub
push
retf
adc
aad
sub
or
aas
ss
cs
popf
lds
aad
push
mov
pop
push
sub
adc
pop
push
scas
xlat
lock
mov
mov
adc
in
inc
je
pop
or
mov
lea
call
mov
push
mov
dec
lea
fnstsw
xchg
jo
adc
shr
and
imul
bound
adc
rcl
test
inc
stmxcsr
lahf
dec
push
mov
jne
aaa
xchg
inc
call
push
loope
adc
pop
mov
dec
out
inc
adc
lahf
mov
and
xchg
retf
data16
outs
push
jmp
mov
repz
addr16
pop
mov
pop
fsub
mov
repnz
out
dec
je
dec
jmp
xor
jb
fcomp
sbb
mov
jne
test
loope
pop
retf
cmps
gs
jbe
hlt
push
js
into
xchg
sub
xchg
in
pop
leave
adc
cmp
add
pop
jb
inc
cwde
mov
xchg
mov
mov
push
frstor
xchg
leave
mov
push
out
push
idiv
lahf
test
xchg
and
mov
clc
and
and
cmp
je
jbe
push
ds
or
std
cli
and
adc
cmp
jmp
and
cs
xchg
jmp
arpl
inc
stc
test
fwait
sub
pop
repnz
imul
sub
push
mov
jle
inc
retf
push
fyl2x
push
sbb
ret
sbb
fimul
mov
sub
cmc
push
push
xchg
cmps
adc
and
mov
push
jnp
sbb
fcom
mov
mov
sub
mov
popf
mov
mov
add
dec
sub
shl
mov
ja
dec
push
leave
mov
jno
push
ffree
outs
mov
dec
cwde
or
rcr
inc
push
cs
push
scas
fist
popa
stos
outs
mov
pop
js
fild
gs
mov
lahf
es
cmp
and
stos
mov
mov
xchg
outs
mov
sub
sbb
(bad)
pop
call
pop
adc
sub
(bad)
ja
inc
ja
test
retf
xor
pop
push
ret
mov
(bad)
jmp
mov
mov
jne
jecxz
and
push
dec
ret
dec
imul
retf
js
inc
mov
cmps
sub
jmp
mov
daa
xchg
push
sub
xchg
mov
xor
mov
xchg
and
in
push
je
push
popf
mov
cmps
xor
mov
aas
jecxz
dec
inc
adc
add
mov
pop
movs
push
jne
fisub
cmp
push
mov
movs
fisub
and
or
hlt
aad
in
fldenv
jmp
jmp
inc
mov
test
push
js
test
je
or
call
mov
or
jle
mov
ja
lods
or
mov
fist
or
js
cmp
mov
repnz
mov
pop
js
test
aaa
xor
cmps
dec
sub
inc
and
loopne
(bad)
mov
out
movs
popf
add
dec
push
mov
leave
dec
repnz
in
jo
xchg
mov
mov
sub
mov
cdq
call
jle
inc
adc
leave
outs
mov
arpl
gs
jo
inc
les
push
xchg
push
mov
mov
mov
(bad)
push
pop
movs
inc
pop
pop
lds
push
inc
xchg
loop
mov
push
ins
int3
es
retf
add
jmp
mov
pusha
adc
aam
test
ss
(bad)
adc
ja
cmc
pop
adc
and
lods
sub
sub
rcl
in
movs
lock
sub
or
loop
xchg
push
sub
jle
mov
jb
push
loope
test
mov
pop
ror
pop
mov
loope
or
push
(bad)
fs
push
mov
outs
xor
cmp
push
xor
jae
es
push
enter
fstp
dec
push
in
ss
bound
dec
int
or
sub
jne
inc
xor
cmp
aaa
shr
fsubr
pusha
xchg
scas
loopne
dec
xchg
mov
add
sub
jl
in
pop
jbe
or
pusha
sub
jl
repz
xor
xchg
fisttp
in
int3
es
int
pop
rcl
lods
daa
mov
sbb
sbb
aam
add
jg
imul
pop
mov
test
xor
dec
pop
cmp
sub
loope
loope
retf
scas
(bad)
(bad)
xchg
jo
pop
push
bound
leave
or
(bad)
jmp
push
jbe
pop
test
mov
fdiv
mov
stos
mov
push
xchg
xor
xchg
dec
retf
loopne
lahf
inc
push
stos
addr16
sbb
ins
call
inc
sub
mov
xor
into
push
loope
imul
push
fstp
pop
adc
imul
jmp
fs
sbb
pop
(bad)
fsubr
sub
retf
xor
cld
ret
push
ficomp
adc
scas
cmp
sbb
mov
les
jne
scas
sbb
pop
push
(bad)
dec
and
in
cli
push
or
(bad)
out
pop
jne
imul
cmp
push
mov
gs
movs
sti
lods
dec
cmp
or
dec
push
adc
pop
push
and
arpl
adc
popf
mov
movs
sbb
cmovnp
sar
mov
sbb
dec
inc
mov
in
cmp
mov
pop
fiadd
pop
in
into
push
pop
jns
pop
test
push
clc
in
mov
(bad)
call
enter
movaps
ins
dec
add
ret
sbb
sub
fadd
push
movsx
(bad)
out
mov
push
aam
stos
mov
dec
mov
jmp
jmp
sub
push
fwait
in
fimul
push
mov
mov
mov
das
sub
out
mov
cmc
icebp
push
pop
and
div
fcomi
xor
add
push
fnstcw
or
movs
jo
das
icebp
add
sub
pop
dec
test
call
push
out
inc
fcmovu
mov
lods
cmps
dec
daa
out
xchg
inc
xchg
stos
push
mov
mov
stos
jo
xchg
mov
mov
retf
and
push
in
sub
push
fisubr
repz
frstor
cmps
xchg
mov
hlt
(bad)
dec
mov
and
iret
and
sub
cmps
fdiv
pop
test
rol
inc
stc
loope
xlat
hlt
loopne
cli
push
(bad)
ffree
out
mov
es
jne
ds
outs
repz
cmps
neg
fistp
sahf
mov
bound
popf
inc
out
inc
mov
sub
(bad)
mov
into
fsub
mov
or
pushf
jg
bound
shl
gs
fcom
sbb
ja
push
cmp
out
lahf
ret
sbb
xchg
dec
and
aad
jns
call
xchg
adc
xchg
push
adc
fsubr
adc
imul
fidivr
into
xor
fisub
jno
mov
push
dec
push
ja
and
lea
jmp
movs
add
xor
movs
cmp
cmp
repz
(bad)
dec
and
cmp
pusha
pop
mov
mov
rol
mul
sbb
cmp
(bad)
push
repnz
push
inc
fcmovu
push
sbb
call
dec
xor
mov
(bad)
inc
test
sbb
sbb
sub
movs
push
(bad)
adc
adc
dec
sbb
imul
push
into
sub
mov
dec
mov
dec
jb
push
fistp
addr16
dec
jbe
retf
out
rcl
inc
retf
jmp
jbe
cmp
and
sbb
movs
cmps
in
mov
dec
jbe
jmp
fnsave
ss
psrlq
jnp
dec
adc
icebp
xchg
(bad)
push
mov
pop
fdivr
sbb
clc
in
pop
(bad)
cs
and
ins
push
cmp
pop
jbe
test
popa
jae
jb
out
xchg
push
outs
cmp
mov
ss
into
adc
movs
push
jno
iret
lds
(bad)
push
xchg
adc
fadd
test
xchg
cmp
bound
outs
in
inc
(bad)
adc
aaa
aad
addr16
popf
clc
shl
xchg
mov
dec
hlt
scas
sbb
push
pop
fist
nop
ss
cmp
hlt
in
out
(bad)
(bad)
cld
fwait
gs
aas
push
js
xor
repnz
data16
xor
pop
fiadd
pop
jb
push
jecxz
sub
dec
or
outs
or
nop
dec
iret
mov
in
sar
pop
bound
push
nop
sub
xchg
xor
es
or
movs
mov
outs
mov
ss
ror
nop
or
dec
inc
mov
les
mov
cs
addr16
push
adc
hlt
aas
sub
inc
js
loopne
xchg
dec
sub
pusha
(bad)
dec
in
jg
pop
pop
test
movs
div
push
out
(bad)
jns
retf
imul
ins
rcr
fidiv
cmps
fadd
jae
pop
xchg
pop
sub
sub
fwait
push
push
adc
jnp
popf
dec
aaa
in
sbb
xchg
int
ds
movs
loopne
jb
push
retf
adc
xchg
adc
mov
jne
cld
push
adc
inc
in
repz
out
push
test
ins
push
(bad)
xlat
aas
pusha
push
mov
dec
std
cs
or
fs
jne
push
xor
fwait
into
push
mov
out
xor
(bad)
dec
xchg
cmps
outs
fst
push
ret
into
bound
dec
xor
and
scas
mul
fstp
dec
lahf
or
rol
rol
xor
mov
and
jl
loop
mov
adc
out
nop
adc
mov
sub
cli
mov
aaa
sub
js
enter
cmps
inc
jp
icebp
cmp
cwde
mov
pop
int
stos
jb
jg
push
les
sub
lock
cmp
pop
push
or
ja
inc
xchg
in
mov
jg
push
push
aaa
fbstp
push
push
and
cli
cs
mov
dec
test
ret
fs
xor
not
pushf
test
not
fstp
ficomp
cmp
mov
scas
add
and
loope
cmp
out
out
pop
dec
cmps
cmp
mov
loope
mov
addr16
scas
jns
sbb
cdq
mov
and
add
in
fild
or
or
test
in
retf
loopne
inc
mov
adc
in
dec
pop
fwait
scas
inc
cmp
mov
push
scas
repz
mov
jmp
into
adc
jnp
imul
inc
popf
xor
fld
inc
arpl
mov
dec
lock
push
int3
(bad)
scas
pop
pop
or
and
loope
push
xchg
lds
loope
sbb
mov
repnz
dec
ror
adc
lock
jp
or
mov
sbb
jb
adc
cmps
cmps
test
pop
nop
adc
int3
sbb
push
pop
in
cs
cs
sbb
inc
mov
ss
ja
mov
jae
dec
rol
adc
jg
lock
push
dec
mov
or
push
clc
test
pusha
ret
outs
movsx
ret
push
mov
sbb
aas
cmp
jl
sub
dec
adc
add
mov
in
adc
xchg
adc
and
pop
mov
popf
push
push
pop
push
jg
arpl
sub
fld
sub
in
cwde
mov
mov
out
rep
repnz
popf
jno
xchg
xlat
xchg
push
mov
movs
fimul
(bad)
retf
sub
movs
xor
or
loope
adc
repnz
loopne
mov
mov
imul
imul
(bad)
lea
fwait
test
test
out
scas
pop
ret
inc
shr
ss
push
hlt
out
test
fwait
loop
ja
sbb
cld
and
sub
mov
ret
jle
ficomp
sub
push
or
(bad)
not
adc
test
sbb
outs
popa
or
popa
(bad)
mov
ret
xor
shl
jo
lods
sbb
push
cdq
cli
pop
push
mov
stc
mov
loopne
mov
fild
pop
push
mov
cs
pop
adc
iret
into
mov
xchg
pop
(bad)
ins
push
js
mov
cmps
pusha
loop
mov
dec
loope
inc
xor
sbb
lds
cmp
sahf
sub
xchg
aas
pusha
dec
sqrtps
(bad)
push
sbb
jl
mov
cmp
addr16
mov
gs
cmp
in
sbb
jmp
es
jp
(bad)
pop
stc
aad
jp
mov
and
and
cmp
xlat
test
out
popa
dec
xchg
js
pop
add
xor
inc
mov
in
outs
push
stc
aad
sbb
xor
test
jmp
cld
into
lock
ins
jl
mov
mov
mov
jno
sub
jmp
xchg
into
stos
pop
cmp
adc
push
(bad)
fs
out
xor
mov
push
in
xor
not
jmp
mov
adc
mov
inc
mov
cld
xchg
in
cwde
mov
addr16
sub
mov
outs
lds
loop
and
jbe
dec
loope
xchg
xor
fistp
jbe
sti
jge
jno
scas
jbe
(bad)
sbb
inc
loope
(bad)
ins
(bad)
mov
nop
mov
pop
cmp
or
dec
(bad)
xlat
and
test
dec
out
ret
cs
xchg
fdiv
ja
leave
stos
or
arpl
push
je
shl
loop
dec
sbb
mov
jmp
aad
cmps
jmp
daa
lea
mov
cmp
aam
sub
mov
es
sub
stos
xchg
aad
inc
js
in
fxch
sub
xor
pop
pop
fstp
cld
mov
(bad)
cs
mov
jle
xor
call
adc
ja
and
jl
sub
loope
mov
fiadd
push
sbb
pop
test
ja
lahf
mov
pop
stos
arpl
adc
mov
scas
loopne
push
push
mov
into
enter
xor
inc
out
push
push
sub
sub
jbe
xor
retf
je
sub
clc
shld
xchg
outs
shl
ret
sub
into
cwde
sub
aaa
mov
sbb
and
mov
mov
ret
xor
ja
push
mov
fwait
push
(bad)
pushf
mov
movs
int3
test
mov
jae
clc
ins
mov
mov
mov
(bad)
nop
xchg
call
push
sub
jne
sbb
scas
call
fadd
xchg
push
jmp
push
mov
jmp
pusha
xor
push
movs
sub
in
or
out
cmp
push
stos
pop
xchg
daa
mov
call
pop
push
(bad)
les
ffree
cmps
in
pop
xchg
sub
fwait
mov
inc
imul
inc
pop
inc
pop
dec
fwait
cdq
xchg
mov
(bad)
es
out
outs
adc
loopne
into
jb
add
shl
call
stos
mov
push
cmp
fild
out
cmp
push
push
pop
pop
add
mov
dec
or
mov
and
dec
adc
cmp
imul
pop
ins
fimul
les
(bad)
nop
ds
xor
lods
mov
retf
mov
(bad)
(bad)
clc
in
outs
mov
or
mov
xchg
pop
cmps
call
rcr
mov
mov
mov
dec
test
dec
in
xchg
add
push
test
sub
pop
ins
dec
xor
leave
neg
mov
leave
push
fimul
pop
addr16
sub
dec
mov
test
fistp
sbb
lods
mov
out
es
in
into
adc
lahf
push
sbb
int3
mov
adc
fst
mov
add
or
push
cdq
or
in
js
mov
mov
stos
and
pop
mov
push
or
mov
push
sbb
addr16
inc
pop
ins
mov
mov
jbe
mov
and
or
pop
shr
pop
adc
sbb
xchg
cmps
pop
adc
and
inc
pop
jmp
and
push
sti
addr16
sbb
mov
arpl
mov
and
dec
push
sub
out
nop
das
js
pop
push
jmp
outs
dec
outs
sbb
mov
(bad)
fwait
xor
mov
aam
pop
js
inc
repz
aaa
sub
pop
jg
pcmpeqd
lods
and
sub
sub
jbe
gs
xlat
sub
call
sahf
test
push
ficom
dec
out
ret
pop
fild
or
cmps
retf
scas
xchg
push
jo
ficom
movs
xor
and
push
xchg
js
adc
les
popf
push
jno
mov
jmp
movs
and
cs
push
mov
and
and
sub
test
int3
faddp
(bad)
jbe
cmps
jbe
push
sub
js
fcmovnu
retf
xchg
icebp
jne
pushf
cdq
inc
mov
scas
sbb
mov
sub
sub
cmp
cmp
sub
mov
xchg
ror
or
cmps
test
cmp
cs
push
fld
mov
push
and
xchg
sahf
cmp
popf
leave
sub
imul
outs
loope
xchg
adc
ins
jno
mov
pop
sub
xchg
cmp
popa
xor
mov
mov
shl
pop
sbb
mov
mov
ins
push
cmp
pop
in
xchg
icebp
aas
in
dec
and
xor
push
or
popf
test
lock
leave
popa
mov
shl
(bad)
test
mov
in
iret
or
fs
mov
imul
shl
ins
movs
push
xchg
ss
jo
movs
sbb
stos
lods
call
(bad)
adc
or
push
movs
xchg
mov
test
fiadd
jp
je
mov
mov
xchg
out
xchg
mul
sub
mov
sub
popf
xor
pop
icebp
leave
sar
das
jno
add
call
fadd
sbb
shl
xchg
ret
mov
dec
cmp
cmp
out
les
arpl
xchg
push
dec
jle
js
push
js
mov
js
and
sar
sbb
pushf
mov
push
out
aad
mov
push
push
addr16
cdq
mov
call
fbld
sub
mov
cmp
mov
jae
inc
jge
retf
dec
fcom
or
jge
mov
mov
sahf
dec
call
icebp
nop
mov
or
xchg
fdivr
icebp
adc
movs
xchg
pushf
stos
sub
push
mov
sub
test
dec
dec
cmp
int
sbb
cmps
test
mov
pop
push
push
fcom
jb
sub
push
adc
pop
in
push
adc
(bad)
jg
lock
pop
out
jb
inc
hlt
mov
leave
aaa
and
jg
es
adc
sbb
push
xchg
in
pusha
mov
jl
test
loope
pop
adc
jbe
cmp
stos
ret
lds
jmp
inc
inc
ret
int
lods
dec
lods
and
sub
add
sbb
sbb
xor
xchg
addr16
push
xchg
ret
retf
mov
pusha
jbe
and
(bad)
mov
jp
fild
sbb
adc
xchg
in
out
nop
push
cli
mov
nop
xchg
dec
out
shl
mov
(bad)
sub
ret
add
(bad)
(bad)
jl
pop
xchg
in
mov
aad
fild
dec
cmp
lahf
and
neg
je
jge
enter
dec
or
cmc
xor
out
(bad)
(bad)
cmp
aas
aas
icebp
lahf
lahf
cld
iret
iret
cli
out
std
out
(bad)
cld
(bad)
cli
out
jge
idiv
lahf
aas
jecxz
cmc
icebp
repz
jl
sti
cld
std
jg
jae
dec
jnp
stc
sbb
std
stc
into
out
cmp
pop
jmp
(bad)
stc
jge
cld
cld
jge
clc
cld
stc
jle
addr16
out
out
sti
push
mov
aas
std
repz
jg
lea
jl
cli
cld
std
outs
ins
push
pop
iret
std
stc
jns
arpl
jle
out
xor
(bad)
xor
xlat
ds
jl
sub
jnp
clc
mov
scas
pop
lahf
iret
jnp
neg
xor
jecxz
aas
neg
mov
mov
cmp
mov
fbstp
jge
fstp
clc
mov
out
daa
popa
cld
and
inc
cld
cld
(bad)
jge
pop
dec
mov
icebp
pusha
dec
sti
mov
repz
sub
clc
call
iret
mov
pop
ret
ja
cmp
sbb
hlt
stc
jnp
pop
jae
fcomp
popf
lahf
imul
(bad)
(bad)
fwait
das
jg
jp
(bad)
inc
jmp
sahf
loope
stc
stc
fwait
mov
std
cs
test
jns
xlat
push
jno
das
(bad)
js
jl
ret
jno
jg
stc
(bad)
in
(bad)
jge
les
dec
adc
div
sbb
sbb
scas
stc
out
push
xchg
in
jno
fwait
aas
sbb
out
scas
pusha
push
inc
int3
xchg
adc
mov
inc
lods
out
jne
xor
mov
jno
sar
(bad)
cmp
lock
icebp
jne
pop
iret
stc
retf
xor
scas
jmp
cmp
aas
out
sti
jnp
add
xor
inc
aas
pushf
pop
adc
xor
and
loop
lods
xchg
sahf
and
dec
sub
jg
sbb
pop
dec
inc
or
clc
int3
mov
and
pop
lods
push
scas
mov
jecxz
push
sahf
movntq
mov
fsub
fisttp
daa
out
aas
popa
push
mov
mov
mov
jl
pop
repz
adc
hlt
idiv
xchg
add
and
lods
sub
ins
fsubr
mov
cwde
lahf
adc
sti
push
data16
lahf
adc
mov
cmp
sbb
cmps
mov
adc
popa
pusha
das
jecxz
push
adc
and
xor
cdq
stos
inc
in
das
out
(bad)
fsub
mov
mov
jg
cmp
mov
icebp
pop
mov
test
ficomp
adc
fst
pop
or
sti
ror
or
mov
lea
repz
dec
js
shl
lahf
mov
cmp
in
jle
lods
(bad)
or
lods
xlat
sbb
mov
les
mov
(bad)
(bad)
ret
jge
cmps
sbb
int
pop
stc
inc
rcr
and
fsubr
in
leave
pop
jno
jecxz
push
in
add
xlat
pop
jb
ds
mov
retf
std
jp
pop
jnp
pop
pop
adc
es
sbb
fwait
mov
enter
(bad)
ficomp
jle
xor
jns
adc
aad
lods
or
je
mov
sahf
inc
aam
mov
mul
repz
scas
mov
stc
cdq
adc
xor
out
xchg
cmp
neg
test
pop
xor
jg
jg
sti
or
jg
std
mov
stc
fisttp
neg
aam
std
mov
adc
xlat
pop
or
cmp
jecxz
lock
int
mov
cli
inc
pushf
push
sub
mov
pop
call
cmp
outs
push
outs
cld
loopne
sbb
mov
(bad)
lea
mov
pushf
std
cmp
jns
push
pop
loop
xchg
mov
sbb
cmps
fidivr
repz
xor
test
daa
out
lds
shl
daa
jl
mov
ds
mov
xor
cwde
stos
push
cmc
fsubr
dec
push
xor
loop
mov
xor
out
or
pop
mov
pop
je
mov
inc
iret
cmp
inc
dec
in
push
xlat
xor
(bad)
jmp
mov
fcomp
adc
pop
out
or
xlat
jge
jg
js
add
dec
cmp
jle
sub
pusha
push
adc
and
jecxz
cmc
(bad)
fdiv
cmps
repnz
push
imul
loop
add
pop
lods
retf
pop
iret
jns
std
push
loopne
xchg
xor
(bad)
xchg
push
xor
adc
test
out
mov
xor
mov
(bad)
mov
pop
outs
in
sbb
out
lds
(bad)
std
shl
fcomp
and
popa
ficom
sbb
repnz
aas
mov
cld
test
fcomp
mov
xor
test
and
mov
clc
sub
daa
adc
fdivr
mov
cmp
(bad)
aad
lea
test
out
(bad)
bnd
fdiv
arpl
mov
xor
inc
les
pop
popa
sub
jbe
cs
std
sub
out
stos
enter
and
xor
aas
sub
adc
clc
ja
cmp
ret
lds
data16
lds
stc
adc
enter
xchg
into
push
mov
fiadd
cmc
mov
fdiv
out
mov
es
mov
test
inc
mov
lds
fdiv
out
(bad)
fidivr
cmp
cmps
fs
jae
scas
loop
mov
add
repnz
sub
jno
les
out
dec
scas
dec
pop
cwde
mov
ret
jl
test
popa
scas
jbe
dec
or
cmc
pop
loope
int3
retf
mov
pushf
cwde
ja
jno
sbb
ret
dec
outs
mov
bound
jae
(bad)
xlat
pop
pop
ficom
popa
(bad)
jmp
push
xchg
xchg
jp
or
test
stos
pusha
push
push
in
cmc
cmps
js
mov
sbb
inc
jbe
push
jb
mov
mov
or
mov
adc
cwde
or
int
stc
jns
pop
jnp
mov
les
mov
lods
or
cmp
outs
mov
in
popf
jp
lods
(bad)
mov
ret
push
in
mov
daa
mov
jge
out
adc
stos
cmp
xor
loope
xor
jmp
aam
inc
cmc
sub
icebp
ret
ret
outs
push
sub
xchg
mov
cmp
retf
xlat
push
xor
pop
fwait
sar
xor
dec
scas
mov
ja
imul
mov
std
shl
lods
fsubr
cmp
adc
movs
sbb
dec
aam
loope
add
adc
aam
or
popa
sbb
stos
mov
in
sbb
push
ret
out
movs
imul
hlt
mov
clc
push
mov
adc
inc
sub
and
in
sar
xchg
iret
out
cmp
pop
les
call
test
test
loope
pop
sahf
add
sub
xchg
and
inc
pop
xlat
push
jae
dec
cmps
shl
xchg
in
loope
repz
xor
lea
loop
sub
pusha
sbb
pusha
ds
cmp
push
movs
or
mov
push
adc
idiv
fdivr
lods
inc
xor
rcr
or
fidivr
cmp
mov
imul
(bad)
pop
aaa
jno
repnz
xchg
test
jmp
pop
dec
sbb
call
jmp
ret
repnz
sahf
sub
jge
test
(bad)
adc
and
aad
daa
xchg
imul
(bad)
and
(bad)
out
shr
dec
cs
and
(bad)
lods
mov
pop
repz
fnstenv
into
dec
gs
xchg
(bad)
jmp
sahf
pop
xor
movs
mov
xor
push
jb
inc
xchg
xchg
cmp
in
xchg
xchg
rcl
lods
mov
xor
jns
and
les
call
xchg
aas
inc
sti
ja
or
(bad)
pop
shl
in
imul
mov
pop
out
frndint
or
pop
enter
push
jb
pop
or
leave
xchg
or
dec
ret
cld
setb
dec
push
push
and
mov
out
xchg
pop
lea
dec
or
adc
sub
push
xchg
mov
and
mov
jge
add
stc
test
xor
jae
and
inc
fsubr
mov
sub
jb
dec
mov
pop
imul
aas
cmp
push
push
call
mov
add
or
fdivr
push
into
adc
pop
outs
in
xlat
pop
push
shl
(bad)
inc
sar
clc
sub
jae
scas
or
fbld
jbe
or
int3
out
ficom
inc
jno
and
add
cmps
in
dec
xlat
fbstp
sub
iret
cs
out
(bad)
sti
cwde
xchg
and
stc
mov
jnp
fsubr
ficom
ffreep
std
xor
(bad)
dec
sbb
das
sub
add
jb
cmp
dec
xchg
aam
inc
int
fisubr
(bad)
and
adc
out
xchg
enter
xor
jp
sub
jnp
ja
std
cdq
inc
cdq
push
les
xor
xchg
and
jp
outs
iret
ficom
pop
test
adc
push
das
in
aad
mov
mov
push
dec
sar
cmc
outs
adc
adc
and
or
mov
push
movs
inc
push
test
push
pushf
mov
and
sahf
and
arpl
stos
mov
lock
fdivr
test
xor
es
push
adc
scas
fist
or
sub
mov
pusha
into
push
pop
addr16
pop
pop
stos
imul
xchg
xor
cmp
sti
dec
sahf
inc
jmp
inc
in
retf
push
push
data16
jns
xchg
adc
sar
out
test
daa
out
xor
jo
sbb
sbb
adc
scas
aaa
fwait
jb
and
push
in
jns
xlat
je
xor
retf
pop
jns
cmp
mov
cmps
les
push
inc
cmp
repz
test
pop
cmp
aam
lahf
jae
jne
test
add
pop
jmp
sub
les
and
pop
xlat
inc
push
inc
sub
mov
dec
xor
pop
dec
cwde
je
mov
xchg
xchg
push
jmp
mov
test
and
(bad)
jne
fidiv
(bad)
sub
xor
ins
or
cwde
xchg
jg
jle
cwde
xchg
inc
mov
mov
imul
(bad)
push
and
mov
xchg
aam
mov
jmp
xchg
add
xchg
or
cmp
mul
lods
mov
or
cs
inc
mov
iret
outs
ret
test
and
pop
inc
ins
movs
ins
in
not
sbb
mov
jmp
inc
ds
pop
test
repnz
fcmovb
mov
ins
repnz
xchg
jb
and
out
pusha
jns
adc
js
scas
mov
not
mov
mov
sbb
outs
push
loop
pop
(bad)
sub
add
mov
inc
xchg
(bad)
cmp
add
lahf
xchg
cli
pop
icebp
and
jae
rcr
retf
inc
xchg
mov
jge
ins
out
jge
cmc
lahf
ret
cmp
dec
(bad)
mov
sbb
xor
pop
mov
or
and
and
into
mov
dec
icebp
and
xlat
adc
aaa
mov
sub
and
ss
ror
fstp
jg
xor
das
in
stc
push
jns
aam
shl
mov
movs
jns
and
xchg
jmp
dec
jb
test
test
repnz
cs
sub
add
push
or
jno
fnstcw
sub
or
mov
mov
je
dec
test
xor
sub
mov
sub
inc
xlat
ss
xchg
and
(bad)
repnz
jae
xchg
or
adc
call
outs
dec
add
adc
jl
pushf
(bad)
mov
adc
jae
lds
jle
sub
push
xchg
(bad)
jmp
pop
fistp
xchg
out
inc
jmp
movs
mov
add
bswap
popf
sub
mov
nop
shl
mov
out
sub
ins
enter
mov
pop
push
xor
pop
dec
jnp
ins
push
aaa
(bad)
adc
popf
sub
fisttp
cmp
add
fadd
popf
aam
mov
mov
xchg
lock
sub
ins
pop
movs
jb
and
xchg
dec
ror
sub
fwait
out
mov
iret
loopne
and
les
std
in
not
enter
in
call
popf
cwde
cmps
(bad)
in
imul
cmps
lods
loope
mov
cmc
fidiv
and
fild
dec
xchg
dec
stc
push
dec
loop
fist
dec
shl
jnp
mov
cmp
mov
pop
or
push
je
mov
sub
call
jl
enter
xchg
in
or
cmp
push
dec
mov
sti
pop
aad
dec
imul
or
push
pmaxsw
je
sbb
or
inc
mov
call
jmp
xchg
jnp
sub
mov
sub
xor
mov
or
and
sub
mov
sar
pop
ficomp
xor
xchg
loopne
cs
gs
jl
hlt
test
repnz
jge
sub
pusha
sbb
adc
xchg
sub
and
cdq
jae
sub
(bad)
and
scas
jns
dec
out
inc
cmp
ficomp
cmp
into
mov
shr
jecxz
mov
dec
pushf
repz
loop
nop
in
xlat
jae
xchg
jl
and
rcr
dec
fist
xchg
xchg
mov
xchg
and
iret
sbb
xchg
inc
int3
xor
scas
pop
jbe
mov
je
push
mov
mov
add
clc
sub
mov
push
cld
and
xchg
sub
mov
cmp
mov
jbe
lods
pop
cmp
pop
int3
or
push
les
rol
je
push
dec
dec
jmp
lds
mov
lock
popf
sahf
inc
sub
icebp
fst
scas
sahf
jmp
int
aaa
xor
cdq
and
push
fmul
cdq
xchg
stos
and
stc
xchg
stos
das
dec
ror
cmp
pop
mov
lea
(bad)
out
and
push
fstp
in
inc
out
fisttp
pop
aam
pop
push
fs
mov
imul
ds
pushf
in
mov
cmp
cmp
sti
mov
push
mov
jge
ret
cmp
cmp
mov
fdivr
cmp
fimul
push
xchg
repz
and
mov
dec
mov
dec
cmp
sub
outs
xchg
mov
ins
in
xor
enter
mov
or
test
cmp
into
xchg
in
es
arpl
xchg
xchg
scas
cs
lods
xor
ss
mov
js
mov
adc
jbe
jbe
pop
mov
cmps
fnsave
dec
pop
fldcw
scas
retf
add
xor
shr
inc
imul
mov
pop
arpl
rcl
cmps
outs
xchg
cmc
sbb
sub
cmp
mov
mov
mov
xor
xchg
jae
out
icebp
push
mov
and
pop
dec
xchg
mov
stos
sahf
fisubr
and
dec
daa
ss
mov
fild
pop
xor
call
mov
push
sbb
cwde
inc
jb
cs
push
sahf
data16
mov
and
xchg
inc
dec
in
dec
dec
xchg
xor
mov
push
adc
dec
cli
cli
inc
push
mov
jb
fldenv
test
cs
add
adc
(bad)
sti
repnz
push
push
xor
mov
pushf
inc
adc
push
push
pop
push
outs
cmp
jo
mov
enter
sub
outs
test
push
sbb
sub
je
cmp
inc
(bad)
pop
in
mov
clc
out
push
rcl
inc
scas
neg
inc
dec
xor
in
pop
rcr
sar
xchg
aam
out
test
mov
daa
mov
shl
mov
out
or
push
mov
lds
adc
mov
lods
cld
sub
xor
imul
addr16
push
outs
popa
and
push
sbb
dec
xlat
and
bound
scas
and
xchg
lock
stos
sub
mov
sbb
adc
sahf
add
dec
popa
pop
inc
jbe
push
test
clc
in
out
dec
test
inc
jns
cmp
jae
pop
ins
push
mov
push
and
and
mov
mov
sbb
div
jmp
pop
inc
sub
cmp
xchg
clc
in
cwde
xchg
mov
loope
out
mov
pop
and
out
in
fst
xchg
aad
stos
arpl
add
out
(bad)
rcr
mov
cwde
push
lods
popf
sti
dec
ds
mov
(bad)
jmp
out
adc
ins
push
pop
xor
jb
test
das
sbb
mov
dec
(bad)
rcl
inc
call
ins
push
xchg
push
push
mov
push
int
mov
dec
push
mov
or
es
xchg
xchg
inc
inc
xchg
xor
jo
mov
ja
and
adc
jle
jnp
(bad)
outs
and
dec
mov
sub
jecxz
xchg
sti
xchg
sti
push
leave
jno
mov
sbb
ins
mov
cs
jge
ror
dec
popf
sub
cmps
mov
imul
(bad)
dec
jns
movs
mov
xchg
sub
(bad)
and
icebp
xchg
sub
xchg
sub
outs
fadd
iret
icebp
fnstsw
xlat
jno
xchg
lea
int
mov
sub
lods
sub
outs
shl
sti
jb
in
cs
fwait
adc
adc
cmps
ret
sahf
fwait
jno
jecxz
mov
icebp
frstor
movs
or
mov
fiadd
dec
jno
sub
stos
mov
mov
cmp
shr
es
or
lahf
dec
mov
mov
mov
int
popa
fcomp
xor
test
push
mov
push
(bad)
inc
lds
in
push
push
scas
push
push
adc
imul
xchg
rcl
xchg
push
and
movs
stos
loopne
xor
sbb
xchg
out
fisttp
pop
xchg
add
dec
test
sbb
jecxz
xor
cmp
je
inc
(bad)
out
ror
and
xor
fstp
and
pop
xchg
or
and
(bad)
jae
stos
pop
call
(bad)
outs
imul
retf
mov
das
cmp
call
mov
je
jmp
sub
test
test
ss
addr16
mov
dec
popf
gs
rcr
jno
add
dec
cdq
mov
cmp
rcr
jl
fld
pop
sbb
pcmpeqb
into
add
ins
fxch
xchg
and
stos
cmp
dec
rcr
sar
push
lock
test
(bad)
pop
mov
mov
mov
fld
or
mov
mov
or
sub
and
push
push
shl
jle
call
jne
ja
or
je
sti
inc
xchg
fs
sbb
fst
(bad)
scas
cmp
pop
fwait
fs
push
push
ss
cwde
inc
mov
jecxz
jo
(bad)
push
ins
jl
xor
xlat
icebp
jge
and
jge
lds
jbe
cdq
mov
ja
dec
jb
xor
and
mov
in
repz
out
fmul
inc
ds
or
mov
cmc
icebp
jae
ja
or
sub
mov
sub
fild
push
adc
aad
dec
je
imul
mov
cld
push
pop
leave
addr16
outs
loope
in
xor
mov
add
ftst
adc
inc
int3
jmp
jne
jae
mov
sbb
xchg
pushf
mov
xchg
cwde
add
inc
(bad)
push
movs
je
sub
in
imul
ins
fs
ins
ret
sub
mov
(bad)
rcr
div
(bad)
dec
out
call
mov
in
leave
(bad)
push
sub
test
mov
add
mov
cmps
sub
js
(bad)
sub
je
aam
in
gs
and
jle
popa
or
out
popa
les
addr16
mov
(bad)
jae
push
cli
pop
adc
xchg
and
dec
sti
clc
xchg
aam
xchg
push
cs
movs
cmp
sub
xor
(bad)
test
clc
out
dec
leave
push
arpl
mov
push
in
pop
(bad)
outs
xchg
gs
repnz
daa
test
sub
jmp
fwait
mov
dec
dec
sub
and
mov
xchg
and
pop
retf
mov
hlt
jge
xor
sbb
and
push
dec
stc
pop
cmp
lods
cld
retf
fld
(bad)
aad
movntq
out
jge
dec
adc
cmp
dec
outs
dec
fwait
out
fidivr
mov
dec
int
pop
sub
lahf
xchg
fist
leave
sub
idiv
push
ss
jo
push
add
pop
lds
test
stos
fwait
jecxz
cmps
adc
mov
cdq
imul
push
push
loopne
je
jb
and
adc
inc
cmp
inc
lea
sub
fwait
jbe
retf
push
pop
loope
add
mov
sbb
push
cli
dec
mov
mov
mov
jae
retf
fs
(bad)
out
scas
jnp
jmp
scas
jmp
pushf
sets
mov
popf
les
mov
mov
mov
mov
sbb
xchg
clc
leave
and
xor
inc
cmc
icebp
stos
jnp
mov
test
push
loope
xlat
icebp
fnstsw
in
push
inc
outs
ja
es
push
sub
hlt
enter
repz
xchg
dec
jmp
sbb
and
jae
push
mov
shl
lock
cld
psubw
push
jb
jbe
mov
lods
cmp
enter
jnp
dec
(bad)
fnsave
(bad)
and
push
adc
out
jecxz
dec
lock
retf
test
lods
push
push
shl
push
sbb
aaa
mov
dec
je
jo
scas
jne
cld
out
test
xchg
sub
push
es
pushf
(bad)
outs
xor
xor
cdq
retf
sbb
mov
addr16
pop
pusha
cmps
or
retf
fs
out
mov
fnstsw
mov
clc
xchg
xchg
retf
outs
mov
jno
cmc
sub
pop
test
movs
mov
add
add
mov
fld
adc
push
imul
adc
xchg
mov
ja
or
lods
and
cmp
sub
dec
jge
xchg
sub
fsubr
movs
mov
jns
movs
ds
xor
cmp
enter
jle
push
jmp
ds
nop
cld
adc
lds
fistp
test
pop
imul
push
sbb
sub
or
out
adc
xchg
ffree
mul
push
rcl
imul
ins
push
(bad)
mov
lods
in
fisub
push
fstp
ins
hlt
stos
pop
ja
call
adc
ret
or
js
push
sub
icebp
ds
sahf
dec
xchg
adc
ret
stos
fadd
repnz
jge
xor
pop
and
repnz
jp
test
dec
dec
mov
jecxz
jmp
jp
scas
push
mov
fldenv
jmp
hlt
ret
aam
and
cmp
(bad)
and
fsubr
jne
rcr
and
retf
inc
mov
fld
loope
dec
push
je
jge
jae
fisub
jmp
call
lahf
cmp
cmp
add
jle
outs
in
dec
test
ficom
into
lods
mov
fst
movs
push
or
sar
dec
dec
xchg
sbb
retf
add
scas
jecxz
add
jo
cmps
mov
sub
dec
scas
cmps
bound
lahf
sbb
or
retf
fnstenv
ss
fnstcw
and
pop
sub
mov
xchg
dec
iret
hlt
xchg
sbb
pop
xlat
int3
jecxz
push
aas
popf
dec
movs
dec
mov
sub
jg
es
sub
inc
nop
push
icebp
inc
inc
ds
cmp
xchg
mov
shl
push
(bad)
mov
cli
fwait
sbb
xchg
(bad)
fsubr
xor
(bad)
js
es
mov
mov
(bad)
out
mov
jmp
mov
aaa
jbe
xor
mov
and
sbb
inc
ins
sbb
xchg
jae
outs
movs
jae
xor
add
mov
mov
scas
sub
dec
cmps
popf
mov
xchg
add
ds
adc
movs
mov
pusha
ja
cmp
jecxz
sahf
add
gs
ret
pop
mov
aad
enter
adc
pop
xchg
pushf
push
jne
jg
xchg
pop
pop
cmp
and
push
fs
or
aad
aam
loopne
std
jb
mov
inc
cmp
lahf
dec
xchg
pop
retf
jbe
cwde
inc
ret
jecxz
adc
and
push
cmp
pop
xor
xchg
or
xchg
or
push
mov
jl
and
inc
repnz
lods
fdiv
and
push
shl
inc
cmps
sub
aas
loop
inc
adc
push
mov
jae
xchg
nop
mov
mov
dec
inc
(bad)
xchg
mov
jp
pop
or
add
dec
push
popf
inc
mov
ja
lea
cld
imul
jbe
dec
das
leave
mov
pop
sub
ds
out
mov
(bad)
push
adc
ins
call
jg
fs
outs
movs
adc
xchg
or
cmp
dec
in
(bad)
lods
sbb
movs
ins
scas
jnp
retf
gs
scas
into
adc
jo
fdivr
in
scas
call
in
mov
mov
or
ins
loopne
and
jg
sbb
leave
lods
mov
div
xor
jbe
leave
xchg
and
leave
jle
sahf
aas
adc
cmp
fidiv
and
aam
cwde
ret
cmp
mov
lock
mov
pop
xchg
xchg
lea
into
jne
inc
push
aad
pop
inc
xchg
cld
mov
adc
iret
push
adc
mov
mov
xor
aas
lds
push
test
sub
addr16
loop
enter
test
pop
fs
test
xor
aad
push
sbb
js
retf
add
mov
shl
outs
outs
xor
jbe
sbb
in
and
mov
cmp
out
(bad)
xlat
stc
cmp
inc
cdq
ret
xchg
xchg
test
jl
pop
and
jecxz
jl
pop
popf
mov
mov
lods
and
xor
retf
out
popf
sbb
sub
(bad)
out
add
imul
loop
mov
out
cs
xchg
xchg
mov
jg
sbb
mov
jl
fnsave
xchg
imul
jp
or
retf
gs
outs
adc
sbb
xchg
mov
inc
fcom
jge
jo
push
push
and
mov
fld
rol
sub
fcomp
and
iret
dec
mov
and
mov
rep
jnp
or
lds
test
(bad)
push
out
fdiv
mov
xor
pushw
jae
repnz
sbb
mov
inc
adc
inc
mov
pushf
xor
push
lds
in
jg
call
ins
ror
frstor
ss
out
jno
les
addr16
int
sar
jecxz
push
push
sub
test
push
cmp
into
and
scas
cmps
and
push
jl
add
push
cs
sbb
shr
inc
out
lods
repnz
mov
jp
out
repnz
fsubr
xchg
mov
mov
xchg
jmp
push
ins
inc
in
push
clc
and
xchg
add
mov
enter
scas
xor
pop
push
xchg
sub
das
enter
ins
fnsetpm(287
pop
pop
mov
ins
jo
movs
ins
adc
retf
ficom
movs
add
xor
shl
lock
in
adc
sub
mov
xchg
in
popa
retf
scas
cwde
fwait
lock
sbb
dec
push
loopne
js
out
das
jmp
mov
xor
test
mov
call
ret
dec
sub
or
into
jecxz
loope
sub
and
mov
pop
mov
sbb
add
mov
jo
cmp
cmp
in
mov
pop
ja
mov
mov
pop
dec
mov
nop
cmp
shl
ja
push
stos
sbb
out
cmps
je
ror
sbb
mov
adc
pushf
ins
ins
mov
arpl
ss
outs
dec
sti
shr
cdq
outs
addr16
mov
cmps
mov
inc
or
push
retf
hlt
jno
jno
mov
adc
ss
sbb
retf
sahf
xchg
or
cmc
jmp
sub
inc
cdq
mov
sbb
push
xlat
(bad)
out
xor
jbe
mov
jge
jbe
jle
jl
inc
cmps
cmp
push
mov
mov
dec
dec
xchg
mov
xchg
or
lds
xchg
test
cmps
sub
push
cld
mov
inc
cmp
sbb
in
inc
mov
lea
fwait
pushf
out
xchg
pusha
fisub
cmp
push
pushf
(bad)
into
pop
in
ss
inc
xchg
aaa
push
sbb
test
dec
stc
dec
leave
or
lods
jg
add
in
dec
outs
dec
pop
bound
cli
and
inc
jae
popf
sbb
fndisi(8087
test
(bad)
(bad)
jmp
sub
and
mov
ror
pop
sbb
mov
out
push
test
cmp
lock
and
jbe
ja
dec
(bad)
test
add
mov
in
or
out
cmps
int3
cdq
cs
outs
fmul
mov
fs
mov
jl
cs
adc
icebp
fist
xchg
pop
sub
(bad)
(bad)
iret
sub
xchg
lock
jle
retf
icebp
fnstsw
lock
adc
shl
je
push
dec
enter
movs
fstp
sbb
push
mov
fld
push
js
sub
aas
xchg
data16
mov
cmp
pushf
mov
nop
(bad)
jb
and
(bad)
inc
adc
fwait
in
pop
mov
rcr
lahf
lds
jg
stos
frstor
xor
mov
jl
add
xchg
mov
jns
xor
xchg
push
cld
mov
jns
fs
push
je
mov
xor
sub
imul
daa
xchg
gs
(bad)
mov
sub
leave
push
std
xlat
xor
repz
pop
pusha
or
push
adc
outs
jmp
(bad)
ficom
push
repnz
dec
pop
fcom
xchg
je
sub
stos
imul
sub
js
jbe
js
ja
mov
sub
scas
clc
push
test
in
push
ss
aam
jp
and
sbb
pop
fstp
mov
(bad)
ja
inc
mov
pop
jae
scas
push
cmps
stos
fs
arpl
leave
(bad)
out
popa
cmps
inc
adc
push
push
xor
adc
test
std
xor
jo
sbb
(bad)
cmp
push
mov
loope
int3
sub
cmp
adc
pop
stos
sub
cmp
mov
pop
add
cmps
sahf
and
and
(bad)
sub
ds
mov
push
adc
add
ja
xchg
push
mov
xor
mov
popa
rcr
in
out
fcom
scas
jbe
arpl
sti
mov
mov
adc
jae
push
adc
fisttp
retf
sub
and
push
push
pop
jl
icebp
jnp
jb
jge
aaa
push
xchg
and
mov
(bad)
lock
call
push
out
hlt
dec
(bad)
test
(bad)
jl
pop
mov
mov
xor
sub
fcomp
dec
or
sar
test
fmul
xchg
jmp
mov
xchg
mov
jecxz
adc
and
xchg
sbb
sub
and
jns
jbe
bndldx
scas
push
stc
aad
cmp
cs
add
fist
nop
xchg
mov
js
jns
jbe
cmp
imul
mov
pop
(bad)
sub
jae
ins
sbb
dec
and
aad
push
xor
adc
into
gs
jb
(bad)
gs
call
xchg
test
fcomp
rol
mov
or
outs
(bad)
jns
xchg
and
cmps
js
jns
pop
test
iret
and
inc
sub
fdiv
xchg
and
in
add
ins
jo
pop
mov
outs
in
jle
js
aad
push
jmp
(bad)
cwde
dec
xor
push
mov
pop
sbb
fadd
sub
repnz
inc
cld
iret
adc
hlt
fdivr
pop
jnp
cmp
lods
lods
leave
jns
aad
lahf
(bad)
mov
retf
dec
fisubr
loope
hlt
pop
mov
pop
pop
xchg
push
push
int3
sub
fidiv
dec
or
fisubr
sbb
jle
movs
sub
rcl
cmp
xchg
pop
sub
sub
jge
sbb
xchg
fucomp
cmps
adc
push
push
popa
adc
(bad)
in
jl
xchg
xchg
retf
pop
(bad)
lods
xor
mov
jb
cwde
(bad)
enter
sub
test
out
push
(bad)
sar
xchg
add
in
cmp
(bad)
xchg
and
cmps
setbe
aas
mov
outs
sbb
and
sub
fsub
sbb
pop
xchg
pushf
xchg
or
mov
mov
mov
push
cmps
call
mov
cmp
inc
adc
in
sub
out
stc
popf
jae
mov
pusha
and
xor
lock
sbb
leave
js
lahf
mov
push
aam
in
adc
and
cmp
mov
das
cmp
mov
rcr
mov
cmp
push
xchg
xor
in
popa
sbb
lods
(bad)
movs
mov
fiadd
and
mov
cmps
sub
pop
mov
xor
outs
movs
arpl
inc
pop
inc
cmp
xchg
lahf
sbb
cmp
das
push
inc
popa
push
(bad)
ja
out
adc
int
jp
or
(bad)
icebp
(bad)
mov
cmp
add
cmps
scas
mov
ins
shl
shl
out
push
jmp
jno
aaa
dec
inc
shl
fld
outs
adc
push
adc
test
dec
cmp
(bad)
and
add
pop
gs
push
push
lds
cmps
adc
xchg
pop
dec
jl
xor
mov
loope
fcomp
push
in
mov
addr16
ins
cmc
push
mov
inc
aad
int
cmp
pop
(bad)
idiv
iret
out
jle
loop
sar
mov
(bad)
mul
leave
movs
jecxz
fstp
in
inc
sbb
xor
movs
jge
sbb
call
sahf
xlat
push
jns
in
stos
sbb
ja
je
or
sub
int
xor
xchg
or
and
mov
xchg
call
shr
pop
jbe
enter
imul
sub
pusha
cmps
mov
xor
fst
je
mov
mov
xchg
or
xchg
mov
(bad)
repnz
repnz
lods
xchg
fwait
mov
pop
(bad)
ja
pop
out
push
mov
mov
cmps
shl
in
inc
jnp
sbb
gs
icebp
fucom
jb
sahf
ds
pop
xchg
out
pop
scas
fdivr
ds
dec
jne
icebp
fld
jae
dec
mov
stc
ror
sbb
mov
mov
ja
push
jbe
mov
xlat
addr16
rcl
cmp
cmp
cmps
mov
fcomp
mov
stos
push
sub
and
and
inc
xchg
adc
xor
pop
mov
and
jns
clc
cmp
pop
xchg
lahf
popf
jb
pop
sbb
inc
xlat
mov
mov
ds
sti
cmp
push
fild
xor
push
je
lods
fdiv
cs
test
xor
mov
add
enter
jno
jge
xchg
ins
cmps
imul
mov
sub
and
arpl
xchg
mov
xor
xor
neg
sub
enter
cli
xchg
adc
fmul
xchg
xchg
stc
shl
jl
loopne
ins
sub
popf
inc
fsubr
mov
idiv
in
mov
je
push
push
jns
(bad)
pop
push
fild
test
sbb
mov
retf
inc
push
popf
aaa
not
into
mov
inc
(bad)
dec
in
sub
sub
xchg
and
jp
adc
mov
sub
jmp
mov
dec
cdq
xchg
or
xor
lock
cmp
xor
adc
imul
xrelease
xchg
jno
call
xchg
xor
mov
gs
stc
enter
inc
in
xchg
inc
sbb
sahf
loop
push
cmps
and
movs
js
lea
or
xchg
enter
jns
and
inc
cld
cwde
cwde
push
push
out
mov
ret
sub
sbb
sub
(bad)
fs
out
jne
push
psllq
and
inc
cmp
xlat
pop
push
mov
push
jg
mov
(bad)
out
loope
(bad)
jo
test
sub
dec
push
push
inc
xchg
mov
pop
stos
pop
jecxz
fnsave
dec
test
ret
jmp
fcmovnbe
pop
(bad)
in
xchg
scas
push
in
stos
in
xchg
and
pop
cmc
sub
push
xor
fld
mov
sub
stos
sub
neg
aam
push
(bad)
dec
mov
dec
push
(bad)
jae
sub
loope
mov
movs
das
push
adc
loop
sti
or
xor
mov
xchg
in
mov
fisubr
jl
fmul
in
mov
mov
out
lea
imul
das
push
test
sub
inc
pusha
cmps
(bad)
push
fcom
sub
xchg
pushf
mov
(bad)
jl
jmp
out
jno
xlat
icebp
jge
pop
ds
ja
mov
call
gs
clc
dec
or
jns
(bad)
mov
addr16
jecxz
popf
rcl
jno
fistp
cmp
lea
shl
test
dec
ret
fsub
sub
imul
sub
xchg
jge
sub
jl
ins
mov
movs
add
pop
pushf
out
inc
xor
dec
sub
stc
xchg
sub
addr16
int3
mov
(bad)
pcmpeqw
xchg
js
sahf
mov
jp
jmp
and
or
les
imul
jle
in
fiadd
arpl
push
push
fdiv
jl
cmp
stos
in
jge
mov
xor
movs
dec
dec
dec
cdq
call
aaa
xor
fcmovb
shl
stos
pop
adc
shl
out
clc
sub
out
cmp
iret
lods
arpl
out
les
dec
push
ja
mov
dec
jmp
clc
aad
jns
pusha
ss
pop
jecxz
(bad)
repz
ds
push
mov
ja
icebp
push
or
xchg
jle
loop
cli
aas
dec
cmps
mov
jae
xchg
mov
cmps
pop
xchg
pop
pop
outs
pop
aaa
jae
lock
outs
push
ficom
cmps
aam
movs
clc
call
imul
clc
outs
sbb
sub
jmp
push
pop
jne
dec
dec
enter
and
jbe
leave
jnp
retf
sahf
outs
push
xchg
scas
push
adc
sahf
mov
imul
outs
push
js
mov
into
push
ins
jb
cmps
lahf
in
jl
or
test
fst
aam
js
or
outs
jp
xchg
dec
cdq
xchg
mov
cmp
int3
and
adc
sub
mov
xchg
adc
fnstenv
leave
xchg
js
jecxz
cld
push
jl
push
popf
jb
and
into
inc
je
and
shr
aam
push
sti
movs
xor
cmp
mov
mov
sbb
pop
adc
adc
(bad)
jl
cdq
popf
mov
test
stos
pushf
retf
jl
cmp
fld
call
jp
idiv
in
lahf
jb
pop
xchg
cmps
clc
dec
push
(bad)
cmp
pop
sar
mov
ds
cli
adc
or
xchg
push
outs
sub
adc
sub
in
mov
fsubr
dec
cdq
sbb
loopne
push
int3
inc
inc
sub
loop
cmp
push
repz
(bad)
js
cdq
xlat
add
xor
test
dec
jno
fidivr
inc
(bad)
iret
mov
rcr
in
int3
mov
ss
push
gs
out
iret
retf
add
sub
fwait
push
xchg
pop
push
shr
retf
outs
push
cmp
ficom
cmc
repnz
fdivp
retf
cmp
popf
out
and
and
xlat
icebp
jnp
sbb
dec
jbe
pusha
xchg
ror
in
std
(bad)
push
mov
sub
(bad)
cmc
pop
in
pop
hlt
push
imul
in
ret
and
jns
pop
mov
(bad)
in
cwde
xor
ret
pop
xchg
jl
push
jbe
mov
pop
fdiv
in
pushf
xchg
xchg
xor
xchg
or
dec
cmps
movs
std
inc
xor
push
mov
xor
ficom
inc
cdq
(bad)
sub
jo
xchg
ins
lods
ds
aaa
jns
rcl
mov
or
sar
and
xchg
repnz
test
jge
imul
sub
push
aas
mov
add
arpl
and
xor
lahf
jecxz
xor
pop
sar
out
push
or
(bad)
jbe
fs
cmps
call
xchg
push
and
dec
sar
add
add
(bad)
in
popf
pop
xchg
lods
dec
xchg
data16
add
push
in
mov
test
jno
add
mov
int3
sti
push
fild
(bad)
xor
je
dec
xchg
out
xor
stc
lahf
arpl
jmp
(bad)
cmp
(bad)
(bad)
jge
jg
jecxz
mul
jno
mov
sti
jmp
(bad)
cmp
mov
jnp
ds
call
jecxz
in
lods
(bad)
mov
(bad)
sbb
arpl
stc
jno
(bad)
iret
in
(bad)
cli
out
push
pop
mov
ds
jl
(bad)
fdivr
xchg
call
dec
std
jecxz
out
jecxz
outs
sbb
sar
jecxz
(bad)
icebp
ja
jl
(bad)
mov
retf
out
or
fistp
out
push
xor
push
sti
sar
ds
fadd
out
(bad)
xor
mov
idiv
fbstp
iret
cmp
(bad)
js
outs
jp
shl
iret
jne
push
arpl
fcom
add
loope
inc
jecxz
(bad)
cmp
mov
icebp
push
xor
adc
xor
jle
icebp
jl
mov
sahf
jmp
iret
repz
test
pop
xlat
int
(bad)
js
push
jae
mov
jle
xlat
popa
mov
frstor
lods
pop
jns
imul
jmp
jbe
call
mov
shl
adc
sets
and
pop
jg
mov
jbe
imul
lods
cwde
out
jle
(bad)
addr16
pop
mov
cmp
arpl
inc
pop
cmp
lahf
je
xor
sbb
push
hlt
fwait
shl
scas
cmp
arpl
rcl
xlat
arpl
ds
jp
inc
daa
mov
cdq
cmp
xor
imul
xor
pop
jns
lds
sbb
sbb
mov
pop
in
pop
ret
jle
shl
mov
in
push
(bad)
cmp
call
pop
(bad)
jl
inc
out
pop
aas
jmp
inc
enter
sbb
sti
aas
inc
outs
push
test
add
or
sbb
pop
sbb
jae
mov
(bad)
call
and
pop
and
lahf
jecxz
nop
sbb
in
or
int
mov
push
fidiv
(bad)
adc
pusha
or
mov
mov
jle
mov
(bad)
jle
fs
outs
jp
imul
or
imul
mov
mov
add
sub
or
in
call
cmp
ja
pop
aas
aas
pop
leave
test
lea
inc
inc
daa
lods
jecxz
ds
xor
in
mov
mov
clc
jbe
lahf
ja
push
dec
(bad)
stos
rol
xor
mov
cmp
cmps
push
jbe
or
popw
jp
inc
jnp
call
xor
xchg
imul
push
add
cmps
outs
js
add
in
loopne
add
xchg
(bad)
cmp
mov
sbb
xor
out
sar
in
jge
add
jne
jp
mov
rcr
ins
out
push
je
mov
leave
stos
add
nop
adc
imul
cs
mov
(bad)
jge
repz
lahf
adc
addr16
jb
cmp
push
xor
add
pusha
rol
in
pop
rol
push
out
sub
xor
nop
mov
fiadd
fadd
adc
cwde
sbb
das
xor
jae
cmp
sbb
aaa
ret
cmc
mov
pop
out
sub
fadd
cmp
mov
int
cwde
out
add
enter
xor
cmc
add
outs
lds
jmp
lds
pop
xchg
xchg
dec
into
sbb
add
retf
ins
sbb
lds
or
mov
out
or
test
fwait
ss
inc
mov
jecxz
mov
int
mov
sti
fild
data16
mov
pop
movs
push
xor
xchg
cmp
rcl
cmp
fstp
xor
clc
lods
(bad)
fsubr
and
jnp
sbb
add
ror
das
cwde
inc
push
pop
mov
fiadd
stos
xchg
cmp
push
gs
push
push
int3
xchg
mov
out
enter
add
out
shr
jns
repz
jmp
push
fsub
push
push
xchg
add
xchg
cs
fadd
mov
cmp
imul
enter
mov
ja
test
add
push
ficom
fst
imul
test
and
cs
aas
es
sub
sub
aam
lock
sub
js
pop
outs
sub
mov
repnz
ja
sbb
add
shl
test
iret
or
and
mov
inc
fbstp
inc
cdq
mov
or
pop
(bad)
xor
shr
pop
mov
fcmovu
icebp
mov
jge
xor
push
jle
icebp
cmp
mov
(bad)
ror
inc
dec
pop
out
xchg
jne
cld
cdq
xor
add
popa
xchg
imul
mov
aad
xor
out
test
data16
mov
mov
test
pop
push
ss
push
sbb
push
pop
jmp
rol
and
pop
pusha
mov
lds
dec
lods
nop
add
pop
sbb
sbb
call
das
inc
call
inc
xor
hlt
cld
or
out
push
mov
cmp
or
fdiv
je
add
cmp
ins
or
repnz
psrld
mov
dec
aas
mov
stos
hlt
adc
hlt
mov
or
jb
or
pop
popa
retf
mov
cs
mul
mov
out
pop
inc
mov
call
jmp
int3
xlat
jp
jmp
loope
xchg
pop
pop
rcr
jae
repnz
sbb
fst
loopne
or
cmp
mov
out
sub
daa
ror
(bad)
je
lea
mov
ret
sbb
or
cmp
(bad)
sbb
push
adc
pop
in
jno
push
fcom
fld
jge
pop
retf
jge
dec
mul
and
jle
cmp
lods
call
stos
mov
mov
cmp
call
fsubr
adc
pop
jmp
jge
cmp
je
or
arpl
cmps
xchg
mov
mov
mov
pop
push
mov
mov
lods
imul
scas
mov
jae
mov
push
fldenv
(bad)
jle
nop
out
aam
xchg
iret
dec
pop
fs
sub
sub
retf
mov
and
test
leave
mov
out
push
cli
sub
xchg
and
pop
mov
jne
jecxz
fnstsw
sub
(bad)
movs
(bad)
push
movs
mov
jmp
or
cmps
hlt
pop
or
mov
pop
dec
pop
rcl
imul
jbe
and
ja
into
cwde
cli
scas
mov
sar
shr
cmps
xchg
in
xlat
add
(bad)
(bad)
jecxz
pop
jo
fld
(bad)
scas
cmp
(bad)
sub
retf
fs
adc
dec
xchg
outs
xchg
in
scas
fdivr
sti
xor
addr16
mov
jnp
jb
mov
in
mov
mov
fsubr
or
int
mov
lock
push
xor
xor
out
push
adc
adc
mov
scas
mov
in
dec
in
xor
sub
aaa
pop
test
cmps
dec
outs
sbb
jnp
fsubr
nop
cs
in
add
push
push
rep
clc
mov
cmp
pop
gs
dec
adc
jmp
pop
mov
pop
lds
in
or
call
xor
out
sub
cmp
into
sbb
je
mov
push
mov
retf
dec
shl
add
js
lock
mov
aas
popf
xchg
fnsave
mov
out
mov
in
push
leave
mov
popf
or
bound
mov
add
or
repz
cmp
pop
call
add
inc
mov
push
lods
pop
das
sbb
sbb
into
pop
movs
out
jmpw
push
cmp
or
jmp
daa
inc
loopne
push
leave
test
xchg
icebp
xor
shr
adc
mov
inc
cmp
push
ror
in
or
into
sub
mov
dec
out
sbb
cmp
and
xor
ss
push
dec
gs
jp
adc
hlt
jae
bswap
xor
jnp
enter
popa
xchg
lods
nop
mov
xchg
jns
mov
mov
push
daa
sub
mov
mov
js
loopne
mov
jne
add
and
jmp
cld
push
fs
in
mov
loopne
mov
test
mov
xchg
test
push
mov
bound
test
(bad)
aas
stos
int3
out
test
inc
stos
jo
and
stos
(bad)
cmps
rol
aad
popa
or
test
or
push
gs
dec
fdiv
or
jmp
xchg
pop
popa
fisttp
ror
iret
es
cmps
xchg
(bad)
dec
sbb
inc
or
cmp
push
cli
jmp
and
jo
lods
hlt
inc
add
adc
je
and
xchg
mov
jg
mov
stos
mov
sub
sbb
mov
sub
xchg
push
lods
adc
inc
mov
fstp
and
dec
mov
cmps
sub
imul
int3
dec
inc
outs
or
mov
push
sub
dec
fist
push
fidiv
jns
pusha
xchg
out
xchg
adc
push
enter
xor
jnp
je
mov
js
or
mov
push
sbb
dec
push
mov
add
enter
mov
popf
inc
xor
frstor
sbb
cmp
sub
out
jg
and
mov
test
xchg
(bad)
mov
dec
jbe
jmp
out
sbb
sub
mov
popa
cmp
sub
dec
push
frstor
mov
imul
fcomp
repnz
test
cdq
xlat
sub
xchg
stos
fcomp
dec
out
cmp
and
(bad)
imul
sbb
ins
retf
xor
xchg
pop
xchg
push
fbstp
in
or
dec
cmp
xchg
and
mov
sbb
xor
test
and
ss
adc
mov
sub
pause
sbb
mov
sub
sub
push
pop
inc
daa
lods
inc
jno
ret
lods
stos
inc
fiadd
stos
ror
inc
ror
push
sbb
fidiv
jl
cmp
jle
jns
pop
out
mov
loop
pop
and
sbb
mov
ret
push
jae
sbb
fld
jl
lock
ret
je
cmps
mov
repnz
jmp
jmp
stos
mov
mov
loope
stos
into
sub
xchg
inc
lds
sbb
pop
xor
mov
out
sub
outs
cmp
inc
adc
test
fist
rcl
inc
xchg
outs
arpl
fld
or
in
cmps
dec
loopne
adc
ss
in
and
cmp
dec
xchg
mov
xchg
mov
inc
inc
popa
retf
add
call
pushf
add
mov
out
mov
and
enter
lods
pop
and
scas
sub
jbe
clc
mov
dec
cmp
mov
addr16
inc
pop
lods
call
cdq
mov
(bad)
cmp
(bad)
jns
push
in
dec
ss
mov
mov
jae
add
shl
mov
mov
test
jmp
mov
mov
das
retf
stc
mov
(bad)
cs
aaa
(bad)
ins
cli
pop
jo
push
adc
mov
lds
int3
xor
sbb
fwait
mov
push
arpl
mov
pop
push
mov
stos
xchg
ja
pop
mov
lods
in
popf
pop
ds
es
stos
call
fadd
sahf
or
or
bound
dec
xor
aaa
jno
mov
imul
dec
ds
ror
push
fmulp
out
add
sbb
ror
adc
push
lahf
dec
repnz
push
outs
ror
dec
sbb
mov
add
jge
test
jns
ret
mov
adc
stc
or
fnstenv
ret
in
leave
cmps
adc
mov
inc
movs
repz
jnp
push
or
xor
pop
inc
add
mov
inc
leave
fisttp
push
push
popf
pop
and
movs
pop
cli
rol
mov
aam
mov
or
pop
xchg
fidivr
jecxz
pop
lock
cmp
mov
mov
outs
xchg
jg
movs
dec
ss
dec
dec
pop
test
sub
pop
call
or
popf
sahf
scas
push
dec
ror
call
out
lods
mov
inc
fxch
mov
inc
push
lods
cdq
mov
add
aaa
sub
xor
lock
mov
popf
cs
iret
out
mov
xor
mov
or
jbe
movs
xchg
cdq
shl
out
mov
or
cld
mul
not
mov
mov
mov
in
pushf
pop
idiv
pop
in
je
popa
lods
loopne
dec
mov
inc
imul
movs
sbb
xor
jg
mov
sar
mov
xchg
jb
xor
adc
fs
adc
push
nop
mov
dec
adc
mov
(bad)
scas
mov
mov
push
mov
leave
(bad)
mov
lahf
cmp
dec
rcr
jae
dec
jo
xchg
movs
jns
mov
leave
cmp
lods
loop
je
aad
int3
cwde
popf
jge
in
sbb
lods
loop
out
sbb
jmp
adc
out
leave
inc
push
mov
outs
sbb
retf
add
mov
out
lock
cdq
push
push
push
cs
retf
sbb
jbe
fwait
mov
dec
mov
(bad)
bound
pop
pop
cmp
and
rcl
xor
sbb
ss
sub
jns
pop
in
add
sbb
gs
xchg
mov
push
lods
jge
iret
(bad)
pop
repnz
adc
xchg
jecxz
aam
in
(bad)
shl
lahf
mov
mov
mov
and
fidiv
mov
outs
mov
adc
pop
jne
dec
hlt
call
mov
xchg
mov
mov
or
inc
fdivr
add
mov
adc
dec
nop
or
and
test
adc
inc
cmp
sbb
lods
push
pop
xchg
or
dec
int3
ins
push
add
cdq
dec
jae
and
adc
sub
mov
mov
add
enter
gs
xor
or
pop
adc
sahf
fwait
(bad)
sbb
stos
inc
inc
pop
inc
mov
iret
(bad)
jmp
movs
add
fimul
push
push
sub
loope
mov
push
mov
pop
push
mov
mov
int
xchg
aaa
dec
dec
jg
daa
sub
pop
lods
js
ja
cdq
mov
mov
and
pop
lods
cmc
add
sbb
pusha
cmp
xor
neg
loope
jne
inc
adc
and
aas
xor
shl
mov
pop
jne
stos
sar
xlat
js
push
sub
jl
jb
jmp
fsub
push
pop
xchg
inc
adc
push
popa
dec
aaa
cmps
mov
sub
pop
in
push
pop
rcr
cs
retf
adc
std
push
clc
mov
out
iret
js
lods
mov
mov
std
outs
push
cli
xchg
mov
aaa
add
add
adc
loopne
cmps
hlt
sbb
shr
mov
test
sub
ins
ds
adc
adc
shl
lahf
gs
leave
retf
xor
iret
sbb
clc
push
jp
push
into
fdiv
and
arpl
jmp
call
lahf
mov
pop
daa
sbb
adc
jb
jmp
sbb
cmp
test
cmp
fsub
mov
lds
push
lods
stos
adc
push
dec
pop
gs
stos
scas
addr16
mov
fwait
push
jecxz
test
shld
add
sar
int3
or
stos
bnd
mov
mov
ins
stos
hlt
dec
xchg
fild
shr
je
mov
pop
aad
jge
mov
sub
push
mov
test
ret
call
jo
mov
jae
mov
fcmove
inc
adc
push
nop
es
sbb
rcl
or
cmps
inc
out
pop
jp
pop
adc
ror
mov
add
add
addr16
imul
adc
test
xchg
mov
or
push
stc
xor
stos
xchg
push
pop
xchg
sub
test
fdiv
sub
pop
shr
xor
dec
mov
sub
fld
adc
add
push
fsubr
sti
test
or
repz
lock
mov
in
je
mov
push
jecxz
(bad)
sub
pop
fwait
iret
int
inc
push
sbb
adc
gs
cmp
xor
jb
pop
jnp
or
mov
stc
rol
inc
cmps
pop
mov
stos
imul
ins
fwait
iret
sbb
xchg
int
adc
or
test
arpl
and
psubusb
hlt
daa
pop
cmc
xor
std
sbb
ja
or
repnz
sub
sar
push
or
cld
sar
cmps
mov
pop
adc
mov
test
push
and
pusha
jmp
xor
mov
stc
push
inc
mov
out
xchg
inc
xchg
push
inc
cmp
xchg
sbb
dec
jbe
gs
in
or
aam
mov
push
mov
cmps
aam
ret
loopne
or
loope
xchg
cmp
adc
sub
push
or
push
fidiv
mov
xchg
das
push
cwde
(bad)
hlt
icebp
mov
jbe
mov
xor
mov
push
push
lahf
repnz
out
dec
dec
mov
ret
call
mov
pop
(bad)
scas
int
into
sbb
sub
push
leave
fisttp
add
outs
sbb
xchg
xchg
xor
jecxz
inc
test
pop
mov
ds
xchg
pushf
and
or
int3
sub
add
mov
push
adc
xchg
push
or
call
neg
test
ins
ficomp
stc
sub
inc
push
lds
movs
pcmpgtb
mov
sbb
xor
fstp
or
push
fst
mov
mov
repz
xor
sub
aaa
pop
cmp
cwde
jg
jg
pusha
fistp
lods
sub
sub
iret
test
(bad)
dec
lock
xor
push
mov
and
mov
inc
xor
enter
jno
dec
jne
fmul
push
or
mov
xor
mov
bound
test
rcr
sbb
popf
push
nop
xor
outs
or
mov
mov
pop
mov
pop
test
arpl
and
repz
sub
fcom
sub
and
out
mov
inc
icebp
or
sbb
ins
dec
retf
sbb
dec
pop
pushf
movs
ficom
imul
or
xchg
pop
xor
out
sbb
or
sbb
int
adc
adc
sti
mov
clc
xchg
das
dec
pop
hlt
fmul
jbe
gs
mov
pop
sbb
add
sbb
inc
popf
cmp
mov
or
mov
pop
pop
dec
xchg
add
div
xor
pop
xor
test
xchg
add
sbb
aaa
retf
jo
clc
cld
(bad)
xor
fwait
inc
loope
pop
mov
out
pop
mov
push
or
daa
sbb
push
(bad)
push
xchg
stc
test
push
repz
movs
or
out
xchg
mov
mov
push
fadd
inc
je
sub
mov
icebp
and
mov
mov
jmp
push
xchg
dec
cmp
ins
imul
sub
mov
jbe
fld
sbb
pushf
adc
push
add
stos
ins
ficom
test
dec
repz
jge
stos
rcl
pop
mov
stc
cld
adc
(bad)
sub
aam
ins
loop
xor
fbstp
push
(bad)
rcl
(bad)
or
or
fsubr
pop
in
xchg
fst
out
or
int
mov
xchg
in
push
lods
fcomp
push
stos
dec
mov
stos
jle
xchg
and
clc
mov
std
movs
adc
jb
std
in
stc
inc
xchg
(bad)
rol
push
(bad)
fisttp
aas
mov
sub
mov
mov
sti
fbstp
adc
pop
and
stos
imul
scas
(bad)
clc
test
call
cmp
aaa
push
mov
aad
fmul
cld
dec
pop
je
out
sti
jp
out
stos
je
push
movs
push
push
repz
sbb
sbb
cmp
or
stos
aad
push
inc
fist
call
push
fiadd
xchg
inc
mov
jmp
int
xchg
retf
fidivr
sbb
sub
inc
ficomp
fistp
sbb
dec
(bad)
or
test
dec
das
lods
in
shl
ds
jb
jnp
jg
bnd
(bad)
sahf
outs
scas
mov
out
fistp
jge
popa
outs
jg
jp
pushf
dec
cli
ficomp
lahf
cmc
jnp
cdq
pop
aad
xchg
or
in
mov
vpsubw
std
(bad)
out
jo
ja
and
jno
mov
imul
xchg
repz
mov
movs
stc
fmul
jecxz
jl
ds
push
ins
jnp
jmp
ja
scas
cmc
ja
jge
mov
ins
add
into
lahf
dec
clc
mov
sahf
mov
dec
add
stc
push
adc
xor
popf
aas
mov
aad
stc
in
repz
out
cmps
fld
out
into
cmps
jle
das
repnz
jp
cld
movs
js
sub
xor
jecxz
sbb
lods
stc
(bad)
out
pop
out
jmp
jle
cld
out
and
rcr
ret
test
ja
repnz
aas
in
out
movs
inc
pusha
xchg
xor
repz
outs
fcomp
xor
cld
xchg
fdivr
adc
clc
jnp
jecxz
retf
jle
std
jae
jle
jae
hlt
out
stc
int
repz
jecxz
aaa
(bad)
das
outs
mov
sbb
mov
clc
(bad)
pop
ja
das
xchg
emms
jecxz
arpl
je
fwait
jge
mov
jg
nop
sub
idiv
(bad)
cmps
xchg
idiv
dec
mov
sub
xchg
lds
gs
retf
mov
in
rcl
aad
call
pop
popf
aas
jmp
jmp
imul
fld
cwde
rcl
sbb
jecxz
dec
fsub
test
les
dec
test
scas
daa
repnz
(bad)
inc
cld
ret
call
clc
sar
mov
jg
cdq
push
jmp
xlat
jl
fcomp
mov
cmp
leave
test
mov
pop
mov
jle
out
jmp
jecxz
aaa
(bad)
test
push
sahf
jne
loop
or
jle
or
mov
pop
or
inc
out
imul
pop
ja
adc
xchg
out
adc
out
xchg
sbb
inc
sub
jno
(bad)
mov
out
adc
sub
and
dec
inc
or
mov
dec
test
sbb
int
ja
out
fsubr
out
xor
aaa
add
pushf
inc
or
push
mov
inc
pusha
stos
(bad)
sub
and
fwait
dec
call
aam
mov
cli
pop
hlt
jmp
and
push
jmp
fiadd
mov
push
mov
inc
nop
mov
jle
push
scas
fbld
push
sub
push
ret
sub
push
in
(bad)
dec
dec
sete
aas
cmc
pushf
pop
repz
icebp
jae
loop
mov
jg
pop
jle
cmp
dec
pmulhw
and
sub
mov
push
cmps
jmp
mov
in
pop
jge
push
test
mov
retf
mov
pop
jmp
or
xchg
in
inc
mov
pop
jno
jmp
cdq
in
cmc
icebp
scas
repnz
fbstp
imul
mov
ds
mov
lock
sub
addr16
cmp
ja
icebp
mov
cld
push
pop
aas
mov
lahf
fdivrp
scas
in
jecxz
cli
cmp
cmps
aas
pop
xlat
dec
iret
xor
(bad)
hlt
(bad)
stos
fucomip
xchg
push
clc
mov
xor
iret
mov
jg
(bad)
outs
(bad)
jne
cmp
sar
ror
mov
jecxz
mov
push
clc
xchg
xor
and
add
pop
les
cmp
nop
loop
cmp
test
outs
in
push
push
pusha
sti
cmp
popf
fxam
jnp
(bad)
jecxz
dec
mov
test
mov
mov
cli
shr
fdiv
bnd
pop
fs
shr
jo
ja
xchg
mov
ds
inc
jno
xor
imul
(bad)
stc
mov
scas
js
fcom
ins
xlat
mov
cmp
xchg
cmp
jno
cmps
and
repz
cmc
(bad)
xchg
cmp
call
out
je
push
sub
mov
push
leave
cs
js
mov
sbb
pop
addr16
lahf
out
mov
xor
dec
retf
retf
cmc
mov
xchg
cld
repnz
sti
mov
pop
sar
dec
daa
repnz
jg
das
jle
sahf
inc
fnstcw
neg
xchg
cmps
fild
jns
bound
jmp
pop
movs
pop
jbe
mov
pop
dec
push
sbb
call
cmc
int
lods
and
ror
fisttp
(bad)
jo
call
push
jmp
xchg
adc
icebp
dec
or
add
(bad)
aam
jg
aad
movs
js
out
mov
mov
jecxz
aaa
repz
aaa
jecxz
mov
ret
in
(bad)
cmc
sbb
push
fld
fistp
dec
and
pop
sub
loope
xchg
xor
aam
repz
inc
xor
int3
jl
js
sti
stos
push
imul
pop
inc
repz
sbb
rol
(bad)
push
inc
xor
and
and
repz
mov
stos
dec
and
pop
stc
bound
mov
repz
dec
cmp
jl
pushf
rol
jl
test
out
fwait
stos
pushf
retf
mov
into
iret
inc
add
ja
test
xchg
xor
imul
mov
in
cmp
call
xor
sahf
mov
int3
jnp
loope
and
mov
adc
push
sar
jp
mov
cmps
adc
retf
imul
jmp
cmp
sbb
and
dec
mov
clc
bound
fldpi
jno
inc
fcmovne
jp
daa
push
dec
fcmovne
repz
out
out
pop
sar
mov
in
push
jecxz
mov
call
std
inc
ficomp
popf
shl
adc
pop
adc
ins
pop
cld
ror
mov
shl
mov
jno
movs
push
cs
jl
loope
sub
(bad)
and
fwait
out
fxch
inc
mov
cmc
sar
mov
push
xlat
pushf
ja
jp
push
mov
lds
push
sti
adc
in
popf
shl
mov
jp
pop
(bad)
out
push
mov
std
dec
or
cli
jno
jl
je
cmp
cmp
or
xchg
aaa
and
nop
loop
inc
fldcw
pop
or
and
enter
loope
lock
clc
jge
ds
mov
jp
das
xchg
inc
pop
fldenv
rol
mov
add
cmps
(bad)
ja
sbb
scas
cmp
cli
pop
mov
scas
jbe
std
push
mov
aas
mov
mov
sub
mov
mul
arpl
in
lahf
mov
pop
scas
out
das
repnz
mov
push
or
cmp
adc
cmp
stc
test
clc
scas
lods
fbld
lahf
call
jmp
mov
fistp
inc
(bad)
cs
out
outs
in
jae
mov
(bad)
mov
mov
fistp
aaa
retf
aaa
jmp
mov
addr16
js
fdiv
cmp
das
pop
loope
push
dec
and
movs
lock
loope
sub
jge
cmp
sbb
jne
lock
int
mov
jno
jns
outs
and
sti
or
in
fwait
jmp
add
add
test
fwait
out
push
sti
pop
lea
out
movs
push
jle
push
sbb
xchg
outs
and
out
hlt
xchg
sub
jle
dec
adc
icebp
outs
pop
fcomip
test
pop
out
lahf
pop
lahf
push
in
dec
(bad)
dec
gs
stc
jg
mov
or
daa
cmp
add
lahf
push
sub
dec
jmp
ds
(bad)
(bad)
sub
xchg
aaa
rcr
jb
outs
dec
(bad)
dec
out
fstp
push
dec
cli
dec
out
(bad)
mov
out
inc
pop
fcomp
cs
cli
cmp
inc
cli
jmp
mov
inc
mov
mov
mov
popf
adc
ds
out
jbe
loopne
mov
adc
hlt
push
sub
inc
push
ret
push
aad
push
ins
ins
int
xchg
xchg
idiv
mov
pop
inc
data16
dec
push
pop
(bad)
or
dec
fistp
jmp
test
mov
fild
pop
out
push
cmp
xchg
pusha
inc
nop
movs
mov
out
ficom
pop
inc
and
jmp
pop
aam
and
jle
pop
adc
pop
jne
dec
lock
pop
cmc
xchg
cmps
aas
inc
lods
jbe
jp
loope
xlat
cmp
fnstsw
jle
push
pop
cli
mov
dec
xor
ins
loop
cmp
das
(bad)
iret
out
mov
jno
iret
ja
scas
mov
dec
inc
repz
pop
fisttp
stos
stc
mov
retf
ins
outs
loop
jg
adc
jb
cwde
loope
aas
jmp
cli
add
cmps
jmp
icebp
(bad)
pop
pop
dec
ja
stos
int
scas
arpl
jmp
aas
fsubrp
scas
xor
hlt
repnz
stos
hlt
(bad)
stos
fnsave
mov
mov
cli
stos
sahf
jp
dec
cli
adc
mov
out
push
cmc
ja
imul
mov
stc
inc
jge
mov
aad
in
aam
sti
cld
xchg
(bad)
std
scas
(bad)
lock
clc
jge
ds
sub
xor
loop
xchg
(bad)
add
add
(bad)
in
mov
xchg
out
adc
retf
enter
adc
in
sub
ins
push
mov
inc
dec
movs
and
sub
mov
lea
popa
js
ror
mov
jmp
push
inc
ret
ins
jnp
aad
xor
sbb
mov
xor
stos
stos
out
sbb
jnp
rcl
dec
in
mov
cmp
pop
js
out
pop
js
jns
in
ins
out
aas
mov
ds
ds
ds
ds
(bad)
mov
imul
test
pop
pop
pop
int
cmc
(bad)
cmp
pop
fnstcw
xchg
ja
pop
fisttp
mov
(bad)
or
mov
inc
repnz
cmp
scas
sub
sbb
sbb
in
inc
pop
call
retf
stos
sub
ret
enter
mov
mov
fimul
jbe
push
jge
das
sub
in
test
retf
jp
das
out
fidiv
sar
and
in
daa
and
(bad)
sti
movs
pushf
xchg
nop
mov
retf
fidiv
scas
daa
lods
mov
repnz
and
pop
out
repz
fdivr
pop
aaa
(bad)
fild
hlt
stos
rcr
repz
popf
pop
enter
sub
jmp
jl
scas
mov
mov
shl
jle
pop
pop
dec
jnp
jb
sub
neg
jo
loope
(bad)
js
jae
dec
jg
(bad)
push
cdq
mov
cmp
(bad)
jl
jns
sbb
inc
scas
jmp
lahf
cmp
in
dec
scas
shl
pop
ds
stc
enter
jnp
sub
arpl
mov
pop
dec
push
mov
jae
cmps
test
jae
ficomp
aas
cld
mov
pop
(bad)
jnp
in
sahf
or
xlat
mov
mov
lock
cmp
into
sub
mov
ficom
pop
and
in
retf
out
dec
into
cmp
ja
int3
call
lahf
jge
outs
cs
jno
or
cs
out
mov
xchg
fbld
je
popf
sub
out
xchg
jmp
jle
mov
scas
dec
cdq
stos
lods
fsub
nop
dec
cli
mov
in
es
dec
sub
xlat
xor
inc
jl
test
pop
sar
jbe
inc
inc
jmp
xor
pop
enter
and
ins
push
scas
fisttp
inc
cmp
lods
in
cmp
fcom
in
into
dec
leave
stc
sub
jg
scas
or
loopne
out
push
xchg
cmp
fbld
sub
jl
jb
(bad)
mov
mov
sahf
outs
in
push
pop
mov
jmp
mov
retf
(bad)
pop
dec
stos
and
dec
dec
mov
adc
sub
mov
sub
movs
lods
ficomp
cmps
gs
popf
out
inc
stc
mov
das
pop
out
inc
mov
fsubr
std
rcl
mov
idiv
jns
xlat
imul
bnd
jne
push
sub
sbb
in
pop
(bad)
scas
sub
push
into
xlat
xor
inc
sub
dec
inc
push
sti
xchg
xchg
stc
push
jmp
out
mov
dec
dec
scas
mov
movs
outs
in
dec
into
mov
lea
pop
mov
gs
gs
sub
sub
xchg
out
jne
neg
retf
jne
mov
xchg
mov
ror
cmp
out
push
inc
pop
leave
out
mov
rcr
pop
pop
mov
dec
mov
(bad)
push
jnp
mov
sub
push
in
mov
pushf
push
xchg
mov
pushf
arpl
lahf
pop
xchg
xchg
div
jmp
or
and
mov
push
pop
into
test
mov
sbb
dec
btr
div
inc
out
push
xchg
mov
enter
movs
in
cwde
cld
cs
fnstcw
xchg
jg
lods
lahf
das
imul
cmp
mov
nop
arpl
fs
sub
push
pusha
or
stc
cmps
(bad)
sahf
push
xchg
rcl
and
sbb
(bad)
mov
aad
mov
repnz
adc
xchg
cmp
stos
jmp
push
pop
mov
jge
jb
inc
out
inc
test
addr16
inc
inc
xchg
fst
pushf
cmp
test
in
or
js
mov
sbb
mov
iret
mov
fwait
ins
push
(bad)
lods
shl
mov
lods
into
xchg
xor
jns
icebp
pop
push
xor
push
loopne
call
popf
pusha
jge
das
adc
daa
xchg
sti
jmp
lods
in
adc
push
cdq
ja
pop
lahf
xor
push
hlt
stos
(bad)
adc
push
(bad)
mov
ds
adc
pop
or
or
mov
ja
in
test
out
movs
or
(bad)
xchg
repz
sub
mov
adc
xchg
ja
jmp
les
mov
loope
out
push
movs
lds
push
cmp
push
jmp
das
cmp
retf
fnsave
sbb
addr16
sbb
and
xor
xor
jmp
xchg
cdq
cmp
mov
shl
xchg
cmp
pop
sub
and
jl
sub
cmp
dec
jp
cs
adc
xchg
movs
lods
mov
outs
in
mov
and
popa
(bad)
push
rol
mov
in
add
retf
sub
xlat
cmp
mov
enter
in
xchg
lods
inc
pop
jle
gs
push
xchg
fisttp
stc
jl
gs
dec
sub
call
repnz
sub
cmp
arpl
imul
outs
mov
mov
mov
mov
jnp
mov
sub
stos
or
push
jae
pop
scas
mov
retf
out
push
mov
fs
jp
fsubr
je
and
cmp
nop
mov
ins
enter
dec
push
mov
jge
scas
pop
xor
(bad)
cs
add
rcr
sbb
and
mov
sub
sub
jp
test
inc
mov
xchg
ror
and
xchg
xchg
popa
pextrw
push
jmp
repnz
mov
mov
xor
pop
and
push
shl
xor
pop
pop
push
xchg
jnp
xchg
lods
xor
jne
push
in
cmp
(bad)
push
clc
test
test
xor
jge
sub
ds
ds
(bad)
daa
dec
push
xchg
mov
and
cmc
or
add
sub
call
sub
jg
lods
xlat
loope
pop
jmp
das
mov
aad
rcl
fs
mov
std
rcl
xchg
stc
imul
add
(bad)
mov
jnp
jns
xchg
(bad)
test
enter
mov
xchg
and
mov
sbb
clc
mov
sti
test
outs
retf
mov
xchg
mov
in
add
(bad)
push
pusha
repz
xchg
lock
in
bnd
dec
sahf
xchg
jle
gs
xor
in
pop
scas
js
xor
lods
and
xchg
adc
jmp
pop
jmp
in
sbb
dec
shl
cmp
(bad)
pop
dec
sbb
pop
jo
fstp
addr16
shl
outs
gs
call
loope
stc
xchg
sub
push
sbb
mov
(bad)
dec
sbb
outs
shl
rcl
int
mov
lods
stc
shr
adc
xchg
xchg
push
aaa
movs
or
inc
adc
fcom
arpl
cmp
xchg
xor
rcl
(bad)
int3
shl
sti
lock
adc
sbb
mov
push
leave
sahf
js
mov
cmp
cdq
mov
retf
out
fsub
ins
sub
pop
xchg
cmp
popf
xchg
xchg
xchg
outs
gs
jnp
pop
in
sub
fild
inc
mov
xchg
sbb
jg
aas
ja
adc
je
(bad)
das
xor
or
je
cmp
scas
test
xchg
mov
or
stc
xchg
xor
sub
pop
jns
gs
inc
jb
in
mov
stos
jl
popa
pop
dec
in
lods
lods
and
jge
retf
push
pop
jecxz
or
cdq
xchg
pop
sbb
ds
mov
sbb
xchg
push
mov
sbb
cmp
(bad)
std
dec
into
push
outs
mov
aam
mov
and
pop
cdq
lods
inc
test
enter
repnz
jb
repnz
mov
test
fild
repnz
(bad)
push
cmp
xchg
push
imul
sar
(bad)
sub
cmp
(bad)
rcl
call
scas
mov
mov
jb
cs
xor
xchg
sub
mov
lahf
outs
rol
loopne
hlt
aam
pop
jns
fld
enter
mov
mul
cmp
push
clc
xlat
or
int
and
adc
movs
mov
pushw
push
fnsave
cmp
mov
fcom
outs
mov
ret
xchg
enter
add
push
je
xchg
stc
not
shl
cdq
(bad)
and
jne
xchg
xchg
xchg
rcr
add
fstp
ss
test
xchg
loopne
or
jg
out
xchg
sahf
test
pop
mov
adc
daa
gs
aaa
sbb
sbb
mov
inc
imul
imul
xor
jne
aas
sub
xchg
mov
pusha
sub
pop
mov
call
sub
or
jecxz
(bad)
movs
imul
sbb
out
enter
call
lahf
cmps
sar
popf
sbb
ret
ror
cs
loopne
mov
in
cmp
add
mov
mov
push
call
or
test
mov
sbb
test
dec
or
push
and
and
retf
push
out
push
inc
lahf
cmp
cmps
mov
popf
mov
inc
pop
jmp
out
arpl
shr
dec
shl
push
lock
adc
stos
xchg
pop
mov
mov
outs
es
jne
dec
cmps
cmp
pop
jp
adc
dec
pop
addr16
sub
add
or
and
fcom
mov
lds
sub
xor
mov
jl
adc
dec
pop
push
jb
or
jb
mov
sub
cmps
xor
xlat
popf
pop
movs
imul
lea
jecxz
push
dec
test
push
sbb
test
clc
mov
div
(bad)
mov
cwde
iret
adc
das
jae
xchg
cmp
xlat
(bad)
jo
or
mov
push
dec
dec
adc
mov
jge
(bad)
ret
dec
cmp
mov
mov
lea
xchg
cmp
mov
call
les
mov
dec
jo
mov
pop
jbe
pop
pop
mov
add
dec
push
cmp
lods
pop
aad
jmp
data16
gs
aad
pushf
xor
and
add
push
mov
sbb
loopne
adc
push
rcr
hlt
jmp
mov
(bad)
je
mov
not
fsub
mov
scas
sar
scas
cmp
or
pop
in
mov
cli
mov
cmc
outs
fnstenv
fsub
cld
out
pusha
xchg
cmp
jmp
lea
jp
and
and
in
movs
mov
mov
cmp
int
mov
xchg
stc
into
mov
mov
xor
not
cs
data16
inc
dec
test
jp
or
push
pop
aaa
bound
int3
jmp
mov
popa
dec
aad
mov
xchg
pop
jno
test
inc
jp
nop
jno
jmp
mov
inc
xor
jae
and
fisttp
out
jl
sub
inc
sbb
sub
jns
fs
jo
in
stc
add
adc
shl
push
adc
xchg
bswap
cmp
das
and
jmp
push
(bad)
mov
icebp
lods
sbb
jp
mov
sbb
mov
push
movs
mov
sbb
and
cmc
sahf
hlt
stos
pop
sub
jecxz
fidivr
popf
sbb
mov
sar
in
mov
push
jne
popf
(bad)
jmp
scas
dec
dec
jle
pop
pop
mov
adc
sbb
fwait
nop
sti
in
sub
in
pop
(bad)
mov
test
mov
mov
jl
cmp
adc
cmps
in
mov
gs
call
ret
mov
and
aam
mov
icebp
sub
ds
je
sub
or
push
xor
add
clc
cwde
fwait
jmp
xor
or
jl
call
sub
mov
dec
sbb
inc
and
movs
pop
mov
add
dec
inc
daa
sub
or
push
or
pop
gs
mul
ficomp
les
cld
in
pop
mov
lods
add
jg
mov
cmp
cmp
imul
jmp
mov
in
xor
push
imul
xor
sar
arpl
cdq
ss
ins
movhps
test
fisub
ss
fstp
stos
xlat
jge
test
nop
xor
pop
jl
mov
xor
imul
mov
out
add
mov
mov
pop
mov
mov
add
fcmovu
push
cs
mov
cdq
out
jmp
dec
mov
sub
scas
repnz
lea
jb
stc
or
jno
je
lds
jno
mov
fsubr
mov
cdq
in
sub
sahf
scas
imul
mov
sub
out
sahf
nop
push
dec
movs
out
imul
cmp
lds
adc
mov
mov
mov
jecxz
inc
jmp
jmp
jnp
call
and
add
sub
sbb
(bad)
pop
mov
fstp
sub
dec
push
xor
in
pop
mov
test
sbb
dec
dec
outs
xchg
push
jne
mov
data16
xchg
cmp
mov
mov
pop
jne
hlt
cs
pushf
jge
pusha
push
xchg
cwde
ror
stos
mov
in
pop
addr16
sbb
les
inc
call
mov
adc
add
hlt
pop
(bad)
(bad)
fadd
stos
xchg
call
lea
inc
cmp
ins
mov
scas
cmp
sbb
pop
loop
dec
dec
pop
ds
mov
jne
mov
aam
jle
pmulhw
retf
out
(bad)
inc
sbb
add
jbe
call
mov
dec
mov
out
adc
or
jnp
loope
push
or
das
mov
sub
pop
adc
sub
ja
inc
repz
push
xor
test
sub
pop
sti
in
shl
push
ds
pop
sub
cmp
push
and
int3
retf
test
popa
xor
xor
in
adc
xor
rcl
das
arpl
popa
mov
shl
loop
lods
shl
lods
adc
(bad)
jmp
add
add
sub
inc
out
cmp
add
mov
bound
jle
pop
push
or
sbb
mov
xchg
loop
xchg
les
jecxz
sbb
cmp
outs
or
pop
jnp
add
sub
ret
shl
cmp
test
pop
lds
shl
ds
inc
dec
sub
cmp
pop
dec
jno
cmps
pop
pushf
xor
sahf
rcr
sub
mov
and
js
scas
mov
pop
dec
gs
int3
lods
push
jmp
jae
leave
or
fs
adc
test
and
inc
loope
in
jge
mov
shl
cld
mov
or
out
jno
outs
sub
div
xchg
stos
in
pop
pusha
push
out
xchg
into
rcr
les
pushf
test
mov
int
in
cmp
pop
aaa
stos
and
xchg
jne
push
and
(bad)
lods
jne
push
xor
sbb
mov
xor
push
imul
and
and
rcr
sub
pop
scas
imul
jno
push
push
sti
jge
clc
inc
dec
into
pop
xor
mov
retf
ins
push
push
xchg
ret
hlt
lods
pop
imul
pop
ja
pop
jbe
inc
out
xchg
adc
sub
dec
push
add
fisub
enter
cmp
lahf
jno
hlt
adc
loopne
iret
jb
or
(bad)
xor
and
mov
test
imul
sbb
or
mov
out
(bad)
xchg
inc
cmp
sar
movs
loop
push
addr16
pop
out
arpl
stos
test
cld
pop
stos
pop
out
inc
stc
and
cmp
cmp
mov
inc
jecxz
inc
aas
push
fst
or
push
dec
adc
imul
pop
js
push
and
jns
dec
add
sar
sub
mov
push
push
nop
out
sub
xchg
mov
xchg
pop
(bad)
sti
fld
test
pop
mov
push
(bad)
sbb
add
loop
sub
dec
sub
pop
push
out
pop
mov
or
out
mov
jbe
fistp
pop
adc
xor
adc
push
sbb
shr
inc
loopne
retf
push
cdq
in
sub
xchg
aam
pop
faddp
(bad)
cmp
outs
xlat
add
mov
hlt
out
adc
jbe
nop
int
out
add
enter
lods
mov
stos
int3
mov
rcr
cwde
xchg
fimul
call
mov
cmp
out
ja
and
cmp
mov
mov
adc
out
ins
arpl
dec
cmp
add
xchg
mov
addr16
out
and
sar
mov
xlat
pop
jp
inc
pop
ret
add
dec
loop
retf
in
cdq
push
mov
scas
push
fs
sub
int3
cmpxchg
repz
sahf
xor
mov
fisubr
mov
sti
lds
outs
enter
jo
pop
xchg
enter
or
pop
out
in
mov
nop
push
ds
mov
adc
dec
mov
test
sar
dec
mov
sbb
pop
jp
and
rcr
int3
xchg
inc
call
xchg
hlt
xchg
inc
ficomp
retf
enter
mov
and
or
xchg
mov
add
int3
inc
fisttp
jmp
inc
mov
icebp
adc
iret
ds
les
sub
mov
cdq
xchg
jmp
and
das
test
push
xor
and
outs
xor
pusha
inc
and
mov
outs
rcr
sbb
aaa
add
add
and
jl
pusha
dec
cli
call
call
js
or
cmp
repnz
xchg
sub
pop
ja
push
push
call
sbb
sar
mov
jae
mov
nop
mov
std
mov
(bad)
and
data16
xchg
call
lds
into
fiadd
jmp
jl
mov
jmp
sub
lock
add
cmc
sbb
push
std
inc
ror
(bad)
mov
ins
outs
mov
sahf
popf
adc
or
(bad)
fist
push
inc
repz
and
xchg
adc
js
push
loopne
ds
pop
psubq
das
xor
jns
fwait
aaa
sub
jne
outs
mov
xor
push
jl
mov
add
cmp
cmp
cs
arpl
cld
retf
icebp
mov
cmp
fimul
in
xchg
cdq
std
mov
pop
int
and
ret
jns
aad
push
test
outs
inc
xor
call
and
dec
cmp
or
cwde
stos
call
ror
adc
clc
cmc
add
shl
inc
gs
(bad)
mov
and
into
inc
test
adc
push
fsubr
loop
xchg
jecxz
js
data16
jbe
inc
scas
fxch
sahf
outs
ret
popa
sub
and
mov
jns
cmp
pusha
std
cli
pop
fwait
sbb
xchg
stos
loopne
jns
adc
cmp
cmp
ds
das
pusha
pop
pop
fwait
adc
ret
pushf
aaa
dec
inc
cmps
jmp
dec
mov
xor
jl
and
pusha
push
add
push
arpl
in
daa
aad
sbb
xchg
add
cmp
xchg
fwait
movs
sbb
scas
cmp
push
mov
pop
sahf
je
mov
rcr
add
in
loope
sub
(bad)
out
imul
pushf
cmp
mov
sub
push
push
sar
out
test
into
pop
sbb
lods
xlat
jmp
inc
mul
cmps
inc
dec
cdq
pop
cwde
mov
scas
shr
dec
sti
jo
mov
or
fsubr
xor
inc
out
mov
inc
ins
(bad)
int3
jge
push
icebp
jne
xchg
stos
scas
push
movs
aad
rol
out
(bad)
xchg
enter
xor
mov
(bad)
add
ja
push
push
jecxz
retf
js
pushf
outs
aas
or
mov
(bad)
fs
in
scas
(bad)
icebp
xor
xlat
xchg
je
pop
inc
lock
mov
push
js
arpl
jae
dec
xchg
mov
xor
dec
mov
xchg
fld
ins
(bad)
and
inc
ret
dec
add
or
and
adc
adc
inc
(bad)
push
inc
xor
rcr
arpl
out
cwde
cmp
shl
hlt
iret
icebp
add
ret
outs
sub
movhps
aaa
xchg
or
cmc
pop
adc
jns
push
mov
ret
pop
pushf
(bad)
scas
or
pushf
aaa
cmp
jl
shl
rol
inc
es
mov
sbb
leave
sbb
mov
ins
(bad)
fsub
shr
fisttp
mov
jb
cli
mov
xchg
jo
mov
rcr
pushf
addr16
cmp
mov
jb
jl
or
xor
mov
out
or
cli
push
pusha
xlat
lahf
dec
fwait
and
mov
cmp
mov
push
pusha
mov
fistp
xchg
out
repz
hlt
retf
xor
into
int
out
jo
sub
and
out
leave
data16
les
rol
dec
adc
cmp
add
loope
test
rcr
jbe
pusha
push
xor
out
sbb
push
ficomp
shl
mov
jl
or
xchg
sbb
adc
mov
pusha
inc
pop
js
or
fdivr
push
jl
stos
mov
sub
lods
cmc
or
test
cmps
jge
test
sar
mov
add
call
rol
mov
adc
(bad)
fistp
ret
loopne
sbb
out
push
stos
sbb
mul
pushf
adc
or
dec
mov
and
pop
test
call
sub
fild
jno
jmp
inc
xor
dec
rcr
jg
sub
xchg
hlt
push
ret
ret
dec
fistp
fdivr
xchg
mov
jbe
pop
aam
push
pop
and
in
dec
add
sbb
dec
cs
scas
jp
aad
mov
pusha
push
and
pop
test
daa
shr
sbb
mov
and
xor
fwait
in
mov
xchg
xor
les
dec
adc
dec
or
pop
fs
push
xlat
add
adc
ret
push
push
inc
jnp
mov
and
in
jo
xor
jnp
in
or
or
and
(bad)
xchg
daa
or
(bad)
mov
int3
inc
jle
xchg
out
sbb
enter
xor
inc
add
pop
out
pop
add
ins
sub
enter
mov
test
inc
hlt
sbb
jae
and
cmps
mov
xor
jge
movs
cmp
pushf
repz
sbb
lock
pop
cli
pop
lods
sub
int3
jmp
pop
outs
sub
push
dec
movs
shr
jb
sub
ja
retf
ret
add
cmp
out
ret
mov
lock
cmp
sub
dec
adc
out
icebp
sbb
push
xchg
and
mov
leave
jp
xchg
(bad)
jne
and
(bad)
cdq
in
cmp
cmp
or
sub
xchg
arpl
cmp
sub
dec
jge
(bad)
xchg
pop
popa
sti
scas
sbb
pop
call
and
cdq
mov
nop
and
pop
test
jns
mov
mov
mov
pop
push
mov
sub
adc
outs
or
js
retf
jge
xchg
dec
sar
add
pop
aam
push
outs
loope
pop
out
or
lds
mov
out
inc
dec
mov
jo
jae
mov
mov
das
gs
arpl
xchg
iret
cmp
test
stos
clc
test
mov
and
rol
(bad)
mov
lahf
dec
shl
lods
hlt
xor
push
sbb
rcl
and
xchg
push
addr16
xor
(bad)
pusha
(bad)
adc
sbb
mov
fnstsw
or
call
pop
push
cdq
push
dec
cmp
xchg
int3
jp
fidiv
sti
adc
je
cmc
mov
dec
lock
sbb
pop
cmp
inc
(bad)
fdiv
cs
movs
mov
xchg
push
popf
out
lds
lods
(bad)
lock
mov
in
pop
clc
call
push
(bad)
jno
inc
and
lods
pushw
in
std
dec
(bad)
push
mov
xchg
inc
cmp
(bad)
xor
fcom
jmp
out
cmp
and
xchg
movs
cmp
add
in
mov
cli
and
sbb
sub
pop
test
std
sbb
(bad)
lahf
jo
fst
js
shr
js
mov
fs
inc
mov
ins
dec
lahf
mov
gs
nop
add
xor
sbb
ins
lods
sbb
bound
and
in
cmps
fcom
push
jl
les
fisub
test
adc
xchg
pop
add
adc
sbb
sti
or
cmp
dec
push
sub
and
mov
cmp
cmc
rcr
fistp
pushf
cmp
(bad)
stos
fidivr
cmps
cwde
xchg
cmp
pop
mov
or
adc
dec
xor
xchg
in
mov
mov
(bad)
cmps
mov
ficom
cld
dec
jbe
repnz
or
xchg
cmp
push
cmp
test
mov
jmp
repnz
in
in
xor
add
add
mov
jmp
ret
enter
xor
xor
pop
ins
dec
mov
xor
push
adc
inc
xchg
dec
int
cmp
cmp
(bad)
lods
inc
push
bound
out
jnp
test
cs
lahf
mov
sar
repnz
mov
push
mov
test
adc
aas
jmp
imul
and
lahf
sar
das
aam
sbb
mov
ins
push
adc
pop
sbb
pop
push
jmp
push
scas
jae
push
popf
js
adc
call
(bad)
mov
and
addr16
and
add
pop
sbb
jecxz
jb
stos
pop
cmps
sbb
push
loopne
push
xchg
mov
mov
js
popf
cmc
xor
les
sub
idiv
not
mov
rcl
adc
xchg
mov
pushf
xor
jo
mov
pop
out
call
(bad)
retf
bound
pushf
sbb
and
stc
sbb
mov
sub
fs
add
xchg
jmp
and
and
enter
inc
push
pop
push
pop
push
mov
cmp
fcomp
and
mov
scas
shl
push
retf
out
div
adc
inc
fs
pop
xchg
mov
mov
pop
test
nop
lock
hlt
fild
mov
shl
(bad)
push
cmp
fcmovnu
fcmovbe
add
mov
data16
loope
push
fistp
cmp
nop
adc
int3
in
xchg
sbb
ret
pop
popf
mov
and
add
dec
jl
sbb
cmp
loopne
or
add
push
and
push
fs
scas
push
mov
std
ins
inc
jge
sbb
mov
gs
mov
and
pushaw
adc
push
cmp
mov
dec
pop
xor
inc
dec
mov
fst
xchg
in
ret
inc
sbb
cs
retf
pop
and
mov
push
jmp
and
inc
mul
inc
add
movs
mov
cmp
cmp
xchg
sbb
sbb
test
adc
mov
inc
sbb
rcr
sar
dec
sub
cmp
(bad)
cmp
pop
jns
adc
scas
cmps
in
(bad)
push
jo
xor
pop
lahf
inc
out
enter
clc
(bad)
or
add
(bad)
popf
xchg
call
and
xchg
fld
cli
call
mov
in
xchg
mov
mov
ds
xchg
ret
div
dec
mov
sub
add
in
bound
and
gs
std
xchg
test
mov
in
inc
inc
ret
pop
xor
push
mov
fisttp
data16
scas
hlt
inc
jne
cld
ins
mov
sbb
mov
mov
call
iret
test
retf
and
push
xchg
dec
loope
pop
jb
push
jge
push
mov
mov
inc
mov
mov
add
fldenv
repz
add
xchg
xchg
into
pop
dec
and
in
in
xor
out
jns
mov
or
ret
(bad)
in
gs
adc
push
xchg
mov
mov
enter
push
cmp
fwait
mov
lds
mov
xchg
test
pop
lods
xor
fldenv
pop
inc
add
mov
neg
icebp
mov
loopne
mov
mov
lahf
push
clc
pop
and
sbb
shl
fldenv
aam
inc
gs
jae
lods
outs
jo
cmp
jmp
mov
push
inc
ret
pop
retf
lods
iret
loop
push
sub
int3
or
inc
cmps
cmc
push
push
mov
sub
nop
loope
clc
fs
mov
pop
fisub
scas
lock
xor
mov
xchg
imul
(bad)
xor
leave
pop
rcl
xor
or
pusha
retf
jbe
sbb
cmp
sub
gs
pop
ins
outs
imul
push
mov
std
(bad)
daa
push
ret
gs
pop
bound
mov
sbb
sub
fwait
aaa
bound
scas
retf
jbe
add
rcl
fwait
xchg
rcl
mov
addr16
adc
sti
adc
mov
jns
(bad)
jno
popa
cvtps2pi
xchg
dec
pop
adc
and
dec
movs
ins
lea
add
leave
popa
test
shl
push
xchg
dec
call
bound
loope
imul
stos
retf
jne
(bad)
shl
pop
je
sahf
fwait
rcr
fld
out
pop
sbb
enter
xchg
mov
add
clc
adc
gs
sbb
movs
in
dec
xor
mov
mov
and
pop
scas
shl
rol
push
test
sar
pop
aad
sub
and
inc
mov
fwait
pop
pop
inc
sahf
cmp
outs
gs
and
fld
jbe
and
cmp
(bad)
shl
dec
ds
mov
dec
sub
fstp
addr16
jl
inc
adc
cmp
jmp
call
sub
or
shl
loop
jne
inc
ds
xchg
stc
xchg
cs
cmc
call
and
pusha
inc
mov
inc
xchg
pop
loop
pop
and
add
call
sbb
sti
push
aaa
ret
push
lock
idiv
pop
jns
fisub
fisub
or
or
lea
fnstenv
cs
jo
pop
int3
jl
sbb
cmps
fcmovbe
out
nop
cmp
xchg
out
or
xchg
jns
pop
mov
popa
jb
imul
ins
enterw
in
adc
jmp
pop
cs
in
jo
or
ret
add
shl
cld
lods
push
not
jne
pop
jg
mov
sub
jno
(bad)
sbb
(bad)
nop
icebp
pushf
jno
sbb
dec
jo
pop
out
sbb
stos
js
cmp
rcl
push
cmc
pop
inc
imul
stos
out
jmp
arpl
mul
pop
or
scas
rcl
lods
dec
or
aad
enter
sub
out
push
ins
mov
sbb
cmp
or
mov
mov
push
push
fldl2t
enter
jbe
int3
cmp
jnp
ret
movzx
mov
jle
out
jnp
mov
xor
push
mov
aas
(bad)
int
mov
mov
shl
cmp
inc
retf
dec
or
mov
lahf
clc
nop
cmp
cmp
dec
ret
test
push
sbb
ss
pop
fistp
adc
div
xor
push
out
ror
sbb
rcl
push
xor
mov
push
or
ins
sbb
or
ja
das
mov
push
fcom
sub
(bad)
push
lds
sbb
ficom
push
ss
aad
call
inc
cmp
add
mov
sahf
sbb
mov
iret
push
cli
mul
ss
and
ds
arpl
or
and
rcl
cmp
and
mov
(bad)
cdq
and
inc
iret
(bad)
mov
sbb
pop
arpl
push
ds
mov
mov
jmp
shl
arpl
xchg
mov
fwait
retf
sbb
xchg
aaa
mov
dec
sar
inc
cmp
dec
loope
sbb
popa
mov
xor
fadd
stos
cwde
jle
xchg
lahf
mov
pop
dec
stc
add
add
shr
adc
push
call
call
(bad)
rcr
xchg
xchg
out
mov
add
xor
jmp
inc
(bad)
(bad)
les
inc
sub
ret
in
and
fcomip
js
xor
jle
je
sub
clc
adc
jl
push
and
rcr
addr16
or
call
or
inc
inc
test
inc
scas
(bad)
(bad)
jl
cs
pop
cmp
enter
call
inc
fwait
sub
dec
and
or
shr
adc
mov
mov
pop
inc
push
cmp
cmp
sub
(bad)
js
push
xchg
ret
test
mov
movs
pop
mov
sbb
xlat
mov
jb
push
mov
xor
xchg
mov
or
int
fmul
adc
inc
ror
iret
lods
mov
adc
(bad)
out
jb
std
jl
es
mov
int3
movs
lods
leave
sbb
loopne
imul
inc
xchg
psrad
ss
lea
or
pop
mov
push
loopne
adc
push
xor
das
sbb
sbb
clc
ret
pop
js
mov
xlat
push
icebp
mov
or
cdq
mov
dec
iret
or
push
in
sub
fadd
push
fdiv
push
daa
imul
add
addr16
in
fisttp
pop
imul
iret
out
test
cs
enter
int
icebp
inc
sbb
cmps
retf
test
add
xchg
scas
dec
inc
sub
call
stos
xchg
push
loop
mov
mov
adc
push
jnp
std
and
push
mov
cmp
xchg
fldcw
retf
add
xchg
pop
fsubp
ins
mov
cmp
cmp
or
push
int3
nop
xchg
jbe
dec
xor
add
(bad)
cmp
push
jb
scas
adc
jnp
in
mov
por
jo
test
xchg
push
addr16
mov
dec
mov
jns
mov
jmp
sbb
fisub
lahf
xchg
jno
push
jg
idiv
cld
sub
and
imul
or
push
and
mov
mov
dec
sbb
dec
data16
add
sub
retf
scas
push
movs
add
inc
popa
add
mov
std
aaa
mov
dec
dec
fs
out
js
lods
mov
inc
mov
push
mov
jge
xor
repnz
lods
jmp
and
inc
repnz
icebp
adc
mov
inc
pop
dec
jl
dec
je
and
addr16
pop
adc
add
jo
(bad)
aas
addr16
cmps
push
in
mov
inc
js
push
in
popa
xchg
je
enter
int
in
rcr
jle
mov
cs
xor
lock
in
nop
in
xor
cmps
cmp
sahf
mov
inc
sub
sti
ret
mov
loop
cmp
cmp
xchg
ficomp
addr16
xchg
inc
sbb
push
in
not
cdq
pop
fnsave
jo
out
aas
xchg
rcr
icebp
sbb
push
or
imul
adc
sbb
jno
pop
jl
ins
fs
shr
sbb
sub
xlat
push
push
xchg
xchg
dec
sbb
jne
not
pop
adc
jl
(bad)
enter
rol
rcr
push
je
mov
xlat
fsub
pop
cmovg
in
cmp
test
xchg
daa
sbb
jne
cmp
arpl
shl
mov
adc
shl
push
pop
(bad)
cmps
push
push
push
out
jl
outs
pop
xchg
mov
and
pop
enter
or
add
sub
clc
add
inc
adc
xchg
pop
xor
push
aaa
jo
jae
inc
add
xchg
cmp
pop
cmps
inc
push
sbb
dec
jb
ss
sbb
mov
xchg
cmp
int3
int3
cwde
and
js
lahf
jl
pop
lock
ficomp
mov
mov
or
lods
lahf
mov
sar
les
pop
in
sub
adc
lahf
dec
int
aaa
fidivr
push
mov
addr16
inc
lahf
push
jmp
mov
aam
add
inc
mov
inc
mov
pop
or
fdivp
xchg
adc
cdq
aad
fisub
add
inc
adc
(bad)
mov
or
add
mov
clc
int3
arpl
mov
fmul
ss
or
sub
enter
xchg
retf
fldenv
mov
inc
jge
dec
mov
dec
mov
xor
fiadd
imul
adc
es
jno
in
stc
mov
lea
cld
inc
push
call
arpl
stos
xlat
dec
adc
ficomp
mov
scas
loope
jge
xor
mov
icebp
sbb
pop
push
les
adc
sbb
aaa
lahf
adc
and
mov
out
push
push
movs
sbb
popf
and
sub
xlat
sub
imul
fldcw
clc
dec
xchg
pop
or
mov
repnz
jmp
mov
inc
xchg
fst
outs
mov
sar
aaa
push
clc
out
sbb
push
and
repnz
ja
sti
mov
inc
mov
inc
xor
sbb
or
call
outs
dec
and
and
outs
inc
retf
mov
neg
call
pop
daa
mov
and
sub
cmp
sbb
jge
push
fwait
(bad)
fwait
jno
push
out
adc
and
mov
shl
push
adc
sub
pop
and
cmps
test
mov
pop
ds
(bad)
push
jae
ret
mov
nop
cwde
hlt
adc
pop
mov
mov
add
ror
loopne
out
jb
stos
mov
out
xchg
ret
pop
mov
adc
cmp
pop
pop
and
int
pop
push
retf
stos
enter
ret
or
inc
xor
aam
mov
pop
mov
xchg
inc
outs
mov
xor
cs
mov
and
push
dec
sub
sub
dec
push
fcomip
sub
fld
movs
mov
sahf
shl
loopne
ds
push
repnz
gs
int3
idiv
sub
popa
jmp
xchg
sub
mov
pop
add
xchg
cmp
les
arpl
add
sub
sub
or
mov
(bad)
jne
mov
cmps
push
cdq
xlat
pop
sub
inc
adc
nop
sub
ds
push
ja
(bad)
mov
inc
fisubr
cmp
mov
cmp
bound
cmps
mov
fild
pop
cmp
jle
dec
les
adc
pop
aas
add
jo
test
xchg
iret
lds
mov
ins
push
sub
mov
and
mov
lods
sub
mov
cmc
das
push
cmp
ret
fsubr
xlat
enter
xchg
mov
cmp
cwde
add
inc
lahf
mov
cmp
inc
sub
call
adc
arpl
mov
mov
mov
push
aad
jb
scas
test
lods
retf
and
jecxz
inc
cmps
pop
pop
lods
les
sbb
jb
imul
neg
fimul
jge
push
popa
jnp
mov
cmp
das
pop
ret
fwait
push
pop
mov
sub
mov
aad
push
add
or
xchg
push
sub
in
dec
mov
sbb
das
inc
out
or
inc
dec
int3
xchg
xchg
lods
push
je
sbb
lods
stos
sub
dec
pop
out
mov
jae
mov
cmp
jmp
push
add
lods
adc
push
push
cmps
(bad)
clc
or
xchg
lds
and
xor
mov
push
add
out
xchg
std
jns
jbe
mov
lods
into
xor
xor
cmps
ja
enter
pop
pop
adc
cmp
stos
pop
pushf
add
stos
or
mov
jnp
aad
jo
fs
jge
lds
mov
mov
mov
sbb
in
adc
ret
aaa
or
or
stos
dec
cmc
ret
xchg
retf
mov
sub
scas
push
ins
ret
cmps
mov
inc
das
jl
dec
div
cmc
dec
shl
mov
scas
pop
sub
int3
mov
mov
loope
repnz
xor
sbb
push
mov
inc
es
xor
sub
mov
aaa
inc
outs
sar
xchg
iret
inc
mov
push
out
mov
addr16
sbb
cmps
add
call
sub
jle
mov
adc
mov
push
addr16
xor
mov
dec
cmps
arpl
retf
stos
das
jmp
xlat
mov
xchg
cld
mov
push
call
(bad)
sub
jge
lds
out
xchg
lds
popf
test
mov
cmp
add
mov
push
mov
sub
lods
test
out
sub
enter
cmp
or
cs
xchg
rol
mov
test
adc
and
xlat
in
jo
jg
leave
in
pusha
(bad)
js
imul
and
xor
(bad)
fcom
sti
add
cmp
and
push
or
sbb
fstp
in
fcom
shl
dec
and
aaa
in
inc
jo
add
or
ficom
jmp
fld
pop
inc
lock
xor
ja
gs
add
cmc
and
lds
push
sti
dec
test
pop
inc
sbb
mov
les
test
mov
push
jle
inc
sbb
or
sahf
cmps
into
xor
mov
jb
dec
in
xchg
pop
push
mov
fidivr
(bad)
dec
push
xchg
lods
or
sub
push
push
sbb
call
jae
test
and
sahf
bound
adc
(bad)
in
push
test
xchg
add
int
(bad)
bound
mov
and
or
xor
(bad)
adc
fild
ins
fiadd
sbb
mov
mov
sbb
pop
dec
pop
push
pushf
inc
inc
mov
sahf
dec
or
and
add
push
in
inc
add
out
lahf
nop
jb
imul
jmp
enter
out
dec
sahf
in
into
shl
pop
cld
in
or
fs
push
sbb
sbb
test
lods
mov
xor
inc
sub
mov
mov
cmps
shl
mov
xchg
fsub
sbb
sub
xor
xchg
loope
sbb
cmp
mov
stos
lock
in
lahf
mov
jmp
jge
pop
lds
cdq
push
inc
cs
pusha
imul
dec
xchg
out
jecxz
(bad)
xchg
mov
imul
xchg
ficom
fwait
mov
cmps
adc
push
lods
into
sbb
stos
inc
mov
pusha
push
sub
gs
dec
cmp
add
fimul
bt
icebp
push
mov
push
mov
pop
dec
arpl
(bad)
jl
push
push
inc
lods
in
sbb
sub
iret
cmp
inc
fs
mov
lahf
clc
lods
or
jno
mov
or
sub
xlat
js
adc
xchg
xor
aaa
or
psrld
sbb
sbb
push
mov
push
gs
repnz
mov
repz
inc
retf
lods
mov
scas
mov
mov
mov
test
jmp
or
mov
retf
jmp
or
inc
push
jl
dec
stos
push
int
mov
pop
shl
mov
test
fs
les
cmp
add
in
cmp
ret
iret
stc
push
fnstcw
mov
inc
jnp
test
add
gs
ins
ins
lds
xchg
lea
inc
clc
fst
lods
xor
push
ds
retf
(bad)
jmp
xor
lock
sbb
or
imul
mov
test
not
shl
and
es
dec
mov
nop
cmp
mov
pusha
cmc
pushf
jmp
ja
(bad)
repnz
jmp
(bad)
mov
cmp
aam
je
push
xchg
rol
(bad)
retf
or
fld
cmp
xchg
ja
hlt
pop
xor
enter
mov
mov
or
or
pop
add
or
pop
pop
sub
mov
es
mov
mov
and
hlt
xchg
cli
dec
xchg
lahf
pop
mov
rol
pop
ja
push
push
push
sub
daa
fs
nop
mov
add
jae
stos
jmp
loop
xchg
jae
sub
adc
pop
and
mov
cwde
mov
or
(bad)
aad
in
(bad)
iret
sbb
or
mov
push
loopne
aam
retf
mov
jns
jo
sub
push
call
jns
jns
mov
adc
in
adc
push
lahf
sbb
shr
jp
pop
ret
imul
ret
cmp
jmp
fadd
pop
sbb
pop
xchg
mov
sahf
and
add
rol
push
rcl
pop
mov
pop
retf
jae
scas
test
or
jo
out
gs
pop
push
xchg
leave
jnp
ret
(bad)
mov
adc
add
out
push
pop
sbb
inc
jmp
sbb
mov
je
shr
cmp
xor
test
loop
dec
adc
inc
xchg
jno
pop
xlat
cmp
addr16
push
pop
cmp
or
dec
movs
pushf
sub
stos
fwait
push
pop
sub
mov
js
inc
mul
dec
xlat
cli
cmp
push
icebp
je
int3
leave
push
pop
mov
inc
rcl
mov
inc
xchg
lahf
sbb
cmp
xor
adc
popa
imul
into
sar
push
xor
ds
out
shr
push
test
les
inc
popa
sub
sub
popa
ror
mov
push
inc
rcl
or
xchg
sbb
les
pop
and
lea
rol
jl
fnstenv
inc
shr
fs
or
ds
mov
sbb
push
pop
gs
rcr
loope
(bad)
mov
jge
dec
(bad)
(bad)
int
test
outs
inc
in
test
test
fiadd
imul
adc
or
push
cmp
mov
inc
xchg
inc
xchg
(bad)
cdq
popf
sbb
enter
ins
retf
cmp
xchg
loope
dec
sti
sahf
shr
cld
inc
xor
xor
adc
in
xor
sbb
fisubr
out
std
or
mov
cmp
jecxz
stos
sub
loopne
out
adc
in
pop
xchg
pop
int
mov
mov
pop
push
mov
xor
mov
add
jns
and
cmp
cdq
xchg
rcl
(bad)
bound
push
inc
push
and
cmc
icebp
mov
lahf
neg
jl
xchg
mov
lahf
std
or
jmp
push
clc
xor
dec
scas
(bad)
cmp
es
pop
jmp
add
add
xor
sahf
jo
cwde
scas
in
pop
and
mov
or
pop
lods
dec
(bad)
int3
hlt
sbb
loop
bound
mov
daa
test
les
movs
lock
push
push
pop
lds
test
add
dec
in
aad
out
pop
mov
arpl
inc
retf
dec
mov
push
sub
inc
adc
jle
pop
mov
or
loopne
xlat
push
adc
inc
jl
mov
jne
xchg
push
fst
push
movs
scas
or
les
jo
sub
push
jg
fidiv
retf
popf
and
mov
xor
push
pop
push
inc
(bad)
(bad)
outs
pushf
xchg
mov
dec
fadd
sub
inc
xor
sub
ret
dec
xor
adc
shl
ss
(bad)
pop
sahf
call
sub
pop
out
lods
pop
jnp
mov
sub
out
push
mov
xchg
cmp
cmp
xchg
and
test
mov
xlat
pop
jecxz
pop
and
pop
aad
adc
ror
cdq
push
inc
lds
sub
mov
pushf
sbb
jmp
lods
scas
shr
pop
pop
push
or
mov
in
imul
adc
ret
(bad)
xchg
push
out
pop
ja
cmp
(bad)
and
repnz
int3
in
loope
adc
cmps
fs
dec
mov
sbb
push
xchg
(bad)
cli
push
fcomp
xor
and
outs
aad
repz
stos
sub
dec
fnstsw
push
jbe
push
(bad)
dec
movs
ret
shl
aam
repnz
mov
mov
sub
cdq
sbb
retf
in
mov
mov
dec
in
cld
sbb
push
out
dec
cmp
and
sbb
push
cwde
mov
leave
cmp
cdq
stos
jmp
and
push
cmp
and
iret
enter
xchg
sbb
dec
movs
call
cmp
aas
jp
fidivr
test
aad
imul
fwait
ds
and
pop
test
mov
stos
inc
scas
nop
arpl
dec
adc
xchg
mov
pop
push
test
pop
aaa
stos
mov
mov
int
sahf
xlat
adc
cmc
jno
lea
dec
sub
push
sbb
dec
add
lock
xchg
sub
sbb
sar
cli
cmp
test
dec
imul
mov
fdiv
xor
rol
mov
mov
(bad)
int3
jp
dec
in
or
add
adc
add
lods
test
add
(bad)
rcr
mov
mov
push
push
fnstsw
cvttps2pi
cdq
xor
add
adc
fcomp
stos
cwde
inc
idiv
loopne
(bad)
into
mov
cs
iret
mov
cmps
clc
(bad)
cmps
dec
cmps
dec
jl
or
(bad)
cmp
arpl
jg
cmp
pushf
cmp
jl
out
dec
push
scas
js
sub
sub
test
or
xor
into
and
sbb
sbb
dec
xchg
repz
xor
dec
into
(bad)
imul
and
xchg
in
pop
xchg
cmp
lods
sbb
push
(bad)
mov
dec
leave
imul
out
pushf
adc
jl
dec
mov
mov
or
in
sbb
ret
call
xchg
pop
dec
lahf
sbb
xlat
cmp
das
shl
push
sbb
push
out
mov
jmp
or
mov
jl
lods
aad
aas
mov
sahf
ror
xor
jl
push
stos
pusha
or
xlat
icebp
mov
not
xor
or
(bad)
push
xor
arpl
mov
xchg
cli
mov
scas
outs
div
sar
icebp
adc
mov
outs
pusha
add
fisub
out
push
push
push
pop
and
sbb
pop
fs
sbb
mov
es
push
pop
jmp
(bad)
lock
leave
sub
inc
ds
mov
pop
jp
movs
out
mov
movs
push
cli
call
jb
xchg
sbb
cmp
(bad)
addr16
mov
retf
pop
ds
repnz
(bad)
jns
addr16
jne
jmp
mov
sti
aaa
lea
nop
pop
cdq
and
inc
stos
jo
shl
(bad)
push
not
pop
icebp
stc
pop
lods
adc
aad
je
mov
mov
leave
aad
cdq
or
pop
pop
add
mov
xor
leave
rcl
jns
push
mov
mov
or
push
push
xchg
and
test
ror
jno
push
mov
dec
push
push
mov
or
int
lock
idiv
lds
in
or
ret
mov
xor
sti
add
mov
ret
out
call
ja
mov
rcr
cmp
pop
in
stos
ds
and
xchg
cmp
pop
mov
stos
enter
pushf
mov
mov
addr16
jae
pop
int3
mov
inc
push
fs
je
xor
add
mov
aaa
dec
jnp
ret
add
test
in
lahf
scas
cmp
ret
cmp
dec
add
repnz
or
pop
mov
jmp
fcom
sbb
rcr
sar
xor
lock
inc
xchg
scas
jg
pop
in
push
and
gs
movs
lods
push
repz
sub
sbb
sahf
cmps
jb
or
and
add
jns
nop
add
retf
test
pushf
cmp
(bad)
and
jns
xor
mov
rol
add
pop
and
in
mov
push
nop
jmp
jo
es
push
sub
imul
loopne
ins
jl
inc
mov
sbb
sub
sahf
push
jb
in
xchg
lds
adc
repnz
add
sub
mov
aas
js
or
call
arpl
push
sub
mov
jle
xor
ret
inc
fbstp
daa
ins
rol
ins
cdq
adc
pop
lea
sahf
mov
sbb
xor
dec
and
adc
inc
jo
pop
(bad)
sahf
adc
ds
test
out
mov
jnp
mov
test
inc
push
in
ret
adc
loopne
push
mov
cmp
push
xchg
fdivr
lock
and
pop
jl
mov
retf
and
and
hlt
ret
dec
mov
xor
add
stc
out
or
inc
mov
dec
arpl
adc
fld
call
jae
aaa
cmc
mov
adc
icebp
xor
lahf
fcomp
dec
test
cmp
(bad)
sahf
inc
(bad)
inc
bound
imul
mov
cs
push
pop
mov
dec
jle
mov
mov
aad
jb
and
mov
jge
outs
pop
fwait
add
sbb
mov
cmp
dec
fisttp
dec
jle
inc
ror
jb
jge
mov
inc
pop
(bad)
adc
pop
scas
call
mov
stos
out
test
mov
scas
jnp
mov
les
inc
or
inc
inc
aam
jbe
test
daa
xor
enter
outs
mov
jns
ins
sbb
(bad)
loope
pop
push
sahf
fwait
ja
(bad)
mov
push
int3
aam
aam
clc
jnp
repnz
outs
sbb
jb
les
std
int3
mov
inc
sub
jne
out
nop
push
shl
mov
aaa
adc
push
or
pop
adc
lods
mov
popa
enter
push
ja
ret
xor
pop
sti
push
stc
or
out
js
xchg
ins
fnsave
add
loope
stos
stos
jmp
test
jb
sti
mov
jne
jne
out
ja
repnz
inc
jne
out
inc
(bad)
mov
repz
ror
mov
mov
jns
out
jmp
push
jmp
jmp
mov
ins
xchg
mov
add
push
jae
mov
(bad)
out
in
dec
int3
repz
into
pop
sbb
jnp
mov
jg
aaa
inc
pop
lahf
(bad)
push
jg
xchg
jg
xchg
push
jg
(bad)
mov
mov
dec
fstp
xchg
rcr
push
retf
pop
outs
out
out
jl
jns
jg
out
push
out
jg
out
dec
hlt
ret
pop
sti
lock
aas
jl
pop
mov
pop
jle
mov
jb
(bad)
jp
mov
neg
out
into
mov
shr
fcmovne
jbe
neg
fwait
ja
jle
mov
iret
cmp
sbb
(bad)
stc
jmp
jp
cmc
xchg
fmulp
xlat
repnz
retf
scas
fistp
je
ret
mov
pop
pop
mov
test
out
(bad)
push
out
pop
jns
sti
xor
fnstsw
sti
(bad)
pop
fidivr
mov
sub
(bad)
out
retf
jge
pop
enter
mov
sti
aas
jp
retf
inc
mov
push
and
(bad)
sbb
xlat
aaa
repnz
into
sti
outs
in
inc
aas
es
cwde
nop
(bad)
sbb
cwde
loope
inc
ds
arpl
popf
jle
mov
sub
sbb
xchg
xlat
pop
fisttp
ja
jmp
mov
mov
jle
lahf
fucomip
addr16
fimul
mov
mov
(bad)
out
pop
cmp
ins
and
ins
pop
jg
sbb
jmp
sub
mov
outs
je
fsubrp
jp
shl
mov
pop
in
mov
ja
stc
jbe
cmp
jg
inc
imul
pushf
lods
cli
in
push
mov
daa
cmp
sbb
jbe
packuswb
ja
ret
shl
hlt
or
xchg
das
(bad)
adc
fnstcw
fcmovu
jns
aad
jge
(bad)
push
repnz
(bad)
cmp
fisub
xchg
xor
mov
mov
jmp
outs
lahf
out
cmc
ins
gs
dec
ficom
movs
cmp
push
aas
mov
dec
(bad)
fistp
int3
inc
sbb
das
jg
sbb
pop
int
sub
iret
cmps
xchg
stc
outs
sbb
call
lods
mov
rcr
popf
ja
clc
inc
in
in
jl
mov
neg
cmc
imul
pop
(bad)
xchg
shr
cmovb
out
jmp
fisttp
mov
cmc
cld
out
call
std
lahf
mov
mov
xchg
jmp
sbb
jae
pop
std
sub
jl
dec
fidivr
jmp
adc
jle
(bad)
stc
and
or
std
aam
repz
sti
scas
fidivr
lock
ffree
neg
push
mov
add
outs
xchg
(bad)
cmp
aaa
pop
ds
in
psubd
xchg
pop
repnz
stos
mov
jbe
retf
inc
push
test
adc
test
call
mov
aas
imul
daa
movs
jmp
cmc
sti
out
call
and
push
outs
fistp
rcl
cmc
(bad)
push
repnz
je
mov
(bad)
(bad)
pop
enter
(bad)
(bad)
jle
repnz
push
repnz
sbb
xchg
push
push
xchg
mov
scas
fcomp
aad
jle
adc
jl
mov
lock
sti
call
clc
lock
jl
loope
popa
adc
(bad)
push
mov
jg
jmp
mov
scas
fidivr
mov
repnz
(bad)
aas
xchg
sbb
repz
inc
fnsave
pop
pop
jmp
ds
xchg
int3
(bad)
cmp
cld
jge
std
lds
jg
inc
inc
test
in
cmc
pop
aas
fs
aaa
xor
pop
cmp
repz
jb
sbb
dec
repnz
out
ds
std
repz
pop
or
sti
and
in
pop
cmp
fprem1
repnz
scas
mov
sti
mov
iret
neg
mov
mov
fs
dec
int
cmp
(bad)
aam
mov
test
mov
retf
lds
leave
xchg
ja
mov
jo
fcomp
loop
pmuludq
scas
fild
iret
nop
mov
mov
jb
cmps
cmp
neg
push
cmp
push
(bad)
mov
inc
fisub
jbe
mov
popf
jo
es
les
and
mov
stc
cdq
repnz
mov
das
es
mov
aam
mov
jecxz
inc
sti
xchg
cli
ss
ins
cli
fild
cmps
dec
inc
repz
loope
jne
sahf
out
(bad)
mov
div
jbe
das
push
es
lods
jg
pop
in
dec
(bad)
xchg
jbe
int
mov
push
mov
adc
arpl
int
icebp
aad
(bad)
mov
add
int
inc
jnp
cmp
fnstsw
jg
(bad)
aas
neg
jle
sti
lods
(bad)
(bad)
jmp
repz
xor
data16
repnz
repz
fbstp
and
(bad)
push
out
(bad)
mov
jp
jmp
xor
(bad)
out
mov
push
dec
mov
fadd
sbb
jg
mov
jmp
std
pop
cmp
or
adc
dec
stc
in
mov
and
pushf
not
test
test
mov
jg
out
nop
arpl
mov
test
aad
test
push
mov
add
aam
ja
(bad)
(bad)
loop
push
test
imul
out
lahf
jg
clc
push
jne
jg
(bad)
cmpxchg
arpl
hlt
lahf
push
push
shl
sub
adc
fist
lea
repz
jg
jne
idiv
inc
push
push
(bad)
jmp
imul
and
lock
aas
cli
mov
outs
js
aam
xlat
scas
dec
mov
cmps
scas
mov
adc
sar
dec
clc
das
arpl
jle
into
imul
mov
fwait
scas
out
add
add
fild
cwde
mov
push
addr16
jle
mov
out
iret
in
fs
xchg
mov
lahf
inc
outs
xor
mov
mov
in
adc
in
dec
movs
push
scas
repz
addr16
jnp
out
shl
cli
aaa
mov
out
mov
sub
loop
lods
iret
(bad)
aad
pop
repnz
cmp
mov
iret
pop
std
popf
imul
dec
push
in
cmp
fisub
ret
mov
sti
lahf
dec
jp
ficomp
mov
jo
out
mov
fnsave
push
cmp
call
imul
in
ficom
movs
rcr
aaa
loope
jmp
stc
idiv
push
iret
fwait
repz
outs
lea
mov
out
jmp
sub
jecxz
mov
outs
(bad)
std
imul
je
fbstp
(bad)
fild
fwait
push
mov
mov
ja
mov
inc
std
(bad)
jp
aas
pop
out
inc
int
fdivr
jl
imul
imul
mov
sub
cmp
mov
dec
rcr
pop
scas
pushf
xchg
in
out
imul
dec
gs
pop
cmc
inc
loope
cmp
mov
xor
mov
not
pop
or
push
sti
mov
xchg
popa
cmp
jp
(bad)
imul
mov
adc
mov
out
jmp
outs
hlt
std
out
repz
add
dec
xchg
sub
mov
sti
jg
out
das
ds
imul
call
(bad)
fstp
(bad)
inc
add
add
add
add
add
shl
xchg
add
add
add
pop
inc
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
imul
adc
iret
add
push
xchg
adc
iret
add
push
xchg
adc
iret
add
xor
inc
pop
mov
sahf
ins
loopne
adc
or
mov
sbb
inc
dec
mov
inc
mov
repz
sti
dec
ss
xchg
js
dec
mov
add
cmc
or
out
stos
and
sub
jo
dec
jbe
fldenv
jl
or
(bad)
ds
dec
mov
out
cwde
sbb
mov
jmp
outs
pop
retf
mov
push
data16
and
cld
jmp
(bad)
dec
add
sub
add
add
leave
inc
test
add
and
add
ins
outs
cs
or
and
add
add
add
sbb
or
xchg
adc
iret
add
imul
or
xchg
adc
iret
add
add
sub
add
add
shl
xchg
add
add
add
add
cld
mov
add
outs
outs
je
outs
je
push
jns
gs
cs
ins
or
and
add
add
add
sbb
imul
adc
iret
add
push
xchg
adc
iret
add
push
xchg
adc
iret
add
add
add
add
add
mov
add
add
add
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
inc
push
inc
inc
push
lods
leave
out
add
add
jecxz
add
and
pop
add
add
add
add
add
arpl
add
add
je
add
add
add
add
jne
and
jne
ins
imul
jae
outs
and
gs
imul
outs
and
ja
jns
jne
jne
and
jge
or
push
outs
jb
popa
je
outs
outs
and
jne
jae
outs
and
ins
ins
and
ins
jo
jne
and
imul
and
and
ins
imul
jns
popa
outs
and
jb
outs
jb
popa
outs
arpl
outs
data16
jge
or
data16
jne
popa
arpl
jo
sub
jnp
jge
ja
ins
ins
and
je
ins
popa
je
arpl
ins
jns
jae
outs
and
jge
imul
je
outs
outs
and
outs
jne
and
and
popa
je
jb
jae
je
popa
je
jns
jne
jne
gs
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
and
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
