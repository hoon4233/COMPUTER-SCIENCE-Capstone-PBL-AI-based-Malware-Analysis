(bad)
call
push
mov
push
lea
add
dec
pusha
jmp
mov
(bad)
(bad)
(bad)
call
stos
mov
jno
push
jmp
cmp
xor
lds
aas
dec
iret
sar
dec
cmp
or
xor
inc
or
test
mov
cli
cld
mov
or
(bad)
out
dec
xor
repz
jecxz
fimul
pop
(bad)
jecxz
or
mov
pop
loope
jns
aam
(bad)
(bad)
(bad)
jmp
inc
inc
inc
add
sbb
sbb
cli
xor
xchg
retf
pop
aas
cwde
inc
(bad)
(bad)
(bad)
call
cwde
js
xor
pop
cmp
fcom
jl
loopne
adc
push
not
std
and
jmp
ror
cmps
mov
popa
sbb
js
xchg
adc
(bad)
(bad)
push
or
jge
xchg
dec
dec
ds
cld
daa
je
icebp
repnz
(bad)
(bad)
(bad)
call
sub
jp
test
in
cwde
sbb
out
dec
jo
bnd
mov
lods
(bad)
(bad)
(bad)
jmp
add
nop
jnp
lock
in
mov
push
imul
outs
jo
cmp
(bad)
(bad)
(bad)
fld
push
mov
lods
test
mov
add
js
sahf
je
cmp
nop
(bad)
(bad)
(bad)
call
(bad)
cmp
pushf
retf
or
in
jmp
nop
jo
jecxz
xchg
adc
js
lahf
pop
or
je
(bad)
(bad)
call
mov
and
sub
push
xor
inc
pop
out
mov
sbb
and
xchg
or
(bad)
(bad)
(bad)
inc
jg
idiv
inc
mov
jns
pop
xor
and
adc
je
(bad)
(bad)
(bad)
push
adc
imul
cli
jl
sub
jae
repnz
jno
test
dec
mov
push
aaa
add
sub
jmp
cmp
add
push
iret
ficomp
adc
(bad)
(bad)
(bad)
push
inc
nop
sbb
iret
adc
xor
call
mov
fisttp
dec
xor
dec
or
jmp
(bad)
(bad)
(bad)
cmp
xchg
xchg
jae
mov
mov
mov
fst
scas
xchg
cmp
(bad)
(bad)
jmp
stc
dec
fisubr
daa
hlt
sub
dec
mov
les
pop
and
push
xchg
inc
pop
sbb
std
sahf
(bad)
(bad)
(bad)
call
cmp
xchg
xor
push
out
pop
mov
das
fild
pop
mov
shr
(bad)
call
in
(bad)
jnp
mov
mov
pop
fs
pop
mov
loopne
ins
retf
(bad)
mov
call
aam
dec
sar
fcom
mov
inc
dec
(bad)
(bad)
(bad)
inc
and
cmp
loop
add
inc
sar
push
daa
ret
ror
mov
std
(bad)
(bad)
in
out
mov
mov
inc
int3
scas
sub
and
(bad)
mov
(bad)
(bad)
mov
stc
pop
das
push
in
add
repnz
adc
xchg
jbe
jb
shl
push
push
jb
xor
(bad)
(bad)
call
dec
mov
test
push
leave
pop
mov
imul
push
mov
(bad)
push
and
xor
jnp
test
fistp
pop
popa
sub
sub
lahf
push
(bad)
(bad)
dec
inc
push
imul
and
cli
mov
movs
or
je
js
sub
(bad)
(bad)
jle
out
inc
mov
add
cdq
cmc
mov
mov
inc
mov
push
jb
mov
movs
dec
mov
jbe
pop
jg
jl
ror
movs
xchg
pop
push
loope
(bad)
(bad)
(bad)
push
int3
and
stos
mov
in
mov
int3
leave
inc
dec
xchg
lods
test
imul
(bad)
out
fcomp
lahf
icebp
and
mov
sub
push
and
dec
jg
dec
push
mov
mov
push
xchg
and
mov
jecxz
jmp
mov
mov
cmp
lds
sti
iret
mov
mov
mov
dec
jmp
cmp
mov
popf
retf
(bad)
(bad)
(bad)
(bad)
jns
jbe
enter
fs
sub
arpl
aas
adc
sub
adc
mov
call
dec
xchg
pop
mov
sbb
jp
les
add
push
bound
adc
lahf
or
and
lahf
ret
out
inc
ror
retf
fimul
cmp
(bad)
(bad)
(bad)
dec
and
sub
loop
iret
scas
mov
mov
xchg
push
int3
cmc
outs
pop
data16
out
(bad)
(bad)
(bad)
(bad)
pop
jnp
mov
dec
mov
daa
mov
rcl
pop
(bad)
and
and
push
fwait
dec
or
(bad)
(bad)
(bad)
(bad)
fstp
push
movs
out
push
inc
cs
add
out
cld
adc
das
adc
push
pop
mov
ret
sbb
(bad)
(bad)
(bad)
(bad)
ds
fst
mov
jecxz
xchg
xchg
jge
sbb
scas
push
add
jo
in
vunpckhps
push
push
bound
mov
(bad)
(bad)
(bad)
jmp
mov
cs
outs
enter
cs
mov
stos
xor
(bad)
in
daa
xchg
stos
out
inc
mov
mov
mov
cs
sbb
mov
(bad)
(bad)
(bad)
inc
lahf
je
lock
stos
xchg
mov
jb
(bad)
cmp
xchg
xor
or
loop
fild
(bad)
jmp
jge
sub
and
and
mov
(bad)
(bad)
dec
push
push
jmp
fxtract
iret
push
(bad)
popf
jl
pop
jmp
mov
fstp
(bad)
(bad)
call
icebp
mov
xchg
sub
sbb
and
mov
es
cmp
inc
retf
sbb
call
sbb
push
pop
pop
in
or
pushf
mov
(bad)
gs
call
dec
data16
push
(bad)
(bad)
call
adc
sub
stos
cmp
imul
popf
rol
stos
lock
(bad)
(bad)
(bad)
jmp
ret
push
clc
hlt
lock
ins
xor
push
sbb
inc
inc
xor
jae
outs
std
(bad)
jmp
cdq
lea
or
test
or
xor
xor
(bad)
(bad)
dec
jl
inc
xchg
pop
xchg
scas
add
sbb
jg
les
inc
jle
enter
(bad)
(bad)
dec
jmp
sub
mov
mov
inc
arpl
(bad)
aaa
adc
(bad)
(bad)
repnz
loop
lods
xor
sahf
xlat
dec
cs
aaa
sbb
ret
xor
adc
(bad)
(bad)
call
push
push
pop
xor
lea
mov
test
test
cld
(bad)
(bad)
push
cs
push
mov
add
or
cld
sbb
or
icebp
inc
cli
int3
into
arpl
cmp
(bad)
dec
jnp
stos
aad
jmp
mov
inc
sti
int3
iret
jbe
cwde
call
push
mov
mov
sbb
mov
fisub
(bad)
(bad)
jmp
cld
push
dec
adc
outs
adc
cld
or
cmp
(bad)
(bad)
inc
and
adc
mov
xor
cwde
stos
push
jbe
adc
mov
movs
mov
outs
lock
mov
aas
lods
jge
scas
fld
ins
inc
xchg
repnz
(bad)
jg
jp
pop
mov
popa
xchg
mov
push
sub
(bad)
(bad)
(bad)
jg
stos
jg
mov
add
sbb
in
setnp
jg
es
adc
sub
(bad)
(bad)
(bad)
cmp
repnz
mov
je
mov
popf
mov
mov
test
ja
sbb
(bad)
(bad)
(bad)
call
shl
and
sub
mov
fidivr
mov
pop
xchg
pusha
xlat
push
(bad)
(bad)
(bad)
jmp
sub
xor
sbb
or
ret
adc
je
push
jmp
cmp
loopne
(bad)
call
scas
lahf
push
sbb
jmp
mov
mov
das
or
lahf
xlat
jnp
ins
jmp
mov
jmp
repnz
and
addr16
inc
dec
test
xchg
adc
(bad)
(bad)
(bad)
inc
(bad)
clc
or
dec
(bad)
in
mov
inc
out
add
in
cmp
jo
fmul
sbb
(bad)
(bad)
dec
push
mov
push
push
in
xchg
(bad)
(bad)
cmc
jge
retf
ficom
dec
leave
inc
push
(bad)
(bad)
call
imul
cmp
adc
mov
int
ret
mov
(bad)
push
inc
add
add
mov
sbb
jl
(bad)
(bad)
(bad)
jg
popf
mov
jg
es
shl
sahf
ss
xchg
adc
mov
add
inc
sub
jae
dec
cld
call
jge
daa
mov
push
ret
daa
mov
mov
add
pop
loope
adc
jle
call
pop
pop
mov
ins
mov
mov
nop
enter
jnp
ds
jp
jp
cld
in
call
pushf
ret
mov
lods
push
retf
cmp
dec
(bad)
(bad)
(bad)
call
sbb
or
or
gs
cmp
dec
adc
ins
mov
dec
mov
(bad)
icebp
cmp
sti
or
(bad)
int
xor
mov
hlt
test
(bad)
(bad)
jmp
mov
sahf
cs
stos
sbb
pop
pop
inc
lods
sbb
rol
pop
xor
or
div
iret
or
xchg
xchg
or
mov
ss
jnp
xchg
clc
(bad)
call
xor
cmps
push
jnp
add
pmulhuw
cmp
shl
(bad)
fbld
sbb
lods
inc
inc
sti
aam
push
mov
test
mov
inc
imul
loopne
inc
xchg
test
sbb
stc
ja
add
stos
push
pop
aad
cmp
(bad)
mov
jae
ins
sbb
and
ins
aad
pop
in
xor
mov
(bad)
(bad)
mov
xor
aam
pop
mov
ret
fstp
pusha
fdiv
push
stos
mov
(bad)
jmp
imul
test
std
and
stos
jmp
or
and
(bad)
(bad)
dec
ins
adc
hlt
mov
jne
sbb
xor
inc
std
rol
(bad)
(bad)
(bad)
call
jmp
add
pop
adc
popa
or
cmps
cmps
push
imul
sub
cmc
xchg
iret
cmp
xchg
cmp
outs
cld
(bad)
jg
xor
lds
sbb
ja
imul
ds
call
jmp
dec
sub
pop
sbb
add
mov
mov
inc
pushf
cld
and
(bad)
mov
jno
ja
lds
fnstcw
mov
xchg
pop
fimul
mov
std
(bad)
(bad)
jmp
cld
pusha
pushf
cwde
jno
fcmovne
dec
loop
fcom
mov
call
sahf
xchg
and
sbb
add
pop
pop
ret
push
push
mov
call
push
mov
call
mov
pop
ret
shr
pop
push
in
cmp
mov
lea
pop
push
push
mov
or
sbb
or
jne
mov
add
and
xlat
ss
xor
in
or
mov
mov
ds
addr16
or
sub
mov
pop
outs
cmp
mov
push
in
push
idiv
sbb
imul
push
jg
mov
je
adc
mov
push
sti
mov
jg
(bad)
cld
sub
mov
mov
sub
sub
sub
sar
add
pusha
fucomi
imul
push
push
fld
sub
(bad)
sbb
push
das
(bad)
test
xor
inc
jmp
add
test
clc
idiv
ja
sub
mov
or
inc
imul
sub
mov
push
push
mov
lea
mov
popa
fild
lahf
(bad)
sub
mov
cmp
mov
outs
inc
not
(bad)
sbb
mov
movdqa
inc
nop
jmp
movq
mov
inc
loopne
or
lock
std
or
(bad)
mov
adc
adc
in
push
loopne
add
mov
out
ficom
jne
fld
and
pop
sbb
pop
fcom
call
fld
fs
cmp
leave
or
loopne
add
push
and
and
inc
dec
push
pop
xor
outs
jg
inc
in
sub
dec
and
push
les
in
out
mov
xor
or
mov
je
mov
push
pop
adc
or
lea
push
push
or
nop
outs
jo
ins
push
sbb
adc
ds
xchg
dec
mov
add
xchg
mov
in
push
mov
and
and
mov
rcl
int3
aaa
or
sbb
call
popf
clc
push
sub
and
int
popa
mov
iret
int3
push
test
and
xor
fstp
or
repnz
sbb
(bad)
je
cmp
mov
add
adc
dec
mov
cmp
xor
push
dec
jne
xor
sbb
sub
cs
push
sbb
or
mov
mov
into
pop
push
ins
inc
push
repz
or
or
sub
ins
lods
dec
mov
or
dec
out
mov
and
mov
and
push
push
fld
xchg
mov
faddp
jnp
adc
push
fild
cmp
sub
pop
xchg
mov
psignd
mov
out
cs
je
push
adc
cmovo
je
mov
rep
lea
push
(bad)
or
call
mov
mov
mov
push
sub
inc
enter
stos
adc
aas
ret
cmp
dec
adc
mov
nop
popw
jnp
rcr
inc
dec
movd
jne
or
fadd
or
pop
sub
imul
inc
pop
mov
clc
fidiv
ret
jmp
or
jnp
sbb
xor
sub
or
push
pop
adc
popa
fistp
test
out
inc
or
or
inc
add
(bad)
push
push
mov
mov
sub
mov
dec
je
add
sbb
popa
imul
push
je
sub
jne
out
push
jo
and
sub
jne
mov
ins
jmp
lods
sbb
dec
inc
mov
mov
call
fadd
push
xlat
xor
and
adc
or
inc
add
or
push
mov
push
pop
or
ret
xchg
xchg
popf
shl
ret
daa
cmp
sub
sbb
cmp
jo
(bad)
xchg
or
push
sub
in
and
mov
pop
out
and
adc
pop
adc
push
push
(bad)
cmp
sahf
cmp
cld
stos
out
xor
cmp
mov
(bad)
add
pop
mov
enter
push
jge
sub
jne
dec
inc
or
mov
xor
leave
in
fild
ret
cmp
int3
sbb
xor
or
mov
mov
mov
mov
cwde
dec
cmp
retf
push
pop
xchg
jg
ret
ror
add
add
add
sbb
sbb
(bad)
out
das
je
les
inc
ret
cmp
push
clc
push
xor
push
inc
pop
mov
inc
movs
in
jmp
out
iret
mov
push
inc
mov
test
ja
fmulp
mov
jae
jmp
out
inc
or
mov
pop
hlt
push
aaa
pop
sti
cmps
fwait
lods
jbe
xchg
ror
test
test
fild
pop
clc
mov
ret
cmp
add
sbb
dec
sub
aam
and
daa
fcomp
loopne
leave
test
mov
mov
or
loopne
sub
inc
dec
enter
cld
add
and
sbb
or
push
sbb
mov
rol
shl
add
fs
inc
mov
loop
and
jle
adc
addr16
mov
sbb
or
adc
or
sbb
out
cmp
push
ss
pop
mov
or
xchg
mov
sub
inc
clc
call
sbb
jmp
mov
pop
ja
fwait
in
test
ficom
test
int
mov
imul
scas
adc
mov
adc
mov
shl
sub
scas
ja
fadd
xchg
test
cmp
cmp
jb
jmp
adc
adc
mov
sbb
mov
inc
push
push
(bad)
push
pop
sub
add
mov
out
in
and
(bad)
or
push
sub
jno
repz
ins
ficom
xchg
add
in
inc
or
mov
aas
push
sub
adc
mov
mov
inc
cld
mov
mov
ss
jnp
fild
cmp
jne
mov
jl
or
jg
loop
nop
sbb
cld
movnti
or
shl
jne
inc
inc
clc
mov
(bad)
dec
cmp
jb
xchg
or
push
mov
xor
dec
clc
add
jo
push
pop
adc
xchg
add
push
and
test
dec
mov
lea
sub
or
or
sub
inc
lahf
xor
scas
retf
add
sub
adc
(bad)
outs
ror
(bad)
or
outs
movs
sar
and
dec
js
push
jnp
cs
dec
je
cld
fadd
inc
cmp
xchg
jns
aam
pop
sub
rcl
sbb
popw
das
les
pop
minps
sbb
loope
lock
iret
call
xchg
outs
push
and
in
inc
jnp
adc
and
(bad)
jmp
adc
popf
mov
leave
dec
inc
inc
sub
popa
leave
cs
pop
push
je
xor
mov
jbe
rol
dec
jne
or
popf
push
xchg
cmps
mov
xor
add
sbb
push
sub
xor
mov
inc
adc
popa
mov
mov
mov
lods
das
icebp
add
inc
enter
jne
mov
test
sbb
jb
push
(bad)
nop
dec
or
jnp
in
xor
es
data16
add
pop
inc
or
mov
icebp
lds
jp
xchg
push
ret
loop
and
sbb
dec
jge
test
cmc
outs
mov
(bad)
xor
not
rcr
pop
cmovno
and
xchg
sar
pop
add
ror
xchg
push
pop
add
fs
pop
mov
add
sbb
(bad)
aad
push
(bad)
push
mov
jge
in
add
adc
or
ror
and
ret
push
cs
ret
xor
arpl
push
(bad)
push
enter
pop
mov
and
or
popa
addr16
and
push
sub
popa
inc
mov
cmp
call
in
lock
mov
or
ds
pusha
ret
xor
push
and
inc
ss
add
push
(bad)
or
sub
and
sbb
mov
xor
and
es
mov
sbb
xor
xor
jecxz
arpl
or
mov
mov
ins
sahf
dec
push
int3
mul
ret
xor
xchg
add
pop
or
out
xchg
xchg
cmp
cs
(bad)
jg
add
cmps
inc
call
or
mov
hlt
cmp
shl
inc
add
fs
ins
cwde
sub
mov
add
jge
in
dec
daa
pusha
inc
push
adc
(bad)
stc
pop
ss
sbb
push
ja
cmp
lods
push
push
inc
cwde
xor
push
movntq
jbe
sar
push
mov
repnz
pop
pop
and
or
imul
rcr
sti
add
mov
fs
add
and
adc
push
adc
pop
pusha
inc
ja
or
adc
cmp
dec
add
add
and
push
sbb
pop
jl
movs
adc
push
nop
es
dec
or
or
sti
jno
and
dec
jg
cli
loop
in
add
cmp
lea
dec
push
loop
cld
inc
shr
outs
and
and
ss
and
ins
inc
push
cmp
cdq
inc
scas
in
xor
mov
jb
xchg
adc
xchg
sbb
add
and
and
enter
xchg
dec
and
inc
adc
inc
or
push
ds
sbb
sbb
or
aaa
aaa
mov
pop
xchg
and
mov
push
cmp
or
dec
push
pop
es
sub
xchg
pop
pusha
dec
scas
in
mov
xchg
sbb
enter
and
enter
nop
dec
and
jo
inc
scas
in
add
add
in
mov
sub
xchg
or
test
out
mov
nop
daa
in
je
sub
adc
mov
xor
daa
push
adc
add
(bad)
xchg
cwde
sub
jo
sbb
ja
sbb
ret
sub
mov
popf
ins
inc
adc
jb
sub
(bad)
paddd
sub
push
mov
cs
xorps
cld
jns
add
inc
sub
mov
in
adc
leave
push
sbb
pushf
and
jae
xchg
les
sub
add
int
sbb
fiadd
lods
loopne
sbb
repnz
test
popa
cwde
fwait
and
fnstsw
pushf
xchg
push
jae
and
mov
sahf
or
movs
push
jns
gs
push
pop
sub
cmp
and
sub
and
sti
dec
sub
mov
xor
leave
enter
dec
fs
lea
in
mov
test
nop
sub
nop
nop
xchg
add
in
mov
cwde
sub
xchg
or
pushf
mov
scas
mov
xchg
loopne
test
in
mov
test
xchg
sbb
lods
inc
adc
and
leave
xchg
dec
and
mov
push
mov
cmp
add
adc
stos
or
mov
mov
in
push
ins
push
arpl
jne
stos
add
or
call
cmp
aas
inc
mov
mov
xor
cwde
lods
icebp
adc
mov
leave
jbe
movs
add
test
cs
ins
les
frstor
add
cs
mov
fnstenv
adc
sbb
lods
adc
xchg
xor
mov
int3
mov
test
sbb
in
push
movs
enter
cmp
and
mov
inc
or
int3
pushf
mov
or
enter
aam
aas
loop
inc
adc
mov
ins
adc
outs
inc
js
pop
into
push
(bad)
push
push
jle
jmp
mov
adc
cdq
or
or
dec
div
sub
cmp
adc
ret
adc
push
rcr
mov
cmp
push
aad
xor
fld
sbb
and
push
jae
es
ja
mov
iret
jle
fadd
daa
pop
jno
fist
and
hlt
cli
call
js
mov
mov
jmp
cmp
jbe
dec
leave
jne
cmp
je
jnp
pop
and
pop
cmps
xlat
in
sti
int3
cmp
xchg
jmp
mov
sub
xchg
mov
hlt
sbb
xor
or
popa
xchg
or
loope
adc
mov
loopne
sub
clc
pop
adc
xor
lds
leave
xchg
or
aad
fnsave
pushf
adc
loopne
ins
pusha
iret
std
cmovbe
jmp
pop
cmp
pushf
das
(bad)
xchg
nop
adc
jmp
(bad)
dec
scas
js
(bad)
arpl
jae
mov
lock
(bad)
push
pop
add
or
(bad)
mov
inc
cmp
inc
retf
mov
sahf
ret
call
inc
mov
pop
cmp
jae
dec
fdivr
sbb
outs
enter
mov
sbb
daa
cld
pop
popa
push
add
xor
cli
imul
lea
popf
push
test
sbb
mov
sbb
cmps
ja
sbb
add
retf
xor
sbb
push
xchg
lods
inc
sub
sub
xor
mov
mov
push
dec
repnz
add
sub
xor
in
or
sbb
sbb
fcom
cmp
dec
mov
test
movs
push
fidiv
arpl
jg
int3
add
xchg
sbb
or
in
adc
lahf
out
push
push
jns
add
mov
cmp
mov
cmp
test
or
gs
fs
daa
ins
jp
or
jo
aaa
dec
adc
adc
push
and
sub
test
pop
sahf
aaa
fcom
cmp
mov
push
jle
nop
dec
dec
lods
mov
inc
pusha
(bad)
enter
xchg
and
dec
mov
int3
sub
xchg
or
test
dec
es
rcl
mov
cdq
inc
scas
aam
add
or
dec
mov
loopne
loopne
push
jns
int
shl
cmp
(bad)
cmp
pushf
dec
and
popf
pop
in
mov
add
sbb
inc
in
scas
enter
shl
clc
cmp
cmp
and
cmp
dec
sbb
or
or
ret
push
pop
xchg
dec
adc
jnp
xchg
adc
mov
cmps
pop
inc
in
ret
sbb
mov
enter
call
push
in
lock
jne
leave
pop
repz
and
xor
push
int3
and
cmp
dec
adc
hlt
adc
test
sub
das
enter
es
repnz
and
cld
dec
push
mov
call
lock
leave
and
in
jb
inc
xor
xor
xchg
sbb
add
inc
jb
adc
hlt
clc
push
xchg
dec
and
cld
rol
jmp
nop
or
sub
out
jae
je
jae
jo
call
jb
jae
xor
jae
bound
xor
and
or
xor
xor
pusha
lahf
or
jne
ins
cmp
movs
(bad)
nop
xor
jo
imul
out
imul
gs
jo
in
fisttp
sbb
jns
mov
push
jae
outs
outs
adc
popa
adc
mov
gs
jo
je
pop
(bad)
arpl
add
ins
mov
popa
imul
jne
gs
call
ret
or
pop
sbb
sbb
or
or
pop
dec
mov
adc
push
pop
or
push
cmp
dec
das
mov
imul
and
push
mov
and
jns
inc
sahf
push
jbe
push
push
jbe
outs
jbe
xor
in
jae
out
cmp
outs
arpl
pop
xlat
into
dec
adc
jg
jno
sub
das
mov
adc
cmp
lock
xor
or
ja
ds
mov
arpl
sub
adc
movs
cmp
or
sbb
xlat
ficomp
adc
sbb
aad
push
sub
imul
pusha
add
imul
bnd
bndstx
sbb
adc
imul
ret
pop
sbb
push
adc
adc
inc
mov
out
fnstsw
adc
mov
xchg
int3
sub
ins
fucomi
data16
dec
adc
or
fcomp
add
and
sub
sub
sbb
xchg
ins
cmp
sbb
(bad)
or
or
sbb
dec
fistp
xor
sub
test
adc
adc
ins
ret
mov
lods
jno
inc
push
cmp
and
lods
mov
clc
dec
sbb
push
jns
xchg
ja
pop
add
mov
sbb
comiss
pop
pusha
pop
jmp
movhps
cmp
add
ret
pop
sbb
adc
sub
push
or
cmp
pop
(bad)
jle
ss
pop
sbb
xor
outs
sar
retf
mov
cmp
and
sbb
aas
cdq
push
xor
cmps
adc
arpl
inc
pop
sbb
adc
div
or
push
push
push
or
shl
cmp
adc
sti
or
dec
push
dec
pop
push
or
sub
or
jbe
ds
xor
pop
sbb
sbb
dec
push
inc
push
(bad)
pop
push
test
push
dec
dec
dec
dec
dec
dec
dec
inc
pop
imul
aaa
ret
adc
(bad)
pusha
scas
dec
mov
pop
aaa
sub
das
push
xor
jle
jo
aaa
mov
cmp
or
cmovne
das
movsx
das
or
mov
and
adc
push
movhps
js
movaps
or
dec
test
sbb
mov
push
rol
pop
ret
xchg
dec
and
sub
sub
xlat
xor
xor
or
adc
(bad)
sbb
mov
adc
adc
sbb
sbb
fstp
mov
or
and
and
adc
dec
sbb
(bad)
xor
mov
push
jb
xor
adc
sbb
rcr
push
imul
sbb
fwait
nop
loopne
add
popa
rsqrtps
sbb
nop
in
mov
leave
pop
ss
adc
push
pminub
mov
jnp
movs
jmp
adc
push
sub
sub
inc
pop
add
and
add
add
jb
outs
inc
or
je
popa
or
stc
in
jb
jb
arpl
dec
outs
popa
fs
imul
xor
jl
push
and
fs
inc
jb
gs
gs
xor
leave
fisubr
adc
add
lock
adc
adc
adc
dec
arpl
(bad)
(bad)
(bad)
inc
or
adc
in
mov
and
fadd
lock
lock
retf
(bad)
(bad)
dec
pop
xor
or
mov
and
or
add
sub
neg
mov
sbb
add
es
add
in
adc
sbb
add
cmp
sub
xor
and
sbb
pop
and
and
idiv
or
inc
push
adc
push
lock
mov
out
add
adc
and
sbb
and
pop
cmp
inc
sbb
push
sbb
pop
mov
and
sub
sub
sub
push
inc
daa
jmp
mov
pop
into
xchg
and
loopne
add
or
or
movs
retf
cmp
ins
daa
pop
mov
push
add
or
add
xchg
pop
scas
nop
fnstcw
pop
add
add
mov
ins
cmp
out
mov
adc
inc
popa
addr16
push
mov
dec
fs
cs
js
pop
cmp
cmp
add
pusha
cs
popa
mov
(bad)
rol
or
mov
mov
inc
cs
add
jae
daa
ror
pusha
fild
es
jo
dec
dec
cmp
xchg
add
push
sti
and
outs
dec
push
dec
inc
sbb
push
adc
add
xchg
sbb
add
dec
add
add
cmp
jne
pusha
mov
lea
push
or
jmp
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
popa
xor
ret
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
