mov
add
add
xor
fiadd
(bad)
ficomp
cs
dec
stos
cld
sbb
sub
mov
mov
add
cs
daa
je
mov
dec
scas
add
add
fsub
mov
cli
into
std
push
cli
sub
inc
aas
cmp
xchg
jmp
push
push
(bad)
xor
clc
mov
cs
cmps
ins
repz
adc
dec
mov
xor
leave
(bad)
fwait
hlt
jae
mov
enter
rcr
sbb
cmp
es
inc
cmp
dec
je
test
inc
cdq
outs
cmp
(bad)
pushf
jmp
add
(bad)
cmp
push
push
mov
loope
mov
popf
mov
push
inc
jb
push
popa
ins
ret
inc
mov
add
lock
test
fld
mov
cmp
add
outs
xchg
mov
mov
cli
mov
ret
nop
shr
adc
mov
popf
outs
loope
xchg
out
dec
in
test
jp
aas
xchg
and
(bad)
push
js
aas
cwde
lock
mov
movs
push
ds
ud0
adc
adc
and
jmp
sub
nop
push
dec
xchg
rol
mov
pushf
das
rol
ss
(bad)
idiv
dec
and
push
dec
sti
in
xlat
(bad)
ret
retf
in
(bad)
mov
xchg
push
xchg
test
fsubr
ds
pop
jmp
mov
ins
popf
and
cmp
into
fnstcw
lds
sahf
pop
push
mov
ins
add
push
jl
dec
mov
push
call
ins
cmp
call
pushf
iret
leave
leave
xchg
add
outs
stc
mov
fisub
out
mov
nop
jno
sbb
mov
dec
mov
xor
sbb
add
es
adc
fdiv
inc
xor
ss
xchg
ret
fst
call
jb
sti
jmp
xchg
in
mov
jb
jg
leave
inc
lea
fcom
repz
cli
fisubr
iret
and
push
mov
adc
test
lods
jbe
jmp
mov
int
scas
and
jmp
jb
add
push
inc
pop
pop
call
pop
xlat
and
test
out
ins
or
scas
jae
xor
in
(bad)
icebp
test
xlat
imul
add
jp
jbe
lds
mov
fistp
arpl
daa
jl
mov
lahf
xor
ds
mov
jmp
fwait
add
jle
mov
sub
sub
add
test
ins
mov
add
out
aas
mov
push
xchg
pop
cmc
xchg
mov
add
imul
(bad)
pop
cmp
mov
rcl
and
lea
push
jl
fld
lods
mov
jnp
fst
inc
adc
cld
pusha
and
sti
xor
inc
sub
call
or
pushaw
call
xchg
inc
sub
clc
fcompp
sbb
xor
inc
jle
mov
xor
test
sahf
jo
(bad)
out
cmp
xchg
loope
shr
or
inc
mov
and
pop
sub
dec
ss
dec
pop
cs
xchg
call
inc
jae
aas
jno
aad
(bad)
sbb
add
and
ror
inc
mov
lahf
adc
iret
aad
loopne
shr
jle
les
lds
add
test
shr
jle
addr16
mov
jp
div
mov
or
mov
dec
mov
or
jle
ret
pop
les
xlat
push
dec
clc
loop
mov
xor
mov
dec
xchg
jb
hlt
mov
outs
sbb
or
xchg
fnstcw
jl
into
loope
sub
cmp
add
(bad)
pop
ja
fwait
inc
movs
pop
inc
aas
div
int3
imul
mov
in
pop
pop
ins
pop
mov
sbb
movs
call
mov
cmps
pop
test
sar
adc
and
cwde
mov
sub
repz
inc
in
add
frstor
add
dec
std
call
cwde
fwait
dec
cmp
pop
pop
push
add
test
bound
cmp
daa
pushf
adc
sbb
mov
mov
mov
inc
aad
pop
and
hlt
int
(bad)
jmp
add
retf
jl
adc
push
adc
inc
dec
jmp
mov
jp
stos
fwait
or
pop
ret
mov
shl
mov
rcr
inc
jmp
stos
in
inc
push
xchg
mov
jge
mov
cdq
and
jg
mov
sahf
repz
sub
xchg
lds
pop
mov
int
imul
popf
fwait
mov
(bad)
xlat
xchg
jns
daa
in
jnp
dec
daa
std
das
jno
scas
cmp
cmc
inc
and
mov
push
pop
mov
sti
mov
jae
push
jae
test
cs
mov
pop
(bad)
loope
pop
(bad)
pop
sahf
mov
jge
(bad)
mov
push
push
daa
or
dec
rcr
mov
dec
jmp
jge
and
scas
jmp
in
sub
sbb
retf
out
in
fs
jge
cmp
js
cmp
or
inc
and
repnz
dec
mov
xchg
mov
add
shr
inc
add
ja
push
xchg
jo
or
(bad)
xor
cmp
xor
dec
cli
wbinvd
ss
pop
stos
jo
imul
pop
das
cmps
cli
sti
pop
xchg
cwde
lods
mov
push
popa
push
sub
stos
dec
clc
jb
fbstp
idiv
xor
jg
push
jle
in
jno
nop
mov
fimul
faddp
inc
sbb
leave
retf
retf
xchg
mov
push
int
pop
mov
aaa
ret
imul
imul
retf
std
mov
mov
not
xchg
jmp
sbb
shl
std
mov
repz
mov
add
rol
inc
adc
mov
lock
lds
imul
cli
adc
jge
arpl
dec
push
xchg
cwde
mov
aad
ror
std
jle
mov
inc
hlt
stos
mov
aaa
cwde
or
dec
inc
sar
jno
pop
loop
rcl
lahf
lock
and
call
mov
inc
or
or
or
mov
sbb
aas
jb
dec
pop
sbb
les
out
jnp
and
sub
cdq
inc
push
mov
out
cmp
(bad)
idiv
jno
dec
fnsave
sub
int
and
jg
inc
test
or
ds
sti
jecxz
adc
jno
pop
jnp
add
sti
xchg
cmps
(bad)
sub
push
dec
lods
mov
adc
shl
sbb
xchg
mov
or
imul
sar
(bad)
(bad)
jle
shr
cmp
imul
sub
cmp
dec
jb
rol
push
cmp
mov
inc
imul
inc
icebp
jo
jecxz
lahf
jb
(bad)
(bad)
xchg
test
adc
xor
xor
cmp
out
pop
ds
call
jle
(bad)
fwait
xrelease
cwde
adc
adc
jge
rcl
adc
mov
in
jo
xchg
test
and
in
jl
fist
ret
adc
sahf
cli
cmp
push
adc
push
fstp
and
ss
mov
retf
nop
push
sbb
jno
adc
fdivr
xchg
xchg
inc
ins
sbb
adc
lds
cwde
test
cld
fs
sti
call
in
or
cmp
je
int
dec
sub
and
xabort
in
push
xor
(bad)
sbb
movs
push
xor
scas
aaa
das
aam
out
xchg
adc
adc
mul
or
cmp
sbb
in
hlt
popa
scas
sbb
pop
stc
jnp
sbb
mov
mov
fs
mov
repz
cmp
int3
addr16
mov
push
stc
jg
push
push
jbe
mov
jmp
xchg
aaa
sub
(bad)
mov
addr16
stos
fdiv
push
aam
int
jecxz
aaa
ins
lea
mov
popa
xor
repnz
dec
xchg
xor
cld
xchg
jns
sub
sub
pop
pop
mov
(bad)
add
pusha
sahf
adc
pop
pop
add
pushf
stc
xchg
mov
mov
sbb
dec
push
inc
mov
shl
xchg
mov
lsl
push
out
mov
addr16
stc
pusha
add
and
mov
mov
adc
mov
(bad)
imul
mov
movs
int3
push
movs
mov
sub
call
mov
sub
sub
inc
mov
out
inc
sbb
(bad)
out
mov
or
retf
adc
clc
pop
inc
(bad)
rcl
pop
in
mov
(bad)
mov
lahf
sbb
std
jmp
fsubrp
aas
mov
mov
shr
(bad)
sbb
and
mov
stc
in
test
imul
or
in
or
pop
mov
mov
inc
adc
pushf
add
popa
push
arpl
dec
je
sti
imul
xor
pop
cmp
pop
out
cmp
ror
push
cdq
push
ret
and
(bad)
stc
out
pop
cmps
scas
fnstcw
addr16
ror
xchg
inc
xor
lods
mov
ja
test
pop
sub
cmp
push
in
repz
push
into
std
popa
mov
les
cld
xor
and
das
or
pop
mov
movs
push
sub
adc
fild
inc
outs
cld
aam
xchg
ret
pop
sub
pop
xor
and
xchg
(bad)
in
pop
fwait
inc
xor
jle
imul
in
sti
sub
popa
add
push
js
(bad)
out
cmp
mov
inc
mov
mov
lods
or
mov
mov
jmp
mov
jns
das
and
mov
mov
scas
es
mov
adc
push
ret
(bad)
out
into
div
shr
pusha
inc
add
xor
lds
mov
jnp
sub
ins
cmp
inc
mov
jg
pop
push
out
leave
inc
push
add
cwde
sbb
or
rcr
push
pop
loope
(bad)
xor
nop
shr
fist
xor
cmp
sar
imul
mov
cmps
popa
push
sbb
(bad)
ret
cmp
fwait
mov
fld
dec
add
addr16
mov
push
push
fist
push
xor
mov
mov
sar
in
int
pop
push
(bad)
out
dec
call
adc
dec
cwde
adc
sub
dec
(bad)
fild
lods
adc
out
lea
xchg
ret
pop
mov
push
add
jmp
ins
mov
inc
rcl
ficom
xchg
xlat
cmps
add
out
ror
mov
xchg
cmp
xchg
pop
adc
dec
push
xchg
dec
stos
jmp
mov
fadd
push
inc
mov
and
jle
cmp
aam
gs
loope
loop
into
sub
dec
dec
dec
ss
xchg
dec
xor
or
and
add
mov
mov
cli
mov
scas
ins
sbb
mov
jns
xchg
bound
add
or
retf
push
das
sub
mov
adc
fnsave
dec
(bad)
sub
repz
cld
int3
jg
mov
pushf
push
xchg
jp
nop
loope
mov
daa
xchg
rcl
out
mov
adc
je
test
lods
cwde
fldcw
cs
lahf
sbb
add
int3
add
add
jecxz
stc
int
pop
pop
add
idiv
sahf
lods
jp
movs
js
mov
dec
fwait
cmc
fst
xor
pop
jae
sbb
or
pop
push
mov
nop
xor
cli
cmp
ret
adc
mov
cdq
rcl
cmp
in
push
mov
sbb
test
xchg
movs
je
imul
jge
pusha
or
ror
adc
mov
sbb
fld
jl
cmp
cmp
cmps
add
mov
aas
fwait
retf
pop
pop
pusha
jge
jmp
xchg
shl
gs
stos
aam
sbb
and
sbb
xor
pop
inc
iret
jnp
jmp
stos
test
(bad)
mov
inc
mov
mov
sub
fldenv
jnp
pop
cmp
aaa
out
int
fld
and
sbb
imul
inc
xchg
loope
sub
std
ds
out
mov
nop
mov
test
xchg
cmp
loope
mov
cmp
adc
sub
jmp
sub
jb
pop
xor
rol
mov
adc
add
lds
ss
push
jmp
add
dec
loop
mov
les
bound
loopne
sub
dec
adc
pusha
mov
adc
mov
xchg
rol
lea
aas
jl
jns
inc
push
ins
ja
inc
out
sbb
xchg
lods
sub
aas
adc
xchg
cld
(bad)
jmp
test
dec
add
rol
rcr
mov
adc
sub
imul
retf
push
(bad)
adc
pop
mov
fwait
adc
stc
jno
push
sahf
mov
loope
push
imul
in
aad
pop
inc
pop
mov
mov
imul
imul
xor
cmps
add
lock
scas
xor
fsubr
lea
pop
jnp
aas
fisttp
sub
dec
sti
(bad)
cmp
stos
dec
neg
xor
sbb
xchg
daa
fucomi
data16
outs
call
in
pop
mov
lea
pop
jp
add
mov
push
in
cld
mov
lods
and
inc
ss
imul
das
mov
dec
adc
sbb
xchg
add
or
mov
ffreep
mov
pop
imul
adc
adc
push
push
jge
xor
icebp
call
xchg
aad
retf
pushf
pushf
mov
fs
xchg
dec
cmps
sbb
adc
bound
xor
or
mov
test
mov
or
and
(bad)
xchg
in
(bad)
mov
imul
pop
cmc
mov
out
cmps
adc
call
repz
pusha
(bad)
out
sub
das
dec
cld
pop
rcr
pop
cmp
addr16
aad
iret
mov
cmps
or
mov
scas
dec
cld
and
jno
mov
call
inc
mov
or
js
or
call
cmp
call
cmp
cmc
cwde
(bad)
(bad)
adc
mov
cmp
lock
push
outs
push
jnp
and
retf
mov
gs
or
pop
xchg
scas
(bad)
test
mov
cmpps
mov
adc
jnp
mov
sub
mov
cmps
inc
daa
int3
aaa
int3
push
sahf
mov
cmp
cmp
mov
outs
test
rcr
sub
int
adc
pop
or
fnstcw
inc
pop
xor
scas
ret
movs
push
adc
(bad)
or
jecxz
mov
jbe
jnp
and
(bad)
fdiv
cld
fistp
ins
dec
fs
mov
pop
enter
sti
ret
pop
sbb
aaa
ds
fmul
mov
jmp
adc
iret
adc
xor
in
xor
shl
sti
mov
enter
xchg
jb
mov
pop
lods
xchg
ins
out
pop
and
mov
in
add
inc
inc
mov
inc
or
shl
sub
and
dec
pop
(bad)
xchg
std
fsubp
mov
pusha
mov
mov
call
mov
stos
mov
test
stos
(bad)
jb
xor
stc
in
dec
fadd
jno
inc
adc
adc
pop
sbb
int3
jb
mov
mov
sub
popf
ret
mov
das
and
xlat
int3
(bad)
mov
or
scas
icebp
adc
pop
test
inc
not
jecxz
mov
imul
out
outs
push
mov
inc
xchg
and
sti
ret
cli
xchg
int
shr
(bad)
add
movs
cwde
dec
push
fidiv
mov
sbb
push
cwde
cmp
mov
dec
fidiv
push
xor
sub
and
push
mov
xor
mov
lock
imul
or
lea
jecxz
(bad)
std
dec
dec
mov
ins
outs
jmp
das
push
hlt
cs
jo
ins
or
sub
adc
or
popf
mov
add
cld
fisub
test
sbb
std
xor
and
add
and
dec
pop
addr16
inc
add
jmp
mov
pushf
push
dec
add
iret
pop
aad
sti
retf
sbb
mov
cmp
stos
dec
mov
mov
jmp
lods
dec
mov
outs
(bad)
out
xchg
pushf
scas
xchg
ja
or
ins
jle
and
xchg
out
or
adc
push
jl
into
sub
xchg
jne
ss
add
test
add
push
cdq
push
mov
test
cmp
dec
add
and
aam
scas
out
rol
out
sub
pop
into
adc
std
add
jne
lock
push
jb
fld
push
push
rcl
sbb
shl
mov
cmps
iret
loopne
loope
ins
lock
jne
(bad)
jne
push
and
loop
mov
inc
les
and
fisubr
mov
sar
faddp
cmp
scas
fcmovnu
cmps
fisub
dec
in
inc
mov
scas
jmp
mov
jle
pushf
push
inc
fs
mov
movs
mov
idiv
test
xlat
push
cmp
stc
or
fcom
xchg
mov
rcr
pop
outs
ja
push
xchg
ds
mov
std
shr
test
pop
push
(bad)
pop
mov
dec
arpl
jae
out
lods
int
jne
ins
mov
mov
ret
sub
and
mov
addr16
cmps
out
movs
loope
xor
mov
cmp
mov
add
dec
xor
das
loopne
mov
cwde
jp
pop
cmp
pushf
xor
stos
inc
sbb
imul
push
ja
xor
xchg
in
sub
outs
cmp
ss
repnz
movs
cmp
nop
add
repz
jmp
scas
lods
sub
gs
cmp
or
push
aaa
push
pop
ins
rcr
adc
add
add
push
cmp
(bad)
cwde
into
test
aad
or
out
retf
mov
sub
sub
call
inc
dec
dec
mov
outs
dec
aas
ja
inc
out
inc
adc
int
add
ret
dec
in
cmp
xchg
popf
or
lods
jl
jp
(bad)
pusha
leave
iret
(bad)
je
sub
ret
jno
in
(bad)
hlt
or
pop
pop
jnp
lock
mov
cmp
cdq
push
gs
pushf
data16
xchg
rcr
pop
cmc
in
push
call
xor
cwde
call
retf
popa
sbb
test
cdq
into
iret
adc
out
jge
sub
jmp
pop
jb
aaa
xchg
inc
stc
pop
loop
jecxz
push
aaa
pop
xor
xor
and
push
ss
bound
xchg
imul
inc
retf
dec
mov
pushw
push
cmp
pop
pusha
in
pop
xor
cmp
jno
pop
pop
fsubr
mov
int
dec
mov
je
les
xchg
push
jecxz
mov
xlat
sub
push
mov
addr16
dec
add
nop
push
fucomi
inc
es
gs
inc
lahf
cli
adc
mov
sub
and
in
enter
stc
jbe
pop
mov
or
jecxz
dec
push
gs
outs
xchg
dec
mov
outs
call
std
mov
cmp
addr16
jnp
iret
fwait
and
inc
mov
sub
jae
xchg
xor
shl
jp
pop
sar
pop
xchg
rcr
lahf
imul
add
lea
push
div
cmp
stos
in
xor
pusha
and
test
fidiv
sbb
jge
outs
inc
arpl
sahf
mov
in
xchg
jg
das
sub
sub
dec
jmp
xor
fadd
jno
sub
ror
retf
test
lock
into
pop
aam
out
repnz
aaa
test
cmp
sbb
sbb
mov
fnstenv
int
push
sbb
rol
ins
add
jns
jmp
xor
adc
shl
int3
into
xor
or
iret
fldenv
pop
std
jns
inc
and
stos
dec
int
daa
mov
jmp
(bad)
fisttp
inc
xchg
or
call
xchg
adc
and
dec
add
loope
mov
jg
ds
xchg
push
js
jo
dec
sub
outs
mov
xchg
mov
repnz
pop
xor
out
xor
push
mov
mov
aad
push
cld
aad
xchg
ds
inc
ja
iret
aad
sti
int
jo
out
xor
es
jmp
(bad)
fnsave
addr16
and
sbb
ret
(bad)
mov
sub
mov
push
dec
xchg
xor
dec
loopne
mov
test
mov
or
pop
mov
inc
pop
xor
push
adc
and
fwait
sub
xchg
(bad)
pop
jmp
mov
adc
jl
push
(bad)
mov
scas
out
in
xchg
pop
not
xor
push
push
dec
pop
add
adc
jecxz
rcl
or
mov
dec
pop
jmp
(bad)
dec
inc
mov
xchg
push
pop
pop
gs
popa
cmps
test
pop
out
jae
mov
mov
sbb
jnp
dec
icebp
sbb
lahf
shl
mov
mov
jp
clc
adc
popa
shl
inc
jmp
stc
scas
xchg
addr16
jne
xor
push
retf
sub
add
mov
xor
dec
out
jg
movs
cmps
fcmovnbe
(bad)
push
call
pop
je
push
lahf
stos
inc
mov
test
mov
cmp
shl
add
test
lock
popw
jmp
and
inc
adc
or
xor
jb
cmp
fst
xor
pop
mov
fwait
cdq
pop
fwait
loope
dec
pushf
xchg
leave
push
loop
xor
fimul
cli
mov
jmp
(bad)
mov
or
mov
jl
popf
js
out
stos
jge
imul
fsubr
fsubr
addr16
mov
mov
(bad)
jmp
cmp
ss
mov
int3
jb
inc
jg
pop
push
mov
popf
rcl
mov
jg
std
jnp
ret
sbb
or
dec
jno
dec
cli
sbb
lahf
loopne
xor
push
adc
das
enter
and
test
xlat
or
push
out
enter
add
push
xor
test
xor
add
sbb
pusha
adc
xchg
push
xchg
dec
mov
rol
or
push
inc
jg
retf
shl
mov
xchg
es
jmp
jmp
jb
jns
jg
sar
stc
sub
push
sub
mov
adc
ret
xchg
pop
lods
xor
and
add
repz
xor
bound
lods
inc
popf
pop
xchg
mov
jmp
loopne
xchg
loopne
mov
ficomp
cld
rcr
and
enter
popa
outs
and
sub
mov
aas
mov
data16
das
dec
jle
and
popa
and
push
pop
fadd
jo
cmp
jmp
dec
xor
or
inc
jns
sbb
push
push
push
xchg
sub
mov
add
push
outs
jb
cdq
sahf
lods
cld
stos
sub
adc
xchg
push
jecxz
stos
jae
dec
pop
movs
dec
leave
lods
pop
cmp
shr
sub
push
retf
mov
dec
dec
scas
add
or
or
cmp
int
ds
jb
jno
dec
into
out
pop
sahf
cli
cmps
das
jae
inc
in
test
fld
pop
aaa
mov
aad
mov
xchg
shr
adc
lahf
pop
adc
jo
aaa
sub
fisttp
lock
sbb
ja
loop
test
xor
push
jne
pop
pop
data16
sti
scas
sub
aaa
mov
mov
sbb
enterw
sub
cli
and
xchg
jp
dec
hlt
repnz
jns
inc
test
std
cmp
in
mov
pop
mov
(bad)
fisubr
jb
(bad)
sub
ja
jo
inc
sub
stc
push
or
lock
mov
loop
fucomip
and
das
adc
repnz
jge
(bad)
sahf
clc
aaa
rcr
push
ins
(bad)
into
adc
and
inc
icebp
jl
jne
sub
adc
adc
movs
sbb
cwde
add
pop
retf
push
enter
and
and
lds
mov
out
mov
pop
dec
popa
sub
cmc
pop
inc
adc
jae
fwait
and
dec
int3
push
div
jge
fwait
scas
mov
pop
cmps
push
cmovb
or
out
add
sub
push
test
sub
xchg
cmp
push
or
and
inc
popa
call
add
fwait
inc
outs
ret
iret
xchg
retf
and
ds
stos
mov
mov
xchg
add
les
cmc
jecxz
(bad)
push
int
sar
cmp
add
mov
adc
aas
jns
cwde
dec
adc
cmp
pop
inc
cmp
jo
adc
mov
pop
sbb
and
repnz
xor
xchg
mov
gs
jns
in
push
sbb
and
mov
and
push
cli
adc
fld
retf
xor
push
je
(bad)
xlat
push
sub
ror
mov
stos
dec
xchg
and
rcr
fld
dec
dec
push
lods
leave
push
imul
scas
fbld
retf
add
repz
pop
mov
xchg
mov
lds
adc
sub
mov
in
ds
xchg
popa
adc
jo
add
je
pop
sub
add
mov
cwde
aam
mov
pop
lahf
leave
dec
jge
outs
addr16
push
add
mov
cmp
or
push
cmp
int3
ds
and
out
mov
cmc
push
fld
das
jae
in
loopne
jae
pop
(bad)
sbb
mov
aaa
mov
pop
sbb
cmp
scas
push
fsubr
pop
sub
cmp
and
sub
jmp
jmp
xchg
les
loop
and
movs
cmp
sbb
sub
sahf
push
in
ins
or
sub
in
scas
mov
(bad)
rcl
imul
mov
mov
daa
fwait
shl
inc
movs
repz
cmp
aad
xor
xchg
iret
mov
rcl
cld
add
in
xchg
test
daa
ror
inc
popa
cmp
mov
add
or
stc
dec
stos
je
iret
cmc
inc
cs
jmp
out
and
xor
and
and
jae
imul
and
and
imul
cmp
inc
cld
lods
and
xchg
mov
scas
sbb
hlt
aad
mov
xchg
mov
ins
push
iret
and
mov
repz
mov
jge
das
jp
xlat
rcl
mov
pop
sar
out
bound
sbb
push
into
scas
xlat
cld
pop
popa
sbb
ret
mov
dec
sahf
inc
ins
clc
sub
jg
xor
mov
call
and
jge
cmps
xchg
and
int3
mov
daa
xchg
push
bound
fld
in
xlat
aas
mul
mov
(bad)
js
xchg
pop
and
fdiv
mov
sub
arpl
clc
ror
imul
inc
and
and
sbb
sbb
xor
push
cmps
sub
dec
mov
f2xm1
out
ror
jno
(bad)
push
cmp
idiv
(bad)
push
add
into
jae
fild
mov
fbstp
inc
and
sahf
cmps
pop
lahf
mov
sbb
or
dec
pusha
mov
and
and
jbe
push
xor
jno
adc
mov
ror
dec
add
xor
rcl
dec
enter
aam
jp
jmp
add
bound
adc
push
cld
ss
adc
pushf
mov
or
jno
enter
pop
push
push
icebp
pop
xor
mov
ret
outs
adc
pop
sbb
movs
cmp
sahf
int3
clc
pop
lahf
add
addr16
icebp
mov
adc
popf
xor
mov
cmp
mov
int
mov
mov
test
mov
push
and
inc
pop
jno
mov
dec
shl
jae
scas
mov
cmps
sti
sub
hlt
leave
add
daa
sti
popf
arpl
loopne
out
mov
jmp
fnsave
dec
mov
aaa
popa
mov
mov
dec
retf
outs
fwait
(bad)
dec
xchg
leave
cmp
mov
adc
mov
mov
pop
xchg
ss
sbb
repz
and
mov
xor
pushf
(bad)
lds
sub
nop
mov
mov
lahf
mov
sbb
sbb
mov
cmp
cmp
inc
cmp
adc
mov
je
mov
mov
dec
adc
icebp
in
stos
push
xor
inc
jle
xchg
js
ins
cmp
popf
sbb
push
xchg
mov
inc
add
cmp
mov
(bad)
outs
aad
(bad)
push
fldcw
leave
popf
repnz
es
loop
cmc
adc
sahf
div
mov
push
cmp
popa
add
fimul
or
push
pop
cmp
or
or
cld
jge
repz
sbb
xchg
test
ror
int3
outs
sar
test
jl
div
(bad)
push
outs
test
cmps
xlat
lods
xor
dec
pop
mov
int3
or
sbb
pop
mov
inc
scas
icebp
(bad)
mul
cli
int
(bad)
jbe
fnstenv
sub
cmp
jmp
add
sub
adc
add
pop
sbb
movs
scas
xchg
sar
in
xchg
retf
pop
pop
call
lods
pop
ins
cdq
mov
js
and
cwde
shr
mov
mov
inc
mov
cmp
mov
js
adc
jo
dec
(bad)
or
cmps
mov
xchg
retf
cs
dec
jp
ins
jmp
mov
(bad)
cs
(bad)
popf
sti
fild
mov
xor
(bad)
sub
aaa
dec
mov
mov
cmp
xchg
jle
cmp
dec
dec
inc
popa
int3
pop
data16
xor
mov
(bad)
loopne
mov
jno
pop
icebp
add
cli
xchg
(bad)
xlat
xor
cli
sub
arpl
popf
and
daa
imul
xor
xchg
mov
xor
and
pop
mov
rcl
jmp
mov
dec
ds
adc
xchg
outs
mov
mov
loop
fldenv
adc
outs
dec
cmps
mov
dec
mov
inc
jmp
cld
int
add
and
out
add
inc
enter
add
icebp
pop
pop
xchg
mov
ds
mov
sub
fsub
(bad)
in
sar
push
cmps
jmp
aas
les
xchg
ret
in
ja
sti
int3
mov
cwde
jb
outs
out
pusha
xchg
dec
cmp
ficomp
(bad)
stc
push
leave
push
mov
dec
out
ror
pop
add
inc
into
dec
xchg
push
(bad)
hlt
xchg
push
push
add
js
shr
shl
ret
sbb
jmp
iret
jb
and
test
xor
scas
mov
inc
push
adc
push
add
jo
cmp
jmp
div
and
mov
dec
inc
loop
mov
inc
cmc
or
jae
mov
pop
imul
sahf
ins
addr16
js
sub
mov
adc
jno
cwde
or
enter
je
ret
add
jb
mov
push
dec
and
loope
shl
ja
repz
fdivr
imul
add
jno
retf
ins
call
leave
test
(bad)
mov
sub
leave
dec
mov
or
cmc
das
push
dec
adc
mov
cmp
mov
xchg
cli
rol
sbb
in
(bad)
xor
adc
ds
daa
add
add
test
test
rol
(bad)
lds
dec
into
movs
mov
xchg
push
sbb
push
lea
daa
or
inc
jns
push
ret
jl
or
push
mov
out
sub
cwde
scas
xchg
mov
fcomp
pop
into
and
sub
frndint
test
arpl
jmp
xchg
dec
or
cli
rcl
cmp
lea
xchg
pop
mov
jne
adc
out
mov
mov
cs
lahf
pop
dec
aad
ins
pop
fistp
call
mov
sbb
adc
adc
lahf
cmc
xor
and
jecxz
in
shl
xlat
add
cmps
jl
adc
fcmovne
sahf
jno
test
xchg
mov
sahf
call
stos
dec
mov
pop
or
push
add
sbb
in
into
sar
jmp
fcomip
les
pop
and
out
adc
mov
adc
sbb
cmp
dec
jae
sbb
mov
clc
std
cmc
jg
lock
add
int
sbb
lods
adc
(bad)
into
cmc
sbb
pop
inc
rdmsr
adc
in
out
mov
jmp
ffree
xor
mov
popa
sbb
mov
pop
das
fwait
or
push
(bad)
jmp
jmp
stc
inc
sar
rol
icebp
push
popa
push
lds
pusha
inc
enter
sub
outs
sub
push
adc
pushf
push
dec
jb
sub
fucomp
or
push
adc
xor
shl
fsub
or
movs
loope
xchg
mov
sbb
or
xor
icebp
add
xchg
mov
adc
loopne
int
retf
adc
or
bound
xor
stc
or
fwait
and
push
jno
pop
fs
ins
lock
jne
inc
add
mov
dec
int
add
outs
scas
sbb
sbb
push
imul
jnp
shr
stos
dec
mov
push
popa
in
xor
mov
std
sub
mov
pushf
xor
call
enter
das
dec
or
xlat
pop
sub
fisttp
ficomp
xchg
pop
imul
imul
retf
adc
jge
aaa
addr16
sub
pop
(bad)
out
xchg
xchg
lods
adc
mov
data16
stos
jno
mov
mov
or
inc
cwde
and
mov
div
push
adc
out
in
(bad)
jl
pop
hlt
shr
xchg
ds
clc
pop
dec
test
jno
sbb
push
add
push
xor
(bad)
and
adc
mov
fild
inc
(bad)
xchg
xor
pusha
arpl
ins
mov
pop
into
sbb
lea
and
add
aas
and
(bad)
adc
test
leave
push
mov
movs
ficomp
mov
sub
stos
jnp
enter
call
push
mov
lds
(bad)
lods
std
ja
xchg
xchg
and
nop
pop
push
xlat
pop
imul
dec
xchg
cmps
xor
push
sahf
dec
lods
jno
and
jns
jo
(bad)
sub
mov
test
jns
and
and
jnp
inc
ret
mov
or
mov
pop
add
mov
ja
fwait
cmp
jp
push
cmp
(bad)
dec
(bad)
jae
(bad)
and
loopne
mov
(bad)
scas
push
fldcw
inc
cvtps2pi
dec
imul
xor
or
pusha
or
shl
adc
pusha
fistp
jg
dec
sub
mov
jae
push
scas
cdq
lods
faddp
dec
xor
rcr
mov
fcmovb
mov
jnp
adc
push
jmp
ret
(bad)
sbb
sub
(bad)
shl
jg
leave
pusha
and
push
mov
in
test
mov
inc
or
out
push
cmc
js
loope
jo
div
push
and
xchg
and
test
(bad)
mov
mov
mov
and
mov
sub
add
xchg
jnp
mov
ins
dec
das
adc
adc
push
outs
leave
mov
sub
aad
xchg
cmc
gs
push
or
jnp
inc
shl
call
xchg
jmp
push
pop
xchg
mov
fucomp
ins
and
addr16
dec
mov
lds
cmps
mul
loope
push
jnp
call
call
out
xor
xchg
xor
inc
enter
lods
into
sub
jo
sub
and
fisubr
leave
daa
jmp
inc
xchg
inc
cdq
pushf
fwait
cmp
xchg
test
loop
inc
hlt
inc
push
cmp
(bad)
outs
frstor
push
jbe
test
adc
lahf
mov
inc
push
pushf
push
cs
xor
xor
test
cli
cmp
sbb
mov
sub
ret
imul
mov
mov
dec
and
or
pushf
and
and
cld
test
data16
xchg
out
loopne
(bad)
std
sar
or
or
in
bnd
add
or
scas
retf
pop
enter
repz
push
dec
or
push
pop
loope
mov
push
sub
sbb
jae
add
cdq
cmp
ins
jb
not
inc
cmc
cs
mov
cwde
xor
or
sbb
pusha
ror
pop
adc
(bad)
scas
pop
sub
lahf
repnz
inc
(bad)
neg
cmp
mov
sbb
stc
cmp
xlat
fs
scas
mov
je
cli
mov
dec
and
cmp
xchg
and
add
xchg
mov
imul
cmc
mov
hlt
lea
ds
not
sbb
mov
and
loop
rcr
test
repz
sbb
outs
and
fcmovbe
sbb
xor
loopne
push
add
or
out
sub
xor
es
jno
and
xchg
ja
movs
(bad)
aam
push
sbb
jg
inc
jb
lahf
push
or
outs
inc
lds
pop
inc
push
mov
dec
push
push
jne
fs
iret
push
jmp
xor
int
xchg
lea
mov
aaa
loop
shl
stos
stos
div
inc
mov
push
call
xchg
fist
cli
ds
stos
test
jns
nop
or
jo
fwait
retf
cmp
jl
jmp
scas
je
sbb
idiv
or
enter
mov
jg
fcom
push
cmp
dec
test
into
push
jae
xchg
hlt
unpckhps
mov
hlt
lahf
clc
xor
sbb
jmp
or
inc
inc
inc
adc
aad
xor
push
mov
mov
sbb
enter
jmp
mov
jecxz
xchg
mov
addr16
test
adc
scas
and
push
es
push
inc
push
out
adc
cld
sbb
stc
ss
ins
fwait
add
cmp
xchg
das
add
loope
cmp
cmp
push
in
cdq
cmp
(bad)
xchg
mov
cld
cmp
mov
scas
push
icebp
mul
ffreep
pop
sub
sbb
jae
add
sub
ins
inc
push
iret
iret
or
in
and
push
ds
adc
add
fcom
and
je
or
push
cli
cwde
mov
fbstp
mov
fist
xor
pop
add
mov
out
repnz
push
push
mov
jnp
fst
stc
or
cli
and
movs
mov
inc
xchg
dec
dec
mov
std
mov
(bad)
enter
ins
shl
icebp
sbb
cwde
mov
(bad)
and
adc
jo
xchg
icebp
jne
mov
xor
fild
xor
mov
in
cmp
cmp
mov
cwde
adc
adc
mov
add
cdq
leave
pop
mov
push
or
jl
inc
mov
sbb
bnd
cmps
retf
fsubr
cmp
push
sar
fs
lods
sub
stc
or
pop
sbb
test
retf
adc
adc
aam
vpminsw
repz
sbb
int3
mov
jge
fisttp
popf
(bad)
(bad)
cmp
out
xchg
pop
pushf
call
outs
mov
popf
xchg
scas
inc
xchg
xor
dec
sbb
pushf
adc
scas
popf
dec
or
ds
nop
cmp
sar
sbb
adc
xchg
mov
and
fidiv
bound
cmps
movs
shl
jle
cmps
cmp
inc
loopne
fidiv
test
jl
(bad)
call
sub
fdivr
(bad)
in
int3
xor
sub
sbb
movs
into
out
dec
mov
mov
hlt
aad
mov
loop
sub
repz
bound
pop
mov
jbe
jmp
(bad)
imul
jecxz
or
ret
cmp
push
rol
mov
je
enter
es
inc
dec
lods
sbb
xchg
cmps
ja
fwait
fwait
push
ins
inc
pop
fs
dec
fbld
or
fucom
inc
pop
ss
addr16
add
pusha
fimul
dec
fld
pop
jmp
(bad)
add
sub
push
shl
fiadd
inc
mov
jmp
in
push
std
xor
js
push
inc
add
fnstsw
push
or
mov
imul
inc
and
and
sbb
scas
aaa
and
or
lods
aad
retf
xor
lahf
and
push
sub
popf
test
ret
and
jb
pushf
mov
sbb
(bad)
adc
or
arpl
std
fistp
stos
mov
shl
movs
cld
jns
imul
push
retf
adc
push
movs
rol
aad
lods
enter
loopne
mov
mov
repz
lea
lahf
dec
add
jg
sbb
fwait
repz
idiv
mov
jb
test
movs
mov
inc
and
jbe
mov
or
or
inc
pop
inc
fild
mov
cld
cmp
enter
inc
in
mov
mov
ss
inc
push
cli
(bad)
mov
jge
adc
data16
mov
out
scas
sub
sub
hlt
outs
inc
dec
lahf
loopne
jle
xchg
hlt
or
cmps
add
inc
add
or
(bad)
mov
mov
aaa
jmp
or
push
shl
xor
mov
and
scas
jbe
ins
adc
lds
cdq
rcl
mov
pop
xchg
or
(bad)
clc
aad
test
out
bt
inc
pusha
fist
outs
out
shl
aam
sbb
xchg
cdq
leave
mov
lods
(bad)
scas
inc
addr16
jo
mov
stos
data16
ins
mov
xchg
sbb
cdq
inc
sbb
leave
mov
adc
cdq
fldenv
mov
(bad)
adc
jmp
sbb
sti
and
xor
into
xchg
mov
ror
dec
out
arpl
cmp
inc
cmps
mov
jl
jmp
test
fdiv
and
out
(bad)
push
xlat
jecxz
and
inc
cmp
dec
xor
xchg
loopne
fmulp
jp
jecxz
cwde
mov
outs
(bad)
mov
out
inc
or
mov
jmp
lock
cmp
pop
js
push
ss
jae
data16
call
aaa
aas
dec
pop
loop
adc
mov
sub
cmps
cmp
jo
rcr
mov
xlat
retf
iret
(bad)
cmps
(bad)
mov
cs
and
push
fcomi
in
lods
sub
into
enter
inc
cli
cmp
jbe
lds
aaa
sbb
inc
aad
inc
imul
mov
sbb
inc
adc
lahf
sub
jns
les
lods
mov
sub
and
fistp
xor
out
adc
adc
mov
fadd
dec
icebp
pop
pop
or
mov
mov
stos
pop
shl
add
call
fs
jne
and
add
sbb
push
imul
xor
into
repnz
or
aaa
lods
gs
pushf
jmp
in
inc
mov
cwde
sbb
repnz
dec
cwde
adc
xchg
fisttp
dec
jnp
dec
inc
out
xchg
jg
adc
sub
jl
sbb
cmp
test
scas
sbb
jne
in
push
dec
jmp
push
push
xchg
(bad)
in
outs
(bad)
icebp
xor
mov
push
push
mul
inc
push
call
xor
pop
mov
popf
cmp
call
xor
push
push
test
sbb
jne
pusha
enter
mov
std
scas
push
sbb
jb
int
pop
retf
sbb
pop
push
imul
pop
add
pop
icebp
scas
xor
enter
dec
push
xchg
inc
push
fucomi
cmc
sti
inc
jae
scas
hlt
aas
push
or
arpl
or
xchg
sar
out
xor
adc
sbb
inc
out
rcl
and
in
vfmaddsubps
icebp
lds
mov
pop
mov
jmp
pushf
dec
pop
push
push
(bad)
ja
mov
jb
in
fsub
pop
dec
je
xor
push
inc
jo
out
es
pop
cli
adc
or
sar
dec
fcomip
or
mov
movs
xor
or
xchg
jg
pop
xchg
movs
(bad)
fdiv
test
push
nop
jp
shr
test
mov
mov
sbb
xor
test
leave
stos
cmp
retf
mov
popf
sbb
fisubr
inc
cmps
dec
xor
iret
or
dec
in
repz
inc
mov
pusha
aam
push
test
push
mov
lods
dec
pop
or
adc
sub
ja
mov
into
xchg
jbe
into
push
adc
and
jp
lahf
loope
jae
jecxz
cld
mov
mov
sub
adc
pop
loopne
adc
mov
adc
daa
xor
adc
dec
aaa
mov
adc
cmp
adc
fs
mov
aaa
sub
sti
scas
sub
popf
jb
fidiv
cmp
iret
je
cmp
sub
xchg
aaa
sbb
nop
dec
jne
in
mov
enter
dec
jo
dec
adc
sbb
repz
push
aam
sub
retf
(bad)
fwait
in
and
test
push
cmp
mov
add
and
test
add
push
push
dec
hlt
arpl
int
ss
(bad)
or
mov
or
addr16
xchg
leave
mov
data16
icebp
js
add
pop
rcr
push
or
nop
jle
call
jle
push
enter
loope
xor
in
mov
int3
cld
lods
(bad)
cmp
pop
in
sub
(bad)
dec
fsubr
xlat
sub
test
mov
sub
call
sub
in
pop
sub
pop
dec
imul
sbb
loope
mov
pop
cmps
pause
inc
xor
(bad)
mov
adc
mov
loopne
cld
pop
jmp
add
movs
(bad)
mov
jl
outs
fcom
push
sbb
adc
pop
(bad)
out
(bad)
stc
(bad)
hlt
test
push
sti
pop
and
iret
call
stos
jecxz
push
adc
and
bound
mov
lods
imul
pop
jl
push
add
jae
inc
xor
pop
mov
xor
je
cmp
sub
and
pop
imul
rcl
cld
or
mov
sub
sbb
imul
es
inc
cmp
add
outs
or
dec
sub
jl
cmp
cli
add
xchg
data16
repnz
daa
mov
mov
sbb
push
je
mov
nop
aam
adc
and
out
sbb
fcmovnbe
aaa
lods
dec
aaa
add
jb
addr16
mov
add
push
dec
mov
gs
imul
mov
push
jmp
add
cli
into
ins
not
scas
rcr
lods
(bad)
jmp
xlat
jl
test
ja
adc
fcomip
push
cmp
je
test
les
in
jmp
push
push
ins
fwait
mov
fidiv
xchg
out
mov
mov
mov
mov
loopne
iret
sti
and
jnp
clc
ret
add
push
pop
ror
add
sub
arpl
fidiv
and
push
out
inc
cwde
pop
movs
lock
and
xor
xchg
mov
test
xor
or
mov
out
or
dec
adc
and
push
jno
mov
add
sbb
lock
movs
test
and
out
rcr
jmp
xor
rcl
call
inc
sub
push
int3
fldcw
push
jle
cmp
arpl
xchg
jmp
mov
jo
inc
jecxz
push
loopne
mov
mov
jge
push
aam
cwde
cmp
rol
sub
or
sahf
jmp
pop
mov
sub
aad
sub
or
js
sbb
add
inc
fisttp
mov
pop
xor
cli
aas
sar
push
xchg
jo
jle
cmp
outs
jmp
test
test
nop
inc
(bad)
in
stos
icebp
inc
inc
dec
add
cmps
jae
lds
or
mov
mov
cs
add
mov
addr16
pop
mov
(bad)
cmp
mov
mov
mov
jecxz
or
ds
add
lods
xor
xor
jnp
and
cmp
popf
adc
push
jg
mov
dec
xchg
neg
cmp
out
mov
mov
loope
je
add
stos
fld
inc
in
add
es
sub
movs
int3
mov
aad
leave
push
int3
and
test
scas
push
xchg
(bad)
mov
jp
or
mov
jne
xor
add
dec
stc
jae
inc
mov
push
inc
inc
jmp
scas
clc
sbb
fcmovnb
les
mov
inc
hlt
in
sti
jge
shl
add
jmp
push
pop
test
inc
pop
mov
pop
cmp
xor
adc
jg
mov
lods
dec
jmp
(bad)
in
push
gs
cmp
hlt
std
sar
mov
adc
mov
aad
mov
cmp
(bad)
daa
jl
movs
test
cmp
outs
mov
sar
mov
mov
ret
mov
out
stos
push
or
adc
xor
aad
repz
add
nop
or
mov
jmp
mov
dec
enter
push
xor
push
xor
mov
mov
hlt
pushf
repz
sbb
sbb
sti
push
test
adc
xchg
(bad)
pop
fidivr
jmp
inc
fist
adc
adc
jb
mov
(bad)
xchg
jbe
(bad)
jecxz
mov
cmp
push
or
sbb
sbb
(bad)
lahf
cmp
stos
pop
jb
jae
mov
loope
or
and
inc
pop
ret
push
sub
add
xor
xor
xchg
(bad)
clc
mov
push
and
mov
(bad)
pop
xchg
mov
rdtsc
jle
inc
scas
jb
fwait
xchg
fist
test
movs
mov
xor
jecxz
mov
mov
dec
fist
icebp
adc
and
(bad)
jmp
sbb
inc
aad
ins
retf
xchg
ins
jp
push
adc
mov
fwait
pop
push
addr16
jmp
out
iret
or
pop
dec
fisubr
cmc
pop
es
aad
cdq
mov
or
jns
imul
mov
pop
in
cmp
push
and
mov
ins
daa
and
cmps
push
aam
loop
jmp
inc
rol
or
test
and
mov
(bad)
retf
xor
mov
imul
inc
cld
js
sahf
pop
(bad)
fisubr
cmp
push
int
cmc
in
dec
sub
mov
push
pop
shr
jae
loopne
leave
(bad)
pop
inc
cdq
xor
cmp
retf
leave
int
jg
lock
jmp
pushf
xor
retf
jnp
push
call
mov
inc
adc
mov
das
or
div
inc
daa
call
mov
and
mov
fnstcw
mov
pop
popf
cmp
aad
adc
mov
sbb
xchg
sub
not
push
inc
inc
nop
fwait
call
nop
int3
enter
sti
call
call
je
add
push
pop
cmps
popa
jle
mov
mov
(bad)
bound
bound
loopne
add
push
xchg
out
out
mov
mov
or
stc
or
xchg
ss
in
das
movs
xchg
inc
push
(bad)
mov
ja
call
adc
repnz
dec
mov
mov
bound
cdq
mov
cmps
and
aas
iret
lods
mov
push
pop
adc
cmp
jp
pop
repnz
es
repz
(bad)
dec
mov
or
or
push
jl
mov
(bad)
sbb
mov
lds
dec
sub
shl
cdq
sar
dec
fld
repnz
retw
jg
clc
leave
and
sub
xor
sub
push
xchg
outs
mov
mov
jmp
popa
call
stos
jbe
add
js
jnp
mov
(bad)
mov
dec
mov
outs
sbb
(bad)
retf
js
push
neg
dec
push
je
sub
xor
pop
ins
shl
inc
sbb
loop
bound
mov
es
push
mov
or
ins
xchg
sahf
and
mov
pop
jp
xchg
stos
push
in
in
fist
in
add
nop
fwait
das
or
pop
jmp
inc
push
jge
mov
std
adc
xor
ret
fwait
sti
jae
(bad)
not
neg
cmp
test
sub
imul
sbb
jns
rcr
mov
or
loopne
push
push
in
pop
and
movs
inc
dec
aad
jge
inc
push
arpl
nop
cmps
movs
stc
loope
cwde
test
xchg
nop
out
sar
arpl
in
adc
(bad)
outs
push
inc
mov
inc
mov
enter
int3
lahf
jo
mov
mov
scas
xchg
xchg
dec
xchg
pop
mov
pop
(bad)
lock
push
push
cwde
hlt
or
pop
cmp
test
(bad)
jmp
aas
(bad)
adc
fninit
clc
pop
adc
and
pop
jmp
lea
xchg
xor
lds
clc
sahf
mov
xchg
mov
push
shl
in
or
xor
and
icebp
inc
rol
cmc
jnp
repz
push
adc
ficomp
enter
add
inc
add
adc
mov
inc
call
sbb
ja
mov
stc
xor
add
fld
loope
cmps
call
cmp
pusha
adc
lahf
cmps
sbb
shr
inc
cwde
call
add
enter
shl
mov
mov
int
pushf
and
paddb
push
xchg
push
or
mov
jae
adc
sub
pop
in
mov
inc
out
xor
mov
sub
cli
inc
pop
mov
sbb
add
sahf
pop
shl
cmp
loope
mov
mov
pop
imul
xor
inc
call
sahf
cli
ror
scas
cmps
lods
jmp
jns
dec
dec
addr16
push
cmp
push
cmp
push
leave
mov
sahf
dec
xchg
mov
std
sub
popa
cmps
push
push
jge
call
ss
xchg
push
jg
cdq
retf
hlt
and
stc
and
xor
push
imul
cld
sbb
daa
(bad)
in
xchg
(bad)
jbe
je
and
pop
ret
and
cs
xor
cwde
in
popa
aam
push
push
je
xchg
mov
inc
cmps
inc
xor
scas
xchg
sub
add
mov
inc
push
jmp
aaa
push
sbb
loop
xchg
or
imul
mul
popf
dec
mov
into
(bad)
jmp
xor
mov
js
mov
loopne
(bad)
inc
shl
mov
movs
add
js
jmp
sub
cld
xlat
ret
aas
es
push
lock
xor
pop
(bad)
data16
inc
pop
jg
dec
fdivr
cli
int3
int3
lock
aad
cmps
out
rcl
test
pop
(bad)
xchg
cmps
sbb
std
push
sar
cmp
or
pop
xchg
ss
iret
inc
inc
add
and
mov
test
add
inc
fild
loope
or
add
sbb
push
ficomp
data16
lods
inc
sbb
pop
push
popf
aad
mov
mov
aaa
adc
sbb
mov
jmp
jne
aad
pop
fstp
fdiv
push
frstor
sub
jae
add
pop
aam
adc
adc
xchg
inc
dec
jmp
xchg
fisubr
ret
(bad)
nop
dec
push
push
push
mov
daa
add
std
stos
mov
pop
dec
inc
stc
ja
mov
out
adc
pop
pop
inc
cmp
stos
aad
jg
test
mov
mov
xor
in
adc
addr16
mov
iret
mov
imul
(bad)
mov
fst
jmp
pushf
fisub
pop
xchg
mov
sbb
sub
xor
sub
fstp
aad
ds
mov
out
ds
iret
cld
inc
cdq
rol
into
aam
adc
js
inc
pop
mov
dec
stc
dec
test
ret
xor
and
fisttp
push
ror
pop
(bad)
in
fcmovbe
cmps
dec
jle
ret
mov
int
daa
arpl
mov
lea
(bad)
jmp
xor
sub
push
ds
and
sub
test
cwde
xor
outs
pop
adc
sbb
jl
in
lahf
repnz
mov
dec
push
mov
mov
adc
dec
stc
dec
out
outs
mov
add
mul
ror
aaa
jno
lock
je
popf
dec
(bad)
mov
push
es
mov
call
push
iret
or
adc
ret
sub
xlat
fyl2xp1
scas
fistp
xchg
pop
and
sbb
aam
sbb
jb
mov
leave
mov
mov
sbb
jl
adc
lahf
mov
test
add
xor
stc
xor
lods
lds
cmps
dec
loop
(bad)
sbb
(bad)
mov
cmp
fisub
push
in
xchg
xor
xchg
xor
pop
adc
jns
mov
je
fnstsw
rcl
mov
xchg
jmp
sahf
mov
mov
ret
mov
(bad)
fadd
mov
test
ror
jns
mov
jg
pop
inc
mov
int3
mov
adc
lods
movs
xor
nop
sahf
or
add
push
dec
ins
cli
pop
das
push
test
dec
jge
inc
cmp
shl
(bad)
nop
xchg
and
cmp
jle
pop
jne
pop
mov
pop
call
ret
and
mov
cmc
lea
pushf
sahf
aaa
out
jb
cmps
and
mov
ins
cmps
test
jmp
sbb
inc
aam
xor
push
mov
repnz
fisubr
push
ror
mov
sub
adc
mov
push
in
pop
es
in
pop
xor
outs
mov
cld
jecxz
loop
mov
push
or
mov
repz
and
retf
add
xchg
mov
sub
jne
pop
ds
xchg
ret
push
mov
stos
and
or
sti
(bad)
mov
mov
jne
frstor
addr16
push
in
test
imul
(bad)
mov
cmps
adc
call
xchg
or
jmp
repnz
sti
lods
jnp
xor
adc
movs
outs
idiv
push
or
or
popa
sub
adc
mov
jmp
push
(bad)
out
pop
retf
ds
mov
sub
inc
dec
in
mov
jl
mov
xchg
adc
jmp
les
(bad)
pop
jmp
jp
inc
into
add
aad
push
into
xchg
jbe
cmp
repz
pop
xchg
inc
stc
pop
dec
clc
stos
cmp
inc
loope
jne
xlat
imul
je
sub
(bad)
cmc
into
in
int
add
pop
arpl
ss
push
ins
and
and
outs
es
inc
add
cs
popa
fs
ret
cwde
out
push
jb
mov
jno
jmp
test
sbb
test
mov
cmp
mov
inc
lock
mov
lds
or
and
ins
mov
mov
call
aad
fiadd
mov
cmp
in
(bad)
jb
mov
scas
popf
push
(bad)
rol
inc
stos
xchg
in
and
pop
clc
loope
inc
dec
pop
add
es
mov
inc
ret
or
inc
retf
mov
jle
adc
mov
xchg
cmp
xchg
sub
cld
cdq
int3
jb
fisttp
cmp
inc
pusha
fidivr
push
pop
add
aad
fbstp
enter
mov
movs
cld
ficom
sub
rcl
jb
jmp
mov
adc
mov
sub
icebp
das
js
adc
mov
pop
add
inc
sbb
mov
iret
dec
lahf
jnp
adc
loop
mov
mov
sub
sub
mov
inc
cli
xchg
mov
cwde
pop
xchg
cmps
mov
jle
and
and
mov
adc
int3
lods
in
mul
inc
sbb
imul
retf
test
fisttp
jmp
pop
xchg
adc
out
cmps
ds
repnz
pop
cmps
dec
cmp
jne
call
push
stos
xor
sub
sbb
mov
sbb
cmp
stos
stos
imul
push
cmps
lods
stc
loope
push
jmp
and
or
cmc
fldenv
jnp
push
cwde
add
inc
sub
nop
add
pop
cli
retf
ret
sahf
push
loopne
xchg
cmp
ja
pop
imul
mov
jnp
sbb
test
ins
test
(bad)
push
mov
jl
fcomp
jbe
xchg
ss
retf
cmps
fcom
bound
sbb
jns
dec
mov
adc
jmp
xor
les
test
fmul
ja
push
out
in
xor
imul
or
fwait
pop
dec
push
aam
xchg
mov
push
xchg
xchg
mov
ret
stos
push
nop
enter
pop
push
add
mov
and
dec
movs
outs
ret
pop
jne
ret
mov
push
or
mov
(bad)
aam
pop
pop
lds
mov
mov
mov
shl
(bad)
push
dec
and
mov
jg
das
imul
lods
jo
jecxz
sub
test
pop
jg
cs
fdiv
add
push
cli
inc
outs
xchg
inc
inc
jbe
mov
add
shl
jg
int
jne
cmps
pusha
or
push
hlt
mov
out
push
imul
cmp
xchg
mov
add
pop
or
cmps
pop
(bad)
movs
jmp
mov
cs
xor
cmp
lods
or
js
popa
imul
mov
or
fadd
mov
xchg
push
lahf
xor
ja
adc
sbb
push
fild
pop
js
outs
cmps
xchg
pop
cmp
push
in
loope
pop
aas
dec
scas
dec
pop
sahf
and
mov
xchg
pop
and
fdiv
lods
mov
inc
test
mov
div
arpl
xchg
lds
cmp
sub
or
scas
jp
ret
sub
pop
enter
cdq
ins
mov
lods
repz
push
sbb
dec
jmp
in
dec
aaa
jg
jmp
jmp
(bad)
ja
leave
nop
jmp
xchg
stos
test
cmc
cmp
stos
mov
dec
shr
mov
xor
aaa
ja
xlat
mov
inc
jo
clc
(bad)
stos
lds
rcr
jbe
aaa
std
or
dec
mov
sub
and
aas
(bad)
xchg
test
xchg
xor
jo
pop
ds
in
cmp
imul
iret
call
jmp
clc
lock
pop
push
hlt
pop
fdivr
arpl
inc
mov
dec
jb
lea
es
xchg
fs
push
cmp
xchg
mov
mov
jno
popa
jg
int
out
inc
or
lock
adc
addr16
mov
outs
stos
inc
ins
repnz
les
or
mov
sti
sub
fneni(8087
shl
arpl
push
mov
adc
and
in
fidivr
mov
ja
mov
mov
cld
inc
mov
scas
dec
imul
fstp
dec
fs
dec
inc
mov
cwde
adc
scas
cmc
mov
xchg
aas
fdivr
pop
aam
mov
pop
call
sbb
nop
pop
add
outs
popa
xor
push
mov
retf
adc
rcl
in
jb
movs
ds
lods
mov
mov
mov
movs
(bad)
int
cmp
xor
push
inc
gs
sbb
pushf
mov
int3
xlat
and
xor
mov
push
repz
ja
(bad)
bound
cmp
shl
cs
sbb
dec
lea
in
inc
push
mov
push
and
fimul
mov
pop
push
fwait
jo
mov
mov
frstor
cdq
dec
ret
mov
jnp
jne
dec
sub
jge
sbb
iret
hlt
pop
ds
pop
mov
sub
mov
mov
pop
imul
mov
adc
adc
scas
ins
mov
fcomp
dec
cmc
push
sbb
sbb
pop
xchg
pop
pop
cmps
sub
dec
dec
jg
retf
pop
and
and
into
sbb
test
aas
stc
adc
add
xchg
cmp
cmps
mov
inc
mov
mov
and
sub
scas
add
mov
call
or
frstor
addr16
mov
pop
sbb
sub
sub
cmps
jns
movs
clc
push
pop
push
test
sbb
out
xchg
inc
addr16
ror
scas
inc
mov
or
adc
mov
ins
cmp
clc
adc
mov
hlt
xchg
and
push
ins
retf
iret
jmp
test
push
mov
adc
arpl
scas
in
jge
sbb
push
outs
pushf
pushf
dec
ss
sti
fild
cld
pandn
dec
push
adc
xor
hlt
fst
mov
mov
mov
sti
ss
shr
bound
scas
cmps
frstor
mov
add
loop
aad
add
pop
or
stc
loopne
jns
fs
pop
out
sub
addr16
in
fild
jns
cdq
jne
sahf
mov
imul
repnz
scas
xchg
ret
add
jecxz
aam
out
adc
rol
movs
popf
int
push
dec
test
jmp
outs
dec
adc
jbe
sub
mov
jecxz
dec
stos
icebp
fs
lahf
sbb
(bad)
sub
add
scas
data16
dec
and
and
mov
jnp
xchg
clc
in
cld
in
aas
mov
xchg
mov
inc
push
hlt
icebp
xchg
ret
xchg
jb
and
aam
stc
dec
(bad)
xchg
int
push
push
in
shl
mov
test
cmp
pop
lods
adc
adc
and
mov
sub
out
jge
out
inc
xor
in
icebp
lahf
in
sbb
retf
out
mov
fild
jge
xor
sbb
mov
pop
ret
outs
dec
inc
mov
mov
imul
push
add
test
sar
jmp
sbb
enter
cwde
ja
sti
sub
aas
xchg
push
mov
jge
sbb
nop
and
cmp
cld
pop
sub
or
retf
jle
push
cmp
sbb
popf
pop
ja
aas
test
imul
cmps
pop
push
lock
or
mov
lock
dec
sub
xchg
xor
jle
pop
js
xchg
push
fst
arpl
mov
jae
test
in
mov
mov
sbb
sbb
push
add
fst
xchg
adc
dec
xor
lds
mov
jp
leave
sar
arpl
push
jbe
cmp
mov
inc
xor
(bad)
xchg
scas
xchg
sub
pop
jnp
mov
jmp
and
dec
enter
jp
adc
or
hlt
dec
cmp
in
push
ins
lahf
rcl
stc
rol
sbb
test
cmp
and
inc
adc
or
xchg
out
pop
pusha
inc
fwait
jge
neg
outs
pop
push
sbb
loope
cmp
lds
jecxz
mov
xchg
add
and
hlt
mov
xchg
fidiv
in
pop
or
jnp
cmp
jae
cmp
push
sub
jmp
js
out
adc
out
js
shr
jo
xor
movs
jmp
aam
mov
xor
sbb
lods
pop
jle
mov
leave
mov
push
cmps
int3
xor
aaa
in
jecxz
aas
mov
and
push
test
rol
outs
mul
push
pop
aaa
gs
lock
xchg
jmp
in
lds
movs
sar
jno
xchg
adc
dec
mov
and
adc
das
cwde
ins
in
push
push
adc
imul
inc
or
loope
mov
jmp
add
jbe
cmp
dec
cmp
xchg
(bad)
fld
cmc
pop
jmp
push
push
push
test
or
mov
mov
xchg
fs
pop
data16
sub
push
mov
nop
iret
fnstcw
iret
mov
mov
or
fld
test
sbb
mov
pop
adc
js
or
imul
xor
jmp
hlt
cli
fcomp
das
icebp
mov
xchg
bound
scas
jb
xor
stc
pop
and
ja
cmp
sub
mov
mov
dec
clc
movs
cmps
sbb
inc
push
(bad)
enter
adc
mov
mov
or
cs
add
push
push
stos
rcr
pop
dec
mov
inc
push
retf
arpl
jecxz
fcomp
sub
iret
xor
hlt
bnd
mov
pushf
add
neg
mov
push
pop
xor
sbb
enter
bound
or
xlat
stc
int3
enter
popf
xchg
and
ss
sub
in
sbb
dec
data16
push
push
not
pushf
dec
mov
xchg
inc
adc
in
or
shl
das
or
gs
sbb
add
dec
ja
push
push
adc
adc
xor
fild
mov
mov
sbb
arpl
(bad)
loop
js
mul
jno
aas
pop
mov
mov
push
pop
and
mov
mov
cmc
pop
ss
sbb
cdq
xchg
sbb
jne
push
call
push
push
in
adc
call
cmps
sahf
jmp
inc
pop
push
aas
mov
sahf
dec
cld
mov
pop
lea
dec
jmp
icebp
hlt
js
cli
loop
mov
fld
mov
sub
jae
add
lahf
mov
mov
test
and
shl
jnp
fsubp
ror
inc
and
push
cmp
mov
mov
jnp
loop
cwde
shl
mov
test
xor
gs
enter
jl
sub
pop
mov
dec
clc
jns
fild
mov
push
jg
dec
sub
and
add
jmp
xor
scas
popa
lds
out
push
mov
sub
mov
jle
sub
pop
mov
push
push
pop
cs
mov
mov
std
lods
(bad)
mov
popa
adc
add
shr
jp
outs
out
and
scas
stc
rcl
es
mov
loopne
retf
ins
adc
jno
vpmadd52luq
push
jmp
cmc
xchg
imul
pusha
mov
(bad)
sbb
lds
or
and
mov
mov
pop
and
outs
xor
jl
mov
je
cmp
push
mov
movs
out
xchg
mov
ret
and
xor
mov
jp
cmp
ror
inc
imul
outs
enter
sbb
repnz
shr
adc
mov
cmp
mov
es
ret
imul
ja
(bad)
call
in
jecxz
ret
xchg
sbb
test
mov
scas
iret
nop
daa
xchg
dec
and
mov
mov
ins
inc
pop
mov
add
mov
jb
inc
dec
pop
jecxz
ins
add
pop
pop
dec
aas
cld
xchg
fcom
out
xor
imul
mov
movs
cdq
(bad)
stc
cdq
rol
cli
adc
push
fst
retf
xor
inc
call
in
out
jbe
movs
into
xchg
pop
aad
hlt
xor
fidivr
movs
test
lds
pop
movs
mov
jne
or
cmps
movs
rcl
dec
je
sub
inc
jge
adc
xchg
hlt
mov
aam
movs
ja
add
loopne
rcr
mov
aas
mov
sar
or
inc
mov
rcl
cld
pop
mov
rcr
test
jbe
and
into
imul
out
or
ins
xchg
test
mov
adc
enter
sti
pop
into
int
mov
and
jmp
xor
or
cli
and
stc
out
pushf
mov
lock
sbb
into
xchg
mov
ins
(bad)
sbb
scas
fimul
mov
test
inc
cmp
mov
sbb
adc
mov
inc
mov
xchg
cli
pop
push
lock
dec
cwde
dec
sub
xchg
mov
mov
cli
scas
scas
jmp
mov
push
xchg
mov
pop
pop
test
pop
aas
mov
pop
xchg
fsub
mov
lock
jb
fcom
cmp
into
popf
mov
hlt
pop
sub
mov
call
jle
pusha
cli
push
or
mov
jle
or
jae
cmps
jb
call
rcr
jb
mov
and
push
push
rcl
mov
(bad)
adc
retf
test
shl
ins
mov
push
lock
jp
iret
popf
pop
mov
aas
xor
leave
push
ins
ja
(bad)
jecxz
ss
daa
jmp
add
xchg
test
add
sub
add
jmp
je
pop
out
pop
cli
xchg
fs
ret
das
sub
daa
push
xchg
rep
push
test
stc
pop
and
adc
pop
loopne
outs
sar
into
std
hlt
lods
inc
ins
cwde
pushf
xor
add
jecxz
outs
mov
push
pop
retf
loop
sti
int
jl
sbb
mov
dec
and
push
outs
rcr
cmp
or
fmul
sbb
aam
fiadd
call
pop
mov
fs
pop
scas
imul
pop
sbb
mov
int3
cwde
adc
fisubr
mov
pop
jo
jmp
jo
pop
sub
fisttp
dec
and
loope
dec
stos
mov
fs
xlat
cmc
dec
bound
add
out
inc
mov
push
mov
push
fadd
cmp
jnp
icebp
(bad)
pop
xchg
inc
push
jg
mov
inc
jle
push
fisttp
dec
(bad)
scas
dec
inc
retf
fimul
push
leave
das
aas
fwait
lds
das
add
push
jecxz
jecxz
xchg
ror
push
pop
dec
stos
xor
fbstp
xor
fcom
rcl
retf
jecxz
bound
add
rcl
out
ret
call
adc
pop
cmp
fsubr
mov
icebp
or
mov
icebp
(bad)
outs
movs
(bad)
mov
mov
jge
or
(bad)
mov
mov
push
repnz
ficomp
fwait
ss
(bad)
mov
into
imul
push
jp
aad
xlat
mov
daa
fwait
cmp
imul
add
sahf
clc
xchg
out
push
jo
pop
pusha
and
adc
dec
and
pop
addr16
scas
mov
idiv
push
rcr
dec
xlat
clc
mov
bound
rcl
xchg
scas
lea
and
jbe
mov
popf
pop
out
inc
jae
pop
addr16
into
push
mov
xchg
push
mul
jns
jb
mov
cmp
js
pop
std
mov
mov
jg
stc
in
cmps
lods
aaa
xor
out
pop
mov
mov
add
test
iret
xor
push
jns
sub
sub
jge
cmp
pop
or
repnz
int
xchg
dec
adc
es
sbb
addr16
mov
scas
lods
mov
lea
adc
loopne
dec
inc
push
pusha
imul
outs
into
arpl
mov
dec
jl
dec
scas
stc
adc
inc
jge
inc
retf
mov
and
jmp
jl
scas
jbe
jg
lds
mov
cmps
pop
loop
mov
in
xor
add
jo
repz
xor
gs
fwait
loopne
popf
add
in
test
(bad)
push
push
out
in
mov
(bad)
add
movs
xchg
ins
aam
jnp
xchg
pmulhw
iret
sbb
punpckldq
mov
rcr
lea
jp
inc
(bad)
fld
ds
cwde
xchg
jl
jmp
int
or
test
stc
scas
and
add
bound
push
xchg
leave
sub
stos
push
mov
sbb
sub
leave
out
sahf
and
jmp
leave
ror
xchg
cs
lock
mov
loopne
jbe
sbb
mov
aam
test
push
sbb
xchg
mov
icebp
fbld
cld
pop
jl
fwait
jb
cld
idiv
fistp
cmp
or
leave
js
dec
(bad)
xchg
add
cmc
out
div
dec
xchg
sub
dec
out
inc
jg
xor
push
xchg
fisubr
cli
or
dec
dec
mov
fstp
outs
cmp
dec
jnp
push
(bad)
ja
fmul
mov
adc
inc
aam
popf
cmp
sbb
jle
jno
out
je
xchg
inc
fld
mov
movs
cmps
aad
lahf
pop
pushf
ins
dec
movs
fisttp
ret
mov
inc
pop
shl
neg
sub
out
les
test
pop
int
inc
dec
and
sbb
sahf
mov
mov
nop
pop
movs
and
mov
push
(bad)
pop
mov
ss
jmp
shl
pop
sbb
(bad)
xchg
dec
pop
enter
cmps
lds
inc
rcl
inc
xchg
mov
imul
mov
fstp
jns
in
fnstsw
out
lods
dec
add
mov
fiadd
sar
jg
in
test
fistp
mov
or
mov
outs
cmp
sbb
daa
arpl
adc
loopne
pop
stos
push
sbb
movs
xor
sbb
punpckhdq
idiv
repnz
sbb
repz
pop
push
test
sub
adc
or
pop
sbb
shr
pop
sub
retf
or
mov
mov
sub
in
fisttp
xchg
and
ja
sub
cmps
cli
xor
cmp
fistp
repnz
fwait
sar
mov
dec
sbb
in
imul
cmc
or
sub
and
adc
mov
imul
add
mov
mov
cmp
dec
sar
cmc
xchg
bound
stc
mov
mov
sbb
mov
dec
into
xlat
dec
push
mov
(bad)
arpl
sbb
cmp
stos
call
into
imul
dec
pop
clc
repz
inc
jge
jo
repz
mov
cmp
jae
add
xchg
mov
shl
mov
leave
aaa
inc
cld
dec
pop
pusha
sbb
popa
dec
mov
pop
jmp
cmc
sbb
ins
and
xchg
in
mov
pop
push
cmps
and
out
inc
inc
mov
sub
cmp
mov
xchg
arpl
and
dec
popf
lods
and
ret
test
(bad)
adc
cmp
popa
ds
push
sbb
mov
sbb
pushf
add
fcom
repnz
cld
sub
or
scas
dec
or
cmp
pcmpgtd
test
hlt
mov
sub
cmp
sbb
cmp
retf
fdiv
movs
or
xchg
std
adc
ds
push
inc
sbb
in
aas
sti
es
aam
leave
into
(bad)
and
cmp
xchg
cs
push
mov
retf
jbe
cdq
xchg
pushf
jle
xor
jl
mov
pop
push
div
(bad)
jmp
les
inc
jo
in
repnz
cmps
and
and
xor
(bad)
int
fist
cld
mov
cmps
aad
and
cmc
jp
sbb
iret
test
or
pop
out
clc
adc
aaa
cmp
cmps
mov
xchg
lods
fdivr
mov
pop
xor
sub
xchg
addr16
mov
or
in
cs
add
mov
jecxz
sbb
add
adc
movs
add
mov
dec
mov
add
lahf
icebp
into
in
lock
cmc
adc
mov
icebp
ins
jnp
arpl
xchg
sbb
dec
shl
mov
mov
or
cmp
ins
outs
ret
dec
cs
and
sub
mov
add
jnp
mov
fdiv
lea
xchg
shl
dec
pop
jmp
inc
push
popf
ffreep
cwde
mov
dec
xor
(bad)
popa
std
lods
jge
push
enter
jmp
fmulp
jmp
pop
xor
popf
fcom
popf
xor
(bad)
lahf
add
mov
cmp
cmc
cmc
push
ror
in
call
jb
jnp
push
mov
sti
adc
or
popf
movs
mov
mov
jmp
ror
iret
lock
mov
movs
mov
mov
rcr
mov
aas
mov
stos
sbb
stos
xchg
or
ja
xor
mov
pusha
jbe
xchg
and
cmp
cdq
scas
ret
mov
dec
and
stos
or
or
push
lahf
out
cli
and
ins
mov
les
push
pop
std
adc
xor
sub
mov
mov
ror
repz
out
sub
repnz
adc
mov
retf
sti
ficomp
into
sub
js
popf
mov
sbb
jne
(bad)
mov
mov
loop
mov
cmc
in
sub
add
int3
mov
jp
push
es
add
jmp
inc
mov
mov
imul
dec
cwde
push
retf
jg
aaa
ss
ds
xlat
pop
les
scas
xlat
mov
(bad)
sbb
or
adc
jge
lds
sbb
xchg
mov
push
aad
icebp
in
dec
xor
call
outs
push
ins
mov
mov
xor
inc
jne
jg
icebp
cwde
icebp
cmp
retf
stos
scas
movs
pusha
xchg
lea
add
into
cmp
loopne
cld
cmp
push
adc
js
mov
xor
in
fild
iret
jb
push
fldenv
mov
retf
retf
cmc
movs
lods
mov
lods
js
pop
data16
push
adc
xlat
out
retf
arpl
test
add
ds
dec
mov
xchg
xor
or
dec
cmp
inc
pop
paddd
mov
sbb
push
lods
inc
lods
cmp
sahf
lahf
xchg
call
leave
sbb
jge
lds
jmp
cdq
pop
mov
out
cli
mov
and
test
mov
adc
fldenv
or
pop
mov
mov
add
movs
dec
rcl
je
retf
push
loopne
das
repnz
aas
arpl
mov
cmps
inc
popa
retf
sbb
fistp
add
nop
xlat
mov
int3
pop
in
mov
popa
clc
and
or
loopne
push
loop
ret
jne
pop
icebp
add
popf
bound
test
mov
add
stos
mov
cli
sbb
(bad)
out
xchg
in
sbb
or
shl
stc
push
push
hlt
add
sub
inc
in
pop
inc
mov
scas
shr
pop
or
outs
(bad)
cld
cdq
shl
sti
stc
leave
sbb
jle
mov
mov
data16
and
scas
jmp
(bad)
in
inc
repnz
rcl
xor
lds
jb
test
out
dec
out
ss
inc
stos
mov
and
mov
test
and
xor
mov
fadd
cmp
push
dec
(bad)
xchg
sub
pop
shl
or
sar
and
daa
test
aam
int
xor
cmc
xchg
push
(bad)
rol
int
mov
inc
ss
xor
xor
push
inc
inc
dec
adc
sub
add
cmc
lock
cmp
pop
push
mov
(bad)
adc
fcmovu
xchg
sahf
sti
imul
je
mov
or
xchg
mov
pusha
loope
mov
pop
sbb
daa
movs
mov
and
adc
jge
das
mov
lsl
mov
cmp
(bad)
dec
xor
fistp
jbe
not
push
mov
xchg
dec
xor
push
fmul
cmp
lods
sbb
loopne
(bad)
js
add
cmp
and
out
fcomp
jo
dec
mov
pop
mov
stos
jmp
cmp
pushf
retf
add
pop
and
cwde
inc
imul
lock
data16
loope
int
aas
ror
push
jne
mov
retf
jns
test
int
aaa
and
jle
or
cmps
aad
jg
pusha
(bad)
imul
psraw
daa
fcomp
push
sub
std
push
sbb
xchg
xchg
add
jmp
mov
test
xor
add
jge
add
cld
add
pop
push
ret
add
inc
mov
das
retf
inc
inc
xor
push
out
sbb
into
repnz
cmp
test
and
lahf
dec
cdq
repnz
fcom
pop
inc
sub
xor
mov
in
aad
cmp
mov
(bad)
std
test
(bad)
jmp
dec
not
jle
inc
xor
cwde
inc
pop
add
into
lods
cwde
sub
cwde
pushf
xchg
je
(bad)
repnz
jbe
pop
inc
stc
adc
je
outs
and
xor
neg
inc
pop
mov
push
jmp
cdq
push
ds
jb
and
xor
and
pop
fiadd
shr
out
xor
lock
sahf
test
cwde
add
or
cmp
cwde
mov
fcomp
or
lahf
xlat
aad
or
sub
sti
cdq
cmps
or
adc
cmp
sub
ffree
das
lock
cdq
cwde
hlt
mov
adc
imul
call
xchg
mov
data16
test
pop
cmc
je
dec
ins
add
sub
pop
(bad)
mov
sub
push
mov
mov
dec
and
jb
lea
(bad)
call
push
stos
sub
inc
sar
dec
xor
cmp
bswap
ins
dec
push
je
mov
jns
jno
cmp
loopne
les
ss
in
jno
fadd
dec
test
popf
aad
outs
ss
mov
or
and
dec
adc
fist
hlt
ss
mov
gs
mov
or
(bad)
mov
push
popa
outs
pop
enter
push
xchg
rcr
shrd
(bad)
xchg
xchg
rcr
push
dec
mov
push
mov
dec
test
push
mov
aam
or
dec
stos
adc
xchg
jecxz
push
in
dec
(bad)
dec
lds
cmps
int
inc
jp
test
addr16
shr
test
loop
sub
bound
mov
inc
pushf
pop
sbb
mov
rcr
xchg
iret
movs
adc
shr
mov
out
jl
sti
mov
retf
test
sbb
sti
movs
loopne
xchg
div
dec
pop
ret
fldenv
(bad)
fsubrp
jp
push
(bad)
std
jb
cmp
out
movs
hlt
mov
popf
mov
add
mov
popf
rcl
data16
dec
cli
dec
mov
dec
or
jae
xchg
mov
movs
jmp
xlat
test
cmp
or
jo
outs
imul
inc
aam
pop
(bad)
out
mov
add
test
mov
stos
pop
cmp
outs
dec
mov
arpl
dec
aaa
jmp
loope
inc
cmc
out
lahf
out
pop
xchg
popf
and
cdq
ins
shl
repz
push
cli
stc
pushf
xchg
jp
rcr
ret
xor
jl
retf
inc
add
pop
inc
cmp
and
shl
in
rcr
xchg
inc
dec
inc
xchg
jae
adc
stos
(bad)
test
sub
mov
mov
sbb
xchg
lahf
rol
clc
outs
mov
sbb
sbb
(bad)
sub
addr16
mov
fstp
xchg
cmp
ds
(bad)
jmp
mov
adc
push
pop
push
jg
neg
mov
push
call
dec
add
and
mov
mov
or
nop
loop
imul
stos
inc
or
sub
xchg
in
test
adc
xor
outs
scas
sbb
cmp
mov
cmova
out
dec
adc
add
pop
push
xor
sbb
push
cld
jle
sbb
jle
test
sub
dec
and
inc
mov
lock
pushf
xchg
pop
mov
pop
test
imul
fild
jmp
icebp
fst
and
jno
repnz
ja
and
jnp
and
fistp
inc
ins
xchg
pushf
cmp
(bad)
ror
dec
jb
out
jnp
adc
inc
inc
rcl
test
lea
cmp
repnz
mov
js
lds
sbb
movs
mov
loopne
add
aas
xor
mov
leave
jbe
cmps
and
push
adc
xchg
bnd
pop
jecxz
push
lea
jmp
fimul
jl
cmp
loopne
xor
lea
scas
iret
push
fisub
lea
stos
imul
aad
push
xchg
fbld
clc
add
sbb
push
fcomp
loop
push
jmp
xchg
sub
das
ss
mov
xor
add
mov
retf
scas
jecxz
lods
or
mov
push
sbb
push
movs
mov
aam
add
(bad)
(bad)
inc
sbb
loopne
push
shl
jl
xor
call
mov
inc
or
pop
mov
or
pop
mov
stos
mov
mov
pop
pop
loopne
pop
xlat
pop
lods
dec
repz
cmp
mov
scas
xor
sahf
je
lock
xor
popa
xchg
mov
in
xchg
add
mov
inc
aam
fidiv
sbb
fs
vpmuludq
dec
int
(bad)
pop
jo
cmp
fsubr
mov
pop
(bad)
adc
out
int
in
daa
loopne
cmp
ds
lods
xchg
sbb
gs
aas
stos
imul
rcr
push
mov
mov
sbb
mov
xchg
push
aaa
rol
cli
add
xchg
jo
movs
dec
push
fs
inc
scas
dec
push
repz
nop
sub
repnz
in
into
pop
mov
mov
push
rcl
stc
int3
or
add
cmp
lods
pushf
xor
or
cmp
cmp
js
adc
push
adc
aad
push
xor
push
mov
inc
sbb
mov
push
pop
aas
in
loope
fucom
or
or
push
xor
nop
mov
dec
cmc
das
dec
and
xor
xor
into
inc
push
cmp
leave
lea
xor
gs
jmp
or
clc
pop
sar
jmp
in
cmp
adc
int
mov
in
dec
movs
jmp
es
and
outs
out
lods
pop
icebp
pop
ds
and
add
test
nop
mov
fwait
jle
pop
mov
mov
cmp
pop
movs
xor
das
out
add
adc
pop
gs
add
(bad)
test
cmp
ds
xchg
fld
lods
imul
fcmovnu
ins
mov
into
scas
pop
fidiv
or
fs
test
mov
iret
call
mov
scas
sahf
jg
and
out
and
pop
and
xchg
rcl
sub
repnz
in
mov
add
dec
clc
and
rol
sub
jmp
add
adc
add
sbb
aaa
in
sub
mov
dec
add
and
mov
not
xchg
xchg
les
pop
psubd
or
call
mov
jmp
sbb
cmp
sbb
push
(bad)
div
or
in
sub
cli
pop
inc
and
mov
mov
(bad)
jmp
data16
shl
and
daa
pop
addr16
or
aas
outs
lahf
int
outs
movs
js
loopne
push
outs
pop
pop
daa
dec
fimul
push
test
inc
daa
stc
sub
int3
mov
mov
sti
outs
xchg
imul
(bad)
in
arpl
adc
daa
fs
pop
jo
stc
jecxz
dec
fsub
cmp
pop
cmp
adc
mov
cmps
dec
fdivr
push
pop
inc
jg
rcr
popf
mov
adc
push
cmp
jno
mov
inc
or
xor
shl
mov
pop
mov
sbb
dec
mov
std
push
test
mov
cmc
xor
fld
sbb
add
and
sbb
ins
push
push
fs
cs
hlt
int
stos
mov
scas
cs
xor
jmp
push
movs
out
push
xor
je
or
pop
push
(bad)
std
push
fcmovu
mov
out
mov
fcom
lds
and
shl
and
dec
mov
xor
pop
out
pop
test
(bad)
aad
jecxz
leave
daa
mov
and
cmp
sahf
imul
arpl
and
mov
ret
repnz
inc
sub
jns
xchg
mov
inc
std
jp
aaa
shl
mov
dec
stc
jmp
mov
shr
pusha
inc
ins
mov
and
out
mov
shl
sbb
ret
jne
xor
jb
ins
mov
push
int3
xchg
mov
(bad)
repnz
scas
push
movs
or
mov
cdq
pop
mov
adc
push
xor
js
xchg
ficom
jnp
aaa
shl
pop
sub
mov
push
push
shl
jecxz
mov
jnp
aaa
pop
and
pop
xchg
in
xor
mov
mov
loop
inc
cld
mov
cmc
cmps
std
fist
iret
sub
mov
sahf
adc
adc
std
adc
call
sub
ss
ret
ror
outs
jmp
cmps
and
push
sti
cwde
mov
ins
movs
fidivr
dec
ror
cmc
mov
retf
dec
xor
call
mov
pop
mov
outs
jge
adc
aam
sub
(bad)
jnp
outs
jmp
jecxz
jp
dec
fcmovnbe
inc
ja
xchg
fs
mov
jp
and
test
mov
fs
push
aad
mov
inc
pop
mov
jb
xchg
in
sbb
pop
(bad)
xor
addr16
mov
xchg
pop
call
fwait
ins
jg
push
arpl
push
cs
add
inc
mul
test
aas
or
jae
xor
aad
shl
sbb
mov
inc
sub
cmp
call
cmp
outs
test
in
retf
sub
inc
out
sub
shr
cmp
inc
add
adc
das
and
fwait
outs
push
(bad)
(bad)
sahf
add
xchg
dec
rol
data16
sbb
pushf
fld
or
inc
fcomp
cdq
lds
stos
add
push
add
xchg
jp
mov
cwde
push
mov
cld
adc
mov
(bad)
pop
cmps
fld
fdiv
cmp
ret
pop
add
pop
jne
sbb
xor
xchg
push
aaa
cmp
inc
nop
inc
outs
add
or
xor
mov
mov
add
or
aad
les
mov
push
aam
xlat
ret
(bad)
pushf
sub
push
test
add
in
ins
pop
jecxz
adc
or
sbb
sbb
or
pop
jno
loopne
retf
cdq
punpckhbw
dec
std
jae
mov
xchg
cmps
icebp
or
and
in
out
aaa
shl
test
jns
mov
mov
imul
int3
(bad)
cs
cmp
inc
int3
dec
test
gs
adc
mov
icebp
out
mov
adc
or
js
cmp
fmul
xor
sbb
lea
push
rcr
push
cdq
mov
xor
dec
jle
lahf
jl
retf
sub
ror
xor
jl
pushf
test
lods
in
int3
or
push
ffreep
mov
retf
repnz
fsub
push
clc
bound
in
push
jo
mov
and
mov
push
ins
pop
jle
push
push
js
cmp
push
add
(bad)
mov
xor
adc
aaa
xor
push
push
and
std
clc
dec
mov
inc
cli
dec
mov
and
mov
jmp
sti
pop
adc
mov
cmps
test
dec
mov
addr16
push
cdq
jmp
mov
pop
aam
jno
sub
jo
push
daa
stos
or
xchg
or
xchg
stos
mov
cmp
xor
adc
sahf
sub
pop
adc
test
jl
mov
(bad)
ss
into
jmp
add
enter
mul
add
add
fwait
jb
and
iret
imul
fistp
or
or
inc
imul
shl
mov
mov
cmps
mov
cmp
fild
cmp
sbb
sub
div
add
and
sbb
xor
in
sbb
xor
push
sbb
mov
xchg
pop
pushf
fcomip
pop
mov
jmp
out
ja
pop
sbb
ror
(bad)
pop
jg
jg
(bad)
das
cmp
xor
adc
test
mov
fiadd
aad
sar
out
mov
pop
xchg
out
aam
push
js
lahf
ror
sbb
mov
jnp
out
ror
ja
sbb
ret
mov
gs
mov
sub
fistp
jmp
push
push
lods
xor
xlat
pop
outs
cs
test
in
icebp
hlt
xor
adc
scas
jle
ret
shl
inc
sub
xchg
push
hlt
(bad)
jne
loopne
and
adc
imul
stos
inc
fcomp
or
cmp
or
mov
neg
es
pop
xor
inc
jnp
jmp
sti
dec
pop
ss
(bad)
fcmovnb
and
mov
test
(bad)
out
scas
xor
mov
(bad)
cmps
fld
push
add
or
enter
sub
xchg
sbb
ja
or
mov
in
pusha
jecxz
cmp
js
loop
retf
xchg
gs
in
pop
in
push
and
xor
mov
aaa
test
dec
idiv
sub
adc
loope
xor
add
stos
sbb
inc
neg
push
adc
addr16
inc
in
outs
rcr
std
icebp
jne
mov
mov
xlat
pop
sahf
or
push
mov
pop
popf
mov
js
xchg
pop
arpl
mov
arpl
std
jno
and
in
cs
mov
call
xor
sahf
dec
push
fsubp
xchg
out
out
(bad)
out
lahf
jg
push
cmp
xchg
xor
pop
imul
cs
mov
xlat
(bad)
lds
jne
inc
mov
aam
mov
iret
in
add
pop
jae
pop
adc
xchg
xor
adc
(bad)
(bad)
imul
push
cmp
xlat
jmp
rcl
pop
xor
mov
or
movs
push
inc
lods
ins
xchg
push
or
rcl
sbb
ins
push
mov
dec
popf
aaa
lds
dec
movs
mov
in
add
clc
sbb
pop
stos
nop
lds
push
pop
out
pop
mov
arpl
ds
push
jmp
shld
sbb
pop
arpl
movs
jnp
inc
xor
call
ds
scas
lahf
add
push
push
mov
push
inc
push
mov
stc
dec
outs
into
arpl
push
xchg
bound
lods
je
dec
inc
xchg
adc
sub
inc
mov
ret
pushw
(bad)
fstp
pop
repnz
pop
mov
mov
mov
jnp
fmul
loope
out
xor
mov
xchg
popf
mov
jmp
mov
jle
mov
xor
pop
mov
and
sub
xchg
jns
ficomp
pushf
jge
jo
sbb
clc
pop
popf
xchg
sub
jo
xchg
fldl2e
stos
add
invd
mov
mov
sub
in
sbb
retf
cs
lock
xlat
fmulp
xchg
mov
push
addr16
and
cdq
fcmovne
imul
push
mov
imul
sbb
mov
mul
loop
pop
outs
adc
xchg
scas
out
mov
in
inc
jo
fisttp
addr16
cmps
pusha
icebp
adc
add
fsubr
mov
and
test
and
mov
or
outs
xor
adc
mov
out
cli
adc
loopne
pop
push
adc
jne
or
pop
sahf
jge
popa
adc
cdq
adc
sub
jno
je
and
sbb
loopne
inc
ins
pusha
mov
hlt
mov
pop
push
int3
out
(bad)
and
sbb
into
add
push
xchg
jns
dec
daa
data16
in
add
xchg
cmc
in
mov
mov
ret
dec
mov
pop
imul
pop
je
ret
out
lahf
mov
xchg
adc
lahf
inc
lahf
sub
jecxz
pop
ret
xchg
js
jg
pushf
ss
rol
icebp
dec
cmps
jno
mov
test
adc
mov
mov
repz
mov
push
push
enter
mov
push
fnstenv
loopne
cs
mov
xor
jecxz
push
enter
in
and
les
inc
outs
mov
cmps
stc
mov
mov
(bad)
sti
fisub
test
call
pop
out
ret
inc
adc
xchg
push
std
xor
test
mov
loopne
mov
sar
xchg
sbb
push
cmps
data16
cmp
dec
mov
push
cmp
jbe
add
push
cdq
sbb
xchg
mov
jecxz
cdq
push
pop
je
dec
sbb
pop
and
ss
add
sbb
(bad)
call
popa
add
popa
push
sbb
push
add
aaa
push
mov
pop
dec
aaa
xchg
stc
jnp
add
adc
aas
adc
sub
dec
jne
inc
inc
shr
out
push
dec
sbb
movs
sub
imul
sub
push
mov
ja
lock
je
pop
or
xor
cmc
repnz
dec
jg
sub
mov
inc
and
jne
mov
mov
daa
xchg
mov
jmp
push
(bad)
stos
inc
test
mov
sbb
aas
xor
jae
retf
in
in
mov
dec
mov
int
(bad)
int3
add
loope
(bad)
(bad)
push
stc
inc
push
and
lahf
lods
xor
icebp
daa
daa
dec
ror
or
jnp
mov
(bad)
cld
ja
icebp
sbb
push
fwait
or
ja
xchg
mov
(bad)
and
mov
aas
sbb
rcr
mov
fsubr
(bad)
(bad)
cs
dec
movs
add
push
jle
pop
es
into
aad
cld
xor
in
sub
call
mov
jno
into
cmp
iret
pop
adc
sbb
jl
ins
dec
cmps
push
jbe
mov
jb
mov
sbb
pop
les
push
loopne
lods
std
aam
ret
mov
mov
mov
push
outs
sbb
scas
daa
test
and
cwde
ret
ins
mov
push
(bad)
in
pop
mov
adc
imul
sbb
mov
popf
jnp
cmps
xchg
icebp
clc
dec
inc
dec
jne
movs
jo
push
repz
pop
sub
mov
mov
xor
out
adc
ret
ror
xchg
sub
mov
jmp
cwde
out
xchg
jmp
cmp
out
pop
sbb
jnp
push
mov
cs
scas
mov
cmps
inc
je
pushf
cmp
inc
and
mov
fdivrp
xor
fisubr
adc
outs
fsub
scas
cld
cmp
std
adc
clc
call
fcomp
out
mov
pop
rcr
pop
test
test
xor
jecxz
dec
repnz
pop
idiv
daa
cdq
inc
push
stos
inc
push
ror
mov
sub
out
das
cmps
adc
ins
aad
popa
sub
icebp
inc
or
sbb
fstp
pop
out
loop
mov
(bad)
push
sbb
xchg
dec
popa
xchg
pop
jae
inc
xchg
mov
and
xchg
adc
xchg
hlt
in
mov
dec
pusha
adc
jnp
sbb
mov
shl
leave
xchg
mov
xchg
repz
pop
stc
dec
inc
push
cmps
mov
push
ret
enter
xchg
popa
fadd
push
(bad)
and
(bad)
and
nop
nop
sub
pop
icebp
mov
rcr
and
jne
sar
imul
add
cs
jno
in
mov
dec
int3
inc
ins
(bad)
and
push
cmp
mov
mov
add
push
das
cmp
add
call
fs
xchg
shr
lea
lds
pop
clc
xchg
stc
pop
dec
int
push
ret
fstp
add
mov
bound
dec
sbb
mov
sbb
div
stos
retf
lods
das
adc
sbb
inc
loop
inc
adc
popf
cmp
movs
outs
(bad)
js
sbb
mov
cmp
fisubr
sar
adc
rol
mov
lods
mov
jmp
xchg
shr
(bad)
(bad)
jg
dec
mov
mov
mov
push
pop
(bad)
je
sbb
mov
rcl
dec
sbb
mov
add
sub
adc
and
push
out
mov
mov
xor
in
shl
aas
jnp
dec
jmp
sahf
ds
dec
cmps
enter
lahf
cwde
lock
imul
dec
mov
inc
div
pop
jg
mov
dec
push
adc
sahf
mov
scas
xchg
lea
addr16
sub
ret
ja
test
push
cmps
movs
xchg
mov
out
pop
xor
das
mov
enter
mov
mov
push
xor
dec
jae
stos
xlat
stos
add
enter
jecxz
outs
jae
xchg
sti
aaa
jne
scas
cmp
fcmovnbe
in
dec
or
adc
rcl
jmp
movs
jmp
inc
push
mov
icebp
fild
icebp
stos
xchg
sbb
sbb
sub
inc
shl
jle
mov
xchg
jge
add
xor
(bad)
push
ficomp
sbb
cmp
jg
and
rcr
inc
shl
sbb
lds
sbb
icebp
mov
jnp
loope
retf
js
ret
push
or
adc
icebp
stc
scas
dec
add
mov
cli
xchg
test
adc
aas
inc
xchg
and
movs
xor
into
cmps
movs
mov
mov
jl
jecxz
retf
enter
rcr
mov
into
and
std
icebp
enter
pop
fidivr
inc
cli
or
push
dec
out
lods
test
adc
xor
mov
ss
inc
imul
rol
sub
loope
inc
fwait
add
arpl
xchg
mov
loop
jg
sbb
inc
mov
test
and
daa
je
pop
ins
jo
fiadd
mov
xor
push
fild
dec
aam
sub
(bad)
mov
push
sbb
push
stc
mov
inc
daa
sbb
test
into
imul
es
aad
test
xchg
pop
adc
push
enter
data16
and
(bad)
leave
adc
inc
and
repz
mov
(bad)
push
xor
pop
in
inc
push
mov
sbb
jno
xchg
lahf
bound
out
inc
out
(bad)
inc
fnstsw
or
pop
in
test
xchg
pushf
mov
rcr
int3
push
movs
call
and
ret
push
push
scas
mov
fwait
(bad)
sbb
ror
dec
push
push
cmp
jp
icebp
jbe
xor
(bad)
loopne
mov
loopne
jmp
loopne
adc
pop
dec
add
sbb
and
adc
and
retf
cld
and
out
jl
aam
es
push
sahf
in
mov
mov
ja
lahf
inc
and
loope
iret
frstor
imul
jae
inc
cmc
ror
test
add
fld
out
ror
mov
mov
pop
sar
repz
enter
fisub
or
rol
cmp
jne
sbb
(bad)
mov
rcl
in
scas
jmp
sbb
jmp
push
(bad)
movs
call
and
cmps
inc
xchg
and
test
pop
imul
xchg
repz
mov
jg
mov
dec
pop
hlt
ret
xchg
inc
mov
loope
cld
cs
cvtpi2ps
outs
and
pop
adc
mov
add
mov
into
movs
push
push
inc
push
fiadd
(bad)
dec
cli
push
je
add
repnz
push
mov
mov
ja
lea
jnp
push
ds
das
cmps
popa
retf
jae
imul
mov
(bad)
out
mov
inc
mov
(bad)
lock
adc
jnp
adc
nop
loopne
(bad)
pop
pop
sbb
xchg
adc
mov
sub
and
test
push
pop
icebp
mov
nop
mov
lods
sub
push
cmp
and
sbb
div
pushf
repz
(bad)
mov
mov
xchg
xor
mov
jo
jne
cmp
push
outs
push
(bad)
retf
inc
stc
(bad)
or
add
pop
push
jp
push
(bad)
mov
sbb
mov
jne
sub
push
popa
add
mov
cmp
push
and
jo
retf
test
pop
pusha
pushf
xlat
(bad)
retf
nop
push
xchg
nop
icebp
mov
or
les
inc
cli
fisttp
les
push
jg
lahf
xor
push
rol
in
add
xchg
dec
or
mov
call
xchg
dec
push
push
pop
mov
into
je
inc
cld
pop
xor
mov
cmp
in
jl
arpl
jae
mov
outs
je
leave
sub
pop
jae
push
shr
stc
nop
mov
jb
add
lock
inc
out
sub
push
(bad)
add
sbb
mov
je
aaa
rol
movs
sbb
fst
pop
xor
mov
call
bound
push
xchg
push
pop
mov
mov
sbb
pop
sub
lods
dec
cwde
je
scas
dec
js
ror
sub
fisub
xchg
je
sti
mov
dec
push
pop
push
lds
add
mov
in
adc
sbb
neg
pop
neg
ja
test
bound
out
aam
mov
mov
pop
mov
dec
loopne
mov
cld
sbb
xor
cmp
cdq
rcr
cld
cld
fcom
movs
push
rcl
and
cmp
fnstsw
inc
test
rcl
xchg
jo
les
xchg
aad
push
das
jbe
push
push
mov
pop
push
sbb
sub
gs
into
sbb
mov
adc
je
push
addr16
stos
leave
push
stc
xor
sub
xchg
imul
inc
inc
mov
ins
ins
fnstsw
mov
int3
sbb
and
lahf
sbb
jle
mov
mov
jbe
loopne
mov
adc
cmp
adc
dec
adc
pop
push
fimul
or
mov
add
popa
adc
pop
jno
fdiv
arpl
xchg
add
mov
cmp
cld
pop
call
in
fdivr
mov
push
mov
shl
xchg
jnp
pop
aam
test
xchg
lock
cwde
sbb
(bad)
push
lods
mov
xchg
je
xchg
and
push
rcl
hlt
repnz
test
cmp
xchg
sub
jno
shl
nop
in
jb
lahf
icebp
mov
imul
js
sahf
aas
sub
sti
xor
xor
cwde
jno
add
jmp
jae
inc
or
inc
and
mov
cmps
adc
cmps
movs
mov
mov
fdivr
jle
and
mov
outs
out
adc
shl
inc
std
push
add
inc
pop
stos
(bad)
sub
sub
xor
add
cdq
loope
aaa
sub
(bad)
popa
test
mov
arpl
(bad)
mov
into
sub
mov
mov
pcmpeqw
xchg
out
dec
push
sub
(bad)
or
sti
int
hlt
xchg
arpl
add
jle
jnp
shr
les
or
add
xchg
repnz
mov
cmp
fistp
xchg
mov
lds
mov
mov
pop
cmp
je
jne
push
in
sub
movs
pop
dec
int
fndisi(8087
add
ins
jne
shl
push
mov
mov
loope
mov
mov
sbb
hlt
xchg
nop
repz
push
movs
xor
outs
pop
sti
adc
mov
retf
adc
movs
fwait
aaa
(bad)
stos
mov
xchg
push
adc
jmp
out
xor
ret
ja
xor
add
inc
cmps
sub
inc
jb
in
add
cmp
jl
and
(bad)
dec
shl
dec
sub
aad
mov
call
rol
repnz
mov
mov
or
push
push
fst
cld
aad
xchg
loope
sub
sbb
and
xchg
sbb
scas
into
aam
xchg
sbb
out
push
imul
hlt
(bad)
iret
or
xchg
xor
adc
mov
jbe
shr
jecxz
dec
jge
iret
and
mov
jecxz
out
pop
push
mov
test
mov
lods
jo
push
jge
xchg
mov
fldcw
fist
xchg
and
dec
jbe
in
mov
int
cmc
xchg
mov
pop
stos
mov
add
test
adc
or
scas
addr16
test
pop
dec
iret
or
mov
fs
lods
jne
push
movs
or
inc
and
inc
cmp
inc
cwde
fs
enter
mov
inc
pop
and
pop
push
inc
mov
pop
call
in
loope
pop
in
mov
pop
jno
sbb
sbb
(bad)
lods
adc
xor
add
dec
jae
out
xchg
push
addr16
adc
jo
jp
dec
popf
push
daa
sub
call
lea
add
sbb
push
dec
cmp
outs
ja
jo
add
jp
inc
push
loope
mov
out
mov
dec
inc
push
pop
sbb
outs
fnsave
addr16
inc
and
lds
mov
and
pop
xchg
lods
jnp
push
mov
pop
and
arpl
call
lahf
dec
xchg
into
cmps
fst
int
push
xor
daa
pop
repz
stos
jo
out
sldt
scas
cmp
lods
outs
xchg
bound
adc
inc
cs
pop
inc
jmp
pop
je
and
int3
inc
xor
test
mov
jb
mov
dec
inc
mov
lock
repz
inc
mov
or
xchg
sbb
cmp
mov
nop
out
adc
mov
in
mov
cmp
cmp
sub
and
adc
sahf
xor
scas
test
lock
adc
jmp
cmp
ror
std
shr
pop
fwait
mov
int
scas
jmp
cmp
cld
lds
jne
pop
pop
dec
and
cmp
test
or
lock
idiv
mov
mov
jl
add
push
div
aaa
lods
or
(bad)
mov
dec
mov
inc
call
xor
stos
and
je
mov
add
nop
dec
pusha
cmps
xor
cmp
xchg
cmps
fsubr
jns
add
cmps
and
inc
fsub
pop
fs
cmp
out
jnp
cmp
or
jnp
ins
xlat
sub
adc
or
xor
mov
or
fsubp
arpl
sub
fisub
sub
popf
jp
inc
dec
and
pop
mov
les
test
and
test
xchg
aam
xchg
add
call
sub
loopne
sub
jne
xchg
jl
arpl
mov
lds
push
sbb
call
lds
int3
jno
in
imul
shl
and
into
dec
nop
push
and
mov
and
push
add
rcr
and
mov
and
cmc
and
mov
add
in
or
hlt
in
xchg
popa
cmp
bound
mov
inc
sbb
mov
xchg
(bad)
loope
kortestb
jecxz
jb
mov
fdiv
js
and
or
jl
dec
test
in
loop
fist
sbb
in
cmps
jg
sahf
xor
stc
pop
stos
int3
mov
xor
int3
ss
mov
leave
retf
mov
dec
xchg
xchg
pop
cdq
sbb
fcomp
jbe
gs
jmp
inc
fldcw
or
ror
pop
adc
jle
push
aaa
mov
clc
es
mov
movs
loop
inc
pop
mov
xlat
pop
xchg
xor
shr
idiv
outs
aas
push
xchg
mov
push
sub
in
lock
pushf
lahf
shr
sbb
(bad)
mov
loop
in
sbb
sar
or
sbb
adc
jp
out
out
gs
dec
ins
inc
imul
shl
mov
in
sub
push
inc
jl
bound
aas
(bad)
ret
push
sub
retf
jns
sub
test
mov
pushf
pop
xchg
rcl
jp
es
mov
dec
retf
xor
pop
jae
or
dec
push
sbb
in
sti
push
retf
mov
int3
xchg
das
pop
icebp
div
loop
sbb
dec
mov
jmp
jp
fucompp
dec
mov
sub
popa
pushf
add
ds
inc
pop
xchg
sbb
call
push
jae
mov
dec
jmp
scas
dec
addr16
repnz
fucom
arpl
(bad)
(bad)
loopne
imul
add
xchg
and
lea
or
mov
fisttp
mov
adc
lods
mov
xor
inc
xor
call
jnp
popa
xchg
and
sbb
fsub
pop
cmps
inc
jne
maxpd
inc
dec
inc
inc
sti
arpl
pop
iret
sahf
xchg
addr16
sahf
out
mov
push
pop
movs
icebp
fst
xchg
loopne
dec
mov
dec
scas
xchg
inc
or
inc
jmp
push
mov
mov
scas
aas
test
jo
mov
push
daa
sbb
mov
and
push
(bad)
lahf
or
dec
stc
cmp
jnp
shr
js
popf
fs
addr16
adc
add
sbb
sbb
xchg
test
sbb
rcr
lea
scas
sub
cs
jo
mov
imul
dec
out
sti
dec
jno
ret
inc
mov
out
jecxz
faddp
cwde
pop
lods
movs
adc
test
mov
or
add
inc
call
mov
mov
pop
dec
cmp
pop
xlat
sub
or
jmp
sbb
mov
sahf
jl
push
inc
sahf
test
enter
pop
imul
or
inc
js
jle
lock
inc
imul
push
leave
add
jae
fild
into
clc
push
movs
pop
sbb
stos
lock
in
jns
pushf
outs
adc
jmp
ins
jl
aas
sti
add
xor
lods
in
cmp
int
dec
sub
int
sbb
sub
mov
mov
loope
adc
es
sub
mov
loope
add
and
adc
jmp
fdivrp
dec
sahf
xor
in
(bad)
ins
out
scas
sub
lahf
data16
aam
call
mov
jb
stc
xor
stc
mov
mov
pop
jmp
stos
jnp
lea
das
popa
jg
xchg
cmp
sahf
and
cld
(bad)
jmp
test
ret
cmp
add
lods
addr16
adc
mov
inc
pop
jno
outs
sar
aam
cmp
popf
stc
mov
arpl
movs
(bad)
fistp
mov
or
lock
xchg
mov
ss
mov
arpl
int3
js
xor
fnstsw
fsubr
nop
mov
mov
xor
test
mov
jbe
sub
test
push
jp
pop
sub
cmc
mov
dec
add
or
xchg
leave
sbb
sub
lods
and
sbb
inc
int3
xchg
add
mov
dec
cs
xchg
jnp
dec
mov
and
pushf
adc
stc
mov
jmp
sub
inc
sub
fisubr
inc
fld
loop
sub
and
fdivr
and
mov
sub
add
stos
xchg
popa
daa
lock
pop
loop
das
adc
cwde
movs
(bad)
sbb
add
retf
inc
daa
outs
inc
pop
shl
(bad)
mov
xchg
lods
or
cmp
retf
mov
sbb
mov
mov
pop
popf
mov
sub
repnz
and
int3
mov
mov
int3
xchg
push
adc
push
cmp
cmp
aaa
iret
add
out
jmp
pop
sub
mov
dec
mov
mov
popf
call
sar
or
ins
lahf
push
inc
rcr
jbe
mov
(bad)
jmp
adc
repnz
in
stos
les
fs
daa
push
jne
cmp
mov
jno
ds
cmps
cdq
pop
out
sbb
fwait
popw
xor
sub
or
mov
test
repnz
cmp
lock
clc
push
push
or
bnd
dec
dec
pop
pop
or
push
popa
mov
pusha
scas
push
xor
add
in
or
outs
dec
in
xchg
(bad)
lock
mov
retf
inc
mov
clc
dec
xchg
push
cmp
rcl
pop
je
mov
pop
add
or
dec
xor
pop
scas
fucomi
js
test
(bad)
xor
cs
adc
or
stos
cmp
popa
or
and
xchg
ins
sbb
sbb
sub
push
pop
cmc
cmp
sub
in
movs
movs
xor
adc
push
(bad)
pop
inc
xchg
fldcw
push
ja
or
mov
and
addr16
add
aam
and
or
and
jnp
aaa
les
inc
js
push
jmp
les
sbb
and
call
fadd
test
dec
sub
sub
sbb
cld
xor
cmps
pop
or
(bad)
lock
inc
div
sbb
cmp
jmp
inc
add
sbb
mov
and
fwait
dec
sbb
sbb
sub
sbb
lock
xchg
sbb
pop
pop
inc
sub
scas
cmps
dec
xchg
xchg
cdq
lds
xor
lods
xor
adc
into
retf
adc
fisttp
mov
sbb
ja
inc
and
adc
mov
jb
sub
mov
sub
mov
mov
ret
xchg
fdivr
xchg
add
call
clc
cmps
rcl
sub
jge
pop
add
jnp
xor
inc
imul
push
leave
stos
scas
into
scas
mov
pop
stos
ret
mov
sbb
jnp
mov
mov
pop
jl
sub
retf
pop
push
inc
stos
aad
pop
inc
mov
push
dec
ins
(bad)
jl
out
dec
fistp
out
jp
jp
popf
push
loopne
pop
and
or
xchg
cdq
xor
sbb
mov
pop
(bad)
mov
xor
sahf
sahf
test
shl
sub
push
sub
mov
mov
add
mov
cmp
add
dec
in
mov
mov
sbb
out
inc
fisttp
adc
adc
inc
test
scas
cs
(bad)
lahf
xchg
push
popa
cs
call
ins
ds
ror
lods
push
ins
shr
push
mov
inc
or
pop
dec
mov
lahf
aas
adc
dec
and
pop
test
push
ins
jge
push
fsubrp
not
sbb
std
cwde
mov
imul
adc
sbb
(bad)
ss
push
retf
ror
test
shr
fcomp
inc
pop
test
sbb
sub
scas
stos
push
je
(bad)
and
xor
loope
pop
push
jle
sbb
test
mov
loop
mov
mov
mov
ficomp
cmps
inc
add
and
inc
pop
mov
rol
stos
cwde
mov
xchg
adc
jg
dec
fst
mov
lds
jbe
shl
bound
add
mov
inc
push
or
popf
(bad)
push
ror
ds
or
cmp
push
test
pop
sub
rol
or
scas
daa
adc
sub
retf
lock
cmp
les
movs
stc
imul
xlat
imul
dec
sbb
sbb
adc
jmp
cmps
pushf
dec
es
cmp
push
bound
in
inc
mov
fwait
into
rol
and
mov
inc
scas
push
cmc
scas
retf
and
iret
push
sub
cs
add
bnd
ins
inc
in
cld
int
std
dec
cwde
pop
jmp
outs
in
push
sub
je
sbb
aas
inc
sub
lock
mov
and
jne
cmp
xlat
stc
sar
pop
push
neg
sti
cmp
add
add
fs
stos
jp
sbb
nop
mov
adc
and
cmp
bound
pop
and
cwde
mov
stos
jmp
inc
inc
sar
mov
pop
sar
and
push
mov
jbe
pushf
push
inc
outs
jb
inc
stos
mov
push
in
imul
outs
aam
(bad)
lods
js
pop
jb
inc
repz
cmp
pop
add
lea
and
into
inc
jb
xchg
dec
mov
hlt
imul
and
mov
xor
call
pop
mov
scas
(bad)
mov
jb
sub
jo
adc
jae
push
pop
icebp
ficom
push
fwait
sbb
retf
or
lods
pushf
push
xlat
jno
push
mov
rcr
into
adc
es
dec
fstp
pusha
push
std
fistp
sbb
push
add
outs
mov
loop
std
xor
pop
into
jmp
fwait
push
jmp
fcmovnbe
leave
lods
(bad)
cmp
mov
mov
imul
adc
cmp
pop
in
clc
mov
movs
add
jae
pop
jne
and
call
jmp
adc
cli
inc
mov
aaa
hlt
pusha
mov
and
xor
push
adc
mov
icebp
or
mov
mov
or
pop
rol
test
push
outs
or
jb
jno
jne
in
xchg
sub
sub
call
ret
mov
jmp
movs
fnstenv
sbb
cmp
jno
mov
fst
(bad)
shr
mov
inc
mov
inc
fstp
in
std
mov
pusha
or
cmp
movs
sub
xor
xchg
inc
push
mov
pop
cmp
daa
(bad)
loopne
rcl
(bad)
sub
pop
sbb
ja
push
loopne
mov
and
push
xchg
mov
(bad)
jbe
lahf
sbb
push
mov
sub
inc
jl
mov
iret
xchg
sar
pop
and
xor
mov
jmp
outs
adc
sub
lahf
stc
fild
cmps
or
add
cmp
icebp
sub
lea
fcomp
into
lods
jmp
mov
(bad)
push
pop
pop
pop
mov
dec
push
add
pop
push
inc
mov
xchg
mov
ror
mov
sahf
fsubp
xor
ret
iret
(bad)
or
mov
or
jb
out
inc
pop
bound
call
cld
mov
jecxz
pop
and
adc
push
jmp
loope
sub
mov
mov
ds
mov
add
ja
mov
je
out
cmpxchg
test
mov
(bad)
sub
or
(bad)
sahf
in
mov
movs
inc
stos
pop
bound
add
pop
gs
adc
es
arpl
jg
and
or
nop
in
or
test
xchg
push
loopne
enter
inc
inc
dec
xchg
mov
add
xchg
cmp
es
ss
(bad)
mov
rcr
mov
test
or
or
fmul
pushf
pop
ja
xor
jmp
iret
mov
cmp
popf
outs
movs
push
mov
xlat
jae
mov
jnp
xchg
daa
and
and
lods
jmp
mov
add
jmp
inc
arpl
arpl
add
(bad)
into
mov
inc
push
xor
xor
and
sbb
mov
mov
jae
jmp
adc
sub
mov
pop
xlat
das
inc
sub
mov
gs
jno
shl
cmp
stc
push
lahf
loope
test
arpl
mov
adc
adc
add
rcr
and
xchg
(bad)
sub
xchg
ret
mov
stos
push
shl
cmp
sub
imul
sahf
mov
xor
loopne
mov
push
imul
mov
xchg
jno
dec
mov
and
jnp
and
aas
and
xchg
movs
ja
cwde
pop
das
mov
das
pop
mov
and
shl
fld
push
je
adc
les
jl
xor
lahf
out
nop
xchg
aam
pop
adc
push
loope
and
pop
mov
test
retf
pop
lds
jno
je
push
or
daa
cmps
push
xor
jne
retf
inc
and
cdq
xchg
and
and
jnp
(bad)
movs
mov
or
push
mov
test
and
jae
pavgw
je
ror
mov
lea
xor
repz
sbb
hlt
and
call
inc
pop
add
inc
aaa
push
and
(bad)
mov
cmp
std
popa
jl
movs
or
shl
dec
pusha
adc
xor
test
jl
dec
mov
push
mov
addr16
dec
cwde
aaa
mov
mov
cli
retf
mov
dec
and
pop
idiv
pop
loope
jmp
jb
mov
int
mov
cwde
lds
cli
mov
dec
and
push
xor
pminsw
test
and
adc
lock
mov
sub
fnstsw
fmul
data16
(bad)
jae
(bad)
inc
or
(bad)
mov
pop
mov
adc
cmp
stc
icebp
aas
mov
sub
inc
cmp
repnz
enter
stos
xor
add
and
cmp
dec
jp
dec
cmc
sub
push
or
dec
test
movs
dec
xchg
sub
xchg
inc
xchg
pop
mov
movs
out
pop
pop
jge
leave
repz
jns
ret
add
movs
loope
add
daa
jmp
int3
and
adc
(bad)
in
ret
imul
mov
scas
pop
or
popa
data16
std
jge
imul
cs
mov
dec
loopne
mov
mov
mov
and
fdiv
lods
mov
popf
inc
js
stc
retf
xchg
jns
push
(bad)
in
inc
jmp
sub
lods
(bad)
fimul
in
and
ficomp
or
push
aaa
mov
int
xchg
adc
mov
pop
xlat
rol
lods
and
xor
adc
xchg
mov
jo
xor
mov
pop
adc
inc
mov
push
push
sbb
mov
lds
push
mov
add
inc
out
(bad)
daa
push
fwait
jl
nop
stos
jecxz
retf
out
push
push
nop
pop
fdiv
adc
pop
dec
sbb
add
sub
jo
neg
outs
xabort
int
inc
(bad)
push
push
pop
mov
test
sub
cmp
add
push
int
ja
call
or
adc
fs
mov
in
repnz
jecxz
xor
in
call
sub
sbb
sbb
out
inc
xchg
cmp
hlt
lds
ins
sbb
test
push
dec
iret
adc
ds
daa
shr
cmp
addr16
sbb
sub
shl
pushf
xor
loope
push
inc
movs
leave
or
pop
dec
cmp
clc
add
rcl
cld
(bad)
sub
cmp
test
pushf
xor
popa
inc
dec
fidivr
xchg
out
in
and
repnz
add
popa
out
sbb
into
cld
cmp
stos
mov
stc
jae
test
jecxz
push
dec
iret
clc
scas
dec
mov
sub
jl
dec
enter
in
pop
jae
clc
stos
xor
pop
jae
pop
mov
sub
push
icebp
push
stc
imul
mov
rcl
test
retf
sbb
lahf
pop
inc
fcomp
dec
les
es
daa
std
cmps
inc
retf
mov
pop
(bad)
xchg
pushf
in
cmp
mov
(bad)
repnz
jns
cmp
sub
add
xchg
retf
imul
div
call
mov
sub
inc
cmps
mov
xor
pushf
pop
shl
mov
stc
int
fsubp
iret
daa
add
movs
sti
ins
jno
cld
lods
lods
cdq
xchg
sub
add
inc
cli
shl
mov
mov
jno
aaa
movs
pop
ins
ficom
push
mov
fnsave
push
xor
xor
cmp
inc
movs
mov
xor
ins
inc
iret
(bad)
fisttp
dec
mov
lahf
xlat
(bad)
ja
(bad)
fidiv
inc
cmp
retf
and
push
push
jno
and
and
mov
ror
lea
sbb
and
(bad)
lods
retf
enter
lgs
cmp
inc
mov
mov
push
pop
ror
xor
pand
jg
pop
pop
push
pop
dec
fld
aas
jle
mov
mov
lods
sti
daa
dec
and
(bad)
fiadd
cdq
fwait
scas
stc
lahf
outs
(bad)
popf
push
dec
retf
shl
mov
iret
leave
mov
cdq
xchg
push
shl
rol
mov
ret
repnz
loop
xor
push
loope
cli
push
mov
lods
aam
jle
mov
mov
lahf
pop
fidivr
cmp
add
xor
sbb
pcmpgtw
fwait
xchg
and
add
lods
adc
mov
add
xor
add
lahf
mov
(bad)
push
repnz
adc
movs
pop
popf
imul
jb
loope
lock
lods
int
xchg
mov
cmps
test
adc
leave
push
fs
retf
scas
fistp
lods
sub
ds
mov
test
jmp
(bad)
pop
out
mov
dec
cld
jne
jmp
ins
adc
pop
test
data16
cmp
gs
sbb
jecxz
fsubrp
scas
out
call
or
mov
xor
xor
cli
stc
dec
call
test
rdtsc
add
and
popf
add
pop
neg
iret
repz
mov
sub
add
mov
pop
lds
scas
mov
fs
or
add
xlat
loope
mov
mov
sbb
retf
test
push
ss
daa
int
mov
push
xchg
or
les
scas
xchg
push
ja
add
frstor
stc
mov
jmp
and
out
inc
lds
in
adc
scas
in
jp
jne
cmp
popf
inc
retf
push
add
adc
xor
icebp
shl
(bad)
(bad)
(bad)
inc
cld
or
ficomp
cs
adc
push
adc
stc
mov
inc
jns
and
sbb
cmp
shr
cmp
jnp
jb
fist
dec
mov
sub
sbb
test
(bad)
repz
adc
mov
or
xchg
test
mov
sbb
adc
or
adc
mov
(bad)
call
mov
or
push
or
push
mov
mov
int3
jecxz
mul
add
xlat
lods
call
int
mov
sti
or
jmp
xor
mov
cli
icebp
popf
cmp
lods
xor
sub
push
sar
lock
xor
pop
or
lock
sub
outs
and
arpl
xor
call
push
jmp
dec
repnz
loop
mov
shl
cmp
dec
jb
test
cmp
jnp
arpl
mov
das
retf
loope
cmp
rcl
inc
and
push
outs
push
into
jbe
int
add
push
sti
std
adc
xor
or
dec
push
and
enter
and
test
xor
jge
popa
call
cmp
inc
sbb
xlat
call
pop
dec
cmp
(bad)
mov
push
mov
int3
or
loopne
and
clc
push
cmp
outs
inc
mov
jo
clc
shl
and
iret
pop
(bad)
in
or
adc
iret
add
cmp
cmp
xchg
ins
js
add
mov
pop
adc
outs
jo
iret
xchg
in
pop
xlat
into
in
inc
mov
lahf
or
pop
(bad)
xchg
repnz
push
or
pushf
imul
pop
mov
pop
push
popa
mov
xchg
xchg
addr16
in
fs
or
shl
(bad)
mov
stos
jg
add
jp
int3
or
xchg
push
sbb
cmp
mov
sbb
xchg
or
inc
add
jle
leave
enter
inc
cli
and
lock
enter
push
pushf
imul
movs
xor
jne
cmp
daa
mov
cmp
lahf
sub
nop
mov
mov
imul
stc
int
fld
push
ror
pop
pop
lods
xor
push
or
adc
sahf
fmul
cmps
sub
cld
jno
retf
and
in
enter
retf
std
pop
xor
aad
inc
mov
cmp
imul
pop
mov
xor
inc
fwait
movs
and
cmp
jg
lods
retf
inc
lahf
retf
jle
gs
mov
cli
retf
lea
mov
xchg
adc
jbe
and
mov
pop
and
shl
les
push
out
ficomp
inc
mov
jg
dec
out
fwait
test
pushf
dec
ror
mov
int
scas
xor
adc
call
adc
mov
sbb
cld
mov
mov
data16
dec
push
loop
pop
jns
rcr
loope
jmp
push
loop
mov
mov
inc
push
cmps
jo
pusha
pop
and
popa
mov
aaa
std
mov
add
sub
xor
popa
add
cmp
dec
xchg
and
inc
fstp
ss
mov
ror
dec
retf
and
enter
inc
jns
ja
outs
add
cmp
cs
mov
dec
jae
sahf
mov
enter
xor
pop
jmp
(bad)
test
rol
cs
sbb
add
rol
lods
xchg
neg
jae
test
les
ja
test
adc
leave
retf
jp
xchg
pop
cld
(bad)
mov
xor
sbb
ss
jmp
popf
xor
pop
inc
push
mov
mov
mov
rcr
xchg
mov
mov
(bad)
pop
xchg
push
sub
daa
or
ins
les
pop
push
test
test
jecxz
das
push
cmp
out
pop
mov
inc
push
mov
mov
mov
push
mov
push
nop
int3
stc
in
fstp
js
cmc
fsubr
jns
sbb
mov
and
push
ja
push
outs
shl
js
stos
repnz
cmp
mov
mov
stos
and
lds
nop
mov
xchg
push
fs
stc
inc
xchg
xchg
clc
into
aad
pop
jbe
sub
cmp
push
out
lidtd
cmc
arpl
mov
mov
mov
inc
pop
push
stos
daa
mov
xchg
xchg
frndint
xor
mov
stos
cmp
sub
or
addr16
scas
setg
aad
icebp
dec
jl
iret
or
sar
pop
dec
int3
jae
lods
xor
mov
lods
jl
cmp
pop
icebp
jg
lds
ins
stos
cmps
jne
fdivr
popa
(bad)
lods
or
xchg
rol
add
stos
scas
popf
mov
out
mov
test
test
ja
enter
in
shl
add
xor
xchg
mov
repz
adc
add
mov
outs
cdq
clc
imul
adc
jmpw
xchg
mov
dec
xor
and
bound
jge
cmc
and
call
or
loope
pmullw
add
fxch
sub
pop
pmulhuw
gs
or
jmp
enter
dec
push
ficomp
or
cmp
nop
imul
adc
dec
cmps
into
cmp
sub
daa
pop
sub
or
shr
test
rcr
js
test
push
test
xchg
mov
dec
pusha
mov
add
inc
jl
push
fwait
jmp
(bad)
push
test
mov
fsubr
inc
sub
sbb
into
in
aad
jg
loop
jge
mov
cmp
test
push
xchg
out
inc
dec
cmp
push
push
fst
fldcw
test
into
dec
cwde
mov
int3
aas
popf
pop
inc
xor
data16
cmp
and
ja
add
sbb
adc
adc
fist
cli
dec
je
mov
call
clc
pop
je
add
xor
bound
fst
add
mov
outs
xchg
or
adc
les
mov
in
add
cmp
mov
xor
mov
retf
adc
adc
out
loope
mov
mov
ins
lea
cmp
jl
mov
dec
push
jmp
fstp
dec
sub
pop
icebp
rcl
inc
adc
mov
push
bound
lea
or
outs
mov
push
mov
ds
mov
pop
adc
sbb
call
test
pop
xor
sub
pusha
jns
cmc
mov
in
test
or
js
scas
lea
(bad)
and
movs
daa
jmp
daa
iret
jp
jle
adc
jl
into
jne
repz
add
pop
and
xchg
cmc
outs
mov
push
and
cmc
add
test
mov
inc
xchg
fstp
jg
lea
ds
std
add
cmp
sbb
jo
xor
add
jmp
mov
pop
(bad)
pusha
enter
pop
std
xchg
test
outs
xchg
js
sub
das
stos
rcr
in
je
xchg
(bad)
mov
inc
fisub
mov
(bad)
cli
add
jp
in
lods
scas
sub
or
scas
leave
add
xchg
(bad)
aaa
push
sbb
and
aaa
lock
popf
and
or
push
pop
pop
push
push
dec
mov
lock
fs
inc
aam
jb
adc
movs
jnp
mov
mov
mov
push
ficomp
pushf
rcl
sahf
movs
pop
enter
jb
or
gs
ins
mov
add
xchg
push
add
xor
and
pop
cmp
(bad)
aad
imul
cld
outs
cmp
ins
xor
out
call
dec
mov
dec
gs
sub
push
fmul
fldenv
sub
mov
adc
cmp
mov
mov
jg
inc
cmp
cmp
inc
sbb
pop
cmps
jg
jmp
or
out
adc
jle
mov
jecxz
xor
(bad)
sbb
and
daa
icebp
mov
or
imul
mov
repz
imul
jg
bound
or
(bad)
pop
mov
xchg
cmp
sub
aas
jo
jbe
iret
gs
mov
repnz
mov
sub
repz
sti
jae
addr16
stc
icebp
and
pop
js
rol
cmp
pop
or
movs
shl
in
mov
adc
mov
jmp
fcmovu
imul
xor
outs
push
dec
inc
xor
dec
into
dec
and
xchg
call
leave
inc
out
nop
sub
mov
data16
adc
gs
pushf
outs
mov
shl
ds
xchg
into
sub
and
addr16
pop
jns
das
pop
ss
daa
sar
push
ss
pusha
mov
clc
jecxz
je
mov
jge
fld
in
inc
sar
sbb
das
out
je
push
pusha
or
ins
jo
and
mov
repnz
mov
and
xor
ins
mov
mov
mov
xchg
xor
cmps
scas
mov
aam
(bad)
and
(bad)
jle
mov
es
loop
test
or
ins
pop
sahf
xchg
cli
ret
fimul
pop
js
mov
adc
out
mov
dec
aas
aaa
jne
pusha
mov
out
sti
sbb
dec
push
sub
movs
bound
aas
xchg
push
loop
daa
into
adc
pop
and
les
jmp
shr
loop
push
repnz
xor
sbb
add
aaa
aas
stos
movs
and
fldcw
push
fisubr
sub
push
jns
cmp
xlat
pop
push
push
retf
cmp
enter
adc
addr16
add
fdiv
jne
mov
ins
mov
mov
movs
jo
jo
mov
sub
clc
jnp
cld
(bad)
ror
xlat
stc
idiv
xor
repnz
mov
in
pusha
pop
or
cmp
mov
aaa
aam
mov
adc
cmp
cmp
add
mov
outs
ins
xor
push
gs
out
cmp
ins
xor
mov
or
(bad)
dec
dec
out
cli
cmp
add
jle
xchg
stos
cmp
pop
imul
pop
in
out
jae
retf
call
push
shl
push
xor
sbb
cmp
movs
call
fnstenv
jecxz
in
pop
fld
mov
and
mov
(bad)
jmp
mov
scas
xor
pop
ins
fs
dec
push
jae
jecxz
sar
je
call
icebp
jmp
or
mov
cmc
push
jmp
mov
xchg
mov
mov
shl
xchg
push
stos
cmp
das
mov
jecxz
push
fsub
stos
pop
outs
repz
sbb
in
or
loope
repnz
scas
push
jl
push
xor
push
std
test
add
mov
and
jl
jnp
cmps
adc
xor
push
jbe
js
clc
test
adc
mov
add
lods
xlat
bound
jb
stc
jl
out
jno
mov
aaa
push
gs
xlat
adc
dec
cmovns
stos
retf
sbb
sti
popf
inc
out
gs
dec
retf
xor
lahf
shr
sbb
(bad)
pop
int3
jb
dec
or
mov
lods
sub
sub
repz
and
mov
cmp
stos
mov
adc
cmp
jae
push
pop
stos
cmp
popf
lock
xchg
loopne
mov
sbb
pushf
scas
sar
sub
push
add
push
(bad)
jae
and
test
test
and
xchg
fdiv
(bad)
js
retf
jl
pop
sahf
aas
lea
in
mov
in
mov
retf
sahf
je
or
in
cmp
popf
pop
nop
int
ret
test
out
int3
fnstcw
js
lods
pusha
xor
push
rol
or
or
mov
push
pop
pushf
sub
in
adc
(bad)
jnp
sbb
nop
push
scas
retf
(bad)
adc
hlt
ja
and
lea
mov
arpl
loope
in
adc
push
(bad)
push
and
adc
mov
mov
mov
cmp
and
fistp
and
sub
je
fsub
xor
sub
outs
dec
pop
mov
(bad)
(bad)
cmp
inc
inc
mov
retf
les
dec
pop
dec
aas
add
frstor
or
sbb
cmp
and
lods
sbb
jbe
fwait
loop
fstp
mov
popf
mov
scas
push
lahf
inc
push
mov
movs
shl
push
leave
fist
dec
jp
movs
cmp
imul
cmc
or
jmp
mov
pmulhw
inc
xchg
push
cmps
aad
aaa
mov
sbb
mov
je
add
adc
push
adc
loop
aaa
inc
cmp
add
or
aad
shl
fs
test
mov
lds
in
nop
std
ss
fdivr
mov
jae
jl
out
ins
fsub
mov
jge
aad
dec
stos
cmp
adc
sub
test
je
or
inc
out
mov
jo
scas
and
js
jmp
pop
ret
pop
xchg
gs
add
ss
add
push
sbb
movs
stos
mov
movs
push
pop
cmp
lea
cmps
cmps
cmp
sub
xor
mov
(bad)
adc
sub
lahf
jp
int
rcl
test
jo
adc
hlt
fnstcw
push
push
push
scas
pusha
cmp
inc
in
mov
fwait
(bad)
bnd
pushf
scas
mov
adc
sbb
dec
inc
inc
adc
mov
hlt
sti
add
mov
mov
cmc
jo
stc
and
adc
ror
xchg
cdq
xchg
js
jle
push
jmp
ss
movs
movs
fsubr
and
shl
call
jns
shl
sti
stos
hlt
movs
mov
and
std
xor
aam
sbb
jns
sar
(bad)
sahf
test
mov
gs
inc
rol
aaa
bound
mov
inc
sub
add
dec
jne
int
cmp
sbb
xchg
call
jg
into
ret
fst
sbb
sbb
mov
jmp
sub
std
jecxz
shr
in
idiv
(bad)
int3
jb
xchg
stos
in
dec
sbb
xchg
push
inc
fld
pop
mov
pop
(bad)
mov
repnz
dec
mov
push
(bad)
fisttp
or
call
jne
ins
push
div
in
mov
cs
loope
jmp
pop
push
sub
cmc
and
dec
idiv
pop
cmc
and
jge
or
lds
xor
and
dec
xor
sub
jbe
and
cdq
pushf
xchg
jecxz
sbb
dec
arpl
scas
mov
sbb
sub
lock
loope
cmp
sub
les
outs
mov
or
push
mov
out
ins
mov
or
lods
mov
sahf
loopne
cli
loopne
sub
fld
bnd
jae
je
test
imul
adc
xchg
in
mov
jns
aas
das
pushf
stos
mov
(bad)
pop
dec
(bad)
cwde
dec
jg
movs
and
and
mov
hlt
dec
movs
push
add
mov
xor
scas
mov
sbb
jnp
loope
or
add
xor
mov
mov
icebp
mov
sub
and
add
stc
cmp
cld
data16
sti
pop
sbb
or
add
nop
stc
inc
aaa
daa
ror
sahf
push
dec
mov
mov
mov
shl
nop
mov
fisub
ret
mov
sbb
mov
idiv
movs
mov
(bad)
cs
sub
int3
cwde
add
or
cwde
div
cs
add
mov
xor
sbb
pop
in
mov
mov
mov
sbb
mov
add
popa
cld
(bad)
cmp
dec
test
stos
dec
mov
jecxz
aad
stc
movs
sbb
dec
dec
pusha
aam
imul
push
sar
mov
cmps
into
fist
nop
or
in
retf
adc
xor
and
jnp
aad
das
xchg
push
and
and
and
and
cld
int
push
aaa
xchg
or
inc
test
sar
daa
out
jns
shr
jmp
fstp
mov
sbb
in
cmp
xchg
jns
mov
add
xor
mov
pop
into
test
add
nop
or
sbb
pop
mov
dec
mov
add
dec
fisttp
loope
not
ret
sbb
jp
fimul
in
cmp
push
or
inc
mov
cs
mov
call
popw
push
or
jl
inc
sub
xor
xchg
addr16
mov
jge
sub
jo
test
cmp
mov
inc
inc
add
jge
ds
adc
mov
into
ins
mov
dec
xchg
scas
jo
jbe
adc
jg
jnp
sbb
inc
mov
xchg
int3
jecxz
mov
pop
stc
(bad)
sbb
in
cmp
into
movs
pop
fst
popa
(bad)
daa
or
fs
enter
jb
xor
retf
sub
test
xchg
cmp
or
ja
xor
popf
or
add
pop
movs
bt
jae
dec
imul
(bad)
jmp
xchg
repz
sbb
cdq
test
stc
(bad)
stos
mov
sbb
xchg
shl
repz
int
cdq
inc
repz
jb
adc
dec
aam
call
gs
lahf
inc
ret
je
pop
dec
hlt
pop
xchg
xor
push
sbb
jl
or
cmova
(bad)
in
call
inc
test
loop
adc
xchg
test
mov
jb
mov
out
popa
or
inc
sub
lods
cmp
pop
mov
int
pushf
xchg
xor
ficomp
imul
imul
push
mov
pushf
sbb
push
adc
(bad)
sahf
das
push
fdivr
sar
dec
mov
mov
pop
jp
jb
std
fadd
jne
loopne
sti
in
(bad)
dec
cmc
(bad)
xchg
xchg
loop
cmp
xchg
cmc
mov
test
sbb
dec
add
addr16
adc
fsubr
fs
xchg
lahf
or
and
adc
aaa
(bad)
sub
pushf
pop
mov
pushf
adc
mov
in
push
ficomp
ret
data16
push
jns
or
xor
scas
pushf
lods
out
mov
stos
js
xor
pop
push
xor
enter
imul
scas
xor
into
adc
xchg
and
xchg
enter
(bad)
jb
mov
dec
xchg
cmp
repnz
or
arpl
ds
pop
test
in
push
addr16
jge
jge
shl
inc
ret
and
sbb
push
ret
into
scas
mov
je
xor
pop
(bad)
sbb
jmp
jmp
es
imul
mov
aas
fadd
stc
(bad)
xor
ins
in
sbb
cs
xlat
jns
ss
(bad)
call
aas
mov
mov
gs
and
mov
lods
and
jne
jmp
mov
inc
sti
mov
not
mov
fimul
xchg
push
imul
dec
mov
ds
cmp
arpl
scas
and
sbb
jae
inc
stc
inc
leave
cmp
push
stc
sbb
out
shl
dec
ins
push
pop
mov
popa
stos
jae
scas
fisttp
push
jnp
cmps
jl
add
loopne
sub
leave
xor
scas
setnp
fcmovnb
js
cdq
jbe
xor
add
push
mov
and
mov
or
mov
jnp
push
iret
bnd
pop
push
or
pop
(bad)
aas
mov
clc
add
stos
lods
push
and
into
xchg
stos
cmps
pop
push
stc
imul
repnz
shr
enter
sbb
lods
shl
cwde
pop
push
scas
ret
adc
hlt
cdq
jno
jns
xor
fadd
sub
pop
xchg
mov
out
mov
inc
dec
sbb
cmc
pop
mov
and
push
xchg
inc
push
sbb
inc
cmp
in
neg
hlt
and
loope
outs
xchg
dec
adc
das
fwait
pop
add
imul
push
dec
inc
loopne
mul
push
imul
sahf
xor
stc
call
in
or
push
dec
iret
outs
pusha
pop
add
sbb
and
push
and
cs
pushf
or
sti
cmp
(bad)
jo
lds
add
cli
push
in
mov
dec
add
inc
or
aaa
xchg
inc
(bad)
mov
cmc
pop
stc
push
les
cmps
(bad)
in
arpl
mov
jecxz
xor
dec
xor
push
mov
mov
lods
scas
jle
das
sub
into
aas
add
mov
test
mov
test
inc
ret
sub
ficomp
add
sub
mov
xchg
popa
stc
push
in
outs
test
rol
arpl
xor
and
push
and
xor
add
data16
in
lds
js
cmc
call
shr
out
jb
mov
test
xchg
push
in
push
xor
ds
repnz
sbb
or
test
sub
out
(bad)
push
and
jns
adc
shl
cmp
cmp
retf
mov
cmp
das
ret
or
add
pushf
fdiv
(bad)
and
pop
popf
jle
js
dec
stos
pop
je
retf
sub
add
add
push
pop
sbb
mov
inc
in
ror
mov
aaa
pop
rol
sub
mov
out
and
mov
das
(bad)
stc
xchg
fidivr
scas
mov
mov
pop
lock
jle
ss
aaa
jae
add
xor
mov
outs
and
push
mov
adc
pushf
mov
in
ja
sti
sbb
stc
mov
inc
mov
cmp
imul
fisub
js
cli
push
ins
jne
test
sbb
out
in
out
aam
and
(bad)
lahf
les
call
jle
sub
cs
out
adc
mov
xchg
in
cdq
add
clc
mov
xor
cmp
sub
pusha
inc
into
adc
or
jno
add
jae
xchg
enter
loopne
in
push
inc
mov
das
leave
or
cmp
add
mov
mov
mov
test
xchg
sbb
call
gs
dec
cmps
pop
xchg
xor
inc
fdivr
add
dec
sbb
ins
(bad)
sbb
rol
daa
mov
lock
ret
cmps
cld
push
loopne
lods
xor
aas
jmp
int
xchg
jle
mov
call
jo
clc
mov
xchg
cmp
repz
cli
adc
or
jmp
out
add
jne
adc
cmp
cmp
mov
adc
fimul
ds
iret
shl
pop
stc
nop
idiv
push
ins
mov
adc
out
test
or
mov
mov
inc
inc
cmp
and
sbb
push
iret
call
call
bound
inc
mov
lods
(bad)
out
icebp
mov
inc
mov
push
test
jg
xor
sbb
sub
fimul
push
push
xchg
dec
and
xchg
sub
es
inc
pop
inc
lea
inc
fistp
daa
lahf
fistp
retf
test
add
cli
sub
inc
sbb
fucom
inc
pop
xlat
xchg
mov
inc
fisub
cmps
popf
gs
or
and
mov
fcmovnb
lds
shl
mov
lock
adc
mov
daa
mov
add
dec
ins
and
retf
jo
jae
(bad)
pop
lahf
(bad)
cwde
xor
adc
push
jge
inc
(bad)
in
mov
ds
inc
inc
cdq
mov
in
in
dec
xor
rcr
dec
sub
add
sub
pop
xchg
(bad)
mov
push
pop
pop
inc
cmp
dec
idiv
adc
mov
jg
inc
sub
xchg
je
ins
mov
sbb
stos
outs
mov
outs
mov
and
ret
mov
leave
cdq
inc
pusha
adc
addr16
(bad)
dec
test
push
cdq
or
loop
bound
mov
jge
mov
call
add
lahf
dec
(bad)
test
cmp
out
(bad)
mov
ret
inc
jmp
rcr
push
lahf
mov
mov
add
push
(bad)
sar
(bad)
popf
inc
cmps
cld
iret
pop
cli
aad
xchg
sbb
test
xchg
sbb
inc
push
adc
hlt
std
cmp
push
jl
lea
test
xchg
repnz
leave
sub
sbb
das
add
ins
sbb
stc
aad
or
add
add
jno
ffreep
jecxz
(bad)
out
push
ret
fisttp
xchg
cli
les
jnp
fstp
sub
mov
dec
lock
pop
dec
add
and
or
xlat
retf
cld
xchg
mov
sub
jae
cli
jmp
add
push
ins
mov
dec
inc
jmp
movs
scas
leave
vxorpd
add
mov
rcr
sub
mov
mov
in
sar
ret
lds
mov
mov
rol
cs
or
inc
dec
inc
sub
push
inc
fdiv
or
mov
inc
xchg
(bad)
xlat
mov
aas
fwait
in
fst
fmul
cmps
jmp
jl
push
cdq
cmps
bound
sub
movs
call
mov
popa
add
repz
pop
outs
lahf
inc
cmps
in
xlat
mov
inc
pop
mov
ret
mov
mov
hlt
out
sti
mov
(bad)
addr16
pop
into
dec
inc
aad
outs
dec
sub
stos
jbe
enter
out
iret
sbb
fild
pop
(bad)
les
adc
mov
adc
(bad)
in
iret
scas
bound
ja
mov
xchg
sti
pop
and
and
xchg
or
and
mov
fsubrp
pop
pop
jo
aas
pop
lds
jnp
sub
aam
nop
pop
dec
iret
(bad)
push
jge
loopne
mov
cmps
cmp
dec
imul
cmp
cdq
pop
add
call
ss
mov
pop
bsr
xchg
rcl
and
or
inc
pop
scas
ins
pop
and
repnz
fbstp
and
(bad)
(bad)
jge
fsub
jbe
ja
imul
inc
ja
nop
xchg
mov
push
mov
inc
pop
scas
add
leave
psubb
dec
sbb
xchg
das
cmp
(bad)
icebp
test
xchg
addr16
out
inc
inc
cmc
or
inc
out
test
rep
fst
add
mov
jmp
and
cmc
mov
cli
movs
sbb
mov
mov
es
xchg
sti
lock
mov
test
sbb
movs
das
sbb
jb
sbb
repz
xor
adc
adc
mov
outs
ror
xchg
ror
inc
aad
sub
lds
cmp
rcl
push
dec
loopne
movs
and
mov
rcl
les
cmp
mov
sbb
mov
ja
popf
aam
sub
outs
jns
mov
nop
sub
loopne
cmp
jmp
dec
rol
sbb
je
inc
inc
jae
jmp
mov
pop
sub
or
sti
daa
mov
adc
div
jno
push
mov
lods
add
sub
sub
sbb
repz
inc
push
mov
xor
or
cmp
mov
cmc
push
mov
inc
inc
aam
js
and
or
sbb
adc
rcr
inc
popa
mov
and
inc
mov
sbb
sub
loopne
(bad)
(bad)
adc
adc
lea
mov
int
inc
scas
je
es
imul
icebp
or
lea
or
sar
imul
stc
adc
(bad)
mov
lock
dec
sub
xor
push
stos
push
xchg
or
xchg
(bad)
push
out
cmp
in
or
sbb
scas
mov
loopne
xchg
xor
cmp
or
cmp
mov
ins
cmp
cmp
(bad)
jmp
push
(bad)
cwde
inc
iret
bts
sbb
test
mov
ror
aaa
into
loope
mul
aas
enter
cmp
mov
test
xchg
lea
test
ffreep
mov
adc
pop
sbb
inc
dec
add
and
adc
xlat
pop
popa
(bad)
cli
inc
push
out
jae
mov
cmp
in
add
mov
mov
in
shl
les
test
sub
(bad)
add
or
mov
in
daa
lods
push
push
mov
ds
std
or
adc
movs
movs
imul
(bad)
aam
das
pop
(bad)
icebp
neg
dec
pop
jo
mov
push
jp
std
ins
adc
adc
idiv
popa
icebp
scas
leave
dec
dec
rol
dec
push
std
shl
js
mov
sti
repnz
pop
sub
mov
sbb
rcl
sbb
je
enter
xor
inc
and
mul
(bad)
mov
push
and
cmp
inc
daa
pop
and
pop
pop
sub
adc
(bad)
xchg
mov
inc
lahf
and
mov
mov
jb
xchg
inc
adc
push
sbb
sti
jno
or
ins
xchg
icebp
mov
and
inc
push
mov
mov
add
cmps
adc
fisub
test
mov
rcr
mov
in
sub
add
cli
or
jae
ja
ror
sbb
mov
mov
jmp
mul
add
ins
pusha
xchg
fcomp
mov
sub
cmpps
add
xchg
sub
jne
int
sbb
les
inc
mov
or
cmps
mov
adc
test
adc
lods
add
ret
cmp
sysexit
fsubr
ins
nop
dec
and
call
mov
jmp
out
mov
mov
in
cwde
pop
xchg
(bad)
jmp
arpl
leave
mov
test
ret
call
fiadd
inc
pop
fistp
push
(bad)
cmc
and
addr16
es
jecxz
ds
and
sub
out
(bad)
mov
pop
mov
mov
mov
xlat
mov
movs
repz
fcmovnu
jbe
into
popa
cmps
retf
jae
pop
pop
ret
sub
add
ins
cwde
dec
or
cmp
dec
rol
fisubr
icebp
sbb
inc
jecxz
sub
dec
sub
xor
retf
scas
call
adc
and
sbb
cmps
ins
pushf
push
sbb
scas
shr
xor
inc
xchg
or
lods
scas
adc
sbb
push
out
aas
jmp
pop
pop
inc
sar
mov
mov
div
xor
jbe
adc
loop
clc
mov
mov
inc
dec
sahf
jg
stos
out
jle
adc
dec
sti
mov
and
pop
xchg
add
xcrypt-ctr
cmps
pop
jmp
sbb
loop
sbb
push
sbb
xchg
(bad)
mov
and
movs
xchg
or
ss
xor
inc
sar
jle
pushf
mov
stos
mov
or
mov
(bad)
xor
fimul
mov
mov
mov
ja
push
mov
xchg
nop
ficomp
cmp
pop
ins
pop
(bad)
sub
icebp
mov
(bad)
and
pop
mov
xchg
sub
jecxz
js
pop
aaa
push
pop
jae
lea
sub
loopne
add
fisubr
push
cmp
add
adc
mul
mov
xchg
mov
xor
int3
test
mov
mov
and
lahf
hlt
sti
lahf
ins
xor
or
xor
and
bound
inc
fld
xchg
xor
jns
test
icebp
clc
pop
aas
mov
mov
xchg
add
lock
lock
xchg
inc
cmp
pop
aam
xor
xchg
imul
jbe
fistp
dec
inc
mov
xchg
clc
rol
daa
mov
inc
jns
mov
int
push
in
xor
add
(bad)
inc
clc
xchg
push
cmp
inc
xchg
jo
push
popf
movs
jae
mov
stos
push
(bad)
jecxz
test
outs
or
jno
push
pop
xchg
and
push
cli
test
icebp
jmp
pop
jno
jb
pop
push
bound
shl
push
xor
cmp
or
icebp
add
cld
pop
mov
stos
enter
xor
js
in
sub
ss
cs
push
push
test
cs
push
pop
mov
push
adc
dec
sbb
aas
sub
dec
(bad)
clc
test
push
lods
sbb
push
out
mov
mov
ret
sbb
(bad)
out
sbb
ds
neg
jp
retf
(bad)
xchg
mov
dec
mov
add
repnz
or
cld
scas
ror
adc
in
or
addr16
test
ins
xor
dec
sbb
fld
mov
push
movs
pop
jg
mov
(bad)
xchg
pop
and
aad
add
xor
jmp
scas
cmp
xor
adc
int3
push
mov
pop
mov
pushf
fnstsw
outs
repnz
mov
add
or
mov
add
inc
arpl
pop
inc
sbb
add
cmp
xchg
and
lahf
hlt
cs
pop
xchg
pop
and
jge
loope
push
sub
call
xor
jae
daa
adc
inc
shl
dec
mov
pop
mov
and
mov
std
stc
in
mov
cmc
mov
adc
inc
enter
vmovaps
push
mov
bound
xchg
sub
(bad)
fnstcw
cs
and
retf
nop
pop
arpl
mov
or
adc
(bad)
jmp
(bad)
outs
ret
mov
pop
sbb
mov
cmc
pop
fld
scas
daa
mov
mov
mov
std
pop
shl
mov
fistp
xor
cmp
fiadd
mov
fwait
daa
mov
inc
les
repnz
mov
mov
icebp
ins
fld
cmp
mul
mov
pop
out
inc
lods
in
inc
mov
cld
xchg
mov
rol
stc
loopne
cmp
cmc
fstp
push
inc
push
and
mov
scas
pop
mov
sbb
adc
arpl
(bad)
or
cmp
mov
sbb
add
xchg
dec
fidivr
sub
pop
cli
out
(bad)
mov
and
sub
rcr
cmp
iret
sub
lods
mov
(bad)
mov
inc
loop
sub
ja
pop
stos
sbb
cmps
xor
pop
bound
push
and
js
xor
add
inc
pop
and
fisttp
cmp
leave
rcl
adc
sbb
mov
mov
xor
mov
jmp
or
outs
lds
or
dec
mov
push
js
mov
es
sub
popf
add
push
fdivr
shl
jnp
jae
push
jb
push
inc
mov
les
sub
mov
push
fadd
sbb
xchg
test
gs
(bad)
push
movs
test
inc
lahf
xor
pop
jne
pop
adc
aaa
sub
jnp
mov
arpl
mov
xor
cdq
xchg
scas
ret
test
call
jge
rol
sub
in
das
dec
pop
xor
mov
xchg
repnz
push
movs
sub
sub
les
fbstp
cmps
repz
cmps
mov
sar
adc
cmp
jle
fsubr
aaa
xchg
adc
adc
dec
push
and
aas
cs
cwde
pop
das
adc
pushf
sar
mov
ficom
lea
lods
push
ret
or
movs
jle
call
cmp
add
sbb
(bad)
push
clc
sbb
imul
inc
mov
sbb
mov
test
cmp
xor
pop
cdq
sbb
das
mov
movs
stc
adc
mov
jb
addr16
pop
sub
xlat
ror
mov
sub
sti
push
pop
mov
retf
scas
test
je
jns
xchg
sar
add
inc
rcr
nop
inc
pusha
mov
fnsave
and
lock
das
push
adc
jg
repz
and
pushf
cmp
test
lea
xchg
movs
sbb
mov
in
les
push
mov
lea
fadd
not
shl
or
fidiv
adc
mov
inc
add
fs
add
lea
jle
mov
addr16
xor
in
daa
mov
retf
repnz
(bad)
jle
xlat
xor
in
mov
lods
dec
test
shl
and
(bad)
jns
push
(bad)
add
ffreep
cmp
in
fs
fldcw
fistp
fldcw
mov
ds
aaa
xlat
adc
jns
xor
stos
inc
mov
push
les
in
jge
mov
lea
test
out
test
les
jno
sbb
xchg
push
aad
pop
mov
fwait
xchg
mov
mov
das
xor
mov
push
aaa
(bad)
fsub
or
or
dec
jns
repz
dec
pop
mov
arpl
pop
int3
mov
adc
xchg
nop/reserved
xchg
stos
xor
or
es
pusha
dec
inc
push
arpl
clc
rol
xor
cmp
xor
cmp
or
jp
fiadd
xor
cs
pop
or
xchg
mov
inc
add
jle
cmps
je
ins
jmp
and
mov
iret
xchg
xchg
icebp
call
pop
shl
je
jmp
mov
outs
adc
in
cwde
(bad)
movs
xor
mov
jne
xchg
bound
mov
pop
cmp
and
jne
gs
inc
pop
push
loop
jg
mov
jl
std
and
xlat
push
leave
in
data16
loopne
call
or
sbb
cmp
jno
xor
xlat
sti
lahf
nop
or
xchg
retf
xchg
out
inc
outs
rol
lods
xchg
(bad)
stc
or
test
mov
mov
test
ins
pop
add
ret
xor
test
es
je
ss
push
dec
push
mov
push
cmp
cli
xor
mov
in
in
cmps
test
sub
aas
fisub
popa
aad
mov
xchg
inc
shr
and
inc
sar
cdq
pop
stos
push
pop
dec
imul
aad
je
(bad)
lds
or
xor
jae
test
mov
add
inc
shl
dec
ins
bound
push
xor
stos
sub
lea
(bad)
sar
call
test
loopne
or
test
sahf
aad
and
(bad)
popa
loope
ja
ret
cmps
mul
jle
mov
add
ins
lock
loop
or
movs
xlat
xchg
jge
sti
lods
push
mov
mov
jne
push
out
cmp
xor
clc
cmc
sbb
or
cmp
push
jb
mov
pop
xor
xor
daa
jl
jp
jg
mov
jl
call
in
sbb
mov
imul
mov
pop
dec
mov
mov
loop
rcl
jp
pop
(bad)
ret
pop
jmp
(bad)
hlt
inc
add
fs
(bad)
shr
jns
mov
nop
cmp
cmps
jbe
je
adc
mov
push
enter
popf
cli
mov
xchg
fsubp
jmp
(bad)
mov
in
pop
call
dec
sahf
hlt
movs
fisub
lods
in
mov
rcr
adc
or
arpl
and
add
call
mov
out
adc
jp
int3
adc
leave
test
fwait
retf
cmp
sbb
xchg
into
jbe
ror
mov
std
clc
stos
std
out
enter
mov
xor
push
or
pop
enter
mov
in
cmp
mov
jo
pop
stos
mov
test
fdivr
dec
xlat
xchg
jo
lock
push
add
scas
mov
inc
add
cmp
shr
jne
adc
sbb
add
in
jne
jbe
push
and
add
lods
mov
popf
lea
sub
mov
sub
(bad)
xor
or
es
mov
aas
lea
jae
or
cmp
in
enter
ss
dec
cmp
jnp
and
les
jmp
xchg
push
mov
push
mov
mov
enter
jp
sub
cmp
mov
jnp
jns
inc
movs
dec
or
mov
fdivr
dec
repz
or
fistp
outs
push
xlat
(bad)
xor
iret
outs
(bad)
addr16
fwait
pop
out
rcl
xchg
imul
jne
sbb
ret
clc
adc
jecxz
push
or
int
in
push
push
in
daa
out
or
xor
mov
cmp
mov
fcom
push
cmps
adc
(bad)
jmp
(bad)
dec
iret
int3
push
push
stc
mov
and
scas
xchg
fwait
push
bound
in
call
into
test
cld
xchg
inc
sbb
idiv
shr
push
jecxz
retf
fidiv
nop
xchg
xor
or
pushf
fisub
dec
dec
mov
pop
addr16
div
idiv
adc
adc
in
jl
in
in
out
cmps
out
cmc
lock
push
cmp
sbb
shl
jge
inc
or
dec
rol
repz
imul
shr
push
push
das
scas
sub
cmc
cmp
out
xor
cdq
push
sbb
xchg
clc
enter
loope
xor
push
sbb
pop
fcomp
ret
gs
adc
ins
sub
test
outs
push
jl
add
daa
push
aam
jecxz
ss
inc
sar
aas
test
pop
push
xchg
inc
test
pop
sti
xor
gs
es
leave
out
popf
mov
pop
xchg
icebp
fcomp
into
xchg
pop
add
fcmovnbe
outs
shl
inc
lods
and
pop
je
xor
dec
and
je
arpl
mov
hlt
dec
test
xchg
pop
test
mov
xchg
cwde
fcomp
imul
xchg
push
cdq
scas
mov
fwait
mov
adc
scas
fcmovne
and
test
fsubr
and
sub
xchg
test
into
sahf
mul
loop
xor
inc
inc
cmp
out
push
push
and
inc
and
mov
inc
xchg
sub
xchg
out
icebp
jg
pusha
or
dec
call
dec
cmp
sbb
test
inc
push
lock
and
sbb
jne
adc
pop
fsub
pop
loope
mov
push
inc
shl
mov
out
cmp
dec
shr
aad
xchg
mov
mov
js
sub
je
dec
in
(bad)
les
arpl
mov
icebp
(bad)
cmp
jo
push
cmp
mov
clc
lahf
dec
loopne
jae
pushf
scas
addr16
xchg
adc
mov
hlt
neg
sub
mov
sbb
jmp
cmps
nop
xor
leave
stos
es
shl
push
loop
mov
add
jae
lds
int3
sar
outs
fimul
(bad)
(bad)
mov
not
mov
mov
imul
aad
mov
cmps
xor
adc
into
adc
outs
mov
add
leave
outs
int
adc
jg
dec
into
ins
pop
cmps
out
leave
mov
mov
aaa
cmp
sbb
jb
push
xchg
cli
pop
fsubr
daa
rcl
shl
aam
mov
mov
fsubr
or
out
mov
fdivr
neg
movs
xchg
push
test
fldcw
jecxz
xor
push
add
mov
inc
pop
int
outs
mov
in
xor
pop
mov
pop
jns
and
push
push
mov
adc
scas
retf
sbb
sbb
fld
dec
adc
jo
cmp
adc
or
xor
cmp
daa
aam
test
jo
bound
test
pop
inc
mov
and
lods
cld
pop
xor
gs
dec
mov
mov
inc
sub
fst
inc
pop
mov
jecxz
mov
out
and
add
dec
xchg
movs
cdq
aas
data16
sbb
out
arpl
or
pop
cmps
or
scas
popf
call
jp
js
xchg
and
xor
loope
retf
call
mov
in
xchg
sbb
mov
sub
leave
push
inc
stos
pop
and
gs
out
mov
sbb
or
jecxz
(bad)
call
xchg
fidiv
inc
add
inc
push
push
jo
mov
hlt
stos
add
sar
sbb
adc
out
adc
test
mov
outs
sbb
xchg
imul
xchg
fnstenv
cmp
xchg
pop
xchg
sub
add
jmp
retf
push
pop
xchg
frstor
(bad)
jno
loop
sub
jns
or
fwait
sbb
jns
add
push
pusha
cmp
mov
cwde
and
xchg
sbb
pop
jmp
mov
dec
icebp
pop
sbb
stos
xor
inc
xor
sub
das
add
or
sbb
pop
pop
and
push
addr16
enter
scas
cmp
add
repz
fstp
imul
jae
ds
xor
jmp
jmp
and
dec
call
xor
pusha
jmp
outs
mov
gs
mov
xlat
in
cmp
xor
mov
in
test
out
fisttp
mov
call
pusha
pop
cmp
adc
retf
xchg
(bad)
sbb
test
ret
mov
pop
fimul
fadd
mov
shr
(bad)
lods
xor
mov
retf
cmovg
(bad)
paddsw
mov
frstor
fistp
cmp
data16
ins
pop
outs
fdiv
cld
ss
and
int
pop
shr
popw
aam
movs
repz
jg
cmp
loop
cmps
hlt
pop
sub
inc
scas
outs
adc
ins
ja
fs
push
out
xor
lds
lds
dec
or
push
sahf
out
jmp
jg
mov
pop
arpl
retf
add
pop
(bad)
jae
iret
jno
out
rol
push
scas
adc
mov
fdivr
xor
out
add
cmp
stc
dec
aam
inc
cmps
int3
push
inc
cmc
sahf
mov
(bad)
in
int
repz
adc
sub
mov
xor
test
fsub
jmp
into
xchg
shl
xchg
lock
stc
jns
mov
mov
ret
call
or
std
iret
xchg
xchg
xchg
mov
shl
inc
mov
arpl
jg
das
mov
ja
jbe
pop
xchg
minps
inc
rcr
inc
pushf
jo
int3
pop
adc
mov
fnstcw
adc
ins
stos
es
ret
outs
ja
scas
xchg
jmp
out
add
dec
or
and
cwde
mov
sub
es
mov
hlt
or
pushf
mov
push
jmp
cwde
lea
add
jle
push
mov
imul
and
inc
data16
inc
mov
mov
icebp
ins
adc
enter
push
sbb
je
pop
(bad)
loop
aam
adc
add
int3
in
in
mov
adc
and
int
shl
inc
xchg
mov
push
inc
bound
stos
xchg
arpl
in
rcl
je
in
out
aas
and
fistp
sbb
mov
in
call
jnp
mov
mov
sub
or
pop
cmp
shl
cld
pop
mov
pusha
ss
sbb
test
lahf
cs
in
pop
pop
and
cmp
and
fs
repz
cmp
mov
push
or
or
xlat
neg
sbb
sub
pop
cmps
jo
push
into
repnz
cmc
lea
dec
jne
sbb
mov
xchg
int
mov
and
imul
sbb
cmp
pop
frstor
(bad)
sbb
(bad)
nop
popa
mov
call
xchg
pop
das
shl
adc
stos
mov
push
adc
daa
je
int
fld
je
out
inc
jle
mov
xchg
ds
mov
jbe
xor
stc
pop
or
mov
retf
fwait
cmp
jne
test
les
loopne
cmp
cmp
repnz
retf
pop
outs
jl
daa
shl
push
jno
lods
test
aaa
out
or
movs
adc
in
fcmovne
sbb
cwde
fcmovnb
adc
adc
ffreep
stos
mov
xchg
pop
xor
arpl
fldenv
gs
in
cmp
xor
mov
cmps
icebp
test
adc
sbb
inc
pop
aas
mov
sbb
scas
retf
lock
lea
xchg
cmp
cs
out
jns
adc
mov
es
sbb
loopne
mov
ss
jge
jbe
stos
jp
jmp
out
shl
dec
xchg
cmp
sbb
ret
push
and
outs
lds
mov
jns
jbe
cmp
loopne
stos
mov
xchg
jmp
es
push
cmp
mov
xchg
sub
jp
cmps
jg
(bad)
aas
pop
fdivp
xchg
mov
add
bnd
cs
push
push
gs
pop
mov
inc
pop
out
dec
imul
jbe
or
cld
jae
jne
xchg
sub
mov
pushf
nop
xor
in
or
aas
sub
jbe
push
dec
retf
and
cmp
mov
es
mov
test
mov
mov
in
dec
mov
(bad)
fwait
enter
cmp
loopne
add
fs
je
mov
jne
push
xor
(bad)
adc
fistp
adc
jbe
int3
xor
add
imul
into
ins
sbb
dec
mov
in
pop
movs
in
jp
jmp
popf
add
aas
imul
and
repz
sub
adc
setbe
dec
jmp
xor
test
(bad)
adc
movs
rcl
ret
popf
fldcw
add
icebp
cwde
xchg
jo
imul
sar
push
cld
and
(bad)
dec
push
ja
inc
sub
or
lods
cmps
xlat
leave
pop
mov
imul
ffree
add
(bad)
inc
jmp
cli
retf
jmp
test
sub
jmp
int3
sub
inc
div
jmp
push
ds
popf
push
int
ret
dec
or
daa
jecxz
lea
and
pop
mov
inc
xchg
xchg
repnz
xchg
cwde
xchg
or
lea
in
push
es
sar
sar
jae
in
xlat
es
stc
ins
sbb
and
fisubr
imul
sbb
jecxz
fild
icebp
lea
xlat
xor
cwde
ins
mov
pop
mov
xchg
xor
enter
(bad)
jg
ja
adc
add
xlat
mov
jl
sbb
mov
mov
loope
rol
leave
neg
rcl
mov
jo
(bad)
mov
outs
mov
ss
mov
and
xchg
lods
lds
retf
loop
shl
pop
xlat
aas
adc
pop
xor
jmp
sar
mov
add
adc
xchg
pop
lds
jb
sub
pop
add
push
adc
ret
test
jns
imul
(bad)
movs
js
faddp
fiadd
data16
push
popa
adc
jp
push
xchg
pop
inc
pop
mov
jo
and
sahf
stc
gs
cdq
mov
add
mov
ds
push
mov
sub
push
aam
push
rcl
les
cmp
cmps
popf
aam
mov
ror
test
adc
cwde
xchg
pusha
push
xchg
jbe
dec
ret
das
(bad)
xor
cmp
ss
mov
icebp
xor
movs
add
aad
xor
nop
dec
movs
call
xchg
popa
loop
or
js
and
cmp
adc
xchg
fadd
test
or
stos
mov
mov
ss
movs
mov
sti
or
lods
stc
popa
movs
add
in
mov
fld
loop
or
mov
push
mov
adc
retf
std
pop
outs
bound
inc
xor
cli
cli
push
shr
aam
rep
mov
cmp
jbe
lea
pop
int
sar
call
retf
es
xchg
mov
inc
jl
push
outs
dec
arpl
xchg
mov
xor
mov
push
daa
and
xchg
hlt
xlat
(bad)
in
cmp
test
xchg
les
sbb
push
das
aas
ret
stos
loopne
add
(bad)
dec
cmp
stos
cdq
xchg
pop
in
mov
mov
and
call
fst
(bad)
dec
call
add
push
pop
sahf
and
pop
out
cmp
mov
fadd
mov
pop
or
mov
ret
mov
iret
push
sbb
cwde
mov
sub
nop
lods
push
inc
jb
pop
ja
push
call
cmp
mov
jg
or
inc
xlat
adc
int
cmps
retf
inc
(bad)
pop
push
mov
js
cs
pusha
cmp
test
aas
pop
push
xor
rcl
ror
in
popa
inc
and
daa
mov
test
ret
jecxz
stos
mov
cwde
dec
pop
(bad)
push
sub
xchg
push
xor
dec
inc
mov
mov
add
fidiv
js
mov
call
jo
sbb
jg
add
jp
cwde
repz
(bad)
xor
iret
mov
je
push
stc
lods
jbe
push
mov
in
cli
cli
fist
aad
sbb
out
mov
outs
pop
into
aam
out
jge
hlt
leave
cmps
(bad)
loop
xor
data16
mov
push
in
ror
mov
movs
pop
dec
inc
xchg
push
push
pop
pop
sbb
mov
ret
cmp
cs
jns
in
pop
or
mov
sbb
xor
in
add
push
mov
fsubr
jno
add
int3
mov
fsubr
std
inc
vcomisd
dec
int3
out
cmps
aam
jl
dec
xchg
or
loop
je
daa
pop
(bad)
cs
cmc
bound
jmp
je
test
add
and
pushf
mov
cmp
ret
repz
sbb
sbb
stos
or
xor
xchg
shl
push
or
adc
jnp
dec
inc
inc
sbb
das
clc
pop
aaa
cmps
cmp
mov
lods
in
lahf
lahf
and
add
int3
aad
test
test
or
stos
jnp
mov
cmp
jno
adc
fwait
and
push
or
mov
(bad)
out
pop
push
dec
hlt
push
mov
push
jmp
nop
or
inc
adc
and
jmp
outs
ror
pop
mov
imul
lahf
mov
mov
jp
outs
(bad)
sbb
js
loop
or
pusha
into
mov
add
std
sbb
int3
push
iret
cmp
cld
or
iret
dec
sbb
or
fwait
call
shl
push
js
dec
mov
add
adc
cs
push
pusha
mov
push
mov
sbb
sbb
out
fsubr
in
test
(bad)
aam
cld
sub
(bad)
das
scas
and
mov
mov
mov
pop
push
jecxz
fs
rcl
movs
ins
arpl
cmps
pop
in
test
pop
add
add
cmps
push
jmp
mov
push
call
xchg
(bad)
leave
cdq
shl
aad
es
sbb
imul
fbld
stc
and
ficomp
mov
mov
std
mov
add
cwde
outs
lods
xchg
cmps
cs
stos
call
mov
mov
sbb
fidivr
and
cmps
mov
hlt
retf
sti
jno
fmul
xor
and
sub
push
sar
mov
fld
push
mov
inc
mov
push
pop
or
add
scas
aas
test
stos
sub
daa
repnz
adc
xchg
adc
cmp
fldl2e
cmp
aad
adc
or
mov
(bad)
lods
lds
pop
lods
ins
out
stos
sub
adc
xchg
push
mov
jae
adc
add
call
loop
jbe
mov
adc
sub
mov
add
(bad)
bound
mov
stc
jecxz
sti
or
sub
inc
push
sub
movs
add
cli
inc
fcmovnb
outs
inc
sbb
out
das
or
(bad)
movs
or
push
jg
aam
push
into
mov
shr
xor
or
cld
inc
inc
cmp
lods
aaa
and
mov
jns
cli
lods
rol
out
movs
sub
mov
leave
mov
iret
test
nop
push
nop
or
lock
nop
outs
std
(bad)
push
imul
call
fild
pop
and
cmp
mov
imul
fcom
lea
inc
shr
xchg
enter
sub
adc
fnsave
pop
cli
add
inc
es
xchg
cmp
jecxz
pop
and
xor
adc
imul
add
sub
es
ja
ror
into
retf
cmp
popf
stc
or
and
pop
cmp
jns
repnz
push
lahf
inc
jge
adc
icebp
push
mov
cwde
mov
lock
mov
inc
push
push
pushf
rol
mov
(bad)
jecxz
add
scas
sbb
push
cmp
mov
xchg
push
add
aam
adc
stc
add
jecxz
xor
sub
stos
cli
shl
add
mov
aas
push
cmp
xor
test
mov
aas
xchg
or
leave
aas
in
aad
and
das
push
les
or
cwde
jns
out
jno
xchg
push
(bad)
push
mov
cmp
pop
cmp
(bad)
imul
inc
inc
mov
out
js
imul
jg
jmp
or
mov
arpl
mov
out
jnp
pusha
jge
pop
fsubr
xchg
mov
cs
pusha
sbb
mov
repnz
jmp
jl
mov
inc
mov
loope
test
jecxz
test
cwde
sub
inc
pop
mov
test
pop
jbe
arpl
mov
aad
jecxz
(bad)
rcl
cmp
into
push
push
adc
jecxz
mov
mov
sub
(bad)
stc
mov
jmp
(bad)
mov
push
in
mov
xchg
mov
sbb
pop
pop
jnp
rcr
es
inc
out
leave
pusha
lock
pop
mov
sbb
stos
mov
cmp
(bad)
out
or
(bad)
fsubr
jno
cmp
or
pop
rcr
fimul
push
push
mov
jge
stos
imul
(bad)
stc
add
xchg
jp
fst
mov
int3
das
jne
dec
xor
mov
add
fstp
into
jae
dec
push
leave
and
cmc
xor
dec
into
inc
cmps
retf
imul
movs
inc
int
push
addr16
ret
ins
stc
in
jle
sbb
mov
cmp
ror
jl
or
clc
pop
addr16
out
jno
xor
into
xchg
je
add
leave
mov
fisub
cmp
int
mov
sub
adc
pushf
lahf
add
cmp
shl
sbb
imul
push
cmc
ins
xchg
mov
mov
jno
vsqrtsd
add
adc
clc
mov
mov
aad
push
pop
add
mov
cmp
cmp
add
mov
mov
stos
rcl
inc
jmp
fisttp
push
and
cmp
pop
repz
xor
aaa
fdiv
enter
scas
out
sbb
adc
outs
xor
sbb
rcr
and
les
(bad)
sbb
scas
(bad)
sbb
inc
mov
add
push
jbe
dec
loop
cmc
adc
mov
cmp
enter
loop
dec
cmp
pop
mov
or
popa
sbb
sub
test
hlt
adc
xchg
inc
pop
pushf
dec
std
call
mov
jae
push
mov
stos
mov
test
mov
xor
lahf
and
inc
hlt
aad
aam
xor
les
mov
outs
jbe
ins
outs
ins
js
popa
and
loopne
jns
mov
pop
retf
test
ret
sbb
ret
sub
sbb
in
aas
(bad)
iret
xchg
loop
mov
lds
jno
push
pop
rcl
por
dec
fwait
pushf
pop
cld
outs
mov
movs
es
mov
sbb
movs
cmp
xor
mov
adc
pop
push
sti
inc
rcl
mov
pop
xchg
add
jmp
stos
mov
pop
ss
sbb
add
cmps
inc
out
sub
std
std
shl
out
fsub
add
cmc
jl
cmp
enter
adc
cld
aad
jmp
jb
lods
mov
test
(bad)
and
loop
gs
xor
jmp
and
lock
pop
or
sbb
and
mov
jl
ret
sbb
or
je
dec
popf
add
mov
sbb
fyl2x
stos
js
test
cmp
push
fucomi
mov
fdivr
mov
mov
sub
movs
mov
ins
loope
mov
adc
mov
call
and
add
je
adc
(bad)
xchg
jecxz
xor
test
inc
loop
pop
cmp
loopne
inc
or
push
xor
mov
inc
retf
push
fs
not
cwde
mov
add
stos
fsin
inc
or
cmp
outs
and
mov
pop
jne
sbb
mov
wrmsr
std
jmp
or
add
out
scas
inc
lods
jae
repz
jmp
movs
pop
fcom
jmp
sub
out
mov
and
aas
out
add
shr
aad
rcr
jmp
in
mov
ret
imul
movs
lea
cmp
sbb
mov
sahf
mov
pushf
imul
cmp
or
pop
sahf
shl
jge
cmp
sbb
in
dec
pop
dec
out
adc
iret
fist
popf
fcomp
cmp
in
iret
pop
or
fst
jmp
add
jb
rcl
out
inc
xor
mov
test
je
push
xor
jle
push
imul
or
add
xor
lods
push
mov
mov
dec
lds
pop
inc
sub
cmp
xchg
outs
sar
xchg
sub
xor
push
adc
or
sbb
mov
mov
mov
clc
pop
lahf
push
sbb
leave
imul
push
test
and
jl
hlt
retf
ins
or
inc
or
mov
inc
dec
cmp
mov
sub
out
into
pop
jno
xchg
cmp
cmp
popf
adc
in
lods
cmp
loop
lahf
out
mov
outs
out
pop
and
pusha
shl
icebp
test
xor
jo
loope
cmc
outs
and
dec
add
xchg
mov
adc
sbb
adc
bnd
ins
sbb
push
push
and
push
test
pop
imul
je
xor
pusha
or
xchg
js
mov
ret
pop
adc
mov
leave
inc
inc
dec
or
ins
cld
outs
cmp
pop
xchg
xchg
mov
push
test
aad
dec
aad
push
adc
in
inc
hlt
sbb
mov
jmp
mov
mov
pop
jg
mov
xor
add
(bad)
mov
and
inc
mov
das
inc
and
outs
imul
(bad)
push
mov
dec
adc
or
jmp
test
test
add
jge
cmp
adc
fisttp
aaa
outs
jne
push
and
shl
inc
pop
stos
pop
call
sbb
sti
ret
enter
jno
(bad)
jl
popf
or
mov
and
or
mov
sbb
es
retf
cmps
mov
stos
fs
cld
inc
adc
adc
loop
add
addr16
sbb
ins
(bad)
and
clc
add
cmp
cmp
dec
test
xor
or
jns
or
cli
movs
(bad)
inc
in
cmp
pop
push
pusha
xchg
xchg
cmp
data16
cmp
(bad)
sub
mov
bound
or
mov
sbb
aaa
mov
cmp
ds
jns
ins
cmp
and
mov
call
imul
stos
or
ja
add
mov
pop
push
retf
pop
loop
pop
fisub
clc
cmp
push
mov
shl
cmc
mov
or
rcl
call
push
sub
mov
jg
jl
cwde
cmp
mov
sar
push
es
jb
and
mov
lods
ins
sub
das
cmp
xor
xchg
hlt
adc
retf
or
xchg
rol
xchg
sbb
int
fld
ins
inc
and
fs
jns
lods
leave
mov
jno
xor
mov
pop
dec
popf
out
dec
clc
xchg
shl
xchg
in
xchg
fwait
aad
out
loopne
ret
test
push
add
test
add
and
push
pop
rcl
idiv
data16
push
out
sbb
mov
cmc
(bad)
sti
jne
int3
lahf
mov
fild
and
jge
lods
pop
mov
or
or
cwde
addr16
int
mov
popf
and
ret
pop
in
out
sbb
sbb
cmp
sahf
std
out
jnp
or
fisub
jl
xchg
call
pop
dec
mov
lock
mov
fcmovne
jo
ins
std
aad
xlat
sub
mul
cmps
pop
or
aas
adc
sub
mov
jp
hlt
into
pusha
pop
xor
jae
ja
cdq
cld
add
ds
mov
in
add
jg
enter
jns
and
scas
retf
pop
jno
std
ins
pusha
pop
div
mov
xor
mov
pop
xor
out
aaa
out
call
hlt
xor
fcmovnb
dec
adc
xchg
outs
ds
add
cld
jmp
jp
dec
retf
mov
inc
pop
addr16
aas
xor
xchg
dec
pop
adc
dec
xchg
(bad)
(bad)
ins
mov
and
cmp
div
add
mov
xchg
lea
dec
mov
(bad)
pop
xor
fcmovnb
inc
fdivrp
into
fcom
sbb
add
dec
xor
(bad)
(bad)
in
pop
push
add
cmp
sahf
mov
ins
gs
xchg
push
add
and
and
jle
mov
ins
pop
sbb
stos
(bad)
lock
add
out
sbb
shl
mov
xchg
mov
out
mov
(bad)
cmp
mov
mov
test
mov
mov
fwait
push
inc
pop
daa
cmp
loope
fwait
mov
jns
cmp
xchg
add
push
sar
loopne
push
mov
out
enter
cmp
push
pushf
sub
or
sbb
stos
ret
jnp
int
(bad)
sub
jp
fidiv
pop
shr
sbb
sar
ins
pop
mov
mov
jbe
cmp
pop
jmp
jb
jmp
sub
addr16
inc
dec
sbb
xchg
mov
call
cdq
cmp
call
xchg
icebp
push
add
sub
dec
idiv
push
popf
(bad)
xchg
sbb
std
cli
xchg
or
xchg
cmps
out
push
xchg
ins
xor
push
mov
call
pop
pop
movs
dec
adc
shl
mov
mov
mov
hlt
das
dec
loop
pushf
lods
lahf
shr
cli
enter
xchg
andps
rol
and
mov
push
inc
loop
and
mov
rcr
push
dec
inc
push
(bad)
xchg
dec
lahf
jo
fsub
and
mov
pop
out
add
mov
sbb
jmp
sub
outs
adc
cld
and
imul
push
jne
push
add
inc
xor
sbb
mov
mov
xchg
lahf
mov
jae
ret
mov
jle
sbb
push
(bad)
cmc
addr16
mov
xchg
pop
and
xlat
loopne
mov
push
adc
fcom
dec
out
(bad)
bound
call
pop
loope
lds
(bad)
(bad)
jne
nop
leave
jecxz
mul
or
mov
push
es
jmp
cmp
mov
mov
push
jp
push
in
adc
movs
out
pop
in
dec
rcl
(bad)
xchg
cmp
mov
push
sub
mov
jno
dec
cwd
addr16
in
xchg
mov
jg
(bad)
loopne
lock
jmp
test
jns
mov
ins
xchg
in
mov
imul
rol
in
idiv
sbb
adc
xchg
mov
sbb
cmp
or
mov
xchg
mov
add
repz
inc
loope
sub
dec
or
xchg
jecxz
xchg
aas
jns
add
mov
push
mov
loope
cwde
push
push
jmp
mov
cmp
jmp
and
and
xor
jl
rcl
and
stos
push
cs
enter
fcmovbe
push
jae
jmp
push
bound
rcl
int
pop
fisttp
jle
pop
(bad)
pop
rcr
aam
jmp
retf
(bad)
sbb
not
cmp
dec
xchg
cmp
sbb
push
int
cmps
push
ins
ret
enter
out
mov
cwde
iret
xor
adc
(bad)
test
jle
js
dec
movs
jae
jle
add
cmp
cmps
(bad)
sub
cmp
(bad)
aas
add
cld
js
pop
dec
push
leave
mov
js
jmp
ficom
clc
es
adc
repnz
pop
test
fild
xchg
movs
add
lds
cmps
call
fst
jbe
mov
and
add
jmp
or
adc
repnz
repnz
sub
adc
xchg
pop
sbb
enter
push
adc
cmp
and
fucomi
add
mov
or
mov
pop
mov
mov
adc
(bad)
mov
dec
loop
rol
cld
sbb
iret
dec
std
rol
in
ins
test
icebp
jne
inc
enter
outs
xchg
(bad)
cmp
sbb
arpl
xchg
inc
fwait
pop
sbb
in
inc
das
jp
aas
add
popa
ficomp
scas
mov
xchg
mov
retf
dec
fidivr
xchg
xchg
iret
ins
ins
in
scas
inc
out
es
rcr
dec
sbb
pop
lods
(bad)
daa
cmps
inc
sbb
dec
jecxz
pop
inc
add
jno
push
sub
or
mov
outs
loope
fyl2x
mov
(bad)
fisubr
test
mov
cmp
dec
dec
shl
fcomp
popa
jne
and
(bad)
fadd
js
movs
mov
arpl
je
outs
mov
fld
scas
xlat
rcr
jge
jns
push
scas
xor
jle
mov
mov
cmp
cdq
aaa
inc
mov
movs
xchg
cmps
xor
add
cmc
ins
mov
ficom
(bad)
and
inc
fwait
jl
fcom
or
test
xor
cmc
outs
xchg
stc
(bad)
cld
jecxz
lea
int3
in
fld
push
jge
cdq
push
cs
into
cwde
sbb
daa
xor
sbb
fist
mov
xor
or
das
aas
cdq
(bad)
mov
pop
jmp
dec
cld
ret
nop
add
jg
sub
push
fimul
ss
adc
fmul
test
jle
fsub
jg
cdq
shr
push
lods
ret
pop
loope
add
retf
xchg
inc
aas
mov
sub
neg
lods
ja
jp
mov
dec
scas
fmul
ins
les
loop
jb
cmp
inc
pop
inc
and
inc
xor
add
popa
cld
add
loopne
push
shr
(bad)
loop
sub
stos
mov
and
jne
pop
out
sub
out
pushf
xchg
ror
or
xlat
call
dec
out
pop
push
stos
cmp
mov
mov
mov
jnp
pushf
mov
mov
dec
mov
dec
cs
in
mov
jp
adc
dec
jno
sbb
inc
mov
ja
pop
aad
jmp
jecxz
iret
movs
call
fcomp
mov
xlat
push
mov
pop
popf
in
fidivr
leave
movs
jo
js
pop
les
and
push
add
call
mov
jg
fchs
js
pop
push
(bad)
xor
inc
add
aas
mov
pop
(bad)
jno
out
jnp
or
popf
sar
mov
lods
bound
fcomi
lea
xor
repz
xchg
mov
mov
adc
xor
adc
(bad)
push
push
std
sub
mov
inc
leave
fist
js
xchg
dec
icebp
lea
jno
scas
shl
xchg
sub
or
jae
pop
aad
popf
adc
adc
int
mov
pushf
cwde
repnz
cmp
or
bound
call
add
stos
fsub
dec
or
fs
pop
sbb
or
mov
call
cs
sbb
std
jo
fwait
out
lds
hlt
pushf
pop
bound
cld
mov
sub
repz
jecxz
fwait
and
daa
and
jmp
xchg
inc
and
movs
pop
test
or
repz
fisub
xor
cmp
imul
shl
jns
cdq
icebp
mov
stos
idiv
mov
and
push
or
shr
inc
out
hlt
sbb
push
call
mov
sar
ins
shl
xor
jb
pop
ret
loop
in
dec
jmp
dec
jecxz
mov
in
inc
dec
pop
or
jmp
adc
sbb
fidiv
nop
popf
loopne
jnp
popa
mov
jo
out
push
pop
scas
dec
and
or
cs
fist
data16
fist
jb
mov
pop
leave
(bad)
mov
adc
xor
add
ds
push
call
data16
shl
std
jecxz
out
call
pusha
fisub
out
out
cmovae
ins
rcl
rcl
sbb
ds
jo
push
cmps
das
xor
out
jl
imul
dec
data16
pop
ja
mov
rcr
aaa
scas
(bad)
adc
and
inc
test
nop
mov
pop
mov
in
imul
jecxz
mov
daa
mov
scas
test
movs
dec
ds
mov
xor
sbb
je
jge
cmp
add
cmp
push
repz
mov
ret
push
jns
or
cmp
stc
xor
mov
(bad)
mov
out
test
push
inc
int3
jbe
fiadd
jle
push
stc
lods
cld
adc
jmp
dec
push
cwde
pop
hlt
lock
daa
mov
pop
dec
call
icebp
xchg
call
loopne
cmc
xor
inc
mov
(bad)
lea
jecxz
lds
mov
je
adc
jle
(bad)
and
js
mov
add
push
sub
add
pop
push
out
out
pop
cdq
add
movs
inc
fimul
jge
dec
pushf
sub
loope
dec
mov
rsm
iret
enter
iret
mov
pop
push
ins
jb
gs
push
sub
mov
adc
jmp
lds
(bad)
jnp
inc
scas
out
push
mov
jge
sub
add
clc
mov
dec
pop
aam
out
xor
cs
std
loopne
call
ret
sbb
aam
jno
daa
in
sahf
(bad)
adc
cdq
lods
(bad)
push
and
cmps
inc
inc
jmp
jmp
inc
paddusw
adc
adc
push
enter
mov
or
inc
das
jo
mov
outs
shl
pop
xlat
in
xor
fcomp
adc
sbb
je
popa
(bad)
nop
adc
push
stos
in
out
cmp
retf
fnstsw
jo
jle
enter
in
stc
adc
xchg
in
ficom
push
push
jne
mov
ins
repnz
mov
inc
jp
scas
cmc
aam
dec
call
xor
mov
hlt
pop
(bad)
mov
inc
stos
imul
test
xchg
in
xchg
mov
push
mov
push
and
and
retf
lods
xchg
scas
cmps
sub
in
movs
(bad)
jmp
mov
mov
dec
popf
cmc
shl
xchg
mov
(bad)
sbb
call
test
mov
adc
loop
sub
mov
xor
xlat
arpl
shl
mov
daa
outs
cwde
stos
add
aad
fs
js
test
inc
inc
call
mov
xchg
retf
test
add
and
dec
jbe
mov
(bad)
shl
xchg
mov
cmp
add
mov
lea
mov
sbb
mov
xor
(bad)
xor
ins
fsub
adc
fdivr
mov
mov
or
push
cmp
cmps
ret
jmp
fisubr
mov
jmp
std
mov
cli
popf
push
push
mov
call
stos
and
ja
mov
fisttp
xchg
std
jge
les
or
or
in
fidiv
jmp
mov
xchg
mov
outs
mov
jmp
ins
daa
pop
test
dec
ret
ret
das
xchg
in
aad
pop
jl
std
fldcw
test
pop
inc
movs
mov
rcl
mov
xor
cmps
pushf
inc
int3
arpl
ins
push
jl
(bad)
bound
bound
xor
aad
inc
nop
adc
movs
rcl
std
adc
cmps
jp
clc
out
xor
sub
mov
jnp
inc
aad
arpl
mov
and
js
mov
addr16
push
inc
xchg
jmp
das
and
lods
cmp
daa
ror
inc
lahf
nop
in
out
int3
rcl
ror
inc
addr16
pop
pop
dec
push
sub
push
scas
fisttp
mov
cmc
push
dec
sbb
pushf
push
pusha
push
test
mov
popa
clc
xor
inc
sbb
js
add
push
cwde
sub
pop
cmp
cmc
push
fdiv
test
lods
cs
push
ret
aas
xchg
adc
mov
into
mov
mov
outs
fistp
or
test
jmp
pop
in
cwde
adc
push
jne
(bad)
out
push
jge
fdiv
ja
mov
stos
xlat
lds
mov
fld
fimul
out
pop
dec
and
enter
out
push
repz
add
fcomip
jge
jmp
add
jmp
lods
jecxz
scas
pop
fnsave
push
pop
into
jb
vmwrite
lea
adc
test
or
jno
dec
xor
cmp
stc
test
(bad)
and
(bad)
iret
repnz
retf
cmp
aaa
(bad)
(bad)
clc
fiadd
fsubr
sbb
int
xchg
out
dec
xchg
or
inc
mov
mov
add
in
jmp
cmp
mov
jns
je
xor
repz
cmp
loopne
xor
xor
push
or
mov
adc
dec
cs
dec
js
sahf
(bad)
xchg
cwde
retf
ja
js
arpl
push
jle
std
pop
jo
or
ins
fdivr
dec
jg
add
loope
push
in
add
mov
jo
push
scas
pushf
dec
xchg
add
jg
test
cmp
cmp
inc
or
sub
sbb
dec
mov
pop
mov
ret
and
out
add
(bad)
jl
stos
daa
add
sar
sub
add
push
aad
mov
push
fld
push
fmul
mov
push
shr
push
retf
scas
mov
test
sti
ins
jmp
mov
or
pop
push
inc
rcl
sbb
lods
int3
adc
popf
je
add
dec
out
push
clc
sbb
pop
fimul
and
mov
(bad)
popa
lock
adc
jle
fwait
push
inc
or
jns
into
lds
jne
aad
loopne
push
mov
sahf
mov
mov
jg
in
jne
repz
or
mov
xchg
xchg
jns
add
sub
or
pop
push
inc
or
jno
enter
and
jle
sbb
jnp
adc
sub
pop
outs
push
bnd
jnp
pop
fcmovnu
clc
inc
mov
aaa
fmulp
jbe
xchg
fst
das
sub
mov
mov
xchg
mov
retf
lods
dec
adc
leave
mov
push
mov
mov
out
inc
xchg
sub
dec
pop
fimul
mov
stc
(bad)
(bad)
rcl
das
ja
and
xor
mov
sbb
neg
push
mov
and
mov
sub
mov
and
gs
shr
dec
inc
mov
fisub
call
test
(bad)
into
push
test
add
and
push
retf
mov
imul
mov
jns
dec
aad
enter
sub
push
add
in
movs
jb
loop
jnp
mov
add
jbe
les
jmp
jle
out
sbb
jge
mov
jp
push
and
sbb
addr16
cmp
(bad)
hlt
stos
jno
push
cmps
adc
fsub
sub
jnp
out
fild
arpl
push
stos
and
add
imul
or
inc
mov
ret
repz
mov
inc
push
adc
je
mov
lds
popa
nop
aaa
retf
imul
sub
mov
fcomp
sbb
jae
add
test
lock
push
int3
push
popa
imul
rcr
push
pop
shl
outs
mov
(bad)
mov
fld
mov
mov
mov
nop
(bad)
fdivr
pop
inc
mov
repnz
jnp
(bad)
mov
test
iret
cmp
pop
jge
inc
in
jo
or
jl
or
int3
into
or
lods
adc
xchg
push
jge
mov
mov
(bad)
cdq
xor
icebp
test
pop
ins
repz
dec
test
mov
inc
xchg
push
dec
inc
or
iret
hlt
scas
adc
test
jmp
mov
xor
inc
pop
and
mov
dec
pop
ds
cdq
pop
mov
cmp
movs
dec
jne
data16
cmp
(bad)
jne
adc
(bad)
nop
movs
mov
cli
pushf
pop
mov
push
rcr
aam
aaa
rol
jmp
and
inc
ins
cmp
and
sbb
int3
pusha
je
repz
das
bound
(bad)
shr
sbb
dec
inc
call
mov
xor
push
mov
je
xor
mov
das
add
cmp
pop
push
dec
jne
mov
pop
jge
mov
push
arpl
xor
daa
xor
aad
scas
dec
(bad)
cmp
jg
push
(bad)
outs
xlat
xchg
cdq
xor
sub
cdq
mov
mov
lahf
into
retf
repz
adc
sbb
inc
sub
ins
fld
adc
dec
pop
imul
cmp
(bad)
test
xchg
add
pusha
mov
jns
cmp
retf
fcomp
fsubr
loop
hlt
frstor
push
imul
add
adc
add
jp
out
jp
popf
mov
add
dec
sub
cmps
or
sub
cmps
mov
mov
mov
cmp
out
xor
push
std
push
aas
mov
rcl
xor
xor
into
xchg
cmp
data16
push
pop
pop
xchg
mov
mov
push
push
and
dec
push
fld
aad
adc
ret
xchg
dec
fsubr
dec
(bad)
mov
mov
pop
sub
pop
ss
scas
rol
mov
nop
in
stos
gs
cmc
imul
adc
add
jl
adc
mov
or
inc
cmp
out
xchg
fbld
test
hlt
inc
push
xor
and
xchg
inc
mov
loope
mov
xlat
pop
sar
mov
cli
mov
inc
out
inc
in
jp
(bad)
shr
fdiv
adc
ja
stos
js
daa
jg
inc
cwde
and
rcl
out
mov
add
in
mov
lahf
ss
hlt
pop
sahf
test
cmp
imul
jg
(bad)
pop
dec
sar
out
ds
cdq
aas
call
jmp
mov
shl
ret
jl
xchg
dec
cmp
nop
xor
daa
mov
sub
jp
xchg
int3
sti
ds
xlat
add
in
enter
jo
scas
and
js
icebp
(bad)
popf
push
push
repz
nop
xor
mov
adc
inc
sub
outs
cs
ja
loopne
popf
in
add
mov
imul
clc
dec
out
cmp
or
(bad)
sbb
inc
nop
hlt
shr
pop
adc
sbb
(bad)
ret
push
(bad)
adc
inc
or
inc
lahf
je
pop
inc
add
clc
pop
inc
fld
fld
xor
ins
cmps
jae
enter
mov
add
sub
out
jnp
jp
popa
push
mov
stc
das
and
gs
fsqrt
in
rcl
cli
test
mov
cs
adc
jbe
lods
xor
or
loopne
out
pop
sbb
xchg
xlat
push
xor
inc
mov
or
retf
jp
add
xchg
mov
lods
test
iret
xchg
jge
cmp
inc
add
std
es
out
jge
fisubr
cmp
pusha
inc
mov
js
sbb
pop
or
push
xchg
out
fstp
fiadd
ret
(bad)
dec
jle
in
cmp
jno
movs
adc
jle
out
icebp
xchg
cmp
je
jmp
out
and
in
inc
adc
sub
scas
push
adc
and
pop
mov
push
into
repz
adc
xor
ja
test
shl
out
fild
std
sti
or
stc
cwde
les
xlat
sbb
mov
inc
lahf
xor
ret
je
ficom
mov
fwait
add
mov
push
fs
pop
cwde
pop
rcl
xchg
rol
mov
ret
out
adc
in
sbb
push
pop
dec
dec
sub
xor
mov
sub
movs
jbe
out
mov
aam
sbb
cmp
fs
mov
sub
xchg
lea
fsub
cmps
mov
test
dec
xor
mov
(bad)
jmp
xchg
mov
inc
or
imul
and
add
in
or
in
movs
int3
sub
shl
in
(bad)
adc
add
imul
and
push
mov
call
mov
test
fst
push
mov
test
lods
mov
pop
stos
fld
pop
cmps
push
in
cld
adc
fwait
leave
cmp
xchg
in
rcr
jo
sbb
cmp
fwait
scas
nop
fs
fdivr
shl
hlt
test
add
inc
mov
in
psubsb
inc
test
fisttp
mov
jge
pop
popf
lds
inc
inc
outs
imul
(bad)
or
cmp
xchg
pop
mov
xchg
mov
retf
jbe
(bad)
mov
push
cdq
(bad)
fdiv
ins
popf
aas
jo
jmp
sub
rol
mov
aaa
xor
int
jnp
pop
in
das
jo
or
xchg
cdq
ins
and
iret
in
ss
jmp
aad
pop
mov
ja
pop
out
push
inc
mov
xchg
fbld
adc
(bad)
push
call
retf
cld
fwait
arpl
pop
inc
mov
mov
fisttp
(bad)
push
push
(bad)
ins
lods
loop
adc
call
les
inc
int
or
jne
fcmovnbe
int
repz
xchg
in
mov
into
into
ret
neg
(bad)
jmp
xor
test
dec
(bad)
mov
xchg
sub
cld
jecxz
pop
jb
push
iret
dec
(bad)
jecxz
pop
sub
cmps
and
inc
fst
imul
mov
jbe
sub
mov
imul
mov
xor
inc
idiv
ja
dec
jge
dec
jne
pop
fnstcw
retf
iret
mov
iret
call
fiadd
leave
cmps
call
sbb
cdq
loopne
and
jmp
lods
in
dec
scas
mov
or
fsub
cmp
movs
jae
test
js
in
xor
jb
cs
inc
add
pop
xchg
lods
pusha
popa
cs
pushf
mov
push
aad
mov
and
or
adc
repnz
mov
(bad)
clc
jp
lea
adc
pop
mov
fistp
jb
push
movs
xor
mov
inc
test
inc
call
jg
dec
ret
jle
mov
int3
or
fwait
xor
mov
out
rol
adc
(bad)
fbstp
mul
mul
ins
retf
mov
cmp
jp
dec
clc
mov
jno
repz
jb
dec
mov
loop
fnsave
call
jecxz
dec
sti
mov
neg
aam
repnz
fild
push
lods
push
stc
sbb
test
push
gs
push
add
or
repnz
aam
ret
mov
cld
and
push
or
data16
mov
xor
je
or
sub
mov
(bad)
push
xchg
scas
adc
ds
mov
xor
jg
push
xor
pop
mov
cmp
popw
xchg
cmps
popf
fisubr
push
xor
mov
pop
xchg
jmp
jno
fcom
nop
sbb
sub
and
imul
scas
and
les
jp
pop
adc
fsub
sub
xchg
sbb
jb
lahf
test
sbb
mov
aad
mov
add
or
jb
clc
cmp
jge
sti
mov
add
mov
aam
(bad)
xchg
cmp
jae
jbe
jmp
(bad)
and
inc
icebp
test
or
into
or
int
jmp
mov
imul
push
pop
cmp
xchg
mov
add
cmps
js
sbb
lahf
pop
jb
stos
mov
and
add
fcmove
iret
dec
jmp
icebp
fwait
dec
cdq
push
cmp
adc
sub
xchg
loop
fsub
dec
std
fxch
in
test
sub
es
nop
pop
cmp
mov
sbb
push
dec
stos
popf
xor
les
dec
xor
enter
xchg
add
icebp
out
cmp
aas
loope
aad
or
sub
push
inc
and
mov
dec
mov
mov
aad
lods
mov
mov
pop
ja
pop
sub
ss
mov
mov
xchg
stos
arpl
push
cld
data16
pop
mov
inc
sbb
outs
xchg
xchg
repz
test
in
jl
push
es
xchg
pop
icebp
fild
es
imul
adc
dec
out
adc
push
add
push
mov
sbb
xor
pop
arpl
xlat
adc
jge
dec
mov
lahf
sub
push
arpl
aas
stos
push
push
or
xor
stos
or
outs
lock
enter
sahf
fs
ins
dec
out
xor
mov
sbb
and
and
call
sub
leave
or
mov
out
arpl
into
leave
jmp
(bad)
mov
push
cs
xchg
mov
lods
and
aad
lea
loopne
add
cmps
stc
cmp
or
retf
cmc
dec
or
or
adc
scas
push
inc
sub
xchg
bound
jg
sbb
jnp
jge
mov
lds
cmp
push
aad
push
mov
xchg
push
sub
jg
das
inc
or
mov
(bad)
popa
mov
adc
xchg
sbb
int3
fsubr
xchg
pop
push
gs
add
mov
dec
cmps
dec
mov
std
sbb
xchg
je
jle
lock
scas
cmps
inc
cmp
(bad)
cmp
popa
add
out
mov
xchg
bound
cmps
add
sar
jl
push
cmp
push
cwde
adc
adc
push
add
add
adc
push
jo
dec
loopne
mov
jge
js
out
xor
sti
in
and
ficomp
ins
scas
ffreep
xchg
ret
pop
out
inc
dec
ss
mov
pop
dec
fnstenv
mov
pop
sbb
mov
mov
mov
dec
sub
shl
cs
cld
pop
jg
add
les
jmp
adc
dec
add
mov
out
pop
mov
jecxz
dec
add
adc
call
loopne
add
push
ins
ss
mov
rcr
adc
push
icebp
add
call
inc
sbb
push
enter
xchg
jnp
out
and
xor
ss
mov
jmp
push
movs
call
ds
aam
out
sbb
cmps
(bad)
sar
fisub
mov
jecxz
cmp
push
xchg
enter
push
fidivr
adc
inc
add
iret
(bad)
out
sahf
xchg
and
call
adc
jnp
xor
ret
out
cli
in
hlt
cld
inc
clc
lods
inc
jl
add
mul
fld
xor
ret
or
cdq
(bad)
push
repz
(bad)
xchg
fstp
push
mov
mov
dec
add
pop
retf
shr
hlt
push
or
pop
xchg
jmp
jbe
pause
adc
fadd
inc
add
fadd
outs
mov
xor
jnp
jmp
int3
jmp
or
test
inc
mov
cld
pop
fbstp
xchg
cwde
ja
enter
out
out
in
sub
lds
dec
sahf
sar
scas
es
add
addr16
out
popa
push
hlt
dec
aaa
inc
int
mov
xchg
mov
pop
ret
push
in
cmp
cmps
adc
fwait
shl
or
in
xchg
fisttp
mov
or
rcl
dec
mov
dec
mov
cs
lods
jae
jmp
ror
aad
mov
jmp
rcr
dec
push
xchg
jl
pusha
jno
bound
bound
or
mov
dec
jno
dec
xchg
repnz
les
push
jbe
imul
cs
je
lock
and
xor
mov
cdq
scas
fisubr
fist
adc
in
sub
cdq
xor
push
cwde
cmp
xchg
iret
dec
and
adc
imul
push
xchg
and
xor
stos
stos
mov
idiv
xor
inc
cld
out
inc
loope
xlat
add
(bad)
addr16
mov
push
adc
stos
mov
sub
repnz
(bad)
idiv
mov
mov
stos
and
mov
ret
mov
mov
aam
fsubr
outs
push
gs
jl
ds
cdq
mov
pop
stc
iret
ffree
cmp
xchg
es
outs
sbb
test
inc
jne
cmp
sub
gs
js
mov
push
jl
fstcw
lea
test
inc
cmp
ja
sub
mov
sbb
retf
test
xchg
enter
test
adc
rcl
inc
aam
cmps
cmc
outs
out
and
mov
add
fwait
js
loopne
push
ds
bound
in
scas
popf
inc
sbb
rcl
(bad)
popf
cs
jno
imul
sub
jecxz
int3
and
push
sti
std
push
retf
or
inc
lods
pop
in
ja
cmps
scas
jbe
mov
mov
dec
and
sub
and
(bad)
push
lahf
xchg
call
mov
fwait
js
mov
pop
cmc
inc
fimul
lods
push
imul
ds
cmps
pop
test
(bad)
ss
int
(bad)
(bad)
in
pop
cmp
fnstsw
push
test
nop
cmp
and
aas
rcl
(bad)
and
aam
pop
push
dec
push
stc
push
xor
pop
and
sub
cmc
mov
add
dec
add
imul
xchg
dec
mov
fistp
sbb
loopne
fst
jp
jae
ret
stos
mov
and
mov
or
add
std
rcl
pushf
add
mov
nop
inc
dec
(bad)
enter
in
adc
(bad)
loope
jno
jno
shl
sub
pop
pop
movs
cld
mov
std
inc
retf
fld
dec
shr
push
ret
dec
in
fild
inc
aaa
shl
jne
jns
out
or
cdq
dec
and
pop
mov
mov
sahf
(bad)
retf
gs
div
fistp
test
movs
mov
jmp
or
enter
sbb
adc
mov
ret
in
(bad)
inc
pop
jmp
adc
(bad)
int
cli
push
cs
add
xchg
fsubr
and
or
push
inc
std
repz
jl
btc
mov
push
dec
xchg
dec
sub
sti
inc
daa
cmps
in
or
xlat
jl
ins
out
xchg
loope
pop
cmp
pop
sub
fisttp
jns
mov
fistp
cmc
jle
arpl
mov
mov
xlat
jg
cmp
jbe
xor
fcom
pop
cdq
add
xor
test
cmp
movs
jle
push
mov
mov
push
adc
push
mov
dec
jmp
push
mov
or
fcmove
pop
retf
(bad)
pop
mov
sub
and
clc
daa
dec
xor
xor
bound
and
fsub
adc
add
sbb
into
cwde
mov
(bad)
pop
mul
inc
mov
nop
aam
addr16
fs
and
dec
jno
cmp
mov
inc
mov
xor
jnp
movs
clc
(bad)
loop
outs
nop
call
jmp
mov
sub
push
cmp
adc
jg
or
jecxz
pop
or
outs
jl
mov
dec
pop
jmp
test
mov
jmp
sbb
mov
arpl
dec
or
mov
mov
push
pop
xchg
fnstenv
imul
add
sub
adc
jb
stos
(bad)
mov
bound
(bad)
jno
jnp
jle
push
aaa
adc
pop
mov
mov
pop
arpl
pusha
add
xchg
cmp
xchg
add
retf
cmp
dec
pushf
fs
adc
sti
adc
push
scas
mov
inc
loope
inc
loop
ja
add
or
lds
sub
retf
stc
ds
mov
sbb
sub
test
das
aam
shl
not
shl
xor
or
inc
fild
pop
out
out
jbe
bswap
shr
push
test
mov
fisub
jmp
arpl
cmp
bound
dec
mov
test
xor
dec
sub
test
jb
ret
loope
cmp
dec
sbb
lods
movs
sub
xor
in
out
mov
cmp
mov
in
xchg
xor
sbb
out
push
and
arpl
push
fistp
ficom
mov
cmps
ds
jmp
jmp
nop
add
stos
ret
mov
dec
icebp
cmp
lock
lods
jo
add
mov
hlt
test
and
xor
sbb
das
and
mov
add
push
add
cli
nop
imul
shr
gs
and
or
mov
xchg
ins
jmp
daa
cwde
sub
dec
lock
fiadd
jge
pop
cwde
sbb
adc
inc
jno
push
pushf
das
cmp
xchg
popa
out
adc
cmc
scas
pop
inc
cmp
lahf
enter
imul
div
xor
mov
push
leave
mov
shl
ror
pop
cmp
iret
inc
pusha
nop
jge
out
shr
mov
sar
push
fidivr
lods
popa
out
mov
dec
xchg
nop
leave
push
(bad)
loope
hlt
cld
outs
clc
int3
sbb
pop
cmp
(bad)
or
aaa
add
push
pop
add
mov
lahf
push
out
and
xor
adc
aaa
pop
adc
in
add
shl
outs
push
fcomp
jns
sbb
and
in
inc
int
jge
cs
mov
inc
aam
popf
div
loop
out
xor
aad
ret
aad
cmp
adc
or
add
test
xchg
xor
push
adc
sub
outs
pop
xchg
out
fmul
shl
jns
pusha
push
push
stos
xor
test
(bad)
cmp
in
icebp
dec
adc
sbb
pusha
xchg
(bad)
call
push
int
adc
add
stos
and
push
pop
gs
jmp
in
fbld
bound
xchg
push
icebp
push
xor
retf
dec
xor
add
jge
dec
push
push
lock
dec
fild
ret
sbb
int
pusha
das
adc
pop
test
fst
jno
xchg
xchg
mov
popa
dec
pop
mov
sbb
xchg
popa
mov
mov
pop
xchg
adc
jge
dec
outs
jnp
cwde
cld
test
xchg
xchg
mov
lea
neg
cmps
std
pop
imul
push
div
mov
ffree
inc
inc
xor
daa
and
jnp
(bad)
popa
jae
and
es
inc
jmp
cmp
xor
push
jbe
xchg
shl
(bad)
xor
enter
ins
mov
jns
mov
mov
xor
shr
sub
gs
ret
jl
jb
jnp
clc
test
xchg
call
cmp
retf
push
xchg
push
sub
pop
sub
pop
mov
lods
test
iret
imul
into
and
ja
js
dec
popf
jmp
mov
lods
mov
cli
lahf
inc
dec
clc
gs
mov
stos
cmps
retf
and
pushf
das
sbb
cli
sbb
shl
and
cmps
xchg
sub
popf
cli
sbb
xchg
xchg
mov
aam
or
fs
sbb
out
mov
xor
and
push
push
rol
mov
stc
adc
mov
push
lods
and
sub
pop
mov
(bad)
mov
pop
jnp
sub
xchg
in
gs
ret
test
inc
retf
mov
jmp
ret
aaa
movs
xor
xlat
rol
sbb
mov
lock
dec
test
idiv
mov
mov
cld
cli
xchg
mov
(bad)
adc
int
cmps
loopne
or
test
push
push
(bad)
loop
mov
add
dec
js
jae
inc
pop
fdivp
mov
fisub
or
mov
ja
in
or
push
inc
jbe
adc
or
cmp
rcl
(bad)
ror
cmp
call
loopne
aas
shl
retf
jge
sbb
mov
xchg
sbb
push
je
mov
loope
xchg
pop
mov
retfw
ins
push
pop
daa
dec
popf
nop
test
(bad)
aas
sub
aaa
sbb
push
fs
mov
mov
int3
inc
jmp
xchg
rcl
loope
test
pop
mov
mov
xor
mov
add
mov
mov
push
ret
imul
hlt
dec
pop
daa
sbb
cmp
push
dec
mov
clc
xchg
cmp
jnp
stc
(bad)
mov
xor
adc
mov
xlat
test
pop
fnsave
int3
idiv
call
push
mov
pushf
xchg
or
mov
mov
inc
add
fbstp
mov
adc
lds
cli
or
sbb
bound
fdivr
icebp
mov
les
outs
mov
jno
xor
(bad)
sahf
push
cmp
inc
jbe
sub
loope
and
test
push
mov
xchg
mov
out
je
push
dec
push
mov
jg
call
cdq
push
sbb
or
mov
push
test
les
repnz
add
leave
(bad)
aam
add
arpl
xchg
cmps
xor
ret
mov
add
dec
pop
jmp
lock
fcomp
movs
mov
fadd
popa
shl
inc
aam
ins
ja
xor
mov
fwait
mov
or
clc
add
sbb
add
mov
cmp
push
cmp
mov
into
in
or
aas
js
push
shl
or
cmp
(bad)
jne
enter
mov
call
xchg
mov
test
je
push
les
fwait
xor
push
jmp
ins
dec
inc
popa
xchg
inc
push
cmp
adc
xchg
retf
xchg
mov
dec
aam
cwde
push
and
mov
mov
add
ss
and
inc
or
fs
dec
cmp
mov
mov
pop
std
xlat
lock
inc
fld
retf
and
mov
xchg
test
add
sub
sahf
imul
lea
ret
ins
or
retf
dec
or
(bad)
call
push
rol
fsubp
(bad)
pop
dec
idiv
jmp
scas
pushf
inc
pop
or
dec
sbb
push
xchg
jne
mov
jecxz
dec
(bad)
and
lods
jle
loope
aas
cmp
out
and
dec
inc
fwait
cwde
test
jl
rcr
adc
js
jmp
dec
inc
pop
and
sahf
mov
jecxz
push
sbb
dec
push
arpl
mov
hlt
mov
fldenv
arpl
in
(bad)
gs
jmp
(bad)
push
sub
cmps
jns
shl
jmp
push
jle
pusha
jns
cmp
inc
je
sbb
str
clc
pop
mov
mov
mov
pop
jecxz
in
xor
jp
daa
inc
pop
dec
mov
sbb
popf
sub
std
mov
ins
dec
cli
ins
push
rcr
stc
adc
and
adc
jno
cld
test
mov
fwait
cmp
aam
test
icebp
pop
arpl
or
push
and
addr16
scas
cwde
add
lods
movs
mov
xchg
cld
mov
call
mov
xchg
js
(bad)
cmp
movs
iret
(bad)
jb
mov
repnz
out
jne
in
cmp
mov
dec
mov
call
push
sub
push
ror
jo
adc
cmps
in
add
and
aaa
mov
sbb
rcr
movs
movs
sar
add
pop
fisttp
push
cmp
pop
cli
pop
or
jae
fsub
push
outs
jge
adc
bound
inc
jp
push
neg
jbe
icebp
sub
nop
and
test
xchg
fsubrp
adc
or
imul
jl
mov
push
js
mov
mov
sub
sbb
fiadd
sahf
or
ror
pop
arpl
inc
ret
cdq
mul
call
cdq
adc
(bad)
fcomp
repz
nop
xchg
push
or
gs
mov
lds
inc
sbb
push
aad
sub
mov
pop
inc
inc
inc
inc
push
cmps
push
pop
mov
mov
inc
es
add
mov
sub
rcl
xor
push
rcr
push
(bad)
cmp
sahf
inc
out
pop
je
sbb
sub
mov
add
repnz
fcomp
adc
mov
pushf
cdq
push
call
mov
and
jmp
xchg
icebp
inc
leave
call
pop
mov
pop
sbb
arpl
jge
movs
dec
pop
test
add
je
push
mov
fist
(bad)
fiadd
push
xchg
daa
dec
push
cli
or
push
or
jbe
loopne
or
mov
jmp
pop
push
stc
jl
pop
jl
mov
cwde
lods
(bad)
jle
mov
enter
in
xor
mov
lods
dec
outs
xor
push
or
xor
pushf
pop
lea
int
sub
push
sub
fadd
inc
setne
das
out
xchg
xor
aad
mov
dec
jae
jecxz
sub
xchg
or
in
rcr
(bad)
aam
popf
push
xchg
cld
adc
cmp
xchg
shl
inc
jbe
call
mov
aad
adc
mov
gs
add
cmp
addr16
sbb
int
mov
pop
out
sbb
lds
adc
pop
push
pop
push
cs
int
jmp
(bad)
xlat
push
push
sti
imul
fdivp
push
lea
out
stos
sub
inc
and
or
sub
push
sub
sbb
adc
cmp
call
or
inc
xor
xchg
sti
stos
(bad)
jle
mov
sub
dec
hlt
test
push
cli
sbb
lea
push
int3
mov
jno
std
out
xchg
movs
pop
stos
pop
ins
mov
jecxz
dec
mov
mov
fild
pusha
xor
adc
(bad)
push
xor
mov
pop
push
cwde
or
jbe
lods
das
(bad)
jg
dec
in
inc
ins
mov
loop
jbe
mov
sub
mov
adc
mov
xor
push
sbb
dec
stos
sub
mov
aam
sbb
int
mov
cs
sahf
test
rol
call
pop
(bad)
mov
outs
cmp
push
sti
and
inc
pop
cmp
iret
or
pop
out
add
mov
test
push
aaa
dec
pop
popf
les
arpl
push
push
sar
add
jno
push
(bad)
jl
fcom
xchg
push
push
(bad)
mov
push
out
js
jmp
pushf
dec
cmc
cmp
lods
das
out
sbb
mov
jne
mov
imul
nop
inc
xor
and
mov
pop
push
repnz
xor
add
loop
cmp
xchg
inc
mov
test
sub
push
out
adc
ret
repz
fsub
push
loope
rol
imul
jmp
loopne
mov
(bad)
rol
jle
inc
in
xchg
inc
ins
cmp
mov
repz
pop
mov
push
mov
and
test
and
push
mov
shl
in
mov
inc
(bad)
or
push
push
fsubr
cmp
dec
inc
mov
dec
adc
js
pop
data16
mov
arpl
scas
sub
xlat
dec
das
and
sub
outs
push
mov
mov
push
cs
fadd
push
add
jmp
mov
xchg
ds
aam
pop
mov
repz
jge
xor
es
je
idiv
push
repz
mov
test
mov
dec
mov
lock
dec
retf
mov
xchg
jb
push
xchg
into
fwait
hlt
call
jp
rol
push
(bad)
inc
(bad)
daa
aas
add
pop
mov
and
jl
jmp
clc
enter
fmul
dec
ja
dec
push
jb
arpl
jbe
(bad)
sub
loope
mov
sbb
jnp
ror
pushf
std
dec
mov
pop
shr
stos
lahf
stos
xchg
sub
hlt
jne
sbb
push
xchg
sub
stc
retf
dec
or
call
and
add
hlt
pop
dec
popf
mov
dec
das
aad
lea
scas
jle
fisttp
cmps
fiadd
rol
aam
push
sub
cmp
ss
jno
jle
and
repz
or
(bad)
lods
adc
and
dec
sar
fs
add
dec
nop
dec
mov
clc
lods
pop
or
fs
test
inc
push
adc
dec
jo
add
mov
adc
imul
inc
sub
push
stc
xchg
cmps
pop
pushf
pop
mov
sbb
jbe
mov
xor
in
jp
push
sbb
jmp
sub
cs
cmps
les
(bad)
fadd
clc
retf
popa
dec
outs
jns
mov
jb
jo
cmp
mov
fcomp
jge
jbe
pop
outs
inc
or
call
push
stos
jmp
iret
xor
add
mov
mov
pop
jns
hlt
cmp
outs
sbb
xchg
add
cmp
pop
adc
dec
mov
jb
and
dec
xchg
inc
stos
daa
out
pop
push
das
inc
jg
or
xor
cmp
mov
push
out
xchg
cld
jns
sbb
call
jmp
(bad)
xchg
mov
dec
push
pop
fwait
pop
jmp
cmp
mov
call
mov
push
inc
in
pop
shr
pop
out
add
ror
fiadd
mov
lahf
add
mov
lock
xchg
outs
mov
inc
out
push
dec
ret
(bad)
or
bnd
adc
sub
jae
and
retf
imul
scas
sbb
pop
pop
jnp
xor
jge
mov
mov
jecxz
mov
push
sbb
xchg
std
xchg
mov
in
mov
jmp
aam
xor
mov
add
pop
mov
cdq
mov
add
test
dec
int
xor
rcl
pop
inc
jp
mov
push
int
push
cmp
xchg
adc
pop
fs
bound
mov
mov
popa
mov
and
js
cli
or
dec
lods
lea
xlat
sub
rcl
push
in
sub
add
imul
ficomp
adc
push
(bad)
inc
adc
jno
in
clc
retf
or
stos
pop
jp
jns
adc
inc
aad
mov
mov
jnp
pop
sub
sti
or
sub
loopne
mov
inc
int3
add
inc
ret
ffreep
mov
(bad)
mov
nop
stos
pop
and
mov
or
outs
(bad)
loop
(bad)
jl
add
xchg
scas
mov
mov
adc
mov
addr16
adc
fidiv
(bad)
test
jo
(bad)
jmp
push
stos
cwd
push
add
in
aad
jmp
pop
shr
loop
or
les
sbb
adc
push
sbb
pop
stos
push
mov
test
aas
popa
call
repz
fild
and
pop
jb
mov
popa
and
popa
xor
and
cmps
sbb
retf
(bad)
(bad)
jl
popa
pop
inc
fld
xchg
jno
push
leave
in
lock
(bad)
adc
ds
out
mov
jge
or
and
inc
call
pop
dec
mov
xor
cmp
shl
aas
or
push
jge
jo
dec
adc
in
das
jmp
push
pop
or
stos
sub
neg
jmp
pop
iret
jnp
xor
std
je
dec
pushfw
mov
lods
xor
ja
or
lds
inc
add
sub
pusha
(bad)
mov
aam
test
lea
add
fwait
dec
sub
mov
into
fxch
test
das
adc
dec
inc
cmp
push
mov
lahf
or
adc
sbb
mov
push
push
popa
sbb
sbb
xor
xor
sub
in
sti
mov
lahf
cmc
sub
fsubr
dec
sbb
push
bound
inc
push
and
repnz
iret
jp
sub
test
mov
push
loope
cld
mov
ins
test
aam
push
stos
pop
pop
adc
jo
out
nop
mov
enter
repnz
adc
test
imul
adc
pop
inc
in
mov
cmps
bound
pop
mov
cdq
and
add
push
mov
rcr
cmp
pop
dec
div
lods
sbb
ret
lahf
cmp
retf
outs
dec
ja
mov
pop
scas
lds
mov
inc
xor
or
push
mov
or
(bad)
jge
ins
les
and
repnz
add
popa
scas
sti
or
inc
jl
jmp
(bad)
mov
cwde
sahf
outs
or
jae
adc
cmp
and
sub
jge
(bad)
in
push
jne
scas
and
sub
adc
fist
mov
jo
xchg
mov
ins
in
push
fdiv
inc
iret
dec
xor
repz
out
popf
xchg
xchg
dec
or
or
cs
xchg
mov
mov
push
fsubr
or
sbb
lds
jge
and
push
cmp
out
cmp
out
aad
movs
out
mov
inc
daa
xchg
(bad)
jp
inc
dec
std
ss
popa
fnstsw
sti
out
sub
bound
push
mov
xchg
movs
pop
mov
mov
jl
sub
and
fs
lea
sbb
inc
sbb
imul
jg
cmp
push
cmp
lods
lahf
xchg
les
rcl
mov
jae
ss
jge
xchg
jecxz
xchg
(bad)
into
mov
sar
xor
add
mov
sar
popf
inc
mov
cmp
aam
fcom
xchg
xor
stc
in
(bad)
mov
lods
cmc
pushf
push
(bad)
cmc
pop
add
cli
jmp
hlt
mov
inc
sahf
pop
sub
xchg
les
rcl
add
(bad)
mov
scas
fsub
pop
and
xchg
bound
in
(bad)
es
lds
or
bound
retf
pop
push
sti
nop
mov
xor
aad
and
add
xor
pop
icebp
test
adc
ss
imul
imul
movs
nop
dec
test
jecxz
and
retf
cmp
pop
leave
sbb
or
push
cmp
inc
popf
pop
pop
xchg
lods
xchg
jge
and
ss
das
arpl
inc
pop
hlt
imul
or
push
mov
jmp
imul
jne
sub
shr
(bad)
shr
js
test
mov
inc
xlat
jmp
gs
sahf
push
jg
dec
ds
stc
pop
movs
shl
xor
mov
sub
repnz
push
movs
push
pop
and
push
sbb
addr16
sub
mov
clc
xchg
aam
int3
dec
cmps
mov
mov
xchg
ins
and
sub
in
cld
in
or
dec
dec
dec
neg
fsubr
mov
arpl
loope
(bad)
aas
add
xchg
jg
imul
nop
or
into
js
jbe
fisubr
dec
mov
jmp
sbb
xor
pusha
mov
xchg
jp
jecxz
enter
jb
aad
popa
popa
fst
addr16
sbb
arpl
dec
out
sbb
add
lock
jge
fstp
mov
sar
in
addr16
jno
adc
test
adc
ja
loopne
lods
mov
out
jge
mov
jne
jg
sbb
pop
sbb
std
pop
push
loopne
mov
mov
inc
iret
pop
cmps
xor
test
xor
call
shr
and
push
jp
xchg
mov
mov
lods
or
and
lahf
in
jge
jmp
(bad)
lock
dec
call
or
movs
mov
inc
mov
outs
ret
aas
imul
ret
data16
xchg
fistp
cmp
daa
(bad)
mov
cmps
pop
rcr
add
sub
push
test
aam
dec
cmp
dec
push
not
sar
mov
popa
cmc
jmp
cli
(bad)
shl
stos
sbb
cmp
int3
jp
dec
cmp
add
fcmovb
mov
inc
ret
dec
gs
and
cmps
mov
xor
jp
pop
cdq
dec
ret
rcl
sub
fdivr
fwait
data16
inc
test
jno
repz
and
aas
inc
popa
fwait
cli
mov
mov
add
inc
repnz
sbb
lods
mov
jmp
or
sub
sbb
pop
inc
mov
pusha
mov
mov
pop
or
xor
fnstsw
fisubr
xchg
jno
loope
scas
jno
adc
retf
jae
xor
mov
cmp
or
add
jbe
xchg
push
hlt
retf
cmc
(bad)
arpl
and
or
xchg
(bad)
repz
repnz
daa
mov
gs
shr
push
jbe
cdq
sbb
mov
push
xchg
(bad)
dec
dec
mov
jae
sub
sbb
inc
cmp
xchg
addr16
mov
mov
iret
ficomp
icebp
inc
div
push
retf
fs
cmp
push
(bad)
out
jns
and
repz
mov
sahf
(bad)
ror
lds
dec
dec
scas
adc
sti
addr16
ficomp
pop
lock
mov
scas
js
inc
lock
sbb
add
ins
in
or
mov
dec
jne
loopne
in
and
sbb
or
mov
jne
xchg
mov
gs
mov
fld
outs
fs
loope
les
ror
std
sbb
(bad)
out
mov
int
sub
push
inc
adc
inc
add
jl
outs
js
cdq
or
daa
xchg
push
pop
hlt
out
out
fnstsw
jbe
cld
hlt
xchg
(bad)
mov
mov
aas
in
adc
inc
sar
xchg
dec
in
add
pop
inc
inc
push
ror
jecxz
ins
and
jmp
or
ror
in
mov
dec
sbb
sbb
jbe
fidiv
jb
inc
out
inc
repz
or
cmp
pushf
movs
call
fwait
mov
jp
dec
cmps
in
inc
fidivr
shl
lds
nop
int
call
pop
cli
stos
add
ror
dec
sbb
nop
jne
xor
(bad)
add
ds
call
enter
arpl
add
xchg
sbb
out
pop
push
cwde
mov
lds
adc
and
cmc
mov
jae
loop
stos
xor
bound
fmul
fmulp
out
push
jle
and
mov
idiv
push
out
mov
mov
sub
loop
jle
fwait
mov
push
inc
jmp
or
ins
fisub
jae
les
jl
sbb
mov
xchg
mov
jle
nop
cmp
and
inc
dec
iret
or
cmp
ror
xchg
cmps
jne
and
retf
fwait
inc
sub
mov
sbb
aam
sub
loopne
(bad)
adc
cmps
inc
lods
(bad)
ret
mov
inc
inc
mov
mov
shr
cmp
fs
rcr
pusha
sub
or
or
xchg
out
cdq
xor
stos
inc
sub
push
dec
xor
lds
xor
add
gs
ret
imul
cli
push
dec
sbb
hlt
add
cmp
leave
mov
lods
jae
or
(bad)
mov
jl
into
mov
and
mov
or
cwde
stos
mov
sar
xchg
outs
(bad)
scas
pop
inc
pop
shr
sbb
pop
sbb
mov
jg
mov
sbb
retf
fstp
jle
xchg
xlat
cdq
fsub
jne
adc
aad
adc
cwde
xor
hlt
ins
sbb
mov
or
xchg
cli
(bad)
fdivr
je
(bad)
xacquire
jmp
ins
sbb
out
pushf
movs
shl
scas
icebp
(bad)
(bad)
call
cli
maskmovq
mul
fs
pushf
adc
inc
or
or
and
pushf
imul
cwde
mov
ss
mov
scas
mov
sub
mov
(bad)
adc
cwde
xor
mov
adc
fisttp
cmp
xchg
sbb
shl
scas
mov
ja
sub
fs
(bad)
sbb
jbe
cmp
xor
mov
in
stos
scas
stc
popa
mov
bound
ins
aam
pusha
jno
xor
push
mov
or
mov
sub
ror
shl
inc
xor
mul
push
(bad)
mov
(bad)
mov
push
fcomp
mov
push
das
or
sbb
out
add
sub
ret
inc
push
ja
fucomip
retf
xor
clc
je
push
sahf
xor
arpl
sahf
mov
mov
in
leave
pop
ins
or
xchg
or
arpl
pusha
jb
repnz
push
cdq
sbb
fistp
jns
in
add
add
mov
lds
rcl
imul
xchg
sub
int3
loope
stos
in
mov
out
dec
stos
dec
xchg
gs
out
out
sti
jnp
dec
xchg
test
pop
jae
cs
mov
sub
mov
das
xlat
rep
ins
xchg
mov
xchg
jo
cmp
add
enter
sahf
mov
add
test
jge
jbe
mov
sbb
je
outs
add
add
xchg
pop
add
fsubr
jl
scas
cmp
push
sbb
pop
fild
jmp
cmp
jne
and
xchg
mov
jno
xlat
ret
and
loope
jmp
add
scas
mov
cmc
not
cdq
out
inc
data16
mov
mov
cwde
es
mov
fmul
jmp
or
jns
cs
dec
sub
cwde
pop
es
rcr
xchg
cmp
aam
cmc
jnp
lods
lods
cmp
fdivp
(bad)
cli
and
pop
stos
loopne
pop
jle
or
movs
inc
loopne
mov
mov
jne
ffreep
and
sub
mov
mov
(bad)
test
cmp
hlt
xor
aaa
push
ja
in
or
adc
mov
adc
adc
xchg
mov
ret
stos
cs
and
cmp
sub
sbb
sbb
imul
lock
pop
xor
movs
(bad)
in
jbe
popa
cmc
fdivr
les
scas
pop
stos
cmps
push
push
rcr
mov
retf
int
popa
test
inc
pusha
hlt
sbb
mov
sub
dec
pop
lods
mov
loope
ror
retf
adc
les
sbb
test
cdq
popa
adc
aas
in
mov
mov
add
cmp
mov
jp
(bad)
xchg
push
xchg
push
cmp
pushf
xor
xor
lds
mov
sub
fsub
addr16
mov
aad
pop
retf
fiadd
(bad)
cld
das
sub
sub
dec
jne
mov
enter
dec
enter
inc
sub
mov
jne
xchg
scas
ret
mov
sub
pop
fild
mov
and
pop
test
repnz
cld
jecxz
addr16
cmp
popf
in
add
idiv
sahf
sbb
loopne
jnp
out
pop
das
je
lock
jge
outs
add
rcr
cmps
xchg
int
pop
jne
test
stos
jmp
addr16
nop
je
stos
push
nop
add
fistp
mov
cmp
cmp
inc
cmp
jge
addr16
dec
dec
inc
call
dec
in
pop
loope
adc
aad
leave
loop
cld
mov
xchg
jne
retf
or
lea
sbb
imul
shl
aad
cli
mov
jbe
inc
icebp
xchg
hlt
sub
sub
lea
push
cmp
imul
shr
or
ins
mov
jb
arpl
call
addr16
outs
enter
rcr
fs
loope
adc
mov
adc
loope
mov
stos
jae
jmp
xlat
sbb
mov
outs
aad
xor
mov
jnp
retf
popf
in
test
es
mov
cmp
out
adc
icebp
sbb
es
in
cmps
push
pop
mov
js
int
xor
scas
or
jae
fsubr
pop
sbb
nop
popa
aaa
retfw
xchg
sbb
and
push
sbb
mov
mov
push
and
xchg
fbld
stc
sbb
aad
out
rcl
ret
adc
ror
sbb
jg
push
mov
dec
ret
inc
push
mov
mov
rol
push
js
fs
mov
xchg
lods
mov
push
sbb
mov
je
(bad)
sbb
mov
shr
push
add
lods
or
gs
jp
push
fisub
hlt
mov
cli
lods
push
ja
jb
lahf
sbb
and
cmps
retf
sbb
clc
pop
dec
mov
test
jne
ret
xchg
sti
es
push
in
retf
and
scas
sbb
clc
test
dec
leave
dec
shl
fwait
xchg
jmp
push
or
dec
scas
mov
dec
ret
stos
add
nop
xor
mov
push
pop
pop
mov
lock
xlat
jns
mov
sbb
shr
jge
xlat
ror
(bad)
jno
fdivr
iret
js
xchg
out
sbb
pop
or
or
arpl
or
bound
fs
dec
and
push
pop
pop
cs
and
pop
mov
xchg
rcl
int3
xchg
push
jne
xor
lods
add
mov
add
mov
movs
es
clc
repnz
call
mov
add
sar
call
ins
jo
adc
pusha
push
pop
in
xor
mov
movs
inc
(bad)
in
cmp
jle
jbe
and
lods
push
sbb
mov
out
fucomi
adc
cmp
cwde
fst
out
repz
adc
stc
cmp
sahf
in
pop
cli
xor
mov
and
movs
scas
jb
fild
dec
jns
adc
pop
xchg
mov
mov
je
sti
add
into
mov
dec
lock
xchg
and
mov
clc
fdivp
mov
jb
icebp
test
sbb
popf
loop
sbb
or
inc
inc
jbe
lods
in
fdivr
fwait
mov
dec
or
lods
inc
jbe
pushf
sub
test
xchg
dec
cmp
jnp
rcr
mov
push
les
push
movs
jns
pop
sbb
enter
or
sbb
xor
out
data16
arpl
jb
mov
mov
add
imul
loopne
mov
clc
and
in
fs
dec
jno
(bad)
lock
stos
adc
sbb
mov
data16
dec
les
mov
cmps
shl
jnp
std
add
add
imul
push
jbe
add
inc
mov
clc
xor
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
sbb
xchg
mov
inc
lds
push
(bad)
shr
push
ins
sub
add
clc
mov
jne
xor
push
fimul
out
push
scas
retf
int
mov
cmp
out
test
icebp
cmp
inc
xlat
punpckhdq
in
inc
std
fdivr
loop
adc
mov
sbb
push
inc
popa
loope
xor
pop
ret
xor
pusha
int3
dec
(bad)
lds
dec
cmp
ss
test
or
out
adc
mov
mov
mov
imul
mov
mov
cmp
dec
not
xchg
aam
out
cmc
xor
push
or
sub
int3
dec
push
icebp
inc
or
nop
ror
mov
repnz
shr
fsubr
sti
dec
and
sub
pop
jmp
push
cmps
sbb
xchg
pop
sahf
imul
or
mov
cdq
clc
hlt
xor
(bad)
xor
push
mov
in
xchg
inc
inc
call
std
test
shl
call
dec
aas
nop
in
mov
jl
mov
dec
test
mov
out
jmp
ret
xor
lea
mov
fsubr
repnz
das
popa
cmps
sub
std
cs
mov
cdq
fsub
sbb
xor
jb
mov
sub
mov
adc
mov
aad
repnz
sbb
es
fwait
into
mov
repz
stc
das
int
inc
fistp
push
mov
scas
out
mov
inc
inc
or
pop
push
sub
push
xor
lea
xchg
pushf
repz
sbb
arpl
popa
in
xor
shr
int3
push
pop
ret
test
mov
mov
out
push
mov
fyl2xp1
mov
pop
lds
test
ret
mov
sub
mov
ins
cmps
ins
stos
pop
div
shr
sub
pop
add
fist
sbb
je
jo
pop
cmp
xor
or
mov
and
retf
fwait
lock
pusha
lods
jb
push
test
adc
inc
mov
popf
cmp
jmp
(bad)
pop
sub
push
outs
jge
xlat
(bad)
lods
push
dec
mov
lock
pusha
scas
xchg
lods
jbe
dec
add
sbb
and
mov
loope
mov
push
inc
pop
pop
fnstenv
cmc
xchg
data16
adc
xor
test
stos
inc
je
jecxz
hlt
pop
or
imul
cmp
push
mov
sti
mov
mov
pop
(bad)
ins
and
(bad)
iret
xchg
pop
push
jae
mul
or
ds
pop
inc
push
xchg
stos
sbb
fisub
retf
jne
push
fdiv
(bad)
popa
inc
mov
cs
push
dec
std
xor
push
sub
enter
and
test
xchg
add
hlt
mov
xor
icebp
retf
or
scas
mov
fcomi
in
sbb
xchg
(bad)
push
(bad)
jg
mov
stos
cmp
cmp
es
test
outs
shr
mov
cmp
sub
adc
in
add
fsub
cwde
stos
mov
int3
test
jg
iret
mov
inc
jmp
stos
out
or
or
fist
push
imul
mov
imul
jno
aaa
stos
mov
add
rcr
mov
cmc
in
fcom
stos
mov
fidivr
nop
ins
in
lock
mov
das
test
mov
and
jg
and
icebp
push
mov
fsubr
in
out
sbb
adc
in
(bad)
in
jnp
inc
shr
sbb
adc
ss
push
and
xchg
jmp
inc
mov
or
dec
loop
mov
cwde
das
(bad)
sar
sub
dec
xchg
jmp
sub
adc
test
retf
and
stos
jo
mov
scas
nop
or
pop
mov
call
stos
jo
ja
ret
in
jp
push
ficomp
pop
mov
mov
daa
mov
push
sbb
imul
mov
jb
hlt
pop
hlt
js
inc
out
mov
imul
cmp
stc
jno
pusha
js
adc
ret
dec
(bad)
pop
pop
test
lea
enter
add
inc
sub
loopne
add
mov
sub
popf
xchg
inc
add
push
movs
add
mov
and
xchg
movs
out
xchg
out
fsub
ss
iret
push
lods
adc
xchg
dec
out
(bad)
and
adc
dec
cld
clc
mov
out
mov
outs
shl
or
cpuid
shl
jg
or
push
lds
mov
call
and
ret
adc
jmp
imul
call
into
ins
inc
mov
or
pop
in
shl
jge
add
cli
cmp
cmp
dec
cwde
pop
movs
pop
js
sub
imul
mov
ret
dec
repnz
fnsave
ret
fist
shl
ror
ret
mov
add
pop
movs
addr16
cmp
out
ins
and
int3
or
addr16
push
stos
fisttp
mov
shl
aam
test
mov
lods
cmps
add
pop
mov
out
mov
and
dec
aad
dec
xor
or
pop
loopne
outs
fsub
dec
push
dec
les
mov
pusha
cmc
imul
sub
xor
rol
or
mov
cs
sub
retf
mov
call
ret
ds
jns
sti
mov
jge
push
mov
lds
test
imul
inc
xchg
sbb
repz
pop
mul
outs
out
xchg
xor
js
std
ror
push
retf
pop
push
loop
popa
sub
dec
and
test
loope
push
and
sub
(bad)
jecxz
in
xchg
cmp
mov
ret
push
pop
into
jmp
out
cmp
dec
int
das
mov
fisttp
lock
call
and
(bad)
daa
cmp
cmp
pop
push
daa
or
leave
add
data16
push
hlt
in
jge
ja
cld
rol
fldpi
cmp
icebp
fs
xchg
dec
xchg
inc
push
and
adc
or
gs
out
arpl
jp
into
push
fld
xor
test
cmp
fmul
xchg
aaa
cld
adc
mov
das
(bad)
out
cld
jae
pop
xor
mov
adc
add
mov
push
and
clc
js
in
mov
aam
xor
and
mov
xchg
xchg
inc
stos
cmp
ret
les
aad
mov
fsub
mov
icebp
push
sub
xchg
popf
push
jp
stc
loope
loopne
mov
push
mov
es
out
ret
bound
xor
pop
push
or
std
fld
loope
inc
(bad)
and
jmp
jb
je
std
lahf
gs
(bad)
hlt
pop
cmp
test
push
jo
test
fwait
jo
movs
and
mov
push
cld
out
pop
sub
mov
pusha
xchg
retf
retf
lods
xor
icebp
pop
(bad)
and
lock
xchg
or
xchg
(bad)
aam
and
in
cmps
imul
retf
adc
movs
fiadd
in
loope
push
stos
fadd
push
pop
xchg
and
pop
and
ja
lock
pop
push
cld
(bad)
push
sbb
int
je
dec
push
mov
push
enter
sbb
add
xor
mov
fmul
int
mov
in
push
ins
in
xor
jle
cwde
pop
xchg
sar
pop
xchg
(bad)
add
and
addr16
cmp
gs
aas
mov
ds
pop
adc
fisttp
or
in
or
inc
or
fs
std
fisubr
mov
lods
mov
adc
jb
cmp
lock
and
es
cmp
sub
nop
sti
jp
mov
div
pop
outs
ss
or
pushf
bound
gs
or
out
cs
sub
jle
mov
sub
rcl
ret
xchg
fnstenv
mov
or
xchg
push
ins
xchg
mov
push
js
out
in
dec
aas
mov
mov
and
mov
clc
sub
xor
sbb
adc
xchg
jne
test
mov
inc
fstp
popf
jbe
scas
pop
pop
jne
push
cmps
xchg
test
mov
cmp
push
push
mov
addr16
addr16
push
lahf
shl
pop
fstp
or
jl
mov
inc
jbe
xchg
and
xchg
mov
push
sub
dec
sub
ss
aaa
inc
cmp
rcl
jmp
sbb
xor
loope
ins
and
sti
ds
lea
fidivr
mov
dec
pop
or
push
imul
sub
mov
out
data16
pop
inc
xchg
pop
jne
stc
jecxz
ror
and
retf
push
sbb
adc
das
xor
mov
jmp
mov
or
nop
adc
push
aaa
mov
nop
push
xchg
dec
cmp
movs
lahf
enter
imul
outs
dec
mov
dec
sub
test
int
inc
pop
aas
ins
and
je
aas
jns
cmp
xor
mov
push
mov
mov
xor
shl
out
ds
and
fidivr
add
call
and
repz
jb
jbe
ret
cwde
inc
ret
xor
or
call
push
nop
imul
(bad)
mov
xor
icebp
and
mov
(bad)
push
inc
add
stc
xchg
imul
pop
ret
jecxz
enter
and
addr16
(bad)
mov
(bad)
sbb
pop
test
mov
mov
sbb
cmp
out
arpl
aam
and
sar
or
and
dec
and
sar
je
in
xchg
cs
lea
outs
lods
stos
stc
cmp
xor
pop
rcr
adc
add
ss
push
and
fwait
pop
cmps
mov
push
mov
sub
cdq
mov
in
sub
dec
mov
xor
push
and
(bad)
in
add
fdivr
rol
mov
push
ror
mov
lea
inc
xchg
push
dec
in
ret
adc
mov
xor
jno
mov
stos
movs
lods
sbb
pop
adc
adc
ret
lea
scas
imul
lahf
mov
sub
or
mov
call
dec
clc
fisub
dec
jmp
fsubr
push
jae
ss
jecxz
ins
fiadd
xchg
pop
pop
js
ins
(bad)
(bad)
fiadd
in
mov
loope
data16
pop
sub
push
pop
add
test
sar
add
sub
dec
out
hlt
sar
xchg
sub
daa
cmp
fwait
out
adc
inc
loop
ret
data16
adc
(bad)
dec
popf
into
pop
xor
and
iret
les
imul
or
std
jge
inc
(bad)
nop
push
cwde
mov
mov
mov
mov
ss
xchg
not
or
xor
test
daa
enter
ds
imul
inc
adc
add
neg
out
dec
add
sub
inc
jge
jns
rcl
lock
mov
pushf
adc
sbb
mov
bound
into
(bad)
ss
pop
cwde
xchg
addr16
push
jnp
xor
push
icebp
add
je
mov
scas
cmp
inc
push
sbb
aad
jge
or
ins
bound
in
cwde
xchg
mov
mov
fnstenv
sub
in
jmp
jne
fistp
pop
and
pop
movs
mov
iret
dec
jmp
(bad)
push
mov
cmp
adc
mov
or
out
push
xor
add
mov
leave
into
pop
in
movlps
or
call
xor
inc
dec
add
xor
sbb
jmp
mov
outs
mov
aas
sub
xchg
cmp
jmp
ins
popa
dec
test
jns
pop
pop
inc
pop
xchg
cmps
rol
sti
iret
jnp
mov
inc
aad
test
cmp
add
xchg
shl
cmp
sub
xchg
adc
imul
mov
inc
push
pop
retf
cmp
aad
imul
ja
test
push
in
sub
cmc
int3
nop
xor
cs
push
cmp
mov
jno
mov
je
in
xchg
fmul
shr
loope
jg
add
mov
loope
outs
and
xor
dec
mov
xlat
addr16
add
mov
add
outs
rol
retf
push
stos
pop
mov
and
in
mov
ret
mov
psubsb
adc
add
pop
out
cmp
pushaw
cvtps2pd
mov
dec
int3
or
repnz
mov
inc
out
clc
sub
loop
sub
adc
jge
sbb
mov
fldln2
push
jbe
sbb
push
jl
cs
cmp
gs
bound
xchg
sub
mov
push
enter
dec
cs
fnstcw
mov
inc
test
pop
test
sub
jne
cld
push
xor
loop
outs
retf
xlat
sbb
mov
mov
jns
loope
mov
popf
and
jge
sub
bound
inc
ja
data16
push
mov
inc
sbb
xchg
inc
cli
test
xchg
or
mov
(bad)
push
nop
pop
lahf
pop
scas
test
push
arpl
push
jae
jb
push
lds
rol
adc
sbb
loopne
icebp
add
inc
call
push
or
inc
cmp
fwait
test
int3
mov
scas
inc
or
jle
xor
retf
daa
jns
dec
es
enter
fdiv
and
cmp
inc
push
jb
jb
mov
movs
out
leave
mov
jnp
ja
out
dec
inc
gs
pushf
daa
push
daa
loop
dec
or
call
mov
hlt
imul
sbb
fistp
adc
jmp
dec
and
push
adc
inc
inc
(bad)
cs
dec
mov
sub
data16
inc
push
not
cmp
(bad)
pop
out
test
aam
loop
out
(bad)
mov
and
or
dec
and
scas
(bad)
xchg
clc
mov
sahf
ret
cmp
and
mov
push
dec
movs
xor
(bad)
pop
in
mov
push
movs
out
xlat
and
mov
enter
pop
outs
cmp
mov
and
cmps
fwait
and
mov
sbb
rol
jae
das
jp
aam
(bad)
(bad)
and
or
sbb
enter
ret
(bad)
lock
int
lds
call
inc
inc
(bad)
scas
(bad)
inc
fadd
add
movs
pop
pop
sub
inc
ret
(bad)
jnp
jge
fmul
sbb
repnz
sub
dec
xor
xchg
pop
ja
pop
aas
(bad)
shl
lock
neg
mov
jle
cs
ins
and
mov
cmps
in
dec
outs
rol
iret
jmp
mov
xchg
aad
fcom
add
xchg
mov
sub
cld
(bad)
jle
aas
enter
gs
cmps
dec
(bad)
bound
(bad)
cmc
jecxz
aas
(bad)
jge
ret
adc
cwde
jo
xchg
inc
adc
packuswb
or
aam
xor
and
mov
and
mov
pop
imul
push
lahf
dec
add
test
push
mov
jne
movs
pop
iret
out
xchg
inc
and
mov
or
push
pop
jo
xor
dec
neg
xchg
mov
out
(bad)
or
popf
cmps
gs
xor
xchg
cmps
cmp
push
push
test
adc
arpl
jg
js
cmp
cmps
or
add
push
aas
cld
es
inc
mov
mov
cmp
aaa
xchg
dec
rcl
nop
daa
push
daa
and
sub
inc
ds
and
je
xor
sbb
test
xchg
in
mov
mov
imul
hlt
cwde
mov
jp
mov
jp
cmp
in
pop
ds
jmp
adc
sub
inc
inc
sub
ret
popa
jae
jmp
pushf
xchg
jbe
dec
aaa
ret
jg
je
arpl
sti
stos
out
jp
sbb
adc
pop
bound
fild
int3
inc
inc
inc
(bad)
lock
aaa
cmp
inc
mov
neg
xchg
push
enter
add
mov
xchg
in
push
dec
push
mov
pushf
leave
mov
add
into
or
out
xchg
outs
pop
cdq
sub
scas
jmp
loope
mov
push
xor
inc
or
dec
add
dec
inc
enter
mov
pop
add
loop
ds
pop
daa
pop
jo
pusha
das
xor
adc
add
popf
xor
add
pop
cmp
push
mov
iret
mov
je
adc
sbb
mov
(bad)
cmps
sub
imul
sti
test
(bad)
icebp
(bad)
adc
out
js
fnstcw
sbb
retf
sti
repnz
mov
inc
retf
push
mov
add
xchg
out
aaa
lods
jbe
add
adc
retf
mov
mov
aas
jl
into
push
xchg
mov
data16
mov
adc
pusha
adc
enter
jbe
not
xchg
mov
ins
sub
pop
sbb
xchg
lods
lahf
mov
cmp
cs
jae
jbe
sbb
inc
lods
lahf
push
add
inc
push
mov
imul
pop
or
and
in
jns
fiadd
xor
aam
mul
not
idiv
or
sbb
cli
pushf
aam
inc
mov
sbb
cmp
clc
push
jp
aas
push
inc
rcl
outs
inc
xchg
pop
sub
jmp
jecxz
add
mov
scas
ret
enter
loopne
es
fdivr
in
xchg
pop
cmp
xor
popa
fs
sub
shl
or
adc
aad
mov
mov
pop
aam
pop
mul
push
push
out
sub
inc
movs
push
out
and
aaa
inc
mov
pop
stos
mov
xchg
mov
sub
dec
(bad)
aam
pop
pusha
jns
inc
int
mov
ins
stc
dec
jmp
psubw
xchg
jae
xor
inc
inc
inc
mov
scas
lds
mov
sbb
lock
pop
inc
ror
inc
(bad)
dec
imul
ins
push
inc
mov
stos
mov
stos
icebp
arpl
fs
in
or
add
out
das
sar
mov
ror
mov
mov
mov
test
call
xor
mov
pop
jne
in
xor
not
js
jg
ja
inc
popf
adc
xchg
add
fsub
mov
out
je
mov
jb
ror
cmp
jnp
ficomp
sub
retf
xchg
pop
aas
popf
inc
inc
adc
je
mov
pop
cmp
mov
xor
mov
cmp
sbb
dec
mov
push
pop
in
retf
cmp
jmp
mov
jb
pop
(bad)
or
sbb
mov
add
cmp
and
cld
jmp
cmp
mov
mov
mov
aaa
mov
movs
shr
out
xor
iret
adc
sbb
adc
mov
repnz
sti
ret
pop
das
aam
push
sub
fnstenv
jmp
das
daa
mov
es
pop
stos
loopne
push
and
jmp
xchg
hlt
cmps
pusha
adc
repnz
cmp
lahf
mov
loope
and
enter
mov
add
dec
mov
cmps
xchg
mov
cwde
jae
stc
cmp
les
xor
push
or
sar
mov
call
xor
sub
test
xor
jmp
jbe
lds
mov
sub
test
rcr
aaa
mov
inc
push
movs
pop
inc
sub
push
xchg
xchg
jg
data16
cmp
retf
test
dec
ror
mov
aaa
fcomp
ret
test
test
daa
dec
jns
in
inc
sub
sbb
ins
das
test
cmp
dec
lock
mov
sar
(bad)
call
push
inc
lods
data16
push
jno
push
xchg
inc
or
mov
pop
and
ins
repnz
and
push
in
outs
cmps
pop
lea
call
push
jb
aam
xor
fwait
jns
push
scas
pop
test
int3
js
xor
cmp
fdivr
repnz
push
mov
xor
leave
mov
mov
dec
fcmovnu
fdivr
(bad)
arpl
xchg
jge
dec
cmp
sub
add
mov
mov
mov
int
retf
inc
or
int
pop
sar
cmpxchg
cmp
xor
call
lds
cmp
bound
fidivr
test
outs
shl
and
das
mov
xchg
test
cmc
je
test
add
je
xchg
das
xor
lahf
xlat
nop
sub
test
adc
dec
sti
pop
or
cmps
dec
scas
sub
push
jne
(bad)
push
fdiv
push
xchg
shr
vmwrite
sti
dec
dec
cmp
adc
movs
(bad)
scas
addr16
cmc
xchg
test
mov
cmp
push
pop
test
in
push
(bad)
pushf
xor
add
adc
clc
repz
inc
call
xchg
add
push
js
(bad)
movs
dec
jp
arpl
cwde
leave
call
dec
adc
es
xchg
outs
and
push
xchg
out
jnp
sbb
mul
sub
pop
add
push
retf
cmp
pop
inc
and
add
shr
call
pop
mov
ins
sub
push
xlat
and
sub
rcr
cmp
pop
mov
adc
mov
mov
add
or
movd
imul
jo
sub
push
gs
adc
cdq
scas
loopne
or
dec
or
xchg
fadd
xor
fstp
and
sub
sahf
mov
pop
(bad)
push
int3
mov
sub
mov
push
sahf
es
icebp
ret
dec
inc
enter
pop
clc
ds
mov
shl
push
rcl
adc
mov
leave
out
xchg
cmp
and
or
jl
adc
adc
(bad)
stos
arpl
cli
add
aas
retf
into
test
jbe
pop
mov
inc
jg
xor
cmp
js
sub
or
and
add
push
fimul
add
adc
adc
aam
data16
mov
sub
mov
mov
addr16
mov
jle
movs
call
loopne
retf
mov
test
sub
scas
adc
cmc
xchg
out
imul
sub
test
shr
outs
ror
(bad)
xor
in
neg
test
rcl
leave
ret
dec
pushf
jbe
mov
sbb
adc
movs
imul
(bad)
pop
mov
arpl
mov
dec
and
mov
inc
dec
repnz
jne
das
push
mov
push
out
xchg
into
jle
mov
fisub
int
outs
mov
(bad)
jmp
inc
lods
add
cmp
jmp
sub
and
jb
xor
call
dec
sbb
adc
jnp
gs
inc
cli
xchg
retf
les
outs
loope
jmp
nop
pop
cmp
sbb
push
push
mov
dec
shl
lds
lods
outs
cmp
jnp
jae
inc
push
inc
dec
sti
aas
or
cmp
xchg
ds
and
rol
dec
not
imul
leave
and
test
adc
and
push
das
sub
mov
inc
cli
fsubrp
adc
mov
xor
mov
jo
jmp
xor
and
enter
aam
and
push
lods
adc
cmp
jl
ror
mov
fcom
iret
push
mov
mov
and
test
jno
adc
mov
(bad)
sbb
imul
stos
(bad)
ins
addr16
test
and
pop
mov
pop
fadd
jmp
jl
stos
out
int
push
lahf
popf
(bad)
in
pop
ja
neg
xor
ror
inc
mov
shl
and
pop
jecxz
or
cmovge
pop
adc
sub
push
shr
pop
adc
out
sub
hlt
xchg
(bad)
imul
jg
mov
push
add
mov
test
in
sub
enter
ins
sbb
pusha
fnstsw
nop
fadd
or
js
lock
shl
popa
mov
xchg
ret
cmp
lods
sub
sbb
(bad)
mov
xor
test
repnz
inc
jecxz
ds
iret
push
hlt
push
test
(bad)
js
sbb
push
mov
mov
sub
sahf
jmp
mov
mov
cmpps
push
es
sub
xor
pop
mov
aam
add
xchg
cmp
mov
adc
pop
ins
shr
or
mov
fsubr
cmp
xor
mov
inc
adc
shl
sbb
or
or
fwait
push
sbb
and
scas
retw
addr16
pushf
xor
stc
add
hlt
enter
add
sahf
fisttp
mov
fs
mov
push
or
enter
mov
ja
mov
je
inc
push
xor
popf
and
retf
mov
xor
cmp
push
gs
fstp
sar
xor
lods
test
push
fild
mov
ret
data16
lds
shl
mov
or
jl
dec
in
fisubr
sub
cmp
or
and
dec
xor
mov
les
adc
add
pop
sbb
jge
stc
imul
cdq
mov
sbb
cld
push
loopne
sbb
push
in
mov
mov
int3
pop
cmps
inc
(bad)
mov
(bad)
aas
inc
mov
movs
retf
push
push
xor
lods
mov
cmp
leave
or
dec
or
xchg
sbb
mov
(bad)
test
mov
mov
fadd
jp
ja
sahf
xor
inc
mov
es
or
cs
div
xchg
pop
mov
call
aaa
cmp
mov
inc
call
xor
xchg
call
or
jg
fmul
rcr
fisttp
mov
inc
mov
into
jp
and
pop
cli
into
je
fild
int3
add
xchg
cmc
and
or
mov
dec
jmp
mov
fcomi
shl
adc
sub
stos
dec
jp
ins
ret
jl
dec
fidivr
adc
xor
dec
mov
sub
mov
dec
rol
sahf
dec
jl
mov
sbb
jmp
add
sahf
arpl
popf
xchg
mov
pop
test
cdq
jb
push
add
(bad)
in
adc
out
lock
dec
dec
cmps
das
jp
cmp
out
mov
jbe
push
cmc
jns
pop
cmps
hlt
push
sbb
outs
out
add
ret
sub
les
xchg
cmc
sub
mov
les
shl
shl
aad
xchg
scas
inc
loopne
jp
cmc
je
xor
stc
fldcw
cmp
sub
or
scas
mov
arpl
sub
imul
jns
xor
inc
or
pop
movs
push
pop
push
pop
cmp
out
xchg
inc
rol
iret
push
inc
inc
jmp
addr16
stc
stos
popf
sbb
aaa
fsubr
das
imul
mov
pop
jg
cmp
out
jns
ins
mov
pop
or
bound
inc
lds
add
inc
cmp
dec
(bad)
aad
fnstcw
jns
cmc
sti
fs
pusha
shr
fmul
sbb
sbb
push
mov
(bad)
int
fld
sub
push
stos
adc
and
daa
pop
js
sbb
enter
adc
inc
sub
cmps
xlat
test
sub
fidivr
sbb
jbe
push
add
in
and
and
call
retf
lds
fld
popf
xchg
mov
inc
dec
dec
ins
and
jge
mov
jo
jno
icebp
mov
push
jbe
sub
out
add
pop
ja
out
nop
inc
neg
inc
movs
rol
cld
cmp
add
int
test
mov
inc
out
pop
push
dec
pushf
or
imul
push
(bad)
addr16
jle
mov
lahf
aam
xor
lea
and
(bad)
stos
push
inc
cmc
or
jmp
xchg
dec
pop
inc
mov
in
sti
push
pushf
enter
cmp
cdq
je
sbb
and
mov
push
fsub
mov
cdq
cmp
fisubr
call
adc
sar
cmp
int
rcl
jg
lock
call
(bad)
mov
xor
dec
aas
ins
cmp
pop
pop
ins
cmp
pop
pop
daa
mov
jns
dec
movs
rcl
jb
(bad)
jb
lods
jne
cmp
nop
cmp
jl
cmp
ror
push
(bad)
sub
call
sub
xchg
dec
pusha
sub
and
lea
pushf
pop
push
inc
iret
outs
dec
push
int3
imul
fs
js
or
jl
cmps
clc
add
xchg
pop
retf
push
mov
cmps
cmp
stos
sub
ss
dec
jle
movs
jno
cmp
aaa
xor
daa
jp
sub
adc
sahf
ss
inc
out
je
mov
mov
pop
or
jecxz
out
sub
xchg
xchg
ss
imul
inc
xor
push
scas
call
movs
jo
adc
lea
adc
data16
fbstp
dec
ret
fcomi
je
push
mov
arpl
inc
add
leave
jb
inc
xchg
pop
push
pusha
loopne
push
adc
fld
mov
ficom
cmp
js
popa
lea
sub
jp
jge
dec
std
sub
mov
(bad)
cmc
fsubp
jg
stos
push
or
dec
jp
imul
mov
test
adc
cmp
pop
or
cmps
nop
pushf
les
dec
cwde
out
into
jmp
mov
xor
clc
xor
adc
fwait
int3
mov
add
push
sub
mov
imul
push
mov
lock
lods
mov
fistp
push
push
loope
xchg
dec
stc
sub
inc
mov
lahf
inc
mov
call
xchg
push
js
fsub
(bad)
jmp
imul
scas
aad
adc
lea
retf
pop
pop
add
mov
xchg
xchg
jns
pop
stc
xchg
neg
std
popa
mov
cmc
xchg
ds
iret
pop
push
retf
push
cld
dec
push
push
ins
inc
jge
ret
(bad)
in
push
shl
inc
mov
cmps
cmps
inc
test
leave
mov
xchg
repnz
iret
mov
cmp
sbb
outs
std
pop
xchg
add
fmul
pop
mov
xchg
out
push
or
xchg
sbb
add
test
and
dec
mov
fbstp
loope
sub
or
mov
vunpcklps
add
clc
fdiv
bound
(bad)
aaa
js
mov
adc
dec
push
sti
cdq
and
mov
mov
mov
and
xor
inc
inc
aad
push
dec
mov
inc
jmp
in
movs
mov
sub
add
adc
sub
loop
mov
dec
mov
inc
loopne
jno
nop
add
imul
movs
(bad)
sbb
dec
cs
int3
ficom
add
jo
dec
mov
das
repz
dec
ret
jnp
xor
and
(bad)
lds
ja
jmp
xor
out
popf
xchg
daa
jns
shl
fcomp
icebp
rcr
push
ror
mov
jge
pop
cmp
mov
ror
imul
mov
mov
ss
ds
fsubr
out
rcl
dec
std
push
mov
sbb
test
cmps
jp
push
cmps
jecxz
call
xor
add
into
inc
mov
dec
sbb
cmp
lods
jl
in
xchg
pop
inc
or
pop
mov
sbb
xor
push
(bad)
sub
sti
fisttp
imul
fucomip
test
repnz
and
xor
nop
sbb
out
xchg
cmp
sbb
cmp
dec
jge
in
push
not
in
push
jp
fs
dec
out
addr16
into
ds
test
xor
out
push
repnz
repz
or
sbb
cmc
sbb
push
out
pusha
mov
mov
sub
jmp
imul
xchg
jl
sub
jecxz
pop
out
fstp
and
dec
pop
rcl
jge
or
lock
ja
jbe
add
sbb
cs
popa
xchg
cwde
mov
dec
test
outs
fwait
scas
in
add
fsqrt
xchg
(bad)
cmps
mov
loopne
jo
cmp
mov
jg
cs
nop
jmp
dec
xor
sub
adc
push
pop
mov
test
mov
sbb
xchg
pusha
cmp
test
imul
stc
jge
sbb
add
ss
xor
scas
sub
lock
jmp
lea
push
cmc
jle
jnp
jno
push
xchg
adc
pop
jge
pop
sub
jl
xlat
outs
test
enter
not
stc
into
fmul
cs
shl
jp
mov
hlt
sbb
pop
dec
jmp
or
and
jbe
pop
(bad)
pop
lods
(bad)
fwait
lea
in
mov
(bad)
fcomp
add
and
loopne
lods
jmp
fst
and
call
int
adc
xor
into
add
outs
loope
test
aas
iret
pop
inc
and
dec
push
pop
out
xor
push
sahf
das
or
das
sub
push
into
aad
hlt
sbb
cmps
sub
jp
fnsave
in
fiadd
int3
scas
rol
scas
cmp
cmps
jp
cdq
dec
xchg
test
call
inc
xor
aam
imul
sub
mov
cmp
jnp
ins
xchg
xor
and
dec
push
in
inc
not
ror
push
dec
push
rol
inc
xchg
ret
imul
or
shl
arpl
les
fist
inc
mov
lods
mov
hlt
cmp
push
arpl
or
imul
ffree
adc
call
xor
repnz
inc
stos
popaw
mov
sub
popa
retf
pop
dec
retf
(bad)
pop
mov
xor
add
scas
dec
call
neg
imul
out
xchg
test
jne
cmp
in
ret
mov
jp
mov
pop
cli
mov
xor
movs
les
xchg
fsubr
lds
or
test
in
das
cld
xchg
stos
mov
out
and
add
ror
daa
(bad)
pop
ret
mov
dec
push
adc
jl
cmc
jmp
je
and
lods
push
adc
mov
repnz
mov
dec
jmp
out
or
inc
repnz
mov
mov
mov
outs
call
xchg
iret
pop
and
cmp
nop
mov
fsubr
sub
iret
mov
ins
std
sub
jbe
ins
je
mov
(bad)
(bad)
cld
pop
inc
pusha
dec
shl
mov
cs
push
addr16
pop
loope
(bad)
cmp
cmps
mov
lds
or
push
ss
cld
mov
xor
mov
add
mov
in
lods
sbb
stos
xchg
in
iret
push
mov
sub
jno
xor
mov
inc
sub
cmp
adc
stc
xchg
fs
push
jae
inc
mov
loope
std
bound
retf
test
cmp
out
js
lahf
mov
mov
aaa
xchg
or
and
lock
imul
ds
cmp
gs
cmp
cmps
xor
bnd
rcr
dec
rcr
cmp
sbb
jecxz
dec
into
sub
xchg
lea
jno
popa
retf
shr
shl
es
cld
iret
fdiv
push
sbb
mov
inc
push
push
xchg
mov
push
adc
adc
dec
dec
xlat
and
sub
test
xor
loopne
jmp
or
or
inc
repnz
daa
mov
(bad)
or
jmp
and
adc
mov
and
mov
cmp
out
xor
cmp
cli
aad
mov
pop
mov
aas
aas
inc
ss
cs
aaa
pop
fucomi
add
mov
xor
mov
mov
cmp
dec
dec
jp
ja
sbb
pusha
push
loopne
dec
in
es
sbb
pop
mov
(bad)
loope
dec
std
into
mov
inc
push
inc
push
jp
or
sub
cmp
dec
loopne
mov
(bad)
cmc
scas
adc
mov
xchg
dec
mov
jns
in
gs
inc
aas
mov
int3
cmp
(bad)
sub
into
jmp
mov
outs
lods
xchg
sub
jne
inc
test
push
cmps
mov
pop
and
adc
push
mov
mov
xor
mov
xor
xor
sbb
stc
inc
fst
mov
push
inc
dec
and
pop
ficomp
push
xchg
jns
popa
mov
retf
add
pop
cli
je
push
and
pop
shl
adc
(bad)
cmp
and
retf
xor
movs
aam
pop
pop
jae
and
lds
mov
stc
jmp
test
cs
in
ret
mov
daa
pop
xor
mov
iret
jo
enter
ds
mov
mov
(bad)
xchg
lods
jae
cld
lods
das
mov
push
ret
jg
xor
(bad)
fisttp
and
int
adc
jb
fst
data16
retf
sbb
or
mov
imul
cdq
xchg
adc
sub
bound
ins
cwde
jmp
pusha
add
leave
cmp
daa
daa
outs
jae
jecxz
xchg
mov
(bad)
and
xchg
daa
jg
sbb
ins
rcr
cmps
or
jno
fsubr
retf
push
ss
js
and
jmp
aas
fstp
sbb
test
xchg
hlt
imul
(bad)
sbb
das
fnsave
xlat
cdq
lods
xchg
ins
sub
and
and
xor
pop
std
mov
cld
outs
xchg
pusha
fldlg2
in
adc
xlat
loopne
stos
xor
pop
xchg
mov
sar
push
cmp
test
cwde
ror
mov
ror
dec
adc
into
and
mov
mov
xchg
or
inc
mov
and
inc
nop
repz
scas
pop
out
or
dec
ja
or
xor
mov
mov
cmps
push
repnz
xchg
jle
aad
jecxz
out
fxch
sbb
fs
outs
or
call
test
mov
fimul
arpl
mov
retf
ins
stos
sub
dec
xchg
jns
and
call
inc
dec
cmp
lods
push
(bad)
fldenv
lea
dec
xchg
cmp
jl
scas
add
ins
jecxz
ror
ins
push
mov
shr
inc
xchg
jmp
sub
xor
sbb
mov
or
cmps
xlat
and
dec
xchg
xor
stos
mov
xchg
cmp
cs
adc
mov
dec
jae
xchg
xchg
jg
inc
retf
xlat
cmp
mov
ret
pop
pop
lahf
fcomip
adc
fs
jbe
clc
std
neg
arpl
mov
in
fwait
nop
xchg
adc
add
repnz
xchg
stos
or
jg
or
stos
pop
inc
es
fadd
jb
in
sub
push
retf
dec
xlat
cmps
movs
call
call
mov
sbb
clc
pop
js
inc
jno
cwde
pop
cdq
mov
mov
mov
(bad)
jbe
sahf
mov
sar
push
pop
adc
push
add
inc
leave
mov
pop
inc
xchg
lock
hlt
sub
xchg
dec
jg
push
add
clc
iret
xor
sub
ins
sbb
imul
popf
cmps
int3
jno
(bad)
(bad)
jecxz
sbb
les
out
sti
xor
and
outs
test
inc
sbb
mov
imul
fsubr
pop
in
fdivr
adc
out
pop
pop
cmps
push
jecxz
js
push
mov
pop
cs
adc
pcmpgtb
popa
push
add
js
pop
les
int
les
call
fmul
das
retf
movs
dec
xlat
sbb
idiv
in
les
xchg
repz
push
cmp
call
(bad)
pushf
scas
push
shl
mov
neg
lods
mov
jmp
mov
ins
sub
mov
add
rcl
sti
cs
xor
mov
icebp
mov
rcl
imul
sbb
push
sub
test
jae
inc
popa
fidivr
jecxz
sub
ret
dec
jns
ins
in
mov
(bad)
or
bound
cdq
enter
fild
outs
jl
mov
sub
inc
in
in
retf
push
cmps
sbb
daa
icebp
and
dec
adc
fnstcw
jnp
bound
push
mov
jbe
mov
cmovge
ret
xchg
push
mov
out
(bad)
stos
fmulp
push
mov
pushf
and
inc
pop
inc
mov
scas
stc
sti
je
outs
mov
mov
jp
loopne
push
(bad)
lock
ja
push
push
xor
jb
jmp
jbe
neg
sub
push
push
push
push
cmp
mov
cmp
cmps
push
xchg
jno
mov
sbb
fimul
in
jns
xor
movs
push
pop
cmp
xor
(bad)
fs
push
enter
mov
mov
mov
push
cld
rcl
adc
push
(bad)
js
imul
(bad)
jno
xchg
lahf
js
push
lds
cli
mov
ror
or
adc
sbb
inc
fwait
xchg
pop
retf
(bad)
push
int
cmp
icebp
jno
mov
aaa
inc
push
aad
dec
scas
retf
bound
pop
push
add
push
int3
fwait
pop
sar
adc
or
imul
in
xor
and
jo
cmc
dec
lods
dec
shr
and
push
out
(bad)
lock
pop
call
push
mov
push
jbe
mov
push
mov
scas
adc
mov
cmp
and
popa
pop
pop
fnstsw
push
sysexit
clc
push
das
xchg
mov
pop
gs
cli
push
jecxz
jmp
or
xlat
push
movs
aas
je
sbb
pop
adc
mov
mov
into
cmp
fwait
lods
xlat
push
xlat
inc
seto
jmp
mov
dec
jle
scas
pop
jo
or
(bad)
in
cmp
push
or
mov
mov
stc
call
add
add
fidiv
sbb
sbb
add
xor
jns
sbb
push
mov
adc
int3
(bad)
pushf
sub
movs
stos
hlt
pop
pop
adc
cdq
dec
push
test
sub
or
xchg
loope
mov
sti
cld
push
mov
aas
pop
lods
nop
sbb
or
pop
add
ret
into
inc
pop
aas
inc
and
xor
cli
jns
pop
sbb
div
mov
push
inc
es
aam
dec
or
push
push
das
xchg
pop
and
dec
jmp
pop
mov
dec
cmp
cmp
sti
mov
mov
outs
out
test
adc
mov
jle
retf
mov
adc
jne
inc
jne
sbb
in
xor
(bad)
mov
inc
jmp
icebp
lock
sahf
imul
mov
in
sub
(bad)
mov
jecxz
and
call
pop
jmp
stos
jno
ja
data16
sub
xchg
jne
repz
xchg
icebp
hlt
fstp
lods
inc
mov
imul
push
movs
bound
fstp
pop
adc
fist
pop
popw
popaw
scas
les
(bad)
ror
(bad)
nop
ins
popa
dec
push
test
push
in
vandnpd
jns
test
and
test
scas
mov
in
adc
push
inc
repnz
test
sti
aad
sub
sub
dec
rcl
xchg
idiv
add
fcom
je
mov
daa
push
nop
cmp
jmp
dec
leave
arpl
xchg
xchg
popf
sbb
dec
movs
add
sbb
pop
cdq
dec
mov
enter
in
xor
call
cs
scas
xchg
out
out
out
ins
lahf
loopne
fmul
loopne
fwait
cmp
adc
inc
iret
mov
fcomp
movs
sbb
mov
(bad)
outs
rcr
adc
pop
sti
pushf
scas
push
jl
jae
fld
sbb
add
aam
push
adc
call
and
sbb
cs
push
add
repnz
shl
pop
iret
sti
adc
add
mov
xor
shl
pop
mov
test
fadd
call
cmp
ja
add
fild
sar
cmps
sbb
xlat
ins
add
rcl
add
cli
mov
inc
push
test
ror
jns
ins
test
popa
outs
add
retf
jne
add
mov
lock
adc
test
aaa
(bad)
(bad)
xor
mov
mov
cdq
(bad)
inc
dec
pop
inc
jb
lock
mov
add
jae
aam
fistp
mov
sbb
sti
fdivr
repnz
repnz
mov
fimul
js
in
sti
leave
(bad)
mov
mov
mov
mov
push
add
clc
std
sbb
movs
xchg
ins
cs
push
daa
pushf
neg
das
dec
cwde
jge
add
les
mov
mov
xor
in
add
fnsave
fprem1
pop
bnd
or
clc
dec
xor
outs
fstp
mov
repnz
mov
dec
outs
and
or
out
dec
ins
mov
mov
js
lahf
jg
pop
aad
jecxz
out
xlat
push
fisub
into
shr
jno
dec
sub
mov
cdq
push
sar
shl
xchg
xor
out
sbb
movs
xlat
fist
xor
repz
cmp
pop
clc
loop
test
lea
push
outs
inc
shr
push
pfsub
imul
add
cmp
cmc
inc
out
jb
jb
rol
sbb
pop
fdiv
mov
xchg
jo
popf
push
rol
adc
mov
mov
dec
stos
ins
sbb
pop
push
sub
out
push
jge
mov
mov
and
outs
loop
fstp
add
cmps
movs
push
(bad)
fdivr
jae
sti
das
cmp
mov
test
enter
std
sbb
aam
shl
movs
daa
dec
cwde
lock
adc
cmps
mov
jmp
cmc
push
push
loope
push
imul
mov
push
clc
mov
div
sbb
stc
mov
repnz
aaa
push
leave
imul
cli
mov
call
xlat
add
jns
push
xor
xchg
xchg
push
out
jl
pop
dec
fistp
cmp
cmp
enter
xchg
and
leave
mov
call
mov
movs
jbe
icebp
int
call
out
in
fsub
bound
sbb
jo
popa
xor
arpl
or
ins
lea
xor
cmps
hlt
add
dec
xchg
cdq
mov
and
in
lods
pop
outs
dec
and
mov
das
jno
jbe
movs
rcr
cmp
push
fild
imul
xor
dec
(bad)
fsubr
lahf
cdq
or
sub
add
(bad)
inc
add
test
xchg
adc
in
lahf
push
mov
xchg
in
stos
sbb
aad
(bad)
jg
dec
pop
mov
jnp
leave
test
mov
add
or
shr
movs
mov
and
sbb
mov
cmp
aad
retf
inc
or
jne
inc
fadd
xor
jns
dec
call
dec
ret
mov
shl
or
sub
repnz
push
(bad)
xchg
or
inc
jl
mov
xor
mov
idiv
lahf
pop
fstp
sub
xlat
sbb
mov
bound
xor
push
jne
movs
adc
mov
xor
dec
in
adc
punpckhbw
mov
pop
pop
xor
mov
jge
jbe
es
pop
mov
cmps
cmp
(bad)
fcmovb
bound
mov
out
imul
mov
sub
sar
mov
xor
jg
or
inc
jnp
mov
jnp
(bad)
sub
push
dec
adc
and
cmp
mov
mov
in
pop
sub
add
ret
sub
push
sbb
sbb
pusha
lea
test
inc
jno
out
inc
jmp
push
push
pop
shl
not
pop
call
jnp
mov
mov
js
outs
(bad)
cmp
jae
fidiv
jmp
sahf
sbb
push
mov
sbb
push
add
dec
mov
jmp
arpl
xchg
push
pusha
push
xor
and
lods
sub
inc
retf
inc
mov
es
out
adc
and
sub
push
lods
stos
shl
pop
sub
sbb
xor
jbe
push
jns
adc
dec
sbb
ins
movs
and
add
imul
icebp
loope
jecxz
les
mov
push
and
add
xor
pop
cmp
cmp
fs
and
sbb
fnsave
scas
test
sub
sbb
je
jb
mov
ds
push
mov
jmp
cmp
cmps
inc
xor
pop
jle
mov
loopne
pop
xor
pop
ds
call
pop
inc
outs
dec
mov
sub
push
sub
loopne
inc
mov
sub
jle
sbb
(bad)
cs
push
mov
cmp
shl
ds
and
sbb
lods
jecxz
out
into
cmp
xor
mov
popf
and
cmp
xchg
mov
jl
(bad)
dec
mov
fcom
jmp
fwait
in
pop
pop
mov
xchg
mov
test
dec
adc
out
cmp
dec
xchg
movs
in
dec
lock
ret
mov
test
adc
pushf
mov
pop
xor
(bad)
(bad)
loopne
xchg
add
lock
in
test
xchg
mov
test
imul
rol
fisttp
cld
mov
pop
mov
int3
ret
jp
adc
pop
push
sti
mov
jle
or
cs
pop
enter
xor
jnp
jb
(bad)
xchg
jmp
xchg
test
in
xchg
hlt
sbb
fnstenv
and
int
bound
call
lds
sahf
xchg
mov
shl
popf
mov
out
push
loope
(bad)
sbb
test
mov
call
dec
imul
pushf
lea
and
lahf
mov
adc
adc
xchg
push
ins
aas
push
outs
xor
ss
sbb
add
into
data16
in
int3
dec
push
jle
push
sbb
mov
sub
repnz
and
int3
fwait
cmp
inc
mov
inc
mov
push
adc
sub
mov
aam
pop
enter
jg
outs
mov
jb
xchg
daa
mov
push
(bad)
or
outs
adc
add
mov
movs
mov
ins
dec
fidivr
pushf
xor
mov
je
lds
imul
cmp
shl
and
fldenv
rol
out
fcmovu
pop
cmps
push
cmp
aam
jle
ins
pop
sti
daa
xchg
cdq
shl
sub
je
gs
adc
inc
jl
xchg
fs
sub
shl
xor
inc
pusha
gs
or
rol
pop
pushf
fistp
sub
retf
pop
lods
jg
adc
pop
xchg
cmps
loop
mov
push
shl
mov
out
push
mov
lahf
sub
inc
ins
mov
sbb
mov
mov
xchg
test
mov
xor
sub
sbb
xor
pop
cmps
js
scas
xchg
cs
jmp
(bad)
mov
cmp
jle
std
(bad)
hlt
call
out
vpcmpeqd
inc
fdivp
mov
mov
mov
xor
jb
clc
(bad)
pop
push
shl
push
sub
and
cli
xor
rcr
(bad)
dec
enter
in
mov
rcr
repz
mov
mov
js
aam
mov
push
loop
pop
xchg
pushf
(bad)
dec
xor
push
mov
push
in
xchg
clc
or
fbstp
push
cli
cs
sub
out
mov
or
pop
inc
or
inc
xchg
pusha
add
inc
inc
xor
sbb
lahf
ins
sub
jg
inc
push
mov
sbb
add
sar
ret
fisubr
jns
sbb
push
xchg
imul
int3
add
jbe
sar
add
sti
jecxz
cmp
outs
aad
and
push
jge
dec
loop
xor
ret
ja
jmp
movs
dec
mov
cmps
clc
loop
out
ror
dec
cs
popa
or
fcomi
test
in
xor
push
jae
sub
or
sub
pop
leave
(bad)
int3
or
cmps
push
cmp
jmp
(bad)
xor
fwait
jge
mov
jb
dec
mov
test
xadd
and
xor
push
xchg
fistp
movs
fnsave
push
add
pop
mov
xor
cmp
cmc
push
add
xor
ret
cmp
jecxz
mul
and
inc
pop
pusha
jo
mov
add
lahf
ins
jmp
xchg
mov
xor
outs
arpl
and
dec
js
(bad)
call
in
pop
imul
pop
mov
mov
jb
stos
dec
(bad)
mov
and
sbb
xchg
lock
inc
ja
adc
sbb
sub
into
imul
addr16
sbb
lods
rol
jae
in
inc
scas
push
cmp
je
rol
xchg
retf
outs
dec
cmp
cmp
add
fist
jecxz
repz
mov
sbb
popf
dec
pop
pushf
shr
pop
repz
loopne
xor
ins
mov
loope
mov
mov
mov
call
cmp
lea
jns
pushf
sbb
lahf
fild
or
outs
sbb
xlat
outs
les
enter
and
add
dec
ja
ficom
mov
fnstenv
inc
cmps
dec
aad
or
cmp
push
aad
sbb
jae
jo
daa
sub
cmp
jmp
pop
mov
lods
fsubr
mov
push
pop
xchg
in
or
stos
rcl
popa
sub
scas
ret
int
aam
lea
xchg
jne
cmp
and
sbb
jmp
ficom
inc
xchg
or
out
inc
dec
and
add
or
jg
pop
jmp
pushf
iret
jmp
cmps
xchg
mov
mov
xchg
sub
adc
mov
jecxz
push
movs
mov
mov
imul
pop
aaa
sti
pop
jg
mov
or
je
imul
jle
call
jp
mov
pop
shl
jne
test
sub
ja
iret
int
dec
xor
popa
je
add
and
inc
daa
(bad)
jne
mov
add
jne
fnstcw
imul
adc
mov
add
(bad)
fs
loop
mov
pop
xor
scas
lahf
lods
aad
adc
(bad)
add
xor
fdivr
jg
push
fsubr
in
int3
mov
outs
adc
loope
movs
jnp
sub
push
mov
loopne
out
mov
sahf
jne
or
sbb
push
push
mov
dec
and
sub
push
pusha
pop
mov
das
test
outs
lahf
add
sti
push
mov
ins
stos
push
jecxz
sbb
nop
jns
xchg
pop
inc
jbe
in
or
sub
push
add
pop
fcmovnbe
or
jae
xor
test
movs
push
aam
js
jle
shr
loope
in
fist
js
retf
in
cmc
and
jecxz
or
fwait
ror
inc
inc
xrelease
pop
sbb
pop
in
xor
sbb
xor
pop
fstp
aaa
mov
jmp
xchg
push
and
sbb
and
imul
mov
(bad)
out
scas
pop
mov
push
xchg
rcr
ins
iret
lea
out
and
loopne
sbb
xchg
sar
int
jae
mov
int3
dec
(bad)
jmp
out
xchg
addr16
jo
and
xchg
loope
and
mov
xchg
addr16
movs
or
dec
jae
loopne
sbb
(bad)
(bad)
loope
(bad)
push
test
pushf
pop
mov
js
dec
lahf
(bad)
and
push
and
ss
repnz
mov
inc
mov
pop
cli
shl
outs
movs
add
xchg
push
pop
retf
retf
sbb
or
mov
out
cwde
sbb
je
out
xor
add
adc
cmp
jecxz
cmp
or
mov
jmp
xchg
sbb
dec
jmp
lods
test
(bad)
jmp
cmp
and
sbb
cmc
sub
bnd
push
aas
sbb
jnp
outs
mov
fild
cli
xor
adc
adc
or
cli
jmp
inc
mov
jmp
aad
push
adc
shl
cld
jp
sbb
xchg
popa
das
dec
xchg
popf
xor
xor
push
push
xor
ins
inc
sub
inc
lods
jg
and
fdivp
dec
sbb
clc
test
dec
adc
out
or
add
xlat
leave
stos
push
fidivr
push
xchg
or
dec
dec
push
jg
js
test
jns
retf
sbb
push
pushf
jno
adc
cmps
mov
mov
mov
cli
call
push
jge
xor
int3
cs
jnp
pushf
hlt
bound
or
dec
sub
call
adc
cmc
mov
jp
(bad)
iret
push
ret
fstp
lds
or
mov
inc
mov
je
ror
adc
xor
(bad)
out
jne
pop
adc
gs
(bad)
cld
lea
or
pushw
mov
push
mov
dec
sub
push
dec
push
shl
sub
stos
dec
pop
push
stos
pop
adc
retf
push
mov
jp
js
xor
dec
and
or
test
and
leave
cmp
fimul
imul
int3
lea
fsubr
xchg
stos
icebp
lods
call
pop
lds
xchg
xor
and
jnp
inc
(bad)
mov
push
shl
cwde
mov
leave
ror
ss
and
(bad)
push
mov
(bad)
retf
adc
inc
dec
sbb
shl
mov
or
into
inc
ja
scas
fwait
pop
xlat
fxch
xor
aaa
mov
xor
sbb
mov
enter
inc
aam
inc
push
pop
sub
ins
jge
xchg
pop
xchg
test
out
loopne
dec
imul
jno
aas
xchg
cmc
lods
mov
adc
xchg
in
movs
pop
les
sbb
cvtpi2ps
push
out
cmps
retf
shld
data16
or
test
js
loope
sar
bound
cmp
mov
fiadd
push
mov
rcr
and
arpl
mov
stos
out
les
pop
in
jbe
adc
cmps
repz
sub
dec
dec
xchg
out
jnp
out
(bad)
fisub
jne
jmp
and
dec
adc
xor
int
sbb
ret
pop
mov
out
push
lods
(bad)
les
call
xchg
cmp
add
mov
push
mov
cmp
les
imul
jbe
push
in
mov
daa
inc
push
lahf
out
in
jo
mov
popa
arpl
push
pop
ss
mov
adc
hlt
rcr
xchg
scas
pop
sti
inc
in
cdq
xchg
fwait
inc
xchg
fs
cs
or
sub
movs
xchg
retf
pop
call
xchg
jnp
mov
jb
mov
jns
cmc
cmps
cld
inc
retf
sbb
daa
xor
jp
push
iret
pop
inc
je
les
aad
addr16
adc
jp
pop
adc
jmp
cmc
mov
gs
scas
inc
in
dec
mov
mov
in
(bad)
jle
adc
shr
dec
mov
mov
jbe
loope
in
clc
into
cmps
dec
or
xchg
scas
pop
bound
mov
ins
push
(bad)
jmp
in
dec
outs
cli
jae
retf
test
add
or
sbb
mov
scas
inc
out
mov
imul
mov
rol
mov
ret
rcl
movs
sbb
sub
iret
mov
adc
lods
jl
mov
jnp
pop
xchg
push
add
neg
jno
sub
cwde
ins
fild
into
call
push
dec
mov
xchg
sub
ins
dec
cwde
outs
popf
imul
cmps
ss
stos
repz
sbb
and
dec
jmp
add
sub
aaa
hlt
and
(bad)
popa
sub
fs
(bad)
xlat
dec
outs
sub
mov
jl
or
push
add
mov
es
cmps
ds
in
sbb
fs
mov
stos
or
jbe
and
mov
icebp
jecxz
or
je
pop
cli
movs
mov
stc
mov
rcl
test
inc
(bad)
mov
(bad)
stos
xchg
into
jle
jne
sub
mov
mov
test
and
sbb
fnsave
dec
cdq
sub
adc
add
cmp
jp
dec
mov
adc
pop
rol
out
push
mov
adc
adc
or
cmp
pop
sub
fldenv
outs
sahf
repnz
(bad)
cmp
bnd
jmp
addr16
mov
inc
jno
adc
pop
pop
push
jg
scas
xor
xchg
cwde
xchg
add
daa
mov
jp
stc
je
cmps
out
push
in
push
push
mov
push
call
(bad)
jbe
loopne
xchg
push
fcom
mov
jo
sbb
jae
lds
xor
cld
movs
test
rcl
push
daa
jb
and
movs
xor
daa
sub
loope
xor
inc
add
jge
xlat
jbe
push
xor
cmps
cmp
push
xchg
icebp
movs
test
ins
ins
inc
hlt
out
into
ins
jno
mov
inc
call
push
pop
jge
mov
ins
sbb
mov
pushf
mov
jo
sbb
mov
mov
jbe
dec
movs
sub
xor
dec
adc
sti
xor
outs
or
je
loop
mov
jmp
mul
jnp
cmp
in
adc
mov
jbe
jnp
mov
loop
push
cmps
sbb
or
(bad)
mov
pop
lds
xchg
inc
icebp
push
jmp
movs
and
aas
in
jge
or
inc
jbe
mov
or
inc
(bad)
mov
sbb
xchg
jae
inc
xor
scas
sar
add
dec
loopne
retf
pusha
js
les
ret
mov
cmp
stc
cmp
mov
cdq
fild
sub
jmp
mov
repz
push
dec
push
cmp
loopne
inc
dec
aas
and
ds
mov
jae
pushf
pop
cmp
add
mov
xchg
ins
xchg
aad
sbb
scas
imul
push
jg
xchg
fisub
adc
(bad)
xchg
xor
xchg
or
mov
icebp
cmp
(bad)
cli
cmc
ja
lahf
sbb
je
pop
sub
xor
gs
(bad)
lahf
xchg
sbb
cmps
fwait
mov
or
retf
mov
shl
fistp
mov
das
xchg
hlt
int3
mov
sub
and
push
fcmovu
cmp
icebp
aam
push
aaa
loop
test
imul
pop
in
and
cmp
jmp
jge
retf
sub
(bad)
push
stc
xchg
mov
sbb
ins
enter
rcl
loop
scas
and
out
ins
adc
pop
or
push
jmp
dec
(bad)
or
or
pop
xor
mov
push
jae
inc
rol
mov
pop
retf
push
cmp
mov
cwde
lds
jg
pop
jle
clc
outs
cmp
out
hlt
mov
popa
inc
sbb
and
pop
pop
dec
pop
pusha
mov
push
adc
ror
cmp
aam
lds
aad
pop
icebp
mov
mov
ds
jns
push
es
and
int
scas
pop
and
and
cmp
fwait
jo
in
push
cs
xlat
sub
pop
jmp
in
iret
scas
push
xor
mov
dec
(bad)
or
popf
adc
lea
es
sbb
pop
hlt
jmp
inc
jp
cmp
cmps
fiadd
adc
and
sbb
fsubr
(bad)
jg
xor
cli
xchg
pop
mov
xlat
and
in
addr16
pop
call
inc
(bad)
les
mov
loopne
out
jg
ins
mov
(bad)
mov
adc
test
sbb
and
in
fdiv
jae
fwait
jmp
push
jecxz
push
add
add
ja
xchg
lds
imul
sbb
xor
adc
mov
ss
pop
in
outs
retf
mov
mov
movs
fdiv
cmp
xchg
pop
inc
add
xchg
dec
sbb
lods
mov
mov
jmp
popa
dec
sbb
push
and
mov
pop
jl
sar
mov
inc
cli
cmps
or
mov
mov
mov
out
mov
push
cmp
push
js
pop
lds
push
imul
je
mov
xor
in
popf
push
cli
aam
xlat
xor
sbb
mov
push
dec
mov
push
add
push
sbb
xor
xor
mov
loopne
adc
adc
test
shl
mov
cs
and
out
or
gs
cmp
xchg
daa
cmc
mov
or
jmp
cmp
dec
cmps
nop
sub
scas
cmps
or
mov
(bad)
in
dec
jb
(bad)
sbb
lea
pop
dec
add
jl
cmp
jmp
mov
nop
lods
push
or
out
jg
icebp
stc
xor
(bad)
ds
xor
add
bound
lods
push
mov
add
into
popf
ret
and
jecxz
push
xchg
aad
cwde
imul
jb
into
pop
mov
push
ret
sbb
dec
fmul
inc
scas
inc
add
int
lock
imul
cmp
push
stos
pop
mov
cmp
shl
(bad)
sbb
movs
stos
jl
cmp
adc
jnp
retf
inc
loop
nop
inc
push
mov
pushf
shl
pop
mov
cmps
inc
lea
fwait
pop
xor
clc
data16
repz
mov
sar
mov
cli
loopne
adc
inc
xchg
popa
push
sub
test
out
sub
aaa
mov
ret
inc
push
dec
push
add
mov
pop
inc
rcl
jl
xor
xchg
xchg
mov
jnp
inc
fild
(bad)
aaa
clc
mov
sbb
scas
push
mov
shr
retf
mov
cmp
ins
ins
loope
es
repnz
aas
jns
int
and
(bad)
adc
dec
push
cmp
pushf
outs
je
jno
jns
stos
sub
pop
mov
hlt
clc
push
ja
and
in
jp
and
or
aas
popf
iret
stos
movs
lock
les
icebp
sbb
aad
jg
add
push
mov
inc
mov
jne
sbb
aam
fidivr
jmp
ja
ret
hlt
ja
scas
xchg
cmp
mov
fs
cli
call
sbb
rcl
fcmovnu
mov
xchg
ret
push
xchg
loopne
sbb
and
outs
inc
dec
or
sub
fsubr
add
jno
mov
ret
fmul
ffree
push
push
push
and
loope
lahf
xor
mov
(bad)
stc
test
ds
dec
xchg
icebp
cmp
scas
jl
pop
jg
(bad)
xor
cmp
out
mov
(bad)
repnz
pop
out
mov
jnp
add
jmp
mov
shr
fisub
sbb
and
pop
push
xchg
mov
mov
dec
lods
mov
jp
jae
js
movaps
cld
lods
cmp
outs
mov
mov
aad
and
cli
rcl
xor
mov
push
sub
dec
sub
test
loop
jg
inc
inc
sub
dec
push
and
mov
dec
jbe
inc
cmp
inc
cmp
nop
scas
ja
retf
push
outs
imul
les
call
mov
mov
int
or
out
xchg
ficomp
movs
and
iret
dec
dec
repnz
sub
das
pop
dec
movs
scas
mov
dec
inc
mov
loope
ret
dec
dec
push
inc
mov
jnp
pop
mov
aam
xlat
in
icebp
jg
xchg
pop
xchg
sahf
adc
dec
mov
jmp
fwait
cli
stc
int
test
add
sbb
inc
jmp
inc
mov
xchg
xchg
cmp
and
lods
jmp
pop
push
(bad)
jo
fild
cmp
mov
inc
dec
fs
xchg
push
mov
mov
mov
inc
in
in
adc
fcmove
jb
jnp
dec
xchg
and
rol
test
sbb
push
adc
lds
leave
stos
or
in
loop
and
fwait
movs
fld
cli
inc
xchg
sti
sub
ja
mov
xchg
out
add
mov
dec
add
mov
cmps
pop
mov
jmp
add
push
pop
nop
mov
jmp
adc
push
or
and
in
pop
mov
pop
fwait
push
sbb
fimul
jecxz
(bad)
loopne
jb
jl
call
dec
push
sti
jl
mov
test
pop
pop
xchg
out
(bad)
sbb
dec
sbb
sub
push
fldcw
jae
nop
(bad)
les
xor
lea
call
sbb
iret
sub
or
pop
cli
loope
retf
lea
(bad)
fst
push
push
mov
pop
mov
fstp
les
mov
sub
dec
sar
in
cdq
push
loopne
and
cmp
dec
cs
xchg
bound
fwait
pop
pop
dec
lods
pop
jae
rcr
mov
and
mov
mov
in
inc
mov
xor
or
test
sub
popa
leave
sub
sbb
jbe
adc
adc
stos
push
adc
(bad)
movs
rcl
dec
js
sbb
dec
jecxz
jns
js
sub
cmp
or
fcom
dec
cmp
lahf
stc
out
push
sbb
pop
mov
lds
dec
sbb
addr16
push
sub
das
scas
repnz
mov
icebp
cmp
jl
jbe
jge
aaa
shl
mov
sahf
add
ret
add
mov
cld
loope
retf
and
test
jl
pushf
push
jmp
ror
adc
outs
cmp
pusha
pop
je
mov
push
mov
mov
push
push
popf
add
add
adc
inc
push
popf
pop
shl
mov
mov
mov
fcmovnb
fld
mov
add
in
call
adc
mov
in
adc
cmp
pop
ins
cmp
int3
adc
nop
and
pop
push
retf
bound
add
(bad)
sbb
and
xchg
jp
jle
or
fmul
fild
out
or
pop
or
test
mov
aaa
sbb
ret
call
imul
dec
and
push
or
mov
push
pop
(bad)
(bad)
pop
mov
lods
fild
das
or
mov
fld
int
(bad)
aad
jmp
sub
clc
mov
pop
icebp
loope
sbb
sub
jmp
std
add
lock
pop
xor
push
sub
in
repz
mov
shl
call
stos
fbld
push
pop
iret
je
iret
jmp
xlat
mov
popf
clc
pop
fild
in
xor
xor
(bad)
mov
addr16
aam
(bad)
lock
mov
xor
xor
fst
pop
mov
dec
in
adc
cmp
loopne
loope
jge
dec
out
ja
in
shr
jno
xchg
ret
jge
pop
adc
clc
mov
js
lea
out
sub
mov
jecxz
call
fsub
movs
dec
jb
push
out
push
ja
mov
dec
test
sub
dec
imul
mov
aad
jb
out
mov
push
pop
clc
xor
lods
mov
int3
lahf
mov
mov
fsubp
pop
popa
rol
(bad)
(bad)
adc
es
fmulp
test
jle
call
mov
out
xor
js
sahf
adc
lods
rcr
mov
cs
(bad)
inc
sahf
xor
mov
push
push
pop
inc
mov
fnstenv
pop
push
(bad)
inc
mov
stos
jmp
mov
cmc
sbb
rcl
jg
push
sbb
leave
jbe
popa
mov
movs
xchg
cli
and
push
mov
movs
pop
aad
and
push
movs
std
mov
add
(bad)
rcl
in
push
bts
xchg
xchg
fwait
cdq
sub
and
test
repz
call
mov
call
ja
xchg
lock
jle
or
mov
jecxz
jae
inc
xlat
sub
mov
pop
cmp
sub
jns
arpl
sub
sbb
add
aad
dec
fwait
inc
xlat
out
mov
retf
add
sahf
loop
xor
push
(bad)
imul
aam
daa
dec
and
mov
shl
ror
inc
mov
std
test
aam
icebp
loop
aaa
mov
or
jb
mov
data16
add
sub
je
or
jge
mov
sbb
pop
sbb
out
adc
cmp
jge
xor
mov
mov
movs
or
fcmovb
scas
inc
mov
inc
popf
icebp
xchg
xor
mov
add
add
push
xor
icebp
cdq
sbb
daa
mov
inc
jg
sbb
int3
(bad)
xor
xor
(bad)
xor
mov
int3
js
retf
imul
xor
mov
(bad)
mov
adc
push
or
in
imul
dec
cwde
sahf
adc
mov
pop
or
retf
add
cs
jp
out
mov
push
jae
add
es
imul
adc
rol
fsub
sbb
addr16
ss
pop
jbe
mov
ficom
loopne
and
mov
sbb
or
sbb
popa
or
in
xchg
push
in
xchg
mov
mov
(bad)
jg
dec
adc
jp
popa
sub
fidivr
aad
int3
bound
aaa
pop
jne
sub
xchg
mov
mov
jecxz
sub
cli
mov
repnz
xchg
lods
cwde
in
xor
push
or
mov
pop
fstp
rol
pop
sbb
sbb
lock
xchg
(bad)
sbb
xor
sub
cmps
hlt
ss
fdivr
mov
addr16
nop
imul
sbb
rcr
imul
xchg
stc
into
lods
(bad)
in
inc
out
(bad)
daa
fsub
loop
cmps
add
inc
lock
mov
add
inc
xchg
mov
and
mov
addr16
das
fld
dec
mov
push
lea
inc
add
mov
cmp
fucomi
fst
cmp
ret
movs
or
das
push
inc
shr
outs
cmp
shr
(bad)
int
(bad)
loope
mov
ja
fdivr
and
xor
add
inc
mov
out
clc
push
sbb
mov
xor
mov
mov
xchg
cmps
mov
sar
mov
ficomp
aam
adc
mov
pushf
mov
adc
lods
fwait
mov
ins
xchg
add
data16
(bad)
mov
test
or
sahf
xor
add
push
popa
movs
add
mov
std
adc
xor
inc
clc
ficomp
mov
stc
ror
jecxz
mov
or
mov
ret
sbb
sub
scas
add
fcomp
lds
adc
retf
call
jmp
dec
mov
popa
sbb
loope
xchg
add
or
jne
pop
cld
inc
lods
in
loope
xor
xchg
mov
sbb
add
fiadd
mov
bound
jle
test
or
lods
xchg
cwde
cmp
cdq
addr16
out
fbstp
bnd
xchg
or
test
pop
mul
xchg
fs
es
inc
cli
cmp
popf
fdivrp
add
xchg
in
leave
dec
xchg
inc
mov
imul
test
cmp
cmps
loopne
add
mov
xor
or
dec
adc
int3
or
mov
push
test
sbb
movs
add
mov
xchg
scas
xchg
(bad)
pushf
sbb
(bad)
aas
scas
ficomp
mov
xchg
mov
lods
int
fcom
cmp
fsubr
add
sbb
inc
adc
and
jle
aas
dec
push
mov
push
cmp
xor
in
shl
pop
imul
enter
mov
jnp
out
inc
mov
repz
out
pop
mov
sub
xchg
hlt
pop
xor
cwde
and
aas
aas
adc
rol
data16
das
jecxz
sbb
and
lahf
xor
fwait
push
cli
mov
(bad)
rcr
cmc
test
mov
rol
sahf
retf
and
add
loope
mov
ret
adc
nop
cmp
pop
fadd
jbe
add
loop
adc
and
retf
mov
sbb
jle
or
and
push
inc
or
xlat
inc
inc
adc
adc
mov
push
push
loope
or
mov
sub
jle
add
dec
jns
iret
inc
cmp
scas
jmp
adc
jmp
lea
or
mov
stos
xchg
and
lock
xlat
in
sub
push
stos
in
push
aam
push
addr16
cli
loopne
push
repnz
pop
jae
repz
mov
enter
(bad)
jecxz
sar
sbb
pop
data16
jbe
cld
arpl
jge
xchg
xchg
int
retf
jmp
retf
xor
add
cmps
imul
push
pop
stos
movs
dec
arpl
cdq
and
mov
(bad)
movs
dec
mov
mov
push
jo
add
repnz
pmovmskb
retf
sar
xor
fst
cmp
inc
sbb
cmp
int3
cld
and
movs
or
int
ror
adc
rcl
xchg
pop
aam
mov
or
mov
inc
push
fst
ror
ficom
xchg
loop
enter
sub
sbb
push
mov
dec
mov
xchg
inc
das
stos
das
pop
or
mov
idiv
inc
ins
inc
add
fdiv
ja
sub
pop
push
hlt
cmp
push
jmp
xchg
push
mov
add
adc
xchg
stos
icebp
push
mov
iret
mov
not
(bad)
jecxz
push
add
cmc
arpl
adc
es
xchg
aam
mov
push
rcl
call
fs
pop
pop
pop
and
xchg
test
inc
shl
mov
mov
mov
ror
mov
vphsubdq
call
ret
inc
or
sbb
inc
and
xlat
mov
mov
dec
xchg
push
mov
mov
mov
nop
mov
pop
dec
push
inc
push
xadd
cmps
xchg
hlt
adc
cmp
inc
mov
neg
inc
mov
mov
lea
and
pop
adc
mov
sti
gs
les
jno
lahf
fimul
pop
pop
or
cs
rol
enter
cmp
pop
ret
into
pop
addr16
jp
add
imul
aad
adc
and
cdq
push
push
mov
iret
stos
(bad)
mov
cli
out
lds
xchg
jl
push
in
pop
cmc
mov
jmp
pop
outs
repz
jg
test
ds
inc
sub
icebp
jno
mov
lods
test
push
sub
movs
arpl
adc
ja
hlt
push
movs
ds
in
xor
xor
movs
jle
jb
retf
cli
pop
xchg
iret
dec
dec
es
xlat
mov
aad
add
data16
xchg
movs
add
push
imul
or
fisub
jmp
mov
stos
(bad)
jecxz
sbb
xchg
lock
repnz
mov
push
inc
adc
push
jb
mov
or
sub
bound
aaa
ds
imul
sub
push
xor
stc
rcr
in
mov
xchg
cli
or
mov
in
xchg
jbe
sub
fcmovnu
jnp
mov
in
repnz
(bad)
retf
lock
in
sbb
addr16
fdiv
add
push
pop
mov
jbe
cld
add
shl
fwait
adc
and
ss
pop
enter
sbb
mov
retf
cmp
adc
in
and
jle
stos
push
and
daa
or
add
jns
mov
push
js
xor
repnz
add
leave
add
mov
mov
test
in
(bad)
rcr
(bad)
add
ins
shl
(bad)
xor
add
mov
js
into
mov
adc
add
add
ss
fwait
push
mov
call
(bad)
fist
inc
icebp
(bad)
js
das
mov
sub
or
fimul
pop
push
rcr
into
fcom
pop
mov
push
add
mov
and
ja
push
repnz
(bad)
push
sahf
dec
lahf
iret
lods
imul
ss
jbe
or
lahf
pop
sbb
in
in
xchg
fistp
sub
sbb
retf
das
loop
xor
fst
stos
ins
pop
sbb
sub
xchg
popf
aaa
xor
dec
mov
dec
push
fmul
ds
stc
or
lods
fwait
xchg
ficomp
push
retf
xchg
mov
push
push
enter
mov
(bad)
sub
fsub
add
and
xor
ja
dec
pusha
cmp
nop
or
cmp
dec
in
lods
repnz
and
jb
push
frstor
mov
push
fst
jmp
mov
fmul
xchg
scas
mov
imul
push
xchg
xchg
clc
into
pop
je
in
lds
adc
data16
xor
cmc
pop
mov
xchg
pop
je
and
pop
ins
and
push
push
cmps
sub
(bad)
mov
mov
adc
stos
add
cmp
adc
pop
sbb
repnz
stos
or
clc
retf
mov
mov
mov
pop
mov
add
xchg
push
xor
fstp
sbb
loopne
cmc
in
(bad)
cmp
jns
and
js
push
adc
xor
add
stc
push
jge
(bad)
inc
sbb
push
in
stc
repz
dec
clc
test
mov
movs
fwait
cmps
fist
xchg
dec
inc
orps
xor
sub
inc
adc
ja
push
xchg
fisttp
mov
iret
add
sub
mov
inc
rol
gs
sahf
test
(bad)
cld
sbb
dec
or
out
and
push
call
fcomp
movs
jmp
pop
push
and
inc
push
xor
ficomp
cmp
(bad)
imul
ficomp
out
xchg
jle
xlat
test
cmp
gs
push
ss
jmp
and
loop
mov
dec
or
cs
das
std
jbe
test
jmp
retf
mov
fnsave
imul
adc
inc
scas
scas
xchg
in
cdq
jmp
stos
jns
mov
call
in
fsubr
test
cmp
(bad)
aad
push
jo
arpl
mov
lods
xchg
xor
es
int3
cwde
pop
fdiv
push
outs
retf
pushf
pop
out
pop
add
repz
and
pop
cmp
scas
or
sti
mov
mov
pop
inc
inc
fnstenv
mov
sub
fnstenv
in
push
cdq
cmps
xlat
mov
les
emms
lods
in
or
scas
or
jmp
loop
ja
rcr
in
mov
or
add
iret
sub
inc
lods
lea
jg
fstp
imul
jge
dec
cwde
push
or
test
pushf
cmp
cmp
mov
ror
sbb
mov
pop
in
pusha
loopne
and
addr16
int
cld
add
imul
sub
jle
in
loope
imul
sbb
test
add
sbb
and
(bad)
sahf
mov
fwait
hlt
ins
adc
sub
adc
pop
bt
xchg
jmp
jb
ja
arpl
aaa
and
or
or
das
call
je
mov
fisttp
add
je
arpl
mov
sti
(bad)
add
or
pop
pop
test
ror
inc
and
lods
inc
ds
cmp
xor
add
jns
adc
movs
test
stos
data16
and
adc
rcr
inc
add
pop
sub
and
cmp
movs
xchg
fisttp
cmp
mov
dec
push
hlt
clc
cmp
mov
rcr
mov
dec
jnp
je
xor
cdq
fcom
mov
out
mov
rol
ds
xchg
or
imul
jl
in
push
jb
test
mov
ins
pop
(bad)
cmp
sbb
out
mov
push
fldenv
lods
sahf
push
sbb
inc
mov
(bad)
jl
fs
repnz
push
lods
fdiv
pop
sbb
in
cmp
ficom
pop
mov
push
pop
mul
jns
xchg
pop
push
call
fwait
out
pop
fnsave
(bad)
(bad)
mov
loopne
or
mov
mov
mov
lahf
xchg
movs
pop
dec
dec
test
ins
fadd
jbe
int3
push
cs
dec
les
rcr
rol
ins
xchg
movntps
std
or
lds
jnp
and
and
cli
jnp
shr
iret
mov
dec
arpl
adc
dec
and
add
mul
mov
and
sub
cmp
jecxz
sbb
daa
sbb
div
outs
or
adc
xchg
xor
popf
out
dec
sub
loopne
pop
cld
sbb
test
imul
mov
adc
and
add
inc
(bad)
pop
lock
(bad)
arpl
push
aam
sbb
shl
or
jp
push
cmps
add
add
sub
aad
pusha
jecxz
push
mov
add
int
lds
and
sahf
cld
inc
jge
popf
adc
cmps
or
in
inc
mov
mov
cmp
pop
and
fisubr
sub
test
das
or
xchg
jmp
inc
xchg
dec
xor
imul
test
adc
jae
adc
mov
cld
cmp
pop
das
and
mov
xor
dec
fcomi
(bad)
xchg
mov
imul
repz
leave
aaa
mov
clc
inc
mov
movs
mov
loop
scas
retf
ror
scas
ret
nop
cs
mov
addr16
sbb
sub
es
in
enter
mov
and
dec
inc
sub
jae
mov
sti
jns
call
clc
mov
or
lods
aaa
add
into
mov
cmp
ss
add
push
and
outs
sbb
popf
icebp
add
aad
or
jp
outs
(bad)
jne
cmps
dec
fs
out
or
ss
mov
loope
hlt
mov
xchg
cwde
int
aad
push
jns
jmp
addr16
imul
aad
test
imul
cwde
inc
dec
adc
push
cmps
mov
fadd
aas
push
lock
cmc
mov
jbe
in
or
cwde
(bad)
pop
movs
or
gs
aas
add
jge
test
lods
data16
push
clc
out
cwde
xchg
and
push
push
lods
jnp
sub
out
(bad)
aaa
jbe
add
data16
jne
ror
aas
mov
je
jge
cs
ret
mov
inc
cmp
jne
sub
fst
mov
xlat
stc
leave
dec
stc
scas
mov
sahf
inc
add
sub
jp
jae
in
das
pusha
cmp
add
cmc
pop
dec
in
push
pop
adc
sbb
mov
test
div
mov
mov
sub
icebp
into
mov
lds
cmp
sti
lea
icebp
jle
push
sbb
and
sub
cdq
jb
mov
xor
push
outs
jns
(bad)
ror
int3
xchg
js
jbe
loop
mov
std
or
push
jb
jns
out
ss
aaa
sbb
test
mov
push
test
loopne
mov
mov
or
inc
xor
push
icebp
xor
lea
xor
loope
or
aaa
add
es
push
call
pop
out
test
pop
stos
cs
shl
scas
inc
xor
or
sbb
jg
sub
outs
jns
daa
ret
outs
int
loopne
das
dec
scas
mov
(bad)
and
push
add
leave
dec
and
add
ret
in
cli
fs
or
cmps
push
scas
push
push
mov
mov
and
pop
and
xor
jae
ins
cli
(bad)
fisub
pusha
inc
(bad)
hlt
out
jl
popf
pop
lods
xor
sbb
fwait
push
push
pop
retf
fcom
(bad)
mov
adc
jg
adc
out
cli
xor
stos
cli
loope
loop
add
(bad)
jnp
lods
push
and
into
cmp
jno
retf
ret
push
hlt
sbb
test
imul
mov
pushf
(bad)
loopne
shl
dec
push
push
sar
mov
push
inc
dec
pop
daa
jno
jae
inc
ds
out
jb
lods
jb
mov
cmps
and
outs
cmps
rcr
inc
out
mov
add
je
inc
xor
xchg
aad
add
bt
das
adc
fild
(bad)
inc
inc
sbb
add
jecxz
cmp
ss
out
and
push
ror
ja
ins
xchg
jnp
jo
ja
lds
mov
push
add
inc
popfw
sub
push
sbb
inc
pop
ins
and
in
rcr
lock
sub
ds
push
push
clc
imul
fldenv
pop
inc
scas
stos
inc
into
mov
loopne
lahf
hlt
dec
leave
sbb
gs
test
sbb
cmp
clc
and
sbb
cmps
fst
loope
test
ds
mov
(bad)
stos
jl
sbb
or
jmp
aad
xor
mov
int
mov
test
mov
ss
arpl
and
sbb
out
inc
ret
call
(bad)
pop
dec
adc
or
and
or
mov
inc
lahf
lahf
imul
push
or
push
and
data16
push
fs
add
popf
cmp
fild
push
mov
mov
outs
sbb
rcr
loopne
iret
shl
(bad)
in
inc
aam
xchg
xlat
out
adc
mov
arpl
pop
xchg
adc
into
and
stos
daa
sar
jg
xlat
jp
cmp
ins
int
jne
add
arpl
mov
fwait
and
in
cmp
out
pop
mov
xor
dec
ins
jmp
lea
dec
cdq
jl
(bad)
loop
adc
xlat
popa
jno
sub
jae
mov
lock
sub
ds
ja
pushf
mov
fisub
mov
fstp
stos
int3
ficom
and
(bad)
xchg
(bad)
lods
rol
aaa
ss
test
and
out
add
shl
test
and
(bad)
cmp
fwait
pusha
sub
mov
repnz
call
jmp
jecxz
enter
pop
mov
and
cmp
ficomp
aas
mov
rcr
jns
(bad)
cld
xor
retf
adc
pop
pop
jmp
xlat
adc
into
dec
mov
dec
push
imul
xchg
out
call
xchg
cmps
pop
xchg
stc
movs
ds
cmp
enter
mov
(bad)
sub
cmp
add
pop
cmps
daa
add
mov
add
dec
or
jae
(bad)
mov
jne
add
xchg
add
fst
jecxz
test
dec
push
pop
loop
sbb
mov
cmp
scas
mov
cmp
out
dec
mov
addr16
scas
rol
or
push
mov
call
int
ins
sbb
xchg
fldenv
adc
inc
or
push
jnp
jmp
nop
(bad)
jl
int
(bad)
adc
mov
cmps
test
movs
es
mov
iret
mov
jp
mov
xlat
test
pop
js
bound
sub
add
pop
fs
push
lods
fmul
sub
xor
gs
aas
pop
sub
xor
dec
mov
mov
rcr
cmc
fistp
jmp
push
pop
mov
push
aaa
sub
mov
out
and
pop
xor
in
or
lods
push
jno
mov
jnp
loopne
push
mov
ins
jae
les
adc
adc
pusha
adc
shl
sti
je
or
(bad)
jl
push
add
and
add
xor
fmul
sub
test
jge
fwait
mov
add
xlat
bound
inc
xchg
dec
mov
xchg
out
out
ds
dec
xchg
cmc
jl
push
add
mov
jge
ins
sbb
jnp
out
sub
mov
mov
add
cld
mov
jmp
scas
int3
cmps
out
adc
xchg
and
dec
cld
or
push
loop
or
cmps
and
add
inc
jle
jmp
test
jmp
mov
mov
xlat
mov
xor
inc
jmp
mov
bswap
clc
jae
mov
inc
xchg
sti
gs
push
pop
lods
int
inc
or
into
lds
xlat
cwde
xor
and
mov
in
xchg
jnp
push
push
int
push
aad
mov
add
leave
cs
ret
clc
lds
mov
push
movs
cdq
add
int3
test
movs
inc
lahf
sub
mov
shl
fwait
ds
xor
cli
inc
in
mov
dec
cmp
xchg
dec
movs
mov
cmps
mov
push
dec
ss
cmps
pop
sbb
rcl
icebp
pushf
add
add
mov
arpl
loop
lea
and
retf
std
sti
fwait
pop
pop
dec
inc
fwait
nop
push
shl
adc
pop
not
xchg
mov
lods
pop
fnsave
rcl
mov
cwde
test
fs
sub
inc
mov
movs
and
stos
ficomp
add
int3
imul
jo
mov
dec
jg
enter
push
sub
cli
ins
pop
cmps
cmps
xchg
pop
mov
cmc
ret
mov
idiv
(bad)
xor
jnp
fist
pop
jbe
lock
cmc
(bad)
shl
retf
jge
cmp
push
(bad)
arpl
add
push
mov
aas
and
movs
mov
fcom
adc
(bad)
mov
ret
jg
int3
add
add
fdivr
mov
or
cmp
daa
xor
xchg
aaa
xchg
dec
inc
pop
loop
mov
aas
(bad)
daa
movs
lods
rcr
xor
jns
cmp
(bad)
out
mov
sub
repz
fs
(bad)
cmp
push
ficom
pop
pushf
call
and
and
addr16
pop
fs
push
movs
out
sub
cmc
sub
xchg
je
mov
cmp
rcl
push
test
mov
sub
int3
or
std
mov
sbb
dec
retf
enter
inc
mov
dec
jge
inc
stos
inc
aas
push
xor
push
repz
sub
xor
int
aam
or
movs
mov
pop
jmp
les
xchg
adc
jmp
repz
or
jne
gs
popa
mov
xor
test
out
btc
push
icebp
inc
(bad)
stc
add
imul
push
mov
and
sub
lods
add
add
arpl
out
jmp
mov
test
pop
sbb
mov
mov
daa
jecxz
fwait
shl
in
jno
fsub
adc
stos
push
movs
int3
or
mov
sbb
test
or
sbb
sbb
ds
cmp
cmp
inc
inc
movs
shl
in
gs
push
inc
dec
bnd
call
fidiv
(bad)
repnz
push
pop
cmp
ins
adc
iret
xchg
aad
(bad)
fprem1
outs
mov
ret
pop
dec
je
mov
pop
or
adc
test
loope
stc
and
repz
pop
xchg
leave
and
xchg
out
loopne
pop
cmps
in
stc
mov
out
pop
arpl
xchg
inc
sub
int
stc
int
out
dec
(bad)
data16
loop
mov
data16
mov
(bad)
xor
cwde
fs
std
fs
cmp
frstor
jle
daa
pop
dec
push
pop
sbb
in
test
mov
jmp
dec
in
imul
out
dec
out
push
pop
or
lds
push
icebp
pop
popa
mov
pop
jo
loope
mov
ins
or
aas
retf
and
pop
and
shl
xchg
pop
inc
daa
sub
shl
add
jg
das
imul
cwde
or
es
add
add
imul
mov
clc
pop
daa
push
retf
pop
fisub
call
out
push
lds
in
in
jecxz
jne
sbb
cmp
scas
sbb
pop
sahf
bound
popa
call
hlt
ins
shr
mov
shl
cmp
inc
xor
jne
adc
pusha
or
ja
hlt
pop
and
adc
ins
xor
add
ret
cdq
jmp
sbb
mov
cli
jmp
adc
adc
sbb
repnz
or
push
adc
out
xor
test
jge
sub
popf
scas
or
in
ds
sbb
mov
fst
rol
or
ins
dec
jge
in
or
retf
add
add
sub
cli
popf
jo
and
popa
push
jo
adc
sbb
loope
dec
push
out
aam
pop
push
and
pushf
xchg
fnstsw
xchg
adc
test
jmp
push
pusha
popa
mov
and
cmp
adc
sbb
das
js
jg
sbb
add
xchg
hlt
and
xchg
cmp
mov
push
in
jne
in
xchg
dec
shl
push
add
fcos
add
xchg
cmc
out
jl
mov
sbb
pop
out
aas
xchg
pop
mov
push
fcom
sbb
cli
leave
push
dec
jae
and
(bad)
push
repnz
lods
dec
push
dec
jb
cmps
jo
mov
adc
and
retf
out
mov
sub
lahf
lea
ret
xchg
inc
mov
and
mov
cmps
in
int
jnp
or
xchg
xor
fisubr
scas
dec
scas
cmp
es
xor
sbb
mov
adc
dec
jmp
psubb
sbb
jno
div
xchg
xor
fadd
cmp
xor
test
pop
or
pop
js
retf
push
push
inc
fisubr
js
mov
leave
sbb
dec
jg
or
ins
imul
sbb
inc
bswap
add
test
out
fld
cmps
lahf
loope
imul
sbb
out
call
push
loopne
mov
pop
sbb
popf
out
xchg
jmp
in
loope
push
mul
mov
sub
shl
fiadd
ins
jge
adc
xchg
movs
aaa
js
loopne
lea
rcl
enter
mov
cmp
xchg
or
das
mov
ins
inc
sti
xor
xchg
call
ret
int
cmp
adc
lods
aaa
jmp
mov
(bad)
mov
inc
add
ficomp
dec
xchg
xchg
mov
push
add
test
sbb
mov
xor
ins
or
jg
jecxz
out
fs
jns
dec
ret
int3
rcl
mov
sub
lods
dec
(bad)
repz
push
out
inc
ja
(bad)
mul
in
sub
dec
and
add
pop
cld
fcmovnu
into
mov
jns
loopne
mov
mov
push
icebp
je
cwde
pushf
call
mov
sti
jmp
adc
push
lock
cvtps2pi
pop
mov
in
sbb
dec
les
dec
cmp
mov
inc
ficom
arpl
pop
mov
fisub
jbe
imul
xchg
mov
bound
ja
imul
add
inc
inc
bnd
and
adc
int3
out
add
call
out
pop
adc
sbb
(bad)
call
xchg
jns
cmp
xchg
inc
and
ss
mov
cs
jl
mov
repz
dec
inc
cmps
fs
mov
ins
cld
jle
(bad)
jnp
icebp
fst
dec
in
mov
cdq
call
aad
mov
mov
test
adc
scas
and
and
repz
out
and
sar
inc
icebp
jle
xor
jno
pushf
and
inc
dec
xchg
add
cli
push
dec
sbb
ins
dec
cmc
fnstcw
inc
mov
lods
into
push
pop
mov
pop
push
cwde
mov
ins
push
mov
repnz
out
xchg
cld
xchg
repnz
lds
(bad)
xor
xor
ror
aam
or
jg
pop
ja
push
sub
jmp
mov
mov
ins
mov
jmp
mov
push
aas
dec
mov
mov
stos
or
(bad)
div
pcmpgtw
adc
mov
push
mov
sub
jle
pop
arpl
adc
cmp
fwait
loope
jns
in
mov
nop
sar
add
sbb
iret
lods
cmp
cmc
xchg
das
fcomp
cmp
jno
pop
cmps
fistp
sbb
hlt
mov
jmp
xchg
cmp
xor
dec
inc
jb
mov
mov
cmps
push
popf
or
into
push
mov
adc
push
rol
aam
sbb
xchg
or
jae
sub
add
std
(bad)
or
adc
xchg
mov
push
inc
cmps
in
add
jne
outs
in
mov
hlt
dec
jle
add
enter
dec
mov
lods
push
xchg
popf
ud0
and
dec
mov
adc
test
push
movs
or
pop
push
add
jmp
shl
and
call
test
mov
leave
stos
lods
ins
pop
mov
add
mov
xchg
dec
ror
fcomp
jmp
pop
sbb
adc
adc
pusha
jge
(bad)
sub
fcomp
js
xchg
pop
sbb
fst
pop
je
cdq
aad
sbb
lods
loope
jle
cmps
add
jecxz
out
ds
mov
cmps
arpl
mov
sbb
jge
cmp
test
bound
and
inc
dec
xor
sbb
sub
repz
jmp
dec
test
adc
mov
rcr
adc
push
sub
cmp
mov
pop
div
adc
hlt
mov
jmp
ins
push
inc
fnstsw
leave
outs
sbb
fimul
inc
cmc
std
es
xchg
push
int3
xchg
push
push
ret
jmp
fdiv
(bad)
cmc
pop
rcr
and
fst
fistp
jae
sbb
adc
shr
xor
aas
hlt
inc
cmps
cmps
pusha
rcl
aad
dec
fdivr
pop
mov
mov
call
test
scas
mov
mov
push
not
push
xchg
(bad)
jae
sbb
cmc
mov
xchg
pushf
jp
cmp
lods
mov
out
xor
xchg
test
test
jbe
mov
mov
xchg
daa
in
bound
ffree
dec
or
outs
or
scas
cdq
cmps
stos
into
xor
push
sbb
int3
lds
mov
xchg
dec
xor
push
adc
out
jae
inc
icebp
or
imul
(bad)
or
ds
in
(bad)
and
jmp
outs
sbb
lahf
fadd
cmp
jle
lds
xchg
scas
xchg
in
adc
push
dec
pop
pop
fstp
cmc
adc
movs
in
cmp
(bad)
lods
retf
mov
bound
jbe
and
test
repz
jns
inc
jp
and
mov
std
cmp
or
cmps
scas
dec
adc
sub
in
add
mov
ins
jns
in
xchg
call
popf
pop
dec
gs
mov
push
cdq
mov
mov
push
mov
sbb
xchg
xchg
mov
xchg
imul
dec
fadd
scas
ds
pop
xor
mov
in
pop
dec
shr
xor
mov
ror
shl
mov
xchg
jb
xor
stos
sbb
retf
neg
ret
imul
pop
mov
ja
jmp
sbb
stos
inc
push
sbb
je
jnp
or
push
xor
mov
je
fld
mov
(bad)
retf
rcl
pop
cmp
bound
idiv
(bad)
test
adc
and
pop
sub
retf
push
loope
hlt
mov
add
dec
mov
adc
mov
pop
neg
add
jmp
inc
cs
xor
hlt
je
mov
xor
jne
add
cmc
pop
popa
sbb
les
aad
add
iret
xchg
loop
cwde
retf
xchg
jb
loopne
add
sub
stos
popf
mov
sahf
dec
jmp
mov
or
call
(bad)
fcom
hlt
mov
fwait
(bad)
mov
ficom
aas
std
aaa
adc
inc
mov
and
hlt
xor
jne
fsubr
xchg
aas
sub
inc
pop
xchg
inc
test
pop
xchg
jg
bound
lds
mov
adc
int3
cmp
add
and
xchg
inc
aas
outs
rcl
push
cli
or
lds
shl
shl
aam
jno
mov
mov
mov
adc
cld
cmps
lea
(bad)
xchg
add
jmp
adc
int
repnz
cmp
mov
repnz
in
(bad)
mov
mov
or
mov
push
ret
loopne
out
outs
cmp
and
or
jno
jb
ins
mov
push
and
into
hlt
inc
fsub
rol
cli
hlt
movs
cli
jb
imul
push
or
gs
daa
pop
test
jle
pop
movs
mov
mov
push
dec
popa
jge
call
cmp
adc
fsubr
and
sbb
push
gs
push
in
cli
jbe
nop
push
lods
xchg
jmp
mov
out
adc
ins
add
mov
clc
mov
clc
and
in
icebp
push
call
es
jp
sub
cmp
(bad)
push
sbb
out
cdq
sub
icebp
adc
cmp
cmp
scas
in
sub
xchg
mov
fs
jmp
jbe
cmp
fs
fwait
icebp
out
inc
xchg
sub
leave
(bad)
and
(bad)
xor
(bad)
mov
jo
xlat
into
dec
mov
(bad)
retf
mov
add
mov
into
xlat
sbb
push
cld
test
add
and
addr16
repz
js
sub
repz
inc
not
retf
loopne
xor
and
mov
sbb
retf
xor
sub
enter
pop
std
int3
call
into
xor
jle
jmp
getsec
bound
sub
out
gs
mov
mov
(bad)
fsubr
jg
inc
loopne
dec
sub
mov
ret
push
pop
jg
cli
and
ja
shr
jecxz
mov
test
cmps
call
stos
mov
aad
xchg
rcr
in
xchg
jno
test
scas
hlt
out
das
xor
and
std
mov
stos
stos
add
mov
rcl
and
loop
jl
in
xlat
test
leave
fdivr
stc
nop
fldenv
add
cmp
inc
inc
(bad)
(bad)
mov
mov
push
pop
dec
xchg
lods
push
fild
and
lahf
push
out
push
fwait
push
leave
xchg
mov
sbb
pop
jge
jl
push
mov
mov
add
nop
movs
pop
sbb
sub
int3
dec
jge
cmp
xchg
ins
mov
bound
pop
cmp
pusha
lods
in
ror
push
jle
pop
ja
ins
adc
cmps
xor
popf
int3
xor
mov
pop
repz
xchg
sbb
push
je
dec
mov
lds
lock
in
add
ja
popf
cmp
addr16
mov
outs
cli
cmc
pop
lahf
jp
aas
pop
(bad)
cdq
test
movs
add
inc
mov
pop
test
sbb
out
pop
mov
mov
cwde
pop
(bad)
stos
(bad)
out
div
(bad)
push
cld
call
aam
mov
sti
jmp
mov
test
fld
outs
pop
(bad)
popf
mov
js
xchg
push
push
jmp
pop
cmps
arpl
pushf
adc
push
mov
repnz
xchg
popa
pop
pop
cmp
add
arpl
in
mov
retf
(bad)
retf
iret
dec
xchg
adc
pslld
sub
inc
jb
ror
mov
scas
pusha
outs
adc
mov
pop
repz
out
dec
push
aad
fistp
and
push
pop
lods
(bad)
mov
in
mov
jmp
fisubr
xor
lea
mov
lock
mov
mov
cwde
add
xchg
or
movs
pop
bnd
adc
xor
inc
cmc
lods
inc
push
in
movs
hlt
and
pushf
add
pop
mov
fs
sub
dec
xlat
inc
pop
and
mov
inc
clc
inc
sub
xchg
shl
jno
mov
cmps
sar
pop
mov
mov
cs
jns
pop
scas
mov
push
xor
cs
out
jno
jl
mov
mov
rcr
mov
and
inc
mov
push
js
les
mov
ffree
lods
push
(bad)
fwait
inc
mov
mov
hlt
push
stos
outs
ss
adc
retf
mov
scas
mov
xchg
clc
push
lea
je
adc
pop
or
imul
cmp
enter
sbb
dec
mov
cmp
pop
dec
pop
cwde
adc
cmp
inc
sbb
in
inc
pop
jbe
pushf
push
lods
jne
(bad)
rcr
jb
mov
mov
pop
sbb
into
jp
cmp
lods
xor
test
loopne
pop
cmp
jg
test
push
jge
mov
outs
in
pop
sbb
push
sub
pop
pop
jmp
fwait
popa
int
mov
cmp
sbb
in
mov
int
mov
cmp
dec
cmp
cmp
add
stos
cmc
aas
imul
add
jbe
mov
dec
fstp
push
adc
rol
int3
add
sub
jno
ficom
inc
push
(bad)
rcr
loopne
je
cdq
loope
jae
add
mov
xchg
push
shl
jl
stc
pop
push
mov
jecxz
mov
dec
or
xchg
dec
jae
dec
(bad)
(bad)
xor
daa
jg
dec
mov
or
enter
mov
dec
adc
xor
mov
xchg
fistp
rol
test
bound
and
sbb
dec
pop
mov
(bad)
push
not
add
dec
inc
sbb
sub
mov
iret
jecxz
xchg
mov
mov
movs
xchg
adc
mov
xor
lock
(bad)
retf
pop
sub
inc
shl
cmp
and
(bad)
jmp
dec
stos
cmp
jp
inc
test
rol
mov
mov
(bad)
or
sub
mul
aad
stos
je
imul
cmps
rol
mov
test
(bad)
cli
mov
pop
test
or
aad
cmp
rcl
pop
pop
(bad)
mov
mov
repnz
xchg
pop
mov
xchg
rcl
sahf
imul
pushf
dec
mov
jbe
pop
xor
mov
or
and
enter
enter
cmps
inc
sbb
jle
mov
adc
push
jmp
cdq
or
fstp
sbb
add
sbb
pop
(bad)
call
push
or
arpl
and
xor
adc
mov
mov
(bad)
ds
or
add
mov
(bad)
mov
jmp
inc
adc
stos
ret
ret
out
dec
cs
and
in
fmul
cmps
(bad)
lods
push
es
test
in
(bad)
call
popa
cmp
push
out
xor
dec
xor
and
adc
(bad)
loop
inc
in
dec
mov
xor
and
xchg
dec
pop
push
xor
jp
inc
pop
mov
imul
dec
fimul
test
mov
nop
mov
add
fst
and
dec
adc
cdq
jo
sub
mov
and
add
mov
out
sahf
lahf
je
dec
pop
mov
add
xor
jae
(bad)
sub
push
xchg
shr
aam
inc
dec
jmp
out
(bad)
xchg
fstp
imul
add
das
and
repz
mov
or
sub
mov
stos
fdivr
mov
loope
push
ins
cmp
xchg
scas
cwde
pop
push
xchg
ret
in
fsub
lock
(bad)
mov
xor
(bad)
xchg
test
jns
cmps
ins
adc
or
mov
mov
sar
fcom
mov
aaa
push
call
lods
or
cld
push
(bad)
xor
dec
dec
mov
cdq
mov
pcmpgtw
dec
pop
fsub
stos
das
add
(bad)
xchg
jb
xor
inc
or
xchg
imul
imul
test
in
repz
jnp
cmps
in
or
fwait
pop
arpl
adc
int3
cmp
mov
adc
js
adc
nop
aaa
test
pop
push
or
int3
mov
in
and
sub
pop
jge
xor
iret
lods
mov
sub
imul
jmp
push
and
xor
dec
mov
lods
stc
or
cs
pop
addr16
sub
fist
inc
mov
hlt
pop
scas
sub
dec
xchg
pop
mov
adc
cmp
imul
rcr
mov
je
xchg
pusha
call
rcl
das
pop
push
adc
xor
add
ins
stos
xchg
cmp
scas
push
mov
pop
fstp
cwde
mov
xor
and
outs
mov
add
dec
mov
cdq
or
sub
imul
test
mov
inc
test
mov
and
addr16
mov
jmp
js
add
sub
and
and
or
add
inc
icebp
pop
popa
mov
and
in
test
mov
or
pop
xlat
sbb
xchg
je
scas
popa
lea
popf
shl
mov
mov
xor
ret
js
cmc
dec
fnstcw
jo
cmp
xchg
retf
adc
test
mov
and
mov
sub
in
pop
push
cs
pusha
(bad)
mov
adc
mov
je
aaa
xchg
xchg
int
pop
(bad)
lods
lock
mov
sub
pop
push
xor
out
aaa
jo
push
ror
or
dec
and
adc
les
mov
pop
mov
dec
test
cmc
dec
test
fstp
sbb
cs
xchg
movhps
(bad)
jl
sti
pop
fcomp
mov
stc
in
mov
xchg
out
mov
int3
jmp
sbb
jns
push
test
fsubr
test
push
cvtps2pd
sub
dec
sti
jecxz
in
les
hlt
aaa
jge
dec
cdq
adc
cmp
arpl
test
je
jo
out
leave
sbb
push
pop
inc
cld
test
xchg
sub
out
test
loopne
xchg
in
inc
and
in
mov
jg
les
jg
sbb
mov
icebp
sbb
ss
add
push
sbb
inc
push
mov
pushf
cmp
out
fstp
inc
daa
pushf
out
ins
or
adc
cmp
pop
shl
movs
out
xchg
inc
jle
pop
ss
pop
cmp
cmp
mov
popf
and
adc
mov
into
loop
loopne
mov
(bad)
pop
fld
jmp
add
mov
push
sub
(bad)
icebp
jl
push
mov
jge
xor
sbb
pop
dec
leave
cmps
sbb
pop
mov
jb
bound
xchg
test
pop
out
mov
inc
(bad)
sar
inc
mov
loope
outs
xchg
sbb
sub
out
movs
scas
fcomp
cdq
inc
bound
in
xchg
inc
imul
sbb
lds
cmps
push
fs
fst
pusha
ss
sub
jmp
dec
push
test
rcl
sub
fidivr
cmp
cdq
mov
inc
jmp
add
popa
add
mov
dec
lds
stc
sub
mov
stos
jl
xchg
fs
cmps
adc
sbb
xor
mov
repnz
push
jecxz
scas
mov
jmp
pop
add
fidivr
push
cld
push
retf
scas
loope
mov
adc
cmp
shr
jecxz
inc
inc
imul
sbb
pusha
push
popa
call
mov
les
or
jle
in
sub
ret
jo
push
dec
(bad)
or
mov
out
dec
mov
pop
jns
push
(bad)
or
js
cmp
xor
sbb
push
enter
fs
ret
mov
loope
pop
ret
fidivr
out
xchg
push
imul
mov
push
inc
jae
pop
add
inc
movs
mov
jge
or
cmc
test
cwde
mov
pop
fstp
js
xchg
mov
hlt
shl
ficomp
call
js
xchg
cmps
scas
mov
pop
mov
mov
jnp
add
test
ja
scas
out
(bad)
pop
jne
(bad)
and
pop
ret
call
dec
cmp
mul
scas
pop
add
in
imul
pop
push
dec
not
loope
mov
fcomip
cmp
and
jno
repnz
cli
sahf
xlat
xchg
cmp
adc
gs
xor
retf
xor
sub
popf
hlt
inc
jne
bound
jmp
fsub
pusha
aaa
adc
lods
push
push
jae
xchg
mov
retf
outs
lock
jecxz
ins
hlt
scas
inc
xchg
jno
cmps
dec
aaa
sar
cmp
mov
aad
in
jbe
(bad)
imul
xor
and
or
mov
out
rcr
into
add
ret
hlt
add
mov
pop
jb
sub
dec
jecxz
cdq
mov
in
dec
pop
xchg
xchg
pop
or
ret
or
cmp
mov
not
or
jbe
sbb
inc
xor
lahf
jmp
jge
mov
inc
adc
movsx
xchg
mov
inc
icebp
mov
or
adc
ret
sub
sub
icebp
pop
mov
push
inc
push
(bad)
cmps
mov
sub
xor
ret
enter
pop
dec
cmovnp
mov
mov
in
mov
xor
ds
ja
xchg
sub
test
rcl
xlat
ins
mov
cmp
push
imul
out
mov
fmul
xlat
xor
in
push
sub
sbb
cmps
and
mov
adc
stc
and
xor
jmp
pop
jmp
mov
cmp
dec
loope
or
and
leave
fild
dec
pop
(bad)
fcomp
or
cs
cmp
popf
stos
mov
xor
mov
dec
cmc
movs
push
cmps
js
lea
cs
out
(bad)
mov
push
jg
mov
jnp
sbb
retf
fisubr
pop
rol
lods
push
inc
loop
(bad)
(bad)
sub
retf
add
xor
jmp
xor
ins
int
nop
les
mov
(bad)
in
or
mov
mov
retf
lock
andnps
iret
aam
std
add
scas
add
(bad)
sub
stos
push
rcr
ss
sbb
add
into
out
adc
xor
test
dec
lds
jo
pop
fld
fcmovnu
out
test
aas
sub
adc
xchg
stos
sbb
std
dec
je
push
mov
arpl
pop
and
mov
adc
push
bound
mov
push
out
pusha
das
push
push
aaa
pop
add
add
and
mov
sub
cmps
dec
ror
pop
in
into
call
jg
test
cli
inc
xchg
jno
movs
mov
dec
add
sar
xchg
cmps
je
jbe
push
dec
xor
xor
jae
xor
mov
xchg
push
xchg
pop
dec
xchg
pop
es
inc
sub
sub
sbb
jg
jmp
(bad)
loopne
jnp
push
xor
lods
add
or
pop
mov
push
and
out
mov
jmp
hlt
mov
cmp
loop
jge
mov
jnp
xor
dec
cld
(bad)
iret
xchg
ret
test
cmc
pop
sbb
mov
xchg
mov
cmps
aaa
mov
and
adc
push
mov
shl
inc
out
daa
in
jecxz
clc
bound
aaa
cmp
dec
out
and
cmc
jle
inc
xor
dec
test
int
cmc
and
or
mov
and
dec
(bad)
scas
pushf
nop
cmp
push
mov
loop
push
push
loop
mov
aam
movs
mov
in
sub
and
out
dec
icebp
adc
repz
sti
xchg
xchg
mov
xor
jecxz
outs
fsubr
cmps
rcl
rol
cs
lds
jnp
push
ss
popf
movs
rcl
jle
add
adc
dec
pop
mov
mov
xor
cmp
mov
icebp
(bad)
inc
dec
out
bnd
std
int3
fwait
sub
les
(bad)
jae
les
loop
mul
sbb
jmp
in
sbb
fmul
or
int
jl
push
push
sub
test
jbe
movs
cs
xor
pop
jecxz
inc
outs
into
inc
dec
jecxz
in
xchg
push
outs
push
mov
retf
sub
and
and
dec
push
test
aad
push
adc
sbb
dec
or
lods
sub
sub
stos
sbb
aas
adc
ror
mov
ins
lock
aam
(bad)
cmp
pop
fisubr
mov
mov
cmp
ins
call
mov
addr16
retf
lds
pop
shl
ss
mov
xchg
into
push
push
push
iret
movs
(bad)
pop
repnz
aad
mov
(bad)
sub
rep
sbb
adc
dec
in
pushf
xlat
enter
mov
jae
aas
call
dec
(bad)
push
test
ror
xrelease
repz
jp
loop
loopne
xchg
inc
mov
ins
and
ss
jmp
shr
imul
lods
mov
int3
or
aaa
mov
ror
sbb
push
mov
push
inc
test
clc
not
out
cmp
ins
data16
cmp
jle
mov
add
shl
mov
sbb
pop
push
jno
mov
pop
out
jg
ror
fild
adc
popf
dec
test
data16
stos
mov
daa
add
or
cmp
pop
sub
inc
aam
mov
adc
sbb
jge
out
sbb
push
out
lods
pop
inc
in
movs
mov
test
mov
out
push
hlt
outs
hlt
or
in
sub
loope
jecxz
cmp
arpl
push
adc
lods
jne
xlat
mov
jmp
jno
jne
jo
shl
(bad)
bnd
dec
outs
mov
les
xor
or
lds
or
mov
pop
mov
cdq
ins
sub
jne
clc
fidivr
sub
or
jbe
push
push
std
or
xor
(bad)
std
idiv
aaa
add
ficomp
test
fwait
mov
add
add
or
mov
fdivr
scas
js
xor
ror
pop
loope
data16
cmp
test
inc
jo
dec
xchg
dec
lods
sub
and
jl
imul
out
out
sbb
call
push
inc
sbb
xor
aaa
mov
add
lea
outs
hlt
or
std
clc
xchg
pop
sub
int
mov
jecxz
dec
(bad)
cmp
outs
xor
neg
jns
cmps
pop
push
inc
les
sub
mov
push
outs
in
xor
(bad)
fmul
aad
int3
jae
lock
or
cs
(bad)
mov
in
jmp
movs
sbb
push
sbb
scas
in
cmp
sbb
xchg
push
mov
scas
cmps
push
es
jb
jge
add
test
enter
xor
pop
out
mov
push
mov
in
dec
jne
outs
cld
loope
int3
or
push
sub
sub
push
sub
call
mov
xchg
sar
out
pop
cmps
rcr
mov
ret
mov
lea
sbb
push
pop
inc
cmp
push
push
sub
cli
adc
sub
add
ret
xor
push
and
dec
ss
(bad)
xor
popf
pushf
pop
sbb
out
dec
xchg
arpl
push
push
fst
cmc
inc
dec
pop
dec
in
jno
mov
aas
les
jmp
iret
daa
inc
pop
ins
iret
jnp
in
enter
inc
ficomp
clc
pop
jne
mov
push
bound
dec
call
mov
nop
jmp
aas
(bad)
mov
xchg
push
mov
xchg
arpl
push
sbb
rol
stos
jae
cmp
jg
fcom
or
and
outs
fstp
mov
and
sti
stc
jl
and
push
rcr
dec
jp
fild
icebp
inc
das
mov
gs
ja
mov
sub
inc
lahf
call
mov
fnsave
cs
(bad)
mov
fsubr
jmp
push
dec
adc
retf
pushf
(bad)
adc
ret
jns
mov
rep
stos
out
stos
call
imul
add
out
push
sub
cmc
jmp
jge
idiv
mov
xor
(bad)
adc
push
in
enter
les
fwait
jle
jns
leave
push
or
retf
and
and
cmp
je
dec
inc
sub
and
imul
xchg
scas
pop
xchg
ins
inc
lahf
add
popa
push
add
out
cdq
mov
stos
cmps
sahf
pop
add
or
add
jle
aas
int
jnp
dec
lds
ret
pop
mov
enter
cmp
cmps
mov
ret
xor
sub
and
sbb
mov
not
dec
aaa
or
dec
mov
mov
neg
mov
inc
jl
push
jmp
out
sub
mov
fdivr
ins
dec
mov
test
pop
xchg
mov
fisttp
mov
adc
std
ins
cmp
xor
adc
mov
sub
popf
mov
outs
push
mov
std
scas
into
mov
pop
cmp
lock
cli
ror
mov
lock
pushf
pop
test
retf
cmp
inc
loopne
or
(bad)
sbb
cmp
(bad)
lea
gs
ret
test
cmc
and
popa
mov
mov
into
movs
arpl
int
inc
ja
mov
xor
adc
cwde
sbb
js
(bad)
sub
add
and
adc
in
adc
dec
push
mov
aad
jle
ja
or
push
mov
mov
xchg
cdq
cmps
int
into
ds
dec
add
mov
aaa
add
mov
cmp
add
rcl
rcl
pop
xchg
fld
movs
mov
pop
sahf
dec
out
sub
adc
aad
push
bound
mov
mov
ret
(bad)
pop
int
push
enter
and
addr16
pop
mov
adc
(bad)
stc
sub
ins
sub
mov
xchg
mov
and
cdq
push
sub
repnz
bound
(bad)
jmp
retf
popa
sti
dec
add
adc
cli
out
push
adc
mov
xchg
(bad)
shr
ret
fmul
enter
mov
pop
or
repz
jmp
jmp
push
loopne
lock
jmp
imul
rol
hlt
mov
mov
(bad)
icebp
inc
mov
push
loope
scas
mov
xchg
gs
ror
daa
fisubr
sar
pop
or
add
test
mov
jnp
mov
repnz
jns
push
enter
mov
es
mov
call
xor
cmps
xor
xor
ja
jmp
call
movs
jnp
push
out
enter
aam
aaa
(bad)
in
jmp
cmc
in
push
(bad)
ins
pop
xchg
out
xlat
(bad)
(bad)
shl
(bad)
dec
mov
xlat
sar
xor
pop
jmp
adc
cmp
mov
movs
jle
mov
pop
mov
lds
sub
(bad)
fiadd
sub
repz
rcr
push
cs
es
cwde
lea
mov
lea
test
and
popw
in
adc
enter
pop
(bad)
push
sub
in
adc
jl
idiv
cs
addr16
aas
stos
movs
cmp
jne
push
aad
out
out
and
inc
les
int
mov
lock
loop
mov
fmul
cdq
push
xor
cmps
scas
adc
repnz
ins
xor
jmp
xchg
jae
jge
icebp
jnp
call
sbb
jb
fs
cmp
cmps
xor
adc
push
mov
mov
dec
mov
test
dec
hlt
aas
sbb
push
pop
push
hlt
dec
pop
xchg
dec
and
stc
pushf
mov
dec
fmul
mov
lock
mov
pop
into
mov
inc
xor
clc
inc
fistp
push
retf
push
ret
ins
cdq
aas
jbe
cmp
mov
inc
dec
xlat
fwait
mov
and
cmp
call
call
sub
cwde
dec
test
jb
call
fnstenv
repz
mov
jo
ror
sar
sbb
in
rol
or
in
int3
ficom
cmp
cmc
push
lahf
and
mov
dec
lahf
iret
data16
mov
xor
out
pop
es
ins
xchg
out
sbb
sbb
or
test
sbb
aas
aas
nop
cs
or
jle
aam
push
pop
adc
out
ss
push
aas
jg
(bad)
xchg
jmp
xchg
cmp
and
adc
retf
cmps
inc
add
iret
push
loopne
mov
lahf
aas
cmc
ror
mov
movs
sub
mov
(bad)
cld
dec
jbe
add
adc
pop
jne
xchg
jp
adc
inc
mov
push
aas
in
inc
cld
loop
(bad)
push
push
fbstp
aas
push
mov
dec
cmp
or
mov
push
mov
mov
fstp
shl
loope
dec
inc
aam
cdq
adc
ins
push
call
or
mov
addr16
test
ret
add
add
loope
jae
rcr
and
sahf
jg
imul
pop
leave
cdq
clc
push
daa
clc
gs
mov
into
mov
mov
jb
add
pop
scas
out
loop
rol
sub
inc
or
out
lock
shl
jl
lahf
sar
adc
push
in
inc
icebp
or
xor
js
in
test
xor
mov
jge
pop
pop
fcmove
(bad)
cmp
mov
or
add
mov
push
pusha
sub
mov
rol
push
mov
es
popf
popa
or
outs
push
jg
jecxz
mov
add
cdq
add
stos
ss
xchg
loopne
gs
mov
mov
cmp
(bad)
cld
push
fcom
fimul
jecxz
jg
xchg
sbb
mov
dec
ror
sbb
push
cld
out
cld
popa
loop
jmp
aas
aad
push
div
pushf
loope
idiv
in
sahf
or
pop
xchg
outs
or
retf
gs
push
mov
jge
sub
dec
push
sbb
in
sbb
mov
mov
xor
jb
sbb
mov
sar
mov
jo
pop
or
aas
add
pop
pop
ret
test
mov
dec
sbb
or
aaa
push
inc
jns
mov
test
and
push
imul
ds
sbb
lods
pop
lea
dec
fnclex
in
test
pop
cmp
test
fwait
sub
xchg
mov
sub
jg
mov
outs
sti
enter
jno
mov
cmc
call
dec
xlat
daa
pop
xchg
iret
pop
dec
add
loop
in
mov
mov
xchg
stc
(bad)
add
mov
outs
or
aam
out
sub
sub
inc
mov
mov
cli
jmp
fcmovu
icebp
mov
jns
test
cmps
(bad)
or
in
inc
sub
cmp
push
int
in
push
fldpi
add
dec
xchg
rep
fld
pop
jg
ret
fistp
push
adc
push
int
sbb
inc
inc
shl
jmp
rol
loopne
sub
push
ins
daa
lock
inc
les
mov
outs
jnp
dec
test
je
addr16
adc
cmp
mov
js
(bad)
fild
retf
push
(bad)
loop
xor
cmp
stc
cmp
and
xchg
or
out
fbld
std
icebp
mov
jecxz
mov
jecxz
sbb
test
hlt
dec
push
(bad)
stc
add
loope
int
aaa
pop
push
xor
mov
pop
and
adc
test
stc
sbb
(bad)
das
adc
or
mov
lock
in
adc
ret
(bad)
sahf
push
int3
adc
into
aad
in
stos
fld
xor
xchg
scas
add
retf
clc
test
sbb
repz
jmp
inc
rol
lea
loop
lock
jno
jne
sub
sbb
sbb
jmp
cdq
pop
adc
inc
cmp
jae
addr16
add
mov
inc
jmp
sbb
(bad)
fidivr
cmp
jns
adc
lods
and
dec
psraw
pop
sbb
push
out
sbb
je
push
push
mov
mov
stos
outs
fdiv
pop
mov
xor
add
add
xor
enter
rol
xchg
and
ins
les
out
xor
mov
cwde
test
sub
and
jb
push
sbb
sub
add
and
mov
cmps
jae
pop
add
in
push
ret
pop
xor
and
setb
repnz
jb
fcmovne
pushf
repnz
scas
mov
xor
daa
div
std
out
jno
lds
fstp
push
shl
imul
sti
sub
call
sbb
xchg
movzx
xchg
jbe
cmp
clc
sbb
arpl
and
pop
or
adc
fs
ins
ret
stc
mov
push
inc
mov
cmc
cmp
push
test
fidiv
pop
test
dec
js
push
cmps
mov
repz
pop
xor
mov
cmp
pop
ret
xor
xchg
call
cmp
icebp
(bad)
int
jge
adc
xor
into
mov
cmp
or
adc
int
xchg
xchg
mov
mov
push
xchg
pop
dec
xlat
xor
bound
adc
push
jmp
mov
or
add
add
scas
pop
or
lea
xchg
icebp
mov
popa
pusha
jge
mov
fadd
xchg
ins
adc
rol
leave
adc
call
pop
invd
jp
lds
xchg
and
mov
pop
ins
cmp
dec
imul
test
mov
push
out
fstp
inc
xchg
rcr
ret
pop
pushf
xchg
hlt
and
jno
in
dec
fstp
pop
(bad)
sti
mov
fdiv
mov
xlat
call
les
jae
addr16
add
aas
jl
add
push
fldenv
leave
pop
mov
cmps
fsubr
arpl
arpl
popa
adc
daa
push
rcr
scas
fbstp
in
stos
dec
loop
(bad)
std
jnp
pop
adc
xor
mov
cmp
outs
sbb
adc
mov
imul
push
pop
imul
inc
test
repz
dec
xor
aam
mov
shl
jge
imul
ins
inc
out
data16
push
mov
arpl
inc
addr16
xor
or
(bad)
mov
pop
das
ret
xchg
mov
stos
adc
sub
arpl
ficomp
or
rol
vandnpd
popf
push
cmp
mov
scas
or
ret
xor
mov
inc
xchg
(bad)
rol
pop
mov
stos
enter
mov
xlat
ss
movs
xlat
pop
xor
cmps
mov
jmp
xchg
push
jno
xor
jae
adc
push
loop
xor
imul
adc
pop
cmp
pop
std
or
pop
sti
sub
rcr
xor
push
out
aad
jb
pushf
int
mov
fs
ins
cmps
inc
or
sub
in
add
add
mov
cmp
cmp
shl
mov
cmp
jecxz
ss
popa
lds
mov
mov
daa
retf
(bad)
sbb
adc
fistp
call
fidivr
call
push
ret
outs
mov
mov
sub
mov
inc
repz
scas
js
add
jp
and
ss
mul
sub
das
mov
imul
sub
push
mov
mov
std
jmp
push
daa
push
hlt
sub
icebp
mov
fsincos
jbe
sub
cwde
adc
and
add
movs
jmp
test
and
mov
movs
rol
add
stos
mov
mov
cmp
xchg
sbb
push
mov
jge
pop
inc
xchg
mov
xor
xchg
cmp
or
call
sar
mov
mov
cmc
push
std
push
lods
jnp
jmp
fcmovb
cmp
or
jg
outs
pusha
mov
fnstcw
and
psubusw
fcomp
ficom
push
or
imul
xchg
xor
shr
ins
add
(bad)
iret
out
out
jl
jns
mov
js
dec
xchg
mov
push
lahf
imul
pop
and
daa
xor
div
adc
movs
pop
push
sub
mov
lahf
push
mov
pushf
sar
adc
pop
inc
mov
add
(bad)
arpl
lahf
mov
(bad)
mov
inc
xor
clc
inc
movs
in
jmp
jae
inc
nop
leave
shl
cld
push
aas
in
arpl
stc
enter
aas
dec
stos
dec
test
jo
ins
and
inc
rol
inc
pushf
inc
pop
movs
mov
jg
sub
xchg
or
data16
in
and
push
add
add
pop
inc
fdivr
push
loopne
retf
in
movs
imul
adc
out
(bad)
ficomp
jle
sahf
mov
mov
adc
ja
ds
mov
dec
out
in
sbb
dec
adc
les
nop
test
lock
dec
xchg
sbb
bnd
push
push
mov
jo
pop
xchg
ja
icebp
fnstenv
push
push
sub
and
sub
fdiv
in
fidivr
mov
daa
adc
lods
xchg
mov
mov
dec
data16
rcr
xor
and
sar
xor
jo
sar
cmps
imul
arpl
jno
mov
pop
xor
inc
dec
and
fnstcw
cmc
es
in
ret
bound
ja
(bad)
(bad)
sbb
loop
ror
push
and
stos
push
xchg
cli
lahf
push
sbb
dec
xchg
lds
mov
jns
fstp
in
xchg
adc
mov
pop
pop
fs
or
xor
xchg
dec
retf
ss
and
adc
(bad)
mov
sub
cmp
mov
mov
mov
lock
aad
aad
xchg
sub
adc
push
arpl
cld
iret
jno
hlt
fnstcw
inc
inc
jae
dec
into
enter
push
test
push
(bad)
imul
bound
pushf
mov
sub
xor
imul
outs
xchg
adc
in
mov
mov
imul
retf
dec
push
cmp
mov
int
dec
xchg
cmc
mov
xchg
push
lods
and
stc
xor
retf
rcl
cdq
ins
pop
call
cmps
xchg
jns
adc
das
adc
dec
movs
dec
push
xchg
xchg
test
aaa
fistp
scas
adc
dec
mov
or
out
sbb
outs
add
add
dec
(bad)
rcr
add
mov
mov
outs
pop
(bad)
sbb
(bad)
xchg
out
mov
pushf
jnp
cmps
dec
(bad)
stc
pop
cmc
out
std
cdq
mov
movs
std
pop
addr16
xlat
mov
pop
dec
inc
mov
les
stos
dec
sub
push
pop
sub
dec
movs
push
cli
mov
scas
mov
mov
in
mov
pop
cld
or
pop
cmp
loop
mov
or
xor
out
cmp
mov
mov
mov
jmp
addr16
jmp
cmp
lea
inc
mov
ror
bound
jmp
adc
push
in
mov
out
sbb
idiv
out
jmp
icebp
mov
push
sbb
es
cmp
mov
call
inc
inc
in
mov
pop
mov
fidiv
mov
mov
in
les
push
test
cmps
mov
outs
and
and
cdq
lahf
popf
in
xor
and
xor
leave
or
mov
and
out
ins
xor
xor
fidivr
push
dec
ds
xchg
cld
xchg
cs
cmp
mov
repnz
scas
(bad)
aad
lock
aad
inc
(bad)
xlat
xchg
or
xchg
in
mov
mov
js
cmp
jnp
shr
xor
mov
in
shufps
push
(bad)
aad
aas
std
ins
jbe
add
sub
mov
and
cwde
inc
xchg
mov
add
mov
mov
dec
jno
dec
aam
ja
mov
cld
leave
or
daa
out
ret
dec
test
ins
mov
scas
push
(bad)
jae
mov
js
sbb
cdq
imul
pop
cmp
and
jecxz
(bad)
icebp
mov
ins
pop
loopne
lds
xchg
rcr
jp
mov
xlat
fdivr
adc
and
mov
scas
pop
cmp
xchg
jne
push
jecxz
std
cs
test
repnz
cmp
mov
fistp
lods
inc
adc
retf
pop
imul
inc
or
mov
daa
mov
aaa
repz
dec
lds
sbb
and
stos
inc
and
mov
push
and
mov
and
outs
dec
mov
inc
out
outs
(bad)
pushf
iret
mov
sbb
sbb
sbb
ror
out
repnz
test
dec
getsec
into
cmc
dec
out
dec
and
scas
adc
adc
and
push
cs
adc
scas
sbb
push
inc
js
cmp
cmp
movs
hlt
repz
adc
xlat
and
adc
cmp
arpl
push
mov
daa
pop
add
inc
mov
or
push
rol
leave
scas
jmp
add
xor
stos
in
push
pop
push
adc
data16
loopne
shr
xchg
adc
fsubr
(bad)
shl
and
call
std
popf
(bad)
xchg
(bad)
fisttp
mov
call
pop
data16
mov
test
pop
sbb
xor
xor
add
out
in
dec
push
loope
int
ds
cld
pop
xchg
lea
push
stc
aad
(bad)
cmc
ins
lods
test
jb
int
mov
cmps
pop
or
push
add
into
dec
xlat
push
out
ret
adc
bound
data16
dec
sbb
outs
inc
test
push
add
out
mov
mov
and
dec
mov
mov
ret
cmps
add
(bad)
retf
jmp
jbe
daa
es
mov
movs
mov
jo
xchg
test
and
xchg
adc
push
shr
or
outs
out
xchg
inc
call
ja
test
adc
dec
mov
rcr
mov
jl
add
cs
into
bound
enter
adc
sti
mov
jne
out
popa
in
addr16
arpl
mov
jne
push
pop
sub
and
push
fldcw
scas
mov
fwait
stc
push
cmp
jnp
adc
mov
jns
ins
rol
cs
ins
push
xchg
cmp
mov
adc
mov
xchg
pop
jg
mov
ss
mov
rcl
leave
sbb
scas
jno
maskmovq
not
pop
mov
fwait
arpl
jp
addr16
push
in
cmp
repz
das
jno
cmp
jno
inc
icebp
or
push
sti
dec
aaa
call
jae
mov
(bad)
sbb
or
scas
dec
mov
mov
cdq
jl
rol
neg
mov
inc
add
outs
xchg
addr16
pushf
xchg
add
lahf
rcl
xchg
dec
xor
ss
movs
xor
mov
aam
out
imul
out
inc
into
mov
mov
in
mov
cmp
inc
pushf
or
aaa
fcom
push
and
cs
dec
mov
or
mov
mov
adc
sbb
stos
dec
(bad)
mov
test
(bad)
arpl
mov
cmps
pop
inc
lock
xchg
pop
and
dec
mov
pop
xor
mov
inc
push
(bad)
js
movs
cmc
mov
rcr
dec
out
xchg
stos
pop
cmp
mov
and
xor
push
and
ja
pop
cwde
hlt
stos
in
xchg
jge
inc
jmp
loope
or
sub
xor
repnz
loop
lods
inc
sahf
jge
and
in
jno
(bad)
xchg
jge
enter
push
xor
or
aas
retf
pushf
enter
xlat
outs
iret
(bad)
dec
pushf
lea
xor
adc
mul
dec
pop
cmps
adc
mov
sbb
and
sbb
fdiv
mov
add
jno
in
pop
xchg
std
outs
push
xor
adc
stc
sbb
test
jnp
dec
pushf
and
sbb
mov
push
pop
call
ret
loope
add
in
dec
int
xchg
ret
push
(bad)
cmp
cmp
adc
jne
or
enter
ins
fnsave
dec
jae
cli
jl
in
and
stc
pushf
icebp
jbe
in
scas
adc
outs
mov
iret
cs
lods
or
clc
cmps
sti
mov
repz
gs
and
in
push
fdivr
(bad)
xchg
ss
and
test
push
nop
aam
lods
xor
ret
xor
mov
pop
dec
mov
sahf
idiv
sbb
shl
jecxz
iret
mov
push
inc
push
adc
jmp
in
inc
xchg
jmp
repz
push
movs
xchg
mov
rcr
push
aas
xchg
fisttp
push
push
pop
sub
pop
mov
cs
mov
jnp
mov
sub
mov
jmp
mov
pop
rcl
xchg
jp
clc
sbb
xlat
pushf
jbe
adc
pop
jp
retf
add
cmp
popa
fld
adc
mov
in
out
outs
les
jbe
mov
fiadd
imul
xor
loope
dec
xchg
aad
in
and
mov
inc
repz
xchg
pop
ret
test
xchg
(bad)
enter
xchg
mov
es
test
ja
cmp
jo
push
popf
xor
cmp
cmp
hlt
test
pop
js
inc
mov
mov
mov
mov
ret
ja
(bad)
imul
das
in
jnp
cld
mov
cmp
jbe
mov
pop
or
pop
pop
scas
cs
fisubr
scas
daa
clc
push
pop
aas
sar
and
stos
dec
mov
jp
iret
into
push
inc
jecxz
fld
push
ja
fidivr
cmp
pusha
std
add
adc
sbb
add
mov
push
out
mov
xchg
fadd
stos
movs
repnz
mov
xor
fst
cmp
mov
jbe
xchg
mov
xor
mov
mov
cmp
xchg
mov
imul
adc
xor
pop
mov
leave
adc
xchg
inc
pinsrw
std
sub
push
dec
xchg
outs
sti
push
mov
je
inc
outs
in
test
mov
push
push
pushf
mov
ret
push
aas
push
aad
cmp
aam
aas
jmp
xchg
ss
mov
inc
loop
adc
xchg
sbb
sub
push
mov
test
std
movs
dec
mov
xchg
cmps
repz
mul
cwde
pop
sti
pop
add
xor
bound
mov
xchg
dec
dec
xor
cmp
sub
pop
rcr
shl
add
test
mov
pop
dec
xor
retf
(bad)
xlat
sbb
imul
je
jo
sub
xor
lds
lea
and
jo
les
js
adc
or
inc
jnp
or
push
mov
xor
fidivr
aam
jns
mov
jp
repz
cmp
sbb
dec
inc
and
jle
retf
popa
jnp
add
lea
and
xchg
(bad)
and
aad
xor
(bad)
(bad)
fcmovb
in
jle
movs
imul
jbe
scas
sub
mov
sub
enter
xchg
cmp
stc
idiv
sub
fwait
clc
in
stc
add
sbb
lods
inc
xor
repz
sbb
push
push
add
mov
(bad)
mov
int3
cli
imul
and
fdivr
and
add
movs
or
ret
ja
ss
adc
mov
or
pop
sahf
ficomp
cmc
xchg
int
xchg
add
xchg
mov
mov
lods
sbb
lahf
mov
cmps
mov
inc
cmp
cmp
repnz
addr16
aad
inc
and
retf
mov
lea
hlt
add
and
mov
cmp
cld
retf
jne
in
adc
mov
mov
mov
imul
cmp
jnp
outs
adc
xchg
or
fisubr
lods
cmps
int3
stos
sar
xor
push
xlat
push
retf
je
jecxz
dec
call
adc
jmp
stc
xor
mov
and
add
ins
or
mov
push
mov
jmp
cmp
adc
fnstcw
and
mov
shr
out
pop
sub
in
add
sbb
loopne
in
mov
pop
dec
mov
jle
mov
jp
pop
mov
test
or
mov
cmp
jnp
(bad)
scas
or
or
inc
mov
cmp
out
stos
call
jle
repz
mov
ds
dec
addr16
fnstenv
jge
push
loope
enter
dec
ins
mov
jmp
jne
sbb
imul
loop
outs
icebp
mov
inc
sub
nop
repz
cld
cmps
inc
dec
dec
xor
xchg
daa
pop
retf
add
shr
xor
xchg
repz
mov
fistp
cmp
dec
bound
icebp
pop
push
lahf
pop
ror
or
sbb
mov
ficomp
repnz
lea
jno
jmp
adc
xor
mul
ror
push
lods
inc
sub
or
shl
nop
mov
mov
and
cmp
je
arpl
sbb
out
push
pop
(bad)
mov
sub
cmc
jne
aaa
shr
in
mov
(bad)
jp
fild
mov
dec
pop
sti
dec
sub
jo
and
mov
xchg
stc
pushf
rcr
lods
sbb
inc
cmp
sub
cwde
outs
mov
cmp
jge
xchg
pop
das
adc
sti
mov
gs
nop
or
imul
popf
fst
mov
and
mov
movs
or
outs
sbb
aaa
les
add
es
test
movs
jp
test
mov
jnp
in
test
mov
jo
xor
sub
shr
(bad)
cs
js
inc
xor
(bad)
int
(bad)
das
mov
aas
adc
jns
add
mov
dec
les
inc
xor
xchg
xor
mov
mov
jne
sub
cmp
or
nop
mov
mov
leave
int3
mov
or
test
cmp
xchg
xor
xchg
out
xor
das
ja
call
(bad)
aas
push
pop
pop
(bad)
adc
loopne
adc
mov
test
cmp
movs
cmp
or
xor
adc
imul
std
jp
inc
and
mov
mov
loope
loop
bound
bound
add
push
jb
call
push
jp
push
sbb
mov
jp
stos
and
lahf
mov
int3
aad
dec
pop
lea
sbb
mov
cmps
mov
lods
mov
mov
sbb
mov
popa
ins
sbb
mov
inc
out
push
shr
bound
xchg
jo
lods
fisub
sbb
mov
push
mov
sbb
call
jge
mov
pushf
sub
fwait
jecxz
dec
arpl
xor
aam
pop
retf
or
xchg
add
push
xchg
cmp
and
dec
xchg
jb
loopne
pop
or
ds
popa
or
sbb
push
repnz
pop
data16
nop
movs
rcl
in
dec
mov
mov
or
jbe
rcl
sub
jae
aad
jg
push
outs
cld
mov
daa
push
scas
sub
rcl
add
dec
mov
jmp
jp
push
aaa
into
retf
arpl
ds
pop
mov
add
mov
pop
mov
mov
or
adc
call
pop
pop
ret
sub
jecxz
retf
cmp
fisubr
add
jo
cld
mov
iret
adc
mov
fs
mov
xchg
jae
jbe
dec
movs
pop
jno
pop
jp
sbb
cwde
sub
mov
in
int
icebp
push
scas
adc
sahf
mov
pop
pop
enter
call
fild
sbb
xor
inc
call
sub
jo
out
outs
or
cmc
push
pop
jmp
lds
scas
fs
fiadd
mov
arpl
dec
aaa
loop
cmps
or
push
xor
push
add
sub
lods
stos
xlat
ret
gs
xor
and
push
push
mov
je
cmp
adc
push
adc
mov
ror
inc
mov
mov
in
fs
mov
and
lods
add
and
out
sar
mov
jge
aas
out
hlt
aaa
mov
xchg
inc
popf
ja
add
sub
div
jecxz
call
fs
jecxz
in
xchg
mov
xchg
hlt
push
lea
popa
dec
movs
sti
and
hlt
ja
clc
jge
int
xchg
fsubr
call
(bad)
xor
rol
(bad)
ficom
mov
xor
cwde
int3
push
xchg
stc
fucomi
rcl
out
pop
xchg
gs
mov
aaa
out
xchg
pop
popf
test
std
ficom
gs
repnz
retf
or
mov
xchg
nop
jnp
pop
std
mov
xchg
mov
enter
nop
outs
daa
jmp
pop
pop
fwait
rcr
into
dec
js
or
ficom
jne
je
in
jnp
test
pop
sbb
sbb
push
out
nop
and
out
in
ret
lds
lock
(bad)
repz
cmp
aaa
loopne
xchg
lods
or
gs
pop
ret
aam
inc
inc
sub
pop
or
xor
pop
sub
cwde
mov
push
movs
mov
cmp
in
int3
mov
push
(bad)
outs
jae
mov
(bad)
sar
rcr
mov
mov
test
pop
leave
mov
add
out
dec
push
cdq
and
(bad)
adc
xchg
ret
mov
cdq
mov
inc
std
shl
mov
jecxz
inc
xchg
adc
mov
into
movs
popf
add
(bad)
aam
movs
loop
in
out
jecxz
mov
jb
cli
inc
retf
push
aaa
imul
mov
(bad)
arpl
lds
pop
(bad)
inc
or
scas
xlat
fstp
das
nop
add
mov
inc
mov
daa
cmps
mov
dec
imul
sbb
dec
lds
dec
add
clts
jno
push
sub
fldcw
shl
pop
or
push
adc
imul
cmp
daa
mov
rcr
jae
movs
jge
jne
pop
sub
xchg
imul
mov
jns
test
and
mov
mov
xchg
sar
aam
js
mov
add
mov
pop
push
cs
push
dec
pop
loop
jl
ins
fld
mov
or
jo
(bad)
xor
pop
mov
jecxz
cmps
in
fucomip
cli
je
into
adc
mov
into
sub
adc
lahf
popf
repnz
rol
mov
dec
imul
cmps
ins
in
xchg
fisttp
or
aad
pop
adc
nop
int
add
dec
out
mov
fdiv
popf
mov
cs
fdivr
and
stc
jae
popf
mov
jecxz
cdq
or
jnp
add
jne
mov
jmp
loope
(bad)
push
jns
add
ds
xlat
pop
mov
xor
dec
js
movs
les
loopne
data16
push
pushf
and
shr
sbb
sub
in
imul
das
inc
jle
not
xchg
inc
add
mov
inc
shl
imul
fs
out
(bad)
pop
sar
push
push
sbb
xor
icebp
es
cmp
popf
add
in
dec
inc
fstp
daa
aas
push
cdq
xlat
arpl
das
xor
jbe
shl
mov
mov
mov
adc
scas
jne
cmp
outs
mov
std
in
or
adc
xchg
je
adc
xchg
mov
in
xchg
adc
test
cmp
loopne
mov
mov
or
clc
xor
dec
mov
out
test
push
rcl
fbld
or
inc
and
mov
in
sub
imul
pop
dec
add
or
es
sub
call
rcl
inc
cmps
out
js
dec
clc
ins
jle
mov
mov
cmp
xlat
fisub
fidiv
dec
lods
lock
ror
sub
pop
pushf
mov
cmps
mov
dec
enter
mov
sar
mov
inc
clc
cmovg
jno
xchg
test
inc
jl
call
scas
lods
in
icebp
add
cwde
jns
pusha
or
mov
pop
int3
lock
pop
xchg
out
mov
pop
xor
ins
or
test
ret
hlt
loop
into
fst
push
or
xor
push
pop
scas
push
adc
in
aaa
in
or
imul
pop
inc
push
adc
jp
xor
icebp
(bad)
mov
adc
fsubr
or
mov
pop
xor
xor
and
in
or
mov
add
add
jle
sub
mov
sub
(bad)
out
aaa
pop
xor
ss
fisttp
lock
dec
mov
ret
aaa
loop
pushf
lods
outs
scas
iret
out
dec
add
imul
jg
lea
je
dec
out
movs
xchg
cmp
push
pop
or
(bad)
int
test
int3
ror
pusha
cs
jp
lods
shl
cmp
shl
push
rcl
stc
jecxz
add
cmp
lea
js
imul
xchg
ja
aam
rcl
stos
enterw
retf
test
aad
scas
pop
mov
sbb
mov
xor
je
or
mov
xchg
fadd
sub
xlat
adc
aas
aad
inc
int3
fldenv
mov
sub
adc
mov
daa
jmp
pop
adc
test
mov
ret
cmp
jb
mov
loope
cmc
inc
add
sbb
test
test
mul
dec
(bad)
fild
adc
(bad)
pop
and
jp
lock
or
imul
mov
stos
aaa
push
les
mov
xchg
add
jnp
sub
arpl
pop
push
inc
xor
ss
cwde
or
or
rol
retf
cdq
sub
out
sub
jle
xchg
push
loope
jle
sar
inc
sub
aas
hlt
fldln2
add
mov
sbb
mov
movs
ret
aas
xor
mov
xchg
or
cld
leave
jmp
sbb
push
mov
aad
mov
xchg
nop
in
sahf
es
push
outs
jmp
sbb
dec
in
fistp
(bad)
ret
enter
xchg
sub
mov
rcl
add
(bad)
push
mov
(bad)
out
(bad)
and
out
stc
aaa
add
js
push
cmp
(bad)
in
xor
sub
(bad)
jmp
xchg
cmp
pop
cvtps2pd
adc
repz
xchg
call
push
xchg
call
push
gs
pop
push
cmp
(bad)
mov
xor
cmp
popa
fild
or
and
xor
test
adc
ja
mov
rcl
fisttp
add
cwde
pshufw
xor
fwait
cli
cmp
or
dec
enter
loope
or
(bad)
fisttp
adc
lods
cmp
inc
fidiv
fcmovne
outs
bsf
mov
fcom
cmp
jo
jb
cmp
cld
nop
xor
adc
push
dec
(bad)
sub
sbb
cmp
adc
push
cmps
retf
dec
xor
mov
add
xchg
cmp
mov
xchg
xchg
cmp
lea
push
out
push
scas
mov
(bad)
cmp
cmc
rcr
inc
adc
dec
sar
adc
and
xchg
sar
adc
and
(bad)
aad
mov
in
mov
cmp
(bad)
cmp
retf
cmps
jmp
gs
fsubr
xor
enter
mov
push
pop
lods
mov
add
xchg
rol
xor
das
es
je
inc
(bad)
jecxz
ins
push
xchg
sbb
in
mov
in
pop
push
test
iret
test
mov
mov
cmc
dec
lea
in
adc
dec
dec
enter
mov
inc
pushf
jno
pop
and
mov
call
sbb
cli
mov
push
popa
add
add
or
aad
cli
mov
pop
cld
std
stc
outs
jnp
jle
dec
jb
adc
data16
mov
push
dec
jns
dec
ja
inc
mov
push
and
xor
sub
xor
cli
jecxz
mov
ja
inc
pop
int
(bad)
mov
ins
(bad)
xchg
int3
pop
cmp
in
stos
adc
loopne
sub
and
dec
ja
inc
jbe
and
or
mov
int3
cmp
add
xor
mov
fisttp
push
xlat
adc
jmp
cmp
inc
mov
scas
add
push
call
(bad)
repnz
push
push
cmp
and
jae
movs
mov
rol
sub
fwait
push
sub
mov
adc
add
inc
xchg
sahf
rcl
cwde
fmul
jl
mov
(bad)
dec
mov
pop
stc
sti
mov
and
and
jmp
test
adc
aas
sti
cld
jecxz
pop
jno
or
test
call
pop
pop
mov
cmp
or
push
sub
mov
hlt
xor
xor
jno
stos
adc
std
pop
sub
jo
inc
or
and
mov
xchg
mov
inc
mov
dec
pop
jae
dec
add
adc
and
ss
mov
js
js
xchg
sbb
into
sbb
push
shr
test
addr16
mov
out
retf
aad
in
xor
dec
and
lods
jmp
or
jge
inc
add
push
lods
mov
mov
mov
lds
mov
push
sub
inc
cmp
shl
sub
daa
dec
call
test
cmps
mov
xor
test
jmp
jno
mov
ja
fadd
loope
xchg
into
stc
shr
mov
repnz
repz
xchg
lods
lock
outs
jmp
fcmove
ins
fsubr
pop
push
rcl
xor
push
pop
call
push
mov
gs
push
sbb
stos
das
add
aam
and
popa
mov
test
ret
(bad)
adc
scas
scas
sub
(bad)
sar
mov
push
inc
rcr
test
push
nop
test
xor
in
sbb
dec
xor
iret
popf
aad
adc
dec
jbe
sub
cmp
and
push
lods
cmp
xlat
jo
mov
xchg
cdq
dec
(bad)
hlt
xchg
jbe
rol
mov
pushf
cld
ins
xchg
xchg
xor
and
daa
jecxz
aam
push
sbb
leave
jbe
push
or
lea
popa
jo
ss
popa
hlt
mov
cwde
lock
aam
xchg
cmc
mov
or
shl
scas
popa
mov
push
pop
fisub
test
mov
stos
nop
js
daa
jne
sub
retf
ret
dec
into
fcomp
icebp
mov
pop
movs
out
dec
xor
stc
inc
dec
sub
outs
push
jle
call
shl
arpl
ins
paddb
sub
iret
xor
mov
add
xchg
in
gs
dec
in
inc
push
add
imul
cmps
and
mov
add
xchg
lods
or
in
fcmovnb
shl
scas
or
sti
mov
in
ins
leave
imul
idiv
test
cmp
or
test
inc
jp
inc
dec
or
je
push
movs
sub
jg
gs
and
jp
es
iret
cld
(bad)
push
stc
ror
push
mov
and
les
ret
call
inc
ins
dec
push
push
and
xchg
dec
add
cdq
shl
cli
inc
call
cs
pop
fsub
lock
(bad)
fcmovnu
add
or
and
push
add
in
icebp
cmps
push
repz
pop
jmp
test
outs
call
cmc
xor
addr16
push
xchg
adc
cwde
xchg
and
or
or
(bad)
and
inc
(bad)
lock
popf
jp
std
jecxz
icebp
jno
bound
pusha
jae
sub
xchg
adc
cwde
inc
ins
pop
jo
cdq
mov
stc
xor
ja
ret
cmp
adc
in
shl
nop
jmp
jbe
mov
pop
nop
rcl
sub
jnp
or
xchg
sub
mov
mov
dec
push
sub
and
nop
cli
xchg
popa
inc
lods
imul
gs
(bad)
cmc
scas
or
add
pop
in
pop
jne
add
mov
loope
pop
loope
icebp
xchg
mov
push
pop
mov
push
or
das
xchg
popa
dec
ins
movs
mov
cmp
es
jne
mov
(bad)
push
stos
mov
xchg
rcr
mov
mov
mov
jp
outs
mov
test
push
mov
jae
fucom
mov
je
rol
xor
pushw
shr
ret
cmps
lahf
adc
pop
mov
mov
mov
adc
xchg
lds
cli
je
lar
(bad)
addr16
mov
pop
mov
adc
mov
sar
fimul
cmp
out
test
sub
push
push
dec
lods
mov
sbb
inc
lahf
mov
push
sub
pop
(bad)
sti
pop
in
(bad)
ins
icebp
jl
cs
push
es
outs
push
mov
js
dec
int3
mov
xchg
adc
into
pusha
inc
popf
mov
add
inc
or
push
dec
xor
fwait
mov
arpl
pushf
imul
cmps
mov
dec
les
jp
dec
add
sbb
sbb
add
fadd
fstp
cmp
mov
(bad)
adc
mov
fcomp
(bad)
xor
dec
lods
xchg
cmp
popa
fmul
repz
int
cdq
push
dec
dec
fnstenv
cmp
inc
mov
jne
mov
and
jge
(bad)
fistp
add
imul
mov
dec
add
call
lock
sbb
fld
sub
mov
lods
sbb
sbb
(bad)
outs
pop
pop
ja
or
repnz
dec
mov
push
aas
jl
in
scas
sub
int
adc
mov
adc
inc
imul
fnstenv
jmp
mov
mov
ffreep
xor
xor
out
jge
fldenv
and
and
imul
inc
cs
rcl
ins
add
mov
sbb
jbe
fist
dec
call
and
adc
dec
cmovp
movs
sub
dec
or
and
gs
into
bound
(bad)
xor
sub
jne
push
adc
pop
xor
and
inc
inc
cmp
neg
pop
mov
xchg
(bad)
sbb
or
mov
and
sub
fld
hlt
ins
test
pop
add
xchg
into
out
cwde
inc
out
dec
fbld
xchg
dec
jbe
(bad)
test
pushf
sbb
mov
movq
loopne
jp
and
fnsave
lds
imul
aad
jmp
fyl2xp1
in
fidiv
test
xor
retf
adc
out
jle
inc
and
mov
push
pop
and
xor
add
xor
adc
jo
pop
mov
out
jmp
(bad)
repnz
push
data16
pause
jb
inc
hlt
xchg
push
jo
(bad)
xchg
cmp
(bad)
jmp
push
test
dec
xchg
pushf
sub
test
jno
add
fnstenv
pop
enter
pop
dec
jle
pop
jle
cmp
adc
out
in
loopne
(bad)
push
loope
jbe
xchg
sbb
mov
inc
(bad)
cmp
nop
pop
movs
hlt
cli
dec
ds
jnp
pop
ficom
pop
jl
mov
scas
test
and
jl
aam
sub
test
xchg
mov
push
xlat
movs
mov
data16
xchg
adc
xchg
lods
xor
je
dec
or
movs
daa
sub
mov
mov
pop
xor
pop
jp
push
push
mov
cmp
into
push
xlat
mov
and
movs
xchg
xchg
push
arpl
cs
inc
mov
mov
pop
sub
pop
or
mov
out
(bad)
movs
inc
(bad)
or
mov
xchg
les
push
mov
jno
xchg
dec
inc
mov
mov
mov
mov
push
inc
mov
adc
xor
into
leave
add
aas
shr
mov
adc
sbb
cmps
xchg
adc
adc
sbb
dec
or
ud0
(bad)
in
xor
in
int3
add
loopne
lods
outs
out
lock
jle
xchg
mov
xchg
sub
outs
ins
pusha
lahf
and
dec
push
(bad)
jmp
xchg
icebp
ds
enter
mov
mov
xor
xor
jmp
(bad)
mov
or
push
fwait
jne
mov
mov
lods
out
mov
repnz
xchg
sti
sub
fs
ins
loopne
ins
hlt
push
mov
icebp
loope
cmp
pop
jg
call
or
fs
cld
adc
mov
or
aam
mov
sub
shl
dec
add
cmp
push
xor
pop
dec
mov
xlat
test
ror
retf
aaa
xchg
retf
mov
popf
jbe
sub
js
jne
adc
cmp
cmps
push
inc
imul
xchg
cmp
jmp
mov
fst
sub
dec
mov
pusha
dec
and
xchg
sbb
cmp
movs
push
ficom
jp
pop
jge
adc
out
fiadd
test
arpl
icebp
gs
outs
jl
lahf
sub
outs
jo
push
inc
adc
sub
xor
xchg
stos
fs
stos
mov
aas
repnz
cmp
mov
mov
in
pusha
xchg
mov
cli
fdivr
push
in
(bad)
fmul
iret
or
dec
inc
xchg
sub
mov
jp
inc
jg
dec
pop
dec
cli
sbb
jo
icebp
cmps
retf
cmp
test
and
add
or
call
ret
mov
test
je
sti
test
fld
(bad)
out
loope
add
adc
fmul
xchg
adc
xor
ret
mov
mov
xlat
outs
push
push
jle
dec
mov
inc
cmc
adc
jae
add
hlt
lds
adc
icebp
cld
or
sti
and
sahf
ja
retf
rol
and
sbb
pop
pop
loope
data16
cmp
inc
xchg
retf
hlt
cdq
xor
sbb
and
in
test
sub
xor
or
repnz
add
pop
aad
call
lds
dec
mov
outs
test
ficomp
retf
mov
iret
add
(bad)
and
js
xor
jbe
ficomp
out
scas
inc
push
aaa
not
jp
mov
pop
sub
stos
add
dec
rol
and
and
arpl
xor
xchg
push
pushf
dec
push
stc
pop
repz
pop
lods
add
pop
cmp
mov
mov
mov
and
mov
push
xor
inc
sbb
hlt
mov
cld
jnp
ins
int3
mov
inc
inc
mov
mov
sbb
mov
es
and
sbb
outs
aad
aaa
add
and
popa
jo
mov
xchg
mov
fs
retf
in
fmulp
ds
retf
or
xor
lods
repz
int
mov
sbb
push
out
push
xchg
pop
mov
cdq
call
cmc
ret
outs
mov
stc
sub
cmp
int3
push
cdq
push
fs
mov
test
fdiv
jp
fist
mov
loop
fs
test
adc
shl
enter
iret
and
mov
aad
inc
sar
or
and
sti
(bad)
dec
call
popa
push
mov
ins
sbb
pop
xchg
test
jno
xor
push
pop
in
pop
adc
pop
test
dec
ret
push
mov
test
inc
popf
sbb
mov
mov
into
push
sub
sar
fwait
mov
dec
push
jno
mov
or
test
dec
movntq
ror
movs
gs
fmul
adc
xchg
sbb
mov
inc
jne
call
addr16
cmc
xor
lea
jg
lea
int3
call
jle
push
fdivr
pop
mov
jecxz
cmp
cdq
pop
jge
dec
sbb
push
dec
jne
push
bound
mov
add
add
pop
(bad)
shr
test
in
jecxz
sub
outs
inc
fwait
imul
stc
jno
in
jno
mov
lea
jecxz
mov
test
gs
adc
(bad)
lock
inc
cmp
and
xor
dec
ret
push
loop
movs
and
jae
fmul
pop
jbe
adc
out
inc
jmp
jp
xlat
bound
dec
xchg
or
mov
nop
or
sbb
jp
mov
jo
(bad)
sahf
cli
jmp
inc
in
retf
inc
test
push
lods
push
jo
mov
sbb
mov
sbb
sub
jne
push
aaa
push
inc
adc
iret
mov
iret
icebp
cmp
test
mov
sbb
mov
cs
xchg
in
div
xchg
or
jne
lea
pop
lods
cmp
pop
xor
repnz
loope
mov
jge
adc
test
push
in
sar
xor
pop
and
out
push
pop
jg
ror
shl
cmp
cmc
jno
jno
mul
loop
push
cmp
inc
mov
mov
adc
adc
pushf
xchg
and
test
std
and
lods
fst
mov
fsubr
and
aad
les
xchg
push
imul
test
sub
aam
sti
jl
dec
sub
push
pop
push
repnz
movs
sub
les
fadd
jmp
add
dec
sub
push
loope
leave
fild
jb
(bad)
fisttp
inc
test
ss
mov
cmp
mov
ss
ss
sbb
xor
pop
jne
iret
ret
cmps
sbb
jo
xor
adc
xor
or
and
mov
mov
dec
je
and
mov
shl
imul
fsub
or
mul
push
add
adc
mov
iret
push
and
adc
mov
xchg
data16
(bad)
nop
pop
dec
loop
fidiv
retf
pop
xchg
call
add
(bad)
clc
mov
lock
mov
pop
arpl
fbstp
cmps
add
imul
mov
lock
imul
xor
inc
stos
xchg
stos
call
loop
popf
jne
sbb
lods
imul
xchg
test
fiadd
stc
rcl
push
xchg
out
movs
and
mov
dec
inc
inc
add
hlt
xchg
push
ins
push
xor
cmp
into
mov
ret
push
jno
inc
pop
sbb
ret
dec
mov
cmp
ds
in
cmps
(bad)
sub
out
stos
nop
fs
into
mov
and
cld
hlt
(bad)
xor
jge
loopne
jno
aaa
jno
jno
arpl
out
jne
pop
sub
cmp
cmp
lods
stos
add
push
(bad)
scas
and
cli
mov
sub
push
loope
mov
xor
jne
mov
mov
repnz
mov
sub
push
(bad)
adc
mov
mov
int
jns
jns
aas
cmp
fst
cmp
scas
pop
xor
ds
adc
mov
cld
jl
and
sub
mov
fldcw
adc
out
(bad)
hlt
out
jmp
xor
pop
jp
(bad)
out
push
pop
jmp
inc
ss
push
fmulp
add
mov
jp
lods
adc
mov
pop
or
jp
pop
cs
xor
ror
sub
mov
retf
mov
mov
pop
sub
stos
jg
mov
xchg
mov
inc
pop
test
call
inc
imul
fcmovu
mov
fld
sub
call
stos
enter
out
std
imul
in
iret
ret
xchg
mov
sbb
push
imul
in
aam
jae
cmp
bnd
cmc
push
and
cmps
sbb
addr16
mov
fwait
jg
movq
dec
(bad)
stos
add
ret
jo
das
bnd
adc
lahf
ds
arpl
cmp
adc
mov
and
and
sub
stos
mov
retf
sbb
enter
mov
adc
fst
sbb
adc
out
xor
mov
pop
jns
fist
sbb
fbstp
push
push
mov
pop
cmp
jne
sbb
in
lds
or
gs
loope
mov
fcomp
idiv
jo
int
out
fstp
dec
pop
dec
mov
call
aad
add
lock
mov
jno
(bad)
hlt
sahf
lods
push
mov
jmp
dec
call
sbb
loop
fsub
inc
xor
mov
inc
xchg
mov
enter
lahf
jge
inc
(bad)
icebp
sub
mov
push
fstp
scas
push
int
jae
jmp
idiv
sub
cmp
bnd
imul
stc
jmp
loopne
xor
clc
jmp
cmp
jae
mov
arpl
fbstp
mov
adc
sub
or
or
test
sub
xchg
push
cmp
ret
popf
adc
(bad)
cmps
push
mov
jno
out
retf
adc
(bad)
jae
lahf
push
call
pop
mov
mov
sub
pop
jb
pop
hlt
push
cmps
gs
sub
ret
js
in
test
sbb
movs
xlat
cmps
lods
cmp
sub
and
xchg
lods
dec
stos
mov
sti
das
mov
out
repz
pop
inc
mov
repz
les
add
(bad)
gs
retf
je
test
or
xlat
into
cmp
mov
aas
mov
stos
lock
call
js
jno
mov
mov
pop
xchg
pop
cmc
and
adc
(bad)
(bad)
js
outs
push
push
jge
jne
mov
fimul
xchg
cmp
add
and
iret
xor
les
lock
mov
cs
jns
pop
inc
nop
retf
adc
stos
push
shr
pop
xchg
sbb
push
pop
adc
sub
xor
(bad)
out
ficomp
fadd
jo
xor
mov
fwait
inc
sti
ds
xchg
xchg
repz
lahf
inc
push
div
fild
dec
aam
and
(bad)
sbb
pop
js
cwde
iret
inc
push
arpl
and
push
xchg
scas
mov
inc
dec
push
mov
outs
mov
enter
sbb
xor
mov
jno
mov
xchg
idiv
popf
fld
xor
push
aam
cli
out
xchg
jg
outs
into
sub
lahf
push
fsubr
push
or
les
push
mov
int3
add
xlat
aam
xor
lock
test
xor
ficom
sti
ja
and
retf
jb
xor
sub
push
shl
pop
mov
mov
pusha
lock
mov
ja
je
pop
movs
(bad)
xchg
(bad)
js
inc
add
cmp
pushf
dec
mov
fs
fsubr
ds
cmp
in
stc
cli
neg
push
inc
jbe
ins
scas
movs
dec
pop
jge
push
inc
jb
retf
mov
je
mov
or
or
cli
mov
daa
pop
or
fimul
ret
adc
ds
outs
lods
adc
sbb
push
mov
ins
addr16
ds
in
mov
cmps
fmul
retf
addr16
into
hlt
sub
push
in
cmp
or
jp
jae
push
or
cmp
(bad)
sti
pop
test
(bad)
dec
jge
jmp
dec
fimul
add
and
out
pop
fld
imul
and
push
cld
push
push
jnp
daa
dec
ret
dec
push
pop
js
(bad)
and
retf
adc
add
fwait
push
stos
fs
arpl
out
jg
cs
add
repz
inc
jno
cmp
add
dec
mov
lds
xchg
xlat
mov
scas
out
dec
and
dec
dec
enter
lods
jae
pop
imul
push
jge
imul
shl
dec
sub
clc
aas
mov
xchg
gs
add
bts
fwait
js
fwait
push
or
lahf
jne
outs
mov
int3
inc
dec
dec
ja
add
mov
pop
xchg
aas
or
fldcw
inc
dec
push
hlt
rcr
(bad)
lods
mov
and
push
pop
das
rol
xchg
call
inc
adc
shr
out
sbb
retf
sti
xor
sahf
aas
sub
jns
xchg
test
das
lods
aaa
lods
fiadd
loopne
sub
push
cmps
push
aam
jnp
les
psubq
mov
dec
leave
ret
dec
push
jle
add
dec
cmp
dec
movs
inc
or
leave
data16
btc
lds
out
repnz
mov
fcomp
daa
cmp
and
mov
outs
pop
pop
push
icebp
lods
retf
push
mov
sbb
pop
pop
pop
jb
pop
inc
mov
dec
mov
ret
nop
ret
daa
outs
scas
or
inc
out
adc
aaa
push
sub
std
cwde
lahf
adc
ret
or
add
repz
jo
xchg
xchg
xchg
jl
xchg
or
int3
hlt
mov
pmullw
mov
push
sbb
xor
add
pop
rcl
xchg
and
shl
fdivr
(bad)
nop
stos
lahf
call
pop
fs
inc
int
jecxz
cmps
outs
cmps
inc
clc
std
or
fwait
adc
(bad)
movs
push
dec
adc
jbe
call
or
mov
sub
lods
adc
aam
call
xchg
shr
test
shl
aad
mov
fmul
fnsave
fstp
xchg
cli
jns
out
or
dec
push
adc
xor
mov
fistp
mov
(bad)
mov
sahf
jb
and
mov
adc
adc
in
cmp
ror
(bad)
xor
push
fmul
lock
push
push
adc
xchg
jne
or
xor
sar
inc
pop
cwde
xor
inc
fadd
mov
sbb
push
or
dec
adc
shr
or
mov
fs
out
addr16
push
sbb
retf
push
add
inc
lods
mov
jb
out
pop
rol
add
adc
nop
rcr
adc
and
lock
jge
(bad)
sahf
xor
arpl
xchg
push
(bad)
fadd
add
in
pushf
cli
adc
daa
fst
sti
int
inc
call
adc
imul
pusha
fistp
xor
outs
cdq
jecxz
mov
lea
push
and
outs
mov
adc
mov
xor
jns
int3
out
sbb
hlt
lahf
dec
push
rol
jmp
mov
and
adc
add
fnstcw
nop
sub
cdq
jno
and
sbb
fldcw
test
test
in
sahf
jp
aas
xor
stos
jns
add
test
mov
adc
stos
xor
cdq
cmps
leave
xor
pop
ins
push
xacquire
cmp
mov
shl
out
pop
or
outs
daa
js
imul
pop
fisttp
(bad)
pop
and
jp
sub
pop
int3
push
out
cmp
jbe
or
int3
int
(bad)
(bad)
dec
push
inc
pop
fbld
aad
or
iret
loope
stos
add
dec
into
cmp
or
(bad)
test
fsub
std
or
(bad)
cmp
mov
push
(bad)
bound
pop
test
outs
aaa
push
gs
inc
sbb
pop
or
cs
int
ins
ficom
and
pop
imul
sti
pop
pop
ja
push
add
leave
cmps
sbb
ret
xor
lds
movs
xor
xor
scas
frstor
jb
mov
ja
scas
inc
out
rcr
sub
cmp
push
xchg
push
out
push
xchg
adc
jnp
clc
scas
js
scas
in
cwde
jno
xchg
push
dec
push
out
test
lock
or
scas
jns
jae
add
cmp
sahf
xchg
push
mov
enter
shr
mov
(bad)
ficomp
xchg
mov
sub
xchg
cmp
fucomp
inc
test
mov
lods
or
jno
mov
or
mov
loop
or
ja
push
(bad)
cs
jecxz
pop
cmp
or
mov
icebp
adc
push
(bad)
xlat
scas
lock
sbb
push
sahf
pop
rcl
sti
call
es
push
in
inc
add
in
add
or
icebp
dec
test
pop
add
xor
(bad)
mov
jno
pop
arpl
inc
inc
push
scas
scas
jmp
(bad)
sub
push
arpl
(bad)
inc
add
add
das
lea
or
test
inc
adc
mov
aad
mov
out
pop
adc
repz
xchg
clc
in
pop
(bad)
data16
stos
mov
xor
inc
es
jmp
jns
test
mov
mov
jl
pop
or
jg
idiv
xchg
sub
mov
hlt
push
fiadd
jmp
jns
cmc
inc
lods
push
outs
inc
(bad)
xchg
and
push
mov
adc
pop
mov
mov
out
ja
lea
push
dec
push
cmp
scas
popa
ret
cli
pop
ins
pop
gs
sbb
cwde
dec
xor
xchg
into
or
aad
or
mov
or
push
into
dec
push
pop
xchg
and
inc
add
shl
push
push
rcr
cmp
and
call
loopne
out
push
mov
xchg
int3
loopne
mov
or
push
pop
arpl
inc
(bad)
bound
daa
jmp
mov
sub
push
mov
xchg
stos
push
xchg
or
clc
ror
cmc
xlat
jle
ret
adc
adc
pushf
push
aam
(bad)
push
mov
sbb
into
pop
adc
or
cmp
jge
test
out
adc
jnp
xchg
cmp
xor
mov
sub
movs
int3
or
ror
xchg
pushf
es
mov
sti
push
add
dec
mov
push
in
inc
inc
cdq
jno
jmp
int3
retf
pop
jmp
fbstp
leave
jmp
add
out
adc
sbb
dec
int
pusha
jmp
pop
sbb
outs
mov
push
mov
(bad)
dec
lock
or
lahf
cld
ins
xor
gs
fdiv
pusha
ins
cmp
mov
int
int
pop
pop
iret
inc
xor
sbb
mov
jb
lahf
lods
sbb
in
pop
add
xor
add
shr
imul
ds
push
ret
or
mov
pusha
ja
stc
sub
aas
movsx
(bad)
cli
mov
cmp
cs
or
add
add
test
xchg
in
outs
test
out
sub
mov
sub
sub
mov
push
mov
push
int
sub
fsubp
jle
popa
and
imul
mov
mov
int3
int3
das
pop
push
mov
gs
push
sbb
jmp
xchg
pop
(bad)
sub
adc
out
jmp
jmp
neg
pop
add
mov
xadd
fsubr
inc
and
sub
cmp
cwde
gs
cmp
in
cmp
ss
test
fcmovnu
dec
or
popa
mov
mov
mov
inc
xchg
xor
and
and
gs
test
cli
mov
shl
jo
sbb
xor
jp
xchg
fsubr
fnstcw
es
mov
jnp
push
test
ja
bound
mov
aas
out
hlt
cmp
sub
xor
pop
fcomp
mov
pop
pop
jge
mov
jne
mov
nop
pop
test
imul
cli
mov
pop
mov
popa
rol
lock
and
cmp
fidiv
jnp
loop
add
inc
jmp
push
adc
ss
daa
(bad)
jmp
(bad)
adc
pop
in
arpl
mov
mov
in
sbb
xlat
jnp
push
aam
mov
sar
bound
test
shl
cmp
mov
pop
xor
repz
stos
lods
mov
xor
pop
pop
pop
lds
inc
sti
aam
cwde
and
sti
lods
jns
cmc
aad
push
adc
mov
sub
cmp
fwait
and
mov
jmp
out
jle
stc
stos
imul
in
es
test
fwait
mov
cmp
pop
(bad)
call
ss
add
cmps
jno
pusha
shl
mov
xchg
ror
dec
iret
imul
sar
test
push
pop
pop
cmp
or
mov
mov
mov
lods
pop
iret
test
rol
int
mov
xor
or
idiv
(bad)
imul
loope
and
jnp
sbb
addr16
sbb
jmp
ds
mov
adc
push
mov
data16
inc
repz
add
rcl
sbb
lock
jmp
xchg
pop
push
push
mov
fistp
or
push
jmp
int
rcl
sbb
mov
shl
add
push
out
cmps
(bad)
stc
pushf
lods
out
data16
pop
pusha
ficom
mov
out
mov
add
out
stos
data16
es
mov
es
fs
xor
aam
pop
test
pushf
inc
(bad)
adc
sub
(bad)
adc
mov
int3
addr16
int
jno
cmp
daa
fwait
leave
scas
pusha
cld
sub
fsubrp
loopne
icebp
(bad)
mov
and
in
imul
sub
mov
pop
imul
mov
les
pop
sub
pop
inc
jns
repnz
sbb
rol
cmps
mov
cmp
mul
(bad)
jge
pop
sbb
ds
xor
data16
movs
mov
add
add
mov
in
add
movs
sub
loope
fist
dec
push
outs
in
sahf
mov
cmc
pop
pop
cmps
aad
fcom
nop
mov
dec
repnz
inc
xchg
xchg
dec
(bad)
xchg
fnsave
dec
clc
sar
push
retf
jmp
sub
pop
fistp
lock
daa
pop
test
fwait
ins
jmp
fsub
push
cwde
mov
xchg
sbb
pop
shl
sub
into
scas
enter
icebp
pop
daa
cmp
xor
mov
mov
fs
dec
fadd
js
jnp
and
in
mov
jb
(bad)
jl
sub
bound
pushf
xchg
std
cli
sbb
popa
or
mov
dec
mov
dec
cmp
fldenv
add
loopne
daa
dec
aaa
pop
push
mov
push
ins
mov
or
stc
and
jg
movs
inc
out
fst
jns
push
call
push
jmp
enter
xor
lock
inc
rol
std
outs
mov
(bad)
and
and
mov
cmp
into
mov
outs
dec
pop
idiv
jg
popa
mov
and
pop
fstp
mov
icebp
movs
shl
fsubr
add
in
shr
mov
repnz
jae
sub
xor
add
popa
xchg
pop
mov
xchg
stc
loop
cmp
aam
cmc
inc
dec
je
inc
jg
icebp
sbb
pop
or
mov
lds
fisub
icebp
push
cwde
or
mov
int
retf
dec
mov
inc
(bad)
fiadd
jl
jo
mov
or
xchg
rol
jmp
arpl
pop
ss
add
out
loop
inc
push
mov
sbb
movs
nop
cmps
cmps
and
mov
jo
mov
push
mov
sbb
pop
push
out
inc
out
cdq
mov
mov
dec
adc
inc
sub
xor
pop
pop
add
mov
xchg
test
pushf
or
jge
and
add
jp
jb
lock
outs
ret
int
sahf
push
ins
xor
and
adc
mov
les
mov
mov
daa
fcomip
pop
jmp
xor
sbb
jmp
pop
fidivr
(bad)
data16
cmp
mov
ret
push
ret
(bad)
cmp
pop
and
leave
(bad)
jecxz
add
in
call
adc
cli
addr16
push
mov
ins
les
xor
int3
and
pop
push
mov
test
clc
movs
(bad)
loop
dec
je
loopne
pop
xchg
ins
pop
mov
push
cli
sub
repnz
nop
pop
out
sub
movs
scas
add
(bad)
pop
pop
inc
mov
xor
loop
jbe
ja
ins
daa
mov
imul
je
loop
adc
adc
mov
jmp
aaa
out
or
loope
lds
test
jmp
sbb
mov
sar
in
and
je
int
sbb
jmp
xor
dec
cmp
inc
je
pop
mov
sub
sbb
(bad)
frstor
adc
mov
adc
mov
mov
jg
in
xchg
pop
mov
jge
cmp
mov
sbb
mov
push
arpl
cld
hlt
jl
in
ss
stos
cli
popa
mov
in
push
popa
mov
mov
cmp
pop
xor
mov
ret
div
in
mov
mov
jmp
adc
(bad)
pushf
mov
test
cli
idiv
imul
mov
retf
lahf
jmp
iret
les
cli
pop
retf
cs
fwait
dec
bswap
push
cmc
push
adc
dec
cmps
imul
push
retf
inc
mov
(bad)
xchg
or
pop
mov
and
inc
xchg
in
test
stos
call
and
in
inc
push
dec
sub
ror
dec
aad
xlat
ins
jmp
daa
shl
mov
add
sub
jne
or
xor
push
int
mov
xchg
lods
add
pop
xor
add
or
out
adc
jmp
inc
out
and
mov
je
dec
mov
idiv
mov
or
shr
fwait
xor
add
xor
mov
ins
xchg
dec
and
fcmovne
imul
jp
xchg
push
cwde
fild
push
cdq
mov
nop
stos
int3
mov
loopne
or
data16
sti
add
loope
loope
test
mov
sbb
cs
call
sti
sub
cli
sbb
mov
pop
jl
jns
shl
pop
cwde
dec
(bad)
cmp
(bad)
into
(bad)
jnp
ins
test
add
push
xchg
call
xor
push
mov
les
mov
or
fistp
add
jp
dec
or
add
and
push
xchg
xchg
fisub
pop
test
lea
stc
xor
fwait
sub
push
es
adc
aad
in
ret
inc
jne
or
mov
xchg
fcmovbe
inc
dec
mov
pop
cld
aam
addr16
xchg
pop
inc
dec
jle
pop
movs
pushf
push
xchg
rcr
xor
iret
es
nop
cmps
jns
outs
fs
pop
icebp
mov
cs
mov
sub
data16
loope
jmp
data16
mov
inc
inc
int3
xchg
lds
loope
mov
rol
xchg
daa
or
xchg
mov
ja
cmps
xor
(bad)
sub
xchg
add
xchg
sbb
pop
out
adc
sub
mov
jge
sub
xor
cmps
ret
shl
pop
int
dec
cld
jle
lds
xchg
stc
add
imul
fbstp
or
pop
add
mov
xchg
loope
repz
movs
lds
lock
inc
mov
cdq
mov
or
sahf
jecxz
and
cwde
push
ins
out
clc
stos
sbb
pusha
add
out
lods
mov
xchg
std
iret
mov
in
fwait
mov
push
add
pop
cmps
call
es
pop
cmp
je
aaa
out
shl
mov
sbb
(bad)
cmps
jb
das
cli
scas
sar
daa
je
ror
fistp
inc
retf
jge
xchg
xor
imul
xor
add
call
mov
mov
adc
mov
scas
xchg
inc
push
cdq
sub
mov
mov
push
cmp
not
push
scas
pop
jmp
jmp
pop
imul
push
adc
mov
pop
(bad)
out
cmp
mov
ret
popf
mov
cli
push
stc
cmp
dec
imul
in
pop
mov
hlt
sbb
enter
dec
mov
and
dec
mov
sub
sub
pop
sbb
pop
xor
mov
mov
mov
test
aas
cmp
sub
mov
dec
mov
add
call
sub
retf
mov
xchg
cmc
xchg
add
push
jl
not
aas
(bad)
retf
jmp
mov
jne
sub
inc
mov
out
in
xor
test
pop
sub
xchg
sahf
ret
scas
cmps
or
cld
adc
idiv
xchg
xor
nop
data16
ret
(bad)
mov
or
mov
movs
cmps
inc
test
data16
cmp
test
cmp
(bad)
into
inc
sub
sub
mov
hlt
daa
cmp
dec
push
sbb
mov
jno
mov
and
xor
loop
fld
or
retf
or
bswap
imul
xchg
icebp
xchg
inc
rol
hlt
pop
popa
fs
sub
push
sub
sti
adc
push
xchg
and
add
retf
xchg
jmp
outs
into
sub
or
jnp
nop
fs
enter
mov
or
push
aad
in
(bad)
jb
sbb
sub
sbb
mov
in
push
add
dec
cmp
call
pop
call
lahf
xlat
push
push
push
mov
mov
mov
and
pop
mov
test
jmp
popf
rcr
sbb
shr
mov
mov
fiadd
mov
bound
push
push
inc
popf
gs
iret
sahf
ja
dec
push
push
icebp
(bad)
iret
sti
(bad)
std
fsub
je
leave
or
int
(bad)
sbb
gs
call
jne
push
cmp
fbld
sti
mov
adc
xchg
mov
in
hlt
cmp
stos
inc
(bad)
fstp
clc
cs
retf
popa
iret
lods
aad
xchg
sbb
std
div
adc
push
dec
sub
xchg
adc
lock
fstp
test
xchg
pop
repnz
xchg
lds
in
cmp
push
bound
sbb
test
cmps
inc
int
cmps
in
fnstcw
xor
nop
pop
or
retf
mul
sbb
jl
mov
in
aad
stos
mov
vaddsubpd
pop
test
mov
jb
fbstp
je
div
push
pusha
not
mov
repnz
cmp
ins
and
push
xchg
jmp
sub
mov
je
sbb
xchg
movaps
xchg
lods
sbb
mov
mov
inc
xor
lea
adc
imul
xor
outs
dec
mov
jb
adc
push
sbb
std
inc
gs
cmp
push
loopne
int3
scas
xor
push
pop
add
mov
ret
lock
shl
out
mov
(bad)
push
mov
iret
inc
lock
add
(bad)
repnz
clc
or
pop
outs
test
stc
in
mov
jmp
ja
pop
push
lahf
xchg
xchg
jae
sbb
jae
inc
push
inc
sbb
(bad)
pop
scas
pop
mov
shl
cs
out
lods
adc
rcr
cdq
movs
adc
or
stos
sbb
ss
jl
test
daa
inc
call
popa
and
jmp
addr16
retf
xor
jmp
mov
in
imul
jmp
cld
add
jns
sub
jp
xor
push
dec
retf
retf
mov
pushf
stos
wrmsr
lds
and
cdq
jbe
dec
in
inc
sbb
and
arpl
cmp
sbb
cmp
daa
or
dec
mov
sub
daa
mov
mov
das
cld
in
pop
jne
(bad)
cmp
loope
mov
sti
movs
scas
cmp
out
test
cmp
xchg
stos
xchg
dec
dec
out
(bad)
and
push
sahf
call
mov
mov
jno
add
shr
pop
sbb
xchg
dec
dec
pop
mov
mov
mov
pop
iret
(bad)
sub
add
popa
ror
(bad)
lock
loope
and
aas
cmps
cld
mov
adc
xor
mov
mov
and
pop
rol
xchg
push
xchg
outs
push
sub
inc
rcl
movntq
xor
movs
out
mov
adc
pop
mov
cli
jl
icebp
ret
jmp
mov
movs
pop
dec
sub
inc
rcr
pop
xor
inc
and
or
jge
pop
inc
mov
add
icebp
push
(bad)
rcl
enter
mov
xor
(bad)
sbb
mov
jp
pop
ins
vmovddup
mov
ss
and
or
sbb
fwait
push
xor
mov
xchg
out
push
sbb
sbb
aas
push
mov
mov
inc
add
call
and
std
push
push
fstp
leave
inc
fs
(bad)
icebp
jle
cmps
mov
sahf
cdq
in
pop
scas
rcl
icebp
sti
sahf
fld
adc
push
(bad)
add
cmc
stos
js
inc
xchg
jno
outs
dec
or
cvtps2pi
mov
pop
add
cmp
or
fidiv
or
or
lods
mov
stos
dec
pop
test
sti
push
push
add
shl
or
fnsave
aaa
lods
push
mov
dec
push
xor
adc
lods
retf
sbb
sub
lea
mov
xchg
xchg
jb
ret
pop
cmp
xor
fst
clc
xor
pop
fimul
rol
pop
cdq
jno
add
js
dec
pop
push
in
imul
jge
dec
mov
out
loope
inc
adc
ins
jecxz
movs
enter
push
(bad)
push
xchg
out
mov
sbb
addr16
mov
aas
adc
es
jns
pop
sub
aaa
and
xlat
aaa
je
int3
push
pop
xor
fwait
into
or
adc
inc
ins
jbe
not
pop
jmp
clc
stos
outs
push
push
fisubr
pop
adc
jo
rcpps
and
cmp
inc
add
pop
(bad)
xor
pop
cmp
cli
mul
add
ret
and
pop
or
lahf
ss
ins
cmp
xor
icebp
sbb
nop
pop
cwde
ja
outs
int
pop
out
mov
arpl
not
sub
jp
sub
jmp
test
shr
hlt
xchg
dec
shr
hlt
in
aas
pop
sub
sbb
into
sbb
and
cmps
jecxz
add
mov
not
(bad)
xor
xchg
push
pop
lods
sub
aam
jl
test
jae
fld
rcl
in
jo
fdivr
push
rcr
or
inc
jg
movs
sub
in
ror
sbb
xor
sub
retf
stc
and
sub
jno
movs
test
xor
cmc
loope
jl
ins
scas
shr
inc
fbstp
pop
mov
in
(bad)
and
add
inc
stc
ins
jecxz
mov
jae
rol
dec
ror
or
bound
add
cmps
enter
mov
adc
xchg
adc
xor
out
mov
xchg
jae
xor
jl
aam
shl
sub
test
aas
push
mov
les
pop
fwait
stc
jg
cmps
dec
push
enter
inc
arpl
sub
je
xchg
das
inc
loop
sub
in
jbe
sbb
movs
out
adc
add
pop
in
mov
and
sbb
xor
dec
inc
fcmove
stos
mov
inc
cmp
pmullw
inc
push
lods
inc
cmp
test
inc
(bad)
pop
cmovns
ss
sahf
call
mov
xchg
arpl
ins
add
popf
jg
push
inc
mov
push
adc
xchg
arpl
daa
in
sbb
sbb
lea
inc
cwde
test
mov
popf
jmp
jo
sub
in
add
shr
add
inc
sti
lods
jecxz
mov
inc
dec
xchg
xchg
in
or
es
cdq
cmp
xchg
ins
into
(bad)
mov
push
(bad)
les
fiadd
rep
push
movs
xor
dec
(bad)
call
cmp
sub
xor
cmp
ss
jno
sub
sbb
enter
cmp
ja
mov
popa
jae
push
cld
in
hlt
xor
outs
mov
call
in
cwde
sbb
push
mov
xchg
test
in
inc
and
cmp
popa
data16
daa
retf
push
iret
xor
mov
mov
mov
out
cdq
gs
or
fadd
cli
lahf
retf
frstor
mov
icebp
push
fmul
lods
mov
pushf
fistp
or
and
cmps
mul
arpl
or
inc
sub
and
jbe
jl
inc
or
iret
mov
adc
xchg
mov
lds
shl
mov
mov
pop
adc
jle
sub
mov
mov
sub
hlt
pop
cmp
cmp
aaa
shl
loope
fiadd
lea
lahf
inc
push
test
mov
std
push
pop
xchg
call
cdq
inc
je
jmp
outs
sti
sbb
pop
imul
xchg
setb
fistp
fmul
sub
inc
ja
stc
sahf
dec
sub
sar
pop
stos
jmp
mov
mov
mov
test
js
shl
mov
je
jne
sbb
jmp
or
aad
(bad)
int3
sub
pop
(bad)
jmp
mov
mov
movs
cmps
rol
(bad)
pop
sar
jmp
lods
lock
rcr
jp
inc
retf
push
rol
xor
movs
stc
popa
fdiv
add
ficom
js
test
adc
sub
xchg
arpl
and
fiadd
sub
sub
add
ja
lock
cmp
push
mov
xor
sti
or
xchg
push
shl
dec
mov
inc
mov
loope
mov
jp
pop
ror
gs
mov
arpl
mov
push
dec
ins
mov
rcl
push
jl
and
jp
mov
rcl
sub
and
addr16
je
inc
sar
clc
fmulp
iret
inc
inc
stos
movs
push
mov
mov
iret
mov
icebp
fwait
scas
and
sbb
cld
inc
xchg
daa
test
popa
loope
sti
lea
fcmove
push
mov
ja
mov
loope
xor
and
push
jae
xchg
das
leave
xor
fwait
and
in
addr16
jb
ss
inc
push
inc
sahf
das
jb
cli
push
inc
or
jnp
push
out
call
inc
xor
mov
xor
retf
rcl
dec
std
mov
aas
stos
lea
and
(bad)
adc
push
retf
push
mov
rcr
mov
pop
mov
rol
imul
xor
add
cmps
push
adc
xor
shr
lock
sbb
mov
sub
mov
or
add
jecxz
retf
sub
gs
pushf
sub
pop
call
(bad)
xchg
adc
sti
ret
cmp
xchg
les
add
pop
cs
inc
or
mov
or
fld
adc
aam
dec
test
icebp
xor
mov
cmp
fnsave
inc
jl
dec
and
ror
xor
sub
daa
and
loopne
shl
mov
dec
add
aam
jmp
pop
cld
out
push
mov
mov
(bad)
and
std
xor
aam
mov
fdiv
push
int3
sahf
sub
inc
push
sub
sub
loop
scas
xchg
xor
int
jns
pop
imul
mov
pop
stos
cmc
jmp
jbe
rcr
outs
adc
lahf
cli
gs
and
push
xor
push
mov
addr16
or
adc
cmc
and
lea
jp
jae
movs
int
pop
fistp
dec
loop
cmc
xchg
mov
push
cld
mov
add
les
adc
lea
test
jg
xchg
ss
mov
inc
mov
je
jns
jns
out
daa
inc
adc
daa
sti
call
adc
pop
push
loopne
or
retf
std
lea
aas
add
push
retf
movs
inc
repz
push
clc
cmp
gs
push
int3
xchg
xchg
pop
dec
(bad)
and
add
sub
addr16
gs
aaa
pop
retf
push
popf
lods
jne
div
arpl
lock
aas
xchg
cmp
sub
mov
pop
dec
mov
dec
xchg
imul
shl
movs
inc
aam
mov
arpl
lock
mov
adc
cmps
mov
cmp
push
sbb
sbb
and
loope
retf
jb
aam
mov
or
pop
pop
push
xchg
sub
sub
sub
fdiv
dec
mov
into
sbb
pop
add
xchg
repz
dec
shr
sub
xchg
lods
xor
shl
(bad)
imul
aaa
(bad)
mov
fbstp
nop
outs
loop
pop
fdivp
into
push
mov
in
mov
mov
dec
mov
mov
cmc
pop
push
xchg
hlt
inc
jnp
retf
mov
popf
sbb
add
mov
fstp
sub
pusha
into
lock
jnp
xchg
or
jle
aas
shl
daa
inc
push
sub
sahf
sbb
mov
int3
scas
push
(bad)
cmps
mov
cwde
adc
(bad)
(bad)
mov
mov
movs
fidivr
cs
mov
xor
or
cli
jmp
dec
popf
ror
cmps
movs
sahf
pop
std
(bad)
cmp
fs
pop
xchg
clc
test
std
imul
cmp
retfw
dec
mov
fnsave
mov
js
fst
mov
add
jno
mov
(bad)
jp
mov
xchg
push
and
xor
loope
xchg
into
in
push
bound
inc
test
jge
xor
imul
xchg
sub
sti
(bad)
cmp
lods
lock
dec
dec
dec
dec
(bad)
lods
dec
gs
icebp
cwde
shl
adc
cmp
jnp
cmp
(bad)
dec
adc
xor
addr16
lods
dec
inc
dec
add
pop
stos
popa
ror
add
fwait
stc
lods
push
and
dec
in
xchg
push
mov
push
push
sub
mov
outs
push
aam
pop
sbb
and
pop
retf
ins
jle
pop
mov
test
add
call
jmp
enter
and
jecxz
cmp
or
call
jo
xor
push
lods
sbb
jmp
or
test
sub
or
aam
and
cdq
fst
fwait
jne
inc
push
or
jne
enter
pusha
scas
fistp
mov
cmp
pop
(bad)
pop
cmp
or
cs
push
cmp
mov
pop
mov
pop
adc
icebp
jp
inc
inc
ret
call
inc
fdivr
sub
and
fisubr
pop
dec
(bad)
cmps
fsubrp
sub
or
or
fdivr
mov
push
test
push
push
gs
std
push
adc
fprem1
popf
push
aaa
jle
inc
or
mov
(bad)
imul
fmul
iret
rol
jo
mov
mov
pop
push
inc
or
jecxz
push
call
push
mov
(bad)
loop
call
mov
in
pop
jg
loopne
cwde
or
in
ds
ret
push
mov
pop
cmp
fsubr
push
pop
es
adc
push
es
mov
adc
test
adc
mov
push
jno
or
xchg
test
arpl
icebp
pop
outs
lahf
idiv
cmp
jnp
cmps
mov
push
dec
cmp
push
cmp
or
hlt
xor
mov
retfw
mov
pusha
add
and
mov
or
dec
bound
add
sbb
cmp
mov
(bad)
fs
in
call
add
xor
addr16
pop
sahf
ds
jecxz
and
icebp
jo
mov
sahf
inc
mov
xchg
retf
or
daa
adc
sub
xor
xchg
mov
add
out
arpl
out
pop
fwait
add
shl
mov
loop
je
fistp
xchg
cmp
pop
add
loop
add
and
fidivr
outs
cmp
cdq
ins
lahf
sti
mov
mov
inc
shl
ror
adc
add
sbb
mov
cwde
lahf
add
jl
cmps
jb
mov
mov
ss
aam
fnstcw
sbb
push
call
pop
pop
ss
repnz
jl
mov
or
adc
mov
aas
jmp
adc
ins
sbb
xchg
hlt
and
repnz
sub
lds
and
cld
and
xchg
adc
push
adc
aaa
jns
and
out
and
(bad)
dec
std
cmp
outs
mov
jl
inc
jmp
push
pop
xchg
call
pop
mov
mov
xchg
or
pop
test
not
stos
adc
xlat
sti
out
jnp
rep
cld
fcmovu
in
jno
and
shl
dec
je
aam
and
sbb
pop
movs
push
nop
jle
lods
aad
je
add
je
mov
push
xor
dec
sub
pop
in
pop
mov
lea
push
jmp
out
retf
(bad)
in
dec
mov
add
or
dec
inc
ja
test
sahf
test
mov
xchg
(bad)
fsubr
jbe
imul
daa
lods
mov
jmp
and
jae
sbb
test
shl
shl
fbstp
inc
test
cmp
add
or
data16
frstor
and
das
pushf
mov
test
and
pop
jg
and
dec
push
dec
inc
mov
loop
(bad)
sub
lock
pushf
out
inc
fmul
push
mov
jae
jnp
jp
dec
shl
mov
(bad)
(bad)
jb
mov
gs
dec
xchg
jecxz
repz
test
test
fwait
imul
pushf
jbe
xor
cwde
enter
cmp
inc
xchg
sbb
scas
adc
and
call
lock
retf
xchg
adc
lods
aas
shl
add
mov
or
into
and
cmps
xchg
mov
sub
ret
pushf
ret
mov
(bad)
push
(bad)
scas
adc
pop
inc
mov
ret
or
cmps
push
(bad)
stc
(bad)
pop
lea
stc
or
in
and
sbb
lods
fldenv
mov
jg
lods
inc
(bad)
lahf
dec
popa
jle
addr16
fldcw
cld
in
int
aad
imul
fwait
psllw
sub
jmp
rcl
dec
or
mov
lea
es
mov
dec
ret
pop
jmp
add
shl
cmp
icebp
iret
push
xchg
mov
int3
cmc
jge
loope
jecxz
mov
ror
xor
add
mov
and
push
out
inc
adc
nop
mov
repnz
mov
movs
pusha
std
fcmovbe
mov
pop
pushf
stos
shl
jne
push
xor
cmp
popa
inc
jp
shl
cmps
jne
inc
dec
xchg
das
lods
xor
sbb
xlat
pop
daa
lahf
ds
scas
add
lods
jl
or
mov
and
jbe
pop
cli
iret
push
sub
xchg
mov
fist
dec
push
(bad)
loop
into
fcomp
leave
mov
pop
in
fs
(bad)
retf
mov
cmps
push
and
pop
xor
adc
daa
sbb
pop
std
shl
sti
(bad)
mov
daa
and
std
aad
add
jmp
mov
mov
addr16
and
ss
and
jge
sub
inc
call
mov
cmp
add
outs
jo
add
call
sbb
xchg
test
pop
fist
not
lahf
cmp
out
shl
cmps
test
sub
pop
add
repz
xchg
adc
mov
cmp
push
mov
push
cmp
sub
iret
stos
xor
stc
dec
in
(bad)
jmp
fnsave
inc
jl
or
adc
mov
pop
(bad)
mov
idiv
mov
cmp
aaa
loope
test
push
ret
and
mov
shr
out
ficom
call
add
in
mov
out
xchg
xchg
fdiv
mov
dec
ds
fiadd
inc
ja
fwait
inc
fs
push
outs
add
int
xlat
outs
push
leave
lods
mov
js
lea
outs
jno
push
push
lds
cmp
rol
in
pop
sar
jmp
outs
mov
mov
jecxz
add
icebp
pop
xchg
push
dec
pop
ret
xchg
push
and
ins
sbb
sub
fidivr
mov
aas
into
jg
movs
dec
in
pop
adc
push
int
and
aad
ds
dec
dec
xor
xchg
(bad)
out
fadd
push
sub
mov
imul
(bad)
jp
and
cs
cmps
and
repnz
jb
frstor
inc
(bad)
mov
test
repz
and
jns
inc
jae
mov
mov
pop
xchg
add
jg
popa
call
push
fld
mov
adc
mov
je
xchg
xlat
sbb
leave
xor
aam
je
in
shl
ficom
sub
test
bound
jns
mov
cli
jecxz
mov
inc
aad
icebp
ror
push
mov
les
fisubr
les
cmp
and
aad
cmp
aam
and
mov
jmp
shl
mov
sbb
jne
cmp
lea
dec
xchg
shr
mov
xchg
adc
clc
mov
jmp
jge
imul
ror
inc
arpl
movs
mov
mov
and
jmp
push
(bad)
cmp
pusha
imul
cmp
clc
mov
mov
pop
xor
fcmovbe
call
push
ins
loop
ins
je
in
jnp
(bad)
ins
mov
sbb
xchg
loope
dec
or
arpl
dec
cld
clc
pop
xor
mov
jle
push
adc
mov
pusha
mov
sbb
xor
ss
push
in
nop
fstp
xchg
fidiv
pop
add
mov
ja
mov
dec
nop
outs
in
xor
aad
aaa
mov
adc
inc
pop
in
(bad)
push
(bad)
fbld
dec
jl
fsubr
adc
js
pop
cmp
pusha
rol
mov
fsub
repz
push
ja
sub
mov
sahf
mov
cmp
loop
js
ret
dec
icebp
mov
add
pop
das
(bad)
ficomp
jg
cmp
movs
adc
sub
add
shl
mov
mov
adc
cmp
pop
or
stos
lods
pop
call
scas
js
enter
mov
aam
(bad)
rcl
retf
js
sub
mov
out
outs
xor
jb
cmps
aam
dec
hlt
add
vmload
mov
fdiv
vrcpss
push
aas
iret
and
stc
cmp
or
xchg
xchg
mov
dec
cmp
or
mov
jne
dec
dec
outs
adc
dec
and
call
push
pop
or
sbb
daa
mov
dec
ja
cmp
shl
xlat
jmp
inc
sbb
fs
call
sub
in
stc
stos
jp
out
scas
sbb
pop
sub
call
fsincos
test
jge
ret
leave
mov
aam
outs
mov
jne
mov
adc
xchg
add
push
movs
mov
sbb
jle
retf
sbb
cmp
sbb
mov
inc
xor
mov
es
js
push
sbb
arpl
add
add
fcomp
loop
cs
mov
dec
inc
sbb
adc
retf
cdq
and
push
ins
in
push
mov
xchg
fisttp
xchg
daa
pusha
mov
(bad)
mov
push
stos
jle
ret
dec
mov
mov
int
arpl
jmp
cmp
sub
jmp
adc
adc
cmp
pop
bnd
fcmovbe
(bad)
imul
pop
and
mov
fiadd
jle
pop
cmp
cmp
mov
cmp
xchg
or
fistp
mov
ins
push
mov
imul
mov
pop
pop
add
pop
loopne
and
sbb
ret
int3
pop
jne
fst
scas
fsubr
sub
push
sahf
mov
fsubr
and
pop
sub
add
test
push
hlt
xor
xchg
ds
outs
sbb
mov
hlt
jmp
jg
jmp
push
aam
mov
mov
jae
push
cmps
xchg
cmps
jo
(bad)
mov
sahf
cmps
add
jg
fcomp
jne
cs
movlps
xchg
gs
xchg
iret
xor
inc
push
dec
cmp
add
jecxz
rol
xor
mov
dec
inc
sbb
shr
add
mov
retf
push
and
int3
frstor
pop
cs
iret
add
add
xchg
xchg
ss
into
out
push
lds
mov
sub
push
repnz
sbb
mov
or
mov
jg
sbb
rol
dec
retf
mov
jae
cmp
rcl
jp
mov
rcl
(bad)
sbb
or
dec
addr16
xor
push
and
je
ja
test
and
cs
or
mov
adc
cmc
rcl
or
pop
pushf
loopne
sar
fs
je
cmp
das
shl
mov
push
dec
xor
mov
xchg
jecxz
dec
add
(bad)
test
sbb
stos
mov
jmp
or
ss
xchg
xor
xor
arpl
jecxz
pop
jecxz
imul
in
ret
ja
sbb
push
or
sbb
dec
push
push
xchg
fcmovbe
dec
inc
xchg
(bad)
inc
cmps
retf
sbb
or
repnz
mov
adc
in
sub
or
jle
pop
in
pop
cmp
loop
gs
xchg
outs
(bad)
gs
fstp
icebp
cld
sti
jo
fwait
push
leave
mov
call
or
int3
push
mov
cmp
or
ins
ss
mov
(bad)
dec
es
in
inc
lods
jle
xor
lods
xor
arpl
jns
fcom
jmp
pop
or
js
sahf
dec
inc
pop
or
xchg
pusha
ss
add
enter
xchg
and
std
and
int
cwde
sub
lods
mov
daa
loopne
test
addr16
std
(bad)
lds
clc
aas
push
adc
scas
leave
or
ja
call
dec
inc
dec
xor
mov
sbb
pop
idiv
repnz
fxch
retf
xor
xchg
and
call
loopne
and
cmp
les
lods
push
or
shl
jmp
loopne
(bad)
xlat
add
or
nop
ins
(bad)
pop
cmp
adc
inc
mov
push
mov
adc
retf
adc
data16
xchg
nop
mov
sbb
lea
jnp
and
mov
les
pop
or
aas
mov
sub
xor
xchg
mov
sub
cmp
and
inc
adc
or
or
js
fdivr
mov
int3
adc
dec
add
push
mov
retf
hlt
xchg
lods
adc
mov
movs
xchg
(bad)
rol
(bad)
rol
sub
inc
test
sbb
int3
jnp
es
pop
movs
cmp
lea
sti
out
add
add
xchg
inc
xchg
lock
push
lods
sar
inc
lahf
js
(bad)
das
test
mov
or
je
mov
sub
dec
jecxz
fcom
(bad)
add
cmp
mov
push
bound
outs
xor
jo
add
lods
mov
add
jl
sub
(bad)
cmp
iret
(bad)
call
push
pop
adc
cmps
xchg
mov
push
mov
gs
rol
sub
inc
mov
mov
mov
punpckhbw
test
into
sbb
xor
and
sub
add
push
jmp
das
xchg
jo
pop
iret
fidiv
shr
js
push
pop
je
call
push
mov
stc
fld
adc
data16
mov
add
test
scas
sbb
adc
xchg
mov
fsub
fs
aas
xor
push
xchg
test
inc
cwde
pop
pop
push
imul
dec
sbb
add
ins
sbb
mov
cmp
xor
rcl
mov
mov
or
or
stos
fidivr
xor
mov
stc
lock
sub
gs
sub
dec
test
mov
dec
mov
xchg
sub
(bad)
out
xchg
rcl
and
xor
xor
call
xor
add
pop
scas
add
pop
cmp
mov
daa
jle
fwait
xor
div
repz
(bad)
scas
loop
outs
stos
cmps
adc
mov
test
aas
cmp
ins
xor
outs
cld
inc
pop
jb
icebp
and
repz
sub
loopne
inc
adc
pop
mov
cmps
push
mov
xchg
out
mov
mov
test
ss
scas
mov
xchg
cmp
adc
(bad)
shr
int3
pusha
inc
js
pop
stc
sub
inc
mov
jbe
add
lods
popa
mov
rol
test
ins
mov
or
dec
js
out
mov
pop
push
pop
and
call
popa
test
fnsave
mov
xchg
and
repz
pop
sub
mov
fxch
out
(bad)
movs
push
mov
sbb
repz
fisub
dec
fcmovu
arpl
push
sub
sub
stos
push
nop
add
dec
jmp
xor
aam
and
int3
aaa
sahf
pop
push
cmp
jae
jbe
mov
jmp
pushf
cdq
out
mov
mov
cmc
mov
adc
imul
push
pushf
adc
(bad)
pop
xchg
sti
out
mov
dec
pop
push
xor
mov
scas
(bad)
dec
icebp
loopne
add
push
or
clc
popf
fistp
xchg
mov
loope
(bad)
add
repnz
hlt
pushf
add
mov
mov
mov
in
stc
stos
int3
lods
stos
jns
ror
mov
(bad)
sbb
test
sub
mov
cli
adc
add
lods
adc
movs
mov
(bad)
xchg
daa
mov
adc
adc
pop
or
and
rol
dec
lea
sub
add
jecxz
and
or
cmp
in
xor
jp
loop
jno
idiv
rcr
aas
nop
push
adc
mov
bound
jecxz
and
push
mov
js
push
int3
jmp
xchg
adc
adc
dec
xchg
mov
test
mov
movs
adc
dec
int3
add
adc
fstp
call
jne
outs
jp
mov
ret
jmp
(bad)
loope
add
iret
fwait
mov
or
pop
in
mov
imul
jno
cmp
stc
js
outs
cmc
and
(bad)
xchg
jmp
xor
adc
inc
sbb
sub
mov
into
pop
adc
jecxz
jo
retf
dec
and
xchg
mov
mov
iret
ret
add
mov
sub
inc
push
(bad)
(bad)
jg
test
mov
mov
(bad)
and
xor
sub
(bad)
enter
test
inc
add
sub
hlt
leave
mov
sub
aad
sbb
sbb
stos
sub
iret
fs
inc
jle
sbb
retf
push
lock
adc
push
and
pop
outs
xor
imul
dec
(bad)
xor
mov
or
push
xor
sbb
mov
pop
rol
add
lea
(bad)
js
mul
loop
mov
pop
push
or
retf
jle
mov
adc
sahf
cs
pop
add
dec
sub
fwait
je
cdq
xchg
scas
call
jp
arpl
movlps
cdq
dec
mov
nop
loopne
cmp
adc
sub
shr
aaa
and
cdq
ins
rol
sbb
or
push
xor
clc
mov
movs
and
cs
adc
mov
push
xchg
jp
gs
push
ror
lds
test
retf
fyl2x
jmp
pop
cmp
pop
xchg
pop
mov
retf
arpl
push
pmulhuw
jmp
ds
sub
fild
or
sub
mov
push
dec
adc
mul
sbb
cmp
sbb
adc
mov
std
inc
dec
or
or
fst
pop
nop
mov
sub
and
mov
leave
inc
push
cmp
ret
mov
ds
gs
cmp
inc
sub
mov
ret
ror
xor
cwde
xchg
out
std
xchg
enter
dec
sub
call
jnp
fistp
imul
call
hlt
scas
les
xchg
shl
call
std
inc
mov
mov
ror
mov
retf
sbb
dec
pop
xchg
sbb
jmp
push
pop
inc
hlt
mov
fwait
mov
sbb
push
push
mov
cmp
clc
stos
fsubr
lock
mov
addr16
lea
push
stc
adc
gs
cmp
cs
js
imul
pop
add
cld
stc
daa
sub
leave
dec
dec
test
push
sub
test
mov
pop
cmp
data16
sar
push
arpl
dec
or
ror
pop
je
push
sub
xchg
cmc
xchg
mov
push
push
adc
cwde
adc
out
aam
inc
pop
movs
loope
adc
mov
out
fst
lods
loopne
adc
dec
xchg
iret
push
or
nop
jo
and
jo
stos
mov
pop
je
loopne
xchg
icebp
sub
xlat
mov
push
cdq
jmp
mov
or
jp
cmp
sar
aaa
sub
jp
pop
test
leave
pop
pop
cmp
ja
xor
fwait
cmps
in
sbb
jno
push
add
jns
aad
(bad)
mov
ret
xlat
aad
sti
xchg
or
out
jmp
xchg
sub
and
xor
aaa
ror
jmp
sub
test
lock
test
cmps
retf
sbb
fadd
dec
mov
sahf
int3
mov
loop
xchg
test
sub
dec
inc
sub
gs
stos
arpl
fsub
imul
cmp
retf
pop
and
cld
jp
cld
jmp
adc
rcr
es
jnp
mov
xlat
and
pop
jo
mov
nop
mov
adc
xor
test
aas
stc
inc
or
aad
std
(bad)
add
sbb
das
or
dec
int3
fnstenv
cmp
mov
cdq
out
test
pop
jl
dec
sbb
add
mov
mov
mov
(bad)
jp
pop
adc
sub
call
pop
fisttp
pop
add
arpl
in
int
lock
retf
das
jno
inc
(bad)
ror
imul
mov
movlps
out
inc
xor
popf
frstor
lods
sbb
repz
pop
(bad)
jnp
fs
mov
sub
dec
stc
ins
cmc
mov
add
pop
add
fcomp
adc
jle
imul
sbb
fcom
sbb
rcl
pop
or
dec
ret
lea
or
test
ss
push
push
dec
sar
or
shr
cmp
jbe
rcr
mov
push
scas
pop
dec
cmp
clc
aaa
sub
dec
xor
scas
push
pusha
lahf
jmp
add
xchg
ja
scas
lahf
mov
jbe
xor
jns
fwait
mov
ror
cs
xchg
jp
ret
cli
loop
push
fnstsw
sub
aam
sbb
dec
push
and
mov
sbb
pop
shr
inc
sbb
fs
fwait
(bad)
adc
jmp
inc
inc
out
mov
aad
aam
xor
adc
jo
scas
inc
iret
daa
outs
cdq
inc
mov
mov
mov
and
cmp
into
les
xchg
adc
mov
daa
lahf
js
clc
movs
lahf
popa
xor
fs
arpl
cmp
stos
push
icebp
inc
pushf
idiv
push
call
sub
push
pop
jg
(bad)
and
jmp
stos
push
fwait
in
cmps
push
aaa
add
mov
cs
mov
pop
fidiv
inc
lahf
adc
pop
mov
pop
push
cmp
addr16
outs
inc
and
xlat
xchg
in
add
or
push
into
daa
pop
pop
ds
ret
test
fsub
push
daa
imul
das
(bad)
scas
repnz
hlt
jmp
sub
rcr
mov
xor
test
clc
add
or
cmps
retf
stos
outs
mov
or
dec
lock
jns
mov
adc
mov
mov
lahf
jmp
out
call
xor
pop
into
cmp
data16
push
xor
jle
and
bound
aad
pop
xor
adc
ss
call
test
addr16
rcl
pop
pop
jge
sbb
fdiv
(bad)
in
jmp
xchg
pusha
push
jp
mov
xor
jns
dec
fisttp
sub
ins
imul
jmp
fcom
mov
cmp
push
leave
sbb
loop
inc
push
inc
mov
sbb
stc
fucom
sub
inc
dec
mov
ins
cmp
push
js
push
mov
in
adc
fdiv
xor
pop
hlt
enter
ds
mov
sbb
nop
or
mov
jns
or
aas
lea
dec
icebp
add
cmp
adc
(bad)
stos
call
pushf
pop
add
push
xor
mov
sbb
out
mov
nop
aaa
push
(bad)
jmp
out
icebp
mov
out
push
mov
jp
dec
jo
adc
push
inc
jo
movs
sub
sbb
icebp
call
(bad)
pop
or
sti
xchg
retf
mov
call
test
ds
cmp
pop
mov
or
adc
add
pop
data16
mov
fist
inc
bound
cwde
jge
jle
and
mov
pop
or
adc
lock
in
rol
push
mov
lea
cmp
movs
pop
mov
nop
ins
sbb
arpl
int
jae
out
out
(bad)
cmp
into
imul
pop
jno
dec
jl
out
inc
and
out
inc
loope
mov
ds
movs
push
cmp
les
stos
adc
mov
cmp
or
sbb
adc
push
xor
mov
icebp
cmp
or
lea
(bad)
out
fdiv
inc
inc
mov
push
cmovae
lods
pop
mov
jbe
xor
dec
mov
mov
std
js
or
mov
sahf
pop
mov
leave
out
out
or
clc
cmps
mov
popf
repz
aad
(bad)
int3
call
add
es
fs
adc
mov
fist
int
aam
shr
mov
bsf
inc
ja
sub
push
jmp
mov
scas
movs
adc
pop
sub
xchg
jecxz
retf
test
mov
mov
pop
clc
fst
jbe
or
adc
jmp
jne
stos
xor
cmp
mov
xchg
aaa
nop
int
xchg
test
adc
ss
mov
adc
sar
push
hlt
div
xor
mov
lea
arpl
mov
and
ins
adc
xchg
jo
push
push
popf
loop
icebp
outs
mov
add
ret
(bad)
icebp
xor
xor
mov
loop
js
dec
xchg
imul
push
mov
test
aad
loope
lods
sub
xchg
sar
ins
mov
jbe
mov
outs
lea
xor
das
dec
test
jecxz
aas
loop
and
ficomp
pusha
fnsave
out
push
fcom
adc
cdq
cmp
je
ja
jle
jg
and
add
into
push
into
stos
(bad)
shl
mov
push
xchg
(bad)
int3
sub
(bad)
in
ja
cdq
movs
leave
lods
push
mov
mov
dec
stos
ss
cdq
add
int3
popf
xor
sbb
rcpps
push
and
and
cmp
popa
dec
cmp
jp
push
pop
int3
or
push
sahf
jle
sbb
ins
movs
repnz
cli
jp
lock
inc
or
xor
sar
push
adc
pushf
push
inc
dec
adc
fcomp
mov
mov
test
clc
js
pop
scas
scas
lods
inc
ins
mov
(bad)
(bad)
(bad)
(bad)
sbb
scas
xor
inc
int3
int3
sbb
fs
pop
sbb
aam
ror
ret
mov
dec
mov
add
add
xlat
xchg
jl
out
sbb
jo
and
jmp
mov
mov
js
pop
stos
inc
pop
not
xchg
and
mov
dec
out
aam
dec
ret
mov
sub
jae
jnp
pop
adc
jnp
push
stos
sub
movq
pop
int
or
stos
xlat
std
stos
fdivr
(bad)
pop
lods
pop
cmps
and
fucomp
pop
pop
or
sbb
call
lahf
je
push
and
adc
add
xchg
jne
add
inc
outs
adc
sbb
sub
inc
ja
pop
jge
adc
in
sub
jp
arpl
out
pop
enter
sbb
jno
addr16
cmps
leave
es
cmps
outs
into
cmp
xor
mov
mov
add
sub
repz
jo
inc
icebp
adc
sbb
dec
xor
adc
(bad)
js
call
ret
mov
dec
adc
dec
push
or
mov
mov
dec
fidivr
(bad)
stos
fimul
in
bnd
xor
loop
test
or
or
xlat
and
rcr
jne
into
push
in
leave
aaa
mov
sti
jmp
and
cmp
cwde
fiadd
pop
loopne
fdivrp
mov
bsr
loop
xor
gs
fs
inc
xchg
xor
pop
call
stc
bound
xor
retf
sbb
jl
xchg
pop
sti
or
ret
adc
or
das
shr
cmp
std
fld
sbb
scas
sub
test
pop
(bad)
loop
ins
inc
mov
fistp
mov
push
pop
ds
mov
and
lods
jg
pop
addr16
push
lahf
outs
mov
cmp
jne
adc
shr
jmp
and
mov
enter
mov
and
xlat
icebp
mov
stos
mov
nop
add
std
div
(bad)
repz
pop
test
stos
jo
lahf
mov
mov
(bad)
aas
lahf
lds
ret
dec
pushf
jl
add
in
std
das
jg
call
test
das
repnz
jle
sub
push
movlhps
jmp
xchg
push
jge
jnp
outs
pop
int
sbb
lods
sbb
lods
or
xchg
inc
lods
dec
imul
in
aas
push
in
cwde
xor
xchg
push
push
test
fwait
xchg
cmp
add
pop
dec
and
imul
add
loop
icebp
imul
leave
fdivrp
inc
mov
loopne
inc
in
add
and
ret
mov
xchg
mov
imul
sub
popf
call
es
into
mov
dec
sub
xor
shl
adc
pop
repz
jmp
jl
push
push
test
shr
push
dec
sbb
out
inc
sbb
add
xchg
jnp
and
or
loop
das
bound
add
xor
push
cli
ficomp
mov
pop
popf
xchg
adc
stos
clc
or
scas
fsubr
pop
gs
dec
add
inc
mov
ins
mov
push
loop
sub
lds
movs
push
mov
or
sub
aaa
mov
scas
sbb
sbb
cmp
imul
add
into
out
das
movs
fimul
bnd
push
xchg
xor
jo
inc
int
popa
(bad)
frstor
inc
sbb
test
xchg
rcl
enter
xchg
(bad)
jmp
jae
js
adc
mov
xchg
stc
xor
je
xchg
cmp
stos
shl
push
mov
aaa
sbb
loop
je
aas
jmp
sub
push
std
loope
add
xchg
movs
dec
or
mov
int
retf
pop
dec
or
cmp
mov
or
test
retf
fsubr
out
scas
dec
shr
(bad)
aaa
sbb
mov
sub
jl
xor
cmp
jnp
rcl
xchg
xchg
xchg
aaa
in
dec
call
jg
mov
out
std
in
push
mov
lods
lea
cs
fnsave
mov
fmul
cmp
icebp
and
adc
cmps
sub
dec
sar
xor
rcl
xor
bound
aas
into
std
push
xor
xor
test
into
out
das
neg
icebp
mov
mov
mov
xchg
iret
pop
ss
cmp
outs
xor
xchg
push
pushf
jp
sbb
add
jmp
mul
test
iret
mov
mov
mov
push
lea
in
popa
mov
in
jns
adc
mov
mov
adc
mov
outs
test
pushf
push
lods
inc
xor
in
push
push
xchg
xlat
shl
sqrtps
xor
cmp
bound
mov
pop
mov
xchg
or
rol
int3
sbb
inc
jo
in
lock
ror
out
inc
xor
retf
add
addr16
xor
and
dec
ds
lock
push
xchg
jbe
frstor
mov
mov
mov
mov
test
stc
leave
test
outs
in
sub
leave
push
mov
xchg
repz
enter
in
pop
sbb
out
loop
cmps
add
lods
cld
push
pop
jo
and
test
pop
outs
cmp
std
pop
sbb
or
and
push
mov
outs
cmp
test
or
fwait
jnp
sahf
dec
(bad)
xchg
out
jbe
push
adc
cld
add
dec
push
aaa
jae
xchg
xor
cmp
sbb
je
shl
dec
test
test
sub
add
xor
and
dec
jl
mov
cmp
ins
dec
imul
cmps
pop
push
jbe
or
retf
adc
pop
es
stos
jge
adc
inc
call
xchg
lahf
push
mov
jmp
xchg
xchg
jne
xchg
outs
repnz
xchg
push
neg
(bad)
(bad)
inc
das
inc
pop
push
test
popa
jecxz
icebp
mov
dec
push
rcr
js
out
pop
mov
xor
lds
xor
pop
das
test
xchg
pop
jns
bound
dec
leave
sar
jb
popf
inc
(bad)
or
cld
(bad)
or
push
xor
cdq
imul
xchg
xor
(bad)
mov
cmps
imul
rol
pop
dec
scas
das
or
jge
xlat
xchg
fwait
sub
jl
test
ret
dec
sub
mov
(bad)
int
retf
add
xchg
dec
push
mov
cmp
bound
repnz
shr
jno
mov
jno
dec
or
cmp
sbb
loop
fiadd
sub
and
pusha
imul
sbb
daa
add
add
test
xchg
ins
inc
pop
mov
sub
dec
or
fld
jb
dec
ins
(bad)
retf
xor
mov
dec
rcr
pop
and
lods
xchg
call
inc
ins
(bad)
pop
cmc
inc
out
leave
adc
scas
scas
adc
cmp
sar
sbb
imul
xchg
js
pop
icebp
inc
push
lods
xchg
xchg
jge
nop
jns
pushf
ins
mov
fisub
out
div
or
mov
aas
mov
mov
push
xchg
push
aas
cmps
sub
mov
gs
enter
pop
mov
ret
mov
sub
jnp
mov
push
xchg
jg
loop
sub
pop
data16
pop
push
mov
stos
sbb
push
pop
imul
and
dec
jp
lods
jp
dec
rol
jmp
(bad)
pop
movs
pop
cmp
mov
inc
add
ror
idiv
mov
mov
push
push
fnstcw
pop
icebp
cwde
retf
fwait
lds
lahf
jnp
gs
or
inc
hlt
retf
mov
pop
test
and
lahf
ins
sub
jae
cmc
enter
sub
fwait
xor
add
rcl
dec
shl
fstp
or
int3
mov
rol
push
or
leave
add
cmp
cmp
jmp
mov
xor
dec
cwde
repnz
mov
xor
sbb
jp
push
test
pop
push
lods
jo
test
pop
inc
jmp
and
push
ins
in
retf
cmp
jne
ror
rcr
jbe
hlt
and
push
enter
dec
in
movs
jae
pop
cmp
inc
test
test
int
ds
jl
xchg
in
(bad)
xor
mov
pop
xor
xor
mov
and
mov
or
cmp
or
dec
pop
mov
pop
add
lods
pushf
leave
adc
jnp
ret
mov
repz
rcr
sbb
mov
call
xor
call
test
fdiv
or
pop
dec
out
cmp
lea
(bad)
cmps
mov
mov
mov
pop
repnz
adc
add
mov
xchg
rol
sub
pop
mov
sub
xchg
js
imul
cmp
(bad)
inc
jmp
cdq
out
add
mov
ret
adc
inc
adc
jno
dec
popf
jle
ja
js
sub
inc
arpl
ins
sbb
inc
pop
into
mov
mov
mov
or
jmp
jle
fcom
fimul
xor
push
mov
dec
add
xchg
cmp
cli
mov
(bad)
xor
jmp
pop
popf
in
sahf
inc
dec
inc
stos
sub
cwde
jbe
ins
(bad)
imul
pop
jmp
(bad)
cmps
es
test
pop
pusha
sbb
push
pop
jmp
xor
jmp
sbb
movs
mov
mov
push
fcomp
rcl
aam
adc
jns
push
in
adc
fs
(bad)
dec
enter
or
not
xchg
adc
mov
imul
pop
jle
pop
mov
outs
pop
dec
aaa
jmp
sub
out
push
inc
lods
leave
push
(bad)
imul
js
inc
xchg
les
jo
sahf
dec
pop
adc
add
adc
inc
es
add
push
mov
rol
rol
adc
jb
push
add
mov
mov
in
retf
cli
movs
adc
cli
mov
inc
je
pop
mov
mov
fs
push
enter
add
aaa
mov
imul
std
sbb
out
das
sub
push
dec
das
adc
iret
dec
ja
sbb
cdq
mov
xlat
mov
ins
popf
inc
shl
out
push
sar
daa
mov
adc
xor
cmp
cmps
arpl
mov
das
inc
xor
ja
ss
and
out
or
push
fs
cli
adc
fst
xadd
push
shr
jmp
fst
(bad)
mov
dec
dec
mul
(bad)
jae
adc
sub
jecxz
outs
inc
das
push
fwait
mov
es
cmp
mov
xchg
xor
fld
adc
es
movs
ss
ins
mov
push
jns
xchg
push
out
mov
ret
stc
sub
add
mov
mov
sti
sbb
push
ds
cmp
sub
pop
sbb
add
mov
mov
cmp
xchg
pop
mov
sub
xor
cmova
sbb
and
xchg
loopne
lods
scas
xchg
shl
mov
adc
ret
pushf
mov
imul
out
pusha
dec
xchg
popa
ss
loop
dec
test
pop
lock
adc
adc
xchg
mov
ror
xor
xchg
cwde
pop
cmp
xor
lods
cmps
icebp
push
shl
sbb
pushf
shl
(bad)
add
push
sub
sub
mov
fcmovu
mov
hlt
stos
shl
xlat
xor
inc
test
pop
mov
dec
add
jo
push
ret
add
dec
pop
(bad)
jbe
les
cmp
xor
aas
repz
xor
rcr
adc
jns
mov
(bad)
hlt
mov
aas
and
adc
sbb
js
push
imul
push
xchg
loopne
std
cdq
mov
stos
xor
je
inc
jecxz
mov
mov
imul
mov
stos
mov
push
call
mov
stos
xor
ja
daa
xor
(bad)
shr
mov
mov
jge
sbb
call
fist
xor
mov
mov
push
push
jg
mov
lods
aas
and
pop
sbb
xchg
div
cmps
dec
adc
mov
xor
sub
cld
ins
clc
push
addr16
dec
dec
repz
cli
sub
pop
and
jo
(bad)
jp
fild
adc
and
mov
fcmovnbe
in
inc
mov
inc
xchg
fisubr
rcl
(bad)
and
jb
inc
je
leave
stc
inc
or
lahf
sub
hlt
cwd
mov
dec
mov
or
push
cmc
xchg
cmp
add
dec
sub
mov
test
je
mov
inc
mov
cmp
add
add
and
in
and
jp
cmp
jbe
add
or
pop
std
js
in
inc
pop
push
outs
inc
xchg
nop
cmp
cmps
cmp
out
dec
jns
or
sub
inc
icebp
jne
rcr
retf
loopne
mov
daa
xchg
push
push
push
cdq
(bad)
stos
push
int
adc
fidivr
pop
jmp
shr
and
xchg
mov
push
mov
sahf
add
(bad)
iret
push
cli
ret
lock
inc
test
dec
jnp
dec
cmp
add
sub
imul
(bad)
aas
fadd
call
dec
sub
call
sbb
and
jg
jo
loop
adc
cmc
arpl
hlt
inc
sub
sub
fild
inc
je
fsubrp
push
dec
data16
jle
sahf
cmp
aam
or
leave
loopne
(bad)
movs
sub
jae
in
ret
push
pushf
shl
imul
fwait
xchg
aad
cmps
(bad)
out
stos
xlat
or
and
cmp
dec
aaa
xor
push
sub
add
adc
push
outs
(bad)
fnstcw
or
xlat
(bad)
clc
mov
inc
lods
sar
leave
mov
jle
sbb
sar
ins
imul
aam
int
aas
lods
push
mov
jno
mul
jb
xor
adc
sub
(bad)
mov
mov
adc
aam
mov
cmp
icebp
mov
test
lods
mov
push
fbld
sub
xchg
jnp
jnp
jge
dec
lods
stc
pop
adc
ss
lods
into
pop
xor
out
jns
dec
push
loope
xchg
fwait
dec
dec
pop
je
pop
xor
and
aam
jle
pop
jmp
dec
mov
outs
and
cmps
cld
rcr
sbb
xchg
sbb
lea
add
out
pop
jb
loop
jmp
(bad)
in
mov
mov
and
cmp
out
inc
rcl
cmps
dec
out
inc
cmp
add
dec
pop
neg
fisub
stos
mov
xor
cmps
pop
aam
sbb
add
mov
xor
pop
(bad)
xor
cli
fcom
adc
inc
adc
jg
out
fsubr
ror
cdq
dec
mov
push
pop
add
adc
adc
inc
lock
test
and
jae
mul
xlat
aas
out
test
mov
push
push
adc
sub
mov
out
xchg
push
adc
jg
movs
ret
dec
ror
ret
setb
sub
jns
jmp
xchg
aaa
bound
inc
push
dec
les
xchg
test
xchg
xor
sub
in
push
xchg
fnstcw
loopne
mov
sbb
mov
out
movs
push
mov
imul
mov
or
push
mov
jae
mov
and
imul
jmp
popf
in
(bad)
push
inc
cmp
push
jb
sub
mov
mov
loope
xchg
and
and
jmp
mov
mov
jo
cmp
push
add
pop
sahf
in
xchg
push
mov
dec
jnp
push
xchg
inc
ret
call
mov
mov
enter
adc
out
clc
xor
jns
and
inc
push
mov
sar
mov
jge
dec
jmp
clc
daa
cmps
jo
test
sbb
je
call
lock
imul
test
leave
inc
jge
mov
dec
push
inc
adc
cmp
in
lods
sub
add
or
ja
cmp
xchg
fwait
int3
je
sbb
(bad)
xor
lock
add
pop
adc
imul
scas
fisubr
data16
mov
mov
into
(bad)
(bad)
cmp
xor
repz
(bad)
mov
xor
xchg
mov
fsubp
xchg
cli
(bad)
xor
adc
jbe
xchg
popa
je
data16
iret
dec
lods
mov
mov
mov
mov
lods
pop
mov
int
sub
adc
test
inc
js
push
push
rol
ffreep
and
and
sbb
add
or
inc
cs
push
add
test
dec
pushf
push
and
push
es
sbb
popf
dec
frstor
sbb
cmp
mov
push
push
mov
cmp
add
int
jae
repnz
lahf
std
frstor
bound
iret
movs
push
jl
and
jge
xchg
sbb
cmp
loop
mov
add
inc
push
scas
mov
and
outs
movs
ins
sti
movs
mov
bound
ret
add
jle
mov
jo
loop
shr
fmul
lock
mov
sub
ins
mov
pusha
or
push
ss
add
sbb
std
jle
imul
mov
idiv
imul
push
rcl
fadd
sbb
(bad)
mov
out
test
cmc
inc
hlt
addr16
shl
setg
fadd
pop
add
mov
int3
adc
push
lock
jmp
xchg
fucom
ins
adc
or
jo
or
ja
xchg
(bad)
in
stos
test
and
repz
mov
mov
cmp
out
jne
or
icebp
movs
xlat
shr
out
xchg
gs
xor
push
std
inc
dec
shl
movs
sbb
jge
add
mov
div
out
jg
stos
cmps
std
(bad)
aaa
fwait
adc
dec
sub
fs
clc
ins
jb
mov
xor
(bad)
call
mov
xor
into
add
jmp
sti
in
shl
aaa
xchg
jae
fs
std
adc
fsubrp
pop
cli
jb
xor
imul
sub
cmps
fbld
mov
inc
daa
(bad)
jge
inc
jp
cmp
pop
fcom
pop
iret
rcr
mov
sahf
jb
mov
jg
inc
sub
push
pop
inc
(bad)
scas
pop
nop
jmp
cmps
xchg
add
aad
repz
xchg
cs
mov
dec
or
in
xchg
clc
lods
outs
lahf
mov
mov
ret
test
or
dec
adc
fs
dec
movs
ss
push
cmp
or
xor
(bad)
mov
pop
jmp
push
pop
pop
adc
push
gs
outs
inc
mov
mov
(bad)
pop
popf
sbb
mov
daa
arpl
xor
mov
cmps
cmps
or
or
jb
or
push
jmp
lods
arpl
mov
mov
sar
stc
retf
add
lock
nop
adc
jle
add
mov
push
push
sbb
rol
movs
xor
sub
mov
fisubr
pusha
aas
ss
cmp
mov
fstp
cld
cs
and
(bad)
lods
dec
cmp
xchg
xlat
scas
cmp
xor
pop
jg
out
jg
fld
(bad)
pop
into
movs
daa
mov
fnstenv
adc
jae
pop
pop
ret
jle
imul
jo
add
adc
and
sbb
stc
jmp
mov
aaa
mov
xor
push
into
mov
pop
ret
test
cs
shl
cmps
aam
clc
or
and
loop
in
dec
not
adc
imul
fwait
push
outs
daa
dec
lods
retf
dec
neg
(bad)
idiv
cli
jnp
cwde
mov
xchg
test
ins
mov
xor
cmp
xor
pop
and
adc
mov
xor
shl
mov
pop
je
or
lea
fimul
push
xchg
or
push
daa
scas
inc
sbb
xor
cmp
das
lods
cmps
outs
test
dec
ja
fldcw
mov
mov
dec
and
(bad)
sahf
rcl
scas
(bad)
(bad)
addr16
cdq
out
cs
xchg
inc
sti
imul
add
mov
xor
jno
cmp
add
das
loope
rol
sub
mul
xchg
push
sbb
jns
xor
adc
stos
xor
dec
mov
nop
adc
xor
js
push
movs
cmps
cmps
into
adc
(bad)
test
adc
jmp
inc
or
rol
not
loop
test
and
ret
loope
rol
fnstsw
jp
mov
jb
inc
fidiv
and
retf
in
or
inc
fwait
in
shr
sti
jmp
jle
jae
cmp
jmp
jbe
sub
jmp
inc
xor
sar
push
push
in
inc
mov
test
enter
loope
pop
in
outs
(bad)
test
push
ss
data16
mov
jle
mov
jne
ror
add
add
out
dec
mov
mov
jmp
mov
inc
add
outs
inc
adc
inc
outs
dec
push
or
mov
(bad)
push
xchg
add
mov
out
jle
xor
out
daa
cwde
loop
scas
fimul
ins
mov
add
addr16
stos
dec
sub
dec
pop
jmp
shl
les
scas
mov
mov
add
stos
xchg
test
push
mov
pop
movs
test
mov
mov
fstp
sbb
xor
sub
add
scas
std
or
jno
push
lods
mov
clc
mov
retf
enter
push
sbb
rcr
jbe
push
mov
shr
cmp
or
hlt
ror
in
sti
in
pop
add
mov
ja
push
outs
(bad)
cmp
adc
loopne
pop
mov
jns
mov
out
(bad)
mov
pop
jmp
sub
(bad)
dec
or
push
mov
jb
mov
jl
out
pop
jae
cld
cmp
push
push
and
xor
push
movs
xchg
(bad)
loopne
popf
or
mov
mov
push
or
add
mov
sete
mov
pop
fbld
addr16
nop
or
mov
add
mov
xor
sub
lock
leave
test
repz
mov
xor
lahf
into
push
nop
push
movs
outs
lods
bound
sbb
or
cmp
xor
movs
push
mov
fbld
push
ss
bound
ds
adc
sub
in
popf
xchg
adc
sbb
push
push
xchg
ja
lock
xor
and
sti
icebp
inc
push
aaa
sti
or
sahf
hlt
mov
dec
mov
cmps
mov
jmp
dec
jb
cdq
in
dec
or
fisubr
mov
adc
mov
sub
or
scas
push
loop
add
jg
lds
sub
xchg
jmp
popa
jae
adc
sub
out
jno
xor
in
sahf
fisttp
xchg
div
push
lahf
mov
pusha
dec
and
cmp
pop
call
rcl
rol
push
lds
push
xchg
(bad)
jmp
add
lock
sbb
and
jmp
xor
call
dec
test
or
js
jle
mov
inc
pop
add
fstp
xor
cli
fbstp
fstp
mov
or
stc
xor
popa
inc
mov
ss
or
nop
adc
hlt
add
mov
loop
pop
sub
aam
in
retf
stc
pop
dec
mov
pavgb
ins
cmc
push
cmp
push
pop
cmp
and
(bad)
loope
(bad)
add
mov
mov
cmp
cdq
push
jp
loop
and
sahf
xor
mov
jg
jmp
jg
fld
jp
shl
es
xor
test
(bad)
push
or
add
ins
jmp
retf
mov
cmp
setae
lea
in
bound
mov
mov
pusha
mov
jle
jmp
ins
mov
aaa
xchg
pop
imul
sar
pop
inc
test
test
in
stos
stos
arpl
jmp
sbb
ins
xchg
ja
test
outs
out
xchg
fadd
enter
into
dec
adc
jl
retf
mov
jl
inc
mov
xchg
inc
mov
adc
pusha
or
das
cdq
aad
push
and
xor
(bad)
in
addr16
dec
xchg
ins
loopne
jne
imul
in
jecxz
pop
pop
pop
arpl
and
fstp
fnstsw
add
xor
into
mov
cmp
or
fbld
ins
xchg
sbb
sbb
push
dec
stos
fs
sar
jg
or
outs
push
mov
iret
pusha
xchg
aas
adc
push
ficomp
movs
out
ret
or
test
fistp
adc
(bad)
adc
imul
cmps
push
or
pop
repnz
fcom
sbb
ud1
xchg
sbb
sbb
mov
sbb
mov
inc
xchg
jmp
fnsave
and
aaa
push
jp
xlat
jecxz
jle
push
cmps
sub
test
test
mov
cmps
sbb
scas
mov
cmc
cmp
xchg
push
rol
sti
inc
int3
enter
(bad)
and
pusha
xor
call
jae
test
xchg
(bad)
pop
mov
adc
and
ins
add
call
adc
mov
mov
add
or
and
jnp
aas
mov
dec
int3
rcl
mov
rcl
mov
push
les
mov
ret
push
fwait
pop
pushf
mov
dec
sub
sbb
into
inc
aas
cmp
push
push
gs
rcl
mov
mov
pop
ins
cmp
and
popf
push
movd
fimul
icebp
mov
and
daa
scas
dec
mov
addr16
fisttp
ja
adc
adc
shl
or
mov
or
cdq
dec
sahf
jb
aaa
pop
lea
lahf
pop
lock
mov
mov
mov
cmp
scas
lahf
aas
adc
mov
inc
jns
pop
icebp
cld
push
pop
dec
mov
movs
fsub
mov
xchg
out
stos
and
xchg
xor
retf
repnz
jecxz
shr
pop
lea
push
ins
xor
iret
mov
jno
cmp
xor
cmp
test
mov
(bad)
in
and
inc
(bad)
cmp
add
js
(bad)
xchg
and
push
push
sub
xor
fiadd
shr
fst
push
and
push
aaa
pop
adc
mov
out
add
jnp
jne
sbb
(bad)
call
sbb
jl
je
pop
mov
inc
dec
or
jnp
add
pop
ficom
repz
daa
mov
scas
aad
xchg
f2xm1
sub
ret
jg
fdivr
dec
mov
mov
dec
fimul
sti
xchg
jge
stc
xchg
jae
loopne
pop
inc
dec
dec
test
xchg
dec
or
sub
das
(bad)
retf
out
lds
call
int3
jecxz
push
popa
loopne
add
jae
jp
test
dec
das
fcmovnb
xchg
dec
dec
and
xchg
lods
fsub
je
xor
inc
or
pushf
push
add
icebp
test
jno
mov
movs
imul
fld
mov
sar
retf
cmc
add
fistp
fsubr
jl
js
cmc
adc
sbb
cdq
cli
mov
dec
test
and
xor
xlat
leave
sub
xor
xor
jge
in
bound
sahf
std
pusha
mov
jl
ins
test
mov
daa
add
xchg
or
out
cmp
add
adc
iret
xchg
push
mov
retf
stos
dec
cld
ins
xor
pusha
push
loop
stos
sbb
xor
mov
or
inc
aaa
push
mov
lds
enter
test
jmp
pop
into
das
jne
sub
ins
add
ins
cmp
nop
and
enter
jl
fild
pop
or
push
xor
xlat
imul
jno
inc
xor
call
inc
inc
test
jge
adc
(bad)
lods
ret
and
push
add
data16
fistp
sbb
jno
dec
fsubr
jmp
jecxz
out
sbb
add
test
in
xchg
stos
in
xor
pop
cmp
fsubr
scas
popa
dec
cwde
mov
mov
stc
popa
pushf
div
jb
add
mov
nop
xchg
in
mov
adc
addr16
mov
xchg
or
pop
sub
sbb
ror
les
dec
mov
xchg
mov
enter
mov
jo
pop
movs
sar
ror
mov
xchg
in
sbb
push
mov
mov
xchg
and
lock
mov
mov
idiv
mov
mov
pop
pop
jmp
jp
pop
lods
mov
mov
or
mov
sub
jns
cmps
push
xor
sti
add
jbe
sbb
sbb
aas
out
loopne
aas
cmp
out
das
loope
cmps
mov
imul
cmp
movs
(bad)
xchg
dec
pop
add
repnz
ret
ficomp
scas
and
rcl
jns
xor
adc
pop
or
cld
push
push
rol
shr
scas
int
aas
cwde
xor
les
jle
in
popa
dec
retf
scas
push
mov
mov
dec
inc
sti
or
out
(bad)
mov
movaps
adc
in
ds
dec
push
sahf
cmp
xor
mov
fs
imul
mov
call
inc
sub
in
pop
adc
dec
xchg
pop
xchg
sbb
call
xor
dec
aas
dec
sahf
cmp
push
push
imul
push
push
sbb
jg
hlt
lods
jno
sbb
push
ror
(bad)
out
xor
sbb
test
sub
call
rcr
push
inc
clc
push
fs
fcom
jbe
and
popf
jl
mov
loop
add
mov
call
xchg
dec
pop
imul
pop
sbb
push
mov
xor
retf
enter
push
ficomp
add
repnz
add
lods
imul
imul
(bad)
in
dec
sar
jmp
aaa
sbb
pop
adc
dec
xchg
xchg
das
or
mov
pop
mov
lds
sahf
loopne
push
aam
adc
jmp
cmp
mov
jbe
adc
in
in
and
jp
aam
das
movs
hlt
shl
mov
ret
and
mov
arpl
cs
push
jbe
out
inc
rcl
mov
pop
sub
pop
les
mov
pop
bound
mov
subps
sub
xor
cmp
popa
bound
sbb
out
jecxz
jmp
ss
cmc
dec
imul
dec
mov
pop
jmp
test
pushf
push
sub
out
mov
adc
nop
mov
xor
xchg
mov
out
loop
ret
pop
mov
popf
xchg
vmwrite
sbb
adc
jbe
movs
lock
adc
cmp
or
lods
(bad)
imul
or
push
in
out
jle
icebp
punpckldq
dec
mov
xchg
or
push
fwait
or
push
mov
cmc
mov
inc
mov
jp
inc
push
jp
or
(bad)
addr16
fnstenv
jg
jo
dec
or
and
and
fcomi
jne
scas
or
lock
xchg
sbb
icebp
sub
adc
jmp
jb
lods
mov
gs
ss
add
cmc
xchg
mov
sbb
xchg
ins
mov
cdq
iret
in
jb
adc
and
fild
jg
push
popa
jns
mov
inc
or
add
in
pop
imul
mov
jmp
xor
inc
adc
std
push
pop
pop
pop
outs
in
and
adc
mov
pusha
jbe
rcl
dec
cmp
xchg
out
lock
test
jns
inc
cmps
idiv
xlat
mov
mov
shl
jo
cmps
cld
mov
addr16
adc
dec
dec
mov
jle
call
aaa
dec
add
call
(bad)
xor
dec
mov
mov
movs
adc
mov
and
je
rep
inc
dec
rol
fs
mov
jae
xor
call
pushf
in
in
xor
nop
xor
mov
or
arpl
dec
ror
push
cmp
fwait
inc
mov
jl
inc
sub
cs
inc
repz
push
jo
xlat
push
and
jle
stos
inc
sub
and
dec
or
ins
xchg
movs
das
lea
fild
or
call
popf
arpl
enter
in
sub
dec
ret
sti
test
xor
adc
pop
mov
(bad)
mov
imul
(bad)
test
push
(bad)
cs
loopne
mov
loope
aaa
lock
sbb
mov
mov
xchg
mov
add
retf
cmp
mov
arpl
icebp
jp
aaa
retf
push
mov
sar
inc
jo
mov
(bad)
cmp
xchg
ss
jne
in
mov
xor
inc
stc
arpl
shl
cli
or
and
enter
jle
pop
cli
mov
push
cld
mov
cmps
mov
pop
leave
pop
sub
xlat
movs
xor
repnz
mov
daa
imul
aaa
cdq
leave
ja
idiv
ja
out
sbb
adc
push
dec
retf
fwait
mov
mov
mov
sub
or
cwde
cli
ins
push
ret
lea
std
mov
cli
cli
test
xor
dec
push
mov
or
in
dec
lock
sub
push
test
xor
scas
adc
js
stos
jl
fsubrp
in
jle
jp
pusha
shl
mov
hlt
(bad)
adc
aas
loopne
add
shr
adc
push
mov
enter
pop
mov
add
mov
dec
pop
dec
xor
out
inc
daa
stos
mov
imul
jmp
dec
xor
xchg
jmp
test
cmp
stos
into
mov
pop
sub
xchg
out
and
mov
push
mov
test
mov
lahf
mov
mov
(bad)
stc
shr
push
dec
int3
clc
jg
shl
xchg
jb
clc
jne
in
xchg
fmul
sbb
jnp
mov
lods
mov
loope
fnstsw
ins
es
shl
std
movs
cmp
loope
dec
jmp
push
iret
fcomp
jbe
xchg
xor
aas
fst
jmp
jmp
jne
or
fucomip
jo
adc
popa
or
lods
ins
xchg
rol
xchg
inc
add
fwait
lods
push
jmp
test
jbe
add
or
inc
dec
jns
in
lock
imul
push
mov
jg
loopne
dec
jb
loope
xchg
data16
ret
mov
not
leave
pop
push
lahf
int3
loope
add
xlat
inc
mov
mov
mov
inc
aaa
stos
cmc
(bad)
inc
test
(bad)
push
movs
psubsb
shl
imul
mov
dec
shr
sti
jns
cs
into
dec
ins
and
push
mov
ins
in
aaa
jecxz
adc
adc
xor
mov
push
lock
mov
dec
mov
inc
dec
push
enter
jle
sbb
inc
push
push
xchg
lea
inc
in
lods
jecxz
and
loope
in
push
inc
lahf
dec
test
and
mov
inc
xor
inc
and
add
out
fucompp
and
push
inc
ret
bound
mov
mov
(bad)
pusha
fist
jno
inc
jl
xchg
popf
hlt
mov
or
repz
jmp
mov
les
pop
pop
rol
aas
stc
movs
jo
clc
adc
push
mov
dec
test
icebp
push
iret
repnz
movs
loopne
dec
add
xor
sbb
into
cmc
fmul
xchg
int
es
imul
fnstcw
mov
hlt
(bad)
out
scas
sbb
movs
push
arpl
mov
fdivr
jbe
jmp
xor
(bad)
mov
sub
dec
hlt
mov
bsr
aaa
mov
loopne
jnp
repz
pusha
fimul
hlt
and
test
sar
pop
(bad)
cmc
sar
retf
or
jns
push
xor
call
xlat
sbb
bound
sbb
mov
inc
lock
dec
jb
pop
jp
push
(bad)
es
(bad)
push
ins
jecxz
jb
lea
dec
std
push
cmp
push
mov
adc
stos
add
icebp
jae
xor
and
test
pop
adc
aad
lock
xor
adc
shr
mov
imul
jno
sti
retf
push
shr
dec
scas
inc
jle
fs
shl
xchg
je
mov
ss
and
sbb
push
aam
jnp
and
mov
mov
int3
dec
or
xchg
icebp
nop
cwde
xchg
jecxz
sub
out
push
imul
jns
call
mov
loopne
xchg
adc
adc
cld
(bad)
jmp
ret
mov
and
aam
mov
mov
or
xchg
call
jnp
push
test
outs
cmp
pop
in
inc
aaa
adc
xchg
pop
cdq
idiv
cmp
cdq
cmp
mov
mov
sbb
sub
push
xchg
inc
ror
xor
cdq
aam
test
pop
das
mov
cdq
pop
pusha
fwait
pop
ret
stos
mov
js
(bad)
mov
(bad)
loopne
lock
sub
adc
xchg
sub
cmps
cld
mov
stc
add
jecxz
add
push
or
pop
cmc
cmp
test
vmovdqu
lea
cmp
xchg
rol
mov
mov
das
jns
sub
or
ja
lea
mov
mov
test
repnz
jmp
sbb
into
neg
mov
xor
or
mov
stos
mov
or
cdq
hlt
adc
outs
test
jbe
push
xchg
sub
xchg
fwait
pop
jmp
sbb
jns
jmp
xchg
popf
adc
(bad)
jae
jecxz
bound
out
add
jg
push
jp
fmul
cmp
stos
arpl
cmps
add
popa
push
fimul
pop
jmp
adc
jae
push
push
fisttp
jae
jae
fwait
mul
cwde
(bad)
out
xchg
lock
xor
out
xchg
retf
or
ss
in
jge
jmp
and
adc
ror
push
ror
sub
and
mov
outs
pop
cmc
pop
xor
scas
mov
pop
xor
or
cmp
pusha
push
mov
pushf
mov
xchg
out
imul
ds
call
fst
loopne
cmps
xchg
fisttp
inc
std
and
push
push
retf
mov
ins
aas
icebp
push
pop
(bad)
sbb
shr
fs
push
cmps
mov
xchg
hlt
scas
jge
xor
mov
jmp
ins
out
test
movs
mov
fcmovnb
mov
inc
shr
push
popf
jns
data16
xor
test
ins
test
cli
cdq
jge
aaa
jge
and
xor
xor
mov
cmp
test
std
nop
cmc
nop
adc
and
pop
cs
xor
jmp
(bad)
cmp
mov
pop
scas
mov
push
xchg
jecxz
mov
cmc
retf
repz
jns
add
call
and
nop
and
adc
pop
leave
dec
pop
sub
leave
jb
outs
aas
cmp
cmp
stos
add
outs
sub
arpl
inc
mov
pop
jg
sbb
add
or
dec
push
ins
imul
cmc
cld
arpl
sti
aaa
xchg
loop
int
sbb
xchg
push
icebp
mov
es
push
push
jnp
cmp
ins
and
ror
jle
rcl
inc
imul
jo
xchg
loop
fst
sti
push
js
fcomp
(bad)
mov
cmp
cdq
loope
mov
in
adc
mov
lea
dec
into
call
fimul
inc
aam
fwait
mov
pop
js
test
push
cmp
mov
xor
bound
ds
lock
retf
or
mov
popf
cmp
aas
sti
pop
stos
mov
mov
mov
inc
das
and
fisttp
pop
mov
test
retf
mov
jp
mov
add
ins
(bad)
scas
mov
jbe
cmc
pop
xlat
outs
int
and
adc
jecxz
sbb
les
push
int3
push
fwait
mov
and
push
pop
stos
(bad)
jmp
xchg
ds
or
inc
lds
in
mov
daa
push
sbb
pop
iret
xor
in
in
inc
loopne
test
add
add
xchg
xor
dec
jl
pop
jbe
or
jecxz
ss
leave
scas
pop
or
cmps
mov
dec
lock
jnp
(bad)
retf
inc
aam
pop
in
lods
add
test
in
inc
push
test
stc
iret
mov
bound
cmp
xor
ja
pop
gs
push
inc
aaa
jb
sub
cmps
and
cmc
sar
jmp
sbb
aas
mov
inc
xlat
int
movsx
add
xchg
fdivr
jo
jmp
xor
mov
aas
stos
mov
sub
js
xchg
push
mov
(bad)
cmp
ret
fcomp
je
test
rcr
(bad)
push
js
jne
or
fsub
inc
ror
in
mov
mov
popf
es
xor
push
mov
cld
mov
out
dec
ss
test
ins
cmp
retf
cmp
js
pop
in
daa
test
pop
sbb
pop
fbld
addr16
retf
clc
ins
and
call
inc
xchg
jnp
mov
icebp
ret
cmp
imul
push
cmps
and
mov
sub
push
push
add
pop
fs
xchg
dec
mov
hlt
adc
adc
cmp
ret
add
mov
sbb
adc
cs
or
pusha
pop
jns
mov
adc
cmp
call
jl
cmps
call
inc
mov
and
inc
aas
cdq
into
sub
dec
daa
fsub
ror
cmps
rcr
test
mov
out
and
aam
nop
inc
mov
test
icebp
js
hlt
mov
rcr
jo
(bad)
adc
xchg
mov
and
and
dec
mov
jl
mov
mov
je
fcom
dec
leave
inc
aad
jns
xchg
ret
shr
or
les
sub
inc
mov
cmp
imul
leave
sbb
ror
jmp
xor
cld
jp
les
mov
xchg
call
rcr
mov
cmp
and
xchg
mov
pop
pop
mov
(bad)
pop
scas
dec
add
loopne
in
stos
std
cmps
xlat
sub
xor
mov
pop
sub
add
in
cmc
push
xchg
out
xchg
sub
stos
inc
mov
push
push
das
test
xchg
mov
xor
dec
jmp
sbb
popa
test
pop
div
imul
jae
mov
xchg
mov
lods
and
mov
test
scas
push
cld
fistp
aaa
inc
pop
mov
in
outs
popf
sub
mov
out
movs
push
daa
jecxz
push
int3
pop
mov
fs
and
xchg
push
push
pusha
sub
jae
and
in
jp
mov
loope
repz
cmp
mov
sub
in
rol
imul
mov
or
sub
or
fst
or
mov
xchg
add
mov
jp
fcomi
out
or
idiv
shr
dec
adc
or
lahf
mov
inc
sbb
fbstp
mov
sbb
mov
and
lea
cld
jp
call
push
sub
push
jp
ins
xor
cmp
hlt
add
(bad)
push
into
cwde
pop
mov
dec
sti
adc
neg
mov
in
imul
repz
cmps
loopne
mov
enter
jb
std
xchg
push
mov
pusha
push
in
sub
test
mov
dec
xor
mov
dec
fcomip
xchg
aam
push
(bad)
sub
popa
jae
pop
ins
movs
adc
mov
cmp
cmp
stos
imul
xchg
cli
xchg
nop
push
adc
cmc
xor
xor
xor
aam
pop
jns
sub
xchg
nop
(bad)
dec
stos
pop
mov
mov
push
inc
dec
push
cmp
and
xor
mov
xchg
leave
inc
movs
loop
sar
(bad)
pop
sar
dec
rcl
mov
int
and
arpl
scas
jg
add
pop
clc
xor
push
(bad)
cmc
and
cwde
gs
fucomp
mov
sub
mov
push
aaa
pop
adc
shl
add
nop
add
xchg
cdq
mov
push
idiv
je
icebp
dec
call
js
inc
outs
push
mov
inc
cld
cmps
push
add
mov
pop
aad
ss
lods
lods
(bad)
outs
fwait
adc
in
mov
aam
pop
jae
ret
pop
push
mov
out
push
int3
shl
push
adc
loopne
pop
cmp
sar
mov
mov
rcr
int
dec
jne
cmc
pop
ja
or
es
pop
in
cmp
adc
ret
repnz
mov
and
test
in
(bad)
retf
mov
mov
cs
scas
jge
test
je
adc
sub
out
pop
jne
into
cmp
in
adc
scas
lock
dec
xor
mov
xchg
sub
loopne
cmp
sbb
pop
jp
xchg
and
pop
shl
or
adc
mov
push
jnp
loop
ja
fstp
scas
jmp
movs
dec
xchg
jg
pop
adc
jns
mov
xchg
xchg
shl
and
sbb
mov
sbb
push
shl
add
lea
and
addr16
int
sbb
into
add
call
push
fdivr
adc
mov
inc
cmps
xor
ja
(bad)
fnstsw
push
mov
in
push
fisttp
dec
test
mov
das
push
inc
sub
aad
lock
popf
pop
call
ret
sub
sub
inc
mov
mov
div
(bad)
aam
lock
xlat
icebp
push
shr
fidiv
or
inc
popf
pop
call
sti
mov
sbb
call
sub
sub
sub
jp
icebp
cmp
pop
inc
sub
add
xor
lea
inc
ja
adc
std
mov
push
out
ret
jmp
inc
add
scas
mov
stc
aad
lds
lods
pop
(bad)
jne
stos
nop
ins
jne
dec
loop
cld
and
test
mov
push
mov
out
rol
popf
clc
data16
repz
adc
aad
ds
(bad)
or
cmc
ins
sbb
mov
loop
movs
push
adc
xchg
dec
loop
xchg
leave
fcomip
cmp
mov
push
aas
sub
stc
mov
outs
push
das
ins
test
add
inc
mov
cld
mov
sub
mov
pop
push
call
push
in
enter
xchg
mov
push
inc
outs
pop
test
fsubr
mov
scas
in
jnp
fwait
cmp
xlat
push
sahf
std
adc
pop
dec
xor
rcl
sbb
test
xchg
loop
jg
rep
mov
add
cmp
stc
dec
int
mov
fcomp
adc
xor
mov
push
cmps
mov
adc
mov
movs
adc
xchg
shr
fsubr
cld
stc
and
js
js
cmps
jmp
sub
out
sbb
ins
adc
scas
sub
retf
lea
push
nop
dec
test
and
retf
pushf
repz
mov
repz
xchg
shl
mov
mov
outs
js
imul
jnp
xor
inc
cmps
fstp
outs
sbb
(bad)
cmp
or
ret
nop
es
and
test
mov
adc
loope
pop
push
jge
repnz
pop
push
stc
jb
in
std
xchg
lods
xor
add
fcom
lahf
pop
inc
loope
xor
mov
add
jne
jp
mov
mov
mov
daa
sti
rol
or
pusha
fadd
xchg
shl
sub
sub
aaa
sbb
clc
and
inc
outs
aad
sbb
pushf
sbb
mov
mov
stos
retf
in
xchg
xchg
mov
dec
jno
inc
dec
pop
pop
xor
jg
leave
das
add
mov
(bad)
or
xor
xchg
and
sub
or
push
mov
xor
fsub
cld
lock
pop
inc
add
dec
into
repz
js
(bad)
sti
adc
cmp
xor
repz
add
mov
pop
stos
jmp
sub
pop
cmp
inc
hlt
inc
das
and
sub
mov
add
clc
add
pop
or
jle
lds
and
iret
add
aam
pop
add
jecxz
pop
jle
outs
mov
xor
in
push
xor
fcmovnb
inc
cli
arpl
clc
inc
mov
and
sub
cmp
std
dec
inc
jbe
sub
mov
mov
retf
cli
inc
sub
xchg
dec
jmp
pop
(bad)
clc
add
loop
push
pop
clc
sbb
and
(bad)
fwait
in
fstp
in
sti
sbb
mov
fdiv
in
xchg
dec
movs
es
addr16
popa
rol
mov
xchg
adc
(bad)
aam
movs
cmp
cmps
inc
out
inc
xchg
das
ja
je
mov
fdivr
pop
loopne
jae
jno
xor
adc
push
std
push
ins
js
and
mov
cmps
cwde
std
outs
and
outs
test
fs
cld
mov
ins
and
push
imul
cmp
lds
das
add
lea
fwait
inc
(bad)
or
dec
add
test
mov
ret
xor
cmp
scas
xor
push
xor
enter
leave
and
dec
mov
mov
je
dec
dec
cmp
sbb
movs
xor
add
addr16
xor
neg
mov
xchg
rcr
call
aas
push
jno
cmps
sub
gs
push
or
mov
fwait
dec
(bad)
call
mov
mov
sub
jmp
xlat
and
retf
pushf
xchg
mov
jns
sbb
std
lahf
dec
push
inc
xchg
add
pop
pop
jns
fucomi
mov
addr16
fwait
mov
fwait
imul
xchg
jl
mov
or
cmp
ins
adc
in
sbb
int3
enter
loopne
cs
sbb
pop
add
inc
pop
mov
mov
and
in
(bad)
pop
mov
inc
jl
sub
aam
inc
stos
std
mov
dec
inc
test
gs
mov
ins
dec
test
fs
pop
sub
jge
xor
repnz
rcl
jns
shl
jmp
push
push
adc
clc
test
imul
pop
adc
mov
jmp
clc
scas
mov
mov
lods
pop
jmp
push
imul
or
rol
push
aam
sub
xchg
lds
xor
aam
pop
(bad)
xor
icebp
lahf
pop
sub
mov
jg
out
imul
xchg
shr
inc
cmp
sub
sbb
jecxz
out
push
cmps
stc
mov
loopne
jle
stos
jno
aad
pop
clc
inc
and
mov
sub
mov
rcl
sbb
ins
sbb
mov
adc
ins
ret
push
jnp
out
movs
pop
arpl
cmps
jmp
in
mov
(bad)
mov
js
dec
fstp
push
and
fadd
and
push
scas
and
push
cld
aad
stos
add
in
add
cld
repnz
rcl
cmp
lods
xchg
ret
sahf
mov
jbe
shl
(bad)
cmp
mov
lods
lods
cmovs
sbb
lea
push
test
daa
es
xor
dec
shl
outs
cmp
push
repnz
xor
sbb
push
loopne
inc
xchg
and
xchg
fsubr
fbstp
stc
into
dec
(bad)
xor
popa
retf
pop
fs
ret
xor
inc
jnp
inc
out
arpl
or
jle
push
mov
jns
inc
jmp
iret
adc
add
inc
(bad)
mov
ret
cmp
nop
or
loope
jne
mov
inc
xchg
xor
repnz
and
pop
xor
fdivr
scas
ret
or
and
cdq
push
push
mov
add
mov
or
mov
push
enter
xchg
data16
imul
sbb
repz
fild
repz
and
push
mov
push
jbe
pop
std
dec
jl
pop
xor
repz
addr16
xor
(bad)
inc
fnsave
fwait
push
fwait
mov
fwait
mov
fnsave
ret
aad
dec
fmul
sar
inc
(bad)
xchg
movs
pop
out
pop
jb
shl
and
jp
lea
xor
test
sub
addr16
jnp
ins
fldcw
dec
lods
push
lds
repnz
(bad)
js
mov
xchg
loope
jp
call
sahf
test
xchg
cmps
jne
popf
cmp
xor
inc
push
push
stos
and
adc
jle
jb
int
leave
adc
sbb
pop
imul
cmps
aam
icebp
fidiv
pop
or
or
pop
sbb
push
cmp
dec
sub
push
xor
and
mov
in
xor
repnz
(bad)
push
shl
xchg
sar
dec
jle
xor
pop
and
mov
imul
jnp
push
ja
leave
xor
clc
jno
jl
add
fbstp
fistp
loopne
jle
fidiv
or
stc
xor
imul
cmps
(bad)
mov
icebp
gs
or
test
in
ret
jp
jle
sahf
cmp
sbb
scas
inc
je
imul
and
xor
out
push
std
jnp
out
imul
cld
push
mov
adc
ja
adc
xlat
adc
xor
and
cmp
and
jbe
jnp
jnp
ja
ins
inc
push
and
scas
xchg
xor
scas
mov
xchg
mov
cs
fld
xor
pusha
(bad)
stos
pop
pop
inc
ins
movs
int3
neg
jae
popa
mov
pop
or
sbb
imul
test
leave
mov
mov
aaa
das
mov
add
int3
repz
cdq
jmp
(bad)
cmps
bound
mov
in
jno
cmp
dec
imul
pop
push
jp
(bad)
or
push
pop
js
or
ffree
iret
and
inc
xchg
or
iret
inc
test
repnz
sbb
cmc
sub
std
jp
and
fwait
push
dec
xchg
shr
lods
shr
dec
jne
cmps
imul
les
dec
xchg
xor
mov
inc
mov
clc
jne
mov
aaa
push
sub
sub
adc
js
inc
ret
cdq
sub
inc
js
dec
sbb
stos
dec
cmps
movs
test
inc
fisttp
mov
dec
xchg
mov
inc
pop
movs
int
pop
cdq
test
movs
cli
lahf
hlt
dec
add
jo
js
dec
test
xchg
mov
shr
inc
pop
neg
sbb
add
test
sti
jo
jae
push
icebp
aad
adc
xchg
add
inc
adc
mov
mov
ja
dec
in
test
add
outs
xor
xor
arpl
jmp
test
movs
cmc
aam
mov
or
or
push
pop
(bad)
in
mov
shl
inc
or
or
mov
scas
mov
push
and
jbe
fdiv
ss
or
push
idiv
rol
movs
shr
clc
push
imul
or
mov
and
(bad)
js
push
sbb
addr16
mov
adc
aaa
adc
xchg
dec
cmps
pop
test
lds
xchg
ror
shl
pop
dec
xor
mov
push
fstp
cwde
mov
js
rcl
out
fwait
retf
cld
xchg
pushf
and
xchg
push
loopne
jnp
mov
jno
(bad)
xor
popa
jp
add
hlt
sub
cwde
fidiv
mov
iret
ds
call
pop
mov
ds
int3
sub
xlat
push
std
sahf
xchg
sti
and
mov
add
mov
jns
ret
stos
js
xchg
stos
xchg
not
out
push
and
adc
ins
jnp
adc
inc
arpl
stos
test
or
retf
fdivr
jmp
nop
or
test
mov
mov
clc
scas
cmp
jbe
jmp
add
rol
cwde
push
mov
jb
mov
mov
aaa
cmp
lea
xor
pop
jae
into
or
ror
jb
fsubr
xor
adc
adc
and
adc
jmp
mov
xor
aas
aam
inc
pop
in
xor
movs
xchg
cli
mov
inc
mov
int
mov
test
repz
pop
into
inc
mov
(bad)
add
shr
and
jmp
in
pop
jl
popf
or
clc
(bad)
xchg
sar
mov
fwait
into
xor
adc
popa
stc
out
mov
mov
fcmovnb
fld
fnstenv
rol
pop
iret
push
bound
add
and
mov
push
sbb
mov
je
popa
mov
ja
jmp
sbb
jmp
jne
sub
movs
icebp
cmps
repz
fld
mov
repz
in
mov
pop
push
jbe
or
sar
(bad)
movs
nop
in
pop
xchg
cmp
sub
sub
pop
xchg
add
mov
test
fidiv
pop
add
adc
adc
cmp
pop
jmp
mov
cmp
(bad)
(bad)
adc
pop
sub
add
xor
jb
xchg
stos
pop
arpl
mov
add
ret
scas
lods
xor
leave
xor
loope
clc
js
cli
cmps
or
aad
iret
call
mov
push
sbb
push
mov
fstp
pop
popf
cmp
sub
inc
call
jb
sub
out
mov
fwait
jbe
mov
andnps
call
cs
cmp
mov
retf
ficom
inc
cmp
pop
add
test
je
lock
push
mov
mov
cmp
dec
jbe
xchg
outs
pushf
mov
in
movlps
jg
xchg
sbb
loop
dec
dec
(bad)
cwde
xor
sbb
push
dec
aaa
fst
xor
mov
in
mov
cdq
or
mov
jmp
or
mov
or
mov
repnz
in
arpl
pop
out
sar
or
inc
ret
fcomp
loop
mov
out
inc
push
retw
mov
dec
fcmovb
xchg
test
cld
popf
int3
mov
in
and
data16
xor
mov
xchg
test
jo
fs
leave
sub
and
pop
aam
cmp
fstp
out
rol
adc
mov
es
inc
sbb
popa
daa
mov
cmps
ret
mov
push
pop
mov
and
cmp
inc
xchg
mov
mov
sti
lahf
xlat
add
rep
imul
xchg
xor
aas
inc
xchg
mov
ds
mov
jo
inc
aas
imul
jno
push
add
fdivrp
imul
mov
je
gs
retf
mov
xchg
in
cmp
in
mov
mov
mov
aas
mov
xor
sbb
cmp
mov
retf
push
jne
and
ja
lock
add
adc
movs
pop
sbb
pop
pop
aaa
hlt
lods
adc
and
cmp
nop
out
sbb
xlat
pop
push
push
stos
(bad)
mov
(bad)
js
cmp
push
mov
lods
xchg
sub
and
add
imul
neg
out
xchg
lea
mov
imul
sbb
jmp
(bad)
and
neg
fcmovbe
mov
or
mov
ins
int
iret
je
out
sti
cdq
pop
je
or
push
das
(bad)
mov
push
hlt
mov
xor
fisttp
aad
pop
adc
lea
neg
out
test
xchg
cdq
xchg
mov
(bad)
jg
or
mov
cmp
and
pop
and
bound
mov
fsubr
test
push
jmp
nop
jae
test
mov
test
mov
xor
xor
sbb
inc
iret
mov
mov
adc
out
cld
or
dec
addr16
hlt
ss
pop
lods
xor
sbb
mov
clc
sbb
ins
es
push
icebp
aad
jmp
arpl
sbb
xchg
inc
mov
and
in
cmp
lods
and
dec
or
out
push
mov
dec
push
and
jmp
repnz
cmps
ret
pop
cwde
mov
sbb
lea
mov
lock
out
in
push
pusha
cmp
fst
stos
fnstsw
gs
xchg
push
cmp
dec
aaa
les
pop
xor
in
(bad)
push
cmps
stos
sbb
fimul
scas
mov
and
or
test
js
jae
mov
mov
ret
idiv
std
add
jge
mov
(bad)
repz
cwde
sub
fsubr
dec
es
(bad)
lock
inc
inc
dec
jb
scas
push
xchg
test
(bad)
into
inc
or
jae
xchg
mov
ins
dec
mov
stc
jecxz
dec
or
shr
adc
and
test
mov
lds
cli
cwde
pusha
sbb
pusha
lods
std
aas
xchg
ja
jmp
mov
xchg
shl
arpl
mov
lea
push
add
movs
sub
jecxz
or
icebp
addr16
mov
test
dec
arpl
jnp
mov
mov
repnz
jg
mov
or
xor
fdiv
shr
push
outs
or
scas
lea
das
js
and
push
sub
mov
out
ror
or
scas
cmp
lea
retf
inc
jmp
or
adc
mov
jns
test
bound
jns
rcl
cs
fmul
fnstcw
mov
mov
int
cmp
cld
mov
xchg
(bad)
repnz
repz
stos
pop
xchg
stc
xor
and
mov
test
jmp
push
mov
les
and
and
jmp
fsub
cmp
mov
shr
jb
clc
enter
xor
mov
mov
mov
leave
lock
bound
jae
dec
xchg
xchg
call
jnp
mov
mov
(bad)
ret
xor
pop
dec
add
mov
mov
mov
mov
or
outs
in
jg
shl
(bad)
aas
std
dec
repnz
mov
(bad)
mov
repz
adc
shl
inc
mov
sbb
aaa
inc
add
push
mov
ins
not
inc
push
repnz
cmp
push
sbb
bound
sbb
aam
dec
test
mov
and
mov
hlt
mov
jae
ret
(bad)
push
xlat
add
sar
movs
inc
(bad)
fdivr
lahf
sbb
xor
push
jae
cmc
add
sbb
in
xchg
(bad)
dec
sahf
mov
jle
loope
dec
push
ret
xchg
repz
jns
xchg
test
das
dec
fsubr
jno
push
push
stos
or
hlt
mov
addr16
mov
ins
loopne
sahf
mov
push
outs
outs
pop
movlps
dec
idiv
loop
push
add
xor
ss
sub
dec
and
pop
cmp
inc
in
pop
pop
outs
add
adc
mov
fnstenv
nop
cld
jmp
jo
std
mov
or
aas
inc
jecxz
push
pop
ret
movs
mov
add
js
jno
cdq
and
sar
(bad)
neg
add
aam
arpl
nop
xor
xchg
xchg
cdq
test
popf
outs
inc
mov
add
inc
retf
sar
jmp
jne
sub
push
aaa
jno
in
inc
stos
not
lds
ret
fwait
dec
stc
lods
push
adc
daa
push
rcr
fnsave
rcl
arpl
mov
sahf
inc
lods
jne
div
xor
and
clc
push
fidiv
je
rcl
jmp
push
pop
cdq
add
test
je
jns
pop
and
sahf
pop
out
jg
sub
mul
int
xor
fnstenv
je
sub
xor
faddp
mov
xor
js
sub
xor
inc
cmp
ds
fwait
loopne
push
div
mov
rcr
retf
jo
push
pop
xor
mov
sub
xchg
(bad)
loope
punpcklbw
out
mov
and
fs
adc
pop
pop
push
imul
and
cmps
xchg
in
aad
push
fs
stos
lock
imul
xchg
rcr
(bad)
jmp
rcl
adc
and
clc
daa
addr16
lods
(bad)
cwde
addr16
adc
cmp
fsub
mov
cmc
stc
mov
in
rol
ret
mov
shr
fld
rcr
push
jmp
loope
and
in
inc
adc
outs
pop
jg
push
sbb
add
or
pop
adc
inc
mov
mov
pop
xchg
shr
lea
inc
int3
int3
mov
mov
jecxz
(bad)
into
jle
frstor
xor
and
pmaxub
pop
out
mov
ret
jmp
imul
aaa
ja
cmps
out
pop
add
sub
outs
pop
xchg
inc
pop
das
sbb
cdq
mov
cwde
push
cld
xor
popf
adc
movs
in
mov
sahf
imul
(bad)
or
cmp
and
out
sbb
pop
aas
lea
sbb
push
inc
fistp
jo
or
dec
fwait
and
shl
mov
cld
mov
and
inc
sbb
fnstenv
xor
sar
add
(bad)
push
fwait
and
mov
jp
imul
adc
fld
cmp
popa
mov
imul
adc
icebp
adc
adc
les
inc
in
pop
xchg
call
cld
pop
aad
xchg
mov
ins
jne
add
outs
push
clc
mov
std
and
aas
leave
sbb
stos
jecxz
dec
pop
xchg
or
enter
in
xchg
cmp
push
and
xlat
pop
ja
inc
sti
inc
sbb
enter
fistp
inc
fcom
jp
stc
loop
out
into
pop
inc
fisttp
ja
adc
mov
std
or
pop
movs
sub
shl
ret
mov
dec
(bad)
cli
mov
mov
cmps
mov
mov
lds
pop
or
xchg
xchg
imul
or
jg
mov
dec
mov
scas
mov
and
cmp
mov
or
pusha
xchg
xor
out
mov
adc
and
push
retf
dec
call
dec
mov
sub
nop
sub
jo
mov
xchg
stos
lods
or
loopne
daa
jecxz
popa
aas
and
retf
jne
and
retf
nop
jle
je
jmp
mov
mov
sti
shl
and
daa
mov
dec
sbb
or
mov
ins
loope
xchg
ds
push
sub
enter
cs
gs
cld
out
nop
les
in
imul
push
bnd
pop
mov
test
imul
inc
retf
(bad)
movs
ja
lods
pop
mov
js
loopne
xor
imul
xchg
cmc
lock
mov
cmp
jecxz
jle
inc
xchg
movs
adc
outs
add
xor
cmps
(bad)
je
(bad)
jmp
sub
jns
sub
sub
push
in
cmp
mov
pop
outs
jmp
or
jns
xchg
pop
xor
mov
nop
shl
ds
stos
aas
mov
adc
jb
dec
xor
jns
ds
dec
jns
ds
arpl
ror
jbe
push
xchg
jle
add
lock
cmp
push
out
jno
loop
push
and
call
or
mov
enter
loopne
adc
jne
adc
aam
cmp
adc
int
pop
out
call
adc
push
inc
addr16
loop
mov
ret
push
mov
jge
aas
into
iret
mov
test
popa
adc
sbb
mov
mov
push
pop
jp
jl
outs
sub
mov
cmp
sahf
ins
and
jge
aaa
sub
inc
xor
xchg
lds
or
loopne
imul
push
pop
arpl
rcl
jge
ins
sbb
inc
addr16
ja
mov
sub
jmp
lods
mov
and
adc
mov
popf
sbb
push
adc
xlat
add
ins
hlt
mov
xchg
adc
out
sub
fs
imul
sub
pop
jae
or
adc
or
sbb
outs
sbb
xchg
inc
addr16
dec
inc
retf
inc
out
push
sbb
add
cmp
hlt
dec
int3
mov
out
dec
xor
jge
dec
jge
push
ss
int3
loope
pop
mov
xor
imul
jp
cdq
loope
mov
pop
dec
leave
lahf
xchg
xchg
jns
add
xchg
in
(bad)
push
xlat
dec
or
movs
pop
shl
fnsave
fild
ret
lahf
into
aas
sub
mov
fcomp
out
push
les
cmp
mov
mov
ds
test
xor
sbb
mov
lods
and
ror
pop
popa
enter
mov
test
ret
call
out
pop
ins
sbb
mov
sub
(bad)
lock
mov
fimul
clc
mov
stos
jno
mov
dec
push
push
movs
ror
pop
and
dec
icebp
(bad)
xor
(bad)
repz
cmp
cs
xchg
xlat
mov
and
or
mov
mov
sub
ins
nop
or
jnp
cmc
mov
nop
js
popa
xor
dec
call
pop
mov
mov
inc
mov
jg
movs
outs
stc
xor
sahf
pop
inc
mov
mov
iret
jmp
or
and
dec
push
out
jo
(bad)
or
jecxz
dec
inc
imul
into
pop
sahf
bnd
jo
push
in
pop
cmp
push
scas
xlat
loope
call
push
or
adc
mov
push
dec
cdq
add
(bad)
sub
loopne
and
jo
jns
inc
mov
fld
xchg
add
rol
mov
mov
pop
xchg
jo
adc
popa
sar
test
or
mov
inc
sahf
push
arpl
cwde
out
dec
sbb
xchg
aad
cmp
bound
jmp
mov
mov
xchg
test
popf
sbb
leave
cmps
(bad)
dec
xor
int3
add
(bad)
aam
mov
dec
push
sbb
pop
data16
mov
sub
pop
push
sar
dec
mov
add
or
push
sbb
mov
call
cld
sti
icebp
pop
sub
aad
icebp
mov
imul
in
fnsavew
out
icebp
nop
mov
(bad)
fadd
mov
or
mov
shr
pop
sbb
lds
iret
mov
in
mov
les
and
and
addr16
shl
pop
inc
xchg
(bad)
fwait
jecxz
mov
ret
xor
adc
dec
xor
out
loope
enter
push
pop
pop
mov
mov
jl
mov
mov
icebp
mov
(bad)
scas
cmp
adc
aad
(bad)
(bad)
mov
ins
dec
pop
xlat
lahf
jmp
outs
ss
stos
out
aaa
cmp
mov
mov
stos
in
mov
das
fdivr
call
adc
mov
lock
pop
cmp
or
mov
ret
adc
psubsb
cmp
clc
or
and
sub
out
stos
cwde
or
(bad)
jbe
fucomi
mov
inc
adc
lods
adc
bound
repz
pushf
rol
cs
mov
das
lods
and
fisttp
push
stos
test
add
sub
adc
push
and
jmp
push
adc
jns
retf
dec
outs
push
daa
enter
xchg
dec
retf
xor
jle
or
cmp
outs
xchg
(bad)
xchg
xor
mov
xchg
cmc
xor
fcomip
repnz
retf
mov
test
fdivp
mov
ret
test
aas
mov
mov
ss
dec
adc
shr
mov
push
cmp
dec
mov
jmp
dec
enter
adc
dec
fcom
aaa
gs
int3
or
sub
jecxz
stos
test
lods
hlt
jle
and
push
shld
xlat
(bad)
dec
sub
rol
hlt
and
popf
jae
sub
icebp
xor
dec
push
mov
repz
push
sub
dec
adc
push
in
aaa
dec
or
jp
les
and
jns
pusha
outs
ficomp
adc
repz
add
sub
lea
pop
call
mov
shl
pop
xchg
or
dec
pop
add
ret
jl
mov
je
mov
lock
ja
cli
cmp
sahf
jns
leave
test
jmp
lea
adc
mov
cmp
icebp
sbb
adc
cmp
es
pusha
outs
mov
movs
into
mov
jns
or
pop
sub
loop
les
ss
js
fiadd
inc
xor
mov
dec
mov
xor
aad
mov
aas
and
and
ss
mov
in
es
or
into
add
iret
ds
div
mov
stos
sbb
daa
xor
aad
dec
mov
ret
clc
aam
and
jge
ins
arpl
jo
jns
xchg
cmp
xlat
mov
fcomp
je
mov
sbb
scas
adc
test
mov
inc
jl
out
push
ss
rcr
mov
pop
aad
mov
sahf
xchg
icebp
add
bound
cmps
(bad)
or
retf
mov
adc
mov
xor
int3
stos
xor
retf
or
aas
and
(bad)
sub
sbb
xor
mov
ds
dec
clc
enter
ins
and
out
cmp
addr16
mov
mov
das
loope
cwde
sub
sbb
inc
push
sub
xchg
in
fcomp
inc
mov
jmp
fdivrp
sti
fistp
scas
and
int3
shr
gs
or
add
ds
jmp
sbb
cmc
dec
xchg
xchg
push
clc
push
aaa
ss
dec
or
inc
test
jne
dec
movs
arpl
push
fstp
outs
adc
cli
std
pop
pop
retf
fsub
xchg
sar
sub
movaps
adc
jnp
rol
dec
push
mov
lds
add
(bad)
push
xlat
jae
arpl
fs
lock
bound
cdq
sbb
cmc
jl
into
stc
out
int3
scas
cmp
ffreep
ror
sbb
inc
int
xchg
jge
sbb
and
dec
fdiv
int
jo
and
in
shl
xchg
cdq
sub
or
fs
jg
sbb
mov
cli
rcl
movs
push
xchg
lods
mov
mov
jg
dec
lea
jo
movzx
sbb
and
fbld
stos
in
imul
jecxz
inc
mov
out
sbb
test
pop
int
mov
adc
jg
xlat
cs
push
cmp
mov
inc
in
pop
jns
adc
jp
les
enter
stos
mov
pop
jo
les
in
jae
test
lahf
pop
out
xor
push
sbb
stos
scas
jle
sub
or
xchg
push
add
test
test
jmp
push
test
rcl
loope
cmp
retf
ins
dec
shl
je
add
lods
add
xor
imul
int
into
in
inc
(bad)
addr16
or
dec
dec
ret
push
int
inc
pushf
jl
pusha
or
pop
jno
pop
xchg
push
test
loop
aas
ret
dec
pop
(bad)
cmp
inc
push
mov
xlat
(bad)
ds
jp
popf
mov
or
mov
jno
mov
jbe
ja
lea
jnp
mov
sar
push
push
sub
cmp
scas
nop
adc
adc
dec
jge
mov
mov
enter
inc
mov
xchg
icebp
aas
mov
mov
cmp
mov
out
shl
scas
or
mov
push
mov
xchg
aad
fld
scas
cmps
rcr
jnp
loopne
dec
pop
shr
jecxz
pop
icebp
arpl
xor
mov
sub
lahf
mov
push
icebp
jge
xchg
into
dec
cwde
icebp
adc
adc
out
cmps
mov
out
push
xor
imul
push
ins
inc
dec
push
jno
movs
cmp
adc
adc
pop
stos
inc
push
mov
dec
push
mov
adc
jae
imul
in
adc
in
adc
push
jnp
mov
call
jmp
jl
rol
adc
in
and
push
fst
add
jns
jo
(bad)
jmp
sbb
push
scas
mov
ficomp
adc
mov
mov
mov
pop
cs
jo
scas
aaa
add
xor
sbb
sbb
push
pop
sbb
sbb
push
jnp
into
test
call
cmps
jmp
sbb
inc
enter
es
jecxz
or
iret
lods
xchg
shr
sub
push
xchg
fnstcw
xlat
and
imul
(bad)
pop
icebp
loope
jno
fs
mov
call
ss
mov
sbb
xor
test
adc
jbe
mov
xchg
(bad)
ja
mov
aaa
jecxz
xor
dec
pop
int3
mov
mov
xchg
pusha
aad
pop
jnp
add
xor
mov
lds
push
cwde
mov
imul
sbb
and
pusha
inc
dec
pushf
xor
jnp
dec
mul
lock
fadd
loop
push
xor
inc
(bad)
push
jle
sub
jne
fld
mov
stos
mov
idiv
jp
pop
out
dec
bound
out
dec
pop
mov
lea
push
imul
push
mov
xchg
mov
rcl
cli
loopne
sub
pop
push
push
cmps
inc
mov
fsub
(bad)
inc
fild
and
ror
xor
out
dec
fild
push
push
add
scas
add
sub
sub
push
retf
xchg
fsubr
cmp
and
fst
cmp
xlat
jne
retf
loope
add
xchg
stc
dec
pop
ja
mov
jecxz
xchg
xchg
mov
add
sub
in
inc
cs
rcl
aad
rol
outs
test
shr
mov
or
cmp
cmp
in
mov
lock
xor
xchg
add
push
call
mov
and
mov
ins
adc
mov
mov
call
push
mov
adc
dec
xchg
clc
sbb
loope
fnsave
out
push
cld
or
rol
call
add
mov
mov
daa
inc
jmp
dec
scas
das
dec
mov
mov
xchg
std
fnstsw
call
jbe
mov
mov
inc
test
jno
sbb
aad
add
(bad)
movs
or
popa
mov
mov
jmp
sbb
out
mov
hlt
add
mov
xchg
xchg
xchg
fdivp
push
adc
pop
scas
cmp
jno
ret
sub
cmps
scas
push
pop
xchg
add
fidiv
push
cmp
push
dec
adc
mov
push
jle
cmp
scas
(bad)
repnz
adc
adc
movs
mov
sub
jg
das
and
fiadd
out
loope
mov
mov
inc
mov
imul
ret
xchg
inc
xor
jge
popa
(bad)
push
mov
xor
xor
inc
sub
test
mov
jl
ret
jne
mov
in
jns
and
pop
inc
ins
imul
and
imul
pop
jp
pop
mov
jmp
(bad)
pop
jmp
fld
mov
jae
sub
push
ins
pop
push
aaa
js
add
sbb
mov
cdq
aas
xor
cmp
out
push
and
adc
mov
fist
mov
aaa
pop
and
fsubp
pop
cmp
retf
cmps
les
cmps
pop
inc
(bad)
push
sub
or
inc
or
movs
repz
cli
push
xor
and
mov
adc
(bad)
adc
inc
pop
fst
cmp
(bad)
mov
push
aad
mov
pop
dec
push
pushw
shl
mov
out
sahf
les
mov
cmp
cdq
fwait
aad
pop
pusha
adc
xor
loop
stos
sbb
xchg
loopne
fld
push
mov
dec
add
jmp
sub
mov
sub
jg
xchg
add
cmp
int
adc
xchg
leave
in
sti
jne
jb
add
mov
ins
lods
div
int
add
repz
movs
push
jle
fwait
aam
pop
xchg
jecxz
ja
mov
mov
cld
ins
sti
out
sar
out
mov
push
(bad)
imul
cmp
outs
ins
cs
rol
inc
call
sbb
mov
sbb
movaps
iret
add
inc
adc
cmp
mov
mov
out
js
push
add
push
pop
adc
(bad)
mov
pop
dec
test
sbb
inc
add
and
dec
jns
mov
in
setle
xor
mov
sbb
popa
rcr
sbb
xchg
dec
les
fadd
repz
enter
hlt
call
je
movs
rcr
mov
sub
sbb
inc
add
fiadd
gs
add
out
cmp
xor
mov
(bad)
into
mov
cmp
inc
jnp
jg
lock
xchg
dec
add
add
xor
dec
jmp
or
mov
retf
cs
xor
js
xchg
and
push
out
xchg
sbb
into
or
aad
push
adc
es
and
push
mov
clc
jp
sub
sub
jg
aad
lahf
mov
inc
shl
(bad)
in
mov
xor
in
aad
mov
mov
call
in
push
out
jbe
daa
xchg
mov
test
cwde
dec
jne
scas
ret
xchg
mov
push
jmp
fist
in
mov
or
mov
call
mov
xchg
sti
mov
push
imul
inc
mov
push
mov
sar
outs
or
mov
(bad)
pop
les
mov
popa
pop
push
jmp
jp
cmps
es
fdivr
xchg
push
popa
adc
add
pusha
dec
out
pop
jbe
xor
mov
or
(bad)
jmp
xchg
ret
dec
fisubr
jecxz
mov
sbb
fnsave
(bad)
dec
aad
and
push
imul
mov
jge
adc
mov
jne
and
fstp
ror
ret
lods
mov
outs
sti
dec
in
xor
loop
xchg
in
add
sub
or
sub
pop
retf
iret
pusha
jecxz
scas
add
(bad)
movs
not
ja
das
fnstenv
movs
jne
int
cwde
es
pop
push
fiadd
inc
dec
sbb
mov
and
mov
jge
lahf
dec
inc
inc
fnstenv
out
mov
fstp
add
mov
xor
push
push
(bad)
jmp
sub
cmp
shl
ds
movs
sub
mov
inc
pop
mov
mov
add
mov
and
ret
in
sub
loope
pushf
xor
imul
mov
fmul
xchg
retf
pop
adc
fsubr
xchg
push
or
or
push
jnp
fisub
mov
pop
pop
mov
and
rcr
daa
mov
stos
in
push
inc
movs
leave
inc
inc
in
dec
outs
addr16
mov
mov
scas
enter
or
std
fbstp
and
mov
push
in
sub
lds
lahf
push
jno
pop
(bad)
aad
pop
sbb
shr
dec
jns
test
ss
dec
xor
test
bound
repnz
frstor
int3
(bad)
sbb
int
sub
aad
retf
or
stos
xor
xchg
movs
gs
mov
es
sub
lods
push
outs
adc
mov
push
shl
dec
cmp
adc
ret
inc
je
mov
movs
jg
out
adc
es
scas
sub
xchg
daa
dec
xor
pop
sub
or
cmp
dec
pusha
cld
iret
fs
xchg
mov
pop
add
mov
or
jmp
or
pop
sbb
icebp
mov
add
inc
sub
push
mov
out
fwait
pop
cmp
rol
call
scas
movs
sub
popf
mov
xchg
sbb
bound
add
inc
cld
mov
cmp
cdq
inc
cmp
pop
xor
push
and
mov
retf
xchg
pop
jae
jg
cmps
mov
mov
pop
in
inc
cwde
call
fild
sbb
inc
rol
or
cmp
shl
call
gs
lea
nop
dec
cmp
push
popa
mov
mov
xchg
sub
pop
shl
push
stc
dec
or
xor
mov
sahf
jp
stos
in
pop
add
mov
push
jmp
xchg
pop
inc
xchg
aad
pop
xchg
fcom
nop
dec
cmp
bound
xchg
arpl
xlat
mov
push
xchg
jbe
cli
ins
stos
mov
push
(bad)
int
cmp
in
cmp
add
xchg
mov
adc
jns
cld
stos
sbb
cmp
stos
scas
dec
test
aam
or
cwde
dec
mov
(bad)
stos
adc
mov
lods
dec
(bad)
clc
(bad)
cmp
cvtps2pd
jge
inc
jnp
mov
mov
cmc
cdq
xor
sub
add
pop
shl
pop
adc
out
not
test
sbb
cmc
xchg
sahf
dec
repnz
pop
cmp
sub
mov
out
cmp
fs
les
sar
cld
icebp
rol
iret
and
in
gs
mov
jae
sbb
jle
dec
xor
jb
adc
push
mov
popa
push
cmp
add
fwait
push
fisubr
xchg
and
adc
jg
mov
call
mov
and
add
cmp
shr
xor
lahf
push
ds
adc
pop
scas
in
jne
xchg
inc
cmp
push
retf
cs
jl
in
aas
shl
test
mov
int3
pop
dec
dec
and
push
arpl
cmp
ins
push
pop
cmps
push
inc
popf
xor
call
sub
mov
xor
shl
test
cld
or
into
lea
push
jp
mov
sub
and
ss
mov
lahf
cdq
sti
add
mov
es
lahf
mov
mov
std
les
and
mov
mov
adc
and
sub
xor
imul
leave
xor
push
xor
dec
or
jge
stos
sbb
jo
ror
retf
fmul
mov
pop
mov
dec
es
xchg
bound
pop
push
jmp
in
xor
arpl
inc
pop
jl
dec
outs
ins
cmps
cdq
sbb
add
out
not
adc
adc
imul
fs
inc
xchg
fs
cld
mov
push
cmp
in
scas
jno
mov
fistp
in
sbb
xchg
inc
arpl
shl
es
jp
pusha
mov
clc
shl
test
ins
cli
gs
sub
sahf
pop
addr16
ds
pop
mov
inc
mov
jmp
xchg
or
mov
adc
add
cmps
push
jge
mov
shl
aaa
cld
je
enter
and
add
add
xchg
adc
add
ds
jo
nop
out
sub
push
add
arpl
inc
push
das
fnstenv
sbb
call
sub
aaa
push
push
dec
imul
mov
push
jo
mov
dec
repnz
int3
outs
dec
int3
xchg
push
sub
and
loopne
leave
pop
pop
fs
ss
movs
out
pushf
cmp
fs
mov
xlat
test
xlat
inc
or
out
retf
sub
sub
sti
pushf
into
aas
xchg
fst
or
jbe
movs
xor
lock
scas
or
add
push
mov
outs
test
sub
push
cmc
(bad)
lock
jb
imul
lea
out
and
pop
mov
lods
lods
mov
fldenv
jl
sub
fstp
imul
jnp
stc
xchg
test
mov
cld
mov
xor
rsqrtps
imul
push
int3
pop
pusha
mov
repz
mov
test
xchg
adc
enter
retf
jno
imul
ret
mov
popf
push
cmp
adc
push
sar
add
jl
pop
mov
and
arpl
scas
mov
mov
jg
push
int
test
inc
mov
sti
and
mov
popa
add
jbe
jecxz
retf
bound
jo
xor
imul
push
sub
rol
xor
jg
aad
ins
jmp
in
enter
xchg
gs
push
mov
stos
mov
pushf
push
xor
ret
jecxz
fwait
call
rcr
lea
sub
sub
imul
xor
mov
outs
sub
jo
cmc
or
jmp
sbb
call
push
loop
mov
adc
es
imul
and
popf
imul
push
inc
call
cmps
fldenv
movs
inc
jbe
lods
fisttp
push
jg
cmp
jp
sbb
inc
nop
sbb
dec
movs
imul
pushf
cld
push
mov
lds
mov
xchg
loopne
mov
jmp
sbb
xor
add
cmc
sub
out
xlat
jl
int3
fwait
addr16
inc
popa
pop
inc
dec
outs
stc
or
add
dec
pop
mov
pop
push
pop
mov
pop
stc
push
js
addr16
adc
repz
ret
repnz
clc
xchg
int3
adc
xor
or
cwde
popf
xchg
or
pop
sbb
add
mov
adc
mov
sub
xchg
and
iret
mov
cdq
lods
sub
dec
fst
inc
aaa
or
and
pop
shl
addr16
data16
add
test
ja
clc
push
jecxz
mov
(bad)
retf
in
es
mov
cmp
push
dec
adc
xchg
push
xchg
xchg
bnd
cdq
push
cmps
sbb
clc
push
outs
adc
test
aaa
pop
aaa
sub
pop
mov
mov
call
in
test
aad
sahf
aas
dec
cmp
mov
push
scas
les
and
das
push
outs
stc
pop
xor
mov
adc
(bad)
xor
mov
xchg
and
dec
fcom
mov
dec
nop
ins
aas
xchg
sub
popa
ins
stos
xor
(bad)
push
and
scas
dec
xchg
pop
or
lods
jge
adc
jns
xor
pop
scas
fstp
addr16
stos
fnstcw
push
push
gs
rol
jne
movs
retf
arpl
imul
shl
pushf
outs
(bad)
scas
pushf
xlat
fst
push
out
xchg
mov
xlat
pop
test
ins
add
sbb
sbb
pop
sub
mov
dec
clc
mov
ret
pop
(bad)
sub
adc
mov
xchg
out
icebp
sidtd
push
mov
icebp
test
pop
dec
popf
dec
jae
int
inc
xor
dec
xchg
int3
ss
mov
rol
xchg
aam
leave
hlt
mov
loopne
push
pop
psubsw
movs
div
not
mov
jnp
push
and
(bad)
repnz
add
idiv
sbb
adc
rcr
bound
jge
sub
fdivr
(bad)
cdq
add
dec
test
pushf
int3
and
sbb
mov
mov
pop
stc
inc
cwde
or
xchg
les
mov
xchg
pop
xchg
ret
dec
mov
stc
adc
jno
xchg
ds
ss
mov
jns
dec
and
mov
hlt
jb
or
ds
dec
movs
aam
add
inc
sub
adc
sbb
fldcw
sub
jg
sbb
sub
xor
adc
inc
in
adc
pop
repz
test
mov
js
in
push
adc
rcr
or
add
xchg
imul
cli
push
cs
imul
xor
jo
mov
div
inc
rcl
inc
mov
cmp
loope
adc
lds
jmp
push
mov
ins
jno
jg
loop
arpl
lock
out
out
pushf
sbb
add
(bad)
jl
sub
mov
and
push
call
push
or
mov
or
xchg
cmp
mov
rsm
sbb
xchg
cmc
(bad)
outs
mov
cmp
sbb
stc
fdivrp
inc
std
fst
mov
push
bound
sub
jae
xchg
cmp
mov
fcom
cli
inc
mov
call
cdq
rcr
aam
pop
outs
daa
out
jne
ins
jl
clc
stc
sbb
push
inc
jecxz
into
mov
jmp
xor
ret
mov
mov
mov
xor
ret
mov
add
fnstcw
ja
lods
test
and
pop
lds
cmp
xchg
dec
xor
xchg
push
mov
sub
adc
fisttp
mov
sti
idiv
push
call
or
mov
enter
jecxz
push
jne
sti
cmp
pop
(bad)
retf
inc
addr16
xor
inc
add
push
out
imul
mov
cli
ss
and
mov
mov
cmp
jp
ins
sti
inc
sub
loope
(bad)
nop
add
mul
add
sub
or
sub
push
pop
or
stc
inc
bound
cmp
repz
movs
mov
scas
push
add
push
cmps
mov
jge
pop
retf
scas
das
fnstenv
and
ret
cmp
shl
cld
rcl
mov
ror
(bad)
cs
cmps
mov
mov
cmp
push
loope
out
cmp
adc
mov
hlt
pop
out
jg
jne
outs
push
mov
sahf
mov
std
shr
jmp
sub
add
jle
jae
xor
pop
ins
or
stc
and
gs
movs
jecxz
mov
pop
cmps
ins
cmp
cwde
mov
mov
mov
ins
imul
xor
or
add
cmp
leave
hlt
movs
pop
cmp
mov
push
and
out
push
aam
xchg
mov
mov
shl
sbb
lea
loope
dec
adc
in
ret
inc
mov
dec
jno
rcr
pop
movs
retf
rcr
les
aam
mov
int
mul
fsubr
jmp
mov
cwde
pop
push
and
std
leave
push
daa
imul
push
push
mov
mov
dec
aaa
jnp
outs
stc
cdq
push
gs
cmps
cmp
rcr
test
pop
out
std
aam
lods
xchg
push
add
add
scas
add
pop
scas
fs
mov
imul
popf
aam
and
jmp
push
je
loope
mov
ins
movs
mov
in
(bad)
jle
in
sbb
retf
adc
ja
into
mov
dec
ret
sub
outs
lea
mov
cmp
xchg
imul
iret
and
cmp
je
(bad)
jmp
sbb
int3
popf
daa
les
add
ins
mov
push
imul
push
sbb
test
dec
fisttp
add
leave
add
test
gs
or
in
mov
push
scas
icebp
mov
arpl
xor
mov
push
retf
test
aam
sbb
cmp
arpl
neg
call
in
xlat
or
aad
stos
cmp
fdivrp
movs
xchg
cmp
bound
or
daa
adc
push
sti
retf
xchg
sub
ins
icebp
cmp
mov
jmp
loope
mov
mov
sbb
adc
push
jbe
and
test
dec
pushf
lods
test
call
sbb
clc
add
jns
and
cmp
ins
adc
and
and
push
lahf
(bad)
aad
mov
dec
dec
add
adc
xchg
push
xor
fisub
jle
xchg
scas
jbe
test
adc
dec
cmc
les
dec
ret
cmc
loopne
ret
add
jl
xor
test
fdivr
ja
aas
add
inc
popf
scas
adc
jns
test
jae
cmp
push
xchg
test
or
(bad)
in
ret
fsub
push
push
ins
inc
pop
in
adc
xchg
cmp
dec
fst
push
aaa
mov
ror
adc
loopne
push
addr16
call
into
aad
push
or
or
aas
add
mov
popfw
xchg
nop
div
cmc
mov
mov
or
in
jns
mov
in
and
mov
xchg
and
in
mov
test
sub
popf
loope
movs
sub
(bad)
pop
pop
std
ja
scas
adc
jbe
fsub
aas
jg
and
push
ret
and
retf
test
pop
push
stc
xor
dec
cmp
inc
out
inc
mov
(bad)
cli
or
cmp
cmp
jg
ds
je
mov
hlt
mov
shl
xchg
shl
xor
rcl
shl
dec
xchg
stos
out
xchg
mov
out
xlat
add
fstp
cwde
(bad)
(bad)
jb
dec
into
in
rcr
xor
cld
xor
popa
cmp
(bad)
outs
mov
fwait
test
or
lds
mov
mov
sbb
inc
ret
into
pop
fld
je
mov
cmp
and
pop
repz
sbb
hlt
int
retf
cmp
repnz
shr
add
daa
add
scas
push
int3
pop
das
dec
dec
fmul
mov
pmaddwd
loope
dec
sbb
dec
clc
jb
fnstenv
repz
sub
mov
inc
test
sub
test
adc
add
leave
std
jmp
call
popa
dec
xor
(bad)
in
or
out
inc
call
addr16
or
inc
add
scas
rcl
mov
add
pop
jmp
(bad)
fsubr
and
adc
ds
rcl
adc
nop
ror
repz
pop
call
mov
push
adc
je
inc
jecxz
adc
pop
test
daa
add
sahf
aam
fmulp
enter
ret
mov
adc
sub
(bad)
pop
lock
mov
xor
mov
sub
int
xchg
enter
retf
imul
cmp
cdq
adc
call
(bad)
jmp
mov
popf
test
(bad)
mov
popa
ficomp
setbe
or
je
dec
loop
mov
imul
and
xchg
push
jno
scas
add
pushf
lods
rcl
push
arpl
jno
add
mov
pop
pop
push
shr
mov
fldenv
repnz
in
sar
int3
rol
jne
sar
call
dec
inc
cmp
jno
or
add
jmp
cmp
sub
inc
xchg
cs
in
shl
mov
push
xlat
sbb
bound
jmp
mov
or
ss
add
test
push
sub
cwde
jno
movs
fdiv
add
adc
pop
mov
mov
sbb
fisubr
loop
mov
xchg
mov
test
adc
pushf
jns
mov
pop
cmp
call
adc
movzx
lods
mov
sub
loopne
pop
es
mov
dec
sbb
add
push
leave
jns
xchg
and
fwait
(bad)
jmp
bswap
sbb
fidivr
push
frstor
fild
iret
dec
xor
stc
sbb
add
inc
ror
std
lahf
jb
fisub
or
pop
or
sbb
jge
sub
repnz
xor
xor
push
xor
pop
sar
fsub
xor
jmp
adc
call
adc
xchg
pop
xchg
popf
es
scas
jp
test
jle
inc
and
loope
arpl
(bad)
xchg
push
jmp
fild
mov
repnz
stc
jae
or
mov
aam
pop
jmp
and
enter
popf
cmp
pop
jmp
in
mov
dec
cdq
jg
fwait
nop
mov
ss
rol
xchg
sbb
push
mov
(bad)
rcl
jnp
pushf
cmp
xchg
retf
popa
lahf
aam
sahf
lock
js
xor
mov
adc
test
dec
push
ins
mov
fs
jl
pop
xor
xor
cmp
movs
out
pop
sub
popf
mov
stos
jo
movs
das
dec
mov
(bad)
ins
mov
pop
mul
mov
pop
mov
sbb
mov
sbb
pop
pop
cmc
in
sbb
(bad)
(bad)
fisttp
jl
and
and
adc
popa
pop
out
and
pmuludq
push
mov
(bad)
out
mov
aas
mov
out
xchg
movs
or
out
icebp
fild
cmp
inc
and
add
lods
data16
ja
pop
inc
push
jae
push
pop
sub
in
fistp
add
mov
fld
stos
sub
sahf
lods
xchg
test
push
mov
sub
jo
mov
add
sbb
cmps
sbb
sbb
call
(bad)
mov
dec
(bad)
sbb
or
push
int3
pop
xor
ret
aaa
sub
pop
mov
addr16
gs
cmovae
out
pop
lods
pop
fisub
or
popf
(bad)
gs
(bad)
mov
arpl
xor
iret
push
cmps
sbb
xor
pusha
push
dec
std
clc
gs
lds
call
inc
inc
add
aaa
pushf
xor
sbb
pop
in
popa
(bad)
arpl
and
(bad)
pusha
jl
enter
push
scas
mov
push
mov
movs
jp
mov
mov
int3
loopne
loopne
cmp
loop
ret
adc
ds
stc
fstp
(bad)
ins
js
xor
push
in
mov
test
and
jo
xor
cmps
ins
mov
or
push
shr
cld
cld
nop
adc
and
add
and
push
push
mov
(bad)
fcmovnbe
ret
arpl
push
jb
cmp
adc
cmc
(bad)
mov
dec
enter
mov
es
push
cmp
cmp
fdiv
ja
inc
cdq
sub
in
xlat
inc
out
mov
inc
pop
xlat
xchg
xor
xchg
test
shl
(bad)
xlat
or
push
imul
cmp
mov
xchg
das
add
loopne
mov
or
sbb
hlt
lahf
mov
push
pop
jb
xor
(bad)
xchg
mov
lds
fstp
arpl
repz
sbb
imul
mov
pusha
je
ins
call
ret
dec
js
cli
movs
(bad)
imul
icebp
(bad)
scas
out
sahf
loopne
aad
cwde
xor
mov
stos
mov
and
inc
test
in
popa
nop
repz
xor
punpckldq
fadd
push
dec
sbb
adc
int3
es
daa
(bad)
xchg
icebp
mov
cld
loop
aaa
xchg
jbe
push
add
iret
jmp
sahf
jne
xchg
pop
adc
dec
fsubr
ret
sub
sub
sub
mov
mov
mov
or
jmp
movs
jg
jmp
loopne
push
mov
sub
je
ret
arpl
inc
shl
shl
cmp
dec
repz
sub
jbe
push
imul
jb
jns
cwde
sbb
fs
push
xlat
(bad)
sar
or
stc
or
into
cmc
adc
ret
adc
mov
jbe
inc
and
mov
retf
xchg
xor
test
mov
mov
sbb
aam
xor
in
arpl
(bad)
(bad)
sbb
loopne
out
call
and
jb
add
shl
mov
jle
data16
int
adc
xchg
jno
fs
xor
sub
(bad)
stos
(bad)
sub
mov
pop
push
add
loope
jno
pop
pop
adc
mov
in
dec
xchg
enter
dec
repnz
adc
popf
mov
sbb
(bad)
sar
dec
cmp
mov
mov
mov
dec
push
popf
cmp
sbb
repnz
mov
sub
xor
aam
add
loopne
sub
or
(bad)
jo
je
cdq
xor
mov
nop
je
pop
adc
xchg
push
sub
cli
ins
jl
pop
loop
(bad)
jb
hlt
pop
int3
adc
aas
xchg
push
jl
cld
fnstenv
cmc
sbb
cmp
pusha
xor
mov
shl
call
out
cmp
push
lea
mov
pop
daa
aaa
data16
xchg
cmp
push
fsub
mov
mov
xchg
fistp
outs
in
rol
xchg
sub
test
inc
xchg
pslld
jle
arpl
add
(bad)
xchg
xchg
sbb
or
rcl
add
div
ret
pop
outs
mov
mov
xchg
nop
pusha
lahf
sbb
bound
aas
and
dec
sti
cmp
xor
addr16
std
adc
out
(bad)
stc
in
push
dec
inc
cmps
out
dec
ror
push
mov
cmps
jb
sbb
dec
sub
inc
inc
or
repnz
pop
sbb
add
ror
push
std
ins
dec
out
movs
fiadd
pop
fucom
cmp
imul
push
call
cmp
cld
(bad)
mov
pop
sbb
inc
lods
xor
cmp
inc
jg
push
sub
xchg
cmp
mov
xchg
push
out
enter
sti
sub
add
icebp
mov
and
not
leave
test
outs
popf
and
mov
mov
fnstsw
xor
cld
(bad)
mov
int3
push
fmul
pop
sbb
mov
jnp
(bad)
lods
sub
mov
or
jns
xchg
je
scas
movs
mov
xchg
pushf
movs
lods
xchg
jbe
adc
xor
dec
dec
cmps
sub
xor
mov
pop
cwde
jae
jmp
jno
rol
dec
cmps
in
call
push
sbb
ret
stc
mov
mov
mov
in
pop
mov
gs
enter
push
sar
shl
imul
pop
pop
fadd
ficomp
imul
mov
(bad)
clc
aam
mov
nop
fisttp
sub
cmps
xor
add
ror
lahf
enter
dec
jl
outs
xor
xor
push
sar
cmps
add
adc
movs
add
push
cmp
out
dec
xchg
dec
sbb
cmp
push
mov
lods
mov
ret
ret
mov
xlat
cmc
cmc
push
sti
sbb
pop
mov
adc
loopne
in
dec
dec
xlat
inc
aaa
or
mov
pop
std
nop
xchg
jmp
jae
jo
dec
out
dec
div
aas
cmc
leave
ror
xchg
ffree
xlat
(bad)
xor
mov
loop
add
cmp
or
and
or
or
ficom
push
dec
cmps
dec
aas
mov
lods
mov
jae
arpl
add
push
mov
loop
and
es
xchg
sahf
not
pop
clc
fadd
cmc
ret
stos
loopne
cli
fadd
das
jbe
sub
push
(bad)
and
adc
call
mov
repnz
jbe
and
adc
or
jg
cdq
xor
pop
imul
xchg
push
sub
iret
mov
fsubr
push
lock
sub
bound
int
adc
ins
and
ds
push
pop
lds
mov
(bad)
pop
enter
into
pop
into
and
or
mov
mov
(bad)
jmp
(bad)
mov
cld
repnz
mov
sbb
cmps
int3
sub
addr16
into
ret
pushf
or
es
mov
inc
data16
rcl
cmps
imul
lods
mov
mov
push
das
sti
out
push
adc
jmp
popf
stos
div
xchg
fnstcw
pop
in
dec
shl
ins
jne
cmc
jmp
mov
sbb
dec
fstp
les
clc
cmp
imul
sbb
out
std
in
movs
arpl
or
push
adc
push
xchg
pop
jmp
xchg
xchg
mov
ret
mov
test
mov
push
adc
fistp
cmp
sahf
mov
mov
cmp
fistp
mov
inc
inc
push
movs
fdivr
dec
(bad)
ja
mov
xor
imul
push
daa
jnp
inc
aas
mov
fcomp
arpl
xlat
jmp
push
rol
repnz
add
js
jp
out
sbb
jp
dec
mov
(bad)
add
sub
cdq
xor
xchg
test
adc
add
es
test
out
push
sar
xchg
and
mov
push
mov
push
outs
imul
pop
jb
sahf
cs
lods
or
ss
inc
inc
xor
pop
xlat
mov
stc
retf
xor
sbb
sbb
mov
das
xor
outs
dec
add
ror
in
ss
mov
test
sub
cld
rcr
lods
fbld
cwde
iret
retf
adc
dec
mov
mov
popa
ss
cld
lods
cld
ds
idiv
aas
jnp
xor
mov
inc
push
fstp
fdiv
mov
cmp
or
loopne
add
loope
cmps
(bad)
repnz
idiv
inc
fwait
jg
out
movs
data16
fwait
and
add
ret
repz
mov
dec
dec
das
ret
or
sbb
ret
xchg
cmp
mov
frstor
adc
sahf
pop
pusha
bound
outs
gs
cld
iret
test
mov
sub
mov
add
xor
jp
(bad)
mov
scas
in
xor
mov
test
adc
cdq
das
ret
hlt
aaa
das
popa
out
mov
and
xchg
adc
push
add
test
scas
mov
jmp
mov
xor
inc
add
adc
or
push
and
inc
inc
inc
push
pusha
pop
jge
pop
mov
xchg
inc
rcl
pop
mov
xchg
in
(bad)
scas
into
scas
fwait
sbb
add
outs
push
jmp
xchg
js
fs
dec
xchg
lea
outs
pop
(bad)
or
(bad)
ret
push
ds
add
and
pop
sahf
fild
test
retf
xchg
repnz
inc
cmp
push
mov
aas
add
in
or
(bad)
(bad)
fs
cmp
lahf
mov
pusha
sbb
les
shl
and
test
cmps
push
test
jae
pop
sti
test
out
mov
int
(bad)
addr16
cmc
outs
sbb
pop
cmp
cmp
std
ret
xlat
sbb
adc
ret
test
and
xchg
xchg
add
push
or
icebp
mov
sub
pop
sar
cmps
je
jp
mov
aam
out
xor
aam
jmp
xchg
and
vmwrite
mov
dec
lahf
ret
inc
repz
mov
jmp
inc
gs
aas
inc
sub
gs
mov
cmp
mov
jl
cs
cmp
leave
jp
es
retf
fldenv
paddsb
(bad)
out
dec
test
sub
repz
cmp
cmc
test
cmp
cmp
std
sahf
jle
fs
cwde
in
fwait
jo
fidiv
ror
loope
or
mov
push
imul
pusha
lods
sub
and
aaa
stos
out
mov
fst
(bad)
pushf
push
fimul
fisub
pop
js
clc
sar
mov
jle
fidiv
adc
push
sbb
imul
adc
in
or
inc
push
shr
lods
inc
movs
sub
ins
jae
cwde
or
pop
xor
sub
jge
pushf
push
imul
inc
push
cdq
push
inc
bnd
inc
cld
mov
retf
icebp
adc
loop
push
fmul
cmp
xchg
push
cmps
in
into
shl
jnp
push
jae
loopne
test
xlat
push
mul
pop
mov
sub
ds
js
test
push
retf
int
fsub
das
stc
bound
stos
dec
sub
(bad)
outs
lea
dec
nop
out
repnz
xor
in
jecxz
mov
and
push
es
(bad)
pop
stc
xchg
sub
push
sub
cmp
mul
jge
(bad)
push
test
xchg
mov
sbb
mov
push
push
fcmovu
mov
and
or
fwait
sbb
push
mov
stc
ins
cdq
ja
arpl
or
mov
fwait
inc
jge
xchg
(bad)
shl
outs
imul
js
sti
aam
ss
push
arpl
mov
add
jbe
in
xor
adc
(bad)
int3
add
outs
mov
(bad)
adc
mov
sub
jo
mov
or
(bad)
imul
push
adc
cmp
push
dec
sub
cld
cli
lock
or
retf
arpl
fucomp
(bad)
mov
clc
fisttp
fstp
pop
sub
aas
je
pop
and
push
xor
in
shl
xchg
inc
out
into
and
aam
ret
scas
dec
sub
and
ror
into
jae
pop
jb
pop
loop
jmp
inc
je
inc
jge
push
lds
dec
xchg
or
mov
push
adc
push
cmp
xchg
rcr
not
cld
call
cmp
inc
stos
rcr
inc
scas
jp
test
mov
sahf
or
ds
sub
rcr
mov
mov
or
pop
ins
mov
or
sbb
jp
adc
mov
add
gs
mov
and
cmp
or
push
pop
stos
sub
mov
mov
sar
fisttp
pop
movs
test
sbb
arpl
xchg
mov
jo
pop
mov
sti
bound
mov
xchg
fldz
enter
jmp
aas
dec
sub
cli
cwde
loop
add
add
pop
pop
dec
jmp
push
stos
sbb
ja
cld
add
pop
cwde
test
mov
pushf
push
test
inc
cmp
mov
cmp
sahf
ja
sahf
ret
add
ja
mov
enter
push
lea
and
test
popa
mov
jae
push
or
xor
lea
inc
dec
out
jne
out
imul
xor
aam
jnp
out
sbb
(bad)
mov
mov
sbb
lds
sub
pop
jb
pand
int
popf
mov
mov
jge
ins
rcr
inc
shl
fadd
or
mov
cli
sahf
and
xchg
dec
movs
adc
je
nop
(bad)
ja
or
or
and
jns
or
and
xor
mov
adc
mov
sbb
push
dec
in
pop
bound
xchg
es
sar
aaa
es
fwait
push
das
mov
inc
adc
fsub
scas
loop
xchg
out
imul
fist
push
xchg
jns
aaa
mov
pop
adc
nop
pop
jo
dec
xchg
inc
imul
ins
imul
inc
mov
and
jecxz
movs
sbb
bound
sbb
and
ret
pop
std
repz
adc
clc
push
xor
mov
push
inc
push
fcom
test
gs
pushf
outs
lock
loop
lea
dec
sbb
cld
sub
pop
les
cmp
add
std
push
dec
push
clc
jno
add
pop
mov
dec
iret
loop
(bad)
xor
cmp
push
adc
lods
sub
test
sbb
dec
cs
idiv
fdivrp
dec
cmp
stc
or
inc
in
mov
jae
xor
jmp
pop
adc
mov
aas
in
dec
ds
arpl
or
cmps
mul
or
xchg
aaa
xor
inc
popa
(bad)
pop
xchg
fdivrp
xchg
adc
jmp
into
retf
(bad)
adc
fcmovnu
cmp
push
in
(bad)
in
lea
fsub
xchg
and
xlat
xchg
or
jge
(bad)
sbb
std
sbb
fwait
jmp
and
sub
adc
or
in
jmp
stos
jae
mov
sbb
outs
xor
cmp
gs
pop
sub
jmp
lods
or
add
dec
daa
jmp
mov
inc
es
pop
jno
daa
sub
jle
push
out
lock
mov
(bad)
mov
inc
jecxz
scas
cmp
jb
mov
or
pop
sub
shl
cmc
pusha
pop
das
out
dec
ffree
je
jg
or
(bad)
in
jno
xor
sbb
xor
inc
stc
or
shl
lods
inc
dec
mov
ret
jecxz
rcr
in
movs
cmp
fisubr
push
pop
xchg
sub
and
mov
std
outs
out
rol
xor
cmp
call
cmp
and
dec
adc
stc
jbe
pop
out
rcr
rol
push
inc
scas
addr16
out
add
stos
(bad)
sar
sub
in
int
cmp
add
or
(bad)
data16
shl
pop
std
in
adc
xlat
stos
aam
(bad)
repnz
nop
or
sub
xor
sbb
test
adc
sti
imul
es
mov
adc
jmp
add
mov
rcr
jg
enter
mov
test
mov
push
fld
outs
jl
nop
dec
adc
push
adc
ret
push
push
ret
and
rcr
cwde
xchg
rcr
push
and
shr
jne
mov
mov
cmp
mov
dec
xchg
loopne
xlat
cld
call
jl
mov
push
pop
jmp
and
int3
imul
inc
xor
pushf
enter
imul
or
lods
(bad)
fwait
mov
jg
shr
pusha
push
push
push
xchg
(bad)
(bad)
or
sub
dec
sbb
call
pushf
jbe
dec
sub
cwde
jle
cmp
sahf
pop
ror
and
add
fcomp
dec
or
std
pop
out
dec
sbb
mov
iret
arpl
and
sub
dec
fs
sbb
dec
adc
inc
xchg
hlt
push
or
mov
aad
rcr
mov
mov
cmp
inc
mov
push
adc
(bad)
out
jnp
push
add
pusha
mov
xchg
or
ja
iret
retf
jecxz
jbe
sar
push
mov
loop
add
or
test
jecxz
mov
push
adc
jb
dec
iret
sbb
jecxz
push
push
imul
mov
pop
and
or
fild
sahf
jns
sahf
push
pop
cld
fistp
stc
fsub
pop
mov
fist
or
bound
rcl
enter
pop
out
or
call
push
adc
push
lea
sub
xor
dec
push
sub
dec
mov
cmp
sar
dec
pop
dec
call
cli
inc
adc
imul
push
cdq
ja
cmc
outs
jno
repz
bound
adc
push
outs
or
test
xchg
add
lds
aam
sub
fsubp
dec
je
adc
outs
xchg
(bad)
in
xor
fbld
and
in
pop
movs
das
cmps
retf
in
and
sub
outs
fs
mov
push
sub
mov
out
pop
(bad)
and
sbb
sub
pop
sub
les
cdq
inc
mov
pushf
rcr
fs
mov
loopne
push
cdq
add
ds
add
adc
lods
mov
adc
fwait
lahf
jno
test
psllw
lods
jae
or
mov
repz
or
call
cli
xlat
sbb
mov
cs
jmp
xor
xchg
inc
(bad)
in
inc
or
rol
rcl
inc
pop
out
rol
aaa
push
loop
and
xchg
add
adc
neg
mov
cmp
mov
nop
lds
int
arpl
cmps
aam
jle
mov
dec
xchg
inc
pop
mov
pop
jmp
dec
dec
push
or
cmp
inc
es
sahf
sbb
out
jbe
stos
inc
mov
jp
aam
movs
jge
out
or
mov
add
lock
jg
sbb
sbb
lock
int
dec
xchg
fidivr
and
inc
jmp
add
stos
inc
sbb
fld
test
inc
fimul
stc
mov
sbb
mov
mov
push
shl
cmp
in
add
loope
(bad)
and
movups
sbb
stos
repz
iret
add
js
add
jmp
in
shl
sub
xchg
outs
scas
xor
jbe
test
imul
idiv
mov
mov
jb
dec
fstp
mov
hlt
ret
mov
jecxz
cmps
test
jae
adc
add
inc
cmp
stos
cs
les
mov
les
xor
in
push
out
sub
add
cdq
enter
retf
ret
pushf
aaa
daa
arpl
aas
add
adc
push
iret
cmp
or
pop
jmp
mov
imul
pop
daa
je
sbb
(bad)
ja
cmp
lock
shl
movs
inc
adc
ja
fstp
test
pop
mov
(bad)
xchg
cs
icebp
gs
add
loop
popf
sub
es
jmp
xchg
or
jle
fisttp
pop
ror
test
add
pushf
js
jae
sbb
sbb
sub
arpl
inc
in
mov
jl
int3
sub
push
xlat
xchg
enter
mov
stos
xchg
rol
mov
inc
(bad)
aas
and
bound
add
and
sar
lock
repnz
or
cmp
es
adc
push
test
arpl
in
push
adc
pop
mov
mov
js
outs
(bad)
push
lahf
retf
xchg
mov
call
cmps
mov
inc
retf
adc
jg
ss
dec
push
xchg
cmp
mov
out
push
add
sahf
mov
fcmovbe
jne
push
push
mov
push
jmp
adc
int3
push
imul
xor
cmp
xor
out
std
or
pusha
jo
and
and
pop
ret
add
ret
push
sahf
in
mov
mov
scas
cmc
xchg
or
xchg
dec
dec
pop
imul
add
(bad)
pop
jnp
js
xor
stc
call
or
xor
inc
shr
sbb
jle
mov
inc
dec
cmc
mov
inc
xchg
test
pop
push
dec
xchg
lahf
cmovae
pop
in
shl
cdq
inc
push
pop
or
dec
inc
and
mov
(bad)
xor
mov
mov
adc
inc
outs
mov
jnp
popa
inc
push
scas
pop
(bad)
mov
dec
int
ret
sub
inc
push
jmp
sub
outs
inc
and
and
mov
and
pop
mov
sub
push
mov
ds
mov
setbe
jo
(bad)
sub
adc
stos
inc
add
ret
jnp
loope
xchg
sub
cld
fcom
mov
dec
xor
rcl
xchg
sub
mov
cmp
jnp
or
int
fcmovnbe
pop
jno
cdq
jae
add
adc
mov
add
xchg
jmp
inc
push
into
out
mov
pop
mov
jg
out
movs
fisttp
xchg
mov
fdivrp
mov
add
outs
push
aas
jmp
pusha
mov
inc
cld
jmp
pop
fldcw
pop
xor
movs
es
cld
push
call
cmp
fs
or
cmp
pop
fwait
mov
mov
xor
mul
jo
xchg
push
mov
sbb
push
pop
cs
(bad)
mov
loop
mov
popf
les
xchg
mov
xor
rcr
dec
call
fcom
xchg
aad
in
loop
xchg
xchg
nop
jmp
sub
pop
hlt
mov
add
pop
retf
iret
sub
lods
cmp
stos
pop
loopne
ins
popf
pushf
fwait
add
mov
lds
daa
cli
mov
sar
mov
mov
ins
mov
movs
dec
stos
into
jge
mov
ret
std
dec
mov
imul
fs
push
mov
sub
daa
sub
push
repz
cwde
xchg
or
mov
mov
sub
pop
fsubr
push
rcr
pop
sbb
inc
js
sti
sbb
mov
sahf
lods
inc
xor
loop
pop
jb
xor
jo
pop
xor
mov
inc
jg
sbb
leave
mov
fsub
jno
shr
inc
iret
in
or
xor
inc
mov
cmp
lock
and
mov
dec
bound
shr
fsub
jg
popf
or
mov
fs
add
push
inc
je
push
and
pop
mov
push
adc
adc
repz
jb
rcr
loopne
pop
cmp
js
dec
cmp
repnz
mov
inc
mov
retf
sub
cmp
ins
popa
jge
fidivr
pop
dec
in
fisubr
xor
bound
inc
pop
cwde
retf
cdq
add
bound
cmps
or
jno
ss
jl
cli
dec
ror
imul
mov
push
mov
fcmovu
loop
add
sub
(bad)
mov
mov
sbb
cmps
out
push
std
cdq
jae
xchg
stc
adc
pop
repnz
or
pop
lods
push
adc
outs
lea
ss
or
mov
pop
loop
mov
daa
mov
push
repz
outs
or
icebp
mov
not
es
xchg
sti
push
adc
stos
daa
call
sub
mov
leave
test
xchg
jae
test
mov
mov
cdq
and
gs
je
add
fistp
call
jecxz
pop
cmp
fs
push
mov
pop
inc
loope
test
and
in
mov
or
(bad)
dec
dec
mov
(bad)
fadd
mov
jb
mov
pop
adc
jg
cmc
jl
push
pop
cmc
sub
imul
sub
jle
loop
xor
(bad)
xlat
xchg
cmp
adc
mov
aaa
jecxz
lds
shl
lahf
ret
push
mov
push
rcl
jno
ins
or
xchg
shr
cmp
mov
or
xchg
cmp
test
or
lds
mov
int3
sub
mov
ror
movs
push
push
sbb
enter
ins
and
pop
mov
cmp
bound
hlt
push
ins
in
pop
push
or
addr16
test
(bad)
push
not
ret
jmp
xchg
aam
sub
jne
mov
dec
sub
mov
inc
mov
xor
mov
jge
adc
cmps
push
fild
arpl
mov
xchg
mul
cmps
scas
pop
dec
ja
pop
mov
ins
sbb
cmp
pushf
adc
jae
jp
sbb
jae
mov
call
in
outs
jg
rcr
and
mov
jnp
add
or
dec
or
or
sbb
jmp
(bad)
xchg
pop
pop
push
mov
jp
mov
lods
fisttp
dec
imul
mov
lock
gs
cmp
sub
adc
adc
rcr
fisub
arpl
xchg
or
and
sub
bound
xchg
sahf
cli
xor
adc
jp
iret
lahf
and
and
inc
cwde
ss
test
add
jge
sbb
sbb
dec
popa
mov
fild
add
mov
dec
dec
cmc
add
pushf
repz
dec
pop
or
sbb
pop
mov
stc
push
leave
movs
xor
out
out
popa
xor
dec
mov
mov
dec
push
dec
jo
xchg
jae
(bad)
jb
not
jbe
dec
add
mov
xor
bound
scas
fmul
dec
mov
fild
or
lahf
add
stc
add
(bad)
stos
loopne
push
jl
rcl
ret
lds
ins
outs
or
dec
xor
ss
movs
add
out
and
lock
push
ja
out
fcom
jnp
dec
or
xor
enter
das
jbe
pop
sbb
ins
mov
aaa
or
(bad)
jl
popf
dec
add
sub
sub
lea
mov
loopne
cmp
lahf
cmc
lahf
jmp
jmp
vpackssdw
dec
out
out
mov
pop
jecxz
js
arpl
sub
ficom
cwde
mov
movs
dec
dec
and
mov
jle
aas
out
sub
mov
iret
pushf
retf
call
ins
xor
daa
push
or
or
mov
mov
sub
fst
out
repz
call
or
fiadd
xor
(bad)
retf
mov
or
lods
aad
in
cmps
pop
inc
in
int
or
in
fdiv
cmc
loopne
lods
dec
sbb
scas
mov
stos
jmp
jnp
and
lods
movs
pop
add
inc
pop
jns
retf
push
pop
mov
icebp
das
and
mov
scas
loop
rcr
stos
add
cmp
push
and
and
jmp
imul
inc
dec
scas
mov
or
cli
add
cmp
xchg
test
jp
daa
jmp
jb
jge
(bad)
xchg
ret
push
in
or
les
stos
inc
in
sbb
jnp
fucomip
loop
adc
je
xchg
mov
or
inc
loopne
or
push
in
scas
pusha
dec
cmp
jg
adc
pusha
mov
inc
icebp
aam
cmp
pop
cmp
jno
sbb
arpl
adc
(bad)
(bad)
xchg
push
push
pop
leave
pop
mul
mov
cdq
adc
push
mov
sub
dec
ficom
ret
push
(bad)
retf
jb
jmp
xor
push
dec
jb
ins
xchg
aas
rcl
dec
add
mov
nop
pop
mov
jecxz
xchg
and
loopne
push
push
sub
out
add
(bad)
iret
cmp
inc
aad
loop
fwait
das
(bad)
and
aas
jbe
ja
mov
imul
push
daa
popf
jg
mov
mov
cmps
cwde
ins
sub
mov
jns
add
mov
shl
sub
hlt
inc
mov
and
xchg
xchg
inc
or
mov
gs
bound
rol
fild
mov
lea
mov
fmul
aaa
pushf
xchg
xor
out
popf
cmc
or
jle
adc
push
dec
retf
mov
test
repnz
jbe
adc
loopne
sbb
cdq
fimul
lock
(bad)
sti
fistp
sub
mul
jno
sti
mov
push
out
jle
iret
xor
jle
inc
mov
scas
das
test
out
imul
cmp
push
push
(bad)
add
nop
or
pop
rol
sub
jmp
push
mov
shr
mov
mov
dec
loopne
fisubr
ret
inc
or
loop
sti
add
shl
xor
hlt
aad
loopne
sbb
add
dec
xchg
sub
rol
cmps
ss
out
pusha
rcl
inc
xor
repz
retf
and
sub
sub
sar
dec
cld
out
cmps
sub
mul
sbb
pusha
pop
stos
inc
aas
mov
push
add
nop
es
shl
adc
lods
pop
shr
scas
(bad)
(bad)
retf
popa
xor
pusha
sub
in
cmp
mov
adc
rcr
add
adc
mov
pop
cld
jb
sub
call
ins
adc
fwait
mov
mov
in
stos
adc
xor
retf
jbe
outs
outs
sub
emms
iret
dec
pusha
data16
add
mov
outs
mov
in
and
xor
sbb
push
das
jg
push
cmp
sahf
mov
lods
jl
adc
cmp
dec
jg
fistp
xor
fst
jnp
jo
leave
popa
arpl
imul
ds
loope
dec
add
mov
mov
xchg
or
push
les
std
push
or
jg
xchg
cmps
mov
fimul
mov
xchg
push
outs
add
rcr
out
stos
pushf
jp
sub
xchg
jmp
test
dec
in
fnstenv
jbe
add
sbb
inc
movs
mov
int3
xor
pop
cdq
enter
or
or
cmps
je
jp
and
repnz
popf
imul
pop
lahf
mov
mov
scas
aad
mov
fmul
clc
sub
out
inc
ja
inc
pushf
adc
das
inc
adc
fsub
jno
test
es
sbb
inc
out
out
data16
aad
fs
out
sbb
mov
pop
push
jae
sbb
and
mov
(bad)
loopne
fadd
jle
scas
cmp
ds
mov
arpl
mov
mov
mov
add
loope
dec
dec
repnz
or
sbb
out
jns
ins
xchg
sbb
sub
dec
daa
sti
pop
movs
jle
scas
lods
jo
adc
adc
mov
push
jne
mov
mov
sub
bound
dec
fild
cmps
mov
imul
in
dec
adc
inc
xor
not
mov
ret
test
inc
and
(bad)
hlt
(bad)
fiadd
imul
ret
push
mov
xchg
and
les
xor
push
(bad)
daa
jno
push
stc
push
mov
mov
pop
pop
or
icebp
mov
movs
aad
cmps
push
cdq
cdq
inc
(bad)
and
or
stc
lods
cmp
ret
std
neg
pop
loope
jns
push
retf
inc
addr16
inc
aas
or
ret
lds
mov
or
xchg
retf
out
cwde
push
in
movs
ud1
pop
adc
or
adc
push
outs
jg
dec
popa
push
and
hlt
jmp
xor
(bad)
cmp
pop
sbb
sbb
cmp
mov
je
repnz
cs
and
aam
cs
in
popf
out
mov
xor
pop
xchg
push
push
mov
lods
out
ins
xor
jb
pusha
hlt
ret
fadd
ret
dec
mov
lahf
dec
mov
clc
push
adc
push
mov
jo
call
pop
ins
imul
stos
aaa
pop
lahf
add
aaa
mov
stos
into
mov
sahf
xchg
dec
fcomip
fisttp
aas
adc
fisubr
jae
mov
inc
add
mov
sub
inc
mov
ins
mov
mov
pop
fiadd
lea
and
pop
adc
cmps
dec
lahf
add
imul
repnz
mov
cmp
mov
fwait
out
jmp
ja
dec
adc
icebp
inc
push
jmp
fwait
jle
outs
xlat
sar
pop
call
(bad)
icebp
cmps
inc
lahf
enter
xorps
pop
in
in
(bad)
mov
add
pop
ja
gs
xchg
push
mov
and
xor
sub
sbb
jecxz
push
sbb
ror
inc
inc
imul
repz
pop
sahf
imul
stos
retf
cdq
adc
mov
rcr
dec
sub
dec
adc
or
xor
dec
mov
sahf
les
sahf
iret
cmps
xlat
(bad)
jmp
popf
test
iret
pushf
mov
fcomp
xor
retf
scas
leave
nop
lahf
xor
mov
jg
outs
daa
fwait
retf
bound
jl
scas
aam
inc
cmp
retf
mov
push
stos
shl
enter
retf
nop
jb
and
mov
mov
int
xchg
mov
mov
push
jnp
sbb
sbb
pusha
jnp
xchg
scas
jno
in
inc
cmp
outs
push
stc
fild
test
cld
push
pop
clc
div
mov
js
mov
adc
cmp
jo
jp
int3
lods
or
push
aaa
jne
aad
inc
(bad)
mov
add
inc
shr
pop
mov
ds
mov
xchg
jae
fisub
mov
or
pop
push
mov
dec
mov
stos
adc
mov
aam
add
jbe
sahf
jle
nop
cmp
jecxz
cwde
xchg
mov
fcom
push
imul
sbb
xor
jle
inc
inc
sub
call
daa
movq
adc
jo
repz
xor
out
dec
ror
lock
and
mov
or
out
ret
push
and
inc
mov
sbb
mov
dec
movs
int3
or
xchg
js
(bad)
out
pop
aam
imul
int
lods
dec
push
(bad)
in
xchg
nop
iret
inc
mov
push
test
aas
shr
jbe
mov
fdivr
ret
and
xlat
fs
bound
dec
fs
out
xchg
sub
lea
fadd
outs
fldenv
sbb
add
add
adc
outs
xchg
sub
fcom
cmp
lock
fs
jg
cli
aam
mov
cmp
sub
sbb
xor
xchg
sbb
cmp
sub
popf
pop
pop
mov
addr16
push
psrad
mov
shl
repnz
ss
enterw
and
push
out
dec
aam
push
repnz
outs
and
mov
add
xchg
gs
jmp
mov
loope
pop
(bad)
sub
(bad)
mov
sub
inc
shl
cmc
or
dec
outs
sub
repnz
daa
fstp
fisttp
pushf
iret
call
inc
leave
xchg
pop
mov
mov
retf
push
and
fimul
cli
aaa
call
je
add
inc
and
dec
in
xor
add
and
jmp
push
loop
adc
cmp
movs
cs
fld
fcomp
and
jne
dec
mov
jbe
hlt
mov
loopne
xchg
aas
mov
ficom
(bad)
xlat
fld
clc
jo
pop
push
inc
add
push
mov
mov
jmp
sti
adc
js
int
fmul
(bad)
in
push
mov
into
loop
pop
les
or
jp
sub
sub
mov
cwde
cli
out
mov
cmp
inc
int
sti
fmul
add
push
imul
cmps
lods
sbb
call
sti
int3
mov
dec
int3
pop
ja
inc
fild
jnp
mov
xor
xor
sbb
repnz
dec
pop
scas
dec
mov
es
inc
dec
aaa
jmp
pop
jmp
dec
(bad)
retf
lea
and
mov
pop
ins
test
out
jl
mul
das
push
sbb
sbb
dec
js
aam
hlt
dec
push
lods
lds
(bad)
cmps
mov
lock
mov
cmc
gs
mov
call
mov
mov
jmp
and
aas
dec
int3
sbb
mov
and
repnz
fucom
aam
dec
addr16
outs
mov
in
xchg
mov
sbb
jmp
push
or
ins
loopne
xchg
das
xchg
inc
fprem
fsub
push
push
sub
sub
retf
push
mov
jg
dec
push
fsub
add
je
push
sub
test
dec
sbb
mov
jno
movs
loop
and
arpl
jge
and
das
cld
mov
mov
xchg
stos
daa
shl
cmp
pushf
aad
int3
out
xchg
out
push
pop
sbb
xchg
les
cmc
xchg
clc
dec
sub
nop
inc
pop
jge
xchg
dec
fisub
or
mov
mov
div
in
jmp
lea
mov
mov
fnstsw
push
pop
push
arpl
in
test
jne
inc
or
inc
dec
(bad)
ret
inc
dec
in
jge
xor
push
les
call
push
xchg
into
inc
aad
mov
bound
repz
dec
jp
push
imul
and
aam
and
xchg
bound
sbb
jecxz
fistp
jg
sahf
xchg
add
shl
lods
push
jp
jo
mov
movs
inc
icebp
cs
add
ror
push
xchg
jae
mov
imul
je
xchg
test
movs
jne
xchg
add
loopne
add
pushf
iret
call
xchg
sbb
push
push
sar
daa
iret
outs
sti
xchg
adc
out
sub
pop
sub
fidiv
loop
ror
inc
pop
pushf
inc
test
jo
cs
add
cs
movs
jecxz
hlt
adc
jne
mov
cmp
loop
(bad)
aam
outs
test
pop
hlt
dec
sub
out
mov
clc
xor
xchg
cmp
call
retf
pop
jecxz
jle
adc
xchg
adc
aad
dec
pop
cmp
sub
das
gs
retf
aam
sub
mov
imul
push
or
add
push
lods
pop
movs
arpl
sbb
cmp
xor
push
fild
mul
add
arpl
es
jmp
aaa
push
inc
icebp
dec
mov
das
mov
or
push
sbb
nop
pop
movs
es
into
stos
xchg
ret
cmp
stos
mov
xchg
fiadd
jp
sbb
retf
sbb
or
cs
xor
xchg
jmp
das
cmp
hlt
cmp
pusha
out
jecxz
dec
or
jl
mov
fld
int3
add
je
dec
(bad)
iret
xor
jecxz
pop
loop
xchg
or
out
push
mov
sahf
pop
and
fs
nop
ret
aam
sub
mov
add
stos
fucomp
hlt
push
pop
adc
in
stos
or
ins
dec
bound
inc
mov
xor
sub
jle
mov
addr16
sahf
test
sbb
aam
dec
pop
or
jl
fadd
popf
fs
into
mov
push
sbb
sub
fst
mov
jmp
cmps
dec
pop
and
push
push
adc
push
imul
jno
shld
adc
add
add
test
mov
cs
std
sti
jp
inc
gs
mov
mov
jae
xchg
int
js
sbb
jg
enter
push
pop
imul
loopne
push
mov
pushf
add
lea
ins
cmp
push
fdiv
mov
cli
xor
push
iret
sub
mov
cli
sub
cmps
inc
cwde
loopne
sbb
push
add
lods
cmp
mov
repnz
sub
or
add
cdq
xor
mov
xor
stc
sub
cmp
mov
jl
jnp
add
jmp
pop
rol
test
jne
inc
rol
and
xchg
push
(bad)
dec
das
shl
fcomip
pushf
nop
sub
or
call
imul
cli
ficomp
adc
mov
enter
ss
aad
pop
ret
in
mov
enter
(bad)
or
lods
retf
sbb
in
adc
enter
push
jne
dec
fwait
mov
nop
je
pop
ds
push
cmp
imul
mov
jl
sub
mov
xor
mov
lock
(bad)
sub
(bad)
hlt
fwait
fs
sahf
xchg
sbb
push
retf
std
push
movs
mov
inc
sahf
into
push
jae
and
cdq
fild
adc
sub
or
aam
pop
cmp
and
ja
(bad)
fst
cmp
jno
ins
mov
adc
xor
pop
dec
cs
mov
js
(bad)
push
push
inc
inc
call
or
adc
mov
mov
xor
inc
es
mov
sar
daa
mov
imul
aam
cmp
sub
idiv
mov
fdivrp
out
mov
inc
cmp
or
or
dec
inc
es
fstp
mov
shl
mov
test
jns
pop
cmps
xor
mov
mov
hlt
das
aaa
cmp
test
mov
fs
in
int3
in
mov
mov
sbb
fld
enter
pop
imul
mov
inc
js
imul
sub
lods
pop
fcom
(bad)
xchg
add
xor
(bad)
mov
push
mov
push
jp
push
add
(bad)
mov
lgs
xor
das
call
jmp
push
scas
repz
push
hlt
mov
popf
pop
mov
shr
xor
ret
mov
dec
mov
xor
repz
inc
pop
enter
add
or
inc
jle
pop
mov
or
and
cdq
push
push
daa
(bad)
push
fcomip
and
cmp
(bad)
ds
in
jl
les
mov
cmc
dec
push
mov
adc
jmp
xchg
jb
mov
jbe
test
dec
ret
jae
mov
inc
cmp
outs
cs
adc
adc
cmp
popa
ins
dec
mov
ja
mov
dec
mov
mov
and
mov
or
mov
out
jp
loope
sub
adc
lds
mov
pop
push
sbb
(bad)
fist
sub
cdq
(bad)
add
adc
jg
cmp
in
mov
sbb
fidivr
aad
call
repnz
mov
mov
aam
popf
mov
sbb
(bad)
sbb
rol
jge
and
mov
push
xor
jecxz
jge
push
ficomp
pxor
mov
mov
and
outs
jb
sbb
mov
imul
bound
jmp
jnp
cmps
adc
repz
xor
or
jle
jmp
mov
cmp
mov
mov
jnp
mov
sub
sbb
nop
sub
mov
mov
jnp
dec
add
ins
test
in
frstor
and
pop
daa
mov
and
(bad)
jmp
inc
adc
rcl
fwait
stc
sbb
sub
ins
mov
pusha
sbb
mov
pop
xor
dec
inc
call
nop
shl
scas
js
shr
clc
scas
mov
int3
cld
fnstsw
push
push
test
push
out
nop
movs
xchg
cmp
pushf
repz
add
push
sbb
aaa
mov
mov
pop
shl
cdq
fsub
inc
add
sti
lods
xchg
fld
les
pusha
in
test
cs
mov
cmp
sbb
pop
mov
sbb
xchg
inc
dec
jmp
push
les
jmp
jle
xor
inc
push
and
aam
ja
inc
add
add
jle
stc
nop
inc
mov
outs
scas
add
aam
or
sub
push
scas
(bad)
aad
push
in
mov
mov
and
fcmovb
nop
mov
outs
dec
xor
xchg
pop
mov
outs
jnp
jmp
and
repnz
push
lahf
sbb
es
add
jmp
and
push
int
dec
retf
stos
jmp
outs
mov
cmps
jle
inc
stos
into
xlat
adc
ret
test
mov
out
add
fscale
aad
repz
adc
addr16
and
jno
jg
rcl
(bad)
imul
pop
cmp
jg
pop
aaa
sbb
mov
and
adc
xchg
add
push
test
stos
in
dec
idiv
data16
sbb
push
mov
cmp
iret
jb
inc
sbb
xor
dec
cwde
ror
xlat
loopne
js
and
sbb
sub
xor
mov
test
mov
jb
push
xor
outs
jne
fsubr
retf
lahf
mov
dec
cld
jg
xor
icebp
outs
fnstcw
ss
jmp
cwde
xor
mov
mov
jb
adc
adc
(bad)
xchg
mov
adc
int
mov
or
xor
lock
out
sbb
adc
mov
or
adc
dec
pop
inc
mov
jmp
pop
int
lahf
popa
mov
loope
adc
pop
push
popa
sbb
movs
leave
cdq
mov
ret
mov
es
adc
inc
mov
cmc
mov
push
pop
ret
cld
cmp
adc
jns
data16
and
mov
scas
in
(bad)
xor
bound
cmps
push
push
cmp
and
sbb
jmp
xor
push
scas
dec
pop
and
leave
mov
mov
inc
call
loopne
fdivr
mov
add
lock
and
repz
mov
int
dec
xor
in
or
in
fcmovu
mov
dec
dec
cli
xor
push
adc
enter
or
inc
movs
or
rcr
int3
inc
sbb
or
cmp
sub
in
and
dec
data16
or
std
inc
imul
gs
xor
jbe
repz
adc
not
mov
jnp
pushf
or
sbb
jle
mov
iret
sbb
inc
adc
jne
pop
push
inc
sar
cmps
cdq
pop
jge
int3
xchg
js
retf
xchg
je
adc
mov
call
pop
data16
adc
cmps
mov
xchg
popa
sbb
mov
rol
push
arpl
movs
sub
inc
xchg
stos
push
rcl
lods
dec
xor
dec
mov
bt
mov
popf
(bad)
fld
cdq
pop
adc
(bad)
inc
cmps
add
mov
xor
mov
es
sbb
pop
pop
mov
mov
data16
leave
movs
inc
lock
into
retf
push
mul
dec
push
retf
mov
cmp
pop
dec
push
sbb
loop
mov
jne
add
(bad)
je
cmp
in
clc
fist
lea
(bad)
mov
std
jnp
push
xlat
jecxz
outs
and
into
mov
xor
sub
pop
ins
cmp
xchg
or
push
inc
or
and
sub
or
scas
push
je
push
stos
dec
leave
cmp
push
mov
cmp
dec
cmps
imul
dec
std
ret
pop
pusha
or
pop
out
shl
rcl
aad
leave
jns
xor
and
aaa
imul
cmc
xchg
mov
push
or
xchg
pop
push
or
or
push
dec
mov
add
dec
pop
ins
or
out
ins
test
and
dec
js
push
push
retf
cmps
int
mov
push
cmps
and
test
sldt
loop
and
clc
out
push
xchg
dec
mov
leave
aam
push
sub
push
mov
sbb
cwde
std
lahf
pop
sti
call
push
pop
mov
xchg
out
and
sub
shr
jle
pop
sub
sbb
leave
or
mov
mov
in
xchg
ins
std
or
pushf
aam
cmps
xor
sub
shl
pop
push
movs
nop
stc
fs
adc
jbe
sbb
mov
jns
mov
adc
mov
dec
push
int
(bad)
fisubr
sub
add
sti
mov
ins
frstor
lea
sar
loopne
lahf
jg
retf
call
dec
or
xchg
mov
mov
push
lahf
pushf
sbb
loopne
jecxz
adc
call
lods
dec
stos
sti
imul
pop
jnp
mov
jmp
fstp
mov
dec
(bad)
dec
inc
jns
xor
imul
sbb
sub
ja
pop
loope
shl
adc
aam
arpl
retf
jnp
mov
lods
dec
cs
and
xchg
fistp
(bad)
and
outs
add
in
pop
test
dec
jae
inc
mov
pusha
dec
pop
int3
jno
inc
jae
fcomp
shl
inc
sbb
lahf
dec
ja
inc
mov
ret
inc
fwait
or
xchg
dec
mov
stos
inc
es
xor
arpl
cmp
mov
mov
inc
mov
xor
mov
lock
mov
jno
push
test
iret
pop
and
xchg
jae
cmc
jecxz
and
not
push
mov
fisttp
mov
sbb
push
pop
rcr
fsubrp
aad
popf
inc
add
xchg
push
dec
cld
fnstcw
retf
cmps
adc
shr
sbb
fadd
sub
and
sbb
fst
or
mov
sub
xchg
ret
push
in
mov
fistp
xor
xchg
lahf
jb
xlat
xor
data16
stc
setns
mov
out
add
(bad)
mov
add
mov
or
clc
les
inc
mov
daa
or
lods
mov
rol
jl
add
add
aas
jge
int3
or
mov
call
jo
nop
(bad)
sub
inc
(bad)
popa
rcr
mov
fidiv
jmp
pop
sub
rcr
jge
rcr
das
sti
inc
repnz
jae
push
in
push
jb
xor
iret
cli
mov
cmp
int3
sbb
mov
not
inc
arpl
push
jo
mov
retf
mov
gs
dec
pop
cdq
xchg
fcmovnu
dec
add
call
and
stc
je
dec
js
cmp
retf
push
cmp
push
ds
sbb
cmps
cli
xor
push
mov
dec
push
test
cdq
or
vsqrtsd
jl
sbb
fisub
ficomp
sahf
mov
jmp
cmp
je
movs
cld
cmp
pop
sahf
loope
mov
push
js
mov
aam
sbb
sub
push
inc
or
inc
and
xchg
(bad)
(bad)
movs
imul
cmp
inc
sbb
aad
fdiv
pop
je
xchg
and
mov
sbb
cmp
and
mov
cwde
xor
je
imul
bound
ret
or
xor
nop
dec
popa
and
std
or
cmc
ins
xor
push
jmp
xor
sub
retf
inc
ins
jb
pushf
and
outs
fisttp
sub
lods
retf
sub
test
mov
sbb
sbb
or
sbb
in
xchg
and
mov
pop
xor
xor
add
imul
cmp
cmc
push
dec
xchg
add
cld
and
fmul
sub
mov
add
or
in
mov
push
mov
dec
jb
mov
sbb
mov
(bad)
std
lds
mov
jbe
pop
dec
pop
call
jmp
call
pop
retf
or
dec
in
mov
mov
jo
jg
imul
mov
rol
pop
lock
cmp
enter
retf
jno
mov
add
sbb
and
cmp
ret
mov
in
daa
fcom
inc
mov
scas
xor
add
fcomip
call
lods
aam
adc
jnp
outs
pop
xor
aas
add
fnsave
adc
adc
mov
mov
ds
push
pop
pop
xchg
lds
popa
cmc
test
push
shr
jo
xchg
repz
rol
push
push
cld
mov
or
cmc
mov
jmp
fisubr
addr16
inc
es
inc
jnp
or
aad
aaa
pop
pushf
in
in
push
jmp
or
mov
rcl
sbb
test
cmp
jecxz
daa
mov
push
mov
mov
or
in
sar
lods
data16
fsubr
pop
push
fisubr
xlat
dec
out
fidiv
inc
xchg
das
pop
bound
mov
mov
shr
ins
dec
popa
out
add
retf
sbb
and
mov
stos
pop
add
frstor
(bad)
(bad)
in
xor
jecxz
cmp
daa
imul
pushf
test
jbe
fcomp
dec
adc
mov
or
shr
jl
adc
xchg
in
cmp
stc
test
ins
pushf
xor
dec
test
or
shl
sub
mov
xchg
sub
inc
inc
leave
sub
pop
icebp
in
jecxz
xchg
jnp
jns
xchg
in
neg
jne
xchg
cmp
aad
loope
jle
ss
push
pop
mov
adc
mov
mov
js
repnz
push
cs
ror
fs
call
jns
push
rcl
into
mov
sub
fwait
ss
inc
sub
cmc
movs
pop
imul
and
in
gs
imul
imul
xor
clc
push
loope
out
pop
or
pop
pop
push
and
xor
mov
pop
shr
mov
xchg
pop
inc
sbb
out
push
push
inc
popf
sti
aam
mov
jmp
ror
sahf
pop
xor
(bad)
mov
dec
pop
mov
jecxz
push
mov
pop
push
movs
and
pushf
cmp
out
cwde
sbb
cmp
pusha
iret
mov
cmps
sub
pop
jno
mov
mov
jge
cmps
ss
and
add
daa
fst
icebp
(bad)
popf
retf
clc
mov
js
pop
sti
mov
ret
jmp
dec
push
shr
jns
pop
pop
rcr
imul
mov
lods
scas
sbb
dec
pop
retf
xchg
and
mov
adc
das
mov
push
add
out
dec
sbb
mov
mov
add
test
leave
cli
fcomp
fisttp
push
fisubr
adc
jmp
sbb
sar
adc
loop
jmp
inc
jmp
mov
rol
sub
dec
pop
inc
in
cmc
aam
xchg
pop
mov
dec
std
push
pop
adc
icebp
xchg
jnp
pop
ret
dec
jecxz
arpl
and
push
mov
in
repnz
cld
leave
and
fld
jb
cs
or
ins
adc
lods
push
sbb
lahf
inc
dec
nop
jp
push
lods
retf
in
in
jb
push
es
lods
jp
aam
adc
pushf
in
fimul
mov
aad
xchg
gs
sbb
pop
push
test
mov
fisttp
cmp
mov
sub
push
sbb
popa
mov
(bad)
hlt
jg
mov
fild
or
jne
add
push
pop
push
shl
xchg
es
jmp
pushf
adc
mov
dec
xchg
fwait
mov
fcom
jmp
inc
mov
mov
jl
fisub
jo
rcl
inc
arpl
lock
jecxz
cmp
pop
jge
mov
mov
push
call
inc
bound
mov
rcr
test
jo
lea
lock
xchg
popf
jp
inc
push
hlt
pop
xchg
or
das
mov
gs
xchg
test
pop
test
(bad)
inc
stc
inc
je
mov
adc
daa
in
mov
jnp
xor
fisub
pop
cmc
pushf
push
pop
fisubr
push
push
mov
jle
jae
add
cdq
lahf
sar
xor
fwait
repz
inc
and
sub
push
outs
mov
mov
jne
adc
push
xchg
push
jle
pop
nop
or
mov
and
mov
xchg
jecxz
fldenv
jmp
xlat
dec
sbb
pop
movs
push
adc
in
xchg
mov
in
adc
dec
imul
call
lds
popa
add
mov
lea
or
mov
jo
call
mov
and
and
xchg
fistp
out
cmps
data16
call
ins
ins
sub
push
adc
jno
dec
mov
(bad)
pop
loopne
call
cld
mov
mov
cmps
mov
dec
push
arpl
cmp
movs
cmp
dec
mov
aaa
(bad)
xor
leave
fidiv
or
nop
cmp
dec
sbb
test
clc
mov
add
and
adc
mov
dec
push
push
sbb
or
call
nop
cmps
push
jle
jge
pop
mov
retf
adc
fwait
mov
jle
jmp
fcmovnu
outs
leave
je
sub
movs
out
sbb
into
add
mov
or
jp
aas
stos
push
das
ret
out
xchg
push
sub
push
mov
popa
jle
or
jb
call
imul
rol
test
push
stos
(bad)
mov
sbb
mov
jmp
push
aam
cs
repnz
mov
pop
gs
add
out
xor
movs
mov
fsub
out
pushf
xchg
imul
mov
pusha
push
(bad)
cmp
repnz
mov
mov
add
mov
or
call
push
call
(bad)
sar
mov
ins
pusha
mov
sub
arpl
cmp
cmps
aam
push
jno
icebp
mov
cmp
push
fild
adc
icebp
pop
sub
das
loope
div
imul
sahf
push
xchg
sbb
mov
and
inc
mov
add
mov
sub
mov
mov
into
movs
jge
jecxz
mov
enter
jmp
stos
arpl
mov
int
or
cmp
push
fs
sub
mov
mov
fmul
(bad)
loopne
cmp
jbe
adc
nop
or
imul
push
in
(bad)
fistp
mov
repnz
xor
mov
add
movs
jb
pop
dec
jg
retf
or
test
cmp
fbld
pop
fdivr
aas
call
js
into
retf
out
sub
cs
imul
dec
hlt
jae
and
add
push
or
push
mov
aaa
sub
sub
repz
sar
xor
adc
pop
jmp
sub
dec
test
push
rol
adc
xchg
xor
add
outs
dec
mov
xor
rcl
lahf
(bad)
not
pop
std
mov
mov
or
xchg
nop
add
jo
fstp
je
sub
push
es
test
test
push
out
ins
lahf
jmp
test
cli
(bad)
push
jne
cwde
inc
movs
jbe
dec
fnstenv
aad
icebp
cmp
sbb
popa
mov
lock
daa
lods
fs
les
jle
aas
push
inc
lds
adc
imul
jge
sub
pop
ins
pop
inc
add
pop
std
sahf
pusha
push
dec
and
sar
cdq
jae
pop
dec
add
mov
xchg
pusha
pop
in
out
fdivrp
fs
fwait
xor
stc
test
popa
enter
lods
lods
lock
push
or
les
pusha
aaa
data16
std
mov
aad
mov
daa
mov
jo
retf
loopne
retf
dec
adc
outs
xchg
adc
lea
clc
in
jmp
in
xor
pop
pop
nop
or
pusha
xchg
jg
pop
cmp
or
out
test
lea
xor
mov
add
push
dec
dec
sub
pop
gs
cdq
adc
inc
outs
shr
mov
add
(bad)
mov
pop
(bad)
xor
test
into
or
mov
push
cdq
mov
hlt
leave
lea
add
push
inc
repz
pop
adc
in
cmps
sti
imul
sub
and
inc
or
add
dec
fist
xchg
nop
jbe
js
(bad)
mov
enter
int
cmp
inc
sub
add
mov
jmp
and
sub
xchg
mov
les
adc
in
loop
adc
pushf
jle
aam
lods
mov
adc
test
cmp
xchg
pop
out
retf
enter
or
add
repz
mov
movs
jl
stos
(bad)
mov
inc
mov
cdq
outs
dec
fdivp
shr
stc
pop
sbb
in
leave
out
sete
fisubr
out
sub
mov
sahf
pop
jb
into
jb
pop
outs
int
aam
adc
sbb
add
cmp
or
add
mov
inc
inc
fisttp
enter
mov
inc
and
jge
fdiv
sbb
not
(bad)
cli
jl
push
ret
sbb
je
and
mov
es
(bad)
cld
xchg
cmc
mov
(bad)
(bad)
fisubr
adc
xlat
xchg
and
dec
sbb
bound
sbb
push
jnp
mov
clc
jecxz
mov
fs
push
int
or
out
(bad)
scas
jecxz
pop
mov
mov
fst
ret
psubsw
mov
fdivr
xlat
and
call
cmps
sbb
call
dec
repnz
es
cmp
pop
idiv
push
jmp
ficom
ins
xchg
loop
iret
mov
dec
stos
and
in
or
and
inc
mov
sub
inc
lds
mov
and
mov
addr16
xor
mov
aas
into
mov
pop
xchg
sti
jmp
pushf
enter
or
xor
push
inc
cs
dec
mov
mov
mov
adc
sub
fdivr
cmp
and
enter
or
xchg
stos
jge
sbb
ss
aam
test
mov
stos
es
sbb
lock
js
adc
sub
jnp
mov
inc
or
sub
aas
xchg
mov
mov
aaa
cmp
inc
inc
cli
mov
adc
leave
add
(bad)
iret
push
mov
jp
loop
mov
enter
xchg
mov
xor
mov
hlt
push
out
jns
js
adc
pop
push
inc
mov
add
sahf
inc
pop
retf
and
aas
ja
sar
je
adc
xchg
or
fmul
sub
fisttp
adc
and
mov
pushf
aaa
cld
mov
pop
jp
fcmovnb
mov
xlat
shl
test
mov
sub
sub
or
mov
fist
jnp
hlt
cdq
push
jne
fnstsw
pop
sahf
sbb
mov
xchg
mov
cwde
dec
cmp
mov
pop
imul
inc
inc
or
(bad)
xchg
aad
adc
or
test
out
les
mov
lds
mov
dec
(bad)
ss
push
pop
and
test
sar
ds
mov
sub
daa
in
inc
and
adc
mov
scas
ja
inc
int3
adc
fimul
push
mov
dec
adc
jbe
adc
je
test
(bad)
fmul
and
add
repnz
sub
inc
(bad)
aad
out
dec
push
repz
retf
sahf
mov
xor
ret
xor
cld
mov
(bad)
push
dec
mov
dec
scas
push
aad
scas
gs
ret
(bad)
adc
cwde
xchg
mov
inc
cdq
or
mov
test
mov
push
ficomp
aas
enter
push
dec
inc
xlat
retf
jbe
(bad)
pop
and
jo
out
imul
loopne
fucomp
sbb
(bad)
pop
sub
jnp
mov
fs
movs
shl
adc
inc
mov
mov
sbb
mov
pcmpeqd
mov
sbb
imul
enter
or
in
stos
dec
xor
push
int3
inc
addr16
jl
mov
mov
push
mov
cld
in
ins
loope
outs
aas
lahf
add
dec
mov
shl
call
jge
(bad)
sbb
dec
or
dec
dec
jns
retf
inc
loop
mov
outs
mov
push
adc
dec
ret
dec
lods
arpl
shl
mov
int3
aaa
inc
pop
out
aaa
jge
xchg
and
imul
inc
xor
adc
loopne
shl
cmp
jb
fist
sub
pushf
pop
imul
popf
xlat
daa
pop
imul
div
or
in
cdq
mov
fsub
cs
xchg
int3
inc
(bad)
cdq
and
mov
dec
shl
jmp
icebp
push
push
adc
xchg
or
add
add
add
mov
cwde
push
pop
mov
xchg
cwde
sbb
or
in
nop
xor
clc
cdq
cwde
rcr
call
mov
cs
mov
out
sub
push
dec
aad
or
rol
ror
rol
pop
rcl
sbb
xchg
(bad)
les
add
jmp
(bad)
mov
and
adc
clc
mov
push
fwait
cmps
popf
push
imul
fdiv
xchg
inc
out
(bad)
or
int
leave
add
mov
and
sbb
or
lahf
pop
ss
(bad)
sbb
jle
retf
iret
mov
sub
shl
jo
xor
cmp
mov
iret
xor
mov
mov
mov
add
mov
jbe
xchg
fs
movs
in
ins
mov
add
out
stos
stos
push
sub
call
arpl
das
cmp
out
xchg
xchg
in
mov
inc
sub
jnp
mov
inc
lock
dec
sub
sbb
mov
push
retf
loop
movs
inc
aam
arpl
mov
loope
lahf
(bad)
jo
and
cld
lods
shr
mov
or
pop
jbe
inc
sbb
adc
ret
inc
fnsave
mov
push
jecxz
stos
mov
clc
aad
push
pushf
lods
jl
sbb
imul
movs
cmp
retf
fisubr
dec
jnp
(bad)
jmp
or
pop
push
pop
push
dec
call
addr16
lahf
xor
mov
push
jmp
mov
das
inc
jnp
dec
dec
inc
out
mov
adc
mov
repnz
lock
mov
cmc
test
adc
idiv
(bad)
aam
jg
adc
retf
lods
stos
loop
dec
pop
mov
das
and
add
mov
add
dec
mov
mov
add
and
mov
call
fldcw
int
adc
or
push
push
jge
pop
pushf
or
fs
add
sub
mov
cmp
shr
test
lea
scas
rcr
jne
lea
lahf
stc
(bad)
fistp
jno
cmps
test
into
mov
scas
or
jmp
outs
sbb
sub
rcl
mov
mov
jl
and
lods
jle
das
xchg
push
addr16
xchg
enter
mov
push
fscale
lods
adc
pusha
mov
mov
adc
ret
das
das
scas
adc
dec
sub
ret
mov
aad
nop
lods
popa
sbb
and
sbb
dec
ins
xchg
pop
mov
scas
fstp
dec
sbb
fsub
ins
arpl
add
xchg
cmp
out
push
cmp
sbb
cs
stos
push
fwait
pop
cmp
mov
ja
mov
inc
push
pushf
pop
retf
push
call
inc
cmp
xchg
push
adc
pop
call
dec
and
nop
jno
pop
jbe
add
jecxz
pop
popa
sbb
rcl
add
adc
adc
dec
bound
adc
or
push
cmp
xchg
stos
and
and
pop
outs
cmp
js
(bad)
scas
stos
cld
mov
ss
popa
ins
test
bound
or
dec
(bad)
mov
aam
loop
or
dec
lock
cmps
(bad)
out
pop
test
mov
daa
sbb
sub
jecxz
fwait
das
adc
cmp
inc
adc
and
fist
push
mov
mov
das
xchg
mov
push
push
pop
shufps
stos
pop
into
das
enter
mov
lahf
add
jb
daa
xchg
lods
jno
mov
sub
or
(bad)
icebp
xlat
test
shl
cld
jb
fs
lahf
shl
dec
nop
xor
mov
dec
in
jnp
call
mov
mov
cmp
jns
loop
mov
jmp
jmp
call
mov
or
xor
int3
imul
pushf
mov
and
fdivr
call
nop
aad
aad
gs
lods
cmc
adc
ds
mov
pop
(bad)
xchg
cmp
and
xor
sub
push
mov
mov
dec
out
ins
rol
jmp
lock
retf
push
loope
or
test
cmp
jb
test
mov
test
fcmovbe
sub
cld
mov
aas
sbb
and
in
gs
jno
(bad)
mov
rcl
sti
xor
sub
rep
retf
inc
mov
test
iret
xchg
je
cmp
fidivr
mov
data16
div
movs
mov
pop
jb
jnp
fistp
repz
(bad)
mov
jg
pop
test
adc
dec
cmp
scas
lahf
(bad)
cmps
pop
into
mov
mov
aam
lods
aam
pop
(bad)
mov
lock
mov
push
dec
aam
bound
lock
int3
test
xchg
adc
xchg
or
adc
jmp
dec
add
push
movs
sub
sar
mov
mov
int3
call
cli
shl
nop
and
add
jbe
xor
mov
les
(bad)
and
ja
push
test
in
out
cmp
imul
fistp
iret
dec
cmps
or
ja
sub
lods
dec
mov
adc
cmp
aad
mov
test
test
call
mov
mov
jmp
outs
daa
rcr
(bad)
shl
dec
retf
sbb
inc
icebp
fild
or
mov
retf
pop
mov
repz
jns
mov
sub
ficomp
mov
shl
mov
bound
mov
mov
pop
pop
sbb
jg
mov
sbb
clc
sub
lahf
and
cmp
adc
div
jle
repz
xor
adc
(bad)
cdq
xchg
and
add
mov
retf
mov
xlat
iret
xor
jp
stos
ins
stos
les
cwde
mov
mov
cmp
or
ds
mov
jo
add
ss
cmc
(bad)
fnsave
stos
mov
add
shl
or
xor
and
mov
add
push
adc
pop
imul
xchg
call
mov
mov
mov
int3
mov
inc
(bad)
out
jno
movs
je
bound
sub
(bad)
(bad)
mov
jbe
mov
and
push
(bad)
push
adc
add
or
ins
(bad)
pop
push
mov
cmp
and
adc
adc
jle
arpl
pop
cmps
jno
xor
and
aas
mov
aam
add
mov
cld
mov
inc
xlat
popf
push
repz
les
sti
aaa
xchg
pop
add
pop
lods
retf
in
fild
je
dec
dec
xor
jg
mov
sub
mov
sbb
inc
leave
(bad)
sbb
daa
dec
mov
cmps
mov
pop
mov
jnp
mov
mov
cmc
mov
mov
inc
or
stc
js
and
inc
sar
mov
mov
aaa
repnz
adc
push
in
fld
mov
and
(bad)
in
movs
xor
add
push
mov
xor
mov
mov
xor
jg
in
test
inc
std
push
inc
or
add
ins
sti
fidivr
and
mov
lea
dec
rol
and
retf
sbb
cwde
and
mov
push
lds
fisubr
pushf
enter
ret
mov
popf
(bad)
xlat
pop
mov
dec
scas
push
pop
push
push
inc
repnz
cmps
push
popf
addr16
or
jle
pop
cmp
add
cs
xchg
cmp
loope
xor
jo
cmps
or
dec
loope
mov
xchg
xor
test
ins
and
fs
es
popa
popa
mov
mov
push
or
mov
inc
and
jmp
cmp
shl
adc
dec
dec
jmp
dec
out
out
in
iret
adc
add
push
or
imul
xor
cmp
mov
dec
(bad)
rcr
xor
jmp
retf
pop
push
mov
mov
mov
into
imul
sbb
cmp
jmp
test
jo
mov
sbb
mov
add
push
les
in
stc
jns
ins
sbb
mov
add
aaa
jmp
jne
sbb
dec
pop
ins
dec
cmp
xchg
mov
mov
in
mov
inc
cdq
movs
push
push
out
loop
stos
out
imul
das
jl
fistp
adc
inc
mov
es
xor
pop
aam
cmp
aaa
push
xor
std
ja
adc
shr
mov
mov
jle
cmps
popa
lock
lea
jmp
es
lock
lods
shr
jecxz
ins
and
pop
cmp
leave
or
js
adc
pop
jp
pop
sar
aam
mov
fwait
sub
adc
xor
inc
outs
stos
cld
mov
inc
mov
and
push
dec
in
pop
mov
cmp
test
add
xlat
fidivr
jbe
leave
stc
lock
pop
xchg
adc
cdq
pop
test
icebp
nop
inc
xchg
pop
xchg
pusha
sub
push
aaa
push
setge
xchg
adc
push
add
in
mov
popf
out
pop
mov
pusha
(bad)
xor
mov
in
aas
or
pop
add
gs
inc
ins
mov
ror
jno
out
xchg
push
or
pop
mov
(bad)
lods
dec
ret
cli
xchg
dec
mov
int
arpl
jle
xchg
sbb
arpl
xor
lods
sub
mov
dec
aad
popa
dec
aaa
add
mov
add
push
pop
loopne
imul
rol
movs
inc
fmul
ins
cs
fsub
add
sub
sbb
stc
dec
out
fisttp
scas
push
cmc
stc
inc
adc
leave
xor
(bad)
sti
inc
push
ins
ret
idiv
(bad)
mov
rcl
(bad)
pop
imul
mov
jmp
retf
adc
outs
arpl
fisttp
js
aas
sub
jmp
push
movs
cli
adc
data16
mov
cmp
neg
popf
fcomp
mov
inc
pop
ds
es
lock
xchg
jnp
pop
jno
xchg
call
push
jp
mov
lock
mov
sbb
and
aad
pushf
add
add
pop
add
(bad)
push
xchg
repnz
repz
clc
mov
shl
or
stos
dec
push
sbb
stos
jp
sub
mov
sub
adc
mov
jl
ret
cld
out
aas
cmps
add
sbb
lods
repz
cwde
xchg
les
and
cli
xor
pop
lock
lods
in
pop
fld
lods
mov
xchg
pop
sub
cmp
adc
out
mov
imul
sub
test
add
mov
xchg
and
fist
xor
(bad)
mov
(bad)
sar
in
push
cmp
xchg
imul
or
mov
retf
jmp
xor
push
jp
sbb
mov
cli
js
aam
lahf
in
ror
jecxz
ret
xchg
jg
jae
inc
inc
inc
icebp
add
int3
dec
adc
push
shr
aas
(bad)
xchg
stos
pop
aaa
out
lods
sub
cdq
sbb
push
pop
xor
push
sub
fdivr
pop
clc
ficomp
inc
inc
dec
mov
push
stos
jo
push
xchg
jno
xchg
jl
mov
setge
test
sbb
mov
sahf
fucomp
mov
jmp
xor
jg
into
addr16
popa
inc
sbb
mov
call
inc
mov
movs
repz
mov
or
ret
xchg
adc
inc
xlat
test
jae
sbb
repz
imul
mov
leave
xor
aam
jecxz
jge
add
lock
(bad)
retf
xchg
sti
cmp
call
fisub
and
out
in
rcl
cmp
movs
push
sbb
enter
out
or
push
movs
stos
aas
(bad)
mov
out
add
shl
pop
test
pop
dec
and
add
mov
xchg
fist
pop
or
cmp
sbb
push
cmps
std
and
cmp
scas
inc
pusha
mov
shr
jne
clc
in
sbb
and
jle
gs
push
not
pop
inc
mov
scas
imul
xchg
lods
and
iret
fmul
(bad)
jnp
xor
and
cmps
dec
xchg
je
invd
icebp
or
and
and
mov
jbe
add
mov
mov
scas
test
(bad)
or
fst
pop
push
adc
paddq
and
cli
sub
push
cwde
rcr
add
retf
xor
fwait
pop
push
imul
cmp
sbb
add
push
lds
and
inc
out
and
mov
cmps
inc
idiv
cld
scas
mov
jge
ja
js
xlat
sub
cmc
push
add
push
repnz
pop
inc
and
test
popf
neg
mov
inc
pop
add
mov
add
out
jae
jne
in
sbb
sub
cmc
aas
fs
lea
pop
sub
push
test
dec
adc
mov
adc
call
out
mov
(bad)
push
sahf
mov
fist
xor
gs
pop
not
call
movs
call
cmp
in
push
cmp
and
fnsave
mov
(bad)
hlt
jle
jo
or
jecxz
mov
mov
scas
push
daa
pop
cmps
into
mov
div
adc
fsub
and
jmp
cld
jmp
imul
mov
xchg
or
cmps
aam
mov
mov
add
xor
lods
add
jecxz
in
push
inc
xchg
jle
daa
cmp
or
aas
or
push
pop
push
ins
push
xchg
adc
sbb
mov
sub
mov
and
jns
cmps
cmp
sub
dec
neg
dec
mov
outs
dec
cmps
push
out
cwde
cmp
sub
push
push
pop
jge
dec
add
out
and
lods
loope
loope
les
dec
push
sti
adc
adc
in
jle
mov
jo
mov
cmp
es
push
mov
nop
in
cli
lahf
xchg
test
sub
jmp
std
pushf
mov
lock
es
push
pop
xor
and
push
in
call
shl
cmc
mov
xor
test
mov
lods
lods
fcom
loopne
fst
sub
push
(bad)
nop/reserved
cmps
repz
xor
not
lds
jl
popf
inc
cmp
cmps
je
arpl
scas
leave
pusha
(bad)
rcl
movs
dec
add
cmp
cli
push
punpcklwd
and
dec
or
test
outs
xchg
inc
lea
pusha
xor
fsubr
sub
and
mov
jnp
shl
pop
inc
fimul
jno
push
dec
ins
icebp
ins
retf
add
cmp
sahf
ja
sub
pop
cmp
test
jecxz
inc
jl
out
jmp
xchg
jo
mov
lea
(bad)
mov
aam
mov
jmp
add
movq
sahf
mov
idiv
icebp
jns
add
fdiv
pop
pop
sahf
xchg
xor
je
lds
pusha
int3
out
and
test
in
mov
ins
pop
cdq
and
or
cmp
and
jmp
sar
inc
cli
sbb
scas
xchg
xor
inc
cdq
scas
pusha
lock
mov
test
cmp
popf
cmp
push
test
out
clc
dec
fwait
adc
adc
xor
loope
add
retf
nop
or
inc
aad
xor
in
or
fwait
xchg
dec
fidiv
mov
push
push
adc
sbb
(bad)
xchg
sub
mov
and
inc
call
movs
call
jo
pushf
test
jecxz
sbb
ds
ins
xchg
mov
in
and
mov
jnp
xor
sbb
or
mov
xchg
movs
sbb
adc
mov
addr16
lahf
xchg
inc
push
popa
pop
push
xchg
out
add
jg
sbb
sbb
mov
pop
daa
call
inc
jb
add
test
jle
ror
and
test
(bad)
push
shr
mov
ficomp
cmp
add
cmp
out
jnp
test
or
int
aam
iret
fsub
pop
or
retf
dec
mov
push
sub
scas
ja
jmp
imul
dec
sub
dec
rol
stos
mov
dec
(bad)
out
jb
lock
mov
pop
push
inc
pop
dec
jg
add
jb
nop
aam
ss
xor
cmps
adc
scas
sbb
xor
test
jno
retf
fmul
mov
pop
popf
leave
adc
mov
dec
or
and
sub
adc
aaa
mov
int3
ja
jb
sub
adc
aaa
dec
arpl
ins
stc
mov
scas
imul
(bad)
pushf
test
xchg
ss
in
dec
mov
fsubr
xor
jg
mov
pop
stc
xchg
das
jo
(bad)
jle
(bad)
out
inc
je
mov
mov
push
in
scas
fidivr
mov
and
jmp
retf
pop
pop
adc
jl
stos
xchg
pusha
fst
mov
retf
cs
xchg
jge
out
shr
pop
iret
or
mov
push
mov
mov
mov
xlat
mov
push
cli
sub
push
fadd
rol
stos
fldenv
ins
or
pop
and
aam
ror
add
outs
nop
xchg
mov
mov
and
aam
pop
fcom
stos
inc
and
dec
jmp
xor
mov
mov
cmp
mov
add
xor
sub
or
inc
movs
mov
(bad)
sub
cmp
pop
clc
loop
lods
xchg
xor
sbb
(bad)
mov
sub
pop
leave
push
push
dec
xchg
leave
mov
cmp
arpl
lds
dec
push
and
add
(bad)
stc
std
sti
ret
jmp
jbe
sbb
pusha
ins
out
retf
aaa
pop
mov
imul
jns
mov
imul
jl
xchg
sub
and
call
dec
(bad)
xor
jg
xlat
mov
lods
fs
mov
dec
sar
inc
adc
test
clc
mov
xchg
frstor
mov
cmc
xchg
iret
aam
mov
sbb
hlt
push
rcl
into
mov
cmps
jge
test
test
cmp
mov
dec
in
lock
mov
js
mov
out
xchg
jns
hlt
xor
and
push
retf
std
out
xchg
mov
std
cld
js
idiv
push
repnz
and
inc
sbb
ret
xor
clc
cmp
or
mov
ins
in
adc
mov
pop
cdq
sub
cs
nop
aad
in
or
daa
push
ins
mov
jno
das
dec
test
int3
loope
mov
jg
rcl
mov
jecxz
fs
mov
test
popa
(bad)
scas
dec
xor
scas
rcl
lock
(bad)
xchg
call
ja
xor
pushf
out
into
jmp
xor
mov
cmp
push
gs
rcr
fwait
dec
ret
cmp
or
mov
scas
test
lea
sbb
adc
mov
js
inc
into
out
sbb
cli
dec
ins
xlat
daa
dec
push
outs
xlat
fwait
das
mov
inc
cmp
shr
jp
popf
adc
mov
int
mov
repz
xchg
mov
sbb
shl
test
mov
sti
ret
mov
mov
sbb
ja
loope
outs
xor
xor
jns
pusha
add
sub
add
xchg
pop
jecxz
sbb
std
out
call
pop
push
pusha
mov
daa
sbb
imul
pop
xor
xor
xor
sub
xor
pop
sbb
push
mov
popa
sbb
sahf
sub
test
es
and
out
jecxz
das
ss
enter
comiss
lahf
jmp
adc
js
pop
addr16
dec
fcom
jbe
and
in
cmp
pushf
cdq
ret
sub
sbb
push
mov
ins
out
(bad)
cmp
dec
cmc
fldenv
mov
lods
fimul
loopne
add
fist
bound
mov
and
comiss
outs
(bad)
xchg
sub
push
enter
push
mov
adc
push
sbb
cwde
ror
aad
je
inc
push
int3
iret
call
adc
cmp
sti
jne
nop
iret
jne
ficom
stos
cwde
and
xlat
fnstenv
or
inc
xchg
or
and
sub
mov
daa
cmps
fisubr
xor
adc
mov
jne
in
pop
pop
inc
cmp
into
cmp
fwait
mov
out
adc
xchg
cmp
ss
test
out
hlt
jo
fidivr
cmps
adc
fist
inc
cdq
mov
fs
fwait
out
adc
adc
dec
aas
(bad)
mov
sbb
(bad)
cmp
push
popf
mov
dec
push
lods
sti
mov
mov
sbb
in
cmp
mov
jp
fistp
and
rcr
ds
cmp
pop
or
dec
jae
movs
jle
lods
or
dec
shl
cli
sbb
stos
adc
dec
aam
and
jp
loopne
lea
leave
and
inc
outs
mov
pop
(bad)
sti
mov
xlat
lea
cmp
or
adc
add
pop
aas
fdivr
mov
call
xor
push
int
int3
nop
in
in
pop
push
push
out
cmp
fwait
cli
outs
int3
fstp
hlt
fucomip
adc
push
mov
cmp
inc
xor
clc
inc
cwde
fadd
add
addr16
cmp
inc
xchg
ins
(bad)
pop
and
in
mov
and
cmp
mov
cs
xchg
fs
popa
jmp
int3
out
adc
mov
sbb
int3
dec
hlt
retf
push
mov
ins
mov
fwait
push
adc
xchg
xor
int
aad
xor
lods
cmp
pusha
adc
pop
and
or
scas
push
test
pop
shl
and
dec
push
call
jne
sbb
pop
ffreep
retf
jl
sub
dec
xchg
xor
push
mov
mov
repz
jl
lea
and
xchg
mov
fstp
ret
cmp
sbb
loopne
inc
jmp
push
jo
or
(bad)
xor
test
popa
in
mov
push
retf
jno
pop
lds
mov
jl
test
shl
(bad)
pop
adc
cli
lea
jg
xlat
sub
adc
pop
sub
mul
cdq
jae
mov
xchg
xchg
adc
sbb
xchg
or
(bad)
lods
stos
xor
dec
cmp
(bad)
cmp
push
pop
aad
jae
iret
jae
xchg
sub
loopne
imul
cmp
(bad)
sbb
(bad)
pushf
xchg
ins
mov
sub
cmp
les
les
in
inc
mov
mov
pop
jmp
sbb
enter
sub
(bad)
shl
shl
mov
js
mov
pop
cmp
sbb
jne
add
mov
and
xchg
pop
xlat
out
xor
push
and
rol
push
ja
das
cdq
pop
retf
mov
repz
sbb
in
and
stc
addr16
outs
call
or
adc
sbb
add
sbb
jb
scas
push
xchg
pusha
ds
dec
push
ret
(bad)
aaa
adc
and
gs
nop
dec
sub
mov
add
leave
xor
push
xor
loop
pop
mov
into
les
sub
ja
sub
cmc
mov
push
lock
inc
shl
mov
xor
xchg
adc
out
test
fbld
pop
dec
mov
jmp
mul
in
lahf
mov
repnz
ds
xor
pop
not
add
sub
push
pop
push
adc
sti
sub
xor
push
je
xor
jge
xchg
pop
push
adc
rcl
repnz
or
jb
mov
xor
jg
cmps
xchg
cmp
imul
sbb
(bad)
cmp
xchg
mov
sub
arpl
cmp
pop
or
aaa
mov
std
xor
xlat
pop
jne
sub
retf
out
and
sub
jmp
bound
add
iret
mov
retf
adc
arpl
lds
leave
es
sbb
pop
xchg
popa
inc
dec
jp
lods
pop
inc
adc
inc
cli
mov
loopne
push
xchg
mov
ret
out
cmp
or
test
ins
(bad)
bound
and
ret
aas
adc
pminsw
cmp
push
push
adc
dec
outs
jle
fwait
out
sti
es
mov
ja
mov
fmul
jge
dec
outs
mov
imul
mov
xchg
iret
mov
push
sub
cmps
ja
or
push
aas
(bad)
cmc
shl
cmovg
inc
cmp
mov
cmp
gs
xchg
dec
push
and
pusha
cmp
and
je
aad
mov
aaa
ins
or
fstp
jnp
fsubr
cmps
cdq
pop
lods
out
xchg
push
xor
pop
pop
xchg
push
icebp
or
fdivr
loope
mov
or
cmp
sub
xchg
dec
adc
pop
and
shl
mov
push
mov
cmp
mov
pop
mov
leave
adc
fcmovu
push
loope
jp
arpl
pop
adc
call
push
test
(bad)
in
movs
ds
or
xchg
iret
push
stc
jae
sbb
test
mov
enter
dec
xchg
repnz
ds
stos
inc
xchg
fcom
inc
adc
xchg
adc
jecxz
mov
nop
push
cmp
cmc
xchg
popf
jecxz
std
dec
push
push
adc
fist
inc
fidiv
push
retf
mov
cmp
sahf
jg
cmp
dec
add
dec
fs
ss
add
adc
sbb
cwde
push
(bad)
pop
pop
xor
popa
test
push
stos
(bad)
repnz
enter
popa
stc
arpl
jnp
pop
push
popa
xchg
mov
imul
aas
xchg
push
mov
in
ja
pop
imul
leave
jae
inc
add
shrd
jne
cmc
in
movs
rol
lods
xchg
mov
pop
arpl
add
lahf
out
shr
xchg
les
test
xor
inc
adc
xchg
mov
cmp
jmp
mov
aad
and
nop
cmp
add
ret
mov
int
test
stos
push
inc
mov
mov
jecxz
xor
int
adc
jnp
fisubr
or
mov
sub
into
pop
push
cwde
mul
xor
push
add
je
sub
popf
mov
outs
lahf
pusha
sbb
inc
add
mov
out
rol
scas
xchg
ss
and
out
js
aad
ror
jmp
xchg
dec
mov
or
xchg
pop
or
pop
enter
mov
push
pop
je
stos
jl
jmp
xchg
fisttp
adc
in
pop
test
adc
(bad)
fld
pushf
sub
ja
inc
mov
xchg
ds
mov
and
out
(bad)
pop
mov
jb
mov
sub
sub
jg
leave
out
cdq
in
or
mov
dec
ret
je
(bad)
in
adc
sbb
push
movs
cdq
add
sub
cmc
aam
shl
lea
fld
xchg
cld
mov
pop
dec
xchg
and
and
retf
mov
je
xchg
cmp
(bad)
xchg
or
pop
push
aad
pop
mov
(bad)
adc
aaa
xor
push
cli
in
adc
add
sub
xlat
fsub
(bad)
scas
push
dec
mov
jecxz
shr
aad
loop
cmc
sbb
push
push
ror
daa
out
icebp
iret
sub
popa
push
xchg
pop
ja
mov
fstp
xchg
je
add
test
ret
adc
mov
outs
pop
(bad)
xchg
cmp
mov
jmp
in
and
test
pop
fbld
mov
fwait
fwait
mov
pop
sbb
cmc
sbb
retf
xchg
call
jmp
sbb
sar
jo
jmp
test
or
test
xchg
test
fcom
sbb
jg
inc
leave
lods
inc
std
push
push
nop
jp
lock
cdq
dec
xchg
das
and
mov
aaa
jecxz
add
pop
or
push
idiv
jmp
lods
add
ds
hlt
(bad)
or
xchg
in
(bad)
(bad)
cli
movs
jne
(bad)
cmp
in
mov
retw
in
inc
jg
scas
or
and
jnp
movs
jmp
arpl
int3
iret
push
push
(bad)
retf
and
cli
test
inc
(bad)
popa
xchg
pop
cmp
popa
pop
and
cmc
inc
sub
test
xor
fndisi(8087
push
sbb
inc
(bad)
mov
xor
inc
dec
dec
push
dec
fs
mov
adc
adc
pop
cld
fadd
or
push
jle
test
stc
mov
int
fwait
leave
jno
retf
xchg
ja
xchg
inc
jecxz
xor
sub
jl
pop
(bad)
inc
test
jle
pop
add
or
push
cwde
pop
(bad)
imul
add
ins
shl
jne
sub
in
sub
aas
js
sbb
pop
fs
xchg
outs
xchg
mov
in
test
adc
addr16
sbb
pop
in
jne
mov
xchg
sbb
jge
mov
xor
pop
pop
add
pop
repnz
add
mov
adc
je
jmp
jnp
jo
clc
inc
jle
cmp
xor
je
adc
cmp
retf
xchg
mov
ins
sbb
mov
clc
std
test
enter
cmp
int
dec
fs
lods
pushf
rcl
or
cmc
inc
push
jae
(bad)
js
mov
push
inc
push
leave
fwait
mov
scas
cmps
sub
xor
aas
out
dec
stc
fwait
mov
ret
js
pop
or
imul
cdq
adc
fs
xchg
and
arpl
sub
das
xchg
loop
dec
(bad)
push
shr
or
loop
pop
cmp
fcomp
retf
sub
ins
ins
std
out
les
sbb
mov
jl
sub
and
sti
cmp
pop
jns
push
repnz
mov
enter
imul
sub
jae
aad
test
retf
mov
into
sub
pop
clc
mov
cwde
adc
loope
outs
data16
rcl
loop
mov
fmul
mov
std
sar
mov
xchg
clc
cmp
fs
(bad)
stos
sub
or
fstp
jne
(bad)
imul
pop
xchg
sbb
mov
ins
mov
push
cwde
jge
rol
fucomi
(bad)
sbb
fs
mov
addr16
(bad)
movs
mov
fild
gs
mov
adc
adc
lods
xchg
cmp
xchg
jne
cmps
das
sti
mov
scas
test
iret
xchg
cli
and
inc
adc
les
(bad)
std
or
xchg
sbb
sar
inc
jno
cdq
sbb
dec
aaa
aas
aaa
movs
sbb
sub
pop
out
clc
adc
or
lods
push
and
ins
aas
xor
push
or
fstp
sub
fadd
push
in
xchg
sub
push
leave
movs
xchg
in
loopne
je
mov
add
daa
jb
pop
push
push
cmp
aaa
sbb
aam
mov
mov
std
cwde
call
pop
add
jg
in
stc
mov
mov
shl
xor
xor
adc
push
std
inc
pop
je
movs
ja
cmps
adc
popa
fisttp
push
inc
xor
pop
sub
xor
mov
jl
bnd
fistp
fwait
xor
inc
popf
pushf
retf
lahf
adc
cmp
inc
(bad)
les
jae
jge
call
adc
xor
cwde
lds
loope
add
or
ficom
cmp
cdq
cdq
mov
mov
pusha
mov
arpl
pusha
iret
or
cld
mov
xor
dec
out
mov
(bad)
mov
and
in
or
or
mov
mov
push
imul
shl
sbb
mov
inc
inc
mov
jg
inc
out
retf
shl
push
popa
inc
mov
jle
mov
jno
dec
push
ja
mov
inc
and
hlt
seta
push
call
push
les
dec
xchg
outs
lahf
ret
sub
cmp
add
jbe
repz
ja
lods
cs
shr
mov
push
jmp
data16
fld
in
inc
in
(bad)
pop
clc
jecxz
jge
imul
mov
pushf
not
xchg
mov
inc
cmp
gs
push
cmps
xor
jb
int3
daa
rol
add
jne
int
inc
jb
xchg
pop
ins
ds
icebp
mov
mov
cmp
outs
fnstsw
cmp
xchg
jge
leave
or
fs
gs
push
mov
xchg
stc
addr16
xchg
or
outs
mov
test
pop
and
dec
jle
jb
test
xlat
pusha
out
aam
es
push
jmp
in
push
mov
push
cld
push
pusha
inc
pushf
add
xor
xlat
inc
dec
retf
aad
stos
test
and
mov
xchg
call
lds
push
mov
inc
test
lea
jmp
inc
nop
jnp
fiadd
add
fidivr
leave
call
call
test
push
mov
stos
(bad)
pop
push
jp
jae
and
cmp
(bad)
mov
daa
es
add
xor
enter
fcom
jmp
xchg
push
ficom
or
test
mov
ins
imul
loopne
and
mov
int
test
imul
data16
cmps
fs
push
jecxz
jno
xchg
inc
pop
and
popa
pop
sub
cwde
dec
add
dec
lods
add
adc
adc
xor
xlat
mov
mov
jg
mov
fld
cmp
jmp
call
call
or
pop
mov
stc
mov
int
ret
ror
xchg
ss
ror
dec
mov
cmp
std
sbb
jl
stos
int3
mov
cmp
mov
(bad)
and
call
xor
inc
mov
inc
ja
aad
cs
fsub
or
retf
xor
pop
dec
in
xor
xchg
push
jo
mov
stos
or
scas
mov
mov
jmp
retf
out
dec
mov
sub
mov
jp
fild
outs
icebp
cmps
and
stos
std
mov
popf
fnstsw
mov
stc
test
xchg
adc
sahf
mov
xchg
pop
sbb
(bad)
ss
inc
xchg
cmps
loopne
imul
xor
jle
ret
nop
sar
ret
mov
cwde
mov
sbb
or
int
dec
sub
mov
lods
mov
cld
iret
fsub
aaa
pop
fbld
enter
ret
shl
dec
sub
xchg
dec
and
or
or
push
mov
xchg
mov
inc
mov
loope
jmp
pop
fidivr
cmp
leave
jmp
popa
(bad)
jg
sub
ja
dec
das
dec
iret
jle
xchg
fwait
bound
out
inc
pop
dec
stc
mov
fs
nop
jle
xchg
(bad)
add
rcr
sar
mov
daa
int3
enter
ret
cmp
bound
mov
repz
sahf
sub
push
pop
loop
jl
cmp
loope
ja
dec
aas
or
jmp
inc
in
push
nop
fwait
ins
xor
cdq
mov
inc
xor
push
or
pop
cmp
pop
fcom
jp
jno
das
xchg
stc
aas
fst
or
cmp
mov
gs
call
and
pop
adc
sub
cdq
cmp
pusha
xchg
sub
in
scas
or
jle
adc
mov
aas
xor
leave
inc
sub
hlt
addr16
loope
pop
test
xchg
push
mov
pushf
mov
inc
fcmovu
or
pushf
(bad)
mov
xchg
adc
mov
mov
fimul
mov
(bad)
sbb
pop
lods
push
jmp
dec
lahf
loopne
(bad)
(bad)
add
pop
or
cld
and
into
add
xchg
add
aas
adc
mov
cmp
retf
pop
sub
gs
enter
xchg
add
dec
pop
sub
loop
mov
fadd
cmc
cwde
jmp
ss
sar
add
aaa
pusha
lods
inc
fimul
cwde
stos
retf
pop
addr16
pop
fdivr
mov
push
rcr
jo
pop
(bad)
adc
push
inc
mov
jmp
shl
sti
or
sahf
aad
scas
lods
pop
push
fldcw
mov
sbb
cmps
out
shr
cmp
pop
and
bound
push
gs
pop
scas
mov
test
fistp
fwait
sbb
or
icebp
(bad)
pop
or
sub
adc
pop
je
push
daa
jle
cmp
and
adc
push
ret
jne
mov
dec
mov
dec
dec
and
inc
add
jbe
pop
repnz
xchg
add
mov
inc
pop
xchg
repz
(bad)
movs
pop
pop
inc
stc
in
mov
outs
(bad)
jecxz
cmp
push
push
push
cmp
add
fistp
jno
lods
mov
retf
push
mov
scas
mul
outs
inc
(bad)
pop
sub
pop
xor
stos
scas
and
ffreep
and
xchg
bound
mov
cmp
rol
into
mov
jno
inc
movs
dec
inc
adc
dec
out
xchg
int
and
pop
xchg
dec
movs
or
fimul
lods
and
and
cmps
dec
scas
jl
outs
loop
and
add
data16
adc
dec
movs
mov
fisubr
and
sub
pop
jle
iret
(bad)
xor
lods
rcl
test
(bad)
mov
out
push
adc
mov
mov
jp
aam
icebp
xor
or
pop
iret
push
xchg
hlt
add
hlt
fdivr
adc
bound
idiv
scas
jp
call
or
dec
sahf
cli
shr
test
xor
nop
push
aad
int3
pop
mov
jbe
rcr
push
ss
inc
das
lahf
xor
sub
pop
jl
clc
(bad)
retf
cld
sub
or
or
xor
sbb
push
push
or
test
mov
test
pop
ror
outs
sub
or
pop
arpl
jb
adc
push
push
jmp
or
dec
xchg
pop
popa
repz
adc
in
inc
sub
mov
add
enter
test
jmp
mov
dec
int3
add
pop
movs
(bad)
movs
sbb
scas
enter
add
jo
xor
test
dec
loope
pop
pop
shl
jecxz
fwait
jmp
aas
add
mov
add
aad
rdmsr
and
jae
and
sub
mov
mov
jns
mov
dec
mov
out
sub
mov
(bad)
sbb
shl
mov
or
sti
mov
sub
int
into
cdq
loop
xor
sub
push
push
jle
(bad)
fist
sub
fmul
jl
xchg
inc
data16
pop
call
jb
mov
push
add
push
dec
dec
and
nop
call
adc
mov
inc
shl
icebp
sub
adc
and
push
call
leave
ds
cmp
xor
xor
xchg
dec
sub
jns
mov
out
fcomp
add
and
aaa
rcr
inc
xchg
daa
xchg
adc
push
ror
out
mov
inc
icebp
outs
div
jmp
in
das
pop
and
lods
adc
xor
sub
sbb
(bad)
hlt
jp
imul
mov
add
dec
mov
add
and
icebp
adc
or
and
add
int
and
fidivr
push
fdivrp
xchg
xchg
arpl
sbb
fcomp
xchg
jp
and
pop
movs
or
inc
sbb
pop
test
retf
mov
(bad)
fimul
sub
ins
scas
xor
mov
xchg
mov
(bad)
pop
inc
pop
aad
adc
xor
cmp
mov
xchg
pop
bound
mov
mov
sbb
aam
out
or
popa
push
js
imul
out
pop
push
pop
sbb
(bad)
fisttp
mov
call
sub
ja
sbb
popa
jg
outs
mov
push
stos
nop
push
adc
popf
sbb
sub
sbb
out
and
jmp
not
xor
not
xchg
add
xchg
(bad)
retf
inc
jmp
push
icebp
jmp
and
jbe
xor
jmp
mov
fimul
push
scas
nop
add
mov
jns
call
call
dec
gs
cmp
adc
fimul
shl
fnstsw
data16
test
lds
out
add
mov
aam
push
or
sbb
mov
jg
sbb
test
mov
es
retf
xchg
gs
dec
or
add
adc
sub
pop
cmp
mov
into
cld
popa
loopne
xchg
cmp
iret
in
iret
data16
aam
call
adc
pop
inc
retf
pop
xchg
xchg
iret
xchg
dec
in
inc
sbb
aad
fistp
dec
dec
jg
jp
int3
es
repz
cmp
sbb
jmp
fadd
add
aam
enter
mov
and
xor
mov
test
loope
jne
fcom
jae
mov
aad
dec
adc
mov
jne
in
inc
inc
(bad)
iret
not
pusha
div
scas
outs
fldl2e
inc
mov
mov
cmp
enter
sub
icebp
or
icebp
cld
dec
pop
mov
adc
pop
cmps
xchg
pushf
fadd
mov
sbb
xchg
inc
call
test
mov
(bad)
clc
or
pop
xlat
(bad)
out
(bad)
mov
xchg
xor
xor
lea
shl
(bad)
pop
imul
icebp
add
std
sbb
sub
(bad)
lods
les
adc
push
dec
mov
in
inc
fld
push
pop
push
stos
mov
mov
cwde
adc
cmp
xor
shl
add
hlt
lea
pop
push
xchg
stos
sub
and
push
jmp
cdq
push
and
lods
jecxz
sub
pop
outs
call
adc
outs
xchg
xchg
dec
add
retf
push
stc
cli
xchg
fist
fstp
mov
push
mov
mov
pop
imul
out
push
mov
clc
test
push
xor
mov
daa
xor
iret
and
mov
mov
movs
imul
xor
mov
fdivr
mov
ins
mov
push
lock
jmp
cmps
adc
xor
(bad)
fst
dec
jo
outs
dec
and
mov
nop
mov
fld
int3
(bad)
fcmovb
xchg
test
stos
test
jp
or
dec
repz
inc
mov
add
in
pop
js
out
mov
addr16
(bad)
lods
rcl
pop
pop
imul
ss
dec
cmp
jnp
push
push
xor
xor
cs
mov
fld
xor
cmp
or
and
retf
pop
rol
cmp
jb
jle
inc
stc
push
xor
jmp
js
mov
sub
cmp
imul
mov
cld
sbb
cdq
shl
aas
adc
ja
add
es
test
imul
ret
adc
dec
jg
jmp
jno
repz
mov
mov
xor
xchg
cli
lea
xchg
mov
mov
shl
jmp
and
sub
cmp
pop
call
das
aaa
popf
sub
mov
sbb
sbb
dec
xchg
mov
or
jle
inc
lgs
movs
sbb
dec
lods
mov
pop
jmp
inc
lea
cs
aas
or
mov
add
mov
mov
repz
jae
popf
iret
int
lea
fild
movs
retf
(bad)
iret
xchg
mov
mov
push
fcmovnu
ins
mov
and
or
push
or
leave
xchg
or
mov
mov
fisubr
lods
jno
popa
ficom
aas
fist
add
lods
adc
int3
mov
jb
and
je
arpl
cmp
in
xchg
sbb
daa
xchg
xor
loope
(bad)
fld
sub
push
sub
scas
cmp
add
cmp
fiadd
and
enter
rcl
push
dec
mov
fadd
xchg
xor
mov
sbb
pop
retf
test
add
or
out
or
std
gs
inc
es
aad
mov
push
popa
jo
mov
imul
push
dec
dec
jmp
mov
and
push
push
(bad)
mov
inc
and
mov
icebp
push
push
sbb
dec
jne
out
xchg
xor
add
fwait
push
fs
cmps
inc
popf
jb
jmp
daa
inc
ins
jns
sahf
test
push
div
mov
nop
sbb
repnz
dec
or
mov
(bad)
mov
cs
sub
pushf
push
cmc
or
xor
mov
mov
inc
(bad)
stos
mov
mov
add
vpaddw
pop
push
repz
xor
sbb
xor
sub
in
pop
xor
mul
dec
or
mov
xchg
jl
push
lods
cmc
cmp
add
push
pop
repnz
rcl
sbb
sbb
nop
movs
cdq
shl
mov
xlat
imul
retf
mov
stos
mov
cld
xchg
push
sub
in
adc
mov
mov
mov
xor
sbb
adc
adc
(bad)
jp
xor
cmp
cmps
loopne
fsub
inc
add
add
add
xor
sub
add
jle
test
loop
jbe
mov
hlt
push
sar
pop
or
pop
sbb
or
mov
outs
retf
xor
dec
xor
mov
add
cmp
jmp
push
xchg
push
(bad)
out
test
or
mov
fild
mov
aas
xchg
mov
rcr
jl
pop
and
push
mov
xor
lods
lahf
jge
xor
add
xchg
fild
ds
rcl
mov
dec
call
sub
into
test
repnz
jp
mov
lds
mov
or
dec
aam
push
add
mov
jmp
shr
and
mov
fwait
dec
lods
pusha
loop
jns
mov
cmp
(bad)
mov
ret
fs
inc
out
pop
aam
fsub
imul
push
lods
les
sahf
jmp
pushf
mov
les
jmp
jmp
ds
stos
clc
adc
ja
cmps
aad
out
leave
cmp
cmc
xchg
mov
or
jmp
mov
(bad)
fs
jno
aad
xor
popa
sbb
cmp
lahf
jecxz
xchg
stos
iret
adc
and
jp
ror
out
mov
repz
outs
(bad)
mov
jnp
adc
rol
daa
mov
shr
into
(bad)
ss
jp
retf
jbe
aaa
inc
push
xor
fdivr
test
out
lds
enter
adc
and
cmp
inc
mov
sbb
pop
pop
pop
adc
icebp
jae
pop
jp
xor
dec
add
mov
int3
xchg
dec
mov
loop
out
jg
(bad)
ins
pop
add
pop
aaa
jmp
aam
sub
scas
cwde
(bad)
jge
xor
aaa
inc
pop
or
push
std
les
push
out
add
cmps
outs
rol
xchg
cmps
adc
and
adc
and
out
cdq
ins
sti
xchg
push
rol
aad
mov
dec
add
ret
pop
(bad)
je
cld
jmp
or
imul
std
add
mov
sti
lahf
stos
(bad)
fdivr
and
daa
cmp
cmp
xlat
ins
(bad)
cli
adc
pop
xor
add
sbb
or
push
leave
stos
addr16
jmp
stc
add
idiv
xor
push
xchg
cmps
call
(bad)
mov
pop
repz
pushf
or
and
fwait
call
push
outs
outs
xor
xchg
sar
gs
cmp
xor
add
aam
fsub
mov
test
popf
jl
nop
pop
cmp
push
mov
pop
shl
int3
jmp
test
stc
and
adc
xor
mov
cmp
xchg
pop
arpl
cmp
adc
mov
fxtract
xchg
push
mov
out
push
sub
adc
loope
outs
sub
stos
out
sub
cmps
arpl
(bad)
xchg
loop
inc
iret
bnd
repnz
or
ja
cs
cli
dec
push
std
sbb
loope
movs
mov
pop
push
ins
ret
push
fld
inc
sahf
inc
lds
call
call
and
fwait
mov
mov
mov
out
dec
fwait
(bad)
and
clc
shl
mov
nop
shl
cmps
push
das
or
lods
icebp
arpl
push
movs
sub
std
dec
fstp
jb
mov
lds
out
dec
pop
(bad)
or
call
xchg
(bad)
dec
rol
imul
pop
pop
hlt
inc
call
dec
mov
or
call
mov
ror
sbb
imul
test
mov
data16
aas
jmp
fwait
pop
dec
inc
sbb
pop
loop
sbb
dec
cdq
or
sbb
lods
inc
add
mov
push
mov
or
in
test
mov
mov
rcr
ins
hlt
mov
sbb
mov
(bad)
rcr
dec
or
mov
xor
mov
xchg
cli
sbb
(bad)
ja
rcr
cdq
adc
inc
pushf
pop
gs
(bad)
(bad)
cmp
nop
scas
sti
repnz
jnp
(bad)
cmp
dec
pop
mov
out
and
pop
fnsave
and
xchg
mov
hlt
mov
pop
cmp
dec
stos
(bad)
dec
movs
pusha
or
sub
fcmovbe
jmp
jmp
add
jmp
dec
push
mov
jnp
xchg
add
sub
shl
pop
aam
and
xor
mov
fistp
enter
imul
call
retf
repnz
mov
sahf
fld
scas
into
pushf
retf
out
test
(bad)
adc
jnp
jmp
xor
fcmovnu
lahf
fwait
je
dec
inc
ds
add
pop
cs
aas
(bad)
jmp
push
jmp
sbb
sbb
add
js
(bad)
mov
ins
popa
test
addr16
ss
mov
dec
sub
dec
mov
shl
imul
das
xchg
xor
test
bound
bound
mov
int
sbb
sbb
in
cwde
cwde
mov
loopne
popa
fimul
mov
push
mov
pop
xor
fs
ja
loop
hlt
pop
mov
in
mov
std
(bad)
jge
jmp
mov
bound
call
leave
pop
add
adc
and
sub
aaa
sbb
xchg
call
jo
mov
inc
lods
jo
xor
dec
xchg
inc
or
test
pop
test
fld
(bad)
int3
(bad)
pop
sub
xchg
xor
aad
ret
call
pop
mov
scas
add
jns
imul
push
mov
pop
xor
aad
int3
cmp
aam
mov
loop
enter
std
or
cld
inc
out
mov
cdq
pop
inc
push
enter
xchg
rol
call
pop
scas
or
stc
xchg
test
jmp
and
jnp
pop
fistp
dec
dec
dec
jno
popa
lea
outs
es
inc
jo
test
fldcw
inc
stos
stos
mov
icebp
retf
fidiv
pop
dec
jbe
push
cmp
movs
sub
xor
xor
adc
mov
out
xor
addr16
out
push
iret
int3
in
mov
ja
mov
rol
iret
mov
loope
cmp
cmp
icebp
loope
and
xchg
mov
and
push
imul
pushf
pushf
les
sub
int
add
test
mov
fistp
push
les
iret
mov
or
lods
(bad)
test
xor
push
xchg
push
push
push
jp
sbb
sar
push
mov
mov
xor
jmp
xchg
and
inc
(bad)
xor
sub
and
pop
jbe
(bad)
cmp
retf
les
fadd
std
jmp
push
bound
jmp
fwait
adc
cmp
mov
xchg
std
or
int3
ret
xchg
iret
call
cmp
loope
sub
xchg
call
or
jmp
pop
repnz
dec
pushf
enter
movs
icebp
mov
adc
xor
sbb
sbb
jae
cmc
arpl
sub
push
or
fiadd
pop
das
aam
int3
mov
ins
arpl
outs
xchg
outs
fwait
push
sbb
loope
pop
add
call
mov
jnp
les
outs
ficomp
shr
lock
pusha
pop
icebp
hlt
dec
das
fcmovne
xor
and
iret
aam
push
arpl
and
xor
sti
cmc
inc
jl
inc
(bad)
xchg
stc
cwde
call
inc
das
lock
sbb
or
and
cmp
ret
repz
adc
inc
ret
sub
sbb
sub
int3
mov
in
mov
in
adc
iret
pop
hlt
out
mov
push
fxtract
cdq
and
lock
or
not
jp
imul
ja
and
add
mov
cmp
aad
jecxz
out
(bad)
fisttp
ret
or
pop
call
push
fidivr
ror
test
aas
(bad)
(bad)
call
popf
cli
cmp
lods
mov
pop
popa
sub
hlt
rol
add
enter
dec
adc
inc
aam
dec
movs
sub
and
push
adc
inc
inc
fs
imul
inc
mov
jns
mov
daa
fisttp
mov
addr16
lahf
push
int
loope
mov
jp
xchg
and
pushw
jecxz
add
jp
mov
clc
scas
iret
sbb
push
test
nop
add
call
jmp
fucomp
xor
or
lock
aad
in
lds
adc
fdiv
pop
xlat
sbb
dec
cwde
ss
mov
sub
mov
xchg
fiadd
std
add
int
lods
int
js
or
mov
enter
and
sbb
cmovbe
bound
mov
shl
adc
pop
call
pop
data16
inc
int
pushf
in
cmps
dec
xchg
out
repz
mov
jle
loope
mov
out
rol
xchg
push
nop
sti
inc
test
cld
push
mov
outs
dec
adc
push
add
push
adc
and
test
test
pop
(bad)
ss
imul
(bad)
mov
or
mov
add
repz
jp
add
sar
ins
push
js
push
jge
add
adc
je
(bad)
stc
sbb
mov
cmp
cmp
mov
and
inc
sbb
aad
mov
fst
pop
adc
add
imul
dec
je
ins
sbb
push
jo
mov
sbb
data16
ficom
stos
inc
add
sub
fld
mov
and
das
dec
jl
push
mov
jno
retf
lock
push
adc
fwait
pusha
rol
lea
icebp
lds
pop
mov
add
aam
jnp
imul
lahf
loope
add
mov
pushf
xor
mov
lock
out
jbe
mov
mov
aaa
retf
pop
adc
push
in
sub
and
add
int3
jecxz
int3
push
jmp
or
sbb
test
movs
lahf
scas
mov
ds
cwde
imul
out
inc
test
pop
loopne
inc
aaa
addr16
dec
pop
push
add
gs
fs
pop
cmp
xchg
test
rcr
jmp
dec
sbb
dec
mov
(bad)
repz
or
scas
pop
dec
fcmove
pop
test
xor
fwait
gs
rcr
jmp
xchg
arpl
push
sahf
loop
push
adc
lea
(bad)
inc
cld
mov
cld
int
add
xor
jmp
xlat
jmp
xor
cld
sub
mov
(bad)
push
ret
xchg
dec
xchg
xlat
or
xor
neg
mov
xor
sbb
dec
adc
mov
adc
or
icebp
cdq
jmp
lea
movs
xor
pop
adc
fdiv
mov
aas
icebp
out
mov
cli
add
(bad)
push
int3
pop
rcr
inc
mov
std
cwde
dec
mov
shl
scas
bound
dec
pop
call
leave
push
(bad)
push
jl
out
xchg
sbb
add
push
jns
test
loop
xor
add
outs
jmp
dec
lds
retf
fisub
outs
mov
pop
fucomi
fbld
inc
popa
call
ret
mov
xchg
sbb
fsubr
call
sbb
pushf
movs
pusha
mov
jnp
fist
imul
loope
mov
(bad)
pop
test
aad
rep
int
xchg
jmp
jb
shr
pop
in
mov
inc
inc
and
(bad)
arpl
imul
mov
fwait
add
jmp
repnz
dec
jg
loop
adc
push
div
cmp
pop
adc
cmp
pop
aad
add
sub
shl
mov
(bad)
cs
cli
outs
fwait
pop
xor
mov
scas
lahf
xchg
retf
push
out
test
and
leave
(bad)
loopne
adc
dec
or
and
jmp
pop
mov
dec
mov
xchg
push
out
inc
sbb
or
mov
inc
into
fs
dec
add
(bad)
out
mov
mov
push
and
leave
lods
addr16
push
imul
cli
xchg
jae
or
xchg
mov
leave
lea
jno
cmp
or
mov
mov
inc
(bad)
mov
xor
enter
dec
jmp
gs
pusha
mov
call
xchg
(bad)
xchg
in
lea
pusha
sbb
call
scas
sub
pop
cmp
daa
mov
push
or
xchg
aam
(bad)
popf
mov
cmp
adc
sar
psrlw
pop
ror
fucom
cmp
scas
xchg
inc
int3
scas
xchg
add
inc
inc
je
jecxz
jge
mov
mov
sbb
jmp
ror
test
sbb
enter
lahf
retf
cwde
rcr
dec
jmp
iret
mov
push
ror
scas
jnp
push
outs
stos
je
cwde
cmp
outs
in
outs
inc
rol
scas
sub
add
sbb
fidivr
xor
sbb
fldenv
pop
iret
ins
pop
imul
add
fnstsw
sti
cmps
jecxz
sbb
dec
test
das
call
fwait
mov
loope
xlat
sub
push
inc
jecxz
xlat
enter
in
rol
xchg
scas
adc
retf
in
stos
arpl
mov
mov
fld
and
(bad)
inc
jmp
pop
mov
xchg
xor
sub
lds
retf
dec
inc
int
add
adc
stc
call
jle
push
movs
pop
into
add
or
sbb
xor
lods
mov
movs
lock
pop
neg
in
xor
pushf
test
jnp
ret
xchg
sbb
fstp
push
dec
daa
mov
xchg
xor
inc
pop
pop
imul
sbb
(bad)
in
in
dec
xor
cmp
test
jo
mov
push
add
jecxz
adc
jo
push
imul
sub
lds
cld
pop
cmc
mov
loope
mov
icebp
cwde
sbb
xchg
xchg
sub
and
pop
(bad)
dec
gs
mov
out
enter
jno
(bad)
push
adc
mov
pop
adc
mov
xor
lock
shl
lock
into
(bad)
sub
mov
or
pushf
cmps
xchg
push
mov
pusha
nop
mov
xor
shl
ficom
or
cmp
ret
and
and
mov
movs
test
mov
push
inc
jbe
adc
daa
xor
cmp
fs
xor
ss
jl
es
data16
daa
pop
(bad)
nop
cmps
mov
test
and
repz
nop
fstp
dec
push
sub
in
xchg
mov
inc
push
mul
pop
adc
sahf
jno
popa
aas
add
shl
lods
xchg
mov
lahf
dec
pushf
fsub
cdq
sbb
xchg
mov
mov
and
push
in
pushf
mov
adc
into
jne
xchg
test
bound
pop
and
push
ds
inc
sahf
je
rol
cmp
adc
stos
adc
fs
xor
fistp
inc
pop
pop
es
mov
(bad)
ins
mov
and
jo
repnz
shl
(bad)
jmp
cmp
(bad)
(bad)
icebp
ss
pop
in
hlt
xchg
mov
jmp
xor
stos
jg
fcomp
(bad)
or
pop
sub
cwde
cmp
sar
je
mov
pop
(bad)
pop
and
add
(bad)
sub
sbb
jnp
cld
cmp
in
test
out
mov
add
xchg
dec
xchg
mov
pusha
stos
dec
or
clc
dec
mov
mov
popf
mov
sbb
fcmovnb
leave
xor
outs
cmps
fsubr
fsubr
sub
xchg
xor
je
pop
bound
jmp
shl
or
gs
popf
adc
clc
sbb
and
push
xor
xchg
retf
je
xor
or
out
cmp
dec
inc
fwait
jle
fmul
ret
push
or
adc
sub
rcr
mov
call
cld
xchg
cmp
push
pop
(bad)
sbb
mov
fcom
test
mov
mov
outs
xchg
push
cli
mov
sub
enter
xchg
call
gs
(bad)
jg
sti
ins
int
and
inc
cmp
mov
mov
popa
inc
call
xor
(bad)
or
stos
push
inc
inc
xchg
pop
mov
xchg
ins
call
and
fbstp
or
into
outs
cli
cmp
adc
dec
sbb
outs
xor
repz
out
jo
mov
mov
mov
int3
into
cmp
div
mov
scas
idiv
dec
pop
in
mov
shl
pusha
cmps
aaa
pop
pop
hlt
inc
popf
add
ins
rol
mov
in
sbb
pop
push
(bad)
mov
mov
sub
mov
sub
inc
cmp
ins
sbb
pop
popf
pop
cmps
add
sbb
cmps
sbb
push
test
sar
dec
mov
xchg
jno
inc
aam
out
jle
and
fist
xchg
and
ror
sub
mov
add
sbb
test
jge
push
nop
loopne
rcl
jl
pusha
rol
xor
repnz
std
cmps
push
dec
sbb
popf
and
mov
ret
jmp
mov
xchg
add
call
pop
sub
xchg
push
frstor
jb
xchg
push
fucomip
push
lahf
ds
and
cwde
xor
pop
hlt
mov
push
mov
add
stos
std
mov
and
push
gs
or
pop
leave
and
dec
jo
inc
adc
mov
xchg
icebp
lods
fisttp
sub
xlat
(bad)
js
mov
lds
loope
sub
mov
push
adc
dec
jecxz
test
jb
dec
idiv
rcl
bound
pmullw
stc
cmps
jno
jle
and
popa
sbb
jge
out
mov
inc
test
mov
sbb
push
lock
jp
jae
cmp
cmc
test
lock
and
xor
mov
add
(bad)
(bad)
pushf
inc
and
fst
xor
dec
pop
xchg
std
cmp
out
add
movs
in
cmps
push
aad
adc
scas
or
std
mov
jge
push
call
mov
cmps
in
call
jl
push
ds
add
dec
mov
nop
ins
loopne
lock
int
retf
sbb
add
sub
sub
dec
neg
pop
or
enter
jb
in
call
cmps
rcr
call
xchg
jp
dec
pop
cmp
jmp
retf
sub
pop
dec
lods
sti
out
xchg
shl
mov
or
mov
sbb
xchg
cmp
or
dec
sbb
xchg
push
push
pop
push
push
pusha
add
aam
xchg
mov
adc
push
dec
push
jbe
jmp
mov
inc
js
xlat
pop
pushf
jmp
add
inc
xchg
xor
and
aaa
fidivr
stos
jmp
fild
mov
and
popa
push
out
div
inc
or
out
in
mov
or
repz
test
jl
sbb
test
aad
js
int
dec
sub
cmp
neg
jo
out
add
mov
adc
enter
jmp
cmp
fimul
adc
cs
leave
fst
dec
fidivr
add
xor
jb
ficom
bound
cmc
ficomp
ja
pop
scas
test
mov
push
and
cmp
out
cwde
push
cmps
in
pop
push
and
loop
iret
aas
fisubr
in
inc
sti
cdq
stos
and
and
pop
in
(bad)
aad
repnz
push
std
xchg
jns
push
(bad)
mov
cmp
pop
(bad)
div
loope
sub
and
adc
retf
ins
in
mov
adc
fiadd
rcr
dec
(bad)
sbb
popf
sub
mov
and
out
jnp
lahf
push
enter
mov
jne
loop
dec
daa
xchg
out
fdivp
neg
out
lock
jno
dec
xchg
mov
xlat
imul
push
jo
test
test
out
pop
ret
outs
es
outs
cwde
js
fs
(bad)
mov
cmp
add
mov
adc
(bad)
movs
shl
repz
inc
xor
lods
xor
ins
sub
pop
add
mov
add
jbe
dec
add
ja
adc
dec
pop
jae
movs
xchg
inc
sbb
popfw
inc
sar
mov
popf
clc
cmp
into
lahf
xlat
push
into
es
ja
mov
shl
jns
ret
(bad)
mov
cwde
fld
add
pop
les
dec
hlt
mov
add
jo
and
lock
cmp
repz
cli
inc
cmp
hlt
sbb
lahf
or
test
mov
div
idiv
add
fld
shr
and
test
(bad)
push
cmc
pushf
mov
dec
ficomp
repnz
dec
dec
pop
mov
push
pop
out
daa
(bad)
je
cmp
lods
sub
imul
inc
test
jl
inc
pop
add
mov
and
mov
out
imul
dec
test
clc
jnp
into
inc
rol
retf
jns
push
and
push
push
inc
xchg
sub
cs
out
cli
adc
xor
ficomp
xchg
and
sub
adc
ins
add
push
sub
arpl
mov
push
mov
or
dec
or
fisubr
test
and
mov
inc
mov
pop
loop
and
ret
fsubr
(bad)
(bad)
mov
mov
mov
sub
das
rcr
pop
sbb
dec
push
retf
and
or
inc
push
push
stc
pop
aam
lds
xlat
fwait
arpl
(bad)
rcl
fiadd
cmp
mov
xor
push
push
fst
and
xor
repnz
mov
inc
cdq
add
add
(bad)
std
pop
pop
inc
pop
xchg
pushf
pminub
jmp
cmp
int
sub
or
pop
sbb
inc
push
in
xchg
and
inc
adc
jb
xor
jmp
in
repz
les
dec
sub
pushf
xor
fmul
mov
and
popf
mov
inc
in
ja
data16
lods
mov
imul
aas
les
mov
push
scas
push
dec
sub
sub
push
pop
scas
mov
(bad)
xor
inc
or
jge
or
cmp
je
out
xchg
mov
xor
adc
jge
stc
out
movs
das
and
mov
mov
mov
iret
adc
mov
adc
repnz
mov
aaa
mov
idiv
(bad)
lds
(bad)
mov
mov
int3
xchg
jge
pop
inc
push
jge
in
js
pop
mov
jb
add
mov
adc
dec
xchg
int
lods
sahf
push
fs
fcomp
sbb
cdq
add
xlat
stos
xchg
scas
push
test
inc
out
enter
mov
adc
adc
or
stc
cmps
sub
push
neg
(bad)
fadd
ret
push
mov
lods
je
inc
add
pop
aad
aaa
retf
ins
sub
mul
mov
adc
shl
cmp
fsub
cmp
and
xor
pop
enter
mov
fwait
inc
xor
mov
mov
or
cmp
xchg
sub
stos
sub
daa
pop
stc
sbb
pop
mov
out
clc
jns
sub
push
data16
or
mov
mov
rcr
xor
test
das
ret
fs
test
cld
inc
add
in
xchg
add
imul
mov
aaa
ja
fld
push
into
mov
out
fisttp
and
cmps
test
loope
bound
xchg
xor
int3
jb
in
and
mov
call
push
inc
imul
add
test
call
lar
sbb
sub
mov
mov
out
fstp
cwde
sub
repnz
lds
mov
dec
neg
jge
in
loope
enter
test
xchg
fcomp
and
pop
das
jecxz
add
or
or
xchg
push
lds
test
xchg
push
xor
or
mov
movs
fdivr
add
fwait
les
ret
pop
loopne
mov
xchg
jne
sbb
mov
gs
cmps
and
js
xlat
inc
sbb
xor
xchg
popa
in
and
sub
xchg
push
dec
mov
mov
jno
mov
fdiv
rol
enter
adc
xchg
sub
jae
add
ret
dec
xlat
mov
dec
fcomp
mov
fmul
test
mov
bound
mov
jns
dec
popf
or
imul
scas
jle
jmp
in
cmps
sbb
mov
ss
xchg
ret
cmps
repz
push
hlt
leave
rcr
imul
out
ret
pushf
cld
repz
mov
push
xchg
and
(bad)
in
out
in
scas
lods
fdivr
je
xchg
imul
pop
mov
mul
test
bound
adc
sbb
cmps
xor
cmps
jle
stos
xchg
scas
mov
and
push
or
aam
imul
cdq
xor
mov
bound
push
adc
sbb
inc
data16
fist
cmp
clc
(bad)
and
mov
xchg
inc
cmp
mov
leave
and
addr16
adc
retf
mov
jns
pushf
and
mov
inc
repnz
out
mov
and
test
xor
stc
fistp
adc
inc
pushf
adc
out
xchg
push
aas
add
jne
adc
aam
pusha
rol
mov
inc
push
aam
xchg
xchg
sub
aas
je
adc
idiv
pop
xchg
push
or
jnp
test
data16
ret
pushf
jnp
and
fmulp
and
hlt
cmps
push
push
lfs
add
push
push
scas
cld
stc
jne
push
js
(bad)
push
dec
cmps
xchg
shl
lds
sahf
jo
mov
dec
mov
scas
cdq
js
out
rcl
leave
std
or
jmp
mov
pop
jne
fsubr
loope
push
mov
repz
mov
jge
cmp
jle
cmp
int
arpl
jmp
jmp
je
loopne
(bad)
leave
iret
mov
jbe
inc
mov
add
push
ret
rol
sbb
sbb
mov
popa
shl
lods
aad
cmp
mov
dec
aaa
lods
retf
xchg
and
pushf
mov
xor
mov
xor
addr16
xor
or
jnp
sti
jp
movs
xor
sub
imul
sbb
mov
fdiv
scas
mov
add
cmp
mov
push
aas
dec
imul
inc
inc
or
rol
inc
into
pop
leave
(bad)
mov
aad
jecxz
int
fs
pop
cmp
xchg
enter
push
xor
outs
movs
sbb
(bad)
(bad)
jbe
inc
popa
stos
movs
pop
fdiv
iret
inc
cmp
into
mov
loop
push
mov
xor
sbb
int3
or
ds
fidiv
stos
in
lods
add
or
cmp
xchg
jecxz
mov
push
push
ror
inc
or
and
jp
inc
rol
dec
les
xor
into
mov
enter
xchg
stc
sar
mov
jo
out
mov
lods
clc
mov
mov
push
mul
cmps
enter
mov
lds
add
pop
sub
add
call
push
es
call
sti
clc
push
rcr
sbb
mov
mov
not
addr16
dec
xchg
mov
jg
arpl
aaa
ss
fisubr
and
xor
pop
call
stos
dec
fwait
jno
repnz
adc
push
or
retf
mov
ja
in
cmp
scas
and
mov
stos
sbb
adc
fwait
mov
test
lods
(bad)
push
jp
sub
xchg
daa
adc
sbb
pop
in
add
xor
dec
dec
jecxz
stos
or
pop
mov
sbb
into
arpl
add
pop
movs
retf
aad
xchg
mov
das
inc
xchg
ins
or
imul
pop
xor
stc
dec
xor
rcl
(bad)
out
push
call
mov
xchg
ja
adc
xchg
jp
pop
dec
dec
sub
push
arpl
push
adc
jo
leave
xor
outs
clc
pop
pop
stos
out
mov
dec
and
dec
lahf
(bad)
or
ja
clc
inc
mov
xor
dec
in
fstp
xchg
rol
shl
aam
stos
mov
xchg
or
mov
add
push
cmc
sbb
mov
push
cmc
jb
mov
push
adc
mov
mul
test
idiv
inc
ss
and
mov
lods
lahf
icebp
inc
add
xchg
adc
inc
xchg
jl
dec
jno
scas
push
xchg
cwde
mov
push
inc
dec
das
inc
xlat
call
cld
inc
retf
loop
stos
int
loop
cmp
push
sti
inc
loopne
repnz
test
cdq
mov
adc
cld
leave
psllq
jae
sub
and
sbb
mov
xchg
loope
jmp
shl
push
inc
dec
adc
mov
push
adc
sub
cmp
dec
pop
sbb
movs
movs
dec
test
xchg
pop
dec
icebp
imul
mov
std
sub
outs
mov
retf
sbb
sub
or
mov
pop
daa
adc
pop
loopne
and
mov
rcr
dec
mov
leave
lock
(bad)
dec
ret
mov
pop
xchg
pop
push
inc
test
iret
out
xor
xchg
pop
outs
mov
add
mov
mov
cwde
pop
je
xor
sub
cmc
aaa
sbb
call
mov
mov
aas
aam
mov
mov
aad
mov
outs
rcl
test
mov
pop
adc
pop
out
outs
mov
inc
push
jmp
adc
(bad)
fldcw
jmp
retf
inc
aaa
pushf
and
ror
rcl
cmp
ins
push
mov
in
scas
outs
or
data16
adc
pop
xchg
ret
aad
cmps
sbb
xchg
repz
pop
push
fisttp
cmp
idiv
std
jne
in
lods
in
cli
(bad)
and
(bad)
int
xchg
mov
es
mov
mov
sahf
je
mov
shl
push
jbe
or
ja
cmp
mov
bound
or
arpl
daa
add
rol
call
les
fild
adc
fcom
push
hlt
jl
dec
lea
js
or
lds
scas
dec
popa
cmc
data16
or
ins
sub
fnstenv
push
mov
leave
shr
fs
lds
sbb
or
xchg
aad
dec
lahf
mov
xchg
mov
pop
rcr
or
pop
rol
fistp
retf
dec
mov
push
jecxz
or
pop
pop
mov
xchg
and
xchg
xchg
enter
call
dec
ret
or
shr
mov
pop
popf
jecxz
das
fisttp
(bad)
pop
sbb
sbb
inc
mov
sbb
test
mov
ins
imul
jo
ins
pushf
mov
mov
adc
mov
aam
nop
or
cmp
std
mov
loop
or
xchg
sbb
sahf
(bad)
cmp
daa
inc
and
pop
test
aam
push
popa
aaa
imul
les
fndisi(8087
fstp
int3
dec
push
ret
pop
mov
inc
xchg
ffreep
pusha
cmc
fwait
and
xchg
loop
stc
inc
and
pop
test
pop
pop
dec
pop
xor
arpl
cmp
(bad)
test
jg
sbb
cs
pop
mov
loope
inc
cmp
push
and
dec
sub
mov
enter
stos
loop
ins
sar
sbb
xor
push
out
sbb
out
(bad)
sub
mov
fstp
sbb
lahf
mov
(bad)
out
pop
fs
lods
adc
adc
cmc
pop
inc
xlat
cmp
xor
mov
jo
jecxz
pop
movs
adc
adc
add
shr
inc
add
icebp
jle
nop
fimul
ins
xchg
in
jmp
inc
dec
jp
shl
aaa
leave
cmp
push
jne
add
pop
jmp
dec
sbb
scas
jno
xchg
jns
jle
xor
jg
push
cmps
data16
fld
cmps
or
push
in
jnp
and
bnd
pop
int
jecxz
movs
not
leave
sar
std
mov
test
cmp
retf
xor
adc
sti
outs
retf
pushf
mov
or
hlt
rol
jle
sub
sub
cld
xchg
lea
bound
ret
mov
lahf
popf
lock
btc
enter
jb
sbb
add
or
sbb
jecxz
pop
jns
mov
in
lods
sti
hlt
(bad)
leave
cs
inc
xchg
ret
cs
rcr
pusha
lods
dec
and
pop
adc
pop
inc
loop
xchg
mov
mov
sub
dec
arpl
jle
push
das
imul
inc
stos
clc
retf
sbb
in
cld
pushf
add
enter
mov
idiv
mov
pop
bound
aaa
cmp
inc
loope
pop
stos
push
inc
fldcw
dec
imul
fist
or
jle
or
or
xor
xor
add
and
popf
push
sbb
sbb
xor
fmul
(bad)
xchg
nop
int
stc
sbb
sbb
ins
leave
xchg
rcr
add
mov
call
mov
inc
pop
mov
dec
frstor
out
jle
call
inc
movs
push
or
call
adc
popf
jg
xchg
push
scas
mov
mov
push
push
jmp
push
mov
icebp
mov
mov
sar
inc
popf
call
(bad)
sar
mov
sbb
dec
cdq
jbe
sub
inc
movs
fs
cdq
mov
xchg
outs
mov
mov
add
fmul
arpl
lds
iret
jl
add
imul
je
jnp
push
sbb
xchg
cs
jge
call
fst
and
inc
or
xor
cmps
cmc
and
dec
lea
loop
ins
dec
cmp
bound
pop
mov
pop
scas
mov
push
sub
push
shl
cwde
ins
jl
aam
xor
add
push
(bad)
imul
scas
xor
pop
cmp
push
mov
mov
xor
and
dec
mov
cmp
pop
jg
adc
mov
jle
dec
sti
cmp
pop
jo
inc
xchg
jns
rcl
int3
in
cmc
jae
fiadd
push
out
imul
mov
mov
ins
jmp
es
aad
mov
adc
mov
jmp
xor
gs
std
stos
sub
and
lods
std
and
mov
rcl
aas
aad
das
adc
enter
add
ret
shr
push
int
mov
jle
popa
jno
test
sbb
hlt
jo
dec
jle
push
aaa
jbe
and
xchg
mov
icebp
repnz
retf
(bad)
rol
std
or
dec
pop
js
fnstcw
push
cmc
data16
xor
test
and
jo
neg
icebp
mov
ret
repnz
rcl
aad
sahf
stos
jecxz
ss
lock
xor
push
sub
iret
mov
fisttp
add
fcmovu
mov
cmovbe
sbb
(bad)
xchg
sub
cld
dec
int
out
je
fbstp
(bad)
mov
(bad)
xor
push
inc
test
mov
cli
mov
test
adc
les
movs
pop
inc
sbb
test
ds
int
jmp
rcl
lock
inc
movs
test
jge
push
(bad)
fbstp
outs
test
movs
(bad)
jbe
add
xor
or
cmp
rcr
cmps
out
cmp
in
ins
cdq
int
jns
(bad)
out
cmp
daa
jp
push
push
dec
lea
ret
cmp
aam
ss
addr16
mov
adc
aam
pop
fstp
dec
(bad)
cmps
mov
mov
or
sahf
mov
lods
inc
and
(bad)
or
das
inc
sbb
push
loope
add
add
rcr
fidivr
adc
cdq
sbb
sbb
popa
shl
lods
lock
push
sahf
cld
mov
in
bound
rcr
jne
fadd
(bad)
inc
add
shr
and
jp
rcl
pop
and
push
icebp
xor
inc
lea
enter
ret
fsub
pop
mov
inc
rcl
jne
mov
aas
retf
aaa
cwde
retf
pop
fs
das
pop
adc
xchg
push
rcl
sti
jmp
es
ins
add
cdq
call
sub
dec
and
cmps
xlat
sti
icebp
xlat
je
aad
in
jecxz
mov
xchg
mov
and
sbb
movs
pop
shr
cmc
pusha
(bad)
mov
sahf
in
fs
jo
mov
xor
inc
cld
sbb
dec
nop
pop
jmp
mov
jae
imul
mov
mov
iret
cmps
push
jno
dec
(bad)
(bad)
repnz
dec
cs
mov
outs
push
adc
or
mov
cdq
jns
call
lods
inc
je
adc
xchg
bound
xchg
retf
les
lahf
and
test
and
das
adc
cmc
push
(bad)
out
add
and
sahf
xlat
les
mov
mov
fldenv
or
xor
popf
imul
das
mov
adc
enter
ret
imul
stc
sub
inc
xor
call
dec
pop
xchg
fcomi
sub
push
jmp
pop
inc
xchg
inc
icebp
fild
adc
mov
mov
jge
push
dec
mov
sbb
adc
ret
push
es
pop
imul
push
sub
call
mov
mov
inc
jmp
ret
push
sub
test
push
jno
fadd
jne
and
adc
loope
and
xor
aad
xchg
or
pop
or
or
jb
lock
dec
cmp
cmc
pop
mov
add
int3
xor
sbb
pop
stos
mov
mov
je
sbb
push
inc
sbb
mov
xchg
fucomip
jb
ins
pusha
xor
out
test
outs
(bad)
cli
push
lahf
fwait
push
and
hlt
pushf
movs
(bad)
mov
ins
mov
and
or
xchg
addr16
dec
cwde
in
mov
xchg
test
cmp
fisttp
and
inc
sub
push
xor
add
movs
mov
xor
test
sub
sub
mov
addps
xlat
push
sbb
das
pop
fimul
retf
xchg
test
sbb
in
sbb
dec
fwait
push
push
retf
mov
sbb
fist
cli
inc
imul
or
cld
pop
cmp
clc
push
test
js
loopne
mov
push
add
push
xchg
pop
lods
inc
fadd
inc
js
adc
aam
std
mov
fsubp
add
sahf
xlat
test
mov
pop
or
out
call
jmp
push
in
(bad)
ins
mov
xchg
push
sbb
jg
adc
test
lahf
sbb
mov
sbb
push
mov
sub
dec
inc
fstp
ret
(bad)
test
pop
ins
sub
mov
(bad)
ret
sti
test
mov
lahf
ret
and
outs
and
or
jge
or
stos
imul
pop
fwait
jmp
push
out
imul
add
inc
leave
jge
loop
cmp
int3
(bad)
jl
jns
jg
push
ins
pushf
jmp
jl
lock
rcr
enter
sbb
jbe
ficomp
sbb
xchg
in
lock
hlt
add
xchg
cmps
leave
ret
mov
pusha
push
ins
sbb
mov
neg
cmc
or
xor
das
fdivr
and
mov
sbb
add
push
mov
mov
rcr
shl
lock
(bad)
xor
lods
mov
sahf
pop
xor
js
xchg
inc
jmp
lods
or
xor
les
adc
pusha
mov
fld
imul
jae
mov
pop
loope
rcr
das
adc
je
jg
add
sub
pop
imul
(bad)
pop
fwait
daa
dec
sub
fsub
je
adc
cmp
das
nop
scas
ret
or
mov
(bad)
cmps
popf
xor
mov
xor
xchg
ret
xchg
jge
push
or
or
sub
dec
hlt
ins
push
xchg
stc
aad
adc
mov
xor
in
adc
test
adc
pop
in
inc
mov
repz
stos
push
xor
and
push
leave
mov
pushf
pop
mov
jb
cld
jecxz
out
nop
cmps
out
sub
outs
addr16
add
je
cmc
cmp
dec
adc
les
imul
jbe
sub
fldcw
daa
sar
ins
shr
or
lods
pop
jbe
push
(bad)
out
mov
aad
or
fsubr
xchg
dec
cs
pop
or
ret
or
sub
or
pop
add
call
xchg
pop
ja
fsubr
sar
ret
adc
inc
cwde
dec
jecxz
add
cs
sub
sbb
(bad)
cmc
or
pop
(bad)
xor
pop
cmp
(bad)
in
lds
dec
fiadd
sbb
xor
mov
(bad)
sbb
add
cmp
aam
cmp
or
dec
cmps
sar
sbb
cdq
push
add
into
mov
mov
inc
leave
retf
or
pop
adc
sub
xor
mov
lea
test
cmp
lods
push
jae
jmp
jo
out
push
stc
les
inc
jmp
fnstsw
or
data16
mov
cmp
jae
(bad)
xor
lods
in
adc
cmc
push
loope
or
xchg
loope
out
xor
mov
push
aas
mov
mov
jecxz
ret
push
loopne
cmp
or
mov
dec
in
mov
daa
push
xor
int3
sbb
ins
pop
aaa
fstp
mov
std
mov
jmp
icebp
push
xchg
xchg
inc
scas
lock
inc
fild
lods
push
cmps
in
call
idiv
jle
push
xor
mov
pushf
push
rcl
pop
add
and
clc
cdq
sbb
mov
jmp
xor
mov
test
je
cdq
ret
test
sub
aaa
add
and
lahf
adc
push
xchg
inc
cmp
xor
push
and
fild
cmp
leave
add
fdiv
xor
not
jge
icebp
mov
mov
loopne
sub
pop
push
or
stos
and
stos
sbb
aam
and
sub
scas
dec
xor
and
sbb
not
add
(bad)
push
aam
sbb
xor
dec
and
cmp
jecxz
pop
push
imul
fsub
pop
mov
jp
jae
mov
test
pop
pop
cli
lea
std
xor
call
clc
jae
cmp
scas
iret
popa
ret
ds
daa
jnp
sti
jge
jle
iret
popa
push
sub
mov
shl
imul
mov
sti
and
bound
hlt
cdq
mov
ret
mov
push
enter
jnp
pop
adc
out
and
push
popa
cwde
int
pop
xchg
fidivr
sub
jmp
ss
ins
shr
dec
pushf
fst
call
pop
push
test
jns
repz
loopne
loop
out
xor
jb
or
fiadd
shr
pop
mov
push
pop
mov
pop
bound
scas
call
and
dec
neg
loop
pop
xor
xchg
xor
pop
ins
test
sahf
sahf
lds
cld
cmp
aaa
and
ret
jmp
enter
pop
cmp
inc
dec
mov
cmp
push
shr
rol
aad
bound
push
push
cmp
dec
dec
and
scas
sub
and
imul
loopne
sbb
leave
ret
data16
ret
mov
(bad)
(bad)
pop
(bad)
cmp
sti
sbb
mov
iret
scas
loope
cmp
jbe
sbb
enter
(bad)
push
(bad)
lods
les
aam
adc
and
rcr
nop
mov
push
out
push
mov
lock
ins
xchg
lahf
jo
imul
pavgw
iret
mov
xor
inc
sub
inc
retf
push
dec
mov
ror
push
out
pop
repnz
push
in
sub
repnz
mov
adc
jae
rcl
mov
adc
fnsave
push
push
xor
ja
subps
icebp
mov
xor
dec
mov
mov
gs
popf
test
(bad)
(bad)
push
hlt
loopne
sub
cmps
call
mov
sahf
cmps
or
das
ret
les
mov
mov
mov
mov
jne
and
xchg
stc
mov
div
(bad)
mov
int
(bad)
xchg
xchg
add
call
inc
sub
push
out
mov
add
ror
pop
ins
push
sbb
scas
cmc
out
or
add
xchg
cli
cmps
in
push
loopne
leave
pop
jl
mov
or
or
(bad)
jl
in
push
lds
sub
cmps
jle
icebp
mov
out
or
inc
inc
and
sbb
loopne
loope
nop
shl
push
popa
call
mov
nop
dec
sbb
sub
xchg
shl
ins
sub
ret
out
mov
adc
pop
add
outs
data16
mov
mov
dec
jne
fidiv
xchg
mov
push
jbe
fdivr
(bad)
jb
sub
jmp
push
mov
sbb
inc
stos
or
stos
(bad)
scas
dec
mov
push
xor
pushf
mov
push
inc
(bad)
cmp
iret
pop
or
loopne
call
fwait
cdq
adc
fs
xor
sub
out
xchg
jecxz
nop
cmp
cmp
mov
mov
fisubr
jno
push
xchg
movs
sub
hlt
loopne
or
mov
outs
aaa
fs
test
xchg
pop
push
mov
scas
enter
mov
pop
in
dec
adc
mov
dec
xchg
jp
and
and
mov
scas
sbb
gs
push
mov
jecxz
aad
adc
outs
imul
dec
jnp
or
push
mov
and
aam
xor
push
mov
dec
adc
les
outs
hlt
sbb
rcl
dec
in
ret
dec
or
dec
jmp
sub
push
cmp
pop
aad
inc
shl
add
adc
ins
xor
mov
sar
add
not
xchg
sub
loopne
mov
repz
add
imul
out
in
rcl
sub
pop
mov
mov
pusha
xchg
jae
xchg
enter
idiv
ins
fsubr
aas
mov
call
scas
jb
push
jae
movs
jnp
cmp
add
add
(bad)
jmp
push
and
jno
stos
jae
imul
imul
es
mov
or
fnstenv
inc
outs
jmp
(bad)
rcr
retf
sbb
and
inc
mov
pop
sbb
sti
fidivr
loop
push
push
xchg
pop
add
inc
add
daa
sbb
pushf
mov
rcr
std
cmps
sbb
add
xchg
call
(bad)
sub
js
bound
movs
call
ficom
sar
dec
dec
bound
enter
dec
js
mov
(bad)
xor
ins
das
jb
sub
mov
in
movs
cmc
mov
fwait
(bad)
sub
sahf
push
jle
loope
or
js
cmp
and
pop
fwait
hlt
(bad)
je
shr
(bad)
lock
inc
nop
mov
adc
pop
push
outs
arpl
add
mov
leave
jmp
cmp
stos
(bad)
lods
sub
push
cdq
cmp
sbb
jae
cmps
mov
sbb
xchg
mov
arpl
cmp
xlat
lds
add
and
iret
mov
scas
mov
mov
frstor
mov
adc
sub
and
push
fisttp
sub
out
pushf
inc
retf
xor
sbb
pop
add
and
dec
mov
mul
mov
pop
ficomp
jae
call
mov
cli
lods
and
faddp
cmp
mov
ffreep
inc
dec
push
adc
(bad)
shl
push
out
les
int
add
mov
mov
mov
and
retf
lds
adc
int
scas
(bad)
xor
dec
arpl
pop
aaa
neg
fsubr
pop
xor
pop
je
pusha
out
scas
pop
mov
or
ret
test
and
mov
lahf
aam
dec
mov
mov
je
pop
jle
jae
adc
ret
fucomip
or
sub
add
imul
imul
mov
sbb
(bad)
lahf
in
lock
ins
iret
popf
mov
jbe
enter
push
cmp
imul
sbb
iret
mov
popa
mov
mov
dec
je
sub
jbe
inc
push
pop
test
pop
cmps
sbb
xchg
dec
mov
sbb
outs
retf
push
jbe
cmps
test
dec
hlt
sub
xor
sub
in
inc
rol
enter
call
xchg
cmps
es
adc
daa
jl
cmp
shl
sub
outs
out
xchg
call
in
bound
shl
pop
sbb
in
xchg
mov
inc
cdq
cmp
inc
fs
or
mov
inc
push
cmps
fst
mov
pushf
sbb
xor
sti
ins
fwait
stos
and
ins
data16
jo
int3
dec
icebp
jno
add
mov
push
mov
xchg
das
jg
lock
jnp
iret
add
ret
inc
cld
ficom
sub
adc
iret
mov
mov
cmp
mov
aaa
sbb
mov
out
dec
mov
pop
and
sub
out
addr16
fnstenv
cli
pop
push
cs
in
cmps
sub
das
outs
dec
retf
xchg
xchg
mov
sbb
not
sub
and
daa
into
pop
neg
out
pop
std
add
cmp
shl
xor
mov
mov
or
jne
mov
cmp
popf
jg
imul
xchg
fdiv
cmc
fadd
push
pusha
adc
cmp
xor
add
shr
mov
icebp
(bad)
jae
add
stos
fs
mov
mov
jp
or
dec
lods
xor
mov
pop
enter
enter
cmp
retf
icebp
mov
jp
cmp
shl
cmp
cwde
es
mov
sub
out
and
movs
sbb
dec
fisub
out
cmp
ror
retfw
idiv
pop
test
jnp
cmp
test
cmp
in
or
inc
sbb
stos
adc
mov
aas
push
push
jnp
mov
pop
imul
sbb
cmp
pop
rcl
push
push
(bad)
rcl
xlat
out
jmp
pop
sub
dec
pop
inc
sub
mov
adc
in
xor
and
jns
mov
(bad)
cmp
loope
(bad)
clc
(bad)
pop
pop
dec
rcl
jl
push
test
jbe
jmp
test
int3
lahf
fcomp
fmul
sbb
das
sub
std
(bad)
pop
cmp
xchg
inc
nop
xchg
jg
push
adc
loopne
add
xchg
jbe
push
cdq
neg
adc
mov
mov
xchg
push
sbb
shl
ss
bound
stos
mov
pushf
ins
and
dec
scas
push
sub
inc
or
int
and
jmp
fst
out
xchg
inc
mov
xor
xor
(bad)
mov
push
add
xor
lods
lock
ins
push
sbb
cwde
scas
mov
mov
(bad)
out
push
std
cmps
sahf
adc
add
push
jnp
inc
mov
mov
repz
(bad)
push
cld
not
stos
ins
jo
in
xor
sub
jle
sub
pop
or
addr16
inc
out
pop
mov
in
gs
sub
pop
scas
fisttp
jmp
mov
xor
hlt
xchg
fidiv
repnz
cmps
sbb
pusha
sub
mov
mov
sbb
scas
push
inc
mov
dec
or
test
mov
outs
or
mov
out
and
stc
outs
lds
ret
(bad)
mov
loop
sbb
and
mov
xor
add
retf
mov
imul
fcomp
sbb
out
stos
mov
push
arpl
arpl
xchg
mov
std
fs
mov
xchg
pop
mov
push
cmps
shl
ret
in
mov
and
sub
cmc
je
xchg
test
retf
jne
imul
pop
sbb
pop
jns
in
je
and
inc
and
je
bound
addr16
xor
xchg
mov
xor
ret
xlat
mov
jo
cs
stos
push
xor
or
inc
ror
cwde
scas
cmp
cmps
and
add
cld
mov
(bad)
es
int3
mov
adc
aam
sub
inc
or
lds
dec
pop
shr
sub
xor
adc
bound
retf
dec
scas
and
push
dec
mov
stos
add
lock
bound
and
imul
mov
xor
mov
inc
mov
add
xchg
mov
bound
push
pop
cs
stc
or
jo
imul
gs
inc
mov
sub
jnp
outs
sbb
cmp
push
sti
xchg
std
adc
push
pop
xor
mov
cmp
xor
adc
push
inc
or
hlt
iret
mov
lock
jmp
ret
push
jl
xor
arpl
xlat
stos
fdivr
loopne
add
into
pop
jmp
cmp
sub
adc
shl
mov
aad
clc
lea
ins
inc
jl
fnstenv
call
xchg
dec
and
adc
into
pop
popf
test
icebp
or
mov
les
push
push
fwait
shr
inc
push
ss
mov
aas
pusha
xor
scas
jge
add
pop
scas
xchg
or
pop
and
aam
sti
or
cmp
sub
sbb
aad
test
jp
and
or
xchg
cdq
jns
(bad)
mov
jmp
push
push
dec
cmps
mov
jbe
mov
pop
ret
pop
fwait
retf
pop
(bad)
es
iret
mov
push
mov
(bad)
lods
out
mov
(bad)
sub
not
sahf
or
push
push
les
mov
mov
push
xchg
fiadd
sub
cli
push
int3
jnp
xor
sub
aas
lahf
pop
ja
pop
push
repz
cs
nop
in
pop
mov
jge
cli
adc
xor
pop
in
sti
sub
cmp
cmp
sub
aam
scas
imul
cmp
pop
ins
sub
or
dec
cmps
sub
shr
cli
in
dec
cmp
jnp
popa
fcom
xlat
in
inc
(bad)
fidivr
sub
icebp
and
xchg
iret
aad
pop
jle
stc
pop
bound
cmp
mov
inc
retf
or
mov
mov
pop
cmp
and
outs
pop
repz
ins
cli
mov
cmc
and
add
mov
xchg
jg
cmp
out
add
fld
sub
pop
or
adc
das
aaa
adc
push
shl
mov
jmp
pushf
pusha
retf
out
mov
(bad)
mov
lea
adc
test
pop
mov
xor
rcr
dec
loope
cdq
cmp
fsubr
fnstsw
xchg
pushf
or
icebp
or
test
neg
imul
icebp
mov
scas
cs
push
add
cmps
or
cmc
add
cmp
dec
gs
ja
imul
scas
dec
movs
inc
ror
popf
(bad)
loopne
jmp
clc
cmp
movs
sahf
movs
mov
and
xchg
cmc
cmps
xchg
shl
mov
gs
sub
sbb
in
add
xchg
jmp
pop
dec
outs
and
sahf
cld
aaa
mov
shl
stos
ret
xchg
xor
loop
cwde
pop
fnstenv
test
js
xchg
mov
(bad)
outs
mov
add
and
mov
or
out
pop
das
xlat
mov
adc
lock
dec
cmp
cdq
sbb
mov
or
sbb
or
cdq
leave
dec
fistp
mov
dec
adc
clc
push
pop
fadd
mov
fcmovne
pop
out
not
jnp
in
pushf
push
xchg
cs
dec
xor
jp
stos
rcl
jge
jmp
mov
inc
fidiv
xchg
pop
add
or
clc
jnp
arpl
adc
ror
(bad)
setp
fucom
and
adc
dec
into
mov
es
hlt
push
mov
jmp
ret
into
stc
aam
sbb
iret
mov
fwait
test
shl
mov
pop
cmps
or
mov
aam
adc
jae
cmovg
sub
pop
fisubr
sahf
stos
test
js
adc
fcmovu
cmps
es
and
outs
dec
leave
sub
xchg
adc
outs
leave
retf
lea
leave
daa
xchg
stos
fbstp
add
nop
adc
loopne
and
scas
les
push
pop
push
adc
mov
mov
cmps
imul
sbb
cmc
cs
ret
xchg
std
mov
sub
loopne
push
ins
cmc
in
pop
pop
mov
pop
mov
mov
daa
fsubp
sar
and
dec
rcl
cmp
sub
call
ins
sub
or
sahf
icebp
les
cmp
mov
sbb
pop
pop
sahf
lock
call
mov
mov
jle
inc
mov
fcmovnu
retf
leave
jae
cld
test
xor
stos
sub
out
sbb
xor
cs
iret
mov
fs
or
push
imul
or
scas
dec
mov
adc
dec
sub
jl
xchg
xor
push
mov
cs
xchg
push
pop
jns
jl
xor
outs
sbb
stc
pushf
ror
mov
and
mov
jmp
lea
repz
adc
repnz
pop
ret
add
les
sub
jmp
mov
ds
jmp
scas
cmp
test
ret
xor
inc
mov
(bad)
jns
dec
or
inc
push
mov
mov
inc
xor
push
ins
dec
and
and
jnp
cmp
retf
xchg
loopne
cmps
das
cs
loop
adc
sbb
daa
int
fisttp
push
add
push
and
pop
push
or
or
cmp
mov
mov
mov
jne
or
mov
jecxz
and
pop
(bad)
clc
sub
daa
inc
shl
jp
push
mov
xchg
mov
ret
cmp
lock
cmp
fsub
dec
mov
sub
xor
add
mov
pop
xor
js
int
test
int3
mov
sar
pop
jbe
xor
retf
aam
fnstsw
lods
and
or
dec
fisttp
inc
xchg
sub
test
mov
jecxz
je
xor
push
in
xchg
dec
jmp
cmp
or
pop
out
jmp
std
(bad)
fadd
or
fsub
les
clc
out
push
mov
lock
push
dec
or
jle
sbb
and
and
stc
and
cs
xor
inc
shl
aad
xchg
test
xor
sub
clc
movs
in
and
retf
mov
hlt
xor
mov
mov
(bad)
cmps
xor
dec
lahf
data16
pop
rol
fisttp
mov
push
mov
and
(bad)
push
pop
fmul
js
mov
cs
xchg
arpl
jg
xchg
imul
jnp
call
and
push
jae
mov
loope
cmp
push
stc
scas
jne
jne
popa
fild
push
js
xchg
jle
adc
mov
ret
mov
mov
movs
push
sbb
sbb
mov
dec
xchg
ss
in
fdivr
push
shl
mov
add
popa
rep
into
mov
sub
adc
fbld
mov
sbb
xchg
mov
mov
cmp
jmp
or
cdq
sub
test
in
jmp
and
pop
cmp
lods
fild
mov
xor
wbinvd
sahf
push
xchg
jg
stos
inc
cld
and
shl
mov
dec
mov
leave
mov
int3
sbb
not
adc
lahf
cs
add
xchg
sub
fsubr
xchg
and
sbb
sub
push
or
lds
mov
inc
adc
xchg
js
stos
xor
mov
sub
fs
dec
adc
test
out
mov
mov
pop
scas
pop
pop
mov
sub
jmp
shl
outs
jge
sti
ja
mov
cmc
adc
fstp
dec
add
jg
jo
or
push
ja
icebp
push
mov
xor
pop
lahf
mov
sub
mov
nop
fwait
mov
out
adc
or
xor
test
push
dec
dec
mov
fadd
lds
xchg
pop
cwde
js
loope
xchg
sub
sbb
jne
or
lods
jb
pop
popa
es
adc
lds
popa
xor
in
sbb
aas
iret
add
addr16
gs
inc
adc
xor
pop
jne
loop
std
or
dec
jno
jns
ja
push
xchg
cmp
(bad)
mov
push
sbb
pusha
pop
push
mov
xchg
ss
jmp
sub
inc
(bad)
jno
fimul
mov
cs
xchg
rcl
fsubr
cs
inc
shl
xor
xchg
retf
shr
jnp
sub
add
out
sbb
xor
xor
add
push
fld
out
or
shufps
ins
cdq
ds
xor
mov
loopne
(bad)
lods
das
call
mov
pusha
pop
cmp
call
std
rcl
imul
lds
sbb
xor
pop
or
test
push
push
mov
xor
out
test
mov
test
push
jne
imul
repnz
(bad)
adc
rcl
or
jg
adc
mov
jp
and
add
mov
stos
add
jge
in
data16
lods
popa
popf
push
jge
mov
dec
push
clc
xchg
jmp
xchg
jnp
add
sub
jge
jo
add
lock
pop
adc
push
add
adc
loopne
test
jb
outs
retf
js
pop
sti
icebp
add
pop
pop
dec
and
test
inc
push
or
jle
sahf
add
inc
and
ficomp
std
mov
mov
lahf
pop
dec
mov
loopne
jg
push
push
int3
cmps
loopne
inc
or
ror
(bad)
div
inc
dec
cmp
mov
(bad)
pop
jp
data16
ret
and
nop
pop
xchg
bound
jnp
and
xlat
pop
dec
inc
fnstcw
pop
mov
cdq
sub
pop
cld
sbb
jnp
mov
mov
rol
pop
fistp
fwait
xor
sbb
movs
outs
ret
xor
adc
jle
ret
fwait
in
push
ins
fimul
cmove
sub
popf
xor
mov
call
fwait
call
jle
xor
outs
shl
mov
jae
or
stos
xchg
pop
cli
ins
movs
lock
jbe
xchg
sahf
adc
adc
dec
(bad)
ret
repz
repz
sbb
pop
in
fs
sbb
xchg
fsub
mov
or
out
(bad)
or
push
cmp
das
in
js
jmp
mov
lahf
addr16
xchg
cld
call
pop
pop
icebp
repnz
je
fnstcw
(bad)
mov
pop
scas
imul
cli
in
xor
pushf
pushf
cmps
int
push
xor
data16
push
dec
test
(bad)
(bad)
mov
out
dec
sti
movs
outs
pushf
adc
test
repnz
out
and
push
(bad)
sahf
and
test
pop
adc
lds
sbb
cmp
das
dec
push
dec
push
std
sub
push
pop
bound
cmp
inc
movs
cdq
arpl
sbb
test
and
aam
pop
mov
cmp
add
and
cli
(bad)
cli
cmp
bound
pop
lahf
jp
test
hlt
sub
ja
mov
mov
data16
sahf
push
xchg
push
hlt
xchg
fisubr
jb
sti
ins
jmp
mov
mov
aaa
mov
mov
pop
jns
fsqrt
(bad)
or
lahf
sar
inc
jmp
shl
mov
pop
push
stos
sbb
call
ds
or
mov
pop
cmp
adc
mov
push
aaa
jge
sbb
add
push
shl
rcl
pop
xchg
int3
outs
mov
mov
das
inc
fidiv
sbb
fiadd
fsubr
inc
jne
out
mov
lds
jb
pop
adc
mov
inc
test
jecxz
retf
outs
mov
repnz
into
(bad)
mov
xchg
outs
push
int3
in
(bad)
adc
jb
pop
test
add
aas
jb
sub
(bad)
and
test
scas
fcmovne
(bad)
int
sub
mov
jne
int
jne
xor
inc
cwde
cmp
or
adc
pop
pop
jbe
repnz
sar
ret
add
lods
lock
movs
ret
in
(bad)
fcomp
sub
fwait
in
repz
dec
js
mov
xor
mov
scas
and
hlt
ds
cdq
push
enter
add
sub
loop
(bad)
mov
test
xchg
mov
push
int
xchg
dec
and
xchg
sbb
xchg
push
jg
add
mov
pop
mov
push
and
cmps
cmp
ja
jb
jp
outs
fidiv
pop
cmps
fimul
push
jg
push
enter
mov
sahf
mov
std
in
sbb
scas
dec
lods
mov
rcr
rol
leave
int
push
cmp
dec
test
pop
iret
add
add
push
cmc
fistp
test
cdq
xor
add
mul
sbb
sbb
jbe
loope
es
out
call
push
xor
push
add
jecxz
arpl
add
ins
dec
test
ins
dec
or
repz
mov
ds
cmp
pop
stc
push
mov
xlat
jp
mov
mov
int3
mov
sub
pushf
repnz
test
das
pusha
mov
mov
cld
(bad)
cmps
stos
cmp
fldenv
xchg
pop
xchg
ret
loop
add
out
dec
sbb
cwde
pop
xor
and
inc
fadd
popf
push
pop
shl
fdiv
loopne
(bad)
adc
gs
xchg
sbb
ret
int3
and
mov
ret
aam
int
xor
pop
sub
(bad)
ds
pop
test
cmp
mov
aam
mov
push
add
in
push
push
stos
add
or
hlt
inc
jge
jle
fcmovb
and
ret
jmp
pop
xchg
adc
mov
cld
int
shr
pop
cmp
jb
xor
(bad)
mov
idiv
mov
stos
xchg
out
lea
mov
out
out
jecxz
pop
mov
xor
mov
and
or
ror
imul
push
(bad)
movs
ins
fisubr
pushf
jp
cmp
aas
loope
retf
retf
and
mov
jae
mov
int
add
call
or
ror
and
pop
cmc
jge
int
bound
mov
les
mov
cli
mov
jge
push
inc
aaa
stos
xchg
pop
ret
in
test
and
push
mov
dec
lods
lds
mov
mov
fwait
dec
mov
xchg
cmp
push
mov
inc
mov
fistp
inc
cmps
iret
ins
lods
out
shr
jb
pop
mov
leave
push
inc
mov
(bad)
mov
mov
mov
ins
mov
ret
and
ja
or
clc
movs
mov
jge
mov
pop
push
test
mov
imul
inc
mov
xchg
xchg
sahf
cmps
retf
and
stos
mov
fisub
jne
push
dec
ds
iret
push
add
mov
mov
push
cmp
cli
add
jl
sub
add
xchg
sub
inc
push
dec
mov
and
fisttp
push
enter
push
pop
add
sbb
add
sub
mov
scas
mov
adc
test
clc
loopne
retf
(bad)
aaa
cmps
aaa
aam
scas
mov
and
mov
and
add
test
pop
mov
cmp
(bad)
pop
push
call
int
dec
(bad)
fcmove
inc
ffree
fwait
mov
and
pop
and
sub
add
jbe
xor
cmp
pusha
mov
enter
aad
pop
or
int
mov
shr
cld
mov
fwait
pop
jl
ror
mov
test
icebp
push
xchg
and
mov
xchg
mov
mov
retf
inc
mov
or
jae
cmp
inc
mov
sbb
mov
push
test
mov
cmp
fwait
jno
push
retf
fwait
xchg
jecxz
xor
stos
in
xor
in
lods
pop
loop
dec
pop
enter
adc
sbb
xchg
lds
fs
push
push
movs
push
inc
test
cmp
add
sub
aad
inc
scas
jge
jmp
dec
cmps
fimul
(bad)
xor
ret
nop
xor
mov
fnstsw
in
or
fwait
adc
push
test
xor
stos
sahf
popa
jl
sub
or
xchg
adc
loop
into
jmp
dec
push
cmp
test
or
ret
xchg
daa
or
fs
pop
mov
enter
add
dec
(bad)
fs
mov
inc
jle
and
shr
push
sbb
lods
nop
add
jg
ret
mov
sub
neg
jnp
inc
lahf
xchg
lods
xor
dec
xor
jno
mov
das
xchg
outs
mov
retf
ret
mov
dec
jmp
scas
scas
lods
test
das
ds
xor
xchg
repz
add
mov
cmps
cmp
dec
mov
aaa
mov
sbb
pop
push
push
xor
xlat
push
cld
imul
stc
lods
das
mul
xor
jno
jae
mov
inc
jmp
and
xor
or
ret
xor
retf
mov
xor
xor
sub
mov
mov
mov
test
test
emms
mov
arpl
mov
or
cmp
cdq
call
sub
lock
cdq
neg
mov
clc
xchg
cwde
int3
call
xchg
aas
xor
fwait
inc
and
xchg
xor
pusha
mov
fs
sub
shl
loopne
jge
enter
or
loopne
test
jp
(bad)
les
jle
movs
or
addr16
sub
adc
es
fmul
movs
mov
dec
arpl
mov
sub
mov
aam
sbb
or
mov
lds
mov
sbb
test
xchg
push
mov
ss
jmp
xchg
sub
pushf
mov
xchg
add
push
addr16
(bad)
hlt
mov
dec
or
xor
(bad)
inc
push
and
jnp
pop
jmp
(bad)
stos
or
outs
and
push
out
jge
imul
(bad)
std
out
mov
jle
aam
sub
jmp
shl
stos
pop
jb
shl
repz
dec
cdq
xor
jns
mov
inc
inc
adc
icebp
inc
retf
int3
and
mov
mov
jb
mov
xor
jno
ins
lods
push
or
(bad)
stc
pop
sbb
xchg
add
retf
idiv
arpl
inc
push
push
movs
adc
sub
rcl
or
mov
out
test
pop
or
inc
add
aad
xor
out
push
or
into
data16
push
cwde
loopne
mov
or
xchg
out
(bad)
fist
ds
xchg
sub
xchg
jbe
faddp
clc
dec
arpl
dec
loopne
add
jecxz
dec
add
push
dec
mov
mov
adc
jecxz
inc
mov
stos
in
sub
dec
jne
xchg
mov
mov
repz
mov
rol
leave
push
movs
add
push
leave
sub
hlt
jns
popa
les
ficom
das
ins
icebp
adc
and
adc
mov
cli
repnz
(bad)
sar
cmp
mov
bound
mov
jmp
sbb
jae
push
cdq
mov
call
jl
stos
xchg
add
out
xchg
dec
xor
out
hlt
sbb
mov
add
inc
icebp
fdiv
sbb
and
sub
cmp
loopne
in
(bad)
xor
ror
cmp
jb
dec
mov
cli
xor
es
ror
mov
mov
pop
imul
out
cmp
imul
mov
add
push
push
scas
aaa
sbb
sbb
ss
xchg
test
fwait
stc
sub
xor
enter
and
sbb
mov
fsubr
sti
shr
test
mov
or
xor
mov
hlt
fdiv
xchg
dec
mov
pop
(bad)
icebp
mov
and
or
xchg
push
repz
sahf
inc
xor
iret
adc
imul
js
mov
cmp
cmc
dec
jns
sbb
(bad)
mov
xor
sub
pop
mov
sub
fcmovb
inc
les
mov
leave
mov
addr16
or
mov
cwde
pusha
pop
gs
dec
int3
data16
in
lock
or
fs
js
rol
fadd
div
sbb
push
lods
idiv
test
mov
and
jns
mov
aam
cmp
inc
mov
cli
fild
mov
mov
xor
push
mov
xchg
cmc
(bad)
outs
mov
data16
int
cmp
das
sar
pop
sbb
mov
sbb
aam
fldenv
dec
popa
inc
leave
fldenv
leave
pop
(bad)
xchg
pop
repz
popa
mov
pop
bound
sub
int3
xor
xor
pop
lock
dec
js
xchg
sbb
loop
pop
pop
push
jmp
jle
mov
ins
movs
or
movs
retf
adc
and
ja
sbb
stc
dec
cld
out
loop
lods
jl
adc
sbb
scas
neg
adc
xchg
and
dec
mov
sar
mov
sbb
add
dec
repnz
int
movs
scas
xchg
jmp
and
jmp
cwde
sub
or
hlt
out
dec
sub
out
ret
push
jno
aad
sahf
je
add
or
mov
dec
jl
cmp
xchg
cwde
or
pop
(bad)
and
push
push
in
daa
and
(bad)
or
gs
or
daa
fs
jl
lods
adc
imul
dec
sub
cwde
aaa
loope
xor
push
push
xlat
add
mov
ret
mov
inc
dec
add
(bad)
pushf
mov
out
cli
sub
cmp
sub
movs
pop
out
mov
lock
jbe
push
fcomp
dec
pop
cmp
inc
shr
lods
pushf
bound
add
inc
sbb
pop
mov
xchg
retf
call
hlt
int
repnz
pusha
xchg
fs
pusha
mov
jno
adc
repnz
jp
in
leave
cli
dec
clc
rcl
adc
daa
mov
imul
cmp
push
mov
adc
sahf
fwait
jl
mov
enter
jnp
clc
fnstenv
loopne
cmp
fwait
dec
in
and
inc
ror
sahf
sub
into
cmp
cmc
push
ret
mov
xor
cli
push
and
(bad)
ja
stc
push
rol
out
and
inc
inc
test
lahf
mov
add
das
pop
test
je
mov
fimul
push
retf
out
xchg
and
arpl
into
push
xlat
mov
mov
in
mov
int3
xor
stos
push
or
add
(bad)
or
enter
fsubr
ja
add
push
ret
sti
mov
xor
stos
test
mov
jp
std
imul
xchg
cmps
xchg
pop
and
out
xchg
xor
dec
adc
call
jge
sbb
or
ins
aaa
aam
add
into
data16
sub
pop
aad
sbb
imul
out
and
leave
gs
mov
push
fidiv
enter
lods
out
mov
or
adc
push
jp
adc
cdq
movs
repz
add
jle
push
cld
cmps
lods
fmul
hlt
mov
aad
mov
push
xchg
dec
(bad)
jmp
stos
cli
call
lods
sub
iret
xchg
or
clc
icebp
mov
sbb
idiv
fsub
std
inc
xchg
test
fcomp
retf
mov
cmps
cmps
das
sub
pop
mov
movs
ror
arpl
mov
push
or
cwde
ret
xchg
retf
inc
add
pusha
jb
or
nop
cmp
std
mov
xchg
inc
xchg
xchg
inc
iret
in
fcom
repz
leave
xor
sub
mov
dec
cmp
mov
fisttp
mov
mov
test
xor
adc
and
jo
xor
pushf
icebp
mov
movs
pushf
out
xor
mov
inc
not
and
inc
cs
cdq
jo
inc
out
aaa
dec
mov
das
push
iret
es
mov
mov
push
fistp
ror
pop
mov
inc
daa
inc
cld
pop
fistp
dec
pop
repz
je
call
data16
das
je
cwde
clc
iret
or
nop
stos
pop
sbb
xor
xor
inc
xchg
jl
lock
xchg
xor
scas
aaa
fisubr
mov
inc
inc
mov
rol
jmp
cmp
aad
or
sbb
mov
pop
lds
cmp
sti
xchg
stc
adc
in
add
fs
ret
cmp
mov
in
fcmove
sbb
scas
pop
sub
ja
jbe
xor
call
push
mov
test
mov
ss
neg
mov
and
nop
nop
xlat
and
dec
sar
pop
ror
mov
inc
and
aam
xchg
paddusb
sub
xchg
test
movs
sbb
push
mov
add
or
fcom
(bad)
mov
sbb
dec
sbb
aas
aad
lahf
xchg
cmp
xor
repz
dec
jne
xchg
cmp
mov
nop
xor
(bad)
icebp
or
jno
ins
stos
neg
sub
jb
(bad)
in
push
cmp
lahf
jecxz
jb
push
imul
test
(bad)
xchg
mov
dec
jae
(bad)
fcom
(bad)
call
pmullw
sar
xchg
adc
mov
mov
and
adc
dec
fidivr
sub
pop
inc
div
and
mov
movs
xchg
xor
loopne
fsubr
sbb
sbb
and
outs
rcr
pop
xor
lahf
pushf
faddp
xchg
jo
mov
rol
mov
sub
lods
out
ret
or
mov
jo
clc
sbb
cmc
in
imul
test
dec
prefetch
test
dec
pop
mov
and
mov
arpl
mov
cmp
cwde
cmp
loope
dec
(bad)
pop
aam
sub
jmp
push
loop
jle
inc
or
test
mov
(bad)
outs
jmp
jae
out
cs
cwde
pop
call
mov
test
mov
mov
ja
fisubr
shl
fiadd
fbstp
or
add
stos
jb
xchg
xchg
push
cmp
adc
push
scas
fild
mov
sub
and
aad
inc
not
mov
sbb
inc
or
and
test
or
pushf
mov
(bad)
lock
mov
inc
or
push
pop
mul
dec
fdivp
dec
arpl
mov
xchg
bound
call
stos
lods
mov
dec
adc
imul
and
clc
inc
mov
outs
push
call
sar
mov
pop
and
xchg
hlt
dec
scas
shr
jmp
jne
mov
jp
jmp
cmp
int3
inc
cmps
daa
lds
imul
fsub
stos
push
cmp
or
add
mov
xchg
inc
cwde
push
push
dec
cmp
ret
gs
inc
cmp
movs
stos
sti
mov
jmp
inc
jnp
mov
outs
mov
icebp
aam
mov
inc
mov
mov
sub
aaa
push
ins
fmulp
mov
fs
call
dec
int3
test
fidiv
xor
pop
enter
sub
jmp
xor
fisttp
xlat
lahf
loopne
jle
je
(bad)
dec
sbb
cmp
pop
int
mov
sbb
div
cmp
scas
fdiv
iret
call
push
add
jge
inc
in
pushf
xor
mov
sub
cmp
dec
mov
adc
outs
mov
imul
xchg
sub
xor
jns
jg
dec
xor
pop
pop
add
icebp
mov
pop
fdivr
mov
mov
inc
aad
mul
lock
cs
leave
sbb
ret
xchg
jne
mov
adc
xor
nop
xchg
daa
xor
jb
or
mov
pop
repnz
jge
pop
retf
mov
mov
sbb
xor
icebp
xchg
outs
mov
retf
lahf
dec
jnp
add
arpl
xor
dec
popf
dec
dec
ret
cmp
out
mov
pop
mov
pop
leave
dec
push
mov
push
(bad)
movs
jbe
push
sub
xchg
(bad)
shr
daa
leave
into
and
imul
pop
cmp
add
pop
imul
jmp
mov
and
cmp
mov
adc
push
iret
fcomp
aad
into
loopne
ret
dec
and
fadd
dec
cmp
xor
mov
shl
pop
rcl
shl
js
hlt
fistp
xchg
pop
in
dec
fcomip
fiadd
dec
dec
and
sbb
or
fwait
inc
push
test
mov
pop
inc
xchg
pop
mov
and
arpl
jo
mov
call
mov
enter
adc
mov
pop
cwde
dec
jecxz
pop
jmp
mov
dec
call
(bad)
int3
xchg
push
inc
add
jne
dec
mov
and
add
adc
les
mov
xchg
fwait
lds
mov
mov
stos
push
ins
mov
test
mov
int
addr16
mov
hlt
retf
loope
or
mov
sub
mov
ss
addr16
cmps
ins
data16
sub
push
push
dec
lods
arpl
mov
loop
ffreep
or
inc
or
xchg
or
les
pop
jo
aas
js
sub
inc
jae
div
ins
push
push
in
push
pushf
mov
into
push
push
inc
and
hlt
push
out
scas
repnz
xchg
in
jecxz
sub
sub
xor
ret
xchg
push
fdiv
pop
repnz
push
dec
mov
fld
inc
bound
out
push
cmp
xor
lea
jo
or
outs
test
mov
add
pop
push
or
xor
adc
imul
out
jle
icebp
mov
push
mov
ret
cld
xor
mov
push
and
in
xor
jmp
in
sub
lahf
sbb
push
fwait
aas
jns
mov
imul
jb
pop
dec
sub
out
xor
or
xchg
or
sub
mov
and
mov
jmp
cmp
loopne
add
xchg
pop
dec
cmc
xor
sbb
jb
je
sub
adc
int3
push
mov
or
add
xor
(bad)
lds
daa
pop
out
pusha
dec
add
or
adc
nop
mov
dec
stos
mov
int
pop
or
pop
mov
jns
mov
loope
dec
mov
stos
sub
sbb
sbb
fadd
and
sub
dec
aam
dec
iret
int
jmp
mov
push
dec
ins
inc
(bad)
push
psllq
retf
jns
scas
int3
in
dec
leave
push
je
xor
lods
inc
ret
mov
ins
xchg
pop
pop
or
les
jbe
or
inc
out
cmp
pop
adc
ds
xchg
rol
(bad)
call
pop
xor
cs
div
xor
inc
bound
jg
sub
mov
fisub
push
add
and
add
adc
jge
and
idiv
jp
and
adc
div
ja
fwait
repz
loopne
pop
aad
and
jle
(bad)
jae
ds
mov
sub
leave
and
sub
gs
aam
dec
call
inc
xchg
daa
stc
loopne
outs
mov
mov
xchg
leave
idiv
push
cs
mov
push
repz
lock
enter
add
jg
loope
xchg
call
call
add
push
fcmovu
iret
mov
or
xchg
mov
xchg
out
pop
rol
mov
test
int
retf
outs
jne
(bad)
jns
iret
mov
add
aas
outs
aam
jp
mov
aad
cmp
(bad)
mov
adc
dec
out
es
pop
stos
sub
shr
push
mov
ss
pop
add
mov
shr
jecxz
xchg
popa
out
adc
push
inc
sbb
sbb
fcomp
addr16
pop
rol
cli
xchg
xor
mov
sub
call
xchg
dec
push
jecxz
inc
lods
xchg
push
(bad)
(bad)
and
and
sub
test
cmp
jns
(bad)
pusha
cmps
sub
add
jns
(bad)
or
adc
jge
je
aad
sbb
xor
outs
into
dec
jge
jne
push
aaa
dec
mov
xchg
idiv
or
rcl
test
and
outs
fld
(bad)
in
and
mov
mov
aaa
iret
pop
rcl
xor
add
out
repz
jnp
cmp
add
sbb
cli
dec
shl
push
ins
ret
cmp
aad
add
icebp
pop
pop
stos
add
xor
xor
xor
loopne
and
add
lea
ja
shl
inc
xchg
push
dec
adc
or
mov
mov
mov
add
push
pushf
mov
sar
sub
xlat
inc
clc
push
sahf
xor
sub
loopne
mov
scas
cmp
pusha
ret
lahf
test
add
jmp
xchg
lds
mov
(bad)
pushf
ret
mov
dec
gs
dec
inc
jle
dec
xor
inc
out
sbb
dec
mov
mov
mov
or
pop
dec
mov
les
cmps
mov
jl
les
mov
push
imul
dec
movs
test
cli
or
nop
push
xor
addr16
mov
fisub
lods
sub
or
jl
fimul
out
test
pushf
dec
push
jl
fwait
test
mov
push
out
xor
or
add
adc
scas
(bad)
pop
push
xor
cmp
add
lds
or
pop
je
xchg
enter
in
ftst
outs
cmps
jl
or
push
mov
or
or
inc
stc
xchg
rol
stos
add
mov
scas
sbb
inc
psubsw
stc
sub
sub
call
push
lahf
jo
sub
mov
cdq
inc
sbb
jge
inc
xchg
in
xchg
std
xor
jo
xlat
adc
fdiv
dec
ins
xchg
pushf
sbb
stos
inc
xchg
sub
sub
add
cmp
retf
jnp
pop
jg
or
mov
adc
cld
jnp
in
nop
out
mov
and
jb
icebp
inc
jl
cmps
mov
call
pusha
jno
not
lods
mov
jg
mov
cdq
pushf
push
movs
and
popa
sbb
mov
jne
std
in
mov
call
rol
add
mov
adc
adc
push
cmp
mov
pop
push
and
lods
cwde
bnd
xor
jle
mov
pop
sub
fimul
iret
mov
xchg
ja
sub
movs
leave
out
mov
pop
pop
and
xchg
outs
js
mov
fld
and
or
shrd
jle
inc
push
push
push
mov
icebp
sub
cwde
call
aaa
mov
into
pushf
mov
pop
data16
add
in
ret
sbb
and
mov
mov
adc
lods
fild
jbe
scas
mov
sub
add
aas
sub
xor
add
sti
xchg
pop
sub
leave
dec
xor
dec
adc
fcmovbe
lods
jns
sub
es
push
dec
jecxz
sub
arpl
pushf
xor
push
popw
inc
push
fistp
bound
stos
xchg
xchg
adc
sub
jmp
fst
sbb
call
pop
mov
xor
jns
test
or
lds
xor
mov
ja
and
js
inc
cld
in
adc
jnp
xchg
lahf
adc
inc
adc
scas
aad
mov
into
add
dec
outs
jmp
sbb
jbe
xor
xor
mov
sub
int
imul
mov
fst
push
mov
lock
xchg
std
pop
and
or
inc
mov
add
mov
repz
ss
ret
bound
add
bound
add
aas
inc
(bad)
in
or
test
sub
out
leave
imul
daa
ror
sub
test
pusha
adc
scas
xchg
or
dec
pop
out
jl
enter
scas
inc
add
loopne
clc
push
repz
mov
out
push
mov
(bad)
lock
or
xor
cs
cwde
mov
add
sar
push
ret
mov
loope
gs
dec
push
cmp
ret
dec
leave
pop
pop
dec
cmp
mov
sti
cmp
fst
in
test
and
jb
pop
ret
imul
(bad)
int3
rol
pop
lahf
jns
push
adc
shl
and
sub
pop
scas
jb
pusha
hlt
loop
test
pop
adc
fidivr
ss
mov
mov
mov
mov
sahf
xchg
psubusw
pop
push
fucomp
das
jmp
pop
xor
push
out
mov
es
fist
(bad)
fwait
push
enter
add
in
int
adc
mov
jae
add
add
addr16
aam
and
dec
cmp
jl
jmp
mov
in
cmp
mov
push
test
xchg
mov
pop
mov
fimul
out
mov
and
in
cmp
mov
(bad)
push
imul
or
aam
fistp
shr
or
(bad)
fwait
inc
jno
fidiv
(bad)
sahf
jecxz
xchg
jle
pop
icebp
(bad)
sbb
pop
fdiv
std
into
icebp
add
(bad)
shr
pop
mov
out
cmp
push
or
gs
sub
cmc
fs
(bad)
mov
push
inc
lods
cmp
xchg
or
cmps
ror
test
out
inc
mov
test
popf
gs
test
pop
or
xchg
addr16
jnp
call
clc
scas
dec
js
inc
add
jl
std
jmp
mov
aaa
jb
enter
mov
and
ret
adc
jle
out
xchg
repz
(bad)
cld
or
test
jbe
in
xchg
sub
xor
aam
rcr
scas
mov
test
or
(bad)
data16
(bad)
gs
mov
stc
lods
(bad)
cmps
mov
cdq
and
ror
add
sbb
lods
rol
lock
mov
push
mov
sub
lea
bound
loopne
add
dec
xor
jmp
jge
pop
popa
dec
leave
pop
fadd
bound
xor
lds
mov
call
rcr
sbb
imul
bound
and
xor
cmp
int
mov
movs
(bad)
push
cmp
lods
or
stc
adc
arpl
mov
cs
loopne
cmp
mov
push
jp
stos
fild
add
cld
adc
push
(bad)
sub
jg
vsubsd
mul
push
mov
popf
jp
out
xchg
loop
pusha
(bad)
pusha
cmps
xor
retf
repz
adc
sub
jg
in
js
cmp
mov
dec
xor
fcmovnu
sbb
pusha
clc
or
add
arpl
test
cld
(bad)
(bad)
xor
out
xchg
add
out
sbb
xchg
or
clc
add
test
jmp
push
pop
or
mov
nop
dec
dec
sub
jp
in
cmp
push
lods
or
out
lahf
lods
adc
mov
push
test
cmp
and
sbb
inc
add
mov
out
push
inc
mov
mov
loopne
sti
addr16
shl
sub
sub
pusha
stc
add
push
retf
mov
mov
adc
dec
(bad)
cmc
push
mov
imul
fistp
push
ficomp
sbb
and
xchg
js
sub
sbb
arpl
xchg
aad
mov
icebp
mov
jns
shl
popf
push
fisttp
adc
inc
adc
js
mov
sbb
ret
jp
or
sub
sbb
adc
les
popa
jg
shl
ds
jo
or
jb
xlat
test
rcl
les
push
jne
jae
into
bound
js
(bad)
xchg
sub
ins
jns
pop
sub
aam
lods
shl
or
inc
inc
movs
xchg
popf
ja
xchg
in
pushf
out
mov
aad
cmp
ja
leave
fnsave
out
leave
mov
in
sar
jp
cmovp
stos
mov
pop
(bad)
ins
mov
fisub
xor
cmc
test
pop
enter
mov
mov
jnp
lock
retf
sbb
js
popf
pop
mov
lods
addr16
test
jno
mov
mov
mov
stc
add
data16
mov
xor
dec
stos
xor
jo
cmp
mov
dec
arpl
clc
or
mov
rol
dec
dec
cmp
adc
loopne
std
sahf
aad
push
and
and
mov
sbb
imul
cwde
lock
retf
sub
nop
push
inc
(bad)
fwait
out
cmp
mov
push
sub
fnstcw
push
sbb
fdivr
ds
mov
xchg
ds
adc
push
(bad)
dec
shr
push
or
(bad)
mov
mov
inc
aad
and
push
cmp
push
adc
xor
xor
fldl2e
(bad)
shl
scas
sbb
es
sbb
inc
jmp
dec
sbb
call
dec
sbb
push
leave
ffreep
loopne
jo
mov
popa
xor
and
cli
inc
xor
js
sub
xor
push
stc
sbb
mov
test
cmp
repnz
push
inc
xor
(bad)
gs
or
xor
mov
or
dec
xor
lea
xor
icebp
sub
cli
add
fwait
pop
stc
mov
fsub
push
mov
or
ret
shl
data16
mov
jmp
icebp
outs
stc
ins
sti
sub
(bad)
mov
mov
in
sbb
mov
call
(bad)
sbb
stc
push
xchg
mov
scas
repz
fsub
and
sub
pop
repnz
shl
jo
push
(bad)
out
icebp
mov
fist
mov
in
mov
in
or
call
or
ret
sub
repnz
sub
add
les
jmp
(bad)
imul
test
test
add
push
pop
and
and
inc
mov
mov
jg
mov
test
int3
in
outs
mov
adc
dec
jecxz
push
sahf
jbe
inc
jbe
and
int3
ret
adc
jno
inc
xlat
outs
mov
xchg
fwait
pop
call
lods
add
jae
xchg
adc
mov
outs
push
sub
ror
mov
ret
xchg
jne
or
out
xchg
dec
sub
jl
mov
pop
xchg
popf
int
cdq
and
aaa
test
mov
dec
call
cmp
(bad)
into
xor
shl
sti
lahf
ret
xor
fwait
mov
leave
adc
movs
aas
ins
(bad)
ins
push
sub
retf
and
es
movs
mov
fld
iret
iret
mov
mov
cld
repnz
mov
(bad)
pop
leave
fimul
fisub
daa
sub
adc
xchg
push
ror
pop
ror
cmp
sub
adc
mov
cwde
int
mov
movs
mov
mov
or
mov
dec
mov
dec
cmps
xchg
fimul
es
pop
pop
(bad)
xor
sub
dec
call
jb
push
int
mov
pop
dec
jecxz
into
cmp
daa
dec
push
es
cmp
jmp
dec
out
push
in
jbe
adc
sbb
add
sub
(bad)
dec
mov
mov
lahf
sbb
mov
push
jno
ins
xor
daa
cmp
pop
leave
jo
cmp
xor
call
mov
mov
imul
addr16
cmp
cmp
xchg
loop
push
mov
or
add
dec
jle
(bad)
mov
mov
fld
hlt
into
fmul
leave
mov
unpckhps
xor
xlat
add
xchg
cs
les
in
push
js
and
movs
inc
xor
inc
jp
ror
jmp
popf
push
and
call
loope
pop
popa
dec
sub
aas
xor
push
push
and
adc
lahf
add
push
jne
add
bound
imul
push
out
shr
jae
in
cdq
dec
neg
xchg
dec
test
cmp
lock
int3
sbb
out
fwait
je
enter
push
mov
add
mov
not
shl
xchg
inc
pushf
(bad)
jb
mov
mov
mov
scas
cmps
mov
jmp
mov
(bad)
aam
or
ins
mov
dec
sbb
scas
adc
or
pop
sub
aad
mov
pop
mov
dec
js
aaa
pop
shr
in
adc
add
xchg
gs
mov
and
jg
sbb
sbb
mov
sar
call
mov
loop
sbb
cs
push
xchg
daa
and
aad
fnstenv
ins
or
dec
jb
das
jb
test
push
pusha
test
imul
mov
in
dec
repz
(bad)
icebp
cmp
out
pop
cmps
imul
or
xor
scas
and
iret
cmp
out
mov
cmp
stc
stos
pop
sub
ret
add
loop
aaa
pop
xlat
dec
sub
inc
xor
lods
dec
les
add
xchg
fcomp
push
sbb
jp
lods
(bad)
adc
push
pop
pop
and
(bad)
push
call
adc
push
cmps
cmp
push
xchg
inc
sbb
daa
imul
dec
fwait
inc
push
push
mov
(bad)
xor
add
adc
das
push
jle
push
(bad)
pop
jns
mov
pop
scas
mov
in
hlt
xchg
daa
aas
div
jne
push
arpl
fild
movs
scas
add
popf
pop
mov
jo
push
pop
dec
aam
jo
jne
imul
loop
inc
dec
mov
in
xor
retf
sbb
xchg
(bad)
mov
inc
pop
adc
aad
dec
ds
(bad)
rol
gs
mov
(bad)
ja
jecxz
sub
das
cdq
lods
pop
in
fsubr
in
pop
adc
test
sbb
xor
or
ffreep
repz
xchg
sub
cmp
mov
jo
addr16
cmp
outs
push
add
gs
lods
xchg
lds
loope
pop
push
and
xor
mov
or
dec
ja
popf
(bad)
mov
mov
pop
cmp
adc
rcr
stos
mov
shl
push
cmps
jmp
mov
out
fcom
push
mov
and
xchg
daa
xchg
test
push
inc
adc
pop
retf
mov
jae
aam
mov
sbb
pop
neg
pop
jecxz
xlat
add
fs
mov
cmp
jne
add
arpl
fmul
dec
addr16
mov
arpl
fdivr
push
sbb
(bad)
test
mov
fnstenv
push
add
mov
shl
repnz
mov
sbb
push
mov
aas
icebp
dec
cli
ror
in
std
jmp
push
jge
clc
jmp
mov
pop
cwde
retf
adc
xor
xor
test
aas
add
and
cmp
xchg
fisttp
das
add
sahf
sbb
jo
push
add
push
cmp
out
and
dec
addr16
and
mov
push
xor
or
or
sbb
jb
aad
jb
mov
pop
xchg
and
jnp
inc
stc
gs
mov
sbb
and
repnz
adc
ja
lods
add
mov
inc
cmp
mov
cdq
xchg
rep
xchg
les
js
push
test
cmp
sbb
repnz
mov
cmp
xor
hlt
inc
adc
cmps
add
mov
xlat
test
and
add
jmp
cmp
stc
std
(bad)
push
and
(bad)
scas
or
mov
xchg
push
jmp
inc
fsub
arpl
outs
add
jg
xchg
in
rol
pop
(bad)
cmp
pushf
push
ret
cmc
inc
cdq
cmp
mov
inc
jne
test
cwde
jo
dec
mov
fwait
ret
das
dec
adc
pop
cmp
xchg
(bad)
fdivr
enter
fisubr
or
popf
jl
cld
fadd
sbb
lods
xchg
dec
icebp
jo
repz
and
cdq
and
pop
fsub
jmp
call
out
mov
cmp
iret
push
inc
aad
push
push
dec
call
ss
rcl
enter
out
mov
in
inc
xchg
loope
int
push
adc
cmp
push
jle
les
lods
scas
enter
(bad)
fwait
mov
enter
xchg
inc
idiv
push
push
fwait
dec
inc
ins
test
sub
arpl
and
es
out
or
pop
add
or
cld
daa
pop
mov
outs
adc
push
push
adc
cmp
ss
xor
retf
call
mov
dec
retf
mov
sti
aas
push
inc
or
(bad)
ins
mov
mov
mov
jmp
sbb
pop
ja
fimul
mov
push
pop
loope
popf
rol
fimul
(bad)
mov
es
sub
into
fld
dec
lock
dec
dec
(bad)
jg
(bad)
jle
arpl
mov
xchg
mov
test
or
and
les
mov
and
popf
jnp
js
outs
dec
xchg
sub
lods
imul
pop
retf
ja
aad
or
(bad)
pop
cli
daa
push
mov
and
fsubr
sbb
scas
jo
(bad)
dec
jb
jae
and
test
dec
jbe
outs
xor
popf
adc
shr
out
mov
xchg
mov
and
ret
inc
pop
jae
fadd
(bad)
sub
mov
cmps
cmp
push
dec
dec
in
sub
pop
jne
jnp
stos
fdiv
js
fstp
mov
retf
add
mov
sbb
lds
push
test
add
out
jmp
sahf
cmp
push
lahf
es
push
add
or
retf
out
nop
or
out
icebp
js
std
add
dec
retf
loop
out
pop
cmp
inc
cmp
jae
mov
mov
mov
xchg
or
pop
not
and
add
test
dec
in
or
stc
fidivr
jns
sti
xor
cmp
xor
or
cmp
jne
xchg
cmp
fmul
(bad)
mov
xchg
sub
jmp
pop
aaa
(bad)
out
pop
popf
fist
rol
cmp
inc
mov
mov
lock
push
jg
push
jecxz
mov
mov
in
mov
repz
call
mov
mov
jmp
test
shr
add
sbb
rol
jmp
xor
and
bound
inc
add
test
(bad)
ja
pop
shl
pop
hlt
pop
fild
jle
cmp
jge
sbb
lahf
stos
inc
and
rcr
bound
aam
lock
mov
fnsave
add
mov
sbb
push
add
add
ja
jp
mov
comiss
push
movs
push
dec
fiadd
xor
scas
xor
push
or
leave
inc
sub
mov
dec
inc
clc
and
fcmovbe
cmc
je
dec
popa
out
fdivr
movs
inc
sub
mov
outs
je
push
and
mov
sub
push
sbb
mov
add
lods
cmp
or
mov
test
and
cmp
cmp
adc
(bad)
push
dec
xchg
mov
jb
lahf
sar
popf
xor
mov
out
retf
daa
ret
lds
add
js
sub
or
div
inc
std
mov
push
sub
dec
fisubr
imul
mov
(bad)
mov
fstp
jl
add
xor
xor
and
mov
push
imul
imul
ret
xchg
pop
addr16
jmp
arpl
push
xor
mov
jmp
sti
or
inc
pop
es
or
or
bound
rol
rcr
xchg
lahf
scas
inc
mov
sub
retf
push
adc
mov
lods
imul
ja
mov
ins
sub
pop
call
ror
pop
pop
cmp
stc
rcr
(bad)
cmp
inc
shl
add
lea
lds
mov
mov
ja
out
mov
mov
stc
mov
call
aas
fsubr
mov
mov
push
arpl
push
fwait
loopne
dec
inc
cmp
ficom
nop
frstor
sti
lea
mov
sbb
mov
xchg
jle
call
aad
adc
stc
rcl
adc
test
arpl
xor
mov
std
js
int
es
leave
mov
ins
add
and
icebp
and
outs
sub
add
mov
push
sahf
cmp
pop
jmp
cmp
pop
mov
cmp
push
mov
mov
into
dec
retf
push
mov
xor
aad
cli
mov
and
mov
std
inc
dec
addr16
jb
pop
in
movs
dec
add
leave
test
sbb
pop
pop
pop
pushf
fwait
xchg
add
jge
push
mov
pop
lods
dec
dec
dec
fcmovne
and
loop
daa
mov
xchg
sbb
jbe
xor
xor
loope
xchg
les
ins
retf
fidivr
and
or
fidiv
out
push
mov
mov
lahf
(bad)
scas
xchg
push
repz
out
stos
in
pushf
enter
dec
dec
imul
lock
cwde
inc
add
push
mov
sti
aas
push
inc
fnstsw
shl
inc
mov
push
loopne
das
xor
mov
adc
push
pop
ja
loop
jmp
bound
sar
cdq
xor
xor
xor
stos
inc
cmp
loopne
dec
mov
mov
mov
push
aad
cli
adc
jle
stc
mov
mov
cmp
lds
int3
js
xchg
sub
fldcw
and
mov
(bad)
mov
clc
sbb
cmp
inc
rol
ret
ja
cmps
inc
fimul
mov
outs
or
or
jge
das
cs
rcr
cmp
sbb
mov
push
or
pop
xchg
int
xchg
pop
jo
mov
leave
dec
(bad)
test
or
leave
dec
cs
sbb
fist
sub
add
inc
rol
mov
aas
popa
je
popf
jns
and
int
sbb
data16
dec
imul
in
mov
mov
shl
jae
mov
dec
fcomp
inc
xchg
push
rcr
je
push
pushf
mov
pop
add
and
mov
(bad)
jno
xchg
sbb
jb
int3
test
and
(bad)
fucomip
cli
test
out
cmp
inc
inc
mov
jecxz
test
mov
pop
int
add
mov
movs
ror
dec
lock
cmp
adc
cmp
fistp
mov
movs
std
sar
pop
popa
inc
inc
jmp
mov
push
jns
movs
repnz
cmp
inc
mov
push
jb
stc
loope
jnp
sbb
pop
and
inc
in
sbb
cmp
fwait
push
fsub
dec
into
shl
loop
and
test
push
popa
mov
xor
or
sub
inc
rcl
cmp
cmp
xor
jnp
int
in
fwait
add
adc
and
xchg
(bad)
mov
cmp
pop
rol
add
aam
jno
frstor
jmp
xor
clc
adc
mov
(bad)
out
mov
and
adc
lods
fstp
add
mov
(bad)
in
mov
imul
hlt
mov
cwde
das
repnz
jmp
sahf
push
inc
jle
stos
mov
add
out
in
jo
jmp
in
stos
push
loopne
rcr
movs
xor
dec
mov
sti
out
mov
aaa
or
fldz
pop
inc
mov
arpl
and
lahf
dec
mov
es
mov
not
push
push
cmps
(bad)
pop
(bad)
push
add
lahf
push
ins
cmp
lds
push
xchg
clc
iret
ins
addr16
data16
add
jo
ss
sub
add
call
mov
add
out
div
scas
cdq
dec
inc
sbb
mov
adc
clc
push
aaa
push
pop
push
xchg
add
sub
popa
test
loopne
data16
call
mov
rol
xor
lods
scas
cmp
test
mov
xchg
lock
add
xchg
inc
jp
and
cmc
dec
repnz
or
xor
inc
pop
cmp
jnp
cmps
(bad)
call
inc
pop
xor
adc
daa
jmp
jnp
cmp
popa
jb
inc
sbb
imul
mov
out
xchg
(bad)
mov
sbb
enter
mov
movs
or
add
in
pop
fs
jg
scas
ja
jmp
mov
cmp
jns
lds
inc
jl
out
lea
in
or
outs
cmps
es
sbb
nop
clc
xor
fimul
push
push
cmovnp
pop
and
movs
and
xor
pop
and
push
dec
ret
cli
scas
mov
xor
mov
adc
xor
add
outs
xchg
cmp
and
pop
add
jg
sbb
sbb
adc
rcl
inc
dec
cmp
mov
adc
addr16
mov
stos
sub
bound
jmp
jne
sti
mov
rcr
js
mov
push
add
data16
sar
add
(bad)
lods
in
dec
in
bound
add
add
nop
rcr
pusha
xchg
sbb
or
adc
das
dec
shl
add
sti
repnz
xchg
add
jae
aam
mov
jle
shr
xlat
sub
fst
jb
and
pop
mov
and
jmp
dec
jle
and
jnp
dec
cld
jg
mov
jmp
mov
mov
pop
jnp
xor
and
add
fidivr
dec
scas
outs
push
mov
dec
jno
inc
enter
add
dec
push
test
xor
sbb
dec
mov
neg
call
mov
mov
lahf
imul
hlt
inc
push
push
dec
je
mov
or
leave
arpl
add
push
ret
imul
rcl
das
adc
fld
xchg
mov
fdiv
(bad)
fidivr
lds
sub
mov
sti
sbb
in
lea
gs
or
ja
push
pop
in
mov
jno
lods
push
scas
mov
cmps
pushf
ret
(bad)
fsub
cdq
fbstp
fisub
repz
sbb
leave
aas
inc
fldcw
xor
push
ss
sub
fsubp
rcl
cs
(bad)
xchg
pop
mov
stos
aas
aas
jo
xlat
cmp
je
cdq
mov
mov
sub
shr
adc
into
fwait
cld
test
mov
scas
add
mov
jo
jnp
push
mov
test
jae
or
lock
out
dec
scas
cmps
mov
add
iret
xor
dec
daa
div
test
jmp
ins
sbb
stos
adc
sar
aad
dec
or
gs
and
inc
retf
in
xchg
(bad)
jmp
loope
sbb
cmp
xor
push
shr
xor
stos
xchg
adc
mov
pop
pop
sub
sbb
xor
nop
dec
lods
fidivr
cmp
outs
enterw
call
stos
sub
push
xchg
lock
bound
lea
pop
cmp
xor
push
mov
fsubr
mov
pop
lock
xchg
test
repz
push
in
mov
xchg
jb
adc
adc
and
cs
aam
or
xchg
fs
add
leave
in
mov
arpl
dec
sub
cmps
movs
or
cdq
xor
jecxz
gs
popf
push
push
cld
xchg
pop
jnp
push
sti
mov
iretw
mov
mov
ret
add
imul
aad
scas
cmp
test
or
or
fadd
neg
add
lahf
repz
ret
bound
data16
in
jge
push
neg
inc
push
leave
and
stc
jge
xchg
lds
cs
jns
sahf
cmp
fistp
mov
aad
mov
adc
add
fcomp
push
jge
push
dec
xor
or
test
xlat
stos
dec
sbb
pop
pop
outs
repnz
add
add
(bad)
jmp
inc
jbe
fcmovb
sbb
retf
mov
iret
pop
popf
pushf
loop
mov
pop
jge
pop
push
mov
ficomp
stc
and
ins
gs
mov
inc
mov
cmove
xor
pop
lds
push
xor
out
popa
sbb
push
icebp
aas
mov
sbb
mov
push
or
ficomp
outs
pusha
xor
call
mov
or
loope
adc
ds
mov
es
push
cmc
call
mul
sub
xchg
(bad)
std
(bad)
mov
bound
adc
ror
scas
pop
mov
mov
mov
test
fiadd
gs
mov
(bad)
inc
inc
xchg
sbb
in
pop
push
fidiv
mov
cwde
call
xor
sub
test
mov
xchg
das
arpl
or
outs
cmp
xchg
push
(bad)
fisttp
scas
dec
repz
jnp
scas
movs
sahf
mov
in
arpl
test
daa
sub
jne
cmp
retf
push
(bad)
in
mov
jecxz
push
fld
inc
pop
sub
addr16
test
mov
jne
mov
lock
jmp
mov
mov
call
mov
pop
test
fnstcw
xchg
aam
push
std
cmp
retf
mov
inc
loope
dec
adc
ins
gs
in
sbb
in
xor
dec
inc
test
mov
push
pop
mov
sbb
or
dec
sti
leave
shl
cmp
jnp
jmp
mov
mov
xchg
inc
and
adc
inc
call
(bad)
(bad)
test
scas
and
int
out
out
sbb
sub
test
pop
pushf
xor
sub
mov
push
dec
jge
mov
inc
enter
mov
xor
dec
mov
push
jmp
add
sbb
fcom
mov
sti
pop
pop
lods
pushf
inc
outs
not
bound
pop
sub
repnz
and
dec
(bad)
out
mov
and
dec
movs
lds
push
ret
add
mov
add
push
in
scas
add
xchg
in
add
pop
js
xor
clc
adc
rcl
mov
cmps
out
pop
mov
jmp
cmp
hlt
sar
inc
mov
lods
cmps
shl
rcr
movs
cmps
push
sbb
dec
jbe
add
dec
cmp
test
jp
dec
push
sahf
pop
cdq
jmp
xchg
(bad)
shl
fcmovnu
mov
or
loop
in
test
pop
sub
adc
repz
adc
loope
fimul
adc
push
hlt
nop
imul
push
dec
xchg
sbb
sbb
jbe
inc
jno
cmp
mov
popf
arpl
mov
fs
xchg
sub
retf
repnz
push
loop
out
and
mov
and
ja
or
(bad)
xor
movs
loope
mov
mov
pop
call
jg
loope
sub
in
jnp
inc
stc
scas
sbb
ds
inc
mov
dec
jmp
pushf
cmp
mov
cmps
xor
or
mov
pop
mov
ja
out
bnd
repz
hlt
fcom
inc
add
outs
(bad)
cmp
mov
cmp
fwait
movs
pop
xchg
mov
and
or
das
lods
retf
cmp
iret
or
cmps
test
dec
dec
mov
ret
fstp
xchg
and
jae
pop
sbb
cdq
mov
push
push
outs
lds
fnstcw
jb
or
or
mov
shl
data16
push
jl
push
sbb
pop
(bad)
jge
loope
stos
push
mov
fcom
pop
pop
pop
or
add
ss
inc
pop
icebp
movs
mov
(bad)
aad
mov
xor
cmp
loopne
test
js
add
mov
fwait
cmp
cmp
sbb
(bad)
frstor
in
nop
sti
rcl
xor
xor
mov
and
cmp
enter
push
xor
xor
dec
add
jbe
and
mov
mov
push
fcmove
mov
dec
adc
cmp
sbb
and
daa
jle
(bad)
je
std
sub
lock
(bad)
mov
mov
gs
push
cmp
out
rep
cmp
je
dec
pusha
loop
rol
push
xchg
(bad)
enter
fcom
popa
daa
pop
adc
add
daa
bound
push
and
mov
mov
sub
mov
lahf
jae
push
enter
arpl
(bad)
sti
xchg
in
mov
ds
icebp
in
inc
cs
test
inc
das
push
inc
std
(bad)
mov
fisttp
mov
cmps
movs
sbb
dec
outs
jne
dec
ret
arpl
in
mov
nop
mov
jp
xor
adc
test
dec
pop
jmp
sbb
mov
mov
(bad)
bound
jl
sbb
jmp
xor
xor
std
repnz
stos
les
cmc
xor
out
lods
pop
lods
(bad)
sbb
xor
and
pop
xor
adc
push
xor
pop
adc
leave
inc
or
xor
fucomip
test
or
test
inc
ins
inc
in
xor
jbe
mov
call
pop
push
lock
xchg
ret
xor
mov
sub
sahf
xor
add
mov
mov
adc
int3
dec
jbe
mov
cmp
add
test
arpl
dec
rol
movs
xlat
xor
fstp
fdivr
ins
js
sahf
in
jb
test
(bad)
mov
js
les
dec
and
fcmovnu
popa
repz
dec
and
cmp
inc
xor
sbb
aas
pop
mov
cmp
es
cmp
lea
cmp
js
shl
mov
mov
popf
sbb
dec
pop
sub
ss
aam
outs
mov
and
aas
(bad)
je
jmp
bound
mov
sbb
int3
cmp
les
dec
outs
and
dec
push
or
in
fiadd
ret
int3
and
cmp
(bad)
xchg
sub
div
mov
in
retf
icebp
dec
call
shr
nop
fs
dec
imul
xchg
(bad)
dec
mov
mov
les
xor
xlat
lahf
dec
(bad)
ja
ins
leave
xor
call
mov
ins
call
retf
and
or
or
lock
jns
mov
fisttp
inc
mov
imul
int
dec
or
(bad)
adc
sahf
pop
aam
and
inc
pop
aam
adc
jmp
push
test
mov
(bad)
mov
mov
bound
ins
xor
imul
inc
and
adc
fwait
jo
ret
push
jno
mov
cmps
addr16
ret
dec
push
adc
test
inc
int
leave
dec
(bad)
std
mov
enter
mov
mov
xchg
inc
std
(bad)
xchg
dec
in
jg
add
(bad)
leave
mov
xor
leave
(bad)
js
xor
adc
mov
lahf
fistp
(bad)
stos
imul
inc
mov
out
nop
jns
mov
jmp
test
ret
dec
mov
repnz
call
pop
jb
push
cs
cli
in
mov
lahf
test
and
push
xlat
in
test
pop
pop
cmp
dec
das
push
fisubr
ret
sub
or
adc
mov
lock
ds
pop
mov
pop
fisttp
add
mov
and
jmp
shr
dec
nop
xor
in
repz
rcr
add
mov
pop
mov
int
in
cs
cli
rcr
popf
jnp
jmp
lods
xor
cmp
xchg
inc
rol
push
sar
je
pop
ret
and
xchg
clc
enter
push
test
xor
push
into
movs
ret
aas
cwde
aaa
jp
adc
fisubr
push
adc
adc
repnz
add
aaa
or
push
leave
push
mov
pusha
push
(bad)
ret
pop
in
js
dec
xchg
jg
xchg
loopne
sbb
js
xchg
push
jbe
(bad)
loopne
push
mov
repz
nop
arpl
fadd
xchg
jmp
pop
hlt
mov
mov
mov
jno
adc
mov
mov
stos
xchg
cdq
xchg
xor
dec
mov
dec
inc
adc
sub
test
xchg
cmp
adc
lea
and
xchg
add
mov
dec
(bad)
or
pop
pop
not
cwde
(bad)
pop
jl
rol
pmuludq
pop
nop
mov
add
or
sbb
pop
inc
jle
lea
jl
enter
adc
jns
xor
shl
nop
out
fbstp
sbb
jne
imul
dec
dec
pop
cli
or
neg
or
fwait
jno
les
aad
push
push
(bad)
cmp
cmp
and
xor
xor
inc
sbb
sbb
mov
mov
mov
mov
mov
xor
push
sub
push
jecxz
sub
rcr
mov
(bad)
rcl
cmp
arpl
test
adc
xor
jecxz
ja
in
rol
push
int
cmp
lea
loope
push
lahf
pop
leave
xor
adc
push
rol
sbb
pop
cli
pop
inc
and
cmp
lods
and
in
jnp
pop
retf
adc
in
ins
or
push
dec
push
add
aaa
push
jmp
or
test
sbb
out
dec
xchg
adc
xchg
and
in
jp
or
sahf
cmp
ror
inc
mov
adc
call
mov
scas
addr16
scas
loope
xchg
cmc
ja
cmp
sahf
xchg
retf
aad
pop
pop
jmp
outs
call
in
fld
popf
ret
ret
xor
das
dec
js
push
stc
mov
pop
jl
daa
mov
in
in
sar
jno
imul
stos
test
inc
push
out
xchg
mov
adc
outs
test
shl
mov
sar
mov
fild
movs
pop
mov
mov
ret
imul
inc
mov
jne
shr
dec
bnd
mov
shr
xchg
xchg
dec
mov
jmp
fsubr
je
sub
mov
jmp
(bad)
xlat
call
inc
lahf
xchg
fld
pushf
fcmove
dec
jle
out
inc
xchg
retf
stos
test
outs
aam
cdq
cmp
arpl
and
pop
call
push
pop
(bad)
popf
mov
adc
fwait
(bad)
stos
and
push
fprem
push
pop
push
int
and
push
push
(bad)
jbe
pop
mov
sbb
adc
fdivr
std
sub
les
cmp
lods
call
or
add
cmps
xor
aad
xchg
push
frstor
mov
aaa
std
push
ja
push
es
movs
div
scas
cmp
jg
push
mov
repnz
arpl
jl
push
aas
(bad)
sbb
(bad)
xor
test
mov
dec
or
push
(bad)
imul
out
sahf
ret
dec
pop
and
rol
leave
repz
mov
shl
fnstsw
outs
dec
(bad)
fidiv
jns
cmps
and
(bad)
int3
cwde
aad
or
popa
movs
dec
jp
std
retf
jmp
iret
movs
aam
jo
clc
(bad)
push
loopne
js
scas
gs
jle
jnp
out
or
mul
fisubr
movs
adc
or
xor
jb
push
arpl
or
dec
jg
cmc
mov
jecxz
ret
inc
mov
xor
sub
imul
retf
cdq
add
out
cld
mov
dec
(bad)
stc
push
xchg
sub
(bad)
iret
mov
jle
lock
jmp
inc
retf
sub
mov
je
jg
inc
loope
and
adc
or
jns
push
lods
outs
retf
int3
mov
push
aad
enter
shr
sub
jae
fsubr
jle
jb
inc
fdivr
aas
pop
cmp
jne
test
fwait
inc
or
cmp
adc
pushf
ja
stos
jg
loop
mov
jmp
sbb
push
fild
cli
shr
retf
ret
mov
inc
xchg
cdq
out
out
mov
ins
stos
outs
sub
pop
or
shl
fbld
xor
and
cdq
sub
inc
pop
adc
add
sbb
repnz
or
mov
push
sub
sbb
cmp
adc
out
inc
sbb
push
bound
pop
addr16
mov
cmp
jo
dec
fisubr
mov
push
mov
dec
pop
retf
outs
aam
clc
ja
inc
jb
dec
push
push
adc
int3
add
lods
daa
int
xchg
jmp
mov
and
adc
sub
mov
add
inc
mov
std
movs
sbb
stc
xchg
pop
cwde
icebp
xlat
ficomp
mov
xchg
cwde
mov
popa
xor
mov
cmp
dec
jle
push
jnp
lds
mov
mov
sbb
xchg
aaa
rol
cmps
adc
sub
add
lods
add
xlat
jp
nop
pop
jno
sub
dec
popf
push
aaa
add
push
xchg
jns
call
or
push
clc
mov
inc
jg
std
or
test
or
jb
jo
or
imul
jnp
push
in
ret
stc
xchg
(bad)
into
adc
mov
pushf
push
scas
arpl
pop
sar
sub
dec
or
(bad)
mov
jb
jb
rcr
xlat
sub
mov
and
mov
lods
fstp
mov
mov
pop
shr
pusha
outs
jmp
sbb
or
fstp
xchg
dec
sub
inc
jmp
lods
pop
test
pop
pushf
fistp
icebp
mov
ret
xor
push
jae
mov
add
es
xor
inc
mov
sbb
outs
pop
cmp
and
add
jp
inc
mov
ret
push
enter
jmp
push
pop
enter
mov
xchg
jmp
aaa
adc
jl
int3
jmp
sub
pop
adc
jmp
shl
adc
jae
inc
mov
sar
inc
pop
add
ins
jmp
lock
and
ret
cmc
add
xchg
loopne
pop
and
xchg
xor
jecxz
test
frstor
xchg
fnstsw
jg
jge
mov
add
fimul
and
sub
(bad)
cli
shl
or
inc
dec
pop
out
pop
mov
(bad)
enter
fisttp
xor
inc
movs
add
test
(bad)
(bad)
out
in
aas
movs
stos
paddd
jno
mov
in
adc
inc
(bad)
dec
adc
(bad)
or
mov
mov
arpl
jl
jp
stos
shl
sub
aaa
ds
push
lea
fcom
rcr
das
or
or
lods
outs
daa
(bad)
lods
add
xchg
cmp
test
jno
aad
mov
add
xor
push
in
mov
inc
mov
outs
add
ror
mov
pop
adc
imul
jmp
push
test
imul
outs
clc
xor
je
(bad)
iret
cli
loope
ret
fs
stos
aad
stos
das
add
fdivr
mov
cmp
xlat
test
lods
inc
jno
pop
daa
or
fist
stos
neg
stos
(bad)
mov
outs
cmc
push
xor
push
int3
js
pusha
call
aad
cdq
or
push
adc
mov
lahf
xor
adc
jnp
adc
int
pushf
retf
cmps
xchg
ret
ins
cwde
or
das
mov
dec
sar
xchg
xchg
jmp
sub
lahf
push
loope
mov
pop
sbb
cmp
add
ficomp
test
or
mov
arpl
dec
mov
cmp
ins
ror
push
adc
stos
jl
add
cli
aas
seto
xor
lss
dec
push
xchg
xor
sub
inc
jge
(bad)
adc
cmc
xchg
add
into
popf
sbb
(bad)
stos
cs
push
adc
clc
sub
dec
rol
(bad)
adc
jae
xor
xchg
push
ror
pusha
std
mov
push
imul
mov
cli
dec
fiadd
xchg
mov
mov
inc
sub
xchg
and
movs
jbe
mov
mov
cmp
fs
xor
test
push
pop
in
jbe
aaa
fs
imul
inc
xor
inc
sub
mov
cmp
ja
gs
test
jle
rol
xlat
lods
shl
xchg
xor
cld
xlat
inc
in
aad
jns
cmp
xchg
sahf
push
adc
lahf
pop
in
or
call
push
add
leave
sti
pop
jbe
mov
hlt
add
xor
and
inc
in
xor
sahf
add
std
lock
ss
dec
inc
or
or
ins
ss
cdq
push
mov
or
pushf
sub
rep
(bad)
call
aad
mov
(bad)
call
and
das
pop
adc
push
nop
loopne
pop
sbb
or
ret
dec
nop
mov
bound
mov
out
mov
jns
xchg
lods
out
stos
sub
xor
cmps
sbb
and
xchg
push
(bad)
clc
push
mov
and
out
enter
mov
sub
out
fbstp
add
fsub
adc
shl
int
pop
cmc
(bad)
aad
add
sub
jmp
hlt
data16
xchg
or
popf
nop
aaa
sbb
jbe
dec
and
mov
repz
mov
push
mov
inc
xor
sbb
retf
ret
inc
daa
inc
test
mov
in
mov
xchg
(bad)
sub
imul
mov
xor
push
xchg
jecxz
adc
sbb
mov
xchg
std
fmul
ret
nop
scas
cmps
retf
mov
arpl
jmp
clc
lea
mov
in
fcom
sub
push
lods
std
mov
cmp
mov
repnz
jmp
sub
hlt
leave
frndint
sub
inc
cmp
sub
mov
jl
das
cmp
mov
sti
leave
pop
mov
imul
loop
xlat
cmp
or
test
stos
cld
lods
add
cmc
and
mov
shl
and
sbb
jae
pop
jle
jo
push
cmp
adc
push
test
xor
mov
inc
jecxz
add
add
out
add
shl
(bad)
cld
arpl
mov
push
xchg
dec
xor
sub
push
rcr
fbld
xchg
les
pushf
out
ds
inc
jns
pop
push
popa
sbb
mov
retf
add
cmp
mov
sahf
clc
ret
fcomp
or
adc
and
cwde
push
add
mov
loop
les
in
scas
push
js
adc
jle
test
repnz
and
fidiv
ficom
xchg
(bad)
retf
ja
mov
push
pop
pop
mov
push
cmp
cmp
cli
data16
dec
push
fnclex
add
ss
in
popf
sbb
adc
aas
xchg
inc
cmps
mov
dec
inc
bound
xchg
bound
sub
lea
jae
test
xor
cld
dec
inc
push
mov
cmp
jecxz
enter
sub
push
fwait
adc
test
sub
aad
mov
ret
and
pop
xchg
push
inc
add
push
xchg
mov
jo
outs
in
movs
fcomp
pop
enter
dec
ret
enter
bnd
or
push
stc
sbb
push
mov
inc
dec
sub
stos
push
dec
das
popf
out
or
scas
aam
xor
fist
mov
mov
mov
and
icebp
cwde
or
hlt
mov
in
fdivr
cwde
push
out
fstp
mov
jns
hlt
inc
sbb
jmp
loop
(bad)
fist
cmp
cmps
xchg
mov
xchg
mov
js
push
jmp
gs
aam
jl
cwde
in
(bad)
pop
jne
gs
je
scas
(bad)
rcl
adc
dec
adc
jle
fcomp
inc
or
or
(bad)
pop
int
movs
je
inc
mov
mov
mov
adc
xor
into
xor
inc
jb
mov
xchg
dec
mov
int
aad
push
jge
icebp
dec
sbb
rcr
cmc
jne
(bad)
jp
add
jbe
fistp
shr
aam
push
mov
out
fidiv
lods
outs
mov
aaa
(bad)
pop
arpl
es
fnstcw
cmp
xchg
jp
imul
jle
(bad)
ins
jle
xor
lods
ins
fcomp
and
je
add
mov
mov
nop
and
test
ins
push
fwait
xchg
dec
rol
sub
sbb
jle
call
pop
sub
or
ror
(bad)
daa
and
jle
std
xchg
pop
into
mov
push
test
and
sub
push
movq
hlt
mov
sub
mov
sbb
xchg
hlt
not
mov
pop
inc
pop
push
and
push
test
call
das
mov
jl
mov
and
outs
xor
mov
sbb
sub
loopne
sub
xchg
push
pop
xchg
sub
xchg
jl
add
sub
or
cmp
pop
mov
aad
pushfw
test
lods
mov
(bad)
push
mov
pop
mov
dec
(bad)
inc
jge
shl
mov
and
or
test
inc
jb
xchg
xchg
retf
sbb
mov
sub
push
pop
fwait
cmp
arpl
hlt
int
cld
out
fsubr
sbb
jmp
adc
sbb
push
sbb
cmp
(bad)
cmp
adc
js
xlat
pop
call
jno
push
mov
mov
fnstsw
sbb
mov
pop
sub
lea
dec
aas
xchg
jle
jnp
je
mov
xor
lods
sti
sar
shl
xor
xlat
cli
pop
sbb
mov
bswap
sbb
jno
retf
jg
and
jmp
mov
test
fs
sbb
shr
inc
xchg
cmps
mov
pop
sbb
and
retf
sub
cld
pushf
pop
bnd
pop
xor
test
retf
add
xor
xchg
lods
cmp
ins
inc
cmp
movs
lods
cmp
movs
loop
jno
pop
mov
je
pop
sub
ret
dec
jl
xchg
bound
test
pop
ret
xchg
mov
movs
arpl
push
ins
aaa
dec
ja
(bad)
call
inc
push
pop
add
rcr
shr
pop
jb
test
xchg
jg
cmp
cmp
push
retf
pop
retf
mov
cmp
jb
(bad)
imul
mov
adc
mov
xor
and
xor
repnz
xor
add
pusha
daa
ret
mov
pop
push
je
xchg
ds
cmp
repz
jnp
loopne
jne
inc
lea
sbb
xchg
inc
jmp
dec
push
bnd
sub
and
cmps
sar
data16
xchg
or
mov
dec
daa
push
leave
push
or
pushf
in
or
xor
add
(bad)
and
jmp
test
sub
mov
dec
fsub
jnp
cdq
dec
loope
jno
dec
pushf
or
repz
sub
stos
xchg
and
mov
inc
stos
pusha
mov
xor
out
push
mov
repz
sub
adc
stos
lea
mov
ds
cmp
mov
or
pop
out
int3
test
test
inc
mov
in
adc
in
mov
inc
ds
push
(bad)
mov
pop
lahf
pop
in
aas
mov
sub
lods
cmps
inc
lds
aad
mov
addr16
pusha
jns
xchg
fucom
es
or
push
lods
mov
sbb
into
popa
dec
jle
test
cmp
mov
mov
dec
dec
out
(bad)
mov
mov
lea
xor
int3
sub
xchg
pop
loop
mov
jl
cmps
jle
(bad)
xlat
int3
clc
or
mov
fld
jle
jmp
mov
mov
push
movs
mov
xchg
jle
fsub
and
sahf
cmp
lods
cs
or
jns
nop
sub
loope
pop
add
adc
popa
ins
xchg
loope
mov
dec
loop
fcmovnu
dec
or
pop
cli
(bad)
pusha
jnp
jg
fs
repz
mov
ss
dec
xor
neg
rcr
or
xor
or
aad
loop
retf
pop
movs
ret
mov
and
push
pop
pop
mov
mov
inc
gs
sbb
inc
adc
mov
jnp
push
mov
ds
stc
arpl
outs
inc
mov
rcr
std
jnp
and
cs
jnp
ds
inc
sub
jmp
add
jbe
sub
jno
and
mov
test
push
pop
out
jle
jmp
(bad)
mov
mov
mov
xor
cmp
xor
shl
dec
nop
(bad)
gs
sbb
adc
cmc
test
aad
inc
dec
(bad)
lahf
cmp
add
sahf
cmp
arpl
pop
retf
xchg
jl
mov
in
stc
push
les
(bad)
bound
ins
xchg
hlt
pop
jge
inc
mov
mov
psrlq
adc
out
xor
arpl
xlat
sub
clc
rol
mov
mul
ror
out
int
frstor
jecxz
dec
test
pop
dec
fwait
xchg
push
(bad)
retf
daa
stc
add
xor
xchg
adc
sbb
adc
scas
(bad)
mov
xchg
jo
(bad)
jae
test
sub
popf
pop
cli
inc
inc
mov
aam
lea
xchg
push
pop
jns
or
das
(bad)
(bad)
jno
push
adc
lods
or
clc
and
jnp
mov
mov
(bad)
push
and
add
rol
sub
dec
sahf
sub
pop
mov
mov
push
push
aad
mov
jno
mov
push
and
(bad)
cs
and
add
popf
mov
js
adc
icebp
xchg
and
adc
cmp
mov
imul
inc
(bad)
push
in
inc
ror
pop
sub
sbb
mov
push
mov
or
sbb
jp
push
or
out
jmp
push
mov
pusha
add
mov
js
xchg
sub
(bad)
inc
sbb
mov
std
mov
sub
hlt
mov
mov
and
sub
cli
daa
xlat
mov
call
in
mov
in
out
xchg
sti
cmps
pop
pop
and
scas
cmp
add
test
aad
(bad)
pop
std
push
sbb
push
icebp
mov
(bad)
mov
sub
out
rcl
jl
mov
xchg
repnz
mov
mov
xchg
mov
cs
mov
xchg
pop
jmp
xchg
and
out
xchg
push
ror
push
jae
scas
das
jmp
xchg
jbe
push
cmp
lahf
xchg
test
push
mov
aam
dec
sbb
adc
push
sahf
je
add
fimul
gs
pop
mov
cmc
prefetcht1
mov
leave
xchg
mov
mov
adc
mov
mov
mov
lea
xor
dec
test
adc
popa
jmp
std
dec
push
jle
dec
and
out
pop
cmp
mov
dec
push
retf
cmps
stc
or
out
enter
xchg
test
xchg
cmp
in
inc
adc
pop
addr16
loopne
fld
adc
mov
or
scas
popa
sub
jg
inc
or
loop
daa
or
hlt
loop
cmp
loope
cmp
mov
inc
fs
in
in
mov
jmp
jge
cld
jne
ret
fucompp
mov
(bad)
push
xchg
inc
(bad)
in
popf
ret
or
repz
clc
shl
lds
push
inc
adc
sar
or
outs
rol
push
scas
call
mov
or
scas
mov
mov
or
bound
cmc
jmp
dec
add
xchg
pop
rcr
xchg
int
ret
mov
cs
cmp
jb
pop
cld
push
sub
lahf
std
xor
call
xor
(bad)
cli
push
and
in
pop
add
xor
(bad)
jle
out
inc
xchg
inc
mov
retw
imul
iret
out
adc
and
in
aas
inc
rcr
cmp
loop
mov
mov
hlt
popf
mov
int
iret
test
dec
(bad)
inc
sbb
xchg
ss
mov
mov
les
push
repnz
inc
cmp
jmp
and
stos
outs
pop
xchg
and
push
xchg
loope
add
aaa
sub
jnp
xor
bound
push
adc
adc
pop
jno
lahf
je
dec
jbe
lea
push
mov
cmp
sub
ror
add
mov
imul
rol
lods
call
hlt
pop
movs
cmp
es
or
lods
xchg
fs
sti
sub
call
jb
pop
loope
cmp
call
(bad)
xor
fist
pop
in
fwait
ret
inc
jae
push
ret
pop
sub
cmp
mov
aam
enter
jge
movs
stc
jae
pop
fs
sbb
xchg
or
jne
push
fistp
(bad)
cmp
push
inc
xor
mov
xor
je
jp
add
jae
jo
mov
add
loopne
push
das
and
into
clc
(bad)
cld
arpl
icebp
leave
das
inc
call
adc
inc
in
inc
mov
mov
mov
mov
test
and
ins
aad
rol
scas
shl
shl
pop
cmp
dec
fucomi
cmp
mov
sbb
in
push
inc
in
out
xchg
pop
mov
add
dec
je
inc
adc
adc
data16
xor
cmp
push
addr16
neg
cld
cmp
loope
pushf
xor
or
mov
mov
mov
das
xor
mov
xchg
adc
mov
cmp
push
pop
loope
push
(bad)
out
retf
xlat
jb
stos
mov
sub
mov
pushf
fadd
xchg
js
inc
xchg
xor
loopne
jbe
dec
fist
pusha
or
(bad)
mov
mov
xchg
scas
xchg
xchg
(bad)
jb
ss
or
mov
jle
lds
ins
lods
out
ins
mov
inc
mov
push
into
aaa
pop
aaa
jge
push
fnsave
add
(bad)
mov
dec
sub
call
jle
inc
(bad)
and
sub
repnz
fmul
sub
icebp
push
mov
xchg
push
xchg
sbb
cmp
push
inc
pop
mov
xchg
sub
fadd
mov
popa
mov
out
out
cmp
mov
jo
fwait
sub
and
inc
sbb
gs
out
inc
into
mov
inc
mov
jmp
xchg
addr16
push
movs
sbb
aad
fldcw
retf
repnz
push
cmps
cli
hlt
in
call
jbe
int3
aas
enter
pop
ds
out
sbb
ds
mov
retf
je
pop
test
and
les
adc
call
push
or
push
les
cmc
cli
imul
into
jb
(bad)
xchg
out
js
les
mov
pop
scas
cmc
clc
in
or
imul
fist
jle
sub
xchg
and
ret
push
fimul
pop
push
lods
cmp
out
sub
cwde
push
sbb
out
(bad)
dec
aaa
sub
(bad)
mov
jp
es
data16
add
xor
push
das
push
jl
fstp
stc
sbb
repnz
nop
add
pop
into
sbb
movups
sub
pop
mov
(bad)
fisubr
setae
clc
data16
sbb
dec
dec
fadd
jp
loope
xlat
loop
pop
imul
mov
mov
(bad)
mov
sbb
push
mov
xchg
ret
iret
gs
mov
add
xchg
dec
mov
popa
mov
xor
shl
xchg
xchg
out
std
lock
xor
les
inc
in
sub
jbe
jecxz
push
and
inc
push
fnstenv
std
out
popa
(bad)
pop
loopne
je
adc
popf
xlat
ds
iret
cld
scas
or
cmp
jno
in
xor
mov
mov
ins
cmp
mov
aaa
mov
fcomp
cwde
imul
cmps
inc
mov
fbld
inc
inc
ja
mov
jge
jmp
imul
ss
stos
inc
scas
pop
rcr
mov
pop
out
dec
test
xor
cmp
xor
add
pop
dec
jmp
xor
inc
or
push
mov
retf
fld
out
fnsave
mov
push
and
call
test
call
or
data16
fnstsw
xchg
bt
and
inc
add
int3
cmp
push
ds
cmp
in
cmp
push
fwait
(bad)
sub
into
aad
popa
push
in
jle
mov
cmps
imul
xchg
mov
ss
xlat
out
mov
xchg
xor
loop
mov
push
dec
in
repnz
cld
cdq
mov
loope
popf
lea
(bad)
mov
ss
in
jo
cwde
push
push
mov
mov
ins
fs
push
bound
cdq
(bad)
cs
push
scas
mov
fidivr
daa
loopne
jo
sti
or
inc
mov
inc
sbb
idiv
pop
(bad)
rol
or
ja
xchg
popf
add
(bad)
je
pusha
fdiv
imul
pop
sbb
cld
ficomp
hlt
out
enter
mov
in
not
movs
mov
mov
or
fmul
jbe
pop
pop
sbb
push
imul
data16
pop
or
mov
mov
cmp
push
(bad)
lahf
sub
cmps
call
mov
in
xchg
ss
shr
adc
pop
mov
jge
add
mov
push
jbe
or
jae
call
add
mov
dec
adc
push
lds
xor
cmp
sub
cli
fs
xchg
movs
dec
es
dec
movs
sub
sub
inc
pop
in
or
shl
jp
fmul
xchg
fadd
clc
mov
push
push
xchg
retf
data16
stos
push
mov
jmp
fs
outs
leave
ds
jg
call
repz
mov
lea
pop
mov
loop
mov
in
and
push
test
cmps
mov
mov
xchg
aas
std
sub
arpl
inc
(bad)
jmp
ret
mov
iret
pop
sbb
jnp
nop
mov
pop
and
retf
retf
mov
out
jno
jle
mov
fsubp
outs
cmp
cmp
pop
jecxz
jno
xor
mov
add
adc
mov
addr16
fadd
fwait
push
xchg
call
das
mov
(bad)
sub
(bad)
cmc
mov
ret
aad
push
xchg
push
outs
addr16
lods
arpl
pop
leave
into
xchg
sar
stc
mul
add
and
(bad)
ror
das
and
inc
js
mov
int
in
adc
sbb
gs
loope
int
imul
xor
fwait
jmp
jmp
sbb
stos
ret
in
inc
add
or
mov
pop
add
cmp
daa
movs
mov
je
or
mov
xchg
lds
sub
scas
call
cmps
fwait
adc
sbb
push
dec
dec
call
lods
in
mov
xchg
inc
in
shl
jle
mov
rol
cmp
mov
nop
iret
mov
lods
imul
adc
lock
fsub
jno
repz
aaa
add
loopne
push
dec
adc
inc
sti
adc
outs
xor
cmp
jp
imul
in
push
pop
jecxz
xor
xchg
push
fs
push
retf
test
sub
mov
push
dec
sbb
dec
out
ror
loopne
fld
mov
pop
xchg
mov
repnz
dec
outs
in
pusha
int
aad
outs
lods
das
sti
jmp
and
jo
inc
push
ror
push
xchg
idiv
scas
movs
clc
inc
lods
xlat
cmps
jmp
sub
cdq
add
ret
(bad)
and
cs
lahf
inc
fistp
pop
or
in
fst
mov
stos
mov
cld
xchg
pop
xchg
inc
jmp
popf
adc
pushf
or
pop
outs
test
inc
mov
sti
dec
cmp
aaa
fmul
ins
ds
jmp
dec
xchg
and
leave
dec
lahf
sbb
pop
fneni(8087
mov
pusha
mov
idiv
adc
sbb
mov
fisttp
ss
sar
out
add
imul
mov
push
xor
dec
fidivr
or
data16
dec
and
inc
call
mov
or
movs
(bad)
imul
xchg
call
sar
xor
pop
xchg
rep
pusha
adc
xchg
fnstcw
mov
test
pop
fcom
popa
xor
xchg
sbb
and
aam
into
fcmove
enter
or
push
daa
push
add
pop
aaa
sbb
xor
mov
call
or
adc
aam
push
xchg
repz
pushf
mov
push
retf
mov
dec
push
outs
dec
xchg
into
ins
pop
mov
out
or
sti
sub
scas
cmp
pushf
sub
push
loopne
xor
sahf
adc
dec
jb
xor
test
fwait
mov
mov
push
jnp
retf
mov
arpl
scas
rcl
movs
and
lock
adc
out
push
test
ds
cmps
mov
bound
fst
sbb
sti
inc
mov
sub
std
into
cmp
imul
fidiv
lock
cmp
jg
dec
cmp
jle
test
rcl
push
and
pop
cmps
icebp
ins
ret
dec
ins
pop
pop
sbb
popa
jg
call
sbb
and
xchg
test
stc
cwde
enter
in
and
std
lods
xchg
add
add
mov
cwde
fisttp
xchg
adc
rcl
mov
iret
sbb
movs
pusha
lahf
lock
jno
inc
xchg
pop
pop
js
bound
test
mov
jl
xchg
pop
mov
cmp
mov
ss
jp
add
xchg
iret
je
mov
mov
adc
push
jns
sbb
push
mov
not
xor
aam
or
xchg
push
inc
and
xchg
int3
jl
les
jbe
ss
mov
test
scas
inc
or
mov
mov
add
jecxz
mov
sbb
stc
sub
add
dec
jmp
add
ror
pop
out
mov
test
add
and
push
mov
sub
fucomp
adc
ret
xchg
ds
add
push
sbb
stos
leave
scas
xor
mov
inc
retf
call
test
mov
mov
xchg
jmp
xchg
mov
jmp
xor
jl
jmp
ja
sahf
arpl
std
popf
sbb
xchg
mov
mov
push
adc
sti
sub
ins
jl
stos
or
mov
pop
add
mov
daa
ret
jno
sub
pop
cmps
xchg
repz
nop
dec
fsub
out
mov
stos
xchg
cmp
test
push
cmp
or
dec
lds
cwde
inc
std
jle
retf
div
mov
pop
outs
push
ret
mov
inc
aad
cmps
xor
lods
fbld
push
jmp
mov
fnstsw
jmp
and
out
xor
mov
cmps
push
and
mov
pop
cmp
dec
sbb
xor
call
ja
sbb
push
sub
daa
rcr
fs
xchg
aaa
xor
les
mov
mov
adc
cmp
fxtract
mov
lahf
jmp
jb
mov
jb
sub
addr16
jb
les
jne
dec
ret
and
stos
ins
in
data16
dec
mov
mov
out
lock
inc
in
cmp
loop
add
add
loopne
mov
pop
xchg
and
dec
add
shr
xchg
pop
and
nop
cmp
hlt
jmp
dec
cmc
sub
das
in
nop
mov
lahf
push
pop
test
jp
dec
std
movs
lea
test
sub
and
aam
sbb
and
fwait
xchg
arpl
es
fidiv
cmp
push
or
out
or
cmp
and
idiv
jbe
adc
cmp
sub
mov
stos
pop
sbb
cmps
je
mov
pop
or
and
cmp
sbb
repnz
xor
inc
xchg
jle
inc
pop
add
xchg
in
dec
adc
or
lods
and
clc
mov
adc
cmp
and
cmp
xor
popa
sbb
pop
push
ins
ficom
sbb
test
inc
je
(bad)
icebp
xchg
in
sbb
mov
or
dec
les
imul
inc
inc
add
jg
je
in
dec
leave
and
and
dec
dec
div
mov
xlat
ins
test
xor
fcmovu
cli
inc
inc
dec
ret
popf
enter
dec
or
ds
mov
and
pop
adc
(bad)
add
pop
(bad)
lahf
int3
popf
push
sub
ja
lea
and
sbb
movs
or
sar
out
push
imul
call
add
jmp
mov
adc
test
pop
jno
mov
and
mov
xchg
cmps
ja
cld
sub
push
out
add
repz
sub
clc
fisttp
out
out
xor
pop
sar
mov
mov
fucomi
daa
cmps
adc
js
pop
shr
or
scas
jle
xchg
mov
retf
or
(bad)
aam
pop
jbe
nop
cmp
sub
jns
stos
jbe
xchg
sar
and
sbb
(bad)
or
ins
outs
dec
fisttp
mov
imul
arpl
aaa
lock
js
add
or
retf
jae
sahf
retf
into
jl
fwait
lahf
push
std
stos
mov
enter
inc
mov
test
nop
push
adc
into
sub
mov
cli
das
xchg
ror
dec
sbb
(bad)
es
mov
(bad)
or
mov
pusha
add
retf
enter
jmp
lods
cmp
push
cmp
xchg
sub
adc
and
rcr
jecxz
bound
leave
dec
les
imul
scas
xchg
pusha
xchg
push
scas
aaa
mov
push
mov
daa
(bad)
out
adc
mov
pop
cmp
imul
rol
xchg
jo
das
mov
mov
pop
cmp
sub
ret
mov
jb
scas
cwde
push
fisttp
mov
aad
adc
aad
mov
cmps
aad
in
hlt
pop
inc
mov
and
pop
out
and
inc
(bad)
cld
mov
push
ret
(bad)
jmp
add
add
push
push
inc
call
inc
pop
setg
dec
in
sbb
popf
pop
sub
mov
push
push
inc
xor
nop
fst
sbb
xor
adc
jp
and
das
dec
test
push
sub
xchg
test
xor
pop
pop
mov
cmp
pushf
clc
mov
push
call
inc
push
test
push
xchg
mov
aad
mov
dec
pusha
test
dec
and
mov
push
retf
push
repz
imul
mov
pop
cli
mov
int3
out
push
enter
cmp
loope
mov
push
outs
sub
mov
test
inc
mov
pop
cmp
sbb
sbb
je
push
add
icebp
(bad)
push
xor
xchg
aaa
adc
jmp
fistp
pop
mov
dec
sub
xor
and
cmp
inc
cld
out
xor
lods
lds
mov
cmps
sbb
jbe
dec
fs
cmp
das
jge
jmp
pop
fisubr
(bad)
retf
ret
sbb
pop
loop
in
sbb
(bad)
mov
sti
pop
jnp
xchg
outs
outs
out
mov
scas
xchg
bound
cmps
outs
push
and
jno
stos
jmp
(bad)
or
dec
xor
loope
stc
mov
test
lahf
pushf
sahf
or
enter
outs
aam
mov
loopne
fldl2e
movs
fcmovnb
loopne
jns
cli
or
or
cmc
dec
push
movs
mov
inc
ss
push
jnp
sub
lea
aaa
mov
push
push
aam
mov
mov
xchg
(bad)
pop
cmp
push
pusha
pushf
nop
xor
sar
rcr
xor
xchg
pop
stos
dec
scas
mov
sub
mov
inc
dec
cmps
daa
and
mov
fisttp
push
mov
sar
(bad)
lock
popa
ja
mov
jl
inc
or
mov
div
fadd
stos
push
stc
stos
inc
aad
jmp
dec
shl
push
dec
neg
jmp
pop
sbb
aad
ja
cmp
fidivr
outs
out
sti
push
lahf
add
ss
fistp
pop
fisttp
int3
jmp
sar
test
call
pop
fwait
iret
push
outs
mov
in
sar
mov
popa
movs
adc
pop
push
jge
pop
and
mov
nop
xchg
mov
popa
nop
and
movs
mov
cmps
and
mov
xchg
dec
or
aas
jl
scas
add
ins
mov
add
add
adc
jne
cmp
or
and
dec
in
mov
xchg
dec
iret
add
xchg
lods
cli
and
mov
test
fadd
dec
sub
mov
push
cld
je
jmp
outs
and
js
addr16
sbb
dec
and
fadd
retf
int3
mov
dec
xor
arpl
ret
jg
loopne
jno
pop
mov
mov
dec
mov
sbb
jl
mov
cdq
xchg
cmp
jae
out
xchg
sub
test
adc
push
jle
leave
dec
das
mov
mov
sub
mov
mov
int
mov
adc
jo
add
push
int
call
push
inc
add
dec
inc
imul
js
adc
fdivrp
xchg
jg
mov
mov
pop
xchg
ins
inc
into
and
call
mov
push
and
fistp
sub
das
or
test
sub
aaa
inc
lods
repnz
sbb
pusha
jbe
inc
mov
lock
pushf
push
sbb
repz
inc
inc
nop
jmp
aas
loop
lods
pop
inc
(bad)
hlt
shr
push
inc
add
cli
shr
jmp
mov
outs
push
push
or
pop
es
fwait
dec
or
jnp
add
out
test
push
outs
and
mov
lods
dec
sub
xor
xlat
das
cmc
fdivp
or
xchg
xchg
cmp
in
cs
mov
or
mov
das
cdq
in
jae
dec
movs
add
adc
retf
lea
xchg
(bad)
add
out
icebp
sub
sub
out
mov
into
xlat
lds
and
dec
cs
sub
mov
fnstenv
sbb
and
sbb
out
into
fdivr
cmp
add
dec
push
hlt
xor
movs
sub
jmp
add
movs
xchg
xor
lock
mov
cld
repnz
nop
stos
movs
mov
adc
in
jmp
lods
push
fstp
stos
loop
lds
cmp
xor
ins
inc
shl
inc
xor
inc
out
jl
stc
fdivrp
outs
or
sbb
or
xor
test
gs
push
xlat
inc
test
ja
popa
jecxz
inc
(bad)
test
ds
and
nop
push
jnp
in
pop
and
ins
daa
sbb
stc
mov
loop
pusha
cmps
(bad)
leave
xlat
aam
adc
dec
icebp
inc
test
adc
data16
dec
add
mov
in
dec
mov
(bad)
cmp
mov
or
in
aas
mov
xlat
out
icebp
adc
loopne
pop
jns
scas
or
mov
imul
sti
push
and
rcl
and
loope
mov
push
scas
and
and
xchg
das
call
jne
dec
xchg
and
jnp
lahf
aaa
mov
add
cmp
jg
and
mov
cmp
add
sub
adc
mov
add
mov
mov
jmp
add
dec
and
xchg
xchg
call
push
adc
aas
sbb
and
jecxz
in
or
cmp
xor
cmp
cmps
push
pop
call
fld
jb
xor
inc
sbb
pop
imul
test
sar
jmp
pop
addr16
nop
repz
sub
loope
lahf
add
push
fld
cld
xor
pop
outs
nop
lea
mov
loope
pop
sub
mov
int3
sub
xor
xor
cmp
xor
pop
ss
(bad)
popa
add
popa
sbb
inc
(bad)
neg
push
push
xor
cmp
push
aaa
stos
inc
call
sbb
xchg
neg
aaa
icebp
mov
xor
jmp
retf
fcomp
cdq
xor
ret
(bad)
scas
jae
leave
je
outs
sahf
rcl
push
and
xor
dec
mov
dec
xchg
sbb
(bad)
adc
jb
push
push
pop
sti
cmps
mov
pop
jmp
add
xlat
inc
cmps
icebp
push
sbb
jmp
jg
cdq
or
lock
inc
pop
mov
ss
adc
push
cmp
dec
repz
xchg
pop
add
pop
fnstcw
adc
jbe
adc
jecxz
dec
pop
sub
leave
pop
popa
pop
dec
scas
mov
sub
cmp
add
pop
inc
sub
dec
mov
fbld
mov
ja
