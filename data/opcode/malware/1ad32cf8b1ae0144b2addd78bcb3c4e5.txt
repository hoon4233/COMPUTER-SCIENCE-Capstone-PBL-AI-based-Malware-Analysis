mov
sbb
sbb
fldenv
scas
icebp
pop
arpl
mov
add
push
cli
and
(bad)
std
add
or
push
pop
loopne
lds
sti
aam
adc
aaa
sbb
scas
push
push
mov
adc
sti
int
jbe
sbb
mov
jo
loope
fst
mov
out
sub
sub
mov
jle
mov
add
out
(bad)
addr16
mov
call
iret
iret
jnp
icebp
xor
jp
sub
adc
call
sbb
and
dec
mov
in
ins
or
xchg
and
or
mov
adc
shl
dec
mov
and
and
xchg
std
jmp
push
inc
mov
cdq
add
dec
xor
in
(bad)
sub
ins
aam
xchg
xor
les
mov
je
dec
out
mov
(bad)
fild
xchg
(bad)
outs
sub
jle
push
pop
aaa
sub
push
jbe
inc
outs
mov
or
inc
inc
sub
loop
test
aam
(bad)
movs
(bad)
loopne
inc
inc
lds
hlt
jae
inc
add
sbb
pop
lock
(bad)
or
nop
dec
adc
ret
cld
pop
call
inc
imul
xchg
sbb
rcl
ss
mov
cmp
push
dec
mov
ror
sti
into
push
mov
popa
mov
sub
lea
loope
pushw
in
shl
jno
movs
lock
mov
jmp
mov
fs
mov
pop
xchg
jl
pop
cmp
(bad)
mov
mov
xchg
jns
test
sbb
sbb
dec
ins
pusha
lea
ret
(bad)
jns
dec
push
mov
inc
push
call
mov
bound
lods
stc
xchg
int3
add
adc
jne
mov
or
xor
jo
push
(bad)
gs
push
push
pop
clc
jmp
jg
arpl
scas
and
sub
adc
sahf
out
das
adc
fdivr
sub
and
cmp
div
inc
stos
loop
add
mov
jno
mov
xchg
push
mov
or
repz
push
out
enter
adc
pushf
mov
pop
pop
jp
jbe
mov
push
adc
daa
push
push
int3
mov
jle
or
cs
lahf
cmp
cmp
lahf
gs
out
jge
dec
data16
mov
test
fnstsw
addr16
or
jecxz
fs
add
es
loope
enter
xlat
jb
imul
stos
push
and
inc
xchg
js
pop
mov
out
sub
dec
push
outs
inc
out
ret
xor
jnp
loop
fs
arpl
cmp
(bad)
mov
dec
lods
call
jo
hlt
mov
inc
rcr
push
cmp
je
test
ret
or
push
cmp
call
mov
outs
mov
cld
cmp
aaa
shl
mov
aas
jle
imul
adc
mov
retf
jo
mov
test
sub
fld
cmps
repz
int3
cld
xchg
jmp
pop
in
add
mov
shl
iret
iret
in
mov
xor
ja
pushf
sub
dec
mov
gs
iret
jb
ds
cmp
das
inc
adc
push
xor
xchg
lds
aad
dec
pusha
out
and
mov
in
and
in
ins
out
or
or
push
inc
cwde
cmp
dec
dec
jb
loope
jl
mov
or
jns
add
mov
add
push
aad
in
xor
mov
rol
pop
push
fstp
pusha
movs
outs
add
fimul
fcompp
dec
sbb
push
retf
fldenv
xor
or
cmp
sbb
fwait
cmp
mov
jns
dec
mov
mov
cdq
outs
(bad)
sub
mov
rcr
gs
call
ja
loopne
jmp
loope
shl
out
in
sbb
int3
and
setbe
mov
push
pop
push
mov
cmp
pop
popf
int
xor
xchg
and
(bad)
mov
(bad)
jmp
jne
or
xchg
addr16
leave
imul
sbb
(bad)
dec
jg
pushf
(bad)
add
jl
shl
das
in
inc
scas
fucompp
rol
sub
mov
dec
and
clc
push
mov
jnp
cmp
retf
or
and
mov
mov
mul
ins
and
or
fild
or
rcl
xchg
js
aaa
push
popf
ror
mov
hlt
cmps
enter
ret
retf
mov
les
out
add
adc
cmp
cdq
cmp
add
cmp
fbstp
(bad)
sbb
(bad)
push
dec
inc
and
and
pop
and
popa
gs
sahf
sub
xchg
xor
test
out
sbb
xor
xchg
in
(bad)
cmc
mov
out
mov
scas
fs
mov
out
mov
xchg
pop
add
lods
lods
xchg
das
mov
retf
xor
js
imul
out
popa
stos
enter
ins
cmps
push
inc
add
imul
es
jnp
loop
retf
sub
hlt
hlt
push
dec
or
and
adc
ret
jbe
rcl
xlat
scas
cdq
pop
mov
inc
fmul
push
and
push
gs
inc
hlt
xor
or
sub
xor
pop
bound
jns
jmp
push
add
jo
inc
lahf
loopne
sub
std
jecxz
popa
aas
push
dec
rcl
mov
repz
adc
addr16
push
mov
inc
cli
(bad)
test
shl
pushf
xor
add
adc
inc
lods
push
out
dec
lods
dec
mov
mov
stos
push
mov
mov
in
xchg
jle
mov
sar
cmps
icebp
int
xor
add
movs
mov
inc
mov
fisubr
test
and
xchg
pop
lods
icebp
lock
push
adc
xor
in
fwait
in
stos
jbe
fmul
and
push
fucomip
popa
xor
dec
jno
ror
mov
scas
cwde
jne
pop
dec
or
jbe
cmp
rcl
fist
js
cmp
pusha
dec
sub
or
cmps
and
mov
dec
add
push
sub
pop
mov
sahf
or
ja
lock
jae
pop
and
xchg
in
leave
fcom
shr
cli
jbe
pop
mov
nop
call
jecxz
lock
cmp
sub
pop
aam
sbb
popa
sub
(bad)
lods
popa
xchg
out
inc
dec
add
mov
ins
sti
lods
addr16
retf
mov
fisub
mov
xlat
mov
sub
inc
xchg
mov
test
xchg
int
add
sub
pop
fwait
(bad)
jmp
stos
ficom
jae
or
mov
ins
addr16
jno
popa
hlt
popa
cmp
jge
push
or
sub
add
ret
add
fstp
pusha
cmp
sahf
lea
cmp
xlat
inc
and
call
loope
dec
popa
sbb
mov
mov
xchg
add
mov
repz
test
push
sub
xlat
in
push
mov
fstp
sub
not
popf
not
shl
call
sbb
cdq
aaa
jnp
addr16
cmps
aam
ret
lods
fldcw
mov
jns
fnstenv
xor
int
push
popa
xchg
jp
mov
mov
sub
adc
jns
cli
jbe
cmp
in
and
push
pop
stc
xor
in
sbb
jle
adc
xchg
xlat
call
movs
mov
repnz
xchg
sbb
(bad)
push
mov
retf
push
xor
(bad)
aas
jns
or
inc
sub
mov
int3
loopne
or
loopne
sub
out
iret
or
cwde
(bad)
call
(bad)
aaa
mov
jle
imul
sub
outs
icebp
out
jmp
faddp
dec
mov
gs
ss
and
inc
xor
xchg
mov
push
dec
jnp
(bad)
fbstp
lahf
cmp
cmp
jle
xor
int3
rcr
cwde
adc
mov
inc
scas
xchg
fmul
sub
movs
stc
test
mov
cmps
loopne
add
and
jne
pop
mov
inc
mov
and
adc
push
mov
dec
out
in
and
or
or
popa
and
push
push
and
xchg
mov
cmps
popa
jmp
sub
xchg
popf
inc
(bad)
lods
mov
adc
(bad)
xor
imul
xor
out
dec
pop
jecxz
stos
add
or
(bad)
mov
mov
or
cmp
daa
in
ficom
aad
pop
aad
and
and
xlat
jge
push
add
in
push
ror
js
jl
(bad)
xor
je
shr
xor
stc
or
push
in
mov
sub
or
leave
push
or
adc
push
aam
push
mov
fs
mov
popf
call
aaa
data16
pop
popf
repnz
cmp
mov
pop
dec
pop
das
pushf
outs
push
(bad)
mov
inc
les
jmp
jbe
dec
push
das
icebp
add
fwait
mov
ret
push
jnp
jmp
jg
add
cmp
push
mov
push
pop
sub
out
dec
mov
aaa
movs
mov
push
push
stc
test
mov
dec
ret
sti
stos
jne
ins
sub
jnp
hlt
hlt
sbb
inc
adc
cmps
sub
ja
mov
add
xlat
(bad)
fs
jmp
sar
aam
mov
push
adc
arpl
xchg
pop
dec
mov
aam
pop
ds
fs
(bad)
jg
xor
(bad)
clc
and
daa
clc
stos
jbe
aad
mov
cmp
mov
stc
mov
jb
lock
mov
push
ret
sub
add
fisub
(bad)
jecxz
stos
xor
jge
in
lahf
mov
(bad)
mov
sbb
fsub
inc
and
or
rol
inc
lods
adc
dec
sub
lahf
push
in
in
les
mov
push
and
das
or
fild
lds
loope
jle
call
push
jbe
cmp
das
mov
ror
mov
retf
sbb
mov
cmp
nop
test
sbb
xchg
jecxz
jb
jle
scas
push
in
stc
sahf
dec
pop
repnz
dec
aam
xlat
lods
pop
add
popf
int
test
lea
xchg
or
jae
aam
mov
fwait
and
arpl
outs
fcmovne
add
mov
sub
or
ins
add
jmp
(bad)
ins
mov
and
xor
jg
inc
jle
aas
pop
add
shl
test
and
jge
retf
inc
pop
js
add
add
rcl
mov
adc
ja
xchg
jno
mov
fcmove
pusha
ja
stc
mov
push
loopne
lods
mov
or
pop
cld
fs
fild
lahf
jl
call
cmps
pusha
fs
mov
addr16
or
and
icebp
outs
in
test
xchg
sbb
and
xchg
div
inc
mov
out
push
and
jl
das
mov
int3
stos
in
(bad)
aad
ret
mov
mov
jae
mov
sub
loop
adc
ins
jg
jp
or
adc
sbb
(bad)
sub
imul
sahf
pop
jmp
xor
sub
xchg
leave
loop
in
scas
or
gs
jno
in
call
jns
dec
aaa
jns
or
retf
pop
push
dec
mov
loope
xor
cli
sbb
imul
test
test
ret
cmp
or
out
lods
es
dec
inc
push
sbb
pushf
dec
ror
int
shl
mov
xchg
lds
fisttp
sbb
fwait
dec
(bad)
xchg
and
fstp
inc
sbb
stos
and
inc
jl
bound
out
(bad)
mov
inc
movs
xor
iret
pop
gs
pop
mov
pop
into
sub
pop
push
jae
(bad)
inc
jo
imul
in
enter
jnp
mov
and
les
ret
jns
add
cwde
cdq
jl
ds
int
jecxz
arpl
push
jecxz
mov
adc
xor
bound
(bad)
stc
or
ds
mov
or
aad
pop
push
xor
add
xchg
mov
xchg
push
xchg
or
inc
sbb
mov
hlt
or
sub
loopne
inc
bound
dec
mov
xor
mov
jmp
add
std
call
lods
mov
pushf
retf
xchg
mov
das
out
fstp
cmp
pop
jns
add
je
(bad)
sub
mov
in
pop
jnp
out
mov
inc
push
sub
xchg
cmp
dec
addr16
pop
push
and
popa
xlat
or
and
pop
leave
cmps
arpl
push
xor
pushf
mov
dec
jns
mov
cmp
lahf
mov
and
rcr
xor
sbb
pusha
add
adc
push
inc
outs
jbe
push
xchg
mov
jno
jnp
ficom
and
bndstx
xor
mov
mov
adc
je
cwde
sti
xchg
xchg
stc
mov
lods
or
stos
push
pop
sub
iret
adc
ins
push
adc
lahf
(bad)
sbb
jns
lds
jle
mov
jl
call
push
call
inc
or
lea
inc
add
sub
mov
dec
mov
ficomp
mov
push
sahf
mov
bound
push
cmp
jo
jb
retf
inc
scas
dec
cmp
inc
stos
or
mov
retf
outs
leave
and
dec
inc
mov
dec
add
push
mov
rcr
repz
sysret
ror
xor
jl
ja
and
int3
xchg
inc
lahf
loope
pushf
pusha
adc
aaa
mov
sbb
mov
out
ja
into
inc
mov
call
add
fmul
ja
jbe
sbb
push
add
and
mov
jmp
xchg
add
inc
mov
mov
and
or
pop
mov
ins
cmp
add
test
pop
mov
mov
dec
repz
loop
daa
retf
imul
fbstp
dec
sbb
test
inc
inc
xchg
jbe
xchg
cmp
push
push
fdivr
add
out
cwde
ror
mov
sbb
mul
sar
jle
sub
dec
outs
inc
or
push
daa
or
pop
fsubr
mul
call
jmp
scas
cmp
hlt
pusha
pushf
cwde
push
cmp
sub
add
test
xor
sti
out
inc
pop
mov
fldenv
mov
fcom
push
pop
sbb
add
mov
(bad)
repz
cdq
and
cmp
(bad)
icebp
dec
adc
aam
mov
or
iret
jle
fisttp
cli
and
jge
push
dec
ss
repnz
or
lods
call
inc
retf
in
lock
sub
sub
int3
ret
push
sub
bsf
gs
mov
sub
inc
daa
leave
stmxcsr
imul
push
std
push
cmp
dec
cmp
push
add
lods
cwde
pop
xchg
push
test
sub
fnstenv
ins
jle
popa
cmp
mov
fldenv
pop
mov
or
dec
int3
mov
test
(bad)
jbe
inc
loop
xor
cmp
pop
adc
add
aaa
nop
imul
jne
mov
stos
dec
xor
retf
sub
sub
repz
cmp
aas
in
sar
movs
inc
das
add
add
pop
or
jecxz
fnstsw
bts
pop
fs
ret
mov
mov
das
stc
clc
pusha
cli
jbe
xchg
(bad)
in
ficomp
lea
pusha
in
push
out
add
xchg
sub
pop
push
out
xor
je
push
push
or
(bad)
loope
dec
jne
(bad)
cmp
mov
into
cli
pop
pushf
dec
mov
ret
mov
or
jp
bnd
lds
ins
jle
pop
sahf
ds
out
sbb
ror
inc
or
stc
das
add
pop
dec
sub
pop
mov
js
int3
jns
mov
mov
sub
inc
cdq
inc
add
iret
mov
mov
jge
mov
mov
inc
test
scas
mov
jb
pop
cwde
sahf
lea
mov
mov
fdivr
nop
(bad)
mov
mov
cdq
xchg
cmp
jae
into
xor
push
fld
nop
js
in
(bad)
test
xor
ss
fst
bound
pop
dec
ds
inc
gs
and
sbb
cmc
or
ins
dec
cdq
fwait
fwait
cmc
fistp
lock
ja
dec
loopne
stc
add
je
pop
or
outs
or
cmp
jg
js
and
mov
stc
popa
fadd
jle
retf
shr
call
jns
movs
xor
sub
outs
out
xor
ror
jo
lea
ins
push
push
add
sub
push
cmp
pop
pop
in
adc
out
mov
mov
movs
int3
int
cwde
or
xor
lock
xor
mov
dec
(bad)
sub
adc
shl
gs
jmp
out
adc
sar
shl
mov
inc
imul
cli
push
fadd
sub
ret
rcl
cmps
push
push
lock
sub
(bad)
push
int
mov
lods
jne
aad
pushf
pop
jecxz
cwde
jle
cwde
(bad)
loopne
fs
fadd
or
push
mov
dec
pop
mov
fwait
or
aaa
xlat
adc
xor
dec
ss
popa
or
test
pop
loopne
pushf
bound
fldenv
out
sar
cmp
xchg
sub
and
push
push
fldenv
imul
push
test
arpl
dec
sbb
push
cmps
test
sbb
dec
mov
into
pop
shl
outs
das
shr
push
jae
iret
sar
or
xchg
scas
icebp
cli
aad
imul
add
adc
xchg
push
fcmovbe
or
scas
pop
mov
mov
mov
and
lahf
sub
or
lahf
fisttp
mov
mov
inc
test
adc
adc
stc
jp
and
jl
repnz
dec
xchg
and
xchg
call
test
jg
mov
movd
push
stos
in
lods
sub
mov
ins
cmp
call
adc
jecxz
jns
or
xchg
xchg
movs
xchg
and
adc
or
pop
mov
call
out
icebp
ret
pushf
nop
stos
mov
in
daa
jmp
add
mov
jae
push
jg
xor
and
add
clc
clc
out
not
jle
retf
sbb
xchg
xor
mov
and
pusha
xchg
jns
pop
jno
fldenv
arpl
lods
not
loope
or
call
cld
(bad)
dec
test
inc
aas
repnz
xor
adc
cli
xchg
sbb
std
jo
xchg
js
jo
aam
por
je
and
push
pop
mov
push
std
hlt
inc
cmp
xor
mov
and
out
and
aaa
imul
pop
test
cmp
xor
lods
push
outs
push
dec
jbe
sub
shl
push
aas
cmp
ins
xchg
stos
xchg
in
add
adc
int
mov
xchg
cmp
(bad)
push
mov
call
cs
pop
dec
aas
cmp
jae
mov
xchg
adc
call
jbe
enter
inc
(bad)
jl
sub
retf
mov
int
jne
mov
(bad)
xor
or
push
inc
jbe
aaa
or
mov
cmc
ins
cmp
and
jnp
pop
push
lods
ins
sub
sbb
pusha
cmp
mov
adc
push
dec
push
push
not
mov
dec
pop
sub
(bad)
push
push
dec
sub
sbb
cmp
mov
aas
and
sti
mov
into
(bad)
imul
mov
xchg
add
xor
icebp
fstp
push
call
imul
pop
pushf
sub
mov
xchg
std
xchg
xchg
rcr
or
inc
cmp
cmp
retf
loopne
movs
dec
mov
jo
xor
hlt
push
mov
adc
mov
adc
or
sbb
dec
jp
add
add
cmp
cmp
cmc
not
jecxz
test
xor
test
int
lods
jmp
mov
xor
shl
mov
pop
adc
mov
sub
aad
xchg
fld
add
test
inc
sti
sar
mov
push
xchg
retf
imul
sahf
cmc
sar
pop
aam
and
retf
sbb
rol
and
adc
mov
cli
or
pushf
xchg
jae
add
aas
in
ja
call
les
jae
fisub
or
pop
sbb
cld
sbb
pushf
dec
sar
pop
mov
jmp
sbb
mov
test
jge
call
jbe
cs
jae
mov
pushf
mov
pop
jg
cmp
mov
pop
mov
adc
lods
xchg
scas
or
jbe
stos
push
sub
sti
inc
or
and
push
movs
or
and
fdivr
popa
push
push
mov
inc
(bad)
mov
cmp
fcmovnb
xchg
mov
cmp
push
mov
(bad)
int3
ja
mov
int
sbb
mov
add
dec
sub
push
adc
fidivr
inc
xchg
loope
mov
addr16
push
lods
out
push
cmp
adc
push
sbb
shl
rol
outs
adc
test
mov
inc
adc
test
push
mov
pop
fs
ds
jb
cmps
cmp
jo
sub
xlat
xchg
lods
inc
popf
dec
aas
mov
call
in
jmp
lea
in
adc
icebp
cld
or
add
in
cwd
loopne
sub
adc
xchg
aaa
ret
das
add
pusha
nop
add
hlt
push
mov
and
push
shl
bound
mov
js
cmc
lock
xchg
or
je
or
jo
sub
mov
push
int
push
rol
mov
xor
pop
xor
pop
xor
repz
mov
sub
popa
movs
mov
mov
dec
xchg
lods
add
xchg
jb
pop
sbb
cmp
mov
ficom
gs
aaa
cmp
pop
imul
ja
jmp
std
or
cmp
call
std
or
jnp
adc
mov
and
bound
jne
sub
test
leave
and
sbb
add
cmp
add
fiadd
aad
inc
push
daa
int3
sub
pop
mov
bound
pop
sar
shr
inc
mov
std
dec
pusha
je
jmp
imul
movs
test
inc
ja
lods
pop
push
xor
cmp
push
cmc
movnti
clc
cs
mov
push
dec
add
sbb
rol
pop
add
sbb
adc
add
adc
movs
fstp
sahf
cmp
test
imul
aaa
jae
cmp
push
mov
and
cmps
dec
loopne
push
(bad)
and
xor
sbb
adc
push
dec
sub
retf
pusha
xchg
and
shl
push
adc
and
and
test
out
mov
xchg
xchg
push
pop
pop
shl
fbld
shl
inc
ss
movs
inc
jb
xchg
push
adc
or
pop
js
out
xchg
rcpps
sub
push
test
ins
aam
sub
xor
(bad)
xchg
xchg
fcomp
cs
fadd
or
movs
lods
sti
adc
ror
mov
and
xlat
mov
jnp
xor
nop
retf
retf
mov
es
aas
xor
push
jno
movs
sbb
call
ins
lock
pusha
dec
push
cmps
pop
popa
or
jno
out
(bad)
leave
cwde
push
cmp
movs
xor
cmp
sahf
cmp
xlat
mov
stos
lods
int
movs
jl
jl
rcr
(bad)
call
push
sbb
xchg
xor
sahf
retf
jecxz
xchg
nop
adc
shl
push
pop
jle
or
out
je
das
jge
pop
xchg
imul
cmp
repnz
push
xor
pop
jle
div
cmps
loop
mov
int
outs
test
cmpps
int
test
sti
dec
lahf
add
jecxz
ins
or
shl
ret
call
pop
push
sbb
or
mov
xchg
sub
imul
jnp
cmp
fwait
jne
sar
xchg
mov
sub
inc
pop
mov
add
andps
mov
or
stos
stos
mov
xor
rcl
jo
shl
pop
retf
mov
jnp
lods
adc
jp
jmp
lods
ss
mov
xchg
fst
inc
lahf
pop
push
sbb
push
xchg
jne
jle
(bad)
lahf
stc
movs
ja
inc
sub
sub
ja
out
jnp
inc
retf
ret
test
mov
ret
mov
into
cmp
dec
iret
retf
add
iret
popa
(bad)
and
cmp
gs
pop
in
repz
loopne
mov
scas
pop
dec
xchg
je
add
push
retf
shr
mov
sub
and
ja
inc
adc
mov
cdq
cmp
sti
and
add
movs
je
aam
mov
adc
hlt
xchg
int3
and
jecxz
ret
mov
lahf
popf
push
pop
sbb
dec
jge
mov
xor
lahf
push
and
mov
push
call
mov
test
mov
(bad)
neg
jge
cmps
and
sar
pop
out
add
mov
mov
stos
adc
sbb
not
jl
adc
mov
jnp
jmp
into
xchg
inc
push
push
ja
movs
lea
add
mov
and
scas
xchg
mov
xor
jne
push
shl
jno
cli
jno
jno
push
dec
mov
sbb
mov
scas
(bad)
mov
sar
loopne
adc
retf
cmp
clc
inc
arpl
or
fstp
das
cdq
movs
or
mov
std
addr16
sub
pop
fdivr
test
cmp
push
out
pop
out
jo
into
ins
scas
fwait
xchg
iret
fisub
inc
add
div
(bad)
or
jmp
push
sub
into
pop
sub
or
cdq
jbe
mov
adc
jl
xchg
ss
mov
push
xchg
in
cwde
xchg
dec
push
scas
mov
fneni(8087
adc
fild
dec
out
repz
test
inc
and
fs
sub
(bad)
cmp
adc
and
push
cmc
test
adc
std
jae
sub
pop
cmp
add
cmps
clc
je
add
cs
xchg
popf
mov
cmp
out
inc
mov
inc
aas
adc
xchg
imul
dec
mov
cmp
add
or
mov
scas
push
iret
adc
in
push
movs
mov
(bad)
pop
mov
or
inc
mov
lahf
add
std
pop
dec
nop
adc
pop
mov
not
cmp
and
or
or
dec
mov
xchg
fistp
fidivr
cmp
call
add
out
mov
push
retf
daa
(bad)
js
mov
imul
mov
hlt
inc
pusha
je
idiv
mov
mov
inc
scas
dec
pop
mov
dec
mov
out
aad
repnz
ja
cdq
nop
dec
sbb
jecxz
jbe
jne
test
clc
cmp
xor
inc
loop
xchg
sub
mov
ds
push
mov
imul
into
inc
mov
into
xlat
in
jo
add
xlat
ror
cdq
pop
stc
rcr
hlt
ror
sub
xor
rcl
(bad)
xchg
cmc
mov
push
(bad)
mov
adc
lock
imul
sub
in
mov
popf
outs
inc
inc
or
mov
pop
(bad)
jmp
call
ds
mov
pop
pop
shr
mov
clc
xlat
xor
sub
data16
pushf
add
int3
and
outs
call
ror
xchg
inc
in
adc
std
repnz
ja
pop
add
xor
imul
setns
into
imul
cmp
rol
fnstsw
push
outs
inc
pop
cmp
push
(bad)
adc
xor
jns
adc
ja
mov
lods
xlat
xchg
xor
jbe
ja
cmc
(bad)
ins
mov
movs
mov
mov
push
int3
adc
push
cli
movs
cmp
sbb
lods
add
das
jl
push
fcmovbe
push
test
inc
es
sub
adc
xor
test
into
push
pop
(bad)
stc
rol
(bad)
xlat
dec
outs
loop
add
test
push
fidivr
inc
lods
arpl
cmp
inc
cdq
inc
cmp
js
pop
and
add
lods
xor
xchg
test
adc
fadd
inc
movs
fist
jge
pop
push
sub
pop
shl
adc
or
arpl
sbb
inc
gs
mov
mov
popa
xchg
xor
push
push
outs
inc
mov
rcr
popa
cwde
mov
cmps
dec
inc
retf
cmp
and
sahf
fcmovbe
adc
pop
xchg
and
loopne
es
cld
lods
xlat
mov
pop
mov
out
mov
pop
mov
sahf
shr
mov
js
jmp
sub
mov
sbb
sbb
jno
pop
arpl
pop
stc
hlt
out
arpl
dec
in
add
aaa
sahf
xchg
shr
dec
inc
inc
std
call
lock
stc
jecxz
mov
mov
sbb
dec
jle
sub
sbb
mov
cmc
or
or
sbb
popf
mov
ins
mov
sbb
gs
jae
pop
adc
xchg
cmp
test
ret
dec
jg
int3
(bad)
or
cli
pushf
fwait
and
and
jge
or
xchg
sub
loope
retf
or
adc
fnsave
mov
or
cmp
push
sahf
call
ror
popf
es
mov
adc
fild
(bad)
mov
mov
inc
push
scas
inc
and
data16
xor
data16
mov
(bad)
dec
mov
hlt
or
mov
and
mov
sbb
test
pop
retf
jmp
adc
push
dec
sti
sub
popf
call
loopne
ja
xor
out
dec
scas
(bad)
adc
xchg
push
das
imul
aam
cmp
xor
xchg
out
into
mov
add
cmp
mov
and
inc
(bad)
stos
fwait
ret
push
loop
xchg
in
or
daa
sbb
mov
fadd
add
adc
lea
cli
test
sub
cmp
mov
sub
std
clc
cmp
out
mov
inc
cmps
aam
(bad)
fdiv
int3
cmp
(bad)
add
test
jae
add
hlt
mov
add
(bad)
mov
test
mov
sbb
mov
shl
ret
iret
ds
nop
and
outs
inc
sub
int3
jl
gs
and
ret
in
push
(bad)
(bad)
ins
lods
repnz
fisub
push
add
sbb
ror
call
aad
mov
cmp
add
cmp
mov
test
or
pop
fcom
cwde
push
lods
mov
push
cmp
(bad)
pop
movs
fadd
enter
and
pop
loop
gs
add
or
loopne
jnp
jnp
int
iret
xchg
cmps
dec
mov
je
sbb
cwde
sbb
xchg
mov
add
push
or
pop
mov
dec
fimul
test
push
adc
cmp
repz
(bad)
and
ins
xchg
rol
call
std
inc
cwde
loope
jmp
imul
sbb
mov
xchg
(bad)
sub
push
jg
mov
ret
ret
adc
aaa
add
int3
and
push
cmp
dec
push
mov
test
adc
in
pushf
or
sub
(bad)
fst
xchg
sub
icebp
arpl
cmp
dec
add
sub
dec
rol
les
mov
push
cmps
pop
jp
adc
ret
add
jno
push
in
(bad)
cs
ficomp
jg
sbb
mov
cmp
ror
lods
sbb
test
std
lahf
push
arpl
(bad)
mov
(bad)
pop
and
fisttp
imul
cwde
pop
in
dec
mov
or
sub
push
iret
test
xchg
dec
test
pop
aaa
nop
jle
lods
mov
push
mov
xor
jmp
arpl
sbb
mov
sti
ret
and
test
cmp
(bad)
ret
out
cwde
sbb
dec
mov
mov
movs
rcr
pop
mov
loopne
push
(bad)
loope
loop
bound
cmps
aam
pop
or
(bad)
cmp
fst
std
fcmovbe
inc
sbb
jecxz
xor
jne
push
sti
jo
mov
ds
int
push
inc
mov
jns
call
mov
movs
add
data16
jne
lea
hlt
jae
dec
int
lods
imul
js
loope
or
pop
(bad)
popf
fcomp
cmp
sub
sub
jmp
or
daa
sub
pop
sub
sbb
xchg
mov
ja
dec
xor
xchg
or
into
pushf
mov
neg
leave
and
cmp
ret
lds
mov
sub
dec
pop
pop
push
gs
push
inc
in
xor
call
jecxz
jp
xchg
(bad)
jnp
call
mov
jmp
and
jecxz
imul
loop
je
loop
fisub
iret
mov
shl
cmp
xlat
loopne
nop
xchg
pop
mov
add
sbb
(bad)
mov
cmp
sbb
xor
stc
out
loopne
hlt
pop
cmp
or
sub
push
mov
int3
mov
ret
jno
sbb
mov
inc
and
and
xchg
cmp
ret
push
imul
clc
shl
inc
movs
sti
repz
sahf
jmp
outs
or
push
mov
(bad)
push
shl
inc
mov
jnp
mov
icebp
push
into
and
mov
add
mov
fistp
mov
mov
jns
inc
add
hlt
jle
sbb
xchg
mov
inc
out
cli
(bad)
cli
into
(bad)
pop
sub
mov
fnstenv
inc
loopne
icebp
xchg
sub
fdivr
dec
jbe
cmps
or
scas
leave
movs
mov
jb
push
rdmsr
loopne
dec
sub
inc
pop
nop
mov
lods
push
stos
cs
push
push
das
cmp
ret
mov
adc
fisubr
hlt
shl
imul
int
sub
inc
mov
dec
fld
out
dec
int
jae
mov
push
fs
mov
and
iret
mov
mov
or
push
enter
rcr
fldenv
push
mov
jns
sub
fnsave
adc
dec
mov
pop
imul
mov
mov
cmps
and
(bad)
int
repnz
mov
sbb
xor
imul
dec
push
(bad)
ret
sbb
sub
pcmpgtw
int3
cmp
pop
shl
adc
inc
rcr
shr
loope
jno
dec
sub
mov
test
sar
lods
pushf
push
cmp
mov
pop
sub
imul
inc
mov
mov
add
arpl
adc
mov
push
and
pushf
jg
fs
out
add
and
inc
add
sbb
push
mov
or
gs
pop
lods
mov
xor
ja
test
out
push
retf
lock
xchg
int
add
sub
adc
dec
push
test
mov
mov
sbb
call
jmp
pop
lea
mov
adc
loope
fwait
add
mov
mov
cmp
shl
std
imul
mov
cmp
xor
xchg
pop
sub
pop
mov
mov
mov
cli
lea
push
mov
inc
xchg
popf
les
sub
cmp
mov
leave
retf
(bad)
jl
iret
or
mov
mov
movs
mov
sub
sub
pop
cmp
daa
jno
in
sub
xchg
mov
daa
and
outs
sub
ret
inc
sub
leave
xor
(bad)
imul
cmp
dec
out
mov
dec
in
mov
adc
les
dec
sub
cmc
lods
rcr
dec
dec
mov
sub
cdq
std
mov
cs
mov
hlt
sar
int
cwde
scas
dec
repnz
and
das
aaa
sub
es
jge
call
cmp
pmulhw
pause
push
xchg
dec
lock
out
loope
xlat
lods
daa
or
jmp
cmp
fiadd
jns
cmps
sbb
fisttp
mov
fisub
pushf
data16
ret
cmps
movs
pop
push
retf
push
scas
inc
xor
dec
stos
mov
call
xchg
mov
jge
mov
add
fistp
push
lahf
mov
icebp
pusha
xchg
sahf
daa
mov
jo
adc
jmp
in
or
ja
test
repnz
xor
shl
mov
dec
lahf
lock
xlat
out
or
sub
push
cmp
fst
lock
push
out
mov
in
pushf
inc
mov
mov
fidivr
sub
sub
(bad)
cmp
aam
mov
xchg
pop
imul
in
add
dec
jl
push
addr16
inc
aas
pusha
or
and
dec
inc
jp
inc
push
scas
shl
(bad)
and
fimul
xlat
or
and
mov
push
or
mov
push
into
xchg
mov
jo
xor
fbld
hlt
scas
cmps
pop
ins
stc
jbe
sbb
xchg
push
pop
xchg
cmps
je
shl
or
mov
mov
out
dec
xchg
adc
inc
rol
ins
add
repnz
inc
jmp
xor
or
dec
dec
loop
and
jge
push
mov
mov
mov
pusha
sbb
inc
mov
mov
add
(bad)
jns
or
in
ss
ret
scas
test
out
aas
mov
xsha256
cmps
aam
xchg
ret
dec
jmp
push
int3
mov
lds
push
pop
rcl
jbe
jge
stc
nop
stmxcsr
jmp
iret
cdq
out
lds
xchg
jg
cmp
adc
fmul
xchg
(bad)
popa
mov
xchg
push
cmp
dec
inc
lahf
jne
fwait
clc
outs
jns
cmps
cld
in
add
cdq
loopne
jnp
bound
lods
test
mov
icebp
popa
ret
jo
hlt
sbb
add
pop
cmps
(bad)
outs
int
pop
sti
inc
loopne
and
and
jg
sub
xor
sar
idiv
loop
(bad)
retf
daa
cmp
fsqrt
add
adc
fdivr
ds
push
dec
aam
ret
mov
in
jno
cmps
adc
je
jecxz
mov
push
sbb
enter
aaa
jo
or
dec
cs
lahf
rcr
jae
pop
fild
mov
test
push
and
push
cmc
xchg
in
shl
xchg
pop
inc
in
cmc
sbb
mov
sbb
pop
adc
sub
repz
pop
mov
sbb
cld
shl
(bad)
or
gs
mov
jmp
dec
mov
push
out
retf
lahf
jns
xchg
shl
sar
outs
or
dec
lods
std
or
jnp
jmp
sub
les
adc
(bad)
or
cmc
jp
pop
push
sbb
dec
mov
hlt
mov
mov
out
fcomp
ds
test
(bad)
out
arpl
pushf
jge
inc
leave
loope
mov
movs
adc
adc
stos
mov
cmp
cmc
fs
cmp
leave
mov
inc
not
aam
fld
mov
xor
dec
jae
iret
lods
mov
push
mov
inc
lods
in
sub
adc
stos
jecxz
mov
outs
and
dec
cli
push
idiv
out
dec
sbb
mul
in
lds
daa
jmp
mov
stos
in
xchg
push
dec
movs
and
xchg
xor
ja
push
dec
into
sub
les
and
(bad)
push
mov
push
mov
dec
cmp
scas
or
dec
mov
rol
xor
int
add
out
xchg
pop
pop
mov
clc
jb
adc
jl
add
add
dec
inc
push
push
pop
leave
push
ins
jns
test
ins
add
test
out
adc
out
cld
jecxz
push
mov
mov
retf
nop
push
dec
dec
pop
hlt
sbb
push
mov
mov
stc
ins
sub
jecxz
ret
ss
lock
push
mov
cmps
mov
mov
(bad)
inc
xor
sbb
enter
push
xor
inc
mov
dec
dec
push
xchg
retf
jne
or
sbb
inc
sub
dec
aaa
gs
inc
sar
daa
add
or
(bad)
loope
xor
xchg
xchg
add
mov
pop
outs
cmp
into
push
pop
stos
iret
push
pop
jae
add
cmp
dec
pop
popf
and
add
mov
loopne
sbb
enter
addr16
mov
repnz
lods
in
retf
add
push
lea
and
xor
cs
xchg
lods
adc
fsubp
hlt
lock
jns
adc
pop
mov
push
push
jne
imul
clc
inc
sahf
cs
ins
lods
imul
adc
pop
mov
pop
fmulp
aas
ss
in
adc
js
fsubr
mov
int3
pop
pop
jbe
add
leave
jmp
jb
adc
inc
std
stc
mov
sbb
mov
(bad)
pop
cmc
mov
xor
popa
and
lock
lahf
jg
xchg
push
test
mul
jl
cld
pop
xor
adc
push
cwde
sub
sbb
js
push
jp
rcr
es
pop
shr
fs
mov
(bad)
in
mov
daa
mov
xchg
jo
xchg
cmp
imul
jg
mov
cmp
add
pushf
ds
cmp
cmp
adc
sbb
ret
int3
sbb
or
or
arpl
mov
movs
loopne
jae
mov
xchg
fstp
cwde
mov
ret
sbb
push
movhps
pushf
ins
jl
or
cmp
mov
sub
xor
add
lds
mov
addr16
cmp
jl
mov
mov
mov
clc
in
inc
iret
mov
mov
outs
pop
ds
jnp
rol
push
dec
icebp
mov
or
pop
out
adc
dec
xchg
dec
jecxz
cld
or
ret
inc
leave
cmp
jg
test
mov
das
inc
scas
sub
cmc
ret
mov
cmps
iret
js
loope
mov
pop
aas
mov
dec
inc
dec
cmps
mov
inc
out
mov
mov
or
push
repnz
xor
fwait
loop
dec
repz
sub
jmp
ficom
mov
fsub
je
push
cmp
dec
dec
xor
(bad)
mov
jmp
push
add
dec
adc
(bad)
and
out
scas
cwde
and
dec
(bad)
jmp
add
mov
push
inc
pop
jg
iret
lea
movs
std
fbstp
push
(bad)
mov
adc
push
sbb
in
and
and
sbb
xor
(bad)
test
or
mov
not
push
test
dec
jns
stos
cmp
imul
fsubr
(bad)
jge
xor
sbb
mov
push
pop
and
clc
stos
scas
inc
cmp
aad
ss
adc
cli
ja
mov
int3
push
jle
mov
fsubp
out
fucomip
xchg
fisttp
popa
(bad)
sub
cmp
push
sbb
(bad)
cmp
mov
sar
pusha
cwde
push
xor
fmul
jb
popa
enter
mov
jmp
push
jp
out
loop
dec
mov
jmp
das
inc
pop
ds
sbb
inc
jg
xchg
(bad)
stos
dec
es
xchg
jl
sbb
in
stos
xchg
xchg
es
inc
int
mov
movs
cmc
imul
in
jge
dec
inc
or
pop
movs
push
jmp
inc
out
imul
aas
mov
pop
jo
stos
(bad)
push
pop
pop
popf
push
and
in
in
pusha
jne
aaa
(bad)
sbb
adc
(bad)
stc
jns
lods
xlat
cli
pop
mov
inc
dec
mov
mov
xor
xchg
and
inc
xor
ret
xchg
jae
(bad)
inc
fcmovnb
outs
sub
push
and
push
std
pop
(bad)
(bad)
hlt
jecxz
mov
gs
push
sbb
out
je
sub
mov
xchg
lods
iret
outs
loopne
cmp
cmp
pusha
mov
push
ja
outs
or
stos
test
pop
je
xchg
xchg
mov
cmp
pop
inc
push
xor
sahf
addr16
cmp
(bad)
cmp
and
test
loop
mov
jno
int
(bad)
out
test
lahf
and
popa
rol
gs
push
fsubr
and
jmp
or
aad
ret
add
iret
ret
mov
popf
sahf
rcl
scas
pushf
cmps
pop
or
sub
mov
pop
out
xchg
scas
mov
dec
movs
sub
xchg
mov
test
rcl
mov
xchg
xor
aas
(bad)
or
fiadd
das
call
stos
inc
sub
aas
jb
aam
xor
and
in
or
jb
scas
or
xor
iret
or
mov
xchg
cmp
in
xor
cmps
xchg
adc
mov
cmp
xchg
adc
retf
jg
push
xor
push
push
test
push
add
sti
cwde
inc
pop
adc
inc
or
retf
fldenv
movs
xor
sar
(bad)
jp
cmps
hlt
push
lahf
adc
mov
mov
mov
xor
in
shl
xor
enter
mov
scas
loop
mov
inc
push
fpatan
(bad)
mov
pop
inc
hlt
pushf
data16
inc
pop
je
aam
push
and
sub
std
test
pop
data16
knotw
test
dec
push
sti
fst
sub
cmp
shr
nop
adc
xor
retf
xchg
and
mov
inc
enter
in
mov
cmp
fidivr
sbb
movs
jp
xor
call
clc
sub
push
jmp
jb
dec
push
cmps
int3
inc
xor
cs
or
sbb
pushf
or
mov
test
push
ds
cld
call
(bad)
mov
repz
out
push
popf
sbb
cmp
shr
gs
and
add
scas
or
sbb
sub
(bad)
call
mov
sbb
dec
int3
repnz
icebp
jmp
dec
add
gs
dec
js
pop
daa
adc
inc
movs
shl
xchg
cld
(bad)
sub
out
cmp
dec
cmp
out
pop
lods
mov
or
sahf
shr
add
inc
sbb
les
shl
or
fnstenv
(bad)
xchg
movs
dec
dec
add
inc
pop
jg
inc
les
retf
vpunpckhwd
es
mov
jb
pcmpgtd
mov
sub
or
add
jmp
loopne
ja
dec
inc
xor
cmp
inc
xchg
mov
icebp
mov
jl
inc
xchg
cmp
xchg
sub
fcom
es
or
jae
jns
jg
mov
imul
xor
sbb
push
lahf
sbb
sti
mov
push
push
nop
ss
cmp
stos
loope
data16
(bad)
and
fcomp
bound
sub
push
inc
scas
push
sub
in
mov
movs
repnz
jne
mov
sbb
and
pop
mov
aam
(bad)
ret
jge
rcr
add
jb
pop
sbb
cmp
dec
(bad)
jmp
shr
shl
sub
xor
adc
adc
rol
call
or
or
loopne
cmp
test
and
sbb
repnz
and
test
pop
les
or
jb
dec
das
or
or
cmp
mov
add
mul
cld
fsubr
mov
sbb
xchg
mov
jl
fsubr
popf
(bad)
mov
lds
imul
loopne
pop
cmc
adc
inc
cmp
and
sub
push
lods
push
fnstsw
(bad)
cmp
pop
mov
test
jge
jb
sar
fimul
xchg
in
bound
xor
push
loope
lods
ins
test
fst
adc
test
pop
std
(bad)
mov
aam
les
into
icebp
or
movs
mov
add
jmp
jno
ja
fst
fs
mov
aam
pop
pop
fs
test
nop
jnp
inc
test
push
sub
xchg
shr
test
or
leave
leave
daa
cmp
jnp
imul
lahf
xor
movs
aad
cmp
mov
inc
rcl
xchg
push
inc
ss
adc
fstp
dec
add
ret
(bad)
mov
lock
inc
mov
imul
cmp
mov
enter
dec
pop
push
std
arpl
pop
push
cmp
sti
aam
mov
inc
xchg
repz
outs
add
or
and
cmp
or
test
out
adc
jp
inc
mov
pop
cmp
mov
inc
frstpm(287
or
repz
jae
add
push
outs
and
xor
push
imul
jl
mov
push
pop
jae
xor
xor
mov
fnsave
imul
ret
stos
test
adc
dec
fldcw
enter
cmp
xchg
outs
stc
scas
xchg
adc
push
push
enter
jno
imul
sub
retf
push
adc
jae
test
mov
add
xchg
es
out
test
jge
or
jne
xor
inc
aad
dec
mov
(bad)
push
pop
dec
mov
ja
mov
cmp
lock
or
inc
inc
jecxz
cmp
loop
xchg
in
enter
neg
dec
or
clc
pop
fst
int
pop
call
out
movs
push
clc
pusha
dec
cli
mov
shr
nop
ins
cmps
or
sub
jl
in
popf
scas
pop
ffreep
jbe
cmp
ds
hlt
add
test
ret
mov
loope
xchg
xlat
sub
shl
pop
push
xchg
sub
xor
mov
sbb
dec
xlat
push
add
pop
jle
and
clc
dec
mov
mov
xchg
fbld
out
inc
mov
repnz
test
outs
dec
xlat
mov
out
test
xchg
lods
xchg
in
and
xchg
jnp
add
test
xor
shl
jbe
push
jmp
out
sti
es
fwait
jecxz
xor
test
jg
xchg
mov
sbb
ins
movs
div
sub
lock
ret
int
xchg
mov
dec
push
sbb
fisubr
test
inc
sub
xchg
test
dec
mov
rol
adc
(bad)
pop
int
add
leave
test
mov
mov
pop
pop
push
cdq
scas
pop
sysexit
addr16
and
dec
int
mov
fidiv
sub
mov
imul
mov
in
cmp
mov
xchg
(bad)
mov
adc
stos
push
lock
pushf
outs
sahf
icebp
(bad)
cmp
fild
cmp
lahf
adc
cmp
push
aaa
pusha
cdq
retf
cmps
dec
sbb
sub
das
gs
or
sbb
cmp
loop
cld
inc
gs
enter
mov
mov
pop
aas
mov
push
mov
adc
jmp
enter
cmp
std
push
mov
loope
outs
and
mov
and
mov
jb
aaa
repz
(bad)
shr
bound
pop
fidiv
daa
dec
mov
lods
xchg
ins
dec
retf
in
jge
and
xchg
pop
pop
scas
test
popf
test
and
cmp
xor
movs
test
xor
sbb
rol
cld
mov
mov
or
jnp
mov
jae
fidiv
(bad)
xor
cmp
push
(bad)
das
adc
push
inc
fadd
loop
push
push
ror
pop
add
cdq
pop
push
cmc
lea
pop
push
push
into
rcr
loope
dec
sub
mov
addr16
mov
test
pop
jmp
cmps
imul
dec
es
sbb
jns
sub
and
ficomp
shl
enter
scas
add
jno
clc
nop
pop
inc
rdmsr
pop
jb
pop
scas
out
ret
pusha
inc
xchg
jb
jecxz
ins
add
fmul
push
pop
ret
dec
aad
mov
xchg
add
fcom
mov
aas
(bad)
fs
in
popf
jno
retf
push
test
call
(bad)
jnp
or
cmp
aam
jle
outs
fild
(bad)
adc
and
sbb
jmp
mov
popf
test
push
je
mov
jb
sbb
mov
sbb
adc
mov
rcl
or
movs
jne
out
(bad)
adc
and
ins
xor
stos
ret
or
dec
pusha
shl
or
mov
lods
hlt
mov
pop
repnz
in
pop
and
push
int3
xor
add
mov
ret
out
or
xor
in
xchg
add
movs
sub
inc
push
cmp
shr
popa
push
ror
fimul
in
inc
arpl
fs
sub
fwait
xchg
cmps
pop
popa
sub
das
inc
jnp
dec
inc
mov
imul
sub
(bad)
fwait
je
cmp
mov
mov
mov
call
popf
enter
mov
in
dec
adc
lods
inc
cli
pop
std
pushf
sbb
or
jo
icebp
ins
mul
and
mov
xchg
adc
push
out
push
adc
jecxz
or
pop
jle
hlt
push
popa
fimul
call
ins
cmp
ds
fisttp
xchg
(bad)
cld
mov
es
shr
cmp
call
push
test
jp
lds
pop
jno
adc
mov
jnp
dec
sub
jmp
shl
push
call
in
int
jns
cs
sbb
xchg
add
les
inc
xchg
mov
cli
and
loop
mov
cs
mov
sub
inc
mov
pop
mov
mov
(bad)
mov
repnz
shr
stos
and
jae
rcl
xchg
fstp
pop
and
in
test
jmp
imul
jge
jne
daa
cmp
sbb
push
push
jno
cmp
sbb
sbb
pop
int
gs
adc
outs
inc
inc
mov
clc
pusha
mov
jp
add
das
nop
inc
mov
aad
movs
fdiv
xchg
leave
mov
lahf
jle
mov
sub
xchg
sbb
mov
adc
mov
in
jmp
sub
xchg
dec
pop
inc
jno
arpl
andps
dec
mov
ds
adc
sbb
dec
xchg
push
and
(bad)
loopne
or
cmp
pop
cmp
aas
jp
aas
sbb
shl
loop
cmp
outs
ret
add
pop
pop
sbb
(bad)
xor
pushf
pop
sbb
push
sbb
test
lahf
dec
jg
mov
fild
mov
shl
repnz
xchg
cwde
mov
cwde
nop
cmp
jnp
sbb
ins
dec
jge
lods
imul
mov
(bad)
cdq
test
xor
xor
lods
mov
inc
add
add
scas
fcom
add
cs
mov
mov
std
jge
cmps
fs
lahf
rcr
xlat
and
lds
iret
fidivr
sbb
add
call
sub
clc
inc
push
xchg
cmp
hlt
(bad)
aas
aas
and
sti
mov
mov
pop
aam
xor
ins
cmp
add
mov
addr16
ret
inc
xchg
add
jp
ins
(bad)
cmps
movs
into
movs
xor
dec
or
jno
sahf
mov
mov
aad
movs
xchg
ret
mov
sub
xlat
stos
mov
mov
lahf
mov
mov
in
cmp
inc
iret
inc
push
cwde
push
and
push
cmp
mov
xchg
mov
lock
mov
call
xchg
dec
inc
mov
ret
into
jno
inc
push
and
test
add
(bad)
leave
sti
cmp
loop
arpl
js
in
and
jg
pop
add
test
out
sub
jo
sub
jecxz
sbb
push
jge
cli
ins
arpl
mov
mov
and
fisttp
sbb
test
inc
test
dec
and
jb
lods
cmp
and
in
loopne
retf
push
lds
stos
repnz
ins
ins
les
add
sbb
mov
fwait
jmp
outs
sbb
arpl
sbb
inc
inc
push
or
pushf
sub
sub
xchg
push
imul
add
ret
lea
mov
movs
(bad)
mov
pusha
lds
mov
bound
ds
loop
add
ds
jno
out
mov
ds
les
mov
stos
pop
sbb
iret
lock
jnp
and
or
enter
sbb
jp
les
jge
push
out
mov
jnp
cmps
push
out
pushf
mov
add
xchg
jno
ins
sbb
out
je
bound
inc
fwait
add
mov
out
cmp
lds
mov
popf
ins
into
shr
lock
int3
fcmovnu
stos
pop
shr
jne
mov
mov
push
mov
(bad)
cld
jg
out
sbb
fistp
lods
pmuludq
ja
cmp
xchg
pop
test
imul
(bad)
stos
in
mov
and
int
sbb
rol
aaa
push
fwait
sub
sbb
cmp
mov
fisubr
in
ins
neg
int
adc
(bad)
pop
pop
(bad)
adc
cmp
scas
fstp
sub
push
xchg
(bad)
loop
cmp
cmps
pusha
and
pop
xor
sbb
cmovno
test
iret
add
cmp
mov
shr
fs
or
push
je
xchg
lock
mov
add
xchg
adc
adc
inc
out
movs
into
xchg
pop
test
add
arpl
and
repnz
cmp
xchg
sbb
pusha
repz
add
jb
sub
jbe
pop
cmp
lfs
movs
mov
scas
ins
pop
pop
(bad)
cmp
leave
mov
add
cmc
pop
sub
shl
imul
inc
fs
sbb
nop
daa
out
add
add
add
push
lods
or
mov
mov
and
add
(bad)
mov
mov
push
test
(bad)
pcmpeqd
and
dec
dec
push
loope
dec
adc
mov
mov
push
add
add
pop
stos
hlt
xor
pusha
mov
push
dec
jge
or
ror
jo
mov
add
and
ret
pop
mov
aas
add
ret
(bad)
fwait
(bad)
jno
pushf
xor
enter
sub
mov
sbb
imul
clc
xchg
imul
out
mov
mov
xchg
xchg
test
movs
pop
mov
push
fdiv
adc
dec
fs
shr
movs
pop
mov
mov
mov
sub
daa
adc
adc
cwde
enter
xchg
mov
shl
adc
test
(bad)
(bad)
je
dec
xchg
iret
std
das
out
add
fisttp
sub
jae
xor
outs
retf
xor
mov
cmps
cmp
xor
shr
into
mov
(bad)
out
popf
(bad)
enter
jmp
out
repnz
mov
add
pop
pop
pop
pusha
adc
cmp
mov
int3
in
mov
sub
push
xor
adc
loop
or
sbb
fsub
mov
lock
inc
sub
pusha
out
repnz
mov
call
add
sub
popa
clc
call
add
sbb
retf
sbb
jmp
cmp
dec
sub
pop
inc
and
in
fwait
(bad)
mov
cmp
sbb
test
xchg
jo
aad
stos
xor
mov
repnz
test
punpckldq
pusha
dec
fwait
jg
xchg
sub
or
iret
cmp
ss
jb
movnti
fild
jge
mov
jge
cmc
adc
cmps
adc
fstp
cmp
daa
and
dec
jns
mov
cs
clc
es
xor
and
xchg
jge
push
outs
jno
push
pop
ja
adc
pop
call
add
add
nop
lods
not
(bad)
push
or
mov
mov
iret
push
popa
jge
stc
jbe
les
sub
cmp
inc
loopne
and
jge
dec
pop
xchg
add
or
outs
ret
adc
addr16
xor
dec
pusha
stos
loop
xchg
xor
mov
xor
sub
rcl
inc
imul
inc
in
imul
jns
and
(bad)
xlat
or
(bad)
neg
pop
xor
fwait
mov
push
in
adc
inc
pushf
push
fiadd
scas
popf
ins
xchg
cmp
sahf
mov
stos
push
hlt
out
sti
mov
mov
gs
mov
or
mov
push
dec
ret
shr
fisubr
xor
lods
scas
push
xchg
sbb
push
arpl
sub
ret
not
cld
and
mov
and
cli
leave
fnsave
rol
pop
lahf
pop
fcom
sub
sub
push
pop
rcr
test
cmp
fs
push
test
and
or
ror
(bad)
and
es
jne
dec
add
jle
imul
sub
and
xor
pop
ret
pop
mov
fnsave
jl
xor
mov
or
inc
les
dec
retf
pop
or
sti
fbld
aam
enter
dec
ret
sbb
cld
leave
add
dec
les
stos
sti
push
stc
ror
push
push
ins
push
or
aaa
fld
or
ret
mov
(bad)
icebp
or
scas
dec
mov
and
mov
jge
adc
or
or
loop
jae
xor
xchg
mov
mov
push
sub
int
add
test
mov
sub
iret
vdivpd
(bad)
xor
cdq
(bad)
jmp
mov
sub
mov
xchg
(bad)
std
scas
mov
lods
push
xchg
adc
jo
mov
cmps
pop
mov
jl
xchg
mov
ins
stos
xchg
add
bound
test
repnz
fsub
cmps
sub
dec
sub
xchg
push
arpl
loop
pop
loopne
es
push
js
jb
call
xor
ins
jp
jecxz
cmc
inc
pop
mov
cmp
in
(bad)
cmp
sub
xchg
mov
idiv
sub
enter
les
ins
fbstp
jne
pop
jmp
arpl
aad
outs
aaa
pop
sub
sub
mov
les
lods
fimul
dec
add
sub
pop
dec
push
fwait
or
daa
ss
or
cmps
cmp
or
mov
test
jge
xlat
pop
jb
js
adc
outs
das
push
mov
out
push
pop
xlat
sahf
push
adc
cli
jb
push
ins
and
push
scas
out
add
push
pop
mov
pop
jl
push
data16
fcomp
addr16
xor
xchg
xor
mov
inc
adc
inc
or
xor
and
pop
mov
(bad)
out
loop
cmp
adc
in
sbb
sub
jbe
jbe
xchg
inc
or
sub
jne
mov
or
sub
mov
mov
iret
pop
sub
pusha
mov
push
xchg
test
pop
or
or
pop
fwait
out
test
jae
aam
push
jg
mov
cdq
dec
mov
adc
jl
mov
mov
mov
ja
adc
les
sub
in
sar
loopne
das
test
test
nop
aad
test
mov
les
inc
mov
pop
xor
dec
sbb
dec
popa
in
ins
(bad)
lahf
fmul
cmp
mov
xchg
lds
mov
mov
add
sbb
fidivr
outs
sahf
ja
lods
push
(bad)
dec
mov
jns
les
or
das
test
out
pop
sahf
mov
mov
repnz
mov
test
gs
call
inc
(bad)
lea
gs
in
cmp
fdivr
mov
iret
add
in
rcl
loope
fsubr
sub
mov
jecxz
xchg
xor
cmps
sbb
or
inc
cdq
mov
xchg
in
fsqrt
mov
jg
fimul
mov
(bad)
cli
mov
xor
cmc
sbb
repz
outs
int
jmp
shl
repnz
inc
push
mov
pusha
jle
and
and
lods
pop
jno
or
mov
xchg
test
jge
jnp
cmp
loop
and
add
pop
sub
daa
gs
mov
cli
pop
add
mov
ret
repnz
(bad)
cli
repz
mov
inc
ja
push
sub
or
push
clc
pop
dec
imul
push
inc
ret
jae
ins
ins
pop
jmp
and
call
mov
movs
push
not
rcr
jne
xor
mov
out
aam
leave
add
mov
adc
retf
test
jge
cmps
daa
shl
or
xchg
loopne
or
rol
int
inc
push
and
adc
das
pop
repnz
data16
shl
cmp
lahf
and
aad
push
test
sub
xor
fs
fidiv
or
jmp
mov
xor
dec
dec
xor
cmp
or
std
clc
mov
or
sub
pop
test
call
add
sub
or
jbe
pop
push
addr16
mov
call
ja
int3
jae
in
cvtdq2ps
mov
outs
pop
pop
sbb
idiv
adc
loope
inc
push
sti
jmp
mov
rol
pop
sub
jmp
aaa
xor
xchg
int3
enter
or
arpl
lea
mov
jl
popf
xchg
in
and
add
enter
sar
stc
jl
das
call
add
fdivr
call
and
es
cwde
push
retf
and
into
int3
(bad)
pushf
shufps
mov
add
(bad)
imul
cmc
dec
sub
jl
dec
cdq
aas
lods
adc
xor
fdiv
mov
pusha
pusha
cmps
test
in
ret
push
icebp
or
adc
xchg
xchg
mov
and
repz
mov
xor
and
jecxz
xor
push
icebp
mov
cwde
stc
sub
mov
mov
ret
invlpg
daa
inc
inc
xor
pop
add
lods
(bad)
jle
ja
pop
and
pop
fsub
pop
pop
fs
je
fwait
dec
pop
pop
(bad)
jl
jno
pop
test
scas
out
cmp
in
test
loop
mov
add
loopne
xchg
jbe
add
adc
and
or
or
inc
inc
or
push
mov
div
addr16
mov
rol
mov
lds
in
repz
into
das
push
and
add
add
jbe
scas
or
sbb
dec
fimul
push
jns
fs
aam
pop
enter
addr16
adc
addr16
sbb
inc
mov
aam
cld
dec
sahf
dec
cmc
in
xchg
test
ret
mov
xchg
push
nop
jmp
ins
out
iret
jl
mov
in
pop
js
inc
push
pop
stos
xchg
push
xor
scas
daa
inc
cmp
jg
repnz
jbe
sbb
test
or
sub
adc
lahf
jmp
inc
inc
jne
jnp
data16
retf
std
lds
jmp
mov
pop
cmps
es
jmp
stos
enter
jb
sbb
cmp
sub
sbb
stos
xchg
mov
nop
scas
xor
jmp
push
mov
stos
inc
shr
shr
mov
dec
not
(bad)
sti
mov
aam
shl
jae
ins
jae
out
and
xor
imul
(bad)
mov
mov
cmp
ins
and
jnp
in
ins
sub
dec
add
dec
sbb
call
dec
cwde
xor
test
mov
stc
stos
sbb
mov
jne
sbb
sbb
loop
xor
dec
push
xor
(bad)
sbb
loope
adc
sahf
inc
adc
dec
adc
ficom
pop
xchg
dec
pop
xchg
adc
pushf
shr
loop
push
xchg
icebp
les
stos
mov
push
inc
adc
sub
out
push
and
fnsave
(bad)
mov
clc
sbb
ins
add
call
xor
sbb
cmc
(bad)
in
stos
dec
test
xor
inc
sbb
add
xchg
and
pop
xor
ja
fs
aam
and
outs
inc
or
adc
std
(bad)
shr
pop
xchg
adc
jmp
xor
push
sub
push
ja
pop
inc
mov
(bad)
add
test
mov
adc
aam
push
mov
pusha
mul
pop
scas
dec
adc
inc
sub
mov
sar
jo
mov
jne
add
out
add
aam
sub
std
sbb
pushf
xchg
xchg
nop
jbe
imul
retf
add
pusha
mov
sbb
jmp
sub
out
test
ret
retf
sahf
cmp
and
push
je
push
mov
test
adc
and
sbb
cmps
sbb
stos
sbb
sub
mov
repz
jge
dec
shl
dec
fucomi
fadd
jmp
push
adc
add
xchg
stos
hlt
sbb
neg
pop
das
sbb
add
enter
hlt
sub
lock
sub
or
scas
dec
aas
adc
adc
out
(bad)
sbb
scas
pop
adc
sub
clc
cmps
adc
dec
mov
xchg
cwde
and
lea
pop
dec
mov
and
sbb
cs
clc
pop
mov
out
push
mov
les
ret
sbb
push
cmp
xchg
push
bound
or
hlt
mov
mov
sub
cmp
mov
into
sahf
repnz
add
xchg
sbb
stc
je
and
int3
dec
mov
hlt
jp
sar
sbb
clc
rol
ins
retf
movs
pop
pop
in
push
mov
sub
xor
imul
jge
or
xchg
inc
pop
pop
cmp
std
jl
sti
aam
popf
add
retf
movs
je
outs
int3
sub
out
pop
retf
mov
bound
ja
mov
call
mov
or
sbb
fimul
add
(bad)
push
or
pop
pusha
test
adc
fwait
ds
pusha
addr16
jecxz
cmp
mov
or
mov
fstp
mov
pop
ds
inc
stc
repnz
push
mov
sub
(bad)
and
arpl
inc
sub
les
adc
jo
neg
mov
mov
(bad)
imul
js
inc
and
shr
inc
push
add
and
adc
mov
sbb
sti
ds
rol
out
hlt
mov
(bad)
scas
xchg
mov
out
push
retf
in
push
or
inc
outs
rol
call
jecxz
sub
outs
dec
mov
cld
mov
mov
sub
fidiv
mov
test
mov
mov
xchg
popf
lea
jge
stos
retf
aaa
push
mov
fnsave
adc
xlat
sahf
mov
sub
jnp
xlat
loop
push
test
mov
adc
loopne
int
xlat
sbb
aaa
sbb
nop
out
xchg
or
(bad)
(bad)
sbb
daa
xor
add
or
inc
lock
aam
hlt
cld
mov
cmp
jmp
cmp
lock
adc
adc
and
and
mov
add
push
inc
cdq
or
inc
xor
and
rcl
mov
sbb
scas
adc
cmp
add
cs
dec
(bad)
jne
popa
mov
and
cmps
scas
xchg
lods
lods
dec
out
jecxz
mov
pop
adc
mov
test
pop
test
enter
pop
lock
aas
scas
sub
inc
out
pop
push
cmp
das
fwait
xchg
cli
inc
test
pop
outs
jb
jecxz
movs
inc
retf
fcomi
cs
cmp
sub
push
cdq
or
sar
jle
lea
pop
inc
and
addr16
dec
stos
mov
mov
inc
sar
pop
add
adc
jno
icebp
mov
mov
cmp
mov
dec
mov
fld
push
cdq
mov
mov
pop
rcr
out
cmp
cli
cmp
retf
call
mov
sar
test
or
popf
out
xor
adc
lea
or
cmps
and
movs
mov
mov
mov
lds
(bad)
sbb
enter
xchg
fcom
js
lock
mov
outs
pop
xchg
(bad)
and
cs
repz
sub
cmp
stc
hlt
(bad)
mov
xchg
cmp
pushf
dec
xchg
mov
mov
pop
xchg
fadd
js
inc
xchg
out
mov
pop
jb
mov
fwait
xor
les
js
dec
and
popf
jecxz
fst
jmp
daa
dec
les
gs
aas
push
daa
cmc
xor
ficomp
mov
int
sbb
cmp
shl
fucomp
mov
add
mov
addr16
or
cmp
daa
cmc
cwde
mov
xor
pop
repnz
add
cwde
int3
repz
lods
(bad)
stos
fidiv
aaa
test
jg
aas
add
and
sbb
ins
mov
sar
nop
inc
std
jns
sti
pop
lods
mov
rol
(bad)
lahf
mov
sub
lods
imul
and
mov
test
sub
jmp
test
inc
cdq
or
jbe
mov
and
xlat
sbb
out
pop
adc
repz
mov
mov
(bad)
gs
mov
sbb
sub
add
sub
pop
jecxz
mov
icebp
test
mov
jmp
jns
xor
sub
push
addr16
(bad)
aam
adc
imul
lods
stos
es
aas
stc
mov
mov
bound
dec
leave
in
jne
add
mov
adc
fwait
inc
cs
jl
jmp
dec
(bad)
sbb
mov
pop
xchg
xchg
retf
xlat
sahf
(bad)
xchg
outs
test
mov
aas
imul
loopne
mov
push
pop
cmps
(bad)
imul
scas
movq
stos
jle
leave
hlt
imul
push
jg
repz
xchg
xor
jmp
pop
clc
inc
adc
add
xchg
fild
and
jp
in
pop
shl
loope
pusha
or
add
and
xchg
mov
cmp
xlat
and
imul
sti
lds
xor
sub
push
inc
fist
(bad)
pop
enter
imul
pop
pop
imul
lea
movs
hlt
bound
mov
loop
xchg
lahf
call
cwde
outs
test
mov
es
dec
out
hlt
pop
jecxz
arpl
call
movs
ret
mov
dec
popf
xchg
test
sub
push
and
or
jae
mov
mov
adc
pushf
aas
mov
bound
adc
mov
and
add
movs
pop
aad
out
cmp
int
scas
add
inc
in
jp
pop
pop
cmp
xor
mov
std
fdiv
cmp
add
inc
lea
sub
jne
clc
mov
shl
inc
lock
movs
xchg
xchg
cmp
mov
xor
leave
lods
rcr
mov
push
cli
out
jno
retf
add
hlt
sub
enter
sbb
sbb
cmp
sbb
sbb
pop
shr
dec
and
xchg
les
pop
jle
scas
inc
in
adc
outs
adc
sbb
retf
fcomp
mov
or
jae
sub
xchg
fdivr
inc
jmp
jmp
(bad)
jae
sbb
sub
inc
into
pop
sar
sbb
mov
neg
scas
mov
ficomp
popf
addr16
jge
arpl
sbb
ins
repz
test
xchg
mov
xchg
push
jne
outs
pop
or
and
and
mov
add
popf
loope
mov
mov
test
mov
mov
aad
mov
pushf
out
stos
dec
pop
int
push
cdq
xchg
std
push
push
sub
and
mov
or
dec
or
mov
mov
mov
fmul
inc
jns
jle
jp
leave
imul
pop
xchg
push
dec
movs
xor
pop
add
mov
xchg
ins
xor
shr
rol
jae
cmp
mov
pop
jg
push
cmp
push
xchg
lahf
or
inc
cmp
sbb
call
jmp
dec
(bad)
fild
vminsd
addr16
arpl
stos
add
(bad)
repz
cmp
adc
mov
popa
or
sbb
cmp
jae
pop
mov
retf
in
pop
fisub
xor
push
inc
mov
idiv
cmp
pop
and
lods
cmc
jp
mov
or
bound
add
rol
sub
ds
pusha
out
jnp
cmp
adc
hlt
adc
fidiv
lods
mov
fisttp
jo
sbb
fs
loope
sub
adc
pop
inc
mov
arpl
add
hlt
(bad)
call
ds
aad
(bad)
neg
or
pop
sbb
push
pop
clc
jl
adc
test
cdq
rcl
fs
dec
adc
rcr
mov
(bad)
bound
(bad)
test
push
imul
iret
push
aad
loopne
clc
hlt
in
repz
fisubr
cld
mov
push
mov
fdivr
mov
ja
pop
jns
aaa
fstp
rcl
pop
dec
mov
jmp
push
scas
push
sub
dec
cmp
push
in
sbb
sbb
and
lods
fnstsw
cs
dec
(bad)
repz
sbb
(bad)
push
ja
sti
fisubr
out
loopne
or
enter
les
inc
out
leave
pop
bound
or
aas
sub
cmp
std
sbb
dec
cmps
shl
out
repnz
call
mov
imul
add
mov
or
jg
lods
xlat
dec
dec
inc
xlat
movs
mov
or
rol
jmp
or
or
rol
mov
pop
cmp
pop
jmp
dec
or
adc
inc
lock
and
pop
inc
in
push
lods
xor
imul
mov
pop
add
pop
dec
inc
stc
push
aaa
xchg
jno
sti
mov
or
jl
stc
inc
mov
mov
adc
aaa
jns
xor
or
mov
inc
outs
cmp
scas
cmp
scas
(bad)
cmc
cwde
pusha
aam
xchg
das
cmps
xchg
mov
(bad)
cmps
mov
icebp
outs
mov
mov
add
in
fwait
int
adc
dec
mov
and
mov
push
xchg
dec
sub
jmp
xor
jae
lahf
cs
imul
xor
lods
cmp
imul
sub
xchg
rol
add
mov
or
dec
daa
aas
fs
jno
add
fmul
add
lahf
scas
in
dec
test
ret
xchg
jmp
pop
cmp
push
fild
loop
mov
inc
xor
int3
mov
repnz
push
mov
daa
sbb
inc
sub
sbb
cmp
mov
fisttp
add
inc
shl
xor
mov
cmp
mov
jecxz
std
aad
adc
(bad)
xchg
jle
stos
aas
cmp
imul
in
jecxz
imul
dec
fwait
ins
out
adc
push
cmps
push
lods
sbb
(bad)
out
xchg
clc
popf
adc
xor
mov
sbb
icebp
jp
fisubr
fld
inc
mov
(bad)
pop
sbb
xor
mov
icebp
loope
or
add
xchg
cwde
mov
mov
clc
mov
loope
xor
add
(bad)
mov
push
lods
hlt
test
sub
popf
in
dec
dec
in
lds
pop
or
mov
daa
sub
int
jno
into
ja
sub
inc
push
pop
cmp
nop
lea
cld
scas
pop
mov
inc
xchg
ja
jo
push
add
xchg
in
outs
jnp
cdq
jbe
scas
out
in
or
fisttp
loope
and
je
int3
fs
mov
jmp
imul
je
lods
and
cs
jo
and
not
imul
pop
mov
shl
jns
adc
pop
cwde
pop
jne
xor
and
xchg
sub
sub
repz
shr
lea
jae
mov
push
jno
jno
pop
inc
fadd
js
lock
sub
add
mov
adc
nop
gs
pushf
pusha
pop
adc
lock
aam
ss
ss
jmp
mov
stos
into
cmp
movs
jmp
and
sbb
call
clc
fucomip
dec
sar
loopne
je
inc
ret
cmps
cmp
iret
mov
inc
retf
pushf
mov
cs
xor
js
movs
xchg
xor
psadbw
call
adc
(bad)
mov
movs
out
inc
es
test
mov
movs
bound
jmp
lods
push
adc
lahf
push
es
sbb
dec
pop
popa
push
fsubr
fwait
mov
mov
add
movs
int
sub
(bad)
push
rol
mov
cmp
push
lea
adc
sbb
jno
or
lahf
sub
scas
cmp
sbb
push
jbe
jmp
jp
jle
cmovo
(bad)
cwde
fstp
inc
leave
cmp
push
cmp
or
pop
test
lahf
or
js
or
add
fdiv
std
outs
mov
call
psraw
and
pop
ficomp
dec
pop
add
imul
std
in
cmps
scas
dec
inc
adc
add
inc
mov
push
mov
in
inc
sub
adc
imul
add
cwde
cmp
push
fdivrp
mov
mov
and
iret
xchg
push
sbb
xchg
adc
sub
dec
cld
inc
pushf
jo
cmp
push
mov
(bad)
call
clc
lods
ror
cmp
sbb
add
cmc
or
lds
enter
or
jge
jnp
lahf
dec
add
jmp
loope
or
jmp
push
jb
scas
xor
inc
push
ins
add
pop
mov
ret
adc
pop
jmp
in
js
repz
jp
mov
(bad)
fdiv
adc
setb
jmp
jns
and
jge
inc
add
sub
mov
pusha
push
add
movs
out
add
pop
cmc
mov
push
in
stos
stos
call
mov
push
inc
hlt
test
sub
sub
std
add
gs
pop
jl
jae
adc
call
je
sub
es
sub
cmp
in
pop
xchg
popf
loope
icebp
mov
inc
leave
pop
push
ins
loopne
test
and
jp
lods
movs
imul
test
iret
mov
loop
mov
(bad)
out
or
mov
into
int3
pop
inc
push
neg
push
jns
pop
lock
push
clc
ror
mov
aam
psrlw
cmp
push
cmp
sub
pop
push
sahf
push
in
adc
imul
in
cmc
jnp
int
xchg
rcr
leave
in
shl
mov
ds
sub
js
(bad)
cmp
mov
jg
inc
int
or
mov
shl
mov
sub
mov
jmp
xor
ret
jae
mov
push
clc
fild
xor
mov
stos
inc
aad
aaa
sar
pop
push
and
int3
sar
or
dec
jbe
std
adc
loope
adc
imul
lds
stos
mov
lds
dec
out
and
or
or
pop
mov
cld
out
add
stos
sub
mov
je
push
adc
cmps
popf
xchg
enter
xchg
push
aaa
push
ret
dec
push
sbb
retf
mov
addr16
pop
mov
xchg
ins
jl
dec
jl
scas
and
pop
(bad)
out
xchg
mov
les
push
div
fwait
mov
hlt
jge
dec
pop
test
test
outs
test
push
ficomp
cmc
rol
ret
jl
in
(bad)
outs
xor
mov
cli
ds
jbe
in
jle
stos
iret
popa
and
xor
mov
sbb
sbb
mov
fbld
cmp
mov
and
cmps
in
icebp
std
outs
jns
addr16
pop
jg
xchg
pop
cmc
pop
loop
(bad)
and
jbe
adc
loopne
addr16
ror
leave
repnz
loopne
jo
mov
int3
pop
xchg
xchg
mov
xchg
jne
daa
jae
xchg
xchg
xchg
dec
jnp
aaa
(bad)
test
mov
add
sub
xchg
arpl
mov
mov
fimul
pushf
mov
int3
adc
xlat
xchg
repnz
and
push
loopne
xchg
imul
cli
int3
and
mov
(bad)
cwde
cld
xchg
pop
out
xchg
cmp
fnstsw
sbb
mov
cmc
sbb
outs
adc
mov
adc
pop
in
out
pop
call
jbe
(bad)
and
pop
mov
repnz
jnp
mov
sti
sub
(bad)
fdivr
jmp
stc
ficomp
(bad)
popa
dec
xlat
lods
test
js
fsub
inc
cli
out
cs
push
out
add
arpl
ins
adc
loop
(bad)
mov
cli
sub
mov
xor
dec
push
jne
cmp
xor
loop
push
xlat
xchg
or
lea
push
sbb
cli
cmp
(bad)
mov
in
inc
pop
add
push
inc
dec
pop
stc
jno
xor
push
mov
test
sbb
imul
adc
push
cld
lods
dec
rcl
fcmovnu
jns
fist
popf
stos
loopne
or
pushf
hlt
loopne
inc
fst
cmps
or
iret
xor
mov
sbb
retf
pop
push
rcl
in
stos
test
icebp
pop
fs
mov
adc
rcl
int
ret
cmp
and
mov
xchg
add
or
out
push
jns
cmp
lods
pop
es
(bad)
and
mov
or
cmp
xchg
mov
(bad)
and
or
call
hlt
push
out
ins
xor
or
popf
pushf
mov
out
shl
popf
aam
scas
add
ret
imul
ror
(bad)
sti
jns
mov
aas
ins
mov
mov
mov
push
sti
push
sub
clc
mov
pop
push
xchg
pop
rol
ror
ds
sub
loopne
daa
fwait
outs
(bad)
shl
pop
ins
add
push
jno
std
adc
push
inc
in
mov
ins
je
lock
stc
aas
cmp
fwait
movs
xchg
cmc
inc
loop
das
cmp
outs
xchg
ror
test
jb
dec
push
(bad)
xor
lgs
xchg
jns
mov
sub
and
fcom
nop
retf
add
out
inc
push
adc
or
ja
xor
xor
das
pop
lock
sub
xor
mov
or
cmp
in
add
fimul
pusha
retf
test
sbb
or
add
outs
dec
jmp
sub
jne
jb
or
cs
jo
imul
loopne
fsub
jecxz
sbb
ss
mov
xor
rcr
loop
cmp
(bad)
mov
dec
es
arpl
in
sub
or
mov
mov
add
mov
cmp
aas
outs
inc
xchg
in
call
jo
mov
test
cmp
jmp
mov
fsub
mov
ja
sbb
out
sub
mov
stos
sub
mov
push
push
push
in
and
stc
mov
outs
ror
push
sub
mov
in
mov
pushf
push
inc
aas
xor
xchg
xor
inc
xor
dec
xor
test
or
adc
cwde
arpl
and
fisttp
jno
sub
pop
sar
shl
xor
loopne
sub
out
cmp
sbb
sbb
inc
jmp
mov
lock
stos
and
cmp
sub
xor
in
cdq
pop
sbb
fcomp
adc
jecxz
mov
xchg
in
sahf
outs
ret
cmp
xor
(bad)
scas
fstp
sub
rol
mov
mov
or
dec
jb
inc
or
sbb
cdq
jae
or
inc
fs
jl
scas
mov
pop
push
ins
int3
hlt
int3
cmp
cmps
leave
(bad)
ins
sbb
or
mov
repz
and
clc
cdq
pop
mov
sub
dec
jle
in
cmps
out
mov
ins
repnz
loopne
div
(bad)
or
sub
(bad)
ds
seto
pusha
out
mov
dec
xor
sub
mov
jae
jmp
mov
cmp
lahf
dec
leave
cmp
sbb
and
retf
fucom
mov
pushf
sahf
ins
xor
adc
mov
sbb
mov
adc
sbb
sbb
repz
jns
inc
jle
syscall
outs
mov
and
push
test
and
fisttp
in
inc
inc
inc
das
adc
add
lods
sub
iret
gs
inc
add
sbb
pop
icebp
mul
dec
or
mov
aam
or
pop
imul
push
add
push
sub
outs
push
test
mov
mov
push
jb
mov
das
clc
rcl
adc
push
fdiv
or
xchg
sbb
mov
inc
jle
rol
inc
in
jb
dec
inc
push
lea
sub
or
mov
cmp
jmp
cmp
pop
or
jmp
js
test
sub
fisub
stos
add
sub
cmps
hlt
jo
leave
dec
jbe
push
jb
cmp
dec
and
into
jno
test
loopne
pusha
(bad)
xlat
xlat
mov
mov
imul
jbe
adc
pop
std
idiv
imul
cmp
sub
mov
or
cs
outs
aaa
repnz
inc
or
sub
call
loope
cmps
pop
iret
cmp
enter
std
xor
adc
scas
test
inc
ds
mov
sbb
cmp
dec
loope
mov
mov
dec
sub
test
mov
(bad)
inc
mov
dec
ds
and
jne
stc
retf
mov
aas
ins
cmp
movs
sbb
dec
not
xchg
int
sub
push
mov
icebp
(bad)
ins
pop
pop
out
pop
test
adc
fsub
fst
cli
mov
hlt
jg
xor
stc
ret
mov
aas
(bad)
rcr
xchg
dec
inc
pop
ficom
sub
adc
jecxz
mov
in
outs
pusha
fmul
lock
mov
test
or
inc
push
mov
scas
fcomp
cmp
or
xor
sti
jae
aaa
iret
(bad)
ds
popa
arpl
scas
test
mov
adc
int
cwde
lahf
cmp
pop
xlat
inc
lea
fsubr
das
(bad)
jmp
add
fnstenv
xchg
loop
fidiv
mov
ror
sbb
dec
mov
das
aad
mov
xchg
mov
xor
inc
pushf
mov
mov
and
pop
lea
or
outs
repnz
out
loop
push
or
in
out
in
lods
pushf
push
xlat
jae
or
outs
mov
sar
cmc
scas
mov
and
or
jecxz
add
bound
dec
aad
fild
pop
add
cmp
add
retf
add
jmp
out
inc
mov
jp
pop
out
sub
into
jno
xor
pop
push
js
popf
ret
div
test
cs
dec
jg
lds
sbb
fdiv
fld
mov
loop
std
jmp
mov
ret
cmp
mov
aaa
xor
push
cmp
push
pop
and
jmp
cmp
cli
mov
jmp
rcr
retf
xchg
or
mov
adc
push
and
leave
mov
xchg
test
imul
cmps
dec
dec
mov
sub
pop
and
movs
dec
(bad)
hlt
jl
into
xchg
mov
push
push
dec
aas
pop
nop
push
test
xchg
jnp
iret
fs
(bad)
ins
scas
xor
adc
shl
repnz
mov
sbb
ret
xor
jbe
mov
push
(bad)
xor
inc
xchg
adc
pusha
xchg
nop
movs
or
xor
aam
aad
xchg
sahf
retf
xor
fwait
loop
call
inc
stc
dec
pop
dec
inc
aaa
adc
dec
(bad)
lock
aas
fsub
xchg
jae
jne
sbb
call
retf
mov
dec
push
jmp
mov
and
test
in
stos
movs
xor
jno
xor
shr
cmp
adc
inc
pop
pop
imul
push
ds
ins
pop
lods
ins
mov
fisttp
ds
push
jge
mov
mov
adc
mov
mov
loopne
shl
add
jg
and
xchg
mov
jmp
(bad)
xor
jbe
dec
mov
sub
sub
or
test
pop
xchg
movs
mov
sub
push
mov
in
cmp
push
hlt
jg
cmc
pop
lods
jbe
test
enter
popa
cmp
jae
cmp
or
ins
dec
push
mov
(bad)
fst
fist
aam
iret
inc
test
loope
adc
fstp
ja
les
add
or
shl
lods
add
jmp
xor
pop
cmp
loopne
xchg
test
neg
je
ret
movs
scas
imul
jp
inc
inc
pop
and
lea
mov
loopne
pop
inc
(bad)
push
daa
stos
ss
imul
xchg
aaa
inc
in
imul
lods
pop
adc
loopne
js
test
out
dec
xchg
test
cmp
xor
in
scas
mov
popa
lods
call
lea
xchg
iret
and
sub
(bad)
call
in
mov
lea
fwait
and
mov
mov
pop
in
rol
(bad)
bound
pop
xchg
(bad)
out
repnz
pop
aad
sbb
mov
or
inc
jnp
jg
dec
lahf
sbb
add
pop
or
or
out
or
bound
sub
aam
fistp
mov
push
aam
mov
jno
xchg
or
addr16
fild
pop
faddp
fcmovnu
cdq
test
mov
mov
mov
nop
jmp
lahf
fcmove
push
xor
ffree
sbb
neg
xor
add
outs
sub
xchg
cmp
dec
xchg
call
mov
or
retf
pop
shl
cmp
in
and
pop
inc
out
test
mov
mov
mov
je
and
cmps
test
in
je
mov
and
(bad)
jp
xchg
add
call
jne
dec
cmps
pop
inc
jle
jle
and
mov
ret
inc
addr16
dec
(bad)
dec
inc
cmp
jmp
fs
push
fs
add
mov
add
mov
sbb
jecxz
dec
(bad)
call
sbb
fwait
sahf
ja
icebp
or
outs
out
and
or
fcomp
(bad)
mov
scas
mov
in
jae
mov
leave
cmp
fs
xchg
pop
aam
lods
loopne
ds
or
sbb
adc
xchg
mov
test
sar
pusha
cmp
fst
xchg
ins
ret
popa
pop
(bad)
movs
jge
mov
pop
or
cmp
mov
stc
inc
push
repnz
je
adc
dec
xchg
imul
loope
jp
fcom
ins
jae
ds
push
scas
popa
add
dec
pop
mov
lahf
add
sbb
clc
jno
add
popf
(bad)
enter
jg
mov
cmp
jne
inc
jnp
xchg
call
jecxz
or
lds
xor
call
fnsave
pop
int3
ja
xlat
shr
sbb
add
scas
add
xchg
js
cli
sbb
(bad)
movs
cdq
jbe
aas
icebp
sar
aad
cmp
and
cwde
loope
mov
mov
mov
lahf
imul
jp
shl
cmps
xchg
das
mov
xchg
lea
jecxz
jo
das
pop
mov
jg
in
sub
sbb
movs
es
out
sbb
adc
mov
inc
sar
stos
jno
inc
sub
test
push
icebp
adc
test
add
push
stos
bound
xchg
rcr
test
and
popf
jae
mov
les
into
pop
ins
mov
push
add
pushf
es
cmc
dec
push
jns
ret
ds
(bad)
pop
scas
push
pop
sbb
cmp
sbb
xor
xchg
mov
repz
mov
call
jge
add
add
stc
mov
and
dec
pop
push
in
or
adc
imul
ja
arpl
xor
push
cli
push
jne
cmc
push
push
push
add
aas
cmp
call
fbstp
sbb
inc
mov
fdivr
aas
ins
pushw
loopne
imul
xchg
cmp
push
aaa
push
sbb
and
or
push
inc
les
mov
adc
sbb
cmp
jp
lds
aam
xchg
add
fistp
cmp
mov
push
jnp
add
cdq
sub
pusha
jne
adc
test
das
imul
fcomp
es
out
fcomp
adc
clc
fwait
daa
mov
test
emms
(bad)
cmps
nop
xor
repnz
mov
cmp
in
mov
nop
mov
popa
outs
pop
and
xchg
mov
sub
out
pop
test
pop
sbb
shl
or
inc
mov
fiadd
dec
(bad)
pop
add
xchg
mov
adc
sbb
sbb
mov
out
jg
push
scas
sti
pop
mov
xlat
fistp
push
js
in
enter
dec
mov
stos
in
inc
mov
mov
jl
inc
ins
push
nop
pop
mov
std
ds
mov
pop
mov
xor
xor
loope
(bad)
jns
jmp
xchg
mov
aaa
pause
mov
add
mov
stc
ret
jmp
in
mov
add
mov
jecxz
or
or
cli
inc
in
inc
(bad)
adc
xchg
sbb
jmp
ror
mov
push
shl
mov
pop
test
(bad)
jmp
out
or
lods
popa
fdiv
scas
adc
pop
stc
xor
scas
cmp
adc
inc
(bad)
pop
nop
xchg
jmp
(bad)
sahf
inc
in
cmp
jecxz
fwait
xchg
pusha
xchg
add
jbe
ins
les
iret
ret
sbb
in
(bad)
sub
pop
int3
es
and
sbb
dec
inc
out
push
imul
pop
dec
iret
lods
push
popa
push
xchg
inc
adc
jne
jge
rcr
aaa
fnstsw
dec
mov
sbb
fnstcw
cmp
enter
rcl
or
lods
movs
ja
lods
ins
fucomip
cmps
pop
jecxz
cmps
cmp
retf
es
inc
and
xor
popf
mov
xchg
push
xor
sub
xor
stos
xor
push
loopne
enter
imul
pop
xor
sub
inc
test
stos
dec
lods
daa
xchg
test
sti
lds
mov
es
cmp
fnstenv
cmc
mov
cmp
out
sub
xchg
cli
pop
repz
int3
add
mov
jno
xor
mov
pop
(bad)
lods
fs
mov
push
lahf
call
xlat
pop
iret
ficom
mov
jg
pop
push
mov
and
cmp
in
scas
dec
aam
xor
xchg
in
cld
sub
sbb
or
xchg
xchg
and
sbb
adc
dec
push
or
pop
fsub
in
mov
int
sub
(bad)
jp
push
and
icebp
mov
jnp
lds
jb
push
test
add
loopne
pop
sub
xchg
xchg
daa
lods
inc
mov
xor
dec
pop
pushf
xchg
jmp
push
mov
test
aad
sub
xor
inc
loope
lods
or
scas
and
daa
imul
(bad)
lods
(bad)
rcr
ret
scas
or
adc
call
adc
movs
xor
es
iret
cmp
jbe
inc
adc
movzx
push
fwait
inc
jl
and
mov
ins
iret
add
inc
cmp
add
rcr
mov
inc
test
popf
sbb
push
lods
dec
inc
lds
mov
pop
outs
and
mov
in
orps
pop
lea
mov
retf
and
in
cmp
loope
loop
stc
imul
in
popf
jmp
dec
out
adc
lea
pop
inc
pop
cmp
pop
loopne
fbstp
ds
fdiv
std
mov
mov
je
mov
jno
xchg
pop
and
and
rcr
or
jmp
(bad)
add
stos
cli
fwait
out
xchg
adc
jmp
cld
sub
add
jbe
fmul
jbe
xchg
push
xor
pusha
pop
mov
xor
pop
jo
aas
and
jecxz
sbb
icebp
cs
add
aad
sub
mov
iret
mov
push
mov
shr
pop
scas
test
out
add
retf
outs
fwait
clc
push
mov
cli
pop
dec
push
ret
xor
push
cs
push
jae
pop
(bad)
sbb
in
scas
out
xchg
adc
cmp
stos
jo
or
push
pop
push
idiv
jne
mov
in
xchg
or
fsubr
jp
pusha
vmovaps
push
out
xor
adc
lods
cld
jg
jle
xor
or
out
and
jb
addr16
mov
add
push
call
xlat
mov
jns
xchg
dec
mov
xchg
or
jbe
jbe
xchg
mov
je
push
inc
jmp
ret
add
mov
into
mov
dec
rcr
mov
ja
test
inc
retf
cs
je
or
pop
and
adc
or
pop
(bad)
int
div
lea
out
ja
mov
(bad)
lea
mov
(bad)
pop
pop
mov
aaa
cld
xchg
mov
xor
sbb
std
bound
pop
out
scas
mov
ja
shl
iret
imul
shl
xchg
cmp
push
or
lods
dec
sar
fdivr
dec
adc
jo
push
aam
dec
outs
lahf
ret
repnz
fsubr
mov
dec
outs
jmp
jne
cmp
pop
fadd
imul
dec
movs
xor
movs
push
sbb
int3
mov
and
mov
sbb
mov
std
push
stos
dec
pop
lahf
push
loopne
and
mov
neg
xchg
cmc
lds
sahf
(bad)
jnp
xor
cs
jl
mov
pop
in
(bad)
jge
icebp
outs
push
loope
mov
test
idiv
pop
(bad)
(bad)
adc
cwde
popa
mov
adc
aaa
rcl
push
outs
add
sbb
sub
retf
sub
and
retf
ja
fwait
add
clc
sub
(bad)
stc
in
dec
xchg
sar
outs
jg
inc
mov
(bad)
jp
push
clc
cs
clc
push
in
or
and
in
int
stc
fcmove
cs
sub
cdq
pop
aam
adc
mov
loope
jne
push
out
stc
(bad)
sbb
imul
icebp
outs
stos
cmps
jge
xor
inc
test
in
into
cmp
fs
mov
jbe
add
rcl
sti
sub
aaa
or
cmps
sub
les
pop
cdq
lods
sbb
pusha
in
sbb
out
jae
in
or
jmp
sub
rcl
dec
pop
mov
xchg
cmc
pop
xor
mov
movs
cmps
bound
cmps
sbb
addr16
cmp
mov
test
mov
sbb
ja
cmp
sub
add
mov
loop
sub
cmc
fld
cmp
pop
inc
jb
movs
icebp
es
sub
and
(bad)
out
gs
mov
pop
pop
push
loopne
enter
adc
inc
test
xchg
loop
popf
or
in
adc
and
int
dec
xor
ins
mov
push
and
retf
in
ss
jbe
jnp
(bad)
dec
out
lods
dec
sbb
or
xchg
das
jbe
jecxz
pop
jle
or
sub
mov
pop
mov
jnp
or
je
cvttps2pi
repz
or
data16
ins
cmps
mov
mov
in
(bad)
xor
push
mov
jecxz
iret
imul
mov
das
popf
mov
xor
and
push
leave
sub
cld
(bad)
rcl
and
iret
addr16
out
push
shl
fdivr
sub
push
jg
(bad)
inc
xor
cwde
or
movs
mov
pop
neg
mov
cmp
lods
cmps
les
mov
jg
add
xor
call
scas
je
xor
xor
dec
sbb
jl
test
loope
or
aam
fisubr
push
enter
out
push
mov
(bad)
imul
fldenv
add
pop
jnp
aas
mov
adc
js
nop
mov
loopne
pop
pop
xchg
aas
into
and
push
call
test
mov
lds
push
inc
xchg
sahf
dec
add
push
loope
icebp
dec
and
fwait
shr
sub
push
or
pushf
arpl
outs
dec
test
(bad)
int
xor
pop
add
adc
sub
fistp
pop
mov
and
lds
movs
adc
push
xchg
pop
push
fcom
scas
dec
mov
xchg
mov
jmp
call
mov
xchg
mov
push
sub
lahf
jg
adc
loopne
cmp
and
in
pop
jb
callw
pusha
push
ret
pop
movs
out
xchg
mov
dec
pop
out
xor
data16
xchg
arpl
rol
rcl
sbb
add
xchg
push
push
mov
(bad)
cld
imul
arpl
div
push
in
add
jle
push
inc
pop
pop
mov
push
gs
rcl
xlat
or
rcr
lea
neg
push
aas
cmps
inc
cwde
bound
mov
addr16
fisub
clc
xor
int3
xchg
loop
(bad)
in
into
cmps
out
and
(bad)
aad
retf
push
push
jne
scas
jns
xor
push
push
jbe
sub
lahf
mov
and
mov
mov
cmp
iret
push
mov
inc
pop
sbb
or
jp
iret
inc
in
inc
xor
add
pop
sbb
dec
mov
cmp
xchg
imul
sbb
mov
jae
and
loopne
dec
xchg
dec
loopne
sbb
adc
mov
push
push
mov
pop
sahf
xor
sbb
mov
sub
clc
test
test
imul
int3
jne
bound
mov
test
ja
pusha
adc
icebp
mov
sub
inc
out
ficom
lahf
fwait
pop
dec
cmps
inc
pushf
jge
mov
xor
lea
mov
js
jge
cdq
(bad)
dec
sub
test
push
and
ds
adc
in
jmp
push
bound
hlt
gs
xchg
adc
mov
adc
sahf
mov
xchg
(bad)
jl
adc
and
jg
clc
and
sbb
sub
adc
mov
mov
adc
push
jp
jb
enter
push
iret
inc
ret
mov
dec
clc
movs
clc
jae
xchg
ret
adc
push
push
xor
xchg
add
hlt
pop
out
(bad)
jl
jo
mov
adc
test
xor
mov
push
and
stc
mov
ret
adc
rcr
addr16
popf
mov
mov
push
std
jle
mov
and
stos
sub
je
call
in
fimul
pop
cld
loop
scas
clc
adc
(bad)
pushf
xchg
xor
mov
test
mov
sub
scas
ja
or
dec
icebp
and
xor
fistp
jl
mov
std
jno
adc
fwait
push
sbb
cld
add
dec
push
leave
sub
retf
xlat
mov
push
jne
fdiv
push
out
push
fidivr
pop
test
inc
sub
or
adc
sub
mov
cmc
js
cmp
fdiv
xor
push
and
adc
xchg
add
daa
imul
sub
out
outs
shl
out
rcr
fs
mov
mov
repnz
(bad)
add
ja
repnz
xchg
jmp
mov
int
int
call
rol
retf
adc
push
inc
or
cmps
mov
imul
adc
adc
lods
ds
mov
xchg
repnz
cmc
sbb
jmp
mov
mov
adc
out
es
js
shl
inc
xchg
inc
in
pop
push
push
ret
fadd
movs
out
add
lods
js
scas
xor
je
push
or
(bad)
pop
jbe
xchg
mov
add
add
sbb
pop
mov
lods
cwde
and
adc
sti
repz
cmps
cs
in
movs
sub
dec
push
mov
inc
pop
sbb
es
pop
and
adc
fnstenv
mov
fisubr
add
fiadd
movs
mov
movs
cmp
out
add
(bad)
aam
and
ret
mov
add
add
outs
lods
mov
mov
inc
(bad)
(bad)
push
jmp
call
sub
(bad)
and
jns
call
mov
adc
and
dec
mov
mov
pop
or
pop
out
imul
cmc
je
xor
adc
mov
xor
xor
add
loop
shl
call
inc
ror
fs
and
dec
push
jp
add
xchg
jle
gs
dec
mov
mov
retf
mov
sti
frstor
loop
push
outs
ins
pop
push
das
xchg
js
jns
int3
cmps
(bad)
dec
dec
or
and
mov
pop
xor
mov
test
in
sub
dec
pop
repnz
jmp
psubd
pop
fiadd
jne
int
pop
mov
gs
loope
xchg
mov
movs
arpl
inc
ja
dec
xlat
jp
fimul
adc
imul
jns
add
(bad)
mov
sar
or
pop
xchg
sbb
or
lahf
mov
or
inc
adc
xor
jo
dec
or
adc
clc
sbb
add
out
test
inc
jle
gs
(bad)
dec
aam
aas
xor
push
mov
xchg
sbb
xchg
or
cmc
inc
enter
dec
sub
cs
mov
jmp
mov
pop
jnp
or
mov
pop
cdq
fwait
inc
push
adc
push
push
adc
pop
xlat
mov
push
das
cmp
retf
pop
sub
xor
dec
push
in
push
pop
pop
cmp
(bad)
popa
rol
pop
aas
lods
stos
mov
fs
jne
cmp
push
xchg
cmps
jg
je
loope
shl
sbb
call
mov
or
(bad)
push
shl
lock
mov
pop
or
pushf
pushf
cli
or
mov
cmp
in
mov
mov
mov
mov
js
repnz
fwait
dec
push
into
retf
push
into
out
aaa
or
push
popf
fdivp
icebp
inc
int
mov
push
sub
push
jmp
jecxz
bound
ja
movs
or
test
enter
shr
outs
aas
pop
loopne
xlat
xor
push
les
jmp
lahf
or
stos
xchg
inc
rcl
sar
addr16
push
sbb
and
pop
data16
xor
sub
stos
repz
mov
xchg
cld
adc
xor
xchg
pop
push
and
test
mov
dec
movs
imul
inc
sahf
push
push
std
pop
(bad)
dec
push
(bad)
scas
mov
ror
not
sub
loope
icebp
mov
je
ss
das
cmps
adc
loope
cmp
cmp
pusha
jo
sti
enter
add
and
push
xchg
(bad)
aas
jmp
dec
std
loope
inc
nop
dec
pusha
inc
gs
dec
jae
mov
scas
mov
daa
dec
retf
out
movs
fdivp
movs
in
adc
xchg
add
mov
ss
pop
(bad)
lahf
sub
or
add
push
retf
popf
sbb
cs
sbb
in
leave
loopne
es
out
in
add
mov
leave
shr
xchg
mov
inc
stos
ins
push
imul
jae
jg
aam
or
retf
xor
add
dec
jns
ror
scas
daa
pop
js
mov
iret
jbe
mov
mov
inc
xor
and
jne
pusha
repz
test
ret
ret
lea
pop
retf
inc
stos
fcmove
mov
loopne
jae
ret
dec
adc
mov
push
xchg
mov
mov
cdq
jle
in
out
loop
pusha
mov
hlt
aam
es
push
pop
fmul
mov
out
cli
push
test
loopne
sub
dec
pop
popf
addr16
jmp
mov
sahf
push
or
mov
dec
xor
xchg
fisttp
cmp
and
jmp
gs
fisubr
cmp
cmp
mov
add
jge
fs
inc
es
xor
mov
inc
sahf
clc
jp
call
sbb
pop
sbb
shl
dec
in
scas
jecxz
inc
rol
sub
push
sti
xchg
push
scas
mov
jb
cwde
push
mov
inc
je
cdq
gs
jmp
cwde
push
xor
int3
xchg
cmovno
cmp
fs
mov
call
mov
popa
inc
test
mov
adc
lods
push
adc
pop
pop
mov
jbe
xlat
call
jae
stos
inc
mov
call
icebp
dec
sbb
pop
push
lea
rcr
pop
cmc
xor
fisubr
inc
fsub
push
bound
popa
add
in
jecxz
cli
imul
arpl
fisttp
mov
dec
adc
dec
sub
adc
dec
pop
sahf
push
je
pusha
push
add
into
inc
adc
sar
rcl
mov
jne
fld
ficomp
cmps
cdq
or
ror
jmp
scas
dec
and
fdiv
jns
push
js
push
bound
repz
adc
and
data16
push
sub
jns
or
shl
std
xchg
push
call
pop
and
leave
adc
mov
xlat
and
(bad)
lock
mov
adc
call
inc
ja
or
loopne
pop
addr16
jns
xchg
xor
out
iret
fisttp
in
xchg
add
cwde
jmp
mov
xchg
pop
mov
sub
test
mov
push
scas
and
enter
pop
lahf
nop
int3
cmps
xchg
addr16
xchg
cmp
shl
ret
mov
mov
sti
adc
rcr
call
outs
jb
movs
push
sub
jmp
cmp
(bad)
add
cmp
sbb
cmps
retf
out
stos
scas
std
out
(bad)
ds
sbb
popf
inc
or
adc
inc
repz
sbb
and
out
hlt
das
jb
jo
shl
addr16
lods
(bad)
jmp
js
(bad)
fld
pusha
jle
cld
or
pushf
jnp
jl
sbb
inc
fcomp
push
xor
loopne
enter
in
popa
sbb
push
movs
adc
adc
xchg
jns
scas
cmp
rol
es
sub
jnp
push
(bad)
(bad)
dec
add
(bad)
jge
mov
pop
into
xchg
xchg
ds
mov
stos
mov
jmp
je
out
push
pop
or
mov
movs
or
cmp
jne
add
lods
pushf
loopne
cmp
and
enter
xchg
cmp
add
push
mov
enter
je
jp
xchg
inc
xchg
mov
pop
pop
dec
repz
mov
test
pop
mov
and
or
push
or
sbb
mov
push
inc
inc
xchg
js
push
hlt
outs
stos
imul
call
sbb
or
jcxz
addr16
aam
(bad)
add
xchg
test
fwait
(bad)
clc
lods
and
push
dec
pushf
add
daa
mov
mov
imul
jnp
lahf
mov
adc
lods
sub
cmps
and
ss
lods
inc
pop
outs
arpl
movs
cmp
lock
cmp
stos
push
xor
pop
mov
pop
stos
int
xor
ins
jbe
jl
xchg
mov
aaa
rol
loope
dec
mov
push
scas
iret
jmp
(bad)
mov
outs
leave
jo
xor
mov
jne
or
daa
pop
lock
mul
add
mov
dec
dec
push
test
into
repz
test
xchg
jmp
dec
pop
cmp
inc
lds
loopne
sub
inc
outs
movs
out
jo
cmc
mov
test
lods
and
(bad)
repz
movs
int3
test
repnz
movs
hlt
fldcw
bound
pop
sbb
mov
fwait
push
das
inc
sub
fst
test
rcr
pop
or
adc
or
pop
rcr
(bad)
cmps
mov
(bad)
out
inc
adc
jmp
inc
aas
mov
dec
leave
jle
mov
arpl
adc
gs
add
scas
xor
inc
pop
and
mov
andps
imul
out
iret
inc
dec
xchg
inc
in
lock
(bad)
dec
and
sbb
popf
stos
in
inc
cmp
(bad)
dec
pushf
cmp
sbb
mov
(bad)
pop
shr
das
mov
sbb
sbb
adc
fnsave
shr
pop
adc
int
jae
push
dec
add
xlat
pop
(bad)
aas
sub
adc
out
xchg
icebp
jno
jp
rsqrtps
mov
sub
add
sub
push
xor
jb
cmps
cmc
xlat
in
nop
dec
aas
sub
mov
or
sbb
std
fldz
jg
adc
js
jge
mov
dec
jmp
xchg
popf
jbe
mov
fldcw
ja
sbb
sar
pop
and
jp
and
jmp
int
loop
bound
xchg
arpl
addr16
popf
mov
xchg
imul
mov
mov
mov
mov
xor
imul
lds
xor
dec
adc
jecxz
hlt
or
xor
fisttp
stos
lods
rcl
xor
inc
pop
aaa
stos
lahf
push
cdq
jg
dec
fsub
mov
add
mov
ret
push
scas
icebp
sahf
sbb
push
sbb
sbb
push
mov
mov
cwde
aad
push
fst
mov
sub
add
cmp
aas
jmp
pop
aaa
pop
mov
stc
sub
mov
iret
add
push
(bad)
fisttp
xchg
es
or
test
loop
sub
stos
or
xor
pop
push
dec
sahf
fsub
std
popf
inc
sbb
mov
pop
mov
mov
inc
xchg
dec
or
pop
xlat
loope
arpl
mov
jle
cmp
in
rcr
pop
pop
push
inc
sub
cmp
ins
cmovb
fld
leave
lds
sar
sbb
data16
sahf
mov
and
sub
sub
xchg
iret
inc
dec
mov
mov
stc
outs
mov
mov
cmp
dec
loope
push
push
push
loope
jb
push
out
xor
push
inc
stos
jmp
scas
mov
jae
je
xchg
or
mov
(bad)
call
(bad)
neg
idiv
mov
ror
mov
shl
dec
push
push
ds
xchg
xor
pop
mov
and
pop
xor
mov
fwait
inc
repnz
push
mov
xchg
mov
push
mov
loopne
test
cmps
fucomi
ins
fs
stc
push
lods
aas
out
mov
or
(bad)
ficom
and
pop
lea
xchg
stos
ins
dec
cmps
mov
out
rcl
or
fnsave
jae
sub
(bad)
mov
test
dec
ins
fbstp
xchg
pop
mov
lds
popf
out
or
or
sub
or
cmp
popa
jg
into
push
aad
jno
jo
mov
sub
loope
(bad)
pop
inc
(bad)
ja
push
cli
sub
cmps
cmp
pop
pop
jbe
push
push
cdq
sbb
int3
std
xlat
stos
add
jmp
adc
ficomp
not
je
scas
stc
or
cmp
sub
(bad)
int
and
push
lea
cdq
or
pop
pop
cmp
mov
pop
popa
mov
aaa
push
jecxz
inc
in
xor
loopne
sub
pop
jp
in
loop
xchg
xchg
fnstenv
shl
or
fdiv
fwait
shr
mov
push
rol
cmc
or
cmp
sub
cmps
xchg
adc
movups
js
mov
pop
cmps
shl
(bad)
cmp
fiadd
xchg
jg
dec
cmc
(bad)
shl
mov
sbb
cld
adc
scas
sub
cdq
mov
inc
add
sub
xchg
sbb
in
xchg
pop
dec
push
push
xor
add
ret
dec
fld
shl
xor
jns
cmps
jae
mov
or
std
fisttp
xor
jo
inc
adc
in
aaa
xchg
lock
popa
mov
mov
retf
jl
fisttp
cli
add
push
mov
out
or
jbe
lock
scas
cmp
push
inc
out
jge
lahf
shl
fs
scas
shl
xor
hlt
repz
adc
cs
sahf
call
and
mov
fmul
add
mov
mov
mov
mov
or
movs
cs
mov
out
stos
test
add
das
cmps
int3
xchg
mov
mov
mov
adc
jle
mov
loop
sub
push
addr16
cmp
and
mov
lds
repnz
jmp
call
adc
push
mov
mov
jb
pop
jnp
fldcw
idiv
mov
pop
push
dec
mov
and
cld
sub
mov
test
adc
sub
sti
and
in
jb
addr16
adc
xor
cmps
pop
pop
pushf
add
sub
push
je
aas
mov
movs
cmc
jle
push
and
jne
inc
fwait
sbb
xor
(bad)
idiv
ja
popf
sub
stc
mov
pop
xlat
pop
sbb
inc
cmps
mov
shl
xor
mov
add
add
retf
jmp
jae
shl
sbb
aas
enter
jae
adc
(bad)
cld
ja
leave
inc
dec
inc
xor
dec
aas
test
fnstsw
popa
rcr
cmp
out
sub
int3
or
(bad)
cli
jno
mov
jmp
inc
mov
cld
mov
data16
and
not
inc
mov
scas
(bad)
jmp
sub
ins
push
icebp
and
(bad)
shr
dec
push
into
(bad)
sar
adc
sbb
pop
push
bswap
scas
stc
loopne
push
and
(bad)
mov
push
test
arpl
aad
adc
wbinvd
lock
(bad)
retf
mov
xlat
adc
jl
sbb
ror
mov
popf
dec
pop
lods
jmp
xchg
cmps
sbb
into
popf
dec
jmp
icebp
pop
fld
xchg
out
and
fwait
mov
sbb
dec
daa
xor
retf
nop
lods
and
add
and
push
jl
out
dec
xchg
test
ror
jnp
jno
imul
arpl
mov
xor
mov
js
test
outs
fcom
jmp
pop
push
and
mov
adc
mov
xor
cmc
clc
mov
inc
add
mov
or
cmp
adc
repnz
adc
dec
cmc
push
iret
mov
jo
sar
popf
push
pop
jo
mov
push
jp
jp
sbb
cmps
lahf
jbe
mov
dec
mov
add
or
dec
mov
push
push
or
sub
cmp
int
fs
and
lds
loopne
adc
push
push
mov
cmp
and
sub
pop
cmps
out
out
xor
add
xchg
retf
dec
jne
shr
xchg
jo
int3
aaa
cmps
test
mov
ret
sti
xor
sbb
mov
loope
rol
stc
(bad)
xchg
dec
mov
mov
loop
sbb
mov
xchg
sub
cmps
fstp
int3
inc
xchg
das
push
aaa
std
and
pop
iret
sti
sbb
mov
into
js
cs
mov
bound
xchg
test
sub
rol
mov
in
jmp
xor
test
xchg
mov
loopne
jnp
inc
call
sbb
xchg
(bad)
mov
inc
ins
xor
pusha
cmp
fmul
pop
cdq
push
sbb
sub
fbstp
mov
jle
and
mov
mov
shl
pop
dec
das
add
xchg
sbb
jno
ror
pop
sti
mov
(bad)
in
cmc
jae
pop
in
std
mov
inc
stos
cmps
cs
outs
nop
clc
paddusb
loopne
sbb
dec
test
xor
push
rcl
jge
ja
dec
data16
in
jmp
lahf
lock
out
push
sub
adc
jge
call
dec
scas
cmps
jb
mov
sub
shr
in
push
push
push
test
xor
sbb
sbb
cmp
xchg
or
outs
sub
mov
in
pop
adc
inc
das
adc
pop
mov
aas
or
jae
loop
adc
lods
ss
inc
mov
dec
inc
jne
jne
pcmpeqb
outs
cmc
loope
and
add
adc
or
sbb
rol
ret
push
mov
jnp
inc
daa
xchg
repnz
pop
jmp
in
pop
test
or
adc
mov
or
xchg
jg
gs
cmps
ss
fdivp
mov
or
pop
retf
jae
fcom
sub
test
xchg
jb
imul
or
xchg
popa
and
int3
xor
ja
xor
push
pushf
and
pop
cdq
iret
pop
sub
popa
inc
cmp
inc
scas
and
jecxz
inc
push
jmp
sub
pusha
cs
lea
jne
jno
int
stos
dec
and
enter
pop
aam
xchg
out
jnp
pop
inc
repz
sbb
and
and
sub
inc
daa
pop
add
xor
retf
loop
xchg
jnp
adc
xchg
mov
sub
outs
or
xchg
popa
xor
mov
(bad)
adc
cmp
adc
loope
aas
test
and
xor
mov
sbb
shr
stos
fs
pop
sbb
push
dec
or
nop
xchg
and
fs
mov
sub
pop
mov
add
pop
pop
retf
loope
push
jnp
(bad)
jp
ret
jbe
inc
lods
inc
sbb
cmp
(bad)
mov
pop
int
and
out
call
pusha
inc
(bad)
and
push
ja
cmp
mov
mov
mov
mov
fsubrp
pop
and
aad
push
daa
pop
inc
vmaxpd
push
(bad)
in
in
xchg
jne
and
mov
and
fcom
cli
jge
stc
cmps
ins
sti
(bad)
sar
xchg
rcr
push
push
jmp
leave
pop
mov
into
xor
add
jo
popf
dec
jae
lahf
pusha
jge
xlat
icebp
mov
sbb
mov
fidivr
mov
push
int
stos
pop
mov
in
arpl
dec
dec
pop
push
movs
xchg
retf
inc
and
test
xor
cmps
test
popa
sub
test
ins
call
shl
shr
cmp
loop
dec
sti
xchg
cwde
jnp
aad
dec
and
jne
arpl
jns
push
ins
adc
idiv
in
mov
cmp
mov
fs
inc
mov
cdq
(bad)
fmulp
jb
cmp
rcr
mov
dec
sbb
sub
into
adc
sbb
xor
push
(bad)
mov
adc
mov
pop
adc
or
and
push
(bad)
(bad)
cmps
test
jmp
pop
bound
jno
data16
and
nop
pop
unpcklps
xchg
mov
clc
jae
icebp
popf
push
gs
inc
fstp
daa
jl
xor
loop
mov
dec
xchg
gs
inc
xchg
mov
test
cmps
dec
or
cmp
sahf
mov
lds
sbb
inc
clc
test
cmp
cmp
ja
or
mov
mov
loop
sub
retf
cmp
mov
call
jmp
mov
lahf
mov
loopne
cmp
or
fimul
or
or
lods
lds
cmps
outs
or
adc
ss
xchg
gs
push
cmc
dec
lods
or
mov
(bad)
dec
pop
rol
pushf
push
sahf
movs
je
popa
test
stc
sahf
pushf
leave
and
dec
arpl
pop
scas
sub
push
ins
aad
mov
cmp
outs
and
mov
fs
cmp
adc
scas
repz
lods
neg
sbb
xchg
stc
cmp
add
sbb
loopne
lods
add
ins
in
pop
in
mov
je
xchg
cmp
and
or
call
stos
loope
ror
pop
sbb
inc
gs
js
dec
add
pop
(bad)
sbb
in
mov
add
and
ret
retf
mov
adc
pusha
xor
jp
dec
neg
cmps
fwait
daa
out
sub
push
test
in
fcmovnbe
push
gs
inc
sbb
xor
add
sbb
pop
xor
jge
sbb
sbb
jne
mov
jge
or
sub
mov
fwait
jp
mov
scas
call
in
loop
push
shl
popa
pop
aas
dec
xchg
mov
in
or
je
xor
mov
shl
mov
into
or
ins
sbb
repnz
mov
jns
xchg
mov
repnz
xor
pushf
repnz
mov
imul
sbb
dec
push
xchg
gs
idiv
int
inc
nop
xor
sbb
and
jb
sbb
das
pusha
or
fldcw
cmp
mov
push
mov
push
clc
push
aas
mov
xchg
inc
mov
(bad)
pop
jl
(bad)
rol
fldcw
inc
adc
cmps
popf
aaa
mov
data16
add
(bad)
cmp
nop
cmp
retf
hlt
cmp
inc
loope
sar
std
and
xor
jne
outs
jae
mov
test
addr16
outs
push
jl
aaa
in
rcr
push
xor
adc
(bad)
xor
xchg
call
lea
mov
(bad)
mov
or
out
xor
rcl
leave
jbe
ret
arpl
setl
outs
add
loopne
test
cld
aad
pop
jle
dec
lods
ret
sti
shr
sbb
fisub
pop
mov
cmp
lods
sbb
push
jns
fistp
jns
dec
movs
pop
js
pushf
test
clc
and
lock
(bad)
sub
lods
jno
mov
push
sub
gs
ror
daa
or
jmp
or
add
outs
fwait
or
mov
cmp
fsubr
inc
sti
aad
iret
mov
ins
mov
addr16
inc
pushf
out
ror
inc
mov
cmp
jo
cmp
sub
cmp
ins
add
mov
mov
jl
or
not
into
lea
inc
inc
mov
hlt
outs
inc
or
aad
out
adc
xlat
cmp
jae
mov
(bad)
lahf
nop
cs
test
mov
test
lds
push
mov
scas
dec
bts
push
popf
(bad)
std
cmps
add
pop
imul
sub
add
dec
lods
mov
pop
inc
cmp
cmc
das
aaa
loop
lock
adc
aaa
aad
mov
cmp
mov
cs
or
jae
jmp
mov
mov
rcr
std
out
stos
push
ficom
fnstenv
jae
in
jge
push
fistp
outs
in
lock
cmp
sqrtps
sbb
mov
sbb
retf
loope
data16
dec
mov
mov
dec
pushf
inc
adc
rcl
cwde
out
mov
and
sbb
jns
and
jns
and
and
sub
fst
imul
xor
jb
push
rcr
outs
mov
push
out
aas
lahf
dec
aaa
xor
lock
cmp
pushf
and
es
sahf
addr16
inc
(bad)
mov
sbb
es
call
mov
cmp
sub
outs
jno
pop
aas
cmp
mov
sub
xchg
sbb
add
hlt
push
inc
dec
and
mov
movs
movs
push
mov
outs
clc
add
and
mov
scas
ret
sub
dec
or
pop
mov
sbb
adc
out
aaa
xchg
and
mov
jns
fadd
jns
add
cmc
dec
push
jmp
enter
and
add
movs
ss
mov
repz
xchg
mov
fcom
lods
mov
push
adc
sbb
cmp
lods
sub
js
dec
xor
pop
xor
fdivr
push
push
sahf
fiadd
sbb
in
push
dec
sub
dec
in
inc
cwde
movs
setb
mul
adc
and
dec
pushf
cdq
mov
fmulp
and
bound
je
das
cmps
(bad)
mov
jnp
in
jb
jno
xlat
(bad)
stos
push
mov
and
xlat
mov
cmc
xchg
retf
add
cmp
ins
or
mov
fsubrp
faddp
scas
mov
push
jmp
lds
cs
mov
test
pop
xor
mov
out
fnstsw
mov
dec
repnz
dec
jo
inc
addr16
outs
add
into
popa
jo
adc
in
rcr
and
mov
sbb
pop
mov
loop
sub
frstor
push
or
mov
ret
imul
mov
jno
xchg
jmp
int3
ds
sbb
stos
mov
or
in
push
jmp
push
fs
nop
rcr
fcmovnbe
mov
jl
push
leave
shr
repnz
fcmovbe
icebp
fbld
out
pop
jbe
cs
retf
loope
pop
pop
adc
out
es
xchg
cwde
sbb
in
mov
ret
cld
test
pop
add
aad
dec
icebp
push
sub
rcr
cli
adc
sti
fsub
in
jg
xor
dec
daa
add
ret
cmp
jmp
dec
push
sub
fwait
idiv
push
test
cli
into
adc
mov
dec
aam
jb
sbb
retf
push
inc
cmp
mov
pop
pop
aas
inc
jge
push
dec
jmp
push
mov
xor
in
and
pop
mov
aad
fdiv
jmp
rcl
(bad)
out
aaa
int3
push
mov
dec
push
add
sbb
imul
inc
mov
pop
(bad)
jne
xchg
mov
jge
stos
mov
xor
(bad)
fmul
sbb
add
(bad)
fld
movs
pop
nop
sbb
shr
fsubr
xchg
inc
in
(bad)
std
dec
cs
aas
daa
add
aam
jne
repnz
fwait
sahf
scas
pop
pop
int
fadd
loopne
mov
adc
or
test
push
pop
aas
adc
mov
jnp
jnp
pop
stos
sbb
adc
sbb
iretw
lds
repz
mov
mov
xor
dec
dec
pop
div
fstp
push
sub
(bad)
inc
xchg
jl
std
lock
cli
pop
dec
pop
das
pop
pop
jo
dec
jge
push
jge
or
xchg
cli
xchg
rol
(bad)
mov
in
pop
out
call
xchg
shl
xor
or
stos
adc
dec
cld
xchg
js
adc
fst
scas
and
and
adc
pop
cmp
(bad)
hlt
mov
hlt
jmp
imul
in
cmp
sub
jns
(bad)
pop
xchg
scas
test
nop
fld
xchg
mov
sub
loopne
cmp
sbb
jecxz
retf
mov
push
fbld
pop
sti
rcr
pop
or
push
popf
lea
daa
adc
outs
fldcw
das
cdq
or
in
push
pop
and
pop
(bad)
sub
fimul
cmp
lock
scas
add
jns
int3
addr16
jne
xchg
push
pop
push
inc
inc
in
ss
repnz
xor
mov
call
adc
in
mov
(bad)
sub
dec
repnz
fwait
retf
inc
in
and
sbb
aaa
sbb
clc
sbb
sub
scas
js
seto
xor
xor
daa
xchg
adc
loopne
xor
inc
test
mov
loope
mov
and
push
movs
imul
pop
aam
and
sbb
dec
inc
loop
ins
xchg
mov
pop
clc
test
sub
(bad)
cdq
jo
mov
mov
ror
cmp
cmps
add
and
push
push
xor
dec
and
mov
jno
xchg
sbb
imul
add
push
popa
xchg
mov
adc
and
test
pop
les
mov
scas
dec
in
add
inc
sub
ins
fisubr
push
add
fbstp
outs
call
xor
ins
adc
shr
adc
inc
inc
dec
push
dec
or
fmul
and
imul
jnp
ud0
int
add
imul
lods
nop
pusha
shr
cmp
and
dec
lahf
mov
cwde
and
mov
and
pusha
push
out
and
gs
mov
retf
dec
pushf
sub
int3
stos
pop
and
pop
rcr
or
test
dec
mov
stc
loopne
or
jb
mov
inc
mov
stos
mov
call
mov
mov
or
or
repz
sahf
lahf
push
ja
adc
popa
dec
sbb
or
jmp
aaa
inc
mov
ret
sbb
mov
mov
xor
xor
ds
mov
push
adc
fsub
jmp
cld
sbb
cmp
fst
imul
and
out
sub
lahf
jnp
stc
jmp
and
imul
cmp
and
mov
lea
push
mov
daa
stc
dec
js
outs
adc
mov
cli
mov
xor
shl
xchg
inc
not
clc
lods
stos
push
cmps
stc
dec
and
iret
gs
jnp
xchg
xchg
jge
jnp
cmp
scas
sti
push
test
test
das
int
loope
xchg
and
push
test
jb
gs
dec
xor
jb
fsubr
cmps
sbb
inc
and
pop
push
cmp
fwait
jae
add
dec
fwait
push
jb
cli
sbb
mov
cmp
dec
fidivr
ficomp
std
mov
or
popa
sbb
push
sbb
xchg
fmul
jmp
call
pop
xchg
sbb
stos
jmp
dec
and
fsubr
inc
mov
cmps
test
xchg
js
or
ja
push
das
xchg
data16
nop
mov
in
jbe
in
cs
pop
add
mov
call
sbb
(bad)
movs
ss
hlt
cmps
jge
xor
dec
shl
push
stos
mov
movs
sub
movs
cld
xchg
scas
sar
jne
fs
out
xchg
cmp
push
xor
mov
inc
adc
cld
cmps
cmp
inc
lds
pop
push
mov
mov
sti
xchg
jp
xchg
or
movs
mov
mov
icebp
inc
nop
shr
cmps
call
mov
inc
jp
pushf
loop
jmp
out
sbb
lds
xchg
sub
xor
add
cmps
clc
mov
mov
jbe
and
cmp
lahf
xor
dec
out
outs
pop
into
and
stc
sar
in
and
neg
out
xchg
scas
cli
cmp
in
pop
inc
nop
mov
lods
mov
pop
fmul
pushf
leave
repnz
mov
int3
outs
ins
dec
jns
imul
mov
in
ja
outs
mov
jecxz
pop
repz
or
imul
loope
xchg
jmp
push
mov
xchg
outs
sbb
aam
cmp
iret
(bad)
imul
adc
xor
repz
out
add
mov
mov
cmp
cld
inc
add
das
outs
fwait
scas
or
ins
jns
xchg
xor
inc
aas
lock
jmp
fmul
das
and
fstp
and
and
pop
int
movs
scas
inc
fdiv
cs
fbstp
and
adc
outs
in
adc
cmp
dec
leave
pop
dec
loopne
cmp
scas
xchg
cs
imul
or
test
out
call
in
test
adc
push
cmp
mov
xor
lods
cmp
and
sti
sbb
pop
mov
push
xor
jnp
pusha
or
jbe
jg
adc
xchg
sahf
add
cmp
push
jmp
jecxz
fldenv
sbb
adc
mov
mov
sti
cli
mov
and
push
adc
jae
cmp
inc
dec
aam
pop
and
in
add
sub
jecxz
in
div
push
fmul
in
arpl
ficom
js
mov
jnp
xchg
jno
enter
sbb
jecxz
scas
adc
sbb
repnz
or
ss
clc
mul
data16
mov
and
and
in
imul
ror
in
xchg
push
or
enter
cmp
add
cmps
and
add
push
lock
mov
add
mov
xor
(bad)
aad
xor
xor
pop
add
mov
cmp
fst
(bad)
mov
sbb
pop
popf
mov
xchg
es
cmp
movs
or
fmul
dec
jl
aam
cli
shr
mov
(bad)
push
aaa
iret
cwde
psubsb
mov
xchg
mov
aaa
jg
or
adc
dec
sar
or
mov
dec
xchg
loope
fcom
dec
clc
(bad)
jecxz
jo
xor
sahf
jl
fild
ins
push
add
jecxz
or
rol
rcl
mov
jmp
add
pushf
jg
int3
dec
arpl
pop
retf
dec
aas
mov
test
mov
or
(bad)
gs
cmp
fsub
jmp
aam
retf
pop
sbb
jbe
pop
push
fs
sub
outs
pop
loope
shl
jns
and
(bad)
fwait
pop
mov
aaa
pop
ins
je
inc
adc
pusha
dec
movntq
out
nop
addr16
call
stos
sub
out
or
lods
dec
(bad)
leave
shl
sbb
std
shl
jle
sti
adc
pop
lea
push
movs
mov
call
es
ja
push
pusha
int
push
call
imul
sub
xchg
inc
out
cmps
int3
pop
in
jecxz
adc
and
or
cmp
inc
add
sub
and
and
cld
push
cmp
pop
dec
movs
aaa
push
fld
movs
loop
out
ror
fistp
push
retf
fiadd
pop
pop
xor
mov
xchg
xchg
ret
lods
mov
mov
ror
mov
mov
ins
jecxz
ss
dec
jb
(bad)
cmps
jno
sar
mov
push
jnp
in
int3
leave
in
mov
pop
pop
push
add
inc
popa
bound
cld
adc
ja
cmp
mov
jmp
sbb
and
hlt
or
mov
adc
cld
xchg
rcl
xchg
in
jecxz
jecxz
mov
dec
pop
push
(bad)
arpl
aad
out
xor
sti
jecxz
xor
into
push
jae
(bad)
and
les
xchg
inc
call
aam
inc
or
mov
jg
push
(bad)
mov
xor
fild
(bad)
dec
sbb
(bad)
cwde
fs
iret
dec
ret
lahf
(bad)
outs
outs
and
aad
or
add
sbb
or
fucomp
xor
ins
or
call
adc
fwait
push
(bad)
fisubr
jb
loopne
loop
and
cmp
jno
fstp
mov
xlat
push
push
fs
in
call
cmp
lea
movs
aas
icebp
mov
xor
push
xchg
jle
popa
push
rcr
jb
movs
and
xor
jo
dec
mov
pop
idiv
inc
xor
dec
je
aaa
ficom
mov
inc
push
pushf
xor
cmc
gs
xor
inc
sbb
or
xchg
shl
movs
imul
imul
mov
mov
(bad)
shr
fisub
out
(bad)
adc
inc
push
jb
dec
mov
cld
push
std
(bad)
jle
xor
mov
inc
rcl
cmp
fcomp
jns
test
xor
pop
ret
call
and
jle
ror
sahf
outs
jnp
add
or
add
pop
or
scas
in
xor
lods
popf
sub
add
ds
cdq
or
ins
xor
mov
jmp
mov
cwde
dec
test
test
mul
mov
and
and
or
dec
rol
fs
stos
test
ins
mov
xchg
std
(bad)
in
stos
cs
in
fst
out
mov
es
push
push
cmps
mov
dec
repnz
rcl
ins
and
xor
stc
jmp
fistp
sub
dec
jmp
rcl
and
and
dec
call
cs
cmp
sbb
cmp
dec
outs
shr
sub
fiadd
mov
sbb
addr16
ret
mov
fidiv
push
xor
sbb
inc
mov
sbb
xor
cmp
inc
outs
dec
sti
cmovns
test
sub
mov
(bad)
add
jno
inc
xchg
add
sub
movs
inc
pop
jmp
sub
loope
fwait
dec
mov
nop
data16
iret
push
aam
mov
or
add
pop
ret
sbb
xchg
icebp
in
nop
ret
xchg
stos
xlat
dec
test
aas
outs
jg
fsubr
pop
outs
add
mov
push
push
push
push
loope
ins
add
sbb
imul
mov
mov
jp
fld
cmp
ins
nop
mov
push
add
xchg
and
xor
add
mov
jno
jge
cld
cmp
xor
mov
mov
pop
stc
sbb
outs
pop
jge
mov
sub
cdq
cmc
cs
add
loopne
cmps
jns
dec
lods
cmc
mov
outs
jg
jns
lea
aaa
fs
push
push
bound
ins
mov
inc
dec
xchg
xchg
cmp
dec
mov
and
push
leave
movs
xchg
stos
cmp
pop
ret
into
and
or
inc
xor
push
or
inc
sub
sub
mov
(bad)
jmp
xchg
pushf
jae
jne
lds
(bad)
mov
scas
out
stos
pop
push
loopne
stos
inc
push
clc
mov
mov
pop
adc
js
mov
cmp
pop
bound
repz
pop
jle
std
loop
arpl
lds
cmp
je
int
cmp
(bad)
stos
out
and
cmp
rol
movs
or
ss
data16
and
inc
inc
mov
add
arpl
cwde
test
mov
and
sub
jmp
in
sbb
push
das
dec
pop
pop
sub
fsub
mov
and
mov
push
or
cwde
jecxz
cmps
mov
push
(bad)
xchg
lock
xor
sub
loopne
add
fistp
scas
js
fs
call
jge
jno
sub
clc
aad
aad
(bad)
jne
cmp
mov
retf
mov
dec
jmp
ins
pop
jp
(bad)
daa
mov
cmp
pop
adc
cmp
data16
xchg
jne
push
sub
(bad)
xor
stc
mov
lock
add
cmp
pop
push
test
jnp
inc
std
lods
in
sbb
in
test
xor
addr16
push
in
out
dec
xor
mov
fstp
(bad)
pop
dec
mov
jo
add
sbb
lds
inc
inc
cmp
js
lock
pop
scas
xchg
mov
cmc
pop
xchg
test
movs
pusha
push
or
xchg
mov
xchg
mov
ret
fisubr
add
enter
iret
add
sbb
aas
ss
push
sub
push
pop
xor
ret
cmp
xor
jns
xor
imul
fwait
jnp
cmps
daa
retf
adc
mov
mov
out
call
idiv
(bad)
fwait
inc
imul
jle
pop
ror
push
mov
add
ror
rol
xchg
cmps
cmp
into
jb
dec
jecxz
mov
fdivr
mov
mov
or
mov
popf
cmp
lock
dec
cmp
push
xor
xor
dec
mov
mov
shl
and
xchg
push
jbe
(bad)
jmp
int3
add
adc
sahf
push
(bad)
xchg
add
sbb
out
dec
pusha
sub
leave
inc
dec
arpl
mov
fild
arpl
xchg
xchg
cmp
push
push
out
cmc
mov
call
xor
dec
movs
jbe
(bad)
lahf
add
xchg
pop
rcl
add
and
adc
add
repz
call
mov
and
jmp
fbstp
aaa
sbb
(bad)
loopne
add
mov
inc
stos
and
mov
mov
ja
add
(bad)
mov
mov
pop
xor
repnz
inc
popf
pop
mov
fst
(bad)
sahf
retf
add
out
mov
push
pop
mov
inc
fiadd
pop
popa
fisub
xchg
or
mov
and
xchg
mov
cmps
pop
sub
or
xchg
stc
cld
outs
mov
inc
test
adc
mov
add
(bad)
inc
bound
pop
stos
mov
push
pop
test
jmp
and
nop
cmp
pushf
jp
sar
imul
test
cld
push
sub
adc
mov
cmc
mov
push
pop
in
inc
xor
pop
fwait
mov
pop
cdq
or
and
ds
in
mov
xor
imul
or
dec
scas
sysexit
repnz
xor
add
pop
or
ja
adc
mov
push
and
mov
and
lahf
or
push
hlt
sti
inc
and
das
sub
hlt
sub
jbe
stos
sar
inc
pop
jmp
cld
and
ins
out
cwde
or
call
add
xor
adc
repnz
pop
loopne
jns
hlt
dec
adc
sub
push
add
jmp
sub
popf
out
(bad)
xor
scas
stos
dec
es
mov
mov
iret
xor
movs
sbb
aas
rcr
scas
and
xor
and
push
mov
jg
push
xor
and
and
int3
(bad)
out
ins
or
iret
pop
pop
or
xchg
std
mov
sbb
cli
mov
xor
jmp
pushf
push
push
sbb
jl
mov
out
ret
lea
jno
mov
rcl
rcl
shl
sbb
cs
jp
sub
mov
cmovs
lods
mov
mov
loop
ja
dec
cmp
push
mov
dec
sub
or
stos
cmp
sub
cmc
es
adc
repz
mov
add
rcl
push
pop
sbb
(bad)
std
not
pop
lock
cdq
mov
pop
inc
dec
or
stc
mov
int3
xchg
cli
out
cdq
cmps
popf
not
daa
cdq
jl
cmps
mov
sub
fstp
push
xor
aam
push
adc
test
pop
or
ins
mov
dec
ins
aas
pmulhuw
adc
out
inc
cmps
outs
mov
mov
popf
jge
addr16
pop
(bad)
inc
je
leave
jnp
xchg
sub
add
cmp
shl
in
xchg
fwait
aad
sub
lea
in
dec
xchg
lahf
fdivr
and
cmp
das
in
jmp
pop
inc
lods
inc
in
adc
scas
push
in
jle
js
in
mov
or
xchg
mov
cmp
daa
(bad)
shr
and
dec
je
jecxz
aad
or
lds
or
add
movs
mov
jl
sub
and
pop
popf
repz
aas
stos
clc
adc
push
xlat
pop
dec
out
jbe
and
xchg
adc
mov
loopne
ins
fst
xlat
bswap
push
arpl
outs
dec
add
mov
aad
or
fcomp
push
out
out
in
fisttp
into
mov
sbb
dec
add
out
lahf
mov
lock
fsubr
push
push
add
retf
in
mov
jbe
mov
sti
dec
shl
fidiv
adc
fidivr
bound
ja
lds
dec
(bad)
cdq
xchg
mov
lods
enter
fld
fist
cs
jnp
sti
scas
and
push
test
add
push
pop
loopne
int3
add
daa
aaa
fcmovnbe
or
js
cmp
scas
(bad)
aas
fisttp
lock
dec
gs
(bad)
addr16
aas
or
(bad)
lock
sub
fst
dec
sbb
nop
add
pop
into
std
pop
js
xor
mov
sub
in
stc
lds
and
icebp
enter
je
jnp
push
xchg
cmp
out
mov
fild
scas
mov
jb
fist
enter
or
mov
(bad)
fiadd
push
push
aad
pop
mov
mov
jo
pop
and
repnz
rol
ret
iret
push
pushf
lods
adc
mov
cmp
mov
stos
add
add
adc
mov
and
into
aaa
mov
les
sar
cdq
lds
pop
ret
sub
clc
sub
jmp
mov
repz
cmps
xor
adc
push
mov
out
dec
add
(bad)
push
arpl
cmp
dec
ins
jl
lds
xchg
xlat
(bad)
pop
push
loopne
pop
mov
imul
mov
add
(bad)
dec
dec
js
adc
imul
or
mov
aad
lahf
mov
mov
jb
iret
xchg
popf
clc
cmps
(bad)
mov
mov
mov
xchg
sub
and
adc
mov
xacquire
pusha
(bad)
push
dec
xchg
push
mov
sbb
(bad)
mov
cmc
sbb
pandn
dec
push
sbb
arpl
sbb
lods
int
dec
std
lds
pop
sub
xchg
repnz
xlat
(bad)
scas
std
mov
xchg
es
gs
adc
mov
stos
mov
out
mov
cmc
dec
push
stos
cmps
push
mov
cmp
and
xchg
bound
fstp
and
sbb
loop
retf
push
pop
push
dec
and
push
in
pop
push
je
mov
mov
sub
enter
into
jb
mov
and
pop
dec
add
imul
fimul
inc
jmp
sub
sub
jge
bound
xchg
cwde
push
jmp
stos
mov
addr16
test
inc
and
cmp
aas
jg
xchg
(bad)
loop
add
cmp
mov
and
retf
iret
test
test
and
fwait
jbe
hlt
cmp
jle
unpcklps
and
in
in
hlt
and
cmps
bound
xor
add
mov
shr
inc
mov
cmp
mov
clc
cdq
dec
shl
and
sbb
js
push
les
cs
cmp
sti
dec
push
mov
pop
ret
inc
dec
mov
pop
dec
or
adc
outs
(bad)
sbb
mov
xor
(bad)
das
add
rcl
xchg
fbstp
iret
cld
push
adc
jmp
jp
fdivrp
fcmovne
fnstcw
add
and
clc
nop
dec
xor
ds
movs
cmps
push
mov
mov
jle
and
sbb
test
inc
mov
dec
int3
in
xchg
cld
push
xchg
push
pop
add
mul
add
out
sbb
movs
pop
mov
mov
push
push
out
adc
sub
sbb
fwait
mov
jecxz
sbb
ins
clc
lods
adc
jo
enter
or
(bad)
test
sbb
mov
jnp
mov
mov
out
mov
mov
ret
lods
inc
mov
adc
mov
ins
lock
loope
mov
jo
scas
sbb
ficom
push
inc
adc
or
test
and
iret
bound
add
retf
and
shl
jnp
daa
popf
aad
mov
dec
fisub
test
loop
cmp
and
(bad)
xor
rol
inc
ss
push
dec
add
fild
lock
aam
cmc
mov
add
and
jne
xchg
repnz
mov
sub
push
aam
mov
push
test
jae
pop
fs
pop
cli
cmps
jle
xchg
mov
sub
mov
into
dec
pop
lods
push
fild
jecxz
xor
xchg
ja
mov
xchg
jae
add
pop
jmp
dec
jbe
aam
cld
add
and
dec
dec
cmp
pop
into
sbb
int3
fwait
xchg
lods
push
mov
cmp
jbe
mov
mov
mov
dec
dec
mov
scas
rcr
idiv
xor
stc
movs
bound
xchg
bound
jo
(bad)
sbb
xchg
and
(bad)
mov
outs
pusha
push
out
cli
scas
sahf
pusha
and
inc
sbb
push
int
es
or
xor
(bad)
jne
mov
mov
pop
mov
dec
pop
call
idiv
aaa
cmc
neg
aad
mov
jmp
or
jae
jmp
push
sbb
pusha
jb
div
mov
jno
fbld
or
idiv
mov
mov
aam
int
data16
push
lods
cli
scas
cli
pop
sahf
and
sub
ficomp
add
movs
inc
ja
sar
movs
sub
xchg
dec
cmp
fsubrp
popa
ins
leave
push
cmc
push
pop
jns
loop
stos
cmc
(bad)
(bad)
lods
mov
push
sahf
arpl
in
dec
(bad)
mov
sub
rcr
lea
into
cmp
cmp
pop
mov
in
inc
mov
xor
mov
sbb
popf
cmp
mov
pushf
jbe
bound
fist
adc
mov
test
pop
enter
cmps
dec
sbb
inc
retf
inc
in
dec
inc
je
adc
imul
xor
arpl
clc
in
dec
cdq
stos
or
iret
test
or
jno
stos
imul
vmread
adc
daa
ret
sub
in
xor
jno
ror
pop
outs
or
and
push
ds
mov
pop
cmps
or
sbb
jo
inc
inc
int3
mov
sub
cs
aas
pop
frstor
xchg
or
scas
imul
dec
ds
cmps
cmps
push
cwde
in
scas
sub
add
(bad)
repz
and
shl
pop
push
test
xor
lahf
lds
repz
push
jns
sbb
ins
popa
aad
repz
xchg
inc
dec
sub
or
add
mov
pop
aam
sbb
nop
shl
es
mov
push
mov
mov
xchg
pop
js
test
leave
fisttp
xor
call
cld
shl
jl
or
sbb
movs
cmp
sbb
add
test
(bad)
cmc
jns
sti
mov
sub
push
and
sub
pop
ret
mov
pop
lock
je
arpl
fdivp
push
and
ret
cmps
repnz
clc
inc
(bad)
or
out
aam
cmp
test
call
jae
pop
mov
or
adc
inc
mov
push
xor
mov
inc
sar
test
add
xor
int3
cmps
out
enter
lea
push
(bad)
mov
xor
bt
cmp
push
sbb
xor
cli
adc
cld
mov
and
jp
mov
sti
add
jl
and
test
mov
in
add
sbb
(bad)
ret
adc
push
pusha
call
aaa
leave
or
out
test
cld
lds
vpshufhw
xchg
shr
in
cmp
pop
or
jl
adc
lods
mov
mov
adc
push
sub
inc
shr
push
xchg
mov
push
mov
xchg
ret
sub
sub
pop
jnp
sub
fmul
xor
mov
xor
mov
jp
add
xor
fidiv
mov
into
inc
xchg
mov
jp
(bad)
push
neg
pop
and
xchg
xor
push
push
dec
jno
push
dec
mov
lds
or
out
ficomp
dec
dec
mov
xchg
test
fadd
inc
sub
xor
pop
mov
cdq
and
(bad)
dec
jb
jg
dec
cmp
inc
sub
imul
sub
lods
sub
adc
xor
adc
add
ror
shl
pusha
mov
cmp
push
mov
add
fcmovnbe
out
add
sbb
adc
mov
iret
stos
pusha
or
add
pop
push
inc
and
jnp
sub
daa
mov
ins
or
xor
dec
cmp
add
in
cmp
test
xor
mov
pop
mov
sbb
retf
cwde
sbb
outs
es
sub
sub
jp
jmp
add
in
mov
push
lea
or
mov
ror
mov
pop
shr
(bad)
into
sti
mov
xchg
bound
or
nop
pop
xchg
in
sahf
pop
xlat
scas
adc
int
mov
ret
je
xchg
out
cld
xor
push
xor
push
mov
loope
into
mov
sti
inc
retf
subps
push
data16
repz
push
add
test
pop
out
sbb
mov
xor
ror
mov
cmc
fild
cmp
jae
pop
mov
xchg
push
stc
mov
neg
push
loop
pop
pop
pop
call
inc
arpl
adc
pop
push
rcr
fidivr
inc
jae
mov
cld
and
arpl
xchg
arpl
inc
fidiv
xchg
ret
add
add
sbb
push
xchg
jg
fwait
scas
in
retf
lea
push
or
(bad)
xlat
cwde
jbe
pop
push
cdq
mov
adc
cmp
test
mov
aam
mov
fsubrp
data16
in
jmp
and
popf
dec
int3
dec
sub
jae
sub
mov
(bad)
push
jmp
xchg
fwait
adc
cmps
ins
inc
fcomp
stos
cmps
mov
retf
imul
rol
bound
test
(bad)
fldcw
shr
cs
aad
mov
aam
cmc
nop
sahf
mov
lahf
pop
jbe
push
cwde
xchg
mov
push
fsubp
push
sub
les
lock
clc
push
(bad)
jmp
scas
test
mov
xchg
mov
jnp
push
jge
push
nop
test
pop
pop
pushw
xor
aaa
xchg
lods
xchg
pop
and
mov
push
test
ss
push
adc
mov
lea
xchg
jmp
adc
aas
push
adc
(bad)
jmp
int3
mov
and
sub
xor
jno
(bad)
jle
add
jns
in
xlat
xor
pop
mov
sbb
daa
dec
inc
cwde
retf
add
sahf
inc
pop
and
(bad)
mov
popf
mov
xchg
add
pop
mov
dec
jmp
clc
sbb
sub
stos
cmps
test
repnz
das
out
std
push
adc
pushf
jmp
leave
test
test
pop
sub
ret
adc
int
test
or
push
sbb
(bad)
mov
aam
pop
cwde
imul
push
lahf
fwait
push
loope
dec
sar
jae
(bad)
jo
iret
adc
retf
test
mov
jge
sub
xor
shl
xchg
jp
xchg
mov
or
cmps
and
sti
stc
jmp
push
push
icebp
pop
leave
js
rcr
out
and
ins
jge
shr
sbb
adc
xor
cmc
sbb
scas
es
push
or
dec
(bad)
hlt
mov
je
in
or
dec
lds
mov
addr16
movs
sbb
lds
(bad)
jmp
cmp
test
icebp
ins
outs
mov
test
and
aam
cdq
cmp
inc
ja
pop
(bad)
xchg
mov
push
js
in
jns
push
lds
lahf
or
inc
cmp
dec
rcl
adc
fbld
pusha
movs
jecxz
pop
(bad)
icebp
leave
ret
cmp
retf
(bad)
sbb
das
stc
imul
cmp
je
xchg
ins
sub
sbb
inc
sar
into
repnz
sub
fnsave
sbb
(bad)
lahf
call
jp
cmp
iret
call
jbe
test
pop
dec
mov
dec
xchg
sub
add
dec
popa
xchg
in
mov
push
shl
pushf
and
dec
xor
aam
ins
dec
pop
inc
and
xor
imul
lds
scas
icebp
jge
cmps
add
(bad)
icebp
mov
dec
xchg
pop
xchg
and
jmp
fdiv
lea
mov
xchg
dec
cld
jge
retf
mov
retf
stos
pop
pop
jns
xchg
std
mov
out
in
retf
jns
mov
xor
sbb
dec
retf
xchg
adc
lods
iret
stos
test
pop
cmp
cmps
mov
jo
scas
inc
lds
icebp
out
jno
and
aad
mov
cmp
fs
psubsb
mov
rcr
mov
and
scas
and
cmp
ss
push
out
aas
out
sbb
fistp
push
adc
(bad)
popa
pop
inc
aad
push
mov
gs
or
pop
mov
lahf
loopne
sti
inc
push
mov
inc
adc
sbb
retf
cmp
icebp
inc
dec
mov
test
fwait
sbb
inc
inc
call
sub
popf
sub
movs
mov
or
pop
mov
dec
inc
pop
xchg
cmp
inc
std
push
add
xor
cmp
fs
xchg
jg
add
inc
shl
push
adc
dec
and
mov
add
std
push
add
clc
lahf
repz
jne
pop
jae
or
xchg
sbb
rcr
dec
sbb
ret
icebp
les
inc
cmp
jg
pop
hlt
jno
sbb
xor
xor
mov
or
sub
jne
div
cmp
cmps
dec
push
montmul
cmps
add
mov
mov
sbb
sub
int3
pop
lods
add
popa
imul
pop
cmp
pushf
sub
sbb
repz
shr
call
lods
mov
xchg
bound
lods
sahf
inc
fs
sub
sbb
jle
mov
aaa
mov
out
sti
xor
cs
xlat
xchg
jno
xchg
imul
retf
addr16
scas
es
(bad)
shl
gs
add
dec
pop
push
jnp
mov
cmps
or
dec
pop
pusha
aas
movs
in
inc
test
fldcw
loopne
adc
sbb
mov
sub
inc
cdq
call
inc
and
sbb
or
sub
xchg
dec
xor
add
test
mov
pop
fcomip
add
jno
cmc
(bad)
addr16
jae
in
add
jb
sti
lods
mov
(bad)
xor
in
outs
sbb
jbe
push
jmp
jp
or
cmp
xor
sub
lods
cmp
pop
std
cmp
sbb
jo
movs
sub
inc
scas
pusha
jecxz
jg
je
imul
sbb
sbb
pop
pop
pop
repz
rcl
dec
lods
pop
or
push
pop
out
rcr
cmps
xchg
jno
std
jae
nop
js
sbb
repz
sbb
jmp
pop
enter
outs
pop
adc
pop
(bad)
sahf
bound
pop
push
cs
jne
arpl
(bad)
fst
and
arpl
add
in
sub
fadd
jmp
fdivrp
test
jnp
xlat
pop
pop
fdiv
push
loop
mov
push
pop
jbe
mov
dec
pusha
scas
movs
movs
add
mov
fsub
sub
dec
arpl
adc
jmp
fld
inc
rol
jle
aad
add
dec
add
push
inc
ins
jns
hlt
rcl
inc
out
icebp
inc
into
fnstsw
(bad)
in
in
int3
mov
mov
mov
push
div
sub
out
ins
sbb
or
and
jmp
add
into
inc
mov
or
test
or
cmps
in
sbb
nop
sbb
rcl
imul
loope
movs
dec
retf
mov
test
mov
push
and
dec
shl
icebp
jbe
test
movd
mov
ins
mov
movs
mov
fist
xchg
add
pop
std
ins
ret
aad
xor
xchg
cwde
not
shr
cmp
mov
out
arpl
mov
push
mov
pop
test
xchg
inc
call
in
leave
(bad)
sti
scas
xchg
stos
cmp
or
adc
inc
push
lock
add
retf
mov
push
sub
sub
mov
jp
xor
adc
inc
mov
fadd
pop
cmp
aas
mov
jmp
jno
call
test
inc
cmp
cmps
fstp
dec
imul
or
push
xchg
aaa
jecxz
jo
or
jo
loopne
cwde
fnsave
mov
xor
sub
ja
imul
jmp
fbstp
and
mov
or
scas
sub
jo
push
mov
mov
xchg
adc
push
(bad)
loopne
mov
mov
sbb
mov
stos
retf
out
pop
or
pop
ror
movs
call
cs
popf
cli
fidiv
sar
sbb
fwait
and
jecxz
dec
add
adc
fimul
mov
pushf
adc
push
jb
mov
push
clc
xchg
cli
cdq
sahf
stos
ds
sbb
call
data16
mov
(bad)
dec
icebp
or
jle
pop
lods
inc
inc
ds
xor
lods
or
stos
sub
jmp
cmp
fwait
cmp
les
and
push
jbe
pop
shr
fucompp
xchg
inc
push
jecxz
inc
cmc
cmp
jbe
and
bnd
mul
sbb
sbb
push
sar
(bad)
cli
jb
adc
les
cmp
jbe
mov
mov
xchg
femms
movs
cmp
sub
ja
test
dec
jecxz
dec
cmp
ret
ja
ins
cmp
aas
jmp
test
mov
sar
mov
inc
push
rcr
dec
bound
xlat
cli
gs
sbb
popf
and
pop
jge
fcomp
icebp
scas
cld
fild
and
jnp
cwde
clc
pusha
mov
cmp
push
sub
(bad)
(bad)
cdq
in
aam
mov
push
sbb
clc
mov
ror
rcr
sub
pop
mov
loopne
push
dec
inc
push
jge
cmp
mov
fcmove
jnp
call
or
neg
cwde
aam
xchg
mov
daa
adc
adc
xor
rcr
xor
xchg
pop
xchg
jns
nop
mov
iret
mov
push
mov
jmp
jg
add
mov
push
stc
xchg
inc
and
into
aaa
mov
test
mov
pop
xchg
cmps
adc
stc
cmps
cs
mov
fbld
pop
dec
mov
pop
or
iret
dec
mov
mov
aas
sbb
cmp
(bad)
jmp
cmps
mov
or
shl
test
rol
jl
(bad)
mov
(bad)
loope
mov
cmp
pop
cld
adc
pop
ret
jo
mov
pop
je
xor
bound
xor
cmp
inc
jne
scas
sub
repz
ss
add
inc
xchg
push
lods
push
cdq
push
dec
jg
cli
jge
cdq
mov
sbb
adc
dec
lods
pop
jle
fidivr
mov
das
std
jge
int
fbld
les
aas
mov
xchg
test
xchg
sbb
dec
push
or
push
sbb
mov
add
nop
jnp
pop
dec
adc
iret
addr16
fld
or
enter
xchg
aad
mov
mov
outs
pop
repnz
lods
mov
cmp
inc
pop
mov
jmp
add
rcl
push
jnp
pop
inc
sahf
pop
or
and
sahf
cmp
push
dec
stos
mov
clc
mov
dec
repnz
scas
int3
inc
jecxz
sbb
aaa
push
(bad)
mov
in
ror
mov
retf
outs
shl
pop
push
repnz
push
popf
push
cmps
sti
ror
dec
lds
ins
jno
lods
sub
push
xlat
stc
mov
adc
aam
jmp
movs
test
fstp
xor
stos
std
in
cmps
pop
popa
xchg
pop
inc
mov
not
pop
inc
sub
pop
ror
jns
and
dec
cmc
les
mov
cmp
sbb
shl
push
movs
pop
cmc
mov
adc
sbb
mov
xchg
pop
movs
mov
sbb
push
dec
imul
mov
inc
or
cld
(bad)
mov
call
out
popa
or
jl
outs
cwde
int
push
fbld
xchg
fst
mov
std
sbb
sbb
dec
popf
(bad)
(bad)
dec
test
outs
add
or
push
sar
int
jp
imul
bound
push
cs
pop
and
mov
pop
sti
stos
loope
pop
xor
stc
adc
fstp
out
xchg
out
pop
mov
push
call
mov
xchg
hlt
xor
xor
or
outs
ret
mov
test
jno
enter
jbe
cmp
mov
jmp
aam
mov
adc
xor
cmp
add
inc
aad
sbb
xor
jno
inc
add
adc
dec
cdq
repz
cs
ins
bound
mov
movs
jbe
cs
test
and
and
test
(bad)
jns
(bad)
iret
repz
stos
or
loopne
in
sub
outs
pop
aaa
mov
nop
sub
dec
mov
ret
out
and
mov
pop
cmp
push
and
in
or
mov
stos
outs
sub
out
inc
xchg
adc
out
cmp
movzx
mov
cmp
ins
pop
mov
cli
jne
inc
sbb
sahf
or
add
fs
cmp
fst
jecxz
(bad)
out
inc
scas
mov
daa
cs
jnp
mov
sbb
add
cmp
mov
or
adc
sbb
nop
(bad)
in
mov
sub
(bad)
adc
into
test
out
xor
lds
jnp
lods
(bad)
push
jmp
scas
jle
loop
jns
add
les
dec
iret
jl
sub
xchg
sahf
repnz
jmp
xor
pop
(bad)
adc
loop
jge
pop
into
(bad)
sbb
xchg
xor
(bad)
sbb
jmp
fbstp
adc
sub
pop
pop
cdq
jecxz
lods
mov
or
imul
inc
add
mov
sti
cmc
repz
sbb
lods
neg
mov
push
(bad)
xor
jmp
jns
add
lods
fwait
cwde
popf
add
xor
xor
xchg
mov
out
mov
daa
inc
shl
popa
jne
rol
cli
into
scas
adc
imul
shl
imul
lock
cmps
and
pop
sub
jmp
repnz
popa
test
rcr
xchg
rcl
mov
sub
in
sub
cmc
or
mov
idiv
mov
push
retf
out
xor
adc
(bad)
call
adc
sbb
inc
(bad)
jge
xchg
ficom
nop
test
pushf
xor
retf
popa
xchg
arpl
or
lods
sub
into
pmulhuw
jne
xchg
gs
add
cs
mov
in
in
or
rol
add
out
dec
xchg
jl
sar
inc
sbb
cmp
stos
dec
mov
dec
mov
out
out
adc
fdivp
mov
imul
add
ds
cmps
jne
xchg
fadd
rcl
pop
push
jb
pop
push
gs
lds
add
push
test
add
outs
fcmovnb
repz
xor
mov
mov
movs
stos
sbb
and
int3
mov
push
push
jl
pop
(bad)
repnz
(bad)
ja
mov
(bad)
addr16
das
jb
retf
imul
repz
pop
adc
imul
inc
mov
jle
in
or
and
dec
or
jbe
out
cwde
mov
jbe
out
int
xchg
rol
cmps
push
fisub
mov
xchg
js
shl
adc
xchg
nop
inc
push
lock
adc
nop
mov
cmps
pop
out
or
mov
arpl
cdq
pushf
xchg
jno
aaa
add
out
scas
inc
jmp
cmc
mov
push
pop
test
mov
push
pushw
add
pop
sti
adc
lods
stos
push
sbb
pop
hlt
sub
jns
or
aas
adc
mov
mov
jle
sub
xor
stos
jecxz
ins
ret
bound
pop
gs
add
lahf
ins
outs
jmp
lsl
sbb
or
imul
icebp
inc
lods
arpl
or
mov
sbb
fstp
mov
jns
daa
ret
mov
add
call
cli
loopne
scas
pop
or
lock
imul
into
nop
jecxz
mov
pop
jae
in
push
xchg
add
push
mov
sub
mov
inc
xchg
pop
add
jmp
cld
and
jmp
pop
mov
loopne
adc
test
movs
movs
popf
pusha
inc
sub
cmp
mov
(bad)
mov
add
hlt
jmp
fsincos
jb
jge
push
ds
in
stc
neg
sub
test
jnp
ss
inc
fwait
or
push
xchg
add
into
adc
dec
ret
inc
sti
xor
mov
dec
out
cmp
ret
lods
cmp
pop
jo
xor
and
imul
pop
jb
out
ss
and
shl
ficomp
mov
jg
adc
push
mov
inc
sbb
test
test
mov
mov
mov
inc
mov
ja
popf
inc
mov
popf
mov
add
cs
inc
xchg
clc
or
ja
xor
lahf
mov
jp
enter
mov
adc
jp
xor
cwde
out
jns
retf
push
or
or
in
mov
sub
or
pop
xchg
aaa
xor
outs
cmp
mov
lods
scas
mul
int
test
dec
mov
mov
lds
jl
movs
xchg
sub
call
xchg
enter
xchg
dec
fldcw
mov
test
jne
jne
nop
mov
push
neg
and
mov
fucom
add
cdq
jmp
push
cmovbe
cmp
test
push
inc
sbb
popa
sbb
clc
push
dec
das
pop
inc
outs
(bad)
out
in
inc
mov
pop
lods
ins
jmp
cdq
mov
xor
mov
repnz
sbb
mov
sbb
add
and
push
fcmovu
lahf
jle
shl
jmp
and
xlat
add
sbb
pop
rcr
out
add
in
ins
aad
fild
jecxz
test
add
cmp
repnz
mov
jmp
sbb
or
pop
js
sbb
pop
dec
sbb
outs
cld
adc
xchg
in
sub
scas
jae
jge
adc
jg
jge
in
jmp
pop
dec
xor
jmp
idiv
and
jne
scas
(bad)
push
and
adc
fbstp
out
call
iret
cld
jo
and
loop
inc
(bad)
in
lahf
mov
das
jb
sub
xor
loop
jecxz
aas
dec
pop
jp
call
loope
lahf
or
add
rol
and
inc
std
xor
retf
mov
pop
sti
icebp
push
dec
jecxz
cmp
mov
add
jle
add
sub
adc
pop
pop
call
sub
xor
ja
out
in
fs
xor
neg
addr16
lods
test
mov
cdq
sub
xchg
xor
loop
ins
fsub
lahf
daa
out
ret
or
and
jp
(bad)
aad
out
mov
inc
push
mov
jns
pop
mov
jb
fsubr
jle
xchg
(bad)
call
je
daa
lahf
mov
aas
mov
dec
stos
dec
xchg
rcr
mov
in
dec
test
jb
daa
add
inc
push
jecxz
or
lods
lods
jmp
mov
add
dec
sub
or
dec
and
xchg
jae
imul
and
test
lods
arpl
mov
and
(bad)
mov
or
inc
jne
push
cmps
call
mov
imul
xor
test
pop
mov
xor
in
enter
(bad)
mov
fdiv
mov
jmp
shl
repnz
add
adc
int
clc
lahf
jmp
dec
jne
das
iret
cwde
dec
js
in
mov
and
data16
xor
ins
xchg
aaa
scas
fstp
iret
cmp
stos
fild
inc
js
(bad)
int
pop
aas
lock
add
mov
in
fsubr
(bad)
out
std
jmp
mov
mov
jo
arpl
xchg
push
or
mov
adc
jo
mov
add
adc
call
adc
div
daa
retf
xor
dec
ffree
cmp
or
push
ror
mov
push
and
shr
aaa
xchg
in
out
xchg
dec
adc
jle
and
sbb
cmp
sbb
add
pop
sub
add
xchg
adc
ins
push
mov
(bad)
push
(bad)
iret
in
dec
cmp
sbb
sub
loopne
push
je
or
repz
sub
(bad)
shl
aad
jg
mov
adc
and
and
shl
adc
rol
mov
jmp
nop
mov
push
mov
pop
mov
push
into
cs
or
or
push
aam
sti
or
fidiv
cmp
push
cmp
call
cmp
push
pop
sub
cmp
inc
lock
scas
ja
fiadd
cld
clc
pop
dec
fnstenv
dec
add
jp
xor
mov
mov
inc
add
daa
fisub
fld
loopne
in
cmp
call
movs
sbb
jno
or
pushf
loope
xor
adc
jno
sbb
sub
pop
xchg
dec
adc
les
mov
and
int
xchg
lods
and
jbe
out
sahf
test
jne
mov
jns
lds
cmp
movs
pop
fcmovnbe
hlt
xchg
push
in
out
fld
adc
lahf
dec
sbb
fmul
(bad)
aad
cmp
aas
call
add
lea
aaa
mov
dec
adc
in
cmps
(bad)
aam
mov
movs
xchg
sar
push
test
scas
cdq
cld
jns
cs
inc
cmps
call
xchg
xor
test
aas
pop
add
push
cwde
push
in
mov
in
sbb
sti
cmp
jnp
jb
pushf
lock
sbb
cld
push
fmul
jle
call
cmp
fcomp
xchg
leave
cdq
call
test
sbb
fisubr
stc
dec
cmp
add
aas
mov
(bad)
jl
and
cmc
pop
sub
cmp
mov
retf
ja
out
popa
aaa
xchg
pop
dec
jp
in
inc
mov
mov
scas
cmps
inc
xor
in
fs
add
mov
(bad)
in
movs
mov
in
mov
ret
mov
lock
mov
jmp
sub
sbb
fst
(bad)
add
mov
jae
dec
leave
ja
adc
and
stc
add
ret
pop
xor
mov
push
lock
inc
add
pop
xor
or
call
sbb
push
sub
mov
shr
call
push
(bad)
das
sbb
or
sub
adc
xor
xor
(bad)
sub
push
(bad)
loop
arpl
daa
cmp
sar
mov
sub
ret
les
mov
loope
cmp
test
and
mov
adc
and
out
add
sahf
(bad)
xor
xor
xchg
mov
add
xchg
cwde
fmul
ror
xor
push
shr
push
or
aam
add
and
cwde
(bad)
sbb
int3
test
mov
imul
test
rcr
pop
mov
mov
lds
mov
push
into
jge
mov
sbb
sbb
shr
mov
xchg
jbe
xor
lods
clc
ret
lea
dec
pop
cmp
mov
cmp
lahf
aad
xor
xor
bnd
daa
cmps
jle
pushf
adc
stc
jecxz
fadd
sub
mov
dec
stos
pop
les
mov
adc
movs
test
stos
ror
scas
push
push
ss
pop
int
cmps
pop
dec
pusha
pop
and
or
push
fist
pusha
shr
nop
sub
fmul
ret
ins
mov
push
data16
mov
aam
cmps
jp
sub
adc
ror
jns
mov
mov
lods
mov
jne
cmp
repnz
jg
dec
(bad)
hlt
lds
add
dec
push
fsubrp
cmp
imul
xchg
fsub
test
push
fdivr
cmps
jg
adc
int
or
sbb
and
fmul
xor
add
ficom
aad
movs
mov
imul
and
dec
sar
push
movs
mov
jbe
lods
lahf
je
int3
pop
jg
mov
xchg
mov
fiadd
popa
cwde
xchg
xchg
push
and
cdq
add
repnz
cmps
ret
push
cmp
sub
mov
in
fistp
xor
pop
bound
shr
fcmovnbe
call
mov
movs
cmp
mov
lahf
jecxz
inc
(bad)
xchg
call
movs
inc
retf
out
sub
cdq
mov
mov
jmp
mov
mov
sub
(bad)
cmps
push
inc
lds
enter
jns
cmp
(bad)
jecxz
xor
pop
fnstsw
adc
fdiv
mov
popf
or
jne
(bad)
je
retf
add
cs
push
lods
add
aam
das
push
lds
test
mov
mov
fcmove
mov
cmp
xlat
xlat
outs
imul
pop
bound
jns
push
push
dec
iret
(bad)
stos
aad
pusha
in
adc
je
push
jno
jle
and
sbb
sbb
inc
mov
loope
mov
(bad)
fndisi(8087
pop
cmp
sub
pop
mov
sub
lods
or
sbb
add
and
inc
or
cdq
es
add
mov
mov
mov
popa
arpl
idiv
jl
mov
(bad)
sub
jp
out
clc
sub
mov
(bad)
in
push
sub
sbb
inc
(bad)
in
jbe
and
mov
(bad)
sbb
bound
pushf
outs
hlt
pop
cmps
jbe
mov
(bad)
jo
jno
add
jns
add
pop
cmp
loopne
jo
sub
out
mov
pop
lahf
loope
sub
in
pop
scas
adc
ja
dec
dec
fs
xlat
mov
jmp
ins
and
cld
dec
scas
and
js
jns
jno
mov
into
loope
xor
retf
push
jo
mov
sbb
std
xchg
and
int3
mov
and
inc
icebp
test
popf
jo
xchg
or
add
xor
or
pop
test
out
call
pop
fst
mov
leave
out
inc
dec
push
aas
mov
sub
push
loopne
dec
movs
jmp
dec
sbb
bound
ret
jge
cld
push
xor
xchg
inc
in
adc
test
sub
dec
sar
icebp
sbb
out
xor
mov
test
stos
mov
xchg
aad
outs
push
ds
xchg
daa
add
mov
out
icebp
pop
dec
pushf
pop
xor
pop
neg
loop
(bad)
in
das
sar
lods
dec
repnz
in
icebp
sbb
cmp
push
ja
push
push
xchg
push
jnp
outs
in
and
mov
jmp
fidiv
and
cmp
push
daa
jge
shl
in
dec
retf
dec
rol
and
xchg
leave
or
jmp
test
push
mov
sar
hlt
aam
dec
rcl
(bad)
pop
jecxz
je
inc
test
lods
xchg
push
inc
mov
or
ins
fs
in
or
inc
mov
jmp
in
add
and
sub
call
cmp
cs
test
push
sti
xchg
sbb
adc
push
test
xor
mov
jae
stos
sub
fsub
mov
dec
fsubr
loopne
xchg
js
push
pop
or
push
mov
adc
dec
cli
pop
jns
retf
dec
(bad)
(bad)
pusha
jmp
inc
inc
popf
or
ret
std
sar
or
fs
shl
jmp
inc
es
loope
dec
sar
and
inc
loope
(bad)
sahf
retf
push
int
fst
(bad)
mov
pop
lods
jnp
clc
ins
cmp
adc
test
repnz
push
cmp
cld
imul
bound
inc
add
xchg
repz
and
adc
add
xchg
sub
pop
inc
std
mov
mov
pop
mov
sub
(bad)
mov
ret
cmp
xchg
jmp
lods
xchg
arpl
mov
neg
adc
imul
iret
xchg
push
das
sbb
push
pop
mov
outs
test
(bad)
aaa
out
in
lea
jl
pushf
in
enter
push
loopne
xchg
sbb
dec
mov
sbb
(bad)
out
push
inc
xor
sub
pushf
dec
inc
xchg
jne
dec
mov
mov
cwde
fidiv
jp
cmps
fadd
jp
cmp
mov
mov
mov
or
inc
cs
(bad)
retf
call
aam
stos
dec
xchg
je
shr
sahf
js
or
push
out
push
mov
dec
je
sub
mov
push
out
xchg
sahf
add
adc
data16
adc
dec
and
scas
push
ja
pop
mov
mov
mov
fld
out
outs
mov
fs
inc
stos
movs
push
shl
(bad)
(bad)
dec
dec
pop
mov
xchg
cli
add
(bad)
(bad)
sbb
pop
xor
sub
scas
movs
fist
aad
std
jecxz
das
fdivr
mov
or
rcr
xchg
psllw
int3
stc
push
dec
into
add
push
push
jge
into
and
cli
retf
jo
icebp
sbb
push
add
cmp
mov
pop
sub
dec
adc
int
lds
push
loope
and
loop
mov
scas
test
sbb
ret
fcom
pop
emms
std
push
and
mov
cwde
pop
int3
fidiv
and
mov
icebp
jno
mov
scas
inc
xchg
test
xlat
mul
sti
mov
mov
dec
mov
xor
cmp
push
out
cs
inc
ins
loop
add
jmp
test
adc
out
sbb
icebp
fsub
xchg
pop
fld
(bad)
pop
hlt
push
push
dec
retf
and
lock
xchg
into
xor
or
repz
bound
mov
fs
repnz
rcr
mov
xor
popa
jg
(bad)
cmp
push
adc
mov
lds
shl
ret
jecxz
mov
mov
xlat
pop
jge
(bad)
sbb
xor
cmp
dec
inc
mov
jb
test
dec
or
pop
adc
sbb
out
daa
pop
mov
or
mov
cmp
or
pop
inc
jae
dec
nop
xchg
pop
ret
ror
add
sub
dec
push
mov
out
xor
push
div
mov
(bad)
cdq
enter
pop
adc
adc
inc
jb
adc
daa
or
das
mov
es
out
sbb
in
lea
ficom
xchg
movs
jl
sub
dec
fmul
mov
test
adc
fdivr
cmp
leave
mov
int3
scas
adc
outs
stos
mov
xor
les
mov
mov
enter
lods
add
fadd
les
fimul
js
xchg
xor
mov
and
sti
das
push
inc
rcl
dec
hlt
cmp
out
adc
xor
(bad)
pop
int3
sub
sub
mov
rcl
lods
dec
sub
int
mov
nop
cmp
das
sub
pop
jmp
leave
dec
sbb
xchg
sub
stos
xchg
and
aam
and
int
inc
(bad)
das
daa
cmp
xchg
out
sub
xchg
adc
xchg
mov
push
pushf
add
loopne
mov
mov
sub
in
adc
or
mov
lea
adc
jo
leave
out
sub
adc
jno
(bad)
retf
frstor
arpl
sub
ficom
mov
jno
mov
lds
xchg
sbb
sbb
dec
xor
xchg
in
call
pushf
out
jbe
aaa
push
aaa
adc
cmps
mov
mov
mov
sbb
popf
(bad)
loopne
push
pop
div
leave
mov
pop
jle
inc
in
push
sbb
and
ret
test
fisub
inc
ins
into
cli
xor
out
xchg
ds
shl
cmp
xor
lds
clc
mov
push
lods
out
adc
mov
and
icebp
pushw
div
cli
mov
pop
sub
add
push
pop
rol
loop
sub
adc
cmps
and
adc
cmps
popa
and
or
ret
scas
sub
mov
and
icebp
sub
call
fistp
push
or
mov
push
mov
loope
clc
imul
fldcw
rol
mov
lahf
aam
pop
(bad)
mov
pop
out
(bad)
(bad)
jbe
stc
aam
sbb
and
cld
push
repz
repnz
ja
inc
and
call
je
pop
inc
mov
or
mov
cwde
iret
loopne
push
outs
inc
xchg
fsubr
adc
out
or
scas
dec
cli
jns
cmp
xlat
pusha
and
scas
xchg
(bad)
ja
mov
cli
rcr
adc
jle
call
scas
adc
les
sbb
add
test
popa
fs
in
aaa
mov
xor
dec
push
cli
(bad)
jbe
mov
mov
sbb
jno
or
out
mov
pop
pop
sbb
push
adc
(bad)
ror
dec
mov
int3
xor
pop
jle
sub
addr16
in
jecxz
dec
(bad)
(bad)
into
push
and
outs
addr16
fnstsw
bnd
dec
or
ja
call
retf
test
es
inc
(bad)
inc
pushf
mov
call
jmp
loop
pop
pop
(bad)
in
mov
pop
inc
push
out
jecxz
adc
xchg
or
imul
popa
mov
and
pop
cli
sbb
adc
push
and
mov
xchg
sub
loope
fisub
jns
xor
dec
cmps
(bad)
push
jmp
sub
adc
or
(bad)
fwait
cs
dec
stc
cmp
cdq
repz
mov
xor
adc
jge
mov
sub
cmp
jg
imul
sbb
jb
and
sub
cs
test
fmulp
stos
xchg
jbe
out
fild
mov
mov
out
test
jnp
pop
mov
lock
mov
pop
and
pop
jmp
pop
sbb
es
mov
push
mov
(bad)
mov
mov
jns
aam
pop
mov
mov
push
fs
hlt
iret
pop
ret
jl
push
lock
mov
fidivr
mov
or
mov
scas
pop
sbb
fisub
dec
inc
pop
push
pop
or
outs
pop
xchg
(bad)
jae
xchg
xor
imul
mov
push
lods
retf
cmps
pop
xchg
in
adc
aas
mov
out
push
fwait
cli
jno
nop
xor
iret
cwde
scas
out
adc
les
rcr
add
and
in
in
mov
cmp
adc
lahf
je
fs
mov
repnz
cmp
sbb
stos
sub
js
aaa
outs
sub
mov
bound
mov
bound
in
sub
jl
xchg
sahf
es
sub
pop
addr16
nop
dec
mov
and
repnz
imul
in
xor
and
dec
mov
pop
clc
test
cmp
bound
xor
mov
dec
ficomp
adc
cmp
stc
sub
les
cmps
sbb
pop
mov
pop
ja
inc
test
or
mov
es
gs
loopne
movs
repz
add
or
enter
dec
mov
pop
or
xor
add
fbstp
into
imul
mov
xchg
in
and
pop
push
sbb
push
dec
sub
movs
je
test
bound
les
rcr
or
outs
sub
jmp
(bad)
lock
pop
repz
int3
xor
dec
movs
jae
inc
inc
ins
mov
xlat
mov
adc
movs
call
jb
jo
dec
xlat
xor
outs
dec
and
dec
xor
xor
sub
xchg
jmp
hlt
repz
test
cs
inc
cmp
mov
(bad)
std
dec
push
jl
test
jbe
dec
push
cmps
push
test
std
or
xor
pop
mov
xchg
add
lods
ss
mov
leave
xchg
push
mov
adc
add
pop
scas
out
dec
test
test
sti
movs
adc
lods
out
iret
jno
adc
cmp
movs
mov
std
push
pop
and
fwait
sti
movzx
cmp
iret
ins
cli
sub
inc
jmp
adc
mov
cmps
push
aas
xor
popa
rol
vpcmpgtw
std
sub
rol
out
push
pop
ret
(bad)
aaa
and
mov
push
ins
dec
nop
jl
mov
or
inc
hlt
dec
jbe
jno
stos
sbb
jecxz
push
cmc
or
sahf
sti
mov
mov
mov
loop
and
out
jmp
xchg
enter
sub
jecxz
or
and
out
jno
mov
sbb
mov
push
stos
daa
in
dec
lea
imul
les
daa
fdiv
mov
fstp
sbb
nop
scas
adc
cdq
jecxz
mov
jecxz
jae
cld
add
push
and
and
dec
movs
sub
movs
(bad)
aas
in
xchg
mov
mov
stc
test
fdiv
js
popa
bound
sub
enter
hlt
mov
fwait
arpl
aas
xchg
cmp
mov
jmp
push
shl
push
scas
leave
mov
sahf
inc
dec
and
push
push
scas
sbb
add
iret
xchg
aas
sbb
je
mov
xor
nop
inc
lods
sbb
mov
add
fimul
pop
jg
nop
cmovge
inc
adc
push
and
sti
nop
xor
mov
and
mov
jns
dec
retf
or
pop
jmp
xor
pop
cmps
fidiv
push
stos
adc
fadd
inc
ds
std
rol
jp
jae
pop
adc
pop
jb
fadd
mov
or
xor
push
xchg
lss
lock
lds
push
in
je
cs
mov
lods
mul
sbb
jecxz
mov
jl
adc
nop
mov
cmp
(bad)
pop
mov
jmp
mov
cmps
scas
push
push
mov
pop
imul
test
inc
mov
push
and
popa
adc
mov
cmp
xchg
ds
push
cmps
jnp
mov
lods
fcom
and
mov
test
leave
aaa
mov
mov
test
fs
popa
ret
test
add
sub
scas
xor
xchg
cmp
call
inc
mov
fist
add
cmp
jbe
ins
and
cli
mov
mov
jecxz
lods
cmps
bound
test
or
push
and
bound
out
xchg
add
push
push
mov
jne
es
sahf
cmps
mov
aas
imul
lods
mov
aaa
inc
pop
sub
in
cmp
in
jmp
push
cmc
mul
xor
mov
sbb
ror
inc
sub
nop
(bad)
add
scas
in
xor
out
loope
adc
jbe
add
(bad)
pop
add
inc
pop
lods
cmp
(bad)
xchg
push
ins
pushf
adc
dec
push
sbb
xchg
mov
xlat
aam
push
hlt
sub
xor
cmp
inc
inc
gs
add
sub
mov
call
inc
leave
js
mov
out
mov
adc
sbb
call
ja
cs
fucom
push
(bad)
aad
adc
pop
test
int3
rol
aam
or
cmp
call
pop
out
cmp
mov
out
lea
and
retf
xor
or
pop
sbb
pop
sbb
pop
or
mov
xor
retf
jmp
movs
out
mov
push
(bad)
sbb
jp
adc
sbb
jbe
add
lds
fsubr
aaa
cli
jge
test
xor
aas
xchg
lahf
(bad)
mov
retf
sahf
mov
sub
arpl
cmp
ret
fadd
add
pop
pop
int3
shl
xchg
daa
mov
add
push
dec
iret
jg
ret
xor
push
xchg
pop
bound
inc
dec
js
pop
stc
push
dec
aam
test
pop
out
sub
or
mov
and
push
sub
mov
xchg
add
sbb
inc
mov
test
add
xchg
es
ds
jbe
inc
mov
push
mov
xlat
add
scas
cmp
and
out
push
lahf
jne
dec
imul
and
jle
sbb
push
sbb
gs
pop
imul
cli
in
std
mov
lahf
sub
lahf
jne
mov
dec
arpl
std
adc
(bad)
enter
stos
daa
das
mov
fadd
aad
sti
(bad)
imul
jg
data16
xor
leave
dec
lea
stos
aam
cmp
jne
sahf
into
test
into
cmc
and
xchg
pop
(bad)
cmp
xchg
lea
push
lods
sub
(bad)
fsub
repnz
adc
adc
ss
ret
aaa
or
add
cli
mul
paddw
ficomp
mov
out
clc
or
sbb
test
dec
pop
jns
push
push
retf
scas
jle
sbb
and
js
in
leave
ud0
cmp
mov
(bad)
push
xor
cmp
sbb
xchg
jno
add
add
push
pop
popf
sub
out
adc
(bad)
jne
outs
stc
test
hlt
mov
dec
mov
test
cmp
lds
(bad)
mov
xchg
fmul
(bad)
sar
add
stos
cmp
pusha
ds
inc
mov
mov
add
fld
arpl
xor
dec
psubsw
fiadd
lods
int
adc
push
(bad)
in
ja
jnp
outs
lahf
and
xor
gs
sbb
sub
js
jecxz
std
adc
sub
jbe
adc
jb
sbb
movs
dec
popa
les
fdiv
fs
add
sub
xor
test
mov
jg
(bad)
push
in
xor
jne
push
cmp
mov
add
jae
rcl
mov
rcr
(bad)
mov
or
ret
xlat
pop
(bad)
or
in
add
mov
or
jno
jl
push
xor
push
(bad)
pop
repnz
xchg
mov
sub
or
jmp
jmp
mov
imul
pop
push
not
pop
sbb
sub
xlat
xchg
xchg
adc
and
mov
ins
push
pop
data16
dec
push
xchg
movs
dec
cmp
fs
pop
cmps
scas
xchg
and
mov
push
stos
jl
push
adc
sbb
dec
pusha
stos
xchg
lods
das
rol
xchg
fiadd
sbb
enter
in
pusha
sahf
stc
jb
fisttp
jmp
ins
addr16
into
cwde
repnz
sbb
add
mov
mov
sahf
sti
mov
pusha
fucom
scas
popa
outs
call
mov
arpl
or
add
enter
dec
(bad)
xor
add
enter
pop
test
or
out
cmps
jo
xor
cmp
push
xchg
jecxz
dec
cmp
bound
push
int3
scas
aam
pusha
fidiv
add
aas
cmp
test
sub
push
cmp
fnstenv
scas
(bad)
mov
inc
cld
and
jp
in
sbb
pop
xor
shl
xchg
xor
aam
mov
retf
xor
mov
popa
aad
and
pop
adc
fcomp
push
pop
xchg
push
ins
xor
xchg
sbb
sar
mov
call
movs
push
jb
adc
inc
lods
(bad)
sbb
jmp
test
mov
jecxz
or
jg
sbb
lods
mov
(bad)
js
std
and
int
add
std
push
adc
push
and
push
ror
aad
dec
add
mov
xchg
dec
mov
popa
(bad)
into
out
jge
push
sahf
pusha
mov
xchg
xor
call
out
push
cs
add
retf
push
loop
stos
mov
sub
push
fmul
lea
sahf
mov
jmp
jmp
cmp
shr
jle
pop
in
inc
pop
scas
arpl
jae
mov
ja
mov
push
push
pusha
fnstcw
cwde
fwait
lods
or
inc
jno
scas
fadd
push
retf
inc
cmp
retf
cdq
fild
mov
adc
xor
cmp
mov
mov
jl
in
dec
add
(bad)
push
mov
push
fcomi
lock
pop
xchg
aam
loope
cmps
mov
je
dec
push
dec
push
rol
ret
inc
pop
push
es
xlat
psraw
add
adc
lods
push
leave
inc
not
mov
test
cmp
repz
dec
sahf
out
movs
mov
lods
xor
adc
mov
push
ss
scas
popf
xor
mov
xchg
mov
sbb
cdq
aas
adc
mov
mov
fs
jb
(bad)
test
fsubr
movs
inc
in
mov
ins
(bad)
in
fistp
mov
jne
or
xor
in
cld
ss
outs
fidivr
pop
ins
jb
ds
push
adc
or
mov
pop
scas
pop
sub
in
loop
ret
mov
pop
jg
daa
jae
mov
cdq
push
ins
(bad)
ret
sbb
cmc
push
add
scas
and
(bad)
lock
or
jns
mov
loop
dec
mov
xchg
test
fcom
cwde
xchg
mov
retf
dec
add
js
cli
jge
retf
(bad)
adc
daa
mov
out
inc
sub
cli
adc
hlt
fwait
mov
aaa
ins
cmp
xchg
adc
rcr
cld
push
paddusw
adc
sub
nop
xor
(bad)
pop
xor
das
bound
ja
repnz
cld
movs
mov
mov
cmp
sbb
(bad)
sbb
pushf
add
jmp
jo
fldenv
sbb
push
mov
mov
push
adc
loope
push
adc
jmp
cmp
jae
leave
mov
jle
call
(bad)
fcomp
std
sahf
or
fwait
cwde
ins
adc
mov
shl
icebp
sub
push
sbb
cli
jb
xchg
jl
(bad)
mov
push
mov
push
mov
cli
aad
cwde
lods
dec
jnp
dec
repnz
xchg
arpl
imul
push
cmp
js
scas
outs
push
mov
cmp
push
jmp
out
dec
or
mov
mov
hlt
mov
adc
sbb
inc
sti
and
dec
sar
test
sub
sbb
mov
jns
jno
fsub
cmp
int
dec
call
and
and
imul
cmps
jnp
cmp
cs
jns
arpl
(bad)
sti
jecxz
shl
adc
push
sub
adc
add
xchg
adc
popf
out
(bad)
(bad)
inc
ins
mov
xchg
push
call
jmp
mov
out
xlat
pop
mov
cmp
test
jp
popf
sub
(bad)
cs
mov
sub
add
adc
and
mov
rcr
adc
aam
inc
cmp
js
dec
popa
xchg
mov
push
xchg
adc
and
sahf
fwait
sbb
or
sub
push
jno
or
push
fwait
in
dec
bound
dec
retf
sub
fs
nop
jl
jmp
mov
(bad)
pop
push
sbb
xchg
adc
cmp
pop
cdq
fmul
mov
adc
daa
test
cwde
and
(bad)
push
loope
cwde
cwde
retf
push
cmps
inc
pop
xchg
aas
jne
pop
pop
pusha
xchg
and
loop
popf
rcr
cmp
repz
lock
pop
push
jnp
mov
sub
or
not
idiv
stos
xchg
sub
push
cmps
in
xchg
xchg
cmps
ret
dec
adc
jp
loope
mov
cmp
cld
rcr
movhlps
mov
in
fsubr
xchg
retf
cld
cli
push
mov
jmp
jle
inc
mov
dec
mov
ds
aad
mov
xchg
inc
cmps
jbe
loop
sbb
cmp
adc
leave
enter
das
fidiv
push
or
mov
add
rol
ret
xchg
mov
(bad)
mov
inc
out
inc
sar
mov
jns
mov
push
jbe
pop
push
cs
bound
stc
jle
ss
rol
out
repz
ss
movs
in
mov
call
cmp
mov
adc
scas
gs
ss
cmps
mov
lods
in
push
cmp
jo
jb
vpaddb
outs
mov
aam
adc
adc
ins
loop
mov
xor
jg
cmp
test
bnd
or
shl
jbe
fcom
gs
inc
imul
or
(bad)
jl
dec
pop
mov
inc
add
cmp
jne
dec
mov
lock
frstor
xchg
mov
punpckhwd
popf
push
test
mov
inc
(bad)
in
in
xor
shl
(bad)
dec
xor
push
in
leave
inc
dec
(bad)
stc
in
enter
xor
mov
js
rol
xor
pop
in
movs
push
popf
outs
mov
ds
push
push
dec
js
mov
mov
addr16
add
dec
fld
fs
ss
and
aas
xor
in
aad
adc
enter
aas
dec
repz
mov
mov
inc
and
xor
lahf
jae
test
adc
inc
sub
iret
mov
dec
fdivr
or
cmp
dec
mov
jbe
loopne
sub
jb
repnz
aaa
cld
xchg
into
sbb
test
imul
iret
(bad)
lock
push
mov
xor
or
mov
(bad)
(bad)
push
push
jno
ja
div
mov
lods
inc
push
sar
int3
(bad)
mov
mov
cmc
repnz
cmps
xor
stc
cwde
nop
push
push
arpl
jl
xor
mov
jo
mov
(bad)
xchg
or
(bad)
cmp
mov
xlat
idiv
xchg
repnz
mov
cmp
sar
jmp
push
es
pop
outs
lods
cmp
or
jecxz
stc
xor
sbb
dec
or
scas
sbb
push
add
mov
dec
mov
test
cmp
mov
stos
xor
jb
sbb
push
cmp
int
adc
cdq
push
or
call
in
scas
sbb
and
jmp
ins
outs
(bad)
popf
in
sbb
mov
retf
xchg
mov
add
sbb
mov
mov
fisttp
xchg
ss
pushf
or
add
mov
test
cs
out
xchg
sub
jbe
sbb
cmp
cwde
pop
pop
div
neg
in
xlat
pextrw
pop
add
inc
test
fimul
jge
aad
frstor
xor
jne
inc
mov
xor
cmc
out
in
mov
mov
int
mov
mov
div
inc
test
sahf
jne
fld
ret
push
imul
in
je
jp
aas
mov
pop
call
jmp
ret
ins
xchg
adc
enter
sub
(bad)
adc
push
or
in
dec
adc
(bad)
cli
shl
das
xchg
jle
aam
mov
rcl
int3
sbb
jne
add
repnz
pop
stos
retf
ret
(bad)
pop
arpl
retf
retf
sub
inc
fs
imul
imul
popa
enter
pushf
loopne
mov
inc
mov
int3
cmp
enter
xor
rcl
mov
(bad)
pop
mov
iret
mov
lods
cmp
mov
leave
push
xchg
iret
and
pop
das
jl
aas
sub
jmp
xchg
push
cld
jl
adc
aam
add
inc
cmp
push
leave
out
pop
test
jo
cmp
pop
ror
pop
icebp
xor
cmp
push
shr
push
mov
mov
pop
and
mov
fcmovbe
push
rcl
call
ja
dec
stos
cld
and
sti
test
xchg
iret
cmps
(bad)
mov
and
and
cs
cmps
push
mov
push
ret
pop
jae
movs
not
dec
inc
addr16
mov
jne
not
cmps
mov
cwde
aad
clc
sub
inc
jnp
jnp
mov
in
lods
and
iret
xchg
sub
mov
pop
mov
push
dec
popa
stos
es
xchg
fmul
xchg
je
adc
or
xchg
(bad)
ins
ficomp
sahf
fsubr
je
jb
mov
or
xchg
dec
aam
adc
mov
ror
(bad)
cld
lock
gs
jl
test
fcom
sub
mov
clc
add
sbb
jb
arpl
cmp
out
sbb
out
pop
(bad)
hlt
pop
inc
shl
jbe
jno
stc
stc
inc
scas
loope
dec
dec
aaa
inc
clc
pop
clc
int
push
idiv
pop
dec
sti
js
(bad)
sbb
jnp
pusha
mov
xchg
and
pusha
sub
jns
lahf
sti
test
pop
daa
out
(bad)
and
icebp
mov
push
std
retf
fidiv
xchg
cmps
push
or
out
xchg
push
imul
inc
add
push
mov
(bad)
sub
mov
push
cli
popa
or
out
jmp
ret
inc
ret
lods
popf
out
or
imul
push
cmp
xor
stc
pop
xchg
xchg
inc
jp
jmp
pop
jmp
xor
mov
ja
daa
inc
pop
add
adc
bound
retf
das
add
minps
xor
cmc
fwait
sbb
retf
add
(bad)
xchg
aaa
mov
std
inc
inc
jp
add
mov
addr16
mov
shl
fsub
and
(bad)
sub
inc
xor
(bad)
xchg
test
shr
fisttp
adc
pop
je
dec
les
jb
out
mov
mov
retf
mov
or
outs
mov
mov
and
or
dec
(bad)
mov
xor
mov
pop
adc
jnp
sbb
or
sbb
and
sub
pop
pushf
push
mov
pop
(bad)
mov
lahf
mov
pop
mov
jmp
and
xor
les
jg
xchg
cmps
js
setns
sub
jnp
in
inc
cmps
inc
jecxz
or
xchg
push
js
jmp
jge
dec
test
(bad)
hlt
inc
ins
mov
(bad)
repnz
loop
inc
dec
mov
sbb
dec
stos
movs
or
test
mov
pushf
mov
xor
adc
test
fcom
mov
dec
mov
adc
sbb
cmp
adc
sbb
dec
xchg
cmps
fild
pop
xchg
and
adc
or
mov
shl
(bad)
call
adc
lds
pop
fsubr
jmp
fsubr
(bad)
push
and
retf
aas
mov
in
bound
shr
and
mov
cmp
movs
sub
mov
or
xchg
pop
xchg
cwde
int
ds
sar
sub
aad
dec
mov
xor
loopne
mov
int3
dec
or
and
sti
and
in
sub
ret
imul
(bad)
dec
outs
lods
or
(bad)
sbb
test
shl
fs
test
xchg
adc
call
aad
or
sbb
fadd
es
fcomp
jns
adc
ds
add
jnp
or
cmp
inc
pop
aas
(bad)
and
xor
stc
mov
pop
mov
adc
xor
pusha
inc
aam
adc
push
cmp
rol
mov
add
sbb
fsub
xchg
movs
or
inc
test
jo
adc
daa
enter
ins
loop
dec
test
(bad)
pusha
dec
sub
cmp
icebp
push
push
push
nop
xor
jmp
add
mov
jp
mul
pop
cmp
push
test
dec
pop
fidiv
fisub
pushf
push
ss
addr16
inc
dec
mov
movs
lods
mov
enter
frstor
xchg
xchg
and
and
pusha
xor
adc
sub
pop
cs
lods
jecxz
cmp
cmps
lods
js
int3
pop
je
dec
jle
test
or
cli
cmp
mov
xchg
popa
push
dec
ja
add
fmul
mov
cs
dec
mov
adc
fwait
aaa
xchg
jmp
imul
aaa
sub
inc
mov
sti
rol
test
mov
movs
dec
inc
inc
or
sbb
ins
loope
movs
ret
fadd
dec
(bad)
outs
jg
iret
add
nop
mov
and
jmp
push
cmp
jne
jns
sub
out
test
movs
int
dec
xor
mov
dec
pop
arpl
js
imul
mov
jns
(bad)
sub
jecxz
and
jmp
daa
push
cwde
inc
pushf
arpl
push
sahf
aad
call
icebp
xchg
add
push
push
mov
loop
pop
dec
(bad)
std
sbb
mov
dec
shl
aas
pop
xchg
sar
test
rcl
inc
sbb
addr16
adc
mov
or
sbb
mov
leave
ds
ret
mov
repnz
xchg
fadd
loope
out
jo
out
add
inc
ds
loopne
add
out
repz
sub
mov
mov
or
inc
mov
cli
dec
repz
cwde
adc
mov
fimul
add
xor
(bad)
cmp
lahf
pop
push
pop
sub
arpl
mov
inc
lock
call
or
in
movs
in
rol
or
inc
retf
gs
mov
data16
inc
fmul
add
dec
dec
test
pop
aas
gs
sbb
fistp
je
xchg
adc
call
rcl
fld
or
mov
js
sub
mov
jbe
mov
mov
inc
dec
or
cld
mov
repnz
pop
movs
adc
mov
bound
jg
jb
cmp
das
mov
add
mov
add
jno
popa
sbb
pop
jmp
sub
sub
in
ins
and
xlat
sub
int
cmp
stos
mov
push
les
fisttp
jo
jo
and
xor
add
call
push
data16
xor
loop
out
xchg
mov
loope
(bad)
loope
out
add
test
aaa
mov
and
jmp
dec
lds
jl
clc
dec
loop
js
and
cmc
movs
dec
mov
gs
(bad)
bound
iret
icebp
push
mov
outs
and
fadd
dec
or
fisubr
or
xchg
shr
xchg
dec
fdivr
repnz
fstp
adc
imul
xchg
push
and
xlat
(bad)
jbe
jle
adc
lock
(bad)
mov
ficom
movs
add
fist
mov
das
or
push
add
xchg
mov
shr
inc
xor
dec
(bad)
add
out
jno
ja
adc
jae
dec
(bad)
xchg
ja
cmp
aas
jno
xchg
dec
xchg
or
lea
xchg
cmps
adc
mov
mov
and
dec
mov
mov
pop
ret
out
sbb
popa
sbb
jg
inc
xchg
repnz
sub
adc
sbb
xor
pop
sahf
daa
nop
mov
(bad)
das
xchg
bound
xor
mov
dec
outs
sub
inc
cmc
out
outs
les
imul
and
dec
adc
push
movs
nop
sahf
movs
mov
cmp
sbb
(bad)
mov
fs
int3
cmp
bound
push
out
mov
mov
sar
and
int3
ror
and
cmc
inc
movs
or
pop
pushf
popa
dec
test
js
add
jmp
rcl
push
in
pop
adc
pushf
cmps
xor
xor
shr
xchg
loop
push
call
cli
loop
pop
xlat
ins
mov
or
sub
adc
inc
and
cwde
std
retf
test
loop
push
cmps
ds
(bad)
push
pop
std
in
xor
dec
retf
arpl
jb
pop
pop
xchg
out
push
or
fdiv
add
ficomp
fisubr
in
sti
fadd
pop
pop
ds
jns
xchg
ins
shr
imul
out
faddp
jmp
loopne
aaa
push
jg
dec
xchg
push
repnz
hlt
sub
jp
mov
mov
fsubr
xor
inc
fnstcw
adc
lock
repnz
call
and
push
das
mov
mov
dec
(bad)
mov
xlat
and
popf
std
test
in
lahf
aad
es
stc
push
inc
cmp
fmul
mov
sbb
mov
sbb
cmp
loopne
mov
sub
jno
dec
xchg
push
movs
xchg
jmp
in
push
sti
inc
mov
(bad)
dec
ins
data16
(bad)
jne
mov
or
inc
not
dec
iret
dec
push
jmp
mov
in
push
int3
fistp
sar
iret
inc
mov
push
mov
push
push
sbb
enter
sahf
push
jnp
loopne
int3
mov
test
addr16
retf
ret
mov
mov
rcr
sbb
xchg
jbe
cmp
clc
jecxz
loope
in
and
enter
jb
nop
xor
jle
jge
sub
and
mov
and
xor
adc
xor
cmps
adc
jmp
or
loope
add
xor
lock
push
inc
dec
pop
cld
leave
sti
xchg
dec
xchg
mov
popa
jo
ret
int3
push
dec
sub
sub
sbb
popf
arpl
add
jge
jbe
push
xchg
mov
cmovp
push
fidiv
jg
les
pop
rol
hlt
cmc
sub
out
xchg
fist
sbb
dec
fsubr
sbb
ins
push
out
loop
arpl
inc
or
xchg
ror
shl
cmp
xchg
and
jb
cmp
fiadd
dec
and
cdq
clc
std
adc
mov
movs
int3
lea
leave
xchg
scas
jecxz
add
jae
outs
sbb
push
xor
add
push
lods
mov
in
jecxz
add
out
add
loopne
ja
sub
pusha
push
push
call
ret
adc
sbb
stc
add
sub
lds
daa
gs
in
push
xor
fidiv
fld
push
xchg
mov
adc
pop
fwait
js
retf
loopne
jns
mov
retf
into
aam
jb
aad
(bad)
jge
aaa
fild
fldenv
test
(bad)
out
mov
pop
stc
add
lock
aam
sub
addr16
(bad)
pop
in
mov
cld
pushf
and
stc
in
icebp
push
jle
addr16
push
mov
ds
ins
mov
jo
int3
xchg
or
fimul
cwde
in
pop
add
push
retf
xchg
out
and
and
lds
inc
mov
and
mov
jp
ja
push
adc
add
mov
sbb
pmulhw
mov
inc
out
in
xor
jae
(bad)
std
xor
inc
(bad)
cmc
cld
xchg
xor
leave
push
sub
cmp
cmp
outs
or
jmp
fsubr
lea
push
fisub
mov
or
retf
adc
or
rcr
mov
rcr
push
or
jns
pop
adc
(bad)
pusha
ret
sbb
adc
push
push
jae
das
call
inc
daa
pop
jl
cld
hlt
sbb
jmp
fsub
test
cmp
lds
sahf
ds
xchg
jbe
inc
loop
les
and
xchg
or
or
cwde
retf
push
push
pop
retf
push
dec
test
into
cdq
sub
add
call
add
dec
pop
mov
pop
jecxz
jbe
in
iret
es
lea
popa
jl
jns
pop
out
ja
out
retf
es
and
pop
mov
rol
test
inc
mov
aaa
(bad)
lods
popa
shr
jae
int3
inc
sbb
mov
cs
inc
xchg
add
push
or
in
dec
add
xor
xchg
in
mov
and
sub
inc
in
data16
clc
xor
inc
xchg
pop
add
fimul
lods
sbb
shl
and
(bad)
(bad)
push
mov
or
pop
(bad)
int
js
stc
pop
inc
out
dec
sahf
jmp
cld
push
sub
mov
(bad)
adc
mov
popf
sub
xor
stos
push
push
sar
out
mov
or
cdq
ficomp
inc
mov
nop
(bad)
popa
mov
xchg
jl
push
cmp
xor
push
or
xor
push
fldenv
pop
xor
aam
xchg
call
jbe
test
shr
shl
retf
sub
dec
rcr
add
fsub
retf
enter
jg
jmp
mov
arpl
mov
mov
jae
push
call
pusha
cmps
loope
hlt
icebp
(bad)
push
int
not
cmp
aaa
adc
cmp
pop
daa
aas
pusha
adc
stc
fs
mov
cs
jg
inc
and
dec
push
js
sub
mov
imul
and
xchg
repnz
adc
or
(bad)
sbb
dec
pushf
pop
in
adc
pop
cmps
movs
(bad)
push
jo
neg
(bad)
jmp
or
and
sub
int3
iret
arpl
cmp
cmp
fwait
jmp
xor
and
and
xor
mov
adc
and
or
add
jns
loop
mov
iret
mov
sbb
in
(bad)
add
jl
push
das
aas
xor
out
jecxz
pop
dec
rcr
cmps
and
push
cli
(bad)
add
mov
jo
add
mov
cmc
pop
(bad)
cmp
inc
ret
lock
ret
xchg
mov
add
in
xchg
cmp
repz
es
dec
bound
sbb
dec
out
in
daa
and
mov
cmps
xlat
out
sub
aad
fst
clc
cmp
xor
call
in
scas
jb
jae
dec
test
mov
mov
mov
or
mov
(bad)
shl
neg
paddsb
addr16
and
fsubr
jno
mov
dec
cmp
or
test
mov
xchg
lea
inc
mov
out
push
retf
in
push
movs
xor
jmp
loopne
idiv
dec
addr16
stos
ss
pushf
sbb
or
outs
pop
into
adc
jp
sbb
in
aad
ror
lea
mov
adc
fimul
lahf
sbb
xchg
pop
adc
adc
ror
push
push
into
xor
jmp
cld
ins
fild
mov
dec
mov
in
adc
push
sub
inc
(bad)
enter
std
xor
sub
mov
rcr
jbe
aaa
dec
mov
push
jecxz
or
mov
clc
jecxz
(bad)
lahf
push
sbb
stos
lods
adc
xchg
dec
popf
pop
cmp
stos
sti
adc
add
cmp
nop
aam
inc
add
sub
and
sub
popa
dec
out
xchg
loope
mov
or
mov
xchg
and
fmul
(bad)
push
data16
xor
mov
jno
aam
xchg
mov
xchg
fsqrt
enter
adc
imul
rol
int
sub
data16
xor
ins
repz
fbstp
loope
lahf
sub
mov
adc
sub
adc
call
ins
fwait
stos
dec
sbb
push
(bad)
int3
mov
mov
xor
cdq
mov
sahf
sub
mov
xchg
ins
cmps
cmps
inc
cmp
mov
and
into
imul
out
mov
(bad)
sbb
popa
daa
xor
out
outs
inc
adc
xchg
dec
rol
dec
scas
dec
bound
std
and
push
imul
cmp
cmp
and
mov
or
mov
inc
mov
sbb
in
add
inc
aad
dec
jle
sub
push
(bad)
into
pop
into
add
xor
rcl
or
(bad)
jle
xor
and
es
or
cmp
lock
xor
mov
inc
adc
int
aam
dec
sbb
mov
nop
xor
cld
shl
sbb
pop
mul
hlt
dec
mov
adc
xlat
or
sub
jle
fild
xor
cmp
dec
xchg
std
push
xor
add
sbb
inc
movs
in
cs
mov
xlat
rol
iret
lea
les
xor
cdq
idiv
shl
add
out
pop
(bad)
fist
dec
xchg
lock
rol
ins
sbb
and
mov
pop
loopne
outs
cmc
inc
aas
push
dec
mov
ror
mov
jns
jb
dec
push
or
adc
enter
or
out
xchg
cmp
retf
clc
mov
mov
sbb
lods
ror
mov
std
and
lods
or
mov
fst
push
jle
pop
test
repnz
xchg
test
pop
inc
mov
sar
cli
jge
rol
out
jg
in
mov
push
or
cmps
jle
in
in
add
add
ja
or
push
jo
push
enter
mov
lds
pop
pop
loope
mov
cdq
into
cmp
mov
jno
add
adc
cs
fst
cmp
popf
pop
mov
call
push
popf
jp
ja
inc
mov
ficom
mov
mov
pop
and
jl
aas
cmp
sbb
jmp
out
or
push
pop
mov
mov
fidiv
call
add
sbb
add
push
outs
pusha
dec
push
add
push
mov
popa
out
retf
mov
sub
push
int3
mov
fcmovbe
call
nop
in
shl
dec
lds
imul
scas
pop
retf
enter
pop
jne
or
pop
inc
imul
mov
jo
sub
inc
pop
xlat
xchg
aad
in
push
mov
cmps
rcr
(bad)
push
les
push
imul
cmp
test
imul
jmp
cmp
jmp
jnp
lahf
outs
loope
jbe
and
pop
arpl
add
sub
dec
push
add
sbb
xlat
in
cmp
jns
nop
mov
loop
dec
jb
sub
ins
data16
scas
data16
bound
and
add
in
aam
dec
fwait
adc
xor
mov
pop
push
xor
mov
retf
js
out
aas
and
out
pop
aam
mov
jge
movs
mov
mov
lds
popf
sahf
mov
aas
imul
mov
xchg
mov
mov
cmp
aam
xor
xor
add
and
jnp
sbb
js
adc
aam
cmp
test
jns
and
fwait
push
push
jnp
add
and
cmp
mov
and
sahf
mov
lea
shr
scas
call
mov
mov
mov
icebp
pop
fwait
in
fwait
inc
das
inc
loopne
adc
addr16
les
je
fdiv
push
arpl
push
inc
pushf
jb
mov
sub
lods
mov
mul
mov
aaa
into
lock
cmps
and
push
mov
int
test
xchg
xchg
mov
mov
push
or
dec
jp
das
or
and
dec
jmp
rcr
cmc
dec
repz
mov
mov
ins
scas
out
in
mov
and
mov
arpl
cmps
mov
jnp
mov
fld
xor
and
das
sbb
(bad)
test
sub
or
retf
(bad)
imul
jmp
mov
sti
add
xchg
hlt
xor
fadd
jno
xchg
xchg
xchg
test
pop
popa
push
lods
sbb
arpl
ficom
(bad)
popa
leave
jmp
adc
(bad)
retf
push
out
jae
cs
xor
mov
ins
and
and
push
xchg
addr16
push
inc
add
test
xor
mov
pop
mov
xchg
and
out
and
add
mov
mov
pop
shr
xor
or
pop
movs
ins
push
in
test
pop
sub
dec
loopne
hlt
ja
and
dec
mov
test
pop
xor
(bad)
jmp
pop
nop
mov
mov
xchg
add
jge
fild
cld
add
mov
sbb
add
adc
cmp
xchg
popa
and
repz
cmp
jg
gs
out
sbb
inc
out
xchg
sbb
inc
sub
pop
lds
or
xor
in
(bad)
ror
and
mov
xchg
cs
cmp
xchg
dec
inc
repnz
push
inc
inc
addr16
inc
fild
sub
add
push
sbb
(bad)
sar
pop
test
add
inc
pushf
aaa
xchg
(bad)
mov
adc
retf
dec
loope
inc
repz
les
dec
dec
sub
mov
jae
xchg
dec
lahf
sbb
cdq
or
or
xor
shl
call
pop
int3
push
mov
out
mov
or
fld
mov
pusha
call
mov
or
movs
or
call
jne
imul
rcl
cmp
fmul
mov
out
cmp
mov
xchg
sub
cmp
popa
sahf
add
adc
leave
cmps
aam
jo
cmp
pop
(bad)
rol
cli
mov
mov
(bad)
ins
mov
repz
push
gs
call
xor
add
out
pop
mov
and
ror
xor
and
add
ret
mov
cmps
test
xor
ins
mov
ins
call
rol
and
call
out
dec
dec
xor
inc
push
push
jo
or
sub
fucomi
das
stos
enter
movs
add
jns
and
sub
dec
xlat
sbb
pop
mov
jnp
xchg
dec
sub
push
lods
(bad)
cs
mov
loopne
dec
and
out
pusha
push
dec
cwde
mov
sub
nop
fwait
lea
jg
xor
mov
(bad)
out
xchg
dec
bound
inc
or
sub
mov
push
clc
add
pop
ret
mov
lahf
stc
xor
daa
dec
mov
scas
mov
pusha
retf
test
mov
mov
stc
xor
dec
mov
push
push
scas
and
jo
push
adc
xchg
test
jecxz
shl
lahf
pop
loop
gs
jbe
repz
jl
sbb
dec
ins
ja
jnp
push
mov
or
cmp
adc
outs
push
xor
jo
ficom
ins
adc
mov
mov
mov
xchg
jmp
ficom
dec
daa
sbb
xchg
ss
imul
ins
inc
sbb
xor
mov
out
in
or
sub
aad
sbb
sub
gs
sbb
nop
fwait
xchg
sub
scas
out
movs
cmp
push
push
pop
fidiv
movs
mov
push
pusha
movs
pop
mov
(bad)
adc
aaa
std
(bad)
mov
loope
jmp
mov
xor
aaa
push
sbb
pop
or
fnsave
jo
es
les
jp
push
mov
cmp
jecxz
and
loope
repz
fwait
icebp
push
or
mov
push
cwde
retf
jae
add
(bad)
idiv
out
xchg
(bad)
add
xchg
adc
mov
add
jno
jg
int
fadd
shl
sub
cmp
jle
jl
ins
inc
xchg
cmp
mov
mov
clc
jg
outs
movs
xchg
ror
lods
cmps
xchg
outs
add
pop
fwait
call
pop
in
ins
leave
test
pslld
(bad)
jmp
pop
pop
test
inc
cmp
ret
mov
inc
ins
add
cmc
sbb
mov
pusha
jecxz
out
daa
(bad)
xor
sub
imul
movs
fisttp
(bad)
adc
(bad)
xor
aam
nop
out
pop
sbb
add
mov
cmps
dec
and
shr
dec
add
adc
les
bound
mov
inc
pop
daa
xor
xchg
ret
repz
fldenv
jns
push
or
xor
add
or
inc
fild
ds
mov
and
and
add
inc
not
(bad)
pusha
call
stc
jle
inc
mov
jge
into
cdq
sbb
imul
int3
(bad)
(bad)
jg
ror
pop
(bad)
outs
adc
jmp
xor
xchg
mov
in
aaa
xchg
lahf
dec
push
cdq
inc
lods
fbld
add
cmps
inc
pop
scas
or
mov
cmp
jb
pop
(bad)
jmp
je
aad
sbb
lods
int
stos
out
mov
add
scas
sub
scas
jp
hlt
adc
iret
xor
loopne
mov
mov
inc
movs
sbb
(bad)
in
or
fld
clc
fwait
push
movs
and
sti
(bad)
inc
and
sub
imul
mov
es
sbb
sbb
xlat
mov
test
ret
sbb
rol
mov
lock
cmp
stos
fdiv
inc
pop
adc
mov
mov
inc
mov
fcomi
iret
push
push
lock
sub
movs
scas
hlt
inc
js
push
int
push
add
lock
xchg
or
and
ja
ins
idiv
sbb
repz
imul
aam
mov
pop
addr16
adc
mov
fs
into
retf
test
jg
inc
sbb
and
xor
pop
test
xor
xor
lods
imul
adc
outs
aad
inc
inc
cmp
sub
outs
push
repnz
lods
mov
scas
cmp
retf
inc
xor
mov
pop
mov
xchg
shl
inc
rol
dec
xor
retf
(bad)
push
pop
sub
aaa
mov
hlt
int
and
aas
cdq
push
fcmovbe
adc
out
cmp
pop
push
adc
es
das
iret
rcl
xor
call
inc
jb
ss
mov
cmp
mov
mov
xchg
xchg
fwait
lock
inc
pop
jae
push
cmp
cwde
(bad)
jmp
neg
inc
popf
imul
mov
mov
shl
dec
ds
mov
fdivr
pop
push
in
jo
adc
cli
cdq
jge
mov
test
bswap
sub
sbb
mov
mov
mov
cld
aas
mov
in
dec
xor
(bad)
pop
or
xor
in
outs
bound
aas
pop
mov
xchg
rcl
pusha
jg
je
outs
inc
cmp
test
pop
retf
mov
ins
lahf
ret
push
out
push
pop
xlat
into
icebp
xor
inc
mov
lds
shr
outs
iret
and
jmp
xchg
push
call
retf
mov
dec
add
cld
mov
in
pop
retf
idiv
imul
adc
jg
cmps
push
mov
je
add
cld
xor
loopne
sub
jg
push
nop
xor
out
jno
fiadd
popa
aam
test
jae
jg
inc
int
xor
scas
leave
cmps
adc
mov
int3
std
push
and
out
test
popf
movs
popa
std
xchg
add
ins
rcr
je
shr
mov
fstp
xchg
sub
(bad)
div
pop
out
(bad)
in
pop
shl
rol
mov
aaa
and
jmp
fidiv
adc
lahf
icebp
mov
outs
add
sti
in
sbb
je
repnz
xor
iret
mov
dec
dec
inc
es
xor
add
(bad)
hlt
pop
rep
fidivr
shl
cs
data16
repz
adc
ja
sub
sub
call
mov
rol
push
les
mov
repnz
or
rol
add
hlt
into
ret
hlt
mov
int3
and
adc
pop
lods
pop
nop
fwait
jns
inc
dec
push
test
lea
push
push
jbe
push
cmp
ret
inc
ror
loopne
sub
jo
sbb
and
mov
push
cli
cld
iret
(bad)
mov
xchg
pop
sub
or
icebp
shrd
fld
sar
push
repz
sub
mov
scas
push
neg
push
jecxz
mov
sub
pop
sub
mov
sbb
or
push
push
(bad)
cli
test
stos
pop
xor
mov
mov
fcomp
add
addr16
fsubrp
mov
aam
mov
adc
pop
mov
call
(bad)
mov
arpl
mov
bound
or
popa
cs
in
or
push
inc
jbe
adc
mov
and
mov
push
popf
punpckhbw
pop
push
std
sub
lahf
into
aaa
stos
call
push
xchg
mov
and
pop
adc
xchg
mov
xor
mov
stos
pop
test
inc
add
jns
cmp
iret
xchg
mov
cli
in
les
push
lods
leave
cmp
mov
data16
adc
iret
js
cmp
sbb
jmp
call
ins
cmp
mov
xchg
jbe
gs
mov
enter
jns
push
arpl
lods
adc
add
dec
add
aas
sbb
jo
and
and
sti
daa
imul
in
xor
movs
mov
push
inc
enter
aad
rol
sar
mov
pop
mov
mov
fwait
jecxz
jbe
dec
imul
and
mov
sbb
aam
std
xchg
pop
sahf
mov
inc
or
push
cdq
mov
in
cwde
adc
xor
mov
fs
ret
je
pop
(bad)
xchg
mov
es
add
push
cdq
movs
out
jmp
pop
pushf
dec
test
adc
pop
cld
hlt
jo
sbb
ret
jns
mov
jmp
in
loopne
adc
or
fistp
fwait
in
lock
(bad)
fsub
adc
cmp
fsub
jge
lea
rcl
outs
arpl
ss
addr16
imul
pop
loop
das
mov
cs
sahf
cwde
sbb
adc
ret
jl
dec
mov
mul
call
jae
and
ret
popa
repz
fsubr
xchg
lods
cmc
inc
nop
cmp
dec
jmp
jbe
sbb
in
add
out
pop
cmp
add
and
mov
shr
bound
pop
sbb
inc
adc
sar
ds
int3
push
and
mov
jne
pop
or
js
pop
xchg
not
aaa
retf
xlat
mov
retf
mov
(bad)
out
out
retf
and
retf
call
arpl
idiv
push
jmp
cli
adc
pop
sub
jo
ins
stos
data16
popa
fdiv
push
in
or
dec
fisubr
cmp
lea
xchg
lods
dec
sti
inc
outs
imul
repnz
add
dec
xchg
add
ror
scas
cld
or
push
pop
sub
jo
jb
dec
retf
scas
ret
ja
sub
int
stc
hlt
pusha
mov
adc
cmp
adc
in
mov
outs
out
inc
sub
(bad)
getsec
pop
sub
sub
sub
cmp
xchg
mov
dec
xchg
addr16
popf
sbb
xlat
xchg
pop
jl
imul
sbb
jecxz
std
(bad)
push
enter
mov
fiadd
dec
xor
pop
push
xor
pop
imul
es
cdq
xchg
sub
call
push
movs
sbb
sbb
and
js
leave
(bad)
daa
mov
popa
pusha
rcr
out
and
push
jo
ins
stc
jo
inc
popf
in
mov
adc
sahf
inc
mov
or
pop
mov
sbb
test
or
test
mov
shl
and
jae
cld
push
cs
fmul
xchg
lods
cmps
push
lahf
xor
in
push
in
jmp
fwait
pop
pop
fst
push
push
popa
add
push
rcr
in
shl
jmp
mov
js
gs
cmps
jp
xor
mov
mov
fimul
test
scas
arpl
cmc
push
mov
stc
and
sbb
(bad)
and
add
je
pop
call
push
inc
arpl
sbb
inc
push
sbb
das
and
jmp
mov
mov
fisub
xor
xchg
hlt
out
out
mov
retf
mov
add
pusha
jae
adc
mov
lds
cdq
ins
add
ins
lock
cmp
dec
mov
push
das
push
sub
lock
or
dec
xor
add
and
in
aaa
pop
fst
mov
imul
inc
pop
push
out
sub
xchg
jg
mov
push
sbb
cmp
addr16
cdq
sub
cmp
sub
fcomp
or
mov
loope
mov
mov
inc
jne
push
arpl
and
stc
push
outs
mov
mov
push
pop
mov
imul
add
hlt
add
outs
(bad)
push
in
jae
jb
and
push
addr16
retf
inc
cmp
fwait
mov
lea
add
pop
les
xor
mov
and
out
clts
stos
lds
call
fsubrp
ret
or
sbb
in
mov
(bad)
mov
push
ins
shl
cmp
pop
cli
jae
xor
mov
push
das
fisttp
dec
std
inc
(bad)
jno
cmc
xchg
enter
cmp
xchg
mov
and
(bad)
xchg
fbld
lock
call
gs
xchg
aad
movs
(bad)
add
out
mov
mov
cwde
mov
lahf
xchg
xor
mov
repnz
loope
hlt
push
daa
cmp
cdq
mov
daa
test
mov
inc
inc
mov
punpckhwd
xchg
arpl
inc
(bad)
je
das
stos
push
and
loope
scas
je
js
dec
push
jmp
sub
sub
and
or
push
mov
sub
cmp
jle
xchg
xlat
leave
push
push
jl
test
jge
ds
jle
mov
rcr
mov
xchg
pop
leave
xchg
add
arpl
add
retf
shl
inc
ficomp
mov
push
mov
cwde
loopne
pop
fs
mov
adc
xchg
in
pop
inc
hlt
gs
test
mov
pop
ss
inc
mov
fld
mov
imul
adc
cmps
mov
cmp
lods
not
cmp
int
inc
mov
fcmovb
sub
xchg
or
push
mov
xor
test
jae
jmp
cmps
xchg
in
xchg
hlt
dec
mov
push
jge
push
dec
xchg
call
fcom
add
jmp
pop
inc
in
(bad)
inc
out
inc
icebp
inc
push
adc
leave
in
push
les
xchg
fwait
ss
test
rol
mov
ret
sbb
push
into
into
dec
pushf
mov
dec
repz
cmp
inc
jbe
enter
nop
and
fcmovnu
sub
mov
mov
jecxz
push
inc
sti
cli
push
shr
scas
or
mov
jle
pop
sar
shr
fcmove
cmp
ins
popf
stc
scas
ret
pushf
rol
mov
ins
adc
dec
xchg
jns
cmp
cmp
popa
xor
inc
mov
mov
icebp
out
les
in
jns
jl
and
aas
add
std
dec
xor
adc
movs
inc
or
fcomi
xchg
dec
mov
inc
or
mov
mov
inc
in
sti
sbb
scas
dec
jmp
and
pop
sbb
clc
dec
fdiv
cli
aam
aaa
or
xchg
mov
scas
jmp
ficomp
inc
mov
imul
add
cmp
out
pop
dec
shl
ror
mov
aad
push
sub
rcr
adc
test
jge
or
adc
outs
inc
ret
fs
pop
call
ret
jmp
daa
gs
leave
mov
mov
scas
dec
loope
popa
sbb
jbe
fs
and
pushf
adc
loopne
or
push
and
lahf
dec
jecxz
inc
repnz
push
cmps
jbe
sbb
lock
lea
mov
or
or
xchg
push
and
and
out
dec
out
add
repz
icebp
dec
lods
inc
lahf
cmp
and
or
sahf
or
mov
xchg
(bad)
and
xchg
and
dec
cmp
sub
inc
out
std
jl
pushf
cmp
cwde
js
sub
sub
loope
and
xchg
push
or
loopne
mov
popf
add
(bad)
push
pop
addr16
mov
and
mov
popf
xchg
enter
push
and
and
pop
out
shl
jg
or
int
dec
movs
jne
aaa
mov
push
push
jg
mov
dec
rol
int3
adc
test
hlt
daa
pop
int3
mov
aam
shr
loope
cmp
enter
mov
or
sbb
cmp
xor
lods
clc
jmp
test
adc
mov
sbb
lahf
xor
hlt
fcom
(bad)
cs
xchg
retf
mov
retf
outs
daa
or
loopne
dec
jmp
push
loope
xchg
ret
xor
dec
mov
hlt
jge
mov
fidiv
mov
in
in
sbb
jp
gs
pop
mov
(bad)
mov
mov
lea
sub
adc
or
xor
sbb
adc
(bad)
(bad)
mov
jmp
mov
inc
mov
test
jmp
jo
push
mov
mov
int
es
pusha
cmp
jle
push
push
clc
mov
loop
dec
std
sahf
mov
test
loopne
dec
nop
mov
xchg
cmp
adc
in
out
xchg
jbe
in
jb
fwait
retf
sbb
std
jno
xchg
sub
jle
fcomp
inc
inc
adc
and
push
dec
(bad)
shl
rol
cdq
xor
loope
not
lds
mov
mov
lock
int3
xor
imul
or
mov
div
dec
sbb
or
cmp
loopne
mov
push
test
fwait
ja
or
adc
mov
bound
(bad)
int
xor
push
or
adc
std
jno
(bad)
shl
dec
sbb
repz
or
out
bound
mov
test
cmp
jmp
dec
push
mov
jnp
imul
hlt
test
retf
cdq
jle
sub
or
loope
outs
fisttp
(bad)
(bad)
imul
imul
add
scas
or
mov
jecxz
mov
push
daa
dec
mov
movs
jo
stos
or
iret
cmp
ins
repnz
push
fiadd
(bad)
aad
lds
jle
push
cmps
ss
xor
pushw
test
pop
(bad)
jae
scas
inc
pop
sub
xlat
pop
dec
das
pop
icebp
lock
sub
movs
inc
inc
mov
shl
dec
pop
cld
cmps
mov
or
add
arpl
pop
sahf
mov
gs
test
mov
clc
stc
mov
(bad)
mov
adc
pop
lgdtd
(bad)
push
cmp
inc
dec
in
stos
lock
int
cld
jb
in
jmp
ret
call
jp
pop
ins
(bad)
mov
push
jo
jp
or
jl
add
aad
test
mov
sub
and
addr16
aad
pop
jnp
dec
ja
nop
xchg
adc
(bad)
mov
jg
scas
dec
dec
jp
push
cmp
in
call
push
mov
cwde
xor
mov
test
call
daa
ja
xor
add
inc
jne
add
xchg
sbb
cwde
xchg
arpl
ins
xor
cli
std
arpl
push
aaa
mov
push
loop
or
xchg
fiadd
and
push
js
jbe
xor
sub
xchg
jmp
sub
or
cmc
mov
ficomp
xchg
cmp
xor
cdq
shl
and
sbb
adc
xchg
imul
sub
xchg
jns
out
mov
test
test
dec
mov
retf
mov
mov
inc
lods
jl
fmul
cmp
retf
leave
xchg
test
and
xor
data16
loopne
push
jmp
mov
pop
loope
stos
sub
movs
ins
stos
shr
cmps
retf
imul
into
mov
hlt
jne
rol
lods
lds
pop
out
outs
movs
adc
cdq
lock
fidivr
test
sbb
into
ins
cmp
pop
rsqrtps
jmp
scas
mov
dec
mov
lock
imul
sbb
rcr
retf
xchg
aas
mov
pop
pop
retf
adc
jo
cmps
mov
mov
and
data16
into
and
call
dec
or
xchg
xchg
rol
mov
sti
lods
push
or
(bad)
int3
xchg
adc
nop
mov
aaa
mov
les
cli
jne
mov
stc
fimul
inc
imul
loopne
enter
inc
cmps
sbb
lods
mov
xor
jmp
mov
mov
mov
and
jne
mov
or
add
aam
mov
xor
ja
not
mov
cld
xchg
push
xchg
das
arpl
jecxz
dec
sub
out
std
push
adc
dec
(bad)
sub
mov
in
push
sahf
jmp
(bad)
mov
fld
pop
nop
inc
test
punpcklbw
pop
push
pushf
add
call
out
jno
mov
out
cmp
mov
xchg
fild
(bad)
mov
xchg
cli
lods
aam
or
test
sub
es
nop
add
es
xor
(bad)
mul
sub
lea
sbb
loop
jl
in
push
test
cmps
stos
inc
push
mov
xor
jecxz
stos
loope
retf
sbb
jg
pushf
mov
and
cli
das
ret
xchg
ret
cld
lods
cmp
lds
xchg
sbb
xor
ds
cmp
nop
arpl
retf
mov
repz
sub
or
lea
ins
mov
cmc
sub
adc
sbb
clc
retf
push
pop
mov
jbe
arpl
retf
inc
add
adc
ficomp
jnp
and
sbb
stos
out
push
mov
outs
inc
in
mov
sahf
pusha
sbb
std
pusha
dec
push
xchg
int3
push
inc
retf
outs
jno
(bad)
es
or
jnp
js
add
stos
and
(bad)
jnp
(bad)
jno
jmp
stc
adc
daa
outs
push
into
ds
pop
cmp
popf
jns
mov
mov
shl
mov
jb
rcr
(bad)
sub
movs
rol
pop
or
cwde
popa
mov
mov
int3
adc
dec
sbb
sti
rol
sub
lds
push
test
je
push
pop
sub
repnz
imul
fistp
fwait
retf
inc
xor
sbb
dec
inc
lahf
pop
xor
add
mov
lods
je
jge
mov
jo
aaa
cwde
ffree
stc
cli
cmp
test
mov
mov
mov
(bad)
mov
push
loop
xor
jb
cdq
inc
mov
les
(bad)
das
cmp
jb
pop
les
sbb
xchg
xchg
sbb
or
pop
call
test
js
or
mov
stos
out
test
sbb
int3
jne
mov
jl
cmc
aas
cmp
mov
aad
sub
mov
ja
dec
gs
icebp
sbb
adc
je
ja
cmc
jne
xor
adc
pop
push
push
aam
aaa
xor
cmp
or
lds
repnz
retf
and
adc
imul
add
jp
(bad)
pop
xor
xor
enter
test
push
aam
les
idiv
xchg
in
xor
leave
stos
xchg
xchg
fild
cmps
stos
add
sub
pop
xlat
add
cmp
ja
inc
cmp
dec
ins
test
stos
pushf
sbb
inc
or
(bad)
mov
mov
push
fdiv
sbb
jle
mov
mov
nop
lea
sbb
xlat
stc
mov
test
xchg
push
dec
mov
xchg
lock
rol
cmps
ins
mov
ror
cmp
jo
addr16
out
ja
je
push
sbb
bound
fdiv
push
pop
rcl
leave
sbb
push
pop
test
ins
xchg
enter
enter
(bad)
sub
arpl
imul
and
mov
sbb
dec
lods
and
mov
push
push
mov
adc
pop
inc
(bad)
adc
sbb
or
les
sbb
mov
sbb
sub
push
rol
ds
adc
test
call
(bad)
cmp
sbb
ja
sti
mov
jne
mov
mov
pop
xchg
mov
ins
mov
jmp
jp
and
or
push
dec
mov
leave
sar
or
pushf
pop
cmp
scas
mov
push
arpl
inc
ror
pop
aam
push
rcl
add
add
and
pop
inc
arpl
or
in
pop
frstorw
and
push
push
pop
inc
(bad)
jmp
in
push
pop
push
test
hlt
(bad)
je
sbb
sub
sub
cmc
xchg
rol
mov
cdq
fisttp
js
arpl
enter
test
xor
push
int
or
push
fisubr
call
or
sub
ficomp
jnp
aas
ja
cdq
push
sub
mov
adc
nop
xchg
jne
mov
or
lds
pop
dec
mov
fcmovnu
mov
test
push
mov
adc
add
in
stos
push
inc
or
pop
inc
(bad)
mov
es
adc
xchg
stc
mov
cli
into
jo
lea
xchg
and
addr16
jmp
scas
xor
cmp
loopne
cmp
push
fidivr
out
sar
in
add
pop
sbb
retf
ja
ins
push
ds
adc
xchg
stos
sbb
call
xchg
push
je
sti
daa
pop
push
in
mov
rol
or
xor
pop
nop
(bad)
retf
dec
(bad)
adc
xchg
sti
jno
gs
dec
jb
jmp
(bad)
pop
gs
bound
pop
pop
fwait
cli
outs
add
jae
loop
sbb
je
test
adc
adc
dec
outs
imul
push
lock
and
jne
xor
js
adc
inc
stos
int
test
sti
ins
mov
out
int3
fsincos
jle
addr16
mov
stc
pushf
pop
sti
push
(bad)
jmp
pushf
xor
test
add
mov
jl
lods
sub
mul
fidivr
dec
cmp
or
sbb
xor
lods
ret
mov
fdivr
and
mov
shl
add
popf
sub
jl
repz
mov
pushf
fwait
jno
inc
iret
lds
cmp
cmp
and
cld
test
pop
out
and
jp
cmp
out
test
hlt
bound
jecxz
mov
cmp
pusha
add
pop
mov
dec
je
jmp
fadd
jbe
xor
in
test
ins
(bad)
push
inc
mov
sbb
xchg
sub
ror
mov
mov
push
scas
retf
jge
inc
cli
inc
dec
dec
jle
cdq
jl
mov
lock
cmp
dec
push
shl
sub
cmps
push
leave
push
fnstcw
and
push
adc
sbb
iret
push
out
jl
dec
ret
xor
push
out
jne
push
(bad)
in
call
inc
and
retf
jecxz
daa
mov
test
push
and
add
and
ss
adc
or
ins
ret
push
ret
mov
mov
fld
mov
in
(bad)
xchg
push
ins
xor
pop
mov
add
xor
rcl
icebp
loopne
outs
ds
xlat
add
clc
pop
cld
mov
popa
xor
lods
xor
lea
leave
inc
mov
pop
std
les
jmp
das
in
loopne
adc
add
ret
jmp
daa
or
xor
push
test
popf
cli
pop
fnstenv
mov
lds
mov
jne
push
mov
sbb
popa
jns
add
adc
pop
jne
push
ss
adc
dec
sub
dec
into
adc
mov
sbb
loopne
call
cmc
lods
rol
and
lods
lahf
pushf
sub
cs
push
sub
mov
adc
repnz
add
push
xor
into
mov
mov
lds
sbb
xchg
xchg
dec
xchg
mov
test
pop
inc
clc
ret
imul
(bad)
ins
sub
pop
(bad)
movs
movs
bnd
popa
mov
mov
popf
pop
dec
mov
ins
push
jle
into
out
xor
outs
pushf
jb
cli
ja
pop
repnz
outs
or
sbb
jge
dec
cwde
pushf
into
xchg
cwde
xchg
jle
pop
shl
fcmovu
fldcw
fs
mov
inc
push
pop
push
(bad)
test
add
adc
out
sbb
fmul
gs
es
dec
add
or
jno
stos
add
arpl
lods
xor
call
cmp
retf
cs
call
and
push
imul
add
fwait
add
jmp
imul
and
jecxz
sub
in
cld
test
daa
ret
inc
push
pusha
fstp
cmp
mov
xadd
cwde
and
jb
push
jmp
jmp
mov
xchg
inc
aaa
addr16
dec
leave
imul
popa
aad
stos
sub
dec
cld
mov
push
adc
add
hlt
(bad)
mov
sub
out
sbb
mov
push
js
adc
movs
fistp
xchg
jecxz
xlat
push
test
push
jne
dec
(bad)
ds
mov
scas
icebp
out
pop
int3
mov
movs
xchg
pop
sbb
lods
mov
or
push
mov
lahf
imul
fwait
push
push
movs
mov
cmc
mov
retf
popf
neg
leave
dec
stc
push
inc
add
mov
aad
push
add
ficom
lods
sbb
addr16
je
das
imul
lahf
add
adc
xchg
clc
xlat
or
jmp
mov
stc
inc
test
sbb
int3
int
xchg
repz
pushf
mov
neg
dec
nop
cmp
mov
rcr
sub
mov
adc
push
popf
out
mov
out
jne
movs
movs
adc
push
fild
adc
(bad)
into
and
enter
out
loop
ror
xchg
xor
lods
scas
inc
(bad)
fs
lahf
jbe
lahf
stos
(bad)
leave
add
ret
into
add
jmp
mov
pop
cmp
adc
(bad)
push
xchg
pusha
add
cmp
pop
push
jp
pop
fild
dec
das
int
jne
clc
push
mov
dec
imul
scas
fnstcw
into
in
pop
xchg
leave
call
cli
or
(bad)
jge
and
mov
aaa
xor
add
xor
adc
mov
cmp
or
xchg
inc
mov
xor
pop
aam
xlat
std
xchg
clc
push
cs
inc
test
into
sbb
add
mov
xor
add
aam
mov
xchg
push
pop
ins
in
mov
stos
push
pusha
jbe
arpl
pop
and
adc
bound
lock
fsub
sar
call
fld
idiv
mov
jl
xor
and
rcr
dec
mov
not
mul
scas
inc
cmps
push
jg
cld
into
stos
xor
lahf
popa
pusha
pop
les
int
add
popf
ret
sub
pop
pop
or
scas
stos
xor
je
call
xchg
and
mov
or
mov
mov
adc
jno
xchg
cmps
sbb
cmc
not
out
mov
stos
push
repz
movs
pop
lock
rcr
(bad)
outs
in
movs
inc
mov
imul
cwde
cmc
rol
sbb
daa
ins
jae
xchg
and
out
nop
ret
xor
mov
cmc
(bad)
push
push
shr
stos
cwde
sti
shr
ret
xchg
loopne
and
es
call
cmp
push
sbb
ret
or
jnp
dec
stos
or
jmp
in
sti
call
out
mov
mov
stc
inc
leave
inc
cmp
and
adc
cmp
push
sahf
clc
mov
jecxz
cwde
(bad)
cmc
mov
jecxz
repnz
pop
repz
jbe
out
mov
(bad)
jl
dec
push
cmp
fwait
jo
mov
push
test
cli
aas
in
scas
out
in
nop
and
or
jmp
cmps
sub
and
dec
inc
dec
fidivr
adc
leave
popf
push
sub
mov
jg
mov
loop
and
ja
lock
mov
ins
shl
dec
jg
lds
movs
sub
or
dec
sbb
adc
aam
cmp
movs
add
in
test
xor
push
mov
mov
jecxz
cli
xor
push
lea
xor
rcl
jmp
cld
(bad)
push
sub
mov
movs
add
daa
ss
jl
mov
add
movs
add
test
xchg
aas
mov
xchg
aaa
sub
ins
add
and
sar
not
nop
push
(bad)
in
inc
xchg
or
imul
lahf
lahf
sbb
cmps
ds
test
mov
pop
jge
je
aad
out
shl
(bad)
add
fisub
out
xor
xchg
jmp
dec
dec
loop
popa
outs
daa
xor
sub
das
ja
mov
stos
lods
and
stc
call
mov
add
mov
stc
sar
mov
jp
dec
ins
in
sub
clc
adc
mov
mov
outs
pop
jle
mov
dec
mov
sahf
(bad)
mov
lea
push
sti
and
jno
jl
dec
test
repnz
or
ds
(bad)
xchg
lock
iret
add
push
mov
leave
(bad)
sti
call
pop
lahf
mov
repnz
cli
repz
cmp
sahf
jae
js
push
jp
gs
mov
xchg
cmp
ror
scas
sub
sar
and
cmp
adc
retf
rcl
and
pop
fdivr
ficom
sbb
minps
frstor
adc
jb
mov
inc
(bad)
out
clc
sub
jecxz
in
rcl
fistp
call
das
test
sbb
pop
mov
inc
jns
(bad)
(bad)
or
push
ret
cld
xchg
sbb
inc
addr16
dec
(bad)
in
es
mov
sub
push
push
push
out
sub
sbb
or
dec
pop
fsubr
inc
aam
push
sub
icebp
push
and
rol
pop
pusha
xchg
aaa
bound
aam
ret
jno
icebp
addr16
jmp
mov
retf
or
repz
fnstcw
mov
out
mov
icebp
stc
mov
or
enter
dec
inc
bound
popa
sbb
sahf
jns
cdq
xor
cmp
out
shl
jb
push
cld
mov
push
dec
cdq
out
adc
xor
and
nop
jecxz
add
and
jae
lahf
cmp
das
mov
xchg
mov
sbb
pop
sub
xlat
call
mov
xor
out
pop
mov
out
push
mov
lock
mov
pop
pop
mov
cmp
scas
and
cs
dec
push
add
out
dec
xchg
in
bound
sbb
push
push
aas
dec
pop
cmp
sbb
jg
jne
out
sub
xor
mov
sahf
ffree
imul
cmp
(bad)
retf
sbb
inc
push
jno
scas
xchg
mov
call
adc
jmp
jl
add
stc
fstp
stos
sti
fbstp
inc
dec
push
dec
in
pop
ins
mov
xchg
cs
adc
push
mov
mov
lahf
out
mov
jnp
fistp
xchg
jbe
cmp
test
mul
push
fcomip
outs
pop
mov
(bad)
dec
sbb
loopne
or
lods
or
jno
jmp
inc
mov
push
cli
dec
push
ds
lods
sub
pushf
aad
lea
jmp
aad
xchg
mov
lds
mov
push
cdq
in
jo
sub
enter
ret
adc
rcr
inc
scas
mov
adc
(bad)
scas
sbb
call
shl
xor
ret
cs
inc
cmp
jmp
loope
adc
je
xlat
pop
jae
icebp
out
mov
cmp
call
aad
and
aad
les
xor
sbb
jbe
sub
jbe
sub
std
dec
inc
fwait
dec
sbb
sub
call
shr
dec
and
(bad)
ret
(bad)
idiv
pop
popa
jne
test
(bad)
dec
stos
add
inc
sbb
push
dec
cdq
mov
sub
ins
imul
fstp
iret
mul
imul
pop
push
mov
dec
xor
mov
adc
pop
dec
mov
pusha
sbb
cmps
pop
(bad)
lock
mov
jns
pop
inc
pop
mov
popf
xchg
inc
sbb
dec
or
lahf
inc
cld
pusha
ds
js
lds
mov
inc
scas
retf
jns
iret
pop
pop
push
pop
sbb
call
int3
pop
rcl
loopne
mov
out
outs
inc
in
jmp
mov
pop
mov
pop
pop
adc
out
dec
push
sahf
xchg
add
es
retf
push
loope
sahf
in
or
nop
jae
pop
cmp
mov
fcom
hlt
lods
mov
or
sbb
sub
xchg
mov
jmp
aas
adc
or
(bad)
pop
dec
and
ret
fstp
out
test
and
out
jb
cmps
pop
mov
mov
bound
enter
push
ins
xchg
jns
cmp
rcr
push
jno
lock
je
adc
xchg
rol
lods
out
lods
daa
jae
(bad)
add
dec
test
cmp
mov
rol
jmp
and
mov
add
jl
cmp
sahf
(bad)
jg
push
shr
ja
aas
and
push
out
dec
sub
push
loopne
mov
rcl
mov
nop
or
lock
cmc
fisttp
sub
(bad)
je
push
xchg
sub
mov
pop
dec
daa
fidiv
dec
xor
lea
test
xchg
popa
test
jnp
retf
mov
ror
stc
pop
test
sbb
sub
imul
push
mov
sbb
retf
adc
ret
pop
fisttp
xchg
mov
xchg
sbb
inc
gs
cmp
out
mov
stos
xor
cmp
les
int
call
adc
inc
inc
xor
rcl
sub
int3
iret
and
push
jle
push
push
lock
rcr
pusha
test
jecxz
inc
add
stc
inc
or
addr16
pop
repnz
fisubr
retf
and
jae
mov
imul
jl
mov
xchg
xor
fcom
ror
dec
out
int
mov
outs
jg
xchg
out
sar
jb
leave
push
hlt
test
inc
or
mov
(bad)
std
or
pcmpeqw
aam
mov
and
dec
mov
jecxz
dec
push
adc
mov
(bad)
enter
pushf
xchg
std
mov
add
or
aam
dec
push
mov
or
dec
aas
hlt
push
mov
cld
jno
cwde
rcr
mov
retf
shl
push
inc
and
mov
push
pop
aam
pop
add
and
push
mov
push
out
test
arpl
ins
nop
stc
fwait
inc
mov
mul
je
jecxz
cld
mov
inc
outs
jo
(bad)
fmulp
add
leave
pop
fcom
xor
sbb
dec
popf
sti
jno
push
sub
test
dec
stos
mov
mov
mov
or
sahf
dec
push
es
mov
inc
xchg
pop
and
xchg
aad
jmp
rcl
mov
daa
ds
jbe
loope
cld
pop
lods
pop
loop
inc
inc
rcr
dec
jo
or
out
lds
push
xor
movs
iret
adc
inc
xchg
mov
ret
or
push
mov
pop
fst
jae
xchg
(bad)
add
dec
jge
out
add
lea
ss
xor
lahf
test
(bad)
iret
test
loope
pop
sub
xor
mov
inc
call
call
fwait
jb
aad
mov
pop
lahf
in
ret
mov
jno
out
js
std
scas
push
imul
jmp
into
jo
cmp
inc
jb
test
fwait
dec
dec
push
and
(bad)
push
inc
stc
loop
sbb
push
loopne
(bad)
into
sub
in
stos
adc
pop
pop
icebp
sbb
mov
mov
jmp
aaa
push
mov
cwde
add
xchg
adc
cwde
cdq
pop
ins
out
pop
retf
in
inc
fadd
retf
adc
jmp
cmc
nop
add
adc
pushf
add
or
jno
cmp
jb
sub
jo
das
sub
ja
fnstcw
cwde
and
lods
comiss
push
jnp
int3
push
push
out
rcr
add
lods
or
movd
mov
add
adc
push
inc
sbb
cs
push
(bad)
ss
adc
inc
inc
add
add
lods
jmp
sbb
jo
aad
mov
jg
inc
hlt
(bad)
gs
add
lock
inc
clc
(bad)
in
xor
(bad)
ror
mov
push
popf
stos
cmp
mov
gs
push
pop
cmps
pushf
in
btr
sub
mov
fwait
les
push
pop
adc
in
je
mov
jg
push
int3
jb
inc
sbb
fisubr
popf
rcr
fiadd
pop
cmp
je
sub
jnp
sub
inc
and
pop
xchg
retf
push
push
jnp
cmp
mov
inc
inc
pushf
pushf
aam
out
push
or
dec
mov
ror
std
outs
aad
sar
outs
mov
jo
(bad)
lahf
in
mov
add
or
and
adc
adc
jg
xor
mov
adc
iret
in
in
dec
and
push
and
dec
fs
mov
dec
pop
jno
dec
jg
xchg
(bad)
xlat
sub
(bad)
dec
mov
xchg
(bad)
adc
sbb
ror
inc
cdq
popa
fnstenv
push
movs
ror
jecxz
jnp
adc
xor
mov
cmps
sub
mov
jnp
fsubr
dec
repnz
mov
pop
or
mov
adc
cwde
or
sbb
mov
aam
dec
test
cmp
add
mov
jp
jl
xor
les
dec
pushf
addr16
mov
enter
cmp
mov
aas
enter
adc
dec
pop
sbb
adc
aaa
mov
addr16
xchg
nop
daa
or
iret
ja
sbb
jecxz
pop
jae
lea
adc
ret
stos
jge
xchg
hlt
mov
adc
and
adc
jbe
ret
test
loop
in
or
fdivr
adc
(bad)
jb
push
adc
scas
outs
icebp
or
int3
leave
or
cmps
in
outs
in
sbb
mov
xchg
scas
sbb
in
outs
fidivr
mov
add
mov
ror
push
xchg
pop
sub
xor
adc
in
jecxz
out
popa
lds
fmulp
xor
scas
add
inc
pop
int
jmp
pop
mov
imul
jecxz
pop
add
in
loop
xor
add
and
dec
push
mov
outs
fwait
cmps
ret
imul
jmp
push
inc
sbb
inc
push
gs
add
(bad)
lods
mov
inc
inc
(bad)
aam
pop
test
movs
in
(bad)
mov
jne
push
pop
push
sub
xlat
cdq
call
push
(bad)
mov
and
push
rcl
aas
das
popa
ds
xor
push
shr
es
mov
ror
data16
in
inc
aam
dec
push
(bad)
out
fcomi
les
jle
mov
popa
jbe
cmps
adc
stos
cli
ret
sub
add
push
scas
aaa
aas
jb
jo
sti
dec
adc
cmp
cmps
and
inc
pop
xchg
lods
push
js
stos
cdq
mov
push
mov
sbb
gs
stos
adc
gs
pop
dec
add
push
mov
scas
aas
xchg
ret
jae
sbb
jbe
cdq
loop
in
cmps
xor
loope
mov
sahf
xchg
sbb
inc
mov
xchg
jmp
test
test
iret
or
cmc
sbb
or
jecxz
pop
and
ror
mov
les
call
mov
inc
adc
clc
adc
test
mov
jnp
xor
cmp
cs
cmp
ficom
fidivr
and
shl
and
lds
and
addr16
xchg
push
out
or
inc
xchg
add
dec
jb
push
out
stos
adc
pushf
sar
xor
jmp
shl
mov
in
inc
jle
retf
mov
and
movs
and
pop
push
push
jae
mov
and
js
mov
adc
repz
dec
adc
(bad)
mov
sub
cdq
lods
mov
xor
in
outs
xchg
cld
daa
xor
in
and
(bad)
outs
xchg
leave
mov
ret
inc
pop
cmp
movs
xor
in
dec
in
pop
in
sti
mov
xlat
je
jns
stc
fist
in
dec
leave
mov
shl
(bad)
add
pusha
call
inc
loop
sbb
inc
cmp
inc
cmps
inc
jbe
mov
and
pop
scas
dec
or
imul
xchg
neg
inc
stc
or
pop
in
mov
push
pusha
mov
test
push
pop
mov
add
push
jmp
pop
push
mov
call
fcmove
(bad)
daa
and
lock
aas
jno
mov
push
(bad)
cmp
xor
inc
mov
jecxz
(bad)
ja
repnz
cmp
popf
xchg
dec
push
nop
mov
lods
jne
pop
push
sbb
adc
(bad)
cwde
lea
lahf
and
in
fwait
stc
mov
inc
rcr
ficomp
outs
call
dec
ja
ds
jb
clc
adc
or
add
push
in
xchg
jge
movs
rcr
shl
fnsave
jae
xchg
stos
shl
inc
push
push
pop
das
stos
xchg
fdivr
cmps
add
(bad)
shr
cmps
mov
sbb
test
mov
es
inc
inc
sub
mov
sub
jecxz
nop
xor
and
loopne
ja
dec
test
lock
add
xchg
aas
dec
sub
xlat
or
and
cmp
cdq
push
jae
mov
clc
clc
fistp
xor
and
sbb
cmp
dec
sub
and
or
and
ror
les
gs
(bad)
mov
push
mov
inc
in
mov
pop
jne
push
jecxz
or
mov
out
jmp
adc
cwde
sbb
ins
mov
add
dec
mov
mov
sbb
retf
jle
iret
dec
sbb
mov
sub
movs
stos
dec
stos
xor
sbb
pushf
loop
dec
inc
push
cwde
sahf
or
or
dec
ret
mov
dec
jle
cld
push
push
xchg
dec
add
jns
aaa
inc
popf
mov
cdq
bnd
or
mov
lahf
nop
rcl
xor
stc
dec
mov
in
dec
movs
cs
dec
cmp
pushf
mov
fsub
sbb
popa
shl
sbb
and
sub
xor
(bad)
out
pop
cmps
jbe
std
(bad)
push
movs
pusha
fmul
rcr
dec
les
or
(bad)
ss
hlt
(bad)
push
jg
fistp
mov
call
push
iret
inc
add
mov
mov
lds
mov
and
dec
test
in
mov
and
pop
xchg
test
sbb
pusha
jmp
mov
xor
mov
inc
ds
xor
adc
sbb
jg
in
test
inc
and
mov
pop
mov
gs
cli
je
xor
popf
scas
adc
adc
mov
js
mov
xor
mov
pop
mov
sub
fsub
dec
out
sbb
popa
in
outs
scas
js
or
cmps
add
jmp
inc
xor
xlat
aam
xchg
push
pop
xor
cmc
out
popa
loopne
mov
push
xor
call
dec
jo
int3
hlt
inc
xor
xor
jmp
dec
inc
adc
cmp
in
push
push
imul
dec
xchg
(bad)
adc
xor
(bad)
xor
push
mov
mov
mov
jl
xor
test
sbb
push
dec
cmp
mov
pusha
inc
adc
jg
fwait
hlt
jp
adc
int3
xor
ret
fidivr
rcr
mov
adc
sbb
inc
movs
mov
xchg
mov
and
mov
enter
jg
or
clc
xor
jb
mov
ins
push
dec
test
imul
push
test
mov
push
scas
int
fist
cmp
loop
test
mov
and
imul
adc
xlat
cli
mov
jb
nop
shl
fsubp
mov
xor
js
sub
inc
xlat
jb
fwait
mov
inc
lahf
inc
cmp
and
enter
push
and
aad
adc
mov
(bad)
jb
rcl
xchg
in
xchg
inc
popa
ret
das
inc
iret
ss
mov
je
sub
jge
mov
add
ins
cmp
icebp
pop
xor
(bad)
out
mov
test
fs
aaa
ret
stc
jno
adc
std
lods
pop
scas
pop
stos
dec
les
xor
mov
enter
rcr
mov
scas
jge
dec
stos
or
mov
xor
cmp
stos
and
jno
jl
shl
mov
pop
ds
mov
loop
jnp
sub
cmp
rol
xor
pop
nop
scas
and
test
arpl
addr16
jne
sbb
adc
sbb
loop
mov
mov
repnz
xor
stc
inc
icebp
cld
cs
arpl
pushf
test
repz
mov
mov
xor
jecxz
xor
sbb
popf
loop
idiv
dec
dec
pop
cmc
rol
bound
outs
dec
add
pop
dec
pop
dec
test
pop
mov
(bad)
pop
sub
mov
inc
and
scas
sbb
jns
mov
daa
mov
xor
(bad)
arpl
pop
jb
bound
push
adc
push
rcr
je
add
sub
push
cmp
aas
add
jno
add
iret
leave
lods
ror
jae
push
inc
ja
mov
cmps
cmp
inc
je
push
shl
mov
adc
sub
fs
sbb
jg
pusha
xor
jl
adc
sbb
cmps
lods
int3
push
mov
(bad)
in
mov
popa
gs
dec
(bad)
mov
lea
add
ds
fwait
jne
lods
cmps
mov
cdq
loopne
sbb
(bad)
adc
aas
and
push
jae
mov
adc
int
data16
xchg
ds
adc
(bad)
xchg
xchg
or
sub
sub
(bad)
adc
dec
mov
leave
js
scas
push
sbb
iret
or
push
int
bswap
push
fld
jge
adc
popf
cmp
pop
lock
jo
adc
pop
inc
outs
int3
sub
push
lock
dec
cli
cmp
lods
test
popf
cmps
cmp
scas
cmps
or
sbb
push
mov
fst
in
(bad)
mov
std
imul
add
jmp
daa
sti
or
out
push
sub
mov
test
imul
das
jge
popf
adc
mov
loop
add
sub
(bad)
sbb
aas
adc
icebp
out
ffree
sti
ror
adc
into
lods
shl
push
les
test
xor
aas
or
sbb
push
xor
loope
retf
movs
das
and
mov
jb
mov
jp
out
adc
lahf
mov
and
adc
push
cmc
stos
adc
popf
xchg
sub
popa
in
iret
test
lods
iret
inc
repz
scas
int
(bad)
stc
(bad)
adc
xor
sub
ret
in
push
cmp
jne
adc
adc
sar
es
xchg
(bad)
icebp
in
scas
xor
cmp
call
sub
xchg
xor
test
fild
pop
mov
pusha
fs
rol
inc
push
pop
dec
fwait
fwait
call
into
leave
iret
mov
and
jg
scas
dec
fs
dec
lods
jno
sahf
fbld
and
jge
xlat
mov
cdq
dec
movs
sbb
sbb
addr16
push
ins
add
nop
jb
(bad)
mov
push
mov
mov
sub
stc
iret
or
xchg
clc
das
sti
scas
cmp
cdq
push
popf
pop
jae
sbb
out
(bad)
(bad)
into
pop
pop
cmp
outs
jnp
xchg
fadd
icebp
pusha
xchg
dec
pop
pop
ins
mov
ss
mov
xor
add
movs
jle
cmp
or
ret
in
pop
pop
pop
xchg
(bad)
imul
sub
(bad)
mov
sbb
mov
in
je
mov
mov
push
fcomp
(bad)
pop
or
pop
lds
xor
lahf
div
sbb
xchg
int
ins
xchg
adc
cwde
cmp
hlt
fdivp
xchg
xchg
mov
lds
or
adc
or
adc
or
sub
das
call
adc
mov
leave
scas
xchg
jmp
pop
out
ror
cwde
mov
push
imul
dec
test
js
xor
jns
sbb
dec
js
sub
xor
stos
pusha
loop
jmp
stos
shl
jo
pop
cmps
mul
outs
in
or
push
bound
test
xor
icebp
jge
sub
cld
js
in
les
ret
popf
cmps
or
mov
movs
jl
cmc
fmul
int
lods
sbb
aaa
movs
mov
jg
out
and
push
sbb
fucomp
les
push
in
jo
sub
cmc
sub
and
or
and
pop
stc
inc
jne
stos
add
sbb
mov
clc
add
mov
nop
je
push
push
clc
adc
push
ds
inc
xchg
fcomp
push
xchg
push
lahf
retf
xchg
mov
sub
and
sub
inc
mov
(bad)
cld
push
mov
retf
call
loop
popa
fdiv
sbb
sbb
push
clc
jb
add
lahf
or
xchg
pop
scas
ins
imul
adc
sbb
pop
fisub
out
push
clc
test
aam
pop
ret
sub
xor
(bad)
bsr
cmp
xchg
xlat
lahf
bound
(bad)
test
mov
or
hlt
jmp
loopne
fwait
daa
bound
loope
cmp
mov
xor
adc
push
shl
jecxz
out
dec
imul
pop
in
or
sahf
repnz
and
hlt
fnstsw
inc
hlt
add
fmul
mov
das
sbb
or
inc
pushf
sub
into
fsubrp
dec
sbb
push
xor
xor
cmp
inc
add
sub
xchg
js
sbb
mov
and
dec
sub
stos
mov
adc
repnz
shr
and
inc
or
in
lea
sub
mov
pusha
pop
fdivp
lods
pusha
inc
mov
sar
cdq
and
or
add
jmp
sti
pop
jae
aad
push
es
out
mov
aaa
and
pop
mov
and
mov
out
cld
push
mov
cwde
sbb
inc
pusha
push
scas
test
(bad)
jb
cmp
xchg
fld
rcr
sub
push
dec
out
jb
sub
or
div
outs
xchg
loopne
add
lods
xor
pop
js
jo
mov
push
and
mov
push
pop
sub
mov
xor
in
in
lock
scas
jne
mov
push
mov
adc
stos
mov
aaa
fnstenv
pop
mul
mov
fldcw
jb
mov
mov
fstp
aaa
mov
push
stc
push
inc
push
popf
mov
or
dec
dec
popf
data16
int
sub
lahf
pusha
adc
push
leave
cmp
jg
or
aaa
shl
out
mov
and
xor
sbb
xchg
cmc
inc
or
fist
repnz
leave
(bad)
mov
data16
scas
gs
adc
lods
addr16
stc
stc
aam
inc
test
pop
or
out
mov
sbb
out
movs
jmp
lods
cmp
push
add
enter
rcl
aad
sar
or
and
and
es
add
and
fsave
jnp
push
cmp
xor
mov
dec
push
outs
mov
lahf
stc
idiv
scas
nop
mov
cld
sbb
or
cmp
fs
sbb
jmp
push
les
add
xchg
movs
mov
push
jbe
xchg
or
adc
xchg
je
cmp
and
aam
cmp
not
dec
in
mov
ret
bound
inc
cmp
in
or
xor
xchg
mov
jnp
aam
rol
fucomi
test
loopne
(bad)
cdq
in
enter
mov
out
aam
not
fcmovbe
mov
icebp
(bad)
icebp
jmp
mov
mov
movs
stos
or
aas
lahf
call
cmps
mov
fstp
or
mov
cld
inc
out
adc
push
push
dec
mov
mov
push
or
ret
push
jb
pop
int
dec
in
xor
lock
mov
hlt
push
js
into
adc
mov
sbb
xlat
mov
jo
ds
push
inc
mov
mov
lods
xchg
xor
and
mov
ficomp
aam
jmp
out
bound
stos
push
adc
jmp
test
mov
test
mov
cmp
adc
mov
inc
jl
mov
xor
lods
outs
sbb
daa
push
cmp
push
xor
add
mov
fs
shl
jo
add
adc
ins
jle
mov
imul
xchg
dec
xor
or
cmp
retf
sub
xchg
out
xor
mov
xor
test
sub
inc
or
or
fnstcw
adc
add
sub
psubsw
pop
sbb
push
frstpm(287
div
push
addr16
mov
add
ret
dec
sub
jecxz
xchg
jb
sub
xor
inc
ins
pusha
rcl
inc
cmp
xor
and
jnp
jl
cmc
je
pop
sub
pop
mov
mov
jae
sbb
push
fs
mov
cmp
xchg
add
fcmovb
es
xor
mov
jecxz
mov
cmps
cwde
push
cmps
push
lds
adc
push
fnstcw
xor
jl
gs
stc
aad
push
ret
cwde
push
inc
cmc
jmp
xor
aas
lock
pop
fwait
repnz
push
push
fwait
or
xchg
jle
sahf
imul
dec
cmp
sar
aaa
ret
lods
pushf
test
gs
mov
repnz
inc
inc
and
cs
jl
add
or
adc
ds
xor
lahf
(bad)
fstp
xor
xor
mov
pushf
lods
sub
push
dec
hlt
sar
dec
dec
xor
out
clc
repz
sbb
jmp
xor
xlat
add
gs
cld
lea
test
sti
push
(bad)
mov
in
push
dec
add
inc
push
aam
nop
ins
lods
sbb
pop
jne
int
ds
jae
sbb
sbb
neg
add
popa
or
sub
cmp
mov
mov
repnz
xor
and
mov
fsubr
mov
outs
sbb
mov
es
hlt
addr16
data16
outs
or
sub
adc
aad
push
mov
push
inc
or
icebp
movs
inc
push
repz
sbb
adc
adc
push
daa
pop
shl
adc
ja
rcl
addr16
add
mov
xchg
mov
imul
aad
mov
xor
pop
sbb
mul
cmp
pop
dec
cmp
xchg
or
loop
shr
lea
xor
sub
fwait
dec
add
jmp
sub
xlat
enter
dec
cmp
mov
adc
ret
daa
jnp
sahf
mov
push
jmp
xchg
or
add
xchg
push
ret
xor
inc
(bad)
in
pop
outs
imul
in
ret
and
and
and
je
add
out
push
sti
or
shl
push
outs
xchg
pop
or
pop
cmp
rcr
adc
mov
daa
add
mov
(bad)
jg
and
test
aaa
lahf
xchg
clc
pop
mov
pop
ret
cmp
push
pop
adc
inc
mov
mov
ret
test
mov
daa
jne
(bad)
fsub
sbb
scas
dec
mov
js
push
dec
outs
pop
cmp
xor
cmp
ja
pop
push
adc
mov
push
retf
mov
js
inc
push
sub
call
pop
aam
cmp
or
mov
add
idiv
mov
cmps
test
aad
cli
nop
enter
ret
push
and
push
into
test
mov
ret
out
mov
pandn
push
cdq
scas
nop
xchg
pusha
dec
add
pop
jge
and
bound
scas
add
shr
pop
adc
xor
mov
hlt
dec
pop
sub
cmp
push
mov
iret
fimul
dec
mov
sub
(bad)
pop
loope
lds
rcr
rcr
push
pop
aaa
mov
jne
das
sbb
push
mov
xor
ja
cld
and
outs
sub
mov
leave
out
pop
and
lahf
xchg
jnp
mov
shl
mov
sbb
and
and
out
jbe
or
test
inc
xchg
out
je
or
test
mov
rcl
push
mov
in
pusha
fisubr
cmp
push
cmp
lss
aam
jmp
fidivr
sub
jl
popa
xchg
inc
(bad)
cmp
fcomp
hlt
fwait
stos
(bad)
sub
xor
xchg
imul
pop
mov
xchg
repnz
mov
push
xor
xor
dec
(bad)
data16
xchg
imul
ins
push
push
mov
out
scas
sti
sbb
dec
push
imul
lds
jmp
scas
int3
adc
pop
sub
out
push
rcr
cmp
sbb
les
int
mov
in
sub
daa
addr16
sbb
adc
das
inc
sub
scas
jo
sub
iret
dec
xor
ins
xor
repz
popa
imul
adc
pop
(bad)
and
in
out
aas
push
jecxz
enter
mov
cmp
outs
pusha
pop
(bad)
and
pop
mov
add
pop
bound
sub
mov
push
mov
xchg
lods
mov
mov
sub
xor
jecxz
push
fnstenv
mov
sbb
je
in
aaa
imul
ins
ins
std
test
fdiv
fsubr
cmp
stos
in
mov
push
fistp
cmp
mov
call
jle
xchg
xchg
ss
pop
and
pop
ja
xchg
retf
or
cmp
cld
add
ficom
dec
fist
mov
jns
(bad)
aas
cwde
mov
repz
sub
cdq
xor
loope
fstp
push
loope
mov
or
lods
into
or
xchg
sub
movs
out
fadd
ins
adc
lods
scas
jmp
push
cmc
add
mov
jbe
popa
or
imul
cmp
in
pop
test
dec
mov
(bad)
aam
add
pop
imul
cld
adc
out
sub
sar
pop
add
lods
shl
sub
push
sub
jmp
cli
popf
and
mov
dec
inc
ror
ins
pop
ds
sahf
pop
adc
loop
lock
lods
nop
in
je
into
adc
ficom
add
xchg
fcmovb
inc
pop
loopne
stos
idiv
xor
sub
hlt
mov
test
(bad)
inc
adc
retf
out
fisttp
fild
mov
cmp
out
cmps
js
lock
xor
dec
xchg
rcl
and
mov
addr16
pop
cdq
scas
or
popa
jnp
jmp
xor
outs
or
pop
xlat
shl
dec
xchg
dec
jg
(bad)
sahf
and
ret
cmp
jge
ficom
(bad)
mov
leave
pop
and
std
pop
adc
xchg
push
out
push
xchg
dec
(bad)
sub
imul
(bad)
ror
mov
and
sbb
(bad)
pop
lea
in
rol
cld
sbb
jp
jle
xchg
jmp
dec
mov
mov
les
call
mov
fldenv
xor
jbe
dec
lock
call
inc
sbb
repnz
(bad)
enter
fwait
imul
mov
mov
dec
outs
shl
jp
test
ins
nop
mov
stos
pop
lock
(bad)
loop
imul
fisttp
aaa
out
nop
sar
push
adc
xchg
add
retf
outs
and
jp
scas
pop
xchg
repnz
loop
psubusw
ret
inc
jbe
lods
xor
test
fcom
stos
cmps
mov
outs
test
push
in
adc
and
or
test
fnstsw
mov
fcom
jbe
mov
pop
cmps
movs
mov
imul
mov
inc
rcr
jns
pop
push
inc
arpl
inc
mov
out
out
in
sub
mov
add
ins
pop
in
dec
push
sub
mov
test
push
adc
arpl
test
xor
clc
inc
pushfw
fwait
stos
addr16
inc
in
mov
push
adc
int
rcr
add
sub
(bad)
xor
pop
rcl
mov
push
dec
mov
or
and
jno
aas
jecxz
ret
data16
sub
adc
jae
(bad)
fsubrp
adc
pop
mov
popa
or
or
push
pop
jne
mov
retf
dec
iret
dec
xchg
sbb
aas
add
mov
rcr
xchg
pop
in
jecxz
imul
clc
or
add
or
loop
jge
fs
mov
ds
sti
gs
cmp
add
outs
aam
(bad)
cmp
call
and
xchg
sub
scas
dec
sbb
cmp
rol
or
(bad)
nop
fwait
xchg
mov
pushf
mov
cmps
movs
test
cmp
aaa
xor
jne
pop
mov
or
iret
and
loopne
mov
stc
int
popa
or
icebp
or
scas
push
add
ret
add
pop
jno
rcr
mov
into
adc
add
adc
dec
out
retf
in
jnp
jne
sub
mov
mov
aas
ret
adc
stos
outs
fs
pop
jg
int3
xchg
xchg
or
bound
jmp
xchg
sub
inc
out
loopne
mov
int3
jl
inc
ror
call
add
jb
mov
xchg
fldcw
outs
les
adc
or
stc
js
in
in
dec
icebp
xchg
add
xor
push
push
(bad)
xchg
fs
push
dec
mov
xchg
push
adc
xor
push
jge
xrelease
std
push
fist
mov
rcl
sub
dec
jno
sub
pop
sahf
cmp
aam
jle
sub
mov
inc
pop
arpl
clc
xor
stos
inc
mov
mov
and
adc
retf
(bad)
cmp
mov
jecxz
inc
or
popf
cdq
lods
jbe
lea
std
sub
adc
int3
rcl
leave
mov
retf
(bad)
ins
cmp
sbb
nop
retf
mov
cmps
inc
scas
daa
dec
or
loop
fstp
add
fmul
(bad)
ins
sub
(bad)
pusha
inc
fimul
push
(bad)
push
mov
sub
cwde
push
push
mov
push
aad
adc
cmps
jg
xlat
outs
push
xchg
stos
push
xchg
cmc
dec
or
sub
lock
repz
and
(bad)
fimul
xchg
mov
mov
jmp
js
sti
sbb
ins
fist
ret
ret
sub
ror
cli
repnz
and
mov
(bad)
fnstsw
sub
cmc
mov
or
cdq
dec
aas
stos
or
and
aas
pop
xchg
ins
fild
mov
xchg
mov
fldenv
inc
sbb
test
neg
jo
imul
mov
int3
aas
push
or
mov
jp
stos
shl
adc
adc
jp
clc
adc
mov
xchg
dec
rol
aas
and
test
mov
call
movs
dec
push
retf
ret
dec
inc
stos
push
push
jno
clc
and
push
pop
dec
or
push
pop
ror
pushf
xchg
pop
mov
add
sbb
mov
lods
sub
jb
lea
mov
pop
mov
aaa
mov
inc
loope
sub
lods
xor
loopne
inc
mov
dec
sahf
dec
xchg
lahf
inc
and
fimul
and
pop
xchg
dec
ret
and
and
dec
mov
xchg
jl
loop
adc
repnz
aad
lods
inc
pop
movs
adc
mov
jp
push
mov
rcl
dec
adc
mov
sub
retf
cmp
(bad)
icebp
dec
inc
(bad)
mov
xor
push
push
(bad)
sub
stos
sbb
pusha
dec
js
retf
test
enter
jge
fdivr
std
pushf
(bad)
in
jmp
out
dec
jmp
xor
jbe
mov
cld
mov
cwde
inc
sub
repz
inc
mov
mov
jne
mov
mov
sbb
ja
int3
xchg
push
bound
dec
lock
inc
sti
mov
ret
inc
jns
sub
mov
mov
xor
cmp
sahf
je
cwde
and
mov
fwait
push
adc
sbb
aad
jo
popa
cmps
loope
mov
xor
jg
ret
xor
jp
shl
adc
rol
icebp
stos
shr
pmuludq
xor
cwde
xchg
mov
test
fist
ds
in
popf
push
retf
adc
(bad)
stc
and
jmp
mov
(bad)
jmp
lods
jl
das
jbe
cmp
cld
mov
add
cmp
popf
pop
cmp
sub
mov
inc
and
cmps
xchg
cs
gs
cmp
pop
lahf
jp
mov
sub
mov
xor
out
push
daa
mov
sbb
push
retf
dec
icebp
test
mov
aas
inc
fdivr
mov
inc
push
jecxz
mov
jnp
stc
clc
stc
xchg
sahf
mov
add
inc
mov
sbb
repnz
inc
arpl
pop
adc
sbb
leave
in
scas
imul
jecxz
sahf
out
dec
push
addr16
cmc
ds
add
fcomp
ds
cmp
and
xor
call
cmp
leave
xchg
inc
call
adc
jno
(bad)
cmc
aas
jae
push
fimul
popf
jns
mov
movs
inc
ins
ds
pop
sbb
es
and
adc
inc
aas
add
xchg
mov
(bad)
ja
popf
adc
movs
and
std
out
aaa
iret
adc
clc
pop
pusha
fisttp
outs
mov
or
div
or
push
inc
jle
(bad)
test
es
aad
outs
sub
push
aaa
inc
sub
push
mov
aaa
jl
sub
adc
dec
push
push
icebp
dec
inc
or
add
dec
mov
call
or
sub
jl
mov
aas
xchg
xor
push
fwait
cld
jg
adc
pop
cmps
fdivp
test
add
je
imul
les
loop
jmp
xchg
std
sti
ret
dec
add
ud1
out
add
inc
inc
ds
mov
dec
adc
mov
xchg
int3
inc
pop
push
daa
loope
sub
mov
loop
nop
push
icebp
(bad)
push
cmp
xor
dec
push
lahf
jp
sar
out
jecxz
(bad)
lds
xchg
pop
out
xchg
sbb
in
push
cmp
inc
mov
(bad)
inc
xor
outs
mov
push
mov
sti
jae
into
pop
int
cmc
add
or
cmp
sub
mov
out
mov
dec
push
dec
jbe
fnsave
inc
xor
scas
xor
stc
stos
ins
jns
fmul
stos
sbb
pop
add
jp
push
cld
movs
aam
and
xor
xor
jo
pop
aam
jb
sbb
ja
and
es
dec
inc
sub
jo
mov
fiadd
clc
mov
inc
out
aas
adc
rcr
mov
add
cmp
ins
sub
lods
adc
ret
mov
inc
push
(bad)
int3
xor
inc
inc
jecxz
int3
jb
push
retf
enter
std
or
shr
push
fdivr
das
cmp
push
pop
or
std
hlt
push
or
add
loope
sub
cs
pop
dec
mov
mov
fsubr
imul
mov
ins
fxch
inc
stc
lods
pop
push
sub
xchg
pop
xor
xor
adc
daa
stos
cwde
mov
xchg
dec
loopne
sub
jge
inc
cmp
jge
jmp
test
in
and
xor
arpl
mov
jbe
mov
ror
aam
mov
cmp
mov
dec
test
sbb
clc
mov
add
cli
(bad)
push
fs
mov
jae
jns
jmp
xchg
popa
adc
fwait
aas
adc
jp
add
scas
xchg
jl
cmp
fmul
stos
add
ror
in
mov
ja
test
push
js
lds
sbb
adc
push
dec
jmp
cmc
and
je
call
int3
int3
push
adc
leave
in
sbb
xor
sub
jmp
bound
stos
adc
into
(bad)
hlt
adc
xor
cmc
mov
popa
and
aad
pop
dec
inc
(bad)
lods
jb
loopne
pop
ror
adc
sub
jo
and
in
call
shl
nop
iret
mov
jg
sub
sbb
stos
push
mov
out
jmp
push
adc
sbb
pop
push
(bad)
pop
pop
mov
xacquire
loop
ffreep
hlt
test
adc
inc
sub
test
push
sub
mov
not
ret
out
jp
sbb
mov
out
cmc
mov
into
fwait
and
mov
out
jno
repnz
sti
shr
lods
test
(bad)
xor
in
jl
aam
dec
add
jmp
imul
(bad)
rcr
jns
adc
stos
vmwrite
push
outs
sbb
xchg
shl
lock
or
nop
mov
mov
adc
gs
test
lds
repz
sub
jbe
fs
(bad)
adc
out
dec
jns
popf
fsub
aas
lahf
test
xchg
bound
mov
ja
and
push
sahf
daa
inc
dec
shl
mov
in
shl
xchg
arpl
das
dec
xchg
sbb
fs
inc
mov
int3
mov
pop
adc
loop
call
test
(bad)
out
inc
stos
mov
ins
or
jne
xchg
sub
ret
jle
and
cmp
sti
ds
scas
out
sub
sbb
in
lods
jp
scas
dec
inc
out
push
push
dec
(bad)
daa
(bad)
retf
jbe
xchg
dec
or
sbb
jge
jge
adc
sbb
inc
mov
and
mov
ds
and
cmps
or
adc
adc
sti
push
jge
repz
cmp
scas
int3
sar
cmp
lds
lods
add
xor
jb
leave
(bad)
ds
les
mov
dec
repnz
ret
mov
(bad)
lods
cmova
popa
stos
xchg
mov
mov
stc
sub
dec
imul
cmp
jne
cmp
lds
aam
pop
fwait
adc
movs
popf
mov
push
and
inc
sbb
lea
sub
test
stc
leave
pop
arpl
icebp
(bad)
mov
add
cmp
ds
mov
cmps
ins
loope
add
lods
test
xor
hlt
adc
cs
(bad)
and
jns
jae
test
mov
inc
and
mul
sbb
add
or
sti
dec
inc
dec
jge
jecxz
jmp
shr
repz
das
push
imul
mov
mov
sti
sbb
mov
loopne
aam
lods
sub
lock
scas
jp
pusha
aad
lods
les
jns
dec
out
stos
mov
dec
call
and
(bad)
cs
imul
adc
cmps
push
inc
sti
push
lock
icebp
xchg
sbb
int3
pop
jl
cld
jl
cmps
push
sbb
mov
loop
jmp
inc
repz
xchg
movs
inc
hlt
loope
test
sbb
or
(bad)
sbb
jb
push
pop
ficom
cs
and
rol
scas
movs
sub
fcmovbe
sbb
sub
test
mov
sti
hlt
cmps
jle
inc
jae
test
loopne
dec
xchg
xlat
ret
push
cli
(bad)
adc
and
sbb
enter
and
sti
xor
xchg
(bad)
push
(bad)
cdq
xchg
add
into
sub
popa
pop
scas
add
mov
retf
mov
dec
int
sbb
push
ins
jbe
sub
jae
xor
adc
mov
in
scas
cmp
or
xchg
adc
aad
inc
ret
test
pop
fs
int
jecxz
mov
mov
in
mov
push
cli
dec
sar
scas
ins
mov
jle
shl
mov
and
sar
push
bound
push
fsubr
iret
pop
pmulhw
jno
mov
pop
lahf
cmps
fist
icebp
adc
xchg
test
dec
and
fs
ss
xor
jnp
mov
(bad)
mov
ret
xor
pushf
scas
scas
iret
push
dec
out
(bad)
cmp
shr
push
imul
and
inc
or
shr
adc
or
jo
push
or
push
cdq
movs
mov
std
adc
sahf
ror
cmps
cmp
adc
add
call
jae
lea
mov
lods
push
lods
xor
call
or
mov
add
or
cmc
rep
mov
mov
or
cmp
cld
mov
ds
jno
mov
arpl
pusha
into
jnp
mov
into
jmp
arpl
sbb
cmps
fs
into
(bad)
jp
or
sbb
jl
cmp
aaa
cld
sbb
(bad)
jmp
xchg
push
push
in
std
sub
or
push
das
pop
arpl
dec
jl
pop
xchg
xchg
inc
not
sub
pop
xor
pop
int3
sbb
stos
mov
call
pop
mov
jle
cmp
inc
xchg
pop
aad
sub
mov
mov
jecxz
jle
imul
jl
out
outs
ins
loopne
cmp
push
push
test
jae
cmps
cld
xor
cmp
inc
sbb
pop
dec
mov
push
jmp
push
or
push
or
add
mov
xchg
jnp
shr
das
sbb
xchg
sub
or
icebp
sub
aas
movs
jg
jb
mov
leave
ss
dec
xchg
sbb
inc
pop
sbb
sub
(bad)
sbb
and
rcr
pop
sbb
aam
imul
cmp
pop
push
loopne
in
cmp
mov
mov
daa
sub
inc
icebp
pushf
mov
repz
in
cmp
sahf
mov
and
mov
ins
mov
(bad)
out
add
gs
leave
(bad)
test
xor
xor
je
pop
mov
ret
xor
and
or
les
lea
dec
shl
push
iret
js
adc
push
ss
dec
add
in
sti
cmp
retf
repz
mov
jecxz
sub
dec
inc
in
test
(bad)
cmps
fldcw
adc
push
inc
cmp
pop
mov
imul
scas
pushf
xlat
pop
cmp
nop
mov
pop
jle
pop
mov
iret
xchg
not
out
mov
icebp
imul
(bad)
sbb
push
jb
inc
jbe
add
xchg
adc
mov
loopne
fiadd
xchg
mov
sub
push
bswap
nop
fidivr
pop
push
pop
or
adc
(bad)
imul
(bad)
aam
scas
add
(bad)
ins
or
fsubr
stos
push
jmp
fmul
jecxz
inc
(bad)
cmp
nop
hlt
mul
ins
mov
xor
or
mov
rol
xlat
imul
add
jmp
dec
lds
je
sbb
lods
or
es
jbe
std
in
cmps
xor
mul
sbb
mov
add
or
mov
movs
add
rcl
xlat
xchg
xor
push
(bad)
inc
xor
mov
arpl
aaa
dec
adc
(bad)
cmp
aaa
xor
cmp
sub
fs
in
lods
and
dec
mov
imul
imul
pop
xchg
mov
scas
and
cli
inc
jg
scas
ja
or
(bad)
bnd
inc
loope
repnz
mov
mov
mov
or
mov
in
leave
(bad)
inc
sbb
ins
adc
aam
mov
cmp
ss
call
jmp
jl
repz
enter
ins
out
aam
mov
mov
test
ins
and
std
or
push
dec
jbe
pop
lods
or
dec
sti
loope
mov
out
ds
xchg
pop
ins
cs
ins
rcr
cmp
and
dec
jg
mov
jae
fisub
aam
push
stc
mov
call
mov
fbld
jmp
iret
cmps
inc
lea
sbb
(bad)
mov
cmp
xor
jecxz
dec
mov
stc
cmc
jl
jne
das
test
(bad)
dec
mov
push
dec
sar
inc
pop
xor
mov
out
inc
js
aam
(bad)
push
cmovge
aaa
mul
shr
lock
(bad)
jmp
ins
inc
xchg
mov
xor
int3
shl
adc
test
imul
mov
aam
or
das
jmp
fcom
or
dec
add
jae
dec
and
arpl
imul
xchg
pop
ins
rol
dec
cmps
add
ins
imul
inc
ds
sahf
into
icebp
out
pop
sub
lods
pop
xor
jmp
lods
or
push
mov
cmps
addr16
mov
inc
inc
dec
ror
jae
push
mov
cmp
push
add
(bad)
int
mov
inc
adc
repnz
xchg
add
lods
inc
mov
cmc
pop
add
push
dec
das
xchg
pop
dec
or
loop
inc
xor
out
add
aaa
sti
mov
aam
dec
jns
dec
les
push
jmp
cmp
adc
pop
pop
and
pop
push
cmp
sbb
or
aam
shr
scas
dec
push
jle
jecxz
inc
fsubr
xchg
fmul
jbe
call
ret
jg
push
jb
xchg
into
dec
mov
xchg
jge
pushf
inc
or
sbb
mov
adc
bound
sbb
and
jle
in
mov
shr
pop
xor
call
popa
pop
adc
mov
mov
mov
adc
leave
jnp
push
push
loope
push
in
mov
adc
push
inc
inc
xor
dec
sbb
push
sub
cmp
js
outs
adc
fldenv
pushf
fwait
icebp
jmp
(bad)
fstp
jmp
sbb
or
(bad)
cmp
xchg
scas
nop
mov
inc
fimul
stc
repz
mov
jmp
stos
jg
xlat
and
push
lods
dec
cmp
int3
fwait
push
test
test
inc
ins
in
cld
sub
mov
int
add
es
xor
outs
jne
xor
shr
inc
xchg
xchg
outs
push
push
push
cwde
mov
xchg
ds
jae
pop
in
daa
and
stos
or
xor
imul
je
sub
mov
fisttp
stos
(bad)
rol
arpl
out
cmp
cmp
daa
adc
dec
scas
pop
xchg
clc
jl
inc
aaa
into
jmp
pop
push
mov
push
mov
and
dec
std
cmps
dec
xchg
xchg
dec
out
adc
(bad)
cmp
mov
sub
mov
in
xchg
pop
pop
adc
cmps
movs
sub
sub
dec
imul
outs
and
pop
push
jns
imul
mov
xchg
adc
dec
test
mov
and
in
xor
add
cwde
dec
xlat
add
fmul
popf
dec
mov
inc
aad
jno
push
pushf
repz
xchg
xchg
jae
jb
test
adc
cdq
(bad)
jne
adc
jmp
loopne
test
sbb
or
out
inc
push
inc
dec
out
push
mov
ficom
adc
adc
sar
push
push
movs
cli
sub
sbb
pop
in
dec
scas
out
mov
cmp
and
mov
inc
jbe
inc
cmc
xchg
push
(bad)
cmp
jo
jnp
push
xchg
xchg
jge
cld
popf
jp
xor
xchg
jb
jne
cmc
or
daa
dec
inc
push
mov
xchg
sub
iret
dec
cmps
mov
dec
xor
outs
sar
xor
jae
(bad)
stc
repnz
scas
or
xchg
stos
(bad)
adc
sub
mov
call
push
xchg
leave
sub
add
cmp
(bad)
bound
loop
hlt
inc
pop
add
xchg
sbb
and
mov
scas
pop
jmp
dec
rcl
test
mov
in
outs
and
(bad)
leave
std
ins
retf
xchg
scas
retf
sahf
mov
or
imul
sub
push
and
leave
jne
cli
iret
jmp
xchg
leave
xchg
jno
aas
jbe
mov
dec
int
std
in
mov
xchg
push
or
aad
out
add
xchg
or
(bad)
jae
repnz
fnstcw
outs
jl
dec
gs
mov
out
sbb
bound
push
popf
(bad)
fistp
ins
data16
jb
jle
ret
sub
push
loopne
jnp
xor
mov
lock
add
(bad)
push
inc
add
or
test
outs
jg
sub
(bad)
imul
xchg
repnz
cmps
sti
mov
cmp
pop
sub
(bad)
pushf
mov
iret
ror
adc
sub
cmc
jecxz
sub
xchg
adc
in
retf
sub
(bad)
xchg
dec
dec
xchg
scas
sar
lds
mov
mov
(bad)
repz
and
pcmpgtd
jp
aaa
mov
or
jmp
ss
daa
fist
ja
or
aaa
sub
idiv
imul
lods
std
and
xor
jle
(bad)
jmp
cmc
das
pop
ror
pop
movs
movs
imul
fdiv
ja
mov
fcom
mov
mov
mov
fwait
inc
push
out
cs
out
push
mov
lods
cli
cmp
dec
pop
in
mov
add
rcr
push
cdq
in
rcl
push
cmp
bound
outs
fnstenv
mov
mov
cmp
shl
in
pop
rcl
data16
les
dec
retf
mov
cmp
adc
shl
jne
mov
mov
aad
rcr
ja
cmp
cwde
sub
sub
movs
in
fisubr
cmp
shr
jecxz
sahf
icebp
mov
add
jl
enter
jne
and
rcr
cld
xchg
and
mov
(bad)
retf
enter
test
dec
fild
pop
in
mov
inc
cmp
adc
sti
movs
stos
sbb
mov
mov
push
fnsave
cld
ss
or
dec
xor
jnp
and
aam
inc
cli
fstp
stos
out
mov
push
mov
shr
jecxz
push
mov
mov
stos
mov
sub
jo
outs
add
ret
mov
fninit
jg
pop
and
sbb
rcr
mov
jbe
(bad)
mov
mov
add
test
pop
movs
push
inc
mov
and
sbb
int3
icebp
adc
inc
out
imul
and
inc
pop
mov
inc
xchg
dec
in
pop
ret
dec
and
ret
push
mov
cmps
jne
push
dec
push
xor
jbe
push
or
mov
push
jl
je
call
inc
out
out
popf
xor
clc
sahf
push
pushw
xor
retf
mov
sbb
fldenv
pop
mov
(bad)
lahf
dec
(bad)
imul
in
mov
scas
pop
mov
das
lds
and
hlt
test
xchg
(bad)
das
inc
fisttp
ins
retf
cmc
out
xor
imul
pop
(bad)
mov
add
jns
inc
jmp
stos
mov
mov
rcr
mov
mov
inc
or
mov
push
push
sub
mov
pop
pop
aas
jmp
jmp
or
xor
xchg
rcl
add
sbb
jle
in
sub
or
adc
and
ja
dec
pop
pop
xchg
cmp
int3
cmp
cmp
jbe
fmul
inc
das
(bad)
cld
sub
mov
mov
dec
push
xchg
push
xor
pop
xchg
test
xchg
cmp
or
mov
xor
lock
mov
movs
popa
jp
pop
pop
addr16
arpl
into
sub
fisubr
test
dec
dec
pop
arpl
nop
jnp
hlt
sbb
cli
aad
cmc
jo
jmp
xlat
sbb
test
sub
movs
hlt
mov
xchg
(bad)
jnp
dec
dec
mov
xchg
adc
fmul
xchg
jnp
ret
adc
sbb
ret
movs
das
inc
sbb
jmp
dec
sub
or
push
mov
mov
inc
in
pop
xchg
adc
mov
push
pop
mov
push
add
add
mov
pusha
cmp
push
sbb
cmp
(bad)
sar
(bad)
sub
push
xor
sbb
sub
aaa
mov
es
sub
mov
fmul
xchg
jge
mov
int3
iret
mov
mov
push
jbe
jmp
xchg
das
cmps
leave
int3
dec
or
pop
mov
div
out
xchg
jmp
dec
cmp
daa
mov
sbb
test
dec
xchg
add
gs
aam
push
sub
loope
jg
add
cmps
stos
push
xlat
dec
push
fcomp
jbe
test
inc
jns
fdiv
cmp
imul
cmp
lods
fldenv
jno
(bad)
jmp
fcmovnu
loop
and
sbb
lock
cld
scas
outs
retf
add
repz
inc
mov
stc
inc
dec
outs
aaa
std
push
cmp
fwait
pop
dec
push
cmp
sub
dec
or
je
adc
ja
mov
icebp
imul
in
js
dec
scas
ins
adc
add
xchg
stos
shl
adc
jns
jmp
repz
in
and
in
(bad)
hlt
leave
js
loop
xor
cmp
pop
jg
outs
inc
sub
lds
mov
pop
rol
or
jg
cmp
stos
sub
lock
dec
push
movs
sbb
enter
imul
xor
add
adc
or
inc
aam
(bad)
(bad)
mov
int3
(bad)
aaa
inc
clc
mov
and
daa
sbb
inc
sub
add
jnp
into
outs
movs
sti
and
xor
aaa
mov
cmp
pop
jns
mov
repnz
cmp
jnp
xchg
fsubr
and
out
sbb
test
jp
shl
sbb
sub
les
xlat
inc
adc
fsubr
nop
fmul
jnp
dec
xor
and
mov
int
push
loope
(bad)
(bad)
shl
(bad)
and
stos
jb
fldcw
xchg
iret
push
call
popa
mov
and
mov
sub
sub
inc
mov
pop
icebp
mov
mov
push
push
jp
sub
xchg
pop
push
sbb
outs
dec
aam
ja
movs
sub
nop
push
jmp
sbb
test
js
test
loop
inc
xchg
push
sbb
ins
jp
cmp
jmp
outs
sbb
sub
xchg
aaa
mov
push
push
or
jnp
sub
out
jp
ret
xchg
mov
aas
jno
leave
cli
out
icebp
cmp
test
jl
test
adc
mov
jns
push
rol
sub
cdq
mov
push
fisub
lods
sbb
mov
(bad)
dec
push
jno
jmp
pop
mov
les
sbb
stos
jno
xchg
mov
std
pop
cmp
(bad)
in
cmp
pop
jb
or
xor
sbb
mov
fisttp
push
dec
mov
inc
push
sbb
cmp
mov
pop
int
xchg
add
sub
leave
in
repz
movs
jl
inc
cmp
xchg
movs
scas
push
call
rcr
ret
jmp
sbb
sbb
push
aas
jp
sub
fld
pop
not
sub
mov
xchg
push
or
pop
mov
xchg
cmp
jp
cmp
jno
pop
xor
or
inc
inc
pop
cli
test
mov
xchg
inc
sub
fsubr
shr
push
mov
xchg
mov
or
xor
adc
dec
add
xchg
jb
daa
scas
out
jmp
(bad)
into
mov
xor
pop
inc
add
cwde
stos
xchg
(bad)
cli
cmp
cmp
pop
pushf
jmp
bound
add
(bad)
cli
imul
jl
test
mov
cmps
aad
pop
cmc
repnz
mov
repnz
ja
or
xchg
mov
add
into
mov
test
(bad)
add
jecxz
pop
lea
ins
popa
xor
popa
adc
add
addr16
cmp
mov
out
in
jl
add
fwait
mov
sti
xlat
repnz
add
imul
(bad)
ror
popf
fisttp
ss
jmp
dec
jle
pop
in
test
out
dec
sbb
jae
mov
outs
mov
mov
sub
shl
enter
adc
int
movs
xor
pop
mov
xchg
iretw
or
imul
neg
mov
jnp
pop
(bad)
xchg
stc
pop
pop
add
xchg
(bad)
and
push
jecxz
pop
adc
pushw
cmc
ret
mov
pushf
div
inc
push
sub
sbb
adc
add
pop
inc
pop
ret
loope
adc
add
adc
mov
add
shr
inc
jbe
es
pop
jo
out
out
pop
ja
test
mov
mov
xchg
pop
(bad)
aaa
(bad)
imul
fisub
pusha
mov
mov
in
jnp
sub
mov
aas
push
or
sti
mov
jp
pusha
imul
push
cld
jecxz
xchg
xchg
inc
lods
or
or
push
push
add
xor
or
stc
jmp
das
arpl
mov
loope
pop
cmp
jbe
mov
imul
(bad)
adc
fucomp
cmp
sbb
iret
jmp
pop
dec
rol
fs
ins
cmp
mov
push
ret
jmp
jge
xchg
cmp
nop
inc
sub
and
repnz
scas
pushf
ret
popf
or
xor
pop
mov
add
jmp
mov
call
nop
fiadd
sbb
hlt
paddsb
mov
pop
xchg
fmul
mov
les
jnp
enter
js
gs
pop
cmp
push
push
dec
jmp
mov
aaa
in
inc
int3
(bad)
stos
and
xor
aaa
ins
out
xor
push
popa
ins
es
int3
push
test
retf
push
cmp
neg
ja
call
jo
push
ins
out
mov
pop
mov
in
dec
sub
and
dec
dec
hlt
dec
stc
sbb
(bad)
lds
call
repz
sub
mov
cmps
sub
mov
enter
pop
stos
inc
adc
retf
sub
pushf
xor
xchg
test
mov
cmp
cmp
mov
in
out
add
pop
ja
movs
dec
and
fcomi
stos
punpckhbw
aam
xlat
iret
les
fwait
adc
test
fdivr
dec
sti
mov
xchg
fwait
rcr
xor
xchg
ins
push
sub
xchg
sbb
(bad)
cli
sub
mov
push
push
aas
pop
and
(bad)
xor
jb
pop
imul
cmp
cmp
xchg
aam
stos
cmps
push
xor
sbb
popa
xchg
out
pop
mov
xor
jo
mov
popa
cmp
call
sbb
xor
or
fsubr
rcr
ds
int
jge
fcom
pop
mov
cld
pop
dec
push
inc
movs
aad
fisub
sbb
push
test
push
out
inc
clc
jnp
jno
inc
inc
dec
imul
xchg
pop
mov
xchg
stos
or
pop
pop
mov
add
adc
in
sbb
xor
push
ins
push
push
inc
and
pop
jbe
inc
mov
hlt
sub
nop
lods
test
mov
xor
lahf
enter
clc
jg
and
stos
dec
cmp
aad
xor
fnsave
mov
leave
fnstenv
icebp
sbb
out
jmp
sbb
xchg
fistp
jo
fld
popf
stc
xchg
cmp
and
outs
mov
ins
and
mov
push
jge
or
xchg
mov
std
or
push
repz
movs
(bad)
fld
movs
dec
mov
sti
daa
add
enter
dec
repnz
xorps
test
cmp
sbb
lock
and
or
sub
loope
dec
jle
aam
nop
sbb
xchg
dec
push
inc
jmp
dec
retw
cmc
fst
pop
jno
enter
mov
call
and
lahf
xor
jmp
rcl
test
mov
pushf
aaa
mul
adc
outs
loopne
scas
sub
dec
xor
mov
fdivr
xchg
pushf
pop
cmc
(bad)
js
pop
mov
test
push
les
rcl
sub
push
sbb
add
jg
stos
out
(bad)
test
sbb
or
push
iret
xor
add
ror
shl
mov
mov
push
aam
clc
dec
movs
ror
arpl
sub
xchg
push
popa
mov
mov
leave
clc
pop
sbb
mov
pop
or
jbe
add
ins
(bad)
xchg
push
xor
pop
aam
push
and
push
or
nop
ss
ret
sbb
mov
mov
loope
mov
jg
xchg
in
movs
mov
mov
(bad)
(bad)
adc
nop
xor
and
mov
loope
mov
ins
fmul
jno
cmp
aas
movs
test
mov
test
xlat
jmp
mov
inc
and
bswap
stc
ret
enter
sbb
inc
ja
adc
retf
outs
sbb
mov
arpl
test
jge
imul
jmp
or
lods
mov
mov
cld
enter
jg
enter
sub
mov
lock
shr
push
add
mov
mov
scas
(bad)
and
xor
aam
pop
out
cmp
test
(bad)
adc
push
lahf
sbb
outs
jg
dec
rcr
xchg
fs
pop
movs
test
inc
xchg
es
aam
test
add
cmp
sahf
popf
iret
adc
aaa
ret
not
mov
out
xchg
das
inc
ror
or
push
inc
xor
jmp
stc
jne
jbe
sti
cmc
push
adc
inc
or
push
add
xor
sub
cmp
sub
and
js
cs
rol
ds
mov
xchg
fld
jae
xchg
push
(bad)
push
jmp
rol
cmps
pop
mov
cmps
std
sbb
sbb
mov
add
mov
xor
xchg
jl
jb
je
sbb
sbb
sub
pop
push
pusha
dec
ds
bound
fnstsw
inc
add
int3
inc
jnp
in
ja
sbb
mov
mov
cmp
into
add
xor
data16
xlat
movs
mov
add
cmps
enter
enter
adc
mov
dec
xchg
or
out
loop
mov
dec
loopne
xchg
lods
movs
daa
xchg
xchg
icebp
loop
scas
or
in
mov
sbb
pop
and
dec
repz
sub
fild
arpl
push
fild
mov
inc
push
shl
xor
inc
xchg
cmps
int
push
dec
das
cmp
xor
dec
add
aam
out
xor
xor
nop
xor
cli
clc
push
and
mov
and
out
xchg
aam
out
test
or
jp
pop
lods
movs
pushf
imul
pop
and
and
push
mov
jne
inc
call
movs
in
or
mov
lods
and
ror
jg
ins
jae
jl
frstor
(bad)
mov
mov
es
push
pop
push
xchg
gs
mov
js
rol
push
adc
inc
dec
shl
aad
ret
mov
cwde
dec
clc
dec
mov
test
imul
adc
les
mov
adc
sub
mov
aaa
mov
sub
fcmovnb
and
icebp
test
mov
shl
call
and
and
inc
retf
dec
out
sub
lods
mov
loope
scas
in
or
aad
cmp
jnp
sti
mov
stos
dec
scas
(bad)
and
outs
adc
jg
add
loope
lods
xor
std
fwait
jmp
mov
in
push
jbe
mov
mov
mov
test
push
ret
jg
test
mov
fcomp
xor
xchg
and
push
inc
js
or
xor
scas
mov
test
inc
add
adc
dec
ins
cmc
or
add
call
xchg
sbb
push
loop
ja
test
adc
dec
and
popa
lods
test
jns
xlat
shl
sbb
data16
sbb
push
mov
pusha
stos
xrstor
dec
in
in
(bad)
xchg
push
mov
dec
dec
xor
retw
mov
and
jecxz
test
xor
jecxz
mov
cdq
xor
and
(bad)
sbb
lea
dec
sub
mov
add
sub
es
or
add
call
(bad)
xor
cmc
sub
in
pop
inc
inc
inc
cmp
lahf
xchg
clc
or
mov
scas
test
fsub
dec
fisubr
fcmovne
cmp
jmp
retf
rcr
daa
xchg
add
sbb
jecxz
lahf
fild
cmc
xor
sbb
xchg
hlt
fcos
jmp
add
cmp
mov
inc
sbb
sub
jo
cmp
out
pushf
xchg
daa
cwde
mov
mov
into
popf
addr16
fadd
add
mov
sahf
pop
cmp
loope
mov
adc
fs
and
adc
in
sbb
call
ins
dec
pop
mov
mov
jbe
adc
cli
dec
push
cs
cmovp
movs
jnp
lds
mov
pop
push
call
mov
bsr
sub
add
xchg
jge
cmp
jb
test
push
adc
test
sub
cdq
mov
dec
sbb
pop
cmps
adc
xor
or
xchg
adc
sbb
inc
sar
adc
ds
add
call
xor
mov
scas
mov
inc
jns
inc
out
loopne
jb
push
sub
inc
cmps
jmp
and
pusha
mov
sbb
adc
sbb
xchg
test
leave
jbe
imul
test
(bad)
jmp
mov
adc
dec
(bad)
adc
mov
adc
movs
inc
aad
je
outs
retf
clc
sti
cmp
push
cmps
or
bound
mov
inc
adc
movs
inc
mov
stc
ja
out
retf
test
jb
mov
jae
mov
jnp
repnz
hlt
out
xor
jmp
adc
mov
jmp
fist
(bad)
jmp
push
lds
inc
mov
stos
aad
push
inc
xor
(bad)
mov
pop
daa
dec
ret
jno
ret
std
sub
adc
mov
cmps
dec
dec
or
push
push
xchg
jb
or
imul
mov
push
es
push
xchg
dec
int
out
mov
sti
xor
jns
sub
or
jnp
push
mov
stos
cmps
iret
(bad)
dec
(bad)
hlt
sbb
outs
xor
(bad)
ficom
jne
scas
movs
mov
or
ret
jbe
stos
cmp
call
inc
xchg
loope
push
push
not
popf
loopne
mov
leave
pop
lds
mov
jo
and
xchg
cwde
add
leave
fcom
in
adc
lahf
pop
mov
push
and
ins
push
outs
jmp
mulps
std
inc
movs
pop
xchg
enter
xor
test
js
(bad)
mov
mov
adc
xlat
jne
es
fmul
lds
sub
jae
std
mov
call
hlt
pop
xor
and
sbb
pop
icebp
push
repnz
daa
add
mov
sahf
cmp
sar
add
sub
ja
or
xor
and
pmaddwd
sub
pop
xchg
xchg
(bad)
outs
mov
xor
push
jmp
je
pusha
(bad)
mov
or
dec
sub
add
jae
in
stos
imul
jmp
fist
shr
sahf
jne
dec
in
mul
lds
sahf
icebp
pop
aam
jno
test
pop
add
aas
sub
dec
push
test
mov
in
inc
sbb
cli
mov
cmc
iret
xlat
dec
shl
adc
adc
movs
icebp
sub
add
js
in
std
adc
and
shl
jp
add
cdq
sbb
aad
pop
cmps
mov
addr16
jge
or
outs
xor
repnz
and
push
pop
mov
imul
cmp
sbb
cmp
dec
(bad)
scas
std
sub
and
add
out
inc
mov
and
xchg
mov
add
in
bound
add
pop
jne
out
scas
mov
cmps
fidiv
push
sub
jg
mov
adc
and
jl
sub
xor
hlt
cwde
push
jno
std
jbe
push
das
xchg
pop
push
adc
mov
test
and
dec
mov
xchg
xchg
lahf
adc
clc
inc
mov
scas
enter
mov
(bad)
mov
or
pop
push
outs
xchg
(bad)
or
jns
jge
xchg
scas
jmp
cs
cmp
jge
inc
mov
ins
pusha
xor
add
push
jns
js
lahf
pop
sbb
dec
or
(bad)
mov
rcr
pop
ds
push
sbb
mov
mov
push
xchg
sub
xor
les
imul
shl
mov
mov
sbb
lahf
jle
push
fild
inc
sbb
xchg
jecxz
inc
xor
fadd
les
out
enter
dec
adc
mov
mov
sar
pop
pop
clc
popf
in
inc
shr
add
stos
ficom
xchg
mul
inc
xchg
in
mov
push
icebp
into
imul
inc
mov
sub
cmp
leave
mov
jmp
pop
outs
jmp
test
ds
push
adc
test
add
ror
sub
dec
inc
xchg
dec
jecxz
fwait
inc
sar
int
(bad)
addr16
sub
das
aas
pop
jo
jecxz
xor
or
lds
mov
and
xchg
les
out
cmp
push
cwde
ss
inc
sbb
mov
popa
ret
arpl
mov
arpl
repnz
cli
iret
int
scas
aas
lea
pop
imul
xchg
and
(bad)
addr16
ds
xlat
pop
sub
xchg
or
loope
int
out
test
pop
bound
stc
add
out
loopne
test
jne
add
jmp
mov
push
jbe
out
push
or
or
lods
xor
ja
scas
in
xlat
mov
fcomp
sti
mov
pop
add
xchg
inc
xor
or
xchg
out
and
imul
cli
pop
sbb
(bad)
xor
jbe
jge
jle
xchg
xlat
or
sub
and
adc
js
mov
pop
test
or
test
in
fs
pop
icebp
lods
scas
outs
inc
movs
jmp
inc
xchg
data16
pop
add
pop
arpl
shr
std
ins
dec
(bad)
jo
pop
or
loopne
mov
cli
and
pop
pushf
enter
fwait
mov
sub
popf
adc
sbb
or
(bad)
std
fiadd
cs
pop
addr16
add
sub
leave
ss
dec
jmp
(bad)
mov
sti
aam
add
test
std
and
dec
(bad)
(bad)
and
in
ret
int
ret
int3
mov
mov
jg
popf
retf
lods
sub
mov
xor
scas
xchg
sbb
jo
inc
mov
dec
sbb
fwait
shl
adc
mov
mov
xlat
adc
ins
fist
add
sub
sbb
ror
sub
punpcklbw
ins
or
or
int
fisub
in
int3
aas
(bad)
out
ss
or
movs
xchg
aas
js
dec
sbb
gs
shufps
mov
rcl
add
in
scas
addr16
pop
out
pop
enter
mov
and
push
xchg
jl
(bad)
sbb
inc
jns
clc
jbe
sub
adc
sub
outs
mov
adc
stos
lahf
sbb
rol
sub
push
not
stos
mov
xchg
int
fs
in
sahf
ds
sub
cmps
sub
je
(bad)
mov
repz
mov
cli
add
in
mov
ret
ins
mov
retf
shr
mov
nop
xor
shl
test
retf
mov
mov
add
mov
mov
push
jns
js
outs
pop
or
fimul
shl
and
mov
pop
outs
or
add
or
les
gs
and
mov
xchg
add
cmp
sahf
mov
fisubr
aaa
push
gs
cmp
dec
cmp
mov
clc
pop
push
int
mov
idiv
imul
sbb
mov
scas
sbb
das
and
std
jae
call
sbb
cdq
xchg
pop
dec
push
aam
(bad)
sti
cvtps2pi
inc
sbb
inc
sub
jno
jnp
pop
stc
cwde
and
and
push
adc
loop
jo
cld
pop
sub
inc
cmps
test
ins
ret
das
push
cmp
les
lods
mov
mov
ss
sbb
jl
in
xchg
sbb
cli
xchg
add
mov
push
dec
imul
pop
in
adc
sbb
enter
enter
cmps
sub
call
inc
mov
std
test
sub
in
ret
(bad)
jnp
sub
imul
xor
mov
aad
mov
push
fcom
(bad)
inc
add
idiv
mov
jg
arpl
jbe
mov
imul
imul
mov
(bad)
lods
rcr
inc
push
sub
(bad)
cmp
in
xchg
ss
out
les
sub
mov
movs
add
xlat
test
loope
mov
mov
xchg
inc
stc
adc
add
in
jg
gs
or
lds
clc
xor
frstor
enter
lods
lock
imul
int
xor
sbb
inc
inc
enter
pop
mov
fwait
aam
rcr
std
mov
mov
sbb
inc
imul
inc
xchg
inc
and
or
push
cwde
jne
lahf
in
dec
jnp
jmp
sub
jp
stos
retf
ficomp
cmp
setg
popf
outs
pop
aaa
popa
pop
adc
int3
adc
ror
ins
dec
mov
xor
iret
mov
mov
pop
aaa
and
rcr
sub
addr16
call
and
ins
and
pop
sbb
cli
addr16
push
cmps
xor
rcr
push
shl
(bad)
jne
push
xchg
fisubr
mov
add
or
push
cwde
jl
in
pop
nop
pop
and
out
add
or
clc
mov
mov
stc
and
and
cmp
out
inc
cmp
out
jns
adc
call
dec
ss
push
mov
fcmovu
shr
mov
bound
mov
into
pop
and
pop
xchg
xor
test
hlt
xchg
loope
mov
push
mov
loop
test
fdiv
dec
add
rep
test
mov
mov
push
retf
(bad)
xchg
mov
lahf
fiadd
out
adc
(bad)
loop
push
popa
popf
jb
fcmovb
imul
add
cmp
or
inc
dec
pop
fcomp
retf
sub
cmps
add
gs
(bad)
addr16
std
mov
mov
nop
sbb
mov
jne
sub
pop
test
mov
dec
sbb
mov
fsub
and
sub
jne
test
mov
jno
push
addr16
(bad)
call
and
push
xchg
jmp
sbb
and
cdq
rol
xor
xor
xlat
inc
sub
scas
inc
test
dec
pusha
xchg
test
lea
mov
mov
not
js
sbb
int3
mov
(bad)
in
shl
sub
(bad)
jmp
mov
or
and
xchg
cmps
cmp
pop
jmp
jne
lods
rol
adc
and
xchg
inc
clc
sub
mov
mov
cmc
cmps
mov
xor
add
cmp
in
or
adc
xor
push
inc
xchg
add
mov
retf
mov
ins
jb
fs
out
sub
sbb
lods
jmp
les
add
mov
pop
or
xor
mov
dec
sbb
or
mov
sub
pop
sar
xchg
outs
mov
inc
xchg
or
pop
fbstp
adc
icebp
neg
push
and
cld
gs
rcr
scas
call
cmc
shl
test
or
xchg
icebp
add
(bad)
xchg
pop
sti
rcl
test
sub
pop
cmp
adc
fucomip
pop
push
shr
jne
mov
pushf
mov
mov
cmps
push
mov
adc
inc
xlat
sub
mov
mov
into
pop
rcl
mov
in
xor
add
or
sahf
xchg
mov
retf
retf
(bad)
aad
in
dec
lds
xchg
mov
dec
jge
(bad)
test
shr
inc
nop
iret
js
aaa
xlat
xchg
mov
sbb
mov
sub
mov
imul
popf
shr
nop
xchg
shr
ret
mov
ds
add
xchg
outs
adc
bound
push
cmps
inc
frstor
sub
in
xchg
push
sbb
or
adc
jecxz
repnz
data16
pop
sub
stc
sbb
mov
jg
fisub
ret
sub
push
add
mov
(bad)
outs
xchg
xor
and
sbb
imul
nop
sub
push
push
adc
ss
jp
popa
scas
int
retf
outs
lea
cmps
out
or
cmps
adc
out
data16
or
inc
movs
cmp
into
xchg
hlt
int3
jae
fs
dec
sub
repnz
dec
xor
mov
dec
dec
ja
hlt
xchg
lods
or
test
mov
and
jmp
mov
or
push
xor
cmps
fs
or
je
ins
call
mov
jbe
push
xchg
dec
rcl
dec
mov
push
fldcw
sub
lock
fild
cmc
stos
dec
sahf
outs
jae
push
xchg
adc
int3
xchg
or
mov
movs
imul
lea
jnp
xchg
ret
mov
xchg
adc
fstp
inc
push
xchg
shl
cmps
lods
and
stos
ins
daa
dec
fst
mov
arpl
mov
xor
mov
mov
out
pop
lods
shl
jo
push
cmp
call
adc
jmp
fdiv
add
int
pop
jo
in
adc
pop
outs
cmp
(bad)
aam
aaa
dec
fnstcw
push
std
in
add
leave
jmp
lods
dec
xor
das
add
mov
(bad)
jp
stos
repz
fdiv
and
loop
pop
xor
xchg
mov
cmp
movs
ror
fdivr
clc
(bad)
test
mov
(bad)
xchg
das
loopne
sahf
jp
lock
xchg
daa
push
test
jecxz
inc
fistp
mov
jge
in
sar
push
push
aaa
out
and
and
pop
push
mov
test
mov
jo
rol
mov
lock
test
add
dec
add
aas
cdq
shl
ret
shl
push
icebp
ret
mov
or
imul
dec
test
inc
cmp
mov
jbe
les
pop
adc
mov
bound
add
mov
out
and
enter
inc
mov
out
cmp
aad
mov
repnz
nop
add
dec
jp
push
jo
cmp
jnp
clc
shr
sub
sbb
sub
mov
sbb
enter
fdiv
sbb
and
icebp
mov
and
xchg
push
mov
fmul
retf
jle
bound
inc
fisttp
mov
add
xor
int
dec
call
dec
and
bound
push
push
inc
inc
and
pop
or
push
shl
mov
jmp
sbb
cld
dec
in
stos
retf
add
aas
stos
gs
dec
xchg
push
dec
mov
into
xchg
cmp
leave
pop
mov
jp
xor
ret
aaa
jmp
jns
pusha
xor
mov
or
jmp
les
jb
push
push
movs
dec
adc
pop
fild
inc
push
mov
fidivr
lahf
bound
mov
loop
pushf
icebp
inc
xor
jge
adc
cmp
mov
pop
mov
or
mov
inc
cwde
add
fmul
fsub
xor
repz
jo
add
adc
ret
iret
stc
dec
jmp
dec
cmp
sub
push
enter
call
out
pop
ret
div
fs
push
nop
fwait
pop
inc
or
dec
xlat
dec
in
pop
das
and
pop
inc
out
out
push
inc
daa
addr16
push
push
cld
stc
inc
les
(bad)
in
mov
cld
jo
data16
push
iret
jle
les
add
popa
ret
sbb
xchg
call
or
shl
mov
mov
movs
jmp
or
bound
arpl
addr16
sbb
jmp
aas
xchg
dec
mov
and
cmp
retf
sub
cmc
test
sub
jo
repz
jge
push
call
push
cmp
repz
into
push
and
in
sub
mov
add
or
popa
push
jg
cmp
sbb
or
imul
mov
test
fcom
aas
push
mov
and
not
out
dec
xor
out
dec
jl
jne
mov
data16
sub
push
cmps
out
or
dec
ins
add
imul
bound
in
push
inc
into
sbb
mov
sbb
mov
xchg
retf
das
out
div
or
pop
call
dec
or
add
sahf
cli
sub
sub
dec
jno
imul
push
cmp
xor
call
retf
mov
xchg
(bad)
mov
inc
lods
pmullw
mov
sub
push
mov
pop
jg
and
sub
in
cmp
mov
inc
mov
fcom
add
dec
pop
out
sbb
mov
adc
cmps
xor
jo
jp
sbb
call
aam
aas
in
mov
movntq
inc
scas
and
jge
jmp
(bad)
outs
xchg
inc
add
adc
enter
or
adc
repnz
jnp
push
sbb
movs
inc
cmp
scas
or
mov
add
mov
and
out
xchg
bound
lahf
scas
or
fs
inc
neg
fstp
adc
cmp
icebp
movs
shl
add
dec
sbb
(bad)
mov
xchg
jbe
mov
mov
ins
inc
sar
mov
adc
mov
add
dec
loopne
add
(bad)
cmc
iret
enter
xchg
mov
jmp
adc
enter
push
or
(bad)
neg
aam
xchg
in
ss
adc
jne
cmp
ins
add
rol
repnz
sbb
cld
cmp
les
pop
adc
mov
pushf
clc
or
stos
ret
dec
dec
sub
cwde
lds
fmul
sbb
push
cmp
mov
sub
push
mov
out
cmp
xchg
int3
mov
outs
cmp
or
movs
call
xchg
cmps
mov
xchg
xor
out
push
mov
stos
pop
outs
pop
jmp
in
rcr
mov
stc
pop
cli
or
imul
jae
inc
nop
(bad)
dec
ds
mov
mov
lock
xchg
dec
or
test
mov
cmp
pop
mov
xchg
stos
repz
add
iret
push
in
mov
pop
sbb
jl
es
jne
xchg
jle
and
test
fdivr
push
call
leave
aam
test
daa
lods
repnz
mov
xchg
sub
dec
adc
movs
push
cli
xor
mov
pushf
aad
or
popa
inc
cmp
call
jge
(bad)
fstp
or
scas
inc
and
push
call
stc
pop
sbb
xchg
sbb
adc
push
leave
jge
or
jb
pushf
xchg
in
(bad)
mov
les
aas
repnz
leave
stc
sub
lods
xchg
and
and
std
and
dec
test
xor
ficomp
mov
scas
addr16
push
jp
inc
xchg
test
inc
dec
mov
(bad)
and
push
jge
or
ret
push
fiadd
mov
lods
stos
jmp
out
aas
sbb
xchg
xchg
icebp
xor
loop
test
sub
and
xchg
(bad)
fiadd
shl
cdq
jb
xchg
mov
imul
iret
scas
inc
xchg
push
adc
scas
cmc
ret
retf
test
pop
xor
cmc
cmp
frstor
or
cmp
inc
mov
push
mov
bound
fsub
ret
fistp
add
dec
xchg
jg
enter
and
xchg
shr
xchg
cmp
xchg
sahf
or
(bad)
mov
retf
push
fdiv
sub
pcmpgtb
xchg
aas
sub
pop
adc
mov
xchg
or
inc
test
and
mov
stos
int3
mov
mov
pop
mov
iret
int
cli
mov
int
pushf
ud2
int
jecxz
cmps
pop
ds
mov
aam
inc
dec
aas
lea
mov
retf
inc
push
xlat
stos
je
inc
leave
mov
push
call
ds
bound
xor
adc
or
mov
aad
xor
imul
mov
mov
xor
dec
fstp
fldenv
mov
sub
jle
ret
movs
pusha
jne
inc
jne
cmp
xor
xor
mov
imul
(bad)
clc
bound
dec
sar
jge
xchg
gs
lock
popa
fldcw
aad
paddw
std
push
lods
jb
pop
mov
inc
js
outs
shl
ja
and
sahf
sbb
addr16
std
xor
ins
jecxz
ss
popa
hlt
scas
adc
pop
jae
sbb
mov
in
push
mov
push
sub
sbb
in
arpl
xor
pop
dec
jb
xchg
stc
lds
loope
adc
out
mov
mov
cmp
leave
sahf
xchg
movs
out
dec
pusha
js
pop
fld
mov
shr
mov
call
stos
fist
fdivr
outs
mov
mov
jae
cmp
(bad)
xchg
into
push
frstor
imul
lock
xchg
mov
leave
dec
(bad)
jg
lahf
sti
retf
mov
pop
push
mov
jo
(bad)
jbe
int
mov
jbe
pop
mov
lea
in
mov
test
scas
inc
addr16
mov
out
dec
add
xchg
pop
test
out
ret
jb
push
imul
inc
mov
xlat
xchg
int3
fst
inc
cmp
(bad)
push
(bad)
stos
mov
lods
cld
dec
sti
cld
jl
jp
rol
cdq
or
cs
adc
pop
xor
cmp
das
xor
and
ja
add
inc
jmp
mov
adc
fcom
xor
scas
enter
inc
rol
dec
out
stc
xchg
add
add
fisubr
lahf
mov
xor
std
mov
and
outs
cli
add
mov
xor
(bad)
in
mov
cmp
sub
xor
imul
stos
aad
fwait
test
mov
mov
jecxz
pop
mov
out
out
mov
dec
pop
jne
xchg
push
int
xor
sbb
cmp
or
and
sbb
cmc
fdiv
push
xchg
jmp
adc
retf
adc
add
rcr
push
inc
mov
lds
mov
cld
fsubr
je
imul
stos
test
xlat
add
mov
dec
or
jg
push
push
or
repz
dec
call
add
aas
sbb
call
(bad)
lock
dec
popa
push
fwait
jb
and
bound
retf
xor
push
ins
fisub
add
push
add
push
lock
sbb
into
jne
mov
nop
xlat
in
mov
test
inc
adc
add
or
xor
jo
(bad)
xchg
adc
xchg
test
pop
std
sbb
sub
or
xor
fld
mov
das
sbb
inc
aas
pop
and
mov
out
push
cmp
mov
lds
into
test
(bad)
mov
lods
mov
in
pop
cmp
jnp
mov
dec
leave
xchg
push
pushf
test
cmps
dec
jle
pop
fisub
sub
push
sbb
pop
lods
jge
iret
push
fs
nop
mov
mov
retf
sahf
fs
pop
retf
push
fwait
or
sbb
jp
dec
dec
jne
ins
xchg
sbb
pop
rcl
dec
mov
inc
aaa
sti
or
ds
and
xchg
aas
inc
and
sahf
and
jno
jp
pushf
jmp
sub
push
add
mov
dec
lock
imul
fld
rcl
sar
mov
mov
imul
mov
imul
inc
in
pop
retf
and
dec
lahf
pusha
hlt
adc
in
push
xchg
outs
(bad)
and
das
stos
in
lldt
xor
push
mov
ds
inc
pop
xor
mov
inc
push
cmp
and
out
dec
loopne
sbb
adc
movs
sub
ror
jecxz
popf
call
pop
bound
out
jnp
in
cmovle
sar
adc
arpl
retf
call
cmp
nop
sub
rol
int
push
mov
xchg
pop
cmp
and
pop
dec
icebp
(bad)
adc
jg
fidivr
mov
mov
clc
jg
retf
mov
pop
xchg
push
inc
(bad)
aam
out
mov
in
out
inc
out
cmp
push
std
push
push
ins
adc
jmp
mov
aam
inc
push
add
jge
pop
cmp
test
xor
cmps
xchg
pop
inc
push
jmp
in
push
mov
call
jmp
dec
lea
push
pop
xchg
pop
rol
in
mov
mov
push
mov
mov
test
pop
inc
out
sbb
das
repz
sahf
fld
jle
repz
pop
add
lods
enter
sub
mov
(bad)
push
push
or
out
das
repnz
es
or
mov
das
sub
pop
stos
ds
xor
(bad)
sub
or
mov
inc
mov
dec
xor
pop
test
aas
mov
xor
add
push
jne
or
adc
mov
and
lds
or
icebp
mov
or
inc
inc
fadd
adc
(bad)
dec
jb
xor
data16
inc
imul
xchg
mov
xor
aad
test
mov
(bad)
in
das
inc
shl
(bad)
xor
pop
enter
dec
movs
es
jle
jo
call
fild
enter
daa
xchg
in
dec
loope
pushf
push
cmps
cld
mov
ins
sub
jns
or
mov
arpl
(bad)
popf
lock
add
sbb
adc
inc
movs
(bad)
adc
retf
mov
out
push
fsubr
out
pusha
das
dec
push
lea
aas
inc
sahf
push
cli
mov
or
xor
sub
mov
in
add
push
sbb
jg
cmps
les
push
sti
sbb
pop
cmp
add
or
retf
jle
fnsave
xchg
jo
push
xor
retf
in
push
add
div
call
adc
in
pop
dec
push
ret
dec
xor
xchg
dec
frstor
push
loopne
inc
jmp
cmc
nop
ins
push
cmp
aas
scas
ror
pop
pop
push
mov
push
xor
jbe
xor
test
movs
mov
push
sub
inc
stos
mov
test
or
stos
inc
mov
xor
sbb
fwait
dec
data16
push
popf
lahf
fsub
push
add
cs
xchg
pop
xor
sar
mov
int3
dec
out
xor
adc
aaa
rol
cli
fwait
and
mov
(bad)
in
push
mov
loopne
adc
and
cld
sbb
stos
cwde
fs
call
and
pop
mov
ret
js
test
xlat
inc
lea
mov
cs
inc
lahf
adc
xchg
xchg
push
lods
mov
xchg
mov
xchg
fidiv
push
mov
mov
stc
cmp
xor
vcomiss
dec
(bad)
fmul
ret
cmp
sbb
pop
add
sub
stos
call
out
out
ins
inc
outs
ds
mov
adc
push
push
sbb
das
rol
jg
sti
rcl
pusha
add
dec
imul
movs
push
fild
in
(bad)
or
mov
mov
repnz
push
fcom
mov
out
lds
sbb
mov
popf
cwde
stc
dec
sbb
outs
xor
add
in
sub
outs
pop
outs
out
mov
and
push
or
(bad)
gs
sbb
int
xchg
les
fld
xchg
mov
mov
or
sub
popa
cld
jmp
sbb
push
add
add
mov
mov
rcl
sbb
mov
cmp
mov
in
xlat
lock
stos
loopne
xchg
jp
gs
cmps
aaa
xchg
es
xchg
dec
dec
xchg
psadbw
sbb
pop
out
sar
cmp
push
mov
pop
or
mov
xchg
xchg
fwait
dec
dec
inc
dec
fistp
int
adc
push
je
dec
aas
cmp
rcr
cmps
jbe
adc
push
xor
out
add
pop
jns
dec
outs
xrelease
cwde
sbb
pop
jecxz
inc
fcom
xor
mov
ret
stos
mov
test
xor
call
mov
scas
push
rdmsr
dec
call
sbb
jle
xor
mov
bound
cdq
add
lods
mov
adc
xor
dec
mov
inc
inc
imul
sbb
and
mov
aas
sub
cmp
mov
pop
cmp
adc
das
xchg
popa
cmps
jb
jle
pop
pop
ficomp
and
pushf
loope
mov
mov
jb
adc
pop
js
shr
mov
ja
or
sub
call
jno
mov
outs
rcr
mov
nop
xor
mov
test
pop
dec
repz
inc
xchg
fstp
in
aad
test
test
jmp
lods
inc
pop
out
jbe
dec
xchg
jns
int
out
test
and
std
mov
mov
mov
push
(bad)
add
mov
sub
pop
sbb
call
jmp
bound
push
add
arpl
mov
inc
adc
xchg
dec
in
fld
popa
ins
push
in
lahf
(bad)
dec
not
jo
mov
ret
jmp
data16
or
stc
icebp
sbb
push
cmp
sub
add
push
in
out
out
sub
cmp
and
pushf
call
jnp
loop
les
xchg
sbb
lahf
pop
mov
push
ins
add
pop
xchg
adc
mov
xor
xlat
daa
inc
ret
fadd
inc
inc
mov
ins
dec
je
xchg
ror
cmps
loope
add
ja
push
sub
loopne
out
je
(bad)
sar
push
inc
dec
iret
push
shl
sub
pop
repz
inc
mov
xor
inc
cmp
mov
sub
pop
jle
and
(bad)
push
iret
mov
dec
sbb
pop
dec
int3
mov
shr
cmp
ins
cld
push
xchg
out
mov
aaa
sbb
ja
or
not
jg
js
adc
lds
inc
push
leave
lods
push
retf
jmp
test
jmp
xlat
pop
xchg
mov
fwait
or
xchg
js
fs
and
push
stc
mov
push
repnz
hlt
push
push
movs
ins
je
add
cmp
popa
out
jmp
mov
int
inc
or
lock
mov
xchg
sbb
pusha
clc
lgs
and
jae
stos
mov
fnsave
int3
mov
retf
fwait
dec
mov
cmp
mov
sub
dec
das
out
sbb
and
adc
and
jo
xchg
icebp
ficom
jae
movs
lock
mov
mov
popa
adc
jne
fcom
jmp
cdq
neg
inc
mov
pop
cmp
mov
pop
les
sbb
mov
sahf
add
mov
mov
fwait
test
(bad)
pop
fnstcw
and
xchg
and
bnd
fsubp
lock
push
lahf
pop
aas
dec
pop
shl
cmps
pushf
sbb
pop
aad
inc
(bad)
jg
leave
es
data16
ja
mov
test
out
fbstp
dec
sub
ficomp
dec
mov
pop
jl
add
mov
popa
pop
cmps
leave
pusha
cmp
cdq
out
push
and
mov
cmp
std
scas
push
push
rol
scas
dec
movs
adc
mov
pop
imul
lods
xor
out
arpl
fwait
jbe
bound
mov
mov
scas
jne
and
xchg
jecxz
test
mov
iret
stos
jo
dec
popa
inc
popf
je
mov
mov
push
cmp
push
push
push
add
std
or
push
xchg
inc
xchg
mul
aad
(bad)
in
mov
or
test
dec
inc
loop
add
or
and
ret
arpl
pop
add
and
(bad)
jmp
mov
add
cmps
mov
push
rol
or
icebp
add
pop
cmp
sbb
les
test
adc
push
test
push
stos
cmp
outs
dec
push
xor
pop
ficom
sub
enter
aaa
jge
jbe
movs
push
pop
imul
xor
sahf
cmp
outs
rcl
jp
popf
into
sub
inc
inc
cdq
mov
xchg
mov
pusha
aam
inc
ss
mov
(bad)
xor
adc
rcl
repz
fdivr
pop
pop
call
ins
and
jge
jle
and
sbb
xor
fwait
lahf
mov
dec
jg
inc
loop
ja
and
jg
sub
jmp
ror
cmp
push
es
jnp
add
xlat
push
aad
mov
or
inc
inc
jno
pop
jl
pop
mov
mov
mov
jle
int
xrelease
call
inc
sub
test
mov
sti
push
xchg
xchg
cmp
push
mov
and
lods
popa
loopne
sub
fisubr
jp
cmp
shr
push
and
jne
inc
lods
imul
xchg
ret
das
push
bound
inc
xor
fisub
movs
inc
sub
xor
add
bound
mov
cmp
loop
pusha
xlat
retf
popa
fs
cmc
jle
xchg
ss
shr
int3
popa
cmp
adc
sbb
movd
div
sahf
lds
stos
ins
and
loope
dec
arpl
fdivr
jbe
movs
mov
adc
imul
ficom
xchg
sbb
jge
inc
jns
fdivr
cmp
fsubr
mov
jns
int
sub
ja
sub
je
repz
pop
add
aad
pop
(bad)
gs
xor
mov
mov
ret
nop
fucom
shl
dec
or
mov
push
retf
nop
push
pop
jmp
mov
mov
mov
jmp
jmp
ja
and
inc
mov
fidiv
pusha
idiv
sub
(bad)
mov
inc
mov
popf
pop
aaa
rcl
jmp
push
cli
scas
ret
retf
mov
adc
adc
arpl
popa
inc
sbb
scas
add
and
loope
add
and
jb
stos
mov
and
cmp
mov
(bad)
jnp
sbb
fs
cmp
mov
fisub
icebp
cli
retf
add
add
je
mov
cli
retf
int
scas
retf
lds
data16
ss
jmp
cmps
(bad)
sbb
push
pop
fimul
push
dec
pusha
aaa
scas
adc
inc
popa
test
xor
cwde
cmp
xchg
std
retf
fwait
arpl
sub
jo
scas
sbb
xor
add
je
mov
repz
pop
jae
add
inc
bound
adc
call
push
xor
(bad)
(bad)
fnsave
adc
imul
stos
imul
stc
xor
mul
daa
shl
loopne
mov
outs
push
pop
fcom
dec
adc
push
mov
dec
and
loop
mov
pop
in
ins
sub
mov
add
mov
xchg
cld
sub
push
(bad)
mov
add
dec
jns
sbb
or
or
mov
leave
push
cmp
jecxz
pop
mov
rol
jae
add
icebp
pop
aas
fistp
int
adc
(bad)
pop
fcom
cmp
cmp
push
dec
push
dec
stc
push
pop
pop
test
or
cmp
int
cld
scas
in
cs
repnz
mov
outs
pop
fidivr
scas
ss
push
outs
out
dec
into
jno
es
xchg
cmp
mov
dec
sbb
dec
sbb
mov
cmp
cmp
xchg
not
xlat
fwait
or
or
sbb
mov
repz
mov
iret
push
cmp
mov
xor
inc
mov
or
not
add
in
adc
fldcw
add
into
fistp
xchg
ficomp
add
inc
hlt
iret
or
lea
or
add
sub
mov
sbb
lahf
sub
bound
cwde
leave
imul
push
push
lock
scas
sub
cmps
aam
pushf
sub
ror
test
cmp
mov
and
stc
aaa
pop
jge
out
js
dec
xlat
add
iret
jmp
push
shl
xchg
mov
push
mov
in
das
popf
or
push
cmp
retf
mov
xchg
test
loopne
cli
bound
movs
es
mov
aaa
sub
mov
cmp
stos
xor
fldenv
out
mov
retf
and
mov
jo
sbb
add
pop
push
jo
ins
cmp
out
jle
push
xchg
hlt
pop
cld
sbb
xor
enter
jmp
or
(bad)
mov
jno
fcmovnu
and
mov
push
pop
into
mov
stos
pop
cdq
jg
xchg
fs
jmp
ja
or
(bad)
xchg
pop
ins
(bad)
clc
cdq
dec
addr16
clc
sub
fwait
mov
leave
pop
push
mov
mov
mov
test
xchg
inc
sub
aad
inc
sbb
ror
adc
in
test
sahf
mov
cmp
ins
push
lea
cdq
push
adc
mov
shl
push
jmp
dec
mov
push
sbb
xor
test
rol
sbb
daa
fwait
jbe
pop
sbb
pop
movs
and
xchg
leave
out
dec
xchg
mov
fwait
out
and
rcr
adc
nop
iret
outs
sub
pop
push
dec
ds
in
loopne
mov
out
(bad)
popa
or
pop
dec
mov
mov
arpl
adc
cmp
cmps
inc
and
cmp
jg
cli
das
(bad)
mov
imul
jns
pop
rcr
jns
lock
dec
gs
pop
inc
lea
or
in
mov
sbb
xor
or
mov
xor
xor
xor
inc
mov
sub
or
jo
xchg
das
cmp
inc
mov
dec
loopne
pusha
xchg
imul
push
cmp
adc
push
div
hlt
dec
add
adc
(bad)
retf
jg
test
mov
inc
adc
out
popa
sahf
cmp
aam
jmp
das
sbb
push
xchg
and
inc
bound
je
xchg
(bad)
bound
sbb
sbb
push
imul
and
mov
pop
ret
fidivr
mov
clc
mov
cmp
add
pop
cmp
movs
fdivr
and
xor
test
inc
test
repnz
xor
jo
push
add
sub
jle
pop
and
cmp
iret
test
pop
call
das
xchg
movs
dec
iret
in
xchg
arpl
xchg
dec
xchg
ss
mov
(bad)
jne
mov
ins
push
out
(bad)
daa
fs
ficom
dec
fld
(bad)
fsub
int3
push
sub
imul
push
sbb
loop
imul
fwait
mov
push
jmp
scas
and
cmp
xchg
outs
jo
pop
repnz
ret
xchg
pop
add
sbb
push
add
mov
xchg
cmp
mov
pop
adc
cmp
ror
into
push
push
cmp
in
add
data16
push
pop
call
inc
hlt
add
cli
jge
dec
(bad)
sub
pop
mov
mov
rcr
loopne
outs
rol
scas
add
bound
(bad)
jmp
dec
ins
jle
add
pop
das
jecxz
inc
clc
cmp
xchg
cmp
jae
test
mov
cs
fld
mov
mov
loopne
enter
xor
sbb
sahf
in
cmps
push
adc
lds
fcmove
inc
push
inc
inc
jo
cmps
sbb
xchg
xchg
jbe
ds
jnp
rcl
repz
aas
xor
mov
mov
nop
or
cmps
mov
les
ficom
mul
mov
cmp
xor
push
xchg
not
cld
(bad)
push
clc
dec
pop
icebp
dec
popa
jne
inc
ss
inc
popf
test
or
cwde
(bad)
push
and
ja
dec
cmp
out
les
cmp
jo
loopne
fnsave
xchg
cwde
mov
lock
aas
cmp
cmps
push
mov
push
retf
inc
sbb
sti
sbb
xchg
int3
jne
jb
in
xor
dec
jge
mov
pop
pop
pushf
pop
and
retf
mov
(bad)
lods
sub
call
add
xor
out
pop
jne
mov
xor
mov
push
dec
sbb
(bad)
test
aas
push
call
ret
xchg
mov
add
jne
in
push
outs
add
mov
rcr
and
out
add
push
xchg
shl
ret
xchg
scas
pop
movs
add
jle
ret
out
loope
jns
push
aas
clc
es
popf
pop
inc
or
stc
imul
pop
sahf
(bad)
pop
and
inc
(bad)
sub
pop
imul
call
xchg
ret
jo
push
dec
mov
test
fistp
inc
test
imul
pusha
xchg
cld
fnsave
cmp
popa
cdq
cld
add
push
fwait
rol
call
xor
pop
pop
in
or
mov
sub
inc
mov
add
push
call
jbe
inc
xlat
outs
movs
test
jb
daa
ret
jb
(bad)
dec
push
pop
cmp
add
jmp
adc
xor
lock
cmp
lock
nop
fdivr
test
push
lods
cs
add
call
enter
lods
dec
cmp
jmp
outs
mov
jg
cmc
rcl
ins
outs
cmp
(bad)
out
pop
imul
xchg
test
mov
nop
jecxz
das
fwait
push
inc
inc
ja
mov
and
adc
(bad)
sbb
push
xchg
or
test
dec
and
add
leave
out
push
adc
dec
(bad)
cli
pop
push
ins
and
sub
adc
or
adc
in
int
(bad)
add
inc
xchg
push
sub
adc
pop
cmps
call
popa
mov
popf
movs
sub
xchg
push
pop
dec
push
or
adc
rcl
lahf
mov
mov
jnp
and
xchg
mov
mov
scas
imul
out
xchg
aaa
mov
inc
inc
je
repnz
jo
int3
mov
mov
push
xor
mov
mov
sbb
mov
test
xor
push
or
arpl
pop
mov
fsubr
bound
test
or
rcr
push
dec
call
leave
sahf
xchg
push
je
into
or
push
xchg
out
push
in
pop
fnsave
jb
mov
call
std
sahf
sbb
adc
push
icebp
xor
cmps
xchg
push
nop
cli
rcl
mov
jmp
les
mov
aam
xor
loope
fst
sbb
and
div
mov
cli
jbe
cmp
out
mov
mov
push
es
mov
sub
fstp
test
imul
mov
cmp
int3
imul
xor
or
lahf
imul
ret
pop
stos
(bad)
xlat
mov
adc
cmps
retf
pushf
(bad)
loopne
shl
mov
daa
cdq
dec
dec
push
or
push
int3
(bad)
pop
clc
int
test
push
jmp
iret
pop
push
sub
mov
in
pop
xor
in
shl
out
sub
in
das
mov
movs
cmp
popf
mov
xchg
jmp
fcos
xchg
inc
sub
(bad)
(bad)
jecxz
xor
jno
and
ins
mov
imul
das
push
std
dec
aaa
adc
push
pop
jo
inc
sub
lods
mov
loop
and
jle
sub
push
cli
pop
(bad)
arpl
test
push
clc
add
add
add
bound
jno
mov
retf
ins
dec
neg
xchg
jne
or
pop
stc
xor
(bad)
in
push
repnz
daa
jne
mov
mov
and
jns
movs
cmp
aaa
pushf
or
shl
mov
mov
cmp
aad
inc
test
int
xchg
sti
xchg
call
pop
mov
add
retf
cmp
data16
aad
enter
inc
or
push
nop
cmp
or
or
outs
push
pop
pusha
lods
cmp
cmps
test
mov
sub
cmp
push
clc
stc
rcl
xchg
xchg
lods
push
pop
imul
inc
sbb
outs
push
arpl
ret
mov
dec
call
or
xchg
in
fcomp
dec
outs
leave
add
xchg
jle
nop
pop
xor
das
cmp
(bad)
stos
or
push
and
in
ins
mov
fst
cmc
mov
mov
shl
sub
call
jnp
add
fsin
movs
add
scas
mov
pop
int3
pop
jl
push
rcl
and
enter
cmp
adc
adc
loopne
push
xor
test
lock
in
or
pop
dec
push
pop
mov
cmp
mov
sub
jbe
jb
sub
jo
adc
je
int3
mov
jb
inc
imul
inc
xchg
jbe
xor
retf
rcl
sbb
cli
adc
add
cmps
or
pusha
jns
loope
jmp
pusha
mov
mov
movs
cdq
mov
ins
mov
pop
push
add
loope
sub
and
mov
pop
jne
pop
inc
jp
(bad)
test
inc
mov
movs
sub
js
dec
add
adc
fmul
outs
mov
xor
jne
push
lahf
mov
mov
push
std
xchg
imul
or
(bad)
jecxz
push
(bad)
push
jb
push
or
inc
imul
fild
xor
call
push
mov
retf
nop
addr16
xor
ret
pop
in
arpl
or
add
ins
mov
ins
jecxz
(bad)
mov
out
mov
loope
lea
rcl
jb
test
lahf
test
setne
adc
mov
not
xchg
ins
xor
add
out
and
lods
inc
jo
int3
add
test
(bad)
jmp
call
cld
cmp
lds
or
into
mov
aas
xor
clc
cmps
outs
xlat
out
call
ret
pop
push
sub
shl
or
xchg
cld
js
push
mov
scas
mov
push
adc
fst
mov
xchg
ret
pop
mov
mov
mov
and
fwait
lock
mov
mov
out
fstp
in
lea
jecxz
ds
imul
retf
jbe
jne
cmps
dec
loopne
(bad)
repnz
mov
sbb
cli
ret
lahf
int3
loop
sbb
and
jle
popf
xchg
je
xor
pop
fs
fcomp
xor
push
jle
mov
lods
fcmovu
sbb
imul
and
test
mov
rcr
jno
dec
and
movs
inc
xchg
sub
out
ins
js
sub
out
daa
into
xchg
mov
out
cmps
jae
fst
dec
jmp
cmc
push
xor
push
adc
xchg
adc
iret
mov
sub
push
mov
mov
lock
cmp
cmp
out
in
inc
dec
mov
(bad)
maxps
lods
enter
mov
cs
push
or
gs
mov
aam
inc
sub
dec
mov
xor
jge
cmc
fimul
(bad)
loop
in
push
add
ret
sar
pop
mov
sub
jge
push
add
and
mov
enter
inc
mov
fdiv
call
sbb
jo
adc
call
lods
inc
push
xchg
mov
push
in
push
push
adc
fadd
cwde
test
in
xor
leave
cmp
ret
pminsw
push
mov
dec
or
cmp
inc
or
ret
adc
xchg
sub
mov
stc
fcomp
inc
add
mov
push
out
inc
cdq
in
scas
mov
leave
pop
ficomp
pop
fwait
inc
scas
cmps
cld
adc
ret
mov
jne
aas
cmc
sti
sub
leave
ins
sbb
rcr
ja
out
adc
push
xlat
test
jmp
popa
mov
sub
sub
loope
adc
and
jne
inc
mov
lods
inc
and
loope
sbb
mov
mov
dec
jmp
sbb
cmp
dec
ficomp
movs
in
pop
push
ret
add
push
jge
pop
xchg
outs
xor
not
cmps
ds
cmp
jecxz
in
xor
xor
inc
pop
adc
retf
movs
popa
mov
xor
cmps
(bad)
lods
outs
fimul
add
stc
inc
cmp
sub
cmp
repz
loope
pop
je
push
in
frstor
push
push
xor
lods
int3
ret
push
xchg
jge
sbb
jns
lahf
sub
ds
loop
popa
push
mov
(bad)
out
and
or
sub
fistp
lods
xchg
aaa
sbb
dec
mov
sub
cli
hlt
push
cmc
inc
out
out
ficom
data16
imul
jmp
adc
outs
hlt
out
into
mov
mov
arpl
cli
retf
add
xor
fwait
add
push
lahf
outs
retf
call
pop
adc
mov
mov
daa
aaa
(bad)
movs
bound
sub
mov
test
push
jae
or
sar
ret
icebp
dec
add
fwait
dec
je
es
jle
mov
sti
pop
push
sub
mov
or
cmp
in
or
sbb
das
cmp
xchg
enter
or
sbb
inc
add
add
(bad)
mov
sti
std
loope
xchg
addr16
inc
mov
and
jnp
mov
push
inc
aam
sbb
movs
imul
and
ret
jno
in
push
xlat
and
repnz
loop
shl
or
scas
pop
(bad)
aam
ins
dec
int3
push
pop
ds
stc
xchg
and
or
add
enter
sbb
fild
sti
outs
aas
scas
rcr
(bad)
or
xchg
ret
or
scas
arpl
jg
cmp
mov
cmc
mov
pop
mov
cmc
xor
repz
out
lods
lock
cmp
and
push
add
push
dec
dec
(bad)
push
cs
push
aaa
test
jbe
push
push
cmp
nop
out
imul
sbb
pop
and
stc
pop
push
nop
jle
test
js
cmp
rol
cmp
test
sub
ds
sub
sbb
repnz
gs
adc
or
push
mov
mov
sti
dec
clc
cmp
xor
or
(bad)
xor
imul
pop
stos
in
xlat
dec
cs
sahf
pop
loope
or
retf
xchg
test
xchg
(bad)
nop
adc
jp
jmp
or
xchg
or
push
and
add
xchg
or
loop
aam
jl
stc
repnz
ss
mov
inc
xchg
pop
jb
rcl
add
mov
cmp
fld
or
sti
mov
pop
fdivr
push
dec
lds
(bad)
outs
pop
movs
sbb
dec
shl
lds
out
sti
push
mov
adc
xchg
sub
ins
mov
jbe
mov
and
push
pusha
outs
push
push
mov
ret
jmp
jbe
mov
pop
cmps
lea
(bad)
cmps
add
and
adc
iret
mov
and
mov
scas
inc
xchg
and
sahf
mov
sub
out
adc
fisttp
cwde
daa
lds
es
and
mov
xor
mov
leave
xchg
data16
arpl
(bad)
fsub
jbe
aaa
(bad)
jge
loop
or
mov
xchg
fmul
cmp
cmp
or
sub
xchg
jecxz
outs
aaa
inc
adc
sbb
or
or
xor
es
pop
push
ror
pop
sub
jb
pop
jo
dec
jmp
push
imul
daa
inc
mov
aad
cmp
add
push
mov
addr16
jmp
xchg
es
(bad)
pop
jge
lock
test
cdq
push
popa
cmp
cmp
(bad)
mov
xchg
out
in
cwde
inc
xchg
out
jbe
pop
rcr
aad
in
sub
(bad)
out
mov
sub
fild
sub
sti
pop
cmp
stc
push
aas
and
or
stc
inc
jecxz
std
sub
out
hlt
mov
(bad)
in
inc
(bad)
jmp
cmp
retf
sub
jne
jl
sbb
into
mov
sbb
and
mov
aas
mov
inc
ds
repnz
fwait
mov
dec
in
scas
shl
pop
jle
pop
(bad)
icebp
push
movs
test
scas
add
sar
js
jns
jmp
mov
jbe
cmps
add
add
iret
jmp
inc
cmp
xchg
mov
xchg
(bad)
jle
jbe
pop
xchg
mov
inc
mov
int
mov
add
jge
mov
or
sub
push
sub
mov
and
and
mov
sub
clc
push
lds
mov
push
sub
ins
cmp
or
lahf
psllw
and
imul
push
mov
pop
adc
push
xor
cld
mov
add
hlt
mov
mov
xchg
sub
push
xlat
arpl
mov
fist
mov
adc
mov
push
call
sub
and
or
push
or
inc
xor
loop
sbb
adc
test
push
mov
int3
xor
cmp
shl
jmp
jecxz
inc
fwait
int
iret
fsub
or
dec
cmc
in
add
mov
cdq
ins
loope
inc
xchg
loop
addr16
jle
outs
mov
lahf
dec
add
mov
dec
cld
in
mov
mov
fdivr
or
cmovnp
pop
outs
out
and
inc
iret
xchg
in
jmp
xchg
inc
push
in
inc
retf
cmp
jo
add
adc
aas
ret
mov
out
imul
dec
test
imul
jge
pop
or
xor
sar
jnp
dec
sti
xchg
movs
and
pop
and
pop
jmp
ret
ja
sub
xchg
dec
xor
xor
dec
call
dec
inc
scas
push
mov
aad
jp
in
nop
ret
jecxz
dec
inc
xchg
inc
dec
xchg
inc
mov
dec
leave
retf
into
inc
inc
add
movs
add
leave
ja
xor
rcr
aaa
int
cmp
aam
adc
popa
xchg
aaa
or
jp
test
xor
bound
inc
push
addr16
adc
iret
jb
iret
adc
pop
aaa
addr16
enter
(bad)
ficomp
icebp
xor
outs
ds
movs
mov
push
or
inc
out
cmp
movs
adc
jl
int
pusha
mov
aad
mov
xor
dec
cmp
inc
xchg
or
enter
and
sbb
xor
add
imul
cwde
ds
xchg
pop
rcl
mov
push
jl
popa
dec
jns
aad
test
arpl
mov
aam
movs
icebp
xchg
pop
loopne
pop
out
and
jp
stos
add
add
sbb
sbb
lods
or
mov
jb
shl
cmps
inc
xchg
cmps
lods
jae
xchg
int
fcomi
fld
jle
sbb
xor
lea
loopne
scas
and
mov
cli
push
cmps
mov
inc
rcl
mov
fild
or
stc
cmc
imul
sbb
xlat
mov
inc
pusha
dec
inc
icebp
lods
push
jae
cld
sbb
mov
or
push
pop
iret
or
std
jne
cmp
mov
mov
dec
add
jge
test
xchg
mov
repz
sub
push
adc
les
jbe
aas
sub
add
jmp
add
or
cmp
cmp
mov
test
sub
xchg
lods
fisubr
sbb
lea
xchg
les
leave
fwait
mov
(bad)
bound
fisubr
pop
nop
clc
jns
and
mov
sub
(bad)
dec
add
lea
mov
outs
popa
mov
xchg
add
mov
cmp
jns
pop
mov
adc
aad
add
sub
add
mov
jg
pop
push
call
adc
es
je
cmp
shl
pop
or
cmps
or
fbld
shr
in
add
aad
dec
std
lock
xor
push
xchg
mov
add
dec
daa
shl
inc
add
enter
movs
cld
push
div
xchg
mov
leave
ja
(bad)
aam
cmps
push
mov
test
cwde
add
mov
dec
pop
cmp
loopne
jns
adc
dec
mov
cmp
adc
dec
cmp
(bad)
fcmovb
sbb
mov
popa
pushf
mov
loop
pop
scas
scas
cmp
adc
and
push
jae
mov
jge
cmps
paddsw
sti
sbb
adc
dec
jmp
push
repz
sbb
arpl
inc
(bad)
adc
xlat
cs
loop
mov
ds
fwait
das
test
cld
xor
and
add
cld
push
retf
rcr
cli
xchg
clc
mov
or
push
mov
in
int
pusha
xchg
arpl
add
jno
add
(bad)
in
lods
sub
fstp
lds
loope
inc
in
push
push
mov
addr16
xor
int3
out
push
mov
xor
(bad)
arpl
add
and
pop
fmul
adc
xor
mov
(bad)
jns
push
hlt
mov
js
pop
fimul
cmps
or
pop
jne
cmp
aad
pop
adc
mov
outs
pushf
pop
inc
enter
stos
dec
dec
std
mov
dec
mov
popf
mov
out
clc
adc
jle
sub
push
mov
or
sbb
shl
scas
push
mov
inc
xchg
mov
loop
out
btc
add
cmp
push
push
jecxz
into
mov
jno
cmp
gs
scas
jge
jp
cmp
imul
add
cmc
pushf
cmp
sub
movs
repz
adc
push
sub
sar
xor
fist
dec
or
push
mov
adc
and
and
and
dec
call
push
test
scas
push
repnz
jae
loope
neg
add
mov
test
xchg
xchg
cmp
ret
test
mov
enter
push
mov
gs
jbe
inc
das
add
fst
push
add
cmp
xor
(bad)
movzx
or
dec
inc
or
js
dec
jns
cli
pop
sar
ins
pusha
scas
or
push
cld
in
dec
lea
push
xchg
cmc
pop
fist
mov
dec
xor
repnz
push
jb
nop
call
mov
xor
mov
lods
es
inc
pop
int3
loopne
addr16
add
cmp
into
mov
pop
int3
push
cmps
mov
fdivr
repz
mov
xor
outs
sbb
loopne
sbb
mov
and
loope
cmps
test
xor
jmp
f2xm1
(bad)
or
mov
aas
add
inc
loop
loope
movs
mov
xor
xor
rcr
dec
mov
xchg
cmp
bound
pop
dec
imul
aad
fs
sahf
ror
xor
mov
and
rcl
mov
sub
outs
xchg
out
test
repnz
jmp
test
dec
in
jp
add
xchg
jl
xor
push
lds
(bad)
pushf
ins
scas
inc
(bad)
add
scas
(bad)
sub
jo
fist
pop
(bad)
cmp
sub
sub
mov
(bad)
(bad)
mov
pop
jmp
jecxz
push
sub
dec
out
xor
sub
cmp
add
(bad)
jae
daa
push
and
inc
inc
and
in
mov
fcmovb
jno
fimul
out
xor
push
add
nop
xchg
dec
mov
push
enter
xchg
xor
int3
lea
jns
jb
ja
fdivp
fadd
popa
jp
or
pop
adc
or
test
cmp
jb
data16
shr
(bad)
mov
repz
cmc
bound
xlat
repnz
dec
and
xchg
jg
popf
jbe
inc
ret
icebp
xor
sbb
pop
sbb
sbb
out
push
jnp
(bad)
ror
mov
lds
mov
add
cdq
mov
popf
cwde
and
mov
and
inc
mov
call
test
sub
loop
cdq
es
nop
cli
pop
cwde
lods
int
sti
ret
cdq
mov
inc
dec
sbb
cmps
in
mov
and
push
sub
xor
mov
imul
inc
lods
pop
popa
mov
ret
push
jl
aad
dec
int
and
mov
repnz
cmp
push
mov
into
push
push
pop
shr
das
ret
pop
outs
xor
cmp
lds
xor
inc
or
fisttp
mov
mov
adc
mov
mov
hlt
and
out
adc
bound
push
adc
or
lods
je
push
jne
mov
ja
out
and
mov
mov
and
sub
mov
leave
pop
mov
ret
int3
pop
and
jl
lea
xor
mov
xchg
sti
adc
sbb
sub
xchg
loope
or
loop
dec
sub
movs
nop
sbb
out
cmp
jmp
std
sbb
jnp
ins
mov
ficomp
mov
pusha
mov
pop
retf
jb
dec
mov
xchg
add
jne
dec
mov
and
and
xor
fadd
jne
scas
(bad)
push
jne
inc
xor
or
cmp
dec
cmps
and
push
bound
pop
adc
movs
loope
xor
mov
cmp
pop
jmp
jb
imul
es
aaa
mov
sbb
xchg
dec
mov
aas
out
iret
xlat
in
dec
mov
cmp
lods
push
shl
xchg
jo
and
mov
mov
pop
cmp
xor
jg
adc
adc
add
mov
je
mov
mul
movs
pop
push
mov
(bad)
sbb
mov
addr16
call
pop
sub
outs
test
push
in
div
les
jmp
(bad)
fidivr
int
push
out
gs
es
xor
xchg
js
dec
iret
cmp
xor
call
and
dec
inc
popa
gs
fadd
jne
and
inc
ror
stos
cmps
inc
popf
xor
bnd
xor
pop
retf
in
and
or
cdq
cs
ja
adc
int
cmp
and
sti
xor
add
xlat
out
cmp
(bad)
cwde
push
adc
xor
and
mov
mov
xor
loope
outs
sbb
sub
push
aad
ret
test
inc
sbb
push
cdq
aad
cmps
push
lods
(bad)
aam
popa
(bad)
fisubr
or
mov
cmp
inc
mov
enter
jecxz
into
je
cdq
cmp
add
pop
std
mov
les
mov
or
icebp
imul
mov
sti
mov
iret
mov
push
inc
mov
sbb
shr
fucom
call
mov
fisubr
jg
in
test
mov
xchg
clc
xor
push
xor
xchg
cmp
xor
push
push
lods
or
repnz
add
and
popf
xor
inc
jnp
xor
cdq
pop
arpl
or
stos
mov
nop
sbb
mov
je
and
jmp
or
lahf
mov
mov
xor
sub
mov
adc
out
sbb
dec
aas
aaa
xor
jle
mov
std
xchg
daa
jbe
imul
sub
(bad)
hlt
or
in
or
popf
xor
sar
(bad)
cld
jg
nop
adc
stos
out
mov
mov
scas
out
fcom
jmp
lods
repz
out
loope
push
push
jecxz
add
(bad)
cld
adc
or
cmp
mov
call
dec
movs
mov
ret
fs
adc
mov
mov
jae
pop
dec
adc
xor
mov
stos
cmps
loope
retf
retf
lahf
scas
lahf
xor
and
jmp
movs
mov
sub
(bad)
pop
movs
data16
shl
jb
adc
push
iret
jecxz
pop
imul
mov
xor
ret
xchg
fiadd
aaa
inc
pop
dec
(bad)
aad
js
mov
dec
dec
pop
push
cmp
ins
sub
test
sbb
mov
daa
mov
sub
(bad)
fimul
std
push
adc
and
test
div
je
xor
adc
rol
jo
mov
or
jnp
sub
loopne
inc
add
mov
xchg
push
xchg
cld
repz
xor
movs
inc
int3
mov
dec
push
push
int3
inc
in
mov
inc
(bad)
mov
out
jmp
pop
data16
(bad)
scas
ret
mov
mov
loopne
shr
pop
xadd
outs
(bad)
(bad)
cmp
cmp
enter
mov
shl
xor
loope
jo
pop
sbb
test
stc
or
xchg
outs
dec
dec
ins
test
and
stos
in
adc
outs
out
mov
sbb
fs
mov
mov
mov
mov
ror
(bad)
loop
mov
jg
push
push
icebp
fwait
jbe
aad
(bad)
jmp
xchg
xor
ss
sbb
std
pop
push
div
arpl
dec
sahf
push
adc
or
es
dec
xor
sbb
mov
xchg
in
adc
fsubr
cmp
div
sub
scas
jp
stos
jo
or
addr16
jno
push
loope
xchg
fdivr
xchg
sub
and
sar
daa
adc
fld
mov
nop
bound
push
jg
add
jmp
sbb
dec
vmovss
out
push
mov
fwait
xchg
xor
sar
dec
inc
lods
sub
in
je
imul
lock
popa
hlt
mov
imul
cmps
dec
sar
adc
xchg
xor
add
dec
rol
xor
mov
dec
jmp
mov
pop
sbb
push
aad
cmp
sub
mov
ja
out
xor
xchg
cmp
sahf
rcr
fimul
jno
sbb
pop
push
push
or
shl
ins
test
push
not
jb
mov
repnz
xor
add
cmp
add
sbb
sub
fidiv
mov
jp
mov
or
pop
clc
jnp
sahf
cmp
dec
mov
sbb
outs
repnz
and
enter
jmp
push
ins
bswap
inc
out
inc
mov
int3
icebp
fstp
jbe
mov
in
fisub
leave
add
out
jbe
sbb
add
or
xchg
pop
add
push
loope
mov
int
bound
mov
xchg
jae
aam
inc
sar
ja
mov
add
ins
cmp
cmc
mov
repnz
add
fnstcw
scas
cmp
(bad)
pop
or
jb
push
pop
out
(bad)
lds
idiv
out
retf
cmc
xchg
in
(bad)
jl
aam
jge
ins
sub
nop
jmp
xchg
bound
sbb
push
mov
jg
mov
je
or
cmp
mov
push
loope
movs
out
sbb
in
aad
nop
(bad)
(bad)
call
loope
rcl
cmp
push
lods
jecxz
aad
push
push
int
xchg
imul
sub
call
xchg
jmp
into
xchg
xor
xor
nop
xchg
push
in
call
push
inc
mov
inc
ret
jl
mov
mov
mov
and
sub
xor
mov
cdq
mov
or
xchg
dec
aam
xor
daa
pop
mov
adc
aas
in
or
xor
push
lods
aas
lods
add
cmp
jle
scas
pusha
pop
mov
pop
(bad)
sbb
(bad)
or
xchg
test
mov
out
les
ja
inc
lea
fidivr
jmp
inc
test
or
mov
mov
mov
sbb
jle
xor
mov
jl
mov
mov
int
dec
retf
sti
lea
inc
push
or
jnp
inc
jbe
loop
mov
pusha
xchg
or
pop
shr
les
sub
repz
push
test
xlat
jne
jo
dec
sbb
xchg
aad
lds
sbb
or
je
add
push
mov
das
and
xlat
add
(bad)
cmp
movs
push
retf
(bad)
or
icebp
pop
xor
push
dec
mov
dec
sbb
(bad)
mov
js
or
lods
sbb
int3
dec
sbb
and
in
addr16
sti
movs
xor
jno
stc
mov
xchg
mov
popa
jne
ret
cmp
sub
scas
jmp
mov
hlt
push
mov
sahf
ins
psrad
mov
es
or
das
xlat
in
out
scas
pop
cmp
(bad)
xlat
retf
ror
xchg
sub
mov
test
sahf
xchg
rol
adc
mov
add
dec
jbe
jge
nop
sub
jp
sbb
dec
jbe
mov
daa
sahf
pop
cmp
sbb
nop
pop
mov
sbb
push
adc
bound
outs
cmps
fst
js
jbe
div
dec
or
je
lea
push
jbe
shl
mov
xor
mov
cmp
das
push
xchg
fdivr
je
dec
out
mov
add
dec
lods
jmp
cmp
xchg
pusha
push
mov
rep
pop
adc
test
fsubr
das
mov
adc
xchg
leave
ficom
fchs
mov
dec
jb
cmps
lock
je
or
sbb
push
sub
add
mov
xor
int
mov
ins
in
(bad)
pop
push
sahf
ret
and
cmc
xlat
jo
and
(bad)
aas
fst
jp
test
mov
retf
dec
outs
sub
(bad)
xchg
inc
sbb
call
jmp
jo
pop
jo
ins
jle
ja
or
ud1
pop
test
test
mov
jns
mov
adc
xchg
dec
and
push
cmp
in
(bad)
inc
adc
cmc
jge
mov
push
dec
jp
mov
sbb
adc
xor
ret
pop
dec
je
(bad)
mov
inc
aam
ds
mov
test
repz
icebp
or
sbb
(bad)
sub
xor
pop
arpl
data16
lds
sbb
(bad)
loopne
mov
clc
xchg
xchg
and
push
int3
(bad)
outs
movsx
ins
mov
dec
and
nop
fdivr
push
mov
retf
ror
cmps
loopne
pusha
aad
aam
call
add
cmp
dec
mov
sub
dec
xor
cwde
jg
mov
inc
pop
js
stos
adc
xor
mov
mov
inc
in
dec
dec
adc
ror
xchg
into
test
cmp
mov
pop
jp
and
pop
and
into
scas
inc
push
int3
iret
pop
adc
enter
fadd
adc
or
cld
jp
xchg
sbb
mov
sub
sub
xchg
test
nop
out
lods
dec
jno
nop
pushf
push
mov
clc
adc
dec
mov
or
push
sub
xchg
add
pop
pop
fdiv
add
or
jnp
inc
outs
icebp
repz
dec
cli
inc
xor
add
xor
push
dec
add
lods
mov
or
pop
push
cmp
(bad)
push
stc
pop
mov
imul
xchg
imul
stos
popf
daa
inc
cmp
xor
ret
adc
mov
mov
vcvtsd2ss
lods
xchg
ret
cmc
scas
sbb
dec
dec
pop
(bad)
scas
xor
inc
push
mov
jecxz
dec
inc
xchg
mov
sahf
and
pop
test
inc
or
cmp
into
mov
xchg
imul
and
add
aad
mov
pop
push
jg
in
loopne
das
clc
bound
dec
jmp
retf
popa
les
clc
cdq
jae
lods
xor
enter
bound
or
stos
in
mov
pop
xlat
popa
je
pop
icebp
push
out
push
or
adc
pop
jle
fistp
sbb
jg
jno
fsub
add
add
or
xchg
push
xor
js
loope
test
pop
movs
xchg
es
out
adc
int3
leave
push
mov
cld
ret
sbb
pop
loop
push
and
nop
and
adc
gs
inc
pop
ja
loop
call
(bad)
repnz
sti
jbe
adc
or
inc
out
sti
cmc
mov
pop
sbb
jecxz
sbb
daa
outs
or
mov
pusha
test
pop
jne
std
and
inc
dec
scas
mov
jle
enter
mov
xor
mov
lock
push
sbb
cmp
stc
or
lea
int
or
sysexit
iret
outs
xor
mov
imul
mov
movs
jle
bound
getsec
push
inc
add
imul
cmp
cmp
cmp
mov
mov
scas
push
aad
stos
or
pop
dec
or
adc
push
aad
jmp
push
ret
inc
test
fisubr
fadd
aaa
push
in
inc
imul
sti
rol
(bad)
pop
fst
stc
mov
inc
jecxz
cmp
jmp
push
pop
dec
call
xchg
scas
inc
cld
cmp
sub
pop
fidivr
(bad)
stos
inc
pop
in
sti
add
dec
push
sar
xor
dec
push
(bad)
into
mov
leave
repnz
push
std
jmp
adc
fs
out
aad
pop
(bad)
push
push
jae
cmp
mov
int
pusha
push
mov
popa
mov
sub
adc
dec
out
ror
fst
jno
xchg
aam
fidiv
inc
mov
fs
ds
cmps
test
mov
cmp
push
in
(bad)
cmps
(bad)
push
push
or
xor
push
xchg
add
pop
mov
push
pop
ret
cmps
scas
push
lods
ins
aam
push
or
lock
jmp
movs
jnp
out
or
jne
cwde
stc
jmp
jae
adc
fild
xor
and
ds
icebp
dec
enter
ss
frstor
push
dec
cmp
daa
bound
sub
(bad)
cmp
lods
fist
xchg
xchg
cmp
repz
not
push
into
xchg
popa
jnp
jbe
mov
ins
sub
shl
mov
jnp
sbb
retf
out
aaa
(bad)
cmc
adc
adc
dec
mov
pop
mov
out
cdq
test
pop
ret
je
pop
pop
aad
push
cmps
jne
dec
xchg
dec
sub
and
outs
mul
jno
stos
sti
mov
call
(bad)
jmp
mov
cmp
or
stos
adc
xor
call
fadd
ins
inc
dec
rep
call
(bad)
(bad)
fnstenv
repz
sti
mov
arpl
fdivr
adc
pop
adc
hlt
mov
mov
rcr
push
cmp
and
xchg
jl
in
mov
xchg
pop
cld
pushf
sbb
lods
outs
nop
jnp
jl
push
aam
xchg
hlt
inc
fwait
outs
int
repnz
jmp
(bad)
adc
inc
or
cmps
clc
cli
adc
mov
clc
pop
cmp
jmp
adc
std
xor
call
push
xchg
in
mul
mov
mov
jmp
test
add
rcr
jmp
jl
jns
int
mov
jl
jp
scas
dec
push
retf
push
mov
call
aad
shl
or
xor
stos
pop
cdq
push
xor
repnz
ret
loopne
fcom
push
xor
sub
scas
lds
sub
sahf
and
push
call
mov
leave
sub
mov
repz
inc
xor
mov
and
xchg
jg
xchg
popf
int3
fsubr
call
out
inc
xchg
shl
push
mov
test
pop
mov
cwde
pop
add
fmul
or
sub
mov
push
in
xchg
lock
ja
test
rol
inc
js
stos
cmp
jae
sub
test
and
mov
mov
or
lock
mov
repnz
xchg
dec
pop
cmp
sahf
in
ror
aas
lock
inc
idiv
xchg
dec
cmp
jp
inc
jle
or
inc
fist
jle
sar
ror
arpl
xchg
mov
mov
mov
sbb
inc
inc
bound
and
aam
mov
cli
or
int3
in
cmps
mov
jge
push
adc
or
jle
xchg
mov
jle
add
mov
stc
mov
xor
pop
and
mov
mov
or
or
out
push
sub
ficom
dec
das
add
dec
sbb
mov
xchg
and
hlt
sub
jne
je
clc
and
repz
xchg
pop
jmp
dec
mov
out
in
cdq
dec
mov
xor
dec
cmp
arpl
int
mov
add
or
fcom
out
sbb
sbb
or
fdiv
cwde
pop
fnstsw
dec
test
sbb
pop
imul
xchg
sbb
daa
cmp
ins
lds
xchg
push
jmp
adc
add
push
mov
sub
dec
cs
mov
mov
retf
icebp
add
(bad)
stos
sub
push
sub
ret
sub
pop
pop
mov
mov
int3
jg
imul
pop
test
enter
pop
cmp
cmp
sbb
int
push
cdq
ret
sbb
sub
ins
dec
mov
ficom
xor
inc
lods
pop
retf
fcomp
ficomp
pop
test
add
test
ficom
jae
dec
inc
mov
not
mov
push
cwde
popf
adc
mov
ss
sub
and
stos
cwde
shr
and
shl
jg
cmp
cmps
(bad)
jge
cmps
inc
pmullw
rcr
stc
pusha
dec
push
and
movs
push
ficomp
sar
js
dec
in
(bad)
(bad)
fdivrp
cmps
mov
addr16
out
mov
fdiv
pushf
xchg
ss
mov
push
popf
fwait
pop
jle
push
inc
imul
xchg
nop
(bad)
add
sbb
jmp
sbb
inc
call
jnp
add
xor
sbb
(bad)
lock
and
fld
xor
and
pop
shr
push
mov
mov
xor
repz
idiv
inc
dec
fstp
xchg
test
and
lahf
mov
(bad)
out
dec
xchg
cmp
ficomp
lock
div
addr16
push
mov
inc
mov
jmp
daa
stc
mov
mov
jb
inc
sub
int3
jle
loope
out
(bad)
sub
push
and
arpl
push
hlt
arpl
fcomip
fcom
loope
stos
push
xchg
mov
imul
loop
cmps
push
xor
je
cs
loope
nop
sub
push
cli
iret
idiv
retf
out
sbb
or
add
ret
icebp
sub
enter
sub
shl
push
repnz
fiadd
xor
rcl
repz
es
mov
(bad)
mov
dec
lds
iret
out
inc
out
push
jo
fld
add
pop
mov
and
lods
imul
jb
arpl
pusha
popa
inc
adc
cmp
dec
xor
and
jne
push
jge
xchg
or
jg
xchg
int
jge
and
jb
mov
(bad)
sub
dec
cs
cdq
loope
shr
add
cmove
(bad)
pop
jp
inc
dec
jmp
ins
and
xor
mov
loop
or
imul
and
fild
sahf
xchg
test
loope
adc
bound
xlat
push
jmp
sub
and
ret
shl
(bad)
dec
jge
leave
fnstenv
loop
call
(bad)
les
cmp
mov
add
mov
or
xchg
pusha
ins
push
scas
push
adc
dec
push
mov
pop
cmp
into
stc
aam
jmp
repz
push
sub
int
test
pop
or
outs
xor
in
xor
jg
mov
(bad)
sub
mov
ss
mov
inc
shl
xor
mov
pop
mov
js
into
jmp
push
test
xchg
or
jnp
mov
icebp
shl
dec
xor
mov
icebp
dec
xchg
ss
jnp
stc
xchg
dec
push
fs
mov
push
das
call
cmps
inc
cmp
mov
push
jge
push
and
push
mov
mov
xchg
test
xlat
xor
fyl2xp1
jo
ror
sub
fdiv
pop
jmp
jle
div
add
das
iret
adc
xchg
lods
adc
test
ror
in
push
das
jmp
mov
test
mov
aam
inc
lods
aam
(bad)
dec
mov
int
test
mov
aaa
test
and
sub
mov
jle
jge
sub
arpl
sub
xchg
lahf
int3
bound
push
push
or
add
hlt
cs
out
es
ret
outs
xchg
jbe
lods
jo
je
pop
add
shl
add
fmul
dec
cmp
es
or
ret
in
fsubp
pop
shl
std
or
sbb
xor
mov
dec
repz
(bad)
add
loop
jecxz
outs
push
int3
dec
and
outs
inc
sbb
sbb
adc
cmp
dec
cdq
stos
retf
scas
repz
inc
adc
es
imul
mov
inc
cmps
cmp
inc
adc
lock
sbb
test
ins
fwait
or
add
xor
mov
fcmovnb
(bad)
data16
mov
adc
in
pop
pmaxsw
adc
xchg
fwait
mov
gs
ss
stos
or
cmp
dec
pop
and
xor
ror
jbe
dec
fstp
xchg
sahf
pop
push
xor
add
js
xor
stc
(bad)
sar
mov
adc
pop
jmp
data16
xlat
push
pop
sub
mov
fnstsw
adc
(bad)
push
jle
(bad)
jae
jns
jmp
mov
cmp
adc
mov
push
xchg
aas
std
pusha
xor
shl
stos
or
enter
jmp
adc
call
hlt
xor
je
xchg
ret
dec
sbb
xor
sub
xchg
fadd
dec
mov
scas
mov
jmp
dec
add
shr
dec
jo
add
jge
jecxz
pop
mov
mov
inc
data16
mov
cdq
dec
xor
int
out
pop
daa
jbe
mov
clc
sbb
push
div
inc
ror
push
ret
shl
arpl
jmp
mov
movs
inc
jp
out
pop
imul
cdq
jmp
pusha
cmc
adc
mov
out
out
fnstenv
cld
sub
into
push
add
out
sub
loopne
jmp
jbe
lock
(bad)
into
xor
leave
pop
and
lock
inc
inc
cmp
pop
push
cmp
fcomp
out
mov
push
dec
pop
mov
xor
xchg
(bad)
sub
xor
popa
jno
call
mov
cwde
aam
ror
ret
push
mov
jbe
aam
test
mov
call
jle
and
imul
or
scas
ss
mov
rcl
dec
ins
(bad)
shl
cmp
push
lock
lods
clc
cmp
das
xchg
pop
popa
adc
call
shr
gs
xchg
cmps
mov
outs
sbb
xchg
rcl
loopne
stc
add
std
shl
mov
cs
outs
test
or
enter
das
outs
mov
dec
sbb
pop
lds
and
pusha
mov
stc
scas
adc
xchg
xchg
push
cmp
jg
imul
aam
inc
or
in
adc
lods
xchg
cs
leave
and
fbstp
dec
jge
push
cs
fucompp
stos
dec
scas
cmp
test
cmp
sbb
sti
not
mov
xchg
jns
mov
pusha
cmc
add
xchg
imul
out
xor
mov
fs
retf
jmp
cmps
cmps
push
dec
retf
clc
push
icebp
inc
add
into
lods
pusha
add
pop
std
mov
push
adc
jecxz
dec
fist
add
jae
mov
outs
and
div
cwde
xchg
inc
cmps
fidiv
fs
dec
and
call
in
retf
iret
inc
cmp
inc
sub
sub
mov
and
jae
jno
cwde
push
xor
mov
mov
cs
dec
and
ds
push
or
cmps
mov
mov
inc
rcl
jbe
pop
add
loopne
push
sub
jg
push
lock
xlat
(bad)
div
(bad)
xlat
xor
int3
pop
outs
sbb
push
push
and
add
pop
lods
add
dec
mov
mov
repnz
jbe
rol
pusha
xor
xchg
push
lods
cmp
xchg
ja
jnp
cwde
hlt
inc
sbb
xchg
inc
int3
mov
jmp
fstp
inc
dec
in
lods
stc
mov
mov
retf
mov
and
add
out
ins
mov
xchg
jp
xor
lock
add
add
in
jle
push
mov
mov
fst
mov
pop
rcl
jo
push
or
aaa
pop
push
cdq
sub
daa
cli
xor
mov
call
push
(bad)
cld
pop
dec
sbb
js
sahf
inc
jl
and
das
cmp
rol
mov
mov
pop
and
movs
inc
xchg
dec
fnclex
or
mov
aaa
cmps
dec
fild
out
in
fistp
cwde
ret
(bad)
in
aaa
mov
(bad)
lods
xchg
cdq
or
adc
pop
fwait
xor
mov
xor
jp
movs
mov
cmp
lods
mov
sti
adc
pop
jl
xchg
mov
int3
pop
mov
sbb
aas
adc
jge
sbb
pop
imul
fsubr
xchg
jns
mov
inc
cdq
push
vrsqrtss
inc
mov
jle
xor
mov
mov
sbb
pop
js
or
add
ret
push
lock
mov
inc
(bad)
stc
dec
shl
jl
mov
fs
cwde
or
xor
mov
fbld
pop
sbb
sti
xchg
push
sub
fimul
sub
push
test
xchg
(bad)
or
call
mov
in
mov
jp
xor
sub
test
test
or
jnp
dec
add
dec
cli
les
(bad)
test
pop
fcomp
out
xor
dec
iret
mov
repz
xchg
enter
xchg
mov
mov
cdq
mov
inc
lds
aaa
cmp
aaa
jg
(bad)
pop
fst
add
mov
xchg
sub
loopne
dec
(bad)
cdq
lods
mov
jmp
xchg
shl
inc
jns
fst
test
adc
ja
jno
cwde
ret
retf
nop
jge
add
and
xchg
fisubr
pusha
dec
push
dec
dec
adc
pop
dec
cmc
pusha
sahf
xchg
and
aam
xor
into
adc
ins
out
arpl
xor
outs
ret
dec
jmp
pushf
sbb
ror
call
call
cmps
in
or
add
imul
test
pop
mov
inc
enter
or
les
pcmpgtd
push
cmc
arpl
cmps
pop
xchg
stos
leave
mov
xor
or
stos
stos
cwde
jmp
adc
jns
repnz
push
mov
into
mov
aaa
pop
or
bound
test
xchg
push
xchg
bound
pop
xor
repz
outs
sub
shr
stc
sbb
and
xor
add
jb
out
adc
sbb
sti
pusha
sub
rcr
mov
inc
inc
cld
inc
push
or
push
adc
ror
repnz
call
mov
ret
ja
scas
(bad)
xchg
mov
sahf
and
popa
into
cmps
xchg
jg
scas
add
dec
xor
push
mov
jb
std
inc
(bad)
adc
or
bound
adc
pop
ret
shr
mov
cmp
push
sar
mov
cmp
fmul
xor
mov
lds
mov
push
mov
dec
test
cli
mov
jb
call
inc
mov
std
add
in
test
pop
inc
jbe
mov
enterw
and
addr16
imul
sahf
leave
cmp
inc
inc
out
dec
aam
cmp
clc
xchg
(bad)
adc
push
sbb
push
rcl
aas
das
enter
in
shl
sub
loope
shl
shl
loopne
lahf
xchg
xor
mov
add
push
sbb
addr16
mov
(bad)
xchg
scas
cmps
pop
inc
pop
adc
mov
cli
jno
adc
pop
jae
jmp
in
inc
xchg
adc
xchg
(bad)
sub
test
adc
sti
or
adc
cs
(bad)
stc
ja
in
mov
mov
mov
or
int3
sbb
cmps
and
push
ds
adc
fst
fs
gs
or
bound
scas
idiv
aad
test
stos
push
pop
iret
shl
dec
mov
aam
inc
dec
repz
fsubr
(bad)
addr16
jecxz
test
rcl
fsubr
mov
cmp
mov
icebp
repnz
jmp
pop
pop
sbb
pop
push
sbb
or
or
xlat
std
mov
sub
and
xor
jecxz
adc
jnp
dec
cdq
mov
in
adc
retf
mov
in
mov
pop
jne
adc
repz
mov
cmp
les
dec
mov
jp
out
shr
pop
pop
fldlg2
out
pop
push
dec
imul
push
arpl
xchg
call
and
jmp
sub
je
ffreep
es
lods
or
xlat
rcl
or
ins
or
imul
mov
or
dec
rcl
and
lock
push
pop
mov
xchg
cmovs
icebp
sar
ja
pop
lock
cdq
push
test
cmc
out
lods
daa
pusha
mov
push
ins
das
xchg
scas
fs
shr
int
and
push
in
xchg
(bad)
addr16
xchg
cmc
psubw
imul
arpl
add
add
test
push
pop
inc
pop
and
add
(bad)
in
or
int
pop
lahf
icebp
mov
popf
sbb
fwait
sub
fistp
outs
mov
rcr
mov
sub
kmovb
shr
aas
add
mov
mov
lods
jnp
jp
out
cwde
push
add
sub
nop
iret
mov
push
pop
add
jmp
or
test
add
in
cld
mov
movs
inc
jae
(bad)
or
rcl
arpl
push
dec
sub
mov
cmc
jmp
mov
sbb
and
popa
rcl
mov
inc
into
or
jo
pop
inc
mov
push
push
jbe
cmp
push
adc
mov
and
or
xor
or
cmp
repz
adc
xchg
mov
dec
out
fs
ins
repz
dec
hlt
loope
add
cdq
pop
adc
cdq
mov
mov
mov
inc
jne
iret
arpl
loope
dec
jmp
inc
xor
cmp
pop
push
sub
ins
retf
nop
sbb
cmp
iret
pop
pusha
jbe
sti
push
xchg
jb
in
daa
setle
mov
scas
sub
push
repnz
pop
cmps
mov
sbb
mov
inc
xor
sub
sbb
leave
mov
or
lods
loope
retf
out
xchg
dec
jnp
add
xchg
shr
mov
fdiv
jmp
dec
jge
adc
adc
aad
ins
push
push
fsubp
std
das
mov
sub
in
stos
lock
xchg
ficom
add
imul
or
push
jmp
nop
cmp
adc
mov
mov
xlat
jbe
arpl
dec
cdq
pop
mov
shr
pop
loopne
mov
inc
mul
movs
imul
mov
ret
loop
cmp
hlt
ins
jle
cmp
cmp
adc
lea
sub
(bad)
adc
adc
adc
fiadd
popf
sbb
retf
(bad)
mov
fwait
mov
push
loop
aas
and
ret
psubusb
stos
loope
push
pop
mov
fwait
cs
(bad)
aaa
jno
call
cmps
lods
dec
jge
lahf
jecxz
mov
arpl
cli
rcl
push
in
fwait
rcl
(bad)
mov
pop
push
call
fld
cmp
repnz
repz
cmc
jge
pop
arpl
pop
test
mov
mov
and
int
mov
sti
dec
pop
xor
hlt
(bad)
xchg
scas
aad
fsubr
cli
add
les
fcom
push
jg
push
inc
shr
jmp
in
les
push
sbb
xchg
cmp
add
and
xchg
add
or
test
push
add
push
jl
sub
add
xchg
jnp
adc
and
aas
call
push
out
and
mov
adc
jl
movs
arpl
repz
mov
cmc
test
xchg
cmp
sub
fwait
mul
jno
push
mov
and
cdq
pop
xchg
xchg
hlt
int3
cmp
sub
in
hlt
mov
test
loope
xchg
xchg
or
jge
bound
cmp
pushf
fwait
push
jle
jmp
mov
jo
mov
ret
adc
mov
test
adc
or
adc
ins
(bad)
pop
(bad)
fs
sub
mov
jne
in
jb
inc
mov
lods
test
loop
jmp
inc
repz
fcomp
and
test
inc
pop
xor
mov
push
push
dec
(bad)
xor
dec
test
mov
ret
mov
inc
sub
in
dec
sbb
loope
sbb
jle
hlt
sbb
sub
mov
daa
push
inc
cmp
retf
dec
jb
jmp
pop
fimul
mov
sar
jbe
inc
pushf
cmps
xchg
mov
mov
or
(bad)
cli
outs
pop
cs
and
pop
pop
dec
loop
in
sub
sbb
adc
sbb
fisub
stc
jbe
xchg
xchg
jl
jg
cmp
es
jo
sahf
sahf
loop
push
test
push
push
mov
in
pop
test
mov
(bad)
in
cmps
push
ins
pop
mov
dec
mov
aaa
pop
adc
add
scas
js
aad
cld
scas
mov
pushf
imul
mov
mov
and
pop
add
pop
dec
inc
mov
add
into
and
push
cwde
or
lds
enter
mov
cs
loopne
or
xor
push
(bad)
outs
push
push
popa
inc
dec
mov
pusha
push
(bad)
pop
mov
hlt
scas
xor
pop
pop
adc
mov
jmp
sbb
dec
jecxz
ins
jmp
mov
mov
cld
push
or
adc
mov
xor
jp
loop
outs
dec
sub
ja
sbb
and
xchg
stos
fdivr
data16
fs
sti
les
retf
mov
dec
and
shr
jo
(bad)
scas
(bad)
and
jge
rcr
outs
pop
(bad)
fistp
jl
imul
mov
outs
add
in
dec
popa
pop
sub
dec
ror
lods
jge
adc
nop
jns
add
mov
(bad)
test
idiv
aas
lods
sbb
cmp
das
inc
sub
fisttp
inc
add
xor
out
cs
mov
ins
into
cmps
mov
in
inc
cmp
ins
and
lock
adc
popw
sbb
jbe
(bad)
mov
daa
adc
and
scas
push
and
aam
bound
xor
mov
jnp
test
xlat
jo
fidivr
rcr
cmp
mov
sub
mul
pop
cmp
daa
and
dec
cli
popf
aaa
jmp
sbb
jmp
and
ds
pop
sub
call
test
movs
push
adc
mov
sub
jb
jg
test
or
jne
fcmove
js
and
push
icebp
es
movs
cmps
ficom
pushw
cmp
mov
or
pop
push
mov
add
mov
retf
xchg
scas
in
xor
sbb
ficomp
push
rol
sbb
icebp
outs
fs
fdivr
test
push
pusha
das
xor
fild
fsub
dec
outs
clc
lds
xchg
fsub
dec
jae
mov
call
(bad)
cmp
dec
mov
sbb
xor
pushf
dec
(bad)
jmp
or
jl
add
rol
cld
mov
enter
lock
push
mov
mov
popf
inc
dec
push
pop
dec
xor
jl
pop
push
xor
movs
dec
scas
je
loope
mov
and
cwde
ror
test
add
test
scas
cmp
sbb
aam
loop
or
mov
jb
std
add
sti
inc
pop
mov
pop
add
mov
das
js
inc
xchg
xchg
cli
cmp
add
scas
xchg
in
int
mov
mov
xchg
sub
mov
push
in
mov
ja
pop
jo
sti
cs
fisttp
and
push
aas
in
or
cmc
xlat
cmp
jno
and
mov
xor
and
sar
pop
adc
dec
mov
daa
inc
inc
jb
jp
pop
cld
in
add
push
xchg
xchg
fist
mov
mov
mov
dec
fcom
sti
fisubr
and
push
iret
inc
jmp
or
push
popf
in
add
sbb
bound
gs
bound
jecxz
mov
repz
pushf
pushf
jno
fs
push
js
stos
fs
inc
mov
sub
jb
fbstp
pop
add
mov
aam
outs
out
enter
and
hlt
fist
and
inc
data16
shr
pop
int3
adc
arpl
xlat
jb
inc
call
cdq
or
or
(bad)
data16
xor
fsubr
mov
pop
(bad)
ficomp
jg
or
imul
call
out
sub
ja
(bad)
sbb
sbb
clc
popa
lds
and
xor
jns
push
add
push
or
out
ja
loop
lahf
mov
arpl
dec
jne
jecxz
inc
xchg
pusha
gs
pop
xor
ins
jge
xchg
dec
inc
cs
cmp
mov
mov
sbb
mov
xor
push
retf
sub
adc
lahf
dec
out
mov
scas
pop
int
xchg
cmp
js
arpl
adc
sar
push
neg
jmp
sbb
nop
dec
xchg
arpl
dec
imul
and
dec
dec
add
fistp
xor
inc
add
sahf
stos
in
add
inc
mov
loopne
lahf
mov
ror
pop
add
outs
xor
jnp
bswap
aam
inc
pop
pop
test
mov
push
scas
add
stc
push
cdq
int3
pop
sbb
push
xor
jp
and
mov
inc
loopne
sar
ss
loop
sti
and
add
and
jle
pop
enter
out
mov
or
xchg
les
imul
mov
fldenv
jo
mov
add
lock
xor
or
in
pop
pop
mov
xor
popf
jmp
cmovnp
paddd
sub
inc
xchg
jb
daa
push
mov
(bad)
or
test
sar
pop
xchg
pop
pop
clc
add
push
pop
pop
fistp
out
call
lods
mov
sub
sub
pop
jge
out
jge
inc
std
cmc
adc
or
es
test
test
xchg
imul
push
push
xor
pop
loope
and
cmps
jbe
adc
mov
outs
mov
sub
inc
mov
inc
test
mov
adc
add
push
sub
popf
pop
push
ss
sbb
mov
loopne
sbb
and
mov
and
lahf
mov
idiv
jl
jmp
cmps
push
daa
ja
call
add
dec
add
pop
inc
ficomp
and
mov
and
add
jmp
cld
fisubr
add
test
jp
in
fimul
test
fild
sar
mov
or
pop
jo
sub
xor
dec
rol
daa
jle
inc
(bad)
rcl
(bad)
mov
pop
push
jl
inc
(bad)
lods
mov
push
ja
mov
cli
(bad)
adc
add
jbe
dec
mul
das
mov
adc
scas
pmuludq
scas
adc
pop
sub
idiv
adc
jo
je
and
adc
ins
cmps
dec
pop
data16
daa
(bad)
jp
lea
neg
mov
cmps
hlt
inc
enter
fcmove
fs
lods
dec
mov
rcr
xchg
les
xlat
mov
cmp
pusha
enter
loope
repz
cmps
dec
mov
mov
push
loope
dec
mov
lock
iret
ins
enter
aaa
fcomp
xor
rol
inc
sub
repnz
popf
js
bound
add
push
jae
mov
mov
daa
ret
pop
repz
xchg
cmp
dec
xchg
mov
(bad)
jmp
cdq
pop
cdq
add
jmp
inc
push
aam
mov
jmp
dec
mov
xchg
leave
imul
fdivr
pcmpeqw
push
iret
int3
dec
ins
adc
cmp
mov
in
fsubr
movs
dec
sub
dec
(bad)
imul
cld
addr16
mov
dec
test
xchg
in
push
adc
fsubrp
adc
pop
or
cli
loop
stos
loopne
pop
and
push
repz
fcmovbe
xor
mov
cmc
adc
ds
cmc
sub
(bad)
dec
cmp
sub
mov
and
inc
mov
sahf
scas
into
(bad)
into
mov
mov
adc
repz
lahf
fwait
call
ror
ja
std
inc
mov
outs
xchg
data16
adc
add
mov
sbb
sub
sub
add
int
mov
rcl
adc
in
and
inc
stos
iret
pop
mov
loopne
adc
dec
jl
push
or
jmp
sbb
test
cdq
das
cli
or
dec
ror
or
pop
fiadd
jae
xchg
mov
outs
cmps
add
cs
add
mov
(bad)
and
je
add
xor
nop
cli
mov
fidivr
inc
mov
dec
fsubr
push
lahf
rcl
inc
ror
mov
dec
cs
mov
daa
sub
sub
loopne
test
xchg
add
push
dec
add
sub
js
push
and
in
sar
mov
pop
dec
fbstp
and
out
rcr
jae
xor
jl
xchg
fcmovb
retf
popf
xchg
stos
mov
loop
cmc
jae
or
jp
and
cmp
xor
jmp
in
push
push
mov
es
fdivr
mov
sub
push
popa
cld
call
mov
pop
ins
adc
mov
xor
or
test
push
test
mov
add
push
cwde
pushf
test
test
jge
sti
and
inc
clc
mov
fdivr
jecxz
fwait
jge
mov
mov
xchg
xlat
mov
pop
stc
sahf
inc
and
dec
mov
adc
xor
rcl
test
or
out
or
cmp
sahf
loop
(bad)
jnp
fwait
movs
cli
shr
xchg
ror
jecxz
adc
test
push
daa
jg
jb
mov
shl
sub
ret
push
inc
sahf
xor
(bad)
jg
dec
pop
mov
mov
lock
shl
push
mov
jnp
dec
cld
mov
scas
jle
repnz
inc
dec
add
fsubr
mov
test
das
xor
das
inc
in
(bad)
fs
add
cmps
push
add
mov
xor
xchg
in
mov
mov
lds
cmps
adc
mov
jne
xor
outs
out
or
ds
retf
sub
stos
ins
test
sti
int3
sub
jnp
push
sub
xor
adc
sbb
inc
add
std
rol
(bad)
dec
add
jp
xchg
jl
dec
pop
push
add
hlt
jno
int3
mov
xchg
mov
jecxz
xchg
ins
test
retf
(bad)
jb
out
leave
xchg
mov
pusha
jns
jne
push
lds
popf
iret
inc
and
pop
xor
xor
mov
les
mov
clc
adc
retf
ja
mov
mov
enter
jl
in
sbb
movs
repz
and
adc
cwde
mov
jbe
fild
mov
(bad)
jmp
mov
jb
(bad)
iret
dec
fisttp
sub
mov
inc
push
xor
call
push
cmps
xchg
cld
mov
loope
aas
cmp
sbb
test
(bad)
sub
jns
retf
cli
xchg
sub
inc
mov
cmp
sbb
imul
cld
push
sub
pop
jp
xchg
nop
(bad)
mov
(bad)
sti
or
adc
ret
sub
push
dec
xor
xchg
sti
jmp
mov
mov
xor
sar
mov
cli
test
sub
out
shl
jg
addr16
stos
stos
nop
lds
and
aad
sbb
mov
cmp
push
test
hlt
pop
in
pushf
mov
mov
pop
inc
retf
sbb
hlt
lea
xchg
jecxz
xchg
repz
pop
test
pop
retf
or
mov
ret
mov
nop
lds
jne
sar
popf
sbb
fwait
mov
into
jae
inc
mov
in
ficomp
jbe
in
clc
rcl
aas
mov
cwde
lds
test
test
(bad)
sub
test
jmp
xchg
dec
fnstcw
sbb
shl
pop
xchg
adc
test
pushf
int3
out
aaa
and
lock
jmp
ins
lock
mov
push
jmp
xchg
cmp
sub
push
dec
adc
mov
dec
sub
rcl
stc
pop
leave
dec
push
push
pop
inc
dec
cs
ret
hlt
loopne
jp
mov
aad
cmc
xor
sub
inc
dec
dec
scas
repz
call
xor
inc
into
mov
in
push
ret
ja
xlat
ins
xor
fs
pop
in
loop
lea
out
sbb
inc
pop
push
xchg
adc
cmp
movs
cmp
das
(bad)
lahf
and
or
(bad)
lods
cwde
popf
mov
pop
sahf
cmps
into
dec
inc
add
sbb
add
movs
pop
jae
stc
mov
push
cld
call
inc
rcl
sahf
lock
xlat
arpl
push
data16
sbb
inc
or
stc
push
push
sbb
pop
jg
pop
(bad)
fld
aad
push
repnz
and
leave
rcr
call
xor
xor
jne
cmp
das
mov
test
sub
aaa
or
ror
mov
mov
clc
ja
pushf
inc
jmp
pinsrw
and
inc
ret
sub
and
aaa
inc
movnti
mov
js
pusha
cmps
leave
sbb
dec
jnp
or
mov
cdq
cmp
jae
movs
xlat
mov
lds
pusha
pop
addr16
aam
xchg
(bad)
push
sbb
(bad)
pop
dec
je
mov
or
outs
(bad)
xor
lock
mov
pushf
rol
mov
rcr
pop
aam
xor
sar
jne
call
jle
cdq
push
test
xchg
add
jne
xchg
pop
ret
das
popa
enter
mov
mov
xor
ins
pushf
movs
aam
pop
cli
pop
cmp
cmp
dec
(bad)
xchg
lock
in
inc
jnp
pop
add
fcomp
pusha
adc
(bad)
lods
dec
movs
and
pop
push
jnp
sbb
ret
test
xchg
pushw
ficom
or
pop
push
dec
push
dec
mov
dec
mov
adc
xchg
jmp
jmp
popf
movs
inc
xor
pop
je
outs
pop
test
into
mov
and
dec
sub
popa
mov
push
sub
jbe
mov
outs
(bad)
repz
inc
jb
pusha
and
adc
cmp
ins
add
fisubr
je
sub
bound
jl
sbb
mov
ins
dec
jns
pop
lea
pop
(bad)
out
ret
cmp
xor
cmp
repnz
pop
popf
(bad)
loopne
mov
lods
jno
cmp
jo
clc
inc
jb
imul
and
les
and
and
xor
fistp
add
mov
or
fsub
leave
jno
inc
ss
(bad)
loopne
xor
movs
xchg
xchg
in
in
test
outs
inc
out
pop
add
ret
inc
hlt
sub
fcom
sub
or
retf
out
in
add
(bad)
cmp
loope
(bad)
push
push
add
in
and
ret
and
mov
loopne
dec
mov
sbb
dec
test
add
mov
mov
cmp
mov
inc
jbe
push
sub
push
gs
mov
xor
popf
add
push
iret
adc
enter
or
sti
daa
push
lahf
jo
cdq
add
and
mov
dec
cmp
jmp
mov
add
mov
mov
out
sbb
sar
and
xor
scas
in
push
pop
mov
in
enter
adc
lods
jp
adc
clc
inc
inc
push
js
mov
loope
and
jg
js
or
sbb
jo
dec
addr16
nop
inc
and
xchg
xor
inc
cli
pop
fs
fadd
mov
ror
sbb
mov
(bad)
cmc
mov
popf
ins
jns
mov
loop
xchg
cmp
xchg
bound
sub
in
mov
aaa
aam
push
lahf
ja
cmps
sub
jmp
xchg
cmc
mov
xor
mov
pop
jno
sub
out
pop
mov
mov
call
stc
mov
cmc
or
test
add
jns
xchg
inc
push
test
pop
mov
inc
popf
dec
fcmovbe
iret
sbb
aaa
mov
sahf
in
stos
add
mov
adc
outs
cmp
xor
inc
push
test
push
xchg
stos
jbe
aad
jnp
push
pop
jmp
popa
aaa
movs
shl
aaa
(bad)
xchg
mov
fstp
xchg
push
cmps
dec
shl
imul
out
sub
call
add
add
(bad)
fs
mov
repnz
xor
mov
das
iret
add
xor
aas
adc
imul
push
mov
jae
clc
and
jl
retf
int
jmp
int3
bound
lods
adc
sub
cld
aad
mov
aad
fwait
inc
sub
mov
adc
shl
jmp
push
test
mov
ret
fwait
pop
inc
sub
push
loopne
cmp
repz
stos
out
imul
outs
(bad)
mov
ret
sar
outs
and
stos
mov
push
pushf
mov
rcl
jmp
xchg
aaa
out
(bad)
jmp
lods
adc
mov
mov
add
loop
xlat
lods
in
pushf
xchg
rep
jp
cmps
outs
xlat
in
jne
stc
jno
ror
or
cmp
sbb
push
cmps
cmc
pop
div
sbb
xchg
xchg
sbb
xor
mov
adc
and
jne
cld
cmp
mov
xor
mov
in
or
data16
fwait
xor
mov
int
mov
inc
test
pop
sub
lods
jecxz
adc
test
sub
xchg
or
jge
mov
(bad)
xchg
mov
lds
jl
mov
ret
sbb
out
shl
pop
repnz
fild
test
gs
leave
adc
mov
enter
push
imul
mov
out
xchg
xchg
mov
xrelease
movs
(bad)
fidivr
iret
jo
inc
push
adc
sahf
push
sub
icebp
mov
cs
sbb
inc
cmc
xchg
jmp
(bad)
push
int
mov
loope
and
fsubr
mov
mov
adc
adc
pop
sbb
xlat
not
repnz
mov
push
mov
pop
out
jmp
mov
aad
jecxz
sbb
xor
cmp
jl
fmul
fwait
cmp
addr16
cmp
scas
adc
sbb
out
mov
push
ror
mov
repnz
add
int
imul
xchg
xchg
iret
push
(bad)
scas
push
test
sub
pushf
mov
cmps
outs
pop
sahf
ja
fisub
jno
test
dec
adc
mov
outs
xchg
stos
pushf
pop
xor
push
mov
test
mov
sbb
retf
loope
mov
outs
arpl
ins
mov
pop
into
enter
cmp
div
and
xchg
test
mov
(bad)
aam
sbb
mov
adc
pop
push
pop
pop
mov
jge
repz
les
fsub
mov
push
dec
inc
lods
test
movs
xchg
mov
cmps
cmp
add
not
fldenv
pop
push
xor
lea
pushf
jns
lahf
add
pop
leave
jmp
jbe
vxorps
push
cmc
xor
cs
sub
inc
popf
cmp
inc
fnstcw
pop
mov
fidiv
inc
adc
std
ja
adc
test
mov
retf
pop
pop
and
(bad)
xchg
sub
dec
test
je
xchg
push
js
les
sahf
lods
add
adc
xor
jnp
xor
(bad)
mov
stc
int
icebp
es
sbb
idiv
and
scas
pop
pop
add
std
xchg
imul
mov
add
test
sub
cmp
push
inc
call
adc
adc
inc
pop
test
jno
or
xchg
and
das
mov
ss
mul
das
cmp
in
rol
jg
idiv
mov
pushf
data16
xlat
xchg
push
sbb
mov
sub
aam
popf
sbb
fiadd
xchg
and
or
repnz
fistp
ret
scas
jecxz
das
repz
das
repnz
retf
push
ja
jno
cli
fld
jno
in
inc
(bad)
xchg
dec
ret
or
fimul
sub
cmc
stc
mov
mov
adc
test
dec
mov
and
lods
repnz
sub
inc
sub
loop
dec
ins
sub
cmps
test
out
sub
jmp
xlat
mov
dec
jns
add
jb
push
push
ja
jb
push
mov
ret
outs
test
sbb
je
test
retf
into
and
stc
bound
add
mov
mov
or
movs
mov
pop
dec
jae
call
lock
iret
dec
ss
jge
or
mov
jns
mov
mov
(bad)
jae
lods
scas
lahf
sahf
in
stc
out
jp
repnz
jge
sbb
retf
pop
push
pop
call
sub
xchg
and
cmps
jmp
imul
cmp
hlt
aas
imul
lods
sbb
or
xor
cmp
test
push
clc
mov
loop
shl
or
sbb
xchg
out
add
inc
stos
add
dec
dec
js
fsub
sub
mov
jp
outs
adc
in
mov
mov
mov
cmp
nop
pop
cwde
aam
inc
dec
imul
jbe
das
out
xor
xchg
xchg
cmc
add
jmp
jmp
jb
mov
mov
inc
(bad)
push
fisubr
mov
cmc
inc
sbb
adc
dec
sub
xadd
out
add
dec
dec
mov
cs
test
xor
cmps
jne
fbld
stos
aas
dec
pop
fucomp
jl
sub
add
cmp
xor
or
out
out
ret
inc
test
(bad)
adc
mov
add
cmp
in
les
repz
test
test
sub
retf
leave
mov
retf
mov
jecxz
mov
ins
sbb
or
pop
out
add
fcom
icebp
inc
xchg
mov
imul
shl
sub
xor
dec
pop
or
xor
popf
push
imul
aam
push
lods
imul
mov
dec
xor
sbb
dec
xor
movs
test
out
fs
test
mov
xchg
pop
pop
and
jp
std
jno
out
or
add
fidiv
fs
cmps
mov
and
(bad)
call
adc
dec
jb
jnp
rcl
jo
mov
(bad)
into
test
push
and
mov
mov
repnz
push
adc
adc
sub
gs
mov
jbe
cld
dec
cmps
test
inc
jmp
jae
sub
outs
add
xor
out
and
push
adc
mov
retf
enter
nop
xor
fcmovb
mov
cmp
call
pop
or
out
aam
pop
dec
pushf
out
mov
call
outs
mov
dec
mov
push
xor
int
mov
call
xchg
push
adc
xchg
and
sub
(bad)
jo
mov
cmps
cs
xchg
or
or
aad
add
xor
inc
xor
jae
push
dec
mov
pop
mov
fsub
push
pop
sbb
cmp
push
push
jns
jmp
lds
shld
mov
dec
cli
sbb
scas
dec
ins
enter
push
push
push
sbb
movs
jnp
sahf
push
mov
out
pop
jl
cmp
inc
sbb
pop
out
(bad)
adc
iret
arpl
or
push
es
ins
fisttp
sub
aas
sahf
arpl
mov
inc
mov
stc
outs
in
repnz
or
ins
xchg
and
add
add
pop
fbstp
inc
fs
sub
or
mov
mov
imul
jnp
mov
add
dec
cdq
push
daa
pop
outs
data16
mov
addr16
or
or
(bad)
div
aam
mov
pushf
dec
add
push
cmps
push
xor
mov
jae
cmp
sub
pop
push
loopne
xchg
jmp
mov
jmp
(bad)
xor
rol
lahf
and
(bad)
imul
cmp
mov
icebp
popa
outs
icebp
dec
gs
pop
xchg
adc
sbb
push
in
loopne
push
pop
mov
inc
add
push
(bad)
loope
jnp
pushf
pslld
mov
mov
imul
cwde
cmp
mov
pop
jb
pop
ins
popa
cwde
rol
ds
add
sub
push
test
xchg
ja
jmp
xor
inc
cmp
push
mov
je
loope
sahf
lds
mov
xor
add
xchg
pop
sub
movs
push
ret
(bad)
(bad)
ins
add
adc
adc
cwde
lea
iret
add
add
outs
rcr
lds
mov
(bad)
jmp
call
push
fbld
iret
xor
aas
mov
into
movs
ja
in
adc
cmp
cmp
add
stos
scas
mov
fcom
dec
sbb
imul
rcl
mov
xlat
fisubr
fwait
sbb
and
dec
fs
aaa
mov
ss
ins
jge
and
call
mov
inc
movs
sbb
mov
xchg
shl
xchg
popa
int
cmp
cmp
and
int
pop
mov
mov
or
mov
inc
mov
jp
icebp
sbb
jnp
loope
ret
repz
pop
ud0
push
adc
mov
test
adc
push
ins
inc
lds
(bad)
push
jo
dec
mov
push
ss
jb
retf
push
add
pop
popa
ins
mov
dec
shr
adc
push
dec
sbb
outs
hlt
xchg
jg
push
push
sahf
aas
int3
xlat
add
pop
add
(bad)
daa
scas
push
dec
jae
sahf
push
xchg
push
sbb
jmp
xchg
and
xchg
add
loop
neg
mov
mov
jb
ret
add
pop
hlt
test
add
fwait
and
dec
cli
aad
in
mov
jb
or
xlat
arpl
vmwrite
sub
bound
enter
stc
xor
or
into
jmp
test
push
jb
int
adc
lods
mov
inc
add
jne
and
sbb
sahf
add
mov
jo
test
lds
movs
rcl
mov
jl
(bad)
jno
ficomp
mov
lahf
xor
sub
adc
add
cwd
mov
or
mov
jnp
imul
std
jmp
lods
ret
out
jmp
mov
data16
stos
sar
or
and
push
dec
dec
xchg
cmp
mov
fcomp
jmp
lea
out
push
and
iret
xchg
pop
jnp
mov
mov
push
or
pusha
pmuludq
jp
(bad)
or
call
out
inc
push
jns
arpl
jl
mov
mov
call
pushf
call
rcl
aad
mov
mov
std
pop
and
fwait
fwait
mov
sbb
outs
test
fdivr
or
mov
push
fimul
mov
popa
test
pop
in
and
jb
(bad)
dec
push
xor
push
leave
test
push
xchg
lock
xor
add
mov
push
lds
mov
into
cwde
sbb
out
les
push
mov
(bad)
vsqrtsd
stos
or
pop
out
inc
push
push
cld
mov
push
rcr
mov
push
dec
pop
sub
add
loop
popa
(bad)
call
in
mov
and
push
mov
xor
mov
dec
add
fiadd
pcmpgtb
adc
and
scas
(bad)
adc
stos
xor
cmp
inc
and
mov
int3
mov
xlat
mov
mov
scas
test
pop
jl
cmp
sbb
(bad)
mov
and
inc
push
mov
shl
mov
ja
popf
(bad)
data16
ss
mov
movzx
and
sahf
retf
push
dec
jmp
hlt
fxtract
mov
ficom
cmp
dec
fld
fcmovu
outs
outs
cmp
aas
fcmovnb
lods
rcr
jmp
push
test
mov
in
jmp
call
aaa
cmp
aas
outs
or
or
sub
sub
in
imul
addr16
pop
in
ja
push
lods
in
sbb
jbe
nop
xchg
xadd
ficom
std
mov
fidivr
dec
lods
xchg
fistp
shl
hlt
loopne
cmp
imul
test
fcom
xchg
pop
(bad)
clc
mov
loop
pop
int3
cdq
xchg
xchg
adc
(bad)
lahf
push
in
ret
adc
and
jne
out
mov
daa
ret
sub
sub
movs
mov
jp
xchg
pusha
iret
xchg
sbb
imul
rcr
lods
fimul
outs
mov
ins
aaa
in
pop
inc
jmp
enter
ffree
sahf
pop
and
iret
imul
push
lock
push
mov
aad
fs
mov
or
push
dec
pop
mov
shl
jge
cmps
push
dec
sub
mov
mov
in
or
cmps
hlt
jnp
mov
stos
aad
xor
sbb
dec
mov
or
xchg
mov
and
nop
push
and
cwde
pop
out
dec
and
movs
mov
inc
and
jecxz
adc
idiv
(bad)
sub
imul
daa
pushf
adc
mov
and
xchg
int3
mov
pusha
xchg
sub
adc
lahf
arpl
fbld
push
movs
daa
pop
jmp
or
pop
int
arpl
fdiv
fwait
shl
outs
xor
mov
inc
and
stc
rol
xor
lods
pop
sub
out
sub
les
fistp
mov
neg
inc
or
sub
hlt
test
pushf
push
hlt
add
sahf
inc
push
pop
jp
sbb
icebp
push
xchg
mov
mov
push
cmp
add
je
mov
mov
and
xor
mov
popf
fucomp
inc
scas
cmp
mov
outs
fild
imul
cmp
loopne
inc
mov
sahf
xor
in
sbb
pop
jns
iret
popa
cmps
fsub
je
jno
mov
pop
lahf
sahf
push
cmps
mov
sub
test
inc
enter
cmp
xchg
lock
mov
out
cmp
mov
stos
aad
sbb
push
data16
out
sbb
cli
int3
fadd
lds
cmovnp
(bad)
aad
out
jne
(bad)
ds
int3
outs
push
mov
mov
test
fbld
mov
jecxz
call
(bad)
jmp
fldenv
in
ja
test
push
dec
or
cmp
aaa
pusha
mov
mov
ins
aas
mov
inc
and
jmp
repz
jns
cdq
and
pop
fdivr
pushf
mov
jae
pop
sub
lds
lds
imul
jns
xor
int3
xor
mov
dec
or
and
lods
mov
ja
xor
call
out
iret
ja
pushf
adc
xchg
cmp
and
data16
js
lods
ret
out
pop
add
push
mov
inc
pop
sub
mov
adc
inc
jo
das
xchg
push
xor
push
mov
aas
jp
push
and
push
inc
dec
icebp
(bad)
and
or
lds
jp
cmp
adc
std
or
ret
jno
ss
xchg
aam
or
push
jg
jnp
call
scas
push
pop
fsub
jnp
and
rcl
and
out
mov
cmc
and
jl
dec
dec
push
in
jmp
imul
adc
retf
xchg
and
jmp
sub
pop
push
lods
xchg
mov
and
adc
icebp
jmp
jo
test
mov
sahf
dec
out
aas
out
dec
test
ss
in
ins
add
fucomip
adc
or
adc
cmp
and
inc
retf
xlat
aaa
adc
jae
sub
sbb
test
inc
pop
sbb
bswap
ds
mov
ds
cmp
call
in
jae
cmp
sbb
add
popa
mov
mov
fild
or
adc
mov
cmp
xor
push
outs
and
loop
in
xor
shl
test
cmp
jae
cmovle
in
in
mov
dec
push
xchg
add
dec
enter
js
mov
jae
mov
push
push
aam
and
imul
rcr
jae
cwde
jnp
inc
out
(bad)
mov
loopne
fidiv
or
lock
aam
(bad)
jno
cmp
shl
or
repnz
sbb
rcr
pop
jle
rcl
ja
imul
xchg
stos
xchg
jbe
shl
shl
push
repnz
dec
jg
shr
int3
sub
(bad)
cdq
pop
mov
inc
pushf
jg
push
sub
jo
add
dec
xchg
mov
(bad)
push
sbb
cwde
mov
push
sbb
push
xlat
pushf
shl
ror
in
and
xchg
inc
pop
test
xchg
sbb
jg
jae
xlat
and
retf
push
sub
nop
add
popf
in
ret
jge
mov
data16
pop
es
jb
mov
adc
lds
or
lods
sbb
mov
imul
(bad)
add
push
inc
jg
pop
or
lds
inc
ins
aaa
mov
xor
std
jge
cmps
out
sub
ds
fwait
inc
xchg
mov
pushf
rcr
inc
lock
mov
push
and
adc
test
dec
mov
jnp
push
cmp
sbb
xor
push
xchg
fistp
mov
repnz
sub
aaa
and
fwait
mov
inc
push
xor
rcl
ss
retf
pop
adc
ror
jg
xchg
ret
jae
xchg
xchg
and
dec
ret
xor
repnz
jp
cmp
in
push
repz
rcr
adc
(bad)
sbb
pop
repz
mov
mov
(bad)
mov
pop
popa
call
arpl
call
fs
call
leave
inc
icebp
in
pop
sub
imul
xor
bsr
aas
pop
shl
mov
jbe
in
and
in
cmp
xchg
test
sub
inc
xchg
push
xchg
fimul
nop
bound
add
mov
jmp
jo
sub
fist
cmc
test
xor
in
je
xchg
sar
ja
and
xchg
shr
sbb
aam
fidiv
sbb
inc
inc
dec
push
loope
or
mov
ror
aad
sub
push
xor
mov
jo
xor
adc
dec
outs
cmp
mov
mov
inc
mov
add
push
and
or
mov
xchg
inc
(bad)
mov
add
movs
loope
out
je
aad
jmp
fild
sbb
xchg
shl
fs
and
hlt
pushf
shl
sbb
data16
dec
mov
dec
push
sbb
cld
cli
or
movs
mov
push
popf
repz
pusha
mov
sub
bound
and
and
mov
add
jno
mov
imul
inc
dec
dec
mov
aaa
je
cld
fisubr
(bad)
cli
daa
sub
imul
retf
sub
sbb
add
shl
or
jnp
sar
mov
pop
and
cmp
rol
int3
jb
jge
and
imul
cmp
xchg
xchg
push
daa
jmp
adc
in
sti
repz
xchg
shl
mov
daa
(bad)
xor
mov
xchg
push
pop
mov
std
mov
imul
pop
xchg
cmps
xor
dec
out
psllq
or
loop
jp
loopne
cmp
out
fs
mov
pop
sbb
test
xchg
movs
enter
sar
imul
adc
mov
inc
cmps
mul
idiv
adc
cmp
xchg
out
cli
js
je
nop
cli
cs
sub
test
jg
adc
cmp
mov
js
push
jns
es
pop
xor
mov
mov
div
sub
fst
jo
retf
or
dec
shl
mov
jnp
nop
jbe
and
mov
or
or
ins
ja
lea
les
stc
xlat
push
adc
repnz
lock
out
jle
sti
mov
mov
hlt
test
dec
call
ja
cmp
sbb
fcom
xchg
or
mov
dec
mov
mov
sub
inc
and
out
add
out
or
ds
popf
ja
mov
xchg
and
and
jecxz
test
pop
jmp
cmps
xor
outs
push
pop
xchg
mov
pop
mov
or
call
push
sbb
mov
(bad)
jp
daa
mov
push
push
hlt
push
lods
jns
mov
mov
js
fcomip
xlat
or
arpl
popf
popa
add
cmp
test
shl
xor
cmp
push
fs
pop
loop
call
or
iret
push
les
push
push
xor
pop
xchg
xor
fs
sbb
push
ror
jns
ss
mov
scas
pop
xchg
xor
(bad)
push
push
xchg
retf
das
jmp
data16
adc
and
sbb
push
adc
and
mov
add
aaa
(bad)
pop
jns
out
ins
push
mov
out
ins
(bad)
inc
les
mov
retf
inc
adc
push
push
adc
idiv
dec
sbb
out
rol
fcom
mov
shl
mov
jp
shl
dec
add
add
inc
call
xlat
inc
js
mov
add
push
mov
pop
adc
push
push
jg
lds
inc
div
into
pop
call
cmps
sbb
and
unpckhps
mov
stc
dec
inc
aad
cli
imul
jnp
mov
dec
or
pop
leave
shl
and
cmps
and
xchg
out
popa
aad
inc
xchg
cs
fucomp
cwde
or
fld
cmps
cmp
lea
inc
mov
mov
and
xchg
push
sahf
ret
in
fiadd
in
dec
ror
pop
xor
xor
add
add
jle
mov
sub
xchg
push
push
dec
xchg
jb
jmp
sbb
aam
sti
retf
add
neg
sub
sub
dec
pop
hlt
jmp
xchg
ret
and
repz
lods
inc
push
sub
leave
jns
retf
jno
pop
out
and
xchg
dec
cmp
pop
in
pop
sti
xchg
or
xchg
fs
mov
or
xor
xor
cmp
jne
sahf
push
into
xchg
jns
ins
dec
xor
jo
das
loop
cmp
out
sbb
and
test
sbb
sbb
out
jns
push
ficomp
repz
cmp
xor
xor
(bad)
cwde
aaa
icebp
call
outs
pop
(bad)
jl
sbb
xchg
test
(bad)
cmps
stos
and
cmp
push
push
stc
pop
xchg
sbb
sub
(bad)
shr
adc
jmp
push
(bad)
dec
xor
setne
or
lods
test
adc
push
pop
cwde
call
rcr
test
rcr
push
adc
sar
mov
sti
cdq
mov
loop
ret
leave
sub
push
mov
jecxz
fwait
mov
xchg
pop
test
adc
test
cmc
cdq
shr
sub
sub
test
cmp
retf
push
push
out
fs
inc
pop
mov
push
stc
addr16
mov
jbe
mov
and
mov
cwde
movs
add
jl
fs
sbb
mov
lock
push
jmp
mov
daa
cmp
ds
push
ret
cmp
out
sbb
inc
cmp
fdivr
sub
in
inc
cmps
sub
mov
jae
add
xchg
add
cld
mov
sbb
nop
sub
and
mov
fist
cmc
js
sub
addr16
fcmovnb
aas
dec
lock
add
lods
adc
dec
pop
test
scas
(bad)
adc
stos
cmp
adc
pop
xlat
je
dec
mov
mov
push
ficom
test
inc
or
imul
cmp
push
ret
or
test
sub
xchg
cdq
js
add
ret
push
inc
and
push
clc
sbb
loope
add
gs
pop
sub
mov
jp
cmps
loop
jne
xchg
and
scas
push
out
loopne
add
dec
mov
mov
je
sti
inc
pop
test
pop
and
pop
por
xchg
jns
fisubr
lods
jb
les
call
mov
pop
out
inc
rol
cmp
inc
(bad)
clc
les
cmp
dec
fmulp
cwde
dec
jno
dec
inc
add
pop
hlt
adc
jo
mov
jl
ins
es
xchg
push
sub
imul
bound
fwait
adc
push
in
(bad)
xchg
push
and
sti
fdivr
das
std
iret
adc
cmp
scas
sub
ret
iret
popa
push
mov
jmp
mov
jg
cli
in
ss
out
xor
add
add
sub
jno
xor
cmc
cmp
retf
popa
sbb
add
aam
sub
ins
rol
push
push
mov
scas
loop
rcr
(bad)
pop
lods
dec
mov
ins
adc
(bad)
mov
adc
cmps
xor
fxam
inc
out
out
xor
jle
loope
lods
sar
ret
stos
and
mov
enter
lea
mov
jo
push
mov
iret
fmulp
sub
sti
js
scas
jecxz
mov
lods
add
test
inc
jo
sub
xchg
inc
mov
cmp
mov
imul
jg
pushf
sub
and
push
es
ja
movs
cmp
rol
pushf
das
sbb
test
mov
push
xor
and
push
mov
test
div
inc
in
cmp
adc
pop
fwait
rcr
xchg
xor
sub
rcl
mov
int3
or
movs
or
std
pop
cwde
scas
and
add
mul
pusha
cmp
xchg
push
cmps
pop
sbb
mov
inc
lods
jae
jbe
imul
call
scas
jno
je
cld
cmc
mov
cmp
ins
mov
mov
jns
pop
mov
push
push
fsubrp
and
iret
mov
add
out
(bad)
or
pop
sbb
pop
fdivr
xchg
xchg
fstp
mov
stc
mov
sbb
sub
in
cmps
fs
enter
dec
add
arpl
fwait
mov
and
jle
lea
cs
adc
test
mov
retf
adc
ins
js
cli
mov
or
ins
rcr
and
stos
dec
sbb
ss
cli
pushf
or
xchg
test
xor
xchg
cmc
lods
xchg
cmp
adc
sub
inc
mov
imul
dec
outs
aas
out
loop
int3
adc
lods
mov
int3
xor
fisttp
pop
jno
cmp
je
adc
pushf
retf
das
je
cwde
xor
lods
xchg
sub
mov
movs
ins
add
test
arpl
(bad)
les
cdq
loop
inc
adc
adc
cmovne
cmp
out
sahf
enter
and
mov
and
out
pop
sub
sbb
xchg
add
(bad)
loope
sub
sbb
dec
aas
popa
mov
mov
inc
inc
adc
mov
popf
sub
xor
mov
iret
xor
loop
jmp
cmp
dec
imul
fld
pop
xor
dec
inc
dec
std
jmp
cmc
mov
test
mov
cld
push
retf
inc
or
fcomi
or
or
or
int
pop
xchg
push
adc
or
push
dec
xor
stos
popf
jo
adc
mov
push
jnp
inc
xchg
add
jae
in
inc
mov
mov
cmp
cmc
lfs
fs
jb
lock
mov
cld
test
sub
icebp
cmp
cmp
ror
dec
lock
cmp
test
xor
push
cmps
test
sub
popf
mov
mov
pop
loopne
ret
sti
(bad)
adc
repz
ret
pusha
das
into
mov
mov
ins
in
pop
pop
xchg
fiadd
push
jbe
sbb
mov
add
mov
sub
jle
or
jmp
dec
hlt
dec
push
xor
or
loopne
or
out
push
or
pop
adc
sbb
or
cmp
retf
pop
mov
or
loopne
test
jg
or
pop
xor
ss
xchg
sti
jle
inc
scas
sbb
mov
inc
sub
sbb
sub
mov
(bad)
pop
bound
les
inc
xchg
mov
and
(bad)
push
lods
outs
mov
jae
xchg
jo
dec
inc
imul
(bad)
xor
ja
fcom
pushf
out
cmp
scas
cld
das
xor
push
sbb
push
repnz
cmp
aaa
xor
dec
stos
sub
pop
lea
pop
pop
cwde
mov
in
xor
jl
xor
or
fdivr
pop
call
push
cmp
stc
pop
mov
pushf
jle
mov
cmp
mov
pop
retf
adc
sbb
mov
adc
loop
test
stos
cmp
xchg
jns
pop
in
sub
fmul
mov
mov
jns
jl
stos
add
jp
out
push
sub
aad
popa
stc
test
js
xchg
inc
arpl
mov
or
mov
into
inc
(bad)
cld
ret
sub
add
pop
mov
imul
jbe
jg
xchg
aaa
pop
xchg
inc
xchg
or
int
jmp
mov
movs
push
push
and
div
inc
in
jo
pop
add
shl
jg
int
jne
aad
sub
mov
dec
sbb
push
stos
jae
pop
mov
outs
mov
cs
add
push
outs
cmp
jmp
(bad)
in
mov
dec
ds
mov
imul
pushf
sbb
push
mov
mov
push
jmp
xlat
nop
cmp
sub
xchg
scas
pop
popa
ret
ja
sub
sub
int
jge
stc
inc
push
daa
(bad)
xor
test
cmc
stos
fstp
mov
xchg
out
adc
rcr
cmps
pop
lock
in
mov
xchg
inc
popa
mov
into
(bad)
pop
in
inc
mov
scas
mov
(bad)
int
or
shl
jne
mov
sahf
out
cmp
sub
out
sub
xchg
dec
ret
outs
fnstenv
call
mov
out
int3
stos
mov
mov
addr16
leave
in
into
cli
and
mov
inc
push
push
mov
mov
in
mov
xor
sbb
add
mov
sub
jbe
daa
outs
popf
push
cdq
add
cmp
mov
mov
stos
mov
or
pop
inc
mov
mov
cli
xchg
mov
sbb
pop
mov
lds
das
test
out
fs
dec
sbb
shl
retf
popa
pop
jle
(bad)
xchg
pusha
pushf
out
xor
inc
inc
hlt
stos
mov
outs
pushf
test
sbb
push
mov
call
les
std
test
sbb
das
into
sub
retf
xor
imul
adc
dec
addr16
iret
retf
les
stos
inc
retf
xor
sub
xchg
shl
push
push
or
push
add
jle
and
dec
mov
pop
sbb
dec
mov
inc
cmc
fmul
std
sub
mov
dec
in
retf
icebp
mov
push
or
or
xor
mov
jne
xor
xchg
cwde
mov
daa
movs
js
inc
outs
sub
ret
dec
pop
loop
cs
repnz
jae
(bad)
test
aad
push
mov
popa
xchg
adc
jmp
and
mov
push
pop
movs
les
cmp
adc
and
push
mov
call
adc
mov
ins
cmp
loop
xchg
addr16
fwait
mov
jmp
iret
test
mov
test
popa
and
cmp
stc
mov
lea
dec
sbb
xor
pop
gs
mov
(bad)
daa
mov
xchg
sbb
sbb
xor
popa
cs
je
iret
cs
and
movs
jge
jmp
in
mov
jbe
mov
sub
sbb
(bad)
in
pop
mov
repz
ret
sub
sbb
push
and
mov
out
jo
pop
repnz
xchg
xor
sub
loopne
dec
mov
(bad)
dec
pop
mov
idiv
xor
xor
add
loopne
aaa
iret
and
inc
push
jne
or
cs
and
or
hlt
push
dec
and
and
push
in
xlat
sbb
pushf
(bad)
in
pop
pop
push
jno
mov
adc
mov
sub
movs
push
retf
iret
mov
fst
add
int
fs
add
sbb
jno
xchg
xor
ret
aas
mov
sbb
mov
mov
sub
aas
mov
in
xchg
jo
sub
das
neg
rcl
pop
mov
leave
mov
pop
or
daa
gs
pop
in
push
add
fld
inc
dec
cmc
lds
rcl
push
icebp
das
loopne
sub
push
mov
pop
and
sbb
call
jge
cmp
jbe
dec
scas
fs
icebp
and
lock
dec
sahf
push
jg
int
mov
out
movs
jmp
adc
pushf
jle
adc
pop
das
in
or
mov
loope
rcr
stos
pop
test
leave
lea
add
popf
(bad)
dec
fnstcw
arpl
inc
xor
outs
ror
xchg
mov
in
(bad)
call
push
push
xchg
scas
pop
sti
inc
pop
push
jae
repz
dec
or
mov
xor
ja
jne
shr
pop
inc
mov
xchg
xor
or
mov
mov
add
fdiv
xchg
sbb
cmps
fisubr
out
push
sbb
bswap
out
adc
xchg
clc
or
movs
dec
inc
dec
out
mov
arpl
dec
fcom
cmc
loope
adc
das
clc
out
hlt
les
bnd
mov
in
mov
lea
pop
scas
xchg
dec
mov
sbb
sbb
add
ret
push
adc
mov
adc
movs
mov
mov
ja
cmps
pop
mov
add
pop
mov
icebp
sti
xchg
jbe
pop
xchg
pop
cmp
retf
cli
pusha
jecxz
sbb
and
inc
mov
jno
push
(bad)
or
idiv
and
arpl
das
jbe
ss
push
jp
(bad)
ins
xor
mov
xchg
out
fcomp
xor
dec
lds
push
xor
push
out
mov
xchg
dec
mov
into
mov
nop
and
cmps
(bad)
sbb
test
sub
dec
enter
cmp
mov
sub
inc
or
(bad)
inc
sub
je
pop
outs
dec
mov
mov
imul
mov
push
scas
in
xor
mov
push
inc
leave
jg
fs
dec
movs
dec
jae
sbb
mov
cmc
push
in
xor
sbb
and
sbb
push
adc
and
retf
ds
cmp
push
stc
xchg
aaa
xor
cmp
push
dec
std
aad
dec
cmp
jl
(bad)
jnp
jmp
fwait
ins
lock
adc
dec
popf
lods
adc
and
xchg
stos
pop
mov
mov
pop
mov
rcr
jmp
cmp
push
cld
nop
mov
pop
xchg
mov
div
xchg
lock
inc
pop
mov
jnp
add
nop
std
in
scas
mov
jle
adc
imul
es
mov
fstp
or
jle
int
xchg
cmps
mov
ss
cmp
mov
pop
sub
and
leave
inc
shl
(bad)
cld
adc
icebp
cmps
clc
sbb
aam
mov
es
sar
inc
mov
ficomp
push
pop
or
gs
jb
lds
fwait
sbb
add
sbb
mov
jo
push
dec
out
mov
int3
cmp
test
fist
stc
arpl
xlat
in
adc
imul
fdivr
jne
dec
inc
je
fisttp
out
sbb
mov
sbb
add
cmp
jmp
jae
movs
icebp
in
call
pop
dec
mov
ficomp
mov
int
push
fwait
cwde
push
sbb
aam
scas
dec
bound
mov
in
out
adc
mov
aaa
dec
leave
dec
adc
push
inc
jl
inc
gs
mov
pop
lock
ror
jne
mov
gs
sub
mov
(bad)
mov
aas
aas
retf
dec
sbb
inc
push
ret
push
movs
add
jmp
xchg
scas
ds
inc
inc
jmp
stc
pushf
call
push
loopne
scas
les
aam
dec
xchg
adc
aaa
hlt
fs
inc
inc
cli
lods
add
add
(bad)
(bad)
mov
mov
mov
mov
out
cmp
clc
inc
in
sub
cli
ss
shr
cmp
jmp
inc
mov
dec
lods
out
add
sbb
dec
jmp
test
mov
fwait
dec
ror
push
xchg
add
cdq
test
dec
arpl
dec
icebp
shr
test
cli
xchg
loopne
ror
movs
dec
and
sub
xchg
xor
and
add
add
dec
or
lods
idiv
test
xchg
in
cmp
pop
(bad)
mov
sub
shl
aaa
jo
xor
lods
lods
dec
cld
mov
push
jmp
fucomi
(bad)
sahf
pop
xchg
in
inc
jne
cli
test
(bad)
jge
pop
xor
sub
call
icebp
dec
in
cmc
iret
adc
inc
adc
xor
aam
sub
add
push
je
test
(bad)
(bad)
mov
lods
pop
test
mov
xchg
icebp
push
out
inc
pushf
add
fstp
xor
rcl
xchg
jmp
push
pop
repnz
xor
out
aam
push
lods
ret
add
call
xchg
pop
dec
fsub
dec
mov
xchg
ficomp
ror
and
in
neg
adc
xchg
xor
cmp
mov
ja
std
outs
cs
fwait
movs
into
push
out
add
(bad)
xchg
xor
aam
jg
les
outs
adc
gs
xchg
mov
sub
push
(bad)
lahf
mov
push
sbb
mov
ss
in
dec
push
sti
cwde
and
mov
adc
jns
mov
shl
xchg
jb
cmp
and
in
rcl
sar
sbb
pop
mov
in
add
mov
fucomip
jne
and
nop
jnp
push
cmp
jne
icebp
mov
inc
push
xchg
push
scas
sub
mov
cli
pop
aam
adc
sub
pop
mov
jnp
punpckhbw
xlat
pushf
jno
or
int
mov
ficomp
popa
repz
nop
or
jo
movs
xchg
sbb
int3
iret
adc
jb
or
xchg
pop
adc
in
cmps
xchg
into
push
aas
inc
retf
jmp
dec
jo
int
sbb
movs
pop
stc
mov
mov
xchg
and
(bad)
adc
int
imul
daa
nop
dec
push
and
adc
cmps
test
add
cwde
mov
dec
fld
dec
iret
scas
jl
test
or
mov
xchg
xor
loopne
retf
retf
mov
lsl
ds
push
ret
out
push
jmp
mov
and
push
das
sbb
(bad)
mov
mov
jmp
stos
nop
stos
in
mov
imul
ret
pop
mov
mov
xor
inc
popa
hlt
ds
jo
les
mov
aad
fdivrp
out
push
jmp
test
xchg
mov
test
xor
and
ins
rcl
nop
sbb
popf
or
in
jae
addr16
cwde
out
sub
or
mov
rol
sti
std
fiadd
into
mov
in
sti
test
or
imul
cmp
mov
xchg
dec
sti
in
add
sub
shl
jg
sbb
mov
pmullw
sbb
(bad)
jmp
sbb
jb
out
add
push
lea
and
push
(bad)
int3
push
push
adc
sbb
mov
mov
add
out
lds
adc
dec
cmps
je
push
mov
inc
icebp
hlt
jno
push
out
jmp
jne
popa
mov
aaa
mov
jecxz
add
aad
cmc
mov
xor
mov
stc
aas
mov
pop
pop
mov
mov
ret
and
mov
gs
lock
mov
stos
sub
and
movs
push
or
jle
push
and
aas
jg
pop
sahf
in
das
pop
loopne
jno
inc
pop
mov
in
adc
xchg
loope
(bad)
popf
popa
xchg
movs
ss
sub
add
xchg
out
xor
retf
in
lods
stc
into
icebp
mov
push
dec
or
mov
add
inc
sbb
jl
sbb
mov
pop
jge
cwde
popf
ficom
ffree
lds
aam
xor
lea
je
xor
fild
jnp
scas
mov
stos
and
and
retf
mov
repz
jnp
mov
into
call
adc
jp
xchg
push
je
data16
fwait
and
cmp
dec
and
mov
mov
add
add
(bad)
push
jae
mov
cmps
fstp
mov
add
dec
add
add
in
pusha
loope
push
scas
scas
cmc
div
add
mov
xchg
jnp
cmps
mov
pop
xchg
push
fcmove
jmp
xor
inc
popf
push
mov
adc
aam
mov
pop
push
push
mov
dec
(bad)
jmp
add
cmp
push
fild
js
movs
jne
iret
ffree
mov
sub
pop
jo
pop
out
leave
out
sbb
adc
jns
mov
rcr
in
xchg
ror
and
sbb
ss
popf
pop
mov
test
xor
dec
push
aad
xchg
jne
jo
les
push
mov
inc
daa
repz
jbe
mov
cmps
or
(bad)
int3
int
outs
pop
into
sub
inc
jle
ja
imul
cwde
rcl
inc
adc
call
(bad)
push
imul
pop
xchg
mov
fnstsw
and
sti
and
fist
(bad)
in
push
(bad)
add
cwde
les
add
popf
mov
add
aam
das
cmps
or
cmp
mov
mov
or
(bad)
jae
rcr
es
jl
xchg
adc
mov
fisttp
sti
aas
gs
and
sub
mov
ja
or
arpl
mov
and
fsub
cmp
sub
fucomi
push
icebp
(bad)
push
sbb
push
adc
add
cld
adc
jle
add
xchg
fisttp
leave
adc
mov
nop
cmp
dec
xchg
shr
cli
js
into
jbe
jmp
ret
dec
test
repz
add
fiadd
cmp
sti
mov
fldenv
add
inc
inc
jne
imul
leave
push
sar
mov
adc
call
cmp
sbb
push
push
nop
sub
mov
aas
xchg
(bad)
sbb
clc
pop
sub
neg
icebp
push
retf
in
or
jnp
jp
ds
mov
iret
les
push
push
inc
dec
aam
dec
inc
inc
mov
cmp
inc
popa
or
or
dec
xor
add
push
xlat
mov
fbld
daa
leave
jg
inc
inc
mov
dec
out
jae
sub
shl
or
call
or
inc
push
hlt
pop
mov
pop
add
in
loope
jno
add
cmp
mov
sahf
dec
call
push
jge
fld
neg
xor
jo
or
sbb
sub
pusha
push
adc
into
jb
out
jmp
xchg
sub
icebp
add
clc
pslld
dec
add
xor
push
xor
scas
(bad)
pushf
mov
bound
je
ds
movs
push
inc
test
dec
test
in
push
out
stos
push
adc
xchg
shl
sar
xchg
cmp
xor
ror
adc
jae
call
dec
das
xchg
sbb
mov
(bad)
jnp
js
mov
jmp
jns
push
jae
aas
fcom
imul
iret
mov
out
mov
xor
outs
inc
sar
inc
push
xor
xor
repz
jo
adc
sub
add
dec
inc
mov
adc
push
in
int3
jnp
jl
dec
mov
xor
mov
into
jo
mov
mov
cmp
loope
popa
inc
ins
lds
es
pop
jmp
int3
inc
push
sbb
in
sub
mov
push
arpl
push
and
popa
push
clc
cmc
cmp
lods
jo
mov
cmp
dec
pop
mov
adc
pushf
xchg
dec
ror
cmp
into
xchg
fs
inc
jne
and
push
sbb
enter
add
sti
push
push
scas
push
xchg
xchg
cmp
or
mov
adc
aam
mov
xchg
cmp
ins
xchg
movs
add
jnp
mov
push
icebp
jle
mov
repnz
adc
fisttp
aas
int3
pop
shl
push
(bad)
push
mov
mov
dec
dec
ror
adc
sbb
jle
adc
repnz
dec
sbb
dec
into
inc
jno
push
test
sub
sbb
call
cld
cmps
add
in
mov
das
pop
rcl
or
add
cmp
pop
fld
mov
sbb
pop
add
jmp
popa
sub
sar
fimul
sbb
cs
cmp
das
addr16
mov
in
fadd
lahf
(bad)
jmp
ins
jo
push
retf
adc
add
fbld
daa
in
call
je
ja
mov
imul
ja
cmps
jns
dec
shl
dec
dec
inc
cmp
mov
stos
aaa
mov
bound
add
mov
or
pop
mov
add
call
inc
mov
mov
cdq
sbb
add
and
jl
jge
fidiv
out
mul
push
(bad)
in
hlt
fwait
xlat
jbe
and
nop
in
stos
adc
inc
mov
xor
cmc
mov
lds
and
mov
fwait
mov
dec
add
dec
aam
xor
ins
cld
push
lods
inc
adc
mov
pop
or
adc
(bad)
fisubr
ret
pop
jl
ins
inc
cmp
jge
pop
icebp
sbb
in
dec
add
(bad)
jle
mov
jecxz
sub
(bad)
jl
lds
push
sub
das
sub
fcomp
xor
xchg
cdq
mov
jne
ds
sub
imul
mov
sub
arpl
mov
sbb
(bad)
push
jno
pop
cdq
jmp
jg
sub
lock
push
(bad)
into
xchg
aad
pushf
aam
jl
cmps
out
iret
jp
out
mov
loopne
loop
popa
cmp
repz
cs
lahf
or
xchg
into
cmc
jo
xchg
inc
dec
sub
jle
adc
jae
xor
adc
mov
and
pop
jmp
mul
enter
jmp
adc
js
imul
add
cmc
mov
mov
fsubr
sub
inc
dec
xchg
test
inc
fisttp
jo
sbb
or
fdivr
and
xor
mov
cmp
sbb
add
push
or
repnz
cmp
cmp
sub
repnz
ds
(bad)
ror
mov
in
cmp
call
outs
inc
hlt
movs
pusha
xchg
sti
(bad)
cmp
adc
test
or
std
push
jae
sbb
xchg
scas
mov
loop
xor
add
add
push
adc
(bad)
fidiv
fnstcw
inc
icebp
or
fmul
push
imul
clc
cdq
add
or
retf
xchg
jno
scas
ret
scas
js
cmps
inc
mov
shl
pop
mov
xchg
mov
nop
sti
test
push
cdq
jecxz
test
in
nop
sub
ds
les
dec
daa
sub
push
sub
call
outs
cmp
ins
and
cmc
inc
and
jmp
ret
out
xlat
test
in
dec
xor
jg
cmp
fist
mov
inc
lock
sar
sub
ret
mov
shr
cwde
jmp
cmp
rol
adc
push
or
call
add
ss
(bad)
(bad)
adc
test
pop
dec
add
push
repnz
imul
pop
ins
dec
packuswb
stos
sub
das
js
xor
nop
ficom
std
movs
mov
ds
repz
popa
fistp
adc
dec
repz
push
pop
mov
mov
mov
adc
scas
mov
je
out
out
test
in
ss
xchg
cdq
ins
cdq
movs
cmp
cmp
aad
sub
mov
xchg
sub
sub
call
pop
pop
out
aad
jnp
sub
push
and
fdivr
nop
adc
dec
adc
movs
lods
data16
and
ficomp
ret
retf
mov
loopne
cli
xlat
movs
sub
jne
mov
inc
mov
pop
movs
mov
repnz
sub
xchg
mov
dec
popa
cmp
push
iret
dec
sbb
push
out
or
ja
inc
mov
(bad)
jo
dec
cmps
lods
lock
or
fdivr
mov
mov
adc
add
xor
pop
rcr
cmp
pop
jg
inc
rol
mov
mov
ret
or
dec
enter
pop
xor
(bad)
pop
data16
mov
repnz
mov
repz
loopne
sbb
repnz
jmp
imul
dec
sbb
and
stc
or
xchg
push
mov
sar
(bad)
out
cmp
mov
stc
jmp
ins
xchg
sbb
(bad)
and
jge
add
popa
retf
(bad)
icebp
xchg
in
add
data16
scas
in
jecxz
jmp
adc
aaa
mov
ror
bound
sti
push
push
mov
rcr
adc
stos
test
out
aas
cmp
xor
inc
xchg
(bad)
push
jo
sub
std
aas
jne
(bad)
dec
and
jl
xchg
or
cli
push
ins
mov
or
and
dec
dec
(bad)
dec
or
mov
inc
sub
ret
loope
sbb
fs
fcom
mov
lock
adc
and
mov
aaa
mov
xor
jmp
cld
(bad)
in
dec
and
push
pop
cwde
mov
out
inc
xchg
lods
rcr
push
aad
fwait
xor
sub
xchg
and
inc
jnp
xor
mov
fdivr
sub
icebp
sti
aam
mul
lea
mov
inc
sbb
inc
and
stos
neg
lea
cwde
dec
dec
jb
hlt
bound
bound
sub
xor
sti
cmp
add
jnp
scas
ins
cmp
ror
rcr
push
sub
movs
jmp
mov
nop
cmp
stos
jae
inc
xchg
int
lds
into
aaa
push
fadd
mov
mov
xor
xchg
pop
imul
test
xchg
mov
jg
or
call
mov
push
jp
and
or
mov
(bad)
cmp
nop
xchg
pushf
xchg
popa
adc
push
mov
rcl
imul
aam
fld
sti
sub
jp
mov
fisttp
jmp
mov
movs
lds
sbb
inc
imul
xchg
sub
xor
push
and
mov
mov
mov
lock
cmps
xchg
loopne
sub
retf
std
pop
popa
inc
add
icebp
sahf
data16
cmc
rcl
arpl
cmps
test
or
cwde
outs
out
push
fwait
loop
int3
xor
push
test
fbld
stos
rcl
je
sbb
cwde
stc
icebp
push
leave
mov
aad
or
jmp
retf
pop
ret
aad
mov
dec
idiv
sub
ret
scas
pop
out
in
icebp
and
xchg
pop
test
push
(bad)
push
or
xchg
and
stos
pop
xor
ror
pop
cs
pop
ror
jbe
cmp
xor
and
aas
neg
into
mov
jg
jmp
jg
stos
cwde
or
jmp
and
push
xchg
loopne
xor
sbb
stos
xchg
enter
mov
out
test
std
push
jge
or
ret
ret
xor
inc
cmp
fsub
repz
jo
mov
pop
popf
retf
daa
shl
lea
imul
push
in
xchg
cs
xor
xchg
in
mov
(bad)
sti
or
jecxz
fs
pop
(bad)
mov
jecxz
mov
aaa
cmps
mov
and
push
dec
dec
pop
call
ret
movs
std
fisub
adc
sti
fcom
iret
push
mov
jmp
push
or
fidivr
and
repnz
push
jg
sbb
clc
out
movs
arpl
gs
push
lock
(bad)
stos
sub
mov
adc
sub
stos
and
xchg
jo
sahf
js
sti
cmp
pop
mov
add
xchg
adc
cmp
idiv
cmp
mov
cld
push
pop
mov
mov
(bad)
stc
xor
outs
mov
test
inc
add
mov
sti
cmc
and
inc
repnz
iret
inc
das
(bad)
add
pop
jns
daa
inc
ja
into
mov
jecxz
add
or
pop
jecxz
stos
mov
mov
cmove
mov
jecxz
in
loope
push
jb
mov
mov
call
cli
dec
retf
into
sbb
fdiv
sbb
lahf
retf
mov
and
xchg
call
arpl
mov
fild
shl
repnz
retf
jbe
je
add
push
les
mov
sbb
mov
jnp
addr16
and
pushf
(bad)
cs
push
pusha
into
add
les
in
rcl
mov
xor
clc
jecxz
add
adc
pop
imul
jbe
add
jno
nop
test
dec
int
jmp
data16
jns
ret
adc
adc
ds
pushf
mov
cmp
pop
xor
and
push
call
hlt
sbb
jno
fisubr
xor
push
dec
ss
dec
push
aas
sbb
leave
adc
dec
jp
(bad)
sbb
and
or
push
push
xchg
cmp
(bad)
test
jecxz
retf
jmp
cmp
ret
jo
clc
ds
dec
mov
ret
test
pop
and
sub
xchg
pop
sub
sbb
loop
inc
xchg
add
mov
imul
xlat
stos
push
add
mov
push
mov
lods
popf
jg
shr
jg
adc
std
mov
nop
mov
sbb
(bad)
out
and
xchg
sbb
push
fwait
add
fs
sahf
sbb
out
dec
pop
mov
es
push
enter
fistp
adc
call
pop
(bad)
sub
ficomp
(bad)
jmp
jae
leave
shl
(bad)
pop
pop
les
adc
shr
fist
or
add
in
sbb
pop
fcomip
pcmpgtw
mov
pop
cld
ret
fwait
mov
cmps
xor
add
and
ins
xor
and
jb
scas
stc
cmc
jns
xchg
test
pop
xchg
adc
out
sbb
xchg
or
test
outs
xchg
dec
jecxz
xchg
ret
jmp
jns
mov
adc
jmp
in
inc
les
popa
pushf
aad
psubusw
loope
cwde
jge
outs
loopne
imul
sti
daa
repz
rcr
test
jp
dec
xor
mov
or
mov
repnz
push
fs
pop
push
sbb
jge
adc
or
ins
or
repnz
cmp
xchg
pusha
xchg
inc
inc
lods
push
jge
xchg
mov
jge
outs
retf
jge
inc
call
inc
es
push
fs
scas
stos
cmp
push
dec
int
cdq
xchg
xor
stos
loopne
inc
repnz
mov
(bad)
sub
adc
mov
rcr
adc
repz
xlat
push
or
aaa
int3
ds
repz
dec
jae
out
mov
jno
sub
add
mov
icebp
xchg
pop
cdq
jo
inc
mov
pusha
xor
mov
sahf
mov
daa
dec
test
bound
stos
mov
xor
ror
les
nop
xor
mov
jno
ins
xor
lock
sub
movs
test
jne
jns
gs
cmc
aaa
hlt
mov
int3
outs
push
mov
in
ins
sbb
jle
add
mov
push
sbb
out
popf
sti
inc
add
(bad)
push
pop
test
add
pop
jne
bound
test
retf
or
js
sbb
enter
movs
mov
mov
(bad)
sub
pop
add
aam
xchg
sub
adc
scas
arpl
mov
jl
and
and
inc
enter
dec
retf
xchg
je
sbb
cmc
xchg
sbb
jae
outs
enter
push
sub
in
stos
ret
retf
(bad)
call
ins
inc
and
imul
test
pop
clc
mov
xchg
or
arpl
and
cmp
adc
or
mov
pusha
xor
cmp
mov
aaa
sub
dec
in
dec
out
ret
inc
fstsw
addr16
out
cmp
aas
or
sbb
out
pop
inc
and
cmp
inc
call
or
std
shl
loopne
push
iret
mov
jae
mov
addr16
sbb
mov
push
xchg
push
in
pop
(bad)
loopne
(bad)
sbb
scas
xor
sub
sbb
test
mov
outs
out
push
gs
mov
push
addr16
movs
or
std
xchg
inc
xchg
dec
(bad)
and
xor
out
pop
inc
add
adc
mov
pop
sbb
rcr
xchg
arpl
adc
call
nop
jle
push
xor
mov
inc
and
inc
and
push
xor
int3
jmp
sub
lods
xchg
ds
ficomp
(bad)
shl
xchg
stos
jge
call
sub
retf
mov
pop
push
cdq
imul
or
test
shl
adc
dec
call
bound
inc
dec
(bad)
sti
sbb
retf
int3
jecxz
or
jmp
outs
jns
int
jbe
data16
(bad)
nop
cmps
in
cmp
lea
push
xlat
push
mov
sti
sbb
(bad)
pop
inc
jne
aam
out
jno
jns
and
(bad)
pop
dec
lods
mov
fisttp
in
mov
xor
fmul
aas
icebp
rcl
mov
fs
adc
in
es
mov
jmp
vprotq
xchg
scas
dec
jae
mov
mov
add
pop
aad
lods
pop
lods
mov
cmp
ss
and
push
loopne
(bad)
movs
sbb
cmp
lahf
aam
addr16
cli
mov
xor
dec
stos
cmp
sub
aas
cmps
jmp
(bad)
and
mov
pop
inc
imul
ins
dec
cmc
pop
adc
mov
shl
js
pop
pusha
scas
jl
inc
xor
jbe
adc
jns
add
mov
push
gs
inc
dec
rcl
daa
ror
mov
int3
jecxz
xlat
call
push
cwde
or
or
mov
add
(bad)
jmp
lea
mov
ret
mov
(bad)
inc
daa
scas
xchg
jne
fcom
pop
pop
sbb
sub
adc
das
ins
rol
(bad)
jb
movs
loope
jle
lea
shr
imul
lea
mov
enter
outs
pop
cmps
cmc
ret
add
shl
mov
call
add
xchg
mov
mov
sbb
test
mov
sub
js
sbb
mov
add
push
(bad)
imul
mov
sahf
sub
push
adc
mov
adc
not
jns
lea
pop
out
loop
shl
fst
inc
daa
out
mov
nop
jo
enter
in
gs
cmp
or
std
lea
xchg
inc
sbb
xor
sti
and
cmc
sbb
mov
icebp
inc
mov
cs
loope
and
sub
aas
jmp
cmps
cld
pop
push
jnp
pop
add
push
das
std
in
(bad)
dec
fs
mov
daa
ror
pop
xor
loop
xchg
sti
pop
dec
dec
pop
lock
push
pushf
pop
rcr
xchg
ins
fimul
imul
test
pop
mov
dec
inc
or
jne
(bad)
cli
(bad)
(bad)
pusha
mov
mov
jo
arpl
sbb
pop
fstp
clc
xchg
mov
ins
adc
add
and
mov
adc
add
mov
cwde
sbb
jno
scas
popa
les
add
sbb
adc
rcr
ss
pop
add
cwde
sub
jb
ret
mov
imul
icebp
pop
ins
retf
mov
cld
movs
mov
mov
fwait
mov
or
adc
fidiv
inc
repnz
add
mov
aam
lock
cmc
jle
sub
popa
scas
repz
mov
fist
jl
and
in
jo
mov
xchg
push
dec
(bad)
(bad)
adc
fnstcw
or
jle
int
and
test
(bad)
ja
in
mov
pop
arpl
adc
js
shl
and
mov
into
jno
aas
and
pop
and
mov
jno
jl
les
ret
cmp
mov
ss
inc
adc
adc
lods
inc
adc
xchg
push
add
iret
mov
push
pushf
(bad)
mov
retf
scas
mov
dec
dec
inc
jp
ret
out
sbb
int
shl
retf
jle
cmps
xchg
aam
fisttp
fcmovb
sub
sub
(bad)
or
cmp
(bad)
data16
and
jne
into
xchg
sahf
and
in
call
shr
shl
loopne
test
pop
jmp
adc
sbb
call
mov
sbb
and
repz
punpckhbw
mov
xchg
outs
call
mov
dec
push
cmps
in
jnp
pop
ss
sahf
cli
fild
dec
in
aas
ss
mov
mov
shl
rol
jg
data16
and
cdq
mov
add
repz
icebp
test
adc
push
xlat
inc
imul
cmps
imul
adc
rcr
xchg
jl
int3
adc
aas
sbb
pusha
and
call
mov
push
sti
(bad)
jbe
aam
mov
in
pop
test
pop
pop
inc
test
mov
dec
mov
test
movs
(bad)
test
cdq
nop
sahf
repnz
and
jns
js
push
in
shr
add
cmp
push
sbb
clc
je
dec
lock
jmp
clc
arpl
movs
movs
sub
jmp
movs
sbb
and
and
mov
aaa
iret
mov
fwait
mov
adc
cs
outs
aas
mov
cmc
scas
enter
mov
(bad)
mov
aaa
mov
loop
and
call
push
cmp
xchg
ret
in
outs
or
in
ds
xor
or
repz
imul
fnsave
imul
add
icebp
mov
mov
(bad)
mov
out
xchg
cdq
out
scas
xchg
dec
clc
dec
out
sub
outs
call
pop
pop
sub
mov
jne
out
enter
mov
call
repz
adc
cmp
fcomi
fdivrp
out
adc
sbb
test
ror
dec
jmp
inc
mov
inc
jmp
jnp
adc
fdivp
jge
inc
ja
jae
jne
xchg
jle
mov
mov
and
add
mov
enter
je
pop
mov
sub
cmps
stos
lods
and
fist
push
push
push
mov
xchg
push
shl
push
scas
jne
and
jae
inc
pop
mov
arpl
sbb
fnstenv
xchg
jno
rcl
push
in
fsubr
call
or
sbb
call
(bad)
push
popf
add
mov
icebp
dec
or
and
and
bound
movs
outs
bound
pushf
loop
adc
jg
lods
(bad)
in
leave
movs
mov
inc
loope
mov
ins
inc
sbb
or
test
jp
xchg
inc
or
pusha
daa
jg
movs
mov
test
mov
sub
sbb
mov
fcmovbe
adc
ret
fisttp
dec
rcr
fisttp
jle
jmp
xchg
xchg
sub
call
mov
icebp
in
jb
jnp
pop
stos
popf
push
gs
push
in
and
mov
(bad)
mov
jmp
into
and
adc
aad
(bad)
fld
pop
retf
hlt
xchg
sbb
xor
out
cdq
popf
sub
pop
mov
ins
hlt
div
cli
add
pop
out
pop
sub
int
dec
bound
xor
pop
aam
jne
pop
xchg
pusha
and
mov
xchg
fisttp
lock
arpl
das
or
int
fiadd
(bad)
mov
test
(bad)
mov
jmp
loope
mov
mov
cmp
mov
ins
repz
fs
jne
pop
(bad)
movs
jno
push
bound
mov
xor
(bad)
jbe
cli
stos
adc
xor
jmp
lahf
xlat
push
aad
lahf
pop
sti
nop
push
sub
div
mov
mov
adc
xchg
xor
scas
cli
idiv
and
mov
ins
xchg
outs
pop
rol
scas
inc
and
imul
ja
je
repnz
mov
sub
(bad)
mov
xchg
icebp
cmp
cmp
xchg
and
jl
adc
inc
stos
stc
div
fisubr
rcr
pop
mov
jae
test
ret
repz
pop
lds
xor
shl
ja
sbb
pop
cmps
jno
mov
outs
jmp
xchg
jp
sub
pop
dec
inc
mov
mov
hlt
and
mov
arpl
(bad)
sbb
das
mov
and
add
xchg
rol
mov
inc
test
mov
mov
adc
inc
xor
and
bound
mov
fwait
push
in
(bad)
push
jns
addr16
stos
jp
sti
add
rol
pushf
ret
mov
pop
movs
in
mov
dec
xchg
sbb
push
inc
jl
shl
stc
mov
cs
push
push
inc
ror
pop
add
add
cmp
push
xchg
int3
jmp
mov
lds
mov
xchg
pop
mov
lods
scas
out
jecxz
adc
jae
add
popa
lods
mov
lods
push
jmp
mov
dec
les
mov
out
movs
mov
sub
lds
and
push
(bad)
mov
js
push
das
test
and
jecxz
jle
stos
mov
retf
pop
ret
jne
xor
xor
inc
lea
and
pop
imul
ja
rol
xchg
nop
add
add
and
pop
push
push
and
test
pop
pop
call
jp
imul
xchg
cmp
push
das
outs
clc
push
(bad)
push
mov
adc
or
jbe
pushf
movs
pop
cmps
loope
jmp
imul
fwait
push
or
dec
mov
xor
jae
adc
mov
mov
int3
call
or
ss
pop
fdiv
(bad)
adc
fiadd
add
push
int3
aam
xchg
jno
pop
test
lea
shl
das
pop
rcl
dec
(bad)
js
jne
cmps
dec
data16
(bad)
mov
pop
data16
adc
dec
mov
cwde
adc
sahf
sbb
loope
mov
jle
push
or
mov
or
pop
outs
and
pop
loope
xlat
inc
xchg
adc
add
and
push
hlt
ret
inc
inc
sti
mov
push
out
pop
jge
and
xchg
add
adc
mov
out
pop
aas
lds
je
popa
sbb
mov
pushf
jae
jmp
repz
mov
dec
push
outs
inc
adc
leave
xor
jb
out
fdivr
xor
xor
sbb
jns
outs
retf
cmp
mov
cmp
(bad)
push
popf
jo
or
pop
mov
sbb
xchg
mov
pop
jp
outs
dec
sbb
and
jmp
ret
shl
sub
mov
mov
sti
adc
in
mov
inc
push
ror
mov
popa
call
pop
into
add
adc
mov
inc
cmp
retf
lods
hlt
jp
sub
add
pop
test
xor
scas
or
add
jnp
mov
(bad)
ficomp
fwait
mov
xor
jb
mov
or
(bad)
push
inc
xchg
lds
sahf
ror
(bad)
ds
cmp
add
mov
pop
mov
in
icebp
or
ret
icebp
aas
shr
mov
sbb
inc
cmc
or
push
and
mov
xchg
push
data16
rcl
daa
pop
and
xchg
out
outs
repz
push
outs
inc
jle
add
call
adc
pop
add
les
ds
mov
pushf
or
push
push
xchg
ins
ret
sbb
movs
dec
cwde
das
arpl
shl
test
aaa
cmc
mov
outs
ret
sar
xchg
in
mov
fistp
push
adc
lods
mov
jg
(bad)
int
sahf
push
data16
loopne
in
adc
push
dec
fstp
lods
test
rcr
mov
sub
inc
popa
mov
and
pop
sbb
and
(bad)
mov
pop
sub
ret
dec
cmp
rcr
cmp
ret
retf
inc
dec
add
push
cmps
mov
mov
cmp
imul
ins
push
movs
and
dec
dec
or
add
outs
pop
les
scas
push
cmps
pop
mov
int3
dec
mov
add
jmp
cld
cmp
js
lods
in
test
jmp
dec
push
fdiv
mov
or
leave
imul
pop
shr
push
into
adc
push
sbb
nop
retf
clc
inc
sub
movs
pop
mov
les
js
pop
lea
fdivrp
cmp
iret
call
sbb
fwait
lods
adc
das
xchg
jmp
sar
sbb
jecxz
iret
mov
pop
adc
(bad)
push
push
inc
lods
and
pop
xchg
cmps
sbb
(bad)
xchg
daa
movs
pop
xor
jo
cmp
mov
mov
mov
xor
ins
leave
mov
mov
fadd
cld
into
les
loopne
push
add
inc
xchg
xor
or
adc
mov
ss
and
loopne
cmp
nop
dec
pop
arpl
xchg
mov
loopne
mov
cmp
jmp
sar
inc
daa
aas
cdq
xchg
mov
dec
or
push
ds
rcr
adc
aad
movs
jl
int3
cmps
xor
mov
jnp
cld
jmp
dec
pop
cwde
les
push
inc
pop
jl
mov
and
rcr
(bad)
in
aas
movs
imul
mov
xor
daa
and
in
ss
sahf
push
xchg
push
popa
inc
or
rcr
push
loopne
inc
inc
jle
lahf
arpl
aad
push
sub
jb
adc
fistp
in
fstp
into
xlat
cmp
jmp
jae
js
mov
mov
cmp
sti
xchg
push
call
mov
pop
push
pop
mov
retf
scas
xor
or
mov
and
(bad)
gs
dec
xor
test
scas
dec
shl
xchg
adc
fnstcw
aad
repz
cmp
push
pop
loope
mov
data16
sub
nop
in
pop
mov
nop
imul
cmp
aas
jmp
clc
and
shl
(bad)
xchg
leave
jp
cmp
cmps
cmp
aas
cmp
cwde
ret
push
test
movs
or
jne
in
adc
mov
imul
rol
test
dec
xor
(bad)
xlat
test
repnz
in
adc
xchg
test
or
mov
pop
xchg
mov
fdiv
jmp
dec
dec
add
mov
ror
retf
xchg
test
mov
pusha
add
dec
mov
test
adc
(bad)
out
int
dec
jge
stos
add
out
clc
repnz
mov
test
sbb
and
add
jae
or
jmp
ja
pop
push
pop
mov
xor
std
data16
pop
sub
and
jg
mov
and
xchg
add
stc
jns
xor
ud1
dec
(bad)
mov
sbb
or
pop
adc
and
(bad)
pop
mov
and
cdq
mov
sbb
dec
jle
dec
or
fcmovnbe
cmp
fisub
sub
out
out
pop
xor
xor
inc
shr
fbld
jge
mov
dec
jecxz
out
mov
add
sti
sub
jns
jge
xchg
cmps
mov
clc
retf
bound
loope
jmp
cld
movs
mov
inc
loop
mov
xor
retf
repnz
nop
out
sti
loope
in
or
hlt
push
sbb
ret
dec
ja
shr
cmp
pusha
pop
jmp
add
pop
imul
(bad)
repz
lock
sub
mov
add
(bad)
dec
inc
mov
jp
jbe
pop
stc
push
cli
inc
out
cmp
fcmovb
xor
pop
sbb
xor
mov
mov
leave
add
mov
mov
xchg
lea
or
mov
scas
inc
mov
loopne
ret
jecxz
push
cmp
test
add
loopne
sub
ins
mov
gs
dec
cmp
mov
add
cmp
retf
pop
aaa
fwait
(bad)
and
lea
jl
or
xchg
mov
retf
push
sbb
sbb
cmc
(bad)
mov
mov
cmc
cmps
and
scas
xlat
aad
fmul
push
test
out
sub
aaa
icebp
add
js
in
repnz
mov
out
xor
cmp
fild
add
sahf
stos
dec
ret
addr16
(bad)
xor
jl
in
sbb
arpl
mov
loope
mov
mov
mov
sbb
fwait
scas
ja
pop
push
mov
push
sbb
push
pop
lea
inc
rcr
addr16
nop
rcr
sub
mov
std
xor
aam
jne
mov
fstp
fdivr
ins
pop
test
sbb
sub
pusha
loope
jo
or
leave
jg
jae
jne
imul
test
mov
push
dec
sub
cmps
sbb
xchg
sahf
mov
les
xchg
push
outs
jne
pop
pushf
outs
stos
inc
ret
leave
mov
jecxz
inc
sub
jb
cmp
cmp
rcl
cli
push
dec
xchg
push
in
mov
aaa
test
test
and
jo
pop
retf
in
movs
in
jb
inc
lds
and
xor
and
daa
cmps
out
adc
aas
adc
lock
stos
aaa
fcmovbe
and
or
lods
mov
push
cli
sbb
pusha
lods
movs
xchg
mov
xor
jl
leave
sbb
fistp
adc
test
mov
mov
add
inc
push
add
xor
call
push
sub
and
dec
(bad)
jge
mov
push
(bad)
cmc
fs
cld
js
mov
inc
sbb
adc
aas
call
outs
mov
pop
scas
pop
int
outs
jbe
xchg
mov
jae
dec
movs
inc
pop
das
outs
xor
stos
xchg
test
test
shr
int3
sbb
int3
push
mov
mov
xor
mov
mov
cmp
cld
adc
(bad)
in
mov
cwde
jo
xor
cwde
xlat
or
sub
sbb
scas
mov
call
test
jl
or
ret
mov
sbb
and
xchg
cs
or
mov
pusha
int3
fld
pop
lahf
mov
sub
and
pop
mov
inc
cmps
sub
cmp
xchg
mov
lods
inc
xor
mov
scas
shr
sbb
test
jmp
popf
test
mov
test
fwait
inc
ror
stos
dec
repnz
lods
jecxz
inc
je
mov
inc
jae
iret
loop
dec
popf
pop
mov
sub
shr
sub
xor
loopne
adc
int3
xor
ins
(bad)
leave
or
lods
inc
cmp
fcom
xor
xchg
xchg
inc
into
ror
mov
call
ins
lods
pop
push
and
call
es
cmp
out
dec
jno
pop
xlat
pusha
not
mov
or
out
mov
cmp
popa
loope
scas
ins
lds
sbb
push
xchg
les
hlt
in
adc
xchg
mov
push
daa
sub
cmp
jecxz
inc
cmp
mov
sbb
loope
cmp
icebp
retf
leave
ror
test
mov
lock
sbb
sbb
sbb
outs
mov
xor
addr16
retf
cmp
popf
xchg
es
xchg
lods
jl
pop
mov
jno
pushf
fsubr
dec
(bad)
mov
bound
(bad)
sub
stos
dec
jmp
push
fdivp
mov
ret
pop
pop
and
and
fwait
xor
ins
nop
mov
push
mov
sbb
lds
ss
pop
adc
sbb
xor
cld
mov
in
loope
xabort
cmp
adc
sbb
adc
adc
sub
sti
ins
sbb
pusha
mov
scas
push
(bad)
add
stos
ss
add
and
mov
jmp
sub
push
enter
push
adc
ret
pusha
mov
cmc
clc
cmps
mov
(bad)
pop
jl
sub
mov
scas
jns
iret
mov
jle
aad
les
xchg
pusha
push
xor
pcmpgtw
shl
xchg
xchg
scas
lods
sbb
mov
adc
(bad)
ficom
push
mov
mov
test
fs
and
bound
fs
mov
ins
adc
jp
push
mov
cmp
jnp
add
jecxz
jmp
cmp
mov
bound
sar
fwait
jmp
cmp
xor
push
mov
xor
cmp
adc
ret
xlat
jle
repnz
mov
in
and
xor
in
pop
movs
fnstenv
adc
(bad)
dec
mov
or
(bad)
jmp
pop
push
adc
fistp
pop
push
mov
cli
stc
ins
jle
xchg
push
mov
jle
(bad)
mov
push
stos
mov
mov
add
add
mov
push
jbe
stos
inc
gs
mov
bound
fistp
fld
stos
jle
inc
mov
int
dec
gs
jb
mov
adc
or
scas
pop
dec
daa
cmp
and
neg
mov
in
xor
scas
push
inc
push
push
jne
rol
idiv
cmp
out
mov
mov
ds
pop
push
sbb
and
scas
movs
scas
popa
xchg
xchg
inc
or
das
or
jmp
js
push
mov
rol
push
add
mov
inc
xchg
loope
cmp
std
cmps
hlt
pop
lea
test
sbb
aaa
loop
movs
cmp
sbb
push
bound
std
fnstsw
imul
icebp
ret
cmc
sahf
add
and
mov
std
jbe
popa
div
xor
or
cdq
jl
or
mov
jne
pop
(bad)
mov
push
xlat
les
sub
xchg
movs
xor
out
sbb
dec
ret
rcl
data16
or
mov
push
push
lods
mov
je
mov
xor
sub
and
int
dec
mov
fdiv
movs
and
xchg
out
(bad)
push
dec
mov
rol
daa
nop
sub
scas
int
and
inc
retf
add
out
pop
out
jl
test
sub
mov
cmps
jle
dec
push
or
imul
sub
pop
pop
add
inc
out
outs
popf
pop
sbb
xor
test
stos
shl
mov
jmp
sub
mov
dec
pop
outs
push
mov
popa
fild
call
loop
(bad)
fstp
mov
std
inc
pop
arpl
imul
sahf
or
jmp
dec
sbb
ds
pop
(bad)
ret
xor
pusha
cmp
and
fbstp
cmc
xor
fcom
lods
bound
sahf
loopne
imul
sub
push
test
add
jmp
iret
add
jp
into
sbb
iret
cmp
jns
sahf
je
sti
mov
push
test
push
push
inc
jmp
sbb
int
imul
xor
xchg
ret
aaa
sub
(bad)
mov
mov
mov
mov
mov
and
pop
movs
jbe
dec
fild
scas
jmp
mov
pop
mov
pop
cdq
mov
pop
inc
mov
xchg
or
pop
les
out
aad
mov
lods
sbb
jae
lea
out
jg
les
mov
in
fdiv
gs
and
mov
(bad)
mov
pop
ror
ins
push
shl
jns
daa
fisubr
out
js
xchg
mov
mov
cmp
push
outs
xor
popf
add
xor
cmps
sbb
sbb
mov
mov
bound
stos
add
xor
and
(bad)
lds
shl
inc
outs
icebp
sahf
ds
cmps
mov
ror
(bad)
mov
jecxz
cwde
push
sbb
push
ins
cs
jne
xlat
je
and
stos
gs
inc
or
js
cmps
xor
sub
lods
loop
pop
pop
dec
xchg
fild
sub
push
fs
hlt
cmp
(bad)
daa
fnstenv
stos
(bad)
push
adc
add
mov
out
sub
ins
mov
pushf
inc
or
(bad)
movzx
out
sub
xor
xchg
cld
dec
lods
and
sti
mov
lods
jb
gs
sbb
es
inc
mov
xor
push
sbb
aam
(bad)
jecxz
imul
dec
cdq
jp
or
jno
(bad)
jnp
(bad)
leave
les
and
mov
mov
js
mov
loop
xchg
clc
sbb
push
push
mov
ins
jmp
mov
mov
inc
cmp
push
dec
ror
in
push
arpl
mov
adc
call
js
lods
cmp
push
adc
dec
xor
inc
pop
test
inc
pop
jae
jmp
sub
push
push
push
push
mov
test
mov
mov
adc
adc
call
fadd
daa
and
mov
aas
add
dec
jns
jg
(bad)
leave
loopne
jle
cmp
inc
js
adc
or
jns
shl
mov
sbb
shl
daa
inc
jmp
aad
jle
cmp
sti
(bad)
cdq
cmps
std
stos
jnp
push
dec
and
test
cmp
push
sbb
mov
and
test
aad
jne
sub
out
arpl
hlt
icebp
dec
das
and
sbb
das
cmp
fist
in
das
push
sbb
xchg
xor
xchg
mov
adc
shr
les
stc
movs
div
pop
loope
or
inc
inc
(bad)
imul
dec
ror
daa
xor
and
sub
push
mov
out
in
(bad)
fnclex
push
push
and
repnz
outs
mov
pusha
call
gs
cmps
lods
popf
push
xchg
inc
retf
jns
jbe
xlat
or
push
pop
iret
push
jo
stos
call
test
add
test
jno
pushf
xor
shr
pop
jle
cmp
shr
data16
and
pusha
cmpps
xchg
pop
pusha
in
int
mov
fld
ins
popf
xchg
call
je
(bad)
test
(bad)
xlat
(bad)
pop
(bad)
inc
mov
fidivr
in
mov
sbb
(bad)
jmp
push
div
test
rep
(bad)
ror
mov
mov
add
pop
cwde
jmp
hlt
enter
jo
ja
push
cmp
sub
data16
call
xor
cmps
rol
call
lahf
cdq
pop
mov
sub
jge
pusha
adc
daa
xlat
pop
arpl
(bad)
std
or
xor
push
inc
(bad)
ja
and
add
nop
or
mov
add
push
cmp
retf
das
mov
into
mov
xor
inc
dec
ja
repz
mov
inc
repz
pop
(bad)
sub
jns
loopne
dec
mov
jne
mov
(bad)
fnsave
inc
push
sub
clc
popa
bnd
aas
cs
xor
and
add
mov
fadd
push
ins
cwde
outs
iret
stc
fcmove
adc
scas
adc
fistp
mov
or
inc
ds
xchg
jno
jnp
sbb
fst
xchg
pop
lds
cmp
sub
shl
xchg
mov
sbb
sub
push
cmp
shl
mov
add
fs
sub
adc
push
dec
push
cmp
mov
cli
cmps
into
mov
stos
pop
or
leave
es
(bad)
cmp
scas
call
test
sub
adc
dec
call
mov
pop
push
dec
push
iret
xchg
jnp
adc
ds
mov
(bad)
mov
pop
jp
or
aas
adc
jmp
cmps
push
xor
pop
mov
pop
ret
add
xchg
out
dec
pop
retf
sub
dec
mov
pop
dec
dec
mov
or
xchg
mov
into
push
out
mov
and
add
outs
stos
push
or
shl
fwait
cmps
mov
jnp
jmp
cmps
leave
cli
sub
xor
lods
add
cmp
repz
mov
xchg
test
shl
push
xchg
leave
cdq
data16
dec
xchg
lds
inc
and
jb
inc
ret
cmc
sub
inc
sar
cdq
add
sub
inc
jae
cmp
jo
sub
imul
and
mov
out
mov
xor
push
mov
sub
cli
adc
(bad)
or
xchg
jb
push
(bad)
jmp
ret
sbb
sti
mov
cmc
adc
cwde
je
dec
adc
popf
dec
ja
xchg
xor
les
test
jecxz
les
or
idiv
adc
bound
sahf
retf
pushf
add
test
sub
scas
shld
mov
popa
xor
xchg
mov
sbb
scas
das
popf
retf
xchg
test
xchg
jno
rcr
sti
adc
push
push
inc
add
cwde
add
(bad)
xor
(bad)
or
xor
aam
daa
pop
cmp
div
cmp
sbb
inc
xchg
mov
push
push
jb
(bad)
jmp
or
lds
mov
movs
loop
sti
sahf
jo
sbb
in
pop
cli
jns
cmp
sub
loope
movs
jecxz
call
or
pop
mov
add
add
leave
adc
shl
addr16
(bad)
push
in
push
mov
push
xor
das
test
add
addr16
cmp
mov
push
in
imul
mov
arpl
sbb
jb
sub
cdq
test
push
mov
test
add
idiv
push
jmp
xchg
cli
bound
push
mov
pop
lods
loop
jno
aas
ins
add
pop
imul
jmp
cmp
mov
in
clc
(bad)
adc
dec
in
cmp
xchg
out
pop
imul
mov
dec
cs
call
mov
xor
jmp
stos
lock
out
pusha
xor
add
scas
fcomp
xchg
fxch
pop
and
out
xchg
fist
fstp
push
mov
popa
pop
pop
jle
cmp
mov
or
enter
rcl
add
push
push
xor
push
inc
outs
fst
jb
int3
nop
cmp
dec
add
xor
shr
pop
ds
mov
loopne
stc
cli
stc
pop
movs
popf
push
inc
(bad)
out
cs
or
iret
xor
pusha
mov
ret
sbb
outs
clc
mov
fsubr
call
imul
cmovae
int3
mov
scas
dec
adc
cmp
push
out
inc
rep
ds
out
jb
pop
inc
mov
xor
int
mov
mov
mov
movs
add
mov
and
ds
sahf
fwait
stc
mov
test
pop
ss
mov
push
mov
and
mov
repnz
or
js
push
jo
or
lock
push
add
cs
inc
dec
hlt
js
jno
add
xchg
int
imul
(bad)
push
in
sub
fisttp
push
inc
adc
or
add
retf
ja
pop
std
or
inc
inc
or
pushw
dec
fldcw
jg
lds
cmc
repz
or
xchg
fs
(bad)
add
inc
frstor
cmp
pusha
outs
dec
inc
or
and
pusha
sbb
push
imul
cwde
fist
push
fimul
push
call
adc
arpl
cwde
sub
sbb
nop
mov
test
mov
popf
dec
inc
or
rcr
hlt
dec
rcl
adc
mov
fcmovnb
adc
dec
lods
mov
pop
pop
mov
into
jl
inc
es
(bad)
lods
mov
or
xchg
dec
loop
es
(bad)
jo
push
and
cmps
aaa
adc
scas
lahf
sbb
cdq
dec
mov
push
push
dec
outs
inc
sti
aaa
xchg
fs
and
and
leave
xchg
inc
pushf
lds
or
mov
imul
mov
jecxz
jmp
test
js
retf
enter
iret
push
fild
cs
mov
xor
xchg
sub
ins
enter
pop
inc
mov
into
fst
outs
aam
xchg
and
js
out
pop
dec
sbb
mov
ret
sbb
sahf
cli
movs
ror
dec
shl
stos
jnp
fwait
inc
movs
cld
mov
repnz
jmp
mov
in
in
lods
test
test
adc
push
fs
int3
pop
sub
dec
les
inc
(bad)
in
je
loopne
aad
fnsave
cmp
(bad)
cwde
daa
das
ins
hlt
clc
imul
int3
adc
rol
ins
mov
daa
lods
jmp
xchg
sub
lahf
retf
iret
and
jns
sub
inc
(bad)
rcl
sub
ret
jmp
jg
inc
push
mov
mov
in
retf
das
out
aaa
sbb
pop
clc
mov
adc
mov
outs
mov
dec
mov
mov
movs
stc
les
adc
sub
je
rol
and
movs
loop
lea
mov
pop
daa
and
jg
jbe
xor
pop
or
movs
and
ds
fidivr
fistp
pop
int3
je
in
sbb
jo
push
add
xchg
dec
icebp
ds
push
jnp
(bad)
jl
or
sub
pop
cmps
pop
(bad)
dec
das
hlt
xchg
inc
mov
add
mov
sahf
pop
es
and
and
cmp
cs
test
xor
popf
pop
adc
push
sbb
call
jo
callw
repnz
add
adc
es
push
mov
sub
mov
cwde
loop
mov
ds
sub
jnp
mov
lods
sahf
mov
jp
shr
addr16
or
arpl
fincstp
out
xchg
jbe
test
sbb
jle
(bad)
mov
mov
sti
pop
and
push
jnp
mov
push
mov
inc
js
or
sub
and
dec
push
dec
das
into
sar
mov
sub
and
iret
adc
push
xlat
add
fs
jno
or
and
jmp
pusha
pop
xchg
fs
pop
inc
mov
sahf
sbb
inc
jmp
into
clc
ss
mov
mov
repnz
inc
sbb
nop
ficom
fstp
stos
inc
sub
or
xlat
iret
sub
add
retf
rol
pop
pop
push
push
test
out
shr
xchg
jo
(bad)
sub
inc
ja
pop
lods
enter
aas
sub
sahf
mov
add
dec
(bad)
out
inc
mov
fisttp
js
add
xor
push
add
jmp
loope
sti
dec
imul
mov
test
scas
lods
push
sbb
or
mov
daa
fdiv
dec
popf
adc
dec
inc
jle
fs
mov
fild
sub
jnp
jns
adc
in
test
dec
aaa
mov
jns
jecxz
xchg
out
sti
sar
(bad)
sbb
push
pop
pop
arpl
add
sbb
aam
mov
fisttp
(bad)
push
push
pop
pop
xchg
dec
aam
lock
lods
mov
jns
mov
push
dec
jmp
or
cmps
push
mov
jns
xor
mov
or
mov
loope
fstp
mov
push
cdq
mov
ret
popa
scas
cmp
pop
out
sub
inc
inc
xchg
in
jle
das
ja
cmp
inc
mov
aam
daa
jns
jge
shl
jne
and
pop
fild
and
xchg
repz
aas
mov
paddw
int
or
inc
mov
adc
aas
faddp
movnti
push
sub
xchg
shl
or
test
in
ss
inc
in
inc
mov
out
mov
out
mov
adc
and
xor
cmps
pop
pusha
sbb
mov
retf
hlt
push
inc
mov
ja
jne
retf
jecxz
pop
outs
add
jmp
push
inc
cmp
dec
dec
stos
jmp
out
mov
or
(bad)
push
outs
and
retf
sbb
repnz
or
add
xor
xchg
mov
jmp
sar
push
xor
cmp
ins
in
bound
(bad)
out
(bad)
inc
and
sbb
cmp
jp
mov
movs
jno
stc
ins
sbb
shr
std
cmp
mov
or
pop
nop
lahf
inc
sahf
mov
cwde
xor
pop
mov
mov
mov
jne
pop
mul
ret
mov
dec
add
mov
or
mov
rcr
leave
inc
popf
push
jge
sbb
loop
out
cwde
or
fadd
cmp
mov
push
xor
xor
iret
cmp
rol
addr16
repnz
adc
and
sub
popf
lods
and
jb
xor
and
sub
scas
cmp
jg
stos
xor
lahf
add
jae
sbb
push
out
fbstp
pop
xchg
loopne
fcomp
push
loop
and
xchg
cmps
adc
sub
jne
mov
mov
inc
jmp
mov
ds
(bad)
int3
mov
jge
adc
add
push
jo
mov
sub
mov
int3
fisub
fldenv
enter
sub
loopne
test
dec
mov
sti
daa
adc
push
dec
out
and
movsx
inc
mov
mov
es
mov
and
addr16
mov
mov
sub
mov
adc
sti
les
mov
mov
pop
dec
leave
or
dec
adc
lds
ret
cmp
jns
or
cli
add
int
sub
dec
popa
das
mov
jb
xchg
jb
(bad)
aaa
pushf
dec
pop
mov
inc
cmp
pop
mov
retf
lahf
test
and
mov
xchg
push
stc
or
pop
fdiv
addr16
out
in
shl
adc
jo
stc
ins
push
cmp
push
cmp
scas
lock
push
pop
adc
loopne
ins
inc
sbb
pop
mov
xor
pop
mov
xchg
push
cmp
retf
mov
jecxz
(bad)
dec
xchg
push
pop
rol
aad
dec
(bad)
lock
xchg
daa
xchg
inc
nop
push
mov
xor
cmp
jae
jge
mov
sbb
or
jg
pop
push
sub
dec
repnz
ins
movs
xlat
lods
inc
sub
bound
mov
mov
xchg
mov
lock
cmp
sbb
mov
dec
pop
add
mov
mov
mov
sbb
cmp
arpl
stos
xchg
push
(bad)
cdq
cmc
lea
test
lea
add
sub
aad
popf
out
pop
xchg
cmp
pop
inc
mov
loop
or
fwait
mov
pop
dec
(bad)
jle
mov
dec
movs
push
push
add
cmc
jg
mov
movs
nop
mov
sbb
in
mov
(bad)
cmc
ins
or
sbb
cmp
popa
imul
(bad)
shl
xor
fdivr
push
sbb
fldenv
or
sub
ja
cdq
cli
jne
cmps
movs
or
mov
sub
pushf
pop
xor
sub
test
das
push
jmp
out
xchg
jae
mov
(bad)
mov
push
and
mov
data16
(bad)
mov
jns
push
stos
sbb
jne
xchg
idiv
repz
ja
fisttp
push
mov
jne
lock
jg
bound
jmp
loopne
retf
popa
pop
lods
xchg
lahf
mov
xchg
xor
mov
inc
mov
jmp
lods
mov
verr
sub
mov
mov
scas
xor
push
add
add
mov
ins
xchg
push
fnsave
push
and
enter
sbb
in
dec
in
pop
push
test
push
nop
xchg
xor
adc
jle
jmp
jae
(bad)
pushf
pop
add
aaa
popf
addr16
cmp
movs
out
mov
test
cdq
push
jp
out
mov
ja
loop
test
out
test
popa
jecxz
lahf
jp
adc
imul
(bad)
push
xlat
mov
iret
push
dec
sub
sub
push
mov
loope
push
xchg
mov
ins
sub
nop
leave
fucomi
cmp
popa
loop
and
adc
lds
add
xchg
xchg
sbb
xchg
mov
retf
xchg
pop
mov
mov
jo
fsubr
inc
sbb
sbb
test
cmp
outs
ss
and
ins
or
cli
es
sub
jae
mov
hlt
xor
and
add
popa
pop
add
mov
cmp
or
js
outs
std
pop
mov
les
nop
xor
mov
lahf
adc
sub
adc
stos
mov
push
dec
mov
(bad)
mov
fld
pop
or
sbb
mov
cmp
push
sbb
push
push
fmul
xchg
xor
pop
fst
inc
adc
cmc
inc
idiv
cmps
nop
xchg
retf
push
fwait
mov
add
or
sbb
fmul
dec
mov
pand
pop
sahf
sub
aas
jb
sub
push
inc
loopne
hlt
in
xor
push
(bad)
mov
arpl
and
mov
jle
(bad)
lock
jns
call
scas
sub
sub
push
add
jno
stos
xchg
imul
push
aam
vmread
imul
inc
mov
(bad)
mov
mov
dec
fld
dec
out
mov
jno
(bad)
sar
js
cdq
xlat
adc
ret
dec
mov
and
xor
mov
cmp
pop
mov
inc
jbe
cmp
inc
push
pop
test
pop
jmp
(bad)
repnz
repz
aaa
leave
loop
dec
xor
call
xchg
jg
add
mov
aaa
scas
lds
(bad)
call
popf
adc
pop
sar
and
out
pop
jnp
add
jb
aas
call
push
adc
xchg
out
mov
bound
cmp
inc
sub
jns
lea
test
mov
not
mov
mov
lahf
je
popa
push
and
repnz
lahf
inc
movs
fst
pop
outs
and
cmp
add
outs
test
lods
xor
xlat
push
mul
adc
adc
dec
xchg
movs
ror
xchg
push
fadd
dec
test
stos
das
repz
imul
xchg
mov
inc
pop
cwde
lods
(bad)
pop
cmp
jnp
xlat
les
shl
movs
mov
mov
push
pop
add
xor
xchg
or
out
push
jge
movs
push
ret
aad
jecxz
call
xlat
rcr
xchg
ror
adc
out
xchg
mov
inc
and
int3
(bad)
cmp
in
clc
adc
jmp
lods
popf
pop
cmp
push
mov
dec
xor
mov
aam
fs
inc
mov
int3
addr16
push
int3
scas
mov
jb
mov
xor
cmp
repnz
das
and
js
repz
xchg
and
cmps
or
retf
cld
(bad)
aas
push
dec
outs
adc
lea
xchg
les
out
push
adc
adc
sahf
enter
jmp
ficom
repz
retf
sub
vcvtsi2sd
dec
cmp
mov
jl
cmp
movs
cmp
inc
enter
push
or
shl
adc
clc
jo
sti
lods
or
fdiv
sub
xchg
into
fstp
out
sub
jmp
popa
xchg
fnsave
cmp
mov
pop
ds
xchg
and
arpl
das
ss
cmp
push
pop
jecxz
js
in
loop
ret
mov
push
pop
jp
(bad)
jbe
pop
pop
popa
jle
sub
mov
rcl
jno
movs
repnz
xchg
gs
mov
lods
jge
sbb
sbb
pop
or
mov
jp
pop
in
(bad)
into
mov
or
(bad)
pop
pop
add
mov
pop
xchg
sbb
data16
in
sar
fild
or
xchg
cmp
push
push
mov
xor
sbb
dec
xor
pop
mov
out
or
mov
mov
popa
sub
mov
xlat
jbe
inc
ins
sub
sub
int
lods
xchg
inc
mov
test
imul
cmps
adc
dec
call
adc
add
call
jmp
fcomp
adc
add
sub
push
mov
int
push
ja
in
sub
xchg
jp
lock
(bad)
(bad)
in
movs
aas
pop
push
mov
mov
popa
sub
neg
dec
ret
icebp
pop
stc
xchg
imul
shl
(bad)
mov
cli
add
adc
icebp
mov
retf
xchg
sub
popf
or
jno
dec
scas
int
xor
idiv
mov
popf
pop
stos
mov
rol
arpl
pop
xlat
fwait
xchg
(bad)
aam
mov
les
mov
cwde
and
sbb
daa
xor
in
nop
out
push
lea
sbb
inc
mov
lea
jo
ret
dec
add
(bad)
iret
icebp
lahf
sub
mov
aas
jno
cmc
lahf
jmp
ror
ficom
jecxz
add
mov
out
fdiv
adc
cmp
dec
pusha
outs
das
sbb
mov
jp
sbb
sahf
retf
or
dec
sub
add
jmp
rcl
dec
jnp
pop
mov
inc
xor
inc
mov
push
dec
daa
cmps
ins
dec
call
pop
sub
ret
test
stc
pop
lahf
pop
fwait
cmps
jge
xor
sub
mov
stos
sub
lahf
fild
leave
in
jae
addr16
popa
sbb
popa
xor
adc
add
lock
sahf
dec
dec
out
outs
ror
xor
dec
imul
push
ds
mov
or
inc
and
test
pop
push
jl
or
fnstenv
fldl2t
addr16
lds
push
pop
loop
push
cmp
fcomp
sub
mov
mov
mov
idiv
(bad)
icebp
shl
es
mov
pop
ins
(bad)
pop
ss
add
retf
mov
(bad)
rcl
pop
stc
mov
dec
and
call
sub
push
fsub
loopne
sbb
push
fmul
mov
std
dec
pop
push
(bad)
loop
int
inc
push
ret
out
shl
xor
jnp
movs
xchg
sbb
loopne
xor
mov
xchg
ret
clc
cmp
mov
movs
stos
loop
and
mov
repnz
iret
cmps
je
adc
test
clc
into
lock
sub
xor
xor
cmp
sub
jo
lock
mov
cmp
stc
je
jle
jns
cs
pop
leave
xchg
mov
mov
int3
adc
add
sub
pop
fcom
mov
jb
adc
mov
test
jl
push
outs
jnp
mov
mov
sub
xchg
mov
mov
scas
or
add
xor
dec
push
sbb
pop
aaa
dec
add
adc
out
(bad)
aas
shr
(bad)
bound
and
pop
les
loope
(bad)
(bad)
rcr
pop
jb
hlt
in
enter
cdq
adc
inc
(bad)
jmp
std
int3
(bad)
fst
and
push
sbb
mov
test
cli
loop
cmps
iret
mov
pop
push
pop
cmp
dec
xchg
jne
idiv
xchg
xchg
xlat
sub
nop
pop
or
inc
push
popf
jbe
mov
xor
sub
jmp
and
scas
pop
sub
ds
sub
ja
mov
pop
mov
into
bswap
(bad)
lods
fwait
mov
xchg
push
out
or
ror
xchg
cmp
and
(bad)
femms
stos
test
pop
sub
inc
cmps
jl
jmp
fdivr
jnp
test
out
(bad)
mov
pop
mov
and
or
stos
loop
sahf
into
mov
movs
push
add
xchg
jmp
pusha
xchg
cli
pusha
sbb
test
sub
and
pop
pop
xchg
outs
call
push
bound
mov
xchg
cmp
into
mov
pop
cmp
in
pop
scas
(bad)
push
jmp
jae
or
mov
inc
xchg
mov
xchg
mov
cmp
leave
inc
or
and
mov
mov
mov
stos
add
cwde
dec
repz
in
mov
and
ss
sub
aad
movs
push
in
mov
sti
pop
xchg
je
shl
mov
sbb
cld
imul
pop
sbb
jge
dec
fmul
std
sub
jmp
(bad)
rcl
jle
cmp
pop
fidivr
jne
fidivr
jmp
inc
cmp
fs
jo
jnp
or
inc
xchg
inc
lds
mov
or
fisttp
sbb
mov
cwde
iret
mov
jle
jge
inc
mov
and
imul
mov
inc
jno
xor
(bad)
dec
mov
inc
stos
inc
ret
mov
mov
push
adc
xchg
or
(bad)
test
pop
inc
sbb
mov
mov
jae
fsubr
dec
sbb
dec
mov
cmp
je
mov
adc
sbb
sbb
jge
(bad)
rcr
mov
imul
in
test
push
add
mov
push
or
mov
(bad)
sti
pop
setg
mov
(bad)
in
push
adc
mov
ret
push
mov
bound
jecxz
push
sub
inc
bound
call
fiadd
mov
scas
xchg
dec
out
movs
push
adc
imul
aam
xor
mov
adc
(bad)
test
xchg
jo
and
mov
jp
jl
sub
xor
nop
rcr
mov
dec
xchg
adc
sbb
push
movs
cmp
sub
mov
mov
not
retf
mov
into
mov
xchg
fwait
inc
jnp
mov
xor
sbb
inc
loop
fcmovnbe
fnstsw
call
mov
lea
ins
add
xor
push
sub
or
add
rol
or
sub
push
bnd
jmp
adc
aad
xchg
dec
enter
adc
stos
mov
pop
push
or
fild
sysenter
jne
push
fwait
and
sbb
cmp
call
xor
mov
jmp
in
clc
loopne
xchg
adc
sahf
or
scas
pop
pop
or
pushf
mov
adc
sub
dec
pop
cmp
add
aas
pop
dec
iret
mov
dec
pusha
mov
xor
cmp
out
leave
ja
or
sbb
loop
pop
popa
stos
inc
xchg
add
test
xchg
out
in
lds
dec
pop
inc
mov
pop
add
scas
mov
jl
mov
jmp
push
bnd
(bad)
jne
pusha
or
movs
es
xor
push
jb
(bad)
in
jne
xchg
jmp
push
mov
(bad)
in
js
movs
pop
sbb
jp
in
mov
and
xor
fwait
pop
movs
outs
mov
lahf
loopne
jnp
imul
cli
mov
fwait
pop
sbb
mul
data16
mov
(bad)
loope
add
or
mov
xchg
test
(bad)
push
xchg
int
mov
dec
add
jb
popa
(bad)
xor
aam
test
push
xor
(bad)
stos
jmp
add
push
push
les
repnz
dec
or
xor
aaa
mov
inc
mov
fcmovbe
pop
sbb
mov
jne
inc
inc
sub
aaa
ds
or
push
mov
test
popa
lods
xlat
daa
jb
and
out
pop
push
push
sbb
ds
push
push
ss
dec
xchg
sub
jne
sub
xchg
scas
test
jg
adc
fisub
jb
or
dec
call
ds
push
sbb
adc
inc
fcom
rcl
push
(bad)
sbb
repz
add
call
fucomip
jmp
int3
mov
cmp
jmp
add
into
sub
add
sbb
cmp
xchg
mov
mov
hlt
mov
add
xchg
jae
xchg
mov
sub
int
jmp
outs
push
(bad)
xchg
jg
jl
or
jbe
jno
jg
inc
adc
or
iret
pushf
add
mov
lock
sub
ja
mov
mov
mov
test
fidivr
rcl
sbb
mov
stos
retf
jmp
mov
mov
ret
xor
out
xchg
adc
loop
dec
jmp
mov
mov
xor
mov
xchg
xlat
xchg
inc
cwde
test
gs
add
ret
push
dec
or
nop
je
push
cmp
cdq
inc
and
pop
in
cld
add
sar
sti
pop
in
and
test
push
scas
test
add
retf
in
jle
push
popa
cmp
xchg
cmp
ret
ret
ss
stos
imul
push
cli
fimul
pusha
in
adc
scas
add
popa
enter
xchg
cmp
fld
fiadd
cwde
mov
add
jle
or
mov
cld
(bad)
cdq
push
fsubr
fmul
add
add
push
dec
sbb
mov
aam
sub
out
rdmsr
or
xor
ds
movs
dec
or
mov
in
adc
in
stos
iret
loope
aaa
sbb
dec
inc
stos
adc
cdq
mov
lods
leave
stos
xchg
pushf
fs
fs
or
shl
(bad)
push
pop
push
mov
pop
or
adc
and
(bad)
cmps
mov
dec
loop
shl
cmps
inc
pop
enter
jo
lods
scas
push
test
jns
daa
mov
add
dec
mov
lea
push
std
inc
pop
pop
sar
scas
les
mul
lods
push
test
dec
shl
xchg
and
inc
xchg
mov
adc
in
retf
cmp
test
mov
repz
in
rcr
pop
mov
cmp
lahf
cmp
js
stos
dec
push
push
sahf
or
jge
mov
sbb
mov
inc
lock
pop
add
neg
popa
pushf
cmp
ja
xor
and
shl
in
or
pop
cmc
fnsave
add
jmp
cmps
cmp
jns
jns
clc
inc
dec
sbb
inc
pop
jno
call
add
jg
arpl
jge
int3
adc
lds
push
jno
push
gs
int
shl
sbb
(bad)
jmp
and
addr16
fcom
xor
add
mov
cmps
inc
mov
jl
xor
mov
jg
ins
lods
xchg
mov
and
xchg
lock
ss
dec
jg
xor
push
and
and
ss
push
and
and
pop
loopne
mov
icebp
and
retf
pop
int3
imul
xchg
pop
xlat
(bad)
add
int
jg
xchg
pop
adc
(bad)
jge
adc
cwde
nop
dec
xor
jge
das
mov
push
dec
push
or
pop
in
adc
sti
and
popa
lods
scas
test
mov
not
cmp
js
loop
int
dec
inc
out
retf
pop
or
mov
out
xor
(bad)
int3
test
out
push
div
rol
pop
fs
mov
fidivr
das
in
xor
ins
jle
add
add
add
rol
inc
lods
or
xchg
inc
outs
mov
cmps
pop
lods
es
lods
dec
dec
aad
stos
or
adc
and
jge
dec
sbb
rcr
pop
and
inc
scas
(bad)
adc
lods
jo
pop
in
pmullw
and
lods
cmps
pop
sbb
xor
sahf
jbe
jnp
iret
sbb
push
fmul
or
mov
out
sar
adc
scas
rcr
(bad)
imul
and
(bad)
bswap
not
push
test
out
adc
out
sahf
inc
sub
fcmovnbe
movs
dec
clc
sub
cmp
xor
fsubrp
pop
lods
and
add
xchg
jecxz
ret
sbb
ror
fild
iret
push
fstp
xchg
ins
push
sbb
mov
sbb
mov
mov
add
xchg
scas
or
mov
xor
sbb
xchg
stos
cmp
pop
xchg
cmp
cld
fist
and
and
pusha
xor
xchg
int
cmp
cwde
lea
les
add
ss
xor
mov
mov
dec
cmc
imul
cmp
aas
daa
jns
sbb
cmc
push
sub
cmc
pusha
mov
hlt
fcompp
and
or
std
outs
les
jge
or
das
xchg
push
pop
loop
or
pop
sub
xor
jno
je
stos
aad
mov
jne
out
cmps
ds
xchg
fcmovnbe
fisttp
or
int
std
push
xor
jmp
sbb
in
ja
pop
push
sbb
lods
pop
aam
neg
aam
(bad)
sti
xor
or
pop
pop
pop
frstor
xchg
lock
test
mov
inc
xor
inc
fnstcw
shl
fbstp
push
imul
dec
loope
inc
or
dec
mov
sar
stc
and
pop
mov
add
xlat
xchg
out
dec
shr
or
xor
jno
stos
(bad)
mov
stc
sahf
fs
cmp
(bad)
inc
dec
cdq
lahf
rcl
xlat
cdq
shl
sub
shr
(bad)
ror
pop
retf
and
pop
test
out
mov
lods
xchg
ss
sub
cmps
jecxz
aad
mov
data16
xor
retf
dec
mov
inc
push
cld
sub
cs
mov
adc
ins
xor
or
cwde
xchg
clc
div
xchg
cli
out
add
fild
div
inc
adc
adc
ins
les
dec
or
stos
push
push
ins
(bad)
aam
je
je
nop
sub
lock
les
sti
gs
inc
xchg
cmp
fdivr
mov
mov
jnp
or
pop
push
outs
xchg
mov
push
xchg
bound
xchg
outs
retf
adc
pusha
add
iret
fnstsw
and
fisubr
mov
clc
lock
pop
mov
cmp
jo
shl
imul
rcl
in
sbb
mov
cdq
jo
push
or
mov
and
frstor
jns
dec
int
(bad)
mov
add
xchg
inc
add
test
out
(bad)
dec
dec
pop
push
cmp
inc
mov
jne
fdiv
scas
daa
sub
out
mov
push
pop
rcr
ins
sbb
mov
or
loop
mov
mov
mov
xchg
jne
inc
and
icebp
aas
(bad)
mov
vaddsubpd
nop
and
cmp
popf
mov
call
popa
jne
and
in
pushf
and
xor
cli
bound
int3
retf
loope
js
sti
or
fst
pop
sbb
jmp
ja
xchg
jl
jl
cmc
sub
outs
sar
or
fsub
cdq
out
lea
stos
jo
in
arpl
pop
sti
or
outs
mov
outs
jae
lods
in
inc
inc
aas
dec
and
repnz
mov
or
movs
adc
push
dec
dec
ds
push
das
loopne
push
cmp
hlt
push
(bad)
fidivr
push
xchg
ficom
movs
fwait
mov
jg
mov
add
fnstsw
sub
mov
addr16
sbb
mov
xchg
es
call
call
not
scas
sub
icebp
pop
fild
sti
jmp
sub
fdecstp
mov
mov
arpl
lea
pop
dec
mov
cmp
repz
mov
sbb
push
cmp
test
inc
daa
inc
imul
dec
ror
adc
out
lds
outs
sub
jns
adc
bound
js
mov
mov
or
cmp
loope
popf
mov
sbb
in
retf
mov
xor
es
dec
jmp
popa
sub
lods
cmp
jbe
sbb
push
jge
dec
loop
mov
jmp
lea
and
lock
push
adc
and
dec
mov
add
arpl
leave
ss
jne
dec
addr16
mov
ss
adc
and
imul
mov
push
inc
add
dec
scas
data16
sub
out
test
xchg
dec
xchg
push
sar
xor
js
pop
or
inc
sub
mov
or
in
inc
mov
add
lods
add
adc
in
xlat
aaa
sti
cmps
and
frstor
adc
and
std
dec
iret
pop
push
scas
jb
fmul
add
push
arpl
xlat
push
cld
int3
cdq
pusha
jge
push
mov
jnp
add
(bad)
jo
lea
xchg
cdq
fdiv
(bad)
cs
test
pop
mov
retf
push
imul
aam
loope
jmp
bound
add
xlat
out
sbb
sub
inc
mov
loope
mov
push
in
and
imul
sahf
fwait
mov
xchg
push
mov
imul
movs
cld
jmp
loop
cwde
jecxz
pop
call
popa
fidivr
fidiv
sbb
mov
les
out
(bad)
icebp
rol
jp
fnstenv
push
or
jp
mov
mov
jo
(bad)
ror
sbb
xor
dec
mov
adc
mov
scas
popa
jg
js
das
int3
rol
ret
sti
dec
mov
leave
pop
test
xor
sub
lods
pmaxsw
out
test
inc
test
pop
inc
repz
push
aad
add
sbb
pop
fimul
sub
cmp
jg
cmp
jne
adc
ja
rcr
call
outs
adc
or
in
mov
arpl
gs
call
pop
mov
test
(bad)
pop
sub
jp
mov
and
leave
arpl
or
inc
out
cmp
cwde
xchg
cld
les
jbe
mov
cmp
jo
inc
addr16
adc
xor
cwde
mov
retf
call
adc
jb
inc
bound
jns
dec
mov
mov
in
retf
mov
push
dec
lods
inc
in
sbb
mov
push
mov
mov
jmp
add
sub
mov
sbb
or
mov
jl
inc
ins
sub
repnz
push
fs
sbb
xchg
and
xchg
pushf
push
fnstsw
and
sbb
inc
push
mov
mov
pop
dec
and
int3
stos
call
adc
into
jo
fwait
cmp
mov
push
ror
out
mov
mov
leave
mov
ret
dec
les
sub
jg
int
daa
mov
(bad)
cs
add
das
fld
or
push
xchg
in
aam
rcl
cmp
data16
mov
sub
xchg
dec
sahf
pop
not
inc
jae
sbb
and
inc
xchg
sbb
push
les
int3
(bad)
cli
test
mov
push
jbe
rcl
fdiv
enter
cs
xchg
adc
dec
lahf
jg
jg
jno
aas
cmp
test
test
xlat
pop
bound
(bad)
cdq
mov
and
mov
xlat
inc
sbb
call
loopne
xchg
stos
call
je
cmp
jl
cwde
sti
ss
add
lds
dec
(bad)
bound
xchg
out
ret
das
xchg
les
clc
dec
inc
cmps
adc
or
inc
and
sbb
je
sub
or
sub
xchg
push
rcr
hlt
dec
sub
mov
mov
dec
jo
mov
or
pmullw
fwait
test
or
into
jbe
fs
out
jo
stos
bound
jl
inc
add
or
and
push
int3
mov
xchg
add
mov
mov
enter
mov
out
out
mov
mov
push
xchg
push
sub
in
(bad)
pop
std
adc
inc
pop
js
ins
pusha
inc
(bad)
test
mov
lock
adc
arpl
or
stos
addr16
add
push
jmp
or
cs
mov
xchg
leave
aad
jns
pop
mov
bound
dec
pushf
aaa
dec
or
shl
adc
clc
or
nop
pop
sub
sub
(bad)
jge
adc
jp
jae
aam
dec
inc
and
ins
xchg
pop
xchg
xchg
push
int
and
mov
loop
ror
(bad)
into
out
xor
lods
and
lods
xchg
stc
cld
push
add
xchg
lods
mov
adc
mov
ins
add
mov
ret
dec
test
xchg
jbe
icebp
stos
repnz
not
inc
dec
loop
push
arpl
jmp
lea
xchg
push
jmp
(bad)
cmp
imul
popa
pushf
loopne
cmp
sbb
daa
fsubr
pop
xor
cmp
mov
cmps
mov
push
cmc
imul
and
xor
fnstenv
repnz
mov
push
xchg
mov
and
(bad)
clc
sbb
ja
cmp
fs
push
sub
jne
sti
frstor
and
sub
push
mov
arpl
jns
fwait
mov
dec
out
in
jmp
(bad)
movs
shr
add
lds
int
(bad)
cs
mov
cmp
jle
adc
dec
clc
jecxz
push
and
or
jmp
ret
cmp
add
add
jmp
mov
rcl
and
ret
and
dec
push
(bad)
mov
xor
mov
lds
lea
sti
pop
fst
xchg
or
pop
jl
xor
cmp
call
fs
pop
aaa
lods
sub
jne
pop
ss
int
push
cmp
pop
push
sub
mov
and
xor
mov
leave
popf
mov
cmps
mov
mov
push
adc
pop
adc
pusha
jae
es
cmp
pop
xor
adc
mov
popf
lock
inc
jg
mov
aam
out
push
sub
daa
lods
ret
mov
pop
dec
lods
mov
cmp
clc
or
mov
(bad)
ror
pop
fld
xor
adc
push
xor
lods
mov
std
xor
or
in
cmp
pop
adc
adc
mov
push
xchg
test
mov
ss
inc
mov
in
xchg
and
fdivr
js
sbb
popf
xchg
and
push
mov
mov
or
push
ror
mov
popa
rol
fcom
jno
shl
cmp
xor
or
dec
lahf
sbb
das
mov
aas
jle
movs
dec
add
add
jg
jl
push
mov
stos
lods
retf
adc
sub
lods
add
mov
mov
daa
(bad)
int3
mov
out
add
test
and
sbb
mov
cmp
lahf
or
sbb
mov
ficom
mov
movs
fs
lock
mov
arpl
cs
(bad)
push
mul
xchg
push
jb
push
or
(bad)
bound
mov
ja
fs
push
mov
inc
ret
jmp
lahf
out
call
call
retf
es
jbe
dec
mov
or
aad
push
scas
mov
or
jno
mov
aad
sbb
(bad)
and
pop
inc
add
pushf
cmp
or
jnp
mov
push
pusha
cmps
push
std
into
nop
sbb
adc
push
sbb
into
outs
pop
mov
inc
out
inc
sahf
shl
dec
lahf
push
ins
cmps
xchg
(bad)
push
jmp
push
cs
xchg
xchg
cmp
sub
mov
sbb
mov
stos
sti
xchg
popf
pop
imul
int3
cli
push
fcom
out
pop
or
lea
rcr
jecxz
rol
push
lods
adc
cmp
ret
add
adc
les
cld
lods
fstp
retw
and
outs
pushf
shl
inc
push
cdq
mov
stos
jae
lods
or
cwde
push
dec
pop
jno
or
in
inc
test
inc
dec
push
and
repnz
add
xchg
mov
mov
push
iret
push
push
outs
dec
xchg
aas
xor
shl
ja
push
bound
mov
jge
(bad)
outs
mov
pop
and
cld
push
aam
fnsave
dec
pop
push
inc
(bad)
jo
mov
push
and
sbb
mov
out
inc
pop
push
int3
pop
mov
or
add
(bad)
call
mov
xor
sub
ret
lock
cmp
retf
inc
idiv
adc
jge
into
retf
movs
and
sbb
inc
pop
(bad)
fst
jmp
(bad)
les
nop
inc
xchg
in
xor
ins
aas
jno
mov
lds
pop
and
mov
mov
mov
aaa
stos
xchg
mov
or
inc
bound
pop
ja
cli
push
mov
pop
pop
sar
and
mov
inc
gs
fidiv
mov
xchg
mov
mov
fimul
and
js
and
pop
and
jg
mov
jae
retf
inc
nop
sbb
pop
pop
cmps
mov
out
out
jp
(bad)
test
leave
jmp
pop
or
push
sub
add
stc
sbb
lock
dec
sbb
jle
ret
gs
add
mov
mov
and
push
js
cmps
stc
mov
call
sti
jp
jne
fs
pusha
jg
outs
out
jmp
inc
inc
test
add
sbb
icebp
cmc
(bad)
or
cmp
pop
inc
cmp
pop
push
mov
sub
and
sar
mov
mov
xor
mov
push
mov
popf
adc
pop
push
repnz
iret
outs
pop
sub
sub
and
push
jecxz
mov
popf
xchg
push
cli
add
(bad)
int3
adc
push
and
clc
sti
mov
xchg
adc
outs
cmp
mov
call
shl
mov
sub
scas
xchg
mov
fdiv
data16
mov
pop
jne
(bad)
mov
push
jnp
add
les
sbb
or
ins
cwde
or
sbb
test
adc
ret
mov
movs
jbe
pop
push
xor
clc
sbb
mov
mov
movs
mov
xor
fs
pop
loop
add
(bad)
mov
clc
dec
pop
pop
sub
push
mov
push
jo
inc
dec
stos
jecxz
lods
cld
pusha
pop
dec
clc
xchg
xor
push
aaa
add
add
mov
jmp
in
adc
mov
in
stos
and
je
fsubp
mov
jb
pop
mov
nop
dec
test
push
fld
inc
addr16
popf
push
push
dec
in
inc
mov
mov
pop
dec
xchg
cs
and
imul
into
shl
pop
xchg
mov
or
inc
jecxz
rol
pop
xchg
xchg
mov
pop
sub
inc
sub
mov
jmp
pop
or
js
inc
fisub
lock
push
out
or
pop
jg
fisubr
mov
xor
mov
adc
or
and
movs
sub
and
out
xchg
clc
mov
pop
jne
pop
sbb
jb
xor
adc
rol
mov
add
sbb
and
xor
stos
mov
mov
mov
shl
bound
data16
push
sub
mov
jb
out
xor
mov
aaa
into
test
test
mov
movs
sub
mov
mov
xchg
dec
fwait
lahf
das
adc
xlat
adc
jge
(bad)
ds
cwde
xor
in
xadd
jae
fwait
xor
mov
loopne
dec
es
popa
inc
mov
and
lea
dec
sub
div
arpl
in
rcr
dec
fs
sbb
xor
outs
cmp
sub
stos
loop
mov
mov
or
and
xchg
shl
or
inc
repnz
or
repz
aas
mov
push
mov
in
pop
or
test
add
stos
scas
bound
addr16
mov
or
mov
pop
jb
arpl
push
cld
cld
jmp
aam
arpl
(bad)
sahf
xchg
adc
pop
push
es
jl
pop
sbb
rol
dec
imul
call
sti
dec
outs
jl
in
arpl
shl
sbb
and
adc
(bad)
cwde
cli
push
das
jbe
aas
nop
sub
frstor
mov
inc
lds
lods
sbb
pop
lods
jb
ins
aaa
fsubr
inc
test
dec
sbb
adc
jmp
sub
bound
js
std
xchg
rol
cmps
cmps
fucomip
pushf
aas
ja
dec
push
in
pop
retf
dec
cmp
ret
jb
jp
push
and
test
and
mov
clc
jae
enter
xchg
inc
jmp
mov
int
dec
aad
cld
jge
mov
push
fwait
add
and
push
loopne
lods
(bad)
call
mov
xor
(bad)
lds
jecxz
stos
repnz
mov
rcr
loopne
adc
test
icebp
iret
icebp
scas
jb
jecxz
xchg
stos
mov
ror
jecxz
mov
out
mov
add
mov
(bad)
mov
enter
sub
fld
inc
jle
ficom
sbb
std
cmp
add
outs
or
lods
loopne
jb
jne
shl
stos
sub
adc
imul
pop
fwait
out
push
push
int3
mov
call
adc
cmps
jns
in
adc
popa
inc
fmulp
mov
xchg
cmovs
test
xchg
sub
jmp
mov
ja
pop
mov
je
xlat
mov
pop
mov
sbb
cmps
sahf
or
jae
xchg
cld
(bad)
lock
rcl
fs
fadd
imul
inc
mov
adc
ins
push
ss
(bad)
cwde
fiadd
or
and
mov
add
mov
add
cmp
mov
push
xor
pop
add
lock
xor
pop
mov
inc
call
das
adc
outs
out
cmp
and
sub
jl
jmp
inc
jp
sub
jp
xchg
jnp
cmp
lea
hlt
les
xchg
popa
lds
ins
xor
sbb
out
rol
in
out
in
retf
ja
lods
popa
jmp
sti
adc
fidivr
xlat
icebp
dec
les
pop
cmps
call
cmp
jmp
lods
mov
pop
scas
mov
dec
out
cli
jno
lds
adc
movs
retf
rol
xchg
cmp
mov
push
push
mov
es
fild
push
les
inc
add
mov
xchg
and
xchg
js
mov
and
shl
ret
inc
sbb
cmp
test
and
xchg
es
mov
or
cs
mov
sub
and
inc
idiv
pop
mov
dec
dec
jns
jno
mov
adc
and
and
xchg
jne
(bad)
rol
inc
repz
popa
stos
pusha
sti
mov
inc
mov
jmp
lds
xchg
dec
jnp
(bad)
fnstsw
rcl
add
mov
xchg
cmp
push
imul
xor
shl
ins
xchg
jecxz
cmps
scas
push
push
inc
lock
dec
fisub
cmps
cmp
not
inc
push
pusha
ins
mov
aad
cmp
jecxz
and
sub
sub
ins
jo
arpl
in
fs
dec
cli
(bad)
shl
nop
xchg
pop
aas
jl
leave
cwde
ss
repz
sbb
lods
push
mov
jge
mov
add
rcl
mov
ds
push
xchg
adc
nop
mov
or
faddp
mov
test
das
in
fcomp
ret
cmp
jle
call
add
jbe
into
push
cmp
jl
lahf
adc
and
repz
jp
orps
je
mov
mov
add
or
outs
scas
ins
pop
test
or
inc
adc
int3
dec
in
out
int3
push
pop
mov
arpl
push
xchg
dec
imul
fisttp
dec
ins
and
test
xor
pusha
lods
shr
mov
test
fwait
cmp
and
movs
fdivr
and
push
mov
int
ja
pop
cmp
imul
jl
aam
scas
pop
pop
scas
popf
add
out
lock
int3
jnp
lods
and
mov
add
cmp
adc
pop
loopne
fadd
cmps
jmp
shr
es
jns
xor
sar
add
jnp
jecxz
mov
mov
pop
jnp
jne
jge
pop
scas
ss
xor
or
cmp
adc
sbb
stos
xchg
push
adc
rcl
int3
dec
sub
bound
scas
dec
sbb
lds
xor
pop
xchg
imul
shr
jg
dec
out
aaa
cmp
mov
mov
(bad)
pop
std
in
leave
inc
lock
dec
in
je
data16
jg
cmc
add
test
push
aad
mov
call
sub
sbb
mov
jle
or
mov
fsqrt
out
sbb
or
enter
loopne
or
mov
and
mov
adc
and
clc
dec
aas
adc
aad
push
jbe
call
or
in
nop
out
adc
std
mov
std
inc
jbe
sahf
and
imul
cs
add
or
xor
js
mov
lock
clc
mov
jecxz
shl
fisub
cvtss2si
fistp
retf
cmp
pop
mov
or
push
cld
dec
test
pop
adc
xor
inc
pop
into
adc
jne
mov
adc
jmp
or
xchg
aaa
lea
pop
mov
scas
adc
(bad)
loop
out
mov
(bad)
mov
popf
jae
push
inc
fwait
mov
retf
mov
sti
ins
jns
repnz
jge
sbb
sub
and
das
sahf
lods
xchg
add
sahf
jp
xor
push
pop
ins
lock
inc
pop
lock
push
loopne
mov
add
or
mov
push
mov
loop
imul
cmps
push
or
adc
into
aas
out
es
mov
mov
fistp
cmp
cs
inc
mov
out
(bad)
in
(bad)
fucomp
lds
xchg
js
adc
dec
in
pop
push
xchg
xchg
inc
jnp
push
test
pop
call
lahf
nop
xchg
adc
ret
adc
test
jne
pop
or
jmp
ja
add
or
mov
arpl
int3
lahf
pop
scas
and
mov
cs
mov
ss
mov
pushf
outs
xlat
out
mov
mov
cmp
out
rcl
mov
sbb
add
pop
jg
xchg
scas
pop
pop
adc
jg
jno
mov
inc
stos
movs
xor
stos
iret
and
dec
push
pop
repnz
fimul
inc
test
push
xchg
push
xchg
sti
xchg
inc
popa
dec
(bad)
push
adc
mov
jno
ja
int
fisttp
dec
cmp
stos
xchg
call
mov
adc
jns
pop
xor
adc
xor
pop
add
xchg
xchg
jns
out
sub
jbe
pop
leave
popa
mov
inc
jae
jbe
pop
fstp
sbb
sbb
ds
xchg
or
mov
(bad)
mov
mov
xchg
adc
mov
(bad)
gs
cmc
adc
into
ficom
or
pushf
cld
push
cld
loopne
bound
mov
ret
je
jp
push
jbe
adc
add
(bad)
es
rol
inc
add
and
sub
leave
jb
pop
add
rcl
cmp
adc
fnstsw
sub
push
repz
clc
mov
scas
mov
xchg
in
sbb
mov
mov
bound
push
hlt
mov
cmc
and
cmc
hlt
mov
sbb
jno
packssdw
mov
into
movs
lea
and
sar
out
xchg
xchg
hlt
cmp
fwait
dec
inc
bound
mov
mov
(bad)
fimul
aas
sbb
inc
call
sub
and
mov
movs
inc
je
push
xchg
xchg
adc
or
xchg
push
dec
outs
fisubr
pop
mov
pop
xchg
das
add
dec
fst
bound
sti
je
shl
dec
(bad)
push
ret
dec
jns
mov
mov
dec
mov
ja
jmp
sar
cmc
cmp
ror
inc
inc
inc
dec
ret
jne
inc
jp
mov
hlt
addr16
xor
cmps
ins
mov
mov
xlat
mov
rcr
hlt
cdq
mov
jne
(bad)
rol
inc
or
in
ja
jecxz
imul
push
dec
or
popf
scas
pop
sub
pop
cmc
or
mov
lods
gs
mov
dec
xchg
xchg
and
ficom
mov
call
sub
sub
xor
inc
dec
dec
xor
pusha
push
add
ins
fild
iret
mov
loop
(bad)
mov
hlt
das
pusha
add
add
inc
or
push
add
lahf
pop
call
dec
add
mov
add
jl
add
mov
out
and
xchg
sbb
mov
push
sbb
lods
or
es
jae
mov
aam
rol
or
frstor
xor
icebp
sub
test
adc
ins
stos
sar
xor
add
jp
inc
mov
add
jne
jl
cmps
cmp
(bad)
push
mov
shl
mov
xchg
je
inc
sub
fist
shl
cmp
movs
imul
(bad)
add
and
js
out
ss
into
inc
and
inc
sub
push
and
push
cmc
mov
fst
xor
pop
jnp
xor
in
scas
sahf
loop
imul
lock
pop
jns
popa
or
jne
das
(bad)
sar
data16
std
mov
dec
mov
int3
mov
adc
inc
cmp
movs
jno
mov
cmc
shl
movs
data16
(bad)
rol
xchg
fdivr
jg
adc
test
lahf
aad
adc
push
iret
repz
pop
jl
hlt
scas
loope
pop
mov
fwait
retf
out
mov
sub
or
sub
mov
das
into
fst
push
fild
cmps
sub
dec
lods
jge
lods
sbb
ins
dec
shr
mov
stc
mov
fisttp
inc
jne
test
add
test
jp
push
adc
jae
out
nop
loopne
imul
xchg
(bad)
sub
movs
add
sub
loope
jnp
jmp
cwde
retf
sar
js
cli
(bad)
or
lds
or
movs
mov
out
pop
into
mov
pop
or
clc
push
fist
addr16
add
push
jecxz
movs
and
push
das
cmp
popa
lock
shl
int
xor
xchg
jmp
mov
pop
dec
out
push
aas
loope
icebp
popf
mov
repnz
call
xchg
mov
pushf
jne
enter
jge
xchg
mov
cli
add
inc
sub
mov
sub
cli
jmp
pop
jg
std
cwde
loop
ss
pop
movs
inc
fcomp
outs
iret
dec
wrmsr
or
sbb
int3
pushf
mov
imul
sub
mov
push
jge
xchg
sub
inc
adc
loopne
movs
out
xor
mov
pop
inc
inc
sbb
sbb
cmp
ins
jnp
lods
push
jae
stos
dec
fnstcw
add
add
into
mov
pop
int
dec
cmp
in
outs
pop
mov
fadd
jmp
lods
xor
xchg
aad
ss
aam
sub
xor
mov
fist
imul
add
pop
push
adc
pop
in
loop
push
cwde
popa
jle
adc
xchg
cmps
jp
in
cmp
sbb
bswap
stc
sbb
cmp
int3
cld
sahf
cmp
pop
push
xchg
neg
inc
scas
pop
test
idiv
jle
aam
das
sub
es
idiv
cmp
mov
push
fdivrp
mov
lea
jmp
jne
dec
gs
jmp
add
(bad)
mov
repnz
jg
and
cmp
cmp
jp
pop
sbb
mov
sbb
stos
ins
push
cs
xchg
aam
and
or
sahf
xchg
mov
sbb
(bad)
sbb
jne
shl
adc
push
(bad)
ffree
sbb
ss
retf
(bad)
xor
(bad)
fld
out
push
sbb
jne
mov
or
enter
pop
mov
or
loop
jne
adc
rcr
inc
xor
mov
call
loope
mov
adc
mov
mov
cmp
push
or
sub
and
xchg
(bad)
jge
outs
in
(bad)
sub
inc
fcmovnu
imul
mov
sar
dec
jae
and
mov
aad
and
bound
fldcw
shl
jnp
mov
mov
cmp
fsub
daa
and
or
in
adc
sub
adc
jnp
and
(bad)
mov
loop
add
xor
cdq
cmps
xchg
mov
jb
das
add
movs
pop
sbb
mov
test
dec
jbe
mov
add
adc
mov
xor
ins
outs
jno
pop
aaa
cmps
and
loopne
cmps
loope
mov
(bad)
xchg
push
fimul
and
sbb
rol
cmp
xor
and
das
dec
sub
or
mov
lds
lock
push
das
sub
(bad)
retf
jg
inc
add
or
lea
dec
and
add
lods
adc
mov
jle
arpl
fcom
test
aaa
out
pop
mov
addr16
int3
(bad)
loopne
(bad)
pop
mov
cwde
jne
sub
push
and
nop
push
cmp
mov
or
popf
loope
inc
(bad)
cdq
adc
pop
mov
in
sub
aam
add
(bad)
fwait
xchg
ficomp
fcomp
mov
mov
pop
xchg
jae
and
xor
nop
mov
mov
scas
(bad)
xor
jmp
mov
mov
push
jle
cmp
mov
mov
mov
push
fwait
xchg
mov
cmc
xchg
xor
mov
bound
and
inc
je
test
ficomp
jmp
mov
dec
iret
jbe
jb
and
nop
shl
fmul
dec
lea
scas
sub
les
scas
scas
leave
xchg
jle
mov
imul
loopne
cmp
inc
jns
cmp
push
xchg
jge
test
mov
lods
aas
(bad)
xlat
ss
and
movs
rol
push
scas
sbb
setae
push
mov
pushf
or
adc
inc
push
icebp
dec
mov
ins
push
mov
sbb
mov
add
sub
jno
fsub
mov
out
mov
jecxz
mov
sbb
and
(bad)
bound
pusha
mov
movs
(bad)
jne
or
mov
pop
(bad)
adc
imul
mov
and
mov
xor
(bad)
cmps
mov
dec
mov
jl
and
(bad)
dec
(bad)
(bad)
call
cmp
cmps
mov
jmp
and
(bad)
or
mov
nop
dec
out
or
mov
add
and
xchg
fs
ror
push
ret
dec
in
test
enter
cmp
addr16
test
cmp
sbb
(bad)
js
or
outs
les
push
or
aam
add
cmp
icebp
movs
adc
inc
push
dec
sar
cmc
mov
or
or
aaa
arpl
xchg
inc
add
cwde
inc
and
pop
lods
out
jecxz
loopne
inc
xor
jno
adc
sbb
jo
(bad)
push
jne
mov
ins
xor
adc
sub
ins
mov
add
seto
xchg
add
cmc
dec
pushf
xlat
(bad)
(bad)
and
xchg
(bad)
jl
jne
push
into
mov
leave
scas
jl
stc
js
inc
dec
ins
repnz
and
pop
lods
mov
sbb
mov
jmp
in
pop
mov
jmp
jmp
dec
mov
das
in
retf
or
add
and
or
add
clc
ja
popa
mov
call
(bad)
stos
push
(bad)
repz
jae
in
adc
xchg
das
movs
pop
cmp
sub
or
(bad)
mov
(bad)
pop
fucomi
push
xchg
outs
call
xchg
jbe
dec
imul
push
cmp
cmc
xor
out
xchg
dec
ja
dec
mov
mov
loope
mov
ja
jnp
call
retf
sub
and
xor
out
daa
stos
stc
call
add
loopne
inc
lods
sub
(bad)
mov
or
imul
xchg
mov
and
std
and
int
scas
add
and
mov
lahf
fs
fcom
cmps
mov
xor
adc
not
cmc
cs
cmp
sbb
int3
mov
xchg
outs
mov
dec
mov
jmp
call
xor
mov
lods
pop
dec
mov
test
cld
imul
daa
call
sub
ret
pusha
lea
cs
cmp
cmp
rcl
pushf
cmp
inc
jle
sub
imul
gs
aaa
pop
dec
mov
mov
les
jae
lods
cmp
aaa
jnp
pop
arpl
fcmovnbe
ins
push
pushf
and
lods
jno
xchg
fstp
inc
pushf
mov
dec
scas
jmp
push
jb
pop
mov
scas
cmp
mov
test
adc
scas
or
movs
mov
enter
cmp
sub
push
cmp
sbb
(bad)
shr
cmp
imul
sbb
repnz
pop
call
sti
fisttp
cwde
std
ficomp
and
loope
fwait
inc
jns
rcr
jmp
iret
ja
add
cli
cli
add
xchg
jo
mov
mov
mov
add
lahf
enter
sub
ja
(bad)
neg
pop
mov
and
sahf
sub
push
ja
adc
imul
xchg
fnstcw
movs
dec
mov
std
call
or
into
sbb
push
retf
xor
inc
jae
sub
jae
push
push
js
fucomip
mov
or
mov
inc
(bad)
rcr
pop
sub
shl
(bad)
int
lea
mov
adc
xor
pop
pushf
jo
std
arpl
retf
sbb
mov
sub
(bad)
mov
add
mov
push
push
xchg
inc
dec
nop
(bad)
mov
inc
in
stos
enter
aaa
popa
push
xchg
push
(bad)
in
ins
pop
sti
add
dec
and
add
shr
mov
inc
idiv
std
enter
fnstcw
and
shr
xchg
dec
ror
jno
dec
push
adc
popf
fsubr
mov
retf
adc
mov
add
mov
mov
arpl
jg
mov
cmp
in
shl
movs
cmp
cmp
inc
jg
shl
pop
jbe
and
out
jecxz
loop
dec
xor
xchg
sahf
inc
je
push
mov
sbb
sbb
in
dec
das
xchg
test
push
or
jg
data16
into
add
add
adc
jp
out
sbb
rcr
mov
mov
inc
dec
retf
stc
mov
mov
push
movs
lods
dec
movs
scas
or
call
jbe
pop
inc
fisttp
je
push
(bad)
jge
mov
lahf
inc
or
sbb
test
call
(bad)
fst
push
sar
cmp
movs
sbb
add
jle
mov
mov
stos
jb
or
sbb
pushf
pop
icebp
test
lds
mov
or
hlt
mov
cmp
(bad)
icebp
rol
jmp
cmp
iret
xchg
fbstp
pushf
and
adc
pushf
js
xor
icebp
je
lahf
cmp
adc
arpl
lock
ss
and
xor
inc
icebp
jns
enter
inc
sub
mov
in
pusha
pushf
jmp
push
jl
jmp
pop
scas
mov
xchg
xor
sub
xchg
or
ret
iret
cli
stos
aas
push
lods
sar
push
les
hlt
sar
adc
lds
cmp
ret
ds
cmps
xor
outs
ret
cmps
cdq
test
sub
add
aas
sti
jmp
outs
std
adc
mov
sub
cwde
mov
repnz
push
nop
jno
adc
mov
adc
inc
call
popf
mov
fs
in
in
ins
adc
adc
addr16
scas
out
push
pop
das
ins
inc
push
cmc
aaa
shl
outs
fs
cmp
(bad)
retf
gs
inc
sub
(bad)
iret
jb
retf
push
xchg
pop
lods
out
mov
loope
mov
or
mov
rcl
xchg
jg
lds
loopne
mov
in
and
ret
lods
dec
fsub
cmc
in
out
pop
mov
ins
jg
add
int
in
movlps
out
popa
mov
mov
push
dec
dec
in
fld
jg
and
clc
xchg
or
retf
call
fwait
cmp
inc
dec
in
adc
clc
xchg
dec
pushf
outs
icebp
inc
pop
fsubp
xchg
push
jne
jns
dec
shl
add
add
and
sbb
cmp
dec
mov
stc
sbb
stos
iret
add
mov
xor
fistp
jmp
inc
and
adc
rcl
imul
adc
loopne
repz
repz
(bad)
loop
pop
or
les
ret
daa
fs
pop
pop
jno
xor
mov
mov
inc
icebp
jb
mov
mov
std
inc
stos
dec
jl
xor
mov
add
jecxz
and
jmp
lods
and
push
mov
inc
scas
rcl
and
jae
sbb
lock
or
cdq
xchg
add
out
mov
sub
dec
gs
ud0
mov
loop
out
push
jmp
imul
in
inc
xchg
rcl
ins
xchg
out
mov
jl
jl
sub
mov
jnp
popa
jns
jge
ja
xchg
mov
pop
mov
pusha
and
sar
out
push
pushf
jno
mov
mov
or
dec
pop
inc
scas
push
adc
mov
jecxz
lea
dec
pop
jne
dec
mov
mov
sti
lea
add
ss
out
sub
inc
aaa
leave
jae
inc
or
push
pop
mov
sbb
mov
(bad)
add
(bad)
push
fistp
sub
jo
push
ds
lahf
mov
dec
das
and
pop
sub
jae
inc
or
xchg
in
xchg
popa
jg
jbe
jo
ins
gs
xchg
cmp
jg
mov
shl
mov
(bad)
js
xchg
pop
out
jl
mov
pop
js
and
xchg
scas
ja
and
sub
ret
push
dec
xchg
cmp
sub
mov
fnsave
jne
and
jnp
dec
push
or
out
(bad)
xchg
cmp
mov
jmp
push
ins
mov
pop
ins
adc
sahf
cmp
jg
retf
sbb
jg
pop
and
in
mov
mov
in
inc
jg
cmp
mov
mov
sub
aas
cmp
jnp
jae
rcl
mov
dec
arpl
push
add
adc
adc
jbe
mov
jmp
pushf
ret
or
xchg
inc
sub
push
cdq
or
mov
dec
imul
fsubr
jne
push
jo
cli
scas
rdtsc
ficomp
or
out
sub
and
add
jecxz
xor
sub
mov
jmp
cmp
ss
popa
xchg
jbe
retf
lds
adc
xchg
pop
stos
(bad)
out
loopne
mov
add
pop
pop
cmp
adc
inc
mov
out
popa
mov
push
test
call
aam
addr16
pop
sub
pop
mov
fcomp
aad
ss
out
lds
push
jge
sub
repnz
or
pusha
call
(bad)
mov
or
mov
ror
cmp
jge
js
pop
inc
xor
inc
out
push
xor
inc
dec
jb
pop
pushf
mov
es
pusha
cmp
and
add
loop
imul
mov
(bad)
into
inc
jo
mov
movs
in
sti
adc
sbb
pop
lahf
hlt
outs
cmc
in
outs
movs
dec
jle
scas
sub
ins
push
mov
iret
or
mov
push
xor
ret
sub
fisttp
outs
ret
fst
cmc
(bad)
in
add
add
sbb
jbe
mov
inc
lock
(bad)
jmp
(bad)
jmp
jmp
rcr
adc
sti
push
pop
clc
adc
sub
pop
sub
lds
call
mov
push
push
ins
mov
leave
les
std
add
pop
mov
fdiv
xchg
lea
outs
clc
fild
push
dec
sbb
xor
mov
mov
rol
nop
adc
xchg
push
mov
xor
jmp
inc
repz
xor
arpl
out
fwait
sahf
or
mov
jge
hlt
xor
sub
lds
sbb
cli
pop
adc
daa
aaa
pop
stc
or
cmp
adc
cmc
jb
and
cmps
inc
popa
jg
addr16
mov
lock
cmp
xor
xlat
out
aaa
mov
les
push
lods
jb
and
cwde
jmp
(bad)
jns
bound
add
inc
lods
adc
cdq
or
in
pop
loopne
pop
fxch
jg
ins
clc
stc
sub
aaa
dec
mov
inc
test
inc
xor
cld
jmp
mov
ds
int3
les
in
dec
mov
fmul
xchg
and
push
xchg
outs
jmp
mov
daa
ret
jnp
cdq
dec
jp
dec
pop
clc
mov
and
aas
inc
(bad)
inc
cdq
cmps
sbb
mov
mov
les
not
dec
aas
xor
mov
inc
loope
mov
in
inc
mov
cmp
jbe
lds
hlt
movs
xor
sub
lods
test
xlat
push
push
push
enter
mov
aam
and
or
mov
jmp
fld
push
out
imul
test
jle
mov
and
fidivr
mov
mov
in
les
lea
push
inc
xchg
mov
mov
fs
mov
pusha
push
sub
mov
jp
push
hlt
stos
adc
dec
out
(bad)
xor
rep
jle
loop
mov
mov
ja
cmp
out
loop
mov
outs
mov
sub
jbe
stos
and
and
lods
shl
xchg
inc
or
mov
ja
gs
jnp
and
inc
push
retf
jne
adc
jns
pop
sub
jo
jle
jae
call
addr16
inc
aam
ret
out
shl
push
xor
or
addr16
mov
push
mov
cs
add
rcl
jne
push
adc
mov
ret
bound
and
in
xor
mov
(bad)
arpl
mov
(bad)
in
xchg
mov
sar
sbb
cmps
and
rol
test
cmp
cmp
inc
jecxz
add
mov
jecxz
loope
nop
sub
sub
xor
add
xlat
fmul
dec
add
data16
xchg
jecxz
pop
mov
pop
scas
xor
or
rcr
enter
repnz
add
push
push
fwait
call
dec
inc
cs
mov
cmp
jp
leave
lea
xor
xor
adc
int
xchg
add
and
adc
scas
mov
push
mov
adc
outs
in
sbb
mov
pushf
(bad)
(bad)
shl
shl
mov
or
jo
test
outs
add
pop
scas
dec
call
leave
adc
scas
xor
jmp
or
sar
jns
cmps
les
adc
lahf
cs
sar
adc
mov
xchg
outs
and
mov
xchg
dec
out
ficom
adc
and
leave
xchg
sbb
iret
sub
push
shl
cmp
jecxz
adc
fistp
test
jmp
inc
push
sbb
aaa
mov
addr16
mov
lods
iret
scas
stos
sbb
add
mov
xor
push
push
ss
pop
inc
ret
push
fsub
mov
xchg
out
and
sbb
xchg
or
ror
mov
or
or
sbb
dec
retf
pop
adc
pusha
stos
sahf
dec
call
adc
and
lahf
sti
mov
arpl
mov
sbb
sub
iret
lds
sub
pop
mov
out
arpl
jecxz
sahf
mov
push
adc
fcomp
xchg
add
retf
xchg
jle
iret
nop
bound
and
stc
mov
enter
sbb
(bad)
adc
xchg
add
mov
(bad)
mov
xchg
mov
mov
add
jmp
out
adc
outs
mov
push
push
mov
shl
ds
sbb
push
test
or
fiadd
test
repnz
push
popf
aam
inc
or
mov
mov
xor
push
lds
or
out
cmps
mov
cwde
sub
retf
rcl
aaa
in
jmp
xor
and
aas
cmp
or
sbb
(bad)
fld
jmp
add
mov
leave
cmp
(bad)
ins
pop
in
lock
inc
(bad)
popa
ins
xchg
mov
xchg
jmp
or
(bad)
or
fistp
inc
inc
xchg
jg
scas
inc
mov
fdivr
pushf
jbe
xchg
stos
out
mov
repz
inc
dec
ss
mov
push
ds
aam
xor
in
or
neg
jne
jp
inc
cmc
cmp
add
xor
adc
mov
out
xlat
pop
sub
add
test
ds
sub
pop
ins
xchg
cmc
leave
outs
mov
sbb
mov
(bad)
dec
add
mov
lds
mov
iret
and
xchg
clc
stos
arpl
lahf
or
test
fbstp
pop
xchg
mov
pusha
xchg
dec
mov
mov
dec
sar
sub
(bad)
in
das
xchg
int
jns
(bad)
mov
xchg
or
xchg
adc
rol
in
mov
xor
cmc
je
aaa
inc
les
mov
std
push
pop
fld
fstp
leave
adc
add
xor
(bad)
sti
xor
inc
cld
pop
mov
push
or
push
mov
cli
and
push
sub
rcr
in
push
gs
mov
mov
xchg
adc
mov
cld
push
test
sbb
jb
pushf
sub
imul
xlat
sahf
mov
jno
xor
stos
and
out
pop
sbb
movs
ret
out
xchg
inc
sub
jnp
cmp
push
cmp
xchg
les
push
push
inc
sbb
push
or
mov
xor
sti
or
cli
clc
ja
xor
ja
mov
mov
popa
add
cmp
dec
out
or
ins
fldcw
or
mov
jnp
fimul
das
cmps
rcl
popf
je
mov
iret
inc
dec
je
push
push
sbb
and
shl
pop
mov
aam
cmp
test
sbb
and
pop
sbb
test
add
inc
loope
lods
jmp
ss
xchg
sbb
inc
mov
aam
and
jb
stos
xchg
or
pop
jg
daa
in
das
cmps
enter
loope
icebp
popa
xchg
mov
mov
loopne
cli
inc
mov
push
in
push
jnp
pop
call
icebp
inc
lods
out
mov
pop
movs
adc
xchg
jno
cmp
into
or
call
loop
call
pop
adc
or
mov
or
sti
(bad)
jmp
ja
test
loope
adc
nop
scas
cmp
pop
inc
mov
(bad)
ds
xchg
adc
or
mov
icebp
stos
jo
jno
pop
pop
ja
xchg
adc
pop
stc
and
push
mov
out
jle
jne
aam
int3
(bad)
cmp
xchg
lods
mov
adc
xor
out
xchg
ret
xchg
jp
jmp
int3
jb
stos
jge
jns
enter
hlt
sub
movs
and
mov
sub
(bad)
xlat
(bad)
aam
inc
ret
and
mov
imul
xor
retf
outs
mov
cdq
fsubr
lahf
not
jmp
seto
push
rcl
retf
lahf
(bad)
inc
ret
jecxz
aad
or
sub
jmp
xchg
pop
in
or
stc
cli
lds
outs
(bad)
iret
hlt
pusha
fild
fwait
pop
push
sbb
mov
pop
in
jecxz
push
or
mov
not
sar
fisttp
cmp
push
cmp
scas
out
jb
pop
add
cmp
adc
jae
mov
cmp
adc
mov
pop
add
scas
loopne
push
dec
stc
sbb
dec
xor
sbb
ins
add
push
stos
mov
xor
adc
and
bound
fwait
mov
movs
imul
push
mov
sti
ins
sub
add
and
jns
(bad)
mov
push
or
xor
jmp
shl
xchg
or
mov
std
out
xor
mov
psubsw
mov
test
into
cmp
(bad)
xchg
or
aaa
mov
mov
cmp
pop
jnp
ret
ret
add
mov
in
push
mov
or
push
pop
jo
push
mov
push
(bad)
and
push
xchg
fmul
xchg
and
arpl
int3
and
sub
mov
mov
out
mov
pusha
inc
shl
xchg
out
and
data16
push
xchg
call
es
fdivr
push
sbb
and
pop
loope
xchg
jmp
fidivr
sbb
jns
pushfw
sbb
fstp
pop
jb
sub
jp
and
std
(bad)
xchg
fbld
fnstenv
sbb
into
test
or
pop
xchg
mov
ret
lods
xor
fcom
adc
ins
nop
cdq
sti
call
adc
(bad)
icebp
fs
iret
push
ss
mov
inc
test
cmp
stos
and
fcmovnb
jbe
jle
adc
inc
sub
push
fadd
jnp
call
mov
adc
mov
mov
js
addr16
jbe
movs
pushf
call
adc
rol
aas
sahf
imul
test
jecxz
adc
outs
xor
adc
imul
rol
frstor
call
outs
mov
mov
add
fwait
adc
std
ja
dec
lods
add
vzeroall
mov
mov
movs
jo
or
xor
div
(bad)
dec
ficomp
push
add
and
add
(bad)
stc
xchg
test
or
data16
sti
rcl
retf
push
movs
call
xor
fwait
test
lods
aam
push
mov
lea
xor
sub
out
loope
jbe
fiadd
push
pop
and
pop
sar
test
pop
mov
inc
mov
jecxz
inc
jae
lods
adc
inc
test
ret
imul
test
adc
cwde
fwait
or
ss
loop
add
leave
sbb
jmp
cwde
jmp
fild
loop
mov
or
add
cmps
xor
lods
push
sub
xchg
cli
comiss
inc
je
pushf
jmp
sbb
call
imul
fisubr
cmps
bound
adc
or
adc
push
loope
xor
or
test
pop
in
jmp
xchg
mov
repnz
push
jns
cli
xchg
and
js
jge
dec
js
sbb
mov
and
rcr
inc
idiv
xchg
dec
xlat
add
sub
pop
inc
or
jecxz
dec
xchg
pop
mov
jnp
sub
mov
test
sbb
cmps
sahf
sahf
add
mov
mov
in
mov
sbb
mov
push
mov
mov
aad
jns
mov
xadd
scas
adc
xor
inc
dec
xchg
in
xor
into
enter
retf
mov
xchg
out
loopne
mov
cmp
mov
aad
dec
push
test
pop
cld
or
xchg
jecxz
xor
push
ret
lahf
adc
mov
or
or
jno
pop
enter
add
fcomp
and
dec
pop
mov
gs
ins
xchg
loope
(bad)
jmp
or
jbe
rdtsc
pop
xor
cmp
xchg
in
lea
sbb
gs
std
(bad)
aad
pop
out
dec
lock
adc
jge
adc
cli
popa
(bad)
mov
mov
cmp
pop
dec
inc
push
pop
js
cwde
and
or
in
cmp
push
mov
sub
leave
sub
cld
outs
jb
add
cwde
test
cwde
dec
pop
and
ror
add
mov
or
test
das
push
xchg
in
inc
adc
pop
aas
loope
nop
inc
dec
sub
aam
mov
sbb
pop
outs
and
add
pop
dec
jb
push
fld
inc
loope
enter
lods
jl
jmp
mov
vandps
cmp
enter
gs
inc
test
xchg
cmp
and
inc
outs
cmp
movs
xor
jns
stos
cmp
(bad)
jmp
mov
mov
sub
(bad)
mov
fcomp
out
inc
dec
cwde
mov
rol
stos
jp
add
idiv
fdivp
mov
jge
xchg
inc
sub
add
sbb
std
jle
out
add
retf
cld
pop
xchg
push
mov
xor
ins
pop
lea
nop
int3
cmp
loope
fadd
and
sbb
fisttp
retf
adc
pop
mov
jmp
nop
test
jecxz
fbstp
push
aad
clc
sub
lahf
sub
inc
jle
popf
xor
mov
cmps
fisttp
sub
pusha
jns
mov
sub
push
scas
(bad)
clc
pop
imul
in
rcl
and
pop
fild
push
push
fucom
jae
mov
movs
or
es
jnp
ss
pop
fcom
dec
add
add
cmp
inc
fwait
inc
mov
and
test
jp
mov
lods
(bad)
aam
sub
cmps
or
sub
test
and
arpl
mov
es
scas
pop
(bad)
fistp
or
pop
stos
bnd
ret
popa
scas
shl
push
(bad)
jmp
xchg
setl
adc
pop
push
add
push
dec
fwait
sbb
enter
pop
cld
adc
das
inc
(bad)
scas
ins
int3
fcomp
div
mov
add
xor
adc
test
push
pop
mov
cs
push
adc
pop
dec
ficomp
sub
sub
bound
int3
mov
test
(bad)
mov
(bad)
xor
inc
loopne
repnz
ins
mov
nop
sbb
dec
fisttp
imul
aam
cmp
mov
cmc
in
inc
stos
jmp
jb
aam
push
push
out
add
or
jecxz
fld
cmps
enter
and
and
pop
in
and
out
in
int
mov
popa
xchg
mov
push
push
xchg
sahf
jb
xor
xchg
or
add
push
dec
ja
sub
(bad)
mov
aas
xchg
dec
inc
xor
mov
sub
jo
pop
dec
pop
add
test
shl
(bad)
dec
aam
xor
xchg
sub
add
lahf
lahf
hlt
inc
arpl
add
clc
mov
mov
rol
int
shl
adc
in
xor
cmp
cli
(bad)
and
and
mov
jno
mov
aam
out
addr16
dec
fdiv
loopne
inc
icebp
addr16
push
or
adc
js
jmp
lods
out
xchg
sbb
(bad)
mov
or
es
int3
mov
mov
rol
scas
das
hlt
dec
and
xor
add
retf
mov
xchg
xor
je
lods
aas
ss
adc
lods
push
mov
jmp
aas
pushf
inc
aaa
or
sub
jno
or
sub
lock
pop
jg
shl
mov
add
imul
cmp
jmp
dec
xchg
add
dec
sbb
add
hlt
aaa
scas
(bad)
cmc
sub
xlat
fldcw
into
push
addr16
ret
sahf
xor
inc
ins
pushf
mov
hlt
cmps
mov
sub
(bad)
push
jo
fistp
fistp
ret
push
and
dec
add
ret
mov
push
cdq
xchg
mov
in
neg
popf
xor
sub
icebp
add
jp
pop
rcl
inc
sbb
lock
mov
xchg
(bad)
inc
inc
or
adc
lock
mov
fsub
jle
jmp
test
not
or
push
aam
ins
shl
jbe
movs
xchg
pop
shr
(bad)
sti
(bad)
push
es
call
push
mov
xchg
mov
inc
dec
xlat
cmp
iret
jle
fldenv
fild
leave
cwde
push
cli
xor
mov
cwde
xchg
stos
daa
dec
pop
jle
aaa
cmp
ja
jmp
cld
cmc
fwait
add
mov
pop
pop
out
sar
adc
xor
(bad)
mov
fst
inc
aaa
fwait
pop
mov
ret
jae
xchg
mov
mov
call
inc
push
xchg
cld
xchg
jne
in
mov
in
dec
mov
lock
jb
mov
mov
and
retf
push
rcl
js
cmps
or
or
pop
cmp
or
repz
out
dec
cmp
push
inc
mov
pushf
(bad)
pop
sbb
jg
jecxz
xor
bound
jno
mov
out
mov
lahf
(bad)
(bad)
pop
test
enter
out
xchg
pusha
pop
ficomp
cmp
outs
call
xlat
leave
repz
mov
xchg
mov
retf
ret
fsub
cmps
add
int3
aad
inc
jbe
mov
cdq
cmps
mov
aam
ret
inc
adc
ror
daa
sub
adc
pop
add
out
push
std
aaa
mov
shl
xor
or
dec
or
or
pop
xchg
popf
std
inc
adc
dec
jb
adc
dec
aas
sub
js
fistp
push
inc
fadd
arpl
out
or
mov
int
dec
dec
cmps
xchg
inc
sub
(bad)
and
dec
lds
mov
cmp
jmp
mov
(bad)
nop
add
push
mov
sbb
test
test
and
push
adc
(bad)
jae
or
cmp
inc
in
jno
and
inc
mov
mov
add
bnd
jl
addr16
loopne
dec
lahf
inc
dec
xor
mov
test
mov
jno
push
or
iret
in
pop
lea
int
ja
bound
dec
aas
push
inc
loopne
mov
sub
rcr
add
aaa
jmp
push
pushf
repz
adc
adc
xchg
shr
retf
neg
add
push
or
or
cmps
xor
in
or
ror
lods
call
popf
call
dec
and
jno
mov
fs
out
sbb
mov
and
aas
xor
jle
in
imul
mov
jno
jcxz
add
aas
mul
add
rcl
ins
outs
cli
mov
fnsave
mov
mov
das
cmp
cli
and
(bad)
mov
call
adc
dec
daa
call
xor
imul
pop
jbe
fsubr
out
xor
popa
pop
jne
(bad)
sub
cli
mov
sbb
mov
js
sbb
sub
fisub
mov
(bad)
push
sub
adc
jle
dec
mov
jne
imul
xchg
and
fadd
or
cmp
mov
adc
xchg
mov
push
popa
dec
lea
pop
cmc
call
and
adc
push
xor
jbe
sub
lahf
repnz
sub
lock
inc
test
push
pop
xor
loope
cmp
sbb
daa
enter
mov
sbb
or
(bad)
cmps
and
add
repz
popf
mov
call
sbb
in
inc
(bad)
jns
ds
imul
inc
stos
sti
push
mov
jbe
call
or
mov
stc
pop
cmp
aad
or
fiadd
in
ret
pushf
cmp
std
or
sbb
and
dec
inc
cmps
mov
popa
mov
pop
loopne
data16
xchg
pop
mov
or
aad
cmp
cmp
sub
and
icebp
inc
adc
ins
ins
dec
mov
jae
adc
push
enter
fld
lahf
jmp
jmp
push
lds
fisub
or
idiv
mov
arpl
and
push
not
xchg
mov
jae
cmc
retf
cwde
in
inc
xchg
es
lods
cmps
retf
jbe
(bad)
lods
add
sub
test
shr
cmp
jle
jno
cmps
mov
test
and
sbb
stc
push
iret
cmp
cmps
test
aas
out
xchg
punpckhbw
mov
inc
dec
dec
dec
rcr
jecxz
imul
dec
ror
pushf
imul
imul
add
dec
cmp
inc
cmp
nop
cmp
push
xor
fcomip
pop
das
or
inc
cmp
shr
push
ins
inc
cwde
popf
aas
(bad)
cwde
dec
into
mov
xor
and
mov
mov
or
jp
imul
imul
mov
retf
pop
pushf
fs
mov
xor
daa
icebp
sbb
inc
jno
movs
icebp
fild
ja
fcomp
dec
out
xchg
(bad)
pop
jecxz
or
cmp
fnstenv
push
pop
mov
jbe
outs
adc
test
jnp
movs
pop
mov
ja
add
dec
out
movs
push
aam
lahf
inc
cmc
cmp
push
and
mov
ins
stos
jp
jbe
int
pop
mov
or
cmp
adc
and
xchg
fmul
aad
add
adc
adc
lods
dec
es
das
inc
inc
xchg
add
out
push
xlat
pop
retf
pop
sbb
push
xchg
shl
lds
std
or
or
sub
jnp
or
sub
add
scas
aad
and
popw
dec
or
xchg
xchg
adc
addr16
adc
test
mov
stc
mov
test
in
je
cwde
pushf
pusha
pop
xor
sahf
xor
cmps
fwait
scas
outs
ins
cwde
jmp
imul
sub
popa
ror
mov
jae
retf
sbb
mov
scas
dec
jno
fdiv
xchg
mov
push
mov
inc
add
cld
push
cmp
(bad)
mov
sbb
aad
fldenv
ins
enter
addr16
push
ffreep
lea
jbe
adc
mov
adc
jmp
cmps
call
jae
sti
jbe
shl
dec
adc
xchg
mov
das
hlt
out
fiadd
outs
arpl
jl
jmp
shl
cdq
js
inc
(bad)
mov
outs
arpl
xchg
xor
pop
jno
and
movs
cwde
aam
mov
xchg
pop
test
push
ins
inc
xchg
rol
call
imul
push
fwait
jne
ret
xchg
jmp
pop
hlt
add
dec
(bad)
pusha
shl
ret
pop
sub
pushf
adc
js
je
fidivr
and
jg
mov
adc
test
(bad)
jge
mov
scas
ins
std
fst
mov
pop
fisubr
mov
shl
sbb
pop
jp
pop
mov
cmp
mov
pusha
xor
aad
pop
(bad)
lods
adc
inc
sub
add
or
or
pop
ret
lock
dec
mov
jmp
cli
and
cmp
mov
addr16
mov
mov
mov
pop
jb
mov
arpl
pop
dec
and
sar
inc
pushf
es
jns
nop
ja
pop
addr16
in
xor
loope
int
shufps
mov
enter
and
push
pop
jns
nop
call
ret
cs
idiv
cmps
or
loope
sahf
sti
jns
or
pop
sbb
das
stos
cmp
mov
mov
mov
ret
(bad)
sbb
push
test
xor
js
loope
jmp
ins
sbb
fs
adc
dec
out
fdiv
mov
int
mov
les
pop
cmp
scas
scas
es
pop
icebp
cmp
push
mov
fldcw
rcr
jmp
mov
jecxz
jne
test
int3
pop
fild
loope
js
loop
mov
sahf
mov
sti
pop
vmovhps
sub
push
push
iret
mov
adc
mov
repz
leave
xor
inc
jle
mov
pop
cmp
ret
dec
xor
push
ret
mov
mov
push
(bad)
stc
call
and
nop
mov
sub
sbb
inc
out
cmp
cli
adc
dec
mov
bound
out
pop
int3
inc
add
jecxz
pop
jecxz
out
mov
pop
in
test
pushf
lds
cmc
xchg
mov
fnstcw
in
ins
inc
sahf
push
push
out
test
mov
in
and
push
pop
sub
pop
js
dec
pushf
sbb
fwait
xor
push
mov
call
push
cmps
imul
xor
imul
nop
jno
movs
arpl
out
xor
xor
mov
mov
stos
jl
imul
mov
and
shl
xchg
in
shr
adc
je
or
or
mov
aas
push
frstor
push
cmp
movs
nop
add
in
add
mov
xor
mov
lahf
ja
xlat
sub
hlt
test
mov
adc
xor
jbe
loope
(bad)
sbb
adc
std
mov
push
sub
pop
and
pop
pop
jle
scas
imul
jp
out
rcl
lods
push
lds
dec
leave
push
mov
enter
sbb
push
adc
jmp
je
pushf
in
mov
fwait
clc
dec
(bad)
(bad)
stos
sub
(bad)
rcl
mov
or
xlat
fdiv
jno
jb
mov
adc
xor
push
(bad)
jmp
aaa
mov
fs
out
shr
lds
xor
ds
cmps
mov
retf
inc
sbb
addr16
mov
in
dec
jb
mov
xchg
fiadd
xchg
push
jge
loope
pop
jno
ror
inc
shr
loopne
inc
xor
push
push
pop
xchg
pop
or
test
clc
cli
push
xor
cmps
mov
mov
test
sbb
(bad)
lahf
(bad)
sar
jge
dec
fwait
mov
push
shr
into
mov
ret
mov
mov
into
xchg
cmp
lods
addr16
jbe
jg
aas
jmp
pop
jmp
mov
push
add
bound
mov
dec
xchg
push
pop
mov
out
mov
fist
push
mov
test
call
sub
loop
inc
xor
cmp
scas
pop
push
jae
loope
cmp
fdivr
popa
adc
mov
fcom
cmp
in
xor
push
jne
sbb
push
iret
mov
data16
adc
cmp
xor
ret
fdiv
mov
xor
jle
or
and
push
out
lock
(bad)
push
inc
repnz
xchg
dec
aam
dec
xchg
in
es
sbb
and
fisub
mov
mov
(bad)
cmp
or
repz
inc
sub
mov
jae
mov
inc
in
mov
mov
push
xor
xor
mov
in
dec
in
jmp
and
xlat
mov
cmp
aam
xor
aad
pop
mov
jge
cwde
pushf
adc
push
cmp
and
jne
pop
dec
(bad)
mov
lods
mov
inc
mov
out
ins
fnstenv
pop
pminub
xchg
or
inc
retf
shr
ffreep
jne
or
pop
imul
pusha
pop
aaa
ss
dec
out
sub
ja
lea
shl
bsr
jp
out
(bad)
lods
mov
out
push
and
fdivrp
pop
(bad)
sub
adc
pop
cdq
sub
mov
mov
xlat
aad
loope
icebp
lds
sub
out
stc
pop
xor
add
outs
or
pop
sub
repnz
fnstenv
mov
cli
in
rol
lahf
push
xchg
sub
rcr
aad
inc
arpl
sbb
mov
test
push
test
out
(bad)
movs
cmp
out
movs
leave
cmps
out
jns
bound
cmp
lock
pop
lds
xor
loop
adc
mov
add
enter
cmp
pusha
fstp
push
retf
bound
adc
dec
or
jle
pop
ds
stos
cli
xor
ss
(bad)
jbe
les
ins
jle
jp
xchg
pop
repz
pusha
fadd
lods
mov
mov
out
popa
loope
mov
(bad)
xchg
jne
xchg
xor
mov
cmp
push
test
sti
add
cdq
mov
mov
or
retf
xor
aam
mov
hlt
sbb
test
in
out
gs
js
dec
test
outs
dec
push
jecxz
mov
and
stc
scas
(bad)
fld
outs
push
cli
mov
push
push
or
adc
xorps
push
adc
dec
arpl
xchg
xchg
add
int
stos
inc
jb
nop
jmp
repz
jge
stos
mov
es
xchg
mov
std
sub
popa
leave
inc
outs
dec
fnstenv
push
(bad)
sub
push
pop
jmp
jecxz
call
xchg
nop
ret
inc
and
lods
pop
mov
inc
das
jg
mov
(bad)
adc
rcr
rol
sbb
push
sub
movs
jmp
cmp
sbb
dec
aad
pop
jmp
ret
sbb
adc
pusha
out
pop
js
pop
test
and
enter
shl
scas
rcl
sbb
shr
xor
cmp
mov
or
arpl
cmp
cmp
push
sub
sbb
(bad)
adc
ins
cli
sar
pop
pop
lods
mov
xchg
inc
lods
in
adc
ins
xchg
pop
push
lds
push
ret
push
mov
adc
aas
popf
cmp
sti
(bad)
data16
sbb
sbb
or
aaa
xor
push
dec
inc
add
push
sbb
pusha
inc
push
shl
xchg
xor
in
lea
in
push
cs
xchg
jge
adc
xchg
sub
push
lds
adc
adc
mov
fisub
pop
stos
inc
ds
jne
scas
arpl
mov
call
out
adc
adc
enter
mov
inc
xor
dec
mov
mov
hlt
icebp
pop
mov
fadd
pop
data16
mov
mov
ret
add
sub
je
xor
mov
push
push
and
cmp
lods
outs
mov
retf
outs
dec
jg
icebp
in
in
xor
pop
shl
dec
loopne
inc
xchg
cmp
outs
jae
mov
cmps
pop
out
adc
jnp
xor
or
retf
pop
xchg
sub
jne
adc
mov
xchg
sub
(bad)
or
xchg
pop
push
test
adc
jge
test
mov
cmp
push
mov
and
or
mov
push
ret
dec
mov
cmp
mov
cld
movs
imul
sub
add
stos
ins
test
movs
in
shl
mov
clc
movs
ja
icebp
cmps
cmp
or
in
sbb
or
mov
jae
movs
jae
jmp
cmp
push
cli
and
sub
or
fiadd
adc
mov
xchg
and
shl
enter
mov
imul
sub
adc
ret
mov
dec
dec
jge
or
add
adc
outs
or
aaa
xor
push
jo
data16
test
mov
or
pop
inc
mov
lahf
std
in
add
sbb
dec
aam
data16
popa
add
mov
movs
sub
cmp
cld
xor
sbb
int3
push
fnstsw
es
add
sar
stos
addr16
mov
sahf
sub
xchg
adc
les
js
test
ret
sbb
ins
ss
lock
out
sahf
daa
ret
fs
(bad)
push
leave
dec
cmp
xchg
rcr
inc
or
xor
push
test
sub
jg
jb
lds
mov
ins
arpl
adc
push
in
dec
cmc
inc
fincstp
cmp
arpl
adc
stos
sbb
dec
fwait
mov
sub
frstor
retf
ficomp
xor
xlat
or
mov
jmp
or
xor
mov
pop
fsubr
iret
mov
js
adc
mov
sub
mov
or
and
xor
(bad)
loope
es
add
cmp
pop
ins
sub
xchg
or
not
adc
and
pop
push
pop
ret
mov
mov
fadd
imul
idiv
lock
clc
shl
out
pop
adc
inc
rcr
fist
ja
xor
stos
mov
lea
cmp
or
rol
mov
loope
inc
sub
push
aas
xchg
loope
jae
outs
iret
int
ja
les
push
adc
pop
mov
sbb
jl
sti
bound
jns
lea
mov
cdq
xchg
mov
or
add
adc
ds
cmps
pop
aas
mov
xchg
das
pusha
inc
fstp
and
ds
sub
lods
repnz
cmp
ret
adc
retf
iret
nop
sbb
sbb
inc
cld
jnp
retf
jmp
mov
add
inc
inc
mov
lods
ins
mov
pop
outs
mov
retf
shl
int3
leave
mov
mov
inc
inc
sub
fs
jae
mov
cli
ret
(bad)
out
fcomp
jb
ret
(bad)
sti
add
mov
push
inc
cmp
dec
and
lahf
xor
cmp
push
outs
les
dec
jns
xchg
adc
fisttp
dec
scas
mov
test
movs
mov
cli
add
mov
dec
test
shl
psrld
push
jb
or
push
iret
shl
add
adc
xchg
cli
mov
lds
fs
and
call
jne
sar
mov
push
mov
fisub
jge
lds
pop
xor
popf
sub
int
rcr
sar
dec
adc
jnp
ds
mov
jnp
or
push
es
pop
scas
pushf
retf
out
dec
mov
mov
fadd
mov
xor
add
push
rcr
sub
data16
sti
dec
xchg
pop
sbb
ins
add
dec
imul
sub
adc
(bad)
xlat
iret
scas
ficom
pushf
jp
fistp
xor
retf
aam
int
test
jg
cmp
(bad)
scas
clc
xchg
mul
(bad)
xor
loop
sub
(bad)
fidiv
out
mov
adc
ins
adc
lea
js
dec
retf
push
loope
pop
mov
and
add
je
sub
call
das
je
call
sar
sbb
mov
xor
iret
mov
movs
dec
icebp
iret
int3
jecxz
push
jp
adc
cs
xor
push
pop
pop
cmp
sub
adc
inc
fild
test
test
xor
out
mov
pop
hlt
pop
xchg
popf
lea
xor
inc
mov
fistp
cmp
fidiv
and
add
dec
jmp
hlt
add
addr16
fdivr
mov
ins
mov
adc
pop
lahf
popf
sbb
mov
lea
les
mov
push
pop
ud1
push
mov
jo
dec
ror
loopne
pop
and
push
popf
xchg
inc
push
cmp
nop
push
push
jge
setle
sub
inc
inc
retf
jge
pop
inc
arpl
js
jbe
out
dec
mov
jo
clc
mov
dec
sahf
cmp
out
jae
div
xchg
int3
mov
and
out
iret
std
rcl
stos
xchg
call
sub
push
repz
rcl
dec
mov
mov
aad
and
sbb
fstp
jmp
imul
aam
and
jbe
inc
btc
cmp
sbb
loopne
mov
pop
cmp
jmp
xor
inc
mov
jb
cmp
cmp
outs
adc
fldl2t
add
daa
xor
xchg
in
fistp
dec
pop
mov
mov
(bad)
in
pop
or
jmp
dec
sbb
daa
out
adc
iret
in
push
shl
cmp
call
jne
or
popa
pop
sub
mov
inc
rcl
jg
ins
out
push
inc
and
(bad)
nop
xchg
cmp
ror
in
or
into
sbb
outs
or
in
add
mov
mov
xchg
mov
jl
cmc
xor
imul
push
jmp
mov
stc
jne
xchg
mov
scas
push
sub
sbb
mov
or
(bad)
mov
fs
pop
aam
mov
inc
or
jg
sbb
jl
push
sbb
mov
shl
stos
aad
(bad)
es
stc
xor
fistp
outs
loop
fst
jmp
xchg
in
cmp
pop
or
mov
aad
(bad)
xchg
test
out
loope
pop
ret
outs
xchg
rol
add
and
xlat
and
xor
push
mov
add
bnd
mov
inc
push
pop
mov
jne
add
jae
das
dec
jmp
mov
jno
add
adc
les
repz
inc
sub
jno
imul
mov
adc
adc
pop
add
xchg
mov
xchg
jg
(bad)
pop
retf
test
sti
push
mov
pop
jmp
jns
(bad)
cld
stos
in
stos
js
push
fsubrp
hlt
mov
(bad)
adc
jmp
mov
icebp
fdiv
enter
xchg
or
cli
xchg
in
call
lods
push
xchg
out
(bad)
xor
fistp
pop
dec
(bad)
push
movs
neg
inc
mov
movs
pop
lds
cmp
daa
movs
aas
ds
cdq
jmp
icebp
repnz
xchg
push
adc
sub
ret
imul
xchg
mov
mov
cmp
cmc
sbb
call
pop
(bad)
mov
xchg
mov
cmp
es
shl
outs
std
(bad)
call
mov
movs
arpl
das
sbb
add
sbb
adc
or
mov
mov
test
cli
loop
mov
leave
jne
mov
movs
pop
int3
xchg
cmc
movs
cmp
cwde
ss
retf
dec
push
in
xor
cwde
sub
adc
stos
shl
jecxz
sbb
add
ins
dec
sbb
dec
in
xchg
push
nop
lahf
iret
xor
mov
jmp
in
sub
mov
pop
push
sub
jns
adc
pinsrw
lock
sub
imul
sub
(bad)
pop
cld
inc
jae
ret
nop
into
test
jp
aaa
xchg
sahf
mov
sub
xor
push
mov
stc
push
fs
adc
ficom
xor
out
lods
adc
test
and
and
jnp
loopne
retf
sbb
loopne
inc
outs
lea
push
xor
mov
(bad)
mov
xor
setne
fdiv
sti
out
add
popa
dec
call
adc
ins
ja
xchg
sahf
cs
inc
mov
mov
pop
movs
cmp
push
inc
adc
sub
(bad)
das
les
repnz
add
sub
out
out
aaa
jae
jge
xchg
shl
jne
shl
hlt
inc
adc
jmp
jmp
adc
call
pop
mov
mov
js
cmp
pop
xor
xchg
push
sub
dec
jmp
mov
inc
das
or
cmp
stos
in
pop
or
push
dec
lods
pop
mov
pop
aam
pushf
dec
loopne
pop
xchg
or
xchg
dec
imul
or
fsub
cmp
adc
fsub
js
inc
loopne
ret
inc
std
adc
and
call
aas
loope
jg
mov
outs
pop
int
or
outs
lea
and
and
loope
pop
jp
fldenv
mov
scas
inc
scas
pop
dec
ret
mul
in
inc
dec
cmp
stos
call
jle
out
mov
(bad)
cmp
jb
idiv
mov
mov
add
dec
test
enter
jnp
add
fild
je
scas
adc
jl
repz
rcl
or
ffree
pop
jne
je
jo
add
push
pop
addr16
push
pop
dec
dec
mov
pop
rcl
(bad)
cmc
dec
mov
cmp
cmp
cs
mov
movs
movs
inc
mov
out
repnz
int3
sbb
mov
jge
scas
or
jg
call
imul
cdq
sbb
push
or
pusha
neg
mov
ins
call
shr
add
sub
or
push
mov
mov
add
mov
jge
jge
dec
mov
dec
pop
or
sbb
icebp
ins
gs
jle
sbb
adc
sub
cmp
std
rol
rcr
or
push
cmc
fmul
jnp
ud0
mov
mov
lds
sti
rcl
inc
xchg
mov
inc
jb
lahf
and
sahf
lds
test
rcl
aad
outs
imul
(bad)
out
jmp
in
arpl
pop
pop
xor
stos
aaa
mov
add
xchg
add
imul
(bad)
mov
cld
out
xor
imul
inc
inc
sub
add
iret
dec
or
std
popf
mov
mov
sbb
pop
cs
sar
mov
fcomip
mov
or
fbld
bound
jecxz
push
rcr
xor
add
int3
sub
(bad)
xor
bound
ficomp
gs
inc
xor
sbb
or
sub
test
sub
mov
mov
pop
in
pusha
outs
xchg
xchg
xchg
popf
xchg
aam
mov
mov
jbe
push
leave
sub
mov
repz
inc
mov
mov
xchg
fwait
inc
ss
mov
dec
push
cld
(bad)
fcomp
je
sub
js
movs
xor
inc
pop
adc
inc
fwait
retf
ss
fstp
mov
mov
in
iret
cmps
std
jmp
jmp
and
div
xor
inc
push
loop
xchg
push
std
sub
ror
stc
inc
lods
and
loop
mov
fisubr
sub
jecxz
add
add
xchg
xor
sub
test
jl
movs
sub
sahf
push
js
out
and
or
les
cmps
cmp
test
scas
pop
rol
mov
js
ins
fdivp
push
jns
xor
mov
psubusw
icebp
jge
pop
adc
lock
adc
mov
out
hlt
scas
sub
adc
rcr
xchg
cmp
pop
push
aas
fmul
inc
mov
cli
sbb
inc
out
xchg
dec
mov
sbb
adc
jge
(bad)
test
loopne
jbe
mov
adc
or
jmp
mov
pop
xor
fstp
add
mov
loope
imul
adc
xchg
arpl
aas
popf
(bad)
enter
out
stc
jecxz
and
or
out
pop
int3
mov
popf
(bad)
leave
dec
stos
cli
mul
test
dec
mov
stos
cmc
mov
ret
mov
sar
js
adc
xchg
push
hlt
sbb
cmc
jo
mov
or
retf
add
dec
repnz
pop
pop
push
lahf
fiadd
mov
mov
dec
test
mov
dec
aad
jl
dec
in
add
inc
iret
jp
pushf
jmp
cmp
rcl
enter
dec
and
scas
dec
popa
inc
ins
mov
push
xlat
retf
xchg
je
iret
and
lea
mov
in
shr
inc
mov
jmp
imul
pop
das
and
cwde
movs
mov
xlat
rep
out
adc
sbb
xor
xor
sti
fmul
xor
fstp
cmps
aas
cmp
(bad)
sar
jno
sub
repz
adc
outs
push
or
icebp
shl
clc
mov
loop
mov
fisttp
fmul
sub
jp
sar
mov
inc
sub
pop
mov
pop
rcr
inc
push
aaa
push
loope
sbb
addr16
pop
cmp
inc
or
clc
jbe
test
shl
fisub
xchg
sub
sbb
(bad)
mov
cdq
pop
push
adc
push
mov
lds
add
fdiv
mov
mov
pop
jecxz
push
mov
jge
loop
push
add
popa
test
ins
test
cmp
xchg
mov
retf
push
add
xchg
fwait
push
mov
push
iret
dec
lahf
cdq
stos
cmp
adc
xor
mov
fadd
in
adc
mov
cmps
or
pop
ja
sub
pop
push
cmps
cmp
mov
ror
adc
ins
imul
adc
retf
into
movs
jl
outs
es
sub
push
or
cwde
das
rol
(bad)
enter
xchg
mov
loope
jge
enter
sub
xor
mov
aad
adc
loopne
enter
cmp
and
cmp
je
dec
mov
pop
mov
int3
cmp
addr16
push
cmc
mov
and
or
fs
mov
call
scas
test
and
lods
mov
dec
inc
lods
xor
sbb
enter
fist
pop
clc
pop
or
jno
clc
add
mov
inc
test
in
test
mov
or
ja
push
daa
push
xchg
mov
lods
mov
jl
dec
gs
inc
mov
sti
inc
and
push
pop
xor
jecxz
inc
rcl
(bad)
and
scas
cmp
and
pop
mov
movs
(bad)
movs
movs
mov
fbld
movs
pop
jb
pop
xchg
add
retf
int
inc
fld
inc
or
inc
mov
lahf
mov
add
je
inc
mov
rcl
nop
ret
cmp
shl
cmp
xlat
and
gs
pop
outs
out
scas
cmp
push
cli
int
mov
(bad)
xor
sub
fdivr
mov
push
mov
lahf
jge
push
xor
fucomp
mov
xor
mov
dec
sti
sbb
push
inc
push
add
jmp
adc
xchg
retf
jne
es
in
mov
cmp
outs
mov
cmp
lea
mov
push
xchg
inc
mov
lock
dec
xor
jle
aaa
inc
bound
imul
inc
sub
mov
dec
inc
hlt
imul
clc
push
loopne
dec
movs
pushf
and
add
push
arpl
pop
push
xlat
call
mov
or
sbb
mov
jmp
jae
data16
lahf
dec
mov
mov
xor
lea
adc
mov
add
jge
xchg
aas
pushf
pop
cmp
cmp
mov
mov
mov
aaa
dec
sbb
test
and
stos
call
(bad)
out
sbb
jmp
fisttp
sbb
add
and
or
sbb
xor
dec
xor
adc
jmp
add
out
and
dec
jle
jl
cmp
mov
mov
into
cwde
ret
lahf
in
aam
call
jg
bound
scas
std
dec
(bad)
mov
aas
and
or
jecxz
bound
stos
sbb
jns
add
mov
push
or
or
push
push
mov
pushf
pop
and
(bad)
fcom
ja
ds
fdivr
push
(bad)
dec
fwait
mov
sbb
dec
mov
dec
rol
inc
mov
fisubr
sub
sbb
pop
push
xchg
cmps
fdivr
fdiv
lahf
cmps
test
jne
and
add
xchg
(bad)
neg
inc
jnp
push
pop
lahf
cmp
add
sub
call
in
jecxz
hlt
jl
cmp
out
adc
das
aad
pop
mov
mov
push
mov
push
ret
push
sbb
push
mov
inc
xchg
rcl
mov
jb
ss
xchg
jno
cli
add
lea
ror
mov
mov
out
jp
scas
cwde
xchg
mov
adc
mov
jle
mov
lahf
pop
mov
xchg
je
mov
neg
mov
mov
sar
mov
mov
push
in
fwait
mov
adc
test
mov
add
and
neg
ret
loop
mov
nop
out
das
sbb
push
or
adc
and
mov
mov
arpl
(bad)
loop
jb
ss
pavgb
mov
sbb
fild
popf
or
push
xchg
xchg
shl
cmp
call
arpl
in
dec
cmp
dec
(bad)
call
shl
xor
mov
sbb
inc
shl
hlt
push
mov
inc
pop
pop
mov
mov
cwde
jno
mov
dec
pop
push
xchg
xor
xchg
inc
in
mov
ja
push
add
(bad)
xlat
xor
call
stos
or
add
ins
fisttp
sti
mov
scas
out
add
fld
std
mov
bound
jne
loopne
mov
push
arpl
xchg
aaa
rol
or
mov
xchg
add
or
ins
mov
sbb
add
out
daa
and
ds
daa
aad
jno
int3
out
fld
ret
cmp
inc
enter
mov
adc
and
dec
mov
test
mov
adc
xlat
add
aaa
popf
mov
sbb
fdiv
shl
adc
icebp
sti
pop
sbb
outs
pop
outs
jb
lods
mov
popa
sub
div
jno
mov
das
mov
jns
scas
dec
icebp
ins
mov
xor
xchg
lock
pop
sbb
ss
mov
pop
fdiv
inc
int
inc
dec
outs
gs
sub
gs
and
adc
push
pop
pop
inc
xor
xchg
inc
icebp
outs
in
xchg
bound
mul
out
jge
(bad)
push
outs
dec
wbinvd
dec
aad
xchg
fcom
retf
sub
std
int3
mov
xchg
fisttp
dec
jle
xlat
mov
dec
mov
and
pusha
(bad)
aas
addr16
push
andnps
mov
mov
ins
imul
fisubr
jle
xchg
pop
add
fistp
jbe
(bad)
hlt
cmp
test
mov
pop
mov
pop
add
and
xor
rol
out
add
push
xor
popf
popw
stos
leave
and
cmp
sub
sub
lea
fcom
fwait
sbb
(bad)
adc
lods
cwde
test
jmp
xor
fs
movs
mov
xchg
in
xchg
mov
(bad)
ficomp
jecxz
push
xor
xor
gs
fstp
call
stos
push
sbb
sbb
sbb
jg
push
call
std
cmps
push
pop
inc
adc
loop
cdq
sahf
out
mov
(bad)
fnstcw
and
or
pop
cmps
cs
rcl
sar
aad
js
jne
xor
mov
stc
mov
ins
and
aas
xchg
std
inc
fild
movs
jecxz
lahf
cld
retf
jle
jb
jg
(bad)
aad
adc
cmps
push
fisubr
fisttp
cld
mov
gs
xor
mov
sub
js
iret
sub
cwde
aad
sbb
sub
mov
jp
imul
out
adc
or
sub
stos
inc
(bad)
movs
jbe
in
mov
and
xor
pop
popf
aas
pop
test
mov
scas
inc
outs
jb
test
das
jae
mov
mov
mov
mov
mov
push
das
out
retf
out
stos
mov
add
add
mov
mov
fnsave
cwde
ja
add
cs
add
and
inc
or
pop
paddq
psrld
movs
or
je
jmp
add
jge
cli
and
mul
je
add
xchg
clc
mov
mov
push
jl
mov
jno
pop
fs
fistp
lgs
(bad)
(bad)
or
leave
xchg
cwde
mov
sbb
jecxz
sub
adc
or
xchg
push
push
jne
dec
xchg
mov
icebp
int
add
cmp
fcmovnbe
ret
adc
push
retf
pop
dec
add
retf
call
push
cmp
push
push
jnp
push
cmp
icebp
push
clc
sahf
mov
(bad)
cmp
xchg
cmp
das
rcl
adc
sub
mov
jle
xchg
shl
mov
mov
rcl
clc
je
add
mov
cld
mov
xchg
dec
in
scas
cmp
ret
int
stos
cmps
mov
pop
jns
sbb
inc
(bad)
imul
xor
(bad)
pop
int
xchg
std
dec
out
fadd
pop
gs
adc
out
aaa
mov
dec
adc
adc
lea
push
pop
fsubr
mov
retf
js
mov
daa
ror
and
sar
mov
cmp
fild
push
loopne
fcmovbe
mov
fcmovbe
aam
dec
out
or
fnsave
nop
xor
aam
dec
and
mov
xor
mov
push
xchg
jge
jp
dec
sub
leave
in
mov
test
out
movs
outs
cmp
mov
adc
or
or
dec
iret
cmp
jnp
push
adc
pop
jmp
sbb
add
mov
dec
jecxz
int3
xchg
push
mul
enter
gs
push
ins
stc
div
enter
and
pop
retf
jbe
pop
fs
fldenv
shl
cmps
sahf
pop
dec
rol
dec
pop
cs
test
jp
into
cld
rcl
aam
test
pusha
das
mov
test
sahf
push
iret
xchg
or
adc
add
lock
xchg
pop
push
int
int3
fdiv
pop
push
test
xchg
xor
xor
xor
call
pop
outs
sub
stos
pop
and
ds
push
push
add
jmp
add
fidiv
leave
sbb
fistp
jge
out
les
xchg
adc
shl
xchg
mov
repz
retf
push
(bad)
jbe
(bad)
push
pop
neg
hlt
lods
mov
mov
inc
cmp
mov
mov
cmp
mov
adc
pop
fndisi(8087
push
cmp
or
popf
mov
paddsb
jge
in
fidiv
dec
mov
out
cmp
in
mov
gs
jl
aas
test
pop
pop
fiadd
sti
repnz
push
jmp
mov
ss
dec
das
jns
sbb
sub
jnp
in
movs
mov
xor
js
call
and
gs
out
call
jge
fcmove
call
mov
cmp
jnp
push
mov
push
cmp
call
pop
(bad)
jmp
idiv
adc
lds
push
and
xor
sub
push
sbb
test
add
adc
cld
aam
pop
cmp
push
rcl
xlat
adc
imul
fcom
rcr
rcl
sub
scas
sub
ret
mov
xchg
rcr
jbe
daa
mov
and
or
shl
fimul
jne
shl
push
add
jge
push
in
loop
mov
cld
add
js
push
int3
inc
aam
add
push
fdivrp
pop
ret
dec
add
sti
lahf
ins
iret
sbb
shl
jns
test
sahf
xchg
(bad)
ror
pop
loope
inc
mov
dec
jl
push
mov
pop
xor
inc
(bad)
mov
and
push
mov
add
inc
(bad)
in
sbb
ds
out
test
or
xor
adc
mov
adc
enter
cmp
inc
out
test
mov
jecxz
push
cmps
or
aad
mov
into
ins
mov
addr16
call
sti
outs
jae
js
jae
and
bound
test
test
push
sahf
sbb
add
enter
(bad)
sbb
fdiv
aad
xchg
lods
aaa
loope
call
push
cmp
mov
je
rcr
outs
jmp
push
mov
jnp
dec
(bad)
out
out
cmps
fimul
inc
push
movs
cmc
mov
mov
scas
fwait
push
icebp
mov
and
mov
push
ror
data16
call
jmp
sbb
mov
push
aas
ret
sbb
push
das
jcxz
rcr
fild
je
loopne
mov
mov
(bad)
addr16
(bad)
ret
xchg
aaa
cmp
sbb
cmp
pop
xor
mov
xchg
dec
movs
mov
popa
push
and
adc
stos
fbstp
shl
inc
iret
leave
ja
ja
push
cmc
jecxz
push
xor
xor
xor
faddp
mov
inc
lock
jg
inc
sub
push
jnp
pop
ret
ror
mov
sahf
mov
test
xor
fsub
add
ret
int3
fbld
add
pop
pop
ja
mov
cmp
xchg
push
mov
sub
fidiv
adc
mov
mov
xchg
sub
ss
cs
push
dec
es
cmp
sbb
cmps
add
sbb
xor
add
pop
mov
cmp
popa
add
inc
lahf
sub
hlt
adc
in
(bad)
push
adc
mov
out
jge
xchg
jge
mov
mov
sbb
mov
jmp
and
imul
add
mov
cli
fsubr
jne
cmps
xchg
rol
rcr
xlat
and
push
cdq
sub
dec
dec
sub
jnp
cwde
inc
push
in
fdiv
aam
jae
add
imul
cli
shr
aas
xor
jae
stos
arpl
stc
jnp
sub
inc
xor
call
mov
daa
(bad)
outs
adc
mov
sub
ficomp
jne
jns
add
pop
idiv
bound
call
cmp
and
and
iret
sbb
mov
inc
xchg
jmp
xor
mov
sbb
xchg
lods
fadd
cmc
loopne
fsubr
nop
iret
cmp
cmp
and
pop
shl
mov
cmp
(bad)
call
cmp
out
loop
or
cli
add
test
add
scas
test
pop
xchg
xor
xor
aad
and
dec
add
and
xor
icebp
mov
sbb
xor
inc
loope
sbb
repz
jo
add
imul
pop
sbb
and
ret
fld
bound
shr
sbb
test
dec
inc
mov
imul
(bad)
in
push
add
loopne
je
xchg
shl
dec
stos
adc
add
cwde
out
mov
mov
jbe
pop
jl
push
mov
cmp
adc
cmp
popa
xchg
in
push
mov
aas
adc
in
in
push
cs
sbb
pop
ud0
lods
sbb
adc
sbb
in
push
cli
or
shr
enter
mov
cdq
mov
mov
sbb
repz
dec
xor
fsubr
xlat
mov
add
push
push
fimul
push
mov
pop
ror
mov
sub
mov
mov
inc
xchg
repnz
pop
xchg
(bad)
lock
movs
sub
shr
retf
mov
cwde
stos
xchg
mov
lahf
sbb
ins
mov
sbb
lldt
fidiv
mov
cld
arpl
jecxz
xchg
jl
mov
fwait
and
mov
repz
pop
or
repz
sbb
nop
or
and
bts
(bad)
stos
je
ins
mov
pop
adc
cmp
jo
(bad)
stos
add
mov
jp
sub
loope
js
xlat
mov
adc
in
movnti
fs
sbb
push
adc
adc
jne
sub
pop
inc
mov
cli
scas
ins
stc
push
add
mov
dec
das
jmp
jb
add
mov
push
adc
cmp
hlt
cli
retf
aaa
mov
nop
and
xchg
mov
ret
sbb
pop
cmp
ret
push
or
(bad)
cli
clc
inc
inc
lea
xor
rcr
adc
ds
ficomp
inc
and
push
mov
fsub
rol
enter
adc
aas
xlat
inc
div
lds
popa
sbb
imul
pop
or
outs
or
out
ja
mov
and
mov
repz
or
outs
call
outs
push
and
cmp
ds
in
dec
push
pusha
xor
aas
icebp
jnp
mov
xchg
sbb
jl
xchg
iret
and
popa
ror
jecxz
xchg
push
push
xchg
mov
mov
mov
loop
mov
push
inc
sub
fild
sbb
aaa
cmps
jmp
(bad)
daa
pop
lods
lock
dec
dec
imul
sub
cli
jle
sahf
ror
add
les
popa
xchg
cmps
mov
mov
aaa
leave
mov
inc
or
das
out
gs
mov
cli
sbb
fcmovu
test
xchg
xor
mov
pop
and
push
loopne
jmp
int3
jno
inc
mov
jl
jae
repnz
repnz
out
cs
or
and
cmps
pop
fst
pusha
jb
repz
dec
and
pushf
divps
push
pop
outs
or
je
(bad)
or
or
iret
adc
or
cmc
or
pop
xchg
mov
imul
pop
pop
ja
lock
pop
pop
push
mov
fcmovnb
push
xchg
dec
sbb
out
pop
jnp
into
stc
mov
or
ins
mov
ss
dec
and
sub
pop
repz
jmp
add
iret
adc
sbb
add
sub
loopne
adc
xchg
xchg
int
jmp
and
rol
cmp
outs
mov
mov
and
xchg
das
push
fdivr
ret
test
sbb
jbe
les
rcr
push
xor
mov
call
(bad)
add
pop
mov
and
mov
cmc
push
movs
out
jb
icebp
aam
(bad)
loop
repnz
lds
pop
push
jae
add
xchg
ret
lock
(bad)
sub
mov
pop
iret
push
fs
fsubr
dec
sub
mov
mov
idiv
shl
cmps
pop
xor
or
pop
js
shl
add
pop
push
jle
jnp
mov
sbb
neg
cld
push
je
mov
xor
add
jl
lahf
adc
aad
sub
sti
outs
stos
sbb
mov
dec
pop
es
adc
lea
xchg
xor
lods
inc
and
test
clc
adc
ret
mov
or
iret
sbb
fs
jp
mov
adc
and
jne
ds
adc
mov
sub
add
add
push
push
shr
cmp
xor
push
das
(bad)
adc
loope
mov
pop
add
cmc
(bad)
arpl
mov
in
pop
add
jo
adc
mov
das
jno
pop
(bad)
mov
add
adc
fs
add
dec
push
iret
adc
push
outs
mov
add
sbb
pop
pop
pop
and
push
xor
add
lods
mov
sub
push
sbb
inc
xchg
aas
retf
(bad)
mov
pcmpgtw
xchg
jns
clc
(bad)
sub
inc
fwait
aam
jge
and
je
inc
dec
pushf
or
out
push
xchg
ret
punpckldq
add
or
and
pop
adc
jmp
into
cld
fldenv
aad
daa
add
loop
jae
lods
adc
add
add
push
dec
lods
inc
pop
jmp
jne
ss
cmp
xor
movs
push
xor
std
in
call
ror
std
jl
mov
js
xchg
leave
xor
icebp
pop
and
inc
je
imul
je
adc
or
or
or
xlat
cmps
addr16
or
xlat
(bad)
aas
push
xchg
imul
mov
mov
dec
fwait
dec
jmp
mov
sar
call
pop
stos
out
or
shl
pop
dec
mov
xchg
mul
dec
loopne
cmp
mov
mov
in
mov
jne
mov
mov
popf
pop
adc
xchg
or
jnp
and
mov
or
inc
imul
out
andnps
push
push
sub
dec
lods
push
dec
xor
add
sbb
ja
jg
inc
call
fild
cmp
push
icebp
sub
stc
adc
sbb
aaa
cs
mov
pop
cmp
test
cmp
mov
add
add
out
dec
in
push
xchg
adc
aam
call
and
mov
xchg
sbb
cmp
movs
fiadd
mov
push
xchg
push
inc
fnstcw
sti
out
pop
vpsubw
pop
rol
nop
push
shl
jo
retf
mov
jle
das
push
jle
out
(bad)
adc
cdq
fldcw
je
mov
pop
mov
leave
push
push
ss
inc
jmp
loopne
int3
cmps
jb
dec
fistp
shl
adc
in
movs
xor
ret
test
and
xor
scas
sub
push
sbb
data16
inc
jne
xchg
fnstsw
pushf
daa
test
imul
adc
push
pop
push
and
in
ret
int
and
add
sahf
js
jmp
int3
dec
fyl2x
adc
xchg
outs
push
jl
dec
jmp
mov
add
out
pop
cli
inc
jge
mov
xlat
mov
std
pop
sub
push
mov
mov
lds
xchg
inc
jl
lahf
scas
push
rcl
jle
lahf
aaa
fidivr
movs
nop
not
jmp
and
loop
int
mov
jae
and
pusha
push
inc
jmp
and
pop
ds
pop
inc
popf
cmp
xor
enter
add
adc
movs
rcl
pop
ds
in
or
mov
add
sbb
pop
nop
sbb
div
sub
sub
loope
outs
test
mov
enter
std
enter
sub
mov
scas
je
fimul
inc
leave
in
push
retf
rol
mov
push
mov
test
xor
mov
les
push
and
std
lods
mov
js
adc
jne
pop
dec
int
xchg
push
pop
(bad)
cmp
imul
mov
cld
cwde
mov
xchg
mov
ins
pop
lds
mov
ficom
(bad)
mov
push
not
mov
cmp
xor
mov
into
jle
or
jb
jmp
lds
or
mov
ror
ret
push
or
(bad)
xlat
ror
mov
dec
js
sbb
push
pop
hlt
jecxz
and
lock
fs
fs
dec
jmp
push
mov
and
pop
rol
retf
loop
inc
pushf
cmp
and
jnp
or
mov
xor
xor
pop
mov
adc
inc
dec
sbb
scas
jecxz
fidivr
inc
iret
cmp
pop
mov
mov
sbb
dec
jb
and
ins
jo
jae
or
mov
push
cwde
(bad)
sub
add
cmp
inc
lods
lock
aas
lds
jmp
loop
mov
inc
and
dec
sar
xchg
adc
je
call
mov
or
inc
sub
cmps
jmp
ins
cmp
aad
arpl
xor
jl
cmps
push
das
adc
jge
xor
push
cmps
xlat
test
adc
or
sbb
dec
jecxz
rol
push
jne
fisttp
lock
retf
jbe
out
pop
pop
and
sbb
mov
mov
jmp
cmp
mov
cdq
arpl
jno
add
call
mov
inc
arpl
xchg
(bad)
out
xchg
adc
inc
jno
fcom
out
pop
mov
scas
fisub
push
icebp
test
add
ds
dec
gs
and
dec
add
into
push
lock
xor
iret
aad
pop
inc
fisub
imul
mov
popf
mov
shl
dec
(bad)
aad
dec
fbstp
jl
mov
cmp
aaa
rol
mov
mov
mov
mov
push
daa
or
and
iret
cli
xor
inc
xor
fnsave
and
es
fwait
dec
leave
call
xchg
and
in
push
fiadd
add
int3
mov
sahf
or
fsubr
cld
push
jbe
daa
sub
xor
lods
fadd
test
das
cmc
repz
test
mov
idiv
cmp
mov
in
out
(bad)
jmp
or
daa
jne
xchg
mov
test
jge
stc
ins
and
adc
arpl
out
bound
outs
popa
pop
mov
sbb
jnp
mov
addr16
int
loopne
push
jbe
test
popa
mov
sbb
(bad)
test
pop
repz
es
stc
cmp
or
rsm
popf
xchg
fdiv
jg
sar
ror
repz
pushf
jmp
push
mov
sahf
mov
aaa
ins
or
sbb
push
mov
push
daa
xor
out
pop
jmp
test
sub
sti
rcl
pusha
mov
rcl
push
fdiv
test
mov
push
jae
jno
push
mov
inc
lahf
mov
and
int3
inc
icebp
push
test
pop
out
or
push
ins
les
test
loopne
jo
sbb
aam
mov
pop
and
adc
jnp
(bad)
cmp
and
repnz
add
ja
retf
and
retf
leave
and
or
adc
popf
retf
cli
xor
adc
ret
dec
movs
mov
xchg
adc
or
push
jmp
call
push
outs
mov
mov
ror
movs
repnz
addr16
cmp
jo
xchg
mov
mov
neg
push
(bad)
lahf
pusha
pop
mov
ins
(bad)
int
dec
dec
adc
jns
(bad)
xor
and
xchg
mov
mov
fmul
lods
inc
cmps
add
sbb
sbb
pop
test
mov
dec
push
and
test
push
adc
pop
test
adc
xor
ret
push
xor
mov
pop
pop
sahf
out
pop
retf
rol
pop
dec
fwait
in
xchg
adc
pop
test
push
add
mov
inc
cmp
xadd
fisub
pop
push
sub
sbb
sub
xchg
mov
and
call
or
mov
test
cdq
outs
jecxz
ret
leave
push
test
sub
dec
cld
xchg
je
aaa
adc
mov
xchg
in
rol
das
aaa
or
(bad)
xchg
cmp
pop
ja
rol
dec
jb
jno
xor
pop
in
pop
cs
or
mov
mov
cld
test
or
std
push
seta
repnz
shl
enter
cmps
sbb
adc
jno
imul
adc
psubsw
mov
pop
ins
push
cmp
push
out
jnp
mov
and
push
out
shl
push
ja
pop
sub
jne
pop
in
nop
xchg
xor
fs
sti
mov
or
pop
clc
out
sbb
clc
add
inc
and
(bad)
in
push
add
dec
mov
sub
jl
inc
js
jae
sbb
add
cmps
push
sbb
mov
and
dec
sub
lahf
dec
scas
jg
outs
loopne
rcl
mov
dec
sbb
jno
std
fmul
and
push
pusha
mov
or
fld
mov
out
sbb
push
out
clc
scas
in
jae
imul
xor
scas
cmps
mov
icebp
dec
adc
push
dec
hlt
adc
ins
movs
in
hlt
mov
cmps
jecxz
into
(bad)
pop
mov
js
xchg
mov
sub
sti
je
(bad)
fld
ffree
rcl
(bad)
pop
rcl
dec
mov
loop
sbb
jns
ins
mov
lock
add
retf
mov
mov
jne
cmc
jecxz
aaa
and
xchg
dec
push
push
fcos
push
lods
mov
pop
fistp
push
(bad)
sar
(bad)
dec
aas
mov
jg
(bad)
ins
scas
add
jbe
sbb
cmps
loop
push
in
cwde
xor
mov
inc
ins
loop
mov
jle
jae
les
cmp
cmp
mov
cs
adc
xchg
inc
add
or
mov
aam
icebp
sbb
xor
push
(bad)
mov
addr16
inc
jne
stc
test
(bad)
and
pop
mov
ss
test
out
xor
sub
int
inc
jmp
ins
xchg
scas
jl
std
push
xor
es
cdq
push
scas
(bad)
sti
scas
jo
mov
mov
scas
or
scas
adc
daa
push
adc
movs
mov
fld
and
int3
jmp
in
adc
lahf
push
and
jo
movs
mov
or
jae
pop
mov
xor
out
das
cmp
cmp
shr
pusha
loope
mov
dec
jns
clc
aad
adc
scas
stos
inc
jnp
faddp
cmp
pop
dec
ficom
in
xchg
aas
sub
add
ins
in
je
sar
xchg
les
push
in
aam
mov
xchg
or
mov
sbb
xchg
stos
aaa
out
arpl
(bad)
fcom
sub
out
mov
jbe
pop
mov
enter
lock
dec
pop
(bad)
push
fisub
sub
leave
stos
add
jle
out
js
in
cmps
sti
push
mov
add
mov
mov
fdivr
xchg
out
pop
mov
shr
sub
repz
hlt
pop
out
adc
xchg
repz
pop
out
inc
sub
jecxz
iret
js
add
(bad)
out
ret
stos
sar
sub
xchg
and
das
pop
add
mov
idiv
inc
adc
pop
jb
mov
out
in
mov
(bad)
ds
pop
pop
stos
cwde
mov
(bad)
and
push
sbb
test
xchg
popf
and
(bad)
sbb
push
inc
fsubr
lock
cs
cmpxchg
mov
(bad)
out
hlt
dec
cwde
bnd
rcr
cli
jnp
jmp
adc
sub
sub
pop
mov
or
mov
adc
jo
loop
mov
ret
add
dec
sub
jmp
mov
call
test
cmp
adc
ins
xor
push
mov
call
test
dec
fnstcw
sbb
std
mov
enter
pushw
add
out
adc
mov
xor
(bad)
lahf
mov
aad
and
test
mov
sahf
imul
ret
or
cmp
inc
lea
mov
adc
fimul
sub
lahf
and
pop
ins
mov
mov
mov
dec
xor
mov
jne
inc
in
or
ss
into
mov
rol
outs
cdq
stos
jmp
inc
fstp
imul
mov
sbb
or
cmps
ds
xor
lods
out
jmp
iret
jp
call
shl
sbb
sbb
inc
das
xor
fstp
lahf
out
cs
into
dec
jg
xor
or
fadd
xchg
sbb
push
inc
mov
push
cdq
and
(bad)
fsubr
adc
jns
jmp
lods
or
sbb
jp
stc
aad
lock
call
mov
vmwrite
sub
fcom
add
cs
pop
shl
jbe
stc
cmps
test
(bad)
inc
cmp
mov
xchg
add
cwde
test
loop
cmps
dec
pop
dec
jns
or
inc
jecxz
fist
in
out
cld
pusha
movs
shr
and
or
imul
f2xm1
sbb
arpl
pop
mov
outs
icebp
lea
push
cmp
mov
or
dec
imul
into
dec
test
and
outs
push
sbb
fdivr
push
cwde
cmp
jl
jg
add
ret
mov
test
adc
ficomp
inc
mov
inc
inc
(bad)
and
fs
call
dec
ror
(bad)
rcr
fwait
int
jmp
test
pop
push
pop
sub
rcl
aaa
loopne
out
in
cwde
das
pop
xchg
lock
inc
jecxz
jl
stc
jae
jmp
sar
lock
cmp
sbb
(bad)
aaa
std
(bad)
add
adc
cs
aas
inc
cli
push
stos
dec
xor
jmp
sub
sbb
mov
xchg
xor
scas
pop
bound
or
jbe
daa
xchg
dec
int
inc
(bad)
stc
cmp
xor
test
xchg
pop
cmp
mul
or
fnsave
or
outs
dec
and
jo
mov
push
dec
fsubr
loopne
fwait
ja
pop
xchg
pop
mov
cdq
or
mov
xchg
xor
lds
xchg
jle
iret
mov
mov
test
outs
push
clc
shl
bound
jge
ins
dec
xor
test
jmp
xor
xor
add
sahf
mov
fwait
out
fld
or
shr
stc
push
inc
int
(bad)
sbb
push
sbb
xchg
xor
cmp
js
data16
dec
xor
push
inc
fimul
(bad)
in
cmp
sahf
mov
ja
test
imul
inc
inc
outs
stos
stos
or
mov
xchg
das
sbb
add
mov
bnd
xchg
jge
sub
stos
xlat
adc
ds
mov
sbb
jno
scas
inc
jp
gs
jl
mov
mov
jae
inc
push
push
mov
mov
adc
mov
inc
push
and
pop
loope
push
clc
das
sbb
jmp
mov
and
xchg
add
in
leave
cmc
xor
sub
pop
mov
cmc
adc
mov
(bad)
arpl
push
outs
xlat
aaa
fmulp
fsub
and
je
inc
addr16
shl
adc
fidivr
mov
(bad)
xchg
imul
push
lock
inc
movs
or
cmp
push
and
call
and
iretw
jb
loope
or
push
push
ss
(bad)
clc
xor
idiv
jp
jnp
xchg
adc
inc
pop
lea
aad
outs
push
mov
out
mov
ds
in
mov
(bad)
xchg
cmp
(bad)
movs
sub
mov
sub
out
sub
xor
or
jbe
loopne
dec
lods
adc
cmps
pop
xchg
jg
mov
das
outs
(bad)
shr
rcl
inc
jp
out
out
repz
cmps
retf
in
cmp
sar
out
(bad)
jnp
jbe
out
push
dec
pusha
and
out
ret
mov
aas
bts
jb
cli
adc
push
out
xchg
ret
lahf
add
icebp
inc
ret
xor
inc
jbe
repnz
movs
ins
movs
push
pushf
fsubr
arpl
inc
mov
adc
mov
jl
mov
lahf
mov
in
les
pop
bswap
dec
retf
or
jl
retf
add
add
mov
jns
push
pop
movs
xchg
jae
jecxz
pushf
mov
out
add
dec
pop
cld
pop
retf
and
mov
fld
std
lods
mov
lds
fimul
mov
mov
and
xor
and
push
adc
lds
mov
dec
jbe
imul
mov
xor
iret
jmp
adc
aas
and
ret
mov
jle
push
ins
(bad)
push
cmp
lds
data16
fsubp
cwde
and
in
sub
adc
jle
add
xlat
pop
icebp
and
mov
pop
dec
repnz
jmp
out
lahf
fucomp
adc
out
pop
iret
push
test
sbb
call
stos
jl
pop
pop
or
sub
inc
pop
popa
sub
daa
push
jbe
or
and
div
les
mov
mov
ret
test
out
xchg
imul
stos
dec
lea
and
mov
lods
mov
loope
push
pop
stos
xchg
les
add
in
push
mov
out
mov
jg
neg
les
(bad)
imul
dec
sar
dec
test
in
lods
add
dec
sbb
fadd
iret
repz
mov
mov
mov
inc
ins
icebp
xchg
aas
jb
dec
aam
mov
loop
leave
cmp
jl
add
inc
push
add
or
pop
inc
into
outs
inc
js
dec
mov
add
mov
fdivr
sti
or
call
ror
aam
lahf
pop
sub
xor
xadd
or
test
loope
js
sar
lock
pusha
cmp
cdq
jge
mov
mov
pusha
je
mov
and
outs
shr
push
clc
out
push
sbb
jne
xor
fcomp
jb
sbb
shr
ror
cld
jne
lahf
cmc
sahf
popf
rcr
push
iret
scas
pushf
int3
push
cld
mov
jl
pop
mov
repnz
push
int3
mov
(bad)
dec
sti
out
push
mov
push
das
pop
fimul
gs
popa
popf
mov
call
cwde
dec
mov
rol
out
or
push
mov
mov
push
cwde
fs
dec
and
fisubr
leave
in
pop
mov
sub
push
lahf
add
loop
mov
mov
outs
pop
inc
push
sub
mov
retf
inc
(bad)
in
xchg
push
cdq
js
arpl
adc
xchg
jg
cmp
je
jne
mov
adc
rcr
pushf
cs
cmp
cld
sub
fild
out
inc
mov
loopne
dec
in
push
sub
sbb
ret
xlat
push
outs
dec
mov
sbb
dec
pop
add
loopne
mov
xor
out
shl
dec
les
jb
mov
or
call
xchg
js
cdq
or
sub
cmp
outs
xchg
je
icebp
(bad)
cdq
push
sub
and
mov
ror
inc
mov
imul
mov
push
arpl
sub
and
push
in
loop
pop
jmp
inc
lods
mov
lea
ret
xchg
daa
xchg
jno
outs
adc
xor
test
test
imul
xchg
dec
xor
stos
or
jnp
sub
in
mov
dec
ret
dec
out
mov
repz
jo
xor
sbb
jo
scas
repnz
and
ror
aaa
and
adc
xchg
add
fs
sub
and
aam
cmc
sar
pop
retf
setge
xchg
mov
push
repnz
frstor
fdiv
and
data16
or
xor
mov
retf
std
pop
inc
lahf
pop
dec
add
jp
sbb
gs
addr16
jne
or
jge
xor
xlat
inc
popa
out
push
ins
and
mov
xor
and
mov
sti
pop
jecxz
lock
fstp
hlt
inc
push
cs
ss
sbb
push
inc
vmovdqa
(bad)
daa
pop
add
(bad)
xchg
dec
cdq
push
mov
cmp
adc
jg
jg
dec
sbb
push
xchg
adc
out
sub
jnp
outs
add
cmp
sub
push
inc
iret
addr16
mov
addr16
repnz
repz
or
mov
sbb
dec
sbb
jmp
fsubr
mov
ret
jp
jle
cmp
icebp
retf
(bad)
mov
push
xor
mov
jp
loope
cwde
es
inc
inc
and
pop
out
sbb
xchg
adc
add
inc
jns
sbb
enter
sets
sbb
or
dec
mov
imul
xor
std
adc
repz
(bad)
xlat
ja
inc
xor
cmovb
out
dec
sbb
dec
sbb
xor
sub
mov
ret
pushf
sub
adc
sbb
(bad)
loope
or
add
ins
jne
ficomp
cmc
mov
inc
call
loopne
movs
xchg
mov
test
add
ds
mov
leave
dec
fidiv
pop
jmp
stc
sub
cmp
jg
out
push
mov
aaa
(bad)
out
mov
sub
call
pusha
test
sar
add
xchg
fwait
dec
scas
enter
bound
movs
in
mov
pop
jae
fcom
popa
dec
dec
or
retf
mov
pop
cmp
jl
jne
inc
popa
jb
mov
mov
pop
repnz
rol
mov
in
(bad)
xchg
in
jmp
inc
jecxz
xchg
jp
daa
sbb
cld
inc
or
pusha
mov
es
jns
cmps
sub
push
aam
xor
add
addr16
lea
inc
pop
ret
pop
icebp
mov
icebp
(bad)
shl
pop
(bad)
cs
icebp
scas
cmps
push
cmp
test
loop
mov
and
adc
xchg
aaa
jb
test
out
sbb
ret
jb
aam
(bad)
repnz
cli
mov
mov
dec
mov
dec
fcom
mov
out
mov
sub
loopne
in
arpl
add
push
mov
ret
or
adc
and
mov
cmc
xchg
and
stc
push
xor
inc
test
stc
fdiv
test
fidivr
and
add
popa
mov
lock
lea
add
cli
pop
stos
gs
retf
add
jp
jmp
mov
loopne
imul
(bad)
adc
pop
scas
dec
or
(bad)
cs
ret
sub
repz
jns
adc
adc
clc
sbb
inc
xchg
ins
popa
mov
cmps
test
mov
mov
aas
add
jne
cmp
test
inc
rcl
dec
xchg
ja
mov
in
fisubr
fld
jecxz
and
add
mov
leave
mov
jno
ja
pop
jp
aaa
out
fld
add
add
sub
test
pop
jno
sbb
fist
stos
push
jle
dec
data16
jl
lea
ja
mov
das
outs
dec
movs
outs
outs
xchg
cs
jne
pop
mov
jmp
mov
inc
dec
xchg
inc
jg
xchg
in
sbb
jmp
inc
push
(bad)
mov
cmp
(bad)
fisubr
test
push
or
dec
jo
mov
jne
jecxz
aam
jno
lock
jp
xor
mov
mov
ja
push
sbb
mov
dec
mov
popa
dec
fs
inc
retf
test
es
pop
loope
stos
mov
std
jmp
sbb
dec
cmc
fist
cmp
outs
push
mov
pop
or
iret
jl
cdq
sbb
repz
pop
sbb
inc
pminub
bound
mov
xchg
push
sub
pop
inc
xchg
imul
sub
adc
outs
cmp
xor
aas
xchg
pavgw
dec
push
inc
rcl
push
fcmove
cwde
out
mov
fdiv
xchg
retf
aaa
fcom
push
or
xchg
jns
ins
ret
push
(bad)
in
push
(bad)
adc
cli
fbstp
push
mov
xchg
mov
in
sub
xchg
cwde
dec
cli
xor
jecxz
fs
jo
retf
stos
add
and
out
xor
cli
dec
popa
repnz
sub
hlt
push
xor
je
popa
rcl
inc
mov
ret
cli
std
aam
jae
cld
cmovle
xchg
out
int3
xchg
push
shr
mov
in
loopne
neg
cmp
and
outs
or
push
es
ret
push
mov
loop
or
mov
js
shr
fs
hlt
je
fsub
push
sahf
(bad)
std
adc
(bad)
loopne
loop
xchg
add
inc
push
sub
jl
les
hlt
ins
add
aas
loope
push
mul
ds
clc
js
inc
adc
pop
pop
xchg
and
xor
and
repz
jbe
fcmovbe
jae
popa
mov
push
xor
push
fcom
xchg
xchg
adc
aad
mov
sbb
clc
loopne
rcr
aaa
mov
jbe
jmp
fsubr
and
int
(bad)
dec
sar
cmp
xchg
das
out
bound
xor
ret
popf
mov
dec
mov
neg
and
add
cdq
mov
(bad)
ret
popa
inc
fstp
jmp
push
adc
movs
movaps
and
outs
or
mov
shl
sub
push
lea
test
mov
push
jecxz
jmp
(bad)
enter
dec
inc
cmp
dec
lea
(bad)
cmp
mov
or
add
or
clc
sub
shl
cwde
push
js
push
iret
je
js
mov
jmp
int
and
cmps
aas
add
mov
dec
stos
ret
fs
sbb
outs
je
es
call
jnp
or
stc
fst
aam
test
and
pop
xor
mov
outs
hlt
and
enter
jp
mov
add
mov
inc
sbb
adc
dec
clc
addr16
xlat
pop
xchg
test
mov
inc
push
movnti
push
xchg
add
mov
lahf
les
or
cld
sbb
jns
cli
sbb
test
fs
jmp
(bad)
add
enter
es
cs
(bad)
ror
das
aam
loopne
retf
and
cmps
sub
jb
jle
push
icebp
fimul
xor
mov
jnp
inc
jmp
aam
xor
mov
sbb
ins
dec
mov
mov
sti
mov
adc
popf
xchg
adc
mov
adc
xchg
ins
(bad)
fs
pop
dec
lds
push
push
adc
jle
mov
pop
in
stos
dec
sbb
(bad)
ins
stos
dec
sub
or
inc
hlt
cli
shl
dec
jbe
jne
(bad)
repz
add
call
aam
and
jno
shr
sub
out
pop
jmp
sub
icebp
stos
ins
mov
mov
in
mov
(bad)
mov
(bad)
imul
xchg
and
cmp
xor
xchg
pop
add
push
ret
push
not
fidivr
dec
xchg
jmp
pop
cmp
adc
lods
xchg
outs
add
loop
dec
shl
cmc
dec
iret
imul
jns
mov
add
adc
cmp
(bad)
lock
fwait
jmp
cmp
test
sbb
mov
sub
scas
jge
jp
mov
ficom
xor
dec
stos
daa
mov
cli
inc
pop
in
sub
adc
out
pop
test
and
sub
in
pop
adc
mov
sbb
add
push
aas
gs
xlat
xlat
pop
mov
retf
outs
lds
fild
repnz
pop
lods
scas
(bad)
cmp
sub
and
sub
and
cmps
jecxz
sub
pop
cwde
push
cmps
add
add
pop
xor
out
mov
inc
scas
aam
outs
mov
inc
je
sar
je
stc
fisub
ins
sub
jl
aas
aaa
mov
cmc
ret
sbb
imul
adc
xchg
xor
fwait
jmp
dec
push
sbb
inc
sti
std
sbb
push
sub
sub
mov
pushf
or
es
das
mov
test
push
push
dec
mov
push
jne
pusha
(bad)
cld
fs
jno
cwde
(bad)
pop
adc
int
ins
pushf
inc
mov
cmps
sub
add
(bad)
xchg
lahf
(bad)
(bad)
ss
mov
add
adc
xor
aam
out
push
xchg
pop
(bad)
mov
cmc
ins
out
test
xchg
xchg
cmp
repnz
mov
push
jo
jl
add
hlt
adc
pusha
xchg
pop
adc
dec
pop
pop
sub
dec
mov
int
jnp
sbb
mov
dec
mov
add
das
add
out
mov
pop
xchg
add
inc
sub
mov
jecxz
sbb
cmp
pop
jecxz
lock
test
mov
icebp
shl
fldenv
mov
sub
bound
mov
scas
inc
adc
push
cmps
jbe
push
fstp
sub
scas
mov
lods
push
pop
pop
mov
(bad)
movs
mov
test
pop
dec
sbb
into
nop
cwde
xor
dec
xchg
sti
scas
push
pop
test
or
jge
pop
mov
fdiv
mov
and
cmp
pop
push
inc
xchg
adc
ss
lea
repz
ins
mov
dec
sbb
sbb
mov
push
dec
xchg
adc
push
mov
pop
mov
inc
mov
repz
jg
dec
push
mov
pop
ins
outs
xchg
inc
loop
push
stc
ins
out
out
jle
cmp
pusha
jb
mov
cmp
fild
pop
inc
js
sbb
inc
imul
gs
in
jno
rcl
jo
and
loopne
popf
data16
lock
(bad)
pop
enter
inc
movs
adc
in
loop
push
rcl
cwde
add
and
les
adc
sub
bound
popa
or
gs
mov
sbb
sbb
mov
pop
call
inc
pop
pop
enter
lods
(bad)
jne
outs
push
int
cld
push
test
mov
jg
cmc
mov
aam
stc
popf
xchg
je
mov
mov
inc
retf
inc
rcl
stos
mov
mov
xchg
sub
ja
movs
bound
xchg
sahf
push
push
fidiv
jle
mov
pop
mov
add
stos
inc
mov
cwde
pop
xor
push
lea
pop
imul
int
jl
adc
sub
push
aad
cld
loop
inc
into
and
cwde
outs
inc
movs
and
xchg
jnp
xor
enter
fadd
sahf
in
inc
stos
rcl
cmp
rol
cmps
and
push
mov
add
mov
ss
std
jne
xlat
(bad)
adc
out
mov
popf
add
inc
out
sub
jge
mov
outs
leave
add
mov
mov
cmc
mov
mov
inc
stos
pusha
mov
inc
mov
stos
dec
or
es
aaa
cdq
out
sub
or
mov
jle
call
adc
mov
out
push
hlt
jns
fs
sub
(bad)
jmp
and
fidiv
xchg
mov
shl
out
mov
push
mov
sbb
jecxz
adc
jle
test
shl
mov
je
jo
add
test
push
lahf
cmp
shl
js
and
push
or
outs
outs
lods
pop
stos
ins
pop
mov
cmp
push
in
adc
mov
inc
rcr
and
xor
cmp
sti
and
mov
jle
or
ror
add
sub
pop
(bad)
adc
xor
add
movs
in
or
out
rol
imul
push
adc
jbe
sahf
dec
mov
jle
jmp
mov
not
sbb
sub
adc
adc
add
sub
jo
in
in
(bad)
adc
push
fisttp
out
popf
ss
xchg
(bad)
ror
enter
jns
pop
push
mov
call
sbb
and
jmp
xchg
inc
jnp
pusha
jecxz
daa
fbstp
or
mov
lea
jnp
mov
inc
std
loop
jb
add
or
push
add
ficom
dec
or
dec
lds
pop
cmp
retf
popa
fcomp
call
lds
or
sub
popfw
mov
mov
sahf
fld
add
stc
ds
mov
imul
or
sti
outs
or
jns
push
cmp
(bad)
fmul
fnstcw
sub
test
retf
(bad)
push
dec
xor
inc
in
jmp
fdivr
imul
arpl
(bad)
jne
cld
scas
jb
pushf
sub
inc
clc
stos
pop
jmp
or
and
repz
jmp
or
icebp
jae
sbb
xor
mov
(bad)
hlt
add
pop
clc
scas
mov
aas
js
clc
inc
push
arpl
hlt
jp
mov
rcl
jle
sub
pop
push
imul
sub
in
adc
fdivr
retf
pop
or
mov
aam
gs
shl
add
stc
dec
mov
arpl
rol
dec
das
mov
test
icebp
xor
pop
adc
fdiv
mov
mov
shl
fwait
xchg
cld
(bad)
in
xchg
fwait
and
inc
push
lods
mov
pop
cmps
push
test
test
les
add
push
and
inc
dec
push
jno
sub
es
pop
int
mov
sub
sbb
cmp
fsub
and
(bad)
pop
xlat
cmc
add
mov
or
scas
arpl
jmp
inc
nop
inc
adc
sub
addr16
inc
ss
ins
in
aaa
push
push
repz
popa
pop
sbb
cmp
fs
jmp
jge
scas
ret
icebp
mov
fmul
stc
mov
call
idiv
push
add
ins
adc
xor
mov
mov
outs
mov
cmps
(bad)
push
lock
xor
test
sub
cmp
call
mov
in
(bad)
fdivr
mov
xor
ss
dec
scas
das
mov
jl
push
sbb
jo
xchg
inc
addr16
push
jp
adc
cmps
mov
dec
jecxz
dec
push
cmps
xor
inc
sub
das
pop
gs
rcr
pop
out
cwde
mov
sahf
out
daa
adc
cmc
mov
mov
jns
stos
imul
scas
or
or
sbb
mov
or
not
mov
addr16
xchg
dec
jnp
loopne
test
rcr
and
add
sub
cmps
xchg
test
jbe
cli
sbb
retf
stc
aas
push
and
mov
cmp
es
fucomp
imul
jno
into
cmp
pop
jnp
mov
add
mov
je
out
fldenv
add
cmp
bound
loope
xor
fadd
rcr
or
push
jle
push
frstor
xor
stc
xlat
das
pop
rol
addr16
out
out
cmp
leave
pushf
and
push
ja
fld
pop
(bad)
not
pop
cmp
scas
mov
xor
cmp
jns
adc
add
or
cwde
mov
jnp
(bad)
mov
jne
iret
mov
ins
pop
xor
or
retf
stos
cmp
and
loopne
retf
mov
sub
movzx
jle
pop
lods
sub
jle
ret
enter
and
les
sahf
sub
(bad)
xor
test
test
pop
mov
cld
push
(bad)
jo
nop
dec
push
dec
adc
popa
cmps
(bad)
and
mov
sub
fidivr
cli
and
xor
cmp
sahf
gs
jge
or
test
aas
das
jmp
in
push
cs
inc
out
(bad)
and
in
sub
jmp
aas
ins
mov
daa
jg
push
xchg
addr16
out
jmp
cli
fcom
xor
mov
xchg
dec
cmp
cmp
cmps
mov
icebp
repz
cmc
mov
iret
mov
loopne
outs
iret
icebp
ds
into
jp
test
lods
cld
xlat
into
shl
xchg
mov
mov
(bad)
adc
loope
sahf
xor
push
dec
push
jmp
adc
imul
or
fsubr
fidivr
(bad)
jb
sahf
jmp
sub
adc
cmp
scas
pop
gs
cld
jmp
shl
fsub
mov
cwde
mov
retf
ret
mov
pop
add
mov
retf
mov
mov
xor
sar
fcom
ficomp
enter
or
fcomp
inc
push
cmp
aas
inc
push
and
mov
add
xor
jo
aas
fist
jae
cld
cld
(bad)
cli
pop
mov
(bad)
test
imul
pop
mov
mov
cmp
retf
mov
ret
lahf
pop
mov
push
frstor
cmp
outs
sti
sub
mov
div
adc
and
outs
pop
jo
mov
pop
inc
mov
adc
inc
xchg
les
outs
clc
lods
sar
add
fmul
scas
xor
xchg
mov
(bad)
xor
sbb
js
stos
rcr
into
jne
sub
aas
neg
imul
out
jmp
addr16
cwde
in
mov
jmp
push
loopne
adc
pop
inc
sahf
mov
add
ins
and
in
push
cmp
out
fcomp
xchg
pop
js
cli
into
push
fild
enter
cmp
push
inc
pusha
sub
mov
loop
sbb
cwde
cmp
pop
gs
cmps
jne
adc
xor
jae
lods
jns
clc
popf
pop
repz
add
retf
mov
hlt
adc
pop
or
jns
mov
or
jmp
addr16
aaa
sub
int3
(bad)
mov
xchg
dec
rol
mov
rol
dec
pop
mov
ror
test
shl
(bad)
(bad)
aad
jnp
call
(bad)
div
sbb
sub
repnz
cwde
pushf
lds
sub
pmullw
lea
call
jg
les
push
enter
xchg
jl
aaa
pop
sti
out
jmp
mov
mov
xchg
and
pop
xor
mov
push
mov
inc
inc
push
xchg
cdq
ja
xlat
pushf
sbb
mov
fistp
clc
jo
popa
(bad)
imul
fs
cmp
fsub
inc
out
shr
cmp
xchg
imul
mov
clc
xor
pusha
xchg
dec
add
stc
or
out
shl
rcl
sub
push
arpl
pop
jmp
ins
imul
dec
mov
iret
pop
(bad)
adc
cmps
cmovnp
aam
push
jae
ds
jge
xchg
in
or
mov
call
mov
cmp
push
sub
aas
pop
(bad)
call
loopne
(bad)
add
lock
dec
gs
test
ds
imul
int
push
add
pop
pop
cdq
cmp
dec
or
(bad)
fist
shr
fnstcw
sbb
fsub
dec
sub
pop
mov
sub
push
pop
jle
aaa
shl
and
aas
idiv
or
cmp
push
div
xor
or
scas
inc
daa
mov
not
xchg
out
inc
dec
fwait
and
shr
add
arpl
lock
inc
pop
sub
push
pop
pop
and
dec
add
jmp
leave
mov
sub
mov
into
pop
xadd
add
mov
xor
rcl
cmp
jl
jb
or
cmp
add
pop
xor
jmp
xlat
aam
xchg
rcr
push
ja
aaa
xchg
outs
cmp
pushf
cli
inc
mov
dec
cvtps2pd
xor
pop
mov
sar
movs
test
ins
mov
rol
pop
cmps
push
mov
mov
and
cmp
shl
lods
mov
push
inc
aaa
xor
sub
or
repz
xchg
nop
add
pop
push
mov
retf
mov
sub
fcom
mov
stos
lods
push
frstor
repz
rol
pop
shl
mov
rcl
hlt
jnp
es
and
xchg
stc
in
dec
mov
ss
fistp
test
and
sbb
pop
lock
scas
sub
lds
pop
loope
mov
les
jg
inc
fst
aam
lds
mov
adc
jp
jp
xor
and
fidivr
jle
push
add
jge
or
mov
in
daa
jg
inc
out
mov
in
inc
and
das
sub
mov
repz
push
mov
out
lds
inc
mov
fwait
pushf
daa
inc
in
icebp
cmps
movlps
in
mov
test
out
pop
xchg
push
nop
jmp
std
add
es
add
adc
add
(bad)
std
mov
push
cmc
or
and
(bad)
add
inc
xor
mov
mov
fwait
movs
fwait
aaa
not
dec
popf
cmps
bound
fmul
add
imul
or
xor
retf
das
enter
movs
test
xchg
nop
push
add
push
aaa
into
dec
jb
adc
(bad)
nop
call
mov
mov
test
jmp
es
adc
adc
lea
push
sbb
leave
mov
dec
cwde
pop
cli
std
mov
sahf
pop
push
jmp
mov
push
add
and
add
leave
scas
xchg
clc
inc
xchg
xchg
xor
sbb
aam
pop
(bad)
adc
(bad)
mov
in
rol
cmp
ficom
in
mov
xor
dec
cmp
call
aam
dec
push
lock
movs
pop
jnp
fiadd
xor
js
and
add
outs
mov
mov
(bad)
cmovp
xchg
pop
pop
out
inc
mov
mov
std
and
or
mov
push
jp
add
pop
retf
(bad)
adc
jmp
mov
add
aas
sbb
loopne
scas
xchg
into
add
xchg
int
mov
pop
les
fadd
lds
pop
add
push
inc
mov
scas
mov
call
fisttp
stos
cli
cmp
(bad)
jle
dec
popa
mov
into
or
es
enter
add
push
xchg
sahf
scas
daa
mov
pop
into
push
push
stc
push
add
pop
jle
mul
ror
xchg
pop
leave
loope
mov
xor
frstor
mov
sub
cmc
mov
inc
push
mov
xchg
mov
jne
mov
inc
imul
shr
xor
push
fisttp
shl
call
mov
push
test
pop
or
movs
push
pop
mov
test
pop
in
jge
mov
addr16
(bad)
sti
nop
imul
in
cli
aaa
jl
and
rcr
pusha
jmp
fimul
add
inc
sbb
add
xchg
mov
adc
and
jge
mov
scas
xor
push
jo
jecxz
out
hlt
outs
and
arpl
test
xor
xchg
cdq
or
add
mov
mov
js
(bad)
sahf
sbb
out
mov
pop
js
(bad)
cmps
sti
(bad)
cmp
push
push
sbb
repz
inc
sub
cmp
pop
or
stos
inc
push
(bad)
push
je
or
inc
test
jg
rcr
rcr
cmps
in
ret
lock
(bad)
fisub
mov
pop
mov
cmp
out
idiv
aam
xlat
loopne
bound
dec
mov
(bad)
xchg
and
das
sub
adc
outs
mov
mov
jge
call
sbb
and
or
xchg
lods
cwde
aas
sub
fwait
ins
sar
scas
jns
adc
sbb
xchg
repz
sub
mov
fild
test
push
ficomp
push
leave
fs
scas
ins
out
gs
lock
in
call
in
pop
bound
cs
xchg
or
cmp
(bad)
fist
nop
cmc
loope
sti
scas
mov
dec
pop
push
and
mov
xchg
jecxz
jg
(bad)
repz
gs
int3
pusha
xchg
jg
inc
(bad)
push
xor
add
rcl
push
jle
and
push
call
add
cmps
gs
sub
jne
adc
cdq
push
sbb
test
test
fisttp
jg
push
rcr
es
mov
sbb
lock
test
push
mov
cld
push
rep
dec
xor
loope
hlt
xlat
sub
mov
inc
(bad)
or
popa
icebp
sti
xchg
or
adc
mov
movs
iret
rcl
sub
dec
dec
aas
test
push
je
lods
cmp
jns
mov
ret
pop
jnp
cmps
pusha
inc
loope
das
popa
jle
(bad)
in
sub
aas
sar
mov
sub
les
jecxz
ret
fsub
jns
sub
push
adc
jae
shl
dec
(bad)
fsubp
lock
xchg
fadd
pop
mov
les
jge
jnp
jle
fimul
loop
fistp
mov
dec
test
ss
ss
daa
xchg
je
sbb
or
push
stos
iret
dec
test
test
push
out
cdq
add
pop
adc
mov
xor
push
sub
and
loopne
repnz
xchg
jnp
mov
sbb
lods
das
mov
fdivp
jecxz
out
dec
jg
xor
inc
push
scas
call
mov
(bad)
mov
inc
mov
add
mov
lods
cmps
xchg
fs
xchg
pop
shl
loopne
and
retf
dec
rol
xor
mov
or
pop
mov
mov
and
xchg
ret
daa
or
push
mov
sub
mov
mov
add
or
dec
add
movs
popf
out
push
in
bound
jmp
std
xchg
push
test
dec
dec
sub
jae
pop
test
mov
aaa
and
outs
dec
das
add
xor
or
xor
ret
dec
and
sub
fmul
ins
cmps
fiadd
hlt
mov
mov
push
lds
dec
out
mov
sbb
test
add
or
test
sub
mov
cmc
movs
daa
mov
add
pusha
jbe
movs
mov
inc
repnz
push
shl
fwait
push
inc
sbb
xor
mov
push
jb
cmps
rcl
sbb
out
or
cwde
loope
cmc
add
mov
push
fwait
sub
jnp
std
hlt
xor
dec
xchg
add
jecxz
arpl
sub
push
mov
sbb
and
and
ja
inc
xchg
xor
lds
mov
push
jb
mov
(bad)
jmp
das
and
enter
not
mov
shr
hlt
(bad)
adc
fadd
fst
push
dec
or
mov
push
imul
(bad)
pop
pushf
pop
xor
mov
fwait
test
hlt
mov
mov
call
dec
or
cmp
adc
sub
mov
movs
mov
dec
sbb
test
inc
mov
adc
push
push
arpl
shr
jmp
loop
(bad)
mov
adc
ins
adc
push
hlt
push
(bad)
sbb
xchg
daa
and
add
mov
out
push
mov
cmp
mov
repz
xchg
add
inc
adc
adc
hlt
sbb
xor
xchg
data16
dec
dec
call
repnz
je
std
repz
inc
cdq
mov
retf
adc
sub
xchg
xor
cld
repnz
dec
cs
pop
rol
adc
or
sbb
mov
push
sub
stos
xlat
mov
push
and
push
mov
sbb
pop
sysexit
sub
js
jb
jne
repnz
dec
jge
ins
or
mov
loop
xor
and
jo
aas
jbe
mov
push
mov
push
lods
rcl
sub
dec
push
sbb
adc
mov
es
add
fsub
adc
xchg
jae
jo
jno
sub
dec
out
cmp
sbb
xchg
push
push
rcl
clc
repz
cmps
sbb
daa
test
cmps
xchg
add
test
div
fcomp
dec
or
ds
ins
xchg
das
pop
mov
xor
les
push
mov
pushf
jno
mov
push
or
retf
mov
or
fidivr
push
mov
popf
dec
outs
pop
cmp
scas
fadd
or
fwait
cmps
pop
mov
call
sahf
inc
out
push
iret
sahf
lock
retf
xor
inc
aad
sub
mov
or
push
mov
stc
mov
pop
fistp
sbb
daa
dec
pop
xchg
sub
adc
nop
scas
push
or
jno
pop
xchg
jno
push
repz
mov
push
addr16
add
mov
xchg
sbb
xor
mov
stos
ds
cmc
scas
or
cld
call
call
fst
xchg
mov
sub
cmp
jge
add
inc
pop
mov
cmps
cmc
aad
clc
xor
jg
pop
push
(bad)
push
fcomp
sub
ja
push
ins
fild
jno
das
xchg
in
scas
ret
mov
xchg
mov
aaa
sbb
xchg
je
cmp
lods
gs
pop
add
jle
jp
(bad)
dec
and
cli
dec
rcl
pop
das
cmp
inc
js
out
sub
aam
lods
fimul
fstp
jnp
or
pop
loopne
fcos
scas
sub
(bad)
aam
cmps
jns
mov
cmp
fcomp
dec
and
loop
test
cmp
icebp
dec
xchg
leave
stos
loop
test
jb
add
inc
mov
mov
call
dec
dec
ins
mov
xchg
dec
and
movs
out
mov
push
xchg
repz
scas
in
test
loope
sub
ins
pop
xor
mov
(bad)
jp
cmp
jle
nop
dec
sub
add
rcl
ret
adc
call
add
rcl
sahf
sbb
rol
imul
data16
jp
add
push
adc
and
adc
shl
push
jge
sbb
out
jg
and
fsubr
mov
std
xchg
cld
lods
adc
mov
fadd
lods
ja
cmc
fild
int3
ret
call
in
mov
das
call
lahf
lock
mov
sub
dec
mov
mov
bound
fnsave
dec
icebp
jecxz
push
call
outs
ret
xchg
or
outs
ret
xor
or
sub
in
sub
push
and
pop
(bad)
cmp
jmp
sbb
adc
call
addr16
mov
pop
(bad)
faddp
sbb
sbb
out
inc
xor
fdiv
arpl
jp
fadd
mov
mov
cmp
pop
xchg
mov
push
xchg
push
or
xchg
fild
mov
adc
cmp
jg
out
inc
mov
mov
mov
lods
or
jg
push
sub
xchg
and
mov
das
ret
imul
push
sbb
lahf
mov
and
adc
sbb
mov
push
sub
cdq
push
rcl
xchg
bound
call
add
fwait
add
cmp
inc
cdq
jno
repnz
test
sub
push
loop
jo
cdq
pop
sbb
and
sub
stos
and
int
stos
jns
inc
clc
jbe
pusha
or
mov
jp
cmp
xlat
jnp
sub
xor
nop
in
fwait
test
int
pop
call
aas
loop
clc
jmp
jns
cmp
jne
test
dec
mov
mov
rol
adc
icebp
add
aaa
in
adc
ins
shl
cli
pop
cwde
push
push
int
aad
pop
pop
add
dec
adc
adc
jecxz
enter
push
sbb
int
ss
or
push
lods
pop
add
sahf
mov
push
jl
cmps
cmps
rcr
xor
mov
pop
mov
in
xor
add
cld
mov
xor
sti
mov
retf
retf
dec
rcl
pop
push
ror
mov
stos
push
sub
jne
sar
pop
es
ss
add
inc
aad
xor
mov
push
loop
pop
(bad)
in
ds
inc
jae
add
je
int
or
iret
add
dec
mov
jb
ds
fdivr
test
fwait
jmp
sbb
push
(bad)
aam
push
out
and
cmc
int3
cwde
xor
movs
fadd
imul
jns
in
sbb
add
mov
daa
out
sbb
lea
xchg
rcr
jae
cmp
and
push
fsubr
sbb
push
lock
and
jno
cs
adc
jno
mov
data16
je
inc
mov
jmp
add
arpl
inc
mov
(bad)
rcl
mov
cmp
mov
adc
xchg
retf
mov
pushf
(bad)
addr16
xchg
cmp
and
scas
retf
add
test
adc
fnstenv
stos
idiv
pusha
inc
psubsb
xchg
add
add
div
mov
movs
pop
daa
out
and
jmp
in
jecxz
retf
repz
adc
test
aad
neg
in
cli
cmp
jne
sbb
lds
popf
mov
jle
test
dec
std
cs
mov
cmps
push
add
sbb
aaa
mov
jg
clc
sub
test
jbe
sub
cmp
mov
add
lds
mov
iret
repz
enter
mov
xchg
mov
lods
pop
fdiv
neg
pusha
aaa
inc
push
stos
mov
jp
loop
(bad)
call
cmp
push
jo
icebp
dec
mov
out
cli
push
inc
sub
xchg
or
stos
inc
dec
das
mov
xchg
loop
test
dec
jecxz
ror
dec
dec
fs
adc
xor
fild
mov
or
jo
loopne
xor
jmp
in
aaa
add
loop
arpl
movs
sbb
enter
pop
jno
in
out
fild
mov
(bad)
ins
xchg
xor
mov
sub
shl
sbb
inc
inc
and
ret
xor
scas
sub
stos
mov
test
fisub
mov
jbe
lock
sbb
push
mov
shr
sbb
leave
test
dec
push
mov
push
and
add
mov
and
mov
add
mov
leave
xor
test
movs
mov
retf
jae
adc
cmp
pusha
sbb
jbe
movs
push
adc
dec
ins
pop
fisub
cmp
and
sbb
sar
movs
or
pop
movs
mul
jmp
xchg
dec
leave
movs
fadd
popf
pop
daa
pop
in
and
mov
sbb
call
ds
pop
mov
cs
dec
addr16
dec
movs
or
ins
jnp
arpl
or
sub
ret
xor
push
inc
leave
imul
xor
mov
mov
jb
mov
jl
mov
test
xor
ins
jp
rcr
dec
rol
pop
sbb
fidiv
mov
rol
mov
mov
and
sbb
sti
xor
adc
repz
test
cmp
jecxz
cdq
jnp
addr16
cdq
rol
mov
adc
xchg
scas
ret
adc
xor
rcr
add
sbb
push
lds
cmp
pushf
dec
fsub
jne
inc
ret
sti
ret
mov
inc
mov
pop
mov
inc
mov
mov
cmps
test
in
dec
xor
mov
push
sbb
cmp
jmp
mov
popa
faddp
outs
jecxz
mov
push
or
call
in
xchg
cmp
pop
movs
ret
retf
push
leave
mov
retf
mov
pop
out
cmp
fldcw
cwde
mov
xlat
sub
push
inc
inc
xor
pop
cld
repz
mov
pop
mov
pop
shr
sbb
add
mov
and
push
not
ss
(bad)
xchg
call
pop
fdiv
xor
ss
cmp
(bad)
(bad)
fisttp
cmps
xchg
pop
fnstenv
cmp
mov
dec
add
(bad)
stos
xor
adc
mov
icebp
pop
inc
cmp
dec
pop
retf
pop
or
pop
jg
mov
mov
add
xchg
loope
pop
sub
push
xchg
inc
sbb
fs
neg
jae
daa
sbb
scas
fdiv
cmp
pop
jl
and
sbb
lods
or
mov
mov
dec
push
test
pop
cdq
sub
push
jecxz
jmp
ins
dec
test
mov
mov
arpl
pushf
cdq
inc
retf
imul
mov
fsubp
in
xor
fwait
mov
push
ficomp
xlat
mov
inc
pop
xor
rcr
push
inc
fbstp
xchg
xchg
cmp
sub
ins
jle
ja
in
sbb
cmp
jecxz
loopne
push
push
pop
js
add
jge
std
out
sbb
pop
sub
ret
dec
push
dec
mov
movs
call
out
jb
push
cmps
(bad)
adc
sub
inc
es
mov
lods
mov
sbb
icebp
adc
neg
push
clc
retf
enter
adc
adc
xchg
jecxz
inc
aas
mul
lock
ins
pop
jns
inc
push
sub
daa
repnz
stos
les
jns
xor
mov
pop
ja
(bad)
imul
sub
pop
cmp
retf
test
inc
sub
dec
pop
lock
and
sbb
inc
sub
(bad)
call
sar
repz
in
jnp
dec
jns
or
sahf
add
xchg
add
inc
dec
push
dec
pop
jmp
lods
jbe
mov
in
nop
outs
out
jp
loopne
add
sub
enter
jle
clc
and
fcomip
cs
mov
add
mov
nop
and
dec
cmc
adc
pop
pop
aas
adc
sub
mov
mov
hlt
fs
(bad)
daa
xchg
out
movs
js
dec
retf
inc
ret
push
sbb
cmp
popa
jmp
stos
call
dec
test
cmc
popa
pop
fsub
jmp
cmps
push
push
ds
mov
mov
in
and
push
push
(bad)
adc
sub
cmc
or
jl
adc
or
pop
xlat
ss
or
icebp
and
xchg
daa
xor
cmp
xchg
xor
mov
sub
or
pop
bound
mov
jmp
repnz
popf
adc
repz
push
mov
jbe
xor
sub
sub
or
(bad)
into
jecxz
outs
push
retf
retf
dec
mov
scas
push
mov
mov
cmp
in
jle
call
dec
xchg
xor
xchg
les
xchg
xchg
mov
or
sbb
shl
mov
or
add
mov
cmp
and
jl
pop
or
xchg
jne
leave
rcr
cmp
xchg
repnz
ja
ror
outs
jg
add
(bad)
std
aas
dec
bound
inc
cmp
ss
daa
inc
dec
scas
mov
sub
jmp
(bad)
(bad)
loop
pop
mov
xor
jg
je
nop
push
sbb
jae
into
inc
sbb
and
xchg
push
push
js
retf
dec
mov
add
sbb
or
cmps
out
and
pop
and
mov
pop
xchg
(bad)
popa
cmp
out
jle
dec
jecxz
sub
pushw
xchg
pusha
adc
push
cdq
cmps
test
out
(bad)
retf
mov
push
hlt
dec
sti
xchg
in
adc
mov
cdq
pop
ja
scas
bnd
add
push
xlat
mov
cs
rol
ins
or
scas
ins
ret
jl
push
add
in
(bad)
popf
push
in
scas
test
sub
(bad)
les
or
out
xor
inc
and
fild
cwde
pop
or
xchg
sar
jne
mov
adc
dec
loopne
push
dec
push
mov
dec
add
loop
add
sub
or
dec
jnp
repnz
adc
das
iret
cmps
cs
jg
dec
or
cwde
xchg
lea
repnz
and
jmp
sub
pop
inc
push
adc
scas
clc
jne
push
iret
fidivr
fld
ret
cmps
sub
cmp
stos
mov
jmp
bound
xor
sbb
cmc
and
adc
or
out
scas
xor
call
clc
mov
stos
retf
cdq
adc
inc
js
pop
cmp
icebp
mov
adc
adc
pop
aaa
xlat
push
cld
popa
cld
pop
jbe
jo
je
dec
pop
test
dec
xchg
sub
pop
sub
frstor
popa
push
frstpm(287
adc
retf
add
(bad)
stos
pop
push
psubq
das
repnz
add
pop
ins
dec
add
xchg
(bad)
(bad)
mov
std
or
add
and
cmc
add
jg
mov
xor
jg
xchg
sub
ficomp
(bad)
cli
pop
stos
sub
shl
pop
or
(bad)
fnsave
sbb
enter
or
add
push
pop
dec
cmp
fldcw
cld
inc
js
dec
pop
lods
push
and
es
fs
sar
pop
push
push
ret
(bad)
xor
cmp
fimul
sbb
(bad)
add
rol
xchg
dec
push
es
aad
jg
rcl
or
test
sub
dec
outs
add
aad
shl
leave
mov
cmp
movs
dec
fmulp
sub
scas
mov
(bad)
pusha
popf
lea
mov
les
es
or
cli
les
xchg
xchg
push
xchg
retf
fidiv
rcr
lds
shr
inc
iret
cwde
or
xor
adc
xor
mov
arpl
ds
mov
int3
lds
icebp
and
add
jmp
test
add
adc
and
push
test
test
and
jl
outs
cwde
ret
fsubr
push
dec
aas
xchg
(bad)
cld
pop
push
pop
xchg
imul
in
jo
test
(bad)
fnstenv
jmp
dec
jl
clc
(bad)
sbb
and
dec
call
or
daa
fisub
push
xor
fsin
jecxz
adc
mov
(bad)
movs
mov
outs
inc
sbb
ss
mul
fist
addr16
xor
and
in
fnstenv
iret
unpcklps
pop
add
mov
(bad)
int3
test
jmp
or
(bad)
mov
pop
dec
(bad)
jmp
shl
in
xchg
stc
mov
inc
sub
popf
(bad)
mov
push
cmps
mov
jno
gs
pop
pop
dec
scas
jno
cwde
cmp
or
jb
cmps
scas
mov
(bad)
xlat
js
loope
scas
cmp
ja
jne
pop
pop
push
int3
sub
adc
adc
mov
mov
or
call
push
mov
sahf
cld
popf
ret
or
fstp
xor
jmp
jecxz
push
and
adc
jge
or
pop
ret
cld
repz
sub
out
std
mov
in
outs
add
xor
fist
mov
push
imul
xor
loope
mov
scas
ds
dec
sbb
mov
or
sbb
addr16
sar
push
add
popf
xchg
jg
test
fs
mov
cmc
call
mov
xor
aas
iret
or
pop
dec
jnp
movs
sbb
fwait
pop
hlt
iret
sub
xor
sti
ins
mov
cmc
cmps
and
pop
jmp
push
mov
adc
xor
(bad)
mov
mov
xor
fisttp
mov
sbb
mov
out
pop
jno
cli
dec
lds
cmps
dec
pop
sub
imul
inc
fiadd
(bad)
test
sub
sbb
xchg
adc
cwde
mov
xor
jne
mov
shl
dec
outs
repnz
push
out
push
adc
scas
ins
inc
cld
dec
test
call
mov
dec
add
retf
mov
jno
inc
mov
or
sbb
and
xor
aam
arpl
xchg
adc
sub
mov
popa
cwde
(bad)
test
mov
test
jne
cmps
mov
xchg
retf
mov
pop
mov
fnstsw
dec
icebp
pop
call
cwde
jne
bound
xor
xchg
cld
lds
mov
popa
or
popf
jmp
icebp
in
push
popf
sahf
icebp
ffree
clc
scas
push
outs
outs
pop
mov
xor
or
retf
out
xor
jmp
cdq
xor
stos
nop
mov
ss
fbld
add
jmp
or
xchg
out
push
and
xchg
shr
in
and
bound
scas
and
xor
mov
pop
adc
scas
xchg
and
pop
(bad)
mov
test
dec
jnp
pop
loop
ins
mov
repnz
bound
cmp
les
jecxz
jmp
nop
out
dec
mov
mov
hlt
jge
lahf
add
inc
add
pop
sti
mov
mov
adc
inc
sti
call
aam
pop
mov
into
dec
mov
test
mov
xchg
pop
cmp
mov
mov
inc
pop
cmp
loope
xlat
mov
adc
call
and
cmp
add
adc
xchg
pusha
vmread
add
inc
aad
mov
rcr
(bad)
pmaxub
or
out
jmp
add
mov
ds
sub
mov
adc
xchg
sub
pop
push
mov
sub
hlt
mov
hlt
inc
mov
xor
lods
jbe
arpl
adc
cmp
stos
mov
xchg
pushf
adc
inc
pop
inc
jne
retf
mov
cmp
pop
or
inc
dec
in
aam
lea
out
push
clc
cwde
inc
outs
mov
aaa
dec
inc
adc
jl
fs
pusha
repnz
ds
mov
das
xchg
mov
dec
lea
cmp
dec
outs
fcomi
bound
dec
into
out
test
cdq
lods
(bad)
pop
mov
pusha
xchg
repz
sub
adc
cld
sti
cmp
sbb
retf
(bad)
mov
out
scas
inc
adc
jno
jb
mov
mov
test
push
pushf
inc
push
mov
pop
fistp
jb
push
paddsb
int
rcr
pop
pop
mov
ss
aas
pop
xor
iret
sbb
or
cmc
imul
stos
sbb
inc
shl
je
xor
xchg
xor
rcr
push
mov
mov
sub
dec
mov
mov
add
popa
out
cmp
sub
imul
push
test
(bad)
les
dec
or
jnp
mov
jp
pop
iret
xchg
and
push
call
mov
pop
cdq
cwde
mov
or
jge
arpl
test
pop
sub
mov
dec
out
rcl
xor
inc
popa
dec
bound
fldenv
pop
or
loopne
(bad)
sub
pusha
lea
jge
push
sbb
push
retf
outs
sbb
cmc
repz
rcr
rcl
in
jns
sub
fbstp
cwd
add
js
mov
or
add
mov
(bad)
adc
cdq
cmp
add
popa
shr
mov
mov
nop
cmps
sbb
sub
outs
sbb
cmp
mov
xchg
in
shr
leave
aas
or
pop
and
dec
push
retf
dec
and
jo
mov
cmps
adc
mov
sub
mov
xchg
(bad)
cdq
into
retf
loopne
and
cmp
push
jmp
mov
push
out
sbb
fmul
or
and
fistp
inc
push
les
mov
aas
and
jo
add
(bad)
cdq
xchg
pop
add
out
ins
or
pushf
jl
aas
sti
mov
mov
push
sahf
lea
inc
clc
div
xchg
loop
dec
fbstp
out
adc
imul
add
or
jne
jb
push
lods
pop
mov
test
inc
dec
ror
and
mov
jns
in
push
lods
call
call
sub
or
movs
adc
ins
jmp
dec
ins
(bad)
pop
sbb
(bad)
(bad)
addr16
sub
or
or
adc
arpl
cmc
dec
dec
addr16
and
dec
cmc
jmp
in
outs
dec
push
jmp
daa
movs
sub
add
jg
(bad)
popa
sub
add
sbb
icebp
jl
lock
pop
mov
shl
mov
out
(bad)
push
retf
call
mov
xor
clc
repz
pop
mov
sub
adc
push
icebp
mov
push
daa
test
jg
cmc
xchg
(bad)
jge
sub
adc
aad
loop
or
xor
aaa
aam
mov
jle
xor
xor
push
lock
imul
in
sahf
and
ret
enter
shr
js
movs
sub
jae
push
daa
out
push
adc
dec
xchg
nop
or
cmps
call
add
aas
sbb
scas
sbb
adc
pop
add
inc
div
adc
enter
fisub
dec
stos
aam
and
and
mov
(bad)
push
into
xchg
cmps
enter
mov
dec
add
pop
popa
push
mov
(bad)
test
nop
push
repnz
loop
and
pop
xor
idiv
outs
hlt
in
mov
rol
lods
pushf
push
pop
retf
jle
cmps
scas
leave
aaa
movs
(bad)
and
jns
cmp
inc
push
push
xor
sahf
mov
sar
loope
(bad)
jo
cld
stc
and
pop
mov
test
jbe
pop
mul
fstp
repz
xor
mov
push
cmp
loop
rol
es
sti
pop
xor
mov
push
and
pop
push
aam
ins
sti
loopne
mov
inc
adc
add
ins
inc
ds
sbb
daa
push
xlat
int
xchg
jecxz
sahf
cmp
xor
jl
ds
retf
mul
(bad)
leave
fs
pop
xchg
mov
mov
les
inc
(bad)
jo
into
outs
jae
adc
jo
jns
mov
cmps
in
jge
sbb
in
sbb
jl
adc
movs
inc
push
and
and
mov
fsub
mov
adc
inc
(bad)
pop
bound
cwde
or
pmulhw
jmp
xor
les
std
std
push
aaa
or
push
xchg
mov
ror
cmc
push
xor
pop
stc
inc
out
pop
mov
loopne
test
sbb
inc
ror
stos
clc
or
es
cmps
aas
bnd
imul
mov
jg
loopne
cld
or
mov
(bad)
jo
js
clc
in
sbb
and
daa
test
add
adc
push
add
dec
sub
loopne
xor
cld
stc
leave
pop
aas
cmc
dec
jbe
jnp
retf
mov
call
jne
loop
mov
xchg
xchg
ror
jge
in
retf
jmp
cs
add
mov
shl
jp
xor
daa
xchg
fucompp
xlat
mov
sbb
lea
xor
ja
ret
outs
jb
inc
ja
repz
xor
mov
push
xor
scas
sbb
movs
jl
add
mov
lahf
mov
aam
push
hlt
jle
sub
xchg
aaa
in
pop
mov
(bad)
or
loopne
sub
cmp
cmp
jg
retf
mov
in
add
mov
sub
sub
pop
out
mov
mov
into
out
inc
ficom
and
clc
pop
scas
inc
arpl
push
xor
nop
mov
lahf
ret
pop
std
push
sub
pop
imul
repz
cmp
push
bound
jns
in
xchg
and
fs
push
inc
dec
cmp
cld
sub
sub
ret
mov
in
cmp
jecxz
or
xchg
push
das
jl
cmps
inc
mov
ret
inc
das
ins
dec
data16
cmp
mul
jns
test
loope
stc
dec
cmp
cmp
mov
subps
pusha
pop
es
fs
shr
pop
xor
push
mov
inc
(bad)
fcomp
dec
dec
cs
fistp
jne
inc
or
or
push
add
popf
fwait
pusha
mov
pop
or
mov
out
pusha
adc
push
jge
ins
xchg
(bad)
loopne
xor
or
inc
in
(bad)
int3
jb
retf
add
hlt
int3
addr16
icebp
or
iret
or
ret
mov
xchg
jle
cmp
mov
sub
jmp
adc
mov
clc
mov
rcl
push
cmp
out
jno
ror
sub
cwde
mov
je
loope
shl
inc
mov
mov
adc
inc
in
pushf
(bad)
cmp
sbb
call
std
popf
ins
pop
push
(bad)
cmpps
into
mov
xlat
or
dec
xor
outs
or
jae
ja
(bad)
dec
xor
or
loopne
loop
inc
push
mov
push
test
jnp
aam
and
pushf
dec
pop
mov
data16
in
cmp
mov
jg
push
push
xchg
mov
sahf
inc
push
popf
repz
xchg
call
mov
enter
xor
push
inc
dec
fsubrp
mov
cmp
jl
jecxz
pop
movs
dec
sbb
movs
pop
add
cmp
cmc
and
jmp
cli
int3
inc
cli
inc
cmp
push
jns
push
jg
stos
dec
scas
rol
adc
pop
int
and
push
pop
fidiv
hlt
pop
sbb
(bad)
pop
lock
stos
mov
add
ds
pop
jno
sbb
addr16
jg
imul
jp
xor
or
and
xchg
cdq
stc
daa
mov
add
(bad)
cmp
dec
imul
adc
sub
movs
cdq
cmp
loope
push
push
xchg
(bad)
pop
shr
or
mov
mov
mov
inc
test
lea
mov
xor
sahf
jo
clc
xlat
cmps
pop
je
test
jmp
mov
push
imul
jb
dec
pop
retf
adc
or
(bad)
dec
xor
inc
aad
lods
and
add
xchg
into
mov
cmps
or
mov
pop
sbb
outs
fs
sub
out
jmp
shl
int
jmp
out
add
aaa
inc
rol
add
or
sbb
sti
repnz
add
mov
mov
cmps
or
jg
cmp
xchg
sub
retf
xchg
aaa
sub
and
cld
(bad)
sbb
aad
cmp
add
test
pop
test
aaa
cmp
popf
mov
mov
push
pushf
add
push
jno
(bad)
popf
push
(bad)
clc
ja
das
shl
mov
sub
push
stc
cmp
xchg
lods
mov
mov
out
pop
push
pop
or
sbb
push
cmp
test
cld
xchg
adc
cmps
adc
add
inc
pop
pop
mov
cmp
adc
jl
mov
mov
in
mov
xsha256
cmps
push
jo
cmps
popf
into
push
inc
lods
clc
cmp
je
pusha
cwde
data16
xor
mov
push
xor
not
aas
pusha
xchg
sub
add
xor
xchg
cdq
movs
inc
outs
popa
test
cmps
(bad)
in
jg
hlt
stos
push
mov
add
push
outs
call
jmp
jbe
sbb
lods
xchg
addr16
mov
in
pop
xor
pop
ins
cmp
movs
sbb
imul
sub
lods
cmp
pop
fwait
aad
jo
mov
loope
xchg
xor
jg
out
(bad)
xor
popa
adc
pop
jecxz
das
sbb
xchg
jb
cmp
mov
fnstenv
mov
push
and
cs
jp
jae
and
repz
in
mov
cmp
mov
xchg
aas
pop
mov
cli
add
cld
std
xor
enter
(bad)
jnp
test
bound
shl
addr16
jae
paddd
sub
std
or
xchg
outs
das
pusha
pushf
cmps
jg
out
ins
iret
call
pop
mov
mov
je
mov
mov
or
cwde
jno
dec
stos
popa
inc
add
sbb
je
cmp
scas
xchg
pop
or
dec
outs
jb
push
lock
pop
fmul
dec
adc
popf
sbb
jo
mov
sbb
push
aaa
rol
xor
inc
mov
pop
push
sar
out
mov
movs
mov
add
int
jb
aam
xor
inc
dec
popa
mov
ja
fisubr
cmps
sub
das
dec
push
aad
xchg
cmps
lahf
je
movs
lahf
pop
and
cmps
in
sub
into
in
push
js
xor
repnz
(bad)
mov
adc
retf
in
mov
stc
cmp
jnp
and
sbb
dec
(bad)
mov
inc
cli
sbb
in
js
icebp
jo
push
jae
imul
mov
sub
cs
adc
jecxz
adc
cmp
push
clc
mov
pop
sub
pop
dec
fwait
ja
mov
(bad)
pusha
(bad)
cmp
lea
dec
outs
xchg
icebp
xchg
(bad)
add
pop
xchg
push
retf
ins
aaa
add
fmul
cdq
mov
xor
pop
into
inc
stos
mov
ja
xchg
addr16
push
or
pop
xchg
inc
jmp
push
loopne
repz
cli
loope
push
repz
mov
fadd
cdq
pop
push
fs
mov
push
sub
add
lds
push
jae
xor
dec
sbb
lahf
push
popa
fmul
xchg
cmc
fst
mov
aas
stos
aam
out
jp
add
cmps
push
xor
xor
pop
and
push
lea
mov
scas
out
pop
adc
fsub
sub
dec
cmc
test
aaa
clc
mov
mov
inc
fidiv
loopne
imul
sub
aam
adc
mov
jb
dec
cmp
jo
adc
and
idiv
and
xor
adc
imul
mov
add
push
mov
and
nop
test
in
xor
inc
fcom
mov
arpl
dec
and
pop
repnz
int3
jmp
bound
mov
dec
test
sahf
mov
enter
mov
cmp
jno
inc
dec
cmp
iret
push
cwde
xor
mov
stos
jmp
cmp
xor
sbb
aaa
out
sbb
aas
int
add
add
loopne
adc
loope
out
cmp
bound
or
cli
jl
test
jmp
out
push
stos
in
jge
mov
ss
xor
adc
mov
(bad)
rcr
std
enter
push
jb
adc
outs
dec
push
mov
aad
movs
loopne
or
inc
(bad)
sti
jp
sahf
lods
dec
je
sahf
test
inc
lock
call
test
into
inc
jb
cwde
adc
cmps
cmp
jecxz
pusha
in
je
xchg
mov
ds
adc
jae
clc
(bad)
mov
rcl
pop
xchg
mov
out
daa
das
dec
push
popa
mov
jae
add
test
(bad)
sbb
jns
clc
arpl
call
ds
ret
lds
jmp
adc
mov
bound
add
add
xor
movs
pop
mov
test
out
ins
inc
push
fdivr
fild
out
inc
mov
jae
sbb
cmp
or
mov
xlat
adc
cli
mov
or
mov
ja
outs
cmp
mov
fdivr
bound
jns
retf
sub
sub
adc
mov
sbb
repz
jo
adc
into
mov
int
sub
mov
or
repz
push
or
add
jnp
retf
mov
jb
test
scas
mov
retf
xchg
inc
dec
xor
ds
and
dec
inc
iret
sub
popa
sbb
imul
xchg
mov
cmp
je
jo
in
ins
inc
pusha
sti
push
rol
sub
jb
fs
sbb
jb
stos
scas
mov
hlt
imul
or
xchg
stc
pop
push
xchg
cmp
jo
adc
xor
push
xlat
mov
mov
lods
mov
jns
or
fs
adc
dec
or
test
sahf
pop
jbe
ficomp
sbb
dec
mov
mov
mov
js
frstor
mov
jns
pop
cld
out
and
scas
sub
in
out
push
daa
and
lods
mov
sbb
movs
out
and
call
fs
push
push
cmp
ss
(bad)
bnd
jae
(bad)
imul
mov
cwde
pop
xor
add
sub
and
rep
sbb
inc
xor
jg
xchg
out
adc
mov
std
and
xchg
mov
jl
sbb
cmp
push
adc
mov
sub
imul
xor
pop
lock
xchg
test
enter
jno
cwde
data16
retf
xchg
add
mov
sbb
xchg
rcr
adc
mov
popa
pop
movs
pop
int3
or
jle
gs
arpl
rcl
scas
adc
jge
dec
in
clc
bnd
cwde
stos
or
imul
mov
ins
hlt
inc
dec
cmp
leave
xchg
xchg
sahf
aas
jne
sub
out
or
fadd
(bad)
push
jecxz
mov
lods
push
or
cmp
mov
outs
sbb
cmp
sbb
movs
mov
xchg
cmp
shr
xor
dec
and
(bad)
(bad)
sbb
xchg
ja
aas
and
push
adc
xchg
in
pop
pop
mov
adc
aaa
std
pop
sbb
outs
pop
in
mov
into
mov
imul
dec
leave
mov
sub
cmp
mov
leave
jns
test
sbb
imul
mov
sub
lods
jo
pop
mov
imul
cmp
imul
mov
cmp
pop
adc
mov
bound
js
mov
push
cwde
test
xor
mov
xor
mov
addr16
daa
mov
sti
mov
or
cmp
mov
xchg
pop
pop
pop
mov
cs
xchg
mov
xchg
outs
xor
sbb
xor
xor
pop
ins
outs
xchg
inc
ficom
mov
jb
call
popf
dec
mov
ss
fcmovnb
push
daa
aad
test
sub
in
sub
nop
(bad)
cmc
xchg
jns
(bad)
daa
and
popa
push
div
push
mov
icebp
fmul
sbb
jbe
scas
or
pop
and
jne
cwde
fadd
imul
aaa
fmul
fimul
sbb
pop
ja
cmp
sbb
mov
je
loope
loopne
popf
hlt
retf
inc
ffree
inc
movs
dec
jmp
out
sbb
mov
pop
push
add
fistp
movs
sub
and
push
push
xchg
retf
jae
xchg
int
push
(bad)
jno
or
int
sub
push
ins
or
adc
pop
push
fs
adc
jno
xchg
and
movs
jmp
add
sub
cwde
ret
or
int
fld
cmp
(bad)
dec
mov
mov
mov
fldcw
fistp
pop
cld
cmc
leave
push
fwait
enter
jbe
dec
mov
or
stos
ins
pop
push
push
mov
pusha
ficom
mov
fdivr
or
scas
ins
mov
dec
push
xor
jmp
inc
pause
or
aas
xor
bound
js
jmp
ins
push
ins
leave
out
loopne
movs
inc
dec
sar
xor
or
dec
das
and
(bad)
mov
sub
push
sbb
sub
jp
sti
pusha
xor
cmps
adc
ss
iret
sbb
and
dec
mov
or
fidiv
pop
or
enter
add
cmc
not
fwait
call
xchg
dec
or
scas
sub
aad
sbb
in
jne
mov
mov
inc
test
sahf
jno
sub
push
retf
data16
and
mov
add
mov
inc
pop
xor
pop
in
mov
push
fisubr
aaa
push
cmps
push
adc
clc
in
outs
mov
inc
push
lods
jecxz
push
or
cdq
shl
push
int
jmp
or
mov
pop
sub
test
in
mov
xor
dec
push
mov
popf
cmc
push
sub
xor
(bad)
stos
retf
and
call
xor
lds
mov
jecxz
add
push
cmp
add
test
inc
add
ins
xchg
or
ins
mov
push
jbe
cmp
dec
mov
aas
lods
ins
lds
stos
cmps
jbe
bound
add
cli
je
cld
leave
or
adc
xchg
xchg
push
sub
sbb
xchg
loop
sub
cmp
retf
test
shl
mov
dec
enter
jo
shl
(bad)
retf
(bad)
dec
jbe
xor
xor
dec
pop
lods
xor
sti
pop
rol
fstp
aam
and
imul
sbb
in
mov
pop
jae
into
mov
daa
inc
rol
sub
jnp
std
sub
dec
nop
ret
lods
into
jnp
call
inc
fld
jo
add
cmp
xchg
lahf
cld
jo
mov
cmp
push
gs
mov
ss
push
sbb
outs
test
mov
jo
xchg
cmp
xchg
loope
inc
sbb
add
enter
push
and
js
loopne
test
out
bound
fidiv
es
cmp
fcos
out
pop
jnp
xchg
jp
hlt
aam
mov
cmps
mov
fisttp
cmp
(bad)
or
aaa
sbb
imul
stc
jle
jge
ror
xchg
mov
mov
jns
loope
mov
jl
xchg
fidivr
pop
jo
inc
inc
add
pop
adc
mov
test
inc
jecxz
jmp
push
pop
mov
jo
idiv
dec
mov
ret
inc
sub
aaa
dec
sti
mov
inc
jb
ja
leave
sbb
sbb
fdivr
jno
cmps
inc
push
shl
fs
je
shl
jbe
fwait
popf
lods
sub
out
push
sbb
dec
xor
mov
and
stos
cmps
and
movs
mov
mov
iret
frstor
sahf
cmp
inc
cmp
jmp
fst
jge
cmps
xchg
push
mov
push
mov
out
ret
mov
inc
sub
push
pop
lea
ror
xchg
rcl
push
jae
xor
repz
sub
xor
arpl
xor
sub
jp
aas
push
lds
jbe
add
call
ret
scas
xchg
adc
sub
fdivr
in
stc
pop
sub
adc
push
add
xchg
mov
sbb
sbb
into
mov
test
pop
cmc
inc
hlt
sbb
jbe
imul
sub
fmulp
push
inc
lock
mov
jnp
pop
adc
pop
cmps
loop
adc
inc
int
inc
lea
mov
loope
mov
enter
mov
nop
stos
fisttp
push
int3
dec
inc
dec
inc
sbb
sub
fstp
call
or
and
jnp
je
add
jne
adc
xchg
aam
lahf
inc
pop
ret
outs
mov
or
xor
mov
push
sub
cdq
and
adc
mov
(bad)
cmc
fadd
push
data16
cmp
enter
loope
mov
lahf
ja
xchg
xlat
ds
pop
jmp
jbe
fisttp
ja
lods
fsubr
retf
add
test
and
lds
nop
out
or
cmc
(bad)
push
je
push
loope
dec
mov
or
mov
lahf
xor
clc
jno
out
and
push
pusha
data16
(bad)
add
lods
popf
adc
dec
dec
loope
test
stos
or
loop
imul
ins
add
loope
pop
iret
mov
fcom
add
push
xchg
loopne
cwde
cwde
das
add
jno
jno
inc
cmps
dec
and
in
stos
mov
xchg
mov
in
fs
add
ins
repz
push
fidiv
rol
in
bound
dec
ror
sbb
lea
jnp
movs
iret
pop
mov
lahf
jecxz
adc
rcr
xchg
das
les
or
(bad)
jmp
pop
cli
imul
and
inc
aam
mov
out
int3
leave
xchg
adc
mov
les
sti
xchg
cmp
loopne
ins
cmps
cmps
cld
sub
adc
jp
xor
(bad)
jmp
and
lahf
jno
xchg
mov
dec
fst
mov
sub
fmul
fld
adc
pop
sbb
ins
shl
pop
add
fsub
jbe
test
inc
and
jae
mov
and
dec
sub
sub
jbe
clc
mov
pusha
adc
ss
ret
pop
push
push
sub
cdq
pusha
xchg
cmp
retf
mov
inc
mov
pop
test
(bad)
test
(bad)
call
add
rcl
daa
xchg
shl
pop
retf
sbb
fist
shl
mov
push
imul
outs
ret
(bad)
outs
mov
inc
xchg
pop
pop
lea
mov
fidivr
out
retf
add
sbb
cld
stc
cmp
dec
xor
and
stos
jmp
push
pop
cmp
jae
pop
mov
add
or
add
push
xor
xor
imul
ret
bnd
cmp
lods
inc
sti
daa
loopne
cmp
sbb
in
(bad)
das
shl
fisub
aam
clc
jb
add
mov
or
add
or
inc
sahf
sub
and
inc
daa
sub
or
test
xlat
cdq
outs
fbld
jecxz
fimul
or
mov
mov
shl
mov
out
jnp
fstp
movs
aad
in
enter
mov
or
cmc
add
jns
mov
je
addr16
cmp
leave
sub
hlt
int
add
jb
push
shl
pop
cmp
(bad)
xor
mov
mov
sub
lock
iret
das
mov
and
repnz
xchg
jnp
mov
dec
fst
sub
dec
mov
ja
inc
inc
sub
fld
pop
or
mov
into
push
(bad)
pop
push
sbb
lods
cli
mov
scas
push
pop
cmp
sub
adc
sub
push
jmp
imul
loopne
mov
rol
daa
cmp
movs
add
mov
push
sbb
aam
ss
pusha
in
std
sbb
xlat
mov
push
rol
xchg
aad
mov
mov
(bad)
jns
aad
pop
pop
add
dec
js
pop
dec
adc
fs
mov
(bad)
cld
xor
arpl
es
les
ror
or
test
cmc
lea
xchg
jmp
jb
imul
into
ja
ins
out
add
xchg
mov
(bad)
pop
cmp
data16
jmp
and
push
cmp
jb
test
stc
test
loop
int
xrelease
aad
mov
xor
stc
call
sub
ror
test
outs
mov
in
push
xchg
repz
inc
sub
mov
add
movs
cmp
dec
fstp
gs
and
mov
out
cmp
mov
and
mov
loope
push
add
jno
in
jmp
mov
nop
std
jae
push
fmul
cmps
mov
push
and
sub
ret
mov
jb
shl
jne
adc
add
fwait
xchg
push
popf
(bad)
(bad)
enter
ret
lods
jnp
sbb
stc
enter
in
loope
and
jp
cmps
or
dec
shr
mov
lea
mov
mov
pop
out
arpl
int
ficomp
mov
lock
mov
dec
iret
scas
(bad)
es
hlt
gs
data16
push
or
jg
add
adc
fidiv
jnp
adc
stos
pusha
xor
not
popa
pop
xlat
loop
xchg
cmp
aad
sbb
mov
fs
jne
cli
shl
inc
stos
lock
mov
push
xchg
das
and
mov
mov
lahf
(bad)
sbb
sub
cdq
jecxz
lods
pop
jae
and
or
es
mov
adc
sbb
mov
sub
jmp
out
addr16
mov
adc
inc
retf
movs
sub
pop
(bad)
outs
mov
repz
add
cmc
aaa
mov
test
xchg
xor
xchg
jp
push
sti
add
ss
and
or
mov
lods
add
push
cmps
add
xchg
cwde
lds
mov
jb
fisttp
or
pop
in
mov
addr16
test
test
imul
pop
dec
mov
and
ins
mov
rcl
cmp
xchg
push
ss
and
mov
test
ret
call
mov
cmp
stos
aas
in
push
or
mov
and
cmc
or
adc
mov
xor
lds
mov
call
in
adc
sbb
shl
pop
pop
cdq
outs
mov
ins
mov
ins
ins
mov
ret
(bad)
pop
add
add
jmp
cmp
sahf
pop
popf
jnp
push
pop
inc
cmp
call
adc
mov
outs
(bad)
sti
int
push
movs
push
inc
daa
jne
cmc
fcom
mov
out
add
sub
sbb
scas
fcomp
dec
mov
fild
fisubr
pop
test
inc
mov
pop
iret
test
xchg
inc
inc
mov
movs
ins
mov
mov
neg
shl
cmp
mov
or
pop
stos
mov
imul
add
repnz
ds
sti
sar
aam
dec
pop
sub
ins
pop
repz
leave
into
fistp
clc
in
add
lock
mov
jb
ret
and
int
or
mov
frstor
jns
cmps
push
add
test
cmp
shl
sbb
imul
and
fstp
adc
or
and
push
jecxz
mov
outs
in
xor
xchg
pop
ins
shl
xor
ins
fwait
loopne
iret
mov
loop
inc
sbb
jae
push
push
xchg
sahf
cmp
int
pop
sar
pop
ret
push
sub
fwait
retf
imul
in
fist
push
icebp
and
sbb
int3
jo
scas
add
xchg
leave
sti
xor
cmp
fs
hlt
inc
sbb
push
pop
leave
mov
mov
and
mov
or
popa
ror
rol
xor
or
rcr
sbb
cdq
call
jae
xchg
cld
out
shl
dec
repnz
loope
dec
jne
fistp
leave
mov
test
add
ja
out
imul
ror
iret
inc
and
(bad)
shl
mov
push
push
outs
pop
ins
mov
mov
pop
and
adc
jns
call
pop
nop
mov
sahf
ja
sar
test
stos
mov
rcr
lock
in
push
(bad)
push
or
out
call
mov
and
pop
adc
imul
imul
leave
sahf
ror
inc
sub
hlt
add
mov
xchg
popf
xchg
cmp
test
mov
int
xchg
neg
fst
rcr
rol
xor
inc
adc
lock
xor
push
mov
jl
sbb
add
icebp
mov
test
(bad)
sub
pop
or
or
cmp
jp
sar
mov
mov
jmp
pop
fs
scas
mov
push
movs
jnp
movs
pop
cli
int
cmp
sti
jnp
out
mov
std
or
pop
clc
stos
mov
lods
xchg
es
rol
cmp
cmp
and
push
adc
rcr
inc
and
dec
mov
retf
(bad)
sub
push
xchg
adc
in
fisub
cdq
mov
imul
jmp
pop
xchg
dec
fwait
je
mov
out
call
cmp
cmps
mov
mul
or
fisttp
or
mov
push
ret
repz
pop
pop
add
mov
and
or
pusha
push
push
add
pop
das
mov
mov
dec
inc
enter
and
outs
dec
(bad)
hlt
jo
cdq
cmp
xchg
adc
sub
leave
hlt
mov
je
outs
out
jne
lahf
inc
cli
(bad)
bound
daa
lock
pushf
inc
mov
test
cli
scas
pop
sub
call
inc
fidiv
and
lods
cld
js
repz
js
dec
mov
pop
jmp
addr16
mov
test
inc
data16
sbb
icebp
das
lods
push
loope
loopne
ret
js
sbb
dec
imul
(bad)
xor
mov
inc
xchg
shl
push
shl
(bad)
test
fild
sub
pusha
retf
in
or
jge
mov
and
out
inc
inc
js
cdq
cmp
jl
and
mov
aad
sub
jmp
mov
inc
and
mov
pop
add
pop
js
jmp
ret
xor
dec
add
push
fmul
cmp
add
jae
mov
or
push
add
inc
adc
icebp
outs
cmps
in
aad
jecxz
call
or
stc
xchg
sub
imul
jns
jg
(bad)
and
sbb
lea
popa
mov
push
ss
mov
sub
mov
mov
idiv
jbe
pop
daa
sub
or
in
add
pop
inc
scas
pop
adc
retf
loopne
sbb
push
add
shr
mov
(bad)
push
inc
cmps
pop
in
fimul
mov
sub
fisub
inc
jns
fisttp
mov
dec
xor
push
xchg
rcl
push
inc
inc
imul
cwde
pusha
jo
ud1
inc
push
shr
std
inc
mov
and
xor
js
lahf
cmp
test
jg
mov
push
sbb
(bad)
call
adc
mov
cmp
movs
pop
push
sub
das
adc
ret
xor
jle
dec
jae
clc
dec
imul
es
xchg
and
inc
aas
out
xchg
push
adc
pushf
pop
xlat
push
cs
push
jo
inc
mov
adc
aaa
push
pop
sub
dec
test
and
mov
pop
jae
nop
test
adc
fwait
loop
or
std
rcl
xchg
mov
mov
jp
push
mov
mov
call
in
push
pop
jp
dec
xchg
xchg
out
jns
cmp
arpl
push
jno
push
cmp
inc
(bad)
rcr
mov
cmp
and
mov
test
bound
call
jg
jo
std
push
and
js
mov
and
jo
(bad)
scas
sub
lea
mov
lods
add
push
lods
mov
jns
out
dec
adc
xchg
call
mov
aaa
in
movs
fist
outs
ja
lfs
inc
into
adc
cmp
(bad)
stos
fist
adc
imul
xchg
jno
loopne
or
sbb
push
rcr
adc
stos
mov
push
jg
xor
int
cmp
cmp
dec
and
bound
dec
sub
xor
data16
fscale
cmps
xor
mov
jp
in
in
out
xor
jne
cmp
jmp
hlt
push
test
adc
xlat
sbb
push
cli
out
jmp
xchg
fldpi
mov
hlt
jnp
adc
inc
mov
xor
loope
pop
scas
adc
ins
fcomp
call
loopne
rol
or
das
adc
adc
xchg
inc
mov
xchg
imul
push
sbb
or
adc
int
mov
nop
repz
cmp
mov
ret
ja
adc
cmc
mov
adc
push
(bad)
mov
sbb
cmp
push
sub
test
je
and
xlat
in
xor
pop
push
enter
push
mov
sub
outs
pusha
jbe
cld
imul
out
adc
and
aaa
stos
jno
cmc
push
dec
test
push
push
(bad)
aaa
movs
inc
push
fild
dec
(bad)
pop
mov
mov
test
mov
xchg
daa
jns
movs
jp
nop
ror
rcr
adc
xor
arpl
cmp
inc
xor
mov
(bad)
int
mov
repz
mov
test
aas
test
loopne
adc
add
xchg
fcmovnu
cs
inc
or
pop
pop
jo
pop
test
sbb
sbb
mov
inc
pop
and
push
cli
mov
aas
call
in
jmp
pop
and
jge
mov
mov
lods
aam
mov
inc
jg
push
icebp
adc
pop
fmul
xor
mov
rcr
or
and
sub
gs
loopne
call
dec
dec
mov
in
xor
jle
jno
push
(bad)
leave
mov
cdq
inc
out
cli
xor
add
pop
aad
xor
mov
shr
cmc
mov
mov
jo
mov
add
xor
xor
mov
cmps
push
mov
(bad)
mov
jb
fdivr
mov
adc
pop
push
add
jno
mov
mov
xor
dec
mov
jg
jmp
sbb
mov
xlat
cmp
inc
pop
movs
stos
add
neg
data16
jb
cmps
and
cs
cmp
retf
push
cmp
push
adc
cmp
cmps
popa
mov
ror
xchg
sbb
call
call
sbb
push
and
in
pop
adc
jns
pop
pop
mov
pusha
push
mov
icebp
cmp
inc
mov
sub
mov
push
push
jecxz
ins
and
adc
jbe
add
dec
fsub
cmps
test
push
aaa
mov
cli
mov
test
stos
inc
jno
dec
out
adc
retf
cs
ds
jmp
out
cld
sub
xchg
(bad)
push
inc
adc
xor
imul
inc
and
mov
sbb
mov
popa
sub
push
mov
hlt
cmp
test
jp
sbb
pusha
adc
pop
or
mov
test
sbb
and
jae
popf
jp
sub
adc
retf
fidiv
lds
xor
sub
ins
sub
sbb
test
inc
or
mul
push
mov
mov
or
sbb
sub
mov
xor
bound
lea
sub
shl
xchg
(bad)
add
push
or
xor
and
fisubr
sbb
pusha
and
sbb
fsubr
imul
xchg
sub
push
push
dec
icebp
dec
je
sar
fstp
pusha
sbb
push
lahf
and
xchg
iret
mov
cmp
adc
mov
lea
retf
int3
mov
scas
popa
mov
and
shl
and
hlt
vmwrite
add
dec
mov
mov
xchg
test
je
(bad)
cmp
or
pop
mov
call
sahf
enter
push
inc
fnstenv
ficom
(bad)
addr16
and
or
test
jmp
retf
es
jle
fcomp
stc
rol
push
jle
shl
imul
cwde
inc
jmp
mov
pop
jecxz
dec
or
out
ins
dec
xor
inc
and
popa
(bad)
jo
lods
push
gs
xchg
mov
jmp
fdivr
sbb
mov
aaa
xor
stc
mov
add
cmp
test
stc
je
jmp
adc
sub
loopne
loopne
inc
inc
(bad)
daa
lea
sub
add
inc
test
and
cmps
mov
xor
mov
enter
ret
jp
cwde
adc
push
bound
push
out
not
test
push
cli
adc
or
icebp
rol
xchg
(bad)
js
outs
jl
(bad)
and
inc
hlt
sbb
mov
movs
repz
jmp
push
pop
sub
call
popf
mov
fs
sub
sbb
dec
cmps
sti
test
add
(bad)
out
enter
mov
dec
ins
jge
mov
sbb
outs
test
pop
ret
out
aas
adc
cmp
jl
fldcw
scas
shr
das
jl
psubd
sti
adc
dec
jmp
cs
fsub
add
sar
nop
(bad)
cld
js
mov
sub
rcl
data16
in
nop
imul
mov
push
outs
(bad)
loopne
jg
jp
int3
aas
int3
ins
aam
int
(bad)
into
call
aaa
mov
push
adc
jmp
push
add
out
cmp
imul
xor
pop
adc
mov
fbld
add
jb
cli
mov
shl
into
repz
jno
sub
lahf
push
sub
jns
lds
xchg
push
add
jbe
mov
push
inc
inc
gs
push
pushf
mov
push
ror
jmp
mov
mov
xor
and
mul
or
mov
mov
int
fnstenv
and
or
mov
ja
int3
sbb
push
adc
mov
push
ror
sub
shr
mov
xchg
in
mov
push
push
cmp
pop
mov
cmp
int3
scas
xor
pushf
out
pusha
and
in
adc
aas
add
xchg
xor
push
fcomp
push
sbb
repz
(bad)
adc
sub
xchg
movs
dec
xchg
call
daa
add
xchg
add
adc
pop
pop
add
into
and
xchg
pop
sub
and
xor
adc
lods
mov
aam
push
adc
sbb
mov
jnp
aam
mov
push
ins
xor
push
mov
sbb
xchg
push
call
jp
aaa
inc
std
inc
lods
pop
inc
xchg
lock
(bad)
mov
xor
pop
adc
out
(bad)
adc
retf
(bad)
fnstcw
mov
add
and
add
sbb
dec
mov
adc
(bad)
out
inc
adc
int
cwde
adc
mov
aaa
fld
(bad)
cs
and
shr
cmp
int
jo
dec
push
fsubr
out
popa
xchg
clc
push
sbb
shr
jo
cmp
call
fisttp
mov
call
rol
inc
aam
pusha
xor
not
scas
jecxz
or
ja
or
stc
out
or
xor
sbb
push
xchg
jb
fsub
(bad)
sub
movs
xor
fucomip
sbb
movs
(bad)
and
sbb
mov
in
dec
lods
inc
pop
call
push
(bad)
out
fnstenv
push
out
xor
xor
scas
cdq
cmp
push
xor
inc
lea
fs
pop
scas
in
cmps
push
gs
aad
sbb
lss
mov
xchg
pop
xlat
test
mov
and
(bad)
xor
imul
ret
bound
xor
cwde
xor
jmp
sub
xchg
icebp
popa
call
xor
sub
test
lea
iret
cmps
outs
jb
push
pop
adc
cdq
adc
gs
repnz
xchg
cli
in
icebp
mov
hlt
repz
jo
or
scas
mov
push
fnstenv
iret
test
lods
fs
mov
imul
int3
fwait
inc
pop
pop
out
or
pop
retf
jecxz
test
imul
xchg
and
dec
jecxz
mov
bound
clc
sbb
mov
popf
nop
enter
add
adc
cdq
cmp
xchg
mov
and
sub
aas
(bad)
fistp
js
sub
int3
inc
repz
test
jp
cmp
mov
inc
jnp
inc
jne
inc
add
daa
je
es
and
loopne
nop
push
out
pop
jnp
adc
mov
ins
mov
xchg
lock
test
gs
xchg
popa
mov
ss
clc
xchg
and
jmp
out
pop
aas
rcl
imul
ja
in
pop
cdq
cmps
jb
aad
test
and
push
imul
inc
fnsave
adc
add
cwde
xor
pop
adc
daa
gs
mov
xchg
jmp
ins
mov
pop
xlat
int
das
dec
imul
les
mov
xchg
mov
std
dec
ins
sub
or
mov
int
shl
xchg
lods
mov
cmps
mov
and
lods
sbb
jmp
mov
push
push
cwde
xor
cmp
push
mov
(bad)
jo
jecxz
adc
dec
ja
adc
cs
jl
ds
push
mov
in
mov
add
xor
(bad)
xchg
rcr
dec
movs
daa
mov
call
push
xchg
call
push
pop
lods
push
adc
bound
mov
inc
jns
cld
add
jp
push
sbb
add
pop
cmp
lahf
mov
in
in
mov
test
loope
inc
inc
mov
add
(bad)
lahf
stc
cmp
popf
jmp
int3
push
mov
(bad)
pop
sbb
and
mov
inc
sahf
cmp
cmp
xchg
jmp
dec
dec
pop
mov
imul
out
jp
dec
push
iret
mov
jp
cmp
out
sub
pop
ret
iret
(bad)
push
scas
sbb
(bad)
jmp
cmps
xchg
or
fist
xor
and
test
mov
mov
rcr
daa
cmp
lds
mov
sub
pop
call
push
pop
ret
fwait
movs
xchg
(bad)
and
call
adc
outs
aaa
push
xlat
push
in
fs
rol
enter
add
adc
loope
pusha
xlat
aad
leave
shr
stc
push
push
xlat
out
jno
inc
push
popf
mov
jae
cmp
jno
clc
(bad)
stos
pop
aas
and
push
cmps
cmps
or
fadd
imul
aas
mov
mov
je
mov
and
jmp
add
stos
pop
les
cmp
cmp
push
pop
xchg
lea
adc
push
enter
and
xchg
cmp
mov
xor
xor
xor
(bad)
ficom
jb
add
push
loope
inc
cmc
adc
dec
xor
sti
cdq
inc
jle
fs
mov
icebp
dec
aad
pop
pop
mov
add
sbb
cld
push
lods
cli
mov
add
cmps
(bad)
sub
movs
loop
add
dec
jmp
jae
push
lods
mov
xchg
scas
sar
getsec
pop
stos
inc
(bad)
push
lahf
dec
retf
mov
dec
lahf
mov
sub
xchg
jbe
push
and
jae
pop
push
loopne
inc
add
push
cwde
sbb
mov
inc
inc
imul
stos
iret
mov
call
(bad)
stos
sbb
jmp
(bad)
adc
icebp
or
mov
stos
lds
xor
jg
inc
daa
dec
mov
mov
je
add
hlt
mov
(bad)
sub
dec
cdq
sbb
pop
lahf
mov
shl
mov
mov
sbb
mov
sub
pop
fidiv
xchg
popf
inc
lods
lea
data16
sub
mov
lods
mov
lods
sub
add
out
add
add
mov
add
sub
out
xor
mov
outs
out
pop
nop
shr
loope
les
cmp
push
pushf
xor
mov
cmps
add
loope
jp
xor
inc
and
adc
addr16
inc
mov
sbb
outs
jb
cwde
ret
inc
jecxz
inc
inc
test
sub
mov
jp
das
cmp
cmps
mov
xchg
push
loop
scas
outs
jae
push
mov
lods
mov
jns
aaa
cld
xor
sbb
inc
mov
sti
mov
in
pop
imul
(bad)
push
mov
jb
xchg
les
jg
sub
ins
das
dec
dec
push
scas
retf
xor
dec
xor
fdivr
xor
inc
xlat
addr16
or
ja
(bad)
pop
mov
xor
xchg
dec
pop
hlt
and
push
loope
(bad)
arpl
and
lea
imul
push
int
add
jecxz
or
ret
mov
stos
pop
lods
cmps
xor
jp
out
ret
out
cmp
mov
mov
fwait
aam
mov
fiadd
xchg
daa
test
pop
and
aas
xor
das
iret
pushf
ret
push
movs
hlt
cmp
test
pop
dec
not
pusha
neg
fild
dec
lahf
ss
out
cmp
sbb
retf
loop
pushf
arpl
bound
push
stos
jae
test
xor
pop
jecxz
out
cmp
(bad)
std
movs
mov
pop
mov
stos
mov
out
in
xchg
xchg
sbb
fcomp
sar
fucom
jbe
std
mul
dec
xor
xor
lods
sbb
rol
in
push
xchg
dec
pushf
cs
add
lock
test
fld
push
fld
sahf
jg
pop
mov
repz
pop
add
xor
ficom
adc
int3
inc
data16
jl
mov
jns
sahf
sbb
inc
ins
or
icebp
popf
leave
dec
aaa
nop
xchg
mov
or
cmp
loopne
and
aaa
xchg
jo
cld
jmp
cs
jae
xchg
sbb
dec
cmc
ror
inc
jge
test
push
outs
push
dec
dec
adc
fidiv
mov
add
retf
scas
scas
popa
adc
jnp
dec
fisubr
mov
sub
movs
stc
mov
mov
or
jbe
or
lods
pop
popf
xchg
fld
cmp
lock
cmp
loope
dec
cmps
repnz
sub
loopne
sub
pop
add
xchg
es
mov
jnp
aam
in
mov
xor
or
inc
cmp
pop
div
bound
and
lods
clc
pop
mov
dec
mov
and
clc
jmp
call
dec
mov
mov
loope
push
pop
pop
pusha
popf
addr16
nop
mov
test
mov
cmc
out
fadd
add
jno
xor
adc
cs
cs
and
sub
jnp
inc
push
push
cmp
pusha
sbb
retf
sbb
(bad)
xchg
scas
scas
pop
pop
inc
and
dec
xchg
ficomp
fwait
inc
loope
mov
js
xor
iret
mov
pop
jecxz
repnz
mov
xchg
dec
loop
mov
push
jmp
mov
sbb
retf
aam
(bad)
pop
mov
push
sbb
xor
stos
in
sar
ins
mov
jecxz
and
dec
movs
(bad)
mov
jno
adc
xor
(bad)
xor
in
mov
pop
xor
mov
daa
jp
mov
inc
jo
call
inc
outs
jns
cmps
mov
sub
or
xchg
bound
mov
ins
adc
cmp
fdivr
in
pop
das
test
pop
mov
pusha
xor
mov
or
(bad)
ins
call
ins
ja
sbb
test
mov
imul
xchg
add
pop
mov
or
push
pop
push
xor
push
push
cmps
jg
in
repz
in
cmps
in
xchg
stos
in
mov
push
pop
jbe
cmp
mov
(bad)
xor
add
sti
sahf
mov
addr16
popf
add
hlt
fadd
xor
jbe
mov
bound
scas
pop
inc
outs
sbb
rcl
lds
cwde
jno
inc
cwde
out
mov
mov
cmps
fmul
cmp
fmul
je
xchg
call
movs
xchg
pushf
mov
movs
aad
push
sbb
das
mov
inc
mov
sahf
in
jmp
mov
add
ds
xchg
gs
(bad)
out
cdq
out
pop
add
lods
into
(bad)
mov
or
test
pushf
shr
cwde
sbb
and
cmp
push
push
dec
inc
add
retf
popf
or
out
mov
loope
ja
cmp
jbe
push
jg
jae
xor
out
or
or
movs
sub
ins
add
adc
ja
or
sub
popf
cmps
pop
jno
jo
jg
arpl
dec
sbb
ror
inc
sbb
lahf
dec
ret
jo
push
adc
jle
mov
pop
movs
std
fadd
xor
jno
cmp
jnp
pushf
cli
int3
call
sbb
inc
and
mov
sbb
mov
sahf
cmps
mov
stc
mov
sar
into
sti
(bad)
jmp
and
or
rol
test
cmp
sub
push
adc
jb
sbb
arpl
mov
jnp
mov
ficom
(bad)
mov
cmp
dec
call
mov
popa
shr
mov
mov
sbb
out
outs
xchg
xchg
dec
call
add
jnp
adc
arpl
dec
xchg
loop
enter
std
pop
aas
scas
pop
cmp
scas
dec
or
adc
(bad)
fcomp
(bad)
inc
xor
mov
fidiv
push
ins
loope
xor
mov
jb
pop
pop
stos
arpl
dec
inc
push
scas
aad
jecxz
loop
adc
test
cmp
icebp
loope
ret
call
jmp
ins
ret
mov
mov
adc
and
sub
inc
or
xchg
retf
mov
fisubr
push
add
cmp
dec
inc
sbb
sub
inc
add
inc
xchg
retf
pop
add
xchg
test
adc
iret
cli
push
push
fisttp
rcl
fucomip
add
jge
mov
enter
les
call
adc
xchg
mov
mov
sub
fadd
call
add
std
mov
xchg
loope
pop
mov
ror
or
shl
mov
addr16
test
xchg
adc
jmp
cld
push
mov
jns
push
rcr
pushf
repz
xor
call
scas
jle
sub
lea
das
retf
retf
lock
pushf
enter
xchg
pop
fsub
ja
inc
sbb
xchg
xchg
adc
or
sbb
sbb
add
arpl
test
out
into
jb
inc
ret
mov
ror
adc
retf
aaa
sbb
iret
scas
(bad)
push
mov
cmc
pop
and
xor
loope
mov
jge
xor
dec
push
mov
pop
(bad)
cld
push
pop
mov
dec
push
mov
jns
add
aaa
cmp
fsub
mov
adc
enter
inc
out
enter
outs
inc
addr16
cmp
push
jl
xlat
(bad)
(bad)
sahf
outs
pop
fadd
dec
jne
push
and
ins
in
xchg
inc
mov
jmp
dec
adc
stc
add
imul
xor
mov
imul
push
pop
call
xor
mov
lahf
push
(bad)
in
push
mov
mov
cmc
fwait
je
jmp
push
addr16
ret
mov
mov
arpl
dec
repz
jns
or
lods
mov
arpl
lahf
xchg
icebp
mov
sbb
out
fidiv
mov
cmp
inc
push
pop
pop
repz
mov
jmp
nop
cmp
sub
push
pop
dec
mov
clc
push
es
mov
sbb
add
dec
test
mov
mov
in
and
ss
xchg
jle
jg
sub
ss
ja
xchg
adc
test
ja
xchg
test
movs
jns
cwde
cmp
xor
int3
scas
bswap
outs
test
push
fcom
inc
pop
pop
call
push
es
and
out
cmp
pop
stos
jg
movs
and
cmp
mov
jbe
push
stos
mov
push
adc
dec
lea
sub
pop
dec
int3
retf
(bad)
lods
in
ins
mov
fwait
sahf
and
mov
pop
push
jecxz
mov
mov
mov
jbe
clc
(bad)
aam
outs
call
mov
jmp
retf
inc
ins
jns
inc
push
xor
mov
pop
dec
fldenv
sbb
xor
int
dec
aas
daa
hlt
jb
mov
xchg
imul
xchg
ds
mov
push
mov
lea
(bad)
sub
jbe
sahf
xchg
sub
jo
add
push
xor
sub
out
mov
test
lods
out
dec
lahf
xor
pusha
mov
adc
or
push
add
cld
jle
mov
enter
jg
jae
mov
inc
shl
aaa
ins
pop
stos
dec
mov
push
scas
aas
sub
mov
jnp
pop
imul
dec
cmp
cs
mov
out
fld
aam
cmp
inc
repz
pop
inc
out
retf
and
cmp
ins
out
in
mov
mov
retf
aam
mov
jno
xor
jl
ret
push
jbe
jae
hlt
lahf
mov
shl
movs
sub
lds
hlt
cli
rol
dec
fild
cli
and
(bad)
int
jp
icebp
outs
mov
rcl
cwde
dec
push
mov
push
pop
cmp
pop
mov
ds
(bad)
imul
sti
jo
call
push
jmp
cmp
mov
push
jle
push
push
cmp
adc
dec
mov
mov
ins
fs
pop
adc
and
sbb
jl
les
add
popa
xor
pop
mov
mov
push
ror
or
shl
cmp
inc
jne
ret
fs
dec
mov
mov
into
cli
outs
daa
hlt
ret
bsr
popa
ds
outs
cli
fimul
jecxz
add
test
push
mov
sub
call
pop
mov
sar
ror
repnz
dec
cmp
jno
jmp
push
mov
jnp
mov
mov
mov
popa
mov
test
call
test
mov
div
push
adc
and
dec
push
ins
sbb
(bad)
dec
sbb
cmc
sub
test
jo
addr16
data16
push
push
pop
(bad)
repnz
push
loope
push
pop
dec
jl
icebp
jl
add
movs
add
out
stc
imul
mov
aaa
mov
inc
and
pop
js
pop
scas
sub
ss
or
es
mov
xchg
es
daa
stc
xchg
into
ret
mov
int3
daa
pop
add
pusha
jmp
aam
int
add
(bad)
mov
aam
(bad)
sub
jge
cmp
add
xchg
jge
add
cmpxchg
cmp
ja
shl
cmp
les
add
jbe
in
push
cwde
sub
out
xor
loopne
mov
rcr
es
add
jmp
nop
dec
repnz
rcr
jl
pop
dec
dec
pop
leave
inc
(bad)
test
mov
jnp
push
ret
jecxz
fsub
or
ror
mov
dec
(bad)
mov
or
mov
out
pop
pop
add
mov
inc
xchg
add
mov
push
(bad)
cmp
mov
je
pop
mov
inc
jl
add
test
fdiv
add
dec
loop
jb
jne
ins
sbb
cmp
add
fadd
push
jno
or
jmp
sub
push
and
inc
jo
mov
or
jmp
pop
lods
sbb
xor
aas
lods
sub
shld
mov
xor
shl
mov
ret
xchg
popf
sub
adc
clc
jnp
jl
in
xor
jmp
xchg
and
add
setl
jmp
adc
packuswb
(bad)
mov
dec
(bad)
inc
or
inc
jae
adc
jmp
and
outs
std
and
adc
sub
cmps
nop
cmp
or
imul
jno
mov
or
jb
popf
jmp
repnz
jno
data16
in
push
sub
jmp
push
mov
aam
in
test
mov
retf
xchg
sbb
shl
push
jp
push
sbb
and
push
dec
js
fyl2x
adc
pop
dec
dec
ins
pop
not
sbb
add
dec
call
aas
xlat
xchg
mov
adc
sar
loop
fcom
ret
aas
ficom
cld
pop
fsub
(bad)
je
pop
sub
mov
jb
xchg
mov
les
ret
inc
fbstp
xchg
dec
sbb
add
cmp
push
hlt
push
jge
out
push
pop
int
jg
jecxz
retf
jle
lea
lock
stos
arpl
ja
fcmovb
mov
add
cmps
xchg
aam
fisttp
lock
(bad)
lods
mov
ja
hlt
out
sbb
lock
inc
sub
enter
lods
sub
ja
call
fstp
jne
push
leave
aas
mov
mov
xchg
imul
mov
pop
(bad)
adc
jns
daa
fstp
loopne
popa
dec
add
sbb
jmp
jl
adc
and
inc
std
or
movs
scas
cs
xchg
inc
pop
stc
xchg
(bad)
push
push
es
mov
lea
adc
pop
push
out
push
and
sub
rcr
cmovge
sub
in
in
jno
fidiv
repz
arpl
hlt
loope
xor
cmp
cdq
fld
sbb
mov
aas
push
pop
div
lods
retw
stc
mov
call
mov
jmp
push
mov
pop
sbb
mov
aas
cld
mov
enter
scas
js
xchg
inc
push
mov
inc
ss
movs
es
into
adc
pop
cmp
jbe
int3
xchg
cmp
jg
cmp
ficom
mov
hlt
adc
push
fild
push
inc
ror
ret
lock
mov
and
call
(bad)
fisubr
jle
xor
fsub
adc
(bad)
outs
jle
adc
or
jo
xor
repz
mov
je
xchg
push
ins
cmp
add
xchg
shr
iret
mov
movs
nop
add
int3
leave
mov
dec
fisubr
push
icebp
push
icebp
inc
repnz
daa
aam
aaa
adc
popa
sar
sub
dec
sub
mov
test
rcl
cmp
and
dec
cdq
dec
pop
jb
shl
jne
lods
add
mov
pop
sbb
hlt
mov
aam
test
loop
push
stos
pop
add
or
pop
push
sbb
fwait
lahf
gs
icebp
sbb
mov
or
push
outs
pop
inc
cmp
cli
jnp
sub
pop
test
call
cvtps2pi
jbe
lods
imul
fisubr
outs
add
mov
popf
jle
fdiv
and
xchg
xor
ret
mov
pop
or
hlt
fstp
xchg
test
mul
dec
bound
adc
jmp
in
push
and
ins
ret
int3
test
jp
mov
popf
sbb
add
or
rol
shr
or
cdq
add
mov
icebp
mov
push
jne
lahf
and
jns
test
adc
scas
and
(bad)
push
adc
jmp
retf
sbb
jno
add
or
push
mov
jae
or
mov
daa
scas
dec
lahf
push
mov
ds
jne
ss
mov
sub
push
cmp
loope
dec
enter
jnp
cli
cmp
inc
in
cmp
popf
fmul
aam
(bad)
dec
mov
or
jo
scas
xor
add
jl
add
jmp
push
loope
nop
dec
add
les
mov
inc
dec
and
mov
xchg
adc
jp
pushf
cmps
and
cmp
mov
outs
push
pop
retf
data16
xchg
push
jge
xchg
ins
sub
cdq
hlt
mov
dec
add
sub
push
mov
push
mov
dec
push
loope
int
mov
pop
xor
push
fwait
xchg
jne
and
pop
pushf
jae
stos
test
jb
pop
jmp
(bad)
xlat
xchg
add
shl
jno
ret
out
daa
shr
jmp
fwait
retf
fsub
rcl
add
mov
dec
adc
pushf
sbb
in
fsubr
rol
sbb
stos
loope
inc
lods
es
mov
adc
sbb
lea
aam
test
in
sub
icebp
repz
ja
loop
test
or
or
mov
xchg
mov
repz
dec
(bad)
cdq
jmp
lahf
xchg
mov
and
adc
(bad)
pushf
push
dec
dec
popf
cmp
xchg
add
ss
jg
jmp
sbb
and
arpl
pop
pop
xchg
ins
push
outs
(bad)
cmp
js
push
push
fistp
and
xlat
add
mov
xor
(bad)
xor
cmp
aad
jbe
scas
aam
(bad)
clc
ins
jno
pop
fisubr
pushf
mov
dec
fstp
ret
fidiv
push
(bad)
mov
xchg
cmp
mov
inc
jmp
add
jo
push
faddp
mov
loop
inc
stos
jle
and
sub
ja
aas
imul
xchg
test
pushf
mov
scas
dec
(bad)
jmp
mov
bound
(bad)
cmps
xor
ror
mov
xchg
ret
popf
mov
hlt
or
mov
pop
ret
pushf
xchg
js
dec
cmp
fnstsw
or
int3
xchg
inc
mov
jne
sar
ret
dec
fisub
mov
lahf
bound
pushf
xor
(bad)
jp
xchg
push
push
push
mov
push
xchg
(bad)
sbb
ins
jae
out
push
cmps
rol
add
cmp
or
mov
les
cmps
cdq
xchg
pop
ins
inc
sub
es
retf
out
cwde
std
sub
or
sub
pop
jge
(bad)
mov
mov
add
arpl
mov
xchg
adc
popf
mov
sbb
xchg
xor
repnz
nop
fdivr
inc
jle
mov
xchg
mov
jae
dec
ja
xchg
pop
js
sahf
inc
dec
pop
cmp
dec
cmps
pop
fwait
nop
outs
or
repz
mov
or
mov
sub
in
and
inc
int
jl
xchg
pop
sbb
or
mov
stc
cwde
adc
lods
fwait
loop
inc
xor
jbe
in
and
rcr
jmp
xor
add
sbb
pop
sub
leave
adc
jge
jp
xchg
cld
cmps
in
jle
(bad)
aaa
inc
leave
jae
std
add
mov
lods
mov
std
mov
xchg
aad
push
xchg
xchg
shl
mov
cmc
ins
loopne
or
xor
dec
ja
(bad)
(bad)
adc
xor
inc
xchg
cmp
in
gs
je
xor
pushf
arpl
mov
push
lahf
mov
int3
mov
pop
jno
mov
fcom
cli
sbb
mov
add
dec
pop
cmp
test
sbb
inc
popa
(bad)
cmp
mov
or
mov
(bad)
push
inc
scas
jp
xchg
push
lea
inc
mov
repnz
xchg
push
rcl
test
mov
iret
cmc
push
jg
js
inc
xor
mov
sbb
sub
ss
cmp
stos
cmc
xlat
call
xor
dec
and
cmc
imul
add
xor
lahf
add
(bad)
std
sbb
jbe
pop
add
lods
rcl
aaa
rcr
add
ds
das
xchg
push
dec
int
add
or
sbb
lods
daa
aaa
(bad)
test
xor
push
loope
out
loope
out
(bad)
ds
call
push
add
push
(bad)
mov
inc
add
and
loopne
cmp
call
and
adc
stos
ins
aad
xchg
adc
out
ficom
dec
and
or
aad
stos
jle
ret
outs
aas
inc
test
or
aam
dec
dec
into
imul
into
inc
or
xchg
add
push
mov
mov
out
inc
inc
mov
jmp
inc
rsqrtps
in
addr16
and
in
lahf
pop
in
pop
dec
iret
push
xlat
mov
pop
shr
xchg
stos
je
jg
xchg
jmp
out
or
mov
fistp
and
stos
push
pop
dec
stos
xchg
jbe
punpckhbw
jp
retf
test
rcr
mov
dec
pop
ja
xor
or
test
loop
cmp
cld
daa
cmp
jge
xor
icebp
sahf
cmps
imul
or
div
sub
cmps
lods
clc
out
jge
sub
into
inc
daa
inc
rol
mov
cmp
jae
es
out
loopne
pushf
inc
xorps
lds
daa
movs
sub
imul
dec
sbb
mov
push
push
jmp
xchg
jl
nop
jmp
push
xchg
or
mov
repz
pop
xchg
add
iret
addr16
add
mov
lahf
imul
(bad)
jge
movs
mov
jp
das
mov
stc
xchg
xadd
mov
mov
fldenv
push
call
rol
outs
popw
mov
sahf
arpl
mov
fcomp
aad
pushf
icebp
imul
push
leave
shr
icebp
mov
pop
push
inc
pusha
mov
jg
xor
sti
jo
sar
jnp
xor
sub
ins
in
or
jle
jmp
pop
and
dec
add
ror
push
enter
neg
mov
in
call
outs
and
inc
lahf
add
jbe
jb
fidivr
scas
inc
or
push
cmps
icebp
sub
sbb
cdq
cdq
or
(bad)
mov
test
push
(bad)
pop
add
jmp
ret
sbb
mov
mov
into
stos
pop
add
daa
cwde
xchg
jmp
push
loopne
fsub
add
mov
pop
cmc
js
dec
sahf
adc
loopne
outs
imul
cmp
cmps
std
jbe
sahf
mov
pop
sub
cdq
xchg
push
pop
dec
shl
fimul
inc
stos
xor
sub
out
mov
rcl
cmp
pop
push
enter
movs
ins
and
leave
push
in
cmp
or
iret
imul
cmp
(bad)
pop
addr16
xchg
cmp
fadd
arpl
call
mov
cmp
sub
mov
into
in
cmp
fld
adc
add
push
mov
sbb
jg
cmp
cmp
mov
push
ret
xor
mov
pusha
js
pop
inc
cli
xchg
push
call
jo
push
mov
mov
out
inc
fistp
cmc
dec
lds
inc
inc
icebp
test
lahf
fsub
shr
movs
pusha
or
fwait
stos
and
ds
xchg
in
add
add
jno
in
test
call
cmovle
scas
outs
mov
mov
mov
sbb
rcl
cmp
push
fwait
xor
in
sti
xchg
in
imul
mov
scas
and
mul
out
cmp
add
pop
dec
jo
aam
sub
pop
mov
jmp
mov
ja
cdq
iret
jl
inc
and
xor
fdiv
sub
sbb
pop
dec
aas
(bad)
fdivr
cmp
iret
das
imul
xchg
ror
je
outs
mov
out
(bad)
(bad)
dec
int3
(bad)
in
sbb
and
mov
jmp
pop
out
call
or
and
dec
scas
clc
mov
xchg
test
cmps
push
jmp
xor
imul
xchg
lea
jo
jbe
pusha
push
mov
lods
pop
inc
mov
rcr
aas
ret
out
in
mov
push
test
adc
mov
jle
pop
jae
aaa
(bad)
retf
sub
fldenv
jb
dec
mov
test
sbb
inc
jae
dec
add
cdq
mov
rcl
xor
in
ror
test
mov
or
shl
icebp
mov
mov
sbb
nop
bound
js
mov
out
mov
mov
pushf
dec
scas
push
dec
jl
mov
out
inc
movs
xor
dec
adc
xor
adc
dec
mov
adc
mov
leave
hlt
test
adc
dec
jl
or
dec
dec
mov
cmp
or
jmp
mov
(bad)
mov
xor
mov
dec
xchg
cmp
push
cld
mov
dec
adc
das
out
inc
call
loope
pop
xchg
repz
mov
sbb
inc
push
pop
mov
in
lods
sub
mov
gs
pop
jecxz
movs
pusha
outs
sbb
jmp
pop
(bad)
xor
mov
push
cmp
mov
jb
test
pop
or
gs
popa
cmps
and
or
or
push
inc
loop
sbb
icebp
pop
mov
xchg
add
mov
in
shl
icebp
dec
mov
sub
adc
loope
add
or
or
dec
mov
pop
push
xchg
xchg
jp
lods
pushf
cli
loop
movs
add
repz
adc
sbb
dec
jb
cs
sahf
pop
fs
mov
or
arpl
mov
(bad)
out
dec
and
movs
push
xchg
push
cmp
neg
sbb
add
mov
adc
inc
aaa
sbb
in
dec
loopne
xchg
scas
sti
pushf
pop
fwait
jns
cmc
pop
mov
mov
push
(bad)
pop
clc
cmp
add
shl
push
gs
out
xchg
cdq
sbb
daa
jnp
sar
xchg
mov
cmp
loopne
push
ja
ja
(bad)
inc
(bad)
(bad)
jbe
mov
ja
cmp
mov
push
sti
or
cmps
mov
sbb
cmp
push
test
and
rcl
outs
test
sbb
daa
mov
mov
fmul
shl
leave
dec
dec
jmp
jbe
push
mov
mov
lahf
pushf
pusha
cmc
sub
hlt
sub
inc
sbb
cld
test
jl
mov
and
mov
in
lods
shl
cli
cdq
ds
out
mov
sbb
hlt
push
or
cmps
stos
fisttp
jns
in
dec
mul
(bad)
sti
jbe
jl
shl
pop
retf
out
std
add
daa
xchg
mov
xor
or
mov
jle
(bad)
pop
dec
inc
and
pusha
pushf
inc
cmp
ins
lods
in
(bad)
repz
pop
sub
(bad)
lock
loop
xor
mov
and
sbb
push
cld
ds
pop
in
mov
jle
inc
les
cld
mov
das
int
push
dec
add
mov
repnz
inc
cmp
out
(bad)
fcom
push
sbb
outs
in
and
std
cwde
call
or
scas
lahf
jg
outs
ficom
mov
and
jne
sbb
and
jge
cdq
les
cmp
cmp
mov
sbb
mov
(bad)
aad
nop
mov
xchg
nop
xchg
loopne
mov
cmp
sub
out
jmp
add
sub
daa
gs
push
jne
enter
shl
lock
cmps
inc
xchg
adc
dec
cld
rcl
sbb
mov
xchg
cmp
inc
push
cwde
mov
sub
xchg
mov
iret
ins
out
sbb
repz
jne
ficomp
and
cli
lea
cdq
pop
pop
sti
(bad)
fwait
nop
dec
xor
mov
mov
and
and
lds
and
arpl
enter
mov
retf
(bad)
in
lahf
xor
add
imul
ss
scas
aam
jp
lods
pushf
or
hlt
gs
adc
cli
pop
pop
icebp
sub
mov
stos
jle
sbb
leave
ror
jge
pop
jl
mov
sahf
fadd
mov
add
jo
outs
sbb
sbb
fdiv
fistp
cwde
fwait
mov
sub
push
add
fidivr
pop
inc
fcmovb
sub
test
cli
call
cmp
test
xchg
das
inc
inc
sar
pop
pop
ret
out
xor
into
test
push
ins
sbb
out
inc
mov
dec
jle
aas
mov
test
pop
mov
lea
into
xchg
leave
pop
xlat
xchg
push
(bad)
fstp
dec
xlat
push
test
push
dec
or
mov
push
xlat
mov
xchg
outs
xor
sahf
imul
push
lea
shl
pop
cmps
stc
mov
xor
scas
inc
jp
or
and
push
retf
push
mov
jmp
rcpps
(bad)
jge
pop
and
jle
xor
sub
je
out
sub
fdivr
sbb
and
ja
fwait
cmp
xlat
es
sbb
std
push
inc
cdq
push
xchg
movs
add
sbb
xchg
bts
dec
mov
fwait
sub
xchg
jg
lock
pop
pushf
jb
(bad)
cmp
sub
bound
scas
or
jmp
icebp
sbb
ss
pop
sbb
adc
shr
jb
daa
pop
dec
sub
sbb
mov
xchg
in
retf
sbb
pop
int
icebp
(bad)
inc
dec
mov
aas
jbe
sub
cmp
mov
data16
hlt
jmp
cmc
xchg
cmp
in
daa
pushf
xor
xchg
test
gs
(bad)
sub
data16
xchg
dec
mov
or
push
add
repnz
sub
test
popf
xchg
jnp
inc
and
shl
push
ror
mov
aad
loopne
cmp
inc
ins
in
imul
test
mov
shl
xor
lahf
and
xchg
popa
movs
jp
cwde
lock
imul
iret
mov
jno
mov
leave
xor
es
mov
pop
ror
(bad)
adc
cwde
mov
out
and
neg
jge
jle
push
es
pop
jmp
sti
mov
mov
adc
test
xchg
ins
xor
xchg
mov
dec
out
cmp
dec
pop
inc
and
and
dec
mul
or
call
and
xchg
sub
movs
cmp
std
lea
imul
push
and
jge
xchg
mov
cmp
inc
pushf
repnz
retf
data16
mov
test
pop
sysret
lock
mov
xchg
sbb
xor
retf
xchg
pop
jne
inc
fwait
add
jbe
and
pushf
fdiv
(bad)
ficomp
arpl
hlt
jbe
int3
push
movs
ret
mov
mov
push
sar
call
pop
add
stos
push
fmulp
ror
mov
aad
repnz
xchg
dec
jle
xchg
push
ins
outs
cmp
fstp
mov
outs
inc
loopne
jne
pop
out
out
lea
lahf
mov
inc
cld
mov
outs
(bad)
loopne
sub
push
xlat
jnp
enter
es
xor
sbb
push
xchg
xor
out
push
(bad)
iret
add
jmp
test
stos
xor
shl
das
(bad)
push
jl
stos
cmp
stos
popf
push
mov
arpl
mov
je
mov
bound
addr16
or
clc
mov
icebp
jp
gs
mov
cmp
sbb
dec
adc
xchg
ret
xor
cmc
jne
outs
sbb
jmp
or
into
mov
shl
in
dec
push
xchg
mov
add
ror
int3
and
add
push
xchg
repnz
push
mov
jmp
imul
dec
test
mov
mov
xchg
pop
or
push
lds
cld
dec
test
and
in
pop
push
xor
jmp
sar
dec
rol
or
jo
jmp
ins
scas
adc
pop
(bad)
push
sub
xor
sbb
pop
enter
or
and
jmp
pushf
xor
fsub
xor
loope
out
scas
inc
cmps
sub
out
adc
getsec
es
sbb
push
inc
mov
adc
loope
dec
pop
stos
adc
rcr
jle
lahf
in
in
je
mov
mov
xchg
sbb
cld
or
pop
cmp
push
movs
push
dec
xchg
in
sti
mov
add
js
mov
popf
pop
gs
aam
push
mov
mov
or
sub
add
inc
popf
xchg
inc
or
jne
mov
inc
jecxz
addr16
push
push
and
dec
xchg
mov
pop
adc
push
dec
int3
leave
es
rcl
pop
icebp
add
into
xor
scas
xlat
pop
movs
mov
loopne
xor
sub
xchg
je
and
dec
js
lds
jecxz
adc
or
dec
mov
js
sbb
mov
inc
pop
dec
ss
mov
pop
int
push
arpl
jno
sbb
out
inc
pop
and
inc
push
jo
out
xor
push
dec
xchg
inc
shr
loop
xchg
fadd
mov
sub
xor
(bad)
out
sahf
inc
push
cmp
push
(bad)
jecxz
pop
xlat
push
pop
dec
ds
imul
and
pusha
push
lea
pusha
mov
jno
cmp
xor
aam
push
(bad)
and
mov
dec
popa
jle
pushf
enter
rcl
iret
sub
cmc
mov
jge
ins
imul
call
stos
fnstsw
mov
cmp
adc
cli
mov
push
jmp
mov
mov
into
rol
enter
mov
push
pop
and
xchg
dec
cmp
and
and
out
outs
mov
or
add
xchg
fisttp
cmp
or
stc
mov
outs
cmps
jne
(bad)
mov
fcom
jno
xor
mov
mov
(bad)
ror
cmp
fsubrp
in
add
(bad)
out
mov
movs
lds
xchg
(bad)
popa
dec
cmp
mov
clc
scas
jecxz
mov
inc
loope
(bad)
aam
fsubr
and
outs
add
dec
push
jb
xchg
(bad)
mov
push
loop
lahf
fnstenv
and
cmp
jmp
mov
call
add
test
out
pslld
call
popa
jmp
or
adc
and
push
scas
js
inc
jmp
jnp
lea
jp
mov
les
or
popa
aam
fst
in
inc
lds
jmp
ret
jo
cwde
je
cdq
idiv
ret
sub
mov
repnz
push
sbb
cmp
dec
aaa
xchg
ret
mov
pop
mov
pop
push
push
or
pusha
cmc
hlt
scas
dec
push
adc
adc
ja
jg
pop
mov
lods
or
mov
retf
add
inc
cmp
push
gs
pop
xchg
retf
cwde
loope
sbb
adc
mov
cmps
add
push
sbb
jo
mov
sub
aam
add
stos
add
jb
cmps
sub
cmp
gs
cmp
je
jp
scas
bound
test
aam
cmp
arpl
xor
in
dec
repz
fsub
arpl
sbb
js
das
inc
pop
into
and
cmp
(bad)
xchg
xor
outs
out
addr16
test
push
and
loopne
or
aas
jecxz
dec
dec
inc
xchg
mov
pop
jle
inc
jg
pop
mov
or
fdivrp
enter
inc
das
js
add
test
and
jecxz
mov
push
xor
xor
dec
pusha
div
pop
mov
mov
call
outs
sub
retf
test
jecxz
or
pop
fidiv
push
fldcw
stos
cmp
adc
jg
mov
lock
shr
sbb
sub
add
or
out
loopne
repz
je
je
int3
push
or
push
push
inc
mov
adc
cmp
lahf
sub
xchg
xchg
mov
(bad)
cwde
jmp
cli
mov
test
aam
dec
sub
pop
jg
lods
adc
sbb
pop
rcr
mov
cmp
in
jae
mov
or
mov
mov
lock
fldcw
mov
inc
call
ret
ins
xor
gs
shl
fwait
sbb
adc
and
mov
daa
gs
jno
or
fist
aam
mov
(bad)
addr16
xor
fnsave
or
add
xchg
arpl
aas
outs
mov
(bad)
or
mov
cwde
loope
cmc
(bad)
in
sti
inc
lods
push
sbb
adc
or
es
cmc
ds
fnstenv
call
enter
call
mov
mov
xchg
mov
xor
sub
shl
sbb
ss
pop
inc
fld
sti
js
pop
stc
xor
je
xchg
fild
sub
test
clc
lock
in
sub
call
push
add
ins
mov
repz
mov
pop
or
cmps
dec
push
push
jg
push
outs
test
fisttp
push
call
loop
jns
or
pop
add
xor
int3
sbb
xchg
out
scas
outs
stos
inc
jmp
mov
in
push
imul
lock
mov
fidivr
cdq
jb
dec
mov
sbb
neg
out
imul
in
mov
jne
fwait
push
adc
aad
mov
stc
in
mov
inc
adc
mov
(bad)
adc
add
xchg
fnsave
jmp
jbe
clc
jnp
add
(bad)
cmp
loopne
add
shl
mov
inc
and
sar
mov
(bad)
sub
ficom
inc
ins
sub
mov
pop
cmp
fstp
fld
lods
mov
stos
data16
sar
push
jbe
add
and
bound
pop
clc
icebp
repz
adc
dec
std
test
gs
pop
sub
and
add
jo
mov
lock
inc
test
dec
ja
xlat
xchg
xchg
sub
cmp
mov
into
repnz
pop
cmp
add
loope
push
adc
fsubr
jl
push
in
stos
stc
rcr
xchg
imul
sahf
sti
in
int3
push
int3
test
ret
adc
mov
je
(bad)
push
jae
adc
jo
out
add
jl
enter
or
leave
ja
mov
jge
add
xlat
cmp
rcl
pop
xchg
call
adc
loopne
enter
adc
(bad)
adc
sar
mov
adc
adc
lahf
jecxz
cwde
movs
ds
add
or
mov
mov
jne
jo
rol
xchg
and
jne
mov
sar
xor
cwde
xor
or
aad
inc
xor
xchg
jg
xor
aaa
fstp
cmp
scas
pop
scas
and
adc
rcl
dec
cmp
repz
push
out
inc
popa
je
fs
xor
jo
int3
lods
xor
jecxz
in
loope
add
sub
loop
jl
push
in
mov
mov
pushf
mov
shl
mov
or
and
sub
cmp
and
test
inc
enter
jnp
test
clc
sub
cmps
push
ins
push
cs
ins
mov
daa
adc
imul
(bad)
push
das
idiv
pop
(bad)
out
aaa
nop
add
clc
xor
dec
pop
es
pop
gs
inc
push
jne
in
int
xor
cmps
jl
mov
xchg
push
test
jge
(bad)
or
mov
pop
inc
jb
cdq
retf
fs
xchg
xchg
inc
pop
in
cmp
hlt
mov
dec
popf
mov
xor
or
es
mov
dec
and
(bad)
push
pop
je
das
les
pop
call
test
cmp
mov
es
pop
add
and
jae
mov
pop
jne
imul
jecxz
xlat
push
popa
std
jg
dec
pop
(bad)
mov
and
adc
out
je
xor
mov
mov
(bad)
mov
sub
fistp
push
lods
xchg
ins
les
mov
rol
pop
fcom
lds
cs
lods
xchg
cmp
adc
push
push
outs
mov
mov
adc
or
inc
je
ret
retf
sti
push
jmp
into
add
enter
jae
fcom
fadd
push
jl
test
mov
sbb
outs
icebp
xchg
stc
push
inc
pop
jp
sbb
fdivr
xchg
and
pop
fimul
inc
sbb
mov
cmp
adc
xor
pop
jge
jg
xchg
cli
sar
push
cmp
popa
push
enter
or
sahf
inc
cmps
cmc
fidiv
clc
pusha
data16
push
fmul
pop
loopne
dec
jmp
dec
fwait
retf
call
xor
imul
adc
jg
dec
cmp
sbb
mov
outs
lods
frstor
repnz
mov
clc
sahf
das
ret
jl
stc
pop
sub
sbb
outs
adc
inc
add
sbb
add
retf
dec
jmp
clc
mov
mov
ret
imul
or
je
jl
cwde
(bad)
aas
xor
xchg
sub
pop
cmc
mov
mov
call
bound
xchg
cld
aas
sub
(bad)
mov
or
popf
sbb
in
adc
mov
xchg
(bad)
loope
and
lods
inc
push
call
(bad)
call
aaa
or
retf
xchg
inc
mov
arpl
push
out
adc
jae
sbb
dec
inc
arpl
into
sti
imul
and
jg
int
mov
in
jmp
inc
inc
fwait
sub
jg
inc
mov
aam
or
(bad)
pop
retf
or
ror
(bad)
fcomp
ret
ins
mov
sbb
sub
loopne
adc
push
add
inc
dec
ins
or
mov
mov
sbb
or
or
fsub
outs
pop
mov
push
or
push
pop
jns
xor
add
leave
jle
sbb
push
xchg
int
inc
call
mov
daa
pop
(bad)
int3
or
add
jl
hlt
sbb
dec
xlat
push
nop
retf
test
std
mov
push
mov
hlt
call
sub
mov
js
mov
inc
and
cmp
loopne
sti
cdq
add
cmp
call
cli
ror
aam
sbb
leave
dec
ins
iret
rcr
sub
retf
add
test
pop
mov
push
and
and
std
pop
xchg
jecxz
dec
jne
sub
imul
(bad)
xor
dec
mov
je
imul
or
mov
mov
stos
rcr
adc
cmp
lahf
retf
sbb
push
pop
add
xor
push
(bad)
(bad)
cdq
or
jo
movs
push
call
imul
sub
adc
mov
xchg
outs
iret
rcr
jmp
sub
sbb
jns
push
les
fsubr
jb
cmp
retf
fmul
and
cli
mov
sbb
adc
(bad)
movs
inc
in
je
xchg
out
mov
loope
cmp
cmp
add
xor
cmp
xor
(bad)
iret
pop
popa
mov
ja
dec
sub
cmp
inc
cmp
or
dec
push
mov
adc
xchg
test
xchg
in
sar
ss
lahf
fldenv
movs
(bad)
mov
fnstenv
inc
scas
cmp
dec
or
scas
icebp
xor
pop
int3
mov
fs
and
add
(bad)
bound
sbb
add
gs
or
in
add
into
loopne
cmc
jns
test
cmp
popa
sbb
loope
mov
iret
mov
mov
loope
retf
mov
mov
pop
sub
inc
fwait
push
ds
test
data16
pop
push
icebp
jns
fldenv
sbb
leave
dec
mov
xor
movs
dec
sub
es
or
pop
je
popf
dec
jl
or
push
mov
mov
cmc
rcr
mov
scas
outs
cwde
mov
fsubr
fisttp
lahf
das
lds
or
jae
fs
neg
xor
adc
inc
and
pop
dec
shl
outs
fcmovbe
cmp
aam
sbb
jmp
adc
cmps
xchg
shl
add
loope
test
js
(bad)
into
cs
sub
ins
out
xchg
sbb
pop
sub
sahf
jnp
jb
adc
scas
mov
test
mov
into
push
fcomp
inc
mov
in
and
test
loop
sbb
mov
mov
add
dec
imul
iret
inc
push
jnp
xchg
scas
shr
gs
retf
or
xchg
pop
in
mov
xchg
mov
pop
pop
sbb
cli
shr
xor
push
out
mov
lea
outs
(bad)
es
push
mov
xor
xchg
lods
mov
sub
dec
sub
add
dec
repz
lods
cld
je
pop
jle
xchg
mov
jl
fld
ins
rol
xchg
pushf
hlt
jb
popa
fst
and
ins
pusha
mov
mov
mov
add
xchg
and
lea
cld
inc
xchg
cmpxchg
lds
fwait
add
repz
mov
enter
mov
or
mov
or
adc
aam
or
lock
test
loop
xchg
sub
cmp
loope
rcl
pop
pusha
add
jg
aaa
int
(bad)
push
push
icebp
jo
out
xchg
sub
ja
lods
pushf
jbe
ficom
sti
pop
mov
mov
rcl
xchg
mov
push
mov
cmp
jmp
pop
aaa
mov
movs
test
dec
add
repnz
mov
test
sbb
cld
out
sub
push
addr16
mov
scas
es
stc
sqrtps
mov
clc
xchg
lea
adc
pop
mul
cmp
loope
sbb
and
mov
je
cli
xor
push
pop
rol
ins
daa
sub
mov
mov
fild
scas
mov
es
jnp
adc
push
push
cmp
js
push
aaa
mov
stc
mov
xchg
or
shr
mov
movs
mov
xchg
loope
in
mov
pop
pop
ret
ret
stos
mov
add
or
sbb
jp
xchg
lock
push
outs
ret
pop
outs
mov
sub
and
out
std
dec
shl
xchg
stos
push
int3
pop
push
into
jecxz
xlat
push
push
inc
outs
mov
jbe
jle
ins
sub
ja
movs
inc
pusha
mov
inc
pop
je
test
sbb
ret
push
mov
jmp
sub
ror
iret
je
dec
pop
addr16
and
cmps
cld
lock
call
pop
and
sahf
repz
sub
int
call
or
sub
cmps
sub
out
shl
jmp
xlat
cwde
xor
daa
push
inc
in
movs
sbb
cmp
jle
mov
adc
pop
test
jno
sub
aas
mov
data16
pop
es
js
(bad)
retf
nop
and
dec
mov
stos
mov
and
jg
xchg
pop
and
pusha
adc
cs
movs
sub
pushf
stc
cwde
aas
jmp
int
mov
or
dec
add
and
ja
or
push
mov
xor
fwait
sub
out
pusha
sti
bound
mov
sbb
and
rep
push
pop
mov
push
imul
xchg
mov
sbb
mov
mov
rcr
and
cld
sub
pop
leave
pop
hlt
sbb
fcom
cdq
stos
fsub
in
lock
or
xor
pop
cmp
cmp
sbb
pop
cli
xor
jae
xchg
inc
adc
mov
cli
jl
pop
mov
cs
fldcw
sahf
pop
or
leave
adc
pop
repz
outs
rcr
(bad)
jae
sbb
jne
sub
inc
dec
dec
mov
movs
xor
or
repz
ret
ficomp
adc
push
fistp
das
stc
push
and
cmp
push
call
not
call
retf
aam
repz
leave
sub
pop
or
xchg
retf
add
or
in
cmps
clc
or
mov
or
dec
mov
dec
cld
scas
push
dec
jnp
cmp
push
loope
addr16
sti
sub
sti
icebp
movs
in
push
(bad)
popf
clc
xlat
dec
mov
jb
cmp
xor
test
mov
xchg
pop
and
pop
retf
cmp
ds
sbb
aaa
in
jp
pop
xchg
push
xchg
mov
cmp
in
push
lds
push
(bad)
ss
push
adc
inc
sar
push
push
(bad)
scas
and
or
cld
fisttp
stos
sub
mov
outs
retf
jl
push
mov
and
mov
(bad)
push
icebp
adc
lea
mov
push
retf
ds
int3
cs
popa
clc
inc
jle
or
cmp
or
clc
add
xor
pop
mov
mov
imul
and
add
adc
or
sbb
ja
daa
jns
sbb
jb
mov
dec
movs
sub
cdq
aaa
push
outs
sbb
fcmovne
pop
loop
sub
sbb
bts
and
mov
fcomp
pop
add
lds
cli
adc
xor
sub
mov
mov
scas
jns
sub
adc
les
(bad)
mov
mov
es
test
xor
add
sete
ror
scas
pop
xor
test
xor
sbb
es
mov
jbe
mov
jmp
int
sub
jnp
(bad)
fisttp
jl
stc
sbb
jae
daa
mov
inc
int
mov
div
xor
std
add
rcr
mov
ins
icebp
jmp
cmc
mov
leave
push
(bad)
jecxz
add
test
movs
jp
imul
ja
aam
sti
mov
mov
clc
sub
ret
faddp
mov
(bad)
loope
mov
rcl
frstor
daa
jne
ins
fabs
ret
fucomip
xor
push
cld
pop
sbb
not
adc
pop
cmc
hlt
inc
pop
js
pop
js
stos
lods
int3
cmp
jmp
add
lods
lahf
pop
dec
shl
inc
cmp
test
imul
outs
iret
shr
lock
movs
std
xacquire
jle
sbb
lock
push
xchg
ret
(bad)
fcmovb
inc
mov
mov
cmps
sar
test
pusha
arpl
repnz
retf
lea
outs
aad
out
add
popf
pusha
sub
xchg
ds
pop
aaa
jnp
dec
inc
mov
fimul
and
dec
outs
mov
scas
sub
cld
jnp
add
popa
pushf
mov
cld
or
cld
mov
push
int
scas
lods
in
or
push
jnp
or
add
dec
sub
mov
mov
jbe
cdq
enter
jmp
xchg
fs
ds
jle
jns
inc
mov
out
add
and
movs
add
inc
mov
jecxz
stos
(bad)
int
mov
retf
out
out
jecxz
adc
icebp
sbb
test
pop
cdq
ins
test
test
jo
pop
fsubr
popf
popa
or
div
js
adc
stc
dec
data16
inc
call
in
mov
or
js
add
add
mov
outs
shl
jg
jmp
sbb
inc
xor
push
test
leave
xchg
mov
test
mov
pop
dec
inc
or
loop
cmp
xchg
push
(bad)
out
sub
jl
cdq
jecxz
cmp
js
jl
xor
dec
mov
sbb
imul
lahf
mov
pop
push
sub
jle
and
dec
or
adc
or
das
test
imul
fild
xchg
imul
mov
mov
cdq
jb
lods
sahf
adc
mov
not
into
ret
pop
call
xchg
sub
push
dec
mov
cmc
mov
call
jb
shl
out
push
addr16
aas
stc
lahf
adc
dec
call
inc
mov
mov
push
inc
pop
inc
test
add
int3
or
std
aaa
dec
sub
loope
mov
jns
outs
in
dec
add
das
sbb
hlt
xchg
push
ja
movs
retf
sbb
xchg
adc
inc
rcr
rcl
add
pop
sbb
daa
xchg
cmp
push
popa
xchg
imul
je
enter
sbb
adc
loopne
push
jbe
jg
mov
ins
movs
pop
dec
pop
fiadd
xchg
push
mov
mov
cmp
pop
sbb
iret
dec
pop
iret
xor
cmp
sbb
aaa
dec
jle
xchg
xchg
fstp
test
add
or
sub
je
and
bound
add
les
retf
(bad)
mov
cmp
inc
les
arpl
push
pop
dec
popa
adc
pop
sbb
sub
push
loopne
test
aaa
shl
inc
mov
sahf
xor
xchg
cmps
mov
mov
ins
xchg
arpl
adc
dec
retf
mov
repz
xchg
cs
jecxz
fst
clc
fidiv
inc
jns
pop
test
or
jl
push
mov
enter
fadd
(bad)
xor
les
xchg
ds
jge
xor
sub
dec
sub
outs
in
jne
or
arpl
dec
lock
xchg
sbb
mov
push
xor
clc
lahf
pop
in
sbb
push
idiv
int
mov
cs
mov
dec
or
cmp
popa
jp
and
mov
mov
pop
sbb
sub
sub
mov
icebp
push
dec
das
test
mov
loope
pop
sub
jmp
int
sub
xor
fcom
pop
pop
cli
sti
(bad)
xor
adc
rep
jcxz
inc
xor
or
mov
in
xchg
das
(bad)
sti
xor
xchg
or
dec
pop
push
mov
sub
(bad)
into
cmp
xchg
mov
test
mov
and
inc
mov
and
cmps
mov
add
ja
mov
mov
rcr
mov
xchg
in
fcomp
jo
xchg
mov
sbb
ficomp
ins
movs
inc
stos
xor
jecxz
adc
mov
daa
fcmovbe
adc
xchg
push
jmp
pusha
lods
push
pop
jl
lds
imul
xchg
cld
lods
push
xchg
fwait
add
pop
mov
adc
xor
mov
mov
std
push
arpl
scas
push
inc
icebp
mov
jg
xchg
(bad)
jmp
jl
jle
clc
les
push
(bad)
fisttp
inc
pop
mov
jne
sbb
pop
add
adc
mov
ins
rcr
mov
call
lahf
mov
dec
in
aam
dec
scas
scas
iret
dec
fdivr
xchg
mov
fwait
jnp
data16
xor
adc
push
inc
adc
out
add
into
lods
sub
or
dec
jns
add
jne
imul
sub
add
adc
pop
call
mov
pop
mov
dec
into
pop
sub
rcr
sbb
call
cmp
jne
enter
sbb
inc
les
push
mov
sahf
mov
mov
push
dec
jge
xchg
sbb
jne
mov
sbb
adc
add
mov
cmc
inc
fcomip
jg
inc
loop
enter
cmp
xchg
lea
push
push
mov
aam
cmps
dec
pop
aas
mov
xor
sub
cwde
out
mov
push
xor
cs
js
popa
mov
xchg
mov
jnp
pop
adc
mov
ffreep
lea
nop
addr16
gs
loope
neg
clc
in
mov
sbb
pop
xor
sub
cmp
adc
inc
rol
mov
adc
cld
sub
push
leave
lods
out
stos
pop
xor
fcom
xor
rcl
gs
ds
addr16
iret
rol
aas
div
(bad)
xor
cdq
stos
lea
fcomip
adc
sbb
aam
pop
lods
add
or
cmp
test
stos
test
jge
or
add
mov
dec
push
xchg
sub
sub
(bad)
sbb
mov
fs
inc
xlat
lods
mov
std
and
pop
ds
xchg
mov
mov
pop
fsubr
pop
add
call
rcl
cmps
loopne
(bad)
add
sub
popa
enter
pop
mov
xor
sahf
shl
loopne
nop
mov
aad
mov
pop
test
mov
rcr
ret
fiadd
fsubr
les
mov
pop
lds
inc
dec
mov
mov
js
icebp
pushf
and
add
mov
(bad)
stos
adc
loope
sbb
jmp
enter
(bad)
sub
popf
mov
push
pushf
pop
je
add
test
(bad)
sbb
xor
aas
jnp
test
xor
add
fimul
xchg
test
or
inc
lock
sub
xor
xor
sub
fst
jp
mov
sub
xor
sub
in
or
out
fisttp
cmp
jg
jl
mov
jo
mov
leave
push
add
mov
lock
std
fistp
popf
jbe
xor
and
push
cmp
data16
mov
jnp
movs
jbe
pusha
js
mov
es
xchg
sbb
imul
call
fsub
xor
sub
outs
bound
imul
pop
jb
test
fsubr
out
dec
xchg
pop
push
mov
leave
js
and
cmc
repnz
push
sbb
addr16
xor
ja
xchg
shl
push
fs
pop
mov
push
mov
sub
jno
fwait
sahf
popf
pop
push
cmps
jmp
inc
dec
push
hlt
pop
setp
push
outs
push
outs
fucomp
shl
neg
jmp
push
mov
or
data16
mov
xchg
pop
imul
in
mov
mov
xchg
clc
dec
push
sbb
cmp
cdq
in
jg
pop
jge
in
mov
pop
lods
fs
in
mov
loop
pop
mov
loop
pop
(bad)
cmp
mov
jbe
in
enter
sahf
sub
push
sbb
enter
enter
lods
or
repnz
adc
inc
or
fild
jb
(bad)
sub
repz
rcr
pop
(bad)
mov
(bad)
call
mov
sub
pop
cmp
xchg
push
pop
push
mov
sbb
sbb
xor
sbb
jg
and
xor
aad
sub
mov
xlat
fwait
gs
add
nop
sub
add
pop
in
jae
cwde
push
jge
out
fcom
pop
dec
std
das
mov
pushf
add
(bad)
jmp
cmp
fistp
sub
rcr
test
sar
xor
sbb
shr
push
sar
inc
fmul
inc
xor
or
sub
test
aas
dec
sub
sub
mov
mov
jb
in
fistp
adc
adc
popa
popf
jl
jg
jp
jmp
aas
cmc
mov
cli
and
rcl
xor
mov
mov
pop
test
mov
jo
dec
mov
dec
xchg
pop
and
nop
adc
ins
arpl
fs
xchg
xchg
push
outs
fdiv
push
jp
cli
mov
jmp
icebp
int
ret
repz
mov
mov
loop
and
xor
jg
lds
and
lock
into
mov
add
cmp
stos
or
jnp
mov
(bad)
sahf
inc
sbb
hlt
popf
add
shl
xchg
add
or
stos
add
retf
push
aam
fs
repz
out
pop
enter
loop
dec
bnd
dec
sti
test
int
mov
pop
lods
and
adc
push
das
fisttp
push
scas
dec
icebp
add
mov
int
int3
sub
xor
les
add
pop
loop
call
dec
pop
movs
test
or
mov
add
test
dec
jmp
jnp
jns
xor
rcr
push
into
xor
shr
mov
out
fiadd
(bad)
mov
mov
xor
dec
stc
dec
test
dec
(bad)
sar
repnz
xchg
rcr
mov
stos
mov
jno
pop
push
inc
jo
push
js
mov
mov
int3
cmps
stos
mov
xchg
xor
sbb
pop
push
cs
jge
aaa
(bad)
out
mov
out
mov
movs
push
cmp
mov
or
jne
ret
inc
push
ret
sbb
or
leave
cmp
ins
test
pop
inc
pop
idiv
xchg
cmp
ret
mov
and
mov
(bad)
jecxz
push
dec
mov
or
sub
push
adc
stos
not
sti
mov
cmp
mov
aas
mov
mov
out
inc
xchg
(bad)
outs
loopne
xor
(bad)
pop
xchg
adc
imul
xchg
rol
loop
repz
push
mov
pop
jne
leave
lds
cld
loope
inc
fucom
xlat
hlt
or
mov
sbb
inc
push
pop
mov
js
outs
jne
dec
fcomip
and
fnstsw
lods
mov
pop
gs
out
pop
and
dec
xchg
adc
sbb
jb
inc
mov
je
fucom
pop
imul
jge
fwait
leave
popf
leave
sub
daa
or
jmp
push
neg
or
mov
mov
pop
jnp
pop
adc
mov
repnz
jne
in
jle
xchg
xchg
jb
mov
cmps
adc
push
pop
cmc
jle
mov
cld
cmp
mov
and
rcl
mov
mov
ficomp
fwait
loope
stc
xor
loop
sub
ja
shl
out
bsf
(bad)
retf
shr
mov
call
out
das
add
fdiv
inc
popa
outs
xchg
push
ins
and
mov
aaa
add
retf
and
icebp
ret
lods
sub
add
adc
or
leave
aaa
js
shl
and
fistp
lea
cmp
repnz
(bad)
jl
add
xchg
fcom
lods
ss
xor
addr16
xor
add
cmp
mov
mov
(bad)
movs
mov
mov
scas
adc
cmp
pop
add
dec
sbb
mov
adc
hlt
and
jae
das
dec
jmp
stos
mov
and
push
(bad)
mov
cmps
test
sbb
repnz
and
push
xchg
pop
xchg
push
cld
cmp
or
jae
shl
sub
sub
push
sub
push
std
add
mov
aas
(bad)
pop
and
dec
scas
pusha
inc
sub
jo
movs
sub
pushf
or
sub
mov
and
xchg
loope
xchg
push
mov
jns
push
in
mov
pop
and
mov
(bad)
add
mov
add
pop
xor
(bad)
es
dec
retf
mov
addr16
xchg
ins
sub
xchg
loopne
pop
and
mov
mov
push
or
mov
aas
cli
(bad)
daa
cmp
test
stos
jg
and
ret
(bad)
in
xor
cmp
fst
push
inc
or
sub
mov
mov
out
and
(bad)
dec
pop
xchg
push
mov
sub
jg
jge
jle
js
repz
mov
int3
inc
dec
sar
and
dec
jae
mov
mov
cdq
xchg
jl
call
(bad)
scas
in
add
or
in
mov
pop
inc
mov
push
repnz
pop
mov
jmp
inc
fsubr
inc
fst
sbb
outs
(bad)
enter
and
xchg
arpl
ins
push
xchg
jge
cdq
jmp
cmps
(bad)
iret
out
dec
out
mov
outs
retf
ins
push
pop
ins
add
inc
adc
add
cwde
and
cmp
or
sahf
push
movs
jmp
scas
push
push
add
adc
loopne
pop
add
test
pop
lahf
mov
ja
dec
enter
sub
sahf
(bad)
xchg
adc
repz
pop
aad
mov
addr16
daa
loop
int
call
pop
sahf
dec
repnz
fsubrp
popf
xchg
dec
mov
imul
dec
xchg
sahf
inc
mov
cmp
lock
jno
ret
cmp
push
fs
or
pop
call
out
dec
call
jmp
or
jb
pop
lods
push
int3
inc
imul
cwde
dec
sbb
mov
pop
inc
(bad)
sub
push
jb
fs
lock
adc
mov
out
or
adc
mov
out
iret
imul
inc
jecxz
and
call
popf
inc
test
xor
push
loopne
dec
pop
sub
hlt
cmps
fisub
push
(bad)
jle
call
and
div
push
sbb
mov
jbe
mov
mov
out
jmp
hlt
clc
cmpxchg
push
dec
mov
aas
add
lar
xchg
clc
je
test
daa
test
mov
dec
pop
add
mov
shr
push
pop
fimul
mov
adc
mov
xor
push
ja
or
dec
sbb
push
or
jbe
and
pop
xor
or
imul
jl
(bad)
sti
rcl
sbb
add
mov
and
retf
iret
xchg
pop
push
ds
lock
jge
lods
enter
fcom
cld
fcomi
jno
fsubr
imul
push
or
cmp
mov
bound
cmp
or
call
pop
push
(bad)
loop
xchg
add
xchg
(bad)
mov
scas
outs
cmp
sbb
imul
push
push
pop
xor
call
xlat
jmp
cmp
ja
push
lods
repnz
ds
(bad)
retf
cmp
std
movs
test
add
ins
in
addr16
cwde
adc
(bad)
lods
paddb
jmp
sub
adc
and
mov
jl
ret
mov
test
mov
je
inc
mov
add
pop
mov
xor
or
cmp
fidivr
stos
jecxz
stos
inc
(bad)
(bad)
sbb
icebp
mov
and
dec
xor
fdivr
push
mov
fmul
jmp
movs
fs
or
lahf
jnp
jae
rep
cwde
fcom
push
out
gs
sahf
jg
(bad)
jo
pop
fmul
or
mov
(bad)
leave
push
pop
jge
push
call
cmp
lea
ss
inc
ret
ja
mov
frstor
push
pop
push
mov
push
pop
ins
js
outs
jmp
push
mov
sbb
xchg
mov
mov
pushf
xor
int
pop
pop
scas
dec
daa
loopne
fisubr
fs
pusha
dec
cmp
inc
xchg
sbb
xchg
je
arpl
popf
cmp
push
mov
int
cmp
arpl
arpl
shl
outs
dec
jecxz
inc
(bad)
iret
dec
aam
lods
mov
mov
mov
fcmovnbe
into
iret
jo
mov
fadd
mov
test
or
jae
cmp
cmp
xchg
repnz
loope
or
bound
mov
mov
dec
int3
inc
addr16
pushf
mov
lods
popf
int3
stos
push
(bad)
and
adc
jge
mov
jmp
or
iret
push
(bad)
xlat
push
push
out
jg
leave
mov
call
adc
(bad)
dec
mov
xchg
dec
sbb
push
inc
shr
push
mov
inc
cmp
and
in
and
xchg
pop
out
out
and
push
push
rcl
xor
test
call
test
mov
cmp
or
mov
sbb
aad
mov
sbb
push
icebp
bound
inc
lea
push
xchg
(bad)
mov
sbb
into
into
pop
cmp
add
cmp
cwde
ror
jp
mov
add
imul
xor
jno
data16
lods
pop
enter
mov
fwait
(bad)
or
ss
outs
aaa
push
nop
jmp
mov
fstp
scas
pop
add
mov
or
push
mov
test
push
(bad)
adc
iret
inc
pushf
jno
inc
fcom
sbb
pop
out
into
lahf
sbb
shl
mov
push
pop
stc
and
and
fadd
ret
addr16
mov
jo
call
sbb
cmp
shl
(bad)
or
test
xchg
jl
mov
sub
inc
mov
jcxz
fcomp
jo
dec
xchg
pop
mov
stc
mov
mov
sbb
cld
add
mov
aad
xor
adc
mov
jge
cmp
loop
cmova
push
arpl
les
xchg
push
and
imul
leave
cmp
shr
test
clc
fs
lea
add
sbb
jo
call
inc
dec
adc
(bad)
mov
inc
dec
xor
sbb
mov
mov
ffreep
push
xchg
pusha
or
int
cmp
mov
(bad)
lods
and
pusha
xchg
cmp
push
pop
push
adc
sahf
or
test
not
xor
cmps
shl
icebp
aaa
out
enter
add
scas
(bad)
sub
bound
add
jno
(bad)
std
mov
outs
push
push
mov
xor
mov
cli
popf
ja
adc
adc
movs
dec
ficomp
popf
jae
dec
mov
out
sub
push
xchg
call
fst
sbb
push
adc
adc
xor
mul
aaa
(bad)
and
pop
or
(bad)
pop
rcr
push
(bad)
call
push
or
and
aad
nop
in
or
mov
pop
jo
pop
mov
pushf
(bad)
dec
fisubr
adc
sbb
imul
cwde
jbe
cld
mov
mov
mov
sub
sub
xchg
dec
or
xor
pop
ja
arpl
mov
es
int
stos
xor
xlat
lods
stos
mov
rol
inc
cmp
xchg
mov
mov
mov
cmc
jle
mov
es
mov
or
xchg
stos
fsub
cmp
push
xor
(bad)
fs
repnz
pop
inc
ror
add
imul
popa
ret
fcomp
jnp
rcr
test
mov
sub
and
scas
dec
mov
sbb
xor
loopne
(bad)
push
scas
xchg
pop
mov
test
aad
and
inc
mov
(bad)
push
sti
jbe
inc
mov
sbb
and
dec
sbb
gs
test
sbb
cmp
pushf
mov
test
dec
jae
inc
(bad)
mov
and
retf
sbb
test
js
repz
into
retf
sub
rcr
xor
and
xchg
mov
rol
sbb
jg
xchg
sub
and
in
sbb
xor
pop
dec
push
xlat
jno
push
fwait
jmp
push
add
jb
out
shl
xor
(bad)
or
jle
(bad)
in
arpl
mov
mov
or
jno
mov
pop
xchg
sbb
add
mov
sti
jle
pop
into
aad
xor
push
out
add
mov
les
adc
jo
imul
mov
int3
jbe
xchg
lods
cmp
pop
or
test
fdivr
cmps
and
leave
xchg
(bad)
retf
ret
add
push
inc
sub
jecxz
dec
jg
jge
ss
ins
cdq
(bad)
pusha
xor
sbb
mul
int
xchg
in
jnp
pop
fnstsw
push
inc
mov
test
(bad)
pop
push
lahf
shl
dec
lahf
pop
mov
jae
sbb
test
rol
fistp
jne
and
aad
aas
rol
stos
mov
call
scas
stc
adc
inc
popa
in
push
dec
test
mov
and
sti
push
in
push
push
sub
pop
mov
ja
into
lods
and
movs
stc
out
jb
adc
jmp
add
das
sub
stos
test
jb
xor
push
int
xchg
loopne
scas
xor
sti
enter
mov
sti
mov
sbb
jl
lea
dec
sbb
aad
popf
inc
es
cmps
lock
jle
rol
mov
mov
and
imul
int3
fdiv
pop
in
and
shl
dec
outs
pop
lods
adc
pop
std
enter
fdivr
cmps
aas
mov
sti
dec
sub
and
shl
das
popa
adc
out
and
mov
add
out
push
pop
push
push
dec
xor
sub
dec
and
arpl
dec
sbb
or
and
retf
xor
mov
jl
push
jmp
pop
push
push
ficomp
sub
mul
pop
cmp
xchg
mov
pop
ret
mov
daa
aam
push
popf
xor
stos
outs
fistp
loopne
ret
sbb
mov
mov
imul
adc
test
jmp
cld
pop
mov
cmp
and
fwait
sub
or
push
sbb
jbe
push
in
jecxz
out
pop
shr
mov
ins
idiv
mov
fwait
pop
jbe
sbb
xor
and
(bad)
iret
xor
xchg
jb
gs
mov
ds
mov
xlat
aad
test
mov
mov
push
dec
jnp
pushf
and
loopne
invlpg
addr16
lahf
fidiv
lods
ja
xchg
xchg
jo
push
in
or
popf
push
inc
fs
loope
xor
imul
es
stos
lea
ret
jno
pop
mov
xor
sbb
(bad)
call
adc
jp
add
add
mov
mov
lahf
dec
xor
pop
mov
or
rol
into
cmps
fisttp
ins
lods
or
sbb
xchg
(bad)
or
push
gs
dec
ins
mov
mov
jb
aad
rcr
xor
out
imul
jg
loopne
jo
jle
push
aaa
sub
das
in
mov
inc
cmpps
dec
adc
lods
mov
jg
out
inc
dec
jecxz
es
sub
repz
movs
stos
and
xchg
or
dec
mov
add
jmp
adc
mov
wbinvd
rol
mov
popf
(bad)
clc
pop
mov
rol
sbb
xchg
cmp
retf
sbb
pop
arpl
or
(bad)
sbb
push
ds
inc
xchg
cmp
xor
in
iret
aaa
repnz
icebp
inc
movs
outs
call
jle
pusha
jmp
popf
fwait
sub
jle
pop
stos
xchg
jl
std
adc
inc
hlt
mov
mov
add
fwait
(bad)
and
jbe
iret
mov
test
push
xor
das
shl
movs
push
das
and
cmp
add
inc
in
movs
and
(bad)
push
loop
jno
in
cmps
ins
rol
call
push
sbb
xor
sbb
int3
inc
std
out
mov
cmc
lock
mov
push
(bad)
pop
int
mov
or
adc
test
xor
jne
retf
pop
lahf
rol
dec
stos
push
test
dec
jmp
jp
scas
mov
pop
in
mov
popa
mov
dec
loop
fiadd
enter
dec
in
and
push
clc
inc
(bad)
xlat
jne
mov
inc
jbe
sbb
es
sahf
stos
retf
jnp
arpl
jmp
mov
shr
vpcomd
pop
cmc
inc
rol
dec
mov
or
shl
jge
dec
sbb
jbe
or
shr
ins
mov
sbb
add
test
dec
and
iret
call
movs
cli
(bad)
jmp
rcl
imul
pop
pop
push
pop
fucompp
sbb
add
sar
scas
cmp
lods
jo
into
or
lods
dec
std
xor
push
pop
inc
retf
ror
mov
xchg
hlt
inc
jne
cmp
enter
aam
sbb
fcomi
xchg
xchg
retf
mov
sbb
mov
lods
mov
loopne
dec
pop
jb
out
addr16
sub
ss
sbb
and
fwait
mov
dec
mov
(bad)
pop
mov
adc
jmp
pop
fcom
out
or
ss
cmp
and
jl
or
adc
sub
xor
adc
lea
ds
push
in
nop
loop
leave
mov
jne
fs
xlat
dec
test
addr16
nop
push
lds
cmp
push
pop
and
jb
(bad)
mov
(bad)
cmps
add
jno
sbb
lahf
sub
mov
or
sbb
ret
and
data16
pop
out
cmp
cmps
and
mul
icebp
inc
sbb
sti
inc
mov
stos
jmp
cli
adc
les
xlat
in
pop
xchg
in
pop
or
cmp
retf
xchg
pushf
shr
add
pusha
push
mov
add
push
jbe
shr
cmp
call
movs
not
cli
add
cmc
sub
xlat
jnp
sub
ins
mov
xchg
or
js
ja
adc
scas
shr
es
add
push
cmovs
(bad)
pop
repz
dec
fisttp
or
mov
into
inc
push
cmps
add
sbb
sbb
mov
or
aad
mov
xchg
push
loopne
and
aas
adc
retf
jbe
mov
fst
mov
cmp
idiv
or
pushf
push
dec
dec
lock
pop
ficom
pop
dec
xlat
dec
sub
xchg
mov
xchg
nop
shl
jecxz
loope
rcr
adc
loopne
jmp
push
outs
bound
mov
dec
mov
lods
push
push
cmp
cmp
dec
mov
shl
xchg
mov
xor
adc
mov
xlat
mov
psubusw
pop
(bad)
mov
and
mov
inc
and
push
push
xchg
fcomp
sti
rol
js
mov
call
or
adc
xor
inc
sahf
shl
adc
mov
enter
inc
pushf
retf
cmp
inc
mov
inc
daa
push
daa
push
in
push
pop
(bad)
push
jns
loopne
fnsave
cmp
lea
xor
(bad)
mov
sahf
imul
push
lea
icebp
inc
jmp
in
cmc
dec
retf
cmp
mov
out
mov
cmc
sub
stos
pop
lahf
(bad)
ins
(bad)
scas
inc
ret
jo
fst
cmp
jmp
je
shl
movs
fild
cmp
test
jo
lock
stc
mov
push
mov
hlt
fild
push
xchg
mov
shl
and
add
xchg
test
lds
sub
mov
das
ret
std
jecxz
mov
jno
dec
test
loope
rol
xchg
fmul
xlat
mov
cmp
retf
(bad)
hlt
out
mov
sub
fdiv
das
mov
out
push
xchg
add
into
ins
ins
or
ds
shr
pop
add
xchg
pop
or
rol
shl
ins
mov
xor
adc
jae
or
jl
dec
in
outs
repnz
sub
inc
lods
mov
mov
cmps
cmp
mov
and
push
mov
sbb
cli
jbe
test
pop
stos
fbld
cmc
add
mov
adc
rcl
(bad)
fsubrp
jae
hlt
pop
repnz
ficomp
ds
push
sub
jp
xchg
xor
jle
cdq
cmp
cmp
rcl
push
xchg
inc
ror
fiadd
in
add
dec
xor
mov
or
jp
imul
jne
xchg
lods
pop
pop
mov
or
or
ins
mov
jmp
xchg
jno
push
xor
ret
popf
pop
pop
sbb
bound
mov
jmp
fsub
in
fdiv
mov
jge
cmc
mov
std
iret
cmp
stos
jle
cmp
je
dec
dec
inc
cmp
fwait
test
js
cmps
dec
and
les
jp
xchg
mov
test
ins
sar
jecxz
cmp
retf
test
or
and
xlat
pop
aas
dec
jnp
popa
dec
pop
stc
xor
movs
pusha
push
lods
sub
cmc
xor
jae
xchg
push
mov
ret
es
sub
xor
xor
cmp
shr
stos
push
push
sbb
test
stc
mov
dec
xor
popa
cmp
retf
hlt
or
sbb
lods
mov
sub
lahf
pop
jmp
cwde
stos
cmp
cmps
nop
inc
(bad)
bound
in
aam
pop
(bad)
sahf
dec
jns
pop
in
pushf
push
shufps
(bad)
in
sahf
pop
fisub
(bad)
hlt
cmps
jle
cmp
xor
fs
pushf
lea
inc
loope
mov
mov
ss
outs
div
mov
call
ins
jns
rcr
pushf
and
int
pop
jo
adc
std
cmps
push
mov
enter
shl
dec
(bad)
ror
inc
clc
dec
mov
(bad)
in
int
mov
addr16
ds
inc
fisub
lock
cmp
push
mov
pop
adc
cli
imul
push
fwait
mov
or
call
dec
mov
sub
neg
lods
sbb
mov
jmp
clc
push
and
loopne
shl
mov
adc
cmp
dec
sti
retf
cmps
dec
and
add
or
xor
mov
ror
js
xchg
or
dec
in
ficom
fs
adc
pop
jmp
ss
out
inc
jnp
jne
(bad)
mov
fistp
inc
sub
pop
inc
in
fsub
idiv
int3
out
mov
ins
mov
push
cmps
cmp
adc
push
pcmpgtw
sbb
push
jb
push
out
scas
mov
add
leave
xchg
das
or
sub
xchg
std
imul
mov
or
mov
lea
pop
mov
xchg
test
div
mov
(bad)
in
mov
xrelease
sub
mov
popa
arpl
outs
cdq
pop
inc
mov
mov
dec
fs
pop
push
daa
in
pop
jl
in
sbb
addr16
and
jmp
leave
mov
daa
(bad)
xchg
pop
scas
push
pop
dec
scas
outs
inc
jo
xchg
push
aaa
pop
aas
data16
dec
outs
leave
pop
xor
add
sbb
xor
xor
stos
shl
push
fnstcw
pop
jns
fmul
or
pusha
call
mov
dec
sbb
cmc
loopne
aas
inc
icebp
xchg
mov
in
cmps
xchg
ds
aas
sbb
sub
jnp
adc
mov
cmp
gs
lock
push
sub
cli
je
fimul
mov
movs
shl
ret
inc
jo
ds
xchg
fadd
cmp
jne
push
cwde
cmp
mov
mov
dec
mov
mov
add
sbb
mov
aad
test
fsub
cdq
jg
outs
cwde
ss
ror
mov
mov
sbb
push
cwde
jp
inc
xchg
repnz
inc
fwait
iret
enter
or
xchg
pop
ret
dec
cwde
lds
push
dec
xor
cmp
repnz
popa
int
and
cmps
ins
cmp
iret
mov
(bad)
and
mov
pop
fsubr
push
sbb
and
cmp
and
adc
je
loope
dec
pop
fild
dec
loope
jo
push
jl
xchg
mov
sub
jb
(bad)
sub
sub
popa
and
retf
mov
bound
push
mov
inc
inc
sub
stc
in
inc
sub
mov
iret
daa
inc
push
mov
dec
fs
imul
push
cmp
jmp
mov
mov
pop
(bad)
pop
repnz
sbb
aas
xchg
mov
xchg
dec
popf
(bad)
push
stc
or
pop
dec
or
ror
jae
xchg
in
lods
mov
out
or
repz
(bad)
inc
mov
xor
test
lds
in
cdq
call
inc
xor
les
mov
pushf
xchg
and
sbb
jb
lea
jmp
and
inc
push
dec
mov
or
shl
shr
fdivr
inc
inc
mov
rcr
push
pop
mov
mov
sub
retf
inc
jo
mov
movs
add
cld
jp
inc
stos
inc
jp
mov
dec
fnsave
push
adc
ror
mov
bound
fistp
stos
sbb
or
clc
sub
mov
dec
fcom
frstor
lods
ret
leave
sbb
popf
xchg
aad
mov
outs
adc
mov
inc
cmp
sub
pop
pop
imul
adc
ins
nop
cld
sub
mov
je
lods
cmp
gs
mov
xchg
int3
jnp
mov
push
jnp
inc
loop
(bad)
pop
sub
cmps
imul
push
mov
sub
sub
mov
pop
call
js
ret
aam
das
push
mul
dec
xor
pop
outs
adc
leave
and
xchg
push
bts
add
ror
inc
wrmsr
mov
xchg
je
ss
push
arpl
loopne
pop
or
sbb
in
push
ins
es
push
pop
ja
adc
fsubr
pop
pop
mov
cmp
lds
push
hlt
scas
std
repz
(bad)
std
enter
sahf
mov
jp
int3
stos
js
cdq
sbb
fstp
shl
xor
imul
adc
fucomi
push
mov
fsub
jge
cdq
and
mov
ret
pop
adc
xchg
pop
add
into
aam
and
mov
(bad)
das
popa
adc
lock
bound
adc
xchg
sbb
loop
dec
lds
scas
nop
sub
test
jae
loope
aad
xor
cmps
mov
jae
inc
dec
(bad)
pop
pop
push
popa
fucomip
sub
fadd
jne
cmp
jecxz
call
fnstcw
pop
xor
out
rcl
push
jnp
outs
adc
push
sub
out
mov
int3
inc
fsub
mov
push
xor
cmc
sbb
xchg
adc
pop
idiv
and
pop
inc
lea
push
push
lea
gs
mov
jl
cmp
popa
sub
enter
std
sbb
test
jmp
sub
inc
sub
(bad)
jmp
dec
daa
sbb
mov
cmp
push
cmp
stc
ret
sbb
inc
call
cdq
jecxz
or
dec
inc
push
mov
aad
out
popa
xchg
or
dec
les
add
pop
mov
dec
dec
pop
push
inc
repnz
dec
inc
inc
xchg
sbb
inc
call
mov
pop
add
mov
sbb
fsubp
data16
push
push
sbb
mov
mov
mov
pop
push
sar
sbb
out
retf
xor
jmp
je
fsub
mov
dec
or
mov
push
push
test
dec
jo
dec
adc
sub
ins
(bad)
jmp
xchg
jle
mov
push
aad
loopne
gs
arpl
outs
(bad)
ret
mov
mov
hlt
push
mov
out
cmc
clc
cmp
cdq
cmp
js
cdq
mov
mov
cmp
mov
cmp
cmp
std
push
dec
cmp
ret
push
push
mov
test
jle
sbb
retf
pushf
das
push
push
ins
repz
fdivr
jl
mov
push
std
sub
aaa
jecxz
pop
cwde
push
test
out
jle
dec
loop
loope
dec
jmp
xchg
nop
ror
cli
stos
sbb
cmp
jno
ret
lock
dec
add
xchg
cli
cli
lods
xor
sti
shl
movs
mov
or
jmp
clc
or
mov
in
adc
movq
add
inc
ret
ficom
dec
aas
loop
(bad)
ficomp
add
stos
popa
das
leave
jnp
nop
test
and
loope
sbb
mov
imul
mov
cld
xor
dec
adc
adc
cmc
out
std
iret
jno
stos
cmp
pop
mov
gs
mov
(bad)
pop
int
movs
fldcw
lahf
inc
leave
inc
imul
into
data16
hlt
xor
dec
sbb
mov
fcom
lock
fisub
push
int
outs
fdiv
mov
gs
jns
lods
inc
lds
jg
xor
aam
cmp
push
mov
jl
cmp
loope
adc
bound
or
ret
jmp
in
xchg
int
mov
add
fldenv
mov
inc
into
pop
sub
loopne
xor
dec
stos
rcr
mov
(bad)
and
cmps
addr16
inc
(bad)
mov
movs
clc
jp
outs
push
into
shr
cld
test
retf
mov
push
and
test
stos
cmp
push
mov
in
movs
das
pop
push
xchg
pop
or
fild
sbb
cmp
mov
cmp
arpl
gs
mov
inc
dec
pop
(bad)
lods
jnp
push
imul
sbb
lock
mov
xchg
test
inc
fs
ds
fisttp
xchg
sbb
lock
mov
fld
push
mov
loopne
(bad)
xor
rol
jp
push
mov
aas
push
repz
retf
inc
sar
adc
jo
xor
test
push
mov
shl
icebp
in
cmps
mov
xchg
mov
bound
push
mov
aas
movs
inc
push
scas
jge
in
std
out
frstor
pop
aaa
mov
rol
adc
pushf
cdq
and
ret
jmp
dec
jbe
jecxz
and
mov
inc
retf
jl
add
cmps
adc
xchg
fs
test
push
add
or
daa
and
(bad)
xchg
dec
lods
push
mov
cmp
push
xor
fcmove
jge
(bad)
std
fist
sbb
cwde
leave
loop
jno
or
lahf
jmp
mov
je
xor
adc
int3
inc
out
repz
push
push
aas
leave
push
sub
pop
(bad)
inc
imul
dec
xor
xlat
add
cli
jno
push
std
or
ins
arpl
mov
push
sbb
lds
mov
pop
std
gs
mov
movs
pop
push
mov
adc
mov
jno
aaa
hlt
call
pop
fsubr
addr16
and
idiv
dec
sahf
stos
push
dec
sub
iret
xor
popa
and
repnz
ja
fimul
adc
or
push
outs
xchg
int3
adc
add
mov
adc
and
sti
mov
(bad)
(bad)
xchg
loope
jl
into
out
sbb
adc
(bad)
icebp
sbb
adc
mov
dec
sbb
jecxz
mov
int3
mov
loop
int
add
sub
dec
out
retf
stos
cmp
and
imul
inc
repnz
sti
nop
push
sbb
jge
fld
sti
stos
or
in
mov
fnstenv
adc
mov
fwait
dec
push
xlat
loop
fnstenv
sub
enter
pop
jmp
cwde
pusha
nop
push
cmps
mov
add
sbb
shr
xchg
sti
jns
push
mov
rol
cmp
jne
shl
ins
inc
xor
out
xor
mov
cld
repnz
jne
dec
in
daa
inc
pop
scas
dec
hlt
fstp
lahf
mov
sub
enter
jo
pop
pop
or
and
adc
(bad)
cdq
jno
and
jmp
jb
sbb
push
cmp
push
ja
ret
mov
jo
sbb
sahf
inc
stos
xchg
mov
inc
scas
jmp
int
and
jbe
ds
retf
dec
scas
sbb
pop
loopne
push
mov
jle
call
pusha
fild
in
mov
enter
div
mov
push
gs
cdq
test
(bad)
pop
fstp
sub
adc
out
gs
push
add
add
fs
enter
dec
das
push
jp
(bad)
cmp
sub
xchg
mov
(bad)
outs
mov
test
imul
mov
pop
mov
or
rol
imul
or
fisubr
inc
xchg
pop
jmp
sbb
je
mov
dec
or
test
repnz
sahf
inc
cld
xchg
jbe
pop
push
sbb
or
sbb
jne
push
cwde
movs
retf
sbb
pusha
jb
out
dec
ja
jge
fsubp
(bad)
inc
les
inc
xchg
jmp
call
retf
out
dec
sub
jnp
idiv
jmp
and
jbe
sbb
cmc
sbb
hlt
lods
shl
push
bound
lods
xor
or
xor
inc
ror
xchg
fs
stc
jl
cmps
fiadd
sbb
arpl
cmp
or
aad
jo
dec
sbb
icebp
pushf
sub
pop
mov
test
push
lahf
test
ins
ja
rcl
add
push
fsubr
mov
mov
push
xor
outs
or
add
sar
sub
(bad)
leave
repz
xor
sub
jno
or
jmp
mov
push
dec
dec
jmp
hlt
xor
push
mov
(bad)
jne
shl
cmp
pusha
stos
xchg
ret
je
fwait
jnp
pop
cli
xchg
pushf
lahf
call
lods
dec
inc
xor
add
adc
adc
dec
pop
out
dec
test
dec
mov
ror
dec
cmp
push
sub
or
inc
and
rcl
add
lods
movs
mov
in
retf
aam
push
dec
inc
(bad)
fdiv
pusha
push
aam
pop
mov
cmp
xchg
stc
mov
mov
jge
call
imul
(bad)
call
jno
sub
lahf
push
ss
ss
inc
aad
jge
pop
cdq
addr16
ret
loope
add
mov
hlt
(bad)
ins
sahf
imul
ins
mov
cdq
and
xor
cmc
out
adc
add
mov
scas
add
push
adc
xlat
dec
and
outs
test
popf
jae
mov
and
into
sti
dec
pop
frstor
push
sub
xchg
sub
in
inc
pop
(bad)
mov
adc
call
push
mov
dec
clc
cmp
(bad)
push
xchg
in
aad
iret
xchg
sub
iret
cmp
add
lahf
mov
xchg
mov
xlat
test
pop
dec
out
hlt
push
idiv
or
pop
sbb
push
xchg
push
retf
xchg
dec
cmp
mov
sub
jge
push
jns
xchg
adc
bound
pop
push
lahf
int
sar
ins
xor
cmp
inc
imul
add
lahf
cli
call
xchg
push
movs
mov
dec
jmp
xor
lea
in
cmc
or
addr16
cmp
fsubr
xchg
adc
jne
inc
imul
mov
mov
out
shl
out
pop
loop
pop
in
push
fwait
or
ror
sbb
and
sbb
arpl
adc
pop
push
es
out
scas
adc
lods
es
mov
lahf
div
push
sub
sub
cld
addr16
sub
stos
cmp
je
mov
jl
popf
cmp
sub
and
call
xor
sahf
stos
pop
daa
inc
push
je
pop
pusha
inc
dec
test
clc
aam
out
and
aad
cld
stc
(bad)
aas
movs
leave
adc
leave
inc
daa
fimul
xchg
push
fisubr
adc
jae
je
dec
push
push
xor
push
dec
push
xor
xlat
shr
sbb
mov
xchg
push
mov
mov
in
jp
add
xchg
inc
mov
push
add
inc
mov
nop
cs
inc
ss
or
adc
leave
addr16
fimul
mov
mov
pop
je
mov
(bad)
dec
adc
pop
xchg
icebp
scas
pop
push
add
xchg
xor
scas
jmp
je
je
in
sub
imul
fs
or
jp
aaa
mov
jg
ret
xchg
lahf
push
mov
inc
arpl
adc
xor
stos
cmp
pop
pop
mov
dec
cld
fwait
or
pushf
sub
push
arpl
dec
and
and
adc
js
fnstenv
add
add
nop
add
inc
pop
and
lea
data16
fwait
test
retf
add
mov
mov
daa
outs
out
clc
test
stc
xlat
in
(bad)
xor
mov
clc
ds
sub
aaa
pop
or
lods
dec
data16
pop
dec
(bad)
jge
mov
data16
inc
movs
fstp
ss
xor
cmp
ss
and
aas
xchg
xor
jmp
repnz
dec
mov
mov
fsin
dec
pop
into
mov
cld
inc
xchg
xlat
jl
push
inc
mov
pushf
movs
and
cmp
sbb
mov
fnstcw
jo
fadd
retf
xor
mov
mov
sbb
test
lock
cmps
pop
jne
and
retf
mov
fucomi
mov
push
inc
cli
fild
retf
sub
pop
(bad)
scas
arpl
push
add
cdq
sbb
mov
aad
js
jno
pop
loop
mov
mov
ins
das
xor
xchg
fdivr
das
push
retf
das
and
ficom
icebp
add
hlt
aad
push
sub
retf
dec
and
shr
imul
frstor
inc
inc
aas
adc
push
lahf
scas
jge
repz
or
jl
push
fimul
xchg
xlat
test
les
jl
adc
sub
out
sti
jl
in
aaa
in
gs
inc
xor
dec
adc
xor
dec
jmp
(bad)
jo
(bad)
loopne
repnz
xchg
jb
inc
push
push
xchg
push
pusha
mov
std
test
or
inc
imul
out
fcom
fsubrp
pop
fiadd
retf
cwde
cld
aad
arpl
adc
cs
nop
cmp
jae
lods
ret
lds
cmp
xchg
test
jmp
test
dec
hlt
je
mov
ss
fdiv
jmp
dec
sub
sahf
test
hlt
pop
mov
fidivr
pop
pop
and
mov
scas
in
mov
mov
popf
push
test
into
add
inc
in
pusha
adc
clc
fstp
in
mov
ret
mov
hlt
or
fnsave
xlat
inc
sbb
and
popa
imul
xchg
cdq
lods
das
or
shr
sub
or
ret
mov
iret
lods
retf
sti
xchg
and
adc
stos
mov
test
movs
cmp
add
cmc
sahf
mov
cmp
sbb
neg
stos
lea
fsubr
mov
das
jmp
test
jae
lods
dec
out
mov
out
and
jge
xchg
imul
xor
daa
aad
rcr
cmp
cmc
mov
loopne
leave
fdivr
dec
cmp
in
mov
lods
jmp
retf
lods
rcr
sbb
int3
test
cmp
add
sub
sub
sbb
push
call
mov
in
out
and
cmp
inc
(bad)
cli
bound
je
mov
fcmove
rol
clc
ds
xlat
or
sbb
push
pop
sub
push
scas
inc
adc
fsub
aas
mov
push
jne
push
push
call
push
or
adc
jb
and
aad
scas
sbb
pop
or
jecxz
cmp
or
out
sar
lahf
mov
add
xor
and
int
adc
xor
xor
and
fild
std
jge
(bad)
nop
jns
inc
arpl
ror
sti
push
mov
push
pop
jmp
add
xor
inc
pop
xchg
retf
mov
fsubr
push
mov
or
mov
or
movs
les
push
jne
cs
and
and
mov
jmp
push
outs
popf
fisttp
fimul
fcmovnbe
add
in
(bad)
out
or
hlt
adc
and
retf
pop
pop
add
jb
or
xor
cmc
fimul
push
jno
or
lea
jg
aam
loope
or
cmp
dec
jl
sbb
dec
mov
sub
push
add
push
and
lock
lods
fiadd
cmp
jno
inc
jnp
mov
in
inc
xchg
dec
cld
adc
mov
stos
bound
repnz
in
sub
xchg
push
(bad)
fcomip
scas
popaw
(bad)
pop
jmp
stc
mov
stc
sar
mov
lods
xchg
mov
and
xor
push
sub
adc
mov
scas
les
add
and
ins
cwde
or
sar
xchg
ret
inc
out
cmc
fstp
popa
(bad)
int
stc
sub
mov
mov
cmp
lock
std
push
sub
repz
es
fidivr
pop
fidivr
hlt
outs
adc
jl
pop
mov
sar
jmp
ret
enter
mov
jno
xor
mul
test
test
xchg
dec
je
enter
adc
cmc
mov
out
jmp
rol
mov
cli
adc
scas
outs
ficomp
cmps
sbb
push
movs
sahf
mov
rcr
movs
jle
adc
xor
mov
inc
dec
sub
test
pop
inc
adc
sbb
xchg
aaa
fst
ins
iret
loopne
imul
or
xor
bt
fidivr
iret
enter
inc
jae
clc
xchg
in
sbb
inc
repnz
cmps
sahf
lods
xchg
fwait
sub
push
fild
adc
mov
scas
out
fistp
movs
push
sbb
repz
add
stc
call
push
adc
cmp
push
fsubr
pushf
jb
cmp
dec
xchg
cmps
aas
int
call
retf
xor
cld
clc
push
aad
ficomp
dec
mov
arpl
inc
je
imul
sub
retf
dec
and
mov
and
xchg
dec
jmp
xchg
loop
lock
out
das
mov
mov
mov
inc
fdiv
add
into
sbb
mov
jb
mov
add
push
jb
lods
rcl
fimul
(bad)
push
pusha
(bad)
cmp
js
jg
sbb
cs
outs
cmp
mov
les
int
movs
push
push
add
cmp
xchg
push
std
iret
xchg
pop
xlat
mov
(bad)
(bad)
(bad)
aas
cmp
mov
cs
dec
adc
in
pop
mov
mov
fcomp
retf
mov
arpl
das
jmp
sbb
add
inc
(bad)
dec
ins
or
xor
mov
jge
rcl
sahf
cli
loop
mov
xchg
mov
inc
xchg
sub
dec
jbe
dec
add
sub
pop
out
push
sahf
and
xchg
jne
ins
out
xor
mov
jne
pop
enter
xor
xor
(bad)
pop
pop
cmc
retf
lods
pop
lds
sbb
ror
xchg
and
xchg
jno
push
data16
mov
cmp
and
test
cs
(bad)
mov
cmc
dec
retf
div
lods
(bad)
sbb
pop
add
lods
ror
cmp
cdq
xchg
aas
ret
mov
mov
lea
sbb
loope
sub
mov
jle
xor
jmp
add
fcmovbe
arpl
(bad)
mov
je
ret
mov
ret
aas
int3
push
std
jo
jo
stos
pusha
or
pop
popf
dec
pop
shl
mov
in
hlt
mov
popf
inc
or
xchg
and
cmps
add
dec
and
sub
sbb
gs
adc
push
and
mov
jmp
outs
pop
test
loop
and
bndstx
outs
dec
cmp
add
fwait
mov
dec
mov
dec
dec
test
push
add
popf
pop
ret
dec
fild
iret
pusha
or
std
sub
jecxz
adc
js
cmp
bswap
mov
lea
clc
inc
stc
les
leave
mov
daa
gs
jb
dec
mov
popf
sbb
test
xchg
imul
cwde
xor
cmc
mov
in
sbb
pop
mov
movs
test
xor
into
push
nop
or
mov
adc
stos
mov
mov
out
dec
neg
jns
test
dec
adc
outs
xchg
arpl
in
push
in
mov
sbb
jns
and
pop
das
sub
xchg
push
test
pop
xor
addr16
mov
mov
mov
cmp
int3
mov
pushf
mov
outs
pop
adc
mov
dec
das
push
into
test
mov
fsubr
(bad)
idiv
cwde
push
push
add
add
inc
stc
test
jmp
das
fisub
out
add
mov
retf
sbb
xor
stc
jb
adc
push
sub
cmp
xchg
call
popf
gs
addr16
mov
xor
xor
(bad)
cmp
in
pop
or
cmp
bnd
or
popa
das
ret
mov
fstp
inc
and
add
loopne
dec
(bad)
sahf
cli
fucom
ja
or
scas
ret
add
retf
test
idiv
ds
arpl
in
xchg
arpl
and
pop
gs
test
mov
cmp
hlt
fcom
mov
cwde
mov
ror
xchg
xchg
sti
jecxz
mov
inc
sbb
imul
aam
dec
ror
xlat
cs
sbb
inc
out
adc
inc
sbb
ret
sti
out
test
out
std
xor
xchg
addr16
mov
bound
out
js
mov
std
push
out
dec
pop
push
mov
mov
mov
inc
loopne
in
mov
mov
push
mov
cld
cld
push
cmc
repz
mov
mov
or
jnp
mov
test
fwait
mov
ds
adc
push
(bad)
into
ds
mov
and
inc
add
mov
mov
mov
leave
mov
mov
ins
mov
(bad)
mov
xor
inc
cmp
fcom
fwait
or
jecxz
(bad)
movs
fisttp
cmp
mov
fcmovnbe
add
sub
(bad)
jmp
cmp
(bad)
(bad)
dec
cdq
dec
adc
dec
aam
sti
ret
test
xchg
test
adc
push
xor
stos
sub
mov
mov
loope
out
fadd
sub
enter
fsub
sbb
ss
enter
sub
dec
cmp
pusha
xchg
test
mov
jo
xchg
pop
js
test
lods
enter
ins
sbb
jecxz
push
ins
cld
retf
cdq
outs
loopne
bound
(bad)
add
test
jecxz
lods
sbb
fdiv
mov
or
mov
inc
sbb
mov
mov
xor
daa
sbb
mov
in
call
push
inc
and
cmps
fs
adc
pop
pop
adc
and
sbb
jns
mov
std
mov
repz
mov
mov
xor
push
stc
push
push
cmp
add
movs
ret
jge
cwde
xor
outs
aam
pop
and
jns
je
das
in
mov
ins
push
scas
retf
inc
shl
push
sub
xchg
pushf
mov
and
test
xor
and
clc
pushw
dec
jl
retf
cdq
imul
clc
mov
call
call
out
xchg
xchg
sub
popf
es
sbb
stos
ss
cli
in
repz
je
lock
pop
inc
int3
jmp
pop
xor
(bad)
imul
loop
push
callw
loop
inc
mov
pushf
dec
je
addr16
(bad)
and
mov
sub
cs
es
inc
(bad)
jne
cmp
cmp
or
dec
pop
cmp
mov
sub
inc
cmp
pop
int3
ja
ret
in
imul
fisttp
lods
lods
add
mov
mov
rol
sahf
jg
test
adc
js
call
aas
in
jne
inc
shl
cld
xor
dec
sbb
test
cmp
xor
outs
jo
jmp
inc
xchg
fmul
mov
mov
sbb
nop
in
out
sti
pop
daa
add
nop
cs
inc
dec
dec
(bad)
mov
aad
arpl
pop
pop
mov
aas
pop
pop
mov
int
ins
cmp
xor
lea
loope
addr16
mov
cwde
test
sbb
das
xchg
cmps
mov
pop
or
push
push
stos
sbb
xchg
es
add
xchg
mov
(bad)
out
scas
lods
push
or
xchg
xchg
daa
test
fcmovnbe
in
sti
aad
sub
add
ror
pop
ja
sbb
xchg
popa
mov
out
lods
(bad)
jmp
sub
lock
and
mov
(bad)
cmp
in
or
ficomp
sbb
das
push
rol
lock
out
enter
add
xor
stos
adc
jne
ror
adc
ret
out
in
shl
ja
xchg
sbb
rcr
adc
add
add
fcmovne
cmc
push
sub
inc
imul
mov
inc
in
fisttp
or
cld
push
rcl
mov
cmps
scas
push
fmul
pusha
push
fsub
or
pop
shl
mov
sti
add
mov
daa
sub
outs
jl
pop
and
sbb
sbb
aad
sub
jns
fstp
xchg
lock
leave
int
or
scas
cmc
retf
push
cld
xchg
xor
(bad)
push
jb
push
es
test
mov
mov
jmp
pop
ja
test
mov
js
ja
dec
fimul
push
pop
xchg
jb
sbb
rol
xchg
in
pop
cmp
movs
test
(bad)
cmp
mov
jb
mov
xlat
popf
cmp
(bad)
leave
in
inc
std
stc
rol
retf
pusha
jo
and
jo
sub
clc
out
test
inc
loopne
(bad)
cmp
movs
jg
scas
lahf
mov
adc
xor
push
add
pop
add
enter
out
pop
neg
js
leave
cmp
(bad)
in
xor
and
ret
retf
pop
mov
hlt
cdq
inc
sbb
aad
and
xchg
add
or
aad
add
cwde
ins
movs
xchg
and
cmps
jl
or
into
and
xchg
mov
repnz
outs
cmps
dec
inc
push
fld
pop
jp
cmp
icebp
loop
je
pop
inc
test
mov
jne
push
sub
retf
cmps
daa
in
ret
or
mov
stos
push
jo
scas
add
sbb
mov
leave
and
jle
push
dec
jae
mov
xchg
xor
mov
inc
dec
psubsb
dec
adc
ror
jl
mov
test
sbb
fdivr
adc
cwde
xor
stos
fisub
test
lods
aaa
xor
std
sbb
ret
jp
adc
push
or
sbb
mov
out
pop
aam
les
lock
mov
repz
jle
pop
pop
dec
mov
xchg
inc
sbb
add
jmp
test
and
mul
or
mov
std
je
and
sbb
mov
fwait
adc
or
mov
pop
shr
ror
xor
jns
stos
jl
cmp
shl
daa
adc
xchg
add
addr16
push
adc
dec
dec
test
cmp
xchg
lods
loop
add
in
or
(bad)
and
test
cmps
push
xchg
mov
sti
jp
int
and
jo
pop
in
mov
jo
cli
(bad)
je
movs
stc
mov
ins
jmp
lods
xchg
lods
push
xor
(bad)
retf
mov
sti
pop
and
clc
lock
and
sub
neg
jp
std
mov
(bad)
(bad)
xchg
dec
out
xchg
cmc
hlt
ja
icebp
push
and
or
aas
mov
mov
je
cmp
xor
mov
je
or
out
cld
fbld
lods
jae
arpl
fisubr
dec
fsub
jecxz
and
aaa
into
or
add
xchg
sbb
pop
xor
shl
push
scas
add
xchg
pop
push
cwde
loope
mov
aad
pop
sub
cmp
or
lahf
daa
push
daa
add
jb
inc
dec
mov
test
inc
cmc
fwait
cld
cld
inc
jle
adc
mov
or
fs
and
pop
sub
lds
sahf
cmps
adc
outs
pop
add
mov
(bad)
inc
ins
jg
pop
out
cs
lahf
cmps
and
fcomp
fmul
test
adc
pop
js
push
(bad)
mov
test
sub
out
lahf
(bad)
and
jg
mov
std
shl
mov
add
cmp
fs
push
xor
(bad)
cmp
cmp
fild
sar
xchg
cmps
bound
aaa
imul
push
loopne
hlt
xor
sub
add
push
adc
call
(bad)
or
adc
fsub
xchg
int
adc
lods
out
fwait
push
leave
xor
call
aam
push
mov
jle
xor
push
jo
xlat
pop
popa
mov
add
shr
jl
in
cmps
push
das
sbb
ins
jnp
cmp
rcl
(bad)
inc
adc
lea
xor
add
mov
pop
callw
ret
and
ret
mov
jle
int3
jmp
in
callw
mov
xchg
cmp
cli
mov
push
loop
adc
call
scas
std
cdq
js
inc
adc
sub
cmc
cwde
inc
pop
mov
les
cmps
stos
jmp
pop
call
pop
fisttp
(bad)
data16
idiv
jl
shl
nop
test
inc
out
xchg
int
and
pop
jo
xchg
push
fdivr
je
test
bound
cmps
icebp
out
jo
bound
and
and
(bad)
movs
adc
loope
and
(bad)
mov
mov
mov
pop
imul
push
fsubp
fs
sbb
int
sbb
addr16
fwait
sub
out
cmp
aad
fldcw
jp
sub
je
sbb
icebp
sub
repnz
fbstp
rcr
outs
fsub
popf
add
xchg
and
test
cmps
push
stos
mov
inc
out
xchg
jl
adc
pop
test
add
pusha
pop
xor
ss
inc
sti
fimul
es
jae
mov
fwait
mov
imul
loop
and
icebp
or
leave
cwde
push
sar
or
and
or
jmp
loope
mov
cmp
loope
retf
sbb
ins
mov
ins
dec
enter
outs
stos
pop
add
adc
and
retf
and
outs
mov
stos
arpl
imul
add
or
call
add
adc
mov
jge
jp
outs
push
cmp
sbb
imul
and
push
push
div
imul
(bad)
mov
xchg
mov
add
mov
je
cld
sysenter
sbb
push
imul
cmp
or
push
popa
add
cld
xor
push
arpl
mov
das
jae
push
xor
fidivr
stc
aam
sub
imul
out
jne
arpl
das
out
pusha
imul
in
xchg
test
(bad)
idiv
lahf
inc
out
and
stos
push
iret
neg
int
sti
mov
adc
jmp
inc
mov
cld
sbb
adc
(bad)
jmp
stos
cmp
sub
aad
jno
mov
cdq
ja
lock
pop
mov
mov
fwait
pop
fistp
imul
sar
lahf
adc
movs
push
nop
inc
pop
stos
dec
lds
inc
sub
push
and
mov
mov
inc
pop
sar
test
mov
iret
mov
fidiv
iret
pop
(bad)
iret
mov
(bad)
mov
ffree
sub
lock
outs
push
jb
jno
mov
sbb
jno
jae
push
jae
xchg
shr
arpl
sbb
lahf
shl
pushf
retf
js
mov
push
and
inc
imul
or
push
jno
mov
in
popf
pushf
les
and
ret
and
div
(bad)
lods
push
inc
fild
jmp
or
sub
sub
ss
fist
repnz
stos
repnz
stos
jae
movs
adc
scas
inc
mov
push
ins
stos
bound
jmp
adc
ret
push
shl
sub
cmp
pop
dec
in
and
sub
add
sbb
push
sbb
sbb
and
cdq
push
in
xchg
mov
lds
rcl
bswap
mov
or
bswap
ficom
add
mov
ds
mov
add
mov
fstp
mov
xor
ins
mov
ins
sub
dec
cwde
jo
clc
push
mov
cmp
jmp
aad
call
(bad)
fcom
test
popf
nop
adc
sub
push
(bad)
(bad)
xchg
mov
adc
imul
push
dec
cld
cmp
cmp
fdivr
ds
xchg
scas
pop
mov
cdq
cs
sbb
xlat
icebp
nop
mov
and
jae
mov
inc
sbb
sub
aad
int3
loope
repz
in
adc
add
cmps
pushf
jge
cmp
sbb
popf
pusha
not
sub
push
mov
out
xor
movs
mov
shl
mov
pop
jae
(bad)
sub
add
push
jl
push
fwait
jg
or
imul
and
es
push
xor
dec
(bad)
pusha
xchg
sbb
out
or
sub
dec
fcom
cmp
(bad)
jl
xchg
stos
xchg
(bad)
inc
mov
sbb
popa
shr
das
push
sbb
inc
or
lock
pop
lea
pop
shl
mov
stc
pop
sbb
mov
cdq
ret
fs
xor
retf
shl
not
(bad)
pushf
pop
mov
jp
mov
setl
dec
sbb
iret
push
loop
push
loope
or
loop
clc
hlt
jbe
mov
mov
lods
mov
ins
call
push
scas
je
and
mov
push
ror
xchg
cmp
fbld
inc
cli
imul
pushf
sar
jp
rol
shl
add
clc
or
xchg
jg
imul
dec
ins
push
dec
inc
call
mov
dec
adc
and
dec
dec
ficomp
jno
pop
xchg
mov
outs
mov
dec
pop
dec
sbb
and
mov
lahf
mov
pop
loope
xchg
cdq
fnstsw
stos
cwde
xor
scas
jge
inc
jmp
cmps
lods
sub
mov
sub
mov
outs
imul
push
aam
jmp
cmps
fs
addr16
sbb
mov
adc
inc
cmp
outs
arpl
arpl
test
bnd
cmp
cmp
or
(bad)
push
data16
retf
xchg
push
push
out
xchg
sub
jmp
cld
inc
push
dec
aas
call
inc
out
jp
in
and
cmp
cld
test
sti
mov
xchg
mov
mov
push
cmps
dec
xchg
jmp
stos
ins
jbe
out
ins
mov
test
add
lods
retf
movs
stos
aad
inc
in
xor
add
scas
cmps
xor
shl
sbb
rol
pop
push
shl
fs
adc
add
pop
or
xchg
cmp
mov
sti
cmps
xchg
sub
hlt
lds
mov
mov
xchg
iret
push
xor
retf
jg
in
lock
scas
xor
push
sub
jg
dec
ror
sbb
cmp
jns
push
xor
shr
(bad)
jle
xchg
cli
lods
add
jbe
pop
in
dec
mov
or
movs
imul
std
ret
push
call
ds
add
lds
jo
adc
aas
cmp
xchg
xchg
es
and
stc
ror
je
lds
not
adc
xor
(bad)
not
sti
jle
inc
jecxz
adc
in
lea
jmp
imul
nop
xor
dec
mov
jno
mov
push
xchg
push
push
or
pop
stos
in
loopne
mov
ins
stos
push
pop
jp
add
mov
pop
pusha
mov
and
push
sub
inc
inc
bound
dec
and
push
loop
test
sub
mov
and
adc
xor
mov
mov
in
aam
ficom
ret
sahf
cwde
mov
inc
sub
adc
xor
lock
movs
ins
mov
mov
add
sub
sbb
into
out
sbb
pop
cdq
mov
mov
fadd
push
mov
fwait
pop
cmps
jmp
jo
lods
or
lods
jg
fsubr
xchg
sub
pushf
xor
cpuid
mov
popf
jecxz
mul
push
out
adc
add
xor
outs
mov
mov
mov
mov
test
adc
les
ret
retf
out
xchg
pop
mov
pop
jmp
push
add
and
mov
out
cmp
pop
sbb
mov
xor
daa
mov
retf
inc
lods
mov
jns
jae
out
and
shl
pop
xchg
imul
hlt
cmp
push
mov
sbb
sub
xchg
xchg
xchg
(bad)
jecxz
or
retf
cdq
inc
or
push
mov
push
hlt
retf
movsx
jmp
xchg
mov
mov
adc
lock
dec
jns
push
mov
rcl
fcomi
addr16
enter
test
mov
sub
push
inc
xchg
mov
imul
(bad)
xchg
sub
call
js
dec
mov
jnp
pop
mov
pop
push
rcr
pop
xchg
sub
cli
out
xor
jne
lds
js
(bad)
xchg
loopne
aam
sub
jp
nop
jge
arpl
fild
dec
imul
cli
add
jmp
test
pop
mov
retf
sub
fwait
xchg
ins
iret
or
and
jecxz
xor
retf
and
dec
inc
sbb
dec
push
mov
jnp
jge
jne
out
pop
mov
(bad)
iret
xchg
ss
lds
or
xchg
and
xor
and
outs
lahf
push
xor
xor
repnz
aaa
push
jbe
test
mov
dec
add
add
xor
and
pop
ds
clc
jmp
enter
lods
loop
popf
test
inc
xlat
sub
mov
daa
shr
ret
sar
pop
cmp
sub
jno
push
popa
hlt
sahf
aam
cmc
jl
adc
je
adc
sahf
std
test
push
sbb
and
pop
pop
imul
sti
sbb
int3
mov
dec
xor
mov
sbb
fs
jecxz
add
and
jge
scas
lods
push
ret
and
jg
ficomp
mov
jnp
fist
and
(bad)
shr
push
dec
push
sub
stos
lods
pop
lock
stos
sbb
xor
je
call
int
test
cmp
ficomp
push
add
ret
mov
mov
push
dec
(bad)
sub
das
mov
cmovle
data16
nop
xchg
sbb
sub
clc
mov
dec
aas
jbe
jmp
mov
imul
mov
mov
sbb
mov
pop
out
and
movs
xchg
sahf
aam
xchg
jne
or
aas
cmp
push
xor
clc
cwde
(bad)
aam
sub
inc
loopne
(bad)
xchg
adc
out
fdiv
push
push
mov
sbb
push
sbb
ds
lods
nop
and
ror
mov
ins
xor
mov
icebp
nop
sbb
adc
mov
sbb
or
jmp
outs
movs
das
out
cmp
iret
rol
pop
add
adc
mov
test
or
jl
outs
imul
aad
bound
jbe
clc
pop
push
dec
je
or
mov
pop
test
push
push
xor
adc
adc
aad
test
sub
mov
xchg
(bad)
mov
add
mov
pop
pusha
int
mov
bound
pop
cmp
div
cdq
lods
inc
mov
mov
jle
scas
dec
push
lds
or
jb
jmp
cmp
sub
mov
pop
es
mov
outs
outs
xchg
add
jge
adc
jl
jmp
inc
ss
in
cli
sbb
push
xchg
and
xchg
adc
mov
lods
jbe
cdq
inc
mov
out
and
enter
(bad)
xor
into
jl
out
inc
cmc
enter
jmp
add
jbe
mov
lds
aas
outs
pop
push
cvtps2pd
cmp
add
mov
push
mov
or
jg
jg
imul
xchg
inc
loopne
add
cs
(bad)
pop
add
sti
xchg
jne
adc
add
jmp
rcr
imul
adc
shr
scas
adc
in
hlt
and
xor
(bad)
jmp
movs
and
sbb
inc
pop
and
arpl
aad
mov
js
ja
inc
xchg
bnd
jno
push
cwde
push
(bad)
sbb
loop
xchg
add
aas
sub
mov
push
push
xchg
mov
mov
in
pop
shl
push
adc
into
lods
sbb
mov
pusha
cmp
sub
mov
jno
(bad)
inc
shl
adc
hlt
add
pushf
cs
xchg
xchg
std
mov
add
inc
mov
push
ret
cld
or
scas
ret
call
mov
data16
cmc
mov
dec
add
dec
add
arpl
out
sti
or
out
test
ins
push
and
add
sbb
jle
xor
pusha
fwait
add
in
xchg
in
call
jecxz
xchg
push
adc
ins
arpl
repnz
adc
mov
(bad)
mov
push
mov
mov
pusha
scas
aas
dec
inc
mov
sub
inc
aam
fidivr
retf
(bad)
in
cmps
mov
inc
fnstenv
cmp
cmc
pusha
repz
jl
add
add
xchg
les
bound
lds
xor
add
jae
adc
cmp
sub
lahf
fwait
aam
or
out
dec
test
push
(bad)
and
xor
movs
fisttp
out
cwde
add
cmp
sbb
cs
xchg
or
and
sub
jl
mul
mov
cmp
xchg
cmp
add
dec
jnp
cmp
call
push
shl
(bad)
addr16
jnp
inc
jmp
jnp
mov
cdq
in
rcr
fstp
ins
dec
test
mov
jmp
cs
pop
cmp
adc
outs
js
sub
stc
push
pusha
push
xchg
arpl
retf
inc
test
lds
(bad)
push
pop
idiv
jb
sbb
pop
sbb
std
adc
inc
pop
retf
push
jbe
xor
outs
xor
xor
dec
push
ror
xchg
mov
cmc
cmp
mov
sbb
xchg
cmp
test
lods
pop
(bad)
fstp
push
jne
(bad)
and
gs
and
div
je
mov
jb
(bad)
sub
(bad)
xchg
inc
ins
dec
add
mov
push
or
mov
les
daa
mov
scas
aaa
mov
xchg
rcr
in
mov
xor
jo
inc
xchg
mov
cmc
xor
jns
retf
stos
cmp
mov
jp
outs
mov
cwde
aas
dec
lds
jmp
pop
jge
clc
call
pop
inc
sbb
adc
aam
ja
addr16
add
xchg
ret
sub
xchg
into
stos
adc
lods
fwait
(bad)
ins
pop
mov
dec
add
fldenv
sub
mov
js
cmp
loopne
jns
xchg
loop
(bad)
mov
xchg
fbld
pop
leave
aam
shl
icebp
xlat
cmp
or
push
loop
outs
stos
loop
nop
sti
hlt
(bad)
lock
iret
icebp
sub
adc
jge
(bad)
xor
ss
sub
pop
push
outs
test
jp
scas
push
or
(bad)
out
aad
pop
push
adc
push
inc
test
shl
aaa
xchg
jmp
test
sub
dec
jo
mov
(bad)
ds
cli
pop
mov
(bad)
aam
mov
call
mov
inc
mov
fiadd
xchg
nop
pmaddwd
inc
(bad)
cs
rcl
cmps
fistp
mov
adc
mov
cmp
jb
cmp
mov
and
out
shl
test
and
jmp
out
bnd
ret
push
sub
adc
pop
or
pop
popf
inc
adc
lods
shr
into
ret
stos
jnp
mov
sub
(bad)
sti
xchg
ss
xchg
xchg
popa
fadd
aaa
call
add
dec
repnz
or
fcmovnbe
jge
imul
add
pop
bound
enter
cld
stos
push
xchg
jo
push
mov
aas
call
mov
in
pushf
jo
pop
imul
cmp
scas
jmp
dec
arpl
pop
cld
sbb
mov
mov
cmp
loop
pop
cmps
leave
inc
fdiv
stos
inc
dec
into
repz
mov
mov
sbb
iret
or
or
cs
xchg
mov
dec
jp
(bad)
scas
pop
xor
sbb
xlat
vandpd
gs
push
popa
jmp
sti
test
adc
pusha
mov
pusha
mov
rep
and
dec
jo
arpl
add
aam
aas
in
xchg
enter
imul
jmp
jne
jnp
mov
mov
pop
push
les
xchg
pop
xor
mov
(bad)
mov
pop
ret
adc
aam
sub
fist
or
pop
add
mov
cmps
cmps
push
test
xor
sbb
das
jl
mov
dec
sub
stos
sub
pop
outs
dec
adc
pop
jbe
add
sti
rol
out
push
dec
pop
pop
rol
adc
mov
xchg
cmps
repz
mov
imul
fbld
jns
dec
add
ficomp
mov
sub
push
dec
in
xchg
(bad)
jnp
enter
int
cmps
ret
std
shl
ss
lods
pusha
push
arpl
cdq
push
call
xchg
jl
mov
jo
adc
push
lds
inc
aaa
dec
ins
addr16
outs
jb
aas
popf
mov
dec
(bad)
jae
mov
pop
daa
pop
aas
mov
(bad)
out
push
fistp
xchg
xchg
fistp
call
ret
xchg
sbb
adc
ds
add
inc
mov
arpl
mov
and
cmps
mov
fild
push
out
js
pop
jnp
push
mov
sbb
and
or
mov
inc
inc
push
cs
scas
cmp
shl
into
cmp
call
ins
xchg
dec
jle
dec
jmp
dec
dec
sti
jb
aas
mov
jns
adc
xor
jbe
or
stos
fld
rol
sub
cmps
sti
rcl
sbb
out
inc
dec
sub
mov
push
xchg
call
jecxz
mov
jl
add
dec
pop
inc
(bad)
in
addr16
mov
in
stos
(bad)
cmp
fwait
punpcklwd
aad
out
cmps
cmp
cdq
rcr
mov
inc
scas
jb
imul
cdq
fstp
fdiv
mov
adc
xor
je
dec
(bad)
out
std
cmps
imul
jno
je
addr16
add
cmp
sub
mov
lods
mov
sbb
stos
movs
fisub
and
mov
cmp
scas
nop
dec
push
sub
jb
aad
movs
fwait
push
(bad)
ret
mov
mov
enter
neg
xor
fs
out
cs
sbb
cdq
or
or
xor
outs
adc
cmovo
(bad)
out
mov
dec
mul
pushf
fsubrp
loope
dec
sub
or
sub
fisttp
fiadd
lock
mov
xchg
fadd
or
push
popa
and
pop
das
mov
push
shl
stos
push
test
cli
cmc
repnz
mov
jmp
jne
(bad)
fcomp
jnp
(bad)
push
cmp
inc
js
xor
pop
and
xor
adc
jb
jp
mov
inc
arpl
jne
dec
sbb
sub
aad
xchg
mov
pop
adc
repnz
ja
push
cdq
ficom
lahf
(bad)
cmps
jns
mov
sbb
sahf
arpl
(bad)
and
sbb
adc
mov
mov
popa
mov
jecxz
lods
and
(bad)
aas
pushf
popa
mov
cmc
data16
loop
mov
xor
cmp
mov
mov
js
mov
mov
mov
aas
hlt
call
in
movs
pop
mov
lods
jge
imul
lods
sahf
ss
popa
cmp
sub
xor
or
and
sar
lock
ins
int
cmp
jp
stc
and
outs
mov
or
lods
adc
push
sub
daa
fimul
xchg
test
pusha
ret
cmps
xor
dec
sub
mov
gs
lods
jl
int
or
dec
dec
bound
or
dec
mov
inc
or
fs
repnz
jmp
cmps
and
xchg
and
and
xchg
cmp
outs
jl
retf
loop
ror
dec
mov
stos
xchg
dec
jge
ins
push
and
or
dec
mov
scas
mov
fstp
cli
aaa
fsub
jg
fdivr
test
mov
lahf
mov
cmps
cmp
mov
jg
mov
push
ins
test
out
(bad)
push
cli
test
in
les
mov
(bad)
out
cld
gs
cmp
call
mov
(bad)
lds
pop
jmp
bound
mov
mov
push
inc
mov
jmp
int3
mov
push
lods
sbb
lods
mov
hlt
sub
mov
in
je
outs
popf
xchg
gs
cli
shl
fidivr
leave
jne
aam
mov
daa
out
and
mov
iret
xlat
cld
xchg
xor
jge
sbb
in
mov
sahf
lds
dec
push
scas
or
sub
movs
lahf
js
and
ror
cwde
push
into
ror
inc
inc
jmp
inc
push
mov
inc
out
outs
mov
bound
sub
xchg
fld
jle
int3
aas
mov
daa
xor
inc
retf
jno
and
xchg
sbb
or
lods
sub
push
cld
mov
push
push
xchg
adc
iret
push
mov
clc
dec
loopne
push
mov
hlt
jmp
pop
sub
push
loope
out
add
mov
je
retf
jmp
push
add
pop
out
add
sbb
cmp
jp
movs
add
jle
test
cmp
into
cmp
pop
les
leave
daa
and
jle
fs
mov
fwait
mov
pop
dec
das
and
inc
jae
jo
jbe
stos
or
and
fs
sub
icebp
stos
loop
fdiv
push
push
popa
dec
inc
and
les
sbb
cmps
aas
push
cli
cmp
mov
loope
out
lods
cmp
repnz
push
out
sbb
pop
xchg
push
(bad)
stc
xchg
fimul
ins
data16
sar
ja
ss
mov
fnsave
lods
adc
inc
mov
cmps
jmp
push
(bad)
repnz
or
and
jnp
les
ficomp
imul
hlt
mov
stc
into
mov
rol
outs
mov
xchg
xor
push
sub
dec
movs
ror
jmp
dec
dec
dec
sub
icebp
lea
outs
cmp
test
sbb
mov
mov
ror
push
mul
lods
loope
adc
test
sub
push
call
inc
xchg
push
mov
mov
stos
jecxz
loop
out
xchg
repz
pusha
and
xor
xor
(bad)
or
cmp
fiadd
shld
mov
and
das
test
and
repz
in
adc
cmp
fidivr
int3
push
stc
or
mov
out
pushf
loop
jl
bound
sbb
movs
ret
retf
add
or
sub
push
mov
mov
ds
xlat
sbb
pop
lds
jnp
mov
jne
adc
sub
xchg
inc
xchg
cmp
mov
add
cli
je
in
hlt
mov
sbb
sbb
mov
not
sbb
nop
les
into
pop
sub
mov
mov
fadd
add
les
sbb
or
push
dec
loope
cmp
mov
ins
dec
aas
xor
dec
mov
cdq
idiv
xor
jl
xor
lods
data16
xor
fadd
out
mov
mov
repz
push
bnd
outs
dec
int3
push
inc
sbb
jb
outs
inc
mov
fadd
fdiv
mov
lods
lods
adc
aaa
imul
enter
push
outs
jmp
outs
mov
imul
cmp
call
add
pop
jns
cmp
xchg
mov
enter
test
mov
or
cmps
push
push
pop
fwait
adc
mov
scas
xor
cmp
mov
sub
retf
rcl
jmp
outs
sbb
xchg
sbb
popf
dec
sub
popa
iret
jne
test
jae
cmp
rcl
xchg
lods
ret
sahf
mov
bound
xchg
les
xor
std
pop
mov
daa
cs
(bad)
xchg
sbb
mov
dec
and
pop
inc
jbe
mov
sub
sbb
pop
push
or
add
dec
mov
pusha
ret
call
sar
or
aam
inc
sub
adc
pushf
mov
xlat
icebp
rcl
out
mov
or
push
mov
sub
stos
inc
dec
imul
xor
mov
fisttp
push
xchg
icebp
sub
outs
push
sbb
adc
fwait
ret
clc
or
add
aas
fs
jmp
jbe
xchg
cmps
add
cmp
shl
mov
fwait
or
fs
popf
je
pop
sub
mov
or
adc
mov
and
cmc
leave
pop
pop
imul
cmc
in
lds
or
test
aaa
ja
js
jno
inc
xchg
xor
cmc
pop
repnz
lea
add
shl
lahf
into
sbb
jo
mov
push
push
sub
fstp
xchg
jnp
sbb
add
ret
or
lea
gs
sbb
inc
add
or
mov
inc
pop
outs
pop
out
inc
xchg
push
call
pop
inc
outs
xchg
mov
xchg
pushf
shl
pop
aad
cmp
cmp
dec
add
movs
mov
cmp
(bad)
loopne
int
mov
cs
pushf
jae
in
cli
mov
jle
sub
cs
ja
xor
mov
call
pushf
sub
lahf
fnsave
and
test
je
std
mov
sbb
pop
sar
dec
adc
and
cld
mov
adc
jg
lock
sbb
jnp
int
jno
cwde
in
sub
sub
test
dec
std
repz
inc
mov
or
sub
adc
cmp
ror
cli
leave
mov
and
mov
loope
test
(bad)
cli
ffree
inc
ret
mov
push
ja
call
arpl
(bad)
aam
and
inc
mov
mov
cdq
popa
jecxz
mov
jp
in
push
fdivr
stos
(bad)
retf
ss
nop
aam
mov
outs
and
cld
sbb
call
pusha
mov
adc
push
dec
and
xor
push
cld
out
iret
mov
or
stc
jmp
sbb
xchg
adc
ds
inc
stos
inc
jns
inc
cmp
inc
xchg
pusha
mov
cmps
scas
adc
pop
retf
icebp
xchg
cmp
ret
clc
retf
test
dec
or
mul
or
inc
mov
sbb
jno
add
stos
mov
mov
outs
ja
adc
ins
inc
mov
ds
aad
ins
jno
xchg
rol
cdq
push
call
and
push
pop
mov
sub
mov
out
outs
sub
xchg
xor
jne
dec
push
add
inc
addr16
call
stos
inc
shl
cwde
jmp
pop
xchg
push
xchg
mov
pop
push
inc
mov
pop
xor
shl
sbb
stos
cli
sub
and
in
fsubr
ret
mov
mov
jmp
sub
cmc
add
xchg
outs
aam
fld
mov
xor
(bad)
xor
xlat
out
int3
pop
out
adc
pop
dec
ret
adc
ins
ds
pop
(bad)
sub
mov
xor
push
xlat
mov
mov
push
mov
jl
outs
mov
idiv
or
mov
sbb
pop
jge
pushf
jmp
repnz
aas
pop
adc
cmp
and
xchg
or
mul
leave
call
mov
jnp
and
loop
jo
and
sub
dec
dec
or
mov
mov
cmp
loopne
retf
stc
xchg
cs
clc
mov
(bad)
rcl
popf
sub
add
inc
fdivrp
pop
sbb
xchg
fldenv
cmp
push
rol
lea
mov
dec
jns
sbb
xchg
jmp
je
mov
jle
mov
push
(bad)
lods
lds
fild
push
add
lods
out
lods
add
aas
scas
(bad)
push
dec
add
fisub
pop
cmp
mov
add
ret
mov
jle
mov
pushf
rol
ret
lock
push
and
adc
icebp
xchg
(bad)
cwde
(bad)
adc
xchg
cli
push
mov
xchg
jne
lahf
inc
jmp
pushf
add
mov
jp
outs
pop
jl
mov
in
(bad)
fist
call
mov
mov
das
xlat
ret
jns
xchg
retf
hlt
push
mov
sar
rcl
lds
cmp
les
pop
das
sub
xchg
mov
sahf
mov
into
inc
adc
pop
shl
mov
mov
dec
outs
cmps
fucom
out
add
hlt
mov
push
hlt
dec
mov
add
das
std
fnstcw
push
imul
loope
sbb
ja
mov
loope
ds
(bad)
pop
and
fs
sbb
pop
mov
std
test
mov
jo
mov
inc
ins
dec
pop
dec
js
popa
pop
xchg
add
and
retf
jb
sub
sar
jae
sub
scas
mov
lahf
mov
mov
xlat
cmp
test
inc
stos
dec
jmp
adc
mov
rol
(bad)
dec
sub
push
repnz
mov
bnd
sahf
add
add
(bad)
sti
fadd
inc
(bad)
cdq
sbb
lea
push
cmps
xor
js
popa
dec
sub
adc
int3
aas
mov
mov
mov
mov
cli
aam
jp
pop
fidivr
push
push
cmp
(bad)
imul
(bad)
jecxz
push
addr16
sbb
jae
(bad)
sub
ficomp
je
mov
sbb
rol
clc
retf
stos
bound
xchg
leave
outs
push
aas
xchg
icebp
dec
(bad)
jo
pop
inc
in
pop
jl
push
sub
pop
mov
fmul
xor
shl
into
and
inc
and
xor
pop
adc
lea
pop
add
imul
adc
and
xchg
test
mov
das
mov
movs
rol
pop
jp
inc
dec
(bad)
push
(bad)
or
(bad)
pop
call
cmp
pop
icebp
cwde
das
(bad)
mov
shl
and
rcr
fs
xchg
xchg
int
jno
pop
xor
bsf
sbb
das
cmp
jno
jmp
jl
mov
frstor
jmp
in
repnz
call
push
sti
call
jp
add
push
stos
push
push
xor
adc
stos
cmps
js
pop
mov
(bad)
icebp
fnstcw
xor
xor
sbb
lods
push
jmp
push
ret
and
js
mov
or
jnp
xchg
lds
jne
xor
sub
sub
scas
rcr
retf
or
push
or
mov
mov
lods
in
xor
imul
in
sar
sub
xor
xchg
and
cmp
aas
mov
jo
std
shl
aaa
jne
test
ds
mov
xchg
mov
mov
pusha
mov
push
pop
in
into
std
xchg
dec
retf
or
xchg
mov
je
call
je
push
ret
cwde
mov
cwde
mov
or
mov
xchg
(bad)
sub
bound
aam
fistp
push
inc
je
xor
or
cs
xchg
ja
jno
icebp
aad
inc
cdq
jns
dec
enter
test
(bad)
pop
jmp
mov
inc
mov
aaa
cmp
fist
rcl
jge
push
mul
jmp
leave
int3
pop
pop
jbe
fmul
add
stos
add
pushf
mov
mov
inc
repnz
sub
aaa
push
shl
push
pop
sub
movs
inc
stos
mov
inc
xchg
jmp
ud1
sub
dec
xchg
out
mov
leave
scas
mov
cmc
adc
pop
dec
pop
das
lahf
in
xor
and
jp
test
mov
mov
lahf
add
xchg
lods
test
movs
lea
mov
xor
pop
jg
inc
mov
pop
cmp
or
pop
push
or
xchg
mov
nop
sbb
test
dec
jae
(bad)
scas
ja
call
sbb
shr
sub
mov
into
dec
popf
xchg
aaa
in
mov
dec
sbb
mov
mov
mov
stos
jl
and
lea
push
les
popf
and
jmp
adc
mov
lods
in
test
loope
in
add
dec
and
pop
mov
sbb
repz
test
push
neg
mov
inc
xchg
mov
xchg
push
cmp
shl
jle
push
inc
out
ins
cmp
push
mov
jecxz
div
cmc
pop
jmp
and
call
out
xchg
ror
js
mov
aam
lock
xor
adc
jg
or
xlat
xor
int3
push
add
pop
sar
repnz
mov
imul
xor
jns
test
inc
xchg
retf
jmp
dec
lds
push
xor
push
mov
fldcw
out
and
pop
lea
push
pop
stc
mov
sub
js
shl
cwde
ror
xchg
inc
push
test
push
inc
push
mov
and
(bad)
in
push
not
fwait
outs
shl
xchg
test
into
outs
scas
and
(bad)
shl
xor
(bad)
sahf
movs
and
int3
inc
popf
mov
xchg
add
pop
or
call
mov
cmp
xchg
dec
mov
cli
mov
outs
sub
stos
sbb
imul
arpl
jno
repnz
scas
(bad)
(bad)
cs
nop
mov
push
xor
or
sbb
mov
push
mov
stc
mov
jp
outs
xchg
sbb
ret
jmp
enter
jbe
(bad)
fbld
test
or
fs
dec
ds
push
push
xchg
in
(bad)
and
leave
sbb
push
mov
adc
sub
lock
add
jae
adc
xlat
xchg
je
push
les
mov
sbb
popa
popf
sbb
mov
(bad)
aas
mov
daa
into
mov
cmps
mov
mov
fwait
sbb
nop
mov
jg
mov
mov
dec
and
inc
ja
in
mov
not
pop
inc
xchg
in
adc
pop
js
movs
mov
call
test
arpl
popa
test
popf
popa
ror
sar
inc
int
mov
pusha
jl
outs
ret
xchg
scas
rcr
jae
mov
mov
repz
sahf
push
imul
out
jns
inc
imul
es
jb
hlt
ja
ins
out
fnsave
mov
imul
ja
in
and
jmp
repz
imul
xchg
pop
push
adc
mov
int3
aas
aaa
out
mov
in
stc
ficomp
ins
test
xor
cmp
ins
(bad)
pop
ins
xchg
ja
sbb
adc
sbb
cmp
mov
outs
inc
dec
dec
(bad)
or
sahf
cld
lods
and
adc
ss
xchg
cmp
mov
lods
xor
test
cmp
push
pop
push
cmp
jae
cmp
sub
jl
mov
dec
leave
addr16
std
imul
jne
xor
jmp
jecxz
nop
mov
pop
retf
mov
jo
in
cli
in
mov
shl
adc
fistp
mov
test
and
mov
dec
pop
sub
sbb
adc
lods
xchg
dec
(bad)
fidivr
or
pop
pop
repnz
ins
imul
cmp
fcomp
ret
jecxz
sub
inc
(bad)
(bad)
ja
add
push
jnp
cmp
retf
cs
sub
mov
(bad)
test
sar
push
mov
cmp
imul
rol
ins
sbb
sbb
add
fstp
movs
add
call
mov
jbe
mov
rcl
rcl
sub
and
enter
cli
cmp
lds
leave
ins
mov
fist
shr
clc
add
push
lea
pop
mov
test
cwde
sbb
push
out
sub
xchg
fmul
cmps
ss
push
das
jp
in
out
nop
sub
push
rol
mov
fcomi
jecxz
add
js
cmp
out
stc
sahf
fwait
aas
stos
dec
xchg
cdq
ror
lods
cmc
inc
xor
in
imul
out
mov
xchg
or
add
xor
xchg
sub
fstp
add
stos
mov
pop
cmp
in
cdq
pop
push
mov
mov
ins
sbb
fcom
add
mov
imul
fsubr
inc
into
mov
jmp
adc
cli
push
adc
std
push
scas
lods
shl
out
cmps
mov
fadd
xchg
mov
cmc
and
add
and
mov
xor
lds
fisttp
inc
mul
or
sub
imul
test
aaa
mov
and
comiss
jnp
and
jmp
pop
jae
sub
inc
add
ds
mov
fs
pop
xor
or
mov
int3
pushf
test
adc
ins
and
xchg
dec
cmp
(bad)
push
dec
inc
xor
cmp
int
jge
lods
mov
mul
cmp
and
retf
repnz
mov
cmps
push
stos
mov
das
cmp
test
test
sbb
dec
in
fsubr
fcom
and
xacquire
popf
movs
jg
dec
xchg
mov
test
jmp
add
imul
in
pop
fist
js
sbb
lock
retf
dec
mov
jnp
jmp
push
mov
push
and
xor
paddq
inc
lahf
xor
pushf
pop
add
dec
xchg
pop
clc
stos
mov
sbb
push
mov
mov
xor
inc
pop
sub
mov
jle
pop
xchg
(bad)
ds
aad
adc
inc
test
idiv
js
xor
mov
(bad)
fistp
jl
fwait
js
inc
xor
mov
icebp
pop
int
nop
lahf
adc
inc
adc
push
add
cmp
test
mov
add
rcl
jecxz
movs
mov
or
and
add
or
stos
adc
jo
sbb
clc
sub
call
in
pusha
xor
(bad)
data16
pop
jecxz
pop
sub
minps
(bad)
mov
mov
enter
dec
cmp
pushf
pusha
das
cmc
mov
cmp
rcr
ror
xor
mov
in
in
pop
jmp
repnz
enter
aad
add
(bad)
sub
daa
cmp
xchg
inc
imul
xchg
call
xchg
push
and
leave
movs
stos
aas
js
cmp
mov
xor
(bad)
xor
xchg
int3
jnp
and
pop
dec
outs
fimul
xor
daa
pop
call
fwait
or
xchg
lahf
mov
inc
and
test
mov
sbb
cdq
mov
in
mov
stos
ds
fcomp
test
shl
loopne
arpl
sbb
inc
pop
test
not
add
inc
(bad)
jno
(bad)
div
jnp
mov
add
call
xor
outs
movs
or
test
pusha
xchg
sbb
imul
and
mov
push
inc
js
aam
fimul
loope
sbb
or
jo
dec
and
test
pop
mov
mov
ss
cdq
jp
neg
dec
pop
inc
jmp
and
jp
adc
push
(bad)
xchg
pop
ds
and
or
arpl
xor
mov
mov
mov
adc
fwait
ret
stos
mov
mov
popa
dec
sub
push
mov
jae
sub
(bad)
cmp
aad
in
into
lods
or
sbb
pusha
scas
sahf
and
and
outs
and
(bad)
mov
int
cld
rol
fisttp
scas
mov
inc
jbe
bound
scas
cmp
xlat
shl
jp
cmp
sar
mov
stos
xchg
pop
fidiv
xor
lods
outs
inc
mov
imul
sub
rcr
adc
in
in
rcr
int3
push
xchg
daa
enter
stc
outs
rcl
mov
jae
pop
nop
mov
cmp
xchg
mov
cmp
daa
adc
mov
ss
sub
jmp
mov
fwait
mov
ins
or
pop
das
xchg
daa
dec
pop
pop
jl
popf
inc
or
ds
add
dec
pushf
dec
in
lods
jge
enter
int3
cli
pop
dec
in
xor
jmp
add
fistp
dec
push
leave
cmp
sbb
xor
add
lahf
clc
ffree
pop
int3
add
test
jg
inc
mov
ret
lock
mov
adc
or
cdq
mov
fdivr
mov
daa
stos
ficomp
cld
into
add
in
js
stos
arpl
push
movnti
cmp
cs
push
(bad)
mov
cmp
mov
sbb
aas
mov
mov
mov
aam
pop
movs
test
int3
outs
push
add
mov
cli
shl
sub
ins
out
jno
cmp
push
rcl
jecxz
outs
pop
and
add
mov
outs
(bad)
out
cmp
fcmovbe
movs
sub
scas
ror
cwde
cmp
adc
cmp
inc
mov
xor
add
jg
mov
imul
jl
aaa
sub
clc
rol
hlt
sbb
sar
xor
scas
iret
inc
std
pop
sub
retf
add
adc
lods
mov
pop
push
(bad)
js
lods
adc
add
test
retf
popa
xchg
mov
dec
jo
loope
xor
pop
popa
dec
sub
sbb
adc
in
aas
adc
mov
dec
out
mov
cmp
fsub
pop
lea
fsubr
mov
mov
stos
pop
rcl
cld
sbb
(bad)
push
das
cmp
es
sbb
in
aam
scas
jbe
adc
js
scas
dec
sbb
repnz
dec
jl
push
mov
rcl
ret
hlt
iret
ja
jecxz
ins
and
scas
in
mov
sbb
in
clc
movs
mov
fisttp
or
or
dec
or
mov
jb
retf
ds
fwait
dec
jl
loope
push
mov
mov
in
mov
stos
out
in
rcr
(bad)
loope
in
push
jns
out
push
lock
or
jge
jae
cmovnp
cld
jbe
pop
sub
mov
call
xchg
sbb
push
mov
adc
or
aad
es
xchg
push
push
push
jecxz
inc
out
mov
xor
ja
dec
xchg
pop
pop
jnp
sbb
enter
inc
adc
sbb
popf
test
and
in
aas
mov
jle
mov
in
jmp
rcr
adc
jl
jb
cmp
dec
cdq
jb
cs
loopne
lea
int
adc
pop
out
sbb
adc
pop
push
mov
or
push
jbe
and
jmp
xor
nop
and
mov
jo
(bad)
push
push
jmp
and
mov
lock
mov
dec
or
push
ss
jo
push
cmp
(bad)
cmp
xor
cmc
xchg
mov
nop
test
sub
sar
pop
fidivr
push
cmp
sbb
push
sbb
inc
xchg
(bad)
je
fld
inc
inc
loopne
xor
inc
aam
mov
jno
inc
xor
xchg
out
xchg
adc
or
js
push
cli
inc
aam
rol
or
xchg
in
push
xchg
stc
cmps
outs
icebp
fmul
mov
sbb
mov
scas
xchg
retf
imul
div
and
les
call
push
cs
dec
mov
pop
dec
pop
and
inc
xchg
add
dec
mov
push
std
cmp
jmp
jl
inc
push
xor
outs
pop
stos
adc
fisub
cmp
push
or
into
inc
dec
xchg
add
mov
mov
adc
jecxz
jne
jmp
or
in
not
mov
add
push
scas
push
jmp
lea
add
pop
icebp
add
push
adc
xor
scas
sub
in
jb
enter
inc
dec
retf
sbb
dec
scas
es
cli
js
or
mov
call
jmp
cli
fist
les
or
pop
rcl
pusha
test
mov
fmul
icebp
cmp
jmp
or
std
mov
add
cmp
inc
out
fsub
das
pop
push
xchg
loope
inc
mov
arpl
(bad)
push
aam
jmp
das
je
mov
iret
pop
pop
daa
xchg
and
out
iret
dec
push
and
call
cmp
lock
stos
icebp
mov
(bad)
lock
pop
dec
rol
jmp
xor
fwait
push
lahf
jp
stos
mov
inc
push
inc
(bad)
ins
call
mov
inc
push
dec
loop
ss
scas
mov
xchg
(bad)
pop
push
jg
push
cmp
punpckhwd
inc
pop
les
jo
sar
mov
test
stos
and
mov
cmp
cmp
or
dec
mov
push
cmovns
jns
sbb
and
dec
or
push
sti
add
mov
arpl
mov
jno
(bad)
stc
cmp
repz
jle
or
sbb
lods
aad
sub
push
rcl
outs
jno
dec
xchg
fs
dec
lds
popf
ins
hlt
es
nop
movs
jns
adc
es
loop
cmp
cmp
inc
jmp
xchg
dec
cmp
lods
jne
push
hlt
or
pop
adc
cmp
and
mov
test
test
or
or
inc
(bad)
lods
xchg
cmp
ret
inc
dec
inc
pop
test
into
dec
scas
mov
ss
arpl
out
mov
pop
push
rcl
inc
inc
pop
xchg
popa
(bad)
xchg
fs
cli
test
ficomp
jns
pop
hlt
mov
imul
push
ret
daa
push
in
push
scas
mov
adc
mov
cmp
cmps
pop
ret
aam
adc
xor
or
arpl
sbb
mov
js
sahf
push
xchg
mov
int
rep
lds
jne
add
adc
dec
dec
inc
mov
ds
sbb
sbb
push
imul
mov
je
pusha
not
mov
add
es
aad
scas
(bad)
out
xchg
push
ins
pop
and
mov
int3
jnp
mov
ror
pop
daa
fisub
test
(bad)
enter
test
mov
mov
inc
(bad)
rcr
pop
sbb
jg
jae
mov
dec
arpl
test
and
adc
fld
add
sub
cmps
lods
sahf
lods
jne
mov
aaa
jbe
popa
je
jno
or
xchg
inc
or
mov
ss
and
adc
std
jg
fimul
lods
and
and
lods
xchg
push
loope
mov
xchg
(bad)
mov
pusha
das
pop
out
mov
sub
aad
sar
in
cli
cmc
inc
mov
fs
mov
mov
dec
xchg
jne
leave
arpl
in
add
mov
ror
or
clc
fsubr
int
jle
dec
(bad)
dec
out
inc
adc
(bad)
addr16
and
adc
and
and
es
loop
sub
ss
pop
outs
test
outs
adc
or
sub
inc
pusha
shl
mov
mov
sbb
lds
mov
call
fld
sub
movs
jp
lods
pop
xchg
inc
mov
inc
test
fnstsw
stc
xor
xchg
xchg
mov
ret
fwait
or
cwde
pushf
mov
and
dec
dec
rcr
xchg
jb
pop
out
mov
fs
inc
popf
xor
mov
inc
and
mov
loop
and
mov
dec
(bad)
cmp
pop
xor
mov
aam
xchg
std
xchg
scas
dec
stos
cmp
pop
imul
xor
(bad)
fidiv
sub
cdq
sti
es
fsubr
sahf
test
add
pop
(bad)
stos
mov
iret
ins
into
outs
mov
mov
pop
movs
outs
(bad)
xor
sbb
add
in
mov
dec
jns
ss
retf
cmp
jecxz
pop
scas
jl
lahf
add
jne
mov
push
call
pop
xchg
dec
dec
pop
xchg
out
mov
mov
leave
pop
fs
mov
mov
jge
pop
inc
sub
arpl
jle
cmp
pop
cli
add
scas
in
xor
sti
pop
dec
sub
adc
push
sub
dec
ror
xchg
(bad)
mov
test
pop
in
(bad)
aad
(bad)
jp
mov
push
push
call
(bad)
mov
sbb
loopne
mov
stc
sahf
out
out
(bad)
sub
enter
mov
jp
lods
adc
pop
push
les
aas
in
imul
inc
out
mov
pop
pop
lds
add
jmp
ror
sub
test
lea
mov
les
fcmove
and
mov
mov
sbb
cmp
cs
sbb
call
cmps
arpl
jns
pusha
xchg
rcl
scas
sbb
xchg
je
inc
shl
sub
and
ss
mov
mov
and
xchg
scas
push
test
mov
adc
xor
mov
pop
pop
push
aaa
adc
inc
sbb
fld
sub
lds
add
nop
push
scas
push
sbb
arpl
dec
sub
adc
(bad)
ds
sub
jbe
and
and
stos
mov
jbe
sbb
cmp
mov
mov
push
sub
je
dec
fldpi
out
add
test
cmp
div
xchg
(bad)
repz
repz
lods
loope
adc
mov
aam
call
mov
cmp
add
ins
mov
ins
inc
push
call
daa
xchg
and
das
loopne
es
ret
inc
sub
xchg
ss
fwait
lea
jmp
arpl
nop
sbb
adc
and
(bad)
and
stc
retf
out
mov
enter
sub
push
dec
daa
mov
inc
cmp
cwde
aas
xchg
or
or
mov
sbb
out
xchg
shr
mov
cmp
inc
sbb
or
ins
lods
xchg
cmp
xor
mov
adc
cmps
sub
data16
xlat
icebp
cmp
ficomp
pop
ret
ins
push
add
mov
daa
push
sub
sbb
rcl
cld
xor
pusha
stos
or
mov
inc
pop
pop
sub
push
push
xchg
imul
std
adc
sahf
mov
nop
daa
rcr
sub
std
add
hlt
pop
cmp
enter
fcmovnb
fcmovnbe
ins
aam
jae
mov
mov
pinsrw
pop
cmps
sbb
and
jb
pop
lods
enterw
loop
dec
add
imul
adc
sub
ror
pushf
cmp
ret
inc
std
mov
push
xchg
sahf
out
outs
fistp
dec
dec
cli
or
and
pop
jg
leave
ins
xchg
cmp
adc
iret
(bad)
into
dec
shl
out
mov
inc
jge
cmps
stc
jae
aam
sub
xchg
pop
call
ficom
mov
in
sub
mov
jge
xchg
jge
ja
rcl
add
pop
xor
mov
jne
mov
or
cli
xor
scas
fxtract
pop
mov
push
aaa
and
sar
adc
(bad)
(bad)
or
jge
popf
sbb
int3
cmp
fwait
or
and
sub
cmp
push
add
mov
push
mov
xlat
(bad)
stc
cmc
das
cwde
test
jmp
push
cmp
mov
lds
call
add
sbb
push
fadd
fwait
ror
inc
fst
cwde
mov
add
(bad)
mov
das
cmc
jne
push
cmps
jecxz
jb
inc
scas
scas
fadd
mov
repz
sbb
(bad)
cli
push
xchg
mov
int3
imul
fbld
cmps
aas
jge
and
out
push
push
xchg
xchg
dec
neg
lea
push
mov
inc
xchg
add
adc
pop
add
xlat
cli
cmp
mov
dec
gs
mov
into
push
div
shl
jne
push
push
xor
jmp
sahf
jecxz
jbe
inc
cmp
sub
enter
adc
je
xchg
dec
arpl
shl
jg
cmp
call
lea
sub
jge
pusha
jle
lea
push
lahf
dec
pop
jo
retf
call
ins
dec
adc
scas
loopne
adc
adc
cmp
movs
les
xlat
or
fidivr
stc
lock
int
pushf
cmp
adc
push
out
rcl
fcomi
mov
dec
sub
(bad)
dec
into
pop
xchg
dec
xor
dec
scas
(bad)
xor
into
xor
imul
adc
enter
or
das
in
sbb
inc
mov
xchg
ds
dec
push
push
inc
repnz
push
inc
aam
data16
out
jmp
sub
into
push
mov
or
pusha
adc
inc
push
mov
inc
pop
inc
cmps
lds
jne
pop
mov
(bad)
clc
sahf
dec
xchg
sahf
retf
sbb
or
and
in
xchg
je
call
sub
ja
ins
ret
sub
adc
or
sbb
or
mov
jo
rol
cdq
mov
pushf
inc
(bad)
fst
ficomp
ins
lea
sbb
popf
es
sub
cmp
ror
mov
add
retf
add
mov
icebp
int
outs
pop
(bad)
imul
adc
jp
movs
jb
(bad)
cwde
repz
fcomp
push
jle
lds
out
call
loopne
push
pcmpgtb
xchg
imul
or
sbb
imul
ins
push
outs
(bad)
mov
inc
xor
ss
pop
add
cwde
mov
dec
repz
imul
mov
sub
popa
jb
mov
xor
jae
mov
mov
push
pushf
or
adc
pop
aad
in
ss
cmp
sbb
xchg
sbb
inc
lahf
mov
(bad)
pop
mov
aad
loop
mov
iret
and
xchg
mov
in
jmp
cmp
jge
jae
fdivr
or
mov
cmp
mov
add
aaa
push
pop
mov
cmp
aam
test
push
pop
sbb
lods
popf
sahf
lea
imul
jno
or
or
inc
mov
jle
add
or
pop
inc
ins
add
push
mov
dec
movs
xchg
xor
cmps
jo
(bad)
mov
mov
das
fisttp
mov
(bad)
mov
pop
in
xchg
fild
test
sbb
jg
ret
dec
jae
repz
test
hlt
dec
pop
rcr
lods
pop
shr
push
in
movs
hlt
dec
scas
push
xor
(bad)
pop
out
bnd
xor
sub
call
xor
pop
imul
mov
pop
adc
adc
cmp
les
pop
stos
imul
fdivr
push
test
jnp
dec
adc
aas
mov
mov
sub
mov
or
aaa
cld
push
sub
in
xor
xchg
xchg
xchg
sub
in
add
push
shl
jns
stc
and
mov
xor
scas
pop
sar
sbb
jle
adc
xchg
add
dec
xchg
pop
daa
xor
clc
xchg
inc
xor
iret
repnz
call
je
fidiv
push
pop
inc
hlt
adc
push
fcmovbe
aaa
fadd
mov
rcr
dec
into
int3
inc
push
cmps
mov
sbb
test
call
sar
loope
jns
test
fbstp
xor
inc
xchg
idiv
jmp
outs
fmulp
push
repnz
jb
icebp
and
or
and
lods
mov
add
scas
sti
push
js
mov
fwait
clc
or
(bad)
jbe
mov
push
loopne
cdq
push
div
iret
adc
pop
repz
adc
mov
and
sub
out
sbb
inc
mov
sub
mov
sub
mov
aaa
jns
lods
jae
in
jmp
(bad)
cwde
xchg
xchg
shr
dec
dec
mov
int
cdq
std
add
pop
jb
mov
test
mov
lods
fwait
sub
pop
(bad)
mov
push
cmp
in
mov
pushf
aam
jp
dec
imul
int3
add
cld
xchg
pop
or
xchg
mov
sub
cld
mov
pop
add
nop
mov
movhlps
gs
fcmovb
(bad)
pop
cwde
sti
and
rcr
xchg
pushf
mov
jno
jge
inc
(bad)
mov
or
fld
or
mov
and
inc
dec
dec
in
lods
out
pop
cmps
or
cmp
sub
mov
pop
and
push
pop
xchg
icebp
or
dec
and
pop
sub
jle
cmp
jo
mov
and
pusha
scas
call
shl
mov
pop
push
lods
ja
cdq
int
cmp
and
aas
or
adc
aaa
pop
xor
les
xchg
adc
icebp
lea
xchg
popf
dec
fbstp
sub
mov
xchg
xchg
xchg
push
(bad)
adc
mov
jp
pop
mov
ins
mov
mov
mov
es
bound
cmp
jle
and
cmp
sti
scas
pusha
mov
test
dec
shr
push
cmc
mov
cs
dec
sbb
leave
push
jbe
cld
mov
cmps
loope
es
cmp
popa
sub
icebp
sbb
xor
pop
sub
adc
pop
pop
or
push
adc
push
scas
mov
push
inc
jmp
cld
(bad)
adc
sub
pop
cmp
movs
jmp
or
int
xor
lea
xor
cmp
mov
sbb
and
xor
jg
pshufw
bound
(bad)
xor
cld
inc
adc
jns
jl
mov
jl
pop
call
rcr
jno
loop
dec
loop
adc
dec
cwde
xor
adc
adc
mov
inc
out
sbb
adc
das
push
jg
adc
dec
outs
cli
push
adc
push
dec
adc
into
pop
xchg
jns
shr
lock
push
inc
xor
repz
fwait
scas
lea
out
je
and
dec
jge
cli
push
in
stc
push
es
pop
in
inc
movs
pop
push
sub
pushf
pop
test
mov
pop
retf
pop
inc
retf
jbe
lods
jecxz
or
scas
lods
(bad)
movs
dec
fdivr
cmp
mov
push
mov
cli
sub
repz
pop
out
loope
pusha
cmps
add
xchg
cmp
stc
loop
test
cmps
in
inc
call
adc
mov
mov
js
adc
xlat
push
pop
jae
rcr
or
xor
sbb
test
js
(bad)
lods
inc
sbb
xchg
inc
pop
aad
les
sub
pop
xchg
jbe
adc
xor
addr16
les
out
ret
loope
pop
and
inc
pusha
in
sub
xchg
ds
mov
std
and
cmovo
mov
mov
mov
cmp
mov
retf
fsubrp
inc
xor
push
je
popa
jno
lea
idiv
jb
jl
adc
ss
retf
mov
sahf
cld
inc
xchg
aaa
and
in
cmp
mov
ja
adc
pop
jge
xchg
pop
repz
adc
in
xlat
pop
mov
mov
jbe
(bad)
xchg
cmps
dec
cmp
or
ror
mov
xchg
add
mov
jp
mov
loop
inc
push
hlt
jnp
call
pop
add
cmc
imul
fsubrp
push
sub
sbb
mov
cli
mov
dec
and
jecxz
mov
mov
push
arpl
enter
cli
mov
call
es
test
sar
scas
push
loop
call
test
sub
ins
je
aaa
arpl
and
ret
cs
les
lock
ror
fs
xor
add
add
jmp
imul
or
das
outs
push
mov
sbb
pop
lahf
cwde
sub
cmp
nop
jp
jecxz
xchg
stos
cmps
dec
movs
addr16
and
inc
xor
dec
data16
inc
out
es
pop
shl
aas
mov
(bad)
and
mov
dec
loope
fistp
ss
fld
or
enter
enter
or
test
bound
add
pushf
push
shr
aas
xchg
xchg
inc
shl
ror
pop
iret
jbe
test
mov
sbb
lock
ss
aas
es
call
out
sbb
inc
pop
jbe
pop
lods
inc
mov
(bad)
inc
xlat
cmp
retf
data16
rol
test
xchg
sub
outs
fldenv
sbb
push
dec
bound
push
fwait
jbe
xchg
lods
cmp
dec
loope
mov
add
pushf
inc
in
in
dec
fs
add
push
push
nop
aas
or
mul
xchg
scas
inc
out
in
je
lds
nop
sbb
imul
adc
jo
lods
cmps
jnp
xor
xchg
and
mov
ffree
sti
sub
cmp
xor
push
daa
(bad)
sbb
pop
lahf
mov
pop
xchg
cli
add
sub
xchg
jp
(bad)
sahf
leave
jp
push
jecxz
retf
adc
movs
dec
jecxz
jns
add
or
mov
mov
(bad)
popa
shr
push
ror
popf
lahf
jno
shl
adc
mov
push
dec
jne
cdq
mov
fwait
mov
pop
pop
push
test
stos
mov
test
jmp
cmps
sar
call
aam
jge
mov
adc
jg
imul
div
jns
inc
cmp
push
sub
dec
sub
adc
mov
jmp
pop
lods
lahf
cmps
pop
jmp
int
bound
cli
mov
(bad)
jns
fidivr
inc
mov
call
mov
jge
mov
dec
add
xor
outs
cmps
mov
cmps
sahf
popf
or
stos
lea
bsf
sbb
loopne
imul
sbb
or
jmp
mov
into
dec
and
push
(bad)
pop
mov
cmp
dec
out
test
jmp
mov
aaa
popf
jp
push
mov
add
iret
repz
xor
jno
and
jne
add
pop
or
push
(bad)
aad
mov
out
or
mov
test
in
and
repnz
cs
and
mov
sbb
rcr
pop
dec
movs
aas
lods
xchg
loop
dec
into
mov
test
sbb
dec
and
daa
iret
aam
push
std
call
in
sub
out
and
ds
movs
leave
(bad)
shl
frstor
icebp
int3
sbb
sbb
sub
imul
push
xchg
add
xchg
pop
pop
lods
icebp
dec
xchg
in
mov
xchg
movs
ja
push
stos
xor
in
ins
push
jmp
fisub
(bad)
out
cmp
jbe
pop
pop
jno
ror
adc
bound
jb
and
int3
or
pusha
repnz
(bad)
jae
xor
outs
js
in
mov
xchg
cmps
inc
cwde
inc
sbb
mov
adc
sub
pop
jo
mov
mov
ffree
repz
test
and
inc
into
inc
mov
mov
or
cmp
push
xor
out
sbb
stc
dec
mov
cmp
or
outs
sub
add
jge
(bad)
pop
mov
jmp
mov
shr
(bad)
jae
pop
sbb
fisubr
xchg
out
xchg
xor
in
inc
ss
fnsave
push
arpl
outs
sti
out
add
cmp
jmp
push
jl
fstp
push
cmp
cmp
shl
mov
xchg
xchg
aad
mov
lods
dec
jo
out
or
iret
dec
mov
mov
movs
popa
rcr
inc
pop
xchg
mov
pusha
mov
sbb
out
test
repnz
(bad)
rol
mov
fld
mul
dec
adc
je
std
inc
pop
lods
in
neg
stos
dec
cmp
push
mov
mov
xor
iret
ins
xchg
xor
cmc
pop
inc
cmp
movs
jne
cmp
int3
ds
jne
sbb
je
jbe
cmp
add
loopne
sbb
addr16
and
inc
cmps
add
loope
add
push
add
into
inc
repnz
pushf
mov
mov
les
and
hlt
xchg
xlat
jmp
stos
add
cmc
pop
mov
movs
pop
cs
fisttp
cli
pop
push
vucomiss
pushf
pop
xchg
inc
cdq
sub
out
xchg
ja
pop
je
sub
sub
in
lea
push
pop
repnz
je
mov
hlt
sub
(bad)
fild
out
xchg
dec
mov
out
aas
push
mov
mov
ja
dec
lods
lods
mov
aaa
mov
int
cmc
sub
vpmacsdql
or
lods
add
clc
sbb
sbb
sbb
call
jmp
popa
nop
fcomp
dec
xchg
lahf
data16
mov
and
mov
std
xchg
xchg
inc
ret
lods
data16
popf
cmp
(bad)
nop
inc
add
repnz
xchg
(bad)
imul
mov
push
repz
dec
jbe
or
dec
mov
mov
xchg
jnp
mov
sub
xchg
lds
movs
mov
(bad)
mov
ret
push
mov
add
mov
adc
out
sbb
pop
mov
inc
out
ins
fs
jbe
xor
add
(bad)
jle
retf
mov
xor
div
jno
xchg
pop
sahf
fild
ss
das
div
jg
(bad)
test
cmp
sub
push
cmp
ins
jmp
push
sahf
faddp
and
cwde
rol
mov
sub
daa
and
add
fisub
jb
jmp
mov
in
and
(bad)
mov
mov
pop
push
push
mov
and
cld
add
out
ins
inc
imul
(bad)
popf
fdiv
push
pushf
xchg
inc
fimul
mov
jecxz
mov
inc
arpl
adc
mul
pop
jno
and
pop
pop
fstp
inc
mov
or
pop
adc
sbb
add
clc
inc
push
pop
add
(bad)
aas
jmp
in
pop
push
and
jecxz
cld
les
dec
cmps
adc
pusha
jge
mov
ficomp
ret
jp
sbb
jge
sub
mov
mov
cmp
dec
lods
jg
nop
mov
out
cli
push
sub
jns
adc
sbb
push
mul
adc
push
push
bound
imul
inc
pop
push
mov
pop
jp
add
xchg
clc
cmp
xchg
ss
aam
loopne
out
scas
cmp
test
(bad)
pop
fst
(bad)
pusha
or
fldcw
dec
pop
xchg
sbb
jb
rol
jae
inc
fnstcw
in
js
sahf
jno
or
bound
lahf
xchg
mov
dec
or
inc
mov
and
push
leave
mov
call
mov
jg
(bad)
or
in
sub
adc
jmp
add
pop
scas
or
or
(bad)
bound
push
sub
pop
cmp
xchg
jl
sub
shr
loop
es
sbb
(bad)
mov
icebp
or
or
xchg
outs
clc
push
and
outs
fmul
sub
xor
adc
sahf
fdivr
les
retf
and
inc
sti
pusha
pusha
sahf
jmp
repnz
jo
jne
and
fild
push
(bad)
sbb
and
pop
push
rep
das
scas
push
jmp
mov
and
mov
stos
sahf
adc
ret
ja
push
jle
xchg
jecxz
std
inc
test
cmp
inc
dec
(bad)
dec
pop
inc
add
hlt
imul
shr
shl
dec
dec
xlat
pop
popa
out
jp
scas
or
jbe
cs
rol
or
mov
les
sub
inc
in
call
inc
dec
stos
push
dec
jg
mov
and
hlt
push
push
loope
dec
call
cmps
push
outs
jbe
pop
jae
test
inc
movs
shr
call
xor
fsubr
or
mov
sbb
jae
sahf
dec
sbb
mov
scas
push
mov
loopne
icebp
pop
loope
and
pop
push
aas
(bad)
es
push
lahf
or
call
cwde
test
or
outs
(bad)
jmp
lahf
cmp
cmp
jo
lds
cli
jle
xor
cmp
fnstenv
or
jo
in
rcr
icebp
jge
rol
mov
mov
xchg
jl
sbb
mov
xchg
push
mov
push
in
test
or
sub
pop
jno
loope
das
cmp
in
sbb
mov
enter
jnp
fcom
pop
xor
or
ret
js
jo
test
cmps
pop
cmps
mov
js
pop
icebp
mov
movs
push
loopne
test
xchg
sub
mov
or
pop
jecxz
add
adc
loopne
xor
outs
daa
push
jbe
gs
(bad)
inc
push
pop
push
ins
retf
cdq
sbb
mov
or
and
adc
xchg
in
mov
pop
jno
mov
inc
add
push
movs
cmp
out
mov
lahf
in
leave
(bad)
mov
xor
mov
lods
cmp
jnp
and
jae
jne
iret
inc
mov
(bad)
cmps
shl
and
lea
pusha
popa
push
shl
movs
adc
fwait
mov
in
pop
outs
(bad)
dec
add
sub
mov
cld
stc
push
ret
add
jmp
mov
imul
fwait
leave
xor
xor
outs
(bad)
jno
cmp
imul
mov
div
inc
adc
icebp
sbb
push
std
xchg
iret
pusha
ss
icebp
xor
mov
sub
xchg
sub
jbe
and
dec
inc
push
neg
pop
jbe
inc
xor
in
or
int3
push
fcomp
ret
stc
pop
jbe
movs
aas
jecxz
xchg
repnz
pop
cli
pop
pop
ret
pop
add
outs
(bad)
mov
xor
and
sti
fwait
idiv
mov
push
fwait
dec
mov
inc
out
scas
xchg
dec
popa
pop
pop
out
mov
js
jnp
repnz
je
sbb
cmps
call
retf
repz
push
jge
jo
in
sub
push
fstp
loopne
lds
fidiv
xor
imul
xchg
ffreep
mov
jno
jne
push
rol
arpl
push
xchg
cmp
dec
xlat
pop
sub
bound
xchg
movs
pop
shl
xor
jecxz
aad
ror
repnz
nop
test
pop
ror
aad
repz
sbb
das
mov
jmp
cmp
dec
sub
and
clc
(bad)
stc
aam
inc
shl
and
mov
dec
dec
in
stos
jno
sub
retf
xchg
inc
lds
ins
mov
test
push
ja
out
mov
(bad)
not
mov
inc
xor
push
inc
(bad)
imul
(bad)
and
fild
mov
data16
movs
ret
xchg
and
add
mov
nop
clc
jle
frstor
outs
(bad)
jmp
xor
enter
cmps
popf
test
push
addr16
(bad)
mov
push
sbb
int
push
push
mov
jge
or
push
or
ds
inc
mov
mov
cmps
(bad)
push
call
les
cmp
xchg
arpl
or
xchg
test
addr16
or
sub
adc
in
loope
xchg
outs
sbb
aam
into
lds
cmps
push
push
cmp
inc
adc
jne
test
dec
jo
ficomp
stos
add
jge
push
adc
xchg
icebp
cmp
mov
cmp
pop
sahf
jle
cmps
pusha
popa
jb
bound
or
loope
and
mov
jb
inc
into
sub
ss
lock
movs
or
pop
aam
inc
(bad)
mov
cdq
adc
lods
std
les
shl
sbb
push
mov
imul
cmp
and
sbb
mov
je
into
mov
shl
outs
mov
shr
dec
ss
(bad)
lock
pop
aas
out
mov
sub
outs
dec
and
ins
movs
mov
dec
pusha
test
aad
test
adc
test
adc
cwde
fst
int3
imul
jbe
call
cmp
xor
rcr
mov
mov
adc
and
rol
mov
les
pop
push
iret
dec
jl
xor
push
cs
mov
xchg
addr16
(bad)
rol
aas
(bad)
mov
mov
and
mov
and
xor
mov
sub
aad
outs
rcr
inc
sbb
out
sar
std
pop
mov
mov
dec
test
inc
stos
inc
out
add
dec
sbb
cmp
call
push
adc
mov
dec
js
inc
loope
dec
pop
fcom
mov
push
sub
push
stc
das
movs
sti
jecxz
xchg
arpl
or
scas
pop
add
aad
retw
cmc
cdq
or
mov
arpl
sub
test
xchg
sbb
outs
cmps
or
push
add
call
jle
lock
popf
jbe
scas
push
mov
scas
push
in
jno
(bad)
dec
mov
fsubr
cs
cmp
call
int3
std
je
les
inc
and
rol
hlt
jle
sub
xor
mov
inc
sub
mov
fwait
in
sbb
fild
sub
mov
call
jg
gs
dec
cmp
aam
pusha
sub
dec
inc
in
lds
scas
es
pop
xor
jbe
leave
push
mov
xlat
retf
popf
stos
xchg
inc
push
pop
stos
test
cmp
jns
mov
inc
or
push
add
adc
call
mov
or
push
in
es
or
in
pop
call
push
cmp
out
rol
leave
xchg
adc
dec
test
mov
cmp
scas
and
inc
adc
(bad)
js
outs
clc
loope
test
or
pop
lahf
pop
mov
cmp
jle
push
popa
out
add
in
lods
xor
and
mov
adc
pop
lahf
add
and
inc
nop
xchg
xchg
das
scas
imul
pop
out
mov
cld
leave
sub
cmp
aad
jnp
add
adc
shl
inc
or
inc
sbb
jge
sbb
or
xlat
test
mov
jne
addr16
bound
addr16
repz
outs
mov
lahf
rol
xor
retf
outs
sub
fwait
lods
(bad)
js
sbb
shl
sub
and
cmp
inc
pushf
sub
sub
ret
xchg
shl
movs
jne
add
sub
pop
jo
jo
push
inc
iret
into
jge
btr
mov
xlat
rcr
add
aaa
sub
out
jmp
outs
loope
pushf
cs
sbb
dec
out
movs
pop
push
jbe
or
mov
adc
inc
lahf
mov
sbb
adc
(bad)
(bad)
mov
and
movs
jg
and
loop
xchg
dec
shl
mov
xor
push
pushf
sar
and
add
adc
iret
xchg
jb
sub
sub
(bad)
pop
fs
and
dec
cdq
push
adc
jp
pushf
xchg
icebp
push
xor
fisub
popf
add
loope
cmp
cmp
in
inc
fstp
mov
stos
xchg
scas
mov
(bad)
mov
dec
add
loopne
loopne
pop
retf
ficom
mov
daa
sbb
in
add
fwait
out
inc
xchg
test
stc
aaa
dec
ret
or
dec
in
push
rcr
aas
loop
fsubr
xor
pop
xor
xchg
(bad)
jge
cld
cmp
jne
and
push
inc
xor
adc
sbb
enter
ret
pop
sbb
outs
mov
ja
pop
repz
mov
bound
mov
(bad)
mov
and
out
int3
jne
cmps
jge
lds
push
(bad)
mov
call
lods
dec
imul
movs
inc
movs
add
pop
cs
dec
mov
(bad)
mov
outs
lds
pop
ror
ret
aas
mov
and
mov
daa
push
pop
pop
push
enter
xchg
cmps
clc
das
xor
call
xlat
jb
call
arpl
lea
or
dec
pop
cli
fld
fstp
and
iret
ds
data16
sub
imul
(bad)
pop
aaa
stos
pop
clc
mov
hlt
cmc
les
dec
mov
cmp
lahf
xor
add
mov
mov
and
dec
dec
xchg
mov
xchg
popa
iret
fimul
ja
in
ja
es
into
int
inc
enter
pop
and
xchg
call
dec
imul
int
imul
adc
dec
jno
pop
fstp
fisub
jb
mov
cmps
pop
sbb
lods
sbb
dec
stos
(bad)
ja
bound
cmps
inc
call
pop
pop
int3
xor
nop
mov
add
mov
std
pop
and
pop
pop
repz
or
xchg
add
push
mov
dec
enter
movs
popa
mov
mov
or
inc
mov
in
pop
mov
mov
dec
cmc
push
imul
out
xchg
shl
mov
jnp
(bad)
pop
das
add
mov
sub
mov
jecxz
test
int
or
fwait
or
(bad)
mov
iret
es
int
rol
and
pop
out
(bad)
or
ret
and
dec
push
mov
ja
jbe
xor
or
repz
movs
je
push
jnp
retf
inc
pop
xchg
mov
inc
adc
in
inc
rol
mov
mov
data16
mov
rcl
xor
sbb
push
(bad)
fdiv
rol
mov
mov
inc
int
sbb
or
(bad)
ror
icebp
inc
push
pop
into
cdq
out
aaa
lods
and
or
fcomp
adc
pushf
fsub
mov
ins
cmps
add
jo
push
aas
pop
xor
div
daa
and
or
lods
loopne
xchg
repz
add
test
arpl
icebp
popf
xlat
aam
mov
jb
hlt
in
rcl
mov
and
in
movs
dec
cs
(bad)
mov
sub
add
mov
pop
sti
mov
push
mov
mov
jmp
mov
jo
pop
fdiv
fstp
mov
add
cmps
adc
mov
ss
into
sub
(bad)
cmp
pop
or
cmp
cld
push
hlt
in
imul
fadd
or
add
mov
jmp
push
push
repnz
jl
lock
mov
pop
jp
jne
push
movs
in
aaa
jo
sbb
popf
(bad)
mov
lock
aas
sbb
ror
or
push
xor
lock
inc
retf
cmp
and
lea
mov
push
xor
push
xchg
mov
movs
cdq
sub
mov
and
cdq
mov
sti
jae
ret
fidiv
int
outs
xor
sub
frstor
das
adc
mov
into
lock
aad
add
not
mov
(bad)
aam
cld
push
adc
ins
mov
mov
inc
xlat
jb
cwde
(bad)
bound
xchg
xor
inc
fnstcw
sub
xchg
and
mov
in
dec
outs
jmp
and
hlt
xchg
in
dec
push
mov
push
inc
add
jbe
pop
pop
test
pop
pusha
jnp
fnsave
mov
pop
daa
mov
in
adc
mov
mov
movs
sub
retf
pop
loopne
and
fisttp
movs
sahf
pushf
inc
inc
jne
loopne
cmp
test
or
xchg
loopne
aam
pop
out
pop
jo
jecxz
mov
adc
or
xor
dec
and
sub
inc
fidivr
out
and
test
in
fxch
adc
addr16
sbb
sar
call
(bad)
dec
(bad)
jbe
mov
add
add
push
jmp
ret
dec
xchg
out
dec
ins
loopne
sub
cwde
fwait
(bad)
into
cmp
dec
rol
mov
pop
jae
pop
retf
es
sbb
ins
out
scas
jge
push
div
push
pop
out
loope
cmps
cld
add
ret
ja
mov
mov
les
imul
mov
xchg
or
into
adc
not
pop
lods
int3
outs
dec
inc
sbb
das
rcr
and
aaa
or
fcomp
and
cmp
push
push
cmps
push
adc
gs
push
jmp
sub
mov
fs
loopne
sbb
jl
(bad)
(bad)
test
or
cmc
pop
faddp
popf
out
nop
lods
lahf
nop
imul
lock
jne
adc
hlt
mov
icebp
jns
or
and
stos
sub
push
in
fsubr
rcl
push
push
mov
push
push
shl
in
shl
push
js
xor
mov
jns
cmp
(bad)
add
aad
setp
jecxz
pop
ror
push
movs
jl
pop
add
repz
dec
sbb
xor
aam
ins
push
test
jno
push
jbe
xchg
xor
out
cmp
pop
enter
dec
jle
mov
int
pop
je
add
fmul
icebp
or
ror
xor
xchg
jo
sbb
mov
pop
call
cs
test
mov
leave
in
cdq
repnz
int
test
rcr
or
(bad)
in
sti
enter
aas
dec
mov
test
stc
push
mov
and
cmp
lods
xor
arpl
inc
jle
mul
stos
fisub
mov
fmul
xor
mov
and
mov
inc
add
xor
inc
push
inc
popa
pop
mov
data16
xchg
sbb
dec
sbb
cmp
or
shl
add
xor
push
adc
or
int3
adc
inc
movs
scas
ja
scas
jnp
or
adc
add
je
rcr
pushf
jnp
dec
out
xchg
sbb
sub
es
inc
sbb
push
jl
cld
xchg
or
lea
sbb
xchg
dec
pop
ja
cmc
xchg
mov
loopne
div
push
push
mov
aam
mov
and
mov
jp
push
cmp
gs
mov
stc
loopne
ror
test
test
pushf
imul
repz
inc
xchg
es
adc
in
mov
lods
rcr
mov
fstp
sub
out
mov
mov
inc
retf
sbb
xor
cmps
mov
fistp
dec
dec
mov
mov
cwde
dec
jle
and
cmps
jp
std
(bad)
jge
es
adc
adc
sbb
cmp
jl
sahf
cmp
cmps
sub
sbb
fwait
mov
and
pop
or
sar
dec
out
dec
pop
jecxz
imul
inc
sar
xchg
mov
outs
pop
loop
movs
lods
je
fild
out
loop
push
cld
lds
retf
mov
fist
jne
fcomp
scas
pop
xor
dec
mov
mov
mov
les
push
mov
loopne
loop
push
popf
push
and
sub
mov
fnstenv
enter
cwde
int3
push
mov
sbb
or
call
pop
iret
cdq
cmp
outs
adc
pop
js
adc
jmp
push
mov
shl
dec
or
repnz
ja
xchg
sbb
mov
pushf
addr16
aas
repnz
scas
(bad)
push
pop
dec
lods
pop
in
in
movs
pop
div
sub
gs
xchg
xor
fmul
adc
sar
add
xor
inc
push
mov
xlat
idiv
test
add
cmp
data16
push
jle
sub
call
jle
out
jnp
push
icebp
mov
test
movs
in
les
(bad)
movs
aaa
mov
cld
out
cld
xchg
mov
ins
push
cmp
out
test
adc
pop
pop
inc
inc
pop
mov
push
ds
sbb
shl
pop
dec
test
dec
(bad)
adc
add
lods
lahf
sbb
jle
and
dec
ss
inc
sub
or
xchg
dec
(bad)
aas
jg
push
cld
outs
mov
inc
out
adc
test
jo
mov
shl
test
or
xchg
movs
cld
out
std
call
push
dec
bound
jg
mov
inc
out
icebp
popa
ja
jl
int3
mov
into
cmc
xchg
dec
inc
jmp
jmp
dec
in
push
out
add
in
sbb
push
push
ficom
jecxz
push
mov
cmp
in
adc
mov
xchg
popf
inc
adc
sbb
sbb
jne
sub
ret
je
sahf
repnz
mov
iret
(bad)
cmp
imul
push
xor
mov
mov
aad
loopne
sbb
cmp
jp
dec
fwait
xchg
fadd
xchg
xor
mov
mov
retf
cli
fisttp
dec
ss
inc
mov
push
mov
test
or
mov
aaa
pop
int
shl
dec
or
(bad)
cmp
jns
mov
ds
jge
scas
cmp
inc
test
jns
cmps
pop
lahf
test
mov
dec
aad
das
enter
inc
cmp
inc
cmp
inc
adc
mov
int
push
add
add
pop
and
jg
adc
shl
out
sub
adc
cdq
hlt
push
dec
pop
xchg
add
xchg
xchg
mov
mov
leave
cmp
ret
pop
daa
pop
dec
nop
shl
fidiv
mov
push
inc
inc
jo
or
repz
in
jne
add
pop
mov
ins
mov
frstor
retf
daa
gs
inc
nop
jl
xor
add
movs
retf
ror
adc
test
inc
push
or
dec
pop
jo
retf
rol
cwde
push
push
scas
fst
sub
adc
dec
outs
push
ins
sub
sub
sub
mov
jl
test
mov
push
sbb
scas
stc
cmps
es
(bad)
push
push
inc
push
xor
out
mov
mov
imul
xchg
jp
loopne
shr
and
hlt
int3
xchg
jae
xchg
aaa
inc
mov
push
arpl
mov
outs
mov
xor
add
push
mov
rcl
int
sar
add
out
das
jmp
sub
jmp
es
sub
or
call
mov
mov
retf
dec
gs
(bad)
lds
out
call
fs
adc
lahf
ss
aam
cmps
add
xchg
(bad)
push
cmp
ins
out
add
fisub
das
jno
ret
jecxz
daa
pop
jb
xor
inc
(bad)
mov
xor
mov
mov
pop
jbe
in
mov
xchg
scas
in
mov
inc
cmp
add
js
mov
mov
clc
imul
cmps
cmps
clc
ds
pop
addr16
mov
inc
enter
dec
fisubr
mov
iret
mov
cdq
repnz
ds
and
les
and
xor
(bad)
rcr
leave
add
jle
mov
lock
inc
sahf
push
push
cmp
nop
add
mov
adc
sub
lds
jnp
in
test
lods
jg
stos
mov
scas
ret
mov
xor
into
xchg
pop
(bad)
mov
sub
stc
jns
pop
or
je
xor
leave
ret
in
dec
pusha
cmc
(bad)
push
out
sub
add
mov
sbb
add
sbb
mov
movs
mov
ret
mov
mov
sub
out
lock
and
inc
mov
arpl
pop
mov
das
jae
mov
mov
jle
jo
in
mov
ins
aas
fiadd
ds
addr16
mov
jae
ret
jmp
add
mov
add
push
ss
iret
int3
lods
(bad)
repnz
repnz
retf
xlat
xor
mov
stos
inc
fisubr
gs
or
and
cmp
ins
sti
(bad)
adc
aam
dec
rcr
mov
out
inc
stc
xchg
aaa
push
jae
leave
fild
sub
mov
push
xor
int
aas
inc
test
sti
dec
stc
and
cli
aas
ror
aas
cmp
(bad)
xchg
pop
gs
pop
ficomp
cmp
xchg
cmps
pop
dec
inc
push
into
scas
pop
xlat
mov
pusha
loop
xor
repnz
dec
and
push
jecxz
dec
mov
out
cli
mov
mov
lds
mov
push
(bad)
mov
ins
sar
aas
push
out
mov
inc
lock
in
mov
mov
sbb
iret
js
test
mov
in
pop
retf
das
adc
xchg
es
aad
in
add
sti
ds
adc
pop
and
push
mov
jne
clc
fisubr
mov
shl
jmp
cmp
mov
call
nop
clc
mov
add
bnd
and
xor
es
pop
push
es
or
or
and
inc
(bad)
xor
inc
mov
mov
(bad)
jae
mov
and
popa
mov
xor
xor
test
cmps
add
popa
mov
in
pop
fsub
sub
int3
jns
in
sub
xor
out
cmp
jl
or
sbb
and
push
jmp
sahf
push
dec
mov
cli
repz
lock
sub
test
fadd
lock
sbb
fdiv
inc
aaa
cmp
xor
ds
out
xchg
jl
imul
inc
dec
adc
mov
iret
push
push
aad
mov
xor
mov
mov
or
pop
leave
in
out
loop
pop
sub
sbb
add
xchg
jle
cmc
in
(bad)
or
aam
inc
cmp
ret
push
sar
mov
les
sbb
adc
cmps
pop
in
mov
mov
cmps
mov
adc
pop
hlt
stos
xlat
and
pop
test
or
adc
push
push
push
fistp
sub
adc
sub
mov
push
das
ins
call
mov
sbb
add
inc
adc
loopne
cmp
push
xchg
cwde
inc
jno
pushf
add
xchg
shl
xor
xor
jns
cmp
sbb
cmps
cmp
push
jo
les
cmp
es
xchg
loopne
dec
mov
xor
sbb
adc
jmp
leave
jg
mov
aas
dec
fisub
mov
sub
cmp
xchg
jbe
retf
jae
pop
or
ret
mov
mov
sbb
pop
adc
rcr
mov
lock
arpl
and
iret
jecxz
cmps
sub
shr
loop
imul
xor
push
test
xor
fld
fsub
std
out
push
pop
test
stos
cld
les
out
int3
cmps
aas
lock
movs
mov
push
add
out
ja
mov
mov
push
inc
cwde
add
mov
aaa
jmp
mov
scas
addr16
imul
mov
mov
stc
or
shl
jmp
xor
std
pop
stos
ja
mov
push
test
add
in
fsubr
ins
sar
sub
es
pop
inc
sbb
bound
rcl
pop
mov
mov
xchg
fsubr
shr
outs
jmp
push
fbstp
not
popf
scas
mov
clc
shl
dec
mov
sbb
sbb
and
push
outs
movs
sub
jne
cdq
cmc
xchg
shr
es
test
fcmove
pop
mov
fidiv
clc
gs
cld
test
pushf
rcr
fcom
fcomp
cwde
add
mov
retf
jns
mov
jg
call
lds
mov
inc
push
sub
clc
and
adc
dec
cmp
cmp
(bad)
lods
inc
les
out
outs
and
mov
mov
mov
es
or
add
leave
iret
stos
(bad)
les
(bad)
in
inc
jg
sti
into
call
test
cmps
or
xor
rcr
not
cmp
sbb
and
pop
stc
xchg
call
mov
(bad)
addr16
repnz
jns
inc
sub
mov
xchg
xchg
push
jae
mov
imul
cmp
dec
mov
xor
mov
mov
scas
test
push
pusha
or
push
pop
xor
(bad)
and
lods
mov
and
dec
xchg
sti
push
lahf
ret
gs
push
pop
addr16
mov
fidivr
ins
test
xchg
xchg
or
popa
mov
add
movs
push
jecxz
jg
cmp
or
xor
stos
div
out
lods
xor
(bad)
cmc
adc
retf
ret
adc
in
call
adc
lods
loop
test
jmp
and
pop
test
cmp
push
out
xor
push
daa
pop
add
clc
and
cmps
or
ret
xor
pop
and
sbb
les
inc
push
test
jg
cmp
cmp
ss
popa
arpl
cwde
inc
push
sub
dec
ja
dec
mov
imul
mov
addr16
mov
adc
add
(bad)
stos
pop
push
push
ror
fild
mov
pop
jmp
jns
daa
inc
retf
jns
js
outs
lock
xor
fistp
in
pop
fisub
and
cmps
sbb
xchg
scas
dec
call
add
popf
int
mov
push
cmp
retf
pusha
call
ss
aam
mov
xor
xor
and
enter
scas
leave
(bad)
adc
jbe
add
and
stos
xchg
out
or
nop
hlt
push
and
fild
or
jecxz
pop
and
xchg
loope
xor
and
call
inc
jo
outs
call
sbb
fs
out
add
sti
adc
js
mov
dec
sbb
sbb
adc
test
mov
cs
popa
sbb
jb
jae
loop
lahf
loop
(bad)
xchg
aas
jle
cmp
xchg
lock
cmps
test
test
adc
xchg
js
push
push
cli
rol
sbb
and
mov
outs
push
imul
sub
or
dec
sub
push
mov
out
loop
push
sub
jmp
xor
pop
or
sbb
xor
fnstcw
aam
popf
hlt
fdivr
cmp
sub
ret
sbb
mov
mov
jecxz
xor
loope
fnstenv
jg
test
leave
mov
xor
leave
push
test
xchg
clc
add
pop
push
inc
rcl
mov
jge
shl
mov
sar
cs
mov
ficom
add
lea
cwde
loopne
or
cmp
ror
push
fsubr
cmp
dec
jns
ja
stc
xlat
test
sbb
jle
and
sub
loop
mov
jae
sub
in
push
push
sub
adc
imul
push
and
inc
popa
ret
loope
fisub
and
cmp
mov
pop
push
dec
pop
hlt
mov
cwde
pop
repz
out
cli
scas
sub
int
loope
jno
fprem
ja
mov
mov
int3
data16
sbb
movs
jle
push
dec
enter
bound
call
and
xor
push
inc
jmp
sbb
fistp
mov
cli
gs
jmp
test
push
mov
xchg
lods
movs
jl
fsubr
jbe
shr
xor
loop
ins
out
retf
lahf
sub
neg
mov
mov
loopne
out
add
retf
xor
sti
jns
sbb
aas
leave
adc
jb
sbb
imul
jecxz
cmc
test
lods
inc
mov
(bad)
or
lods
cld
sbb
ja
mov
bts
pop
sbb
outs
or
and
jne
sub
pop
in
es
pop
stos
aas
les
ret
adc
nop
pop
test
sbb
push
imul
sahf
sti
sbb
lods
(bad)
popa
enter
sbb
fs
in
movs
(bad)
sub
mov
imul
jecxz
jne
imul
xor
add
adc
push
popf
mov
aad
sahf
arpl
mov
out
inc
rcl
dec
sbb
push
push
sub
idiv
mov
scas
lock
test
iret
jg
sub
scas
leave
mov
xor
mov
cmp
dec
mov
aaa
mov
mov
sub
popf
ja
in
call
popa
data16
aas
js
inc
mov
xor
je
mov
cmp
jno
(bad)
push
je
add
aas
fwait
pop
add
(bad)
jge
das
cmp
stos
push
jae
mov
pop
pop
mov
jecxz
and
(bad)
jo
mov
mov
int3
sub
ror
inc
in
retf
and
sbb
cmovns
ss
cmp
adc
dec
packsswb
dec
and
je
jecxz
call
push
ins
mov
ss
je
and
pop
or
xchg
(bad)
jo
xor
cmp
jb
mov
imul
mul
dec
jmp
(bad)
push
stos
sub
out
inc
mov
gs
dec
movs
int3
adc
and
stc
jo
fxam
xor
push
(bad)
aas
shl
jge
mov
mov
shr
sub
mov
mov
fnstsw
sub
add
iret
xlat
or
(bad)
inc
pop
jmp
sahf
fadd
sub
sub
and
and
pop
cmps
outs
sub
xor
push
mov
dec
ds
push
jne
jno
and
out
dec
jne
sbb
mov
addr16
xchg
dec
push
jl
fisubr
mov
jecxz
or
scas
add
loopne
stc
inc
shr
cmp
pop
or
cli
dec
cmc
pusha
std
bnd
inc
jle
or
pop
pop
cld
dec
lds
lock
div
leave
push
pop
fwait
mov
cmps
in
std
jecxz
rcr
aaa
rcl
dec
cmps
mov
ror
xor
add
stos
scas
add
mov
fsubrp
repnz
xchg
int3
inc
add
movs
lock
outs
fidiv
mov
xchg
mov
push
ins
adc
test
into
mov
clc
push
inc
mov
lods
clc
sbb
mov
mov
loope
fnsave
xchg
fisubr
dec
(bad)
mov
fs
adc
mov
and
loop
sub
xor
daa
das
cmp
aaa
add
cmps
sahf
cmp
sbb
push
je
ins
sbb
pushf
test
cld
cwde
sbb
scas
sbb
jmp
mov
pop
add
inc
xchg
aaa
jns
dec
mov
lods
xchg
xchg
inc
je
inc
aam
mov
lock
int
jo
ja
jns
jbe
pop
push
xchg
iret
xchg
js
inc
repz
ret
add
jmp
mov
fcmovu
mov
or
loope
stos
sbb
mov
cli
(bad)
test
out
inc
iret
sub
pushf
das
xchg
loope
cmp
stc
lock
cld
cmp
movs
lahf
lea
stc
aaa
dec
outs
jmp
cmps
mov
shl
rol
inc
push
sub
mov
cmps
and
ja
sub
movs
outs
jo
xor
mov
jmp
add
mov
aaa
push
imul
sti
sub
pusha
jge
xor
cmp
and
(bad)
lods
ins
mov
inc
xchg
sub
push
xchg
mov
sub
sbb
int3
rol
cmp
rol
mov
iret
icebp
sbb
push
sti
cwde
loop
xchg
pop
add
pop
pop
(bad)
leave
inc
jge
(bad)
(bad)
mov
jp
cmp
out
pop
adc
mov
imul
test
dec
xor
xor
mov
xor
(bad)
dec
xchg
mov
aad
mov
icebp
push
dec
cmc
xchg
or
stc
push
stos
jg
mov
pop
call
push
xor
outs
cmp
and
cmc
sbb
icebp
or
(bad)
ss
jecxz
fidiv
mov
lock
ss
jae
bound
out
sub
mov
retf
push
jl
adc
imul
scas
ret
mov
shl
inc
and
std
arpl
mov
push
inc
lods
fcmove
cmps
repz
adc
mov
push
sub
lock
add
jae
and
pop
ja
gs
pop
fnstsw
in
out
xor
das
adc
xchg
xor
fcomp
imul
shl
inc
push
jbe
(bad)
mov
call
cmp
das
call
js
mov
je
cld
push
rol
bound
xchg
and
iret
stos
jmp
sub
dec
jl
sbb
sub
std
aas
cdq
test
jecxz
pop
adc
mov
cwde
out
js
xchg
push
fst
addr16
cmp
(bad)
into
inc
fdivr
dec
mov
fwait
cmps
je
fdivr
cmps
shr
rcl
cmp
stos
ins
mov
dec
push
js
cmp
test
das
adc
add
iret
mov
mov
mov
fs
es
jns
or
out
fsubp
inc
(bad)
xchg
mov
lahf
(bad)
sub
shl
pop
pusha
lea
push
mov
jnp
aas
pusha
xor
loope
adc
xchg
aas
mov
(bad)
ja
mov
retf
xor
iret
inc
outs
xchg
mov
push
in
dec
mov
mov
and
mov
adc
cmp
mov
push
popf
mov
or
popa
adc
xchg
rcl
rcr
aas
mov
pop
cmp
xchg
outs
ret
stos
test
ret
sub
or
sub
or
xor
ss
mov
mov
or
or
ror
inc
mov
and
or
pop
mov
sub
retf
(bad)
leave
enter
stc
std
sti
push
push
jecxz
call
mov
cmp
sbb
jno
rol
sahf
(bad)
xchg
pop
mul
sbb
push
pop
mov
(bad)
pop
or
(bad)
mov
xchg
aaa
dec
add
cmpxchg
loope
fwait
pop
dec
data16
inc
mov
pop
adc
retf
cmp
int3
or
cmp
cld
loopne
or
mul
inc
cmc
push
sahf
movs
out
mov
fs
inc
fwait
xor
call
mov
jle
hlt
xchg
loopne
adc
outs
cmp
mov
xchg
(bad)
test
xchg
adc
push
fucomip
dec
jno
inc
xchg
sbb
ret
inc
imul
shr
add
inc
ficom
push
fcomp
add
dec
pop
mov
push
mov
ds
mov
cmc
sub
imul
stos
test
jb
arpl
(bad)
dec
xor
sbb
push
or
cli
push
imul
add
lds
test
fsubrp
mov
scas
adc
scas
sub
daa
out
es
mul
dec
push
or
test
enter
or
mov
loope
dec
jno
sbb
rcr
dec
mov
mov
mov
int3
bnd
adc
imul
enter
sbb
mov
fidiv
pop
test
dec
dec
out
(bad)
sub
xchg
xor
sbb
(bad)
cmps
and
fld
mov
mov
and
jnp
and
or
pop
std
mov
outs
push
int
hlt
pop
and
lods
adc
sbb
dec
stc
aam
xor
sbb
loopne
push
push
pop
pop
add
add
xor
sbb
in
mov
and
mov
aam
call
pop
or
push
dec
mov
fucomip
cvtdq2ps
push
lea
(bad)
jecxz
cmp
xor
xor
out
fwait
push
bound
fisttp
in
mov
imul
pop
fild
jg
add
shl
inc
cmp
mov
pop
jmp
add
cmp
lahf
pop
pop
mov
dec
jge
aaa
les
ret
add
stos
cmp
fidiv
jo
jne
js
sub
cwde
sar
cmps
aas
stos
and
(bad)
mov
jmp
les
cli
or
std
mov
mov
fst
ins
mov
or
and
lods
jmp
test
or
push
test
mov
pop
push
cmp
scas
sti
data16
test
fcomip
cmp
inc
mov
jmp
ins
out
leave
into
pop
mov
std
fist
cmp
push
repz
rol
aam
pop
sbb
or
push
into
add
pop
xchg
push
xlat
addr16
in
jne
adc
gs
jmp
sbb
cmp
jbe
sbb
mov
gs
sar
outs
cmp
cmp
jnp
or
dec
fnstenv
jmp
push
mov
mov
and
cmp
les
mov
adc
push
push
mov
out
int3
mul
clc
int
dec
adc
fst
mov
add
adc
cwde
mov
cmps
or
in
stc
aad
sbb
cmc
in
scas
stos
shl
adc
fwait
mov
mov
in
aad
or
sub
sub
dec
cmps
mov
cmp
mov
inc
or
test
cmc
icebp
hlt
pop
sbb
push
cmps
jne
inc
dec
add
xor
imul
fimul
stos
sbb
bound
inc
mov
das
test
shr
test
loop
je
add
mov
xchg
js
inc
in
mov
loopne
ins
push
test
out
and
dec
cmp
xchg
inc
leave
cmp
(bad)
jae
cli
mov
jno
or
lock
mov
lock
pop
xor
xchg
in
inc
mov
adc
mov
pop
push
sub
xchg
adc
push
jle
popf
adc
mov
mov
cwde
loop
test
mov
clc
sub
sbb
lods
aad
cmp
jbe
push
sbb
cld
push
cmps
stos
jmp
dec
mov
ror
daa
ret
and
in
loopne
mov
jmp
test
in
add
cmp
into
fstp
push
enter
jge
push
and
loopne
push
push
mov
dec
stc
inc
inc
dec
sbb
sub
outs
add
fld
mov
pushf
(bad)
mov
pop
data16
dec
cmp
lods
loopne
add
pop
dec
pop
xor
or
retf
lods
mov
add
out
mov
mov
jae
mov
addr16
je
xchg
dec
adc
scas
cwde
mov
lods
outs
or
mov
jb
sub
outs
fwait
movs
dec
cmps
or
mov
shl
nop
repz
ffree
sub
xor
mov
mov
cmp
sub
xor
and
out
cmp
jns
stos
jl
loop
xchg
ins
pop
pop
pop
adc
sub
cmp
jmp
sbb
mov
xor
sub
jbe
movs
push
ins
dec
cmp
hlt
outs
ret
pop
stos
das
fwait
mov
push
ret
cmp
and
mov
add
rcl
shl
(bad)
clc
mov
rcr
mov
ja
fucom
mov
pop
xchg
pop
js
sub
dec
bound
shl
push
test
lods
push
push
nop
mov
xchg
cmp
jmp
inc
add
test
stos
cmp
mov
mov
clc
jns
adc
push
mov
xchg
add
or
lea
inc
adc
lock
sbb
push
mov
jno
pop
dec
push
cdq
scas
jmp
enter
dec
push
mov
repz
xchg
sub
push
dec
aad
icebp
mov
or
cmp
xchg
sub
sbb
mov
xchg
adc
mov
mov
dec
int
add
xchg
jle
cmps
aam
stos
(bad)
pop
(bad)
sbb
cmp
sub
mov
lods
push
movs
cmp
hlt
sbb
push
in
sti
outs
sub
enter
pop
pop
rol
pop
daa
sbb
xchg
dec
cli
cmc
dec
repz
mov
loope
lahf
lods
mov
lods
mov
inc
push
sub
xchg
xchg
fdivp
lds
mov
adc
int
ror
jns
add
fnsave
sbb
(bad)
sbb
pop
push
nop
add
fld
xchg
jns
or
cwde
aam
sbb
cmp
xor
mov
(bad)
sbb
adc
xchg
inc
pop
cmps
dec
nop
pop
cmp
cdq
fist
push
(bad)
pusha
pop
push
shl
inc
fisub
xlat
push
repnz
sub
js
retf
mov
mov
and
pop
mov
jne
fsub
out
pop
(bad)
repz
ins
push
mov
adc
in
xor
sub
rol
movs
pop
inc
xor
jne
mov
pop
mov
inc
pop
mov
jg
xchg
sub
aas
lock
je
inc
dec
nop
jne
out
or
mov
cmp
xor
ds
push
out
outs
imul
es
enter
dec
dec
scas
loopne
scas
push
dec
addr16
pop
cmp
add
cmp
icebp
mov
mov
not
out
cmps
and
and
adc
inc
and
add
sahf
jmp
sahf
xchg
fdivr
mov
aam
call
out
ror
jbe
or
scas
ds
call
sub
cmp
out
jns
mov
cmp
iret
fadd
mov
cs
std
dec
popa
call
xchg
enter
push
push
scas
jle
jmp
inc
fst
int
ret
add
ret
inc
jb
pop
xor
clc
or
fadd
ret
adc
cmp
pop
cmp
test
cmc
not
sub
sar
loop
hlt
leave
lods
mov
cld
jno
cmps
(bad)
shl
movs
ss
cmp
ja
jne
push
sub
fs
adc
jg
(bad)
shr
retf
out
add
dec
xchg
jp
lock
cmp
xor
test
fistp
bound
mov
clc
xchg
lods
jge
mov
jmp
test
retf
sbb
jne
pushf
lock
stos
ins
mov
mov
aam
jne
(bad)
jle
je
ret
cwde
jb
loope
sbb
mov
int3
jp
bound
out
lahf
clc
jne
loop
mov
adc
add
leave
inc
add
push
adc
xchg
or
(bad)
bound
dec
int3
retf
imul
(bad)
mov
(bad)
sub
jb
mov
sbb
dec
and
mov
je
or
jmp
inc
imul
(bad)
dec
repnz
pushf
inc
ret
rcl
adc
jno
pop
aam
fild
lahf
leave
cmp
jno
les
and
xchg
stc
ins
and
enter
sub
mov
mov
iret
pushf
js
push
imul
dec
fcmove
sbb
pusha
push
xlat
pop
xor
rol
adc
dec
cmc
enter
ret
int
mov
in
ds
scas
pop
xchg
mov
dec
push
clc
fiadd
jecxz
aam
mov
test
jg
fstp
fsubrp
push
mov
les
test
cmp
arpl
mov
enter
xor
ja
mov
jnp
or
xor
dec
and
outs
movs
mov
scas
sbb
add
retf
mov
mov
mov
sbb
ret
pop
popf
add
mov
adc
stos
mov
out
mov
in
pop
mov
push
in
sub
adc
push
aam
je
aaa
sahf
out
jmp
push
div
pushf
lds
mov
xchg
xchg
sbb
mov
icebp
data16
ja
add
pop
mov
xor
xor
fst
test
pusha
sub
(bad)
shl
stos
mov
or
dec
rol
ds
mov
fisub
push
stos
das
xchg
pop
ret
sbb
jno
retf
ja
push
sub
sahf
or
or
(bad)
xchg
repz
stc
mov
adc
ins
jp
loopne
cs
push
adc
inc
add
outs
in
ins
push
or
outs
xchg
push
in
fisttp
movs
outs
cmp
ror
xchg
sub
iret
icebp
fs
sub
mov
pop
push
inc
pushf
call
retf
leave
pop
and
pop
cmps
pop
hlt
hlt
sahf
sbb
jbe
jnp
sbb
aam
out
cmp
add
out
daa
cmp
or
dec
and
or
adc
xlat
scas
xor
jo
xchg
stc
add
in
sti
rol
pop
pop
pop
jne
mov
adc
jl
data16
lea
pop
stc
or
xor
rol
inc
(bad)
je
jae
iret
or
mov
imul
jnp
call
cs
leave
fnstsw
in
out
adc
cdq
mov
pop
jnp
ret
inc
dec
fwait
gs
enter
sub
cmp
ret
xor
jge
jecxz
mov
scas
ss
push
ret
cmp
mov
aaa
xchg
repnz
sub
adc
pop
push
ret
outs
ror
clc
into
test
pop
sub
mov
cmp
sub
movs
mov
xor
xchg
test
push
test
add
xor
shl
mov
mov
cli
movs
dec
dec
sar
bound
icebp
add
cmps
(bad)
nop
clc
sub
mov
sbb
pop
sti
mov
mov
mov
loope
leave
(bad)
push
jbe
jae
scas
jmp
call
pop
mov
xor
(bad)
imul
inc
xchg
shl
or
pop
mov
dec
scas
ret
in
or
shl
ins
lahf
xchg
mov
xor
ds
xchg
pop
scas
push
scas
cdq
je
jmp
sbb
xor
sbb
cmp
sbb
cmp
mov
dec
jmp
and
inc
test
add
rcr
jb
cmp
xchg
sub
push
int3
pop
fcmove
retf
retf
popf
enter
inc
or
out
push
cdq
mov
int
dec
xchg
outs
push
idiv
add
out
mov
(bad)
lods
out
push
out
sub
lahf
mov
mov
stos
sbb
pop
lock
nop
fdiv
cmp
xlat
sub
ret
aas
stc
aaa
xchg
lahf
std
shl
push
aas
mov
xchg
dec
xchg
(bad)
es
push
push
cmps
dec
ins
inc
in
push
xchg
cld
in
rol
jno
stos
div
loop
add
xor
adc
bound
loopne
cmps
or
push
pop
in
pop
int
mov
and
leave
lea
fwait
aas
push
pop
(bad)
popf
dec
xor
popa
or
dec
or
imul
cmps
jle
add
push
iret
adc
inc
mov
jae
jp
dec
dec
lods
add
cwde
or
pop
retf
mov
ja
lock
sbb
(bad)
or
push
sub
int
adc
shr
add
sub
push
fwait
ja
cdq
js
dec
mov
loope
lock
shr
daa
hlt
inc
out
inc
mov
cmp
idiv
mov
cs
ret
imul
xor
mov
push
pop
movs
jmp
fwait
xrelease
jge
mov
(bad)
pop
in
fwait
mov
cmp
cld
outs
iret
pop
adc
push
ret
aaa
popa
xor
jmp
test
loope
or
imul
jle
data16
repz
outs
inc
cmp
push
pusha
ja
loope
mov
sbb
imul
repnz
cmps
in
test
mov
test
mov
loope
inc
xor
mov
dec
inc
adc
xchg
shl
clc
out
dec
fwait
mov
xor
mov
jno
call
test
mov
pop
dec
add
mov
adc
inc
out
out
lods
jae
adc
fnsave
lock
dec
test
daa
pop
leave
mov
cmp
mov
retf
stc
push
dec
jl
rol
in
and
mov
lahf
mov
mov
stos
ror
mov
(bad)
aas
xchg
jns
mov
cmps
pushf
jecxz
sub
fs
lahf
mov
and
lea
jns
cmp
unpcklps
mov
std
loop
into
mov
jmp
cmp
cmps
shl
in
out
(bad)
out
cwde
adc
pop
pop
lods
nop
lods
gs
adc
add
mov
mov
xor
xor
or
xchg
pop
movs
cdq
nop
loop
jmp
mov
mov
loop
push
pop
mul
adc
scas
sub
inc
jae
mov
xor
outs
not
mov
mov
not
stos
fbld
imul
sub
(bad)
movs
ret
aas
sbb
fnstenv
fst
mov
in
mov
retf
xchg
sub
jmp
fs
popf
or
stc
lahf
and
push
sub
xor
daa
mov
fst
sbb
sub
out
inc
popa
mov
in
mov
ja
pop
inc
adc
mov
and
test
sbb
push
jle
adc
cmp
rol
adc
inc
sti
push
sbb
mov
add
jmp
add
cwde
mov
popa
(bad)
sbb
mov
movs
adc
clc
inc
dec
jmp
ja
or
or
xchg
mov
fwait
aad
sbb
outs
ds
mov
cmp
retf
xor
inc
fwait
mov
cmp
arpl
jle
add
jl
leave
push
std
pushf
or
jge
mov
ins
xor
sbb
mov
fidivr
fwait
in
arpl
xchg
or
pop
cmc
iret
addr16
aad
cwde
test
and
and
loope
ret
in
lea
mov
jl
(bad)
gs
mov
jmp
bound
adc
hlt
jae
out
lock
sbb
sub
add
(bad)
int
fistp
jmp
inc
daa
(bad)
fstp
repnz
inc
jg
(bad)
xor
ja
xchg
call
mov
into
mov
xor
jl
fld
mov
xchg
dec
pop
ret
into
pop
and
bnd
and
repnz
out
sti
adc
or
mov
and
ins
add
adc
cmc
(bad)
stc
xlat
ror
aaa
cmp
sbb
bound
sbb
iret
(bad)
in
stc
mov
cdq
mov
pushf
(bad)
push
in
fwait
push
xchg
adc
mov
xchg
pop
push
scas
mov
mov
sahf
mov
imul
cmc
cmp
arpl
pushf
jmp
loopne
sub
and
test
aam
call
inc
mul
mov
xchg
fnop
pusha
les
ins
aad
xchg
test
es
jmp
loope
in
dec
clc
push
cmps
inc
xchg
movs
push
in
jp
mov
lea
icebp
jecxz
ins
popa
or
jp
pushf
or
bound
mov
xchg
cmp
lahf
inc
lods
jp
and
jno
cmps
lock
inc
xchg
mov
loopne
test
jge
jge
jge
in
std
lods
sbb
inc
sub
ins
cmps
mov
pop
movs
js
and
or
xchg
shl
fs
mov
addr16
aaa
mov
loope
aad
das
mov
sbb
aam
fwait
div
into
gs
shl
dec
jecxz
jne
pop
mov
push
push
sub
push
dec
mov
or
add
lea
ss
scas
jmp
test
adc
outs
(bad)
rol
xchg
in
mov
push
inc
repnz
outs
bound
inc
and
lea
cwde
mov
add
push
cmps
add
push
cmps
fsub
mov
sub
push
shr
pop
iret
xchg
mov
pusha
mov
fs
push
mov
hlt
cmp
fs
mov
outs
dec
sub
jno
jmp
lods
or
int3
cmps
inc
cmp
push
pop
dec
aad
daa
mov
shl
push
add
xchg
lds
mov
js
mov
mov
repnz
push
leave
daa
sub
and
cmps
mov
mov
xlat
int3
add
inc
dec
stos
xor
push
or
mov
out
arpl
inc
loopne
sub
jne
cld
mov
or
and
or
mov
outs
add
and
test
mov
(bad)
cmp
idiv
pop
fwait
adc
mov
push
add
outs
push
xchg
adc
jl
aas
cmp
lds
jle
scas
or
adc
(bad)
sbb
shr
dec
mov
mov
inc
mov
jecxz
popf
test
pop
sub
pop
imul
mov
mov
sbb
fsub
addr16
adc
cmp
jecxz
mov
fisub
jns
rol
or
or
sti
out
xor
pop
lea
sub
add
and
(bad)
cmc
clc
pop
out
inc
add
pusha
(bad)
cld
xor
fwait
shl
enter
(bad)
xlat
pop
cmc
sbb
ds
mov
lds
adc
dec
sub
je
(bad)
iret
retf
dec
in
cmps
xchg
enter
ffreep
dec
adc
xor
call
and
or
movs
xchg
push
test
dec
push
xor
ret
movs
dec
jg
out
jle
cwde
ins
fstp
test
iret
add
mov
lea
or
sbb
fmul
int3
test
jmp
icebp
inc
rol
inc
outs
out
or
or
test
xlat
ja
pop
mov
mov
mov
mov
scas
pop
xor
shl
and
dec
mov
(bad)
cmp
cdq
lds
hlt
xlat
pop
mov
xor
add
sub
(bad)
rol
(bad)
and
nop
xchg
xlat
xor
(bad)
neg
icebp
sub
sub
jbe
or
out
(bad)
scas
jne
sbb
push
push
push
add
dec
push
mov
pop
mov
fsub
xor
inc
ds
and
add
popf
xor
pop
mov
xchg
jg
mov
mov
and
inc
xor
add
jmp
adc
test
mov
jl
jae
ds
shl
cmp
fwait
popa
jne
dec
ss
mov
ins
mov
mul
pop
arpl
adc
sub
out
xor
das
pop
fimul
les
ja
mov
ss
nop
mov
clc
fwait
jae
repz
int
pop
and
xchg
test
add
sbb
mov
rcr
out
xchg
jg
adc
and
test
ror
mov
sbb
pop
mov
enter
fs
movs
xor
test
repz
movs
jp
fst
jecxz
mov
push
inc
xchg
xchg
jno
loop
jle
jne
pop
(bad)
ror
adc
jnp
mov
jbe
sub
int3
mov
movs
add
mov
and
mov
pop
sbb
push
sub
lock
std
mov
mov
lock
jecxz
sub
lods
inc
(bad)
call
outs
mov
fimul
push
add
cmp
std
dec
sti
mov
inc
jmp
int3
push
cmp
mov
or
add
js
push
pop
rcl
add
push
into
pop
xlat
cmps
dec
mov
sbb
and
sub
inc
dec
xor
and
jnp
sub
and
add
sbb
add
pop
test
inc
xchg
test
push
cmp
mov
sub
sbb
lods
fstp
mov
stos
js
call
and
pop
pop
scas
cld
mov
sbb
inc
mov
and
out
movs
sbb
cwde
add
jnp
adc
pop
imul
mov
pusha
sub
inc
(bad)
mov
in
arpl
movs
mov
sbb
outs
pop
pop
retf
cmp
(bad)
jg
(bad)
jns
push
and
inc
out
movs
mov
xchg
push
cld
or
jge
cli
mov
imul
or
or
retf
xchg
hlt
xchg
shl
add
cmp
mov
sub
cwde
(bad)
cld
cmp
test
mov
mov
xor
cdq
lea
inc
call
std
fwait
jne
ror
jmp
push
mov
cmps
push
cwde
ins
cli
test
jbe
mov
mov
push
dec
aaa
movs
sbb
pop
mov
or
fld
xchg
icebp
and
repz
pusha
cmc
loopne
pop
in
cmp
xor
iret
push
cmp
out
sbb
les
sub
adc
or
bound
inc
sub
es
xchg
xchg
or
jge
jbe
sub
pop
das
jecxz
call
push
pop
leave
mov
movs
out
les
inc
ret
icebp
jbe
clc
cmp
jne
jl
adc
mov
mov
and
aaa
mov
addr16
adc
jmp
jp
jno
imul
test
sub
or
push
and
int3
(bad)
mov
jb
rcl
loopne
pop
mov
mov
jp
mov
pop
mov
(bad)
jo
push
out
call
pop
fst
push
and
stc
sub
adc
retf
fcomp
shl
dec
lds
sbb
pushf
cmc
mov
jg
daa
shl
fidivr
lods
pop
aas
add
push
addr16
xor
movups
bound
sti
cwde
pop
inc
inc
rcr
(bad)
int3
sub
jo
xchg
aas
aad
fwait
sub
aaa
hlt
das
push
dec
sub
or
sbb
cmc
les
aad
jne
leave
mov
pop
movs
sahf
iret
repnz
mov
ret
popa
xchg
cmp
mov
in
xchg
cmp
pop
or
xor
push
cld
retf
pop
xchg
cmovbe
sub
sbb
jae
and
pop
add
cwde
jb
lock
ficom
ror
in
push
jae
jge
mov
mov
cmp
dec
outs
xor
test
push
in
jmp
neg
out
cmp
dec
hlt
retf
mov
and
or
pop
sub
pop
mov
and
sub
sbb
and
repz
mov
int
or
ja
mov
sub
mov
scas
dec
in
sub
imul
and
inc
push
cmp
jecxz
fld
shl
sbb
add
loopne
and
nop
sub
inc
mov
call
call
pop
fmul
jae
popfw
inc
gs
inc
push
gs
pop
adc
jl
dec
je
daa
inc
jg
cmp
sbb
push
cpuid
fwait
in
add
scas
inc
std
cmp
out
imul
movs
sub
clts
adc
sbb
pop
aam
ret
pop
ret
sbb
cmp
mov
cmps
pop
sub
lods
sbb
gs
mov
data16
out
or
loope
sub
mov
call
retf
pop
inc
mov
xchg
mov
mov
shr
mov
jp
ss
icebp
xchg
lock
ins
leave
gs
sub
mov
push
xor
stos
jns
mov
arpl
add
nop
mov
inc
mov
ins
shl
mov
mov
add
cmps
xchg
xchg
push
test
(bad)
jmp
mov
xchg
xor
mov
int
out
sti
lds
xchg
movs
inc
dec
stos
out
out
pop
dec
push
mov
je
adc
sub
call
dec
(bad)
mov
xor
enter
cmp
adc
fmul
pop
jo
imul
jno
jnp
mov
xor
mov
xor
adc
inc
jmp
or
clc
shl
dec
mov
scas
aad
jbe
mov
sbb
sahf
out
pop
inc
mov
jmp
pop
cmp
sbb
cs
adc
adc
call
push
iret
outs
scas
mov
mov
and
pop
sub
in
and
pop
mov
aas
jns
cmp
call
xor
cmp
xor
push
cmps
sahf
cmp
das
push
push
add
add
dec
jae
add
cmp
cmps
adc
jl
push
test
adc
xchg
iret
das
pop
outs
cmp
scas
pop
mov
mov
jg
mov
daa
mov
pop
mov
fwait
xor
vhsubpd
out
loopne
gs
add
mov
and
ror
es
std
pop
cmc
int3
sti
sub
ins
mov
lock
cmp
pop
outs
inc
mov
ja
stc
outs
addr16
jle
mov
stc
dec
daa
test
pop
pop
sar
or
retf
lock
xlat
jmp
sub
xchg
leave
ins
in
(bad)
push
repz
pusha
aam
dec
jge
in
jno
and
or
sti
adc
movs
mov
clc
inc
push
scas
and
mov
xchg
dec
arpl
and
xchg
mov
cwde
retf
sub
mov
lea
sub
fadd
or
push
push
(bad)
in
mov
or
rcr
inc
cmc
pop
mov
xor
cdq
nop
ret
mov
pop
imul
and
fadd
fdiv
mov
sub
pop
sbb
xor
repz
sahf
sahf
pop
jns
cmp
push
not
aaa
jno
sub
push
sbb
fisub
aas
call
xchg
inc
inc
call
cmp
imul
fisubr
sar
sub
fsubr
jge
das
pop
or
xchg
pop
xchg
push
out
in
mov
sub
movs
xchg
and
xchg
repz
cld
mov
fcmovnbe
sbb
out
and
clc
pop
xor
dec
sub
dec
add
pop
ret
shr
lahf
rol
xor
jge
call
cmp
sbb
adc
ds
pop
into
jo
ss
pop
mov
sbb
fsub
xlat
xadd
mov
test
sahf
(bad)
(bad)
fdivr
mov
cmc
dec
das
mov
mov
cmp
mov
push
push
sahf
aaa
adc
into
sub
dec
inc
bound
pusha
arpl
out
and
aad
jne
loope
adc
pop
sub
xrelease
sbb
ficom
loope
mov
xchg
xor
stos
add
adc
fs
and
fbld
jl
call
(bad)
jmp
jp
aaa
adc
std
or
and
mov
loope
lea
mov
cs
popa
fst
(bad)
mov
xor
add
js
xchg
lock
fwait
daa
jbe
lahf
xchg
je
jo
fs
or
test
pop
push
mov
mov
shl
or
mov
lea
fwait
mov
frstor
sub
mov
push
test
cmps
inc
hlt
(bad)
mov
add
outs
call
cld
mov
sahf
les
daa
xchg
jmp
jl
mov
repnz
jno
je
rcr
test
or
retf
inc
repnz
cmp
jne
pop
js
xchg
sub
ror
ins
cmp
scas
mov
sahf
sbb
inc
add
lahf
push
fs
retf
jne
pop
movs
sub
popa
in
jmp
ret
mov
scas
xchg
ja
call
xor
mov
pop
push
inc
xchg
and
aam
fsub
aaa
test
nop
test
in
or
mov
xchg
enter
arpl
movs
cmp
es
mov
imul
(bad)
pop
test
sahf
ret
ret
(bad)
cmp
xchg
inc
push
jmp
lahf
fidiv
push
adc
test
mov
mov
int3
(bad)
clc
mov
ret
or
fwait
push
adc
mov
mov
xlat
xchg
sbb
cmp
adc
xchg
cmp
and
push
mov
cmp
mov
js
cmp
fmul
mov
les
jl
cmp
stos
pop
adc
mov
inc
xchg
jmp
mov
sbb
push
mov
xchg
pop
and
and
retf
cmp
mov
and
data16
push
fisubr
mov
scas
call
cmp
cmp
xchg
sbb
push
cmp
xor
enter
push
test
mov
add
or
mov
xor
add
jbe
add
repz
xchg
in
add
inc
push
shr
ret
pop
inc
jp
enter
sti
jmp
add
jg
sub
fistp
sub
jecxz
rcr
push
out
xchg
daa
push
aaa
repz
popf
pop
rcl
out
cwde
push
xchg
retf
pop
jae
cmp
test
pop
repz
mov
mov
(bad)
fimul
xor
or
loop
pop
lods
neg
dec
xor
(bad)
jns
push
outs
out
jp
pop
jno
sti
adc
jle
lods
xor
scas
out
sbb
xchg
sbb
dec
adc
and
ja
loopne
call
fimul
fisubr
sub
cmp
imul
push
inc
adc
leave
inc
imul
push
sub
inc
jge
inc
stc
and
outs
sbb
add
iret
ret
test
test
jno
mov
icebp
je
dec
ficom
mov
arpl
pop
or
cmps
data16
mov
and
push
leave
neg
mov
cmps
stos
xor
js
adc
out
nop
pop
mov
jp
daa
int
xor
mov
das
sti
and
aam
xchg
push
add
dec
mov
cld
sbb
jnp
shl
sar
and
inc
jae
adc
pop
(bad)
sbb
pop
jge
sbb
push
pop
mov
shr
cld
mov
pop
sub
loop
dec
out
ins
shl
out
idiv
mov
out
xor
and
les
inc
bound
imul
aaa
dec
inc
jnp
jae
mov
cmc
push
(bad)
mov
loope
mov
pop
jno
in
and
add
xchg
mov
xor
lods
jbe
or
lea
or
jo
rcr
xor
enter
cwde
inc
aas
call
(bad)
xlat
test
xchg
adc
push
cmp
retf
adc
sti
cmps
push
out
adc
mov
enter
sbb
retf
jmp
inc
stos
dec
dec
pop
or
jbe
mov
mov
cwde
mov
xlat
aad
out
fisttp
pop
lods
in
adc
fnstcw
std
xchg
pop
sbb
push
and
jl
dec
or
aas
lea
mov
mov
imul
imul
pop
ja
test
xor
outs
or
mov
ss
add
das
in
xchg
mov
add
cmp
cmp
jmp
or
lods
jae
stos
mov
jns
ja
les
mov
daa
xchg
mov
pop
imul
push
imul
daa
adc
js
loope
mov
cwde
sahf
loop
xchg
xchg
fnsave
pop
stc
mov
jbe
xchg
pop
and
add
jge
xchg
sbb
pop
mov
xor
(bad)
adc
sbb
mov
mov
adc
repnz
xchg
mov
pop
dec
cmp
jo
outs
jmp
das
sub
jb
mov
mov
add
nop
(bad)
sahf
sbb
int3
pop
jo
add
sti
test
xchg
popf
dec
add
test
push
sbb
push
fstp
loop
pop
mov
dec
lods
mov
es
xchg
das
cld
mov
int3
addr16
ret
and
daa
add
push
push
shl
(bad)
xor
ficom
(bad)
cmc
js
add
aaa
mov
inc
daa
ret
loop
js
call
push
dec
mov
(bad)
out
mov
push
(bad)
and
cmp
pusha
movs
dec
dec
add
pop
mov
or
jnp
sbb
call
fdivrp
out
sbb
push
mov
cmp
loopne
mov
xor
or
mov
dec
mov
aam
cli
(bad)
in
xchg
pop
dec
bound
push
push
outs
cmps
ds
ss
cmc
cld
cmp
dec
adc
lock
push
pop
mov
stos
xchg
xchg
pop
jmp
jl
adc
dec
fs
out
pop
mov
sbb
movs
jnp
dec
jns
movs
xchg
iret
sbb
das
push
mov
jnp
pusha
cmps
daa
xchg
cmp
std
and
or
sbb
repz
jb
in
rol
mov
xchg
add
jns
push
push
loopne
mov
add
push
and
mov
inc
push
inc
inc
sar
jecxz
mov
pusha
arpl
sbb
movs
ror
dec
out
add
and
jne
push
ret
cmp
xor
and
cmp
dec
sbb
add
adc
and
retf
mov
mov
out
ret
pop
int
xor
adc
in
das
in
stos
xor
inc
pusha
retf
xlat
and
and
lods
cdq
cmp
xchg
xchg
out
icebp
(bad)
retf
stos
(bad)
jo
leave
jne
das
rol
(bad)
and
add
push
or
jnp
sbb
into
nop
pop
(bad)
div
dec
mov
sbb
adc
repz
mov
pop
push
or
jecxz
ins
inc
xor
mul
inc
pop
add
lea
scas
mov
fdiv
cmc
retf
(bad)
push
jle
sbb
cmp
sbb
nop
inc
les
xchg
push
adc
mov
xor
and
js
add
cli
je
cld
xchg
add
inc
movs
fidiv
mov
lock
inc
xor
jmp
fcmovne
out
and
inc
pop
and
test
fdiv
dec
lock
and
pop
cmp
pop
jmp
cmp
and
or
scas
cld
and
push
xchg
add
push
mov
pop
adc
loopne
xor
ds
fisub
rcl
mov
es
fmul
push
call
inc
shl
test
add
jl
stc
cmp
clc
xor
inc
stc
pop
or
inc
xor
mov
pop
push
adc
in
mov
nop
aad
(bad)
mov
mov
dec
retf
gs
cwde
xor
div
cs
in
cmp
fbstp
aas
mov
das
lahf
cwde
add
je
or
shr
dec
push
mov
and
mov
js
mov
xor
jbe
cmps
loope
cmp
(bad)
sbb
cmp
jno
enter
inc
jl
ins
repnz
into
inc
es
je
cli
repnz
push
mov
sbb
xor
clc
sar
cs
push
jns
jns
pop
cmp
jne
adc
adc
and
fimul
mov
fidiv
jae
adc
dec
sar
sbb
adc
xchg
popa
sahf
push
push
mov
(bad)
sti
pop
push
push
add
inc
loop
outs
dec
mov
or
push
in
xchg
jns
jb
arpl
push
test
pop
and
hlt
sbb
mov
push
fimul
in
lds
test
loop
mov
hlt
out
jl
mov
add
leave
xor
inc
fmul
loope
mul
sub
addr16
in
icebp
xor
mov
inc
or
sahf
xchg
xchg
pop
xor
adc
dec
mov
mov
mov
push
test
cmc
push
movs
rcr
fbstp
mov
jge
cmps
dec
hlt
dec
dec
inc
ss
and
jne
inc
js
lds
into
xor
mov
sbb
shl
cli
lods
outs
xchg
xor
(bad)
retf
out
sub
pop
dec
xchg
push
jecxz
xor
push
retf
ins
pop
jbe
dec
or
in
enter
call
inc
test
mov
mov
loope
aad
mov
addr16
cwde
imul
sub
inc
jmp
sbb
nop
cmc
xor
les
and
aad
addr16
test
stc
cmp
jecxz
loop
daa
add
pop
xchg
cmps
mov
jmp
push
neg
sti
movs
inc
sbb
imul
ret
inc
add
jmp
pushf
jg
jbe
pop
ins
add
imul
ds
jo
iret
mov
js
push
or
out
xchg
ror
jg
jg
mov
xchg
and
push
loopne
jecxz
dec
fdivr
dec
mov
sti
sbb
jno
sahf
dec
sub
cmp
call
add
(bad)
cmp
pop
cld
pop
inc
sahf
leave
stc
(bad)
rcl
loope
dec
jg
and
push
mov
xchg
adc
cmps
out
cmps
jbe
inc
retf
xchg
xchg
xor
mov
xchg
sub
sub
ret
push
mov
leave
sbb
mov
jo
mov
rcl
push
retf
shl
dec
(bad)
sub
stos
test
jne
test
lods
sub
pushf
repnz
inc
xor
adc
mov
movs
out
mov
mov
cmp
adc
in
push
ds
pusha
sti
nop
adc
in
or
sub
arpl
adc
ins
adc
mov
cmp
and
dec
loop
cmp
sbb
fiadd
sub
pop
sbb
pop
jg
adc
jg
stos
arpl
outs
or
jecxz
pop
pop
shr
rol
das
dec
xor
pop
outs
jge
loope
sti
inc
fidiv
call
add
(bad)
(bad)
inc
js
adc
outs
push
push
das
cmps
sbb
cmp
aad
in
stos
dec
popf
xor
pusha
pusha
inc
inc
xchg
mov
inc
aaa
pop
mov
int3
mov
adc
imul
cdq
sbb
cld
call
and
pop
pop
pop
add
(bad)
xchg
shl
es
pop
shl
lock
call
pop
loope
neg
mov
pop
xchg
retf
cmps
outs
in
pop
jb
sbb
dec
loop
je
int3
dec
aaa
nop
ja
or
mov
add
fst
cdq
mov
sub
xlat
es
push
dec
mov
imul
scas
pop
popf
sub
es
cmp
icebp
or
or
repnz
adc
jmp
mov
xlat
lods
stc
pop
xor
cmp
dec
pop
inc
dec
cmp
adc
sbb
jp
sub
loope
xor
inc
imul
imul
fild
xor
push
mov
sbb
inc
inc
ret
mov
mov
lods
push
into
push
cmp
aam
or
int3
inc
jmp
jmp
pop
sbb
adc
cmp
mov
inc
sbb
jno
pop
jp
mov
and
or
xlat
xor
dec
mov
pop
arpl
add
or
dec
push
cmp
or
shl
jmp
adc
int3
(bad)
mov
xchg
sub
sub
and
aad
jb
aas
shr
xchg
jns
and
sbb
loopne
sbb
mov
push
pop
mov
ins
imul
pop
sub
sbb
xchg
push
cmc
pop
ins
je
sbb
adc
imul
xchg
cmp
push
call
adc
add
ror
push
jmp
jg
inc
in
inc
fist
sub
jl
sub
in
shl
mov
pop
movs
rol
loop
adc
aaa
ds
xor
lods
jmp
and
cs
xchg
cmc
aaa
mov
jmp
and
call
fisttp
xor
jno
movs
jb
popf
jle
jne
jge
dec
out
lahf
mov
jmp
das
dec
gs
xor
nop
push
imul
inc
add
cmps
jmp
mov
fwait
jg
ins
aas
xchg
jl
push
add
clc
ret
test
ja
sbb
imul
mov
adc
leave
cmp
nop
aas
int
push
jg
je
or
inc
or
push
push
ret
fcmovbe
imul
mov
rcr
cmp
inc
shl
push
mov
cmp
out
mov
(bad)
cmp
mov
cmp
sub
imul
push
gs
mov
outs
out
dec
loop
clc
push
inc
enter
arpl
loopne
sub
fsubr
out
(bad)
leave
dec
shl
jl
mov
mov
fucomip
adc
addr16
cmp
jmp
rol
outs
jbe
xchg
out
dec
inc
inc
sub
jae
das
dec
je
nop
dec
fld
stos
jp
sbb
sub
add
or
fisttp
jl
mov
mov
shr
mov
(bad)
in
pop
push
or
mov
jl
jno
mov
push
add
mov
pop
xchg
fst
shr
xchg
pop
imul
int3
xor
iret
xchg
dec
pusha
jb
mov
sahf
xor
mov
cmp
and
push
movs
mov
cmp
fdiv
aas
xor
jle
sti
lods
(bad)
lods
popa
push
test
add
mov
js
or
addr16
adc
sahf
mov
std
or
fs
arpl
shl
mov
scas
mov
sub
fadd
or
cmc
aad
icebp
(bad)
lods
bound
and
out
inc
and
ror
push
or
inc
xchg
js
test
mov
stc
push
into
fsubr
call
xchg
or
sub
pop
aam
push
xchg
movs
jb
cmc
add
sbb
sub
inc
popa
add
sbb
mov
stc
iret
pusha
add
add
jp
push
(bad)
mov
es
dec
in
(bad)
and
xchg
cld
mov
je
xor
or
movs
jl
cmps
test
xchg
lods
test
dec
fidiv
or
add
movs
cmc
xchg
test
and
cmps
leave
inc
cmps
lods
or
pop
call
js
aaa
mov
jnp
push
loopne
pop
lock
dec
dec
add
pop
jns
cld
xchg
mov
jbe
stc
adc
xchg
adc
outs
inc
int
mov
in
sub
sbb
addr16
mov
or
(bad)
in
cmp
cs
mov
retf
loope
xor
push
stos
pop
or
ret
int
fnstcw
popa
sar
and
outs
mov
cmps
xor
shl
xchg
push
sahf
lds
sbb
out
pop
pop
mov
test
xchg
and
mov
in
push
xchg
popa
cmp
fisubr
(bad)
pop
les
mov
inc
mov
sbb
pop
sti
(bad)
adc
bound
mov
inc
mov
and
and
jl
fcmovne
repz
add
fld
aam
push
retf
addr16
jge
inc
inc
hlt
lods
popa
fisttp
ins
inc
cmp
push
add
cld
js
xchg
xor
pop
shl
icebp
adc
xchg
aas
mov
sub
fcomi
sbb
jecxz
sub
adc
jl
inc
add
imul
outs
data16
adc
add
mov
push
jmp
adc
mov
pop
adc
popf
add
push
sub
add
cli
sub
dec
dec
push
or
cmps
fwait
imul
arpl
sub
popa
and
lock
imul
jbe
gs
sti
push
test
frstor
lds
pop
movups
jae
and
bound
ror
stos
ficom
data16
cdq
mov
adc
adc
pop
in
xchg
data16
aad
sub
repz
mov
add
sub
cmp
(bad)
pushf
inc
sub
inc
call
add
push
sbb
sub
adc
jno
jmp
bound
and
lods
sahf
sub
aas
retf
mov
or
push
loope
or
sbb
test
(bad)
mov
imul
mov
and
retf
dec
cmp
mov
aaa
mov
cwde
ret
add
inc
pop
mov
dec
and
inc
lock
add
ss
sub
or
call
add
cwde
and
pusha
sbb
rol
leave
add
in
xchg
mov
xor
mov
(bad)
pusha
in
and
hlt
in
mov
mov
dec
pop
xchg
dec
xchg
jmp
fcmove
mov
mov
sub
lock
add
shl
std
dec
int3
mov
or
sub
pop
mov
push
mul
xchg
mov
retf
dec
es
clc
sti
sbb
call
aad
jns
and
es
mov
or
fldcw
sbb
jge
and
inc
push
push
cmp
jge
aam
mov
cmp
push
repz
fst
aaa
mov
add
out
out
mov
sbb
xor
cld
mov
ins
and
jae
ret
sbb
test
xchg
test
push
cmps
xchg
mov
mov
aad
cmps
sti
data16
ret
pop
jno
and
push
push
shl
adc
dec
add
loope
enter
ficomp
add
sbb
cmc
mov
(bad)
mov
mov
out
pop
sub
ret
shl
fidivr
dec
mov
or
pop
dec
mov
or
nop
fdivp
dec
inc
lods
repz
scas
pop
inc
rcl
fidivr
cld
repnz
mov
mov
lds
jge
inc
(bad)
in
or
fsubr
inc
xor
loop
out
adc
cmp
cdq
push
pop
push
dec
enter
sub
sbb
mov
ins
loope
xor
iret
dec
xlat
mov
jp
stc
and
mov
pop
shl
pop
jmp
push
sub
pop
sbb
in
test
loop
mov
ss
cs
pushf
ror
ret
and
not
rcr
mov
call
out
sub
shl
loopne
out
das
push
mov
xor
jbe
loopne
adc
sahf
aam
sub
aas
pop
(bad)
fwait
mov
test
pushf
(bad)
sbb
dec
daa
aad
popa
push
mov
cli
aam
push
push
fnstenv
inc
jp
shl
push
lods
inc
repz
into
mov
inc
aas
mov
(bad)
sahf
arpl
pop
dec
jb
or
pop
jg
mov
mov
mov
cmps
cdq
push
xor
jb
loope
js
push
jge
test
adc
mov
mov
std
push
enter
pop
xchg
inc
addr16
push
adc
cli
out
test
repz
cwde
and
fcom
test
loope
jp
test
push
mov
xor
je
xlat
jecxz
sbb
pop
icebp
scas
cmp
adc
aam
add
jmp
push
sub
wbinvd
lock
or
sahf
push
jns
fsub
imul
sbb
push
popf
jns
shl
xchg
fmul
adc
loope
jge
movs
rcr
ins
jo
xor
inc
dec
test
and
mov
mov
nop
ficomp
lea
call
in
pusha
vmovlpd
dec
pop
pop
push
imul
pop
push
rcl
(bad)
test
jae
je
add
jno
cmp
ror
mov
loope
imul
pop
sar
mov
outs
push
and
push
cmc
pop
dec
add
lods
scas
sbb
outs
push
lds
inc
fiadd
add
cmp
stc
fld
sbb
repnz
mov
fnstcw
mov
sub
cs
fdivr
sbb
mov
retf
call
mov
jbe
popa
scas
xor
stos
and
cmp
add
iret
cwde
pop
std
cmp
mov
inc
xchg
xor
pop
adc
mov
hlt
(bad)
push
pop
retf
inc
aad
in
pop
in
jl
fwait
int3
stos
(bad)
jmp
ret
ret
adc
jbe
xchg
outs
push
pop
rol
and
add
pop
xor
les
fimul
sub
xor
arpl
or
aaa
cli
cmp
and
jno
fsub
aad
adc
hlt
fst
out
ficomp
cmp
inc
hlt
int
add
jle
rcr
push
pop
mov
fs
add
ins
lock
mov
inc
iret
shl
xchg
cmps
pop
push
mov
sbb
xchg
hlt
ret
packuswb
push
and
adc
fild
pusha
retf
adc
repnz
mov
mov
mov
mov
xor
adc
loop
add
fldlg2
pop
pop
int3
into
test
retf
or
call
aaa
xchg
dec
lea
outs
in
or
mov
(bad)
sub
inc
push
jnp
inc
je
inc
ins
arpl
or
mov
jl
cmp
out
jne
xchg
lea
and
rcr
sbb
inc
loop
mov
inc
rcr
jp
(bad)
fsub
(bad)
out
sti
ror
repnz
push
dec
cmc
fdivr
rol
ja
fadd
sbb
sti
rol
sub
mov
mov
movs
fwait
and
xchg
dec
dec
movs
cwde
adc
add
ja
sbb
ficomp
cmc
or
popf
and
std
mov
and
and
arpl
mov
xor
ret
dec
pop
ja
pop
rol
xchg
leave
lods
xor
adc
(bad)
mov
movs
std
mov
test
dec
xchg
clc
rcr
add
js
ja
mov
daa
daa
xor
cmp
test
cmps
pusha
cmp
xchg
js
cdq
inc
movs
xor
cli
and
(bad)
cld
dec
xchg
outs
je
xchg
push
or
inc
jb
push
sbb
adc
adc
cmp
(bad)
mov
stc
mov
push
inc
sbb
movs
repnz
push
sub
adc
add
dec
or
dec
lea
dec
iret
mov
dec
not
scas
and
repz
imul
jmp
mov
stc
lahf
(bad)
mov
xor
sti
mov
xchg
cmp
popf
jl
scas
inc
aas
mov
cs
mov
cmp
xlat
ins
inc
lock
dec
pop
in
push
pop
sub
xchg
mul
ja
or
sbb
push
push
push
xchg
arpl
pop
cmp
shr
clc
mov
xlat
jns
pop
pop
push
int
xchg
dec
inc
aam
imul
rcl
or
movs
sbb
inc
jge
repz
mov
(bad)
mov
xor
inc
jne
popf
push
pop
push
sar
(bad)
or
(bad)
not
mov
aaa
add
lock
jnp
retf
jl
pop
mov
test
add
jmp
cmp
cwde
out
xor
call
retf
push
(bad)
xchg
jecxz
test
jnp
mov
sbb
mov
jne
xchg
icebp
and
xor
ja
aas
cld
jne
cmp
in
mov
lds
bound
or
aad
xor
loope
dec
sub
mov
adc
jns
mov
scas
sub
fisubr
add
dec
bound
add
sahf
ja
call
scas
div
xchg
inc
xor
bound
repz
out
add
ret
out
mov
(bad)
cdq
xor
cmp
push
sbb
push
xchg
in
xchg
xor
lock
or
xchg
retf
repnz
mov
int
test
mov
or
(bad)
and
add
sbb
int3
mov
mov
sbb
pop
es
inc
js
jl
pop
and
scas
xchg
or
jecxz
pop
inc
mov
push
pop
mov
sbb
ret
and
sub
dec
xor
fidiv
push
jge
loope
inc
mov
jb
jne
mov
or
jle
mov
shl
scas
add
dec
pop
xchg
dec
adc
dec
sbb
pusha
pop
pop
fs
mov
gs
aaa
cmp
xor
adc
mov
inc
aaa
xor
std
fdiv
rcl
jmp
stos
pushf
push
jae
call
push
fst
add
or
cdq
inc
jno
lds
add
add
push
call
int
popf
repnz
xchg
sbb
int
or
mov
mov
mov
pop
pushf
mov
xor
or
mov
jo
pop
test
pop
jne
ret
into
fiadd
mov
movs
ds
mov
movs
xor
sub
sbb
cmp
and
or
xor
xchg
xchg
mov
je
push
clc
push
xor
stos
aad
add
inc
jge
dec
jnp
(bad)
rol
mov
(bad)
scas
dec
rcr
xchg
mov
out
fcom
hlt
in
(bad)
adc
sahf
sub
cmovo
int3
inc
push
out
pop
cmp
mov
mov
mov
and
out
outs
sbb
(bad)
mov
cmps
pop
(bad)
les
xchg
xchg
mov
stc
in
cli
pusha
sbb
mov
sar
repnz
adc
jmp
outs
sbb
xor
je
pop
std
ffreep
add
pop
mov
loop
aaa
lods
inc
pop
xor
and
movs
movups
dec
into
sub
sub
bound
xchg
or
or
sub
pop
call
mov
ds
out
addr16
sub
fcom
test
cmps
sbb
cmp
jmp
mov
or
rcl
fsub
in
cmp
jp
std
push
cld
mov
aad
es
(bad)
movs
enter
stc
hlt
int
mov
or
sub
fimul
jo
mov
(bad)
hlt
imul
pop
xchg
call
ror
cli
mov
jmp
out
jns
lock
retf
dec
(bad)
mov
shl
mov
fdecstp
out
(bad)
jmp
cmp
clc
ret
mov
or
movs
adc
jbe
sub
retf
jo
mov
xchg
cld
ins
mov
mov
pop
retf
push
bound
push
add
xchg
adc
adc
dec
adc
aad
lock
pop
jle
ja
in
pop
push
cmp
mov
jno
daa
xor
pop
icebp
cmp
xchg
out
jmp
inc
in
mov
inc
(bad)
das
xor
fdiv
pop
xchg
jge
hlt
dec
xor
jl
push
sti
push
cli
push
and
jns
sti
ror
out
es
adc
cmps
adc
ror
adc
(bad)
call
add
sahf
dec
(bad)
push
push
dec
inc
push
dec
call
cmps
cld
jo
or
cmp
xor
sar
fs
movs
pop
ds
aad
push
push
ret
mov
in
sbb
xchg
push
enter
adc
xor
(bad)
out
dec
in
cmc
mov
sub
jae
outs
gs
xor
in
add
and
pop
enter
int3
xchg
shl
xchg
inc
out
inc
loop
jae
jne
or
xchg
add
sbb
jne
or
loopne
push
movs
mov
pop
shl
sub
out
fisubr
repnz
call
aaa
mov
pop
ror
add
aam
pop
imul
fdivr
lds
pushf
sbb
mov
sbb
fidivr
or
mov
pop
dec
ja
push
mov
sub
xor
(bad)
in
jmp
sbb
std
ror
sub
mov
retf
mov
dec
fwait
outs
mov
shl
hlt
in
popa
sahf
(bad)
and
ins
int3
inc
xchg
mov
(bad)
retf
adc
fldcw
mov
movs
dec
sbb
jp
fdiv
cmp
and
cmp
adc
mov
jnp
int3
pusha
repz
mov
add
jns
jg
dec
xchg
mov
pop
nop
dec
es
push
mov
pop
cmp
enter
adc
bound
ror
mov
pop
shr
sub
or
bnd
js
adc
leave
jbe
pop
ja
cld
or
jmp
aam
dec
jo
dec
or
loopne
push
sub
pop
xor
or
cs
ins
mov
cld
dec
outs
xchg
mov
fcom
fcmovbe
jae
in
(bad)
imul
add
mov
not
mov
(bad)
call
movs
xchg
repz
inc
pushf
pop
jmp
add
sti
fiadd
clc
pop
push
mov
hlt
(bad)
pop
repz
adc
fbstp
aam
call
xor
or
xchg
xchg
lock
fld
xor
xchg
and
lahf
scas
fstp
pop
sub
fcmovb
sub
ins
inc
and
das
pop
push
test
test
jo
je
cs
add
movs
xor
sti
arpl
gs
test
jp
leave
lahf
adc
xchg
cld
adc
adc
retf
jg
gs
cdq
mov
dec
and
in
cwde
xlat
jnp
mov
jae
lahf
and
fild
loope
jnp
ins
aam
les
or
pop
ret
scas
std
stos
popf
and
jge
adc
cmp
out
leave
or
and
ins
test
mov
pop
je
push
int3
cmp
add
mov
in
(bad)
add
jg
in
stos
dec
das
shl
mov
movs
mov
or
sub
lods
push
lock
sub
push
push
sbb
inc
call
adc
xchg
sbb
js
gs
imul
imul
stc
xchg
jge
sbb
bound
int3
sub
(bad)
out
das
sub
pop
jne
cmp
enter
push
shl
fidiv
adc
test
jle
push
mov
les
bswap
fidivr
push
iret
mov
jnp
cmc
aad
jecxz
jl
ins
inc
pop
push
sahf
jl
fsubr
das
add
jbe
int
mov
ret
xchg
cmp
sti
adc
adc
pop
fcmovbe
cmp
sub
icebp
pop
mov
dec
mov
dec
enter
das
cmp
sbb
in
sbb
adc
in
icebp
je
mov
cmp
movs
leave
cld
(bad)
(bad)
xor
sbb
jge
xchg
pusha
rcr
lods
adc
dec
mov
jo
dec
cmp
jge
out
xlat
adc
mov
out
iret
push
leave
add
mov
xchg
sbb
or
dec
jecxz
dec
jmp
mov
das
outs
hlt
int3
ret
xchg
add
in
cs
push
neg
push
frstor
sbb
popa
jmp
stc
int
push
stos
cmp
pop
mov
mov
(bad)
shl
rcr
ds
mov
sbb
fsubr
fisub
push
fs
mov
daa
sub
sbb
pop
sbb
outs
loop
aam
or
test
cwde
inc
pop
push
add
add
mov
ds
(bad)
into
in
add
mov
jmp
mov
cmc
jecxz
gs
cdq
fwait
and
jo
xor
sbb
xor
adc
pop
inc
(bad)
cld
sbb
nop
mov
inc
push
out
jmp
mov
pop
cmp
fnsave
cmp
sub
imul
test
add
push
or
jp
mov
xchg
movs
mov
and
mov
add
push
pusha
mov
pop
std
cmp
adc
ficom
cmp
repnz
out
mov
adc
std
out
retf
xchg
mov
mov
dec
movs
fist
push
xchg
mul
mov
int
sub
mov
jb
mov
(bad)
sar
lahf
sbb
into
(bad)
dec
sub
xor
in
sbb
popa
jge
sub
les
dec
mov
hlt
(bad)
js
dec
arpl
jns
test
nop
push
mov
test
xor
cli
outs
das
fidivr
fsubrp
arpl
arpl
sar
lock
inc
int3
lods
retf
pop
pop
and
fst
repnz
loopne
fs
pushf
setb
int
js
mov
outs
xchg
dec
inc
dec
stos
jecxz
(bad)
pop
ret
xchg
ja
sub
jo
bound
xchg
mov
das
inc
test
sub
jmp
jmp
push
test
lds
sets
jge
and
or
mov
mov
enter
daa
jmp
enter
cdq
(bad)
bnd
fnstcw
scas
popa
mov
mov
jae
test
adc
mov
fisubr
ss
(bad)
into
jnp
push
(bad)
sti
(bad)
push
fiadd
outs
rcl
jl
mov
mov
dec
adc
cdq
sbb
hlt
ins
or
dec
scas
dec
arpl
jmp
lods
mov
adc
adc
or
mov
imul
push
pop
jno
xor
add
xchg
inc
loope
mov
push
sbb
and
cmps
mov
jae
pop
fwait
dec
mov
sbb
outs
shr
or
aaa
and
jbe
test
gs
jle
and
push
adc
mov
gs
imul
mov
mov
mov
mov
pop
mov
retf
pop
xlat
or
push
sti
push
xchg
out
lock
sub
xor
mul
enter
mov
dec
cmps
pop
push
shr
inc
push
ret
or
(bad)
pop
adc
lea
sbb
enter
push
stc
aaa
xor
pushf
fsub
mov
lods
push
pop
pop
stc
xor
mov
stos
ins
shl
jmp
jmp
and
mov
cdq
sti
inc
jae
mov
adc
daa
xchg
mov
push
mov
pop
fld
jp
cdq
cmp
xchg
push
pop
fwait
dec
sub
std
adc
mov
xrelease
adc
mov
cmc
mov
mov
adc
push
mov
push
pushf
ins
mov
inc
sub
ins
xor
jo
and
lods
and
push
cwde
sbb
push
jns
mov
or
mov
pop
sbb
(bad)
push
push
cmp
call
mov
mov
fistp
adc
inc
call
loop
imul
ret
xor
test
inc
and
(bad)
call
inc
int3
inc
stos
cmps
in
adc
les
cmp
mov
mov
xor
mov
ja
mov
scas
sbb
xor
inc
movs
test
popa
mov
mov
in
jmp
pop
je
push
sub
push
push
mov
push
push
xchg
icebp
dec
xchg
outs
add
ror
xor
(bad)
std
test
jns
sub
mov
xor
push
inc
pop
(bad)
fisttp
adc
push
arpl
dec
adc
test
push
arpl
pusha
mov
fwait
call
jbe
movs
call
dec
lea
sub
adc
arpl
aas
test
popf
adc
clc
inc
mov
int
jp
ins
and
popw
dec
in
cs
outs
not
mov
test
popf
jnp
in
int3
neg
mov
cmp
mov
jecxz
push
in
aam
xlat
gs
jno
arpl
jp
dec
sar
test
dec
ss
mov
out
cld
outs
(bad)
or
cld
rol
pop
push
sahf
shl
add
mov
cmps
dec
jl
and
repz
cmps
xchg
push
jo
pop
(bad)
retf
adc
mov
mov
jns
ds
mov
popa
rol
scas
and
test
dec
mov
mov
add
lods
add
dec
(bad)
xor
and
sbb
fs
mov
add
inc
push
cmp
mov
sar
inc
mov
xor
in
sub
imul
jmp
cwde
out
mov
mov
cmp
scas
mov
ret
and
adc
scas
stos
scas
imul
add
aas
or
(bad)
imul
shl
(bad)
cmp
pop
(bad)
sub
sub
jne
mov
int3
jne
lods
add
not
dec
cmp
ret
out
mov
xchg
test
xchg
enter
jl
push
adc
adc
add
adc
mov
xor
or
push
jb
push
rcl
lods
test
sbb
push
add
pop
jle
jnp
addr16
xor
sub
scas
fnsave
stos
dec
arpl
add
xchg
pop
neg
and
loope
(bad)
lods
inc
jle
call
dec
rcr
gs
mov
inc
hlt
scas
xchg
addr16
add
das
stos
setns
fnstcw
fldl2t
mov
mov
pop
jmp
inc
sub
shl
inc
mov
push
ins
mov
icebp
xchg
jg
jp
aas
psubusw
lock
xor
push
mov
mov
sub
adc
ret
out
lods
push
mov
aad
scas
(bad)
mov
inc
jecxz
int
daa
jns
adc
mov
sub
fnstcw
and
push
jno
mov
rol
push
call
add
jns
aas
pop
adc
out
test
rcl
jmp
ret
shr
cld
stos
add
data16
aas
daa
fwait
nop
icebp
jmp
test
ins
or
pop
ret
js
xor
and
aad
daa
and
push
or
or
or
inc
in
dec
scas
ja
pop
ret
lahf
dec
add
cmp
mov
sti
sub
sahf
jl
out
pop
iret
rcl
scas
mov
mov
test
enter
hlt
xor
cli
out
in
bound
jp
mov
push
cdq
mov
pusha
hlt
jmp
in
mov
dec
mov
inc
jge
lahf
push
cmps
xchg
or
pop
xor
fstp
pop
fwait
cmp
fwait
mov
push
mov
repnz
and
inc
adc
mov
aas
adc
fisttp
lea
cmp
js
call
mov
retf
xor
cli
aad
test
lods
pop
stc
push
dec
out
ins
add
shl
(bad)
xchg
xchg
retf
sub
retf
aad
mov
sbb
pop
in
(bad)
sbb
or
(bad)
cmp
aas
inc
sbb
sub
mov
xchg
xor
movs
jmp
out
std
adc
test
dec
popa
enter
dec
inc
pushf
inc
mov
(bad)
sub
adc
rol
adc
mov
sbb
mov
std
das
popa
mov
fisub
xor
and
in
push
and
movs
das
sbb
sub
and
imul
or
xchg
mov
fbstp
ficomp
xchg
pop
(bad)
rol
clc
xchg
cmp
jp
les
addr16
lea
mov
jbe
xchg
rcr
sti
rol
cmp
or
sbb
in
fs
movs
adc
das
call
pop
(bad)
sub
(bad)
fidivr
lds
cmp
imul
add
ret
cld
fs
je
clc
fisttp
mov
fist
and
popa
addr16
mul
and
fiadd
cmps
mov
imul
sub
rcl
sub
jns
clc
cld
in
add
sub
inc
xor
mov
ret
adc
hlt
outs
mov
sub
xlat
fwait
adc
sub
ret
cli
adc
retf
jns
aas
cmp
xor
inc
pop
dec
push
mov
jbe
add
pop
push
jno
(bad)
int
pop
inc
cmp
xor
xchg
pop
shr
bound
inc
pop
dec
jbe
pop
adc
dec
mov
test
imul
jp
(bad)
mov
pushf
stos
repz
ins
adc
push
pop
cmp
cmp
jl
stc
mov
add
(bad)
fs
and
(bad)
cmp
sub
dec
out
or
cdq
xor
(bad)
stos
xchg
sbb
repz
dec
mov
addr16
jmp
les
scas
mov
scas
mov
add
and
cmp
cmp
clc
mov
mov
xchg
fcmovnu
jecxz
mov
jge
inc
addr16
(bad)
mov
jle
fistp
pop
jg
push
cmps
mov
pop
ss
and
mov
or
(bad)
and
cli
xchg
sbb
pushf
ret
sbb
icebp
pushf
pop
pop
mov
fcom
or
cmp
xchg
cmp
ins
pushf
lods
jecxz
pusha
shl
scas
add
test
sub
popf
push
cs
sbb
mov
or
scas
loopne
es
ror
(bad)
cmp
retf
pushf
inc
jp
push
and
into
aam
mov
sti
pop
imul
pushf
xor
pop
inc
mov
rol
(bad)
repnz
xchg
leave
shl
outs
loope
scas
es
rol
mov
pop
pop
push
punpckldq
mov
test
aaa
mov
retf
adc
es
add
lds
not
repz
cmps
inc
xchg
retf
sub
fist
leave
inc
das
xlat
sub
push
pop
mov
dec
mov
sub
inc
mov
jmp
and
sub
push
sub
dec
popa
xchg
std
(bad)
xchg
mov
sub
jecxz
stc
sub
jnp
cmpxchg
cmp
aam
in
mov
cmp
pop
iret
fwait
or
add
aaa
cmp
retf
idiv
je
dec
mov
jle
outs
adc
and
push
lock
das
jle
movs
data16
in
fbstp
in
loopne
add
out
leave
inc
xchg
mov
or
xchg
stos
mov
cmp
(bad)
xchg
(bad)
aam
sar
pusha
inc
test
pop
int
adc
cmovl
xchg
test
aad
cmp
leave
rol
add
inc
lock
mov
cld
pop
and
dec
into
fst
movs
test
lea
cmp
test
or
pop
loope
mov
sar
popa
leave
dec
mov
enter
lods
jb
jmp
cmp
int
daa
dec
inc
pop
dec
push
daa
xchg
mov
repnz
imul
fsub
stc
aas
into
loope
jl
adc
xchg
pop
cmp
jns
mov
and
adc
or
loop
mov
add
push
inc
xchg
mov
pop
jmp
jb
jb
lods
gs
and
into
mov
mov
fadd
and
sub
and
std
jle
fidivr
jp
es
inc
or
cmp
push
aaa
cmp
rcl
cwde
daa
out
and
mov
mov
jo
and
shl
inc
pop
pop
jp
mov
adc
stc
out
sbb
inc
sbb
lods
(bad)
pop
dec
pop
mov
int3
xor
(bad)
in
test
ret
pop
pusha
fnstsw
jge
js
out
sbb
dec
inc
cwde
pop
add
out
aaa
aad
popa
cmp
xor
dec
add
cmps
pop
sbb
(bad)
(bad)
cwde
icebp
sbb
loop
pop
cmp
loope
xor
mov
inc
hlt
test
push
cld
psubq
pop
sub
mov
inc
imul
cli
jmp
jae
(bad)
xor
push
inc
and
sbb
(bad)
pop
add
inc
lds
sbb
and
xchg
popf
jmp
push
or
xchg
mov
mov
imul
inc
sub
mov
test
addr16
xabort
mov
inc
aad
add
cmc
pop
shl
cmp
fnsave
stc
sar
fnstenv
mov
repnz
jmp
mov
sub
mov
inc
sub
mov
cmp
(bad)
push
pop
out
js
call
mov
sub
rcr
movs
sub
mov
frstor
fisubr
mov
pop
call
je
add
sbb
test
into
and
xchg
sbb
cmp
scas
lods
aad
fistp
stc
or
dec
pop
cdq
mov
cs
imul
and
pop
bound
shl
pop
(bad)
xchg
xchg
or
xchg
stos
jmp
ss
call
cs
ret
lahf
push
call
mov
int
push
push
dec
iret
push
cwde
mov
dec
and
scas
mov
mov
in
icebp
mov
es
adc
pushf
outs
xor
popa
loopne
ja
cmp
loopne
shl
ret
mov
jo
lea
imul
outs
(bad)
jae
mov
push
mov
in
fdiv
popa
pop
mov
push
xchg
nop
sbb
lea
sbb
xor
sti
bound
xchg
xor
inc
jecxz
cmp
imul
push
(bad)
sbb
ss
push
retf
pop
xchg
inc
push
push
add
mov
(bad)
dec
stos
jb
pushw
add
mov
mov
push
and
mov
imul
iret
sub
jne
dec
(bad)
iret
fisttp
mov
stc
adc
adc
dec
pusha
push
nop
bound
rcl
bound
cmp
pop
gs
jmp
add
in
std
mov
dec
jno
mov
sbb
mov
or
mov
mov
xor
xor
lea
jbe
pop
daa
out
(bad)
out
lods
pop
data16
sar
and
pop
jae
mov
add
sbb
add
movs
test
pushf
fistp
dec
and
adc
dec
xchg
and
pop
in
test
mov
xor
dec
movs
xchg
jge
add
push
test
(bad)
loopne
sbb
in
mov
pop
mov
leave
xchg
add
inc
ror
or
cwde
and
icebp
ss
addr16
sar
bound
pop
int
inc
xchg
aas
popf
test
pop
clc
icebp
gs
seta
mov
je
lds
mov
retf
mov
imul
aad
sub
inc
push
jle
repz
stos
enter
pop
or
nop
push
mov
cmp
movs
add
jnp
mov
dec
pusha
ror
and
mov
inc
adc
mov
lea
(bad)
jecxz
sub
stos
arpl
jle
jmp
mov
or
lahf
ins
mov
imul
push
cmps
pop
rol
lds
adc
sub
js
dec
inc
jne
or
mov
mov
test
loopne
hlt
leave
and
cmp
add
retf
mov
(bad)
rol
test
iret
test
adc
xchg
aas
mov
dec
out
adc
jp
pop
js
inc
sbb
retf
fistp
mov
inc
push
inc
test
or
push
mov
adc
imul
int3
cli
cdq
dec
movs
cli
loope
pop
mov
div
shr
(bad)
fistp
pop
in
call
movs
sub
mov
dec
test
sbb
not
dec
icebp
jne
test
jae
das
call
xchg
sar
loop
push
lock
or
in
mov
movs
scas
fs
jl
lock
xor
xchg
jg
mov
lea
fdivp
push
inc
ins
mov
push
cli
dec
scas
aam
push
inc
call
push
xor
jge
cwde
and
cmpps
pop
xor
leave
icebp
fdiv
adc
das
cdq
in
sbb
mov
cmps
inc
jns
imul
sar
call
pusha
cdq
push
sti
sbb
sbb
aad
daa
cdq
or
jb
rol
xchg
mov
jb
add
popa
adc
jmp
and
ss
lahf
dec
shl
inc
outs
int3
mov
inc
sub
lea
popf
push
adc
cdq
inc
push
sbb
stc
xor
cmps
jp
stc
inc
retf
pop
push
or
sbb
dec
lahf
inc
inc
pop
jmp
sar
lds
movs
jns
inc
mov
jo
fisubr
je
test
push
jge
xchg
rol
jp
call
push
adc
fs
or
push
jne
scas
xor
adc
ja
ds
into
adc
cmp
inc
mov
cdq
mov
stos
cmps
inc
sub
stc
leave
js
adc
jg
repz
loope
jne
rcr
inc
adc
loopne
popf
jl
scas
sbb
adc
iret
xor
jle
outs
movs
int
push
ins
(bad)
out
cwde
mov
(bad)
idiv
pop
retf
imul
daa
mov
xchg
jne
out
jb
fbld
repnz
arpl
ds
repnz
inc
(bad)
jb
dec
jp
push
adc
inc
mov
and
clc
shr
xchg
(bad)
cwde
mov
and
add
loop
sub
or
pushf
lods
mov
and
aad
jno
and
mov
push
pop
inc
xor
leave
je
loopne
data16
jle
sbb
and
sar
xor
(bad)
outs
pop
pusha
fistp
fidivr
mov
or
mov
imul
cli
clc
jno
movd
dec
jae
sbb
loope
sub
inc
cmp
dec
out
and
mov
and
lock
out
(bad)
or
adc
call
(bad)
je
pop
sbb
adc
lock
std
push
xchg
shr
or
lahf
jnp
inc
jno
mov
fisttp
jmp
loope
sbb
movs
mov
(bad)
stc
mov
rol
movs
pushf
jmp
outs
ins
and
cwde
ret
retf
out
ja
imul
outs
sub
mov
mov
cmps
aam
pop
adc
ins
mov
mov
or
scas
or
and
imul
into
mov
and
push
les
ins
xchg
jle
mov
ret
mov
adc
dec
push
add
sbb
cmps
push
and
sub
dec
dec
adc
pop
push
in
pop
cmp
repnz
push
and
cdq
fmul
sbb
or
mov
ins
xor
push
lea
imul
inc
mov
andps
fnstsw
pop
or
and
rcr
mov
pusha
repnz
(bad)
stc
jne
mov
xor
xor
jl
call
cwde
push
ja
mov
ret
add
mov
inc
mov
sbb
inc
pop
inc
mov
dec
das
push
hlt
push
cmps
test
jmp
cmp
ja
adc
stos
test
xchg
pop
mov
fist
dec
jmp
outs
add
test
loopne
test
inc
(bad)
jecxz
jmp
or
mov
cld
pop
mov
xor
add
jae
les
aas
imul
inc
xor
pop
jnp
pop
hlt
mov
pop
fdiv
adc
xor
movd
jnp
sub
arpl
dec
xchg
sbb
inc
fist
movs
push
int3
or
daa
jl
mov
sbb
mov
add
repz
into
cmp
les
or
xchg
lods
in
cwde
mov
pop
dec
xor
mov
sbb
mov
std
(bad)
pop
loopne
inc
cmp
inc
adc
cmp
inc
(bad)
enter
pop
(bad)
(bad)
xchg
dec
inc
adc
std
push
retf
sti
xchg
sbb
jl
xlat
fbstp
into
fisub
popf
mov
or
sbb
stos
mov
in
test
jmp
ins
rcr
pushf
xchg
sub
adc
jge
push
vaddss
repnz
xor
mov
call
rcr
fstp
sub
jne
or
adc
popa
xor
fsub
bound
dec
xor
ret
push
out
call
sbb
ja
jnp
push
out
daa
mov
sub
(bad)
(bad)
or
sub
gs
in
or
mov
and
sbb
je
dec
adc
pop
clc
pop
pop
out
lds
clc
inc
mov
xor
pop
mov
add
in
in
in
in
pop
shl
rcl
mov
psadbw
inc
cmp
aaa
lea
leave
and
(bad)
jb
pop
inc
add
push
pop
(bad)
push
sub
push
das
arpl
iret
loop
fistp
jae
or
push
mov
or
icebp
scas
retf
and
pop
lds
xchg
mov
in
sbb
pop
les
inc
clc
fist
je
fild
jb
ja
and
sbb
movs
lahf
shl
in
out
inc
out
mov
pop
shl
inc
int
sub
icebp
jle
jp
lock
inc
adc
cmc
mov
shr
ins
fld
repnz
(bad)
iret
inc
dec
cmp
xor
adc
push
mov
cwde
hlt
(bad)
scas
pop
ja
or
int3
retf
addr16
ja
mov
pusha
adc
ja
stos
mov
cs
fwait
ins
dec
int
sbb
mov
lods
in
fldcw
xor
xchg
out
jg
push
push
add
pop
mov
xor
jns
imul
in
sub
retf
mov
scas
fist
pop
sbb
call
inc
das
xor
rcl
jg
cmp
adc
mov
add
stc
shr
arpl
push
jae
loop
mov
mov
inc
(bad)
jns
adc
mov
xchg
loopne
or
int3
lds
aaa
adc
mov
jle
std
lods
mov
arpl
mov
jb
aaa
xchg
sub
jmp
inc
jnp
data16
mov
add
jmp
call
pop
mov
pusha
inc
dec
loop
ror
push
sar
popf
pop
imul
xchg
mov
and
and
pop
repz
mov
movs
imul
scas
or
dec
mov
les
ss
sar
in
or
enter
outs
fucomip
jno
adc
mov
jb
aaa
sar
les
js
int3
push
pushf
test
mov
and
jns
push
cmp
cs
adc
mov
cli
mov
sbb
inc
repz
and
fsub
sub
xor
ret
popa
mov
jb
fbld
fwait
xchg
jl
lds
ds
ds
std
stc
rcl
cmp
cli
add
dec
in
adc
mov
and
fisubr
clc
cvtdq2ps
pushf
je
push
add
jno
and
jnp
imul
xor
ss
xor
repz
mov
test
mov
movs
cld
sahf
xchg
lfs
stos
nop
not
out
mov
pop
dec
push
xchg
mov
call
(bad)
mov
and
jne
fdivr
imul
sub
cli
ror
data16
jge
ret
mov
es
scas
xor
push
xor
or
sbb
xchg
int
mov
mov
in
or
cld
dec
scas
inc
cmp
adc
ret
mov
cs
sub
mov
sbb
jl
stos
adc
gs
fist
addr16
rcl
out
data16
sub
cwde
mov
mov
outs
loope
in
push
into
test
mov
cmc
mov
mov
push
sub
mov
movs
mov
loop
push
sub
bound
jle
fs
jg
or
mov
sbb
cmp
sub
dec
adc
bound
jno
jo
gs
xor
arpl
adc
and
mov
sub
ds
inc
sub
rol
je
rcl
mov
fnstcw
mov
push
and
and
loope
(bad)
test
lds
or
add
(bad)
cmp
sbb
aas
mov
add
not
out
xchg
jge
out
cli
mov
idiv
cmp
and
xchg
xor
adc
test
inc
pop
popa
sbb
jl
and
jns
lock
xchg
sbb
cmp
mov
dec
lods
cmp
hlt
push
shl
xor
ret
mov
cs
enter
dec
in
jae
ficom
js
mov
ror
rol
jmp
rcr
or
inc
xchg
mov
outs
xchg
pushf
mov
std
mov
idiv
jmp
retf
xor
or
cmp
hlt
iret
daa
ins
add
ret
pop
xor
outs
push
push
test
push
mov
and
in
jmp
mov
or
int3
ror
(bad)
je
cld
dec
ds
push
sbb
(bad)
and
adc
and
xchg
icebp
ror
sbb
sbb
dec
mov
cmps
jle
push
jnp
cmp
jecxz
daa
push
bsr
dec
shl
mul
out
cmp
xor
cmc
xor
add
jg
xor
push
pushf
leave
mov
mov
mov
cwde
adc
inc
mov
push
iret
sbb
dec
dec
call
jne
cmp
(bad)
and
out
into
lock
jno
aad
out
cmp
out
test
jmp
stc
jmp
lods
sub
xchg
frstor
add
dec
push
inc
mov
mov
xchg
jbe
mov
cmp
jbe
inc
xchg
enter
sti
scas
xor
shr
(bad)
in
inc
pop
gs
inc
inc
stc
jl
cdq
fistp
cwde
div
imul
(bad)
rcr
clc
mov
mov
pop
sar
cmp
mov
fisttp
push
adc
outs
sbb
jp
(bad)
test
dec
test
mov
stos
jle
sbb
jb
jb
aaa
idiv
pop
(bad)
ret
xchg
sub
jmp
dec
vunpckhps
sahf
stos
jmp
lahf
cmp
ds
in
jae
dec
mov
push
pop
clc
stos
inc
je
dec
out
push
and
pusha
bound
xchg
mov
stc
aas
hlt
ret
add
cmp
push
inc
cmp
cmc
xchg
dec
xchg
cdq
cmp
in
rol
stos
cmp
pop
aad
clc
mov
cmc
repz
addr16
inc
daa
adc
sbb
sub
leave
xchg
dec
jmp
or
das
fild
jecxz
inc
loop
enter
into
add
outs
and
add
pop
fisub
fcmovne
mov
mov
add
mov
or
push
rcl
popf
xchg
add
xor
lods
sbb
ret
jecxz
jne
push
or
jmp
test
and
hlt
aaa
fsubr
pop
call
and
inc
xchg
add
cld
outs
and
lock
ja
mov
out
out
mov
dec
mov
pop
aad
(bad)
mov
mov
xchg
(bad)
loop
js
push
push
(bad)
std
fnstenv
add
xchg
adc
and
addr16
pop
add
jle
add
push
xor
shr
arpl
adc
mov
pop
sub
in
lock
call
adc
xor
sahf
sahf
ret
cmp
lods
xchg
adc
mov
sub
addr16
or
sar
push
shl
mov
push
stos
dec
repz
cwde
fstp
daa
mov
lds
mov
pop
cmp
inc
iret
shl
retf
pop
(bad)
sbb
cmc
jmp
and
xchg
ret
loopne
xchg
into
dec
movs
frstor
xor
ficom
sbb
movs
sub
cli
mov
dec
mov
(bad)
xor
sti
stos
xchg
outs
ficomp
repnz
dec
pop
sbb
inc
test
aaa
in
test
sub
sub
data16
xchg
push
outs
std
popa
mov
mov
fisub
cmp
cmp
rol
dec
aad
push
das
in
mov
(bad)
jge
xor
test
loope
js
pop
mov
arpl
fmul
cmp
inc
out
das
je
cdq
mov
inc
sub
mov
(bad)
mov
adc
dec
mov
out
xor
sub
(bad)
jbe
mov
cmp
jecxz
cmp
sub
adc
and
xor
mov
and
cmp
loope
cli
mov
pop
out
push
mov
xor
sti
loopne
outs
lock
hlt
push
jmp
inc
fs
mov
test
stc
nop
or
stos
retf
jne
rol
mov
data16
inc
dec
xor
inc
cmps
push
add
add
jb
retf
dec
retf
xchg
out
pop
adc
cs
shr
mov
fucomp
(bad)
arpl
pop
test
das
adc
dec
jg
movs
fnstsw
push
cdq
sbb
inc
loop
or
ret
fidiv
and
dec
push
add
cwde
jmp
int
sub
fwait
xchg
loope
push
in
or
mov
pusha
sub
xchg
jmp
mov
cmp
cmp
sub
imul
and
(bad)
(bad)
out
ret
or
inc
mov
mov
ret
xchg
inc
add
mov
jb
add
je
jp
jo
jns
loope
mov
cs
dec
imul
nop
out
push
pop
pop
pop
mov
int
add
cmp
push
cdq
mov
les
adc
mov
xchg
scas
repz
mov
pop
pop
je
in
les
(bad)
inc
xchg
sti
sub
bound
stos
shl
xor
popf
scas
arpl
jno
aas
and
int
and
xor
leave
push
pop
test
idiv
sbb
aaa
data16
retf
sti
add
adc
jb
fs
out
jne
ror
data16
pop
or
xchg
mov
jae
jmp
inc
ins
add
sub
cmps
xor
xchg
sbb
in
sbb
push
adc
inc
add
test
out
pop
adc
and
sub
push
mov
or
jbe
daa
and
inc
inc
mov
jnp
jbe
xor
js
out
mov
call
mov
push
daa
mov
xchg
out
mov
xchg
mov
inc
fcom
daa
shl
sahf
adc
cmp
jl
mov
out
jnp
es
movs
xor
nop
leave
xchg
ja
xor
adc
cld
js
jne
ficom
in
lods
fdivr
out
retf
sbb
xchg
pop
(bad)
or
nop
xor
retf
cmp
dec
mul
sbb
and
mov
es
cld
cmp
pushf
and
hlt
pop
xchg
xor
xor
mov
call
mov
mov
popf
std
mov
neg
and
stos
jp
test
pop
and
add
aad
sub
push
test
adc
test
xchg
in
cmp
add
shl
adc
fsubr
push
or
punpckldq
adc
cmp
push
mov
into
mov
sbb
add
repz
jl
retf
mov
repnz
jo
int3
aad
pop
(bad)
adc
loope
repz
mov
cmps
lds
add
mov
rcl
mov
and
or
nop
xor
in
leave
push
adc
cmp
push
or
das
mov
xchg
ja
xor
mov
scas
retf
(bad)
and
mov
inc
inc
outs
in
outs
xlat
fs
mov
ffree
xchg
out
jle
or
cmps
adc
inc
adc
xor
(bad)
jne
or
test
dec
lock
jp
and
lahf
cmp
jnp
es
cmp
jmp
out
jns
sbb
mov
leave
pop
mov
rol
adc
push
mov
mov
ja
(bad)
jo
lahf
nop
dec
cmp
sub
push
sahf
add
enter
sub
sub
(bad)
cmps
test
scas
adc
lods
sbb
inc
(bad)
dec
rol
and
pop
gs
pop
sub
test
scas
xor
jb
inc
xlat
sub
mov
rol
xor
sbb
inc
scas
jmp
mov
xlat
adc
int3
ss
aam
xchg
icebp
lds
inc
mov
frndint
leave
dec
jp
cmp
jle
int
les
rcl
adc
shl
and
or
inc
imul
shl
(bad)
jmp
loope
gs
xor
mov
test
lods
aas
or
pop
mov
hlt
add
jle
jg
lods
inc
push
push
add
in
mov
mov
fmul
mov
repnz
jg
int
sbb
enter
ret
xor
inc
lahf
movs
in
cli
push
test
lock
pop
(bad)
aas
or
ret
push
mov
lahf
push
mov
sbb
loopne
bound
mov
lea
inc
cdq
jmp
push
xlat
and
push
je
test
ret
and
and
lds
xor
and
mov
std
jno
jmp
mov
fcomi
fmul
les
jg
pop
sbb
test
ret
hlt
in
ret
fistp
out
jnp
jmp
add
jge
inc
mov
fnsave
retf
mov
mov
push
sbb
add
and
dec
mov
cwde
mov
das
cmp
sbb
cld
ficomp
jge
repz
sahf
mov
ss
sub
cld
sti
or
adc
stos
hlt
or
mov
mov
dec
inc
add
xchg
sub
add
and
jmp
sbb
dec
mov
sub
cmp
dec
mov
push
lods
sbb
or
(bad)
pop
mov
clc
and
pop
repnz
dec
aad
mov
imul
sbb
jb
or
mov
mov
fisub
cli
repnz
cmp
add
dec
std
(bad)
lods
icebp
sbb
sub
jmp
xor
lods
inc
xchg
jne
sbb
mov
in
or
sbb
adc
imul
mov
inc
scas
cmovo
or
mov
and
inc
pop
aaa
data16
mov
daa
lea
call
pop
dec
(bad)
or
mov
push
xor
jne
sub
es
inc
push
or
mov
inc
pop
xlat
sbb
pop
inc
fsubr
test
jl
out
xor
gs
sub
add
add
mov
jbe
fild
ss
shr
jl
mov
cmc
cdq
mov
aaa
nop
sbb
xlat
cmp
clc
push
fcmovnu
sbb
or
cmp
adc
pop
cmp
or
aaa
cmps
jecxz
jl
js
jnp
mov
div
pop
cmp
stos
js
mov
pop
or
xlat
push
jbe
xor
pop
loop
cmc
jb
xchg
stos
(bad)
out
mov
cs
fcmove
mov
mov
mov
mov
push
mov
cwde
jne
mov
div
mul
xlat
shl
jno
xor
outs
mov
or
call
adc
push
sbb
xchg
outs
int
cmps
push
sub
lods
sub
mov
call
inc
ja
mov
fisubr
dec
push
mov
adc
xlat
hlt
movs
out
mov
lods
add
lods
movs
fistp
ss
cdq
push
out
into
mov
fisubr
aaa
mov
icebp
and
adc
mov
inc
test
lea
popf
jl
repz
sbb
xchg
sbb
stos
sti
call
pop
int3
js
sbb
(bad)
adc
movs
or
sbb
rcl
pop
mov
or
or
add
das
lds
mov
je
loop
ds
clc
xchg
fs
js
stc
xchg
dec
adc
movs
sub
jecxz
inc
stos
mov
aad
gs
in
fdiv
loop
sub
xchg
and
test
pmulhuw
aas
lea
(bad)
jle
push
lock
add
inc
test
shl
fwait
push
pop
test
xchg
cmc
mov
lds
pop
scas
dec
sbb
pop
push
arpl
dec
in
push
mov
test
loopne
lahf
movs
fidiv
je
or
push
in
lods
(bad)
pusha
cwde
sbb
mov
xchg
push
fwait
and
push
xchg
push
(bad)
rcl
xlat
jg
sub
rcr
cwde
test
shl
shl
popf
data16
push
inc
les
dec
pop
out
mov
mov
mov
and
imul
mov
xchg
icebp
les
xor
sbb
sbb
pop
loopne
cmc
mov
push
call
cmp
ins
lds
cmp
lea
push
push
inc
sbb
jl
xor
push
sahf
rol
jle
pop
push
retf
push
aam
push
jb
push
cwde
or
xlat
out
pop
rol
stos
dec
mov
call
jns
cmps
rol
dec
repz
lock
pop
cmp
outs
dec
dec
int
int
sbb
mov
test
cld
ror
nop
scas
cld
mov
int3
xchg
js
or
and
push
sahf
jbe
cmp
movs
mov
int3
popa
mov
arpl
out
or
xor
aas
xor
cmp
cmovns
ds
daa
movs
inc
lea
ss
or
aad
cli
cmp
add
movs
out
ret
addr16
or
jge
xor
jns
iret
fisubr
sbb
or
test
adc
pusha
(bad)
mov
sbb
icebp
sti
mov
add
cmp
(bad)
xchg
mov
and
adc
lock
adc
(bad)
test
test
sar
arpl
push
or
push
mov
adc
sbb
dec
in
mov
jmp
popa
mov
(bad)
cs
(bad)
push
mov
daa
push
in
imul
cmps
inc
retw
aad
(bad)
mov
pop
xor
leave
xor
dec
dec
fwait
pop
add
inc
add
ja
popa
add
imul
loop
push
ins
sbb
adc
mov
retf
nop
data16
fadd
dec
in
pushf
inc
repz
and
movs
mov
cli
mov
int3
and
jno
outs
sti
jbe
adc
ja
ja
xchg
jnp
es
xor
sti
std
pop
push
lea
daa
(bad)
std
dec
fadd
and
xchg
mov
je
das
ss
into
leave
mov
mov
adc
pop
mov
lahf
out
scas
clc
mov
(bad)
lock
xchg
xor
pop
cdq
aad
das
push
in
add
popf
jns
cmp
and
icebp
fsubr
ret
pop
fisubr
stc
dec
fsubr
jg
in
push
or
sub
dec
pop
push
and
dec
lods
not
add
pop
jo
sbb
(bad)
mov
dec
pop
inc
repnz
push
push
gs
lods
cwde
test
cmps
adc
into
xchg
sub
cwde
(bad)
fiadd
aad
mov
jnp
movs
mov
clc
push
gs
mov
test
fistp
cmc
and
setge
rcl
sub
xrelease
pop
cmp
inc
cmp
pop
sub
xchg
std
pop
xor
mov
scas
dec
dec
xor
call
call
ds
stc
dec
mov
fnstcw
es
repz
je
sbb
popa
sub
ror
adc
or
imul
imul
inc
fs
xchg
xor
test
jb
or
call
data16
xor
mov
pop
inc
scas
mov
cmps
scas
push
or
inc
push
in
xor
fstp
dec
adc
inc
and
push
xor
inc
shl
xchg
inc
push
xchg
sbb
push
sub
(bad)
imul
rol
cld
mov
in
in
repz
out
js
add
or
in
gs
call
retf
jns
mov
pop
inc
xor
jno
add
mov
mov
sub
xlat
test
pop
jmp
cmp
and
cld
push
push
movs
pop
mov
jns
mov
dec
sbb
retf
sub
into
sub
and
aad
pop
push
lds
imul
inc
loop
add
sar
jne
nop
add
int
dec
mov
xor
cld
div
cli
shr
into
aam
lods
push
pop
sbb
add
adc
inc
out
lock
out
cmc
nop
mov
fistp
xlat
xchg
add
(bad)
stos
cmp
imul
scas
mov
shr
mov
xor
ins
lds
leave
cmp
lds
out
sub
mov
adc
lods
sub
cld
jle
clc
jno
cmp
jmp
lods
mov
and
inc
clc
mov
push
in
inc
icebp
movs
rcr
test
jbe
pop
or
dec
pop
in
jmp
cmps
sbb
pop
dec
in
lds
inc
imul
fldenv
mov
pop
push
or
jp
les
imul
mov
xchg
cmp
or
inc
jmp
pop
mov
das
cmps
xchg
push
mov
sub
push
fs
mov
fs
iret
je
dec
mov
sub
cmp
daa
call
adc
addr16
hlt
outs
sub
addr16
mov
dec
imul
hlt
test
fisttp
fisub
cmp
(bad)
add
jmp
mov
push
xchg
pop
packsswb
xchg
inc
sub
mov
mov
jo
sub
int
bound
mov
mov
mov
ret
sbb
loope
cli
lods
in
into
xchg
push
ror
jno
fsub
fwait
push
jns
jge
js
sbb
sbb
pop
loopne
dec
repz
adc
in
(bad)
adc
imul
add
lahf
arpl
ret
pusha
cmp
inc
pop
inc
(bad)
lods
iret
daa
sbb
inc
(bad)
retf
mov
fisttp
sub
mov
lods
es
int3
sub
jno
or
xchg
add
mov
cwde
js
mov
in
mov
fisub
push
das
add
dec
push
sbb
icebp
pusha
(bad)
or
and
movs
loopne
xchg
xor
dec
rcr
mov
ret
in
cld
popf
dec
lods
xchg
mov
xchg
add
sahf
sub
cmp
sahf
inc
mov
fistp
lock
xchg
inc
xor
adc
rcr
or
lods
sbb
aas
std
cwde
int
push
adc
pushf
push
adc
aaa
retf
loopne
mov
div
mov
cmps
std
xor
dec
ins
adc
imul
aas
jns
push
xchg
pushf
mov
push
data16
sbb
jp
imul
jnp
outs
sbb
jle
xchg
cli
pushf
xchg
sub
popf
fcomp
fwait
cmps
es
repz
jecxz
push
mov
adc
int
add
inc
mov
cmp
sbb
jle
jmp
mov
adc
mov
icebp
jl
mov
sub
push
bnd
(bad)
jl
jle
xor
jb
jge
push
inc
lods
aas
dec
stos
pop
inc
adc
fwait
add
inc
mov
fs
cmps
jg
dec
mov
hlt
imul
fidiv
cmp
push
fnstsw
mov
jmp
std
push
add
push
(bad)
fdiv
sahf
sub
rol
daa
sub
adc
loop
mov
inc
movs
pop
nop
(bad)
cmp
fucom
mov
mov
ins
loop
mov
jnp
fnstsw
je
inc
shl
scas
je
ds
push
xlat
daa
test
jne
cmp
mov
mov
enter
mov
outs
lahf
loope
fnstcw
fsub
sub
and
loopne
fmul
inc
in
mov
aaa
push
cmp
rcr
aad
sbb
test
mov
sub
and
ja
test
js
loopne
sysenter
jae
pop
push
mov
ss
stc
push
mov
jmp
nop
jne
mov
stos
das
repz
jge
jnp
xchg
sbb
add
pop
xor
out
pop
mov
sahf
test
ja
ins
xchg
jno
int
push
(bad)
adc
in
and
loope
das
adc
add
(bad)
sbb
outs
fnclex
fist
or
lds
fs
arpl
xor
inc
sub
pop
or
es
sub
mov
mov
(bad)
rcl
int
xor
pusha
dec
fnstcw
cmp
jle
iret
mov
push
loopne
fimul
enter
jb
and
cli
fiadd
add
mov
mov
(bad)
sbb
test
cmc
daa
rcr
or
pop
xor
xchg
push
(bad)
fiadd
lods
hlt
fwait
repnz
and
push
mov
movs
xchg
dec
rol
add
out
hlt
fwait
out
nop
aad
inc
cld
xor
push
movs
pop
dec
dec
test
fisttp
loope
ret
fidivr
add
mov
loopne
mov
jo
outs
adc
test
xchg
repnz
pop
mov
inc
mov
cmps
jp
nop
mov
xchg
or
inc
xchg
loop
loop
pop
loope
jno
pushf
pop
mov
lock
aas
inc
das
retf
out
fnstcw
call
fadd
arpl
xchg
add
scas
adc
or
mov
test
ret
push
aad
mov
out
fsubr
test
push
push
mov
repnz
in
adc
ret
jne
in
mov
add
scas
arpl
pusha
dec
pop
xchg
repz
jae
pop
xor
add
and
pop
retf
fist
xor
aas
in
pop
xor
jns
mov
mov
pop
push
inc
(bad)
retf
dec
add
push
cwde
in
cdq
cmp
and
vphsubbw
lock
scas
pop
xor
pop
ficomp
mov
mov
sub
cmp
push
ins
sbb
movs
mov
xor
movs
sbb
dec
imul
xor
pop
mov
xabort
jmp
fistp
ins
cli
loop
jl
inc
clc
imul
xchg
retf
mov
pop
push
mov
and
stc
cs
and
adc
pop
jbe
add
sbb
pop
push
push
push
ficomp
lsl
add
cmp
shr
cmps
mov
cmp
loopne
clc
nop
jecxz
and
(bad)
repz
xor
add
into
call
inc
jne
aaa
ins
sbb
xor
jg
(bad)
push
push
adc
in
xchg
out
cmps
fwait
ins
cmps
xchg
or
ss
xor
adc
sbb
mov
sbb
ins
adc
xlat
cli
std
(bad)
cmps
dec
gs
jmp
imul
sub
dec
call
data16
mov
dec
and
cmp
(bad)
mov
mov
test
add
fidiv
inc
arpl
jb
retf
mov
dec
imul
add
lahf
scas
pop
fcom
test
add
jae
xlat
and
or
sbb
sbb
add
adc
cmp
dec
mov
xchg
and
jg
pop
cmps
jnp
jecxz
rol
mov
movs
retf
jge
outs
sbb
dec
sub
ficom
pop
cmp
xchg
in
or
std
loopne
aam
mov
adc
jmp
dec
lods
or
cli
push
cmp
stos
mov
inc
xor
adc
repnz
es
aas
push
js
hlt
xor
int
pop
(bad)
into
inc
inc
xchg
mov
mov
ja
pop
repnz
dec
or
push
inc
xchg
jmp
xor
jae
xchg
idiv
dec
add
add
out
aaa
pop
ret
les
xor
loopne
jmp
inc
mov
and
es
adc
push
lock
cmc
push
rcl
mov
(bad)
cs
int
push
out
jl
movlps
dec
stos
(bad)
dec
ds
movs
and
aam
add
add
test
mov
cmp
pusha
inc
int3
pop
cmp
scas
inc
add
lods
test
jo
outs
test
mov
fist
jge
imul
(bad)
out
call
dec
mov
repz
icebp
xor
int3
pop
and
movs
out
xchg
or
fsub
push
sbb
es
imul
xchg
pop
xchg
fwait
mov
xor
xchg
xchg
aam
adc
out
xchg
push
fld
pushf
mov
test
into
jmp
shl
ss
cmp
dec
adc
lods
add
stc
iret
xchg
jg
and
retf
repnz
pop
mov
inc
lds
hlt
sbb
scas
push
ins
lods
cmp
cli
addr16
popf
pop
mov
pop
pop
mov
int
cmp
ds
cmc
jmp
sahf
pop
jno
je
rol
stos
in
inc
fs
xor
scas
out
ds
out
pop
inc
jb
cli
ret
cmp
je
imul
fild
fsub
fsubr
sub
add
into
mov
sahf
jle
ja
arpl
mov
jp
jp
xor
push
(bad)
dec
dec
mov
inc
out
popa
imul
retf
jno
fs
push
add
pushf
and
add
and
rol
mov
mov
dec
in
in
sbb
dec
gs
inc
ins
popf
stos
and
sar
imul
jbe
fnstcw
ja
push
(bad)
push
push
mov
or
xchg
int
mov
jl
push
adc
imul
pop
jge
sbb
in
dec
dec
push
aam
mov
lea
scas
cdq
stos
rcr
xchg
mov
test
mov
jp
sbb
lock
loopne
adc
xchg
in
xchg
cli
sub
jge
add
(bad)
ret
push
mov
data16
or
(bad)
div
lahf
jne
dec
push
mov
jmp
int
adc
int
ja
leave
popa
ss
cs
cmp
sub
ds
xlat
mov
lock
ins
pop
ss
or
call
fsub
in
mov
or
ret
cmp
push
ret
enter
aad
adc
inc
mov
addr16
xchg
push
movs
cmp
aad
nop
dec
mov
and
es
es
pop
pop
xchg
popf
(bad)
jl
adc
sbb
bound
adc
push
stos
ins
sar
into
mov
into
adc
loopne
jnp
inc
mov
jo
sbb
mov
lea
and
fidivr
or
repnz
movs
push
jb
add
or
nop
repz
jae
ror
and
addr16
mov
addr16
mov
arpl
sbb
(bad)
sub
sbb
jo
push
cmp
stc
retf
add
mov
jb
cmps
test
(bad)
jno
xor
mov
mov
out
in
push
rcl
test
sbb
sbb
mov
and
inc
or
out
xor
sbb
dec
or
lahf
lods
fwait
mov
add
add
mov
stos
mov
cmp
(bad)
cmp
inc
jmp
ins
jl
fild
mov
or
(bad)
ins
fstp
jae
cmp
bnd
mov
scas
xchg
rcl
repz
lods
fmul
outs
fldcw
jnp
fdiv
push
sub
xchg
movs
lahf
inc
adc
das
leave
add
mov
popf
cmc
stos
call
pushf
shl
mov
cld
and
pop
adc
xchg
or
push
add
jmp
mov
push
xchg
mov
jp
or
jmp
je
dec
in
bound
aas
fadd
in
add
outs
test
and
lds
adc
stos
add
fwait
mov
push
loope
aam
xor
add
or
xor
or
push
daa
in
push
iret
inc
mov
sbb
ins
mov
mov
mov
sbb
mov
movs
call
mov
pop
mov
ret
call
loope
add
je
and
push
call
fs
push
retf
pop
stos
push
fucomip
cmc
jl
stos
(bad)
nop
lock
stos
sbb
adc
push
pop
fstp
inc
mov
int
adc
fwait
aaa
pop
sub
xchg
aad
push
in
popf
cli
push
loope
xor
cmps
sub
mov
outs
or
cli
jg
dec
pop
push
cmp
push
mov
gs
push
imul
adc
sbb
repnz
cwde
shr
xchg
xor
js
das
loope
push
scas
mov
pusha
cmp
ds
mov
inc
imul
mov
mov
(bad)
adc
retf
and
mov
adc
cld
cmp
ret
dec
rol
int3
mov
adc
ins
daa
add
ret
jl
jmp
push
pop
and
push
or
xchg
pop
pop
jle
icebp
pop
xor
mov
stos
xor
ds
sbb
out
in
movs
in
mov
add
iret
cmp
adc
xchg
mov
outs
lods
push
push
lea
clc
pop
pop
mov
push
and
das
jle
shl
(bad)
push
fcomi
inc
mov
scas
adc
xlat
push
mov
xchg
cmp
in
mov
xchg
aam
test
mov
repnz
cdq
inc
cmp
dec
inc
pop
jae
xlat
shr
jno
dec
sub
ins
mov
ret
push
in
iret
out
inc
in
jbe
test
popa
shl
imul
std
pop
adc
push
push
(bad)
out
ret
dec
ds
or
rol
cmp
fld
lods
pop
sahf
retf
(bad)
jl
and
cmp
xchg
jp
sbb
cmp
add
sbb
int3
jg
lahf
cld
frstpm(287
dec
jo
push
push
mov
mov
and
push
mov
inc
add
daa
rol
sbb
adc
js
mov
xor
lods
fs
jno
or
sar
inc
dec
in
out
jb
pop
jp
jbe
jns
rcr
push
inc
stos
stos
test
jns
ins
jmp
aam
sub
lahf
sbb
mov
pop
add
inc
pop
int
retf
push
retf
push
add
out
sbb
cmp
adc
test
imul
pop
mov
iret
outs
stc
dec
and
addr16
jns
inc
loopne
sbb
ret
mov
or
cmp
ins
pop
scas
sbb
mov
loope
xchg
into
or
ficom
lock
pop
fdivr
xor
(bad)
sub
xchg
jp
lds
jnp
(bad)
inc
push
mov
lods
cmp
sbb
mov
pop
in
rcl
jecxz
dec
je
xchg
bound
mov
lods
gs
out
es
in
retf
adc
xchg
push
adc
dec
scas
cmp
aas
mov
pop
shr
mov
mov
movs
retf
cli
loop
stos
inc
js
dec
or
mov
fwait
lock
imul
mov
jmp
jl
xchg
ja
ret
dec
sub
adc
(bad)
lea
mov
das
inc
loope
jno
sub
mov
push
dec
lock
lock
sbb
sub
jmp
cmp
fimul
fs
xchg
test
sbb
xor
or
test
and
cli
add
lahf
cmp
and
add
es
aad
stos
adc
adc
cmp
xor
adc
scas
mov
jae
push
lock
movups
int3
test
bound
ss
pushf
xchg
daa
aad
inc
dec
das
and
rol
rcl
imul
setb
and
cmp
inc
mov
popf
push
fwait
mov
or
retf
loop
call
arpl
ja
inc
and
push
daa
nop
(bad)
out
mov
ret
ja
push
cmp
sbb
call
push
iret
je
mov
aas
sbb
cmp
pop
sub
iret
popf
movs
or
add
fisttp
pop
xlat
pop
dec
icebp
mov
shl
push
sub
jno
sub
xchg
shl
test
addr16
out
jp
fidiv
jae
inc
push
add
nop
cmps
movs
and
jp
repz
pop
dec
or
(bad)
xchg
cmp
sub
or
dec
int3
(bad)
fnstcw
fwait
mov
adc
out
les
test
xor
ret
les
je
movs
bswap
inc
jae
loopne
xor
xchg
mov
mov
xlat
gs
add
jne
pop
sbb
call
inc
dec
cmp
xor
ret
movs
test
mov
arpl
stos
pop
out
xor
lock
adc
and
dec
inc
add
ret
cmp
inc
sub
jmp
ds
xchg
stos
cmc
pop
movs
jmp
xor
ja
in
in
pop
xor
push
inc
push
stc
cvtpi2ps
push
out
and
cmp
sbb
out
jg
fwait
jb
inc
(bad)
out
daa
or
adc
fsubr
mov
mov
adc
jge
sar
sub
sub
jb
or
mov
push
and
adc
inc
inc
xlat
inc
xor
mov
add
sbb
xchg
lods
lahf
push
add
dec
pop
mov
dec
ss
retf
fcmovnb
movs
nop
cmp
(bad)
loop
stos
imul
cmp
or
push
jae
xor
enter
push
mov
loope
ret
pop
push
push
pop
push
cmc
add
inc
int3
dec
inc
sbb
add
mov
adc
push
sbb
leave
std
ins
or
out
push
lahf
cmps
xchg
xchg
cmps
pop
mov
pop
mov
or
dec
dec
clc
push
pop
cdq
fld
sbb
sub
pop
xor
sbb
cli
jmp
adc
xchg
imul
data16
outs
push
pushf
mov
xor
jle
pop
adc
xchg
add
stc
sub
pop
sub
push
shl
mov
and
gs
into
mov
xchg
push
xor
or
add
je
repz
dec
fcomp
push
sbb
xor
push
and
dec
add
xchg
sbb
stc
movs
(bad)
sti
movs
sbb
mov
fwait
out
mov
sub
jmp
push
cli
xchg
jge
es
push
mov
aam
jle
or
push
inc
or
shl
push
xor
stos
dec
shr
pusha
mov
pop
jo
sbb
pop
xchg
into
pop
dec
shr
mov
add
nop
mov
fwait
mov
fsubr
lds
test
(bad)
or
pop
xchg
fild
stos
ja
scas
and
mov
(bad)
psubusb
(bad)
dec
leave
imul
loop
pop
addr16
pushf
mov
sub
add
or
sbb
jo
jno
sbb
shl
cli
dec
inc
mov
push
adc
mov
push
pop
push
mov
imul
cmp
push
pop
or
jecxz
ins
cmps
push
out
pusha
xor
test
aaa
mov
adc
fnstcw
pop
sahf
pop
sub
jnp
cwde
jnp
push
pop
iret
pop
enter
dec
in
xchg
sub
lock
sbb
sbb
mov
int3
(bad)
dec
mov
pop
dec
outs
stos
mov
inc
ror
pop
dec
add
fcomp
pop
test
fwait
mov
adc
call
div
loopne
and
push
jmp
or
fdiv
inc
dec
adc
ss
sbb
sub
lods
(bad)
fs
aad
mov
cmp
ds
push
pop
mov
jmp
in
ins
outs
aam
adc
sbb
movs
out
icebp
lods
stc
cmp
xchg
(bad)
pop
mov
dec
stc
pushf
mov
jecxz
xchg
(bad)
std
cdq
les
sub
pop
cwde
lods
jg
xchg
jl
mov
sbb
jae
stos
add
add
mov
add
and
leave
fstp
inc
jp
(bad)
push
enter
sub
ret
fsub
mov
pusha
aad
ss
add
test
sub
jp
inc
inc
rcl
mov
add
xor
(bad)
hlt
mov
push
or
cmp
jo
test
and
dec
add
popf
mov
pop
push
mov
aas
(bad)
int3
push
adc
int3
add
pop
test
mov
mov
adc
jbe
jnp
das
add
fmul
sar
lock
jb
sub
xadd
pop
xchg
mov
(bad)
push
cmps
(bad)
scas
push
mov
jle
test
push
cmp
sbb
mov
inc
(bad)
and
rcr
jle
mov
movs
adc
aaa
jg
ud0
and
in
sub
cwde
imul
cmps
inc
dec
mov
in
jle
(bad)
out
(bad)
lods
clc
dec
xchg
in
xchg
je
push
ret
fsub
dec
arpl
inc
sti
call
mov
cmp
lahf
inc
cmp
in
push
stos
sub
loopne
movs
and
sbb
lea
aaa
std
push
cmp
neg
xchg
test
mov
mov
repz
push
aaa
sub
neg
aaa
xchg
and
mov
sub
xor
sbb
fld
hlt
sbb
jns
mov
pop
pop
mov
movs
mov
inc
xor
mov
pextrw
jne
jg
pop
sbb
ret
fxtract
ficomp
cmp
imul
mov
cmps
sar
imul
cmc
test
xchg
mov
xor
into
ins
jns
ins
pop
rcl
adc
mov
stos
cs
rcl
add
or
mov
sahf
das
(bad)
cdq
add
xchg
sub
ret
jl
sub
jno
mov
int3
mov
sbb
push
dec
push
mov
(bad)
fsubp
(bad)
inc
sub
fcom
or
jmp
inc
push
ret
loop
ins
adc
das
mov
jmp
xchg
test
lahf
sbb
and
inc
sbb
in
movs
repnz
test
xchg
push
repz
and
arpl
outs
pushf
dec
push
push
pop
jmp
dec
outs
jecxz
neg
push
cwde
or
mul
push
pop
imul
add
test
push
data16
or
xchg
inc
push
mov
mov
xor
inc
sub
outs
mov
sbb
jb
aas
aas
and
push
shl
popa
jle
mov
sti
pop
mov
(bad)
jo
dec
dec
mov
ins
sub
jp
test
xlat
cwde
out
ret
jmp
jmp
lock
(bad)
pushf
sub
push
inc
sub
sbb
or
in
mov
and
mov
scas
cld
push
nop
push
in
movs
jp
and
mov
cwde
ja
fwait
pusha
xor
xchg
mov
cmp
push
jg
mov
scas
repz
xchg
xor
ret
cmp
cmp
push
stos
(bad)
push
arpl
neg
popf
pop
xor
data16
push
outs
xor
outs
push
(bad)
mov
cs
leave
add
and
push
hlt
mov
and
adc
jbe
or
mov
mov
adc
push
imul
rcr
sub
mov
pop
dec
jg
sbb
jmp
(bad)
out
aaa
out
fisub
sbb
add
in
cmp
sbb
ins
das
addr16
pop
add
inc
js
out
test
add
ret
call
(bad)
jmp
imul
inc
movs
test
pop
mov
sbb
cli
test
jle
jecxz
(bad)
mov
fsubr
add
test
repz
dec
mov
(bad)
arpl
jle
nop
fisttp
adc
pushf
inc
cmp
call
pop
repz
mov
pop
xor
dec
dec
cwde
sub
js
sbb
jns
jecxz
jecxz
adc
jbe
pop
fbstp
add
push
pop
(bad)
call
push
cwde
mov
ret
push
push
(bad)
jns
and
sbb
jo
inc
jl
jmp
mov
inc
fcmovnbe
loopne
(bad)
jns
adc
fmul
pushf
push
in
nop
clc
mov
mov
add
mov
xchg
loopne
fcmove
fisub
std
adc
mov
mov
rcr
jb
test
mov
mov
sub
(bad)
movs
leave
mov
and
loopne
jne
jmp
or
adc
or
xor
adc
sbb
jmp
add
cmp
jns
loop
jbe
dec
adc
xchg
xchg
(bad)
int3
mov
outs
dec
cmp
lods
ret
mov
pop
or
push
gs
mov
or
sub
inc
push
mov
sbb
xchg
cmp
push
pop
add
pop
fdivr
xor
fbstp
fistp
pop
loope
retf
xor
xor
shl
push
push
loope
es
(bad)
adc
sti
and
test
jmp
ds
out
repnz
push
sub
add
pushf
imul
xchg
movs
cmp
je
push
mov
out
cmp
into
adc
inc
dec
lds
call
mov
push
scas
mov
rol
mov
retf
jg
scas
es
or
and
cmp
addr16
mov
mov
adc
icebp
jecxz
pop
(bad)
scas
dec
push
mov
or
inc
loopne
and
add
sub
jbe
sub
in
scas
scas
arpl
pop
imul
movs
jp
sub
adc
cmp
shr
jg
and
pop
adc
sti
adc
mov
dec
xor
out
cmp
int3
pop
(bad)
jle
push
sbb
imul
or
leave
mov
inc
mov
mov
dec
xor
mov
pop
out
pop
cld
movs
aad
or
addr16
push
sub
sti
adc
cmp
xchg
in
pop
shl
jo
and
ins
xor
popf
shr
pop
loop
or
add
in
jno
in
jb
aas
scas
and
lods
retf
sbb
(bad)
dec
shl
mov
popf
and
mov
sar
loopne
push
push
cmp
xchg
sar
and
in
xchg
out
aaa
xchg
xchg
arpl
fstp
xchg
add
dec
mov
inc
push
daa
adc
inc
add
inc
jmp
mov
push
shr
int3
push
inc
xor
push
mov
inc
xor
repz
pusha
and
jp
(bad)
fistp
call
in
pop
ret
fstp
pop
sub
mov
lods
adc
leave
xchg
add
sahf
fwait
lock
cmp
cmp
mov
enter
pop
clc
js
mov
popa
dec
sbb
sbb
lahf
mov
imul
or
rcr
fnstsw
fidiv
xchg
jecxz
(bad)
out
xchg
adc
inc
and
out
les
or
cmp
pop
les
movs
push
pushf
add
mov
cmp
shl
popa
or
mov
xchg
imul
push
out
ret
add
mov
(bad)
mov
arpl
pusha
fild
sbb
sub
lds
repz
jne
test
mov
rcr
mov
rcr
fimul
cs
sub
pop
sahf
and
and
jecxz
dec
popa
and
sub
or
mov
stos
outs
(bad)
pop
mov
test
push
mov
ins
jne
add
pop
sub
enter
test
fs
dec
sbb
dec
cvtps2pi
cmp
fistp
ds
movs
bound
(bad)
js
mov
mov
aas
xor
adc
repz
jne
push
xchg
xchg
into
mul
mov
scas
push
mov
push
fcomp
sub
jno
dec
xor
imul
icebp
pop
shl
pusha
dec
aas
in
ja
les
imul
sub
retf
jmp
add
and
div
push
(bad)
faddp
inc
jle
fist
cmp
cmc
jl
mov
sub
xchg
(bad)
mov
cmps
sbb
mov
mov
test
push
dec
mov
repz
(bad)
xchg
hlt
addr16
ins
ins
mov
aas
out
jmp
push
sub
(bad)
jge
stos
sti
pop
imul
lods
dec
add
and
dec
adc
fcomp
cmp
inc
sbb
add
sar
mov
test
cmp
xchg
jge
mov
(bad)
std
pmaxsw
shl
sbb
jl
movs
sub
enter
rcr
in
mov
das
mov
adc
xor
mov
sbb
in
and
fnstenv
fistp
enter
xor
xor
sub
pop
dec
add
and
sbb
sub
jmp
stc
jp
dec
ja
dec
sub
xlat
fnop
cmp
pop
xchg
rcl
in
jne
adc
jg
sbb
xchg
xor
jb
nop
pop
stc
hlt
mov
int3
cs
or
les
retf
adc
mov
adc
cli
test
es
jmp
mov
mov
movs
and
push
cdq
bound
mov
xchg
or
cmp
(bad)
in
push
fs
sbb
cwde
push
pop
pop
jne
fcmovnbe
pop
adc
imul
popf
fld
popf
dec
pushf
mov
dec
add
outs
add
imul
sub
dec
mov
repz
cli
cdq
mov
sar
outs
mov
hlt
lea
sub
adc
out
push
add
fisttp
ss
cmp
out
movs
cmp
xor
jmp
and
movs
push
xor
xchg
scas
mov
dec
lock
sub
mov
jp
mov
pop
loope
inc
leave
adc
add
and
mov
shl
adc
xchg
cmp
enter
push
and
add
jp
jae
loopne
inc
add
call
out
lahf
jmp
ret
xchg
jge
dec
fcomp
mov
adc
fist
sbb
cmp
mov
enter
sar
pop
in
cmp
aad
idiv
inc
push
cs
mov
rol
jbe
jb
cmp
cmp
mov
rcr
cld
fst
pop
sub
jne
pop
cmp
(bad)
xchg
addr16
vmread
mov
and
test
push
sahf
(bad)
and
or
shl
dec
fisubr
mov
and
mov
pusha
aam
or
lods
push
cli
pop
fistp
mov
call
or
out
or
(bad)
in
jbe
and
cdq
and
js
push
aam
bound
out
mov
lods
sahf
add
addr16
adc
dec
xchg
ins
jb
push
fcomp
jle
jg
sub
movs
xor
shl
pop
imul
xor
mov
xchg
pushf
out
out
lds
dec
xor
push
cwde
pusha
inc
das
rol
loopne
pop
sbb
push
xchg
sub
mov
xchg
rol
cs
icebp
and
sti
fbstp
jmp
xchg
aam
int3
push
sti
add
or
shl
jp
iret
mov
add
mov
ins
icebp
loopne
jb
sbb
pop
jb
xchg
jo
popf
in
cmp
dec
ficomp
rcr
(bad)
cmp
xchg
dec
mov
stos
sub
mov
xor
mov
fcomp
test
pop
xor
(bad)
adc
imul
mov
out
xor
dec
out
leave
popa
jnp
pop
sar
dec
jmp
out
unpckhps
leave
or
xchg
cli
test
call
sbb
(bad)
cmps
hlt
sahf
add
mov
inc
push
leave
mov
enter
call
pop
mov
mov
add
mov
call
jp
xor
rcr
push
das
xchg
out
stos
dec
jnp
aam
sub
outs
mov
pop
jno
and
adc
dec
dec
mov
or
mov
pop
repnz
and
ficom
lods
or
fnsave
rcr
sub
sub
pop
dec
jne
jp
gs
sub
sbb
xchg
or
fcomp
std
test
imul
jl
dec
and
jne
dec
mov
ret
pop
mov
fst
enter
ins
retf
ret
cmps
ins
int3
push
test
push
pop
dec
dec
push
out
shl
mov
jno
cmp
daa
int3
xor
lods
bound
rol
cmp
mov
aad
pushf
push
mov
pop
xlat
les
dec
jnp
xchg
scas
fldenv
or
adc
ror
repnz
mov
out
imul
rol
enter
fstp
mov
aam
scas
mov
mul
nop
add
int3
fistp
ins
shl
pop
push
aad
gs
push
adc
sub
ret
fidiv
nop
or
(bad)
loopne
(bad)
into
sub
mov
lea
retf
add
data16
ins
fwait
cmp
or
jg
aaa
call
or
cwde
xor
inc
push
cdq
in
rcr
repnz
sbb
cmps
icebp
test
push
cmp
cmp
adc
mov
enter
fsubr
stc
lods
push
xor
or
cs
sahf
xchg
cli
add
mov
repz
ds
pop
xor
pop
popf
dec
add
aam
mov
test
repnz
push
mov
popa
mov
jae
dec
jge
jo
cld
xor
or
or
push
loopne
jb
jne
les
daa
rcl
clc
inc
and
fsubr
je
dec
add
cwde
in
sbb
mov
cdq
cs
imul
mov
dec
daa
jno
fidivr
bound
(bad)
(bad)
mov
stc
cli
adc
mov
adc
adc
xor
sub
jno
xor
sub
pop
push
xor
pop
movups
xor
adc
dec
loopne
icebp
mov
mov
scas
cs
in
mov
test
inc
call
stos
fbld
mov
je
test
mov
push
into
inc
aaa
loope
fsubr
xor
cmp
ja
in
test
movs
imul
es
pop
or
jno
sti
jg
mov
jmp
pop
cmp
xchg
xor
cmps
mul
sbb
lods
jmp
jo
leave
jne
adc
push
dec
mov
daa
push
inc
push
xchg
sub
mov
jge
or
pop
fadd
dec
adc
push
xchg
sub
push
cmc
cli
ins
retf
(bad)
fstp
fsubrp
xlat
into
in
push
mov
lahf
mov
sub
push
jnp
in
xor
sub
imul
cmc
push
dec
(bad)
icebp
mov
pusha
aad
jnp
retf
fs
push
xchg
mov
add
mov
ror
jno
mov
mov
inc
test
inc
mov
cs
enter
mov
aam
push
add
loop
cdq
scas
lds
into
mov
sbb
int
mov
fmul
pop
mov
add
jbe
sbb
idiv
xor
sbb
lods
shl
test
mul
movs
fucom
aaa
shl
(bad)
ins
ret
xlat
stos
pop
loop
fild
fbstp
inc
(bad)
mov
ins
sub
or
mov
sbb
jecxz
test
ror
jb
add
dec
in
adc
dec
loop
stos
jge
sahf
inc
imul
sar
mov
popa
(bad)
repnz
ins
sahf
out
sbb
add
cmp
pop
clc
das
dec
jae
pop
out
or
cs
(bad)
mov
int3
xchg
fsubp
sahf
jns
sub
ins
xlat
or
push
pop
aas
sbb
jno
stos
push
and
mov
inc
cmp
xchg
jmp
mov
xchg
pushf
mov
or
adc
mov
xchg
lahf
add
mov
and
add
(bad)
mov
dec
out
stc
sub
(bad)
sahf
mov
out
jmp
loop
jne
mov
out
adc
push
adc
jmp
pop
lea
mov
cmc
push
(bad)
sbb
cmps
iret
inc
inc
mov
mov
ret
imul
ins
out
(bad)
lds
das
loope
out
shl
add
out
fs
mov
push
pusha
and
in
imul
mov
repnz
lea
push
mov
jg
aam
and
repnz
lods
cli
nop
out
sub
fs
xor
pop
jbe
xchg
ror
ins
je
lods
push
lods
xor
cmps
outs
mov
call
mov
mov
icebp
mov
les
pop
sub
pop
stos
mov
movs
outs
jl
retf
cmp
xchg
adc
fdiv
cmp
call
jb
loope
sbb
(bad)
inc
adc
enter
adc
xor
adc
out
leave
push
inc
clc
xor
xchg
pop
xlat
adc
push
sub
test
call
push
fld
jo
not
sub
rcr
gs
mov
inc
mov
and
icebp
dec
add
mov
enter
ret
jne
outs
xchg
fld
popf
shl
add
hlt
shl
sub
dec
fnstsw
fwait
and
mov
sub
int3
ss
test
out
clc
cmp
push
pop
xchg
push
pop
sbb
push
sbb
pop
lods
fiadd
jae
out
inc
lds
movzx
push
jns
inc
repz
(bad)
(bad)
xor
(bad)
fisubr
or
ret
in
sub
sbb
cmp
mov
xchg
cdq
ins
mov
cmps
data16
rcl
sbb
mov
dec
and
shl
in
and
ja
inc
repnz
push
fdivrp
push
jp
push
cmps
cmps
add
call
sub
add
sti
or
fiadd
(bad)
pop
jnp
and
xchg
inc
fwait
ins
sub
xchg
xchg
and
into
sbb
push
add
lock
(bad)
out
ret
(bad)
rol
outs
and
dec
bound
mov
mov
jl
sbb
sub
popa
gs
xor
pop
jbe
outs
push
ret
popf
pop
adc
jns
fs
sar
stc
cmp
lods
push
xchg
push
in
int3
mov
pop
inc
aas
shl
xor
sbb
inc
cmp
sbb
adc
xlat
push
xlat
clc
xchg
mov
sti
sbb
sub
pusha
pop
sub
leave
or
fadd
aaa
jmp
int
fwait
add
xor
sar
jecxz
daa
jmp
xor
pop
push
ja
jae
add
in
les
inc
mov
mov
mov
(bad)
ret
mov
cwde
fs
icebp
dec
stos
mov
add
inc
sahf
(bad)
sub
ja
popa
inc
sti
int3
xchg
jnp
xor
dec
sbb
add
jno
push
jg
pop
aad
jl
aam
int
jl
xor
arpl
mov
(bad)
adc
aad
hlt
dec
lds
int
cmp
cmp
jb
bound
pop
repnz
or
arpl
inc
adc
fisub
loop
in
jbe
sbb
push
pop
add
cld
cmp
mov
push
xchg
jo
add
mov
mov
shl
jno
fcos
cmp
dec
cld
jnp
shl
enter
xchg
les
fld
jno
(bad)
icebp
push
lahf
mov
mov
jmp
in
mov
sahf
cli
ins
fdivr
arpl
leave
add
repz
idiv
mov
dec
sahf
pop
dec
ror
xchg
cmp
adc
cmp
or
loop
movs
ret
leave
add
leave
pop
addr16
stos
stos
push
xchg
popf
add
xor
jg
mov
into
stos
pop
mov
jmp
jo
xchg
outs
data16
pop
push
daa
scas
sar
call
and
push
outs
sbb
sub
adc
jl
lea
cmps
dec
xor
mov
jb
pop
cli
je
movs
jle
xor
mov
js
xchg
test
(bad)
pop
inc
jne
stos
push
mov
call
mov
cmp
clc
scas
dec
dec
mov
or
mov
xchg
dec
js
pop
lods
cmp
or
test
retf
in
loopne
jnp
mov
sub
cdq
loopne
fxch
gs
clc
dec
jl
adc
into
es
out
mov
pop
inc
pop
xchg
ds
xor
ds
popa
xchg
movs
ficom
popf
jmp
rcl
add
inc
mov
movs
lods
pop
mov
je
dec
test
xlat
xchg
sub
les
call
dec
pop
jmp
sar
push
inc
jg
fadd
sbb
push
pop
or
push
jge
dec
sub
push
add
dec
pop
les
bound
stos
(bad)
jp
(bad)
retf
nop
mov
mov
mov
push
out
lock
fidiv
push
hlt
xchg
jg
cmp
into
movs
add
mov
or
pop
clc
retf
inc
mov
test
fistp
adc
mov
pusha
sub
push
test
push
ficom
retf
rcl
div
enter
mov
lock
int3
dec
push
stc
mov
xchg
in
dec
inc
aam
jl
sub
sbb
aas
ss
fs
jmp
call
lahf
and
scas
dec
aas
sub
xlat
sub
push
inc
pop
pop
(bad)
sbb
out
sbb
fild
repnz
sbb
lods
hlt
mov
add
cmp
daa
iret
and
idiv
ret
mov
(bad)
stos
repz
xor
sbb
xor
and
aad
mov
cmp
out
jnp
push
cwde
mov
push
mov
int3
pop
cmp
cmps
retf
push
sahf
cwde
sbb
sub
cdq
push
push
pushf
ins
mov
pop
mov
outs
sub
int
loop
adc
imul
sub
sahf
cmp
shl
das
mov
lahf
shl
mov
retf
mov
mov
mov
adc
jl
out
fbld
out
std
rcr
xchg
jne
aad
fst
or
test
push
imul
les
cmps
sti
gs
jmp
push
sbb
test
mov
daa
mov
dec
add
(bad)
(bad)
outs
icebp
jne
test
ins
int
into
hlt
outs
mov
call
sub
mov
and
xor
cli
adc
fnstenv
aad
xor
test
xchg
xchg
idiv
call
mov
bound
or
jmp
loope
aas
test
mov
(bad)
(bad)
cmp
bound
rcl
(bad)
xchg
add
es
out
outs
ret
mov
pop
jb
shl
sahf
xor
mov
cld
mov
mov
inc
sub
cwde
js
adc
pop
pop
or
dec
mov
xchg
jle
mov
(bad)
fsubr
dec
push
into
sub
or
out
scas
xchg
mov
frstor
cmp
lahf
popa
cmp
dec
cs
jg
mov
popw
jl
sub
xchg
mov
popa
add
repnz
in
aas
mov
imul
mov
les
pop
mov
mov
fwait
mov
xchg
js
jp
sub
sbb
jo
in
add
ret
xchg
push
cmps
popf
mov
fnstenv
dec
adc
jbe
adc
add
mov
jmp
data16
je
out
dec
fwait
cs
jmp
ds
push
das
cld
sub
test
mov
sti
sub
imul
test
jmp
inc
mov
mov
ror
or
loopne
clc
in
(bad)
ss
add
adc
adc
cli
mov
ret
add
cmp
sbb
mov
shr
push
sub
int
into
leave
xchg
sbb
mov
js
out
lahf
mov
xor
hlt
pop
daa
cmp
pop
hlt
adc
das
mov
mov
pop
sbb
push
xor
dec
sbb
push
fcom
cdq
and
cmps
adc
in
push
push
xchg
xchg
call
lds
xor
out
(bad)
pushf
repnz
jnp
adc
pusha
fbstp
aaa
jbe
xchg
cmp
adc
push
(bad)
es
into
popa
lahf
out
test
mov
jp
ror
cmp
aaa
stos
push
sar
adc
xchg
jae
scas
pop
and
mov
scas
pop
ins
retf
lea
dec
push
fistp
xor
mov
(bad)
fsub
add
xor
and
adc
inc
jne
jbe
loope
mov
fisubr
sub
lds
mov
cmp
jmp
jmp
movs
aaa
jno
mov
lock
bound
outs
pop
pop
mov
fdivr
mov
mov
inc
lds
mov
mov
ficomp
pop
movs
xchg
xor
test
gs
fisubr
sub
stc
pushf
or
mov
rol
mov
add
cmp
(bad)
mul
ins
js
mov
imul
and
dec
(bad)
sar
out
adc
std
cmp
jge
shl
jnp
icebp
ds
push
fsub
adc
cmps
mov
cmp
scas
inc
fld
mov
inc
dec
add
fst
push
mov
add
fwait
cmp
xchg
(bad)
fbld
mov
xor
sbb
xor
xor
imul
out
adc
xchg
fbld
and
rcl
sbb
lock
cmp
jmp
rol
outs
stos
dec
mul
mov
mov
xor
ficomp
mov
and
popf
and
test
lods
(bad)
dec
das
ror
(bad)
jae
cld
xor
fs
or
pop
cdq
outs
paddsw
push
daa
ss
dec
push
mov
and
sub
jne
adc
movs
push
addr16
sub
movs
mov
sbb
mov
sub
add
xor
je
test
out
mov
jo
adc
pusha
pushf
jb
xchg
into
mov
pop
(bad)
std
or
fst
shl
ins
lock
cmps
dec
loop
mov
lock
daa
adc
inc
jns
sub
in
ror
sbb
cld
cmp
push
mov
icebp
mov
cli
jecxz
cmp
add
pop
mov
lods
xor
popf
cwde
push
pop
mov
jg
mov
ins
int
in
sub
rcr
outs
test
push
out
pop
js
add
aaa
adc
jmp
inc
xlat
mov
(bad)
adc
cdq
sbb
pop
mov
(bad)
les
aas
jns
jg
push
add
jns
cld
fdiv
outs
pusha
adc
(bad)
test
imul
out
pop
movs
sbb
pusha
push
add
fmul
mov
jb
fnstenv
and
repz
lds
and
cmp
add
dec
loope
and
mov
cli
mov
adc
sbb
inc
shl
adc
(bad)
adc
fst
push
adc
lods
xchg
dec
mov
cmp
sbb
or
cs
pop
(bad)
jg
popf
cmp
dec
dec
xor
test
retf
out
push
adc
and
(bad)
xor
ret
in
fsubr
mov
scas
and
add
out
out
div
cmp
push
repz
push
ds
out
lea
clc
arpl
int3
add
mov
repnz
ds
icebp
add
cmps
fdiv
push
int3
dec
js
sbb
adc
push
push
inc
rcl
sub
pop
add
fidivr
cmp
in
pop
pusha
or
fcmove
mov
push
outs
call
xor
cmps
sbb
add
ja
dec
int
in
pop
nop
add
or
arpl
dec
fst
dec
das
outs
ins
pushfw
mov
inc
push
lea
lods
leave
jge
mov
(bad)
cmc
mov
adc
enter
lock
jae
dec
and
push
pushf
cmp
in
inc
mov
adc
stc
pop
fmulp
cmp
leave
(bad)
mov
mov
sub
or
retf
enter
xlat
stc
jl
adc
sub
xchg
jae
mov
cs
je
addr16
gs
and
lock
dec
out
xchg
mov
xchg
sub
xchg
pushf
jmp
addr16
sub
and
dec
pushf
adc
cmp
stos
pop
in
inc
mov
sub
xchg
lods
sbb
scas
jne
adc
mov
sar
in
sbb
loope
(bad)
push
jmp
cmp
push
or
lods
mov
js
jno
cmp
dec
rcl
jnp
adc
mov
adc
xlat
test
pop
push
fld
int3
mov
stos
or
movhps
inc
ds
adc
mov
(bad)
adc
sbb
pop
(bad)
cmp
mov
cld
mov
leave
inc
dec
imul
cmc
vmovd
out
fdivr
jg
add
jae
mov
adc
hlt
daa
(bad)
inc
(bad)
aas
movs
mov
icebp
jmp
ins
adc
out
fnsave
iret
(bad)
add
adc
dec
cmp
shr
jecxz
cs
bound
mov
jle
gs
repz
fs
xor
and
out
mov
sub
xor
daa
sub
out
and
xchg
sbb
retf
pop
mov
out
sub
sbb
les
mov
bound
jnp
jmp
dec
sti
dec
popa
into
add
dec
jmp
leave
mov
scas
loopne
jo
mov
in
ss
pop
jb
mov
add
loope
jmp
inc
inc
push
ret
mov
out
ins
in
std
in
mov
jecxz
enter
neg
jmp
or
(bad)
xchg
icebp
cdq
and
je
cmp
ja
stc
cmp
add
sar
xor
mov
mov
jb
mov
pusha
fs
nop
mov
pop
(bad)
retf
scas
shl
(bad)
jmp
movs
aas
outs
loopne
add
jmp
inc
imul
loopne
lods
push
enter
shl
adc
xor
and
enter
hlt
jmp
adc
xor
cwde
inc
add
pop
lods
(bad)
in
pop
fwait
ds
mov
je
into
mov
adc
jecxz
or
dec
(bad)
aam
repz
fidivr
xchg
jmp
mov
push
clc
xor
xor
fistp
call
imul
sbb
cmp
dec
mov
mov
test
push
pop
or
lods
xor
cmps
inc
sbb
mov
scas
(bad)
in
stc
ja
add
sbb
xor
cmp
mov
and
jmp
xchg
shl
xchg
jnp
retf
pop
push
inc
lock
cmp
call
(bad)
add
jnp
cmp
je
mov
movs
mov
mov
inc
xchg
das
outs
pop
mov
or
jo
ret
test
fcmovnu
int3
mov
repz
jp
and
fstp
cmp
ds
inc
xchg
bound
sti
clc
mov
out
call
sbb
clc
push
xlat
mov
xchg
call
mov
push
push
lds
rcl
sbb
call
jae
and
lock
push
lock
fisubr
ins
push
xlat
pushf
adc
int
jo
jmp
xchg
mov
out
sub
inc
xchg
arpl
es
(bad)
sbb
clc
jo
sub
xchg
xor
shr
out
repnz
popf
xchg
push
push
popa
fmul
cmp
fld
push
push
mov
test
push
mov
push
scas
dec
aas
retf
loop
iret
fwait
push
fmul
dec
aad
sbb
add
xchg
mov
pop
xchg
sub
inc
aad
or
(bad)
push
add
jmp
mov
ror
es
and
(bad)
cs
xor
mov
inc
mov
mov
bound
mov
adc
and
js
lods
bound
not
lods
aad
retf
dec
push
fs
xchg
push
and
test
(bad)
sub
bound
add
popf
stc
xchg
jmp
push
or
fsub
xor
mov
xchg
pop
imul
inc
ror
pop
push
(bad)
inc
loopne
repz
imul
pushf
adc
sbb
lock
xor
inc
and
out
shr
jecxz
test
movs
mov
ror
outs
push
fs
xchg
pop
fistp
bound
enter
idiv
int
movs
hlt
(bad)
mul
mov
add
add
sub
hlt
push
out
xor
dec
and
div
into
mov
cs
(bad)
jno
dec
sar
pusha
xchg
aaa
inc
call
jae
xchg
in
add
std
jecxz
inc
xor
or
jae
test
jmp
add
sbb
mul
int
jmp
hlt
adc
sar
mov
test
js
jmp
(bad)
pop
lds
outs
cmc
push
cmp
pop
rcl
pop
mov
mov
add
or
or
pop
mov
inc
stos
fisub
lods
aaa
lds
popf
scas
dec
xchg
movs
in
int3
test
jne
rol
sub
sahf
mov
sub
pop
fstp
mov
mul
retf
(bad)
and
inc
and
lock
jmp
shr
and
sbb
sub
push
mov
xor
xchg
inc
stos
xchg
enter
cmp
call
fsub
pop
jne
mov
shr
ja
sbb
cmp
add
and
out
cmp
push
push
mov
stos
mov
gs
mov
popa
(bad)
fsubrp
jae
and
ds
inc
xor
dec
push
and
push
out
xor
ret
and
rcl
or
mov
out
pop
ret
push
jb
scas
push
pop
cmp
ret
xchg
adc
out
mov
pusha
xchg
mov
retf
arpl
mov
aaa
xlat
fbstp
jb
imul
ins
pushf
ficomp
mov
jp
movs
fsub
push
pop
mov
inc
lods
fsubr
cmp
shl
xor
mov
and
aaa
and
xor
rcl
in
push
dec
popa
adc
(bad)
xchg
xchg
push
lods
scas
cmp
in
jnp
lods
stc
ja
xor
(bad)
jmp
adc
sub
mov
les
lods
fadd
outs
call
push
adc
and
mov
push
fdivr
sar
pop
push
loopne
ret
jmp
je
xor
pushf
push
repz
pop
popf
loop
xchg
mov
mov
in
jmp
cmp
pop
pop
cmp
mov
inc
push
fld
fs
or
jg
xchg
rol
pop
adc
fwait
loopne
lock
iret
push
adc
pop
jae
inc
test
lods
mov
loope
in
imul
jge
clc
sbb
mov
pushf
(bad)
ins
ins
leave
mov
sti
mov
xchg
js
mov
sbb
inc
sub
mov
dec
mov
out
scas
fst
add
js
inc
jmp
test
ins
sbb
adc
jo
jp
rol
call
push
ins
mov
xchg
rep
fist
and
add
movzx
pop
scas
pusha
jl
aad
outs
adc
scas
or
mov
xchg
jmp
push
cmp
sbb
mov
xchg
stos
(bad)
dec
xchg
(bad)
pop
inc
push
pop
mov
cmp
jmp
cdq
dec
outs
in
das
test
jnp
mov
mov
pop
das
push
mov
jmp
sub
ins
mov
xchg
pop
inc
popa
les
push
fisttp
mov
push
sbb
call
popa
push
push
mov
lds
push
inc
xlat
lahf
js
cmps
(bad)
push
and
cmp
cdq
cmp
or
mov
das
adc
sub
(bad)
push
scas
call
movs
sub
inc
in
sub
(bad)
enter
rcl
popf
jl
add
jmp
mov
or
and
mov
std
outs
popa
pusha
movs
gs
jae
dec
sub
fcomp
sbb
xor
sub
dec
div
cmc
loop
retf
pop
movs
jmp
mov
call
xor
push
test
xchg
mov
dec
into
cwde
push
test
add
mov
pop
jae
add
pushf
mov
inc
js
cdq
push
loop
call
adc
mov
sub
mov
test
pop
xor
sbb
in
fisub
dec
vorpd
mov
in
or
xchg
lods
add
push
add
mov
int3
add
clc
fiadd
idiv
cmps
lods
sub
repz
call
push
outs
inc
mov
pushf
sub
push
sub
xchg
sti
into
daa
or
mov
xchg
cdq
dec
aas
push
push
mov
pop
jno
xchg
jo
inc
cs
cwde
add
sar
xchg
mov
shl
cmp
mov
call
in
das
out
in
mov
push
add
jno
repz
ss
dec
aas
xor
mov
add
rcl
inc
std
inc
jl
idiv
les
ror
mov
mov
add
mov
shl
pop
jp
stos
lahf
mov
ja
inc
xchg
ins
stos
loope
adc
popa
mov
or
xchg
mov
fs
push
sbb
imul
pop
and
bound
xchg
push
sub
dec
scas
in
pop
jmp
in
(bad)
push
sub
fwait
les
and
in
cmp
jp
push
(bad)
neg
push
mov
out
call
adc
mov
adc
inc
jnp
push
xchg
push
adc
adc
push
aaa
sahf
cmp
dec
adc
nop
inc
js
sti
sub
fdivr
or
add
inc
stos
arpl
(bad)
out
jmp
dec
fsubp
mov
mov
cld
aam
div
ins
xor
jne
out
popa
pop
push
jmp
(bad)
push
repnz
adc
and
clc
(bad)
clc
call
rcr
scas
retf
dec
or
dec
inc
jle
push
and
or
mov
scas
sbb
pop
cs
xor
in
mov
(bad)
idiv
ins
pop
and
or
xchg
mov
dec
dec
aam
ja
jns
fdivr
out
into
inc
int3
jg
lea
scas
push
inc
mov
pop
mov
pusha
or
inc
je
push
cs
mov
mov
fstp
xor
or
cld
pushf
clc
mov
cmp
bound
in
in
sub
dec
ficomp
inc
fmul
dec
inc
and
and
mov
pop
or
shr
and
popa
out
jmp
cwde
push
jp
jne
out
setb
fwait
stc
add
outs
bound
(bad)
lea
retf
test
ss
int3
inc
in
sub
scas
imul
cli
loope
popf
in
mov
push
mov
lock
popa
adc
lods
mov
mov
jo
ja
push
sub
jp
call
fistp
adc
cli
int3
adc
stos
rcl
push
add
mov
inc
test
push
test
das
dec
ss
sbb
stos
cmps
mov
cmp
sub
add
dec
mov
and
fst
add
mov
inc
fiadd
cmp
xchg
lahf
aas
pusha
hlt
or
jp
call
jmp
daa
lods
or
pop
jae
inc
jmp
push
xor
lods
(bad)
loope
xchg
dec
xchg
jecxz
or
jno
(bad)
xor
mov
jmp
pusha
call
fnstenv
adc
sbb
dec
or
xchg
pop
mov
call
enter
cmp
add
lods
inc
xchg
loope
lock
jg
icebp
and
dec
hlt
lock
cmp
xchg
popf
mov
add
ror
repnz
xchg
sbb
scas
push
rcl
dec
inc
scas
mov
dec
cdq
sub
pop
cld
pop
xchg
mov
xchg
mov
push
cmp
fnstsw
aad
sbb
mov
aam
push
pcmpeqw
mov
popf
push
mov
mov
je
aaa
add
mov
and
mov
dec
(bad)
idiv
mov
cld
mov
adc
mov
or
mov
cli
aam
pop
les
sbb
repz
les
xor
jmp
in
aad
ret
cmps
jb
or
jb
jecxz
xchg
push
push
fcmovb
mov
xchg
adc
and
stc
cmp
mov
les
fild
loope
fst
mov
mov
mov
mov
sbb
jb
stc
mov
and
test
mov
jnp
jmp
inc
movs
and
scas
ret
lods
add
cmp
out
adc
pop
and
add
mov
retf
lahf
lock
inc
(bad)
fcomp
xchg
out
test
mov
je
fadd
fnstsw
sti
shr
or
add
call
dec
(bad)
sub
enter
loopne
bound
or
daa
mov
sub
in
add
xlat
out
enter
jae
retf
xchg
std
lahf
lods
retf
and
leave
(bad)
push
xchg
std
add
inc
mov
fsubr
adc
call
cmp
jp
push
in
jnp
test
mov
pop
pop
push
dec
iret
mov
hlt
sbb
sbb
mov
pop
push
mov
cmp
pop
adc
in
jno
fs
inc
push
pop
mov
ins
adc
jp
sub
xor
clc
jno
mov
pop
add
cli
or
and
inc
xchg
sbb
add
pusha
cmc
stc
jge
dec
div
repnz
mov
ins
pop
in
mov
test
and
xor
mov
js
mov
mov
lods
push
cld
inc
cld
das
fnstenv
(bad)
loopne
data16
mov
ds
movsx
sub
fidivr
add
jo
mov
dec
div
lods
hlt
mov
into
(bad)
xor
sub
fadd
scas
mov
dec
je
xor
test
bound
and
add
adc
jb
pop
out
mov
retf
add
leave
cmp
mov
mov
sbb
(bad)
mov
xchg
aas
cmc
in
push
cmc
pop
jle
jne
out
and
mov
add
dec
in
movaps
ins
add
jecxz
sub
lock
add
dec
inc
jb
or
fiadd
mov
push
stos
shl
mov
gs
into
icebp
dec
aad
loop
mov
dec
adc
sbb
and
(bad)
int3
cmp
popf
stos
xor
xor
fstp
adc
push
mov
mov
jne
test
push
(bad)
sub
xor
shr
shr
aas
cmp
cs
out
xchg
pop
mov
call
push
or
es
and
xchg
xlat
cmps
sub
push
aas
(bad)
ret
jmp
push
and
jb
sub
test
xchg
clc
jle
mov
sbb
ffree
dec
imul
xchg
cmp
cmp
xchg
imul
in
(bad)
fdivr
cmps
or
aam
and
je
push
in
mov
push
rcl
out
xor
inc
inc
repz
xor
ud1
movs
xlat
add
sbb
pop
pop
xlat
push
dec
add
daa
jb
sub
sbb
mov
in
cdq
les
jmp
dec
and
(bad)
mov
add
mov
sub
shl
push
inc
pop
push
mov
xlat
dec
pop
jmp
pop
mov
mov
stos
inc
js
stos
dec
pop
mov
mov
ss
xchg
mov
push
jp
sub
and
ins
pop
and
sbb
push
mov
push
js
std
jg
cmc
push
out
es
sbb
outs
jp
je
cld
das
adc
test
fldenv
fsubr
mov
pop
push
jge
mov
arpl
retf
adc
pop
cmp
cmp
adc
js
test
jl
test
ins
or
push
pop
cmp
push
das
mov
jae
dec
push
dec
sbb
pop
shl
nop
mov
xlat
stos
mov
and
dec
jnp
movs
shr
inc
cmc
jg
in
aas
movs
loopne
fwait
mov
add
out
lods
push
(bad)
pushf
mov
xor
ss
test
gs
cmc
scas
rcr
add
adc
aaa
jbe
loopne
mov
arpl
imul
mov
stos
jno
or
cli
fidivr
icebp
rol
xor
dec
fwait
mov
jmp
cli
(bad)
jae
int3
mov
stc
mov
test
test
pop
cmc
fidivr
or
mov
lods
mov
mov
push
xchg
mov
jge
les
adc
push
push
loope
jmp
pop
mov
push
dec
call
jecxz
lods
mov
jmp
(bad)
in
das
loop
cmps
cs
inc
mov
sahf
test
jge
clc
xlat
inc
xchg
push
sub
int3
cdq
and
xchg
es
pop
sti
pop
adc
mov
pop
jecxz
pop
pop
jbe
xchg
aaa
out
sbb
cmp
mov
clc
cdq
lock
mov
call
ret
push
lea
pop
fnstenv
(bad)
scas
add
dec
sbb
mov
out
mov
enter
cmp
mov
sub
out
nop
jo
in
mov
outs
or
mov
aam
lahf
pop
inc
jl
pop
(bad)
pop
and
call
lock
in
mov
ja
scas
push
mov
shl
outs
sbb
test
mov
(bad)
mov
xlat
aaa
hlt
add
lods
pop
ret
(bad)
fdivr
jg
adc
pop
dec
add
cmp
jl
cmps
je
test
test
lea
retf
dec
ja
pop
mov
fdiv
enter
in
xor
int3
add
sbb
sbb
std
and
mov
push
ss
mov
pusha
mov
hlt
pop
sbb
xor
push
jl
neg
popa
pop
retf
jnp
fneni(8087
xor
dec
popa
push
and
les
mov
ss
pop
xor
mov
stc
adc
pop
bound
xor
test
and
dec
std
call
xchg
iret
xchg
mov
inc
sbb
cmp
scas
xchg
out
adc
jle
ins
fist
pop
retf
jmp
inc
or
xor
movs
inc
lock
out
add
ds
push
cwd
loope
cmp
mov
fimul
mov
ins
dec
adc
pop
xor
jl
icebp
daa
aad
xor
int3
dec
test
sub
repnz
or
test
call
int3
imul
add
popf
cmp
add
pop
popa
xchg
call
add
mov
test
pop
out
pop
scas
mov
popf
std
xor
mov
scas
push
adc
pop
stos
test
out
add
sbb
sbb
mov
inc
cdq
dec
(bad)
in
inc
rcl
mov
out
(bad)
fisubr
inc
imul
icebp
ss
add
fld
loopne
out
and
pop
retf
push
mov
mov
add
mov
sahf
scas
sub
(bad)
int
sub
push
mov
inc
mov
mov
cli
push
mov
test
movs
push
mov
ins
jmp
movs
jbe
jnp
arpl
sbb
test
sti
rol
mov
xor
out
test
dec
mov
push
dec
jl
adc
mov
cdq
mov
(bad)
pop
callw
ftst
push
sbb
movzx
xchg
out
pop
imul
mov
(bad)
mov
std
jmp
movs
push
jge
(bad)
cmc
inc
jmp
add
into
add
add
inc
push
or
cmp
inc
xchg
les
(bad)
stc
shr
outs
push
and
cmps
inc
fiadd
pop
adc
imul
push
scas
loope
sbb
cld
mov
sbb
shl
inc
mov
clc
push
movs
mov
ja
sar
cmp
sub
xchg
bound
cmps
xchg
lods
test
fild
imul
lock
or
fs
mov
(bad)
movs
pop
mov
test
outs
cmp
xchg
data16
mov
adc
push
pop
xlat
int3
inc
lods
xchg
sub
cld
dec
push
ss
fmul
mov
and
movaps
add
add
stos
lea
dec
pop
das
retf
pop
sub
ret
push
dec
std
fstp
sub
outs
icebp
leave
imul
sbb
sub
pop
mov
fimul
cdq
out
push
pushf
or
mov
jle
pop
mov
dec
jne
jns
cmps
sub
jp
daa
jp
pushf
lock
ds
or
xor
or
adc
pusha
push
sub
sbb
stos
mov
lea
xchg
jg
out
sahf
pop
dec
bound
jns
out
pop
xor
and
dec
jae
and
bound
data16
pop
inc
jbe
enter
and
jnp
pop
mov
aaa
pop
xor
mov
imul
outs
loopne
inc
jb
jl
or
test
lods
pop
jecxz
(bad)
mov
scas
xor
mov
mov
inc
pop
inc
jae
sub
adc
lods
sub
jp
out
aas
fld
ret
aas
sub
mov
and
out
in
cmps
sub
aad
cmp
imul
cwde
out
ds
fwait
mov
jns
mov
pop
fdivr
les
ins
or
xor
clc
and
inc
test
or
xchg
mov
cmp
cmps
inc
ins
and
or
cmp
xlat
popa
ins
fdivr
pop
aam
sbb
icebp
cmc
ficom
mov
push
out
jb
retf
adc
mov
xchg
pop
cmp
or
imul
loop
pop
adc
jecxz
movntps
xchg
in
es
mov
dec
jmp
pmaxsw
sbb
inc
ds
cmp
cmc
xchg
xchg
test
fbld
sbb
xor
sti
cvtdq2ps
das
mov
movs
pop
cwde
jp
stos
je
nop
jne
scas
cmp
popa
hlt
outs
sbb
in
pop
or
mov
div
cs
pushf
mov
and
icebp
sbb
mov
inc
fwait
adc
cmps
push
dec
rol
jmp
out
les
iret
xchg
sar
shl
xchg
retf
adc
(bad)
xor
jecxz
pop
shl
pop
push
pop
or
out
imul
cld
xchg
loope
stos
mov
rcr
cmps
arpl
pop
jnp
add
mov
je
cmps
je
and
out
ficomp
in
retf
fsubr
std
cmp
xor
ins
dec
mov
orps
or
std
scas
push
retf
call
add
inc
loop
je
push
sub
adc
movs
push
test
xchg
jge
xor
ins
dec
fistp
mov
fisttp
gs
jge
add
out
adc
div
xchg
daa
pop
fst
adc
ins
lods
sub
xor
sub
es
or
xchg
push
mov
sbb
add
cmc
scas
jmp
rcr
pop
rcr
push
adc
mov
mov
shl
xchg
mov
xchg
retf
and
fwait
rcl
sbb
push
inc
daa
push
xchg
mov
inc
push
bound
(bad)
retf
loope
data16
pop
inc
or
test
pop
pop
enter
addr16
mov
into
lods
icebp
xor
loop
jae
and
or
test
mov
in
test
retf
pop
sbb
jge
sti
pop
dec
call
ja
ss
xchg
sub
pop
jl
test
inc
sbb
outs
dec
adc
shl
fwait
jne
jb
in
fistp
and
pushf
add
add
push
sbb
sbb
xchg
inc
fdiv
daa
movs
cmp
mov
adc
push
adc
push
sti
lea
mov
mov
out
jnp
or
or
push
jb
sbb
and
sbb
xchg
test
jb
out
bound
dec
out
call
xchg
ja
arpl
inc
push
bound
nop
fdivr
repnz
xchg
mov
out
or
clc
aad
iret
inc
sbb
imul
xor
push
sbb
out
add
sbb
mov
scas
lea
(bad)
stc
je
loopne
mov
xlat
dec
ret
inc
cdq
jae
or
cli
inc
jo
addr16
addr16
add
or
jmp
loop
cwde
stos
jns
mov
sbb
sar
dec
test
push
int3
icebp
jnp
sub
inc
pop
into
and
inc
inc
je
dec
jmp
pop
mov
or
adc
jecxz
jnp
push
cwde
inc
push
cwde
icebp
sub
cmc
mov
xlat
xchg
mov
ficom
ret
pop
es
add
sub
mov
cmp
shr
sbb
mov
jmp
stos
mov
dec
pop
and
out
stos
inc
aas
rcr
lds
repnz
sub
(bad)
stc
sub
mov
cs
test
add
push
leave
mov
dec
inc
je
xor
test
push
dec
in
xor
pop
xor
les
(bad)
cwde
pop
jns
xchg
or
sti
mov
mov
or
jmp
mov
out
cvttps2pi
cs
pop
pop
xor
dec
jp
outs
mov
sbb
out
sbb
bts
cdq
(bad)
es
cmps
out
inc
jnp
add
scas
lods
outs
inc
push
sub
inc
fdivr
lsl
inc
(bad)
mov
jmp
(bad)
loop
xor
sti
sti
cmp
pop
xchg
sar
push
sbb
lea
stos
mov
scas
lods
adc
test
bound
ret
cmp
lock
push
loope
ror
inc
cmp
inc
push
inc
pop
addr16
mov
cmp
out
jae
or
xchg
test
adc
ja
or
xor
nop
in
js
dec
sahf
add
mov
aas
out
lahf
movs
dec
int3
sbb
fcmovne
pop
js
dec
inc
sbb
into
inc
jl
pushf
rcl
movs
ret
sbb
jmp
inc
sub
das
mov
jp
mov
mov
jnp
rcr
cmp
addr16
sub
xchg
pop
xchg
pop
aam
shl
std
ins
loop
push
sbb
and
jnp
gs
fiadd
sub
mov
popa
push
scas
adc
idiv
jle
jmp
fsubr
rcr
sub
and
stos
mov
pop
sti
(bad)
clc
in
clc
inc
and
jg
cmp
push
cmps
les
inc
les
outs
lahf
sbb
mov
ret
mov
inc
loopne
pop
outs
mov
popa
stos
pop
test
pop
or
das
out
popf
add
clc
adc
mov
xchg
mov
loop
clc
mov
push
jg
scas
xor
pop
scas
pop
cli
mov
adc
mov
add
fsub
mov
mov
add
push
push
(bad)
lods
btc
add
imul
cmps
pop
push
jno
dec
clc
push
push
aaa
pop
into
cmp
scas
inc
mov
fmul
push
mov
fnstcw
dec
dec
xchg
imul
push
or
(bad)
xor
and
cdq
int3
add
mov
jge
adc
scas
lahf
dec
arpl
movq
push
out
retf
xor
and
movs
mov
sbb
clc
retf
std
sub
aaa
add
js
fmul
mov
pop
mov
xchg
scas
out
pop
fsubp
out
jnp
or
clc
add
push
lods
inc
or
in
pop
into
ret
and
fld
jno
ss
shl
in
mov
dec
sbb
dec
addr16
adc
sbb
fndisi(8087
imul
inc
(bad)
pop
cld
xchg
test
xchg
xor
or
mov
pop
pop
adc
push
addr16
outs
xchg
jbe
out
add
ja
pop
mov
mov
(bad)
rcl
aam
xchg
rcr
scas
(bad)
sbb
jecxz
pop
out
test
push
jg
test
fld
mov
bound
cdq
add
jmp
xchg
dec
js
xlat
out
call
xor
push
and
and
push
shr
jae
cmp
fdiv
xor
mov
jp
push
cmc
mov
lock
jle
(bad)
adc
sub
stc
cmp
jne
mov
pop
das
ins
adc
movs
mov
push
sbb
mov
dec
or
sbb
or
push
pop
inc
stc
cld
mov
(bad)
pushf
push
fbld
fdivr
xor
mov
lods
icebp
or
icebp
jg
lods
mov
cmp
dec
push
mov
cmps
rcl
loop
inc
adc
or
fldenv
mov
sub
jmp
cmp
mov
xor
or
in
(bad)
lods
stos
iret
pop
stos
cld
and
repnz
mov
fstp
xlat
cmp
int3
mov
cmp
scas
push
scas
mov
repz
addr16
xchg
ins
pop
add
mov
mov
stos
mov
adc
and
test
in
cmp
mov
push
xchg
sahf
ret
xchg
idiv
stc
js
mov
jle
(bad)
pop
gs
push
stos
(bad)
sub
fbstp
sub
leave
xor
mov
aad
test
rcl
pusha
pop
cs
lock
mov
(bad)
into
fisttp
sbb
out
cmp
enter
mov
and
in
cmp
fsubp
jnp
xchg
sbb
retf
loop
pop
or
push
inc
xchg
out
shr
addr16
mov
sbb
jg
dec
loope
popa
xor
or
call
loope
retf
stos
dec
sub
or
jge
push
sub
cmc
gs
jecxz
mov
jne
mov
dec
movs
pop
mov
cli
push
scas
ret
mov
mov
sbb
push
jmp
mov
outs
js
cmp
(bad)
pop
xor
imul
loopne
adc
mov
lods
cmp
cmps
movs
fisttp
repz
push
dec
cmp
jae
sbb
leave
in
cmp
std
gs
mov
je
pop
sbb
mov
fdiv
lahf
(bad)
cdq
mov
push
aad
push
std
pop
cld
div
jne
imul
xchg
test
retf
inc
inc
xlat
in
and
cmp
cmp
xor
cld
pop
jle
das
les
add
inc
rol
inc
outs
jbe
fsubr
(bad)
lldt
in
shl
jecxz
fisubr
inc
popa
cwde
aam
jecxz
das
int3
daa
adc
(bad)
adc
mov
mov
inc
and
leave
std
xor
pop
in
pop
ds
pop
movs
sub
pop
lea
aam
adc
add
mov
push
sahf
movs
cbw
das
and
dec
mov
jl
add
in
push
mov
and
push
dec
push
stos
or
jp
fdiv
xchg
aad
ins
dec
jl
mov
cmps
pusha
arpl
mov
pushf
retf
sbb
lods
cdq
add
cld
xchg
mov
loopne
mov
pop
push
mov
inc
ret
(bad)
pusha
jno
leave
mov
push
movs
ins
mov
stc
push
arpl
sub
push
mov
repnz
shr
cmps
dec
lods
aad
out
mov
inc
or
add
scas
ja
(bad)
mov
and
xchg
mov
or
movs
inc
jecxz
icebp
std
pop
ins
push
jnp
inc
outs
inc
add
or
outs
mov
push
aam
sub
jp
xchg
pop
mov
call
repnz
mov
loop
hlt
gs
ins
je
adc
cmp
inc
jae
pop
push
jp
push
outs
clc
scas
sub
leave
inc
dec
test
retf
or
pop
call
enter
jge
call
or
movs
adc
xchg
fsubrp
ret
lock
adc
mov
lea
add
ret
jg
sub
jne
lock
sahf
cs
mov
(bad)
arpl
mov
adc
mov
retf
push
jo
js
fisubr
and
iret
mov
jge
or
cmp
repz
adc
mov
out
cmps
aaa
sub
add
pop
leave
cmp
xchg
jo
popf
and
mov
xor
ja
cdq
mov
stos
call
push
sub
mov
clc
dec
jns
popf
cli
bound
stc
mov
xchg
cmp
mov
xor
repnz
jmp
(bad)
int3
sar
dec
out
or
imul
movs
ss
add
aaa
jnp
sub
es
aas
sti
into
aaa
inc
aaa
dec
cdq
xchg
(bad)
jnp
push
pop
in
adc
push
dec
ret
repz
pushf
add
mov
jns
ss
(bad)
out
xor
sbb
add
cmps
(bad)
add
xchg
mov
bound
jbe
les
sahf
movs
jp
loop
loop
loop
lock
cmp
loop
outs
or
jb
inc
int
loope
addr16
mov
push
imul
xor
rcl
mov
fptan
out
and
std
hlt
cmp
dec
gs
pop
dec
add
shl
mov
pop
test
cli
lahf
jns
ins
movs
add
xor
xchg
aam
(bad)
arpl
mov
imul
pusha
fwait
dec
adc
xor
imul
movs
mov
jge
pop
xchg
dec
jnp
lods
idiv
ret
mov
fst
repnz
push
scas
jo
aaa
xor
icebp
xlat
mov
loopne
ror
jecxz
(bad)
repz
jg
sub
popf
jbe
mov
pusha
shr
stos
(bad)
pop
in
xor
out
pop
cmp
cmp
int3
stos
xchg
and
mov
add
and
mov
sbb
cld
in
jge
inc
mov
mov
adc
and
sub
jl
or
mov
sbb
xchg
xor
cmc
pop
ret
movs
out
xchg
sub
dec
imul
xor
(bad)
outs
jnp
inc
sbb
jmp
pop
and
in
cmps
sahf
clc
jno
movs
es
adc
cmp
sub
fwait
scas
lea
dec
xor
ret
or
loopne
pushf
mov
loope
inc
call
or
fwait
lods
push
retf
retf
fwait
bound
jmp
mov
sbb
jecxz
or
outs
dec
mov
jg
(bad)
hlt
or
push
cmp
dec
clc
ins
rol
(bad)
xchg
mov
bnd
sub
pop
xchg
int
jb
xchg
(bad)
cmc
call
orps
push
adc
les
cmp
hlt
test
mov
shl
cdq
ret
adc
jle
aaa
pop
pop
das
or
iret
push
addr16
popf
pushf
enter
mov
jmp
xchg
nop
adc
mov
test
stos
mov
xchg
xchg
jo
(bad)
sar
mov
std
mov
ja
ror
hlt
hlt
cmp
rcl
jecxz
push
pop
or
xor
mov
xor
into
stos
fadd
dec
jb
ror
popf
dec
jmp
mov
cwde
cmp
mov
mov
std
dec
xchg
sti
scas
jae
enter
push
push
and
sub
mov
or
fst
jmp
and
loopne
sbb
movs
and
push
cmp
les
cmp
aad
stos
inc
ins
popa
and
push
xor
inc
jb
retf
cmc
mov
sub
les
movs
(bad)
cmp
cmp
sbb
lds
jge
cmp
aaa
and
data16
(bad)
jnp
sahf
call
aam
out
or
je
clc
je
adc
add
(bad)
test
adc
and
stos
jno
daa
pusha
lahf
inc
loop
(bad)
in
shr
push
retf
aam
xor
pop
div
lds
stos
scas
retf
rcr
pop
sti
loop
js
ss
cmp
and
out
mov
fdiv
loopne
cmp
adc
mov
leave
adc
stc
dec
mov
mov
clc
add
xchg
int
push
dec
mov
cmp
sub
lods
mov
push
retf
mov
cmp
sub
cmps
das
in
pushf
fidivr
sub
xchg
push
jle
movs
sub
jno
call
or
mov
addr16
xor
xchg
sub
das
pop
adc
xchg
add
xor
ret
cmp
into
dec
ins
pop
push
xor
pop
jae
fldenv
cwde
std
retf
popf
sbb
pop
ins
ja
or
and
ret
daa
ret
stos
jne
fldcw
jecxz
loop
repz
mov
adc
inc
inc
sti
popf
es
xor
sbb
cmp
fdivr
dec
lds
mov
stos
ins
mov
retf
cmp
mov
jnp
xchg
rcl
cmp
aaa
xchg
paddd
or
pop
out
in
arpl
inc
std
mov
lods
xor
sub
or
jmp
push
and
adc
mov
add
add
leave
nop
add
std
mov
pop
int
aas
pop
retf
push
jl
inc
cmps
sub
cmp
lods
fstp
sub
jns
enter
imul
popa
mov
sar
ja
les
sbb
std
imul
repz
push
inc
sbb
rcl
jae
mov
and
pop
sbb
mov
stos
sbb
mov
xor
lock
push
outs
addr16
(bad)
mov
stc
test
xchg
idiv
out
mov
dec
jnp
xchg
sub
xor
test
lods
sub
mov
mov
dec
or
ret
mov
push
bound
push
cmp
addr16
fcmovne
sti
cmp
pop
inc
repnz
pop
idiv
pusha
out
(bad)
jmp
xchg
stc
dec
pushf
es
scas
mov
cwde
xchg
fdivr
(bad)
lahf
imul
add
stos
outs
inc
xor
mov
jns
in
cmp
int
ins
inc
in
jle
add
mov
sahf
loopne
mov
ja
mov
fdiv
aam
fucomip
in
jno
sub
ror
cmps
shl
cmps
or
xor
mov
(bad)
nop
sub
fadd
pop
adc
inc
push
ja
push
pop
mov
dec
inc
jge
cdq
dec
aaa
pop
xchg
data16
fsubr
repz
mov
jb
add
addr16
nop
adc
xchg
jb
or
mov
loope
cwde
stc
aaa
not
into
daa
test
ror
add
push
out
push
addr16
dec
test
push
add
sbb
add
mov
test
add
sbb
dec
dec
jg
mov
push
icebp
add
(bad)
stos
add
mov
add
stos
das
fbstp
xor
mov
retf
lock
ins
jns
jle
hlt
das
dec
shl
pop
ror
xchg
je
push
inc
repz
retf
mov
add
pop
or
cmp
xchg
in
popf
imul
push
fidiv
mov
and
xchg
mov
pop
push
xor
add
in
sar
out
mov
mov
push
pusha
ret
fist
movs
jno
pop
mov
adc
out
inc
lock
jae
inc
push
adc
aad
xor
or
test
pop
(bad)
mov
fistp
xor
push
fld
sbb
adc
jge
(bad)
adc
inc
popa
adc
pop
cs
mov
pop
es
ret
add
xor
les
int
ds
mov
mov
mov
clc
adc
adc
scas
mov
xchg
mov
xchg
xchg
in
dec
inc
movs
add
or
and
cmp
xor
movs
sub
mov
xchg
cmp
xchg
push
mov
pushf
jmp
and
pop
mov
mov
jns
dec
lahf
xchg
xor
test
imul
lahf
push
or
movs
sbb
repz
push
cmc
push
fst
jmp
cdq
sahf
popf
inc
jmp
push
jmp
dec
addr16
push
pop
or
cmp
icebp
dec
pop
xchg
xchg
mov
js
pusha
mov
inc
(bad)
mov
add
dec
add
(bad)
cmp
es
jmp
xor
popa
xor
xor
lds
rcl
mov
repz
ins
popf
cli
sub
imul
push
lock
sbb
inc
xor
mov
or
jge
jecxz
sbb
(bad)
jp
call
daa
mov
ret
xchg
sbb
add
inc
cmp
cmp
addr16
and
js
leave
in
cli
fwait
cmp
push
int
mov
add
std
test
adc
jle
push
call
mov
dec
mov
test
(bad)
in
and
test
dec
adc
mov
cmc
fld
les
mov
lds
adc
ins
scas
cmp
nop
and
jne
mov
scas
cmp
push
rol
add
(bad)
int
sub
fisttp
ss
stc
cmps
sub
ror
push
or
mov
xchg
add
and
mov
rol
fs
fcom
lods
xchg
outs
(bad)
dec
cmps
pop
int
js
jns
loope
pusha
dec
push
jge
jbe
movs
inc
repz
fcmovnbe
mov
pop
fcom
xchg
fild
inc
jae
sbb
retf
mov
jle
pop
std
data16
mov
retf
movs
and
pop
sbb
push
xchg
mov
jno
adc
out
xchg
push
sub
sub
fdiv
jmp
test
pop
and
ror
mov
sub
nop
fld
push
aas
push
jnp
jne
sub
in
pop
inc
std
mov
lock
mov
hlt
mov
jnp
add
(bad)
repnz
xor
mov
mov
dec
or
fidiv
xor
leave
sub
sar
les
adc
adc
lea
(bad)
push
pop
and
jecxz
push
fcmove
aad
inc
add
shr
outs
ins
call
iret
(bad)
test
pop
add
mov
sahf
xor
jb
ins
ins
or
mov
clc
and
or
cdq
frstor
add
cmp
push
sub
adc
lock
sub
inc
(bad)
inc
cmps
sub
xor
cmps
pop
inc
dec
sub
les
int3
outs
ins
mov
aam
ins
cmps
retf
sub
nop
(bad)
movs
cwde
repz
ret
jge
imul
mov
(bad)
aaa
jo
xchg
adc
call
imul
dec
jo
jns
lds
push
dec
sub
in
add
sar
in
pop
clc
jo
call
lea
shl
fwait
sbb
jne
mov
push
int3
push
jmp
jecxz
cmc
adc
pop
or
addr16
jge
mov
sar
in
jo
push
adc
adc
push
dec
mov
lods
mov
sbb
into
fadd
mov
mov
shr
jp
shr
leave
mov
add
ret
data16
adc
ficomp
das
dec
test
push
ds
loopne
cmp
push
push
jmp
jbe
adc
add
addr16
sbb
add
mov
mov
sar
imul
or
lods
or
es
xchg
mov
mov
pop
(bad)
loop
sbb
jmp
dec
mov
dec
cmps
adc
rcl
push
sbb
push
jmp
mov
xor
test
mov
fucomip
jae
rcl
retf
jge
xchg
dec
inc
sub
xchg
in
or
sub
jo
inc
fnstcw
ror
sbb
xchg
dec
pop
(bad)
dec
lahf
dec
movs
add
mov
(bad)
jl
lahf
shr
fisub
inc
pop
addr16
inc
adc
jl
test
pop
(bad)
dec
mov
sub
aam
push
ds
jmp
mov
stc
xor
out
pop
mov
arpl
ja
sbb
mov
mov
sub
aaa
or
mov
push
and
or
fimul
ins
cmp
ror
int3
fdivr
pop
adc
mov
or
push
popa
mov
fldcw
jns
xchg
add
push
stos
enter
popa
pop
inc
ins
jg
inc
or
iret
xor
push
leave
popa
(bad)
jg
not
sub
ss
mov
cwde
add
sbb
scas
mov
addr16
or
push
std
fnsave
icebp
sahf
cmp
aaa
inc
fcom
cmp
cli
imul
cs
fnstcw
mov
(bad)
push
out
adc
iret
mov
mov
pop
xchg
jge
psubd
movs
pop
mov
xor
in
loopne
mov
adc
xor
out
cld
inc
jnp
adc
les
pop
popa
ret
dec
repnz
std
and
push
dec
scas
es
fnstsw
je
pop
dec
xor
aad
push
or
in
cs
movs
dec
pushf
loopne
fs
lods
les
pop
cmp
aaa
arpl
or
scas
fsub
and
mov
stos
cmp
or
pusha
shl
jae
cmp
call
aas
les
(bad)
and
push
jge
mov
aad
add
jg
stc
movs
fst
xor
out
cdq
push
add
or
es
pop
rcr
adc
xchg
dec
arpl
adc
dec
push
cmp
xchg
push
rol
lds
jl
xchg
mov
aad
jle
jno
rol
dec
push
adc
gs
test
repnz
push
mov
ss
js
mov
xor
jle
fsub
mov
and
scas
jns
ins
sbb
cmp
(bad)
std
js
mov
call
mov
mov
call
loop
sti
enter
rcl
jmp
lea
popa
and
loope
leave
retf
dec
and
mov
out
push
push
and
push
(bad)
dec
push
cmp
pop
mul
jnp
lods
push
jle
test
push
mov
jbe
sub
(bad)
lahf
inc
data16
arpl
cld
or
adc
xchg
sbb
adc
aad
and
and
std
out
sbb
rcr
sub
(bad)
in
push
ss
mov
mov
enter
add
inc
mov
mov
(bad)
or
test
pop
daa
or
in
add
pop
xchg
std
pop
cmp
adc
xlat
push
pop
cmp
push
push
jecxz
enter
fadd
ret
xchg
xchg
shr
mov
or
pop
or
bound
push
xchg
mov
adc
mov
mov
sbb
call
pop
xor
mov
sub
or
movs
mov
je
loop
popa
daa
mov
fdiv
popf
mov
or
(bad)
fnstcw
fcomp
cmp
inc
or
dec
cwde
sub
leave
inc
scas
pusha
xchg
fldcw
bnd
test
push
or
lods
mov
adc
lds
sbb
push
cmp
je
out
inc
push
pop
fwait
mov
inc
mov
mov
mov
push
xchg
jmp
jmp
or
mov
xchg
cli
shl
(bad)
cmps
push
inc
push
add
xor
xchg
dec
and
push
div
adc
aam
jmp
pop
sub
mov
and
xchg
rcr
bound
dec
out
push
das
jns
mov
jnp
ds
pop
xchg
mov
movs
inc
jmp
in
dec
or
out
jae
in
add
fist
or
pop
mov
(bad)
dec
mov
outs
sub
xchg
andps
pop
aam
stos
mov
cmp
sbb
enter
out
and
jl
fwait
push
pop
(bad)
xchg
jp
sbb
repz
xchg
(bad)
shl
add
push
adc
retf
retf
js
jnp
pop
mov
aas
inc
push
arpl
sub
xlat
(bad)
cmps
pop
jnp
iret
dec
stos
dec
ds
pop
loop
xchg
pop
xchg
mov
sub
xor
iret
ds
adc
in
inc
sub
stc
inc
cmps
fcmovnbe
in
cdq
cli
jp
cmp
sub
aad
in
and
pop
mov
dec
ret
icebp
and
and
jp
leave
(bad)
not
add
and
sub
jnp
inc
lea
jne
retf
xor
rcl
aas
jmp
test
xor
in
daa
in
inc
stos
addr16
scas
add
add
pop
repnz
movs
inc
push
xchg
push
xor
fcom
jns
mov
add
clc
(bad)
pop
mov
inc
or
push
sub
inc
jbe
mov
dec
or
cmp
(bad)
fdiv
out
or
call
call
jae
dec
in
sbb
xchg
fld
ret
mov
and
mov
xor
push
mov
inc
test
jne
adc
outs
inc
jp
sub
sar
hlt
ret
std
mov
stos
push
aas
pop
jae
adc
mov
inc
sub
fst
neg
cld
push
mov
mov
iret
push
lea
push
cmp
cdq
mov
aad
popf
pop
lds
ret
adc
je
jbe
cmp
mov
mov
jns
inc
enter
(bad)
jae
repz
jmp
pop
int
das
mov
mov
jne
stos
xchg
add
add
push
inc
push
cwde
lahf
xchg
xchg
dec
retf
loop
cmp
outs
(bad)
pop
out
inc
imul
or
inc
js
ficom
ror
mov
or
imul
inc
adc
sub
add
adc
push
xchg
sbb
pmaxub
pop
xchg
mov
and
dec
and
xchg
fisttp
mov
cmc
pop
fs
dec
lgdtd
mov
fbld
hlt
mov
aaa
inc
cmp
push
mov
lahf
iret
inc
push
enter
jl
fsubp
pop
js
add
imul
clc
call
fidiv
push
and
push
add
pop
pop
jno
neg
or
add
xor
or
mov
popa
stos
fisttp
mov
mov
sbb
loopne
div
rcl
outs
popf
jmp
aaa
push
inc
inc
sbb
jb
cli
sbb
pop
imul
inc
ss
popa
dec
loop
cmp
push
and
mov
in
aaa
and
mov
test
inc
in
ret
xchg
call
or
(bad)
dec
cmp
into
mov
xchg
cmp
xor
push
icebp
and
fwait
sub
ret
daa
cmp
pop
xchg
loopne
sub
rcr
inc
retf
test
sbb
and
test
mov
adc
inc
mov
xor
cld
cmp
shr
dec
or
pop
and
add
aam
jae
push
les
or
stos
push
sub
imul
add
mov
fs
std
loopne
fiadd
jmp
fs
xchg
xor
ja
mov
pop
mov
popa
adc
lods
fstp
sar
fnstenv
pop
mov
inc
je
push
and
xchg
shl
cmp
das
adc
les
and
ins
retf
outs
add
ins
ror
test
sbb
aam
inc
cdq
or
int
add
adc
scas
mov
scas
xor
not
inc
lea
cmp
sbb
imul
push
mov
mov
push
data16
retf
mov
stos
mov
loope
add
push
arpl
imul
mov
mov
mov
jge
fsubr
js
pop
pop
test
les
jmp
jecxz
push
(bad)
out
mov
imul
push
inc
lahf
mov
xchg
pop
bound
rol
jmp
jl
iret
jg
pop
mov
jmp
mov
jns
mov
adc
inc
add
or
mov
pop
leave
cmp
dec
mov
mov
pop
ret
mov
mov
mov
lods
mov
cmps
popf
ficom
shl
jae
jnp
push
mov
adc
jg
xchg
cmp
and
imul
jmp
jae
dec
push
lods
(bad)
vpsllw
sahf
adc
repnz
addr16
stos
mov
(bad)
out
aaa
out
repnz
data16
(bad)
mov
mov
ss
das
aad
jmp
cmp
jbe
mov
lods
pop
stos
mov
je
jl
sbb
pop
push
call
les
lea
lahf
les
or
lds
pop
push
fwait
jo
adc
arpl
leave
test
popf
push
mov
xchg
pop
addr16
or
cmp
mov
movsx
sub
jo
fwait
shl
sub
mov
xchg
xchg
rcl
pop
sbb
dec
sbb
mov
leave
call
dec
enter
dec
jno
(bad)
mov
dec
mov
fwait
jp
ret
dec
clc
inc
fst
fsub
je
das
adc
in
retf
pusha
je
jbe
mov
jnp
sbb
repnz
pop
sub
psubw
cmp
pop
test
mov
push
call
popa
enter
imul
movs
jmp
jae
cdq
popf
dec
retf
fwait
(bad)
(bad)
fpatan
inc
sub
add
pop
enter
mov
(bad)
jae
rcl
push
add
imul
mov
daa
retf
xchg
retf
lock
add
rol
cdq
enter
or
mov
sar
mov
scas
push
push
push
je
neg
ins
cmp
mov
cli
out
sub
lahf
ss
mov
mov
sti
ja
in
scas
stc
dec
sbb
les
pop
int3
or
xchg
dec
aas
or
xor
jne
inc
inc
cmps
push
adc
(bad)
cdq
and
mov
sub
mov
add
jecxz
jne
outs
shl
(bad)
ret
out
pop
dec
xor
push
pop
mov
pushf
mov
in
mov
mov
ins
rcl
sbb
and
call
mov
pop
push
scas
dec
adc
dec
push
xor
lahf
fstp
rcl
sti
sbb
lods
xor
cld
ja
aam
or
cmp
or
inc
sbb
jle
out
lock
stos
dec
pop
je
popa
cmp
push
sub
loope
and
dec
xor
(bad)
xchg
xchg
out
test
aam
fwait
and
shl
add
loope
add
sbb
adc
fbstp
ret
pop
imul
dec
cmp
jo
or
or
push
imul
out
sbb
mov
xchg
(bad)
loop
leave
data16
mov
leave
xchg
adc
mov
jmp
je
mov
inc
jmp
fs
(bad)
dec
cmp
and
and
pop
add
(bad)
dec
test
xchg
stos
or
mov
xchg
adc
pusha
shl
dec
(bad)
in
and
call
imul
xchg
sahf
pusha
js
rol
mov
sub
mov
mov
xchg
(bad)
pop
cmp
xchg
mov
and
dec
cmp
push
mov
ins
push
jg
call
inc
mov
cmc
cvtps2pd
popa
sbb
pop
aad
push
mov
nop
stc
out
loopne
mov
fldcw
sub
jnp
(bad)
xor
mov
xor
in
cmpps
xlat
sbb
cmps
cmp
cmp
stos
out
enter
jnp
dec
jp
lahf
jg
bound
mov
push
adc
dec
inc
shr
fisttp
xor
inc
aad
sub
out
fisttp
pop
popa
jo
xor
inc
add
cs
int
sar
fwait
cmp
dec
in
loope
jae
adc
inc
inc
mov
out
xor
in
in
fidivr
push
pop
pusha
lock
xchg
sub
cmps
dec
mov
inc
mov
(bad)
jmp
push
or
sub
or
jg
ret
push
adc
dec
imul
sub
xor
int3
dec
dec
jle
mov
jl
jp
lahf
add
addr16
cmp
ficom
fmul
outs
ja
(bad)
int3
int3
jmp
push
mov
jecxz
pop
jmp
mov
sbb
sbb
cdq
jne
inc
inc
mov
iret
mov
jnp
jle
inc
(bad)
lds
(bad)
adc
clc
pop
or
mov
scas
sbb
fdiv
cs
int3
cmp
imul
stos
repnz
and
xor
retf
jg
inc
xchg
xchg
retf
pop
or
jg
dec
jge
(bad)
movs
(bad)
mov
call
lea
sbb
stc
je
dec
jle
pusha
jo
dec
add
fcomi
xchg
repz
test
(bad)
div
ds
sti
shr
sbb
mov
jno
out
int
xchg
rcl
aad
pusha
stos
push
pop
xor
cwde
push
xor
bound
cmp
js
sbb
cmp
sar
mov
cmps
imul
jp
pop
or
ja
xchg
mov
aas
leave
adc
sar
icebp
arpl
cmp
push
fisttp
jnp
add
bound
inc
out
cmp
in
jp
mov
int
fcomp
and
fcomp
mov
loopne
add
js
jge
or
dec
lahf
add
(bad)
loop
xchg
clc
pop
bound
imul
cmp
mov
mov
scas
clc
test
push
push
addr16
repz
pop
xchg
sub
lods
or
into
sbb
aas
xor
outs
or
outs
xor
add
ins
dec
leave
xchg
clc
fsub
sbb
dec
push
pusha
and
mov
imul
stc
push
add
imul
mov
mov
and
mov
mov
inc
mov
mov
rol
stos
sub
fimul
test
dec
sar
je
pushf
add
and
jnp
imul
dec
fld
xor
je
mov
dec
cmp
sub
xchg
lods
xor
jecxz
test
pop
mov
outs
shl
repnz
xchg
cmp
data16
ror
je
cmp
int
ja
cli
sub
xor
xchg
repz
mov
bound
adc
sbb
adc
mov
push
inc
rol
mov
add
pop
fadd
scas
outs
xchg
xor
lock
sub
adc
push
adc
pusha
jge
imul
add
jle
mov
imul
movs
inc
and
pop
jne
mov
adc
loopne
push
mov
outs
cld
push
sahf
dec
sbb
pop
sbb
lock
pushf
cmp
xchg
xor
sahf
std
out
dec
dec
ror
push
inc
inc
xchg
js
xor
out
adc
(bad)
mov
jle
loopne
mov
nop
add
dec
dec
out
jmp
imul
mov
xor
dec
inc
mov
dec
push
aam
dec
adc
jns
inc
vrcp28ss
rcl
retf
mov
cmp
mov
inc
add
adc
outs
(bad)
jbe
sti
and
loope
stc
lods
pop
and
mov
(bad)
into
aam
pop
out
or
out
push
repz
mov
mov
lock
arpl
sbb
add
fild
mov
xchg
das
fs
test
loope
mov
xor
cmp
inc
(bad)
xlat
out
pop
mov
adc
mov
cmp
inc
in
test
sub
shr
push
push
lock
dec
jae
and
fisubr
push
sub
hlt
mov
and
dec
sub
je
movq
pop
cmp
sub
(bad)
jp
fs
dec
sub
fldcw
add
dec
push
pop
push
add
call
jmp
(bad)
loope
cmp
mov
mul
gs
mov
sbb
jmp
xchg
mov
and
push
in
outs
fabs
shr
add
sahf
jne
ss
push
pop
rcl
adc
lock
clc
xchg
arpl
or
loope
arpl
pushf
call
adc
add
mov
add
test
push
sbb
call
sbb
call
in
stos
add
mov
mov
mov
push
dec
popa
pushf
jge
imul
in
inc
and
movs
push
lods
jns
xor
xchg
or
out
jne
aam
in
sbb
(bad)
sbb
xchg
sti
adc
xchg
push
sub
cmp
dec
mov
iret
pop
mov
fmul
xchg
pop
xchg
and
mov
sbb
and
inc
and
and
mov
push
cmps
js
imul
add
jo
ror
adc
retf
mov
sbb
mov
or
cmp
aad
dec
sbb
and
pusha
pop
xlat
mov
pushf
add
ins
lock
test
retf
cmps
lahf
mov
rcr
sahf
xchg
adc
jecxz
jbe
cmp
xor
push
or
(bad)
test
jmp
cmp
retf
mov
jg
pusha
mov
cld
jnp
sbb
pop
sub
mov
(bad)
sbb
mov
and
inc
mov
push
sbb
xchg
out
or
or
and
aad
pop
jnp
xchg
sbb
or
cdq
mov
xor
push
gs
out
out
cmp
cs
dec
mov
(bad)
rcr
cdq
imul
(bad)
enter
aam
adc
pop
(bad)
pop
aam
add
hlt
jnp
cmp
sbb
push
sbb
div
into
sbb
mov
dec
push
adc
push
push
mov
pop
pusha
pop
inc
pop
mov
lea
test
dec
gs
das
adc
leave
and
or
in
pushf
xchg
fistp
test
mov
jmp
std
cs
xchg
dec
scas
dec
cli
addr16
in
dec
fimul
(bad)
mov
ds
sub
or
mov
or
cli
dec
clc
ror
xor
movs
add
dec
adc
lods
ins
mov
cld
xor
add
pop
push
lahf
jnp
or
sahf
ins
leave
ds
or
outs
push
and
cmps
bound
fs
mov
test
loope
sbb
arpl
and
add
in
sbb
push
repz
pop
or
xchg
and
pop
test
inc
and
repz
test
loop
add
inc
push
xchg
pop
lahf
add
cwde
fmul
push
ret
jmp
sub
mov
scas
cld
nop
inc
ret
or
stos
bound
inc
outs
std
jbe
push
and
push
jbe
call
push
or
pop
mov
cli
inc
push
push
rol
or
sub
pandn
cmp
cmps
add
aad
xchg
inc
cld
xchg
xchg
sub
cmp
shl
out
or
call
push
leave
inc
fst
cmp
nop
xor
test
sub
xor
cwde
sub
push
cmc
pop
inc
and
mov
outs
iret
and
mov
or
inc
adc
mov
sub
(bad)
mov
icebp
mov
ret
sub
xchg
std
ret
imul
in
div
cli
(bad)
mov
loope
add
dec
pusha
lea
repz
xchg
mov
stos
add
out
clc
jae
inc
bound
mov
inc
xchg
mov
cmc
outs
adc
push
inc
dec
arpl
lods
add
add
push
push
cmc
mov
fld
outs
ret
xchg
dec
pop
ss
cmps
adc
mov
push
loop
adc
dec
out
call
icebp
lahf
mov
xchg
ds
mov
inc
mov
(bad)
mov
adc
xchg
mov
xor
xchg
xchg
adc
stos
add
iret
inc
mov
es
or
sbb
call
hlt
mov
pop
mov
fdiv
popf
mov
stos
jae
add
test
or
or
iret
in
add
or
add
add
neg
fisub
inc
cmp
cmp
ja
mov
leave
mov
add
xchg
and
in
call
sub
rcl
add
cmp
nop
sub
sub
pop
mov
jo
dec
mov
repnz
cmps
inc
cmp
hlt
and
and
inc
sub
int3
pop
in
add
sbb
adc
pop
mov
lock
sbb
xchg
sti
in
out
sub
test
out
and
repz
jno
sub
xor
clc
fmul
cdq
daa
jns
xor
mov
jnp
jg
out
mul
(bad)
and
mov
(bad)
cmp
cs
arpl
fisub
je
pop
pusha
xor
loope
and
jb
ror
xor
gs
adc
jo
sti
(bad)
repnz
pop
repz
sub
xchg
add
hlt
sbb
or
xor
stos
les
xchg
aas
jbe
lock
sub
inc
gs
jle
pop
(bad)
in
inc
test
pop
gs
mov
leave
(bad)
je
into
popf
push
in
cmp
push
push
adc
mov
jg
push
xchg
int3
or
cmp
fdiv
cmp
ret
fs
mov
inc
or
arpl
leave
dec
out
jne
fsub
lds
jns
stos
ins
pop
mov
mov
cmp
rol
aam
push
ret
sbb
(bad)
jge
lods
push
dec
icebp
std
push
movs
shl
popa
retf
xchg
or
mov
jno
ficom
adc
pop
sub
fs
stc
push
sbb
sbb
repz
mov
adc
mov
and
xchg
xchg
aad
mov
inc
cmc
(bad)
sar
lods
stos
jp
rcr
mov
jp
lahf
adc
add
imul
hlt
imul
out
mov
cmp
cmc
fisubr
fldcw
dec
mov
mov
call
xor
in
out
arpl
and
arpl
adc
push
jg
enter
jmp
mov
lock
or
jl
das
shl
int
pop
cmp
or
int
pop
or
in
mov
not
xchg
sbb
test
mov
in
ins
sbb
ins
lahf
gs
sub
les
aad
push
ja
dec
stc
push
mov
shl
cmp
lea
sti
fidiv
pop
in
pop
jne
xchg
fcom
popa
fdiv
cmp
adc
sti
sbb
push
and
add
je
ss
dec
rcr
adc
cmp
mov
dec
mov
int
dec
je
jp
mov
adc
sub
cmp
inc
addr16
ins
aad
leave
pop
mov
(bad)
xchg
push
pop
inc
or
bnd
neg
adc
mov
cmp
(bad)
inc
sahf
push
xchg
mov
xchg
ret
mov
xchg
stc
cmp
mov
les
test
shl
xchg
aas
aad
cmp
es
sub
jg
adc
ficomp
cmp
inc
rol
xchg
push
popa
xor
cmc
loope
push
dec
xchg
repnz
dec
into
add
das
xchg
fst
xor
movs
inc
xchg
ins
sub
xchg
push
cdq
les
call
cmp
rcr
lds
test
mov
and
aaa
or
push
mov
and
adc
mov
cmp
rol
(bad)
mov
fidivr
or
push
movs
(bad)
aaa
pop
(bad)
js
out
and
xchg
cli
mov
dec
gs
sbb
lahf
push
xlat
fyl2x
dec
outs
pop
loope
pop
mov
xlat
sbb
pushw
call
pop
les
sar
popf
inc
xor
cld
bound
lds
fwait
xchg
scas
fs
in
(bad)
stos
sbb
cmp
mov
xor
mov
es
xchg
rcl
sahf
pop
outs
add
es
sub
mov
sub
push
xchg
xlat
dec
push
xor
stos
or
int3
movs
dec
nop
mov
sub
(bad)
mov
sbb
xlat
inc
stos
lea
ficom
adc
mov
out
xor
in
(bad)
pop
repnz
ins
cwde
iret
and
mov
pushf
dec
rcl
mov
in
cli
ja
(bad)
push
sub
or
adc
inc
test
mov
cmp
arpl
scas
push
stos
mov
jno
dec
loope
nop
cmp
xchg
(bad)
and
pop
inc
push
sub
mov
ins
jg
cli
inc
cwde
arpl
loopne
mov
popa
loopne
dec
cli
pusha
test
xchg
jmp
fild
cmps
(bad)
stos
and
(bad)
jmp
mov
cdq
call
bound
and
into
(bad)
jmp
daa
push
push
repnz
inc
push
dec
icebp
mov
push
add
inc
mov
sbb
cmp
push
icebp
adc
push
dec
sub
addr16
aam
pushf
call
nop
push
xor
leave
and
int
push
inc
xchg
call
movs
xor
scas
je
dec
push
ins
fdiv
loope
pop
inc
jne
test
mov
xchg
scas
cmp
cld
adc
iret
mov
or
cmps
push
sbb
mov
jae
enter
scas
movs
les
push
xlat
add
mov
mov
sub
int
pop
mov
sbb
bound
push
xchg
adc
(bad)
sbb
sahf
loopne
dec
adc
ins
dec
sahf
and
sti
ss
arpl
jge
pusha
aaa
int
push
xchg
(bad)
out
gs
dec
js
sub
out
scas
jns
mov
lock
add
int3
jae
inc
scas
mov
rcl
mov
cmp
addr16
dec
(bad)
dec
test
push
sub
in
cld
ret
pop
shl
cmps
pop
pusha
mov
xchg
and
mov
ret
stos
aaa
xor
shr
or
dec
test
test
mov
popf
jo
in
movs
fwait
mov
mov
jmp
fdivr
lahf
stos
sub
jo
add
or
call
and
scas
jne
push
pop
xor
pop
jnp
mov
or
xor
mov
dec
push
mul
cmp
push
call
je
push
scas
jecxz
xlat
inc
or
xchg
xchg
sub
cmc
xor
fs
fdivr
retf
push
dec
cmps
adc
xchg
stos
rcr
in
pushf
adc
daa
hlt
mov
pop
mov
inc
ins
jb
or
je
jmp
jmp
mov
dec
call
sbb
lahf
rcl
jb
outs
push
cmp
mov
fcmove
outs
in
xchg
mov
pop
sub
je
jns
and
cdq
cmp
pop
mov
icebp
fadd
retf
mov
mov
pusha
leave
popa
imul
lea
sub
inc
add
add
(bad)
mov
add
add
fsub
out
outs
sahf
popf
inc
(bad)
jp
jb
and
movs
sbb
or
cdq
repnz
mov
and
pop
retf
mov
lea
lods
sbb
movs
push
cmp
mov
pop
int
jp
sbb
stos
jb
push
and
(bad)
adc
out
sbb
mov
jg
and
inc
shl
mov
mul
xor
lock
sub
mov
(bad)
sub
xor
cmc
sub
mov
fcom
push
push
ss
lea
fnstenv
inc
mov
dec
movs
pop
mov
(bad)
(bad)
loop
cmp
mov
loopne
jb
popf
aam
fst
cmc
pushf
jp
cs
adc
xchg
jne
outs
(bad)
cmps
ins
push
int3
or
cmp
into
sub
(bad)
enter
dec
shr
(bad)
add
pop
shl
adc
cmps
jecxz
imul
outs
and
sub
xchg
shl
pusha
jae
cmp
aas
sbb
add
adc
lock
(bad)
push
jae
lahf
mov
rol
imul
enter
in
enter
(bad)
daa
call
or
dec
inc
jmp
sbb
xchg
rol
gs
mov
ds
aam
rcl
in
dec
in
scas
dec
shr
dec
aas
loop
sar
cmp
jns
icebp
dec
test
mov
icebp
inc
je
or
xchg
push
mov
or
and
fnsave
mov
xchg
cmp
lahf
jp
jp
jmp
add
call
mov
pop
adc
ret
shl
lahf
mov
in
adc
push
imul
cli
mov
sbb
sbb
xlat
rol
adc
ja
pop
aam
int3
sub
ja
mov
mov
or
div
sbb
cwde
pushf
or
aam
push
movs
lahf
sub
push
cmp
in
aam
mov
xor
cmp
icebp
mov
or
or
inc
and
nop
push
lahf
lea
popf
popa
cmp
sti
rcl
xor
adc
sbb
out
ds
mov
jp
fwait
pop
xchg
scas
sbb
cli
push
jmp
xor
adc
test
inc
jmp
cmp
es
mov
dec
mov
or
push
ds
sahf
cmc
adc
icebp
dec
lock
leave
xchg
xor
cmp
cli
fld
jmp
lock
xchg
mov
push
jmp
jnp
sub
pop
loope
sub
rol
lods
repnz
jmp
loop
jg
arpl
in
sub
jne
repnz
scas
imul
pop
jge
jecxz
rol
mov
dec
jge
push
inc
xor
aam
mov
shr
dec
mov
cmp
out
pop
xor
jg
mov
sub
test
ror
adc
shl
ins
adc
jmp
adc
inc
ret
out
jne
dec
in
leave
add
popa
sahf
jle
jl
sub
mov
mov
bound
das
call
mov
jl
dec
mov
je
sub
mov
out
repz
fcom
das
mov
lock
xor
sbb
jns
xchg
(bad)
rcr
fucomp
repnz
mov
loop
push
add
push
fisub
in
or
sub
mov
frstor
fsubr
outs
mov
bound
aas
adc
xchg
fwait
lea
xlat
sbb
call
xor
imul
lods
cmps
outs
pop
cmp
inc
imul
jnp
mov
sbb
mov
sub
loopne
cmps
pop
bound
stos
xlat
pop
enter
rcr
aaa
jmp
mov
movs
int3
xor
pop
ins
adc
sar
sbb
mov
sub
jmp
aaa
scas
ds
shl
rep
(bad)
push
movs
jge
sbb
inc
push
sub
mov
jge
sub
cmps
jb
pop
aaa
push
pslld
or
and
imul
movs
or
push
dec
mov
bound
(bad)
mov
in
retf
adc
in
mov
sub
pushf
push
add
mov
inc
ins
pop
test
inc
out
mov
addr16
addr16
mov
mov
xor
(bad)
cld
das
adc
out
sti
mov
stc
and
mov
mov
repz
xchg
sbb
push
push
fdiv
popa
xor
jmp
sub
and
push
dec
xchg
lods
push
push
es
ss
cmp
test
scas
or
xchg
sbb
xchg
popa
test
jge
outs
les
xor
cmp
mov
jmp
jnp
sub
int3
inc
push
aad
add
bound
mov
dec
iret
mov
ds
push
push
inc
add
jmp
dec
in
outs
pop
xchg
pop
call
push
pop
and
xor
mov
or
cmp
push
or
jne
pop
js
sbb
gs
pop
ja
ins
leave
ret
sub
icebp
cmovs
mov
adc
mov
outs
sbb
pop
dec
cs
scas
int
ins
pop
push
inc
and
retf
jmp
scas
outs
jno
(bad)
repz
stc
test
xchg
sar
mov
ins
mov
(bad)
movs
jmp
cmp
fisub
mov
iret
pop
outs
mov
mov
stos
pop
in
xchg
xor
int3
jg
mov
jae
cld
div
fcomp
imul
dec
std
lock
or
fs
mov
int3
jge
adc
fld
shr
(bad)
xchg
mov
mov
inc
dec
stc
mov
lock
sar
xlat
sti
inc
ror
pop
xchg
fdivr
in
fnstcw
stos
add
pop
or
in
fadd
mov
mov
lods
and
mov
in
sub
out
mov
mov
mov
mov
push
mov
mul
xor
dec
ds
cwde
lods
mov
mov
mov
mov
sbb
and
idiv
sbb
retf
(bad)
jno
xchg
push
int
mov
popf
lods
sbb
mov
or
ret
mov
loopne
test
cmp
dec
xor
add
cwde
cmps
ins
fcomp
scas
(bad)
jmp
fwait
push
inc
jle
pop
fnsetpm(287
pop
or
inc
arpl
(bad)
xchg
ror
xchg
cld
xor
mov
outs
fwait
cmc
push
xor
ret
pop
addr16
and
imul
xor
lock
imul
xor
push
iret
and
push
push
nop
adc
out
imul
lahf
leave
xor
je
fwait
mov
ss
mov
mulps
xchg
xor
fldlg2
mov
xor
adc
(bad)
je
popa
gs
fwait
mov
sbb
push
and
cmp
fcomp
les
inc
xchg
into
and
ds
retf
ror
xchg
(bad)
xlat
aaa
mov
test
cmp
cmp
leavew
mov
(bad)
nop
sbb
xchg
movs
clc
inc
xchg
(bad)
out
sbb
clc
nop
xchg
jmp
fcomp
adc
xor
fisubr
adc
(bad)
xor
ror
inc
test
mov
dec
and
(bad)
(bad)
push
(bad)
push
push
sbb
data16
clc
push
sahf
mov
add
push
lods
je
int
sub
add
jle
and
inc
push
adc
(bad)
push
(bad)
mov
sbb
sub
adc
jo
cmp
or
bound
hlt
and
pop
mov
clc
mov
pop
lds
call
(bad)
shl
push
sbb
dec
loopne
call
push
xor
popf
shr
xor
adc
test
aaa
pop
(bad)
and
jne
les
test
sbb
mov
dec
xor
push
in
test
cmps
icebp
jns
(bad)
xchg
xor
add
lock
cwde
adc
(bad)
out
sbb
cli
mov
cmp
fmul
pop
rcr
pop
jp
xlat
retf
sti
adc
cmp
pusha
lahf
lods
(bad)
fsub
in
xor
iret
pop
sahf
mov
test
ja
xlat
mov
(bad)
adc
jbe
mov
ja
fimul
movs
arpl
sub
sbb
mov
fcmovne
pop
rol
jno
sbb
mov
ds
dec
jo
push
jmp
or
pop
in
mov
imul
cli
(bad)
(bad)
cmps
mov
stos
repz
sub
fbstp
mov
out
mov
jae
cs
jns
mov
popf
jmp
adc
push
ret
fmul
fimul
in
in
dec
fcomp
adc
sbb
fcom
xlat
(bad)
inc
into
fwait
ret
addr16
repnz
aam
mov
mov
jbe
mov
mov
dec
mov
add
mov
cld
test
adc
xchg
add
or
ins
test
stos
(bad)
into
out
test
cmps
loopne
mov
loop
adc
pushf
ret
test
cmp
pop
ds
jo
sub
in
or
push
jns
loopne
sbb
(bad)
jge
pop
push
mov
rcr
scas
mov
das
and
inc
sbb
out
and
nop
je
in
in
lock
div
jp
div
dec
into
xor
xor
cmc
push
jne
in
nop
stos
(bad)
ins
sub
das
pop
icebp
out
mov
push
inc
(bad)
inc
cli
push
xchg
pop
mov
jle
fstp
and
or
xor
pop
rcr
add
push
imul
and
into
mov
add
adc
cmp
leave
in
cmp
and
jbe
pop
int3
or
stc
jmp
jge
push
(bad)
mov
adc
mov
retf
pop
stos
add
mov
jo
in
pusha
pop
and
aas
fld
sbb
mov
xchg
jecxz
aad
add
jecxz
gs
cmp
xchg
adc
and
sar
ins
pushf
retf
ror
cli
xchg
stc
inc
ds
sub
or
(bad)
fldln2
lods
out
xor
inc
iret
cwde
ja
pop
mov
cmc
xor
data16
clc
and
push
push
aam
scas
mov
ret
cmps
jo
pop
test
(bad)
out
jecxz
jmp
mov
(bad)
sti
pop
retf
retf
cld
mov
clc
sbb
add
aad
icebp
adc
loope
push
mov
fst
push
rol
jp
cmp
inc
pop
or
add
nop
stos
out
push
into
push
out
lds
and
pop
push
loop
xlat
(bad)
fst
leave
push
stos
mov
jo
pushf
in
mov
mov
cmps
dec
dec
pop
bound
push
iret
mov
ret
mov
pusha
cmp
dec
rcl
xchg
inc
rcr
ror
mov
adc
cmp
sahf
push
xchg
add
mov
lahf
push
jbe
loope
lea
xor
mov
enter
mov
loope
push
adc
(bad)
test
sbb
jmp
inc
push
adc
push
lds
sti
jnp
pop
bound
fs
jne
sbb
imul
pop
mov
or
push
and
inc
mov
or
mov
push
aaa
cmp
in
repnz
xchg
adc
jl
jmp
test
sub
inc
pop
xor
inc
(bad)
fucomi
pop
pop
or
mul
jbe
and
cs
mov
add
aaa
add
(bad)
aam
sbb
add
test
mov
xchg
fdivr
test
jmp
fdiv
les
jbe
dec
icebp
cmp
call
jle
in
outs
mov
cmp
loope
cwde
loop
es
dec
ret
push
fcmovne
push
xor
pop
cli
adc
movs
imul
add
and
mov
daa
dec
jns
inc
rep
mov
ja
add
sahf
aas
cs
dec
arpl
inc
and
push
pop
imul
std
xchg
xor
xor
add
movs
ret
loop
lods
xlat
pop
lods
push
daa
mov
mov
mov
fild
xor
je
arpl
inc
aam
jbe
push
fidiv
mov
(bad)
mov
jne
sbb
stc
xchg
or
sub
aaa
inc
jge
clc
dec
fidivr
fmul
and
or
lods
cwde
xchg
mov
aas
sub
out
out
mov
adc
mov
js
retf
ins
in
cmps
mov
and
int
ja
dec
inc
mov
les
and
fucomi
idiv
xchg
bound
mov
pop
js
jl
xor
mov
js
jge
iret
lahf
lds
cmp
pop
push
iret
neg
and
fs
pop
add
int3
popf
xchg
leave
jb
daa
push
mov
mov
and
and
repnz
jmp
push
mov
dec
loop
add
es
int
pushf
neg
push
jecxz
xor
cdq
dec
dec
push
icebp
and
sar
sti
pop
dec
dec
mov
add
mov
and
outs
sub
ret
loop
push
test
retf
cmps
(bad)
mov
jle
imul
fsub
mov
xchg
lea
cmp
sbb
lods
xor
in
sbb
inc
push
repz
jmp
out
aam
cli
and
dec
push
scas
dec
not
call
mov
push
sub
aaa
jge
sahf
adc
cld
add
sar
push
mov
mov
lahf
and
ror
aam
mov
test
leave
cmc
rcl
xchg
or
push
call
sub
nop
pop
jge
push
jnp
aam
mov
and
outs
scas
jl
inc
mov
hlt
cdq
mov
mov
push
sub
jb
ja
inc
arpl
sbb
int
hlt
mov
mov
fiadd
mov
fiadd
hlt
aas
clc
push
and
mov
mov
sbb
push
imul
ret
fnstcw
gs
sahf
cld
int3
xchg
mov
pop
pop
push
loopne
adc
into
mov
lahf
(bad)
push
jo
pop
pusha
mov
jp
cmps
repz
xor
aaa
jmp
add
push
out
pop
pushf
and
or
jle
lock
ret
sti
sbb
fst
mov
sub
movs
arpl
fistp
mov
test
fld
jns
mov
push
or
out
sbb
shl
addr16
and
not
jl
mov
dec
xor
inc
clc
rcl
mov
in
(bad)
xchg
movs
or
or
push
cdq
arpl
pop
dec
adc
in
cmp
hlt
xchg
repnz
jp
xor
and
cmp
push
adc
add
jp
or
aam
sub
(bad)
cdq
dec
xchg
pusha
adc
pop
cdq
loope
stos
pop
int3
not
cmp
movs
sbb
dec
(bad)
jmp
mov
mov
or
sub
push
pop
jne
add
fdiv
xchg
mov
test
mov
mov
out
cmp
fadd
xchg
jg
and
push
or
push
fwait
arpl
push
sub
(bad)
popf
call
inc
imul
imul
je
sub
ss
fidiv
jo
sti
xor
aam
mov
mov
popf
rcl
xor
mov
adc
les
mov
repnz
and
cld
cmp
mov
and
ins
xchg
sbb
sub
or
in
ret
add
test
mov
mov
adc
mul
aad
jae
mov
dec
adc
inc
inc
into
cmp
fxam
pop
retf
or
ja
pop
mov
xlat
das
sbb
jl
lea
sub
jnp
cmps
fcomp
imul
xchg
imul
sbb
adc
icebp
gs
cmp
icebp
aad
mov
dec
dec
cdq
fdivr
int3
add
ins
adc
retf
out
adc
lods
mov
es
dec
xor
pushf
push
jno
hlt
mov
mov
add
cmps
xor
push
push
mov
int
sbb
mov
xchg
nop
scas
inc
pop
pushf
mov
jae
out
xor
call
adc
test
cs
dec
add
pop
jns
out
or
xor
mov
push
inc
mov
xchg
xchg
cmp
(bad)
fcomp
xchg
fild
cmp
stos
shr
pop
call
das
xchg
repnz
sub
sbb
retf
fsub
leave
gs
jne
faddp
je
jmp
jle
adc
or
jno
retf
loope
div
push
ss
movs
jle
hlt
test
jp
and
js
and
jle
nop
nop
xor
xchg
in
jle
cmc
in
jae
outs
rcl
lahf
lock
imul
inc
mov
pop
in
or
inc
inc
daa
cld
sub
movs
es
jmp
and
cmp
pop
dec
xchg
jbe
aad
add
sbb
push
sti
(bad)
setle
push
(bad)
xchg
bound
lods
je
mov
adc
fst
leave
daa
xchg
imul
ins
dec
sahf
jmp
mov
adc
scas
jbe
repnz
aam
dec
cmp
mov
es
or
dec
cld
sbb
dec
movs
scas
mov
sub
in
mov
xlat
dec
cmc
xchg
or
ret
adc
inc
jno
inc
adc
mov
test
jge
scas
loope
mov
(bad)
in
jle
mov
push
hlt
imul
test
jle
retf
cwde
xchg
xor
mov
sbb
inc
pop
cmps
fs
stc
cld
jg
in
movs
retf
jnp
mov
call
inc
jge
popf
cmp
(bad)
pop
xor
aad
out
ds
cmps
xor
mov
sti
push
scas
sbb
stos
test
repz
test
das
inc
movs
ficomp
popf
sub
cmp
iret
xor
leave
xor
iret
pop
xor
bound
push
dec
cmps
mov
out
adc
sub
cmp
in
std
pushf
xor
add
div
ror
data16
and
push
or
xchg
dec
cmp
fiadd
jb
pop
mov
pushw
push
int3
mov
mov
shl
cmp
xor
std
mov
dec
and
in
jne
(bad)
fs
call
mov
mov
inc
xor
call
sbb
repnz
jmp
sbb
push
sub
inc
adc
sub
pop
shl
arpl
out
mov
data16
bound
fild
cmp
mov
lds
es
or
popf
fcom
loopne
push
outs
out
cmc
test
mov
pop
push
outs
pop
xor
pushf
sub
adc
es
adc
jle
cmp
jae
enter
stc
sub
mov
jbe
cdq
int
cmp
dec
jno
dec
and
add
test
cmps
jbe
jg
bound
iret
je
adc
pop
fisttp
out
pop
ins
and
mov
pushf
fcom
scas
fwait
push
ret
test
xchg
inc
movs
ret
repz
lock
mov
mov
je
std
adc
mov
xchg
dec
jbe
adc
int3
xor
data16
clc
outs
sahf
gs
sbb
inc
xor
and
dec
out
call
pop
xor
dec
push
dec
out
sar
jmp
jle
sbb
or
cs
push
adc
aam
dec
in
mov
repz
mov
add
jmp
pop
cmp
leave
cmp
movs
xor
cmp
and
jo
jno
aam
mov
in
mov
adc
xchg
mov
rcl
cmc
mov
push
fisubr
mov
inc
leave
jg
das
call
inc
or
inc
jne
and
mov
pop
je
xor
in
mov
or
push
iret
sbb
repnz
mov
sar
sub
dec
mov
adc
sub
pop
inc
stos
imul
add
jmp
mul
ret
je
lock
mov
sar
push
cmps
jmp
rcl
add
dec
hlt
or
xor
and
ins
outs
push
aaa
addr16
or
mov
mov
js
dec
ins
push
add
push
loope
enter
cmp
sbb
rcr
loope
enter
loopne
pop
mov
or
mov
sbb
es
inc
mov
ins
xor
aaa
adc
mov
add
cmc
dec
lock
inc
cmps
add
mov
mov
adc
ins
fimul
test
movs
test
(bad)
xor
xchg
(bad)
dec
and
out
pushf
jmp
sub
adc
inc
movs
inc
inc
cmp
mov
dec
add
test
int
pop
sar
xchg
lock
pop
ss
mov
mov
xchg
lods
scas
std
cmp
cmp
add
int
test
mov
mov
leave
and
movs
mov
retf
push
std
sbb
jg
and
and
add
mov
lea
push
imul
or
sub
pop
sub
pop
inc
push
push
jmp
jg
jnp
fstp
bound
daa
pushf
stc
mov
pop
inc
mov
pushf
mov
and
(bad)
xor
pop
rcl
sub
mov
out
repnz
mov
std
mov
sbb
popf
std
xchg
retf
mov
pop
cmp
inc
retf
int
lahf
and
mov
addr16
add
xchg
adc
mov
or
in
jnp
pop
movs
add
fcmovb
mov
mov
mov
push
call
jle
dec
pop
sub
and
and
btr
hlt
push
mov
jb
or
fmul
fadd
ffree
aad
mov
xor
mov
push
push
adc
cwde
inc
fistp
daa
add
and
pop
or
retf
xor
and
out
mov
sub
jae
pop
add
sbb
cld
and
inc
movs
sti
rcr
push
sub
or
js
out
mov
jecxz
fld
aam
pop
ror
add
fcomp
mov
jbe
jne
pop
adc
sub
jl
popf
jl
jmp
fcomp
aaa
(bad)
cmp
sti
addr16
ds
cmp
sbb
sub
jecxz
pop
adc
fld
mov
(bad)
adc
dec
jg
xchg
sub
repz
movs
into
sub
lods
scas
adc
mov
xchg
ror
xchg
pop
jae
das
xchg
xor
fisubr
call
popf
fs
adc
pop
sbb
xor
fucom
add
xor
jl
mov
jns
push
(bad)
xchg
add
das
fdivr
and
or
mov
aaa
jae
adc
into
lock
es
mov
mov
addr16
ficom
lahf
lahf
in
adc
lahf
mov
(bad)
loope
pop
loope
pop
cmp
cdq
adc
add
cmp
retf
adc
sub
dec
jne
pop
or
jns
clc
repnz
jae
push
jmp
sub
das
imul
(bad)
or
mov
jle
call
pop
stos
sub
jle
or
xchg
ins
push
lahf
push
cmp
(bad)
cmps
lahf
dec
daa
cwde
inc
pop
(bad)
mov
sbb
inc
push
in
(bad)
pop
ss
mov
sbb
jae
jnp
js
retf
adc
scas
icebp
xor
inc
pop
retfw
neg
pop
mov
test
mov
sahf
xchg
mov
mov
cmp
je
outs
pop
ins
mov
lock
dec
pop
out
sbb
stc
jne
adc
fisub
jmp
addr16
fild
dec
or
mov
or
jmp
dec
je
mov
daa
mov
xor
sahf
cmps
out
push
retf
jmp
arpl
dec
aaa
push
push
addr16
mov
dec
stos
fwait
scas
cmps
inc
fstp
and
dec
cmp
mov
sub
inc
ficom
or
mov
int3
stc
pop
and
cmps
push
add
adc
je
mov
jnp
mov
test
or
ret
mov
cmc
lods
lods
and
out
jae
jne
popf
loope
iret
pop
test
mov
cdq
std
std
mov
and
mov
icebp
retf
dec
adc
mov
test
call
inc
adc
dec
inc
pop
mov
dec
(bad)
sar
cwde
sub
rcr
loopne
call
add
sbb
xchg
arpl
out
dec
jge
sti
and
aas
nop
mov
inc
and
or
in
retf
add
cmps
xchg
jge
push
mov
mov
jnp
inc
pop
(bad)
in
into
shr
cmp
ss
mov
jae
xchg
jl
push
push
inc
sub
clc
inc
jbe
imul
inc
aas
stos
or
adc
clc
sbb
mov
adc
repz
mov
jge
lods
int
push
leave
in
loopne
lods
sub
popa
jg
ret
inc
mov
call
jge
push
pop
movs
(bad)
outs
in
(bad)
sti
add
ja
push
or
pop
rcr
mov
retf
enter
(bad)
cmc
stos
lahf
jnp
idiv
ret
loop
or
adc
rcr
fcom
push
lahf
sbb
pop
ins
jg
out
jmp
in
jns
cmp
jno
and
ret
sbb
add
mov
mov
jbe
adc
stos
add
pop
pop
cmc
stos
out
adc
rcr
pop
dec
cmp
or
int
mov
mul
inc
iret
nop
adc
fdiv
add
je
mov
xor
inc
sub
test
adc
cs
push
es
sbb
mov
sti
shl
mov
pop
scas
sub
inc
and
call
mov
or
and
loope
xlat
xor
mov
inc
xchg
ret
dec
inc
data16
push
aam
dec
inc
(bad)
add
adc
add
and
retf
(bad)
sbb
jae
(bad)
(bad)
nop
xchg
add
dec
lods
mov
in
out
lock
sub
cmps
or
pop
add
fisttp
push
dec
(bad)
stos
mov
mov
or
inc
and
mov
sub
sub
push
lea
pop
push
xor
ja
or
scas
(bad)
movs
ins
ins
sbb
mov
pushf
fbld
mov
and
ds
outs
mov
leave
mov
lock
add
cmp
adc
add
int3
adc
in
push
inc
and
(bad)
dec
jecxz
cmp
(bad)
sub
sub
add
out
fdiv
mov
and
or
arpl
inc
push
sti
jnp
ds
cmc
arpl
push
adc
ftst
outs
test
pop
xchg
pop
call
ror
rcr
add
pusha
cmp
inc
mov
jmp
gs
scas
xor
jp
stos
pop
jle
inc
jl
add
adc
sub
mov
bound
popf
ja
sub
and
in
lock
cmps
push
adc
push
sbb
imul
test
or
dec
aad
popa
sbb
std
out
cmp
sub
mov
in
out
cmp
push
mov
nop
(bad)
jp
sub
add
bound
push
out
aad
fld
mov
xor
mov
xchg
outs
cmp
jecxz
and
add
xor
sar
retf
mov
and
mov
fisubr
mov
mov
lds
movs
ret
cmp
xchg
aad
shr
inc
loop
dec
mov
test
cmp
ds
pop
pop
loopne
sub
or
push
sub
dec
push
mov
sar
jmp
ret
mov
fild
xchg
out
jmp
lods
int
std
sub
mov
sub
int3
push
jns
lds
pop
mov
cmps
retf
mov
sub
data16
sqrtps
dec
inc
mov
dec
add
sub
xor
push
fist
mov
daa
pop
jp
fst
push
mov
das
jmp
dec
aas
mov
xchg
mov
frstor
dec
dec
fcom
push
push
mov
push
mov
test
bound
inc
xchg
jg
cmp
mov
inc
mov
fiadd
into
ftst
jns
ja
xor
movs
mov
mov
jnp
xlat
cmp
pop
sub
jp
lock
add
jp
das
xor
js
fisubr
push
or
(bad)
jmp
jg
or
pop
popf
mov
mov
aas
aam
push
jge
dec
movs
add
jmp
ror
int3
inc
ret
test
xchg
xchg
mov
fucom
loop
movs
aas
dec
fimul
cmps
(bad)
movs
pop
mov
push
inc
add
xor
repnz
dec
in
gs
outs
retf
in
movs
dec
sub
pop
cwde
mov
pop
scas
lock
push
adc
dec
shr
stos
in
and
ins
sub
nop
fsubr
es
call
fmul
cmp
xor
mov
mov
cmp
dec
jnp
adc
loop
adc
cmp
xchg
xchg
push
addr16
and
push
push
xor
leave
sbb
(bad)
and
mov
mov
jno
or
pop
popa
test
(bad)
cmp
dec
dec
cmp
movs
push
mov
(bad)
cli
cmp
mov
sahf
loopne
pop
retf
mov
mov
fcom
hlt
sub
pop
out
int
inc
pop
repnz
enter
ins
xchg
adc
add
cmp
jae
test
retf
add
cmp
mov
adc
popa
mov
inc
adc
cld
sar
out
mov
and
dec
sbb
shl
faddp
iret
mov
jb
sar
sbb
popa
pop
dec
add
shl
lods
in
bound
xchg
icebp
(bad)
ins
out
jle
and
push
test
int3
mov
pop
ins
pop
inc
fild
xchg
jb
pop
enter
fsub
cli
(bad)
out
stc
ret
and
jmp
pop
popf
inc
xchg
cmp
dec
xor
push
scas
(bad)
jle
xchg
push
inc
loopne
sub
inc
fstp
jg
sub
loopne
inc
and
ins
aad
xchg
dec
pop
das
sub
rcr
mov
or
xchg
mov
pcmpgtd
pop
pop
ficomp
xchg
jnp
cli
mov
stos
lahf
add
jge
repz
xchg
fwait
or
aaa
movs
and
pop
ins
mov
or
inc
loopne
int3
sar
sub
cmps
mov
push
(bad)
rcl
aas
jmp
ficom
sbb
pop
out
mov
push
add
jo
mov
dec
cli
push
inc
aaa
sbb
cmps
fcomp
adc
jmp
es
retf
or
and
push
adc
es
iret
sub
mov
(bad)
std
daa
mov
test
inc
sbb
inc
(bad)
fcomp
loope
jo
dec
lds
jno
call
xchg
inc
mov
mov
sub
sti
(bad)
gs
mov
mov
imul
or
sbb
adc
std
pop
push
sbb
xlat
retf
cmp
nop
ret
dec
imul
shl
pop
in
push
mov
mov
push
xchg
outs
pop
add
pushf
or
retf
loop
xor
mov
push
sbb
es
std
das
fld
fisub
inc
test
mov
adc
(bad)
or
or
sub
aad
and
mov
mov
dec
hlt
cmps
ja
add
fisubr
dec
jle
sbb
ins
sbb
add
retf
dec
push
mov
setl
fimul
push
adc
or
retf
stc
sub
aam
sar
sub
shr
movs
test
test
dec
dec
lods
mov
mov
aad
scas
sti
push
mov
pop
adc
inc
inc
cmp
sar
and
push
mov
or
dec
mov
sti
daa
test
xor
lods
jns
sahf
fmul
ins
jo
call
xor
adc
mov
cmp
dec
daa
test
mov
fcmovu
adc
sub
lds
fwait
daa
nop
sar
push
(bad)
out
call
movs
imul
fisub
and
lods
ins
push
and
sub
(bad)
and
and
dec
sti
jmp
inc
popf
cdq
inc
xor
outs
sti
xchg
cmp
mov
scas
aaa
repnz
adc
xor
and
sub
mov
call
aam
xor
and
xchg
es
dec
and
cmp
rol
or
and
and
pop
or
aaa
outs
ret
add
loop
cmp
pusha
adc
pop
and
(bad)
and
imul
cli
mov
xchg
out
xor
inc
sahf
jb
jecxz
sub
imul
jbe
call
call
pop
mov
and
je
push
daa
push
aam
sub
(bad)
mov
push
push
sbb
push
xchg
and
in
sub
sbb
xor
sti
jp
fldcw
adc
outs
test
scas
inc
icebp
hlt
mov
sbb
aad
push
mov
cld
cmp
mov
call
(bad)
pop
rol
mov
mov
aam
pop
fwait
mov
jae
push
sub
push
ins
push
loopne
pop
ins
aad
lods
out
movs
mov
mov
add
dec
push
in
retf
stc
jle
add
sub
dec
add
sbb
dec
test
outs
jl
dec
mov
mov
stc
adc
or
rol
gs
adc
in
sub
mov
jmp
mov
stos
daa
loope
jle
jl
pop
les
mov
jmp
movs
fdivr
cmp
xor
jge
js
imul
ja
in
aas
xor
dec
mov
xor
out
mov
mov
inc
push
ja
gs
fwait
pushf
inc
movs
(bad)
xor
inc
add
mov
stos
idiv
jne
xor
push
or
push
adc
cmp
cmp
push
jecxz
fcomp
cli
cmp
dec
xor
pop
sbb
jae
cmp
jge
iret
mov
or
sbb
pop
jle
jbe
jl
les
scas
jns
mov
rcr
aaa
sub
clc
jl
add
push
je
or
(bad)
fdivr
inc
out
mov
or
and
add
mov
dec
test
mov
aad
(bad)
aaa
or
push
xchg
outs
adc
popa
(bad)
mov
sbb
out
xor
xor
jmp
jg
and
add
lea
adc
out
mov
imul
pop
(bad)
xchg
pop
mov
shl
ins
xchg
inc
inc
and
jno
in
imul
imul
and
adc
test
jno
sub
and
(bad)
mov
dec
xor
jne
call
push
pop
shl
sbb
sub
mov
inc
jl
jo
and
in
mov
jge
in
pop
jb
inc
rcl
(bad)
add
xor
sbb
addr16
repnz
in
xor
fistp
xlat
jg
jbe
cmps
cld
xchg
mov
mov
mov
aaa
sti
mov
pop
add
dec
mov
dec
aad
data16
xchg
test
xchg
sbb
push
imul
xchg
stc
lock
adc
mov
dec
adc
je
int
pop
mov
out
mov
mov
xor
ins
mov
dec
mov
xchg
retf
sti
mov
das
or
jne
test
mov
and
push
sti
test
dec
xchg
out
ins
sub
aam
movzx
sub
pop
ss
retf
ficomp
fidivr
std
xor
mov
lods
sbb
mov
jp
push
sbb
pop
sahf
test
jecxz
inc
mov
push
xor
(bad)
lahf
lods
nop
idiv
pop
or
out
in
icebp
sbb
mov
cmp
sbb
mov
xchg
and
in
xchg
je
pusha
and
call
add
inc
jge
xor
mov
lods
sbb
ss
das
aaa
and
jmp
inc
pop
(bad)
loopne
push
cmps
imul
je
movs
adc
push
sbb
mov
mov
mov
mov
aad
loop
sti
cmps
ror
and
push
fs
mov
ins
lahf
imul
aam
sbb
adc
push
fdivr
dec
cmp
imul
in
popf
icebp
scas
mov
icebp
std
xchg
pop
call
xchg
add
and
or
pushf
fadd
fidiv
xchg
stos
jb
fimul
lock
out
mov
shl
xchg
pusha
sub
in
fisttp
hlt
or
push
sbb
outs
clc
mov
adc
scas
push
push
retf
dec
repnz
jge
daa
jo
add
cmp
out
fs
cmp
retf
push
popf
and
retf
popa
and
xchg
xor
jmp
jo
inc
mov
int3
arpl
or
mov
jbe
or
lods
test
xchg
xchg
fldenv
call
dec
sub
xchg
push
fdivr
scas
inc
add
adc
sahf
into
mov
cmps
and
pop
mov
sbb
mul
adc
rol
into
and
jle
fisttp
aaa
mov
ins
lahf
out
cs
adc
ds
or
cdq
icebp
aaa
adc
scas
jmp
or
mov
pop
ficom
dec
mul
and
(bad)
mov
cdq
dec
xor
pop
push
in
jge
dec
(bad)
aad
leave
sub
inc
cmc
mov
pextrw
push
cmps
mov
sbb
loop
jae
jp
dec
inc
inc
push
fwait
or
jbe
loope
xchg
and
in
inc
je
fst
lock
push
cli
xlat
add
out
dec
lea
addr16
xchg
pusha
sub
inc
adc
into
ja
pop
and
int3
repnz
sbb
xchg
sub
lahf
adc
test
mov
sbb
jecxz
sub
dec
pop
popf
and
mov
inc
sbb
push
daa
push
shl
add
outs
nop
push
fwait
lods
lods
sar
push
fisttp
aad
imul
out
addr16
jno
pop
push
jno
gs
mov
stc
movs
mov
(bad)
in
mov
aad
pop
sbb
jb
iret
cmp
and
xchg
ret
and
fsubrp
push
pop
sbb
inc
scas
mov
mov
cwde
jmp
cmc
pop
out
push
add
bound
loop
aad
neg
pop
sub
loope
out
into
stc
dec
add
pop
lods
sub
pop
and
mov
ficomp
fcomp
repz
scas
and
test
adc
scas
ret
or
mov
xchg
retf
inc
add
add
xor
jg
sub
cmc
sbb
retf
clc
lods
push
xchg
push
inc
push
lods
mov
mov
dec
xlat
enter
int
out
xor
jl
or
mov
aam
cmp
(bad)
add
jmp
outs
jmp
pop
push
pop
inc
jl
push
sub
aaa
bound
jb
fsub
xchg
stos
dec
push
jge
stc
push
aad
fs
push
jmp
lds
ja
mov
mov
mov
dec
pop
push
dec
mov
jo
stos
sbb
cmps
std
xor
dec
add
xchg
sbb
xchg
mov
push
jbe
mov
jle
jmp
cmps
enter
out
adc
les
outs
arpl
mov
push
xchg
push
adc
mov
inc
push
jns
clc
cmps
add
in
sbb
xchg
xor
inc
sbb
aas
xchg
dec
movs
in
sub
(bad)
call
cld
ins
cmp
fpatan
jno
sbb
xchg
mov
lea
xor
arpl
jmp
dec
and
ins
adc
mov
js
test
sub
clc
pop
mov
or
xor
fidivr
imul
fs
mov
jp
rcl
bound
xor
adc
movs
jl
xchg
pop
pop
inc
cdq
not
cmp
test
sub
dec
arpl
mov
aam
mov
push
mov
lock
retf
mov
imul
scas
out
sub
push
or
xchg
mov
ret
jo
cmc
jl
pop
stc
xchg
out
dec
mov
push
xchg
lahf
inc
jmp
jb
nop
sub
call
fcmove
aaa
sub
fst
or
push
mov
jne
scas
mov
imul
xchg
ss
cdq
pop
xchg
(bad)
(bad)
scas
xchg
xor
push
jp
nop
out
cmp
cmp
jno
jne
pop
arpl
jmp
sbb
mov
js
push
icebp
in
lahf
outs
adc
xor
mov
nop
(bad)
add
aam
call
push
js
fwait
mov
sbb
test
sub
adc
and
inc
imul
inc
fwait
ins
mov
xchg
ins
dec
test
push
lock
leave
(bad)
cld
clc
mov
int3
pop
adc
ds
stos
ficomp
add
xchg
xchg
xor
cli
push
(bad)
mov
inc
dec
xchg
test
inc
sbb
ss
or
and
xchg
mov
jl
xor
and
lods
xchg
mov
mov
push
gs
stc
xchg
mov
push
rdpmc
or
add
jne
push
jae
xchg
ficomp
mov
dec
loope
inc
lock
cmp
sub
ins
dec
push
mov
iret
fidivr
nop
call
ret
xchg
mov
cmp
cs
jbe
(bad)
call
test
jp
add
jb
shl
fmul
lahf
fmulp
je
push
mov
adc
mov
or
out
mov
arpl
jp
movs
shl
addr16
push
stos
mov
mov
xchg
stos
stc
mov
dec
sbb
out
sbb
and
mov
adc
fimul
(bad)
rcr
retf
sbb
push
pop
out
ror
fs
jns
and
mov
fadd
clc
mov
adc
gs
mov
mov
mov
cmp
mov
mov
aas
jnp
std
adc
adc
push
das
add
aas
iret
lods
int3
and
mov
or
dec
ret
out
cs
cmp
jl
dec
ret
not
mov
or
aaa
cmps
mov
add
pushf
sbb
(bad)
dec
data16
mov
outs
push
dec
test
mov
or
add
and
mov
js
in
xor
mov
test
push
ins
push
jno
in
dec
jmp
jmp
retf
test
daa
mov
add
in
jecxz
fcmovb
dec
inc
push
jmp
ja
push
xchg
pop
(bad)
aam
lock
dec
lods
mov
and
adc
fwait
jmp
jg
das
test
sahf
fld
sub
call
xchg
or
add
xor
gs
mov
pop
push
loope
xlat
repnz
sbb
or
iret
and
les
xchg
cmps
mov
xchg
adc
push
add
adc
sub
fild
sahf
sbb
mov
pop
pusha
mov
lods
mov
shl
shl
push
and
add
rcl
fwait
lods
mov
or
jmp
iret
push
lods
sub
pop
ss
push
loopne
sbb
and
inc
std
inc
dec
mov
sub
popa
test
ret
pop
mov
mov
pop
imul
int3
sub
mov
jmp
add
movs
cmp
cld
sub
adc
call
pushf
jnp
test
popf
xor
test
and
bound
cli
call
daa
cmovb
jge
sti
in
retf
push
inc
pushf
fldcw
or
pop
sbb
and
rol
xor
push
adc
sti
in
cmp
enter
jle
cmp
cmc
sbb
imul
data16
jno
and
pop
jnp
mov
rcr
fmul
cmp
movs
stos
inc
pop
enter
shl
push
jle
or
arpl
jmp
jo
or
pushf
cmps
inc
push
ret
sbb
xor
lods
test
jmp
div
mov
sbb
jp
jmp
fist
test
mov
mov
fst
fld
les
xchg
out
inc
mov
xchg
push
shr
push
jmp
and
pop
jecxz
push
nop
arpl
into
dec
pop
sub
adc
(bad)
mov
sub
dec
aam
cmps
adc
add
pushf
mov
adc
in
(bad)
mov
lock
loopne
pusha
loopne
dec
xchg
hlt
jmp
push
and
pop
xchg
(bad)
test
or
dec
jmp
test
dec
mov
(bad)
adc
push
cmps
cs
jo
inc
nop
dec
lea
push
mov
mov
sub
pop
adc
jo
inc
mov
sbb
in
adc
js
imul
scas
repnz
cmp
inc
xchg
xchg
mov
aaa
mov
push
xchg
mov
cmp
or
add
pop
cdq
cld
daa
es
lods
inc
test
jl
mov
jnp
cmc
mov
sub
add
(bad)
cs
and
jb
mov
and
xchg
(bad)
scas
(bad)
into
jmp
sbb
(bad)
mov
add
jp
inc
fwait
pop
push
or
adc
stos
pop
outs
test
mov
test
push
popf
cmp
mov
xchg
jge
call
sbb
xor
pop
ins
sub
pop
scas
ret
ins
dec
inc
push
pusha
std
or
aas
jecxz
pop
rcl
loope
fbld
inc
dec
xor
jecxz
push
mov
lods
fsub
sahf
mov
imul
repz
loopne
cmps
dec
lock
adc
arpl
xchg
dec
mov
inc
jnp
int
jnp
xlat
test
shr
fdivrp
sbb
dec
(bad)
push
les
xchg
mov
and
jbe
or
xchg
sub
adc
fwait
mov
adc
popa
imul
add
cmp
outs
mul
sub
or
fs
outs
sub
mov
sub
popa
leave
push
jmp
int
loopne
fadd
pop
pusha
push
aas
mov
jecxz
push
mov
dec
arpl
add
hlt
rcl
inc
popf
xchg
imul
jp
retf
stos
sbb
push
mov
pop
arpl
pop
add
movs
sbb
pop
jmp
sbb
sbb
mov
mov
lahf
(bad)
or
js
pushf
lock
out
pop
cmp
xor
ds
cli
movs
or
xor
push
cmc
and
push
test
shl
sub
cmp
jmp
enter
mov
mov
call
add
movs
and
push
adc
aaa
inc
(bad)
mov
sbb
add
arpl
sbb
xchg
test
and
(bad)
mov
mov
int3
or
fwait
jno
ss
ret
jge
iret
js
xlat
mov
xchg
dec
mul
sbb
add
(bad)
jp
int3
in
push
mov
int3
jne
ins
arpl
sub
aam
rol
arpl
popf
ins
stos
or
and
dec
mov
test
movs
cmps
inc
popa
or
inc
pop
test
jnp
jae
sub
gs
call
or
pop
jno
push
ret
sub
xchg
dec
enter
add
push
sahf
ret
ds
jns
inc
mov
test
mov
jmp
push
cmps
xor
sbb
leave
fcomp
mov
jmp
call
hlt
or
in
dec
sbb
cmp
inc
fsubr
or
xor
fcomp
sub
fmul
fst
cld
cmps
pop
arpl
fsubr
cmp
out
jmp
mov
jns
outs
cli
mov
sbb
jl
mov
sbb
out
inc
mov
imul
xchg
xor
ficom
ret
mov
inc
jp
ficom
aas
fst
aaa
ret
jl
jnp
les
and
retf
xor
jne
(bad)
and
mov
xor
push
dec
stc
mov
mul
cld
popa
idiv
test
mov
mov
and
cdq
mov
or
fadd
mov
retf
add
inc
sbb
cmp
inc
mov
mov
mov
std
into
xchg
push
shr
pop
stos
std
jne
ficom
sbb
js
out
xchg
jl
mov
xchg
repnz
mov
(bad)
mov
(bad)
gs
lock
popf
mov
in
imul
or
sub
(bad)
data16
or
pop
mov
push
xor
mov
mov
test
(bad)
add
les
inc
pusha
fidiv
inc
int
jg
cmp
xchg
jns
dec
add
xor
out
dec
jmp
sbb
push
mov
sahf
int
sub
ds
aaa
mov
cmps
pop
clc
sub
pop
int3
fcmovnbe
sbb
jae
mov
in
push
arpl
mov
xchg
sub
jnp
ss
jg
into
xchg
pop
push
(bad)
imul
xor
test
xchg
fdivr
or
mov
xchg
and
or
xchg
loop
daa
xor
push
inc
jp
stos
call
iret
adc
pop
push
dec
push
inc
mov
xor
pop
test
pop
pop
fsub
sub
xchg
cmp
pop
or
push
xor
jp
js
fxch
or
and
in
xor
sub
xchg
xor
movs
shl
adc
jl
pop
movs
mov
and
popw
sub
call
or
out
mov
jecxz
cld
rcr
or
push
lea
mov
jnp
(bad)
call
xchg
mov
sbb
adc
adc
dec
dec
pop
in
jmp
jp
xchg
inc
std
push
or
arpl
xor
imul
loopne
cmp
in
push
mov
outs
add
push
push
pusha
outs
dec
mov
popf
xchg
mov
fcom
daa
push
fdiv
pushf
push
lahf
or
ins
outs
pop
cmps
int3
dec
aam
into
xchg
sar
pop
pop
jns
test
mov
jle
rol
mov
nop
loop
repz
mov
cmp
(bad)
enter
push
jbe
adc
call
lahf
sub
ja
pusha
xchg
les
ja
push
inc
cmp
push
stc
(bad)
xchg
sti
mov
lds
fsubr
mov
push
sub
adc
jmp
jae
add
loop
and
inc
(bad)
ret
or
sbb
addr16
arpl
inc
jg
nop
nop
ret
aaa
sbb
cli
xor
out
pop
pop
mov
adc
jo
aaa
or
cmps
xor
call
mov
(bad)
or
xchg
xchg
fsubr
je
popa
pushf
test
adc
pop
into
jae
adc
mov
jmp
inc
add
cmc
jb
bound
cli
sbb
sti
mov
adc
div
add
sub
sbb
pushf
loope
fisttp
inc
mov
(bad)
call
pop
arpl
out
jecxz
popa
mov
and
fwait
rol
iret
xor
mov
mov
test
dec
jne
sbb
sub
neg
retf
sti
push
out
icebp
xchg
inc
ja
(bad)
fiadd
jo
xlat
cdq
adc
mov
test
enter
lods
fsub
rcr
cmps
add
fsub
bound
jge
pop
cmc
fcomp
cs
rcl
xor
inc
and
xchg
inc
aas
(bad)
icebp
fld
call
mov
test
and
popf
retf
inc
out
fwait
les
call
jo
cmp
mov
mov
(bad)
and
mov
cs
(bad)
fadd
cmp
in
xor
out
je
cmp
dec
cwde
dec
cmps
stc
std
fdiv
mov
pop
stos
mov
dec
mov
mov
ja
js
std
xor
loopne
ins
mov
bound
sbb
cmp
call
test
jl
pop
bound
scas
sbb
pushf
outs
sub
pop
pop
cmp
ds
dec
mov
imul
gs
ja
mov
cmps
stos
inc
push
mov
ds
test
fimul
hlt
(bad)
mov
cdq
mov
dec
(bad)
mov
repz
sbb
in
out
jp
hlt
pop
or
mov
cmp
in
les
call
pop
jp
push
add
ss
lock
jg
data16
mov
inc
rcl
lock
loope
test
mov
or
clc
add
inc
imul
jge
jb
mov
adc
inc
fnstcw
outs
div
cmp
je
xor
arpl
mul
je
ins
ret
inc
cmps
pop
ret
popa
gs
jmp
sbb
dec
sub
adc
xchg
push
adc
xchg
adc
jl
lods
hlt
mov
mov
inc
idiv
sbb
nop
mov
jo
sub
out
cli
jnp
jmp
stos
pop
js
xor
mov
in
jno
pop
mov
stos
push
addr16
repz
jp
and
in
mov
jge
mov
sbb
sti
jg
jecxz
rcr
cs
xor
mov
inc
jmp
sbb
in
jecxz
fadd
inc
loope
lods
mov
xor
or
ins
jno
pop
mov
dec
imul
mov
and
mov
fcom
push
lods
in
ror
mov
push
xchg
jmp
outs
outs
loope
nop
retf
pushf
ja
enter
pushf
xor
(bad)
mov
dec
xor
(bad)
jl
and
xchg
jns
outs
out
push
call
pusha
mov
pusha
fcom
xchg
and
icebp
enter
stc
mov
pop
xor
lea
cwde
hlt
test
add
push
or
mov
in
inc
int3
dec
sub
ss
arpl
movs
xor
loope
cmp
lock
inc
mov
adc
push
and
push
cmovb
jnp
push
jo
push
mov
out
stos
imul
jmp
and
and
retf
mov
sahf
push
outs
jbe
nop
les
jg
test
or
pop
ror
cmp
and
jne
(bad)
das
ins
xchg
in
jp
jg
shl
ret
ins
leave
cmps
and
enter
fimul
nop
lds
cmp
out
adc
jo
and
je
cmp
push
add
cli
ins
retf
lahf
pop
ret
lods
hlt
and
xchg
repz
mov
test
enter
ds
ror
call
call
dec
push
add
aad
sbb
in
mov
pop
dec
push
or
lods
pop
cmp
in
jae
mov
jp
addr16
adc
xchg
dec
out
pop
inc
dec
dec
arpl
les
loopne
fstp
add
call
test
sub
lods
ret
call
call
sub
xchg
fistp
cmp
fcmovnbe
outs
adc
gs
mov
in
mov
push
xchg
sub
xchg
mov
ret
(bad)
sub
stos
xlat
lds
mov
fwait
jg
loop
lods
lods
scas
xchg
es
fsub
in
fsub
push
xor
lock
fidivr
popa
jge
jle
or
fst
inc
popa
jns
cmps
sub
mov
fs
loop
mov
cmps
xchg
sub
movs
adc
adc
pop
fistp
aad
dec
push
mov
int3
sar
xchg
cs
jbe
push
sbb
aad
mov
out
add
ss
movs
ins
sub
stos
xor
mov
inc
(bad)
dec
mov
lea
xchg
xchg
cld
test
cmp
cmp
retf
cmp
and
in
pop
sub
dec
mov
test
push
cmp
mov
les
mov
loop
pop
push
jl
mov
imul
fld
jmp
jl
pusha
mov
aas
and
lods
fwait
push
xchg
scas
sbb
xchg
sub
out
jne
in
ds
sbb
(bad)
jmp
bound
pusha
xchg
(bad)
addr16
ret
sbb
leave
(bad)
xor
inc
lock
push
mov
cmp
in
add
xlat
cmp
outs
mov
les
dec
lock
js
cmps
cdq
div
pop
pop
inc
shr
sub
xchg
inc
dec
cmp
dec
jge
sub
ss
push
xchg
jnp
into
cmps
xor
ins
pop
ret
ins
stc
int
jne
cli
push
out
pop
scas
iret
cmp
pop
and
xor
(bad)
sbb
(bad)
int
sub
cmp
adc
scas
ss
sbb
hlt
pop
mov
or
and
jb
(bad)
out
cmp
jge
lock
inc
popa
push
mov
cld
shl
jp
mov
inc
repnz
cli
mov
in
div
mov
out
test
loop
xchg
push
icebp
in
add
sub
data16
lock
cmps
mov
push
fstp
add
ins
std
sub
inc
or
cmps
lahf
mov
cmp
fidivr
jmp
jg
sbb
mov
mov
add
cmp
call
add
(bad)
lods
pusha
(bad)
stos
adc
push
jae
fiadd
jne
mov
inc
loope
or
lods
shl
push
cmc
std
xor
sub
xor
push
adc
cli
into
dec
pushf
jb
cmps
ret
sbb
sbb
test
mov
out
in
ror
jge
std
inc
xor
pop
adc
dec
xor
dec
popf
sbb
mov
xor
or
pushf
mov
dec
jecxz
ins
or
out
dec
outs
dec
in
popf
xchg
in
mov
test
lods
add
stc
leave
jae
loop
cdq
loopne
fisub
ret
scas
sub
pop
outs
inc
cmp
jl
adc
inc
push
pop
ins
jmp
leave
hlt
xlat
jno
jb
pop
adc
adc
scas
outs
push
jns
jmp
jbe
iret
mov
jge
jmp
sub
retf
in
ja
arpl
stc
jge
out
add
(bad)
mov
(bad)
dec
(bad)
out
jae
push
mov
outs
outs
in
in
lock
bound
shr
xlat
shl
scas
xchg
ret
leave
cmc
adc
cmc
add
shr
fcomp
bound
inc
dec
icebp
inc
fadd
dec
lock
mov
and
ret
pop
cmp
dec
sbb
inc
xchg
retf
movs
xchg
ret
pop
xchg
das
pop
les
xor
or
pop
push
dec
loope
mov
ins
rcr
lea
bound
lds
pop
sbb
inc
push
sahf
xchg
lds
xchg
mov
fsub
sbb
bound
add
test
std
out
(bad)
lds
lahf
add
std
aad
out
mov
inc
cmp
stos
cmps
and
test
(bad)
jbe
and
out
sahf
stc
jmp
mov
pop
mov
xchg
cmp
pop
jg
fistp
imul
jnp
std
add
sub
rol
mov
push
xchg
cmp
gs
sub
je
ror
mov
jno
idiv
ins
inc
add
sti
adc
jns
fist
sti
ss
mov
lahf
push
out
sub
dec
mov
fst
push
in
mov
xor
movs
stc
or
fisubr
mov
fisubr
test
push
mov
push
xchg
lods
mov
push
mov
imul
jb
push
ds
jmp
jecxz
mov
arpl
sub
add
jmp
test
mov
(bad)
in
pushf
pop
inc
out
pop
rol
mov
ss
out
in
add
sbb
sbb
and
xchg
(bad)
fild
repnz
lahf
mov
rcr
in
mov
adc
jge
sbb
pop
add
mov
(bad)
fiadd
jl
pushf
sub
push
addr16
xchg
ds
push
ret
scas
nop
dec
arpl
jmp
pop
xor
fsubr
rol
push
fsub
rol
jle
lods
jl
imul
xlat
(bad)
push
adc
jbe
(bad)
jmp
xor
jno
mov
pop
std
adc
sub
adc
retf
jo
ins
ret
fs
not
arpl
pushf
std
mov
out
xchg
pop
xchg
mov
and
mov
sbb
(bad)
out
pop
adc
mov
ss
pop
sub
cmp
dec
jbe
mov
sbb
mov
inc
sbb
jne
push
fwait
or
fwait
(bad)
outs
dec
fs
mov
stc
sub
push
test
ins
jns
outs
adc
mov
push
xor
mov
test
mov
push
ins
mov
jb
dec
scas
scas
mov
push
js
add
shl
repz
xor
out
mov
mov
fs
ins
xchg
call
dec
xor
cmp
test
std
test
adc
mov
dec
in
test
retf
js
and
or
add
xor
lock
mov
xor
push
test
inc
or
in
call
ss
arpl
test
mov
push
bound
and
xlat
movs
add
or
sub
push
pusha
or
dec
ja
or
pusha
xchg
pushf
movs
adc
jle
xchg
xchg
sub
inc
(bad)
repnz
mov
add
icebp
dec
ss
rol
js
xchg
mov
gs
inc
adc
cld
aam
popf
jecxz
gs
cmp
jp
scas
mov
sbb
pop
ins
call
rol
xor
jle
test
cli
pushf
test
scas
sub
(bad)
aad
movs
aas
mov
sub
or
mov
sti
hlt
(bad)
imul
mov
sbb
xchg
cmp
je
inc
xchg
pop
cmp
test
sbb
add
aaa
inc
sub
aam
fld
das
xchg
push
jg
sti
pop
pop
fst
sbb
mov
fisub
popf
sub
mov
jmp
xchg
and
repnz
cld
out
shl
pop
les
loope
push
mov
sub
jae
in
dec
adc
out
sub
std
or
loopne
sti
cmp
and
movs
or
mov
rcl
aaa
loopne
pop
cs
lahf
mov
mov
inc
sahf
ds
push
cmp
mov
mov
(bad)
std
ins
pop
xacquire
ror
je
loope
push
fwait
aaa
mov
jle
out
stc
in
cmp
mov
push
and
inc
or
aad
jmp
call
add
mov
and
push
jae
hlt
and
stc
xor
xor
and
sbb
push
inc
jle
pop
push
call
mov
push
mov
aad
ret
mov
out
push
(bad)
cmp
xor
je
fild
lods
call
mov
mov
mov
hlt
jp
push
inc
inc
inc
aad
mov
aam
test
cmc
inc
push
xlat
in
pop
xchg
push
or
clc
adc
std
or
mov
cmp
sbb
outs
sub
adc
inc
mov
scas
retf
js
push
jmp
shl
hlt
xor
pop
(bad)
mov
mov
mov
retf
push
stos
mov
pop
jecxz
int
or
sub
aaa
loop
jmp
in
and
mov
fiadd
(bad)
loopne
data16
push
pop
sub
test
loop
cmp
sbb
jl
fsubr
push
sub
sbb
sub
cwde
(bad)
rcr
mov
call
pop
call
shl
pop
(bad)
shl
sbb
int3
fldcw
scas
push
jns
stos
and
cdq
xchg
dec
and
push
mov
fs
movs
mov
in
cwd
out
jno
rol
js
outs
movs
add
mov
xchg
rol
ins
popa
cmc
xor
or
add
pop
pusha
add
aas
push
sahf
(bad)
fmul
push
pop
ret
push
push
jne
pushf
cmp
sar
mov
dec
pop
pop
je
ins
scas
std
mov
jp
(bad)
cmp
lea
xor
sub
cmp
lahf
ret
push
jecxz
inc
jg
in
enter
dec
adc
mov
lods
sub
sub
or
jl
xor
mov
movs
loop
ret
fadd
mov
pop
sbb
ds
jnp
mov
sbb
clc
xchg
loopne
mov
aaa
xor
sub
outs
test
cmp
fwait
jno
cmp
ja
sahf
dec
jns
int3
mov
inc
or
fstp
add
dec
shl
adc
jge
and
dec
jae
cmp
jno
jl
xchg
dec
loop
dec
imul
int3
xchg
vcmppd
cmp
icebp
pop
movs
jae
xor
add
push
sahf
cld
ficom
xor
sub
cmp
push
(bad)
jle
pop
cmp
ror
jmp
imul
push
int3
push
mov
out
(bad)
movs
fiadd
pop
int
sub
inc
cmp
gs
mov
pop
adc
popf
jbe
call
jb
push
jb
les
div
cmp
out
mov
jecxz
sub
jb
cmps
dec
cmps
ss
add
fistp
loop
inc
or
scas
push
mov
or
fcom
in
and
fnstenv
jo
cmp
ficomp
sti
punpckhbw
mov
and
(bad)
cmps
aaa
scas
out
ret
and
add
jle
jle
aaa
hlt
mov
pop
sub
shr
cmps
clc
in
or
stos
fistp
push
sub
lahf
push
or
mov
rcl
adc
pop
mov
mov
lds
dec
sub
cdq
cmp
cld
in
imul
out
dec
aad
mov
sub
loopne
outs
mov
iret
push
inc
fnstcw
jmp
xchg
pop
fdivr
lods
test
xor
xchg
stos
outs
pusha
pop
cmc
xor
add
and
jae
xchg
or
mov
pop
in
adc
in
cmp
sbb
push
stos
sub
mov
outs
popa
scas
xchg
mov
repnz
mov
cmp
push
fs
xor
sbb
test
int3
clc
fcmovbe
xchg
push
retf
jecxz
loope
cmp
fs
and
cli
lock
cdq
icebp
mov
(bad)
call
ins
push
sub
idiv
repnz
sbb
dec
mov
test
dec
jns
xor
cwde
or
cmp
jp
pop
sbb
add
ins
push
push
fiadd
xor
adc
jle
loope
sahf
shr
ret
shl
and
mov
cwde
ja
aam
aam
jnp
add
push
or
inc
jmp
fst
add
test
push
scas
push
mov
icebp
jle
mov
and
mov
mov
sbb
scas
in
fwait
test
adc
sub
add
sbb
ret
sbb
sub
ss
jno
sti
adc
mov
(bad)
push
cmp
pusha
dec
rol
add
xchg
push
adc
push
js
sub
sbb
outs
mov
xchg
addr16
stos
pop
mov
mov
jo
ret
jns
icebp
enter
in
mov
out
(bad)
jle
loop
scas
cmp
loop
cmp
imul
mov
aas
fxam
fwait
das
icebp
in
mov
cli
push
mov
leave
add
retf
xor
sbb
jns
xor
xchg
div
xchg
dec
mov
cmp
out
sar
push
sub
push
lds
inc
js
mov
shl
ds
push
iret
fadd
js
hlt
test
xor
pop
add
(bad)
mov
mov
pop
inc
sbb
rcr
in
test
into
cmc
loope
inc
mov
arpl
push
mov
aas
cmps
cmp
xor
daa
sbb
sar
rcr
dec
enter
popa
and
add
fs
fwait
imul
cmp
xor
sub
rcr
xor
mov
cld
pop
push
mov
(bad)
std
nop
les
loope
cmps
cld
or
xor
(bad)
in
dec
push
int3
fcom
jl
push
retf
mov
in
mov
mov
mov
(bad)
outs
(bad)
jl
push
aas
mov
loopne
inc
imul
mov
push
lods
and
pop
loope
push
xor
lea
or
dec
fwait
mov
dec
add
scas
pop
jg
ror
inc
pushf
and
adc
das
out
cdq
mov
inc
push
add
push
out
xchg
adc
xor
xchg
cmps
xchg
outs
sbb
aam
inc
test
jg
adc
inc
je
jge
mov
jno
cmp
pop
cwde
jae
and
sbb
sbb
or
xchg
mov
(bad)
ss
cmp
push
adc
sbb
sub
loope
aas
add
enter
(bad)
pop
push
ret
cld
inc
fsubr
idiv
dec
sbb
mov
inc
pop
mov
or
pop
sub
retf
mov
jb
dec
inc
and
pop
xor
push
test
mov
dec
push
pop
cmps
cmps
into
lock
xor
mov
das
and
xor
pushf
(bad)
sti
sub
pop
mov
int
enter
sbb
aam
or
push
jno
mov
bound
jns
ffree
and
shl
inc
ficom
in
cmps
test
test
xor
test
es
int3
es
int3
stos
repnz
das
frstor
mov
mov
dec
(bad)
mov
or
sub
out
or
and
pop
xor
out
sbb
push
jns
mov
cwde
mov
xor
test
xchg
arpl
adc
in
inc
es
out
inc
adc
test
imul
retf
pop
jmp
sub
lock
sub
sub
sub
lock
jne
mov
xor
scas
cmp
imul
(bad)
js
(bad)
not
ds
jp
test
and
shl
arpl
ss
add
bound
idiv
(bad)
in
test
aas
jecxz
arpl
idiv
shr
cmp
bound
cdq
mov
mov
mov
daa
push
cwde
jnp
mov
jle
(bad)
mov
mov
cld
iret
xchg
test
mov
push
(bad)
jp
cmps
out
xchg
(bad)
fstp
mov
mov
fidiv
mov
shl
xor
ds
push
pushf
neg
loope
sub
fldenv
nop
mov
fs
js
out
sub
test
(bad)
test
rcl
xor
pop
cmps
mov
loop
les
sub
rcr
mov
xchg
test
fimul
pushf
push
add
inc
pop
jb
std
xlat
add
ds
cmp
cli
test
or
neg
and
js
mov
jmp
pushf
mov
or
jo
mov
cmp
push
jge
scas
ret
pop
push
xor
or
retf
pop
push
sbb
cmps
out
(bad)
cli
sub
lea
inc
adc
sub
out
int3
jge
xor
dec
movs
pop
sub
and
cmp
push
test
outs
cmps
in
dec
inc
imul
test
(bad)
sbb
stos
test
daa
xor
inc
adc
test
rcr
out
fmul
aad
adc
out
mov
jge
cmp
cmp
adc
xchg
sbb
bound
mov
mov
pop
cs
std
xchg
fs
xor
xchg
loopne
cmp
inc
mov
ins
add
retw
cmp
mov
lahf
cli
mov
iret
ret
jae
add
mov
call
xchg
fcom
lods
mov
loopne
xor
fucomp
inc
jns
mov
lds
cmp
cmc
mov
add
mov
jne
lods
mov
pop
les
(bad)
mov
mov
lock
movs
repnz
out
mov
leave
add
outs
jle
mov
and
pop
scas
xchg
inc
dec
popa
popa
and
cli
out
popf
test
and
inc
dec
aad
mov
jb
mov
xor
idiv
loopne
popf
xchg
jmp
dec
xor
mov
jg
jns
cdq
push
xchg
ja
popf
and
lods
(bad)
fdivr
call
vmaxpd
arpl
jecxz
or
adc
repz
push
mov
cmps
rcl
dec
dec
jns
pop
dec
aam
ret
adc
mov
test
pop
pop
cwde
inc
into
add
mov
sub
and
cmps
mov
jmp
aas
ret
mov
clc
out
add
sti
lods
fimul
dec
and
call
(bad)
xchg
mov
fidiv
sbb
xchg
clc
pop
adc
push
mov
inc
jbe
push
test
pop
sub
jge
and
inc
mov
aas
add
sub
push
push
cmc
lock
loop
mov
ror
cmp
out
test
push
xor
adc
sub
sbb
test
or
push
mov
call
fs
sar
pop
inc
rcl
add
mov
add
inc
add
out
(bad)
dec
fwait
movs
aas
loope
pop
out
loop
push
retf
and
mov
bswap
stos
push
or
mov
pop
cwde
xchg
(bad)
(bad)
xchg
mov
mov
xor
daa
and
outs
cmp
int3
stos
jns
mov
sbb
inc
outs
pop
outs
sbb
inc
ds
fimul
mov
iret
out
or
sahf
inc
shl
mov
add
leave
outs
aas
pop
cld
adc
pop
xor
shl
int
or
adc
out
stc
push
lds
inc
fadd
pop
push
imul
lods
jecxz
cmps
jp
jle
(bad)
aaa
or
nop
adc
call
shl
dec
outs
mov
mov
jge
imul
or
adc
scas
jbe
in
push
xchg
lods
and
fldenv
jp
and
xor
jo
out
mov
jmp
push
je
mov
test
mov
shr
sub
sbb
pop
and
lahf
dec
retf
push
dec
aas
pop
mov
dec
imul
dec
ins
mov
cmp
mov
push
rol
hlt
test
mov
and
shl
aas
xor
xor
fld
(bad)
adc
lea
(bad)
sti
movs
xlat
iret
test
mov
xor
xchg
arpl
xchg
mov
jmp
ss
push
sub
push
pop
inc
mov
push
imul
out
out
jne
cmp
iret
lock
gs
mov
sbb
dec
add
out
mov
es
dec
call
addr16
push
xor
or
sub
ret
and
and
aam
pop
sti
pop
out
or
mov
fwait
popa
(bad)
jg
inc
mov
and
xor
aam
mov
ss
bound
imul
enter
xlat
inc
xchg
xchg
cmp
in
dec
int3
jmp
lahf
push
test
xor
or
dec
pop
iret
dec
les
xchg
pop
pop
imul
je
jne
call
sub
jg
or
dec
popa
mov
mov
pop
cmc
pop
jmp
push
pop
mov
inc
setne
jnp
int
jl
and
or
sbb
adc
ret
mov
adc
ds
les
mov
cmp
in
mov
jecxz
add
fxch
aam
ficom
jg
inc
sbb
or
ins
cmp
adc
call
mov
lods
and
inc
clc
inc
pop
jb
cmps
mov
call
shr
out
and
(bad)
js
test
or
push
fcmovu
les
xor
push
ins
sub
inc
sbb
jnp
cmps
and
pop
dec
jg
inc
adc
dec
rcl
pop
mov
and
imul
cli
push
pop
and
hlt
jne
push
push
popa
dec
jnp
addr16
fwait
not
popa
data16
loope
and
adc
cdq
mov
adc
or
add
adc
and
sub
inc
sbb
nop
and
xor
add
hlt
mov
(bad)
mov
sahf
jbe
sub
bound
outs
pop
cmps
ins
xchg
or
call
push
cs
cmp
adc
fcom
xchg
sbb
sub
jo
fucomp
int
call
jo
xchg
loope
mov
das
hlt
sub
jmp
shl
nop
fcom
mov
inc
xchg
dec
jge
mov
bound
inc
add
popf
movs
mul
stos
xchg
repnz
jmp
aas
test
lea
and
cdq
sbb
icebp
mov
and
rcl
dec
cli
mov
in
and
sub
and
mov
fdivr
loop
jge
out
lock
cmc
int
xchg
inc
or
dec
push
xchg
daa
inc
push
dec
das
cmp
xchg
aaa
or
imul
outs
mov
scas
add
test
cmp
(bad)
and
stos
imul
and
xchg
movs
jbe
jns
add
(bad)
jb
xor
jmp
fisttp
mov
outs
div
fsub
(bad)
sub
call
pop
call
dec
xchg
imul
bound
hlt
les
ror
adc
xlat
cmp
mov
out
js
int
add
outs
das
push
add
iret
imul
dec
jno
mov
retf
ficomp
sar
lahf
ficomp
dec
mov
addr16
dec
ins
mov
(bad)
and
or
stos
pop
and
ins
sub
push
(bad)
and
jecxz
or
dec
popa
push
cmps
push
pop
lods
cmc
(bad)
xchg
mov
jbe
repz
pop
idiv
dec
addr16
jmp
dec
sub
xchg
hlt
adc
mov
inc
jnp
inc
les
imul
call
loopne
adc
in
add
jle
adc
stc
jecxz
xor
mov
movs
add
fucom
mov
mov
pushf
sbb
out
dec
pushf
stc
fbld
push
ins
mov
out
inc
lea
sbb
frstor
dec
ret
pop
cmp
sub
mov
test
jne
push
cmp
push
rcr
push
das
and
cs
inc
sbb
mov
aam
sahf
das
and
scas
xor
mov
sub
adc
push
sub
test
adc
shr
cmp
outs
xor
daa
mov
jecxz
or
ret
arpl
test
out
add
mov
stc
sbb
dec
cmps
lds
jmp
add
cmp
mov
arpl
push
neg
push
out
adc
scas
retf
lahf
test
(bad)
fwait
sbb
jne
pushw
test
loop
pop
sti
movs
cld
sbb
push
fs
jmp
push
jmp
push
xlat
sti
hlt
adc
add
or
loopne
mov
xor
xlat
xor
mov
sbb
jl
adc
fcmovu
lds
or
in
imul
and
inc
jns
jo
ins
adc
jg
mov
in
pop
mov
mov
xor
outs
das
and
std
cmp
cld
aad
sub
into
push
fisubr
into
fstp
iret
pushf
lods
or
rcl
fincstp
arpl
icebp
imul
xchg
icebp
out
es
and
sar
mov
loope
inc
ss
inc
pop
outs
xchg
and
mov
scas
(bad)
ins
pop
jne
ret
add
mov
scas
push
jmp
dec
xchg
test
push
add
shr
stc
mov
push
push
iret
xchg
jecxz
shl
in
and
movs
stos
stos
and
cmc
ret
push
jne
mov
mov
xchg
and
bound
das
mov
pop
jmp
xchg
out
mov
inc
inc
mov
aad
add
or
or
cmc
dec
test
outs
sub
retf
pop
cld
rcl
shl
or
pop
clc
inc
shl
jns
sbb
iret
data16
jmp
pop
add
jmp
pop
xchg
and
(bad)
dec
pusha
pop
jg
xchg
outs
cmp
fcmove
ins
jecxz
fsubr
movs
dec
add
xchg
inc
popa
stos
arpl
push
fsub
mov
movs
jl
push
add
rol
jnp
popf
daa
mov
cs
mov
xchg
push
mov
or
cmc
add
repnz
sbb
je
jbe
pop
adc
les
sub
jb
jg
outs
adc
push
popf
xchg
dec
inc
cmps
jne
std
pop
mov
(bad)
cs
jmp
mov
lahf
add
ds
add
clc
cmp
pop
xor
test
test
dec
sub
in
lods
and
pop
xor
inc
push
cli
mov
das
adc
xchg
push
scas
js
cmp
jle
in
mov
cmp
pop
xchg
pusha
xchg
movs
lods
cmp
gs
fmulp
call
sbb
mov
pop
add
cmp
jb
xlat
push
jg
dec
into
inc
fisttp
cmp
enter
pop
sbb
test
jl
dec
jb
mov
loop
cmp
(bad)
xor
sbb
pop
pop
jle
mov
adc
mov
or
scas
cmc
add
sub
cdq
ins
xor
xor
ror
xchg
lea
or
out
data16
(bad)
cwde
icebp
push
push
xchg
push
repz
fsubrp
xchg
jmp
ret
loop
and
test
out
mov
and
jo
adc
enter
pusha
cmp
pop
xor
sahf
mov
mov
jne
cmp
or
xor
iret
pop
sub
in
push
mov
dec
jnp
jmp
pop
lea
cmp
jne
enter
sbb
loopne
(bad)
pop
call
scas
mov
ret
(bad)
jle
mov
sbb
movs
adc
push
dec
popa
test
div
stc
sbb
xchg
jbe
ror
jbe
add
fwait
cld
cli
pop
loope
mov
pop
dec
loop
and
mov
das
xor
sbb
cli
or
stos
pop
retf
sbb
sbb
pop
test
gs
loop
lea
cmps
add
mov
lahf
jl
mov
dec
cmps
sbb
retf
repz
ror
fwait
dec
add
sub
lods
push
xor
imul
mov
shl
xlat
mov
or
mov
dec
mov
or
jno
popa
xchg
das
(bad)
inc
mov
cmps
jno
cmp
cli
pusha
inc
dec
jae
stos
in
js
(bad)
fstp
fdiv
push
and
scas
call
in
fnstcw
adc
lea
lock
sbb
hlt
jnp
mov
stos
test
fwait
mov
cdq
sbb
or
rcr
out
and
push
dec
sbb
xor
out
add
or
out
outs
clc
sbb
ja
sub
or
mov
test
mov
in
dec
xchg
mov
and
cmp
mov
sub
stos
and
dec
fisttp
pop
sub
adc
cmp
adc
or
pop
imul
push
pop
jbe
lahf
movs
add
and
imul
mov
jp
xchg
mov
pop
sbb
pop
xor
imul
jl
inc
cmps
int3
mov
jne
enter
xchg
and
mov
push
add
(bad)
jecxz
pop
adc
mov
out
test
or
out
add
add
push
cmps
sbb
adc
in
sets
ja
and
xchg
daa
(bad)
jmp
push
out
cwde
and
pop
jne
rep
pop
hlt
xchg
shl
cli
mov
ret
mov
push
and
rcl
add
jl
push
push
iret
pop
out
dec
mov
jnp
push
xor
jno
lds
dec
push
stc
jnp
lock
(bad)
push
cmp
inc
fimul
cmp
rcr
push
mov
and
mov
jmp
pop
shl
ins
push
mov
cs
sub
test
pop
ret
xor
push
sbb
(bad)
or
hlt
fmul
mov
cmp
xchg
ins
lds
data16
xchg
(bad)
push
mov
inc
cmp
popf
ret
cwde
mov
and
into
in
mov
mov
dec
sbb
jge
push
inc
ficomp
push
adc
scas
js
inc
daa
test
adc
test
inc
les
shl
cmps
inc
loopne
jno
mov
js
sahf
xlat
jae
cmp
inc
call
rcl
push
mov
shr
repnz
loop
xchg
cmps
lods
and
outs
std
inc
sti
push
idiv
sbb
mov
xor
cmp
clc
or
bound
ins
xchg
test
ins
(bad)
mov
rol
ret
sub
jno
ds
cld
popf
cmp
rol
mov
mov
mov
mov
adc
add
mov
and
pop
mov
retf
pushf
std
ret
ds
adc
es
jne
mov
add
test
xor
mov
add
cmc
inc
push
rcr
dec
pop
retf
xchg
rcl
add
push
and
mov
jmp
sub
mov
lock
add
das
or
mov
jno
cmp
(bad)
xchg
mov
mov
jmp
xor
xor
fnstsw
sahf
iret
jmp
in
pushf
jge
pop
xor
sub
sub
pop
and
lods
(bad)
sahf
ficomp
(bad)
gs
jmp
and
mov
cmp
popf
cmp
lock
test
xchg
push
sub
xor
and
jecxz
cs
movs
(bad)
mov
mov
loope
mov
add
pop
jecxz
jns
fcmovnbe
xor
call
(bad)
aam
sub
xor
sbb
dec
jno
ret
add
ror
test
test
jmp
popf
pop
add
xor
xor
fmul
cmp
popa
or
adc
pop
outs
jmp
or
cmp
and
addr16
dec
sar
dec
test
and
cld
stos
mov
pop
inc
mov
or
mov
xor
ret
jg
cmp
test
not
out
xchg
add
aas
not
and
jbe
xor
cmp
jecxz
pop
sti
cmp
stos
push
add
into
and
outs
inc
mov
add
movs
lds
in
test
add
movs
pop
add
mov
fimul
int
push
and
sti
mov
lods
ja
out
out
add
sbb
mov
iret
xchg
jge
mov
jbe
mov
and
mov
fcom
adc
stos
stos
lea
xchg
inc
and
data16
cli
xchg
(bad)
leave
dec
sub
repnz
mov
sub
inc
pop
mov
jmp
sbb
xor
fwait
ds
sbb
pop
cwde
sub
scas
je
lahf
je
in
movs
shl
mov
cmp
jge
(bad)
pop
jne
xor
mov
cmp
dec
int3
arpl
inc
inc
pop
jnp
jge
mov
add
cmp
push
and
add
enter
or
cmc
push
xchg
lahf
scas
mov
dec
jo
nop
add
jo
aas
mov
push
xchg
cmp
fmul
rol
sahf
gs
fistp
cmp
cmp
(bad)
in
je
mov
cmp
push
push
inc
cmp
(bad)
sti
push
adc
scas
(bad)
pop
shl
push
(bad)
(bad)
jp
inc
mov
sub
jp
inc
dec
cmp
add
xchg
mov
int3
dec
mov
js
sahf
jno
aam
shr
mov
jg
pop
lock
adc
push
jnp
lea
aad
icebp
out
not
out
xor
pop
out
aad
cwde
bndldx
sahf
loopne
jo
jp
xor
retf
data16
ret
out
sub
xchg
adc
sbb
mov
dec
xchg
dec
add
neg
data16
push
pop
clc
jmp
jae
inc
xchg
mov
loopne
pop
hlt
pop
mov
fs
and
xlat
daa
push
call
cmp
jp
(bad)
sahf
jg
sub
inc
ins
mov
dec
xchg
iret
in
jmp
repnz
aas
pop
xchg
stc
lods
enter
add
inc
add
loope
mov
mov
xor
arpl
das
adc
pop
(bad)
pop
xor
add
outs
and
cmp
les
imul
fnstenv
sahf
or
mov
imul
sti
xor
add
inc
mov
retf
lds
inc
dec
jp
pop
sbb
mov
xchg
scas
clc
sub
shl
dec
loopne
xor
cvtpi2ps
cld
fld
inc
cld
cmc
xor
out
into
(bad)
mov
push
cld
clc
xor
ds
dec
dec
aam
jbe
jns
and
sbb
cmp
icebp
pop
push
cmp
sbb
sub
int
mov
jne
das
sub
or
pushf
mov
aas
mov
repz
sub
jmp
ja
repz
jle
cwde
outs
ins
sbb
mov
mov
(bad)
int
(bad)
pop
addr16
bound
cmp
inc
pop
into
dec
sbb
inc
mov
js
push
xor
data16
retf
sbb
cmc
push
aad
(bad)
ret
xlat
xor
add
and
out
pop
aas
cmp
or
dec
repnz
pop
xchg
xor
hlt
jg
in
mov
pop
and
shl
cmps
imul
and
cs
mov
clc
dec
shl
enter
ds
jae
cmp
into
jle
push
loopne
xchg
aaa
shl
or
xchg
pop
adc
jae
xchg
mov
pop
mov
fs
mov
jns
jmp
stos
gs
shl
cdq
les
aaa
jb
cs
imul
sbb
jo
add
xor
aaa
daa
test
out
push
pop
mov
cmps
das
not
push
xor
lock
in
mov
scas
dec
call
mov
and
cmc
ins
xor
or
sbb
into
push
fmul
xor
dec
scas
or
mov
jae
clc
push
jo
inc
into
push
stos
push
adc
xor
std
adc
stos
sub
gs
repnz
cmps
aad
(bad)
aaa
sahf
scas
call
sub
movs
dec
sahf
(bad)
(bad)
mov
push
dec
jmp
and
test
sub
and
(bad)
push
(bad)
xchg
out
cwde
sub
leave
mov
frstor
loope
or
jg
inc
dec
popa
pop
jmp
cmps
dec
mov
mov
cmp
addr16
fst
sahf
mov
sub
shr
adc
sub
cld
sub
xchg
test
mov
xchg
push
or
and
nop
push
stc
dec
stos
je
mov
xchg
fwait
enter
pop
pop
lds
cmp
jbe
mov
dec
and
fistp
mov
inc
adc
(bad)
mov
cmps
and
xchg
imul
xchg
div
and
push
jne
in
dec
sbb
aam
jl
mov
rcl
mov
data16
push
loopne
push
fmul
rcl
loopne
movntq
outs
(bad)
cli
in
test
or
test
loopne
sahf
imul
inc
mov
jbe
fdiv
mov
retf
jmp
add
retf
nop
push
bound
sbb
jg
sahf
inc
sbb
xor
test
leave
cmps
and
or
lahf
mov
movs
pop
rcl
mov
add
xchg
(bad)
jp
enter
push
push
test
sbb
push
and
daa
pushw
sti
cmp
adc
sti
mov
xchg
inc
cwde
mov
jo
inc
pop
sub
lahf
int
xchg
xor
dec
sbb
cmp
push
ror
clc
xor
arpl
or
mov
sub
shl
bound
lahf
adc
mov
shl
add
cs
std
xchg
push
les
jnp
out
pop
pop
movs
add
push
aaa
std
sub
cmp
sbb
mov
enter
inc
rcl
mov
icebp
dec
in
fstp
fidiv
popf
and
sub
xlat
sbb
ins
or
or
(bad)
popf
je
loope
push
add
jbe
cld
jecxz
hlt
xchg
inc
pop
jbe
mov
mov
sti
sqrtps
ror
fs
pop
push
or
inc
(bad)
jbe
push
xor
jg
push
cmc
mov
mov
arpl
repz
adc
cmps
xor
fdivr
cmp
or
jecxz
pop
xchg
adc
stc
loope
add
pushf
test
jmp
push
mov
clc
scas
lods
cmps
ret
push
mov
leave
ja
inc
mov
push
add
inc
sub
out
mov
sbb
push
or
xchg
test
lds
das
loop
stos
cmc
add
out
pop
adc
fs
pusha
sti
xchg
ret
push
ret
push
scas
inc
cmp
xchg
sbb
and
mov
sbb
sbb
sub
dec
push
hlt
inc
imul
adc
jp
nop
mov
mov
outs
push
call
cdq
retf
std
pop
cmc
ins
xchg
xchg
mov
fld
in
push
mov
aad
cld
or
out
jne
push
xchg
aas
push
shl
ss
pop
mov
jmp
mov
fs
jmp
sbb
mov
adc
adc
mov
jmp
fwait
mov
mov
fmul
das
and
imul
les
fcom
jg
inc
loope
scas
ins
div
into
shl
xor
mov
add
add
jno
daa
retf
jb
mov
mov
jle
xor
cmp
inc
inc
ja
sti
ins
movs
sub
test
lea
aad
ds
shl
add
mov
popf
aam
test
in
add
shl
repz
out
push
(bad)
out
sub
(bad)
xchg
pop
sub
loop
rcl
aas
adc
jle
js
pop
lock
hlt
xchg
dec
push
sub
push
fucom
fsub
sbb
dec
mov
popa
sbb
mov
inc
ret
inc
add
xor
mov
cld
jbe
dec
pop
cmp
push
imul
arpl
enter
xchg
mov
inc
push
mov
(bad)
jnp
jg
push
arpl
unpcklps
bound
int3
pushf
mov
cmp
cmp
mov
scas
xor
and
(bad)
pop
xor
repnz
sbb
cmp
rcr
scas
mov
sbb
push
and
jmp
call
ins
xor
shl
jnp
clc
out
push
sub
idiv
ret
hlt
xor
retf
movs
shl
repnz
add
in
push
je
sbb
sbb
push
push
sbb
popf
jp
and
push
push
and
push
jns
(bad)
loope
cmp
scas
fnstcw
arpl
xchg
xchg
lahf
jl
pop
add
and
fdivr
mov
push
pushf
xor
out
out
popa
in
cmp
cmp
push
clc
xchg
imul
add
jmp
ds
sahf
in
mul
(bad)
cmp
sub
sahf
pop
xor
repz
lds
push
or
pop
jmp
je
inc
xor
imul
xor
(bad)
cmp
xor
call
retf
not
adc
jl
sbb
and
call
jae
fsubr
push
dec
push
fsub
and
ins
xchg
jmp
mov
outs
fwait
sub
stos
mov
xor
add
sub
aas
xor
jae
sub
xchg
pop
and
pop
jge
je
mov
lds
cmp
sahf
inc
mov
adc
popf
in
bound
imul
faddp
out
push
sbb
inc
or
sub
mov
aaa
mov
mov
or
loopne
xchg
dec
mov
int3
dec
aam
addr16
xor
xchg
dec
fisubr
jmp
nop
ret
jge
mov
jno
push
cmp
jle
jg
shr
jmp
call
out
fs
dec
jecxz
mov
and
mov
inc
jo
popf
out
cmc
sbb
mov
cmp
stc
cmp
cwde
jl
gs
dec
daa
push
das
out
mov
dec
xchg
mov
popa
mov
movs
bound
sar
inc
sbb
push
rol
enter
dec
scas
add
repz
jo
fsub
jl
adc
mov
push
sbb
xor
andnps
add
(bad)
loopne
clc
stos
scas
data16
imul
and
jno
je
ins
in
retf
mov
loope
in
(bad)
jmp
inc
xchg
mov
inc
or
jns
test
fcomp
dec
out
(bad)
xchg
pop
pop
bound
test
mov
xchg
mov
(bad)
iret
into
xor
nop
pop
repz
and
dec
xchg
fs
arpl
pop
dec
imul
ss
mov
cmp
add
movs
mov
dec
ss
sbb
(bad)
int3
and
cmp
in
out
aam
pushf
call
xor
jecxz
jl
jns
clc
rcr
in
fild
stos
inc
cdq
sub
test
mov
adc
fld
or
push
dec
out
jb
int
repz
adc
jle
in
jl
jne
xchg
inc
or
ror
xchg
test
jp
test
push
ss
and
loope
pop
adc
in
pop
pop
sub
sbb
xor
pop
inc
push
je
loop
imul
repz
mov
popa
push
mov
cld
sub
call
ja
icebp
nop
jno
mov
mov
loopne
sub
cmp
rcl
ret
mov
cmp
adc
push
pop
ins
add
jle
enter
add
sbb
mov
mov
scas
adc
fidivr
pusha
test
test
je
aaa
push
ja
adc
pop
mov
push
enter
mov
and
es
jg
into
(bad)
fs
add
push
xor
dec
hlt
jns
cmp
mov
ds
gs
jo
xchg
retf
jmp
or
cmp
and
inc
ficom
addr16
out
sbb
sub
mov
dec
hlt
mov
in
inc
mov
in
ins
xchg
std
jb
xor
dec
iret
jmp
add
call
xchg
add
test
not
pop
std
or
xchg
and
ds
pop
adc
addr16
rcr
mov
popf
pop
sbb
dec
mov
push
dec
mov
adc
cmp
push
iret
jmp
div
jnp
xor
pop
arpl
sahf
dec
mov
(bad)
mov
jecxz
or
jmp
mov
aaa
inc
pop
cmp
call
push
shl
call
mov
ja
push
mov
daa
fiadd
repnz
adc
sub
inc
cli
lds
jp
xchg
add
jmp
dec
mov
and
adc
xchg
cmp
xor
sbb
cs
push
jmp
mov
add
push
mov
push
cmp
jbe
xor
pop
dec
jne
ja
je
push
arpl
fst
inc
cmp
jle
cmp
clc
or
icebp
in
xchg
les
cmp
fsub
imul
lahf
mov
je
iret
jnp
cmps
jb
mov
push
adc
bound
xchg
add
mov
pusha
shl
sbb
push
clc
jmp
pop
jnp
pop
adc
mov
out
mov
xor
adc
jle
pop
data16
mov
xchg
sub
push
mov
adc
xchg
test
gs
popf
mov
test
push
sub
inc
and
movs
adc
shr
adc
cld
out
scas
imul
imul
aas
xor
loopne
sti
cdq
fcmovnbe
repz
inc
inc
and
fs
outs
push
dec
xchg
fistp
sbb
mov
sbb
and
push
cmps
loop
dec
in
lock
jb
les
(bad)
cli
mov
cli
js
add
adc
sbb
xor
test
daa
fucomi
fstp
inc
ret
dec
sbb
popf
sti
push
mov
repnz
ffree
cmps
(bad)
ds
jge
inc
adc
push
pusha
cdq
and
leave
and
push
std
retf
enter
mov
xor
icebp
loope
sar
aam
mov
add
jo
repz
shl
xchg
push
jb
xlat
ss
push
popf
enter
loopne
(bad)
xchg
fnstcw
push
repz
(bad)
and
mov
and
mov
call
ret
lds
imul
mov
mov
dec
gs
repz
inc
jle
adc
push
pminub
mov
ins
sub
ins
fild
das
dec
mov
inc
scas
inc
jne
(bad)
jmp
fneni(8087
leave
push
sub
lea
cmp
fwait
(bad)
daa
mov
adc
xchg
sbb
or
sub
push
mov
sbb
enter
push
inc
aaa
dec
not
sub
jmp
jecxz
imul
push
inc
push
add
int
je
xchg
jae
fimul
mov
js
pop
cmps
pop
xor
xchg
stos
dec
xchg
test
scas
mov
mov
and
xchg
cmps
imul
mov
das
into
xchg
xchg
(bad)
sbb
or
push
iret
or
mov
hlt
jne
fisub
sbb
inc
add
das
mov
mov
in
(bad)
mov
out
fistp
dec
enter
jns
scas
or
push
enter
ja
or
jecxz
mov
in
cmp
fisttp
rol
out
call
add
pop
call
je
retf
cmp
in
adc
inc
mov
jo
mov
pop
mov
icebp
aam
or
loopne
dec
xchg
je
or
lahf
mov
in
out
imul
pmaxsw
mov
pop
call
cmp
leave
or
adc
outs
cwde
or
cmp
jecxz
repz
or
ins
(bad)
lds
dec
in
cmp
cmp
fcom
loopne
xchg
stos
sbb
pop
aas
lahf
das
cmps
dec
lds
sti
jo
sbb
rcr
out
test
sbb
mov
sar
shl
out
and
inc
cmp
shr
sbb
sbb
ret
pushf
out
cmp
out
dec
cmp
js
adc
lahf
cmps
ror
stos
clc
imul
push
hlt
sbb
imul
mov
mov
adc
je
jne
or
jae
sub
imul
pop
cdq
mov
fcom
push
xor
sbb
jnp
int3
inc
xchg
mov
test
fwait
mov
mov
aas
adc
js
mov
dec
add
pop
and
pushf
in
movs
push
xor
pusha
jp
lods
xor
pop
jno
sub
inc
addr16
xchg
fcomp
(bad)
sub
fdiv
and
ss
pop
jl
ds
push
cdq
or
adc
or
jmp
push
mov
mov
xchg
imul
in
cmp
mov
cmps
mov
pop
inc
aad
and
adc
xor
test
fisttp
add
cmp
add
imul
shl
mov
fldenv
xor
stc
pop
fwait
push
sub
cmp
mov
mov
cmc
mov
iret
dec
jle
fimul
pop
mov
stos
dec
in
sbb
jb
call
or
jp
adc
or
push
fdivr
sub
pusha
or
mov
xchg
add
jmp
das
fs
adc
out
jecxz
xlat
sahf
mov
cdq
bound
jbe
mov
cmps
sbb
shl
mov
or
fdivr
and
pop
fisubr
adc
std
aaa
push
push
mov
mov
sbb
pop
lahf
push
mov
setae
or
pop
ja
push
adc
mov
inc
pop
pop
adc
mov
jns
retf
push
or
(bad)
adc
xor
and
jnp
jns
sub
pop
mov
ret
fwait
add
add
leave
push
int3
movs
sbb
mov
mov
mov
lods
push
icebp
mov
fldcw
mov
xchg
and
(bad)
lock
daa
mov
enter
xchg
pop
cmp
mov
lock
push
icebp
nop
xor
dec
popf
dec
xor
pop
fneni(8087
pop
sar
inc
repz
imul
jbe
lock
std
mov
mov
push
fidivr
(bad)
out
lds
in
xchg
mov
movs
ret
or
jge
pop
cmp
mov
sub
ror
adc
js
lods
repnz
cli
mov
aaa
imul
bound
shl
push
test
lea
retf
push
cli
mov
stos
cmc
xchg
sbb
lahf
enter
inc
inc
or
into
icebp
cmp
movs
lods
and
data16
test
cmp
sar
outs
pop
mov
add
and
movs
or
(bad)
jne
inc
and
jb
not
adc
ds
clc
sub
inc
xchg
dec
pop
dec
sbb
hlt
call
inc
add
sbb
cmp
xlat
dec
add
cmc
push
aam
jp
int3
mov
sbb
aam
cld
inc
es
dec
mov
push
repz
ja
into
sbb
sahf
mov
jno
push
ret
icebp
push
mov
sbb
and
jo
pop
pop
sub
repz
sub
mov
lds
cmps
test
pop
pop
arpl
pop
sti
leave
(bad)
lahf
push
mov
sbb
js
sbb
icebp
ins
push
cmps
mov
jge
push
lea
add
dec
adc
clc
aaa
retf
leave
sbb
mov
ins
cwde
or
outs
or
jecxz
xlat
shl
jbe
ror
ins
mov
arpl
adc
rcr
stos
cdq
aas
adc
fcom
sti
sahf
daa
or
cs
arpl
out
pop
sub
push
frstor
add
call
ror
test
push
xchg
sbb
add
add
dec
dec
out
sbb
pop
sahf
rcr
into
ins
mov
mov
mov
int3
in
dec
in
or
test
adc
mov
or
xor
jnp
jg
fwait
add
and
pusha
mov
in
test
jmp
sub
mov
mov
shl
mov
push
std
mov
outs
and
ffree
adc
add
sahf
std
xor
xchg
cmps
cmp
mov
push
hlt
add
mov
dec
imul
mov
and
xchg
mov
push
imul
pop
mov
ins
dec
arpl
test
pushf
in
shr
sbb
sbb
loope
dec
and
adc
scas
out
jp
test
jge
and
out
in
leave
mov
sbb
xchg
retf
int3
adc
push
and
xor
out
dec
jmp
push
and
xchg
pop
sbb
inc
bound
std
mov
retf
ja
sub
fs
pop
iret
pop
mov
jne
cmc
add
and
push
test
out
loop
aas
xchg
inc
dec
push
ins
loop
aas
stos
push
cmp
imul
aam
(bad)
(bad)
ror
adc
iret
popa
and
jno
inc
lock
retf
mov
push
and
and
adc
ret
fmulp
sub
sbb
jnp
inc
and
jmp
add
xor
daa
imul
ss
repnz
mov
repz
frstor
cli
cmp
cli
adc
ins
push
mov
pop
xor
sub
sahf
xchg
dec
jge
sbb
(bad)
cmc
in
aas
mov
xor
aaa
cmc
add
dec
lock
jecxz
mov
pop
iret
hlt
pop
pushf
ins
add
test
bndstx
fcomp
movs
or
xchg
dec
lahf
push
add
dec
mov
cli
dec
adc
pop
mov
inc
inc
xor
adc
in
sbb
push
retf
push
cmc
lods
mov
xchg
push
xchg
lock
(bad)
pop
mov
add
add
mov
fwait
imul
sub
pop
xor
call
test
movsx
or
ret
pop
pop
loop
outs
in
rol
in
pop
mov
push
popf
push
mov
popf
enter
push
std
add
iret
adc
sahf
(bad)
pop
sahf
cmp
mov
(bad)
lods
dec
mov
cmc
lods
jnp
les
cs
outs
cmp
or
and
add
int
jg
push
iret
xor
out
sar
jnp
push
stc
inc
fwait
adc
dec
sub
jne
push
mov
sti
mov
mov
(bad)
cmp
daa
(bad)
gs
xchg
icebp
cmp
aas
jne
jno
cmps
sub
mov
push
sub
mov
mov
mov
fnstcw
dec
aaa
loop
jl
jb
mov
fdivr
mov
jbe
hlt
fwait
push
test
jle
inc
pop
out
pop
sbb
ss
outs
lea
inc
push
push
sbb
jp
jne
inc
sbb
sub
adc
rcr
xor
add
push
(bad)
push
pop
inc
imul
jnp
xor
adc
sub
xchg
(bad)
push
gs
addr16
js
mov
movs
enter
sub
mov
inc
(bad)
(bad)
xchg
cmp
pop
sahf
xchg
push
(bad)
int
out
in
dec
add
add
pop
mov
cmp
mov
loopne
jp
cli
(bad)
mov
mov
mov
(bad)
or
jle
sbb
(bad)
sub
pop
cmp
repnz
xchg
sub
ret
and
lahf
out
mov
dec
pop
sub
push
mov
pop
stc
arpl
imul
int
outs
mov
cmp
jae
shr
fdiv
lods
inc
mov
icebp
int3
shl
fld
push
sbb
and
pop
lds
adc
cmp
je
cmp
dec
sub
or
adc
cmp
fiadd
push
sbb
pop
mov
xchg
sar
rol
pop
shl
gs
xchg
push
inc
mov
cmp
push
stos
out
cs
shr
movs
dec
mov
pop
mov
and
call
pop
mov
xor
cli
sub
push
and
cmp
mov
faddp
cmps
aaa
stc
sub
xchg
pop
mov
mov
bound
sti
je
cli
jno
repnz
push
mov
jo
rcr
leave
imul
cmp
xchg
(bad)
mov
push
adc
add
imul
mov
mov
pushf
or
mov
ja
gs
inc
or
imul
in
retf
(bad)
cmp
mov
cmps
movaps
fistp
and
mov
inc
test
aam
xchg
inc
lea
dec
dec
fucomip
mov
xlat
scas
fcmovnbe
mov
add
pop
sub
jle
xlat
clc
mov
sbb
inc
xchg
in
nop
fidivr
scas
sub
inc
lods
jb
jmp
lahf
push
scas
je
popa
movs
mov
int3
movs
inc
shl
mov
movs
test
dec
jecxz
mov
rol
push
push
popa
inc
lock
clc
aad
push
jecxz
mov
aad
mov
cmp
stc
xor
nop
(bad)
mov
mov
push
in
cwde
add
push
mov
jg
movs
ds
stos
mov
test
shl
or
sub
adc
mov
add
cmps
fisttp
test
push
shl
push
mov
mov
ret
popa
or
or
add
pop
enter
add
xor
push
retf
or
movs
test
arpl
add
cld
ins
mov
pmullw
jne
mov
sbb
dec
push
shl
and
inc
stos
mov
jge
jnp
push
loopne
dec
stc
add
add
es
ins
dec
adc
shl
pop
clc
shl
sbb
iret
and
outs
mov
rcr
aaa
pusha
mov
and
inc
jae
stos
movs
sbb
and
mov
xor
adc
retf
pop
aas
(bad)
loope
xor
or
ror
ror
mov
cmp
call
iret
cmp
fld
sub
mov
aaa
es
mov
sbb
bound
mov
jecxz
pop
mov
xor
sub
and
test
cmp
and
fst
ja
mov
sbb
(bad)
push
xor
in
in
hlt
xlat
sbb
mov
(bad)
mov
mov
ja
dec
adc
or
adc
sub
mov
out
lahf
cmp
xor
sbb
jecxz
or
sahf
or
adc
imul
or
aam
jl
sub
sub
test
jl
mov
pop
push
cmc
mov
jp
sbb
add
popa
rol
jo
sub
jbe
iret
cmp
inc
add
retf
pop
jns
jo
retf
lods
ror
xor
mov
les
pop
dec
out
out
sub
aas
sbb
adc
imul
das
add
and
cmp
pushf
test
and
outs
sub
or
xchg
inc
test
cmp
push
mov
out
and
fstp
jecxz
cs
adc
xchg
adc
sbb
gs
adc
les
jp
mov
test
or
adc
push
fnstsw
and
and
into
mov
lds
dec
(bad)
push
das
(bad)
in
call
mov
loopne
inc
int
add
sub
int3
push
pop
push
bound
lods
sub
rcl
(bad)
jl
cmp
sahf
push
cli
sahf
xchg
retf
rcl
jbe
push
sbb
dec
mov
or
mov
jmp
fild
or
adc
imul
adc
xchg
mov
pop
pop
or
sub
xchg
shl
sbb
popf
jl
push
scas
arpl
ror
test
scas
push
arpl
inc
scas
(bad)
div
mov
in
inc
xchg
out
dec
push
jmp
mov
sub
loop
mov
add
mov
cmc
jp
mov
add
lods
scas
or
push
in
push
in
inc
mov
pusha
movs
push
cmp
aas
dec
jbe
int
dec
pusha
test
hlt
lahf
sar
fsub
daa
pop
rcr
push
and
mov
inc
(bad)
popf
in
sbb
pop
test
pop
sbb
cmps
daa
out
xor
fs
jae
jge
push
cmp
push
(bad)
aam
lods
jbe
out
icebp
and
stos
push
inc
repnz
ja
cwde
ret
jl
pop
out
cmp
test
mov
add
jnp
outs
sar
add
mov
jl
out
add
out
test
outs
movs
add
ror
xchg
nop
pop
push
(bad)
sub
and
in
or
enter
xchg
dec
int
add
xchg
xlat
sub
in
pop
popa
lock
fadd
sbb
ins
lock
mov
push
aam
outs
xchg
call
xchg
jmp
mov
stos
dec
ret
push
mov
or
mov
push
sar
inc
pop
cmps
lods
loopne
retf
push
pop
push
call
mov
jl
push
cmp
loopne
outs
imul
les
push
sub
aad
jmp
mov
and
movs
xor
rcr
xchg
idiv
out
dec
cld
loopne
push
sbb
popa
lahf
data16
sub
xchg
dec
xchg
cmp
test
adc
add
test
mov
sub
push
icebp
inc
dec
shl
adc
cmc
dec
or
ja
test
call
mov
(bad)
mov
jp
cmp
push
cmp
jge
mul
test
shl
xor
mov
ret
cmp
nop
scas
mov
iret
sub
push
cmps
iret
cmp
mov
inc
cmps
leave
or
(bad)
dec
loop
inc
in
outs
push
xlat
pop
sbb
js
pop
das
mov
and
fs
jmp
xor
ins
ficom
xor
js
and
jmp
cmp
rol
mov
cwde
xchg
(bad)
mov
adc
in
push
pop
fisubr
lahf
(bad)
pop
mov
scas
pop
mov
xchg
mov
add
bound
mov
popa
jle
pop
add
in
xor
cmc
mov
in
and
dec
in
pop
sti
or
adc
cmp
jge
xor
fs
out
sbb
aad
into
neg
imul
sub
sub
xchg
mov
fs
iret
sub
mov
xor
jne
mov
(bad)
repnz
imul
jmp
repz
sub
hlt
dec
or
xchg
sbb
mov
repz
lods
aaa
xor
icebp
dec
aas
inc
icebp
mov
je
gs
jmp
pushf
test
pushf
jbe
xchg
call
std
mov
addr16
hlt
add
push
cs
xor
xlat
sbb
fcmovb
ds
adc
jae
fbstp
push
dec
loope
push
xor
enter
inc
mov
jne
cwde
sub
jmp
jne
xlat
cmp
cld
pusha
sbb
push
seto
xchg
mov
fs
daa
adc
fdivp
mov
daa
inc
push
mov
mov
jl
gs
iret
add
mov
xor
push
movs
and
and
mov
jge
xor
mov
dec
or
int
call
mov
jecxz
adc
ja
pusha
retf
js
jle
dec
enter
jb
xchg
cmc
repnz
ss
bound
and
xchg
ret
xor
movs
inc
push
cmps
outs
(bad)
cld
dec
(bad)
retf
jmp
jg
jmp
push
jge
stos
jmp
xor
ror
dec
fstp
mov
out
icebp
push
jmp
fnsave
cmp
and
jge
and
jb
in
jl
or
les
xchg
(bad)
int3
ss
or
in
jno
jbe
lea
int3
xchg
enter
fs
adc
adc
pop
mov
cld
cmp
inc
inc
dec
in
std
out
inc
in
mov
xchg
dec
mov
mov
shl
lods
(bad)
in
push
js
cmp
hlt
out
test
cmp
xchg
dec
mov
out
jno
hlt
pop
mov
xchg
adc
xchg
hlt
push
cmc
add
adc
lock
movs
ins
push
adc
xchg
pusha
cmp
push
in
in
test
mov
jb
add
pusha
push
push
aam
adc
fadd
cs
pop
pop
js
out
out
pop
movs
das
jmp
pop
add
shl
pop
inc
je
mov
xchg
jae
push
(bad)
cdq
test
aad
fs
jp
mov
mov
nop
push
hlt
mov
out
(bad)
jmp
jne
cmp
xlat
push
or
mov
mov
push
inc
fs
sar
sbb
fadd
and
enter
sahf
inc
xchg
clc
jmp
arpl
icebp
pop
inc
ret
into
mov
cmp
sub
push
je
inc
lea
inc
xchg
sub
push
add
enter
retf
cs
in
adc
pop
xchg
stos
dec
jg
or
je
daa
retf
jnp
cmp
scas
aas
rol
push
daa
add
mov
xlat
imul
jo
nop
adc
dec
fwait
es
(bad)
adc
pusha
xchg
jl
inc
pop
movs
fstp
xor
push
das
mov
rol
retf
std
inc
dec
and
mov
sub
(bad)
mov
nop
sub
aam
pop
sbb
dec
jmp
adc
lahf
mov
mov
ret
and
sti
scas
cmp
and
aas
outs
mov
outs
lock
jns
popa
(bad)
(bad)
fcom
fs
xchg
aas
sbb
scas
pushf
add
mov
dec
push
add
cmp
jge
jmp
sbb
xchg
inc
add
int
add
push
lahf
in
fcmovb
xlat
lock
xor
stc
cmp
xchg
fcomp
jne
sub
and
pusha
mov
inc
lock
sub
pop
push
cld
pop
mov
push
mov
rcl
aas
ffreep
cli
add
cs
out
je
leave
(bad)
jne
pop
inc
mov
and
test
mov
and
mov
fsub
loop
mov
test
fsubr
jge
pop
xor
and
in
fwait
mov
push
ret
adc
push
add
call
xor
pop
or
dec
scas
mov
push
loopne
cmp
jge
outs
es
popf
mov
xchg
rcr
addr16
sbb
adc
sub
(bad)
sti
cmp
xchg
ins
repnz
repz
fbstp
pop
sbb
xchg
ins
mov
je
and
fs
cmp
bound
cmp
xchg
mov
stc
lea
mov
scas
cli
push
outs
scas
(bad)
das
xlat
stc
in
xor
pop
push
or
push
pop
dec
jle
mov
rcr
stc
xchg
test
cmc
jecxz
mov
ds
cmc
mov
jbe
dec
jle
daa
sbb
pop
dec
dec
fwait
out
fwait
mov
adc
imul
dec
lds
push
dec
pop
cmps
dec
pushf
xchg
cmp
test
push
sub
test
sbb
mov
sbb
or
jecxz
dec
inc
push
nop
mov
fcmovnu
es
cmp
mov
add
or
iret
xor
cmp
leave
dec
push
jns
push
push
mov
cdq
lahf
ret
aas
lods
add
and
mov
loop
ins
mov
mov
pop
xchg
pop
dec
scas
mov
mov
jns
call
lods
ins
adc
(bad)
out
and
sbb
outs
cwde
enter
pop
ret
and
leave
imul
push
daa
xchg
pop
jno
mov
sbb
shl
jle
test
adc
jnp
in
push
sbb
jo
aad
test
and
pop
sub
dec
enter
adc
mov
lods
fist
ret
xchg
push
int3
jns
mov
inc
(bad)
push
pusha
xor
out
(bad)
not
mov
ret
cmps
sub
lea
stos
repz
push
push
pop
sahf
outs
push
or
ficomp
test
fldcw
ret
ffreep
out
or
push
popf
pop
xchg
out
or
popa
pop
sbb
add
add
dec
mov
mov
mov
or
clc
push
hlt
movs
cld
daa
dec
bound
xchg
xchg
cmps
adc
inc
mov
inc
in
mov
xor
cmc
movs
inc
inc
sub
ja
xchg
sbb
pop
xchg
shr
mov
inc
ins
sub
jmp
outs
and
icebp
pop
dec
in
shl
mov
cmps
addr16
sbb
sbb
push
(bad)
shl
iret
movs
adc
pusha
out
cli
cmp
xchg
imul
inc
xor
add
pop
test
mov
arpl
jmpw
cld
jb
inc
mov
and
es
adc
add
(bad)
inc
mov
(bad)
mul
sahf
out
popa
jge
outs
out
ins
test
and
inc
stc
or
mov
push
mov
push
sub
mov
add
adc
mov
dec
test
loope
pop
dec
jle
mov
jb
adc
mov
push
fld
movs
outs
and
xor
mov
js
push
rcr
dec
pop
dec
xchg
sbb
sbb
mov
or
push
mov
out
jmp
test
repnz
and
push
cmp
or
test
imul
scas
mov
jbe
mov
push
dec
jnp
xchg
pop
xchg
mov
not
popa
pop
pushf
fcos
mov
arpl
lahf
mov
(bad)
retf
sub
cmps
movs
(bad)
fisttp
push
dec
fwait
or
fstp
xor
repnz
rcr
lahf
ret
or
jp
cwde
mov
test
inc
ret
loopne
(bad)
push
clc
jl
out
cmp
(bad)
arpl
pop
cvtdq2ps
(bad)
pusha
pop
pop
fldcw
add
rol
idiv
push
int
cmp
stos
xchg
xor
je
inc
mov
inc
sahf
fucomip
mov
mov
out
sar
push
mov
(bad)
mov
or
pop
jo
mov
nop
push
in
call
repnz
jo
xor
inc
adc
cmp
addr16
test
sbb
ins
jp
dec
cmps
fld
jne
lods
push
and
mov
scas
adc
pop
inc
shl
vmovd
test
cmp
mov
int3
xchg
retf
pusha
(bad)
cli
xchg
outs
or
mov
add
mov
jp
xor
js
and
mov
out
bound
add
lds
mov
outs
mov
jecxz
shl
jae
mov
adc
adc
jb
xor
cmp
add
sbb
add
mov
neg
dec
int
inc
inc
sub
pop
ret
xchg
mov
and
fcomi
mov
cmps
dec
or
dec
or
cmp
cmp
rcl
call
push
jno
push
cmp
xchg
test
js
mov
pop
push
fwait
pop
dec
adc
jecxz
leave
les
fxch
dec
sub
sbb
dec
es
ins
sub
jbe
shl
das
jecxz
leave
loop
mov
pop
(bad)
int
xor
int3
(bad)
add
cmps
gs
(bad)
mov
(bad)
cmp
repnz
loopne
xchg
sub
inc
hlt
test
lahf
mov
mov
gs
ds
mov
fist
sub
inc
aam
pop
mov
mov
sbb
add
mov
xchg
push
and
jns
mov
lahf
jl
imul
and
sbb
jae
ds
mov
xchg
xchg
icebp
fwait
mov
sbb
sbb
imul
lods
push
popf
jecxz
xor
shl
adc
add
push
xor
sahf
jg
aas
jno
stos
packssdw
sub
jae
sbb
pop
sub
mov
lods
shl
jmp
(bad)
sbb
mov
out
les
ret
push
sbb
push
scas
aas
out
ret
test
jb
inc
xor
fcomp
fdivr
sbb
fldenv
inc
mov
mov
xchg
sub
cdq
loop
and
sub
repnz
push
xor
xor
test
or
and
mov
retf
xor
mov
mov
cmp
stos
pop
pop
scas
jle
add
sbb
imul
and
xor
sbb
pop
sbb
cmp
cwde
leave
inc
out
mov
pop
push
iret
stos
inc
(bad)
and
xor
jbe
pusha
(bad)
or
jmp
(bad)
cmps
imul
aad
cmp
lds
add
into
and
sbb
cdq
hlt
or
cmp
enter
inc
gs
sbb
sbb
sbb
jb
nop
or
mov
dec
pop
stos
pop
and
and
scas
test
stos
dec
outs
dec
jb
or
sbb
pusha
ins
lods
stos
addr16
ja
jmp
adc
nop
pop
mov
inc
out
ret
mov
inc
pop
sbb
rcl
outs
ds
mov
je
push
clc
out
and
leave
or
fdivr
push
sub
push
pushf
mov
dec
jns
(bad)
inc
and
xchg
mov
popf
dec
data16
mov
mov
popf
icebp
rol
sbb
daa
icebp
xor
stos
imul
rcl
inc
in
test
(bad)
rcl
fdivr
fmulp
pop
nop
aas
xor
je
clc
xor
das
(bad)
pushf
cmp
(bad)
mov
repz
in
mov
pop
sbb
push
test
and
xchg
cmp
xchg
xor
rcr
push
fs
jb
jo
jp
sbb
pop
sub
dec
inc
cli
lea
jae
retf
inc
popa
mov
or
xchg
pop
add
and
and
shl
loopne
mov
iret
test
out
add
jle
mov
push
sbb
cmps
movs
push
push
sub
mov
push
lock
cdq
dec
push
jne
pop
imul
pusha
sub
mov
mov
fs
out
ret
jecxz
(bad)
cmp
test
movs
icebp
cmps
inc
mov
add
sub
daa
adc
mov
ins
mov
xchg
(bad)
inc
movs
mov
jne
adc
pop
repnz
push
mov
cmc
add
in
int3
xchg
sbb
mov
jbe
ret
mov
cmp
and
hlt
out
add
sub
dec
mov
cdq
and
in
retf
and
jmp
clc
xchg
int
cli
sti
dec
mov
pop
pusha
(bad)
es
push
cmps
adc
sti
loop
pop
lods
leave
js
mov
mov
jmp
cmp
xchg
icebp
xchg
enter
and
push
xor
inc
inc
inc
sbb
in
loopne
inc
pop
push
shr
push
nop
rcr
call
cmps
or
mov
push
pop
cmp
jo
jae
cmps
sbb
sbb
inc
dec
pop
and
rcl
jge
sub
ret
mov
jmp
mov
rol
mov
push
stos
mov
cmp
rol
pusha
jnp
sbb
in
loop
dec
adc
fadd
jnp
in
push
cwde
push
jp
imul
or
inc
adc
add
or
mov
ficomp
retf
popa
or
pop
jle
je
xor
or
mov
and
nop
iret
leave
xchg
fs
shr
scas
test
enter
push
in
adc
ret
push
jno
xchg
and
mov
ja
fidiv
mov
push
and
je
xchg
push
sub
cmp
cmp
or
jmp
inc
pushf
(bad)
lahf
cmps
and
loop
shl
sbb
stc
cld
cs
and
add
mov
movs
nop
push
outs
repnz
inc
mov
mov
jmp
aam
xor
retf
out
stos
cdq
adc
les
jns
mov
pop
jns
adc
aas
dec
mov
(bad)
hlt
mov
iret
ret
mov
push
push
jmp
aas
add
mov
sub
rcl
jl
pop
stos
inc
sub
pop
(bad)
add
mul
and
jp
push
sub
xor
aam
(bad)
sub
ds
inc
hlt
cmc
in
xor
cli
jmp
jle
les
mov
inc
arpl
test
pop
(bad)
xchg
int
imul
iret
leave
lods
ds
push
popa
or
sti
jae
push
(bad)
pop
add
xchg
sbb
out
cmps
sub
outs
mov
sbb
fwait
add
adc
call
popf
adc
imul
test
mov
adc
and
add
mov
(bad)
inc
sti
loope
cmp
loopne
xchg
lahf
retf
push
push
and
loope
ja
imul
addr16
mov
mov
sub
push
dec
jg
js
ds
or
imul
stc
aaa
mov
stc
aas
pop
(bad)
xlat
test
ret
in
add
jmp
adc
(bad)
cs
not
pop
inc
cmps
jne
lds
dec
stc
mov
sar
sub
inc
adc
pop
push
and
add
call
(bad)
and
out
popa
retf
xor
in
dec
int
sahf
lock
sbb
fidivr
jo
ret
add
inc
movs
mov
jnp
fst
out
cmp
push
adc
adc
mov
and
add
in
cmp
jl
mov
je
outs
je
sahf
xchg
inc
repnz
and
mov
movs
cdq
inc
push
sub
movs
in
ins
stos
mov
mov
sbb
push
mov
lods
sbb
in
loop
pop
inc
adc
sahf
inc
retf
inc
iret
xlat
(bad)
cld
mov
add
into
dec
mov
jl
scas
add
and
or
fisttp
loopne
mov
push
sar
imul
mov
or
call
cmpxchg
dec
int3
fnstsw
fwait
add
lea
dec
inc
imul
push
add
outs
sub
push
cmp
xor
loop
mov
lahf
jmp
xor
popf
pop
sub
dec
pop
cmp
cmp
cmp
xchg
js
add
add
xlat
inc
sar
sub
jae
sub
sub
sub
xor
mov
mov
cmp
xchg
sbb
repz
(bad)
mov
sub
out
xchg
rcl
call
sbb
ds
jno
retf
mov
pop
inc
and
(bad)
fcmove
lds
imul
test
add
imul
push
dec
mov
rcl
sub
mov
int3
test
in
cmp
push
mov
(bad)
jl
movs
jl
cmp
scas
iret
daa
int
push
(bad)
fsubr
cwde
call
loop
xchg
mov
sbb
mov
lods
jp
mov
xchg
add
xor
mov
(bad)
pop
iret
xlat
push
mov
cmovle
popa
mov
lea
out
mov
sar
(bad)
xchg
add
(bad)
jge
(bad)
icebp
adc
ja
cmp
call
test
lods
fisttp
add
xor
out
loope
rcl
clc
mov
sub
and
popa
out
jo
mov
ficom
shr
jns
jns
daa
cmp
pushf
aad
icebp
push
dec
and
pop
push
imul
inc
xchg
jne
mov
pop
clc
test
jl
push
pop
(bad)
ret
es
mov
mov
retf
ret
aam
push
and
arpl
icebp
jle
mov
push
popf
mov
sub
add
xor
inc
loope
jge
pop
jmp
out
int3
dec
sbb
and
aas
(bad)
ins
adc
mov
mov
dec
xor
cld
inc
mov
or
loopne
jecxz
dec
xchg
sar
mov
sbb
js
dec
imul
(bad)
jecxz
imul
push
jns
sbb
adc
cwde
popf
(bad)
mov
and
inc
jp
js
imul
fcmove
and
adc
add
pop
and
push
push
out
sub
fucomi
sti
dec
cmp
adc
sub
je
pop
mov
sub
push
sub
into
jns
sbb
pop
mov
mov
xchg
movs
sbb
out
test
lods
retf
jl
in
retf
cs
(bad)
pop
call
sbb
cmps
xchg
dec
out
test
mov
loopne
mov
repnz
pop
sbb
mov
hlt
jp
in
lock
inc
in
push
stc
fst
inc
das
neg
aas
stos
cdq
dec
cld
retf
mov
mov
clc
sbb
mov
mov
loop
repnz
mov
sub
mov
std
lds
retf
movs
push
(bad)
sbb
mov
outs
jge
out
psubsw
adc
cmp
loop
repz
jmp
inc
cld
push
fisub
movs
cmp
ins
xchg
mov
arpl
in
mov
or
mov
out
fcmovb
repnz
dec
jmp
fwait
xchg
or
imul
ret
out
addr16
test
jmp
outs
inc
mov
movs
std
loop
addr16
sub
pop
loop
loopne
pop
test
popf
(bad)
or
mov
cmp
dec
iret
push
sbb
(bad)
xor
jne
stos
dec
(bad)
and
or
ins
test
repnz
xchg
popaw
mov
aam
cmc
out
sbb
aam
sub
mov
outs
jmp
das
in
and
adc
(bad)
xor
bnd
rol
fild
cmps
xor
cmp
mov
loope
mov
mov
(bad)
sahf
jmp
mov
push
pop
sub
out
das
push
mov
dec
and
sub
lods
shl
adc
xor
enter
js
adc
xlat
dec
push
jp
test
inc
jecxz
sti
push
pushf
rcl
movs
sub
jnp
dec
inc
jne
nop
jecxz
push
jp
(bad)
in
ins
fsub
pop
sbb
int3
push
inc
mov
out
aaa
lahf
mov
iret
or
repz
pop
xor
(bad)
(bad)
adc
sti
test
daa
mov
lds
rcl
sbb
popf
pop
hlt
das
bound
addr16
adc
and
push
adc
daa
dec
dec
jb
push
jne
mov
loopne
xor
imul
ret
xor
adc
push
js
jl
jmp
push
cmp
sub
add
add
sub
dec
cmp
inc
enter
adc
pop
mov
(bad)
or
js
mov
nop
mov
xor
imul
cdq
xor
cmp
fwait
into
add
(bad)
adc
fwait
and
push
sub
cmc
adc
pusha
int3
sar
push
imul
adc
popf
fcmovnbe
jmpw
add
xor
or
or
icebp
push
test
adc
test
into
mov
cs
dec
xchg
lods
sub
pop
xor
add
cld
inc
mov
push
and
push
and
sub
pop
xchg
call
pop
mov
outs
call
aam
das
jnp
icebp
add
mov
pop
fs
jnp
ret
stc
cmps
sub
xlat
dec
inc
jbe
sahf
sar
mov
inc
mov
jmp
call
adc
in
imul
shl
ror
push
push
inc
adc
sbb
mov
jl
out
sbb
out
mov
sbb
jmp
ins
test
enter
jle
jle
xchg
test
das
(bad)
retf
(bad)
pop
add
mov
stos
in
jl
and
add
mov
daa
adc
and
fisub
cdq
xlat
out
daa
popf
stos
popa
out
mov
pop
push
popf
xchg
mov
jo
stos
stos
jb
fdivr
out
neg
push
outs
loop
push
shl
mov
pop
mov
inc
fcom
mov
repz
jmp
or
(bad)
aad
mov
pop
jnp
js
sbb
mov
es
sub
int
cwde
mov
std
ficomp
mov
cmp
(bad)
or
ins
push
or
test
lahf
out
dec
and
stos
cmps
or
pop
jno
out
mov
scas
push
call
imul
cmps
push
data16
push
lods
stos
pop
and
fwait
push
lods
jbe
pop
and
push
mov
and
jg
mov
xlat
sub
call
xchg
mov
sub
and
stc
data16
loop
(bad)
mov
or
es
lock
inc
or
dec
inc
in
jne
or
or
arpl
(bad)
dec
jno
xor
pop
lods
mov
inc
fild
nop
mov
hlt
cld
xchg
mov
push
das
xor
loop
ja
inc
aaa
and
gs
fwait
xor
jecxz
xchg
jbe
rcl
and
loope
dec
jp
adc
ds
dec
imul
jp
jmp
(bad)
mov
xchg
xor
(bad)
loope
mov
push
jnp
sahf
or
sub
xchg
stos
js
out
(bad)
test
repz
test
push
and
xor
cmp
popf
nop
and
fs
leave
push
dec
add
mul
shr
(bad)
cmp
mov
xchg
fbld
sub
(bad)
xchg
push
mov
push
sbb
mov
(bad)
outs
int
ffree
fdiv
pop
adc
inc
add
xor
not
(bad)
repnz
inc
arpl
pushf
sbb
add
rcr
(bad)
fild
jmp
ja
cwde
movs
jg
jmp
loope
sbb
ficom
rep
bound
or
ret
daa
mov
ja
inc
fwait
icebp
cli
out
nop
pop
inc
popa
inc
lock
adc
cld
lea
arpl
hlt
mov
out
dec
xchg
iret
jae
cmp
ins
repnz
retf
test
jae
or
pop
mov
pusha
and
popa
in
outs
pop
adc
push
arpl
lahf
sbb
jbe
ss
mov
sub
dec
push
test
leave
mov
sub
pushf
pop
popa
jns
lods
sahf
mov
mov
adc
iret
ss
xchg
ss
sbb
jg
in
sub
fldenv
ficom
fdivr
fcom
xchg
pop
ins
fisub
jbe
xchg
pop
fs
mov
mov
or
cmps
jecxz
push
xchg
shl
jle
or
and
cmc
adc
lods
dec
mov
call
pushf
mov
mov
enter
stos
in
mov
dec
jns
leave
cmp
xchg
or
out
pusha
mov
xchg
cmc
dec
inc
aad
jg
aam
mov
cmps
in
cmp
into
jnp
cdq
fld
adc
pushf
imul
dec
aas
mov
ret
aad
ds
xchg
add
cdq
lahf
jecxz
sbb
mov
iret
mov
(bad)
pop
push
add
adc
pusha
sahf
add
jbe
rcr
adc
ins
paddusb
scas
sti
inc
pop
aad
and
outs
xor
(bad)
in
sbb
call
cli
xor
xor
aaa
push
js
mov
xor
add
mov
add
inc
jmp
lods
or
retf
test
xchg
mov
xlat
outs
mov
push
and
(bad)
popa
loop
or
push
mov
imul
mov
mov
mov
jp
mov
push
sahf
jmp
out
not
pop
xor
cld
dec
jg
cdq
xor
outs
scas
int3
rcr
push
enter
je
stos
mov
or
hlt
cmp
pop
sar
mov
pop
xchg
sbb
test
adc
imul
pop
aaa
and
(bad)
mov
xor
dec
in
fwait
mov
call
outs
push
jb
int
dec
mov
fnsave
push
pop
pop
add
push
in
and
dec
push
fdiv
rol
mov
cmps
and
jne
pop
stos
dec
daa
imul
in
arpl
mov
call
cld
mov
or
aas
aas
test
fimul
dec
and
or
cwde
ss
shl
loope
push
fmul
mov
adc
scas
mov
xchg
arpl
and
or
jecxz
js
test
cmp
sbb
mov
push
xlat
xchg
imul
cmps
mov
cmp
add
xor
xor
cmp
sub
mov
retf
(bad)
push
cli
sbb
stc
std
daa
cmp
push
push
inc
test
mov
in
cs
cmp
cmps
xchg
sbb
enter
fwait
stc
shl
out
call
icebp
dec
ds
dec
xor
push
add
dec
push
push
jp
outs
or
jecxz
js
push
jp
scas
or
in
scas
arpl
popf
lods
in
arpl
nop
adc
cmp
push
fisub
xchg
xor
aaa
mov
mov
cmp
(bad)
jnp
mov
cmc
dec
and
mov
push
dec
mov
fwait
cwde
xchg
jbe
aam
in
dec
xor
movs
inc
movs
in
jae
js
mov
cmp
and
jg
popa
adc
ins
dec
pushf
test
add
pop
fadd
mov
call
push
inc
xchg
in
mov
jne
push
mov
ficomp
lahf
loop
inc
scas
mov
int3
arpl
push
ins
pop
sbb
xchg
ds
cwde
leave
test
sbb
shr
jg
jmp
jo
sub
add
movs
sbb
mov
loop
(bad)
sbb
shl
mov
xor
jmp
mov
or
add
in
shl
mov
or
int
sar
sub
dec
rol
in
sub
sbb
push
inc
call
mov
clc
(bad)
sub
aaa
cli
in
scas
pop
mov
xchg
pop
ds
push
push
in
mov
cmps
movs
les
pop
or
dec
mov
arpl
mov
xchg
pop
rcr
sbb
into
or
pop
xor
mov
dec
test
popf
pop
sub
sub
leave
and
push
lock
call
xor
aam
ds
jbe
push
repnz
pop
cmps
push
mov
iret
pusha
xchg
aas
movs
jge
inc
and
sub
in
cli
pusha
movs
repz
ins
push
xchg
jl
jmp
jno
pop
mov
(bad)
cmp
sbb
inc
cwde
ins
rcr
iret
nop
fmulp
out
jnp
out
push
jb
sbb
cld
dec
xchg
test
movs
icebp
xor
mov
pop
or
cmp
call
ficom
adc
adc
and
mov
sbb
jo
hlt
or
mov
mov
xor
aad
dec
push
xchg
test
push
mov
out
xlat
das
rcr
pop
mov
(bad)
(bad)
std
mov
xchg
cmp
gs
inc
nop
(bad)
bound
sub
jmp
ins
adc
mov
stc
add
add
dec
xor
nop
shl
fsubr
add
icebp
push
js
jp
fild
(bad)
in
daa
jl
(bad)
jo
add
ret
leave
es
lahf
pushf
rcr
sub
push
mov
pop
pop
xchg
mov
clc
test
jne
retf
jo
jo
and
adc
movs
cmp
push
dec
push
sahf
movs
(bad)
cmc
aad
adc
daa
or
pop
xor
iret
in
adc
movs
(bad)
mov
or
mov
sbb
aam
mov
je
mov
inc
int3
fist
mov
aaa
mov
out
shl
sub
call
mov
mov
jb
pop
or
test
int3
ret
pop
and
outs
jne
add
jg
fsub
imul
in
dec
mov
imul
fwait
jns
inc
leave
or
adc
loop
mov
fstp
cdq
(bad)
fdiv
arpl
retf
ins
cdq
pop
push
dec
std
movs
jbe
nop
inc
and
sbb
push
test
loope
xchg
js
push
push
and
jmp
add
aas
xchg
pop
mov
inc
out
inc
cmc
xchg
rcl
pop
cdq
push
fisubr
aas
cmp
test
addr16
cmp
out
lods
xchg
cmp
pop
scas
xor
in
mov
jbe
push
mov
clc
push
mov
(bad)
dec
icebp
add
int3
push
adc
test
xchg
dec
stc
outs
in
mov
jnp
jmp
and
shr
les
in
sub
hlt
xchg
aad
popf
es
stc
cmp
mov
xchg
loop
adc
js
jnp
jp
adc
daa
popf
sub
test
or
aaa
cmps
xor
es
sub
and
mov
out
fcmove
stos
push
out
out
inc
lods
fstp
into
mov
ins
addr16
add
in
lahf
mov
repz
cmp
xchg
aas
dec
scas
js
sub
in
loope
sar
in
inc
lods
mov
in
out
icebp
into
mov
sbb
loop
dec
sbb
pop
dec
cmp
xchg
sub
shr
mov
hlt
ficomp
mov
xchg
mov
(bad)
jmp
sahf
cmp
mov
pop
push
out
(bad)
jbe
xor
mov
xchg
(bad)
add
aas
or
xchg
mov
iret
adc
cli
jno
sbb
jmp
call
fisub
icebp
je
and
fnsave
cmc
sbb
fimul
or
mov
inc
rcr
dec
sub
mov
cld
aam
mov
or
or
mov
xor
ret
push
out
mov
xchg
xchg
lea
and
mov
aaa
cmp
in
pop
xchg
and
movs
mov
mov
scas
jns
nop
jl
ffreep
dec
or
(bad)
mov
mov
es
movs
mov
jnp
fcomip
sti
cmps
pop
or
mov
mov
jnp
div
mov
inc
inc
repz
lds
pop
ja
mov
sbb
stos
add
rcr
mov
dec
out
retf
mov
or
xor
adc
push
dec
jge
imul
jnp
mov
cdq
daa
pusha
jge
dec
call
mov
push
jg
push
jg
mov
pop
call
loope
sbb
sbb
jmp
push
pushf
mul
scas
imul
mov
xor
popf
popf
pop
in
mov
jg
mov
nop
add
inc
mov
mov
cmp
sub
cld
aas
inc
pop
jnp
cmp
in
xor
mov
sbb
std
rcl
push
sub
cmp
je
out
cs
fcom
add
push
sbb
mov
push
cmc
mov
pop
mov
cli
xchg
cmps
cmps
jge
and
fld
push
lods
aaa
mov
out
(bad)
inc
sub
(bad)
pop
iret
push
lock
pop
mov
dec
or
pushf
les
xchg
jns
push
push
adc
xchg
pop
pop
jb
inc
aad
sbb
cld
or
cmp
cdq
call
mov
dec
dec
sub
mov
xor
inc
sub
pop
(bad)
repz
inc
cdq
mov
movs
ss
popf
pop
xor
fadd
fstp
xor
in
hlt
mov
sub
mov
jnp
add
movs
push
ds
sub
mov
jl
stc
mov
jge
fmul
arpl
lds
jmp
cs
mov
aad
lods
in
ror
cdq
and
mov
mov
int3
and
pop
fs
mov
movs
in
cli
xor
cmp
fs
xchg
fwait
nop
scas
xor
mov
xchg
xor
rcr
mov
cwde
pop
or
jle
scas
mov
ja
cmp
mov
sbb
pop
pop
pop
aad
jne
push
mov
shr
xchg
mov
jne
or
dec
and
bswap
xor
call
pop
hlt
xchg
or
daa
rol
xchg
sbb
stc
pusha
push
pusha
and
cmp
imul
loopne
push
lods
inc
sbb
cmp
inc
and
xchg
out
aam
dec
sbb
dec
jbe
fs
sub
push
cmps
fisttp
jg
mov
ss
mov
std
xor
loopne
ds
mov
repnz
outs
inc
jg
out
jbe
add
adc
or
retf
iret
sti
jl
sub
aas
xor
(bad)
mov
or
push
clc
in
dec
xchg
mov
(bad)
addr16
fldcw
xchg
mov
ret
test
mov
or
jp
jge
and
div
ret
clc
pop
ins
mov
lods
nop
dec
sub
or
movs
push
jmp
cli
imul
sbb
mov
cs
test
add
cli
fimul
xchg
js
ret
arpl
sbb
cld
aad
aaa
mov
sbb
pop
jge
jns
mov
sub
daa
mov
(bad)
jmp
and
std
xor
test
xchg
scas
xchg
xchg
cmps
scas
mov
xchg
in
mov
(bad)
ins
jle
xchg
aam
mov
(bad)
fidivr
dec
sbb
aam
popa
fs
outs
repnz
and
int3
retf
push
arpl
mov
jo
into
mov
aam
pop
neg
cmc
fucom
in
inc
retf
not
adc
push
push
mov
mov
test
pop
out
push
lods
jmp
cdq
test
outs
cmp
xchg
ja
leave
pop
popf
cmps
cmp
ja
cmp
call
(bad)
cwde
call
popa
je
xlat
mov
mov
add
leave
fimul
aas
adc
jnp
setge
pop
mov
rcr
cli
scas
das
test
push
fldcw
loopne
ret
out
and
aad
adc
mov
int
dec
push
fwait
in
lods
push
call
pop
mov
in
lods
sbb
mov
mov
fcomp
inc
leave
push
jmp
lock
inc
xor
mov
jbe
sbb
sub
mov
cmc
test
sub
cmp
sbb
cdq
push
jae
mov
cmp
cmp
cs
cmp
xor
dec
and
dec
inc
inc
pop
sahf
dec
rcl
cld
cmp
fwait
or
loopne
das
dec
pop
imul
ret
jge
bound
gs
rcl
retf
in
xor
add
out
xor
push
sbb
mov
movs
ja
push
jns
inc
scas
xor
cmp
cld
icebp
lock
jmp
adc
das
loopne
vmovaps
dec
imul
adc
push
push
and
stos
fnstsw
pop
mov
cmp
or
loop
out
js
pop
addr16
jp
rcl
pop
ins
stos
mov
mov
mov
int
cmp
das
xchg
clc
xchg
stos
in
sbb
mov
adc
es
or
mov
mov
push
dec
push
or
retf
(bad)
adc
mov
sub
loopne
outs
int3
aad
cli
adc
aas
pop
fnstsw
btc
push
mov
pop
sub
adc
dec
pusha
inc
mov
dec
pop
xchg
cmp
mov
mov
jnp
inc
mov
jg
sbb
and
pop
fnstcw
pop
sbb
mov
xor
pusha
scas
xor
inc
xchg
push
arpl
enter
dec
push
mov
dec
xchg
push
ja
out
push
adc
std
and
mov
sbb
cs
inc
ss
mov
pop
(bad)
enter
xor
sti
adc
sti
push
xchg
out
movs
mov
push
(bad)
sti
stos
retf
mov
stc
aad
icebp
js
call
pop
js
ds
xchg
xor
pop
sbb
xchg
retf
fs
mov
xchg
push
inc
cmps
sahf
pop
sbb
add
and
xchg
mov
cmp
and
pop
stc
ins
mov
sub
iret
xchg
test
popf
mov
mov
adc
adc
in
shl
stos
xor
push
daa
push
sbb
mov
std
jecxz
sub
mul
sbb
test
fcom
mov
(bad)
cmp
jne
sar
movs
cs
inc
add
ret
push
and
sar
inc
pushf
fsubr
clc
jl
scas
sub
loop
iret
mov
fdiv
jno
mov
retf
xor
sbb
xchg
aad
je
sbb
ret
aaa
mov
mov
xchg
push
push
inc
sahf
or
xor
ins
ret
cmp
enter
jbe
out
icebp
pop
and
je
jns
mov
jle
pop
imul
icebp
sti
jae
sub
retf
(bad)
je
mov
fwait
xlat
add
mov
dec
ret
mov
cmp
inc
xchg
pop
inc
sbb
mov
in
and
cmp
xchg
lods
stos
rcl
test
mov
cmp
test
scas
bsr
cmp
xchg
pop
adc
int3
movs
mov
jae
pop
push
repz
out
retf
jg
push
out
add
jmp
iret
fbld
mov
xor
xchg
std
pop
clc
data16
mov
or
pop
ja
das
test
xchg
lods
cwde
jnp
bound
inc
xchg
neg
neg
xlat
mov
xor
loope
cmp
scas
cmp
jmp
xchg
loop
push
add
lock
sub
sub
call
mov
inc
jo
mov
push
pop
imul
xor
loop
dec
scas
out
cmp
leave
push
jbe
retf
lods
mov
or
ds
jne
mov
push
sub
fisttp
out
dec
arpl
push
mov
jb
test
in
(bad)
mov
mov
(bad)
out
xor
inc
mov
out
and
out
cmp
jp
jge
cmp
push
test
xchg
xchg
cmp
out
movs
dec
pop
pop
icebp
int3
cmp
mul
push
mov
out
mov
mov
cmp
push
cmp
in
outs
sahf
popf
dec
and
jle
fist
mov
fisub
or
icebp
jne
mov
cmps
pop
out
cmp
jmp
ja
push
mov
sbb
add
mov
and
inc
mov
jns
pop
ror
(bad)
cwde
sub
push
sub
stos
in
jmp
mov
jae
fdiv
int
add
sub
nop
cld
xchg
push
sbb
mov
int
dec
jg
add
(bad)
ret
stos
push
ret
dec
push
imul
or
sub
jo
fldenv
bound
push
mov
xchg
out
adc
pop
push
lea
ret
adc
out
js
push
mov
loop
xchg
mov
inc
jge
into
jmp
xchg
icebp
(bad)
jg
movs
stc
outs
mov
add
and
test
pop
es
xor
sar
mov
sub
lea
pop
mov
adc
movs
cmp
jge
xchg
test
ins
lods
ror
mov
jbe
rcr
push
xor
call
sbb
movs
into
or
push
retf
in
cmps
adc
iret
jbe
xchg
mov
push
lock
sbb
dec
jmp
in
adc
dec
ret
pop
mov
iret
aad
mov
push
test
fsubr
inc
add
push
xor
inc
call
cmp
mov
push
clc
sub
lods
mov
push
mov
js
mov
push
in
daa
pop
jl
sbb
(bad)
icebp
retf
loopne
sbb
push
pop
sbb
inc
imul
repnz
rol
sbb
ret
mov
pusha
cmps
cmps
sub
sub
mov
sbb
test
clc
push
mov
repnz
lods
test
xchg
inc
sbb
cmp
sub
in
cs
add
aad
mov
mov
mov
push
dec
jbe
inc
pop
dec
jmp
(bad)
repz
repnz
in
xor
cmp
retf
pop
aaa
cld
pop
jmp
fadd
add
sbb
sub
inc
psubusw
jmp
adc
xor
mov
xchg
loopne
xor
dec
mov
(bad)
bound
inc
int3
inc
ret
xchg
cmp
sbb
outs
cli
jle
jb
pop
pop
fmulp
adc
imul
mov
int3
jg
sbb
out
mov
jmp
jnp
shr
fnsave
enter
mov
xchg
stc
stc
add
std
and
out
xchg
pop
xor
(bad)
call
movs
(bad)
sbb
add
sbb
sub
neg
and
loopne
fdivr
in
or
dec
iret
xlat
cwde
fisub
pop
mov
(bad)
and
jp
test
(bad)
fdivr
sub
out
sub
(bad)
mov
adc
pusha
inc
push
retf
inc
ret
js
(bad)
inc
mov
push
sub
cs
xor
xchg
push
xchg
fs
cmp
popf
cdq
cmp
or
fisttp
inc
dec
mov
mov
lods
xor
cmps
adc
mov
mov
loop
imul
das
and
js
push
sbb
imul
jne
das
retf
sahf
inc
lea
movs
(bad)
cmp
cmp
add
pop
dec
mov
icebp
adc
pushf
dec
mov
sbb
rol
out
jb
into
push
bound
repnz
pop
leave
inc
stos
dec
outs
mov
aas
or
jmp
or
iret
mov
cmp
and
push
sbb
xor
xor
xor
shl
out
inc
cli
cmc
sar
out
mov
add
push
jne
or
and
pmaddwd
mov
imul
out
cmp
mov
cmp
add
sub
xor
scas
xor
add
inc
scas
jmp
loope
call
xchg
cmp
in
push
xchg
inc
cmp
repnz
movs
or
mov
pop
daa
jns
mov
gs
xor
mov
mov
dec
cmc
and
fbld
push
ds
push
inc
mov
fwait
test
rcr
fwait
push
loop
adc
push
xchg
dec
or
xchg
dec
cmp
mov
pop
out
outs
(bad)
inc
pushf
inc
shr
and
(bad)
pop
xor
cmps
mov
pop
neg
cmp
push
inc
add
xchg
push
lahf
es
and
mov
cmps
sbb
and
push
xchg
sub
push
pop
pop
jno
inc
dec
clc
mov
inc
les
sub
xchg
mov
or
xchg
in
mov
dec
pop
pop
ins
mov
leave
mov
adc
retf
inc
or
xor
aas
cmp
out
xor
pop
dec
lock
mov
out
dec
lahf
shl
adc
sub
and
xor
test
mov
pop
adc
aad
push
sbb
fs
jg
jle
shr
cmp
hlt
shl
xchg
pop
jb
inc
(bad)
cld
mov
pop
mov
iret
movs
sub
push
and
test
out
out
popa
cwde
data16
and
mov
inc
mov
(bad)
loopne
(bad)
repz
push
scas
stc
xchg
jmp
arpl
or
lods
imul
mov
sub
ret
popa
adc
jge
retf
pop
fwait
test
shr
or
or
xor
dec
jmp
pop
in
jmp
xor
and
aas
inc
(bad)
out
ret
dec
pop
xor
mov
xlat
mov
aam
pop
leave
fidiv
out
loop
jno
addr16
mov
xor
es
push
and
inc
adc
imul
test
and
mov
inc
aas
sbb
imul
fmulp
mov
call
in
and
push
fwait
scas
(bad)
sub
mov
lods
stos
loope
mov
shr
imul
addr16
inc
cmp
xchg
imul
sahf
pop
dec
xor
jmp
cmp
rcr
inc
retf
nop
xor
cwde
in
jl
retf
lods
cdq
jo
sub
call
mov
icebp
repz
loopne
jnp
dec
hlt
sub
cdq
dec
test
movs
in
nop
inc
mov
and
jmp
mov
inc
jne
shr
jmp
sub
popa
leave
loopne
inc
cs
jle
pop
aas
sub
lea
ins
inc
pop
test
sub
push
adc
adc
(bad)
arpl
inc
(bad)
pop
sbb
dec
stos
lods
cmps
stos
jno
xchg
xchg
dec
dec
shl
lock
inc
or
jmp
push
test
pop
or
test
and
xchg
lock
out
loop
push
out
adc
jl
je
test
ret
fiadd
cmp
adc
popf
cmp
hlt
mov
fwait
mov
sbb
iret
cmp
fimul
je
int3
in
fmul
aaa
popf
push
xor
imul
xchg
int3
aad
pop
jecxz
xchg
int
stos
pop
js
sub
sub
or
repz
test
jl
sub
and
dec
add
adc
inc
je
mov
mov
adc
in
fmul
fild
arpl
scas
fwait
std
std
out
mov
mov
and
dec
xor
inc
or
daa
xor
or
xchg
imul
pop
mov
loop
mul
call
xor
dec
jmp
pop
inc
pushf
fidivr
int3
jl
cmp
push
or
retf
imul
inc
sti
icebp
mov
call
push
mov
div
into
in
jb
out
lea
cs
dec
xchg
cmp
push
mov
out
cli
and
es
sbb
leave
adc
stos
xor
repz
mov
dec
in
test
xor
bnd
and
cld
stc
add
in
jg
(bad)
or
jb
dec
test
and
outs
sbb
leave
fxch
fbstp
cmps
xchg
addr16
sbb
stos
mov
cmp
cs
fisttp
add
lea
lahf
xor
mov
mov
cmp
ds
out
jecxz
mov
inc
bound
push
mov
std
sahf
ja
xlat
cmp
cmp
mov
call
(bad)
xchg
call
xor
sbb
nop
xchg
dec
int3
pusha
inc
or
sub
dec
jb
fld
aad
dec
dec
cmp
rcr
rcl
pusha
mov
push
add
arpl
fs
(bad)
jae
lock
ret
sub
or
int3
xlat
sub
aas
int3
cdq
outs
outs
sbb
pop
es
dec
sbb
sub
mov
mov
add
shl
jecxz
fstp
arpl
cs
addr16
(bad)
in
cmp
(bad)
jno
dec
push
jbe
iret
dec
push
mov
in
loope
sbb
in
or
sbb
sub
rcr
test
popf
addr16
in
mov
ret
adc
pop
jmp
imul
xor
or
jb
int
sbb
into
mov
test
and
ja
neg
pop
popa
movs
and
idiv
sar
fxch
rcl
fnsave
mov
inc
inc
mov
outs
stos
push
mov
sub
push
cmp
cmp
ror
pop
into
mov
xchg
adc
imul
aad
fwait
es
(bad)
in
jbe
gs
or
nop
ror
cmps
ja
or
lods
adc
mov
stos
mov
push
rol
jp
rcl
mov
adc
push
cmps
movs
arpl
inc
push
imul
pop
push
jg
aam
ins
es
jo
jge
and
jno
mov
and
adc
xlat
ret
(bad)
push
div
jecxz
jmp
xchg
loop
add
fsubr
int3
and
or
push
(bad)
ror
fild
cmp
stos
dec
cmp
ins
cmps
push
mov
pusha
adc
or
and
outs
mov
ds
inc
fwait
mov
bound
cdq
enter
ss
sbb
es
inc
sbb
and
jne
test
cmp
outs
and
push
dec
sub
pop
or
or
arpl
xor
xchg
nop
and
push
ds
cs
data16
dec
sub
lods
or
jae
shl
pop
pusha
jp
jae
leave
sbb
lods
mov
popa
js
or
outs
or
pop
leave
movs
(bad)
push
inc
(bad)
xor
cmp
cs
lahf
inc
xchg
sub
imul
bnd
pop
mov
data16
sar
pop
or
fcomp
or
imul
mov
cdq
sbb
jae
inc
push
xchg
not
call
imul
jmp
push
jge
mov
popf
push
ja
leave
jo
lds
les
cmp
jecxz
repz
aas
xchg
aas
call
shr
clc
sub
fld
jnp
iret
sub
adc
call
out
or
push
xor
or
repz
int3
mov
push
outs
jecxz
aad
pop
sub
adc
shl
push
mov
pop
xchg
sti
js
dec
jle
out
and
into
fst
mov
mov
add
mov
arpl
loop
cmp
fnsave
popf
jae
push
sahf
pop
sbb
or
lea
pop
mov
or
mov
mov
scas
sub
adc
jmp
hlt
or
mov
or
lds
cwde
sti
clc
and
iret
in
mov
push
stc
or
pop
popf
dec
imul
dec
lods
jle
jne
jne
pop
imul
call
xor
mov
ins
ins
sub
jno
pop
sub
or
xchg
(bad)
ret
cmp
xchg
mov
bound
daa
rcl
rol
pop
push
loop
xchg
mov
xchg
xchg
sahf
and
sbb
or
je
jne
sbb
repnz
jne
fstp
ja
jae
fsubrp
mov
adc
(bad)
or
xor
cmps
rcr
sbb
out
xchg
lods
push
pop
dec
mov
test
cdq
pusha
xchg
mov
xor
add
in
enter
mov
add
mov
inc
xchg
outs
or
inc
inc
jno
mov
add
fwait
rcr
pop
inc
iret
sbb
lods
vxorps
push
aaa
dec
lea
mov
rol
jecxz
sti
sahf
pop
neg
jg
out
ficomp
dec
or
xcrypt-cbc
cmps
(bad)
mov
adc
leave
sub
pop
scas
cmps
or
mov
dec
call
retf
adc
pop
cmp
inc
int3
pop
ror
cmps
hlt
mov
div
in
retf
popf
mov
out
(bad)
test
int
or
popf
xchg
mov
adc
inc
fwait
out
jp
add
cmc
lods
xor
xchg
jg
cmps
iret
(bad)
xchg
push
jnp
test
jg
mov
xchg
es
or
arpl
inc
mov
add
or
or
arpl
dec
(bad)
xor
pminub
push
das
sub
mov
push
jbe
aam
mov
shl
fisttp
mov
cli
test
stos
in
xchg
repz
pop
ss
test
xor
inc
fadd
cmp
push
mov
mov
ins
xchg
cmp
adc
adc
lea
mov
int
mov
cs
in
icebp
outs
push
aad
mov
pusha
fld
ins
mov
inc
imul
pop
mov
xor
nop
mov
clc
out
dec
xor
leave
retf
pop
nop
js
(bad)
enter
div
adc
nop
mov
sub
into
inc
(bad)
mov
inc
out
fdiv
inc
inc
retf
ins
pop
es
mov
add
dec
sti
cmp
jge
mov
mov
xor
das
push
jecxz
mov
icebp
fsubr
pop
loope
aaa
jne
not
cmp
movs
ror
and
loope
jge
scas
cwde
or
test
push
dec
ja
dec
int3
mov
fldcw
and
pop
inc
mov
jns
out
pop
ror
retf
shl
mov
movs
push
push
sub
fld
and
sbb
lods
pop
adc
and
arpl
inc
xor
sahf
and
sub
lds
sub
sbb
retf
lods
lahf
mov
(bad)
out
jbe
stc
sub
out
inc
in
int3
add
xchg
mov
std
push
loope
out
fistp
cmp
out
jbe
push
mov
ja
pop
cmp
es
xor
adc
test
xor
popf
xor
mov
push
mov
aad
fidiv
jmp
fisub
dec
inc
iret
jae
mov
out
pop
js
xor
retfw
xchg
mov
gs
pop
popf
ds
stc
repz
call
sti
mov
inc
(bad)
outs
jb
jo
cwde
add
imul
mov
aas
std
cmp
fist
dec
ins
xor
pop
rdpmc
push
cmps
xchg
and
mov
cmp
push
rcl
not
mov
or
mov
cmp
cmp
adc
or
call
in
fs
inc
mov
jle
sbb
xchg
jle
(bad)
scas
in
mov
inc
scas
cs
mov
lods
sbb
xchg
outs
dec
call
ja
mov
lock
imul
push
fbstp
inc
xchg
pop
icebp
retf
mov
inc
test
stc
daa
idiv
div
cmp
mov
cmp
adc
imul
jne
ror
test
shl
mov
fsub
push
jecxz
fist
imul
jmp
fmul
xor
mov
(bad)
popfw
or
cmp
mov
fwait
add
xor
(bad)
mov
pushf
int3
lods
mov
push
test
(bad)
push
ficom
jae
or
xor
test
aas
nop
adc
or
out
lahf
and
dec
aad
dec
cdq
lock
js
loope
dec
int
dec
scas
mov
mov
in
sbb
sti
push
push
pop
push
cmp
out
jne
and
push
data16
(bad)
std
cli
mov
mov
add
inc
mov
adc
sub
in
jecxz
pop
push
mov
ds
push
xchg
inc
jge
push
fs
add
push
sub
loop
push
out
xchg
fild
mul
or
cs
jp
in
dec
mov
and
(bad)
push
inc
dec
loopne
xor
(bad)
inc
mov
test
pop
push
push
push
add
iret
jge
out
lea
push
inc
add
icebp
mov
lods
test
cwde
mov
and
xor
adc
es
(bad)
mov
mov
std
(bad)
pop
mov
and
or
pop
clc
pop
fmul
loope
repnz
out
loope
arpl
jb
test
mov
aas
fst
sub
das
pop
push
push
in
ret
(bad)
inc
push
jb
jp
inc
(bad)
hlt
(bad)
cmps
(bad)
repz
push
and
(bad)
and
jecxz
mov
call
in
not
pop
sub
cmp
outs
lods
xchg
or
inc
mov
jb
ja
xchg
cmp
mov
cmp
pop
push
sub
lock
jo
cmc
cs
iret
(bad)
lea
adc
jmp
xor
sbb
adc
pop
cdq
sub
loopne
pop
lahf
xor
mov
inc
and
dec
sub
out
cli
or
fstp
dec
cmp
into
dec
xor
jge
int3
pop
jns
and
aas
sbb
xchg
xor
add
push
fsubr
scas
pop
xor
push
imul
dec
xor
xchg
sub
push
mov
daa
push
jnp
and
jge
iretw
ret
xchg
cmps
fucomip
sar
pop
(bad)
movs
popa
retf
loope
push
jl
fst
jns
shl
lds
sub
imul
lahf
iret
jmp
or
inc
adc
repnz
pop
mov
ins
jbe
in
sar
cmp
fs
pusha
sbb
les
cwde
jo
icebp
(bad)
lods
jmp
outs
jg
mov
mov
imul
addr16
mov
mov
pop
out
mov
retf
fcomi
pop
inc
jge
rcr
aaa
out
mov
into
lea
(bad)
pop
cli
data16
fwait
mov
push
stos
int3
xor
and
lds
test
push
out
jae
jecxz
add
je
adc
cwde
inc
mov
cwde
fsubr
inc
mov
mov
push
lea
lods
fist
repnz
xor
div
addr16
pop
jg
xor
ins
pslld
add
mov
call
ror
add
cs
mov
push
jg
and
adc
xor
and
jo
nop
rcr
pop
scas
and
push
mov
and
xchg
iret
jecxz
xor
xor
add
mov
ret
add
nop
pop
sbb
dec
jns
push
sbb
shl
inc
cmp
pushf
dec
push
pusha
mov
cmp
ja
(bad)
pop
mov
cmp
cwde
xchg
pop
pop
inc
popf
aam
inc
popf
mov
ja
clc
add
test
jp
in
inc
mov
rcr
sub
stos
popa
xchg
gs
pop
(bad)
sahf
fwait
jmp
xchg
rcl
std
test
xor
leave
mov
scas
(bad)
not
jmp
lea
lods
cld
xchg
mov
adc
mov
adc
or
cs
int3
in
mov
mov
lahf
jbe
les
outs
jo
add
std
jno
adc
mov
outs
jae
shr
std
inc
(bad)
jmp
call
mov
jns
fcomp
mov
enter
mov
add
(bad)
js
push
in
stos
iret
mov
out
pop
ret
fmulp
arpl
leave
mov
and
add
fisubr
jecxz
(bad)
adc
xor
loop
dec
in
fild
iret
add
sub
fistp
inc
adc
sahf
push
and
sbb
adc
push
in
lea
clc
cmps
aam
sahf
addr16
cld
(bad)
adc
and
int3
pusha
movs
and
pop
int3
jbe
call
enter
xchg
test
add
aas
or
stos
cmps
pop
pop
push
and
push
or
jb
xor
shr
mov
out
add
mov
pop
push
jns
fcmove
out
push
popf
enter
lods
mov
jge
and
test
mov
mov
daa
cld
push
pop
mov
int
cmc
mov
mov
enter
loope
or
popa
cmp
shl
jmp
in
sub
and
ficomp
movs
jb
inc
pop
imul
in
sbb
push
push
xor
dec
cmp
dec
xchg
adc
mov
into
inc
dec
outs
inc
fadd
add
mov
sbb
bound
retf
inc
push
mov
inc
outs
mov
mov
test
data16
repnz
inc
cld
mov
add
loopne
and
push
pop
jne
inc
push
mov
popa
loopne
push
push
mov
lock
inc
add
out
sbb
or
adc
sub
inc
add
inc
shl
loop
mov
xchg
idiv
or
and
jge
mov
xchg
ja
movs
imul
fwait
out
jecxz
pop
sub
push
push
pop
cdq
jecxz
stos
adc
pop
xlat
and
leave
fcomp
arpl
cmp
out
call
shl
mov
pop
or
dec
stos
imul
cdq
inc
ret
(bad)
fs
adc
push
cld
jb
pusha
mov
sbb
inc
pusha
jbe
rcl
stos
lock
(bad)
jmp
sbb
push
lds
jg
cmp
jne
cmp
inc
repz
call
loope
jne
or
mov
hlt
mov
xchg
iret
adc
push
push
(bad)
dec
je
in
push
popf
mov
int
inc
dec
fisttp
aaa
ja
inc
push
cmc
jmp
lock
clc
mov
test
xchg
mov
xor
adc
sbb
fdiv
(bad)
jle
ja
cli
jecxz
add
leave
jge
lds
rcr
outs
sub
cmc
retf
pop
add
pop
dec
dec
(bad)
xchg
jnp
mov
mov
pop
pop
dec
mov
mov
adc
xlat
rcl
xchg
adc
addr16
push
inc
ja
sbb
inc
pop
lahf
adc
or
icebp
jb
and
ss
cmp
pop
das
sbb
stos
cdq
sti
(bad)
daa
push
xor
scas
lods
jbe
daa
cli
std
test
adc
or
retf
dec
cmp
mov
cdq
lods
inc
pop
and
xor
clc
push
xchg
shl
das
sbb
in
(bad)
outs
dec
loope
cmp
jbe
push
pop
call
mov
adc
rol
jne
cmc
aas
jge
or
sbb
ins
mov
jl
js
lds
sub
adc
xchg
cmc
pop
in
dec
outs
std
jmp
ins
ror
mov
cmp
cmps
push
dec
dec
or
jp
push
sub
add
mov
lock
dec
ret
add
dec
fdiv
cmp
sti
inc
xchg
int3
lea
add
repnz
add
ins
cmp
add
sahf
mov
imul
pop
pop
jnp
out
xchg
loopne
(bad)
repnz
pop
add
scas
mov
xchg
cs
mov
lock
fcomp
dec
(bad)
popf
inc
scas
lods
jl
cmp
je
push
dec
xchg
push
repz
mov
dec
xor
dec
loopne
mov
jae
into
xchg
loope
pop
and
dec
call
xor
adc
inc
sub
xchg
xchg
repz
mov
(bad)
sub
ja
xchg
push
mov
adc
mov
dec
and
inc
inc
jl
std
and
lock
push
jne
xchg
(bad)
es
js
icebp
loope
lock
jp
(bad)
jae
aas
lahf
repnz
lea
movs
jp
xchg
xchg
push
mov
test
cmp
fwait
jl
cmp
lahf
popf
(bad)
imul
add
cli
jl
xchg
push
jge
out
mov
sub
loope
pop
fidiv
fsincos
adc
(bad)
xlat
mov
xchg
int3
push
mov
stos
and
mov
cmp
outs
ror
cmc
mov
pop
je
push
jmp
or
cmc
fiadd
push
sub
mov
xor
mov
pop
fcomp
scas
push
rcr
fdiv
(bad)
push
mov
shl
pop
test
cmp
push
dec
push
push
pop
in
mov
inc
cmps
mov
push
xor
lods
shl
mov
xor
dec
fidiv
pushf
mov
cmp
dec
icebp
(bad)
stos
xor
mov
sbb
mov
pushf
out
cmps
xor
or
mov
popf
push
sti
or
js
std
movs
mov
pop
cmc
int3
mov
and
push
jns
cld
xor
enter
inc
pop
inc
(bad)
sahf
sub
add
aas
pop
cmps
dec
xor
jle
xor
out
loop
fsubr
(bad)
xor
cmp
sbb
cwde
mov
aas
fcomp
(bad)
stos
sahf
push
sbb
mov
sub
arpl
jns
test
aas
mov
ja
push
sub
add
xchg
dec
ins
mov
pushf
fimul
sti
icebp
xchg
mov
mov
popf
mov
aaa
jnp
clc
das
out
ins
xchg
dec
inc
mov
pop
dec
(bad)
lea
push
or
lods
inc
mov
mov
rcl
sub
sbb
jns
aam
mov
fidiv
rol
pop
fsub
jbe
jns
inc
cmp
sbb
icebp
add
popf
call
jns
xor
add
push
push
imul
xchg
cli
cmp
mov
xor
inc
outs
pop
inc
inc
fwait
add
in
(bad)
pop
aas
enter
pop
in
cmp
(bad)
pop
xor
inc
xchg
dec
xor
xor
xchg
mov
nop
cwde
call
fcomp
sub
call
pop
out
or
mov
int3
cmp
cmp
std
ficom
(bad)
fcomip
ds
ret
enter
sbb
lahf
pushf
and
(bad)
jae
int
jp
adc
js
pop
pop
xor
icebp
adc
lods
mov
je
cmp
js
int3
loopne
sbb
scas
sti
scas
call
cdq
pop
dec
out
and
push
and
xchg
loopne
mov
out
je
pusha
mov
rol
ret
imul
ret
and
sti
sub
pusha
pop
xlat
jmp
sbb
mov
rcl
iret
xchg
sub
or
mov
push
cld
aad
sar
ins
dec
pop
aas
outs
sub
test
das
popa
or
jo
jbe
mov
test
push
or
sub
push
push
out
jo
sbb
ds
dec
and
add
jl
(bad)
mov
(bad)
xchg
fisttp
inc
or
inc
enter
push
adc
imul
xchg
sub
pop
pop
ins
outs
rol
jp
mov
cmps
sub
and
mov
push
imul
xor
mov
repnz
ret
loop
push
push
jg
mov
leave
cmp
xchg
daa
inc
mov
std
mov
push
shl
not
sti
cmp
pop
mov
dec
outs
fist
aad
cmc
ja
mov
or
ret
mov
pop
jmp
mov
retf
xchg
scas
pop
sub
fistp
fcomi
into
ds
sub
mov
mov
lods
dec
inc
add
adc
aam
sub
push
dec
xor
push
mov
sbb
xchg
es
pop
(bad)
push
jae
pop
sbb
in
cmp
sahf
shr
call
ret
jg
mov
mov
sbb
das
std
push
push
or
enter
hlt
fwait
mov
cdq
mov
mov
nop
mov
mov
in
mov
cs
and
js
or
sbb
push
xor
mov
repz
dec
leave
lea
adc
pop
xchg
push
add
cmc
arpl
mov
dec
(bad)
sbb
in
aad
mov
jno
ins
sub
mov
pop
xor
cmps
jnp
nop
daa
stc
shl
push
inc
push
outs
xchg
clc
bt
shr
fst
or
out
cli
cmps
adc
add
pop
fild
pop
aas
ret
sub
xchg
lods
frstor
out
mov
int
mov
push
pushf
xor
add
test
sbb
loope
cs
leave
cli
loope
xor
iret
sub
mov
enter
shl
mov
call
inc
and
test
jbe
fucomip
fmul
push
pop
sbb
push
ins
test
xchg
sub
mov
test
or
daa
in
ficom
dec
dec
(bad)
sbb
push
or
(bad)
enter
mov
ret
fwait
jge
lods
sub
out
pop
and
mov
cmp
jo
mov
and
std
push
int
cwde
or
add
or
or
jbe
sar
mov
scas
jg
out
jle
(bad)
(bad)
pop
into
setb
icebp
(bad)
sbb
adc
add
push
jae
xor
mov
das
pushf
neg
imul
std
push
into
inc
jmp
push
test
push
(bad)
dec
or
mov
xchg
repz
leave
dec
cmp
jae
inc
xor
repz
push
dec
cli
pop
sub
mov
fld
mov
addr16
lods
ins
scas
push
xchg
in
shr
xor
shr
mov
test
scas
leave
xchg
mov
push
xchg
sbb
mov
push
out
adc
sbb
inc
sar
test
fild
mov
aaa
and
inc
cs
jp
push
ficomp
(bad)
mov
dec
in
std
test
dec
add
out
adc
mov
daa
pop
js
fisttp
jecxz
xchg
repz
xor
mov
add
fadd
fdivr
xchg
mov
xchg
sub
(bad)
adc
jle
outs
cli
sbb
mov
jp
mov
and
jb
xor
loop
pop
jns
test
arpl
outs
xchg
mov
ret
daa
xchg
mov
inc
mov
out
fild
nop
jbe
pop
cmps
cmp
(bad)
sqrtps
daa
and
(bad)
lods
bound
xchg
mov
or
cmps
sub
rol
push
mov
adc
xor
movs
stos
imul
test
cmp
adc
xor
clc
popa
scas
popa
fbld
xchg
add
cmp
enter
pop
sbb
and
gs
mov
mov
mov
jmp
add
pushf
xchg
out
xchg
hlt
adc
scas
pop
mov
push
push
js
shl
cmps
xchg
push
jnp
and
dec
je
dec
push
ror
ret
xchg
scas
fdiv
icebp
cli
leave
lea
(bad)
pop
aas
adc
sbb
out
outs
(bad)
dec
movs
not
mov
mov
(bad)
cmp
clc
(bad)
dec
push
xor
mov
cdq
sbb
imul
xchg
xor
iret
daa
xlat
jae
shl
div
xchg
mov
in
push
add
push
imul
sbb
cmp
jmp
sbb
shl
ret
push
bnd
out
bsr
adc
fs
sub
repnz
pop
retf
in
xchg
fsub
mov
ret
fwait
mov
xchg
arpl
push
mov
sub
mov
cmp
cld
and
loope
xor
xor
or
jmp
fst
ja
sbb
mov
mov
cmp
add
mov
sub
rol
dec
inc
or
outs
pop
adc
(bad)
mov
push
push
sub
push
adc
pop
adc
mov
mov
fdiv
pop
mov
pop
rcr
scas
clc
dec
fcomp
jns
int
pop
mov
jne
xchg
call
mov
push
test
in
mov
jmp
xor
fwait
push
retf
xor
lods
dec
not
loope
mov
aaa
lahf
sbb
jp
in
adc
fld
sbb
pop
pop
(bad)
mov
sub
sub
cmp
es
imul
movs
dec
mov
xchg
add
add
sub
clc
mov
xor
xor
jg
call
sbb
cmp
push
mov
jbe
mov
jge
and
hlt
mov
and
test
test
shl
jne
or
(bad)
pop
test
jne
xchg
leave
cdq
mov
pushf
jmp
ins
in
jecxz
into
inc
dec
and
into
cmc
in
aaa
sbb
adc
out
mov
fwait
push
add
or
nop
mov
or
sub
mov
push
xlat
mov
cmps
jb
sub
mov
or
jmp
pop
scas
sbb
cdq
xchg
jge
pop
mov
sbb
push
xor
dec
test
cmc
mov
xor
les
jl
dec
xor
repnz
imul
loope
lock
cmps
jbe
xchg
dec
ins
push
push
nop
mov
aas
adc
ins
bound
and
out
xchg
mov
aaa
inc
push
xchg
add
push
out
ins
pop
sbb
or
das
jge
ins
daa
enter
mov
inc
lods
aam
pop
xchg
call
add
retf
das
push
les
mov
xchg
or
imul
call
fcomp
pop
ret
dec
inc
ins
maskmovq
push
mov
pop
inc
call
test
outs
mov
dec
push
sub
pusha
adc
add
jne
not
jo
cmp
mov
push
adc
arpl
add
jmp
(bad)
inc
xor
bound
jp
into
and
mov
clc
push
xor
mov
dec
sbb
seta
mov
bound
dec
lods
sbb
sahf
test
mov
mov
fdiv
xor
inc
xchg
dec
in
pop
sub
push
cld
adc
sub
rcl
stos
inc
in
adc
cdq
jp
xchg
xchg
ret
push
pop
in
dec
lock
data16
inc
add
mov
xchg
inc
xchg
fcomp
loop
inc
jle
pop
mov
mov
xchg
or
push
xor
lock
lahf
cmp
mov
int3
xchg
cmp
scas
mov
lds
imul
pusha
pop
retf
fwait
jae
push
pop
addr16
ds
mov
jmp
jne
out
lods
loope
loopne
dec
cmp
xor
lds
and
js
imul
jmp
xor
out
and
out
jb
mov
sub
clc
ja
sub
(bad)
jge
dec
add
das
mov
mov
ret
cdq
sub
fnstenv
retf
call
push
pop
add
dec
push
cmp
adc
pop
cmp
icebp
inc
inc
push
mov
dec
xlat
sub
pushf
xor
push
fldz
stc
mov
jl
jmp
rcr
(bad)
outs
mov
mov
pop
loop
jnp
mov
jne
xchg
mov
dec
or
mov
loope
mov
(bad)
or
sub
iret
bound
lods
sti
inc
popa
pop
int
sub
xchg
sbb
push
call
and
push
cmc
pop
mov
inc
call
mov
add
jg
in
cwde
mov
adc
jo
mov
sbb
push
icebp
movs
sbb
call
push
outs
int
mov
mov
pop
hlt
aam
inc
pop
repz
test
or
cs
aad
rcl
sub
dec
iret
dec
test
outs
xor
adc
push
inc
scas
js
dec
sti
adc
popf
xchg
mov
dec
mov
inc
loop
xchg
pusha
push
stos
(bad)
fnstsw
sbb
mov
and
mov
fist
scas
not
jae
daa
inc
shr
aam
mov
(bad)
js
mov
mov
push
popf
ja
mov
data16
out
and
push
les
(bad)
stc
adc
or
mov
int
lds
sub
mov
dec
mov
loop
fadd
adc
mov
pop
push
fwait
psllw
mov
inc
push
loope
ds
scas
xchg
push
je
mov
jns
push
push
je
and
not
arpl
bound
inc
in
inc
cmc
hlt
xchg
cmp
jl
cli
fmul
xchg
pop
(bad)
ror
add
jecxz
xchg
repz
loopne
es
sti
js
aad
jecxz
nop
sub
sub
xchg
test
popa
es
dec
push
shl
mul
sub
add
stc
in
mov
loop
push
dec
mov
test
mov
adc
inc
(bad)
(bad)
or
dec
jb
push
leave
jmp
and
test
jge
sbb
test
dec
and
adc
add
cdq
cmp
(bad)
jg
data16
rcr
pop
ins
or
les
pop
sub
mov
(bad)
adc
dec
aas
sbb
shl
(bad)
mov
fsubr
sbb
fcomp
and
das
inc
mov
xchg
xchg
movs
sub
(bad)
jg
push
push
push
add
fisttp
push
movs
dec
xlat
iret
ins
cmp
lahf
repnz
sub
dec
push
mov
test
jge
clc
pop
cmp
add
test
popf
sub
mov
ins
cwde
jg
sar
out
cmp
adc
xor
(bad)
int3
outs
mov
or
lods
and
sbb
in
push
outs
xlat
sbb
iret
lods
bound
daa
mov
xchg
push
cmp
mov
stos
loopne
mov
aas
fld
mov
xchg
adc
add
xor
pop
push
int3
add
and
imul
shl
and
and
popa
movs
sub
punpckhwd
cmp
cmp
dec
xchg
jae
lods
into
jne
mov
mov
cmc
loop
push
push
mov
pusha
jecxz
add
pop
mov
imul
test
enter
jl
jns
inc
jmp
dec
pop
sti
into
test
xor
mov
out
(bad)
mov
les
lock
dec
jmp
mov
in
mov
push
(bad)
pop
test
sahf
mov
sbb
mov
mov
cmps
sar
retf
add
xchg
cmp
retf
pop
or
cld
adc
xor
push
xor
retf
lods
inc
adc
mov
pop
add
clc
in
mov
stos
add
aaa
gs
dec
ror
arpl
ins
bound
lahf
push
or
retf
fwait
pop
pop
xor
sbb
pusha
push
test
iret
xchg
std
mov
lods
aad
aad
pop
ins
inc
dec
fdivr
fwait
cwde
outs
mov
mov
(bad)
std
jae
ret
not
xor
mov
sbb
mov
lods
(bad)
in
sbb
lods
jbe
js
or
sub
(bad)
jne
jge
mov
mov
fisubr
ficomp
aaa
in
xor
cwde
or
xor
gs
inc
mov
add
mov
bound
mov
imul
iret
iret
or
mov
fwait
cmps
jle
pop
or
inc
jmp
or
inc
mov
push
out
cmps
xchg
call
push
jbe
mov
mov
cmp
stos
loop
cwde
inc
in
push
jae
dec
sbb
pop
push
repnz
adc
pop
gs
lds
inc
xchg
(bad)
retf
sub
dec
enter
in
xchg
arpl
add
inc
mov
or
in
xchg
inc
xlat
(bad)
in
xchg
imul
ins
push
sub
div
xor
mov
or
gs
test
(bad)
sbb
sahf
daa
in
frstor
pop
push
sbb
iret
ins
jge
rcr
pop
sub
shl
je
enter
and
add
xor
push
ins
aaa
or
sahf
adc
pop
mov
sub
cmp
cmp
sti
xor
in
add
xlat
push
sbb
pushw
and
(bad)
in
sub
test
call
movs
sbb
dec
mov
lahf
sub
jno
stos
pop
or
int
pop
lea
pop
sbb
cdq
xor
jne
int3
adc
jmp
adc
mov
das
iret
js
sahf
ins
lahf
add
repnz
cdq
cmp
vpsubq
jns
lods
pushf
int
test
dec
shl
loop
fsub
pop
xchg
enter
movs
out
cld
cmp
scas
mov
repz
sub
add
cmp
retf
cdq
sub
and
(bad)
mov
xchg
push
not
fwait
mov
loopne
stos
or
ins
mov
sub
jmp
enter
mov
sub
movs
mov
movs
add
(bad)
lods
pop
cmp
add
cmc
neg
iret
and
ret
push
mov
imul
movs
push
sub
jno
mov
jns
and
add
enter
icebp
cmps
fcomp
daa
pop
retf
ja
mov
(bad)
and
xor
iret
dec
sbb
vhsubpd
xor
pop
jns
sbb
cmps
inc
shl
dec
inc
mov
je
inc
f2xm1
call
push
pop
jg
ins
cwde
scas
out
adc
add
mov
mov
clc
neg
stc
call
ror
es
inc
cld
and
sub
ins
jae
dec
movs
jb
or
xor
mov
jecxz
scas
cld
jbe
int3
jo
(bad)
push
dec
mov
or
dec
dec
daa
cmc
jb
mov
push
scas
xor
outs
gs
es
mov
aaa
xor
jnp
outs
sub
xchg
sub
mov
gs
lods
not
cmp
imul
mov
loop
push
js
jmp
add
push
jae
xchg
add
mov
inc
push
jne
mov
xchg
fmul
daa
repnz
sbb
into
jmp
mov
rcr
cmp
jle
mov
dec
hlt
popf
mov
cs
xlat
sub
pop
lods
mov
cmp
push
jp
mov
sbb
and
inc
fmulp
test
jae
mov
scas
fldcw
dec
mov
mov
leave
mov
ror
push
test
lods
cdq
test
into
xor
mov
push
scas
dec
adc
stos
mov
cmc
or
mov
jno
xlat
movs
adc
xchg
mov
addr16
mov
mov
xchg
sti
push
sahf
cmp
mov
and
in
lahf
cwde
mov
add
jp
push
sub
jp
movs
jle
mov
enter
cmp
mov
imul
jmp
jge
cmps
in
fcmovbe
mov
rol
test
mov
dec
call
mov
and
dec
hlt
or
mov
jbe
ret
push
ins
retf
inc
inc
fldcw
xchg
sub
sbb
icebp
xor
ja
rcl
jp
inc
js
or
movs
ss
pop
test
push
stos
in
fist
push
call
mov
fdivr
repz
xor
cmp
cli
callw
lods
repz
sbb
test
ret
cmp
sbb
push
movs
mov
sub
scas
or
arpl
daa
and
je
rcl
cmp
add
jg
ins
fld
ds
pusha
adc
xchg
adc
je
scas
punpcklbw
in
or
jo
clc
shl
jno
iret
mov
aaa
xchg
adc
(bad)
sub
ins
mov
jge
mov
jge
add
sbb
mov
mov
inc
(bad)
jne
mov
pop
cs
(bad)
xchg
or
icebp
push
lods
aaa
or
xlat
pop
(bad)
sbb
hlt
inc
xchg
out
(bad)
cmc
lods
sub
nop
dec
out
dec
jae
loopne
push
movs
sahf
mov
adc
mov
xchg
mov
test
popa
pusha
add
sub
rcl
jno
nop
adc
sub
ja
sub
js
scas
das
pop
icebp
or
fistp
dec
jecxz
xchg
pop
or
dec
daa
shr
les
lea
cli
or
inc
sub
mov
push
sbb
outs
mov
adc
inc
sbb
mov
xchg
push
or
inc
inc
mov
sbb
lea
mov
call
jp
movs
push
pusha
pop
and
js
dec
inc
fist
fcomp
retf
mov
dec
adc
call
and
(bad)
cmc
mov
jae
scas
std
test
push
inc
sbb
jl
(bad)
sbb
test
ins
dec
xchg
or
aam
and
aam
les
fldcw
jne
into
sbb
xchg
dec
xchg
mov
adc
stc
push
ds
inc
retf
int
sbb
test
or
fst
mov
mov
loope
jg
or
xchg
adc
aas
add
rol
xor
fwait
and
bound
sbb
test
aas
mov
nop
inc
adc
ret
fnsave
hlt
add
xchg
cmp
add
xchg
jle
aam
and
cmps
cmp
lahf
gs
je
into
mov
inc
fistp
repnz
or
sub
add
dec
dec
mov
ror
retf
daa
in
es
(bad)
mov
mov
adc
imul
xchg
aas
mov
push
sbb
inc
clc
push
mov
pop
inc
xchg
test
shr
(bad)
loope
inc
adc
and
fidiv
pusha
mov
cmp
rol
js
stos
add
push
jo
addr16
jle
pop
or
mov
push
cmp
xor
ret
and
repnz
addr16
outs
inc
adc
repnz
mov
lahf
dec
pusha
out
scas
movs
and
xor
xchg
shl
mov
out
jmp
test
or
mov
inc
jns
push
mov
movs
mov
fincstp
adc
leave
enter
xor
mov
sub
mov
int
push
repnz
add
xchg
jo
ret
add
sahf
stc
loop
adc
(bad)
repnz
sub
cmps
dec
xor
add
jmp
fst
ja
in
mov
push
mov
xor
mov
dec
and
test
mov
mov
sub
arpl
pop
fisubr
aam
push
fisubr
sub
jmp
into
in
mov
ss
fwait
xchg
push
xor
or
mov
(bad)
inc
test
pushf
fcom
test
(bad)
ss
out
mov
adc
pushf
cmp
mov
adc
outs
sbb
gs
adc
pushf
mov
lahf
mov
addr16
mov
sar
int3
pop
cmp
xchg
rol
xchg
mov
pop
mov
(bad)
retf
pop
(bad)
cmc
push
rcl
jbe
shl
inc
in
stc
je
xchg
fs
rcr
push
ret
jmp
push
mov
push
ffreep
call
mov
inc
cmp
jo
dec
out
leave
out
or
dec
fwait
or
cli
add
out
mov
loop
out
loopne
cmp
adc
and
lods
pop
ins
imul
bound
mov
stc
jno
pop
movs
rol
in
mov
pusha
and
and
dec
push
xor
pop
dec
leave
out
lahf
mov
mov
imul
(bad)
fdivr
add
mov
cmp
jbe
arpl
cmp
(bad)
or
leave
(bad)
push
mov
mov
xor
jo
lods
enter
xchg
shl
xchg
dec
int3
jge
daa
jbe
mov
rcl
mov
sbb
(bad)
inc
cwde
jns
movs
out
cmp
pop
test
scas
std
std
push
outs
xchg
addr16
mov
or
pop
or
and
enter
imul
and
sti
mov
repnz
scas
cmp
and
enter
push
push
ins
cs
pop
push
scas
scas
cwde
jmp
sub
push
daa
fldcw
cmp
icebp
push
stos
jge
sbb
fnop
pop
loopne
xchg
mov
(bad)
pop
xchg
lea
xor
(bad)
mov
sbb
js
inc
pop
sbb
push
mov
dec
sub
sub
dec
mov
sub
call
imul
repnz
cmc
outs
mov
fst
test
mov
push
xor
in
out
sub
shl
jns
pop
pop
mov
pop
jge
jne
stc
dec
stos
mov
rcr
pop
cmps
inc
or
jp
add
or
clc
fst
ret
jb
xchg
push
int
dec
sub
inc
fnstsw
mov
in
xchg
or
rcl
(bad)
ficom
push
push
lahf
add
lea
pop
ja
lds
sub
pop
inc
push
pop
pop
rol
mov
xor
data16
hlt
mov
or
jne
(bad)
sti
cmp
push
pop
adc
push
arpl
aad
or
pop
xlat
ret
repz
push
cmc
jge
mov
cmp
imul
push
icebp
cli
int3
dec
inc
xchg
jle
jbe
xchg
dec
loopne
popf
leave
or
pop
hlt
pop
jmp
inc
cmp
sbb
loope
and
(bad)
xchg
out
pop
push
out
mov
push
enter
loopne
ror
stos
ins
pop
mov
mov
cmp
pop
sub
push
lods
xor
add
sti
fcom
out
mov
sub
test
shl
bound
pop
arpl
fyl2xp1
js
sbb
pushf
push
mov
(bad)
ror
aaa
cmc
jno
sti
pop
jp
jbe
lods
call
or
ins
div
test
lods
icebp
cmp
cmp
adc
bound
and
inc
sub
inc
mov
ins
aad
cmp
push
or
jle
jae
xchg
cld
mov
cs
stos
and
out
push
sbb
iret
push
rcr
popa
scas
or
mov
fidiv
mov
pop
movs
and
mov
aad
adc
adc
xchg
push
mov
sbb
in
xchg
mov
pop
add
pop
stos
jnp
(bad)
push
daa
or
dec
cmp
pop
call
jo
cmp
mov
loop
adc
cmp
mov
jb
mov
fld
mov
ins
cld
jg
(bad)
cmp
mov
(bad)
xor
pop
aas
pop
(bad)
out
rcl
push
je
pop
int
stos
cs
push
dec
stos
call
cmps
add
or
push
cli
out
ret
dec
test
mov
dec
add
push
xchg
in
les
add
in
outs
shl
out
js
adc
mov
call
not
ja
and
sti
mov
lea
int
add
cmps
sub
lock
in
and
mov
gs
popf
xor
cld
addr16
mov
mov
mov
mov
pop
scas
loop
ret
sbb
mov
(bad)
arpl
and
int3
sbb
jno
pop
dec
xchg
dec
sub
mov
mov
sbb
jbe
xchg
xchg
popa
rol
jmp
sub
scas
push
jmp
shl
or
xchg
push
ret
mov
cs
adc
retf
pop
test
push
sub
mov
loope
pop
cmp
xor
dec
lds
mov
call
dec
sub
sub
cdq
mul
ins
cmp
(bad)
fistp
(bad)
shr
cmp
and
(bad)
push
mov
cmp
aam
pop
test
push
mov
xchg
sbb
std
cmc
xchg
jnp
scas
iret
sub
aam
mov
call
or
sub
xor
ja
mov
and
ror
div
xchg
fcom
inc
jo
aam
fmul
and
enter
dec
push
sbb
xor
movs
push
push
sub
enter
dec
ret
movs
icebp
ret
pop
stc
aam
dec
inc
and
pop
dec
fs
es
jmp
add
jae
js
sbb
push
das
jge
mov
addr16
dec
mov
jo
and
mov
out
cmp
push
es
cmp
jmp
in
mov
je
std
pop
mov
and
pop
sub
add
mov
rol
popa
lods
mov
mov
and
mov
or
mov
sbb
mov
test
or
cmp
mov
cs
xchg
lock
pushaw
xor
dec
sub
dec
xchg
aam
ret
aam
jnp
sbb
(bad)
das
lahf
into
mov
jns
jg
mov
icebp
loope
test
pushf
add
jns
xchg
sub
imul
in
lds
and
dec
(bad)
mov
repz
pop
cld
jno
enter
int3
add
jmp
test
rol
dec
mov
cdq
xchg
movs
inc
ret
sbb
les
push
popf
adc
cmp
dec
movs
imul
cmc
shl
cmp
aam
cld
repnz
or
test
aam
sar
inc
rcl
push
ins
(bad)
cld
cld
push
outs
dec
mov
push
lods
add
inc
lds
sti
ins
test
sbb
inc
leave
sub
(bad)
arpl
fmul
inc
sbb
xor
(bad)
popa
leave
popf
mov
bound
imul
ins
pop
xor
call
je
fimul
xor
push
js
(bad)
ja
movs
jmp
push
push
aas
xchg
inc
bound
adc
xor
outs
dec
das
mov
add
mov
xchg
ret
xchg
sub
cs
mov
add
dec
add
sub
addr16
jne
dec
lods
lds
dec
push
cld
lods
movs
mov
push
jbe
sub
sbb
int
pop
sar
cmp
mov
adc
lods
bnd
cli
fwait
(bad)
inc
sahf
sbb
in
push
pop
jbe
out
jecxz
adc
outs
sub
mov
jecxz
(bad)
in
cmps
mov
dec
sub
mov
in
and
xchg
adc
stc
jae
retf
mov
fbld
jbe
outs
inc
dec
add
imul
xchg
push
xor
or
bound
inc
ss
cwde
fimul
mov
vrsqrtss
lock
jnp
ins
jle
jmp
movs
lahf
dec
bound
sahf
cmp
xacquire
or
sbb
xchg
jp
jns
out
push
stos
sub
sub
adc
push
jl
pop
and
int
mov
outs
cmp
test
push
xchg
mov
fiadd
fist
jbe
push
pop
jo
add
into
or
xchg
(bad)
(bad)
ret
cmc
int3
inc
ds
dec
enter
shl
xor
shr
rcr
test
sub
mov
jbe
mov
inc
inc
jno
or
cmps
cs
test
mov
shl
cmp
pop
mov
cmps
test
(bad)
fild
cld
lods
sets
mov
test
push
cmp
mov
shl
or
push
push
(bad)
jno
aaa
ret
push
pushf
adc
xor
mov
movs
inc
jl
test
pop
imul
xchg
call
jg
adc
and
cmps
cmp
push
pop
adc
pop
out
jne
test
std
out
fisub
cmp
cmp
and
fld
jbe
popa
xchg
adc
inc
dec
jb
or
mov
shr
or
sbb
and
leave
popa
pusha
pop
add
pop
xor
test
imul
fistp
adc
mov
mov
addr16
inc
das
sbb
loopne
test
push
mov
pop
movs
clc
push
mov
jo
mov
cs
or
mov
repz
dec
xor
leave
mov
or
std
pop
and
adc
jge
retf
pop
mov
ss
mov
mov
pop
jae
cmp
(bad)
mov
das
pop
mov
push
xchg
and
fnsave
pop
pop
pop
sub
xor
gs
lods
jne
iret
aad
addr16
jle
lahf
into
nop
cmp
inc
sbb
imul
inc
dec
retf
pop
and
popf
sub
dec
aaa
mov
(bad)
mov
loopne
dec
loop
mov
out
push
aam
pop
in
mov
xchg
xor
adc
mov
lea
xchg
int3
leave
into
shr
jbe
dec
push
popf
imul
push
sbb
leave
mov
adc
out
xor
cdq
xor
cmp
jne
scas
loop
and
pusha
dec
sbb
xor
jne
dec
sub
mov
out
xchg
xchg
inc
sbb
push
fidiv
cmp
retf
jmp
add
sti
push
ins
mov
xor
out
push
aaa
jbe
mov
push
jmp
aam
leave
mov
mov
test
or
ins
popf
lods
mov
fild
mov
repz
scas
int
and
ret
mov
arpl
mov
add
dec
push
shl
cmp
push
test
push
retf
leave
mov
or
xor
sub
(bad)
mov
xchg
add
add
jmp
outs
scas
adc
cmp
xor
mov
outs
js
mov
mul
add
inc
jg
inc
sub
retf
into
pusha
retf
xchg
push
ds
fdivr
sub
or
xlat
(bad)
xor
xchg
pusha
pop
loope
out
ja
mov
shl
test
and
into
sbb
cmp
cmp
es
dec
mov
push
in
add
sbb
sbb
mov
pop
cmps
sbb
mov
and
mov
mov
xchg
sbb
out
dec
sti
push
pop
stos
les
pop
pop
xchg
adc
mov
leave
movs
push
mov
imul
test
dec
retf
or
mov
mov
(bad)
pop
dec
mov
outs
cmp
icebp
jle
in
gs
xor
inc
inc
cwde
or
sbb
jecxz
cmp
cmps
xor
push
sahf
adc
not
ins
xchg
int
imul
pushf
cdq
jecxz
xor
add
imul
inc
mov
mov
nop
xor
fldcw
push
call
add
xchg
loope
gs
cmp
shl
int
xchg
out
aam
js
aam
mov
bound
mov
jge
test
imul
repnz
pop
(bad)
adc
es
movs
aam
or
es
dec
daa
cs
cmp
icebp
cdq
movs
cs
or
cli
jne
int3
cmp
enter
in
(bad)
sti
pushf
lock
xchg
call
aaa
inc
fwait
shr
or
cmc
iret
daa
and
or
in
dec
gs
in
fisttp
movs
mov
lods
sbb
dec
xor
enter
cmc
jb
fmul
jmp
int3
sbb
cmc
push
sub
adc
xchg
jne
lods
push
sub
push
retf
daa
(bad)
jp
pop
mov
scas
sar
stos
xlat
test
clc
cwde
push
cmp
sbb
mov
stos
imul
fsubr
and
cmp
or
adc
push
jo
(bad)
in
jge
push
popf
mov
pop
popw
popf
or
icebp
push
je
(bad)
mov
mov
or
xchg
jnp
xor
cmps
mov
mov
das
mov
push
inc
shl
adc
retf
dec
cld
jg
test
dec
sub
xor
retf
dec
push
leave
xor
mov
add
adc
fisubr
cwde
jmp
push
dec
pop
and
mov
add
scas
ja
movs
xor
int3
xor
fisub
clc
test
ins
sub
mov
in
mov
lahf
sub
ins
lahf
jecxz
retf
mov
or
add
inc
add
jo
dec
test
rol
cmp
movs
call
inc
add
pusha
inc
inc
or
fld
push
(bad)
jae
add
pop
xchg
das
add
jbe
into
and
push
retf
cmp
imul
popa
call
mov
mov
mov
push
jmp
test
rcr
dec
jmp
mov
popa
jbe
lods
push
or
push
sub
xor
mov
push
fcomp
and
pop
jne
fsub
fst
inc
jnp
pop
jl
xor
lods
cmp
pop
jg
retf
ficomp
and
stos
xchg
repnz
fisubr
cmp
repz
jnp
aam
call
cmp
cmp
arpl
mov
or
mov
dec
xchg
mov
push
dec
rol
out
(bad)
push
cwde
out
sar
cmp
jp
adc
inc
addr16
imul
inc
shl
sub
rcl
(bad)
sub
shl
repnz
pop
push
mov
std
loop
test
loop
ds
bound
loop
xchg
scas
enter
cld
add
mov
jp
out
jmp
sbb
pop
jle
outs
scas
test
mov
(bad)
xor
popa
nop
inc
sub
nop
sub
pop
in
mov
or
bound
adc
call
jmp
mov
inc
stc
jl
sub
aad
pushf
aam
xlat
sbb
adc
jne
jl
and
add
cmp
dec
cli
int3
std
ja
push
icebp
push
mov
in
popa
xchg
popf
fiadd
sbb
or
and
dec
(bad)
stc
pop
inc
repz
jae
ret
mov
call
sbb
mov
data16
inc
and
mov
sbb
cmp
jae
movs
fnsave
adc
imul
lock
enter
mul
xchg
cmps
retf
pushf
(bad)
xchg
add
movs
add
cmp
cmp
outs
xor
in
adc
out
fsub
inc
mov
sbb
push
pop
pop
gs
aaa
mov
stos
repz
and
(bad)
outs
stc
adc
adc
cmp
int3
dec
cmp
cmp
rol
jmp
mov
jmp
pop
or
cmp
add
push
mov
dec
and
adc
xchg
out
mov
jle
cmp
(bad)
jg
cli
adc
inc
in
rcr
jb
fild
in
stos
mov
arpl
fiadd
jecxz
std
mov
dec
adc
jecxz
mov
mov
(bad)
lock
test
ficomp
jl
jnp
popa
ret
xchg
out
xor
int3
and
push
in
lods
into
sbb
mov
shl
repnz
add
xchg
mov
pusha
rcr
jnp
and
fcompp
pop
inc
pop
dec
arpl
in
pop
pop
retf
mov
or
jne
mov
les
fs
out
ins
push
sahf
pop
ficom
arpl
loopne
fcmovnb
jo
rol
scas
test
test
jmp
movs
and
sahf
or
pusha
or
pop
shr
adc
jns
