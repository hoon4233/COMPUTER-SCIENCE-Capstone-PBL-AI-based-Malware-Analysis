pop
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fs
sub
inc
cmp
ret
cmp
inc
sti
add
sbb
iret
xchg
cmp
int
push
aaa
sahf
adc
xchg
dec
inc
cmp
push
repz
stc
and
test
popa
sbb
dec
adc
int3
cld
adc
or
jno
inc
sub
jmp
cmp
mul
int
pop
push
loop
nop
ins
nop
scas
iret
mov
or
out
fldenv
or
jo
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
add
jle
add
add
jo
add
and
jb
outs
addr16
add
add
add
and
add
add
add
inc
push
dec
inc
add
add
add
add
ins
outs
bound
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
jmp
add
add
add
and
add
add
lahf
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
leave
add
add
add
add
retf
add
add
add
add
add
add
add
jnp
arpl
xor
bound
sub
sub
sub
bound
cmp
xor
jge
cmp
outs
fs
gs
ja
fs
push
jns
xor
push
ja
push
jne
inc
xor
dec
inc
inc
push
push
js
fs
dec
ins
push
push
xor
jns
push
ja
dec
dec
inc
xor
js
pop
xor
pop
push
jbe
xor
push
push
xor
cmp
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
arpl
jb
outs
je
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
je
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
jb
ss
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
gs
outs
jb
cs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
outs
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jb
imul
outs
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
outs
outs
jge
jo
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
gs
gs
jne
arpl
cs
jne
je
imul
add
add
sub
mov
inc
stos
cs
mov
mov
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
cwde
retf
repz
cwde
enter
pop
mov
dec
mov
xchg
and
(bad)
movs
test
jnp
sahf
out
sti
xchg
jns
jae
or
pop
mov
mov
retf
dec
cmps
cmps
sbb
dec
pusha
scas
push
xor
idiv
mov
call
jl
xchg
mov
arpl
popf
lods
cvtdq2ps
mov
(bad)
xor
mov
pop
mov
jnp
or
or
cdq
add
add
mov
xchg
and
jnp
dec
cmc
dec
xlat
loopne
mov
and
nop
inc
adc
ror
imul
retf
gs
pushw
inc
int3
in
popf
mov
mov
mov
dec
daa
neg
(bad)
aas
pop
add
dec
fcmove
sahf
and
jle
pop
aas
and
xlat
clc
mov
lea
xlat
clc
jne
(bad)
push
(bad)
std
imul
jg
scas
and
out
test
adc
push
stc
pop
(bad)
sahf
(bad)
xlat
clc
fstp
lahf
call
scas
pop
repz
aas
(bad)
mov
mov
pop
movs
shr
fidiv
cmc
jp
push
retf
hlt
jmp
xor
outs
pushf
cld
outs
or
in
scas
icebp
imul
jg
pop
jecxz
sti
mov
out
jg
imul
mov
inc
mov
pop
call
clc
xor
aas
sti
or
cli
cmp
stc
std
xlat
adc
out
cdq
lock
jle
pop
jecxz
cld
ret
jg
pop
jecxz
jecxz
mov
iret
or
xchg
clc
in
and
jg
mov
imul
std
dec
outs
jle
pop
jecxz
clc
or
cli
sti
fcmovnu
(bad)
ss
ror
mov
mov
mov
jno
aam
cld
add
or
iret
jg
mov
sbb
jns
push
inc
(bad)
xor
aas
(bad)
ins
mul
sbb
(bad)
xor
imul
aas
icebp
jmp
sbb
cwde
daa
ds
xor
(bad)
cmps
out
stc
mov
jle
pop
jecxz
dec
mov
mov
pop
hlt
out
outs
mov
(bad)
mov
movd
xor
cmps
jmp
std
icebp
jmp
sbb
lds
imul
jg
out
dec
cmp
fwait
call
mov
std
aaa
mov
cld
mov
jns
mov
scas
icebp
imul
hlt
repz
stc
pop
jg
pop
jecxz
movs
iret
(bad)
lods
hlt
xlat
clc
xor
ins
call
stc
imul
call
out
scas
test
cld
sbb
sub
sti
outs
and
call
std
(bad)
lahf
shl
cli
out
mov
inc
xlat
inc
push
(bad)
std
call
mov
adc
fisttp
push
inc
mov
lahf
mov
cld
cmp
cld
inc
add
aaa
movs
out
scas
jmp
(bad)
aaa
jmp
test
dec
cli
stc
jecxz
iret
pop
cmps
iret
(bad)
fistp
sar
mov
lahf
mov
(bad)
jmp
sti
pop
push
fwait
dec
mov
or
adc
jmp
(bad)
inc
push
test
outs
dec
lock
cli
std
ja
jno
sub
mov
lahf
call
hlt
(bad)
ja
sub
(bad)
adc
shl
imul
jg
jge
pop
adc
aam
lahf
dec
(bad)
(bad)
hlt
fisubr
(bad)
push
hlt
dec
call
sbb
(bad)
lahf
loopne
cli
sti
sbb
cmovno
mov
sbb
std
std
iret
rcr
ja
int3
jg
loope
pop
rcr
jg
or
pop
hlt
repz
jp
jg
(bad)
and
(bad)
call
cmp
shl
cs
aas
xchg
mov
jg
sbb
sbb
aas
movs
out
inc
(bad)
ffreep
pop
shr
jg
cmc
xor
jl
or
pop
inc
aas
jae
sti
adc
idiv
mov
jne
out
jg
fdivrp
ins
test
jg
(bad)
(bad)
out
sar
jmp
dec
movs
mov
sbb
aas
dec
jg
arpl
sbb
(bad)
scas
shl
aas
dec
in
call
jmp
jge
sbb
iret
jg
(bad)
dec
mov
arpl
jmp
jle
push
jnp
sti
jg
ds
je
mov
mov
test
out
dec
in
(bad)
popa
cli
(bad)
mov
jmp
mov
mov
addr16
sti
pop
dec
(bad)
out
hlt
(bad)
mov
mov
cmp
or
pushf
out
aaa
mov
lods
or
outs
dec
out
jg
cmp
idiv
cmp
lahf
inc
in
jg
cli
cld
lahf
es
(bad)
xchg
fist
fwait
arpl
out
(bad)
fwait
aam
iret
sti
popf
inc
push
jmp
xor
push
pop
jg
mov
fisttp
mov
push
dec
(bad)
call
call
mov
mov
pop
and
cmps
hlt
sti
aas
inc
out
mov
int
inc
out
inc
les
mov
fisub
mov
jg
call
clc
push
mov
dec
icebp
lahf
shl
mov
jg
hlt
jmp
or
addr16
dec
push
fisttp
pusha
mov
mov
mov
pop
loope
inc
je
inc
mov
and
(bad)
sti
hlt
sti
pop
dec
jge
(bad)
hlt
call
push
sar
das
jmp
(bad)
scas
aam
ja
ja
sub
das
ret
(bad)
jmp
lock
mul
std
mov
in
das
sar
inc
pop
hlt
repz
and
mov
jp
mul
repz
rcr
call
sar
hlt
(bad)
pop
inc
fistp
pop
jg
cmc
idiv
push
inc
sar
or
lahf
dec
(bad)
adc
lahf
shl
adc
sub
in
ja
(bad)
call
sti
mov
ja
sbb
sti
or
inc
mov
jns
jns
(bad)
mov
hlt
repz
imul
push
xchg
push
fstp
jle
jmp
daa
hlt
into
push
aam
dec
(bad)
jg
lock
cli
out
outs
cmps
(bad)
jg
(bad)
push
hlt
fldcw
ret
movs
iret
jle
jp
jg
int
scas
jmp
dec
jmp
repz
shl
call
loope
mov
mov
and
and
call
loope
jmp
(bad)
call
call
cmc
imul
hlt
fstp
inc
xor
push
cli
call
inc
ins
(bad)
aam
dec
ror
fild
mov
or
out
dec
mov
data16
(bad)
jg
xor
mov
cmps
hlt
into
pop
inc
lahf
std
ret
aam
outs
and
cli
lods
or
jg
mov
popa
jmp
push
shl
es
(bad)
cmp
sbb
call
das
and
pop
xor
push
fistp
jmp
cmp
inc
(bad)
inc
push
ret
cwde
sub
hlt
xchg
cli
stc
sub
jbe
clc
jmp
pop
call
xor
call
stc
das
cmps
(bad)
pop
push
pushf
ds
jnp
out
dec
jo
or
pop
adc
hlt
(bad)
jg
fdivrp
punpckhbw
std
cld
sub
repz
cmps
call
test
das
mov
nop
xor
(bad)
sbb
sbb
inc
adc
call
dec
sti
jg
pushf
(bad)
push
enter
stos
jmp
jmp
push
fwait
pop
jp
mov
idiv
and
push
jge
(bad)
cli
jns
mov
cmps
call
sti
arpl
sbb
test
sti
pop
or
pop
dec
(bad)
call
popf
jg
fdivrp
mov
out
xor
mov
mov
(bad)
mul
js
mov
cli
sti
ja
idiv
inc
out
aas
mov
das
and
pop
inc
xchg
cmp
cmovb
hlt
jmp
jg
push
jg
fucomip
outs
and
sti
outs
(bad)
jmp
(bad)
mov
inc
aas
imul
rol
xor
out
dec
(bad)
mov
(bad)
out
sar
psubsb
mov
std
dec
cli
call
cli
push
call
inc
call
jmp
(bad)
inc
(bad)
call
call
jmp
jmp
(bad)
(bad)
mov
(bad)
dec
sar
call
(bad)
mov
jmp
(bad)
jg
(bad)
call
aad
sar
jg
cli
(bad)
out
inc
(bad)
(bad)
fucomp
jmp
(bad)
jge
(bad)
out
inc
(bad)
aas
mov
call
sar
xlat
hlt
(bad)
aas
nop
(bad)
inc
(bad)
call
lahf
dec
(bad)
jmp
jmp
(bad)
out
movs
(bad)
jmp
hlt
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
(bad)
mov
mov
inc
(bad)
call
std
jg
(bad)
aas
mov
jg
(bad)
dec
jmp
dec
(bad)
jg
std
dec
(bad)
call
hlt
(bad)
mov
sar
push
cli
(bad)
aas
inc
(bad)
inc
jmp
(bad)
fbld
(bad)
call
(bad)
jg
std
(bad)
inc
fs
fisub
std
push
(bad)
jg
(bad)
mov
call
xlat
hlt
(bad)
out
sar
das
call
dec
(bad)
jmp
call
call
jmp
(bad)
(bad)
in
hlt
(bad)
jg
(bad)
dec
(bad)
jmp
(bad)
dec
std
call
(bad)
dec
cli
jmp
hlt
(bad)
fisttp
(bad)
mov
(bad)
call
mov
cli
push
call
movs
push
hlt
call
sar
push
cli
call
call
jmp
hlt
(bad)
jg
(bad)
dec
(bad)
jmp
(bad)
mov
jmp
(bad)
jg
call
hlt
(bad)
fisttp
(bad)
mov
(bad)
call
mov
(bad)
(bad)
std
call
dec
(bad)
call
cli
call
inc
(bad)
call
std
dec
cmps
(bad)
call
(bad)
push
(bad)
inc
(bad)
aas
dec
(bad)
call
(bad)
(bad)
ds
(bad)
aas
movs
(bad)
push
hlt
call
(bad)
push
hlt
(bad)
fistp
(bad)
jg
(bad)
mov
call
sar
mov
(bad)
(bad)
jge
jmp
hlt
call
dec
(bad)
jg
std
dec
(bad)
call
(bad)
mov
sar
dec
cli
(bad)
fisttp
inc
(bad)
dec
inc
hlt
(bad)
call
jg
std
(bad)
jmp
(bad)
es
(bad)
fisttp
jg
(bad)
mov
(bad)
(bad)
cmp
inc
dec
jmp
pop
(bad)
dec
hlt
(bad)
aas
xchg
(bad)
call
cli
(bad)
fisttp
inc
(bad)
dec
inc
hlt
(bad)
dec
(bad)
jg
std
pop
xchg
(bad)
scas
dec
(bad)
dec
jmp
es
inc
jg
leave
icebp
outs
inc
sbb
leave
call
daa
jmp
das
jecxz
jg
inc
in
stc
idiv
out
jge
outs
cmps
jg
jle
push
jle
(bad)
xchg
jg
ja
clc
xchg
jg
std
(bad)
icebp
out
call
jg
aas
(bad)
div
jg
xchg
cli
cmps
loopne
mov
jecxz
dec
push
clc
mov
dec
jl
cmps
movs
jmp
call
(bad)
mov
mov
pop
pop
aas
clc
mov
outs
sub
test
popf
shr
retf
outs
jb
sti
jecxz
jno
jnp
repz
fidivr
or
movd
cld
or
cld
push
pop
lahf
loop
mov
out
loop
jg
or
push
sub
mul
mov
pop
jg
mov
mov
fld
pop
sar
aas
sar
push
lahf
call
or
shr
in
pop
inc
mov
pop
call
sar
clc
in
sub
push
pop
jg
ds
jmp
aad
test
pop
loope
mov
clc
in
dec
inc
mov
icebp
sar
cli
inc
icebp
fld
fild
inc
adc
pop
mov
dec
cmp
fisttp
mov
adc
js
add
fistp
jl
pop
ja
out
loop
jbe
test
add
js
lock
cmp
jle
cld
push
lods
jbe
imul
aas
push
lahf
std
stos
call
mov
(bad)
(bad)
(bad)
jb
cmc
pop
loopne
aas
sbb
ja
mov
or
sub
fstp
inc
mov
paddd
mov
inc
mov
pop
call
pop
cli
or
fld
scas
(bad)
je
neg
loope
aas
push
lea
push
(bad)
xor
cmp
and
out
ds
push
loop
dec
lock
std
sar
jmp
aas
jle
sub
sbb
pop
jl
iret
call
jl
ret
xor
or
cmp
sbb
fisttp
aas
ds
or
pop
sbb
cld
clc
sar
jg
(bad)
ja
mov
add
jmp
fstp
(bad)
push
cld
imul
aaa
fadd
std
sbb
clc
or
(bad)
outs
jg
jle
sbb
fstp
(bad)
jb
mul
loope
aas
pop
mov
leave
call
loopne
aaa
clc
loopne
ret
sub
retf
jns
icebp
inc
jne
mov
jle
in
push
loopne
aaa
clc
jmp
mov
std
and
jmp
movd
mov
xlat
shr
paddd
mov
ins
icebp
fstp
repz
scas
jle
sbb
jl
mov
(bad)
scas
cmps
pcmpeqd
jle
jle
mov
dec
dec
inc
jle
out
jecxz
test
or
out
fld
(bad)
adc
test
mov
or
sbb
cld
jmp
loopne
les
and
cld
stc
clc
jmp
jmp
aas
or
mov
jmp
sbb
outs
aas
int
loopne
aas
add
and
sti
cmp
(bad)
test
sbb
sbb
in
loop
mov
outs
mov
shr
cld
loopne
rol
or
pop
mov
xchg
loope
(bad)
in
jg
fistp
jle
pop
lock
mov
(bad)
xor
in
ja
jp
out
jecxz
outs
jno
outs
loopne
mov
clc
in
pop
cmp
cld
push
addr16
out
ret
add
pop
inc
mov
clc
in
iret
shr
ds
xchg
lock
(bad)
(bad)
or
idiv
mov
mul
mov
jle
ins
push
dec
je
cmp
icebp
icebp
pop
test
ffreep
pop
lahf
sbb
add
cld
add
out
(bad)
outs
push
jle
mov
jle
mov
mov
mov
pop
jecxz
aas
sbb
in
outs
inc
jmp
adc
stc
stos
call
std
div
fucomi
jb
lock
loopne
out
jle
pop
loop
jg
lahf
(bad)
jmp
loopne
cmp
pop
lock
xchg
push
cld
test
std
mov
hlt
aaa
loope
aas
adc
in
scas
lds
push
jle
fcomi
fistp
jg
jle
hlt
rcr
iret
(bad)
cmp
cli
in
ja
push
repz
fistp
icebp
cld
jecxz
mov
pop
mov
jmp
push
dec
jmp
cmp
add
arpl
mov
fistp
aas
out
sbb
ds
dec
icebp
cmc
outs
mov
das
loopne
pop
dec
sahf
jmp
repnz
cld
jb
mov
sub
jmp
fistp
mov
pop
loopne
jg
lea
cmp
cld
and
outs
lock
(bad)
pop
jl
add
cmp
imul
lahf
pop
adc
xor
fstp
jl
(bad)
loope
push
icebp
jg
jle
pop
lock
cmp
mul
std
mov
clc
mov
outs
call
mov
ds
outs
mov
push
or
pop
mov
(bad)
jle
sbb
sub
clc
xor
pop
mov
pop
mov
aas
or
addr16
imul
add
jg
mov
cld
cmps
mov
ds
out
jg
(bad)
fxtract
mov
(bad)
jle
pop
out
std
xor
(bad)
sbb
fbld
pop
sar
dec
jmp
scas
jmp
(bad)
jle
(bad)
in
pop
jg
out
out
movs
(bad)
inc
hlt
(bad)
jg
(bad)
jmp
fs
mov
call
mov
and
xchg
repz
dec
std
jg
dec
outs
ret
das
cli
call
jg
push
add
call
cli
aas
and
sub
iret
movs
inc
cld
(bad)
hlt
jg
xor
mov
das
sar
call
(bad)
jg
(bad)
jmp
(bad)
(bad)
jg
(bad)
jg
mov
jmp
std
dec
std
jg
(bad)
inc
cmp
lahf
sar
push
hlt
call
sar
jmp
call
cmc
imul
call
call
(bad)
(bad)
cmp
(bad)
push
std
call
hlt
(bad)
call
(bad)
jg
std
(bad)
jmp
jmp
hlt
(bad)
fistp
(bad)
jg
std
jg
(bad)
dec
inc
(bad)
cmp
scas
call
aas
xchg
(bad)
inc
sar
push
call
(bad)
jmp
std
(bad)
out
mov
jg
(bad)
scas
call
jmp
mov
push
mov
xchg
jmp
mov
in
cld
pop
jle
jb
aas
ret
pop
call
pop
loopne
mov
cmc
dec
dec
jg
ja
lock
aas
fwait
inc
clc
loop
dec
call
jl
mul
sbb
lea
pop
fwait
inc
cmc
das
sti
pop
test
inc
test
and
adc
adc
fdivrp
ret
push
dec
test
or
cmps
pop
jo
sar
test
(bad)
pop
jl
jnp
mov
adc
adc
pop
jle
(bad)
mov
pop
jg
ds
popf
lock
lock
sbb
sbb
mov
loopne
dec
(bad)
adc
jmp
xchg
jecxz
jg
lahf
std
aaa
clc
in
iret
(bad)
outs
call
sbb
fucomip
loopne
(bad)
(bad)
lods
cmp
push
clc
cld
lahf
ret
iret
sar
cmovle
rcr
(bad)
sbb
stc
jmp
sbb
mov
(bad)
fist
je
cld
mov
in
test
push
mov
clc
in
pop
loope
mov
mov
adc
std
clc
in
xor
into
sar
hlt
loopne
jle
mov
xchg
cmp
out
clc
in
iret
inc
fisttp
dec
icebp
jecxz
aas
clc
in
icebp
stc
pop
test
jg
cld
mul
mov
dec
imul
pop
mov
(bad)
jnp
dec
push
fistp
jl
jmp
pop
ror
jle
sar
scas
jg
and
pop
ret
outs
jo
rol
clc
in
scas
shr
jle
repz
(bad)
adc
neg
adc
cmp
xor
(bad)
add
adc
push
enter
(bad)
jle
idiv
jecxz
mov
fist
fcomp
cld
pop
clc
or
fisttp
icebp
fild
cld
test
ins
cld
xchg
(bad)
loopne
icebp
sbb
push
push
jle
cld
neg
neg
(bad)
(bad)
(bad)
add
cmc
shr
(bad)
das
paddd
dec
jg
pop
cld
cmps
clc
loopne
paddd
sar
(bad)
sub
test
in
add
outs
mov
mov
lock
loop
jg
pop
(bad)
stc
clc
or
lds
aaa
jle
mov
(bad)
inc
cld
idiv
jecxz
xor
mov
nop
mov
cwde
loope
aas
add
mov
mov
sbb
cmp
mov
inc
cld
(bad)
scas
loope
xor
lock
jge
cmp
repz
clc
in
scas
inc
pop
mov
jne
(bad)
das
jmp
je
and
sbb
std
addr16
les
or
or
mov
stc
pop
fsub
jge
dec
(bad)
cs
int
push
sbb
fstp
pop
clc
leave
(bad)
mov
cmc
mov
std
mov
in
mov
push
es
out
push
jle
addr16
cs
in
stc
pop
pop
jl
daa
movs
push
jmp
dec
(bad)
rcr
gs
loopne
and
sbb
inc
stc
jg
aam
in
mov
pop
(bad)
fistp
lods
pop
mov
jmp
fistp
js
iret
push
dec
mov
pop
mov
daa
mov
in
mov
out
test
jns
jmp
inc
ret
or
dec
sub
lock
loop
mov
test
test
jmp
jle
mov
dec
(bad)
push
cld
div
loope
cmps
daa
xchg
jg
(bad)
loopne
(bad)
(bad)
mov
cld
jle
jg
mov
mov
rcr
pop
adc
mov
inc
clc
lea
dec
lds
jge
idiv
pop
cld
pop
clc
loopne
adc
pop
idiv
inc
pop
sti
clc
pushf
mov
mov
fstp
jmp
sbb
(bad)
into
out
test
cmp
mov
loop
inc
imul
mov
inc
mov
dec
(bad)
jg
inc
(bad)
ds
fisttp
dec
pop
(bad)
out
fwait
(bad)
jecxz
loopne
cmp
pop
lock
std
push
clc
in
scas
stc
aas
loope
(bad)
gs
sti
aas
rcr
push
call
cld
push
pop
jg
notrack
shufps
sbb
cld
cmp
pop
clc
jmp
xor
xchg
clc
loopne
cmp
adc
jle
sub
and
call
pop
cmp
jno
loopne
call
icebp
stc
out
sbb
jns
neg
mov
sbb
dec
movd
cmp
adc
addr16
dec
adc
arpl
push
dec
lock
out
loop
outs
jge
scas
loope
adc
cld
adc
dec
jecxz
mov
jecxz
aas
sbb
cld
mov
pusha
jne
xchg
loope
mov
iret
pop
idiv
xor
clc
inc
lock
fsubp
aaa
idiv
and
xchg
test
clc
aas
lods
pop
div
mov
jne
and
cld
dec
test
out
sar
clc
mov
hlt
shr
and
xor
xlat
jo
pop
cmp
mov
sar
pop
(bad)
sbb
cmp
call
cmc
imul
mov
add
pop
in
clc
(bad)
sar
and
jg
std
pop
adc
dec
ret
je
pop
hlt
(bad)
inc
xchg
sbb
enter
fisub
movs
call
inc
ret
or
cmp
hlt
jmp
aas
cmp
sbb
out
mov
bound
(bad)
cld
xlat
les
mov
mov
lock
lods
cmc
sub
call
stc
in
cld
pop
cs
dec
pop
call
stc
xlat
sar
ins
inc
mov
adc
jg
mov
push
jg
or
dec
fcomip
xchg
mov
mul
cmps
push
cld
clc
xor
das
icebp
jecxz
cld
pop
jle
stc
call
jle
ret
sar
jle
out
repnz
loopne
neg
data16
cli
mov
sbb
pop
dec
aam
clc
add
push
jl
pop
sbb
add
(bad)
outs
ffreep
outs
aas
mov
(bad)
and
neg
jecxz
dec
cld
neg
pop
mov
(bad)
aad
call
sbb
pop
loop
out
in
fild
push
ds
paddd
cld
test
lds
mov
test
xor
pop
jg
call
inc
retf
iret
(bad)
outs
mov
jle
outs
sbb
mov
(bad)
cli
xor
add
das
xchg
cmp
das
xchg
cmp
clc
mov
pop
mov
jmp
addr16
mov
xlat
mov
hlt
pop
mov
jmp
mov
cli
mov
sbb
scas
mov
std
jg
psubsw
clc
pop
jle
dec
(bad)
sbb
push
cmps
sti
ja
call
cmp
in
call
lock
aas
sub
pusha
aas
stc
jnp
xchg
mov
in
lahf
cld
lods
mov
jmp
xchg
mov
jg
out
repnz
(bad)
in
adc
jo
aas
stc
ret
jle
lahf
cmp
and
jo
pop
aas
jno
popa
adc
(bad)
push
in
aaa
mov
push
xchg
vxorps
icebp
mov
sbb
shl
or
adc
jle
fucomip
loopne
jle
aam
inc
clc
icebp
xchg
mov
loop
std
out
loopne
jecxz
test
push
or
mov
jno
aas
loopne
sub
dec
ja
ror
mov
adc
(bad)
outs
jg
jle
jnp
mov
(bad)
loopne
inc
sbb
cmps
pop
xchg
(bad)
jg
ds
in
je
retf
jns
mov
movs
clc
call
(bad)
sar
sub
cwde
loop
popa
dec
sub
pop
and
pop
jge
lahf
(bad)
neg
out
std
leave
mov
jle
lds
(bad)
(bad)
repnz
jl
das
xchg
stos
lock
xchg
xchg
icebp
dec
std
cs
out
repnz
paddw
cld
std
mov
fnstsw
ja
stc
fwait
jg
pop
inc
faddp
das
and
cmps
aas
stc
retf
jg
fist
jg
out
repnz
aas
sti
ja
ds
sar
fcomip
xchg
aas
cdq
or
in
(bad)
pop
jle
dec
(bad)
jo
(bad)
pop
or
std
ret
cld
clc
or
pop
cld
fisttp
sub
(bad)
out
je
push
aas
retf
lock
ds
pop
addr16
mov
rol
jl
mov
pop
jecxz
outs
loope
pushf
movs
xchg
sbb
fisttp
clc
lods
gs
adc
clc
ffree
fwait
cwde
dec
xchg
jns
dec
out
jae
stc
mov
clc
out
cwde
sub
(bad)
cmp
loop
mov
fwait
clc
mov
sbb
mov
sbb
dec
shl
add
ins
clc
icebp
xchg
and
mov
jg
jmp
ror
inc
in
neg
mov
fwait
jg
mov
out
and
mov
(bad)
jg
(bad)
jmp
std
pop
inc
jecxz
xlat
jo
sti
retf
pop
and
jmp
or
sbb
imul
inc
jp
pop
cld
pop
test
scas
std
sbb
or
test
cmps
loopne
outs
(bad)
(bad)
jg
std
add
cs
jmp
cld
pop
jle
or
jmp
repnz
xchg
inc
stc
shld
ds
mov
push
lahf
(bad)
daa
jg
out
repnz
mov
xchg
jge
aas
cmp
inc
lock
ret
daa
jg
out
repnz
or
ins
call
sbb
mov
out
(bad)
fistp
jl
or
outs
ret
mov
push
clc
in
add
xchg
lock
push
mov
mov
xchg
jg
call
lahf
jl
pop
mov
dec
cs
aas
mov
push
(bad)
loopne
out
xor
cld
xchg
mov
(bad)
hlt
out
xchg
xor
outs
out
cmp
jg
outs
inc
loope
push
(bad)
lock
loop
(bad)
cs
hlt
cmps
lahf
cld
leave
pushf
ja
in
loope
sub
sar
xchg
pop
pop
repnz
jae
xchg
cmp
std
lock
fistp
cmp
jle
jne
js
scas
jle
cmp
sub
jmp
jecxz
daa
jmp
out
dec
rol
dec
loop
inc
loop
and
dec
loop
nop
(bad)
stc
aaa
and
cmp
shl
cmp
retf
(bad)
xchg
cmp
adc
ror
out
in
mov
stc
daa
jg
out
hlt
leave
pop
icebp
mov
in
stc
mov
jle
shl
lock
lahf
lock
xor
xor
outs
icebp
enter
ror
dec
mov
cs
mov
cmp
in
ret
and
mov
jl
(bad)
in
and
mov
out
repnz
jg
mov
bound
lods
jo
jne
pop
jle
ret
es
jle
ret
cld
in
stc
in
ds
xor
dec
(bad)
mov
cdq
push
retf
outs
dec
stos
in
and
repnz
xchg
dec
pop
jg
adc
ins
pmaxub
(bad)
fist
cmp
inc
mov
in
mul
les
sub
std
rcr
clc
xlat
fsubr
lahf
sar
lahf
sar
jg
cli
call
(bad)
jg
(bad)
lahf
jle
push
jle
mov
and
xchg
hlt
outs
adc
cmps
(bad)
jnp
lds
jmp
dec
push
xchg
test
call
icebp
jecxz
dec
loope
jge
idiv
cs
out
xchg
mov
leave
pop
xchg
ret
xor
inc
pop
loope
call
pop
inc
in
jae
imul
hlt
leave
mov
(bad)
xchg
int3
in
inc
xor
inc
dec
retf
inc
mov
dec
data16
daa
xor
pop
cmc
call
cs
aas
std
pop
jle
xchg
push
ja
sti
leave
mov
lds
das
(bad)
cs
daa
(bad)
in
out
repnz
(bad)
ss
mov
call
push
jmp
xchg
test
sbb
daa
call
outs
dec
ds
enter
jle
dec
(bad)
imul
jg
lds
mov
add
outs
test
pop
shl
call
or
shl
shr
leave
aas
(bad)
cmp
iret
adc
pop
mov
jmp
push
loope
fucomip
aaa
cld
popf
sub
pop
push
pusha
jge
mov
loopne
rol
ret
outs
clc
mov
jg
jge
pusha
test
std
pop
hlt
(bad)
sbb
mov
dec
jg
fdivrp
xchg
dec
dec
(bad)
xchg
(bad)
(bad)
ds
pop
rcr
or
cld
pop
cmps
mov
jmp
jbe
dec
loope
mov
iret
mov
hlt
(bad)
icebp
adc
call
outs
adc
clc
pop
lock
dec
jb
scas
jmp
xlat
inc
jmp
mov
rep
sar
mov
mov
sti
mov
leave
(bad)
in
imul
lahf
cld
mov
mov
jmp
in
sti
sbb
inc
cld
sti
inc
icebp
jg
mov
in
and
push
repnz
add
(bad)
or
xlat
jmp
(bad)
clc
ja
in
clc
sbb
sbb
mov
or
push
or
std
mov
fstp
loope
(bad)
call
mov
repnz
cld
les
out
lock
aas
and
mov
(bad)
fistp
jle
idiv
xlat
jnp
std
pushf
ds
ins
mov
(bad)
jecxz
mov
clc
aaa
stc
jne
fucomp
ja
cld
ds
cmps
jmp
xor
das
sub
push
(bad)
jmp
mov
cld
xchg
in
call
pop
sar
in
repnz
std
jmp
in
outs
inc
xor
fwait
movups
(bad)
std
xlat
js
(bad)
jecxz
outs
nop
pop
add
stc
(bad)
jle
les
stc
popf
ds
movd
xor
ins
add
xchg
fist
in
pop
daa
std
xor
(bad)
fsqrt
cwde
enter
xor
(bad)
jg
scas
cmp
mov
jl
mov
aas
neg
movs
(bad)
out
(bad)
mov
popf
and
xlat
mov
jg
rcr
cli
jmp
sti
(bad)
cmp
sbb
std
sbb
inc
cli
sti
das
cmps
mov
paddw
inc
jmp
and
mov
sti
push
call
push
pop
lahf
ds
stos
call
test
(bad)
xchg
mov
pop
jecxz
clc
or
fistp
sti
hlt
into
dec
push
fist
jmp
adc
sti
mov
shr
mov
inc
jge
cmps
out
push
idiv
call
lea
into
out
dec
in
inc
(bad)
xlat
clc
xor
dec
lahf
dec
dec
sub
fnstcw
dec
mov
jge
test
jg
jge
mov
mov
(bad)
ins
cli
stc
das
shl
cmp
mov
std
scas
dec
lahf
std
jb
gs
cli
in
and
mov
aam
aas
dec
fistp
(bad)
xor
stc
inc
xor
ins
push
and
pushf
pop
daa
clc
jg
mov
aas
inc
in
jle
cli
jnp
jo
out
inc
aas
(bad)
jp
out
(bad)
and
push
aam
movs
mov
mov
cli
sti
dec
movs
mov
push
jge
das
rcr
mov
shl
add
iret
movs
(bad)
push
(bad)
jg
loopne
pop
hlt
(bad)
aas
xchg
(bad)
jmp
hlt
jg
fisttp
dec
loope
jp
mul
std
jnp
repz
mov
and
stc
pop
push
fstp
hlt
(bad)
pop
dec
lahf
std
xchg
hlt
pop
dec
aas
push
cli
(bad)
fisttp
iret
shl
sar
call
fild
je
icebp
std
(bad)
hlt
std
aas
dec
mov
dec
std
jle
(bad)
dec
add
push
std
popf
ror
jg
jle
mov
jg
outs
das
arpl
jne
(bad)
lods
jg
ds
mov
(bad)
idiv
sub
cli
sti
scas
mov
std
aas
dec
out
(bad)
fidiv
dec
outs
dec
jae
imul
repz
(bad)
mov
sub
fidivr
inc
aas
jg
ret
add
mov
jmp
std
std
aaa
shr
aas
dec
std
cld
pop
aam
iret
cmps
ja
cmps
mov
out
inc
repz
fwait
rcr
jg
std
(bad)
pop
push
aas
dec
cmc
test
out
xor
dec
or
cs
mov
xor
push
mov
inc
jg
jno
div
mov
add
shl
call
inc
ins
(bad)
adc
(bad)
dec
xor
shr
fbld
(bad)
jg
jecxz
cmp
std
cld
lea
or
out
mov
cld
jnp
cmps
aas
mov
out
rcr
mov
jmp
movs
iret
popa
mov
or
(bad)
mov
cli
sti
pop
(bad)
sub
xlat
jg
mov
push
sti
fist
(bad)
jg
out
cld
ja
repz
movs
lahf
sub
stc
pop
call
dec
test
aam
inc
(bad)
pop
hlt
fstp
inc
mov
jmp
stc
xor
jg
jge
dec
jmp
jg
sar
call
dec
hlt
stc
das
movs
iret
(bad)
push
push
pop
ror
jg
pusha
cld
out
mov
push
xor
std
lods
add
pop
cmps
mul
hlt
fnsave
(bad)
mov
push
jmp
pop
lahf
shr
mov
cli
sti
push
(bad)
(bad)
ds
jl
ins
(bad)
push
loopne
aas
call
cli
out
mov
sbb
dec
cli
push
jl
cli
stc
inc
adc
iret
aas
push
mov
cli
outs
inc
mov
iret
jmp
das
inc
jnp
sti
xchg
shl
mov
call
dec
aas
inc
idiv
std
cmp
idiv
mov
daa
sar
cwde
(bad)
(bad)
ja
xchg
mov
lahf
(bad)
(bad)
sti
inc
push
fwait
shr
jg
cmc
repz
shl
push
std
(bad)
out
in
fisttp
cld
dec
(bad)
jmp
sti
aas
mov
scas
hlt
fisubr
out
mov
add
dec
shr
mov
mov
das
test
sti
sub
out
dec
mov
inc
jp
pop
ja
jg
repz
mov
pop
call
lahf
ror
arpl
imul
jmp
hlt
fcmovnbe
(bad)
jg
mov
(bad)
mul
(bad)
cld
scas
hlt
stc
out
inc
lahf
std
ds
xor
fild
cmp
jg
mov
mov
imul
idiv
mov
cli
mov
call
mov
xor
cmps
jns
shr
out
out
jle
jno
call
test
pop
dec
arpl
dec
or
pop
inc
(bad)
dec
sbb
jge
addr16
mov
ret
fcom
fsub
jge
out
hlt
(bad)
aas
pushf
(bad)
(bad)
aas
shl
xor
mov
sar
jg
std
(bad)
scas
ror
inc
aam
pop
inc
jge
mov
mul
push
mov
lods
ja
neg
dec
ins
(bad)
push
jmp
std
call
cli
cld
iret
cmps
idiv
sub
jnp
(bad)
cmps
cmps
mov
cld
(bad)
out
sub
cmp
out
cmps
lahf
or
jg
jbe
xor
std
pop
rcr
mov
inc
js
scas
hlt
fcos
inc
ins
inc
iret
dec
(bad)
mov
jns
(bad)
push
hlt
fstp
jo
sub
jecxz
sar
push
fstp
hlt
fstp
xchg
(bad)
and
cld
shl
(bad)
inc
ins
jle
cli
(bad)
fbld
cmp
xchg
jmp
ret
sti
xor
call
cmp
aas
and
outs
(bad)
jmp
(bad)
addr16
(bad)
xor
(bad)
pop
sar
pop
hlt
call
(bad)
jg
std
dec
hlt
(bad)
mov
sar
jmp
(bad)
fisttp
inc
(bad)
push
(bad)
cmp
jg
std
aas
sar
jg
std
(bad)
jmp
sbb
mov
(bad)
out
std
call
dec
sar
jg
cli
inc
push
loop
(bad)
movs
(bad)
dec
hlt
(bad)
aas
not
je
call
paddw
out
inc
(bad)
jmp
std
(bad)
jmp
(bad)
scas
icebp
imul
hlt
(bad)
fist
push
inc
hlt
jmp
call
dec
call
lock
inc
cli
call
inc
(bad)
call
std
jmp
mov
(bad)
mov
sar
dec
cli
(bad)
aas
dec
(bad)
push
jmp
(bad)
mov
hlt
(bad)
inc
fs
(bad)
hlt
(bad)
fist
(bad)
aas
mov
call
hlt
push
cli
jmp
push
jmp
pop
inc
(bad)
inc
hlt
(bad)
aas
pushf
(bad)
jmp
sar
jmp
pop
inc
(bad)
jmp
(bad)
jg
std
call
mov
(bad)
jg
(bad)
jmp
(bad)
call
cli
(bad)
jg
(bad)
call
(bad)
mov
movs
(bad)
jmp
(bad)
fist
(bad)
jg
cli
call
(bad)
cmp
call
hlt
call
push
dec
movs
(bad)
call
hlt
(bad)
aas
xchg
(bad)
jmp
sar
push
cli
call
(bad)
call
std
call
cmps
(bad)
dec
(bad)
call
sar
call
cli
jmp
cmps
(bad)
call
(bad)
fnstsw
xlat
and
dec
hlt
call
(bad)
fbld
pop
sar
jg
cli
call
(bad)
fistp
pop
sar
scas
call
dec
hlt
(bad)
aas
(bad)
(bad)
call
cli
(bad)
fisttp
inc
std
call
(bad)
inc
(bad)
dec
call
call
push
enter
jg
cli
(bad)
out
inc
(bad)
mov
(bad)
jg
(bad)
aas
cmps
(bad)
call
jmp
std
jg
call
call
jmp
movs
(bad)
call
(bad)
aas
test
jmp
sar
dec
cli
(bad)
fild
jnp
(bad)
push
std
call
hlt
(bad)
jg
(bad)
call
(bad)
jmp
cli
jmp
mov
jmp
(bad)
call
push
(bad)
cmp
inc
hlt
jg
movs
mov
cli
(bad)
out
dec
jmp
call
call
js
call
call
jmp
(bad)
(bad)
jge
(bad)
jg
(bad)
dec
sar
push
(bad)
jmp
std
lahf
xlat
aad
inc
jg
pop
inc
loop
inc
cld
sbb
cld
push
clc
icebp
fbstp
sahf
rol
jmp
jle
sti
mov
icebp
outs
movs
imul
pop
sub
iret
cmps
push
std
(bad)
fs
cmps
in
retf
xor
(bad)
sub
dec
push
std
jae
hlt
scas
dec
dec
clc
mov
gs
out
retf
dec
jmp
stc
daa
cmps
jg
ds
arpl
arpl
leave
pop
call
sbb
or
leave
jae
pavgw
repz
adc
pop
ffreep
push
aas
ret
mov
sbb
inc
sub
dec
lock
jle
cld
not
loopne
fist
pop
in
sbb
cld
loopne
lock
dec
lods
jmp
cld
xchg
mov
enter
pop
call
ds
pop
lock
push
cld
clc
mov
xchg
cld
push
add
(bad)
or
into
(bad)
push
leave
into
pop
jno
xchg
push
pushf
pop
jg
jle
xor
loopne
(bad)
outs
mov
mov
clc
lea
push
ror
mov
out
mov
imul
clc
loopne
rol
clc
in
cmovb
lods
xchg
jo
icebp
pusha
pop
mov
arpl
test
mov
sbb
mov
outs
push
jle
xor
jnp
imul
mov
mov
in
sar
rcl
jl
scas
loop
call
out
call
clc
in
shufps
jle
sti
icebp
fcmovnu
mov
(bad)
pop
cld
not
loop
mov
add
imul
mov
add
lock
les
mov
fild
in
sub
or
icebp
push
shl
cld
ja
js
pop
cmp
addr16
cld
out
add
fild
pop
push
jbe
pop
cld
(bad)
pusha
mov
adc
sbb
dec
loope
fild
lea
clc
add
clc
xor
pop
mov
icebp
(bad)
inc
(bad)
(bad)
(bad)
push
push
aas
jle
sbb
ret
adc
scas
icebp
push
scas
cmc
jb
pop
imul
lock
(bad)
outs
jmp
cld
idiv
mov
add
dec
ret
outs
jg
mov
scas
(bad)
iret
(bad)
and
xchg
not
jecxz
xchg
jle
pop
jle
sbb
emms
lock
lock
mov
jmp
sbb
scas
cmp
(bad)
syscall
cmp
shl
clc
in
dec
les
sub
ret
out
inc
push
rcr
jg
repz
std
idiv
ret
scas
inc
xor
mov
loopne
(bad)
mov
pop
mov
lahf
mov
(bad)
jns
cmc
aad
aas
or
in
mul
icebp
jecxz
out
scas
lds
lahf
ret
add
cld
cmp
ins
retf
fild
lock
sbb
lock
clc
pop
sbb
or
xchg
dec
mov
fsubp
arpl
sub
aaa
test
sbb
mov
push
cld
test
fist
call
(bad)
jecxz
fist
mov
aaa
(bad)
outs
jg
jle
cmc
icebp
(bad)
test
dec
(bad)
std
call
ret
outs
pop
sahf
ds
scas
icebp
fistp
xchg
inc
push
ja
loopne
(bad)
outs
mov
jmp
arpl
loopne
pop
cld
cmp
outs
jg
jle
inc
fnstcw
cmp
addr16
jg
popf
cld
or
in
scas
inc
mov
or
sbb
lock
loop
push
mov
mov
clc
loopne
rol
aaa
jle
mov
push
jg
loopne
jle
lahf
add
adc
or
sti
daa
icebp
fldcw
les
push
push
jle
cld
test
fldcw
(bad)
or
aaa
js
pop
call
scas
mov
xchg
jle
jb
loopne
mov
or
jecxz
lock
sub
test
(bad)
xor
push
aas
jle
aaa
shl
outs
ret
std
rcr
mov
iret
push
jl
addr16
jmp
aas
sbb
cld
cmp
pop
outs
jg
mov
cwde
(bad)
(bad)
(bad)
imul
std
(bad)
clc
in
pextrw
outs
pop
loope
aas
push
mov
mov
out
lock
jl
pop
push
fadd
pop
mov
(bad)
clc
in
ja
outs
mov
shr
aas
clc
dec
lock
sti
mov
outs
cmc
xor
in
dec
ret
outs
inc
cld
hlt
sbb
xchg
sbb
or
cld
mov
outs
xchg
cld
mul
js
pop
jg
jle
fcomi
fistp
cld
mul
rcr
mov
xchg
mov
movsx
jo
mov
clc
loopne
clc
jmp
scas
icebp
fstp
xchg
into
lock
xor
in
add
mov
clc
cld
iret
inc
fisttp
mov
lock
fistp
cld
mul
fwait
cmp
mov
aas
loopne
fs
and
out
mov
not
scas
cld
out
enter
dec
fwait
pop
and
mov
sub
sar
jg
cli
push
cli
push
(bad)
aas
inc
(bad)
dec
(bad)
inc
cli
inc
mov
(bad)
jg
std
dec
mov
(bad)
fisttp
(bad)
mov
std
pop
jp
cmp
pop
sar
popa
push
jle
std
(bad)
jmp
ja
ins
jg
icebp
frstor
call
cmovb
cmp
mov
push
cli
aas
push
in
dec
cmp
mov
sbb
loope
cdq
stc
push
jmp
(bad)
aas
mov
cmps
repz
pop
jmp
mov
mov
inc
pop
sub
(bad)
ficomp
stc
out
(bad)
call
mov
call
and
(bad)
call
xor
or
push
cli
(bad)
out
dec
(bad)
mov
(bad)
aas
mov
jmp
std
aas
mov
xor
(bad)
jg
std
dec
(bad)
call
(bad)
call
sar
push
(bad)
aas
dec
(bad)
jmp
std
(bad)
fbld
jg
lods
cmps
jmp
call
out
lahf
cld
xor
lock
dec
adc
push
xchg
jnp
(bad)
add
xor
cld
cs
inc
jns
aas
xor
mov
cli
sub
retf
dec
(bad)
pop
leave
(bad)
jmp
mov
aaa
movs
lahf
jecxz
mov
leave
pop
sahf
and
movs
mov
lahf
cld
cmp
pop
mov
jg
cli
aas
loopne
pop
inc
stos
xchg
jg
cli
not
scas
mov
pop
sub
in
cmps
icebp
(bad)
cld
test
mov
sbb
std
cmps
clc
in
cmp
mov
in
or
in
lds
ffreep
clc
or
loope
fisttp
lahf
std
push
clc
in
cs
fist
xlat
ret
outs
mov
push
dec
cmp
sti
jge
retf
retf
cmp
mov
loope
std
fistp
aas
or
sbb
std
mov
cs
fld
fisttp
or
dec
xor
mov
sbb
outs
mov
clc
in
xchg
loope
aas
add
std
es
sbb
sub
fcmovnu
xchg
clc
in
iret
(bad)
addr16
test
(bad)
pop
jl
adc
sbb
sub
cmp
outs
jmp
ds
outs
mov
mov
jecxz
pop
mov
mov
lock
sar
lock
sti
and
loop
std
inc
or
fbstp
out
inc
pusha
sub
fist
cld
(bad)
jle
add
cld
mov
out
sti
repz
jge
add
out
dec
call
mul
mov
add
(bad)
icebp
clc
in
jg
addr16
cmp
inc
pop
aas
sbb
icebp
sti
(bad)
push
pop
xchg
jmp
sar
idiv
jle
pop
aas
js
iret
and
in
idiv
cs
push
in
loop
add
jl
(bad)
loop
fistp
mov
jge
retf
outs
jae
sbb
mov
stos
loope
std
imul
jg
outs
mov
loope
std
out
call
ds
psllw
mov
cld
test
mov
sbb
lock
test
mov
cld
push
std
jb
xchg
add
outs
jns
out
add
mov
std
adc
outs
jg
pop
cld
add
sbb
mov
sub
fisttp
loop
jecxz
mov
pop
mov
(bad)
outs
mov
sti
jne
inc
in
ja
clc
pop
icebp
jecxz
cmp
sbb
imul
std
pop
(bad)
xchg
in
jge
aas
mov
jge
pop
rcr
fstp
dec
clc
cmc
fbld
push
das
push
hlt
and
mov
(bad)
sbb
inc
ds
inc
inc
inc
cld
jge
mov
cli
pop
loop
fist
push
jb
inc
and
and
leave
lahf
inc
or
dec
(bad)
clc
hlt
out
lds
jno
pop
and
mov
int3
dec
cld
(bad)
out
fisttp
ins
pop
jl
aas
jle
adc
int
dec
sub
mov
(bad)
data16
clc
jg
push
out
loop
test
or
(bad)
movd
imul
sbb
clc
or
paddd
mov
lock
jecxz
cmp
lahf
and
in
movs
call
and
(bad)
pop
call
xchg
cmp
pop
lock
test
(bad)
xor
pop
cld
std
clc
icebp
dec
push
dec
cld
push
icebp
or
(bad)
push
(bad)
(bad)
stc
das
(bad)
(bad)
mov
pop
mov
(bad)
cld
loopne
mov
pop
xchg
jle
shr
pop
push
xchg
sbb
sub
add
cmps
adc
test
fistp
mov
(bad)
and
not
popa
add
push
loope
(bad)
loopne
jle
loopne
hlt
jg
ja
test
out
out
jl
(bad)
pop
lock
pop
aam
mov
jmp
mov
idiv
es
mov
sti
lahf
push
cld
jb
(bad)
pop
or
sbb
lock
loop
daa
pop
call
jle
paddd
int
hlt
lahf
lds
scas
inc
clc
(bad)
cmc
rcr
mov
cwde
jns
cli
call
jle
pop
sub
out
jg
jcxz
jg
(bad)
mov
pusha
mul
pop
(bad)
(bad)
loopne
(bad)
(bad)
(bad)
loopne
clc
icebp
fistp
xor
cmc
dec
mov
cs
idiv
jecxz
pop
jo
jnp
add
push
push
pop
loopne
jbe
lahf
loop
lahf
cmp
or
jo
jnp
pop
cld
xchg
adc
loopne
in
jl
pop
sbb
mov
icebp
cmp
cld
push
clc
cld
out
shl
ds
fisttp
jle
cld
clc
cmp
ret
leave
shr
cli
mov
icebp
pop
nop
adc
push
shl
scas
loop
push
cli
push
dec
inc
aam
pop
jl
mov
popf
xchg
or
ds
push
lock
pop
sbb
cmc
leave
pop
xchg
jle
cmp
pop
jo
loopne
jecxz
jmp
lock
(bad)
cmp
lahf
lock
push
and
jle
hlt
sbb
mov
and
mov
pop
fstp
mov
popa
out
hlt
jnp
(bad)
fistp
push
(bad)
(bad)
inc
aas
sar
push
repnz
xchg
add
and
adc
jmp
stc
xor
sub
sar
popa
and
cmpps
fisubr
mov
ret
jmp
in
mov
or
not
jmp
sar
cs
or
aad
jmp
pop
push
daa
movs
mov
xor
mov
jmp
lea
inc
hlt
pop
ret
adc
fdivr
arpl
pop
test
(bad)
adc
jl
ja
cs
jg
mov
pushf
aam
imul
xchg
mov
ds
dec
jg
(bad)
xchg
mov
call
out
dec
out
jecxz
pop
xchg
(bad)
jge
icebp
xchg
mov
imul
mov
jle
jo
or
mov
lock
daa
mov
cmp
jle
mov
push
ins
loope
(bad)
or
fbld
push
mov
repnz
loope
pop
movsx
mov
jb
cld
das
clc
in
jg
mov
xchg
aad
inc
jle
inc
cmp
fisttp
sti
sub
test
(bad)
pop
sbb
(bad)
loopne
inc
and
hlt
ffreep
outs
jg
jle
std
shr
iret
lds
add
add
inc
loop
push
pop
push
shl
jnp
inc
std
push
pop
mov
shr
cld
not
loop
outs
jecxz
mov
in
dec
shl
hlt
xchg
jecxz
mov
mov
fistp
pop
(bad)
cs
lahf
cld
cmps
jmp
mov
call
mov
daa
push
repz
(bad)
pop
mov
ins
loope
int3
xchg
shl
jg
cli
daa
loope
(bad)
test
(bad)
aaa
std
in
xchg
dec
dec
push
je
mov
xlat
icebp
jecxz
jecxz
fisub
jg
cli
out
lea
dec
fist
xlat
repnz
pop
jo
leave
adc
sbb
lahf
jmp
clc
add
jle
cld
cmp
js
iret
jmp
jl
enter
jle
(bad)
inc
call
cmp
or
mov
(bad)
and
imul
aaa
clc
mov
(bad)
out
inc
xchg
add
jnp
xchg
retf
cmp
cmps
adc
nop
xchg
push
cld
popf
cmp
sub
xor
jecxz
aas
maxps
jae
cli
dec
rol
rol
mov
fist
jnp
sub
xchg
fcomp
icebp
dec
or
push
cdq
ds
std
shr
mul
inc
int3
clc
adc
cld
pop
(bad)
out
jae
mov
add
mov
cs
cld
pop
xor
dec
out
repnz
jg
pop
cld
cs
dec
out
repnz
jg
outs
cld
jbe
cld
stos
mov
das
dec
cld
jae
inc
cld
push
mov
mov
gs
leave
aas
hlt
mov
std
cs
test
cmc
mov
icebp
leave
fcomip
mov
scas
ds
stos
jle
dec
(bad)
repnz
stc
daa
jg
out
bnd
repnz
cs
in
(bad)
pop
mov
stc
sar
jmp
repnz
cs
test
jg
in
jg
dec
cld
cli
loopne
aas
mov
push
clc
mov
push
enter
jecxz
cmp
push
jle
pop
add
rol
sbb
cld
push
clc
mov
push
add
jbe
or
sbb
cmp
pop
pop
mov
aam
push
jmp
ror
sbb
(bad)
dec
cmp
xchg
jecxz
jnp
scas
ret
push
cmp
or
in
loopne
lds
sti
mov
jle
fbld
std
sti
aam
jmp
(bad)
mov
imul
mov
jmp
mov
sbb
mov
out
sar
pop
sar
dec
jle
or
(bad)
(bad)
fidivr
mov
inc
hlt
(bad)
aas
out
or
ins
jo
cli
cmovnp
mov
leave
scas
dec
adc
cs
dec
sar
xchg
(bad)
in
dec
mov
push
cmovbe
(bad)
in
stc
popf
aas
stc
pop
rcr
sbb
mov
jg
out
repnz
jl
xlat
adc
cld
aad
retf
inc
xor
out
dec
push
scas
lock
lahf
xchg
inc
clc
popa
and
aas
cmp
scas
jle
and
pop
jo
clc
sbb
adc
mov
or
icebp
rcl
jl
mul
(bad)
cmp
std
pop
adc
aas
dec
pop
das
mov
mov
ds
ja
push
stc
in
in
test
cmp
jl
(bad)
or
fist
std
repnz
(bad)
pop
idiv
inc
pushf
stc
xchg
std
cs
in
and
push
xchg
lods
lds
pop
jg
out
jb
leave
pop
and
iret
or
loopne
pop
jecxz
mov
lea
sahf
mov
sbb
mov
ffree
dec
cld
enter
mov
pop
lock
sbb
jecxz
cld
daa
mov
out
repnz
stc
ja
xchg
xchg
dec
dec
(bad)
jnp
push
mov
hlt
leave
aas
sti
mov
sub
lock
jge
not
xchg
icebp
daa
jg
inc
fstp
out
repnz
in
fld
imul
idiv
in
and
cli
out
sti
std
addr16
mov
cmps
(bad)
cs
out
repnz
stc
arpl
(bad)
(bad)
and
(bad)
xchg
aas
hlt
mov
jno
out
add
imul
mov
mov
pop
mov
xchg
and
fwait
inc
cmp
stc
pop
or
aas
dec
lahf
call
sar
inc
into
mov
jp
push
out
mov
outs
dec
pop
neg
shr
out
retf
or
cmc
(bad)
and
mov
hlt
leave
lahf
(bad)
cmp
cld
cs
lods
push
std
xor
rcr
inc
mov
push
and
fucomip
ja
fnstsw
cld
test
sti
out
mov
jecxz
arpl
ret
hlt
jmp
(bad)
dec
(bad)
out
sar
sar
sub
xor
cld
das
jmp
lods
add
call
add
sti
sub
icebp
das
cmps
mov
je
pop
push
imul
fist
outs
jg
aaa
cmps
jg
jle
stos
rcr
adc
out
repnz
cmp
jg
(bad)
icebp
call
dec
in
ja
adc
aas
rcl
int
mov
push
(bad)
stc
daa
mov
or
inc
inc
cmc
pop
or
mov
or
or
sub
(bad)
cmps
add
or
out
adc
mov
not
jmp
push
call
xchg
push
ja
mov
out
jg
ja
test
and
sti
out
mov
sub
sti
(bad)
jle
dec
(bad)
popa
add
idiv
dec
add
mov
int
jg
outs
sar
iret
or
fbld
add
repz
jge
scas
cld
into
lahf
cld
mov
or
outs
cli
leave
aas
neg
adc
fisttp
outs
popf
hlt
and
xchg
adc
popf
bound
shl
aad
sbb
push
pop
std
jp
mov
lock
imul
mov
std
loopne
pop
inc
repnz
mov
punpckhdq
inc
xor
call
into
shr
inc
add
scas
mov
inc
or
arpl
(bad)
(bad)
outs
adc
jle
es
mov
in
loope
add
cs
jle
jnp
adc
in
cmps
inc
dec
mov
dec
aas
stc
daa
jle
mov
fisttp
(bad)
fistp
std
jg
adc
es
sub
xchg
movs
fild
out
in
ror
fcomi
ret
leave
jg
or
dec
mov
in
cmps
or
in
ds
out
xchg
jns
cld
aaa
adc
jmp
mov
fdiv
pop
adc
fild
outs
stc
mov
(bad)
cdq
fucomip
aaa
cld
pop
mov
scas
std
jbe
pop
xchg
fdivr
idiv
aas
or
clc
xor
(bad)
xchg
jg
ja
in
std
popf
aas
stc
mov
jbe
fcomp
sub
pop
xchg
fcomip
ja
push
mov
add
(bad)
jp
loop
stc
mov
(bad)
xchg
(bad)
ds
in
shr
mov
mov
cdq
or
pop
cld
imul
std
pop
rol
mov
out
repnz
xor
cmc
jno
pop
call
ret
loopne
jl
cmp
std
cs
inc
cli
(bad)
mov
in
std
ins
xor
cmps
test
xchg
dec
mov
pop
xchg
(bad)
mov
mov
bound
std
push
jmp
fnsave
jbe
test
jle
inc
jg
sbb
imul
movs
cli
call
pop
and
jmp
mov
(bad)
sbb
neg
out
dec
(bad)
jmp
mov
cdq
in
jg
dec
sub
movs
xor
inc
cli
in
jg
sub
mov
dec
iret
(bad)
jbe
sti
mov
(bad)
jg
aas
jmp
sti
jnp
mov
adc
jns
jmp
nop
pusha
std
in
hlt
sti
aas
inc
ins
mov
out
call
stc
out
shl
add
push
and
jg
std
cmp
iret
jle
std
cld
or
aas
sbb
pop
shl
jg
add
xor
(bad)
jg
jge
(bad)
shl
jg
std
cld
mov
std
mov
(bad)
jmp
test
inc
hlt
(bad)
mov
lahf
std
adc
pop
shl
jmp
jge
pop
ror
jg
ds
mov
mov
(bad)
dec
aas
cmp
cmp
out
jg
je
(bad)
jmp
dec
ins
jmp
cli
in
iret
mov
sti
pop
sar
push
cli
sti
mul
jae
test
sti
aas
inc
aas
jmp
jecxz
mov
cdq
push
fwait
aas
mov
dec
call
cli
std
fbld
(bad)
lahf
mov
jmp
push
shl
or
cld
sub
(bad)
mov
jmp
mov
jge
jnp
cld
inc
hlt
stc
das
lds
jge
mov
call
hlt
(bad)
jg
(bad)
push
sar
mov
sub
jg
mov
mov
neg
std
scas
inc
mov
push
mov
mov
std
std
xlat
shl
scas
lock
(bad)
(bad)
fucomip
daa
sahf
xchg
fdivrp
mov
call
call
out
ins
rcr
jg
std
cld
inc
jmp
(bad)
gs
stc
pop
dec
in
(bad)
push
int3
hlt
std
dec
push
(bad)
aas
and
jg
std
std
daa
rcr
jnp
idiv
in
pop
shl
sbb
cld
or
pop
std
(bad)
imul
jg
sar
push
aam
cmc
arpl
mov
addr16
(bad)
mov
or
pop
inc
aas
pop
shl
cli
std
pop
movs
ja
adc
lahf
movs
out
jmp
iret
(bad)
push
cli
(bad)
fild
hlt
jge
in
call
cli
std
ds
(bad)
fcmovnbe
(bad)
jg
push
ja
iret
aas
or
sar
iret
call
dec
xor
stc
(bad)
sar
jmp
std
mul
mov
call
pop
push
jg
cmp
(bad)
fisttp
out
inc
jg
test
mov
mov
(bad)
dec
inc
loope
inc
(bad)
mov
out
push
jge
adc
(bad)
call
hlt
std
(bad)
shl
nop
loopne
pop
hlt
(bad)
fild
fidivr
std
(bad)
jg
ja
inc
pop
push
das
std
cmp
mov
js
shl
mov
(bad)
shr
cmps
(bad)
push
(bad)
fucomip
xlat
adc
clc
xlat
adc
jle
icebp
scas
loope
cmp
jg
dec
repnz
jle
dec
std
call
out
pop
inc
xchg
cmp
cmp
dec
hlt
(bad)
aas
call
nop
inc
iret
pop
sti
imul
call
cld
inc
hlt
jg
xchg
call
dec
dec
arpl
add
jmp
pop
push
xchg
cmp
lods
mov
pop
jns
clc
dec
and
stc
cmc
aas
mov
inc
sar
call
aas
(bad)
pop
nop
vpackssdw
dec
cld
pusha
or
(bad)
cld
or
(bad)
jg
(bad)
call
sar
dec
cli
(bad)
jg
(bad)
jmp
hlt
(bad)
dec
(bad)
dec
jmp
push
(bad)
(bad)
cmp
jg
(bad)
mov
call
(bad)
jmp
mov
sub
(bad)
aas
cmp
(bad)
sar
push
call
(bad)
dec
jmp
(bad)
out
mov
(bad)
jg
xlat
jmp
pop
out
xlat
es
hlt
(bad)
fist
jg
xlat
xchg
inc
mov
cmp
inc
(bad)
out
dec
(bad)
aas
cmps
jmp
(bad)
fbld
out
daa
mov
jg
leave
scas
and
cld
aas
jae
dec
push
jmp
sti
in
nop
call
loop
in
ret
sbb
cmp
std
xor
cli
jecxz
cld
cmps
outs
push
xor
scas
rol
pop
out
leave
fcos
fnstsw
stc
imul
test
fbld
cld
jns
ds
in
xchg
ins
sti
lahf
inc
dec
ret
jno
daa
jg
outs
jnp
dec
adc
push
cs
jecxz
ds
nop
cld
jns
aad
mov
push
dec
push
sub
loope
in
cmp
and
push
clc
xor
rcr
sti
das
lock
inc
clc
sbb
dec
sbb
dec
mov
jae
(bad)
mov
faddp
dec
paddd
cld
not
loop
inc
std
cs
jmp
jle
cmp
(bad)
pop
cmp
inc
cld
rol
xchg
xchg
mov
pushf
(bad)
nop
lods
jmp
mov
jb
pop
sti
fwait
icebp
add
push
pop
push
ds
ret
icebp
shr
lock
icebp
arpl
pop
mov
or
into
icebp
shl
int3
cmp
icebp
cmp
mov
add
je
outs
and
sub
test
mov
rcr
movd
cld
mov
adc
mov
lock
loopne
aas
add
cmp
in
out
(bad)
outs
(bad)
cmp
into
jnp
mov
pop
(bad)
cmp
dec
cld
clc
mov
call
cmp
mov
cmps
test
jg
pop
cld
jmp
loopne
ret
pop
jg
rcr
pavgb
cld
lods
clc
loopne
rcr
aas
cmp
retf
icebp
stc
jg
iret
call
jne
cmps
loope
aas
pop
pop
cld
xor
loopne
mov
test
xor
aad
mov
jl
jmp
sti
clc
icebp
pop
sbb
(bad)
icebp
stc
jae
neg
sti
dec
lock
lds
(bad)
push
cld
idiv
sbb
mov
aaa
ret
outs
call
sti
cmc
lock
xchg
mov
jno
(bad)
mov
add
std
fwait
clc
stos
cmp
jae
mov
pushf
outs
cmps
cmp
fisttp
mov
(bad)
mov
and
das
lds
sti
pop
jg
ds
stos
icebp
rcr
pop
jl
aaa
loope
aas
sbb
jbe
mov
jg
scas
rcr
lahf
cli
pop
test
mov
std
shr
aad
loope
cs
mov
(bad)
daa
std
push
pop
and
jg
pop
inc
add
mov
lahf
sar
mov
adc
das
cli
xor
scas
adc
pop
(bad)
sub
aas
xchg
xlat
sar
call
aas
cmp
pop
mov
(bad)
jg
dec
(bad)
call
std
(bad)
jg
(bad)
call
popa
movs
clc
mov
jmp
adc
sub
adc
not
hlt
(bad)
(bad)
xlat
adc
mov
shr
jle
dec
int3
(bad)
int3
jmp
daa
jmp
dec
mov
daa
jmp
pop
or
mov
in
(bad)
scas
inc
out
bnd
xor
aaa
loop
mov
add
adc
stos
sub
retf
sub
repz
and
xor
inc
inc
mov
frstor
jg
mov
aaa
in
iret
out
repnz
push
rcr
jg
ds
pop
push
xor
ja
sub
jecxz
(bad)
loopne
pop
cld
sbb
cmp
fadd
push
mov
aas
push
pop
jo
out
mul
(bad)
das
cmp
dec
icebp
(bad)
outs
ret
mov
retf
imul
sub
into
in
lea
test
xchg
add
or
rcr
loopne
ret
sub
inc
shl
loopne
les
mov
pop
jg
jle
test
mov
mov
aas
lea
nop
xchg
in
aam
aas
or
dec
pop
jg
jle
(bad)
jecxz
shl
pop
div
lods
sbb
dec
jg
push
int3
stc
in
dec
(bad)
fisttp
pop
(bad)
out
xor
mov
dec
and
sub
repz
cmps
cld
dec
dec
stc
cdq
fucomip
xchg
jg
inc
repnz
daa
dec
jmp
dec
jns
mov
movs
sbb
sub
xor
cwde
fist
addr16
lahf
cld
imul
pop
inc
or
aas
jmp
cmp
cmc
mov
movs
jmp
dec
mov
xchg
movs
jmp
dec
mov
xchg
and
jg
and
pop
jb
cmc
mov
aad
push
xchg
sbb
push
jle
cld
clc
popf
push
jle
cld
clc
add
cld
mov
bound
(bad)
sar
jo
cmc
mul
movs
sub
je
or
sbb
cmp
in
cvtps2pd
aaa
icebp
and
clc
xchg
lock
sar
pop
mov
retf
jg
repz
repz
jg
loope
sbb
jnp
cld
jmp
aam
aaa
or
cli
(bad)
pop
in
loope
sbb
ret
or
call
in
jg
xlat
jo
(bad)
jmp
add
sbb
add
aas
cmp
icebp
mov
test
push
mov
xchg
cmps
adc
dec
xor
inc
mov
popf
inc
icebp
scas
dec
xchg
loope
movs
lds
jmp
das
jge
call
lea
cmc
ja
in
xchg
and
pop
xchg
dec
icebp
out
bound
loop
mov
jg
lods
call
enter
sahf
(bad)
mov
adc
mov
fstp
fistp
cld
neg
mov
ret
outs
jmp
jle
mov
call
push
jg
call
jge
and
movs
mov
pop
xchg
xchg
clc
pop
sub
inc
adc
gs
(bad)
adc
push
stc
stos
add
stc
pop
jle
(bad)
fist
fild
sti
out
adc
jle
in
jnp
leave
int
and
cmps
in
outs
test
int
push
jb
mov
leave
int
in
or
cmc
(bad)
lahf
(bad)
outs
in
(bad)
fcmovnu
adc
idiv
dec
(bad)
and
call
ss
mov
ret
cmps
mov
jg
jo
xchg
jmp
outs
retf
in
and
jg
leave
rcr
cmp
xlat
adc
jg
out
inc
(bad)
outs
aam
popf
dec
(bad)
(bad)
xchg
movs
xchg
and
stc
int
jp
xor
ret
mov
sbb
cs
adc
mov
jmp
xchg
iret
add
jge
imul
(bad)
outs
sar
push
cmp
add
push
dec
jg
mov
dec
fld
call
retf
mov
mov
jmp
das
jno
push
ja
sub
test
(bad)
jmp
xor
fild
cli
imul
fs
inc
dec
xor
mov
in
cli
das
jg
out
adc
ds
ja
inc
dec
cmp
dec
test
mov
shl
and
xchg
xor
jmp
jg
cdq
inc
shl
popa
repnz
cmp
pop
jmp
lahf
cld
sbb
sub
sbb
mov
add
ss
cld
push
mov
out
hlt
leave
jg
fstp
pop
(bad)
ss
cld
jnp
sub
jae
fwait
rcr
std
xchg
mov
dec
jae
pop
rcr
std
es
cld
std
xor
(bad)
pop
dec
ja
xchg
fs
inc
cld
mov
jl
push
dec
es
in
fsub
(bad)
sbb
dec
outs
push
outs
(bad)
push
push
mov
jg
fsub
jmp
pop
inc
cmp
mov
xchg
pop
cld
mov
popa
in
pop
sti
pop
sub
int
mov
fistp
icebp
js
leave
jg
cmp
movs
jle
mov
loopne
jg
mov
lock
dec
icebp
ret
(bad)
in
outs
inc
fdivr
jns
mov
popf
pusha
fbld
fcomp
xor
into
jg
jg
(bad)
call
ins
(bad)
(bad)
clc
leave
jg
fstp
pop
pusha
ins
loope
rcr
jle
or
(bad)
mov
push
fldcw
dec
jle
dec
inc
cdq
(bad)
xchg
jg
mov
push
ds
lea
in
stc
or
nop
mov
call
std
not
out
(bad)
call
jne
sahf
shl
jmp
das
xchg
xor
cmp
jmp
ja
push
jo
in
lock
cmp
mov
push
fbstp
in
outs
mov
lds
das
jp
cli
pop
(bad)
cmp
idiv
std
outs
jmp
div
popa
std
mov
scas
dec
xchg
ja
retf
pop
loope
mov
cmp
mov
xchg
out
cld
jbe
xchg
std
test
iret
hlt
stc
push
push
inc
clc
ret
add
(bad)
pop
lock
sbb
fidivr
add
shr
inc
xchg
cmp
cld
mov
mov
mov
inc
hlt
sti
pop
dec
aas
jmp
cli
dec
mov
dec
std
cld
sub
stc
xlat
sar
jmp
cli
out
mul
mov
std
pushf
shl
jg
jge
daa
ror
jg
jle
hlt
repz
(bad)
jmp
movs
mov
pop
inc
mov
jg
(bad)
ss
fidiv
lahf
inc
hlt
sti
fild
mov
(bad)
jg
(bad)
jmp
call
sbb
adc
xlat
hlt
repz
mov
sti
aas
dec
out
int
(bad)
mov
out
mov
jmp
call
dec
cli
dec
fwait
mov
hlt
sti
out
dec
(bad)
call
sti
pop
dec
(bad)
inc
and
inc
jmp
dec
jmp
in
and
sti
jmp
clc
jle
ret
mov
(bad)
daa
jmp
(bad)
xchg
rcr
jg
std
cld
pop
jmp
mov
data16
stc
jae
out
mov
inc
shl
jg
call
into
scas
icebp
addr16
fwait
or
call
mov
cmp
sbb
(bad)
push
int
dec
aas
inc
cli
call
call
(bad)
jg
jge
das
std
mov
out
loopne
ret
xchg
clc
popf
jmp
test
jmp
xlat
nop
jl
outs
dec
(bad)
(bad)
in
jg
leave
stc
movs
hlt
(bad)
fucomip
xlat
nop
mov
shr
jle
pop
aam
movs
(bad)
call
mov
xor
retf
pop
ret
in
mov
jg
icebp
inc
cs
pop
jmp
dec
lea
or
inc
fiadd
scas
jmp
push
loopne
dec
(bad)
jg
(bad)
(bad)
out
sar
push
cli
(bad)
jg
(bad)
call
(bad)
mov
adc
(bad)
cli
mov
add
mov
mov
(bad)
jmp
fbld
out
dec
inc
(bad)
mov
or
(bad)
jmp
cdq
xor
das
and
loopne
repnz
in
mov
xchg
jecxz
xchg
sbb
shr
jle
setb
call
xchg
pop
sti
aaa
xchg
(bad)
xlat
xchg
loope
sub
(bad)
std
dec
jg
xchg
fs
jg
repnz
and
loopne
and
jl
ds
jg
outs
das
cmp
mov
xchg
repz
clc
ins
lds
std
ins
fsub
loopne
addr16
lahf
jecxz
test
dec
pop
fisubr
fsub
ja
icebp
mov
js
lock
(bad)
fwait
sbb
aas
inc
in
xlat
ret
sbb
push
sbb
aas
es
out
sub
mov
into
mov
and
clc
out
sar
out
xchg
cmp
mov
lea
lods
push
cld
aaa
mov
in
jmp
push
ret
pop
std
sbb
mov
jmp
not
clc
jo
stc
pop
push
aam
adc
cld
out
lahf
cld
mov
xchg
push
ja
stos
cli
push
fldcw
sbb
cmp
jecxz
lahf
cld
sbb
dec
jecxz
call
sar
nop
cmps
icebp
mov
cld
dec
push
dec
call
sar
adc
call
cmps
icebp
(bad)
gs
dec
mov
daa
call
mov
cld
(bad)
cmp
call
mov
out
lahf
(bad)
sub
pop
and
clc
not
hlt
mov
lea
inc
push
out
scas
and
repz
push
mov
das
and
out
iret
and
sub
mov
lea
mov
icebp
(bad)
push
mov
or
ja
out
xchg
enter
test
(bad)
jg
sahf
pop
dec
jp
out
inc
push
movs
jg
pop
ret
stc
or
bound
(bad)
xlat
loop
push
mov
cmp
mov
cld
pop
xchg
scas
sti
out
xchg
pop
rep
xchg
stos
cld
scas
xchg
xor
shl
(bad)
jns
fidivr
dec
outs
aam
(bad)
mov
mov
inc
nop
fistp
jecxz
jns
ja
rcr
daa
jmp
and
repnz
dec
inc
nop
dec
ds
xchg
jle
jp
mov
xchg
jg
dec
(bad)
icebp
(bad)
mov
iret
call
and
lahf
mov
call
int
xor
fwait
push
(bad)
mov
das
clc
in
stc
sbb
pop
and
stos
jle
adc
xchg
jle
or
mov
test
retf
outs
and
out
jb
call
pop
inc
jae
aas
ror
jnp
sub
jmp
in
adc
mov
pop
jle
ret
or
mov
sbb
aaa
stc
in
clc
ins
ds
outs
jg
inc
cli
ja
push
clc
ins
mov
inc
lahf
cld
jnp
loopne
jg
mov
pop
cld
inc
push
jle
clc
or
cwde
fistp
lds
in
mov
hlt
mov
out
hlt
leave
jg
or
cli
cmp
pop
std
push
aam
outs
dec
lea
clc
out
cwde
cld
idiv
cmp
(bad)
cmp
out
call
jecxz
je
mov
(bad)
fistp
out
fs
cld
jno
repnz
aas
dec
ds
in
ret
je
mul
cwde
cld
xchg
repnz
sub
std
repnz
cld
ja
adc
inc
cli
hlt
xlat
cli
mov
jg
lods
push
cli
stos
call
cmp
(bad)
ss
mov
lock
jge
jg
jl
adc
adc
sti
or
mov
jg
xor
or
(bad)
fild
in
pop
inc
lahf
jge
(bad)
(bad)
hlt
xlat
xchg
out
lahf
shl
sbb
cld
pop
call
jg
mov
mov
imul
add
aas
jmp
ins
xchg
(bad)
dec
stc
xchg
inc
mov
imul
(bad)
jmp
pop
dec
aas
push
pop
pop
jl
cmp
scas
and
aas
stc
jne
or
clc
scas
sub
lahf
hlt
call
(bad)
sbb
das
cli
repz
push
cdq
cmp
jl
fmul
sbb
out
bnd
fcomip
addr16
jg
std
cmp
mov
pop
enter
test
(bad)
sti
rcr
dec
call
jnp
sbb
shl
imul
or
in
(bad)
push
(bad)
(bad)
std
call
cli
cld
rcl
cmp
hlt
fstp
std
cld
jae
out
dec
inc
repz
aam
iret
cmps
(bad)
jmp
stc
mov
test
jg
scas
sub
mov
clc
mov
repz
xlat
arpl
sbb
sbb
das
mov
sbb
std
xor
std
pop
out
cmp
xor
xlat
nop
cwde
repz
jmp
loope
push
jg
std
jg
call
(bad)
jmp
(bad)
inc
lea
in
pop
sar
dec
cli
call
imul
inc
std
(bad)
aas
cmps
(bad)
push
call
(bad)
(bad)
fucomip
(bad)
mov
inc
(bad)
dec
dec
pop
sub
sbb
ds
or
xlat
movs
push
pop
xchg
inc
stc
in
xchg
(bad)
cld
mov
jecxz
nop
jno
xchg
jno
xchg
jl
xor
(bad)
xchg
ja
jge
out
mov
jns
fisttp
addr16
jnp
mov
sbb
shl
or
xor
pop
inc
inc
in
das
mov
mov
pushf
aas
test
outs
inc
push
jg
in
dec
dec
inc
std
xor
repnz
in
stc
repnz
icebp
and
jl
sbb
fist
aas
jle
loopne
cld
clc
int
xbegin
adc
pop
jecxz
clc
sbb
das
imul
sbb
cmps
clc
icebp
mov
push
cmp
adc
ins
neg
jl
pop
and
(bad)
dec
jl
push
loop
jl
xchg
daa
mov
add
lahf
leave
mov
jg
repz
icebp
or
scas
ffreep
(bad)
js
sub
shl
sahf
xor
mov
lahf
in
ret
(bad)
std
fild
dec
fild
jl
out
xchg
(bad)
icebp
fist
jmp
pop
idiv
dec
out
outs
and
mov
stc
push
xchg
xchg
dec
jg
pop
push
repnz
and
jnp
cmps
xchg
push
daa
(bad)
cs
loopne
add
nop
pop
repz
repz
adc
cld
cmps
les
pop
jg
out
cld
jbe
xor
inc
jmp
xchg
jg
imul
xchg
mov
retf
sub
cdq
pop
jmp
mov
in
stc
popf
test
ins
jmp
and
dec
adc
out
jb
jp
(bad)
mov
jg
out
in
clc
inc
or
jmp
pop
adc
adc
adc
call
inc
mov
cld
leave
mov
cld
xchg
dec
ds
pop
jle
mov
mov
add
pop
fsub
pop
mov
and
jle
jb
jle
jb
(bad)
lahf
cld
mov
(bad)
das
and
jp
cmp
fisttp
xchg
addr16
mov
jg
xor
mov
outs
outs
mov
fs
add
out
repz
sbb
int
and
out
outs
dec
std
(bad)
(bad)
lahf
cld
mov
aaa
cld
sbb
cld
into
(bad)
pop
fstp
mov
das
add
mov
dec
lock
adc
out
adc
jle
dec
xor
adc
xor
outs
sub
dec
call
ror
inc
push
in
mov
and
stc
dec
enter
mov
(bad)
sbb
(bad)
mov
mov
jae
(bad)
fwait
jl
aas
(bad)
jbe
cmp
mov
xchg
data16
cld
cwde
and
test
jns
inc
in
clc
in
enter
ds
das
jg
daa
(bad)
fldcw
clc
in
(bad)
popf
or
sbb
ret
(bad)
ins
xchg
ffreep
jnp
adc
loop
stc
lods
cmp
bound
and
repz
xor
pop
jecxz
lahf
cld
das
mov
ds
or
fcomip
ja
fucom
xchg
fist
dec
push
lock
cld
test
xlat
scas
test
fild
pop
inc
push
cmps
call
std
mov
sbb
inc
fsub
pop
addr16
loop
(bad)
xor
mov
push
fs
cld
leave
in
cld
out
cmps
sub
jmp
(bad)
mov
out
(bad)
call
shr
jmp
mov
hlt
repz
ret
repz
dec
jmp
inc
adc
xchg
sub
jnp
mov
(bad)
jg
(bad)
dec
(bad)
jg
jge
(bad)
sar
jmp
push
(bad)
sub
xlat
xchg
test
aas
(bad)
ds
fucomi
(bad)
call
std
(bad)
not
iret
pop
dec
aas
dec
call
std
jmp
mov
mov
(bad)
dec
cli
(bad)
out
inc
mov
and
cli
aaa
rcr
and
push
cli
(bad)
aas
dec
jg
ss
fnstsw
fdivr
lea
jle
push
ds
jne
outs
mov
add
std
lea
pop
xchg
std
mov
(bad)
jo
ja
xlat
jo
shl
and
dec
jg
pop
pop
lock
in
inc
(bad)
stc
cmp
mov
add
stc
ss
outs
inc
dec
cld
sbb
mov
(bad)
xchg
and
jb
pusha
int3
fistp
(bad)
mov
xchg
test
adc
(bad)
and
mov
sbb
dec
ds
mov
(bad)
cmps
lahf
cld
or
dec
dec
arpl
sbb
jmp
xor
outs
repz
lahf
cli
cmp
daa
cmp
lea
jle
jmp
dec
test
lahf
add
movs
xchg
add
cli
jmp
lea
inc
out
fisttp
cld
das
mov
xchg
fs
in
cld
sbb
mov
xor
sbb
pop
and
popf
dec
or
out
std
pop
adc
xor
(bad)
fcmovnu
dec
or
cmp
dec
in
daa
(bad)
out
out
inc
outs
(bad)
mov
es
mov
std
call
mov
mov
dec
fs
sti
jmp
xor
push
fsub
jmp
cli
push
loope
mov
push
stc
in
dec
xchg
push
movs
inc
jle
je
outs
inc
mov
xchg
je
outs
retf
cmp
test
outs
daa
sbb
mov
cld
in
cli
ins
adc
inc
mov
jg
xchg
das
clc
in
(bad)
in
ds
das
jle
dec
(bad)
rcr
leave
jg
fstp
or
xor
jg
mov
sbb
jle
jg
into
jne
mov
lock
inc
cdq
(bad)
pop
nop
std
pop
stc
(bad)
lahf
in
jle
test
into
xor
arpl
add
inc
repnz
jp
jg
cli
in
dec
dec
jg
mov
int
inc
hlt
shr
hlt
sar
imul
mov
sbb
adc
jg
std
cld
mov
std
dec
push
jge
sbb
mov
call
fldcw
imul
aas
xchg
jle
or
repz
mov
idiv
pop
cli
stc
not
fistp
(bad)
mov
mul
mov
dec
(bad)
call
xlat
xchg
jbe
xchg
jb
stc
xchg
jle
inc
lock
(bad)
dec
out
pop
hlt
repz
mov
cld
popf
test
inc
std
(bad)
jnp
fnstcw
std
jmp
cmps
(bad)
jns
mov
inc
aas
jg
mov
(bad)
adc
(bad)
mov
cld
outs
mov
cmc
outs
jl
imul
adc
sbb
aam
inc
call
inc
scas
loope
jo
rol
jg
je
mov
sub
mov
jg
gs
repnz
and
cld
lods
lds
nop
sar
les
inc
scas
iret
aas
inc
jmp
dec
call
mov
jmp
test
daa
dec
fwait
ins
push
(bad)
aaa
stc
in
sti
sbb
cmp
bswap
sbb
clc
in
nop
icebp
push
mov
pop
mov
clc
xlat
pop
std
jg
pop
loope
cld
xor
scas
and
aaa
push
ds
mov
pop
leave
cld
dec
sub
dec
push
and
mov
xchg
aam
dec
mov
sub
fcomip
xchg
jg
pop
nop
jb
dec
mov
cld
sub
popa
lods
clc
fwait
ror
(bad)
sub
mov
cmp
(bad)
cmps
xchg
xor
lods
xchg
jle
(bad)
mov
push
leave
cld
icebp
shr
push
(bad)
out
(bad)
sbb
cld
jb
fsubr
mov
(bad)
outs
inc
mov
xchg
data16
call
and
push
fisubr
cmps
push
call
int
jg
fist
repnz
inc
ins
neg
jle
out
cld
mov
test
loopne
es
cmp
outs
jle
dec
dec
fist
repnz
std
mov
cld
sti
mov
mov
mov
nop
in
nop
not
push
add
nop
pop
xor
jecxz
dec
xchg
out
pop
mov
cld
cwde
jns
nop
push
(bad)
cmp
mov
sar
and
out
imul
mov
outs
adc
jg
dec
inc
cli
ja
aas
pop
pop
mov
loopne
cld
xlat
mov
loop
add
out
aaa
call
stos
fcomip
xlat
sti
int
mov
mov
arpl
push
jmp
neg
scas
sub
(bad)
fist
mov
(bad)
call
mov
or
dec
cli
call
sti
mov
outs
jle
xchg
popa
cmp
adc
sbb
call
std
cld
sbb
imul
lahf
sar
(bad)
cmp
(bad)
aas
movs
cmp
and
push
gs
cmp
push
(bad)
fbld
(bad)
(bad)
in
xlat
adc
xor
mov
or
dec
shr
mov
pop
hlt
(bad)
jle
shl
in
xor
(bad)
scas
jno
test
and
fild
cwde
cld
fnstcw
lahf
cld
not
out
cwde
sbb
mov
fdiv
adc
fild
(bad)
(bad)
inc
or
aas
inc
sub
dec
adc
cld
and
loop
add
call
adc
fist
mov
mov
xchg
pop
ret
jno
rcr
mov
out
retf
fisttp
imul
movs
xor
(bad)
push
mov
lock
jmp
fbld
sti
fld
mov
les
leave
jg
cmp
and
pop
data16
inc
clc
xchg
jg
ja
jle
xchg
mov
repnz
(bad)
sti
ja
sub
jns
or
adc
inc
and
mov
add
pop
mov
inc
and
call
add
lahf
cld
pop
mov
mov
sbb
daa
xchg
mov
loop
cli
in
std
sbb
in
pop
sub
pop
jle
addr16
jg
xor
jg
cli
sbb
(bad)
or
popf
aas
pushf
fisttp
clc
clc
or
dec
mov
aas
shl
aam
cli
sbb
aas
pop
mov
clc
cmc
jg
pop
call
hlt
inc
std
call
clc
lahf
clc
xor
hlt
(bad)
aas
popf
(bad)
push
sar
pop
cld
call
and
or
inc
(bad)
mov
mov
mov
(bad)
aas
cld
xor
std
jmp
movs
(bad)
call
call
std
call
fwait
add
scas
jno
xlat
adc
stc
fucomp
(bad)
call
pop
jl
ja
mov
repnz
std
pop
jle
fcomip
xlat
out
(bad)
outs
(bad)
jmp
sub
sahf
das
or
lock
(bad)
(bad)
cmp
jmp
jmp
mov
in
mov
imul
pushf
das
cld
mov
(bad)
cld
mov
call
xor
imul
mov
mov
in
ja
inc
sti
mov
fild
call
in
inc
or
jg
dec
(bad)
mov
das
mov
in
push
jl
inc
sti
sbb
(bad)
jg
addr16
jle
inc
js
fs
fist
push
or
fwait
xchg
and
cmp
out
dec
pop
hlt
cmp
pop
std
push
les
xchg
cmps
shr
pushf
out
pusha
jg
jg
aas
(bad)
pop
loop
jmp
ja
mov
dec
dec
fisttp
mul
aaa
stc
in
sti
in
aas
stc
mov
sbb
int
cmp
lods
fucomip
aaa
cld
cmc
dec
dec
xor
or
xor
hlt
outs
inc
lea
repnz
loop
sti
out
inc
xchg
clc
lea
cmc
mov
mov
cld
or
stc
iret
jg
aaa
fidivr
rcr
daa
push
outs
ret
lods
sub
or
xchg
call
jle
pop
mov
aaa
aas
clc
ret
adc
xor
xchg
cmps
jle
(bad)
(bad)
aas
call
pop
xor
in
xlat
xchg
and
push
mov
mov
cmps
cli
fisttp
jge
in
xlat
adc
repnz
call
lahf
dec
(bad)
(bad)
mov
jg
xor
and
aaa
cmp
sbb
push
mov
(bad)
(bad)
add
stos
fcom
ins
std
sbb
imul
and
daa
mov
xchg
push
push
jle
dec
(bad)
cmps
pop
inc
push
or
stc
or
call
fisttp
popf
pop
lock
mov
lock
daa
(bad)
mov
mov
lea
jle
inc
stos
pop
hlt
fstp
jg
pop
add
repnz
mov
rcr
mov
push
jle
pop
js
or
outs
dec
dec
nop
sar
call
es
xchg
xchg
add
sbb
in
mov
in
adc
in
jecxz
(bad)
xchg
jge
sub
out
lock
dec
std
ss
adc
std
fsub
mov
out
mov
std
das
push
add
cmps
jg
hlt
fbld
in
or
cmp
(bad)
rcl
fld
mov
cmp
daa
mov
mov
pop
inc
push
dec
fnstsw
cmc
imul
push
std
mov
(bad)
call
(bad)
aas
lock
hlt
(bad)
fisttp
out
std
(bad)
jg
xor
inc
mov
lea
dec
imul
daa
sti
mov
xor
mov
jne
jle
inc
push
lahf
cld
mov
loope
(bad)
jmp
xor
mov
outs
dec
hlt
dec
mov
mov
nop
adc
outs
repnz
mov
jmp
loopne
push
popa
mov
xor
xchg
and
ins
les
jle
lahf
cld
dec
add
aas
in
cld
gs
fldenv
and
in
inc
jp
aaa
repz
mov
xor
mov
mov
push
push
das
mov
int3
dec
(bad)
jecxz
sti
scas
sub
jno
out
test
test
clc
jne
or
out
xchg
inc
inc
(bad)
(bad)
mov
scas
and
(bad)
addr16
jmp
movs
in
dec
(bad)
jmp
or
call
(bad)
jmp
std
std
pop
cli
or
mov
pop
push
xchg
clc
xlat
adc
loope
stc
dec
jg
pop
mul
retf
popa
ss
aaa
hlt
sub
dec
mov
dec
in
add
cmp
repz
cwde
(bad)
xchg
(bad)
stc
pop
mov
add
jae
pop
(bad)
fbstp
(bad)
sti
sbb
mov
clc
mov
pop
(bad)
lahf
mov
cmc
pop
call
cmp
(bad)
xchg
cmps
mov
call
inc
inc
(bad)
(bad)
push
std
sbb
(bad)
cmps
(bad)
call
ins
mov
pop
cli
lea
(bad)
mov
or
jle
ja
in
(bad)
cmp
xchg
loope
enter
xchg
daa
(bad)
cmp
inc
inc
xchg
fsub
mov
cli
stc
pop
or
fbstp
stc
add
add
or
cld
xchg
iret
jns
mov
lods
sbb
dec
lahf
cld
or
(bad)
jg
or
bound
mov
std
idiv
aaa
push
clc
scas
add
mov
fs
lock
jg
xchg
adc
loopne
clc
pop
clc
or
clc
xchg
jle
loopne
cmp
lahf
cld
dec
shr
inc
add
dec
(bad)
jle
and
in
clc
mov
mov
xchg
outs
shr
cmp
fsubrp
out
xor
std
dec
mov
(bad)
sbb
jge
push
call
sbb
out
mov
inc
inc
int
pushf
push
cmp
sub
pop
add
std
sbb
fild
stc
in
cld
in
aas
stc
fistp
pop
into
(bad)
mov
in
lods
pop
xchg
shl
jle
std
mov
xchg
stc
repnz
aas
sti
xlat
clc
dec
jle
lods
pop
pop
lods
jmp
std
(bad)
pop
add
jg
out
mov
outs
sahf
jle
test
xchg
mov
popf
and
(bad)
std
mov
aas
lahf
adc
cld
cmc
xor
aad
inc
mov
and
out
jg
fnstenv
not
ja
push
mov
outs
inc
jle
cmp
out
out
movs
lahf
das
dec
inc
jle
std
(bad)
xlat
push
mov
inc
mov
pop
inc
jg
mov
(bad)
sbb
sti
aas
inc
lahf
jg
jmp
jle
jmp
inc
hlt
fnstsw
in
jg
(bad)
(bad)
sub
outs
and
call
ret
jmp
cld
out
and
mov
(bad)
sti
sar
lock
fistp
cli
in
pop
mov
jbe
(bad)
call
test
inc
(bad)
cmps
jbe
or
cld
inc
or
sbb
(bad)
out
fcomi
fnstsw
lods
mov
call
xchg
hlt
push
ds
scas
or
imul
jmp
push
in
ds
cld
dec
fist
dec
out
(bad)
call
jbe
(bad)
call
jg
or
lahf
dec
ins
mov
std
(bad)
stos
call
pop
fwait
cli
cld
fucomp
mov
loope
repz
cmps
(bad)
(bad)
jle
out
movs
mov
mov
mov
shr
mov
sar
mov
rcr
or
int3
call
sti
pop
imul
ss
rcr
call
hlt
std
fild
jmp
and
inc
jmp
daa
sar
mov
pop
mov
mov
push
push
fwait
xor
mov
sti
jg
jle
push
jmp
sti
fwait
or
add
cmc
mov
(bad)
icebp
hlt
(bad)
mov
imul
mul
clc
mov
std
(bad)
push
shl
sub
addr16
mov
iret
push
dec
movs
call
(bad)
gs
fisttp
repz
call
(bad)
mov
(bad)
fucomip
sti
pop
sbb
inc
stc
and
int
dec
(bad)
call
push
hlt
repz
mov
in
mov
inc
addr16
iret
jmp
clc
or
js
xor
cli
stc
and
cmps
mov
jmp
cld
push
xor
or
mov
stc
jg
cld
fild
fild
call
out
dec
ins
jg
(bad)
jmp
push
pop
jg
mov
adc
cld
div
sti
aas
inc
out
dec
ja
repz
ficomp
sar
imul
cmp
(bad)
aas
dec
out
dec
xor
pop
cli
stc
jnp
(bad)
jg
mov
outs
dec
ins
dec
fild
imul
inc
jg
jb
icebp
lahf
shl
and
dec
cmc
repz
iret
fisttp
jecxz
cmps
mov
hlt
(bad)
jg
cld
inc
lahf
inc
loope
and
jg
cmc
rep
rcr
inc
call
std
call
ret
movs
mov
fwait
sar
mov
(bad)
out
daa
mov
(bad)
fdivrp
adc
out
ss
xlat
imul
aas
mov
jle
jge
mov
mov
jmp
shl
ja
iret
jmp
mov
mov
daa
fmul
dec
std
xchg
hlt
fnstcw
ins
mov
popf
aas
xchg
ficomp
jle
aaa
call
repz
shl
mov
xchg
rcr
lahf
push
fwait
mov
jmp
pop
sar
call
std
iret
cmps
lahf
sub
(bad)
outs
mov
jnp
lock
cmc
pop
push
sti
aas
nop
(bad)
jmp
jge
sub
(bad)
jg
jbe
in
out
or
mov
push
std
shl
mov
jmp
lahf
cmps
imul
sar
add
cli
in
mov
sar
jmp
call
lahf
inc
out
(bad)
test
lock
cmp
mov
(bad)
ja
call
icebp
fdivrp
ja
xlat
dec
adc
shr
sbb
out
fnstsw
cli
std
ins
shr
mov
cli
stc
sub
repz
shl
mov
adc
hlt
jge
jo
jmp
dec
adc
popa
cli
ins
xchg
mov
(bad)
mul
sti
aas
adc
aas
cmp
pushf
jle
mov
cmp
fist
(bad)
aas
inc
out
std
div
fnstcw
add
(bad)
cmps
mov
pop
movs
iret
(bad)
sbb
jmp
mov
icebp
test
sti
nop
(bad)
dec
lock
outs
sub
jge
jg
and
rcr
jmp
sar
call
xlat
movs
jbe
sub
nop
sar
or
std
aas
xor
outs
into
call
call
das
shl
and
mov
or
das
mov
in
aaa
movs
lahf
mov
push
fcmovnu
cwde
call
inc
in
pop
sar
jg
cmc
stc
(bad)
cwde
mov
test
addr16
fnstsw
inc
lahf
std
popf
aam
cmp
adc
out
test
dec
xor
(bad)
jle
fstp
mov
xor
mov
add
lock
sar
in
sahf
pushf
(bad)
jnp
xchg
nop
test
sti
jns
push
inc
push
pop
inc
mov
(bad)
jle
pop
adc
imul
sti
imul
push
jmp
xlat
nop
push
(bad)
fxtract
(bad)
mov
cld
sbb
aam
pop
hlt
(bad)
jg
xlat
nop
inc
leave
aas
dec
(bad)
call
call
(bad)
aas
cmps
(bad)
dec
enter
cmps
test
add
dec
jg
leave
inc
and
loop
xchg
dec
ja
jmp
call
xchg
sar
dec
call
add
cld
(bad)
hlt
(bad)
mov
ret
jg
(bad)
dec
sar
dec
pop
push
mov
jmp
(bad)
jmp
jmp
jg
leave
dec
(bad)
outs
hlt
push
std
jmp
xlat
xchg
aad
out
call
mov
jle
pop
sbb
push
(bad)
adc
call
call
pop
jmp
dec
sar
push
(bad)
jg
(bad)
jmp
std
call
(bad)
jg
pop
fwait
cmps
popf
(bad)
call
(bad)
jg
cli
jmp
movs
call
jmp
mov
mov
(bad)
(bad)
jge
jmp
hlt
call
dec
(bad)
jg
std
dec
(bad)
(bad)
jns
(bad)
mov
sar
dec
(bad)
aas
dec
(bad)
jmp
(bad)
(bad)
cmp
(bad)
fbld
(bad)
dec
push
(bad)
jg
cli
aas
push
test
std
jg
(bad)
inc
(bad)
mov
(bad)
jg
cli
jg
jmp
(bad)
aas
mov
(bad)
aas
xchg
(bad)
jmp
cli
call
(bad)
call
std
call
mov
(bad)
jg
(bad)
call
cli
(bad)
dec
inc
cmp
(bad)
fist
(bad)
out
sar
pop
sar
jg
cli
jmp
hlt
call
hlt
dec
std
mov
dec
call
inc
(bad)
jmp
(bad)
jg
std
dec
movs
(bad)
jmp
hlt
(bad)
mov
sar
jmp
cli
(bad)
aas
dec
(bad)
call
std
(bad)
aas
cmps
(bad)
push
(bad)
call
(bad)
jg
pop
(bad)
cli
movs
(bad)
push
dec
(bad)
cmp
jmp
(bad)
fistp
dec
jmp
psubsb
jg
std
dec
(bad)
call
(bad)
mov
sar
dec
cli
(bad)
aas
inc
(bad)
jmp
jmp
(bad)
fbld
(bad)
dec
jmp
cmps
(bad)
cli
hlt
(bad)
fild
aas
mov
lahf
sar
aas
mov
jg
(bad)
dec
dec
cli
dec
inc
std
push
inc
bnd
sub
sar
adc
dec
(bad)
xchg
hlt
mov
add
movs
jg
jle
sti
jmp
(bad)
hlt
ja
pop
jmp
lahf
loop
jg
std
std
lock
aas
pushf
(bad)
stos
clc
jmp
stc
pop
pop
shr
shl
jg
mov
daa
jg
cli
out
sar
xlat
lahf
lahf
(bad)
xor
dec
repz
daa
push
cmp
(bad)
lds
jg
cli
jmp
lahf
pop
mov
xlat
(bad)
outs
or
adc
out
es
adc
ds
mov
lahf
ror
fucomip
loopne
aas
jle
loopne
jle
sbb
(bad)
(bad)
fcomip
pusha
mov
js
ja
pop
stos
sbb
pop
cld
push
test
mul
(bad)
lock
shr
call
inc
in
aaa
pop
push
std
dec
(bad)
cmp
mov
(bad)
jge
jne
lock
loopne
aas
add
cmp
push
cld
jecxz
icebp
xchg
pop
inc
ds
mov
(bad)
and
adc
hlt
popf
cmp
pop
and
lock
loop
sbb
std
loope
in
pop
inc
mov
cmp
test
cs
pop
jg
(bad)
sti
sbb
cld
into
pop
pop
mov
daa
clc
clc
hlt
loopne
jle
sbb
sar
out
jle
fist
icebp
fld
fistp
cld
not
mov
xlat
(bad)
mov
sar
popa
jo
inc
loopne
inc
jmp
iret
inc
cld
mul
aaa
adc
mov
std
jecxz
in
pop
ret
clc
in
out
clc
aas
(bad)
out
(bad)
cmp
xchg
lock
iret
nop
clc
cmp
dec
lock
jbe
push
std
neg
sbb
sub
mov
sbb
mov
clc
adc
cld
sar
fild
sub
pusha
test
cs
aad
jle
adc
aaa
cmp
or
cld
xchg
clc
loopne
ret
lock
ror
icebp
fild
cld
neg
shl
jle
push
lock
mov
call
out
mov
icebp
loopne
les
sbb
std
dec
movs
fdivr
add
jecxz
fisttp
mov
dec
mov
xor
push
lock
scas
(bad)
sub
loopne
(bad)
(bad)
fld
fild
(bad)
aaa
xor
mov
sub
sbb
pop
jg
jle
test
mov
mov
stc
lahf
or
inc
iret
cmp
mov
inc
(bad)
std
loopne
lds
add
jnp
jmp
pop
mov
jns
clc
or
lock
push
add
mov
std
test
outs
mov
cld
not
jecxz
dec
in
sbb
rcr
scas
(bad)
jnp
jo
lock
loopne
dec
pop
cld
jnp
loopne
pop
(bad)
cmp
inc
pop
mul
lahf
lds
cmp
cli
xchg
fcmovnu
xchg
dec
div
jecxz
mov
clc
in
das
lds
sbb
sbb
enter
add
in
loopne
ret
in
loopne
(bad)
out
daa
ds
pop
or
test
adc
repz
loopne
ds
ret
lock
mov
fcmovnu
sbb
icebp
fistp
(bad)
fistp
mov
sbb
or
ret
and
mov
(bad)
lea
aaa
dec
ins
jmp
mov
aas
push
sub
sbb
xchg
clc
in
pop
jecxz
jg
mov
scas
loop
mov
push
sbb
in
fisttp
clc
fwait
icebp
shl
jg
ds
mov
paddd
cmp
jle
push
pop
jg
(bad)
js
lock
loope
fistp
pusha
(bad)
adc
push
inc
loope
sbb
pop
test
(bad)
sbb
jo
pop
add
div
fistp
mov
pop
jecxz
xor
fucomip
loopne
jle
mov
inc
sahf
sbb
in
or
jle
xor
pop
movd
jl
scas
add
outs
test
inc
cld
mov
sub
in
pop
mov
std
test
iret
loope
dec
mov
ffreep
push
mov
cld
push
push
jmp
jg
pop
and
mov
push
ins
call
jl
rol
pop
mov
rol
loope
loopne
shr
pop
cld
push
clc
in
lahf
inc
fistp
fbstp
mov
jle
imul
aas
add
daa
icebp
fistp
mov
in
sahf
mov
jl
jmp
clc
icebp
shl
pop
clc
loopne
jecxz
(bad)
outs
jg
iret
aas
jle
ja
cld
clc
in
test
pop
int
sti
sbb
out
repnz
mov
clc
cld
mov
(bad)
pop
mov
ffreep
outs
call
ds
out
jl
lock
jecxz
aas
sbb
loopne
rcr
pop
mov
iret
jg
jl
xchg
loop
push
mov
idiv
clc
push
lock
cmp
mov
ds
or
(bad)
xor
pop
iret
jle
fnstsw
pop
cmp
clc
(bad)
out
leave
aaa
dec
cwde
jbe
sbb
fdivrp
xor
scas
and
clc
(bad)
scas
jg
dec
(bad)
data16
(bad)
stc
scas
loope
jecxz
sar
jg
std
dec
or
std
adc
std
popf
mov
mov
sbb
jg
imul
retf
dec
(bad)
aas
jmp
dec
jl
xlat
xchg
aad
adc
or
call
cli
push
call
std
pop
retf
mov
daa
xchg
cmps
sub
(bad)
xchg
hlt
(bad)
jg
(bad)
jmp
cli
(bad)
jg
imul
std
dec
push
dec
std
or
std
push
(bad)
inc
push
std
inc
std
call
(bad)
mov
hlt
jmp
xlat
adc
clc
les
std
dec
(bad)
(bad)
fxtract
(bad)
mov
sar
push
cli
(bad)
fisttp
inc
jmp
(bad)
fbld
(bad)
jmp
xlat
adc
(bad)
cmp
mov
aas
movs
call
(bad)
jg
(bad)
lahf
sar
out
call
inc
(bad)
jg
std
dec
(bad)
inc
(bad)
lahf
(bad)
out
mov
repz
int3
(bad)
fidiv
jecxz
jmp
std
mov
stos
dec
(bad)
shl
or
jnp
sub
leave
mov
icebp
das
movs
jg
jle
xchg
jmp
push
cli
xor
jmp
dec
jg
aas
(bad)
xchg
adc
add
cld
gs
jg
(bad)
lahf
cld
fldcw
xchg
fdivr
stc
push
sar
push
aas
(bad)
fcomp
in
jb
xor
push
pop
sub
sahf
mov
pop
sub
jle
popf
icebp
fist
mov
mov
js
(bad)
jo
clc
or
loop
ja
clc
push
(bad)
(bad)
pop
lock
mov
cmps
jg
sbb
cmps
clc
loopne
shr
(bad)
xor
clc
mov
pop
std
jb
neg
mov
sub
inc
hlt
and
(bad)
adc
push
pop
sub
pop
lock
aas
sbb
ins
cld
div
pop
stc
lds
jg
jle
and
(bad)
mov
movs
jg
jle
xor
aad
mov
jbe
mov
lds
(bad)
out
push
repnz
ins
cli
fnstsw
stos
lahf
(bad)
outs
dec
or
jge
add
mov
mov
sub
cmp
(bad)
(bad)
loopne
jle
cmp
ror
addr16
sbb
pop
mov
mov
clc
in
add
xor
clc
(bad)
imul
loopne
mov
push
(bad)
jg
movd
sar
lock
loopne
jg
mov
das
les
movd
mov
scas
shr
cmp
and
loopne
lds
jo
jle
out
pop
cld
popa
clc
icebp
lods
sbb
addr16
xchg
clc
cli
jg
fwait
and
cmp
inc
jo
lock
loopne
lock
sbb
mov
sti
jnp
mov
adc
jge
scas
into
pmaxsw
sbb
pop
cld
out
clc
in
aas
inc
mov
in
movd
std
addr16
jbe
(bad)
pop
push
aas
pop
jp
lock
icebp
aad
test
mov
cld
xchg
fwait
pop
lods
fcomip
loopne
rcr
cmp
clc
in
outs
(bad)
outs
dec
jle
fdivr
ja
mov
sbb
std
or
addr16
jl
out
sbb
mov
loopne
lds
mov
pop
ffreep
pop
jg
jle
ret
lock
shr
pop
jg
rcr
add
jge
mov
xor
fstp
mov
inc
sub
mov
cld
mov
mov
into
frstor
push
out
repnz
jle
(bad)
mov
clc
in
pusha
idiv
in
cld
pop
push
aas
stc
pop
jg
fucomip
xchg
mov
jg
jae
daa
jg
out
jb
sar
and
pop
std
in
stc
sbb
cmp
in
dec
fldenv
inc
xchg
leave
jle
adc
out
lea
test
out
mov
(bad)
cs
cli
pop
(bad)
xlat
lahf
loope
(bad)
loopne
jl
jl
ret
push
jle
cld
fdivr
clc
add
out
adc
arpl
mov
jecxz
sbb
fnstsw
xlat
fisttp
mov
xchg
xlat
and
imul
jecxz
call
in
mov
hlt
out
fs
rcl
cmp
or
icebp
lahf
xchg
pop
xor
sub
push
jg
ds
cli
inc
clc
loopne
ror
jecxz
add
sahf
sbb
rcl
jl
xor
ffreep
(bad)
cmc
rcr
icebp
cmp
rol
out
icebp
fwait
push
cld
sahf
push
cmps
clc
lea
movd
lock
loopne
fist
pop
cld
hlt
shr
cmp
dec
lock
xchg
ja
sub
dec
les
and
stc
out
inc
mov
cs
std
jbe
lods
in
cld
retf
clc
push
test
pop
mov
ret
pop
ds
cld
loopne
les
dec
ds
retf
icebp
shl
into
aad
xchg
mov
(bad)
js
lock
cmp
pop
cld
jbe
aas
sbb
int
sbb
inc
int
jecxz
shl
stc
aas
mov
pop
jecxz
(bad)
push
sahf
jecxz
pop
pop
cmps
clc
sbb
cld
shl
sti
inc
lock
mov
cld
clc
or
stc
cmp
imul
cmp
mov
enter
mov
dec
cs
jg
pop
mov
iret
fnstenv
cli
mov
sbb
push
inc
mov
icebp
jecxz
push
(bad)
and
repnz
icebp
shr
pop
(bad)
jp
dec
loopne
cld
cmps
(bad)
cmp
mov
ret
lods
in
(bad)
xchg
mov
sbb
fcomi
and
(bad)
fbld
outs
jmp
call
movs
inc
push
(bad)
pop
cli
(bad)
fisttp
(bad)
or
push
nop
or
jg
(bad)
call
(bad)
inc
std
pop
xchg
mov
out
inc
inc
sbb
aas
sub
ins
sub
imul
stos
aas
mov
(bad)
fcom
sar
pop
inc
(bad)
call
push
fisttp
(bad)
outs
pop
cdq
dec
loope
jl
aas
movs
jg
jle
xchg
mov
and
inc
loop
mov
xchg
(bad)
out
stc
xor
clc
jmp
dec
jg
cld
clc
mov
mov
std
mov
loope
(bad)
xor
adc
pop
sub
aas
xor
pop
icebp
jecxz
adc
cld
movs
nop
ins
js
pop
sub
fisttp
mov
sbb
iret
(bad)
sub
mov
cmp
(bad)
(bad)
loopne
lahf
and
sub
jmp
dec
ins
sti
jecxz
pusha
pop
pop
mov
(bad)
loopne
jle
cld
mov
fistp
cld
not
sub
sbb
push
out
loope
dec
cmps
cld
arpl
push
leave
xchg
hlt
ds
push
icebp
(bad)
fstp
(bad)
fistp
mov
cmps
out
outs
(bad)
outs
jmp
jle
imul
scas
(bad)
outs
jg
jle
jp
loopne
les
sub
sbb
loope
pextrw
outs
dec
int3
push
pop
jecxz
xor
inc
test
xor
pop
cmp
jnp
sbb
daa
loopne
lahf
shr
jle
out
dec
jg
mov
sbb
mov
(bad)
mov
jmp
hlt
neg
inc
adc
test
pop
dec
inc
loope
xor
enter
scas
leave
pushf
cld
repz
lahf
jl
dec
jo
call
dec
lock
(bad)
cld
mov
jae
in
mov
das
cld
pop
mov
stc
jae
and
in
sti
pop
jle
dec
(bad)
and
jg
stc
mov
cld
loope
sub
sub
je
pop
mov
cmp
(bad)
pop
pop
fsub
sub
fs
mov
sbb
or
or
cmp
les
push
ds
gs
mov
or
inc
mov
mov
mov
push
clc
cld
jg
inc
mov
(bad)
push
pop
dec
call
psadbw
(bad)
gs
clc
lods
paddd
dec
retf
jg
mov
out
mov
repz
loope
aas
push
mov
icebp
rcr
lock
fld
cli
and
sbb
lahf
jle
sbb
in
and
add
test
fmul
mov
pop
std
pop
rol
fs
dec
repz
jle
cli
in
std
pop
jle
dec
dec
loopne
jmp
cld
jbe
cld
jae
and
in
lahf
clc
in
call
xchg
loope
in
ds
sti
jg
fucomip
xchg
mov
repnz
cs
dec
repz
daa
jg
sar
scas
(bad)
pop
jle
dec
(bad)
repnz
(bad)
aas
stc
mov
dec
inc
in
mov
in
sbb
(bad)
aaa
daa
pop
jnp
leave
pop
stc
mov
xchg
mov
sbb
imul
rcl
jle
loopne
jle
add
jno
loopne
jle
into
and
and
pop
lock
(bad)
fist
pop
push
fadd
(bad)
mov
jecxz
fist
aas
out
mov
(bad)
sub
bound
adc
std
pop
mov
(bad)
sbb
lock
loop
jp
out
loope
faddp
mov
outs
stc
jmp
cs
pop
int
dec
dec
xor
cmp
imul
pusha
mov
or
out
pop
jecxz
jmp
jg
scas
loope
popa
jle
fist
add
and
(bad)
fcomi
test
pop
icebp
jecxz
inc
retf
movaps
cld
cmps
loope
jg
ja
aas
stc
(bad)
(bad)
movs
call
jle
std
jmp
(bad)
out
repnz
movs
mov
sub
push
xchg
jo
dec
pop
(bad)
jbe
lock
dec
adc
std
cs
std
adc
sti
xchg
adc
jmp
sub
mov
inc
fsubr
mov
(bad)
outs
jmp
std
out
ja
cmp
mov
inc
repnz
cs
inc
repz
cld
xchg
jl
outs
std
cs
dec
daa
and
pop
cli
cmps
inc
mov
inc
lods
xchg
enter
aas
stc
pop
jg
dec
(bad)
cmps
fbld
leave
pop
idiv
mov
in
ja
std
aas
stc
mov
imul
repnz
in
daa
jg
test
cld
out
push
xchg
dec
clc
dec
ds
ret
and
ficom
or
retf
jns
int3
jmp
(bad)
out
rol
and
sti
and
dec
ds
dec
jg
dec
(bad)
mov
call
stc
movs
call
add
xlat
jle
xor
inc
repnz
aas
idiv
push
mov
aas
inc
jmp
std
into
and
sbb
ret
leave
(bad)
mov
mov
leave
ret
jg
test
stc
add
js
fwait
lock
dec
xchg
cmps
jle
jmp
pop
mov
stc
iret
jmp
repnz
dec
(bad)
jge
imul
sar
mov
mov
das
cld
cs
stc
addr16
jnp
adc
std
add
push
inc
out
clc
pop
idiv
stc
pop
jle
popf
dec
inc
mov
not
cs
jl
xchg
cld
mov
mov
lahf
dec
pop
jmp
(bad)
sti
(bad)
(bad)
cs
outs
neg
std
cs
mov
mov
clc
xlat
jo
xchg
jmp
popf
ins
sar
ja
cmp
(bad)
out
inc
(bad)
jg
(bad)
inc
jg
lock
cmps
(bad)
cmp
inc
cld
pop
push
js
inc
int3
fild
std
test
sbb
(bad)
repz
adc
or
icebp
ja
cs
(bad)
ss
ffreep
pop
cmp
out
(bad)
fist
add
sar
xlat
pusha
mov
imul
cmps
and
dec
and
sti
or
add
push
loop
adc
out
mov
(bad)
cs
adc
(bad)
xchg
fisttp
repnz
xchg
xchg
fucomip
dec
retf
cli
in
and
xchg
in
out
repnz
jg
data16
and
mov
and
(bad)
dec
(bad)
stos
fild
sti
in
push
push
outs
sti
leave
mov
fisttp
cld
mov
sbb
ja
mov
sub
in
sti
sbb
add
outs
icebp
leave
jg
and
(bad)
jle
dec
(bad)
std
fisttp
and
das
clc
in
cld
popf
aas
stc
out
jnp
fldcw
leave
aas
(bad)
cmp
or
out
cld
add
outs
repz
cs
idiv
push
hlt
das
(bad)
cmp
(bad)
cld
cmc
dec
jg
outs
jbe
aas
adc
mov
fist
inc
mov
scas
addr16
inc
mov
push
and
mov
or
cld
clc
pop
jle
aam
hlt
sti
loopne
inc
ret
hlt
into
js
sar
dec
(bad)
lods
fistp
jg
ja
sbb
ja
ja
sti
dec
(bad)
cmp
idiv
mov
push
daa
mov
lods
push
shr
(bad)
fisttp
mov
(bad)
and
mov
fbld
mov
push
fistp
(bad)
mov
mov
icebp
cli
ins
or
lea
xor
or
mov
outs
sti
leave
mov
mov
inc
jp
(bad)
call
ja
pop
xchg
dec
std
fwait
rol
icebp
out
(bad)
das
std
cmp
out
and
mov
shl
cmp
jmp
pusha
lea
fbstp
out
mov
inc
pop
pop
and
dec
jl
sbb
sar
das
jmp
jmp
mov
inc
(bad)
xlat
clc
xor
jo
cli
push
retf
sub
or
mov
pop
cmp
ds
aas
fwait
pop
call
mov
cmp
ds
test
or
std
mov
add
repz
cmp
scas
jle
jg
pusha
loopne
adc
jge
mov
stc
adc
retf
(bad)
in
(bad)
mov
dec
hlt
shr
repnz
cmp
jmp
test
jle
hlt
mov
loopne
out
mov
jg
mov
(bad)
jmp
das
movs
ss
fidivr
ins
add
mov
repz
cmp
sub
sar
sbb
mov
inc
pop
(bad)
jbe
adc
pop
in
jmp
fisttp
loopne
xchg
out
neg
cmps
mov
(bad)
dec
pop
sbb
daa
xchg
cli
xchg
js
fidivr
xor
inc
scas
jg
mov
inc
pop
rol
mov
xlat
mov
inc
cmps
add
ja
jp
movs
nop
(bad)
stc
xor
out
scas
dec
sbb
stc
aaa
mov
std
(bad)
sar
call
jmp
movs
out
call
in
mov
jle
dec
aas
pop
sar
jmp
cli
out
jmp
out
mov
fstp
js
(bad)
fist
repz
xor
sbb
mov
neg
inc
aas
dec
cli
stc
mov
iret
dec
out
mov
stc
(bad)
rcr
call
scas
das
sub
jg
jge
out
addr16
std
jmp
(bad)
jno
in
ja
fistp
push
xchg
pop
hlt
fstp
aas
jg
std
cld
imul
mov
dec
mov
dec
jg
(bad)
ins
add
cmps
hlt
repz
mov
stc
lahf
push
fstp
(bad)
adc
(bad)
jmp
iret
sbb
cld
mov
out
sbb
iret
fild
call
shl
(bad)
cmp
mov
hlt
jmp
call
std
std
pop
shl
jmp
test
sti
push
std
lea
mov
pop
add
dec
cli
stc
cmp
cld
pop
mov
pop
hlt
neg
outs
and
hlt
dec
jp
dec
in
jle
cli
cld
mov
iret
jle
cli
stc
psrlq
cmp
cli
std
mov
idiv
mov
inc
(bad)
call
int
dec
(bad)
jmp
aaa
daa
fdivr
std
(bad)
xchg
shl
or
push
fcmovnbe
iret
ja
iret
fild
scas
jmp
jg
call
out
mov
call
aad
dec
dec
iret
dec
icebp
aas
rol
out
cli
or
cli
cld
xchg
sub
mov
mov
xchg
and
out
(bad)
mov
cli
sti
aaa
mov
and
dec
mov
and
out
aas
cmp
xchg
hlt
repz
(bad)
das
std
out
pop
jg
mov
xchg
(bad)
jle
fcomip
ja
call
mov
sbb
inc
(bad)
sbb
jmp
sar
dec
mov
fistp
jg
cli
jmp
hlt
(bad)
mov
(bad)
jge
inc
(bad)
out
dec
(bad)
jg
imul
stc
scas
and
sbb
(bad)
out
dec
(bad)
(bad)
jge
call
inc
scas
and
sbb
inc
sbb
lods
repnz
sar
push
call
inc
or
add
test
(bad)
mov
jg
bound
cli
mov
(bad)
and
loope
and
xor
(bad)
mov
cli
aas
mov
mov
adc
pusha
dec
sbb
nop
mov
sar
push
cli
aas
repnz
or
call
hlt
(bad)
jg
(bad)
call
cli
(bad)
inc
(bad)
aas
call
stos
(bad)
sti
inc
retf
fistp
repnz
xchg
(bad)
stc
ja
cli
in
daa
addr16
mov
call
jecxz
(bad)
dec
(bad)
loope
(bad)
jmp
xchg
frndint
(bad)
dec
inc
lock
inc
scas
out
inc
data16
out
mov
xor
mov
sar
aaa
cld
cs
enter
sub
shl
das
and
stc
out
aaa
repz
mov
cmps
xchg
(bad)
cmc
daa
push
enter
add
inc
xchg
pop
test
fist
lds
out
xor
clc
in
push
mov
pushf
or
jb
loop
xchg
pop
ffreep
(bad)
(bad)
loopne
aas
mov
xchg
lock
in
pop
xchg
iret
cmp
bnd
cld
clc
test
cld
leave
call
adc
(bad)
cwde
test
dec
push
loope
lock
jo
xchg
loop
jg
aas
mov
(bad)
sub
pop
sbb
std
add
repz
ds
shl
xchg
jl
fadd
sti
mov
jl
add
push
clc
pusha
out
test
jecxz
add
push
jb
cs
std
jmp
mov
or
jae
jmp
mov
sti
xor
sbb
mov
clc
icebp
in
loopne
lds
mov
(bad)
jp
and
clc
mov
lock
mov
mov
dec
mov
mov
ret
or
jg
cli
(bad)
out
inc
(bad)
push
aas
mov
inc
adc
dec
sahf
(bad)
sbb
repnz
pop
cld
sbb
push
jmp
xor
call
movs
inc
hlt
(bad)
mov
sar
(bad)
out
pop
inc
rcl
hlt
jg
sub
sbb
enter
mov
dec
push
sar
pop
scas
inc
cld
mov
sub
aas
stc
mov
es
out
adc
fist
push
sbb
xchg
fidivr
cli
in
(bad)
in
mov
adc
mov
mov
les
pop
jl
xchg
push
mov
pop
dec
test
addr16
mov
cmps
xchg
addr16
daa
push
stos
in
in
int3
daa
jg
lods
in
and
movs
sti
and
lock
(bad)
clc
jno
test
movs
pushf
ficom
inc
repnz
rcl
sbb
(bad)
fld
xchg
push
cmp
cmp
mov
dec
test
out
adc
cld
out
outs
cmp
ja
arpl
pop
xchg
addr16
jecxz
dec
push
mov
jmp
movs
xchg
int
test
jmp
cmp
mov
call
out
not
stc
into
daa
jg
inc
scas
jg
inc
xchg
jg
and
repz
adc
jl
lock
aas
jle
sbb
mov
(bad)
clc
icebp
cmp
cmp
mov
mov
pop
(bad)
pop
push
jno
(bad)
mov
(bad)
fisttp
repnz
jmp
dec
std
cmp
xlat
aas
inc
xor
xchg
sbb
in
(bad)
mov
popa
stos
icebp
scas
and
rcr
xor
inc
hlt
jmp
mov
scas
loope
push
jb
jg
sbb
pusha
jmp
imul
mov
xchg
inc
ja
sub
stc
dec
jg
or
mov
mov
inc
repnz
push
xor
push
or
iret
push
jp
lahf
mov
fild
mov
dec
(bad)
leavew
dec
cld
xor
mov
shl
cmps
loope
daa
push
outs
repz
jg
imul
out
nop
mov
std
sub
cld
or
jnp
or
fnstcw
icebp
cmp
js
xchg
jg
mov
sar
fsub
outs
movs
mov
fcmovu
in
jae
stc
stos
(bad)
push
shr
lahf
cld
(bad)
mov
out
hlt
leave
jg
fist
fcomp
call
cld
in
cld
ins
or
fucomip
xchg
jg
ja
fscale
pop
imul
fild
or
mov
cmp
in
outs
test
repnz
sub
xlat
std
pop
jle
and
add
aaa
push
inc
ins
inc
lock
fcmovnbe
(bad)
jg
pop
inc
in
adc
ja
mov
adc
clc
ins
sub
inc
imul
inc
mov
push
adc
mov
sahf
inc
pop
inc
outs
sbb
and
out
inc
pushf
cli
cmp
(bad)
mov
pop
loop
fucomip
xchg
jg
ja
in
clc
popf
sub
jg
fdivrp
mov
clc
lods
test
call
rcr
cwde
sub
pop
adc
mov
(bad)
mov
rcr
and
shl
jg
div
and
pop
mov
inc
in
sub
cmps
dec
inc
jmp
arpl
pop
mov
cmps
in
jo
fsub
or
fwait
xchg
inc
cld
cs
out
mov
(bad)
xchg
(bad)
cld
ja
inc
mov
mov
(bad)
push
lahf
cld
xlat
mov
aas
stc
dec
jle
xlat
aad
mov
aas
dec
arpl
ins
push
std
mov
dec
inc
cmc
jg
cmp
jecxz
not
loopne
fisttp
out
cld
neg
daa
(bad)
(bad)
cld
leave
mov
hlt
mov
push
mov
outs
test
repnz
(bad)
mov
cld
jnp
fdivr
(bad)
sub
mov
jg
ficom
jecxz
fdivr
cmc
jle
jnp
and
add
dec
fist
mov
test
in
nop
in
std
dec
mov
mov
cs
loop
icebp
fist
outs
and
jmp
aad
cli
sti
pop
mov
inc
and
hlt
sti
pop
jp
cmps
dec
cmps
jg
xchg
in
fisttp
aad
mov
pop
movs
idiv
jge
xlat
shr
mov
or
(bad)
out
inc
sahf
or
fisttp
or
adc
jnp
sub
push
sar
jmp
cli
mov
cld
(bad)
jmp
arpl
retf
ja
(bad)
cmp
imul
mov
daa
in
sar
jg
cmc
repz
jo
or
sub
jle
(bad)
dec
in
or
dec
loope
pop
xchg
sbb
pop
dec
mov
add
mov
ja
pop
in
xchg
imul
mov
outs
aam
fisttp
inc
dec
or
pop
dec
std
std
(bad)
mov
test
xchg
cld
or
cli
ins
ret
fdivrp
scas
pusha
push
test
mov
cmps
xor
mov
sti
aaa
test
dec
scas
cmps
lahf
jg
std
std
addr16
js
sbb
leave
sbb
pop
mov
idiv
shr
ror
mov
aam
aas
dec
std
std
inc
test
jg
jge
fild
pop
mov
out
mov
idiv
cmp
outs
(bad)
ficomp
mov
pusha
dec
out
cmps
iret
or
stc
add
(bad)
mov
mov
pop
push
sti
aas
fwait
(bad)
lock
mov
rcl
out
mov
inc
mov
retf
call
clc
mov
neg
cli
out
mov
aam
shl
jg
jl
cmp
sub
ja
cli
in
aas
cmps
iret
push
or
outs
dec
cmp
sbb
idiv
push
sbb
fild
std
push
inc
xchg
(bad)
push
test
xor
sti
(bad)
daa
fdivr
mov
addr16
outs
dec
mov
mov
icebp
pop
adc
call
inc
(bad)
in
pop
jecxz
clc
pop
call
das
or
cmps
mov
aam
lahf
mov
inc
repz
mov
aam
mov
mov
jmp
sti
fist
mov
mov
jg
jecxz
jmp
cld
push
add
aaa
and
shr
mov
(bad)
loope
(bad)
cmp
aas
mov
inc
ja
test
pop
dec
xor
repz
lahf
shl
add
(bad)
jge
sti
fist
mov
(bad)
pop
aam
jg
xor
ficomp
rcr
inc
call
idiv
cmp
aas
jge
sbb
and
cmps
adc
sbb
repz
(bad)
dec
mov
nop
pusha
pop
push
fstp
lock
cmp
(bad)
out
inc
arpl
pop
jmp
cld
ja
std
scas
inc
(bad)
jle
retf
scas
dec
je
scas
test
(bad)
pop
and
std
stc
cwde
jg
div
sti
fistp
out
inc
scas
test
jle
cmp
jae
xlat
out
dec
out
(bad)
cmp
fisttp
ret
mov
outs
inc
repz
fcmovnbe
sti
pop
shl
mov
adc
loope
inc
sar
xor
out
inc
xor
add
loope
inc
xor
call
fdivr
or
pop
push
aas
call
sar
inc
hlt
clc
aas
test
and
out
call
(bad)
and
cld
sbb
lock
sar
das
test
out
dec
mov
sub
in
cmps
dec
jo
movs
add
inc
lahf
std
sub
xlat
scas
inc
clc
std
inc
add
aas
mov
(bad)
mov
hlt
sti
mov
sar
jge
sbb
mov
mov
call
cmc
cmc
stos
call
pop
push
fistp
movs
idiv
xor
jmp
mov
jg
loopne
mov
repz
shl
jg
mov
push
sar
(bad)
jns
div
mov
inc
(bad)
mov
into
fild
fsub
mov
scas
xor
std
cmps
call
(bad)
mov
(bad)
(bad)
cmp
sbb
hlt
into
mov
stc
addr16
pop
dec
mov
sub
outs
test
fs
mov
neg
adc
ss
into
dec
es
scas
dec
aas
jg
(bad)
dec
jg
shl
dec
and
hlt
mov
std
call
mov
push
xor
aas
fwait
js
ja
ja
outs
xchg
(bad)
lahf
and
pop
inc
out
cmp
dec
clc
cld
gs
fisubr
cmp
xchg
popf
fdivrp
mov
fidivr
jno
ss
fild
pop
shl
aas
inc
std
cld
outs
test
pop
inc
(bad)
call
out
out
and
push
mov
lods
inc
cmps
and
dec
out
outs
mov
sti
stos
push
cld
dec
ret
(bad)
mov
popa
add
jg
mov
sbb
test
test
xor
aas
sahf
pusha
(bad)
aaa
aam
scas
dec
lahf
std
mov
jo
mov
out
dec
cmp
push
test
mov
xor
bound
mov
mov
sar
mov
jecxz
lods
jmp
(bad)
pop
cmps
out
inc
out
fdivrp
pop
call
dec
(bad)
cmc
xchg
pusha
sahf
sar
push
repz
sar
aaa
push
sti
outs
rcr
jg
sar
jmp
cmp
jecxz
mov
call
lahf
jg
lock
sub
(bad)
hlt
pop
sar
push
std
(bad)
aas
push
sti
sub
std
fwait
adc
push
loope
dec
adc
add
ins
call
add
xchg
push
aas
mov
xor
xchg
call
clc
cmps
sar
inc
std
cld
cmc
hlt
sti
mov
hlt
(bad)
mov
ret
or
jg
(bad)
not
cwde
or
sbb
inc
sar
test
pop
inc
mov
pop
cli
std
out
mov
mov
mov
nop
lock
mov
mov
imul
in
adc
cmps
(bad)
jg
jge
shl
push
jo
test
dec
repz
fdivrp
stos
or
pop
inc
aas
call
cli
in
mul
idiv
add
(bad)
jg
loope
dec
(bad)
add
mov
jno
jns
(bad)
aas
xchg
(bad)
add
ja
add
inc
adc
call
not
mov
jnp
repz
or
sti
add
sbb
fist
into
call
sar
or
inc
in
(bad)
ds
movs
idiv
and
shld
std
(bad)
test
icebp
fadd
sbb
stc
or
fist
fstp
iret
call
(bad)
mov
jmp
ja
addr16
(bad)
pop
dec
arpl
sub
aas
lahf
jle
jmp
jmp
xor
mov
shr
mov
push
sti
jno
repz
adc
out
adc
pop
mov
push
rcr
(bad)
xor
xlat
scas
dec
(bad)
dec
mov
shl
dec
aas
jmp
out
fbld
call
xor
outs
cli
call
dec
mov
out
inc
arpl
sub
std
aas
cmp
mov
sub
(bad)
cmps
push
fwait
jg
loopne
fwait
xor
jmp
(bad)
cmc
fbld
jp
dec
clc
mov
lahf
or
std
fbld
cmp
cmps
xor
mov
jmp
out
jg
mov
aas
inc
mov
scas
or
xor
scas
and
jg
jle
adc
jg
jle
push
sti
ja
repz
and
and
adc
xor
aam
jg
fsubr
mov
fiadd
and
mov
and
std
jg
mov
inc
cmp
mov
out
jmp
mov
out
sub
jg
dec
hlt
dec
mov
dec
jge
and
js
daa
fdivrp
scas
call
shl
xor
in
pop
cmps
xor
xchg
adc
sbb
mov
mov
aas
and
call
test
pop
dec
(bad)
aaa
hlt
fidivr
cli
cld
aas
test
loop
std
xchg
hlt
fstp
aas
push
adc
sub
adc
sbb
std
(bad)
sbb
xor
aas
dec
xor
dec
imul
adc
cmps
add
pop
and
(bad)
mov
jmp
in
daa
fdivr
or
sti
inc
cld
ss
jae
aas
movs
out
(bad)
cmp
mov
jg
jge
aas
adc
call
xchg
(bad)
mov
push
(bad)
icebp
mul
(bad)
imul
mov
lahf
dec
fistp
(bad)
stc
cmps
push
sti
jg
loopne
xor
sub
out
sbb
dec
mov
and
jbe
xchg
pusha
mov
(bad)
and
out
mov
jmp
cli
in
mov
scas
dec
jecxz
jno
movs
iret
dec
rcr
std
cmp
xchg
jo
repz
lock
shl
cmp
rcl
loope
and
inc
ret
movs
ja
jle
sti
adc
or
and
(bad)
adc
loop
mov
aam
pop
inc
clc
std
imul
sahf
call
test
cmp
pop
dec
jle
cli
push
fwait
add
(bad)
aas
dec
out
(bad)
stc
add
sub
jmp
lock
cmp
imul
push
jmp
loope
(bad)
push
pop
dec
jp
in
dec
jmp
aas
mov
push
pop
imul
outs
inc
out
(bad)
aaa
add
xchg
sar
call
out
mov
inc
or
call
jns
in
push
aam
ds
(bad)
aaa
push
pop
jmp
mov
aaa
and
std
std
hlt
jns
fistp
jge
imul
push
shl
outs
es
sbb
mov
test
cs
lea
push
(bad)
std
hlt
idiv
clc
movs
les
and
cld
in
out
sbb
xchg
jle
inc
popa
pushf
mov
sub
repz
je
mov
jg
std
(bad)
fwait
jmp
cmps
jg
scas
sbb
push
rol
sbb
(bad)
out
inc
(bad)
jg
(bad)
(bad)
jge
or
call
jg
(bad)
inc
std
dec
xor
sar
call
cli
(bad)
fild
jmp
call
call
(bad)
(bad)
mov
(bad)
(bad)
aas
sar
call
jmp
cli
mov
(bad)
inc
cli
call
std
jg
(bad)
call
xchg
hlt
call
(bad)
aas
dec
jmp
(bad)
mov
sar
inc
pop
mov
mov
pop
call
call
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
jmp
jmp
push
(bad)
fbld
jg
(bad)
jg
(bad)
jg
(bad)
(bad)
mov
std
mov
(bad)
aas
mov
(bad)
aas
cmp
call
cli
call
(bad)
(bad)
cmp
(bad)
call
std
call
hlt
(bad)
jg
(bad)
call
cli
jmp
mov
push
hlt
dec
push
jmp
dec
jge
inc
(bad)
jg
std
dec
mov
(bad)
aas
cmp
out
(bad)
dec
(bad)
fisttp
mov
std
call
hlt
(bad)
dec
(bad)
jg
std
(bad)
jmp
push
cmp
(bad)
call
std
dec
std
call
std
push
cli
jmp
hlt
call
(bad)
lahf
sar
sub
push
(bad)
push
hlt
(bad)
aas
xchg
(bad)
call
sar
call
(bad)
fisttp
inc
jmp
call
(bad)
(bad)
sti
hlt
(bad)
call
(bad)
push
cli
jmp
aad
repz
dec
into
mov
pop
pop
push
cmp
jne
aad
adc
call
call
sar
push
cli
call
sti
jmp
or
pop
dec
(bad)
jmp
call
jmp
(bad)
(bad)
mov
(bad)
jmp
sar
jmp
(bad)
jg
(bad)
jmp
jmp
call
(bad)
jg
pop
pop
(bad)
jg
(bad)
mov
(bad)
aas
cmps
(bad)
call
jmp
std
mov
call
jmp
sub
lahf
dec
(bad)
push
(bad)
jg
std
jmp
cmc
movs
call
xor
(bad)
jg
(bad)
jmp
(bad)
call
cli
(bad)
jg
(bad)
call
call
cli
cmc
jmp
das
stos
jnp
sar
inc
hlt
dec
jge
gs
(bad)
jg
(bad)
jmp
cli
dec
jmp
dec
hlt
(bad)
aas
lahf
(bad)
call
div
cli
mov
test
(bad)
dec
dec
(bad)
dec
aad
call
aaa
and
sar
jg
cli
jg
(bad)
call
std
jg
(bad)
jg
(bad)
push
std
call
call
dec
call
inc
(bad)
jmp
(bad)
jg
outs
and
imul
sbb
(bad)
jg
std
call
movs
(bad)
push
hlt
(bad)
jg
(bad)
call
sar
jmp
cli
aas
push
sbb
std
call
(bad)
xor
ret
pop
xchg
aad
fist
mov
(bad)
aas
mov
jmp
std
push
mov
xor
(bad)
jg
std
dec
(bad)
call
(bad)
call
sar
call
cli
(bad)
fild
jmp
call
(bad)
fbld
(bad)
inc
(bad)
jg
test
in
sar
aas
cmps
(bad)
out
sar
psubsw
cmps
hlt
jmp
jmp
jg
call
jmp
std
dec
hlt
(bad)
mov
sar
call
(bad)
fisttp
jmp
jmp
(bad)
fbld
(bad)
call
(bad)
mov
cmp
pop
sar
jg
std
jg
(bad)
mov
(bad)
jg
(bad)
jg
(bad)
jmp
cli
dec
mov
(bad)
aas
mov
jmp
(bad)
jmp
cli
call
(bad)
(bad)
fucomi
(bad)
inc
std
call
hlt
(bad)
jg
(bad)
call
(bad)
(bad)
cmp
jmp
mov
call
xchg
jecxz
inc
(bad)
(bad)
in
call
dec
std
call
std
push
cli
jmp
hlt
call
(bad)
lahf
sar
sub
push
(bad)
push
hlt
(bad)
aas
xchg
(bad)
call
sar
call
(bad)
fisttp
inc
jmp
call
(bad)
(bad)
cmp
(bad)
dec
push
cli
jmp
sar
jg
cli
jg
(bad)
call
std
jg
(bad)
jg
(bad)
push
std
call
(bad)
inc
hlt
call
call
(bad)
jmp
std
dec
cmps
(bad)
jmp
(bad)
push
(bad)
inc
cli
(bad)
aas
inc
(bad)
call
(bad)
call
std
(bad)
mov
hlt
(bad)
call
es
cli
jmp
(bad)
dec
jg
(bad)
(bad)
cmp
(bad)
mov
(bad)
lahf
sar
sub
push
(bad)
push
hlt
(bad)
aas
xchg
(bad)
call
sar
call
(bad)
fisttp
inc
jmp
call
(bad)
(bad)
sti
hlt
(bad)
call
(bad)
jg
std
call
std
dec
dec
jle
(bad)
mov
jmp
pop
hlt
jmp
(bad)
out
inc
(bad)
jg
(bad)
(bad)
jge
jmp
hlt
call
(bad)
aas
mov
jmp
sar
jmp
call
dec
retf
pop
or
mov
cli
lahf
jle
pop
jns
cmp
movs
mov
(bad)
mov
adc
cmc
out
cmps
inc
(bad)
cli
aaa
push
fadd
arpl
lahf
cld
push
jmp
shr
(bad)
fist
outs
dec
pop
loopne
mov
jecxz
dec
popa
pop
push
(bad)
aas
xchg
xor
jg
cli
xchg
mov
test
in
dec
mov
sbb
sub
and
or
mov
or
idiv
pop
pop
cmp
sub
das
pop
dec
xchg
xchg
xchg
mov
das
jg
lods
mov
out
icebp
retf
inc
ret
adc
std
cmp
in
mov
push
mov
paddd
lock
mov
call
in
or
adc
cmp
mov
cld
div
mov
std
xor
jecxz
jg
(bad)
cmp
adc
pop
mov
(bad)
pop
cld
test
lea
paddd
mov
fs
jbe
(bad)
dec
cld
test
int
rcl
out
jge
mov
(bad)
add
icebp
sar
mov
loope
fisttp
outs
std
add
sti
retf
lock
push
push
cmp
jnp
in
out
loope
cwde
fadd
std
cs
in
cmp
lods
icebp
fstp
test
jle
je
(bad)
or
ins
jl
mov
iret
jecxz
dec
mov
pop
loopne
mov
clc
in
pop
inc
in
shr
inc
cld
push
pop
jo
call
jg
mov
(bad)
mov
mov
dec
jl
scas
mov
xchg
jg
cmp
aas
xchg
cmp
outs
jg
jle
aaa
shr
or
sbb
lds
adc
jge
fcmovnu
xchg
mov
in
dec
icebp
fistp
jbe
fistp
rcr
push
mov
sar
repz
pop
loopne
fild
mov
adc
adc
scas
add
dec
sbb
inc
lock
loope
aas
adc
(bad)
sbb
fnstcw
jmp
fdivrp
daa
lock
lds
xor
(bad)
or
sti
push
loope
mov
clc
in
test
cmps
clc
in
pop
inc
std
out
jp
xchg
add
in
dec
rcl
cli
add
out
loopne
(bad)
push
mov
jne
push
pop
std
mov
pop
loopne
mov
fistp
mov
pop
mov
or
std
(bad)
fistp
std
mov
in
iret
(bad)
mov
cmp
jle
or
std
call
ffree
jg
mov
dec
jmp
ds
div
add
cmp
std
dec
push
xor
pop
lock
mov
ss
jbe
iret
(bad)
sbb
push
pop
repnz
ret
and
dec
test
std
and
xadd
and
cmc
push
mov
leave
mov
sti
xchg
icebp
fisttp
mov
add
mov
jle
xchg
dec
inc
jns
fucomip
jecxz
cmp
mov
cld
div
(bad)
shr
fistp
or
mov
clc
(bad)
icebp
add
sbb
rcl
clc
push
mov
sahf
ret
clc
pop
icebp
(bad)
fistp
cld
imul
loop
fisttp
add
xchg
icebp
fld
les
and
or
mul
mov
sbb
(bad)
push
cld
idiv
mov
das
les
jno
(bad)
je
push
(bad)
mul
pop
outs
(bad)
cmp
outs
mov
lock
orps
in
dec
add
(bad)
push
scas
movd
sub
jle
cld
clc
fisttp
jle
aas
push
push
jl
lods
jle
cmp
icebp
pop
test
lahf
loop
clc
(bad)
pop
and
cmp
(bad)
jecxz
shr
out
clc
cld
mov
outs
jmp
jp
lock
lea
fild
in
adc
ds
out
lock
mov
add
movs
clc
in
ffreep
outs
addr16
loopne
dec
mov
inc
mov
pop
lahf
std
dec
clc
or
sbb
out
mov
or
adc
mov
sub
not
(bad)
ja
(bad)
loop
cmps
push
(bad)
shr
xadd
adc
sub
(bad)
in
ja
jp
mov
jle
je
mov
mov
clc
icebp
cld
pusha
sbb
(bad)
icebp
sbb
sbb
mov
fwait
loop
jg
lahf
std
mov
(bad)
das
sub
lahf
push
cld
dec
cli
xchg
out
cld
mov
(bad)
cmps
clc
in
pop
shr
jle
aas
rcl
mov
pop
push
(bad)
jmp
int
mov
(bad)
adc
div
mov
cmovb
mov
cmp
xor
int
cmp
pop
cld
cmp
loopne
shr
mov
shr
push
push
not
mov
call
sub
cs
shr
mov
sbb
jecxz
xchg
in
pop
jecxz
mov
mov
pop
or
icebp
cld
jecxz
mov
jmp
ds
sub
dec
jmp
(bad)
aas
loop
jg
mov
ffreep
outs
jmp
jle
mov
outs
fild
mov
(bad)
jmp
mov
adc
(bad)
push
cld
idiv
fucomip
jecxz
mov
push
fucomi
jl
daa
loop
test
arpl
pop
jl
mov
fstp
mov
cs
clc
add
sar
scas
jle
mov
cmp
add
sti
mov
fld
jle
hlt
jp
(bad)
mov
rol
loopne
inc
mov
jbe
fneni(8087
add
mov
mov
push
aas
or
push
sahf
inc
(bad)
aas
loopne
mov
mov
(bad)
jmp
outs
push
dec
loopne
ret
outs
mov
(bad)
faddp
fild
fild
mov
(bad)
adc
jecxz
jg
add
push
cld
test
stc
pop
(bad)
(bad)
ds
test
mov
or
ja
pop
loop
mov
fld
not
jmp
xor
jle
cmp
fucomip
jecxz
jg
std
jl
fistp
jl
mov
fistp
cld
div
jecxz
fistp
mov
xlat
push
fcomp
xchg
cmp
add
pop
cld
div
mov
aas
shr
jle
xlat
lock
mov
(bad)
sbb
ss
mov
or
outs
(bad)
cmp
fild
fnclex
mov
or
add
xchg
mov
movsx
add
ret
or
out
add
test
jnp
fistp
jl
ins
cld
not
mov
mov
cld
imul
clc
in
pop
outs
mov
outs
mov
ins
sbb
lahf
rol
call
lahf
icebp
fld
add
call
mov
mov
jl
scas
loop
movs
inc
push
(bad)
imul
psrad
jecxz
fisttp
mov
jg
ret
jle
loop
aas
adc
(bad)
outs
inc
mov
outs
add
xlat
cld
sub
jg
fbstp
div
mov
out
mov
jle
mov
jae
mov
fistp
ret
outs
push
mov
outs
dec
out
sbb
cs
fucomi
jo
fcmovnbe
mov
outs
sbb
fistp
shl
pop
std
retf
mov
mov
mov
clc
mov
neg
ret
outs
(bad)
ds
push
lock
inc
call
sti
fcomi
loop
sbb
data16
div
in
aas
jle
daa
lock
pop
test
(bad)
jns
icebp
addr16
pop
or
mov
rcr
fistp
mov
adc
sub
fld
sub
cld
idiv
jecxz
lahf
ret
add
and
(bad)
cld
idiv
mov
(bad)
fnstsw
or
int3
(bad)
clc
in
pop
add
ss
(bad)
clc
in
iret
popa
inc
outs
jg
jle
push
xchg
scas
dec
inc
add
aas
loop
aas
adc
std
out
in
iret
inc
push
jmp
jle
stos
jmp
ds
daa
icebp
fist
clc
in
out
(bad)
outs
mov
jmp
cmp
cld
loopne
(bad)
out
or
(bad)
mov
outs
jg
jle
mov
(bad)
dec
mov
stos
or
psrad
ja
loope
shl
out
(bad)
fist
out
jmp
or
dec
std
icebp
cmp
clc
in
add
iret
jns
icebp
fistp
sub
cld
neg
loope
fist
mov
imul
aas
push
lahf
std
retf
jle
(bad)
sar
dec
neg
mov
sbb
adc
jecxz
in
add
std
mov
sti
fwait
jmp
rcr
dec
clc
pop
loope
fistp
fwait
cmp
clc
in
test
inc
into
out
loopne
jle
pop
icebp
fst
mov
xchg
ds
mov
test
inc
cld
not
mov
sbb
jnp
fldenv
test
mov
fist
mov
fistp
mov
and
fld
shr
inc
into
repz
shr
sti
aas
call
std
neg
add
push
clc
in
aas
shr
push
cld
pop
clc
ins
paddsw
add
fstp
mov
cmp
sti
sbb
mov
jle
ja
loop
mov
jle
sbb
jmp
(bad)
pop
cld
neg
mov
sbb
mov
ret
mov
iret
cmps
clc
in
das
inc
mov
fs
stc
sub
clc
xor
jg
jp
jge
fistp
inc
cmps
dec
scas
loope
into
mov
movs
(bad)
jg
(bad)
mov
(bad)
aas
mov
dec
jmp
scas
jmp
iret
call
inc
(bad)
mov
(bad)
inc
sar
inc
lea
test
jmp
sar
call
call
inc
test
(bad)
jmp
cli
aas
cli
sub
cld
mov
xchg
xor
or
std
push
(bad)
inc
aas
adc
add
cmps
hlt
jg
or
sbb
cli
aas
out
xchg
(bad)
inc
sar
call
cli
aas
ins
xor
add
rcr
aas
std
call
mov
(bad)
jg
dec
and
loopne
movs
(bad)
(bad)
cmp
les
xchg
mov
std
mov
(bad)
cld
cmp
jmp
call
(bad)
call
inc
dec
mov
mov
dec
cli
(bad)
mov
lock
(bad)
jg
std
(bad)
jmp
shl
push
inc
cmp
(bad)
aas
cmps
inc
mov
hlt
inc
jg
std
dec
hlt
(bad)
aas
xchg
(bad)
call
cli
(bad)
fisttp
inc
(bad)
(bad)
cmp
call
(bad)
(bad)
cmp
(bad)
dec
push
cli
jmp
sar
jg
cli
(bad)
out
dec
(bad)
call
aas
movs
call
(bad)
jg
(bad)
inc
sar
jg
(bad)
(bad)
(bad)
jg
std
dec
hlt
(bad)
aas
(bad)
(bad)
call
(bad)
(bad)
jp
(bad)
fisttp
inc
std
call
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
jmp
(bad)
(bad)
call
(bad)
jg
cli
jmp
movs
(bad)
out
sar
pop
sar
(bad)
pop
std
jmp
cli
(bad)
out
dec
jmp
call
jb
jg
std
dec
mov
(bad)
mov
sar
(bad)
jle
(bad)
aas
dec
(bad)
call
call
(bad)
aas
mov
(bad)
call
(bad)
jg
pop
(bad)
push
imul
(bad)
mov
cli
dec
push
movs
(bad)
jg
(bad)
inc
push
jg
(bad)
mov
hlt
(bad)
aas
xchg
jmp
pop
das
sahf
cmp
call
(bad)
mov
hlt
(bad)
inc
pop
clc
aaa
mov
(bad)
fist
(bad)
ds
push
mov
pop
(bad)
cli
icebp
cld
repz
inc
dec
push
adc
imul
movsx
hlt
xchg
jmp
std
xor
dec
push
sub
jl
out
movs
jmp
jle
jmp
mov
mov
jmp
adc
mov
rcr
sbb
(bad)
xchg
hlt
mov
retf
mov
xlat
pop
xchg
(bad)
adc
cld
stc
jmp
inc
cli
push
loope
lahf
clc
mov
fcom
stc
leave
pop
idiv
in
out
push
jmp
push
mov
inc
inc
mov
rol
sub
jae
out
dec
loopne
call
mov
loope
or
sar
cmp
loopne
and
movd
cld
imul
fistp
xor
fisttp
dec
mov
jl
retf
lock
cld
mul
mov
pop
(bad)
outs
jg
mov
addr16
fistp
mov
popa
cld
not
mov
adc
xlat
jecxz
out
loopne
mov
paddd
loop
aas
adc
xchg
mov
push
out
(bad)
(bad)
cld
test
pop
inc
mov
aas
lea
stos
sub
mov
jl
rol
scas
lock
(bad)
loopne
shl
clc
dec
icebp
rol
idiv
test
(bad)
(bad)
ins
inc
sti
jno
imul
icebp
in
outs
(bad)
(bad)
push
neg
clc
or
clc
xor
iret
jg
rol
push
pop
(bad)
cmp
call
std
xchg
clc
in
ffreep
outs
jg
mov
pop
jmp
cmp
(bad)
(bad)
loopne
loopne
lock
xchg
(bad)
pop
jl
xlat
shr
int
pop
xchg
push
jle
jecxz
aas
or
pop
outs
push
ds
sbb
test
mov
mov
(bad)
outs
outs
lock
out
xchg
(bad)
sub
pop
pop
pop
pop
loopne
fild
pop
popf
loopne
call
int
loop
sub
mov
repz
mov
dec
jl
cmp
mov
sbb
jle
cld
imul
mov
pop
mov
mov
xchg
sbb
xlat
icebp
fstp
fistp
add
jg
(bad)
ins
sahf
jg
neg
outs
cld
mov
fucomi
repnz
pop
cld
arpl
loopne
icebp
aad
sbb
jle
lock
loope
daa
clc
in
scas
shr
cmp
clc
or
or
cs
clc
mov
jbe
xchg
mov
std
lds
cmps
icebp
sbb
icebp
rcr
(bad)
jbe
not
addr16
icebp
fistp
xchg
sahf
loopne
lahf
add
in
ror
jl
in
sbb
mov
fnclex
mov
les
xor
(bad)
addr16
fistp
mov
mov
jmp
loopne
ret
sub
cmps
clc
jmp
sti
addr16
clc
neg
inc
repz
mov
jl
aaa
loop
aas
add
cld
in
in
pop
mov
(bad)
sbb
sti
daa
jecxz
jg
mov
dec
(bad)
outs
mov
fistp
cld
neg
loopne
add
test
punpcklbw
pop
cld
not
popa
gs
loopne
sbb
sub
push
fadd
outs
jg
fdivrp
pop
lock
mov
jle
cld
test
mov
cmp
jg
dec
shr
repnz
xchg
ror
call
mov
clc
in
pop
ret
cmp
std
out
inc
ds
loope
jg
mov
clc
in
dec
ret
mov
dec
clc
in
inc
mov
add
fistp
mul
cmp
sub
jae
sub
jne
ret
sti
pop
icebp
fld
mov
inc
repz
push
cld
mov
pop
scas
lock
sbb
(bad)
(bad)
jb
aas
inc
mov
sub
(bad)
icebp
fstp
(bad)
fistp
cld
xchg
in
fist
jl
aad
cmp
dec
mov
cmp
inc
mov
pop
mov
rcr
(bad)
ins
cld
not
mov
jecxz
mov
clc
in
scas
(bad)
outs
jg
jle
sbb
fistp
jl
push
add
(bad)
sbb
icebp
rcr
lahf
mov
jle
jle
ret
icebp
fld
push
clc
(bad)
outs
rol
das
ret
sub
and
sub
xchg
adc
dec
and
test
xchg
and
lds
clc
in
outs
(bad)
outs
pop
jecxz
fistp
sar
cld
mov
iret
jle
cld
neg
jecxz
pop
jecxz
loop
call
jns
dec
arpl
adc
jmp
push
dec
mov
paddd
jl
out
loopne
aas
add
dec
clc
in
add
shr
jle
jne
in
fild
fstp
or
mov
dec
mov
and
mov
and
clc
pop
lock
inc
aam
(bad)
sti
mov
in
push
pop
mov
addr16
xlat
mov
inc
out
xchg
jl
scas
lock
repnz
cmps
jg
jle
arpl
out
repnz
jmp
outs
leave
push
inc
xor
lock
in
or
jecxz
push
int
cld
hlt
aas
(bad)
(bad)
aas
jecxz
stc
in
aas
and
pop
retf
jmp
fs
pop
mov
jecxz
add
cmp
inc
cld
(bad)
mov
ins
stc
jnp
nop
push
pop
dec
icebp
add
or
loope
jg
mov
add
cmp
pop
lock
mov
cmps
movs
lods
fistp
mov
clc
cmc
icebp
sbb
dec
mov
xchg
sub
pop
popa
call
lea
jecxz
(bad)
(bad)
mov
clc
sti
test
jecxz
cld
pop
lock
cs
(bad)
pop
push
cld
dec
clc
sbb
cli
rcr
jle
cmp
loopne
(bad)
outs
jg
pop
stc
arpl
fistp
iret
(bad)
pusha
cld
(bad)
jmp
push
clc
in
pop
ret
cld
(bad)
fst
(bad)
int3
out
(bad)
jmp
loop
adc
xchg
loopne
mov
cmps
sti
pop
ffreep
pop
pushf
test
fstp
scas
jle
xor
ins
(bad)
psubusb
dec
and
inc
push
ror
scas
pop
std
cmps
clc
pushf
xlat
lods
(bad)
adc
(bad)
imul
lock
xchg
icebp
clc
icebp
loop
mov
lds
pop
call
cmc
mov
lods
sar
sbb
sub
in
sbb
addr16
pop
std
fistp
pop
loope
dec
adc
jg
jl
cmp
divps
mov
jl
sbb
xchg
icebp
fstp
and
clc
mov
adc
cwde
test
pop
loope
dec
js
clc
(bad)
repz
shr
jg
jno
jmp
fnstcw
(bad)
paddb
lahf
loopne
jg
mov
pop
repz
shr
jle
cmp
(bad)
jle
lock
loope
mov
loopne
arpl
mov
(bad)
adc
lock
(bad)
das
loopne
sub
cmps
(bad)
icebp
clc
cli
pop
xlat
mov
scas
pop
mov
lds
call
out
(bad)
or
call
pop
dec
pop
mov
dec
xchg
xlat
lods
pop
mov
scas
pop
sbb
cmps
fsub
fild
fs
jmp
test
icebp
mov
xor
clc
das
popa
lods
(bad)
sbb
stc
div
fistp
(bad)
push
cld
(bad)
or
push
sti
repz
fnstcw
mov
aas
jno
ja
cmp
call
sar
iret
shr
paddd
(bad)
rcr
pop
jg
lock
loop
pop
(bad)
lods
fdivr
xor
imul
and
call
repz
push
jg
jle
xor
xlat
lods
fadd
js
pop
cld
js
lock
loope
jg
xor
cld
idiv
mov
jae
dec
mov
lock
cmp
std
xbegin
adc
jecxz
mov
push
jge
xor
clc
fcomi
jecxz
cmp
sbb
cmc
dec
mov
fadd
fisttp
test
lea
fdiv
clc
add
shr
sbb
bound
ss
outs
jg
(bad)
pop
lea
inc
ds
outs
in
outs
cld
push
clc
jmp
pop
mov
mov
ja
push
mov
setbe
loopne
ret
push
jle
jl
fistp
mov
clc
in
cmps
lock
mov
(bad)
popa
sahf
jg
(bad)
cmps
call
outs
call
ds
cmps
icebp
sbb
jecxz
loopne
ret
sub
or
cmp
jle
test
clc
lods
jge
and
fwait
lods
fchs
mov
jecxz
sbb
mov
js
sub
outs
sub
neg
xchg
pop
mov
and
jle
mov
ds
pop
icebp
shl
in
aas
ret
outs
mov
lock
inc
mov
pop
push
iret
aas
jle
add
cli
inc
jae
add
pushf
(bad)
adc
jmp
arpl
fs
inc
loope
fsub
fbld
es
cs
std
xchg
mov
cmp
(bad)
sti
(bad)
(bad)
sbb
hlt
jmp
push
mov
push
hlt
(bad)
fist
mov
(bad)
call
std
jmp
std
(bad)
fcomi
jmp
jmp
(bad)
ds
jg
(bad)
jg
jmp
(bad)
aas
mov
(bad)
clc
daa
sar
call
pop
dec
inc
xlat
std
(bad)
(bad)
jg
dec
and
xlat
call
(bad)
aas
cmps
inc
std
sub
jmp
and
fwait
dec
inc
xor
in
neg
std
pop
sub
lods
sbb
movs
mov
popa
hlt
jg
std
pop
jmp
inc
inc
sbb
daa
std
mov
push
repnz
mov
add
lock
cli
xor
jl
(bad)
(bad)
out
scas
and
and
(bad)
add
jg
std
dec
cmps
inc
add
jmp
(bad)
jg
std
pop
sub
add
mov
lods
(bad)
jnp
aas
adc
sbb
or
xchg
jb
sti
mul
dec
dec
cli
call
(bad)
push
(bad)
jmp
sar
dec
cli
(bad)
fild
cmp
jmp
xchg
pop
xor
mov
mov
in
dec
inc
pop
repnz
jle
cld
cmc
lahf
movs
jg
scas
lds
shr
sbb
inc
cli
jmp
cmp
(bad)
cli
cmps
pop
pop
leave
inc
retf
sti
fstp
xor
dec
inc
aam
(bad)
stos
hlt
pop
xchg
cli
jmp
(bad)
lahf
xchg
and
test
clc
icebp
(bad)
movs
mov
out
repnz
sbb
jmp
mov
test
clc
imul
add
mov
fdivr
js
fistp
and
shl
mov
pop
mov
ja
sbb
scas
(bad)
icebp
aad
jae
loop
fisttp
outs
std
ss
(bad)
in
rep
test
pop
jge
pop
clc
in
xlat
add
dec
(bad)
pop
cld
push
jecxz
dec
std
(bad)
in
ffreep
outs
dec
sti
xchg
lock
mov
out
sbb
jae
mov
and
loopne
lds
call
jle
rcr
xchg
icebp
fcmovnu
mov
dec
cld
imul
mov
sbb
sub
(bad)
loopne
mov
inc
sbb
std
icebp
sbb
neg
mov
mov
pop
outs
jo
loop
ret
addr16
mov
adc
pusha
ja
pop
cld
cs
sbb
push
clc
loopne
add
jmp
xchg
shl
cli
in
in
aaa
ret
or
and
(bad)
sbb
ffreep
outs
jg
jle
out
fistp
outs
call
cld
imul
mov
or
outs
shr
jle
into
loop
cmp
(bad)
loope
aas
or
in
pop
outs
nop
test
inc
retf
icebp
(bad)
sbb
cld
mul
fld
std
in
clc
in
test
or
sub
(bad)
out
sub
out
loopne
pushf
mov
fdivrp
rcr
cs
stos
cmp
in
lock
outs
or
inc
leave
pop
cld
push
add
cmp
into
bound
outs
and
pop
adc
mov
idiv
mov
daa
(bad)
xchg
rol
cmp
sbb
fsubr
and
and
ds
js
jg
jle
xor
fistp
leave
pop
xchg
fdiv
std
add
ds
pusha
add
rol
and
cld
(bad)
clc
or
jl
jbe
add
mov
cld
adc
std
xchg
mov
jmp
lock
(bad)
in
out
repnz
daa
jmp
(bad)
cwde
inc
ds
mov
aas
sbb
(bad)
xchg
(bad)
shl
ret
and
ffreep
pop
call
out
sub
stc
popf
sub
shl
daa
jg
das
cmps
push
nop
repz
loopne
pop
idiv
inc
mov
popf
(bad)
bound
movs
push
(bad)
cli
arpl
fucomip
xchg
aas
bnd
in
xchg
aas
push
mov
xor
mov
jb
outs
lock
lock
mov
jecxz
aas
or
dec
push
loopne
pop
xchg
(bad)
in
push
loopne
pop
(bad)
outs
call
into
fistp
clc
sub
movd
cld
mul
cmc
dec
lods
cld
pop
loopne
pop
mov
cmp
std
outs
lock
iret
(bad)
and
push
jne
lock
loopne
fs
paddd
cld
neg
jecxz
jg
jb
mov
xor
xor
mov
fistp
pop
stc
out
sar
cld
mov
jg
ds
cld
and
inc
icebp
pop
(bad)
fistp
pop
xor
add
outs
mov
int3
sbb
mov
aaa
fdivrp
cmp
addr16
loop
push
jp
cld
mul
mov
shl
rol
fwait
push
cld
out
loopne
push
and
loopne
ret
push
jle
xor
xor
mov
jecxz
das
lock
loopne
ret
pop
ja
sar
loop
(bad)
and
(bad)
test
mov
inc
ds
icebp
(bad)
sbb
(bad)
fs
mul
mov
adc
das
inc
cmp
xor
add
ret
icebp
adc
sbb
clc
mov
pop
out
cmp
sub
fistp
mov
mov
movs
jecxz
(bad)
fist
in
es
adc
jb
daa
xor
and
pop
push
xchg
and
inc
sahf
sbb
dec
and
cmp
clc
jmp
arpl
adc
or
pop
(bad)
outs
pushf
icebp
sti
jnp
dec
icebp
fcmovnu
mov
pusha
cli
push
dec
stc
sbb
lock
stc
lahf
or
inc
or
jmp
cmp
shr
movs
jecxz
repnz
mov
add
inc
inc
leave
(bad)
icebp
aas
cli
pop
jle
dec
(bad)
mov
in
loop
call
add
stc
out
inc
lahf
cld
adc
aas
mov
jmp
(bad)
not
icebp
fcmovnu
sar
dec
dec
(bad)
idiv
in
xchg
inc
(bad)
lahf
(bad)
sbb
xchg
aas
popf
push
movq
out
repnz
stc
jecxz
xchg
std
dec
(bad)
push
mov
das
cmp
pop
and
stos
icebp
rcl
jl
jo
jg
add
ds
cs
(bad)
push
into
lock
push
cmc
pop
ins
push
sub
mov
pop
xchg
xchg
jg
fiadd
cmp
add
inc
cld
mov
or
sbb
in
lock
cmp
aas
lds
out
sar
int3
add
and
add
lods
sti
mul
add
or
pop
cld
aad
and
push
add
(bad)
adc
or
and
ret
lock
adc
lods
sub
and
rol
in
div
add
(bad)
adc
idiv
mov
xor
inc
jl
xor
fs
pop
clc
loopne
ret
add
mov
fistp
sbb
or
clc
icebp
(bad)
stos
rol
push
(bad)
pop
sub
call
xbegin
cmp
(bad)
sub
aas
lea
mov
ret
pop
mov
mov
jecxz
xor
aas
clc
mov
sbb
xor
jnp
daa
loop
mov
adc
popa
int3
cdq
xchg
cmpps
call
retf
or
clc
clc
out
rcr
jg
sub
dec
inc
das
icebp
icebp
outs
jge
xchg
cmp
jnp
sub
pusha
pop
aas
jle
sub
push
out
push
cld
div
mov
aaa
inc
mov
jle
ds
mov
repz
and
pop
mov
pop
cmp
adc
jae
add
mov
pop
inc
(bad)
in
idiv
sti
test
inc
hlt
in
outs
(bad)
sbb
pop
cmp
hlt
call
(bad)
fild
sbb
add
xchg
cld
sbb
(bad)
push
and
dec
sti
aaa
sar
and
dec
push
sbb
cmp
stos
add
cs
mov
sar
mov
call
cli
aas
repnz
push
inc
xor
pop
stc
push
clc
mov
js
sti
sti
mov
sub
jg
fdivr
sub
aam
xor
(bad)
sbb
add
in
mov
std
sti
icebp
loope
pushf
dec
cld
cmc
div
dec
adc
repnz
movs
inc
jle
in
retf
mov
cmp
dec
jge
sti
jecxz
xchg
outs
jg
inc
std
cs
repz
pop
xchg
(bad)
in
inc
jle
add
xchg
fcmovnb
addr16
pop
mov
pop
sti
hlt
mov
pop
fwait
(bad)
pop
clc
(bad)
shl
(bad)
push
iret
out
and
stc
loope
es
pop
mov
(bad)
aaa
cld
(bad)
sub
das
lds
push
dec
mov
js
in
cmp
and
fdivr
fild
mov
ror
arpl
(bad)
rcl
mov
js
outs
shr
aas
clc
retf
lock
fdivrp
jae
fistp
jbe
out
jl
jbe
pop
outs
ins
out
stos
pusha
cmp
push
xor
stc
jg
mov
lock
stc
fisttp
ror
(bad)
pop
outs
sbb
(bad)
jmp
mov
xor
pop
or
cdq
sub
(bad)
sti
mov
gs
rol
(bad)
jecxz
sti
pop
dec
enter
in
std
mov
call
cld
clc
imul
add
(bad)
mov
gs
outs
ficom
(bad)
fstp
nop
fwait
mul
jecxz
pop
dec
dec
sar
cli
dec
adc
add
cli
iret
lds
test
or
pusha
(bad)
test
pop
clc
in
xlat
ret
shr
ja
mov
lock
or
sbb
lock
add
ins
clc
movnti
mov
mov
sub
mov
xor
xchg
sti
pop
(bad)
cmp
jg
iret
call
neg
mov
clc
in
lahf
les
add
cli
sti
sar
out
rcr
movups
and
adc
sbb
xchg
sar
sar
icebp
stc
pop
sbb
outs
pop
jg
jle
push
jle
les
sbb
push
add
inc
cli
stos
icebp
fucomi
(bad)
(bad)
sub
test
sbb
cld
mov
stc
aas
or
inc
jnp
repnz
jmp
mov
out
jb
xchg
jnp
cld
repz
dec
jmp
aas
clc
in
out
loop
inc
out
mov
leave
fcomip
fstp
ja
sbb
aaa
std
idiv
stc
jmp
xchg
jmp
lds
jle
loop
aas
xchg
jmp
std
aas
stc
push
jle
mov
gs
leave
pop
inc
retf
adc
gs
inc
shr
pushf
or
adc
daa
add
push
mov
push
pop
mov
(bad)
loop
adc
jae
cwde
ret
jecxz
or
push
sbb
or
jle
xor
imul
clc
lods
icebp
jecxz
dec
sbb
add
mov
rcl
imul
lods
in
aas
rcl
(bad)
xlat
lock
jg
aas
inc
adc
repz
ret
jmp
outs
jg
sbb
cmp
adc
movs
out
ja
(bad)
nop
inc
lahf
call
push
shr
inc
push
rcr
lock
mov
lahf
cld
imul
(bad)
icebp
daa
(bad)
fsubr
mov
leave
aas
cmc
mov
mov
mov
jge
lds
ret
(bad)
in
mov
fisttp
pop
dec
retf
aaa
jg
add
jb
leave
pop
cld
mov
stc
xor
jg
out
repnz
repnz
inc
mov
fwait
adc
adc
iret
cdq
into
xchg
cmp
sbb
dec
movd
js
(bad)
ja
ret
loop
fistp
jbe
fnstsw
(bad)
outs
xchg
add
ret
sbb
aas
mov
icebp
aad
outs
mov
fistp
clc
int
jecxz
loopne
lock
rcl
mov
push
sbb
arpl
inc
cdq
jbe
dec
xchg
jl
das
lock
pop
lock
int
sub
shr
push
xchg
sbb
(bad)
mov
or
mov
jl
push
mov
pop
cld
out
jmp
fisubr
dec
(bad)
lods
jle
out
test
jmp
arpl
cwde
std
jmp
int3
inc
cld
clc
iret
push
in
dec
sbb
sub
ss
mov
jecxz
dec
jmp
jg
jle
cmp
cli
ja
xlat
mov
(bad)
stos
je
pop
jg
cli
pop
mov
jnp
pop
stc
cmps
cmps
jg
(bad)
cli
jecxz
in
sub
je
mov
enter
jmp
cmp
retf
es
cmps
aas
add
pop
loop
mov
(bad)
popf
pushf
pop
cmp
(bad)
std
jg
jge
jle
aas
or
jmp
out
repnz
jg
lahf
(bad)
xlat
lahf
cld
xchg
mov
jg
iret
cld
cs
or
pop
mov
lock
mov
outs
and
call
jmp
mov
rcr
dec
and
jg
pop
fimul
jo
sbb
bound
dec
or
in
mov
mov
or
ds
shl
call
daa
lods
cmp
and
(bad)
fprem
icebp
out
cmps
call
jle
sbb
inc
hlt
pop
adc
call
clc
icebp
ud0
pop
push
mov
jg
out
repnz
stc
pop
pop
adc
xchg
pushf
jge
in
ja
cmp
jb
fwait
jle
daa
jmp
fistp
inc
jb
jnp
pushf
std
outs
and
mov
imul
(bad)
pop
aas
jle
shr
icebp
cmp
in
dec
cld
lods
aam
inc
push
ds
inc
inc
push
pop
xchg
pop
js
push
adc
cmovns
jle
dec
(bad)
ds
and
cli
mov
test
dec
mov
mov
pop
and
je
or
pop
daa
je
lahf
cld
leave
mov
test
sahf
mov
popf
jg
outs
inc
or
ja
adc
pop
inc
loope
es
or
adc
mov
and
popa
(bad)
push
clc
sbb
pop
inc
loope
daa
jg
outs
test
dec
dec
outs
std
add
add
xor
fist
fisttp
test
lea
or
aas
into
adc
popa
call
mov
sub
es
push
or
fs
(bad)
in
outs
es
jnp
lock
lahf
arpl
cmc
xlat
adc
std
das
sbb
nop
and
dec
jl
push
add
add
jecxz
loopne
cmp
mov
clc
icebp
dec
movs
iret
and
loop
fist
mov
retf
stos
jg
mov
(bad)
ud0
aas
xor
add
xchg
es
jg
mov
pop
imul
pop
lahf
cld
jmp
xchg
push
fs
(bad)
mov
stc
leave
fist
outs
daa
ret
repnz
dec
adc
jmp
lock
and
std
xchg
(bad)
imul
dec
stc
dec
cmp
leave
cmp
pop
in
cld
sbb
sub
inc
or
pop
jle
xchg
mov
and
std
xchg
mov
aas
mov
jg
out
bnd
cli
stc
test
out
jg
fsub
fbld
fdivr
cmc
(bad)
aaa
mov
xor
repnz
dec
(bad)
jno
hlt
std
ret
xchg
dec
clc
sti
jg
pushf
lods
fild
clc
aas
clc
in
es
jmp
xchg
fild
jmp
add
or
rcr
xchg
cmp
add
mov
call
aas
stc
sti
jg
dec
(bad)
sahf
fcomip
xchg
mov
std
popf
leave
jne
int
stc
jmp
xchg
(bad)
es
cli
cmp
inc
xor
push
jg
cmp
adc
fild
cmc
aaa
cli
in
(bad)
popf
leave
and
in
ds
jnp
pop
mov
(bad)
or
stc
fwait
jle
dec
(bad)
cli
(bad)
xchg
mov
clc
pop
(bad)
fsubr
repnz
pusha
test
xchg
pusha
cmps
mov
icebp
push
adc
dec
jmp
aaa
(bad)
stc
(bad)
ja
jle
sub
movs
les
into
outs
cld
arpl
(bad)
cs
hlt
in
(bad)
xlat
xchg
add
scas
inc
pop
std
cs
clc
aaa
rol
mov
gs
pop
ins
mov
mov
mov
sbb
(bad)
mov
jge
dec
dec
ds
pop
dec
stc
fnstsw
pop
addr16
arpl
(bad)
jle
dec
jle
sub
jbe
scas
call
pusha
mov
div
idiv
dec
jl
push
scas
cmps
pushf
shl
push
outs
mov
mov
movs
sti
out
std
cs
inc
mov
add
aas
adc
aad
jg
outs
pop
daa
dec
fdivr
dec
inc
in
pop
dec
jg
outs
std
fsubr
jg
outs
hlt
arpl
jmp
stc
or
std
cmc
(bad)
fdivp
(bad)
mov
cli
dec
ds
cmp
(bad)
cmp
imul
es
(bad)
jno
clc
in
outs
ret
inc
stos
and
mov
inc
lock
cdq
mov
jge
sbb
icebp
mov
cld
call
mov
cmc
jle
fistp
xchg
mov
jge
fwait
(bad)
jp
inc
icebp
pop
(bad)
cli
mov
stc
push
jge
pop
mov
(bad)
mov
cli
iret
jmp
(bad)
mov
(bad)
mov
jl
dec
(bad)
mov
jle
ss
call
test
outs
repz
inc
mov
gs
pop
xor
lods
inc
aaa
mov
inc
aas
imul
std
out
shr
cmps
(bad)
out
out
scas
(bad)
jnp
out
(bad)
idiv
aam
pop
(bad)
repz
repnz
loopne
fiadd
imul
add
jp
mov
dec
imul
xor
bound
popa
(bad)
push
stc
mov
ins
outs
repnz
(bad)
jle
mov
xor
mov
sbb
adc
jl
sbb
cmp
(bad)
push
js
mov
xchg
fnstsw
(bad)
cli
jne
jg
hlt
push
push
jmp
and
mov
mov
cmp
in
pop
ss
(bad)
repnz
retf
or
hlt
cmp
shr
sbb
jle
fwait
mov
cmp
jg
push
push
les
out
ins
jle
pop
jecxz
dec
jle
pop
inc
mov
outs
(bad)
jmp
and
fbstp
xlat
(bad)
xor
movs
inc
ffreep
pop
(bad)
jmp
mov
dec
jg
mov
lods
jg
pop
jecxz
clc
push
hlt
push
(bad)
xlat
clc
xor
push
rcr
xlat
clc
imul
cli
jne
idiv
(bad)
(bad)
jge
out
fbld
xchg
mov
(bad)
outs
mov
shl
mov
jle
pop
jecxz
clc
lahf
leave
jmp
sub
cmps
(bad)
dec
inc
mov
hlt
std
scas
mov
aas
inc
mov
pop
xor
push
mov
or
das
mov
pop
dec
lahf
pop
xchg
adc
(bad)
out
pop
aam
fcomi
neg
hlt
into
mov
xor
push
sti
jg
ds
pop
jg
pop
jecxz
cmp
repz
adc
inc
std
cld
shr
nop
cli
dec
call
outs
and
push
std
(bad)
outs
shr
jmp
std
mov
(bad)
xlat
clc
xor
int3
es
cmp
(bad)
jmp
ins
(bad)
loopne
xor
fist
jmp
mov
cmp
out
dec
mov
je
xor
mov
jg
pushf
pop
ror
pop
hlt
ficom
cli
in
pop
add
mov
jle
cmp
xchg
jg
std
push
xor
push
aas
mov
aam
aaa
cli
popf
sub
dec
(bad)
dec
cmp
jmp
aam
iret
push
jle
xchg
jg
ds
cmp
lahf
mov
hlt
repz
ds
hlt
stc
(bad)
rcr
jg
std
(bad)
ins
sbb
pop
dec
lock
xor
shl
mov
xor
jmp
jg
in
(bad)
jns
jmp
mov
stc
aas
inc
clc
cld
xor
call
iret
jmp
mov
(bad)
inc
push
cld
dec
or
outs
inc
xor
rcr
jg
mov
hlt
(bad)
mov
hlt
out
xchg
(bad)
dec
sti
mov
mov
cld
sbb
mov
std
(bad)
and
in
iret
cmps
(bad)
jg
mov
addr16
aas
dec
out
dec
outs
dec
jg
mov
stc
sbb
arpl
into
fisttp
mov
add
outs
cmps
ss
cmp
iret
inc
lds
hlt
idiv
dec
(bad)
jg
mov
xor
mov
mov
std
mov
mov
aas
call
inc
jo
or
mov
pop
jecxz
movs
jbe
or
outs
inc
cmp
std
cld
imul
movs
idiv
jge
adc
(bad)
jmp
xor
ror
jg
jge
inc
shl
xor
inc
dec
jg
aas
mov
mov
jnp
mov
dec
jg
arpl
jp
mul
test
mov
std
std
xchg
shl
mov
std
std
out
add
jmp
xchg
mov
mov
js
cmp
fild
push
idiv
jns
out
aas
cmps
fbstp
stc
jnp
fistp
dec
(bad)
jmp
imul
adc
out
inc
jg
imul
mov
neg
ins
call
cli
std
mul
sbb
add
fwait
shr
inc
loope
inc
out
std
push
cli
out
pop
mov
call
ja
jno
xchg
jle
mov
std
mov
(bad)
aas
inc
mov
mov
sti
jg
jbe
and
inc
std
cld
push
test
cmp
cld
mov
hlt
sti
push
fistp
inc
mov
and
mov
push
fisttp
cli
sti
aaa
sti
ins
sub
inc
mov
fisttp
ins
sar
jg
jp
xchg
adc
std
(bad)
lahf
hlt
into
fisttp
(bad)
cmp
cmc
fwait
sub
pop
test
scas
dec
aas
inc
xchg
out
pop
push
sti
fist
(bad)
(bad)
cmp
pop
sar
jmp
xlat
and
(bad)
movs
aam
ja
out
(bad)
xor
stc
mov
mov
jmp
(bad)
and
out
mul
out
inc
jg
inc
out
jmp
hlt
fldenv
cmc
push
adc
sahf
rcr
mov
hlt
fucomp
dec
cmp
shl
pop
dec
ins
imul
mov
sahf
jle
lods
or
mov
cli
in
pop
and
push
popa
pop
test
jg
jecxz
or
fild
(bad)
push
hlt
stc
mov
ss
sar
jg
jge
imul
aas
and
ja
out
dec
(bad)
stc
cmp
hlt
std
ins
test
cld
fwait
aam
dec
lahf
std
jne
(bad)
pop
inc
aas
jmp
out
cmps
out
(bad)
ins
cli
stc
fist
in
adc
push
std
(bad)
xlat
push
fcmovnu
mov
jg
(bad)
call
sti
das
cmps
jle
or
and
cs
or
fistp
cmc
imul
(bad)
call
jmp
mov
or
scas
imul
shl
fild
aas
mov
std
mul
stc
pop
xor
out
out
dec
jge
and
out
mov
fild
iret
test
push
hlt
(bad)
cli
fist
sbb
cmp
popf
imul
sysret
sbb
repz
dec
mov
hlt
(bad)
mov
call
cli
out
sub
(bad)
scas
call
(bad)
gs
repz
adc
out
dec
js
mov
mov
or
sti
inc
shl
jg
cmc
jnp
lahf
std
(bad)
fdivrp
ja
repz
sar
jg
ret
mov
(bad)
push
shl
inc
mov
adc
adc
das
or
sar
jg
push
not
ja
add
inc
std
inc
push
sti
fistp
call
inc
out
call
hlt
std
cmp
fist
ds
std
push
and
dec
cli
stc
sqrtps
(bad)
call
mov
jle
in
or
lahf
inc
ins
jle
jge
mov
adc
addr16
jle
pop
out
loopne
jmp
fdivr
jle
push
clc
test
mov
and
mov
jmp
inc
(bad)
fbld
call
or
cli
dec
push
cli
call
cli
dec
call
inc
cli
call
call
jmp
(bad)
inc
hlt
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
call
std
call
stc
xor
imul
xor
(bad)
inc
aas
mov
jo
mov
icebp
jnp
(bad)
mov
js
call
jmp
std
dec
hlt
(bad)
mov
sar
call
aas
push
hlt
(bad)
xor
(bad)
aas
dec
(bad)
call
jmp
(bad)
mov
hlt
(bad)
call
pop
xor
hlt
(bad)
fisttp
(bad)
out
sar
out
sar
aas
mov
adc
jg
adc
jg
dec
xchg
xor
xor
(bad)
cmps
(bad)
dec
jg
ins
(bad)
(bad)
cli
call
(bad)
call
(bad)
jg
std
call
hlt
(bad)
jg
(bad)
call
sar
call
(bad)
inc
(bad)
aas
call
dec
call
jg
std
jg
(bad)
mov
(bad)
(bad)
cmp
(bad)
jg
(bad)
(bad)
cmp
scas
call
aas
mov
inc
sar
jmp
lahf
inc
(bad)
dec
(bad)
jg
std
(bad)
out
mov
(bad)
jg
(bad)
jmp
sar
call
(bad)
jg
(bad)
(bad)
out
call
(bad)
jmp
imul
dec
jg
(bad)
(bad)
cmp
(bad)
inc
or
mov
(bad)
jmp
cli
call
inc
(bad)
call
call
jmp
hlt
(bad)
mov
sar
(bad)
jns
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
cli
jmp
call
push
(bad)
jg
(bad)
mov
call
das
jmp
addr16
push
push
hlt
(bad)
aas
xchg
(bad)
inc
sar
dec
pop
dec
(bad)
jmp
(bad)
jg
std
(bad)
out
mov
(bad)
jg
(bad)
(bad)
out
sar
jmp
(bad)
jg
(bad)
call
(bad)
jmp
push
fcomp
mov
inc
cli
call
cli
push
dec
(bad)
inc
cli
dec
call
jmp
movs
(bad)
jmp
hlt
(bad)
aas
xchg
(bad)
jmp
(bad)
jmp
cli
call
(bad)
(bad)
fucomi
(bad)
inc
std
call
mov
(bad)
jg
(bad)
call
sar
jmp
jmp
mov
push
fcomp
adc
(bad)
call
(bad)
mov
(bad)
aas
cmps
(bad)
call
jmp
std
call
cmp
pop
sar
call
call
jmp
jmp
(bad)
(bad)
cmp
(bad)
jmp
sar
jmp
(bad)
jmp
(bad)
(bad)
jg
(bad)
jg
fild
fcmovnbe
(bad)
aas
mov
out
sar
pop
sar
(bad)
pop
std
aas
(bad)
mov
pop
sti
retf
sub
iret
jg
les
mov
scas
sub
repnz
icebp
add
daa
push
sub
cli
ja
mov
jmp
mov
outs
jmp
jle
add
cdq
xchg
outs
dec
aas
stc
sbb
out
scas
in
ror
je
pop
jg
movs
add
or
mov
push
rol
mov
cld
xchg
xchg
add
inc
rcr
xchg
cmp
inc
xchg
neg
std
jns
hlt
loopne
clc
or
clc
lods
ret
jecxz
fild
mov
xchg
pusha
or
xchg
add
mov
fbld
sub
xchg
in
ds
xor
clc
fild
daa
std
dec
shr
jg
outs
inc
jle
adc
and
std
xlat
icebp
sbb
mov
lods
push
(bad)
xor
mov
mov
cld
test
mov
add
jl
cmc
js
cmps
retf
jb
lahf
or
dec
in
ret
outs
shr
aas
shr
ds
loope
mov
mov
ret
das
jle
mov
fld
cld
test
outs
add
mov
mov
jecxz
push
cmp
out
push
pop
cmp
in
dec
sar
adc
movd
jl
or
(bad)
clc
or
les
or
push
cli
or
(bad)
jg
psllq
loopne
jg
pop
cld
jnp
in
out
inc
mov
push
test
xor
sar
fistp
imul
fistp
rcr
mov
xchg
loope
call
(bad)
loop
aas
or
pop
outs
jg
ds
sbb
mov
(bad)
lods
and
xchg
ds
test
clc
loopne
ret
sub
in
out
shr
mov
pop
mov
fcmovnu
(bad)
fistp
cld
push
dec
jo
cmp
and
ror
mov
loopne
jg
(bad)
fcomip
loopne
cmps
pop
mov
loop
inc
pushf
pop
(bad)
ds
mov
(bad)
push
xor
jo
iret
loope
dec
sbb
jecxz
xor
pop
mov
ss
(bad)
mov
(bad)
sub
loope
jg
mov
push
(bad)
(bad)
cmp
paddd
jl
mov
shr
lds
call
inc
sti
loopne
jg
mov
loopne
push
cld
idiv
loop
inc
mov
paddd
clc
cld
loopne
icebp
rol
das
lds
sub
lock
dec
mov
retf
icebp
fstp
idiv
sbb
lea
mov
push
jl
lahf
loope
jg
mov
das
loop
inc
lahf
std
jecxz
in
pop
outs
jg
call
loop
cmp
mov
clc
loopne
(bad)
outs
jg
(bad)
mov
or
(bad)
outs
mov
std
add
test
pop
clc
in
xlat
ret
(bad)
outs
xor
pop
scas
add
mov
js
movsx
cmp
shr
pop
sbb
mov
add
sti
sbb
into
clc
icebp
cmp
cld
ss
cld
jg
out
adc
jmp
fld
cld
idiv
push
add
inc
cld
idiv
jecxz
dec
std
push
clc
in
ffreep
outs
jg
mov
mov
mov
mov
(bad)
cmp
shr
lock
loopne
(bad)
and
pop
shl
iret
rcl
lock
loop
pop
ret
pop
jg
ds
int
(bad)
adc
loope
ja
in
ja
outs
dec
cld
imul
sti
jno
not
(bad)
fwait
sbb
mov
dec
push
into
lock
retf
cld
(bad)
(bad)
pop
jl
pop
mov
adc
cmp
(bad)
rol
clc
sbb
fistp
cld
not
loope
pop
movsx
scas
mov
lock
(bad)
push
hlt
fucomi
repnz
sbb
xbegin
jmp
inc
push
cmps
jmp
jo
push
(bad)
outs
cld
imul
mov
adc
xchg
jecxz
mov
clc
in
pop
(bad)
outs
jg
jle
mov
mov
jge
jmp
les
loope
mov
(bad)
sbb
lock
mov
shr
fdivrp
pushf
jle
ins
push
mov
hlt
fld
and
mov
or
test
in
(bad)
in
ja
outs
jg
jle
sub
sbb
das
(bad)
push
pop
mov
lock
aas
loope
outs
jl
pop
ror
pop
loop
pop
sbb
jne
imul
mov
jle
cmp
pusha
lods
clc
loopne
shr
jle
fwait
lock
ja
push
jecxz
aas
pop
pop
cld
test
in
ja
outs
jg
jle
fcomip
(bad)
pop
mov
in
movnti
dec
mov
jge
fisttp
mov
inc
mov
clc
loopne
les
pop
loope
aas
adc
jle
cld
jbe
fisttp
in
add
push
icebp
(bad)
pop
jl
lock
rcr
jg
cld
mov
jecxz
outs
call
pop
mov
(bad)
cli
xchg
hlt
fistp
iret
jle
std
idiv
cmp
sar
mov
(bad)
cmp
xlat
icebp
stc
jg
jecxz
pop
mov
paddd
lock
or
jno
out
repnz
cli
mov
sbb
pop
jl
(bad)
fbld
fld
jmp
cmp
(bad)
call
sar
jg
pop
inc
repnz
sar
out
sar
ja
dec
call
push
cli
push
jmp
push
(bad)
mov
call
hlt
call
dec
std
dec
hlt
jg
into
pop
dec
inc
(bad)
jmp
std
call
(bad)
jge
(bad)
jg
(bad)
call
push
xor
add
add
and
dec
pusha
hlt
pop
sar
mov
test
jns
popf
xchg
repnz
sar
xor
mov
mov
jg
std
pop
and
(bad)
sar
inc
ins
xor
mov
jmp
call
(bad)
jmp
dec
sar
jg
cli
inc
hlt
call
aas
xchg
mov
jmp
dec
mov
jg
std
call
jg
std
dec
(bad)
(bad)
jns
(bad)
mov
sar
call
cli
(bad)
aas
inc
(bad)
call
call
(bad)
aas
mov
(bad)
call
mov
mov
xchg
ret
arpl
push
cli
call
hlt
(bad)
out
sar
jg
cli
call
xchg
inc
cli
call
call
jmp
(bad)
call
(bad)
jg
(bad)
dec
sar
call
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
(bad)
xor
outs
(bad)
sbb
mov
mov
idiv
adc
mov
cld
(bad)
mov
ret
push
cli
inc
loopne
jg
std
daa
icebp
xlat
mov
jmp
dec
call
cmc
(bad)
fistp
inc
cli
scas
loope
(bad)
mov
sbb
(bad)
gs
(bad)
out
repnz
jle
push
sar
mov
cli
inc
shr
out
call
test
lds
fmul
(bad)
xchg
cmp
pushf
sbb
shl
lds
fdivr
clc
add
loopne
sub
mov
jle
fcmovu
lds
add
fisttp
lock
out
mov
fsubp
mov
sbb
std
xor
not
inc
pop
fistp
clc
xor
push
(bad)
push
js
jg
jle
out
lock
sbb
adc
imul
loopne
jg
mov
pop
shr
addr16
jg
vpandn
out
ror
(bad)
addr16
pop
into
scas
loopne
aas
pop
pop
cmp
jecxz
pop
jg
inc
jmp
shl
pop
jg
jp
jecxz
jnp
sbb
clc
inc
push
ja
clc
or
std
out
shl
in
add
fwait
or
pop
mov
clc
(bad)
sar
movd
lock
jnp
cld
xabort
push
loop
pop
sbb
sbb
adc
jae
imul
mov
pop
mov
pop
(bad)
outs
mov
paddd
not
mov
pop
mov
sub
xchg
shr
scas
xchg
push
sbb
arpl
jg
jmp
loop
mov
loopne
(bad)
mov
pop
xchg
add
neg
mov
jle
jecxz
loop
mov
pop
cld
push
push
cmp
push
jl
ins
cld
push
push
jno
test
jle
jl
(bad)
(bad)
gs
imul
nop
loop
aas
or
daa
icebp
fld
(bad)
sub
imul
popf
fucomip
loopne
xchg
(bad)
cmc
fistp
sti
pop
inc
sbb
or
fild
div
mov
lahf
shr
cli
clc
sti
lock
jg
mov
sub
aad
mov
ds
scas
mov
(bad)
sbb
imul
in
lahf
test
jle
jl
inc
shr
std
rcr
mov
mov
mov
imul
pop
sbb
inc
mov
ffreep
ja
sar
add
mov
mov
cmp
push
in
ja
outs
jg
add
out
hlt
lock
pop
mov
lock
jmp
(bad)
adc
sbb
outs
ror
(bad)
daa
call
iret
retf
cmp
jecxz
jg
ja
and
retf
outs
dec
aas
icebp
mov
and
adc
mov
xchg
push
pop
nop
push
clc
stos
icebp
out
idiv
jle
pop
jmp
iret
arpl
hlt
xchg
aas
std
ja
std
in
(bad)
pop
idiv
stc
jecxz
cwde
stc
in
and
out
test
(bad)
pop
shr
cld
jge
xchg
clc
icebp
fwait
sbb
loopne
jg
lahf
jg
pop
xchg
pop
aas
mov
cmp
sbb
add
mov
sti
clc
loopne
rol
mov
sahf
loop
aas
loopne
mov
mov
notrack
setle
cld
call
xchg
lahf
ds
gs
icebp
push
xor
pop
xchg
add
pop
cld
js
lock
loope
aas
sbb
loopne
ds
inc
icebp
add
lods
mov
loopne
ror
in
jg
jle
cmp
repz
scas
inc
stos
aas
adc
inc
jecxz
push
adc
inc
cld
test
icebp
fistp
mov
pop
mov
icebp
sbb
out
repnz
pop
mov
setle
cmp
pop
jle
sbb
shr
(bad)
ja
cmc
xbegin
icebp
sar
movd
cld
(bad)
popa
lock
test
(bad)
sub
imul
mov
or
push
test
inc
jecxz
jg
mov
mov
adc
jno
lock
daa
pop
jg
mov
add
mov
ja
cmp
mov
loop
stc
rcr
pop
addr16
jg
notrack
stc
das
mov
loope
mov
cmp
imul
inc
leave
mov
icebp
fist
push
cld
test
mov
xor
pop
add
mov
pop
mov
clc
loopne
shr
das
push
jle
jl
mov
mov
sbb
std
out
nop
or
xor
femms
(bad)
imul
lock
loop
mov
and
inc
ds
jae
sar
movd
loopne
(bad)
(bad)
fucomip
loopne
pusha
pop
cmp
sbb
xor
(bad)
cmp
mul
loop
call
std
leave
clc
in
outs
ret
and
jmp
add
ds
or
clc
pop
test
cld
sbb
cld
jle
jno
lock
cld
clc
mov
(bad)
ja
neg
cmp
jmp
pop
std
adc
call
or
call
push
xor
sahf
sar
iret
call
sar
jg
leave
test
(bad)
int
pop
int3
or
test
ins
int
inc
inc
inc
ja
inc
inc
hlt
call
std
(bad)
cli
aas
adc
cmp
ins
cli
aas
inc
arpl
sar
jmp
lock
and
(bad)
jg
fdivr
scas
leave
mov
mov
jg
mov
or
jmp
sti
pop
pop
xchg
dec
sti
dec
dec
movs
std
sar
hlt
pop
pop
inc
cmc
das
cld
cs
mov
fisub
jg
mov
aas
stc
fcmovnbe
dec
jg
or
jg
jp
ud0
aas
cmp
shl
jecxz
stc
pop
jle
dec
inc
in
jb
dec
or
iret
(bad)
outs
adc
jecxz
mov
in
dec
lds
sbb
cmp
jmp
fldenv
aaa
jae
cmps
clc
sbb
test
jle
jle
or
mov
or
adc
lds
stc
pop
out
sbb
sub
neg
mov
jecxz
call
std
cdq
js
sub
mov
aas
clc
daa
mov
inc
clc
add
and
push
push
loop
mov
bound
inc
fs
pop
outs
jg
sbb
inc
clc
in
xadd
fmul
mov
lahf
dec
inc
(bad)
jge
pop
cld
retf
clc
or
out
repnz
ja
sar
arpl
jl
loopne
ds
lock
or
loope
fistp
inc
inc
leave
push
mov
cmp
leave
jg
mov
inc
jbe
ds
mov
xchg
push
lahf
cld
imul
hlt
cmp
iret
jmp
mov
mov
inc
ss
idiv
in
stc
pop
fidivr
ja
cs
shr
xchg
mov
aas
stc
sub
out
jg
xchg
(bad)
cs
in
cld
pop
fimul
pop
imul
stc
sar
scas
ds
xchg
cmp
dec
enter
jo
fisubr
or
setle
mov
fidivr
shr
push
sbb
aaa
mov
rcr
xor
jle
mov
addr16
outs
loope
fist
pop
jl
lock
cmp
cld
pop
clc
in
lahf
(bad)
outs
call
push
inc
xor
jbe
pop
loop
jb
pop
loope
outs
jae
outs
jecxz
mov
clc
or
icebp
fistp
test
(bad)
pop
xor
jle
mov
(bad)
outs
jns
xlat
jecxz
clc
clc
pop
jg
fdivr
clc
repz
(bad)
ins
test
das
xchg
cmp
cli
pavgw
inc
jg
aas
lock
(bad)
(bad)
fucomip
loopne
cmps
pop
mov
arpl
call
jg
fild
fsubp
jl
(bad)
in
cld
pop
jle
call
xor
jmp
int
mov
xchg
lahf
cld
dec
mov
aas
idiv
cli
pop
jle
dec
(bad)
mov
in
xchg
jg
jb
jg
out
jb
leave
fild
(bad)
fcomip
mov
and
jecxz
sti
pop
sahf
jl
push
push
cmp
and
dec
enter
jle
iret
push
(bad)
and
cld
aas
out
ja
hlt
xchg
aas
jmp
imul
push
pop
loop
pop
and
(bad)
sub
aas
ds
sub
(bad)
mov
cmp
pop
mov
inc
pop
shl
cld
clc
jge
push
loopne
outs
jb
and
pop
aas
sahf
mov
adc
adc
cmp
lock
dec
std
mov
push
leave
jns
pop
lock
push
(bad)
pop
cld
clc
test
jle
cmp
rol
jns
sub
repz
loope
inc
aas
mov
dec
into
push
popf
clc
pop
icebp
jecxz
rcr
(bad)
sub
push
mov
out
push
cmp
imul
std
xchg
ds
or
ret
pop
mov
xchg
(bad)
dec
jle
js
packssdw
mov
inc
(bad)
jnp
dec
scas
adc
cli
mov
jg
std
pop
push
cld
iret
mov
stos
jmp
fwait
dec
arpl
and
xchg
xor
out
pop
loop
jmp
xlat
add
pop
push
push
sbb
xor
xor
inc
std
leave
jg
inc
clc
hlt
fisttp
sub
cmps
xor
pop
jge
dec
(bad)
cs
ja
leave
dec
inc
hlt
iret
ret
cmps
jg
cli
xchg
sar
in
dec
jmp
fwait
inc
dec
call
hlt
hlt
xlat
ret
(bad)
aas
and
std
sub
repz
or
test
sub
imul
pop
mov
adc
jg
jg
add
dec
clc
or
mov
(bad)
ficomp
iret
movs
cld
das
dec
jmp
mov
iret
cmp
clc
leave
mov
sbb
jle
das
(bad)
cs
adc
call
cmc
pop
mov
pop
out
adc
adc
imul
cli
in
sti
add
(bad)
xor
or
push
cli
int
stc
jae
xchg
mov
cld
cdq
pushf
or
movs
hlt
mul
(bad)
pop
sub
enter
out
or
push
dec
jg
jle
movs
hlt
mov
pop
sub
cs
pop
pop
loop
pop
pop
ffreep
(bad)
lahf
cmp
(bad)
(bad)
fbld
pusha
nop
xor
mov
stc
scas
jle
dec
(bad)
jae
xchg
push
test
(bad)
fnstcw
jg
ja
ds
xchg
jg
sbb
stc
cmps
jg
pop
lock
aas
(bad)
mov
ret
mov
lahf
hlt
out
dec
arpl
fisttp
dec
movs
xchg
jp
cld
(bad)
jmp
daa
xchg
sti
pop
jmp
mov
ret
dec
(bad)
in
fistp
cld
sub
imul
or
sti
leave
pop
cli
mov
scas
sti
mov
test
mov
inc
adc
shr
xchg
jle
out
std
cs
outs
js
mov
iret
std
not
std
outs
dec
fnstsw
(bad)
xchg
aam
repnz
(bad)
fist
stc
pop
or
test
neg
push
stc
dec
jle
(bad)
xchg
mov
or
aas
jecxz
fldenv
sub
lock
aas
loope
mov
dec
out
mov
mov
cli
test
shr
repnz
ja
cli
in
adc
xlat
mov
(bad)
xlat
call
(bad)
mov
call
(bad)
fbld
mov
inc
loop
stc
mov
outs
or
mov
movs
loopne
push
std
or
nop
mov
xchg
loopne
nop
mov
pop
shl
out
lahf
and
lea
xor
ja
loope
in
cld
idiv
repz
in
mov
repnz
sti
pop
jb
or
pop
jmp
stc
push
mov
inc
adc
lahf
stc
pop
mov
dec
inc
pop
cld
jge
retf
das
and
out
aam
mov
jmp
std
ins
push
lods
lahf
and
out
pop
(bad)
pop
shr
fsqrt
mov
mov
sbb
mov
jg
idiv
into
pop
sub
cmp
jge
pop
push
pushf
stc
lahf
xchg
sar
(bad)
jg
xor
fcom
xor
out
inc
or
or
mov
outs
inc
mov
cld
aaa
and
(bad)
mov
not
(bad)
aaa
and
mov
outs
repz
jg
cmp
stc
aaa
or
mov
mov
out
clc
leave
aas
lea
in
daa
inc
outs
test
cmp
xchg
std
cs
or
mov
lahf
mov
jmp
sti
xlat
cmp
or
cmp
gs
xchg
sti
aaa
aam
mov
mov
(bad)
shld
sbb
sbb
enter
inc
rcr
push
sub
sub
aas
adc
dec
pop
xchg
and
fbld
rcr
jmp
idiv
jl
das
push
hlt
jmp
test
push
xchg
loope
dec
jg
fcmovnbe
cmp
shl
mov
into
js
ja
or
dec
or
fucomip
xchg
(bad)
call
(bad)
in
ds
ja
or
sbb
pop
jle
or
mov
pop
sti
int
stc
iret
jg
daa
dec
dec
call
dec
cld
xchg
mov
out
inc
mov
jae
ins
pushf
pushf
jg
mov
dec
lahf
cld
inc
mov
out
dec
sbb
leave
mov
dec
ds
addr16
stc
(bad)
hlt
cmc
adc
add
ja
out
mov
jno
cmps
inc
and
jle
in
ja
sti
sti
and
loope
dec
pop
or
xor
retf
sar
icebp
int
or
push
(bad)
call
sbb
icebp
pop
(bad)
imul
(bad)
sar
sub
inc
push
retf
(bad)
in
add
xlat
jnp
iret
cmps
dec
mov
stc
fnstsw
inc
(bad)
clc
lea
pop
pop
les
cld
cld
pop
add
outs
xlat
std
push
add
mov
jle
mov
ins
jge
adc
lods
fbstp
stc
sbb
test
push
add
out
sub
ret
(bad)
jmp
fbstp
int
jecxz
aaa
movs
xor
clc
int
pop
sti
xor
cli
jne
lea
xlat
imul
mov
adc
aaa
ret
add
imul
cld
jne
repz
not
std
jg
jmp
les
jg
pop
cld
jne
sti
pushf
pop
jmp
call
(bad)
cmc
xlat
clc
add
lahf
fist
test
mov
nop
jle
dec
(bad)
call
hlt
stc
pop
icebp
jmp
out
hlt
ficomp
(bad)
call
sar
call
jmp
call
sti
sbb
jmp
(bad)
push
hlt
test
ds
ins
cli
sti
das
mov
(bad)
fisttp
idiv
cli
(bad)
dec
cld
ret
mov
mov
dec
mov
sbb
xlat
scas
dec
sar
jge
push
shl
xor
repz
hlt
stc
jae
std
(bad)
mov
sti
adc
inc
mov
jmp
mov
cld
cmps
or
out
inc
out
cld
ja
repz
sti
push
call
inc
aas
inc
jp
xor
jmp
cli
sti
pop
cmps
(bad)
dec
xlat
xchg
jne
loopne
mov
inc
idiv
or
scas
icebp
adc
idiv
clc
sahf
jle
(bad)
out
inc
aas
jmp
in
mov
ds
stc
pop
inc
lahf
std
jnp
imul
movs
lahf
jg
(bad)
dec
lahf
std
pop
hlt
div
jle
add
call
ficom
pop
hlt
sti
mov
out
dec
ins
(bad)
cmp
jge
lahf
jg
jle
(bad)
idiv
dec
repz
out
sbb
dec
inc
push
(bad)
fistp
out
iret
mov
jg
call
cmps
lahf
jg
(bad)
dec
out
(bad)
stc
hlt
stc
sbb
(bad)
aas
inc
lahf
push
hlt
idiv
std
lea
(bad)
xor
stc
retf
jmp
mov
fist
adc
xchg
fistp
cld
jne
(bad)
call
jle
pop
inc
aam
outs
imul
xor
jbe
(bad)
fild
jmp
inc
hlt
(bad)
mov
inc
mov
xchg
inc
push
mov
lahf
std
sbb
inc
push
std
sbb
dec
repz
dec
sar
shl
(bad)
aas
mov
jmp
(bad)
inc
cli
call
(bad)
(bad)
jmp
or
(bad)
arpl
(bad)
jg
(bad)
jmp
pop
inc
adc
dec
sbb
pop
sbb
std
ja
jmp
add
mov
call
jl
inc
inc
in
sub
(bad)
out
dec
inc
sbb
std
adc
mov
sar
call
aas
repnz
rcl
mov
(bad)
addr16
pop
or
dec
in
or
movs
mov
sub
clc
lahf
leave
jae
out
lds
xchg
hlt
pop
scas
jmp
pop
icebp
jg
rcl
jmp
sbb
jg
cmp
jg
pushf
(bad)
jg
pop
mov
cmp
mov
leave
shl
xchg
cmp
add
cmp
sub
sub
sti
iret
(bad)
sbb
add
lock
aas
xchg
push
jle
pop
loopne
dec
pop
jg
mov
imul
clc
in
test
and
sti
ins
stc
pushf
pop
call
out
or
out
lock
push
(bad)
pop
mov
cmc
inc
jecxz
lods
dec
std
cs
jg
ds
lock
and
cmp
and
loope
sbb
dec
ret
or
jg
or
fisttp
clc
and
(bad)
cmc
jg
and
call
out
sbb
cld
clc
cwde
jecxz
mov
rol
lock
aas
push
aaa
mov
or
iret
adc
fistp
clc
jge
xor
push
call
xor
and
jo
aas
push
mov
jne
mov
lahf
jg
jle
sahf
pop
mov
stc
sbb
adc
jns
mov
jmp
leave
stc
sbb
pop
clc
imul
out
pop
inc
mov
movs
xor
sar
jg
cli
(bad)
out
dec
(bad)
inc
call
cld
xlat
adc
pop
std
sbb
dec
push
loop
cwde
mov
psrlw
jg
ret
cli
push
test
outs
dec
pushf
stc
pop
loop
scas
mov
jmp
xchg
cmp
(bad)
sti
xor
loop
out
adc
mov
les
cld
xchg
mov
or
jl
(bad)
repz
adc
cmp
mov
adc
bound
mov
ins
jb
(bad)
je
push
std
leave
pushf
jbe
loopne
push
add
stc
mov
cmp
sbb
xor
cld
add
pop
jg
push
pop
jg
or
jle
or
jle
loope
fisttp
and
push
(bad)
dec
in
(bad)
in
jg
aas
adc
(bad)
out
daa
(bad)
cmp
and
ja
xchg
sti
call
and
aaa
daa
addr16
jns
bswap
stos
jnp
jno
xor
xchg
jg
repnz
dec
leave
in
cld
xchg
mov
out
and
sti
pop
leave
dec
call
jmp
jmp
das
and
adc
mov
aam
dec
std
pop
jle
xchg
aas
icebp
ja
add
out
dec
or
cdq
and
mov
mul
mov
jno
ror
jp
pop
mov
add
jo
or
jl
mov
cld
sbb
pop
mul
lock
nop
call
push
fistp
sbb
icebp
imul
loope
sub
in
lea
jg
mov
mov
in
popf
dec
inc
stc
mov
repz
and
lods
mov
inc
lahf
cld
adc
xchg
cld
out
and
cld
ins
loop
push
adc
(bad)
aad
mov
and
mov
out
aaa
xchg
inc
test
std
test
cmp
addr16
push
outs
mov
icebp
xchg
jg
inc
std
mov
adc
std
lods
in
dec
or
fwait
add
out
dec
cdq
rcr
repnz
inc
mov
pop
nop
mov
jg
inc
jmp
mov
jg
add
fstp
dec
cld
inc
mov
sbb
in
sub
in
mov
hlt
leave
pop
scas
hlt
es
hlt
aaa
push
sub
aaa
std
scas
mov
add
ror
cli
jmp
(bad)
jmp
std
push
xor
jl
int
pusha
push
xchg
les
cmps
mov
jg
inc
loope
dec
pop
mov
aas
es
or
lea
pop
test
sbb
jg
dec
(bad)
repz
call
(bad)
mov
sbb
mov
icebp
jg
push
(bad)
in
out
inc
adc
out
repnz
jg
(bad)
inc
or
mov
dec
pop
icebp
jg
add
outs
test
cld
cmps
mov
das
clc
in
inc
repz
jmp
out
cld
leave
mov
xchg
(bad)
aaa
or
xchg
add
js
sbb
and
mov
in
call
or
inc
leave
das
call
out
test
jle
cli
fisub
sahf
jle
pop
push
xor
out
in
mov
(bad)
imul
ja
scas
jg
sbb
outs
dec
arpl
fist
cmps
std
popf
pop
sbb
jmp
outs
sti
leave
mov
jg
dec
(bad)
cmc
fild
mov
popf
ds
scas
jg
dec
dec
push
cmp
and
push
ins
icebp
pop
push
sar
lahf
mov
jg
div
fisttp
ret
scas
jle
bnd
push
std
out
(bad)
sub
(bad)
jp
xchg
xchg
mov
out
inc
pop
icebp
(bad)
sar
jmp
ror
repnz
pop
shl
mov
jle
fisttp
fnstcw
ins
jle
cli
std
add
(bad)
xchg
push
outs
pop
mov
jg
cli
sti
das
cmps
out
(bad)
jbe
dec
lahf
std
xor
div
out
dec
std
inc
adc
fist
sti
aas
popf
(bad)
(bad)
jae
in
mov
mov
aam
fbld
in
aaa
cmps
fistp
xor
shr
jg
mov
inc
jg
xor
out
scas
mov
cld
mul
jg
std
std
cmp
pop
daa
fdivr
push
mov
lock
hlt
sti
outs
inc
mov
cmp
idiv
mov
dec
mov
in
scas
mov
inc
push
cli
std
ja
sbb
adc
jns
(bad)
(bad)
sti
call
call
and
inc
(bad)
mov
(bad)
mov
out
movs
call
pop
(bad)
jnp
pop
shr
psrlw
sub
cld
lea
jle
cli
in
cmp
std
mov
sti
mov
int
inc
std
(bad)
push
hlt
fidivr
jg
call
movs
iret
xchg
hlt
fstp
mov
out
stc
lahf
dec
ins
jg
std
(bad)
pop
sar
lahf
push
(bad)
jg
sar
sti
ds
jmp
push
retf
test
std
imul
dec
sti
(bad)
xchg
jle
mov
aaa
xchg
mov
mul
call
std
sub
mov
add
scas
mov
(bad)
mov
std
out
dec
(bad)
dec
hlt
out
add
in
iret
movs
(bad)
(bad)
fcomip
sti
pop
inc
out
jg
aaa
adc
iret
(bad)
sub
stc
xchg
shl
call
std
(bad)
aaa
ror
aas
mov
outs
call
ret
call
push
hlt
push
arpl
dec
hlt
sti
(bad)
loopne
cli
(bad)
aas
inc
(bad)
mov
dec
cli
cld
push
adc
inc
mov
push
cmp
pop
dec
jg
inc
dec
jmp
ins
jle
jg
out
hlt
jae
aas
dec
call
xor
std
nop
jle
pushf
(bad)
jmp
sar
and
lea
cmp
lahf
shr
jg
jge
das
ror
aas
mov
(bad)
sti
hlt
sti
and
out
fild
loope
mov
(bad)
jle
stc
daa
rcr
jg
std
cld
cmc
test
jg
pusha
jl
(bad)
dec
std
sbb
out
push
jge
sbb
(bad)
call
fist
leave
imul
out
cli
sti
lahf
and
retf
jmp
dec
stc
jge
popf
mov
fisub
(bad)
adc
(bad)
xchg
aam
mov
(bad)
push
mov
sti
ins
call
pop
dec
mov
fild
cmp
(bad)
inc
jmp
jg
sti
out
sar
imul
(bad)
mov
test
pop
push
jp
fistp
(bad)
call
notrack
repz
cmp
daa
sar
sti
adc
stc
out
mov
std
fsub
cld
pop
push
sti
jg
jle
mov
sti
out
(bad)
mul
sti
arpl
push
sar
inc
ss
cmp
fcmovnbe
iret
inc
cli
sti
(bad)
mov
ror
and
cld
sbb
push
hlt
repz
jmp
iret
jmp
repz
push
jmp
call
call
idiv
call
mov
mov
(bad)
sar
icebp
in
push
mov
xchg
jmp
(bad)
jg
cmp
mov
xlat
test
add
(bad)
test
leave
fistp
call
jg
not
cmovne
aas
cmps
lahf
mov
sbb
out
pop
inc
jle
pop
mov
(bad)
aas
cld
xor
imul
test
stc
xor
(bad)
sbb
ja
test
(bad)
call
(bad)
jmp
(bad)
(bad)
imul
cli
aas
dec
(bad)
jmp
call
loope
mov
(bad)
xlat
nop
in
pop
repz
and
mov
jg
js
pushf
(bad)
mov
imul
jg
call
jmp
std
dec
xchg
xlat
jmp
pop
shr
cmps
pop
pop
inc
push
idiv
sar
push
cli
jmp
call
push
(bad)
jmp
push
scas
test
dec
and
std
(bad)
cmp
jmp
jmp
pop
sar
xchg
hlt
push
(bad)
jg
std
dec
hlt
(bad)
mov
sar
inc
cli
(bad)
fild
inc
jmp
call
hlt
(bad)
inc
(bad)
inc
(bad)
dec
push
sar
jg
cli
jmp
(bad)
call
push
push
call
lahf
(bad)
ficom
(bad)
jge
call
inc
jg
std
dec
hlt
(bad)
aas
cmp
out
(bad)
push
cli
call
(bad)
(bad)
fucomi
(bad)
jg
std
call
hlt
(bad)
jg
(bad)
call
sar
push
cli
(bad)
inc
call
(bad)
jmp
cmp
jmp
cli
(bad)
out
dec
(bad)
call
aas
movs
(bad)
aas
mov
jmp
pop
sar
xchg
hlt
push
(bad)
aas
test
inc
(bad)
call
lahf
dec
(bad)
jmp
jmp
(bad)
out
mov
(bad)
jg
(bad)
lahf
fdivrp
xor
clc
loop
jecxz
mov
bswap
enter
jle
jmp
(bad)
adc
and
aaa
sar
or
jmp
sub
dec
movs
mov
adc
(bad)
std
mov
hlt
ja
sbb
mov
and
pop
fwait
dec
pop
repnz
mov
sti
leave
lahf
popf
dec
aam
inc
mov
aas
inc
jno
outs
test
cmp
dec
jmp
jae
jecxz
pop
add
push
loopne
test
(bad)
jg
adc
retf
jl
pop
lahf
push
cld
sahf
clc
icebp
sti
sbb
in
jecxz
call
and
dec
jg
jl
fndisi(8087
mov
adc
cld
es
in
pop
lds
push
jle
ja
(bad)
mov
gs
icebp
fwait
pop
cld
ja
and
imul
mov
das
ret
add
std
in
aas
mov
mov
iret
xchg
mov
clc
cmp
pop
sbb
and
pop
hlt
cmp
jmp
ret
lods
cmp
mov
lsl
pop
dec
jge
(bad)
sti
mul
push
es
icebp
stc
shl
jecxz
rcr
std
mul
jmp
loopne
jg
mov
jne
adc
cld
cmps
clc
loopne
jle
pop
add
icebp
retf
outs
test
jle
sbb
pop
cld
mov
icebp
imul
jg
pop
std
sub
std
cs
(bad)
pop
cld
pop
push
cld
mov
and
pop
icebp
stc
jg
(bad)
adc
imul
mov
push
outs
std
repz
in
jg
jmp
jle
pop
icebp
fcmovnu
(bad)
fistp
jl
aaa
add
xchg
pop
jg
ds
psllw
pop
lock
bnd
jle
paddd
clc
jge
inc
inc
sar
pop
adc
test
std
pop
clc
ins
mov
add
outs
mov
neg
or
jo
or
push
pop
mov
push
lock
pop
jl
lock
pop
movs
clc
sbb
jmp
in
shr
(bad)
sub
jne
sbb
movs
sbb
dec
jb
retf
icebp
jecxz
cmp
out
icebp
jecxz
pop
inc
cmp
std
adc
aaa
sahf
cmp
popa
cld
pop
pop
cld
cmp
mov
clc
cli
scas
mov
pop
jg
ds
sbb
addr16
(bad)
loopne
mov
pop
ds
and
fstp
fistp
mov
icebp
jecxz
aas
test
jecxz
cmp
jecxz
out
jbe
loope
out
jno
push
push
dec
jl
repnz
pop
inc
dec
pop
cld
push
clc
loopne
rol
clc
mov
mul
jecxz
add
xchg
fist
clc
mov
(bad)
pop
pop
mov
loopne
lock
pop
mov
icebp
cmc
push
stos
xchg
(bad)
stc
pop
call
cmp
mov
aas
shr
lahf
std
imul
mov
std
inc
cdq
movs
jg
pop
cld
push
jg
imul
fistp
xor
retf
shr
in
rcr
pop
sbb
dec
mov
std
shr
loop
mov
jmp
xchg
jecxz
cmp
pop
(bad)
shr
ja
clc
cs
in
(bad)
clc
in
das
(bad)
outs
daa
clc
in
pop
outs
psllw
outs
and
mov
(bad)
mov
cmc
sar
out
xlat
pusha
std
imul
xor
loop
(bad)
cmps
call
pop
mov
jns
add
push
or
imul
in
xlat
nop
jo
or
dec
std
mov
jmp
loope
jmp
(bad)
jg
std
pop
jp
out
mov
(bad)
jg
dec
aad
out
sar
jmp
(bad)
jg
inc
(bad)
aas
imul
loop
pop
repnz
aas
bound
shl
hlt
jg
or
adc
jg
call
call
hlt
call
(bad)
inc
jmp
jmp
(bad)
(bad)
jmp
(bad)
jg
std
call
clc
xor
mov
push
cli
(bad)
jg
(bad)
jmp
hlt
(bad)
dec
mov
dec
jmp
aas
movs
(bad)
jg
(bad)
mov
(bad)
jg
(bad)
jmp
dec
std
jg
imul
(bad)
call
mov
mov
std
or
dec
jg
lahf
dec
push
loop
dec
jg
jl
scas
cmps
ffreep
(bad)
jg
(bad)
popa
call
fdivr
add
(bad)
ds
push
cld
pop
jmp
out
lahf
(bad)
(bad)
mov
jecxz
dec
call
repz
sbb
out
repz
cmps
call
ds
and
mov
hlt
mov
add
addr16
fsubp
mov
adc
retf
aas
mov
mov
cld
test
lock
nop
mov
sbb
jp
or
xchg
sbb
lahf
dec
cld
ja
outs
jg
jle
int
sbb
loopne
ret
outs
jg
jle
aas
mov
xchg
scas
dec
pop
cld
push
clc
in
xlat
(bad)
inc
xchg
ins
jno
outs
loop
jg
pop
std
repz
fld
out
sub
(bad)
icebp
std
cmp
mov
sti
push
mov
(bad)
jae
mul
stos
(bad)
paddd
icebp
fistp
xor
clc
adc
xor
aad
xor
cs
xor
and
shr
push
mov
pop
mov
dec
jl
cmp
test
pop
movs
loopne
or
fisttp
pop
cld
not
jle
sbb
(bad)
fwait
jecxz
xor
shr
cmc
jg
(bad)
sahf
sbb
scas
clc
xchg
push
cld
(bad)
push
mov
iret
icebp
fcmovnu
sbb
outs
loop
jg
mov
lahf
les
and
std
std
js
cmp
cmp
add
pop
jg
jle
add
push
cmps
pop
jg
std
clc
sbb
call
mov
daa
(bad)
jmp
jg
ds
mov
or
scas
push
repnz
cmps
hlt
fistp
(bad)
mov
cmp
cmovnp
in
out
mov
imul
lods
dec
(bad)
sbb
(bad)
adc
test
pop
bound
call
aas
xchg
mov
sbb
stc
xor
out
repnz
mov
cmp
cmps
test
jae
pop
lea
shl
lahf
ret
adc
jp
retf
jle
jno
jle
cmp
es
xchg
movs
jg
pop
fadd
pop
mov
pop
sub
mov
retf
pop
fs
push
stc
jg
cmp
jmp
sub
ret
imul
pop
cmp
jg
pop
fdivr
clc
out
xor
jno
repz
ror
stos
aas
or
mov
inc
pop
jg
repz
lahf
lea
jle
cmp
(bad)
(bad)
push
xor
xor
mov
popf
test
pop
into
fsubr
jns
dec
leave
mov
dec
or
movs
das
lock
cmp
sbb
push
jecxz
repnz
jle
pop
arpl
js
lock
cmp
arpl
fninit
(bad)
jmp
mov
jg
(bad)
jle
pop
div
sar
cmp
pmuludq
push
repnz
lock
out
(bad)
imul
aaa
sti
xor
fdivrp
mov
(bad)
sbb
sub
sti
sar
iret
jmp
pop
sar
xlat
hlt
jmp
jmp
mov
fs
aas
push
adc
arpl
lock
cwde
inc
loopne
rcr
hlt
jg
inc
jo
popa
stc
jle
lahf
and
(bad)
jnp
add
and
sub
rcl
daa
jmp
pop
ror
jecxz
mov
ret
repnz
cmps
jmp
jle
inc
jmp
mov
and
sub
sub
call
movs
jg
(bad)
cld
dec
sar
or
(bad)
cmp
(bad)
(bad)
pop
mov
mov
mov
daa
jg
out
repnz
lock
fbld
cmp
js
cmps
ds
das
icebp
fild
retf
out
jae
pop
mov
ja
mov
(bad)
cmp
movd
sar
fwait
lock
(bad)
jecxz
fucomip
loopne
ret
test
mov
stos
fild
pop
pop
push
cld
call
or
(bad)
dec
ficom
call
outs
sub
pop
shr
fidivr
add
punpckhwd
sub
push
dec
pop
push
fwait
(bad)
cmps
jle
dec
(bad)
jno
ficom
xchg
stc
adc
enter
sbb
cld
daa
mov
stc
xor
in
dec
movs
lock
movs
and
stc
repnz
aas
push
pop
fistp
lods
jle
jae
loop
xchg
clc
loopne
pop
stc
dec
pop
mov
pop
mov
mov
adc
inc
pushf
pop
mov
clc
cmp
(bad)
(bad)
out
repnz
add
push
(bad)
push
clc
das
sub
stc
dec
dec
and
(bad)
pop
sbb
mov
cmc
ja
or
ja
sar
ss
cld
push
xchg
xchg
inc
dec
cmp
(bad)
mov
mov
out
inc
mov
sbb
pop
sar
clc
xchg
mov
jmp
mov
and
cli
shr
paddw
std
cs
into
mov
icebp
mov
out
retf
add
aas
dec
cmp
cli
ins
fs
jecxz
xchg
adc
loop
dec
mov
and
clc
sub
sbb
push
out
jecxz
icebp
mov
icebp
imul
jmp
outs
xor
(bad)
loope
mov
sbb
cmp
jmp
sti
add
ds
dec
jmp
jecxz
xchg
(bad)
addr16
and
call
jle
(bad)
rcr
pop
push
mov
imul
xor
inc
xchg
mov
(bad)
(bad)
mov
outs
pop
pop
clc
sbb
xor
adc
inc
hlt
scas
(bad)
(bad)
aas
mov
lds
cmp
sar
mov
out
dec
add
out
inc
add
out
inc
mov
fistp
or
lahf
push
outs
mov
push
outs
(bad)
dec
or
and
jecxz
xor
shl
mov
add
add
test
dec
ins
xor
ss
ss
inc
les
(bad)
push
in
cld
in
mov
cmp
fild
in
sti
popf
mov
ror
pop
push
clc
jmp
cmp
add
out
cli
leave
jg
cmp
stos
add
dec
(bad)
popf
fist
(bad)
in
push
adc
push
pop
mov
mov
mov
in
ja
sar
sti
leave
pop
mov
mov
jg
jg
ins
adc
loop
clc
scas
mov
cmc
sbb
sbb
add
scas
hlt
jmp
hlt
mov
jp
std
mov
(bad)
push
sahf
fdiv
pop
ror
adc
push
js
inc
jmp
sar
ja
in
pop
lahf
mov
scas
jmp
ja
shr
dec
mov
mov
call
jmp
repz
lods
push
dec
(bad)
jg
stos
push
jmp
lods
mov
mov
call
in
pmaxsw
mov
out
(bad)
stos
fild
mov
inc
out
ja
pop
jecxz
and
jecxz
and
jecxz
nop
(bad)
icebp
fwait
lds
mov
cld
out
push
cmp
pop
inc
push
retf
dec
hlt
shr
leave
mov
das
sub
dec
rcr
outs
inc
imul
lock
daa
sar
push
(bad)
jmp
jne
push
jle
pop
and
cmp
add
add
dec
movs
mov
sbb
loope
and
int
sti
push
ja
jecxz
std
aad
push
push
xchg
(bad)
fcmovnu
xchg
(bad)
mov
xor
jg
int3
aad
mov
fistp
movs
(bad)
push
cmp
pop
mov
mov
push
push
mov
call
in
cld
sbb
test
icebp
fwait
rol
rep
dec
cmp
cli
outs
pop
cmps
shr
lahf
(bad)
idiv
jge
outs
or
mov
and
jmp
fld
lock
inc
mov
dec
pop
std
push
and
scas
push
std
(bad)
xchg
or
outs
std
sbb
jp
cmp
mov
repz
jne
or
das
jmp
push
aaa
xchg
mov
aas
sahf
(bad)
inc
repz
nop
loop
dec
jg
or
rep
cld
dec
sub
aam
xchg
call
fwait
jg
(bad)
dec
jle
shl
(bad)
fcmovnbe
cli
or
addr16
(bad)
cmp
sub
fild
std
call
idiv
mov
out
call
pop
ror
mov
jle
push
jge
sub
mov
call
loope
mov
pushf
dec
fstp
dec
(bad)
(bad)
mov
fwait
dec
dec
push
imul
adc
cld
fucomip
test
inc
ficomp
hlt
sti
pop
dec
out
das
or
das
mov
(bad)
jecxz
stc
pop
inc
lahf
dec
cli
jns
(bad)
(bad)
ds
cld
aaa
xchg
cmc
test
std
aaa
xchg
cmc
stos
dec
test
scas
mov
dec
sub
(bad)
pop
mov
mov
(bad)
jg
cli
out
ja
idiv
add
sti
(bad)
cmps
(bad)
xor
pop
shl
jg
jge
outs
rcr
fbld
jg
jge
iret
call
mov
xchg
loopne
(bad)
repz
mov
call
hlt
fstp
dec
(bad)
call
call
cs
mov
dec
inc
(bad)
push
(bad)
(bad)
jmp
push
cli
call
pop
(bad)
test
sub
dec
(bad)
or
sti
pop
shr
jg
mov
xchg
jmp
jg
cli
sti
gs
push
sar
inc
in
inc
fild
inc
xor
fisttp
addr16
push
xor
xchg
lods
movs
std
dec
hlt
stc
push
hlt
repz
mov
stc
sti
std
inc
mov
jno
jle
mov
pop
(bad)
xchg
(bad)
push
jecxz
mov
cld
cmp
popf
pop
lahf
(bad)
(bad)
(bad)
mov
(bad)
lahf
inc
jmp
out
fisttp
sti
jg
(bad)
push
std
data16
mul
xchg
lods
xchg
pop
aam
aas
dec
(bad)
iret
hlt
not
stc
jmp
ja
or
stc
dec
shl
pop
std
push
bnd
test
inc
out
(bad)
and
cld
pop
cmps
fistp
sar
call
xchg
jne
lods
jecxz
add
cmps
out
push
cli
jl
xor
fild
dec
ins
dec
fist
(bad)
(bad)
ss
in
fbld
(bad)
pop
cli
sti
sbb
(bad)
inc
int3
sbb
fwait
adc
call
(bad)
lahf
add
sar
(bad)
cmp
std
aaa
movs
ss
call
sti
push
aaa
xchg
mov
mov
call
sti
fwait
ror
call
std
pop
push
fwait
inc
call
outs
and
xor
pushf
jle
adc
aas
std
(bad)
aas
(bad)
push
mov
not
std
data16
clc
pop
rcr
mov
push
sti
call
fnstenv
mov
xchg
(bad)
(bad)
jnp
out
call
movs
lahf
mov
adc
jmp
pusha
push
mov
sbb
loopne
sbb
std
das
shl
jg
jge
push
ror
inc
retf
add
jmp
jge
pop
sar
jmp
cli
cmp
mov
std
cld
jge
std
out
dec
(bad)
jmp
out
and
fbld
pop
jmp
xchg
mov
mov
hlt
idiv
cli
sti
(bad)
cmps
lahf
mov
in
out
shl
das
test
lahf
dec
mov
icebp
outs
and
sbb
xchg
out
int3
sbb
aam
adc
pop
shl
std
(bad)
xlat
sar
mov
mov
mov
cmc
mov
xchg
(bad)
xchg
add
iret
outs
dec
mov
mov
sar
jle
pop
fistp
pop
mov
rol
(bad)
cmp
jg
jle
outs
push
mov
mov
sbb
sub
std
xor
(bad)
aas
cmps
call
mov
scas
and
pop
dec
(bad)
inc
(bad)
(bad)
mov
and
stos
hlt
(bad)
jg
(bad)
call
(bad)
jmp
jmp
mov
mov
inc
(bad)
movs
retf
aas
xchg
div
cli
dec
push
call
std
(bad)
in
scas
sub
mov
mov
(bad)
aas
mov
jmp
sar
push
cli
call
(bad)
(bad)
fstp
mov
test
pop
ja
jmp
leave
mov
stc
xlat
jb
push
imul
dec
jmp
call
mov
jmp
(bad)
aas
mov
inc
(bad)
inc
call
jmp
jmp
hlt
(bad)
mov
sar
inc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
call
fisub
hlt
(bad)
fild
(bad)
aas
mov
pop
sar
dec
call
mov
call
inc
(bad)
mov
hlt
(bad)
aas
xchg
(bad)
jmp
sar
jmp
call
(bad)
jmp
std
(bad)
out
cmps
(bad)
call
(bad)
(bad)
out
sar
call
cli
(bad)
jg
(bad)
jmp
(bad)
call
cmp
std
push
(bad)
fbld
jg
(bad)
call
fistp
dec
jmp
psubsb
jg
std
dec
(bad)
call
(bad)
mov
sar
dec
cli
(bad)
aas
inc
(bad)
jmp
(bad)
call
std
(bad)
aas
mov
(bad)
dec
(bad)
jmp
std
call
stc
jne
aas
cli
jmp
(bad)
inc
jg
lock
fs
sar
repnz
iret
inc
(bad)
xor
jmp
pop
and
jg
ja
dec
mov
(bad)
pop
or
xor
std
(bad)
and
(bad)
ds
cs
fwait
movs
inc
in
mov
jg
add
jg
(bad)
out
jg
inc
sbb
lds
jg
clc
mov
dec
jp
pop
jg
inc
leave
pushf
inc
loop
or
test
lods
imul
sti
and
sti
movs
xchg
test
adc
fs
sbb
xchg
inc
cli
jae
add
xchg
and
add
mov
lock
sbb
loope
pop
add
mov
mov
mul
retf
(bad)
sbb
jmp
sar
jg
pop
cld
and
aaa
mov
rcr
scas
mov
add
jle
out
fistp
jae
xchg
push
sar
push
rcr
fcomip
add
fistp
aaa
call
mov
inc
rep
sbb
repnz
retf
jg
sbb
xchg
push
out
nop
test
hlt
pop
scas
imul
clc
mov
mov
mov
pop
mov
xchg
loopne
fisttp
(bad)
pop
jl
jne
dec
xor
xchg
xchg
mov
sub
clc
popf
gs
or
sub
xchg
lock
cmp
cmps
icebp
jecxz
ds
inc
lock
test
push
paddd
add
cmp
cmc
out
aaa
pop
pop
cli
push
shr
rol
xchg
pop
pop
jg
jle
cmp
movs
clc
rcr
loope
jp
cli
aas
mov
repz
jecxz
sub
inc
sub
sti
loopne
into
sbb
scas
inc
pop
ffreep
(bad)
jmp
arpl
mov
pop
jecxz
ins
cld
div
loopne
pop
(bad)
outs
pushf
cmp
pop
jg
cli
div
push
lock
(bad)
iret
sbb
fistp
stc
gs
cs
push
(bad)
xor
lods
dec
clc
icebp
pop
pop
cld
jae
cld
scas
ret
or
test
mov
or
pop
mov
inc
push
mov
clc
add
pop
push
pop
jg
jle
hlt
shr
out
sub
mov
loopne
pop
or
clc
pop
bswap
icebp
stc
mov
cld
idiv
lea
cmp
(bad)
(bad)
je
jbe
fbld
sbb
adc
mov
ror
clc
loopne
shr
(bad)
ds
or
(bad)
das
lods
sbb
jle
mov
cmp
or
jmp
lock
mov
cmc
scas
loopne
jg
lahf
std
push
clc
(bad)
xlat
outs
inc
cld
(bad)
jmp
jg
inc
sub
(bad)
jp
clc
loop
scas
ror
(bad)
xlat
icebp
retf
fistp
clc
pop
outs
mov
clc
in
mov
in
aas
shr
test
push
cli
jge
sbb
mov
jb
mov
(bad)
xor
dec
cld
mov
fbld
push
ds
test
mov
xor
clc
loopne
loopne
les
jg
fcmovb
sub
add
(bad)
(bad)
and
(bad)
ds
idiv
hlt
inc
in
clc
out
repnz
outs
stc
jmp
cs
das
add
jmp
jecxz
xor
fucomip
xlat
adc
(bad)
sbb
repz
mov
(bad)
push
sbb
or
(bad)
jg
std
call
mov
retf
hlt
(bad)
jg
dec
mov
pop
sar
rcl
aam
sbb
adc
fdivr
dec
in
ja
(bad)
(bad)
mov
(bad)
mov
cmps
call
hlt
inc
inc
std
dec
(bad)
call
(bad)
mov
sar
jmp
cli
(bad)
(bad)
imul
fnstcw
cmc
imul
ret
and
(bad)
cmp
(bad)
jg
(bad)
mov
fldenv
std
call
call
xlat
inc
(bad)
jg
jg
mov
lock
sub
daa
dec
push
in
inc
dec
data16
ds
not
jg
aas
(bad)
jne
mov
dec
dec
call
jle
mov
jns
mov
aaa
cmc
daa
jg
das
pop
jge
xlat
jae
dec
jmp
inc
(bad)
mov
in
in
jl
pop
dec
clc
icebp
(bad)
dec
mov
(bad)
jmp
cdq
std
cs
mov
pushf
pop
dec
ds
mov
jl
pop
or
jecxz
mov
cmp
jl
mov
out
dec
ds
not
jg
pop
cld
es
jbe
pop
mov
ds
dec
shr
inc
jle
mov
scas
add
idiv
in
pop
push
jmp
mov
loope
mov
clc
loopne
loopne
lds
lock
loopne
rol
push
(bad)
(bad)
dec
mov
cwde
jno
mov
sub
loopne
ret
outs
jmp
jle
(bad)
(bad)
outs
jg
(bad)
mov
jo
cld
mov
jecxz
mov
mov
push
aas
pop
sbb
lock
sar
dec
cmc
out
mov
jle
rcl
jle
add
sahf
lock
cdq
sub
jge
paddd
mov
pop
mov
sub
and
jg
cld
test
aaa
pop
xor
pop
xchg
int3
js
sbb
data16
repnz
lock
test
(bad)
loopne
rol
xor
out
ror
push
repnz
loopne
fild
or
fld
fisttp
sub
pop
jg
jle
ins
lock
mov
int
clc
jg
mov
stc
popf
pushf
repnz
(bad)
cld
movaps
repz
push
scas
cld
fbld
out
and
fidivr
dec
stc
sar
xchg
jmp
and
pop
sti
jnp
jg
ja
mov
lock
pop
inc
mov
mov
mov
cmp
aas
(bad)
repnz
mov
outs
inc
or
cmps
xchg
pusha
ins
std
dec
ror
movs
mov
gs
ds
loopne
lahf
xchg
adc
int
push
fistp
mov
(bad)
shl
clc
loopne
dec
cs
sbb
mov
pop
xchg
fistp
pop
cld
sar
loopne
les
pop
pop
mov
lock
retf
inc
jbe
and
imul
cld
daa
clc
icebp
out
loopne
lds
aas
jle
pop
xchg
std
pop
mov
dec
cld
cmp
out
nop
push
(bad)
dec
push
gs
jns
div
mov
inc
cmp
out
(bad)
out
jns
addr16
dec
push
cld
mov
icebp
sbb
jp
scas
lods
xchg
jge
jmp
mov
mov
pop
pop
mov
neg
nop
cmc
mov
inc
(bad)
retf
jle
pop
das
xchg
jns
shr
jle
mov
cld
test
ror
cld
into
pop
mov
shr
lahf
sbb
cmps
clc
icebp
jecxz
mov
jle
dec
push
xor
xor
adc
cmp
mov
pop
int
(bad)
xor
dec
mov
inc
mov
jp
cmp
call
jg
(bad)
mov
lods
(bad)
xor
push
std
pop
push
and
data16
(bad)
imul
sbb
dec
jp
xlat
and
xchg
pop
pop
dec
jmp
pop
repz
cli
cmp
add
pushf
(bad)
not
xchg
jmp
pop
loope
dec
cld
outs
loop
mov
xchg
mov
sub
out
lock
jg
adc
jg
in
push
retf
dec
jmp
push
cdq
cld
in
mov
std
mov
jmp
dec
imul
icebp
ficomp
inc
pop
fidivr
sub
(bad)
pop
or
or
cmp
pop
loopne
dec
and
cld
test
ins
pop
mov
ds
ss
mov
sti
push
icebp
sbb
movs
lods
mov
mov
pop
cld
into
shr
adc
enter
cmp
cli
(bad)
jo
stos
rcl
sar
cmp
mov
cmp
aas
ret
stos
dec
jmp
stc
lahf
leave
pushf
cld
not
mov
pop
mov
sub
jg
mov
ds
outs
dec
loop
dec
dec
fcom
adc
fild
mov
adc
push
daa
or
pushf
clc
pop
inc
mov
jg
sub
retf
dec
nop
mov
or
idiv
or
mov
(bad)
and
inc
sbb
mov
cmp
xor
(bad)
retf
shr
jle
dec
jl
out
dec
cld
clc
lods
cwde
inc
mov
jne
pop
mov
lds
rol
stc
in
lock
push
jle
cld
clc
lea
cdq
cli
int
mov
jle
pop
or
iret
imul
mov
fist
push
rol
rol
sbb
in
movs
xor
pop
(bad)
pop
shl
and
mov
repnz
push
push
iret
and
repz
push
ds
dec
movs
mov
pop
dec
popa
fstp
dec
lahf
std
mov
jg
xor
xchg
dec
sub
adc
clc
jno
mov
or
movs
mov
cmp
and
jmp
into
outs
inc
inc
push
jae
loopne
mov
fnstcw
pop
and
call
imul
shl
out
or
dec
push
cli
pop
(bad)
sbb
aas
or
adc
(bad)
(bad)
pop
dec
jmp
xor
pop
jmp
in
adc
cmc
mov
std
xchg
jecxz
sti
pop
dec
sub
sbb
int
pop
repz
cmps
mov
push
or
lods
mov
or
pop
fs
sti
jecxz
xchg
fisttp
hlt
outs
popa
adc
aas
test
dec
and
pop
mov
inc
out
inc
mov
pop
std
lods
imul
fisttp
cld
mov
mov
leave
sti
stc
std
mov
dec
mov
dec
mov
pop
inc
scas
pop
mov
stos
dec
inc
(bad)
xchg
(bad)
out
mov
in
es
iret
imul
cli
add
ins
pop
sar
daa
push
in
push
sub
mov
ja
push
clc
fld
sti
jmp
call
cmps
dec
(bad)
mov
cli
mov
dec
sti
test
push
les
cmp
(bad)
xchg
repnz
or
mov
clc
sbb
jmp
sbb
cmp
out
inc
call
cmc
leave
pop
cmps
mov
dec
sub
std
pop
dec
retf
outs
cld
mov
mov
sbb
aas
jmp
arpl
(bad)
sti
hlt
dec
jmp
mov
mul
add
(bad)
mov
sti
xor
dec
cmc
cmps
(bad)
ffreep
addr16
mov
jg
jmp
jg
jle
dec
dec
xor
xchg
jmp
test
daa
call
daa
loope
jg
xchg
call
mov
stc
adc
pop
shr
call
and
mov
inc
sbb
nop
in
adc
hlt
mov
lods
cmp
aaa
in
cld
pop
mov
neg
cld
dec
movs
xchg
inc
hlt
retf
cld
stos
mov
pop
add
sti
mov
or
sbb
test
out
dec
jg
fstp
out
std
ss
mov
dec
repz
sar
std
es
mov
(bad)
ds
scas
jle
dec
(bad)
repz
xchg
jmp
ja
inc
std
inc
aam
outs
hlt
leave
mov
scas
adc
lahf
pop
repnz
mov
int
mov
fimul
jge
cmp
inc
std
iret
jg
inc
pop
fs
sbb
cmp
sbb
xor
cli
xor
call
std
das
sub
(bad)
jmp
dec
jg
cld
cmc
out
cmps
mov
sbb
sub
jg
pop
and
aas
jae
dec
hlt
cli
push
shr
or
jmp
and
call
scas
(bad)
aas
or
dec
mov
test
mov
and
dec
mov
and
(bad)
sbb
pop
jl
out
(bad)
jbe
icebp
jl
sbb
or
lods
jp
data16
cld
daa
mov
test
retf
jg
xchg
mov
jle
dec
call
sub
test
mov
(bad)
xchg
stc
lods
call
ss
(bad)
sub
std
xchg
(bad)
jp
push
sti
dec
mov
test
mov
jmp
sti
out
out
mov
dec
int3
stc
mov
cs
mov
gs
loopne
mov
imul
out
push
outs
inc
sbb
xor
setp
int
xchg
pop
div
cmps
jbe
xor
call
pop
sar
or
dec
jnp
lahf
sub
fcmovne
cmp
cmp
lahf
mov
ins
(bad)
cld
fist
in
mov
(bad)
mov
call
pop
shl
lahf
adc
mov
sub
adc
aaa
mov
add
sti
jg
(bad)
sar
scas
mov
mov
sti
mov
fidivr
adc
lahf
jmp
mov
(bad)
pop
inc
lahf
std
ret
(bad)
cmp
test
inc
scas
movs
(bad)
pop
push
mov
jne
cld
xchg
pusha
std
fxtract
sti
mov
sar
push
out
pop
mov
aas
xchg
(bad)
inc
loope
jge
stc
(bad)
out
mov
fisttp
(bad)
outs
inc
(bad)
call
(bad)
adc
jnp
not
hlt
fucomp
inc
aas
push
(bad)
push
stc
sar
in
aas
movs
mov
outs
cmps
lahf
jg
std
call
es
xor
inc
out
inc
xchg
sub
call
in
mov
cld
ss
mov
cli
(bad)
out
mov
jmp
pop
hlt
cld
or
lods
out
movs
lahf
jg
rcr
sbb
inc
aas
(bad)
jnp
(bad)
sbb
call
idiv
mov
pop
mov
sti
imul
idiv
repz
call
lahf
std
or
inc
or
loop
xchg
mov
pop
mov
jmp
repnz
sub
test
dec
jg
add
aaa
cli
int
cmp
add
mov
mov
mov
aam
das
mov
dec
call
(bad)
adc
dec
and
ror
dec
jg
jge
adc
idiv
push
jp
pop
mov
sti
out
cmps
idiv
sar
outs
dec
out
cld
mov
fldcw
movs
lahf
jg
outs
sub
aaa
(bad)
clc
outs
sub
mov
(bad)
iret
call
mov
iret
call
inc
stc
out
dec
out
mov
dec
fs
call
(bad)
jg
ins
(bad)
cmp
test
adc
out
dec
(bad)
jmp
rol
dec
(bad)
jmp
(bad)
jg
sar
test
out
dec
(bad)
push
jmp
call
fistp
jge
dec
rol
(bad)
std
std
jnp
fnstsw
lock
xor
(bad)
(bad)
mov
xchg
push
fwait
xor
(bad)
mov
or
cmp
ss
mov
(bad)
push
(bad)
out
fist
nop
jg
cli
std
lahf
and
lock
adc
ret
(bad)
scas
inc
mov
ss
repz
cli
int
pop
cmp
iret
jg
std
mov
hlt
fidiv
sti
aas
inc
mov
pop
dec
dec
jmp
(bad)
cmp
sti
jg
aas
call
jmp
hlt
fstp
mov
aas
lahf
(bad)
pop
hlt
fnstcw
repz
lock
mov
cli
out
mov
(bad)
fisttp
jg
std
std
sub
out
mov
aaa
call
retf
cli
push
(bad)
sar
push
jp
mov
call
mov
hlt
(bad)
aas
mov
sub
mov
fdivrp
push
jge
shr
call
fisub
repz
mov
dec
lahf
std
hlt
outs
sub
sar
outs
cs
aam
(bad)
movs
lahf
call
outs
retf
xchg
loopne
imul
xchg
jle
xlat
gs
inc
fcomi
or
pop
sti
in
cld
sbb
popf
cld
cmp
mul
xlat
call
push
(bad)
jg
scas
adc
jecxz
icebp
lahf
lahf
mov
dec
(bad)
jg
(bad)
(bad)
jmp
inc
hlt
(bad)
aas
cwde
(bad)
inc
sar
push
lahf
inc
(bad)
dec
(bad)
jg
std
jmp
xor
dec
(bad)
dec
(bad)
(bad)
std
scas
jmp
scas
inc
sub
(bad)
(bad)
in
jg
xchg
mov
cmps
(bad)
jg
(bad)
dec
dec
jmp
in
aad
(bad)
sti
or
(bad)
jg
std
jmp
(bad)
call
(bad)
dec
cli
(bad)
mov
jmp
call
(bad)
jmp
cli
jmp
jmp
aas
movs
(bad)
jg
(bad)
fbld
lahf
sar
lahf
sar
jg
(bad)
inc
sar
das
call
dec
(bad)
jmp
call
jmp
jmp
(bad)
call
(bad)
jg
(bad)
dec
sar
dec
(bad)
jmp
(bad)
mov
sar
jg
pop
xchg
dec
(bad)
jmp
jmp
std
call
(bad)
jge
call
std
(bad)
fcomi
jmp
jmp
inc
call
inc
call
(bad)
inc
jmp
dec
mov
(bad)
mov
sar
dec
(bad)
aas
inc
(bad)
jmp
std
(bad)
fbld
(bad)
call
(bad)
push
cli
(bad)
dec
push
(bad)
(bad)
cmp
(bad)
jg
cli
call
(bad)
jnp
dec
call
in
adc
pop
push
popa
jne
imul
call
dec
(bad)
jmp
push
test
cmp
sti
push
out
leave
int
jl
dec
cld
add
call
sar
lahf
cld
pop
sub
dec
mov
dec
into
add
inc
test
xchg
aas
xchg
push
test
std
mov
xchg
xor
and
call
aas
xbegin
xor
out
and
cld
aas
nop
iret
mov
icebp
mov
daa
xor
xchg
xor
out
sub
(bad)
pop
xchg
jle
jl
jecxz
jecxz
push
pop
mov
and
mov
adc
ret
cmp
mov
cld
retf
adc
(bad)
dec
jbe
pop
ror
icebp
mov
call
and
inc
sub
(bad)
shl
add
or
mov
mov
add
dec
pop
std
ins
add
or
pop
pushf
mov
lods
jmp
lea
jle
sbb
jb
je
pop
jno
je
jae
jmp
clc
in
aas
(bad)
outs
pop
loope
add
pop
mov
dec
adc
mov
fsubr
mov
pop
xchg
(bad)
jmp
sub
push
pop
push
inc
dec
push
push
or
add
mov
or
sar
pop
jg
adc
clc
pop
icebp
sbb
jecxz
aad
in
xor
not
loop
jg
(bad)
jmp
mov
sti
push
loopne
pop
popf
jnp
stos
jae
gs
sub
into
cmp
clc
sub
lock
loope
scas
lock
lock
jle
loopne
cld
clc
loop
test
(bad)
adc
std
jge
jle
neg
repz
icebp
sbb
jmp
addr16
lock
(bad)
test
movd
repz
outs
mov
inc
jmp
sar
and
pop
call
jle
jnp
jecxz
rcl
clc
inc
icebp
sar
(bad)
outs
cld
neg
mov
adc
das
inc
mov
paddd
lock
loope
in
pop
(bad)
paddd
lock
or
inc
clc
mov
cmp
outs
jg
ds
std
lock
sbb
mov
lock
inc
daa
clc
in
pop
push
psllw
mov
aaa
movs
call
imul
loopne
fist
mov
aaa
(bad)
outs
pushf
aas
sti
cmc
add
out
shr
jg
jp
into
sar
push
mov
mov
mov
pop
(bad)
outs
call
jle
daa
icebp
sbb
icebp
aaa
ds
cmp
arpl
loopne
(bad)
out
or
clc
in
iret
lds
jns
cmps
fldenv
icebp
rcl
pop
test
lock
loop
or
adc
jae
lock
lock
icebp
fstp
retf
aad
mov
(bad)
mov
or
cld
hlt
shl
mov
mov
lahf
sbb
add
loop
fisttp
pop
mov
jle
cld
clc
ins
push
jle
jl
pavgb
inc
or
cmp
pop
lock
(bad)
sub
in
fucomip
loopne
mov
cld
cli
outs
loop
(bad)
push
(bad)
and
lds
sbb
mul
mov
mov
(bad)
push
cld
(bad)
or
(bad)
(bad)
push
pop
xor
jmp
call
imul
das
jmp
inc
mov
call
jg
out
stos
pop
arpl
sbb
pop
std
sbb
or
or
(bad)
aas
popf
(bad)
call
sar
(bad)
jmp
jg
dec
inc
jg
fldcw
push
sub
movs
sahf
mov
(bad)
aas
inc
(bad)
call
std
aas
cmps
call
shl
ret
jle
jno
(bad)
xchg
pop
push
sbb
mov
cmp
dec
std
call
jmp
cmp
xor
(bad)
fbld
aas
movs
(bad)
call
(bad)
(bad)
(bad)
mov
jmp
inc
(bad)
jns
mov
mov
clc
xor
clc
icebp
fbld
sar
mov
(bad)
ds
ss
cmp
aas
stc
pop
push
sub
push
call
leave
aas
cwde
xor
cli
mov
push
sar
outs
rcr
sar
pop
xchg
mov
jae
jmp
dec
leave
into
aas
push
xchg
addr16
jp
adc
jo
int
inc
mov
aam
sub
mov
jecxz
pop
(bad)
fistp
cld
mov
in
cmp
mov
pop
add
sub
fnstsw
fadd
pop
inc
ds
test
in
scas
(bad)
outs
mov
icebp
sbb
repnz
jae
lea
idiv
adc
faddp
push
jg
inc
pop
dec
imul
add
mov
add
shl
out
paddd
jl
ja
cmp
in
das
ret
push
(bad)
ins
cld
clc
std
js
out
ja
sbb
jecxz
or
outs
iret
push
(bad)
(bad)
aam
jl
addr16
sbb
aas
mov
std
inc
xor
(bad)
mov
sti
pop
jle
shr
pop
vmread
xchg
out
dec
(bad)
outs
mov
aaa
pop
in
adc
(bad)
loopne
les
pop
mov
out
sar
jne
ds
clc
lahf
lock
mov
dec
cld
neg
jle
ins
push
dec
cmc
aas
pop
and
fwait
sbb
pop
(bad)
call
xchg
out
jg
ds
add
cld
inc
clc
loopne
cmp
mov
jecxz
loopne
ror
xor
clc
in
pop
inc
daa
ins
rcr
inc
cli
sti
mov
movs
shl
retf
cmp
fimul
out
jg
mov
call
out
repnz
stc
xchg
and
cmc
dec
mov
mov
inc
out
sub
sbb
mov
sub
jle
push
(bad)
mov
cmp
sti
shr
shl
push
mov
stc
leave
lahf
inc
mov
aas
jmp
out
inc
mov
pushf
ror
pop
mov
test
cmps
mov
mov
and
push
push
dec
out
sub
out
pop
lahf
loope
popf
or
ja
mov
pusha
or
add
mov
loopne
ret
(bad)
jmp
pop
ret
(bad)
stc
shr
add
loope
arpl
push
(bad)
cld
loopne
les
jle
es
push
out
dec
add
jg
pop
xor
call
jle
gs
not
push
add
(bad)
loopne
pop
add
pop
jge
cmps
loop
fist
and
loopne
retf
jp
push
pop
outs
(bad)
popf
setbe
mov
lods
cmp
aas
inc
jle
adc
out
loopne
ret
pop
dec
add
dec
add
mov
mov
pop
mov
shl
pop
in
outs
test
xchg
pop
mov
fs
test
bound
or
cdq
call
test
loope
rcl
int
sti
jg
inc
icebp
and
or
jmp
mov
icebp
fcomip
shl
(bad)
scas
loope
add
pop
std
sbb
bound
sbb
ret
out
adc
jnp
sbb
inc
cli
dec
imul
enter
in
(bad)
mov
jg
es
loope
mov
push
jmp
jmp
mov
sar
repz
test
push
and
xchg
ds
stc
aas
std
outs
xchg
xchg
lahf
cld
das
mov
out
dec
in
(bad)
mov
paddw
ret
push
sub
in
or
cld
adc
pop
sbb
and
mov
jg
jl
xlat
jmp
xlat
lahf
cld
aad
in
jg
in
jmp
hlt
lahf
lds
jg
cli
aas
loopne
lahf
dec
imul
inc
jg
lods
or
popa
mov
lock
and
mov
outs
inc
out
mov
pop
mov
lock
push
pop
mov
out
sbb
xor
cmp
div
jle
jl
lock
in
ja
outs
sbb
cld
xor
fisttp
std
mov
inc
idiv
sbb
inc
jb
pop
loop
aas
add
sti
clc
or
fild
push
fcos
outs
imul
call
mov
das
movs
adc
outs
dec
sub
xchg
std
xchg
cs
add
test
popf
sbb
ror
add
or
xor
mov
test
push
jg
cmps
std
dec
lahf
cld
leave
mov
clc
shl
mov
loope
add
ja
adc
adc
fist
inc
and
xor
mov
pusha
adc
and
cld
push
sbb
rcl
cmp
inc
mov
pop
loop
add
sbb
(bad)
clc
loopne
enter
push
sar
jmp
mul
rcr
mov
repz
shl
repz
lods
test
sbb
(bad)
(bad)
xchg
jg
mov
sar
loop
movs
adc
dec
daa
fisub
push
adc
mov
mov
cmp
pusha
pop
xchg
dec
cld
test
jmp
dec
repz
push
aam
psubq
cmp
jb
das
sbb
out
dec
push
fwait
retf
adc
in
outs
sub
xor
out
(bad)
dec
icebp
mov
cmps
or
and
in
dec
inc
std
leave
jmp
clc
ja
cmp
out
sbb
fld
(bad)
cld
lahf
std
scas
mov
or
(bad)
mov
ret
lods
sub
sbb
stc
into
scas
adc
jge
mov
inc
call
jmp
and
adc
sbb
aas
inc
nop
xchg
push
push
movs
push
call
jmp
popf
(bad)
mov
repnz
fwait
(bad)
sbb
movs
ret
mov
dec
xchg
outs
dec
jmp
stc
aaa
shl
out
pop
xchg
ret
in
dec
(bad)
cmp
clc
repz
dec
(bad)
in
hlt
(bad)
icebp
loop
xchg
(bad)
push
clc
icebp
(bad)
xchg
inc
cli
and
jae
mov
inc
lahf
xchg
mov
xchg
xor
fbld
scas
push
(bad)
ins
mov
xor
stos
test
aas
xchg
mov
mov
je
cli
jmp
outs
mov
ja
ds
imul
hlt
leave
pop
icebp
mov
dec
inc
add
xor
jecxz
daa
dec
outs
dec
push
repnz
jg
cmp
fwait
cld
add
cmps
pop
lahf
cld
dec
mov
cld
iret
xchg
or
cmps
push
or
and
cld
sti
dec
jne
pop
test
fild
(bad)
inc
jmp
jg
lods
adc
push
xchg
fprem
retf
dec
shl
cmps
push
lahf
cld
pop
mov
dec
push
jg
fs
and
jg
popa
call
adc
mov
dec
xor
fwait
xchg
or
dec
xor
mov
les
jmp
and
jmp
dec
mov
cmc
fwait
jg
pop
sub
shr
call
outs
pop
arpl
lods
ret
(bad)
jmp
jl
imul
lds
or
lock
pop
mov
mov
cld
sbb
inc
cld
pop
clc
icebp
pop
shl
(bad)
cmp
mov
lea
push
sbb
imul
add
stos
xchg
mov
sar
lods
inc
fnstsw
push
sub
out
lahf
int
mov
dec
ror
aas
repnz
sbb
cmp
clc
int
daa
push
jge
pop
cld
ss
das
mov
sti
nop
out
push
int
sub
(bad)
fcomp
repz
xchg
jg
dec
dec
hlt
mov
in
cli
in
enter
ds
mov
pop
pop
stc
std
ins
dec
inc
and
and
sub
call
shl
repz
push
das
clc
in
clc
popf
imul
pop
mov
stc
daa
gs
out
call
fstp
popf
mov
stos
fcomip
aaa
sbb
repnz
push
ds
push
jmp
jmp
xchg
push
(bad)
push
std
xchg
icebp
jecxz
dec
pop
inc
lods
(bad)
jge
call
icebp
daa
jecxz
aas
sahf
fwait
adc
xchg
ins
dec
push
jl
test
xor
iret
cwde
jo
or
dec
bnd
ret
nop
push
clc
ja
xchg
fbstp
std
pop
test
outs
lods
or
fbld
cmp
pop
inc
jmp
sub
sbb
pop
(bad)
mov
cld
jnp
frstor
push
outs
dec
mov
in
std
dec
leave
jmp
in
aas
stc
movd
dec
(bad)
fstp
not
in
push
mov
sbb
dec
jge
cmp
jmp
fist
cdq
mov
scas
or
sti
idiv
push
pop
fdivrp
xor
cld
dec
xchg
adc
cli
out
pop
xchg
xlat
aaa
mov
fild
pop
das
mov
test
loop
cli
stc
out
ja
add
cld
mov
out
dec
(bad)
and
stc
fcomip
pop
xchg
push
cmps
(bad)
(bad)
dec
fs
mov
aam
sbb
inc
hlt
(bad)
fild
leave
mov
fwait
retf
cli
fnstsw
lea
in
jmp
fild
cmps
add
pop
inc
mov
lahf
inc
outs
sub
mov
and
das
mov
std
out
push
repz
(bad)
mov
bnd
push
mov
imul
mov
fild
inc
lahf
std
xchg
hlt
out
lahf
dec
jg
inc
add
aas
movs
lahf
scas
jmp
jg
jge
nop
pusha
pop
ror
pop
inc
ins
dec
stc
push
push
sti
dec
lahf
ds
adc
lock
cli
cld
clc
mov
mov
pop
lahf
push
ds
jg
mov
popf
in
jg
int
lods
hlt
mul
(bad)
xor
call
in
or
aas
dec
out
rcl
mov
sar
mov
jo
jmp
jge
out
aas
movs
lahf
out
call
ficom
call
mov
call
push
outs
sub
cmp
pop
stc
fcmovne
sbb
push
cli
ins
inc
out
std
cmps
hlt
(bad)
aas
xchg
(bad)
(bad)
fisttp
out
das
clc
dec
fs
imul
cmp
hlt
into
dec
rcr
mov
test
pop
dec
jo
jne
call
sar
xchg
jne
jg
mov
pop
xchg
and
mov
jle
pop
xchg
pop
inc
dec
dec
shr
mov
mov
and
aaa
ror
jg
jle
xchg
hlt
ffree
fisttp
mov
adc
jle
addr16
inc
mov
xchg
or
shl
jg
sar
call
mov
call
pop
idiv
sub
xlat
add
lahf
movs
ja
es
std
iret
movs
iret
push
hlt
std
cs
pop
std
push
mov
imul
rcr
fbld
mov
sar
pop
hlt
call
hlt
(bad)
dec
jo
ror
jg
aaa
xchg
jne
jg
(bad)
call
(bad)
and
std
daa
ror
fild
mov
fdivrp
mov
scas
inc
mov
mov
mov
sti
mov
mov
cld
xlat
rcr
jg
std
std
lahf
adc
jmp
jmp
ret
jnp
xor
dec
in
mov
stc
test
call
std
std
jg
mov
mov
idiv
dec
jge
call
ds
inc
sar
addr16
scas
inc
lock
push
mov
(bad)
ja
(bad)
mov
inc
idiv
sub
push
pop
cwde
addr16
and
and
and
mov
jmp
cmc
fcomp
std
(bad)
mov
cli
sti
mov
ss
outs
sub
mov
jmp
(bad)
jnp
out
ss
cmps
mov
cmps
push
aas
aas
inc
lahf
std
inc
add
idiv
lea
dec
in
(bad)
xor
scas
pop
jle
jg
stc
rcl
out
jg
ins
mov
stc
outs
movs
lahf
xlat
aam
(bad)
call
outs
add
nop
(bad)
(bad)
fldcw
hlt
clc
fucomi
popf
pop
lahf
(bad)
(bad)
std
fist
mov
movs
mov
adc
pop
ja
sar
call
cli
in
jg
sub
fidivr
aam
or
in
push
sar
jmp
push
notrack
cli
cld
jmp
mov
jmp
std
adc
repz
lock
sub
out
aas
mov
sub
aad
std
call
(bad)
jg
mov
dec
dec
jmp
xchg
cmps
mov
enter
imul
pop
xchg
(bad)
xlat
jo
jmp
scas
and
sahf
dec
jle
jo
repz
dec
std
aas
push
sar
push
aas
pop
enter
sbb
jo
pop
mov
dec
hlt
call
inc
(bad)
in
add
imul
push
ror
adc
call
std
push
call
std
jmp
dec
dec
(bad)
aas
xchg
call
cli
(bad)
fisttp
(bad)
sti
call
call
hlt
(bad)
inc
(bad)
call
cli
(bad)
inc
push
jle
loop
cli
(bad)
out
inc
(bad)
(bad)
fucomp
jmp
inc
std
dec
std
(bad)
cmp
push
dec
cli
call
inc
(bad)
jmp
sar
call
call
(bad)
jmp
(bad)
jg
std
(bad)
out
cmps
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jg
(bad)
call
(bad)
inc
std
call
(bad)
mov
fdivp
(bad)
fisttp
(bad)
jg
cli
call
jmp
(bad)
call
(bad)
out
inc
call
jmp
(bad)
dec
call
jmp
jmp
hlt
(bad)
mov
sar
jmp
cli
(bad)
mov
jmp
(bad)
mov
cli
(bad)
dec
push
std
push
hlt
(bad)
cmp
(bad)
jnp
dec
call
jg
(bad)
(bad)
cmp
pop
sar
das
jmp
inc
(bad)
jmp
lahf
dec
(bad)
dec
(bad)
jg
std
jmp
(bad)
(bad)
std
hlt
(bad)
jg
(bad)
jmp
sar
call
(bad)
jg
(bad)
(bad)
out
call
call
clc
jne
jp
(bad)
mov
sar
mov
push
push
fdivr
cli
dec
cli
(bad)
out
dec
call
jmp
(bad)
jmp
mov
mov
jle
cmps
test
std
push
icebp
jecxz
cld
pop
sahf
push
mov
cmp
leave
mov
icebp
scas
jae
(bad)
rol
jg
(bad)
cli
daa
and
cs
daa
jg
out
sub
xchg
lock
dec
jmp
cld
clc
sub
neg
sti
mov
or
leave
lahf
and
jg
mov
mov
sbb
(bad)
stc
pavgb
mov
lahf
dec
jle
adc
out
sub
lahf
pusha
jae
(bad)
cld
dec
icebp
sbb
std
xchg
inc
push
dec
push
cld
sbb
add
or
cmps
push
(bad)
fist
lahf
dec
call
pop
mov
cmc
dec
enter
mul
ja
jae
in
icebp
pop
cld
jmp
loopne
pop
inc
jle
xchg
mov
idiv
jo
mov
mov
jb
cmc
cmp
jnp
cld
cdq
clc
icebp
add
cmp
mov
fist
sbb
mov
icebp
sbb
dec
pop
ffreep
pop
jg
call
loope
mov
pop
lahf
sbb
mov
add
mov
shl
clc
sbb
scas
jle
cld
(bad)
or
or
std
jge
idiv
outs
jg
jle
scas
lock
or
pop
clc
in
outs
(bad)
call
jle
cmp
fstp
sbb
and
test
aaa
into
inc
call
clc
sbb
rcr
clc
retf
icebp
fistp
mov
xor
clc
clc
loopne
(bad)
out
sub
inc
shr
lock
loopne
mov
jle
mov
fistp
jge
jecxz
mov
(bad)
xchg
pop
das
icebp
jecxz
rcr
inc
lock
fadd
outs
jo
(bad)
shr
sti
mov
in
jle
mov
lock
scas
xchg
jle
loopne
mov
inc
cmp
inc
jle
push
dec
push
xor
clc
div
fcmovnu
(bad)
(bad)
push
jl
cmp
cld
jae
and
mov
mov
out
ret
cs
sbb
mov
pop
xchg
(bad)
outs
jl
out
lds
jl
lock
loope
outs
js
xchg
imul
pop
sbb
clc
icebp
rol
or
test
into
icebp
cmc
inc
imul
loopne
push
clc
jmp
inc
(bad)
ds
lea
push
loope
cmp
jbe
shl
cld
pop
enter
ds
sub
(bad)
sub
aaa
aas
clc
or
scas
mov
cmp
imul
mov
clc
lahf
mov
(bad)
jl
neg
in
mov
clc
das
loop
mov
sar
fistp
clc
out
lds
cmp
sti
fwait
icebp
fistp
(bad)
dec
cli
lea
jg
ds
das
lock
test
stos
fucomip
loopne
mov
in
cmpps
mov
sbb
aas
clc
add
add
aad
dec
loop
(bad)
loopne
jl
outs
loop
push
cld
div
loop
inc
cld
div
jbe
out
jg
(bad)
imul
cld
ss
add
in
loopne
ret
int3
cmp
mov
sbb
sar
xchg
retf
dec
mov
out
lds
sbb
mov
ja
(bad)
inc
cld
sbb
clc
cmps
icebp
rcl
dec
jle
sbb
jns
mov
jmp
pop
outs
(bad)
xor
outs
jg
jle
xor
std
retf
cmp
cld
test
inc
shr
(bad)
jmp
ds
sub
inc
jle
jg
cdq
hlt
(bad)
pop
loop
dec
jg
xlat
nop
je
outs
inc
jmp
lods
pop
ret
cmp
pop
hlt
inc
hlt
call
sahf
sar
jg
xlat
jo
movs
xchg
mov
mov
inc
xchg
dec
push
call
(bad)
jmp
pop
call
mov
jg
psrad
pop
hlt
(bad)
call
sar
xchg
add
cld
xor
ror
call
(bad)
(bad)
hlt
push
inc
jg
std
dec
hlt
(bad)
aas
fwait
(bad)
call
cli
(bad)
fisttp
jnp
dec
pop
cs
pop
jmp
(bad)
aas
movs
(bad)
push
hlt
call
(bad)
(bad)
mov
sbb
fild
(bad)
jg
std
jg
(bad)
dec
push
std
dec
(bad)
out
inc
(bad)
inc
jle
jno
jle
std
call
sar
jg
and
bound
push
scas
out
xor
mov
jns
(bad)
ror
lahf
jge
outs
std
jbe
hlt
jle
jl
das
cld
cmp
out
cdq
call
push
clc
mov
out
dec
retf
cli
in
nop
pop
jecxz
enter
test
lds
pop
pop
and
fwait
lock
dec
imul
adc
xchg
rcr
call
cdq
icebp
and
xor
outs
call
imul
loope
xchg
xor
in
sbb
push
sahf
loopne
mov
add
mov
rcr
cmp
(bad)
and
xchg
mov
retf
or
cld
jae
add
push
jmp
aaa
fmul
(bad)
fistp
dec
jg
pop
and
dec
rcl
xchg
xlat
dec
(bad)
sbb
dec
sub
call
lea
pop
cld
cmc
clc
adc
(bad)
push
jl
pop
cld
jns
jno
loopne
(bad)
(bad)
(bad)
loopne
rcl
sbb
push
cld
xchg
mulps
jge
imul
icebp
sbb
shl
popf
xlat
dec
gs
div
cld
test
aaa
sub
dec
dec
jle
aad
fild
in
mov
outs
loopne
pop
and
sbb
pop
test
pop
icebp
sbb
fcomp
dec
jg
jl
xor
clc
push
lock
cwde
mov
lock
iret
sbb
cmp
cld
lods
clc
cli
lahf
inc
ret
mov
cld
and
hlt
rcr
add
push
mov
jle
loopne
bound
dec
mov
mov
fadd
dec
or
pop
xchg
sbb
iret
leave
mov
aas
cs
mov
(bad)
sahf
fbld
leave
fild
lods
mov
add
sbb
rcl
int
push
jno
dec
lahf
(bad)
sahf
add
(bad)
out
cli
dec
mov
mov
in
lods
jns
pop
mov
add
pop
in
mov
inc
xchg
retf
stos
hlt
jg
ds
movd
scas
rcl
jb
sbb
adc
cmp
lods
lock
clc
(bad)
icebp
push
pop
enter
cld
cmps
pop
inc
es
cmp
adc
sbb
pop
inc
icebp
xor
and
adc
clc
std
paddd
clc
cld
loopne
shl
push
call
jg
jle
and
cmp
jbe
dec
dec
imul
or
pop
pop
loop
out
jb
loope
psubusb
mov
into
ror
mov
sahf
jecxz
das
cmp
push
sbb
(bad)
dec
sbb
ror
sbb
inc
pop
sub
movs
shl
xor
sub
js
xchg
ins
aaa
mov
sbb
add
jle
cmp
aas
pop
pop
cld
xchg
clc
jno
lock
loope
das
cmp
mov
push
cld
sbb
add
in
jle
dec
jae
dec
push
cdq
test
inc
cli
or
(bad)
mov
lods
sbb
sbb
imul
aaa
(bad)
call
lahf
inc
inc
(bad)
jmp
aas
xor
fadd
cli
lock
loop
(bad)
ret
es
packuswb
xchg
test
add
out
ds
stc
das
cld
outs
jmp
and
dec
jl
jb
cmp
call
jb
nop
ret
sub
loop
jl
das
push
ret
xchg
mov
jg
(bad)
outs
(bad)
mov
mov
movs
mov
imul
xor
cld
movs
mov
daa
jg
cli
das
loop
aas
popf
xor
lahf
cld
or
fistp
inc
push
cmc
pop
sub
push
cli
hlt
pusha
(bad)
(bad)
pop
cld
not
cld
stc
sub
rol
int3
out
rol
sub
setle
cmp
es
mov
es
inc
clc
xchg
and
jg
aaa
jg
cld
imul
loop
(bad)
les
mov
xor
loopne
lds
pop
sbb
jecxz
push
dec
adc
fcomp
aaa
hlt
(bad)
out
stc
leave
dec
mov
dec
(bad)
jmp
gs
jg
mov
mov
inc
or
sbb
hlt
leave
mov
adc
inc
std
arpl
lods
and
std
xor
mov
jbe
xchg
int
xchg
(bad)
jp
jb
aad
push
icebp
xchg
enter
sti
fstp
movs
cwde
ror
fs
adc
jecxz
add
inc
dec
cld
adc
lahf
add
jg
and
inc
cli
pop
les
clc
sbb
cli
pop
jle
sub
(bad)
icebp
ror
outs
and
loop
sub
xchg
(bad)
lock
loopne
jle
jbe
and
js
lock
or
jecxz
cmp
ins
add
out
mov
xor
das
shr
outs
dec
cmp
(bad)
pop
imul
sub
(bad)
ins
push
jg
cmp
in
(bad)
jns
in
std
cmps
imul
cli
fisttp
push
jg
sub
inc
jmp
jl
cmp
ja
cmc
mov
popf
(bad)
ror
stc
or
out
jae
test
iret
mov
repnz
aaa
and
clc
sbb
stos
lock
sub
sub
xchg
sahf
retf
outs
and
movs
das
mov
dec
push
mov
or
das
clc
sub
sbb
lahf
(bad)
push
rcr
xor
adc
imul
jae
aas
(bad)
imul
(bad)
jg
pop
ret
in
pop
sar
mov
ss
(bad)
sbb
(bad)
mov
sub
cld
cmp
inc
inc
sar
cmp
aas
xchg
gs
jg
fld
push
dec
inc
pop
fisttp
pop
jg
cli
mov
lahf
cld
sub
(bad)
pop
mov
jg
cli
mul
xlat
mov
jecxz
dec
dec
shl
dec
and
daa
movs
call
ds
and
jmp
movs
inc
pop
sbb
pop
stc
pop
rol
jmp
pop
(bad)
ror
dec
das
add
jmp
mov
push
xchg
stc
out
xchg
div
sti
shr
push
fs
mov
ins
imul
aas
mov
clc
mov
clc
xchg
mov
sahf
and
mov
das
jle
sbb
out
inc
mov
nop
xchg
xor
rcl
xchg
mov
neg
in
std
in
dec
pop
mov
cmp
jle
pop
sub
ss
hlt
mov
in
cli
sbb
xchg
xor
pop
retf
ret
iret
dec
retf
inc
aam
dec
or
mov
xchg
in
test
outs
call
mov
cmp
sti
pop
ds
cmps
jle
dec
(bad)
icebp
fistp
neg
sahf
in
imul
jbe
aaa
and
std
sbb
jae
clc
xchg
mov
das
push
out
cwde
sub
aas
loop
add
(bad)
mov
pop
rol
mov
out
fdiv
jae
xor
pop
jmp
pop
add
xchg
js
mov
in
push
std
(bad)
lock
jg
inc
clc
icebp
outs
xchg
jl
jmp
jo
or
out
add
call
(bad)
(bad)
jg
cmp
call
inc
call
cli
mul
push
aas
movs
cmc
push
(bad)
mov
call
(bad)
repz
mov
ja
out
popa
(bad)
pop
loop
sbb
out
fistp
jnp
movs
cmp
(bad)
cmc
fist
loopne
jo
jae
neg
(bad)
dec
les
mov
inc
jl
arpl
daa
jmp
outs
dec
mov
dec
mov
frstor
(bad)
stos
fild
cmps
pop
mov
jmp
sti
dec
inc
fcomip
xchg
jg
es
cld
inc
mov
movs
aaa
jg
jg
pop
sbb
call
jg
sub
test
loop
cld
iret
ss
jle
xor
mov
push
sub
mov
mov
cmc
lahf
movs
enter
pop
lahf
cld
fstp
mov
mov
std
push
shl
aaa
and
imul
aas
xor
out
inc
test
sub
add
sub
jno
fmul
stc
(bad)
xchg
push
mov
mov
mov
add
lea
stc
das
jg
(bad)
out
(bad)
xchg
(bad)
call
adc
ss
cld
ja
in
stc
sbb
icebp
ja
xor
repz
mov
xor
repz
ret
in
dec
cli
in
mov
cmc
mov
das
jle
outs
xor
or
pushf
mov
hlt
in
out
int3
scas
jge
jge
xor
shr
lahf
call
outs
dec
push
jle
lods
ja
mov
and
ja
xchg
dec
mov
out
clc
sbb
movs
(bad)
mov
mov
sahf
(bad)
(bad)
jg
(bad)
ss
cld
push
jmp
imul
std
std
lahf
cld
xchg
(bad)
mul
inc
(bad)
xor
mov
jmp
(bad)
push
jmp
cli
daa
jge
xchg
std
xchg
fwait
aas
xchg
mov
jg
adc
test
jbe
aaa
cmps
ja
mov
xchg
jo
stos
jmp
cmp
(bad)
push
mov
xor
std
mov
cmp
(bad)
mov
call
jne
lods
pop
(bad)
fxtract
sti
pop
dec
(bad)
dec
test
aas
(bad)
loopne
mov
pop
inc
aas
jmp
push
and
mov
ds
call
js
jo
fs
in
xlat
mov
jnp
jge
in
hlt
repz
mov
cli
out
push
(bad)
fidivr
sar
jg
outs
sub
mov
add
pop
idiv
pop
call
lods
aad
sar
call
cli
call
out
inc
(bad)
dec
ins
aas
mov
add
addr16
call
notrack
shl
mov
cmp
xlat
sti
mov
xor
cli
mov
idiv
(bad)
rol
clc
sub
jmp
(bad)
fwait
add
arpl
icebp
fbld
dec
mov
call
inc
fnsave
mov
mov
jns
(bad)
addr16
aas
adc
jmp
dec
pop
enter
(bad)
sar
jg
jge
xchg
fidivr
sti
jg
out
(bad)
jns
repz
jmp
mov
call
mov
pop
(bad)
xchg
mov
sti
pop
and
push
std
(bad)
cmp
jmp
mov
dec
lahf
std
cs
out
mov
cli
cld
cs
retf
jg
pop
push
movs
out
dec
cli
cld
iret
mov
jnp
jle
cli
aam
out
dec
in
push
shl
pop
call
cs
push
aam
pop
cmps
(bad)
sbb
ja
adc
or
std
fist
cld
mov
hlt
repz
and
imul
loopne
cmps
add
ja
iret
jg
cli
stc
outs
ror
fisttp
fnstsw
cli
sbb
sbb
mov
dec
std
(bad)
sub
cld
sbb
out
cli
call
lock
sar
jmp
inc
test
retf
cli
fisttp
ja
sbb
sbb
sbb
out
dec
out
call
rcr
pop
(bad)
mov
cli
in
xlat
cmps
iret
jle
push
sub
idiv
lahf
ds
add
lea
fbld
sbb
and
mov
hlt
repz
mov
push
stc
mov
cld
iret
hlt
fnstenv
jmp
mov
push
mov
dec
mov
or
std
aaa
mov
stc
or
fsub
(bad)
dec
push
jmp
nop
xor
(bad)
pop
xor
leave
outs
and
jmp
test
pop
add
mov
xchg
push
fwait
inc
in
das
test
scas
movs
iret
mov
xor
push
mov
mov
mov
call
sti
sti
call
pop
add
jmp
leave
mov
push
add
out
mov
xor
std
(bad)
mov
notrack
jmp
call
sti
jmp
aaa
xchg
mov
daa
mov
div
stc
ss
jmp
and
test
lahf
inc
mov
or
ja
sub
cli
xlat
or
mov
hlt
fst
add
cld
pop
test
pop
(bad)
sbb
neg
mov
mov
hlt
retf
push
mov
jmp
(bad)
in
pop
cld
sbb
dec
mov
mov
idiv
pop
dec
sahf
sar
lahf
sar
pop
sar
jg
(bad)
lahf
sar
out
push
xlat
jo
call
dec
cmp
jg
std
pop
lock
(bad)
fisttp
jnp
(bad)
(bad)
cmp
call
hlt
(bad)
jg
(bad)
call
sar
call
cli
jmp
cmps
inc
xchg
inc
push
mov
loop
xor
or
jmp
push
mov
aas
dec
(bad)
inc
call
(bad)
inc
jmp
dec
mov
(bad)
mov
jecxz
dec
(bad)
inc
std
call
(bad)
call
(bad)
call
(bad)
jmp
jmp
std
call
stc
mov
inc
sar
jg
cli
inc
(bad)
cmp
(bad)
jnp
dec
call
jg
(bad)
(bad)
jnp
(bad)
jg
cli
(bad)
cmp
jg
(bad)
inc
std
dec
cmps
(bad)
push
(bad)
call
sar
dec
cli
call
(bad)
(bad)
cmp
(bad)
push
std
call
hlt
(bad)
jg
(bad)
call
cli
jmp
cmps
(bad)
call
call
xlat
sub
call
cs
call
call
jge
inc
pop
sar
jg
(bad)
inc
(bad)
jmp
call
call
(bad)
out
mov
(bad)
jg
(bad)
jmp
sar
call
(bad)
jmp
std
call
(bad)
jg
pop
xchg
(bad)
call
cli
inc
dec
jl
repz
jne
or
call
jmp
(bad)
aas
xchg
(bad)
jmp
cli
call
(bad)
call
std
call
mov
(bad)
jg
(bad)
(bad)
out
sar
call
(bad)
jg
(bad)
call
xlat
and
lods
jmp
dec
std
lahf
xlat
sahf
mov
js
dec
out
jb
scas
jmp
bound
pmaxsw
inc
cmp
(bad)
cld
addr16
icebp
xchg
jg
pop
nop
stos
cli
ja
cmp
sub
pop
sub
fdivr
jl
sub
in
(bad)
into
daa
jg
mov
repnz
xchg
aas
pop
pop
fidivr
adc
cld
xchg
hlt
data16
ffreep
mov
jae
(bad)
jmp
cmp
adc
jge
mov
and
fild
(bad)
inc
ret
xchg
ret
pop
pop
mov
adc
mov
icebp
fld
cld
idiv
imul
xchg
(bad)
xor
neg
aaa
pop
addr16
dec
pop
pushf
loope
retf
xchg
sub
add
clc
(bad)
lock
fist
mov
clc
jmp
stc
fisttp
nop
sbb
clc
loopne
ret
out
cmp
sbb
sub
and
sub
daa
loopne
into
xchg
dec
mov
leave
loope
rcr
clc
sti
ffreep
fisttp
das
lods
call
jae
sbb
push
ins
jecxz
pop
jb
or
rcr
jbe
adc
cmp
ins
sub
dec
stc
scas
fild
jg
jbe
imul
adc
call
mov
inc
outs
jmp
xor
imul
jl
(bad)
aas
or
out
add
outs
inc
repz
pop
jg
jle
into
pop
jg
jle
push
cld
test
cli
lahf
(bad)
xlat
jg
jle
aad
aas
push
pop
std
mov
clc
xlat
icebp
aad
lock
mov
cli
sar
cmp
mov
cmp
jg
(bad)
pop
pop
std
push
pop
lahf
loope
mov
outs
jmp
xchg
or
and
out
(bad)
fistp
icebp
or
scas
(bad)
scas
mov
inc
js
jg
mov
pop
mov
test
mov
mov
clc
xlat
lock
paddd
jl
jno
(bad)
loop
pop
jmp
mov
lock
cmp
sub
mul
mov
add
je
addr16
iret
sbb
dec
clc
icebp
icebp
rcr
scas
jmp
jl
pop
loop
jg
mov
sbb
loop
dec
test
in
pop
addr16
outs
mov
(bad)
sub
jbe
pusha
pop
pop
(bad)
icebp
and
push
jl
or
mov
(bad)
outs
jl
cmp
jae
repnz
jle
jl
out
aaa
ret
pop
mov
pop
call
xchg
jmp
cmp
mov
fstp
push
mov
ja
paddd
cld
jecxz
aas
xchg
out
mov
pop
shr
iret
aas
call
pop
ret
sub
push
cmp
clc
shl
stc
mov
cld
imul
loop
aas
sbb
push
jle
paddd
jl
ret
and
(bad)
push
mov
paddd
lock
fucomi
test
js
loope
mov
xor
loop
pop
aas
jle
loopne
jle
(bad)
ret
push
pop
stc
in
lock
stc
jmp
clc
in
pop
ret
addr16
int3
call
repz
loope
aas
push
(bad)
pop
clc
or
ret
outs
mov
sub
cmps
rcl
jg
cmc
xchg
mov
(bad)
stos
mov
sbb
icebp
mov
xor
(bad)
jg
(bad)
dec
mov
sti
xor
mov
(bad)
hlt
push
jmp
xlat
jo
std
pop
sar
push
aas
or
addr16
and
std
pop
cmp
dec
std
sbb
(bad)
cmp
inc
push
xchg
ret
pop
sub
pop
es
(bad)
movs
jg
(bad)
jmp
(bad)
jg
std
jmp
xlat
mov
hlt
(bad)
jg
(bad)
dec
(bad)
(bad)
jns
(bad)
mov
jmp
call
(bad)
jmp
dec
jmp
jmp
call
jg
(bad)
jg
(bad)
jg
(bad)
dec
pop
dec
push
adc
xlat
xchg
adc
daa
sbb
mov
jg
fsub
icebp
ja
inc
sar
aas
cmp
(bad)
jg
mov
xchg
mov
mov
loopne
jg
adc
mov
std
sub
stc
fwait
push
repnz
lods
mov
dec
cmp
mov
leave
jb
jns
pop
inc
cmp
retf
mov
cmp
inc
cmps
mov
gs
mov
mov
js
loopne
mov
clc
in
ffreep
outs
pop
loope
in
push
jle
sbb
jg
pop
and
or
dec
icebp
sbb
fisttp
mov
mov
outs
pushf
mov
je
imul
inc
pop
std
dec
push
std
not
cmp
inc
(bad)
mov
or
push
cli
fwait
loopne
jg
mov
fstp
adc
cmp
pop
adc
dec
fstp
movs
mov
clc
in
aas
(bad)
push
jg
jle
or
xlat
outs
and
pop
loop
xchg
sbb
xchg
loopne
clc
in
mov
pop
lods
push
ror
leave
ror
lods
nop
(bad)
mov
mul
jg
outs
mov
fdivrp
ins
icebp
fistp
and
mov
icebp
fld
lock
mov
(bad)
sbb
neg
mov
push
pop
call
jle
sahf
pop
(bad)
cmp
clc
in
paddd
icebp
add
repnz
shr
aas
clc
jmp
sbb
popf
push
pcmpgtw
in
iret
inc
repz
push
repnz
es
push
dec
dec
mov
call
inc
outs
inc
scas
shr
imul
inc
imul
mov
jecxz
fistp
rcr
call
retf
fnstsw
ror
mov
lds
dec
mov
lahf
cld
cmp
jmp
pop
mov
idiv
mov
mov
in
icebp
jecxz
mov
inc
jbe
add
pusha
jp
fdivrp
aaa
(bad)
sti
or
pop
or
std
push
ret
test
loopne
mov
cli
dec
pop
or
frstor
pusha
and
add
add
xabort
mov
clc
cmc
lock
cmp
xchg
xlat
mov
cmps
mov
int
or
sbb
xchg
or
sti
xchg
lock
jl
mov
retf
xchg
mov
xor
out
test
(bad)
pop
mov
jmp
jg
scas
adc
mov
inc
dec
jns
ds
gs
fild
or
cld
mov
retf
xchg
ss
jle
cmp
mov
xchg
mov
inc
imul
(bad)
mov
(bad)
fst
pop
mov
sub
fdiv
out
cmp
jbe
mov
clc
imul
fwait
std
sbb
xor
ds
xor
(bad)
aas
cmps
(bad)
call
(bad)
fisttp
jmp
jmp
iret
call
xor
dec
call
inc
inc
(bad)
jg
std
pop
push
add
mov
jbe
mov
adc
jg
leave
scas
and
std
lahf
jns
popf
xor
jmp
and
mov
and
daa
loope
mov
pop
in
stc
cmp
sub
(bad)
popa
pop
outs
mov
in
dec
call
clc
sbb
aas
stc
stos
fs
mov
inc
push
xlat
jg
mov
lahf
cwde
jle
aaa
(bad)
test
aas
cmps
dec
push
jle
sbb
push
loopne
idiv
out
pop
loopne
pop
cmc
lahf
loop
inc
mov
clc
add
fnstcw
clc
pop
mov
push
loopne
jg
mov
lea
jno
out
or
fadd
repz
lahf
cmp
jne
(bad)
fld
jmp
cmp
dec
cli
out
lock
out
in
jg
jg
out
sar
mov
(bad)
aas
stc
dec
pop
jmp
mov
lock
test
cmps
jne
jg
xchg
mov
(bad)
std
fs
out
(bad)
pop
fs
adc
jp
jge
stos
imul
jg
or
jl
push
loopne
add
leave
lahf
sub
ds
adc
(bad)
and
cld
pop
add
inc
imul
mov
sub
jle
mov
fcomip
loopne
jl
inc
loope
push
jl
jbe
test
(bad)
adc
mov
cvtps2pd
sub
jle
sbb
in
das
rol
call
push
movs
test
stc
ja
xchg
int
mov
fbld
idiv
shr
adc
data16
rcr
ss
stc
in
and
xlat
rcl
int3
pop
inc
push
das
mov
cmps
cli
repz
xchg
pop
mov
cli
cmps
shl
int3
lahf
inc
or
jg
outs
dec
pop
dec
int
jo
mov
lahf
sbb
loope
outs
jnp
mov
idiv
inc
sahf
(bad)
fild
cli
pop
retf
xor
sub
and
jl
jp
in
aaa
std
sub
aaa
mov
movnti
pop
hlt
(bad)
clc
pop
(bad)
cmp
(bad)
jmp
call
jmp
mov
xor
mov
std
sbb
pop
hlt
jmp
iret
call
mov
(bad)
(bad)
jge
(bad)
jg
std
inc
add
pop
add
inc
xchg
pop
jmp
out
lock
cdq
inc
add
cmp
lock
mov
add
push
les
push
cli
aas
idiv
lahf
and
jle
aam
or
pop
mov
pop
popf
dec
clc
cmc
das
xchg
push
mov
aaa
std
pop
icebp
jecxz
sti
pop
dec
fcomp
jbe
xor
outs
mov
icebp
pop
shl
aam
inc
mov
pop
loope
jg
mov
jo
lahf
ret
sbb
xor
sub
psrld
pop
fdivrp
add
out
xchg
xchg
idiv
daa
jg
out
inc
jae
test
repnz
pause
bound
xchg
(bad)
xchg
jmp
mov
mov
cli
add
mov
xchg
cmp
(bad)
pop
ds
sub
sub
leave
aas
dec
retf
dec
jmp
sahf
icebp
setb
clc
jnp
std
cli
cmp
jg
sub
aam
xlat
rcr
rcr
mov
stc
lahf
dec
aas
xor
outs
dec
mov
mov
mov
daa
call
outs
dec
enter
mov
adc
mov
xchg
(bad)
idiv
pop
fisttp
adc
out
cld
sbb
sub
lea
xchg
aaa
push
jg
cli
clc
lea
mov
scas
neg
cli
(bad)
out
hlt
imul
lock
hlt
push
std
jg
jae
mov
add
movs
dec
pop
sub
call
mov
(bad)
cs
clc
hlt
pop
sti
pop
mov
dec
clc
hlt
lahf
(bad)
pop
dec
xlat
in
cmc
pop
sar
mov
pop
fsub
outs
dec
add
movs
push
(bad)
jle
outs
cld
or
adc
xchg
mov
(bad)
ror
adc
sahf
mov
es
es
adc
mov
cld
arpl
or
neg
cmc
cmp
sub
das
and
xor
neg
not
in
(bad)
popf
mov
movs
add
(bad)
clc
ja
sbb
mov
(bad)
popf
fisttp
stc
push
jg
mov
iret
std
push
lahf
cld
rcr
adc
inc
mov
pusha
std
repz
cmp
lock
pop
(bad)
xlat
(bad)
mov
loopne
rcr
in
call
scas
adc
jmp
daa
dec
sbb
and
jns
stc
or
cmps
dec
xor
int
xchg
iret
test
out
int3
aas
call
call
div
pop
(bad)
es
mov
inc
movs
clc
ins
push
sar
call
(bad)
cmp
mov
mov
xchg
jg
mov
sbb
jg
or
mov
jmp
cld
xchg
add
ret
jg
aas
jmp
mov
(bad)
fdivr
cmps
inc
call
imul
mov
ins
jmp
out
add
sar
mov
out
fidivr
ret
fbstp
pop
div
pop
fs
repz
(bad)
std
jle
pop
jecxz
and
cli
jne
out
neg
mov
push
xchg
jg
mov
cli
test
jle
pop
xchg
sti
pop
jle
jb
call
(bad)
aad
xor
xlat
cld
lea
imul
xchg
mov
out
hlt
(bad)
dec
(bad)
dec
jle
adc
xchg
ficomp
ja
hlt
into
push
(bad)
jmp
and
or
mov
sar
dec
cld
das
cmps
iret
call
inc
jg
scas
aam
lahf
cmps
(bad)
call
pop
inc
lahf
mov
loope
dec
aas
lahf
rcr
in
and
std
cld
push
sar
(bad)
ds
sti
xlat
cmps
out
(bad)
es
std
pop
mov
inc
scas
cld
sbb
shr
call
scas
dec
loope
jge
shr
jg
std
lods
or
inc
jmp
jg
aaa
movs
xor
dec
pop
mov
das
or
cs
not
iret
jg
(bad)
push
hlt
ficomp
dec
mov
lods
vminps
out
(bad)
mov
inc
call
jg
pusha
cld
jb
xlat
push
mov
stos
jmp
(bad)
cmp
or
cld
xchg
aam
out
inc
fistp
cli
dec
movs
idiv
and
in
mov
(bad)
jmp
push
fistp
pop
retf
add
adc
fucomp
mov
out
call
mov
dec
jmp
data16
std
dec
push
jg
cmp
popf
out
mov
jmp
shl
xchg
aam
ja
out
jle
std
cld
gs
repz
adc
and
cli
aaa
xchg
cmc
push
lods
mov
pop
aam
mov
sbb
ja
fstp
(bad)
fs
in
fbld
jl
arpl
std
xor
jmp
int
sbb
outs
movs
ja
aaa
cli
push
mov
mov
stc
movs
hlt
fstp
dec
aas
push
not
(bad)
dec
jo
addr16
jnp
lahf
iret
jmp
cld
dec
call
sti
sub
inc
out
mov
std
std
pop
adc
push
std
std
pop
cld
(bad)
mov
sti
jnp
cmp
push
mov
aas
dec
out
std
push
hlt
(bad)
call
(bad)
fild
jg
out
std
(bad)
hlt
fdivrp
inc
lahf
std
out
aam
xchg
jmp
(bad)
mov
hlt
call
aaa
movs
fistp
sar
call
mov
jmp
(bad)
idiv
lea
mov
(bad)
aam
dec
jo
ss
inc
lahf
std
sub
mov
mov
xor
jns
mov
call
push
add
mov
ins
dec
pop
call
push
(bad)
pop
cli
out
push
jge
lahf
ror
aas
xchg
dec
mov
aad
inc
push
xchg
cdq
fistp
(bad)
jg
int
mov
call
std
inc
repz
ins
jg
jge
jg
out
push
sar
call
call
cld
pop
shl
mov
(bad)
(bad)
(bad)
pop
test
(bad)
arpl
idiv
(bad)
not
and
hlt
sti
outs
inc
out
jmp
daa
aam
xlat
cmps
iret
jg
fisttp
cmc
dec
ret
mov
std
ja
iret
dec
jmp
cld
cmc
mov
out
mov
cli
hlt
idiv
hlt
repz
mov
sti
(bad)
loopne
cs
mov
pop
jmp
loopne
das
xor
pop
inc
lahf
jmp
and
jae
adc
(bad)
fcmovnbe
addr16
mov
inc
xor
sar
call
jge
pop
sar
push
jmp
data16
jmp
mov
sub
(bad)
popa
hlt
jae
in
jmp
std
das
mov
pop
shl
mov
jmp
call
aaa
xchg
jne
jg
jle
dec
xor
std
push
in
cmps
jl
push
jg
pop
icebp
pop
stc
xor
mov
clc
pop
cld
sbb
nop
movs
mov
test
inc
mov
cmp
mov
clc
aad
loope
rcr
scas
and
adc
inc
call
imul
outs
sti
xor
xchg
(bad)
(bad)
out
sar
push
cli
(bad)
jg
(bad)
call
dec
fild
out
jmp
shl
iret
call
fbld
call
cli
dec
call
dec
(bad)
call
(bad)
mov
sar
call
(bad)
(bad)
imul
loopne
dec
(bad)
push
dec
dec
push
(bad)
push
hlt
(bad)
inc
(bad)
jg
pop
mov
(bad)
inc
cli
(bad)
out
dec
call
std
pop
mov
clc
nop
(bad)
jg
(bad)
inc
jg
(bad)
jg
call
(bad)
jg
(bad)
inc
(bad)
jmp
call
jmp
jmp
(bad)
(bad)
mov
(bad)
jmp
sar
dec
(bad)
jmp
jmp
call
(bad)
jg
pop
fwait
call
jmp
push
mov
inc
out
sar
pop
sar
lahf
sar
pop
sar
mov
push
jg
imul
jmp
cli
call
(bad)
call
(bad)
jg
std
call
movs
(bad)
push
hlt
(bad)
jg
(bad)
call
sar
push
(bad)
jg
(bad)
call
jmp
lock
mov
(bad)
(bad)
xlat
jno
or
jmp
call
mov
jmp
(bad)
jmp
call
dec
mov
(bad)
mov
sar
call
cli
(bad)
aas
inc
(bad)
push
call
(bad)
mov
hlt
call
(bad)
push
pop
sbb
std
push
dec
std
jg
xor
imul
dec
cli
xor
adc
jae
push
jo
aaa
loopne
jg
xchg
mov
in
xchg
mov
lahf
pusha
jecxz
leave
aas
enter
retf
sub
adc
sahf
jle
xlat
icebp
bound
test
dec
sub
shl
ds
mov
je
daa
jb
popf
adc
add
xchg
sub
jno
adc
retf
aas
fidiv
xchg
push
cs
add
pop
sahf
push
cld
add
dec
fs
sub
rcr
mov
fadd
out
pop
cmc
jno
test
ficomp
scas
clc
xor
clc
sbb
jg
cld
mul
(bad)
or
idiv
xor
lock
cld
mov
in
ffreep
outs
push
mov
lock
sti
aas
icebp
fstp
sub
call
(bad)
pop
cmps
pop
jg
jle
push
cld
inc
clc
xchg
sbb
sbb
cld
sub
mov
clc
arpl
push
scas
dec
std
sar
and
jbe
fist
cld
mov
outs
call
out
ja
sti
loop
call
pop
mov
jle
ss
fwait
icebp
sbb
add
xchg
adc
sar
clc
(bad)
inc
jmp
rol
out
mov
loop
call
or
movd
jle
xor
lahf
icebp
sbb
lods
dec
inc
aas
cmp
(bad)
lock
sar
clc
or
(bad)
cmp
aam
aas
sbb
xor
rol
fild
xchg
loope
mov
clc
in
das
lds
adc
std
hlt
rcr
vmread
jg
mov
dec
pop
outs
shr
xor
pop
call
mov
scas
loop
xchg
jmp
push
xor
cld
std
jnp
mov
adc
ficomp
cmp
ret
push
stc
or
fstp
jle
sti
icebp
pop
add
cld
(bad)
loopne
mov
mov
pop
mov
pop
pop
pop
call
jle
sbb
sti
ja
jmp
dec
jecxz
sub
cmp
std
iret
clc
in
outs
inc
repz
clc
loopne
ret
pop
aas
jns
out
add
std
push
icebp
fstp
(bad)
scas
js
lock
ret
outs
pop
or
inc
das
ret
cmp
(bad)
push
mov
ds
jne
xlat
push
pop
ror
pop
dec
lock
jmp
loopne
(bad)
icebp
shr
loop
pop
js
fninit
repz
lahf
jmp
jns
lock
mov
dec
cmp
dec
sub
jge
lahf
push
clc
loopne
loopne
rol
sbb
mov
pop
data16
pop
loopne
ja
iret
loope
and
lock
jecxz
xchg
cmp
loopne
les
and
repz
fistp
mov
(bad)
push
cld
(bad)
jmp
jg
jle
mov
cld
clc
in
mov
xor
outs
icebp
fstp
or
cld
(bad)
test
iret
lock
clc
in
adc
sar
(bad)
popa
mov
inc
clc
in
ja
outs
jg
jle
sbb
mov
sar
outs
jg
mov
das
cmp
push
xor
pop
xor
clc
pop
icebp
fstp
mov
xor
std
jmp
cli
addr16
clc
cmp
call
mov
push
mov
cli
mov
cld
repnz
sbb
in
cld
sbb
mov
dec
cld
sbb
push
call
mov
jg
(bad)
pop
dec
(bad)
push
jmp
jmp
hlt
(bad)
mov
sar
add
(bad)
call
(bad)
jmp
cli
aas
hlt
push
(bad)
push
rol
mov
je
call
add
dec
push
jg
(bad)
mov
hlt
(bad)
aas
cmp
daa
sar
call
call
(bad)
jmp
(bad)
jg
std
(bad)
out
mov
cmps
pop
pop
cld
psubsb
(bad)
cmp
(bad)
jg
(bad)
jmp
(bad)
(bad)
jmp
mov
mov
mov
les
(bad)
call
jmp
std
mov
call
mov
inc
retf
mov
push
(bad)
cmp
jle
das
jns
lahf
shr
adc
fist
mov
mov
test
ins
(bad)
stc
sti
and
div
mov
stc
sub
pop
pop
outs
cld
inc
mov
inc
dec
pop
pop
in
clc
lahf
inc
inc
cld
pop
inc
sub
inc
or
jg
cld
not
mov
js
ss
cmp
sub
loop
xchg
clc
loopne
cmp
ret
(bad)
lods
and
sbb
jb
sbb
sub
ss
outs
jmp
jle
(bad)
sbb
repnz
mov
icebp
ror
popa
xchg
inc
(bad)
dec
fadd
test
inc
scas
ins
mov
loop
rol
aas
xchg
iret
paddd
cli
ret
shr
out
lds
addr16
jg
ds
pop
icebp
rcr
js
adc
jmp
das
mov
dec
push
sar
icebp
jnp
cld
and
pop
push
dec
jle
(bad)
jb
(bad)
mov
jnp
and
mov
dec
mov
sbb
jl
pmaxsw
cmp
(bad)
iret
movd
jl
pop
push
(bad)
pop
call
cld
xchg
rcr
xchg
mov
scas
(bad)
out
push
xchg
stc
dec
clc
jne
stc
arpl
inc
mov
pop
push
xchg
std
lahf
mov
inc
cld
pop
clc
add
mov
paddd
cmc
jmp
mov
outs
jbe
ja
add
int3
rcr
loopne
pop
cld
movs
clc
in
arpl
cs
cld
mov
in
lahf
(bad)
mov
cmp
xchg
jle
inc
cld
(bad)
dec
mov
idiv
icebp
call
popa
cmps
(bad)
addr16
xchg
mov
add
mov
stos
pop
jg
(bad)
cld
out
xchg
ja
or
pop
out
push
pop
fbld
cmc
loopne
xchg
mov
jp
(bad)
std
aad
retf
iret
nop
stos
je
leave
pop
dec
sub
aas
push
jge
cmc
loopne
and
cld
and
retw
pop
dec
ins
clc
fwait
adc
push
int3
xchg
aas
out
push
cld
and
clc
and
fs
and
pop
pop
loope
outs
je
add
mov
push
mov
and
data16
(bad)
fistp
les
xor
js
lock
shr
lock
jecxz
popfw
pop
pop
pop
cld
(bad)
pop
mov
pop
mov
stc
mov
aas
mov
rol
mov
cmp
jg
inc
pop
loop
jge
scas
rol
sub
mov
hlt
fistp
cld
loope
jecxz
shr
cwde
aas
or
jl
jnp
stos
inc
outs
aad
jle
cmp
std
icebp
xor
shl
pop
loopne
call
jge
jnp
(bad)
icebp
rol
jae
pop
pop
cld
test
clc
add
in
pop
loopne
fist
out
ret
out
imul
inc
or
(bad)
pop
aas
(bad)
scas
adc
adc
ss
cmp
clc
jne
jnp
cli
xchg
loopne
jmp
mov
jg
mov
jle
pop
inc
loop
arpl
neg
lods
inc
cmp
call
sar
mov
(bad)
jg
(bad)
(bad)
out
scas
loope
inc
icebp
imul
xor
loopne
aas
mov
jmp
cld
sbb
and
jno
mov
scas
and
inc
inc
outs
cmp
pop
(bad)
ds
jecxz
xchg
dec
or
out
or
push
jmp
cmp
std
(bad)
icebp
out
cli
cmp
fstp
outs
dec
cmc
iret
retf
aas
xchg
(bad)
(bad)
jmp
cmps
push
lock
jmp
inc
and
aaa
shl
rcr
(bad)
es
ss
repz
addr16
inc
cmc
dec
dec
push
stc
(bad)
push
cmp
dec
adc
icebp
sbb
pop
pop
and
es
lds
clc
test
mov
xchg
dec
lock
aaa
adc
movs
mov
outs
(bad)
(bad)
mov
jg
pop
adc
popf
cdq
rcr
push
jle
call
and
int3
call
jg
fild
in
movs
ss
inc
pushf
pop
xchg
(bad)
(bad)
in
sub
out
jmp
xchg
lea
movs
fidivr
or
xchg
mov
ja
gs
iret
(bad)
lahf
jg
movs
hlt
dec
dec
in
sub
(bad)
nop
(bad)
dec
jle
xchg
mov
clc
mov
std
pop
pop
jle
addr16
inc
cmc
cmps
shr
lahf
clc
mov
ins
add
stc
ret
dec
xor
adc
idiv
pop
loop
in
ret
pop
jae
clc
test
out
mov
mov
jl
lock
jle
pop
inc
cld
in
push
jle
mov
xchg
out
loopne
ds
into
xbegin
dec
jg
jl
out
aaa
lds
push
(bad)
adc
dec
icebp
std
sahf
movs
clc
jle
mov
jg
dec
mov
outs
sub
das
push
jle
lahf
std
sbb
and
sti
or
fist
out
cli
ins
sub
sub
dec
xor
or
mov
or
(bad)
cmp
mov
jle
cwde
xchg
mov
cmp
in
mov
push
sub
mov
dec
push
adc
retf
(bad)
xchg
pushf
cmc
add
mov
es
icebp
pop
push
jl
aas
inc
pop
outs
lock
data16
pop
push
push
cmp
(bad)
fistp
div
ja
int
jbe
outs
jmp
std
xchg
add
(bad)
vmread
mov
outs
fdiv
std
jg
fs
xor
xlat
nop
aad
lahf
clc
xor
sar
cmps
mov
std
xor
cdq
adc
jg
xchg
fcmovbe
pop
xchg
ret
in
out
repnz
nop
pop
add
ror
daa
fcomi
das
cmps
nop
iret
dec
(bad)
sbb
sti
daa
sar
or
cld
sub
xchg
jg
cli
fwait
jecxz
mov
mov
stc
push
movs
dec
fistp
xchg
(bad)
cli
dec
hlt
aas
ret
adc
out
loopne
idiv
mov
into
push
cmp
out
int
daa
xor
mov
ja
push
lahf
lahf
cli
in
xchg
lds
jmp
retf
ja
nop
and
jno
cmps
pusha
push
dec
mov
sbb
mov
dec
jle
inc
sar
mov
mov
jne
dec
pop
cld
push
aam
ja
stc
aaa
jg
xchg
xchg
(bad)
xchg
jg
mov
pop
stc
mov
mov
pop
aam
(bad)
daa
jg
out
inc
sub
mov
cs
push
cld
ss
(bad)
ja
in
cld
in
push
stc
(bad)
jle
dec
(bad)
jge
cwde
push
(bad)
fistp
outs
cld
add
shl
out
inc
mov
and
nop
jg
mov
jle
xlat
bound
mov
in
push
(bad)
clc
int
jecxz
in
out
jne
sub
fdiv
mov
adc
fidivr
pop
and
test
jmp
sbb
iret
scas
add
add
ja
push
lds
and
jg
or
mov
jg
scas
lds
out
adc
pop
scas
jg
fidivr
push
adc
mov
sti
xchg
lahf
cld
xchg
sub
(bad)
jmp
call
dec
inc
mov
jecxz
iret
push
(bad)
in
std
ins
imul
cmp
mov
inc
jae
or
stc
out
xchg
fbstp
out
repnz
jg
fist
lods
jg
fdivrp
lods
aas
stc
idiv
das
je
add
push
dec
jbe
add
sbb
push
(bad)
std
out
cmp
lahf
cld
pop
mov
and
sti
dec
imul
or
(bad)
mov
sub
pop
add
jp
xor
rcr
sti
jmp
xlat
shl
fmul
mov
sub
dec
out
repnz
daa
jmp
out
sbb
mov
enter
and
jg
call
jmp
push
add
in
ja
mov
jmp
in
jg
lahf
push
push
mov
out
enter
fnstsw
ret
jg
jg
xor
iret
or
or
pop
cs
ins
jecxz
jmp
jmp
popf
ds
idiv
dec
(bad)
popf
fcomip
xchg
jg
push
jg
pop
push
mov
sti
out
xchg
outs
dec
(bad)
mov
fdivr
hlt
out
mov
pop
arpl
lock
pop
sti
cld
(bad)
dec
jg
loop
inc
pop
adc
(bad)
cmp
scas
(bad)
push
pop
sub
sub
jecxz
jg
push
xchg
(bad)
loopne
push
lods
adc
les
xor
cmps
sar
lahf
cld
out
inc
lock
sar
aas
dec
enter
inc
aas
jmp
scas
jg
jle
hlt
pop
push
dec
dec
mov
mov
aas
mov
jbe
inc
push
repz
xchg
cld
xor
das
mov
dec
imul
or
cld
das
dec
out
outs
and
cmp
mov
pop
call
(bad)
mov
mov
dec
mov
jmp
call
(bad)
fisttp
push
or
mov
xor
shr
inc
jge
inc
aas
call
sti
retf
call
dec
jge
out
(bad)
jmp
das
ret
pop
jmp
cmp
std
pop
stc
fwait
enter
dec
xor
(bad)
aas
mov
(bad)
call
addr16
(bad)
jge
idiv
(bad)
call
lahf
cli
lea
mov
xchg
cmc
cdq
or
lahf
movs
(bad)
ins
cli
stc
or
(bad)
push
(bad)
sti
aaa
xchg
xor
stc
aas
inc
push
cli
out
out
mov
stc
mov
out
dec
(bad)
(bad)
fcomi
push
mov
movs
(bad)
push
aam
mov
jg
mov
push
fwait
aas
mov
(bad)
arpl
sti
aas
mov
lea
pop
repz
cmp
(bad)
jne
repz
cld
sti
call
imul
rcr
fbld
xchg
rcl
iret
ds
(bad)
push
inc
mov
mov
aas
mov
push
fistp
fwait
add
fild
adc
std
(bad)
sti
shl
sbb
sti
mov
and
out
(bad)
mov
jne
mov
jmp
std
sbb
mov
(bad)
jg
sar
jnp
(bad)
mov
mov
lahf
inc
(bad)
xchg
shl
push
jge
push
shr
iret
jg
pop
test
sub
sbb
sub
test
call
call
std
shl
call
mov
call
jmp
(bad)
out
fdivr
cmps
mov
(bad)
xlat
clc
dec
cli
mov
inc
aas
xlat
hlt
cmp
std
not
dec
push
aam
pop
mov
(bad)
cmps
hlt
(bad)
aas
pop
shl
jmp
loope
mov
(bad)
jge
lahf
mov
jmp
std
and
sti
pop
inc
aas
dec
stc
cwde
mov
lods
rcr
mov
call
int3
call
sti
mov
or
sti
adc
xchg
fcomip
aaa
xchg
cmc
sar
mov
ins
jmp
cld
jp
fisubr
(bad)
hlt
repz
(bad)
push
sti
jg
(bad)
jmp
jmp
mov
mov
ret
cli
cld
das
std
sub
movs
idiv
dec
(bad)
and
stc
out
inc
aas
or
stc
xchg
hlt
stc
fisttp
cmp
std
iret
cmps
iret
(bad)
jge
stc
cmp
(bad)
inc
(bad)
fild
out
adc
dec
call
(bad)
lahf
hlt
call
jo
sbb
xlat
movs
lahf
pop
sar
jg
jp
ja
(bad)
push
std
xlat
shr
(bad)
cmp
cmc
sti
pop
mov
jg
loope
push
fwait
jg
aaa
adc
out
mov
std
or
aaa
shr
cmp
mov
(bad)
sub
std
fistp
jg
mov
sub
mov
pop
rcr
aas
test
push
hlt
sti
pop
inc
(bad)
push
xor
mov
fisttp
sbb
retf
out
enter
ficomp
inc
mov
jg
or
out
cld
sbb
pop
(bad)
sbb
(bad)
out
dec
(bad)
(bad)
std
jg
jno
jg
(bad)
mov
or
cli
call
repz
cli
(bad)
fild
(bad)
sti
jmp
call
(bad)
call
(bad)
inc
call
aas
mov
pop
rcl
enter
(bad)
sub
leave
(bad)
std
les
(bad)
out
addr16
dec
hlt
(bad)
mov
sar
call
cli
(bad)
(bad)
imul
mov
cmps
sub
std
stos
pop
push
xchg
cmc
jle
cli
jmp
imul
ficom
std
jg
(bad)
call
push
xlat
jb
jp
cli
jg
(bad)
mov
test
(bad)
dec
jmp
jmp
(bad)
(bad)
(bad)
(bad)
jg
(bad)
dec
sar
jmp
(bad)
mov
jmp
(bad)
jg
(bad)
(bad)
out
hlt
call
xlat
add
(bad)
fistp
jmp
inc
cli
push
std
(bad)
fcomi
call
(bad)
fild
jmp
call
dec
std
dec
hlt
(bad)
mov
sar
jmp
(bad)
fisttp
inc
jmp
(bad)
fbld
(bad)
inc
(bad)
mov
std
cmp
(bad)
mov
mov
push
std
inc
dec
call
fbld
xchg
hlt
push
scas
jecxz
idiv
js
call
call
jmp
(bad)
(bad)
(bad)
(bad)
jg
(bad)
dec
sar
push
les
sbb
(bad)
icebp
xchg
inc
sar
std
(bad)
lock
and
in
dec
jmp
stc
scas
xchg
push
imul
dec
cmp
lahf
popa
adc
out
inc
mov
mov
pop
dec
mov
fsub
mov
test
jg
mov
cdq
push
in
rol
pop
dec
ficomp
cs
dec
mov
and
jbe
pop
mov
loop
mov
rcr
jns
sti
and
mov
pop
pop
jl
pop
cld
adc
loopne
pop
pushf
sbb
rol
xor
fadd
outs
or
jle
mov
(bad)
(bad)
push
jl
fwait
loop
mov
clc
lea
sub
loop
pop
sbb
lahf
adc
or
call
cmp
jle
loopne
shl
add
jmp
outs
inc
jle
lods
jo
jmp
jae
in
outs
push
cld
stc
clc
lea
(bad)
retf
or
adc
pop
cmp
lock
jmp
xchg
jecxz
jg
pop
mov
shl
lahf
loop
daa
clc
in
scas
shr
in
aas
shr
xchg
dec
mov
stos
aam
adc
xchg
adc
mov
pusha
sub
jno
enter
popa
paddd
movs
mov
xor
and
mov
or
pop
ret
and
jnp
fcmovnu
mov
imul
arpl
add
out
(bad)
(bad)
rcr
movs
jne
aas
or
fiadd
cld
loopne
js
dec
(bad)
cmp
cld
test
mov
call
or
dec
movd
mov
cmp
aad
jle
pop
push
sbb
(bad)
das
cmp
(bad)
pop
(bad)
icebp
mov
jle
pop
std
pop
push
std
sbb
pop
and
cmp
clc
loopne
rol
loopne
mov
sbb
xchg
call
mov
lods
xor
cld
pop
clc
in
jg
inc
jle
sahf
cmp
(bad)
sar
out
mov
loop
pop
pop
jg
jle
push
pop
jg
jle
sbb
add
sti
aas
or
in
pop
outs
jg
jle
adc
loope
xor
inc
test
(bad)
sbb
cmps
pop
mov
lock
imul
loop
out
loopne
jg
mov
mov
lahf
loop
pop
mov
inc
clc
in
mov
les
lock
jecxz
fistp
cld
scas
pop
or
mov
mov
pop
inc
xchg
scas
jle
shr
jmp
(bad)
icebp
fistp
iret
dec
test
mov
push
int
sbb
push
pushf
(bad)
ds
div
loopne
mov
clc
in
scas
ret
cmp
pop
mov
adc
ds
xchg
lock
or
movs
pop
out
lock
mul
add
mov
repz
sub
clc
(bad)
xlat
dec
sahf
mov
stc
addr16
pop
arpl
(bad)
cmps
(bad)
movs
inc
out
sub
jg
push
jne
icebp
das
mov
jmp
pop
(bad)
sub
mov
jle
dec
movs
jle
(bad)
dec
fs
movs
(bad)
jmp
aas
fs
or
cld
stc
hlt
(bad)
mov
(bad)
mov
(bad)
shl
(bad)
jg
dec
mov
cli
(bad)
inc
(bad)
mov
add
mov
inc
cli
jmp
std
dec
(bad)
out
inc
(bad)
inc
call
and
inc
jmp
dec
xor
imul
jg
(bad)
call
pop
repz
mov
call
jg
dec
dec
lods
inc
mov
xchg
and
or
cmc
imul
aas
sti
pop
jle
retf
dec
clc
cmc
(bad)
movs
dec
(bad)
xchg
fcomip
xchg
jg
std
psllw
aas
lds
stc
in
dec
dec
cld
cli
ja
lods
cld
mov
retf
inc
cmp
xchg
aam
mov
jecxz
mov
and
stos
out
lahf
cld
xor
mov
test
pop
jmp
and
imul
jle
cmp
fistp
fadd
daa
ds
pop
repz
add
out
cmp
stos
sub
xchg
mov
mov
mov
mov
pop
setg
out
push
(bad)
arpl
lea
test
inc
mov
pop
ret
outs
push
sti
lock
inc
clc
in
dec
les
pop
jle
xor
fistp
(bad)
loopne
(bad)
(bad)
lahf
cmp
or
jecxz
cmp
xor
jecxz
pop
inc
jecxz
test
retf
push
(bad)
repnz
sub
sub
pop
xlat
pop
aas
test
(bad)
xor
lock
cld
(bad)
pop
addr16
icebp
mov
lahf
ret
(bad)
ror
leave
cs
int3
shl
clc
cli
dec
(bad)
xlat
mov
icebp
fld
scas
repnz
pop
and
jge
push
cld
dec
test
pop
mov
outs
jnp
pop
loopne
aas
push
scas
cld
jnp
in
aaa
rcl
jle
in
mov
sar
push
cld
xchg
adc
mov
sbb
mov
stc
lea
imul
inc
pop
xchg
call
mov
daa
inc
in
(bad)
sbb
repnz
dec
movs
mov
add
mov
jb
jle
dec
inc
hlt
dec
add
pop
mov
cmp
aad
ds
imul
xchg
(bad)
xchg
or
cld
leave
pop
sub
popa
jg
gs
sti
xchg
sbb
add
xor
sub
fist
cld
inc
xchg
loope
dec
xor
sete
xchg
loope
lods
and
jg
xchg
loope
lods
xor
(bad)
xchg
sbb
cdq
loope
shr
pop
and
or
ss
sbb
(bad)
das
loopne
pop
xor
xchg
fs
out
jno
fwait
adc
shr
lock
retf
shr
or
jle
cmp
aas
dec
paddd
cld
js
lock
loop
call
(bad)
sti
pop
inc
cld
pop
pop
jmp
jle
jbe
jg
jle
cmp
fwait
xor
adc
push
(bad)
(bad)
cld
or
xchg
xchg
fldenv
xchg
(bad)
in
xchg
jecxz
pop
adc
std
jns
mov
sub
clc
std
push
jle
cld
dec
fs
in
(bad)
gs
in
dec
xchg
les
mov
cmp
in
movs
cmp
mov
dec
jp
jg
jg
xor
nop
int3
cmp
imul
mov
mov
add
cli
(bad)
out
icebp
imul
add
aas
icebp
imul
popf
pop
hlt
imul
dec
(bad)
inc
jmp
mov
cmp
call
sbb
shl
add
mov
loopne
stc
out
xchg
or
pop
sub
push
jmp
pusha
jge
sub
mov
sti
xlat
gs
pop
mov
push
xchg
mov
dec
cld
jge
aas
mov
dec
sub
(bad)
int
mov
addr16
jmp
sahf
(bad)
das
(bad)
call
mov
ds
xlat
and
add
mov
xchg
pop
mov
inc
cmc
daa
icebp
jecxz
jnp
mov
jns
fistp
mov
les
lock
pop
aas
push
loop
jmp
out
ja
pop
mov
clc
or
rcl
add
aad
sbb
(bad)
movs
xchg
call
in
call
leave
pop
retf
mov
cmp
sub
jp
(bad)
fild
push
push
mov
mov
jp
data16
aad
idiv
retf
sub
mov
mov
call
aas
popf
jb
jg
out
repnz
das
imul
sbb
cmp
(bad)
dec
and
js
adc
and
mov
push
pop
(bad)
lock
cmp
nop
fmul
(bad)
aaa
or
jmp
pop
fmul
dec
mov
sar
xchg
je
mov
icebp
mov
int3
cmc
addr16
hlt
fwait
shr
shr
dec
stos
dec
iret
ds
sti
jle
sub
cld
mov
adc
fsub
mov
(bad)
in
(bad)
sbb
lea
test
repz
sar
aam
inc
retf
or
movntq
out
cmp
cs
out
mov
cs
out
mov
enter
and
out
cmp
mov
outs
daa
ret
(bad)
loope
ss
jmp
sbb
lods
jg
pop
out
jmp
fild
test
clc
fbld
jmp
pushf
and
or
leave
sti
pop
mov
in
adc
adc
or
inc
cmp
es
stc
sbb
mov
std
cs
sub
in
call
jmp
xchg
jg
mov
imul
call
test
mov
dec
clc
cmc
scas
loope
jg
push
(bad)
adc
clc
repz
arpl
sub
out
mul
lds
out
and
pop
mov
out
dec
push
mov
pushf
cmp
into
pushf
xchg
dec
cmps
fs
sbb
ss
or
fwait
push
in
push
jno
push
pop
mov
popf
aas
stc
scas
mov
mov
in
bound
adc
add
imul
call
mov
aas
inc
imul
leave
sti
aas
inc
cmps
jmp
ror
jg
cdq
lods
mov
inc
jbe
xchg
daa
jg
mov
aas
mov
xor
lahf
adc
pop
jmp
pop
sti
add
(bad)
aas
dec
cmp
mov
push
std
pop
cmps
mov
std
mov
data16
std
jbe
xor
scas
fnstsw
dec
(bad)
call
push
fistp
lds
mov
inc
mov
lods
xor
(bad)
out
jnp
inc
in
mov
popf
test
iret
aas
stc
adc
push
add
dec
jae
fwait
xchg
push
clc
xchg
hlt
rcr
into
sbb
cld
das
shr
in
cmps
ret
adc
sub
leave
sub
jg
cmp
out
retf
dec
hlt
mov
or
cmc
pop
mov
retf
(bad)
cmp
adc
hlt
fucomi
push
sub
mov
(bad)
not
rcl
int
outs
adc
fisubr
push
in
cmps
cmc
nop
jg
cmps
in
cmps
(bad)
push
fist
stc
pop
jle
loop
fild
jg
mov
dec
sbb
sti
mov
cli
scas
shl
xor
dec
dec
arpl
push
lods
int3
cld
cli
pop
jg
jg
push
sub
mov
std
adc
gs
leave
dec
add
(bad)
hlt
aas
xchg
push
lahf
add
bound
xor
jg
nop
repnz
inc
retf
dec
cdq
inc
ja
imul
xor
jae
mov
sub
mov
cmp
repz
sbb
fild
in
aaa
and
dec
push
fist
pop
jg
and
outs
repz
mov
jle
dec
dec
mov
cld
dec
jle
dec
inc
fist
in
cli
in
ds
xlat
jg
fucomip
ja
pop
jp
mov
test
jg
ja
in
call
cmps
dec
inc
fucomip
xchg
mov
cld
sbb
fist
repnz
mul
push
lahf
xchg
add
add
out
shl
cmp
sub
add
sub
imul
inc
pop
push
push
jbe
xor
repz
clc
std
jg
retf
fucomp
mov
xchg
xlat
popf
into
or
jg
pop
rcr
ret
stc
ja
sar
idiv
arpl
sar
pop
mov
add
mov
mov
cld
xor
(bad)
cmp
fstp
sahf
(bad)
jmp
scas
icebp
pop
shl
mov
call
jg
fdivrp
dec
test
jmp
xchg
in
xchg
jmp
daa
jg
leave
xor
xlat
push
ror
mov
hlt
repz
adc
lahf
clc
lods
and
cmp
stc
das
mov
jg
sub
sbb
inc
(bad)
cdq
aam
(bad)
mov
neg
(bad)
push
fist
sub
inc
push
mov
fnstsw
jle
lahf
hlt
(bad)
mov
jmp
std
sub
(bad)
jnp
out
pop
hlt
sbb
mov
lahf
movs
lahf
jg
mov
xchg
jle
xor
(bad)
call
jo
sbb
repnz
jg
cmc
cmc
pop
shl
or
hlt
(bad)
ror
pop
inc
lahf
jg
xor
mov
mov
hlt
sti
addr16
iret
cmps
out
jmp
dec
(bad)
aas
inc
jg
mov
(bad)
mov
dec
(bad)
hlt
(bad)
push
cli
sbb
out
inc
aas
dec
jmp
outs
es
(bad)
ja
ret
pop
inc
ins
(bad)
and
icebp
not
addr16
cmc
cmc
outs
ror
xchg
pusha
cld
sbb
aaa
cmps
(bad)
(bad)
stc
hlt
idiv
ins
(bad)
hlt
fstp
dec
in
jle
pop
retf
call
cld
ins
fs
fs
in
cwde
ds
xchg
fdivrp
xchg
jmp
jle
jmp
std
(bad)
aas
and
adc
iret
(bad)
arpl
xchg
jge
or
mov
(bad)
xlat
call
xchg
xor
call
push
fwait
lahf
mov
cmps
std
(bad)
mov
div
aaa
xchg
jne
aas
(bad)
pusha
sahf
push
pop
mov
shr
mov
adc
scas
call
push
out
addr16
xor
test
dec
jg
mov
pop
hlt
mul
(bad)
call
mov
hlt
std
mov
fistp
mov
aas
cmps
idiv
jmp
fs
jmp
add
mov
mov
icebp
(bad)
iret
pop
inc
aas
out
shl
imul
mov
test
sbb
cld
xor
pop
add
shld
dec
aas
jg
int3
or
sbb
stc
out
jmp
mov
hlt
sti
sar
jg
rcr
in
fs
aaa
movs
(bad)
and
out
pusha
std
(bad)
hlt
idiv
aas
jg
jp
outs
mov
repz
mov
sbb
xchg
test
out
dec
jg
mov
mov
mov
mov
loope
sar
inc
js
inc
xor
adc
inc
jmp
cmps
out
inc
out
movs
mov
pusha
std
popa
hlt
repz
sub
xchg
mov
mov
sahf
add
inc
out
std
(bad)
mov
stc
cmps
or
imul
sbb
jle
xchg
stc
das
mov
neg
mov
mov
jg
lahf
std
mov
(bad)
aas
mov
stc
xor
in
(bad)
call
(bad)
push
fwait
sbb
hlt
(bad)
lahf
inc
fbld
ja
test
fistp
iret
shl
xor
xchg
ficomp
jge
cwde
jle
dec
(bad)
jmp
mov
mov
into
dec
jmp
addr16
jo
push
fcmovnu
xchg
(bad)
jae
idiv
iret
call
cli
in
scas
mov
lods
adc
dec
aam
pop
inc
out
(bad)
daa
hlt
imul
(bad)
sub
das
and
pop
inc
mov
js
xor
cs
pop
sar
pop
cld
es
std
(bad)
out
jg
mov
hlt
pop
leave
(bad)
outs
dec
ins
(bad)
and
std
mov
cmp
or
call
pop
inc
mov
or
imul
ret
and
pop
jmp
dec
jmp
bound
pop
mov
pushf
or
in
stc
fistp
jmp
sti
xor
cli
(bad)
fstp
shl
call
push
cli
(bad)
fldcw
mov
or
dec
mov
stos
pop
add
dec
cmp
pop
mov
(bad)
jg
(bad)
(bad)
out
sar
call
(bad)
jg
(bad)
call
dec
outs
inc
inc
sbb
nop
outs
sar
imul
inc
cmps
movs
in
sar
jg
(bad)
(bad)
jge
(bad)
in
xlat
xchg
mov
cmp
call
inc
(bad)
jmp
call
dec
cmps
(bad)
call
(bad)
push
(bad)
call
cli
(bad)
aas
inc
(bad)
push
call
(bad)
mov
cli
(bad)
inc
dec
cli
jmp
imul
add
call
(bad)
mov
hlt
jmp
std
jmp
(bad)
dec
(bad)
jmp
call
call
jmp
hlt
(bad)
mov
sar
jmp
(bad)
dec
call
call
(bad)
dec
cli
jmp
inc
(bad)
jmp
(bad)
mov
(bad)
aas
cmps
call
sar
lahf
sar
iret
call
fbld
dec
cli
call
(bad)
dec
cli
call
call
jmp
hlt
(bad)
mov
sar
call
cli
(bad)
mov
call
(bad)
mov
cli
(bad)
dec
push
sbb
mov
(bad)
jmp
hlt
call
(bad)
fbld
pop
sar
jg
cli
call
(bad)
fist
pop
sar
scas
call
dec
hlt
(bad)
aas
(bad)
(bad)
call
(bad)
(bad)
jp
(bad)
fisttp
inc
std
call
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
jmp
hlt
(bad)
fild
(bad)
jg
(bad)
jmp
dec
cmp
push
jg
mov
mov
mov
sub
mov
test
or
clc
outs
sar
or
(bad)
mov
or
imul
in
mov
je
cmp
sub
test
test
push
xor
mov
xchg
sbb
inc
nop
mov
out
aas
stc
dec
rcr
adc
std
cdq
mov
call
cld
shl
push
add
test
mov
loopne
mov
enter
sbb
dec
inc
repnz
jbe
fbld
and
call
sbb
fs
fndisi(8087
mov
adc
pop
sbb
adc
es
clc
and
cmp
push
cld
xor
xchg
jle
loop
aad
and
test
das
jecxz
mov
clc
push
push
lahf
xchg
ins
clc
mov
loopne
les
mov
pop
aas
and
into
sbb
dec
and
mov
inc
icebp
fstp
iret
scas
icebp
sbb
mov
sahf
loope
fisttp
pop
aam
ffreep
pop
call
fidivr
fbld
pushf
pop
daa
clc
in
and
xchg
aaa
mov
shr
fisttp
lock
mov
mov
cld
imul
mov
pop
mov
daa
push
xchg
aas
jle
mov
jmp
and
call
xor
aam
pop
mov
nop
cli
movs
mov
mov
cld
or
pushf
jae
call
jle
xor
std
jecxz
sti
aaa
mov
jecxz
outs
ja
xchg
loopne
pop
js
out
(bad)
out
rcr
pop
(bad)
pop
xchg
cmp
out
cld
aaa
js
addr16
sbb
stc
jmp
xchg
out
push
cld
adc
clc
aas
icebp
ror
jno
xchg
js
jle
cld
test
mov
clc
in
pop
outs
lahf
loopne
call
in
jg
outs
mov
jle
cld
js
lock
cld
pop
(bad)
out
aaa
push
xchg
jle
jle
adc
cld
psubb
jp
loopne
ret
pop
scas
paddd
icebp
cmp
cld
fwait
clc
cwde
repz
cmp
sti
iret
icebp
(bad)
aas
mov
daa
pop
jg
ds
push
clc
loopne
mov
push
jg
mov
jecxz
aas
sbb
loopne
cmp
xchg
lock
dec
jl
in
loopne
les
(bad)
lock
popa
sbb
sti
lahf
jns
push
adc
clc
xchg
js
clc
loopne
cmp
ret
(bad)
rol
adc
clc
sub
jl
(bad)
pop
mov
dec
push
mov
clc
popf
lock
pop
push
jle
cld
test
stos
fild
pop
int
jle
cld
sub
(bad)
ja
xor
mov
jle
das
mov
cmc
clc
loopne
les
inc
pop
stc
xlat
icebp
shr
das
loopne
dec
pop
cld
arpl
in
aas
(bad)
outs
jg
jle
sti
js
shr
aaa
cmp
stos
icebp
shr
jecxz
call
loop
aas
add
cld
cmps
push
inc
mov
inc
mov
pop
add
aad
(bad)
movsx
clc
mov
divps
aaa
pop
repz
fistp
jecxz
inc
clc
in
scas
(bad)
mov
push
lock
movd
cld
neg
mov
sbb
aaa
inc
mov
ds
mov
lock
cld
xor
xchg
ret
cld
xlat
clc
loopne
sar
das
paddd
mov
jle
in
jg
pop
pop
push
cld
inc
clc
icebp
pop
sbb
paddd
jl
cmp
cld
jecxz
pop
pop
clc
or
aaa
jne
(bad)
loop
and
mov
sti
xchg
shl
out
repnz
fstp
jg
inc
stos
jbe
jle
xchg
cs
sub
(bad)
fnstsw
mov
test
out
scas
and
scas
inc
std
imul
rcr
cmps
mov
sub
jg
(bad)
jmp
jg
sbb
std
pop
mov
pop
movs
les
cmp
dec
jmp
call
std
aas
cmps
call
dec
call
inc
(bad)
jmp
call
jmp
clc
sub
int3
scas
sub
ja
add
(bad)
aas
cmps
(bad)
dec
(bad)
push
hlt
(bad)
fist
(bad)
aas
mov
psubsw
cmps
hlt
jmp
hlt
call
mov
std
call
cli
call
call
push
adc
jmp
fcos
sub
outs
push
loop
and
mov
(bad)
std
adc
iret
daa
inc
scas
push
push
dec
in
sub
aam
push
loop
xor
les
cmp
(bad)
sbb
std
adc
pop
clc
mov
retf
stos
jne
add
jnp
ins
sti
xchg
icebp
retf
jmp
ins
(bad)
adc
mov
popf
cdq
mov
xchg
xor
repz
push
sbb
cmp
(bad)
pop
xchg
xor
aas
sub
ret
or
pop
pop
pop
cld
idiv
loopne
ret
push
mov
icebp
or
xor
cld
push
jns
jnp
push
or
out
jbe
fnstsw
(bad)
out
jno
lahf
loop
mov
clc
in
dec
shr
jle
or
fstp
mov
dec
div
loop
mov
or
mul
es
jae
fstp
cld
mul
lock
loope
xor
popa
add
cmp
dec
push
pop
fdiv
mov
ffree
mov
lock
das
pusha
fcomi
mov
(bad)
pop
jp
jnp
(bad)
addr16
push
xabort
movnti
sub
shr
mov
lock
loope
arpl
inc
retf
(bad)
(bad)
in
push
loopne
mov
clc
in
pop
ret
outs
push
jle
addr16
fstp
pop
push
(bad)
(bad)
arpl
idiv
mov
jle
inc
clc
sti
popa
cs
push
dec
jl
inc
cmp
jmp
fld
scas
pusha
fstp
in
iret
ret
xchg
and
(bad)
xor
mul
mov
or
(bad)
iret
into
icebp
fstp
fistp
cld
test
push
hlt
fld
mov
pop
(bad)
aas
inc
out
push
dec
adc
push
sbb
rcr
ds
(bad)
ret
sti
outs
icebp
push
add
jg
daa
loop
jg
push
xchg
or
inc
dec
pop
(bad)
cmp
dec
cmc
mov
in
xchg
xor
das
dec
test
stc
out
cmp
lahf
inc
retf
aad
(bad)
xor
in
xchg
xchg
in
dec
aam
movs
in
pop
jno
jg
leave
cld
(bad)
cmp
lock
loopne
adc
std
adc
jle
lods
dec
mov
xchg
int3
pop
retf
out
jns
mov
into
scas
sbb
subps
jle
sbb
mov
add
sbb
jecxz
inc
push
aam
cmp
jg
pop
outs
paddd
js
lock
loope
xor
push
mov
cld
fdivr
clc
sti
lock
rcr
pop
in
rcr
pop
out
das
ret
outs
jg
jle
jae
aad
mov
daa
adc
lock
add
js
pop
or
rol
jg
ss
pop
clc
push
sbb
add
cmps
hlt
daa
icebp
ror
push
mov
arpl
cwde
pop
cmp
(bad)
lods
cmp
mov
inc
pop
pop
loope
out
ret
lods
fwait
cld
push
clc
icebp
or
jle
cld
js
lock
icebp
pop
mov
inc
clc
in
aaa
fs
iret
jecxz
add
div
lahf
loope
aas
sbb
xchg
push
cld
stos
clc
icebp
fistp
cld
jae
icebp
std
cmp
es
ja
inc
leave
pop
(bad)
fwait
push
cld
ja
loopne
or
sti
icebp
dec
or
call
sub
call
jmp
(bad)
mov
std
jmp
aas
cmps
call
hlt
call
dec
(bad)
jg
std
pop
adc
xlat
cld
inc
hlt
jg
xchg
es
test
inc
push
fs
arpl
out
ja
dec
ret
outs
jmp
icebp
movs
sbb
mov
xor
aas
(bad)
xor
mov
mov
push
sti
ds
and
sbb
mov
xchg
pusha
dec
dec
xor
ds
jnp
xchg
push
idiv
push
dec
test
pop
fdivrp
repz
cld
xchg
aas
cmp
ja
out
xchg
(bad)
push
clc
arpl
in
xchg
aas
sub
xlat
jg
enter
outs
ret
outs
sub
into
inc
sbb
jecxz
shl
jecxz
out
hlt
hlt
pop
inc
stos
out
loopne
(bad)
loopne
jmp
sbb
pop
fistp
mov
jl
or
push
cld
pop
icebp
fcmovnu
mov
jle
cld
idiv
push
cld
xabort
(bad)
mul
xlat
(bad)
mov
cmp
aas
shl
ffree
inc
neg
mov
xbegin
out
test
lahf
push
sahf
cld
iret
rol
fbld
scas
push
loopne
jg
jne
lods
xor
data16
cld
push
mov
pop
jl
not
div
add
fisttp
repnz
sub
mov
cmps
inc
mov
adc
cld
fisub
jg
sub
retf
add
je
and
stc
add
cld
pop
lods
cmp
pop
iret
std
jge
sar
push
pop
mov
mov
lods
push
into
lock
bound
push
lock
cs
mov
mov
(bad)
xchg
xlat
jae
inc
cld
(bad)
clc
jno
fs
ret
dec
pop
sub
and
mov
dec
loope
xchg
adc
push
adc
cld
push
les
(bad)
in
clc
in
push
in
and
clc
not
push
fisttp
std
outs
movs
test
imul
call
pop
xlat
pop
dec
jmp
jg
jns
jg
cdq
repz
repz
xor
cld
dec
ds
jecxz
and
cld
popa
xor
mov
or
sbb
xchg
mov
and
lock
(bad)
int3
or
sbb
jle
pop
rep
cmp
(bad)
mov
movs
xchg
into
fistp
sbb
cmpxchg
fcomi
ds
(bad)
push
pop
jecxz
lods
jle
int
and
jmp
mov
(bad)
sbb
jg
imul
ins
jmp
inc
sar
fnstcw
push
mov
call
fbld
inc
clc
idiv
mov
pop
adc
jmp
and
fstp
call
aas
lds
jg
out
bnd
out
or
jmp
xchg
(bad)
idiv
loop
dec
lahf
loopne
aas
dec
dec
iret
lahf
dec
dec
pop
jg
lock
inc
pop
cli
inc
movs
mov
inc
cdq
xchg
outs
mov
pop
adc
imul
pop
jmp
mov
mov
mov
leave
mov
mov
sbb
sbb
(bad)
daa
cmp
outs
ds
jnp
jmp
lea
fisttp
xchg
mov
xchg
(bad)
pop
jge
pop
cld
cs
daa
jg
sub
xor
not
inc
jg
aam
outs
inc
pop
jne
pop
cmc
and
aad
xor
sub
aad
jmp
cmp
je
mov
clc
jle
mov
out
inc
jmp
aas
inc
jmp
mov
jge
clc
in
stc
ins
aas
stc
or
ficomp
fisttp
jl
jg
cmp
mov
out
test
idiv
shr
fisttp
cmc
(bad)
xchg
jg
ja
in
cld
in
dec
dec
jg
pop
mov
lea
test
shl
sbb
in
movs
movs
fcomp
xchg
xchg
bound
pop
mov
ins
dec
mov
out
and
pop
or
std
mov
cmc
jp
(bad)
sahf
jle
fdiv
mov
rcr
sti
xor
mov
std
out
cmp
(bad)
mov
stc
pop
sar
jmp
dec
call
cmc
outs
cmps
cmove
jmp
add
push
jl
xlat
std
lahf
inc
sub
add
std
das
sub
lahf
cld
cs
pop
jg
mov
dec
or
dec
adc
neg
popf
addr16
into
outs
cmc
leave
jg
cmp
lds
in
(bad)
cmp
repnz
ret
adc
std
mov
int
adc
pop
inc
scas
and
scas
std
cs
sbb
push
jg
xchg
jg
mov
push
jmp
dec
js
div
inc
repnz
or
fisttp
leave
fist
stc
addr16
daa
jmp
sti
outs
movs
mov
cmps
fucomip
mov
add
shr
stos
pop
adc
jmp
xchg
cli
(bad)
out
sbb
xchg
movs
aad
dec
call
ins
jle
dec
dec
jmp
inc
add
mov
nop
fs
das
ret
mov
neg
jno
call
adc
call
mov
xor
fistp
lahf
add
mov
iret
jle
dec
(bad)
jecxz
inc
in
cmps
jbe
stc
outs
cld
mov
adc
sti
cmp
call
fcmovnu
lock
jg
mov
aas
std
cmp
cld
and
xchg
pop
add
pop
jg
daa
(bad)
fsubr
cld
leave
aas
std
cmp
cld
or
cdq
(bad)
fild
inc
fcmovnu
cdq
pop
push
ja
cld
xchg
sti
arpl
and
adc
sbb
aad
mov
fcmovnbe
cmp
cmp
jmp
out
mov
aad
ret
dec
scas
mov
adc
popf
sbb
xchg
mov
std
push
das
push
std
out
mov
mov
add
xlat
pop
dec
sub
cdq
sar
push
mov
jae
push
(bad)
push
cli
(bad)
out
dec
mov
lahf
dec
lea
bound
mov
(bad)
(bad)
das
call
std
(bad)
repnz
xchg
hlt
fisubr
cmps
mov
icebp
call
stc
mov
mov
out
mov
call
std
jg
out
dec
call
mov
dec
or
mov
hlt
sti
call
inc
aas
jg
cli
jl
jle
fisttp
into
cmp
call
movs
nop
lahf
(bad)
fisub
pop
(bad)
std
(bad)
pop
xor
push
mov
pop
adc
sar
dec
xor
push
cmp
mov
dec
ins
(bad)
clc
fisttp
inc
out
cld
jbe
div
xlat
adc
call
loope
push
popa
ins
hlt
std
outs
dec
in
call
cli
stc
jge
out
(bad)
sti
hlt
(bad)
jg
cli
retf
imul
shl
out
sub
das
call
aas
cmps
(bad)
dec
inc
sub
mov
mov
(bad)
aas
sub
clc
dec
or
lahf
clc
in
fs
icebp
jg
(bad)
(bad)
push
out
aas
cmps
idiv
sub
mov
fist
into
(bad)
fld
nop
jne
daa
hlt
idiv
mov
add
jnp
pop
outs
jmp
push
std
call
dec
push
fcmovnu
cmp
or
jmp
lock
aas
jmp
jp
pop
and
cmp
std
sbb
iret
lahf
movs
iret
dec
addr16
sti
aas
mov
push
or
das
mov
not
std
cld
jge
repz
movs
mov
sub
xlat
test
aas
cmp
jg
vpmacssdqh
hlt
fnstsw
mov
ja
add
shl
mov
hlt
(bad)
fild
call
ds
push
or
daa
jmp
jg
mov
pop
test
mov
push
mov
notrack
loope
dec
(bad)
(bad)
mov
(bad)
mov
outs
daa
jmp
jg
rcr
(bad)
jecxz
out
cmps
cwde
push
cli
in
mov
iret
(bad)
sbb
dec
ins
jle
std
jg
(bad)
xrelease
jmp
lahf
(bad)
cli
test
lahf
addr16
mov
lahf
mov
mov
cmp
fnstsw
and
cmp
cmps
shl
sbb
cmc
psrlw
pop
lock
push
mov
test
movs
cmp
ds
jne
fdivrp
hlt
fcmovne
sbb
(bad)
sbb
test
ins
adc
jg
ja
or
mov
mov
(bad)
movs
cwde
xor
mov
lahf
mov
jmp
mov
hlt
sti
pop
inc
ins
mov
pop
cmp
das
adc
mov
shl
jg
mov
das
jmp
jmp
shl
hlt
(bad)
mov
xor
jge
adc
xlat
add
dec
xor
es
sti
xor
daa
sar
jmp
jg
(bad)
jecxz
cmps
ss
test
mov
loopne
aas
push
sti
retf
rcl
call
xlat
out
inc
(bad)
jg
stc
movs
out
(bad)
jge
iret
outs
inc
out
cld
add
sti
not
out
or
sti
or
sbb
mov
(bad)
xchg
sti
call
repz
call
sti
aas
dec
je
ret
jmp
jg
mov
mov
jge
(bad)
(bad)
aas
xchg
(bad)
(bad)
aas
test
std
sbb
out
out
mov
jg
ds
cmp
call
cld
pushf
ds
sbb
in
sbb
jmp
test
dec
pop
sar
dec
out
push
ds
(bad)
cmp
not
mov
aaa
add
dec
fbld
inc
jo
hlt
(bad)
jg
mov
xor
out
aas
pushf
call
neg
call
rep
and
jg
jge
mov
mov
mov
cld
pushf
cli
clc
sub
aas
dec
(bad)
dec
adc
aam
add
jmp
sub
repz
shl
xchg
ror
adc
pop
shl
jmp
cmc
repz
popa
(bad)
out
movs
iret
jle
xor
shl
das
cmc
cmc
das
adc
jg
jge
pop
ror
inc
(bad)
pop
inc
(bad)
(bad)
hlt
imul
dec
(bad)
jmp
jnp
jo
inc
cli
inc
loope
iret
adc
dec
mov
push
cli
stc
aaa
rcr
sub
fwait
push
mov
or
mov
mov
inc
jmp
imul
pop
push
(bad)
pushf
fdivrp
push
call
inc
aam
adc
ins
call
ret
mov
cld
cmp
xlat
pop
dec
jg
cmps
cwde
aas
push
movups
cmp
fnstsw
sbb
idiv
sar
lahf
mov
out
cld
push
rol
std
cld
inc
hlt
stc
pop
dec
out
jl
(bad)
fbld
pop
jg
std
cld
pushf
(bad)
or
xchg
fbld
jg
fdivrp
lahf
test
or
jg
fidivr
cli
std
pop
hlt
(bad)
dec
mov
mov
es
mov
addr16
push
cli
or
and
add
aas
bound
std
aas
std
fistp
std
(bad)
xor
sub
imul
jmp
sbb
outs
push
xchg
scas
jle
xchg
fild
jg
scas
and
push
sar
call
(bad)
aas
dec
(bad)
call
jmp
pop
std
(bad)
xchg
hlt
(bad)
call
call
lds
inc
out
cs
xchg
sti
pop
inc
(bad)
jmp
jmp
cli
xor
movs
(bad)
call
hlt
(bad)
aas
cmc
xlat
or
jmp
xchg
fdivr
aad
repz
clc
xor
lahf
sar
inc
cli
(bad)
inc
push
std
push
hlt
(bad)
fisttp
pop
sar
lahf
cld
pop
icebp
pop
cli
das
cmps
(bad)
jmp
hlt
(bad)
aas
xchg
(bad)
jmp
(bad)
call
call
(bad)
(bad)
cmp
(bad)
push
std
call
hlt
(bad)
jg
(bad)
call
(bad)
(bad)
jnp
jmp
mov
jmp
(bad)
call
(bad)
mov
(bad)
jg
(bad)
jg
(bad)
(bad)
mov
jg
(bad)
mov
hlt
(bad)
aas
xchg
jmp
sar
call
pop
dec
(bad)
call
jmp
call
cli
mov
jns
pop
mov
(bad)
dec
(bad)
dec
cli
jmp
mov
(bad)
fisttp
(bad)
ds
push
mov
pop
sar
jg
(bad)
lahf
sar
(bad)
call
hlt
(bad)
aas
nop
(bad)
inc
(bad)
call
lahf
inc
(bad)
dec
call
(bad)
out
mov
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
(bad)
mov
sar
jg
pop
xchg
or
std
push
cli
call
std
jg
(bad)
call
inc
(bad)
out
inc
dec
jmp
call
js
call
jmp
jmp
(bad)
(bad)
jge
(bad)
jg
(bad)
dec
sar
dec
(bad)
jg
(bad)
jmp
(bad)
dec
std
(bad)
jmp
push
cmp
hlt
(bad)
fisttp
(bad)
jg
cli
call
jmp
(bad)
call
(bad)
out
inc
dec
jmp
mov
inc
cli
call
call
(bad)
out
mov
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
(bad)
out
call
call
clc
cmc
test
inc
(bad)
call
(bad)
out
sar
ja
dec
jmp
call
(bad)
jg
cli
(bad)
cmp
jg
(bad)
inc
std
dec
mov
(bad)
aas
test
jmp
sar
call
call
(bad)
call
jge
mov
xchg
(bad)
std
adc
leave
leave
add
push
stc
outs
sub
das
sub
clc
dec
and
cs
imul
mov
test
push
ror
mov
sub
(bad)
jae
icebp
xlat
dec
mov
xchg
cmps
jg
mov
add
aaa
jg
daa
lock
daa
jg
mov
pushf
mov
(bad)
jle
jg
ds
icebp
fistp
mov
movs
out
and
sub
ss
bnd
inc
jns
test
and
pop
mov
push
dec
repz
sbb
adc
loopne
xor
(bad)
push
movs
out
mov
jb
mov
clc
arpl
call
xor
sub
fstp
mov
jbe
psraw
in
paddd
jl
mov
inc
lock
lods
mov
clc
in
iret
lds
pop
jg
jle
clc
rcr
pop
pop
pop
jg
mov
xchg
fbstp
mov
loopne
ds
sti
cs
stos
lock
sbb
pop
repz
inc
pop
jnp
loopne
jl
test
sahf
sbb
scas
clc
add
jle
jne
in
sar
clc
lea
aam
in
inc
call
loopne
xchg
gs
mov
es
retf
icebp
aad
(bad)
fistp
cli
pop
lds
aas
jle
mov
jbe
and
sar
clc
or
pop
mov
dec
push
fcom
jg
ds
scas
(bad)
and
not
test
mov
inc
shr
jle
mov
jbe
lock
test
sahf
loop
push
jnp
loopne
ds
mov
aad
jle
pop
std
cs
jmp
pop
jg
adc
push
cmp
aaa
pop
xchg
sti
fbstp
mov
or
mov
pop
mov
mov
mov
(bad)
jne
neg
cli
aas
mov
jle
jle
xchg
fld
outs
dec
div
mov
push
mov
das
lds
cmp
sbb
rcr
sti
xchg
mov
clc
in
pop
mov
jl
imul
fistp
mov
add
daa
shr
ja
clc
adc
shr
pushf
loop
enter
jle
jge
fld
jle
lds
jl
mov
shl
outs
mov
cmp
(bad)
out
loopne
(bad)
cmp
pop
mov
add
fstp
(bad)
arpl
neg
arpl
(bad)
in
sar
lock
loope
inc
mov
fadd
cmp
fild
xlat
loop
hlt
loopne
ret
out
fdivr
out
mov
push
out
dec
in
pop
outs
jg
jle
(bad)
ror
mov
adc
rcr
iret
mov
and
neg
imul
hlt
fistp
or
js
(bad)
pop
cld
mov
scas
sahf
sbb
dec
add
pop
icebp
inc
jnp
cmp
cmp
loopne
cmp
xor
lock
push
call
sub
sbb
dec
jg
jl
aas
loopne
fcomip
loopne
les
jg
cmp
clc
in
outs
(bad)
outs
jmp
mov
ret
pop
jg
ds
inc
lock
addr16
jg
jle
or
(bad)
add
pop
mov
cmp
jg
ds
icebp
stc
lahf
sbb
(bad)
loope
aas
adc
and
in
ja
outs
out
lock
lea
fs
(bad)
pop
cld
not
neg
sbb
mov
adc
call
push
jae
or
dec
jl
(bad)
outs
jmp
sti
(bad)
(bad)
call
outs
mov
js
cmc
(bad)
lock
lock
out
jbe
stos
jg
jge
loop
call
pop
dec
sar
loopne
sbb
sbb
jmp
and
sbb
std
mov
addr16
jle
jmp
fistp
out
aas
clc
mov
jecxz
rcr
lahf
sbb
cmp
arpl
jmp
std
idiv
in
or
jle
add
lds
add
pop
or
les
(bad)
(bad)
adc
jg
idiv
jmp
test
retf
sbb
out
add
(bad)
in
icebp
sbb
mov
adc
mov
jle
repz
stos
loope
(bad)
test
fild
jecxz
ror
hlt
ffreep
(bad)
pop
jp
scas
mov
call
mov
lock
loope
(bad)
rcr
iret
das
icebp
stc
fisttp
scas
(bad)
outs
dec
in
aaa
shl
jle
sbb
ret
outs
jg
inc
cmp
clc
add
test
ds
shl
ds
xor
fbstp
jg
loopne
jle
cmps
add
fcomi
fwait
jp
xor
mov
cld
xor
icebp
aas
std
mov
div
pop
dec
jg
out
out
jmp
(bad)
fistp
sbb
cmp
or
out
pop
cld
sbb
dec
std
jmp
call
push
movs
dec
(bad)
aas
dec
(bad)
inc
push
xchg
cld
shl
(bad)
aas
mov
jmp
sar
push
(bad)
and
(bad)
jg
xlat
adc
cli
aas
cli
xor
(bad)
outs
hlt
jg
add
test
xchg
(bad)
(bad)
cmp
(bad)
aas
cmps
(bad)
out
sar
mov
pop
repnz
sar
jmp
cli
aas
cld
xchg
(bad)
dec
jecxz
jecxz
not
(bad)
push
cli
(bad)
mov
jmp
(bad)
aas
mov
(bad)
call
(bad)
jg
bnd
jae
(bad)
out
dec
(bad)
(bad)
fucomp
push
dec
jmp
(bad)
cmp
push
hlt
(bad)
fisttp
dec
cli
jmp
(bad)
push
hlt
(bad)
aas
(bad)
(bad)
call
sar
jmp
cli
(bad)
fild
(bad)
sti
call
call
hlt
(bad)
call
(bad)
jg
std
(bad)
jmp
mov
mov
(bad)
dec
hlt
call
cmps
jmp
call
sar
(bad)
cmps
(bad)
jg
(bad)
(bad)
jge
(bad)
jg
std
jmp
(bad)
dec
std
dec
hlt
(bad)
aas
lahf
(bad)
call
(bad)
jmp
(bad)
fisttp
call
mov
pop
bound
cli
out
adc
loop
jg
mov
sbb
dec
(bad)
cmp
gs
pop
mov
repnz
inc
cli
sub
out
cwde
dec
icebp
ja
fld
aaa
jae
xchg
push
ds
dec
dec
pop
loope
or
sub
lock
cmps
jg
ds
arpl
mov
jmp
pop
ret
test
into
shl
repz
ret
loop
das
push
cmps
out
(bad)
fnsave
mov
jnp
test
loopne
adc
mov
ds
fucomip
loopne
les
clc
cmp
outs
mov
sti
pop
push
sbb
sub
sub
cld
div
jle
mov
clc
(bad)
fnsave
cmp
clc
sti
icebp
fcmovnu
mov
(bad)
push
clc
inc
(bad)
paddd
jl
and
mov
pop
or
(bad)
inc
mul
mov
or
std
aad
test
in
aaa
les
cld
div
loope
jae
(bad)
loopne
fist
mov
adc
jl
mov
or
mov
pop
mov
jecxz
and
mov
adc
pop
cmp
jl
pop
sbb
pop
loop
pop
or
outs
push
jle
gs
adc
pop
outs
jmp
jle
mov
in
aas
or
clc
inc
lock
lea
out
mov
add
or
push
pop
jg
jle
jle
jg
ds
cmp
repnz
xchg
jle
sub
popa
ds
outs
sbb
loop
pop
sbb
jg
push
clc
in
out
(bad)
outs
das
icebp
fucomi
test
add
mov
jle
jl
scas
loopne
sti
clc
in
aas
ret
loopne
aas
sbb
test
fstp
cld
test
std
(bad)
in
pop
ret
addr16
out
das
add
pop
push
cld
ja
icebp
fld
jg
jg
fst
ins
fdivr
fdiv
(bad)
loope
mov
jl
cmp
pop
icebp
rcr
lock
cld
and
stc
mov
mov
sahf
loop
aas
adc
mov
(bad)
and
clc
out
shl
ret
mov
cmp
(bad)
pop
mov
stc
add
sti
or
jle
push
enter
movs
aas
jle
daa
push
lods
add
idiv
enter
pusha
dec
mov
sbb
clc
xlat
and
dec
imul
push
lds
stos
(bad)
es
dec
(bad)
jmp
and
push
in
cwde
jl
pop
jmp
out
cld
stc
mov
(bad)
addr16
lock
lahf
and
jg
iret
or
arpl
dec
mov
jb
inc
stos
call
bound
cmp
sub
clc
fisttp
pop
jecxz
out
jns
sbb
or
lock
std
icebp
clc
in
add
mov
adc
jle
lock
(bad)
cmps
pop
mov
icebp
stc
outs
test
mov
cmp
xor
add
cmp
outs
lock
(bad)
mov
mov
cmp
mov
jg
and
mov
inc
jg
sbb
int
loopne
cmp
imul
idiv
clc
dec
icebp
jecxz
loopne
ret
xlat
push
mov
jg
jle
(bad)
jmp
paddd
dec
jl
test
mov
jmp
jg
clc
icebp
sbb
aas
cmps
pop
aas
sbb
pop
fistp
xchg
mov
sbb
mov
pop
cld
outs
clc
icebp
push
pop
mov
jmp
les
xlat
and
fbld
(bad)
pop
out
call
test
stos
sbb
sti
pop
call
jle
jle
pop
jecxz
mov
inc
(bad)
ja
aad
or
pop
rcl
dec
enter
jl
scas
loope
mov
sub
sub
xchg
jmp
stc
dec
push
(bad)
xor
lea
push
sub
mov
mov
jmp
stc
popf
push
sub
clc
loop
mov
jmp
sti
loope
cli
loopne
clc
icebp
test
push
into
lock
add
ficomp
pusha
pop
aas
(bad)
pop
(bad)
icebp
jnp
cld
inc
inc
add
loopne
sbb
(bad)
clc
icebp
pop
jno
inc
shl
jmp
imul
call
loop
scas
loop
or
out
js
fild
ds
das
lock
pop
mov
daa
loop
jg
pop
cmp
adc
pop
dec
jle
mov
sar
sbb
jg
jg
(bad)
inc
mov
and
sti
ja
inc
fistp
std
or
neg
(bad)
sbb
icebp
ja
(bad)
jmp
dec
(bad)
jnp
inc
dec
(bad)
mov
std
push
mov
dec
cli
aas
sbb
xor
inc
sar
call
cli
aas
js
cmp
xchg
sar
and
mov
nop
cmp
push
std
(bad)
aas
movs
(bad)
call
hlt
jg
outs
(bad)
popa
mov
dec
xchg
and
ficom
push
sti
test
(bad)
lods
or
int3
das
mov
jns
dec
(bad)
jg
std
pop
popa
int
inc
dec
or
(bad)
in
xchg
enter
daa
lahf
cld
das
jmp
in
out
clc
leave
jg
mov
(bad)
sar
adc
(bad)
daa
jmp
push
(bad)
xchg
jg
ja
stc
in
dec
add
xchg
jg
std
cmc
icebp
jecxz
dec
(bad)
js
clc
pop
push
clc
push
lahf
mov
jns
fwait
jecxz
mov
cld
cdq
jmp
movs
(bad)
pop
jg
(bad)
movs
jo
ds
ret
rcr
jle
cld
bound
cmp
je
mov
lahf
(bad)
(bad)
(bad)
pusha
mov
fistp
clc
jge
cmc
dec
push
mov
jle
ss
sbb
retf
sti
add
pop
pop
ins
jecxz
fwait
sbb
inc
mov
(bad)
sub
or
cmp
pop
rcl
xor
icebp
fstp
iret
(bad)
push
cld
neg
and
lock
loopne
call
pop
inc
int
jo
paddd
cld
push
pop
hlt
loopne
ret
outs
jo
add
out
inc
pop
push
xor
pop
inc
int
ffreep
outs
mov
push
pop
cld
not
fisttp
lds
out
sbb
mov
ffreep
sbb
cmps
push
(bad)
dec
pop
neg
pop
dec
cmps
loop
xchg
call
mov
repnz
jg
mov
(bad)
jge
scas
std
cs
daa
call
(bad)
pop
lahf
cld
sar
dec
(bad)
xchg
fucomip
xchg
jg
ja
cmp
daa
jg
out
xchg
jle
mov
cs
in
dec
call
jl
push
xor
xchg
sub
in
inc
pop
test
inc
dec
push
jge
inc
std
cs
int3
cmps
inc
adc
pop
sbb
sti
shr
ffree
out
cmp
jmp
arpl
clc
leave
add
sbb
cwde
pop
ja
mov
fucomi
sbb
or
neg
aaa
lock
xchg
mov
(bad)
jg
push
pop
repz
add
aas
add
out
ret
push
jle
push
sbb
fistp
cld
jae
cli
mov
cwde
and
adc
outs
js
sar
sbb
cld
inc
jbe
dec
mov
clc
adc
jecxz
int3
and
js
call
cmp
pop
mov
dec
mov
sti
ds
in
std
pop
jle
call
icebp
jg
ja
in
jg
ja
jmp
pop
cld
pop
(bad)
lahf
cld
mov
retf
repz
dec
fbld
xchg
jg
ja
cmp
ss
shr
fprem
repnz
mov
daa
jg
out
repnz
lahf
cld
xchg
mov
pop
cli
mov
clc
mov
mov
out
repnz
jl
cmps
(bad)
cs
stc
adc
sar
(bad)
(bad)
cs
jle
inc
(bad)
cs
jge
xchg
out
(bad)
clc
xor
pop
or
lock
loopne
ror
inc
mov
cld
clc
sbb
loop
xor
cmp
jo
inc
repnz
std
cmp
iret
push
cmp
or
clc
add
shr
fcom
lds
cmc
mov
inc
lock
loop
(bad)
sbb
mov
std
mov
(bad)
das
stos
movs
out
call
fild
push
pop
idiv
push
repz
cmp
mov
xor
hlt
(bad)
fistp
fbld
pop
std
sbb
inc
scas
loope
cmp
(bad)
stc
scas
ror
mov
mov
cdq
jge
dec
(bad)
xchg
pop
lock
call
call
out
jb
leave
jg
mov
sub
std
lock
int
out
jg
and
pop
dec
adc
call
std
mov
out
xchg
(bad)
outs
push
sub
mov
pop
dec
lods
icebp
out
push
test
dec
(bad)
clc
hlt
out
les
aas
adc
sar
cmps
aaa
mov
fist
cmp
pop
es
mov
rcl
daa
dec
mov
repnz
aas
push
lahf
cld
je
cld
les
inc
mov
cld
cs
out
repnz
jle
outs
cld
cs
jmp
xchg
sbb
jge
cmovns
leave
ffreep
cdq
sbb
leave
fild
daa
out
push
inc
or
call
sub
loope
lea
jg
out
repnz
jo
or
and
in
sub
in
cmp
lahf
std
mov
lock
or
sub
clc
sbb
clc
xchg
adc
pushf
adc
mov
outs
idiv
in
(bad)
ds
cld
and
aas
inc
scas
out
fcomip
mov
clc
pop
mov
mov
push
cmp
xlat
cld
cs
aas
stc
sub
pop
lahf
cld
and
leave
pop
lock
stc
pop
sahf
jge
addr16
cs
cmp
inc
repz
(bad)
pop
test
jg
jmp
xlat
mov
jle
outs
cld
jbe
scas
mov
inc
repnz
or
out
inc
adc
fstp
xchg
mov
mov
and
aaa
adc
(bad)
mov
stc
stos
test
mov
dec
(bad)
and
call
adc
mov
in
sti
in
cli
sbb
fisttp
cwde
fbld
xchg
aas
inc
js
mov
lea
ds
out
or
shl
mov
mov
cmps
hlt
jmp
call
call
cs
fsubr
jg
mov
test
fst
or
jmp
sub
outs
pusha
push
dec
push
clc
icebp
paddw
cld
std
xor
jg
(bad)
jmp
pop
mov
stc
fwait
leave
jne
aam
or
std
pop
jle
les
mov
sub
lahf
inc
jmp
iret
imul
loopne
jg
shl
idiv
sti
in
dec
jmp
cld
stc
ja
call
xlat
sbb
jg
out
adc
mov
sbb
inc
outs
dec
jp
pushf
out
pop
xor
mov
int
outs
inc
repz
(bad)
test
nop
jle
xor
adc
pop
adc
ja
fstp
xchg
jg
ja
mov
fwait
icebp
daa
call
out
repnz
(bad)
std
cs
mov
fild
pop
jg
out
repnz
es
add
aaa
es
std
cmps
lahf
cld
inc
test
mov
jp
pop
sti
add
xchg
jg
mov
stc
(bad)
jmp
(bad)
sti
jg
(bad)
mov
cli
pop
jle
add
ja
or
(bad)
adc
pop
clc
scas
cli
mov
out
(bad)
sti
mov
mov
jnp
(bad)
xor
xor
cld
jmp
(bad)
cli
mov
out
(bad)
fucomip
xlat
nop
hlt
fld
xchg
call
(bad)
in
cld
cs
push
(bad)
fldenv
dec
outs
repz
jg
(bad)
data16
in
aas
and
aas
jle
xlat
sar
cmp
les
mov
jnp
push
fistp
jg
imul
sbb
mov
into
mov
stc
das
jle
jp
or
dec
push
mov
(bad)
jmp
mov
mov
cs
jbe
mov
popf
bound
mov
popa
hlt
pop
shr
repnz
cmc
lock
das
dec
mov
xchg
(bad)
xor
jmp
stc
ins
ds
movq
dec
(bad)
mov
sti
mov
in
clc
popf
inc
int3
aad
std
(bad)
std
ja
add
mov
or
pop
adc
test
in
stc
jecxz
cmp
sub
iret
jg
dec
(bad)
push
dec
sbb
fist
scas
(bad)
jae
ficomp
lahf
dec
(bad)
out
dec
add
jmp
ja
cmp
outs
cld
mov
clc
fisttp
mov
and
pop
std
outs
cmp
out
and
sti
pop
shl
(bad)
jecxz
loope
jg
pop
mov
hlt
ja
test
fs
call
out
xchg
cmp
jle
jg
test
push
hlt
scas
shr
sar
test
(bad)
cmc
mov
mov
das
jge
pop
cli
pop
xor
icebp
sbb
sbb
out
std
xor
mov
jle
(bad)
aaa
dec
dec
loope
push
mov
pop
je
(bad)
loop
cmps
test
lock
shr
pop
shl
call
sbb
or
(bad)
call
lea
jge
pop
shr
inc
outs
imul
sbb
adc
jbe
cmp
(bad)
mov
mov
(bad)
dec
jg
sti
mov
cld
dec
hlt
jge
std
cld
or
call
iret
call
repz
stc
scas
dec
sub
add
lahf
std
(bad)
hlt
idiv
pop
int
inc
mov
sub
test
jae
dec
cmp
inc
fdivrp
xchg
mov
fistp
call
xor
shl
jg
mov
mov
lahf
std
push
clc
or
push
mov
call
aas
mov
cmp
mov
add
(bad)
imul
pop
hlt
inc
mov
cwde
jle
shl
cmp
call
out
fbld
jmp
out
nop
(bad)
in
fiadd
int3
mov
jge
mov
out
aas
dec
lock
in
lahf
cmps
idiv
shl
mov
jge
mov
mov
inc
call
mov
jmp
icebp
daa
adc
out
fnstcw
hlt
(bad)
fisttp
pop
dec
je
fucomip
out
inc
ins
inc
std
scas
cmps
call
jg
jle
(bad)
out
bt
jg
cli
out
arpl
(bad)
push
aas
mov
shl
es
repz
push
mov
mov
jmp
movs
(bad)
bound
and
jp
mul
in
sub
fist
sahf
jg
sar
std
std
mov
dec
inc
repz
aam
outs
movs
(bad)
sbb
sti
and
mov
aam
push
jge
cmp
sti
out
outs
fbld
clc
imul
mov
ja
call
sti
cmc
or
out
inc
lahf
jmp
hlt
out
pop
inc
(bad)
jmp
(bad)
call
(bad)
(bad)
lahf
mov
jg
std
sbb
int3
call
(bad)
aas
dec
jge
xchg
aam
mov
ret
mov
call
cli
cld
and
jle
(bad)
dec
jmp
jmp
ins
jmp
imul
(bad)
and
jge
push
hlt
stc
fild
std
adc
movs
iret
jmp
jmp
lock
jmp
int
hlt
fwait
or
add
mov
idiv
sbb
(bad)
out
dec
(bad)
div
sbb
push
cwde
fidivr
(bad)
xchg
hlt
xor
jmp
std
test
das
movs
mov
push
shr
mov
popf
out
push
aas
sub
(bad)
fbld
sbb
out
aas
inc
jge
xor
jecxz
movs
lahf
dec
mov
adc
repz
push
fwait
dec
repz
(bad)
mov
push
cmps
sar
(bad)
out
fcomi
(bad)
aas
cwde
pusha
jmp
lahf
jg
std
dec
mov
pop
shr
mov
ror
mov
jo
aam
pop
dec
aas
jg
lock
cmc
test
jg
ficomp
adc
dec
hlt
(bad)
jne
out
rcr
xchg
rep
and
jg
std
cld
lods
jmp
inc
cld
adc
leave
xor
(bad)
aaa
sar
add
cld
test
(bad)
out
std
pop
dec
(bad)
sub
sti
out
and
push
call
jmp
test
mov
call
repz
rcr
push
repz
adc
pop
aam
mov
cli
std
out
mov
cld
scas
xchg
mov
std
aaa
cmps
jle
dec
push
cmps
shr
jg
std
(bad)
aaa
sar
lahf
push
lahf
call
rcr
fmul
jmp
mov
cmc
repz
push
mov
lock
(bad)
pop
ret
cmps
iret
jmp
in
mov
fdivr
add
cld
or
das
rcr
jmp
(bad)
cmp
call
aam
movs
(bad)
jg
notrack
call
rcr
dec
jge
lahf
hlt
sti
lahf
add
shl
mov
lock
xchg
idiv
cmp
push
jp
cmp
xchg
(bad)
dec
addr16
mov
or
adc
in
scas
mov
(bad)
aas
sar
jg
loope
inc
inc
call
and
mov
xchg
imul
(bad)
jecxz
jmp
inc
add
and
push
xchg
pop
movs
iret
jle
(bad)
and
stc
ins
cli
(bad)
out
dec
mov
dec
dec
(bad)
sbb
idiv
jmp
mov
pop
sti
popf
call
(bad)
adc
std
addr16
pop
dec
out
inc
hlt
sti
inc
clc
fucomp
idiv
mov
repnz
cmps
idiv
push
(bad)
jle
std
push
cli
cld
push
std
std
sbb
lods
mov
scas
or
out
push
(bad)
sbb
lahf
out
adc
fisttp
jecxz
mov
test
(bad)
cdq
hlt
fstp
inc
aas
fbld
(bad)
call
out
aas
(bad)
fdivrp
xor
jg
pop
hlt
fidivr
aas
dec
cli
stc
cmp
cmp
shl
wbinvd
into
outs
pop
sbb
push
xor
mov
mov
sar
xlat
call
(bad)
mov
lea
repnz
jmp
iret
call
mov
push
hlt
call
(bad)
jmp
std
dec
mov
(bad)
mov
sar
push
cli
(bad)
mov
repnz
mov
xchg
pop
and
mov
out
clc
imul
out
jg
inc
mov
push
cli
call
repz
iret
cli
xor
sar
(bad)
jmp
call
cmps
(bad)
dec
(bad)
call
pop
fs
sub
push
std
jg
(bad)
inc
(bad)
mov
(bad)
jg
cli
call
hlt
call
(bad)
inc
jmp
dec
cmps
(bad)
jmp
(bad)
push
cli
(bad)
aas
inc
(bad)
call
(bad)
push
std
(bad)
aas
movs
(bad)
push
hlt
call
(bad)
(bad)
mov
imul
out
outs
jmp
das
(bad)
in
in
xchg
outs
pop
cli
jmp
movs
(bad)
call
(bad)
aas
test
jmp
sar
call
cli
call
(bad)
call
(bad)
jg
std
call
mov
(bad)
jg
(bad)
call
sar
jmp
jmp
mov
call
xlat
and
(bad)
jmp
std
call
sar
mov
dec
call
fisttp
push
cmps
call
hlt
inc
(bad)
jg
std
dec
(bad)
call
(bad)
mov
sar
inc
(bad)
fisttp
inc
(bad)
dec
inc
hlt
(bad)
dec
(bad)
jg
std
call
(bad)
jne
lahf
jmp
call
sar
mov
(bad)
jnp
inc
hlt
call
cli
push
jmp
(bad)
mov
jmp
(bad)
aas
xchg
(bad)
inc
(bad)
call
lahf
inc
(bad)
dec
call
(bad)
out
mov
(bad)
jg
(bad)
jmp
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
hlt
(bad)
dec
jp
dec
cli
jmp
(bad)
call
inc
hlt
inc
cli
(bad)
out
inc
(bad)
aas
mov
call
sar
(bad)
(bad)
call
cli
call
dec
(bad)
call
std
jmp
mov
(bad)
mov
sar
call
(bad)
aas
inc
(bad)
call
std
(bad)
aas
cmps
(bad)
dec
(bad)
(bad)
jg
(bad)
jg
pop
lahf
call
call
dec
std
call
std
push
cli
call
dec
cli
call
cli
jg
fwait
(bad)
call
icebp
jg
pop
icebp
daa
dec
scas
pop
push
hlt
cld
iret
loope
dec
mov
xchg
mov
repz
lahf
cld
push
jmp
dec
push
push
(bad)
sbb
xchg
aad
jg
scas
push
push
mov
iret
aas
stc
repz
leave
lahf
cs
lahf
shr
lahf
cld
xchg
pushf
test
fistp
fcmovne
retf
scas
pushf
ins
cmp
jle
inc
lock
sub
jno
int
(bad)
hlt
mov
fistp
lods
fcos
cmp
and
(bad)
daa
repz
dec
(bad)
cld
pextrw
push
enter
daa
mov
xchg
xor
jle
std
pop
lock
out
(bad)
(bad)
sbb
mov
cld
mov
mov
add
scas
cmp
adc
fs
call
(bad)
(bad)
sub
jecxz
sub
xchg
ins
xchg
in
pop
xchg
inc
clc
cmp
pusha
jg
sbb
cdq
fs
mov
fild
into
cwde
call
clc
lea
out
js
mov
and
jns
pop
pop
call
sbb
and
cli
mov
ficomp
cmp
cld
(bad)
clc
cli
xlat
rcl
and
clc
dec
push
jle
cld
clc
fisttp
dec
push
std
rol
pop
xchg
cmp
out
lock
jle
mov
test
mov
xchg
(bad)
adc
sti
(bad)
lock
div
loopne
fisttp
mov
jp
push
jecxz
in
loopne
shl
add
lock
fcomip
loopne
(bad)
(bad)
fisttp
out
rcr
cld
xchg
sub
fistp
mov
push
ds
outs
icebp
ror
jg
mov
xchg
in
cld
mul
loope
jnp
(bad)
icebp
ror
cld
mov
idiv
mov
dec
cld
(bad)
or
xchg
sub
std
movs
clc
add
jae
(bad)
clc
mov
(bad)
pop
pop
pop
dec
jg
push
aas
jle
or
sar
sti
das
mov
dec
loop
dec
dec
(bad)
std
clc
loopne
paddd
cld
clc
test
mov
call
cld
retf
icebp
sbb
jle
xchg
js
sbb
dec
sbb
xchg
loopne
aas
sbb
shl
and
cld
loope
sub
sbb
mov
sbb
clc
in
scas
les
lock
int3
shl
std
out
mov
js
ja
outs
mov
pop
mov
push
jle
jl
in
sbb
std
ss
in
push
(bad)
jmp
std
dec
popa
(bad)
dec
jl
jge
pop
loop
loop
ffreep
out
xor
aas
jle
rol
neg
ret
outs
mov
sti
jmp
(bad)
test
dec
cld
not
mov
loopne
aas
movsx
cmps
clc
in
dec
shr
jle
mov
clc
xor
pop
mov
scas
lock
out
add
std
aad
ret
dec
pop
pop
cld
and
(bad)
in
icebp
icebp
jae
div
movs
daa
clc
push
loopne
pop
cld
mov
push
mov
(bad)
outs
jg
jle
popf
icebp
sbb
xor
and
clc
in
call
ret
adc
(bad)
idiv
sbb
xor
xor
loopne
test
mov
(bad)
ds
out
jecxz
out
jg
mov
shr
pop
push
cld
and
jno
loopne
(bad)
adc
in
sub
jmp
jg
jle
fcomip
in
lahf
mov
inc
pop
jg
ds
push
jg
dec
fistp
loopne
pmaxub
sbb
xor
test
out
loop
in
movsx
outs
mov
outs
call
mov
icebp
fstp
mul
mov
sbb
lock
mov
sbb
jle
cld
imul
loopne
pop
pop
mov
jmp
mov
(bad)
push
cld
clc
add
inc
js
lock
std
sub
clc
loopne
cmp
aaa
icebp
sar
(bad)
jns
mov
lock
loopne
mov
clc
loopne
rcr
movd
not
loop
jg
pop
std
(bad)
scas
shr
jle
ret
icebp
fistp
(bad)
(bad)
pop
cld
test
lock
pusha
(bad)
iret
call
(bad)
push
mov
jle
fwait
jns
push
les
aas
inc
add
inc
jecxz
sbb
dec
cld
xchg
loop
fild
dec
std
ss
lds
out
into
push
(bad)
scas
(bad)
in
inc
(bad)
sti
scas
movs
pop
jmp
(bad)
movd
cld
gs
loope
pop
cdq
clc
push
lock
mov
(bad)
sub
loop
pop
mov
cmp
std
popf
call
xchg
out
(bad)
data16
std
xchg
out
mov
retf
(bad)
ja
sbb
fs
cmp
jg
out
xchg
ret
std
imul
pop
mov
xor
imul
pop
and
cdq
pop
and
mov
push
lea
pop
movs
inc
jmp
aas
mov
or
aas
mov
scas
dec
and
mov
out
inc
inc
mov
cmps
lahf
sar
popa
inc
xlat
hlt
(bad)
aas
nop
dec
cmp
fstp
(bad)
jmp
std
(bad)
out
mov
(bad)
jg
(bad)
(bad)
out
sar
push
cli
(bad)
inc
(bad)
fucomip
(bad)
mov
adc
push
jmp
push
jmp
outs
sar
pop
std
pop
loop
sahf
call
dec
test
(bad)
mov
sar
jmp
(bad)
fisttp
inc
jmp
and
(bad)
jmp
(bad)
mov
not
and
repnz
mov
(bad)
fild
jg
(bad)
call
std
jmp
std
inc
(bad)
out
dec
(bad)
aas
cmps
jmp
(bad)
jmp
(bad)
aas
xchg
(bad)
jmp
repnz
fs
call
push
push
lods
jb
psubsw
pop
push
jb
and
mov
clc
cmc
mov
add
push
cs
test
outs
lock
dec
imul
pusha
cli
jg
int
sub
inc
imul
lahf
cld
cmc
imul
shl
lock
clc
hlt
dec
dec
pop
clc
icebp
inc
cmps
(bad)
cmp
retf
arpl
jle
jecxz
pop
ins
jg
pop
data16
ret
pop
jg
mov
pop
jecxz
xchg
clc
or
lea
mov
fld
les
loopne
outs
loope
fist
(bad)
(bad)
fwait
loope
in
(bad)
lock
mov
ret
dec
clc
lahf
loope
cld
mov
mov
(bad)
(bad)
jge
neg
sar
pop
push
sti
push
icebp
fstp
mov
(bad)
fs
div
pop
jg
jle
xchg
fstp
mov
fld
lahf
or
jne
lock
loope
mov
clc
stos
cmp
pop
sbb
or
pop
loop
mov
dec
les
ffreep
outs
jmp
jle
(bad)
(bad)
xor
jbe
(bad)
and
cmc
jnp
aaa
mov
sar
inc
cmp
lock
icebp
fcmovnu
shl
outs
jg
ds
(bad)
icebp
fucomi
sbb
mov
and
outs
jmp
jle
mov
fstp
fbstp
loop
fist
mov
cmpps
jle
pop
out
fisttp
clc
pop
icebp
fistp
movs
jg
ds
or
mov
mov
icebp
mov
push
jl
out
call
scas
icebp
sar
cvtpi2ps
div
jecxz
sbb
std
mov
mov
pop
mov
loopne
sbb
xchg
push
cld
sahf
mov
mov
fprem
or
jo
mov
pop
mov
lock
mov
mov
ins
push
jle
cld
std
mov
imul
mov
loop
loopne
rol
xor
fstp
scas
(bad)
adc
mov
or
pop
cld
sub
jmp
test
mov
iret
jmp
aas
jle
jmp
fistp
cld
test
mov
adc
fld
(bad)
sar
orps
in
xlat
inc
movntq
out
jmp
cmps
aas
jle
dec
(bad)
out
xchg
push
sbb
movs
test
pushf
out
shl
dec
inc
dec
add
jmp
pop
xchg
push
out
arpl
sti
in
addr16
mov
pop
mov
cmc
sti
jg
ja
and
outs
call
icebp
jecxz
data16
jo
lock
lahf
dec
dec
or
lds
jg
outs
test
shl
inc
dec
xchg
sub
sbb
lods
lock
and
data16
pop
in
test
das
inc
es
(bad)
(bad)
in
out
mov
mov
out
mov
rcl
pusha
loope
add
repz
retf
cmps
add
mov
jmp
pop
cld
or
pop
or
pop
cld
push
dec
jne
pop
jecxz
mov
clc
lea
mov
clc
in
pop
ret
aaa
inc
int3
push
(bad)
push
jl
xchg
loopne
mov
clc
in
das
rcl
clc
xor
jecxz
and
fnstcw
stc
jnp
ins
xor
enter
mov
fs
adc
jle
inc
cs
cmps
clc
pusha
and
adc
(bad)
dec
push
cld
inc
jl
ret
inc
bound
jecxz
and
scas
mov
test
ja
repz
jge
retf
shr
inc
adc
movs
shl
pop
ret
(bad)
(bad)
pop
mov
(bad)
sbb
std
jge
or
ds
imul
pop
mov
es
jg
jle
sbb
arpl
jg
dec
sar
daa
mov
add
(bad)
ds
jg
jle
pop
mov
das
ret
add
aaa
out
out
jecxz
aas
push
mov
loopne
ds
ja
or
clc
call
mov
daa
jecxz
outs
loope
neg
add
push
push
lock
(bad)
xchg
pop
mov
push
dec
push
jle
jle
mov
mov
cli
lahf
loop
scas
pop
ss
cmp
pop
sbb
cmp
xchg
mov
scas
in
sti
iret
leave
sub
or
mov
cli
pop
std
sbb
sbb
mov
ret
pop
and
dec
jle
xlat
jo
leave
cmp
jg
jmp
(bad)
mov
sar
jmp
aas
or
add
sbb
outs
sar
call
aas
bound
cmp
xchg
jno
enter
adc
lea
jne
(bad)
aas
movs
(bad)
aas
cmps
(bad)
jmp
inc
or
(bad)
aas
cwde
dec
xor
fs
paddd
leave
scas
loopne
and
push
jle
pop
adc
and
popf
lock
movs
movs
and
cmc
hlt
jg
idiv
inc
cli
out
ret
jg
sub
pop
jle
xchg
mov
jg
lods
mov
int
mov
lahf
cld
xor
movs
jmp
cmp
adc
loopne
lahf
nop
(bad)
imul
inc
shl
pop
call
inc
(bad)
out
mov
int3
icebp
shr
movd
(bad)
adc
in
int
int
test
neg
sbb
addr16
jge
mov
sbb
sti
cld
cs
or
icebp
fld
fistp
add
test
mov
pop
jmp
test
mov
popa
mov
(bad)
outs
jae
lahf
jecxz
mov
cld
mul
mov
dec
loop
js
pop
jg
call
(bad)
jmp
jmp
(bad)
sub
in
pop
sbb
sub
jb
(bad)
loop
pop
test
fnstcw
mov
pop
inc
(bad)
loopne
aas
pop
sub
std
mov
sbb
call
cli
lahf
(bad)
fldenv
jmp
inc
js
cld
pop
mov
xor
hlt
lahf
(bad)
(bad)
jg
ins
ret
daa
jmp
out
repnz
idiv
into
lahf
cld
pop
mov
sbb
ffreep
imul
jns
jg
xchg
mov
aas
stc
jae
xchg
outs
jg
addr16
and
std
mov
stc
arpl
push
(bad)
in
sti
pop
jbe
jmp
(bad)
pop
cld
push
aad
mov
and
clc
push
jle
test
int
int3
or
add
test
sbb
push
ds
out
add
add
(bad)
loop
std
add
push
jge
outs
aad
test
push
std
out
in
push
std
dec
mov
int3
stos
sti
outs
lds
frstor
and
lods
cli
pop
sahf
pop
cld
and
icebp
cli
loopne
inc
stos
mov
cld
mov
mov
jg
ds
ror
ds
(bad)
jmp
jmp
aas
(bad)
push
xchg
stc
daa
push
mov
in
and
cli
pop
cld
lds
dec
out
repnz
lahf
cld
sbb
test
cmps
std
in
aas
stc
addr16
out
jge
dec
cld
idiv
stc
inc
jle
aaa
fs
ja
outs
mov
stc
cmp
jbe
sub
leave
fcomip
mov
xor
(bad)
xchg
jl
out
adc
js
xor
push
cmps
cld
cs
int
pop
repz
jg
test
mov
cmps
and
fild
pop
push
jecxz
pop
loopne
add
aas
mov
mov
xor
jl
loopne
cld
clc
ins
push
out
loop
out
int
call
mov
fist
call
icebp
leave
shr
scas
fldcw
mov
jle
mov
test
jle
pushf
icebp
mov
(bad)
in
cld
mov
gs
cs
cli
dec
dec
mov
fldcw
dec
(bad)
(bad)
call
push
in
std
push
mov
mov
in
sar
jg
std
(bad)
(bad)
hlt
imul
shr
cmc
push
jne
push
(bad)
adc
mov
and
mov
or
pop
pop
loopne
jg
pop
call
pop
mov
jecxz
jg
ja
cli
in
adc
stc
jnp
dec
mov
fcmovnbe
xlat
clc
icebp
xlat
cmps
adc
clc
sub
das
lock
cld
pop
pop
jle
out
jg
repnz
movs
push
mov
cld
icebp
jmp
or
js
out
test
mov
psubw
lock
jge
mov
in
(bad)
outs
sub
jg
mov
inc
dec
frstor
push
out
repnz
jge
fbstp
repz
jg
scas
lea
add
in
out
cs
das
mov
add
inc
lahf
cld
mov
jg
out
repnz
dec
inc
fcomip
xchg
mov
std
cs
mov
mov
(bad)
mov
fnstcw
sbb
arpl
ins
and
jnp
and
cld
bound
mov
jg
aas
mov
test
xchg
lock
push
or
jns
push
repnz
repnz
push
idiv
loop
repnz
iret
(bad)
cs
daa
jmp
pop
jle
setb
fild
jge
jb
mov
out
repnz
jge
push
(bad)
cs
imul
aas
repz
cwde
cmp
scas
ds
adc
dec
(bad)
mov
push
jge
cmp
cmc
out
cld
leave
jg
mov
aas
stc
pop
jle
xchg
mov
and
sti
pop
dec
(bad)
jle
xchg
mov
mov
daa
(bad)
call
hlt
or
stc
sti
test
ins
xchg
popa
cli
in
aas
stc
fwait
mov
jg
out
repnz
xchg
repnz
int
stc
retf
jg
mov
rcr
adc
jg
or
lahf
dec
pop
lock
dec
add
inc
push
in
(bad)
fild
cli
(bad)
test
(bad)
les
cli
push
std
(bad)
fcomi
jmp
jg
pop
arpl
sub
(bad)
je
icebp
mov
pop
inc
out
inc
stc
jg
inc
std
(bad)
jecxz
dec
popa
mov
aas
add
(bad)
fxtract
scas
ror
clc
sti
shl
clc
icebp
ja
mov
in
ret
mov
loopne
inc
jg
inc
sub
das
cmp
jge
out
or
leave
daa
call
dec
les
xchg
dec
repz
daa
add
(bad)
jnp
es
cmp
aaa
fdivrp
jmp
hlt
xor
stc
out
repnz
push
xchg
in
fbld
or
ss
pop
cmps
cwde
cld
pop
es
iret
jmp
pop
lahf
cld
sar
dec
aas
cld
cmp
not
out
jmp
jg
fcmovnbe
xchg
lea
jle
call
dec
(bad)
dec
cld
sti
cmp
dec
cld
mov
sub
push
and
test
aas
jmp
(bad)
jg
add
fstp
out
cld
into
les
and
mov
iret
dec
cld
push
xor
call
inc
shr
jp
xlat
call
cmc
std
fistp
scas
dec
lahf
jmp
mov
push
cli
pop
push
dec
imul
ja
cmp
hlt
inc
(bad)
xlat
xor
mov
cli
loopne
shl
std
jnp
lock
dec
push
mov
rcr
xchg
inc
aas
push
or
and
sar
mov
test
or
icebp
xor
imul
mov
mov
jge
leave
jg
cmp
enter
(bad)
popf
push
push
mov
mov
fist
xchg
imul
push
rep
pop
sbb
outs
inc
out
cld
mul
mov
dec
inc
mov
sar
cli
in
cld
add
sbb
(bad)
mov
lock
mov
(bad)
repz
pop
jl
dec
dec
lahf
cld
arpl
outs
repz
aas
lock
cmc
mov
scas
xchg
(bad)
imul
out
cld
mov
add
cmp
jecxz
dec
repnz
xchg
mov
fbld
or
add
ja
pop
test
pop
jp
jg
jl
in
hlt
or
es
(bad)
ja
and
out
mov
jb
mov
out
mov
(bad)
jp
pop
sbb
test
jp
shr
jb
fdivrp
aad
ss
mov
clc
jecxz
repnz
sti
hlt
shr
jecxz
cmps
iret
jle
xlat
aaa
daa
popf
jmp
call
les
arpl
stos
pop
scas
xor
sbb
inc
stc
std
jmp
push
xor
push
lods
jg
ret
cli
lods
push
sub
cmps
pop
sar
pop
hlt
call
pop
(bad)
mov
repnz
jnp
scas
ins
loope
aas
shr
mov
pop
mov
or
(bad)
adc
jmp
or
mov
(bad)
das
rcl
cmp
lahf
std
cmp
outs
sti
xchg
cld
pop
ret
shl
inc
shl
aas
inc
push
repz
addr16
mov
cmps
fbstp
std
cs
cmc
pop
(bad)
push
mov
stc
clc
sti
jg
repnz
repnz
or
dec
call
pop
inc
aas
pop
shl
(bad)
hlt
repz
cmc
jle
pop
jecxz
jge
xlat
ror
cmp
(bad)
jg
xlat
stc
xor
(bad)
(bad)
xchg
call
(bad)
jge
(bad)
inc
aas
(bad)
addr16
mov
xor
pop
cmp
add
out
pop
inc
jg
xor
(bad)
jnp
iret
dec
neg
xchg
dec
std
lock
scas
sub
loop
sub
dec
(bad)
push
cli
std
mov
mov
adc
sti
int
imul
ins
dec
jg
push
fcmovnu
mov
call
aas
inc
lahf
mov
sti
(bad)
std
jmp
cmp
idiv
js
out
jg
pop
outs
dec
scas
call
jmp
sti
dec
shr
mov
mov
pop
sbb
jge
adc
mov
out
xchg
(bad)
xor
(bad)
jp
push
(bad)
shl
mov
push
fwait
dec
(bad)
fild
mov
mov
fnstsw
(bad)
jg
std
std
daa
sar
icebp
pusha
stc
sti
out
mov
sti
ja
cwde
call
cld
jae
(bad)
call
(bad)
sub
fnstsw
lahf
jg
mov
fist
iret
mov
cmp
pop
hlt
fstp
dec
mov
pop
dec
mov
sbb
cld
xor
(bad)
cmp
hlt
fldcw
hlt
stc
ss
jle
pusha
cld
inc
hlt
fst
std
cld
arpl
out
arpl
std
pop
cli
jne
fcos
sbb
aas
jg
std
push
cmps
out
(bad)
xor
(bad)
jg
(bad)
jne
jmp
or
xor
std
mov
std
ds
and
jg
hlt
imul
inc
mov
pop
aas
jl
mov
pop
(bad)
mov
mov
sub
jmp
lock
jg
xlat
jo
(bad)
mov
xor
call
lea
inc
hlt
(bad)
cmp
jmp
aas
sti
xor
std
push
mov
lahf
sar
out
call
and
jg
imul
add
xor
mov
jo
jg
sub
mov
sar
jmp
(bad)
cmp
(bad)
mov
les
(bad)
jmp
(bad)
dec
std
call
sbb
sub
mov
xchg
into
adc
add
ds
push
xchg
sub
xchg
js
bound
loope
shl
jmp
(bad)
jg
std
call
cmps
(bad)
call
(bad)
jmp
(bad)
inc
repz
mov
pop
push
daa
lahf
cld
scas
in
cld
das
mov
clc
xchg
sbb
mov
push
jb
inc
mov
sub
(bad)
leave
daa
call
mov
xchg
jg
loop
mov
fwait
dec
(bad)
fisttp
out
es
in
cmps
inc
jmp
das
daa
pop
in
das
out
sahf
loop
sti
adc
lods
sub
cli
sbb
in
and
(bad)
mov
sahf
jmp
sub
ror
jl
inc
loop
aas
and
(bad)
loopne
(bad)
sub
xchg
push
(bad)
leave
(bad)
push
xchg
(bad)
cmp
cli
jno
(bad)
jle
mov
call
lea
jle
jl
sbb
cli
dec
cmp
xchg
mov
mov
in
and
ds
test
pop
std
add
pop
jge
lock
dec
in
hlt
das
loopne
cwde
adc
xchg
aad
xchg
imul
add
and
loop
and
enter
inc
repnz
adc
lds
sti
(bad)
and
mov
icebp
pop
sbb
cmp
jge
jecxz
cmp
jno
cmc
test
cmp
mov
shl
adc
jg
pop
cld
inc
pop
aas
mov
lahf
jae
push
in
push
clc
outs
repnz
push
dec
dec
jg
pop
ret
gs
jle
cli
jmp
(bad)
call
pop
fild
sbb
cmc
mov
push
out
jae
(bad)
out
cmc
imul
push
hlt
(bad)
fisttp
pop
fdiv
dec
dec
call
femms
ret
sbb
scas
movs
(bad)
push
hlt
(bad)
mov
xor
fistp
std
stos
(bad)
outs
test
mov
xor
dec
popf
(bad)
in
std
add
inc
mov
cli
pop
loope
jg
jl
jg
add
jmp
jns
jmp
stc
pop
jg
out
mov
push
in
mov
mov
dec
xor
stos
sub
push
scas
repz
and
sti
iret
and
out
dec
sti
pop
mov
stc
xchg
jle
adc
stc
mov
xor
jecxz
or
cs
arpl
pop
(bad)
ins
push
sub
in
cmp
xchg
add
sbb
inc
sti
das
cmp
inc
xchg
inc
and
das
sti
lahf
leave
das
(bad)
out
jg
repnz
inc
inc
jle
enter
cld
ds
nop
fdivr
ja
idiv
nop
fsub
fild
push
ja
jecxz
jnp
daa
jg
xor
lahf
push
(bad)
loope
cmps
mov
adc
sahf
push
(bad)
popa
(bad)
xor
mov
and
xor
daa
jg
outs
repz
lahf
hlt
cmp
xor
in
cmps
popa
jmp
xchg
sub
movs
shl
dec
std
test
mov
mov
aas
jle
and
xchg
mov
outs
jl
or
dec
idiv
push
(bad)
jmp
ja
or
(bad)
(bad)
cmp
or
call
dec
ja
out
scas
clc
xchg
aam
iret
rcr
sbb
test
out
inc
dec
hlt
test
outs
dec
fs
mov
inc
xchg
sub
pop
adc
adc
inc
fs
adc
adc
aas
pop
jo
or
cmps
lahf
cld
idiv
and
jg
movs
ds
in
clc
sbb
jnp
pop
mov
xchg
mov
xor
retf
cli
in
and
cli
fcmovne
popa
(bad)
fwait
enter
clc
sbb
jg
ret
nop
and
std
jg
ja
leave
sti
in
adc
pop
jmp
pop
clc
add
daa
jmp
outs
inc
adc
inc
cld
pop
ds
sti
jle
daa
jg
outs
inc
pop
(bad)
ss
out
repnz
fbld
retf
test
das
movs
repz
mov
fnstsw
push
je
push
(bad)
push
int3
sub
cli
adc
lods
es
ds
jmp
sar
xor
mov
inc
fcom
std
out
idiv
xor
aad
dec
test
sti
scas
push
fidivr
leave
jg
cmp
add
popf
call
and
mov
test
adc
pop
(bad)
fistp
cld
xlat
mov
out
inc
(bad)
loop
mov
dec
daa
mov
mov
jg
fnstsw
aaa
dec
out
imul
sub
cli
ja
vcvtsd2si
pop
lahf
cld
das
mov
out
repnz
mov
mov
mov
je
push
mov
leave
jg
fist
xchg
iret
push
mov
pop
cli
(bad)
aaa
movs
add
out
loopne
mov
addr16
fucomip
xchg
jmp
pop
jl
pop
dec
(bad)
dec
lods
dec
shr
lea
jge
loopne
cld
in
cmps
sub
sti
in
std
in
ds
xchg
sub
adc
jbe
leave
std
or
imul
(bad)
ja
pushf
mov
popf
pop
not
clc
fidivr
cmp
mov
sar
dec
out
shl
push
stos
iret
enter
xor
pop
adc
call
mov
xchg
enter
loop
movs
ror
jnp
mov
fstp
dec
outs
and
push
(bad)
(bad)
push
hlt
fstp
cli
outs
xchg
cld
inc
adc
aas
jbe
fisub
pop
jg
std
dec
cmp
sti
shr
push
mul
xchg
push
hlt
dec
call
imul
addr16
jl
imul
add
and
daa
cmp
inc
xor
test
push
jge
sti
rcr
test
jp
out
aaa
mov
and
sti
aas
call
and
imul
push
std
dec
out
push
out
out
daa
fdivr
mov
jg
ss
jge
add
imul
dec
mov
and
repz
out
lahf
inc
clc
ss
sbb
jg
or
scas
es
in
xlat
and
sahf
sar
inc
jecxz
call
(bad)
jle
push
jge
aaa
adc
mov
mov
cmp
cld
ficom
jmp
sar
jmp
sub
sub
daa
push
pop
inc
cmc
test
idiv
mov
mov
and
cmps
(bad)
inc
(bad)
cmp
neg
mov
std
ds
std
fcmovnbe
(bad)
dec
jmp
jmp
sti
push
adc
wbinvd
out
pop
mov
hlt
pop
inc
lock
pop
xchg
sti
jnp
iret
fild
pop
push
fstp
nop
pusha
std
lahf
add
pop
adc
xlat
adc
inc
arpl
or
std
pop
xchg
or
inc
out
out
adc
inc
sub
lahf
push
pop
mov
fdivrp
scas
call
cld
pop
inc
rcr
call
cli
cld
jno
stc
cmp
mov
out
inc
std
(bad)
push
xor
add
(bad)
xor
call
dec
xor
or
push
adc
mov
cmp
das
jmp
mov
hlt
fnsave
stc
outs
rcr
(bad)
data16
jg
mov
(bad)
aam
jg
xor
cmc
aam
mov
mov
jle
aas
test
scas
or
jg
(bad)
(bad)
mov
es
stc
xchg
shl
pop
xor
pop
mov
jge
ins
jmp
stc
xchg
mov
cmc
mul
pop
or
cwde
rcr
dec
push
pop
push
mov
inc
in
pop
shl
mov
(bad)
mov
lock
(bad)
aas
lock
test
std
std
sub
repz
sti
mov
ins
mov
icebp
mov
mov
lahf
call
iret
jb
xlat
pop
dec
js
dec
hlt
stc
out
test
mov
clc
ja
fild
jg
int
lahf
dec
mov
shl
sbb
(bad)
in
xor
push
dec
inc
cmp
(bad)
hlt
sti
lahf
inc
out
std
fidiv
jg
push
call
pop
and
jg
mov
inc
aam
jg
xor
mov
jne
neg
inc
out
cld
outs
xor
jg
loope
inc
sar
sti
add
outs
mov
stc
rol
mov
mov
xor
mov
(bad)
sbb
cld
ds
mov
mov
mov
call
fisttp
clc
sbb
mov
jg
fdivrp
pop
jmp
push
fdivrp
dec
mov
call
mov
push
fisttp
call
jmp
fistp
rcr
fwait
jg
out
das
mov
cld
dec
test
fisttp
ret
pop
cmp
test
call
mov
lahf
loopne
cmc
hlt
out
jg
lahf
jg
cli
scas
or
imul
std
cmps
test
jg
jae
push
fstp
pop
cli
sar
jmp
popf
mov
(bad)
(bad)
daa
push
mov
and
fistp
mov
pop
jge
jmp
(bad)
xor
repz
jle
sar
jg
push
add
cli
cdq
push
fcomip
ja
jo
call
repz
outs
dec
jge
mov
out
sar
inc
hlt
idiv
(bad)
jmp
jo
inc
std
call
jo
push
in
and
out
out
out
and
jle
jge
aaa
adc
call
(bad)
out
add
scas
es
push
ret
mov
out
mul
std
scas
and
std
(bad)
call
jg
(bad)
xacquire
fnstsw
push
sbb
push
mov
ja
out
mov
push
sti
out
popf
div
hlt
repz
mov
test
pop
adc
std
fiadd
xchg
jo
scas
mov
movs
jno
adc
pop
inc
clc
jl
jae
sti
shr
mov
sar
sub
jecxz
and
cli
stc
pop
jmp
shl
inc
xlat
aas
xchg
inc
jmp
movs
idiv
std
(bad)
mov
(bad)
xor
push
jge
push
aas
jg
std
(bad)
sti
sar
test
jg
jecxz
dec
hlt
jl
mov
pop
hlt
sti
pop
dec
clc
jmp
sar
sar
cwde
cli
mov
or
std
test
pop
and
push
out
jg
jecxz
in
retf
pop
inc
lahf
aas
cmps
ja
dec
sbb
pop
inc
std
call
hlt
ds
hlt
(bad)
aas
pop
mov
ja
and
sub
cmc
fwait
push
mov
sbb
data16
jmp
out
jg
(bad)
jne
(bad)
jg
jecxz
xchg
imul
cmc
icebp
imul
pop
mov
jg
lock
or
out
lahf
out
xchg
lock
arpl
idiv
mov
(bad)
mov
lock
fisttp
mov
sti
xchg
fcompp
and
mov
hlt
repz
js
cli
xor
add
xlat
and
(bad)
fild
daa
test
add
cli
iret
shl
sar
out
inc
mov
dec
std
pop
adc
jg
loope
pop
adc
xor
adc
mov
(bad)
std
xchg
adc
ins
xor
adc
call
lahf
mov
or
cmp
cmc
scas
and
dec
out
mov
jg
mov
jb
mov
cli
cld
adc
out
iret
and
in
push
sti
fistp
sub
call
mov
adc
je
stc
fwait
sar
mov
jmp
cld
add
stc
add
imul
adc
jg
loope
(bad)
push
fstp
out
pop
adc
add
(bad)
pop
test
test
inc
repz
outs
sar
push
mov
jno
loope
daa
pop
jg
sar
mov
xor
clc
xor
jecxz
push
int
pop
inc
jo
jle
test
push
pop
push
sti
mov
cmp
cmp
repz
mov
jecxz
mov
(bad)
dec
dec
hlt
out
aas
add
mov
rep
adc
xor
dec
mov
retf
mov
mov
pop
cld
inc
les
cmp
call
mov
call
mov
(bad)
pop
dec
lahf
cmp
in
mul
fsub
sti
aas
mov
ja
js
out
es
pop
push
das
adc
cld
inc
cmp
rcr
aam
pop
dec
aas
jmp
adc
popf
aas
fwait
(bad)
jg
mov
pop
std
cld
out
or
mov
(bad)
mov
test
das
and
cmps
rcr
mov
mov
stc
inc
sbb
std
xchg
add
mov
fisttp
sub
ins
push
aaa
adc
dec
repz
sar
bound
lahf
mov
inc
mov
das
push
aas
adc
(bad)
aas
dec
arpl
and
test
cmc
sbb
idiv
inc
lahf
mov
jmp
call
(bad)
scas
hlt
repz
mov
cmps
stc
jg
aas
call
cwde
jg
std
cld
pop
push
stc
xlat
adc
pop
(bad)
js
pop
cmps
ja
movs
jno
(bad)
iret
pop
inc
arpl
out
push
out
mov
jmp
mov
jle
jmp
mov
call
aam
pop
and
call
lahf
or
(bad)
fisttp
std
mov
ja
ja
jno
repz
jecxz
xor
sar
jnp
out
pop
inc
lahf
dec
hlt
(bad)
aas
mov
sti
cmps
sar
xor
dec
mov
sbb
arpl
dec
arpl
popf
mov
and
call
and
out
aas
and
jg
sub
xchg
repz
cli
cld
and
mov
(bad)
mov
adc
jg
std
std
outs
push
mov
pop
adc
jg
cld
not
push
aas
mov
adc
adc
pop
push
mov
pushf
xabort
rcr
jmp
sbb
aas
inc
ins
(bad)
xor
loope
cdq
ds
cmp
adc
(bad)
cmp
in
push
mov
inc
fstp
lahf
sar
test
scas
dec
(bad)
fwait
aam
dec
aas
mov
sti
aas
dec
mov
loope
adc
aas
popf
jo
fwait
call
mov
sbb
pop
test
pop
inc
jl
or
cld
cmp
pop
push
retf
inc
outs
adc
add
out
pop
shr
mul
(bad)
idiv
lock
(bad)
call
es
aas
daa
pop
dec
jg
(bad)
(bad)
sti
push
fld
ret
mov
dec
or
fisttp
std
cmp
aaa
and
xchg
out
xlat
daa
sbb
test
iret
shl
sub
jg
mov
out
jg
ret
fdivrp
xchg
jle
call
jg
mov
inc
or
fisttp
call
cli
(bad)
jg
xor
push
mov
jnp
int
dec
cmp
iret
shl
cmp
hlt
cmp
mov
jmp
pop
push
fild
out
outs
dec
jae
cmp
test
(bad)
out
aam
push
lea
xor
mov
std
sbb
fisttp
dec
add
aaa
mov
out
movs
ja
ja
push
shr
pop
mov
out
push
adc
std
out
hlt
(bad)
aas
cwde
loopne
cmp
pusha
jle
(bad)
fcmovnbe
neg
test
outs
dec
arpl
sub
cmps
ja
or
out
aaa
and
dec
adc
daa
hlt
pop
dec
(bad)
call
push
mov
arpl
in
shl
stc
daa
shl
mov
jl
jo
push
shl
mov
lahf
dec
mov
dec
mov
sti
pop
push
(bad)
jg
mov
pop
cmps
test
push
(bad)
mov
cmp
(bad)
in
jmp
std
pop
test
out
dec
mov
inc
xor
(bad)
mov
push
dec
fbld
fdivr
std
inc
js
jg
sti
aas
and
std
repz
call
mov
xchg
lock
mov
push
xor
mov
dec
cld
hlt
cmps
push
(bad)
mov
adc
jge
dec
sbb
sub
cld
out
xchg
ds
jg
sar
or
icebp
into
scas
dec
(bad)
inc
jmp
mov
jbe
std
mov
popf
inc
mov
mov
stos
jg
in
test
push
push
inc
adc
adc
mov
shr
inc
pop
adc
fild
mov
clc
daa
call
dec
pusha
(bad)
push
hlt
std
arpl
jecxz
and
jg
(bad)
loope
cmps
idiv
cli
std
jg
fcom
mov
xchg
js
outs
cmps
mov
and
loope
cli
jno
enter
repnz
cmp
adc
daa
dec
cmp
jnp
es
outs
je
xchg
out
mov
pop
call
call
add
or
push
out
cmc
and
loopne
cmp
imul
std
imul
rcr
(bad)
call
scas
and
int
xchg
(bad)
push
pop
inc
xchg
add
movs
pop
inc
xchg
add
xor
(bad)
inc
(bad)
fucomip
(bad)
mov
push
hlt
call
not
xchg
aam
sub
dec
(bad)
out
inc
call
jmp
cli
call
dec
(bad)
jmp
call
inc
mov
jmp
xlat
xchg
push
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
cli
jmp
jmp
push
(bad)
jg
(bad)
mov
call
xlat
hlt
(bad)
out
sar
das
call
dec
std
dec
(bad)
(bad)
fxtract
(bad)
mov
sar
dec
(bad)
aas
dec
(bad)
jmp
(bad)
(bad)
cmp
(bad)
fbld
(bad)
dec
(bad)
jg
pop
fwait
sub
std
push
pop
pop
push
xor
dec
call
call
(bad)
mov
call
(bad)
aas
nop
(bad)
inc
(bad)
call
lahf
dec
(bad)
jmp
jmp
(bad)
out
mov
(bad)
jg
(bad)
jmp
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
hlt
(bad)
dec
cmp
(bad)
mov
sar
ja
dec
jmp
call
jg
jmp
jmp
aas
mov
inc
cld
cmp
(bad)
jmp
cli
(bad)
fcomip
jmp
mov
(bad)
(bad)
enter
lock
and
scas
cmc
jmp
sbb
(bad)
jg
cli
(bad)
out
dec
(bad)
call
pop
sar
lahf
sar
lahf
sar
pop
sar
mov
(bad)
jmp
cli
(bad)
cmp
call
inc
(bad)
jmp
call
dec
cmps
(bad)
call
(bad)
push
sar
push
(bad)
mov
jmp
(bad)
mov
cli
jmp
inc
(bad)
jmp
scas
daa
or
hlt
inc
jmp
(bad)
fistp
dec
cli
dec
call
inc
(bad)
jmp
(bad)
jg
std
jmp
mov
(bad)
mov
sar
dec
cli
(bad)
mov
call
(bad)
mov
cli
(bad)
inc
dec
std
push
(bad)
inc
dec
std
call
std
jmp
std
inc
scas
das
or
cli
jg
(bad)
mov
hlt
(bad)
aas
xchg
jmp
pop
pop
push
jno
inc
cli
(bad)
fisttp
inc
(bad)
(bad)
cmp
(bad)
fbld
(bad)
jmp
(bad)
(bad)
jmp
push
in
cld
push
mov
idiv
(bad)
jnp
inc
call
hlt
(bad)
out
sar
mov
inc
push
pop
imul
iret
sar
dec
cli
call
dec
(bad)
push
jg
pop
inc
std
imul
jg
std
call
movs
(bad)
call
hlt
(bad)
jg
(bad)
(bad)
out
sar
dec
(bad)
inc
(bad)
fucomip
(bad)
mov
sar
jg
cli
jg
(bad)
call
std
jg
(bad)
jg
(bad)
push
std
call
call
call
sar
push
cli
call
call
jmp
hlt
(bad)
jg
(bad)
dec
sar
push
(bad)
jmp
std
(bad)
jmp
lea
(bad)
jg
cli
jmp
hlt
(bad)
cmp
dec
std
dec
cli
push
call
std
jmp
inc
jmp
dec
(bad)
(bad)
stc
hlt
(bad)
mov
sar
call
(bad)
aas
dec
(bad)
jmp
call
(bad)
fbld
(bad)
call
(bad)
jg
fist
ins
call
pop
hlt
(bad)
jge
call
std
(bad)
fcomi
call
(bad)
fist
pop
sar
jg
(bad)
inc
call
dec
mov
(bad)
mov
sar
(bad)
jle
(bad)
aas
dec
(bad)
call
std
(bad)
aas
cmps
(bad)
dec
(bad)
push
hlt
(bad)
fist
(bad)
aas
mov
call
hlt
push
cli
jmp
dec
jmp
jmp
dec
mov
(bad)
aas
cmp
pop
sar
call
cli
(bad)
fild
inc
call
call
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
jmp
cmps
(bad)
push
dec
(bad)
cmp
jmp
(bad)
fistp
pop
hlt
inc
(bad)
jg
std
dec
(bad)
call
(bad)
mov
sar
jmp
cli
(bad)
fild
inc
call
(bad)
fbld
(bad)
dec
(bad)
jg
fild
mov
call
std
jmp
std
jmp
std
inc
or
dec
jmp
call
js
call
jmp
jmp
(bad)
(bad)
mov
(bad)
jmp
sar
jmp
(bad)
jg
(bad)
(bad)
out
jmp
(bad)
jg
(bad)
jg
fist
sar
jg
(bad)
mov
(bad)
aas
cmps
(bad)
call
jmp
std
mov
call
(bad)
inc
call
dec
mov
(bad)
mov
sar
jmp
cli
(bad)
aas
inc
(bad)
call
call
(bad)
mov
hlt
(bad)
inc
les
(bad)
fild
(bad)
aas
mov
call
hlt
push
cli
jmp
push
jmp
pop
inc
(bad)
inc
hlt
(bad)
aas
pushf
(bad)
jmp
sar
jmp
pop
inc
(bad)
jmp
(bad)
jg
std
call
mov
(bad)
jg
(bad)
(bad)
out
sar
dec
cli
(bad)
inc
fucomip
(bad)
mov
movs
(bad)
push
dec
jmp
(bad)
call
(bad)
out
inc
dec
jmp
call
sbb
call
call
jmp
(bad)
(bad)
jge
(bad)
jg
(bad)
dec
sar
push
(bad)
jmp
std
(bad)
jmp
add
cmp
(bad)
jg
cli
jmp
hlt
(bad)
sti
hlt
(bad)
fild
xlat
fs
iret
(bad)
push
fs
pop
sbb
imul
push
std
or
(bad)
mov
pop
mov
lods
xchg
shl
loope
xchg
jmp
jg
mov
lock
(bad)
cmp
cli
jnp
fadd
dec
(bad)
(bad)
hlt
or
(bad)
jne
lahf
cmp
std
jae
loope
cdq
(bad)
pop
clc
icebp
daa
movs
mov
jmp
cmc
mov
cli
mul
xchg
jmp
lahf
mov
or
lock
test
xor
ins
js
cmp
inc
clc
loopne
shr
jle
(bad)
(bad)
pop
cld
test
sti
mov
jmp
rcr
mov
pop
(bad)
outs
mov
icebp
(bad)
scas
ret
add
idiv
loop
cwde
(bad)
cmp
jmp
mov
pop
jmp
cmp
clc
in
add
lock
loopne
jg
int
in
jg
mov
mov
mov
(bad)
and
outs
jg
jle
add
std
adc
fld
jbe
sbb
xor
in
vmread
sbb
scas
lock
sahf
jecxz
js
mov
outs
pop
loope
pop
pop
mov
fld1
test
mov
lods
pop
cmps
scas
lock
mov
dec
neg
loopne
adc
neg
loope
pop
or
mov
icebp
fcos
idiv
push
jle
pop
lock
idiv
ret
outs
outs
icebp
fstp
jl
das
loope
jg
mov
out
lds
das
lock
sbb
cld
not
mov
js
das
shr
xor
shl
(bad)
fdivrp
arpl
fstp
cld
test
lea
imul
loopne
adc
loopne
aas
or
(bad)
fdivrp
in
adc
mov
mov
and
sahf
jecxz
sbb
jp
pop
pop
cld
sar
jmp
call
hlt
fld
lock
loop
jg
dec
jg
cld
idiv
mov
call
std
iret
clc
in
mov
mov
and
lock
jecxz
jg
(bad)
stos
clc
in
ja
push
jle
mov
fistp
iret
paddd
jg
xchg
js
push
loope
retf
cmp
test
xchg
(bad)
jecxz
pop
pop
jg
ds
adc
jg
cmp
outs
xor
rcr
mov
in
test
jnp
pop
stos
sub
add
adc
imul
rol
mov
out
loop
jg
mov
mov
outs
mov
icebp
fld
(bad)
add
mov
sbb
jle
mov
outs
(bad)
cmp
call
clc
in
test
sti
das
xor
or
loop
or
(bad)
popa
cld
test
fcmovnu
mov
jle
cld
not
jecxz
mov
cld
imul
mov
daa
loop
pop
mov
cld
loope
in
mov
mov
and
sti
inc
clc
in
outs
(bad)
addr16
clc
in
out
inc
mov
or
mov
mov
adc
dec
jl
pop
mov
sbb
xor
jg
ss
(bad)
outs
mov
icebp
fld
repnz
(bad)
cmp
imul
cmpps
cld
test
adc
sar
cs
dec
lock
jle
jl
(bad)
loop
jg
lahf
std
(bad)
pop
sbb
sub
pop
mov
or
sbb
lock
lea
add
cmc
pop
jg
jle
lock
push
mov
pop
cld
dec
clc
loopne
ret
outs
jg
pusha
mov
(bad)
fcmovnu
sbb
dec
cld
not
std
jl
fbld
in
or
not
jle
shr
mov
outs
jg
jle
dec
lock
fistp
hlt
icebp
mov
test
idiv
jecxz
jg
out
mov
clc
in
cs
mov
in
adc
shr
jle
ret
lock
pop
movups
movsx
push
jg
ds
sbb
lock
loope
aas
xchg
jle
sbb
std
xlat
add
das
(bad)
outs
or
jle
jle
int
fild
in
div
sbb
in
push
jl
xchg
(bad)
push
sahf
jg
neg
mov
add
aaa
cld
idiv
shr
mov
cld
xchg
jmp
arpl
(bad)
dec
cli
xchg
loope
fild
push
push
iret
shr
pop
(bad)
outs
mov
std
add
outs
aas
ret
cld
(bad)
(bad)
and
aas
jle
or
loop
fist
push
(bad)
ins
cld
test
mov
adc
xchg
mov
test
pop
mov
pop
loope
aas
cmp
mov
sti
hlt
fucomi
bnd
cld
and
clc
sub
jnp
(bad)
and
mov
jle
ret
xor
pop
push
mov
or
std
into
clc
in
pop
add
or
jg
xor
mov
imul
jl
sub
fistp
cli
in
ja
mov
dec
test
jge
mov
clc
loopne
lds
test
(bad)
mov
std
adc
jmp
sbb
fstp
mov
(bad)
xor
div
mov
pop
das
fidivr
mov
jle
(bad)
rcl
pop
mov
clc
add
test
mov
loope
pop
mov
jg
mov
clc
in
aas
les
lock
sbb
out
out
loope
or
lock
mov
jle
cmp
lock
pop
clc
loopne
(bad)
outs
dec
or
(bad)
in
out
inc
repz
cmc
mov
cmp
clc
in
mov
jle
lock
mov
neg
outs
mov
icebp
fistp
mov
(bad)
jle
div
jecxz
mov
clc
in
scas
(bad)
outs
(bad)
cmp
fld
inc
mov
and
sti
arpl
fld
ret
xor
shl
fist
clc
in
iret
add
push
cld
imul
loop
fild
mov
dec
cld
jbe
fcomp
aaa
push
icebp
(bad)
call
mov
pop
clc
div
outs
mov
stc
aaa
sahf
jg
test
shr
mov
(bad)
loope
inc
std
addr16
in
or
aad
js
scas
loop
aas
add
imul
loopne
push
call
shl
aaa
loopne
out
jmp
ret
outs
jg
call
daa
loope
aas
add
dec
cld
imul
loop
lahf
shr
sbb
clc
in
aas
(bad)
outs
jae
mul
add
out
xchg
jbe
fistp
cld
div
fucomp
jo
clc
in
test
jecxz
cmp
ret
out
push
mov
add
int3
fisttp
lea
jl
out
mov
push
std
jb
in
xlat
shr
jle
jecxz
(bad)
icebp
sbb
jle
aaa
lock
cmp
daa
icebp
fistp
jle
(bad)
out
outs
lds
add
std
aad
in
add
adc
fstp
leave
repz
(bad)
push
inc
stc
xor
mov
nop
sahf
cmp
cmp
outs
mov
lock
outs
mov
out
push
jl
pop
mov
call
inc
fs
mov
sub
jns
fistp
cld
idiv
mov
or
xlat
ret
daa
jle
fistp
std
not
retf
(bad)
sub
neg
cld
cmp
in
cmovae
mov
mov
jl
mul
mov
movsx
sub
aas
clc
imul
pop
xchg
jmp
xchg
lahf
mov
nop
push
cmp
jecxz
fstp
test
push
cld
test
pop
jecxz
jg
fist
in
ja
cmp
jnp
out
jnp
in
pop
clc
in
daa
lock
shl
xor
jbe
(bad)
ret
outs
sub
nop
jl
clc
pop
lock
test
imul
aaa
loope
fist
mov
xlat
les
mov
add
push
mov
lahf
loop
lahf
(bad)
outs
push
std
idiv
lock
call
cmp
clc
xchg
rcl
ja
mov
push
nop
(bad)
jp
test
pop
mov
push
cld
jns
pusha
sbb
imul
aas
or
dec
stc
aaa
mov
push
push
clc
icebp
icebp
sar
cld
jle
mov
sub
mov
sbb
pop
clc
in
lahf
inc
rdseed
or
clc
in
ffreep
addr16
in
scas
add
ffreep
mov
(bad)
lock
lds
adc
std
mov
sti
aad
xor
jbe
aaa
(bad)
addr16
test
mov
adc
dec
mov
sar
cli
out
fstp
adc
or
in
hlt
ja
shr
lock
jecxz
dec
std
xchg
clc
in
out
push
movs
aas
pop
pop
mov
jg
ds
sbb
push
in
or
and
sub
fstp
in
das
inc
mov
mov
inc
mov
lock
repnz
fistp
loop
fist
mov
push
cld
test
mov
fistp
ret
add
jl
fwait
jecxz
and
movd
test
sti
aas
xchg
mov
das
mov
pop
cld
ja
loopne
add
jge
scas
(bad)
sub
mov
les
sub
(bad)
ret
outs
loopne
mov
jp
push
loopne
mov
clc
in
mov
mov
je
sbb
cld
sar
punpcklbw
(bad)
outs
jg
inc
sub
sbb
or
in
out
popa
stc
(bad)
outs
jg
jle
lds
sbb
les
xor
icebp
(bad)
mov
addr16
jbe
js
and
fisttp
out
(bad)
(bad)
and
div
clc
in
push
loopne
jg
out
(bad)
mov
fucomi
repnz
push
(bad)
xor
ds
ja
fistp
jle
fcomip
loop
sbb
cld
imul
mov
jecxz
jg
mov
iret
lds
add
lock
cld
test
mov
ret
outs
jg
jle
mov
stc
xchg
adc
and
stc
inc
pusha
idiv
mov
shr
cld
jecxz
addr16
in
xor
mov
cmp
cld
jecxz
xchg
in
mov
mov
mov
pop
mov
clc
in
dec
(bad)
mov
bnd
fbstp
neg
jecxz
dec
out
in
ffreep
outs
jg
jle
pop
icebp
fistp
icebp
(bad)
jecxz
lahf
(bad)
outs
jg
jle
jecxz
(bad)
fisttp
cli
in
ja
ds
mov
rcr
dec
not
mov
xchg
jecxz
jg
out
jmp
cld
not
mov
pop
int
(bad)
(bad)
sub
sbb
clc
mov
sahf
loopne
stc
shl
(bad)
std
shl
mov
arpl
mov
fcmovnu
sbb
mov
outs
enter
sbb
sar
(bad)
jnp
in
or
or
sub
fstp
mov
dec
cmp
jg
mov
fcomp
mov
cmps
pop
push
mov
sbb
(bad)
jae
sti
aaa
dec
dec
loope
push
mov
(bad)
xchg
mov
call
jg
cli
call
jg
call
jne
das
mov
(bad)
mov
repz
mov
jg
scas
(bad)
sub
(bad)
(bad)
out
call
rol
pop
inc
add
or
call
(bad)
cmp
aas
pop
or
lock
hlt
call
std
pop
dec
stos
ja
(bad)
aas
nop
dec
outs
inc
stos
or
pop
dec
(bad)
call
cld
jecxz
jg
mov
or
xchg
(bad)
jmp
or
iret
or
pop
cli
call
aas
ret
xchg
lahf
mov
movzx
shld
push
hlt
(bad)
aas
(bad)
dec
(bad)
jmp
(bad)
dec
jmp
call
(bad)
call
call
push
push
sbb
movs
fild
xor
inc
into
add
fsubr
inc
inc
or
ins
jmp
sub
call
pop
cli
out
scas
cmps
(bad)
jmp
jg
add
jbe
inc
fcomi
inc
hlt
jmp
cli
push
(bad)
mov
(bad)
mov
(bad)
inc
cli
call
jmp
jmp
(bad)
(bad)
std
hlt
(bad)
jg
(bad)
jmp
sar
call
(bad)
jg
(bad)
call
jmp
call
clc
jne
sahf
jle
pop
jecxz
clc
lods
call
outs
sar
imul
dec
jmp
call
(bad)
jle
(bad)
cmp
mov
std
dec
hlt
(bad)
aas
xchg
call
cli
(bad)
fild
inc
jmp
call
(bad)
(bad)
sti
hlt
(bad)
call
(bad)
push
cli
jmp
jmp
aas
movs
(bad)
jg
(bad)
mov
(bad)
jg
(bad)
jmp
dec
dec
cli
call
(bad)
push
(bad)
call
sar
jmp
(bad)
fild
jnp
(bad)
call
std
call
(bad)
call
(bad)
inc
jg
std
(bad)
jmp
lods
(bad)
sar
jg
cli
(bad)
out
dec
(bad)
mov
(bad)
aas
mov
jg
(bad)
jmp
cli
dec
mov
(bad)
aas
mov
jmp
(bad)
(bad)
jl
call
(bad)
call
std
call
cmps
(bad)
dec
(bad)
call
cli
jmp
mov
push
hlt
(bad)
cmp
(bad)
jnp
dec
call
jg
(bad)
(bad)
cmp
scas
call
aas
mov
inc
sar
push
call
(bad)
jmp
std
(bad)
out
mov
(bad)
jg
(bad)
(bad)
out
sar
push
movs
xchg
mov
(bad)
scas
nop
dec
shl
daa
dec
jmp
call
into
and
xchg
mov
mov
shr
loopne
jg
std
mov
xchg
js
pop
(bad)
in
ds
pop
sar
adc
cld
popf
jmp
xchg
(bad)
jmp
add
mov
jg
cli
jnp
ret
aas
div
add
mov
test
dec
(bad)
loopne
cld
mov
js
aas
sar
repnz
mov
jo
ucomiss
shl
rcl
dec
loop
outs
jle
and
jecxz
push
jl
sbb
push
cmp
out
stos
sub
mov
int
(bad)
outs
adc
sbb
mov
lds
cmp
jo
jmp
mov
or
(bad)
jmp
in
dec
pop
loop
aas
or
lahf
add
push
jle
mov
(bad)
ins
sar
icebp
fld
jle
cmp
outs
mov
icebp
fucomi
(bad)
iret
(bad)
js
in
ja
lods
paddd
jl
pop
loope
lahf
shr
sbb
clc
in
pop
shr
idiv
mov
movsx
mov
in
or
aad
lock
mov
jle
cld
neg
(bad)
(bad)
mov
jle
xchg
lock
(bad)
jns
sti
fwait
loopne
lods
sub
cld
cmp
in
add
dec
cli
or
adc
loope
inc
mov
push
jle
inc
shr
mov
cld
test
aas
pop
outs
cld
add
or
sbb
ss
clc
imul
dec
jbe
(bad)
or
push
mov
mov
sbb
(bad)
adc
in
ja
hlt
loopne
jecxz
jg
pop
cld
and
neg
rol
fincstp
icebp
fistp
mov
pop
jecxz
fistp
mov
cld
test
(bad)
jge
xchg
fistp
cld
push
inc
jl
fnclex
mov
add
inc
clc
or
(bad)
outs
inc
jle
push
inc
std
test
std
cs
dec
pop
cld
jbe
icebp
aas
shr
mov
inc
neg
loopne
jg
mov
add
sbb
fistp
pusha
out
push
(bad)
pop
jl
jae
lock
jecxz
aas
push
mov
cmps
jmp
mov
dec
push
dec
jl
stos
ror
add
pop
mov
jle
sbb
clc
in
jg
outs
lahf
loope
iret
push
lds
jae
pop
in
push
sub
pop
pushf
inc
scas
icebp
sbb
jg
hlt
retf
mov
stc
dec
(bad)
mov
inc
xchg
sub
out
xor
clc
mov
rol
das
loopne
in
loopne
les
(bad)
loopne
(bad)
outs
mov
clc
in
push
loop
mov
clc
in
das
les
push
jle
shl
fstp
sbb
pop
cld
test
mov
sbb
jmp
das
scas
lock
or
jle
cld
mul
add
push
clc
in
das
shl
fistp
loope
lahf
les
clc
in
shufps
pop
sub
outs
add
mov
push
pop
pop
mov
icebp
aad
mov
jb
clc
stos
push
in
xchg
mov
(bad)
push
cld
neg
mov
retf
aas
jle
sti
sar
mov
mov
mov
add
cld
in
push
aas
add
inc
jl
cmp
sub
ror
ins
jecxz
aas
adc
inc
mov
sbb
inc
not
fstp
mov
icebp
(bad)
mov
xor
neg
mov
adc
ja
or
pop
add
arpl
push
scas
out
movsx
inc
mov
loopne
pop
sbb
pop
je
pop
loope
daa
pop
mov
jb
imul
call
inc
or
mov
(bad)
push
mov
fistp
(bad)
retf
clc
or
mov
jle
sahf
jg
in
ja
cdq
cmp
(bad)
xlat
loope
js
pop
jg
jle
xor
mov
dec
shr
mov
out
mov
sbb
sbb
jg
push
iret
out
loopne
mov
test
movd
lock
mov
sbb
push
jecxz
cmp
in
add
add
(bad)
outs
sub
jno
clc
clc
loopne
ret
push
sbb
push
clc
or
sbb
push
cld
idiv
mov
xchg
jecxz
sbb
mov
sbb
lods
sar
xor
mov
in
pop
shr
jg
in
ja
clc
pop
call
loopne
vmaxsd
cmc
mov
je
addr16
aas
sbb
shufps
jle
mov
repnz
add
(bad)
outs
jl
sti
loope
sub
mov
cmp
in
aas
add
popf
clc
in
push
cld
jbe
lahf
(bad)
lock
outs
jg
mov
push
loop
outs
sbb
jp
imul
loopne
mov
pop
dec
mov
jg
outs
sub
loopne
mov
clc
in
lahf
(bad)
mov
jg
lock
loope
call
(bad)
add
sbb
std
fcomi
fstp
mov
imul
pop
xchg
(bad)
and
mul
mov
std
cs
pop
jg
call
mov
and
cld
and
push
pop
stc
loopne
mov
icebp
fstp
xchg
icebp
fistp
fistp
int3
cli
lahf
push
(bad)
mov
icebp
fcmovnu
(bad)
iret
shr
ds
pop
icebp
fistp
sbb
mov
(bad)
jecxz
into
and
ffreep
add
(bad)
mov
je
sar
jle
jbe
inc
pop
xchg
fstp
in
aas
stc
idiv
fucomip
xchg
jg
dec
shl
dec
(bad)
pop
lahf
cld
mov
retf
retf
dec
dec
stos
dec
(bad)
and
clc
jle
ja
mov
daa
jg
addr16
stc
imul
cli
leave
pop
(bad)
dec
enter
lods
sbb
stc
xor
in
aas
xchg
mov
repnz
mov
(bad)
loop
pop
add
jg
jle
pop
cmps
pop
push
jl
loope
out
or
xchg
adc
pop
outs
jecxz
aas
push
mov
mov
ret
jmp
dec
data16
cmc
cmp
cld
dec
clc
adc
cld
stc
outs
sbb
push
mov
pusha
outs
jmp
push
arpl
repnz
loope
(bad)
js
push
jle
and
aas
xchg
cwde
xor
adc
inc
pop
jg
ds
repz
(bad)
xor
sub
push
jnp
pop
loope
out
jg
notrack
shl
dec
les
das
push
xor
adc
pop
cld
(bad)
or
cmps
mov
lock
xchg
jle
mov
cld
idiv
lea
add
(bad)
ffreep
add
jl
pop
dec
fs
scas
(bad)
mov
add
cld
mov
inc
push
loop
out
and
iret
lahf
test
in
(bad)
and
out
cmp
aaa
shl
mov
clc
pop
icebp
xor
inc
(bad)
cmp
mov
clc
sbb
imul
(bad)
cld
cs
aaa
add
std
fprem
in
pmulhw
jecxz
dec
std
loope
psraw
aas
xchg
das
ins
icebp
add
sbb
inc
cld
test
mov
inc
mov
pop
cld
(bad)
clc
loopne
mov
jle
cmp
cs
test
retf
(bad)
mov
add
outs
mov
aaa
push
ud0
mov
std
psubb
scas
ret
outs
call
jle
fdivr
mov
xchg
inc
hlt
call
pop
pusha
adc
ja
jbe
(bad)
loopne
jg
out
arpl
pop
xchg
rcr
fistp
cld
not
aas
pop
int
fild
sub
pop
outs
iret
icebp
fistp
mov
fmul
cmp
cmp
cmp
sub
shr
xchg
mov
jecxz
(bad)
loopne
jle
cmp
les
int
lock
clc
in
pop
(bad)
outs
sub
pop
js
shr
aaa
cmp
dec
icebp
sar
movd
imul
mov
lock
jmp
call
outs
shr
out
sub
inc
lock
mov
pop
test
loop
imul
aaa
add
test
das
ret
test
inc
(bad)
clc
in
add
and
daa
add
std
lahf
ret
inc
call
xlat
sbb
pop
loopne
pop
mov
out
mov
xchg
mov
clc
in
dec
ret
clc
lea
xor
cmp
out
xchg
(bad)
gs
cmp
aaa
dec
(bad)
data16
in
pop
addr16
cli
jg
or
inc
lock
sbb
ins
cld
(bad)
mov
mov
cli
mov
adc
sub
sti
daa
lock
cmp
pop
icebp
stc
lahf
add
jg
jle
mov
outs
(bad)
ds
mov
push
(bad)
das
adc
xchg
or
inc
jbe
cmp
iret
out
btc
in
(bad)
jo
(bad)
addr16
pop
mov
fisttp
fistp
mov
push
loop
mov
push
pop
std
stc
mov
adc
int3
out
iret
iret
mov
repz
loop
jbe
fcomp
ret
std
stc
pop
jle
cmp
dec
shr
(bad)
sub
inc
cld
pop
clc
in
iret
les
sbb
cmp
loop
sbb
mov
(bad)
loopne
shr
rol
mov
clc
in
pop
ret
and
ret
jg
inc
sti
inc
loop
jg
sar
arpl
mov
inc
mov
cmp
cmp
outs
dec
std
fdivrp
lea
das
shr
ja
clc
sbb
jo
neg
jle
ja
call
icebp
fistp
test
(bad)
fs
in
lock
jg
cld
(bad)
jno
scas
sbb
and
(bad)
sti
shr
jle
sub
into
mov
jnp
in
ja
outs
dec
jle
jecxz
fstp
test
(bad)
adc
test
mov
add
std
ins
lock
out
repz
gs
jl
push
lahf
(bad)
jns
in
out
(bad)
outs
jg
mov
lds
psllw
pop
int3
jle
xor
cli
daa
push
cld
idiv
das
(bad)
xchg
pop
scas
lock
cmp
mov
pop
xbegin
(bad)
fistp
or
ja
mov
xchg
pop
mov
mov
icebp
stc
outs
mov
(bad)
es
imul
mov
loop
pop
or
(bad)
cmp
loopne
test
mov
repz
loope
mov
mov
mov
mov
jg
(bad)
and
cmps
aam
mov
mov
ds
add
aas
imul
sbb
cld
(bad)
mov
jmp
jle
inc
hlt
aas
push
mov
cld
xchg
dec
sar
(bad)
mov
jae
(bad)
cdq
jg
nop
jmp
stc
(bad)
popf
mov
mov
ss
(bad)
cmp
push
call
std
jg
jmp
call
(bad)
jmp
jmp
dec
movs
(bad)
jmp
mov
out
pop
inc
repnz
push
sbb
int3
in
inc
inc
lods
inc
retf
and
xchg
add
lea
icebp
test
paddw
out
mov
(bad)
fild
(bad)
mov
cmp
xor
xor
cmp
xor
call
(bad)
jg
jb
xchg
inc
stc
in
jmp
push
std
pop
stos
iret
pop
inc
cmp
(bad)
jge
call
inc
jg
std
dec
xor
adc
call
call
adc
jg
inc
clc
imul
adc
aas
push
or
ja
jmp
repz
cli
(bad)
out
dec
inc
or
stc
fisttp
mov
mov
jmp
dec
inc
(bad)
push
pop
cmp
call
repnz
mov
jmp
(bad)
mov
call
jl
inc
rcl
adc
lock
in
ret
adc
jmp
fidivr
mov
ror
cld
ret
mov
(bad)
mov
jg
pop
cld
pop
shl
inc
xchg
adc
adc
scas
(bad)
ud0
bound
idiv
test
pop
push
pop
mov
pop
loopne
cmp
xadd
and
xor
push
fcomip
mul
sbb
mov
test
neg
rol
clc
ins
sub
cld
test
mov
adc
ret
outs
pop
mov
out
out
(bad)
mov
or
pop
cld
test
mov
sbb
fbld
(bad)
repz
in
arpl
test
cld
mov
enter
ret
fucomip
loopne
ret
push
jb
pusha
and
loope
sbb
in
fadd
sbb
imul
lock
jecxz
mov
sbb
js
mov
addr16
loopne
adc
mov
ins
test
out
add
das
cmp
push
das
(bad)
push
mov
adc
push
sbb
xor
adc
sub
dec
outs
cld
ja
cli
jle
cmp
pop
mov
stc
ja
rcr
loop
jg
mov
ret
sar
lock
jl
xlat
loope
dec
repnz
pop
jmp
cmp
xchg
fyl2x
inc
repz
adc
sbb
or
imul
cmp
loop
(bad)
outs
adc
sub
mov
icebp
(bad)
jle
cmps
icebp
in
add
xchg
xchg
sub
sar
jno
neg
loopne
fistp
mov
aaa
lds
sub
sbb
nop
pop
or
push
push
cmp
(bad)
loopne
rol
lds
call
jle
jg
ffreep
push
scas
push
inc
add
lock
jecxz
mov
cld
test
jle
cld
not
outs
mov
fild
(bad)
mov
sub
inc
icebp
fistp
fstp
ret
jle
loope
out
mov
pop
mov
cmp
icebp
fstp
xor
sbb
sub
mov
loope
and
mov
aas
mov
ret
sti
pop
mov
lods
adc
mov
call
clc
in
push
popa
jl
cmp
hlt
loopne
rol
cmp
cld
imul
in
loopne
mov
mov
push
jg
jle
into
scas
jmp
inc
pop
std
shl
sti
jg
(bad)
mov
mov
mov
xor
mov
(bad)
push
or
daa
jg
scas
in
repnz
jb
call
lahf
cld
lds
(bad)
addr16
icebp
cmps
cmps
inc
jle
jno
retf
(bad)
lahf
cld
push
mov
cwde
in
jg
sar
mov
fisttp
mov
sbb
jecxz
shr
paddd
sti
mov
fistp
dec
inc
push
ds
push
cld
inc
cld
(bad)
jmp
std
repz
in
mov
outs
mov
sar
loop
xlat
movs
pop
mov
popa
clc
cwde
xlat
add
cmp
jmp
jle
jp
out
repnz
mov
push
xor
cmp
ret
mov
cli
inc
add
aas
sbb
jo
mov
sar
or
lock
adc
sbb
cmp
pop
icebp
aad
(bad)
outs
int3
jno
or
xor
push
jl
mov
aaa
dec
mov
mov
cmp
sbb
mov
shr
mov
or
add
mov
call
push
add
pop
mov
sbb
jns
clc
in
jg
icebp
jecxz
mov
clc
in
outs
shl
adc
outs
je
iret
loope
pop
in
cmp
std
and
mov
adc
and
lock
mov
push
mov
dec
les
xor
sti
jae
loop
push
std
mov
shr
sti
mov
shl
dec
jl
out
stc
xor
(bad)
mov
popf
icebp
fistp
jle
jne
fist
call
jge
psubb
sbb
add
jle
jl
lahf
loopne
inc
xchg
cmc
outs
jecxz
inc
lahf
xlat
add
mov
adc
mov
mov
lock
loop
xor
in
adc
std
(bad)
clc
jmp
out
inc
cld
push
loop
aas
or
pop
outs
call
mov
stos
cmps
dec
cld
(bad)
imul
jmp
jg
jle
jp
jp
fistp
aaa
clc
pop
pop
dec
icebp
sbb
fimul
push
loope
push
popa
cmp
in
pop
clc
in
pop
add
ds
lock
jecxz
ss
mov
lock
(bad)
out
das
jmp
jo
fs
pop
psubb
lock
push
lock
pop
loope
jg
jne
iret
adc
adc
jno
(bad)
sar
sbb
(bad)
in
(bad)
aaa
stc
in
addr16
clc
in
pusha
sub
leave
aas
stc
mov
mov
pop
leave
psubw
or
in
sti
pop
jle
dec
(bad)
cmps
(bad)
leave
daa
jg
out
hlt
leave
pop
std
mov
jb
ret
std
lds
push
jmp
out
xchg
aas
adc
out
aas
and
rol
mov
loopne
push
and
jnp
xchg
clc
jno
nop
jecxz
aas
pop
lahf
jg
mov
daa
lock
ds
mov
and
ret
lock
sahf
pop
(bad)
push
jg
jle
mul
cmp
(bad)
clc
loopne
mov
and
and
(bad)
pop
push
cld
out
nop
mov
(bad)
out
sbb
ja
icebp
fistp
cld
out
icebp
mov
inc
sub
out
jl
call
mov
jmp
scas
(bad)
fild
repz
(bad)
adc
lock
jecxz
aas
or
shr
or
popf
inc
pop
movs
add
(bad)
out
sub
jl
cmp
jl
paddd
lock
mov
push
mov
rcr
aaa
into
gs
jecxz
neg
(bad)
outs
lods
jae
jnp
clc
popf
push
jle
cld
clc
add
in
leave
push
pop
test
adc
in
(bad)
cld
mov
call
pop
mov
(bad)
adc
jg
paddd
mov
jmp
cmp
dec
in
(bad)
mov
test
das
(bad)
(bad)
fcomip
loopne
ror
cmc
fild
fld
mov
clc
pop
inc
xor
pop
rcl
xchg
jnp
dec
in
pop
pop
dec
cld
pop
icebp
sbb
imul
xchg
dec
sti
outs
lock
popf
inc
test
sub
adc
dec
call
sbb
xchg
icebp
icebp
shr
cmps
adc
pusha
dec
loopne
(bad)
fistp
jg
(bad)
ins
cld
imul
loope
test
adc
add
lock
imul
pop
ds
repz
aad
jl
addr16
jg
pop
cld
jno
in
cmpps
jle
pop
lock
xor
sbb
and
loopne
or
push
stc
cmp
ds
add
jmp
and
ror
sbb
jle
pop
dec
call
stos
daa
(bad)
scas
(bad)
push
nop
outs
call
aaa
dec
popa
cld
stc
or
(bad)
mov
(bad)
mov
(bad)
aas
mov
icebp
clc
mov
push
hlt
call
sar
and
sub
pop
ins
mov
jmp
shr
push
inc
(bad)
mov
call
loope
sbb
adc
dec
push
(bad)
out
hlt
call
std
pop
call
lock
sub
mov
xchg
hlt
jg
dec
(bad)
pop
cli
aas
xor
ficom
push
push
nop
xchg
cli
(bad)
inc
jg
std
(bad)
jmp
push
pop
mov
sti
aaa
adc
and
lds
pop
adc
aam
repnz
mov
xchg
pop
mov
push
inc
into
xchg
jl
push
lea
add
dec
mov
not
in
out
dec
jg
jle
sub
jge
sar
mov
pop
rol
xchg
aas
cmp
fcomi
jmp
xchg
(bad)
cdq
clc
icebp
(bad)
cmps
jmp
jle
popa
xchg
std
addr16
mov
jge
adc
fistp
loop
mov
cld
idiv
mov
mov
les
push
fs
rol
clc
in
pop
add
pop
(bad)
outs
jg
pop
cld
in
shr
cmps
les
ds
cli
push
clc
lea
adc
push
clc
xchg
lock
sub
inc
ror
ds
cmp
(bad)
outs
(bad)
jecxz
jmp
ins
paddd
dec
push
(bad)
es
fild
ficomp
(bad)
push
sar
lock
pop
or
pop
call
push
sub
test
jg
sbb
clc
xchg
pop
adc
mov
(bad)
icebp
sub
xchg
inc
test
add
xor
mov
ja
outs
enter
push
clc
lea
mov
imul
add
jmp
in
jg
aad
fs
sbb
outs
mov
lahf
cld
mov
repz
call
add
movs
jmp
(bad)
sbb
jecxz
dec
(bad)
cmp
and
stc
(bad)
pop
ret
jge
(bad)
loop
daa
jg
cli
mov
loope
xchg
and
repnz
pop
int
mov
cld
and
(bad)
pop
(bad)
ins
lahf
cld
imul
(bad)
repz
daa
jg
pop
fiadd
iret
clc
lods
(bad)
outs
dec
lock
arpl
jle
or
dec
clc
jmp
jle
and
jbe
jnp
jae
mov
mov
(bad)
fistp
mov
mov
stc
fwait
loope
dec
mov
mov
into
fcos
sbb
cs
neg
dec
aas
sub
cmp
jmp
int3
imul
jl
fbld
xor
fistp
(bad)
pop
jle
mov
mov
cld
mov
loopne
ret
push
jle
in
add
lock
int3
movd
icebp
fstp
test
ds
outs
ins
fucomp
pop
mov
fild
pop
loope
xchg
stos
fisttp
pop
lods
push
jle
jl
push
xlat
shr
lahf
xor
sbb
mov
inc
jp
cmps
sub
std
mov
ds
das
jg
jmp
(bad)
cmp
xlat
jg
fucomip
xchg
jg
add
clc
in
clc
pop
jle
xchg
jg
push
(bad)
ds
jnp
xchg
not
cli
leave
(bad)
mov
xlat
loope
mov
(bad)
loop
in
in
(bad)
adc
cli
addr16
daa
jg
out
jb
mov
jg
or
enter
push
fadd
fadd
ins
inc
aaa
cld
arpl
push
mov
ret
sbb
loopne
jmp
retf
clc
lea
aam
jmp
or
and
movd
cld
clc
movs
pop
mov
pop
mov
push
push
(bad)
call
(bad)
cli
sub
mov
mov
std
cmp
out
mov
inc
push
add
aas
adc
clc
loopne
cmp
fucomi
inc
(bad)
mov
in
pop
outs
enter
pf2iw
cld
clc
mov
cmp
jecxz
jecxz
dec
jl
xlat
mov
(bad)
pusha
lea
mov
and
mov
jle
pop
mov
or
(bad)
outs
cs
aad
mov
mov
enter
mov
test
in
xchg
jg
test
(bad)
ins
aas
stc
xlat
jg
dec
(bad)
xchg
fbld
div
lahf
stc
pop
jle
call
ja
jge
stc
pop
enter
jle
inc
lahf
cld
sbb
in
mov
(bad)
cld
cs
jl
push
cld
cs
out
repnz
pop
push
sti
aas
out
jns
(bad)
out
and
mov
jle
lods
dec
(bad)
cwde
(bad)
repnz
aas
and
cmp
jns
mov
jecxz
xchg
(bad)
jg
pop
ds
adc
stc
(bad)
lea
pop
loop
sbb
hlt
in
mov
cmp
xchg
inc
(bad)
push
jle
scas
pop
and
clc
lods
movd
fdivr
clc
add
mov
(bad)
adc
fisubr
(bad)
repnz
outs
retf
adc
call
jle
cmp
aas
jle
cmp
aas
jle
cmp
out
sbb
retf
xor
in
pushf
sbb
int
(bad)
addr16
mov
dec
cli
loop
das
ror
test
jle
leave
cdq
aaa
jne
jle
fcomip
aaa
and
movs
dec
idiv
mov
jns
jbe
pop
sbb
icebp
add
fwait
(bad)
cli
cmps
mov
int3
stc
out
inc
(bad)
call
(bad)
out
sar
addr16
push
jg
(bad)
inc
scas
adc
pushf
jmp
jmp
std
(bad)
aas
cmps
(bad)
push
push
out
loope
std
push
les
sub
stc
call
mov
xor
and
sti
imul
xor
retf
lock
aas
xchg
dec
lock
aas
int3
stos
add
iret
sub
add
xor
fisttp
dec
cmps
or
add
mov
mov
jmp
cmovg
adc
lds
sti
(bad)
adc
int
xchg
mov
dec
leave
mov
jae
neg
xchg
rol
sti
scas
icebp
in
sbb
mov
fbstp
mov
mov
cld
sub
mov
mov
(bad)
jg
mov
cli
popf
push
shl
push
or
jg
test
cmp
js
sub
(bad)
(bad)
hlt
aaa
ror
xchg
mov
repnz
std
cs
stc
mov
pop
lock
lahf
idiv
push
cli
or
aad
pushf
(bad)
jb
std
(bad)
xor
jl
xchg
lahf
mov
in
sbb
sub
test
push
std
adc
sbb
cmps
shl
xor
cmc
mov
and
xor
mov
outs
dec
jecxz
pop
jle
shl
scas
dec
(bad)
test
pop
scas
aas
stc
mov
xchg
mov
std
pop
lea
dec
into
push
inc
jl
leave
aas
cwde
(bad)
push
clc
cmc
out
cli
pop
mov
and
sbb
dec
(bad)
cmp
hlt
dec
ret
and
arpl
jecxz
in
lds
jg
fs
(bad)
call
dec
into
pop
icebp
ins
jle
mov
scas
fcomp
cld
jecxz
sbb
ja
mov
mov
repnz
lods
stc
lds
xor
dec
rcr
sbb
push
cmp
paddd
cli
div
mul
xchg
jg
(bad)
idiv
ja
int
stc
xchg
push
mov
in
mov
mov
push
ret
mov
xchg
out
jl
mov
push
lahf
cld
int
retf
outs
hlt
leave
pop
(bad)
mov
or
aam
sti
leave
pop
dec
mov
adc
(bad)
jmp
ja
sub
test
mov
in
call
mov
or
jle
jbe
jg
push
jge
mov
(bad)
cmps
std
in
loop
jmp
(bad)
in
sub
jno
in
in
clc
xchg
jg
ja
sub
add
std
dec
dec
mov
cs
leave
into
dec
addr16
xchg
mov
sti
fist
inc
ins
adc
adc
xchg
push
(bad)
stc
mov
xchg
icebp
cmps
std
dec
test
and
ds
ret
jg
ror
lahf
mov
mov
retf
call
(bad)
fld
cld
cmc
jg
fild
repz
xor
xchg
adc
cli
call
outs
je
pop
mov
int
mov
sti
xor
jmp
(bad)
jmp
std
jmp
cli
call
jg
(bad)
jg
(bad)
jg
(bad)
aas
mov
jg
(bad)
(bad)
sti
sar
daa
hlt
(bad)
(bad)
ja
(bad)
pop
dec
cld
mov
xchg
inc
inc
shl
jmp
scas
inc
popa
cld
inc
pushf
inc
and
jge
adc
call
clc
pop
sar
push
aas
dec
hlt
dec
ret
idiv
push
mov
push
xor
pop
cwde
icebp
sub
std
in
dec
jg
xor
mov
mov
sar
aad
sub
movs
sar
mov
pushf
and
(bad)
cli
out
xchg
nop
mov
push
repnz
movs
dec
stc
inc
inc
cmp
mov
mov
(bad)
pop
les
out
jg
outs
inc
inc
hlt
int
jg
or
dec
cmp
cmc
ffreep
(bad)
jg
cmp
aaa
jle
mov
test
jecxz
(bad)
pop
mov
lahf
cld
fst
std
fisttp
out
mov
jg
scas
loope
repnz
(bad)
mov
in
and
lahf
jg
out
jb
push
outs
pop
inc
jecxz
and
dec
dec
xor
and
mov
(bad)
cmps
lahf
cld
arpl
push
outs
mov
outs
dec
pop
shr
ror
mov
mov
out
mov
add
mov
mov
dec
jo
sub
add
mov
add
popf
imul
leave
pop
(bad)
fist
fcomp
adc
add
fist
cld
dec
mov
inc
call
xchg
stc
lods
leave
xchg
stc
int
xchg
stc
sub
test
cmp
xchg
lahf
cld
or
sub
scas
call
clc
pop
sti
sub
aaa
hlt
cmp
sub
push
std
jmp
call
sti
pop
(bad)
(bad)
cli
sub
cld
pop
mov
add
cmc
jle
jmp
icebp
mov
das
(bad)
pop
js
ja
pop
stc
retf
jmp
or
jl
mov
mov
in
icebp
in
jmp
jg
pop
push
sub
jle
fwait
enter
dec
repnz
(bad)
jp
jecxz
inc
mov
mov
push
(bad)
pop
ins
into
rcr
(bad)
popa
cmp
dec
outs
stc
jmp
(bad)
mov
std
not
loopne
pop
cwde
iret
fmul
jg
(bad)
pop
mul
cld
adc
clc
aaa
sbb
gs
(bad)
push
fwait
sar
cld
push
enter
sub
gs
std
mov
mov
xchg
(bad)
outs
movs
and
fild
hlt
add
mov
mov
jg
mov
xor
out
xchg
(bad)
out
add
(bad)
or
int3
fistp
inc
(bad)
daa
jmp
mov
cld
in
and
jl
shl
test
and
jge
test
das
push
cmp
pop
sbb
mov
add
loope
mov
mov
adc
xchg
shr
push
cmp
inc
push
fnstenv
adc
std
inc
lds
cld
push
inc
add
out
push
jmp
cli
call
xchg
ds
dec
imul
fild
dec
mov
gs
(bad)
clc
pop
shl
std
push
mov
inc
shr
scas
leave
(bad)
out
je
(bad)
jmp
(bad)
call
call
jmp
mov
cld
cs
xchg
lods
clc
ficom
jb
add
mov
adc
movs
aas
outs
pushf
hlt
lahf
movs
xchg
mov
cmp
icebp
popa
jecxz
add
fwait
jl
scas
std
out
into
outs
jge
aaa
dec
push
lock
mov
jg
sbb
repz
outs
pop
in
cmps
fs
aad
hlt
pop
shl
(bad)
bound
push
rol
jecxz
sbb
cdq
push
mov
or
add
es
jmp
add
jmp
into
dec
dec
cmc
mov
pop
sbb
std
es
clc
cmc
jle
mov
inc
mov
jne
cmp
out
aaa
shl
clc
jae
(bad)
movs
xlat
sar
jmp
out
jmp
jl
fld
lock
inc
mov
clc
cmps
popa
mov
shl
(bad)
(bad)
cmp
jg
(bad)
cdq
dec
call
dec
cli
out
add
inc
jmp
cmp
pop
jecxz
aas
xor
stc
scas
(bad)
jae
out
or
(bad)
fsubr
jmp
inc
scas
and
inc
cli
pop
or
cmp
inc
mov
adc
add
jg
loop
lahf
std
cs
cmp
iret
sbb
aas
and
adc
dec
push
loopne
fucomip
xchg
jg
mov
mov
mov
cld
mov
or
ss
int3
daa
(bad)
fisubr
std
cmps
push
in
fidiv
jmp
stc
mov
lea
cld
sbb
adc
sbb
out
adc
stc
jnp
jmp
icebp
imul
sub
xchg
pushf
mov
add
outs
jmp
inc
push
rep
std
imul
jg
xor
out
dec
(bad)
inc
mov
ror
cmp
neg
(bad)
pop
push
push
sbb
(bad)
jle
xlat
clc
xor
dec
mov
jnp
cmp
cs
sar
mov
neg
neg
push
hlt
dec
aas
dec
mov
cmp
rcr
call
std
std
daa
xchg
test
inc
hlt
ficomp
fist
sbb
push
aas
mov
push
fwait
aas
fwait
sub
jle
ins
jle
push
das
shr
inc
jge
fwait
push
sti
aas
xchg
std
cmc
hlt
jnp
xor
push
mov
pop
and
jle
cmc
icebp
outs
shl
daa
cmp
jns
jg
cmps
call
jg
ins
inc
cli
cld
jmp
call
inc
(bad)
cmp
ja
mov
jne
arpl
stc
cmp
pshufw
call
jg
fcomip
xlat
clc
xor
jg
idiv
jge
das
push
fstp
aam
cmp
ins
shr
mov
mov
call
repz
out
jg
cmp
inc
jp
mul
iret
daa
mov
shl
cmp
std
scas
rcr
fcmovnbe
out
xor
xchg
notrack
(bad)
jg
mov
std
xor
in
mov
(bad)
push
rcr
xlat
ror
fist
out
push
sti
xor
aas
shl
add
mul
push
lahf
jg
loope
push
shl
call
jge
imul
jg
std
mov
aam
pop
movs
lahf
daa
aam
aaa
mov
(bad)
mov
mov
cli
stc
out
addr16
push
lahf
jmp
jecxz
mov
cmc
jnp
sti
lahf
inc
mov
jg
idiv
jge
(bad)
mov
cli
in
mov
mov
sar
dec
jge
(bad)
lahf
call
outs
dec
jg
lods
mov
test
jg
cld
repz
shl
fbld
fild
push
cli
(bad)
jg
(bad)
call
clc
(bad)
cli
std
jmp
cmp
std
push
mov
jg
(bad)
(bad)
jnp
fistp
sar
add
(bad)
mov
clc
cmps
imul
push
jg
hlt
(bad)
mov
hlt
fstp
inc
in
dec
ret
out
dec
(bad)
scas
call
outs
shl
sub
xchg
ror
adc
dec
call
loope
stos
jmp
inc
call
iret
test
mov
std
std
pop
hlt
(bad)
aas
xchg
pusha
jle
call
call
jmp
inc
(bad)
dec
test
sti
cmp
retf
or
pop
inc
(bad)
push
jmp
call
jp
aas
ret
sbb
(bad)
mov
or
je
fwait
hlt
std
lahf
dec
(bad)
(bad)
cmp
(bad)
jmp
and
lock
mov
push
mov
idiv
adc
call
jg
lahf
aam
ja
aas
ror
call
lods
mov
mov
pop
std
or
stc
scas
inc
out
cld
call
mov
loop
push
hlt
std
iret
push
aas
mov
hlt
fisubr
or
movs
test
dec
shl
inc
inc
xlat
fistp
out
push
hlt
fnstsw
arpl
outs
call
jg
js
mov
sahf
cld
inc
test
jge
outs
inc
lock
push
cli
call
hlt
into
aas
dec
ins
(bad)
cs
shl
jmp
sar
jmp
std
in
fucomp
inc
lock
adc
sub
mov
hlt
jnp
aas
jg
ret
mov
xor
(bad)
(bad)
hlt
std
out
inc
lahf
sbb
test
scas
jle
pop
outs
std
sub
xchg
aaa
push
fistp
jge
xchg
(bad)
cli
fwait
push
fstp
mov
sti
aas
jmp
and
neg
inc
jecxz
dec
ins
(bad)
cmp
cld
out
cmps
iret
jmp
repz
cmps
call
xchg
shl
and
sbb
aas
std
shl
fnstcw
int3
and
sbb
out
pop
loope
movs
jbe
jmp
sbb
aam
adc
sbb
out
(bad)
cmp
std
mov
retf
(bad)
aam
xlat
cmps
idiv
cs
cmp
jl
(bad)
inc
aam
test
outs
inc
js
adc
cld
sbb
push
add
jg
mov
call
dec
jge
jp
sti
or
iret
out
dec
in
jg
ds
das
jmp
dec
jp
pop
add
fisttp
mov
push
aam
scas
dec
clc
mov
jge
xchg
adc
(bad)
mov
out
(bad)
cmp
cld
jg
out
sub
jmp
call
sar
imul
mov
or
cs
shl
add
std
pop
hlt
std
mov
hlt
(bad)
dec
out
inc
jecxz
(bad)
mov
jmp
icebp
call
sub
out
push
fistp
push
pop
(bad)
cli
std
daa
call
cli
out
outs
es
push
jp
inc
lahf
std
xchg
hlt
(bad)
mov
mov
adc
aam
aas
mov
dec
xor
addr16
std
outs
inc
cmp
(bad)
dec
jg
in
or
movs
hlt
repz
cmps
iret
jg
loopne
in
imul
jge
adc
(bad)
fbld
std
ins
hlt
fstp
cli
out
sbb
(bad)
hlt
stc
or
mov
je
xchg
jle
inc
repz
pop
(bad)
jp
jg
inc
test
dec
jmp
cmp
xchg
jmp
(bad)
inc
inc
jp
(bad)
(bad)
mov
std
jg
(bad)
jmp
call
dec
dec
(bad)
aas
xchg
call
cli
(bad)
fild
inc
jmp
call
(bad)
(bad)
sti
hlt
(bad)
call
(bad)
jg
std
call
and
jmp
dec
call
sar
jns
mov
(bad)
aad
xor
jmp
aas
jb
lock
(bad)
cli
mov
(bad)
jg
std
dec
adc
jg
std
jmp
(bad)
(bad)
mov
dec
jmp
std
(bad)
mov
cli
jmp
sar
jg
cli
(bad)
out
inc
inc
retf
icebp
aas
mov
dec
cli
push
(bad)
mov
jmp
(bad)
aas
mov
inc
(bad)
jmp
lahf
inc
(bad)
dec
jmp
jmp
(bad)
call
cld
mov
(bad)
jg
(bad)
call
sar
jmp
jmp
mov
xlat
stc
mov
nop
jmp
daa
cli
dec
dec
call
sub
mov
hlt
jmp
std
pop
test
pop
dec
(bad)
jmp
(bad)
jg
std
dec
mov
(bad)
mov
sar
(bad)
jle
(bad)
aas
dec
(bad)
call
call
(bad)
aas
movs
(bad)
call
hlt
call
(bad)
(bad)
aas
jmp
inc
push
(bad)
(bad)
(bad)
cmp
(bad)
aas
mov
fbld
aas
movs
(bad)
mov
hlt
dec
std
mov
call
sar
push
cli
call
call
jmp
hlt
(bad)
mov
sar
inc
(bad)
dec
jmp
call
cli
jmp
jmp
jmp
cli
dec
push
movs
(bad)
jg
(bad)
inc
inc
cli
jmp
mov
(bad)
aas
cmp
call
cli
call
(bad)
call
(bad)
jg
std
call
movs
(bad)
push
hlt
(bad)
jg
(bad)
call
sar
jmp
cli
(bad)
inc
(bad)
aas
call
inc
retf
(bad)
cmp
(bad)
jg
cli
call
(bad)
cmp
call
(bad)
(bad)
(bad)
jg
cli
call
jmp
dec
hlt
(bad)
aas
xchg
(bad)
call
sar
jmp
cli
(bad)
fild
(bad)
sti
call
call
hlt
(bad)
inc
(bad)
inc
cli
jmp
hlt
call
sti
cmc
dec
pop
call
jmp
jmp
std
inc
call
(bad)
jg
(bad)
aas
mov
imul
iret
sar
dec
cli
call
jmp
jmp
hlt
(bad)
mov
sar
(bad)
jns
(bad)
mov
call
pop
mov
jg
in
mov
out
push
in
lock
push
(bad)
cmc
shr
iret
jecxz
jmp
test
lds
imul
cli
ja
iret
jg
std
or
(bad)
ds
cld
cmps
inc
loop
dec
and
dec
xchg
jno
jge
push
cmps
jg
ds
dec
and
cli
out
loop
iret
dec
(bad)
lock
lahf
xchg
(bad)
sub
fistp
loope
mov
sub
sbb
sar
adc
mov
jl
add
lods
mov
jecxz
pop
ins
stc
jmp
or
iret
mov
fistp
jle
repnz
shr
jle
cld
xchg
loopne
jg
mov
std
sbb
mov
mov
clc
in
aas
(bad)
sub
dec
push
cld
pop
clc
loopne
clc
adc
jg
pop
test
xchg
ja
mov
lock
cli
xchg
(bad)
push
jl
push
loope
add
pop
jg
jle
ret
lock
cmp
das
(bad)
push
pop
jg
ds
fcomi
shl
test
(bad)
push
mov
idiv
in
ffreep
mov
adc
loopne
pop
test
jle
cld
div
mov
icebp
fucomi
(bad)
out
cld
neg
loopne
(bad)
lock
or
mov
mov
xlat
shr
jle
(bad)
dec
cli
in
ja
mov
adc
inc
lock
fild
jl
out
loope
xor
push
lock
mov
(bad)
sub
not
mov
inc
jl
mov
lahf
pop
mov
sbb
pop
pop
adc
sub
icebp
inc
push
cmp
xchg
mov
(bad)
jo
clc
mov
pop
mov
cmps
clc
mov
push
clc
jno
jo
iret
(bad)
cmp
clc
jge
ror
divps
repz
or
adc
jl
fistp
jecxz
sbb
sbb
nop
sbb
clc
popf
lock
mov
jle
jle
out
inc
add
out
loopne
les
jmp
ds
xchg
inc
jge
sbb
in
loopne
(bad)
(bad)
(bad)
loopne
mov
stc
outs
loope
out
jg
mov
arpl
cmp
std
clc
loopne
add
clc
in
scas
(bad)
push
repz
sti
addr16
sbb
adc
fistp
add
(bad)
sar
idiv
push
mov
(bad)
ins
cwde
cmps
clc
clc
aaa
cmp
jge
ror
adc
mov
loopne
clc
lods
les
push
ror
popa
movs
push
jle
jle
pop
ror
out
test
jle
push
aas
jle
jnp
fld
fistp
scas
cmps
(bad)
xor
or
mov
aas
lds
clc
cld
lahf
in
mov
jg
push
(bad)
popa
cld
mul
mov
scas
(bad)
outs
xlat
clc
in
das
lds
cmp
std
fnstcw
loopne
dec
ror
cld
mov
mov
sbb
or
sbb
fistp
mov
ret
mov
jle
push
push
loopne
aas
or
jecxz
fld
das
les
call
(bad)
pop
mov
mov
push
mov
paddd
jl
imul
in
movd
(bad)
(bad)
jg
inc
repz
mov
je
lahf
loop
xor
fstp
mov
inc
div
mov
sbb
adc
outs
jg
mov
(bad)
addr16
(bad)
sbb
dec
push
(bad)
push
cld
clc
std
paddd
or
shr
or
(bad)
iret
jle
sbb
ret
jl
dec
lock
icebp
fild
jle
push
xchg
in
test
sar
mov
pop
dec
lock
outs
js
mov
mov
(bad)
push
cld
div
jle
jecxz
out
out
mov
nop
push
cmp
sub
push
jle
mov
(bad)
(bad)
push
hlt
fistp
fistp
jle
sbb
out
jg
(bad)
and
jecxz
push
mov
cs
sar
mov
sar
pop
mov
pop
lahf
sbb
cmp
fwait
shr
cmps
shr
scas
les
cld
mul
jecxz
mov
cmp
adc
stc
dec
out
lds
(bad)
push
pop
or
inc
jp
(bad)
(bad)
jg
sbb
lock
div
rcr
pop
jecxz
lahf
les
addr16
jmp
adc
loopne
adc
out
jecxz
test
jmp
push
(bad)
loopne
ret
pop
call
std
jp
in
cmp
aas
loopne
faddp
outs
dec
jle
das
sar
mov
jle
(bad)
fstp
(bad)
xor
(bad)
jns
fdivr
clc
daa
lock
sbb
cmp
comiss
in
clc
in
das
inc
ret
mov
clc
in
das
(bad)
outs
aas
xchg
dec
push
cld
dec
clc
icebp
jnp
cld
sar
cld
pop
(bad)
out
and
(bad)
outs
imul
les
jg
(bad)
pop
mov
cmps
lock
push
pop
jecxz
mov
push
sbb
add
cmp
jl
adc
pop
jecxz
aas
(bad)
out
mov
sub
jg
stos
fcomip
xlat
dec
loope
xchg
in
(bad)
aas
(bad)
mov
sti
call
repz
out
(bad)
xor
sar
jg
cli
call
std
jmp
std
call
jmp
jmp
(bad)
dec
(bad)
out
sar
addr16
push
dec
(bad)
inc
aas
(bad)
(bad)
call
sar
jmp
cli
aas
lods
in
inc
(bad)
jmp
call
and
inc
call
jg
repnz
(bad)
jg
std
pop
stos
inc
ja
dec
jmp
inc
(bad)
jg
(bad)
(bad)
std
call
pushf
pop
call
(bad)
(bad)
lock
cli
call
inc
inc
jmp
es
(bad)
aas
mov
(bad)
call
(bad)
mov
std
push
cli
(bad)
out
dec
(bad)
mov
(bad)
(bad)
cmp
jg
(bad)
lahf
sar
dec
cli
jg
(bad)
inc
std
dec
mov
(bad)
aas
std
xlat
jb
sti
fisttp
(bad)
jnp
(bad)
call
std
call
(bad)
call
(bad)
inc
call
pop
or
movs
(bad)
call
call
sar
mov
jne
(bad)
jmp
std
push
movs
(bad)
jg
(bad)
inc
jg
jmp
(bad)
aas
xchg
(bad)
inc
sar
mov
(bad)
pop
sar
push
(bad)
fisttp
(bad)
mov
std
call
hlt
(bad)
inc
(bad)
call
cli
jg
(bad)
(bad)
sbb
mov
cld
call
(bad)
fcomi
sub
addr16
ret
les
ud0
hlt
ffreep
pop
call
loope
jg
int
jecxz
dec
call
clc
mov
stos
out
(bad)
retf
dec
lahf
cld
push
jmp
bound
stc
in
dec
jg
jl
cmps
cmps
or
aas
or
(bad)
loope
outs
clc
imul
js
adc
test
lock
(bad)
fcomp
xchg
mov
rcr
addr16
in
das
(bad)
mov
pop
pop
mov
pop
pop
clc
icebp
sti
push
in
loop
mov
(bad)
push
mov
popf
icebp
fistp
fistp
xor
in
aaa
loop
shr
xlat
ret
sbb
lods
paddd
aas
mov
icebp
rol
adc
clc
ja
loop
shr
jle
out
fcmovnu
add
sbb
jle
jg
ds
pop
icebp
rcr
fistp
cld
not
mov
pop
mov
sbb
push
icebp
fstp
pop
cld
add
(bad)
adc
jecxz
ja
loopne
pop
mov
cmp
cld
xchg
or
xor
setle
cmp
pusha
sahf
loopne
inc
test
test
ds
sbb
cld
mov
loopne
mov
push
cld
ss
loopne
(bad)
pop
mov
clc
jne
sar
push
mov
jmp
sbb
xchg
jo
into
paddd
jl
les
push
jle
(bad)
jns
clc
jmp
(bad)
rol
and
clc
imul
and
test
clc
mov
jecxz
cmp
rol
fld
cmc
pop
jecxz
mov
stos
iret
orps
add
sub
fnstsw
jmp
jnp
inc
dec
push
jle
jl
pop
loopne
arpl
imul
std
pop
clc
in
iret
shr
and
jno
not
(bad)
fbld
cld
imul
mov
mov
jle
loop
xchg
hlt
pop
sbb
inc
clc
loopne
jecxz
jecxz
outs
sbb
aas
(bad)
sti
(bad)
cmp
cmp
jnp
fstp
xor
lds
jg
ds
push
icebp
rcr
(bad)
(bad)
cld
mul
aaa
call
mov
or
clc
loopne
jl
mov
fstp
push
loopne
rol
or
or
shl
in
ja
add
inc
scas
sbb
sahf
jg
clc
icebp
rol
loopne
popa
inc
outs
aas
rcl
std
test
jle
xor
jbe
std
mov
das
rcr
fdivrp
jno
leave
push
ja
jge
lahf
(bad)
cs
lahf
cld
xchg
iret
call
jnp
lahf
cld
retf
adc
std
rep
jg
stc
daa
fcomp
lds
jg
lods
and
popf
mov
hlt
or
stc
jmp
aas
sbb
test
jg
adc
xchg
aas
sub
stos
lock
(bad)
pop
jle
xchg
aas
(bad)
ja
push
js
fs
add
mov
fsubp
inc
sub
mov
mov
stos
aas
dec
mov
icebp
aaa
xchg
repz
cld
mul
hlt
mov
retf
and
mov
jecxz
loopne
rcr
pop
cmp
clc
sub
mov
cld
cmp
icebp
jnp
cld
lahf
pusha
(bad)
jg
lods
jle
jle
daa
icebp
fstp
mov
xchg
dec
dec
aam
xchg
pop
push
cld
jmp
xchg
xchg
iret
aas
mov
(bad)
sbb
test
stos
fucomip
loopne
ror
jmp
jl
push
jecxz
fld
pop
or
cmp
lock
test
jl
jae
inc
(bad)
pop
jo
(bad)
pusha
cld
icebp
in
loopne
clc
xchg
sbb
clc
xchg
push
xchg
clc
icebp
jnp
js
mov
pop
fsubp
pusha
in
or
mov
or
out
jecxz
dec
js
jae
loope
fisttp
pop
mov
cld
cs
sbb
outs
lods
loope
inc
jl
sbb
inc
jl
jg
and
scas
nop
cmp
clc
or
mov
loopne
inc
mov
ds
xor
aas
mov
pusha
scas
paddd
cmc
cmp
cld
sbb
(bad)
clc
pushf
jecxz
mov
cld
add
cld
cdq
clc
pushf
mov
shr
ja
clc
sbb
pop
pop
lods
icebp
stc
jg
iret
(bad)
mov
push
mov
sbb
mov
rcr
clc
cmps
lock
fnstsw
xor
(bad)
outs
jg
jle
add
es
mov
clc
sbb
mov
icebp
arpl
loopne
cmp
mov
jecxz
mov
push
mov
loope
call
(bad)
mov
loopne
rol
push
jle
sbb
fstp
jmp
shr
cmp
jmp
jle
out
jg
notrack
fistp
(bad)
gs
lea
mov
clc
xchg
sar
idiv
clc
mov
paddd
lock
(bad)
popa
cmp
jmp
mov
jmp
xor
clc
(bad)
dec
movd
call
cs
mov
jg
(bad)
push
std
dec
pop
and
shl
dec
jmp
and
iret
mov
(bad)
mov
inc
sub
cli
aas
xchg
xchg
push
das
cmp
call
inc
dec
mov
xor
nop
dec
or
xor
jge
movs
jbe
(bad)
cli
aas
jl
inc
jecxz
and
pop
popa
push
jl
jg
xlat
adc
mov
test
jmp
inc
mov
mov
repz
sar
mov
in
retf
dec
clc
cmc
fisttp
icebp
jecxz
dec
call
jl
iret
cmps
jo
ds
(bad)
push
in
aas
stc
sti
cdq
in
cld
sbb
dec
(bad)
je
clc
stos
rcr
aas
(bad)
loop
in
cld
in
dec
and
inc
mov
mov
jmp
dec
inc
mov
cld
fiadd
cld
aam
add
cld
push
clc
pusha
mov
jle
shr
pop
shr
pop
scas
lock
mov
(bad)
clc
in
or
mov
pop
push
push
movs
add
mov
ins
jl
fwait
loop
xchg
pop
mov
call
movs
test
mov
outs
lock
jle
(bad)
adc
pop
inc
cmp
dec
(bad)
jno
push
fild
out
ret
adc
fisttp
fstp
paddd
test
loop
cld
arpl
mov
xchg
clc
es
sub
mov
jle
loope
int3
fcmovb
dec
loope
call
lahf
mov
setle
les
jle
test
fld
mov
pushf
sub
clc
arpl
lahf
mov
mov
lock
mov
call
mov
out
repnz
into
lods
jl
dec
(bad)
xchg
mov
rcr
ja
in
in
out
xchg
mov
xor
cli
ja
jmp
das
call
xor
mov
out
repnz
in
out
call
stc
jge
stc
arpl
mov
(bad)
rol
sbb
cmp
cwde
mov
ds
fwait
iret
icebp
jecxz
cmp
lds
and
add
scas
fldenv
inc
sub
ret
xchg
cld
pop
mov
lahf
mov
xchg
cmp
les
aas
jbe
mov
pop
hlt
xlat
loop
mov
mov
fnstcw
std
pop
lock
pop
jmp
clc
fwait
lock
movsx
clc
cmp
arpl
loop
aas
sbb
popf
mov
pop
pop
mov
push
jmp
in
cmpps
aad
popa
ds
lea
cmp
pop
hlt
icebp
out
std
leave
jg
cmp
aas
cli
pop
jle
dec
(bad)
mov
call
out
push
jge
scas
std
cs
out
repnz
jge
iret
push
mov
lahf
and
pop
sti
in
aas
stc
xchg
in
xchg
mov
in
(bad)
pop
jle
xchg
ror
stc
fwait
jg
daa
jg
out
jb
leave
pop
repz
cld
cs
cld
and
loope
repnz
daa
jg
out
repnz
dec
(bad)
push
push
daa
(bad)
cs
lahf
cld
mov
retf
out
icebp
leave
pop
stc
mov
mov
xchg
repnz
enter
out
ja
(bad)
(bad)
iret
cmp
dec
push
lds
repz
xor
xor
int3
cld
cs
xchg
test
ror
jnp
jl
pop
aas
jne
cmp
inc
ret
cli
lock
(bad)
(bad)
pop
jo
jmp
mov
cmp
shl
xchg
mov
or
les
(bad)
pop
ret
lock
loop
out
sbb
sti
mov
test
call
jecxz
in
(bad)
mov
lods
(bad)
(bad)
cmp
pop
and
mov
add
(bad)
mov
(bad)
(bad)
xor
mov
jg
(bad)
call
mov
(bad)
hlt
push
pop
inc
(bad)
retf
std
call
inc
inc
(bad)
retf
cli
aas
mov
and
data16
stc
(bad)
jg
cwde
loop
call
dec
push
cmp
(bad)
cs
jb
mov
inc
add
xchg
or
cld
leave
mov
aas
inc
jae
dec
movs
mov
xor
scas
icebp
in
xchg
(bad)
xor
in
dec
jmp
cld
cmc
push
movs
mov
jg
(bad)
xchg
aas
aaa
std
mov
ret
repnz
cmps
lahf
loopne
pop
xchg
(bad)
push
call
repnz
leave
(bad)
jmp
dec
test
imul
jo
push
and
sbb
(bad)
push
clc
in
lahf
sti
xor
shl
(bad)
in
out
repnz
mov
rol
(bad)
cli
out
repnz
sub
gs
cli
iret
cld
fbld
cmc
pop
in
sti
daa
jg
out
repnz
jge
mov
cs
mov
pop
movs
clc
in
and
add
xchg
cmp
ja
lds
lds
ret
sub
cld
movs
shl
or
jo
adc
xor
out
loopne
rol
pop
(bad)
out
loope
into
data16
pop
clc
mov
pop
idiv
cld
fbld
sbb
xor
in
and
imul
(bad)
cs
sub
retf
shl
and
call
xor
imul
cmp
xchg
cmp
jg
(bad)
xchg
mov
xchg
sar
sub
sar
jg
aaa
xor
mov
dec
fsub
jecxz
jg
out
repnz
daa
jg
out
repnz
jg
sub
and
adc
jno
loop
les
(bad)
ja
fwait
cmp
push
add
and
sbb
shl
(bad)
xor
out
and
mov
xchg
sub
jmp
outs
es
sti
xlat
jmp
pop
jge
push
xchg
jp
retf
jg
dec
(bad)
xchg
fild
xchg
sub
cld
fisttp
in
nop
sub
stos
and
push
xor
jle
lods
cwde
pop
push
sahf
jle
fucomip
ja
lds
loope
hlt
mov
xbegin
dec
(bad)
cli
cmps
mov
neg
rol
call
push
jmp
dec
(bad)
(bad)
daa
sub
in
dec
lock
lahf
cld
or
test
adc
(bad)
mov
jg
std
in
out
pop
mov
lahf
(bad)
dec
dec
hlt
outs
(bad)
(bad)
jg
std
outs
lock
fsubrp
daa
jg
inc
arpl
cli
mov
mov
add
cmp
in
clc
pop
jle
xchg
inc
dec
or
inc
dec
das
xchg
jg
xchg
jg
push
(bad)
ds
out
xchg
in
push
sahf
lahf
cld
and
inc
dec
adc
imul
aas
stc
fwait
push
in
out
shl
xlat
add
or
and
or
(bad)
sbb
(bad)
mov
and
sti
sub
bound
and
fcomp
push
sti
test
stos
(bad)
popf
call
inc
sti
fisttp
cld
(bad)
les
mov
outs
inc
xchg
neg
jge
iret
push
imul
das
and
repz
inc
jg
sbb
dec
push
es
loopne
out
(bad)
adc
cld
cmp
(bad)
mov
mov
adc
aad
jmp
out
inc
mov
std
xchg
les
inc
push
sti
fwait
jl
mov
mov
xor
and
add
mov
sar
std
outs
push
mov
inc
pop
(bad)
jp
mov
loopne
xor
lahf
cli
mov
sar
mov
aaa
rcr
jmp
loope
repz
push
mov
in
(bad)
iret
jecxz
call
mov
jle
dec
(bad)
aad
pop
outs
(bad)
fsubr
repnz
xlat
(bad)
ret
cmp
cmp
inc
in
add
cld
xchg
jg
xchg
scas
repz
mov
xchg
clc
fild
lods
ja
pop
ja
pop
jg
call
hlt
sti
ds
mov
(bad)
cmc
xchg
call
mov
test
in
mov
and
push
jmp
leave
mov
cld
cs
outs
jle
aas
mov
ins
(bad)
popf
pop
inc
(bad)
mov
(bad)
(bad)
inc
lahf
cld
mov
in
daa
call
out
cmp
loop
repnz
pusha
stos
inc
fucomip
xchg
jg
mov
in
(bad)
popf
fs
adc
stc
in
std
add
cmps
mov
mov
add
sbb
ds
sbb
call
into
jle
stos
fild
rol
adc
stos
(bad)
cmc
call
jle
mov
ds
aas
cld
xlat
loope
nop
or
lock
sbb
pop
addr16
jge
fstp
lahf
jmp
mov
ja
std
mov
mov
dec
dec
pop
dec
lock
or
rcl
fistp
fnstenv
int3
in
jg
jae
out
dec
popa
fwait
mov
(bad)
cmc
push
aad
iret
jg
(bad)
(bad)
mov
stc
mov
sbb
std
mov
nop
or
lods
into
fisttp
repnz
cmc
fdivrp
pop
jmp
xlat
(bad)
xor
sbb
pop
in
ds
sti
jmp
(bad)
stos
hlt
(bad)
out
std
(bad)
sbb
cld
sbb
repz
xchg
hlt
cld
aad
sub
xchg
jl
cmps
hlt
repz
sub
cli
sbb
cmp
sbb
xor
mov
mov
test
jg
ins
(bad)
sub
jmp
mov
sub
cmp
fcomp
cli
call
xchg
std
addr16
stc
jg
pop
push
loopne
(bad)
(bad)
cmp
mov
inc
(bad)
jmp
mov
aam
aaa
es
iret
jmp
dec
test
outs
inc
in
jle
fistp
xchg
loopne
dec
aam
fild
shl
mov
hlt
std
addr16
(bad)
jg
mov
and
inc
shr
jg
std
jle
fdivrp
out
int
inc
lahf
lea
xor
cld
sbb
ss
(bad)
jg
pop
jecxz
mov
std
addr16
aas
call
loopne
int3
pop
sbb
jnp
(bad)
out
dec
jg
pop
mov
scas
movs
iret
jle
push
and
(bad)
je
std
push
loope
xlat
push
mov
sar
xchg
loopne
cli
aam
imul
repz
xchg
std
mov
jle
sub
cld
pop
hlt
fcos
dec
ins
mov
into
das
mov
(bad)
dec
sub
hlt
into
pop
dec
jg
mov
inc
jg
(bad)
hlt
out
inc
ins
adc
inc
std
cld
fisttp
(bad)
aas
xchg
fidivr
jmp
fstp
js
sub
repz
lahf
call
jge
xchg
shl
jmp
std
call
cmps
mov
dec
ret
shl
jg
std
(bad)
pop
sar
ss
jnp
push
(bad)
cmp
inc
ror
aas
xchg
(bad)
cmc
add
shld
ret
or
jmp
lahf
jg
(bad)
inc
lahf
pop
ret
jge
pop
adc
aas
mov
stc
mov
mov
mov
nop
loopne
adc
ins
inc
je
movs
(bad)
pop
cli
std
ja
iret
push
jmp
sbb
push
cld
cmp
mov
(bad)
jge
(bad)
aas
dec
lock
cli
in
mul
js
mov
not
hlt
(bad)
aas
cwde
(bad)
(bad)
cmp
inc
inc
cli
out
xchg
(bad)
(bad)
sbb
cmp
adc
aam
fild
aas
cmps
iret
jg
cli
stc
adc
or
mov
add
hlt
imul
(bad)
pop
test
outs
dec
out
sub
mov
cmp
xor
std
ds
(bad)
jns
cld
pop
add
test
jg
in
dec
jmp
pop
cli
dec
mov
mov
out
dec
jg
mov
push
call
jg
mov
not
mov
mov
std
sti
call
xlat
and
cli
sti
ja
ja
adc
ja
mov
and
sti
adc
(bad)
call
in
lahf
cmps
lahf
pop
adc
mov
(bad)
push
hlt
(bad)
jg
(bad)
inc
inc
(bad)
jg
pusha
mov
jmp
stc
mov
repz
out
cld
ss
cli
sti
mov
std
(bad)
mov
fild
(bad)
fisttp
std
xchg
repz
cld
iret
movs
iret
push
cmp
fdivrp
inc
ins
dec
mov
mov
std
sbb
cs
pop
and
cld
inc
aam
bt
pop
sar
pop
call
mov
test
dec
shl
dec
sar
test
lahf
adc
mov
out
inc
aas
jmp
(bad)
fist
xlat
add
dec
mov
neg
rcr
jg
(bad)
dec
out
mov
jge
addr16
mov
ins
dec
mov
cmp
(bad)
fild
dec
jo
shl
or
lock
adc
jmp
(bad)
out
dec
out
std
mov
stc
jg
lahf
fbld
mov
test
call
cmp
cmps
out
call
ret
cmps
iret
push
adc
aas
sbb
mov
jg
mov
ins
pop
push
(bad)
mov
ss
out
out
inc
lahf
jge
cli
inc
test
or
push
hlt
fld
std
xchg
(bad)
mov
push
sti
fild
(bad)
mov
cmps
jbe
or
jmp
fdivr
fs
sti
xlat
mov
call
(bad)
jg
std
std
sub
daa
aam
outs
cmps
mov
jnp
fist
xchg
fwait
adc
out
mov
push
jmp
(bad)
mov
cli
jnp
lock
ss
dec
out
push
sar
mov
dec
out
cld
cli
hlt
push
fistp
call
jecxz
mov
cmp
pop
jge
loopne
mov
outs
call
sti
retf
or
dec
std
aaa
aam
das
mov
std
das
shr
fbld
cmp
hlt
idiv
inc
xor
push
mov
or
ja
js
daa
jge
pop
sbb
das
mov
stc
ins
cli
inc
add
(bad)
and
out
aaa
mov
out
adc
test
std
push
hlt
repz
cli
cld
jg
idiv
jge
cmps
iret
jle
jp
bt
pop
shl
hlt
(bad)
push
mov
inc
(bad)
push
aam
pop
dec
(bad)
push
dec
cmps
jle
int
cwde
clc
iret
es
and
(bad)
jge
out
enter
xchg
loopne
(bad)
hlt
into
outs
inc
aas
mov
ret
mov
dec
call
jg
(bad)
cmp
iret
lahf
inc
mov
pop
dec
out
(bad)
cmp
stc
xchg
jle
imul
js
jbe
iret
lds
lock
jg
std
(bad)
fwait
(bad)
mov
adc
pop
sar
(bad)
xlat
mov
std
aas
cmps
call
hlt
call
and
lock
(bad)
aas
cmp
(bad)
sar
dec
pop
and
mov
std
call
idiv
pop
std
call
and
fcom
(bad)
jg
cli
aas
push
dec
(bad)
mov
(bad)
scas
adc
add
call
stc
mov
inc
cli
aas
xchg
(bad)
jmp
cli
aas
pop
pop
les
das
std
pop
stc
into
jg
(bad)
jmp
(bad)
jmp
cli
(bad)
jg
(bad)
call
call
call
cli
mov
cld
hlt
(bad)
fild
mov
call
sar
dec
jmp
jg
cli
call
hlt
call
(bad)
jmp
std
dec
cmps
(bad)
jmp
jg
std
call
mov
(bad)
jg
(bad)
jmp
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
hlt
(bad)
dec
fidiv
hlt
(bad)
fisttp
(bad)
fcomi
inc
hlt
jmp
(bad)
out
inc
(bad)
jg
(bad)
(bad)
jge
(bad)
jg
std
jmp
call
cli
call
call
jmp
hlt
(bad)
jg
(bad)
dec
sar
push
(bad)
jg
(bad)
jmp
(bad)
(bad)
mov
pop
xchg
(bad)
jmp
hlt
(bad)
cmp
call
call
(bad)
out
inc
(bad)
dec
dec
jmp
psubsb
jg
std
dec
(bad)
(bad)
jmp
(bad)
call
(bad)
call
(bad)
fisttp
jmp
jmp
(bad)
fbld
(bad)
call
(bad)
mov
dec
(bad)
dec
jmp
push
(bad)
fbld
jg
(bad)
jg
(bad)
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
jg
std
dec
hlt
(bad)
aas
cmp
pop
sar
call
cli
(bad)
fild
inc
call
call
(bad)
call
(bad)
call
(bad)
inc
(bad)
dec
push
cli
jmp
(bad)
inc
call
std
push
std
inc
or
dec
jmp
cmp
call
inc
(bad)
jmp
call
dec
cmps
(bad)
call
(bad)
push
cli
(bad)
aas
inc
(bad)
call
std
(bad)
aas
mov
(bad)
dec
(bad)
jg
pop
lahf
pushf
xor
jmp
(bad)
push
push
std
inc
std
dec
jmp
cli
(bad)
out
dec
call
jmp
cli
call
dec
(bad)
jmp
(bad)
jg
std
jmp
movs
(bad)
call
hlt
(bad)
mov
sar
dec
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
cli
jmp
movs
push
mov
mov
mov
sub
test
inc
outs
inc
icebp
fisubr
icebp
faddp
scas
leave
icebp
fidivr
test
(bad)
in
adc
icebp
leave
mov
jmp
(bad)
js
nop
push
cmp
dec
sub
(bad)
pop
call
pop
push
cli
loopne
jl
pop
push
dec
in
xchg
or
lahf
dec
xchg
fistp
sahf
and
clc
inc
push
jle
pop
nop
in
fadd
adc
lods
js
ss
ret
shl
sti
clc
in
jg
push
pushf
push
dec
stos
cmc
aaa
in
imul
mov
mov
sbb
fs
fcmovnb
addr16
icebp
fldcw
(bad)
pop
cld
mul
aaa
mov
mov
cmp
sbb
dec
push
(bad)
pop
fs
aas
aas
clc
outs
icebp
add
or
mov
(bad)
xor
sbb
pop
les
aaa
jle
and
dec
jo
push
xchg
loopne
clc
lea
sar
out
pop
out
daa
fdivrp
inc
icebp
(bad)
pop
(bad)
addr16
or
cmp
fs
push
push
ffreep
mov
mov
out
loopne
aas
sbb
jns
test
fs
jl
inc
mov
fistp
add
cld
mov
cld
pop
ret
xor
loop
pop
sbb
sub
aas
loop
aas
add
out
lds
cs
pop
icebp
sbb
enter
or
lock
inc
xchg
adc
mov
clc
in
das
shr
cmp
mov
jl
lock
jecxz
mov
clc
in
dec
lds
add
popa
pop
out
mov
adc
cld
in
pusha
sbb
dec
jbe
jnp
stos
lahf
cmp
or
pop
lahf
jecxz
(bad)
loopne
les
jg
ds
adc
std
adc
ins
and
std
out
clc
loopne
inc
pop
mov
lock
mov
inc
aaa
test
cmp
mov
gs
in
pop
les
addr16
fnstcw
add
push
ds
(bad)
lock
sbb
inc
cld
test
std
cmp
pop
icebp
jecxz
rcr
fistp
clc
retf
icebp
cmc
lahf
(bad)
repz
fist
icebp
(bad)
sbb
rol
mov
lock
jle
add
repnz
or
cmp
aaa
pop
mov
push
cld
not
cmp
fld
fbstp
fistp
fistp
jle
mov
(bad)
sub
lock
shr
clc
fistp
jmp
jle
inc
lock
(bad)
das
cld
imul
shr
sub
xlat
icebp
rcr
paddd
(bad)
cld
lock
rol
add
clc
lock
mov
jno
pop
loop
sub
push
cld
jmp
mov
(bad)
in
shufps
ds
pop
loope
jg
pop
pushf
jecxz
sub
sbb
mov
outs
scas
lock
mov
mov
jbe
fistp
mov
cld
idiv
jecxz
outs
loope
jae
xchg
jb
clc
in
mov
outs
mov
stos
push
pop
mov
clc
mov
xlat
sub
stos
cs
cmp
pop
clc
cld
lahf
shl
push
jle
pop
lock
fstp
test
pop
push
jle
push
pop
jg
jle
pop
jg
mov
pop
(bad)
fistp
xor
or
aad
je
addr16
ins
jl
daa
loopne
lahf
cmp
and
rcr
mov
add
cld
clc
shl
lahf
call
cmp
outs
jo
push
mov
in
daa
lock
jle
mov
mov
vmread
js
sbb
mov
jle
xor
popf
call
mov
(bad)
int
outs
mov
jne
fistp
scas
mov
std
lahf
icebp
fld
ret
jmp
jle
lock
jl
scas
loop
sub
pop
cld
shl
fucomi
repnz
aas
or
dec
jl
ja
add
jg
shl
rcr
out
in
iret
cmps
fistp
cmp
jg
clc
sti
pop
outs
call
pop
cli
inc
icebp
fcmovnu
mov
scas
icebp
cli
outs
jbe
jecxz
clc
pop
pop
jae
imul
jecxz
fisttp
pop
sbb
jmp
xor
add
test
mov
jl
or
icebp
(bad)
mov
jle
cld
neg
loop
mov
add
loopne
mov
scas
or
pop
cld
neg
loope
mov
clc
in
jg
dec
call
jle
std
icebp
fnstcw
les
leave
(bad)
lock
(bad)
fistp
loop
mov
cmp
stos
shr
loopne
rol
push
std
addr16
fist
push
clc
in
movnti
sbb
add
test
(bad)
sbb
push
loop
fist
mov
adc
(bad)
outs
(bad)
lock
fcomip
icebp
fstp
fistp
mov
icebp
fcmovnb
clc
in
mov
outs
jg
jle
(bad)
lock
sbb
clc
fistp
std
xchg
inc
mov
(bad)
xchg
mov
and
bound
hlt
out
mov
jg
rol
jmp
(bad)
jmp
js
lock
std
jg
xlat
nop
and
adc
call
std
dec
mov
hlt
(bad)
jmp
test
dec
mov
jecxz
sbb
pop
jp
out
mov
adc
(bad)
jg
(bad)
jmp
(bad)
jmp
(bad)
jg
inc
sbb
fistp
xor
call
(bad)
aas
test
jmp
sar
xor
lock
inc
fistp
(bad)
dec
jmp
(bad)
cmp
(bad)
call
std
call
and
aaa
mov
dec
call
std
jmp
std
inc
mov
call
inc
(bad)
jmp
cli
call
(bad)
jmp
(bad)
jg
std
(bad)
out
mov
(bad)
jg
(bad)
jmp
(bad)
jmp
(bad)
jg
(bad)
call
(bad)
(bad)
jmp
mov
jg
cli
(bad)
out
dec
(bad)
inc
dec
(bad)
jg
(bad)
inc
(bad)
sti
sar
jae
jg
(bad)
mov
hlt
(bad)
aas
xchg
jmp
sar
jmp
call
(bad)
(bad)
jmp
(bad)
jg
std
(bad)
out
cmps
(bad)
call
(bad)
jmp
(bad)
call
cli
(bad)
out
repnz
(bad)
pop
and
(bad)
and
cli
mov
scas
clc
in
dec
call
cld
cmc
outs
cmps
mov
lock
movs
in
jg
std
sti
icebp
jmp
xchg
sub
jge
push
lahf
loope
mov
ret
ret
(bad)
aas
sub
out
icebp
jecxz
dec
jmp
cld
clc
arpl
pop
push
scas
jns
lea
ins
punpckhdq
mov
add
mov
pop
mov
sti
push
mov
aas
pop
sbb
(bad)
out
cmp
ffreep
pop
xchg
or
outs
mov
jle
cld
xchg
outs
push
sti
(bad)
icebp
sbb
in
or
lock
sahf
mov
cwde
inc
outs
or
paddd
cld
mul
loopne
jg
mov
lahf
shr
in
pop
ret
cmp
clc
cmp
(bad)
jl
xlat
loope
jg
mov
aaa
shr
jle
push
mov
sbb
in
ja
addr16
shr
jle
loope
fist
mov
sbb
(bad)
clc
loopne
rol
loope
call
das
(bad)
pop
clc
jmp
scas
push
loope
add
pop
cmp
in
lahf
(bad)
outs
mov
push
pop
setg
push
clc
in
pop
ret
outs
mov
outs
call
cmp
aas
add
jle
jle
jne
fnstcw
fistp
cld
mov
outs
inc
std
neg
pop
cld
dec
jo
ficomp
jg
dec
jmp
jle
xor
outs
jg
ds
imul
jg
(bad)
(bad)
cld
test
in
lahf
mov
jle
cld
test
mov
add
(bad)
mov
xlat
clc
in
mov
cmp
cmp
push
jle
cld
fdivr
clc
cs
loop
jl
sbb
ret
pop
jg
sbb
mov
pmaxsw
add
loopne
cld
xchg
outs
jg
jle
ins
icebp
sbb
pop
push
jle
xor
jge
jle
jl
pop
jl
jg
and
fcomi
(bad)
add
jmp
icebp
rcr
div
mov
adc
cmp
xchg
lock
cmp
inc
mov
jge
jmp
sbb
or
out
sbb
clc
hlt
loopne
mov
test
push
jg
mov
lock
(bad)
loopne
loope
das
cmp
imul
mov
xchg
clc
jmp
jmp
adc
mov
in
iret
inc
repz
xor
jmp
and
cs
aad
sub
dec
cli
jecxz
ds
lahf
gs
mov
push
pop
push
lock
cld
leave
mov
push
sub
jle
dec
mov
clc
leave
aas
dec
stos
stos
jg
mov
daa
jg
sub
out
xlat
movs
jg
(bad)
cld
retf
sub
sti
mov
pop
jl
out
pop
hlt
lahf
icebp
mov
mov
push
loop
sbb
(bad)
and
cmp
add
jg
jo
loop
fistp
aas
or
jl
pop
sub
jle
pop
jo
repnz
cld
add
hlt
mov
aas
les
push
pop
sti
clc
jno
mov
pop
mov
(bad)
in
sbb
lods
js
jle
cld
imul
loop
fist
push
mov
jg
(bad)
imul
jb
lock
cld
or
(bad)
jnp
rcl
sar
sti
pop
jmp
jle
cmp
mov
jecxz
sar
addr16
mov
neg
mov
push
(bad)
push
cld
mov
cmp
std
retf
clc
in
das
les
pop
(bad)
leave
mov
xchg
icebp
jecxz
cmp
retf
xlat
pop
test
jle
push
cli
dec
jmp
clc
pushf
or
enter
jle
dec
add
fucomip
jl
add
mov
and
enter
leave
sar
jle
in
clc
pop
lock
loopne
ret
pop
jg
ds
dec
lock
fistp
cld
neg
mov
sbb
xchg
loope
jmp
dec
jle
push
icebp
fstp
rol
ret
iret
popa
nop
and
sbb
inc
cld
mov
repz
push
lahf
inc
outs
jg
mov
cs
pop
call
mov
jg
ds
dec
cmp
hlt
std
push
clc
fwait
cmp
dec
push
test
mov
lahf
(bad)
ret
pop
pop
sbb
push
aam
pop
lahf
call
clc
pushf
cmp
mov
pop
jg
ds
lock
sbb
or
stos
and
xor
out
adc
cmp
movs
pop
jmp
mov
aas
(bad)
(bad)
pop
cld
test
aaa
ss
pop
mov
cmp
lahf
sub
call
pop
cld
loope
push
push
cld
push
mov
(bad)
mov
cmc
mov
repz
test
jle
jg
fsubr
ret
pop
inc
xor
sbb
pop
lock
test
cli
push
dec
call
cli
push
call
cmp
jg
imul
pop
sar
ror
out
sbb
fild
aaa
rcl
(bad)
repz
stos
pop
ret
gs
popa
inc
(bad)
ficom
pushf
ins
fcom
das
jmp
in
test
push
inc
ins
push
dec
popf
or
or
das
sar
jmp
call
pushf
xchg
jp
lahf
inc
jo
stc
adc
xchg
xor
jl
into
enter
mov
shl
(bad)
mov
dec
dec
into
enter
jmp
jg
out
xchg
xchg
xor
rcr
cld
stc
xlat
xor
cs
daa
ds
mov
fist
aas
(bad)
in
jg
pop
jg
or
sbb
lds
stc
lea
sub
into
fstp
dec
inc
push
nop
pop
mov
xor
das
inc
cmp
lock
xor
push
loopne
aas
adc
xabort
or
std
outs
push
loopne
dec
push
jmp
jg
ds
mov
shr
mov
adc
(bad)
pop
test
push
mov
pop
test
clc
daa
call
enter
jbe
(bad)
adc
(bad)
into
enter
xor
stos
icebp
adc
and
add
sub
enter
jo
jle
cmc
inc
or
inc
jl
loopne
xchg
push
inc
dec
xor
addr16
les
inc
sar
sbb
loope
pop
clc
or
fnstsw
push
pop
cld
cmp
jle
mov
lahf
cld
in
cmps
cmp
jg
push
std
xchg
inc
ja
popf
ds
movd
scas
jge
scas
mov
cld
in
call
ds
cmps
sar
mov
sbb
out
mov
mov
mov
pop
dec
mov
pop
dec
cmp
jg
out
cs
shl
(bad)
sub
je
dec
out
mov
sti
mov
pop
(bad)
fild
int3
leave
out
jb
mov
std
lock
pop
retf
fidivr
test
js
cdq
and
(bad)
jp
xchg
dec
call
idiv
loopne
jg
mov
fcmovne
hlt
inc
clc
loopne
mov
ret
hlt
xchg
mov
out
sar
jg
sar
and
inc
ds
sub
add
sbb
retf
fisttp
aaa
jecxz
dec
and
pop
shr
jle
jecxz
fistp
pop
jg
cmp
jnp
mov
adc
out
dec
jecxz
jg
mov
leave
shr
movups
dec
popf
cmp
jmp
add
sti
aaa
cld
in
clc
popf
aas
stc
outs
jg
dec
(bad)
stos
(bad)
mov
retf
lds
call
out
repnz
cld
jnp
retf
loop
jg
ja
jge
scas
xchg
enter
retf
out
repnz
aas
idiv
jmp
pop
jle
dec
(bad)
and
(bad)
jge
add
mul
jg
out
lock
fild
ret
mov
stc
pop
xchg
lahf
cld
adc
leave
pop
repnz
add
out
out
push
jg
addr16
cs
in
std
pop
inc
lahf
cld
mov
out
repnz
jl
inc
std
cmps
lahf
cld
popa
inc
(bad)
pop
add
into
ucomiss
arpl
in
sub
dec
jb
jle
aas
ds
cmp
out
and
ret
das
pusha
xchg
adc
loope
in
loop
fld
mov
jecxz
sbb
(bad)
daa
pop
mov
in
xor
(bad)
dec
push
cld
cli
clc
inc
jns
cld
js
loope
pop
and
push
sub
mov
cld
int3
loope
test
idiv
clc
cmps
icebp
jecxz
cmp
inc
(bad)
das
stos
in
mov
inc
into
(bad)
jge
(bad)
ja
ds
or
call
jle
mov
dec
jo
jmp
loopne
fldcw
std
out
dec
(bad)
(bad)
std
jg
js
or
xchg
ret
inc
rcr
jmp
(bad)
pop
(bad)
cmp
out
push
je
inc
jle
test
(bad)
mov
in
dec
jmp
cli
scas
jmp
xchg
dec
loopne
aas
dec
cmp
lss
and
(bad)
in
(bad)
pop
imul
push
cld
pop
lock
icebp
mov
xchg
hlt
dec
ret
cs
daa
jg
mov
xchg
aas
ds
or
(bad)
adc
int3
sub
sbb
in
or
aas
cld
push
jns
sbb
push
loope
mov
mov
and
loopne
mov
test
cli
jecxz
enter
shl
jg
mov
cmp
cdq
(bad)
xchg
jmp
ja
jge
stc
ja
mov
fstp
(bad)
ficomp
dec
sti
dec
mov
aas
stc
xchg
dec
(bad)
jle
sar
mov
sbb
aaa
shl
scas
stc
pop
out
push
dec
sti
das
loope
mov
std
pop
jle
dec
dec
clc
in
cli
pop
ds
pop
and
ins
cmp
ins
icebp
fistp
mov
sldt
cld
mov
loopne
in
xchg
jmp
ja
std
or
fild
stc
dec
jle
dec
inc
(bad)
stc
daa
(bad)
out
out
repnz
outs
xchg
aas
std
scas
(bad)
cs
test
dec
sub
mov
icebp
aas
stc
mov
ds
pop
leave
cmps
std
mov
leave
fisttp
jmp
jp
scas
movs
xor
xchg
in
jmp
cli
and
je
fwait
movs
jmp
cld
in
movs
lds
pop
dec
xor
inc
jg
fbld
loopne
jg
(bad)
mov
xchg
(bad)
out
ja
xchg
jo
stc
in
sti
in
aas
stc
(bad)
dec
jae
outs
xchg
outs
jmp
xchg
inc
dec
push
dec
lock
push
lahf
cld
adc
pop
stc
add
leave
(bad)
fstp
ja
xchg
or
fild
mov
in
cli
sbb
daa
adc
hlt
xchg
mov
and
(bad)
push
call
inc
nop
dec
clc
and
xchg
call
icebp
ins
inc
loop
stc
lea
fbld
jg
loopne
mov
out
dec
pop
std
cli
cmps
mov
mov
in
(bad)
jmp
out
adc
(bad)
(bad)
xlat
jo
repnz
jg
hlt
jmp
cld
daa
push
scas
mov
mov
add
jmp
imul
fsubr
cld
retf
jmp
int3
in
jmp
pop
jp
pop
jg
push
(bad)
outs
dec
jg
cld
cli
xlat
jo
cmps
sbb
mov
in
inc
mov
inc
jmp
(bad)
cli
(bad)
push
das
sub
cmp
icebp
aad
test
dec
call
scas
adc
adc
pop
mov
lds
pop
sar
cwde
cli
mov
push
pop
out
jle
out
sar
inc
sti
jg
es
addr16
cmps
add
sub
xor
call
mov
sub
jmp
ja
add
xor
outs
inc
dec
neg
les
leave
jle
bound
movs
pop
(bad)
ins
mov
jle
fucomip
ja
sbb
fucomip
int
pop
dec
pop
std
or
pop
lock
mov
fistp
out
and
mov
xchg
push
jg
loop
fild
in
cld
in
ds
jmp
or
ja
dec
or
jno
fmul
mov
or
repz
out
hlt
aaa
lock
cmp
pop
jle
push
aas
(bad)
fwait
xor
enter
mov
stc
outs
rcr
aas
(bad)
mov
scas
ret
(bad)
jg
std
or
dec
pop
cmp
jge
and
fcomp
aas
add
jg
hlt
fdivr
fldlg2
dec
(bad)
push
pop
inc
and
clc
pop
adc
cld
dec
int3
xor
sahf
sub
dec
jmp
out
fstp
ja
imul
fisttp
in
stc
in
mov
pop
adc
jg
or
stc
in
std
sbb
js
ja
imul
xor
rol
out
out
dec
xchg
div
and
mov
in
xchg
in
movs
xchg
jle
dec
(bad)
imul
call
mov
outs
dec
outs
and
cld
imul
addr16
dec
(bad)
mov
mov
mov
outs
ret
xor
fstp
das
std
jbe
cld
repz
das
clc
in
cld
ins
ds
(bad)
push
pusha
xchg
mov
clc
sbb
popf
adc
add
pop
std
sbb
pop
cli
std
xlat
stc
mov
fbld
sti
and
or
sbb
sub
pop
hlt
lea
inc
in
ja
pop
xor
clc
pop
lahf
mov
add
mov
mov
push
xchg
sbb
out
dec
pop
xor
mov
iret
jg
scas
repz
(bad)
out
push
repnz
cli
daa
call
repz
popf
loope
jle
fdivr
stc
pop
ja
std
ret
jmp
sub
out
inc
jmp
(bad)
cmc
mov
retf
lock
jnp
add
xchg
cmp
adc
adc
(bad)
loopne
xlat
cmps
jg
mov
push
mov
dec
mov
dec
adc
std
scas
mov
call
sbb
out
mov
out
inc
jmp
clc
xor
mov
jle
pop
jecxz
clc
sub
pop
push
cmp
mov
out
ja
lahf
pop
sar
jmp
cli
fucomip
out
pop
dec
jmp
std
xchg
jle
popf
add
jg
idiv
push
push
ror
mov
or
jg
(bad)
or
into
scas
dec
jge
jmp
cli
popf
(bad)
(bad)
shr
jmp
jge
(bad)
out
push
cmc
cmc
jnp
out
fcmovnbe
not
mov
sti
call
inc
clc
(bad)
sbb
call
loope
xchg
sbb
cmc
cmc
aaa
shl
mov
hlt
fst
mov
outs
cli
stc
das
shl
aam
mul
outs
std
fnstsw
pop
jecxz
jmp
(bad)
mov
cwde
mov
call
aam
ja
out
(bad)
sbb
stc
push
sar
(bad)
cmp
xchg
(bad)
cmp
clc
push
call
jle
jp
mov
das
mov
in
lahf
and
dec
(bad)
sub
outs
shl
mov
hlt
out
dec
call
jl
js
ret
hlt
std
sub
std
das
movs
lahf
dec
loope
xchg
shl
cmp
sub
lahf
(bad)
jecxz
xlat
out
dec
mov
iret
jmp
mov
addr16
sti
aas
dec
xor
test
dec
std
dec
hlt
(bad)
aas
lahf
(bad)
(bad)
in
xor
push
sti
shl
mov
or
dec
shl
adc
call
cmc
push
adc
dec
add
pop
mov
addr16
pop
dec
jg
(bad)
hlt
(bad)
call
(bad)
call
test
inc
cmps
(bad)
jmp
call
aam
xor
addr16
repz
ret
fcom
call
pushf
jle
add
and
jle
inc
je
dec
jmp
std
and
ins
jbe
idiv
call
(bad)
and
jg
cmc
call
repz
mov
fist
arpl
stc
adc
jbe
cmp
inc
(bad)
dec
jecxz
xchg
(bad)
jno
mov
daa
cli
(bad)
mov
hlt
stc
aas
dec
std
sbb
pusha
cld
xchg
hlt
std
outs
inc
jge
sahf
hlt
(bad)
xchg
aam
lahf
dec
lahf
call
push
cmp
daa
or
fisttp
dec
iret
jg
mov
xor
out
cli
stc
inc
test
(bad)
stc
test
lahf
inc
clc
cld
imul
inc
call
test
pushf
(bad)
(bad)
jnp
lahf
jg
std
std
mov
(bad)
out
dec
jg
inc
jg
and
fisubr
movs
(bad)
push
fstp
cli
in
scas
movs
ja
adc
(bad)
jge
repz
and
cli
in
out
movs
(bad)
dec
jg
inc
mov
mov
loope
dec
out
in
shr
jg
mov
mov
in
jg
sar
call
addr16
cmp
jecxz
mov
lahf
imul
or
pop
push
ficom
fadd
iret
jg
push
cwde
jg
jge
dec
adc
mov
(bad)
pop
mov
out
out
and
push
out
mov
push
in
daa
jmp
jl
ins
push
stc
cmp
lahf
ror
outs
adc
out
adc
fbld
out
mov
out
mov
or
cmc
push
shl
xor
aas
add
aaa
sar
jmp
jmp
fldcw
aas
(bad)
aam
das
mov
icebp
shld
out
adc
test
cwde
cli
clc
cs
iret
jle
cli
out
das
mov
pop
mov
or
out
cmp
cli
cld
mov
iret
(bad)
xor
not
ret
(bad)
push
test
mov
call
lahf
movs
ja
mov
mov
mov
inc
adc
inc
inc
xchg
pop
inc
(bad)
movs
mov
adc
cld
xchg
out
sbb
pushf
jle
popf
hlt
inc
idiv
ja
out
hlt
(bad)
or
cmc
mov
iret
(bad)
push
jnp
xor
not
add
das
fdivr
jle
out
std
inc
hlt
(bad)
out
dec
lock
(bad)
adc
sti
jg
notrack
(bad)
adc
sub
out
pop
sbb
and
out
daa
cmp
mov
mov
(bad)
jg
jg
mov
(bad)
fcomi
sti
inc
inc
div
fdivr
adc
mov
out
add
pop
mov
icebp
addr16
jg
loopne
iret
loopne
cli
out
ja
(bad)
jle
cli
(bad)
aas
add
ror
pop
shl
push
sar
test
cld
sahf
aam
fbld
(bad)
cmp
jmp
and
jnp
sti
jmp
sti
mov
in
outs
(bad)
fisttp
frstor
shr
sbb
fist
jmp
and
jnp
jbe
mov
nop
(bad)
lahf
adc
hlt
out
outs
inc
hlt
cli
dec
call
fbld
out
mov
repz
sar
call
pop
push
jg
mov
jne
mov
mov
sub
push
sti
mov
add
(bad)
test
jmp
cli
in
aas
movs
mov
inc
lahf
push
hlt
into
fild
jle
cli
out
aaa
mov
cmp
mov
retf
call
push
std
aaa
movs
(bad)
jg
ins
mov
mov
pushf
ficomp
cli
std
scas
cmps
ds
hlt
stc
das
movs
(bad)
or
test
(bad)
sub
pop
and
inc
lods
hlt
sti
das
movs
fistp
pop
div
mov
and
adc
cmp
add
push
hlt
dec
hlt
inc
jmp
(bad)
jmp
cli
call
(bad)
(bad)
jmp
(bad)
jg
std
call
cmps
(bad)
push
(bad)
call
sar
jmp
jmp
mov
call
xor
std
fcmovnbe
jmp
stos
and
inc
dec
and
inc
(bad)
call
std
aas
cmps
call
dec
aas
xchg
cmp
jg
std
pop
or
cli
(bad)
aas
inc
(bad)
jmp
(bad)
call
std
(bad)
aas
mov
(bad)
inc
(bad)
jg
pop
mov
(bad)
jmp
push
jmp
dec
jge
dec
mov
(bad)
aas
mov
jmp
(bad)
jmp
cli
call
(bad)
call
std
call
cmps
(bad)
push
(bad)
jg
(bad)
(bad)
out
sar
dec
(bad)
dec
fucomip
(bad)
mov
movs
(bad)
push
hlt
call
ds
call
call
jmp
dec
(bad)
jmp
cli
call
call
jmp
(bad)
call
(bad)
dec
(bad)
inc
(bad)
mov
jmp
call
cli
jmp
jmp
data16
call
cmps
jmp
push
jmp
outs
sar
pop
sar
jg
cli
call
hlt
call
(bad)
jmp
std
dec
mov
(bad)
mov
sar
push
cli
(bad)
mov
call
(bad)
mov
hlt
(bad)
inc
mov
jg
cli
(bad)
out
dec
(bad)
inc
dec
(bad)
jg
(bad)
jg
(bad)
jmp
std
aas
mov
jmp
cli
(bad)
cmp
call
dec
(bad)
jmp
std
dec
movs
(bad)
inc
hlt
(bad)
mov
sar
(bad)
ds
(bad)
aas
dec
(bad)
jmp
(bad)
call
std
(bad)
fbld
(bad)
call
(bad)
jg
pop
out
xlat
clc
xor
inc
(bad)
inc
call
inc
dec
std
dec
cli
push
call
std
jmp
dec
push
hlt
(bad)
aas
xchg
(bad)
call
sar
jmp
cli
(bad)
fild
(bad)
sti
call
call
hlt
(bad)
call
(bad)
call
cli
(bad)
inc
push
jle
sbb
std
push
(bad)
jmp
push
std
(bad)
ds
push
std
call
std
jmp
call
std
jmp
dec
push
hlt
(bad)
aas
xchg
(bad)
call
sar
call
(bad)
fisttp
inc
jmp
call
(bad)
(bad)
cmp
(bad)
dec
push
cli
jmp
movs
(bad)
call
(bad)
jmp
hlt
jmp
inc
cli
push
std
push
mov
scas
shl
pop
push
xchg
ds
pop
and
sti
outs
and
(bad)
pop
jno
xchg
xchg
adc
and
clc
push
sub
std
pop
shr
jnp
inc
cmp
das
(bad)
outs
dec
loop
repnz
mov
cs
gs
(bad)
mov
xchg
test
dec
mov
mov
in
sub
dec
pop
dec
bound
fisttp
in
jle
rol
cmps
hlt
fcmovb
out
(bad)
fistp
jle
sbb
adc
std
inc
clc
in
adc
nop
lock
jle
inc
clc
in
pop
loop
aas
push
fbld
imul
jle
xchg
add
cld
call
out
sti
lock
add
(bad)
fiadd
call
ds
xor
call
and
cmps
lock
lods
shr
jle
push
out
mov
outs
jg
jle
xchg
(bad)
lahf
add
xlat
rcr
pop
out
cmp
loopne
pop
push
clc
adc
lock
std
push
clc
(bad)
repz
jg
call
in
adc
inc
and
add
out
loop
int3
jmp
add
dec
clc
in
lahf
(bad)
addr16
cmp
xor
lock
aas
push
pop
std
outs
pop
stc
sti
add
aad
sbb
ss
neg
mov
loope
sar
icebp
dec
loopne
jg
mov
xlat
sub
jecxz
lods
jae
add
pop
mov
mov
cld
div
jecxz
pop
out
mov
sbb
cmp
jg
mov
add
sub
not
std
fwait
clc
in
jnp
(bad)
sbb
rol
sub
clc
push
jle
or
scas
scas
nop
(bad)
ja
div
cmp
shr
mov
jle
pop
lock
cmp
stc
aaa
mov
lds
mov
sbb
cmp
aas
pop
mov
jg
mov
cmp
mov
fstp
jl
das
arpl
out
lahf
rol
icebp
sar
(bad)
push
cld
div
mov
sbb
(bad)
cmp
xchg
mov
iret
ret
loop
cld
or
in
das
(bad)
addr16
cmp
dec
lock
lahf
loopne
add
test
sti
or
mov
add
icebp
shl
ret
(bad)
scas
push
ds
shl
(bad)
dec
cld
not
jle
fcomi
fld
inc
mov
pop
(bad)
ds
cmc
icebp
fstp
sar
mov
int
dec
aas
sar
clc
or
or
not
cld
fild
in
loopne
mov
add
cli
daa
icebp
fisttp
cld
div
jecxz
aas
sbb
jp
xlat
loope
inc
pop
cld
and
(bad)
sub
cmc
cmp
cld
leave
cld
ds
jg
fistp
jle
call
cld
push
loopne
jg
mov
lahf
loop
jecxz
sbb
sbb
mov
icebp
fld
fistp
loopne
dec
in
mov
fistp
mov
mov
fistp
sbb
jg
pop
clc
sti
(bad)
lock
test
(bad)
out
(bad)
std
call
pop
out
push
shr
sbb
aas
loopne
xlat
clc
loopne
ret
outs
mov
pop
dec
mov
loop
aaa
clc
loopne
(bad)
outs
jg
and
cmp
xlat
les
cmp
std
xchg
cmp
loopne
ret
outs
mov
call
dec
inc
sbb
loopne
(bad)
(bad)
mov
aas
add
(bad)
sar
mul
shr
(bad)
(bad)
daa
pop
dec
jl
(bad)
out
jl
jnp
jl
pop
cld
idiv
loopne
jle
loope
xor
cmp
(bad)
fucomip
loopne
lahf
arpl
fdivr
aaa
lock
mov
(bad)
jne
neg
loopne
lahf
ds
dec
icebp
ror
mov
stos
jg
std
mul
loope
call
mov
mov
mov
(bad)
fld
mov
jl
iret
loope
fistp
std
and
in
dec
inc
mov
stc
clc
in
outs
shr
push
(bad)
xor
jbe
jecxz
mov
lock
mov
pinsrw
cmp
out
and
xchg
clc
loopne
mov
ret
outs
addr16
jmp
icebp
(bad)
add
dec
icebp
fistp
mov
ja
outs
call
call
mov
pop
jmp
iret
aas
jle
pop
jns
loope
ds
(bad)
outs
jg
mov
das
les
xor
sahf
sti
loopne
movs
fistp
(bad)
loopne
ret
sar
iret
dec
jg
xchg
mov
scas
inc
mov
ret
pop
aas
ret
jecxz
pop
jnp
jg
shr
pop
lea
ds
inc
lock
mov
add
icebp
fstp
jle
cld
not
in
cmp
in
and
out
sbb
sub
mov
nop
mov
clc
add
std
scas
push
jg
lahf
std
mov
in
mov
outs
mov
cld
imul
(bad)
(bad)
clc
xchg
hlt
rcr
(bad)
pop
cli
in
mov
clc
out
lock
mov
xchg
mov
jecxz
addr16
in
pop
shr
call
jle
retf
icebp
(bad)
sbb
lock
inc
mov
idiv
xchg
mov
call
fdivr
std
adc
imul
jmp
mov
inc
jl
outs
hlt
imul
cmps
hlt
(bad)
fisttp
(bad)
sti
sar
inc
cli
dec
sar
das
jmp
inc
(bad)
jmp
lahf
inc
inc
(bad)
jg
std
pop
cld
repz
sar
popa
arpl
sub
mov
test
cld
and
or
pop
rol
idiv
jmp
hlt
jg
sti
out
xchg
add
out
pop
or
(bad)
xor
lock
or
aas
repnz
add
jmp
std
(bad)
jg
(bad)
call
in
(bad)
cli
hlt
(bad)
fistp
jg
cli
call
jmp
call
cli
push
(bad)
aas
inc
(bad)
call
std
aas
cmps
call
jmp
call
dec
(bad)
jmp
jmp
jmp
cmps
(bad)
push
(bad)
push
sar
dec
cli
(bad)
mov
call
(bad)
mov
hlt
(bad)
inc
inc
call
sar
jg
cli
(bad)
out
dec
(bad)
inc
cwde
(bad)
dec
pop
cli
jg
(bad)
jg
jmp
(bad)
jmp
call
dec
mov
(bad)
mov
sar
call
cli
(bad)
aas
inc
(bad)
push
call
(bad)
mov
hlt
jg
push
rcl
call
call
mov
(bad)
push
std
sbb
pop
jb
inc
cld
clc
mov
jg
pop
(bad)
sub
aas
cmp
aas
lds
fwait
lahf
cld
ret
jmp
push
pop
sub
pop
sar
aas
(bad)
mov
jg
lods
out
(bad)
lock
and
dec
jg
sub
fild
pop
pop
mov
clc
stos
call
xor
inc
pop
dec
icebp
rol
out
mov
(bad)
pusha
jl
or
lea
jl
sbb
cmp
outs
jg
jle
(bad)
outs
sub
mul
clc
in
fild
call
das
clc
in
aaa
lds
mov
pop
cmp
paddd
idiv
outs
jg
jle
outs
loopne
jge
pushf
retf
pushf
retf
jae
sub
inc
and
dec
shr
jg
fcomip
loopne
les
jg
ds
jmp
sbb
repz
lds
sbb
pop
jno
adc
test
cmp
lock
jecxz
call
xchg
adc
jo
jg
sub
out
outs
jecxz
xlat
clc
in
aaa
ret
clc
in
out
lds
pop
jle
cmps
icebp
fstp
pushf
pop
mov
add
jmp
push
dec
mov
mov
pop
mov
js
clc
loopne
cmp
in
ret
jmp
icebp
jecxz
sar
iret
icebp
stc
mov
and
scas
loopne
aas
test
dec
mov
or
clc
icebp
vpandn
sti
xlat
loopne
add
pop
jg
jle
fcomi
fstp
cld
test
mov
jl
xchg
mov
push
mov
test
xchg
clc
in
lahf
inc
mov
lock
mov
sbb
bswap
lock
jle
jne
cld
clc
in
lahf
lds
mov
mov
pop
cld
push
clc
loopne
shr
(bad)
push
jl
arpl
loopne
push
jle
jl
std
jo
mov
inc
inc
call
std
cmp
or
or
pop
jne
dec
jecxz
jg
pop
cld
cmp
fild
mov
pop
jg
ds
sbb
gs
or
rcl
aas
adc
sti
inc
jecxz
call
mov
pop
(bad)
(bad)
clc
in
or
mov
mov
(bad)
outs
ffreep
outs
push
outs
pop
pop
loopne
mov
mov
sbb
xor
push
mov
rcr
movd
jle
popf
icebp
fld
(bad)
sub
lock
repnz
inc
out
rcl
jle
dec
pop
fs
dec
imul
loop
dec
(bad)
nop
call
pop
enter
mov
loop
(bad)
jbe
jns
stc
sbb
lock
xchg
lock
dec
push
clc
repz
scas
cld
pop
in
ins
jg
daa
shl
mov
xor
mov
inc
inc
dec
jno
jg
push
stc
jnp
call
ja
ds
or
addr16
cli
test
and
pop
div
jecxz
pop
and
mov
(bad)
outs
js
or
or
jmp
jle
jl
outs
loope
pop
sti
inc
sbb
cwde
sbb
clc
lds
call
aas
rol
cmp
ja
add
sti
pop
(bad)
outs
sbb
(bad)
xchg
clc
jmp
push
jecxz
fild
std
jbe
jg
ds
and
cld
inc
jg
mov
lahf
test
push
push
cld
leave
clc
icebp
sbb
aas
shl
adc
clc
lea
scas
icebp
jecxz
push
push
sub
fsubp
(bad)
mov
sbb
or
or
les
sub
and
dec
lock
icebp
in
shl
clc
mov
sar
mov
test
cmp
(bad)
outs
sbb
jb
int3
icebp
and
xchg
sti
hlt
jecxz
sbb
fwait
clc
jecxz
out
xchg
jl
jg
aas
jle
mov
mov
outs
shr
jg
mov
lahf
(bad)
addps
outs
ret
icebp
in
repnz
aad
iret
loopne
mov
in
lahf
shr
jp
nop
loope
mov
and
pop
mov
mov
sub
pop
call
sbb
mov
adc
lds
jg
pop
mov
dec
sub
in
jmp
add
push
jle
repz
adc
(bad)
xchg
cmp
push
clc
cld
pop
les
daa
pop
call
ds
pop
lock
lock
(bad)
fucomip
loopne
mov
cmp
clc
mov
rcr
paddd
in
jg
mov
jo
enter
jle
pop
pop
loope
rol
or
(bad)
aas
mov
mov
aaa
std
sbb
or
xlat
rol
aas
jbe
lock
call
push
call
fld
cmp
in
pop
hlt
jg
sbb
or
mul
sbb
xlat
clc
push
mov
jg
(bad)
jmp
call
mov
adc
(bad)
shl
inc
lahf
dec
rcr
mov
mov
fiadd
test
ficomp
sub
mov
popa
in
rcl
std
ja
mov
fsubr
test
jmp
mov
call
pop
icebp
jecxz
dec
call
clc
pop
sar
push
dec
(bad)
test
jg
std
xchg
jecxz
dec
jmp
clc
pop
sar
jle
jne
inc
mov
lds
lahf
cli
mov
mov
pop
fwait
(bad)
cdq
clc
call
mov
jae
xchg
cs
pop
and
dec
xchg
lahf
add
xchg
popa
sub
das
(bad)
outs
dec
add
sub
mov
and
jmp
adc
cmc
fwait
mov
adc
cld
sbb
cmp
adc
clc
fstp
std
cs
inc
and
sti
loop
inc
clc
scas
lock
xchg
inc
enter
ffreep
(bad)
lahf
cmp
xchg
lock
jecxz
sbb
ds
push
das
stc
loopne
inc
mov
pop
jg
ds
mov
shr
out
or
lahf
test
loopne
pop
cld
adc
in
adc
add
test
jle
(bad)
outs
mov
add
(bad)
icebp
rcr
out
mov
sahf
loope
lock
jl
jge
pop
in
xchg
dec
inc
std
leave
push
mov
aaa
in
(bad)
pop
mov
jg
(bad)
cmp
sub
cld
imul
movs
loopne
dec
(bad)
jmp
(bad)
jno
adc
mov
hlt
dec
ret
jmp
(bad)
mov
pop
lds
repnz
rol
xchg
push
cmps
stc
jl
repz
repz
mul
iret
aas
dec
mov
cmp
mov
iret
daa
mov
movd
dec
(bad)
pop
mov
lock
mov
repz
shr
cmp
mov
(bad)
sbb
mov
movs
xchg
fsubr
ror
in
das
cld
xabort
dec
lds
dec
dec
sti
std
sub
movs
mov
pop
cld
js
lock
loope
outs
jp
out
jecxz
ja
dec
inc
in
lahf
(bad)
cmp
cmp
clc
dec
xchg
fwait
in
imul
pushf
fdivr
xor
xchg
fwait
adc
(bad)
fprem
loopne
rol
fdivr
dec
cld
rcr
fwait
std
push
mov
jg
scas
cmp
loope
jnp
add
adc
clc
add
nop
call
jp
xchg
mov
pop
or
sti
pop
call
in
std
pop
jle
dec
dec
mov
std
in
cld
pop
jmp
dec
dec
(bad)
xchg
jg
ja
cli
in
cli
pop
mov
cmp
ja
cs
jg
out
mov
leave
(bad)
fist
repnz
cld
cs
stc
sub
out
jge
xchg
cld
cs
daa
jg
out
repnz
cs
jge
addr16
cs
xchg
mov
stc
in
clc
pop
idiv
stc
arpl
dec
dec
(bad)
int
jg
and
xor
out
je
(bad)
bswap
(bad)
loopne
das
cmp
jg
jle
pop
cld
ds
jno
add
add
pop
in
cmp
dec
push
lds
into
push
jle
into
pop
mov
sbb
aas
cs
jle
cld
clc
clc
loopne
ret
dec
add
sbb
xchg
push
pop
call
jle
sahf
pop
push
fild
pop
ret
(bad)
addr16
(bad)
cmp
mov
repz
les
lock
cmp
and
add
outs
jnp
out
pop
(bad)
add
ja
std
daa
(bad)
cmp
(bad)
mov
inc
scas
(bad)
ds
(bad)
mov
mov
lea
dec
(bad)
push
cmps
mov
stc
fucomip
xlat
nop
mov
fild
sbb
(bad)
cmp
aad
adc
mov
jmp
cli
cmps
jle
xor
jmp
call
out
jb
xchg
(bad)
cmp
lahf
xchg
nop
scas
aas
stc
das
sar
mov
clc
mov
jecxz
jg
in
push
xor
outs
cld
cmc
shld
jle
frstor
sti
jg
cli
and
aas
or
(bad)
mov
push
loopne
aas
pop
xor
lahf
xchg
and
enter
xacquire
push
dec
inc
enter
cmp
push
fidivr
ds
movs
std
add
test
pop
sbb
xor
outs
rcl
pop
inc
imul
pop
ret
daa
hlt
das
clc
ja
and
hlt
mov
sar
out
repnz
jae
std
scas
mov
dec
xor
cs
jns
mov
xchg
jmp
(bad)
scas
(bad)
idiv
in
jecxz
std
in
call
out
mov
cld
and
iret
std
pop
es
ficom
call
sbb
add
test
cmc
ror
push
cmp
push
mov
cmp
push
clc
in
ffreep
outs
sub
mov
mov
pop
(bad)
xor
mov
sti
jl
fild
sti
push
jo
mov
xchg
sub
cmp
dec
ret
stc
std
ds
inc
jg
lds
jmp
out
inc
ret
stc
sub
repnz
sub
cmps
(bad)
mov
jge
test
inc
cmp
das
sti
popf
ds
mov
pop
dec
mov
daa
jg
out
mov
leave
lahf
dec
and
xchg
jg
outs
push
jo
sbb
lock
or
jle
xchg
cmp
mov
shr
(bad)
outs
lds
outs
sti
mov
fist
dec
(bad)
and
adc
fsubrp
repnz
jl
outs
adc
call
loope
das
adc
and
test
outs
inc
or
fsub
jg
outs
sti
leave
(bad)
or
stc
sbb
dec
(bad)
fcmovu
in
aas
stc
sub
lds
ds
or
shl
jg
out
clc
leave
lahf
inc
adc
lahf
inc
dec
cmp
out
repnz
xchg
push
cli
ret
dec
in
ja
maxps
(bad)
fiadd
jg
or
popf
jle
fbld
add
(bad)
clc
mov
out
(bad)
sti
xlat
aas
std
(bad)
jmp
cli
cmp
jg
(bad)
jg
(bad)
(bad)
cmp
dec
call
jg
xlat
add
out
es
adc
(bad)
mov
fbld
addr16
pinsrw
daa
push
dec
iret
mov
inc
jg
ds
sti
popf
mov
mov
sbb
cmp
bnd
sti
iret
mov
std
das
jg
add
sar
pop
std
pop
mov
mov
imul
ins
aas
stc
pop
cmp
stc
leave
ffreep
or
pop
adc
dec
popa
(bad)
mov
sbb
inc
jg
bound
daa
mov
xchg
pop
push
sub
add
fwait
ror
sbb
outs
adc
in
mov
in
es
test
scas
adc
retf
add
lahf
cmps
jno
rol
pop
(bad)
cmp
test
jg
dec
(bad)
push
mov
jg
out
xor
and
or
push
out
lock
jg
fdivr
cmp
out
clc
leave
mov
pop
and
adc
outs
test
repnz
push
lahf
cld
mov
dec
jmp
mov
adc
xchg
jg
cmp
mov
sti
outs
cld
(bad)
imul
sbb
clc
call
out
repnz
int
repnz
shl
inc
(bad)
out
repnz
xor
loopne
jg
jl
jg
jmp
xchg
jg
std
xchg
es
jg
(bad)
std
aaa
and
inc
out
dec
repz
sar
dec
dec
dec
jge
das
std
jbe
je
jecxz
das
imul
cmp
ret
lock
rol
xor
aas
dec
adc
sub
rcr
outs
(bad)
mov
cld
addr16
out
inc
movs
(bad)
lods
ds
ja
jmp
stc
push
jle
jp
add
call
jns
arpl
mov
mov
gs
fucomip
xchg
jg
sbb
lahf
stc
add
ret
xor
pop
mov
(bad)
rcr
icebp
fstp
scas
dec
lahf
cld
dec
mov
outs
repz
aas
repz
dec
retf
jbe
das
mov
in
mul
sti
(bad)
jp
cmps
jg
cli
call
fbld
sti
pushf
rol
ins
push
fist
cli
cmc
add
mov
mov
hlt
icebp
outs
inc
xchg
lock
scas
out
or
mov
add
jle
leave
jg
cmp
loopne
addr16
fild
cmps
cmps
ss
ja
loope
jno
cld
fidivr
cli
into
adc
cmp
iret
push
cmc
mov
push
add
sbb
mov
xlat
dec
out
push
xchg
in
xchg
sar
pop
(bad)
aad
cld
pop
and
mov
stc
mov
jbe
fstp
lock
mov
mov
(bad)
out
scas
jnp
pop
sar
sbb
(bad)
sbb
jle
pop
jecxz
cld
or
psubd
(bad)
iret
fist
jmp
movs
lea
shl
adc
std
or
out
fistp
icebp
push
std
cld
aas
jmp
jg
mov
(bad)
in
sub
push
call
(bad)
jmp
mov
iret
aas
xchg
dec
jmp
or
out
das
mov
call
mul
adc
mov
hlt
repz
mov
std
ja
(bad)
push
aam
arpl
jns
lahf
call
cli
jg
(bad)
dec
jg
rol
ins
jmp
outs
sar
jg
jge
xlat
ror
jg
(bad)
xor
jnp
lahf
call
jge
aas
adc
push
hlt
idiv
hlt
std
mov
aam
(bad)
jbe
add
sub
mov
dec
movs
lahf
pop
hlt
neg
inc
ins
into
test
jg
aas
jg
loope
imul
dec
(bad)
(bad)
hlt
std
lahf
dec
lahf
call
std
std
ja
mov
mov
stc
out
inc
aas
mov
hlt
jmp
jbe
lahf
std
scas
hlt
repz
inc
(bad)
clc
mov
(bad)
in
jmp
jge
lahf
inc
sar
scas
hlt
idiv
jge
(bad)
hlt
repz
cmps
jmp
fnstcw
std
cld
jge
(bad)
cmp
(bad)
shr
jg
std
cld
and
jmp
idiv
or
in
mov
sbb
imul
fstp
fbld
stc
pop
shl
jmp
jge
iret
push
aas
jg
scas
dec
hlt
movs
mov
add
pop
shl
add
shl
dec
jecxz
out
jmp
aas
mov
sti
int
(bad)
jmp
sar
test
dec
call
mov
aas
inc
fucomip
sar
call
shl
dec
sar
call
cmps
iret
jle
cli
stc
fwait
ror
mov
lahf
jg
ins
dec
lock
(bad)
out
movs
idiv
outs
and
cmc
or
jmp
call
cli
cmps
push
fstp
call
hlt
sti
out
or
mov
sti
scas
mov
cmp
mov
out
call
scas
icebp
imul
add
fbld
sti
hlt
call
dec
mov
push
std
cld
out
repz
xchg
(bad)
dec
(bad)
(bad)
xor
sti
mov
hlt
(bad)
push
sbb
xchg
stc
pop
dec
lahf
std
or
(bad)
push
iret
dec
jg
std
cld
popf
jmp
call
pop
xchg
jle
xor
fwait
xchg
(bad)
inc
cli
in
(bad)
test
adc
(bad)
daa
adc
call
dec
hlt
fld
(bad)
fild
popf
rcr
jg
jge
das
jge
or
jno
clc
mov
in
(bad)
dec
push
pop
jg
pop
ret
gs
neg
out
sub
das
jmp
mov
(bad)
fcomip
xlat
jo
scas
mov
inc
sbb
and
test
push
and
inc
cli
call
imul
cli
pop
sub
mov
jo
or
enter
cli
aas
(bad)
int
test
(bad)
add
shl
call
inc
xor
icebp
cli
jae
push
mov
adc
inc
cmp
hlt
(bad)
jg
(bad)
call
sar
push
(bad)
jg
(bad)
jmp
(bad)
call
cmps
sti
or
std
push
(bad)
(bad)
out
hlt
(bad)
mov
(bad)
mov
popf
sub
dec
bt
push
(bad)
jmp
sar
dec
cli
(bad)
fild
jnp
(bad)
call
std
call
hlt
(bad)
jg
(bad)
call
cli
jmp
cmps
(bad)
call
call
xlat
cmps
jle
(bad)
mov
mov
jg
push
out
std
fisubr
repnz
jmp
push
jmp
pop
lods
in
mov
jmp
mov
pop
and
and
(bad)
cmp
les
pop
dec
jnp
and
cmpps
jp
(bad)
push
or
jb
fist
loope
sub
mov
sti
in
std
popf
sub
push
jg
adc
in
ds
or
mov
xor
ret
or
(bad)
push
cmp
push
mov
mov
inc
leave
cli
cmp
lods
iret
jg
(bad)
enter
stc
xlat
ret
pop
lock
mov
jmp
inc
cld
mov
(bad)
ins
cld
pop
icebp
jmp
clc
mov
lock
loope
outs
jnp
mul
inc
lds
in
mov
cld
jne
or
xchg
pop
cld
jae
jecxz
push
(bad)
xor
(bad)
pop
jecxz
sub
rcl
pop
mov
mov
imul
jmp
jl
sti
repnz
mov
pop
mov
std
jno
test
jbe
adc
mov
jle
sbb
idiv
icebp
add
loopne
mov
pop
(bad)
cmp
(bad)
cmp
call
(bad)
sbb
std
das
jecxz
dec
mov
fild
(bad)
daa
paddd
lock
loopne
jg
mov
icebp
dec
push
pop
push
stos
(bad)
jg
jle
jmp
icebp
cmp
xor
inc
loope
(bad)
loopne
(bad)
(bad)
aas
lock
clc
cld
das
vmovntps
push
or
loop
fistp
mov
sub
mul
mov
or
sbb
jg
add
sbb
push
ds
(bad)
lock
rcr
cld
out
loopne
mov
ds
lods
scas
cld
out
shl
adc
clc
in
mov
bound
loop
loopne
(bad)
(bad)
repz
(bad)
cmps
clc
xchg
push
pop
dec
cld
xchg
inc
pop
(bad)
mov
(bad)
push
jl
xchg
loopne
mov
jg
jle
scas
mov
clc
fcmovne
jmp
dec
leave
scas
aas
test
fisub
pop
jbe
adc
xchg
call
cld
jecxz
imul
cld
sbb
xchg
cld
ret
sub
sbb
aam
pop
and
mov
out
call
cli
(bad)
cmp
call
dec
(bad)
jmp
call
inc
(bad)
dec
call
jmp
(bad)
call
add
inc
push
xor
call
(bad)
call
std
pop
imul
cmps
jmp
push
dec
in
sub
arpl
stc
imul
pop
mov
stos
add
lahf
push
mov
(bad)
sbb
outs
sub
stc
lahf
(bad)
cs
push
ds
mov
mov
dec
push
cld
repz
xchg
aam
inc
cmp
inc
retf
ror
(bad)
mov
cmc
sar
mov
stc
or
dec
std
jae
dec
cmc
dec
jecxz
enter
dec
jge
repnz
push
outs
jmp
jns
ds
repnz
(bad)
jl
adc
gs
daa
icebp
rcl
xchg
clc
push
retf
xchg
ret
movs
lock
in
loopne
mov
jl
aad
out
sbb
pop
cld
jbe
cld
aas
ret
or
fdivr
clc
cmc
icebp
jecxz
push
cld
sbb
cld
outs
(bad)
sub
shld
mov
(bad)
xor
int
xchg
aad
lds
leave
cs
mov
adc
ds
inc
xchg
jmp
sbb
xchg
and
jl
push
xchg
adc
gs
add
and
call
mov
gs
push
outs
jmp
clc
jno
loopne
icebp
jecxz
push
cs
pop
jle
std
icebp
fisttp
out
mov
cmps
and
mov
jo
leave
jg
test
movd
mov
mov
adc
(bad)
(bad)
lahf
cld
xor
call
adc
std
and
outs
inc
mov
pop
push
jp
mov
hlt
aam
dec
dec
jge
rcl
jle
xchg
push
sub
das
mov
loope
lahf
inc
shl
cmps
push
jle
dec
cli
popf
sub
cmp
mov
dec
mov
addr16
ins
cmp
dec
and
sti
push
jle
loop
add
jmp
and
clc
loopne
nop
dec
ror
cmp
jl
aas
ficomp
cmp
pop
cld
dec
clc
icebp
fld
push
clc
dec
icebp
(bad)
outs
jns
sbb
and
call
call
call
sub
out
lahf
pop
mov
xchg
lock
das
cmp
addr16
xchg
ja
or
inc
jg
div
aas
cmc
mov
std
sbb
sbb
popa
stos
clc
pop
hlt
call
aad
adc
mov
cmc
lds
std
rcr
rol
jg
std
pop
jp
push
add
jb
mov
lahf
inc
push
movs
lock
and
into
dec
push
pop
jl
lahf
repnz
mov
loope
test
gs
dec
jmp
lahf
stc
ins
sub
mov
mov
mov
jg
out
jb
test
(bad)
dec
cs
xchg
pop
clc
stos
jns
sti
xchg
mov
jecxz
movs
and
lahf
dec
or
cmps
repnz
stc
into
sub
test
mov
cmp
cmp
nop
(bad)
sub
div
lds
mov
xchg
aas
inc
jmp
hlt
(bad)
daa
lahf
cld
iret
mov
dec
cmp
call
jl
call
or
(bad)
in
(bad)
and
xchg
movs
xor
push
imul
test
fbld
or
mov
inc
imul
and
fist
das
cmps
sbb
pop
dec
sar
lahf
dec
rcr
popf
mov
jg
jns
jg
cmp
jg
jns
jg
out
repnz
sar
outs
inc
xor
pop
xchg
or
xchg
or
outs
and
mov
outs
dec
imul
inc
xchg
pop
dec
sub
stc
fist
hlt
mov
dec
std
mov
fs
leave
shr
xor
sbb
cld
push
and
mov
dec
xor
mov
mov
stc
out
cli
leave
lahf
cld
cmp
sub
outs
sti
leave
pop
inc
stc
sar
inc
cmp
pop
cld
inc
mov
call
sub
icebp
lahf
jg
std
jmp
cdq
test
lods
leave
outs
imul
or
shr
cdq
into
call
fbld
inc
fscale
lahf
and
xchg
inc
cmp
repz
xchg
je
mov
gs
out
pop
mov
jmp
fwait
lock
jecxz
mov
(bad)
not
xchg
pushf
mov
adc
and
pop
rcl
cmps
lahf
cld
idiv
outs
dec
cld
test
dec
stc
jecxz
lds
cld
lea
cmps
xchg
movs
cld
(bad)
add
dec
add
loope
movs
dec
clc
int
adc
dec
ret
mov
and
pop
movs
mov
xchg
and
cwde
sar
push
sub
fist
aas
clc
mov
pop
cld
(bad)
idiv
dec
dec
int
sbb
xor
leave
xlat
fisttp
daa
(bad)
fsubr
hlt
leave
aas
std
cmp
dec
cld
ss
cld
mov
outs
clc
mov
pop
lahf
sar
popf
iret
jle
call
int
sbb
cmp
fbld
dec
jmp
jmp
cwde
arpl
neg
ret
movs
loope
idiv
jg
leave
mov
cld
out
xor
jle
pop
jp
ja
inc
inc
leave
fisttp
or
and
mov
dec
sbb
call
mov
cmc
daa
inc
das
and
fwait
adc
ja
sar
sbb
(bad)
adc
mov
in
mov
loope
fucomip
xchg
dec
call
aas
cli
in
or
outs
dec
mov
cmp
jg
das
dec
popf
mov
retf
pop
repnz
(bad)
cli
ja
in
clc
in
ds
dec
imul
(bad)
sbb
and
mov
sbb
cmp
mov
movd
std
pop
jle
aas
stc
dec
(bad)
sti
add
push
cli
repz
stc
jne
fucomp
ja
and
cs
je
and
retf
add
jl
sub
sbb
mov
div
outs
inc
inc
std
lea
add
test
and
in
(bad)
in
xchg
fistp
fist
popa
jle
ficom
mov
in
xlat
loope
mov
lods
xor
imul
dec
popf
pop
sti
xlat
clc
repnz
cmp
pop
jmp
push
or
lock
inc
dec
hlt
mov
leave
pop
and
pop
shl
cli
in
lahf
dec
dec
rcl
iret
std
fist
inc
nop
arpl
movs
hlt
(bad)
aas
xchg
ds
aaa
jg
leave
sbb
mov
inc
mov
xchg
push
cli
xchg
idiv
(bad)
mov
jmp
sti
ja
mov
xor
out
hlt
sti
sub
jg
std
(bad)
cmp
iret
fild
jg
fild
ss
repz
std
pop
ror
fistp
idiv
and
in
das
cld
or
arpl
repz
movs
iret
pop
ror
mov
jge
jnp
jnp
cs
std
mov
iret
pop
dec
lahf
std
jbe
sti
jg
lahf
mov
out
(bad)
icebp
hlt
(bad)
aas
cmp
jnp
fistp
mov
cmps
jg
leave
mov
hlt
fldcw
(bad)
dec
call
fwait
dec
outs
jmp
ds
std
mul
call
std
dec
(bad)
sahf
hlt
fnsave
lahf
call
hlt
repz
cmps
lahf
sub
ror
dec
xchg
cmp
xchg
hlt
sti
mov
mov
push
mov
jmp
shl
jg
sar
jle
leave
cmp
dec
outs
push
(bad)
dec
leave
arpl
cmp
mov
hlt
stc
scas
movs
fistp
pop
xchg
push
sbb
not
jle
in
push
cli
sti
pop
std
es
mov
jg
(bad)
cdq
hlt
std
arpl
stc
cwde
ds
jle
leave
push
(bad)
adc
neg
lahf
(bad)
mov
dec
outs
inc
aas
inc
fld
mov
(bad)
xchg
jg
leave
jg
cli
hlt
(bad)
fistp
sti
pop
cli
(bad)
mov
cli
dec
std
lea
xchg
inc
xchg
(bad)
dec
jp
das
mov
cs
rcr
fist
dec
arpl
aas
call
div
int3
adc
sbb
lahf
das
jmp
pop
cld
push
add
iret
lahf
dec
jg
dec
ins
jle
cli
(bad)
fisttp
popf
shl
push
mov
mov
dec
push
jae
fwait
dec
sahf
in
fisttp
mov
mov
outs
and
or
outs
rcr
enter
mov
inc
xchg
sbb
scas
jmp
(bad)
movs
hlt
mul
(bad)
mov
std
jmp
sbb
out
inc
in
jle
jp
das
std
lea
cli
jnp
es
xchg
ret
jg
leave
daa
ds
xor
mov
cmp
xchg
mov
mov
jmp
ins
jno
or
adc
dec
iret
jmp
jg
mov
mov
imul
cwde
(bad)
(bad)
jnp
(bad)
aas
cmps
(bad)
mov
xor
scas
and
mov
or
(bad)
hlt
jmp
call
cli
imul
push
cli
loope
aas
dec
(bad)
call
std
pop
cwde
std
ja
(bad)
call
sahf
cld
cmc
jmp
push
xor
cli
jmp
dec
jmp
pop
sar
jg
cli
(bad)
cmp
jg
inc
repnz
pop
dec
inc
(bad)
rcr
(bad)
jg
std
jmp
hlt
(bad)
mov
sar
push
cli
(bad)
aas
dec
(bad)
call
jmp
(bad)
mov
hlt
call
(bad)
push
hlt
(bad)
fild
(bad)
jg
(bad)
jmp
inc
call
out
sar
das
call
call
xchg
(bad)
inc
sar
jmp
lahf
dec
(bad)
dec
(bad)
jg
scas
and
(bad)
dec
call
aas
sti
xlat
jg
leave
lahf
std
pop
hlt
(bad)
dec
sub
mov
or
jmp
(bad)
push
call
pop
jecxz
std
call
(bad)
mov
hlt
jmp
std
jmp
and
fstp
imul
cmp
or
pushf
call
cli
pop
leave
repnz
mov
dec
xchg
jmp
cld
mov
(bad)
fwait
clc
call
jl
(bad)
fild
ds
inc
sahf
hlt
ffreep
xor
cmp
sbb
je
inc
dec
out
in
in
xchg
sar
jge
cmp
dec
(bad)
push
cmp
call
xor
cdq
loope
loope
div
stc
fisttp
loope
cmp
fiadd
cmps
clc
cld
iret
ret
out
clc
in
aas
lds
jge
movs
cmp
sbb
loopne
lds
mov
sbb
out
(bad)
outs
mov
lock
adc
(bad)
sub
loopne
(bad)
outs
jg
jle
ror
push
iret
das
cmp
aaa
lock
(bad)
cmp
sbb
iret
mov
das
ds
js
lock
jecxz
aas
pop
lahf
jmp
clc
repz
test
mov
or
cmp
xor
jbe
add
clc
ins
push
sbb
loope
add
cmp
cwde
loopne
aas
sbb
cld
fdivrp
pop
xchg
xor
pushf
xor
(bad)
dec
mov
movs
cmp
ret
je
add
je
ffree
outs
jg
jle
jno
push
cmp
ror
push
icebp
cmp
int
and
mul
loop
and
cmp
cmp
das
nop
push
cli
ins
paddd
clc
cdq
cmp
inc
paddd
mov
(bad)
shr
pop
ret
push
jle
cmp
fstp
(bad)
cmp
ds
retf
icebp
rcr
paddd
ja
cmps
loope
(bad)
sbb
mov
dec
cld
enter
cld
mov
out
pop
cld
and
jl
out
loopne
ror
push
pop
scas
lock
xchg
movs
(bad)
mov
call
fiadd
xchg
pop
mov
clc
loopne
ret
movd
sub
outs
mov
jmp
and
sti
mov
lock
jecxz
xchg
mov
push
(bad)
imul
mov
hlt
fld
lock
jecxz
lods
cmp
call
clc
clc
lahf
ret
leave
sar
paddd
lock
mov
adc
std
cmc
clc
jmp
pop
cld
test
icebp
fistp
cld
pop
clc
icebp
sti
sbb
ins
mov
clc
sub
jg
(bad)
stos
push
dec
adc
(bad)
icebp
jmp
gs
imul
sub
std
pop
and
mov
cmps
call
scas
jg
mov
icebp
daa
sar
xor
push
mov
adc
jecxz
cli
xor
hlt
(bad)
jg
xlat
adc
jmp
mov
nop
(bad)
call
call
cmp
int3
jle
xlat
xchg
pushf
fstp
jg
(bad)
mov
hlt
(bad)
aas
sahf
(bad)
jmp
(bad)
jg
lahf
cmps
and
movsx
sbb
adc
hlt
dec
cld
sbb
adc
mov
adc
xchg
jmp
adc
mov
adc
jle
mov
mov
or
cli
dec
sub
push
gs
xor
or
(bad)
jp
cli
(bad)
std
add
pop
cs
pop
or
lock
jecxz
dec
xchg
ror
mov
(bad)
mov
je
inc
pop
das
icebp
jecxz
cmp
ret
(bad)
(bad)
loopne
jle
lods
sub
mov
push
(bad)
adc
mov
mov
pop
daa
pop
mov
mov
lock
lock
mov
(bad)
fucomip
loopne
(bad)
(bad)
out
push
cld
daa
nop
aam
sbb
pop
clc
loopne
push
(bad)
gs
inc
jecxz
jg
pop
cld
mov
clc
xchg
icebp
add
aaa
loop
cmp
retf
cmp
sbb
popf
jno
mov
jl
xor
(bad)
pop
icebp
cmc
pop
mov
dec
cld
mov
outs
inc
jle
inc
fst
dec
xchg
sub
cmp
xchg
aas
inc
adc
outs
inc
adc
adc
outs
dec
adc
test
sar
daa
dec
das
mov
xor
adc
inc
dec
aas
sti
in
movs
and
leave
fisttp
out
fisttp
cmp
es
movs
js
das
movs
lahf
jg
add
sbb
dec
retf
test
adc
mov
fsubr
clc
leave
pop
std
fist
repz
movs
xor
dec
arpl
jbe
cmp
sbb
inc
pop
push
cld
clc
mov
adc
(bad)
xor
cwde
(bad)
(bad)
stc
sub
cmps
repnz
cmps
jb
imul
cld
xor
data16
mov
clc
xor
clc
xor
movsx
fwait
pop
push
sahf
mov
call
aas
mov
mov
sub
dec
shl
xor
xchg
(bad)
jl
imul
pushf
(bad)
cmp
jmp
push
push
leave
xchg
mov
out
out
sar
pop
sar
(bad)
cmps
(bad)
aas
push
xlat
nop
sub
out
dec
call
push
call
mov
pop
mov
inc
(bad)
es
(bad)
out
mov
(bad)
xchg
sub
pop
jg
xchg
ret
aas
(bad)
fist
loope
(bad)
in
ja
in
out
pop
call
sbb
pop
jns
jecxz
jg
push
mov
stc
xchg
loopne
mov
adc
jg
and
mov
xchg
xor
jg
movs
int
inc
loop
aas
xchg
mov
jg
das
iret
jl
daa
dec
dec
sti
(bad)
cmps
hlt
(bad)
pop
or
push
adc
ds
(bad)
jno
addr16
cmp
cmp
test
cmp
mov
mov
or
mov
inc
in
stc
pop
(bad)
iret
fisttp
idiv
call
sahf
mov
push
ret
dec
cwde
cld
add
mov
inc
(bad)
jg
mov
jg
out
repnz
adc
mov
cmp
out
dec
jns
(bad)
xchg
mov
push
(bad)
or
fild
jg
and
repz
mov
pop
sti
and
outs
outs
cli
mov
sbb
mov
fsub
int3
(bad)
(bad)
push
data16
retf
outs
xchg
ins
stc
int
fptan
cmp
iret
shr
call
outs
dec
sbb
arpl
fsubr
push
(bad)
out
pop
movs
mov
or
out
aas
movs
out
out
jle
xchg
cld
dec
inc
mov
dec
(bad)
(bad)
loope
aas
jmp
and
imul
mov
mov
int
cmp
sbb
cs
inc
dec
lods
fistp
repz
pusha
or
std
out
mov
pop
inc
jb
(bad)
stos
pushf
std
sbb
push
mov
mov
call
in
jg
adc
jg
fstp
nop
jae
mov
pop
xchg
mov
aas
repz
adc
fs
and
scas
ret
mov
cmp
dec
imul
sbb
fucomp
inc
jae
sbb
fdivr
jae
rcr
mov
fsubr
ja
cmp
(bad)
mov
scas
and
mov
movs
or
sbb
mov
(bad)
data16
fbld
in
repz
xchg
mov
xchg
call
repnz
xchg
and
(bad)
sub
(bad)
ds
or
sti
std
(bad)
xlat
mov
xchg
inc
mov
int3
or
mov
les
in
out
inc
push
jle
dec
(bad)
mov
sahf
cmps
icebp
ja
in
push
sbb
or
mov
inc
sti
int
(bad)
adc
cld
jg
pop
cld
adc
cmps
out
cli
xor
jmp
clc
jnp
int
jmp
out
pop
jecxz
nop
test
mov
outs
or
push
ret
and
jg
xlat
leave
lahf
mov
jnp
cmp
in
daa
inc
fcmovu
xchg
dec
sti
rol
and
outs
adc
cmc
pop
loopne
fild
or
retf
xchg
and
push
shl
ja
and
out
mov
fnstcw
clc
ja
push
jle
jmp
popf
or
icebp
pop
inc
or
dec
dec
(bad)
xchg
fcomip
xchg
push
ja
in
sti
popf
enter
daa
(bad)
cli
das
clc
in
stc
sbb
mov
jl
mov
dec
pusha
cmc
mov
scas
repz
xchg
das
sti
dec
jmp
jg
dec
jle
out
loopne
inc
jg
pop
jle
loopne
inc
sbb
mov
mov
clc
int
stc
scas
jle
dec
cmps
sti
hlt
sbb
inc
push
cli
ins
clc
(bad)
xchg
(bad)
lock
je
cli
aad
ffree
xor
adc
push
les
std
and
push
jge
(bad)
fbld
imul
std
fcmove
lods
std
cmp
or
jmp
jle
or
cld
jne
lea
hlt
xlat
and
nop
jle
psubsw
out
fnstsw
dec
lahf
dec
call
cli
out
das
mov
scas
mov
sti
out
inc
(bad)
cmc
hlt
sti
pop
dec
aas
jmp
sti
(bad)
lahf
scas
jmp
mov
lahf
inc
jg
dec
mov
dec
aas
call
stc
sti
shl
pop
std
ins
call
test
(bad)
jg
(bad)
sbb
lahf
jg
jge
xchg
ja
push
std
std
pop
ror
out
sar
push
pop
dec
(bad)
push
(bad)
jg
jge
cmps
ror
repz
push
je
pop
inc
ins
dec
hlt
inc
(bad)
mov
cli
cld
mov
sti
xlat
call
and
xchg
jle
rcr
mov
jecxz
retf
jmp
pop
shl
outs
call
std
hlt
idiv
dec
lahf
(bad)
in
hlt
dec
jmp
aas
inc
lahf
std
aad
sti
pop
imul
(bad)
jmp
pop
sar
call
jge
ror
lahf
mov
stc
dec
rcr
jg
std
(bad)
fwait
adc
cli
std
jg
(bad)
cmp
call
jg
or
add
popf
sar
jmp
nop
jle
call
std
pop
hlt
sti
lahf
dec
mov
dec
jg
xchg
jle
pop
jmp
aas
stc
cmc
test
call
sbb
outs
stc
jmp
cld
inc
jb
jle
cli
stc
or
das
test
pop
retf
shr
(bad)
jg
jno
push
cld
sbb
xor
push
mov
dec
(bad)
(bad)
mov
call
sbb
ret
cmp
out
xchg
and
ds
loopne
nop
aad
call
jmp
ret
xor
stos
jle
clc
mov
pop
pop
mov
(bad)
mov
hlt
call
(bad)
(bad)
aas
call
imul
dec
into
out
mov
call
imul
sub
cmp
and
(bad)
jg
pop
sahf
jl
(bad)
push
movs
xchg
jle
push
dec
mov
xor
xchg
fldenv
mov
inc
into
out
dec
into
out
xchg
jg
repnz
das
imul
outs
and
loopne
and
sti
mov
clc
fcmovnbe
call
cmp
dec
xor
jg
sub
aas
in
ja
or
test
and
ds
lock
cmp
sub
clc
cmp
jb
ja
aaa
inc
out
(bad)
adc
pop
(bad)
jecxz
jecxz
je
fsub
in
and
cwde
sbb
cli
loopne
ret
js
sbb
(bad)
dec
push
cld
jp
cli
dec
mov
mov
sbb
clc
cmp
js
lock
ror
in
dec
jle
(bad)
ja
inc
mov
gs
jmp
scas
ss
hlt
fld
lahf
cmps
hlt
(bad)
fucomip
xlat
adc
repz
fadd
clc
popf
adc
push
mov
mov
icebp
sub
sub
xchg
pushf
fild
cmp
stc
pop
sahf
xchg
popf
jg
jbe
sub
stc
xor
stc
fisttp
pop
xchg
(bad)
test
jbe
dec
cli
sbb
add
outs
dec
add
dec
jl
addr16
push
cmps
nop
pop
mul
nop
iret
test
or
jg
in
stc
adc
in
inc
pop
std
aaa
fs
dec
mov
dec
out
dec
fdiv
and
stc
in
mov
push
loop
dec
mov
and
jle
dec
inc
(bad)
xchg
mov
in
mov
out
ja
in
(bad)
ins
aas
stc
sbb
loop
fistp
out
jns
into
fldcw
mov
int3
pop
inc
fdiv
or
(bad)
leave
add
jns
int
not
fcos
outs
cmp
arpl
jg
pop
inc
add
out
es
pop
jle
enter
pop
lahf
cld
or
xchg
dec
inc
xchg
add
cmps
dec
and
sbb
outs
dec
inc
cli
std
push
aas
dec
inc
cli
push
or
sub
push
hlt
imul
inc
scas
(bad)
push
inc
(bad)
fild
pop
cld
neg
jns
aas
dec
es
aaa
and
call
xchg
cmps
mov
sahf
shl
outs
ins
inc
lock
or
mov
mov
sbb
fild
inc
clc
lea
das
stc
in
(bad)
ins
push
(bad)
adc
test
mov
mov
hlt
push
jne
mov
pop
sar
jg
cli
(bad)
out
cld
imul
mov
cld
mov
and
test
in
mov
push
les
adc
adc
xchg
xor
sbb
call
add
test
shr
jle
and
mov
inc
mov
shl
repnz
cld
sub
xor
out
ja
cwde
mov
sub
cli
sbb
mov
jno
sbb
xor
sub
out
and
aas
jns
mov
mov
mov
jle
dec
out
repz
mov
shl
(bad)
call
lea
daa
les
sti
jmp
dec
mov
mov
lock
(bad)
out
ja
jle
pop
mov
dec
fucomip
aas
sti
xchg
push
movs
call
xchg
jg
ds
mov
xchg
aaa
mov
sub
add
sub
cld
cmp
repnz
cld
out
retf
ja
retf
fnstsw
aaa
dec
call
mov
mov
(bad)
ds
jmp
cli
in
lahf
movs
fist
hlt
sti
lahf
dec
aas
jmp
sti
pop
movs
lahf
inc
std
std
mov
inc
xlat
clc
fwait
jmp
inc
xchg
out
aas
call
dec
aas
jmp
cli
(bad)
ds
cmps
(bad)
call
(bad)
(bad)
fstp
imul
jg
jne
idiv
out
jg
jge
(bad)
sar
jg
jle
and
xor
(bad)
nop
dec
jmp
(bad)
das
mov
mov
shl
jmp
(bad)
aas
imul
mov
sub
cmp
fld
mul
sti
mov
scas
sub
out
out
mov
out
jg
mov
jg
std
(bad)
jmp
out
dec
pop
pop
mov
dec
cmp
cwde
(bad)
(bad)
aad
mov
hlt
repz
cmps
(bad)
aas
movs
call
hlt
jns
(bad)
aas
cmps
fistp
cli
(bad)
jg
fistp
jle
cmp
repz
mov
mov
stc
dec
ror
aas
xchg
(bad)
cmps
cwde
not
sti
pop
push
cld
xchg
mov
idiv
push
adc
push
cli
call
lahf
(bad)
jg
imul
std
push
cli
adc
(bad)
inc
aas
inc
mov
cmps
std
sbb
or
jmp
jecxz
(bad)
jg
(bad)
jmp
lock
es
lahf
adc
aas
and
mov
adc
sbb
and
ins
ret
das
and
lock
nop
pop
stc
fisub
dec
out
clc
leave
aas
dec
jmp
iret
fisttp
std
outs
and
or
pop
push
dec
jg
xor
std
test
pop
repnz
dec
mov
adc
daa
sub
movs
clc
std
idiv
clc
sbb
(bad)
icebp
jmp
mov
add
mov
sbb
jo
adc
mov
cld
out
lahf
mov
idiv
inc
test
jle
push
(bad)
and
cld
cs
sub
mov
outs
fcom
(bad)
xor
or
add
pop
jle
jmp
cmps
out
xchg
repnz
in
inc
retf
push
jle
adc
mov
adc
mov
fwait
lods
lds
(bad)
and
in
std
popf
sub
push
push
jo
jle
ja
xor
fld
jbe
fwait
enter
mov
inc
dec
cmp
jmp
(bad)
pop
pop
neg
lock
(bad)
stc
ja
loopne
sub
out
adc
cli
fwait
adc
(bad)
pop
int3
cld
fist
stc
cmps
jle
dec
jge
sbb
int3
mov
adc
cmps
lahf
cld
int
int
jg
outs
dec
xor
fcmovnbe
int3
jge
leave
pop
cli
cmp
inc
mov
cmp
pop
dec
ror
addr16
push
mov
sar
mov
(bad)
jecxz
lea
lds
loop
mov
std
data16
cld
pop
mov
push
cld
cmp
call
mov
icebp
jecxz
cmc
leave
jg
cmp
cld
into
inc
mov
xchg
dec
test
push
aas
dec
scas
cld
xchg
hlt
retf
scas
cld
out
hlt
retf
and
or
call
sar
aaa
inc
retf
jp
dec
test
jg
or
mov
nop
pop
sti
int
stc
push
jg
daa
call
outs
inc
out
mov
in
(bad)
sbb
call
add
jp
inc
mov
inc
int
sub
xchg
and
aaa
es
pop
xchg
cwde
jnp
cli
mov
hlt
std
mul
adc
mov
aam
ja
push
mov
test
out
dec
jbe
aaa
repnz
mov
inc
outs
sub
cld
ja
jnp
sbb
sahf
call
fsubr
mov
mov
mov
not
leave
jle
fbstp
mov
pop
mov
out
daa
mov
(bad)
jns
std
sub
dec
pop
cld
jge
rol
sbb
jb
(bad)
cmp
stc
repz
(bad)
push
or
icebp
mov
cmps
(bad)
jg
pop
cmp
daa
dec
pop
cmps
jmp
shl
pop
sti
int
in
hlt
in
xlat
adc
std
mov
pop
push
push
adc
cmp
cli
sbb
std
fdivp
stc
push
cli
std
ds
dec
cli
mov
mov
(bad)
popa
ds
hlt
repz
push
mov
jo
cs
push
mov
jmp
jle
xchg
fdivrp
dec
aas
jg
cli
jmp
imul
jmp
sbb
adc
dec
cmp
out
scas
sub
lahf
in
std
pop
bound
xchg
mov
(bad)
fisttp
fisttp
imul
cli
(bad)
aas
inc
mov
mov
lahf
jg
std
cld
dec
jmp
push
idiv
in
xlat
push
leave
stc
xchg
call
adc
pmaddwd
jg
jle
test
and
push
fcom
xlat
call
iret
fcomip
(bad)
push
(bad)
popa
pop
fwait
pop
call
neg
cld
sbb
cmp
(bad)
out
inc
call
push
hlt
inc
call
mov
popa
hlt
(bad)
aas
out
nop
movs
stos
aas
jmp
nop
and
out
inc
call
push
adc
mov
(bad)
pop
(bad)
icebp
mov
jno
or
mov
stc
mov
sbb
std
scas
nop
out
pop
dec
jp
sbb
jg
xor
aas
inc
mov
mov
and
mov
into
cli
sbb
fs
out
jge
push
cld
mov
inc
jle
xor
xchg
test
sub
cli
mov
sub
sub
ret
(bad)
(bad)
loopne
mov
mov
pop
loope
out
jno
loopne
inc
add
jle
sub
cmovae
pop
sti
sub
aaa
push
mov
repz
not
ds
mov
lock
push
loopne
cmp
jmp
es
cmp
dec
fsub
dec
mov
(bad)
mov
inc
push
stos
mov
test
xlat
push
sar
mov
out
dec
sbb
aaa
and
jg
xor
mov
mov
fwait
adc
add
mov
call
(bad)
sub
inc
mov
lock
movs
(bad)
xchg
jg
mov
jo
pop
adc
ins
dec
mov
in
xor
xchg
add
mov
mov
aam
fsub
(bad)
hlt
inc
jecxz
call
aas
mov
dec
jl
pop
sbb
stc
lahf
jg
shl
cmp
fcmovu
cli
xchg
jmp
ja
adc
sub
pop
inc
rcr
loope
(bad)
stc
ja
mov
dec
outs
and
retf
inc
movs
mov
mov
mov
in
mov
out
outs
clc
leave
jg
leave
iret
pop
lock
mov
stos
and
mov
cld
(bad)
out
lock
cli
cmps
mov
cs
push
stos
aas
push
lock
adc
pop
daa
adc
mov
out
jle
cli
out
ja
out
jle
dec
(bad)
repz
mov
xor
sub
(bad)
and
mov
outs
pop
shr
(bad)
test
std
daa
call
out
dec
mov
mov
scas
es
mov
xchg
ret
jmp
xlat
in
popa
std
imul
mov
outs
jg
leave
dec
popa
push
push
jle
leave
pop
xchg
hlt
rep
movs
out
call
cli
call
iret
fdivrp
mov
mov
scas
sub
ret
(bad)
mov
mov
jg
xor
scas
daa
dec
clc
pop
dec
ins
(bad)
xor
jmp
mov
mov
sar
jno
jg
xlat
xchg
mov
sti
jg
xlat
xchg
(bad)
scas
cld
jne
mov
push
std
(bad)
jnp
(bad)
das
cli
jne
jecxz
cmp
out
scas
and
add
std
xlat
mov
or
std
call
cmps
(bad)
ins
cli
(bad)
cmp
stc
pop
sti
jmp
mov
scas
std
jne
or
pop
inc
bnd
add
scas
ror
mov
hlt
repz
push
and
sti
(bad)
mov
out
mov
mov
in
das
imul
je
(bad)
mov
mov
cmps
stc
sti
sar
pop
hlt
sti
das
cmps
jle
cmp
mov
jmp
fwait
sub
cld
scas
jg
leave
dec
(bad)
popf
hlt
(bad)
aas
xchg
(bad)
cmp
aaa
shl
jmp
std
cld
and
(bad)
dec
scas
and
call
pop
shl
mov
jg
mov
data16
push
inc
jno
sbb
in
cmp
jo
gs
pop
ret
vzeroupper
call
pop
cli
(bad)
jge
aas
fdivrp
in
xlat
nop
push
(bad)
rcr
push
xchg
std
jmp
out
sar
xor
jg
imul
sub
dec
(bad)
(bad)
fnstcw
cmp
xlat
sar
call
(bad)
fild
inc
std
call
(bad)
(bad)
jmp
(bad)
jg
(bad)
call
cli
(bad)
dec
fucomip
inc
sar
sbb
(bad)
jg
cli
aas
adc
mov
(bad)
jg
(bad)
jmp
std
push
and
jge
call
cwde
popf
xchg
cwde
std
(bad)
movs
lds
lds
bound
imul
xchg
pop
mul
xchg
jg
ret
pushf
rol
mov
aaa
or
in
daa
push
(bad)
stos
leave
pop
cld
in
xor
(bad)
(bad)
stc
xchg
cmps
cli
mov
or
ror
xchg
xchg
dec
or
icebp
xchg
fwait
cli
mov
mov
mov
clc
inc
sub
sub
jg
scas
pop
inc
mov
icebp
cmp
jmp
mul
adc
xchg
pop
sti
clc
jno
mov
pop
(bad)
push
jle
jle
mov
mov
clc
in
lock
push
jle
cld
clc
mov
add
jle
shr
cmovl
sub
jecxz
pop
inc
jle
out
pop
jmp
xor
mov
(bad)
out
jo
scas
loop
out
js
iret
loope
outs
jg
(bad)
and
sbb
mov
sbb
push
(bad)
cli
outs
cld
push
xchg
jp
test
pop
arpl
stc
hlt
xlat
call
hlt
(bad)
fist
jmp
(bad)
cmp
mov
stc
mov
ja
or
ds
xor
fbld
cmp
call
fidivr
xor
aas
dec
inc
imul
out
call
and
jnp
mov
and
call
xchg
mov
clc
fist
xor
cdq
(bad)
(bad)
xchg
aas
jecxz
mov
mov
(bad)
sti
aas
cmp
test
aas
xchg
stos
(bad)
outs
mov
dec
test
add
rep
push
call
imul
lahf
and
xchg
aam
out
dec
mov
push
mov
(bad)
in
cli
popf
mov
(bad)
dec
(bad)
jmp
jnp
cld
add
mov
jecxz
jg
outs
dec
inc
out
inc
mov
lods
inc
ins
jno
jg
jnp
out
push
mov
xor
outs
or
mov
cmps
aam
clc
dec
dec
sub
dec
sub
dec
sub
xchg
pop
cld
pop
and
fbld
loop
adc
xchg
loopne
dec
(bad)
sti
inc
(bad)
fisttp
or
mov
dec
hlt
(bad)
ja
add
dec
mov
jmp
int
mov
dec
xor
daa
or
aas
cli
mov
jg
and
es
cld
dec
hlt
idiv
fs
scas
dec
(bad)
(bad)
mov
mov
dec
out
fistp
fcomip
xchg
jg
mov
in
clc
popf
jmp
dec
aas
stc
inc
test
mov
sbb
fild
loopne
jl
int
(bad)
push
mov
push
dec
xchg
add
int
add
ins
mov
push
mov
sbb
dec
sar
jle
loope
and
jle
dec
jle
outs
inc
clc
push
adc
aad
inc
mov
sub
xchg
jg
mov
sahf
sti
sbb
call
mov
dec
in
ret
outs
dec
mov
fcomip
xchg
jg
ja
clc
(bad)
sar
fwait
lods
inc
es
jg
dec
(bad)
mov
fist
out
cwde
cld
imul
xchg
lahf
aam
loope
pop
jae
dec
lahf
pop
mov
fstp
stc
leave
daa
mov
and
call
das
jo
jle
dec
(bad)
popf
stc
in
std
retf
push
cli
cli
outs
jle
sar
pop
mov
leave
adc
dec
jmp
mov
clc
pop
mul
mov
pop
mov
sub
mov
inc
mov
adc
jg
std
call
mov
mov
addr16
stc
aas
clc
imul
in
icebp
imul
scas
mov
(bad)
cmp
call
hlt
idiv
cli
stc
aas
sar
pop
adc
pop
shr
aas
inc
xor
mov
dec
add
cli
in
mov
cmp
jne
sbb
pop
jle
leave
push
and
in
sub
and
cli
sti
call
and
(bad)
jp
(bad)
scas
mov
pop
sbb
das
sti
mov
jge
push
lock
mov
inc
fsub
jmp
bound
jg
or
add
in
lahf
cli
xor
shr
(bad)
cmp
dec
jne
outs
mov
scas
and
movd
dec
stc
ja
pop
xchg
pop
(bad)
ror
ret
pop
inc
jb
or
jmp
cmp
pop
and
loopne
ror
jg
ds
cmp
pop
dec
(bad)
call
dec
or
test
dec
jg
mov
fdivr
call
std
hlt
scas
adc
cld
ret
jle
jno
(bad)
in
ret
inc
jae
addr16
mov
(bad)
jg
(bad)
(bad)
out
sar
push
cli
(bad)
out
repnz
es
fwait
test
mov
aas
stc
iret
jg
and
std
and
fsubr
inc
(bad)
loopne
daa
dec
out
inc
mov
rcr
movs
mov
cli
in
and
repnz
inc
retf
jmp
retf
clc
in
std
in
ds
mov
(bad)
jns
icebp
jmp
mul
dec
mov
jno
repz
sub
jae
fsubr
and
std
mul
fistp
and
xor
clc
imul
(bad)
fcomp
(bad)
std
jnp
fdivr
fcomip
loopne
jle
jp
dec
sub
or
push
movd
clc
dec
movd
jle
cmp
ins
icebp
add
pop
xlat
test
clc
(bad)
sbb
stc
jg
imul
ret
std
add
out
outs
inc
jge
add
daa
sbb
cmp
nop
push
std
xchg
movs
clc
mov
aam
dec
push
jg
mov
mov
dec
cld
inc
fs
xchg
xchg
clc
cmp
leave
ja
or
lods
fsubp
fs
jle
mov
(bad)
mov
repnz
(bad)
div
aam
std
xlat
xor
mov
dec
and
sbb
cli
clc
test
clc
xor
call
fistp
std
pop
jle
paddb
xor
ja
or
dec
(bad)
(bad)
fistp
cld
jne
jmp
retf
or
iret
sti
sbb
and
das
std
aad
pop
bound
jg
adc
stc
fwait
adc
ret
ret
and
mov
jns
sti
lahf
cld
or
loope
outs
leave
sub
jg
leave
jg
or
add
popf
aas
stc
idiv
sbb
out
xchg
xchg
jg
ja
xor
xlat
pusha
mov
fs
jle
dec
dec
mov
in
cld
popf
xchg
xchg
xchg
jne
mov
ret
daa
dec
outs
fwait
cld
and
test
(bad)
fistp
scas
and
cld
fist
jns
add
stc
pop
cmp
mov
(bad)
(bad)
hlt
std
out
lock
jg
cmp
idiv
icebp
mov
fist
(bad)
xchg
(bad)
cli
ja
adc
add
out
cld
jbe
outs
jmp
scas
loop
loop
inc
mov
mov
mov
xchg
std
ss
dec
mov
sbb
stc
cwde
adc
jg
pop
cld
jbe
cld
iret
mov
sti
push
mov
xchg
cmp
in
inc
inc
pop
mov
stc
add
inc
cdq
imul
cld
(bad)
shr
mov
or
pop
aas
(bad)
sbb
pop
fwait
inc
mov
scas
and
stc
psrlq
jg
xlat
adc
test
outs
jle
leave
fisub
shl
fcmovnbe
iret
aas
xchg
jle
stc
xor
shr
mov
pop
push
sar
cli
out
aaa
cld
mov
sti
xchg
mov
in
pop
dec
mov
loop
sub
frstor
(bad)
outs
cli
push
(bad)
mov
std
(bad)
aas
mov
les
fsub
xchg
fs
or
stc
out
iret
pop
dec
aas
jg
cli
stc
pop
sar
mov
hlt
aaa
push
sub
popa
add
cdq
dec
fs
fdivrp
call
push
fwait
pop
or
lahf
cld
mov
fisttp
cmp
dec
shr
push
hlt
(bad)
jg
xlat
xchg
test
cli
or
loopne
sbb
or
shl
outs
imul
adc
jp
fwait
inc
test
cdq
(bad)
sbb
mov
pop
cmp
pop
adc
movs
lahf
cld
mov
dec
push
(bad)
dec
xlat
std
aaa
movs
pop
dec
shl
dec
mov
jg
or
fbld
scas
(bad)
aaa
jle
jb
dec
enter
sub
lahf
ins
leave
das
and
fwait
xchg
and
mov
fwait
ins
leave
fst
sub
adc
mov
adc
cld
es
cld
(bad)
mov
cmc
pop
sar
aam
daa
jmp
mov
cmc
mov
(bad)
cmp
into
out
mov
and
push
mov
jmp
or
mov
pop
mov
(bad)
add
jle
add
sbb
outs
dec
adc
sbb
in
inc
pushf
fimul
ins
idiv
test
jb
push
inc
mov
xchg
enter
repnz
mov
inc
cld
lods
sbb
mov
call
into
in
(bad)
cmp
inc
js
mov
sub
mov
adc
(bad)
cmp
std
arpl
ret
pop
(bad)
jge
dec
(bad)
cs
jecxz
sti
add
test
icebp
aaa
cmps
sub
mov
icebp
(bad)
fucomip
xlat
sbb
cs
cmp
nop
inc
idiv
call
das
movs
rcr
mov
fbld
(bad)
sub
pop
(bad)
inc
ss
cld
(bad)
mov
outs
stos
mov
out
movs
xchg
cmp
jnp
and
into
lods
jmp
xchg
(bad)
cmps
lahf
cld
sti
mov
outs
repz
mov
and
out
stc
sub
loop
jb
add
fist
jno
(bad)
sbb
push
bnd
dec
(bad)
xchg
fistp
mov
add
or
or
inc
fcmovnbe
push
pop
rcl
stc
daa
(bad)
jmp
add
std
data16
dec
mov
clc
sbb
cli
fild
xor
outs
(bad)
data16
xabort
or
std
or
and
aaa
sar
mov
jno
imul
addr16
jno
jg
cli
std
scas
push
cmp
mov
mov
ror
jg
mov
inc
(bad)
cmp
cmp
cmps
iret
sahf
ror
jg
(bad)
call
(bad)
jp
pushf
jmp
mov
cmp
call
sub
jmp
(bad)
std
sbb
sbb
hlt
fldenv
out
bnd
push
inc
fild
push
(bad)
(bad)
jmp
div
xchg
push
cld
jge
mov
cwde
(bad)
jmp
mov
mov
fist
fist
retf
pop
dec
aas
push
sti
xchg
(bad)
mov
lock
hlt
repz
jne
out
stc
xor
(bad)
dec
rcr
pop
mov
xchg
(bad)
push
hlt
jmp
cld
(bad)
mov
fcom
cmp
psubd
jl
scas
sub
shr
imul
mov
stc
jne
xchg
mov
inc
jg
jno
xor
(bad)
iret
adc
int
dec
mov
(bad)
cli
sti
mov
inc
ins
int
(bad)
imul
shl
(bad)
(bad)
jnp
out
mov
dec
aas
out
add
in
pop
std
jne
idiv
out
fild
or
iret
call
daa
cmp
sbb
aaa
popa
sbb
sbb
push
inc
std
sbb
jl
cli
push
cli
jmp
cli
call
scas
xor
mov
inc
sbb
pop
call
icebp
sbb
pop
inc
(bad)
jmp
jmp
jmp
(bad)
(bad)
jge
(bad)
jg
(bad)
dec
sar
jmp
(bad)
mov
jmp
(bad)
mov
cli
jmp
les
call
call
sar
jg
cli
(bad)
out
xchg
rcl
test
sti
popf
aas
stc
adc
dec
xchg
inc
jg
xchg
fwait
out
xchg
fdivr
push
movs
mov
and
cmc
mov
out
es
sbb
add
pop
fbld
lea
lea
hlt
fild
jle
cmp
movs
addr16
(bad)
xchg
in
(bad)
jle
xchg
(bad)
adc
push
mov
push
sub
stc
jecxz
inc
retf
movs
mov
fimul
lock
pop
push
cli
lods
fs
test
in
xor
pop
jl
pop
aas
jno
or
jle
sbb
aas
ds
(bad)
fucomip
pusha
pop
aas
into
push
mov
(bad)
jecxz
repnz
ret
pop
mov
clc
dec
lock
sbb
jle
sbb
push
sbb
in
jg
(bad)
fcomip
loopne
lds
std
pop
pop
jmp
fild
cdq
in
stc
lea
int
imul
div
sti
scas
fs
sbb
xchg
push
mov
sub
mov
(bad)
mov
addr16
pop
dec
ins
std
es
and
sub
int3
cld
retf
fs
(bad)
jns
(bad)
push
repz
int3
hlt
aas
dec
es
out
daa
xchg
repz
fbld
xor
ins
sub
jnp
leave
pop
dec
push
in
iret
cmps
test
iret
(bad)
popf
aas
stc
xor
clc
stc
push
jle
aas
loopne
aas
xor
pop
fstp
and
int
jns
dec
into
ret
out
sub
jo
mul
(bad)
sbb
cmps
jge
in
fucomi
clc
leave
aas
idiv
push
lahf
pop
push
lahf
mov
aas
stc
sti
jg
dec
dec
(bad)
sbb
bnd
mov
(bad)
xchg
xchg
cld
dec
sub
clc
jecxz
sub
ss
cld
add
jnp
cmp
mul
cmp
data16
cld
mov
call
xlat
jg
xchg
out
pop
mov
mov
jbe
inc
fmul
(bad)
xor
cld
xor
js
addr16
mul
or
jg
aas
dec
call
(bad)
adc
xchg
(bad)
cmp
and
sbb
clc
xchg
jg
mov
(bad)
adc
(bad)
fisttp
clc
aas
fsub
jmp
add
(bad)
hlt
(bad)
jg
in
das
dec
push
(bad)
push
xor
ja
int
repz
inc
cld
dec
inc
mov
ins
jle
adc
(bad)
loopne
test
lahf
jle
call
pop
jl
pop
cld
ss
adc
(bad)
pop
cli
in
movs
das
call
sti
pop
and
std
mov
(bad)
aas
dec
adc
push
mov
(bad)
cs
sub
mov
(bad)
dec
loopne
cmps
(bad)
pop
inc
loop
mov
and
loop
sbb
loop
sub
push
sub
cmps
mov
dec
(bad)
scas
xor
outs
adc
mov
xchg
jg
inc
stc
aaa
xor
xchg
sbb
push
add
sub
daa
or
mov
daa
pmulhw
call
les
inc
mov
jle
enter
inc
ja
lea
cs
das
nop
(bad)
sti
pop
push
scas
fs
pop
dec
enter
hlt
leave
out
cld
leave
(bad)
cld
fstp
not
or
ds
icebp
mov
(bad)
mov
mov
xchg
push
or
(bad)
scas
inc
xchg
jg
rcl
(bad)
out
(bad)
loopne
shl
(bad)
xchg
jo
enter
jg
out
push
(bad)
aas
adc
mov
outs
inc
mov
daa
jle
pop
sar
call
lock
leave
pop
fdivr
lock
cmp
sbb
call
jmp
int
psubsb
add
idiv
xchg
(bad)
jmp
jle
pop
outs
les
fstp
std
jmp
jp
out
dec
mov
lods
adc
movs
mov
adc
adc
xchg
sti
out
ins
icebp
dec
mov
xchg
loopne
aas
cld
mov
ss
jg
sbb
aas
(bad)
jmp
pop
fcomp
jg
(bad)
(bad)
(bad)
in
xlat
xchg
xor
push
sti
mov
loop
hlt
(bad)
jg
(bad)
(bad)
(bad)
(bad)
pop
push
jl
fist
pop
pop
stos
cmp
mov
push
(bad)
mov
pop
shr
jg
std
cld
fwait
jmp
icebp
push
lock
int
ss
leave
mov
pop
adc
jmp
pop
xor
lds
mov
cmc
fcmovnbe
addr16
jg
mov
scas
jle
pop
fwait
cld
sub
(bad)
jg
jge
mov
icebp
or
das
mov
bnd
das
cmc
addr16
jg
scas
and
movs
jg
jge
ja
(bad)
jg
cli
call
jg
std
cld
add
mov
xor
fnstcw
jnp
lods
inc
sbb
mov
add
imul
add
imul
sbb
(bad)
(bad)
imul
sar
sbb
xchg
outs
mov
(bad)
jg
(bad)
dec
cli
(bad)
mov
call
(bad)
mov
hlt
(bad)
call
(bad)
jg
(bad)
(bad)
nop
(bad)
call
(bad)
jg
cli
jg
(bad)
call
fbld
xor
call
lock
mov
mov
(bad)
in
clc
sbb
xchg
jg
ja
in
es
dec
retf
sub
(bad)
in
xchg
in
sbb
dec
icebp
mov
in
cld
(bad)
in
cld
jbe
cld
jne
sub
fs
jle
mov
mov
outs
inc
mov
leave
xor
lahf
cld
or
sbb
and
stc
pop
dec
mov
dec
inc
int3
pop
xchg
adc
daa
cmp
cld
pop
push
push
mov
lock
(bad)
faddp
push
cld
fdivr
cli
loopne
cld
clc
in
push
out
loop
ja
mov
jecxz
shr
pop
dec
push
jle
cld
clc
in
mov
(bad)
icebp
shr
lds
sar
test
mov
mov
pop
cmps
pop
push
dec
jle
jne
out
loop
add
(bad)
jns
cmp
clc
daa
loopne
or
std
push
mov
mov
jg
xchg
arpl
or
jle
jmp
cmp
in
dec
xchg
jg
mul
aaa
daa
sti
lock
adc
jg
call
das
stc
sbb
and
cmp
jle
jl
fisttp
sbb
in
jl
xor
cmp
dec
jle
xor
jge
xor
push
jns
stos
retf
lods
sub
stos
mov
popa
cwde
adc
mov
jle
pop
xor
jae
out
push
iret
call
icebp
sar
add
cli
jecxz
jmp
push
cmps
pop
ror
jmp
sbb
jg
jmp
shr
out
aas
inc
leave
(bad)
sbb
inc
mov
repz
outs
push
nop
pop
and
pop
mov
fwait
mov
add
mov
es
or
fbld
and
inc
(bad)
repz
cmp
(bad)
xchg
cli
std
pop
sbb
dec
push
out
retf
call
mov
cwde
jle
lahf
xchg
push
jg
add
fbld
adc
xlat
push
cmp
jg
or
aas
neg
cwde
add
leave
js
mov
xchg
jg
jp
aaa
xchg
add
(bad)
xor
clc
mov
mov
dec
(bad)
cmc
fild
sbb
iret
pusha
std
repnz
and
inc
imul
add
add
and
push
outs
sbb
std
sbb
lahf
adc
adc
add
nop
aam
inc
fs
neg
lock
push
cli
xchg
xchg
mov
cli
out
mov
jmp
mov
pop
sbb
jbe
xor
add
inc
std
in
and
dec
sub
outs
nop
imul
xor
stc
fistp
push
lahf
cld
jnp
jecxz
push
outs
dec
mov
cmc
arpl
daa
call
xchg
fild
dec
outs
loopne
pop
std
std
fwait
cld
cmp
scas
sahf
repz
call
rcl
pop
jo
fist
stc
in
lods
jns
xlat
addr16
loop
inc
sub
aam
loope
dec
jl
jmp
scas
inc
jbe
mov
xchg
clc
push
jle
ja
arpl
int
(bad)
sub
inc
cld
popf
jo
jle
pop
daa
std
pop
test
jmp
mov
in
dec
add
cmp
cli
jne
jg
outs
inc
stc
adc
add
aas
mov
sti
ror
aas
sbb
mov
call
std
xchg
jle
push
hlt
repz
movs
(bad)
inc
scas
and
std
dec
mov
stos
hlt
neg
(bad)
(bad)
sti
jg
dec
jmp
xchg
mov
adc
(bad)
mov
mov
addr16
repz
movs
call
inc
dec
sub
lahf
cmps
(bad)
inc
lahf
mov
xlat
aas
xchg
(bad)
call
std
cld
imul
pop
stc
imul
outs
movs
lahf
jmp
scas
and
jle
call
dec
dec
clc
(bad)
xor
sub
mov
mov
lea
jle
push
add
push
cmps
loopne
fucomip
xlat
call
jmp
repnz
std
sbb
cld
mov
rcr
pop
jmp
fnstsw
add
leave
call
test
sti
fist
jmp
and
mov
and
test
sbb
xor
popa
cld
(bad)
xor
data16
dec
xor
push
xor
outs
inc
xchg
push
sbb
or
sbb
repnz
cld
(bad)
fdiv
(bad)
cli
imul
inc
lahf
popa
hlt
mov
aad
icebp
imul
dec
hlt
call
(bad)
dec
mov
out
pop
cli
aas
and
xor
das
sti
ins
dec
inc
ja
inc
jg
ror
movs
xchg
and
mov
lock
jg
ja
std
cld
jecxz
cld
sar
retf
cmp
das
sti
popf
jmp
sti
int
mov
or
jle
aam
outs
cmps
stos
inc
mov
nop
pop
jmp
sub
cld
mov
or
sbb
in
ja
or
ror
jp
mov
lahf
scas
and
pop
nop
ret
pop
dec
(bad)
xchg
xchg
xchg
aas
xchg
(bad)
outs
dec
xchg
(bad)
xchg
movs
(bad)
dec
mov
or
in
mov
in
dec
popa
sub
clc
ins
imul
aas
and
jmp
daa
dec
out
inc
sar
(bad)
fcmovnu
mov
mov
frstor
jmp
shl
mov
mov
adc
add
rol
mov
inc
push
and
das
popf
std
pop
mov
stc
pop
out
std
mov
icebp
movs
add
sar
das
mov
add
jo
iret
sar
pop
mov
jmp
push
imul
sbb
mov
popa
mov
jg
std
aas
sti
xor
aas
jg
cli
jmp
mov
in
cmp
shr
mov
(bad)
dec
imul
leave
cmps
pop
(bad)
(bad)
dec
pushf
cli
xchg
mov
push
call
mov
jmp
clc
(bad)
fdivr
jae
mov
mov
push
div
jle
pop
imul
mov
mov
jecxz
call
out
dec
xchg
mov
in
(bad)
in
inc
(bad)
dec
(bad)
les
(bad)
outs
inc
pop
xchg
jl
das
dec
lahf
cld
or
aas
imul
out
ja
fistp
call
lea
in
stc
ins
jg
jbe
mov
xlat
fisttp
in
cld
in
mov
fist
mov
sub
jnp
cli
pop
cld
pop
nop
pushf
pop
mov
push
(bad)
mov
dec
repnz
adc
std
lea
jle
in
push
jle
dec
out
cmp
aas
call
add
inc
or
(bad)
sbb
fadd
jl
fwait
std
pop
retf
into
scas
icebp
sbb
pop
retf
adc
cmp
or
jmp
mov
test
stc
xor
push
stc
dec
jmp
inc
inc
and
or
scas
and
std
aas
sar
jg
in
rol
pop
push
xchg
jmp
retf
mov
sar
loop
je
mov
jbe
lods
stos
push
sub
and
dec
cmps
dec
cdq
(bad)
das
les
inc
dec
adc
js
cmp
jg
ja
gs
fwait
jle
scas
std
mul
leave
daa
push
fucomip
aaa
cmp
pop
jmp
push
xor
in
aas
out
mov
jo
jmp
cmp
fisubr
std
inc
sub
fisttp
es
std
adc
out
aaa
cld
in
dec
mov
dec
(bad)
jmp
mov
in
cli
ins
aas
stc
test
push
rcr
push
out
jl
jmp
icebp
cmp
pop
cld
cli
hlt
(bad)
(bad)
aaa
cmp
fiadd
cld
(bad)
scas
and
add
ret
retf
jle
in
sti
lea
jle
add
mov
mov
aaa
test
fdivr
fdivrp
in
in
pop
inc
cli
adc
loope
adc
mov
push
loopne
cld
push
hlt
(bad)
aas
pop
jg
shl
and
cmovb
xchg
call
adc
mov
xchg
sar
cdq
cli
aaa
and
cmc
sbb
xchg
pop
inc
adc
mov
and
jle
pop
inc
cmp
(bad)
aaa
cld
in
call
enter
aad
inc
adc
push
out
fistp
mov
pop
fdivr
and
mov
jb
cld
xchg
(bad)
mov
mov
xchg
mov
mov
fist
xchg
hlt
pop
mov
sbb
jge
(bad)
fbstp
sbb
aas
fst
je
mov
jle
std
sbb
out
pop
mov
mov
and
jecxz
cwde
jl
idiv
neg
fcomip
imul
adc
test
fucomi
add
rcr
iret
mov
in
ret
pop
pop
add
out
(bad)
in
ds
fistp
hlt
mov
mov
std
xor
loopne
xor
dec
mov
(bad)
push
xchg
scas
(bad)
fist
icebp
cmp
mov
movs
(bad)
pop
sti
xlat
clc
ds
xor
retf
or
cld
pop
and
mov
mov
int3
pop
dec
mov
outs
shl
call
imul
nop
mov
out
xor
call
test
popa
test
std
cmp
cwde
pusha
cld
cdq
movs
jge
cs
lods
mov
dec
sub
push
(bad)
mov
(bad)
(bad)
sbb
(bad)
pop
cli
stc
pop
shl
or
std
idiv
jb
jmp
in
or
jg
lock
cmp
jmp
(bad)
(bad)
imul
cmps
mov
std
cmps
aam
das
cmps
ss
cmc
div
adc
jg
mov
call
mov
cmps
jmp
sti
pop
jmp
jge
pusha
inc
hlt
fstp
jg
ins
or
or
std
jnp
(bad)
jmp
cli
(bad)
pop
and
sbb
in
or
call
push
lahf
jg
jge
test
cld
fwait
test
mov
or
fisttp
(bad)
scas
aam
fwait
(bad)
(bad)
jnp
out
push
mov
test
jg
xor
push
cli
cld
jg
lahf
mov
jmp
xchg
push
adc
lahf
mov
std
cmps
adc
(bad)
cmp
popf
sar
push
mov
iret
jg
call
jge
cmp
jmp
fcomi
repz
lahf
scas
mov
sbb
das
std
push
xor
inc
cli
out
xlat
mov
sti
bt
push
xchg
hlt
stc
test
imul
pop
and
and
(bad)
mov
(bad)
cmp
neg
pusha
(bad)
jae
std
dec
call
cmp
ror
out
stc
imul
(bad)
push
mov
(bad)
or
lahf
mov
jecxz
mov
jmp
jecxz
mov
call
jg
jmp
out
jg
push
sar
dec
js
sbb
mov
out
test
mov
test
mov
(bad)
mov
(bad)
cmps
cld
sub
mov
sti
xor
imul
or
out
inc
mov
lahf
dec
std
(bad)
pop
add
mov
hlt
(bad)
lahf
inc
js
daa
hlt
fnstsw
aas
jg
cli
stc
(bad)
ror
fist
push
mov
inc
jg
sub
jmp
cli
clc
pop
or
arpl
cwde
(bad)
(bad)
mov
out
std
xchg
xor
call
inc
out
inc
aas
jmp
adc
(bad)
(bad)
sbb
call
sar
hlt
std
fild
movs
mov
mov
cmps
push
aas
jg
std
cld
arpl
out
sbb
jmp
addr16
fst
xchg
push
add
cwde
ds
xor
std
pop
mov
jg
push
ja
mov
dec
mov
mov
(bad)
out
mov
jmp
jmp
jge
lahf
shr
dec
std
cld
xchg
mov
add
fcomi
fucomp
dec
mov
or
mov
inc
jp
ja
lea
mov
inc
shl
xor
repz
adc
test
hlt
(bad)
fistp
std
fadd
(bad)
adc
fcmovnbe
neg
in
mov
cmp
lock
shl
mov
jmp
mov
or
out
dec
(bad)
jp
fstp
inc
lahf
pop
sar
sti
hlt
(bad)
fild
call
aas
out
adc
call
inc
xor
fisttp
out
dec
(bad)
loope
and
mov
pusha
cld
jge
std
scas
inc
jge
pop
hlt
fisubr
std
adc
movs
hlt
repz
mov
cld
aaa
mov
cmc
(bad)
shl
mov
hlt
fidivr
int
lahf
dec
mov
fxtract
repz
cmp
push
sti
pop
(bad)
sbb
outs
xor
aas
xchg
fdivrp
cs
jmp
(bad)
fisttp
(bad)
mov
(bad)
dec
hlt
stc
outs
or
test
loope
adc
push
test
dec
in
lahf
mov
fwait
rcr
mov
out
int
out
rcr
mov
rcr
mov
aam
xchg
mov
std
dec
or
inc
(bad)
(bad)
out
cmps
mov
mov
inc
mov
sbb
jl
ss
mov
call
jg
js
(bad)
data16
fbld
cmp
call
out
idiv
pusha
(bad)
scas
mov
neg
(bad)
(bad)
mov
out
(bad)
repz
ins
(bad)
js
repz
push
fwait
mov
mov
loop
jg
mov
pop
std
push
cli
(bad)
dec
jg
shr
fild
push
loope
mov
(bad)
cmp
mov
cmps
or
outs
inc
mov
hlt
repz
and
imul
call
inc
fild
sti
pop
xchg
mov
sti
mov
std
add
cli
call
cld
stos
test
clc
imul
imul
sar
call
call
mov
rol
neg
aas
dec
cld
mov
loopne
jmp
jle
cmps
out
push
test
jg
(bad)
jns
ins
(bad)
push
jbe
cmp
cld
sbb
aas
mov
(bad)
mov
push
out
ja
ds
jmp
scas
call
std
mov
lahf
std
in
out
dec
aas
pop
shl
gs
das
jge
fwait
pushf
(bad)
(bad)
mov
ja
out
push
sub
and
idiv
xchg
jle
int
fst
(bad)
jmp
pop
rcr
imul
jmp
cs
push
movs
(bad)
jg
imul
inc
call
and
pop
call
adc
std
xor
shr
(bad)
(bad)
cmp
(bad)
call
std
call
hlt
(bad)
jg
(bad)
call
pop
inc
xchg
or
or
(bad)
fistp
jg
cli
call
inc
(bad)
out
dec
(bad)
dec
std
dec
scas
sub
mov
addr16
dec
hlt
(bad)
mov
sar
call
cli
(bad)
fild
jmp
call
(bad)
fbld
(bad)
call
jmp
inc
jecxz
(bad)
dec
hlt
dec
inc
jmp
std
dec
(bad)
out
inc
call
(bad)
dec
(bad)
jg
std
dec
hlt
(bad)
aas
xchg
call
cli
(bad)
fild
inc
(bad)
call
inc
xchg
fs
(bad)
jmp
or
std
push
std
jg
(bad)
inc
(bad)
mov
fidiv
pop
std
fidiv
fidiv
fidiv
fidiv
(bad)
dec
(bad)
mov
call
(bad)
mov
cli
(bad)
dec
push
jg
lods
adc
or
inc
dec
(bad)
mov
pop
inc
push
sar
pop
or
inc
push
or
lahf
inc
(bad)
dec
(bad)
jg
std
(bad)
out
mov
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
call
jmp
jmp
mov
mov
movs
(bad)
jg
(bad)
mov
call
xlat
mov
sar
jg
scas
sub
xchg
jg
std
dec
in
das
mov
(bad)
mov
(bad)
mov
mov
outs
sar
jmp
cli
(bad)
jg
(bad)
call
(bad)
jmp
jp
scas
mov
hlt
jmp
push
jmp
outs
sar
mov
hlt
jmp
std
jmp
inc
hlt
(bad)
aas
mov
jmp
sar
jmp
call
(bad)
(bad)
jmp
(bad)
jg
std
call
mov
(bad)
jg
(bad)
jmp
(bad)
call
cli
(bad)
jg
(bad)
call
(bad)
jmp
std
call
and
call
hlt
(bad)
fild
(bad)
cmp
inc
(bad)
fist
call
cli
(bad)
out
inc
call
dec
sar
call
call
inc
(bad)
call
call
jmp
cmps
(bad)
push
(bad)
mov
sar
dec
(bad)
mov
jmp
(bad)
mov
hlt
(bad)
call
push
xor
hlt
(bad)
fist
call
fild
neg
sti
in
mov
xor
xchg
outs
jge
pop
movs
ffreep
inc
jmp
inc
out
call
retf
aaa
inc
mov
and
jmp
adc
retf
lods
sub
loop
mov
call
test
lahf
cld
add
dec
jmp
(bad)
mov
jg
cli
xchg
ror
dec
cli
xchg
jecxz
add
jmp
cmp
repnz
mov
shr
lock
fadd
sub
daa
icebp
(bad)
mov
jl
mov
fstp
mov
sbb
scas
rcl
jle
lds
sbb
sbb
imul
jb
sub
fbld
cld
not
loop
jg
mov
lahf
inc
xrelease
icebp
rcr
(bad)
cmp
call
sti
sub
fistp
sbb
pop
loop
aas
adc
pop
or
pop
or
jecxz
ja
or
cld
not
mov
icebp
ror
lock
xchg
(bad)
imul
aas
sbb
ffree
outs
jg
cli
inc
pusha
dec
imul
mov
icebp
sbb
inc
mov
icebp
fcos
inc
push
jne
mul
mov
add
cld
push
clc
in
jg
mov
add
in
pop
ret
outs
enter
xor
or
jmp
push
cld
test
sub
mov
lds
jle
xchg
cmp
aas
ds
and
jecxz
rcr
(bad)
push
mov
jge
not
mov
loope
fild
lahf
jge
mov
loopne
sub
mov
and
sar
outs
cmp
sti
(bad)
fld
fistp
cld
imul
fcmovnu
sbb
in
loope
pop
pop
mov
jmp
fistp
in
in
push
cld
ja
pusha
mov
ret
outs
call
jle
test
in
pop
shr
call
outs
jg
jle
or
adc
cld
aad
loopne
ret
pop
jg
jle
das
shr
dec
(bad)
outs
xor
pop
jg
jle
ret
icebp
fstp
mov
nop
into
cmp
ret
or
pop
loopne
dec
mov
push
pushf
je
jmp
mul
ins
jl
sub
test
jle
xor
(bad)
push
cmps
pop
(bad)
loopne
ret
mov
sahf
pop
cld
dec
clc
loopne
inc
fcmovnu
add
add
pop
mov
icebp
fistp
(bad)
iret
(bad)
sbb
jle
loopne
lds
pop
cmp
mov
fist
jmp
cmp
cmp
shr
scas
(bad)
ss
xchg
dec
not
loope
in
push
dec
aas
cmp
adc
mov
stc
cmp
icebp
fistp
cmc
popf
add
clc
in
out
out
jecxz
or
jp
jbe
(bad)
gs
jg
imul
mov
cld
test
mov
add
aad
mov
(bad)
jae
lock
mov
or
or
push
jle
aaa
icebp
fcos
inc
imul
pop
cld
xchg
jle
mov
push
or
and
loopne
shr
jle
sti
lock
fnstsw
arpl
push
clc
in
or
std
add
sti
shl
fstp
add
or
ret
or
rcr
xor
mov
sub
clc
sub
outs
mov
std
idiv
pop
jl
cmps
mov
cld
outs
mov
repnz
cld
dec
(bad)
gs
lock
or
cld
scas
pop
mov
icebp
shr
bswap
sbb
pop
cld
inc
clc
and
pop
aas
cmp
mov
shr
jle
sub
(bad)
mov
inc
fcmovnu
sbb
pop
cld
div
pop
sub
cmps
jg
jle
daa
icebp
sbb
(bad)
fisttp
loopne
rol
ss
jmp
sbb
pop
jg
mov
pop
jl
jecxz
add
pop
mov
sar
mov
rcr
sub
sbb
lock
push
cld
neg
sbb
mov
clc
in
das
(bad)
outs
cmps
add
sbb
mov
lock
mov
jg
pop
std
idiv
lods
shr
sbb
jle
cld
cmp
clc
xor
(bad)
mov
test
(bad)
and
shl
mov
(bad)
jne
ss
mov
sbb
std
fnclex
out
mov
push
jg
mov
ffreep
outs
jg
jle
or
fistp
cld
test
loop
psubw
js
mov
xor
lock
sar
loopne
inc
ret
aas
add
cld
out
pop
mov
mov
cmp
mov
sbb
jge
neg
loop
outs
mov
jecxz
add
sbb
mov
jecxz
push
jnp
mov
out
push
sub
mov
sbb
shl
std
jne
fnstcw
fistp
ds
(bad)
lock
xor
dec
fucomip
mov
jne
fucomip
xlat
fs
(bad)
outs
adc
not
lahf
dec
pop
std
out
into
imul
outs
imul
idiv
or
pop
xchg
mov
(bad)
out
icebp
imul
in
hlt
push
hlt
(bad)
out
sar
daa
hlt
inc
mov
call
inc
push
std
jg
std
jmp
mov
jg
inc
cli
(bad)
aas
dec
(bad)
call
jg
inc
sbb
scas
and
jge
pop
inc
repnz
paddw
in
push
sbb
mov
jmp
(bad)
xor
(bad)
addr16
call
mov
jecxz
jg
ds
mov
ds
(bad)
aas
mov
callw
data16
(bad)
fist
(bad)
aas
mov
aas
cmps
(bad)
aas
mov
pop
sar
mov
mov
add
hlt
(bad)
aas
xchg
(bad)
jmp
cli
call
(bad)
(bad)
jmp
(bad)
jg
scas
and
std
call
(bad)
(bad)
jnp
(bad)
inc
(bad)
push
jmp
inc
(bad)
jmp
(bad)
(bad)
mov
(bad)
aas
movs
(bad)
call
(bad)
(bad)
(bad)
jg
(bad)
aas
mov
out
call
dec
hlt
(bad)
mov
sar
push
cli
(bad)
aas
inc
(bad)
jmp
std
(bad)
fbld
(bad)
(bad)
ja
mov
call
jmp
dec
inc
clc
iret
jle
cmc
daa
call
imul
cld
hlt
leave
mov
lahf
cld
xor
out
mov
shl
(bad)
mov
mov
repnz
movs
mov
jmp
sar
out
(bad)
fnstenv
clc
in
dec
adc
repnz
cmps
dec
xchg
mov
pop
jge
push
loop
fucomip
and
(bad)
(bad)
loopne
ret
out
pop
ds
(bad)
cmp
add
sbb
adc
or
push
loop
ins
dec
mov
jmp
fcmovb
pop
pop
sbb
scas
clc
loopne
loopne
fist
mov
xor
sti
lock
scas
(bad)
(bad)
xor
imul
cmp
scas
rcr
paddd
cld
xchg
loopne
shr
call
outs
dec
dec
pop
jmp
ds
imul
fisttp
call
icebp
fld
(bad)
jb
neg
mov
pop
mov
daa
jecxz
mov
add
out
loopne
ret
das
ds
jle
icebp
sbb
jge
jmp
jmp
add
jae
imul
loop
iret
shr
xchg
or
xchg
push
fadd
out
cmc
sbb
pop
pop
push
cld
add
mov
push
jns
lds
shr
test
xchg
(bad)
add
pop
cld
mov
mov
pop
jecxz
jg
ins
dec
div
mov
push
lea
cmp
cld
ss
es
fistp
clc
mov
outs
inc
not
add
pop
mov
dec
cmps
fistp
cmp
jg
sub
std
pop
jecxz
(bad)
jmp
pop
lods
lock
cmp
lock
ds
mov
iret
jle
cld
mul
loopne
arpl
dec
nop
cmp
pop
in
loopne
fild
int
and
pop
lock
test
(bad)
push
cld
neg
mov
or
mov
adc
jle
cmp
jg
adc
sti
aas
adc
add
or
jmp
ds
dec
push
(bad)
cmp
loope
jg
mov
ja
pop
xchg
inc
cli
in
mov
clc
stos
lock
outs
inc
cld
mul
(bad)
call
loope
jnp
repz
loopne
mov
clc
in
dec
loop
(bad)
outs
jg
iret
aas
jle
cmc
jns
icebp
fistp
xchg
jle
cld
not
mov
clc
in
pop
ret
outs
dec
icebp
fistp
jnp
les
cmp
inc
push
ja
fist
mov
pop
mov
jle
cld
push
xchg
test
clc
mov
call
cld
clc
iret
fsubr
clc
in
cmps
sar
stc
mov
ds
xchg
jns
dec
fisub
dec
faddp
xchg
jmp
stc
repnz
mov
mov
pop
icebp
cmp
xchg
cmps
jg
jle
repz
(bad)
aas
stc
mov
xor
stc
xchg
jg
mov
(bad)
clc
(bad)
ja
in
push
inc
cli
pop
inc
xor
icebp
jp
pop
int3
and
popa
and
pop
in
les
xlat
sbb
(bad)
fistp
clc
ss
push
mov
cmc
pop
mov
pop
cmp
icebp
sti
push
fadd
out
push
call
sub
xlat
addr16
(bad)
dec
mov
outs
jno
mov
outs
pop
mov
xchg
scas
cmc
pop
inc
and
cmp
cld
lahf
(bad)
push
arpl
pop
dec
out
out
ret
outs
in
pop
(bad)
sub
scas
ret
fistp
cld
and
mov
or
aas
push
pop
call
outs
mov
pop
xlat
clc
push
push
jecxz
out
mov
(bad)
fs
pop
jl
xor
das
icebp
rcr
mov
sub
aas
or
(bad)
popa
mov
(bad)
(bad)
cld
neg
loop
pop
push
or
loope
xor
loop
push
jecxz
fwait
jmp
and
aas
jno
aas
loopne
mov
clc
in
ffreep
outs
dec
mov
loop
outs
jbe
iret
loope
push
mov
fistp
cld
mov
cld
ins
clc
jno
lock
jecxz
popf
cmp
mov
cld
shl
shr
daa
loopne
aas
or
cld
popa
clc
in
pop
(bad)
outs
aas
rcl
sbb
clc
lea
dec
cld
clc
mov
sbb
push
cli
jnp
loopne
loopne
ds
mov
cmp
lea
(bad)
mov
ja
sbb
shl
icebp
jnp
cld
outs
clc
icebp
cli
loopne
inc
arpl
int3
jle
cld
(bad)
retf
lock
pop
mov
loope
xor
popf
clc
(bad)
in
arpl
mov
in
shl
mov
jg
mov
pop
les
loop
les
xor
mov
jns
mov
repnz
ret
cmp
lods
(bad)
je
cli
add
sbb
ja
jl
js
les
(bad)
ds
std
pop
(bad)
adc
pop
inc
mov
int3
popf
pushf
(bad)
jmp
xor
imul
aas
jbe
call
outs
inc
(bad)
jmp
std
jno
push
cld
imul
test
call
jge
jmp
call
inc
mov
pop
ret
in
shl
scas
and
in
stc
xor
movs
inc
push
inc
movs
nop
adc
inc
in
mov
fld
jmp
sti
sar
adc
and
cmp
add
std
call
sar
(bad)
jns
jg
inc
xor
fnstsw
aas
and
cli
leave
scas
clc
pop
scas
ds
lahf
sar
cmp
repnz
cld
fldenv
dec
sbb
daa
jmp
sub
jmp
clc
jmp
call
mov
(bad)
jmp
dec
pop
aas
stc
jnp
xchg
xchg
lahf
jge
mov
jg
ds
jmp
das
push
dec
jmp
ret
(bad)
mov
in
stc
pop
jbe
stc
xor
call
dec
jg
cli
(bad)
push
rol
sbb
mov
lea
(bad)
in
pop
jecxz
lahf
les
repz
inc
jb
mov
outs
in
test
loop
lahf
loop
(bad)
out
push
sbb
cmp
call
out
(bad)
outs
and
shr
out
aaa
ror
sahf
sbb
lock
inc
pop
clc
in
ds
div
sbb
hlt
pop
pop
cld
mov
pusha
pop
pop
cld
ret
clc
or
les
cmp
jg
std
neg
pop
cld
inc
clc
clc
loopne
iret
mov
rol
xor
clc
ret
pop
and
fsubr
ret
xor
mov
mov
mov
nop
sar
pop
jle
loopne
ds
test
je
jne
fistp
jle
mov
jp
aas
mov
push
ds
in
dec
(bad)
cmp
pop
jle
xchg
push
ja
cmps
cmp
stos
fs
jmp
out
fdivrp
mov
xchg
or
aas
mov
(bad)
mov
shl
nop
(bad)
xor
stc
xlat
xor
cld
adc
das
fs
(bad)
(bad)
aas
cdq
pop
(bad)
dec
(bad)
cwde
(bad)
pop
lahf
cld
adc
pop
std
or
sti
jnp
lods
inc
idiv
adc
sti
pop
xor
(bad)
dec
loope
lock
ror
sbb
pushf
loope
xor
shr
pmaxub
sbb
fisttp
and
(bad)
cs
push
jl
outs
fst
les
sub
jle
cld
clc
test
loope
jg
lahf
(bad)
fbld
rol
sbb
pop
push
dec
repz
loope
call
pop
cld
add
push
ret
cmp
gs
inc
jl
sahf
in
and
jle
dec
out
loop
movs
pop
rcr
pop
daa
bound
outs
loope
cmp
(bad)
sbb
js
push
mov
xchg
mov
pop
sbb
push
pop
cld
adc
cmp
cmp
push
add
sub
jnp
inc
pop
std
pop
hlt
(bad)
mov
stc
dec
jle
leave
daa
inc
in
call
mov
repnz
jle
dec
(bad)
pop
or
dec
aad
hlt
ja
mov
rcr
es
adc
mov
outs
(bad)
ins
aas
stc
sbb
pop
lahf
cld
xor
leave
pop
icebp
mov
stc
pop
or
(bad)
fisttp
repnz
or
sub
lahf
lock
ja
in
mov
in
mul
sub
or
mov
sbb
test
gs
jg
cld
clc
cmp
cld
loopne
jle
cmp
sbb
mov
(bad)
test
dec
fsubr
xor
jecxz
loopne
loopne
pop
xor
gs
js
enter
lock
xchg
add
arpl
xchg
cmp
idiv
icebp
ins
push
inc
mov
jmp
inc
pop
test
xchg
cwde
in
ret
(bad)
out
push
cld
std
repnz
sbb
stos
dec
jle
(bad)
and
fwait
movs
div
(bad)
stc
out
std
(bad)
imul
cli
cmp
sbb
out
ja
(bad)
jmp
dec
mov
inc
(bad)
aas
movs
(bad)
aas
cmps
(bad)
mov
(bad)
(bad)
sti
sar
repz
mov
mov
add
(bad)
data16
aas
dec
sub
add
adc
test
das
es
mov
jg
jg
nop
and
mov
call
lea
stc
mov
add
in
dec
call
iret
(bad)
cs
cli
jcxz
jg
std
cmp
jecxz
(bad)
pop
mov
je
sbb
cmovne
inc
mov
pop
dec
cmp
jecxz
aas
cmp
xchg
lock
dec
mov
mov
jg
mov
enter
(bad)
clc
lea
out
xchg
cmps
clc
in
or
(bad)
fld
cld
xchg
dec
jg
fidivr
adc
fadd
pop
push
ror
fist
(bad)
in
and
dec
add
in
and
mov
dec
cld
imul
leave
aas
(bad)
cmps
icebp
jecxz
std
pop
pop
jl
rsqrtps
jmp
inc
jmp
arpl
lods
push
dec
inc
mov
int3
aad
and
mov
sbb
aas
mov
sbb
jmp
ja
jne
fild
cmp
fldcw
cmp
add
mov
in
stc
popf
dec
mov
(bad)
cs
dec
dec
std
mov
jg
fisttp
pusha
sahf
rcl
sahf
rcl
push
enter
fs
(bad)
(bad)
pop
lahf
cld
lea
mov
retf
fisub
jg
sub
mov
aas
stc
or
(bad)
ds
jae
xchg
call
movs
and
mov
sti
mov
xchg
mov
xchg
mov
pop
(bad)
pop
pop
add
mov
or
daa
sub
mov
(bad)
aad
loope
jg
cmp
out
pop
pop
jg
pop
aas
stc
(bad)
leave
mov
outs
stc
leave
(bad)
cmp
not
in
repnz
jp
test
ret
outs
inc
jmp
xchg
xchg
aam
repnz
lahf
repnz
push
mov
or
mov
mov
ja
and
ud0
xchg
jl
jl
push
shl
mov
imul
xor
das
cld
xor
inc
jmp
sub
sub
xchg
ret
test
mov
add
ds
repz
and
xchg
mov
(bad)
cmp
hlt
lahf
cld
adc
pop
test
jmp
(bad)
jecxz
mov
movs
mov
pushf
sbb
(bad)
cmp
hlt
jecxz
nop
dec
not
adc
fist
cli
mov
push
jl
das
repnz
call
cld
xchg
mov
out
shl
(bad)
mov
pop
les
(bad)
movs
mov
mov
dec
jge
daa
cmc
std
call
repz
adc
dec
stc
pop
inc
leave
repnz
mov
cmp
adc
and
inc
jmp
and
pop
sar
into
lahf
cld
jae
shl
push
outs
dec
jo
adc
cld
xchg
xchg
leave
clc
popf
(bad)
sub
js
aas
es
jge
loopne
std
cmp
ds
inc
clc
cld
test
add
and
mov
ds
jnp
fisttp
dec
cdq
cmc
(bad)
aaa
mov
and
repnz
aas
std
std
cmp
and
inc
mov
xchg
inc
push
aam
sbb
xchg
or
dec
xor
ins
cli
mov
pushf
sti
pop
movs
enter
cld
fcomi
jecxz
dec
pop
loop
aas
fwait
push
loop
aas
idiv
cmp
mov
mov
and
std
sahf
inc
mov
dec
call
test
stos
inc
mov
mov
xchg
fistp
dec
scas
cld
out
lahf
cld
fwait
mov
test
das
std
cs
in
shl
pop
(bad)
jbe
loop
cmc
leave
jg
mov
out
adc
jmp
(bad)
jg
in
out
aas
idiv
cld
mov
aaa
movs
leave
clc
lods
ds
(bad)
jg
bound
aaa
mov
stc
push
jle
inc
in
aaa
(bad)
in
std
in
mov
stc
lahf
std
mov
mov
mov
in
cli
add
push
dec
jecxz
and
(bad)
mov
mov
inc
out
cld
cmp
cli
fadd
clc
sub
(bad)
std
scas
(bad)
(bad)
imul
retf
outs
std
sti
and
sbb
push
mov
ja
pop
jmp
cdq
and
push
test
out
jg
sub
(bad)
cs
add
inc
lahf
cld
xchg
mov
or
xchg
repnz
pushf
rcl
fldcw
cld
cs
sbb
outs
clc
mov
fwait
mov
push
lock
mov
loop
div
(bad)
call
aam
sbb
mov
cld
cdq
hlt
iret
(bad)
scas
inc
(bad)
std
push
mov
inc
pop
mov
pop
adc
jecxz
jb
call
cli
xlat
cmps
jg
mov
pop
push
pushf
stc
fbld
pop
nop
xor
xchg
test
popf
jg
pop
jecxz
cld
in
jle
pop
jecxz
call
xchg
dec
sub
iret
and
in
stc
sub
stc
retf
test
cmp
not
sar
(bad)
cmp
mov
call
call
jmp
cld
xor
aas
dec
or
sti
mov
pop
ja
std
scas
dec
mov
mov
(bad)
mov
popf
ja
fstp
lahf
adc
in
jg
cli
sti
pop
cmps
idiv
push
std
cld
pop
sub
dec
mov
cli
std
push
push
(bad)
adc
out
push
fistp
sar
or
fcomip
ja
pop
jmp
dec
(bad)
das
add
call
dec
out
std
push
hlt
fidivr
jg
adc
fwait
sar
lahf
shl
(bad)
cmp
jo
or
cld
bt
mov
scas
jmp
clc
repz
scas
dec
lock
jp
and
ja
jnp
sbb
lods
test
ret
test
jg
jmp
xor
shl
pop
shr
dec
std
jle
in
jmp
push
aaa
sar
jg
cli
std
fbld
ja
out
push
cli
lods
movs
ja
and
stc
scas
push
fcmovnu
sbb
retf
sub
test
dec
hlt
sti
lahf
dec
mov
call
ret
mov
test
mov
xor
adc
sbb
mov
mov
pushf
pop
sar
dec
aam
pop
inc
lahf
std
dec
hlt
ficom
hlt
fstp
ins
iret
jmp
mov
mov
jg
loope
not
aas
inc
je
add
push
mov
aas
mov
adc
dec
jmp
cld
pop
test
jg
js
ror
inc
fwait
lahf
cmps
ds
cli
mov
iret
jle
cmp
rcr
lahf
adc
add
std
iret
push
pop
jg
std
pop
push
fcmovne
or
pop
inc
mov
jge
sbb
out
jg
cli
stc
sub
cmps
(bad)
cmp
out
movs
(bad)
add
idiv
sar
test
cmp
out
dec
call
(bad)
jnp
std
das
mov
cld
xchg
loopne
or
sti
outs
dec
jo
push
fistp
mov
fwait
ds
push
rcr
jg
jle
hlt
stc
aas
inc
in
call
xor
out
pop
and
inc
dec
jmp
(bad)
in
hlt
into
call
sbb
icebp
mov
pop
call
out
fisttp
std
fild
in
out
inc
ins
jg
jmp
cli
stc
sti
shl
sbb
cld
int
std
jg
mov
lahf
dec
jge
adc
std
daa
call
dec
aam
pop
dec
ins
jle
cli
std
aaa
mov
(bad)
ja
idiv
cli
in
or
(bad)
pmuludq
iret
cmps
mov
(bad)
jmp
cli
stc
mov
cli
stc
adc
out
enter
aas
push
fstp
test
pop
inc
hlt
pop
ror
jg
pusha
jecxz
pop
imul
sar
adc
adc
stc
aaa
mov
jge
out
mov
call
jge
aaa
shl
mov
aas
jg
jge
cmp
stc
scas
or
lahf
and
jg
mov
lods
call
sahf
sar
call
sbb
jmp
jne
mov
jp
aaa
mov
cld
fbld
mov
jg
jbe
(bad)
outs
inc
js
pop
aam
push
adc
pop
hlt
neg
xor
rcr
jg
std
jmp
mov
jmp
jae
out
ds
cmps
adc
ret
movs
iret
call
cmc
mov
mov
jno
out
jmp
cmc
(bad)
ja
push
jge
sub
mov
(bad)
aas
sbb
xchg
(bad)
sub
(bad)
jg
loopne
shl
jp
aas
sar
lahf
inc
lahf
aas
cmps
mov
es
dec
lahf
dec
add
inc
jg
push
hlt
stc
imul
(bad)
mov
test
dec
(bad)
stc
hlt
(bad)
pop
xchg
jo
aas
call
jg
(bad)
jmp
lahf
aas
mov
stc
pop
adc
xor
push
jg
inc
xor
call
out
jg
push
add
out
cmps
jbe
add
jns
arpl
mov
std
cld
lahf
xor
mov
lock
cli
sti
lahf
movs
(bad)
push
sti
sub
cdq
jle
and
(bad)
fnstsw
xchg
stc
cmps
scas
jle
aas
(bad)
out
out
mov
pushf
mov
lahf
inc
mov
push
mov
std
scas
hlt
sti
jg
jo
cmp
fistp
jge
xchg
push
jg
and
mov
call
jg
jge
push
stc
aas
sar
ss
jge
out
sub
out
dec
call
pusha
cld
cmps
aam
fbld
repz
addr16
std
push
cmps
test
idiv
fisubr
jmp
adc
fild
cld
test
repz
movs
ja
mov
cld
mov
fdivrp
inc
in
jg
cli
dec
pop
call
call
mov
std
jmp
inc
sti
scas
inc
arpl
adc
out
addr16
jg
xor
imul
adc
sti
shl
mov
std
call
jmp
jecxz
and
inc
jmp
das
or
hlt
ja
xor
pop
call
hlt
sti
lahf
inc
aas
jg
jmp
std
pop
movs
idiv
std
jmp
jle
dec
pavgb
movs
jg
scas
leave
xabort
les
push
jle
(bad)
outs
(bad)
jmp
(bad)
aaa
mov
dec
(bad)
call
cwde
(bad)
jmp
call
xchg
mul
hlt
push
pop
and
inc
call
dec
(bad)
call
scas
loope
loopne
scas
pop
ret
lods
sar
hlt
(bad)
jg
(bad)
call
(bad)
jmp
(bad)
inc
inc
mov
movs
jmp
mov
dec
in
hlt
(bad)
cmp
push
cli
dec
push
call
std
pop
dec
push
imul
pop
dec
(bad)
jmp
call
dec
movs
(bad)
inc
mov
(bad)
pop
xor
mul
(bad)
(bad)
xor
std
xor
mov
(bad)
scas
shr
ja
dec
(bad)
fild
call
jg
(bad)
jg
call
(bad)
inc
call
dec
(bad)
call
(bad)
jg
std
jmp
hlt
(bad)
mov
sar
dec
cli
(bad)
mov
jmp
(bad)
mov
hlt
(bad)
inc
fcmovbe
pop
std
push
(bad)
jmp
push
std
(bad)
ds
push
mov
mov
mov
xlat
hlt
call
hlt
(bad)
aas
sahf
dec
inc
in
das
mov
(bad)
mov
sar
dec
cli
(bad)
mov
jmp
(bad)
mov
hlt
call
(bad)
push
cli
jmp
(bad)
inc
jnp
inc
hlt
jmp
call
jmp
push
push
hlt
(bad)
aas
xchg
(bad)
inc
sar
push
call
(bad)
jmp
std
(bad)
out
mov
(bad)
jg
(bad)
(bad)
out
sar
push
cli
(bad)
inc
(bad)
fucomip
(bad)
mov
dec
(bad)
jmp
jmp
std
call
(bad)
jge
call
std
(bad)
fcomi
jmp
jmp
jg
call
jmp
std
dec
hlt
(bad)
mov
sar
call
(bad)
fisttp
jmp
jmp
(bad)
fbld
(bad)
call
(bad)
mov
mov
call
(bad)
fbld
pop
sar
lahf
sar
lahf
sar
jg
(bad)
inc
sar
jg
(bad)
dec
(bad)
inc
cli
call
jmp
jmp
(bad)
(bad)
mov
(bad)
dec
sar
dec
(bad)
jmp
jmp
call
(bad)
jg
repnz
jg
cli
jmp
dec
(bad)
fbld
(bad)
cmps
(bad)
mov
hlt
jmp
std
jmp
(bad)
dec
(bad)
(bad)
cmp
call
call
jmp
hlt
(bad)
jg
(bad)
dec
(bad)
call
(bad)
jmp
call
(bad)
jg
(bad)
(bad)
cmp
(bad)
fistp
(bad)
out
sar
out
sar
sar
std
xchg
jmp
das
sbb
push
mov
add
repnz
movs
ffreep
(bad)
jg
std
dec
lock
nop
clc
icebp
pop
dec
push
clc
cmps
jle
lahf
stc
in
jecxz
in
daa
jg
in
dec
dec
pop
std
sub
jmp
and
test
jg
test
jg
mov
and
call
cld
idiv
imul
cld
imul
and
in
jg
pop
and
cwde
adc
jl
pop
cld
not
cld
adc
dec
push
push
jle
adc
sbb
movs
jmp
lock
fist
shr
jg
sbb
pop
inc
adc
(bad)
or
nop
jecxz
cmp
dec
mov
retf
hlt
loopne
ror
xlat
mov
mov
sbb
pavgw
jg
ds
test
lock
loope
aas
or
mov
mov
or
(bad)
nop
in
jmp
mov
pop
(bad)
push
xchg
clc
add
call
lock
jmp
add
and
ds
call
mov
mov
mov
rol
sub
loopne
xlat
xchg
add
std
sti
jle
pop
jecxz
loopne
push
leave
fdivr
mov
in
daa
icebp
in
jg
fbstp
fstp
cld
test
mov
mov
clc
daa
lock
paddd
push
mov
lock
sbb
loopne
rol
cmp
cld
gs
in
das
loop
jecxz
call
ins
push
aas
jle
jno
div
clc
in
ja
outs
xor
outs
mov
mov
(bad)
pop
mov
pop
ffreep
(bad)
(bad)
loopne
jle
cmp
ret
xlat
mov
lock
stos
addr16
arpl
clc
adc
xor
ffree
pop
mov
das
mov
(bad)
cmc
int
(bad)
fistp
jle
in
jle
idiv
adc
mov
pop
mov
lock
add
icebp
jecxz
dec
out
push
xchg
loope
iret
lock
or
sbb
scas
inc
or
std
sub
sub
sti
ret
mov
jle
cmpxchg
js
jge
test
lods
xlat
clc
in
push
loopne
xor
neg
mov
ds
cld
add
mov
pop
int3
movd
add
aas
clc
sub
jle
jl
test
shr
jmp
dec
les
jle
div
fistp
add
add
std
imul
pop
les
test
sti
xchg
jns
hlt
fucomi
repnz
sbb
gs
loopne
(bad)
pop
pop
jl
lock
loop
call
push
(bad)
adc
mov
stc
shr
pop
call
pop
pop
loopne
mov
mov
cld
not
clc
icebp
fisttp
(bad)
icebp
fcmovnb
clc
in
adc
neg
loop
fist
jecxz
lds
sub
sti
(bad)
icebp
sbb
xor
mov
outs
mov
pusha
ror
inc
test
(bad)
jno
imul
loop
aas
or
inc
mov
pop
clc
in
out
cmps
fistp
fcomip
loopne
rol
clc
jmp
xchg
loopne
clc
adc
jg
jle
sti
sar
dec
shr
in
movnti
lock
lock
adc
jae
(bad)
mov
jmp
fidivr
fbstp
cld
test
adc
div
in
ds
inc
fsubr
mov
adc
sbb
mov
lock
(bad)
cmp
cmc
fucomip
loopne
jmp
cli
loopne
loop
call
mov
cld
neg
cld
jecxz
fisttp
mov
pop
inc
mov
inc
neg
(bad)
cmp
(bad)
mov
(bad)
inc
cld
test
cmc
pop
mov
inc
cld
mul
shr
retf
faddp
lahf
xchg
(bad)
push
xor
arpl
fistp
scas
(bad)
and
jbe
fild
shr
in
inc
test
fld
sbb
repz
out
xchg
jle
cld
test
rcl
push
sbb
mov
(bad)
sub
xor
lock
mov
clc
loopne
ret
xor
and
mov
rcl
aas
fcomp
add
mov
jae
imul
loope
jg
mov
clc
lods
shl
jle
aaa
icebp
fcmovnu
(bad)
fistp
cld
div
in
(bad)
push
in
ja
sbb
and
jg
jle
xchg
jg
jle
paddd
adc
xchg
mov
sbb
pop
jecxz
aas
pop
mov
add
sbb
jg
loopne
sti
fbstp
jecxz
add
pop
lahf
jecxz
aas
paddsw
ret
outs
jg
mov
jb
jbe
mov
ja
outs
jo
movd
(bad)
loop
fist
mov
adc
push
pop
(bad)
sti
scas
cld
mov
ret
or
fstp
cld
mul
mov
add
call
inc
fist
out
cli
xlat
fs
loop
mov
lock
shl
scas
ror
and
(bad)
sbb
xchg
lds
cli
push
jle
mov
mov
js
lock
stc
xor
cld
iret
sar
dec
imul
sbb
mov
or
jmp
lock
imul
jmp
int3
and
dec
mov
mov
shr
movs
(bad)
dec
hlt
(bad)
mov
sar
(bad)
cmp
(bad)
mov
jmp
(bad)
jg
(bad)
jmp
call
jl
fild
(bad)
jg
cli
dec
dec
call
outs
sar
pop
sar
jg
cli
(bad)
cmp
jg
(bad)
mov
hlt
(bad)
aas
xchg
(bad)
jmp
cli
call
(bad)
call
jmp
call
movs
(bad)
push
mov
(bad)
hlt
call
(bad)
push
(bad)
mov
sar
jg
cli
call
inc
dec
std
dec
cli
push
in
xor
mov
mov
(bad)
sar
(bad)
stc
pop
fcmovnb
add
sub
(bad)
dec
cli
jg
aaa
(bad)
sbb
int3
push
scas
leave
ds
inc
ds
xor
mov
cmp
push
clc
in
dec
jg
cld
stc
scas
cmps
jg
mov
mov
dec
pop
sbb
mov
daa
jmp
bnd
ja
xchg
clc
icebp
aaa
cmps
and
daa
jg
mov
clc
in
dec
call
stc
repz
call
cli
daa
cmps
and
sub
jmp
dec
xor
aam
retf
mov
call
inc
or
and
shl
mov
daa
das
mov
jg
jle
mov
inc
idiv
in
test
fadd
add
xchg
mov
inc
push
adc
sub
mov
stc
mov
sbb
dec
div
jecxz
jg
mov
inc
shr
idiv
clc
sti
lock
test
mov
or
das
inc
mov
clc
loopne
rol
cmp
add
pop
cld
mov
icebp
mov
paddd
jl
(bad)
outs
jg
jle
std
lock
cmc
loopne
jle
fcomi
(bad)
cmp
cmp
inc
jl
push
repz
icebp
shr
mov
movlps
lock
cmps
add
aaa
(bad)
outs
jmp
jle
mov
mov
jo
jg
aad
inc
pop
jmp
fsubr
ja
in
dec
(bad)
outs
dec
jle
mov
jg
ds
pop
lock
mov
(bad)
(bad)
xor
pop
icebp
fstp
cld
imul
ds
or
call
pop
cld
test
jmp
(bad)
xor
fisttp
lock
or
jle
or
idiv
(bad)
lahf
pop
mov
dec
cld
std
fild
ret
not
loop
daa
clc
in
scas
inc
fwait
add
jbe
mov
jecxz
mul
jg
mul
jg
fcomip
loopne
shl
xor
dec
fistp
jl
jb
stos
loope
std
cmp
(bad)
outs
mov
loope
std
inc
call
ds
mov
(bad)
pop
mov
aas
push
lahf
std
and
or
or
outs
shr
arpl
adc
sub
and
ja
jg
notrack
icebp
stc
pop
sbb
pop
mov
mov
fadd
and
mov
pop
loop
mul
call
push
pop
bnd
lea
sahf
loopne
aas
add
loopne
aas
or
mov
out
les
add
sub
neg
loopne
mov
loope
in
cmp
inc
pop
retf
imul
mov
ror
mov
cwde
push
or
cmps
adc
jg
sub
(bad)
mov
gs
leave
fistp
mov
sbb
ffreep
pop
lock
pop
dec
imul
lds
push
call
(bad)
call
mov
stc
mov
enter
pop
loope
push
pop
stos
call
jg
mov
cmp
std
fbstp
out
jae
ins
jl
scas
loop
and
push
cmp
(bad)
push
pop
cmp
aaa
cld
fwait
outs
loope
push
mov
(bad)
ins
pop
dec
xor
mov
jmp
(bad)
das
cmp
mov
cmp
jb
das
loop
inc
mov
aas
xor
rol
sbb
sbb
mov
call
and
pop
jl
jnp
cld
ins
clc
loopne
lds
jg
ds
int
(bad)
push
cld
cmp
clc
repz
mov
cld
imul
loope
aas
or
ds
xor
(bad)
add
bndldx
loop
add
in
push
dec
lock
cmp
lock
in
outs
ret
jecxz
xor
adc
jge
movd
push
add
and
out
clc
lea
mov
pop
xchg
pop
(bad)
inc
clc
xchg
push
rol
add
ss
adc
test
mov
daa
loop
jg
mov
push
rcr
jmp
leave
mov
sub
sub
outs
(bad)
outs
lods
add
inc
add
pop
sbb
jge
mov
aas
jno
loope
sbb
dec
sbb
cmps
call
ds
movd
sub
jecxz
cmp
pop
xlat
adc
xchg
inc
sbb
xor
daa
and
lods
add
inc
add
data16
inc
sub
inc
mov
test
mov
jle
(bad)
loopne
ror
(bad)
fcomip
loopne
ret
xlat
lods
into
call
iret
loop
(bad)
iret
push
paddd
lock
loope
outs
sbb
aad
pop
mov
inc
mul
mov
push
cld
popa
clc
icebp
jecxz
mov
pop
loop
dec
sbb
iret
jle
jecxz
repnz
dec
loope
cmp
cld
push
(bad)
adc
hlt
ds
jnp
jecxz
cmp
imul
mov
cli
(bad)
cmp
inc
shl
pop
mov
sbb
stos
lods
jle
loope
out
pop
dec
inc
leave
xor
out
sbb
xchg
mov
mov
(bad)
jmp
jb
cmp
div
call
std
pop
jp
push
fdiv
aas
jb
mov
jge
mov
dec
aas
inc
or
add
pop
mov
dec
sub
aam
das
(bad)
(bad)
jg
mov
mov
(bad)
pop
dec
jmp
repnz
cmps
lock
stc
(bad)
jle
pop
repnz
aas
hlt
mov
mov
pop
mov
out
sbb
sub
jne
xchg
mov
iret
dec
push
cmps
jmp
mov
add
arpl
jae
jge
pop
xchg
cli
cli
dec
and
lds
shr
xchg
jle
clc
jg
(bad)
outs
lock
mov
sub
fild
clc
sbb
sub
cli
cli
retf
shl
mov
add
clc
in
movnti
jle
xchg
cmp
cmp
loopne
test
aas
ret
sbb
aas
mov
mov
jle
sbb
retf
and
dec
clc
daa
lock
divps
cld
(bad)
loopne
inc
fstp
clc
in
das
(bad)
outs
jg
jle
jae
call
cld
fcom
mov
lahf
shl
mov
aas
ret
ins
dec
xor
pop
adc
pop
mov
lods
mov
or
out
repnz
adc
lock
jl
mov
ja
sbb
nop
(bad)
(bad)
in
inc
and
inc
in
mov
jmp
mov
out
repnz
lahf
cld
retf
ins
fmul
(bad)
cld
in
ds
daa
jle
iret
ds
inc
push
in
dec
(bad)
sahf
(bad)
jmp
inc
(bad)
retf
dec
(bad)
fcmovu
gs
xchg
mov
(bad)
and
jnp
stc
mov
xor
in
stc
pop
data16
cld
or
call
stc
xchg
cs
es
das
fwait
mov
out
lahf
ret
and
js
jg
adc
lock
movd
cmp
div
fstp
fistp
shr
jle
pop
icebp
fstp
xchg
jle
mov
data16
loopne
mov
push
jle
fcomp
mov
sahf
pop
cld
mov
add
idiv
jg
dec
in
mov
lock
loope
dec
pop
arpl
sub
call
dec
cmp
pusha
je
dec
dec
or
jmp
dec
into
popa
push
out
dec
inc
sub
(bad)
sar
or
(bad)
cs
cld
pop
sbb
and
clc
ins
push
jle
pop
mov
clc
pop
shr
repz
aas
lock
jle
cmps
cmp
pop
push
dec
lahf
cld
xchg
mov
das
test
mov
out
repnz
push
in
daa
(bad)
fsubr
repnz
dec
cmp
and
fucomp
lock
aas
hlt
or
stc
sti
jg
fucomip
xchg
mov
xchg
mov
ds
fwait
leave
aas
clc
jmp
mov
jmp
daa
jg
out
repnz
gs
xchg
aas
fwait
es
dec
call
iret
dec
(bad)
in
in
std
in
cmps
call
out
jge
xchg
(bad)
sub
icebp
adc
mov
cld
mov
clc
add
and
pushf
sub
cmp
and
mov
rol
lock
out
mov
mov
loopne
cmps
clc
icebp
adc
mov
mov
(bad)
idiv
or
das
pop
xor
clc
icebp
mov
mov
clc
setns
ss
clc
lea
(bad)
adc
addr16
arpl
(bad)
loope
out
jg
jle
inc
jg
jle
in
adc
(bad)
(bad)
mov
push
mov
fnstsw
hlt
ja
iret
jle
(bad)
call
pop
inc
push
push
std
mov
call
mov
not
dec
loope
sar
jg
std
dec
xchg
sar
mov
jecxz
xor
pop
mov
adc
pop
pop
pop
icebp
jg
jg
cld
clc
outs
shr
lock
dec
adc
neg
idiv
adc
jmp
repnz
ret
cld
test
add
ret
mov
(bad)
jae
push
sbb
fistp
pop
cld
push
ins
test
lock
clc
hlt
dec
dec
aas
(bad)
(bad)
aas
ss
std
push
mov
inc
mov
pop
nop
lock
jle
inc
icebp
fucomi
mov
fcomp
or
ins
mov
arpl
sbb
pop
or
cmp
fdiv
sahf
std
mov
jg
inc
fldenv
call
outs
repz
jg
leave
aam
inc
jg
sbb
xchg
xchg
cmp
sbb
adc
(bad)
(bad)
cld
stc
idiv
dec
movs
nop
jle
sub
outs
loope
sub
loope
mov
loope
mov
inc
fs
adc
and
and
data16
mov
mov
retf
adc
jae
clc
outs
shl
aas
neg
mov
das
imul
daa
repnz
leave
lahf
dec
enter
cld
stc
sbb
repz
jg
ja
jg
cli
in
std
in
enter
ins
cld
test
jmp
retf
shl
shr
bnd
repnz
std
cs
daa
jg
out
repnz
jg
xchg
std
cs
sub
aas
out
mov
adc
adc
inc
fist
mov
jecxz
cmp
push
pop
mov
xor
dec
cmp
je
outs
test
idiv
jle
outs
push
lahf
cld
sbb
dec
cmc
cli
das
sar
sar
inc
pusha
dec
adc
fist
inc
xchg
mov
inc
mov
cmc
pop
xchg
lods
(bad)
call
(bad)
lahf
dec
call
out
lock
lahf
hlt
mov
jno
mov
jmp
sub
jmp
clc
(bad)
inc
cmc
jg
cdq
sti
popf
jg
fistp
xchg
repnz
out
adc
inc
mov
fldcw
mov
cli
scas
jno
imul
jnp
imul
jns
xchg
xchg
fisttp
cmp
rcr
test
test
clc
jmp
dec
call
cmc
outs
mov
dec
(bad)
clc
sub
aam
repnz
cmps
jmp
pop
sub
mov
cli
sbb
mov
sbb
cmp
jg
cmp
push
inc
call
fidivr
(bad)
icebp
or
mov
mov
mov
fdiv
clc
in
es
jle
pshufw
mov
xchg
je
(bad)
mov
or
jno
cmps
fist
outs
cli
cmp
outs
cli
lods
mov
mov
ja
cmp
pop
jg
stc
daa
jg
or
(bad)
or
std
xor
jbe
aas
and
fild
jge
sbb
stc
daa
call
outs
sti
leave
aas
dec
fdivr
(bad)
cld
mov
dec
push
neg
in
mov
(bad)
outs
xchg
jb
mov
sub
aaa
daa
mov
mov
cli
sbb
fisttp
movs
pop
lock
aas
dec
les
or
jle
bound
out
jmp
out
adc
clc
in
jg
(bad)
inc
cld
fstp
push
jne
mov
inc
mov
cld
xchg
mov
add
or
pop
loop
sbb
(bad)
cmps
(bad)
fs
jg
leave
aad
pushf
(bad)
sbb
lock
cld
cmps
jmp
push
inc
push
in
cmp
in
(bad)
pop
jle
xchg
jg
shr
scas
mov
cli
fbld
cmps
idiv
imul
xor
out
xchg
jns
aaa
vpaddw
div
jmp
std
lahf
cmps
cmp
dec
das
jle
mov
sbb
sbb
inc
jae
xchg
out
pop
ins
cwde
pop
rcr
cmp
enter
jmp
out
cmp
icebp
jg
call
std
sar
xor
stc
dec
dec
sub
add
cld
(bad)
in
test
fisttp
mov
(bad)
jle
(bad)
ja
outs
cld
cmps
(bad)
cmp
adc
push
mov
out
dec
mov
addr16
jp
aaa
cli
in
std
add
lahf
cld
fnsave
test
cld
xchg
out
cmp
ficomp
cmc
xchg
rol
add
sub
cmp
fisttp
cli
sti
ja
fnstsw
(bad)
and
sbb
in
cli
loop
std
jne
fbld
lock
cmps
pop
retf
mov
in
jns
fdivrp
or
dec
(bad)
fcmovnu
fiadd
aam
addr16
imul
sbb
int3
fisttp
(bad)
xchg
fild
dec
inc
push
cld
cs
imul
cli
loop
jmp
lahf
cli
popf
clc
inc
ins
add
mov
cmp
std
pop
mov
mov
dec
pop
outs
jge
xor
sub
mov
scas
cld
push
gs
mov
in
icebp
pop
out
cld
pop
mov
call
mov
cld
sbb
sti
in
dec
dec
loope
(bad)
idiv
push
inc
sahf
hlt
xor
lea
(bad)
cli
or
outs
movs
fistp
push
dec
xchg
call
shl
add
fcmovnbe
out
push
jge
lahf
sar
aas
cmps
iret
lahf
shl
jg
std
jg
mov
dec
(bad)
(bad)
fucomip
(bad)
jg
jge
stos
test
test
pop
hlt
fucomp
inc
out
lods
call
sti
xor
out
jg
jle
xchg
jle
lods
hlt
mul
hlt
rep
mov
mov
hlt
stc
out
dec
mov
xchg
cdq
shr
jmp
std
cld
inc
or
outs
inc
in
jle
cli
cld
mov
call
iret
jg
(bad)
call
jg
hlt
call
mov
push
inc
retf
std
or
(bad)
call
std
call
sar
iret
jmp
lahf
cmps
lahf
dec
loop
sub
(bad)
(bad)
mov
pusha
jl
(bad)
jmp
(bad)
and
cmp
out
mov
in
inc
cli
out
cmps
call
std
call
imul
outs
sbb
imul
fist
xor
int
dec
(bad)
call
std
inc
jge
shl
cli
push
ds
lahf
std
sub
fidivr
dec
mov
jmp
(bad)
dec
cli
cld
lahf
mov
mov
call
stc
xor
(bad)
(bad)
outs
inc
add
jmp
mov
test
inc
shl
mov
ja
add
push
std
inc
out
inc
(bad)
call
jle
ror
call
mov
(bad)
fbld
js
adc
icebp
pop
add
std
out
mov
pop
shr
mov
movs
mov
cli
(bad)
out
inc
jg
shl
pop
inc
xor
cli
out
aaa
movs
(bad)
jmp
dec
call
cli
mov
(bad)
mov
mov
jge
imul
mov
call
loope
jmp
out
jg
std
(bad)
cmps
shl
jmp
aas
mov
(bad)
cmp
jle
(bad)
into
mov
push
sti
pop
dec
mov
xor
fnstcw
iret
jg
fnstsw
ja
std
pop
es
mov
repz
adc
sbb
jle
cli
jmp
(bad)
call
(bad)
mov
cli
call
push
xlat
adc
in
jo
sahf
lahf
mov
sbb
mov
cli
jg
imul
mov
pop
repnz
ds
std
jmp
xor
sar
dec
cli
(bad)
mov
jmp
pop
xchg
idiv
dec
(bad)
call
(bad)
jmp
std
pop
retf
and
nop
pop
clc
pop
call
cmp
inc
hlt
jg
fiadd
inc
inc
and
add
jne
cli
dec
sar
call
call
inc
(bad)
call
inc
aam
push
sar
mov
lock
jmp
jecxz
repz
jg
loop
pop
hlt
(bad)
call
jg
std
call
(bad)
mov
cmps
jmp
push
hlt
jmp
jmp
(bad)
call
(bad)
jg
cli
(bad)
out
jmp
lds
jmp
lahf
jge
and
lahf
lea
cmp
jmp
out
iret
sub
jmp
clc
and
(bad)
xchg
fnstsw
mov
imul
jns
mov
and
jns
mov
jns
mov
xor
mul
nop
mov
dec
leave
mov
dec
cld
shl
mov
into
xor
idiv
clc
cld
pop
out
loope
dec
mov
xchg
adc
(bad)
cs
pushf
clc
mov
sub
fld
jl
pop
mov
fs
mov
out
loopne
lds
cmp
in
xchg
sub
fbld
test
out
jns
scas
jecxz
fild
mov
sahf
jae
dec
loop
mov
jg
dec
cld
ficom
or
(bad)
js
mov
js
leave
or
clc
ins
movd
jle
push
mov
pop
add
and
xor
jge
repz
icebp
add
and
in
pop
outs
dec
lock
fisttp
lock
cmp
jmp
(bad)
xor
movd
cld
not
jecxz
pop
or
xchg
lock
dec
pop
mov
jb
aas
and
daa
loop
dec
sub
(bad)
jge
test
dec
inc
std
out
jmp
sbb
inc
js
(bad)
pop
jl
mov
icebp
mov
(bad)
jp
clc
popf
paddd
cld
cmp
mov
cs
cmp
xchg
icebp
into
pop
lea
dec
jl
std
cmp
aas
fiadd
call
test
movs
push
jle
push
clc
xchg
aas
imul
jne
cmp
(bad)
aas
cli
xor
(bad)
fbld
jg
(bad)
jg
(bad)
push
scas
loope
add
std
xor
std
sbb
cmpxchg
call
jmp
cwde
jmp
add
(bad)
cmp
(bad)
(bad)
out
jmp
jo
pusha
sub
(bad)
int
xor
leave
rcr
idiv
or
mov
jg
jle
das
cmp
dec
adc
xchg
adc
cld
outs
lahf
cld
pop
pushf
push
and
mov
or
sub
in
jg
inc
sbb
mov
inc
cmp
sub
daa
jg
and
(bad)
jl
inc
(bad)
ins
repnz
je
mov
in
in
push
fs
ins
mov
cld
loope
mov
cld
bound
retf
adc
jle
add
lods
(bad)
clc
icebp
fistp
cld
fdivrp
aaa
repnz
out
dec
jbe
push
mov
or
movd
into
sbb
lock
pop
mov
pop
lahf
push
cld
es
icebp
push
pop
mov
icebp
cmc
dec
cmps
call
inc
cld
cmp
not
jg
sahf
movs
imul
mov
pop
xchg
(bad)
cld
lahf
sar
(bad)
arpl
(bad)
std
sti
movs
sbb
ins
mov
int
dec
retf
ins
(bad)
cmp
pop
push
loop
cwde
sub
not
repz
pushf
cmc
mov
or
aaa
adc
(bad)
push
cmp
rcl
xor
jg
jns
jg
sub
aas
cdq
inc
mov
sahf
mov
jns
leave
pop
(bad)
fistp
add
and
in
mov
adc
pop
mov
and
dec
lock
clc
icebp
call
rol
icebp
lods
cmp
jb
ret
mov
cld
cs
jecxz
cmp
in
call
(bad)
cmp
jg
jbe
jne
jg
pop
inc
fcomp
pop
mov
xchg
xchg
(bad)
cwde
pop
cli
(bad)
fstp
test
xchg
(bad)
fild
call
mov
mov
pop
inc
scas
mov
push
mov
jg
ins
retf
jg
and
jg
cdq
xchg
hlt
ja
dec
test
sub
xchg
xchg
or
dec
test
mov
mov
fcomip
fist
popa
(bad)
cmc
daa
jg
inc
retf
lds
movs
ret
xor
movs
jg
mov
imul
hlt
ja
in
loopne
out
adc
fsub
aaa
push
sub
stc
popf
sub
les
lock
sar
sub
ins
sub
mov
xchg
(bad)
jno
jmp
jnp
jb
aaa
repnz
cmc
fwait
push
pop
mov
cld
das
and
mov
ds
movd
inc
push
and
jg
dec
(bad)
aad
inc
xor
inc
adc
(bad)
fsub
call
outs
inc
jl
pop
jle
mov
std
dec
ds
jnp
daa
mov
addr16
push
mov
ror
repnz
aaa
cli
pop
jle
into
ins
cld
jne
sbb
lds
scas
mov
call
les
jl
xor
fcomip
sub
dec
and
jecxz
and
cld
cmps
mov
and
cmc
outs
repz
adc
or
or
jnp
and
shr
push
and
or
(bad)
(bad)
push
hlt
out
das
mov
jb
and
fst
(bad)
out
cmp
vpcomud
pop
mov
sar
cld
scas
mov
(bad)
cmp
(bad)
arpl
out
mov
imul
push
mov
call
mov
enter
call
repnz
in
sti
add
dec
and
mov
jle
jmp
(bad)
(bad)
mov
sub
jg
fldenv
loopne
loopne
pop
push
retf
nop
add
cmc
cmp
sti
in
xchg
jle
in
in
xor
add
or
(bad)
mov
(bad)
pop
call
(bad)
aas
movs
mov
mov
jg
xor
and
aas
(bad)
in
(bad)
in
aas
stc
das
jle
push
clc
leave
jg
fstp
(bad)
repnz
jnp
fist
(bad)
(bad)
adc
out
inc
lods
hlt
out
cld
cs
adc
and
and
outs
cld
leave
jg
in
fcomip
xchg
jg
mov
lea
mov
loopne
inc
add
cli
lahf
icebp
mov
jg
inc
sbb
(bad)
dec
dec
pop
lock
aas
idiv
jle
ud0
imul
lahf
pop
pop
jmp
push
cmp
test
sub
cld
das
mov
cmp
xchg
std
cs
aam
lock
dec
jg
(bad)
sti
sub
xchg
jmp
ja
mov
scas
cli
lahf
xchg
or
das
jg
sahf
test
dec
fsubr
lahf
jmp
(bad)
call
mov
adc
cld
iret
(bad)
or
jmp
stc
outs
js
aad
inc
inc
fs
icebp
jl
aas
fist
cmp
xor
(bad)
hlt
repz
scas
dec
push
jle
sbb
(bad)
dec
call
(bad)
push
cli
(bad)
mov
hlt
repz
push
nop
cli
add
call
movs
fistp
pop
push
or
shl
or
dec
iret
jg
std
std
das
std
push
adc
inc
(bad)
jg
mov
test
ja
mov
ds
jl
out
push
idiv
aas
jmp
cli
stc
pop
sar
jg
pusha
cld
dec
(bad)
(bad)
mov
pop
inc
add
dec
shr
mov
call
sti
aas
call
das
call
scas
cmps
(bad)
jmp
cmc
and
stc
stos
jmp
jmp
(bad)
out
sar
hlt
(bad)
fist
out
lahf
movs
iret
jle
pop
push
add
mov
mov
aas
scas
call
jge
mov
fcomip
xlat
adc
not
hlt
(bad)
jg
(bad)
add
mov
rcr
call
std
jmp
cmps
out
push
jmp
adc
stc
popf
fild
dec
add
dec
jg
or
adc
fwait
shl
cmp
jmp
jp
inc
lahf
hlt
repz
movs
(bad)
inc
hlt
(bad)
dec
jg
sbb
mov
push
std
cld
xchg
jle
mov
jg
aas
std
std
pop
out
dec
mov
fisttp
cmp
(bad)
call
call
jg
jnp
out
mov
xchg
(bad)
(bad)
cli
jl
jo
call
pop
inc
aas
jg
cli
(bad)
test
hlt
repz
lahf
mov
(bad)
aas
sar
dec
cmc
sub
pop
jle
mov
or
idiv
pop
cmp
fisttp
jno
clc
call
(bad)
(bad)
jg
pop
inc
lods
loopne
inc
(bad)
mov
call
inc
sbb
std
xor
paddw
cmps
sar
loope
shr
(bad)
dec
(bad)
aas
inc
(bad)
inc
jmp
and
std
dec
std
(bad)
aas
cmps
(bad)
call
(bad)
call
(bad)
inc
std
call
and
rol
inc
inc
call
pop
or
pop
movs
cmps
jmp
mov
sti
popa
int
mov
pop
dec
(bad)
jmp
call
jmp
xlat
xchg
mov
(bad)
std
mov
mov
xchg
jg
mov
jle
aas
nop
call
loop
inc
or
paddd
cmp
dec
jg
imul
cs
hlt
jg
xchg
sub
push
dec
push
dec
in
mov
repz
lock
fild
mov
out
clc
pop
cmps
in
(bad)
xchg
mov
inc
jp
scas
and
xchg
jo
inc
retf
or
jns
ja
in
and
out
(bad)
movs
or
(bad)
movs
xor
inc
push
ror
dec
and
mov
mov
ds
add
jecxz
cmp
jge
jecxz
jbe
sub
stc
mov
adc
popw
lahf
mov
sub
mov
ja
jecxz
aas
fadd
(bad)
pop
enter
retf
outs
jb
cmp
(bad)
hlt
loopne
cld
mov
clc
jecxz
lods
and
rol
icebp
sub
jecxz
sar
or
push
(bad)
and
jo
paddd
das
loop
outs
ja
dec
loope
mov
xchg
sbb
jnp
cld
jne
icebp
or
(bad)
jb
cmp
clc
or
mov
aam
pop
(bad)
(bad)
sub
test
sbb
clc
lea
(bad)
clc
cld
cmpps
icebp
shl
clc
jno
xor
cld
pop
jb
inc
outs
jecxz
inc
pop
sbb
imul
mov
or
jle
cli
int
enter
(bad)
cli
mov
xchg
(bad)
out
and
mov
imul
stc
int
(bad)
mov
retf
(bad)
(bad)
xor
xor
dec
inc
(bad)
jle
xlat
mov
inc
mov
push
adc
imul
ins
cli
call
(bad)
jmp
jmp
and
xchg
(bad)
xchg
jo
xchg
push
and
call
dec
mov
sub
in
ins
out
xchg
fs
jg
mov
sub
or
inc
dec
ror
nop
push
hlt
fwait
jge
dec
cld
dec
in
(bad)
jle
cld
adc
and
dec
leave
ins
sti
mov
stc
icebp
daa
jg
(bad)
aas
lahf
pop
idiv
fwait
cld
cmp
xchg
sar
fs
ins
jmp
leave
add
mov
sub
std
movs
pusha
xchg
dec
gs
cld
mov
repnz
leave
jg
sub
aas
xchg
repnz
xchg
mov
cld
loopne
aas
push
sub
enter
sub
clc
scas
sub
clc
iret
leave
sbb
jg
mov
loopne
aas
lods
fdivr
mov
xor
(bad)
in
cld
in
imul
ret
push
(bad)
inc
(bad)
fild
pop
inc
(bad)
in
pop
inc
(bad)
pop
inc
push
fstp
pop
ficomp
mov
inc
push
cli
mov
sub
jg
call
cmp
cmp
cld
addr16
div
ins
repnz
cld
xchg
mov
retf
ret
outs
(bad)
jmp
(bad)
push
mov
(bad)
(bad)
fcomip
xlat
jo
repnz
inc
(bad)
push
xlat
or
into
jge
call
fisttp
(bad)
jle
sub
mov
pop
adc
jb
mov
stc
add
push
scas
push
stos
std
ret
adc
cld
std
mov
aaa
imul
daa
jg
outs
inc
jle
mov
dec
mov
jmp
add
stc
jg
cmp
sbb
sub
push
push
aaa
mov
retf
das
and
stc
sbb
push
std
mov
mov
push
aas
cmc
call
inc
in
and
les
inc
in
clc
fstp
outs
shl
inc
(bad)
pop
leave
sbb
jg
callw
cmps
sti
pop
imul
mov
mov
xchg
mov
cld
(bad)
mov
aam
cli
jg
fistp
(bad)
or
frndint
in
jmp
push
xor
jp
ret
cmp
call
jmp
or
test
mov
cmp
pop
adc
mov
mov
mov
mov
and
dec
mov
pop
(bad)
(bad)
dec
mov
(bad)
cld
mov
jg
add
arpl
(bad)
inc
xchg
sar
daa
dec
outs
fistp
shr
outs
jle
daa
jmp
outs
dec
jmp
mov
outs
sti
leave
mov
out
cld
into
lahf
cld
fwait
mov
or
pop
je
stc
xlat
sub
sti
(bad)
outs
sti
sbb
cli
cmps
mov
(bad)
rcr
lock
mov
cmp
call
movs
inc
ficom
sbb
test
aas
(bad)
sbb
out
clc
in
daa
and
jge
das
enter
movs
cmp
sbb
adc
and
movs
mov
(bad)
adc
popf
fild
sbb
jg
pop
xor
popf
ds
push
jle
dec
inc
fucomip
xchg
jg
xchg
fcomi
jmp
push
lahf
and
repz
push
call
dec
sub
arpl
mov
lods
cmp
loopne
and
mov
out
mov
(bad)
dec
enter
leave
shl
idiv
inc
jmp
adc
call
std
fbld
(bad)
scas
mov
jg
lds
imul
jmp
out
aas
dec
lahf
std
mov
out
cld
cmps
add
mov
fistp
cli
std
pop
mov
dec
in
jmp
jge
lahf
jmp
hlt
repz
sar
xor
stc
scas
adc
scas
call
repz
shl
shr
sub
jg
std
cmp
mov
jmp
imul
mov
xchg
jle
cmps
iret
pop
sar
jg
mov
push
call
cld
addr16
fbld
das
jmp
std
aaa
hlt
repz
mov
jg
mov
cli
(bad)
fbld
xchg
sar
(bad)
cmp
cld
(bad)
jmp
jmp
adc
aaa
test
cmp
mov
scas
jle
pop
push
fisub
idiv
fist
pop
dec
cli
out
jg
mov
jecxz
(bad)
jmp
lahf
inc
mov
pop
inc
mov
(bad)
call
(bad)
jg
lahf
lahf
shl
mov
sbb
mov
(bad)
sar
inc
fisttp
lea
std
(bad)
jnp
not
mov
pop
jmp
adc
mov
std
cld
jmp
(bad)
jmp
(bad)
dec
lahf
jmp
dec
jnp
lahf
call
xchg
cmp
xchg
ds
call
sbb
js
ss
cld
aas
and
jg
std
cld
in
call
push
mov
call
ds
ret
call
jg
(bad)
arpl
sti
outs
dec
out
aaa
mov
test
jg
aas
inc
repz
cmps
call
std
dec
add
mov
inc
hlt
(bad)
aas
xchg
pusha
cld
(bad)
ror
pop
dec
jg
inc
aas
icebp
rol
loopne
psubb
sar
jmp
jmp
or
call
xlat
movs
jmp
(bad)
call
fild
mov
stc
out
idiv
mov
lods
hlt
div
jg
xchg
test
fcomip
sbb
sub
mov
and
shl
adc
das
shl
adc
(bad)
fcmovnbe
addr16
cwde
cmp
push
and
loopne
jge
lahf
mov
outs
std
cwde
lods
in
call
sti
iret
call
sti
mov
out
iret
test
jb
cmp
hlt
idiv
(bad)
(bad)
fucomp
idiv
std
sti
hlt
sti
scas
cmp
jbe
aaa
std
cld
popf
call
(bad)
xchg
shl
jg
std
(bad)
jg
pop
jmp
jmp
in
(bad)
sub
cld
pop
jmp
addr16
(bad)
hlt
cmp
sbb
cmp
(bad)
xor
jmp
cmp
hlt
push
dec
sbb
pop
mov
scas
and
lahf
inc
(bad)
push
call
loope
stos
mov
std
sbb
sbb
sbb
(bad)
clc
push
hlt
call
xlat
xchg
fadd
mov
mov
sar
out
sar
pop
sar
dec
call
inc
(bad)
(bad)
hlt
push
inc
jmp
(bad)
jmp
sar
dec
call
(bad)
jmp
(bad)
jg
std
(bad)
out
movs
(bad)
jmp
hlt
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
jmp
(bad)
mov
jmp
mov
fcmovnbe
call
inc
hlt
(bad)
fstp
stos
or
sar
iret
call
fbld
retf
pop
retf
lods
xor
aas
test
jmp
(bad)
jmp
cli
call
(bad)
call
std
call
mov
(bad)
jg
(bad)
(bad)
out
sar
jmp
(bad)
jg
(bad)
call
jmp
(bad)
jmp
dec
add
push
mov
hlt
inc
cli
call
cli
call
std
jmp
dec
cmps
(bad)
inc
rcl
(bad)
fsubr
push
jg
mov
fbld
call
fldenv
inc
fcom
jg
ja
or
outs
sti
leave
aas
xchg
bound
xchg
cmp
jns
add
int3
inc
mov
out
inc
loope
call
cmps
mov
xchg
xchg
nop
ds
rcl
jg
aas
(bad)
clc
(bad)
jmp
cmp
jmp
jle
clc
hlt
fistp
test
loopne
shl
stos
adc
loope
jg
pop
call
clc
loopne
pop
pop
clc
loopne
mov
loopne
fisttp
out
mov
aas
int
pop
jmp
and
push
push
cmp
mov
sbb
in
loopne
inc
(bad)
icebp
das
loop
push
lahf
mov
and
rcr
or
movs
call
jle
out
fistp
xor
pop
cld
mov
jg
jle
pop
jg
jle
jbe
jg
jle
jb
pop
loop
repnz
ret
cmp
stc
adc
sar
sbb
inc
clc
cld
shufps
clc
loopne
mov
ds
out
sub
stos
loop
or
shl
cmps
out
loopne
movs
fistp
add
repnz
jle
out
and
mov
rcr
mov
and
pop
lock
scas
inc
mov
outs
jmp
(bad)
lock
les
aam
lea
(bad)
jae
lock
loopne
mov
loop
lahf
mov
inc
icebp
shl
mov
clc
loopne
shr
jle
stos
lock
rcr
and
pop
jg
dec
(bad)
arpl
lea
clc
and
outs
or
dec
xor
(bad)
fcomip
loopne
ret
xlat
ror
pop
outs
lock
jecxz
push
stc
ror
in
pop
cmp
(bad)
mov
ds
clc
loopne
cmp
(bad)
jecxz
cmp
popf
icebp
arpl
loopne
ror
(bad)
out
jl
sbb
call
xor
lahf
xchg
jle
std
neg
sbb
psubb
pop
(bad)
sbb
mov
fstp
cmp
xchg
pop
(bad)
cmp
out
inc
ror
jge
icebp
sti
sbb
in
clc
icebp
out
outs
rcl
push
mov
mov
cld
test
and
daa
paddd
mov
dec
dec
dec
lock
pop
call
or
scas
loope
icebp
fstp
sahf
mov
sar
pop
std
sbb
xlat
(bad)
mov
loope
inc
cmc
scas
adc
repnz
ja
(bad)
(bad)
(bad)
pop
ret
sub
xchg
inc
pop
(bad)
sti
pop
ret
sub
cmps
sub
std
ss
(bad)
fistp
inc
hlt
jg
push
pop
sar
lahf
sar
mov
(bad)
(bad)
jle
(bad)
cmp
mov
call
imul
scas
daa
std
mov
(bad)
in
scas
and
inc
loope
hlt
mov
cmc
test
mov
neg
std
test
pusha
inc
or
push
xchg
loopne
mov
stos
icebp
daa
(bad)
clc
outs
dec
aas
and
popf
mov
daa
lds
sub
mov
das
jmp
or
cmc
leave
pop
inc
shr
lahf
xchg
inc
clc
repz
dec
xor
dec
(bad)
cmp
enter
push
jae
cdq
(bad)
push
clc
lods
lds
xor
imul
aaa
movs
jae
(bad)
sub
dec
pop
and
xchg
mov
lods
test
push
pop
or
and
or
push
jl
punpcklbw
js
mov
jbe
adc
cmp
mov
cmc
mov
(bad)
repnz
shr
js
(bad)
or
cmp
lahf
ret
and
cld
fwait
clc
loopne
push
(bad)
and
imul
pop
cld
mov
int3
push
(bad)
data16
cmp
loop
mov
clc
in
lahf
shr
sbb
(bad)
cmp
jecxz
lods
mov
jl
jbe
mov
rcr
cs
inc
(bad)
fcomp
jnp
test
loopne
sbb
dec
or
aas
or
sub
cli
popf
sub
cli
adc
fbld
movs
ror
stc
fild
repnz
and
movs
aam
fisttp
pop
xchg
movs
enter
aam
scas
mov
test
retf
jle
dec
(bad)
loop
in
in
mov
xchg
and
leave
lahf
dec
dec
xchg
(bad)
mov
in
and
jmp
xchg
in
adc
and
mov
cmp
sbb
aas
ds
mov
xchg
sbb
aas
jle
add
sub
xchg
cmp
icebp
sbb
shr
push
pop
cld
data16
icebp
cmp
cwde
dec
xor
push
or
pop
mov
test
cld
loopne
ror
in
pop
cld
pop
clc
xchg
sbb
retf
call
or
aas
mov
jle
cmp
mov
jle
aaa
(bad)
pop
jle
and
sub
out
jg
jg
xor
out
cld
imul
xlat
adc
sbb
test
nop
clc
out
call
std
dec
push
mov
mov
(bad)
push
jmp
repnz
mov
popa
jno
lods
jle
dec
outs
cld
and
mov
dec
loope
retf
jl
pop
dec
cld
cli
outs
rol
repz
cmc
lahf
dec
jmp
cld
clc
daa
sar
sbb
inc
hlt
lahf
ret
mov
lahf
jg
out
repnz
rol
xor
or
mov
lahf
cld
jns
in
pop
jmp
jb
xor
dec
lock
ja
adc
(bad)
sahf
xchg
push
jge
dec
aad
movs
adc
dec
movs
jo
push
clc
xchg
adc
dec
rcl
dec
cmp
cmp
dec
mov
mov
jg
loop
pop
dec
cmp
adc
cmp
jmp
mov
cmp
jle
pop
mov
push
cli
mov
ss
sti
jge
mov
inc
inc
sub
mov
cmp
add
sub
cld
nop
repnz
push
js
dec
fild
or
sub
mov
jbe
repnz
ins
leave
(bad)
mov
sub
jecxz
daa
jmp
outs
dec
aas
idiv
push
div
test
sbb
stc
jnp
pop
jmp
jne
pop
push
test
(bad)
(bad)
aam
cs
cmps
out
(bad)
lahf
cld
test
adc
(bad)
mov
lds
dec
pop
jmp
les
stc
aas
adc
mov
ds
cmc
dec
sub
mov
in
clc
xor
retf
jmp
xchg
mov
jmp
loope
xor
mov
sahf
je
mov
mov
inc
clc
cmc
pop
cmps
xchg
into
aas
lahf
inc
dec
ja
xlat
mov
addr16
mul
push
cmps
add
jg
jg
pop
sti
lahf
cmp
sbb
out
mov
std
fidiv
fbld
loop
mov
dec
mov
out
loop
mul
neg
(bad)
enter
repnz
pusha
or
xchg
gs
nop
sti
cli
adc
xor
ins
std
mov
rcr
icebp
mov
bnd
mov
(bad)
stos
fisttp
push
mov
jle
outs
inc
retf
xchg
lods
std
sbb
movs
int3
jle
sbb
outs
test
repnz
inc
inc
fwait
clc
mov
sbb
ds
lahf
inc
lods
adc
push
xor
cld
fist
out
fcomip
xlat
nop
push
bound
ficom
xor
dec
sbb
imul
call
mov
jg
dec
clc
repz
and
or
xchg
out
mov
aas
sbb
sahf
adc
adc
stc
jno
retf
out
dec
arpl
lods
mov
add
inc
sti
sub
ret
sahf
cmps
xchg
jle
(bad)
(bad)
pop
xor
fdivr
xchg
(bad)
aaa
test
xor
clc
sub
addr16
cmp
lahf
push
aam
mov
idiv
out
dec
mov
sub
inc
addr16
jmp
(bad)
mov
fs
cmps
dec
(bad)
mov
icebp
xchg
(bad)
clc
ja
adc
xor
mov
daa
test
outs
xchg
cld
neg
cli
jmp
fcmovu
out
jb
push
cdq
jg
inc
cmp
push
mov
aas
ds
int
add
and
in
jecxz
cld
ds
fstp
(bad)
ss
sahf
sahf
std
test
jne
aad
in
mov
das
jle
(bad)
pop
mov
sub
shr
std
sub
cmp
loop
(bad)
not
dec
(bad)
push
cli
les
scas
rcr
out
mov
in
das
push
jmp
and
add
hlt
aaa
movs
fcomp
std
call
and
inc
hlt
sti
fild
std
gs
in
call
lahf
hlt
(bad)
jg
(bad)
(bad)
out
(bad)
mov
or
xchg
cmp
jge
shl
jnp
(bad)
mov
cli
stc
xchg
out
or
cld
sti
test
pop
hlt
fwait
push
mov
lahf
jmp
add
pop
movs
lahf
or
push
mov
data16
arpl
in
inc
inc
in
(bad)
addr16
push
fwait
call
xchg
ds
cwde
(bad)
aad
sub
push
push
xchg
(bad)
hlt
imul
hlt
imul
cld
sbb
call
push
push
pop
sar
cmps
mov
sti
pop
add
hlt
not
cmp
stc
jmp
(bad)
outs
aam
outs
inc
aas
inc
jae
notrack
jmp
(bad)
jno
(bad)
fisttp
inc
std
std
jnp
fwait
aas
cmp
out
sti
or
mov
pop
adc
iret
(bad)
xor
sti
(bad)
cmps
(bad)
scas
jmp
sti
cmps
shl
fbld
(bad)
cmps
cld
inc
xchg
push
jnp
(bad)
call
repz
call
pop
adc
iret
adc
cld
mov
sti
aas
loope
xchg
ja
stos
mov
repz
loopne
xor
jnp
out
daa
jmp
data16
iret
mov
add
jg
jg
test
cmp
call
mov
jg
loopne
sub
repz
std
dec
mov
(bad)
(bad)
jnp
and
enter
hlt
(bad)
aas
sbb
pop
jg
leave
inc
and
daa
sbb
cdq
pusha
scas
call
pop
dec
out
outs
shr
pop
push
aas
jg
mov
mov
neg
mov
jmp
in
pop
cmps
sub
iret
ror
sbb
iret
jle
jp
aaa
add
and
(bad)
scas
add
fwait
enter
mov
jg
std
(bad)
jnp
mov
movs
hlt
(bad)
mov
test
mov
fild
jmp
sti
sbb
mov
retf
dec
shr
mov
aaa
xchg
pushf
out
dec
popf
ror
inc
hlt
(bad)
fistp
xchg
sub
jmp
hlt
(bad)
call
std
cmp
out
inc
aas
pop
pusha
lods
hlt
(bad)
inc
jg
push
mov
mov
sub
in
jg
push
mov
jle
call
out
jle
cli
(bad)
out
dec
out
std
cmp
hlt
cld
add
leave
inc
rcl
aas
hlt
imul
rcr
jmp
stos
jg
ror
scas
adc
ss
cld
sbb
(bad)
clc
xlat
nop
cld
fcom
call
std
jg
imul
mov
iret
cld
sbb
in
scas
mov
inc
aas
pop
sti
mov
(bad)
call
std
(bad)
mov
hlt
(bad)
(bad)
in
xlat
call
push
inc
hlt
jmp
hlt
push
cli
dec
pop
push
(bad)
out
add
dec
(bad)
jg
std
call
(bad)
call
hlt
(bad)
aas
xchg
(bad)
jmp
cld
call
inc
call
(bad)
sti
hlt
(bad)
call
call
mov
mov
call
(bad)
(bad)
fucomp
call
(bad)
jg
cli
push
cli
call
hlt
push
hlt
(bad)
out
sar
daa
hlt
call
inc
std
dec
(bad)
call
(bad)
mov
sar
call
cli
(bad)
fcomip
imul
push
jmp
(bad)
jg
(bad)
dec
cli
(bad)
dec
push
jle
xchg
jbe
jmp
(bad)
inc
call
jmp
dec
jmp
call
fbld
mov
dec
mov
sub
stc
test
(bad)
pop
pop
(bad)
sti
outs
sub
jmp
push
pop
pop
lahf
cld
sub
jle
iret
(bad)
not
aas
int3
mov
xor
inc
dec
add
pop
inc
into
out
pop
inc
into
jmp
iret
sti
pop
jle
xchg
aas
mov
fstp
lea
imul
mov
or
retf
jle
out
out
pop
sbb
clc
mov
inc
jp
ret
(bad)
fcomip
loopne
clc
icebp
dec
lds
imul
mov
jle
ror
cmp
xor
adc
add
inc
adc
xchg
sbb
lock
mov
lock
ret
sbb
loopne
mov
ja
fistp
xchg
adc
push
jo
iret
loopne
jg
pop
cld
inc
clc
loopne
cmp
sub
clc
jmp
in
lahf
sub
cld
mul
loop
and
sub
mul
jecxz
out
jl
(bad)
loopne
jg
lahf
and
mov
pop
cld
jns
add
xor
in
pushf
jle
mov
adc
icebp
out
(bad)
(bad)
gs
test
inc
and
sahf
mov
ret
(bad)
mov
rcr
outs
jecxz
dec
nop
std
and
lea
inc
jle
or
out
and
ins
je
lock
cld
mov
icebp
dec
push
(bad)
xor
icebp
cmp
in
ja
in
paddd
xchg
(bad)
pop
mov
adc
or
retf
in
clc
icebp
sti
sbb
jl
push
loop
loop
das
inc
arpl
(bad)
cmp
test
mov
add
outs
(bad)
outs
out
sar
icebp
shr
pop
aas
(bad)
iret
call
inc
cld
lahf
or
jg
jg
pop
clc
sti
in
mov
fs
sub
cmp
cmp
pop
jg
ds
push
aas
jle
pop
jns
push
push
clc
push
sbb
ffreep
out
ss
popf
push
dec
push
push
loopne
mov
inc
imul
imul
daa
clc
or
out
loopne
lds
jle
pop
(bad)
cmp
out
pop
inc
pop
std
lds
mov
pop
dec
mov
inc
inc
and
pop
mov
stc
clc
in
out
shr
jle
stos
lock
lea
retf
pop
daa
std
jecxz
or
jg
add
dec
loope
in
outs
cmc
imul
dec
dec
scas
loope
in
not
nop
movs
fmul
sbb
push
mov
in
movs
inc
(bad)
mov
and
in
call
cli
aas
cmp
fbld
sbb
(bad)
call
movs
in
jle
cli
jmp
(bad)
jmp
std
call
sar
mov
(bad)
sti
hlt
jmp
cli
aas
jl
das
jg
push
mov
cmps
dec
call
call
(bad)
(bad)
cwde
pop
shl
clc
(bad)
mov
push
lds
mov
jmp
pop
jb
clc
xchg
dec
inc
data16
ror
into
cld
jle
iret
jo
not
jg
test
jg
in
(bad)
jp
cmp
in
in
pop
sub
or
leave
pop
lahf
(bad)
sbb
icebp
inc
dec
call
call
or
or
dec
xchg
push
mov
mov
jmp
loopne
cmc
rcl
icebp
adc
iret
lock
sbb
push
clc
icebp
sti
jae
(bad)
ja
lds
mov
icebp
xbegin
paddd
jl
fneni(8087
aaa
adc
hlt
and
test
sbb
in
jo
into
or
leave
sar
jnp
loopne
cmp
xlat
icebp
arpl
loopne
shl
xor
inc
ret
stc
lea
(bad)
jle
lock
loope
mov
lods
test
fcomip
xchg
jecxz
out
jno
pop
loopne
mov
clc
pusha
jl
(bad)
jecxz
(bad)
pop
cld
adc
mov
lock
loop
retf
pop
xor
cmp
aaa
pop
loopne
sbb
div
fisttp
shr
mov
aas
inc
rol
dec
and
and
cld
xchg
jmp
ja
jo
ja
jo
inc
ret
rcr
mov
mov
pop
or
lahf
cld
adc
cmp
(bad)
sti
pop
sub
cld
mov
xchg
clc
sub
cmp
sub
xchg
sub
out
inc
pop
sbb
xchg
adc
xchg
test
sub
daa
jg
outs
test
xchg
sbb
jmp
cmps
adc
add
lock
shl
jecxz
int3
push
sub
hlt
mov
xor
sub
xchg
mov
push
jle
mov
mov
mov
pop
cmps
pop
mov
lock
loopne
ja
jle
cld
fsub
icebp
mov
and
std
mov
pop
cld
clc
std
paddd
mov
pop
mov
div
daa
cmp
test
int3
(bad)
out
mov
cmp
lahf
enter
rol
daa
enter
imul
daa
enter
mov
jle
xor
mov
and
pop
sar
jg
std
dec
inc
push
(bad)
mov
jg
jae
mov
inc
scas
sar
movs
push
dec
popa
inc
retf
das
and
cld
mov
mov
adc
es
lock
dec
or
stos
xchg
adc
sub
neg
jg
mov
pop
fcomp
sbb
jg
and
inc
retf
cmp
dec
mov
arpl
lock
pop
sub
aas
add
jl
push
inc
dec
loopne
leave
in
xor
outs
out
enter
and
mov
mov
icebp
div
sbb
les
loop
les
or
loop
pop
icebp
mul
push
jl
lods
cmp
push
jl
lods
clc
fwait
adc
push
adc
dec
mov
xor
pop
daa
push
cld
pushf
nop
int
stc
arpl
and
scas
mov
stc
ds
cmp
xchg
jmp
cli
ins
and
scas
dec
xchg
push
clc
sub
and
repnz
cld
ss
(bad)
push
iret
mov
iret
mov
sahf
jg
jmp
out
ds
jae
addr16
push
mov
adc
dec
test
out
cld
push
ret
shr
mov
sti
nop
or
sub
jge
xlat
loopne
mov
lahf
fxch
mov
iret
std
ja
xor
fldcw
inc
jmp
and
enter
cwde
scas
inc
pop
jle
dec
inc
push
ds
and
inc
mov
in
mov
mov
and
inc
lock
stc
cmc
and
add
inc
mov
mov
outs
inc
sbb
inc
mov
sbb
std
ja
in
cli
pop
ds
(bad)
in
dec
xor
imul
call
mov
xchg
(bad)
aas
stc
xchg
jle
dec
(bad)
stc
fisttp
jg
dec
(bad)
adc
inc
mov
loopne
xor
dec
in
sub
std
xchg
lahf
cld
fstp
jl
scas
cld
mov
nop
fucomip
xchg
jg
ja
in
cli
popf
sub
neg
(bad)
in
xchg
test
retf
or
jmp
inc
xchg
sbb
add
mov
repz
fdivr
mov
test
out
dec
cmp
mov
mov
dec
cmp
movs
jle
mov
sahf
mov
repnz
push
pop
adc
inc
push
jnp
(bad)
aam
jnp
div
mov
cmc
pop
add
std
push
mov
mov
xor
pop
retf
cs
cld
xchg
adc
fwait
jle
das
and
das
std
mov
test
pop
adc
jg
dec
(bad)
mov
aaa
daa
repz
sbb
repz
ds
out
out
or
mov
in
clc
ins
aas
stc
dec
jg
dec
(bad)
mov
(bad)
fstp
out
cld
mov
cld
fwait
mov
ja
in
push
mov
sub
pop
cmp
sti
push
aaa
call
hlt
shr
retf
outs
in
movs
leave
jle
mov
push
mov
pop
adc
adc
or
aaa
sti
in
std
sbb
jg
cmp
imul
js
(bad)
dec
lahf
cld
pop
mov
jbe
mov
mov
xchg
xchg
adc
mov
in
hlt
dec
movs
adc
std
jae
lahf
lods
pop
dec
jae
mov
dec
xor
in
scas
std
imul
mov
or
idiv
cdq
ds
jnp
pop
mov
(bad)
mov
cli
std
pop
ror
pushf
(bad)
jmp
sar
push
(bad)
mov
std
cmps
jmp
mov
mov
inc
(bad)
inc
(bad)
call
inc
hlt
fstp
dec
mov
jle
mov
inc
cli
cld
pop
cmps
(bad)
dec
hlt
imul
inc
fdivr
gs
(bad)
inc
mov
and
mov
cli
(bad)
outs
mov
jmp
jle
cmp
repz
movs
iret
jg
std
(bad)
out
(bad)
dec
cli
sti
outs
movs
mov
xor
repz
das
sar
icebp
adc
repz
cli
jne
lea
dec
movs
lahf
jg
std
dec
movs
out
pop
hlt
jae
out
(bad)
mov
sti
xor
fst
dec
(bad)
dec
xchg
into
clc
xor
mov
neg
(bad)
jg
imul
call
mov
stc
iret
(bad)
cmp
idiv
(bad)
mov
cli
call
mul
hlt
fstp
lods
aas
jg
cli
in
outs
clc
jne
int
dec
aas
mov
jmp
iret
call
mov
(bad)
dec
jge
rcr
jg
mov
std
pop
dec
aas
inc
cli
call
push
ret
mov
jg
jge
psrlq
call
and
or
mov
or
ds
xchg
(bad)
push
ret
sbb
call
dec
mov
dec
hlt
call
mov
jmp
sti
mov
jg
mov
icebp
cmp
push
cli
xor
(bad)
call
push
call
adc
jae
jle
scas
loope
aad
lea
scas
and
jmp
dec
jg
jg
in
cmp
call
hlt
jg
in
push
std
(bad)
mov
mov
daa
std
call
and
std
or
std
push
mov
pop
mov
fist
cld
iret
mov
xchg
inc
sti
imul
jle
xor
push
shr
shr
xor
das
enter
dec
aas
stc
daa
jle
xor
push
fs
out
xchg
test
xchg
sub
mov
push
pop
fcom
popa
aas
and
frstor
(bad)
cmp
(bad)
jnp
ins
dec
mov
mul
cmp
xchg
out
fs
int3
retf
jae
retf
repnz
ror
(bad)
pop
clc
mov
js
pop
das
(bad)
ret
(bad)
pop
cmp
adc
jle
cmp
aas
jle
shr
pop
stc
shr
pop
inc
pop
mov
cmp
jmp
das
dec
stc
out
jp
sub
jecxz
loopne
ret
loopne
cmps
pop
mov
push
cmp
test
sbb
mov
icebp
(bad)
ja
and
std
xlat
mov
in
jg
push
ret
cdq
add
clc
jl
pop
sar
jg
cli
(bad)
out
cld
imul
aaa
mov
scas
and
xchg
hlt
push
mov
std
sbb
cmp
out
jg
mov
jle
lods
fsubr
retf
xor
(bad)
repz
(bad)
(bad)
xor
mov
call
(bad)
cli
xor
lahf
and
std
fstp
rol
fcmovu
inc
mov
outs
clc
ins
ds
imul
xchg
cmps
(bad)
daa
xchg
pop
cli
pushf
jb
mov
in
cmp
and
aaa
xchg
jno
out
aam
into
(bad)
pop
mov
adc
cld
mov
(bad)
repnz
add
mov
ds
mov
cmp
jle
pop
pop
dec
imul
jmp
lock
es
fisttp
repz
leave
stos
std
aad
repz
jg
mov
pop
inc
into
rcr
call
stos
aas
cmp
les
mov
shr
std
fild
cmps
mov
jle
mov
cld
jg
scas
cwde
cdq
nop
fucomip
xlat
jo
cld
cmp
sbb
loopne
std
(bad)
fisubr
in
and
aas
push
jo
daa
mov
in
shl
push
rol
or
fisttp
cmp
in
mov
mul
stc
lods
movs
(bad)
jg
push
cmp
test
(bad)
jmp
jg
fcmovnbe
fwait
lahf
stos
pop
mul
xchg
jg
mov
in
and
cli
cmps
or
aas
out
cmc
(bad)
loope
fucomip
xchg
push
ja
iret
jmp
xchg
gs
fisttp
mov
sti
mov
add
std
int
std
sti
in
enter
aas
stc
inc
xchg
cmp
pop
xor
(bad)
mov
xor
cmps
mov
pop
or
jmp
mov
inc
jl
or
sub
xor
jle
repnz
jle
add
out
cld
outs
push
xchg
dec
call
xchg
cmp
mov
xchg
lock
push
int3
mov
(bad)
cs
inc
jmp
sbb
mov
test
test
stc
(bad)
int
loope
lock
mov
inc
inc
div
push
cld
mov
jnp
ret
daa
push
scas
std
xchg
call
repz
mov
cmps
jg
int
xor
cli
fnstsw
fsin
mov
in
mov
(bad)
ss
mov
les
out
pushf
cld
push
div
add
cld
inc
mov
imul
sub
psrld
nop
sbb
addr16
jo
ret
fisubr
sti
xlat
clc
in
leave
ss
cmp
cmp
aaa
loopne
cli
nop
(bad)
std
(bad)
jl
mov
mov
xor
jnp
aas
push
jg
std
inc
hlt
imul
ins
dec
sub
lahf
addr16
add
stc
stos
jmp
(bad)
lahf
(bad)
call
cmp
push
cli
in
out
mov
sti
outs
dec
aas
inc
(bad)
jmp
std
dec
cli
stc
psrlw
jg
fmul
sbb
pop
dec
aas
call
jmp
jg
jg
jno
repz
pop
leave
cli
lahf
movs
(bad)
dec
cli
stc
(bad)
iret
out
sar
(bad)
jle
std
dec
mov
cld
mov
(bad)
mov
jle
cwde
call
adc
das
cmp
jecxz
fild
sbb
ja
lea
pop
and
or
sbb
sbb
ret
mov
stos
mov
imul
stos
mov
xchg
call
lahf
cld
scas
mov
push
cmp
dec
inc
mov
mov
(bad)
sar
adc
fisttp
dec
cmp
in
and
cli
not
(bad)
popf
hlt
sti
fisttp
in
outs
and
jmp
dec
(bad)
xchg
movs
add
push
adc
movs
cli
pop
nop
push
frstor
movs
cli
mov
xchg
aas
dec
sub
pop
std
inc
mov
lock
cmp
pop
push
fldcw
jg
icebp
mov
ja
xor
imul
(bad)
cs
stc
add
leave
cmps
movs
(bad)
out
jge
aas
cld
dec
xor
in
dec
dec
fild
adc
push
sub
(bad)
xchg
jg
pop
nop
mov
mov
mov
aaa
loope
jg
out
(bad)
jbe
cld
mov
lock
push
cmp
(bad)
pop
ss
pop
inc
lods
jg
adc
jg
ja
or
aaa
mov
in
sti
in
aas
stc
cmps
jne
mov
jecxz
div
cld
pop
jle
push
je
adc
pop
adc
mov
mov
aas
jmp
mov
dec
in
jg
sbb
outs
inc
add
mov
inc
or
aaa
and
(bad)
xor
jg
inc
inc
int3
loopne
dec
int
mov
or
and
jg
rol
xchg
dec
int
mov
dec
mov
xchg
xor
aaa
gs
inc
repnz
and
pop
mov
repnz
cmc
jg
test
push
imul
stc
gs
inc
lods
lock
das
mov
cmp
(bad)
dec
test
ins
test
call
or
sti
(bad)
out
push
stos
sahf
clc
jne
(bad)
(bad)
call
inc
dec
sbb
mov
dec
std
cmps
and
(bad)
mov
ss
cld
repz
ror
mov
xor
pop
sub
std
pop
hlt
repz
mov
pop
jmp
(bad)
mov
call
hlt
fnstsw
inc
aas
dec
jmp
sub
adc
inc
hlt
fstp
jle
inc
jg
sar
push
scas
sub
dec
jg
scas
sub
or
shr
add
fidivr
pop
push
push
sti
(bad)
push
loopne
iret
jg
imul
fdivr
imul
ds
pushf
adc
(bad)
movs
sbb
(bad)
loopne
mov
sbb
ins
std
sbb
xlat
imul
out
repnz
or
inc
ins
jns
fdiv
aaa
and
lods
mov
pushf
(bad)
sbb
notrack
psubb
dec
jne
xor
sbb
add
mov
and
pop
clc
ins
dec
inc
fsub
or
jle
rcl
sti
movs
and
imul
fsub
fucomip
xchg
aas
cmc
mov
or
loopne
ret
(bad)
sbb
mov
in
push
xor
mov
les
clc
xor
imul
(bad)
jge
test
psubsw
add
repz
mov
jg
pop
neg
std
cs
(bad)
stc
iret
jle
mov
or
fild
adc
clc
ins
dec
inc
cld
cmps
movs
and
out
std
shufps
popf
aas
stc
lahf
jle
jb
jle
jb
jle
jb
jle
jp
aaa
sti
in
call
shl
mov
pop
es
call
arpl
popf
int3
pop
cmp
adc
sti
mov
loopne
inc
idiv
test
dec
inc
fnstsw
and
fist
cmp
jg
mov
retf
jle
sbb
add
in
imul
lahf
cld
mov
outs
push
aad
sbb
sub
dec
(bad)
jecxz
out
jmp
ja
in
adc
clc
inc
inc
(bad)
popf
jns
sbb
cmp
sub
add
cli
mov
lea
xor
sti
fist
cmp
push
lock
inc
sbb
jnp
out
or
jecxz
add
mov
rol
cld
fidivr
jo
lahf
(bad)
fnstcw
int
mov
fistp
out
jle
adc
pop
add
inc
ret
scas
movs
(bad)
cld
call
adc
in
or
scas
or
pop
shr
pop
hlt
call
inc
dec
std
push
pop
push
or
mov
xchg
jg
scas
and
out
dec
aas
jmp
sub
dec
cmp
mov
ret
ss
lods
push
(bad)
mov
inc
mov
stos
mov
(bad)
imul
outs
jg
and
in
xor
xchg
jle
call
inc
(bad)
in
aaa
jmp
(bad)
ins
and
(bad)
std
mov
jno
shl
dec
inc
dec
inc
mov
cli
mov
xchg
pop
inc
lock
sbb
(bad)
aaa
loop
lahf
fucomip
xchg
pop
or
and
stc
pop
mov
call
mov
outs
jg
dec
(bad)
mov
push
cli
(bad)
jb
pop
dec
ins
(bad)
cmps
(bad)
xchg
(bad)
(bad)
mov
(bad)
lock
mov
sahf
pusha
inc
mov
clc
add
std
in
and
mov
xchg
mov
cs
jbe
das
pop
xchg
pop
(bad)
(bad)
mov
iret
repnz
sahf
jg
dec
(bad)
fcmovnu
cs
aas
jg
cli
repz
cli
pop
jle
fld
pop
fsub
mov
(bad)
fdivr
das
inc
call
(bad)
jecxz
fdivr
mov
lea
cld
ja
mov
repnz
mov
iret
sar
call
mov
xor
mov
stc
cmps
jle
jns
mov
add
(bad)
xlat
das
cmps
lahf
ja
out
test
jecxz
add
(bad)
dec
addr16
push
cmps
lock
jle
xlat
fcomp
stc
adc
mov
repz
clc
sbb
mov
lock
in
cld
sbb
sti
dec
(bad)
in
fisttp
cmp
repnz
jp
mov
(bad)
imul
stc
ins
loopne
add
outs
inc
icebp
int
inc
loop
sbb
stc
scas
jg
daa
inc
outs
repz
jg
cmp
cwde
call
out
(bad)
out
loope
inc
xchg
mov
scas
std
imul
les
lahf
cld
mov
sahf
(bad)
stos
jmp
fdiv
pop
(bad)
cmp
cmp
mov
push
sar
sub
dec
xor
jmp
dec
std
out
xchg
sti
pop
jle
fcomip
xlat
std
int
fst
loope
lock
xor
into
fbld
xchg
cmc
scas
(bad)
xor
mov
xchg
inc
nop
lock
inc
hlt
(bad)
mov
sti
sbb
(bad)
call
out
add
mov
jle
xchg
cld
cwde
aad
cwde
mov
(bad)
cmps
hlt
call
cdq
push
enter
fisttp
jecxz
out
pop
and
lahf
add
pop
jle
in
test
fcomip
xlat
aas
std
jne
fdivr
mov
push
jmp
daa
jmp
mov
(bad)
outs
addr16
fucomip
xchg
call
dec
mov
(bad)
rcl
daa
jmp
pop
out
clc
in
cmps
call
xchg
lock
(bad)
call
pop
scas
call
pop
sti
xor
(bad)
call
sti
imul
cmps
hlt
jg
push
mov
add
or
shl
sbb
cld
dec
mov
shl
jg
or
das
jmp
inc
ins
ins
xchg
outs
jp
jle
popa
jmp
mov
mov
enter
repnz
mov
xor
(bad)
xchg
(bad)
in
mov
xor
es
cld
sti
mov
cli
leave
mov
icebp
fwait
push
pushf
icebp
sbb
iret
or
xor
movs
and
test
cmp
outs
push
adc
jg
cmp
sti
fwait
push
mov
outs
sub
std
pop
test
xlat
mov
push
mov
dec
mov
and
fisttp
(bad)
das
pop
xor
or
(bad)
lock
fprem
pop
jg
pop
jecxz
fild
ret
ret
push
mov
cld
das
push
(bad)
call
cmp
hlt
bt
jle
push
fs
outs
inc
ffreep
idiv
scas
add
push
and
out
addr16
jns
sar
std
dec
fbstp
(bad)
(bad)
mov
mul
xor
ins
jle
dec
(bad)
mov
in
adc
stc
in
imul
mov
xor
clc
leave
pop
(bad)
cmp
mov
retf
xchg
cld
out
cld
leave
jg
cmp
dec
jle
daa
call
repnz
sbb
std
or
jg
cld
sub
cmp
mov
mov
(bad)
jg
jge
daa
sahf
dec
imul
icebp
cld
jmp
push
lahf
call
stc
xor
sbb
(bad)
cld
xchg
call
ret
aas
push
loopne
jp
cmc
xor
std
call
pop
(bad)
xchg
sahf
mov
in
mov
(bad)
jle
shl
lea
jle
pop
jbe
push
dec
call
test
lock
pushw
clc
in
cmp
shl
inc
sbb
call
pop
cs
out
icebp
enter
cmp
test
neg
(bad)
fild
mov
mov
dec
mov
or
sbb
std
std
pop
cli
test
daa
call
cdq
aad
dec
push
stc
jne
(bad)
mov
lock
mov
scas
push
jge
out
push
sbb
xchg
mov
cmp
mov
adc
sbb
sub
(bad)
daa
call
or
mov
(bad)
neg
push
jge
fcmovbe
(bad)
mov
std
xor
(bad)
aad
fwait
pop
pushf
bound
jg
sar
(bad)
clc
mov
inc
fistp
inc
mov
inc
mov
push
hlt
stc
pop
dec
cmp
xor
mov
iret
inc
in
pop
mov
in
aas
movs
(bad)
push
shl
aaa
jge
fcmovnbe
cmp
or
pop
inc
xchg
imul
cld
mov
lods
mov
iret
xor
call
lahf
jge
jg
aad
sti
pop
inc
in
jle
fisttp
movsx
iret
jg
sar
call
cld
mov
sti
fild
sub
sbb
call
inc
(bad)
(bad)
in
jmp
jmp
cli
push
call
std
sbb
jmp
test
ret
dec
sti
xor
sti
lahf
dec
xor
jle
ds
xchg
shr
jg
cmc
mov
out
(bad)
cmp
sti
aas
mov
cmps
xor
and
cmp
inc
cmp
shr
jmp
jge
ins
ret
mov
stc
push
jge
sbb
push
inc
loope
outs
rcr
fbld
aas
mov
cld
test
repz
ja
es
xor
push
fistp
jg
jge
pop
push
mov
dec
lahf
std
sub
out
inc
(bad)
jmp
jge
pop
test
pop
dec
lahf
outs
sar
jg
xor
adc
aas
xchg
ds
sti
call
out
sar
jmp
sti
jnp
(bad)
sub
mov
mov
pop
inc
ins
(bad)
and
stc
(bad)
iret
xchg
jle
sub
repz
push
push
jg
mov
inc
sar
test
fild
std
xor
std
aas
inc
lahf
jge
jg
dec
sbb
xor
jg
mov
push
push
aas
call
jge
inc
lahf
in
push
fisttp
dec
pop
or
mov
fisubr
test
jg
arpl
inc
jmp
sti
sub
fidivr
pusha
call
hlt
neg
inc
(bad)
adc
loope
mov
scas
and
cld
xchg
hlt
fldenv
add
sub
call
call
aam
scas
inc
lahf
jge
jle
pop
jmp
sub
(bad)
jmp
fnstsw
xor
hlt
fstp
hlt
(bad)
xor
lock
shr
mov
ror
test
(bad)
fistp
rcr
mov
or
inc
xor
adc
call
cld
sbb
(bad)
jg
ds
mov
fild
jmp
jns
in
jle
cli
out
iret
mov
stc
aaa
sar
out
sar
jg
jmp
out
dec
in
(bad)
push
loopne
std
cmp
mov
mov
jmp
loopne
icebp
aam
outs
and
jle
std
pop
shl
jmp
ja
and
arpl
out
call
not
hlt
into
jg
(bad)
out
push
cli
stc
not
mov
hlt
idiv
dec
(bad)
xor
out
pop
inc
lahf
(bad)
mov
(bad)
dec
push
jle
ret
mov
call
jle
jno
(bad)
dec
dec
sti
xor
in
test
mov
cld
iret
call
call
call
(bad)
dec
and
icebp
not
clc
(bad)
js
div
test
fild
cmp
dec
lahf
std
inc
add
iret
mov
mov
mov
jmp
cmc
(bad)
(bad)
out
pop
ror
fild
call
jo
shl
and
out
es
(bad)
out
dec
(bad)
jmp
aam
push
adc
(bad)
mov
or
psrld
xor
fwait
push
pop
jg
mov
xchg
imul
inc
mov
jge
out
cmps
out
dec
std
aaa
mov
jecxz
and
fbld
repz
adc
(bad)
adc
cld
ja
dec
in
aas
mov
push
shr
dec
jge
xchg
sti
fisttp
(bad)
adc
jne
fnstcw
test
scas
or
(bad)
out
out
outs
dec
aas
jg
cmp
add
jae
ds
gs
mov
iret
xchg
mov
ror
das
or
inc
lahf
dec
mov
mov
std
adc
xchg
hlt
sti
xchg
hlt
stc
cmp
stc
outs
rcr
aas
dec
jge
shr
(bad)
(bad)
mov
test
adc
std
mov
cli
in
jae
sti
scas
and
jg
std
(bad)
ja
outs
cli
std
pop
movs
ja
add
mov
jg
std
(bad)
adc
or
lahf
inc
aas
call
repz
sti
jg
mov
jg
loope
pop
adc
call
push
sti
call
jg
jge
inc
mov
adc
loope
push
fdivrp
or
pusha
jmp
out
daa
mov
(bad)
jmp
aas
mov
lahf
fdivrp
pop
test
jmp
std
xchg
hlt
neg
inc
xor
xlat
pop
inc
out
(bad)
ds
stc
lahf
dec
ins
jg
xor
sar
jg
pusha
cmp
mov
not
jle
int3
outs
stc
imul
jg
mov
push
jmp
sti
das
jmp
iret
cmps
jbe
fldcw
xor
shr
imul
mov
xchg
jmp
jg
sar
hlt
call
shr
iret
or
mov
hlt
std
scas
and
jmp
push
cmps
mul
mov
xlat
outs
dec
fild
fbld
pop
mov
out
cmps
idiv
jle
sub
(bad)
pusha
cld
jns
add
leave
xor
call
sub
mov
stc
jg
pop
out
loopne
movs
xchg
cdq
hlt
psubw
jle
shr
push
cmp
fild
sahf
sar
lahf
sar
mov
cmc
jnp
xchg
push
hlt
call
fs
pop
(bad)
push
(bad)
aas
jecxz
nop
shr
movs
(bad)
push
mov
ret
hlt
(bad)
jg
(bad)
jmp
sar
jmp
imul
retf
jle
or
std
pop
push
xor
pop
sar
mov
(bad)
jnp
inc
hlt
jmp
call
enter
jmp
jmp
call
clc
imul
dec
mov
cmps
lods
cwde
and
mov
xchg
mov
in
mov
jmp
(bad)
mov
cli
(bad)
inc
push
cli
jmp
(bad)
call
call
dec
jmp
out
cld
pop
xchg
xchg
std
std
jle
pop
jns
jle
pop
or
clc
(bad)
mov
(bad)
aas
not
xchg
push
mov
ja
pop
mov
adc
push
movs
dec
mov
hlt
imul
inc
outs
cli
jmp
(bad)
call
push
inc
call
cmps
hlt
inc
inc
sar
jmp
cli
call
call
jmp
(bad)
call
(bad)
dec
(bad)
inc
(bad)
mov
jmp
call
(bad)
jmp
cli
jmp
mov
(bad)
jmp
pop
hlt
jmp
push
(bad)
mov
call
jmp
(bad)
inc
(bad)
call
call
jmp
(bad)
out
movs
(bad)
inc
hlt
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
(bad)
out
jmp
jmp
mov
mov
cmps
(bad)
(bad)
cmp
jg
(bad)
inc
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
inc
sar
call
call
call
jmp
hlt
(bad)
jg
(bad)
dec
cli
(bad)
mov
call
(bad)
jg
(bad)
(bad)
out
hlt
call
xlat
and
sar
aas
mov
lahf
sar
aas
mov
jg
(bad)
(bad)
mov
jg
(bad)
mov
hlt
(bad)
aas
xchg
jmp
sar
call
pop
inc
(bad)
(bad)
jmp
(bad)
jg
std
call
mov
(bad)
jg
(bad)
jmp
(bad)
inc
(bad)
jg
(bad)
jmp
(bad)
call
cli
aam
std
push
(bad)
mov
(bad)
dec
daa
call
jg
jmp
call
psubsb
jg
std
dec
hlt
(bad)
aas
(bad)
(bad)
call
(bad)
jmp
cli
(bad)
fisttp
inc
std
call
(bad)
inc
(bad)
lahf
mov
jmp
fs
lock
call
lahf
cld
mov
pop
lea
call
dec
mov
xor
adc
cmp
jmp
cli
mov
cwde
(bad)
loop
mov
imul
jg
cld
cmc
xlat
movs
jg
(bad)
cli
dec
sar
adc
mov
retf
idiv
stc
xchg
push
movs
movs
ds
arpl
sub
mov
imul
push
push
clc
in
xadd
aad
xchg
cli
loopne
inc
jp
loopne
mov
pop
sbb
dec
call
cld
not
mov
pop
(bad)
icebp
or
mov
loopne
ret
adc
clc
sub
pushf
fmul
jb
idiv
(bad)
add
std
jb
les
jae
fbld
mov
clc
das
icebp
icebp
fisttp
xchg
mov
lahf
(bad)
outs
ja
fnstcw
mov
(bad)
sbb
div
sbb
in
rcr
mov
mov
cmp
(bad)
(bad)
sbb
xchg
lock
pop
paddd
cld
push
jge
lock
pop
lods
icebp
jecxz
cmp
repz
popf
int3
lock
es
aas
test
loopne
(bad)
push
addr16
in
adc
std
dec
lock
mov
adc
cld
outs
clc
or
shr
neg
push
cld
cs
iret
push
add
fild
test
aas
loopne
call
mov
out
and
lds
ret
out
adc
loopne
paddd
add
mov
movsx
xchg
clc
jmp
outs
xchg
dec
lock
pop
jg
ds
test
call
jle
(bad)
stos
hlt
loopne
mov
mov
add
add
loopne
cmp
jge
sar
movsx
outs
push
mov
cmps
clc
in
lahf
ret
addr16
in
scas
(bad)
addr16
or
ja
fbstp
std
fnclex
mov
add
scas
loop
pop
sbb
push
and
fistp
das
hlt
and
inc
repz
mov
aas
shr
call
jle
fwait
icebp
fnstcw
sbb
add
test
mov
adc
(bad)
sbb
addr16
jle
shl
fstp
(bad)
or
loope
mov
clc
in
scas
ret
outs
jg
cmp
loopne
rol
jle
mov
adc
in
xadd
adc
adc
lds
pop
sbb
(bad)
(bad)
sub
mov
fistp
adc
mov
jle
cld
test
fcmovnu
add
mov
jle
cld
clc
sbb
inc
(bad)
or
mov
cdq
bound
outs
pop
pop
cmp
mov
(bad)
imul
loopne
mov
cli
in
ja
faddp
fisttp
lock
adc
pop
xchg
inc
lock
loopne
fmul
cmp
mov
xor
repnz
les
pop
in
cmp
and
outs
or
clc
loopne
inc
fisttp
jle
loope
fistp
mov
add
cld
clc
in
out
inc
mov
and
cmp
icebp
jnp
fadd
pop
xor
pop
mov
movd
jl
pop
lock
icebp
fistp
mov
jle
jl
jmp
ror
jle
push
ds
out
lock
paddd
cld
mul
mov
or
cld
not
mov
cmp
push
(bad)
push
jl
(bad)
mov
jle
xor
repz
in
pop
pop
jl
xchg
cmp
inc
mov
loope
pop
jp
loopne
pushf
out
pop
pushf
push
cld
fdivrp
icebp
in
sbb
call
cld
fadd
out
mov
mov
(bad)
shr
rcr
jecxz
fistp
jle
cld
or
(bad)
outs
jg
mov
push
xchg
jle
cld
div
mov
stc
stos
call
std
idiv
in
add
outs
les
jecxz
fstp
mov
seto
shl
out
les
jg
pop
cld
cmc
clc
in
das
shr
jle
mov
outs
mov
icebp
fist
mov
adc
add
cmps
lock
stc
rcl
pop
clc
loopne
shr
sti
adc
mov
pop
inc
clc
add
loopne
cmp
(bad)
(bad)
(bad)
loopne
loop
jg
or
aaa
loope
fild
pop
fnstsw
clc
or
imul
jg
pushf
(bad)
mov
inc
push
aas
std
idiv
clc
loopne
ret
pop
dec
jle
(bad)
lahf
ret
and
inc
cld
mul
add
fild
pop
(bad)
cvtpi2ps
loop
(bad)
loopne
ret
(bad)
mov
push
cld
arpl
rol
fild
sar
jle
lock
xor
icebp
fst
(bad)
in
loopne
ds
pop
icebp
aad
cld
test
jecxz
clc
cmps
pop
cmp
or
les
out
pop
mov
js
hlt
fwait
cli
jmp
mov
push
cld
out
imul
jg
rcr
imul
dec
mov
mov
jbe
or
inc
xlat
js
imul
cmps
jle
dec
jmp
call
inc
hlt
(bad)
aas
xchg
(bad)
jmp
cli
aas
hlt
and
adc
call
mov
add
(bad)
call
(bad)
jg
imul
(bad)
hlt
(bad)
fisttp
jmp
inc
cli
push
std
pop
outs
(bad)
push
hlt
(bad)
fist
inc
(bad)
mov
hlt
(bad)
aas
mov
jmp
cli
call
inc
pop
call
and
(bad)
fbld
(bad)
call
(bad)
mov
and
push
hlt
call
cmps
jmp
call
sar
(bad)
pop
std
jmp
cli
(bad)
out
dec
(bad)
aas
cmps
jmp
call
xchg
sar
jmp
cli
call
jmp
jmp
hlt
(bad)
jg
(bad)
dec
(bad)
call
(bad)
jmp
call
(bad)
jg
(bad)
(bad)
cmp
aaa
daa
hlt
(bad)
fisttp
(bad)
mov
(bad)
call
mov
(bad)
(bad)
std
call
dec
(bad)
mov
hlt
(bad)
aas
call
jl
call
inc
jb
fisttp
inc
jg
rol
jg
pop
xchg
std
mov
out
xchg
pop
xchg
inc
aaa
lods
aad
std
in
dec
call
cld
cli
lahf
cmps
jg
xchg
cli
xchg
jg
mov
cli
cmps
jecxz
mov
lock
dec
aas
ret
push
cli
cmps
loopne
mov
jecxz
dec
(bad)
js
clc
imul
daa
jg
cli
mul
scas
aas
aas
inc
adc
leave
lahf
icebp
mov
rcr
or
mov
(bad)
mov
mov
loopne
std
loope
rol
into
fnstcw
test
loopne
mov
pop
icebp
out
jle
cld
push
(bad)
out
ja
in
xor
lock
jmp
scas
jle
loopne
jl
xchg
sbb
mov
aaa
shr
jle
jne
fstp
mov
ja
cmp
loopne
mov
arpl
lahf
loopne
aas
add
xlat
lds
add
inc
clc
in
pop
ret
outs
inc
fdivrp
jnp
sbb
loopne
ret
adc
mov
iret
call
mov
mov
fstp
mov
inc
test
mov
(bad)
and
and
les
jmp
icebp
stc
div
fld
push
jle
mov
inc
mov
pop
cld
retf
push
(bad)
adc
lock
in
xchg
loope
fisttp
mov
cld
mul
repnz
icebp
sbb
cmc
pop
pop
cld
xor
cmp
outs
paddd
lock
loopne
rol
pmaxub
mov
fstp
xchg
inc
mov
or
std
mov
aaa
icebp
clc
icebp
sbb
lahf
cmp
or
jecxz
rcr
xchg
icebp
cmc
add
or
add
std
cmps
pop
xchg
clc
loopne
les
push
dec
lock
or
outs
xor
jge
adc
add
lock
(bad)
icebp
aad
clc
in
cmps
jns
icebp
fcmovnu
xchg
out
loopne
adc
loopne
mov
clc
or
mov
inc
imul
outs
mov
ja
(bad)
iret
clc
in
push
jle
das
loope
cld
ds
call
jle
jle
outs
jecxz
lahf
ret
and
mov
fstp
mov
jle
(bad)
pop
cld
neg
mov
sbb
sub
fistp
ds
jl
or
idiv
sbb
(bad)
loopne
mov
lahf
rcr
jl
xor
int
mov
test
jnp
(bad)
loopne
out
loopne
call
mov
fstp
std
cmp
or
pop
sbb
mov
add
xchg
clc
mov
adc
xchg
jmp
std
xchg
jecxz
cld
pop
movs
in
(bad)
xchg
push
ja
(bad)
in
gs
not
in
call
dec
(bad)
jmp
jg
hlt
sar
mov
cmp
dec
or
(bad)
xchg
(bad)
int
jg
out
repnz
adc
mov
(bad)
jns
retf
in
jg
cli
inc
loope
aas
stc
ja
in
nop
clc
lock
cld
pop
into
aas
stc
inc
jg
pop
jb
xor
retf
vpsubd
xchg
pop
inc
cld
(bad)
sub
jae
daa
dec
sbb
xabort
mov
call
jg
setle
stos
fucomi
repnz
rcr
mov
sti
(bad)
shr
ja
(bad)
or
inc
jg
cld
imul
loope
pop
or
mov
push
pop
sub
cli
outs
lock
cmp
dec
icebp
jecxz
loopne
ret
xlat
in
pop
(bad)
sub
pusha
jbe
iret
loop
ss
cli
out
mov
clc
sti
icebp
cmc
aas
mov
jne
xlat
loope
pop
jo
xchg
jecxz
jge
pop
loopne
cmps
sti
lahf
xchg
ficomp
lahf
mov
sub
(bad)
lock
sbb
gs
les
mov
js
clc
lea
lods
mov
jg
scas
push
push
loop
aas
sbb
fdivr
mov
(bad)
mov
cmp
popf
lock
out
jb
pop
jecxz
dec
mov
xchg
aaa
xchg
hlt
pop
arpl
in
icebp
fild
mov
popa
cld
(bad)
xchg
(bad)
push
loop
dec
cli
outs
jae
dec
loope
jbe
inc
mov
popf
clc
icebp
push
and
add
hlt
iret
ret
push
jg
rcr
lahf
sbb
cwde
and
lock
mov
sub
in
mov
leave
icebp
add
lahf
cmp
or
addr16
push
jle
or
test
lods
in
faddp
pop
mov
cld
jbe
leave
rol
mov
ret
paddd
jl
jmp
aaa
fsubr
shr
inc
jb
cmp
and
sbb
aas
mov
or
clc
aaa
icebp
shr
lock
loope
jnp
dec
jecxz
clc
loopne
rcl
dec
(bad)
pop
clc
in
pop
outs
jg
mov
cmp
and
cmp
adc
pavgw
mov
nop
loopne
lock
std
jmp
mov
dec
jg
fsubr
shr
jle
std
push
xor
(bad)
(bad)
call
fbld
xchg
iret
jmp
inc
push
dec
call
(bad)
cmp
mov
push
cli
aas
fs
fbld
sbb
xor
jle
adc
push
rcl
loop
pop
xor
jg
aas
xchg
sub
mov
and
push
jo
xchg
std
inc
inc
xchg
and
inc
add
(bad)
jmp
(bad)
or
jo
ds
das
push
in
aas
stc
(bad)
shr
(bad)
mov
lock
dec
rcr
daa
(bad)
in
out
repnz
sbb
jmp
fld
in
cld
mov
int
aaa
mov
jl
push
(bad)
cs
daa
jg
test
fcos
in
dec
jg
sbb
imul
mov
push
cli
nop
ds
movs
push
or
jle
icebp
fcmovnu
mov
jle
stos
loope
pop
rcl
xchg
inc
sbb
iret
fild
jl
xor
jl
mov
or
dec
xor
das
rol
clc
or
jecxz
inc
lahf
std
idiv
or
icebp
fucomi
sbb
pop
mov
aas
sbb
jo
jmp
test
dec
jg
jl
outs
jecxz
aas
push
push
ror
push
inc
lahf
mov
cmp
jg
sbb
(bad)
or
loopne
fild
lahf
std
jns
lea
sti
dec
shr
ds
mov
clc
add
test
mov
in
lahf
inc
repz
sbb
jnp
mov
movsx
aas
mov
xchg
std
inc
hlt
(bad)
std
dec
(bad)
out
in
std
in
call
out
(bad)
cli
ja
std
aas
stc
iret
cmp
pop
out
jl
out
nop
adc
outs
cld
cmps
lahf
cld
sub
(bad)
xchg
jg
ja
add
stc
daa
jle
mov
clc
sti
jnp
xchg
out
jle
ja
pushf
std
leave
ffreep
pop
into
daa
jg
out
repnz
mov
cld
add
out
out
repnz
stc
xor
shl
lahf
les
ja
test
dec
(bad)
mov
adc
ror
fsub
dec
jecxz
push
clc
loopne
popa
xchg
stc
mov
pop
lahf
pop
jl
daa
jno
(bad)
es
push
xchg
aas
ds
lods
lock
mov
jo
lock
jo
shr
aas
and
lock
loope
das
cmp
fild
imul
mov
mov
xchg
sti
pushf
adc
pop
sbb
xchg
clc
icebp
jecxz
jg
sbb
scas
std
sbb
lea
in
sbb
jge
pop
mov
(bad)
pop
sub
and
cmp
(bad)
ss
xchg
(bad)
cld
ja
pop
ds
(bad)
jg
das
sub
fucomip
xchg
jg
ja
test
in
clc
in
jmp
imul
idiv
stc
inc
jle
cmp
cmc
lahf
clc
in
stc
in
aas
stc
cmp
pop
sti
in
std
pop
mov
(bad)
fbld
xchg
mov
and
loopne
std
pop
jle
xchg
test
int
pop
lock
lahf
stc
mov
test
leave
lahf
clc
mov
div
in
and
loopne
inc
js
sar
xchg
pop
xchg
clc
icebp
fwait
mov
daa
push
ds
(bad)
das
rdmsr
mov
fild
lock
push
(bad)
std
push
clc
jecxz
cmp
ror
mov
inc
xchg
sub
sar
loopne
(bad)
(bad)
adc
jecxz
pop
pop
aas
mov
outs
js
jo
mov
sbb
jne
(bad)
(bad)
fld
push
inc
cld
fsub
fldenv
jmp
jp
sbb
jg
push
jecxz
in
cmp
add
test
outs
jo
cmp
sbb
xchg
stos
mov
call
(bad)
jg
cli
call
(bad)
jg
(bad)
aas
mov
xlat
mov
call
iret
cli
xor
icebp
xchg
jae
push
xchg
jp
and
jge
cld
jg
xchg
data16
cmps
shl
xchg
sbb
std
mov
adc
jg
das
cmps
out
out
lahf
bound
xchg
jg
mov
(bad)
loopne
mov
jg
cli
(bad)
loope
pop
xchg
(bad)
push
clc
(bad)
das
dec
jmp
cmc
out
mov
sub
lahf
cld
jno
add
jo
rcl
sub
add
or
dec
cdq
and
xchg
clc
jmp
and
cmp
sbb
retf
fdivr
std
ds
lahf
cmp
inc
popa
out
sbb
sub
xchg
sub
in
icebp
pop
out
mov
ror
cld
mov
idiv
cs
ds
mov
and
pop
(bad)
mov
aad
arpl
in
and
or
fcomip
xchg
aas
out
fyl2xp1
in
adc
daa
mov
dec
xchg
loopne
pop
xchg
sbb
and
out
xchg
mov
pop
xlat
mov
mov
adc
jnp
icebp
mov
das
and
nop
mov
into
and
(bad)
and
mov
adc
mov
hlt
leave
aas
icebp
fcmovnbe
push
repnz
jg
ja
nop
repnz
xchg
mov
lahf
xchg
mov
adc
and
sti
cs
adc
test
div
dec
ds
outs
pop
repnz
jg
mov
pop
mov
leave
jge
sbb
fisttp
sub
pop
ds
in
and
jae
retf
aas
cmc
mov
arpl
movups
pop
imul
ins
and
jg
sub
in
aad
repnz
daa
jg
test
cmc
out
addr16
out
repnz
xchg
in
cld
in
ds
xchg
jle
daa
jg
jne
inc
adc
jg
mov
das
clc
lea
and
loop
cld
ja
dec
mov
hlt
xlat
aas
std
lea
mov
arpl
push
clc
xor
inc
dec
outs
popa
stc
aas
xchg
mov
cld
jg
test
sti
in
and
pop
movs
lahf
loope
jg
std
ret
icebp
jecxz
dec
jg
aas
(bad)
fxtract
sbb
aas
mov
jg
cli
push
aas
dec
bound
mov
mov
sahf
mov
dec
jns
cmps
les
cmps
lock
in
xchg
jg
ja
in
xchg
jg
xlat
add
jg
leave
aas
iret
stc
jl
cdq
mov
out
dec
xchg
clc
call
scas
(bad)
ss
mov
int3
and
mov
cld
scas
les
test
mov
jno
dec
pushf
icebp
jnp
sar
adc
jge
mov
jecxz
xchg
lock
xchg
jle
idiv
cs
cld
cs
dec
add
stos
jg
ds
dec
or
jge
repnz
nop
(bad)
xchg
jg
mov
test
add
jg
ja
test
pop
jg
ja
into
les
lahf
cld
lea
add
aaa
cmps
mov
aas
std
ins
ds
(bad)
(bad)
(bad)
cld
mov
(bad)
mov
xchg
sar
or
cmps
dec
(bad)
cdq
fucomip
xchg
jg
ja
in
sti
popf
or
pop
push
or
cmp
or
jmp
adc
dec
call
add
lds
popf
jle
xlat
nop
movs
loope
cmc
imul
adc
jns
add
inc
(bad)
pop
clc
icebp
pop
movs
mov
dec
mov
inc
pop
(bad)
in
out
repnz
jo
mov
leave
jg
inc
loope
nop
xchg
retf
enter
cs
aas
stc
aaa
dec
pop
call
(bad)
jmp
out
repnz
jns
outs
loope
dec
ds
out
jg
dec
(bad)
fist
std
jmp
add
cmc
mov
inc
hlt
sub
dec
jp
aaa
and
sti
lea
stc
das
jle
dec
(bad)
rcr
xchg
enter
sbb
jecxz
or
add
mov
jg
das
std
sbb
(bad)
in
or
outs
inc
lock
dec
(bad)
fstp
sahf
fdivrp
lea
stc
xlat
jle
dec
(bad)
in
loope
jg
mov
adc
(bad)
mov
(bad)
repz
xchg
inc
and
cld
mov
push
daa
mov
outs
dec
aas
das
jae
(bad)
fistp
out
jp
ja
adc
data16
push
call
into
jle
xchg
(bad)
xchg
pop
mov
cmps
mov
rcl
scas
dec
sbb
xlat
ret
(bad)
push
and
ud0
cmp
(bad)
cli
ffreep
out
and
outs
rcr
rcr
mov
(bad)
std
xchg
jmp
ins
cli
daa
loope
ds
scas
jmp
jg
ja
or
std
push
jge
cmp
lahf
cmp
loope
add
cld
pop
mov
in
ins
jge
mov
lods
fild
stc
add
pusha
(bad)
lock
mov
add
out
stc
xor
mov
retf
sbb
stc
int
push
inc
ret
pop
(bad)
in
in
(bad)
scas
fwait
nop
mov
cli
std
aas
cmps
lahf
push
outs
clc
imul
jmp
std
cld
(bad)
call
std
adc
(bad)
call
cli
(bad)
das
mov
retf
out
cli
stc
xchg
ror
jg
ds
std
jmp
dec
jmp
std
jae
push
jmp
sbb
xchg
hlt
stc
out
dec
(bad)
push
jmp
inc
(bad)
push
jp
scas
mov
in
iret
cmps
idiv
jge
stos
add
call
(bad)
dec
call
(bad)
call
std
fild
inc
mov
pop
dec
mov
call
int
inc
std
dec
fistp
scas
icebp
out
ror
iret
test
mov
std
daa
hlt
jae
out
jmp
(bad)
(bad)
cmp
pop
mov
call
(bad)
mov
hlt
std
cmp
jmp
out
jg
std
std
test
aaa
hlt
ja
jg
xor
jg
(bad)
jg
jg
mov
jecxz
cmps
fistp
cli
stc
scas
sar
call
not
rcr
jg
mov
jg
mov
xchg
call
xchg
addr16
call
push
jg
imul
xor
push
call
(bad)
jmp
mov
fdivrp
scas
jmp
(bad)
out
mov
test
movs
call
rcr
sub
dec
out
pop
rcr
out
mov
cld
pop
cmps
lahf
call
jge
(bad)
shl
xor
(bad)
mov
mov
mov
(bad)
call
jg
stc
push
rcr
jg
std
mov
fnstsw
pushf
notrack
jmp
inc
hlt
repz
(bad)
pop
jmp
frstor
lahf
mov
mov
std
std
das
ror
fistp
rcr
pop
shr
jmp
cmps
fbld
(bad)
jge
sti
aas
dec
mov
lahf
inc
(bad)
jmp
jmp
(bad)
fcomi
repz
fdivr
std
ds
and
pop
shl
jg
sar
cli
std
pop
mov
std
(bad)
out
movs
out
jmp
cld
jmp
(bad)
mov
hlt
neg
add
iret
jle
fnstsw
ja
sbb
xlat
mov
sbb
loopne
cmp
(bad)
out
inc
dec
(bad)
mov
xor
(bad)
jg
(bad)
jg
(bad)
aas
mov
jg
(bad)
jg
(bad)
(bad)
mov
std
jg
imul
iret
sar
call
call
inc
inc
sbb
jecxz
stc
xor
lds
das
cli
aas
xchg
xchg
xchg
dec
(bad)
(bad)
inc
(bad)
sbb
jb
es
and
loop
push
push
pop
cld
call
imul
stos
inc
jg
std
pop
test
cmp
dec
std
(bad)
(bad)
xor
mov
(bad)
dec
pop
inc
and
jmp
(bad)
jmp
(bad)
mov
sar
inc
hlt
dec
call
(bad)
jg
(bad)
jmp
std
push
mov
adc
dec
(bad)
jg
std
dec
hlt
(bad)
mov
sar
jg
imul
cmp
pushf
mov
jmp
das
enter
enter
in
cld
cmp
jg
mov
mov
inc
sahf
inc
sti
leave
aas
rcl
daa
jmp
das
clc
in
adc
mov
inc
imul
pop
cmc
xlat
push
and
push
mov
iret
lahf
vpsubsw
jg
cld
cmc
(bad)
nop
pop
sti
inc
rcr
call
ja
js
pop
sbb
cmp
mov
jg
call
icebp
stc
dec
loop
add
dec
mov
clc
jge
push
mov
sbb
cld
sar
in
pop
loop
aas
push
mov
jno
and
jle
jl
cmp
xor
pop
mov
cmp
cld
jge
push
jl
jno
test
cmp
jno
dec
loop
sbb
std
jnp
jecxz
pop
cld
ins
clc
mov
clc
jmp
pop
mov
fcom
xor
adc
(bad)
mov
loopne
ret
xor
mov
cdq
xchg
(bad)
idiv
pop
loope
fild
or
xchg
sub
cld
sbb
jg
jle
xor
fistp
add
cli
sti
push
in
loopne
aas
fwait
(bad)
(bad)
punpckhbw
das
jecxz
xor
fwait
jecxz
cmc
inc
adc
stc
xor
lock
nop
cli
jl
lock
jmp
sbb
push
cld
sti
clc
icebp
mov
dec
mov
cmc
sar
paddd
lock
outs
mov
mov
mov
xchg
loope
aas
sbb
cld
cmp
loopne
pop
jg
jle
jns
(bad)
loope
jle
xchg
lahf
pop
inc
stc
add
call
dec
outs
mov
cld
test
mov
ret
in
xor
in
idiv
push
sub
fsubrp
cwde
(bad)
push
hlt
(bad)
fcomip
xlat
call
cmp
call
sar
jg
pop
inc
push
(bad)
ja
jmp
call
jg
cli
call
inc
(bad)
mov
scas
jle
mov
cld
xchg
(bad)
inc
sub
repz
xor
pop
mov
imul
push
imul
and
mov
pop
sar
jg
sbb
(bad)
(bad)
sub
outs
pop
repnz
sti
lods
enter
icebp
jmp
leave
inc
xor
not
mov
sti
in
xchg
xor
mov
out
fistp
ret
or
imul
mov
mov
pop
inc
ds
adc
jmp
icebp
out
in
clc
addr16
cli
in
mov
add
aas
push
xchg
xor
push
push
icebp
loop
les
jg
ds
loopne
mov
adc
out
cmp
cld
das
shl
daa
ds
sub
call
aaa
mov
(bad)
(bad)
ja
and
movs
in
loope
mov
(bad)
and
not
out
sub
jg
add
push
cld
or
clc
cdq
cmp
aas
jle
cmp
or
out
ret
ucomiss
dec
loopne
ret
pop
mov
pop
mov
adc
scas
hlt
(bad)
sub
loope
and
jmp
stc
(bad)
jg
shl
xchg
push
sti
mov
pop
repnz
addr16
and
push
(bad)
in
cld
sbb
icebp
in
or
mov
aas
stc
mov
jbe
or
int
mov
cmc
push
push
push
loopne
cmps
sbb
das
(bad)
pop
into
ds
repz
sub
(bad)
jmp
in
(bad)
icebp
adc
std
sar
ja
in
(bad)
mov
jne
retf
push
movs
mov
clc
xor
neg
dec
es
xchg
dec
(bad)
out
leave
cmp
dec
push
shl
or
jle
dec
jae
out
lods
shr
pop
mov
mov
stc
sub
cmp
clc
sti
jle
or
scas
jae
(bad)
sbb
addr16
jge
cmp
stc
imul
idiv
xor
clc
pop
mov
pushf
pop
and
loop
(bad)
xor
mov
sub
inc
adc
nop
(bad)
clc
sub
cmc
inc
cli
dec
push
cmp
pop
in
ss
jg
jle
in
mov
jecxz
out
aas
inc
leave
mov
jmp
ins
cld
daa
std
cs
clc
in
in
call
cmps
cmp
scas
sub
(bad)
xchg
loop
mov
pop
fsub
loop
xchg
(bad)
ds
(bad)
adc
lds
cdq
lods
mov
xor
nop
mov
cmps
je
pop
dec
es
mov
call
cld
push
lahf
cld
mov
into
jg
int
push
mov
idiv
adc
mov
std
mov
sub
bound
(bad)
stc
jno
mov
inc
xchg
sbb
int
xor
jecxz
jl
sbb
pop
lock
daa
jg
out
cld
sbb
mov
cmp
and
ja
xor
hlt
jmp
jmp
leave
paddd
dec
call
rcr
and
pop
mov
mov
(bad)
rcr
xchg
add
pop
dec
and
and
mov
leave
xchg
push
in
clc
dec
mov
lahf
or
call
xor
std
(bad)
test
sub
dec
cmp
jmp
fcomip
mov
or
call
lahf
cld
idiv
dec
sar
cmp
lahf
pusha
(bad)
ja
cli
ins
adc
and
cld
es
cld
mov
aas
stc
cmps
jle
into
nop
jg
mov
mov
push
(bad)
mov
dec
outs
stc
mov
in
stc
in
mov
outs
inc
cld
repnz
jle
(bad)
(bad)
mov
out
lods
out
std
inc
dec
leave
shr
mov
jg
ds
es
cmc
xchg
mov
lock
test
(bad)
xor
test
aaa
and
(bad)
ins
adc
jae
shr
je
and
mov
ss
std
mov
out
icebp
inc
ret
cli
out
dec
sbb
xlat
mov
or
mov
lods
cmp
(bad)
(bad)
dec
inc
iret
jmp
ja
in
cld
add
add
inc
inc
es
in
(bad)
sbb
sub
mov
std
pop
hlt
(bad)
hlt
leave
mov
outs
std
mov
cld
jmp
lods
sub
cld
mov
cld
mov
out
scas
xchg
std
cs
dec
or
and
cs
test
das
mov
rol
or
(bad)
std
iret
ror
hlt
outs
fldl2t
stos
loope
dec
outs
shl
lahf
add
cld
push
mov
mov
jmp
mov
jl
mov
scas
int
dec
in
xchg
ins
jge
mov
repnz
cld
int
ret
push
test
pop
inc
add
dec
shl
pop
or
out
dec
aas
jg
cli
(bad)
mov
sti
pop
shl
jg
std
dec
mov
(bad)
cld
aaa
mov
pop
mov
sub
jmp
out
clc
mov
lea
mov
cli
in
(bad)
jle
icebp
add
and
stc
jmp
ja
cmp
sbb
iret
out
shl
aaa
std
dec
mov
xor
jl
out
std
out
hlt
repz
movs
(bad)
dec
hlt
(bad)
jmp
push
stc
xchg
(bad)
(bad)
aas
cld
cmp
add
cwde
inc
adc
outs
cld
cmp
adc
push
mov
jle
mov
jmp
and
xchg
mov
or
cli
or
test
dec
push
sti
clc
xlat
xchg
pusha
out
scas
mov
stc
fwait
shl
jg
outs
and
std
jmp
iret
call
cli
cdq
push
fstp
cli
std
lahf
mov
cmp
cmp
mov
jmp
sbb
cmp
mov
mov
or
neg
rcr
and
push
call
sti
std
mov
hlt
idiv
inc
out
std
sti
hlt
repz
cmps
(bad)
push
hlt
stc
aas
inc
lahf
inc
scas
sub
inc
hlt
sti
dec
xor
jle
or
pop
cli
sti
(bad)
(bad)
adc
(bad)
push
jmp
sar
jg
(bad)
call
rcr
dec
scas
and
pop
push
dec
or
dec
std
mov
add
std
(bad)
cli
xchg
add
inc
jmp
inc
std
std
call
jg
dec
pop
cli
(bad)
jg
(bad)
daa
hlt
idiv
hlt
fstp
mov
outs
cmps
out
jle
scas
daa
sar
add
dec
movs
addr16
mov
sub
push
es
jg
hlt
stc
scas
loope
(bad)
outs
dec
(bad)
jmp
std
push
xor
std
jg
(bad)
mov
(bad)
jg
imul
int
scas
and
addr16
imul
scas
and
pop
sar
inc
call
dec
(bad)
call
mov
sbb
outs
cli
(bad)
aas
hlt
imul
or
pop
dec
(bad)
call
hlt
call
xlat
or
push
fs
add
(bad)
xor
inc
hlt
or
jg
stc
pusha
mov
xchg
dec
mov
je
jmp
aaa
call
(bad)
mov
mov
jmp
repnz
sar
iret
fs
jnp
idiv
xor
je
jg
sub
jg
or
mov
daa
xor
(bad)
aas
dec
push
hlt
lahf
es
jmp
daa
out
pop
es
xchg
mov
mov
and
stc
xlat
mov
and
cmp
mov
sar
(bad)
arpl
clc
lods
arpl
repnz
dec
shl
aam
xor
sub
xchg
ret
ds
sbb
repnz
aas
jle
and
push
pop
sbb
(bad)
out
sar
cld
adc
les
repnz
jmp
gs
pop
xchg
or
das
cmp
xor
icebp
inc
ret
enter
mov
in
ffreep
(bad)
xchg
aas
leave
mov
dec
mov
lahf
test
mov
jno
retf
das
loopne
pop
or
push
ret
push
pop
imul
mov
ret
lds
loope
outs
es
das
loope
xchg
add
aaa
clc
icebp
std
sub
das
add
sbb
(bad)
loope
add
sbb
push
mov
shr
mov
shr
movd
loopne
mov
retf
(bad)
std
xchg
mov
sahf
jecxz
popf
test
xlat
aas
test
fsubr
pushf
(bad)
push
scas
loope
xchg
xchg
js
(bad)
sbb
and
cmp
jg
xchg
mov
out
dec
jle
pop
repz
adc
or
(bad)
cmp
call
inc
repnz
std
sbb
mov
std
hlt
(bad)
jg
(bad)
(bad)
mov
repz
or
test
repz
mov
ja
(bad)
mov
stc
ja
dec
inc
jle
addr16
cld
dec
sbb
adc
pop
(bad)
shr
cld
fnstsw
outs
dec
sub
mov
cmps
test
lahf
es
std
fnstsw
stc
or
pop
in
mov
test
(bad)
in
in
sub
mov
ds
ret
cmp
clc
lds
fist
cmp
movs
aad
jae
clc
cmp
stc
add
mov
mov
cmc
rcr
mov
das
and
call
sub
and
shl
daa
mov
repnz
jle
repnz
mov
leave
aaa
js
test
jg
or
pop
shl
jl
mov
iret
push
ficom
xchg
mov
dec
int
push
lahf
cld
adc
in
inc
in
cld
sbb
test
sti
adc
jmp
inc
or
pusha
repz
add
aas
into
test
fwait
pop
adc
cld
mov
fsubr
iret
cld
dec
xchg
hlt
(bad)
popf
cmp
(bad)
mov
sbb
fsub
mov
not
jo
div
movs
(bad)
jg
imul
jmp
(bad)
(bad)
jle
call
ds
jg
scas
cld
mov
cmp
xor
into
in
das
leave
sub
out
iret
les
push
add
sub
mov
mov
call
stos
push
repnz
(bad)
es
jmp
repnz
xor
(bad)
repz
jg
out
repnz
ret
call
fldcw
jl
rol
add
cs
(bad)
out
dec
xchg
mov
xchg
icebp
cmp
mov
xchg
(bad)
cmps
cmp
push
jo
in
xchg
jg
mov
in
sti
add
adc
jl
leave
fisttp
cmc
add
push
call
pop
repz
ror
(bad)
aaa
mov
adc
stc
cmovns
mov
xor
jmp
std
cld
pop
sub
clc
addr16
(bad)
mov
call
jg
ret
in
cli
popf
ds
jmp
mov
sbb
aaa
(bad)
in
jne
jle
cmp
adc
das
cmps
aas
jle
scas
lods
stc
push
adc
(bad)
fsub
fisttp
iret
icebp
out
xor
pop
dec
jle
out
mov
cmp
or
mov
div
jbe
and
int
xor
sbb
or
and
adc
lock
dec
add
pop
adc
fild
hlt
mov
mov
outs
dec
lods
std
fwait
jne
jmp
sbb
cli
or
daa
(bad)
out
out
clc
leave
mov
(bad)
xchg
jg
sub
mov
(bad)
xor
pop
mov
cld
(bad)
popf
iret
retf
pop
add
js
dec
into
shl
outs
inc
and
inc
inc
sti
pushf
xchg
rcl
dec
(bad)
repz
fadd
test
std
inc
hlt
fnsave
fdivr
aas
lds
imul
jle
daa
jmp
outs
inc
enter
jmp
loop
pop
mov
in
and
test
mov
mov
pop
ss
in
in
mov
mov
mov
outs
push
cld
sbb
outs
sti
leave
mov
sub
cwde
cmps
or
sti
lahf
(bad)
(bad)
imul
repz
pop
nop
js
pop
xor
cmp
dec
dec
jle
mov
and
in
aaa
and
and
cld
into
hlt
idiv
aas
push
mov
cmps
hlt
sbb
(bad)
jg
push
(bad)
sahf
jg
jle
inc
clc
mov
sti
push
std
cmp
ja
adc
das
shl
mov
push
out
mov
hlt
div
jmp
out
mov
in
push
rcr
adc
std
div
neg
inc
fisttp
fisttp
fisubr
(bad)
inc
call
ja
iret
inc
push
not
cmp
daa
mov
xchg
repz
std
lahf
mov
call
or
mov
dec
les
pop
jmp
dec
sbb
dec
call
(bad)
fucomp
(bad)
jg
push
fdivr
adc
(bad)
fbld
out
mov
neg
inc
lahf
dec
fstp
sbb
loop
mov
repz
jns
(bad)
jmp
test
jmp
xchg
inc
nop
lahf
cmps
mov
imul
jg
(bad)
out
(bad)
and
inc
out
pop
push
jg
xor
icebp
aaa
shl
add
inc
mov
lods
jbe
movs
fbstp
std
jmp
mov
dec
jp
fbld
pop
sar
mov
cli
pop
ror
aas
cdq
(bad)
and
mov
jle
sahf
hlt
neg
repnz
sbb
ja
or
dec
mov
loop
ret
cmps
lahf
jmp
jge
addr16
pop
hlt
repz
mov
std
lahf
cmps
inc
out
mov
hlt
(bad)
mov
test
fild
aas
mov
stc
jmp
and
cli
sti
xor
stc
outs
dec
aas
pop
hlt
fstp
cli
stc
addr16
inc
adc
std
call
(bad)
fild
jg
mov
call
xchg
fistp
std
jle
(bad)
data16
repz
movs
idiv
inc
jp
pushf
jle
jae
repz
(bad)
jg
fild
dec
cli
(bad)
jg
lahf
popf
rcr
push
mov
mov
jbe
imul
add
sbb
and
test
dec
(bad)
jg
std
std
cmp
push
hlt
dec
sti
out
outs
and
(bad)
aas
cli
lea
cli
ins
jle
js
xchg
jle
mov
adc
stc
pop
push
aas
call
mov
lods
call
inc
cli
cld
dec
mov
fidivr
clc
std
ins
hlt
stc
outs
inc
out
std
out
hlt
fldcw
std
cld
add
mov
call
fistp
jle
popf
hlt
stc
out
dec
(bad)
push
call
aaa
nop
add
jmp
sar
aam
jg
lock
jp
scas
movs
iret
(bad)
fistp
std
cld
xchg
ds
neg
fcomip
xlat
cmp
ins
xlat
call
push
ins
jg
js
in
jg
imul
or
in
push
mov
dec
dec
jle
mov
add
mov
(bad)
push
(bad)
aas
cmc
xlat
nop
pop
out
sti
xor
sar
call
(bad)
aas
dec
(bad)
push
jmp
(bad)
aas
cmps
(bad)
push
(bad)
call
call
(bad)
(bad)
fcmovnbe
(bad)
jg
cli
mov
in
hlt
call
xor
imul
pop
inc
(bad)
jmp
(bad)
jg
std
dec
movs
(bad)
jmp
(bad)
push
sar
dec
(bad)
aas
cld
imul
fidivr
imul
sti
(bad)
call
push
(bad)
jmp
dec
push
jmp
dec
movs
mov
sar
das
call
cmp
call
dec
(bad)
jmp
jle
pop
dec
sti
xor
(bad)
jg
scas
and
std
(bad)
out
mov
(bad)
jg
(bad)
jmp
cli
(bad)
jg
(bad)
call
jmp
(bad)
jg
(bad)
jg
xlat
cmps
jno
(bad)
jg
cli
(bad)
out
inc
call
sar
out
(bad)
ficom
mov
std
jg
(bad)
jg
(bad)
inc
push
(bad)
aas
nop
(bad)
inc
jmp
popa
hlt
jmp
cld
jle
xchg
cmc
sub
jg
xlat
pusha
lahf
out
xchg
dec
leave
ds
das
sar
jg
xchg
mov
cli
pop
loope
mov
icebp
iret
nop
aas
repnz
jo
inc
pop
ret
cwde
jl
mov
jmp
cmp
cmp
mov
dec
xor
lahf
popf
(bad)
jnp
jmp
fsubr
(bad)
xchg
add
mov
mov
pop
pop
adc
pusha
sub
pop
mov
add
or
loope
fcomip
loopne
rol
xor
mov
cld
test
xchg
pop
mov
mov
icebp
cmc
outs
test
rol
push
jle
fcomi
(bad)
idiv
fucomp
jg
mov
in
cmp
ror
pop
or
mov
retf
xchg
ffree
mov
clc
sbb
sbb
push
sbb
aas
ret
out
cmp
sbb
std
push
pop
jg
(bad)
clc
jmp
mov
test
or
adc
mov
mov
jecxz
pop
cld
add
icebp
fld
out
sbb
pop
scas
lock
clc
iret
inc
jecxz
cld
not
aaa
sub
movs
jg
jle
inc
mov
jnp
xchg
(bad)
dec
jbe
out
(bad)
es
loopne
sbb
pop
repnz
popf
lods
das
(bad)
scas
pop
pand
clc
pop
icebp
jecxz
paddd
sub
std
sar
cld
aas
rol
loope
mov
pop
(bad)
cmp
sti
pop
lock
mov
(bad)
fs
div
shr
jge
mov
(bad)
out
int3
dec
jbe
rol
pop
mov
cmp
sti
out
jecxz
loopne
ret
pop
adc
cmp
pop
jl
lock
(bad)
out
je
xor
icebp
push
mov
clc
cli
sub
pop
xchg
fs
call
js
icebp
aad
sbb
aas
jle
add
(bad)
addr16
xor
xlat
icebp
fucomi
xchg
ds
mov
shr
mov
jle
ins
movd
std
pop
loop
pop
test
leave
sar
xchg
not
loopne
dec
mov
pop
clc
in
outs
lds
(bad)
shl
jns
pop
paddd
push
sbb
mov
add
cli
loopne
ret
or
shr
addr16
pop
pop
mov
jb
(bad)
loopne
jmp
pop
pop
aas
xor
fwait
push
adc
jg
dec
out
idiv
icebp
ja
scas
lock
std
sbb
pop
(bad)
ins
jmp
jo
movs
popf
pop
and
xchg
fistp
sbb
adc
mov
(bad)
aas
cmp
cs
sub
call
sbb
movs
(bad)
call
hlt
(bad)
jg
dec
xor
dec
hlt
(bad)
dec
(bad)
jg
xlat
je
xchg
inc
or
dec
dec
push
dec
call
jle
rol
jg
std
lahf
pop
retf
pop
mul
pop
cli
adc
xlat
inc
add
fbld
addr16
ds
push
mov
imul
movs
inc
std
daa
sub
mov
xchg
jg
sub
jae
cmc
mov
push
aam
sti
jle
xchg
movs
xor
xchg
and
movs
xchg
and
xchg
and
fucompp
out
mov
dec
(bad)
outs
mov
xor
ins
xor
out
aam
div
shl
outs
lock
rcl
sbb
cmp
shr
jle
xchg
out
jb
pusha
nop
sti
clc
pusha
or
pop
loopne
aas
adc
std
push
clc
in
shufps
stc
add
dec
call
movs
cwde
lea
jae
pop
loope
cs
pop
shl
dec
jmp
inc
hlt
jnp
xchg
std
daa
icebp
rcr
(bad)
jno
div
rcr
int
pop
mov
mov
mov
int
jmp
xchg
push
cld
(bad)
cld
pop
sbb
clc
cli
iret
(bad)
(bad)
(bad)
pop
cld
push
in
xchg
(bad)
daa
clc
in
daa
icebp
fistp
fistp
or
jmp
cwde
cmp
mov
cld
xchg
(bad)
cli
mov
xor
cmp
jge
add
out
dec
add
out
inc
add
(bad)
and
retf
and
repnz
xlat
jo
mov
or
ds
imul
retf
xor
ja
(bad)
pop
push
scas
loope
mov
xlat
lock
lahf
cld
sbb
dec
inc
fcomip
xchg
aas
out
pop
push
(bad)
pop
lahf
cld
loope
or
mfence
arpl
(bad)
out
add
adc
mov
ja
clc
or
sbb
cmp
sbb
pop
retf
and
push
test
scas
fcom
bound
adc
repnz
aas
jle
add
cmc
jle
sbb
cmp
clc
in
icebp
hlt
loopne
(bad)
(bad)
das
push
dec
cld
clc
int
inc
in
mov
push
jle
sbb
sbb
cwde
xor
outs
cld
mov
and
std
push
(bad)
das
pop
cld
add
jge
jnp
mov
sahf
(bad)
xor
std
(bad)
fstp
(bad)
sbb
or
xchg
lock
(bad)
(bad)
jg
dec
mov
cmp
jmp
xor
jnp
mov
xchg
dec
pop
push
(bad)
in
aas
lds
(bad)
movs
pop
inc
cdq
xchg
mov
mov
loope
xor
xchg
sbb
cs
pop
sar
pop
push
jg
cli
pop
loop
lahf
dec
leave
cmp
ja
ins
shl
retf
push
imul
movs
outs
and
es
cs
dec
loop
out
ror
dec
dec
mov
push
in
stc
pop
adc
(bad)
mov
cwde
dec
xchg
hlt
jg
imul
mov
jmp
ret
es
push
lahf
cld
cmp
daa
and
fdivr
(bad)
in
std
mov
iret
pop
dec
jmp
adc
(bad)
pop
inc
dec
movs
cld
ret
lahf
dec
jns
aas
xchg
xchg
test
fcomp
loope
aas
jmp
sbb
(bad)
jbe
out
aas
stc
outs
jle
retf
mov
cld
cmps
mov
div
xchg
push
push
jg
pop
in
push
push
loopne
push
in
sti
in
sub
cmp
in
es
and
call
out
dec
cmp
dec
cmp
outs
dec
cmp
mov
in
repnz
inc
mov
clc
ret
jmp
(bad)
loopne
out
inc
jb
mov
push
xor
add
rcr
out
xchg
sbb
call
leave
(bad)
ds
test
add
enter
icebp
fstp
dec
adc
cmp
xor
(bad)
movs
jg
jle
jnp
daa
cld
popf
mov
pop
dec
adc
cmc
mov
movaps
icebp
pop
dec
icebp
jl
stos
std
cwde
xor
mov
sub
push
outs
cmc
daa
sub
mov
add
outs
dec
mov
(bad)
aas
cmps
pop
push
shr
cmps
pop
(bad)
jno
in
xchg
data16
mov
pop
fisub
iret
cld
mov
sbb
dec
adc
pop
add
stc
mov
in
std
add
xlat
jg
lock
mov
push
in
aas
stc
aaa
jg
call
ja
in
jmp
dec
jle
sbb
outs
cld
leave
aas
and
popf
jg
(bad)
mov
loopne
data16
ja
jle
stos
inc
sub
inc
xor
fucomip
xlat
nop
cmc
inc
fsubr
fcomip
xlat
nop
ins
in
pop
inc
push
xchg
cmp
hlt
xchg
dec
push
aas
mov
call
jae
imul
jecxz
dec
jmp
cld
cli
das
jmp
mov
in
jmp
adc
pop
dec
es
adc
adc
inc
rcr
fsub
cs
lock
jmp
mov
inc
fst
fs
and
loope
inc
leave
ret
sbb
sbb
mov
cld
mov
xlat
jg
fdivr
lahf
(bad)
ss
xlat
mov
repnz
std
mov
ret
ffreep
xor
push
xchg
jecxz
sti
out
xchg
push
cli
ja
shl
out
inc
xchg
std
mov
(bad)
movs
(bad)
xchg
jg
pop
jl
iret
cld
jbe
cld
xchg
mov
shl
ja
jle
pop
loopne
clc
jnp
jecxz
in
push
cmc
das
cmps
dec
jg
pop
cmp
pop
mov
in
pop
inc
lahf
push
hlt
jns
dec
or
ds
xlat
xor
jge
aas
jnp
iret
icebp
shr
clc
leave
push
cmp
pop
loop
pop
sti
in
std
in
mov
jge
dec
mov
mov
outs
lahf
cld
mov
fstp
jecxz
inc
mov
pop
mov
(bad)
sub
cwde
mov
mov
sbb
inc
mov
in
jle
outs
mov
xlat
out
fidivr
imul
outs
mov
mov
mov
push
bound
sbb
sbb
push
mov
aas
dec
mov
mov
fistp
std
std
out
inc
shr
inc
mov
call
mov
(bad)
jmp
xchg
sbb
pop
dec
(bad)
(bad)
(bad)
outs
and
jecxz
xchg
pop
fld
mov
inc
jge
sub
sti
pop
inc
(bad)
call
sti
fisttp
add
mov
sar
(bad)
jge
sti
pop
sar
dec
cli
in
xor
dec
and
jbe
(bad)
(bad)
std
or
out
inc
(bad)
fbld
jg
jge
inc
lahf
dec
inc
fucomp
inc
jg
test
stc
scas
dec
(bad)
push
cli
sti
aaa
std
xor
sar
jg
outs
and
test
push
std
inc
cmp
neg
out
nop
pushf
int
and
mov
hlt
stc
jg
mov
ja
out
or
in
(bad)
push
cli
std
sbb
adc
xchg
fistp
inc
mov
(bad)
not
(bad)
dec
xlat
mov
cli
std
scas
stc
lea
push
xchg
dec
stc
ret
call
call
call
jg
std
jl
aas
jmp
adc
cld
cmp
hlt
mov
(bad)
jg
idiv
shl
or
aas
test
dec
sar
jg
cli
mov
hlt
pop
ror
mov
fisttp
jge
clc
cld
daa
mov
(bad)
jnp
sbb
cmc
lahf
movs
iret
ds
xor
pop
jle
aaa
xchg
cmp
jg
clc
std
pop
hlt
sti
in
xchg
pop
jmp
jle
add
cmps
ja
shl
jmp
nop
pushf
jmp
inc
mov
outs
add
call
xchg
dec
inc
push
xor
call
and
in
jle
ds
jnp
fstp
aam
adc
dec
call
sbb
fcomip
sbb
jmp
adc
push
mov
iret
mov
jle
leave
jecxz
mov
test
stc
jae
mov
sbb
sub
lea
lds
jns
fist
stc
aas
dec
jg
inc
ins
pop
ror
out
shl
jg
outs
and
mov
pop
neg
ja
std
(bad)
lahf
shl
xchg
hlt
fnstsw
inc
lahf
std
or
jge
aaa
xchg
mov
(bad)
fs
(bad)
mov
hlt
jmp
lea
mov
ja
jo
fild
fcos
add
call
dec
sahf
cli
pop
cli
ss
fild
mov
(bad)
pop
pushf
push
stos
jg
jo
repz
xor
mov
movs
(bad)
call
xchg
cli
ds
jg
imul
mov
dec
lods
std
in
mov
pop
sar
jmp
cli
(bad)
inc
(bad)
aas
call
sub
(bad)
cmp
(bad)
jg
cli
(bad)
fstp
lahf
push
sti
mov
std
mov
(bad)
aas
mov
cmps
test
cli
scas
sub
mov
out
out
mov
(bad)
jg
(bad)
jmp
sar
jmp
(bad)
jmp
call
jmp
scas
inc
lods
inc
(bad)
dec
(bad)
mov
(bad)
mov
bound
(bad)
call
inc
(bad)
sti
sar
out
dec
inc
std
dec
(bad)
(bad)
mov
(bad)
call
(bad)
call
(bad)
fild
inc
call
call
(bad)
inc
(bad)
(bad)
(bad)
(bad)
jg
std
call
cld
mov
lea
aaa
movs
(bad)
call
hlt
(bad)
fisttp
dec
std
call
std
call
std
jmp
std
inc
(bad)
out
dec
jmp
call
ja
dec
call
std
pop
enter
les
cld
dec
leave
pop
cld
xchg
cld
mov
(bad)
mov
in
fdivr
mov
aas
stc
(bad)
cmp
hlt
leave
aas
shr
dec
and
jno
xchg
mov
(bad)
jb
xor
(bad)
mov
mov
test
mov
call
ds
inc
jg
dec
cmps
mov
and
test
dec
mov
dec
cmps
jno
int
jmp
loop
test
mov
cld
xchg
xchg
add
sub
std
in
out
or
adc
loope
jg
mov
jmp
inc
jb
xchg
imul
pop
loop
aas
sbb
cld
sti
clc
in
outs
lds
sub
mov
or
xchg
imul
mov
(bad)
das
cmp
dec
shr
iret
inc
stos
aas
sbb
sbb
cld
sub
loopne
mov
adc
sti
(bad)
lock
lds
add
inc
mov
inc
adc
pop
pop
pop
dec
mov
cmc
loopne
adc
cld
jne
loopne
mov
pop
pop
lods
push
mov
(bad)
jecxz
stc
shr
pop
mov
jl
leave
mov
xchg
xchg
imul
ja
popf
push
sbb
pop
cld
ja
icebp
pop
push
cld
out
icebp
pop
dec
xor
mul
sbb
call
jle
mul
lahf
inc
sbb
aas
loope
jecxz
jg
mov
ja
clc
sbb
sar
paddd
cld
test
int
(bad)
push
jl
pop
loope
aas
sbb
cld
hlt
rcr
pop
cmc
shr
out
jmp
(bad)
cmp
jbe
scas
mov
cs
icebp
stc
xchg
clc
loopne
cmp
dec
icebp
rcl
sti
xor
ds
jl
addr16
pop
mov
test
mov
jmp
cld
aaa
les
and
xor
fistp
push
fsubr
jbe
aas
std
pop
mov
gs
pop
loope
fucomip
loopne
mov
lock
inc
test
call
clc
shl
sar
fbld
jl
push
cld
cmc
ss
not
cmp
mov
dec
inc
mov
and
ins
push
mov
dec
scas
shr
xor
pop
jmp
jecxz
sti
pop
xchg
ss
xor
jle
out
out
(bad)
sbb
jle
fucomp
icebp
imul
xor
sbb
ss
add
dec
mov
(bad)
aas
mov
call
sar
jmp
(bad)
fild
test
add
jg
sbb
add
out
call
xchg
ss
outs
jmp
call
(bad)
jg
pop
shl
(bad)
out
inc
push
test
jg
(bad)
jg
imul
inc
(bad)
jg
call
(bad)
jg
(bad)
inc
pop
push
push
das
jle
iret
push
clc
mov
inc
and
daa
jmp
xchg
call
loopne
cmps
adc
pop
(bad)
sbb
xchg
jg
xor
adc
std
es
cld
adc
mov
xchg
das
aas
stc
stos
cmp
sti
leave
pop
and
(bad)
lahf
dec
stc
fwait
aas
xchg
repnz
jg
mov
mov
dec
mov
leave
loope
clc
in
das
(bad)
outs
aas
or
dec
icebp
rcr
jle
jl
jae
or
jle
shr
pop
dec
push
sahf
loop
hlt
loopne
cld
clc
cmp
jg
lea
and
clc
(bad)
jecxz
cmps
retf
jle
mov
(bad)
in
outs
mov
sbb
std
cli
clc
clc
cmps
push
jle
cld
clc
jge
pop
test
movs
retf
and
std
lahf
inc
ss
inc
aas
mov
or
sbb
div
aaa
pop
ret
cmp
xchg
icebp
mov
rcr
jle
rcr
lock
jecxz
pop
pop
jg
jle
cmp
out
pusha
lea
ds
ds
push
data16
loopne
push
xchg
mov
sub
test
mov
adc
std
sahf
adc
and
adc
dec
push
popf
fisttp
stos
cmp
mov
xor
idiv
cs
dec
(bad)
neg
xchg
shl
das
movs
lds
dec
push
cld
jbe
sbb
int
sub
movs
lds
dec
call
shl
ja
movs
leave
xchg
dec
dec
hlt
pop
mov
dec
lods
inc
and
sub
dec
loope
outs
jne
pop
cmps
jecxz
call
call
loopne
push
pop
mov
pop
clc
icebp
in
(bad)
jecxz
outs
jp
cmp
(bad)
out
jle
pop
jecxz
outs
jno
fwait
loopne
push
iret
into
outs
jnp
mov
and
mov
push
(bad)
mov
pushf
push
sti
std
and
fdiv
and
dec
gs
aaa
(bad)
pop
push
sub
xchg
pop
inc
pop
jle
(bad)
(bad)
fistp
mov
cld
xlat
jo
(bad)
fistp
sbb
dec
outs
movs
std
loopne
or
push
xor
out
cli
pop
repz
data16
ja
dec
(bad)
bound
sahf
push
inc
movs
movs
cmp
pushf
fisub
(bad)
data16
outs
imul
out
(bad)
imul
sub
lock
lock
imul
dec
fsubr
xchg
mov
and
sub
push
retf
pop
shl
sti
xchg
jle
xchg
mov
(bad)
std
test
and
jo
cmp
inc
stc
mov
cld
clc
popf
paddd
cld
clc
pop
xchg
dec
(bad)
cmp
push
dec
fnstcw
or
or
pop
daa
or
imul
add
sbb
outs
push
cld
sbb
daa
jmp
(bad)
in
movs
sub
aas
dec
stc
test
jmp
stc
sbb
test
mov
sub
inc
push
cld
mov
ret
sub
xchg
(bad)
outs
sub
clc
cs
iret
leave
daa
stc
pushf
jl
inc
lahf
cld
xchg
mov
sbb
fistp
xchg
jmp
pop
nop
aaa
je
mov
lock
loope
cmc
cld
fist
pop
push
iret
mov
push
iret
ja
out
ds
jnp
mov
xchg
xchg
popa
mov
popa
cli
xlat
dec
lahf
cld
xor
in
repz
pop
idiv
jle
pop
xchg
int3
cld
stc
xchg
inc
sti
mov
lea
popf
in
dec
cmps
sar
icebp
test
pop
lods
or
arpl
cmp
or
fucomip
ja
xchg
(bad)
std
dec
loopne
out
sti
mov
addr16
repnz
(bad)
dec
mov
std
jg
imul
mov
bound
pop
lock
dec
stos
inc
and
loop
ret
lahf
in
(bad)
pop
jb
test
popf
pop
loope
addr16
loopne
inc
pop
stos
and
fild
icebp
mov
fmul
inc
in
ja
stos
mov
inc
xor
jnp
int3
ins
ror
jge
data16
nop
add
pop
add
daa
or
or
pop
cmp
mov
nop
mov
jle
rcl
mov
pop
sar
(bad)
out
dec
fwait
jno
or
jecxz
and
mov
sub
fisttp
and
jg
mov
out
int
stc
inc
jle
call
mov
(bad)
(bad)
rol
repnz
push
add
aaa
and
div
movs
mov
sub
inc
inc
dec
imul
jg
dec
(bad)
mov
or
pop
dec
test
add
sub
cmp
push
mov
std
(bad)
frstor
rcr
clc
imul
jb
stos
retf
push
aas
cld
fbstp
cmp
push
sub
mov
lahf
push
jnp
leave
mov
in
scas
(bad)
aaa
push
out
repnz
fcmove
aas
dec
das
adc
xor
sar
ret
(bad)
scas
jg
cmps
inc
xchg
xor
and
pop
jae
std
test
cwde
cwde
js
xchg
jmp
ja
call
(bad)
mov
cwde
clc
aaa
clts
xchg
loope
fistp
cdq
fist
cld
mov
out
in
daa
jmp
outs
test
xchg
cmp
(bad)
dec
lahf
cld
xchg
mov
lock
(bad)
call
in
xchg
jg
ja
sub
outs
clc
leave
mov
xchg
fistp
jnp
scas
cld
jmp
mov
movs
les
pop
dec
movs
scas
(bad)
push
cli
dec
push
mov
retf
out
repnz
mov
mov
lds
lahf
cld
movsx
fcomp
(bad)
(bad)
mov
jle
in
add
pop
mov
jmp
jle
(bad)
clc
ins
aas
stc
out
sub
pop
mov
xlat
adc
movs
mov
inc
jb
frstor
xor
(bad)
pop
sti
aaa
push
push
xchg
adc
jmp
sbb
mov
std
std
dec
test
dec
(bad)
aas
push
lea
(bad)
(bad)
mov
nop
sti
(bad)
pop
inc
(bad)
call
mov
mov
test
xchg
adc
(bad)
jmp
sti
or
cld
addr16
jle
std
mov
hlt
sti
ja
mov
xchg
jle
jle
(bad)
mov
jge
addr16
jg
cli
mov
stc
sub
sti
and
(bad)
xor
jae
aas
push
fisttp
inc
jle
cmps
ss
mov
inc
jmp
sahf
hlt
repz
mov
dec
call
lock
pop
ror
pop
ret
cmps
ss
jmp
and
mov
cmp
or
fstp
addr16
lock
cli
jmp
jo
rcr
ds
repz
(bad)
and
(bad)
adc
dec
test
(bad)
jmp
jmp
inc
cli
jns
lahf
std
dec
hlt
dec
std
dec
hlt
(bad)
fist
idiv
std
cld
repz
sti
cmp
aas
call
push
jge
(bad)
(bad)
ficom
movs
aas
movs
mov
pop
dec
jg
jmp
repz
shr
cwde
in
aaa
hlt
sti
fisttp
sbb
out
call
sbb
xchg
mov
xlat
mov
pop
jmp
fild
xchg
add
dec
cdq
jl
(bad)
mov
(bad)
jg
imul
or
out
inc
(bad)
call
nop
xchg
scas
out
sar
jg
cli
push
xlat
jo
std
xchg
(bad)
pop
sar
das
jg
xor
mov
push
loopne
(bad)
push
hlt
jg
mov
cmp
std
call
mov
xchg
jmp
pop
or
(bad)
jmp
mov
data16
(bad)
fist
dec
dec
lods
mov
dec
pop
in
std
lahf
lods
cwde
jle
outs
inc
cmp
out
pop
inc
mov
and
stc
fisttp
jl
out
xchg
mov
xor
call
fst
rcr
mov
or
outs
inc
out
and
and
std
pop
xor
mov
cdq
jmp
lahf
cld
cdq
mov
pop
jmp
xchg
in
and
icebp
mov
call
fisttp
les
jno
out
mov
out
mov
jg
jno
jg
jbe
jg
jno
mov
les
dec
lds
add
loop
inc
adc
pop
(bad)
ja
pop
(bad)
ja
js
mov
mov
clc
iret
lock
out
add
mov
push
jle
sbb
test
fcmovnu
clc
ja
inc
mov
pop
jg
inc
enter
scas
xchg
idiv
mov
jge
cmps
mov
ins
repz
hlt
call
je
(bad)
aas
cmps
(bad)
push
scas
and
cld
sbb
add
xchg
movs
pop
lahf
xchg
jge
in
leave
mov
mov
fs
test
ins
jg
das
dec
cld
mov
pop
cmp
mov
mov
ds
sbb
daa
jg
lods
ds
push
in
(bad)
gs
cld
inc
mov
std
out
add
addr16
sti
hlt
cmps
xchg
xor
daa
popa
mov
push
mov
jge
(bad)
mov
clc
(bad)
push
mov
cmc
sbb
jns
aaa
cmps
in
jge
xchg
sti
test
dec
mov
pop
jbe
dec
push
gs
fisttp
mov
jg
pop
call
jb
(bad)
cmp
mov
mov
in
and
pop
xchg
(bad)
sti
repz
jle
repnz
and
in
push
mov
out
shr
sub
call
jmp
jg
mov
call
or
add
and
cld
mov
xchg
jo
dec
clc
jnp
or
and
dec
in
call
es
js
(bad)
idiv
and
xor
test
loop
clc
push
push
mov
push
cmp
sub
mov
inc
add
fist
cli
sbb
inc
mov
mov
fwait
jle
dec
std
mul
xor
mov
lahf
cld
dec
inc
mov
jg
fstp
lahf
inc
pop
push
cld
lea
stc
movd
jp
push
add
mov
mov
aas
dec
adc
dec
sar
call
leave
out
cld
sbb
mov
dec
inc
push
jle
mul
dec
std
sub
xlat
fadd
in
movs
out
add
and
mov
ja
add
add
pop
call
imul
fcmovnbe
push
pop
sbb
outs
inc
mov
fist
loope
shl
adc
adc
fistp
cld
xlat
mov
inc
lahf
cld
daa
mov
test
loop
(bad)
sub
(bad)
clc
fist
adc
stos
fucomip
xchg
(bad)
cld
mov
xchg
mov
out
lock
mov
xchg
ffreep
mov
cli
ffreep
std
cmp
push
in
shl
mov
fsubr
pop
loop
(bad)
push
out
iret
(bad)
aaa
clc
pop
push
out
call
aas
test
lock
sbb
jg
(bad)
mov
cld
mov
mov
jmp
hlt
iret
(bad)
scas
movhps
inc
icebp
pop
sti
xchg
jbe
in
jg
jnp
jmp
jg
lahf
sub
mov
std
cld
mul
call
mov
jle
leave
sbb
iret
bnd
jmp
sti
jg
aas
pop
std
pop
xchg
jae
pop
cli
push
cli
call
lahf
std
jne
repz
(bad)
aas
stc
imul
cli
aas
sahf
fist
(bad)
mov
cmc
pop
inc
aas
(bad)
jp
call
inc
mov
pushf
(bad)
push
aas
jmp
or
jg
scas
sub
nop
sbb
pusha
cld
pop
mov
jo
add
pop
jmp
call
out
inc
aas
jmp
out
mov
mov
clc
or
mov
(bad)
outs
clc
imul
mov
or
and
popf
pop
ret
imul
mov
sahf
mov
jmp
outs
call
and
adc
out
inc
mov
jecxz
aas
adc
sti
ja
dec
jmp
es
sbb
daa
es
cld
daa
mov
lahf
cld
mov
lods
push
(bad)
imul
pop
inc
jmp
sbb
ins
mov
adc
sbb
in
movs
shl
sti
in
cmps
es
imul
aas
stc
dec
jg
push
push
mov
push
nop
(bad)
in
rol
(bad)
mov
aaa
ds
in
test
fisttp
adc
outs
lock
loop
sbb
mov
fdivr
leave
loop
mov
mov
in
ja
xor
fwait
rcl
out
xchg
xor
into
and
mov
push
arpl
cmp
idiv
daa
loopne
fisttp
mov
ja
ror
and
sub
xchg
popf
fisttp
stc
push
jg
pop
sbb
in
ds
addr16
mov
sub
dec
call
cld
aas
lea
mov
mov
es
mov
outs
add
and
push
repnz
mov
mov
or
mov
cli
in
std
mov
jg
ret
and
in
xchg
(bad)
clc
pop
jl
pop
rcr
add
mov
mov
out
hlt
leave
jg
cmp
stc
mov
std
fbstp
stc
in
int3
or
jmp
call
ja
int
jecxz
dec
sar
xchg
push
ja
inc
jae
cmc
fwait
jg
retf
jle
repz
ja
sbb
xchg
(bad)
stc
mov
jo
mov
cmp
aas
jp
out
std
pop
push
add
adc
jl
xchg
sar
pop
or
std
outs
stc
jg
add
xchg
cmp
xchg
pop
dec
(bad)
sti
int
xchg
(bad)
mov
cmc
jle
pop
out
adc
call
(bad)
out
sar
push
lock
xlat
xchg
xor
jg
lahf
jmp
push
das
jmp
fbld
sbb
std
(bad)
pop
cli
stc
das
(bad)
call
loopne
pop
push
repnz
std
jl
ins
(bad)
adc
(bad)
jg
std
(bad)
fwait
sar
jg
cli
cmps
call
std
call
sub
push
(bad)
pop
cli
stc
dec
sar
sub
and
jmp
cmp
mov
loope
jle
addr16
or
cld
dec
hlt
call
xchg
xchg
cld
test
dec
lea
mov
mov
dec
xchg
jmp
lahf
cld
iret
mov
es
dec
jo
ret
dec
(bad)
xchg
fistp
jmp
les
cmp
xor
cli
fucomip
xchg
jg
ja
aas
jecxz
dec
(bad)
scas
fild
sar
or
out
cld
leave
pop
std
cmp
push
cld
sbb
ja
xor
(bad)
jecxz
shl
and
pop
clc
sti
aaa
(bad)
xlat
out
es
repz
lock
push
fist
sar
adc
cmc
daa
(bad)
out
outs
test
outs
cmps
std
cld
xchg
aaa
cld
in
(bad)
in
imul
outs
and
sti
sbb
sti
cld
es
leave
out
push
sar
(bad)
adc
aaa
loope
retf
daa
aam
outs
test
mov
in
out
inc
xchg
repz
jg
xchg
out
fist
xor
daa
dec
fcos
repnz
repz
(bad)
mov
loopne
cli
in
call
(bad)
xor
aas
dec
fs
mov
sti
popf
ds
(bad)
jg
dec
inc
jle
(bad)
mov
mov
sub
arpl
mul
hlt
shr
push
fistp
mov
sti
jg
ins
mov
ret
cmp
retf
outs
scas
lahf
cld
or
cwde
std
(bad)
mov
jmp
pop
jle
pop
clc
(bad)
cmc
mov
mov
sub
retf
adc
scas
sub
lahf
dec
(bad)
mov
hlt
(bad)
mov
cli
jnp
call
arpl
call
(bad)
call
call
call
pop
inc
int3
aam
icebp
imul
aas
push
fisttp
(bad)
jg
ret
call
sar
mov
add
hlt
das
std
pop
push
xor
cli
in
jle
pop
xchg
push
repnz
(bad)
mov
scas
jle
pop
ret
or
out
imul
(bad)
adc
mov
in
and
outs
dec
test
or
psrad
inc
mov
add
je
fnstsw
mov
add
fwait
push
je
fwait
jle
paddd
add
stc
daa
jg
loop
cmp
(bad)
mov
xchg
cmp
lock
mov
shr
lock
ja
sbb
repz
cld
mov
cdq
es
ins
pmulhw
std
iret
mov
aaa
push
sbb
push
call
sbb
dec
mov
outs
repz
mov
fidiv
pop
jle
mov
or
xchg
daa
push
sbb
fsubr
mov
fstp
(bad)
mov
xor
scas
dec
or
aam
adc
jae
repz
div
pop
jmp
cld
idiv
loop
dec
jg
dec
cld
push
data16
aam
pop
sbb
cld
sbb
inc
std
xor
in
and
imul
cmp
call
cli
xchg
xchg
sub
clc
jno
adc
out
inc
(bad)
dec
call
and
out
and
inc
(bad)
call
call
std
sub
jl
imul
sar
dec
pop
push
(bad)
jmp
fsin
std
pop
push
cld
mov
cli
std
out
clc
xor
jmp
mov
mov
scas
sub
movs
iret
(bad)
aam
dec
cld
dec
clc
(bad)
lock
cs
stc
das
cmp
fisttp
jl
jecxz
icebp
shr
cld
jbe
(bad)
sti
mov
out
inc
cmp
loope
mov
std
jg
imul
cld
scas
movs
mov
fs
mov
cli
outs
dec
lods
(bad)
fwait
xchg
add
(bad)
sub
aad
mov
mov
aad
or
jnp
cld
add
jg
mov
fisttp
(bad)
mov
(bad)
std
sbb
push
popf
sub
sti
lahf
cld
jns
or
dec
(bad)
hlt
(bad)
xchg
aas
inc
(bad)
std
pop
inc
mov
lock
push
(bad)
mov
neg
mov
in
xlat
or
mov
jmp
dec
xor
clc
(bad)
and
push
icebp
mov
hlt
leave
jg
or
stc
das
jg
adc
and
xchg
je
cs
nop
cmps
cmp
in
cli
sbb
dec
cld
repnz
inc
in
(bad)
fwait
xor
(bad)
mov
mov
dec
and
mov
daa
(bad)
cli
outs
sti
leave
mov
(bad)
in
xchg
inc
nop
dec
xchg
lock
add
rol
cmps
icebp
ja
sbb
push
mov
dec
icebp
jg
stos
idiv
nop
sbb
outs
dec
mov
or
call
mov
inc
outs
mov
xchg
loope
out
pop
push
clc
das
cmps
jns
lahf
mov
bound
jle
ret
xchg
and
mov
(bad)
lods
(bad)
loopne
ja
pop
xor
push
mov
out
sub
dec
aas
fsubr
dec
inc
fist
xor
push
mov
mov
xchg
sahf
xchg
neg
inc
pop
sub
gs
stc
pop
jg
outs
xor
aas
pop
lock
out
cld
sbb
mul
or
sbb
add
jg
movs
inc
xchg
stc
jmp
cmp
(bad)
fsqrt
cmp
mov
idiv
push
mov
add
sub
mov
xlat
xchg
les
jle
sbb
pop
dec
aas
mov
in
pop
loop
cli
jmp
(bad)
inc
std
pop
sbb
mov
shl
clc
xor
call
dec
xor
pop
inc
mov
pop
inc
aas
jmp
stos
fucomip
xchg
aas
hlt
ja
lea
sbb
fbld
test
in
(bad)
aaa
cmp
jg
outs
dec
movs
(bad)
jg
push
sar
mov
jge
and
fist
mov
(bad)
fsubr
lock
aas
sub
out
rol
inc
or
xor
cmc
mov
loop
sar
jg
pop
mov
sti
loopne
cld
mov
mov
(bad)
stc
lea
stc
lahf
jle
repnz
jle
sbb
fist
nop
fild
sub
cmc
iret
in
or
in
inc
push
es
dec
ror
mov
repz
jmp
mov
outs
je
adc
pop
es
push
dec
out
cwde
scas
pop
idiv
call
sbb
inc
cmp
jmp
js
mov
or
mov
sti
sbb
xchg
mov
mov
imul
jge
clc
cld
xlat
adc
sti
sbb
call
push
rol
push
jge
jmp
cld
dec
call
add
and
lock
repnz
out
dec
in
sahf
push
sti
xlat
hlt
inc
cmps
hlt
icebp
xchg
hlt
(bad)
jg
add
pop
jle
cs
or
aas
std
xor
sbb
sbb
ja
in
dec
xor
mov
out
dec
xor
fwait
ror
lock
push
mov
sub
dec
cmc
mov
cwde
push
xor
sbb
inc
test
mov
xor
push
inc
popa
xor
cld
cmps
mov
xor
gs
bound
jmp
xchg
mov
das
clc
in
(bad)
in
adc
xor
aas
pop
call
test
mov
shl
jmp
out
cld
leave
mov
push
jecxz
xor
pop
aaa
sti
pop
pop
js
lock
inc
pop
mov
adc
jno
out
cld
pop
pop
aaa
cli
in
mov
je
add
adc
lahf
and
shr
adc
mov
mov
rol
(bad)
stc
scas
rcr
outs
dec
push
mov
push
and
mov
mov
aas
sahf
aas
hlt
xlat
nop
lods
ds
xor
idiv
sbb
xchg
mov
or
ja
pusha
loopne
xchg
mov
lahf
lock
mov
or
out
inc
div
sti
ins
xchg
fucomip
aaa
in
js
ret
outs
out
loop
cld
or
adc
mov
fstp
clc
mov
add
mov
gs
hlt
int
cld
jg
pushf
aad
cmc
imul
shl
std
add
(bad)
aas
repnz
adc
cld
leave
cli
sbb
push
or
sahf
jg
and
sbb
mov
cld
cmp
dec
push
mov
cmp
(bad)
mov
adc
lods
mov
into
jne
mul
add
or
push
ret
retf
in
sti
cmp
mov
iret
(bad)
out
outs
mov
shr
jg
sahf
jg
mov
loopne
dec
mov
hlt
(bad)
out
call
loop
cld
adc
call
clc
lock
call
dec
jle
iret
dec
mov
loope
cli
in
stc
in
ds
fistp
dec
jle
out
lock
das
daa
jecxz
cmp
pop
ret
xor
js
nop
repz
mov
retf
pushf
pop
out
(bad)
outs
les
add
bswap
call
in
call
call
aaa
(bad)
xor
sar
mov
(bad)
fist
xor
add
bound
cmp
jg
mov
ss
outs
ret
fs
out
fdivrp
in
jg
dec
(bad)
pushf
outs
sbb
in
jle
cmps
ret
outs
add
fnstsw
xchg
dec
(bad)
iret
mov
pop
shl
dec
scas
fdivr
dec
ds
xchg
pop
pop
(bad)
xor
lock
lahf
cld
jge
and
or
movs
mov
outs
rcr
jg
cli
stc
mov
mov
(bad)
sti
in
adc
pop
lahf
cld
sbb
fistp
cs
sbb
fild
stc
in
and
mov
mov
mov
xor
push
(bad)
jmp
(bad)
jmp
(bad)
fcomp
(bad)
mul
rol
shl
jg
jns
adc
std
push
hlt
stc
dec
adc
dec
xchg
mov
imul
mov
shl
cmp
call
(bad)
push
sti
iret
mov
mov
in
jmp
iret
movs
lahf
adc
push
jle
xchg
ds
aas
dec
mov
jne
into
pop
inc
fistp
lahf
jmp
cli
in
ds
push
(bad)
(bad)
(bad)
neg
mov
mov
cmp
test
jg
(bad)
cli
hlt
ficomp
inc
lahf
lahf
shl
jg
mov
mov
call
out
sbb
dec
call
cmp
(bad)
dec
mov
mov
(bad)
sbb
out
inc
hlt
idiv
idiv
sar
call
std
jmp
cli
(bad)
aas
dec
mov
fist
jmp
cld
push
hlt
into
pop
dec
xor
jne
sti
das
movs
(bad)
out
sar
(bad)
aam
push
jge
jmp
iret
mov
jp
and
(bad)
sti
hlt
out
outs
dec
ins
imul
mov
inc
out
mov
cli
sti
sub
aas
pop
shl
inc
outs
sub
cmp
std
(bad)
mov
mov
sar
(bad)
hlt
out
lahf
dec
aas
jmp
cmp
sti
scas
movs
(bad)
ins
cli
std
fbld
(bad)
out
dec
out
std
ja
(bad)
inc
aas
pop
add
cmp
inc
jo
add
call
std
inc
push
fistp
std
aaa
push
dec
hlt
call
lahf
mov
shl
dec
jmp
imul
fidivr
jle
or
inc
sbb
jge
jmp
out
out
(bad)
dec
jg
(bad)
mov
neg
cmp
jge
sti
push
aas
scas
test
iret
shl
hlt
(bad)
aam
ds
pop
rcr
mov
mov
test
mov
mov
add
repz
mov
cmp
push
jg
mov
das
hlt
(bad)
mov
shl
jg
loopne
out
mov
sar
jg
sar
call
mov
cmp
xchg
aam
pop
cld
dec
and
adc
sar
(bad)
cmp
jmp
sbb
jl
(bad)
push
jmp
icebp
(bad)
cmp
std
call
mov
iret
and
cwde
fdivrp
lea
scas
(bad)
cli
in
cmp
cmp
rep
jp
(bad)
movs
(bad)
(bad)
mov
(bad)
and
addr16
std
pop
inc
lahf
jge
(bad)
ret
hlt
sti
or
jnp
out
or
mov
cli
stc
out
push
sti
fist
out
outs
push
fwait
aas
cmp
sar
jmp
cli
jmp
lahf
call
inc
jg
xchg
jmp
out
pop
mov
push
lock
dec
(bad)
call
fnstsw
(bad)
mov
jne
mov
ja
fsubr
mul
in
scas
ror
retf
mov
(bad)
imul
xchg
inc
hlt
call
pop
inc
xchg
sbb
sbb
jl
cld
sbb
not
sar
(bad)
sbb
dec
(bad)
stc
hlt
(bad)
mov
sar
call
cli
(bad)
fild
jmp
call
call
(bad)
inc
hlt
(bad)
call
jg
std
call
clc
xor
lock
(bad)
jg
pop
shr
(bad)
in
xlat
adc
adc
fist
das
jmp
pop
repnz
dec
mov
(bad)
aas
(bad)
(bad)
call
ret
aas
lock
lahf
mov
(bad)
jg
xlat
xchg
je
push
imul
(bad)
clc
xor
cli
jmp
(bad)
call
bound
cmp
imul
jb
dec
std
pop
xchg
inc
pop
(bad)
pop
mov
hlt
pop
sar
(bad)
call
jg
std
jmp
cmps
(bad)
call
(bad)
jbe
(bad)
aas
clc
imul
lahf
cmps
(bad)
call
xlat
xchg
and
leave
jb
scas
cmc
imul
call
arpl
call
call
inc
(bad)
fisttp
xlat
hlt
jg
call
aas
lods
(bad)
ds
and
cmp
cli
mov
in
dec
call
mov
movs
mov
or
pop
push
sar
out
xchg
jg
std
dec
icebp
aad
xchg
(bad)
in
icebp
mul
sbb
jg
test
jg
test
mov
xlat
fyl2xp1
in
dec
jmp
cld
stc
daa
cmps
jg
jle
xor
inc
cli
pop
shr
clc
mov
mov
sbb
psllw
movd
sbb
aas
jle
sub
(bad)
out
(bad)
push
dec
cli
pop
jecxz
addr16
in
mov
jmp
mov
retf
out
jecxz
pop
fdecstp
loopne
ret
pop
lahf
mov
xchg
(bad)
push
clc
loopne
les
xchg
sbb
push
mov
aas
or
jo
push
sbb
iret
clc
mov
idiv
ja
push
(bad)
push
cli
icebp
cmp
cld
sti
clc
jecxz
pop
cld
sbb
and
addr16
lahf
ret
pop
repz
xor
(bad)
pop
jl
lods
cmp
xlat
jecxz
outs
jbe
push
loopne
call
pop
(bad)
jns
fld
lock
xor
rcr
push
test
pop
loop
pop
mov
push
push
pop
cld
clc
lea
push
clc
icebp
jmp
out
pop
mov
push
mov
pop
clc
loopne
rol
xchg
sbb
in
push
cld
js
jo
aas
jle
sub
pop
loopne
mov
clc
jmp
sbb
js
lock
gs
mov
jecxz
cmp
pop
call
(bad)
or
aas
cmp
(bad)
icebp
add
loopne
les
and
fstp
cld
imul
mov
jae
scas
cmp
cwde
inc
outs
adc
cmp
mov
cmp
(bad)
mov
or
mov
pusha
mov
pop
sbb
sbb
movq
aas
js
pop
pop
mov
push
pop
jb
mov
xchg
sbb
cli
cmps
loopne
fist
in
mov
outs
jg
jle
(bad)
sar
jmp
(bad)
fucomip
loopne
rol
aaa
pop
jmp
aam
mov
cld
not
dec
xchg
mul
ffreep
(bad)
fcomip
loopne
ret
(bad)
(bad)
loopne
(bad)
(bad)
cmp
inc
std
shr
mul
sbb
mov
cmp
loopne
rcr
dec
lock
mov
sbb
cmp
mov
(bad)
jle
pop
xchg
daa
and
call
dec
inc
idiv
cmc
mov
xlat
nop
mov
mov
xor
std
sbb
mov
jmp
std
sbb
push
inc
jmp
push
mov
je
and
call
(bad)
sub
aas
clc
imul
dec
std
(bad)
aas
mov
xchg
fdivr
pop
std
call
movs
neg
call
jmp
mov
mov
dec
mov
xchg
scas
rcr
sub
dec
(bad)
fcomp
inc
std
scas
cld
or
(bad)
mov
in
shld
jb
mov
push
inc
mov
sub
clc
in
dec
pop
mov
push
cli
repnz
sub
not
lahf
cld
jge
mov
cli
xchg
(bad)
ffreep
push
(bad)
daa
jg
and
int
ret
(bad)
lahf
jg
movs
xor
mov
and
in
call
aas
stc
mov
aas
adc
loopne
les
call
pop
cld
push
clc
pusha
xchg
inc
sbb
jle
adc
xor
js
cwde
mov
out
jb
lock
rcr
fistp
fistp
shr
jle
pop
icebp
sbb
js
(bad)
stc
mov
inc
jmp
pop
hlt
push
mov
cmp
xchg
(bad)
imul
fistp
clc
push
lock
paddd
cld
imul
loop
jg
pop
lods
paddd
lock
jecxz
call
(bad)
push
jl
mov
cli
daa
loop
aas
add
in
pop
push
mov
pop
mov
pop
push
clc
loopne
pushf
adc
and
mov
mov
xchg
rcr
xchg
(bad)
sbb
mov
leave
jg
cmp
mov
mov
cmp
push
push
hlt
lahf
cli
pop
mov
mov
mov
mov
sti
ja
inc
retf
mov
std
leave
fisttp
mov
leave
pop
dec
or
mov
xor
aas
lahf
sub
lahf
std
mov
jmp
jg
out
rcr
cld
clc
daa
jg
cdq
mov
cld
ja
jo
dec
inc
cmps
lahf
cmp
ret
cli
pusha
test
fistp
sub
lock
shl
xor
jle
ds
pop
loopne
mov
int
icebp
fdivr
cs
rol
cld
push
pop
mov
jl
aas
mov
jle
jle
imul
xchg
(bad)
loopne
xchg
leave
stc
dec
icebp
jecxz
cmp
or
mov
shr
add
cld
psubb
vmovdqa
and
clc
ins
outs
inc
sahf
sbb
jmp
push
(bad)
(bad)
dec
retf
(bad)
ja
jmp
std
jle
sar
add
das
stc
mov
in
cli
push
std
jg
jae
imul
shl
sar
pop
std
sbb
jmp
call
call
hlt
jg
mov
or
fdiv
das
mov
(bad)
mov
mov
pushf
xor
jmp
std
ret
lock
dec
sbb
lock
idiv
(bad)
aas
stc
xlat
sar
add
repz
inc
cli
mul
(bad)
aas
clc
mov
mov
inc
test
mov
hlt
outs
ret
(bad)
mov
jecxz
dec
dec
cld
clc
xor
aas
sbb
(bad)
and
mov
out
ja
cmc
leave
pop
inc
mov
jns
lock
and
dec
jge
ror
sub
pop
call
in
adc
ds
cdq
(bad)
in
cmps
xchg
mov
sar
mov
cmp
les
adc
fidivr
outs
cld
cs
in
stc
pop
jle
dec
inc
enter
enter
push
pop
push
aas
stc
jnp
xchg
iret
ds
cmp
xlat
lahf
cld
sub
sub
xlat
cld
cs
jg
out
repnz
dec
(bad)
xchg
(bad)
loope
jg
out
repnz
daa
jg
lods
cmp
mov
adc
fstp
outs
int3
outs
clc
leave
pop
icebp
mov
mov
stc
lahf
xchg
and
out
push
jg
retf
jbe
mov
mov
mov
hlt
das
push
xor
call
push
cmp
in
clc
ins
mov
adc
inc
mov
mov
sahf
aam
inc
sahf
aam
movs
(bad)
mov
in
and
(bad)
pop
xchg
xchg
xchg
jle
push
jg
shr
ds
ja
mov
popa
retf
fldcw
fild
adc
idiv
jbe
lods
(bad)
daa
xchg
test
arpl
neg
mov
loope
adc
jmp
call
push
out
add
or
or
inc
sub
cmps
jecxz
jg
inc
clc
icebp
pop
adc
inc
inc
cmp
(bad)
cmp
cli
iret
adc
inc
out
repnz
jl
(bad)
movs
jg
(bad)
cld
jnp
jg
aas
(bad)
mov
lahf
les
mov
(bad)
clc
jg
cmp
rol
call
pop
(bad)
cli
das
jle
and
add
(bad)
xor
adc
jg
mov
in
lahf
shl
aad
loop
fild
sbb
pop
stc
aas
and
stc
fist
hlt
mov
pop
xchg
sub
out
adc
ss
mov
jb
push
out
dec
and
mov
sub
lea
aaa
push
(bad)
or
or
push
xor
adc
ds
out
or
das
dec
int
aas
lock
xor
xor
mov
inc
sar
fstp
retf
sbb
aaa
in
dec
(bad)
jg
aas
lock
mul
jg
jg
sub
inc
mov
jmp
sbb
fdivrp
mov
(bad)
(bad)
daa
leave
mov
aas
or
pop
mov
lahf
movs
jg
(bad)
cld
ja
aas
or
(bad)
mov
cmpxchg8b
jge
outs
ffreep
mov
std
in
stc
popf
dec
into
out
es
(bad)
(bad)
jnp
out
cmp
std
dec
add
rcr
or
jg
xor
out
add
xchg
call
jmp
dec
mov
and
mov
in
(bad)
popf
imul
adc
mov
(bad)
jge
cli
jg
mov
jg
mov
sbb
sbb
std
call
sti
ins
aas
stc
xchg
dec
inc
mov
pop
jmp
out
ja
lea
pop
clc
int3
imul
call
mov
lock
(bad)
out
cdq
inc
mov
out
loopne
dec
and
mov
aas
mov
std
outs
fiadd
jg
out
nop
cmp
outs
jle
jg
jmp
push
mov
or
(bad)
xchg
jmp
jge
cmp
push
cld
ja
ret
cld
dec
jg
std
mov
pop
jns
imul
popa
out
in
stc
jg
xlat
in
mov
push
jae
inc
scas
int
mov
pop
aad
inc
aas
call
mov
xchg
outs
clc
dec
sub
sbb
push
(bad)
jmp
jle
leave
mov
call
xchg
cld
int3
dec
outs
jmp
loop
cmps
iret
jg
cli
stc
sub
out
inc
(bad)
call
int
jmp
push
xor
jae
fxtract
ja
lahf
pop
jmp
lock
call
xchg
leave
push
std
(bad)
hlt
(bad)
cmp
out
inc
out
(bad)
cli
hlt
sti
outs
clc
arpl
sti
aas
inc
(bad)
and
into
das
movs
out
out
mov
push
dec
fild
jmp
cld
xor
neg
mov
psubd
(bad)
push
hlt
(bad)
pop
dec
mov
mov
inc
repnz
jg
std
(bad)
pop
sar
ja
(bad)
jg
jge
aaa
shl
jg
outs
and
xor
mov
jmp
cld
jge
rep
and
(bad)
imul
xchg
adc
sub
outs
shr
enter
mov
pop
cli
stc
mov
std
xchg
hlt
sti
push
ret
mov
hlt
stc
mov
repnz
scas
jmp
jmp
(bad)
jg
mov
ds
sti
shl
ins
and
inc
jg
cmp
cmc
jg
(bad)
add
sti
(bad)
(bad)
sbb
or
mov
jae
stc
scas
rcr
jmp
outs
and
int
mov
das
hlt
(bad)
mov
call
call
repz
(bad)
call
xor
inc
xchg
cmp
call
test
jle
aaa
xchg
pop
in
scas
inc
jg
push
mov
xor
jge
ja
push
mov
rcr
outs
jg
jb
jmp
std
call
std
aas
test
cmps
(bad)
mov
daa
cli
call
cli
in
psubq
shr
jg
outs
and
pop
jb
aas
jmp
xchg
sbb
jb
inc
outs
sub
ret
jle
xor
repz
(bad)
fsubrp
out
inc
aas
icebp
cld
popf
hlt
into
pop
inc
std
lods
jmp
cld
fxtract
sti
outs
inc
lahf
std
mov
dec
sbb
lahf
neg
dec
push
jns
(bad)
call
inc
mov
mov
in
(bad)
(bad)
ja
(bad)
jg
jge
inc
sar
jg
outs
sub
in
mov
lock
mov
jg
mov
or
(bad)
out
neg
std
cld
pop
jmp
inc
std
std
retf
jle
leave
sub
stc
mov
jg
(bad)
xor
pop
call
call
aas
dec
in
jg
out
(bad)
xor
pop
push
mov
cld
mov
test
inc
or
jbe
aad
and
ret
js
cmp
adc
mov
and
idiv
call
icebp
add
pop
dec
(bad)
jmp
jmp
dec
std
xor
cmps
(bad)
jmp
dec
arpl
das
sar
jmp
(bad)
jmp
scas
and
cld
call
std
push
clc
xor
fisttp
jmp
push
inc
jmp
mov
adc
aas
mov
xlat
hlt
jmp
call
hlt
imul
je
add
(bad)
call
std
mov
(bad)
jg
(bad)
(bad)
out
sar
call
(bad)
jg
(bad)
jmp
hlt
(bad)
call
sahf
sti
or
std
push
std
call
(bad)
jge
call
std
call
and
push
hlt
cs
or
dec
cld
mov
dec
not
(bad)
pop
xchg
mov
(bad)
call
std
das
mov
in
pop
fwait
adc
(bad)
(bad)
fcmovnbe
(bad)
aas
mov
imul
call
(bad)
mov
(bad)
(bad)
jge
jmp
hlt
inc
dec
(bad)
jg
std
dec
(bad)
call
(bad)
(bad)
and
icebp
push
dec
(bad)
in
std
cmp
add
xchg
xchg
xchg
sti
(bad)
cmp
std
in
out
push
sbb
cmp
sti
daa
and
xlat
arpl
in
or
inc
mov
enter
dec
(bad)
shl
mov
cmp
push
daa
inc
sub
pop
loopne
pop
inc
jle
pop
icebp
mov
pop
std
sbb
push
mov
(bad)
cld
js
lock
loopne
std
sbb
lods
(bad)
sbb
clc
in
adc
std
dec
clc
in
adc
xor
sbb
movd
loopne
ror
(bad)
(bad)
loopne
rcl
adc
(bad)
loope
in
jg
outs
call
jle
das
adc
cmp
psllw
rol
push
(bad)
gs
xchg
jmp
adc
jl
loopne
ret
sub
shr
jo
push
loope
jae
pop
jecxz
aas
pop
pop
call
dec
ret
rcr
pop
mov
pop
dec
and
shr
xchg
dec
shr
mov
inc
pop
xchg
inc
mov
lock
jl
jle
jnp
(bad)
das
nop
movs
fucomp
les
fcomip
loopne
(bad)
clc
pop
pcmpeqd
push
aam
clc
test
mov
rcr
jle
jl
rol
outs
bnd
cmp
pop
jl
imul
loope
dec
jecxz
inc
jmp
sar
and
clc
lods
push
(bad)
sub
cmp
std
cmc
clc
in
pop
ret
push
jg
rcr
pop
mov
pop
scas
cmp
(bad)
in
clc
cli
das
(bad)
outs
nop
in
cmp
mov
dec
inc
mov
xor
cmp
icebp
jecxz
cmp
iret
jmp
mov
(bad)
arpl
xchg
jecxz
cmp
cmp
iret
cmp
pop
loopne
dec
(bad)
mov
dec
jle
ror
ds
cmp
add
fist
fistp
clc
fcomip
arpl
aas
jecxz
into
sar
fistp
push
call
jle
ret
lock
cld
mov
loopne
rol
cmp
mov
scas
jle
cmp
jp
pop
pop
cld
adc
xlat
jg
ds
sub
add
lock
loop
fucomip
loopne
ret
pop
inc
ds
add
jnp
fucomi
inc
loopne
icebp
neg
xchg
xchg
repnz
cld
pop
(bad)
cmp
repz
idiv
out
shr
loope
jo
mov
ins
jg
imul
scas
loope
jns
cli
jg
(bad)
inc
hlt
jg
cmp
lock
movs
inc
inc
ret
cwde
pop
and
or
repz
daa
(bad)
out
scas
and
daa
call
(bad)
dec
jmp
mov
cmps
sub
fdivr
xor
(bad)
jg
(bad)
(bad)
mov
(bad)
mov
(bad)
jmp
jg
(bad)
jmp
(bad)
jmp
sar
dec
call
(bad)
jmp
dec
pop
ss
sub
adc
jle
in
loope
aam
jmp
iret
sub
sub
push
jle
out
push
clc
jmp
icebp
aas
iret
dec
sub
repnz
jo
xchg
add
mov
fucomip
xchg
mov
cld
xor
mov
(bad)
mov
lods
fisttp
test
lahf
loopne
aas
inc
adc
sub
jecxz
mov
xchg
icebp
rcr
xor
in
or
or
ficomp
jle
add
ret
stos
dec
imul
pop
mov
cmp
lds
cmp
test
fwait
mov
xchg
pushf
xor
pop
mov
lock
jmp
lds
push
pop
jmp
cmp
aaa
into
push
std
and
push
gs
cmp
pop
pop
mov
(bad)
push
cld
clc
std
paddd
jl
lahf
loope
mov
(bad)
pop
jl
push
loopne
aas
sbb
pop
push
sti
pop
jg
ds
jae
shl
cmp
in
in
pop
(bad)
outs
ffreep
outs
push
jle
or
cmp
push
jle
out
ret
cmc
das
mov
add
lahf
add
(bad)
aas
stc
das
jle
or
jle
cmp
and
lea
stc
push
jg
mov
adc
jle
retf
ds
ds
pop
xchg
repnz
fld
popa
repnz
push
(bad)
out
mov
dec
fstp
adc
cmp
out
mov
in
mov
dec
fwait
aas
mov
sub
adc
lahf
jg
jmp
out
leave
jmp
clc
int3
icebp
jecxz
inc
xchg
test
pop
leave
enter
xchg
std
popf
and
neg
xchg
leave
mov
mov
xchg
das
and
(bad)
outs
jns
fwait
loop
dec
out
pop
lock
and
gs
mov
lock
(bad)
into
sar
pop
push
cld
pop
clc
icebp
jnp
cld
fwait
clc
icebp
sti
sbb
js
dec
jecxz
inc
pop
dec
jle
fidivr
dec
out
inc
fnstenv
mov
imul
in
shr
or
jle
pop
inc
jl
jmp
xor
inc
cli
jmp
std
xor
sti
xor
leave
cli
jno
lea
dec
or
jmp
and
out
mov
(bad)
sti
iret
sub
repnz
icebp
cmp
movs
cmp
ds
xchg
jg
jb
(bad)
jne
repnz
jb
mov
adc
lock
dec
xor
cmp
ds
jmp
jg
aas
dec
dec
leave
cld
and
jmp
int3
fbld
or
lahf
clc
mov
push
or
(bad)
xchg
hlt
xor
lock
and
cmp
cmc
mov
clc
in
shufps
sti
sub
jb
or
loop
inc
mov
sbb
test
xchg
dec
and
repz
inc
jle
dec
push
int
cmp
pop
jle
movlps
jg
movs
repz
loopne
pop
jg
(bad)
les
mov
adc
adc
and
push
xor
das
and
cld
dec
(bad)
(bad)
out
mov
adc
cmp
jmp
jg
and
in
mov
stc
iret
jle
retf
push
adc
add
add
repnz
jnp
pop
stc
sbb
jmp
hlt
setae
push
jg
retf
push
data16
aaa
stc
in
clc
popf
sub
fisttp
(bad)
jnp
imul
add
jge
(bad)
inc
call
mov
fs
(bad)
daa
pop
div
jo
jg
pop
and
or
mov
cmovnp
or
jg
retf
fidiv
fcomip
or
push
div
in
arpl
fist
scas
jo
sub
adc
mov
(bad)
mov
retf
aas
adc
outs
xor
punpckhbw
xor
adc
adc
sub
hlt
sbb
adc
sar
xor
jge
aas
push
adc
mov
adc
push
push
mov
nop
cmc
stc
test
mov
in
jg
mov
or
xor
mov
call
push
ins
or
outs
dec
std
arpl
call
mov
(bad)
xchg
add
push
add
ja
in
adc
add
jecxz
call
dec
mov
xchg
jg
paddb
sub
or
inc
fs
jle
xor
mov
mov
out
push
xor
fsubr
dec
add
clc
in
loope
outs
retf
xor
es
mov
outs
cli
das
xchg
repnz
out
xchg
inc
aaa
mov
icebp
mov
jmp
scas
inc
in
inc
mov
xor
aas
data16
mov
mov
es
cmps
inc
shr
rcr
sub
ds
push
jg
aas
mov
jmp
cmps
pop
jle
dec
(bad)
mov
fwait
jg
lahf
push
mov
sti
test
sbb
xchg
(bad)
outs
imul
dec
mov
outs
dec
mov
sbb
call
cld
cmc
(bad)
cld
neg
mov
cs
dec
es
add
add
pop
push
idiv
xchg
(bad)
pop
shl
add
stc
pop
jle
sti
xor
mov
outs
out
fadd
test
test
aam
mov
push
mov
dec
or
repz
std
ja
sti
jg
ja
ss
xchg
ds
aaa
jmp
std
xlat
cli
mov
fild
mov
leave
ret
cdq
neg
in
das
sti
out
xor
imul
sbb
xchg
pop
sbb
mov
add
lahf
imul
push
inc
dec
outs
dec
jmp
std
sbb
hlt
sti
cs
(bad)
scas
ror
mov
jle
dec
mov
out
movs
lahf
jg
std
(bad)
out
movs
(bad)
inc
fnstsw
inc
aas
(bad)
dec
fistp
(bad)
inc
jle
xor
jg
jge
mov
mov
cdq
mov
mov
dec
jmp
(bad)
dec
cmp
(bad)
scas
and
out
sti
hlt
(bad)
jg
(bad)
(bad)
jnp
idiv
jge
xchg
mov
sar
call
call
(bad)
ins
aam
cwde
jle
icebp
push
fistp
out
ror
mov
shl
xlat
hlt
repz
push
cmps
mov
addr16
fist
(bad)
aaa
sar
(bad)
cmp
call
mov
scas
call
addr16
fstp
jge
ror
mov
dec
jmp
xor
das
call
(bad)
mov
xor
mov
repz
out
dec
(bad)
jmp
jmp
movs
iret
mov
hlt
neg
out
xchg
hlt
fldcw
movs
lahf
mov
ror
or
call
cli
stc
mov
jle
mov
cs
test
iret
jg
daa
fprem1
cmps
cmc
rol
hlt
retf
outs
(bad)
jg
jmp
(bad)
jmp
push
hlt
(bad)
(bad)
xlat
mov
add
mov
jg
pop
or
(bad)
mov
call
sbb
(bad)
out
sar
xor
dec
mov
std
sbb
jne
sbb
lahf
inc
inc
(bad)
(bad)
mov
lock
loope
(bad)
push
hlt
jg
fdivr
push
std
(bad)
fbld
(bad)
inc
(bad)
push
cli
aas
mov
sti
retf
dec
push
jle
fistp
xchg
jne
scas
and
repz
xchg
sar
out
imul
cmc
lahf
xchg
sub
in
fbld
dec
icebp
outs
xchg
icebp
clc
xlat
dec
adc
retf
mov
imul
lahf
clc
ins
leave
sbb
cmc
ja
push
out
nop
mov
fsub
(bad)
fcmovu
loope
mov
loop
lahf
cld
lds
mov
push
rol
adc
sti
cmp
push
adc
xchg
test
jecxz
cmp
inc
clc
icebp
pop
sbb
xor
cld
into
pop
sar
sbb
jecxz
icebp
jecxz
dec
dec
nop
push
ins
cld
clc
lea
mov
jecxz
push
push
loope
add
loope
mov
jle
call
push
fsubrp
cmp
sti
sbb
aas
mov
jle
cld
test
adc
clc
fisttp
jle
cld
clc
test
inc
es
jmp
pop
mov
cld
mov
adc
(bad)
mov
retf
cmp
outs
ret
jo
and
cld
das
mov
out
inc
scas
xchg
cmp
sbb
(bad)
xor
jmp
lahf
sar
(bad)
jg
mov
and
xchg
cli
jg
imul
mov
(bad)
mov
push
push
arpl
addr16
aas
dec
shl
cmps
out
pop
shl
sub
hlt
mov
cmps
jmp
bnd
xchg
mov
jmp
out
daa
xchg
hlt
ja
retf
lock
(bad)
stc
fwait
leave
(bad)
(bad)
jmp
mov
clc
retf
imul
loopne
daa
jne
addr16
mov
lock
xchg
pop
hlt
(bad)
jmp
mov
mov
xchg
jne
pop
mov
fcmovnu
mov
xchg
jl
(bad)
xchg
dec
popf
outs
push
cmps
fcmovnbe
jmp
push
cmps
arpl
hlt
mov
dec
imul
xchg
std
dec
test
sbb
imul
mov
popf
jle
popf
(bad)
cs
outs
dec
popf
es
cld
icebp
sub
dec
out
imul
adc
out
jmp
stos
dec
hlt
(bad)
fucomp
call
xchg
shr
std
sbb
mov
mov
pop
(bad)
fisttp
lahf
adc
test
(bad)
cmp
or
dec
out
dec
ds
daa
in
popa
xor
pop
add
(bad)
stos
(bad)
outs
pop
out
inc
xchg
jmp
ja
jg
arpl
fdivrp
fs
jg
xor
mov
shr
loopne
jg
ja
ja
mov
and
retf
jle
ja
aas
bound
shl
adc
cli
(bad)
out
ja
pop
es
retf
fild
sub
outs
stc
leave
aas
(bad)
fstp
or
out
lock
ins
sub
jle
call
aad
les
call
jo
je
sub
sbb
stos
idiv
jecxz
into
out
sub
inc
(bad)
in
inc
jecxz
adc
or
mov
jbe
jle
dec
dec
(bad)
aas
repnz
mov
push
out
inc
sub
fwait
adc
push
and
outs
dec
movs
movs
xchg
mov
pop
(bad)
sbb
in
pop
std
and
dec
sub
(bad)
fsub
(bad)
(bad)
out
inc
ins
jg
push
sbb
lock
cdq
fucomip
xchg
jg
or
fcmovnb
xor
std
(bad)
jmp
sub
adc
adc
jg
sbb
out
and
out
cld
outs
jo
jle
out
ins
pop
cld
in
shl
aaa
(bad)
in
cld
in
jge
mov
jle
(bad)
jbe
pop
(bad)
std
scas
inc
xor
(bad)
test
jb
jg
xchg
dec
mov
sbb
aas
icebp
sub
sbb
pop
inc
jmp
ds
pop
fnstsw
lock
jle
mov
mov
add
imul
mov
xchg
jle
cli
stc
push
ror
pushf
int3
frstor
(bad)
aas
inc
mov
in
and
push
call
mov
mov
hlt
neg
dec
aas
pop
ror
pop
dec
(bad)
inc
jmp
stc
repnz
(bad)
jmp
pop
dec
or
pop
cli
stc
(bad)
push
fist
repz
cmps
(bad)
aas
mov
cld
aas
cmps
(bad)
addr16
jmp
imul
out
cld
pop
mov
lock
sar
lahf
shr
mov
mov
(bad)
jmp
imul
jge
(bad)
(bad)
jmp
fistp
sti
mov
pop
loopne
cli
cs
stc
out
(bad)
sbb
clc
ja
lock
sbb
sbb
sbb
adc
jge
imul
cli
jnp
call
(bad)
jg
(bad)
jg
imul
mul
(bad)
aas
loopne
jo
clc
sub
fcomip
aaa
ds
movs
sar
mov
(bad)
in
and
stc
daa
mov
(bad)
cmp
jg
(bad)
add
in
test
leave
mov
iret
std
into
and
mov
das
clc
in
and
dec
sub
fist
mov
int3
call
nop
add
adc
rol
jg
or
lahf
repz
stc
fist
stc
fwait
jl
daa
jmp
std
lea
jle
je
cmp
mov
cmc
jg
in
sbb
sbb
xor
lock
jg
dec
cld
cmps
xor
fist
sbb
inc
outs
inc
ret
fsub
fsub
mov
loop
jg
ja
mov
ja
sub
inc
out
mov
lahf
cld
repnz
jmp
sti
dec
dec
or
add
mov
imul
movs
fistp
leave
aas
lods
ret
dec
jle
(bad)
mov
test
fbstp
lock
fcomip
xlat
adc
push
mov
into
mov
pop
dec
push
jecxz
push
xchg
leave
jbe
xor
jg
push
aas
and
mov
or
adc
std
sysenter
sub
mov
xor
inc
outs
sti
leave
mov
enter
(bad)
xchg
push
ja
xor
in
(bad)
or
(bad)
jge
out
or
mov
jmp
pop
jge
bnd
push
repnz
push
or
xor
test
shr
daa
lock
outs
repz
das
(bad)
in
cmc
movs
arpl
cmps
les
stc
aas
pop
add
mov
pusha
push
ds
pop
rcr
push
xchg
test
pop
adc
loope
cmp
pop
(bad)
sti
scas
ss
cmps
pop
ins
arpl
sub
(bad)
adc
cmp
push
(bad)
shl
mov
xor
imul
fstp
jg
(bad)
dec
xchg
call
shl
(bad)
fistp
mov
dec
aas
jg
push
pop
shl
xor
(bad)
out
mov
call
shl
aas
inc
(bad)
inc
div
cld
(bad)
mov
inc
ficom
fsub
aas
call
xchg
cmc
inc
call
push
add
mov
jg
sbb
push
cli
stc
pop
std
pop
mov
std
iret
mov
call
mov
(bad)
loopne
sub
inc
inc
or
push
jl
(bad)
sbb
jmp
pop
inc
add
shr
out
repnz
sbb
or
ds
lea
dec
or
out
inc
xchg
btr
mov
pop
les
or
ds
mov
in
jg
mov
mov
and
nop
xor
outs
inc
data16
xchg
jg
pop
nop
adc
mov
mov
xor
ror
fist
aas
inc
mov
outs
inc
mov
cmps
lahf
cld
or
jle
xor
(bad)
mov
repz
cmc
adc
test
dec
mov
imul
lahf
push
movq
dec
repz
sub
push
xor
jmp
imul
pop
in
in
in
xchg
nop
cmps
and
xchg
sar
popf
leave
add
stc
fild
cmp
and
jmp
jg
in
enter
aas
stc
scas
jle
repnz
adc
mov
cwde
mov
outs
repnz
mov
repz
fsubr
(bad)
mov
add
cmp
out
jnp
push
movsx
int
mov
in
or
fistp
mov
(bad)
aaa
and
inc
push
sti
out
mov
cmp
shl
(bad)
(bad)
push
int
inc
pop
(bad)
(bad)
loop
adc
add
mov
dec
(bad)
addr16
fcmovnu
cdq
xchg
cmp
lahf
cld
into
lahf
cld
xchg
pusha
(bad)
cmp
test
call
add
sbb
jmp
mov
sahf
mov
clc
pop
jle
pop
out
inc
out
jg
sbb
aas
ror
mov
or
pop
mov
push
ror
pop
out
cs
pop
lock
push
mov
shl
cmp
lock
(bad)
aas
cwde
(bad)
call
hlt
(bad)
mov
imul
add
fisttp
jp
push
cli
push
jmp
(bad)
out
ss
inc
sbb
scas
and
push
jg
scas
and
jmp
loope
movs
sbb
pop
pop
in
(bad)
fnsave
mov
idiv
cld
inc
pop
jnp
aaa
iret
(bad)
(bad)
cli
cmp
ja
sub
mov
or
jmp
(bad)
cmp
outs
(bad)
ss
cld
imul
daa
dec
(bad)
(bad)
jle
cmp
inc
in
loope
(bad)
stos
dec
out
mov
lock
sbb
add
dec
movs
leave
sti
in
push
jg
loop
fucomip
xchg
(bad)
jmp
dec
scas
jg
dec
inc
imul
push
fs
sti
(bad)
xchg
jmp
ja
in
cld
in
ds
iret
loopne
inc
cld
sti
add
repz
pop
rep
or
scas
call
sub
cmc
outs
les
mov
in
(bad)
jmp
lock
das
call
or
mov
inc
test
lods
das
rcl
dec
lods
xor
scas
test
or
sub
cmps
ror
fild
push
scas
sub
enter
dec
jg
mov
inc
pop
push
clc
loope
push
call
addr16
imul
and
loop
jmp
cwde
pop
jle
fucomip
xchg
aas
push
stc
mov
out
push
aas
cmp
pop
jle
fisttp
jl
add
jmp
ja
add
ja
add
xchg
add
cs
shr
fucompp
mov
pop
in
and
inc
nop
clc
mov
lock
lea
jle
dec
mov
xchg
xlat
out
fmul
jle
fisttp
test
jne
jle
dec
inc
push
push
ja
and
fild
sub
cmp
fisttp
aaa
mov
dec
dec
xor
repnz
mov
pop
loopne
stc
lea
mov
dec
(bad)
xlat
fisttp
ins
js
out
aaa
and
xchg
push
push
cdq
and
add
aas
cld
pop
jmp
sbb
mov
cmp
fwait
jmp
call
add
xlat
cmps
stc
jmp
test
xor
dec
call
(bad)
fistp
std
call
xor
out
jg
cmp
hlt
sbb
idiv
mov
adc
xlat
adc
fwait
call
mov
xchg
mov
outs
repz
dec
stc
pop
jg
dec
jle
das
and
xchg
(bad)
(bad)
ja
in
and
inc
cld
sbb
and
dec
mov
mov
sahf
jg
xor
cmp
out
cld
leave
scas
loopne
lahf
(bad)
fistp
repz
cli
adc
xor
out
hlt
jg
and
cwde
call
and
stc
push
jmp
and
sbb
iret
call
call
mov
jmp
sub
(bad)
mov
adc
push
xchg
or
call
sub
std
sbb
jg
cmp
cwde
add
pop
arpl
test
hlt
das
clc
or
or
mov
cld
sahf
push
sub
sti
repnz
(bad)
xor
xlat
(bad)
outs
sub
mov
push
dec
(bad)
icebp
std
rcr
sbb
or
pop
cmc
imul
cmps
cli
sbb
lock
jge
mov
lahf
cld
jge
ror
(bad)
sbb
xchg
mov
sti
aaa
cli
in
std
popf
js
jg
dec
(bad)
sti
pop
inc
push
shr
push
push
repnz
jg
xor
in
stc
or
pop
mov
icebp
jg
ins
jle
outs
xchg
enter
into
lods
out
repz
dec
push
jmp
pop
mul
inc
or
mov
stc
mov
mov
repnz
xchg
into
sti
or
xlat
nop
cmp
out
stos
mov
mov
mov
jns
in
sti
cmc
dec
icebp
popf
popa
mov
std
mov
movs
(bad)
aaa
cli
in
and
(bad)
popf
aas
stc
xchg
in
push
pop
push
jl
imul
(bad)
xor
cld
icebp
loop
clc
lea
stc
ret
jg
dec
(bad)
neg
sahf
loopne
pop
or
cmp
fist
fisubr
pushf
in
lods
xlat
sar
stc
lea
sub
adc
cmps
(bad)
cld
cmc
cmc
ja
cld
xchg
jle
push
in
pop
mov
lahf
cmp
cld
jle
(bad)
xchg
mov
jg
xchg
out
fdivr
dec
inc
jns
mov
lea
stc
jae
lds
jg
sahf
mov
cdq
dec
sbb
test
call
out
iret
repz
jl
das
popa
call
push
inc
push
out
clc
mov
dec
cmp
leave
pop
or
adc
ds
call
cld
adc
fwait
cld
add
call
fistp
mul
(bad)
pop
(bad)
stos
jg
mov
jg
cmp
call
(bad)
std
cmp
sbb
rcr
out
out
idiv
in
mov
aas
icebp
clc
pop
sar
std
fistp
mov
call
std
mov
jg
fcomip
(bad)
pop
stc
(bad)
hlt
fstp
popf
(bad)
dec
aaa
cdq
(bad)
mov
fist
jmp
mov
lods
jle
repz
(bad)
out
outs
mov
mov
jg
sar
clc
clc
ja
js
cmc
outs
std
fcmovnbe
(bad)
xor
mov
jg
jle
pop
sar
cmps
mov
adc
call
sti
fisttp
ficomp
cmp
push
mov
call
jmp
loop
adc
or
pop
repz
call
xchg
(bad)
jle
jge
daa
push
cmp
ja
jg
jp
call
xlat
jns
cmc
pop
cli
(bad)
scas
mov
xlat
ss
outs
std
push
call
loope
sar
mov
(bad)
sub
mov
fcmovnu
idiv
repz
fistp
mov
(bad)
out
popf
(bad)
jg
or
mov
fbld
(bad)
out
(bad)
out
cmps
out
jg
(bad)
scas
ss
inc
xchg
stc
(bad)
outs
lock
ret
aaa
jge
(bad)
ficom
xor
leave
ja
mov
dec
jecxz
(bad)
mov
test
cmp
mov
mov
jnp
(bad)
nop
xchg
ds
stos
dec
jle
dec
pop
push
cmp
outs
xchg
scas
mov
jmp
out
jae
pop
hlt
(bad)
cli
xor
sti
pop
pop
cld
or
mov
out
not
dec
jmp
imul
jge
ror
mov
cli
clc
cmps
mov
stos
pop
ret
(bad)
mov
out
fistp
jae
inc
mov
jl
test
std
scas
fisttp
(bad)
pop
(bad)
sti
repz
mov
(bad)
stos
mov
mov
in
addr16
inc
lods
popa
das
jl
jecxz
jg
hlt
jge
out
call
enter
call
fnstcw
iret
outs
fld
test
out
outs
je
mov
fnstcw
pop
iret
out
xor
out
mov
sar
out
inc
add
jg
cli
jg
mov
mov
(bad)
jp
push
dec
(bad)
xor
out
daa
jnp
std
in
jg
shr
addr16
mov
lock
mov
xchg
cmp
mov
fiadd
jns
mov
cmp
loopne
cmc
mov
pusha
jle
out
mov
xlat
xchg
sti
stos
loope
or
shr
stos
(bad)
pop
loopne
inc
outs
jle
out
pop
adc
repnz
cli
sti
pop
xlat
idiv
js
fdivrp
scas
(bad)
out
mov
pop
out
call
sbb
jg
or
call
inc
inc
repnz
inc
jp
out
dec
fistp
xor
(bad)
jg
jecxz
cld
pop
add
jmp
movs
stc
cli
retf
(bad)
movs
jmp
cld
stos
push
(bad)
enter
les
aas
shl
out
mul
inc
(bad)
(bad)
mov
(bad)
pushf
repz
repz
das
push
push
xlat
fs
cmp
ror
jno
sar
push
jge
add
idiv
in
fbld
les
dec
cli
dec
loopne
shl
inc
in
neg
call
mov
aas
sar
sbb
cdq
stc
lock
sbb
(bad)
lahf
es
ja
outs
cld
adc
(bad)
mov
std
clc
jae
pop
ror
or
call
sbb
or
inc
pop
add
call
retf
ja
dec
sbb
idiv
icebp
js
(bad)
mov
hlt
jnp
jg
leave
repnz
xlat
repz
std
sub
jle
out
outs
call
call
jle
xchg
jle
fnsave
jmp
fwait
out
xchg
pandn
clc
mov
int
add
cdq
(bad)
push
jg
pop
out
mov
mov
cli
in
loopne
clc
aaa
push
jg
cli
add
sti
fbld
jge
out
cmp
out
fbstp
out
fld
mov
cmps
mov
(bad)
mov
jge
sti
mov
pop
retf
inc
mov
icebp
mov
pop
ficomp
inc
into
dec
cmp
das
or
out
iret
(bad)
fistp
aad
mov
mov
adc
or
loopne
and
call
xchg
mov
mov
loope
cmp
(bad)
cld
xor
cld
sbb
mov
pop
cli
stos
imul
mov
pop
(bad)
pop
into
(bad)
cld
sub
add
ror
imul
ja
push
loop
sub
jae
out
(bad)
jmp
outs
inc
cmovae
sar
(bad)
into
adc
dec
test
mov
mov
in
das
repnz
xchg
inc
jmp
fcomp
jle
jmp
cmp
inc
rcr
pop
shl
jecxz
cld
test
jg
sar
(bad)
pusha
jp
(bad)
sbb
stc
sti
outs
push
jp
inc
pop
lock
iret
or
hlt
movs
int3
neg
jg
stc
(bad)
stos
mov
call
cld
xchg
sbb
sti
data16
mov
lock
shl
nop
cmc
add
cmp
in
mov
mov
repz
lea
xchg
mov
pop
mov
scas
cmp
aas
sar
or
sar
rcl
pop
jmp
shl
iret
not
call
int
xchg
and
ret
cmp
fstp
shl
mov
inc
inc
pop
sbb
adc
xor
(bad)
sbb
pop
fldenv
jmp
mov
pop
test
or
arpl
sbb
sub
iret
xor
loope
fs
std
call
(bad)
in
jns
mov
das
mov
int3
xchg
ds
add
inc
lahf
adc
fadd
pop
loope
rcr
sub
(bad)
sbb
mov
jle
(bad)
xor
imul
not
mov
aaa
loop
call
hlt
hlt
loope
fdivr
outs
mov
fild
aaa
(bad)
xchg
ds
jle
xchg
icebp
jne
maxps
inc
loop
mov
daa
inc
jge
(bad)
cli
prefetcht2
pop
adc
fcomip
xlat
pop
fs
sbb
xor
(bad)
dec
mov
daa
hlt
psubsb
mov
out
dec
iret
mov
hlt
stc
sub
hlt
stc
jmp
dec
fcomp
jge
cli
sbb
sub
ds
sbb
popf
jp
hlt
mov
adc
sti
scas
sub
mov
imul
mov
cmps
jo
bound
call
movs
scas
(bad)
outs
movs
cld
adc
xor
or
loop
xchg
lahf
xor
push
adc
clc
xchg
inc
daa
jg
jmp
pop
(bad)
(bad)
push
cld
ds
repz
sbb
mov
dec
loope
cdq
mov
lods
aas
cli
(bad)
jle
jle
sbb
std
in
xor
sbb
mov
cld
jmp
mov
stc
xbegin
ret
int
daa
hlt
pop
mov
jmp
js
jge
push
out
(bad)
cmp
mov
std
mov
fisubr
inc
hlt
pop
mov
xchg
adc
imul
test
mov
std
scas
push
cld
cli
push
in
mov
fcomp
hlt
xchg
cmp
(bad)
(bad)
(bad)
clc
jle
pop
jmp
loopne
int3
out
pop
fisubr
loop
rol
out
rcr
(bad)
jg
int
mov
stc
add
imul
jmp
fdivrp
jp
push
lahf
sti
ds
sahf
jg
std
jno
out
fwait
retf
sub
mov
mov
icebp
pop
push
jle
jmp
(bad)
loopne
jmp
fistp
ficomp
pop
mov
jmp
std
cld
enter
addr16
rcr
mov
inc
(bad)
cmp
mov
cmc
xchg
jle
ror
dec
push
jbe
cmp
(bad)
and
cmc
inc
hlt
daa
cli
xlat
lock
mov
pop
push
out
out
scas
out
sbb
call
lock
pslld
sub
stc
popa
mov
mov
jno
neg
push
std
mov
sub
jmp
outs
call
push
dec
push
jg
cli
push
stc
mov
popf
out
jns
das
jecxz
xchg
std
fcmovnbe
aaa
pop
lahf
fmul
jg
cld
dec
cmp
mov
cli
xchg
cld
retf
mov
out
outs
rol
out
scas
iret
loopne
les
addr16
jle
and
jno
dec
fs
jle
in
movs
aas
jmp
(bad)
mov
aas
pop
repz
jg
in
paddb
sti
mov
cld
adc
pop
inc
(bad)
mov
cli
es
hlt
cld
imul
pop
inc
jg
clc
cmc
xor
mov
push
cmc
test
jle
mul
out
cld
dec
aam
imul
fcmove
iret
ret
pop
sbb
mov
fiadd
sti
cmp
ds
push
out
das
shl
pop
sti
icebp
scas
imul
jg
cmc
xchg
fsubr
inc
jnp
(bad)
cwde
in
out
enter
(bad)
call
lods
outs
and
rcr
pop
addr16
out
ret
lahf
pop
mov
(bad)
fld
jg
stc
jae
(bad)
pop
enter
dec
call
add
test
(bad)
xlat
iret
xlat
cmp
(bad)
mov
lock
movs
mov
sbb
call
stc
xor
pop
mov
pop
jmp
cld
nop
fwait
dec
rcl
pop
mov
xchg
cld
mov
(bad)
ja
(bad)
jbe
(bad)
into
cld
cld
xchg
jle
(bad)
pop
call
and
lock
(bad)
or
jg
xor
stc
out
sub
das
out
sahf
pop
(bad)
sbb
mov
stc
rcr
add
dec
pop
aas
add
packuswb
(bad)
jne
pop
cld
cmp
(bad)
popa
mov
jg
(bad)
(bad)
sbb
stc
xor
inc
in
(bad)
icebp
pop
in
mov
jle
out
in
jge
clc
inc
jg
cmp
pop
xor
out
int
inc
dec
(bad)
sbb
neg
mov
loopne
call
mov
jg
add
addr16
leave
jg
sti
aaa
cld
outs
lock
jge
mov
fidivr
aad
xchg
sub
cmc
stos
fld
sbb
into
push
sbb
sbb
(bad)
das
mov
cld
cmp
dec
ds
ds
lods
fcomp
retf
out
mov
xchg
scas
div
dec
call
icebp
scas
out
das
(bad)
data16
(bad)
ja
xchg
rcr
xchg
inc
loopne
jns
ja
jg
cld
retf
dec
mov
es
push
push
rep
loop
mov
add
pop
test
inc
sub
scas
std
das
push
jl
std
std
aaa
stos
mov
aaa
pushw
jle
jge
outs
in
jg
cmps
div
aas
loope
rcr
jg
popf
cld
int
jmp
mov
cmp
cmc
retf
leave
stc
cmps
std
cmc
mov
repz
pop
ret
repz
fimul
and
mov
mov
pop
mov
repnz
fdivr
fld
sti
in
mov
cmp
(bad)
mov
push
lahf
clc
(bad)
es
sti
xlat
jbe
aas
clc
aaa
xlat
js
out
jle
fsubr
loop
cmps
out
add
inc
stc
push
imul
pop
xlat
out
(bad)
cmp
(bad)
(bad)
out
gs
aas
icebp
neg
cld
lock
sub
mov
add
and
nop
lock
stos
clc
sbb
jl
clc
cld
mov
and
mul
ja
jle
sbb
mov
add
mul
push
xchg
stc
or
add
lahf
cld
icebp
inc
lahf
mov
shl
repz
pop
icebp
(bad)
outs
jg
cld
stc
fld
inc
pop
int3
jp
hlt
sar
imul
push
mov
and
popa
cld
fistp
std
add
mov
and
out
xchg
test
jmp
mov
sub
les
repz
xor
pop
cld
daa
dec
jl
imul
clc
sbb
mov
imul
ds
jg
jmp
(bad)
outs
mov
ds
repz
pop
(bad)
(bad)
jmp
stc
jnp
pop
cli
cld
loop
ret
clc
fdivp
lahf
loope
mov
scas
mov
ja
int3
add
loop
(bad)
cmp
xchg
dec
daa
jg
(bad)
mov
jg
cld
dec
lock
jge
(bad)
mov
arpl
adc
icebp
scas
sub
std
cld
inc
pop
pop
ret
scas
mov
sub
xchg
imul
fs
push
pop
mov
call
aas
stc
xchg
jne
loop
or
sar
ds
mov
fnstsw
cld
push
jns
jmp
inc
jnp
(bad)
scas
push
and
lock
sar
hlt
cli
sbb
std
and
cmc
push
adc
sbb
(bad)
std
fisttp
jno
bswap
jg
stc
push
aas
ds
fnstcw
(bad)
(bad)
pop
jl
xor
xor
jl
jp
pop
jmp
icebp
stc
mov
adc
mov
pop
hlt
and
push
inc
clc
rcl
push
(bad)
mov
std
int
cli
stc
mov
adc
add
call
lahf
out
clc
cli
push
loopne
aam
dec
les
jg
std
xchg
add
scas
mov
repz
aas
adc
loopne
popa
jle
call
push
fisubr
cmp
aas
clc
xor
jmp
out
cmps
jecxz
repz
icebp
cmc
cmp
pop
je
adc
int
push
jl
js
(bad)
sub
shl
loopne
repz
clc
psadbw
jecxz
test
adc
(bad)
out
mov
clc
in
push
jg
aas
jg
lock
jmp
aas
in
fidivr
pop
(bad)
stc
add
jg
cmc
jmp
scas
jg
clc
sti
pop
push
push
je
div
addr16
add
cmp
outs
stos
cld
loop
push
inc
sahf
inc
jle
dec
fwait
das
cld
xlat
jmp
loop
out
pusha
jge
cli
dec
mov
addr16
mov
neg
and
clc
std
mov
cmp
inc
fbld
(bad)
cli
sar
pop
(bad)
jecxz
xor
push
stc
pop
mov
sar
(bad)
adc
imul
xchg
(bad)
ds
(bad)
pop
fimul
xlat
sub
leave
loopne
pop
loopne
adc
sti
imul
ret
outs
ret
jecxz
jecxz
scas
cld
cmp
psubq
cmp
and
sub
cmp
cmc
push
pop
mov
and
pop
ret
scas
inc
lahf
sbb
mov
call
std
stc
jecxz
aaa
cdq
fistp
repz
jge
sbb
jp
pop
jbe
mov
inc
mov
(bad)
mov
jp
data16
icebp
clc
jmp
push
out
invd
std
inc
jge
adc
bound
(bad)
imul
daa
jmp
(bad)
mov
xchg
mov
jle
cli
(bad)
in
jmp
(bad)
stc
add
outs
lahf
mov
nop
lahf
dec
jl
dec
pop
cld
cmc
hlt
imul
fistp
call
in
xchg
mov
jmp
sub
stos
jecxz
(bad)
jg
in
and
(bad)
sbb
sbb
call
cld
xchg
cld
test
(bad)
scas
data16
scas
push
mov
mov
lahf
cmc
lahf
mov
or
ja
dec
aaa
loopne
(bad)
std
xchg
adc
mov
(bad)
mov
lahf
retf
cmp
cld
out
xchg
dec
adc
clc
inc
in
xlat
iret
jg
jle
jmp
shl
adc
int3
out
(bad)
jne
(bad)
(bad)
jnp
clc
scas
addr16
push
jle
xlat
pop
(bad)
adc
fimul
aaa
fcomip
(bad)
cmp
aas
in
cld
sub
sbb
lods
cli
call
jg
cld
(bad)
xor
scas
out
lods
xchg
or
retf
xchg
or
mov
stc
ins
call
retf
jge
inc
aas
or
cs
cld
out
sbb
cli
inc
pop
dec
jle
jmp
(bad)
js
cld
xchg
in
mov
mov
jl
scas
mov
ficom
mov
xchg
stc
hlt
stc
jecxz
push
jge
sti
shl
aaa
jle
xchg
in
sti
jecxz
(bad)
in
icebp
pop
retf
cli
fstp
xchg
scas
xchg
push
(bad)
xor
adc
jl
inc
retf
cmc
mov
jle
outs
out
sti
fwait
xchg
iret
jno
jg
loope
sbb
pop
push
fucomip
loope
ins
out
pushf
jl
jle
lahf
cld
sbb
jle
stos
clc
out
sub
cmps
jle
pop
dec
cld
sbb
jg
scas
arpl
xlat
aam
repnz
fist
scas
or
xchg
gs
retf
outs
mov
popf
mov
xchg
cmc
xlat
add
cwde
iret
cmp
mov
jae
jg
std
mov
std
dec
int3
mul
call
jg
icebp
rol
iret
test
(bad)
jle
stc
sar
sbb
inc
cmp
mov
cld
jg
sub
out
pushf
(bad)
jg
push
repz
jmp
xchg
cmp
mov
(bad)
loop
and
and
repnz
jne
xor
aaa
std
mov
or
movs
mov
sub
ins
sar
pop
mov
cmp
inc
sbb
iret
lods
iret
enter
xlat
repz
mov
adc
aas
cmc
repz
int
(bad)
scas
js
pop
sti
fs
adc
out
sbb
fisttp
mov
pop
mov
push
jmp
outs
mov
cld
bound
jle
mov
push
jle
pop
jg
ret
sbb
repnz
leave
lock
(bad)
jmp
je
popf
cmp
mov
jg
(bad)
repnz
pop
jg
outs
cmp
aas
loopne
mov
cld
jle
std
push
popa
jle
es
sub
(bad)
and
icebp
jg
pop
call
mov
repz
pop
pop
lock
icebp
stc
jns
jle
cli
repz
jg
cdq
(bad)
js
repnz
loop
enter
push
stc
aaa
and
fbld
jmp
(bad)
jmp
mov
in
sar
inc
cmp
loope
sar
adc
popa
jle
clc
imul
out
loopne
arpl
aad
cmp
xchg
icebp
loopne
cmc
inc
loopne
gs
and
mov
call
sti
idiv
mov
enter
jmp
xchg
out
(bad)
cmp
in
mov
iret
div
sbb
jmp
repz
fiadd
xor
xchg
(bad)
cmp
jno
stc
retf
mov
jg
jg
loop
stc
push
xor
out
sub
mov
out
(bad)
inc
repz
sbb
outs
(bad)
ja
pop
sbb
or
mov
je
or
in
sti
outs
mov
adc
cld
scas
icebp
fbstp
leave
inc
or
das
mov
mov
mov
sub
push
leave
lahf
(bad)
mov
fild
push
mov
(bad)
(bad)
jmp
(bad)
xchg
sbb
mov
das
loop
std
out
int3
fistp
out
fisttp
cmp
or
push
inc
(bad)
add
sub
into
(bad)
add
call
call
clc
mov
dec
pop
repz
mov
scas
pop
daa
sti
repnz
xchg
jle
ins
push
jmp
mov
iret
xor
or
mov
cmp
jb
push
sub
mov
aas
in
repnz
inc
mul
ja
repnz
jg
cmp
jmp
fisttp
(bad)
cmp
std
out
add
(bad)
nop
pop
cli
mov
pop
pop
jg
out
(bad)
stc
jnp
call
jg
loop
jg
les
adc
clc
sub
(bad)
adc
push
test
stos
js
scas
data16
mul
mov
push
sbb
(bad)
sbb
out
data16
lahf
mov
mov
pop
dec
mov
cmps
popf
cld
push
fistp
fst
sbb
hlt
push
mov
dec
cmp
cmp
push
fsubp
nop
inc
mov
jg
popf
das
jl
cld
int
push
jecxz
(bad)
fbld
std
push
push
clc
ja
in
pop
jmp
jl
enter
and
shl
nop
cmc
rep
inc
stc
lea
(bad)
dec
xchg
cmp
das
xor
cs
adc
out
pop
js
call
cmp
cli
xchg
loope
call
xlat
aad
aas
(bad)
ja
or
and
sti
jmp
retf
mov
add
cmp
(bad)
cmc
push
int3
inc
(bad)
cli
or
ret
and
std
cmc
iret
adc
dec
jmp
sbb
mov
jp
dec
out
arpl
sbb
cmc
out
fidivr
jg
mov
pop
daa
lahf
and
adc
push
mov
addr16
pop
add
jge
iret
(bad)
cld
mov
std
jg
stc
in
out
shl
lahf
xchg
stos
jg
in
rep
loop
scas
aas
ds
cmp
not
das
pop
xchg
out
add
jg
mov
rol
out
in
pop
pop
(bad)
sti
rcr
cld
sahf
adc
int
(bad)
das
std
pushf
fst
out
int3
sahf
data16
loop
xchg
fstp
xchg
pop
push
xchg
jg
jle
cli
xlat
(bad)
cld
jg
outs
jge
fist
cli
xor
call
mul
daa
or
cld
mov
lea
fstp
mov
repnz
(bad)
(bad)
(bad)
aas
sti
imul
pop
not
out
fist
daa
xchg
jg
outs
mov
div
scas
in
lods
ja
xchg
movs
ud0
scas
pop
jg
jl
push
(bad)
pushf
(bad)
pop
(bad)
pushf
cvtpi2ps
mov
or
jg
adc
pop
ret
cld
pop
out
jg
jle
shl
jmp
daa
or
fwait
xlat
sti
cmp
out
(bad)
(bad)
xor
mov
mov
out
clc
xor
out
out
mov
es
daa
lock
pop
mov
fcomi
jg
jge
jle
mov
outs
pop
jg
cmc
(bad)
lahf
fwait
cmc
mov
jle
in
push
sahf
ret
scas
imul
(bad)
xor
scas
sar
sbb
not
cmp
cld
jnp
pop
inc
jle
adc
adc
test
jle
mov
mov
xchg
pop
outs
cld
les
inc
sbb
les
sti
repnz
outs
fst
pop
xchg
jl
nop
cmp
pop
inc
std
ret
pop
push
in
hlt
out
add
std
pop
push
(bad)
cmp
sti
jg
pop
mov
fist
repz
lock
sbb
pop
clc
or
pop
je
mov
scas
(bad)
std
in
out
cli
pmaddwd
loop
push
jle
dec
out
lahf
loopne
cmp
int3
pop
sbb
aaa
jecxz
mov
xchg
and
xchg
adc
push
cli
psllq
mov
icebp
(bad)
fadd
jnp
idiv
push
jge
mov
(bad)
jge
pop
sbb
std
xchg
sbb
fwait
inc
(bad)
stos
(bad)
imul
(bad)
cmp
jg
inc
pop
pusha
ds
cld
(bad)
aas
mov
cli
mov
(bad)
call
imul
popa
cmp
mov
xchg
cmp
pop
repnz
mov
test
(bad)
fisttp
jecxz
cmp
pop
add
in
es
sub
mov
jle
fist
cmp
loop
mov
adc
(bad)
sti
out
adc
cld
test
mov
mov
iret
pop
arpl
add
fstp
fild
icebp
xchg
ds
cmps
mov
jmp
clc
fucomi
pop
icebp
pop
inc
jle
dec
mov
cmc
cmp
fucom
xor
mov
cdq
lahf
push
fisttp
(bad)
jae
xchg
iret
jmp
aaa
stc
fdiv
pop
mov
inc
mov
js
jge
cmc
pop
jmp
mov
ret
inc
loop
lahf
mov
in
lods
mov
(bad)
pop
pop
in
shl
cmps
leave
sahf
cld
outs
aam
repnz
mov
xchg
clc
jmp
stc
outs
out
scas
mov
cmp
daa
dec
jmp
iret
adc
fild
sbb
and
pop
pop
jecxz
icebp
mul
mov
or
out
out
(bad)
outs
arpl
scas
aaa
sahf
pop
mov
repz
and
mov
push
hlt
inc
aaa
pop
cmp
outs
mov
jg
sub
mov
fisttp
(bad)
mov
pusha
icebp
addr16
xchg
rcl
clc
ins
ror
mov
jle
xchg
xlat
fucomi
cmps
fistp
dec
or
(bad)
push
lahf
dec
jns
outs
pop
jmp
clc
xchg
jg
(bad)
jecxz
jg
loope
(bad)
sti
(bad)
mov
ja
sub
mov
fist
pop
lock
cmp
cmp
pop
or
jg
pop
out
cwde
pop
cld
data16
test
xchg
jmp
aas
(bad)
xlat
js
hlt
jmp
xchg
stc
out
(bad)
hlt
fcmovnbe
(bad)
fistp
cld
(bad)
out
push
lock
stc
clc
popf
jnp
lods
int
loop
int3
repz
and
or
add
jmp
dec
ret
lahf
xchg
cmc
cmp
jmp
push
mov
psubd
cld
or
sub
stc
jmp
das
mov
les
outs
sti
imul
stc
mov
push
stc
fcmovu
xor
jge
xor
std
xchg
in
invd
cld
jge
lahf
dec
icebp
repz
mov
call
lahf
fs
xor
add
(bad)
pop
mov
test
sbb
inc
out
std
pop
jl
idiv
addr16
sbb
inc
add
sbb
call
clc
xchg
sub
jg
pop
(bad)
lods
(bad)
std
cmp
fisttp
mov
jge
dec
das
icebp
scas
jle
call
hlt
cli
xchg
jns
pop
imul
mov
in
scas
gs
adc
xor
retf
clc
sub
pop
(bad)
pop
mov
jg
pop
scas
js
bound
and
xchg
inc
dec
shl
std
outs
mov
adc
std
clc
push
jbe
mov
hlt
cld
test
out
jg
retf
ja
sbb
ja
pop
pop
mov
cmp
xor
dec
cmp
repnz
retf
inc
sahf
mov
jmp
std
mov
cmps
jecxz
pop
jg
cdq
dec
aas
in
rcr
(bad)
jp
cmp
das
(bad)
(bad)
inc
add
jns
mov
push
es
std
xchg
cmc
ss
std
stc
repnz
leave
iret
push
int3
scas
mov
pop
daa
aas
das
inc
outs
fistp
mov
movs
repz
cli
jne
xor
mov
add
or
mov
sub
mov
push
(bad)
(bad)
pop
(bad)
nop
in
sbb
inc
push
mov
inc
jg
in
mov
pop
pushf
inc
fs
stc
fild
and
adc
aaa
push
jl
pop
jnp
aas
clc
jmp
and
mov
dec
jp
clc
pop
push
jecxz
jg
int3
pop
or
(bad)
mov
ret
sti
add
inc
mov
ins
loop
lahf
fidiv
sahf
jg
push
jg
rcr
mul
(bad)
cmp
xlat
mov
xchg
cld
mov
mov
out
popa
lahf
dec
xlat
into
ds
test
pop
cli
dec
adc
jle
movsx
xlat
repz
fistp
mov
(bad)
not
cmps
xchg
das
jg
(bad)
mov
jl
xor
jmp
jmp
push
add
push
repnz
int
movs
lock
pop
jp
cmp
das
stc
outs
fistp
ins
out
jg
lock
repnz
stc
fistp
icebp
mov
xor
jl
loopne
push
jns
jmp
adc
std
std
lea
mov
xor
ja
std
and
repnz
lea
repz
imul
cli
xor
pop
btc
sbb
xor
cmp
mov
pop
repz
cld
(bad)
cmp
repnz
mov
das
(bad)
stc
call
xchg
hlt
out
in
vpaddw
fcomip
repz
mov
call
enter
pushf
pop
adc
clc
ins
mov
fistp
js
ja
jns
aas
(bad)
std
scas
and
jl
jl
cmc
jb
jg
out
ss
repz
(bad)
pop
(bad)
fidiv
sub
out
or
cmp
idiv
(bad)
pop
out
xchg
in
ror
sbb
cmp
(bad)
cmp
xchg
adc
das
popa
jge
xchg
xchg
scas
in
cli
push
out
inc
aas
in
and
jecxz
inc
cwde
(bad)
lock
cdq
mov
loope
push
mov
and
cs
mov
scas
lock
clc
clc
mul
pop
clc
out
stos
ds
cmc
shl
pop
and
dec
mov
push
test
hlt
leave
pop
neg
hlt
in
jmp
mov
push
std
push
cmp
fsub
call
pop
cs
xor
outs
mov
repz
rcl
ins
outs
jg
(bad)
(bad)
ja
cld
mov
outs
add
xor
xchg
(bad)
(bad)
pop
jns
mov
addr16
in
or
mov
loope
mov
mov
xchg
mov
les
inc
scas
pushf
stc
pop
stc
push
pop
aas
das
cmp
cmp
sbb
jle
cmc
sahf
or
cmp
dec
in
jmp
jecxz
jns
dec
sar
shr
jg
icebp
jmp
add
stc
(bad)
pop
ja
dec
dec
jecxz
jle
hlt
adc
jg
popf
pop
sbb
jg
hlt
xor
pop
jmp
or
add
mov
jg
iret
iret
xchg
or
aas
ds
xor
jl
(bad)
pop
cld
jg
std
xchg
jg
inc
pop
pop
(bad)
or
arpl
adc
daa
or
loope
jl
fimul
aas
inc
std
cs
fisttp
pop
cwde
pop
adc
xchg
jl
pop
retf
neg
cmp
jg
cld
cmp
xchg
jl
das
inc
dec
inc
jg
xlat
pop
xlat
xchg
out
mov
in
cmc
not
ss
lahf
sub
inc
mov
sti
mov
mov
sub
mov
test
ret
jl
pop
adc
int
repnz
gs
jnp
pop
call
cmp
mov
dec
cmp
addr16
in
mov
push
cli
dec
(bad)
bnd
call
mov
or
addr16
lock
in
pop
fiadd
repnz
dec
loope
ds
cs
and
(bad)
loopne
or
jmp
fs
ds
xlat
imul
out
inc
jnp
jns
push
repnz
outs
sbb
fwait
rep
call
rcr
fistp
push
shl
scas
sar
pop
call
sub
ins
cmp
mov
aaa
xor
or
pop
jmp
scas
data16
clc
clc
cmps
clc
push
cld
div
js
sti
fld
jnp
clc
std
xor
jg
repz
ret
std
(bad)
cmp
jle
clc
repnz
in
aas
neg
push
dec
jle
xlat
(bad)
sub
neg
rol
cmp
lods
daa
dec
je
pop
jne
or
lds
ja
lds
jg
call
stc
pop
loop
inc
mov
and
mov
in
dec
mov
jp
(bad)
not
in
repz
dec
hlt
int
jle
mov
dec
pop
ud1
enter
clc
jae
inc
addr16
mov
(bad)
stc
cmps
loopne
fisttp
or
std
and
lahf
cmc
mov
cmps
loop
(bad)
sub
out
xchg
and
xor
leave
pop
enter
mov
loopne
adc
shr
sub
call
scas
fld
lock
mov
cli
and
pop
cld
add
(bad)
mov
pop
mov
add
fld
lods
mov
jle
jnp
mov
inc
inc
ud1
pop
enter
into
xor
cld
scas
ret
jle
cmc
hlt
fbld
clc
xchg
mov
fcmovnu
(bad)
ins
hlt
fistp
aad
cmc
outs
fdivr
mov
sti
lods
sub
mov
repz
xchg
jl
jg
aas
int3
call
jg
stos
mov
pop
cld
jge
(bad)
out
(bad)
cmps
(bad)
cmp
(bad)
push
pop
jmp
hlt
jg
shr
loopne
mov
aas
clc
pop
lock
jle
jmp
jno
(bad)
pop
hlt
repnz
mov
or
mov
(bad)
stos
fcomp
inc
jle
ja
jge
xlat
imul
jl
outs
gs
inc
(bad)
jg
int
outs
shl
dec
mov
jne
std
pop
in
in
pop
xlat
ret
outs
push
(bad)
bnd
test
(bad)
lock
pop
lahf
sti
imul
call
mov
cmp
cmp
inc
loopne
mov
adc
fisub
jmp
jecxz
aaa
ins
jg
daa
call
repz
mov
(bad)
fisttp
pop
jl
sti
mov
xchg
lock
outs
sbb
mov
aam
pmaddwd
cdq
mov
cmp
clc
jmp
loopne
jae
fmulp
out
cmps
stc
mov
dec
pop
icebp
mov
gs
pop
enter
sbb
sub
std
js
or
sar
iret
ret
ds
sbb
addr16
jl
cld
or
out
mov
cli
scas
lock
leave
jp
aas
pop
add
jg
mov
and
jg
fidivr
hlt
(bad)
xchg
push
jp
mov
jle
cmp
in
retf
outs
sar
scas
push
js
mov
or
pop
sbb
cmp
sub
aaa
pop
js
(bad)
jg
scas
jg
pop
mov
(bad)
jmp
aaa
out
in
ret
mov
mov
mov
addr16
jecxz
iret
mov
sub
lahf
jmp
(bad)
(bad)
cld
cs
call
sar
pop
cmps
jecxz
aaa
pop
in
push
int3
mov
in
xchg
(bad)
and
adc
cmp
aas
inc
push
mov
fild
(bad)
stc
dec
pop
inc
in
cli
cdq
clc
(bad)
mov
(bad)
dec
push
xlat
jns
xchg
call
jg
retf
scas
int3
mov
repz
test
clc
sbb
inc
call
hlt
js
jecxz
hlt
adc
lock
inc
(bad)
cmp
not
pop
out
jne
iret
mov
(bad)
sbb
pop
xlat
stc
sub
call
pop
cld
inc
ss
in
and
cmp
int
int
jmp
mov
(bad)
or
sub
mov
inc
jmp
outs
fnstcw
call
pop
ror
out
aam
push
clc
mov
inc
inc
sbb
cmc
pop
or
call
sbb
(bad)
(bad)
std
shr
push
fidivr
dec
(bad)
sbb
pop
pop
(bad)
mov
jg
add
out
(bad)
icebp
out
sti
mov
bswap
idiv
sub
fwait
lock
aas
xor
cmp
add
iret
int
or
jg
(bad)
fbstp
loop
pop
xor
lock
jp
loopne
add
xchg
pop
xor
loope
adc
ja
jg
(bad)
sub
stc
mov
dec
lahf
test
daa
clc
and
adc
pop
cli
scas
js
adc
(bad)
jmp
push
in
mov
clc
out
dec
lahf
mov
xlat
in
mov
fbld
pop
icebp
ds
iret
xchg
shl
arpl
sti
inc
out
fwait
loopne
sbb
cli
mov
in
loop
mul
repz
(bad)
rcr
xchg
lock
out
fistp
psraw
js
(bad)
imul
pop
push
dec
stc
das
loope
add
daa
or
fwait
in
stc
add
push
or
pop
in
jge
mov
add
(bad)
(bad)
jge
xor
call
mov
out
mov
aas
aas
jg
shl
movsx
fdiv
jg
lods
xchg
arpl
aas
or
sbb
movs
cli
jg
outs
aas
aas
fild
dec
mov
fistp
cld
or
pop
pop
add
scas
adc
fdivrp
stos
xchg
(bad)
stc
test
ds
bswap
aad
dec
mov
movs
jmp
icebp
xacquire
stc
or
neg
(bad)
dec
call
neg
jge
call
dec
out
adc
std
cmp
mov
cld
pop
jecxz
loopne
(bad)
daa
mov
pop
mov
mov
jmp
retf
loope
in
jle
inc
pop
(bad)
and
sbb
cwde
push
(bad)
call
mov
pushf
pop
out
into
(bad)
mov
icebp
ret
sti
mov
cmc
adc
daa
pop
lahf
test
jp
mov
jecxz
icebp
inc
(bad)
(bad)
cmp
aaa
mov
and
cmp
lods
addr16
inc
in
out
(bad)
ins
hlt
pop
jle
cdq
fild
fnstcw
jmp
div
rcr
pop
mov
lock
jb
jmp
in
mov
das
clc
jg
(bad)
(bad)
jge
mov
jle
(bad)
cld
add
hlt
sti
imul
lods
inc
(bad)
hlt
leave
jo
cmp
aas
popa
cmc
mov
inc
stc
xchg
cmc
xor
inc
cmp
cmc
jecxz
mov
jg
mov
clc
pop
in
mov
data16
movs
fucomip
into
stc
lods
(bad)
movs
aas
lock
inc
in
out
dec
jle
lods
outs
cld
lea
cld
mov
ret
nop
pop
shr
repnz
js
std
pop
out
mov
test
fiadd
retf
imul
add
push
sub
xchg
cmc
and
idiv
(bad)
out
ja
(bad)
inc
out
mov
stc
ffreep
std
inc
(bad)
jge
std
scas
jae
scas
cmp
xchg
stos
mov
fistp
sti
cli
call
das
pop
jmp
repz
mov
stc
pop
popa
icebp
xchg
mov
xchg
(bad)
stc
sbb
xchg
dec
psraw
lahf
push
test
(bad)
jne
out
mov
lahf
iret
scas
std
xabort
mov
cli
loop
shl
jmp
mov
mov
mov
cmp
sahf
lods
out
jbe
jg
aas
inc
aad
loop
and
push
jo
sbb
not
sub
cli
cli
repnz
(bad)
fbld
stc
or
bound
jl
push
in
(bad)
dec
inc
in
repz
push
mov
(bad)
stc
jmp
(bad)
(bad)
pop
setle
adc
mov
xor
mov
outs
cdq
pop
pop
jg
add
neg
test
mov
data16
fnstsw
retf
out
and
hlt
mov
jle
(bad)
mov
lahf
adc
lock
std
mov
jl
pop
shl
call
lea
pop
mov
fucomip
cli
(bad)
cmps
bnd
stc
sar
push
or
in
mov
mov
fistp
pop
test
jecxz
mov
mov
inc
jle
int3
lahf
(bad)
loop
enter
pushf
aas
jbe
mov
lea
bnd
cmp
mov
xchg
loop
cld
out
mov
lds
js
pop
cld
xchg
cli
ja
iret
sub
test
and
outs
pop
lahf
add
push
jge
std
into
jp
enter
test
cmp
mov
mov
jae
(bad)
std
ja
jmp
(bad)
jmp
stc
inc
mov
out
(bad)
fistp
movs
jmp
jle
sti
lahf
and
(bad)
jne
scas
jmp
cld
xchg
(bad)
jg
hlt
call
mov
dec
enter
iret
mul
cli
add
mov
add
mov
clc
stos
xor
push
jmp
xchg
addr16
(bad)
dec
neg
lock
in
lea
loopne
gs
call
loop
jg
ret
pop
jmp
jg
outs
(bad)
(bad)
jp
(bad)
mov
fdivr
mov
aas
mov
pop
jl
push
jge
jne
addr16
nop
jg
aas
jg
retf
lahf
out
das
call
aas
pop
aas
enter
push
fcom
aaa
sbb
(bad)
jge
scas
fs
jg
das
hlt
test
cmp
fmul
mov
xor
inc
fidivr
or
cld
xchg
jg
lods
fdivr
add
into
aas
inc
mov
ja
addr16
outs
sub
in
out
fisubr
aas
std
test
in
ret
loopne
repz
cld
stos
mov
adc
popf
ins
int3
fisttp
mov
aas
push
sbb
jmp
cmp
sbb
fmul
cmp
out
js
hlt
in
out
mov
(bad)
icebp
mov
cld
dec
pop
jle
dec
jg
pop
fistp
hlt
or
pop
neg
jg
xchg
lahf
mov
pop
repz
stc
test
cld
ins
pop
fisub
repnz
popa
jg
int
int3
sahf
dec
cmp
ficom
call
inc
lahf
std
mov
mov
sub
sub
test
(bad)
fwait
stos
das
jmp
add
xor
repz
jge
mov
icebp
cmp
cli
pop
in
neg
enter
std
mov
(bad)
pop
jp
in
addr16
fcom
adc
mov
adc
jmp
scas
clc
clc
cld
sub
sti
xlat
fstp
retf
cmp
mov
js
lock
xlat
xchg
lds
cli
pop
jecxz
mov
jle
in
sbb
push
fistp
pop
push
repnz
xor
dec
dec
pop
leave
ja
sahf
xchg
(bad)
adc
std
lea
pop
in
mov
pop
clc
repz
stc
cli
sub
ja
(bad)
mov
sbb
fsub
pusha
cmp
mov
inc
jge
mov
jbe
pop
adc
aas
and
cmps
jl
iret
aam
or
mov
(bad)
sti
in
cwde
jg
xchg
pop
inc
(bad)
xor
les
mov
xchg
lahf
inc
cli
dec
or
xchg
pop
test
neg
repnz
ret
(bad)
js
jecxz
hlt
out
jae
mov
stc
cld
xlat
mov
lods
aas
dec
jle
(bad)
(bad)
xchg
pop
sub
(bad)
jmp
js
mov
add
xchg
cmp
std
mov
cli
(bad)
fbld
jle
ins
call
adc
adc
aaa
add
movs
repz
xchg
(bad)
ror
cmps
rcr
stc
cld
sub
int3
imul
stc
push
sar
outs
std
fsubr
arpl
fistp
pop
loop
loope
ret
mov
mov
cli
pop
not
in
and
icebp
daa
dec
cld
sub
cmp
clc
xchg
scas
dec
mov
scas
jg
lea
mov
loope
pop
push
pop
outs
lock
mov
xchg
jg
(bad)
push
ds
(bad)
jb
mov
test
scas
addr16
and
mov
cli
xchg
mov
mov
fist
dec
jle
aaa
out
call
mov
cmp
jle
cmc
add
call
aas
(bad)
jmp
test
loop
cld
neg
mov
(bad)
ficomp
inc
outs
lods
addr16
(bad)
cli
imul
cmps
std
xchg
push
pop
(bad)
jmp
push
int3
addr16
pop
test
cld
clc
(bad)
mov
lock
fnsave
dec
loop
pop
mov
test
cmp
xchg
imul
std
test
out
jg
jnp
test
jecxz
push
cmp
out
scas
jmp
jmp
jl
xchg
fistp
jmp
inc
jl
outs
fxch
pop
fild
aas
xchg
fmulp
lahf
jecxz
xlat
lock
cmp
loop
cwde
jl
pop
jg
(bad)
push
inc
mov
cli
clc
ja
cmc
int3
cwde
mov
loopne
mov
or
pop
das
sti
imul
fdivr
scas
sar
jle
out
ss
out
inc
cmc
cmp
push
leave
ja
pop
ret
retf
pop
fisttp
repnz
xor
mov
(bad)
sub
repz
cwde
outs
xchg
cmc
mov
push
in
lods
lods
(bad)
std
out
cmp
bnd
call
cmp
jg
inc
fcmovnbe
punpcklwd
dec
loop
mov
jmp
sar
std
or
jp
pop
out
stos
enter
jg
jecxz
aas
(bad)
pop
jne
rcl
mov
clc
(bad)
(bad)
cmps
jmp
cli
cmp
in
neg
jmp
pop
sar
mov
std
fild
jmp
mov
inc
loope
sub
cmc
xchg
(bad)
sti
inc
pop
jecxz
mov
addr16
cmc
aam
(bad)
clc
popf
cmp
adc
xlat
lods
lahf
(bad)
outs
cmp
clc
inc
(bad)
push
(bad)
cli
add
addr16
jecxz
pop
out
clc
lahf
pop
repz
scas
push
jg
mov
adc
sar
cmc
ja
mov
iret
mov
and
inc
clc
mov
(bad)
(bad)
jne
pop
loop
std
xor
pop
loop
outs
jl
repnz
cmc
cwde
sub
icebp
cld
push
dec
pop
loope
jg
ret
jg
pop
loope
(bad)
(bad)
ins
jae
jg
(bad)
jle
sti
jo
mov
jg
rep
sub
sti
lods
xor
cld
pop
iret
jmp
jg
aas
inc
pop
std
out
lahf
les
popf
(bad)
ud0
fld
pop
inc
out
shr
add
jg
jecxz
std
inc
(bad)
cld
imul
cmp
inc
pop
leave
das
sbb
stc
push
icebp
lahf
stos
cmp
aas
fsub
mov
mov
loopne
jecxz
cmp
xchg
jg
repnz
enter
cli
imul
repnz
xlat
pop
fwait
xlat
sti
mov
stc
xchg
aad
jge
in
in
fadd
or
fbstp
scas
aas
mov
mov
loope
and
repnz
pop
fistp
repnz
pop
jmp
jle
(bad)
sti
stos
cwde
aas
(bad)
popf
add
dec
icebp
inc
ins
std
repnz
cmp
icebp
out
std
and
inc
cmp
cmp
nop
cld
in
(bad)
push
ds
cld
jbe
pop
mov
cld
neg
cmp
lea
fs
cld
(bad)
shufps
js
shl
sar
jecxz
outs
(bad)
mov
or
sub
jmp
jmp
cld
add
repnz
in
add
pslld
stc
sub
imul
repnz
(bad)
cld
lds
iret
jmp
in
(bad)
scas
jl
das
jmp
cmps
cmp
mov
mov
(bad)
dec
(bad)
loop
jae
jg
retf
xor
sub
cmp
xchg
pop
lahf
lahf
(bad)
sub
scas
and
dec
into
addr16
(bad)
es
sti
repnz
mov
loope
add
test
fmul
ds
pusha
cld
aaa
mov
cli
jae
jg
aas
push
test
adc
cmc
je
pop
shl
mov
mov
and
cli
loope
loop
fdivr
or
adc
jg
repnz
pop
scas
or
les
mov
js
fisttp
jg
loope
mov
mov
sar
sbb
inc
in
test
push
fiadd
mov
iret
pop
cld
and
(bad)
pop
xchg
(bad)
mov
cmp
sar
shr
jp
pop
cld
aas
jle
jl
fadd
int3
xchg
outs
(bad)
scas
xchg
pop
test
sahf
aas
xchg
push
loopne
icebp
scas
jge
gs
icebp
mov
retf
call
ja
adc
(bad)
outs
int3
iret
out
rcr
std
faddp
sti
int
idiv
and
repz
adc
cmc
sti
adc
cli
call
cmp
ss
aas
or
lods
mov
mov
pop
lods
repz
ja
xchg
clc
loopne
arpl
icebp
push
std
cmp
jns
jecxz
(bad)
loop
mov
sub
std
(bad)
loopne
clc
mov
clc
dec
jl
jecxz
std
dec
pop
jnp
popa
jle
std
sbb
xor
lahf
mov
or
cld
shr
sub
(bad)
jmp
fcmovnu
call
js
sti
mov
mov
push
in
ror
jmp
add
std
jno
pop
cli
in
loop
inc
mov
popa
mov
mov
(bad)
jg
retf
(bad)
and
lock
(bad)
ins
jg
push
fbstp
dec
loop
out
push
neg
jl
into
inc
jl
repnz
jg
cli
lds
sti
ja
(bad)
mov
fbstp
rcr
pop
adc
jmp
std
cmp
sti
xchg
fcomp
jg
cmp
in
dec
test
pop
pop
pop
mov
xor
sti
icebp
mov
sti
icebp
sub
adc
jge
sub
or
retf
cmps
cmc
pop
mov
(bad)
sub
(bad)
bound
sbb
ret
fild
std
(bad)
aas
clc
stos
in
jp
in
loop
hlt
pop
sti
xchg
std
inc
call
dec
pop
mov
pop
jmp
loopne
(bad)
cmp
and
adc
sbb
popf
imul
std
jg
jmp
fist
call
jae
call
jl
lods
test
jle
add
lods
test
out
scas
hlt
repz
adc
jmp
mov
dec
aas
inc
dec
pop
pop
sbb
inc
cli
pop
js
ins
(bad)
mov
cdq
fbld
sub
adc
jge
mov
les
jge
int
(bad)
xchg
cmp
pop
pop
mov
std
icebp
pop
jmp
xor
fwait
(bad)
repz
pop
ret
mov
dec
inc
stc
push
clc
pop
fwait
cmc
or
or
sub
jp
ja
and
xor
sbb
xchg
cld
jecxz
leave
cld
in
pop
out
inc
pop
sub
movs
lock
jl
fwait
mov
clc
fisttp
(bad)
mov
mov
xor
fsubrp
lock
(bad)
jge
(bad)
rcr
xchg
cmc
push
stos
mov
mov
iret
das
cwde
(bad)
pop
scas
dec
sbb
ss
pop
fist
scas
mov
mov
pop
repnz
repnz
cwde
dec
ja
inc
icebp
das
gs
sar
bswap
pop
add
fdivrp
int
push
or
hlt
push
adc
je
(bad)
fnstsw
int
leave
hlt
jbe
sub
sub
sbb
stc
adc
xchg
fwait
(bad)
repz
js
pop
fwait
in
dec
out
inc
mul
das
(bad)
mov
stos
cmp
ret
sub
ds
lock
push
mov
pop
hlt
aad
fidivr
lock
leave
scas
add
scas
fwait
jmp
inc
cld
repz
pop
aad
iret
std
sub
cwde
cmc
sbb
jmp
ret
repz
mov
mul
aas
push
cld
ss
arpl
mov
cwde
jmp
cmps
mov
fild
(bad)
mov
xchg
cld
stc
repnz
shl
inc
jne
shl
outs
and
daa
clc
std
or
lahf
adc
xchg
jecxz
out
pop
ffreep
jg
std
(bad)
aas
or
sti
xlat
jmp
jbe
cli
in
xchg
aas
cmps
sar
(bad)
mov
cmps
lock
mov
adc
out
mov
movs
ds
leave
(bad)
cli
or
sub
(bad)
lods
cwde
jle
(bad)
pop
sar
clc
mov
outs
fadd
mov
pop
jbe
adc
(bad)
pop
jne
aaa
rcr
pop
fisttp
jg
pop
mov
sbb
push
repnz
sar
(bad)
scas
in
cld
retf
mov
js
aaa
mov
fdivr
cmp
xchg
retf
out
mov
cli
ja
mov
add
jge
neg
clc
mov
cdq
jg
sahf
or
(bad)
push
mul
(bad)
cmp
mov
mov
mov
jle
(bad)
jae
and
fcmovbe
iret
nop
out
inc
xlat
jecxz
mov
cmc
outs
ja
ds
sub
mov
sti
xor
xor
nop
clc
aad
pop
xchg
scas
cli
ins
ins
jl
pushf
scas
xor
out
movs
js
movs
not
ret
hlt
div
jbe
mov
adc
imul
or
sar
ja
jecxz
movd
neg
push
(bad)
mov
test
lods
inc
in
jg
jnp
ds
not
dec
xchg
ja
std
(bad)
mov
mov
pop
sbb
lds
pop
fwait
js
stc
lods
lahf
or
xor
pop
mov
pop
pop
or
push
repz
pop
adc
aaa
rcr
xchg
lahf
jg
mov
cmp
jg
push
out
mov
jl
outs
(bad)
scas
test
fild
ja
in
sub
psllq
jae
pop
mov
rcl
neg
cmc
fiadd
(bad)
(bad)
hlt
stc
outs
lock
cld
cdq
pop
iret
jl
clc
mov
clc
and
xlat
xchg
pop
out
aas
mov
sti
mul
xchg
test
push
xchg
vmwrite
lock
push
mov
xchg
fistp
aas
daa
jg
sahf
dec
test
in
jmp
mov
xchg
data16
or
ds
cmc
pop
rcr
mov
stc
and
push
enter
jle
cmc
in
test
jg
jnp
out
push
std
mov
jns
in
in
and
sahf
(bad)
jnp
call
sti
jmp
dec
ja
jg
icebp
pop
or
in
mov
repz
sar
data16
xchg
sbb
pop
jl
jge
jge
ja
in
aas
sub
jmp
pop
cld
std
out
call
cmp
mov
shr
lock
jae
aaa
cwde
js
jl
jmp
jecxz
jmp
(bad)
popf
cdq
mov
jmp
div
je
push
xlat
jle
(bad)
jg
sti
or
movs
mov
dec
fistp
jns
jl
sbb
fidivr
out
movs
mov
stc
fisubr
(bad)
ja
mov
sub
addr16
cmp
(bad)
cmp
cld
jg
out
dec
(bad)
call
inc
lock
stc
or
pop
stc
test
imul
scas
gs
push
pop
pop
inc
fisttp
cld
xchg
jmp
push
loope
jecxz
add
(bad)
sub
pop
(bad)
inc
ret
sti
push
mov
jg
mov
pop
cli
cld
mov
cli
dec
call
sti
mov
cld
and
push
adc
push
jle
ins
movsx
push
mov
std
jg
icebp
dec
mov
(bad)
fist
or
dec
sti
inc
repz
not
fidivr
leave
fistp
mov
inc
stc
sti
scas
(bad)
(bad)
(bad)
addr16
call
out
sbb
(bad)
stc
ins
mov
iret
(bad)
imul
icebp
neg
(bad)
xor
imul
(bad)
(bad)
pop
fnstsw
das
out
sbb
dec
sti
mov
loope
mov
sub
mov
idiv
sti
jg
repnz
jmp
mov
stc
fbstp
(bad)
pop
cli
out
jmp
das
jmp
inc
(bad)
aas
inc
repz
jg
scas
mov
mov
lock
cmp
xchg
fisttp
jge
lahf
jg
std
retf
mov
mov
pop
pop
leave
xchg
jmp
jns
xor
mov
jnp
dec
jg
arpl
jg
(bad)
out
movs
inc
addr16
lock
push
repnz
ret
call
xchg
fidivr
int
mov
jo
(bad)
mov
jmp
fimul
loope
pop
jl
push
pop
pop
pop
push
jge
clc
cld
add
push
neg
popa
cld
push
or
jg
ins
outs
loopne
adc
pushf
ds
popf
stc
sti
mov
mov
rcr
pop
aam
out
fs
popf
push
std
jg
cmps
out
pop
aam
fistp
(bad)
ja
jl
jge
cli
cli
fbstp
scas
out
sti
dec
jp
lods
sbb
in
dec
mov
fs
ud0
loopne
cmp
jg
iret
(bad)
mov
popf
std
ss
add
lock
adc
pop
jmp
in
popf
mov
pop
aas
cld
cmp
jmp
lahf
jg
(bad)
sti
punpcklbw
cld
mov
std
imul
pop
jle
icebp
sbb
sti
pop
pop
jnp
out
cld
lea
clc
xor
pop
cmc
out
in
(bad)
aas
pusha
cld
(bad)
mov
inc
(bad)
ds
pop
(bad)
sbb
lock
mov
mov
(bad)
cmp
mov
call
xlat
fdiv
lds
cmp
dec
mov
push
jns
dec
pop
add
fist
in
scas
lock
addr16
inc
lahf
sbb
dec
lahf
mov
adc
lods
mov
pusha
(bad)
in
aas
sub
out
adc
or
outs
jecxz
sar
push
fisttp
mov
jb
jecxz
jmp
ds
ret
mov
cmps
fistp
(bad)
scas
xchg
mov
idiv
adc
outs
(bad)
(bad)
pop
jecxz
push
aas
jmp
iret
push
(bad)
inc
adc
mov
dec
sub
mov
mov
inc
jnp
inc
(bad)
out
jg
in
inc
cmc
outs
dec
sti
jg
icebp
jmp
pop
(bad)
(bad)
neg
ds
mov
scas
mov
in
cmp
iret
mov
ja
idiv
jg
sub
(bad)
dec
(bad)
out
pop
(bad)
sti
out
repz
clc
in
cmps
or
(bad)
push
jle
ret
(bad)
sub
hlt
pop
jns
sti
fistp
push
(bad)
ja
loopne
cmp
jl
clc
xchg
jmp
lahf
cmp
outs
call
fcmovne
jp
loop
lahf
aam
xchg
inc
pop
popa
(bad)
fdivp
add
cli
in
push
dec
leave
div
(bad)
clc
push
not
xchg
cmp
outs
ins
jl
xchg
(bad)
aas
rol
mov
in
mov
xor
std
xchg
pop
jg
cmp
sbb
ss
aaa
stos
ds
jmp
fst
fistp
repnz
xchg
sub
aas
mov
clc
adc
mov
retf
aaa
hlt
not
div
push
xchg
mov
cwde
sahf
loopne
fcomip
push
std
std
push
mov
ret
(bad)
icebp
js
fcmovnu
mov
push
cld
cld
xlat
stos
jg
sti
mov
iret
jae
cmp
inc
cld
pop
jns
jg
int
ret
mov
xchg
push
repz
jle
fcmovnu
dec
out
out
outs
aam
movs
push
sti
stc
push
jno
(bad)
cli
imul
pop
iret
stc
je
repz
loope
jge
mov
test
std
jecxz
mov
vpmacsdql
cmc
mov
(bad)
xchg
loopne
mov
scas
jmp
scas
cmps
push
div
xlat
jmp
jl
aaa
sub
bnd
mov
push
stc
aaa
stc
mov
scas
ins
call
(bad)
iret
jg
mov
rcr
cli
sub
jg
jmp
jmp
icebp
(bad)
(bad)
pop
movs
out
(bad)
jle
(bad)
(bad)
ja
icebp
std
lds
std
push
test
mov
pop
iret
push
sti
inc
dec
out
mov
jl
jp
mov
in
sbb
jg
iret
lahf
mov
(bad)
std
mov
ins
jg
(bad)
fwait
cli
inc
cmp
(bad)
addr16
mov
push
dec
jg
mov
std
outs
ficomp
jecxz
(bad)
jl
aas
lods
out
test
jge
clc
sbb
in
cli
sbb
and
mov
pop
ss
or
sub
aas
adc
and
mov
loope
adc
ja
(bad)
xchg
icebp
jp
pop
inc
cli
sub
dec
xor
pop
stos
iret
push
stos
aas
(bad)
jp
pop
dec
(bad)
div
lds
pmuludq
jg
mov
mov
cld
stc
out
(bad)
mov
std
push
dec
(bad)
outs
loopne
mov
cld
repnz
mov
mov
mov
aas
jg
in
dec
in
lods
shl
fistp
in
out
ja
int3
fistp
idiv
sti
mov
mov
push
scas
mov
(bad)
sti
enter
retf
mov
std
or
loopne
fsubr
repnz
int3
stc
adc
mov
mov
lock
cmc
idiv
stos
cmp
inc
jg
fcmovb
cli
cmp
cli
xchg
loopne
sti
(bad)
fwait
mov
jmp
out
lock
lock
mov
jg
stos
jns
push
cmc
daa
jmp
jg
(bad)
jmp
das
push
out
jne
jmp
das
jg
cmps
std
push
jg
jmp
mov
sub
mov
sti
fnsave
jmp
inc
jg
mov
out
mov
loop
sbb
hlt
fist
js
in
call
inc
mov
(bad)
pop
(bad)
sbb
pop
lock
dec
jg
not
repz
movs
aas
clc
stos
into
pop
(bad)
jmp
jg
test
test
mov
push
sub
adc
xchg
mov
xchg
iret
stc
imul
pop
pop
dec
jmp
xchg
fbld
gs
jg
push
aam
mov
jmp
jg
das
pop
stc
xor
std
xor
xor
add
ds
outs
(bad)
mov
outs
das
dec
jl
jnp
(bad)
sub
jp
fsub
mov
fsubr
repz
xor
hlt
loope
jp
mov
js
dec
(bad)
ds
mov
mov
adc
jg
push
jl
das
mov
jae
xchg
outs
ja
add
mov
mov
sub
repz
xor
repz
out
fcomip
jl
aad
ds
sub
(bad)
mov
test
cli
repz
pop
xor
fistp
mov
sti
cmp
fcmove
js
jg
clc
mov
push
clc
enter
ds
mov
movd
repnz
idiv
cli
arpl
aas
lods
imul
out
fisub
mov
pop
(bad)
cli
test
(bad)
mov
mov
jnp
fwait
div
xchg
jmp
clc
cld
add
cmc
ja
in
xor
or
data16
sar
repz
mov
mov
inc
mov
aad
(bad)
out
(bad)
xor
lahf
(bad)
(bad)
pop
aaa
mov
cld
cmp
in
ret
das
push
jl
fidiv
sti
fbld
sar
jg
mov
mov
in
fimul
outs
(bad)
fcomi
test
jmp
imul
dec
xchg
idiv
mov
and
es
das
mov
mov
clc
std
idiv
mov
push
aaa
iret
scas
icebp
jg
aas
dec
mov
jg
jns
in
jmp
(bad)
jecxz
lods
in
and
dec
test
push
call
(bad)
mov
sub
loopne
cli
inc
pop
lahf
aas
inc
loope
fisttp
pop
(bad)
xchg
and
mov
pop
cld
jmp
fld
(bad)
jg
in
scas
mov
mov
outs
int
dec
(bad)
in
aas
shl
or
in
fistp
call
fcomp
(bad)
cmp
icebp
sti
push
cld
aaa
loop
jg
repnz
(bad)
xlat
call
inc
mov
fistp
dec
in
jmp
cli
(bad)
mov
pop
loopne
mov
(bad)
mov
mov
iret
adc
clc
out
sahf
loop
repz
pop
jg
rcr
cmp
maxps
fnstsw
push
adc
inc
(bad)
jg
loope
cld
(bad)
pop
mov
mov
xor
jmp
std
cmp
jp
push
mov
pop
test
jnp
aas
push
std
hlt
outs
pop
cli
cld
add
jmp
xchg
jg
add
clc
iret
(bad)
jp
clc
push
loop
inc
adc
inc
cmp
clc
std
fbld
sbb
fistp
repz
jle
in
icebp
lods
mov
sbb
aam
(bad)
mov
jmp
out
jg
repnz
pusha
fild
jg
jg
outs
jmp
sti
xlat
adc
(bad)
push
repz
fcomip
(bad)
sub
xor
xor
leave
outs
or
stc
sbb
xchg
in
scas
daa
std
data16
sar
arpl
xlat
and
aas
shl
inc
pop
or
aas
test
div
push
cmp
sub
and
outs
xor
lds
paddd
cld
xor
cmp
outs
scas
jge
mov
mov
inc
call
jg
mov
lds
rcr
stc
sub
(bad)
scas
gs
sbb
fcmovnb
pop
mov
cld
jne
pop
or
leave
js
sbb
dec
mov
test
mov
jmp
ss
call
ds
jg
in
(bad)
cmp
repz
sub
daa
ins
call
mov
sti
push
mov
(bad)
jg
fisttp
mov
jmp
push
pop
and
mov
repnz
adc
cmp
adc
jg
iret
xlat
pop
cmps
jecxz
clc
mov
sub
xor
arpl
(bad)
pop
iret
jecxz
xlat
lods
jle
in
inc
inc
sahf
aas
inc
icebp
xchg
icebp
mov
and
repnz
mov
cmc
jnp
(bad)
mov
or
jg
loope
sbb
jl
das
repnz
aaa
sar
jg
in
dec
(bad)
aad
(bad)
(bad)
cmp
adc
mov
dec
xchg
xchg
jle
icebp
call
mov
sti
mov
repz
shl
dec
inc
xchg
mov
xchg
pop
daa
pop
mov
(bad)
(bad)
lods
gs
out
sub
aas
push
cli
cld
push
mov
mov
xchg
dec
aaa
call
rcl
call
outs
clc
fnstenv
xchg
loop
loopne
cld
neg
shl
loopne
shr
pop
mov
call
in
outs
mov
data16
cld
call
jl
cmp
fisttp
std
lock
rcr
mov
hlt
push
ret
aas
(bad)
(bad)
(bad)
pop
dec
pop
rcl
jg
jmp
lock
call
iret
jmp
movs
(bad)
fcom
mov
mov
add
or
inc
lock
(bad)
loopne
pusha
(bad)
dec
mov
(bad)
pop
mov
cld
mov
sbb
out
cld
xor
or
mov
icebp
(bad)
jnp
pop
sar
fbstp
std
cmp
jmp
dec
jmp
(bad)
test
mov
mov
cmp
pop
sub
jl
pop
out
xlat
fsubrp
jae
(bad)
mov
xchg
inc
dec
jle
jl
adc
std
sbb
lock
(bad)
xlat
jg
movs
cmps
repz
jle
outs
outs
hlt
repz
cdq
fild
sub
cld
ja
jg
hlt
fucomi
movs
clc
cld
jne
out
sbb
scas
data16
sbb
dec
cld
jne
jle
jno
mov
loope
in
call
aad
jg
aad
jae
(bad)
jg
std
ins
rcr
lods
push
cld
and
in
call
(bad)
call
aaa
icebp
ret
pop
inc
hlt
sbb
sbb
test
ja
jl
sbb
stos
clc
enter
inc
hlt
xchg
jl
out
test
xor
stc
pop
jo
mov
out
movs
cli
sbb
leave
cld
ja
sbb
loope
dec
aaa
sar
cwde
(bad)
pop
hlt
test
(bad)
fwait
sbb
aas
inc
out
pop
enter
movs
cmps
sbb
(bad)
mov
mov
ins
fcomip
prefetch
or
repz
mov
iret
pop
dec
out
or
cld
jmp
xlat
(bad)
dec
into
(bad)
mov
das
out
push
cmp
ja
icebp
stc
cld
xor
dec
jg
xchg
pop
push
mov
fisttp
icebp
iret
lea
call
push
push
lea
scas
lock
imul
les
dec
pop
dec
cmp
jmp
test
stc
sub
mov
(bad)
stc
std
mov
mov
sar
fucomip
mov
cli
out
jo
lods
aaa
add
mov
add
inc
stos
(bad)
sbb
pop
fcom
mov
ja
pop
jmp
sar
mov
(bad)
dec
mov
push
jle
stos
jmp
inc
aas
das
adc
jle
fs
jmp
fistp
imul
mov
push
push
popf
cmp
mov
scas
(bad)
jp
(bad)
shr
xor
mov
icebp
jg
xlat
idiv
and
fadd
retf
pop
sti
(bad)
xlat
push
shl
push
sub
scas
push
jge
scas
call
lahf
xor
stc
scas
mov
fistp
movs
jg
sahf
xchg
mov
dec
cmp
test
sahf
jmp
and
icebp
into
pop
inc
cld
sub
fist
(bad)
(bad)
dec
int
cld
xor
scas
push
jle
popf
cmp
or
push
adc
dec
lock
ret
das
push
cli
mov
and
and
lods
(bad)
(bad)
jge
lahf
aaa
hlt
lahf
jo
(bad)
retf
iret
std
(bad)
repz
add
mov
in
inc
mov
scas
inc
je
hlt
aaa
in
mov
(bad)
jmp
dec
std
mov
xor
(bad)
imul
leave
outs
(bad)
adc
hlt
stc
not
pop
sbb
jmp
cli
(bad)
clc
sbb
outs
(bad)
fsubrp
and
(bad)
test
stc
(bad)
mov
jnp
xchg
(bad)
xchg
pop
seta
lds
jg
cmc
mov
jg
out
fdivr
repnz
pop
std
lea
jecxz
sbb
pop
(bad)
(bad)
xchg
push
sahf
adc
add
jmp
sti
pop
dec
xor
in
inc
sti
jb
mov
loop
in
inc
movsx
pop
(bad)
mov
div
(bad)
ja
fimul
(bad)
(bad)
jmp
sti
popa
(bad)
scas
in
jl
mov
xchg
setae
ret
repnz
xchg
rcr
(bad)
(bad)
cmp
psubw
cli
neg
clc
and
loop
inc
lahf
fwait
jl
repnz
lahf
push
dec
mov
sbb
outs
dec
mul
mov
xchg
(bad)
mov
jno
aas
rcl
mov
jge
pop
loop
mov
pop
std
mov
sub
mov
or
(bad)
ss
ja
cld
(bad)
out
jmp
cmp
dec
mov
dec
sti
mov
pop
out
outs
loopne
std
in
mov
xor
xor
test
imul
sti
mov
das
loop
pop
scas
stc
mov
lods
pop
idiv
(bad)
dec
fstp
xor
loop
iret
std
dec
xchg
out
add
fistp
cld
repz
sar
loop
cld
dec
mov
sbb
jl
mov
aaa
hlt
jmp
out
repz
lods
jnp
jmp
jae
outs
repnz
(bad)
out
sti
mov
pop
std
cmc
loop
mov
jmp
daa
cmp
xchg
(bad)
ficomp
jge
mov
jp
std
push
call
jbe
loopne
loope
js
push
int
frstor
jle
repnz
(bad)
pop
loop
jae
aaa
in
push
(bad)
pop
push
cli
sti
(bad)
cld
ret
mul
and
call
pop
dec
cld
jne
idiv
daa
push
jg
idiv
scas
loop
mov
sub
fstp
ret
sti
aaa
clc
sti
pop
out
popf
jae
call
push
xor
(bad)
clc
sti
fistp
dec
mov
(bad)
inc
repnz
fcmovnbe
fistp
retf
and
fucomi
test
pop
nop
jle
(bad)
div
call
xor
sti
enter
stc
pop
(bad)
and
inc
pop
pusha
scas
iret
fstp
iret
pop
adc
inc
scas
fadd
mov
pop
(bad)
lds
push
inc
out
jae
mov
cli
sti
(bad)
cld
sub
xchg
(bad)
call
pop
cwde
iret
pop
out
add
pop
ret
push
out
icebp
xlat
dec
mov
jg
out
fwait
stc
stc
xlat
sbb
(bad)
in
mov
out
dec
fadd
mov
mov
sahf
lahf
fist
pop
xor
test
ds
int3
sub
ficomp
out
out
into
out
ret
pop
int
fild
xchg
outs
(bad)
sbb
mov
js
popf
pop
jg
sti
inc
jnp
add
clc
sti
(bad)
test
pop
(bad)
mov
jle
xchg
push
jge
dec
ds
repz
es
xor
sub
mov
addr16
icebp
xchg
stc
cli
pop
xchg
ds
in
xor
mov
mov
mov
std
std
out
add
stc
in
pushf
loope
cli
or
(bad)
mov
fs
idiv
mov
mov
aaa
push
pop
sbb
cmp
xchg
out
call
jle
lock
fisttp
icebp
add
aas
shl
ds
int3
(bad)
mov
ins
fbstp
pop
and
mov
(bad)
icebp
std
jnp
mov
pop
shl
jg
retf
repz
scas
(bad)
cmp
mov
pop
aas
dec
mov
scas
shl
outs
mov
retf
jl
xor
fisttp
jns
clc
jge
jecxz
stos
in
cld
or
jg
(bad)
repz
repz
enter
in
clc
sbb
cmp
xchg
outs
adc
sbb
jg
push
cmp
daa
mov
jg
mov
jae
pop
jle
out
lock
das
aam
sbb
mov
cmp
cdq
inc
dec
out
push
fbld
std
fidivr
js
loopne
pop
jg
cli
std
mov
icebp
mov
sti
mov
jle
jge
jmp
or
ja
jno
jns
sar
mov
daa
repz
repnz
jb
rcr
in
cmc
(bad)
outs
stos
repz
adc
das
and
jecxz
lahf
int3
scas
jl
clc
out
scas
sar
sub
setno
jnp
pop
sub
cmps
fisttp
cmp
or
or
daa
cld
popa
in
in
mov
push
clc
or
std
scas
pop
clc
jg
repnz
lock
das
retf
cmp
aas
inc
jle
std
xchg
mov
(bad)
sbb
cmc
lds
clc
pusha
jle
repnz
sbb
enter
in
or
cmp
inc
out
rcr
mov
call
mov
(bad)
ds
icebp
fist
gs
sub
hlt
repnz
in
popa
cld
sar
pop
jle
inc
(bad)
cld
xor
inc
pop
jmp
pop
sbb
std
arpl
fisttp
push
bnd
hlt
nop
js
hlt
xchg
test
js
ret
pusha
mov
pop
cld
outs
fcomp
aaa
(bad)
aad
test
std
xchg
cmp
stc
(bad)
out
gs
(bad)
dec
inc
fisttp
jg
adc
addr16
out
scas
push
jl
jmp
rcl
call
lods
mov
rcr
jle
mov
and
enter
cmp
(bad)
pop
pop
push
call
mov
xor
add
pop
mov
fwait
xchg
xchg
mov
idiv
pop
out
stc
int
mov
adc
imul
cdq
fdiv
mov
xor
pop
jecxz
mov
test
jg
mov
push
hlt
out
jg
stc
add
sub
ror
gs
bound
mov
cwde
pop
ret
bswap
xlat
sahf
sub
inc
mov
out
(bad)
icebp
or
mov
mov
cld
fwait
pop
jg
jg
pop
out
clc
sbb
js
mov
lds
cld
and
jmp
ins
popa
icebp
adc
dec
jl
push
xor
repnz
in
movs
scas
aas
les
lods
xchg
pop
das
mov
jg
test
pop
out
jle
jl
(bad)
stc
dec
icebp
cdq
(bad)
bound
adc
(bad)
mov
std
imul
pop
in
sbb
outs
cld
xchg
mov
neg
sbb
xchg
outs
daa
lahf
push
in
out
arpl
out
mov
cli
ins
repz
aas
mov
cmp
lods
clc
inc
data16
jmp
inc
hlt
lea
scas
icebp
inc
mov
in
inc
push
ds
shl
arpl
aas
into
repnz
(bad)
popf
(bad)
jmp
mov
xchg
hlt
xlat
jle
repnz
inc
dec
jle
movs
cmps
clc
cmp
(bad)
std
jno
push
(bad)
xlat
pop
sti
and
(bad)
cmc
mov
ds
cld
xor
push
cld
jl
fcmovnb
add
aas
loopne
stc
pop
ret
das
jg
mov
test
sbb
and
lahf
lock
hlt
adc
icebp
int
retf
out
(bad)
stc
add
cmc
out
xor
pop
jecxz
cwde
lock
lods
inc
fwait
jg
mov
ret
icebp
xchg
xchg
jg
retf
ja
mov
and
inc
jge
scas
push
cli
call
xchg
das
clc
stos
jne
adc
cld
jno
ds
xchg
or
xchg
jmp
jle
ds
(bad)
arpl
rol
retf
es
jmp
mov
and
neg
(bad)
mov
jg
aad
cs
fs
pop
xchg
(bad)
mov
fdivr
enter
pop
or
mov
arpl
pop
mul
sbb
mov
std
xor
xlat
fisttp
icebp
lahf
mov
mov
inc
fstp
cmp
jge
loop
call
call
adc
push
sti
mov
sbb
fimul
repz
fsin
xor
mov
repnz
nop
js
hlt
std
mov
(bad)
mov
mov
jno
leave
int
in
add
(bad)
das
lahf
jle
pusha
cld
cmp
jg
jmp
cmc
stos
int3
fild
clc
dec
(bad)
xor
out
sbb
das
hlt
push
jg
clc
pop
hlt
xchg
pop
dec
or
mov
cmp
ins
loop
repz
icebp
mov
out
retf
mov
(bad)
in
push
jle
fldenv
ret
pop
jg
lds
cmc
(bad)
jecxz
and
es
fs
pushf
(bad)
cs
ja
pop
aas
lahf
push
mov
movs
std
pop
movs
in
jge
jbe
jae
sahf
mov
mov
jmp
fwait
std
ins
xor
out
out
pop
(bad)
idiv
xchg
mov
dec
inc
cdq
xsaves
fnstsw
pop
out
cld
cmp
sti
ds
jle
repnz
mov
(bad)
pop
jl
hlt
ret
pop
movs
lock
retf
add
popa
hlt
mov
pop
jecxz
std
in
lahf
xchg
out
outs
jl
jl
(bad)
pop
in
xchg
retf
daa
cwde
js
in
pop
cwde
lahf
repnz
push
xchg
das
xor
clc
fdivr
mov
xchg
(bad)
out
sti
pop
loopne
xchg
lahf
jnp
js
(bad)
sti
into
pop
cmp
iret
outs
inc
loopne
loop
mov
jle
in
(bad)
jne
push
xchg
push
call
xlat
stc
pop
rol
jl
cmp
in
mov
xchg
pop
mov
adc
(bad)
fdivr
ss
aad
arpl
icebp
jns
aas
mul
fcomi
das
(bad)
call
out
dec
cmp
cli
imul
lea
arpl
shufps
out
scas
aas
je
cmp
jge
repnz
inc
aas
sbb
push
mov
(bad)
push
cdq
jl
mov
fbld
mov
xlat
out
jnp
sti
out
sub
pop
out
lahf
inc
push
pushf
mov
sub
(bad)
or
inc
pop
and
(bad)
(bad)
dec
and
sub
pop
mov
stc
cmp
cmp
outs
pop
ss
mov
sahf
cmc
in
cmps
hlt
adc
sbb
adc
std
lea
cmp
loopne
stc
cmps
lahf
pop
js
jg
inc
(bad)
dec
das
int3
outs
jl
loopne
js
and
dec
repz
jnp
hlt
(bad)
fisubr
outs
mov
mov
mov
leave
(bad)
je
aaa
dec
jl
loopne
stc
ss
xchg
hlt
out
hlt
and
out
daa
adc
std
push
lahf
lahf
mov
cmp
(bad)
outs
or
fnsetpm(287
inc
(bad)
div
out
cmp
adc
je
sbb
(bad)
stc
xlat
es
pop
jnp
mov
inc
bnd
pop
sti
aaa
xor
jns
scas
iret
(bad)
std
xchg
fwait
xlat
ret
dec
mov
lods
pop
cld
cmc
add
(bad)
cld
jg
idiv
inc
inc
out
and
rcr
repnz
jp
mov
(bad)
push
stc
sti
scas
sar
dec
jmp
lahf
lahf
jmp
and
jg
fadd
dec
sbb
int3
inc
fild
cli
pop
in
sti
pop
int
repz
sub
lahf
and
in
pop
cli
or
jg
loope
pop
std
cmp
dec
add
not
out
cmp
dec
rol
sub
jmp
sbb
rcl
(bad)
in
dec
cmp
inc
jmp
leave
jp
retf
push
cwde
inc
mov
jne
cs
mov
jmp
mov
aas
jg
push
out
(bad)
xor
and
jns
mov
mov
pop
ret
lahf
fmul
outs
leave
ja
clc
push
cld
cmp
aas
loope
test
pop
(bad)
push
mov
hlt
outs
lock
std
cmc
inc
daa
aas
mov
hlt
xor
fcmovnbe
(bad)
shl
cli
jecxz
lock
xchg
das
cdq
mov
outs
loop
arpl
dec
(bad)
gs
jle
stc
dec
ret
out
pop
pop
xor
add
popf
mov
div
jge
aas
(bad)
xor
sar
out
mov
inc
jg
ds
out
mov
ins
mov
arpl
out
push
(bad)
sbb
dec
repnz
(bad)
(bad)
mov
in
loop
xchg
jmp
dec
cld
sar
mov
(bad)
mov
jg
sahf
pop
(bad)
rcr
xchg
fbstp
pop
loope
fistp
(bad)
fs
lahf
call
adc
retf
fild
dec
lds
pop
and
xchg
mov
scas
call
jnp
out
loop
outs
hlt
dec
sbb
push
aas
ds
cmc
mov
inc
fsubp
aaa
add
mov
pop
fs
jnp
out
scas
cmps
mov
jg
std
or
jmp
(bad)
stc
xor
mov
pop
xchg
stc
adc
pop
dec
fnstenv
popa
cmp
jp
cld
mov
hlt
je
inc
xchg
das
jb
(bad)
psllw
mov
in
mov
daa
stc
rcl
jecxz
repnz
pop
and
xchg
jg
(bad)
clc
jno
fdivrp
add
ret
clc
jecxz
stos
mov
mov
cmp
pop
int3
jp
in
jmp
pop
inc
jl
stc
test
js
pop
jbe
lods
mov
xchg
in
mov
cmc
xlat
sub
loop
cwde
cld
inc
ja
jb
cld
loopne
ss
and
ins
cld
add
mov
jmp
stc
jmp
fmulp
cld
jge
jg
jg
cld
pop
mov
mov
test
cld
hlt
xlat
call
cmp
sar
fs
xchg
or
fbld
pop
(bad)
mov
call
out
ffreep
loop
cld
or
(bad)
test
inc
rcl
scas
adc
ss
pop
push
inc
inc
(bad)
mov
iret
fadd
out
cmp
js
aas
cli
sub
dec
jl
mov
sbb
add
mov
stc
ja
cli
(bad)
fbstp
sub
sbb
stc
mov
aas
mov
push
cli
push
repz
jmp
movs
fiadd
mov
pop
fbstp
cli
add
cmps
mov
sbb
hlt
xlat
push
(bad)
sbb
pop
int
lahf
clc
mov
aas
out
call
mov
dec
xor
out
sti
stc
push
das
add
sbb
ret
lds
lahf
ins
repnz
int
lahf
mov
jmp
mov
mov
sbb
dec
push
ffreep
jg
sti
in
and
aas
stc
cld
outs
loopne
pop
jp
js
repnz
sbb
cmp
ret
or
mov
sub
lahf
xor
nop
jle
jnp
mov
jnp
jmp
ret
mov
mov
mov
ds
mov
hlt
sar
dec
ins
mov
aad
jge
aas
sbb
icebp
xchg
(bad)
pop
inc
pop
test
daa
add
rol
imul
ins
repnz
fbld
jle
in
xchg
call
(bad)
clc
aaa
sub
jge
leave
fst
mov
and
call
dec
std
and
ds
js
shr
(bad)
out
or
jmp
mov
xor
sbb
push
call
daa
in
clc
mov
es
xchg
stc
xchg
js
mov
cs
pop
jge
mov
popa
in
repz
aaa
adc
ins
hlt
or
call
cld
jg
icebp
xor
(bad)
jg
cmp
cld
(bad)
fisttp
test
jno
jg
ds
into
xor
cli
jmp
retf
fistp
jg
fwait
iret
div
mov
pop
icebp
jl
hlt
cdq
pop
das
sbb
xor
outs
jl
inc
call
jg
mov
sahf
dec
(bad)
aad
scas
aaa
test
sub
mov
pop
cwde
lahf
jb
fbld
fnstsw
lahf
sbb
dec
cmp
cmc
loop
mov
inc
aas
enter
test
cdq
stc
jno
push
es
cld
out
sub
push
aas
enter
jmp
daa
cli
(bad)
in
aaa
out
(bad)
jmp
mov
in
ficom
dec
fdivrp
pop
in
jg
xchg
scas
mov
out
jg
stc
mov
in
mov
inc
pop
lahf
cmc
(bad)
and
and
jmp
mov
sub
pop
mov
pop
mov
inc
xchg
cmp
cld
xor
pop
ror
lods
out
mov
idiv
xor
cmps
shr
sub
aas
(bad)
cli
rcr
jge
outs
stc
or
xchg
xor
idiv
cmp
pop
cld
retf
sbb
mov
das
cld
push
cld
cmp
sbb
mov
xor
in
ins
out
loop
stc
pop
in
xchg
int3
out
into
repnz
cmp
pop
addr16
jnp
(bad)
sar
and
fild
std
jmp
jecxz
clc
cmp
jmp
repz
adc
mov
jle
cmp
in
lahf
sbb
push
cld
outs
cld
push
clc
or
jle
sub
clc
cmpxchg
(bad)
sahf
cld
inc
cmp
jecxz
(bad)
cmp
(bad)
call
cmp
cld
sub
aas
bound
clc
std
jmp
call
std
popa
cld
and
cs
outs
mov
cmps
repz
jp
fs
fimul
hlt
test
dec
fisttp
stc
xchg
out
iret
mov
mov
nop
jl
mov
das
pushf
ds
out
mov
or
(bad)
call
repz
jle
out
clc
jg
xchg
mov
cdq
shl
mov
xor
jmp
loope
jns
xchg
xor
jg
icebp
xor
(bad)
pop
mov
(bad)
fist
out
(bad)
cmp
mov
loop
movs
sub
(bad)
(bad)
clc
stc
int
xchg
out
out
loopne
or
imul
cli
ds
mov
cli
sti
imul
ja
std
mov
or
enter
sti
imul
and
jnp
in
lock
das
jecxz
sub
mov
push
jg
clc
cdq
cld
fsubr
pop
cld
cld
xlat
pop
jge
stc
stc
mov
daa
xchg
lahf
xor
repz
outs
movs
iret
xor
and
sub
lea
jmp
pop
hlt
cmp
(bad)
cli
int
fbld
call
(bad)
mov
mov
lahf
dec
cmp
stc
lods
xchg
in
lea
(bad)
pop
(bad)
xchg
js
loop
shr
icebp
lds
add
pop
fwait
(bad)
stc
scas
lds
xchg
iret
sub
dec
idiv
clc
in
adc
call
lods
out
push
imul
jl
out
mul
sar
cmp
addr16
fnclex
addr16
xor
mov
fst
jg
jmp
aas
aas
mov
fst
jo
in
lahf
pop
push
and
test
out
or
scas
fwait
(bad)
jg
out
into
mov
out
scas
scas
clc
stc
(bad)
mov
adc
cmps
sar
loopne
(bad)
pextrw
mov
pop
xchg
push
jg
jbe
cmc
jge
lahf
xor
aas
push
pop
sub
jg
xchg
shl
mov
int3
jp
rcr
cli
(bad)
stc
dec
out
outs
inc
jg
out
mov
in
call
dec
cli
scas
aam
dec
cld
pop
mov
mov
add
int3
fmul
rcr
out
std
(bad)
pop
jge
scas
xor
sbb
pop
stos
aas
les
cwde
lahf
lea
(bad)
mov
mov
mov
daa
(bad)
pop
popf
(bad)
je
sub
or
gs
in
test
jmp
ret
clc
xchg
outs
fistp
mov
imul
sar
mov
js
pop
push
clc
jg
lea
mov
pop
(bad)
sti
test
lahf
mov
imul
fbstp
and
(bad)
cli
hlt
mov
mov
addr16
icebp
test
pop
cld
or
lahf
dec
jg
cld
in
sti
pop
(bad)
sahf
in
(bad)
icebp
lahf
inc
jle
psubq
pop
clc
iret
lock
lods
dec
jecxz
out
dec
sti
ja
das
jmp
mov
fistp
lock
sar
(bad)
push
(bad)
sti
data16
lahf
cmp
jg
in
ret
pop
gs
mov
lea
mov
(bad)
inc
jecxz
mov
clc
cs
pop
lea
fwait
in
int
mov
imul
cs
out
loop
loope
mov
add
sub
iret
lods
scas
or
(bad)
(bad)
add
xchg
js
hlt
pop
hlt
mov
dec
mov
fcmovb
push
hlt
cdq
mov
pop
jmp
rcr
stc
xor
jg
call
cld
mul
dec
aas
call
(bad)
das
clc
out
mov
jle
test
clc
ja
cmc
xchg
mov
jg
mov
not
aas
xchg
dec
xchg
outs
(bad)
imul
cld
dec
clc
jnp
unpckhps
clc
outs
pop
stc
cli
pop
push
fistp
repnz
cld
imul
mov
loop
sub
(bad)
aas
xor
mov
mov
and
jg
icebp
scas
les
stos
dec
mov
call
sti
repnz
fdiv
push
fdivrp
inc
stc
stc
ja
jle
ds
ins
jle
in
popf
mov
add
arpl
inc
and
xchg
aaa
cli
push
out
(bad)
icebp
(bad)
mov
rcr
mov
fistp
jl
(bad)
das
and
sbb
pop
(bad)
scas
loope
scas
adc
stc
fsubp
fwait
(bad)
sbb
mov
pop
inc
jecxz
stos
div
scas
push
jl
push
ret
std
popf
(bad)
cdq
ror
jmp
push
pop
gs
mov
cmps
repnz
lahf
in
xchg
pop
arpl
fbstp
jmp
bound
icebp
cmp
pop
cli
cld
outs
mov
call
xor
jno
out
mov
les
mov
jecxz
dec
pop
and
data16
(bad)
stc
cmps
mov
iret
pop
addr16
mov
push
fs
sub
mov
ins
std
fcmovnbe
jmp
out
rcr
idiv
into
sti
push
mov
cld
and
imul
leave
scas
sbb
clc
ret
jg
out
push
call
jle
std
pop
call
jg
scas
xlat
out
xchg
(bad)
sbb
push
in
call
jecxz
mov
cmp
hlt
clc
stos
mov
cmc
stc
add
aas
xlat
mov
jg
(bad)
jg
repnz
fsubr
jecxz
mov
lods
jle
mov
pusha
(bad)
sub
sti
(bad)
fbstp
stc
stos
push
fdivr
std
sbb
retf
scas
cs
sub
fwait
cmc
jnp
iret
rcr
clc
cmp
pop
sar
xchg
sbb
dec
rcr
clc
sbb
pop
cmp
into
xchg
jl
repz
push
test
loopne
repz
call
jg
cld
mov
aaa
cld
add
mov
std
jne
outs
inc
aas
imul
fistp
jg
jne
(bad)
xchg
das
xchg
fbstp
lock
mov
stos
loope
add
into
scas
data16
xchg
std
mov
(bad)
scas
stc
sbb
out
into
jg
cmc
xor
adc
div
neg
jg
stc
ja
adc
or
(bad)
ja
fistp
int3
inc
or
call
sbb
std
fldln2
out
scas
jmp
cmp
js
mov
ds
mov
in
pop
call
pop
(bad)
outs
cdq
cli
and
mov
loope
mov
dec
mov
xor
loop
stc
cld
cli
push
pop
std
push
loop
in
int
out
cmps
(bad)
mov
fiadd
aas
sbb
out
fsub
fistp
cli
ja
dec
jno
int3
cld
test
push
xlat
jmp
ds
xor
mov
call
jle
jle
in
int
inc
aas
sbb
arpl
fcomip
push
int3
jl
cli
into
jmp
imul
xor
int
cmp
mov
fs
pop
inc
in
int3
sti
data16
lock
(bad)
std
dec
push
stc
xchg
jle
cld
in
mov
pop
dec
cmp
cli
out
ret
loope
mov
fdivrp
call
int
iret
lock
shl
call
test
mov
fsubr
and
out
sti
push
ds
fild
fwait
jg
dec
or
jbe
push
ret
jg
pop
add
enter
(bad)
jl
imul
fdiv
sbb
pop
ret
cld
cwde
stc
cli
(bad)
outs
xchg
scas
stc
scas
(bad)
in
sti
aaa
mov
xchg
std
fcmovnbe
and
mul
sti
scas
mov
or
jecxz
arpl
vpandn
outs
arpl
scas
nop
pop
xor
cmp
push
add
mov
(bad)
pop
inc
icebp
xchg
jecxz
and
enter
das
ret
pop
or
std
icebp
push
mov
pop
and
dec
jle
ja
pop
std
sbb
sbb
call
daa
inc
mov
(bad)
ficomp
jle
dec
xchg
pop
add
mov
fisttp
fild
(bad)
mov
cld
stc
xchg
cmc
push
lahf
mov
mov
fistp
enter
idiv
shl
adc
gs
fwait
clc
sar
adc
cmp
in
xchg
cli
test
cld
xlat
push
pop
stc
or
push
in
mov
out
push
js
mov
out
mov
push
jl
clc
stos
sub
cs
arpl
dec
arpl
pushf
cmp
outs
(bad)
arpl
mov
pop
mov
jge
pop
fwait
stc
or
jns
push
je
imul
jg
cmp
cmp
shl
pop
adc
jl
jp
icebp
xor
mov
mov
pushf
jl
std
out
aaa
clc
(bad)
xlat
mov
out
repnz
aas
ds
js
(bad)
mov
ficomp
retf
outs
call
ret
sub
call
lea
jmp
(bad)
mov
fwait
cdq
aas
xlat
ds
add
call
std
sti
adc
cmp
cmps
imul
mov
out
sar
inc
stc
xor
push
jl
jge
ud0
movq
fild
sti
out
retf
clc
cmp
call
clc
mov
adc
sub
aas
inc
mov
lock
std
jae
(bad)
mov
xchg
rol
(bad)
outs
mov
xchg
inc
jle
jl
dec
pop
hlt
std
sbb
jle
call
jg
mov
into
aas
ss
xchg
shl
jnp
pop
repnz
sti
cs
stc
pop
call
push
jecxz
cli
sti
ja
loopne
mov
outs
ja
int
(bad)
ja
in
inc
dec
enter
fistp
std
addr16
sub
daa
lea
cmp
mov
sti
hlt
aaa
pop
stc
xor
in
scas
fistp
loop
fistp
les
(bad)
loope
xor
xor
arpl
popa
es
data16
gs
jle
mov
mov
push
mov
jnp
cmp
jle
cld
cmp
pop
js
std
fistp
dec
outs
icebp
mov
(bad)
sub
xchg
jle
cli
sti
daa
enter
mov
idiv
cmp
std
int
pop
(bad)
jecxz
out
fdivrp
mov
xchg
mov
cld
arpl
outs
jg
sar
sub
pusha
clc
add
push
inc
outs
jl
cmc
outs
lock
mov
cli
idiv
cwde
(bad)
mov
std
fcmovbe
out
pop
(bad)
icebp
cdq
(bad)
(bad)
aad
mov
mov
neg
push
js
jmp
jge
mov
div
fcomip
lock
int
sti
mov
das
pop
out
je
call
repz
sub
sti
cmp
or
cli
(bad)
mov
jmp
dec
jecxz
mov
std
push
cld
jle
jmp
(bad)
pop
cmp
out
pop
push
cld
(bad)
sbb
out
scas
lock
jg
scas
push
sbb
xor
das
jl
loopne
hlt
xchg
cmc
inc
xchg
pop
rcr
(bad)
imul
das
cmps
icebp
leave
jp
fsubr
dec
cdq
lahf
adc
jmp
nop
push
jg
jmp
xchg
cdq
out
mov
jg
(bad)
push
jp
rep
in
out
inc
rdpmc
inc
mov
idiv
xor
ja
pop
cli
push
hlt
sti
js
aaa
mov
rcl
sbb
out
rol
repz
jnp
jmp
data16
jne
addr16
in
xor
out
scas
repnz
mov
inc
lahf
jg
ret
(bad)
loopne
clc
adc
iret
xchg
test
cdq
xchg
mov
dec
ficomp
push
sar
out
push
sti
inc
cli
sti
int
(bad)
push
cmp
out
loope
mov
jle
lods
adc
repz
or
repnz
pop
rcr
arpl
repz
cmp
mov
xor
mov
js
fmulp
out
outs
shr
cld
mov
jg
cli
add
jle
cld
ins
in
scas
sar
inc
pop
cld
out
jbe
mov
jg
(bad)
repz
mov
pmuludq
neg
push
into
jl
mul
mov
or
mov
jmp
dec
sar
cwde
ds
repnz
aam
loopne
or
sub
and
mov
test
jg
ds
test
outs
leave
cld
cld
or
or
aam
mov
jmp
push
dec
jecxz
inc
jg
pop
mov
sbb
or
jg
fisub
sbb
es
or
loopne
repz
jmp
jle
jmp
push
cld
inc
std
sub
in
mov
fbld
cdq
in
out
daa
js
jge
clc
ins
xchg
fistp
mov
movs
(bad)
mov
and
repz
xor
sbb
jg
(bad)
sbb
jg
ja
mov
mov
inc
cmps
pop
xlat
jg
jns
cli
repz
shl
out
mov
add
add
and
lahf
inc
jg
push
mov
mov
sar
aam
pop
jge
jmp
jg
out
mov
xor
aas
push
cld
fistp
mov
std
scas
iret
lahf
pop
jg
sar
jle
cld
daa
and
clc
retf
jmp
scas
mov
xchg
cmp
push
std
mov
stc
jmp
sahf
jg
into
pop
call
or
jns
(bad)
fwait
repz
mov
cmp
add
hlt
cmps
rcl
mov
das
icebp
xchg
pop
pop
xor
dec
cld
aad
ret
mov
mov
(bad)
jle
(bad)
pop
jmp
jecxz
cld
or
xchg
cmps
ds
leave
(bad)
std
push
mov
(bad)
stc
fst
inc
out
out
scas
out
xor
shl
repz
retf
mov
pop
pop
xor
clc
cld
xor
sbb
out
daa
adc
daa
mov
loop
test
xchg
xchg
(bad)
(bad)
call
aaa
leave
aad
nop
inc
pop
je
and
out
xchg
dec
cmc
cdq
repz
(bad)
cli
ret
xlat
addr16
dec
(bad)
loop
mov
sub
sbb
dec
call
mov
jmp
mov
or
int
inc
jnp
clc
mov
inc
test
(bad)
(bad)
in
hlt
xchg
xchg
das
pop
pop
sbb
sbb
cmp
lods
stos
pop
int
mov
stc
dec
pop
jg
dec
fist
fucomip
inc
std
std
cmp
out
push
mul
lods
sub
aas
std
mov
icebp
not
fild
clc
clc
cli
sbb
jmp
adc
ffreep
mov
add
lea
mov
repz
(bad)
sub
out
out
aas
xor
(bad)
std
mov
aaa
or
(bad)
clc
ret
(bad)
aas
cmp
jecxz
loopne
xchg
push
xchg
out
dec
cld
test
or
cmp
push
test
out
in
out
fild
sahf
mov
pop
mov
stc
mov
movs
ret
std
test
(bad)
fistp
mov
xchg
clc
cmp
(bad)
imul
icebp
mov
xlat
stc
das
inc
push
inc
call
aad
push
jle
popa
(bad)
sub
fs
jmp
cld
(bad)
mov
ss
dec
cmp
std
sub
cmp
call
mov
(bad)
hlt
repz
imul
outs
loopne
jg
fcomip
lock
(bad)
ds
pop
cld
test
loope
mov
dec
in
mul
cs
out
es
inc
outs
bound
pop
(bad)
and
call
std
ds
or
xlat
dec
call
(bad)
aaa
(bad)
sahf
mov
mov
(bad)
pop
repnz
arpl
fucomi
sbb
cmp
mul
xor
xor
cli
dec
(bad)
jg
xlat
sti
enter
cld
push
jo
stc
ja
jl
add
in
lock
add
fist
(bad)
mov
aaa
out
cmp
icebp
dec
(bad)
adc
stc
xlat
add
js
mov
sbb
xchg
neg
in
and
pusha
in
cld
add
mov
clc
mov
mov
sahf
pop
mov
(bad)
call
sbb
out
call
cld
pusha
pop
pop
cwde
clc
dec
in
mov
repnz
or
pop
mov
retf
fcomip
mov
push
or
(bad)
clc
push
es
adc
jnp
(bad)
sti
mov
in
scas
(bad)
(bad)
mov
popa
cmps
std
mov
jg
retf
repz
sub
jg
(bad)
in
out
call
outs
mov
ja
jle
pushf
paddd
adc
cdq
pop
(bad)
jnp
scas
push
mov
aas
loope
sub
(bad)
cld
push
leave
mov
loop
shl
mov
clc
arpl
or
dec
(bad)
ja
stc
add
mov
movnti
jle
lock
gs
cld
xchg
(bad)
fild
cli
add
sbb
jle
push
repz
loop
adc
data16
loop
cld
mov
clc
js
cli
mov
sbb
mov
inc
(bad)
lock
pop
(bad)
cdq
mov
(bad)
inc
lahf
ds
outs
jno
sbb
sti
imul
jl
adc
sbb
mov
repnz
icebp
icebp
in
neg
lock
popf
out
and
jmp
cmp
scas
mov
pop
ds
fwait
pop
mov
jle
jg
mov
mov
out
jmp
vpshaq
les
das
scas
fisttp
mul
jl
stc
or
repnz
pop
cli
jg
or
icebp
xor
push
fisttp
leave
scas
call
cmp
shr
hlt
xor
ret
repz
in
mov
stc
ja
out
jmp
mov
test
push
jl
cld
neg
clc
stc
(bad)
push
in
sti
mov
xlat
lea
jg
cmc
test
cli
(bad)
(bad)
(bad)
shl
sbb
mov
jg
jle
mov
cmps
fist
fistp
sub
imul
inc
clc
jne
fwait
cld
in
fidivr
mov
jge
xor
xor
pop
add
(bad)
cdq
repz
push
xchg
iret
jg
xlat
fcmovne
dec
(bad)
xchg
int3
das
jg
scas
outs
pop
jo
(bad)
fnstcw
out
aas
push
mov
jl
hlt
xor
in
(bad)
(bad)
ins
jmp
jge
jl
hlt
test
mov
pop
loop
leave
(bad)
mov
fild
jl
dec
retf
imul
idiv
mov
sahf
add
fistp
xchg
div
loopne
cld
inc
pop
ficomp
fistp
mov
stc
pop
leave
cli
sbb
cli
scas
mov
repnz
(bad)
mov
retf
rcr
pop
cmp
fist
in
push
cli
sti
das
loop
sar
pop
mov
mov
mov
das
sub
pop
(bad)
out
xchg
cmp
jg
repz
call
repnz
jo
mov
or
out
ret
fnstcw
pop
icebp
fist
mov
cmp
sbb
mov
jle
fist
mov
(bad)
xor
(bad)
cld
mov
ret
xchg
hlt
std
mov
shl
(bad)
clc
push
mov
xchg
pop
out
pop
popa
clc
mov
or
psubw
(bad)
aaa
popa
jp
jge
sti
sub
imul
cld
xor
mov
imul
sub
stc
cwde
fist
imul
std
mov
rol
jmp
(bad)
loope
ret
cld
push
pop
call
(bad)
das
fs
and
xor
(bad)
push
sbb
mov
add
jmp
add
xor
jg
(bad)
call
test
dec
sahf
mov
std
std
outs
cmp
mov
clc
clc
cld
sub
mov
stc
std
jmp
jle
in
lahf
ret
mov
pop
cmp
out
mov
xchg
push
jg
(bad)
jg
pushf
pop
sti
mov
repz
stc
imul
cmp
mov
out
test
icebp
cld
scas
cmp
ret
lahf
add
scas
daa
stc
dec
cmp
jg
into
iret
pop
movs
(bad)
or
cld
lds
jl
adc
xor
sub
in
jle
outs
mov
cli
or
stos
enter
jp
outs
call
jg
hlt
cmp
lahf
sub
(bad)
(bad)
jp
repz
(bad)
xchg
out
fbld
cmp
pop
dec
pop
fistp
ja
adc
pop
addr16
das
mov
stc
imul
jmp
dec
ret
mov
std
pop
dec
lods
mov
cld
sbb
fisttp
cli
mov
enter
std
mov
cli
push
hlt
aad
dec
jecxz
cmp
icebp
mov
clc
sbb
stc
scas
addr16
(bad)
xchg
adc
cmp
pop
std
idiv
sbb
in
mov
iret
xlat
inc
std
mov
sti
or
pop
jno
retf
mov
jge
adc
push
lahf
inc
lahf
dec
cwde
lahf
jle
dec
aas
(bad)
lahf
sbb
in
fisttp
call
fstp
push
jns
in
cmp
(bad)
fcmovnbe
idiv
cs
(bad)
out
and
xchg
mov
cld
imul
inc
(bad)
call
mov
jmp
fild
jp
mov
(bad)
pop
shl
std
repz
jg
call
mov
(bad)
(bad)
(bad)
jg
fistp
call
mov
push
mov
lahf
std
sbb
pop
std
es
sti
jg
outs
(bad)
fcmovnu
jge
jg
sti
mov
mov
leave
scas
cmc
imul
hlt
jge
adc
(bad)
cld
pop
jg
fwait
sbb
call
(bad)
mov
icebp
out
lock
call
scas
jg
pop
jmp
lahf
icebp
(bad)
pop
ja
in
pop
jecxz
mov
or
adc
movs
mov
xor
ret
std
mov
mov
push
stos
jg
mov
imul
(bad)
(bad)
aas
dec
push
inc
mov
mov
js
mov
(bad)
jmp
std
loop
stc
jno
(bad)
and
std
cmp
(bad)
lahf
clc
fucomi
ficomp
(bad)
daa
jge
stc
outs
repnz
lahf
stc
fistp
std
jne
lea
loopne
dec
mov
xchg
jg
xor
(bad)
jg
aaa
ficomp
(bad)
jns
test
(bad)
pushf
(bad)
std
popf
push
jg
pop
jecxz
mov
inc
mov
jns
mov
std
sbb
fst
cmp
fwait
(bad)
jle
push
xchg
pop
and
pop
jecxz
dec
mov
lahf
std
fsubr
jg
out
mov
mov
xor
(bad)
xor
(bad)
out
dec
(bad)
push
jmp
jl
fucomi
iret
pop
inc
dec
imul
int
clc
push
jle
mov
inc
in
dec
call
idiv
cli
xor
pushf
(bad)
std
mov
xlat
les
pop
repz
cld
loopne
cld
push
jmp
std
pop
jle
jg
xlat
dec
jle
(bad)
in
xlat
cld
xor
xlat
clc
pop
jle
mov
test
std
cmp
js
imul
(bad)
xlat
clc
mov
xlat
dec
jle
pop
repnz
hlt
leave
lahf
(bad)
imul
hlt
sti
inc
jp
(bad)
outs
(bad)
imul
stc
imul
jecxz
jg
jecxz
fistp
cdq
(bad)
std
dec
jg
mov
jmp
cmc
add
xchg
(bad)
cmp
stc
xor
iret
jecxz
(bad)
ds
pop
ret
cmp
mov
pop
(bad)
sbb
push
shr
mov
rcr
or
imul
jecxz
scas
cmc
and
cs
out
std
sbb
(bad)
jle
fistp
ins
stc
jmp
jo
aas
in
clc
inc
jmp
out
(bad)
pop
std
jmp
jecxz
(bad)
pop
std
jmp
(bad)
jmp
sar
push
(bad)
jp
imul
aaa
(bad)
cmp
sti
das
jmp
(bad)
sbb
cmp
fsub
jg
xlat
js
call
call
dec
(bad)
sbb
scas
cmc
adc
mov
cld
xchg
add
(bad)
jecxz
jle
push
mov
jae
xlat
mov
pop
leave
pop
jg
scas
icebp
cwde
mov
inc
call
jmp
xor
jle
aas
dec
(bad)
cli
daa
imul
mov
mov
scas
jg
xlat
js
imul
mov
mov
add
(bad)
xlat
clc
scas
(bad)
push
jmp
adc
fucomip
xlat
clc
(bad)
pop
repz
sti
imul
mov
cwde
neg
sbb
(bad)
imul
jg
cld
cmc
iret
adc
outs
xchg
mov
scas
cmps
mov
movs
idiv
(bad)
xor
inc
hlt
icebp
scas
icebp
mov
dec
(bad)
in
jle
pop
jmp
(bad)
xor
mov
inc
pop
dec
pop
(bad)
fldenv
cmps
mov
stc
sar
jmp
out
mov
repz
sar
imul
out
lahf
and
std
mov
jg
imul
cmc
dec
(bad)
sbb
std
cmc
mov
push
repnz
mov
xor
jg
sti
mov
mov
jmp
(bad)
mov
mov
(bad)
pop
cld
xlat
mov
mov
dec
std
into
clc
jmp
movs
jns
call
mov
(bad)
xchg
mov
xlat
jge
mov
jecxz
loop
jle
fnstsw
out
cld
xor
std
imul
jg
(bad)
fucomp
int
or
icebp
pop
std
sbb
sbb
push
inc
stc
jge
mov
imul
jecxz
and
pop
in
mov
imul
mov
cld
int
in
mov
and
sub
pop
jecxz
pop
retf
sub
cli
(bad)
scas
icebp
sbb
mov
pop
lock
js
aaa
enter
jno
shr
repnz
fisttp
sbb
aas
arpl
mov
(bad)
rcr
mov
mov
mov
inc
stc
add
rol
outs
(bad)
imul
xchg
dec
comiss
(bad)
out
jg
sub
stos
pop
jecxz
stc
mov
scas
icebp
sti
cld
sbb
sub
fucomip
xlat
clc
jge
(bad)
hlt
xlat
(bad)
jne
mov
add
fucomip
xlat
xchg
mov
cli
imul
(bad)
cmc
movlps
sar
inc
jg
std
jne
retf
(bad)
hlt
xlat
fbstp
(bad)
stc
scas
icebp
pop
std
mov
js
hlt
scas
icebp
daa
pop
call
xor
cld
cmc
cli
xlat
test
(bad)
fucomip
iret
xchg
mov
icebp
inc
std
in
xchg
retf
pop
jecxz
cli
stos
int
mov
imul
jg
shl
cld
rcr
mov
aas
lock
clc
cmp
out
outs
xor
jne
fwait
shr
std
xor
das
sti
fcmovne
pop
mov
std
sbb
fbld
(bad)
fwait
(bad)
fidivr
scas
icebp
imul
repnz
fisttp
std
dec
mov
push
mov
jg
scas
icebp
xor
mov
jmp
std
xor
mov
aas
pop
out
jg
scas
mov
dec
jg
(bad)
jmp
stc
mov
(bad)
sbb
scas
icebp
out
and
jmp
es
fcomip
sub
mov
call
jg
scas
icebp
ja
jg
jge
(bad)
std
xor
neg
xchg
mov
cmc
scas
icebp
push
(bad)
sbb
add
jmp
sti
jne
(bad)
sbb
scas
sar
cli
jne
mov
sbb
ja
in
(bad)
xlat
sbb
test
iret
in
fucomip
xlat
jns
imul
mov
jg
mov
cld
fnstsw
enter
mov
call
sti
jg
aas
loopne
xor
std
aad
xlat
outs
hlt
inc
inc
sbb
inc
mov
mov
imul
ja
cld
cmc
cwde
cli
sti
daa
jg
fild
(bad)
xlat
(bad)
addr16
fucomip
popf
cld
cmc
sbb
xor
jle
mov
ror
enter
std
cmc
scas
(bad)
sbb
das
xchg
mov
mov
mov
jne
mov
cld
inc
jg
ret
mov
dec
xchg
mov
jmp
xlat
sbb
xchg
push
mov
cld
jnp
fistp
sub
neg
fdiv
xlat
loop
jg
xchg
adc
daa
jg
jg
xchg
mov
dec
retf
jg
aas
call
stc
repz
aas
jmp
repz
aas
stc
inc
mov
loop
(bad)
call
repnz
jmp
iret
jge
call
fnstsw
lahf
mov
cld
call
and
das
jg
ja
ins
sbb
mov
mov
mov
(bad)
and
clc
clc
or
push
idiv
lahf
cld
call
lahf
clc
nop
add
cmc
(bad)
lods
cld
lods
dec
fstp
aas
pop
enter
hlt
pop
in
or
out
lahf
cmc
fidivr
pop
ficom
cmp
pop
xor
stc
(bad)
jp
test
xor
rcl
fmul
fsub
pop
xor
jg
sti
imul
hlt
(bad)
imul
aas
ds
stc
pop
pusha
retf
fmul
and
jmp
mov
pop
cli
std
jnp
jae
and
movs
dec
cmps
or
sbb
aas
jmp
cli
(bad)
cmp
cdq
adc
inc
test
mov
(bad)
hlt
lahf
in
inc
mov
mov
ins
jnp
ret
mov
pop
jle
jg
xlat
push
call
sub
cld
leave
fucomip
jge
arpl
inc
scas
lea
cld
(bad)
mov
(bad)
xchg
shl
imul
imul
jg
fcomip
xlat
cld
or
pop
fdivr
xor
in
xlat
clc
jmp
xor
mov
std
daa
jg
sbb
sar
sbb
out
mov
icebp
mov
sbb
sbb
test
(bad)
div
jg
aaa
(bad)
test
repz
out
jg
(bad)
sti
pop
call
lock
xlat
pop
cld
imul
cli
cmp
mov
imul
cld
cmp
(bad)
pop
imul
fnstsw
dec
cld
pop
push
jge
das
call
xor
(bad)
outs
xor
(bad)
mov
jg
imul
cmp
pop
jecxz
cld
mov
jmp
(bad)
cld
xlat
ds
xor
stc
scas
std
fwait
call
pop
std
cmp
icebp
imul
mov
xlat
(bad)
xor
clc
jne
out
pop
sti
jg
ja
adc
imul
cmp
repnz
repz
(bad)
mov
adc
jl
cld
scas
xchg
pop
repz
mov
jle
dec
jle
jg
xlat
cmp
xor
mov
cmp
dec
cmps
cld
dec
inc
lahf
cld
xchg
mov
(bad)
stos
pop
repz
std
xor
aaa
(bad)
mov
push
(bad)
cld
das
std
xor
pop
movs
cdq
sti
push
std
mov
jmp
sbb
push
jns
clc
div
xor
(bad)
stc
not
(bad)
ja
(bad)
(bad)
mov
imul
fist
fistp
mov
std
mov
(bad)
dec
mov
push
imul
call
mov
std
mov
dec
scas
icebp
mov
(bad)
lock
jecxz
daa
out
loope
(bad)
xor
push
(bad)
std
call
pop
pop
std
pop
idiv
mov
jg
pop
cmc
imul
mov
adc
aas
stc
imul
sbb
std
sar
clc
neg
pop
lock
dec
pushf
icebp
imul
mov
sar
fstp
in
xlat
jl
imul
cld
std
jle
mov
or
xchg
pop
mov
pop
jecxz
and
jmp
sbb
je
pop
lahf
jns
cmp
mov
js
and
aas
ret
jbe
cld
repz
and
cmp
xor
mov
dec
pop
jecxz
scas
icebp
iret
std
pop
mov
cmps
mov
xchg
(bad)
clc
mov
popf
mov
lahf
sub
jne
ds
call
fidivr
mov
(bad)
sti
xor
(bad)
gs
imul
pop
xchg
lds
mov
jg
sbb
lahf
hlt
push
xchg
neg
into
jmp
bound
ficom
scas
icebp
pop
jmp
jg
scas
icebp
inc
fmulp
stos
sbb
in
gs
(bad)
jecxz
in
movs
(bad)
jmp
(bad)
mov
sar
dec
(bad)
fisttp
call
scas
jno
xor
bound
rcr
jg
scas
icebp
out
xchg
call
scas
(bad)
retf
mov
in
std
fcmovnu
jb
out
pop
and
pop
aas
sub
jb
fistp
mov
std
lods
scas
push
cli
mov
sbb
std
std
lahf
out
mov
pop
sti
jbe
scas
repnz
jecxz
push
sub
mov
push
ins
xchg
xchg
lds
jb
cmc
je
shl
aam
push
xchg
dec
retf
movs
push
es
mov
add
sar
ins
(bad)
mov
int3
imul
jbe
ins
and
data16
shr
push
mov
mov
icebp
jmp
daa
rep
cmps
jns
mov
leave
lods
pop
xor
cli
imul
and
(bad)
out
xchg
pop
pop
push
cmc
in
xchg
adc
cmps
mov
cs
mov
fist
int
jp
fistp
sub
mov
mov
lods
cdq
or
(bad)
fwait
dec
out
mov
iret
jmp
mov
daa
pop
popf
js
psubusb
xor
fwait
cmp
loope
mov
inc
cmp
rcl
push
je
push
push
mov
jle
xlat
outs
mov
imul
pop
lods
pop
inc
test
ja
jl
xor
ret
cmp
cwde
sti
xor
iret
retf
mov
enter
cs
cli
gs
sub
loop
pop
(bad)
out
retf
jae
lea
pop
sub
hlt
xchg
mov
cld
inc
and
sub
mov
pop
jg
jl
pop
sar
xchg
aad
cld
xlat
rcr
jg
mov
scas
jno
pushf
xchg
cld
inc
lock
jecxz
xchg
pop
jg
cld
clc
fwait
in
pop
and
icebp
xchg
shr
mov
pop
and
fwait
xchg
or
dec
hlt
sahf
adc
rcr
jp
les
fnstcw
(bad)
lods
icebp
call
mov
(bad)
sub
out
push
xchg
jg
fcomip
in
aas
jmp
stc
(bad)
xchg
dec
jg
fnstsw
out
cld
shr
xchg
mov
inc
inc
jg
out
icebp
sti
inc
cmp
mov
pop
jecxz
cld
mov
call
dec
pop
div
sub
popf
jg
fnstsw
aaa
clc
cmc
jle
pop
sti
ja
pop
mov
leave
push
hlt
imul
mov
(bad)
cli
mov
cld
es
jg
jl
jmp
cmp
stc
scas
icebp
imul
mov
retf
stc
outs
(bad)
pop
adc
sti
aaa
clc
or
hlt
out
scas
dec
scas
std
push
aas
inc
leave
mov
int
out
loopne
clc
jne
std
pop
jmp
clc
or
xlat
movs
push
jle
mov
fnstsw
aaa
add
pop
mov
std
mov
(bad)
out
mov
mov
(bad)
es
(bad)
sbb
pop
xlat
outs
repnz
pop
xchg
xor
cmc
jle
pop
fwait
(bad)
call
outs
(bad)
fwait
std
out
(bad)
outs
repnz
fidiv
pop
sbb
xlat
dec
call
cmps
out
mov
dec
push
in
xlat
inc
(bad)
mov
cld
dec
mov
jmp
(bad)
cld
in
hlt
imul
mov
pop
push
clc
sub
jmp
in
push
sbb
pop
cld
inc
clc
aam
test
jle
jl
jmp
out
sbb
xlat
stc
or
mov
dec
jle
pop
repz
clc
or
push
cmc
imul
fild
jge
pop
sbb
cli
xor
mov
cld
jbe
hlt
mov
rcr
xchg
repnz
dec
scas
stc
imul
inc
loop
ja
call
mov
hlt
outs
call
sbb
fwait
fs
ror
mov
lods
cmps
push
(bad)
ins
mov
(bad)
stc
outs
and
idiv
std
(bad)
fdivrp
std
jg
fcomip
imul
in
xlat
shl
mov
(bad)
sbb
cmp
mov
xor
xlat
clc
jne
sbb
loopne
clc
jne
cli
or
stc
mov
pop
out
pop
out
clc
xor
std
cmc
jg
(bad)
xlat
std
dec
jle
fistp
stc
int
jge
retf
cmp
jb
test
mov
mov
cld
inc
mov
test
ss
shr
dec
jp
aaa
stc
cmc
int
jmp
test
outs
lock
jmp
mov
fistp
xlat
inc
(bad)
outs
repz
pop
mov
xchg
jb
push
cmc
imul
fild
jg
sub
xlat
clc
xor
fidivr
and
repnz
(bad)
movs
stos
dec
(bad)
pop
lds
xchg
cmp
iret
retf
sti
mov
std
cmp
sahf
pop
fwait
(bad)
sti
xor
pop
dec
clc
mov
aas
jmp
movs
and
out
mov
mov
push
hlt
adc
sbb
in
cmpps
outs
inc
aas
xor
sbb
iret
outs
ror
jbe
add
dec
call
sbb
iret
aas
jmp
jmp
pop
jecxz
mov
clc
xchg
jmp
std
mov
stc
jg
lock
push
lock
outs
loopne
cdq
fsubp
mov
add
in
or
out
lahf
mov
mov
in
xlat
push
dec
jg
scas
jmp
jg
div
out
std
(bad)
shl
mov
std
test
push
std
imul
sti
xor
out
mov
xlat
fdivr
(bad)
(bad)
mov
sbb
(bad)
std
std
pop
std
addr16
imul
(bad)
fdivrp
adc
mov
(bad)
jle
stc
scas
jecxz
(bad)
in
jle
test
jg
scas
jmp
mov
jge
mul
sub
cmps
mov
hlt
call
hlt
neg
std
sti
mov
repz
cmp
jecxz
gs
in
aas
mov
(bad)
repnz
dec
push
push
jo
pop
mov
mov
(bad)
outs
cld
(bad)
sbb
mov
mov
xchg
or
outs
cli
jne
mov
shl
xor
and
(bad)
mov
jns
sbb
repz
dec
jmp
xor
cmp
call
aam
mov
stc
xor
or
sbb
not
or
sti
xlat
mov
fcomip
out
pop
mov
jae
std
sbb
aam
gs
push
mov
ret
ds
cld
push
aas
das
adc
shr
mov
ja
pop
arpl
imul
out
pop
cld
into
xor
test
adc
jmp
mov
out
scas
leave
repz
push
pop
fdivp
pop
leave
xchg
jg
pop
and
lock
mov
call
outs
(bad)
fild
repnz
loope
cli
out
clc
mov
sub
enter
stos
ja
jns
mov
lahf
shl
inc
pop
std
push
hlt
(bad)
std
mov
jle
mov
(bad)
dec
mov
(bad)
mov
jmp
add
out
jmp
ja
call
scas
loope
jmp
int3
pop
push
dec
mov
aas
stc
xor
pop
jecxz
fistp
(bad)
lock
clc
mov
cld
imul
imul
xchg
(bad)
mov
pop
jecxz
iret
cld
mov
sti
out
std
sbb
hlt
rcr
(bad)
popf
aas
(bad)
xor
pop
jecxz
push
(bad)
sbb
jne
imul
push
addr16
cli
xlat
clc
retf
jg
cld
imul
jg
stos
pop
jecxz
clc
sbb
mov
arpl
pop
mov
clc
fldcw
stc
xor
scas
icebp
pop
(bad)
icebp
mov
jecxz
inc
jle
xlat
clc
cmp
fucomip
xlat
clc
imul
outs
call
jg
pop
icebp
adc
jle
imul
jg
out
std
imul
jg
ja
lea
scas
icebp
mov
mov
std
stc
xchg
pop
jecxz
(bad)
push
jmp
sbb
stc
xor
xlat
clc
sti
inc
call
pop
cld
sbb
pop
icebp
dec
jg
(bad)
sti
das
clc
leave
pop
jecxz
dec
imul
fistp
out
imul
jmp
mov
jmp
call
pop
repnz
jg
lahf
lock
jg
pop
jmp
int
repz
imul
jg
pop
(bad)
imul
jg
pop
(bad)
imul
jg
pop
std
imul
jg
lahf
lock
jg
pop
jmp
jecxz
jmp
lock
jg
std
cld
sbb
movs
pop
jecxz
clc
fwait
(bad)
mov
jecxz
sti
(bad)
mov
jecxz
cld
pop
jmp
(bad)
in
pop
jecxz
(bad)
cmp
cld
pop
jecxz
(bad)
jnp
mov
pop
dec
pop
(bad)
xchg
pop
jecxz
(bad)
sti
dec
pop
jecxz
cld
pop
(bad)
ficomp
outs
clc
inc
dec
dec
pop
jecxz
inc
pop
stc
inc
call
inc
(bad)
mov
pop
(bad)
call
xchg
(bad)
clc
pop
jecxz
std
daa
(bad)
in
pop
jecxz
(bad)
cmps
(bad)
fcomp
push
jmp
jg
scas
icebp
jg
push
jg
scas
icebp
jg
repz
scas
icebp
jg
jmp
into
scas
icebp
jg
imul
icebp
das
(bad)
jae
icebp
scas
icebp
das
inc
(bad)
jg
scas
icebp
outs
cld
push
jg
scas
icebp
das
call
jmp
scas
icebp
pop
std
sti
jg
jge
xchg
(bad)
sbb
test
cld
(bad)
neg
imul
(bad)
(bad)
pop
stc
imul
jmp
pop
jmp
retf
outs
mov
jecxz
push
jg
idiv
out
pop
jecxz
dec
(bad)
dec
(bad)
(bad)
scas
dec
pop
jecxz
std
(bad)
(bad)
(bad)
pop
jecxz
dec
(bad)
ficomp
push
std
addr16
scas
icebp
jg
pop
hlt
sti
jg
(bad)
(bad)
out
inc
pop
jecxz
std
inc
call
pop
jecxz
inc
push
pop
jecxz
cli
cmps
(bad)
test
xchg
jmp
xchg
(bad)
icebp
pop
jecxz
cld
cmps
(bad)
cmp
(bad)
(bad)
sbb
xlat
(bad)
clc
(bad)
ror
jg
(bad)
jecxz
(bad)
scas
(bad)
scas
(bad)
test
out
(bad)
jmp
mov
cld
scas
icebp
jg
iret
(bad)
fsubr
jg
xlat
clc
mov
xlat
clc
mov
xlat
clc
mov
mov
(bad)
xor
out
cld
sbb
out
neg
(bad)
sbb
jle
pop
(bad)
mov
(bad)
std
jg
xchg
push
ret
cld
call
cmp
iret
scas
push
std
sahf
neg
cmp
lock
mov
jle
fcomip
hlt
fnstenv
std
jmp
loop
(bad)
pop
jle
(bad)
ds
hlt
loope
out
mov
std
out
outs
clc
sbb
cmps
mov
ret
cmc
call
fnstsw
xlat
cld
mov
in
pop
out
xlat
jmp
mov
in
jg
iret
jg
mov
xlat
stc
ins
jle
cmp
stc
popf
xchg
pop
out
fcomp
stc
inc
in
jmp
sbb
(bad)
loopne
clc
xchg
inc
rcr
cld
xchg
fbld
fistp
shr
pop
pop
(bad)
xchg
pop
inc
jg
push
stc
cmc
cmc
stc
out
not
hlt
repnz
scas
jg
fdivr
inc
aas
icebp
jmp
out
jmp
in
stos
ins
call
lea
mov
out
mov
mov
mov
cli
sti
std
hlt
jne
jmp
and
jns
sbb
idiv
es
in
pop
test
fadd
dec
movs
xchg
out
std
call
mov
mov
and
int
(bad)
mov
stc
sar
(bad)
jg
jg
in
outs
inc
stc
xchg
ja
pop
jg
jbe
dec
test
outs
cli
fwait
inc
jmp
dec
call
sar
pop
sar
aas
sti
sar
(bad)
jg
jg
sub
xchg
in
and
clc
mov
xchg
(bad)
ja
jne
out
fucomip
xlat
inc
clc
repz
mov
jmp
hlt
(bad)
call
pop
jae
cmp
mov
stc
outs
(bad)
fwait
(bad)
cmp
jge
shr
mov
pop
clc
pop
inc
mov
dec
pop
stc
sub
jmp
(bad)
jmp
cli
mov
lds
sti
cld
call
fdivrp
jmp
in
xchg
jge
(bad)
jmp
dec
push
sar
lahf
jmp
(bad)
stc
push
cmp
lahf
arpl
jg
fcomip
mov
cmc
jle
(bad)
ja
xchg
in
pop
shl
jg
sar
call
push
aas
inc
(bad)
(bad)
aas
dec
inc
push
aas
inc
(bad)
(bad)
(bad)
idiv
jge
(bad)
(bad)
fnstsw
fild
(bad)
(bad)
mov
ins
hlt
(bad)
dec
jg
fild
pop
call
push
loopne
jmp
cld
(bad)
jg
pop
(bad)
xchg
sbb
call
pop
inc
(bad)
(bad)
jmp
(bad)
stc
jg
jecxz
push
cmc
(bad)
call
push
aas
std
pop
sti
aas
int
aas
inc
repz
pop
int3
stc
outs
std
pop
call
mov
loopne
jge
stc
mov
rol
clc
pusha
adc
fadd
pop
(bad)
jg
add
rol
in
outs
sti
(bad)
cli
in
mul
(bad)
jge
loopne
loop
and
clc
cmp
mov
jmp
lock
clc
cmp
cli
xchg
pop
mov
call
loope
outs
add
fbld
ins
clc
loopne
int
loopne
jmp
clc
add
jg
push
js
ds
push
clc
cmp
pop
jo
stc
mov
loop
scas
ret
pop
out
retf
add
rol
paddb
(bad)
fdivr
clc
jg
pop
jg
pop
sub
dec
(bad)
cmp
stc
(bad)
icebp
out
jg
std
(bad)
idiv
adc
ja
xchg
jg
(bad)
std
idiv
mov
(bad)
std
idiv
xchg
jg
(bad)
std
ja
adc
out
stc
sub
repz
jg
(bad)
std
idiv
xor
idiv
aad
or
(bad)
daa
jmp
push
xchg
dec
add
(bad)
adc
fistp
pop
mov
jg
inc
(bad)
(bad)
out
mov
dec
mov
dec
lea
(bad)
std
idiv
xor
idiv
jne
(bad)
(bad)
std
paddb
jg
std
(bad)
cmps
(bad)
(bad)
rcr
out
(bad)
rcr
cli
xchg
cld
fistp
fcomip
out
fistp
jg
idiv
mov
cli
(bad)
std
ja
paddb
sub
and
icebp
cmps
cld
(bad)
rcr
pop
adc
push
fcomip
xlat
loopne
aas
in
(bad)
sti
(bad)
mov
xchg
xchg
mov
push
jg
pop
dec
jg
pop
push
fild
(bad)
std
jg
lahf
(bad)
jg
cmp
aaa
(bad)
stc
push
fisttp
cld
cmp
jg
popf
add
out
clc
retf
inc
daa
cld
fistp
loope
mov
and
xchg
(bad)
fistp
sar
push
mov
or
push
(bad)
out
mov
call
std
idiv
or
pop
std
(bad)
rcr
not
mov
jmp
(bad)
jnp
cli
aas
idiv
inc
jle
imul
(bad)
sti
out
cli
stos
(bad)
aam
sti
pop
std
cmp
sbb
sti
iret
cld
mov
das
sti
mov
out
std
mov
scas
loope
inc
fcomip
pop
push
jnp
stc
xor
out
jg
outs
dec
not
pop
jmp
out
sti
sti
(bad)
xchg
(bad)
sti
pop
(bad)
sti
push
(bad)
sti
pop
stc
mov
pop
cld
out
test
(bad)
(bad)
mov
pop
dec
(bad)
(bad)
(bad)
(bad)
sti
(bad)
push
inc
paddd
mov
(bad)
cld
mov
(bad)
sti
das
pop
fdivrp
mov
(bad)
std
xchg
lods
paddd
mov
jmp
das
imul
jle
std
lock
dec
jnp
neg
jle
lahf
in
(bad)
fistp
jae
(bad)
gs
(bad)
(bad)
out
mov
dec
das
pop
(bad)
fistp
xchg
cld
(bad)
push
(bad)
loopne
movs
lahf
lahf
std
fistp
pop
repnz
push
call
(bad)
call
mov
pop
call
pop
mov
pop
jno
inc
in
sahf
jae
mov
(bad)
(bad)
(bad)
out
mov
call
jg
jg
aad
clc
sbb
xchg
(bad)
jg
ins
test
jg
push
hlt
std
pop
sti
pop
std
pop
push
fcomip
xchg
(bad)
(bad)
std
xlat
cld
shr
fistp
pop
stc
call
(bad)
(bad)
stos
jle
leave
(bad)
std
aaa
call
dec
fistp
(bad)
(bad)
pop
(bad)
clc
(bad)
(bad)
(bad)
mov
std
xlat
jmp
or
ja
out
push
(bad)
inc
mov
jg
dec
jg
dec
(bad)
fistp
pop
cli
add
call
sbb
jmp
push
(bad)
adc
std
mov
cmps
(bad)
out
mov
fistp
lahf
ss
(bad)
out
div
stc
mov
mul
sbb
(bad)
out
jg
outs
cli
jecxz
out
mov
fistp
pop
sti
jnp
(bad)
fcomp
xchg
(bad)
(bad)
aas
cld
push
(bad)
(bad)
(bad)
dec
mov
(bad)
rcr
jg
inc
jg
paddd
mov
out
jg
pop
clc
mov
out
jg
pop
call
out
cli
jae
out
jg
pop
std
stos
(bad)
out
jg
out
(bad)
repz
out
jg
das
std
sub
aad
std
aaa
push
sti
mov
out
(bad)
mov
out
stc
mov
dec
(bad)
mov
addr16
out
jg
das
ins
stc
mov
xor
out
jg
outs
cli
adc
out
jg
out
cli
mov
out
jg
scas
clc
cmp
jg
pop
cli
sub
out
jg
lahf
cli
fwait
(bad)
out
jg
lahf
cli
sbb
out
jg
pop
(bad)
cmp
dec
and
jg
in
inc
sti
inc
cmps
icebp
pop
inc
repz
sbb
aas
int
jnp
out
(bad)
scas
jmp
or
loop
in
(bad)
fistp
mov
in
inc
cli
mov
cmp
mov
cmp
jmp
loopne
rcr
(bad)
jmp
mov
sti
scas
cmps
mov
push
cli
(bad)
and
hlt
(bad)
jge
jmp
mov
mov
std
push
pop
sbb
stc
cmp
sti
sub
mov
cmp
jmp
mov
call
lahf
scas
(bad)
out
mov
jg
pop
std
adc
std
push
inc
(bad)
fistp
lahf
nop
sar
mov
neg
clc
inc
mov
int3
fstp
idiv
cld
fistp
cmp
(bad)
(bad)
mov
mov
iret
(bad)
out
mov
jg
in
(bad)
pop
(bad)
mov
sti
(bad)
fsub
(bad)
std
ja
fxch
(bad)
sti
lahf
stc
fwait
dec
daa
std
leave
mov
sti
out
clc
xchg
inc
cmps
sti
fcomip
out
push
aas
hlt
pop
pop
(bad)
fistp
lahf
push
adc
push
aas
sti
aaa
(bad)
xchg
push
aas
not
push
push
aas
clc
pop
inc
(bad)
loopne
jb
jg
pop
dec
pop
sti
jg
and
pop
cli
jg
cmp
cld
fistp
lahf
pushf
adc
(bad)
push
fcomip
cmps
push
(bad)
std
ud0
sar
std
ja
leave
xchg
(bad)
sti
outs
sti
xchg
cmps
push
aas
repnz
call
imul
cli
in
addr16
out
jg
lahf
sti
pop
mov
mov
sti
pop
sti
retf
inc
(bad)
sti
pop
mov
fidivr
loop
(bad)
sti
(bad)
cld
sub
dec
push
stc
and
paddw
push
aas
push
imul
std
or
ja
mov
lahf
push
(bad)
lahf
(bad)
jg
fwait
(bad)
clc
pop
cmc
jg
push
dec
fistp
stc
mov
push
push
cmp
mov
retf
loopne
dec
mov
dec
js
sub
(bad)
repz
fistp
jmp
out
cld
fistp
stc
leave
(bad)
std
out
mov
pop
mov
cmp
das
cmps
mov
(bad)
out
mov
jns
xchg
(bad)
jle
xor
inc
clc
test
cmps
cld
std
pop
push
in
sar
dec
(bad)
mov
fild
(bad)
std
aaa
call
aas
dec
repz
xchg
icebp
scas
and
addr16
lahf
mov
clc
imul
and
jg
jmp
stc
add
(bad)
mov
idiv
mov
cld
mov
repnz
cmp
jns
jg
pop
jg
mov
in
outs
and
xchg
or
xlat
pushf
jle
jge
push
(bad)
cmps
aas
cli
mov
daa
cld
mov
xor
(bad)
mov
test
std
mov
cli
jg
ins
jg
inc
jae
and
out
(bad)
out
jg
iret
pop
adc
(bad)
cmps
into
push
jg
pop
stc
jnp
pop
clc
jmp
retf
(bad)
adc
cdq
jmp
call
cli
mov
hlt
(bad)
lahf
std
mov
out
mov
(bad)
std
idiv
cmp
dec
jg
lahf
lock
ret
jg
das
(bad)
mov
(bad)
ds
inc
add
cli
mov
loop
(bad)
idiv
test
(bad)
call
mov
scas
aas
cmc
loop
(bad)
jnp
mov
cmp
jg
scas
cli
ret
call
aas
inc
mov
jg
(bad)
std
(bad)
shl
repnz
out
iret
pop
adc
cld
adc
(bad)
aas
pushf
je
lahf
lock
jecxz
sbb
fs
mov
out
fbld
jg
int
lahf
cmp
cdq
out
std
fistp
dec
jg
(bad)
dec
sahf
(bad)
bound
std
das
pop
in
std
fistp
inc
mov
dec
call
fcom
cld
pop
jg
jg
in
clc
cmp
(bad)
movs
iret
dec
daa
inc
jle
cld
fistp
iret
nop
push
clc
movs
movs
imul
(bad)
std
xlat
rcr
dec
les
test
(bad)
aas
hlt
dec
cli
dec
fild
int3
cmp
xor
xor
inc
mov
xchg
cmc
in
clc
inc
mov
aas
hlt
and
sti
outs
and
imul
sub
hlt
(bad)
(bad)
cmps
in
aaa
scas
fldenv
cld
dec
jg
push
aam
daa
cwde
scas
(bad)
xchg
aas
mul
xlat
out
dec
jp
cmps
mov
xchg
mov
imul
idiv
test
(bad)
jmp
ja
enter
pop
inc
push
xor
(bad)
xor
leave
cmp
ja
leave
loopne
mov
mov
pop
mov
jg
pop
(bad)
adc
push
jmp
inc
jg
pop
cld
jg
std
jg
mov
jae
int3
xlat
jg
leave
aas
in
out
(bad)
jae
and
les
jg
inc
jl
sar
idiv
push
mov
les
push
aas
stc
xlat
xchg
lahf
inc
cld
xchg
jmp
push
jg
stc
push
jg
in
std
dec
jmp
(bad)
call
jg
(bad)
std
movups
jg
hlt
les
iret
call
idiv
push
mov
xor
jg
pop
iret
mov
stc
jo
imul
sahf
jmp
fs
fidivr
call
aad
out
lods
ret
jmp
mov
jg
aad
(bad)
sti
scas
and
lock
jmp
fbstp
mov
inc
inc
arpl
xor
stc
mov
jg
jmp
enter
sbb
(bad)
in
loop
cld
in
lock
lahf
lock
scas
cmps
lahf
jg
sar
dec
mov
jge
dec
jg
sub
cmp
mov
pop
btc
xchg
jg
sbb
in
out
movs
lahf
jg
leave
cmc
pop
inc
(bad)
ss
scas
daa
push
sub
fsubr
aad
loopne
(bad)
std
mov
mov
daa
pop
bnd
mov
adc
sahf
mov
ret
in
fst
sbb
xchg
nop
push
push
cld
push
loop
jmp
and
mov
dec
sub
out
ret
(bad)
(bad)
mov
aas
psubq
aaa
(bad)
icebp
and
jg
(bad)
std
dec
(bad)
jne
or
in
jmp
into
(bad)
sar
sti
pop
sti
sub
mov
jmp
call
sbb
pop
cli
out
paddw
dec
cli
mov
dec
clc
mov
dec
(bad)
mov
das
clc
mov
dec
cld
mov
iret
cld
mov
dec
and
call
pop
sti
xchg
dec
cld
ret
jg
and
js
idiv
mov
and
lock
stc
mov
xchg
jecxz
(bad)
pop
cld
(bad)
enter
(bad)
(bad)
clc
aas
lock
in
push
stos
jmp
cmp
scas
and
mov
shr
jg
loop
std
jle
in
in
rcr
sti
jg
test
std
mov
jmp
push
fs
in
and
clc
retf
imul
xor
out
scas
stc
or
out
mov
std
inc
imul
aas
sbb
shr
ret
ds
add
rcr
jmp
outs
mov
pop
cmp
and
dec
repnz
mov
loop
inc
cli
jecxz
cld
mov
enter
jmp
retf
repz
cld
cmp
sbb
cmps
cmp
and
jbe
outs
and
popa
fnstsw
(bad)
std
dec
sar
and
mov
clc
and
sbb
or
imul
idiv
cmp
cld
inc
in
pop
xchg
jle
ret
(bad)
out
mov
repnz
jmp
jmp
inc
jbe
cld
(bad)
(bad)
sti
(bad)
pushf
mov
icebp
dec
and
pop
cld
ins
hlt
push
js
out
dec
(bad)
in
std
or
repnz
call
cld
and
idiv
sti
mov
jmp
pop
std
(bad)
stos
lahf
es
jmp
das
cmps
stc
(bad)
mov
jnp
fwait
mov
dec
xchg
aas
repnz
nop
mov
jmp
sti
out
and
add
in
dec
ret
pop
jnp
arpl
js
iret
call
idiv
(bad)
(bad)
repz
jnp
idiv
inc
les
jg
jmp
mov
(bad)
das
and
clc
mov
aaa
cld
or
sahf
inc
leave
cmp
fnstsw
shl
das
jns
(bad)
fcom
jecxz
ds
adc
jmp
das
daa
lahf
adc
xchg
lock
nop
cmp
xor
cli
sbb
cmp
(bad)
(bad)
jmp
aas
inc
jns
paddd
cdq
std
std
js
dec
jg
daa
cdq
pop
dec
aas
and
mov
jg
std
push
jle
(bad)
inc
call
mov
adc
add
fsub
int
hlt
out
dec
cli
stc
cmps
or
out
iret
jp
mov
ds
fisttp
push
ds
fild
icebp
mov
or
nop
sbb
sahf
cld
cmp
fs
(bad)
fidivr
mov
cmp
rcr
je
das
std
mov
clc
mov
(bad)
and
xchg
mov
into
cli
loopne
cli
xchg
(bad)
out
jg
scas
stc
and
out
jg
cld
idiv
pop
cld
retf
(bad)
out
jg
out
and
lea
out
std
xchg
dec
das
cld
xchg
movs
adc
pop
bnd
lahf
inc
ds
(bad)
std
(bad)
xchg
out
pop
jg
lahf
(bad)
sbb
pop
loop
aas
nop
std
nop
mov
cld
arpl
pop
bnd
mov
lahf
std
jg
(bad)
(bad)
fcmovu
(bad)
jg
xchg
loop
(bad)
jg
sub
pop
hlt
jg
xchg
retf
jg
dec
call
jg
xor
fbstp
cwde
das
mov
loopne
stc
sub
(bad)
(bad)
sti
iret
sub
dec
xor
mov
(bad)
sti
iret
pop
sar
xchg
ds
repz
mov
mov
xchg
cld
dec
pop
out
sar
mov
retf
cmp
enter
sahf
mov
mov
sti
mov
fnstsw
jmp
and
clc
sub
cmp
push
in
push
push
clc
fwait
dec
outs
xor
jg
pop
dec
jbe
jl
mov
sbb
retf
jae
xor
icebp
or
out
aas
call
add
mov
push
std
int3
push
mov
jg
cld
or
sbb
add
outs
in
xchg
(bad)
ja
test
in
dec
xchg
out
sub
fnstsw
pushf
in
cmc
(bad)
std
aaa
xchg
cs
cmp
xchg
sub
jle
dec
iret
(bad)
jle
stos
xchg
aas
mov
jno
fcomip
(bad)
call
fs
jg
arpl
das
and
inc
div
(bad)
jle
(bad)
mov
fstp
leave
inc
sti
daa
(bad)
fidivr
mov
jg
cld
(bad)
cmp
outs
lock
outs
rol
push
(bad)
xchg
cld
(bad)
sar
call
mov
inc
pop
test
idiv
icebp
aaa
(bad)
jno
sub
or
sub
ret
addr16
(bad)
rcr
dec
mov
ja
fcos
idiv
sbb
std
push
hlt
(bad)
mov
(bad)
sub
(bad)
cld
movs
jg
mov
fcomip
pop
(bad)
(bad)
rcr
idiv
push
(bad)
fidivr
repz
jae
(bad)
fistp
cwde
xor
lock
and
cmps
(bad)
jle
(bad)
fistp
inc
mov
aad
push
lahf
xchg
outs
(bad)
fistp
in
xchg
(bad)
sti
iret
movs
iret
dec
xchg
(bad)
push
jg
add
repnz
sti
clc
(bad)
dec
leave
iret
dec
push
mov
pop
adc
pop
ja
clc
jg
inc
sar
in
cld
xlat
(bad)
(bad)
out
mov
jmp
pop
cli
pushf
je
sub
push
adc
(bad)
push
add
sbb
call
neg
lea
(bad)
daa
std
jle
or
jg
jg
mov
jge
jg
mov
cld
jno
cmps
iret
mov
cli
outs
daa
sbb
aas
clc
push
bound
sbb
ror
inc
cld
xor
out
nop
inc
clc
sbb
dec
out
movs
mov
out
std
fistp
loope
mov
das
hlt
rcr
xchg
push
pop
xchg
pop
inc
push
cld
test
cli
aas
sahf
in
psubw
inc
mov
jg
loop
jg
scas
cli
inc
leave
pop
cld
adc
out
jg
jle
repz
lahf
idiv
xchg
jg
pop
inc
jle
pop
inc
(bad)
inc
out
jmp
pop
cli
jnp
xor
adc
adc
(bad)
std
pop
cld
mov
(bad)
std
out
(bad)
xor
(bad)
std
lahf
adc
cld
mov
retf
lahf
hlt
jg
retf
jg
pop
inc
jbe
(bad)
gs
dec
std
cmc
jg
fstp
retf
sub
lock
pop
(bad)
(bad)
mov
xchg
dec
clc
(bad)
jg
test
std
cmps
inc
xor
adc
aas
int
pushf
fs
mov
jg
(bad)
sub
sti
iret
stc
jmp
sti
clc
mov
push
aas
cld
sbb
daa
adc
mov
out
aas
xchg
ins
leave
lahf
xchg
mov
mov
add
dec
mov
in
xor
pop
inc
xor
pop
jbe
cmp
lock
rol
jg
jmp
jl
test
int
pop
movs
daa
sub
(bad)
jg
stc
div
inc
das
inc
outs
dec
out
(bad)
mov
loop
test
jmp
aas
stc
in
inc
pop
hlt
dec
test
mov
jmp
pop
mov
xor
fistp
(bad)
mov
xchg
cld
push
out
out
inc
fdiv
stc
pushf
xchg
out
out
stc
mov
adc
std
or
xor
icebp
(bad)
and
cwde
scas
and
inc
pushf
inc
mov
inc
mov
sti
ret
(bad)
out
jg
ins
add
clc
aas
cmc
aaa
cld
icebp
les
jg
(bad)
std
scas
cld
cmp
std
outs
cld
arpl
fld
(bad)
cli
aas
jmp
icebp
(bad)
(bad)
pop
dec
addr16
dec
movs
jecxz
xchg
jg
iret
(bad)
mov
fbld
sbb
push
xchg
mov
cld
test
(bad)
std
iret
cld
sub
out
adc
aas
(bad)
jg
mov
in
cmp
aas
fidiv
(bad)
jmp
cli
mov
jg
(bad)
clc
(bad)
sti
iret
cli
add
cld
fistp
out
dec
jno
out
dec
repz
sar
dec
(bad)
push
lahf
cmp
mov
and
enter
mov
ds
lahf
repnz
iret
and
pop
xchg
push
clc
or
cmp
iret
inc
aaa
pusha
cmp
push
clc
or
(bad)
jg
jmp
sar
mov
inc
(bad)
jmp
dec
(bad)
dec
jg
je
sbb
add
or
jnp
in
(bad)
mov
outs
(bad)
sbb
ss
pop
sub
cmp
push
nop
or
mov
sub
nop
jg
pop
sar
jg
pop
idiv
xchg
scas
cmps
sbb
out
aaa
push
scas
out
cli
xor
leave
neg
mov
call
pop
je
xor
add
idiv
scas
aas
popf
ins
pop
icebp
adc
ret
cmp
mov
call
jg
retf
lock
dec
stc
popf
mov
cs
(bad)
sbb
adc
rol
inc
scas
jg
scas
clc
inc
fstp
mov
pop
clc
or
imul
aas
cmp
cmp
imul
aas
cmc
(bad)
(bad)
out
into
aas
jmp
(bad)
pop
(bad)
sahf
aas
jmp
(bad)
idiv
and
inc
in
(bad)
outs
retf
gs
jg
scas
inc
push
jg
scas
jmp
jno
mov
push
jg
pop
jmp
pop
std
retf
push
mov
push
aas
sti
(bad)
(bad)
mov
push
clc
cmp
push
aas
popf
out
iret
cwde
mov
out
aas
popf
out
iret
ds
mov
mov
data16
mov
and
ins
ret
hlt
out
(bad)
std
adc
jns
mov
out
add
dec
dec
aam
std
fistp
stc
mov
mov
inc
mov
cld
mov
lahf
mov
mov
inc
adc
(bad)
std
pop
xchg
pop
lock
nop
popf
clc
retf
sub
lock
xchg
pop
clc
retf
leave
es
inc
mov
xchg
dec
js
jno
hlt
xor
imul
out
out
xchg
rcl
jg
pop
pop
cmp
sti
rcr
jge
aas
add
cld
pop
xchg
imul
(bad)
test
fwait
fs
xor
and
inc
nop
(bad)
(bad)
out
(bad)
(bad)
jnp
out
daa
inc
pop
rcr
jmp
not
(bad)
mov
pop
cld
sbb
push
lock
sti
pop
(bad)
je
lds
das
inc
scas
neg
sti
out
and
lock
cmps
cmp
cmp
ds
mov
xchg
(bad)
out
jg
out
stc
repz
cmp
paddd
cdq
(bad)
mov
leave
mov
inc
aas
stc
(bad)
(bad)
xchg
leave
dec
cld
xchg
(bad)
push
pop
aas
clc
dec
(bad)
and
cmc
(bad)
pop
repnz
xor
out
outs
cld
mov
das
std
mov
das
(bad)
mov
pop
stc
mov
lahf
mov
mov
lahf
cld
sbb
out
jg
lahf
(bad)
pop
(bad)
out
jg
lahf
cli
xor
out
repnz
pop
push
push
pop
test
idiv
(bad)
neg
fistp
out
inc
mov
enter
jbe
ss
hlt
(bad)
aas
xor
sbb
cld
fistp
cld
sar
sti
dec
jnp
lock
(bad)
xchg
into
idiv
out
aas
ins
icebp
lock
(bad)
shr
cli
rol
push
lahf
push
call
cld
sti
lahf
mov
lods
cmc
out
icebp
jg
imul
sar
std
addr16
mov
mov
cmp
dec
mov
pop
aam
xchg
iret
lock
adc
pop
jg
stc
add
call
mul
scas
and
loopne
and
xchg
push
sbb
cld
add
mov
add
jnp
iret
push
loope
mov
call
cwde
paddd
aas
repz
leave
cmp
and
inc
cld
sub
pop
repz
xor
lahf
xchg
das
icebp
daa
jge
(bad)
inc
mov
adc
loope
add
stc
cmovs
jne
cld
(bad)
jg
iret
imul
in
ds
aas
mov
(bad)
enter
std
(bad)
rcr
call
(bad)
(bad)
sub
cli
call
stc
je
into
aas
repz
mov
movs
js
outs
clc
jecxz
out
jg
pop
stc
sub
out
sti
ja
pop
inc
xchg
xlat
stc
cmp
jg
hlt
(bad)
mov
(bad)
jecxz
add
stc
mov
push
jg
outs
(bad)
mov
in
(bad)
mov
iret
(bad)
ins
hlt
(bad)
mov
(bad)
stc
mov
dec
aaa
push
stc
mov
call
aas
(bad)
push
int
fdivrp
std
(bad)
dec
out
(bad)
fistp
out
mov
sar
neg
repz
ins
(bad)
fistp
mov
jg
mov
sti
lahf
xor
out
(bad)
fistp
int
lahf
xor
(bad)
mov
(bad)
cld
ds
dec
iret
jmp
mov
call
dec
and
clc
jecxz
out
(bad)
fistp
std
cld
push
stos
iret
call
aas
loope
add
nop
(bad)
(bad)
push
xchg
(bad)
(bad)
out
aas
lea
daa
(bad)
pushf
cli
call
adc
std
push
scas
mov
jle
retf
push
dec
icebp
cdq
dec
ret
cmp
(bad)
adc
push
mov
lock
push
(bad)
out
movs
mov
push
fadd
lock
xchg
pop
push
push
ds
pop
mov
ins
in
cld
pop
jg
in
(bad)
(bad)
clc
scas
(bad)
out
mov
jg
sub
sti
out
cld
adc
clc
daa
(bad)
ds
(bad)
addr16
neg
mul
jg
(bad)
(bad)
sti
dec
sbb
lahf
clc
loop
jnp
jg
cmp
popf
aas
sbb
adc
leave
xchg
fdivr
cmp
call
cmc
xchg
mov
inc
jp
dec
cld
jge
out
mov
cli
shl
out
jg
scas
std
inc
leave
cmps
jl
pop
icebp
dec
leave
ds
out
inc
jae
(bad)
pop
loopne
sti
cmp
sbb
add
scas
add
repz
inc
aas
and
clc
mov
mov
out
iret
and
call
(bad)
cld
lds
push
aas
cmc
mov
(bad)
idiv
std
mov
(bad)
(bad)
mov
inc
aas
cli
xlat
std
(bad)
(bad)
aas
icebp
aaa
std
(bad)
retf
push
xchg
mov
clc
sub
out
jg
in
(bad)
pop
(bad)
cs
mov
(bad)
sti
(bad)
out
jne
dec
repz
jg
scas
cld
mov
jmp
inc
xchg
in
call
(bad)
(bad)
sti
(bad)
clc
jge
loope
(bad)
call
std
daa
int3
push
neg
fwait
in
std
fistp
pop
mov
aas
rol
lahf
cmp
mov
jg
cld
loope
std
cmps
cld
hlt
loope
std
daa
pop
sbb
fistp
icebp
call
pop
les
aam
cmp
rcr
(bad)
(bad)
call
(bad)
(bad)
(bad)
push
ficomp
icebp
out
dec
jne
jg
jmp
iret
ins
(bad)
std
fistp
repnz
in
(bad)
out
stc
jg
xor
scas
dec
(bad)
out
mov
in
lock
std
pop
cld
(bad)
mov
shl
xchg
pop
cmp
lock
inc
mov
(bad)
std
fdivrp
neg
inc
cmp
outs
std
xchg
sub
inc
jns
in
loope
cld
ins
and
jg
lahf
inc
ds
pop
dec
(bad)
sub
aas
sbb
mov
lds
cli
out
(bad)
jg
cmp
aas
jg
(bad)
sti
out
(bad)
push
jle
(bad)
(bad)
sti
(bad)
sub
sbb
dec
rcl
jg
ja
(bad)
mov
sti
pop
jmp
imul
(bad)
hlt
fcomip
dec
leave
dec
inc
(bad)
xchg
cld
mov
jl
jg
or
int
pop
(bad)
push
lods
dec
idiv
scas
mov
mov
jg
outs
jmp
inc
cld
inc
dec
outs
jmp
mov
call
scas
jmp
inc
pop
dec
jbe
scas
(bad)
mov
jg
out
std
repz
sti
fbld
lahf
sti
pop
sub
jae
out
jg
pop
jmp
out
jg
lahf
std
pop
push
xlat
(bad)
jge
idiv
push
jg
outs
call
(bad)
jg
ds
fisttp
cld
inc
movs
add
adc
xchg
jg
lahf
sti
daa
js
int
fbstp
mov
(bad)
pop
inc
xor
(bad)
xchg
push
clc
jecxz
pop
xor
clc
mov
loop
mov
jge
lahf
(bad)
(bad)
fistp
lds
sar
jne
jns
jae
(bad)
call
fdivp
(bad)
aas
movs
js
cld
lock
ficomp
or
cmp
cmc
jmp
fxch
xor
lahf
mov
into
(bad)
std
out
jnp
cli
cmp
jg
(bad)
(bad)
stc
(bad)
std
out
jge
(bad)
dec
(bad)
nop
lahf
clc
mov
out
dec
std
pop
call
out
neg
idiv
scas
cld
ret
pop
(bad)
fistp
stc
std
jg
sti
in
(bad)
dec
movs
(bad)
dec
cmps
std
dec
sub
clc
pop
std
loopne
loop
jmp
jg
lods
jmp
pop
clc
mov
dec
cld
fistp
pop
repnz
(bad)
pop
(bad)
in
loop
(bad)
imul
cli
xlat
push
mov
lock
(bad)
push
movs
sti
dec
jmp
out
neg
inc
repnz
idiv
add
fbld
push
cli
std
(bad)
out
jg
scas
mov
mov
lods
xchg
in
push
xor
mov
dec
cld
int3
lahf
jge
jg
jae
repz
(bad)
jg
adc
bswap
push
aam
pop
mov
repz
pop
xchg
(bad)
clc
daa
push
outs
dec
movs
cmp
stos
sub
ja
dec
jmp
(bad)
repnz
addr16
jge
xor
lock
and
jg
dec
movs
iret
(bad)
jl
jmp
sti
push
sub
inc
outs
call
mov
mov
and
(bad)
pop
(bad)
out
jg
lahf
sti
cmp
out
(bad)
in
(bad)
cmps
(bad)
out
push
pop
inc
sub
clc
idiv
(bad)
sar
int
repnz
std
(bad)
aad
clc
das
std
(bad)
loop
sti
pop
repz
repz
out
mov
pop
out
call
pop
mov
clc
arpl
arpl
xor
call
sar
jmp
icebp
jnp
cmp
es
cmp
addr16
cld
repz
(bad)
jmp
and
icebp
jnp
fistp
repnz
(bad)
(bad)
push
fistp
cmc
stc
(bad)
std
cmps
mov
les
iret
(bad)
out
aas
imul
stc
adc
push
lahf
mov
stc
mov
cld
ficomp
mov
repnz
(bad)
rcl
(bad)
out
aas
(bad)
fnsave
cmps
js
jg
cmp
into
(bad)
out
aas
div
(bad)
neg
adc
pop
(bad)
pop
push
pop
clc
xor
(bad)
out
mov
fistp
pop
cli
out
(bad)
mov
imul
(bad)
out
mov
(bad)
sti
das
std
sbb
fistp
pop
(bad)
jnp
fistp
lds
das
jge
jg
aad
cmp
xlat
push
into
push
jg
push
jg
out
iret
aas
(bad)
jp
sbb
sbb
mov
aad
std
mov
(bad)
ja
lds
cld
test
inc
(bad)
sti
outs
mov
repnz
adc
cld
cmp
inc
(bad)
mov
std
(bad)
std
ja
fpatan
(bad)
sti
out
cld
jae
cli
(bad)
(bad)
jnp
xchg
pop
hlt
jg
add
stc
aas
icebp
aaa
push
push
(bad)
fdivrp
xchg
call
adc
icebp
mov
mul
out
cmps
cmp
outs
stc
ret
imul
inc
aas
dec
mov
xchg
scas
push
(bad)
(bad)
sar
inc
adc
cld
jge
idiv
outs
(bad)
arpl
idiv
repz
inc
or
lahf
push
int3
neg
sti
inc
(bad)
std
pop
inc
jmp
(bad)
std
lahf
std
jnp
loop
std
das
std
or
je
dec
(bad)
fbstp
icebp
(bad)
mov
(bad)
out
aas
clc
idiv
mov
aas
in
inc
inc
jle
adc
cmp
fistp
(bad)
inc
jg
mov
out
aas
repnz
jnp
neg
idiv
clc
(bad)
out
(bad)
std
xchg
out
dec
cmp
sti
in
std
fistp
std
dec
(bad)
jg
out
jg
jg
xchg
mov
or
mov
(bad)
out
aas
outs
mov
paddd
aas
cmp
hlt
(bad)
(bad)
mov
inc
hlt
sbb
xchg
mov
repz
(bad)
adc
jle
(bad)
call
mov
les
daa
les
iret
call
iret
pop
and
sub
mov
hlt
(bad)
(bad)
ror
addr16
lahf
mov
jae
das
call
jl
addr16
(bad)
mov
sbb
into
fcos
std
xchg
cld
rcr
mov
ja
(bad)
out
mov
(bad)
std
push
call
(bad)
mov
call
aas
(bad)
nop
lahf
and
stc
cs
std
adc
je
out
dec
jl
push
push
pop
inc
out
(bad)
dec
(bad)
mov
std
fistp
pop
aas
stc
mov
jmp
pop
retf
sti
jmp
inc
push
ror
mov
call
aas
popa
cmp
cmp
xchg
jg
pop
std
mov
out
std
retf
(bad)
out
aas
repz
jecxz
sti
pop
idiv
std
jg
lods
sub
out
pop
je
pop
sti
dec
(bad)
out
jg
hlt
(bad)
aas
div
cld
mov
idiv
repz
mov
idiv
jmp
jg
(bad)
std
scas
cld
arpl
(bad)
std
iret
(bad)
jge
retf
das
jmp
jg
(bad)
std
outs
std
repz
(bad)
std
outs
(bad)
jae
sar
std
out
jmp
iret
(bad)
std
out
std
mov
(bad)
std
pop
rcl
push
icebp
pop
es
lock
aas
cld
xchg
push
jg
out
cld
push
push
mov
pop
imul
mov
in
jg
into
call
pop
cld
icebp
push
cli
daa
mov
mov
out
stos
dec
(bad)
out
ja
mov
out
stos
outs
std
fucomip
fisubr
scas
pop
shl
aas
cmp
mov
push
das
dec
mov
sbb
fistp
aas
mov
out
out
cld
fistp
lahf
mov
fistp
dec
in
(bad)
fistp
imul
sar
idiv
out
aas
in
jnp
jg
inc
mov
cmps
push
pop
dec
mov
xchg
neg
icebp
pop
jl
jg
loope
shl
sti
bt
call
fldenv
mul
sti
mov
sti
(bad)
call
pop
(bad)
fistp
in
aas
jmp
idiv
ss
stc
mov
(bad)
sti
(bad)
sahf
sbb
(bad)
std
daa
int3
lahf
xchg
pop
icebp
in
(bad)
sti
dec
pop
cmp
push
lahf
pop
pushf
xchg
lods
mov
out
aas
gs
sbb
jg
test
aas
jmp
int
std
addr16
mov
cmc
xchg
push
lahf
dec
aas
call
and
jecxz
(bad)
std
out
loopne
(bad)
std
xchg
cld
popa
les
jg
jmp
xor
jg
(bad)
std
xchg
call
jmp
cld
(bad)
(bad)
stos
(bad)
pop
retf
jmp
call
int
push
nop
into
js
jg
or
(bad)
(bad)
fcomip
out
push
clc
xchg
std
loopne
(bad)
mov
fistp
lods
or
das
stc
mov
call
adc
cmc
jg
(bad)
std
paddw
(bad)
dec
jmp
fcos
daa
jmp
ror
jg
stc
or
pop
dec
repz
jmp
jg
lahf
idiv
push
les
dec
fcomip
daa
(bad)
(bad)
in
(bad)
cmps
cld
(bad)
retf
xchg
cld
(bad)
jmp
jmp
or
iret
std
jne
idiv
dec
mov
jg
(bad)
std
pop
(bad)
sbb
sar
iret
std
sar
lock
sahf
jg
jg
(bad)
inc
mov
(bad)
std
xchg
mov
mov
enter
pop
(bad)
mov
stc
mov
std
fsubp
(bad)
sti
cmps
jle
inc
(bad)
(bad)
mov
(bad)
(bad)
test
jnp
imul
mov
ja
repnz
out
sub
in
aad
(bad)
std
sti
mov
fucomip
icebp
(bad)
std
pop
adc
les
clc
(bad)
in
jnp
push
cld
neg
cmps
iret
jbe
out
aas
loopne
cmp
dec
mov
mov
mov
(bad)
mov
(bad)
jnp
pop
jl
jg
jle
(bad)
(bad)
mov
outs
mov
push
xchg
hlt
(bad)
mov
inc
in
lods
leave
mov
leave
mov
out
(bad)
out
pop
inc
aas
jg
jne
jg
mov
out
shr
dec
(bad)
out
jmp
adc
mov
inc
repz
xchg
dec
mov
idiv
cli
out
pop
cmc
sar
jnp
mov
mov
(bad)
mov
jle
jne
in
(bad)
(bad)
sbb
cmp
stc
adc
cmp
dec
jmp
xchg
movs
aas
(bad)
fcos
pop
shr
dec
jne
jg
(bad)
(bad)
mov
(bad)
std
dec
jle
loop
(bad)
and
lock
(bad)
out
aas
nop
ins
aam
cld
loop
(bad)
out
aas
hlt
(bad)
inc
lahf
std
(bad)
(bad)
std
dec
dec
iret
cld
adc
fwait
(bad)
sti
(bad)
pop
jecxz
mov
mov
out
dec
ds
inc
jbe
iret
daa
aas
loop
dec
retf
(bad)
sti
(bad)
mov
das
pop
cld
fistp
pop
hlt
idiv
(bad)
xor
xor
dec
(bad)
out
aas
loope
cmp
mov
(bad)
jg
imul
jnp
mov
(bad)
mov
mov
stc
jg
add
std
addr16
gs
fistp
(bad)
xchg
(bad)
(bad)
lds
pop
jl
cld
sti
cmp
cmps
call
jg
(bad)
jge
hlt
into
(bad)
jge
in
pop
push
xchg
addr16
out
cmps
(bad)
(bad)
(bad)
jge
pushf
(bad)
(bad)
jnp
jmp
(bad)
cld
or
call
cli
std
xchg
(bad)
sti
repz
hlt
jmp
lahf
cld
fbld
pandn
inc
ja
call
sti
mov
rcr
ja
das
sahf
jge
aas
mov
call
retf
lahf
popf
jge
mov
cli
mov
inc
cmp
add
test
cdq
out
sar
idiv
out
scas
enter
xchg
cmp
sar
sti
pushf
jb
aas
stc
sti
out
std
fistp
icebp
sti
in
cld
fild
jnp
stc
jnp
(bad)
loop
(bad)
std
shr
addr16
test
jmp
push
cmp
mov
std
inc
les
push
pop
rcr
cli
paddd
(bad)
jle
jmp
jae
cmps
sub
sbb
or
cmp
repnz
sub
(bad)
fistp
xchg
loop
fistp
lock
ja
loopne
dec
or
cmp
mov
jnp
sbb
sti
scas
aas
sti
mov
test
idiv
or
cmp
(bad)
out
fistp
inc
mov
pop
adc
out
aas
call
out
pushf
jb
in
jns
jg
jg
pop
push
pop
clc
out
ds
loop
jns
jg
jg
xchg
push
fistp
jg
dec
cld
loop
pop
std
leave
pop
(bad)
fistp
jg
jg
xchg
push
pop
clc
pop
jg
(bad)
jle
out
idiv
(bad)
and
jg
inc
mov
std
mov
loop
in
push
pop
cld
aaa
call
cmp
xor
js
stc
aaa
jmp
stc
jg
cmc
jg
cmp
cmp
fistp
stc
popf
(bad)
sti
in
push
int
mov
(bad)
mov
pop
hlt
fnstenv
js
mov
aaa
(bad)
dec
fucomip
xor
(bad)
jg
aad
(bad)
cmp
neg
xor
jl
(bad)
(bad)
(bad)
jl
(bad)
(bad)
mov
mov
xor
mov
mov
int
dec
push
mov
pop
push
pushf
repnz
inc
mov
bnd
(bad)
fistp
(bad)
fistp
dec
imul
cld
in
call
jle
movs
push
out
xchg
repnz
mov
call
jae
movs
out
fidivr
loop
push
(bad)
jmp
sti
cmc
loope
std
xchg
xchg
mov
adc
stc
mov
cmps
lahf
mov
imul
push
sbb
adc
jmp
out
in
pop
icebp
in
(bad)
sti
loop
cmp
fsub
push
jns
aad
lock
mov
sar
(bad)
pop
dec
jl
(bad)
call
idiv
dec
jnp
jg
(bad)
nop
outs
(bad)
fcomip
aas
jmp
movs
iret
jle
(bad)
call
sahf
(bad)
fistp
(bad)
call
call
jg
std
jns
aaa
(bad)
repnz
(bad)
(bad)
movs
jg
pop
lock
std
add
dec
call
sahf
(bad)
fist
test
cld
movs
(bad)
mov
(bad)
mov
idiv
mov
iret
mov
(bad)
or
stos
jle
scas
mov
call
mov
jmp
sub
cmp
iret
mov
jmp
lock
test
adc
in
xchg
out
xchg
jb
add
pop
cld
imul
retf
xchg
dec
sahf
sar
xchg
pop
mov
sub
ret
xor
xchg
in
add
jnp
repnz
(bad)
loop
push
xchg
jle
imul
(bad)
idiv
jle
arpl
call
jae
xchg
out
cmps
jmp
mov
enter
loop
sti
idiv
popf
xchg
cld
das
push
mov
sti
sub
scas
xor
call
cld
mov
cli
jmp
div
movs
pop
rcr
pop
push
aad
mul
(bad)
mov
(bad)
mov
mov
out
inc
stc
stos
out
jns
jg
xor
push
sbb
das
imul
lock
pop
cmp
fist
hlt
out
das
cli
mov
repnz
(bad)
cdq
mov
jg
int
das
std
sub
sahf
fistp
out
in
jge
pop
jge
jmp
cld
(bad)
call
fstp
fist
movs
add
imul
stc
imul
cmp
das
cld
sar
(bad)
(bad)
imul
(bad)
dec
push
cs
cld
(bad)
mov
mov
lock
call
jg
(bad)
std
jnp
sahf
pop
(bad)
fistp
jne
(bad)
push
leave
mov
call
pop
out
xor
pushf
xchg
(bad)
jo
jnp
daa
shl
adc
jge
mov
mov
xor
clc
stc
ins
repnz
lock
aas
stc
xchg
mov
inc
dec
(bad)
mov
mov
jl
jae
mov
int
xor
push
pushf
jb
fbld
sbb
or
add
push
out
inc
mov
nop
outs
cmp
pop
std
push
push
idiv
loope
pop
rcr
jecxz
cmp
jg
shl
cmp
cli
cmp
out
cld
mov
push
clc
jmp
test
out
leave
pop
je
jg
mov
loope
pop
retf
adc
dec
(bad)
mov
dec
das
dec
outs
xchg
jg
mov
sti
sbb
mul
jl
jmp
out
in
cli
adc
not
and
lahf
clc
mov
std
fisttp
in
out
sti
jg
dec
loop
leave
pop
dec
xor
cmps
inc
(bad)
cmp
fucomip
pop
clc
mov
pop
rcr
pop
sar
dec
into
push
xor
in
pop
idiv
std
ffreep
lahf
std
call
mov
(bad)
fistp
pop
push
(bad)
fistp
fcomip
(bad)
std
(bad)
call
(bad)
into
fild
jg
(bad)
fcomip
addr16
(bad)
fdivr
clc
aaa
inc
out
(bad)
mov
loopne
push
(bad)
mov
cmp
(bad)
ds
lock
iret
mov
dec
repz
xchg
in
hlt
or
pop
loop
fnstcw
(bad)
mov
std
(bad)
cmp
cmp
mov
(bad)
ins
repnz
ja
out
out
mov
ja
out
popf
(bad)
sti
dec
mov
pop
push
cs
clc
inc
(bad)
(bad)
out
fild
add
sbb
pop
aas
clc
std
dec
neg
sahf
icebp
add
cmp
stc
mov
(bad)
out
lahf
mov
dec
(bad)
out
mov
jmp
xor
dec
inc
mov
clc
out
cmc
jg
inc
mov
scas
(bad)
fcom
push
loop
jle
jg
std
and
(bad)
mov
jns
dec
idiv
add
dec
jb
in
call
inc
std
fistp
jmp
(bad)
dec
(bad)
lock
(bad)
out
aad
idiv
jmp
fisubr
(bad)
mov
loop
xchg
in
psubb
dec
outs
shl
cmp
cmc
dec
sar
mov
test
aas
in
in
(bad)
(bad)
out
xor
xchg
jmp
mov
stc
mov
jmp
clc
idiv
mov
repz
cmp
jg
icebp
jg
adc
(bad)
cmps
std
sub
push
call
(bad)
std
sbb
(bad)
std
pop
(bad)
out
idiv
std
jg
lahf
mov
(bad)
out
(bad)
mov
(bad)
aaa
mov
lock
(bad)
jmp
jnp
cld
call
xor
mov
out
cwde
in
or
fmulp
xor
outs
int3
icebp
out
(bad)
dec
pop
pusha
into
dec
scas
jmp
clc
cmp
hlt
xor
neg
in
sbb
add
jmp
adc
jle
cmp
fisubr
jge
sti
jg
out
jbe
outs
idiv
out
das
sub
clc
cmp
das
inc
(bad)
out
push
mov
cmp
ds
pop
cld
add
jns
jae
das
clc
push
jg
int
das
cli
mov
iret
(bad)
out
sbb
imul
dec
cli
std
mov
lahf
(bad)
xor
(bad)
mov
call
mov
sar
cs
cmp
cmps
inc
push
push
pop
call
cmp
xchg
jmp
out
fmul
stc
sti
nop
dec
cdq
cld
xchg
fbld
popf
std
mov
(bad)
out
mov
rcr
ss
idiv
dec
movs
fcos
std
sti
xchg
mov
ds
pop
(bad)
mov
jge
sub
outs
xchg
push
fisttp
jbe
scas
(bad)
cld
jle
(bad)
inc
cmps
mov
hlt
std
pop
xchg
(bad)
fistp
pop
icebp
sar
neg
sti
push
aad
xchg
call
(bad)
cmps
dec
jmp
stc
retf
xlat
push
jg
idiv
jmp
pop
(bad)
(bad)
idiv
std
jg
outs
hlt
call
aas
jg
loopne
(bad)
in
jg
(bad)
mov
mov
cld
jecxz
lock
mov
lahf
jecxz
(bad)
mov
push
fptan
daa
in
popa
outs
aas
cmps
jns
ss
xor
push
lods
imul
out
retf
dec
jae
(bad)
repz
jg
xchg
sti
mul
call
idiv
out
mov
neg
(bad)
push
mov
jg
ffree
loope
std
mov
(bad)
jp
ja
out
jg
ins
stc
out
inc
xor
sub
sti
stos
pop
dec
jb
xchg
(bad)
mov
(bad)
(bad)
pop
jo
jg
xchg
(bad)
cli
mov
xor
fstp
sti
repnz
(bad)
std
call
mov
mov
and
mov
mov
cli
xchg
mov
(bad)
out
cmc
lahf
cmc
push
in
std
(bad)
call
icebp
pop
adc
xchg
cmp
pop
jg
daa
mov
fld
lahf
cmc
sti
cld
fcomip
aas
push
std
mov
mov
(bad)
(bad)
ds
add
call
jg
ja
out
aad
pop
cld
(bad)
pop
mov
mov
(bad)
mov
cmps
(bad)
out
aas
xchg
(bad)
xchg
scas
push
mov
(bad)
cmp
(bad)
pushf
out
(bad)
(bad)
mov
dec
shl
and
jae
mov
cmp
cld
ja
(bad)
test
jg
jb
(bad)
ficomp
dec
(bad)
out
jg
scas
std
(bad)
mov
(bad)
jmp
xchg
xchg
push
mov
(bad)
sti
mov
(bad)
sti
(bad)
cli
aas
jg
int
in
(bad)
out
iret
jg
pop
ss
(bad)
(bad)
mov
push
(bad)
clc
(bad)
sti
call
hlt
jg
sti
(bad)
in
xchg
(bad)
sti
mul
xchg
out
sbb
inc
xor
sti
test
in
mov
xor
jecxz
int3
icebp
imul
std
fistp
fdivr
fnstenv
(bad)
fbld
cmps
out
jle
xchg
in
mov
out
repz
fisttp
lods
cmc
xchg
and
mov
xchg
pop
cmc
pop
repnz
jle
lahf
cmp
mov
lahf
jg
dec
std
fistp
out
dec
cld
jmp
jle
or
fnstcw
jmp
jmp
jg
fcos
std
sti
std
push
xor
jg
out
cmc
jg
out
addr16
std
fist
cmp
je
fstp
jmp
pushf
sub
mov
(bad)
fcomip
lahf
add
div
(bad)
stc
xor
mov
out
fist
sbb
xchg
push
mov
(bad)
cmp
or
(bad)
xchg
leave
call
jg
jle
mov
jmp
adc
cdq
outs
(bad)
out
jmp
cmp
cmp
sti
std
icebp
fs
(bad)
cld
leave
(bad)
std
inc
rcr
jg
ja
xchg
push
jg
idiv
xor
idiv
ja
sar
idiv
ja
push
push
jg
mov
loope
idiv
push
mov
out
pop
dec
ins
out
cli
(bad)
(bad)
(bad)
mov
sub
dec
jg
repnz
(bad)
cmps
(bad)
jmp
std
psubsb
jg
scas
sti
cdq
(bad)
sti
ffreep
mov
out
jg
repz
cmp
(bad)
out
pop
(bad)
mov
jg
pop
imul
jg
loope
mov
std
outs
jmp
cld
sti
cmp
sar
fwait
inc
repz
icebp
push
addr16
mov
stc
daa
push
shl
push
out
inc
mov
or
popf
in
add
jg
mov
mov
std
(bad)
(bad)
push
out
dec
imul
add
mov
aaa
mov
idiv
out
rcr
jnp
(bad)
jle
jb
mov
std
jae
cli
out
(bad)
call
shl
mov
sti
cmp
adc
mov
cld
paddw
(bad)
std
(bad)
cmc
jnp
fild
push
jp
jg
jg
out
std
jg
add
sub
ret
sub
add
fbld
ja
cld
int3
sub
sti
dec
xchg
imul
enter
xor
das
(bad)
out
fcomip
(bad)
and
cmps
(bad)
out
fstp
call
idiv
mul
std
iret
aas
dec
das
(bad)
jle
xchg
std
add
dec
(bad)
fistp
dec
xor
pop
inc
jae
sar
idiv
out
adc
lds
out
mov
jmp
call
mov
inc
retf
xchg
jg
das
cli
mov
sbb
push
jg
idiv
sar
idiv
ja
xchg
push
jg
ja
adc
idiv
ja
adc
(bad)
(bad)
test
cli
xchg
(bad)
jmp
(bad)
or
jg
(bad)
std
lahf
cld
lea
(bad)
std
pop
sar
inc
repz
imul
(bad)
add
leave
jg
dec
cld
inc
push
jg
scas
(bad)
lods
push
push
outs
cld
popf
push
push
out
std
ret
push
scas
(bad)
adc
jg
lahf
push
std
(bad)
jg
(bad)
(bad)
(bad)
cli
pop
and
push
mov
(bad)
push
lahf
(bad)
addr16
or
and
push
(bad)
std
fnstenv
(bad)
out
arpl
repz
out
(bad)
inc
push
out
rcl
in
sahf
nop
mov
aas
inc
cli
cli
daa
dec
pop
mov
mov
iret
dec
scas
aas
daa
jge
in
neg
(bad)
mov
hlt
jmp
(bad)
(bad)
sti
jae
rep
dec
push
cld
fbld
stc
(bad)
out
inc
xor
idiv
jmp
mov
sar
das
(bad)
out
(bad)
(bad)
jnp
repz
(bad)
mov
fistp
lods
sar
xchg
aas
call
js
mov
jmp
push
sahf
(bad)
cld
inc
call
out
std
fistp
pop
(bad)
std
(bad)
sti
dec
cli
xchg
jae
lahf
std
xor
push
repnz
pushf
fisttp
sti
mul
jg
mov
(bad)
adc
pop
movs
stc
(bad)
sub
test
pushf
pop
nop
ins
clc
shr
push
mov
(bad)
jmp
out
dec
clc
mov
dec
cld
mov
dec
clc
mov
(bad)
cmps
(bad)
push
idiv
idiv
mov
idiv
not
xlat
jg
pop
inc
jae
inc
jmp
idiv
int
int
std
(bad)
aas
rcr
sub
pop
adc
(bad)
out
(bad)
call
idiv
aaa
inc
fidivr
(bad)
(bad)
test
lahf
cli
jg
repnz
lahf
and
fdivrp
pop
out
(bad)
(bad)
mov
(bad)
(bad)
jg
stc
int3
icebp
les
stc
call
push
rcl
jecxz
sti
mov
imul
stc
pushf
cld
out
das
sub
cmc
push
inc
mov
int
xchg
ins
lock
inc
ficomp
push
jnp
cmp
inc
mov
int
int
xor
sar
sti
jae
out
iret
dec
into
mov
sahf
adc
pop
icebp
mov
xchg
not
or
in
sub
mov
cmp
idiv
mov
daa
enter
stc
jbe
(bad)
out
aas
loop
std
std
(bad)
out
aas
out
inc
js
call
repz
cli
mov
dec
std
push
iret
jns
jg
das
std
mov
lods
iret
cld
dec
jg
in
(bad)
(bad)
and
cwde
aas
loopne
(bad)
mov
neg
sti
pop
(bad)
in
sti
aas
clc
sti
(bad)
fdivr
sti
aas
std
pop
inc
(bad)
sti
(bad)
mov
lahf
sti
(bad)
lock
sti
pop
clc
sbb
(bad)
std
mov
cld
std
in
jg
mov
cmp
(bad)
jmp
dec
jg
pop
bnd
pop
jg
pop
idiv
mov
clc
dec
cli
mov
call
jns
out
jmp
test
dec
mov
jmp
push
(bad)
dec
loopne
push
out
clc
loopne
and
xchg
mov
jg
ud0
aas
(bad)
cmp
jmp
(bad)
clc
outs
in
cmps
(bad)
call
jmp
mov
jmp
das
int3
aas
lods
add
push
call
aaa
aaa
(bad)
jg
lahf
clc
jg
test
(bad)
sti
idiv
repz
ret
jbe
add
(bad)
out
out
int3
les
jnp
cmp
mov
xchg
ins
cmc
xchg
movs
repz
jle
repz
jmp
daa
fistp
jle
(bad)
fisttp
dec
out
sbb
cli
xor
out
push
cld
popf
lahf
ds
mov
sahf
sar
enter
jmp
jg
push
push
pop
lock
cld
fdivrp
div
pop
nop
(bad)
(bad)
mov
enter
(bad)
daa
dec
mov
paddw
and
call
out
repnz
std
mov
push
sub
(bad)
cmps
shr
aam
(bad)
std
push
mov
sti
das
cld
stos
inc
(bad)
sti
mov
(bad)
sti
(bad)
cli
(bad)
repz
sti
(bad)
clc
das
dec
out
cmp
jg
(bad)
push
(bad)
hlt
(bad)
sti
push
ror
pop
dec
jg
(bad)
std
retf
(bad)
xchg
aas
stc
(bad)
(bad)
pop
push
call
adc
dec
fdivrp
cmp
inc
int3
cmp
(bad)
push
lahf
cld
mov
out
jmp
pop
cld
dec
pop
out
in
call
push
call
ds
cmp
fidivr
aaa
(bad)
xchg
(bad)
sti
mov
jb
push
dec
shr
inc
out
(bad)
jmp
cli
(bad)
jg
jae
(bad)
call
(bad)
inc
iret
jg
xlat
retf
daa
cld
cvttps2pi
cwde
jg
dec
(bad)
jmp
call
mov
clc
jg
(bad)
(bad)
mov
jp
idiv
sar
sahf
xchg
out
jg
mov
mov
mov
push
(bad)
(bad)
dec
sahf
dec
imul
imul
neg
cld
fisttp
jmp
(bad)
ds
std
dec
pop
sar
cmps
aam
fist
fdivrp
loop
(bad)
sti
aad
dec
(bad)
out
aaa
movs
out
jg
call
(bad)
jg
jg
fidivr
fchs
pop
cld
popf
(bad)
sti
(bad)
cld
arpl
(bad)
sti
(bad)
sti
jecxz
xchg
repz
cld
ud0
pop
xor
(bad)
jmp
cld
or
mov
stc
(bad)
std
inc
jmp
pop
push
pop
inc
(bad)
jmp
call
scas
(bad)
out
mov
dec
mov
cmps
inc
cmps
inc
std
call
cmps
push
(bad)
(bad)
pop
cld
pop
push
scas
clc
inc
jmp
mov
les
cld
(bad)
std
retf
mov
(bad)
cmps
jg
dec
(bad)
mov
push
mov
mov
aas
(bad)
std
(bad)
std
aas
cli
cmps
(bad)
(bad)
adc
(bad)
call
pop
cld
xlat
aam
aas
daa
ds
iret
enter
hlt
jg
(bad)
jg
repnz
(bad)
std
sub
xchg
jg
(bad)
(bad)
pop
(bad)
std
mov
inc
fcomip
jg
lahf
mov
(bad)
jecxz
cmps
loopne
push
sti
jg
(bad)
(bad)
jg
cmp
jg
pop
cli
jg
pop
loopne
rol
scas
add
out
repz
retf
add
pop
repnz
(bad)
ffreep
and
daa
xchg
imul
jno
repz
jb
mov
iret
leave
call
sti
dec
push
lds
jl
sar
sti
cwde
dec
lock
sar
jnp
jp
repz
dec
bnd
mov
aas
js
jg
add
sbb
sbb
call
adc
cmc
jg
icebp
and
jg
lahf
cmp
mov
enter
jbe
dec
stc
xor
adc
rcr
mov
nop
fdivrp
and
js
pop
sti
mov
(bad)
sti
(bad)
push
stos
(bad)
sti
(bad)
sti
jae
(bad)
sti
iret
movs
cmc
cmc
mov
imul
aas
mov
(bad)
aas
cli
mov
aaa
cld
fistp
(bad)
out
inc
imul
std
retf
dec
pop
cld
mov
loop
sti
mov
scas
std
mov
outs
stc
mov
iret
cld
mov
call
sti
jg
leave
cld
lahf
std
jg
idiv
rcr
jmp
outs
(bad)
mov
das
clc
mov
dec
mov
dec
(bad)
cld
test
das
cld
test
idiv
mul
aas
daa
jle
iret
enter
jg
pop
idiv
ja
fcomp
jg
lahf
mov
inc
in
pop
aas
(bad)
std
pop
cld
(bad)
aas
jo
(bad)
aas
(bad)
and
cmp
leave
fdivr
jmp
xor
das
mov
jmp
fdivrp
fwait
(bad)
fbstp
jge
clc
xor
mov
test
(bad)
jl
xchg
repz
jno
cmc
fcos
mov
ja
jmp
pop
stos
outs
xchg
scas
dec
jae
mov
cmp
or
sahf
xor
mov
stc
pop
cmp
mov
cdq
cmp
iret
aas
mov
(bad)
pushf
out
add
idiv
jle
dec
std
xor
dec
push
std
sbb
in
jle
(bad)
sti
dec
cli
xor
mov
(bad)
sti
dec
sti
mov
cli
(bad)
(bad)
mov
inc
dec
out
jmp
mov
jg
int
lahf
clc
out
push
lahf
inc
lahf
and
pop
ror
dec
das
(bad)
out
aas
repnz
cdq
(bad)
fistp
leave
std
lahf
hlt
out
(bad)
out
mov
(bad)
sti
push
(bad)
mov
sub
out
jmp
fcomip
fldcw
(bad)
sti
jg
dec
(bad)
fdivrp
sti
push
call
dec
cdq
loopne
mov
out
dec
mov
shl
shr
call
(bad)
std
mov
(bad)
std
retf
jmp
adc
(bad)
stc
mov
jmp
(bad)
cli
das
call
outs
inc
(bad)
sti
(bad)
(bad)
gs
fdivr
std
jg
retf
(bad)
(bad)
mov
int3
repnz
cld
jg
retf
outs
cli
mov
xlat
(bad)
(bad)
sar
mov
(bad)
out
pop
std
aas
std
repz
out
(bad)
(bad)
(bad)
(bad)
jg
paddd
(bad)
inc
add
sub
cld
lahf
clc
(bad)
jg
aas
or
dec
into
aas
(bad)
jmp
gs
int
ret
(bad)
sti
daa
enter
lock
(bad)
sti
xchg
cld
rcr
xor
div
mov
call
shr
push
xlat
scas
sub
in
(bad)
jle
dec
jbe
dec
(bad)
(bad)
out
fbstp
clc
jg
lahf
pop
(bad)
fisttp
std
repz
cli
cmp
sbb
out
icebp
jg
cli
inc
sub
jmp
jle
(bad)
jnp
daa
std
(bad)
push
cmps
int3
(bad)
out
aas
call
aas
and
xchg
lods
dec
fidivr
lods
(bad)
xchg
sbb
out
aas
out
iret
sub
out
aas
test
cld
fistp
pop
push
(bad)
fistp
lahf
inc
cld
inc
cmp
daa
(bad)
cmp
fstp
lahf
std
out
(bad)
out
jg
pop
(bad)
mov
out
jg
pop
cld
imul
jg
pop
sti
pop
(bad)
out
(bad)
std
jg
mov
add
fwait
cmp
mov
cld
pop
mov
fdivrp
jmp
stos
inc
jg
(bad)
(bad)
push
inc
aas
inc
cs
aas
icebp
jg
fistp
dec
popa
shl
clc
(bad)
mov
jmp
(bad)
(bad)
cmp
dec
outs
xchg
add
loopne
or
add
pop
clc
das
jns
(bad)
jmp
cli
mov
repz
(bad)
aad
es
cmc
dec
(bad)
out
cli
pop
jg
test
mov
jecxz
imul
cli
mov
pop
jmp
fwait
(bad)
jnp
adc
in
std
jmp
mov
cs
in
call
(bad)
(bad)
mov
leave
push
ret
pushf
call
fs
jo
stc
inc
(bad)
test
mov
(bad)
push
sti
jg
mov
jg
pop
mov
mov
std
mov
stc
jg
imul
jg
lds
dec
cmps
out
(bad)
call
inc
aas
daa
mov
xor
outs
leave
dec
inc
repz
lods
jae
jae
repz
pusha
mov
(bad)
dec
pusha
mov
(bad)
(bad)
jg
push
jmp
call
(bad)
push
std
dec
inc
cld
jmp
in
pop
movs
jmp
(bad)
ins
idiv
inc
in
out
sbb
push
xchg
jge
push
mov
addr16
pusha
ins
ret
jg
repz
lahf
jmp
call
int
mov
add
aas
dec
into
call
xlat
inc
lahf
clc
mov
dec
cld
arpl
int
clc
stc
dec
jle
push
add
mov
xchg
aam
std
mov
ja
out
lahf
stc
cmp
sti
xchg
(bad)
popa
mov
(bad)
adc
std
push
jg
(bad)
std
pop
push
cld
test
ud0
hlt
dec
cmp
mov
clc
mov
aas
dec
movs
stc
cld
mov
(bad)
std
cmps
xchg
fcomip
daa
xchg
jle
pop
cld
mov
das
bound
mov
sti
ud0
jle
hlt
cld
dec
(bad)
fistp
lahf
std
sar
neg
neg
(bad)
mov
adc
idiv
outs
dec
mov
std
jmp
outs
clc
(bad)
mov
imul
setle
scas
enter
dec
(bad)
jg
sti
mov
repnz
jg
(bad)
outs
icebp
sar
xor
js
clc
(bad)
sti
push
aam
loope
push
paddb
(bad)
aas
loope
(bad)
cmp
idiv
pop
mov
jmp
punpcklbw
scas
push
fs
fcomip
dec
cdq
repz
cld
mov
mul
(bad)
jmp
jg
out
sti
jg
xor
cmps
inc
jae
inc
rcr
pop
stc
sti
(bad)
fistp
pop
inc
lahf
std
mov
mov
std
pop
dec
add
sti
(bad)
stc
jae
push
lahf
stc
push
mov
xchg
icebp
aas
dec
cld
jmp
in
inc
jbe
dec
and
arpl
jmp
int
loop
(bad)
sub
jmp
cld
pop
cld
jg
(bad)
push
aas
stos
je
stc
stc
fild
(bad)
mov
push
jle
jns
cmp
int
mov
fsub
inc
mov
sbb
jae
call
(bad)
jmp
retf
jmp
sbb
jmp
loop
inc
mov
pop
lock
xor
mov
dec
mov
pop
(bad)
mov
lock
push
jg
int
dec
call
pop
repnz
push
aas
repz
(bad)
inc
ja
daa
repz
aas
(bad)
sti
cld
fistp
pop
not
mov
loopne
loop
and
fbld
(bad)
cld
inc
jg
aam
std
pop
cld
daa
iret
stc
(bad)
jg
lahf
cli
sar
neg
inc
(bad)
std
inc
rcr
xchg
sar
movs
xlat
(bad)
mov
mov
out
stc
mov
outs
sti
mov
out
clc
mov
lahf
sar
(bad)
inc
(bad)
jmp
hlt
cmps
stc
or
jecxz
in
push
sbb
jecxz
xchg
jns
mov
sub
push
and
addr16
(bad)
jmp
call
(bad)
(bad)
scas
enter
adc
daa
sbb
out
xor
call
dec
loope
dec
(bad)
out
jg
out
mov
setle
(bad)
mov
dec
mov
int3
aas
jle
push
js
jae
out
ud0
jg
(bad)
inc
sub
repz
mov
xchg
in
inc
lds
loopne
aaa
sti
mov
jmp
out
fcos
std
pop
dec
add
int3
(bad)
(bad)
rcr
call
jg
std
jg
push
jg
aad
std
xchg
(bad)
dec
mov
daa
mov
dec
ud0
cmps
cmc
(bad)
clc
std
lahf
aad
ja
out
(bad)
fistp
cmp
iret
loopne
stos
das
int3
call
inc
je
(bad)
jg
fcmovu
mov
jmp
psadbw
dec
push
push
jmp
pop
mov
(bad)
jns
mov
into
sti
and
int
mov
(bad)
js
jmp
call
out
clc
add
inc
icebp
pop
out
(bad)
cdq
jmp
dec
jb
jg
xchg
loop
call
jg
stc
add
inc
jbe
addr16
(bad)
call
repnz
(bad)
pusha
mov
jg
stc
js
xor
je
xor
jae
sub
cmc
jg
lahf
mov
mov
or
iret
cld
fistp
pop
test
call
stc
sbb
dec
rcr
mov
jle
leave
std
scas
cld
daa
cmc
push
fcos
(bad)
(bad)
aas
jmp
out
out
in
jmp
dec
fdivr
mov
in
pop
adc
mov
or
aaa
xchg
aas
cmp
sar
(bad)
dec
jmp
push
jmp
call
paddb
add
pop
mov
pop
(bad)
aaa
in
pop
inc
mov
popf
jg
std
jmp
mov
xchg
(bad)
jmp
jg
into
jg
(bad)
int
(bad)
stc
jg
lahf
sbb
call
(bad)
cli
mov
cld
(bad)
cmp
clc
call
stc
inc
push
ds
bound
jg
std
std
pop
xchg
cs
lds
icebp
add
jg
jg
push
xchg
std
pop
cli
daa
pushf
mov
inc
movs
pop
(bad)
adc
not
std
fistp
(bad)
xchg
fistp
lods
xchg
(bad)
pop
dec
pop
dec
jecxz
cld
pusha
scas
push
aad
dec
(bad)
inc
(bad)
inc
(bad)
clc
(bad)
pop
mov
out
pop
cmp
pop
xchg
iret
in
dec
std
jmp
(bad)
dec
jp
push
cld
adc
pop
rcl
movs
sbb
mov
xchg
inc
inc
push
out
xchg
jbe
outs
(bad)
jns
imul
push
cwde
(bad)
dec
aas
mov
dec
loop
pop
mov
jg
out
xor
std
call
(bad)
(bad)
jmp
jg
sar
out
mov
(bad)
(bad)
cmp
ds
cmc
add
(bad)
jp
mov
cld
sbb
mov
add
paddw
xchg
mul
dec
xchg
mov
jge
out
aas
xchg
idiv
cli
(bad)
stc
(bad)
(bad)
std
inc
push
push
dec
es
xchg
(bad)
mov
dec
(bad)
(bad)
das
and
inc
popa
idiv
push
paddd
xchg
std
aas
cli
outs
cld
inc
(bad)
out
aas
mov
gs
jmp
outs
stc
mov
imul
(bad)
inc
inc
jg
xor
inc
push
iret
mov
sbb
jg
aas
and
clc
loopne
adc
cld
mov
in
push
call
cdq
(bad)
jmp
dec
(bad)
dec
cli
in
xchg
push
(bad)
call
mov
(bad)
(bad)
jns
stc
retf
(bad)
stc
into
(bad)
inc
sub
(bad)
jmp
cmp
stc
pop
rol
cmp
clc
(bad)
out
jmp
dec
fwait
stc
out
repnz
pop
jae
cmps
(bad)
test
cli
mov
out
je
pop
cmc
inc
inc
out
sar
int3
lahf
inc
mov
jb
ret
mov
cld
sbb
imul
jnp
and
jp
and
sti
pop
repnz
push
push
lahf
je
pop
cld
addr16
push
pop
repnz
call
(bad)
sti
dec
mov
mov
(bad)
fstp
mov
cdq
out
jg
sti
(bad)
out
(bad)
sti
jg
(bad)
call
(bad)
(bad)
std
mov
(bad)
jle
(bad)
aas
sar
(bad)
inc
aas
inc
test
enter
sar
dec
call
sti
addr16
push
jg
shl
jg
test
loope
pop
icebp
dec
jmp
cld
cmps
in
inc
xchg
idiv
jg
sti
std
lahf
push
clc
(bad)
aas
and
jmp
lods
idiv
push
scas
cwde
(bad)
jmp
(bad)
out
aas
js
js
xchg
add
loop
push
fbld
pop
dec
pop
cld
outs
les
stc
daa
ds
push
call
int
mov
(bad)
in
jg
(bad)
call
mov
sub
aas
pushf
dec
and
inc
mov
aas
sahf
out
(bad)
mov
loop
aas
repnz
enter
mov
int3
pop
sub
dec
mov
add
pop
leave
sti
pop
test
add
neg
icebp
daa
dec
(bad)
out
aas
pushf
cld
cld
aas
clc
scas
cld
(bad)
lahf
(bad)
mov
mov
mov
push
mov
jecxz
xchg
jns
jl
div
fnstsw
ja
(bad)
idiv
(bad)
call
repz
push
cmp
pop
hlt
(bad)
jmp
call
call
jge
fist
dec
dec
cld
pmuludq
jg
lahf
jmp
int
(bad)
cld
dec
jmp
(bad)
scas
cmp
iret
inc
ds
icebp
jg
out
movs
repnz
aas
jg
aas
and
(bad)
cld
(bad)
mov
push
cmp
test
cmps
idiv
(bad)
frndint
call
fmulp
out
(bad)
jmp
(bad)
aas
jecxz
(bad)
mov
hlt
pop
js
fbld
cmp
xchg
pop
jle
jg
cmp
lahf
jmp
bsf
cld
jecxz
jg
(bad)
pop
sar
imul
scas
mov
std
inc
call
mov
xchg
(bad)
jmp
push
(bad)
sti
pop
xchg
(bad)
test
sti
movaps
repz
sti
dec
enter
hlt
repz
cmc
cmp
cmp
jge
cmc
iret
cld
fistp
fcomip
xchg
fistp
inc
div
out
cmp
xor
call
aas
and
leave
jae
test
(bad)
into
neg
stc
jg
(bad)
or
(bad)
idiv
ja
push
neg
and
(bad)
(bad)
push
js
(bad)
(bad)
(bad)
out
dec
ja
(bad)
jg
std
cld
imul
psllq
idiv
in
and
jg
cmovne
out
lahf
xchg
lahf
sub
jmp
inc
call
(bad)
(bad)
jmp
fsubrp
jmp
out
(bad)
sti
leave
call
mov
cmc
mov
icebp
pop
xlat
lahf
inc
call
sub
inc
clc
push
fucom
jne
call
jg
mov
int3
mov
(bad)
dec
mov
xchg
sahf
jmp
dec
aas
lock
mov
sti
stos
inc
cli
(bad)
inc
(bad)
(bad)
mov
fnstcw
out
(bad)
(bad)
pop
(bad)
jecxz
icebp
(bad)
(bad)
cmps
(bad)
loope
in
(bad)
(bad)
mov
out
(bad)
jg
cpuid
(bad)
push
repnz
(bad)
call
dec
popf
hlt
jg
scas
dec
ret
xor
(bad)
jmp
mov
xchg
iret
in
sub
mov
jmp
pop
(bad)
jmp
dec
(bad)
xlat
clc
aas
icebp
lds
out
std
xlat
les
xor
lahf
std
(bad)
nop
mov
cli
repz
xchg
push
std
pop
enter
jg
in
pop
adc
xchg
ret
call
jg
hlt
test
or
ja
xor
call
jmp
mov
push
(bad)
data16
outs
je
jg
aas
(bad)
sti
jg
(bad)
ud0
loope
loop
inc
pop
rcl
sti
jg
nop
cld
jnp
out
mov
(bad)
jmp
(bad)
fcomip
idiv
mov
push
ja
jg
fnstcw
(bad)
(bad)
(bad)
jge
loop
std
aas
inc
(bad)
jge
idiv
add
mov
repnz
jg
pop
sti
jg
and
cmc
push
(bad)
pop
icebp
mov
loope
imul
inc
push
outs
mov
jg
xor
hlt
stc
(bad)
cmp
call
mov
(bad)
push
aas
dec
std
pop
sbb
push
out
nop
push
(bad)
out
(bad)
idiv
jb
out
inc
xor
imul
out
sub
retf
(bad)
and
(bad)
aam
xlat
jmp
jno
loop
push
jg
fmul
mov
ret
push
jp
jne
call
mov
xor
arpl
in
movs
jg
cli
(bad)
jnp
(bad)
mov
mov
clc
inc
fs
add
add
dec
push
pop
adc
fdivrp
std
out
std
fwait
dec
(bad)
std
(bad)
ja
fnstsw
(bad)
push
jg
pop
push
(bad)
fistp
std
mov
aas
clc
jmp
mov
xor
repz
xor
(bad)
(bad)
jnp
call
(bad)
jmp
(bad)
jmp
sti
bswap
fsubr
xlat
std
fisttp
pop
icebp
clc
(bad)
cld
das
mov
aam
jg
test
std
lahf
std
sub
lahf
cld
int
(bad)
mov
mov
cmp
std
pop
adc
(bad)
jmp
or
xchg
sar
bnd
push
mov
mov
clc
pop
test
pop
stc
pop
mov
enter
aas
dec
cmp
out
jmp
(bad)
out
aad
add
jle
jmp
dec
mov
loope
int3
sub
int
stc
out
dec
(bad)
jecxz
and
ds
(bad)
mov
aas
sub
dec
jg
fdivr
mov
aaa
push
mov
std
xchg
push
mov
cmp
out
out
cmp
pop
push
clc
iret
(bad)
mov
repnz
ja
sbb
repz
xor
push
jle
cmp
repnz
mov
fisub
pop
fdivrp
(bad)
in
clc
popf
(bad)
dec
retf
iret
dec
sub
(bad)
mov
cmp
std
pop
cld
in
cmp
xor
push
fild
inc
test
hlt
outs
adc
sar
(bad)
call
fbld
inc
aaa
cld
push
cmp
sar
push
mov
(bad)
out
xor
inc
into
jg
lock
repz
push
jecxz
das
sub
dec
pop
cld
fisttp
xor
xchg
in
int3
mov
add
popa
pop
icebp
cmp
cmp
add
dec
cld
test
idiv
fnstsw
cs
jg
push
(bad)
cmp
push
mov
sub
sbb
das
arpl
(bad)
out
std
(bad)
bound
(bad)
paddusb
jge
clc
iret
(bad)
fnstsw
in
mov
mov
clc
pop
(bad)
pop
mov
(bad)
fild
inc
mov
retf
xchg
idiv
js
(bad)
inc
sahf
lock
mov
pop
jmp
enter
add
push
aas
jmp
cmc
mov
jmp
mov
aas
and
cld
das
xor
cwde
jae
repz
call
imul
cmp
retf
out
(bad)
inc
jp
icebp
xlat
dec
aas
mov
sbb
out
add
and
in
or
mov
repnz
jl
retf
mov
stc
mov
in
xchg
fbstp
scas
(bad)
in
aas
and
std
scas
mov
cld
lock
mov
dec
movs
rol
pop
stc
xlat
jne
inc
call
mov
xchg
(bad)
in
mov
out
cmp
clc
(bad)
jg
out
(bad)
shl
out
addr16
std
cld
(bad)
xor
stc
dec
es
or
sbb
in
jmp
ins
ret
xor
sbb
int
(bad)
cld
das
test
dec
inc
aas
and
loope
dec
hlt
call
(bad)
jns
or
mov
repz
push
cli
std
aas
stc
fist
mov
(bad)
call
mov
sar
cld
ins
sub
nop
xlat
sar
call
stc
stc
pop
push
(bad)
call
cwde
arpl
out
movs
int3
or
inc
inc
(bad)
icebp
sbb
sti
dec
and
fcomi
test
sub
popa
cld
(bad)
jg
(bad)
jnp
jmp
ds
jge
sbb
scas
clc
test
into
jg
xlat
xor
(bad)
jg
idiv
std
jg
or
mov
sub
clc
std
out
xchg
fcomip
(bad)
(bad)
cld
out
xchg
(bad)
jmp
std
fbld
mov
js
aas
push
jge
cmp
mov
xor
idiv
pop
adc
(bad)
out
test
xchg
cmp
pop
add
test
and
mov
aas
cld
mov
out
aas
sub
sub
mov
cmps
xor
sbb
jae
idiv
movs
mov
or
std
pop
sar
test
mov
adc
(bad)
cmp
mov
call
std
(bad)
pop
ror
push
scas
movs
lahf
xor
jmp
mov
call
mov
(bad)
jmp
jo
scas
mov
cli
pop
gs
xor
sub
stc
jg
js
out
jb
sahf
out
(bad)
clc
das
aam
cld
mov
les
sbb
call
stc
jg
scas
hlt
repz
mov
call
pop
(bad)
cmp
jnp
xchg
int3
mov
(bad)
mov
ret
std
daa
or
std
jg
mov
stc
std
mov
jg
fs
xor
scas
adc
xor
push
fbld
sbb
adc
ins
inc
jmp
cdq
out
xchg
std
sbb
cmps
std
sbb
adc
out
pop
(bad)
outs
mov
push
mov
aas
mov
jns
iret
call
dec
jge
fdivrp
rcr
cs
jmp
jecxz
es
std
fwait
xor
(bad)
cli
pop
cli
jg
(bad)
jmp
sti
(bad)
(bad)
mov
xor
aas
std
std
outs
jmp
jg
jae
out
shl
(bad)
pop
dec
call
lahf
inc
jge
pop
(bad)
aad
repz
adc
xchg
jmp
std
(bad)
jg
iret
or
(bad)
(bad)
jg
sub
jmp
out
call
jns
clc
idiv
outs
test
cwde
(bad)
popa
out
(bad)
gs
arpl
jae
sti
jg
jg
stc
jge
popf
lock
jle
jge
mov
int3
(bad)
xlat
mov
sar
cmp
mov
(bad)
(bad)
out
(bad)
cwde
fwait
jg
(bad)
(bad)
aas
cld
or
aaa
jle
push
int3
fnstcw
dec
retf
(bad)
jg
jae
out
adc
ds
clc
ud0
in
in
call
mov
mov
(bad)
mov
ret
sahf
rcl
inc
popf
jg
outs
cli
jmp
push
jmp
(bad)
aas
shl
push
test
loope
les
dec
inc
jmp
push
out
jg
jo
xlat
dec
push
push
(bad)
(bad)
(bad)
mov
(bad)
jmp
(bad)
idiv
mov
call
hlt
(bad)
jg
das
adc
clc
mov
das
(bad)
ins
cli
std
fbld
pop
(bad)
(bad)
out
(bad)
movs
mov
lock
(bad)
and
in
inc
mov
loopne
add
mov
mov
stc
clc
(bad)
(bad)
cli
(bad)
outs
(bad)
popa
mov
ror
jg
push
sbb
out
(bad)
sbb
jecxz
dec
shr
mov
hlt
jmp
stc
lahf
(bad)
push
mov
mov
add
imul
add
hlt
out
dec
int
aaa
int
dec
je
(bad)
std
jg
out
mov
jmp
(bad)
daa
test
jmp
aas
sub
jmp
xchg
mov
mov
std
out
adc
out
pop
and
icebp
(bad)
jg
mov
or
(bad)
(bad)
mov
in
lock
arpl
out
dec
outs
clc
mov
jno
cmp
hlt
das
or
call
call
inc
sub
jmp
cli
daa
gs
mov
call
hlt
jg
stc
out
adc
int
cmc
jmp
int
aas
jmp
(bad)
(bad)
idiv
sti
addr16
(bad)
idiv
repz
push
jle
repz
icebp
add
das
shl
jmp
out
test
pop
aas
cld
test
dec
ror
jg
das
push
sbb
bound
mov
jl
jg
das
xchg
fbstp
push
int3
das
jg
lock
lea
clc
and
retf
mov
(bad)
cmc
iret
or
int3
sti
mov
sbb
call
push
inc
fild
jb
pop
rcr
call
idiv
stc
mov
inc
mov
paddd
loopne
push
add
cld
push
push
clc
scas
(bad)
push
loope
jmp
pop
xchg
stc
xchg
(bad)
fild
(bad)
retf
in
(bad)
out
pop
sub
call
adc
icebp
jg
cmp
loopne
mov
push
cmp
imul
out
call
inc
scas
pusha
ja
sub
mov
ja
(bad)
(bad)
push
mov
std
test
mov
call
cmc
cmc
scas
sar
inc
mov
imul
(bad)
mov
(bad)
(bad)
mov
(bad)
dec
(bad)
(bad)
jmp
lahf
daa
ds
xchg
rol
shl
cld
pop
mov
(bad)
out
pop
es
out
cld
movs
ret
or
call
add
adc
data16
mov
neg
jl
fisttp
pop
shl
xlat
jg
enter
std
std
pop
jg
int3
cmp
clc
aaa
mov
jg
dec
or
mov
sti
idiv
mov
cld
(bad)
jmp
mov
mov
mov
dec
pop
stos
repz
rcr
test
pop
out
aas
inc
(bad)
pop
inc
(bad)
call
scas
adc
add
cld
inc
movs
lahf
(bad)
mov
js
xor
out
imul
cmp
aas
dec
fild
mov
cwde
iret
popa
iret
push
xchg
jmp
out
and
cld
or
shl
pop
movs
(bad)
call
test
mov
jecxz
jl
das
adc
cmp
call
int
aas
mul
std
(bad)
idiv
cli
daa
leave
iret
jg
(bad)
dec
leave
mov
(bad)
pop
in
jg
jl
(bad)
call
jg
iret
adc
ret
aas
das
jno
fistp
pop
in
xchg
jmp
(bad)
ficomp
repz
leave
cmp
pushf
std
add
(bad)
ficomp
out
mov
cld
daa
lds
(bad)
jl
mov
std
(bad)
jmp
cmp
jecxz
addr16
push
in
mov
(bad)
(bad)
out
mov
(bad)
jge
js
stc
aaa
iret
jg
das
sar
dec
aad
dec
mov
push
inc
xchg
(bad)
sub
inc
test
xor
inc
das
pusha
sahf
and
shr
cwde
(bad)
jg
clc
stc
fild
paddb
retf
idiv
cmc
(bad)
popf
jg
std
cld
jg
(bad)
adc
adc
add
pop
mov
xor
(bad)
(bad)
sub
fstp
adc
adc
out
jmp
iret
mov
lock
iret
(bad)
jns
out
(bad)
call
(bad)
enter
call
push
pushf
(bad)
icebp
(bad)
loop
cli
(bad)
aas
dec
jg
xchg
hlt
(bad)
jg
(bad)
test
hlt
(bad)
jg
js
pop
and
push
lahf
cs
or
ds
cld
mov
cmp
jl
dec
call
(bad)
mov
adc
sub
das
fiadd
(bad)
(bad)
mov
pop
out
pop
stc
xor
dec
cdq
pop
cld
int
pop
dec
loopne
loopne
cmps
retf
(bad)
jg
je
int
mov
and
dec
pop
inc
hlt
cli
jecxz
pop
mov
adc
call
jg
loopne
mov
clc
sbb
jge
lahf
lock
xchg
pushf
cld
jnp
popf
into
std
pop
and
(bad)
jg
clc
out
sub
dec
hlt
pop
pusha
sub
xchg
jle
push
call
xlat
mov
stc
cmps
leave
iret
jg
(bad)
(bad)
xchg
dec
into
push
repz
push
fwait
jg
js
lahf
daa
sbb
call
xchg
jnp
cli
aas
inc
js
ret
jg
std
dec
push
xchg
(bad)
dec
retf
add
sbb
fcomp
sub
loopne
loopne
les
adc
and
popf
sbb
jl
sti
or
arpl
mov
pop
lock
push
mov
adc
ja
shl
jno
jecxz
ja
aas
out
repz
int
stc
int3
jle
cmp
mov
(bad)
jmp
push
clc
mov
call
push
jg
pop
mov
mov
(bad)
(bad)
mov
push
(bad)
push
lahf
and
mov
or
push
outs
adc
xor
aas
es
aas
clc
jmp
outs
(bad)
out
(bad)
fnstsw
add
pop
hlt
ror
mov
ja
es
gs
sar
dec
jg
clc
call
cli
sbb
stc
test
aam
mov
inc
fstp
push
mov
in
jg
(bad)
xchg
idiv
and
ret
aas
cld
inc
or
mov
jge
dec
adc
jg
(bad)
dec
sar
mov
add
push
aas
dec
cmp
outs
pop
mov
mov
out
and
mov
inc
pop
call
cmp
mov
repnz
sti
and
call
dec
xor
int3
cmp
lahf
std
or
sti
sti
pop
clc
adc
outs
repz
cld
(bad)
addr16
(bad)
aas
js
jmp
loop
mov
push
fcomip
pop
(bad)
(bad)
neg
sti
pop
sub
cld
push
inc
xor
test
(bad)
xchg
(bad)
call
pushf
call
xchg
cmp
sub
clc
inc
jg
jle
addr16
sub
jae
jmp
mov
jmp
call
jg
lock
aas
stc
(bad)
mov
xor
paddd
xchg
jmp
lahf
stc
mov
into
rcr
clc
lahf
sub
clc
aas
jle
mov
push
(bad)
pop
inc
mov
or
retf
aas
xor
sub
fnstsw
inc
out
push
out
(bad)
jmp
ja
dec
stc
pop
std
and
sti
xlat
mov
xchg
adc
pop
stc
pop
(bad)
fistp
and
xor
mov
call
inc
das
sbb
jle
sahf
stc
sti
inc
inc
dec
(bad)
ja
(bad)
sbb
pop
cld
imul
add
leave
jg
dec
adc
stc
pop
call
shl
out
cld
sti
cmp
mov
call
out
call
(bad)
std
ja
loopne
(bad)
mov
cli
loopne
and
sar
inc
aas
mov
stc
xchg
std
mov
(bad)
mov
inc
in
std
mov
jg
lds
and
out
call
mov
dec
inc
ins
(bad)
sti
jg
loop
lock
std
add
out
mov
mov
ja
daa
cmc
icebp
idiv
popa
cmp
movs
repnz
out
aas
inc
xor
inc
je
inc
cld
pop
mov
fstp
stc
sbb
std
inc
test
call
ror
jg
(bad)
dec
(bad)
adc
cli
dec
in
bound
mov
inc
mov
(bad)
idiv
sub
aas
clc
and
inc
mov
cld
lahf
jae
push
mov
rcl
loopne
lods
fbld
into
(bad)
iret
(bad)
stc
fist
jg
(bad)
repz
push
(bad)
jg
dec
xchg
clc
push
mov
add
iret
std
xor
div
pop
fs
mov
mov
call
jmp
sti
(bad)
(bad)
fwait
call
jmp
and
and
cmp
das
es
cmp
xor
cmp
sti
(bad)
retf
and
shl
aas
(bad)
(bad)
cmps
iret
call
mov
cld
call
or
(bad)
(bad)
sbb
dec
bound
xlat
aas
adc
jg
clc
out
dec
dec
mov
out
clc
sbb
sahf
cli
cld
mov
mov
(bad)
(bad)
mov
fisttp
repz
inc
repnz
pop
(bad)
jmp
xchg
push
cmp
xor
(bad)
(bad)
dec
test
hlt
aas
cld
push
clc
loop
mov
mov
mov
jg
dec
add
or
add
push
enter
setge
pop
mov
clc
pop
dec
fbld
cmp
jmp
pop
movs
cmp
popf
idiv
(bad)
jmp
mov
icebp
scas
call
xchg
mov
or
jmp
test
cld
sub
push
sar
jmp
dec
xchg
mov
call
(bad)
jmp
mov
jl
ret
sub
(bad)
(bad)
mov
std
(bad)
(bad)
sar
cmp
lahf
and
mov
fs
adc
push
sbb
sti
dec
adc
fcomip
mov
sar
hlt
jmp
push
out
ja
(bad)
mov
cmps
mov
jg
(bad)
dec
icebp
rcr
mov
and
xor
nop
jge
sbb
xlat
jg
das
push
pop
cld
daa
stos
outs
inc
(bad)
call
adc
pop
out
xchg
arpl
mov
scas
stc
aaa
dec
cld
mov
lods
and
dec
xchg
jmp
stc
outs
std
fistp
xchg
xor
aaa
mov
jmp
(bad)
cmps
mov
mov
jg
dec
xchg
(bad)
das
call
mov
outs
push
mov
aas
dec
hlt
stc
cmps
mov
jg
setne
sar
call
pop
and
enter
jg
lock
dec
(bad)
aas
jl
dec
(bad)
cmc
mov
sti
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
dec
dec
jae
jl
mov
jl
pop
xlat
mov
push
dec
scas
mov
idiv
and
jmp
sti
fist
movs
ret
call
ins
jl
aaa
push
mov
inc
mov
cmc
stc
mov
mov
xlat
push
bnd
(bad)
(bad)
retf
inc
shl
enter
jg
sar
iret
xchg
mov
mov
loope
int3
pop
jg
rol
cwde
push
in
loopne
inc
pop
rcl
ins
xor
add
sti
inc
inc
outs
pusha
scas
pusha
jecxz
retf
inc
mov
loopne
(bad)
call
out
add
call
sti
and
xchg
retf
mov
push
jle
psubsb
in
xchg
push
loope
xchg
mov
into
pop
es
and
xor
leave
(bad)
fist
int3
mov
(bad)
push
sbb
pop
push
sar
out
idiv
std
push
ja
jg
push
mov
(bad)
jne
gs
inc
xchg
ds
jmp
(bad)
pop
lahf
loope
pop
cmp
push
xchg
ret
int3
out
jg
inc
dec
repz
xchg
ret
adc
ret
out
cli
bound
cmp
hlt
stc
fild
std
sbb
xor
mov
loop
aas
inc
in
pop
clc
jecxz
(bad)
clc
std
pop
es
clc
push
jmp
loopne
dec
inc
daa
inc
and
and
xchg
mov
lock
mov
pushf
mov
ret
outs
xchg
mov
adc
pop
cmps
(bad)
dec
cli
(bad)
aas
inc
cli
call
inc
scas
in
jg
aas
sbb
lods
xchg
std
cmp
lahf
cs
shl
(bad)
dec
(bad)
cdq
(bad)
cld
fwait
(bad)
jg
stc
inc
mov
dec
cmc
cmps
(bad)
(bad)
mov
pop
in
sti
out
mov
call
(bad)
stos
jb
or
call
and
pop
nop
sti
jmp
and
ins
and
std
(bad)
aam
outs
test
mov
adc
nop
mov
mov
pop
imul
pop
and
call
call
sbb
inc
(bad)
sbb
int3
jmp
sti
xchg
push
mov
sti
jmp
and
hlt
dec
jg
jae
jne
jg
iret
pop
sahf
sub
cmps
jg
mov
xlat
(bad)
jmp
imul
dec
cld
adc
pop
clc
sub
inc
shl
pop
inc
(bad)
cmp
mov
jg
int3
(bad)
mov
inc
(bad)
(bad)
mov
lahf
jmp
outs
outs
(bad)
jmp
shl
jg
pop
lock
jg
cmp
sub
call
aad
call
call
dec
pop
stc
inc
dec
faddp
(bad)
call
(bad)
scas
das
test
(bad)
out
cld
add
pop
sub
inc
pop
sub
enter
rol
cld
pop
sub
daa
inc
cs
jg
ja
pop
out
aas
call
int
(bad)
cld
dec
(bad)
out
aas
call
(bad)
outs
pop
jmp
das
dec
aaa
cld
cmp
inc
lahf
cs
aas
std
fwait
call
xchg
nop
out
add
inc
(bad)
inc
pop
jmp
inc
je
aas
dec
repz
cld
pop
jg
lock
xlat
dec
sub
div
sbb
jg
pop
call
pop
retf
rep
(bad)
jmp
repz
pop
std
lds
call
push
cld
push
and
clc
std
in
jg
dec
icebp
push
dec
xchg
wrmsr
mov
ret
repz
ss
jg
(bad)
pop
out
cld
aad
stc
call
out
std
or
aas
inc
repz
outs
(bad)
adc
cli
sti
pop
std
push
inc
out
addr16
jmp
cld
retf
inc
jmp
mov
mov
jno
jg
(bad)
call
ds
cmc
inc
lds
dec
jge
ins
call
rol
das
cld
iret
imul
stc
pop
hlt
cmp
std
daa
jg
js
push
out
pop
es
dec
inc
(bad)
jmp
and
(bad)
ins
mov
pop
ja
mov
(bad)
cld
pop
jg
call
rol
retf
cli
jmp
out
out
scas
xor
fstp
jnp
fdivr
jmp
cli
jge
(bad)
jg
dec
leave
(bad)
call
cli
call
cmp
pop
inc
jl
push
fs
xor
or
jg
jge
sti
sub
cld
mov
pop
dec
(bad)
adc
pop
inc
out
std
in
lods
lods
jne
lahf
add
lea
sub
jb
loope
mov
inc
out
pop
and
mov
and
dec
pop
dec
in
(bad)
push
mov
and
call
jg
(bad)
jmp
(bad)
sti
pop
addr16
stos
rcr
hlt
(bad)
jg
loopne
jnp
out
mov
cld
mov
lock
sub
(bad)
call
push
in
ret
pop
push
mov
rol
pop
xor
rol
jecxz
pop
(bad)
repz
outs
dec
(bad)
mov
xor
aas
dec
iret
retf
or
pop
lock
cld
jmp
cld
dec
idiv
mov
les
jg
out
and
cmp
dec
fwait
(bad)
jmp
mov
(bad)
neg
push
mov
cli
call
(bad)
in
(bad)
js
scas
movs
stc
(bad)
mov
jne
(bad)
cld
pop
xchg
cld
in
lock
xchg
dec
inc
dec
mov
sub
jg
jecxz
jg
dec
and
sti
hlt
into
jg
mov
inc
xlat
dec
enter
dec
call
and
scas
and
repz
daa
jle
aaa
(bad)
push
cdq
out
nop
jl
jg
(bad)
dec
cs
jg
jl
das
std
sar
jg
inc
(bad)
ficomp
(bad)
(bad)
out
adc
(bad)
lahf
std
jg
xchg
loop
icebp
jg
das
dec
push
int
(bad)
(bad)
pop
(bad)
(bad)
neg
(bad)
push
jle
(bad)
jmp
mov
clc
or
call
pop
cdq
retf
mov
icebp
jg
std
pop
std
movs
int3
cmp
add
icebp
mov
ffreep
idiv
dec
cld
repnz
int3
sub
cld
sub
xchg
add
nop
jl
(bad)
clc
das
sar
hlt
(bad)
jg
out
lahf
mov
daa
nop
fcomip
out
cld
stc
repnz
jg
in
aas
(bad)
stos
inc
idiv
pop
dec
mov
(bad)
stos
call
jg
pusha
(bad)
adc
repz
cmp
es
jmp
pop
inc
repnz
pop
mov
hlt
idiv
dec
jp
lahf
std
inc
les
inc
cld
push
mov
repnz
or
cmp
out
push
(bad)
(bad)
js
int
xchg
push
pop
jle
fcmovne
(bad)
fild
cmc
addr16
jae
call
repnz
aas
inc
(bad)
jmp
jle
jl
ficomp
loopne
enter
iret
jnp
inc
mov
popf
or
clc
sub
mov
mov
sahf
mov
out
imul
aad
iret
les
mov
es
lock
add
call
cld
fld
mov
(bad)
idiv
(bad)
call
xchg
int3
inc
(bad)
push
jns
jmp
lahf
adc
icebp
retf
jmp
mov
outs
push
aas
call
fild
mov
out
cli
jge
test
sti
das
push
sti
(bad)
cmp
sar
jl
iret
cld
adc
or
call
push
clc
xchg
(bad)
js
cmc
dec
and
cmp
(bad)
pop
std
jg
xchg
cli
aas
sbb
mov
(bad)
(bad)
fidivr
out
(bad)
(bad)
mov
idiv
aas
repz
ins
fdivp
(bad)
jg
ja
cs
dec
jp
mov
jg
jae
cld
lock
cld
(bad)
addr16
pop
pop
sti
out
call
in
js
mov
inc
retf
nop
mov
jg
out
lahf
clc
mov
or
icebp
sar
icebp
cmp
cmp
lahf
and
inc
mov
jmp
std
(bad)
out
pop
cmps
out
dec
paddb
push
aas
mov
pop
mov
(bad)
mov
pop
std
lahf
call
mov
aas
pop
ins
(bad)
jg
psubsb
shl
rcr
dec
xor
(bad)
jmp
scas
sar
dec
jg
enter
dec
lds
clc
out
inc
cli
stc
dec
movs
cmp
cld
call
arpl
out
push
lahf
sti
fwait
jp
outs
(bad)
push
out
iret
std
mov
fcos
cmp
jmp
cs
call
(bad)
jg
repnz
fsubp
cli
(bad)
fdivr
clc
cld
fucomi
jge
adc
add
mov
and
sti
(bad)
cld
adc
aaa
scas
dec
cld
ret
mov
cmps
test
xchg
xchg
sahf
push
and
pop
cld
test
sbb
stc
pop
nop
mov
bnd
(bad)
cmp
hlt
lahf
mov
(bad)
cmp
jns
(bad)
out
pop
and
(bad)
mov
iret
(bad)
cmp
sub
ins
icebp
daa
(bad)
repz
xchg
lods
clc
arpl
push
test
in
lahf
stc
movs
les
aas
and
das
std
push
repnz
ud0
mov
mov
repz
sar
aam
(bad)
out
std
call
ins
not
repz
icebp
jg
jae
mov
std
test
ds
repz
in
cld
std
dec
pop
pop
push
jle
je
fild
div
cmp
out
jle
mov
idiv
scas
rcr
jg
les
(bad)
lahf
and
outs
cld
leave
mov
dec
jno
mov
cld
iret
sar
xlat
and
dec
loop
sub
iret
nop
pop
clc
pextrw
aaa
cld
adc
mov
hlt
lahf
xchg
mov
mov
jg
call
hlt
outs
adc
cli
das
call
or
pop
pop
lock
ss
icebp
xchg
(bad)
loope
repz
repnz
fwait
(bad)
jg
cld
(bad)
fnstsw
(bad)
std
jg
dec
mov
jmp
fwait
(bad)
call
cmps
sbb
(bad)
fcmovne
cmc
push
(bad)
aas
xchg
fdivrp
ror
sar
mov
(bad)
fcom
daa
hlt
repz
and
clc
sub
cld
mov
inc
jns
fild
cmp
xor
jg
xlat
dec
mov
xor
mov
clc
fld
dec
mov
jmp
dec
loop
out
xchg
jge
push
fnstcw
cmps
(bad)
jmp
push
std
fwait
in
sar
dec
int
jg
mov
cmp
jmp
and
bnd
(bad)
loop
dec
push
jmp
push
(bad)
cmp
inc
scas
or
(bad)
sub
fistp
jecxz
idiv
dec
(bad)
aas
sar
fwait
mov
aas
add
xchg
or
lahf
inc
cld
lock
or
ror
jg
push
loop
shr
jg
mov
pop
sahf
push
sahf
sub
clc
xchg
jle
out
(bad)
fcomp
cs
(bad)
jg
setae
(bad)
mov
cld
(bad)
(bad)
fisttp
dec
jl
mov
push
les
fs
mov
inc
cld
mov
fscale
(bad)
call
mov
call
daa
fwait
lock
adc
jae
pop
jle
mov
jmp
and
jg
mov
fild
cld
fstp
icebp
rcr
jg
inc
stos
jmp
(bad)
jp
dec
cmp
(bad)
pop
cld
mov
(bad)
(bad)
jg
in
inc
out
push
ret
iret
out
sub
and
add
ret
lahf
jle
mov
clc
loope
and
or
cmp
push
fdivr
(bad)
call
mov
pop
xlat
movs
jecxz
test
sti
sbb
sbb
out
dec
jmp
jge
mov
cld
dec
das
jmp
push
mov
(bad)
call
cli
cld
lahf
mov
nop
dec
and
clc
dec
inc
pop
inc
paddb
mov
push
push
sub
idiv
xchg
mov
mov
(bad)
mov
mov
das
(bad)
mov
outs
stc
mov
in
jmp
(bad)
call
mov
dec
(bad)
cmp
call
out
aas
mov
(bad)
out
call
clc
mov
call
mov
cmps
(bad)
(bad)
jmp
jnp
mov
sti
aas
std
sti
dec
lahf
cmc
jg
cmps
inc
aas
inc
aas
fwait
(bad)
call
std
pop
aas
jmp
inc
(bad)
sti
aas
stc
xchg
out
jg
das
clc
mov
das
sti
mov
das
mov
(bad)
aas
inc
lahf
jmp
clc
std
iret
out
jmp
jg
iret
std
mov
das
cld
mov
outs
clc
mov
pop
clc
mov
pop
cld
mov
pop
movs
lahf
push
std
cld
(bad)
(bad)
out
(bad)
clc
(bad)
cmps
(bad)
out
(bad)
clc
(bad)
out
out
(bad)
clc
aas
cli
xlat
jmp
std
pop
std
xchg
jmp
imul
cld
(bad)
sar
call
jg
jmp
bnd
(bad)
int
cld
scas
fdivr
out
repnz
(bad)
push
cmc
jg
jmp
fdivrp
(bad)
jmp
(bad)
clc
aas
outs
cld
jmp
lock
(bad)
sti
(bad)
(bad)
mov
std
stos
pop
xor
jg
fbld
repnz
push
(bad)
(bad)
jg
pop
call
call
clc
adc
(bad)
cmp
fcmovne
push
leave
pop
fwait
js
jmp
rcl
ins
loop
outs
add
(bad)
jmp
int3
std
aaa
leave
add
outs
rol
jl
popf
(bad)
sti
imul
(bad)
jg
dec
jae
stc
jmp
stc
loopne
(bad)
rcr
jnp
(bad)
call
(bad)
jae
mov
jmp
jg
out
mov
ja
sbb
hlt
sbb
out
mov
fimul
call
aas
mov
jmp
movsx
paddb
call
out
mov
in
jg
pop
out
pop
(bad)
(bad)
scas
dec
mov
lahf
jno
xchg
jg
sahf
outs
adc
ins
out
jge
jg
ds
adc
cli
cmp
aas
int
pop
inc
repz
cmp
lahf
cld
leave
pop
fwait
clc
loopne
mov
call
(bad)
(bad)
jmp
xor
mov
jmp
mov
scas
inc
mov
out
(bad)
sti
(bad)
cmp
add
add
cli
jmp
(bad)
jmp
hlt
(bad)
call
pop
jae
fwait
std
xchg
mov
pushf
pushf
cld
cmp
jg
fcomip
xlat
and
clc
mov
cs
mov
retf
retf
(bad)
(bad)
jg
pop
jmp
in
dec
jl
push
jg
push
stc
cld
xlat
cli
fdivp
mov
stc
repnz
cmp
cmp
xor
out
iret
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
ds
xor
out
iret
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
pop
cmp
jl
iret
(bad)
fnstsw
mov
cli
ror
jp
hlt
cld
call
repz
test
call
mov
aas
jp
mov
pop
inc
(bad)
inc
retf
pop
std
imul
clc
sub
dec
xchg
pop
jmp
cld
or
aaa
cli
lea
pop
sti
aaa
dec
dec
cli
(bad)
fmul
sbb
push
mov
cld
es
cmp
mov
jmp
mov
sar
jg
std
jg
inc
(bad)
call
aas
push
inc
mov
call
shr
hlt
cmp
cli
hlt
test
pop
cld
call
pop
lea
pop
dec
jle
fucomip
xlat
call
aaa
cli
pop
jle
(bad)
stc
push
mov
(bad)
cli
mov
(bad)
lahf
jg
adc
(bad)
call
repnz
dec
jmp
repz
(bad)
(bad)
jg
(bad)
in
out
mov
dec
jmp
retf
push
jg
(bad)
jmp
(bad)
call
(bad)
cld
aas
dec
push
(bad)
jmp
outs
std
jg
idiv
icebp
jg
pop
sbb
(bad)
dec
sti
push
aas
cld
psubb
jmp
jg
(bad)
idiv
mov
inc
(bad)
(bad)
das
es
aas
and
cld
es
call
xor
std
fstp
pop
cld
mov
mov
jmp
idiv
cli
(bad)
jmp
(bad)
(bad)
aaa
dec
inc
(bad)
iret
(bad)
sti
mov
loopne
cli
aas
jle
(bad)
aad
cmc
pop
std
pop
cli
xchg
jg
lahf
push
jg
pop
(bad)
xchg
call
std
pop
aas
(bad)
out
jmp
mov
jmp
sti
aas
dec
push
dec
repnz
cli
repz
dec
(bad)
mov
in
call
lahf
cld
mov
sar
hlt
aas
in
std
dec
aas
stc
ja
stc
jg
daa
dec
jg
fidivr
mov
outs
hlt
rol
stc
hlt
mov
push
mov
in
call
div
dec
loopne
dec
jnp
jg
jge
jg
jnp
jg
jns
jg
jge
jg
ja
dec
fdivrp
xchg
(bad)
jmp
popf
pop
dec
pop
jle
call
cli
call
sbb
icebp
(bad)
xchg
inc
clc
jb
xchg
add
fist
jl
idiv
in
jge
add
and
xor
mov
jg
fs
mov
or
pop
jg
out
jmp
mov
cmc
adc
scas
aas
jnp
shl
mov
mov
jne
outs
jle
or
sti
jg
std
lahf
sti
pop
inc
cmp
mov
jmp
clc
mov
dec
ror
jg
out
(bad)
sub
scas
jg
out
stc
stos
clc
(bad)
inc
mov
jmp
(bad)
aas
dec
(bad)
xchg
jg
pop
leave
lahf
std
jecxz
daa
std
lahf
jg
in
(bad)
jg
aas
jmp
clc
retf
(bad)
scas
jg
out
cmps
mov
fistp
jg
push
cld
(bad)
mov
(bad)
(bad)
mov
(bad)
mov
imul
inc
fcomip
push
call
add
stc
(bad)
jmp
xor
rcr
jg
pop
idiv
and
pop
retf
repz
pop
cld
pop
stc
out
div
xchg
call
aas
std
paddd
jg
jecxz
iret
pop
dec
in
(bad)
jp
sti
aaa
shr
jg
push
(bad)
shl
enter
std
pop
dec
fcomip
xchg
std
pop
push
(bad)
xchg
push
mov
rcl
iret
aas
cli
ja
push
call
aas
cli
ja
aad
(bad)
lahf
cli
pop
(bad)
(bad)
(bad)
jmp
cld
sti
or
fild
cld
inc
jg
push
(bad)
std
pop
jg
std
jmp
cli
(bad)
pop
cld
addr16
sar
jmp
std
(bad)
(bad)
out
(bad)
jmp
mov
div
jne
(bad)
outs
mov
cmc
(bad)
push
pop
(bad)
in
aas
div
std
pop
(bad)
cld
aas
stc
paddw
fdivr
stc
paddb
retf
iret
(bad)
pop
(bad)
jmp
sar
sti
dec
cld
pop
call
jg
pop
push
jmp
dec
lahf
xlat
ds
mov
push
pop
xlat
sti
push
pop
jbe
lock
dec
pop
push
pop
fidivr
cld
mov
push
pop
rcr
(bad)
mov
cli
mov
pop
jg
cli
sar
std
xchg
pop
ds
mov
call
pop
icebp
out
icebp
(bad)
std
push
std
int3
sar
sti
outs
clc
ret
pop
cld
pop
jg
pop
hlt
in
(bad)
sti
scas
(bad)
cdq
xchg
(bad)
sti
scas
cld
shl
cmc
push
pop
pop
std
fistp
das
cmps
fistp
(bad)
jmp
mov
mov
mov
xchg
fidivr
cld
mov
in
(bad)
sti
scas
std
cmp
jg
das
movs
test
aas
stc
mov
stc
(bad)
std
aaa
call
fild
(bad)
jmp
clc
ret
pop
(bad)
fild
xlat
loopne
aas
in
in
std
aaa
push
ja
leave
sar
jmp
sti
ret
pop
(bad)
fistp
pop
clc
popf
(bad)
sti
scas
sti
inc
mov
aas
in
sar
(bad)
out
mov
scas
mov
(bad)
rcr
aas
cli
cmps
(bad)
out
mov
out
mov
pop
jg
lahf
xor
mov
idiv
mov
psubb
clc
mov
pop
push
fisttp
push
jg
lahf
clc
jg
or
lahf
std
jg
std
jg
in
cmc
paddd
(bad)
out
mov
out
jg
scas
jmp
out
dec
out
jg
out
clc
xor
out
jg
outs
sti
sar
scas
mov
pushf
aas
cmps
cli
mov
scas
(bad)
mov
iret
cld
mov
xchg
(bad)
pop
(bad)
fcomp
pop
std
(bad)
rcr
repz
(bad)
int3
fcomip
cmps
cld
pop
clc
in
pop
cmps
(bad)
in
jg
outs
cli
mov
scas
clc
mov
fistp
(bad)
lahf
jg
das
std
repnz
(bad)
sub
fwait
imul
mov
stos
jbe
out
mov
mov
out
(bad)
fistp
jne
(bad)
cli
or
movs
mov
call
pop
hlt
mov
xor
neg
cmp
fistp
das
jp
jg
add
(bad)
jmp
jg
pop
hlt
sbb
dec
sahf
(bad)
pop
jg
das
jns
mov
std
mov
scas
cmps
(bad)
stos
pop
jb
jg
dec
jg
dec
(bad)
fistp
pop
cli
cmp
cld
(bad)
cli
mov
sti
scas
daa
pop
jmp
jg
in
jg
out
dec
xor
std
(bad)
out
mov
jg
jne
call
cli
daa
cld
mov
xlat
fcomip
daa
(bad)
jle
neg
cld
(bad)
jl
(bad)
(bad)
cmp
movs
in
(bad)
cli
jnp
lods
mov
neg
icebp
cmps
pop
cld
pop
jg
lahf
(bad)
fistp
out
sti
jae
call
aas
clc
pop
aam
neg
std
addr16
hlt
(bad)
std
ja
sbb
std
jg
jge
dec
stc
jg
cmp
(bad)
(bad)
jnp
lods
and
inc
mov
jmp
jg
das
mov
outs
call
mul
(bad)
and
cmc
jg
popf
jg
(bad)
paddd
xlat
call
aas
not
and
idiv
push
aas
div
dec
out
push
aas
not
sar
sti
pop
std
retf
jmp
(bad)
jmp
cli
dec
jle
(bad)
std
iret
std
ins
jg
(bad)
std
iret
dec
loop
cmc
scas
sar
jg
paddd
jg
scas
std
mov
out
clc
jae
(bad)
jmp
lods
jmp
aad
cld
cmc
xchg
(bad)
sti
das
pop
mov
scas
aas
mul
pop
pop
mov
pop
pop
(bad)
fistp
dec
je
(bad)
pop
mov
out
aas
lahf
(bad)
call
scas
out
call
(bad)
jb
(bad)
dec
mov
lds
jns
mov
jnp
fistp
sti
pop
lahf
adc
jle
mov
mov
(bad)
sti
scas
stc
cmp
cmp
stos
dec
dec
(bad)
cli
aas
hlt
stc
push
xlat
jmp
(bad)
fistp
pop
cli
repnz
cli
pop
(bad)
mov
sbb
mov
push
fcomip
inc
mov
aas
mul
(bad)
cmc
mov
jno
iret
(bad)
std
mov
mov
psrlw
idiv
mov
stos
(bad)
sti
outs
add
mov
push
mov
icebp
(bad)
mov
fcomip
(bad)
(bad)
notrack
(bad)
daa
push
(bad)
cmps
sahf
call
std
pop
icebp
jmp
cld
mov
jnp
(bad)
xchg
or
(bad)
jmp
cli
arpl
inc
out
jmp
scas
retf
pop
clc
repz
inc
stos
(bad)
jmp
stc
jae
sar
std
ja
test
push
jg
pop
jo
jg
jge
jle
ins
xchg
push
mov
and
push
call
aas
hlt
pop
jmp
(bad)
(bad)
jnp
lods
(bad)
ja
cdq
in
cmc
(bad)
push
paddb
push
aas
icebp
push
call
sti
pop
cmc
jg
sub
pop
dec
xor
pop
(bad)
pop
(bad)
fcomp
lock
std
(bad)
out
mov
fucomp
(bad)
jmp
jg
cli
loopne
cli
sub
dec
mov
jnp
pop
les
jbe
(bad)
cli
stos
jle
sbb
inc
jp
(bad)
cli
stos
jle
leave
inc
aas
dec
pop
std
pop
jg
jmp
js
jg
gs
fucom
(bad)
jmp
inc
dec
jmp
int3
retf
pop
test
int
ds
mov
jl
mov
inc
jl
jnp
pop
jg
std
cld
imul
outs
arpl
clc
out
dec
mov
cmp
aam
(bad)
aas
sti
mov
and
das
call
ds
mov
pop
dec
repz
xlat
inc
pop
pusha
push
(bad)
scas
mov
mov
repnz
cli
stos
jle
out
xlat
pop
repz
add
jae
repz
(bad)
jmp
and
(bad)
cli
aas
jmp
fcomip
daa
addr16
aas
lock
pop
(bad)
pop
jg
lahf
cmc
idiv
cli
sti
inc
jmp
aas
stc
(bad)
cli
cmps
inc
daa
(bad)
fidivr
repnz
cli
out
into
aas
jmp
cli
push
(bad)
mov
inc
(bad)
repnz
cli
jg
ret
jg
paddd
jecxz
scas
jg
outs
stc
jecxz
mov
cmps
(bad)
mov
out
(bad)
aas
test
(bad)
sar
scas
jg
scas
sti
and
pop
(bad)
pop
(bad)
fcomp
pop
push
mov
icebp
cmps
adc
daa
in
daa
push
call
aas
cmc
xlat
push
call
(bad)
addr16
sahf
cmps
call
aas
lock
cld
loope
pop
icebp
jmp
xchg
mov
repz
mov
mov
pop
call
pop
clc
mov
std
fistp
fisttp
out
aas
out
idiv
std
pop
(bad)
mov
lods
idiv
out
mov
int3
pop
inc
cmp
das
and
call
jg
iret
cmp
mov
loop
cld
jmp
sar
hlt
stc
pop
inc
hlt
(bad)
imul
xor
outs
shr
scas
sti
inc
dec
(bad)
cld
sbb
pop
icebp
adc
stc
mov
sti
scas
and
call
fcomip
xchg
jg
(bad)
dec
inc
jp
jnp
jne
mov
std
jmp
inc
cli
test
sti
mov
outs
and
and
hlt
jg
mov
dec
sti
mov
out
mov
repz
mov
mov
mov
aas
mov
xlat
aas
(bad)
push
call
push
aas
div
aas
stc
xlat
std
mov
xlat
aas
lock
pop
std
(bad)
aam
hlt
mov
jmp
cli
adc
xchg
rcr
jp
(bad)
cld
mov
(bad)
(bad)
mov
xchg
cld
(bad)
fcomp
xchg
fbld
dec
push
aas
inc
(bad)
jmp
dec
ja
jmp
lahf
idiv
mov
sub
mov
mov
fucomip
stc
dec
xor
push
cli
(bad)
arpl
(bad)
fdiv
fcos
cmc
out
hlt
into
push
out
jbe
scas
mov
cli
or
mov
cmp
std
jg
mov
cmp
cs
cli
fwait
mov
scas
mov
cmps
cmp
mov
push
(bad)
mov
dec
xor
icebp
push
or
lock
and
les
loopne
call
sbb
adc
xor
lahf
adc
stc
mov
daa
(bad)
scas
mov
(bad)
jmp
and
mov
(bad)
fwait
(bad)
cwde
lahf
movs
iret
jg
je
idiv
pop
movs
out
xchg
aas
div
(bad)
mov
cmps
call
pop
xor
jg
lahf
hlt
sti
std
pop
sar
jg
lahf
push
cld
pop
dec
pop
cli
xor
jg
add
sti
jg
lahf
jns
jg
jge
(bad)
das
cli
mov
(bad)
out
(bad)
scas
jg
das
jle
jg
xchg
jg
pop
std
jg
inc
jg
das
stc
mov
das
std
mov
out
cli
mov
(bad)
std
mov
dec
(bad)
mov
(bad)
and
call
and
jg
leave
add
ret
(bad)
cmps
call
enter
call
out
pop
stc
retf
(bad)
adc
cld
(bad)
(bad)
mov
pop
and
cld
addr16
dec
call
(bad)
jmp
clc
idiv
fstp
ss
(bad)
jle
pop
cld
jmp
mov
cld
add
scas
aas
out
in
mov
mov
stc
idiv
std
addr16
inc
call
lahf
push
mov
out
aas
mov
jbe
lahf
std
hlt
fld
jg
das
jp
jg
jns
pop
int3
sar
pop
lods
paddd
mov
cmc
xchg
xchg
pop
rcl
imul
outs
xchg
ds
pushf
in
sub
lea
and
int3
mov
mov
aas
call
call
mov
dec
push
pop
adc
(bad)
fisub
inc
mov
cs
enter
mov
loop
mov
std
jg
es
dec
add
mov
mov
xlat
xchg
das
hlt
aaa
std
xor
hlt
(bad)
repz
push
out
out
and
jae
ds
inc
cmp
idiv
mov
jg
lahf
cmp
cdq
pop
bnd
and
das
and
and
out
jg
das
std
cdq
(bad)
sti
pop
(bad)
jmp
mov
jmp
(bad)
cmp
mov
sti
pop
std
retf
inc
(bad)
sti
pop
jmp
lahf
cld
sbb
mov
inc
cmps
aas
icebp
(bad)
(bad)
xlat
(bad)
mov
xchg
dec
pop
std
pop
call
fcomip
jg
addr16
aas
(bad)
jg
mov
lahf
dec
cmp
dec
(bad)
mov
(bad)
and
jg
outs
cld
xor
out
jg
(bad)
aaa
jp
inc
mov
xchg
jg
out
(bad)
in
in
(bad)
sti
iret
retf
jg
jmp
xchg
out
aas
imul
mov
push
out
(bad)
mov
(bad)
jmp
movs
stc
clc
mov
pop
(bad)
fcomp
fistp
std
dec
cli
jmp
std
xchg
jg
push
scas
aas
mov
cmps
mov
gs
jg
sti
mov
ror
add
stc
scas
inc
mov
div
dec
mov
stos
dec
in
(bad)
std
xlat
call
scas
cdq
sahf
jg
(bad)
fisttp
mov
ffreep
dec
mul
push
mov
dec
jmp
aas
idiv
inc
(bad)
push
mov
jg
paddb
icebp
cmps
dec
jmp
stc
cwde
loopne
mov
outs
fstp
in
std
dec
std
jne
in
(bad)
std
(bad)
call
add
imul
sub
push
idiv
cmp
ror
call
mov
repz
and
push
nop
out
stc
cmps
mov
sub
cld
pop
jg
dec
or
das
cld
mov
outs
std
mov
scas
stc
mov
out
(bad)
mov
pop
clc
mov
scas
std
mov
scas
(bad)
mov
lahf
(bad)
mov
outs
mov
out
hlt
mov
(bad)
sbb
cdq
mov
(bad)
(bad)
cli
xor
call
(bad)
jmp
into
dec
pop
adc
dec
aas
out
call
idiv
std
pop
jle
jg
test
arpl
push
hlt
pop
mov
int
call
lahf
test
cli
repz
(bad)
jmp
pop
fisub
stc
js
jg
test
das
or
cmp
mov
pop
cmc
pop
sar
inc
ss
dec
mov
or
fild
out
cli
mov
adc
jnp
inc
jp
(bad)
(bad)
mov
jg
pop
repz
call
(bad)
out
call
ins
ret
addr16
aas
jge
jg
std
in
(bad)
lods
in
xchg
fisttp
(bad)
sub
iret
sti
inc
movs
mov
mov
pand
aaa
dec
(bad)
ja
das
out
(bad)
scas
jg
scas
cld
or
sar
xlat
aas
icebp
xlat
push
fs
fdivr
jmp
sub
(bad)
js
repz
pop
dec
aas
lock
(bad)
pop
(bad)
cli
aas
cld
push
(bad)
pop
inc
fcomip
addr16
cli
pop
jmp
lahf
inc
jno
(bad)
jg
pop
inc
fcomip
jg
dec
jg
pop
clc
jg
mov
jg
daa
inc
aas
cli
jg
inc
(bad)
jmp
mov
scas
and
repnz
xor
jecxz
lahf
dec
into
stc
dec
pop
pushf
(bad)
fistp
out
jg
(bad)
cli
jecxz
push
(bad)
std
cmps
dec
out
(bad)
fistp
stc
fdivrp
std
cmps
out
call
lahf
push
jl
jg
leave
stc
mov
lahf
jg
dec
pop
cld
fistp
mov
mov
xchg
(bad)
mov
test
mov
(bad)
fistp
repnz
cmc
cmps
cs
std
fistp
jge
jg
jns
fcomip
(bad)
cli
mov
xchg
aas
pop
jg
jg
stc
stos
inc
call
pop
test
mov
pop
pop
jle
jg
gs
std
adc
cld
mov
jg
das
std
cld
(bad)
(bad)
jmp
mov
and
bound
aam
icebp
xor
ss
mov
leave
mov
add
scas
mov
mov
jle
adc
jg
stc
cdq
jg
imul
repz
call
out
repnz
(bad)
(bad)
lock
dec
(bad)
(bad)
lahf
cli
sti
call
iret
lahf
sahf
std
fistp
lahf
or
aas
cld
xchg
lods
jmp
mov
dec
aas
movs
fist
idiv
dec
jle
cmp
cld
(bad)
(bad)
jmp
std
(bad)
mov
sti
lahf
cli
fwait
jmp
(bad)
(bad)
jmp
std
pop
dec
cld
iret
(bad)
lods
jg
fld
in
(bad)
(bad)
cmps
call
aas
in
(bad)
cli
push
inc
ja
mov
ja
cdq
mov
call
aaa
(bad)
icebp
mov
(bad)
fnstcw
(bad)
test
idiv
lds
leave
(bad)
push
(bad)
out
jg
(bad)
mov
jns
and
imul
(bad)
lahf
jg
loop
(bad)
std
inc
(bad)
(bad)
cmp
xlat
pop
cmc
sti
(bad)
jmp
dec
(bad)
jnp
xlat
pop
aaa
mov
xchg
mov
(bad)
mov
(bad)
std
(bad)
iret
idiv
scas
aas
loope
sar
daa
sar
call
jg
jmp
hlt
mov
js
jg
mov
xchg
neg
inc
loop
inc
xor
(bad)
out
icebp
jg
add
lahf
std
fistp
mov
jl
inc
repz
stc
(bad)
std
xchg
jmp
xchg
jmp
pop
call
pop
jp
cli
jg
in
pop
jg
stc
dec
jg
pop
stc
call
in
(bad)
cli
cmp
mov
shr
shl
scas
sub
cli
jge
out
mov
call
mov
fwait
push
jg
lahf
inc
jbe
(bad)
(bad)
jmp
loopne
(bad)
jnp
mov
call
iret
lahf
cli
sti
(bad)
fistp
lahf
inc
jbe
dec
cld
leave
(bad)
sti
out
std
xor
std
sbb
mov
dec
push
sti
shl
mov
(bad)
cmp
push
aas
(bad)
xchg
mov
idiv
cli
xchg
ss
aas
cli
xchg
ror
mov
daa
call
call
inc
pop
jb
jg
mov
fistp
jg
lahf
dec
jg
cdq
outs
dec
(bad)
sti
pop
std
pop
dec
(bad)
sti
pop
(bad)
sti
call
dec
cmp
(bad)
inc
(bad)
cmp
(bad)
aaa
dec
xor
call
(bad)
out
jg
lahf
std
mov
(bad)
sti
aas
clc
idiv
(bad)
mov
mov
push
(bad)
cld
(bad)
mov
(bad)
stc
add
scas
aas
jle
(bad)
(bad)
cli
jecxz
cmps
(bad)
push
(bad)
shr
jg
call
inc
std
dec
cs
jmp
dec
sahf
pop
(bad)
pop
jg
icebp
cwde
jle
hlt
jg
leave
aas
jge
jg
imul
jnp
jnp
pop
jg
jne
jg
jmp
iret
mov
in
cmc
out
xlat
lahf
mov
bnd
stc
aas
clc
into
push
pop
std
int3
out
cmc
jg
inc
hlt
repz
stc
cdq
out
xlat
pop
cli
dec
leave
mov
mov
pop
xchg
mov
sub
nop
lahf
clc
mov
jg
in
(bad)
mov
call
cld
popa
scas
jmp
repnz
lock
jne
cld
idiv
scas
mov
stc
(bad)
jg
lahf
ds
mov
inc
mov
outs
std
xchg
mov
jl
fcom
mov
aam
hlt
jg
mov
test
fdivrp
pop
(bad)
fcomp
(bad)
mov
paddb
pop
call
aas
not
hlt
pop
inc
call
repnz
cmps
xchg
push
stc
imul
jg
pop
cli
dec
dec
(bad)
cld
test
idiv
mov
ja
pop
fs
jmp
iret
(bad)
mov
iret
std
mov
scas
clc
mov
(bad)
xchg
jg
das
stc
mov
jg
pop
clc
mov
lahf
(bad)
mov
pop
sti
inc
enter
hlt
neg
stc
jg
addr16
aas
stc
jg
mov
jg
xchg
sar
imul
lahf
jl
call
push
jmp
jg
repnz
neg
cmc
std
xor
(bad)
(bad)
sti
(bad)
int
(bad)
out
aas
out
fsub
pusha
dec
out
std
pop
jg
fs
(bad)
(bad)
jecxz
jg
inc
mov
call
lahf
jl
dec
aas
ud0
aas
jne
inc
jae
jnp
mov
(bad)
(bad)
jmp
iret
pop
(bad)
fistp
pop
cli
jge
sbb
std
mov
clc
mov
stc
dec
cmps
call
lahf
push
aas
sti
mov
(bad)
out
aas
cmps
std
cld
(bad)
cli
jae
cld
cmp
mov
stc
jg
test
das
inc
(bad)
pop
jg
pop
repnz
std
pop
std
rcl
neg
inc
cld
notrack
pop
test
(bad)
std
xlat
std
dec
stc
(bad)
std
xlat
dec
jg
push
push
cld
sar
jg
pop
dec
repz
ss
outs
(bad)
xor
mov
(bad)
sti
outs
stc
mov
(bad)
fistp
lahf
pop
std
pop
jg
lahf
dec
mov
mov
pop
std
pop
jg
pop
pop
(bad)
fistp
std
std
ja
mov
sti
mov
(bad)
out
mov
fistp
pop
(bad)
(bad)
pop
call
pop
repz
pop
clc
sub
sahf
std
pop
dec
(bad)
jmp
sti
jmp
mov
cmp
test
sti
pop
(bad)
sti
(bad)
aam
jmp
sti
(bad)
call
pop
(bad)
sub
cmc
mov
(bad)
pop
shl
inc
fcomip
jg
idiv
into
mov
dec
mov
dec
mov
(bad)
out
jmp
(bad)
(bad)
(bad)
out
push
aas
clc
pop
jmp
cmps
(bad)
out
push
aas
cld
(bad)
cmp
dec
cli
push
add
icebp
repz
mov
scas
mov
push
lahf
cld
fistp
(bad)
pop
jg
out
mov
jg
cmp
push
pop
cld
push
cmp
neg
hlt
sti
fdivr
mov
psubw
stc
jge
(bad)
scas
aas
in
mov
sti
fdivrp
mov
(bad)
push
xchg
jle
(bad)
fistp
pop
jo
jg
adc
(bad)
xchg
lahf
push
pop
cmc
pop
cmp
mov
(bad)
sti
(bad)
popf
std
push
push
pop
xor
mov
cld
stc
icebp
(bad)
std
(bad)
out
out
cmc
daa
shr
jg
lds
(bad)
(bad)
mov
jmp
aas
mov
cmps
mov
and
rep
mov
addr16
lahf
mov
sti
mov
repz
fst
(bad)
fistp
cmc
stos
(bad)
sti
das
clc
and
loopne
fdivrp
fistp
das
jle
jg
inc
jg
push
call
pop
cld
pop
std
fdivrp
neg
pop
std
notrack
pop
inc
(bad)
push
pop
inc
jle
neg
inc
inc
xor
in
(bad)
imul
mov
aas
cmc
cmps
imul
jnp
mov
add
cld
in
push
fcomip
xchg
pop
std
pop
jg
pop
cmc
xor
idiv
lock
inc
scas
jg
jle
ret
xor
dec
(bad)
pop
call
hlt
fcomip
(bad)
std
(bad)
int3
fild
(bad)
aas
clc
cmps
call
cld
aas
clc
addr16
(bad)
int3
(bad)
daa
std
(bad)
sar
(bad)
pop
(bad)
pop
(bad)
cli
aas
sti
xlat
(bad)
(bad)
idiv
(bad)
fidivr
(bad)
(bad)
mov
mov
(bad)
mov
loopne
cli
xlat
leave
daa
and
jg
cli
repz
div
cld
mov
call
idiv
(bad)
das
mov
xchg
jmp
jp
jg
pop
(bad)
(bad)
scas
in
daa
mov
push
cmp
pushf
sar
outs
out
(bad)
pop
rcl
cld
jg
sahf
sar
out
frstor
aas
std
push
jnp
push
stc
sti
out
shr
idiv
scas
stc
out
mov
out
jge
jmp
call
in
call
idiv
std
mov
jmp
jmp
jmp
cmc
cmp
call
mov
jp
jnp
pop
jg
repnz
mov
jle
stc
in
cli
movs
mov
clc
(bad)
cli
rcr
call
das
cmps
(bad)
rcl
push
pop
std
mov
test
jo
cmp
movs
mov
jg
cmc
pop
call
pop
inc
fdivr
pop
call
pop
mov
(bad)
jg
and
jmp
push
pop
mov
paddw
stos
(bad)
jmp
mov
shr
(bad)
pop
jg
pop
idiv
pop
jg
pop
cli
jnp
pop
jg
pop
stc
sti
(bad)
pop
jg
pop
icebp
std
(bad)
jmp
(bad)
jecxz
cmp
dec
clc
mov
cdq
jg
stc
push
out
fdiv
pop
cld
jns
push
xchg
xchg
mov
sti
jg
test
cmc
jg
and
std
movs
mov
jg
jge
pop
std
in
(bad)
jmp
sti
stos
scas
jmp
and
xlat
(bad)
loopne
cli
imul
aas
call
cmps
aas
in
cli
mov
stos
aas
lock
cli
ja
fnstsw
mov
push
sar
mov
sbb
xlat
jns
mov
(bad)
ffreep
cmps
ja
scas
daa
iret
out
cld
fisttp
repz
(bad)
mov
(bad)
(bad)
cld
mov
scas
outs
mov
jle
ja
imul
repz
(bad)
das
cld
cld
pushf
fidivr
mov
aas
sti
jb
jg
stc
(bad)
push
popf
xchg
mov
(bad)
jmp
push
jle
inc
cmp
cmps
cmps
jnp
test
out
call
(bad)
cld
(bad)
(bad)
cmp
(bad)
mov
std
mov
jg
jg
in
out
inc
push
fs
jg
fcmovne
(bad)
scas
mov
jmp
(bad)
out
jae
addr16
mov
inc
adc
mov
bound
jg
mov
inc
mov
lock
cli
cs
(bad)
sti
mov
daa
out
mov
clc
mov
push
pop
pop
push
std
fisttp
jnp
jno
lds
hlt
hlt
dec
fdivrp
sahf
push
test
jg
mov
jnp
mov
jmp
or
(bad)
out
loop
push
(bad)
mov
pop
xchg
jg
stos
(bad)
mov
(bad)
mov
pop
mov
jmp
hlt
lahf
clc
mov
call
cld
sbb
add
dec
(bad)
loop
idiv
mov
call
mov
std
test
cmc
jg
jg
out
std
jg
imul
mov
icebp
(bad)
(bad)
(bad)
mov
icebp
repz
jmp
jecxz
ds
cmc
jg
(bad)
jmp
add
push
lods
(bad)
jmp
ja
cld
fistp
cld
test
in
in
into
push
in
mov
fisttp
call
into
hlt
(bad)
mov
into
dec
jl
je
(bad)
mov
(bad)
cld
(bad)
(bad)
std
pop
cld
hlt
cmp
mov
clc
jg
stos
inc
push
fcomi
out
icebp
jg
stos
ret
jmp
mov
xchg
sar
dec
pop
(bad)
push
push
cld
repnz
mov
cli
clc
(bad)
(bad)
imul
(bad)
push
call
pop
mov
cld
inc
aas
(bad)
mov
loop
stc
cld
(bad)
(bad)
jmp
call
sub
sti
aad
aas
cld
mov
fld
(bad)
(bad)
jge
(bad)
(bad)
out
cld
(bad)
cli
jg
mov
mov
(bad)
sti
mov
inc
in
scas
inc
das
(bad)
out
stc
pop
jle
jg
hlt
pop
repz
(bad)
sti
in
pop
idiv
jmp
(bad)
cwde
fucomip
(bad)
cli
std
jle
mov
jnp
cmps
inc
(bad)
std
test
hlt
cld
jmp
cmps
in
in
(bad)
sti
cld
fist
loope
std
fucomip
lahf
(bad)
jnp
pop
or
mov
hlt
inc
pop
icebp
pop
cld
fucomip
(bad)
mov
out
(bad)
(bad)
arpl
stos
mov
jmp
clc
mov
xchg
(bad)
cld
xlat
jp
popf
sbb
iret
push
jp
aad
mov
(bad)
clc
(bad)
cli
cmp
nop
sbb
(bad)
mov
into
push
hlt
idiv
dec
jmp
(bad)
scas
push
std
aas
ds
test
aas
movs
(bad)
jg
and
call
aam
push
mov
sbb
mov
call
stos
cli
lds
scas
mov
dec
(bad)
scas
pop
jae
jg
jle
addr16
pop
mov
cld
jg
adc
std
aam
loopne
call
jge
jg
jle
icebp
push
icebp
push
jge
sbb
out
mov
mov
jg
hlt
pop
repnz
push
rol
jg
mov
scas
lahf
cmps
inc
data16
mov
icebp
(bad)
mov
xor
dec
out
cld
pop
int
mul
(bad)
mov
jg
jg
ja
scas
mov
cld
xchg
call
dec
dec
das
(bad)
scas
loop
mov
(bad)
pop
mov
call
(bad)
(bad)
sub
icebp
jg
dec
(bad)
cld
(bad)
mov
mov
(bad)
scas
sub
sti
shr
scas
jmp
push
out
das
(bad)
std
jmp
notrack
lds
inc
jg
idiv
scas
pop
cli
push
push
push
pop
std
pop
jg
push
idiv
ins
jg
push
scas
dec
in
cmc
das
push
sahf
hlt
aas
push
std
jecxz
aas
cmps
jg
jg
inc
push
(bad)
scas
repz
std
(bad)
out
fcomip
sub
(bad)
sbb
pop
dec
dec
cmp
jg
and
aas
sti
xchg
hlt
or
fidivr
adc
jnp
std
jg
out
icebp
(bad)
std
popf
lahf
sbb
pop
addr16
repz
jecxz
fwait
jle
pop
(bad)
mov
or
(bad)
jge
(bad)
scas
das
inc
push
pushf
idiv
aad
sar
std
pop
je
lahf
push
xchg
adc
mov
lock
imul
inc
je
and
jg
je
out
inc
cmp
inc
jg
jg
std
mov
std
(bad)
mov
(bad)
jns
jg
jg
mov
jmp
pop
stc
jnp
addr16
(bad)
out
jae
(bad)
pop
repnz
(bad)
(bad)
std
dec
push
data16
mov
scas
fstp
jle
jg
jle
and
add
xchg
fistp
mov
mov
push
jmp
lahf
clc
repnz
ds
sbb
jae
sti
arpl
jno
daa
std
(bad)
call
sbb
stc
jg
hlt
lahf
(bad)
out
(bad)
ficomp
jb
jg
and
movs
pop
push
jg
dec
(bad)
pop
jg
pop
xchg
(bad)
fistp
(bad)
out
aas
in
into
(bad)
scas
aas
stc
scas
cwde
(bad)
fistp
pop
xlat
cld
fistp
aas
dec
cmp
jg
out
cld
mov
pop
std
mov
retf
jmp
push
push
(bad)
(bad)
jg
pop
mov
cmp
jns
xlat
popf
xchg
mov
std
repz
ins
std
pop
mov
repz
div
mov
(bad)
jl
pop
call
push
call
adc
and
stc
jmp
(bad)
sti
repz
lock
push
in
out
fdivrp
mov
(bad)
out
into
push
sbb
xor
sti
jge
jmp
lahf
jnp
test
mov
in
cmp
or
rcl
or
mov
in
(bad)
mov
fistp
in
out
add
in
stc
idiv
std
jnp
loopne
(bad)
cli
std
jmp
dec
std
cs
dec
hlt
das
(bad)
js
call
jg
call
mov
fcos
xor
jg
inc
(bad)
loop
(bad)
jmp
push
pop
lock
cmp
mov
call
je
(bad)
sub
scas
cmc
pop
std
idiv
jle
xchg
out
idiv
(bad)
jle
hlt
jg
jg
cld
sub
in
push
dec
cld
(bad)
mov
sahf
std
fistp
std
out
fdivrp
ja
out
notrack
pop
not
push
(bad)
xlat
scas
(bad)
out
jg
in
jmp
inc
pop
std
out
(bad)
(bad)
aaa
(bad)
stos
ja
xlat
jg
paddb
push
push
aas
(bad)
daa
push
push
jg
mov
jmp
(bad)
mov
(bad)
(bad)
mov
clc
std
jg
lahf
call
mov
cli
(bad)
jmp
dec
in
xor
jmp
push
mov
repnz
(bad)
jmp
rep
std
pop
mov
mov
dec
mov
icebp
out
jge
(bad)
cmp
mov
ja
scas
lahf
and
call
ja
test
jmp
mov
mov
out
(bad)
cli
into
out
jg
(bad)
cmp
(bad)
mov
add
jmp
retf
ret
(bad)
jmp
daa
jp
and
cdq
lahf
ret
addr16
jge
mov
(bad)
clc
aaa
call
out
std
inc
mov
jmp
dec
clc
jge
scas
(bad)
paddw
push
std
aas
jmp
iret
jmp
push
mov
(bad)
scas
repnz
(bad)
jmp
mov
lahf
hlt
(bad)
out
inc
mov
fnstcw
mov
hlt
pop
xor
mov
daa
jmp
(bad)
scas
(bad)
dec
jge
jg
jmp
lahf
not
push
xlat
lahf
clc
pop
mov
mov
(bad)
fnstsw
cmps
cld
xchg
jg
cmc
push
idiv
xchg
jmp
jmp
clc
imul
xlat
pop
repz
mov
xlat
lahf
clc
pop
push
push
(bad)
(bad)
cmp
retf
imul
(bad)
fnstsw
jg
scas
std
(bad)
mov
std
push
pop
std
pop
call
(bad)
daa
std
pop
dec
jg
iret
call
xlat
push
aas
call
xlat
(bad)
stc
mov
in
(bad)
call
js
aas
stc
mov
xor
add
xchg
or
fild
add
das
jg
clc
(bad)
(bad)
in
repz
(bad)
scas
mov
aas
and
std
sub
adc
dec
retf
jle
jecxz
sti
mul
sti
jae
xchg
cmps
(bad)
(bad)
jne
sti
fdivr
mov
(bad)
sti
jae
stc
mov
(bad)
std
(bad)
sti
sub
(bad)
jg
addr16
jmp
call
enter
xlat
out
dec
cmp
jg
les
stc
into
call
jg
inc
das
(bad)
out
cli
paddw
(bad)
sti
xchg
jl
pop
hlt
dec
fdivrp
fild
std
mov
imul
cld
(bad)
(bad)
loop
inc
(bad)
lock
cld
pop
aas
std
cmps
cld
in
cmp
(bad)
(bad)
std
(bad)
test
mov
idiv
arpl
aas
icebp
retf
(bad)
jmp
daa
pop
icebp
sti
call
call
sti
addr16
ds
pop
std
pop
sar
icebp
pop
dec
xor
stos
das
(bad)
out
mov
mov
std
jg
std
jg
paddd
jg
outs
stc
cmp
jmp
out
(bad)
mov
out
cli
and
out
jmp
out
clc
ret
jmp
ret
(bad)
out
push
outs
std
inc
(bad)
out
push
outs
stc
inc
(bad)
scas
jmp
outs
inc
outs
cli
cmp
(bad)
clc
outs
cld
add
scas
(bad)
call
idiv
xlat
std
int3
(bad)
std
pop
dec
lock
pop
(bad)
jecxz
sar
std
aas
(bad)
fstp
(bad)
std
mov
push
sub
retf
jg
(bad)
(bad)
mov
cmp
aas
(bad)
pop
push
(bad)
stc
aas
(bad)
(bad)
(bad)
push
jg
pmuludq
push
jg
push
mov
mov
aas
mov
call
xchg
jmp
dec
cld
psubd
sbb
std
jg
xchg
(bad)
sti
mov
in
(bad)
jmp
daa
ja
out
iret
jg
mov
mov
out
out
pop
sahf
cld
pop
sbb
in
psubb
jmp
inc
std
jge
(bad)
out
addr16
cli
cld
(bad)
(bad)
jg
mov
cli
jg
int
(bad)
out
xor
call
jb
jg
jg
mov
cmp
jecxz
call
fistp
stos
pop
repnz
jl
(bad)
(bad)
mov
(bad)
cli
ret
(bad)
lock
(bad)
(bad)
jecxz
clc
leave
(bad)
std
daa
dec
(bad)
mov
aas
cmc
jg
xchg
jg
out
idiv
icebp
jg
hlt
(bad)
(bad)
and
test
(bad)
(bad)
jecxz
rcr
jg
gs
iret
cld
fistp
pop
mov
aas
mov
aas
jnp
jg
(bad)
jmp
lock
jle
xlat
pop
repnz
(bad)
out
aas
out
das
int3
(bad)
out
mov
(bad)
pop
jg
(bad)
std
(bad)
add
(bad)
std
aas
inc
jg
push
aas
cld
std
jg
(bad)
std
(bad)
jge
fdivr
cmc
(bad)
cmp
(bad)
fnstsw
(bad)
std
pop
call
aam
lds
sti
aas
sti
(bad)
mov
jmp
std
(bad)
sar
sti
aas
stc
pop
call
jns
(bad)
(bad)
(bad)
rcr
hlt
pop
(bad)
(bad)
loope
lock
(bad)
scas
jmp
out
cld
arpl
out
push
pop
(bad)
(bad)
out
(bad)
std
xchg
std
xchg
out
sbb
mov
lahf
shr
xchg
std
mov
(bad)
jmp
clc
outs
mov
jg
jae
mov
stc
fwait
dec
call
iret
xchg
mov
hlt
repnz
push
in
sti
idiv
out
out
nop
jle
or
call
retf
in
(bad)
sti
daa
push
lahf
std
pop
mov
(bad)
mov
stc
(bad)
std
(bad)
sti
jmp
std
ins
bnd
loopne
jle
jnp
jg
xchg
fistp
clc
jg
dec
stc
iret
out
xchg
cs
cmps
cmp
out
std
inc
mov
mov
aas
cmc
jg
icebp
jg
in
(bad)
mov
fistp
pop
cli
push
call
pop
repz
cld
add
neg
out
aas
jmp
jg
pop
xchg
std
fistp
int
lahf
inc
stc
cld
aas
xchg
jmp
lds
(bad)
jmp
call
(bad)
(bad)
pop
cld
xchg
push
(bad)
(bad)
das
(bad)
and
dec
cld
jmp
daa
(bad)
hlt
(bad)
sti
xchg
jmp
jmp
stc
jmp
retf
aas
cld
daa
std
(bad)
repz
hlt
daa
(bad)
pop
call
sar
jg
pop
mov
jg
pop
idiv
ja
fistp
sti
jg
mov
out
pop
sti
jg
dec
jmp
lahf
std
jg
mov
rcr
pop
mov
jmp
push
icebp
(bad)
inc
push
mov
call
loope
clc
dec
jmp
(bad)
aas
std
mov
push
push
pop
adc
(bad)
(bad)
aas
dec
std
(bad)
pop
std
(bad)
(bad)
push
jg
push
fsubrp
push
mov
loop
jmp
jge
(bad)
jg
sbb
in
(bad)
jmp
neg
sti
mov
mov
cmc
lds
jg
shr
clc
jns
pop
jl
jg
sahf
aas
jne
(bad)
cmp
jge
std
mov
sti
add
lock
mov
rcl
lahf
mov
dec
mov
pop
lock
(bad)
fdivrp
xlat
out
inc
jle
jg
mov
jg
mov
fcomp
lock
push
jg
out
inc
aas
mov
jmp
and
dec
cld
xor
std
sar
pushf
(bad)
jmp
cld
pop
in
cmc
xlat
std
int
(bad)
push
retf
jmp
jg
(bad)
cli
mov
(bad)
dec
scas
(bad)
std
(bad)
cmp
scas
pop
dec
pop
icebp
dec
std
pop
call
call
jg
push
retf
(bad)
jmp
(bad)
pop
mov
inc
(bad)
jmp
inc
jg
addr16
mov
mov
(bad)
addr16
fcomip
(bad)
cld
pop
jmp
(bad)
(bad)
cld
pop
push
aas
clc
daa
std
pop
(bad)
(bad)
icebp
inc
cld
pop
(bad)
jmp
pop
dec
fld
mov
scas
pop
stc
pop
std
push
call
scas
clc
iret
(bad)
loope
jmp
clc
adc
pop
imul
ret
push
jg
cmps
hlt
(bad)
dec
lahf
jmp
dec
jg
lahf
call
cli
inc
out
(bad)
daa
call
dec
call
(bad)
jmp
pop
out
cld
xchg
mov
sti
je
jmp
pop
jle
cli
in
(bad)
(bad)
ds
pop
xchg
inc
hlt
mul
(bad)
sti
lods
cli
in
(bad)
cmp
add
cld
fistp
(bad)
jle
cmp
mov
out
cmps
pop
(bad)
(bad)
out
push
lock
jnp
fild
scas
dec
(bad)
out
aaa
(bad)
repz
(bad)
(bad)
sti
cmps
(bad)
call
jnp
pop
mov
fistp
lods
dec
std
leave
jg
(bad)
inc
push
daa
dec
stc
(bad)
std
daa
sar
push
jg
lahf
cmp
mov
(bad)
stc
push
out
xlat
pop
repz
mov
paddb
pop
cli
mov
pop
nop
fdivrp
paddd
cld
cld
mov
jg
pop
mov
jle
jg
ja
fistp
(bad)
out
pop
cmc
out
cld
or
xlat
(bad)
jmp
sahf
(bad)
sti
(bad)
cld
iret
(bad)
fdivrp
jmp
(bad)
fwait
jg
(bad)
std
mov
(bad)
std
sub
lods
mov
jmp
pop
hlt
jg
jmp
aad
push
(bad)
fistp
(bad)
out
pop
inc
ins
jg
mov
inc
aas
std
out
(bad)
aad
repnz
cld
pop
dec
aas
stc
out
(bad)
retf
mov
jmp
scas
cld
mov
ss
cmp
(bad)
(bad)
cli
aad
fdivrp
test
mov
ja
(bad)
jmp
and
cld
jg
cmp
dec
scas
dec
idiv
in
inc
push
pop
push
dec
bnd
xchg
sub
dec
push
out
xor
call
aad
cmc
jg
push
repz
inc
stc
mov
mov
dec
xor
das
std
repnz
jle
mov
cld
fistp
clc
rcr
mov
pop
(bad)
(bad)
scas
sahf
std
pop
pop
int3
push
(bad)
fistp
outs
repz
push
(bad)
out
cmps
aas
std
clc
(bad)
jle
sbb
inc
push
pop
aas
cmp
mov
cli
mov
(bad)
fild
aas
stc
ret
jmp
cld
(bad)
cli
adc
mov
(bad)
sti
dec
movs
jne
aas
out
lahf
cld
pop
jg
lahf
cmp
mov
cmps
(bad)
out
aas
stc
das
pop
std
fistp
lahf
cmc
sar
fstp
(bad)
std
out
test
push
idiv
cmp
(bad)
std
mov
aas
cld
mov
in
push
jg
out
(bad)
out
dec
cmp
in
push
hlt
idiv
aas
push
cs
ins
cli
std
(bad)
mov
jg
cmp
xchg
inc
(bad)
std
jg
dec
(bad)
fdivr
std
stos
(bad)
repz
(bad)
fwait
jg
(bad)
(bad)
mov
(bad)
cli
mov
(bad)
sbb
std
mov
push
(bad)
stc
sub
xchg
(bad)
sti
(bad)
cld
pop
push
out
stc
xor
in
dec
lahf
popf
(bad)
jns
ror
and
(bad)
pop
std
fist
(bad)
mov
call
repnz
(bad)
mov
mov
(bad)
push
jg
pop
call
cld
cli
daa
jmp
jmp
sub
js
std
cli
(bad)
cli
ror
fistp
stc
mov
jmp
push
mov
idiv
mov
(bad)
jmp
psubq
pop
mov
cld
daa
lahf
call
les
std
(bad)
(bad)
fxam
push
daa
push
cs
dec
(bad)
jae
(bad)
jmp
clc
jae
call
lahf
repnz
xor
xlat
lahf
dec
stc
loopne
in
pop
(bad)
pop
jg
lahf
std
idiv
cli
xor
ret
cmc
ja
in
jg
push
mov
inc
je
dec
loope
push
(bad)
push
inc
xlat
pop
cmc
scas
jmp
lods
inc
(bad)
push
std
(bad)
fcomip
(bad)
jmp
(bad)
(bad)
out
fsubrp
(bad)
sub
idiv
ret
es
das
std
pop
dec
std
jmp
mov
dec
jg
call
(bad)
push
pop
clc
pop
inc
push
aad
dec
cld
pop
(bad)
repz
sti
scas
stc
dec
cli
mov
sar
cmps
(bad)
out
aas
test
xchg
lahf
stc
cmp
cli
movs
jg
idiv
out
aas
lock
cli
std
(bad)
out
aas
lock
into
(bad)
scas
aas
in
enter
test
mov
cld
pop
jg
lahf
mov
retf
sub
call
or
cmc
jg
xor
dec
mov
xor
mov
jecxz
call
ja
in
inc
jp
pop
cli
mov
pop
(bad)
mov
scas
(bad)
(bad)
(bad)
push
stos
(bad)
xor
(bad)
int
sbb
cmc
jg
push
idiv
popf
jle
jp
fistp
(bad)
jg
stos
jg
(bad)
retf
aam
pop
mov
stc
das
repnz
(bad)
in
jg
push
jmp
fdivr
fstp
jg
inc
jmp
ja
call
jmp
cld
add
cwde
cmp
in
push
movs
pop
xchg
xchg
jg
cmc
xchg
cmps
xchg
jle
jg
mov
out
jg
pop
dec
push
jg
pop
(bad)
(bad)
aas
jle
loop
rcr
rcl
sbb
leave
dec
and
cld
pop
jmp
xlat
push
pop
hlt
pop
std
in
cmc
pop
inc
fbld
mov
idiv
mov
jg
pop
(bad)
std
dec
(bad)
jg
sar
jg
rol
dec
sahf
(bad)
fistp
sar
dec
mov
das
clc
inc
push
pop
inc
imul
sbb
xchg
jg
pop
std
sar
out
jg
pop
clc
dec
(bad)
scas
jg
pop
dec
(bad)
out
push
mov
(bad)
std
xchg
push
push
das
cld
(bad)
(bad)
push
sub
cmp
cmp
call
(bad)
push
mov
sub
mov
call
dec
popf
call
add
pop
loopne
or
push
rcr
(bad)
(bad)
cli
xchg
push
cmps
call
jns
fcomip
mov
jg
xlat
je
mov
iret
mov
jmp
das
xchg
mov
idiv
lock
cli
pop
(bad)
sti
jg
(bad)
(bad)
das
dec
call
(bad)
jg
mov
pop
gs
sti
push
call
cmp
paddw
lahf
(bad)
jmp
clc
and
jg
out
idiv
inc
xchg
das
jmp
jg
cmp
jg
in
(bad)
cli
add
(bad)
cld
(bad)
cli
sub
pop
dec
aas
call
aas
mov
mov
cwde
mov
mov
xlat
mov
call
(bad)
stc
sub
imul
sbb
aad
(bad)
jmp
push
(bad)
mov
iret
jg
dec
xchg
(bad)
dec
arpl
cld
sti
repnz
clc
push
xor
(bad)
push
out
neg
in
mov
icebp
call
gs
leave
(bad)
call
jmp
scas
and
idiv
sbb
ds
fbld
or
jmp
(bad)
mov
movs
jg
(bad)
cld
jg
jg
(bad)
cld
lahf
jmp
call
lock
jle
sar
cld
bsr
sahf
jmp
push
ret
jg
(bad)
cli
arpl
fcomp
out
(bad)
(bad)
xchg
imul
(bad)
jg
adc
cli
lds
out
idiv
adc
std
aas
call
(bad)
jmp
and
cmp
leave
(bad)
std
xchg
fxch
(bad)
jmp
jmp
out
(bad)
xor
(bad)
aas
cld
(bad)
(bad)
aaa
(bad)
in
mov
adc
stc
(bad)
(bad)
scas
(bad)
sti
jg
(bad)
(bad)
outs
stc
(bad)
aas
dec
jg
adc
idiv
icebp
jg
(bad)
call
(bad)
cli
(bad)
call
imul
cld
(bad)
(bad)
cli
adc
push
loopne
jg
inc
sbb
fistp
(bad)
cld
dec
idiv
ins
and
cmp
(bad)
mov
(bad)
std
sub
idiv
xchg
fs
movs
(bad)
push
cli
(bad)
push
shr
mov
jmp
(bad)
jmp
and
add
jg
scas
dec
scas
and
mov
mov
jg
in
jg
pop
clc
(bad)
sbb
jg
std
repz
jmp
pop
pop
(bad)
jmp
fwait
jmp
call
mov
jg
(bad)
jg
pop
dec
cmp
aas
mov
fnstcw
idiv
out
aas
mov
dec
mov
mov
idiv
mov
push
aas
loop
push
das
std
cmp
sbb
dec
mov
xchg
fdivrp
and
adc
std
sar
(bad)
std
inc
cld
adc
ret
dec
and
push
into
in
cld
mov
(bad)
(bad)
mov
jg
pop
mov
(bad)
out
pop
test
out
jmp
dec
sti
xchg
out
jg
inc
jmp
ja
out
jg
jle
(bad)
shr
hlt
ds
(bad)
(bad)
cli
gs
call
jb
adc
xor
dec
pop
lock
sub
mov
imul
jmp
idiv
(bad)
call
scas
mov
cmp
(bad)
(bad)
cli
in
pushf
sti
std
xchg
shl
mov
test
call
cmp
retf
scas
and
and
push
je
(bad)
sbb
out
cli
pop
shl
hlt
adc
gs
dec
dec
scas
es
(bad)
jg
paddd
push
mov
mov
pusha
adc
cmp
loope
clc
hlt
(bad)
cli
jecxz
clc
fucomip
(bad)
cli
and
cld
loope
push
test
jmp
mov
std
jno
shl
(bad)
cli
and
test
idiv
cli
cdq
pop
cli
aad
cmc
xor
out
repz
push
call
dec
repz
imul
dec
(bad)
pop
jg
lds
xchg
scas
(bad)
jmp
call
call
push
jmp
push
jg
dec
jg
push
jg
(bad)
jg
push
jg
movq
(bad)
clc
or
loope
inc
ds
out
(bad)
ds
dec
jg
pmuludq
(bad)
clc
bswap
(bad)
jmp
mov
retf
mov
(bad)
jge
stc
retf
dec
pop
std
bnd
(bad)
jmp
(bad)
pop
idiv
push
dec
sar
dec
lock
lahf
repnz
call
std
fdivrp
dec
(bad)
jmp
out
std
mov
(bad)
jmp
ds
jmp
in
xchg
xchg
mov
or
mov
lahf
call
retf
jg
outs
std
pop
inc
(bad)
dec
iret
call
inc
cmc
paddw
inc
dec
call
cmc
xchg
(bad)
adc
pop
lock
mov
retf
inc
(bad)
fdivr
loopne
cli
cmp
in
(bad)
inc
call
and
xchg
out
stc
dec
imul
pop
dec
mov
pop
(bad)
fistp
(bad)
(bad)
std
(bad)
repz
not
pop
adc
dec
and
sti
jg
idiv
(bad)
xlat
jg
idiv
pop
push
jg
ja
fcomip
(bad)
mov
(bad)
fwait
mov
call
mov
mov
clc
mov
pop
mov
sti
(bad)
(bad)
out
call
movs
ja
jle
popf
in
mov
jmp
(bad)
jg
daa
jmp
out
ret
pop
cld
push
xchg
mov
mov
pop
cli
dec
xor
mov
call
mov
cli
lahf
(bad)
adc
out
stc
mov
in
jg
jge
aas
add
aas
cmps
mov
imul
daa
movs
iret
(bad)
jmp
pop
cld
iret
dec
dec
jno
scas
inc
pop
inc
cli
(bad)
jg
(bad)
jae
(bad)
push
mov
xchg
add
jg
lahf
mov
js
idiv
xchg
movs
jnp
enter
clc
mov
idiv
mov
idiv
mov
jmp
jmp
std
(bad)
dec
inc
retf
jl
fistp
jmp
clc
inc
call
pop
repz
jno
imul
sbb
(bad)
std
aas
nop
pop
mov
add
test
push
(bad)
jg
(bad)
aad
stc
jg
(bad)
aad
icebp
jg
pop
call
popf
repnz
jg
ja
mov
sar
(bad)
ds
popf
(bad)
xchg
aam
mov
jmp
(bad)
inc
cli
xchg
std
dec
xor
sbb
jb
mov
inc
jp
push
nop
jle
adc
cwde
xchg
jecxz
and
cld
ud0
loope
clc
cld
mul
pop
call
inc
jp
jg
sahf
(bad)
mov
pop
mov
inc
int
jg
ins
(bad)
jnp
repz
jg
jg
add
sar
add
out
cld
mov
sar
jg
cld
sti
fist
in
mov
cld
fild
mov
pop
cli
out
sti
mov
repnz
push
in
(bad)
idiv
mov
inc
jp
mov
(bad)
in
fbld
push
(bad)
cli
mov
mov
pop
cld
jg
sbb
jg
jmp
lea
arpl
lahf
imul
inc
call
in
lahf
xchg
call
(bad)
call
leave
leave
push
pop
adc
(bad)
scas
push
outs
(bad)
mov
outs
std
mov
outs
stc
mov
(bad)
call
fild
adc
(bad)
jmp
xchg
(bad)
aaa
hlt
into
dec
scas
and
jmp
movs
add
std
std
mov
pop
enter
enter
ss
mov
cmc
idiv
push
cli
mov
adc
push
push
stc
cmp
in
cmc
fist
fdivrp
sbb
jmp
out
jmp
pop
cmps
call
cmp
adc
test
cs
call
out
cli
jg
das
push
mov
outs
jne
dec
(bad)
cld
pop
repnz
fild
add
(bad)
(bad)
stc
mov
add
(bad)
sti
mov
dec
push
clc
jl
pop
call
cmps
call
clc
cmc
mov
stc
out
xchg
scas
pop
dec
cld
mov
(bad)
xor
xchg
pop
dec
mov
dec
mov
jmp
outs
cli
das
or
jg
mov
(bad)
idiv
aaa
std
(bad)
xlat
jg
aaa
(bad)
pop
clc
dec
or
(bad)
sti
(bad)
cli
iret
test
clc
das
call
jg
xlat
movs
xchg
(bad)
imul
jp
mov
repnz
(bad)
push
repnz
call
ss
sti
(bad)
cli
lahf
leave
push
dec
mov
jle
stc
and
fwait
pop
xchg
int
and
xor
jg
pop
mov
jno
sbb
scas
xchg
jae
xchg
inc
loope
scas
or
dec
fstp
fwait
(bad)
sti
mov
dec
jg
out
(bad)
xor
inc
lahf
hlt
iret
jg
pop
(bad)
out
(bad)
(bad)
fnstsw
(bad)
fild
add
aaa
hlt
xlat
cmp
push
hlt
clc
das
mov
adc
(bad)
dec
mov
les
mov
(bad)
(bad)
push
pop
cld
in
aam
outs
pop
fld
cld
jg
xlat
jg
shl
mov
(bad)
jnp
stc
jg
(bad)
xor
inc
lock
lahf
or
push
lahf
xchg
out
(bad)
pop
call
out
inc
jmp
dec
mov
inc
(bad)
mov
test
sar
mov
repz
and
sti
jg
jae
pop
inc
inc
xchg
(bad)
hlt
(bad)
xchg
inc
sar
pushf
out
aas
call
lock
jmp
xchg
scas
adc
out
call
(bad)
(bad)
mov
out
lock
fsub
enter
mov
xchg
addr16
jg
jp
hlt
(bad)
fucomip
repz
(bad)
outs
xchg
cs
out
cs
jmp
sbb
add
mov
jmp
stc
(bad)
(bad)
(bad)
(bad)
sti
mov
dec
jg
add
sbb
(bad)
(bad)
(bad)
cld
out
movs
lahf
movs
pop
(bad)
imul
dec
cli
sti
aas
std
fwait
dec
aaa
cld
lods
repnz
jmp
outs
sar
rcr
jg
mov
mov
nop
imul
mov
es
repnz
cmc
push
cld
cmp
fnstsw
hlt
or
cmp
sti
lahf
ror
std
push
lahf
cld
ins
hlt
cmp
(bad)
call
mov
jg
cli
out
aas
mov
sti
aas
stc
pop
add
jmp
outs
mov
fstp
std
jmp
icebp
or
mov
(bad)
sbb
dec
inc
mov
loopne
mov
dec
sbb
std
ja
fdivr
add
mov
cmp
das
push
scas
and
lahf
dec
outs
(bad)
gs
jg
pop
cld
inc
mov
mov
aas
jle
mov
push
icebp
repz
cmp
fist
(bad)
aaa
les
les
xlat
jg
repnz
pop
xchg
push
cli
das
mov
dec
loop
(bad)
clc
outs
clc
mov
scas
(bad)
mov
scas
daa
popf
icebp
aaa
or
(bad)
addr16
inc
(bad)
sti
mov
(bad)
cmp
int
xchg
loop
inc
loop
call
js
jle
pop
mov
movs
sbb
dec
and
and
shl
inc
(bad)
adc
lds
jo
arpl
jmp
cmc
std
outs
call
call
(bad)
std
outs
std
in
idiv
std
outs
call
out
std
xchg
call
(bad)
std
out
call
pop
(bad)
xor
out
jmp
call
(bad)
std
pop
shl
rcr
jmp
cmc
pop
adc
jbe
mov
mov
in
inc
dec
jecxz
in
push
std
clc
ja
jnp
jbe
int
std
stos
imul
std
jb
xor
das
fs
cmps
jg
je
lods
add
(bad)
(bad)
jg
mov
aam
aas
add
pop
sbb
pop
hlt
jg
push
(bad)
stc
jg
mov
(bad)
(bad)
mov
outs
movs
jg
(bad)
jmp
jmp
pop
mov
inc
leave
out
inc
cli
hlt
mov
enter
leave
out
inc
repz
push
xor
mov
(bad)
das
jl
or
xor
call
inc
mov
mov
nop
ins
sar
sbb
pop
inc
mov
push
push
rol
pushf
call
xlat
inc
pop
nop
scas
sti
iret
dec
das
cld
out
mov
xor
daa
inc
in
retf
call
std
scas
call
das
inc
idiv
cmc
das
(bad)
mov
das
(bad)
cmp
idiv
std
scas
inc
outs
cld
test
xlat
(bad)
std
outs
inc
idiv
std
out
cld
movs
push
push
out
cld
(bad)
(bad)
std
out
cld
and
mov
das
std
mov
das
xlat
cmp
stos
imul
out
and
jg
mov
dec
std
add
je
jg
ja
pop
jmp
loop
in
inc
rcr
push
inc
outs
inc
lahf
adc
stos
in
cli
pop
(bad)
xchg
aas
(bad)
(bad)
(bad)
scas
cmp
mov
cld
sti
and
dec
call
xchg
dec
call
test
cmp
hlt
iret
mov
dec
(bad)
jmp
cli
test
jmp
scas
and
cld
cmps
movs
inc
dec
enter
mov
push
fisubr
jmp
dec
movs
xchg
inc
cli
stc
pop
xchg
pop
icebp
lahf
push
(bad)
mov
iret
jg
out
std
daa
shr
in
cld
xchg
scas
adc
jg
das
sti
mov
iret
(bad)
mov
iret
(bad)
mov
dec
(bad)
mov
(bad)
dec
sar
inc
mov
(bad)
cli
mov
(bad)
cli
mov
(bad)
jmp
add
outs
loope
jg
cld
cld
idiv
or
movs
mov
xchg
je
fbld
(bad)
cli
ja
adc
call
jg
pop
push
pop
and
(bad)
jae
fidivr
std
idiv
xor
std
outs
mov
cld
outs
loope
cld
dec
repnz
mov
hlt
cmc
out
cld
movs
mov
std
jg
out
mov
mov
pminub
dec
push
idiv
scas
sar
xchg
sbb
repz
addr16
outs
sar
(bad)
(bad)
scas
mov
or
inc
(bad)
cmp
sti
jg
mov
(bad)
xchg
mov
fstp
icebp
es
cmp
(bad)
(bad)
dec
ins
sbb
repz
(bad)
scas
mov
sbb
cli
(bad)
(bad)
das
leave
data16
mov
mov
(bad)
call
retf
sar
std
pop
jmp
fnstsw
cmp
pop
adc
rcr
aad
cmc
das
inc
fcmovnb
inc
jmp
leave
iret
mov
dec
dec
mov
call
mov
push
aas
mul
std
(bad)
idiv
std
addr16
(bad)
xlat
aas
icebp
cmps
(bad)
pop
push
aas
(bad)
daa
(bad)
(bad)
idiv
icebp
daa
(bad)
(bad)
xlat
aas
stc
cmps
cld
pop
push
aas
std
cmps
(bad)
(bad)
idiv
sti
cmps
(bad)
fistp
cli
xor
out
(bad)
sti
pop
stc
mov
out
(bad)
jmp
std
mov
scas
(bad)
sti
(bad)
or
xchg
std
and
inc
jg
push
and
call
das
sti
aaa
push
jecxz
cdq
je
leave
enter
(bad)
(bad)
idiv
call
idiv
aas
cmp
or
mov
aas
idiv
(bad)
mov
(bad)
(bad)
mov
pop
sti
mov
ja
cld
pop
push
(bad)
cli
aaa
(bad)
fdivr
jmp
stc
addr16
adc
(bad)
call
jl
jg
ud0
push
jg
or
bnd
(bad)
jmp
lahf
cli
jg
pop
(bad)
in
lahf
inc
std
(bad)
xor
jg
dec
jg
dec
adc
jmp
adc
stc
out
adc
(bad)
sbb
jmp
mov
inc
cmp
je
mov
fwait
stc
jg
sbb
jg
pop
rcr
arpl
and
movs
push
(bad)
scas
jg
je
mov
movs
das
(bad)
push
shl
(bad)
ficomp
arpl
imul
addr16
gs
stc
addr16
pop
push
aas
cli
daa
(bad)
(bad)
idiv
cli
daa
cld
(bad)
xlat
aas
mul
(bad)
pop
push
aas
inc
mov
aas
inc
mov
(bad)
std
jg
pop
jmp
pop
clc
ror
push
int
mov
sar
pop
mov
es
stc
jg
iret
dec
pop
mov
adc
add
lahf
(bad)
ds
call
cld
cmc
(bad)
xlat
pusha
jecxz
sti
jg
hlt
out
cld
aaa
or
jg
out
pop
lds
out
dec
std
(bad)
scas
cld
sbb
push
hlt
(bad)
(bad)
jmp
(bad)
shr
popf
icebp
daa
(bad)
(bad)
lea
popf
sbb
(bad)
jns
fstp
(bad)
scas
jg
(bad)
stc
mov
(bad)
(bad)
mov
dec
and
dec
(bad)
cdq
clc
mov
in
scas
jne
jmp
out
xchg
int3
(bad)
cmp
jg
jle
cmovns
cmps
movs
cmp
mov
xchg
jl
dec
xchg
pop
xchg
aad
xchg
hlt
(bad)
mov
xchg
fdivrp
daa
push
aas
jmp
scas
jg
notrack
jb
xor
fnstsw
inc
mov
jmp
arpl
scas
(bad)
jmp
es
(bad)
push
cli
popf
out
(bad)
cli
inc
jmp
sti
daa
or
addr16
fs
sar
jmp
(bad)
jg
das
sar
dec
xchg
std
xlat
jmp
loop
hlt
(bad)
jl
outs
and
call
jecxz
inc
jg
push
mov
std
scas
jmp
inc
dec
jg
mov
cli
xchg
or
mov
jg
sti
std
pop
cld
push
mov
(bad)
jmp
pop
jmp
das
mov
aaa
jp
ss
pop
aas
(bad)
fstp
jmp
mov
psubq
(bad)
and
mov
xchg
idiv
(bad)
inc
in
(bad)
out
jg
in
fbld
ins
icebp
jg
mov
test
jmp
jb
xchg
jnp
lahf
clc
(bad)
cli
pop
leave
scas
(bad)
jb
cmp
ror
ret
jl
cmps
adc
(bad)
imul
adc
shr
jmp
sar
das
clc
mov
in
lahf
and
daa
(bad)
adc
stc
jg
(bad)
xchg
ss
pop
das
mov
(bad)
std
jg
cmp
inc
pop
cld
xor
out
pop
dec
mov
dec
clc
mov
mov
inc
xor
pop
(bad)
std
mov
sbb
jle
mov
(bad)
into
pushf
sub
pop
in
(bad)
cli
out
enter
fs
iret
inc
inc
stc
lds
xchg
leave
pop
(bad)
mov
jmp
loope
das
nop
int3
std
dec
test
mov
jecxz
(bad)
std
iret
dec
jg
or
(bad)
aas
dec
clc
(bad)
repz
movs
mov
sar
jg
pop
inc
jg
jle
(bad)
call
(bad)
cli
fld
out
cli
cdq
(bad)
jmp
cli
sti
(bad)
mov
pop
call
inc
mov
(bad)
rol
pop
les
jbe
jg
lahf
stc
jg
xlat
in
loopne
(bad)
(bad)
lahf
aad
shl
jge
scas
mov
(bad)
dec
icebp
not
lods
mov
hlt
repz
and
icebp
jg
pop
jmp
pop
cmc
jg
mov
xlat
aas
cli
(bad)
retf
(bad)
jmp
mov
pop
jmp
cmps
(bad)
jmp
dec
pop
mov
cli
(bad)
aas
clc
xchg
aas
dec
pusha
dec
fld1
jg
das
adc
aas
cli
sbb
pop
clc
paddd
or
(bad)
push
icebp
fist
mov
and
std
jmp
jecxz
lahf
fs
jl
xchg
sbb
and
pop
std
pop
(bad)
jmp
std
jg
xlat
popa
sbb
add
test
in
std
or
(bad)
mov
push
das
dec
jg
xor
iret
push
das
jmp
(bad)
jmp
and
stc
jmp
cdq
(bad)
sti
(bad)
cli
fwait
call
(bad)
sti
(bad)
(bad)
pop
das
(bad)
out
(bad)
sti
out
mov
mov
jg
pop
aas
clc
mov
addr16
movs
repz
inc
jg
fstp
in
call
adc
in
jg
das
and
(bad)
xlat
nop
pop
and
icebp
iret
std
sbb
idiv
cmc
dec
dec
xlat
(bad)
std
idiv
cmp
jmp
jno
jg
fistp
xchg
shl
push
pop
adc
out
and
jg
das
stc
mov
psubd
psubd
fdivrp
jnp
jmp
fnstsw
jae
mov
mov
(bad)
out
mov
push
aas
lock
(bad)
(bad)
xlat
aas
cli
xchg
sti
imul
jmp
xchg
jmp
mov
test
stc
push
mov
stc
pop
std
or
and
or
stos
dec
inc
lahf
inc
jp
fs
movs
ja
(bad)
cld
mov
imul
add
int
dec
add
icebp
cmp
fdivr
mov
cmc
mov
lock
leave
mov
aas
stc
(bad)
rcr
jmp
hlt
jg
out
xor
stos
or
retf
std
(bad)
fidiv
idiv
cmc
xlat
das
jmp
(bad)
(bad)
(bad)
mov
scas
mov
out
mov
pop
jg
das
and
adc
aas
repnz
cld
pop
push
aas
dec
mov
hlt
idiv
sub
(bad)
(bad)
mov
pop
es
mov
std
(bad)
mov
xor
mov
adc
cli
inc
push
push
aaa
adc
leave
mov
call
or
fistp
repz
jg
pop
jg
out
out
outs
pop
adc
ja
out
push
jg
mov
pop
dec
jp
ins
out
mov
test
cld
dec
jg
fmul
dec
(bad)
scas
jg
loop
jg
scas
adc
aas
cli
jmp
outs
icebp
aas
and
(bad)
std
jbe
lock
inc
cmp
lahf
std
mov
dec
jg
mov
xchg
jg
(bad)
sti
dec
adc
adc
jmp
stos
(bad)
(bad)
out
clc
jg
data16
repz
sbb
fdivr
push
(bad)
cld
popa
xchg
(bad)
call
push
aas
xor
icebp
sti
lods
cmc
iret
pop
(bad)
pop
call
pop
push
sar
out
(bad)
push
pop
jg
stc
jg
pop
jg
cmc
jg
pop
jg
mov
fwait
jg
push
jg
or
std
movs
(bad)
dec
push
shl
idiv
xor
(bad)
jmp
(bad)
inc
out
std
dec
add
out
(bad)
cli
pop
sbb
jg
mov
ror
pusha
call
(bad)
mov
call
loop
and
xor
dec
cld
mov
jge
div
pop
sti
xor
iret
inc
mov
cmc
paddd
mov
scas
call
scas
cld
push
xor
dec
cmps
mov
sahf
je
aas
dec
cmp
pop
sti
add
inc
jmp
aas
std
xchg
mov
cmp
stos
in
cld
sar
push
mov
hlt
iret
jg
fimul
(bad)
jg
std
repz
sub
das
lahf
cld
pop
push
pop
ds
mov
(bad)
out
repnz
std
push
dec
jmp
(bad)
(bad)
neg
(bad)
(bad)
xlat
pop
jge
jg
fistp
(bad)
jg
mov
(bad)
std
jg
jne
dec
neg
xchg
in
std
xor
pop
shl
repz
(bad)
pop
jg
(bad)
jg
mov
out
mov
neg
inc
jb
ja
mov
stos
les
jl
cld
jmp
cld
xor
push
mov
jl
outs
adc
dec
mov
inc
leave
sub
iret
push
jg
jg
(bad)
jecxz
cmp
mov
cld
(bad)
outs
xchg
cs
addr16
adc
in
cli
and
sti
daa
dec
(bad)
std
xchg
jg
enter
seto
nop
hlt
sub
das
(bad)
jno
pop
(bad)
jg
psubd
aas
cld
mov
push
push
outs
scas
jg
loop
push
push
xchg
jl
(bad)
cli
mov
push
push
jg
lahf
jg
out
push
pop
dec
jg
movs
mov
jmp
aas
int
pop
inc
jae
std
pop
push
pop
inc
repz
repz
lahf
(bad)
(bad)
neg
xor
stos
jb
pushf
out
scas
sar
xchg
aam
scas
mov
int3
lds
jae
mov
call
(bad)
std
dec
dec
icebp
outs
(bad)
jns
mov
xchg
jmp
(bad)
js
in
jg
in
xchg
jae
sahf
sti
jg
aaa
imul
cmps
(bad)
cmp
std
dec
xchg
jl
jg
icebp
fistp
inc
mov
cmc
pop
and
pop
hlt
daa
sti
clc
out
xchg
mov
jg
mov
mov
clc
push
(bad)
and
aas
movs
jg
icebp
aas
loop
(bad)
out
dec
dec
iret
push
jmp
repz
sahf
call
xlat
pop
clc
jnp
in
(bad)
jmp
cli
jge
scas
(bad)
jmp
(bad)
sub
call
mov
dec
jg
stc
call
sti
std
pop
call
pop
cmp
mov
scas
pushf
std
pop
cwde
xchg
(bad)
jmp
sti
std
in
fild
fistp
jge
push
inc
movs
mov
outs
cmc
outs
call
pop
loop
(bad)
jmp
and
lock
xchg
pop
inc
ss
(bad)
cli
xlat
dec
(bad)
cld
stos
jg
std
cld
push
push
not
sub
out
(bad)
out
jmp
(bad)
idiv
(bad)
(bad)
adc
(bad)
pop
inc
ins
dec
ja
sbb
jecxz
fstp
lds
in
std
sub
idiv
mov
(bad)
and
inc
pop
dec
in
(bad)
ins
retf
sbb
maskmovq
test
stc
aas
jg
push
(bad)
push
push
jmp
imul
out
jg
stc
scas
jmp
std
jg
call
in
(bad)
sti
iret
jg
jg
pop
jg
fwait
(bad)
jmp
dec
mov
mov
(bad)
jmp
cli
leave
(bad)
jmp
dec
(bad)
inc
ins
(bad)
out
mov
mov
(bad)
rcr
idiv
(bad)
mov
das
cli
out
push
jg
inc
(bad)
mov
das
(bad)
mov
mov
cwde
xchg
dec
inc
cld
call
xchg
cs
mov
cmp
push
lahf
and
bnd
pushf
std
push
xchg
or
daa
(bad)
push
dec
pop
inc
jg
outs
inc
stos
cld
mov
cmp
call
in
test
push
scas
nop
mov
std
sti
xchg
out
push
and
add
jecxz
out
and
dec
(bad)
popa
repnz
(bad)
fnstcw
cwde
in
sub
mov
stc
and
jecxz
mov
add
out
dec
mov
out
jb
lahf
stc
jg
idiv
cmc
jg
jg
out
xor
stos
or
pop
(bad)
cld
mov
(bad)
jg
cmp
(bad)
outs
repz
mov
jns
neg
jle
jg
cmp
(bad)
xlat
lahf
sti
in
cmc
jg
jns
imul
pop
inc
jae
xchg
cld
ds
fucomi
retf
pop
cld
add
iret
(bad)
std
pop
pusha
(bad)
call
int3
in
lock
cs
and
(bad)
jmp
cmp
in
daa
jge
retf
(bad)
adc
dec
cmp
cld
iret
mov
aad
dec
cli
(bad)
fbld
cli
push
xchg
iret
cld
test
std
lahf
push
mov
cmc
out
adc
call
ja
xlat
(bad)
std
setbe
aaa
(bad)
(bad)
jg
stos
xor
jmp
in
inc
stc
js
and
push
mov
and
repz
mov
addr16
pop
dec
mov
(bad)
std
jg
pop
xor
call
mov
jg
fcomip
mov
lods
jg
sub
pop
jg
fxch
loop
mov
std
pop
call
push
addr16
(bad)
mov
(bad)
jmp
movs
lahf
inc
addr16
in
cli
mov
das
imul
mov
std
lahf
(bad)
jns
inc
mov
cmc
mov
leave
aaa
stc
adc
das
in
(bad)
scas
jg
das
and
fnstsw
sub
(bad)
pop
scas
std
outs
inc
mov
xchg
(bad)
(bad)
jmp
std
(bad)
call
call
(bad)
fstp
inc
dec
std
(bad)
fist
mov
jl
jg
call
bound
mov
dec
cli
out
lahf
and
lahf
std
add
push
call
mov
(bad)
xchg
jg
(bad)
cli
mov
aas
stc
mov
(bad)
(bad)
jmp
jg
leave
neg
fistp
jmp
(bad)
idiv
call
jmp
sti
iret
cmp
mov
idiv
mov
iret
jle
jg
outs
(bad)
cld
dec
jg
jg
fistp
xlat
sahf
(bad)
(bad)
mov
std
lahf
repz
jg
test
mov
cli
sti
jle
stc
sub
xor
iret
jg
setno
(bad)
mov
(bad)
xor
cmps
pop
add
test
pushf
aas
in
dec
stc
jg
mov
or
idiv
imul
(bad)
aas
dec
mov
ficomp
xor
jmp
and
and
xlat
mov
dec
mov
and
mov
mov
(bad)
jmp
stc
(bad)
inc
(bad)
sti
jg
scas
jmp
call
gs
nop
(bad)
jnp
call
dec
mov
(bad)
cli
mov
push
push
jg
lahf
jg
out
mov
std
dec
jge
jae
push
jmp
mov
cld
clc
(bad)
cli
mov
cmps
inc
pusha
std
sub
aam
in
(bad)
mov
aas
jmp
movs
mov
cwde
mov
fwait
jl
cli
stc
push
jge
mov
inc
loop
jg
cld
xchg
jg
loop
jg
cld
mov
pop
lock
std
(bad)
call
jl
(bad)
sti
aas
mov
cmp
pop
es
sti
push
(bad)
sbb
adc
cmp
inc
cli
das
enter
(bad)
shr
add
retf
aas
dec
cli
jmp
mov
bound
jmp
adc
jmp
pop
(bad)
sub
mov
mov
pop
(bad)
pop
call
lahf
clc
clc
xchg
(bad)
aas
or
dec
sti
mov
(bad)
xchg
mov
rcr
lahf
jno
mov
xor
stos
dec
xlat
std
adc
jge
xlat
mov
cmc
iret
(bad)
mov
std
add
pop
jb
sbb
std
arpl
repz
cmp
call
sti
or
push
movs
jae
push
sti
outs
(bad)
outs
and
mov
sbb
jg
jb
add
std
retf
jle
(bad)
jmp
inc
(bad)
pop
jmp
lahf
inc
stc
mov
call
mov
outs
stos
jg
repz
(bad)
idiv
mov
(bad)
push
mov
outs
out
jmp
outs
push
lock
(bad)
loopne
out
out
jg
std
(bad)
jmp
jmp
aas
movs
fistp
in
jg
jle
or
jmp
in
jp
jg
das
jg
ret
(bad)
jmp
stc
adc
(bad)
out
jmp
dec
(bad)
in
(bad)
cli
pop
dec
(bad)
pushf
xchg
(bad)
sti
jg
jae
(bad)
pop
dec
lahf
jg
jg
das
jg
sar
sti
jg
or
pop
icebp
adc
idiv
repnz
push
push
paddw
call
push
mov
push
push
xlat
(bad)
fdivrp
idiv
repnz
jg
(bad)
cli
pop
(bad)
cli
aaa
push
push
push
rcr
jmp
repnz
mov
mov
out
dec
cld
mov
out
inc
(bad)
call
pop
pop
(bad)
mov
repnz
inc
call
push
aas
std
jmp
idiv
repnz
(bad)
jnp
idiv
repnz
(bad)
jmp
xlat
push
pop
std
sbb
imul
in
inc
jmp
aas
std
mov
push
push
outs
lods
jg
aad
clc
pop
(bad)
(bad)
fstp
lahf
std
pop
hlt
(bad)
(bad)
(bad)
mov
imul
sub
cmp
(bad)
aas
std
mov
(bad)
aas
cld
std
mov
push
mov
dec
mov
in
(bad)
adc
jg
scas
dec
jg
jg
(bad)
mov
(bad)
scas
pop
sar
jmp
idiv
jmp
push
fistp
(bad)
dec
jmp
sbb
xchg
loope
jmp
push
mov
jg
pop
loope
call
push
(bad)
out
push
std
(bad)
aas
push
(bad)
stc
(bad)
std
aas
dec
jg
iret
inc
jg
jg
dec
inc
jg
jg
dec
jmp
jg
ds
inc
in
dec
mov
(bad)
clc
aas
cld
mov
idiv
clc
aas
sar
(bad)
sti
(bad)
jmp
in
(bad)
(bad)
gs
dec
hlt
jmp
mov
cmp
mov
aas
aas
int3
(bad)
lods
cmp
std
(bad)
(bad)
clc
aas
dec
pop
std
stos
mov
idiv
cmp
stos
jle
out
(bad)
(bad)
(bad)
idiv
jg
scas
in
std
(bad)
jg
pop
call
loopne
mov
fdivrp
mov
sar
(bad)
in
jmp
jg
mov
std
ins
jle
jg
and
pop
mov
cli
popf
dec
out
dec
(bad)
iret
call
xor
jg
(bad)
sti
aas
jmp
pop
jg
fistp
pop
cld
mov
fbld
pop
aas
jmp
pop
jg
fistp
pop
cld
mov
fbld
jne
clc
ja
xchg
pop
gs
(bad)
(bad)
ja
(bad)
pop
inc
jg
mov
scas
aas
mov
stc
frstor
inc
xchg
(bad)
out
lahf
(bad)
cli
mov
pop
ds
cmc
daa
jmp
push
fucomip
ja
pop
jg
fisttp
std
jmp
out
mov
ss
sub
call
pop
cld
xchg
mov
xchg
(bad)
stc
cmc
dec
push
out
inc
iret
sar
jmp
call
sar
(bad)
(bad)
(bad)
out
(bad)
sti
(bad)
(bad)
idiv
(bad)
fcomip
idiv
jge
out
mov
(bad)
(bad)
idiv
mov
jge
stc
out
mov
aas
dec
je
cmc
pop
mov
hlt
rol
xor
std
cmp
(bad)
jg
std
jg
inc
(bad)
call
aas
push
mov
fistp
fistp
call
mov
in
pop
mul
jle
daa
jle
(bad)
idiv
mov
out
jle
mov
leave
lahf
cld
leave
lea
jmp
fistp
popf
std
mov
out
cmps
lahf
jle
imul
addr16
out
iret
(bad)
sahf
pop
cmp
cld
call
out
iret
(bad)
sahf
outs
in
adc
jle
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
out
cmp
std
sar
(bad)
sahf
pop
cmp
and
jmp
stc
jg
push
fldenv
jmp
popa
nop
mov
add
test
outs
cld
sbb
(bad)
mov
cld
push
mov
(bad)
std
push
dec
xchg
cld
mov
lahf
push
cli
std
xlat
add
xlat
fcomip
ja
cmc
jmp
aas
cmps
(bad)
jg
mov
mov
std
mov
lods
jle
pop
push
fistp
cli
mov
(bad)
call
jbe
push
popf
jg
loopne
dec
cld
(bad)
(bad)
mov
in
cmp
(bad)
mov
in
(bad)
(bad)
call
(bad)
mov
pop
(bad)
xchg
mov
loope
out
std
mov
xchg
aaa
sti
ins
jle
(bad)
mov
push
call
aas
cmc
outs
stc
lahf
jmp
(bad)
stc
push
(bad)
call
clc
(bad)
(bad)
clc
aas
dec
jg
pop
cmp
idiv
std
jg
(bad)
(bad)
(bad)
ja
pop
lock
push
mov
call
(bad)
call
xlat
push
(bad)
(bad)
jmp
retf
push
mov
clc
das
dec
jg
lahf
inc
(bad)
call
out
(bad)
(bad)
jmp
idiv
and
cli
lea
fcomip
ja
popf
jle
inc
lahf
dec
repz
(bad)
(bad)
das
(bad)
notrack
cmp
pop
dec
lahf
dec
mov
sub
das
movs
(bad)
stc
mov
das
movs
iret
jmp
notrack
cld
push
fcmovu
lahf
dec
fwait
dec
mov
mov
xchg
cs
(bad)
sti
jg
lahf
sbb
jg
lahf
cld
daa
ror
ror
stc
int
mov
in
mov
popf
jg
fistp
das
dec
dec
in
ret
inc
xor
loop
lahf
(bad)
mov
cs
(bad)
retf
dec
xor
icebp
sar
lock
loope
push
jge
das
movs
sar
cmc
iret
inc
jg
(bad)
std
idiv
in
aam
cmc
idiv
in
xor
(bad)
(bad)
rcr
(bad)
pop
jmp
pop
std
(bad)
(bad)
fistp
pop
stc
inc
call
rcr
repz
cld
std
paddd
jg
(bad)
cld
xchg
call
xlat
(bad)
push
(bad)
mov
neg
dec
ins
inc
mov
lahf
call
pop
jmp
(bad)
jmp
stc
sbb
mov
sti
pop
stc
sbb
int3
(bad)
sti
pop
(bad)
sbb
int3
(bad)
jmp
cld
imul
(bad)
sti
pop
cld
imul
(bad)
jmp
cld
imul
push
(bad)
call
enter
std
fistp
pop
dec
jo
mov
(bad)
(bad)
xchg
aas
idiv
inc
call
xchg
(bad)
outs
cli
mov
scas
jg
mov
mov
jmp
jecxz
out
jg
scas
std
sar
scas
jg
outs
std
or
out
jg
outs
cmps
mov
fstp
hlt
cmp
(bad)
(bad)
cli
cmps
(bad)
fidivr
(bad)
idiv
(bad)
out
(bad)
(bad)
inc
(bad)
(bad)
mov
(bad)
mov
pop
push
mov
(bad)
(bad)
mov
(bad)
out
jg
outs
sti
mov
scas
jg
pop
clc
sbb
std
push
jg
pop
sti
jg
or
clc
fcomip
jg
mov
(bad)
(bad)
jg
stos
(bad)
fdivr
bnd
imul
aas
(bad)
jg
inc
jmp
jg
xchg
jg
fldcw
sti
push
dec
sbb
ins
jg
repz
movs
in
ret
(bad)
sti
scas
js
fcos
std
xchg
mov
call
lahf
(bad)
(bad)
jmp
imul
call
stc
pop
(bad)
out
icebp
(bad)
std
xlat
cld
sbb
jmp
fwait
pop
hlt
out
out
sar
push
inc
push
pop
jno
jnp
fistp
das
jns
jg
push
mov
push
call
iret
(bad)
out
mov
neg
xchg
mov
or
sti
outs
cli
mov
pop
(bad)
fcomp
sti
(bad)
(bad)
pop
(bad)
clc
out
(bad)
fistp
pop
cld
(bad)
xlat
inc
iret
(bad)
out
mov
push
cli
out
(bad)
stc
jge
out
mov
out
mov
jg
std
jg
cmc
jg
cmp
fistp
std
(bad)
out
push
stos
(bad)
sti
out
sti
jae
push
(bad)
pop
scas
(bad)
out
jg
out
clc
xor
out
jg
scas
std
arpl
out
mov
out
jg
das
mov
mov
jmp
mov
jg
das
inc
(bad)
out
jg
outs
(bad)
adc
out
jg
outs
(bad)
adc
out
jg
outs
clc
arpl
out
jg
das
stc
cdq
(bad)
sti
lahf
(bad)
fwait
(bad)
mov
pop
(bad)
in
sti
pop
cld
cmp
lods
(bad)
sti
lahf
(bad)
(bad)
mov
sti
lahf
sti
mov
(bad)
idiv
popf
inc
(bad)
stc
sar
mov
int
pop
(bad)
call
mov
jg
inc
stos
mov
mov
out
aas
out
mov
out
mov
fistp
jb
(bad)
(bad)
repz
(bad)
neg
jg
jb
(bad)
dec
jg
shr
jmp
or
cmp
mov
hlt
cli
sbb
enter
fild
sti
imul
outs
(bad)
fistp
pop
repnz
(bad)
sti
scas
cli
and
mov
fistp
mov
aas
(bad)
jnp
neg
lock
mov
aas
cli
daa
jmp
jle
(bad)
(bad)
fwait
(bad)
fcomp
out
(bad)
pop
(bad)
mov
(bad)
movs
fistp
les
cmc
jg
lods
aam
outs
call
cli
ror
(bad)
out
mov
mov
hlt
std
out
(bad)
jg
and
das
std
mov
xchg
cld
fistp
lahf
pop
adc
lock
pop
std
fistp
lahf
pop
std
(bad)
loop
cmc
out
(bad)
rcr
mov
(bad)
out
mov
out
jg
scas
clc
inc
mov
aam
std
dec
std
or
iret
(bad)
mov
dec
stc
mov
xor
stc
das
jmp
call
std
pop
hlt
stc
mov
stc
mov
(bad)
jmp
mov
jge
jg
movs
cmc
fdivrp
std
xchg
pop
push
cld
pop
jg
(bad)
jmp
mov
daa
(bad)
repnz
iret
call
nop
(bad)
in
push
(bad)
out
mov
pop
jg
pop
hlt
cmp
loopne
push
xlat
cld
xchg
sar
sti
scas
std
movs
iret
(bad)
scas
mov
(bad)
out
mov
into
(bad)
scas
mov
(bad)
out
mov
jg
ja
jl
(bad)
push
aaa
adc
mov
jle
jg
aad
loopne
(bad)
out
mov
jg
cmc
jg
dec
cld
fcomip
jg
or
hlt
jnp
pop
jg
pop
std
jnp
dec
adc
aas
stc
jg
popf
jg
(bad)
idiv
jns
call
cld
cli
(bad)
cli
daa
(bad)
mov
inc
push
pop
cli
jg
jae
pop
(bad)
in
fcomip
daa
std
pop
inc
pop
mov
mov
(bad)
cli
mov
(bad)
cli
mov
ud0
paddw
dec
(bad)
mov
addr16
scas
jg
das
stc
(bad)
aas
clc
pop
pop
std
pop
jg
lahf
pop
adc
(bad)
cli
cld
dec
cli
mov
clc
mov
psubw
fistp
jmp
push
jmp
mov
in
std
jg
(bad)
(bad)
repz
cmp
neg
xor
out
idiv
out
mov
inc
std
pop
xchg
or
(bad)
(bad)
out
mov
dec
call
repnz
xchg
cmp
adc
(bad)
stos
jle
xor
retf
sbb
xor
hlt
(bad)
(bad)
jmp
das
jg
lea
and
fistp
pop
cmc
cli
(bad)
(bad)
sbb
mov
cld
jg
xlat
pop
dec
(bad)
sub
dec
dec
mov
out
(bad)
sti
outs
and
stc
fisttp
loope
and
pop
xchg
mov
or
clc
mov
lds
hlt
idiv
add
call
mov
call
call
cli
aas
idiv
(bad)
cmps
(bad)
cmps
aas
(bad)
(bad)
(bad)
xlat
(bad)
loope
repnz
(bad)
cmps
dec
cmps
dec
(bad)
jg
scas
sti
mov
shr
(bad)
cld
mov
(bad)
sti
mov
(bad)
(bad)
adc
arpl
out
push
pop
(bad)
sti
dec
out
(bad)
xchg
(bad)
sti
(bad)
pop
(bad)
(bad)
(bad)
sti
aas
cld
paddd
cld
mov
cli
cld
pop
jg
lahf
mov
leave
mov
scas
aas
out
in
fdivrp
std
out
out
(bad)
fistp
stc
call
jecxz
sti
iret
jns
idiv
cli
jae
out
(bad)
fistp
mov
stos
sti
push
lahf
push
in
(bad)
pop
jg
cli
sar
pop
pop
ds
std
pop
jg
das
cmp
fnstcw
jg
cmps
dec
fdivrp
scas
mov
das
or
ror
out
and
ds
into
push
aaa
(bad)
push
outs
(bad)
out
mov
jmp
fdivrp
std
aaa
(bad)
push
pop
std
pop
jg
rol
mov
aaa
cld
adc
clc
jmp
std
adc
daa
cld
jle
pop
mov
in
outs
sti
xchg
mov
or
jmp
jle
mov
mov
(bad)
fnstcw
(bad)
jmp
mov
(bad)
popf
hlt
inc
std
pop
shl
inc
cmps
(bad)
jmp
stc
pop
(bad)
mov
sti
pop
clc
mov
(bad)
out
scas
(bad)
sti
pop
std
pop
(bad)
sar
jmp
(bad)
(bad)
sub
xor
dec
jg
pop
hlt
jg
pop
mov
dec
(bad)
jg
sbb
(bad)
mov
fistp
pop
lock
(bad)
sti
iret
clc
add
neg
(bad)
fdiv
popf
(bad)
sti
iret
mov
jae
mov
call
aad
(bad)
std
out
out
std
fistp
shr
das
and
push
cli
sub
jnp
fistp
shr
scas
std
inc
mov
(bad)
nop
int3
cld
fist
cld
and
push
int3
daa
jg
icebp
adc
int
inc
mov
jg
rol
aas
cmc
jg
int
sti
(bad)
cmps
pop
nop
in
dec
(bad)
out
mov
cmp
mov
jg
pushf
fs
(bad)
(bad)
jnp
in
and
std
(bad)
pusha
ds
inc
(bad)
xor
cmp
iret
nop
fidivr
jg
cmp
std
inc
and
jg
icebp
enter
in
cld
mov
iret
stc
mov
iret
clc
mov
inc
fcomip
out
(bad)
into
aas
repz
(bad)
idiv
stc
aaa
cld
(bad)
out
aas
div
(bad)
idiv
std
mov
(bad)
icebp
mov
inc
aas
std
mov
(bad)
cld
sti
(bad)
pop
mov
psrlw
call
cld
pop
jg
lahf
pop
std
fistp
out
aas
cli
mov
jl
(bad)
(bad)
mov
hlt
(bad)
(bad)
xor
jle
out
(bad)
(bad)
mov
(bad)
(bad)
scas
aas
mov
lock
pop
mov
inc
(bad)
(bad)
out
aas
cmps
ds
mov
(bad)
jmp
pop
cmp
cmc
addr16
pop
dec
jg
inc
les
sbb
jmp
mov
xchg
outs
stc
imul
das
pop
mov
out
xor
paddb
cmp
add
loop
jmp
call
(bad)
lahf
std
pop
jg
lahf
cmp
push
xchg
cmps
mov
mov
inc
ss
pusha
fld
stc
mov
mov
std
mov
mov
cld
adc
sar
cmc
iret
cld
lods
jg
(bad)
std
das
std
jge
sar
add
sub
outs
call
repz
iret
nop
or
mov
lahf
(bad)
jg
mov
pop
lock
fwait
inc
fcomip
jg
(bad)
aam
bnd
pop
jmp
fcomip
jg
xchg
rcr
(bad)
jg
sti
inc
(bad)
jg
or
pop
idiv
jl
pop
dec
lahf
push
(bad)
cld
scas
(bad)
jmp
cli
jg
(bad)
call
jg
std
jg
xor
out
(bad)
std
inc
(bad)
(bad)
ja
out
aas
cs
mov
(bad)
std
(bad)
dec
out
std
fistp
ins
(bad)
(bad)
(bad)
jecxz
push
sti
push
lahf
push
sbb
(bad)
inc
loop
(bad)
std
daa
(bad)
hlt
inc
cli
stc
lock
(bad)
push
retf
neg
(bad)
xor
addr16
pop
jo
bnd
add
inc
push
fs
dec
(bad)
out
mov
jg
push
jg
repz
sti
das
sti
(bad)
out
mov
hlt
in
fwait
(bad)
sti
outs
daa
cmp
popf
jg
pushf
js
mov
cmps
(bad)
out
mov
(bad)
sti
outs
sti
jecxz
cld
fistp
lahf
repnz
cld
fistp
lahf
(bad)
sti
(bad)
fistp
lahf
repnz
mov
push
(bad)
cmps
jle
(bad)
(bad)
cmp
movs
(bad)
(bad)
(bad)
jnp
lods
fcos
std
not
(bad)
inc
(bad)
mov
(bad)
(bad)
sti
dec
jmp
and
daa
dec
lahf
stc
mov
scas
inc
out
jg
outs
push
(bad)
out
jg
je
call
jg
shr
dec
std
mov
das
(bad)
mov
scas
cld
mov
outs
clc
mov
clc
xchg
(bad)
pop
(bad)
push
loop
mov
mov
sar
hlt
xlat
fmul
aas
inc
xchg
dec
repz
xor
fyl2xp1
mov
push
(bad)
mov
daa
jg
jg
mov
jmp
daa
pop
cmp
lahf
ud0
jg
dec
out
push
lahf
cld
sar
das
dec
(bad)
out
aas
mov
(bad)
out
aas
out
in
(bad)
cli
xor
ja
in
(bad)
jmp
mov
ret
out
dec
shr
scas
mov
(bad)
dec
jg
in
lock
cld
fistp
pop
cli
jmp
push
std
(bad)
jg
xchg
jg
push
push
pop
repz
jl
(bad)
(bad)
imul
out
call
adc
aam
(bad)
cli
pop
dec
fistp
sub
out
mov
pop
jg
lahf
call
push
aas
lock
cld
mov
call
lods
out
cli
daa
call
cmp
lahf
cld
imul
in
(bad)
mov
iret
daa
sbb
push
(bad)
addr16
(bad)
rcr
repz
mov
imul
call
(bad)
fcomp
jg
jmp
fcomp
hlt
clc
jnp
scas
jg
push
(bad)
call
sub
and
cld
xchg
out
jmp
pop
jmp
jmp
(bad)
pop
loop
iret
das
clc
add
sar
hlt
aas
std
outs
stc
xchg
mov
clc
aas
push
mov
jg
dec
(bad)
out
aas
hlt
cmps
mov
out
aas
in
jnp
(bad)
out
aas
cld
idiv
mov
inc
sar
icebp
repz
cli
std
out
adc
idiv
out
aas
es
jg
jno
xchg
push
vpmacssdql
neg
cmp
mov
std
push
push
lahf
pop
cld
sahf
push
lahf
push
sbb
fistp
jns
jg
sub
lea
ins
icebp
hlt
(bad)
(bad)
xor
mov
addr16
mov
lods
ds
mov
(bad)
sti
iret
pop
aas
(bad)
mov
int
std
xchg
cld
and
(bad)
xchg
mov
(bad)
and
(bad)
mov
mov
bnd
neg
(bad)
inc
push
pop
inc
(bad)
jmp
movs
cld
(bad)
(bad)
fwait
dec
pop
std
lods
movs
xchg
(bad)
(bad)
aas
stos
cld
mov
aaa
std
sbb
(bad)
std
ja
add
mov
mov
inc
xlat
(bad)
adc
imul
(bad)
sti
lahf
stc
cmp
call
pop
dec
(bad)
sti
pop
std
(bad)
call
inc
inc
(bad)
sti
(bad)
addr16
idiv
sub
(bad)
std
pop
std
jmp
sar
std
pop
(bad)
imul
(bad)
std
lahf
cld
fwait
call
std
std
(bad)
cld
(bad)
xor
mov
call
jg
repnz
sahf
jge
lods
(bad)
cmp
in
fisubr
pop
scas
mov
out
cmp
mov
fwait
mov
std
rcr
std
mov
mov
(bad)
mov
imul
cli
jge
(bad)
(bad)
out
jae
(bad)
inc
cmc
loopne
pop
sar
jg
idiv
std
mov
(bad)
sti
xor
cld
mov
fistp
jg
(bad)
std
dec
out
out
std
xchg
mov
outs
lahf
(bad)
fistp
std
dec
and
mov
out
aas
pushf
(bad)
inc
fbld
pop
test
(bad)
(bad)
mov
jg
iret
jl
jg
mov
in
(bad)
sti
(bad)
sti
add
(bad)
sti
dec
cld
cmp
sti
iret
clc
arpl
(bad)
sti
dec
sti
mov
iret
cli
adc
mov
(bad)
inc
rcr
jmp
jg
pop
(bad)
fistp
pop
std
cmp
scas
cli
retf
das
(bad)
out
mov
push
pop
repz
pop
(bad)
fistp
pop
std
mov
out
mov
(bad)
out
mov
(bad)
out
mov
(bad)
out
mov
(bad)
out
mov
(bad)
out
jmp
aas
clc
ja
mov
std
outs
call
call
das
pop
cld
ffreep
cmps
ja
scas
daa
lahf
(bad)
mov
mov
std
pop
iret
sahf
jg
jg
sti
lds
hlt
repz
push
std
lahf
jg
out
xlat
mov
out
iret
mov
pushf
mov
(bad)
out
out
cld
(bad)
call
test
xlat
(bad)
stc
mov
std
mov
(bad)
std
sti
pop
fdivr
mov
jmp
jp
neg
jl
idiv
mov
pushf
hlt
jnp
aas
out
iret
(bad)
out
and
fucomp
icebp
jg
inc
sar
jnp
xor
scas
lahf
(bad)
cdq
daa
push
haddps
jg
nop
cmp
(bad)
cli
leave
mov
push
ja
cmp
daa
dec
out
std
fsubp
mov
outs
call
iret
(bad)
out
cld
(bad)
stc
mov
(bad)
mov
pop
ds
mov
(bad)
clc
mov
pop
repz
(bad)
mov
pop
retf
aas
icebp
mov
sti
pop
ror
cmc
lahf
cmc
out
mov
mov
(bad)
fistp
(bad)
scas
jmp
lock
mul
lahf
(bad)
jnp
fucomip
(bad)
cld
out
std
pop
push
mov
add
pop
cli
xor
(bad)
aas
repz
sub
std
in
std
push
lods
(bad)
sti
jmp
(bad)
adc
arpl
jg
lahf
popf
jle
jmp
hlt
call
out
jae
(bad)
dec
aas
pusha
out
(bad)
(bad)
(bad)
cld
sar
outs
mov
out
repnz
mov
jnp
aas
(bad)
mov
cmps
clc
hlt
(bad)
(bad)
std
stos
inc
push
jge
jg
mov
cld
jmp
test
hlt
push
jnp
xchg
cld
or
(bad)
mov
lahf
(bad)
fs
jg
(bad)
addr16
neg
(bad)
(bad)
ds
mov
push
in
psubw
call
(bad)
aas
loope
(bad)
sti
in
pop
jmp
jmp
mov
(bad)
sti
psubb
std
jg
jg
retf
(bad)
jnp
out
ds
cmc
pop
repnz
(bad)
sti
pop
std
mov
call
jmp
out
stos
mov
jmp
mov
mov
out
mov
jg
xchg
fidivr
cmp
jg
jge
scas
pop
cld
xor
(bad)
std
jnp
jl
jg
aas
push
sbb
jmp
add
jge
lods
(bad)
jmp
jl
cmp
fs
repz
lahf
cld
pop
scas
mov
out
xor
call
(bad)
(bad)
sti
in
daa
out
(bad)
pop
mov
jg
inc
jbe
(bad)
cli
test
out
mov
mov
mov
cld
mov
jg
adc
cld
add
out
xchg
jmp
xchg
(bad)
sti
imul
sti
mov
inc
cmp
(bad)
cli
loop
cs
call
jg
out
cmc
jg
hlt
pop
stc
popf
(bad)
sti
cld
psubq
call
ja
pop
lahf
(bad)
pop
push
mov
dec
(bad)
scas
fistp
ror
scas
mov
out
vminsd
fnstcw
test
lahf
dec
je
push
pop
std
pop
sar
cli
idiv
mov
jmp
(bad)
jnp
(bad)
mov
jmp
imul
jge
out
aas
in
leave
(bad)
scas
aas
in
pop
cld
fistp
(bad)
(bad)
call
(bad)
mov
call
jg
das
(bad)
pop
(bad)
jmp
sti
scas
(bad)
out
pop
cmc
mov
push
(bad)
(bad)
in
(bad)
daa
mov
call
inc
lea
leave
xlat
out
icebp
je
(bad)
(bad)
cmp
outs
(bad)
mov
inc
call
shl
mov
(bad)
(bad)
sti
fcmovnu
(bad)
(bad)
out
mov
ret
(bad)
out
mov
in
std
(bad)
stc
jge
std
fild
in
cld
push
and
aas
inc
mov
mov
sbb
fwait
(bad)
sti
psubb
sahf
(bad)
fistp
shl
idiv
inc
mov
jg
leave
rcr
(bad)
jnp
jg
inc
push
push
dec
push
das
(bad)
out
mov
test
mov
mov
aas
in
stos
(bad)
sti
psubb
pop
(bad)
fistp
daa
inc
(bad)
jge
addr16
fdivrp
mul
pop
ds
mov
idiv
sti
push
jle
jmp
fistp
std
cmps
mov
iret
cld
out
(bad)
mov
jg
jg
idiv
out
retf
aas
out
idiv
mov
cli
mov
cli
(bad)
(bad)
aaa
call
fnstcw
push
(bad)
out
pop
stc
(bad)
pop
push
push
jg
mov
sti
(bad)
(bad)
mov
pop
(bad)
fist
repnz
out
push
cli
cld
pop
aas
clc
movs
aad
std
fnstenv
mov
or
jecxz
mov
cld
neg
sti
mov
mov
stc
jmp
neg
sti
mov
(bad)
jp
jnp
std
fistp
jge
std
jnp
xlat
ja
(bad)
sti
push
ja
sti
call
fwait
jmp
mov
jmp
repz
fild
jmp
clc
adc
(bad)
(bad)
std
sub
and
ds
inc
pop
std
fistp
(bad)
cli
jge
inc
mov
(bad)
jnp
daa
mov
test
ja
(bad)
jl
jg
dec
fisttp
(bad)
in
jne
out
clc
(bad)
(bad)
out
(bad)
cli
and
jg
cmp
jg
in
(bad)
xchg
jmp
stc
mov
(bad)
jmp
jmp
cli
mov
(bad)
clc
mov
paddw
paddd
xchg
cld
(bad)
rcr
cmc
jg
xchg
jg
in
std
outs
push
ud0
dec
(bad)
mov
iret
(bad)
mov
gs
jmp
lahf
(bad)
scas
(bad)
sti
(bad)
cld
lahf
cmp
jmp
call
(bad)
call
mov
repz
dec
clc
adc
addr16
(bad)
mov
inc
mov
div
xlat
dec
(bad)
out
aas
loopne
sar
sti
mul
jg
and
cmc
addr16
xchg
call
dec
inc
ds
mov
out
out
pushf
pop
cld
(bad)
mov
dec
lock
mov
jg
push
out
out
(bad)
and
jg
in
(bad)
adc
test
(bad)
std
xchg
adc
out
call
jg
pop
lock
sar
jg
test
push
inc
jg
jg
dec
std
fucomip
lahf
stc
sti
(bad)
fistp
(bad)
out
aas
std
das
(bad)
jmp
pop
jmp
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
aas
(bad)
cmp
lock
sti
aas
sti
(bad)
sar
sti
aas
stc
pop
call
fwait
jmp
(bad)
sti
aas
cli
fwait
(bad)
mov
sbb
pop
call
lahf
icebp
jg
mov
call
iret
pop
cmc
pop
(bad)
(bad)
xlat
push
(bad)
(bad)
(bad)
jnp
sar
(bad)
jg
mov
jg
mov
push
repnz
mov
dec
in
jge
cld
sbb
lahf
add
cld
pop
dec
lahf
(bad)
jmp
jg
std
jg
sahf
outs
jbe
scas
outs
dec
out
(bad)
fistp
fdivrp
repnz
loope
cmc
adc
daa
paddd
jg
call
std
(bad)
jmp
out
(bad)
jmp
loopne
jp
cmp
mov
stos
(bad)
call
dec
dec
sar
dec
push
xchg
adc
aad
hlt
out
repz
sar
out
(bad)
jg
xchg
jg
idiv
scas
aas
sub
daa
dec
xor
mov
lahf
xchg
call
loop
(bad)
sar
idiv
std
das
cld
cmc
call
(bad)
(bad)
(bad)
retf
push
scas
(bad)
aaa
inc
adc
(bad)
std
retf
push
gs
lahf
bnd
das
push
lahf
hlt
jg
iret
call
lahf
clc
jg
(bad)
jmp
lahf
lock
shld
mov
paddw
xlat
push
iret
cld
jns
fwait
aas
jmp
loop
dec
push
aas
cld
(bad)
dec
mov
hlt
(bad)
cli
dec
(bad)
push
mov
(bad)
pop
hlt
(bad)
(bad)
sti
mov
(bad)
jmp
cli
aad
cmp
in
(bad)
mov
aas
(bad)
mov
mov
std
add
dec
stc
pop
adc
cld
xlat
inc
lahf
call
rol
add
cmc
scas
(bad)
aad
mov
mov
(bad)
sti
in
mov
outs
ud0
lahf
test
dec
push
jmp
lock
dec
push
cld
fistp
(bad)
std
in
mov
div
repnz
inc
je
or
call
inc
mov
stc
lahf
lock
cld
fistp
repz
(bad)
mov
hlt
clc
arpl
mov
sub
cmps
push
lods
hlt
inc
xchg
(bad)
repnz
push
fdivr
(bad)
std
pop
mov
sti
dec
std
or
(bad)
sti
(bad)
ja
sahf
(bad)
sti
(bad)
cli
aad
sar
std
jg
jmp
imul
mov
jmp
jg
bnd
iret
(bad)
mov
scas
cli
mov
dec
(bad)
mov
iret
(bad)
mov
iret
std
mov
xlat
(bad)
(bad)
retf
mov
(bad)
std
aas
stc
addr16
(bad)
ret
aas
cmc
addr16
(bad)
and
mov
jg
(bad)
std
stos
jmp
jg
(bad)
(bad)
mov
loopne
pop
add
sti
(bad)
call
(bad)
jg
(bad)
hlt
(bad)
call
xchg
idiv
stc
pop
(bad)
fbld
push
icebp
iret
jg
jae
xor
add
lea
lahf
jb
jg
fstp
fild
out
(bad)
std
out
pop
outs
(bad)
out
pop
mov
icebp
jg
das
mov
in
lahf
dec
ud0
arpl
repz
push
xchg
div
mov
fistp
(bad)
fistp
out
sub
adc
xchg
clc
xchg
daa
push
pop
inc
hlt
clc
xchg
sub
(bad)
mov
lahf
cmp
mov
stc
jg
leave
in
dec
hlt
(bad)
aas
out
das
pop
(bad)
fistp
fcomip
(bad)
std
(bad)
(bad)
mov
call
(bad)
(bad)
out
(bad)
(bad)
idiv
(bad)
out
jmp
sti
(bad)
cld
gs
(bad)
std
jg
jb
(bad)
(bad)
cli
scas
(bad)
(bad)
xlat
scas
cld
xlat
dec
xor
scas
cli
iret
(bad)
mov
pop
jg
(bad)
std
jg
(bad)
inc
(bad)
std
jg
retf
call
jmp
push
iret
std
(bad)
sti
jg
dec
adc
(bad)
(bad)
cli
push
call
mov
call
mov
icebp
lahf
sub
jg
jg
mov
in
and
repz
fld
dec
jmp
jg
pop
cld
jg
xlat
das
jmp
test
inc
iret
pop
repnz
jle
(bad)
cli
lds
jmp
lock
in
(bad)
out
ja
clc
out
sti
jg
xchg
aas
jle
jg
and
stc
(bad)
std
inc
(bad)
imul
fxam
(bad)
std
daa
(bad)
pop
aas
std
jg
dec
jg
loop
(bad)
adc
cld
jmp
(bad)
std
cmps
cld
cmp
push
out
(bad)
std
ud0
stos
jg
mov
(bad)
sti
mov
jmp
(bad)
in
dec
arpl
mov
call
cmp
pop
call
(bad)
std
stos
(bad)
xor
stos
mov
jmp
cmc
outs
ror
jg
(bad)
(bad)
mov
push
add
push
add
mov
jl
outs
xor
mov
jg
inc
mov
(bad)
and
stc
pop
call
dec
call
shl
(bad)
mov
shl
push
jg
fild
loopne
cld
mov
(bad)
inc
mov
xchg
(bad)
shr
psubd
(bad)
std
xchg
loope
sti
mov
pop
cli
xchg
(bad)
(bad)
movs
jg
out
(bad)
jg
inc
jg
hlt
(bad)
inc
sti
paddw
(bad)
sti
dec
and
cld
mov
jmp
adc
hlt
jg
stc
icebp
jg
fcomip
(bad)
(bad)
(bad)
(bad)
mov
(bad)
jmp
cld
dec
sar
std
mov
cli
dec
jecxz
mov
jg
cld
xor
(bad)
(bad)
(bad)
outs
lock
test
dec
call
hlt
clc
mov
(bad)
call
in
call
jge
mov
call
into
(bad)
push
scas
sub
mov
push
fistp
out
sub
das
std
jmp
repz
cwde
mov
adc
inc
add
iret
sub
jg
(bad)
cli
ret
(bad)
mov
cli
mov
sti
call
pop
inc
mov
mov
std
icebp
sar
sti
psubd
repz
jmp
(bad)
adc
neg
repnz
std
hlt
(bad)
std
(bad)
inc
push
inc
inc
jmp
sti
out
std
inc
(bad)
hlt
(bad)
jmp
std
mov
and
lahf
stc
mov
iret
ror
jg
jle
mov
aaa
(bad)
(bad)
mov
outs
inc
shr
pop
movs
lahf
mov
jmp
jmp
cld
std
das
push
jmp
dec
out
call
scas
and
sub
dec
loop
pop
stc
scas
(bad)
pop
xchg
(bad)
hlt
cmp
jmp
imul
mov
icebp
psubsw
jmp
(bad)
jmp
adc
cld
pop
dec
pop
out
(bad)
aaa
dec
add
xor
dec
inc
out
call
fs
icebp
(bad)
aas
sahf
bnd
jg
pop
repz
std
fistp
stc
and
cmp
paddb
repnz
xchg
xchg
call
stc
mov
jle
hlt
les
(bad)
jg
(bad)
jmp
dec
(bad)
inc
hlt
(bad)
(bad)
mov
arpl
(bad)
jg
repz
jg
mov
jg
js
jp
jg
je
and
(bad)
(bad)
stc
call
hlt
stc
mov
scas
clc
pop
cmp
daa
call
(bad)
call
(bad)
mov
dec
cmp
jp
(bad)
(bad)
ffreep
dec
movs
xchg
(bad)
ja
and
stc
lahf
(bad)
ret
aas
sbb
jge
call
mov
sti
les
lock
jle
(bad)
jmp
cmps
jl
pop
icebp
inc
jle
(bad)
cli
and
(bad)
stc
add
scas
aas
lock
int3
(bad)
out
aas
cwde
jle
shl
cld
(bad)
fidivr
call
shl
(bad)
cli
gs
push
jg
das
inc
(bad)
std
jg
iret
jg
push
jg
iret
movs
push
jmp
cld
cld
pop
(bad)
out
(bad)
sti
jg
pop
jmp
cli
mov
mov
(bad)
inc
(bad)
inc
jg
(bad)
dec
aas
push
pop
jo
mov
(bad)
jmp
stc
(bad)
jmp
(bad)
adc
notrack
js
xchg
std
xor
idiv
std
retf
dec
data16
aas
int
retf
addr16
xchg
adc
(bad)
xor
add
in
iret
pop
dec
cld
test
out
in
dec
shl
mov
add
je
shl
jg
std
cld
aas
std
sti
call
jg
pop
(bad)
pop
jbe
sbb
call
jmp
(bad)
stc
jg
jmp
xchg
jg
pop
cmc
sti
(bad)
fistp
pop
dec
ss
dec
and
(bad)
std
xchg
icebp
fcos
std
pop
std
xchg
mov
mov
(bad)
sti
psubd
cmp
psubq
mov
out
(bad)
cmc
test
aas
into
jecxz
mov
jmp
xchg
(bad)
(bad)
mov
(bad)
(bad)
mov
(bad)
push
(bad)
jmp
(bad)
out
(bad)
(bad)
(bad)
sti
(bad)
(bad)
pop
mov
std
aas
and
mov
idiv
psrlw
enter
dec
jnp
repz
inc
arpl
jle
fisttp
sbb
inc
and
std
jg
jle
addr16
call
dec
cmp
movs
cld
cld
lahf
dec
aas
shl
idiv
jb
pop
fnstenv
(bad)
fbld
fidivr
jg
notrack
pop
stc
aaa
cld
test
daa
dec
(bad)
scas
aas
mov
sub
xchg
mov
stos
push
pop
cld
pop
(bad)
fcomp
jmp
(bad)
(bad)
(bad)
aas
jmp
call
std
pop
repz
xchg
(bad)
stc
std
(bad)
scas
aas
mov
mov
cli
mov
scas
movs
mov
jg
(bad)
cli
mov
(bad)
(bad)
mov
jle
(bad)
jecxz
(bad)
jg
push
idiv
pop
(bad)
in
fcomip
jg
xor
jg
(bad)
aad
icebp
jg
pop
call
fild
call
pop
call
repz
cmps
lahf
jg
std
cld
sti
(bad)
out
(bad)
jmp
movs
iret
(bad)
cmp
jecxz
repnz
cld
(bad)
xlat
inc
jecxz
xchg
dec
stc
in
inc
inc
sahf
std
scas
movs
(bad)
jle
aas
dec
jo
lahf
inc
jae
cld
neg
adc
loope
inc
idiv
push
(bad)
jecxz
idiv
into
call
(bad)
clc
dec
adc
inc
xchg
call
pop
cld
cld
out
icebp
fnstsw
push
aas
cmp
jle
xchg
mov
stc
dec
leave
outs
std
xchg
int3
aas
mov
int3
aas
repz
mov
cmp
retf
dec
pop
(bad)
jg
xchg
jmp
pop
dec
scas
and
clc
(bad)
sbb
lahf
(bad)
hlt
(bad)
cmp
out
cld
xor
das
inc
push
jg
pop
std
sub
fdivr
icebp
xchg
jo
mov
icebp
sar
jp
jle
js
mov
(bad)
sti
mov
(bad)
sti
aas
mov
mov
push
rcr
jg
(bad)
std
jg
xchg
hlt
stc
jg
mov
aam
clc
loope
es
retf
push
iret
jg
mov
call
mov
fbld
out
call
idiv
cmp
stc
jg
mov
jg
jg
jge
aas
adc
adc
out
(bad)
(bad)
pop
xchg
(bad)
inc
lock
push
stc
dec
or
jg
das
(bad)
out
pop
icebp
aas
(bad)
jnp
idiv
pop
or
loopne
call
push
aas
add
pop
call
push
jg
jmp
adc
dec
mov
call
repz
sar
ss
jg
(bad)
jmp
jg
imul
dec
dec
mov
call
std
cld
pop
or
jg
xor
outs
mov
jmp
cmp
or
out
add
mov
xor
xlat
add
mov
cli
les
mov
jg
cld
(bad)
sub
(bad)
cmp
jnp
into
mov
stc
jmp
bnd
xchg
in
hlt
cmc
retf
jmp
clc
in
and
cli
xchg
(bad)
mov
push
idiv
imul
(bad)
sti
mov
mov
icebp
call
jge
call
lahf
(bad)
xchg
jg
js
in
mov
inc
(bad)
cli
iret
(bad)
mov
or
mov
inc
pop
cld
pop
(bad)
cmp
lea
call
xchg
fwait
jg
gs
cli
lahf
enter
jg
jle
(bad)
popf
(bad)
cmp
inc
repnz
leave
into
jg
jb
pop
cld
pop
hlt
push
sar
dec
fdivrp
xchg
mov
inc
jge
xor
stc
pop
push
pop
dec
cmc
icebp
pop
xchg
pop
sti
(bad)
call
cli
stc
push
(bad)
(bad)
xlat
jg
push
shl
jg
mov
push
jg
jge
das
or
push
aas
xchg
ds
(bad)
arpl
jmp
call
push
in
stc
jg
lahf
(bad)
cmp
xor
cld
jg
dec
movs
int
cmp
call
out
cld
fstp
push
pop
call
dec
lahf
sahf
jl
inc
(bad)
jmp
mov
(bad)
cmp
(bad)
call
inc
in
call
pop
(bad)
jg
(bad)
loope
sub
jmp
mov
inc
mov
mov
(bad)
jmp
pop
addr16
jns
jns
adc
mov
call
add
icebp
loop
inc
jl
out
adc
(bad)
out
jg
das
(bad)
mov
(bad)
jmp
movs
hlt
fstp
jg
(bad)
ficomp
(bad)
dec
in
inc
pop
dec
jge
fwait
jmp
pop
push
sahf
clc
xchg
jmp
in
jnp
cmp
jmp
ror
out
cld
(bad)
movs
(bad)
call
adc
sar
jge
(bad)
jg
(bad)
std
sub
lea
mov
mov
inc
lahf
(bad)
stc
jg
lahf
arpl
in
out
cmps
mov
call
jmp
movs
sbb
inc
call
(bad)
out
jg
out
(bad)
imul
(bad)
inc
inc
cmp
pop
xchg
push
cld
lahf
call
pop
(bad)
stc
aas
adc
inc
scas
dec
repz
pop
adc
dec
icebp
fdivr
out
cld
pop
add
pop
std
retf
jmp
repz
out
(bad)
sti
lahf
std
mov
out
(bad)
jmp
stc
xor
scas
(bad)
sti
lahf
push
(bad)
out
(bad)
jmp
(bad)
jae
scas
(bad)
sti
pop
sti
repz
out
(bad)
jmp
cld
or
scas
(bad)
sti
(bad)
or
out
(bad)
jmp
cli
or
scas
(bad)
sti
(bad)
or
loop
mov
repz
mov
inc
mov
call
psllw
dec
icebp
fdivr
jl
aas
xchg
sahf
dec
call
pop
add
(bad)
dec
(bad)
das
xchg
jno
cmc
sub
add
cld
repz
ret
cld
repz
adc
inc
hlt
sar
dec
xor
dec
cwde
jmp
cmp
(bad)
popf
mov
call
add
stc
(bad)
adc
push
js
jecxz
fidivr
out
cld
push
movs
xor
adc
xchg
jg
js
pop
stc
dec
(bad)
outs
shl
jmp
aaa
jmp
icebp
iret
cld
cmp
idiv
std
dec
(bad)
jmp
(bad)
dec
repnz
jg
dec
mov
sti
(bad)
(bad)
pop
dec
dec
movs
ja
sub
movs
dec
mov
mov
jge
inc
(bad)
jnp
cmp
push
mov
mov
cmp
push
jg
ins
mov
lds
iret
es
cld
jae
(bad)
call
std
(bad)
scas
std
pop
repnz
jg
jle
aaa
(bad)
fdivr
sti
push
cld
repz
repz
inc
movs
dec
xchg
jg
notrack
push
iret
push
dec
dec
mov
xchg
mov
(bad)
daa
fs
dec
loop
jmp
out
cld
mov
je
mov
(bad)
xor
(bad)
sub
or
(bad)
jmp
and
and
les
push
mov
clc
pop
or
jg
js
pop
mov
sub
pop
call
stc
jecxz
out
(bad)
jmp
stc
jecxz
scas
(bad)
sti
pop
and
cld
mov
daa
cld
pop
push
aas
cmc
daa
std
(bad)
xlat
aas
sti
cmps
push
(bad)
jg
mov
adc
push
(bad)
out
sar
jb
jg
(bad)
mov
(bad)
sar
nop
dec
pusha
call
jg
(bad)
(bad)
mov
(bad)
cli
mov
(bad)
(bad)
mov
jle
imul
cld
xchg
(bad)
aam
jmp
(bad)
xchg
(bad)
aam
sbb
call
jg
mov
adc
(bad)
(bad)
xchg
jmp
jg
in
cmp
sar
dec
xor
idiv
mov
(bad)
cld
push
push
(bad)
std
dec
cld
mov
lahf
jg
sar
das
nop
jns
(bad)
(bad)
ss
idiv
(bad)
scas
enter
fs
js
outs
pop
jle
lahf
(bad)
adc
ins
into
mov
sar
dec
sub
call
jg
jle
daa
cld
(bad)
idiv
dec
lock
aas
dec
jle
inc
aam
aas
repnz
push
pop
cli
std
lahf
movs
ja
fnstcw
push
loopne
fstp
call
dec
scas
jmp
out
adc
or
shr
movs
mov
out
pop
stc
pop
mov
add
cmps
inc
aas
pop
dec
hlt
add
dec
repnz
jg
aas
stc
(bad)
std
fisttp
call
mov
jg
sar
(bad)
mov
(bad)
jmp
(bad)
mov
pop
(bad)
(bad)
xlat
aas
clc
pop
call
idiv
cli
xchg
in
(bad)
in
dec
repnz
jg
aaa
retf
cmp
pop
dec
mov
pcmpgtb
(bad)
cmp
mov
sti
jg
push
jg
mov
pop
ror
aas
test
cld
loope
idiv
cmc
paddw
hlt
fstp
dec
aas
jmp
pop
dec
repz
pop
cld
stc
(bad)
inc
push
sbb
std
std
jg
jge
xchg
(bad)
xlat
aas
dec
(bad)
sub
icebp
fistp
jg
notrack
jg
cld
clc
pop
adc
std
sti
les
mov
jg
bnd
jmp
cmc
stos
leave
push
std
pop
jmp
inc
sub
sar
xchg
jg
ds
out
sbb
pop
loop
jmp
scas
push
sbb
push
popf
ret
jmp
stos
dec
stc
out
cli
jae
out
(bad)
sti
outs
clc
inc
push
(bad)
std
aaa
sar
jmp
out
(bad)
mov
fistp
jg
fistp
shr
lahf
movs
cmp
push
mov
(bad)
gs
mov
sar
call
pop
jmp
(bad)
sti
(bad)
(bad)
mov
sti
outs
pop
retf
jnp
outs
dec
call
(bad)
call
stos
(bad)
sti
(bad)
(bad)
cmp
ins
jle
dec
mov
mov
mov
cmp
cmp
popf
jle
fnsave
daa
push
aas
stc
(bad)
cld
(bad)
idiv
cld
(bad)
adc
movs
jg
loopne
pop
jg
fdiv
hlt
(bad)
inc
loop
ret
(bad)
inc
shl
push
mov
xlat
mov
(bad)
mov
sbb
dec
add
iret
cld
xchg
mov
idiv
and
call
dec
(bad)
pop
mov
(bad)
out
(bad)
out
mov
repz
jg
das
sti
gs
stc
xchg
stos
jmp
scas
(bad)
sti
scas
stc
jmp
mov
cli
mov
xlat
mov
mov
stc
jg
fistp
aad
std
jg
dec
adc
lods
in
mov
ins
call
shl
push
pop
push
(bad)
(bad)
xlat
fbstp
cmc
push
jg
lods
in
(bad)
std
jg
sub
sub
(bad)
jmp
cmps
out
(bad)
(bad)
pop
cli
jg
pop
(bad)
cmp
mov
in
aad
clc
daa
leave
mov
push
inc
cmp
fbld
inc
repnz
(bad)
out
dec
dec
push
aas
cld
mov
outs
(bad)
scas
call
sti
stos
enter
dec
aas
clc
(bad)
(bad)
mov
fdivrp
lds
loop
inc
fcom
dec
jg
(bad)
std
sub
xchg
aas
call
pop
dec
lahf
int
repz
sbb
gs
std
jg
in
inc
(bad)
aas
jno
jmp
cli
mov
mov
push
sar
dec
fcos
std
jg
jp
(bad)
std
xlat
pop
cld
fbld
loope
test
std
push
sar
call
jl
mov
pop
mov
cmp
xchg
cmp
pop
dec
aas
std
rep
xchg
inc
js
ins
stc
(bad)
std
aas
xchg
fdivrp
das
dec
mov
out
pop
(bad)
pop
loop
mov
call
shl
aas
(bad)
cmp
dec
call
sbb
sbb
in
inc
mov
(bad)
xchg
mov
out
daa
mov
mov
inc
aas
(bad)
(bad)
(bad)
adc
jg
test
jg
cli
cld
pop
test
pop
cld
mov
leave
out
sub
dec
dec
xor
std
mov
mov
in
jg
push
cld
sbb
mov
mov
out
(bad)
push
movs
lahf
mov
sbb
fnstcw
(bad)
adc
(bad)
pop
adc
cld
daa
jg
les
xlat
jg
jp
aas
xchg
iret
(bad)
xor
out
jnp
add
(bad)
fcomp
inc
hlt
imul
inc
stos
jg
ins
repnz
aas
(bad)
lock
jg
aas
repz
cld
(bad)
std
jg
lahf
mov
pop
jge
stc
das
jmp
fwait
in
out
clc
arpl
out
(bad)
jmp
jg
jg
fistp
fwait
call
push
mov
out
clc
jmp
cld
mov
das
cli
out
push
jg
and
jg
gs
mov
bnd
pop
jg
pop
lock
outs
call
pop
cld
push
call
(bad)
std
pop
(bad)
fdivrp
aaa
(bad)
(bad)
jg
and
lahf
std
jne
and
fs
sub
cmc
(bad)
cmp
dec
call
stc
jle
(bad)
lahf
dec
jb
mov
mov
jl
or
pop
(bad)
cmp
xchg
dec
inc
inc
fwait
(bad)
jmp
and
xlat
dec
push
call
pop
(bad)
mov
fstp
and
fs
and
daa
or
lock
clc
mov
mov
and
ins
xchg
scas
mov
mov
icebp
jle
jle
mov
(bad)
(bad)
fsubr
(bad)
out
(bad)
sti
iret
sti
mov
sti
(bad)
dec
mov
xchg
adc
adc
test
neg
call
mov
mov
repnz
inc
xchg
(bad)
frstor
adc
les
jmp
jmp
mov
pop
(bad)
and
push
mov
fnstsw
adc
inc
mov
das
dec
and
push
xchg
(bad)
pop
and
cld
xlat
leave
jmp
mov
(bad)
imul
repz
xchg
push
sti
sar
(bad)
mov
repz
push
mov
int
icebp
in
(bad)
sti
(bad)
(bad)
xor
(bad)
out
(bad)
jmp
cli
into
push
jg
fxch
(bad)
out
(bad)
jmp
jge
jg
push
cld
aaa
jge
jg
sbb
xchg
ss
(bad)
pop
call
call
fbld
popf
mov
jg
out
lahf
xchg
or
mov
pop
cld
dec
(bad)
cmp
add
in
stc
jg
aaa
xchg
popf
call
std
loop
dec
push
fist
lea
mov
dec
icebp
retf
jg
push
adc
ja
loop
inc
jbe
(bad)
test
enter
movs
lahf
(bad)
jmp
pop
(bad)
(bad)
sub
push
scas
fmul
aas
jg
pop
clc
jg
fistp
icebp
aaa
(bad)
(bad)
aas
xchg
(bad)
jmp
leave
iret
aas
cmc
leave
inc
mov
jmp
and
xchg
cmc
movs
(bad)
jp
stc
mov
push
sti
sub
fcomp
daa
cli
jecxz
and
sbb
icebp
int
inc
cmp
subps
pop
adc
cld
outs
dec
mov
sub
pop
(bad)
das
(bad)
(bad)
add
call
(bad)
in
dec
mov
aas
addr16
push
cli
ins
out
mov
js
jg
fistp
loope
(bad)
(bad)
call
add
(bad)
daa
push
fcmove
clc
out
aas
inc
jmp
cdq
call
jl
(bad)
mov
idiv
cmc
daa
ror
aas
leave
mov
jb
aas
stc
call
mov
repz
cli
mov
iret
dec
dec
push
jge
(bad)
(bad)
mov
xlat
(bad)
std
push
jg
mov
jge
ja
repz
clc
das
(bad)
sahf
dec
jb
jg
repz
stc
sbb
jp
pop
imul
xlat
jg
ja
pop
repnz
jb
pushf
xchg
cli
repnz
and
repnz
and
std
ja
jg
sar
xlat
(bad)
clc
(bad)
pop
ins
xlat
popa
mov
stc
lahf
stc
sbb
out
(bad)
jmp
push
(bad)
(bad)
aas
(bad)
lods
jg
(bad)
std
aas
(bad)
sub
fsubrp
push
pop
icebp
jg
(bad)
jg
pop
cmc
jg
movq
pop
inc
jmp
jg
movs
scas
(bad)
cmp
(bad)
aas
hlt
(bad)
push
(bad)
dec
stc
mov
iret
and
cmc
cmps
sar
push
adc
(bad)
idiv
fcomp
push
(bad)
out
sti
mov
(bad)
sti
mov
stc
(bad)
jg
scas
(bad)
(bad)
std
jg
pop
push
push
jecxz
clc
mov
lahf
sti
mov
lahf
stc
mov
out
clc
mov
mov
jmp
xchg
jg
lahf
mov
fidiv
std
sbb
out
ins
into
fld
cmps
pop
xlat
xor
(bad)
jmp
das
cli
mov
outs
(bad)
(bad)
inc
(bad)
(bad)
mov
xchg
out
dec
or
push
outs
cwde
lahf
nop
and
pop
test
f2xm1
pminub
lahf
outs
cli
xor
jmp
sti
jmp
(bad)
fwait
jne
(bad)
inc
jmp
sar
lods
je
(bad)
outs
push
sti
cld
repz
push
mov
stc
fwait
outs
sbb
aaa
lock
popf
outs
mov
imul
cld
pop
fist
jge
sbb
aaa
std
dec
jg
fucomip
ja
popf
jle
pop
cld
mov
lahf
cld
das
dec
(bad)
push
jmp
addr16
mov
push
das
cld
or
ret
dec
iret
push
(bad)
cld
mov
cld
idiv
mov
imul
(bad)
mov
sti
iret
(bad)
jnp
(bad)
jg
jmp
out
dec
aas
repz
cld
jnp
jg
cmps
std
std
lahf
(bad)
cmps
(bad)
jmp
mov
out
scas
imul
std
jp
mov
(bad)
sbb
in
mov
std
push
mov
mov
jmp
idiv
adc
xlat
std
jne
add
into
outs
mov
call
fdivp
jnp
fidivr
out
jg
xchg
(bad)
fcomip
idiv
jge
push
(bad)
(bad)
mov
dec
repnz
stc
shl
mov
sahf
pop
cmp
cld
call
iret
(bad)
fdivrp
shl
mov
sahf
outs
out
xor
pop
pop
jp
and
stc
jmp
jmp
idiv
test
iret
pop
inc
in
xlat
cld
xor
and
cmp
cmp
call
push
mov
fnstsw
aaa
movs
(bad)
jg
jg
xchg
jb
or
jle
(bad)
xlat
cld
in
jg
(bad)
aaa
and
cmp
(bad)
jmp
bnd
cmc
add
push
adc
clc
ins
(bad)
sahf
mov
int3
sbb
outs
(bad)
pop
int
mov
jg
lahf
jp
call
inc
push
clc
(bad)
push
aas
cld
psadbw
(bad)
std
jg
fisttp
(bad)
(bad)
mov
loopne
(bad)
in
jg
fcomip
(bad)
(bad)
(bad)
aaa
dec
pop
(bad)
push
clc
cmp
dec
xchg
(bad)
mov
ins
jle
fucomip
out
cli
mov
push
adc
jg
pop
(bad)
call
aad
adc
das
dec
loopne
inc
jg
pop
add
dec
push
(bad)
cmp
(bad)
jg
lahf
std
addr16
jmp
jmp
sar
(bad)
mov
lea
pop
cmps
loop
(bad)
out
fwait
cmps
shl
mov
jo
mov
icebp
adc
repz
(bad)
out
mov
jmp
stos
(bad)
cld
(bad)
(bad)
xlat
(bad)
fnstcw
(bad)
(bad)
xlat
(bad)
sbb
(bad)
mov
push
mov
push
mov
clc
sti
pop
mov
std
scas
shl
clc
(bad)
mov
idiv
push
aas
cmc
idiv
(bad)
jmp
call
fwait
jg
(bad)
(bad)
push
mov
std
xchg
out
jg
lahf
cld
jnp
out
jg
jle
push
(bad)
mov
std
repnz
cmc
paddb
push
aas
repz
(bad)
jmp
cli
std
out
(bad)
mov
out
stc
mov
mov
(bad)
cld
aas
(bad)
jg
mov
(bad)
fisttp
adc
inc
stc
das
push
dec
(bad)
std
das
(bad)
xchg
jg
(bad)
cld
xlat
inc
jg
(bad)
(bad)
push
inc
xchg
(bad)
jmp
xchg
sti
jg
lahf
(bad)
in
(bad)
std
outs
cld
stos
jmp
(bad)
std
outs
std
sbb
retf
outs
call
sbb
(bad)
js
loop
mov
jg
movs
jmp
push
pop
fidivr
lahf
lahf
(bad)
fistp
sti
loopne
dec
sti
cld
neg
mov
push
pop
repz
jle
jg
xor
(bad)
sub
scas
js
les
inc
(bad)
(bad)
cmp
sti
scas
cli
lds
dec
sahf
std
fistp
iret
cmp
mov
aad
std
xlat
std
and
(bad)
out
mov
jg
lea
fwait
(bad)
sti
outs
(bad)
arpl
jg
out
repz
jne
call
std
cmp
in
(bad)
sti
scas
cmps
ss
pop
sti
mov
xchg
repz
sti
out
std
mov
push
fcomip
cmps
pop
cld
fistp
lahf
cmp
mov
cli
(bad)
(bad)
mov
idiv
icebp
xlat
std
xchg
push
aas
std
aaa
cld
mov
neg
jmp
mov
idiv
clc
pop
pop
std
(bad)
in
inc
sar
call
or
scas
cli
inc
(bad)
out
jg
out
cli
mov
out
jg
scas
cld
inc
(bad)
out
jg
scas
sti
mov
out
cld
mov
out
jg
out
cld
mov
out
jg
out
sti
or
out
jg
pop
sti
pop
outs
xor
inc
fdivrp
mov
(bad)
(bad)
jae
jle
(bad)
dec
sti
das
pop
fdivrp
mov
(bad)
std
pop
sub
(bad)
out
aas
jg
repz
lds
push
(bad)
loop
(bad)
sti
scas
mov
movs
xchg
(bad)
cld
fistp
pop
cmc
xchg
repnz
(bad)
sti
scas
stc
cmp
jno
rcr
(bad)
out
mov
jg
cmc
jg
retf
(bad)
sti
outs
cli
mov
dec
jg
dec
(bad)
fistp
pop
sti
push
cmp
mov
test
(bad)
(bad)
aas
(bad)
jnp
neg
mul
std
(bad)
hlt
repz
xor
jmp
jno
neg
in
(bad)
mov
call
cld
(bad)
(bad)
xchg
jg
jge
clc
mov
stc
mov
xchg
(bad)
fistp
pop
mov
mov
(bad)
cld
mov
(bad)
out
cld
idiv
hlt
xchg
(bad)
push
cli
in
(bad)
(bad)
mov
(bad)
sti
mov
iret
cli
mov
das
pop
sbb
jmp
(bad)
jg
lahf
inc
jge
repz
arpl
jg
and
sar
push
mov
jle
jnp
pop
pop
std
fistp
das
jge
jecxz
mov
(bad)
imul
(bad)
inc
inc
loope
push
pop
dec
repz
pop
imul
sti
inc
lahf
xor
cld
xor
out
mov
mov
push
js
outs
clc
and
cld
fistp
sar
dec
scas
(bad)
out
mov
js
(bad)
sti
pop
clc
mov
imul
dec
cld
xor
iret
mov
jg
scas
std
ret
stc
(bad)
(bad)
fcomp
pop
(bad)
(bad)
clc
pop
std
xchg
(bad)
hlt
(bad)
daa
cld
(bad)
rcr
out
(bad)
inc
cld
lock
dec
(bad)
out
jg
outs
stc
push
(bad)
out
mov
(bad)
hlt
(bad)
xchg
fisubr
inc
leave
neg
out
aas
(bad)
out
das
test
(bad)
out
mov
pop
frstor
mov
fwait
cmp
das
mov
inc
push
pop
cli
out
xor
pop
inc
jl
jno
mov
das
jge
jecxz
paddb
mov
adc
jmp
(bad)
out
mov
std
sar
adc
(bad)
std
out
(bad)
std
mov
mov
xor
popf
jg
dec
jecxz
mov
jl
sahf
(bad)
jnp
pushf
jmp
(bad)
std
idiv
cmp
jmp
(bad)
inc
mov
mov
cmc
addr16
(bad)
jmp
mov
outs
cli
mov
dec
cld
mov
(bad)
cld
mov
dec
mov
rcr
jg
mov
stos
push
imul
std
repz
retf
sar
jle
mov
lods
sar
sbb
push
lahf
jge
repz
pop
mov
(bad)
std
addr16
push
lahf
pop
fdivrp
mov
(bad)
std
addr16
out
(bad)
fistp
(bad)
out
(bad)
(bad)
jae
out
cld
fistp
shl
iret
pop
in
(bad)
fistp
sti
nop
in
repz
call
les
mov
std
xchg
cmps
push
fisttp
push
out
mov
pop
and
scas
cdq
iret
shl
and
clc
sti
outs
cld
mov
out
mov
push
std
mov
dec
jg
retf
(bad)
daa
inc
push
(bad)
cmps
dec
mov
dec
xchg
inc
jg
lahf
xchg
mov
inc
jg
paddd
jg
das
mov
push
aas
dec
repnz
cld
dec
jg
(bad)
repz
sti
(bad)
mov
sti
lahf
mov
mov
std
(bad)
(bad)
xchg
(bad)
(bad)
mov
inc
mov
jmp
mov
push
aas
repz
(bad)
pop
(bad)
scas
aas
idiv
(bad)
pop
(bad)
loope
cmp
pop
jmp
add
out
aas
and
std
fistp
jle
(bad)
mov
repz
out
xchg
add
cmp
mov
(bad)
sti
iret
scas
pop
retf
rol
loop
xchg
xchg
sub
out
(bad)
std
mov
mul
mov
arpl
repnz
sti
sar
cmc
jg
or
push
push
(bad)
(bad)
popa
mov
loop
mov
jnp
jb
sti
sar
lods
out
xor
mov
lahf
out
neg
std
addr16
idiv
lock
mov
idiv
hlt
xchg
cld
bound
inc
cdq
out
push
mov
(bad)
loopne
(bad)
addr16
fcomip
out
(bad)
repnz
pop
(bad)
(bad)
int3
(bad)
daa
(bad)
(bad)
in
(bad)
cmps
std
(bad)
out
icebp
aaa
cld
(bad)
out
not
std
(bad)
(bad)
mov
jmp
mov
(bad)
jmp
lahf
clc
cmp
cmp
sbb
(bad)
scas
push
(bad)
jmp
inc
inc
out
(bad)
fistp
fs
(bad)
push
idiv
out
aas
stc
jl
(bad)
(bad)
xchg
das
out
(bad)
fistp
lds
mul
mov
cli
stc
lock
(bad)
mov
mov
mov
jg
das
jle
jg
lds
xchg
(bad)
call
lods
push
aas
repnz
call
(bad)
daa
inc
push
fcomip
daa
adc
(bad)
std
ja
dec
fbld
(bad)
jge
ss
sti
dec
(bad)
fdivrp
std
idiv
cdq
sar
sti
out
sti
jae
(bad)
sti
pop
cld
or
cli
std
cld
(bad)
(bad)
cmp
xchg
(bad)
(bad)
(bad)
sti
(bad)
lods
loop
inc
shr
add
cli
pop
sti
inc
cld
(bad)
in
hlt
daa
rcr
stc
aaa
cld
or
jg
jmp
(bad)
addr16
clc
scas
(bad)
mov
outs
(bad)
mov
out
cli
mov
scas
daa
sbb
fwait
(bad)
out
jg
lahf
(bad)
pop
(bad)
out
jg
pop
cli
sbb
(bad)
push
(bad)
mov
aas
dec
out
mov
mov
(bad)
retf
out
sar
idiv
out
aas
xchg
jle
dec
out
push
pop
aas
and
out
jg
lds
jmp
(bad)
std
daa
mov
aam
idiv
mov
icebp
jg
cdq
int
(bad)
sti
iret
pop
sbb
cmc
out
neg
xor
stc
mov
popf
(bad)
sti
das
inc
mov
pop
bnd
fistp
das
and
stos
dec
jmp
cli
adc
fs
(bad)
aas
xchg
js
dec
sti
add
out
mov
mov
addr16
sti
xchg
je
xor
jle
jg
xchg
jg
cmc
(bad)
std
(bad)
call
not
clc
(bad)
sti
(bad)
(bad)
jmp
call
(bad)
(bad)
aas
(bad)
(bad)
(bad)
xchg
(bad)
sahf
aas
xchg
out
pop
sti
xchg
retf
pop
stc
pop
push
out
mov
sti
(bad)
pop
(bad)
out
(bad)
sti
aas
cld
push
jmp
(bad)
sti
aas
clc
xchg
(bad)
(bad)
(bad)
sti
aas
stc
aaa
push
xchg
dec
call
retf
jg
call
call
(bad)
mov
(bad)
mov
cli
std
jbe
inc
loopne
shl
(bad)
(bad)
arpl
out
aas
add
jg
in
loope
std
daa
int3
push
std
fistp
stc
jecxz
sti
dec
call
call
mov
dec
clc
out
pop
jge
jg
jmp
iret
cld
inc
iret
(bad)
out
aas
jae
cli
jg
pop
mov
lahf
mov
fldln2
fcos
std
pop
cld
loop
clc
mov
stc
jg
and
fistp
pop
stc
std
(bad)
sti
scas
cld
mov
scas
clc
mov
imul
in
(bad)
(bad)
jmp
xchg
cld
(bad)
(bad)
sbb
(bad)
push
xchg
cmp
pop
std
fistp
lahf
pop
(bad)
fistp
icebp
(bad)
xchg
lods
(bad)
out
jg
call
jg
(bad)
std
(bad)
std
or
iret
(bad)
sbb
iret
call
ret
scas
(bad)
mov
scas
call
aad
std
out
cld
jae
retf
(bad)
std
out
std
sub
(bad)
std
pop
sar
pop
(bad)
mov
lahf
cli
mov
lahf
or
icebp
dec
push
aas
bnd
pop
fdivr
mov
(bad)
jge
repnz
(bad)
jnp
adc
data16
(bad)
(bad)
jmp
in
jmp
cli
(bad)
clc
call
jne
jmp
jmp
(bad)
fild
std
mov
(bad)
jmp
fisttp
out
cli
cmps
ds
mov
fisttp
(bad)
out
retf
(bad)
loope
jge
sbb
sbb
fistp
inc
mov
jecxz
inc
pop
push
ds
mov
stc
mov
(bad)
out
aas
cwde
(bad)
inc
dec
(bad)
test
cmp
(bad)
aas
mov
sti
mov
(bad)
out
aas
icebp
xchg
mov
pop
cld
jmp
(bad)
fistp
pop
hlt
jnp
fistp
pop
hlt
sti
cld
fistp
pop
icebp
sti
(bad)
fistp
lahf
xor
mov
cli
jg
mov
std
pop
nop
pop
cld
mov
das
clc
sub
ret
std
aaa
adc
int
(bad)
(bad)
mov
pop
(bad)
fistp
pop
dec
out
mov
(bad)
std
mov
sub
ja
popf
jg
(bad)
std
ja
fnstsw
(bad)
std
idiv
mov
idiv
add
(bad)
icebp
jmp
(bad)
(bad)
jecxz
daa
dec
jg
(bad)
ds
out
jle
stc
popf
(bad)
sti
in
into
(bad)
jge
popf
outs
std
(bad)
mov
cld
lds
push
mov
(bad)
(bad)
aas
std
mov
(bad)
pop
clc
pop
ds
mov
out
mov
and
scas
jg
mov
fsincos
mov
push
pop
push
sar
jg
sar
sti
daa
jg
jnp
div
into
out
(bad)
(bad)
cmc
loope
jge
cmp
mov
aad
icebp
jg
xor
mov
jns
jg
dec
ja
jg
clc
dec
(bad)
lahf
std
fistp
cmp
jg
mov
dec
(bad)
aas
clc
mov
jle
leave
(bad)
jge
pop
lahf
(bad)
(bad)
jg
sar
cmp
cmc
(bad)
cmp
jmp
scas
(bad)
jnp
daa
jge
jg
jg
dec
cld
fucomip
aas
jmp
stc
call
das
stc
dec
mov
inc
(bad)
mov
sti
mov
pop
inc
sbb
(bad)
(bad)
out
sti
sti
(bad)
ds
aas
dec
pop
adc
iret
call
js
sar
xor
(bad)
repz
aaa
(bad)
jg
icebp
jg
leave
(bad)
std
ins
sbb
mov
(bad)
hlt
jg
and
mov
cmp
cs
cmp
mov
push
(bad)
fist
mov
cmps
icebp
dec
das
jmp
xor
jle
(bad)
jnp
and
mov
(bad)
pop
imul
(bad)
jnp
aas
iret
jmp
and
fucomp
icebp
(bad)
std
sti
nop
pop
std
(bad)
mov
arpl
cmc
int
popf
jmp
addr16
dec
shr
pop
jg
repz
mov
fild
movs
xchg
push
in
clc
into
(bad)
std
xchg
(bad)
std
mov
(bad)
add
sar
adc
cld
jmp
jge
push
dec
(bad)
out
aas
rep
jns
jg
pop
jg
iret
cld
(bad)
ret
addr16
push
ja
mov
sbb
call
cmp
inc
cmp
lock
mov
lahf
jge
(bad)
mov
std
jg
jg
fwait
jle
out
fdivrp
mov
std
mov
fistp
not
jge
jg
xchg
in
les
std
lock
call
(bad)
dec
(bad)
out
fstp
(bad)
popf
(bad)
sti
cmps
call
(bad)
(bad)
loop
pop
(bad)
jno
(bad)
fistp
dec
jae
std
ret
ds
mov
pop
cmc
popf
(bad)
sti
mul
sbb
outs
(bad)
fistp
pop
(bad)
in
(bad)
mov
call
cdq
(bad)
mov
dec
jns
jg
(bad)
cwde
out
idiv
std
mov
jg
inc
lahf
clc
mov
std
jg
xchg
jg
out
(bad)
jg
stc
jg
(bad)
sti
iret
sti
dec
out
neg
xlat
scas
(bad)
out
jg
pop
cli
sbb
out
jg
mov
push
push
dec
jg
outs
cld
(bad)
(bad)
out
mov
clc
icebp
(bad)
jg
lahf
cli
inc
(bad)
out
mov
out
icebp
stc
mov
out
jecxz
jmp
(bad)
sti
in
sar
std
cmp
sti
jg
(bad)
jge
(bad)
out
out
(bad)
mov
(bad)
sti
repz
out
cld
fistp
div
pop
cli
sti
idiv
neg
(bad)
mov
jnp
out
icebp
jg
xchg
out
daa
jg
cli
jg
ds
pop
push
out
dec
dec
jmp
lahf
cli
mov
pop
push
out
test
icebp
jg
jg
jmp
jnp
cmps
jl
jg
jg
fwait
(bad)
jnp
jae
std
sar
rcr
cld
(bad)
jg
out
repz
(bad)
lods
lahf
cld
mov
dec
jg
jg
call
pop
dec
ss
mov
mov
jg
pop
pop
cld
fistp
pop
(bad)
idiv
(bad)
mov
sti
(bad)
clc
repz
push
pop
cld
pop
pop
push
aas
call
pop
(bad)
(bad)
out
pop
sti
mov
out
jg
jle
xchg
push
pop
stc
jg
out
mov
(bad)
xor
(bad)
mov
std
mov
pop
adc
(bad)
(bad)
mov
mov
pop
std
mov
(bad)
std
jnp
mov
jg
icebp
pop
in
(bad)
(bad)
pop
sbb
fistp
std
mov
pop
xchg
(bad)
(bad)
out
out
shl
mov
in
jnp
(bad)
out
iret
mov
gs
out
out
nop
cmp
pop
push
inc
mov
pop
xchg
outs
ja
xchg
ds
das
std
and
(bad)
nop
(bad)
(bad)
mov
jg
mov
pop
dec
arpl
arpl
mov
(bad)
(bad)
jg
push
push
repnz
clc
jge
out
mov
(bad)
clc
fcomip
dec
(bad)
out
jg
outs
inc
leave
cmps
call
pop
call
(bad)
sti
mov
(bad)
sti
mov
(bad)
sti
aas
sti
(bad)
mov
sti
aas
std
pop
(bad)
nop
(bad)
sti
aas
(bad)
fwait
jmp
sbb
sar
aas
and
neg
(bad)
std
aas
std
mov
mov
(bad)
sti
aas
(bad)
mov
out
(bad)
cld
pop
hlt
(bad)
(bad)
mov
jecxz
pop
clc
(bad)
aas
stc
iret
cld
arpl
not
mov
scas
pop
or
xchg
in
out
stc
jg
rcr
lahf
nop
sahf
aas
stc
jge
(bad)
fbld
div
cli
sti
fnsetpm(287
pop
jl
cmps
test
popf
std
xor
icebp
jg
aam
inc
cli
out
cli
jge
out
aas
cli
(bad)
stc
std
(bad)
out
aas
loop
clc
(bad)
(bad)
std
daa
cld
or
(bad)
call
jg
out
(bad)
aas
inc
retf
(bad)
jmp
in
pop
inc
mov
std
fwait
jg
pop
icebp
jg
pop
jg
pop
cmc
jg
ud0
lahf
lock
(bad)
hlt
(bad)
(bad)
(bad)
out
jmp
(bad)
out
(bad)
out
out
sti
arpl
out
jmp
pop
stc
push
(bad)
out
(bad)
jmp
cmp
cmp
loop
(bad)
pop
(bad)
loopne
sti
aas
cli
fwait
inc
(bad)
sti
aas
(bad)
pop
push
xlat
jmp
(bad)
std
jg
pop
call
(bad)
push
(bad)
push
mov
lahf
repnz
idiv
std
jbe
call
aas
test
loopne
jle
cmp
mov
addr16
push
icebp
out
imul
(bad)
jge
std
dec
(bad)
out
xchg
in
add
std
lock
(bad)
cld
cmps
ud0
das
scas
sahf
cld
fistp
icebp
adc
pop
std
fbstp
mov
sti
push
pop
inc
mov
(bad)
std
jecxz
(bad)
sti
dec
es
std
(bad)
adc
jg
lahf
icebp
idiv
(bad)
jae
shr
scas
(bad)
mov
aad
adc
(bad)
aas
(bad)
mov
ja
fistp
(bad)
out
pop
icebp
dec
std
pop
push
das
jmp
dec
(bad)
sti
xchg
push
fdivrp
std
aas
cld
inc
jg
(bad)
std
mov
(bad)
std
aas
push
jg
(bad)
std
retf
(bad)
xchg
mov
jmp
aas
stc
(bad)
(bad)
outs
call
iret
mov
sub
loopne
sti
out
sar
sti
push
std
idiv
ret
stos
jg
mov
into
inc
cld
cmps
hlt
(bad)
dec
dec
call
clc
inc
jmp
inc
(bad)
(bad)
jmp
mov
das
aas
(bad)
mov
jmp
(bad)
push
out
fstp
sti
mov
jg
sar
ud0
addr16
std
pop
repz
fistp
loope
nop
push
cli
test
repnz
loope
mov
retf
shl
movs
aas
outs
stc
jg
dec
jg
pushf
aas
sti
jae
outs
std
fwait
(bad)
(bad)
aas
out
(bad)
dec
call
jg
(bad)
(bad)
mov
jo
(bad)
(bad)
out
jmp
(bad)
cld
aas
(bad)
cmps
jg
(bad)
(bad)
aas
jmp
jg
(bad)
(bad)
mov
(bad)
call
pop
jmp
push
scas
cli
(bad)
jmp
out
test
das
jmp
(bad)
out
(bad)
jmp
(bad)
stos
push
push
aas
(bad)
push
push
push
pop
std
and
imul
(bad)
(bad)
out
sar
jmp
(bad)
mov
dec
xor
add
clc
dec
xchg
push
jmp
repnz
inc
jecxz
pop
call
jg
call
jle
jg
add
sbb
stc
mov
fistp
mov
xlat
mov
pop
cld
and
sti
jg
int3
pop
sti
pop
cld
fistp
lahf
jl
jg
push
jg
dec
(bad)
fistp
lds
cld
fistp
(bad)
sti
dec
clc
repz
push
lahf
hlt
out
push
lahf
repz
aad
idiv
dec
push
mov
mov
je
out
xor
pop
ins
mov
push
stos
(bad)
adc
(bad)
call
mov
call
adc
mov
mov
or
aas
sti
mov
fisttp
jb
(bad)
call
inc
inc
jecxz
xlat
(bad)
mov
out
(bad)
mov
sti
sub
imul
(bad)
sti
paddb
jg
(bad)
inc
jg
xchg
jg
out
idiv
xor
std
(bad)
out
aas
call
jg
lahf
js
jg
mov
das
outs
(bad)
out
aas
mov
jmp
inc
jg
(bad)
std
paddd
jg
(bad)
std
out
(bad)
fstp
(bad)
std
stos
jg
aas
(bad)
jg
(bad)
sbb
call
dec
push
adc
imul
xchg
cs
sbb
fstp
(bad)
(bad)
mov
call
std
call
call
cmp
jp
fisttp
lock
je
out
(bad)
jmp
and
mov
(bad)
jmp
cli
aas
dec
jae
jmp
out
pop
repnz
fdivrp
fistp
pop
cli
jnp
sbb
(bad)
(bad)
inc
jmp
in
(bad)
(bad)
(bad)
std
pop
(bad)
jno
(bad)
sti
cpuid
mov
rol
dec
sti
jmp
dec
(bad)
push
lahf
cli
xlat
std
inc
push
(bad)
clc
(bad)
std
push
(bad)
std
sub
sub
(bad)
aas
std
jg
(bad)
imul
clc
in
push
(bad)
xor
(bad)
jg
(bad)
dec
jns
stc
xlat
test
add
in
lahf
xlat
lahf
hlt
call
das
jmp
sti
(bad)
cli
das
retf
(bad)
jg
mov
jle
mov
xor
cld
xchg
pop
(bad)
fild
fstp
(bad)
aas
lock
jbe
(bad)
fidivr
aas
repz
loop
aas
jmp
loop
(bad)
inc
lock
cli
mov
jge
out
pop
dec
jecxz
add
(bad)
jg
pop
repz
cld
fistp
lahf
pop
(bad)
fistp
aas
inc
cmp
jg
inc
or
mov
pop
mov
loop
dec
mov
dec
aas
icebp
(bad)
jg
(bad)
rol
std
push
xor
mov
(bad)
jns
jmp
(bad)
push
std
scas
sar
es
sub
inc
fsubr
call
(bad)
out
(bad)
(bad)
xor
shl
jg
lahf
jmp
(bad)
(bad)
(bad)
aaa
inc
(bad)
jmp
aas
loope
and
loopne
mov
inc
jge
(bad)
(bad)
movs
jg
hlt
(bad)
inc
cmp
sti
lahf
push
std
fistp
aas
lock
std
fistp
cld
xor
sti
push
paddb
push
push
idiv
(bad)
idiv
ja
jmp
mov
icebp
pop
nop
(bad)
dec
hlt
(bad)
(bad)
(bad)
out
mov
(bad)
jg
jp
das
les
mov
cmc
retf
mov
jle
std
std
retf
mov
cmp
cld
pop
dec
(bad)
aas
icebp
jg
(bad)
mov
(bad)
aas
jmp
std
(bad)
xchg
jg
repz
scas
inc
shr
xor
(bad)
(bad)
push
jmp
arpl
dec
aas
div
sti
mov
jg
lahf
xor
mov
(bad)
std
xlat
std
xor
and
jg
out
(bad)
jg
mov
dec
jg
jns
clc
xor
jmp
xor
aaa
xor
(bad)
cli
out
sar
call
idiv
std
(bad)
(bad)
sub
jmp
push
fcomip
jg
(bad)
sbb
mov
int
inc
jmp
std
xchg
dec
bnd
ss
aas
in
ror
mov
push
stc
mov
scas
jg
pop
or
pop
push
(bad)
std
(bad)
ja
pop
mov
xor
(bad)
call
out
jg
jl
(bad)
(bad)
(bad)
sbb
out
(bad)
jmp
mov
(bad)
loop
idiv
(bad)
ret
jg
aaa
cld
(bad)
loopne
mul
cld
(bad)
int3
aas
cmc
out
(bad)
cli
pop
adc
jg
jg
(bad)
jmp
call
call
idiv
call
sti
(bad)
dec
(bad)
push
stc
(bad)
jg
mov
(bad)
idiv
xor
das
dec
dec
jo
jnp
(bad)
pop
inc
repnz
retf
mov
mov
cmc
das
(bad)
iret
inc
jg
(bad)
std
out
or
jg
xor
outs
cmc
(bad)
cmp
sbb
jg
psrld
mov
pushf
out
jg
(bad)
(bad)
jnp
adc
sbb
fdivr
jmp
bnd
out
mov
test
(bad)
jmp
loop
dec
sbb
out
push
cld
mov
stc
aas
call
out
dec
arpl
scas
dec
sbb
out
mov
shl
cli
add
(bad)
dec
jl
fist
sahf
dec
cld
jmp
outs
mov
idiv
adc
dec
cli
stc
outs
test
std
push
aam
aas
call
jmp
movs
icebp
dec
call
cld
jnp
scas
pop
imul
sar
inc
mov
(bad)
jg
jmp
loope
xchg
jns
push
ja
idiv
lahf
std
mov
cli
pop
ins
cld
clc
(bad)
dec
jmp
dec
xor
inc
and
adc
retf
cmp
mov
or
sbb
or
inc
jecxz
dec
call
sar
sub
icebp
pop
adc
dec
(bad)
call
(bad)
call
jge
mov
mov
push
stc
out
mov
(bad)
jmp
(bad)
cld
cld
jg
dec
call
fisttp
(bad)
stos
call
imul
inc
mov
push
jg
outs
jmp
clc
dec
pop
(bad)
ja
idiv
sub
repnz
call
mov
pop
(bad)
mov
sbb
cli
lahf
cld
int
sahf
call
jl
jge
icebp
(bad)
jmp
iret
loopne
pop
inc
jae
retf
or
mov
hlt
(bad)
inc
out
dec
jl
out
cld
cmc
push
(bad)
std
scas
jmp
idiv
std
das
(bad)
stc
push
(bad)
std
scas
std
test
idiv
std
outs
inc
idiv
std
out
rcr
(bad)
out
pop
inc
(bad)
dec
out
(bad)
sti
(bad)
retf
test
adc
push
aas
adc
xor
loope
jmp
in
(bad)
clc
das
dec
aas
mov
shl
scas
cli
scas
inc
jbe
out
dec
(bad)
sbb
inc
jg
(bad)
std
(bad)
sbb
mov
jmp
call
cld
pop
inc
(bad)
call
mov
mov
dec
jae
js
mov
loope
out
std
aad
jmp
leave
ret
jg
test
imul
js
sti
jg
lock
das
dec
es
cmp
jns
idiv
add
cdq
jg
out
pop
mov
into
(bad)
std
jg
sar
std
dec
mov
iret
and
rcr
(bad)
ficomp
inc
lahf
idiv
(bad)
push
shl
(bad)
mov
retf
push
iret
push
aas
retf
neg
mov
dec
hlt
call
cld
xor
pop
xchg
ds
dec
dec
imul
cmc
fbld
mov
mov
pop
(bad)
xchg
mov
mov
jmp
adc
std
or
mov
inc
jno
pop
hlt
sti
jg
jns
clc
test
out
mov
(bad)
pop
call
sti
jnp
(bad)
dec
fild
iret
jg
(bad)
sbb
(bad)
fbld
dec
adc
cld
(bad)
fcomp
call
std
jg
adc
repz
stc
push
mov
inc
xchg
dec
pop
sbb
dec
dec
rol
push
jmp
push
sar
imul
out
rcr
cmps
test
jg
dec
or
(bad)
imul
(bad)
call
shl
(bad)
jg
(bad)
std
aas
cld
mov
mov
pop
sbb
sahf
jmp
aas
daa
ds
xchg
enter
inc
call
mov
std
mov
lahf
jg
push
call
mov
dec
arpl
pop
lock
pop
les
jmp
aas
sub
repnz
(bad)
call
outs
call
pop
lock
(bad)
adc
sti
dec
cld
test
jg
clc
stc
lahf
mov
iret
dec
pop
(bad)
jg
(bad)
lock
idiv
(bad)
call
pop
call
std
dec
out
dec
loope
call
push
nop
xchg
(bad)
in
out
xchg
mov
aaa
jmp
jae
ds
(bad)
adc
out
cmps
idiv
movs
aas
inc
(bad)
sti
das
push
mov
jg
mov
(bad)
(bad)
jg
out
bound
jle
jg
cld
jmp
leave
aam
icebp
mov
out
(bad)
sti
out
stc
add
clc
xchg
scas
adc
jmp
leave
cli
inc
neg
rcr
hlt
outs
or
jg
ud0
(bad)
push
call
push
(bad)
std
paddd
inc
inc
jmp
sbb
aas
inc
jg
adc
pop
cld
mov
sti
push
imul
xchg
mov
loope
(bad)
clc
outs
xchg
(bad)
inc
jg
enter
mov
call
push
outs
or
jg
repz
popa
lods
(bad)
cld
pop
daa
mov
xor
dec
mov
pop
inc
mov
inc
call
dec
sar
jmp
sti
(bad)
(bad)
fwait
call
push
(bad)
std
mov
(bad)
(bad)
neg
jge
jae
clc
std
sbb
xchg
lahf
ret
mov
and
call
(bad)
out
inc
rcl
out
lock
idiv
std
mov
loopne
(bad)
mov
(bad)
push
cli
aas
std
cld
mov
mov
ja
inc
jle
cmp
pop
adc
das
cld
jmp
idiv
call
and
xchg
fistp
mov
sahf
xchg
aas
cld
xor
sti
dec
lahf
and
loope
and
aam
clc
icebp
lahf
and
mov
fcos
push
(bad)
xor
and
xchg
fdiv
jecxz
and
(bad)
mov
sbb
(bad)
dec
in
and
(bad)
fistp
push
jg
(bad)
(bad)
mov
fcmovbe
fistp
stc
jg
fistp
sub
std
int
shl
xchg
cld
pop
out
(bad)
sbb
pop
adc
in
pop
clc
jecxz
(bad)
call
icebp
int3
mov
(bad)
jp
out
sub
add
cmp
jecxz
(bad)
sbb
(bad)
jmp
ss
shr
pop
and
dec
(bad)
loope
cld
out
xchg
icebp
lahf
sti
mov
(bad)
std
aas
std
dec
call
(bad)
jg
clc
jmp
loop
mov
jmp
xchg
(bad)
sti
(bad)
(bad)
sub
push
in
idiv
std
xlat
pop
cmp
(bad)
xor
(bad)
stos
iret
in
jg
jge
aaa
adc
aas
cli
inc
mov
clc
xchg
mov
jg
js
pop
cli
jecxz
xlat
mov
inc
arpl
(bad)
add
fstp
cli
push
jg
icebp
aaa
hlt
or
fstp
inc
hlt
std
(bad)
mov
push
pop
dec
mov
sti
(bad)
test
dec
enter
(bad)
dec
mov
aas
movs
pop
jmp
inc
clc
push
(bad)
out
(bad)
sti
das
std
jge
push
fbld
pop
cld
inc
shl
scas
and
pop
idiv
leave
(bad)
dec
jp
int
icebp
in
pop
sub
mov
imul
dec
shl
fbld
clc
scas
(bad)
jle
sub
repz
(bad)
jg
out
(bad)
push
stc
cld
fbld
sbb
aaa
jmp
inc
mov
and
(bad)
fsub
mov
jmp
(bad)
call
ror
jmp
(bad)
sti
jg
lahf
jmp
inc
icebp
inc
jmp
(bad)
std
jg
jns
ds
(bad)
jg
jmp
sti
(bad)
dec
ficom
cmp
mov
push
(bad)
push
mov
retf
out
mov
push
clc
mov
shr
sbb
jg
push
retf
jge
idiv
jmp
out
xlat
jg
jle
mov
std
xchg
mov
out
in
xchg
sahf
clc
(bad)
pop
movs
stc
jmp
jg
jecxz
sbb
(bad)
and
jge
outs
(bad)
mov
outs
std
sub
loopne
(bad)
std
jg
(bad)
(bad)
mov
std
dec
aam
fild
(bad)
mov
or
pop
clc
xchg
mov
iret
mov
out
(bad)
jg
dec
adc
sub
xchg
in
mov
jmp
dec
xchg
retf
mov
lock
dec
call
mov
pop
push
mov
scas
adc
mov
aas
xchg
(bad)
inc
lock
xchg
pop
clc
pop
dec
dec
mov
scas
(bad)
mov
jg
jmp
(bad)
mov
sahf
jle
(bad)
call
dec
mov
addr16
(bad)
out
ror
outs
shl
std
out
icebp
sbb
xchg
jle
(bad)
std
xchg
xchg
mov
ds
jg
clc
cld
aas
(bad)
stos
and
lock
adc
popf
hlt
(bad)
repnz
dec
dec
neg
cld
and
xor
mov
aas
push
call
call
lahf
ins
(bad)
(bad)
dec
(bad)
call
aas
jmp
jg
adc
push
mov
dec
aas
and
iret
dec
aaa
adc
std
xor
imul
mov
mov
dec
push
inc
je
ds
fist
ja
sbb
sbb
in
and
jle
jmp
repnz
or
cld
leave
cmp
pop
test
sbb
jg
clc
jg
jg
outs
(bad)
(bad)
or
mov
hlt
mov
stc
aas
dec
fstp
cld
(bad)
repz
std
idiv
(bad)
lahf
leave
outs
dec
jg
jmp
iret
jg
das
cli
mov
xchg
(bad)
(bad)
sar
dec
jmp
jg
pop
hlt
jg
dec
push
pop
idiv
dec
jg
paddd
(bad)
jmp
fist
in
std
mov
(bad)
cmps
(bad)
call
cmps
jmp
pop
cld
mov
lahf
(bad)
mov
(bad)
mov
(bad)
mov
pop
std
mov
out
std
mov
out
cld
mov
in
push
inc
jecxz
es
adc
push
stc
adc
push
out
dec
(bad)
lods
int
push
jmp
data16
cld
(bad)
jg
pop
call
call
sub
std
aas
(bad)
outs
(bad)
out
(bad)
pop
jmp
fcomip
clc
icebp
les
mov
cmp
xor
shl
ss
mov
mov
mov
mov
js
(bad)
inc
(bad)
mov
inc
pop
clc
or
(bad)
idiv
std
(bad)
cmp
(bad)
inc
rcr
dec
mov
das
stc
and
push
pop
jle
fisttp
repnz
mov
out
out
out
inc
lea
(bad)
movq
dec
push
loope
sbb
(bad)
jmp
lahf
jl
leave
outs
clc
icebp
(bad)
pop
(bad)
cli
sti
sti
sti
mov
out
iret
(bad)
sahf
sbb
repz
sahf
pop
cmp
cld
call
js
dec
xor
inc
jge
sar
inc
cli
jmp
out
hlt
mov
jg
(bad)
xlat
stc
jne
fstp
mov
cmc
jle
pop
out
mov
call
(bad)
jg
pop
out
stc
sub
aaa
sti
jne
jmp
cli
mov
pop
jg
das
inc
jg
std
jmp
ror
xor
(bad)
jmp
jmp
(bad)
mov
(bad)
mov
jmp
das
das
outs
cld
(bad)
jmp
scas
push
jg
xor
ja
outs
idiv
out
(bad)
call
xor
icebp
lock
out
pop
cli
jg
in
call
(bad)
out
(bad)
mov
(bad)
(bad)
(bad)
idiv
jmp
mov
std
(bad)
(bad)
std
pop
call
push
jmp
stos
(bad)
jmp
repnz
cli
(bad)
push
pop
cld
pop
inc
out
(bad)
lahf
jmp
clc
(bad)
jmp
(bad)
addr16
fnstcw
jg
(bad)
(bad)
out
push
aas
std
dec
jmp
std
aas
(bad)
(bad)
lahf
cld
daa
dec
dec
icebp
pop
cld
pop
jmp
mul
idiv
clc
mov
cmp
cmp
jmp
in
jmp
cld
jg
inc
(bad)
popa
dec
cld
jne
idiv
cmp
jmp
sbb
push
sar
add
fcomip
aaa
cld
or
std
pop
test
push
scas
(bad)
adc
(bad)
std
mov
imul
sbb
(bad)
jmp
clc
mov
sar
lea
out
cld
mov
(bad)
jmp
(bad)
repz
fistp
lahf
jnp
(bad)
call
fcomip
addr16
call
(bad)
scas
(bad)
out
mov
pop
jg
pop
lock
xlat
fcomip
out
loopne
(bad)
cmp
fsubr
or
(bad)
out
(bad)
mov
mov
paddd
xchg
cld
pop
jg
mov
cmp
cld
pop
cld
jg
pop
jg
das
std
mov
(bad)
cld
mov
(bad)
(bad)
mov
aas
clc
push
push
idiv
repz
movs
call
aas
repnz
jmp
xlat
aas
cli
aaa
cld
imul
(bad)
xchg
call
aas
std
ja
(bad)
aas
hlt
push
push
push
aas
div
std
push
call
aas
cli
aaa
std
jmp
paddb
ud0
dec
std
(bad)
xlat
jg
pop
std
xchg
std
std
pop
loopne
jg
out
clc
or
out
mov
cli
or
call
inc
push
(bad)
cli
or
pop
(bad)
mov
(bad)
cli
sub
(bad)
(bad)
jg
movs
jmp
call
pop
cmc
xor
call
pop
test
(bad)
jmp
(bad)
movs
cmps
call
pop
sti
pop
popf
std
fistp
pop
hlt
popf
(bad)
jmp
cld
and
cld
pop
jg
pop
std
(bad)
sti
outs
cld
and
aas
loope
(bad)
neg
cld
(bad)
(bad)
aam
cmc
mov
icebp
(bad)
mov
bnd
in
jg
(bad)
jg
in
jg
idiv
pop
jg
stc
(bad)
std
ja
jmp
cld
shr
(bad)
out
jg
das
stc
sar
ud0
jg
push
ja
cdq
in
std
paddb
lock
pop
std
pop
(bad)
(bad)
mul
pop
js
jg
inc
jg
das
stc
mov
(bad)
(bad)
mov
dec
(bad)
mov
dec
sti
mov
fisttp
jg
out
clc
repz
out
mov
call
retf
inc
push
loope
jg
movs
int
(bad)
std
xchg
ror
mov
lock
mov
cld
repz
cli
and
repz
adc
call
pop
test
std
xlat
std
popa
das
(bad)
out
mov
std
xor
(bad)
cli
(bad)
(bad)
jmp
shr
(bad)
out
mov
lahf
std
cmc
jg
retf
(bad)
sti
outs
(bad)
arpl
(bad)
sti
scas
std
inc
pop
cld
fistp
std
cld
mov
(bad)
sti
(bad)
mov
dec
cmps
jmp
daa
(bad)
fidivr
repnz
(bad)
cmps
inc
daa
(bad)
cli
aas
jmp
hlt
(bad)
(bad)
cmps
(bad)
cli
aas
idiv
inc
mov
bnd
inc
jg
(bad)
int
sti
aaa
dec
push
aas
not
(bad)
xor
idiv
pop
inc
cmp
inc
xchg
aas
idiv
(bad)
jae
mov
jbe
(bad)
cli
jae
fdivrp
mov
(bad)
jmp
sub
loopne
(bad)
mov
(bad)
jmp
cmps
mov
gs
(bad)
jmp
std
mov
fcos
cmc
push
std
loop
(bad)
sti
scas
sti
inc
jle
dec
or
pop
call
xlat
pop
inc
dec
jg
out
std
jg
lods
jg
idiv
idiv
inc
shr
aas
leave
jae
idiv
(bad)
shr
(bad)
outs
cli
(bad)
push
paddb
jmp
jg
repz
lahf
stc
jg
push
jg
pop
idiv
xchg
jg
pop
repz
xor
lahf
clc
jg
jae
fistp
jg
lahf
cmc
jg
mov
lahf
idiv
dec
jg
pop
lock
or
pop
hlt
jg
inc
std
cmp
fwait
(bad)
fdivr
sti
iret
clc
add
shl
push
out
out
cld
fistp
pushf
(bad)
push
in
std
pop
jg
bound
std
mov
iret
inc
(bad)
scas
mov
jmp
daa
ds
sub
shl
pop
std
pop
popf
std
pop
jg
pop
cli
loop
cli
sbb
mov
mov
mov
fcomip
(bad)
jge
js
idiv
ins
jg
in
cli
jnp
lods
repnz
cli
cmp
aam
(bad)
sti
out
cld
ror
jmp
(bad)
scas
jg
das
mov
mov
jg
das
inc
clc
call
ud0
(bad)
cli
mov
mov
sbb
idiv
sti
mov
sbb
xlat
mov
call
mov
push
mov
call
mov
call
jg
cld
ffreep
(bad)
(bad)
call
mov
call
std
daa
cmp
neg
dec
(bad)
(bad)
std
daa
sahf
(bad)
mov
clc
mov
(bad)
out
aas
movs
jl
jg
test
iret
pop
sbb
das
jp
jg
inc
push
(bad)
push
pop
repnz
leave
(bad)
std
xchg
jmp
addr16
pop
stc
pop
adc
adc
adc
push
fcomip
cmps
into
(bad)
out
mov
(bad)
out
mov
(bad)
out
mov
cli
stc
std
(bad)
sti
out
stc
shl
push
fcomip
cmps
std
jle
neg
repz
(bad)
out
jg
iret
and
stc
mov
(bad)
out
mov
mov
std
jg
jecxz
in
clc
jg
xchg
les
dec
fcomip
cmps
(bad)
(bad)
int3
(bad)
cmps
(bad)
(bad)
cld
(bad)
out
(bad)
ret
out
(bad)
out
(bad)
xlat
(bad)
(bad)
out
aas
div
(bad)
idiv
repz
(bad)
fidivr
push
(bad)
jmp
pop
mov
test
clc
inc
call
mov
xlat
pop
frstor
jg
hlt
(bad)
inc
(bad)
(bad)
outs
cli
(bad)
push
daa
pop
cmp
mov
out
cmc
cmps
xchg
dec
(bad)
scas
aas
jge
in
cli
xor
imul
pop
(bad)
loopne
push
pop
lock
cmp
xlat
pop
cld
dec
mov
pop
cli
repnz
dec
rcl
std
in
cmc
push
std
rcr
sti
mov
sti
mov
(bad)
jmp
(bad)
(bad)
push
fcomip
out
call
fcomip
pop
sub
scas
mov
(bad)
loopne
(bad)
pop
jmp
pop
sar
fcomip
(bad)
(bad)
jmp
stc
(bad)
fdivr
jmp
stc
fisttp
cld
sbb
das
cld
popf
jg
push
scas
inc
sar
std
outs
cld
adc
push
out
std
or
push
pop
std
imul
(bad)
std
pop
(bad)
sub
loopne
cmc
pop
std
fwait
call
push
lahf
cld
(bad)
push
fisttp
dec
sbb
fucomip
ja
fnsave
cli
(bad)
fcomip
xlat
(bad)
jns
ja
repnz
(bad)
mov
mov
push
pop
(bad)
(bad)
out
pop
inc
jmp
fnstsw
jmp
lahf
mov
sti
push
cmc
imul
ror
dec
(bad)
out
pop
jl
loope
std
mov
inc
push
pop
cmp
in
(bad)
inc
jg
(bad)
jg
loope
xchg
(bad)
sti
(bad)
dec
out
aas
cmp
(bad)
mov
xlat
(bad)
std
daa
lods
lahf
(bad)
fistp
in
push
lahf
repnz
(bad)
(bad)
push
jg
fwait
(bad)
sti
dec
std
add
(bad)
(bad)
xor
mov
idiv
(bad)
mov
mov
out
(bad)
dec
jmp
aam
(bad)
std
xchg
xchg
out
stc
sub
fsubr
(bad)
(bad)
sbb
shl
(bad)
std
mov
mov
repz
sbb
jg
popf
jg
pop
cli
jg
fnstsw
pop
idiv
inc
jg
lahf
cmc
jg
and
rcr
inc
pop
lock
(bad)
push
jg
mov
cmp
test
clc
retf
push
aas
idiv
ds
sti
into
push
hlt
cmp
cli
mov
push
jnp
jmp
jp
cld
pop
push
std
std
jg
sti
mov
dec
lahf
std
pop
scas
inc
call
ja
(bad)
hlt
jg
fcompp
mov
std
jmp
sti
jmp
mul
(bad)
(bad)
faddp
std
(bad)
jmp
popf
aas
clc
mov
test
mov
cli
pop
(bad)
push
loop
ds
mov
push
div
xchg
(bad)
(bad)
scas
lahf
sub
(bad)
pop
fistp
call
xchg
(bad)
jmp
movd
jg
inc
cmps
call
lds
cli
stc
push
test
(bad)
jle
jg
(bad)
xchg
xchg
call
addr16
jmp
jmp
mov
sti
mov
out
push
xchg
add
pop
inc
pop
jg
sub
mov
jnp
jl
jg
jns
cmc
jg
stc
not
(bad)
std
in
lds
hlt
call
(bad)
mov
push
in
lahf
sbb
fistp
mov
mov
cmc
(bad)
dec
(bad)
out
leave
das
cli
in
(bad)
cli
add
(bad)
mov
jnp
stc
jnp
pop
shr
jecxz
jmp
mov
dec
aas
pop
cld
mov
paddw
(bad)
std
sar
fcos
xor
jmp
inc
jbe
idiv
lds
call
cld
(bad)
stc
loop
inc
cli
fwait
jmp
(bad)
jg
jg
push
cld
pop
outs
call
xlat
call
cld
dec
cli
mov
jnp
daa
mov
(bad)
idiv
scas
ja
shr
jg
adc
(bad)
jg
leave
jg
das
std
mov
das
std
mov
pop
clc
mov
out
(bad)
mov
aas
out
loope
imul
pop
icebp
out
fistp
cmp
(bad)
push
hlt
retf
sar
std
in
lahf
sbb
pop
(bad)
mov
cld
aam
(bad)
std
stc
ja
(bad)
scas
outs
(bad)
fidivr
push
fincstp
jbe
scas
mov
neg
push
(bad)
cli
jmp
mov
call
jl
jg
aam
cld
jnp
(bad)
pop
stc
in
xchg
std
loope
xlat
push
pop
cld
adc
dec
outs
(bad)
scas
mov
loop
jmp
daa
cmp
jg
pop
call
in
dec
jge
jg
jg
stos
(bad)
cmp
xchg
jg
dec
push
out
(bad)
pop
jg
pop
mov
mov
cmps
jmp
(bad)
out
aas
out
lahf
cld
pop
jg
pop
xor
mov
(bad)
mov
std
jg
sbb
cmc
push
pop
(bad)
mov
sub
fwait
jg
(bad)
cli
mov
mov
pushf
(bad)
idiv
push
mov
cld
movs
dec
pop
not
(bad)
std
jnp
(bad)
mov
(bad)
(bad)
(bad)
jge
(bad)
cld
push
repz
fistp
icebp
ror
(bad)
out
iret
jg
std
(bad)
sti
(bad)
dec
jmp
(bad)
out
xchg
mov
push
pop
lock
(bad)
mov
mov
mov
(bad)
inc
pop
(bad)
sti
cld
fistp
pop
icebp
sti
(bad)
fistp
clc
ret
jle
(bad)
sti
sbb
iret
popf
(bad)
fistp
(bad)
out
jmp
addr16
ds
das
std
repz
imul
idiv
push
mov
push
mov
push
jg
ja
xchg
push
jg
mov
popa
push
jg
mov
and
idiv
aaa
inc
idiv
aaa
inc
push
jg
dec
jmp
imul
(bad)
sti
push
std
dec
(bad)
fdivrp
std
jg
pop
(bad)
std
(bad)
std
jg
lahf
(bad)
(bad)
inc
xchg
push
dec
movs
jg
pop
push
cmps
jne
dec
jae
xchg
push
sar
std
in
idiv
scas
das
jle
sar
cmc
cld
cmps
pop
std
(bad)
into
paddd
jg
cld
(bad)
lahf
(bad)
(bad)
popw
call
ja
(bad)
push
retf
retf
jecxz
jmp
clc
arpl
pop
stc
pop
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
cli
jecxz
clc
leave
push
(bad)
dec
call
(bad)
scas
mov
(bad)
scas
pop
icebp
aas
(bad)
stos
push
scas
(bad)
idiv
mov
jmp
jmp
retf
retf
(bad)
sar
in
(bad)
pop
(bad)
sar
in
cli
pop
inc
pop
(bad)
xchg
aas
in
(bad)
lahf
call
scas
(bad)
fidivr
idiv
cli
das
call
dec
push
aas
in
(bad)
cli
dec
dec
aas
jmp
clc
(bad)
cli
pop
dec
jg
(bad)
cli
mov
lock
das
cld
pop
jle
das
(bad)
das
cld
(bad)
(bad)
(bad)
aas
dec
(bad)
sti
(bad)
cli
aas
(bad)
jmp
jmp
sti
pop
loope
(bad)
out
iret
(bad)
lock
push
mov
jnp
pop
aas
std
out
(bad)
test
cwde
jg
jg
ud0
das
aas
sti
mov
in
std
out
push
dec
(bad)
in
push
daa
cld
sub
push
(bad)
xchg
out
clc
xchg
(bad)
in
mov
xlat
pop
jmp
out
xlat
lahf
repz
pop
(bad)
fistp
(bad)
addr16
pop
mov
call
(bad)
std
mov
push
mov
scas
(bad)
das
call
push
dec
(bad)
std
jg
(bad)
push
push
stos
(bad)
xchg
mov
(bad)
std
mov
(bad)
jmp
lock
cli
aad
std
aas
icebp
jg
retf
out
stc
mov
ja
pop
mov
test
mov
(bad)
sti
mov
cld
fdivrp
cmc
mov
(bad)
std
stos
inc
aad
xchg
mov
aas
in
cld
outs
(bad)
jmp
ret
das
div
aaa
jmp
jg
(bad)
xlat
(bad)
fist
jmp
pop
scas
(bad)
out
pop
cld
mov
cld
fistp
pop
clc
(bad)
sti
addr16
(bad)
(bad)
inc
jg
idiv
out
lahf
stc
mov
paddd
xchg
cld
xchg
aas
loope
cli
jmp
jae
push
pop
jmp
sub
out
mov
(bad)
std
das
cld
jae
leave
(bad)
std
jg
outs
(bad)
jmp
push
std
(bad)
fbld
mov
call
(bad)
std
jg
sub
(bad)
push
std
retf
hlt
(bad)
jg
jg
xlat
jmp
(bad)
jmp
std
jg
fdivrp
psubsw
call
dec
loop
daa
fidiv
(bad)
push
pop
not
call
out
out
(bad)
sti
inc
lahf
clc
mov
std
jg
sar
(bad)
out
aas
cld
(bad)
clc
fdivrp
cmc
pop
call
pop
(bad)
xor
(bad)
std
pop
dec
stc
push
xchg
sub
(bad)
sti
(bad)
sti
mov
(bad)
jmp
clc
imul
(bad)
jmp
stc
(bad)
(bad)
xchg
(bad)
jmp
cld
scas
(bad)
mov
pop
(bad)
mov
xchg
(bad)
fdivr
cmc
jg
retf
inc
iret
(bad)
jmp
sti
out
scas
(bad)
sti
jg
call
jmp
call
(bad)
(bad)
outs
call
xlat
scas
cli
pop
jmp
call
test
std
(bad)
sub
jg
mov
dec
(bad)
(bad)
mov
(bad)
stos
hlt
fidivr
(bad)
sti
(bad)
cli
push
jmp
inc
(bad)
push
(bad)
cli
fistp
mov
jmp
jg
jno
pop
jg
call
clc
pop
inc
mov
jg
loope
inc
std
xor
(bad)
mov
idiv
mov
mov
icebp
mov
sti
psubd
(bad)
jmp
and
repz
cld
ret
jg
push
retf
inc
jg
(bad)
cli
mov
jg
fistp
lock
xchg
push
(bad)
(bad)
scas
(bad)
sti
xchg
jmp
retf
push
cli
std
lahf
mov
add
sti
jg
arpl
xchg
(bad)
cmp
cli
iret
call
xlat
dec
cld
adc
dec
sbb
scas
mov
shr
xor
cli
(bad)
(bad)
std
mov
(bad)
in
(bad)
jmp
xchg
jg
js
cld
repz
push
dec
neg
lock
aas
dec
push
inc
paddw
push
fcomip
jg
fdivrp
neg
cmc
daa
fs
pop
test
jle
test
(bad)
fsubr
(bad)
inc
inc
(bad)
cmc
call
lahf
cli
jg
pop
dec
aas
idiv
(bad)
repz
cld
jg
(bad)
ret
(bad)
jg
(bad)
std
(bad)
jg
(bad)
fstp
inc
(bad)
(bad)
jnp
out
mov
enter
cli
std
mov
(bad)
sti
jg
inc
(bad)
out
(bad)
sti
jg
addr16
out
(bad)
sti
push
adc
std
or
popf
pop
test
push
das
cmps
mov
pusha
cld
jecxz
(bad)
jg
(bad)
dec
jmp
jmp
shl
lahf
mov
sti
(bad)
(bad)
(bad)
mov
in
leave
(bad)
std
pop
adc
and
jmp
iret
hlt
jmp
call
stos
(bad)
repnz
(bad)
jmp
cli
jnp
clc
(bad)
jmp
std
xchg
aam
sti
aas
stc
xlat
(bad)
mov
jmp
sti
cmp
cwde
(bad)
jmp
(bad)
mov
push
fcomip
paddw
call
(bad)
stc
aas
cld
inc
push
push
aas
(bad)
and
xlat
push
aas
adc
inc
stc
(bad)
clc
(bad)
(bad)
(bad)
xlat
jg
idiv
pop
call
jg
ja
pop
push
jg
ja
(bad)
xlat
jg
ja
pop
call
jg
mov
call
fisttp
mov
xchg
adc
sub
lock
call
loop
(bad)
(bad)
pop
clc
mov
pop
nop
lahf
inc
pusha
(bad)
and
xlat
(bad)
std
aas
std
xchg
push
push
aas
std
xor
xlat
push
(bad)
ret
call
(bad)
std
(bad)
ret
hlt
stc
aas
inc
xor
leave
(bad)
jmp
(bad)
lahf
xor
add
iret
jg
mov
jg
js
ins
in
pop
outs
icebp
(bad)
mov
xchg
jmp
fist
sti
pop
cld
ins
test
(bad)
jg
dec
push
fcomip
jg
pop
dec
fild
or
call
daa
dec
int
inc
sti
aas
cld
jecxz
sahf
lock
out
jmp
cli
dec
(bad)
xchg
(bad)
jmp
dec
test
std
xor
out
jg
(bad)
and
jg
(bad)
std
jg
iret
jmp
push
jg
xor
out
jmp
out
std
mov
out
cmps
lahf
jg
sar
or
jg
loopne
scas
xor
ret
(bad)
in
(bad)
push
mov
dec
sti
call
push
aas
(bad)
jnp
xlat
jg
pop
call
cld
call
call
paddd
push
jg
cmp
lahf
call
lahf
cld
(bad)
push
(bad)
std
lahf
dec
idiv
std
lahf
std
ins
push
(bad)
std
pop
shl
or
jg
sbb
les
movs
das
jle
jmp
mov
xor
(bad)
jg
out
std
out
(bad)
std
jg
(bad)
hlt
repz
sbb
out
(bad)
sti
aas
cld
jmp
out
(bad)
sti
aas
cli
imul
jg
std
dec
(bad)
dec
jp
mov
pop
fdivrp
lahf
dec
pop
std
outs
call
jle
adc
push
(bad)
(bad)
mov
loopne
ds
jmp
(bad)
fnstsw
(bad)
jmp
xor
pop
cli
jecxz
in
cmp
out
mov
jmp
mov
clc
imul
(bad)
sti
(bad)
stos
(bad)
out
(bad)
jmp
cld
jmp
scas
(bad)
sti
aas
and
std
pop
jg
int
shl
jg
aaa
push
iret
(bad)
jmp
and
sti
das
dec
xchg
call
mov
mov
(bad)
jmp
in
cmc
jg
mov
push
jg
repz
(bad)
std
jg
sub
push
jg
sbb
push
jg
pop
jg
(bad)
std
jg
fstp
push
jg
jnp
test
das
sar
adc
jmp
mov
(bad)
mov
(bad)
stc
out
(bad)
pop
add
aas
adc
std
(bad)
and
push
(bad)
jg
(bad)
rcr
inc
(bad)
jmp
sti
aaa
jmp
(bad)
jmp
and
sub
mov
clc
dec
imul
jae
cmp
idiv
(bad)
fdivr
call
mov
jo
cmp
out
(bad)
imul
xchg
(bad)
out
aas
icebp
int3
(bad)
jg
pop
jmp
(bad)
icebp
pop
movs
push
loope
scas
(bad)
xchg
call
(bad)
std
dec
(bad)
fcos
idiv
cmc
(bad)
jmp
call
push
(bad)
dec
xlat
(bad)
std
dec
dec
push
push
iret
std
imul
std
sbb
xlat
(bad)
std
outs
jmp
das
movs
xchg
dec
sbb
jg
iret
cld
fbld
cld
mov
idiv
cmc
out
cld
in
xlat
push
out
rcr
call
call
(bad)
std
scas
sar
loopne
pop
add
iret
movs
(bad)
sub
mov
fild
aaa
cmp
pop
icebp
out
xchg
outs
stc
xchg
enter
(bad)
cmps
jmp
call
ja
push
pop
loop
call
imul
repz
pinsrw
cs
ret
mov
aas
jecxz
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
lahf
cld
sar
out
(bad)
sti
pop
(bad)
jecxz
out
(bad)
sti
pop
stc
jecxz
out
sti
jg
(bad)
sub
call
(bad)
sti
lahf
sti
push
(bad)
out
(bad)
sti
fbld
sti
das
shl
lods
inc
cmp
jl
mov
jmp
icebp
fcomp
jg
(bad)
and
cld
xchg
(bad)
push
stc
aas
jle
pop
inc
(bad)
sti
jg
addr16
clc
(bad)
sti
mov
into
inc
sbb
add
call
jg
lods
push
call
push
ja
loop
jmp
(bad)
sti
jle
(bad)
std
jg
push
jg
push
jg
xchg
inc
call
mov
call
(bad)
std
ja
loop
sti
(bad)
cli
cmp
push
jg
cmp
jg
std
jg
(bad)
std
jg
add
jge
xchg
pop
push
(bad)
xchg
(bad)
xlat
(bad)
xchg
out
lock
std
jg
and
shl
iret
sti
mov
das
mov
sti
inc
(bad)
lock
daa
(bad)
stc
jmp
lock
cmc
mov
push
out
(bad)
gs
(bad)
std
pop
std
or
cld
in
es
iret
mov
sub
xchg
cld
(bad)
xlat
mov
call
int
jg
(bad)
xchg
enter
jg
pop
stc
push
idiv
out
and
(bad)
fidiv
xlat
xchg
call
(bad)
std
xlat
xchg
push
push
aaa
push
call
push
ja
mov
pop
repz
fistp
cli
(bad)
(bad)
mov
cmc
jg
or
cmps
(bad)
xchg
push
jg
lea
push
stc
jg
(bad)
push
(bad)
cld
(bad)
xlat
fistp
call
fist
sbb
loope
out
pop
push
mov
call
mov
jmp
push
outs
and
and
jg
loope
pop
adc
push
iret
(bad)
push
call
(bad)
std
(bad)
call
daa
jmp
jmp
div
mov
(bad)
fstp
icebp
xchg
(bad)
call
jg
aas
push
icebp
enter
cld
(bad)
neg
pop
enter
mov
mov
(bad)
jg
in
(bad)
(bad)
mov
sti
(bad)
(bad)
imul
iret
jmp
(bad)
(bad)
cli
lahf
(bad)
mov
xchg
js
iret
movs
call
paddw
les
and
(bad)
jg
jp
mov
dec
(bad)
dec
loop
inc
adc
cld
adc
dec
std
add
pop
and
out
aas
cmps
out
(bad)
xchg
aas
cdq
clc
out
(bad)
mov
mov
(bad)
inc
(bad)
jg
pop
jg
push
call
(bad)
(bad)
jg
add
dec
(bad)
std
pop
jle
(bad)
cli
mov
(bad)
cli
mov
(bad)
(bad)
mov
(bad)
cli
mov
cmc
jg
gs
std
and
scas
mov
fcomip
(bad)
(bad)
mov
mov
xlat
xchg
mov
jg
(bad)
std
jg
les
aas
int
icebp
push
lahf
rcr
and
jmp
sar
pop
(bad)
jecxz
scas
(bad)
sti
pop
test
mov
call
sti
mov
dec
(bad)
mov
mov
cli
stos
(bad)
stos
mov
mov
repnz
cmc
cld
std
(bad)
jmp
(bad)
call
out
cli
mov
int
std
jg
lds
(bad)
mov
retf
cmp
stos
cmps
and
movs
adc
sbb
dec
(bad)
fbstp
inc
ss
and
pop
leave
paddw
(bad)
adc
xchg
mov
call
call
aas
icebp
(bad)
(bad)
mov
mov
pop
(bad)
(bad)
idiv
(bad)
fstp
jmp
push
fbstp
fld
(bad)
call
dec
(bad)
das
cld
(bad)
(bad)
(bad)
push
dec
jp
sti
lahf
cmc
(bad)
imul
clc
idiv
cmc
jg
sbb
call
(bad)
out
cmc
jg
pop
jg
int
fistp
mov
std
fbld
scas
dec
popf
cli
aas
call
xlat
push
iret
xchg
ds
push
(bad)
cmp
sti
enter
(bad)
push
adc
jmp
jmp
sti
mov
(bad)
(bad)
mov
psubq
jb
xor
jg
aas
stc
push
cld
(bad)
fistp
jae
jg
jmp
sti
lahf
leave
fistp
ret
dec
out
std
fidivr
lahf
std
icebp
xchg
xlat
push
cmps
sbb
(bad)
fistp
outs
jg
mov
scas
(bad)
in
das
sti
into
(bad)
std
mov
xchg
aas
sti
(bad)
(bad)
(bad)
mov
sti
sti
jle
(bad)
cli
(bad)
xchg
aaa
(bad)
cld
aaa
(bad)
in
(bad)
jmp
and
(bad)
mov
push
mov
stc
cmp
mov
push
retf
(bad)
movs
aas
stc
(bad)
cli
lahf
mov
enter
jg
pop
fucom
lahf
push
push
jmp
scas
push
sti
std
call
iret
push
(bad)
(bad)
sub
daa
idiv
pop
mov
dec
(bad)
jg
sti
(bad)
push
retf
sub
pop
inc
(bad)
stc
sub
(bad)
jmp
mov
cli
call
(bad)
dec
call
iret
(bad)
std
(bad)
std
retf
jg
push
jg
mov
test
dec
(bad)
addr16
(bad)
inc
jmp
call
notrack
(bad)
push
clc
and
callw
ins
cli
(bad)
sub
idiv
or
jg
lahf
push
jle
mov
adc
stc
sbb
loope
fbld
pop
test
or
mov
cld
lods
(bad)
pop
mov
aas
cli
(bad)
ret
push
aas
cld
das
call
(bad)
(bad)
aas
clc
paddd
mov
(bad)
out
std
jnp
sahf
std
(bad)
mov
sar
popf
jg
fisttp
(bad)
jmp
(bad)
mov
(bad)
mov
idiv
jg
lahf
(bad)
cmps
(bad)
cmp
dec
lahf
ds
jne
push
jle
outs
jge
pop
mov
inc
(bad)
dec
daa
lahf
cld
lods
cld
jmp
(bad)
aas
(bad)
ins
jle
(bad)
ja
sub
popf
dec
cmp
cld
call
out
scas
(bad)
js
pop
(bad)
jae
pusha
movs
hlt
(bad)
fist
outs
mov
std
data16
(bad)
jle
fcomip
aaa
std
sub
xlat
fldenv
(bad)
jmp
fidivr
mov
or
mov
clc
aas
(bad)
push
sar
aaa
(bad)
inc
push
jmp
int
sub
inc
sbb
int3
jmp
lods
idiv
(bad)
ja
fnstsw
mov
aas
(bad)
mov
(bad)
mov
(bad)
mov
fbld
idiv
out
std
sbb
idiv
out
(bad)
jmp
idiv
(bad)
jmp
(bad)
inc
mov
pop
movs
dec
iret
jg
(bad)
push
(bad)
out
jg
(bad)
(bad)
out
cld
sbb
sar
std
out
std
(bad)
cmp
cld
xchg
(bad)
out
jg
fbld
cmps
mov
pop
call
jle
idiv
fnstsw
(bad)
dec
std
dec
call
call
jmp
(bad)
push
inc
mov
das
scas
imul
out
(bad)
std
pop
aaa
paddd
mov
(bad)
std
push
sar
dec
neg
pop
jle
(bad)
(bad)
stos
jg
sub
cld
jmp
mov
(bad)
out
mov
jg
int
cmps
div
sar
(bad)
clc
inc
jge
jg
int
fdiv
(bad)
out
mov
fistp
lahf
xchg
(bad)
fistp
lahf
ds
mov
psubq
stc
mov
psubw
(bad)
(bad)
call
jg
or
lahf
stc
jg
pop
push
aas
sbb
dec
jle
(bad)
std
idiv
add
loop
ds
cld
hlt
(bad)
dec
push
(bad)
fistp
std
jmp
mov
in
pop
clc
stc
(bad)
std
xlat
std
and
rcr
and
call
jmp
sti
sti
cld
fistp
pop
stc
call
in
(bad)
fdivrp
std
not
fcmovbe
aas
clc
xchg
pop
push
pop
jg
(bad)
std
dec
dec
cld
(bad)
std
dec
cld
mov
in
std
dec
dec
pop
sar
call
pop
(bad)
xchg
(bad)
sti
(bad)
xlat
(bad)
mov
jg
lahf
mov
mov
(bad)
(bad)
mov
ja
out
aas
cmps
fdivr
mov
(bad)
std
out
and
addr16
jecxz
(bad)
mov
cli
jg
mov
aas
cli
loop
call
pop
(bad)
mov
std
(bad)
sti
outs
call
push
fcomip
daa
inc
push
fisttp
(bad)
sti
(bad)
fdivr
(bad)
inc
inc
stos
(bad)
sti
pop
cli
dec
jle
(bad)
std
(bad)
adc
(bad)
sti
mov
dec
(bad)
mov
das
clc
mov
outs
stc
mov
scas
(bad)
mov
in
pop
jno
fcomip
addr16
(bad)
fistp
pop
mov
jg
mov
jnp
neg
jb
lock
(bad)
xchg
imul
mov
inc
pop
cli
mov
(bad)
mov
stc
(bad)
std
xlat
call
jecxz
sti
mov
jecxz
jmp
adc
std
addr16
(bad)
out
std
mov
cmps
(bad)
out
jg
das
imul
std
inc
(bad)
out
jg
out
cld
xor
out
jg
outs
cmps
mov
(bad)
(bad)
aaa
dec
ja
stc
mov
inc
idiv
lea
(bad)
dec
(bad)
mov
mov
jg
imul
sbb
fstp
daa
pop
(bad)
fist
mov
ds
out
pop
cld
ds
test
out
pop
cli
std
sti
push
pop
hlt
pop
sbb
fistp
div
(bad)
inc
(bad)
(bad)
out
aas
loop
idiv
mov
(bad)
(bad)
jecxz
xchg
(bad)
sti
dec
pop
jge
jg
dec
int
(bad)
out
aas
std
pop
inc
(bad)
std
addr16
rcl
push
lahf
sti
xchg
(bad)
repz
out
(bad)
fistp
pop
aaa
stc
mov
cld
(bad)
(bad)
stos
dec
mov
neg
hlt
pop
mov
neg
std
xlat
cld
xchg
(bad)
sti
pop
cli
(bad)
call
jnp
mov
sti
lahf
inc
(bad)
mov
sti
pop
clc
cmps
(bad)
(bad)
sti
(bad)
aaa
inc
adc
(bad)
mov
jle
in
into
(bad)
std
hlt
cmp
out
addr16
jl
(bad)
ds
mov
cmc
jg
sti
in
(bad)
jle
data16
jg
das
mov
(bad)
(bad)
out
ins
icebp
lock
(bad)
jge
cli
loopne
into
fcmovne
(bad)
out
mov
fcomip
jmp
jle
xchg
(bad)
sti
in
pop
je
jg
jle
icebp
(bad)
std
(bad)
lock
(bad)
std
scas
call
(bad)
mov
jg
jg
pop
push
(bad)
ds
mov
(bad)
mov
jg
inc
movs
mov
iret
(bad)
xor
sar
(bad)
mov
in
cmp
imul
xchg
lahf
cld
(bad)
jle
lea
fistp
sub
(bad)
out
out
cs
out
scas
(bad)
(bad)
out
aas
loopne
cli
into
(bad)
std
pop
cld
rcr
cmp
neg
aas
(bad)
daa
(bad)
out
mov
cli
stc
(bad)
cmp
fistp
std
jg
daa
mov
mov
and
in
(bad)
(bad)
inc
jg
idiv
out
aas
lock
stc
std
(bad)
out
mov
stc
sbb
(bad)
std
out
cld
mov
retf
(bad)
xlat
inc
hlt
test
mov
(bad)
mov
sbb
(bad)
loop
and
fdivr
mov
out
out
adc
xchg
jg
lods
fwait
(bad)
sar
adc
idiv
mov
paddb
cld
mov
cld
mov
cli
(bad)
(bad)
ja
mov
cld
(bad)
(bad)
idiv
into
aas
repnz
(bad)
das
dec
aas
ret
dec
(bad)
fcmovu
bnd
stos
push
(bad)
mov
mov
stos
(bad)
(bad)
out
test
jmp
scas
adc
das
std
mov
(bad)
dec
(bad)
jge
jae
xchg
(bad)
xchg
mov
shr
out
aas
cwde
js
(bad)
sti
xchg
repz
sti
dec
mov
loope
(bad)
(bad)
ja
popf
mov
lock
(bad)
lahf
cld
mov
idiv
ss
inc
sti
fwait
(bad)
out
push
(bad)
jmp
out
pop
stc
pop
(bad)
in
push
(bad)
cld
scas
std
aad
idiv
repnz
(bad)
ins
push
push
sub
jne
and
dec
jmp
mov
lods
jns
aaa
push
jg
hlt
(bad)
cld
rcr
push
mov
leave
push
push
pop
clc
xchg
aam
std
xor
out
idiv
inc
jg
(bad)
jg
jno
out
repnz
(bad)
jae
ror
(bad)
sti
outs
cld
(bad)
test
sti
(bad)
xlat
sub
idiv
cli
xlat
je
pop
(bad)
push
(bad)
cmp
ret
sbb
jg
mov
in
std
mov
aas
(bad)
std
ins
cli
inc
cs
cld
sub
(bad)
call
imul
(bad)
sti
psubd
jg
(bad)
sti
shld
clc
mov
dec
stc
mov
xor
sar
dec
cli
(bad)
aas
scas
aas
dec
icebp
std
mov
sti
fist
(bad)
(bad)
xchg
xchg
(bad)
call
(bad)
mov
jmp
(bad)
std
idiv
(bad)
xchg
ror
(bad)
(bad)
outs
call
(bad)
fcomip
aaa
call
jmp
jg
lahf
jbe
jg
xor
xchg
out
cli
jg
in
push
lahf
idiv
lahf
push
lods
push
dec
(bad)
mov
idiv
out
out
xchg
jne
call
loope
retf
shl
(bad)
out
xchg
push
jbe
dec
std
(bad)
idiv
inc
in
jmp
ret
and
daa
cli
sahf
(bad)
(bad)
in
hlt
(bad)
inc
cmp
stos
push
(bad)
(bad)
out
(bad)
(bad)
pushf
ins
xchg
jmp
cld
(bad)
xchg
gs
imul
icebp
jg
out
(bad)
stc
fcomip
jg
daa
(bad)
cmp
and
cmp
(bad)
jg
js
ja
idiv
mov
call
mov
sti
jg
or
mov
jg
(bad)
(bad)
jnp
fld
cmps
iret
push
lahf
mov
push
loope
sub
mov
scas
inc
lahf
call
xchg
arpl
(bad)
pop
mov
leave
cmp
jg
mov
jle
aas
cmps
mov
enter
imul
xchg
cmc
xchg
call
inc
push
outs
call
call
xchg
lods
loope
iret
push
out
push
inc
repnz
call
pop
clc
scas
(bad)
(bad)
(bad)
sti
mov
mov
inc
(bad)
jmp
loope
pop
sar
imul
aas
mov
push
leave
dec
cld
dec
jmp
push
jg
je
(bad)
sti
outs
mov
lahf
push
sub
xor
(bad)
(bad)
sub
fwait
stc
dec
test
(bad)
push
mov
(bad)
fistp
sar
std
out
adc
(bad)
pop
dec
imul
dec
aas
cld
fcom
ret
arpl
(bad)
inc
push
(bad)
(bad)
push
xchg
(bad)
call
shl
mov
int3
(bad)
std
(bad)
sbb
pop
retf
rcl
retf
fcos
idiv
std
dec
sar
sar
jmp
out
shl
(bad)
mov
cld
jmp
inc
je
pop
jmp
and
dec
das
cli
pop
inc
mov
stc
mov
cli
mov
pop
std
(bad)
idiv
dec
cmp
jg
lock
leave
addr16
bnd
dec
cmc
(bad)
std
jg
lods
xchg
push
(bad)
std
ja
(bad)
(bad)
neg
jbe
(bad)
(bad)
jnp
sub
jmp
icebp
out
call
cld
ja
adc
adc
ret
jmp
jg
(bad)
std
jg
xlat
std
pop
cld
xchg
in
pop
add
jecxz
stc
(bad)
out
jmp
(bad)
(bad)
std
jg
xchg
adc
stc
sub
sti
pop
inc
mov
fbld
inc
pop
sar
pop
call
pop
fwait
push
inc
cli
pushf
loopne
arpl
mov
add
enter
and
dec
mov
pop
hlt
push
std
or
xchg
idiv
dec
jle
jle
xchg
mov
lods
or
inc
jg
lods
pop
(bad)
push
(bad)
idiv
adc
cmc
inc
call
sahf
lods
or
(bad)
push
call
mov
pop
(bad)
push
lahf
std
dec
in
addr16
std
xchg
fdivrp
mov
out
jmp
icebp
(bad)
out
aas
in
dec
in
scas
and
aas
push
lahf
and
cld
(bad)
aam
aas
dec
mov
jmp
outs
push
jge
lahf
ror
jg
dec
(bad)
mov
lahf
pusha
jg
out
call
(bad)
jmp
(bad)
std
mov
lods
(bad)
jmp
icebp
(bad)
jg
outs
out
jmp
loop
mov
mov
(bad)
out
pop
icebp
outs
sar
(bad)
std
jg
(bad)
(bad)
in
(bad)
dec
loop
ja
fistp
(bad)
out
pop
neg
(bad)
pop
push
das
sti
out
(bad)
jge
repz
pop
mov
lahf
(bad)
sti
call
(bad)
sti
xchg
pmulhuw
cld
pop
jae
push
int
(bad)
fistp
dec
fild
into
push
int
(bad)
fistp
das
lahf
cmp
repnz
cmc
push
aas
cmc
out
(bad)
(bad)
push
out
sti
(bad)
fcomip
idiv
jge
cmc
(bad)
out
jge
jnp
(bad)
jmp
dec
(bad)
in
pop
arpl
ins
sti
adc
(bad)
sahf
pop
cmp
inc
clc
or
xchg
sub
(bad)
out
cld
sbb
dec
icebp
pop
cld
pop
(bad)
jge
ja
clc
cmp
pop
cli
(bad)
out
icebp
jnp
push
aaa
(bad)
(bad)
call
fucomip
ja
popf
jbe
cwde
aas
out
stc
xor
mov
xchg
leave
xor
xchg
addr16
ret
jns
dec
mov
dec
(bad)
test
(bad)
call
lahf
push
push
pop
jge
dec
(bad)
mov
xor
mov
mov
in
cmc
xlat
cld
mov
pop
jg
pop
std
jnp
pop
jg
pop
cmc
jnp
pop
jg
pop
idiv
std
pop
jg
pop
(bad)
sti
call
repz
nop
std
pop
jg
lahf
pop
cld
pop
jg
lahf
not
hlt
push
addr16
scas
mov
scas
mov
jg
inc
jg
pop
inc
(bad)
inc
jmp
jecxz
scas
jg
outs
clc
xchg
(bad)
scas
jg
outs
cld
xchg
jmp
retf
(bad)
scas
(bad)
clc
aas
dec
or
aas
clc
xlat
(bad)
test
idiv
scas
mov
loopne
dec
ud0
(bad)
into
jg
pop
clc
in
(bad)
(bad)
jmp
loopne
cld
pop
mov
adc
dec
hlt
dec
sar
mov
xchg
aaa
clc
mov
in
(bad)
std
(bad)
cld
in
hlt
(bad)
(bad)
cmps
inc
daa
(bad)
mov
out
jg
scas
jmp
scas
jg
outs
sti
xor
outs
cmp
add
pop
inc
push
jg
mov
push
lahf
xchg
(bad)
jmp
(bad)
(bad)
ror
mov
lock
cmp
dec
ficomp
das
std
cld
(bad)
cli
jmp
mov
cmp
lock
icebp
mov
dec
(bad)
push
ja
jmp
(bad)
pop
(bad)
paddb
(bad)
sti
pop
stc
retf
jle
(bad)
std
dec
cld
jne
hlt
inc
mov
fcomip
out
sub
mov
pop
push
aas
repz
(bad)
leave
jg
pop
xor
aas
loope
clc
adc
int3
jg
pop
stc
addr16
scas
pop
cld
jnp
call
hlt
jnp
call
pop
hlt
std
jnp
xlat
pop
repnz
jg
jg
adc
int3
aas
sti
mov
call
lahf
push
cmp
imul
(bad)
cli
xor
ficomp
cld
aad
cmc
pop
std
loope
idiv
cmc
xchg
push
jg
push
xlat
(bad)
test
hlt
out
lods
dec
pop
bnd
cmp
(bad)
jg
jecxz
neg
(bad)
clc
pop
stc
jg
dec
dec
fild
lahf
cld
pop
push
(bad)
mov
adc
outs
std
pop
es
test
call
mov
(bad)
hlt
jg
cli
(bad)
fdivrp
std
sti
xchg
ud0
inc
jno
iret
pushf
cld
fistp
std
pop
popf
(bad)
pop
pop
jg
sar
sti
jnp
sar
xchg
jmp
lahf
(bad)
fist
jg
ja
out
loop
sti
loop
pop
cld
leave
aas
icebp
jg
(bad)
stc
aas
cmc
jg
mov
jge
jg
or
repz
lahf
xor
jg
lahf
clc
daa
(bad)
cdq
jmp
mov
dec
pop
ins
call
daa
lahf
(bad)
fistp
(bad)
(bad)
cld
cmps
idiv
scas
fisttp
dec
(bad)
out
cld
shld
aaa
push
repnz
jnp
jg
(bad)
in
cld
mov
call
lahf
cld
pop
pop
cld
fistp
pop
cli
idiv
cli
xchg
cli
jmp
sti
out
cli
sub
(bad)
sti
out
clc
sbb
push
pop
push
jg
(bad)
std
retf
dec
jg
(bad)
(bad)
mov
(bad)
cli
aad
sti
inc
cmc
lahf
(bad)
(bad)
std
out
ja
(bad)
mov
call
jmp
mov
aas
jge
jg
stc
add
(bad)
scas
out
push
inc
call
in
(bad)
jl
jg
sar
(bad)
jg
icebp
jg
in
(bad)
cli
jae
mov
cli
iret
dec
(bad)
(bad)
out
(bad)
jmp
(bad)
fwait
jg
lods
stos
jmp
aaa
(bad)
(bad)
jmp
jmp
(bad)
mov
ja
idiv
jmp
clc
pop
(bad)
in
(bad)
jmp
cli
aad
adc
(bad)
aas
stc
mov
aas
(bad)
mov
das
mov
lock
call
mov
(bad)
cli
cmp
out
(bad)
fistp
call
aas
stc
das
lods
(bad)
out
mov
neg
cli
jmp
das
pop
aam
inc
in
in
out
(bad)
cli
(bad)
lods
dec
xor
jge
into
sti
mov
cmc
mov
mov
(bad)
scas
pop
std
out
call
cli
jg
(bad)
retf
(bad)
fcmovnb
dec
inc
ret
dec
out
std
pop
jg
pop
sti
sti
(bad)
fistp
(bad)
out
aas
dec
scas
jmp
(bad)
cld
paddb
call
push
paddb
idiv
dec
(bad)
(bad)
dec
stc
pop
(bad)
mov
bound
mov
xlat
(bad)
std
retf
sub
(bad)
std
jg
xor
std
xchg
push
sbb
retf
icebp
stc
mov
pop
stc
lahf
xchg
cmp
push
push
out
std
jnp
fidivr
jmp
aas
repz
(bad)
sti
(bad)
out
ret
mov
(bad)
sti
pop
stc
cmps
(bad)
in
(bad)
sti
mov
(bad)
jmp
(bad)
pop
enter
call
call
adc
cld
pop
jg
(bad)
dec
call
push
iret
call
xchg
scas
pop
imul
std
div
fcos
lock
std
pop
push
inc
retf
push
iret
(bad)
(bad)
xlat
(bad)
cld
iret
call
cli
xchg
inc
adc
std
xlat
push
(bad)
scas
cli
adc
jg
aaa
(bad)
fdivr
cmc
jg
push
jmp
push
jg
inc
inc
(bad)
push
outs
std
mov
pop
(bad)
mov
pop
std
mov
(bad)
mov
pop
clc
mov
out
cli
mov
outs
clc
mov
das
std
mov
das
sti
mov
scas
clc
mov
lahf
(bad)
mov
(bad)
jmp
xchg
std
pop
repnz
(bad)
out
lahf
stc
mov
mov
pop
(bad)
in
jg
pop
call
(bad)
(bad)
(bad)
aas
(bad)
addr16
push
scas
cld
(bad)
(bad)
std
pop
adc
jg
pop
push
fild
push
cmp
pop
cld
int
stc
pop
cli
jg
(bad)
retf
mov
enter
dec
xlat
(bad)
std
scas
(bad)
mov
mov
dec
mov
(bad)
cli
mov
mov
call
mov
mov
(bad)
out
(bad)
(bad)
mov
(bad)
idiv
jge
(bad)
jg
out
call
xlat
fistp
call
fbstp
jg
pop
inc
lahf
repz
pop
(bad)
fcomp
jmp
lahf
cld
jg
pop
jg
dec
(bad)
mov
(bad)
push
idiv
loopne
cli
jg
pop
(bad)
jmp
scas
(bad)
jmp
sti
cmp
call
(bad)
out
cld
mov
outs
sti
mov
(bad)
mov
xlat
scas
(bad)
pop
call
(bad)
(bad)
retf
ret
(bad)
in
(bad)
sti
(bad)
cli
mov
jg
idiv
outs
cld
aas
clc
std
das
stc
jge
scas
(bad)
sti
scas
enter
sti
scas
mov
add
out
(bad)
jmp
fwait
call
idiv
call
mov
push
jg
xor
scas
movs
ja
push
push
mov
jbe
jg
pop
push
pop
lock
jmp
(bad)
jmp
mov
les
cli
out
xlat
(bad)
std
cmps
jg
jg
fistp
out
ja
(bad)
push
addr16
(bad)
cli
mov
idiv
std
addr16
dec
mov
sti
(bad)
cli
repz
(bad)
cli
mov
(bad)
(bad)
mov
loopne
int3
dec
xor
push
out
inc
pop
(bad)
adc
push
push
scas
dec
call
scas
(bad)
xchg
(bad)
mov
lahf
inc
xchg
stos
jmp
(bad)
mov
pop
gs
dec
(bad)
imul
inc
jg
cmps
(bad)
pushf
(bad)
jmp
dec
jg
push
sub
std
mov
(bad)
jmp
(bad)
(bad)
jg
scas
(bad)
std
mov
jmp
aas
std
mov
dec
cld
pop
mov
jmp
sar
(bad)
test
jmp
dec
(bad)
(bad)
lahf
in
push
call
ins
iret
das
and
ret
jmp
sti
repz
enter
leave
(bad)
cld
xor
dec
sti
jecxz
(bad)
jecxz
out
inc
pop
jge
sbb
dec
hlt
aaa
cld
sbb
xlat
in
pop
in
cmp
cmc
or
mov
mov
aas
in
idiv
jne
out
push
in
mov
lds
aas
clc
ror
call
xlat
xlat
jg
mov
push
push
push
cld
dec
retf
dec
sti
push
jp
(bad)
(bad)
in
fnstenv
cld
or
mov
fcos
idiv
cld
push
(bad)
loope
idiv
repnz
push
pop
cli
scas
stc
arpl
out
jg
scas
call
(bad)
out
jg
outs
clc
xchg
(bad)
out
jg
outs
cli
shr
(bad)
jg
(bad)
std
dec
(bad)
lods
jg
(bad)
std
dec
call
iret
(bad)
jge
in
std
das
inc
das
inc
(bad)
std
outs
std
dec
(bad)
clc
(bad)
std
xchg
loope
clc
pop
cmc
aaa
dec
xlat
(bad)
mov
(bad)
loop
(bad)
std
pop
xor
sbb
or
jg
dec
cld
fistp
lods
xchg
sub
std
mov
inc
push
(bad)
js
(bad)
jmp
idiv
cld
(bad)
fcomip
aaa
std
dec
jg
lahf
jno
cli
(bad)
inc
jle
mov
jle
jg
mov
(bad)
push
lahf
pop
sbb
aad
(bad)
std
pop
std
sub
out
mov
retf
lahf
stc
sar
neg
sti
push
cld
sar
sti
pop
call
test
sti
pop
cli
(bad)
dec
(bad)
sti
(bad)
xchg
jmp
and
mov
(bad)
xchg
mov
(bad)
std
mov
aam
inc
idiv
std
popf
out
fdivrp
mov
mov
(bad)
sti
cld
(bad)
idiv
push
xor
dec
aas
sti
mov
push
daa
mov
aas
jg
jg
or
jg
retf
inc
aas
enter
jg
(bad)
idiv
(bad)
mov
cld
jg
jle
lock
out
aas
clc
(bad)
sti
std
(bad)
out
aas
jmp
std
sar
das
(bad)
jae
icebp
(bad)
std
scas
cld
mov
pop
call
jg
(bad)
std
(bad)
adc
(bad)
std
mov
(bad)
std
jg
outs
jmp
out
jg
das
sti
das
(bad)
out
aas
repnz
cld
and
stos
mov
(bad)
sahf
aas
stc
dec
test
psubq
into
xchg
(bad)
ins
xchg
aaa
stc
(bad)
(bad)
std
mov
add
pop
movs
dec
jmp
jnp
cs
stc
mov
lahf
std
fbld
pop
cli
jae
out
jg
jl
jg
pop
sti
xor
out
(bad)
jmp
movs
mov
push
out
test
(bad)
jg
cmovp
in
push
pop
daa
jnp
iret
jae
icebp
push
cld
iret
dec
(bad)
std
inc
call
jg
pop
cmc
mov
in
jg
fcomip
stos
jmp
mov
(bad)
stc
fild
stc
and
(bad)
cmp
idiv
inc
fs
push
mov
add
pop
(bad)
pop
cli
in
lahf
mov
aas
leave
jbe
out
(bad)
std
mov
dec
neg
ja
sbb
stos
call
retf
push
jg
mov
sbb
aas
dec
cmp
mov
repnz
jg
std
cld
daa
(bad)
cmp
frndint
movs
xchg
mov
outs
or
mov
(bad)
cmc
push
pop
sti
(bad)
(bad)
mov
(bad)
fild
mov
inc
out
push
outs
jmp
mov
ds
pop
xchg
dec
jmp
(bad)
(bad)
sti
(bad)
(bad)
pop
sub
imul
push
xchg
and
sbb
outs
repnz
stc
std
(bad)
std
pop
mov
sbb
sar
stos
jmp
call
leave
(bad)
std
mov
sub
mov
(bad)
fnstcw
lock
stos
push
lahf
(bad)
mov
(bad)
(bad)
(bad)
add
push
jg
pop
repnz
cmp
jmp
jmp
jp
call
xlat
std
jne
(bad)
mov
call
repz
aad
cmc
pop
std
xlat
cld
push
jg
pop
cmc
xlat
in
mov
call
pop
xchg
xchg
inc
and
(bad)
outs
neg
xlat
stc
xor
jecxz
clc
mov
das
jl
sbb
sbb
xor
std
inc
mov
mov
add
add
jmp
cli
sar
pop
jecxz
std
xor
jmp
jp
imul
mov
(bad)
sahf
(bad)
leave
scas
icebp
imul
mov
cld
fnstsw
adc
mov
jecxz
sti
in
hlt
cmp
das
std
xor
ret
sub
aas
jp
hlt
cld
call
out
iret
(bad)
sahf
pop
cmp
cld
call
iret
pop
lock
sbb
push
(bad)
repnz
iret
dec
lahf
inc
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
scas
dec
inc
inc
push
js
mov
sbb
aam
dec
push
pop
pop
test
dec
push
call
cmp
pop
add
adc
int3
outs
inc
jo
dec
movs
loopne
(bad)
rcr
mov
push
and
cmp
(bad)
hlt
jecxz
js
not
neg
outs
lods
cs
fst
dec
and
jecxz
add
leave
mov
imul
imul
int3
sbb
add
add
imul
cli
fistp
or
out
and
sbb
cmp
add
repz
in
or
int
adc
lds
adc
jbe
pushf
cmp
sub
add
adc
lahf
or
pop
ret
mov
adc
out
fwait
sbb
mov
les
push
dec
fisttp
sbb
mov
and
add
pop
cmp
push
jmp
mov
rcl
adc
in
jecxz
stos
cmp
shl
sbb
add
xor
or
std
pop
pop
or
inc
add
dec
add
scas
mov
sbb
je
aas
mov
push
jbe
push
mov
retf
cmp
js
test
retf
clc
loopne
sbb
dec
lods
mov
test
movs
pop
test
add
push
inc
xchg
test
(bad)
cld
(bad)
hlt
inc
mov
ret
cmp
push
dec
sbb
in
scas
fisubr
ds
daa
jl
push
cmc
sar
or
retf
add
not
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
dec
inc
or
add
or
add
add
add
add
push
add
add
ret
dec
add
or
pop
jae
add
les
add
les
xchg
sub
sbb
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
daa
dec
inc
inc
push
js
movs
xchg
fild
inc
adc
mov
addr16
shl
movs
mov
jge
or
loopne
adc
jne
inc
add
mov
push
dec
jo
mov
mov
push
xchg
cmp
cli
test
mov
cld
jle
cli
push
add
adc
lahf
dec
or
sub
aad
fwait
mov
mov
mov
push
push
inc
fs
pop
pop
mov
add
pop
ins
loopne
nop
add
mov
sub
pop
push
call
or
push
or
or
jae
fldcw
add
cmp
cwde
ins
push
call
add
push
pop
or
cmps
xor
pop
aam
add
pop
stc
pop
es
fcomp
cwde
or
pop
mov
sbb
out
test
jo
mov
int
mov
lds
ins
in
test
psrld
imul
jg
jno
ret
mov
xchg
movs
sar
movs
pop
fwait
stos
stc
pop
popa
sub
cmp
mov
(bad)
nop
repz
pop
into
xchg
test
lods
outs
(bad)
enter
loop
or
mov
dec
popw
jno
imul
pusha
inc
gs
aad
sahf
in
push
fimul
mov
mov
pop
jno
popa
add
mov
jmp
les
mov
pop
cwde
xchg
bound
inc
add
inc
in
aad
mov
mov
shl
outs
in
addr16
js
pushf
and
aas
je
sti
daa
fcom
cmp
adc
rcl
jmp
sbb
cmp
xor
test
in
or
sbb
jecxz
popa
addr16
aam
push
mov
jmp
cld
mov
fwait
cwde
inc
dec
adc
and
dec
faddp
lods
out
ja
mov
pop
and
loope
cmp
retf
xor
mov
mov
cmp
daa
loope
jl
(bad)
dec
jecxz
shr
in
mov
(bad)
es
xchg
sti
imul
fsub
xlat
mov
addr16
call
cs
xchg
xor
aaa
retf
ja
mov
mov
dec
lods
push
cwde
mov
dec
out
xor
loope
(bad)
lds
bnd
xchg
call
cmp
sbb
or
mov
cdq
xchg
xor
and
cmp
outs
jl
push
sbb
sbb
sub
pop
or
push
or
mov
clc
pop
or
mov
scas
in
sahf
int3
add
ins
xor
ins
xchg
sbb
push
xor
out
sbb
dec
adc
stos
int3
add
xor
or
pop
add
mov
fcom
jmp
test
sahf
dec
push
mov
loop
popa
aad
push
cmp
aam
test
int3
adc
jb
sahf
push
addr16
lods
cs
xor
or
into
nop
ins
dec
or
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
xchg
dec
inc
inc
push
js
pop
xchg
out
outs
adc
(bad)
lahf
idiv
pop
jnp
mov
fimul
pop
out
dec
xor
mov
pop
inc
mov
or
mov
inc
add
mov
adc
and
mov
mov
fsubrp
jl
push
jns
cmp
daa
pop
repnz
push
in
jge
jbe
pop
push
inc
mov
es
enter
out
cmp
loope
es
or
out
push
jns
cmps
out
cmp
jb
push
xchg
js
push
jnp
call
pop
mov
(bad)
(bad)
ds
mov
icebp
test
sar
cmp
shr
dec
retf
lds
aaa
aaa
or
inc
xor
sbb
ins
adc
call
sub
push
sub
sub
inc
mov
nop
ins
jbe
xchg
or
out
jns
dec
movs
adc
sub
xlat
add
and
fdiv
js
mov
out
xchg
aas
fld
jl
mov
(bad)
fist
xor
pop
pop
mov
das
adc
lahf
fcmovu
sahf
and
cmps
cdq
repz
inc
adc
enter
outs
inc
adc
outs
dec
xchg
mov
mov
dec
pop
mov
les
sbb
repnz
dec
out
fnstsw
cs
xor
mov
out
mov
add
aaa
int3
xor
jbe
lahf
adc
add
(bad)
xchg
bound
lods
stos
jp
jmp
(bad)
daa
stc
cld
(bad)
fild
push
pusha
adc
xor
stos
aad
mov
jnp
cmp
sar
mov
cmp
xor
pop
jmp
xbegin
push
push
scas
pop
lods
push
cs
cmp
add
sbb
stos
aam
ja
sub
rcr
or
scas
and
xchg
aad
xchg
mov
js
mov
popf
fst
stc
aaa
jl
sub
xlat
add
adc
pop
xchg
sbb
stc
fadd
push
out
inc
sbb
jmp
stos
aad
cld
add
std
lds
push
xor
xor
add
mov
mov
xchg
sub
add
in
clc
icebp
movs
push
scas
jg
pushf
sahf
ds
adc
jne
mov
(bad)
ins
and
xor
xor
push
xlat
fldenv
add
push
lds
and
jecxz
xchg
dec
movs
push
out
imul
mov
add
inc
dec
mov
dec
mov
mov
mov
clc
jo
ss
inc
cmps
cmps
mov
ins
sbb
cmp
jecxz
jns
xlat
jmp
pop
(bad)
jecxz
out
in
inc
lahf
out
mov
cmp
jl
jle
pop
mov
sbb
nop
out
cmps
cmps
xor
inc
test
es
sub
cdq
mov
xchg
loope
iret
(bad)
pop
dec
es
mov
adc
pop
sub
mov
inc
imul
push
out
fcmovu
ficom
dec
and
pop
xor
dec
ret
loope
mov
popf
mov
gs
stos
jmp
mov
test
sar
nop
xchg
retf
outs
fild
push
aaa
stos
xchg
xor
into
add
pusha
pusha
nop
fnstenv
xchg
dec
in
scas
dec
mov
mov
mov
add
add
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
aad
inc
inc
push
js
lods
xchg
dec
dec
xchg
add
(bad)
jg
mov
mul
outs
mov
mov
and
or
shl
in
and
popf
and
test
dec
data16
btr
jae
mov
pop
jmp
out
lock
lahf
ret
repz
std
add
std
or
jo
mov
cli
mov
(bad)
adc
add
jmp
xor
push
or
dec
js
mov
inc
mov
add
loop
jbe
mov
mov
mov
test
repz
dec
pop
xchg
fxch
out
push
fs
cmc
jl
test
sub
pop
lahf
ja
add
jb
outs
ficomp
cmp
xchg
xchg
inc
cli
out
sub
enter
push
arpl
aas
dec
inc
jecxz
repnz
cmps
in
mov
cmps
call
outs
test
sbb
fsubr
mov
into
push
dec
or
mov
(bad)
mov
xchg
fwait
jge
pop
retf
enter
mov
and
outs
jle
add
jbe
push
cdq
xor
pop
mov
sbb
bound
push
xor
jmp
gs
daa
dec
into
mov
mov
mov
cmp
in
inc
push
xor
jnp
mov
out
cmps
push
sub
jae
xor
nop
pop
inc
push
sub
xor
ret
inc
dec
add
mov
inc
mov
cmp
xor
hlt
cmc
rcl
mov
ss
add
mov
fucomip
cmp
adc
ins
sub
jb
fistp
lahf
ds
dec
mov
sbb
mov
sbb
fs
aaa
pop
and
fmul
sub
hlt
cld
nop
gs
push
sub
mov
dec
dec
adc
add
jne
jno
(bad)
jge
push
or
inc
pop
outs
and
mov
fs
jmp
pop
and
or
(bad)
ror
sub
(bad)
mov
mov
xchg
test
sub
loope
in
iret
mov
in
push
sub
shl
add
cmps
fcmovnu
enter
jmp
push
xchg
ins
push
adc
add
push
out
inc
sub
rol
iret
dec
das
mov
sti
push
cmp
fisub
xchg
and
add
into
das
inc
inc
dec
inc
and
addr16
neg
jp
dec
icebp
jecxz
and
fcmovb
push
push
or
inc
call
(bad)
and
inc
xor
aaa
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
mov
inc
or
add
or
add
add
add
add
or
add
add
add
xchg
dec
inc
inc
push
js
in
popf
ja
fs
lahf
lahf
out
cmp
in
imul
leave
sub
and
mov
add
inc
and
mov
inc
mov
sbb
ins
(bad)
dec
fs
mov
sub
fs
mov
bound
xchg
xor
adc
xchg
mov
fstp
out
fsubr
jae
push
xor
cwde
add
xchg
sbb
aas
mov
fdivr
jns
out
cmp
sbb
adc
ds
shr
mov
fdivr
in
adc
pop
(bad)
jbe
mov
loope
ja
add
jg
stos
xchg
jp
mov
pop
pop
scas
cmp
test
mov
fdivp
(bad)
(bad)
in
arpl
js
dec
jl
sbb
dec
leave
and
sbb
mov
dec
sub
jbe
jmp
leave
repz
push
lods
dec
fldl2t
leave
pop
mov
or
in
retf
mov
push
pop
(bad)
jmp
push
lods
jge
sub
mov
int
fstp
adc
cmps
adc
arpl
repnz
(bad)
popf
adc
inc
cld
cmp
xchg
mov
jl
pop
test
movs
mov
sub
arpl
mov
div
imul
xchg
mov
mov
dec
mov
xlat
pop
ja
xor
or
dec
add
imul
sahf
fwait
js
mov
cmps
cmp
pop
loop
(bad)
(bad)
int
call
adc
sbb
repnz
std
mov
fcom
push
(bad)
(bad)
fsubr
jmp
fistp
cmp
sub
jge
idiv
adc
jecxz
xor
aas
pop
cwde
cdq
je
or
popf
cdq
repnz
stc
push
mov
sahf
pop
and
push
xor
cmp
xor
xor
pop
xchg
or
push
mov
mov
and
or
dec
cmp
out
cmp
jmp
fadd
not
mov
mov
(bad)
scas
mov
jb
and
(bad)
fs
je
mov
lods
push
ins
lods
xchg
cld
retf
mov
hlt
jg
xchg
add
cmp
mov
pushf
mov
dec
cmps
pushf
cmp
sub
cmp
js
push
repz
and
cmp
or
es
and
cmp
dec
inc
sbb
mov
push
fild
jmp
sub
js
pop
lds
mov
adc
sub
aaa
adc
pop
sbb
inc
sub
rol
sahf
(bad)
jmp
je
xchg
ins
sahf
pusha
imul
arpl
push
cmp
mov
and
xor
repz
mov
les
arpl
(bad)
xor
retf
xor
pop
jbe
fisttp
pop
and
cmp
sbb
sti
sti
jno
in
in
or
pusha
ret
ror
push
pop
pop
gs
stos
ds
js
jecxz
xchg
arpl
and
pop
movs
enter
aad
mov
hlt
add
push
nop
sbb
gs
push
and
test
sbb
dec
xchg
pop
cld
fsub
test
bnd
stos
mov
test
pop
sbb
xor
into
pop
cmp
aad
or
out
mov
sub
push
es
jge
cmp
pop
sub
bound
add
push
pusha
cld
push
add
push
push
in
dec
xchg
loop
sbb
call
repz
inc
pop
icebp
movs
clc
jbe
ja
cmp
xlat
xor
sbb
ret
inc
dec
jo
or
dec
mov
mov
sbb
loop
cli
ret
movs
mov
mov
fwait
adc
push
lock
stos
lock
out
pop
pop
pop
fbstp
fdivr
sbb
jmp
ja
sbb
jnp
je
fiadd
and
and
or
adc
bound
ins
mov
mov
jl
push
jno
gs
mov
dec
sbb
inc
pushf
popa
and
jmp
(bad)
push
pop
jg
jmp
mov
jl
ret
push
aas
ins
mov
loop
dec
hlt
mov
cmps
imul
mov
push
loopne
fdivr
sbb
ret
iret
js
add
nop
inc
sub
and
add
xor
add
add
push
sti
mov
push
dec
xchg
je
cmc
jp
sbb
test
repnz
pop
xchg
cli
add
jge
call
dec
cmps
dec
jecxz
mov
dec
lods
mov
push
mov
mov
js
retf
js
loope
mov
cmps
ror
in
or
push
stos
inc
mov
add
inc
sub
xor
jnp
stos
sub
loopne
xchg
sar
mov
fild
test
xor
cmp
daa
mov
sbb
mov
test
out
mov
xor
adc
or
call
jecxz
stos
inc
nop
adc
rcl
rol
inc
mov
or
and
inc
or
enter
mov
inc
aas
stos
dec
(bad)
xchg
mov
push
sub
fcom
pusha
lahf
mov
in
scas
sbb
pop
pop
xor
imul
das
repz
push
aas
inc
ins
daa
fmul
pushf
and
retf
jecxz
mov
jns
mov
cmps
call
xor
jmp
pop
mov
in
mov
std
rcr
in
(bad)
out
mov
sar
stos
aad
jecxz
adc
iret
iret
push
sub
mov
mov
inc
mov
xor
xor
imul
addr16
ror
or
adc
jns
add
push
jmp
jbe
or
mov
cli
(bad)
mov
fadd
jnp
add
mov
jle
and
mov
jo
inc
call
(bad)
div
adc
jp
aad
in
sub
(bad)
sbb
pop
mov
sub
retf
rol
retf
inc
dec
dec
sbb
ss
repnz
cmps
mov
imul
add
cli
pop
jl
shr
cmc
imul
fidivr
or
sahf
sahf
mov
gs
int
cmp
es
push
call
mov
popa
not
add
fstp
push
cmp
jno
mov
int3
test
pusha
mov
stos
fist
inc
cmp
rol
mov
into
cmp
xchg
adc
shl
in
pop
xor
iret
push
cmp
scas
fs
add
ins
test
sub
mov
sbb
mov
fs
loope
and
pusha
movs
lds
ret
bound
(bad)
xor
lods
cmp
in
or
int3
adc
outs
sbb
enter
jmp
inc
jg
ror
jns
xor
outs
loope
sbb
imul
mov
ret
xor
xor
loopne
cmp
mov
xor
arpl
mov
out
inc
and
mov
sbb
push
call
sub
pop
dec
sbb
and
ror
scas
loope
jb
frstor
ins
loope
movs
out
mov
and
cmp
cwde
pusha
rcl
bound
daa
mov
imul
fwait
adc
rol
(bad)
sbb
sbb
xor
xchg
xchg
sub
div
jne
arpl
push
shr
es
xchg
and
add
jae
jne
mov
sahf
jecxz
rcl
addr16
sahf
in
aad
hlt
jp
lods
mov
popa
dec
sbb
xor
push
fbstp
sbb
pop
ret
dec
add
mov
imul
pusha
sbb
ret
(bad)
mov
push
adc
mov
adc
popa
loop
push
add
std
inc
jp
sub
add
in
push
inc
mov
mov
movs
imul
movs
sub
lahf
lods
inc
retf
ror
cdq
cmps
fdiv
and
and
repz
arpl
es
push
jecxz
push
xlat
and
sbb
sbb
fisub
sbb
push
mov
pop
jle
sbb
loop
out
pop
in
idiv
jnp
cmc
hlt
int
or
dec
mov
jae
jecxz
iret
aas
(bad)
rol
xor
xor
xlat
inc
or
add
sub
shr
and
and
ds
sbb
jo
push
pop
pushf
sbb
mov
mov
sub
xchg
push
inc
mov
imul
cmp
cs
xor
dec
adc
push
retf
jb
sbb
xlat
test
shr
jge
mov
jecxz
mov
push
popf
mov
xchg
adc
sub
jne
imul
stos
int3
jo
ins
inc
xor
lods
xor
xchg
aam
ins
jo
(bad)
pop
loope
ins
pop
lods
scas
dec
out
pop
inc
in
jno
cmc
out
fist
cmp
xor
mov
call
and
(bad)
cwde
pop
jp
or
or
add
clc
push
test
loope
cmp
inc
xchg
ror
mov
push
ss
and
add
add
in
aad
pop
mov
iret
xchg
inc
sub
sbb
retf
inc
daa
scas
mov
mov
and
xchg
js
js
test
mov
jno
sub
retf
pop
push
and
inc
xchg
or
mov
sub
mov
push
push
xchg
sbb
push
adc
xor
adc
sbb
and
call
or
dec
hlt
mov
out
jo
xchg
push
fwait
jge
lahf
pop
jl
retf
inc
inc
cmc
xor
retf
jbe
xor
sti
sbb
test
sti
dec
dec
push
or
xchg
mov
nop
pusha
adc
jl
add
cmc
lea
retf
inc
loop
sub
and
xchg
mov
inc
and
ds
inc
lods
icebp
pop
dec
aaa
int
(bad)
jbe
xor
push
inc
mov
pop
repnz
mov
not
cli
add
loopne
pop
dec
mov
and
mov
test
cli
clc
scas
les
xor
call
or
pusha
xor
in
and
ins
shr
ror
mov
(bad)
das
jb
rol
mov
mov
aas
pop
fstp
pop
jbe
xchg
mov
adc
xchg
ret
jno
es
jge
cmp
push
pop
pop
test
adc
or
in
push
test
mov
cli
sti
xor
ret
cmp
add
aas
pop
or
or
dec
inc
and
add
imul
retf
(bad)
fs
rcl
fwait
push
retf
sti
push
shl
dec
pop
mov
fwait
cwde
push
or
ds
es
push
cmp
push
out
(bad)
imul
rcl
mov
jns
cdq
push
gs
out
jmp
ror
pop
dec
hlt
mov
mov
lds
sbb
mov
lods
ja
repz
dec
mov
sub
leave
mov
arpl
lods
mov
adc
retf
sbb
mov
gs
shl
jl
add
adc
ja
xor
leave
and
loop
call
int3
push
sti
dec
imul
and
sbb
inc
movs
rol
ja
cvtpi2ps
mov
mov
nop
jmp
xchg
jmp
xchg
xor
mov
in
jno
jecxz
pop
mov
mov
test
imul
or
mov
movs
call
(bad)
(bad)
rcl
pop
xchg
shl
xor
sub
and
rol
adc
lods
into
inc
iret
xchg
sub
mov
sub
cmps
xor
jl
mov
push
adc
loopne
and
sub
adc
scas
daa
mov
sbb
dec
or
sub
int3
test
retf
dec
cmp
adc
sbb
adc
xor
inc
sub
inc
add
enter
bound
retf
pop
(bad)
xor
jl
in
xor
or
xchg
xlat
fsubr
hlt
cwde
fidivr
(bad)
fdivrp
outs
adc
test
ror
inc
xchg
mov
test
mov
cmps
push
adc
dec
sub
movs
sbb
or
ins
cmps
adc
jno
pop
mov
push
adc
out
test
sbb
pop
add
cmc
cmps
les
mov
mov
stos
stc
hlt
mov
adc
fwait
adc
or
bound
ins
and
mov
and
add
mov
lods
mov
mov
outs
mov
sbb
adc
cmp
data16
std
shl
xchg
call
jmp
mov
cmp
repnz
test
pop
add
je
cmp
fwait
sub
not
inc
pushf
fwait
jmp
inc
push
mov
push
lea
and
ss
inc
xchg
inc
call
and
xchg
loopne
ds
pop
les
inc
cmp
(bad)
mov
sbb
scas
inc
dec
daa
jg
test
and
loopne
sub
(bad)
add
shr
es
xlat
retf
mov
and
add
push
test
shr
ins
xor
mov
movs
push
les
xchg
pusha
mov
dec
push
sub
adc
sbb
into
or
pusha
inc
mov
or
push
shl
in
(bad)
xchg
cwde
cdq
sahf
loopne
fst
mov
pushf
sub
cmp
xchg
dec
loope
dec
test
mov
out
fwait
inc
dec
or
dec
sub
rol
ins
xchg
retf
sahf
inc
shr
lods
xor
(bad)
shl
div
add
cmp
ret
lods
loopne
adc
(bad)
ins
xchg
(bad)
out
or
and
pop
dec
adc
pop
mov
inc
loopne
mov
xchg
sbb
add
call
adc
daa
push
jns
cmp
inc
(bad)
jne
mov
mov
push
jo
sbb
jecxz
and
jp
xchg
ret
push
(bad)
retf
mov
jecxz
push
sbb
adc
jnp
adc
pop
or
mov
mov
scas
mov
add
js
sub
or
aad
int3
inc
mov
aaa
std
mov
test
push
daa
enter
hlt
ins
xchg
adc
push
dec
imul
sbb
shr
sbb
sub
push
xchg
xchg
lea
loop
mov
push
nop
cs
add
jmp
arpl
jecxz
ja
jns
inc
into
leave
inc
idiv
mov
push
lock
xchg
and
adc
xor
jecxz
jge
daa
and
das
sbb
stos
fstp
scas
ret
cdq
in
pop
ss
xchg
test
mov
cmp
into
outs
mov
jno
popf
push
add
sbb
xor
dec
sub
js
and
std
and
mov
xchg
not
loope
mov
fidiv
pusha
add
add
shl
lods
xor
(bad)
test
in
test
lods
add
pop
test
adc
sbb
adc
inc
dec
mov
mov
rcr
mov
loopne
fbld
mov
push
mov
adc
sbb
sbb
xchg
cdq
push
add
adc
in
xchg
push
pop
cmps
adc
jmp
outs
aam
or
mov
xchg
mov
mov
inc
dec
test
pop
push
retf
inc
(bad)
bound
dec
faddp
sti
push
xor
popa
lods
ret
mov
add
rol
pop
and
sti
nop
mov
mov
retf
push
retf
and
or
xor
movs
aad
loope
push
neg
mov
cmc
bound
sub
adc
or
and
rcr
inc
mov
jnp
mov
pop
out
cmp
mov
cmp
push
jmp
cwde
adc
sbb
clc
mov
shl
ds
adc
stos
mov
mov
dec
inc
mov
sbb
inc
jl
test
gs
mov
call
xchg
add
push
es
fild
repnz
ret
dec
cmp
sub
sbb
add
movs
jne
and
mov
push
jecxz
into
and
nop
cli
call
xor
push
push
push
push
mov
jmp
and
mov
mov
pop
add
shl
and
jne
jne
aaa
mov
sbb
mov
mov
pop
fwait
mov
sbb
adc
cld
push
fwait
sub
push
or
lods
(bad)
sub
test
sub
and
data16
dec
mov
cmp
jecxz
jae
fstp
sbb
mov
inc
imul
or
push
jle
dec
pop
shr
popa
lock
or
pop
movs
loop
imul
sub
sbb
(bad)
fsub
bound
jb
stc
retf
cwde
icebp
adc
cmp
(bad)
or
mov
add
out
ret
xchg
repz
pop
xchg
push
push
shl
xor
mov
lods
xchg
mov
out
call
mov
mov
push
pop
xchg
push
add
mov
and
xor
pop
into
dec
arpl
lods
mov
test
jl
xchg
and
push
dec
xor
ret
sbb
and
jge
bound
ret
xor
adc
dec
popa
adc
or
fcomp
or
add
test
pop
test
aas
call
arpl
and
ja
test
add
(bad)
dec
xchg
test
mov
adc
test
or
adc
push
cmp
fnstenv
and
mov
in
inc
jns
stos
ins
outs
cmp
js
ins
ret
push
sbb
xor
int
cmp
jge
jo
test
and
dec
aam
adc
cmps
mov
push
shl
xor
fdiv
rcr
test
rcl
lds
dec
ds
gs
ss
(bad)
cmps
test
(bad)
nop
rol
(bad)
and
cmps
sub
pop
pusha
cmp
jns
out
fcmovu
ret
cmp
in
mov
xor
mov
and
test
jl
xchg
jp
imul
jge
add
inc
nop
movs
xor
or
enter
xor
mov
add
xchg
dec
sbb
jle
bound
add
fistp
scas
lea
fwait
popf
jae
out
test
and
and
xlat
pop
in
fwait
cmc
cmp
ret
adc
push
popa
mov
iret
pop
adc
ins
ss
and
and
sbb
loope
adc
adc
pop
xchg
pusha
mov
xchg
bound
nop
inc
jmp
and
jge
pop
dec
mov
inc
dec
shr
xchg
iret
movs
add
gs
or
jae
pushf
xchg
inc
or
pop
fisubr
adc
xor
es
sbb
add
test
cmp
adc
pop
sub
adc
and
cmps
pop
sub
fdiv
(bad)
mov
addr16
cmp
and
out
jno
popf
ja
and
rcl
inc
pop
cld
fdiv
mov
lds
mov
mov
(bad)
out
lods
push
(bad)
out
lock
push
and
cmp
shl
jecxz
push
out
mov
xchg
sbb
iret
int3
mov
xchg
lods
ins
xchg
hlt
js
sbb
outs
xchg
inc
leave
mov
(bad)
idiv
mov
jo
mov
cmp
push
jge
test
movs
and
ror
cmp
das
stos
mov
jne
or
jno
cmp
xlat
cmc
cwde
cwde
pushf
in
das
sub
dec
jo
xor
inc
dec
jp
inc
dec
adc
arpl
mov
cmp
jno
adc
repnz
shl
inc
adc
sbb
fmul
dec
popa
les
pop
imul
push
inc
adc
push
dec
and
cli
and
xchg
dec
cmp
enter
xor
cmp
lods
mov
out
xchg
mov
fwait
jg
sub
(bad)
aas
mov
pusha
icebp
das
pop
jle
cld
and
fdiv
pop
stc
retf
fidiv
retf
jae
pop
iret
jne
(bad)
mov
xchg
cmc
int
xlat
xor
mov
repz
ffreep
call
mov
aad
inc
jbe
and
cmp
sbb
sbb
jmp
mov
outs
lods
loopne
ins
ret
fdiv
sbb
and
inc
sub
jo
retf
xchg
das
mov
xor
push
pop
scas
sub
mov
iret
fild
add
add
pop
inc
and
retf
mov
push
dec
mov
jle
imul
mov
mov
xchg
push
sbb
int3
int3
jb
int3
sbb
push
cs
mov
mov
mov
cld
fisubr
inc
pop
jle
mov
into
nop
xlat
mov
movs
rcr
pop
jne
jge
aas
clc
mov
idiv
int
mov
in
cmp
sbb
add
sub
dec
dec
dec
push
lods
push
imul
push
mov
push
sbb
int3
dec
imul
mov
inc
add
mov
out
jnp
jnp
mov
mov
push
std
xor
pop
ret
imul
inc
mov
sub
dec
out
arpl
(bad)
scas
cs
outs
adc
mov
add
shr
cmp
shl
mov
mov
fs
call
jge
fisttp
mov
dec
ret
jne
lahf
cld
cli
xlat
(bad)
cmp
shl
in
push
scas
(bad)
scas
mov
mov
hlt
pusha
test
jo
cmc
scas
jg
ja
retf
gs
(bad)
retf
cmp
call
out
push
inc
fdivrp
(bad)
aaa
(bad)
cli
std
dec
mov
stc
add
push
(bad)
(bad)
pop
in
sahf
(bad)
(bad)
std
sti
jmp
cmps
fucomp
rcr
imul
pushf
jle
jns
movs
jb
cmp
mov
daa
or
ficomp
push
cmps
fnstsw
inc
dec
scas
pop
pop
dec
stos
mov
push
rol
pusha
xchg
mov
lock
(bad)
mov
out
push
sub
or
mov
sub
mov
push
les
ja
jbe
inc
jne
pushf
cli
(bad)
test
(bad)
fadd
or
or
sbb
daa
mov
jbe
ins
das
xchg
inc
movs
sbb
jmp
cld
mov
(bad)
pop
clc
lods
loope
add
shl
mov
imul
int3
mov
aad
mov
jp
aaa
push
pop
jp
sub
adc
cmps
jo
sbb
adc
jae
(bad)
cld
lock
retf
daa
dec
pushf
cmp
xchg
adc
jne
sub
pop
inc
push
jle
scas
xlat
retf
pop
and
push
mov
lea
adc
(bad)
xchg
shr
mov
and
ds
out
cmp
dec
sbb
lods
mov
sbb
clc
or
sub
addr16
iret
xchg
sbb
mov
push
iret
cmp
adc
cmp
cmps
and
inc
fcmovnb
out
jp
popf
cmp
pop
mov
test
jmp
out
push
stos
adc
xor
rcl
lahf
stc
(bad)
sti
jle
jecxz
pop
das
add
mov
mov
jo
int3
cdq
mov
in
sti
pop
(bad)
push
push
fisttp
out
fidivr
add
cmp
push
bound
aas
ds
call
pop
lods
push
jle
lods
leave
push
add
jb
sbb
fistp
cld
or
sbb
mov
pop
xor
in
aas
enter
pop
inc
sub
fidivr
lock
pop
cmps
(bad)
(bad)
lock
mov
das
adc
fstp
int
or
jb
loopne
mov
cmp
xor
or
dec
loop
test
and
mov
stc
call
lods
sbb
jge
jne
sbb
jge
push
sub
out
shld
push
inc
pusha
mov
stos
(bad)
cmp
pop
xchg
retf
aas
adc
fisub
dec
inc
mov
mov
out
pop
pop
pop
aas
aas
nop
mov
sbb
add
retf
xchg
inc
cdq
ja
push
mov
xchg
dec
dec
mov
mov
sub
call
scas
dec
mov
cmps
aad
inc
addr16
push
cwde
dec
xchg
es
add
lock
pop
das
xor
imul
call
cld
ret
lahf
mov
dec
mov
bound
in
repnz
and
mov
pop
out
loop
mov
xor
repz
ret
in
pop
xchg
xchg
into
pop
pop
je
cld
cli
shl
mov
call
xor
test
stos
loop
sar
stos
inc
aam
shr
cmps
xlat
outs
mov
push
pop
sub
ds
stos
arpl
inc
sub
mov
mov
shl
daa
dec
lock
mov
clc
clc
xchg
dec
lahf
jns
(bad)
mov
dec
add
js
xchg
push
repnz
mov
mov
repz
or
gs
and
iret
jae
pop
inc
out
mul
int3
int3
int3
in
mov
sbb
retf
cmp
in
lds
fild
mov
xor
sub
std
js
jno
sti
ret
stc
push
cmp
clc
xchg
retf
jecxz
jle
iret
jne
(bad)
shr
mov
(bad)
lds
pop
mov
imul
imul
(bad)
das
test
imul
jg
or
jmp
sti
fdivp
pop
fwait
out
mov
mov
rol
dec
sbb
pop
mov
jg
push
aas
hlt
mov
(bad)
pop
(bad)
stc
inc
push
mov
ret
pop
retf
nop
jmp
mul
imul
fistp
mov
xchg
repz
ja
adc
mov
das
jecxz
sti
fxch
ds
in
mov
or
and
sbb
shld
mov
out
mov
mov
mov
cmp
push
mov
push
sbb
outs
push
jnp
sub
push
jl
push
movs
mov
push
mov
push
out
mov
sbb
mov
lahf
jl
test
or
(bad)
lock
pop
frstor
ret
sbb
jmp
cld
out
(bad)
imul
neg
dec
add
hlt
mov
pop
pop
cmp
push
jmp
pop
xchg
in
(bad)
lea
shr
jbe
movq
ret
out
jns
fldenv
repz
rol
sar
(bad)
xor
jge
or
(bad)
mov
outs
jg
sbb
rcl
dec
mov
(bad)
call
jl
ins
xor
adc
adc
dec
sub
mov
cmps
xor
adc
repnz
jnp
jmp
and
cmp
jnp
repz
pop
mov
aam
aam
setbe
daa
ret
xor
mov
inc
in
cmc
jp
jmp
scas
or
(bad)
cld
mov
mov
jmp
cld
dec
and
mov
fistp
dec
les
jnp
int
ins
ss
xchg
jb
dec
mov
mov
out
sub
es
xor
outs
test
ret
mov
imul
cli
stos
iret
pop
out
std
iret
shl
movs
adc
out
jmp
test
add
retf
daa
aas
stc
leave
neg
jcxz
mov
pop
je
call
adc
rcr
sbb
dec
xchg
in
mov
in
fidivr
outs
(bad)
loope
add
inc
push
movs
pop
or
es
(bad)
or
mov
stos
xchg
push
sbb
pop
cmp
call
fdivr
enter
out
out
add
inc
push
arpl
add
add
dec
inc
scas
inc
pusha
cmp
add
mov
inc
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
jo
inc
inc
push
js
xchg
xchg
int
push
popa
adc
lahf
idiv
jmp
push
or
std
add
fisttp
aad
inc
inc
mov
lea
inc
nop
nop
push
fwait
mov
loope
inc
and
cdq
or
in
cmp
fdivr
out
cmp
mov
mov
cmp
cmp
jae
sbb
dec
push
les
out
jbe
sbb
or
stos
stos
inc
cmp
sub
inc
push
add
inc
lods
fiadd
pushf
cmp
imul
and
in
rol
pop
inc
inc
sbb
mov
cli
mov
push
fst
cwde
ret
fdivr
mov
add
mov
sub
mov
inc
mov
in
mov
mov
and
xor
rol
out
outs
pop
jns
(bad)
dec
jo
sbb
ror
bound
mov
add
adc
in
pop
adc
xor
dec
fstp
jbe
(bad)
jbe
or
(bad)
data16
mov
in
adc
inc
repz
inc
push
adc
sub
cmc
test
push
lods
fldenv
mov
pop
mov
out
cmp
gs
and
ins
or
or
sbb
or
mov
imul
add
hlt
jnp
jge
(bad)
mov
imul
inc
jnp
in
shl
stos
stc
scas
out
and
scas
fincstp
mov
je
lds
fsubr
cmps
pop
cmp
add
and
loope
dec
leave
or
popf
xor
jmp
add
cmps
sar
cmc
int
hlt
mov
inc
in
mov
repnz
out
mov
lods
add
scas
cwde
jbe
and
stos
mov
(bad)
mov
add
or
push
and
jmp
into
dec
sub
xor
mov
iret
stc
rcr
mov
mov
fimul
into
pop
nop
test
dec
imul
push
sbb
in
sub
mov
cld
pop
fsubr
ds
mov
push
fcmovnbe
sbb
add
push
xor
jb
cmp
dec
mov
shl
mov
sbb
sbb
stos
inc
sub
movs
add
add
dec
inc
dec
inc
scas
inc
pusha
xor
add
or
or
add
or
add
add
add
add
or
add
add
repz
add
or
pop
jae
add
adc
add
adc
add
add
inc
dec
inc
add
mov
jl
push
xchg
add
add
arpl
dec
add
jp
add
add
add
xor
add
pusha
add
cmp
xchg
pop
lds
add
call
js
pushf
xchg
xor
push
adc
jg
mov
xlat
cwde
not
xchg
push
cmp
cmp
jne
outs
inc
mov
aas
inc
mov
and
jle
push
sbb
sbb
mov
xchg
cwde
mov
imul
pop
hlt
emms
mov
pop
xchg
dec
push
cmps
sbb
imul
sar
scas
outs
iret
repz
imul
sub
clc
lea
in
dec
xor
loope
int
xchg
jo
adc
xchg
fcmovb
add
xor
jmp
inc
mov
pop
mov
hlt
cs
inc
or
mov
mov
add
imul
movs
sub
iret
daa
xchg
jnp
jl
sbb
loop
dec
mov
and
(bad)
push
xor
mov
cmp
ror
data16
arpl
fwait
push
add
xor
inc
loop
and
or
sbb
arpl
mov
ins
adc
pop
sub
dec
test
cli
pop
iret
dec
cmps
pop
sbb
pop
sbb
sbb
dec
jmp
push
sub
sub
test
jno
icebp
loopne
hlt
shl
iret
jp
aaa
or
je
daa
sub
mov
xchg
arpl
sbb
(bad)
pop
push
adc
jle
loope
clc
jle
das
sti
sub
ror
push
retf
stc
inc
xor
push
lods
lds
add
leave
mov
or
jns
call
pop
test
sbb
pop
adc
or
push
jge
adc
xchg
gs
sbb
push
mov
pusha
jns
xchg
(bad)
push
jle
jecxz
in
jo
and
(bad)
xchg
mov
push
add
popa
scas
xchg
jecxz
(bad)
xchg
gs
cmp
cmp
cs
movs
push
(bad)
cli
pop
cli
xor
xor
fwait
pusha
add
add
dec
inc
dec
inc
scas
inc
pusha
add
add
or
or
add
or
add
add
add
add
or
add
add
jp
add
add
pop
test
xchg
pop
push
dec
adc
aas
pop
inc
and
inc
add
or
and
sub
and
xchg
push
and
push
inc
(bad)
or
xchg
add
xor
add
xchg
and
test
nop
mov
pop
xchg
and
push
out
jae
into
sbb
lahf
retf
xor
push
jbe
imul
xchg
inc
scas
pop
dec
mov
(bad)
sbb
loopne
adc
adc
loopne
or
dec
xchg
daa
sbb
add
jmp
inc
pop
pop
xor
ficom
add
pop
test
adc
dec
and
mov
sub
(bad)
jb
and
test
cmc
ficomp
pop
pusha
cld
sbb
push
mov
add
sub
dec
in
jae
arpl
sbb
test
in
fimul
push
movs
dec
jecxz
or
(bad)
(bad)
rcr
cs
mov
add
repz
std
jno
int
mov
sar
ss
jns
mov
mov
loop
aaa
and
sbb
addr16
mov
mov
xor
jge
mov
add
jge
jmp
mov
mov
push
scas
scas
xor
int
add
jbe
retf
cmp
add
sub
mov
sbb
call
mov
shrd
pop
push
movs
push
sub
movs
dec
push
lods
xchg
jmp
int
scas
inc
and
ins
call
jmp
cmp
imul
pop
mov
std
inc
sub
add
pop
ret
fwait
out
xor
and
sub
mov
sub
call
xchg
xor
dec
cdq
rsqrtps
add
push
into
cmp
iret
jp
dec
and
retf
jle
hlt
test
pop
xor
ins
lods
ss
cmp
in
xchg
xor
retf
sub
lds
jmp
xlat
mov
dec
aad
in
pop
scas
cmp
test
jge
outs
push
push
push
pop
inc
inc
loope
jle
imul
retf
mov
imul
cmps
out
push
mov
aad
xchg
push
push
retf
pop
ret
scas
pop
or
push
inc
xchg
sbb
ret
nop
dec
sbb
std
stc
dec
mov
push
mov
lods
xchg
popf
xchg
sub
lahf
lahf
xchg
jmp
pop
cmp
cmp
jg
scas
push
add
rcr
add
popf
(bad)
(bad)
repnz
into
pop
div
pop
add
and
add
int3
jle
sbb
adc
mov
inc
cmp
xor
add
push
dec
and
dec
inc
dec
inc
scas
inc
pusha
sub
add
add
add
add
and
add
add
call
add
add
and
add
add
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
xchg
ja
ja
ja
ja
ja
ja
add
mov
mov
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
clc
clc
mov
clc
clc
(bad)
dec
add
jbe
xchg
clc
mov
add
ja
enter
(bad)
(bad)
(bad)
(bad)
clc
clc
test
ja
enter
mov
jg
enter
xchg
(bad)
(bad)
(bad)
clc
clc
test
ja
call
(bad)
(bad)
push
add
mov
clc
mov
add
js
mov
(bad)
(bad)
clc
push
add
mov
clc
mov
add
mov
(bad)
(bad)
(bad)
push
jg
add
js
js
call
(bad)
imul
test
call
(bad)
(bad)
(bad)
(bad)
jg
add
mov
mov
enter
mov
jg
mov
(bad)
(bad)
(bad)
(bad)
clc
out
test
call
mov
add
clc
vpmacssdd
(bad)
test
mov
mov
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
(bad)
(bad)
(bad)
(bad)
dec
(bad)
clc
test
mov
mov
jg
(bad)
clc
clc
vpmacssdql
ja
ja
ja
ja
ja
ja
js
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
inc
add
ja
add
jns
add
push
add
jge
add
test
mov
mov
mov
test
mov
ret
add
xchg
pop
add
mov
ret
add
mov
mov
lds
arpl
lds
arpl
retf
xchg
data16
cwde
gs
fwait
gs
xchg
imul
leave
xchg
push
add
cdq
ins
add
popf
outs
add
sahf
imul
(bad)
movs
push
aad
ins
add
scas
outs
add
mov
jne
fldcw
jno
fldcw
js
fnsave
jbe
fbstp
jns
in
mov
jo
loopne
je
in
jae
loopne
jp
in
js
in
jg
in
ret
hlt
sar
mov
add
mov
add
mov
mov
lods
add
mov
add
in
mov
jmp
add
ror
lock
mov
not
add
ret
out
xchg
add
les
add
leave
xchg
add
(bad)
cdq
add
leave
cdq
add
into
cwde
add
iret
popf
add
rcr
repnz
sahf
add
into
mov
add
aad
add
aam
add
(bad)
movs
add
fsub
add
fsubr
add
fsubr
add
fidiv
add
(bad)
add
in
add
loope
add
out
add
rol
retf
leave
mov
int3
retf
int
retf
xlat
rol
out
fadd
clc
out
add
jmp
iret
add
out
add
in
in
add
jmp
add
repnz
add
out
lock
lock
add
icebp
icebp
add
repz
add
hlt
repnz
repz
add
hlt
hlt
add
cmc
test
div
add
stc
test
idiv
add
idiv
add
clc
clc
add
cli
std
add
cld
inc
clc
clc
stc
add
cld
sti
add
sti
cld
add
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
outs
cmp
cmp
cmp
cmp
cmp
cmp
add
inc
test
inc
test
test
test
cmp
test
mov
test
xchg
xchg
cmp
test
js
jns
jns
js
xchg
jl
jns
jns
test
test
or
or
or
add
add
add
jo
jo
jo
xchg
jns
cmp
test
push
push
pi2fd
or
or
js
mov
mov
cmp
test
pop
pop
pop
pop
pop
pop
or
js
jo
jo
jo
xchg
cmp
test
and
sbb
sbb
or
mov
xchg
test
test
and
and
and
and
sbb
js
mov
mov
cmp
test
and
and
and
and
and
sbb
jo
jo
jo
test
cmp
test
sub
sub
sub
sub
sub
and
mov
test
add
sub
sub
sub
sub
sub
js
jo
jo
jo
test
cmp
test
cs
cs
das
cs
mov
mov
cmp
test
cs
xor
xor
xor
sub
jo
jo
jo
mov
add
cmp
inc
cmp
cmp
cmp
cmp
ss
mov
test
cmp
test
pop
pop
push
dec
inc
inc
inc
cmp
js
jo
jo
jo
mov
cmp
test
imul
push
dec
js
mov
mov
cmp
test
ins
imul
pop
dec
js
jo
jo
jo
mov
cmp
test
ins
ins
push
pop
dec
js
mov
mov
cmp
test
push
push
push
push
push
dec
dec
dec
dec
dec
test
jo
mov
add
inc
test
test
test
test
test
add
test
mov
mov
test
test
inc
outs
jo
outs
outs
jo
outs
outs
jo
jo
outs
outs
jo
jo
jo
jo
outs
outs
jo
outs
cmp
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
jae
add
add
cmp
cmp
cmp
cmp
cmp
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
adc
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
jle
mov
dec
test
dec
test
dec
test
dec
test
dec
mov
dec
xchg
dec
test
dec
test
dec
jne
xchg
add
add
add
add
mov
(bad)
mov
lods
mov
(bad)
mov
stc
idiv
mov
lods
mov
(bad)
mov
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
out
(bad)
cld
cld
cld
(bad)
stc
std
(bad)
push
clc
cli
(bad)
cli
(bad)
(bad)
push
cld
(bad)
push
stc
cld
push
stc
sti
(bad)
clc
std
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cli
(bad)
(bad)
(bad)
stc
(bad)
(bad)
push
sti
(bad)
push
div
push
idiv
push
idiv
push
div
push
cmc
hlt
push
repz
repnz
icebp
lock
icebp
icebp
push
icebp
icebp
push
icebp
icebp
push
repnz
sti
stc
idiv
mov
add
add
div
icebp
(bad)
sti
stc
idiv
cli
sti
cld
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
jmp
out
push
repz
push
idiv
push
clc
stc
push
idiv
push
div
push
hlt
hlt
push
repz
lock
in
out
out
(bad)
in
in
in
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
clc
div
(bad)
sti
stc
idiv
mov
inc
(bad)
mov
jl
(bad)
mov
jnp
push
jns
push
js
push
jbe
push
out
hlt
cmc
idiv
retf
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
hlt
cmc
push
repnz
out
out
out
(bad)
in
in
in
(bad)
in
in
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
mov
mov
ror
(bad)
mov
mov
mov
xchg
xchg
mov
test
mov
out
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
cmc
cmc
(bad)
out
lock
(bad)
in
in
in
(bad)
in
out
out
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ror
ret
mov
ret
(bad)
inc
(bad)
fs
mov
mov
ret
lea
ret
mov
ret
inc
mov
rol
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
idiv
push
div
push
icebp
icebp
(bad)
out
out
out
(bad)
out
out
lock
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
ret
lea
(bad)
xchg
imul
(bad)
xchg
imul
(bad)
xchg
push
inc
xchg
inc
xchg
gs
xchg
fs
xchg
arpl
les
out
hlt
div
push
div
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
idiv
push
div
push
repnz
lock
out
lock
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
lds
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cdq
ins
dec
cwde
imul
cwde
imul
cwde
push
leave
cwde
imul
(bad)
xchg
pop
jmp
out
push
idiv
push
idiv
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
leave
xchg
arpl
int
outs
dec
sahf
outs
dec
sahf
outs
dec
lahf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
outs
dec
popf
ins
dec
popf
ins
dec
cwde
gs
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
into
fwait
gs
mov
jb
shl
jae
shl
jb
shl
jb
shl
jno
rcr
out
hlt
cmc
stc
(bad)
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
shl
jne
aad
jne
aad
jne
aad
jne
aad
jne
(bad)
test
call
test
call
test
call
test
call
test
call
movs
ins
jmp
out
push
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
mov
jle
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repz
sti
stc
idiv
xlat
cmps
imul
fisubr
ja
fldcw
js
fldcw
js
fldcw
ja
fldcw
jo
out
out
hlt
idiv
(bad)
clc
clc
clc
push
div
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
inc
nop
addr16
(bad)
gs
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
fsubr
jbe
fnsave
jns
fnsave
jp
fnsave
jp
fnsave
jp
fnsave
jb
out
out
repz
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
dec
cdq
imul
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
div
repnz
sti
stc
idiv
jecxz
mov
call
mov
jp
fbstp
jp
loopne
jp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
jnp
loopne
je
out
out
hlt
idiv
push
clc
stc
push
idiv
push
clc
clc
push
idiv
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
call
cmps
ins
call
movs
imul
clc
stc
(bad)
sti
stc
idiv
mov
add
add
div
hlt
(bad)
sti
stc
idiv
out
xchg
push
(bad)
(bad)
in
iret
mov
jmp
ret
mov
in
cmp
mov
cmp
mov
jg
in
js
out
out
cmc
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
(bad)
outs
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
std
(bad)
sti
stc
idiv
jmp
loopne
push
(bad)
push
fsubr
(bad)
out
shl
(bad)
in
int
(bad)
jmp
xchg
(bad)
jmp
jmp
out
push
idiv
push
clc
stc
push
clc
clc
push
clc
stc
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
jmp
mov
jo
idiv
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
jmp
push
loop
push
fbstp
push
fldcw
push
(bad)
movs
push
aam
(bad)
out
rcr
in
retf
out
out
hlt
idiv
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
in
ret
in
mov
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
cld
(bad)
sti
stc
idiv
in
into
mov
(bad)
cli
jmp
mov
push
fbstp
push
fld
push
(bad)
sahf
push
rcr
jmp
out
push
idiv
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
rol
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
cld
cld
sti
(bad)
sti
stc
idiv
loop
mov
out
cdq
jmp
lds
jmp
les
in
xchg
jmp
ret
xchg
jmp
ret
in
(bad)
jmp
ror
cli
sti
cld
(bad)
cli
sti
cld
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
dec
retf
retf
push
clc
stc
push
clc
stc
(bad)
sti
in
(bad)
sti
in
push
clc
stc
(bad)
sti
stc
idiv
mov
add
add
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
sti
stc
idiv
mov
add
add
div
repz
clc
stc
cli
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
clc
stc
push
clc
stc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
clc
push
clc
stc
push
clc
stc
push
clc
stc
push
clc
stc
(bad)
clc
stc
cli
(bad)
sti
stc
idiv
mov
add
add
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
retf
int
retf
int3
retf
int3
retf
retf
leave
dec
retf
int3
retf
retf
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
leave
(bad)
dec
add
and
add
or
(bad)
(bad)
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
xchg
jns
(bad)
(bad)
sar
mov
push
add
add
xchg
mov
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
test
dec
add
push
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
add
and
add
adc
add
add
add
add
outs
jb
ins
ins
dec
popa
imul
jb
gs
ins
add
and
