push
mov
push
mov
add
pop
ret
xchg
push
mov
push
push
and
sub
mov
mov
sub
mov
mov
add
mov
jmp
mov
jmp
mov
jmp
mov
call
mov
jmp
lea
mov
cmp
jbe
jmp
mov
mov
mov
mov
call
sub
mov
mov
xor
mov
lea
mov
mov
mov
mov
mov
call
sub
mov
cmp
jne
jmp
mov
lea
pop
pop
pop
ret
mov
xor
mov
mov
add
mov
cmp
jne
jmp
mov
lea
mov
lea
mov
mov
call
sub
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
cmp
je
jmp
nop
push
mov
sub
mov
movss
movss
mov
or
mov
ucomiss
ja
mov
xor
add
pop
ret
mov
movsd
mov
cvtss2sd
addsd
cvtsd2ss
sub
movss
add
mov
mov
mov
mov
call
sub
mov
jmp
nop
push
mov
push
push
and
sub
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
call
mov
mov
mov
add
mov
mov
mov
mov
xor
mov
mul
mov
cmp
jb
jmp
mov
add
mov
and
mov
mov
jmp
mov
xor
add
mov
mov
add
mov
jmp
mov
mov
xor
xor
div
mov
mov
mov
mov
mov
mov
call
sub
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
movzx
and
mov
mov
xor
mov
mov
sub
mov
sbb
mov
mov
mov
jb
jmp
call
mov
call
lea
pop
pop
pop
ret
push
push
mov
pop
add
pop
mov
mov
mov
jmp
ud2
push
mov
push
push
push
and
sub
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
add
add
mov
jmp
lea
pop
pop
pop
pop
ret
mov
mov
and
add
mov
mov
mov
mov
mov
mov
movzx
mov
mov
mov
mov
mov
call
sub
jmp
mov
cmp
jb
jmp
mov
mov
mov
mov
mov
xor
mov
sub
sbb
mov
mov
jae
jmp
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mul
mov
mov
mov
mov
sub
cmp
mov
mov
mov
jne
call
mov
lea
pop
pop
pop
pop
ret
mov
mov
mov
mov
mov
mov
mov
mov
movzx
movzx
sub
mov
mov
mov
mov
mov
mov
lea
pop
pop
pop
pop
ret
data16
push
mov
push
and
sub
mov
mov
mov
mov
movzx
cmp
mov
je
jmp
mov
lea
pop
pop
ret
mov
mov
jmp
mov
mov
not
not
mov
mov
add
mov
mov
add
mov
mov
call
sub
mov
jmp
mov
mov
mov
xor
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
cmp
jae
jmp
nop
push
mov
sub
mov
mov
mov
call
add
pop
ret
nop
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
adc
sub
sbb
mov
mov
mov
mov
jae
jmp
mov
mov
sub
mov
sub
mov
mov
add
mov
mov
movsx
cmp
setne
and
mov
jmp
lea
mov
mov
mov
mov
xor
xor
mov
add
mov
mov
mov
jmp
jmp
call
mov
mov
mov
xor
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
sub
mov
mov
cmp
mov
jne
jmp
mov
cmp
jae
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
movsx
movsx
cmp
jne
jmp
mov
mov
add
mov
mov
xor
mov
sub
sbb
mov
mov
mov
mov
add
mov
mov
mov
mov
add
adc
mov
mov
mov
add
mov
xor
xor
or
mov
je
jmp
mov
mov
not
mov
not
mov
mov
mov
mov
mov
add
mov
mov
xor
mov
mov
mov
movzx
cmp
jne
jmp
jmp
jmp
mov
add
mov
mov
mov
movsx
mov
cmp
jne
test
jne
jmp
jmp
mov
lea
pop
pop
pop
pop
ret
mov
xor
mov
jmp
jmp
mov
jmp
mov
xor
mov
jmp
mov
cmp
je
jmp
mov
cmp
jne
jmp
mov
mov
mov
cmp
ja
jmp
nop
push
mov
push
and
sub
mov
mov
mov
xor
mov
call
mov
mov
add
adc
mov
mov
mov
add
cmp
mov
jne
jmp
mov
mov
mov
lea
pop
pop
ret
mov
xor
mov
jmp
mov
sub
mov
jmp
mov
mov
xor
cmp
jae
jmp
pop
inc
nop
adc
fld
or
sbb
mov
mov
shl
jae
inc
adc
cmp
push
sbb
adc
shl
ds
mov
shl
mov
popf
pop
hlt
cli
sbb
and
xchg
mov
not
pop
hlt
aas
inc
(bad)
out
jmp
push
xchg
push
arpl
xchg
and
mov
push
inc
cmps
push
(bad)
sub
mov
or
jae
scas
(bad)
xchg
lock
aam
dec
inc
das
xor
inc
mov
inc
jno
data16
movs
mov
lds
leave
icebp
dec
xchg
out
not
pop
dec
or
jecxz
aam
xchg
hlt
(bad)
pushf
popf
mov
jge
xchg
addr16
fnstenv
mov
stos
sbb
mov
and
hlt
and
stos
fadd
jns
xchg
jns
adc
xchg
enter
ja
cmps
std
aaa
jnp
xchg
icebp
dec
sbb
adc
retf
pusha
icebp
add
pushf
adc
out
push
repz
mov
dec
adc
dec
test
stos
loope
out
outs
fwait
push
xor
je
mov
pop
int
test
mov
in
mov
or
sar
rol
in
and
push
(bad)
jne
push
or
outs
hlt
out
adc
xchg
mov
push
adc
aad
push
aas
mov
in
pop
mov
and
lods
pop
mov
pop
adc
nop
xchg
aad
adc
push
out
push
adc
mov
cmps
out
stos
push
fidiv
mov
pop
gs
jge
jg
pop
xlat
test
sub
popf
(bad)
ds
push
and
into
add
in
int3
xor
and
inc
enter
pmaxsw
cmp
stos
cmps
cdq
imul
mov
jle
pushf
call
pop
dec
sub
jge
xchg
imul
mov
popf
or
pop
jbe
outs
or
addr16
adc
pop
aad
jp
push
(bad)
cmp
adc
cmp
sub
(bad)
sbb
loopne
cwde
sbb
in
dec
cmps
dec
int3
cmp
gs
pop
lock
inc
ins
ins
test
gs
ins
sub
scas
mov
dec
xchg
xor
xor
imul
or
dec
mov
push
cmp
inc
mov
bound
cli
mov
add
nop
shl
ror
into
xor
lds
add
unpckhps
add
sub
inc
push
in
xor
pop
mov
and
aaa
and
xchg
icebp
retf
jns
mov
pop
xor
cs
std
mov
imul
mov
pop
jmp
dec
iret
push
adc
(bad)
pop
inc
xchg
inc
inc
push
cmp
jae
stos
jnp
lahf
xor
mov
mov
cmps
xor
add
(bad)
xlat
in
or
add
stos
inc
jne
push
inc
clc
push
jmp
and
xchg
enter
dec
or
fdivp
out
mov
xchg
push
test
out
add
test
cs
mov
mov
ret
add
hlt
loope
cmp
inc
mov
dec
xor
dec
mov
or
push
or
pop
mov
ja
lea
dec
mov
out
and
int3
pusha
pop
adc
fdivp
mov
cmc
sub
mov
ds
pop
cwde
push
mov
jmp
and
mov
sahf
lea
aaa
xor
lahf
mov
cmp
out
inc
pop
clc
(bad)
lds
mov
icebp
push
add
and
inc
xor
lds
test
xchg
pop
out
mov
int3
ins
fsub
jg
inc
ror
cwde
cmp
dec
(bad)
gs
clc
push
fwait
mov
xchg
enter
imul
adc
jnp
rol
sub
jecxz
push
test
cmps
mov
or
jecxz
sbb
ins
pop
fst
nop
in
mov
jge
xor
cli
mov
mov
outs
leave
add
cmps
xor
sti
stos
sub
das
call
cmp
std
movs
push
xor
test
xchg
(bad)
mov
xor
pop
mov
or
retf
in
xor
fsub
mov
push
out
lahf
loope
adc
adc
and
stos
xchg
jb
xchg
jmp
lods
jnp
mov
cmps
and
mov
jp
xor
and
in
sbb
out
mov
cmc
mov
in
sub
add
ds
cmp
cmc
xlat
daa
fstp
dec
addr16
arpl
sbb
pop
shufps
enter
mov
xor
push
pop
scas
cld
stos
fdiv
loope
jo
and
fwait
mov
or
(bad)
jmp
lods
mov
adc
inc
cmps
movs
lods
push
addr16
xchg
fist
sub
fs
cli
test
sar
loop
rcl
movs
popa
test
jno
xor
push
or
jmp
stc
aas
dec
(bad)
stos
xchg
nop
xor
mov
outs
icebp
leave
mov
out
xchg
xchg
call
push
fsub
loopne
or
jmp
mov
inc
mov
adc
dec
(bad)
stos
xchg
fcomp
int3
pop
ficomp
ins
cs
ja
sbb
pop
pop
pop
sti
and
dec
cmp
or
int3
mov
aam
cld
mov
xchg
(bad)
jb
cmp
pop
jbe
cmps
add
sbb
jmp
adc
stos
lock
mov
pop
es
inc
add
jg
dec
push
mov
test
leave
lods
leave
jae
lahf
outs
loope
ret
jno
mov
pusha
retf
retf
test
lahf
sub
inc
mov
ds
push
lock
imul
pusha
mov
add
cmps
(bad)
std
pop
mov
test
retf
loope
jl
aam
mov
sbb
shl
aaa
jmp
enter
mov
mov
or
dec
adc
fldcw
imul
call
ret
fist
nop
add
xor
push
call
inc
mov
ret
pop
or
sub
daa
cs
cmp
imul
std
bound
sahf
fstp
push
cmp
mov
jmp
xor
es
pop
jmp
out
push
push
or
lea
and
cdq
fnsave
(bad)
das
xor
cmp
(bad)
and
adc
push
sbb
repnz
mov
jmp
je
mov
jmp
repnz
xchg
stc
push
std
test
adc
mov
(bad)
push
xor
cmp
inc
push
aas
mov
out
sbb
imul
ins
adc
loope
cli
mov
imul
aaa
dec
(bad)
xchg
inc
inc
stos
aad
shr
int
lods
jbe
add
mov
dec
xchg
adc
mov
push
mov
cmp
add
shl
(bad)
movs
scas
mov
push
pop
xchg
cmp
repnz
scas
dec
loope
adc
out
call
push
aas
in
pop
push
pop
inc
push
sub
call
(bad)
jae
in
cdq
in
retf
out
js
lock
cmp
dec
or
xor
xor
xchg
ret
cld
xchg
pop
pmulhuw
sub
mov
or
and
push
(bad)
cmp
push
mov
mov
or
inc
popa
push
xchg
and
pop
sub
xchg
fs
jno
lds
movs
cmp
mov
adc
loopne
cmp
xchg
std
out
test
test
shr
jo
xor
xchg
sti
adc
dec
cs
std
mov
pusha
nop
mov
sub
loopne
aad
push
xchg
cmps
pop
std
ficomp
dec
aaa
dec
and
xchg
dec
out
out
jle
xchg
add
push
cwde
arpl
push
bound
cwde
inc
out
jbe
inc
out
xchg
lock
mov
mov
or
stc
and
bound
pop
fwait
das
mov
lock
clc
call
cwde
pop
in
daa
jmp
xor
lock
fidivr
push
shl
cwde
cli
fisttp
add
iret
shl
lods
test
adc
in
cmp
mov
es
cld
(bad)
ja
mov
cmp
or
mov
aas
push
xchg
push
mov
add
stos
outs
xor
push
test
xor
jmp
fstp
rol
cmps
adc
lock
xchg
std
retf
jmp
sti
push
std
push
jb
add
popa
imul
push
push
mov
out
scas
ret
pop
add
dec
call
push
lahf
std
xchg
xor
xor
add
mov
inc
(bad)
jmp
cmp
and
mov
imul
nop
push
gs
sbb
jae
lea
rol
sub
test
dec
dec
test
and
clc
mov
xor
test
mov
jae
aad
add
cli
pop
jmp
dec
mov
adc
mov
push
cwde
dec
sub
push
jmp
ja
sub
addr16
dec
test
cmp
cmc
(bad)
int3
in
inc
pushf
ins
adc
fild
inc
sub
(bad)
(bad)
js
push
xor
mov
add
or
cld
jl
es
xor
xchg
sbb
push
push
scas
test
pop
in
cmp
xor
push
es
hlt
add
mov
cmp
lea
(bad)
clc
fwait
pop
mov
add
dec
sbb
adc
adc
mov
fdiv
adc
loope
scas
dec
in
xchg
outs
fisubr
in
sub
or
movs
in
push
jle
loop
popa
push
push
out
in
jp
push
je
in
sbb
dec
cmp
popf
or
icebp
jle
out
out
mov
jmp
pop
lock
jbe
jae
jmp
dec
mov
mov
mov
sub
dec
add
xor
sub
in
bound
cmps
mov
add
inc
mov
sar
sbb
adc
cmc
mov
inc
mov
push
mov
sub
and
je
repz
sub
jo
pushf
jmp
fdiv
push
inc
inc
mov
cmp
dec
jae
jecxz
lock
mov
xchg
add
clc
scas
mov
sub
fbstp
push
cmps
ins
hlt
jmp
scas
pop
leave
cdq
mov
addr16
mov
daa
shr
jno
push
jle
push
pop
adc
sti
ins
add
and
sbb
lds
mov
mov
lock
adc
jno
pop
sar
retf
mov
xlat
stos
mov
and
ss
hlt
arpl
add
lahf
cmp
fs
mov
fist
bound
push
mov
xor
test
imul
inc
dec
mov
rcr
lahf
rcr
imul
and
mov
leave
gs
mov
push
std
(bad)
std
fs
test
jmp
jb
jnp
jp
out
xor
out
inc
dec
retf
popf
jo
out
ja
and
and
fwait
jmp
mov
or
rcl
jb
add
stos
test
xor
pop
mov
outs
pop
out
aas
or
dec
cdq
sti
inc
inc
outs
push
ds
retf
pop
clc
shl
ds
add
pop
(bad)
jecxz
pop
mov
in
cmp
cmp
pop
loop
inc
retf
cmc
stos
cmps
xchg
mov
shl
jno
mov
mov
gs
cli
adc
stc
pushf
push
jb
movs
add
sbb
add
not
movs
xchg
in
and
dec
adc
scas
ins
adc
pop
sub
and
push
mov
jb
jo
mov
dec
mov
ficom
daa
push
and
fst
clc
sahf
sub
jle
add
sbb
aad
jge
xchg
jp
inc
and
aam
(bad)
daa
xchg
mov
jnp
in
cmp
out
js
fs
(bad)
out
out
in
pop
cmp
dec
cmp
aas
cwde
mov
adc
jg
movs
stc
push
mov
adc
mov
inc
add
inc
jecxz
adc
adc
xchg
push
and
out
push
xor
push
dec
icebp
mov
inc
(bad)
xchg
mov
sub
and
ror
shl
xchg
repnz
(bad)
jl
and
fstp
scas
pop
inc
aaa
adc
or
(bad)
pop
push
lods
dec
dec
neg
popf
aas
jp
fdivp
mov
push
mov
pop
or
(bad)
pop
repnz
test
push
call
mov
js
xlat
ins
aad
mov
jle
in
push
jne
aas
pop
loop
jbe
mov
in
sbb
leave
add
loope
xor
push
push
fiadd
repnz
in
push
push
(bad)
lods
jecxz
cmp
lahf
lock
xor
pop
adc
sbb
arpl
sbb
(bad)
push
mov
cld
nop
push
mov
mov
inc
xor
nop
pop
xor
adc
and
dec
in
jo
lods
das
cdq
xchg
loopne
sar
pushf
test
sub
xor
xchg
stos
pop
dec
add
and
out
inc
das
scas
dec
lods
call
push
push
scas
rol
call
test
test
cmp
and
mov
outs
mov
add
fist
aad
inc
xchg
int3
cwde
xchg
test
xlat
jle
sub
mov
enter
shl
sbb
pop
in
or
jne
in
pop
push
inc
into
or
fst
fldenv
xchg
or
leave
push
sbb
inc
or
in
popa
int
xor
add
mov
mov
sti
adc
mov
cwde
inc
clc
imul
inc
ds
jl
add
sub
push
sbb
pusha
mov
cmp
dec
or
push
mov
movs
add
pop
ins
jns
(bad)
out
loop
sbb
into
push
mov
ins
cmp
mov
jmp
nop
and
sbb
or
xchg
jne
in
sar
test
(bad)
cld
nop
add
xchg
sub
popf
cmp
sub
mov
inc
aad
lea
(bad)
(bad)
cs
cmps
xlat
dec
or
aaa
out
dec
pop
jg
push
add
jbe
sbb
xor
lea
jmp
(bad)
dec
popf
inc
adc
in
(bad)
out
jae
pop
movs
sub
cmps
adc
cwde
inc
pop
pop
sbb
dec
push
sahf
inc
or
jge
ror
adc
mov
test
fwait
adc
sbb
mov
push
(bad)
daa
imul
mov
adc
popf
dec
(bad)
mov
cmp
es
cli
jg
dec
mov
jne
addr16
out
sub
cmp
mov
cmp
scas
fs
mov
push
push
rcr
xchg
daa
jnp
lahf
push
push
xchg
mov
loop
adc
in
int
xor
pop
or
(bad)
mov
mov
push
pop
lahf
jmp
jecxz
jo
stos
sar
push
push
push
add
push
mov
aam
and
jg
movs
jge
clc
out
xchg
mov
repz
xchg
aas
xor
dec
ds
sub
in
mov
sbb
(bad)
mov
in
adc
sbb
dec
iret
sub
nop
into
mov
dec
cmp
pop
sbb
add
adc
in
push
dec
push
sub
inc
xor
xlat
retf
jns
push
pop
jb
daa
adc
iret
and
daa
mov
pop
fwait
sbb
sub
cmp
test
fwait
add
ins
mov
in
jp
aaa
(bad)
in
push
push
cmp
push
ret
xor
xor
fidiv
enter
mov
sub
gs
loopne
inc
(bad)
(bad)
cmp
(bad)
ins
push
fdiv
pusha
ja
push
mov
scas
push
imul
push
mov
out
fistp
inc
and
mov
mov
test
cld
adc
movs
call
xor
scas
cmc
(bad)
aam
add
mov
lods
push
adc
xchg
mov
aaa
xor
and
out
add
adc
xchg
dec
iret
pop
mov
sub
retf
jbe
in
std
repz
outs
xchg
xchg
mov
leave
sbb
inc
mov
mov
inc
int3
imul
mov
mov
xor
(bad)
adc
mov
and
les
mov
sar
push
push
(bad)
sub
pop
repz
and
aam
aaa
push
dec
or
mov
add
mov
and
mov
test
loop
popf
inc
mov
or
dec
xchg
in
xor
and
or
adc
imul
adc
lods
ss
dec
mov
rcr
(bad)
sub
jo
xchg
aam
xchg
sar
test
sahf
call
rcl
aas
xlat
jo
jp
mov
je
(bad)
cdq
(bad)
mov
shrd
scas
cmp
inc
pop
add
in
aas
stos
add
jo
sbb
cli
sbb
sbb
imul
cmp
ja
(bad)
js
inc
mov
inc
mov
xor
or
cwde
data16
push
sbb
cmp
imul
inc
fisub
or
les
js
add
(bad)
enter
cs
mov
jmp
jbe
mov
cmc
shl
sbb
test
jmp
adc
test
cmp
jmp
push
mov
outs
mov
and
retf
push
xor
inc
push
push
out
jmp
xchg
out
pop
sbb
push
scas
mov
lods
mov
sub
dec
fild
xor
mov
mov
pop
rcr
push
inc
leave
cmp
into
out
daa
sub
mov
mov
mov
jne
adc
js
int3
mov
sbb
dec
jae
lods
push
data16
(bad)
int3
push
jmp
dec
mov
stos
leave
jmp
aam
test
dec
(bad)
ins
icebp
mov
inc
es
imul
xor
fadd
add
jmp
xchg
test
jb
sub
jmp
sub
and
mov
lock
mov
loopne
mov
shl
sub
stc
push
std
es
xchg
push
push
movs
cmp
out
or
cmp
fadd
mov
ja
scas
aas
mov
jo
je
cmp
in
mov
call
adc
inc
inc
push
fwait
stc
inc
daa
leave
movs
pop
mov
pop
inc
xchg
aad
adc
mov
xchg
test
jle
sub
in
ss
nop
fcom
jmp
mov
sbb
out
or
jecxz
jmp
bound
sub
movs
cmps
add
jbe
cmp
call
ss
jbe
out
and
stc
enter
call
es
jmp
mov
sar
jns
imul
fucomp
loopne
mov
fsubr
fsubr
xor
xor
aas
fsubr
pop
sbb
popa
xchg
fild
mov
ficom
int
sbb
mov
adc
jmp
xchg
mov
data16
cmp
sbb
mov
ret
ja
lahf
add
addr16
jl
sub
leave
rcl
jecxz
scas
shr
inc
push
pop
lahf
data16
push
xchg
sbb
(bad)
fstp
(bad)
pop
int3
in
push
xor
popf
jg
pop
push
mov
and
push
mov
pop
sti
adc
pop
ins
fadd
dec
mov
inc
(bad)
test
mov
xor
jl
sbb
sbb
mov
enter
ja
push
js
sub
pop
jge
enter
mov
sahf
cmp
jnp
dec
imul
fistp
ror
aaa
fdiv
or
les
(bad)
adc
mov
aad
loopne
mov
int
jo
jo
push
es
cs
dec
sbb
enter
not
and
or
adc
loope
ds
mov
and
mov
mov
mov
push
call
ror
mov
sar
and
add
rcl
scas
test
pop
mov
xlat
jge
inc
fistp
jmp
leave
jne
movs
xchg
mov
inc
mov
ins
cmc
cmp
call
in
mov
lods
xor
pop
pop
cmp
cmps
cmp
and
in
outs
dec
sbb
inc
stc
and
xchg
cmp
mov
mov
mov
out
adc
mov
dec
jnp
and
(bad)
pop
rcl
js
sbb
and
dec
clc
push
push
(bad)
jp
inc
push
add
xchg
mov
loopne
cmp
mov
push
hlt
sub
push
call
das
cdq
prefetch
nop
sbb
mov
test
ja
xor
or
js
aam
loop
call
pushf
or
dec
sub
inc
test
add
adc
(bad)
pop
dec
or
(bad)
out
cld
imul
gs
pop
ss
push
shr
adc
sub
in
mov
jbe
pinsrw
pop
mov
cld
cmp
das
icebp
test
les
je
xchg
cli
inc
out
gs
fldcw
jp
xor
or
in
mov
inc
mov
hlt
out
je
shl
sbb
mov
in
sbb
scas
aam
sub
fidiv
adc
sbb
adc
mov
pop
jmp
pusha
jmp
aam
(bad)
rol
push
push
data16
xor
and
pop
(bad)
jmp
cmp
adc
jmp
cmp
shr
pop
aam
lods
fcmovnu
mov
in
sub
add
fisub
mov
int3
inc
in
pop
or
push
and
sub
pop
dec
cmps
pop
push
repnz
mov
(bad)
ss
inc
xor
shr
mov
sbb
enter
mov
lods
fcmovne
js
into
sahf
adc
gs
mov
nop
jecxz
shr
push
gs
xor
mov
inc
add
shr
ss
outs
aaa
scas
stc
mov
pop
cmc
(bad)
addr16
out
je
dec
setns
cmp
jne
inc
add
mov
inc
and
fistp
adc
jne
rcr
aaa
mov
xor
adc
out
inc
adc
sbb
in
pop
enter
mov
push
ds
sbb
cmp
lods
cmp
clc
(bad)
into
push
and
adc
inc
mov
pop
ret
or
movs
les
rcr
add
mov
or
lahf
cmp
push
mov
mov
mov
or
in
or
lds
push
cmps
mov
out
pop
loop
pusha
cdq
addr16
dec
xacquire
pop
jg
adc
dec
add
shr
mov
cmp
bsf
cs
arpl
outs
addr16
call
dec
(bad)
jg
mov
jecxz
out
push
or
add
or
mov
scas
mov
ins
(bad)
pop
rcl
loope
sub
mov
mov
test
cwde
(bad)
cmp
nop
pushf
popa
and
in
jmp
jge
(bad)
lock
adc
xchg
xchg
fdiv
push
adc
jnp
add
ja
push
in
test
test
call
fwait
push
adc
sub
sub
loope
sbb
inc
dec
je
pushf
movs
push
pop
mov
mov
cwde
add
mov
or
jecxz
dec
call
cwde
mov
adc
adc
sbb
add
jle
pmulhuw
xchg
push
sub
mov
and
popa
scas
xor
adc
xchg
mov
iret
inc
test
in
adc
mov
push
cmps
(bad)
aaa
repz
out
popa
icebp
sub
cmp
jno
gs
sub
scas
inc
and
idiv
enter
ss
inc
div
cmc
pop
xchg
xchg
loop
pop
sbb
dec
fldcw
retf
addr16
mov
or
imul
mov
btc
repnz
mov
(bad)
cdq
movs
mov
rcl
imul
pop
js
inc
cdq
or
inc
mov
hlt
fbld
jle
dec
(bad)
dec
test
fwait
iret
dec
add
jnp
mov
loopne
rol
inc
jl
ins
ret
mov
cmp
(bad)
push
fiadd
loopne
xchg
pop
push
xor
ror
pop
mov
outs
fnstenv
jl
and
dec
push
int
add
inc
or
aad
mov
fdivrp
mov
(bad)
fst
dec
mov
fistp
scas
sub
push
inc
dec
out
jne
fs
repnz
test
add
iret
sub
movs
push
ja
sub
ret
retf
sbb
retf
rcl
mov
sbb
andnps
lods
sbb
xor
sub
data16
rol
idiv
fxch
jbe
daa
mov
rcl
mov
xchg
lock
(bad)
nop
movs
lock
xchg
out
mov
and
push
retf
sbb
mov
aas
mov
fisubr
pop
or
and
or
movs
in
(bad)
mov
call
enter
inc
out
pop
or
mov
sbb
gs
or
cdq
mov
inc
cmc
adc
cmp
adc
xchg
xor
mov
mov
bound
(bad)
loopne
cmp
pop
mov
push
cmps
out
jne
inc
je
imul
enter
aaa
cmps
movs
arpl
test
dec
and
adc
movsx
push
push
fcom
pushf
or
add
add
xor
int
fistp
rcr
movs
pop
or
mov
or
cmp
jmp
jmp
jmp
mov
jmp
push
push
push
push
call
pop
pop
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
jmp
jmp
mov
mov
inc
test
jne
sub
dec
ret
cmp
jne
xor
jmp
mov
cmp
jne
inc
inc
dec
jne
movzx
movzx
sub
ret
mov
push
mov
jmp
mov
dec
mov
inc
inc
cmp
jne
mov
pop
ret
mov
sub
sar
ret
mov
xor
cmp
je
add
inc
cmp
jne
ret
push
push
call
ret
jmp
cmp
mov
je
mov
cmp
je
mov
cmp
jne
cmp
jne
mov
mov
ret
mov
mov
mov
ret
mov
add
ret
mov
push
mov
push
call
shl
mov
je
sub
mov
dec
mov
inc
test
jne
pop
ret
mov
ret
xor
cmp
sete
ret
mov
lea
ret
mov
lea
ret
mov
lea
ret
mov
lea
ret
mov
lea
ret
mov
lea
ret
mov
lea
ret
mov
mov
mov
mov
mov
mov
ret
jmp
mov
push
mov
sub
push
mov
push
mov
mov
mov
mov
add
push
mov
add
add
mov
mov
add
add
mov
mov
mov
mov
xor
mov
mov
xor
test
lea
mov
mov
mov
stos
mov
mov
mov
jne
lea
mov
lea
push
push
push
push
call
xor
jmp
mov
mov
mov
sub
sar
shl
add
mov
mov
mov
shr
not
and
mov
lea
jne
movzx
mov
mov
xor
cmp
je
lea
push
push
call
mov
test
jne
test
jne
mov
test
je
lea
push
push
call
mov
test
jne
push
call
mov
test
jne
call
mov
mov
test
je
lea
push
push
call
mov
test
jne
lea
mov
lea
push
push
push
push
call
mov
jmp
push
push
call
cmp
je
cmp
je
push
push
call
test
je
mov
mov
mov
mov
jmp
push
call
mov
test
mov
je
lea
push
push
call
mov
test
jne
cmp
je
cmp
je
mov
add
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
test
jne
push
push
call
mov
test
jne
call
mov
mov
test
je
lea
push
push
call
mov
test
jne
lea
mov
lea
push
push
push
push
call
mov
mov
mov
mov
test
je
and
lea
push
push
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
push
mov
call
test
je
push
call
mov
pop
ret
mov
push
mov
push
mov
cmp
mov
je
push
push
mov
mov
push
add
jmp
lea
mov
mov
inc
test
jne
mov
sub
dec
mov
mov
inc
test
jne
sub
dec
cmp
jne
mov
push
call
test
je
add
mov
test
jne
cmp
je
mov
add
push
call
lea
jmp
push
push
call
add
cmp
jb
and
pop
pop
pop
mov
leave
ret
mov
push
mov
push
push
and
push
mov
test
mov
je
push
push
mov
mov
mov
add
mov
mov
inc
test
jne
mov
sub
dec
mov
inc
test
jne
sub
dec
cmp
jne
push
mov
call
test
je
mov
test
mov
jne
test
je
mov
cmp
je
mov
mov
add
mov
add
push
mov
call
mov
mov
mov
shl
add
mov
jmp
mov
dec
mov
inc
inc
test
jne
push
call
and
mov
xor
inc
push
call
mov
pop
pop
mov
pop
leave
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jb
mov
mov
mov
add
mov
mov
lea
mov
mov
mov
call
sub
mov
imul
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
mov
movzx
mov
mov
mov
mov
mov
lea
mov
xor
mov
lea
mov
mov
call
sub
mov
mov
add
pop
pop
pop
pop
ret
mov
mov
mov
call
xor
mov
mov
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
pop
pop
ret
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
call
mov
mov
add
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
mov
xor
mov
div
cmp
jb
jmp
xor
mov
add
sub
mov
add
mov
mov
movzx
mov
mov
mov
mov
mov
mov
cmp
je
jmp
mov
xor
mov
mov
mov
movzx
movzx
sub
sete
movzx
mov
mov
mov
mov
mul
mov
imul
add
mov
mov
mov
mov
movzx
mov
xor
mov
cmp
mov
jne
jmp
mov
mov
mov
mov
cmp
ja
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
add
mov
movzx
mov
mov
cmp
jge
jmp
mov
lea
pop
pop
pop
pop
ret
mov
cmp
jne
jmp
mov
mov
mov
jmp
mov
sub
cmp
je
jmp
mov
sub
movzx
add
sub
mov
mov
jmp
mov
mov
mov
jmp
mov
add
cmp
jne
jmp
cmp
jne
jmp
mov
jmp
jmp
movzx
cmp
jle
jmp
mov
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
imul
mov
cmp
mov
mov
mov
je
jmp
mov
mov
mov
add
mov
adc
mov
xor
mov
mov
mov
mov
sub
mov
sbb
mov
mov
mov
mov
or
mov
sub
sbb
mov
mov
jb
jmp
mov
cmp
je
mov
mov
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
lea
pop
pop
pop
pop
ret
mov
sub
add
mov
jmp
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
call
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
add
pop
ret
int3
int3
int3
int3
push
mov
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
call
sub
mov
mov
mov
call
sub
mov
mov
mov
add
mov
add
mov
add
mov
mov
mov
mov
mov
call
sub
mov
mov
mov
mov
mov
call
sub
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
pop
pop
pop
ret
int3
int3
int3
push
mov
sub
mov
mov
mov
call
mov
mov
mov
mov
call
add
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
lea
mov
mov
mov
jmp
mov
xor
test
jne
jmp
mov
mov
pop
ret
mov
mov
mov
cmp
je
jmp
mov
mov
and
mov
mov
xor
movzx
mov
cmp
je
jmp
jmp
mov
mov
jmp
mov
jmp
mov
sub
and
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
xor
add
mov
mov
mov
movzx
add
mov
add
mov
mov
xor
mov
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
call
sub
mov
jmp
mov
mov
movzx
cmp
jb
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
add
pop
pop
ret
mov
mov
xor
add
mov
mov
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
push
mov
push
sub
mov
mov
mov
cmp
jne
jmp
mov
add
cmp
je
mov
mov
mov
movsx
mov
mov
jmp
lea
mov
xor
mov
mov
mov
mov
call
sub
mov
jmp
mov
add
mov
jmp
mov
lea
mov
call
add
pop
pop
ret
int3
int3
int3
int3
push
mov
push
sub
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
cmp
je
mov
mov
sub
add
mov
jmp
mov
add
pop
pop
ret
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
mov
mov
mov
mov
mov
call
cmp
jne
jmp
mov
mov
sub
mov
cmp
jb
jmp
mov
mov
call
sub
cmp
jne
jmp
mov
lea
pop
pop
pop
pop
ret
jmp
mov
mov
call
sub
mov
jmp
mov
mov
call
sub
cmp
je
mov
lea
mov
call
sub
mov
jmp
mov
mov
mov
mov
xor
or
mov
jne
jmp
lea
mov
mov
mov
mov
mov
mul
mov
imul
add
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
cmp
jne
jmp
mov
mov
add
cmp
jne
jmp
mov
mov
mov
mov
call
sub
mov
mov
mov
cmp
jae
jmp
mov
jmp
mov
mov
lea
mov
call
sub
mov
mov
jmp
cmp
je
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
mov
lea
mov
call
sub
mov
mov
mov
call
sub
cmp
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
rep
mov
mov
mov
mov
add
mov
adc
mov
mov
add
mov
mov
sub
mov
mov
mov
jmp
mov
add
mov
jmp
jmp
mov
mov
mov
mov
mov
jmp
cmp
jb
jmp
mov
mov
mov
mov
mov
mul
mov
imul
add
mov
and
mov
mov
mov
add
mov
mov
mov
mov
movzx
movzx
sub
mov
mov
mov
mov
mov
mov
jmp
lea
pop
pop
pop
pop
ret
mov
add
mov
jmp
mov
cmp
jb
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
xor
mov
sub
sbb
mov
mov
mov
mov
add
mov
mov
sub
mov
mov
mov
mov
xor
cmp
mov
je
mov
jmp
mov
mov
mov
mov
mul
mov
mov
lea
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
movzx
mov
imul
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
sub
mov
mov
add
mov
mov
test
mov
mov
mov
mov
jne
jmp
mov
add
mov
jmp
mov
mov
mov
add
mov
mov
mov
jmp
mov
add
mov
jmp
mov
mov
mov
mov
xor
mov
sub
sbb
mov
mov
xor
xor
or
mov
jne
jmp
jmp
mov
mov
sub
cmp
jne
jmp
jmp
cmp
jb
jmp
cmp
je
jmp
mov
mov
mov
mov
add
mov
cmp
jb
jmp
mov
mov
mov
movzx
mov
jmp
mov
mov
mov
movsx
cmp
je
jmp
mov
jmp
cmp
jne
jmp
mov
mov
mov
mov
mov
movsx
movsx
cmp
sete
and
movzx
mov
mov
mov
add
sub
mov
mov
movsx
cmp
je
jmp
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
mov
add
add
mov
jmp
cmp
je
jmp
mov
mov
cmp
jb
jmp
mov
lea
pop
pop
pop
pop
ret
mov
mov
call
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
add
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
lea
mov
mov
xor
mov
mov
mov
mov
call
sub
mov
jmp
mov
lea
mov
call
add
pop
ret
mov
mov
sub
mov
cmp
jne
jmp
cmp
jne
jmp
mov
xor
add
mov
jmp
mov
mov
movsx
mov
mov
mov
jmp
int3
push
mov
push
push
push
and
sub
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
xor
mov
cmp
mov
mov
mov
ja
jmp
mov
imul
add
mov
mov
mov
imul
add
mov
mov
mov
imul
add
mov
mov
mov
xor
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
call
sub
mov
add
mov
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
mov
mov
mov
call
sub
mov
add
mov
mov
mov
mov
xor
mov
mov
mov
mov
add
mov
mov
mov
xor
lea
pop
pop
pop
pop
ret
cmp
jb
jmp
mov
add
mov
jmp
mov
mov
add
sub
add
mov
cmp
ja
jmp
lea
mov
mov
mov
mov
call
sub
lea
mov
mov
call
sub
mov
mov
sub
xor
mov
mov
imul
mov
mov
mov
mov
mov
mov
mov
mov
call
sub
mov
mov
jmp
mov
mov
imul
mov
mov
mov
mov
add
adc
mov
mov
mov
mov
imul
add
mov
mov
mov
sub
mov
mov
xor
mov
mov
add
mov
jmp
mov
mov
or
mov
mov
cmp
jb
jmp
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
cmp
je
jmp
mov
add
pop
ret
call
mov
jmp
mov
mov
mov
mov
call
sub
mov
jmp
