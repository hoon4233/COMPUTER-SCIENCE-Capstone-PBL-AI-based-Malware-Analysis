pop
mov
add
dec
add
add
add
add
push
add
add
add
add
add
and
add
add
adc
add
dec
add
add
add
adc
sbb
add
add
add
push
add
or
jle
add
add
add
push
add
push
sub
add
or
pop
adc
or
push
push
sahf
push
pop
pop
sahf
push
sbb
sahf
push
sbb
sahf
push
sbb
sahf
push
sbb
push
sbb
or
sahf
push
push
pop
cmp
push
pop
or
inc
sahf
push
pop
or
push
sahf
push
pop
or
mov
add
sahf
push
pop
or
setle
pop
or
pop
push
pop
pop
sahf
push
pop
nop
add
add
add
add
add
aaa
add
jo
push
add
push
sub
add
or
sub
add
or
push
jle
add
add
xchg
ficom
(bad)
lea
add
add
pop
mov
add
add
or
add
sub
add
push
sbb
or
add
sub
add
push
sub
add
sub
pop
mov
add
add
or
add
sub
add
push
sbb
or
add
sub
add
push
sub
add
sub
pop
mov
add
add
or
add
sub
add
push
sbb
or
add
sub
add
push
sub
add
sub
sub
xor
mov
add
add
add
push
push
pop
sub
add
or
add
add
add
loopne
sub
add
or
push
add
or
or
add
or
pop
push
or
and
xor
jle
add
add
or
add
sub
sub
jle
add
add
or
push
add
or
add
add
outs
adc
add
es
add
add
sldt
or
sub
add
or
add
add
es
add
jo
push
add
push
jle
add
add
add
add
add
es
add
add
adc
add
or
adc
or
add
add
add
outs
adc
add
fimul
and
or
or
add
add
adc
add
add
add
add
add
xor
loopne
add
add
add
jb
add
jo
push
add
push
or
jo
push
add
push
or
add
add
sub
add
or
or
add
sub
add
or
push
add
or
add
add
sub
add
or
outs
adc
add
sub
jae
add
or
sbb
add
add
add
jo
push
add
push
mov
mov
mov
add
push
add
push
mov
mov
in
add
push
add
push
mov
add
add
adc
add
or
add
or
pop
outs
sbb
add
or
outs
sbb
add
or
add
jo
push
add
push
outs
sbb
add
or
sbb
add
fimul
and
or
add
adc
add
fiadd
push
sub
adc
add
add
add
iret
add
pop
add
add
xor
mov
add
add
add
jle
add
add
sbb
add
add
add
or
sub
add
or
add
jo
pop
add
or
add
or
sub
add
or
add
jo
pop
add
or
add
or
add
add
jae
add
or
add
add
and
add
mov
adc
outs
and
add
push
jae
add
or
add
add
add
xchg
pop
outs
add
or
jle
add
add
add
daa
add
or
push
sub
add
xor
mov
add
adc
sub
add
or
outs
sub
add
adc
push
adc
cmp
or
pop
call
or
outs
sub
add
outs
sub
add
push
jle
add
add
xchg
fisubr
jb
pop
outs
sub
add
or
sub
or
add
or
add
or
or
add
sbb
add
or
add
add
or
push
adc
adc
xor
add
fimul
push
sub
adc
outs
xor
add
(bad)
or
add
outs
xor
add
(bad)
or
sub
or
add
or
fimul
or
or
add
or
sub
adc
pop
(bad)
adc
adc
adc
mov
jmp
add
add
add
or
or
add
add
add
and
add
add
dec
xchg
add
add
add
add
inc
add
add
add
add
sbb
add
add
add
adc
add
or
jae
add
or
jb
add
jo
add
add
add
push
push
sub
add
or
add
or
add
or
pop
adc
push
adc
push
pop
adc
add
or
pop
push
adc
pop
nop
sub
add
or
adc
outs
aaa
add
or
sbb
add
or
and
cmp
add
pop
sbb
add
or
outs
and
add
or
add
adc
adc
mov
push
add
or
adc
push
adc
outs
cmp
add
outs
cmp
add
add
ficom
fimul
and
or
or
adc
add
fiadd
or
add
add
adc
add
add
xchg
mov
add
sbb
add
mov
add
pop
add
adc
jb
add
jo
push
add
push
outs
add
or
add
jo
push
add
push
sub
add
or
add
aas
add
or
add
or
add
or
dec
or
add
or
add
or
outs
inc
add
or
add
or
push
sub
or
xor
add
sub
add
sub
add
or
sub
add
sub
add
or
fidiv
sub
pop
outs
inc
add
or
fisubr
outs
inc
add
or
jne
add
add
or
add
add
add
or
jle
add
add
outs
sbb
add
or
add
sub
adc
add
add
push
add
add
xor
xchg
add
add
add
adc
jle
add
add
xchg
ficom
(bad)
lea
add
add
jle
add
add
xchg
add
add
add
xchg
fidivr
add
add
xchg
adc
dec
add
or
add
add
add
xchg
xor
pop
or
add
dec
add
or
(bad)
sub
add
sub
add
pushf
sub
adc
add
sete
pop
pop
or
add
dec
add
or
push
sub
add
sub
add
pushf
or
add
or
add
pop
arpl
popa
adc
pop
arpl
popa
xor
push
sub
add
xor
add
add
or
add
sub
add
or
jle
add
add
xchg
xor
add
dec
add
or
sub
add
push
sub
add
or
and
add
add
sete
adc
sub
add
add
or
add
sub
add
or
add
or
add
sub
adc
add
outs
add
add
add
adc
pop
cmp
sub
add
sub
add
adc
add
push
(bad)
pop
js
sub
add
sub
add
adc
sub
add
jle
add
add
xchg
sub
add
push
adc
or
sbb
push
add
or
or
or
and
push
add
or
(bad)
or
sub
add
add
adc
adc
and
push
add
or
(bad)
adc
adc
or
inc
sub
add
adc
jle
add
add
xchg
adc
jle
add
add
xchg
adc
adc
adc
add
adc
add
xchg
fidivr
add
add
xchg
fcom
sub
add
sub
add
or
or
sub
add
pop
inc
sub
add
push
jle
add
add
xchg
adc
pop
inc
sub
add
adc
sub
or
or
or
or
add
xchg
ficomp
fcom
sub
add
sbb
or
add
jle
add
add
xchg
sub
add
or
or
jle
add
add
xchg
fcom
sub
add
jle
add
add
xchg
sub
add
push
jle
add
add
xchg
sub
add
add
adc
or
push
sub
or
xor
pop
sub
add
adc
sub
adc
or
arpl
or
pop
arpl
push
popa
ds
(bad)
call
pop
sub
add
push
or
add
sub
add
xor
jg
add
or
add
add
cmp
(bad)
sub
add
sub
add
adc
(bad)
and
(bad)
sub
add
sub
add
adc
adc
(bad)
sub
add
jle
add
add
xchg
sub
add
push
adc
or
sbb
push
add
or
pop
adc
and
push
add
or
(bad)
or
or
sbb
push
add
or
(bad)
adc
adc
and
push
add
or
(bad)
adc
adc
or
inc
sub
add
adc
jle
add
add
xchg
adc
jle
add
add
xchg
adc
adc
adc
add
adc
add
xchg
fidivr
add
add
xchg
fsubr
sub
add
sub
add
or
pop
push
sub
add
pop
inc
sub
add
push
jle
add
add
xchg
adc
pop
inc
sub
add
adc
sub
or
or
or
or
add
xchg
ficomp
fsubr
sub
add
sbb
or
add
jle
add
add
xchg
sub
add
or
or
jle
add
add
xchg
fsubr
sub
add
jle
add
add
xchg
sub
add
push
jle
add
add
xchg
sub
add
push
(bad)
or
sub
or
xor
push
sub
add
or
or
sub
or
or
arpl
or
pop
arpl
push
popa
ds
push
sub
add
push
push
or
add
or
add
xor
add
add
or
add
add
add
or
outs
pop
add
or
add
or
push
ror
add
add
pop
add
or
outs
pop
add
or
add
or
mov
add
xchg
xor
or
add
add
xchg
call
sub
sub
add
add
or
sub
pop
sub
adc
add
add
add
pop
sub
add
push
add
or
add
rol
add
sbb
pop
add
or
pop
add
or
or
add
sub
add
add
pop
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
pop
add
and
add
add
and
jb
outs
addr16
add
add
add
ins
add
add
push
push
add
adc
add
add
add
inc
push
dec
inc
add
add
adc
add
add
add
inc
ins
outs
bound
add
add
add
add
add
push
sbb
or
sldt
add
add
add
add
add
add
cmp
add
or
add
adc
add
sbb
add
pop
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
dec
add
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
jmp
add
add
add
add
jno
push
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
jno
push
add
add
xor
mov
add
add
add
loope
jno
push
add
add
or
dec
add
add
push
jno
push
add
push
dec
add
add
add
jno
push
add
dec
add
add
push
ins
add
add
push
sti
push
push
add
sti
push
or
xor
ins
add
add
stc
add
add
dec
add
add
add
pop
dec
add
add
or
push
add
in
add
add
add
add
in
add
add
or
add
add
and
add
add
add
add
add
adc
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
sbb
add
add
jo
add
or
add
add
add
xchg
add
add
add
add
add
add
les
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
sub
push
push
sub
sub
push
xor
das
add
cmp
das
add
inc
add
add
inc
add
add
add
add
adc
dec
add
add
test
add
add
push
add
inc
add
add
add
add
add
dec
add
add
add
add
push
add
dec
add
add
add
add
push
add
dec
add
add
and
push
add
push
add
add
and
push
add
pop
add
add
push
add
pusha
add
add
add
add
push
add
add
add
add
add
add
add
push
add
mov
add
add
push
add
add
add
add
add
sbb
add
add
add
add
lahf
add
add
add
add
mov
add
add
add
add
add
rol
xchg
add
add
add
add
add
sbb
add
add
add
add
lahf
add
add
add
add
mov
add
add
add
add
add
rol
lods
add
add
add
add
add
sbb
add
add
add
add
lahf
add
add
add
add
mov
add
add
add
add
add
rol
rol
add
sub
add
add
add
add
add
add
add
add
sbb
add
cdq
add
add
cdq
add
add
cdq
add
add
cdq
add
add
xchg
add
stos
add
mov
add
add
add
add
add
add
add
add
in
add
add
repnz
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jae
xor
inc
add
dec
add
pusha
add
jns
repnz
add
and
cdq
add
add
add
add
add
add
add
fld
cdq
add
add
cdq
add
add
sbb
add
push
leave
add
add
add
(bad)
add
add
cmc
add
add
fld
jno
jbe
add
add
add
add
add
add
push
adc
pop
sbb
mov
sub
and
xchg
add
repnz
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
xor
or
cmp
cmp
or
cmp
cmp
add
add
add
add
add
add
add
add
add
add
and
xor
mov
add
add
add
loope
sbb
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
mov
add
jne
fs
je
aaa
xor
ss
js
cs
pop
inc
add
fs
je
aaa
xor
ss
js
add
gs
fs
add
arpl
ins
imul
imul
ins
gs
je
add
jae
gs
add
jae
dec
dec
add
push
pop
add
push
add
push
arpl
dec
dec
pop
add
jne
add
dec
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
inc
je
jb
bound
add
push
bound
arpl
dec
ins
dec
je
dec
addr16
jne
add
inc
push
outs
dec
bound
arpl
push
push
add
push
inc
dec
push
ins
add
jae
ins
bound
push
jns
je
ins
cs
gs
arpl
outs
add
imul
outs
ins
popa
imul
inc
add
push
inc
jo
add
outs
imul
inc
push
push
ins
jb
jbe
ins
jne
pop
pop
add
dec
push
jno
inc
add
push
add
bound
add
inc
push
arpl
add
imul
push
add
inc
ja
pop
add
inc
push
fs
push
je
bound
js
add
pop
gs
ins
add
jp
add
jp
pop
add
push
push
push
add
ins
push
ins
add
arpl
add
imul
add
jae
outs
arpl
jae
ins
je
inc
jae
outs
arpl
ins
ins
bound
imul
outs
fs
outs
jbe
imul
outs
jbe
imul
je
push
outs
push
push
dec
dec
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
arpl
jo
imul
imul
jns
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
inc
push
push
inc
je
jb
bound
add
inc
cs
jbe
add
jbe
jb
outs
ins
outs
je
inc
gs
outs
ins
fs
popa
je
add
arpl
ins
inc
outs
ins
fs
push
je
imul
arpl
add
je
xor
addr16
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
jae
data16
push
imul
jae
arpl
inc
outs
outs
jbe
jb
imul
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
push
je
imul
outs
outs
add
ins
add
jae
gs
cs
dec
add
imul
je
outs
je
jns
jae
gs
bound
addr16
dec
outs
arpl
imul
arpl
jae
push
jns
je
ins
cs
imul
imul
jb
add
outs
push
arpl
je
add
fs
jo
add
je
inc
outs
je
jns
outs
imul
push
outs
add
je
outs
fs
popa
jae
add
je
jb
push
arpl
jb
jb
inc
js
gs
imul
popa
jb
jb
push
arpl
jb
jb
push
jb
arpl
jae
je
jb
dec
outs
outs
add
je
inc
jb
jne
outs
je
add
je
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
inc
imul
push
gs
fs
ins
ins
inc
jns
gs
inc
inc
push
inc
jb
jo
outs
push
gs
imul
imul
je
ins
cs
arpl
imul
je
addr16
jo
jns
inc
outs
arpl
imul
je
ins
cs
gs
add
je
inc
push
inc
dec
dec
add
je
jns
gs
inc
inc
push
add
je
dec
gs
push
jns
ins
gs
imul
imul
pop
dec
push
add
ins
gs
je
gs
ins
add
ins
gs
outs
fs
je
dec
outs
addr16
add
gs
je
inc
arpl
jo
outs
jb
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
add
jb
popa
ins
add
jns
je
push
je
gs
ins
dec
outs
fs
popa
add
add
je
js
arpl
imul
ins
bound
inc
gs
popa
outs
imul
jae
jne
arpl
popa
ins
gs
push
outs
dec
outs
ja
jb
dec
outs
fs
data16
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
outs
popa
jb
push
gs
fs
push
gs
fs
jns
gs
inc
imul
imul
je
add
imul
ins
add
jo
jae
add
push
fs
gs
dec
popa
outs
popa
gs
xor
je
push
gs
imul
imul
add
jae
inc
ins
outs
jb
je
ins
add
ins
jo
je
dec
popa
jae
add
jb
jns
inc
outs
jo
add
je
dec
outs
fs
jo
gs
outs
fs
je
inc
ins
outs
arpl
imul
pop
push
popa
fs
imul
add
outs
jbe
jb
add
outs
ins
inc
popa
jae
ss
je
imul
outs
jae
outs
jb
inc
imul
arpl
inc
gs
je
imul
je
imul
inc
jne
jb
outs
je
jb
arpl
jae
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
gs
outs
jne
gs
je
jb
dec
inc
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
push
jb
arpl
jae
outs
fs
add
je
dec
outs
fs
gs
popa
ins
add
gs
je
jb
add
ins
jo
jb
push
je
imul
push
je
add
pop
inc
jno
popa
ins
imul
inc
popa
jae
inc
fs
jae
add
jbe
dec
gs
add
je
push
imul
outs
je
xor
outs
jo
inc
js
ins
imul
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
popa
fs
jns
add
outs
je
xor
push
gs
fs
outs
je
xor
inc
imul
je
jb
inc
ins
ins
outs
arpl
ins
outs
bound
add
jb
outs
push
je
imul
add
outs
je
add
gs
inc
ins
outs
bound
add
je
jns
add
add
je
imul
gs
fs
outs
outs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
ins
bound
dec
outs
outs
add
je
jne
je
ins
inc
je
jb
bound
gs
addr16
inc
gs
jb
jo
imul
inc
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
add
xor
inc
add
add
ja
add
add
inc
add
das
add
push
xor
xor
add
add
push
add
add
add
add
add
cmp
dec
add
add
js
cmp
jne
push
add
inc
add
ins
add
js
add
xor
add
add
add
js
xor
add
dec
add
push
add
cmp
inc
add
ins
add
add
aaa
add
add
add
xor
jne
push
add
inc
add
outs
add
dec
add
add
jp
dec
add
inc
add
arpl
ja
push
add
dec
add
cmp
xor
add
add
ins
add
inc
add
dec
add
cmp
push
add
imul
add
add
push
add
push
add
dec
add
push
add
pop
add
imul
dec
add
cmp
jno
cmp
xor
popa
add
imul
add
xor
add
sub
dec
add
xor
dec
add
add
add
add
add
inc
add
inc
add
cmp
xor
dec
add
jne
inc
add
add
xor
dec
add
add
add
popa
add
dec
add
add
cmp
add
add
add
add
jo
js
push
add
push
add
jns
js
inc
add
inc
add
cmp
je
add
add
add
xor
add
aaa
add
dec
add
cmp
dec
add
pop
add
push
add
add
jbe
dec
add
arpl
add
cmp
xor
dec
add
add
dec
add
jno
xor
xor
add
dec
add
add
arpl
add
cmp
push
add
cmp
adc
je
inc
add
push
add
add
adc
add
ins
add
push
add
push
add
xor
sub
add
jne
outs
add
add
add
push
add
outs
add
add
sub
push
push
add
push
add
rcl
cwde
mov
cdq
stc
call
add
mov
pop
push
sbb
mov
push
push
add
sbb
add
add
adc
add
sbb
push
adc
add
adc
push
adc
push
or
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
push
add
add
push
add
sbb
add
sbb
add
sbb
push
add
push
add
push
add
or
sbb
or
add
add
and
sbb
push
push
add
and
adc
add
sbb
or
and
adc
add
sbb
push
pop
adc
add
add
push
add
add
push
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
or
add
or
add
add
sub
add
push
outs
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
add
sbb
dec
arpl
dec
ja
push
je
ins
push
inc
xor
ja
push
ins
inc
cmp
add
sbb
push
jb
dec
data16
arpl
jne
dec
push
xor
ss
imul
add
sbb
dec
cmp
ins
xor
push
ins
inc
jp
inc
dec
aaa
sub
dec
addr16
add
sbb
inc
dec
cmp
js
cmp
jns
aaa
inc
cmp
jo
addr16
add
push
adc
add
push
push
add
push
push
push
push
add
add
sbb
add
adc
add
adc
or
adc
pop
add
pop
jg
aad
cmp
add
or
add
or
push
add
add
push
add
add
adc
add
push
add
add
push
add
sbb
sbb
add
pop
or
add
or
push
adc
add
push
sbb
add
gs
add
add
add
adc
popa
or
push
sbb
adc
adc
push
add
push
add
add
ins
add
push
add
add
push
adc
and
or
or
mov
add
add
sbb
and
adc
add
adc
and
sbb
or
push
and
adc
add
adc
sbb
or
adc
adc
jns
adc
add
add
or
sub
add
xor
xor
sbb
and
push
sbb
adc
push
adc
add
add
add
push
add
add
dec
add
mov
add
and
sbb
add
or
push
add
sbb
and
sbb
and
add
pop
add
adc
sbb
add
or
and
or
add
or
add
sbb
or
push
sbb
or
or
add
sbb
add
sbb
sbb
add
or
add
sbb
add
add
sbb
add
push
sbb
add
sbb
pop
adc
or
or
or
sbb
push
or
sbb
adc
adc
or
or
or
or
or
or
add
fld
and
adc
add
sbb
and
and
sbb
add
sbb
add
and
sbb
add
add
adc
fld
sbb
pop
add
stc
adc
(bad)
xor
pop
cmp
popa
sbb
pushf
jl
nop
ins
adc
jl
aas
cmp
les
jmp
aad
pushf
hlt
push
sbb
lea
or
and
test
sbb
dec
mov
mov
outs
out
retf
push
int
popf
fidivr
retf
sbb
daa
ins
jle
mov
jp
xor
mov
mov
lods
xchg
aad
push
fadd
(bad)
or
ror
xchg
in
mov
pop
retf
js
adc
pop
iret
lock
dec
inc
inc
lods
call
jp
push
mov
or
xchg
loop
movs
push
adc
mov
jne
pop
push
push
popa
sbb
and
mov
dec
out
pop
retf
or
push
inc
lods
rcr
lods
push
and
shl
mov
dec
mov
rol
div
cmp
sub
(bad)
sub
add
(bad)
or
pmuludq
gs
sub
xor
imul
mov
push
xchg
mov
sub
ret
retf
popf
dec
adc
dec
rcl
mov
jne
out
test
stos
stc
xchg
sahf
ret
loopne
xor
fchs
hlt
or
push
pop
sbb
pop
addr16
inc
rcl
rcr
mov
scas
mov
sbb
(bad)
jecxz
sbb
cs
das
add
or
mov
(bad)
out
mov
or
mov
jno
mov
cli
sbb
shr
xor
push
mov
mov
jo
push
push
xchg
mov
xchg
in
outs
fisttp
call
mov
jno
inc
xlat
popa
push
sbb
or
retf
dec
dec
and
test
add
sub
add
das
sbb
add
hlt
into
sti
loopne
and
mov
shl
sub
pop
in
sahf
iret
jo
push
in
push
iret
movs
cmc
cwde
mov
imul
loop
sub
sbb
mov
pop
into
mov
xchg
shr
test
jbe
xor
push
loop
add
pop
xchg
push
mul
aad
push
(bad)
push
popa
mov
jmp
cmp
repz
jp
xor
add
mov
pop
retf
mov
imul
push
or
mov
xor
and
fnstcw
cld
sbb
(bad)
adc
mov
stos
pop
(bad)
inc
and
imul
pop
fucom
add
(bad)
sub
cmps
(bad)
ss
lock
data16
xchg
push
xchg
sub
add
cmps
fimul
mov
popf
xchg
nop
popa
sub
mov
jnp
cmps
pusha
cmp
in
scas
bound
jmp
mov
ja
jl
pop
push
add
in
(bad)
in
xor
sub
into
add
in
fnstcw
xchg
xor
add
sub
xor
movs
mov
je
int
cmc
(bad)
mov
je
leave
std
out
push
test
mov
into
mov
retf
or
cmp
aam
enter
and
pusha
mov
push
repz
in
xor
xchg
ret
hlt
sti
and
sub
sub
push
cmp
dec
not
jg
inc
fidivr
ja
jl
mov
call
xchg
imul
cwde
mov
jbe
push
pop
mov
lock
adc
lds
call
sub
cmps
cmps
and
push
cmps
scas
inc
hlt
or
call
fimul
pop
mov
add
daa
fwait
mov
ds
mov
xchg
fsubp
outs
fmulp
in
xchg
lods
push
hlt
mov
cwde
add
pop
repnz
ds
scas
lock
cmp
mov
lock
mov
test
ja
mov
and
out
push
sbb
jb
out
(bad)
jo
push
gs
stos
pop
cmp
aad
int3
nop
jg
push
int
xor
fisttp
mov
xchg
adc
out
fsubp
scas
lods
fidivr
sbb
xor
add
dec
outs
add
js
dec
sub
ficomp
push
(bad)
fimul
cmps
adc
sub
mov
add
jge
add
das
mov
xor
jno
push
mov
int
dec
(bad)
jg
sbb
out
sbb
test
imul
adc
xor
fdivr
in
leave
and
test
and
addr16
push
std
and
push
jns
(bad)
sbb
lds
push
daa
imul
rep
sbb
push
inc
stos
cmp
cmc
xor
ja
stc
xchg
cmp
bound
xchg
pop
pusha
inc
rol
in
jmp
int
or
xchg
pop
aas
sbb
imul
aam
mov
mov
add
cmp
mov
mov
cs
(bad)
in
or
sbb
mov
mov
sbb
mov
sub
fbstp
test
gs
add
mov
aad
xchg
aaa
and
in
inc
push
jne
movs
mov
inc
in
loope
movs
xchg
bound
and
ret
test
lea
xchg
je
test
sbb
mov
out
xor
inc
cmp
je
sbb
sub
inc
test
lea
mov
pusha
jne
hlt
or
and
scas
xor
lock
pop
outs
movs
cmp
hlt
push
repnz
or
dec
inc
mov
ds
sbb
bound
out
or
scas
push
jmp
mov
iret
movs
test
adc
pop
lods
loopne
adc
inc
fcom
aaa
movs
push
mov
je
test
xchg
push
pusha
xchg
jp
std
inc
xor
pop
xor
inc
xor
movs
sub
(bad)
cmp
fucomp
js
enter
pop
jo
mov
xlat
mov
(bad)
mov
out
cmps
sub
jo
and
inc
and
in
add
sbb
mov
sbb
and
inc
inc
or
hlt
gs
mov
mov
adc
mov
cmc
inc
push
popf
jge
loop
call
jns
pop
iret
shl
lahf
jge
mov
xchg
int
dec
dec
jns
pop
push
dec
mov
imul
nop
fs
jns
and
loope
and
inc
push
inc
lock
dec
xlat
xchg
dec
(bad)
cdq
mov
fistp
sbb
inc
add
lods
mov
inc
out
repz
(bad)
push
fisub
movs
fsubrp
mov
push
push
ins
xchg
xchg
stc
jo
jecxz
bound
mov
sub
push
inc
cmp
bound
scas
daa
jns
ss
sbb
mov
pop
sbb
das
sub
ss
lahf
test
je
cmps
add
fnstenv
mov
add
xchg
jecxz
ss
fwait
and
jns
xor
add
(bad)
das
xchg
movs
add
adc
ds
xor
mov
jl
push
sbb
mov
loopne
test
or
in
push
(bad)
shl
mov
outs
jle
mov
or
iret
inc
push
fild
fldenv
outs
lods
jp
mov
cmps
pop
test
ds
adc
mov
bound
mov
jecxz
jns
push
sub
xchg
xor
in
inc
call
cld
aaa
cld
cwde
(bad)
mov
fs
movs
sub
mov
mov
not
mov
in
ret
lea
movs
pushf
test
pop
js
in
daa
fidiv
(bad)
xor
enter
push
mov
mov
cmc
mov
mov
pop
outs
sbb
cmp
inc
cmc
test
sahf
inc
push
enter
stos
xor
sbb
ss
add
retf
xchg
pusha
ret
sbb
mov
imul
(bad)
scas
push
into
or
addr16
fild
stos
or
test
aaa
fld
pop
inc
jo
stos
call
stos
call
daa
cmp
mov
not
pop
pop
or
test
jae
pop
out
inc
std
jecxz
jb
ror
mov
popf
add
pop
jmp
stc
cmps
push
mov
jns
ja
mov
int
push
lock
int3
cmps
adc
fmulp
dec
push
xchg
loop
cmc
adc
notrack
sub
jbe
out
mov
out
xchg
mov
call
and
xchg
cli
cld
sub
fld
push
test
xor
ss
push
inc
push
mov
fisubr
inc
and
stc
sub
jne
mov
push
clc
fdiv
cli
bound
mov
repnz
or
add
into
into
aas
jp
outs
(bad)
jmp
push
icebp
mov
out
pop
adc
mov
repnz
enter
inc
into
push
mov
mov
scas
mov
push
mov
xor
sub
repz
outs
mov
mov
push
js
add
jge
and
cmp
sbb
pop
movs
ss
push
mov
js
repz
mov
add
mov
push
push
mov
mov
out
xchg
sbb
call
in
std
movs
cmps
into
mov
sub
int
shl
cdq
popf
je
push
in
retf
inc
(bad)
repz
push
ja
mov
push
xor
cmp
sbb
xchg
movs
inc
mov
loope
scas
repnz
fucom
xor
ja
push
dec
sub
push
inc
jns
nop
mov
cmps
outs
sbb
pop
scas
sbb
xor
and
mov
into
enter
jg
mov
ret
and
pop
sbb
retf
cmps
push
jl
arpl
shl
aas
ss
dec
push
rcr
dec
inc
sub
and
in
xlat
idiv
lahf
movs
fst
xchg
out
sub
sub
push
dec
push
mov
fidiv
mov
pusha
addr16
add
les
pop
outs
adc
push
dec
sub
outs
jmp
xor
ja
cmp
pop
mov
mov
xchg
icebp
fisub
pushf
fist
cmp
adc
jp
inc
cmps
aas
push
mov
data16
iret
dec
mov
add
mov
xchg
(bad)
ins
sub
pushf
jge
loop
mov
sub
fld
adc
setp
adc
(bad)
mov
aaa
push
jb
inc
mov
test
cmp
sbb
mov
outs
pop
hlt
int3
sub
out
sti
or
xchg
jp
aad
cli
and
inc
jnp
sub
push
cmp
sub
shl
idiv
sbb
out
popf
retf
dec
outs
sub
retf
sbb
mov
jle
dec
pop
ret
or
cmp
and
dec
sti
mov
fmul
adc
cmp
add
lds
aaa
mov
push
call
push
mov
sbb
cmp
shl
pushf
mov
inc
pop
jg
(bad)
syscall
and
xchg
loopne
out
fnstcw
xchg
mov
ja
mov
sub
stos
outs
int3
daa
adc
xchg
pop
ds
std
aam
xchg
jg
test
sub
adc
dec
dec
hlt
(bad)
mov
loop
std
ret
mov
cmp
inc
pop
movs
jne
dec
pop
fisttp
imul
mov
and
cmp
dec
add
mov
mov
push
scas
ins
and
in
mov
sub
jns
fcom
call
sbb
fimul
push
mov
jae
xchg
sub
pop
cmp
icebp
das
lods
jo
mov
test
cld
ins
jp
test
jo
mov
gs
lahf
pop
jge
pop
test
aam
sti
adc
mov
mul
add
jmp
fisttp
iret
dec
dec
and
pop
clc
and
(bad)
pusha
std
add
pop
jns
arpl
in
jne
jns
sbb
and
das
les
ret
mov
mov
pop
adc
das
dec
push
gs
dec
push
push
sbb
push
mov
repnz
rcl
dec
(bad)
pop
mov
push
cmps
sahf
repz
jp
lock
add
mov
ret
ficomp
push
cvtps2pd
dec
loopne
or
sbb
pusha
in
sbb
enter
jo
xchg
dec
mov
sbb
xor
mov
call
mov
push
push
xchg
in
fisttp
xchg
pop
sbb
stos
gs
push
sub
mov
inc
push
hlt
std
test
or
fstp
jne
add
sbb
ror
jo
sub
cmps
cmp
inc
outs
mov
adc
mov
mov
lods
jne
sbb
lods
loop
repz
mov
pop
fbld
pop
mov
xor
jle
xor
sbb
xor
stc
pusha
xchg
xchg
gs
call
lds
add
sub
movs
or
add
das
lds
fstp
lods
mov
add
ret
daa
gs
leave
sbb
pushf
rol
jb
bound
mov
call
imul
neg
adc
inc
and
mov
push
xor
mov
push
inc
ds
dec
adc
pop
mov
jns
ins
(bad)
popa
ficom
mov
or
std
inc
jmp
loope
mov
adc
cmc
jl
scas
or
sbb
mov
dec
dec
in
inc
xor
xor
push
xchg
jb
lds
push
fisub
ins
fdivr
repz
adc
dec
neg
sbb
out
push
shl
test
(bad)
stc
les
xchg
or
mov
call
pusha
xchg
outs
xor
stc
jecxz
push
xchg
inc
push
clc
ret
push
(bad)
iret
in
adc
test
inc
mov
sbb
mov
mov
inc
sahf
or
stos
cs
lods
mov
sar
outs
jns
push
pop
mov
or
xor
mov
inc
icebp
arpl
push
in
push
in
out
fs
(bad)
repz
imul
push
cmps
cmp
int3
lea
lock
(bad)
loop
dec
and
les
sub
nop
cmc
in
dec
xor
fidiv
pushf
xlat
clc
cmps
inc
add
repz
sahf
xchg
scas
xor
inc
xchg
loope
sbb
push
cmp
pop
adc
mov
add
(bad)
shl
mov
ja
lods
pushf
sti
pop
stos
xchg
mov
mov
mov
ins
jo
pop
dec
sub
mov
jmp
cmc
add
and
enter
lahf
fld
xor
call
xor
in
pop
xor
xchg
or
sub
mov
pop
cld
pop
sbb
into
dec
jns
fwait
inc
std
ss
sbb
inc
retf
jns
inc
or
(bad)
jmp
fadd
test
fdivr
and
or
xchg
icebp
cmp
push
mov
sahf
sbb
add
sub
fsubr
out
push
sub
xchg
cdq
fidiv
inc
add
jns
test
xchg
or
lods
cli
sbb
xchg
push
inc
(bad)
(bad)
fisttp
cmc
and
std
pop
or
push
xchg
cmp
add
xor
push
mov
sbb
inc
fdivr
mov
sbb
test
cmps
and
and
cmc
sub
sbb
sar
fwait
aas
daa
push
std
and
or
pop
jg
jne
cld
pop
test
fst
call
punpckhbw
jmp
mov
cmp
popf
test
jg
adc
cmp
adc
les
mov
in
sbb
mov
xchg
pop
jo
lahf
inc
dec
leave
mov
stos
jae
push
loope
lock
out
inc
sub
popf
je
jo
and
out
sbb
ja
repnz
lods
data16
(bad)
hlt
sbb
mov
ja
dec
outs
mov
sub
cmp
mov
add
mov
rcr
xchg
vmread
jae
fisubr
jl
movs
imul
and
movs
mov
jle
ficomp
xchg
pushf
lahf
inc
mov
and
mov
jl
or
call
and
and
sub
mov
xchg
imul
(bad)
mov
pop
stc
sbb
cmps
cmc
push
cmps
ret
sbb
or
out
or
ja
jbe
xchg
add
sbb
gs
fsub
sahf
mov
adc
inc
jge
stc
push
fnstsw
mov
sub
sub
sub
shl
mov
sbb
jle
fwait
and
mov
or
mov
loopne
test
pop
lea
js
repz
dec
cmp
push
retf
cmps
aam
cmp
(bad)
addr16
mov
sub
mov
jmp
lea
ficom
adc
repz
and
arpl
mov
rcl
inc
inc
xor
aaa
lds
add
cvttps2pi
ja
loope
addr16
not
dec
add
mov
mov
fistp
push
fisub
ret
sub
adc
lods
fist
dec
push
in
inc
or
mov
mov
hlt
cmp
ja
and
inc
push
mov
(bad)
mov
xchg
add
mov
addr16
(bad)
mov
(bad)
jne
adc
xor
sbb
neg
enter
push
retf
xor
test
xchg
inc
push
or
es
mov
dec
fisttp
ins
sahf
(bad)
jmp
jmp
mov
mov
xchg
sub
jae
jmp
mov
cmp
push
cs
pusha
dec
(bad)
adc
jnp
int3
xor
mov
(bad)
pop
repz
xchg
leave
sub
and
mov
dec
inc
mov
xchg
xor
mov
es
icebp
cmp
dec
stc
dec
call
and
dec
sar
dec
and
loope
inc
xchg
adc
pop
movs
mov
sub
mov
push
in
sar
or
mov
jno
mov
ss
mov
popa
js
aam
ret
xor
or
in
packuswb
cmp
out
sbb
and
and
arpl
xchg
test
aaa
pop
cmps
fwait
sub
pop
jp
in
(bad)
jge
in
mov
daa
cmp
push
pop
or
cmp
jp
int3
jmp
push
hlt
enter
jg
mov
scas
push
pop
jo
fucom
stc
cmp
mov
mov
popa
xchg
daa
inc
jnp
xor
in
pop
adc
xchg
add
repz
or
pop
mov
(bad)
movs
jb
shl
dec
push
test
pop
cmp
shr
sub
das
pop
push
inc
push
in
in
test
xor
push
push
(bad)
ror
mov
scas
add
pop
lock
add
push
mov
test
pop
mov
sub
jns
in
push
in
inc
repz
add
call
add
dec
mov
and
lds
cwde
arpl
ss
pop
sub
mov
pop
ror
dec
push
mov
cmp
stos
jo
sub
rcl
fxch
dec
fdiv
xor
lods
das
stc
repnz
ins
jae
sub
xor
ja
test
and
popa
pop
sub
sbb
add
sub
push
mov
scas
push
and
movs
push
sub
pop
push
jecxz
clc
xchg
daa
rcr
(bad)
int
sub
shl
ins
xor
div
jne
imul
mov
dec
jns
int
addr16
es
dec
sar
inc
cmp
sahf
xlat
add
sti
push
push
sbb
stos
gs
xor
in
fwait
adc
xor
push
xchg
push
mov
(bad)
out
jne
pop
mov
in
sub
and
mov
cmp
les
icebp
xchg
(bad)
sbb
add
sbb
or
pop
xor
push
adc
mov
mov
addr16
mov
mov
unpcklps
pushf
push
scas
shl
sub
lahf
adc
or
ficomp
sub
mov
(bad)
sbb
mov
fcmove
xchg
sbb
mov
adc
sub
sub
fucomp
lock
adc
jnp
pop
call
mov
cmp
and
(bad)
xchg
(bad)
sub
xchg
sbb
adc
xchg
dec
jp
xchg
inc
and
mov
xchg
xor
stos
xor
push
(bad)
not
outs
(bad)
sub
sbb
cdq
inc
xor
xor
cmps
pop
scas
into
dec
aaa
aaa
mov
dec
push
jne
ffree
pushf
pop
pop
ja
mov
pop
add
inc
loopne
inc
xchg
shl
enter
sub
rcr
cmp
pop
pop
adc
adc
adc
stc
push
sub
movs
mov
cli
outs
scas
aam
mov
cmps
push
xchg
lock
xor
mov
movs
scas
xchg
mov
int3
add
es
cmp
mov
in
pop
adc
sbb
lds
fldenv
sub
hlt
(bad)
jbe
jno
daa
fsub
cli
arpl
cld
hlt
test
inc
call
pop
mov
aas
(bad)
inc
call
inc
lds
cmp
fadd
cs
fstp
mov
cli
fimul
or
aas
jp
xchg
mov
mov
imul
sub
add
xchg
call
push
rol
dec
jle
or
or
xor
mov
mov
or
std
cmp
data16
aad
dec
dec
int
xchg
ins
or
(bad)
ins
cmp
mov
pop
and
xchg
in
es
fild
retf
dec
shr
push
push
setno
rcr
lea
push
mov
mov
addr16
mov
(bad)
stos
pop
mov
push
sti
cmp
sub
add
and
pop
and
mov
outs
repz
xchg
iret
add
dec
xchg
mov
jecxz
retf
cld
dec
sub
push
out
lods
add
push
fs
nop
aad
add
inc
sub
lock
fnstcw
xor
push
sbb
jl
jge
xor
and
hlt
add
push
rcl
or
sub
outs
enter
xor
cs
dec
sbb
fist
mov
in
(bad)
repz
sub
push
das
(bad)
fucom
jecxz
ss
adc
in
mov
and
test
add
sbb
ror
data16
pop
dec
cmp
hlt
gs
aam
scas
sbb
sti
inc
ror
sub
jnp
or
push
xor
mov
scas
rcl
or
pop
sbb
int3
xor
ss
out
sub
cs
fild
push
pusha
outs
lods
repnz
jmp
mov
inc
sbb
add
adc
xor
in
aaa
aad
xor
add
mov
mov
adc
sub
and
push
cmp
jb
xchg
add
push
mov
jns
mov
bound
pop
xlat
loop
cwde
test
psubsw
inc
mov
hlt
pop
in
cs
fidivr
jae
xchg
in
xchg
mov
dec
jns
and
movs
rcr
(bad)
imul
lods
(bad)
xlat
mov
lahf
fstp
xor
out
jmp
add
repz
stos
mov
je
xor
mov
out
repnz
adc
adc
test
imul
sub
xor
adc
shr
pop
pushf
hlt
test
add
mov
dec
mov
lds
push
pop
dec
dec
addr16
adc
ss
mov
add
inc
aaa
add
out
clc
fidivr
xchg
mov
adc
add
or
sbb
ins
jbe
enter
pop
sub
push
push
(bad)
jne
es
dec
pushf
leave
shl
cmps
mov
sbb
shl
mov
test
xlat
fisub
pop
mov
les
test
lea
cmp
inc
iret
pop
stos
gs
in
fs
retf
pushf
cmp
rcr
sar
stc
pop
mov
jne
retf
pusha
xlat
pop
push
fsub
fadd
adc
xchg
inc
sub
arpl
mov
int3
popf
cwde
push
sbb
into
(bad)
in
int
add
or
or
jp
xor
movs
pop
sub
jp
das
cli
js
lock
inc
xchg
loop
les
int3
lock
fist
retf
pop
jge
inc
(bad)
fidiv
jl
pop
cmp
aaa
cwde
add
pop
or
sti
pusha
cmc
sti
adc
xlat
xlat
pop
je
rcl
call
sub
cwde
cdq
sub
adc
cli
call
add
jne
jecxz
test
repnz
out
cld
sahf
leave
xor
add
and
pop
int3
xchg
cmp
(bad)
and
mov
add
pop
inc
push
or
out
mov
pop
aas
les
inc
enter
add
xor
int
xor
test
out
xor
xchg
sub
adc
je
sub
fsub
or
lea
xor
or
fistp
sub
inc
mov
jmp
sbb
ss
mov
inc
pop
sbb
shl
sbb
add
call
leave
lods
scas
add
movs
ja
jmp
add
pop
cmp
jb
fbstp
push
gs
and
lahf
mov
adc
mov
push
mov
lods
test
adc
push
aad
mov
mov
ret
punpckldq
add
stc
fwait
ins
shr
std
xchg
stc
pop
in
bound
push
call
pop
pusha
mov
shl
adc
cmp
fs
jp
sti
add
mov
ins
mov
enter
movs
cdq
aad
out
push
pop
pushf
movs
inc
or
pop
xchg
jmp
jo
sbb
popf
scas
aas
icebp
loope
xchg
mov
jnp
or
mov
pop
inc
pop
inc
test
jbe
and
aam
mov
pop
stos
loop
aam
sbb
or
ret
adc
or
loope
fwait
mov
nop
jg
sub
fld
retf
adc
sub
jnp
jo
aad
into
lea
fistp
stc
push
sahf
call
movs
les
pop
fmul
and
adc
cmp
mov
pop
stos
push
cwde
adc
add
mov
mov
and
push
(bad)
movs
inc
mov
sbb
test
or
sub
mov
add
in
loop
add
dec
sbb
jge
cmp
sub
xor
into
push
xor
mov
fsub
out
lea
sbb
cmp
lock
or
mov
rcl
sub
gs
outs
cmp
test
out
xor
jle
adc
jo
pop
mov
aaa
add
xchg
push
lods
cdq
push
addr16
adc
or
jmp
je
cmp
mov
loopne
retf
cmc
jecxz
sub
pop
ret
mov
mov
inc
and
lea
push
lea
inc
imul
js
and
cmc
retf
popf
push
mov
mov
cwde
dec
jmp
inc
mov
or
sahf
xchg
xchg
(bad)
push
adc
nop
and
mov
push
mov
xchg
fwait
add
adc
mov
adc
(bad)
or
mov
popa
call
jne
jmp
jecxz
out
cmc
shl
and
add
daa
xchg
mov
daa
shl
cli
movs
scas
popa
xor
retf
leave
mov
dec
fwait
jae
stc
sub
fwait
adc
adc
mov
mov
mov
jmp
imul
ins
out
push
repnz
jecxz
arpl
iret
je
xchg
ror
jnp
arpl
into
push
inc
jg
push
imul
scas
shl
adc
and
out
jp
jecxz
in
call
fimul
cmp
sbb
scas
test
and
mov
inc
aas
sub
jnp
in
jmp
sbb
(bad)
call
imul
cmps
cmp
mov
inc
add
ds
neg
mov
arpl
sub
std
div
push
retf
(bad)
or
mov
jae
push
xchg
lods
aas
sub
mov
sbb
cld
js
adc
popf
jp
mov
xchg
aas
lods
adc
xchg
pop
lea
jnp
lock
push
mov
outs
pop
lea
ss
stc
cmps
inc
add
std
and
mov
lods
in
adc
aas
sbb
pop
retf
push
hlt
daa
mov
ja
pop
xchg
mov
(bad)
out
mov
stos
nop
or
inc
fbstp
outs
test
cld
adc
pushf
stc
arpl
cmp
ja
sbb
stos
sahf
push
xor
sbb
inc
xor
aad
cmps
pop
jl
or
sub
inc
(bad)
into
push
sbb
pop
cmp
fadd
dec
inc
cmp
mov
fisubr
dec
bound
jmp
inc
or
xor
cmc
pop
out
ds
(bad)
addr16
mov
mov
inc
xchg
push
mov
in
cmp
inc
sub
cdq
sub
add
jp
imul
mov
inc
lds
mov
pop
and
hlt
jnp
and
xor
xlat
xchg
and
mov
jmp
and
fisubr
movs
retf
fwait
test
jecxz
and
popa
pop
jo
cdq
mov
out
idiv
inc
cwde
arpl
cwde
in
rcl
ja
xor
icebp
(bad)
retf
or
out
pop
jecxz
fld
js
fsubr
mov
mov
aas
ds
adc
outs
retf
cmova
cmp
pusha
lds
loop
lahf
pop
and
not
mov
popa
aad
je
daa
ficom
sub
adc
inc
cmp
scas
adc
inc
or
test
mov
jne
pop
jg
pop
mov
nop
dec
pop
fisub
sbb
jle
lods
out
je
lea
stc
jns
rol
retf
inc
ins
or
jbe
dec
xchg
mov
xchg
xchg
sub
inc
sbb
clc
mov
push
cdq
jbe
pusha
iret
push
inc
test
jb
xchg
and
test
movs
pushf
lods
dec
stos
sub
adc
gs
sbb
icebp
push
or
mov
push
sub
sbb
dec
sbb
jl
cli
sbb
push
loop
xchg
bound
in
and
dec
jns
sub
fidiv
and
push
ja
xchg
out
pusha
push
xor
imul
jg
and
push
mov
jg
std
es
cmp
xor
stos
mov
cmc
mov
(bad)
xchg
inc
sub
arpl
sti
mov
fsub
xor
pop
inc
cmp
inc
adc
js
jg
and
adc
push
in
leave
xchg
shl
add
mov
jl
popa
jmp
shr
test
es
in
and
fstp
out
(bad)
adc
cmp
or
int3
popf
nop
and
or
cmp
out
in
scas
cmp
pop
in
test
test
pop
sar
pop
adc
lods
dec
and
mov
add
adc
in
cmp
imul
rol
pop
test
adc
mov
sar
lods
shl
hlt
int
pop
shl
(bad)
data16
lock
adc
in
shl
inc
xor
nop
mov
ret
sub
cmp
xchg
test
fbld
push
push
lea
jb
outs
lahf
mov
shl
or
int3
jge
popf
cmp
aas
das
leave
sub
push
jne
jmp
add
js
into
pushf
test
xor
(bad)
adc
dec
shl
js
pop
mov
pop
cli
jne
xor
mov
push
or
lahf
pop
jb
out
ret
fwait
xor
js
jb
mov
mov
(bad)
fsub
jnp
pop
sub
clc
dec
inc
clc
mov
stos
push
arpl
scas
mov
icebp
(bad)
jg
mul
aam
push
mov
cmp
push
das
adc
cmp
fcmovbe
and
aas
and
inc
mov
sbb
xor
pop
int3
loop
pop
pusha
add
cmps
ret
cmp
addr16
cmp
fild
movs
lock
cmc
push
push
sbb
sub
pop
and
xor
retf
ss
jge
js
mov
cmp
sar
sahf
jecxz
cmp
or
bound
ins
mov
rol
and
push
icebp
ins
(bad)
xchg
(bad)
sti
ins
or
pusha
sbb
leave
jmp
ret
test
mov
and
and
lods
inc
mov
js
mov
inc
cmps
push
clc
sbb
inc
push
sbb
punpckhbw
sar
mov
pushf
(bad)
fdivr
sub
dec
push
sar
add
jae
outs
jl
mov
test
mov
mov
sbb
outs
push
ds
outs
inc
icebp
imul
dec
push
clc
jno
lods
repz
mov
and
jge
out
dec
sbb
fstp
push
sbb
cmc
inc
test
push
push
dec
(bad)
cmc
xchg
xchg
call
aam
cmp
add
cmps
not
adc
jmp
sbb
sub
cmp
shr
call
sub
das
cmps
add
shr
push
bound
and
push
inc
hlt
inc
ss
test
sub
push
pop
mov
hlt
mov
or
lahf
out
add
adc
xchg
mov
fld
stos
lahf
xchg
test
in
fcmovb
stos
test
repz
xor
pop
repz
or
popa
imul
jnp
(bad)
mov
ds
cmp
loopne
pop
ja
iret
xor
aam
xchg
add
mov
or
pop
xchg
xchg
arpl
dec
add
aad
gs
arpl
mov
inc
xor
dec
std
cmp
push
or
sbb
outs
pop
das
mov
aad
mov
add
idiv
cwde
cli
int3
or
imul
sub
lods
mov
dec
imul
sub
pop
pop
or
out
shl
cmps
inc
inc
inc
arpl
adc
fisub
leave
mov
mov
inc
sbb
rol
mov
push
or
cmp
in
adc
xlat
inc
cmc
(bad)
pop
adc
fidivr
ret
jp
loope
push
aas
in
push
xchg
xchg
and
sbb
loop
xchg
imul
aad
add
cld
mov
xor
test
mov
pop
inc
mov
push
(bad)
adc
sub
hlt
pop
add
and
rcl
scas
ds
outs
fsub
jecxz
cld
das
sbb
cmp
cli
std
ror
leave
(bad)
cmps
ficomp
cli
fidivr
lods
xchg
mov
fucomp
xchg
pop
dec
dec
push
fdivr
adc
sub
stos
ins
xchg
call
or
movs
dec
and
push
xchg
ja
dec
mov
mov
repz
and
ret
push
repz
pop
iret
push
aad
pop
lock
mov
mov
inc
mov
sbb
aaa
add
in
in
push
fmul
nop
mov
pop
std
lock
test
test
lock
imul
jb
test
pop
sub
or
or
(bad)
(bad)
das
sub
loop
imul
jg
mov
fistp
and
lea
int3
or
sub
sub
push
jo
mov
test
icebp
je
jb
iret
bswap
mov
adc
retf
ret
addr16
lods
push
mov
or
imul
in
pop
mov
pop
sti
or
fmul
ror
ret
sub
fist
xchg
or
dec
dec
cld
and
sub
loopne
push
mov
dec
ret
pop
cmp
push
fimul
data16
mov
xor
fisttp
out
out
and
jl
dec
test
inc
jno
addr16
outs
or
pop
dec
mov
adc
shl
into
cmp
jl
cmp
addr16
xchg
mov
daa
into
or
jns
push
ret
mov
adc
fwait
nop
daa
stc
stos
jns
mov
je
xor
lds
arpl
pushf
mov
loope
out
stc
loop
aad
outs
stos
xchg
enter
mov
sub
xchg
add
xor
mov
sbb
fiadd
lahf
loope
data16
pop
aad
mov
mov
gs
inc
or
sbb
push
enter
jp
arpl
and
jecxz
sbb
call
rcr
icebp
pushf
and
sub
in
cmp
(bad)
out
out
inc
sahf
sbb
pop
sub
push
shl
in
pop
pop
imul
clc
arpl
xlat
mov
pop
leave
stos
jmp
fwait
and
mov
adc
jo
loopne
add
shr
mov
and
test
dec
push
ja
ins
jle
pop
movs
stc
inc
(bad)
fs
inc
mov
jmp
xor
push
push
ja
lods
int
jge
out
je
jge
cdq
jnp
adc
dec
jg
movs
inc
xchg
das
push
adc
ja
dec
ins
mov
mov
es
int3
fldcw
add
push
jbe
hlt
imul
shl
loopne
lods
pop
sub
sbb
scas
sbb
fistp
dec
mov
aaa
add
adc
sbb
loopne
jmp
push
mov
aas
mov
imul
mov
mov
inc
pushf
inc
push
pop
inc
xor
jle
jno
repnz
sub
or
lock
jg
dec
ret
and
aaa
pusha
cmps
push
sbb
mov
cmp
cmp
imul
lods
(bad)
cmp
push
inc
mul
rcl
add
xor
add
sbb
pop
xchg
mov
push
(bad)
popw
xor
push
sbb
push
mov
sti
push
(bad)
loopne
sbb
(bad)
das
es
ins
sbb
xchg
in
xchg
aas
push
sub
sbb
(bad)
mov
out
pop
loopne
cmc
cmp
(bad)
mov
pop
rcl
pop
add
xchg
sbb
cmp
add
push
xchg
popf
sub
repz
rcr
pop
stos
enter
ja
push
cmc
popf
adc
(bad)
jne
add
sbb
mov
mov
xor
jne
push
adc
and
cmp
jae
cmp
push
shl
mov
jo
jo
shl
fidivr
push
pop
and
ror
cmps
div
in
(bad)
mov
push
loope
out
mov
adc
test
and
xchg
(bad)
push
mov
icebp
mov
add
jne
mov
loopne
sub
outs
push
xchg
xor
sti
pop
gs
mov
add
push
dec
retf
mov
add
mov
jge
into
pop
add
jmp
dec
ja
cli
sub
jge
ret
inc
and
push
daa
or
dec
fmul
fdivr
sub
fsub
lahf
sbb
pushf
nop
sub
mul
jmp
cmp
mov
and
inc
imul
add
inc
rcr
in
(bad)
rcl
pushf
mov
jo
arpl
cs
or
adc
out
inc
xchg
add
mov
(bad)
int3
adc
in
shl
lahf
out
rol
sbb
ja
outs
dec
mov
shl
jne
xchg
loop
cwde
mul
fsubr
pop
repz
xchg
sar
mov
(bad)
xchg
ja
xchg
stc
loopne
mul
inc
mov
loopne
jmp
dec
mov
jmp
mov
retf
pop
(bad)
in
cmp
sbb
idiv
iret
ins
loop
inc
mov
cmp
retf
popf
ins
test
push
pop
add
add
jg
mov
popa
std
mov
ud2
jmp
sub
scas
mov
into
(bad)
(bad)
jg
cld
test
push
sbb
dec
push
inc
leave
outs
or
and
(bad)
data16
sub
pop
outs
adc
mov
mov
into
jp
ins
jecxz
mov
jle
iret
(bad)
sahf
out
jmp
cmp
jmp
jmp
adc
sahf
imul
rcr
xlat
cmp
pop
add
xlat
add
mov
imul
mov
and
inc
fst
outs
inc
mov
cdq
jae
mov
sub
pop
arpl
inc
cli
add
ss
xor
sub
fmul
and
fld
loope
dec
mov
mov
fwait
dec
mov
das
xor
jg
leave
mov
mov
add
rcr
xchg
dec
test
in
sub
mov
repnz
dec
cld
punpckldq
(bad)
ret
inc
fdivrp
jg
shr
dec
test
(bad)
cs
jmp
movs
inc
(bad)
pop
(bad)
icebp
mov
iret
pop
sub
dec
test
jae
push
mov
sub
xchg
mov
mov
fcom
movzx
gs
and
xchg
dec
cmp
jg
int3
mov
jbe
xchg
jge
push
bound
jle
dec
push
dec
test
scas
push
add
push
xor
adc
push
mov
clc
dec
leave
int3
out
jns
sub
add
and
(bad)
dec
loopne
pusha
pop
mov
sbb
push
cmovl
pop
sub
mov
sti
sbb
inc
and
inc
push
loopne
pushf
mov
inc
xor
cmp
pop
stos
pop
mov
repnz
pop
xchg
jb
adc
and
add
enter
ror
add
shl
das
pop
popf
retf
xchg
mov
in
xlat
pop
xchg
fwait
push
aaa
(bad)
std
scas
cdq
push
sub
jmp
out
sbb
(bad)
pushf
xchg
call
xor
cli
push
pop
retf
jg
adc
(bad)
mov
repz
xchg
pop
loop
jmp
xchg
out
out
adc
out
mov
inc
das
sub
dec
inc
mov
aas
loopne
imul
mov
or
mov
xchg
out
(bad)
or
push
mov
scas
(bad)
mov
in
dec
call
into
mov
mov
jne
and
sub
xlat
adc
or
push
jnp
fiadd
fwait
mov
pop
mov
std
jge
mov
leave
scas
mov
pop
ja
or
xchg
cmp
add
mov
out
ss
retf
in
clc
mov
xchg
outs
push
pushf
mov
dec
mov
xchg
lds
gs
sbb
pusha
retf
cs
mov
(bad)
or
cmp
pop
mov
mov
mov
adc
call
mov
cmp
pop
xor
push
mov
xlat
jb
pop
adc
stc
sub
and
pop
fcomp
std
sahf
jmp
aas
xchg
ja
scas
test
xchg
shl
mov
jns
repz
popa
or
cmp
mov
pop
adc
mov
imul
push
scas
and
pop
push
mov
xchg
adc
and
sbb
jecxz
(bad)
lds
inc
and
mov
aad
dec
add
inc
nop
and
int
dec
inc
shl
add
xchg
(bad)
in
or
das
lea
cli
nop
mov
sti
push
sar
aad
loopne
push
mov
imul
mov
jle
push
int
cmp
dec
mov
lea
inc
bound
jmp
add
jecxz
dec
jbe
jbe
daa
mov
push
ret
sbb
cli
cmps
push
(bad)
mov
sbb
sub
mov
jecxz
popf
mov
pop
call
xchg
mov
test
cmp
imul
cwde
arpl
mov
push
imul
ret
mov
push
pop
xlat
or
mov
mov
aad
hlt
out
jmp
jns
jl
mov
lds
(bad)
sbb
or
push
or
dec
rol
add
mov
xchg
imul
sub
ds
fimul
add
sub
xor
mov
xlat
out
test
dec
aaa
int
aad
push
inc
ins
adc
sub
xchg
hlt
cmp
jbe
cmp
adc
mov
scas
sti
xor
mov
out
(bad)
loopne
call
inc
(bad)
rcr
xchg
jl
jbe
dec
lahf
nop
inc
pop
sbb
mov
cld
scas
sbb
lock
sub
jns
(bad)
fild
or
jle
sti
lea
or
mov
sti
xor
and
mov
repnz
add
push
xchg
ror
jmp
cli
int3
jge
call
inc
pop
mov
cmp
xchg
outs
xor
jns
pop
lods
mov
jne
mov
pop
call
inc
outs
stos
jge
mov
ins
adc
mov
xor
sub
and
inc
mov
scas
xchg
icebp
pop
ror
add
clc
loop
repz
imul
cli
mov
sub
pop
retf
jp
dec
shl
imul
stos
jmp
(bad)
imul
das
xchg
(bad)
or
mov
xlat
imul
sbb
sub
jle
cmp
pusha
outs
out
leave
imul
push
loop
push
sahf
fucomp
dec
aad
loope
sbb
mov
and
shl
test
mov
push
cld
(bad)
call
daa
and
retf
fwait
scas
pop
repnz
add
cdq
shr
jmp
push
leave
(bad)
push
add
in
stos
test
xchg
into
jl
jle
inc
lods
cmc
inc
pop
sub
mov
stos
cmp
or
test
push
daa
daa
(bad)
cmp
sub
push
(bad)
sbb
(bad)
xchg
push
mov
and
(bad)
(bad)
cld
out
in
dec
xor
cmc
jns
popa
add
sar
hlt
aaa
call
push
pop
mov
dec
cmp
shr
call
data16
sahf
jmp
mov
inc
in
inc
xor
and
fnsetpm(287
sub
out
fadd
jmp
repz
sahf
sub
inc
mov
inc
daa
loope
out
mov
mov
adc
enter
mov
cmp
stos
lods
push
xlat
out
clc
xchg
mov
(bad)
jo
push
leave
sti
push
outs
test
sbb
lods
inc
lds
lds
jmp
cdq
mov
push
iret
cs
rcl
or
push
icebp
or
jg
push
xchg
(bad)
jl
or
push
aas
lods
push
add
or
movs
outs
test
aaa
mov
cmp
and
pop
fs
mov
jmp
cmp
jo
aas
enter
cmp
pop
clc
ret
mov
test
fild
cmp
aas
cmc
inc
in
dec
dec
and
shr
sbb
and
or
int3
aam
in
or
bound
test
clc
pop
adc
imul
sub
push
adc
jmp
imul
pop
jae
or
les
stos
xchg
repnz
inc
or
sub
repz
lea
ret
cs
sub
xchg
sub
inc
pop
shl
test
sub
mov
sbb
jmp
or
retf
mov
mov
jge
pop
pop
into
inc
push
rcl
iret
das
sbb
sti
fwait
pop
shl
out
test
je
std
(bad)
or
cmp
push
cli
push
xchg
inc
mov
jle
shr
test
lods
inc
rcl
js
inc
lods
add
sbb
jmp
sti
push
sub
pop
mov
inc
popf
mov
sbb
fadd
stos
xchg
and
mov
mov
retf
mov
gs
fst
sub
sbb
(bad)
mov
cmp
stos
adc
push
mov
jmp
movs
lds
xlat
jp
ss
js
dec
ret
and
add
popf
fistp
out
xor
inc
jbe
aaa
adc
outs
cmp
sub
and
jnp
or
add
inc
cwde
in
fnstcw
xchg
cmp
xchg
push
das
sbb
and
addr16
add
out
adc
mov
xchg
add
retf
imul
out
xchg
pop
mov
ins
xor
lock
dec
xchg
and
add
aas
jns
nop
push
fldcw
mov
add
lahf
dec
mov
call
mov
push
aam
fdiv
inc
xchg
movs
cwde
aam
dec
shr
stos
jmp
movd
jle
add
add
(bad)
cs
sbb
test
aas
add
jnp
sub
xor
ret
jecxz
(bad)
jmp
pop
jno
adc
mov
fimul
mov
mov
clc
imul
pop
es
imul
add
pop
pushf
xlat
test
je
cld
add
cs
cli
(bad)
popa
mov
inc
push
dec
sbb
lods
movaps
cli
mov
in
jmp
jge
ins
jne
sti
test
gs
pop
loope
jmp
pop
cmp
inc
(bad)
mov
stos
pop
ror
pop
push
jo
out
mov
mov
ins
mov
inc
mov
daa
loop
ret
not
push
xchg
sub
sub
gs
mov
test
mov
stos
dec
fwait
mov
test
cmp
ds
mov
int
cmp
xchg
arpl
fnstsw
cpuid
mov
out
cmp
in
cmp
aam
les
(bad)
into
jmp
mov
fcmovu
mov
mov
and
push
pop
dec
je
push
clc
fild
cmps
mov
or
sub
jo
jnp
enter
addr16
or
jecxz
shr
mov
pop
xchg
fisubr
xchg
add
or
sbb
imul
loopne
out
add
enter
in
adc
andnps
jmp
(bad)
and
and
out
mov
jne
fistp
inc
mov
dec
add
scas
and
lds
vmovhpd
cmp
mov
xor
xchg
imul
cmp
lds
std
push
aam
xchg
test
sub
sub
ss
dec
cwde
les
in
and
call
mov
pop
ficom
sub
inc
test
call
push
mov
pop
out
aaa
nop
and
pushf
or
xchg
(bad)
je
xor
and
push
(bad)
(bad)
ins
imul
stc
nop
out
push
dec
clc
movs
shl
ins
repnz
xor
pop
xor
mov
jo
or
pop
pop
(bad)
cli
cmp
add
or
inc
jb
jo
jle
pusha
in
in
daa
pop
or
nop
cmc
in
cmp
xor
aas
cmps
jne
and
pop
fisubr
inc
push
stos
cmc
lahf
addr16
das
clc
fidiv
jmp
and
sbb
push
fisubr
xchg
xor
jmp
retf
stos
adc
neg
xlat
(bad)
mov
test
bound
ja
fnstsw
cmp
call
test
jo
jmp
out
clc
pushf
ss
xchg
mov
jo
in
cmp
pop
leave
lods
std
rol
jmp
nop
xor
mov
pop
sti
sub
sub
dec
mov
push
int3
jmp
jbe
xor
jnp
or
cs
pop
ss
out
sbb
and
jno
add
cwde
(bad)
push
mov
fwait
add
out
stos
neg
sbb
ins
std
xchg
and
jmp
sub
pop
push
jbe
dec
push
jmp
or
cmp
leave
dec
loop
popa
sbb
stc
jp
xor
or
mov
js
sub
(bad)
cmp
add
xor
loop
mov
inc
or
and
mov
xor
xor
aam
xor
xchg
jmp
add
rcr
fmulp
pop
cmp
das
xchg
fmul
inc
jo
cli
xchg
pop
cmps
cwde
jnp
sub
les
cmp
in
in
inc
jecxz
das
cmps
mov
xchg
test
add
push
push
cmps
inc
xchg
dec
cwde
sbb
test
add
inc
fs
fnstcw
(bad)
dec
cs
pop
stos
sti
ret
xor
repz
cmp
data16
jp
inc
dec
and
clc
mov
sub
add
in
sbb
dec
mov
xor
cmp
lods
add
es
push
mov
push
pushf
dec
lock
pop
xchg
mov
or
or
add
and
cdq
pop
inc
call
xor
in
mov
inc
sub
retf
inc
jae
stos
lahf
ja
add
sahf
data16
in
jmp
mov
inc
jg
pop
ins
psubw
int
js
call
movs
mov
ret
aam
push
sub
xor
pop
push
dec
cmps
xor
xchg
pop
inc
or
fwait
pop
scas
mov
mov
or
push
mov
(bad)
mov
stc
cdq
mov
add
mov
add
inc
dec
aas
scas
mov
xor
push
retf
mov
push
jmp
mov
pop
and
out
push
rol
push
add
pop
add
(bad)
ins
push
mov
add
js
jecxz
cmps
pop
xchg
inc
cld
int3
test
cmp
inc
sti
xchg
xchg
xor
xor
mov
outs
sti
stos
push
lahf
xor
jge
imul
jns
and
lahf
mov
pushf
pop
sbb
xchg
and
mov
jnp
cld
xor
fimul
mov
adc
dec
push
sbb
inc
dec
lea
jge
cmps
xlat
jle
pop
or
fs
aad
or
mov
mov
lds
mov
sbb
xchg
or
and
cmp
or
sub
xor
retf
ror
push
out
mov
movs
inc
in
rol
jbe
or
sub
fsubr
nop
pop
lea
cmp
cmp
std
daa
outs
rcl
add
stc
cmps
jae
ss
std
mov
mov
add
lods
fninit
cmps
cmp
retf
xchg
and
rcr
cmc
sbb
push
in
aam
stos
pop
xchg
xchg
cmps
sti
arpl
loope
xchg
mov
pop
mov
dec
shl
dec
push
(bad)
popa
dec
dec
adc
loope
push
xor
outs
in
(bad)
idiv
jb
xchg
push
cld
jnp
sub
dec
cmp
push
test
aad
push
imul
jl
cmps
fsubr
das
add
or
pop
lods
cmp
mov
mov
add
and
cdq
push
scas
daa
xor
dec
pop
icebp
inc
lds
mov
sbb
or
dec
jecxz
mov
outs
inc
lods
mov
dec
add
out
and
pop
retf
nop
pop
loope
sbb
loopne
mov
cmc
dec
jns
jns
mov
dec
rcl
out
sbb
stos
or
in
ret
pushf
xor
ja
aam
retf
dec
mov
mov
adc
jae
fdiv
dec
cmp
jl
stos
imul
jmp
and
fs
mov
mov
xchg
jecxz
jae
pop
pushf
mov
or
sub
je
push
pushf
call
scas
fnstsw
clc
mov
cdq
aas
xor
xor
cmp
leave
mov
xlat
adc
bound
jnp
shr
popa
sub
outs
mov
jl
loopne
jmp
enter
lods
and
xchg
mov
ins
jmp
in
hlt
add
fstp
pusha
es
mov
popa
mov
mov
mov
frstor
out
push
push
mov
sar
mov
xor
mov
mov
gs
retf
stos
xor
dec
stc
in
outs
mov
fcomp
mov
sbb
clc
inc
out
ret
(bad)
push
pop
pop
gs
hlt
and
imul
mov
ss
jmp
mov
call
out
sub
lahf
xchg
lock
push
cmp
jecxz
push
lahf
sub
lods
mov
or
and
pop
cmc
movs
jns
push
lahf
add
stos
(bad)
leave
leave
lds
fadd
repz
js
adc
jmp
inc
imul
add
sub
ins
int3
(bad)
jbe
mov
dec
fldcw
adc
jmp
in
xchg
sti
lock
sbb
pop
or
rol
pop
stos
rcpps
(bad)
mov
pop
xor
push
neg
xchg
inc
adc
cdq
cmp
rcl
sub
xor
mov
inc
add
pop
enter
call
and
imul
ja
stos
imul
adc
mov
in
mov
xchg
in
jge
mov
mov
div
(bad)
xlat
jmp
enter
dec
jno
pop
ror
pop
or
test
xor
mov
dec
mov
fadd
je
loop
pop
mov
cmps
dec
push
sub
das
cmc
mov
cli
xor
(bad)
sub
dec
push
dec
inc
aas
hlt
outs
xchg
out
mov
inc
mov
cmp
adc
outs
mov
into
sub
jl
adc
jl
in
aas
xchg
jo
mov
mov
jmp
ret
dec
mov
jno
fild
jns
and
and
add
dec
lods
adc
mov
cmc
cmps
out
mov
mov
sbb
clc
cmp
mov
push
or
sub
xchg
loope
xchg
xchg
mov
test
and
or
sar
xor
in
and
sbb
not
sbb
cmc
int
xchg
int
iret
outs
mov
and
jae
pusha
test
mov
add
jp
fdiv
or
movs
mov
xlat
sub
fisubr
inc
iret
aam
(bad)
mov
ss
fstp
lahf
jecxz
xchg
jo
pusha
mov
aad
(bad)
cli
ja
add
outs
jb
mov
xchg
clc
dec
and
sub
(bad)
xchg
scas
and
les
scas
xor
iret
leave
shl
sbb
into
lods
pop
push
call
push
pusha
sbb
cmp
jno
pop
ss
sub
mov
(bad)
mov
jns
and
lods
lds
arpl
inc
xor
mov
push
jmp
in
jb
rcl
and
mov
mov
xlat
push
adc
sahf
jmp
ret
jmp
xor
and
xor
or
mov
cli
push
inc
inc
fstp
aaa
pusha
pop
aam
femms
mov
sub
mov
jns
push
int
push
(bad)
and
and
jae
test
sbb
sar
inc
push
pushf
add
mov
cmp
adc
dec
inc
fcomp
pop
pop
pop
and
je
mov
and
imul
sub
xchg
push
(bad)
and
mov
jbe
xlat
popf
mov
jo
dec
pop
mov
xchg
sbb
push
ret
in
stos
ficom
mov
adc
push
adc
(bad)
mov
test
or
retf
lods
and
inc
push
xor
in
add
xchg
in
lods
fistp
mov
cmp
rcr
lods
in
jnp
lea
arpl
or
int3
into
mov
js
push
adc
js
cmp
mov
rcl
clc
jo
sahf
dec
outs
retf
add
mov
in
mov
shr
push
jp
lds
jecxz
adc
arpl
popf
loop
xor
push
shl
add
mov
xchg
dec
cmp
xor
inc
dec
(bad)
fsubr
shr
cmp
jmp
add
loope
in
fld
(bad)
repz
fs
jmp
in
les
sbb
out
adc
in
mov
jp
pop
sub
add
push
add
mov
push
out
rol
adc
jo
mov
xchg
fsubr
vmwrite
fdivp
ss
add
or
mov
movs
mov
dec
mov
mov
daa
cwde
loop
push
imul
sbb
int3
jg
pusha
push
push
shl
gs
into
pop
lea
inc
or
sub
jae
lea
test
ins
mov
mov
into
out
or
call
push
mov
(bad)
data16
add
cli
mov
and
sbb
push
rol
pop
(bad)
push
shl
jge
jo
stos
fistp
adc
cmp
fsub
jg
cmp
sahf
xor
cmp
les
sub
dec
sbb
(bad)
movs
pop
and
ret
adc
sar
das
in
shr
adc
ss
jecxz
(bad)
retf
cmp
or
cmp
scas
into
ror
add
push
je
call
inc
push
cs
pop
sbb
cmc
mov
outs
js
(bad)
cmps
cmp
repz
wrmsr
sbb
cdq
xlat
std
(bad)
add
sbb
ds
fdivr
push
dec
ja
call
pop
icebp
je
mov
jmp
adc
mov
ret
cld
scas
cmc
mov
xor
ja
aas
int
mov
push
pop
outs
cmp
test
(bad)
mov
or
pop
retf
ss
inc
jecxz
jp
cmps
scas
call
scas
or
dec
inc
test
mov
rcr
mov
cmp
paddw
imul
adc
rcl
push
mov
ss
dec
(bad)
in
rcr
jl
pop
push
mov
dec
cld
out
movs
mov
ror
mov
enter
add
and
js
fdiv
xor
sub
add
pop
add
div
xcrypt-ofb
cmps
scas
xchg
movs
loopne
mov
neg
inc
push
iret
hlt
inc
pop
retf
pop
pop
ja
loop
adc
push
outs
loope
add
mov
lods
adc
imul
or
jno
push
inc
sub
xor
imul
pop
dec
in
jg
or
fwait
or
loop
mov
and
retf
fwait
pop
mov
inc
jno
xor
dec
retf
psubsb
daa
mov
push
mov
xor
xchg
mov
int
cmp
push
int
cld
ja
xor
movs
mov
popa
nop
xor
jl
outs
jns
sbb
out
xchg
enter
lods
mov
inc
gs
sub
ja
enter
out
out
add
jae
call
mov
and
mov
add
das
idiv
push
adc
cmp
fucomp
mov
mov
push
in
pop
ror
sub
icebp
inc
lods
mov
pop
aas
cld
inc
gs
std
adc
arpl
inc
mov
or
fimul
ins
ror
cdq
std
inc
xchg
std
jae
mov
mov
int3
mov
dec
leave
sbb
pushf
adc
cld
push
xchg
xor
int3
push
xor
sub
paddw
mov
pusha
xchg
(bad)
aas
or
aas
mov
push
repz
aad
retf
std
mov
pop
pop
adc
shr
mov
js
or
cmc
call
cld
xchg
jge
out
pop
not
adc
jmp
sbb
in
out
push
jbe
aaa
mov
sub
pop
icebp
ja
loopne
lods
sub
ficomp
inc
mov
rol
push
das
call
pop
push
xchg
loopne
sub
aam
out
xlat
xchg
lea
mov
outs
xor
inc
loope
test
loopne
(bad)
add
mov
mov
sub
dec
sub
mov
adc
adc
dec
cmp
(bad)
lahf
and
push
jne
sar
dec
xor
pop
or
cmp
outs
bound
rcl
push
jl
xor
inc
sbb
xor
and
(bad)
mov
stos
arpl
xor
lds
movs
or
push
and
dec
pop
pop
push
and
mov
cmp
jb
pop
jmp
dec
push
fdiv
xchg
mov
imul
icebp
mov
std
or
sub
inc
les
adc
xchg
popf
in
out
cmp
mov
stos
bsr
push
mov
add
sub
mov
jmp
mov
cli
cmp
loop
or
jmp
xchg
lahf
sar
repnz
xor
ficom
ins
mov
add
imul
inc
jbe
fs
mov
sbb
jbe
mov
cmps
ins
pop
(bad)
hlt
in
into
out
aaa
xor
and
sub
jbe
movs
aad
sti
jl
pop
inc
not
inc
mov
xchg
pop
js
in
int
in
mov
aaa
jae
rol
cmc
or
jmp
mov
gs
jb
jo
cmps
or
fwait
out
cmps
sbb
adc
jae
or
jmp
ins
dec
mov
(bad)
data16
jne
or
or
jg
or
xlat
inc
inc
sub
mov
xchg
addr16
and
add
jns
setae
cmps
fnstsw
in
sub
dec
inc
das
push
fcom
pop
inc
je
add
mov
push
stos
(bad)
fcomi
btr
mov
and
jl
daa
out
mov
leave
add
pop
stos
idiv
fnsave
(bad)
mov
pop
arpl
mov
je
xor
inc
repnz
scas
cmp
dec
mov
or
out
(bad)
jmp
movs
pop
es
jnp
sbb
cmp
cli
push
inc
(bad)
mov
mov
fs
inc
xchg
push
dec
jo
test
cli
cmp
pop
dec
push
ja
es
arpl
pop
lods
rcr
cmps
add
jg
cld
cmc
fld
nop
int
mov
test
mov
mov
adc
scas
sbb
mov
repz
icebp
xchg
jmp
vmaxsd
sub
inc
mov
movs
sub
push
add
pusha
repz
xchg
ss
xor
fnstenv
in
or
inc
add
add
push
cmp
push
adc
cwde
add
outs
out
mov
pop
repnz
jno
xchg
cli
out
xchg
cmps
mov
std
adc
mov
or
mov
adc
cmp
xchg
cmps
out
icebp
fdiv
inc
pop
and
push
push
xchg
and
pop
mov
push
mov
js
sbb
adc
repz
jge
mov
sub
cmp
fnstcw
pop
pushf
and
dec
sub
call
daa
xor
cmp
fadd
cmp
mov
in
mov
cmps
add
lds
scas
cmps
inc
popf
retw
xchg
pop
mov
aad
pop
cmp
xchg
bound
sahf
xchg
sbb
xor
shl
daa
jmp
pushf
je
loope
or
imul
ffreep
jne
ss
push
cmp
test
cmp
repz
or
cmp
jmp
xchg
sub
fistp
sub
fcmove
xor
sti
outs
repnz
nop
xchg
mov
jb
in
movs
dec
xor
push
jno
dec
jmp
sqrtps
neg
push
mov
xor
scas
dec
mov
scas
mov
cmp
or
repnz
xor
pop
mov
jecxz
retf
imul
or
outs
jmp
pop
ror
mov
lock
or
(bad)
push
inc
mov
mov
mov
xchg
push
lds
xchg
pop
mov
in
ror
call
mov
pop
pop
in
pop
mov
jmp
(bad)
(bad)
sub
or
inc
retf
cmps
add
or
jb
fmul
iret
int
mov
outs
repnz
jne
ds
mov
or
push
call
cmp
mov
daa
fwait
aad
idiv
mov
sub
mov
dec
jo
repz
into
xchg
mov
rcl
push
lds
xor
in
mov
outs
mov
lods
outs
add
call
retf
add
(bad)
test
dec
push
cmp
xchg
mov
bound
and
loop
mov
aad
not
mov
imul
cmc
aaa
retf
pop
sbb
dec
push
mov
test
es
icebp
jge
sub
or
or
xchg
jmp
jno
xchg
lods
xor
pop
leave
xchg
dec
iret
int3
jo
pop
jbe
mov
sbb
jbe
and
stos
or
pop
xchg
adc
jle
sub
pop
ja
sub
adc
int3
sub
dec
jns
mov
adc
mov
std
xor
jp
mov
pop
xchg
mov
dec
mov
adc
(bad)
adc
cmc
ins
imul
call
push
retf
push
or
xor
jo
pushf
and
cli
test
scas
cld
adc
or
dec
movs
xchg
pop
data16
push
ja
dec
push
xor
xchg
and
mov
pop
fisttp
mov
je
icebp
xor
xor
mov
retf
mov
loopne
mov
shr
ins
icebp
pop
adc
fstp
xchg
inc
add
inc
push
ins
es
loopne
xchg
dec
mov
xor
js
dec
push
pop
stos
jb
fcmovnbe
and
push
xor
fmul
out
xor
mul
mov
and
fmul
pop
push
xor
xor
and
out
in
pusha
lds
aas
scas
mov
fstp
into
popa
jmp
popa
and
imul
or
push
inc
hlt
sti
int
sahf
in
mov
inc
mov
mov
test
and
shr
xlat
jl
mov
xor
and
movs
mov
pop
mov
ror
shl
mov
push
sbb
arpl
and
add
shl
test
mov
sbb
adc
(bad)
or
fcom
out
and
add
dec
dec
or
aas
addr16
add
data16
addr16
xchg
scas
add
sbb
xchg
mov
pop
popf
sub
add
mov
iret
repz
loop
pop
stos
cli
push
fdiv
repnz
stc
adc
fsubr
cmp
sub
mov
cmp
cmp
fistp
data16
aaa
hlt
jmp
sbb
push
scas
jmp
cmp
clc
dec
xchg
sbb
das
jge
pop
adc
ficomp
popa
and
ss
test
aad
in
adc
test
ja
sub
fcomp
lds
dec
add
or
mov
lods
mov
(bad)
cmp
jecxz
pop
pushf
add
jae
dec
mov
dec
fwait
sub
sbb
fwait
out
ret
adc
or
retf
test
(bad)
stos
call
push
and
ins
pushf
adc
dec
xchg
or
or
jnp
scas
pop
test
jbe
or
lea
xchg
dec
int
inc
lods
cmps
fwait
pop
outs
mov
cs
push
push
jno
jbe
adc
sub
mov
sbb
ror
(bad)
cmp
loopne
jnp
(bad)
jmp
lods
xchg
call
and
cmp
stos
into
xchg
inc
push
or
sbb
outs
jg
std
or
dec
and
call
ja
push
sub
add
popf
sbb
stc
das
pushf
out
fistp
dec
das
mov
cdq
pop
(bad)
leave
je
cs
retf
mov
or
icebp
inc
push
sub
xchg
mov
or
mov
add
mov
and
sbb
xchg
shl
pop
out
out
loopne
out
inc
lock
in
jb
icebp
daa
in
push
xchg
inc
add
rcr
out
aad
and
sub
fistp
adc
out
push
out
pop
jb
mov
inc
iret
loop
adc
(bad)
movs
repz
jle
int3
lock
push
pop
scas
inc
fstp
add
lds
xchg
add
dec
(bad)
jnp
xchg
cmp
sub
xchg
iret
fbld
fcmovne
ficom
add
mov
ret
add
shl
dec
jge
arpl
es
lahf
out
push
rol
add
cli
add
adc
add
cld
push
idiv
cli
pop
(bad)
popa
retf
lea
stos
cld
fcomp
mov
mov
cld
adc
mov
mov
and
shr
ja
stos
push
fidiv
inc
shl
cld
adc
inc
inc
fdiv
add
ret
leave
loop
cwde
(bad)
inc
pop
cmp
add
imul
sub
or
loope
inc
pop
sub
retf
mov
mov
xchg
pop
mov
lods
xchg
sbb
int3
add
mov
dec
mov
into
iret
aad
pop
sub
xor
sub
inc
stos
frstor
adc
inc
cmp
stos
out
int3
leave
fucomi
mov
push
add
cmp
lds
fiadd
in
mov
lods
cmp
js
and
sub
(bad)
std
mov
mov
xor
gs
push
pop
inc
pusha
pop
xchg
vprotw
jnp
dec
pop
cli
push
rol
ror
into
stc
adc
cwde
nop
into
push
sub
fsubr
adc
sub
xchg
ficomp
xor
mov
push
xchg
rcl
jmp
(bad)
mov
popf
or
shl
push
sub
and
pop
les
aas
mov
xor
adc
xor
xor
daa
neg
push
retf
mov
shl
popa
daa
push
adc
push
xor
adc
jmp
(bad)
jnp
and
iret
sub
out
mov
repnz
cmp
jno
bound
ss
and
xchg
call
mov
push
(bad)
idiv
and
rcl
jl
cmp
xchg
pop
inc
adc
mov
cmp
fs
push
add
sub
outs
int3
mov
cmp
aaa
je
lahf
or
pop
ror
sub
jl
jp
fs
xchg
in
scas
add
inc
xor
or
inc
ins
cs
mov
(bad)
call
std
(bad)
adc
or
adc
lods
push
fld
push
js
mov
pop
xchg
shl
pop
push
movs
fidivr
lahf
ja
push
mov
es
adc
dec
ja
xlat
sar
mov
enter
test
dec
scas
jg
div
ds
adc
loope
xchg
out
mov
cwde
cld
xrelease
xchg
adc
stc
jns
push
sbb
rcr
mov
inc
push
sbb
clc
add
ret
mov
addr16
xchg
or
sub
stos
sbb
push
in
dec
pusha
xor
mov
in
dec
pop
sub
xchg
sbb
mov
mov
adc
ds
das
push
xor
xadd
or
jo
(bad)
sbb
fadd
mov
pusha
inc
outs
push
jo
sub
ficom
mov
mov
fst
and
add
js
test
test
(bad)
je
retf
adc
sahf
mov
jne
push
fnstenv
adc
in
cwde
mov
pop
adc
jo
dec
xchg
(bad)
mul
inc
lahf
ja
gs
popa
and
cld
add
lahf
sbb
and
scas
out
add
retf
pushf
push
vmread
mov
xor
mov
inc
xor
adc
std
add
not
rcl
test
mov
stc
ret
dec
lods
test
or
mov
(bad)
leave
sahf
jle
sub
adc
dec
pop
pop
mov
sbb
clc
repnz
arpl
fist
push
sbb
dec
sahf
sbb
pop
test
or
mov
inc
retf
sub
in
lock
push
cmp
xor
jmp
jo
dec
jecxz
adc
cmp
shl
movs
mov
bnd
enter
vfrczss
mov
out
test
into
mov
rcr
mov
mov
pop
(bad)
scas
loopne
addr16
sub
xchg
push
sbb
add
(bad)
call
les
sbb
loop
shl
out
cmps
mov
sub
xchg
arpl
iret
or
imul
repz
dec
outs
push
jle
xor
mov
pop
ret
cs
sbb
xor
adc
loope
cwde
lock
addr16
hlt
xchg
inc
mov
cmp
push
sbb
js
sbb
sub
mov
div
jns
fdivr
push
ins
cmc
adc
(bad)
mov
cwde
push
dec
pop
adc
push
loopne
dec
aam
in
rcr
clc
or
adc
retf
in
xor
(bad)
aad
inc
xchg
retf
icebp
pop
cmps
xchg
xchg
jns
retf
int
cs
jne
inc
dec
ror
cli
jmp
dec
dec
xor
mov
dec
data16
ror
mov
daa
jmp
in
mov
mov
sbb
rol
jns
clc
aad
cmp
fidivr
mov
inc
or
push
sub
icebp
sahf
ins
push
xchg
push
sti
mov
out
pop
push
mov
stos
out
hlt
push
pop
movs
cwde
inc
hlt
xchg
or
xchg
scas
pushf
mul
fcmove
pop
and
out
sbb
enter
xchg
mov
(bad)
xor
pop
imul
or
ins
xchg
shr
jmp
xchg
fdiv
xchg
dec
push
scas
jne
inc
mov
xor
xchg
cmp
xchg
push
mov
neg
sar
xor
mov
mov
mov
dec
jnp
add
sbb
loop
ins
push
cmp
aad
int
cmp
xchg
mov
sti
push
test
mov
add
iret
aam
je
ins
std
les
(bad)
sub
out
xor
cmp
and
(bad)
test
loop
movs
pop
and
and
outs
nop
dec
push
das
icebp
jp
cli
jnp
jns
jmp
or
or
xor
fcmovu
not
out
sbb
pop
mov
ror
mov
sub
dec
es
mov
out
loop
xor
inc
push
jbe
rol
mov
jecxz
pop
mov
dec
and
data16
loope
cmp
xor
cli
addr16
mov
pop
cmp
mov
mov
and
mov
mov
sub
mov
sub
retf
cmp
movs
int3
stos
push
stos
jne
fwait
loopne
(bad)
mov
add
push
add
lock
cwde
sbb
repz
imul
inc
push
aad
(bad)
movs
(bad)
call
ss
inc
jb
xchg
mov
sti
inc
mov
cld
les
inc
cmp
adc
test
rol
clc
cmp
xchg
fmul
pop
sbb
add
(bad)
leave
mov
(bad)
daa
mul
mov
mov
lahf
mov
xlat
iret
(bad)
imul
std
movs
jg
xchg
cmc
ret
cmc
mov
pop
and
sti
mov
pop
xor
retf
xchg
xor
mov
pop
test
and
pushf
shr
mov
ror
in
test
xchg
cli
adc
adc
adc
or
bound
jl
rcl
std
ins
and
mov
shl
out
push
push
mov
je
lahf
inc
pop
(bad)
push
test
(bad)
push
xlat
cli
pop
(bad)
in
leave
mov
jo
(bad)
cmp
out
push
loope
fld
xor
dec
push
jge
push
add
into
mov
push
test
push
outs
loopne
call
stc
mov
(bad)
js
fsub
inc
cmp
int
add
mov
jae
pusha
in
mov
cdq
lock
(bad)
aam
add
push
pop
cmp
and
xchg
fwait
das
sub
(bad)
cmp
je
lea
dec
ja
mov
iret
loopne
sub
mov
pop
(bad)
dec
sub
imul
push
xor
push
stos
xor
jg
pop
push
test
outs
mov
cld
mov
add
shl
jp
adc
ror
push
inc
cmp
inc
(bad)
mov
fisubr
adc
scas
lds
(bad)
lods
popa
arpl
aad
xor
xor
inc
xchg
pop
push
adc
push
mov
jecxz
inc
out
pop
data16
cmps
dec
mov
lahf
sub
push
mov
gs
add
lea
jns
pushf
sbb
ret
sti
xchg
push
dec
dec
dec
fisub
cmp
adc
ins
adc
cwde
test
and
daa
xlat
push
push
mov
imul
out
adc
mov
add
mov
cmp
fmul
push
js
adc
je
and
in
sub
inc
movs
jg
ror
mov
cbw
icebp
add
(bad)
cmp
mov
mov
out
or
ret
test
test
adc
cmc
mov
or
push
test
aas
int
cmp
xor
(bad)
leave
push
and
fidiv
popa
repz
xchg
int3
iret
mov
icebp
pop
adc
add
pop
pop
dec
adc
or
repnz
jge
jo
xchg
jbe
inc
adc
xchg
mov
inc
sbb
push
sbb
stos
and
ret
pop
fstp
imul
daa
xor
fs
xchg
jno
(bad)
icebp
dec
push
push
sbb
ja
or
jo
cli
pop
leave
add
call
dec
sub
mov
jecxz
mov
pop
jno
retf
ret
lods
ja
xchg
pop
or
dec
ins
out
or
addr16
stc
dec
fcmovnu
sahf
pop
push
cmp
mov
mov
das
fdivr
cwde
cs
popa
mov
sub
add
neg
dec
retf
dec
repz
mov
pop
outs
inc
mov
add
cmc
lahf
pop
sar
sub
enter
jecxz
and
hlt
adc
or
nop
mov
loopne
int
fisub
fisub
mov
bnd
dec
dec
ror
test
push
mov
sub
xchg
je
jo
jl
mov
out
cmp
pop
xadd
retf
dec
sti
cld
jne
in
inc
mov
adc
in
ror
sbb
pop
and
stc
cmp
(bad)
pop
rep
mov
sbb
fmul
out
daa
cs
and
lods
cmp
js
push
test
movs
mov
fadd
push
pop
jo
cdq
(bad)
sar
loop
push
cmp
pop
leave
inc
pushf
adc
mov
add
add
add
push
add
add
add
pop
mov
add
add
pop
inc
outs
jb
js
dec
popa
imul
jb
gs
ins
add
and
