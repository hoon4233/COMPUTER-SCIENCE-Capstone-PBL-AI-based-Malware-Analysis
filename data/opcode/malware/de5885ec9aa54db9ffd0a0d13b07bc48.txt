mov
and
add
lahf
das
xchg
popa
ins
outs
push
popa
je
inc
jo
ins
imul
(bad)
dec
outs
jae
push
xor
fs
ins
add
inc
gs
outs
ins
fs
aas
div
inc
pop
gs
js
je
popa
ins
jne
gs
sti
test
gs
jb
and
and
imul
fs
xor
adc
xor
(bad)
sti
cli
retf
ds
sti
mov
gs
push
imul
xchg
test
xchg
ins
pmulhuw
mov
mov
stos
mov
scas
lock
mov
(bad)
cmp
mov
aaa
icebp
cld
out
cld
cld
out
clc
icebp
out
clc
fdivrp
std
div
out
repnz
add
icebp
clc
out
repz
stc
out
cmc
xor
sti
in
out
cmovns
pop
inc
dec
push
fld
arpl
cdq
pop
js
and
inc
outs
outs
jle
jg
out
pop
ins
jne
je
aaa
cmp
inc
ss
sub
das
push
inc
xor
cmp
sub
and
inc
inc
xor
xor
xor
push
outs
and
mov
mov
ret
in
out
clc
in
(bad)
fsubr
jmp
int3
jecxz
out
xchg
out
(bad)
std
jecxz
jecxz
movs
out
out
add
imul
jg
mov
hlt
in
mov
stos
mov
popf
mov
out
pop
jl
inc
sub
inc
mov
(bad)
mov
cmc
fadd
inc
ffreep
fcmovb
(bad)
cld
rcr
(bad)
rol
rol
push
xchg
loopne
fst
adc
lds
(bad)
ret
daa
mov
inc
(bad)
retf
mov
iret
fcomp
(bad)
sbb
(bad)
inc
(bad)
sbb
in
sti
in
out
in
hlt
clc
(bad)
jmp
out
out
hlt
hlt
cmp
xor
inc
mov
out
scas
lock
mov
outs
stos
inc
ins
outs
jae
dec
popa
outs
fs
je
jo
lock
imul
jne
xor
add
pop
adc
outs
ja
outs
imul
push
outs
or
dec
outs
cld
pop
loope
push
and
mov
mov
jae
ja
jbe
xchg
cs
pushf
xor
outs
push
inc
ret
gs
xchg
cs
jbe
mov
outs
bound
jns
sbb
(bad)
fninit
outs
outs
add
xor
push
push
dec
add
jmp
scas
cmp
sub
popaw
jne
je
lea
push
les
xor
jmp
add
add
jecxz
pushw
jge
pop
push
popa
jb
cld
ins
fist
mov
sub
jb
data16
scas
push
fisub
aaa
or
popf
sub
test
gs
sbb
xchg
clc
retf
popa
cwde
movs
lods
mov
mov
aaa
cmp
stos
mov
jno
jge
shl
lahf
push
push
mov
scas
mov
inc
rcl
adc
popa
adc
push
adc
ins
and
dec
inc
xor
fnsave
pop
scas
retf
push
sbb
cmp
cmp
mov
lods
movs
movs
jae
cmps
xlat
or
jb
jnp
ror
and
pop
fiadd
cmp
cmps
add
mov
mov
push
and
in
or
lock
mov
addr16
xor
dec
sub
adc
sbb
(bad)
mov
ds
inc
dec
xor
sub
push
fidivr
sub
add
and
push
push
(bad)
cmp
cs
gs
cmps
add
cmp
outs
inc
adc
fistp
mov
cmps
cmps
out
movs
movs
fild
and
jo
jb
or
and
ret
pop
sub
mov
mov
daa
pop
add
and
cmp
xor
(bad)
or
inc
dec
dec
pop
mov
or
or
jnp
mov
aas
nop
ja
int3
adc
xchg
sbb
in
xor
or
push
push
push
lea
push
sub
mov
add
cld
adc
jg
repz
call
xor
jbe
push
push
push
add
jl
mov
xor
push
cld
(bad)
fcom
sub
sar
sbb
adc
push
mov
push
mov
mov
and
in
stc
je
sub
push
test
dec
pop
pop
mov
jbe
jg
leave
ret
or
clc
dec
addr16
sti
xlat
xchg
sbb
push
test
jne
pop
mov
sti
jbe
push
add
push
push
add
jne
(bad)
push
add
jge
(bad)
mov
or
sar
push
push
push
push
mov
fwait
pop
test
clc
push
out
retf
imul
cmp
add
or
xor
push
push
xlat
fidivr
xlat
push
add
mul
pop
pop
cmp
mov
and
cmp
pop
pop
js
sbb
sub
xchg
fs
jo
xchg
retf
inc
inc
adc
sbb
push
bswap
and
cs
(bad)
sub
popa
test
in
sub
push
daa
lock
cmp
inc
in
sbb
xchg
xlat
jmp
enter
and
(bad)
or
popa
sub
in
sub
test
ret
outs
push
fdivr
fwait
sbb
cmp
and
adc
dec
inc
or
mov
das
and
loopne
mov
jge
data16
hlt
call
js
test
nop
xor
add
xor
mov
popa
cmp
and
adc
lock
add
xchg
xchg
leave
test
adc
test
cmps
ins
push
or
nop
sbb
enter
adc
push
mov
push
sub
in
mov
adc
push
adc
and
dec
in
fsub
or
clc
es
add
nop
and
loopne
fcomp
stc
arpl
lods
adc
lods
repnz
(bad)
rcr
and
add
mov
clc
xor
and
push
pop
mov
hlt
pop
add
jp
inc
push
fldcw
cdq
push
cmp
jl
lods
std
mov
add
ret
add
push
push
push
pop
mov
in
xor
mov
inc
pop
mov
xor
movsx
std
mov
call
sub
jmp
mov
push
imul
add
adc
adc
aas
sbb
pop
call
out
dec
jns
inc
adc
vpshld
pop
enter
jmp
iret
scas
adc
adc
lea
icebp
push
push
lods
adc
frstor
jecxz
pushf
dec
or
nop
les
inc
push
in
imul
clc
or
pop
test
(bad)
aad
test
add
jg
mov
mov
adc
pop
out
pop
(bad)
push
xor
push
sbb
es
add
lock
gs
push
mov
call
pop
or
test
add
(bad)
fs
adc
and
js
mov
jo
and
sti
fidiv
fs
fisub
push
call
ins
fadd
push
into
jbe
les
ret
je
imul
cmp
xor
test
mov
popf
dec
adc
xlat
les
cmp
pop
push
add
je
pop
repz
pop
test
dec
sbb
push
gs
fbstp
cmp
fcomp
(bad)
sbb
mov
add
add
pop
dec
ret
push
and
push
mov
call
(bad)
xor
(bad)
je
adc
mov
or
pop
div
push
add
push
jle
into
sbb
jbe
adc
mov
cmp
das
push
pop
loope
in
neg
scas
sub
mov
ret
movs
jle
pop
in
add
outs
mov
xchg
lea
xchg
and
xchg
or
xchg
sar
jne
mov
call
or
add
cmp
jb
xor
cmp
jl
jmp
ret
mov
call
sbb
jg
pop
loopne
stc
lea
loope
rep
stos
mov
stos
jnp
clc
(bad)
aaa
inc
outs
imul
push
call
push
push
mov
call
outs
xor
pop
lock
push
cmp
jbe
mov
or
sub
shl
shr
pop
fwait
sbb
in
ja
sub
xor
das
add
cmp
(bad)
cmp
sbb
aam
aaa
test
iret
jle
int
cmp
sbb
xchg
inc
adc
ss
mov
in
add
sbb
adc
inc
cmps
loopne
pop
inc
and
jnp
sub
xchg
dec
enter
ret
and
mov
nop
cmp
adc
sbb
pop
or
sahf
(bad)
mov
repnz
stos
sbb
cmp
in
sub
call
rcr
test
pop
cmp
pop
mov
daa
jae
repz
pop
arpl
cmp
leave
dec
fistp
push
adc
ss
sbb
mov
xchg
out
or
mov
mov
xor
pop
xchg
push
lea
es
xor
fistp
push
push
jbe
adc
pop
or
mov
inc
sub
aam
add
xchg
je
jnp
jb
mov
inc
test
pop
or
push
loope
sub
inc
inc
call
call
fsubr
mov
les
jbe
aaa
mov
sbb
cmp
leave
push
xor
sbb
dec
sahf
fld
clc
adc
add
push
jbe
int3
or
in
sbb
fmul
fyl2xp1
cmp
cli
cmp
cmp
mov
int
ss
sub
sahf
mov
les
push
xchg
hlt
adc
clc
test
xlat
or
es
rcr
adc
mov
sub
fsubr
stos
sbb
mov
repnz
dec
mov
mov
fmul
xlat
cmp
adc
in
push
ss
and
or
sti
push
jne
xchg
int3
push
push
xor
xor
adc
inc
add
push
xor
jmp
test
fild
adc
aaa
or
push
mov
adc
push
rol
addr16
jge
push
(bad)
sub
sub
jmp
mov
or
and
pop
sti
loopne
imul
sbb
mov
les
enter
sub
xor
jb
ins
fbstp
or
or
add
scas
aaa
mov
sub
mov
jbe
cmp
pop
mov
shr
call
cs
pop
pushf
sbb
xchg
daa
mov
push
mov
dec
xchg
cmp
jl
pop
movs
fmul
jg
popa
mov
and
dec
sbb
cmp
sbb
sub
(bad)
jb
mov
daa
jne
movs
and
sbb
adc
in
popf
add
or
pusha
mov
mov
test
sub
fld
xor
div
fadd
jge
push
xor
addr16
sub
adc
movs
(bad)
hlt
jmp
mov
jne
adc
dec
xor
sub
or
fiadd
or
xor
popa
wrmsr
sbb
xchg
pop
sbb
inc
mov
dec
ins
sbb
daa
call
add
sub
jo
mov
loop
mov
ins
and
je
jg
shl
aad
mov
inc
ror
stc
inc
push
cmp
jge
es
add
mov
stos
push
pop
shl
mov
xor
inc
iret
call
adc
dec
retf
adc
mov
push
mul
popf
push
dec
addr16
adc
or
sbb
dec
xchg
or
dec
inc
add
cmp
in
add
inc
iret
retf
sbb
cs
(bad)
enter
sti
sub
add
stc
adc
cdq
mov
gs
(bad)
ror
or
mov
mov
test
pop
mov
sub
in
mov
mov
mov
imul
sbb
mov
sbb
enter
mov
sbb
push
lahf
push
sub
popf
shl
adc
adc
push
fwait
jne
not
mov
jns
or
inc
mov
push
jmp
in
push
les
pop
sub
mov
add
shl
xor
retf
int
pusha
cmp
or
sti
test
das
enter
adc
movs
adc
and
sbb
std
dec
enter
push
mov
or
mov
adc
pusha
xor
lods
or
(bad)
mov
popf
dec
nop
mov
(bad)
repz
inc
jae
cmp
xor
jmp
jne
sti
and
out
cmp
or
enter
jb
aas
imul
(bad)
xchg
push
popa
push
call
int3
fcmovnu
test
push
call
or
xor
(bad)
call
xor
pop
xlat
and
mov
leave
xchg
push
dec
adc
bnd
(bad)
sub
call
sub
ret
and
xlat
pusha
xor
in
(bad)
inc
in
or
repnz
mov
cmc
jne
fisubr
mov
call
and
adc
and
add
mov
sti
sbb
pop
add
jae
add
push
mov
fldcw
pop
adc
xor
cmp
push
ret
cld
clc
adc
and
lock
call
std
pop
adc
call
aam
call
xchg
adc
shl
inc
xchg
push
and
adc
vmovups
adc
mov
mov
int3
lock
es
rcl
adc
fisub
xchg
push
test
call
adc
int3
inc
adc
lods
sbb
push
movs
push
imul
hlt
pop
jg
in
xor
pop
mov
in
jmp
xchg
retf
mov
popa
in
adc
(bad)
push
jmp
in
xchg
jne
ror
clc
sub
and
cmp
push
jb
mov
mov
adc
sub
add
or
call
(bad)
pop
(bad)
cld
jmp
mov
sbb
mov
push
scas
lods
(bad)
fld
inc
dec
shr
inc
dec
jne
cmp
add
mov
push
mov
mov
add
fdiv
sbb
xchg
sbb
jb
bound
sbb
int3
add
cdq
sub
dec
cmp
sbb
sbb
and
lds
adc
or
(bad)
pop
int
ret
(bad)
aam
mov
sub
fdivr
adc
or
in
shld
outs
loope
hlt
(bad)
sub
xchg
xchg
clc
mov
add
pop
je
push
dec
push
or
call
xor
add
push
push
dec
js
push
pop
mov
adc
xor
adc
or
adc
cmp
add
add
ins
inc
push
adc
xor
dec
dec
cmp
shr
push
xor
mov
or
or
int3
mov
adc
lods
inc
add
and
in
lea
sbb
adc
fld
and
adc
dec
lock
inc
mov
push
cmp
lock
xor
mov
(bad)
pop
(bad)
pop
mov
pop
push
mov
dec
push
cld
dec
and
rcl
pop
ror
cmp
dec
jno
cdq
sbb
xor
sub
sbb
xchg
mov
ficomp
ins
pop
add
inc
hlt
ins
dec
addr16
adc
js
aas
pop
xchg
mov
ins
and
je
aas
sbb
lds
push
lea
adc
jl
jae
in
or
add
rcr
fld
repz
xor
test
mov
adc
nop
sbb
mov
lea
aaa
(bad)
call
cmp
mov
or
mov
sbb
in
xor
sbb
xor
mov
or
jp
cld
aam
and
jo
cmp
mov
or
push
adc
imul
in
mov
xchg
add
inc
dec
(bad)
xor
ja
mov
dec
mov
add
cmp
jno
rol
pop
mov
adc
sub
movaps
je
push
cmp
cmp
xchg
sahf
and
jne
stos
add
dec
xchg
mov
in
sub
data16
sub
sbb
dec
pop
sbb
mov
pop
inc
dec
(bad)
adc
xchg
mov
adc
push
les
push
mov
shl
addr16
mov
syscall
lods
lds
mov
lds
lods
mov
bound
jle
aam
fs
push
mov
xor
mov
test
sbb
pop
pop
(bad)
push
fcom
or
cmp
dec
popf
inc
cmp
add
fcomp
or
jne
cmp
in
inc
ret
daa
and
lods
int3
ins
inc
sahf
hlt
rol
mov
adc
push
rol
lods
repz
xchg
xchg
leave
adc
mov
dec
adc
push
mov
cmp
mov
add
xor
cmp
jp
fimul
add
fs
xchg
maxps
into
call
jmp
pop
addr16
add
mov
std
mov
or
dec
cs
shr
mov
sbb
stos
mov
mov
jle
push
xlat
lock
jl
aas
or
add
fild
lock
pusha
inc
sub
cmp
pusha
sub
call
push
mov
push
add
sbb
repz
push
(bad)
cmp
push
or
cmp
in
popf
sub
in
stc
sahf
sbb
adc
dec
mov
add
ins
adc
cmps
daa
leave
outs
retf
std
add
push
push
fcomp
xchg
adc
mov
jmp
add
push
add
push
mov
cmps
and
mov
adc
sub
call
add
push
dec
dec
sub
data16
aam
into
test
(bad)
fld
mov
scas
dec
pop
ja
or
sub
pop
cwde
xchg
rcl
loope
and
add
outs
or
jle
popf
jns
inc
jb
lock
jmp
pop
add
outs
push
xchg
sub
mov
cmp
inc
add
mov
push
arpl
push
cmp
outs
fistp
adc
sbb
cmp
and
pop
inc
sbb
popa
sub
arpl
jp
and
sub
fs
xor
push
test
movs
xchg
push
mov
mov
ficom
lahf
jmp
cmp
mov
or
xchg
sbb
or
jbe
nop
xor
mov
mov
test
push
movs
xchg
push
cmp
push
mov
mov
xlat
stos
sahf
cmp
ja
push
mov
imul
das
push
pop
aas
aad
(bad)
fld
add
aam
fadd
or
mov
and
adc
pop
cmp
xchg
hlt
push
stos
sbb
push
sbb
mov
add
nop
cmp
mov
add
inc
mov
retf
push
leave
xchg
imul
cmp
or
pop
mov
popa
pop
pop
outs
xor
jecxz
mov
pop
test
push
pop
fcom
inc
or
popf
pop
sbb
stc
xor
cmp
ja
add
xchg
fdiv
xlat
cs
jl
jl
push
or
movs
lock
push
xor
sbb
cmc
sar
xchg
cmp
xchg
push
rcl
mov
popf
or
dec
inc
jae
fdivr
mov
aas
push
inc
imul
xchg
lea
inc
pop
sbb
inc
dec
ror
push
dec
inc
sbb
in
adc
js
inc
sbb
je
and
add
test
push
stos
and
jnp
jo
inc
movs
pop
leave
xchg
push
xor
fbld
adc
xchg
xchg
dec
inc
jg
outs
sbb
push
movs
dec
into
add
sbb
adc
push
lea
cmps
fiadd
push
xor
sbb
in
cmp
loopne
inc
adc
or
sbb
push
repnz
int3
add
sub
int
adc
ror
fmul
cmp
adc
jbe
ret
(bad)
inc
jmp
cmp
jb
rep
jmp
mov
inc
and
add
pop
test
push
(bad)
cld
cmps
jmp
scas
nop
pop
adc
cmp
pusha
(bad)
fdiv
jmp
ror
inc
add
push
or
and
retf
mov
int3
lea
cmp
xor
cmps
mov
addr16
nop
and
xlat
sbb
rol
enter
shl
mov
mov
imul
in
cmps
imul
imul
cmp
sub
clc
or
jle
add
add
and
or
nop
mov
fwait
std
adc
or
sub
cmp
xor
push
and
std
jecxz
ja
inc
es
jge
(bad)
lea
inc
xchg
stc
test
or
xor
add
ins
add
outs
mov
stc
fst
add
add
mov
stos
out
sub
lock
or
and
pop
fst
dec
push
pop
ja
es
pop
cmp
inc
add
shl
pop
fs
jg
cmps
imul
imul
cmps
imul
pop
ja
and
les
loopne
adc
ins
and
ja
and
sbb
add
add
scas
imul
add
add
sub
sub
xor
aaa
ins
inc
push
adc
or
dec
data16
inc
lock
fistp
sub
hlt
inc
add
add
fs
aas
enter
or
js
int3
dec
sub
dec
mov
or
dec
aas
enter
nop
dec
enter
outs
mov
jl
test
mov
movs
lods
mov
test
and
add
adc
aas
aam
cs
or
dec
mov
loope
ss
mov
adc
xlat
cmps
je
test
div
push
cmp
jne
mov
pop
(bad)
(bad)
mov
cmp
jne
mov
push
add
cmp
fdiv
jne
cs
jg
loope
mov
mov
cmps
je
mov
mov
and
adc
cmc
cmps
push
adc
jmp
mov
pop
sbb
xor
les
retf
pop
mov
out
jne
or
and
nop
jo
sti
add
fs
(bad)
fild
or
mov
mov
mov
test
cmc
dec
mov
sbb
pop
cmp
je
test
(bad)
jo
cmps
or
shl
aas
sub
inc
call
lea
dec
je
pushf
loopne
mov
sbb
inc
jmp
xor
mov
jmp
or
or
mov
jmp
lea
push
out
test
test
dec
add
out
pop
cmp
add
add
or
push
ret
test
je
inc
cld
sub
outs
test
in
xchg
sbb
popa
add
int
jns
sti
lea
jmp
add
jmp
std
jmp
cld
fs
or
sbb
mov
mov
int3
mov
jmp
jb
cmp
mov
outs
loope
xor
test
aaa
daa
test
(bad)
cmp
into
mov
and
jecxz
or
inc
add
ins
leave
or
mov
(bad)
fadd
div
dec
dec
mov
(bad)
movs
movs
pop
adc
cmp
xor
and
outs
cld
arpl
or
gs
dec
jmp
shl
xchg
adc
jbe
vmulss
push
rep
or
jmp
add
pop
dec
and
gs
and
call
fs
dec
inc
mov
rol
(bad)
sbb
cdq
std
cld
jg
(bad)
aad
or
test
je
(bad)
mov
sti
icebp
(bad)
xchg
jne
shl
test
push
arpl
daa
ins
std
sbb
pop
das
sub
aaa
daa
jne
and
mov
or
and
sub
in
test
pop
mov
dec
dec
xchg
shr
jbe
add
jmp
aaa
jmp
pushf
icebp
inc
cwde
cmp
jae
add
dec
xor
xchg
add
sub
shr
leave
and
jl
cmps
imul
fdivr
rcl
push
or
mov
ss
imul
sub
mov
test
push
ret
cmp
leave
push
scas
mov
sub
inc
or
or
mov
(bad)
cld
lahf
lea
pop
ret
shl
popa
inc
push
fdivr
imul
pop
or
add
fnstenv
leave
je
std
div
or
imul
jecxz
push
or
fimul
retf
pop
xchg
icebp
or
add
xor
cmp
add
xor
popf
fistp
or
(bad)
scas
lods
ret
mov
fdiv
out
sub
xchg
out
cmp
sub
out
call
fimul
fadd
aam
xchg
sub
out
jae
push
std
cld
iret
push
pop
adc
push
pop
mov
mov
loopne
inc
mov
xchg
mov
scas
in
inc
fstp
mov
push
clc
outs
or
push
ret
push
inc
xor
pop
inc
mov
xor
or
push
fcomp
fcomi
inc
add
test
aam
das
sbb
gs
or
jbe
in
fild
inc
push
push
lea
call
pop
inc
or
js
and
les
aaa
mov
sbb
ss
inc
in
mov
sbb
(bad)
push
or
or
or
sbb
fisub
fucomi
sti
jmp
mov
push
aas
outs
pop
cli
shl
pop
ret
mov
pop
ret
push
ror
(bad)
sbb
inc
sbb
dec
and
xchg
adc
inc
iret
xlat
aam
push
retf
jle
call
jmp
pmaxsw
jmp
ds
ds
push
push
xor
cwde
inc
and
das
jo
rcl
or
cmp
sar
jnp
mov
xchg
mov
sbb
outs
dec
fcmovnbe
or
mov
inc
adc
ret
fs
into
add
mov
mov
mov
in
mov
test
push
or
push
or
fwait
mov
and
jmp
or
popa
dec
cmc
fst
imul
in
jmp
push
add
adc
add
add
jl
add
dec
add
je
or
push
inc
je
jb
bound
jae
ins
pop
sub
jae
arpl
lock
fs
leave
daa
(bad)
jae
outs
dec
outs
fs
add
popa
ins
adc
add
cmp
adc
je
push
jo
je
push
outs
imul
outs
popa
fs
(bad)
ins
sti
fimul
push
dec
jae
add
push
popa
imul
jb
xor
push
xor
push
pusha
dec
push
lods
mov
inc
js
push
ins
inc
inc
in
adc
push
mov
mov
xor
push
int3
dec
hlt
and
outs
dec
push
or
ja
pop
add
add
adc
popf
ins
xchg
arpl
je
jo
ja
call
add
dec
push
popa
outs
arpl
push
cld
outs
jae
int
add
dec
push
lds
cld
xchg
dec
jae
or
or
mov
mov
inc
push
in
ja
mov
jb
data16
push
arpl
stc
call
push
push
inc
add
dec
add
add
cld
pop
loopne
sidtd
add
or
inc
xor
cwde
mov
pop
(bad)
push
fiadd
pop
or
sbb
xchg
mov
or
pop
and
and
outs
or
cs
or
js
or
or
add
es
cmps
imul
push
jbe
arpl
(bad)
das
mov
sbb
add
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
popa
jmp
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
